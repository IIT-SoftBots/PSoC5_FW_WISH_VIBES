ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"interruptions.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              		.type	pwm_preload_values, %object
  22              		.size	pwm_preload_values, 29
  23              	pwm_preload_values:
  24 0000 64       		.byte	100
  25 0001 53       		.byte	83
  26 0002 4E       		.byte	78
  27 0003 4C       		.byte	76
  28 0004 4A       		.byte	74
  29 0005 48       		.byte	72
  30 0006 46       		.byte	70
  31 0007 44       		.byte	68
  32 0008 43       		.byte	67
  33 0009 41       		.byte	65
  34 000a 40       		.byte	64
  35 000b 3F       		.byte	63
  36 000c 3E       		.byte	62
  37 000d 3D       		.byte	61
  38 000e 3C       		.byte	60
  39 000f 3B       		.byte	59
  40 0010 3A       		.byte	58
  41 0011 39       		.byte	57
  42 0012 38       		.byte	56
  43 0013 38       		.byte	56
  44 0014 37       		.byte	55
  45 0015 36       		.byte	54
  46 0016 36       		.byte	54
  47 0017 35       		.byte	53
  48 0018 34       		.byte	52
  49 0019 34       		.byte	52
  50 001a 34       		.byte	52
  51 001b 33       		.byte	51
  52 001c 33       		.byte	51
  53              		.section	.text.ISR_RS485_RX_ExInterrupt,"ax",%progbits
  54              		.align	2
  55              		.global	ISR_RS485_RX_ExInterrupt
  56              		.thumb
  57              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 2


  58              		.type	ISR_RS485_RX_ExInterrupt, %function
  59              	ISR_RS485_RX_ExInterrupt:
  60              	.LFB64:
  61              		.file 1 "..\\src\\interruptions.c"
   1:..\src/interruptions.c **** // ----------------------------------------------------------------------------
   2:..\src/interruptions.c **** // BSD 3-Clause License
   3:..\src/interruptions.c **** 
   4:..\src/interruptions.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/interruptions.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/interruptions.c **** // All rights reserved.
   7:..\src/interruptions.c **** 
   8:..\src/interruptions.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/interruptions.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/interruptions.c **** 
  11:..\src/interruptions.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/interruptions.c **** //   list of conditions and the following disclaimer.
  13:..\src/interruptions.c **** 
  14:..\src/interruptions.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/interruptions.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/interruptions.c **** //   and/or other materials provided with the distribution.
  17:..\src/interruptions.c **** 
  18:..\src/interruptions.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/interruptions.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/interruptions.c **** //   this software without specific prior written permission.
  21:..\src/interruptions.c **** 
  22:..\src/interruptions.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/interruptions.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:..\src/interruptions.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/interruptions.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/interruptions.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/interruptions.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/interruptions.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/interruptions.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/interruptions.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/interruptions.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/interruptions.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/interruptions.c **** // ----------------------------------------------------------------------------
  34:..\src/interruptions.c **** 
  35:..\src/interruptions.c **** /**
  36:..\src/interruptions.c **** * \file         interruptions.c
  37:..\src/interruptions.c **** *
  38:..\src/interruptions.c **** * \brief        Interruption handling and firmware core functions
  39:..\src/interruptions.c **** * \date         March 20th, 2020
  40:..\src/interruptions.c **** * \author       _Centro "E.Piaggio"_
  41:..\src/interruptions.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42:..\src/interruptions.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  43:..\src/interruptions.c **** */
  44:..\src/interruptions.c **** 
  45:..\src/interruptions.c **** 
  46:..\src/interruptions.c **** //=================================================================     includes
  47:..\src/interruptions.c **** #include "interruptions.h"
  48:..\src/interruptions.c **** 
  49:..\src/interruptions.c **** //==============================================================================
  50:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  51:..\src/interruptions.c **** //==============================================================================
  52:..\src/interruptions.c **** // Processing RS-485 data frame:
  53:..\src/interruptions.c **** //
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 3


  54:..\src/interruptions.c **** // - 0:     Waits for beginning characters
  55:..\src/interruptions.c **** // - 1:     Waits for ID;
  56:..\src/interruptions.c **** // - 2:     Data length;
  57:..\src/interruptions.c **** // - 3:     Receive all bytes;
  58:..\src/interruptions.c **** // - 4:     Wait for another device end of transmission;
  59:..\src/interruptions.c **** //
  60:..\src/interruptions.c **** //==============================================================================
  61:..\src/interruptions.c **** 
  62:..\src/interruptions.c **** // PWM values needed to obtain 11.5 V given a certain input tension
  63:..\src/interruptions.c **** // Numbers are sperimentally calculated //[index] (millivolts)
  64:..\src/interruptions.c **** static const uint8 pwm_preload_values[29] = {100,    //0 (11500)
  65:..\src/interruptions.c ****                                               83,
  66:..\src/interruptions.c ****                                               78,
  67:..\src/interruptions.c ****                                               76,
  68:..\src/interruptions.c ****                                               74,
  69:..\src/interruptions.c ****                                               72,    //5 (14000)
  70:..\src/interruptions.c ****                                               70,
  71:..\src/interruptions.c ****                                               68,
  72:..\src/interruptions.c ****                                               67,
  73:..\src/interruptions.c ****                                               65,
  74:..\src/interruptions.c ****                                               64,    //10 (16500)
  75:..\src/interruptions.c ****                                               63,
  76:..\src/interruptions.c ****                                               62,
  77:..\src/interruptions.c ****                                               61,
  78:..\src/interruptions.c ****                                               60,
  79:..\src/interruptions.c ****                                               59,    //15 (19000)
  80:..\src/interruptions.c ****                                               58,
  81:..\src/interruptions.c ****                                               57,
  82:..\src/interruptions.c ****                                               56,
  83:..\src/interruptions.c ****                                               56,
  84:..\src/interruptions.c ****                                               55,    //20 (21500)
  85:..\src/interruptions.c ****                                               54,
  86:..\src/interruptions.c ****                                               54,
  87:..\src/interruptions.c ****                                               53,
  88:..\src/interruptions.c ****                                               52,
  89:..\src/interruptions.c ****                                               52,    //25 (24000)
  90:..\src/interruptions.c ****                                               52,
  91:..\src/interruptions.c ****                                               51,
  92:..\src/interruptions.c ****                                               51};   //28 (25500)
  93:..\src/interruptions.c **** 
  94:..\src/interruptions.c **** //==============================================================================
  95:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  96:..\src/interruptions.c **** //==============================================================================
  97:..\src/interruptions.c **** 
  98:..\src/interruptions.c **** CY_ISR(ISR_RS485_RX_ExInterrupt) {
  62              		.loc 1 98 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  99:..\src/interruptions.c **** 
 100:..\src/interruptions.c ****     // Set RS485 flag
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 4


 101:..\src/interruptions.c ****     
 102:..\src/interruptions.c ****     interrupt_flag = TRUE;
  72              		.loc 1 102 0
  73 0004 034B     		ldr	r3, .L2
  74 0006 0122     		movs	r2, #1
  75 0008 1A70     		strb	r2, [r3]
 103:..\src/interruptions.c ****      
 104:..\src/interruptions.c **** }
  76              		.loc 1 104 0
  77 000a 00BF     		nop
  78 000c BD46     		mov	sp, r7
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 000e 80BC     		pop	{r7}
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0010 7047     		bx	lr
  85              	.L3:
  86 0012 00BF     		.align	2
  87              	.L2:
  88 0014 00000000 		.word	interrupt_flag
  89              		.cfi_endproc
  90              	.LFE64:
  91              		.size	ISR_RS485_RX_ExInterrupt, .-ISR_RS485_RX_ExInterrupt
  92              		.section	.text.ISR_CYCLES_Handler,"ax",%progbits
  93              		.align	2
  94              		.global	ISR_CYCLES_Handler
  95              		.thumb
  96              		.thumb_func
  97              		.type	ISR_CYCLES_Handler, %function
  98              	ISR_CYCLES_Handler:
  99              	.LFB65:
 105:..\src/interruptions.c **** 
 106:..\src/interruptions.c **** //==============================================================================
 107:..\src/interruptions.c **** //                                                        CYCLES TIMER INTERRUPT
 108:..\src/interruptions.c **** //==============================================================================
 109:..\src/interruptions.c **** CY_ISR(ISR_CYCLES_Handler){
 100              		.loc 1 109 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0000 80B4     		push	{r7}
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110:..\src/interruptions.c **** 
 111:..\src/interruptions.c ****     // Set cycles interrupt flag
 112:..\src/interruptions.c ****     
 113:..\src/interruptions.c ****     cycles_interrupt_flag = TRUE;
 110              		.loc 1 113 0
 111 0004 044B     		ldr	r3, .L5
 112 0006 0122     		movs	r2, #1
 113 0008 1A70     		strb	r2, [r3]
 114:..\src/interruptions.c ****     
 115:..\src/interruptions.c ****     CYCLES_TIMER_STATUS;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 5


 114              		.loc 1 115 0
 115 000a 044B     		ldr	r3, .L5+4
 116 000c 1B78     		ldrb	r3, [r3]
 116:..\src/interruptions.c **** 
 117:..\src/interruptions.c **** }
 117              		.loc 1 117 0
 118 000e 00BF     		nop
 119 0010 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0012 80BC     		pop	{r7}
 123              		.cfi_restore 7
 124              		.cfi_def_cfa_offset 0
 125 0014 7047     		bx	lr
 126              	.L6:
 127 0016 00BF     		.align	2
 128              	.L5:
 129 0018 00000000 		.word	cycles_interrupt_flag
 130 001c 034F0040 		.word	1073762051
 131              		.cfi_endproc
 132              	.LFE65:
 133              		.size	ISR_CYCLES_Handler, .-ISR_CYCLES_Handler
 134              		.section	.text.interrupt_manager,"ax",%progbits
 135              		.align	2
 136              		.global	interrupt_manager
 137              		.thumb
 138              		.thumb_func
 139              		.type	interrupt_manager, %function
 140              	interrupt_manager:
 141              	.LFB66:
 118:..\src/interruptions.c **** 
 119:..\src/interruptions.c **** //==============================================================================
 120:..\src/interruptions.c **** //                                                             INTERRUPT MANAGER
 121:..\src/interruptions.c **** //==============================================================================
 122:..\src/interruptions.c **** // Manage interrupt from RS485 
 123:..\src/interruptions.c **** //==============================================================================
 124:..\src/interruptions.c **** // Processing RS-485 data frame:
 125:..\src/interruptions.c **** //
 126:..\src/interruptions.c **** // - WAIT_START:    Waits for beginning characters;
 127:..\src/interruptions.c **** // - WAIT_ID:       Waits for ID;
 128:..\src/interruptions.c **** // - WAIT_LENGTH:   Data length;
 129:..\src/interruptions.c **** // - RECEIVE:       Receive all bytes;
 130:..\src/interruptions.c **** // - UNLOAD:        Wait for another device end of transmission;
 131:..\src/interruptions.c **** //
 132:..\src/interruptions.c **** //==============================================================================
 133:..\src/interruptions.c **** 
 134:..\src/interruptions.c **** void interrupt_manager(){
 142              		.loc 1 134 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 82B0     		sub	sp, sp, #8
 151              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 6


 152 0004 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 135:..\src/interruptions.c **** 
 136:..\src/interruptions.c ****     
 137:..\src/interruptions.c ****     //===========================================     local variables definition
 138:..\src/interruptions.c **** 
 139:..\src/interruptions.c ****     static uint8 CYDATA state = WAIT_START;                      // state
 140:..\src/interruptions.c ****     
 141:..\src/interruptions.c ****     //------------------------------------------------- local data packet
 142:..\src/interruptions.c ****     static uint8 CYDATA data_packet_index;
 143:..\src/interruptions.c ****     static uint8 CYDATA data_packet_length;
 144:..\src/interruptions.c ****     static uint8 data_packet_buffer[128];                     
 145:..\src/interruptions.c ****     static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 146:..\src/interruptions.c ****     //-------------------------------------------------
 147:..\src/interruptions.c **** 
 148:..\src/interruptions.c ****     uint8 CYDATA    rx_data;                            // RS485 UART rx data
 149:..\src/interruptions.c ****     CYBIT           rx_data_type = TRUE;                       // my id?
 154              		.loc 1 149 0
 155 0006 0123     		movs	r3, #1
 156 0008 FB71     		strb	r3, [r7, #7]
 150:..\src/interruptions.c ****     uint8 CYDATA    package_count = 0;                     
 157              		.loc 1 150 0
 158 000a 0023     		movs	r3, #0
 159 000c BB71     		strb	r3, [r7, #6]
 151:..\src/interruptions.c **** 
 152:..\src/interruptions.c ****     //======================================================     receive routine
 153:..\src/interruptions.c ****     
 154:..\src/interruptions.c ****     while(UART_RS485_GetRxBufferSize() && (package_count < 100)){
 160              		.loc 1 154 0
 161 000e DFE0     		b	.L8
 162              	.L28:
 155:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 156:..\src/interruptions.c **** 
 157:..\src/interruptions.c ****         // Get next char
 158:..\src/interruptions.c ****         rx_data = UART_RS485_GetChar();
 163              		.loc 1 158 0
 164 0010 FFF7FEFF 		bl	UART_RS485_GetChar
 165 0014 0346     		mov	r3, r0
 166 0016 7B71     		strb	r3, [r7, #5]
 159:..\src/interruptions.c ****         
 160:..\src/interruptions.c ****         switch (state) {
 167              		.loc 1 160 0
 168 0018 744B     		ldr	r3, .L31
 169 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 001c 042B     		cmp	r3, #4
 171 001e 00F2D780 		bhi	.L8
 172 0022 01A2     		adr	r2, .L10
 173 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 174              		.p2align 2
 175              	.L10:
 176 0028 3D000000 		.word	.L9+1
 177 002c A3000000 		.word	.L11+1
 178 0030 DF000000 		.word	.L12+1
 179 0034 2D010000 		.word	.L13+1
 180 0038 97010000 		.word	.L14+1
 181              		.p2align 1
 182              	.L9:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 7


 161:..\src/interruptions.c ****             //-----     wait for frame start     -------------------------------
 162:..\src/interruptions.c ****             case WAIT_START:
 163:..\src/interruptions.c ****             
 164:..\src/interruptions.c ****                 rx_queue[0] = rx_queue[1];
 183              		.loc 1 164 0
 184 003c 6C4B     		ldr	r3, .L31+4
 185 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 186 0040 6B4B     		ldr	r3, .L31+4
 187 0042 1A70     		strb	r2, [r3]
 165:..\src/interruptions.c ****                 rx_queue[1] = rx_queue[2];
 188              		.loc 1 165 0
 189 0044 6A4B     		ldr	r3, .L31+4
 190 0046 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 191 0048 694B     		ldr	r3, .L31+4
 192 004a 5A70     		strb	r2, [r3, #1]
 166:..\src/interruptions.c ****                 rx_queue[2] = rx_data;
 193              		.loc 1 166 0
 194 004c 684A     		ldr	r2, .L31+4
 195 004e 7B79     		ldrb	r3, [r7, #5]
 196 0050 9370     		strb	r3, [r2, #2]
 167:..\src/interruptions.c ****                 
 168:..\src/interruptions.c ****                 // Check for header configuration package
 169:..\src/interruptions.c ****                 if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 197              		.loc 1 169 0
 198 0052 674B     		ldr	r3, .L31+4
 199 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 200 0056 3A2B     		cmp	r3, #58
 201 0058 10D1     		bne	.L15
 202              		.loc 1 169 0 is_stmt 0 discriminator 1
 203 005a 654B     		ldr	r3, .L31+4
 204 005c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 205 005e 3A2B     		cmp	r3, #58
 206 0060 0CD1     		bne	.L15
 170:..\src/interruptions.c ****                     rx_queue[0] = 0;
 207              		.loc 1 170 0 is_stmt 1
 208 0062 634B     		ldr	r3, .L31+4
 209 0064 0022     		movs	r2, #0
 210 0066 1A70     		strb	r2, [r3]
 171:..\src/interruptions.c ****                     rx_queue[1] = 0;
 211              		.loc 1 171 0
 212 0068 614B     		ldr	r3, .L31+4
 213 006a 0022     		movs	r2, #0
 214 006c 5A70     		strb	r2, [r3, #1]
 172:..\src/interruptions.c ****                     rx_queue[2] = 0;
 215              		.loc 1 172 0
 216 006e 604B     		ldr	r3, .L31+4
 217 0070 0022     		movs	r2, #0
 218 0072 9A70     		strb	r2, [r3, #2]
 173:..\src/interruptions.c ****                     state       = WAIT_ID;                    
 219              		.loc 1 173 0
 220 0074 5D4B     		ldr	r3, .L31
 221 0076 0122     		movs	r2, #1
 222 0078 1A70     		strb	r2, [r3]
 223 007a 11E0     		b	.L16
 224              	.L15:
 174:..\src/interruptions.c ****                 }else
 175:..\src/interruptions.c ****                     if ((rx_queue[0] == 63) &&      //ASCII - ?
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 8


 225              		.loc 1 175 0
 226 007c 5C4B     		ldr	r3, .L31+4
 227 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 0080 3F2B     		cmp	r3, #63
 229 0082 40F0A580 		bne	.L8
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 230              		.loc 1 176 0 discriminator 1
 231 0086 5A4B     		ldr	r3, .L31+4
 232 0088 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 175:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 233              		.loc 1 175 0 discriminator 1
 234 008a 0D2B     		cmp	r3, #13
 235 008c 40F0A080 		bne	.L8
 177:..\src/interruptions.c ****                         (rx_queue[2] == 10))        //ASCII - LF)
 236              		.loc 1 177 0
 237 0090 574B     		ldr	r3, .L31+4
 238 0092 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 239              		.loc 1 176 0
 240 0094 0A2B     		cmp	r3, #10
 241 0096 40F09B80 		bne	.L8
 178:..\src/interruptions.c ****                         infoGet(INFO_ALL);
 242              		.loc 1 178 0
 243 009a 0020     		movs	r0, #0
 244 009c FFF7FEFF 		bl	infoGet
 245              	.L16:
 179:..\src/interruptions.c ****                 break;
 246              		.loc 1 179 0
 247 00a0 96E0     		b	.L8
 248              	.L11:
 180:..\src/interruptions.c **** 
 181:..\src/interruptions.c ****             //-----     wait for id     ----------------------------------------
 182:..\src/interruptions.c ****             case  WAIT_ID:
 183:..\src/interruptions.c **** 
 184:..\src/interruptions.c ****                 // packet is for my ID or is broadcast
 185:..\src/interruptions.c **** #ifdef MASTER_FW
 186:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0 || (master_mode && rx_data == c_mem.MS.
 249              		.loc 1 186 0
 250 00a2 544B     		ldr	r3, .L31+8
 251 00a4 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 252 00a6 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 253 00a8 9A42     		cmp	r2, r3
 254 00aa 0CD0     		beq	.L17
 255              		.loc 1 186 0 is_stmt 0 discriminator 1
 256 00ac 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 257 00ae 002B     		cmp	r3, #0
 258 00b0 09D0     		beq	.L17
 259              		.loc 1 186 0 discriminator 2
 260 00b2 514B     		ldr	r3, .L31+12
 261 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 262 00b6 002B     		cmp	r3, #0
 263 00b8 08D0     		beq	.L18
 264              		.loc 1 186 0 discriminator 3
 265 00ba 4E4B     		ldr	r3, .L31+8
 266 00bc 93F84130 		ldrb	r3, [r3, #65]	@ zero_extendqisi2
 267 00c0 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 268 00c2 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 9


 269 00c4 02D1     		bne	.L18
 270              	.L17:
 187:..\src/interruptions.c ****                    rx_data_type = FALSE;
 271              		.loc 1 187 0 is_stmt 1
 272 00c6 0023     		movs	r3, #0
 273 00c8 FB71     		strb	r3, [r7, #7]
 274 00ca 01E0     		b	.L19
 275              	.L18:
 188:..\src/interruptions.c ****                 else                //packet is for others
 189:..\src/interruptions.c ****                     rx_data_type = TRUE;
 276              		.loc 1 189 0
 277 00cc 0123     		movs	r3, #1
 278 00ce FB71     		strb	r3, [r7, #7]
 279              	.L19:
 190:..\src/interruptions.c **** #else
 191:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0)
 192:..\src/interruptions.c ****                     rx_data_type = FALSE;
 193:..\src/interruptions.c ****                 else                //packet is for others
 194:..\src/interruptions.c ****                     rx_data_type = TRUE;
 195:..\src/interruptions.c **** #endif                
 196:..\src/interruptions.c ****                 data_packet_length = 0;
 280              		.loc 1 196 0
 281 00d0 4A4B     		ldr	r3, .L31+16
 282 00d2 0022     		movs	r2, #0
 283 00d4 1A70     		strb	r2, [r3]
 197:..\src/interruptions.c ****                 state = WAIT_LENGTH;
 284              		.loc 1 197 0
 285 00d6 454B     		ldr	r3, .L31
 286 00d8 0222     		movs	r2, #2
 287 00da 1A70     		strb	r2, [r3]
 198:..\src/interruptions.c ****                 break;
 288              		.loc 1 198 0
 289 00dc 78E0     		b	.L8
 290              	.L12:
 199:..\src/interruptions.c **** 
 200:..\src/interruptions.c ****             //-----     wait for length     ------------------------------------
 201:..\src/interruptions.c ****             case  WAIT_LENGTH:
 202:..\src/interruptions.c **** 
 203:..\src/interruptions.c ****                 data_packet_length = rx_data;
 291              		.loc 1 203 0
 292 00de 474A     		ldr	r2, .L31+16
 293 00e0 7B79     		ldrb	r3, [r7, #5]
 294 00e2 1370     		strb	r3, [r2]
 204:..\src/interruptions.c ****                 // check validity of pack length
 205:..\src/interruptions.c ****                 if (data_packet_length <= 1) {
 295              		.loc 1 205 0
 296 00e4 454B     		ldr	r3, .L31+16
 297 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 298 00e8 012B     		cmp	r3, #1
 299 00ea 06D8     		bhi	.L20
 206:..\src/interruptions.c ****                     data_packet_length = 0;
 300              		.loc 1 206 0
 301 00ec 434B     		ldr	r3, .L31+16
 302 00ee 0022     		movs	r2, #0
 303 00f0 1A70     		strb	r2, [r3]
 207:..\src/interruptions.c ****                     state = WAIT_START;
 304              		.loc 1 207 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 10


 305 00f2 3E4B     		ldr	r3, .L31
 306 00f4 0022     		movs	r2, #0
 307 00f6 1A70     		strb	r2, [r3]
 308 00f8 6AE0     		b	.L8
 309              	.L20:
 208:..\src/interruptions.c ****                 } else if (data_packet_length > 128) {
 310              		.loc 1 208 0
 311 00fa 404B     		ldr	r3, .L31+16
 312 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 00fe 802B     		cmp	r3, #128
 314 0100 06D9     		bls	.L22
 209:..\src/interruptions.c ****                     data_packet_length = 0;
 315              		.loc 1 209 0
 316 0102 3E4B     		ldr	r3, .L31+16
 317 0104 0022     		movs	r2, #0
 318 0106 1A70     		strb	r2, [r3]
 210:..\src/interruptions.c ****                     state = WAIT_START;
 319              		.loc 1 210 0
 320 0108 384B     		ldr	r3, .L31
 321 010a 0022     		movs	r2, #0
 322 010c 1A70     		strb	r2, [r3]
 323 010e 5FE0     		b	.L8
 324              	.L22:
 211:..\src/interruptions.c ****                 } else {
 212:..\src/interruptions.c ****                     data_packet_index = 0;
 325              		.loc 1 212 0
 326 0110 3B4B     		ldr	r3, .L31+20
 327 0112 0022     		movs	r2, #0
 328 0114 1A70     		strb	r2, [r3]
 213:..\src/interruptions.c ****                     
 214:..\src/interruptions.c ****                     if(rx_data_type == FALSE)
 329              		.loc 1 214 0
 330 0116 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 331 0118 002B     		cmp	r3, #0
 332 011a 03D1     		bne	.L23
 215:..\src/interruptions.c ****                         state = RECEIVE;          // packet for me or broadcast
 333              		.loc 1 215 0
 334 011c 334B     		ldr	r3, .L31
 335 011e 0322     		movs	r2, #3
 336 0120 1A70     		strb	r2, [r3]
 337 0122 55E0     		b	.L8
 338              	.L23:
 216:..\src/interruptions.c ****                     else
 217:..\src/interruptions.c ****                         state = UNLOAD;           // packet for others
 339              		.loc 1 217 0
 340 0124 314B     		ldr	r3, .L31
 341 0126 0422     		movs	r2, #4
 342 0128 1A70     		strb	r2, [r3]
 218:..\src/interruptions.c ****                 }
 219:..\src/interruptions.c ****                 break;
 343              		.loc 1 219 0
 344 012a 51E0     		b	.L8
 345              	.L13:
 220:..\src/interruptions.c **** 
 221:..\src/interruptions.c ****             //-----     receiving     -------------------------------------------
 222:..\src/interruptions.c ****             case RECEIVE:
 223:..\src/interruptions.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 11


 224:..\src/interruptions.c ****                 data_packet_buffer[data_packet_index] = rx_data;
 346              		.loc 1 224 0
 347 012c 344B     		ldr	r3, .L31+20
 348 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 349 0130 1946     		mov	r1, r3
 350 0132 344A     		ldr	r2, .L31+24
 351 0134 7B79     		ldrb	r3, [r7, #5]
 352 0136 5354     		strb	r3, [r2, r1]
 225:..\src/interruptions.c ****                 data_packet_index++;
 353              		.loc 1 225 0
 354 0138 314B     		ldr	r3, .L31+20
 355 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 356 013c 0133     		adds	r3, r3, #1
 357 013e DAB2     		uxtb	r2, r3
 358 0140 2F4B     		ldr	r3, .L31+20
 359 0142 1A70     		strb	r2, [r3]
 226:..\src/interruptions.c ****                 
 227:..\src/interruptions.c ****                 // check end of transmission
 228:..\src/interruptions.c ****                 if (data_packet_index >= data_packet_length) {
 360              		.loc 1 228 0
 361 0144 2E4B     		ldr	r3, .L31+20
 362 0146 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 363 0148 2C4B     		ldr	r3, .L31+16
 364 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 365 014c 9A42     		cmp	r2, r3
 366 014e 3FD3     		bcc	.L8
 229:..\src/interruptions.c ****                     // verify if frame ID corresponded to the device ID
 230:..\src/interruptions.c ****                     if (rx_data_type == FALSE) {
 367              		.loc 1 230 0
 368 0150 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 369 0152 002B     		cmp	r3, #0
 370 0154 12D1     		bne	.L25
 231:..\src/interruptions.c ****                         // copying data from buffer to global packet
 232:..\src/interruptions.c ****                         memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 371              		.loc 1 232 0
 372 0156 294B     		ldr	r3, .L31+16
 373 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 374 015a 1A46     		mov	r2, r3
 375 015c 2949     		ldr	r1, .L31+24
 376 015e 2A48     		ldr	r0, .L31+28
 377 0160 FFF7FEFF 		bl	memcpy
 233:..\src/interruptions.c ****                         g_rx.length = data_packet_length;
 378              		.loc 1 233 0
 379 0164 254B     		ldr	r3, .L31+16
 380 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 381 0168 1AB2     		sxth	r2, r3
 382 016a 274B     		ldr	r3, .L31+28
 383 016c A3F88020 		strh	r2, [r3, #128]	@ movhi
 234:..\src/interruptions.c ****                         g_rx.ready  = 1;
 384              		.loc 1 234 0
 385 0170 254B     		ldr	r3, .L31+28
 386 0172 0122     		movs	r2, #1
 387 0174 83F88420 		strb	r2, [r3, #132]
 235:..\src/interruptions.c ****                         commProcess();
 388              		.loc 1 235 0
 389 0178 FFF7FEFF 		bl	commProcess
 390              	.L25:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 12


 236:..\src/interruptions.c ****                     }
 237:..\src/interruptions.c ****                     
 238:..\src/interruptions.c ****                     data_packet_index  = 0;
 391              		.loc 1 238 0
 392 017c 204B     		ldr	r3, .L31+20
 393 017e 0022     		movs	r2, #0
 394 0180 1A70     		strb	r2, [r3]
 239:..\src/interruptions.c ****                     data_packet_length = 0;
 395              		.loc 1 239 0
 396 0182 1E4B     		ldr	r3, .L31+16
 397 0184 0022     		movs	r2, #0
 398 0186 1A70     		strb	r2, [r3]
 240:..\src/interruptions.c ****                     state              = WAIT_START;
 399              		.loc 1 240 0
 400 0188 184B     		ldr	r3, .L31
 401 018a 0022     		movs	r2, #0
 402 018c 1A70     		strb	r2, [r3]
 241:..\src/interruptions.c ****                     package_count++;
 403              		.loc 1 241 0
 404 018e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 405 0190 0133     		adds	r3, r3, #1
 406 0192 BB71     		strb	r3, [r7, #6]
 242:..\src/interruptions.c ****                 
 243:..\src/interruptions.c ****                 }
 244:..\src/interruptions.c ****                 break;
 407              		.loc 1 244 0
 408 0194 1CE0     		b	.L8
 409              	.L14:
 245:..\src/interruptions.c **** 
 246:..\src/interruptions.c ****             //-----     other device is receving     ---------------------------
 247:..\src/interruptions.c ****             case UNLOAD:
 248:..\src/interruptions.c ****                 if (!(--data_packet_length)) {
 410              		.loc 1 248 0
 411 0196 194B     		ldr	r3, .L31+16
 412 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 413 019a 013B     		subs	r3, r3, #1
 414 019c DAB2     		uxtb	r2, r3
 415 019e 174B     		ldr	r3, .L31+16
 416 01a0 1A70     		strb	r2, [r3]
 417 01a2 164B     		ldr	r3, .L31+16
 418 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 419 01a6 002B     		cmp	r3, #0
 420 01a8 11D1     		bne	.L30
 249:..\src/interruptions.c ****                     data_packet_index  = 0;
 421              		.loc 1 249 0
 422 01aa 154B     		ldr	r3, .L31+20
 423 01ac 0022     		movs	r2, #0
 424 01ae 1A70     		strb	r2, [r3]
 250:..\src/interruptions.c ****                     data_packet_length = 0;
 425              		.loc 1 250 0
 426 01b0 124B     		ldr	r3, .L31+16
 427 01b2 0022     		movs	r2, #0
 428 01b4 1A70     		strb	r2, [r3]
 251:..\src/interruptions.c ****                     RS485_CTS_Write(1);
 429              		.loc 1 251 0
 430 01b6 0120     		movs	r0, #1
 431 01b8 FFF7FEFF 		bl	RS485_CTS_Write
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 13


 252:..\src/interruptions.c ****                     RS485_CTS_Write(0);
 432              		.loc 1 252 0
 433 01bc 0020     		movs	r0, #0
 434 01be FFF7FEFF 		bl	RS485_CTS_Write
 253:..\src/interruptions.c ****                     state              = WAIT_START;
 435              		.loc 1 253 0
 436 01c2 0A4B     		ldr	r3, .L31
 437 01c4 0022     		movs	r2, #0
 438 01c6 1A70     		strb	r2, [r3]
 254:..\src/interruptions.c ****                     package_count++;
 439              		.loc 1 254 0
 440 01c8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 441 01ca 0133     		adds	r3, r3, #1
 442 01cc BB71     		strb	r3, [r7, #6]
 443              	.L30:
 255:..\src/interruptions.c ****                 }
 256:..\src/interruptions.c ****                 break;
 444              		.loc 1 256 0
 445 01ce 00BF     		nop
 446              	.L8:
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 447              		.loc 1 154 0
 448 01d0 FFF7FEFF 		bl	UART_RS485_GetRxBufferSize
 449 01d4 0346     		mov	r3, r0
 450 01d6 002B     		cmp	r3, #0
 451 01d8 03D0     		beq	.L29
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 452              		.loc 1 154 0 is_stmt 0 discriminator 1
 453 01da BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 454 01dc 632B     		cmp	r3, #99
 455 01de 7FF617AF 		bls	.L28
 456              	.L29:
 257:..\src/interruptions.c ****         }
 258:..\src/interruptions.c ****     }
 259:..\src/interruptions.c **** }
 457              		.loc 1 259 0 is_stmt 1
 458 01e2 00BF     		nop
 459 01e4 0837     		adds	r7, r7, #8
 460              		.cfi_def_cfa_offset 8
 461 01e6 BD46     		mov	sp, r7
 462              		.cfi_def_cfa_register 13
 463              		@ sp needed
 464 01e8 80BD     		pop	{r7, pc}
 465              	.L32:
 466 01ea 00BF     		.align	2
 467              	.L31:
 468 01ec 00000000 		.word	state.9746
 469 01f0 04000000 		.word	rx_queue.9750
 470 01f4 00000000 		.word	c_mem
 471 01f8 00000000 		.word	master_mode
 472 01fc 07000000 		.word	data_packet_length.9748
 473 0200 08000000 		.word	data_packet_index.9747
 474 0204 0C000000 		.word	data_packet_buffer.9749
 475 0208 00000000 		.word	g_rx
 476              		.cfi_endproc
 477              	.LFE66:
 478              		.size	interrupt_manager, .-interrupt_manager
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 14


 479              		.global	__aeabi_i2f
 480              		.global	__aeabi_fdiv
 481              		.section	.text.function_scheduler,"ax",%progbits
 482              		.align	2
 483              		.global	function_scheduler
 484              		.thumb
 485              		.thumb_func
 486              		.type	function_scheduler, %function
 487              	function_scheduler:
 488              	.LFB67:
 260:..\src/interruptions.c **** //==============================================================================
 261:..\src/interruptions.c **** //                                                            FUNCTION SCHEDULER
 262:..\src/interruptions.c **** //==============================================================================
 263:..\src/interruptions.c **** // Call all the function with the right frequency
 264:..\src/interruptions.c **** //==============================================================================
 265:..\src/interruptions.c **** // Base frequency 5000 Hz (110 us - max. 200 us cycle time)
 266:..\src/interruptions.c **** //==============================================================================
 267:..\src/interruptions.c **** 
 268:..\src/interruptions.c **** void function_scheduler(void) {
 489              		.loc 1 268 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493 0000 80B5     		push	{r7, lr}
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 7, -8
 496              		.cfi_offset 14, -4
 497 0002 00AF     		add	r7, sp, #0
 498              		.cfi_def_cfa_register 7
 269:..\src/interruptions.c ****       
 270:..\src/interruptions.c **** 
 271:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x00);
 499              		.loc 1 271 0
 500 0004 0020     		movs	r0, #0
 501 0006 FFF7FEFF 		bl	MY_TIMER_REG_Write
 272:..\src/interruptions.c ****     timer_value0 = (uint32)MY_TIMER_ReadCounter();/*
 502              		.loc 1 272 0
 503 000a FFF7FEFF 		bl	MY_TIMER_ReadCounter
 504 000e 0346     		mov	r3, r0
 505 0010 1A46     		mov	r2, r3
 506 0012 0F4B     		ldr	r3, .L34
 507 0014 1A80     		strh	r2, [r3]	@ movhi
 273:..\src/interruptions.c ****     // Start ADC Conversion, SOC = 1
 274:..\src/interruptions.c **** 
 275:..\src/interruptions.c ****     ADC_SOC_Write(0x01); 
 276:..\src/interruptions.c ****     
 277:..\src/interruptions.c ****     // Check Interrupt 
 278:..\src/interruptions.c **** 
 279:..\src/interruptions.c ****     if (interrupt_flag){
 280:..\src/interruptions.c ****         interrupt_flag = FALSE;
 281:..\src/interruptions.c ****         interrupt_manager();
 282:..\src/interruptions.c ****     }
 283:..\src/interruptions.c ****    
 284:..\src/interruptions.c ****             // if master_mode parameter is set to 1
 285:..\src/interruptions.c ****             if (g_mem.MS.master_mode_active){  
 286:..\src/interruptions.c ****                 
 287:..\src/interruptions.c ****                 // Check if voltage on pin MASTER MODE VOLTAGE, set by a physical switch, is HIGH o
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 15


 288:..\src/interruptions.c ****                 // This is a way to force exit from master_mode during execution, since USB command
 289:..\src/interruptions.c ****                 // are hampered by the communications between the two boards (slave and master)
 290:..\src/interruptions.c ****                 
 291:..\src/interruptions.c ****                 if (flag_master < 2000)       // if voltage is LOW, exit master mode
 292:..\src/interruptions.c ****                     master_mode = 0;
 293:..\src/interruptions.c ****                 
 294:..\src/interruptions.c ****                 else if (flag_master > 2000)  // if voltage is HIGH, enter master mode
 295:..\src/interruptions.c ****                     master_mode = 1;
 296:..\src/interruptions.c ****             }
 297:..\src/interruptions.c ****             
 298:..\src/interruptions.c ****             else{
 299:..\src/interruptions.c ****                 master_mode = 0;
 300:..\src/interruptions.c ****             }
 301:..\src/interruptions.c ****                     
 302:..\src/interruptions.c ****             if (master_mode){
 303:..\src/interruptions.c ****                 
 304:..\src/interruptions.c ****                 //-------------------------------------------------------------- Air Chamber and Vi
 305:..\src/interruptions.c ****                 if (g_mem.FB.vibrotactile_feedback_active && g_mem.FB.airchamber_feedback_active){ 
 306:..\src/interruptions.c ****                                      
 307:..\src/interruptions.c ****                     air_chambers_control();
 308:..\src/interruptions.c ****                     vibrotactile_control();
 309:..\src/interruptions.c ****                   
 310:..\src/interruptions.c ****                 }
 311:..\src/interruptions.c ****                 
 312:..\src/interruptions.c ****                 //-------------------------------------------------------------- Air Chamber contro
 313:..\src/interruptions.c ****                 else if (g_mem.FB.airchamber_feedback_active){
 314:..\src/interruptions.c ****                     
 315:..\src/interruptions.c ****                     
 316:..\src/interruptions.c ****                       
 317:..\src/interruptions.c ****                     air_chambers_control();
 318:..\src/interruptions.c ****                     
 319:..\src/interruptions.c ****                 }
 320:..\src/interruptions.c ****             
 321:..\src/interruptions.c ****                 //-------------------------------------------------------------- Vibrotactile contr
 322:..\src/interruptions.c ****                 else if (g_mem.FB.vibrotactile_feedback_active){
 323:..\src/interruptions.c ****                     
 324:..\src/interruptions.c ****                     
 325:..\src/interruptions.c ****                     
 326:..\src/interruptions.c ****                     
 327:..\src/interruptions.c ****                     vibrotactile_control();
 328:..\src/interruptions.c ****                 }
 329:..\src/interruptions.c ****                 
 330:..\src/interruptions.c ****                 if (interrupt_flag){
 331:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 332:..\src/interruptions.c ****                     interrupt_manager();
 333:..\src/interruptions.c ****                 }
 334:..\src/interruptions.c ****                     
 335:..\src/interruptions.c ****             //    motor_control_generic(SECOND_MOTOR_IDX); // Compute reference for the SH starting
 336:..\src/interruptions.c ****                     
 337:..\src/interruptions.c ****                 drive_slave(c_mem.MS.slave_ID); // Send reference to the SH calling cmd_set_inputs
 338:..\src/interruptions.c ****                     
 339:..\src/interruptions.c ****                 if (interrupt_flag){
 340:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 341:..\src/interruptions.c ****                     interrupt_manager();
 342:..\src/interruptions.c ****                 }
 343:..\src/interruptions.c ****             }
 344:..\src/interruptions.c ****             
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 16


 345:..\src/interruptions.c ****            
 346:..\src/interruptions.c ****             else {
 347:..\src/interruptions.c ****                 
 348:..\src/interruptions.c ****                 
 349:..\src/interruptions.c ****                 
 350:..\src/interruptions.c ****                     
 351:..\src/interruptions.c ****                 // Check Interrupt 
 352:..\src/interruptions.c ****                 if (interrupt_flag){
 353:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 354:..\src/interruptions.c ****                     interrupt_manager();
 355:..\src/interruptions.c ****                 } 
 356:..\src/interruptions.c ****             }
 357:..\src/interruptions.c ****             
 358:..\src/interruptions.c ****           //  motor_control_generic(MOTOR_IDX);  // Compute references and drive air pump
 359:..\src/interruptions.c ****     
 360:..\src/interruptions.c ****             if (interrupt_flag){
 361:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 362:..\src/interruptions.c ****                 interrupt_manager();
 363:..\src/interruptions.c ****             }
 364:..\src/interruptions.c ****     
 365:..\src/interruptions.c ****            
 366:..\src/interruptions.c ****     //---------------------------------- Read conversion buffer - LOCK function
 367:..\src/interruptions.c **** 
 368:..\src/interruptions.c ****     analog_read_end();
 369:..\src/interruptions.c **** 
 370:..\src/interruptions.c ****     if (interrupt_flag){
 371:..\src/interruptions.c ****         interrupt_flag = FALSE;
 372:..\src/interruptions.c ****         interrupt_manager();
 373:..\src/interruptions.c ****     }
 374:..\src/interruptions.c **** 
 375:..\src/interruptions.c ****     //---------------------------------- Control Overcurrent
 376:..\src/interruptions.c **** 
 377:..\src/interruptions.c ****     overcurrent_control();
 378:..\src/interruptions.c ****     
 379:..\src/interruptions.c ****     // Check Interrupt 
 380:..\src/interruptions.c ****     
 381:..\src/interruptions.c ****     if (interrupt_flag){
 382:..\src/interruptions.c ****         interrupt_flag = FALSE;
 383:..\src/interruptions.c ****         interrupt_manager();
 384:..\src/interruptions.c ****     }
 385:..\src/interruptions.c **** 
 386:..\src/interruptions.c ****   
 387:..\src/interruptions.c **** 
 388:..\src/interruptions.c ****     
 389:..\src/interruptions.c ****      
 390:..\src/interruptions.c **** 
 391:..\src/interruptions.c ****     
 392:..\src/interruptions.c ****     // Check Interrupt 
 393:..\src/interruptions.c ****     
 394:..\src/interruptions.c ****     if (interrupt_flag){
 395:..\src/interruptions.c ****         interrupt_flag = FALSE;
 396:..\src/interruptions.c ****         interrupt_manager();
 397:..\src/interruptions.c ****     }
 398:..\src/interruptions.c ****     
 399:..\src/interruptions.c ****    
 400:..\src/interruptions.c ****    
 401:..\src/interruptions.c ****     //---------------------------------- Update States
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 17


 402:..\src/interruptions.c ****     
 403:..\src/interruptions.c ****     // Load k-1 state
 404:..\src/interruptions.c ****     memcpy( &g_adc_measOld, &g_adc_meas, sizeof(g_adc_meas) );
 405:..\src/interruptions.c ****     memcpy( &SH_refOld, &SH_ref, sizeof(SH_ref) );
 406:..\src/interruptions.c ****     memcpy( &VT_refOld, &VT_ref, sizeof(VT_ref) );
 407:..\src/interruptions.c ****     memcpy( &Pump_refOld, &Pump_ref, sizeof(Pump_ref) );
 408:..\src/interruptions.c ****     
 409:..\src/interruptions.c ****     // Load k+1 state        
 410:..\src/interruptions.c ****     memcpy( &SH_ref, &SH_refNew, sizeof(SH_ref) );   
 411:..\src/interruptions.c ****     memcpy( &VT_ref, &VT_refNew, sizeof(VT_ref) );
 412:..\src/interruptions.c ****     memcpy( &Pump_ref, &Pump_refNew, sizeof(Pump_ref) );
 413:..\src/interruptions.c ****     
 414:..\src/interruptions.c ****     if (interrupt_flag){
 415:..\src/interruptions.c ****         interrupt_flag = FALSE;
 416:..\src/interruptions.c ****         interrupt_manager();
 417:..\src/interruptions.c ****     }
 418:..\src/interruptions.c **** */
 419:..\src/interruptions.c ****     timer_value = (uint16)MY_TIMER_ReadCounter();
 508              		.loc 1 419 0
 509 0016 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 510 001a 0346     		mov	r3, r0
 511 001c 1A46     		mov	r2, r3
 512 001e 0D4B     		ldr	r3, .L34+4
 513 0020 1A80     		strh	r2, [r3]	@ movhi
 420:..\src/interruptions.c ****     cycle_time = ((float)(timer_value0 - timer_value)/1000000.0);
 514              		.loc 1 420 0
 515 0022 0B4B     		ldr	r3, .L34
 516 0024 1B88     		ldrh	r3, [r3]
 517 0026 1A46     		mov	r2, r3
 518 0028 0A4B     		ldr	r3, .L34+4
 519 002a 1B88     		ldrh	r3, [r3]
 520 002c D31A     		subs	r3, r2, r3
 521 002e 1846     		mov	r0, r3
 522 0030 FFF7FEFF 		bl	__aeabi_i2f
 523 0034 0346     		mov	r3, r0
 524 0036 0849     		ldr	r1, .L34+8
 525 0038 1846     		mov	r0, r3
 526 003a FFF7FEFF 		bl	__aeabi_fdiv
 527 003e 0346     		mov	r3, r0
 528 0040 1A46     		mov	r2, r3
 529 0042 064B     		ldr	r3, .L34+12
 530 0044 1A60     		str	r2, [r3]	@ float
 421:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x01);   // reset timer
 531              		.loc 1 421 0
 532 0046 0120     		movs	r0, #1
 533 0048 FFF7FEFF 		bl	MY_TIMER_REG_Write
 422:..\src/interruptions.c **** 
 423:..\src/interruptions.c **** }
 534              		.loc 1 423 0
 535 004c 00BF     		nop
 536 004e 80BD     		pop	{r7, pc}
 537              	.L35:
 538              		.align	2
 539              	.L34:
 540 0050 00000000 		.word	timer_value0
 541 0054 00000000 		.word	timer_value
 542 0058 00247449 		.word	1232348160
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 18


 543 005c 00000000 		.word	cycle_time
 544              		.cfi_endproc
 545              	.LFE67:
 546              		.size	function_scheduler, .-function_scheduler
 547              		.section	.text.compute_SH_reference,"ax",%progbits
 548              		.align	2
 549              		.global	compute_SH_reference
 550              		.thumb
 551              		.thumb_func
 552              		.type	compute_SH_reference, %function
 553              	compute_SH_reference:
 554              	.LFB68:
 424:..\src/interruptions.c **** 
 425:..\src/interruptions.c **** //==============================================================================
 426:..\src/interruptions.c **** //                                                       COMPUTE MOTOR REFERENCE
 427:..\src/interruptions.c **** //==============================================================================
 428:..\src/interruptions.c **** 
 429:..\src/interruptions.c **** void compute_SH_reference() {
 555              		.loc 1 429 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 16
 558              		@ frame_needed = 1, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 560 0000 80B4     		push	{r7}
 561              		.cfi_def_cfa_offset 4
 562              		.cfi_offset 7, -4
 563 0002 85B0     		sub	sp, sp, #20
 564              		.cfi_def_cfa_offset 24
 565 0004 00AF     		add	r7, sp, #0
 566              		.cfi_def_cfa_register 7
 430:..\src/interruptions.c ****     
 431:..\src/interruptions.c ****     int32 CYDATA err_emg_1, err_emg_2;
 432:..\src/interruptions.c ****     struct st_slave* SH = &c_mem.SH_config;      // SoftHand default motor
 567              		.loc 1 432 0
 568 0006 A24B     		ldr	r3, .L80
 569 0008 FB60     		str	r3, [r7, #12]
 433:..\src/interruptions.c ****     
 434:..\src/interruptions.c ****     static uint8 current_emg = 0;   // 0 NONE // 1 EMG 1 // 2 EMG 2                                
 435:..\src/interruptions.c ****                                                                                                    
 436:..\src/interruptions.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 570              		.loc 1 436 0
 571 000a A24B     		ldr	r3, .L80+4
 572 000c 1B68     		ldr	r3, [r3]
 573 000e A24A     		ldr	r2, .L80+8
 574 0010 128E     		ldrh	r2, [r2, #48]
 575 0012 9B1A     		subs	r3, r3, r2
 576 0014 BB60     		str	r3, [r7, #8]
 437:..\src/interruptions.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 577              		.loc 1 437 0
 578 0016 9F4B     		ldr	r3, .L80+4
 579 0018 5B68     		ldr	r3, [r3, #4]
 580 001a 9F4A     		ldr	r2, .L80+8
 581 001c 528E     		ldrh	r2, [r2, #50]
 582 001e 9B1A     		subs	r3, r3, r2
 583 0020 7B60     		str	r3, [r7, #4]
 438:..\src/interruptions.c ****     
 439:..\src/interruptions.c ****      // =========================== POSITION INPUT ==============================            
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 19


 440:..\src/interruptions.c ****     switch(SH->input_mode) {
 584              		.loc 1 440 0
 585 0022 FB68     		ldr	r3, [r7, #12]
 586 0024 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 587 0026 023B     		subs	r3, r3, #2
 588 0028 052B     		cmp	r3, #5
 589 002a 00F24381 		bhi	.L73
 590 002e 01A2     		adr	r2, .L39
 591 0030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 592              		.p2align 2
 593              	.L39:
 594 0034 4D000000 		.word	.L38+1
 595 0038 A9000000 		.word	.L40+1
 596 003c 0D010000 		.word	.L41+1
 597 0040 C3010000 		.word	.L42+1
 598 0044 B5020000 		.word	.L73+1
 599 0048 77000000 		.word	.L43+1
 600              		.p2align 1
 601              	.L38:
 441:..\src/interruptions.c ****             
 442:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL:
 443:..\src/interruptions.c ****             if (err_emg_1 > 0)
 602              		.loc 1 443 0
 603 004c BB68     		ldr	r3, [r7, #8]
 604 004e 002B     		cmp	r3, #0
 605 0050 0DDD     		ble	.L44
 444:..\src/interruptions.c ****                 SH_ref = (err_emg_1 * g_mem.SH_config.pos_lim_sup) / (1024 - c_mem.emg.emg_threshol
 606              		.loc 1 444 0
 607 0052 924B     		ldr	r3, .L80+12
 608 0054 5B6A     		ldr	r3, [r3, #36]
 609 0056 BA68     		ldr	r2, [r7, #8]
 610 0058 02FB03F2 		mul	r2, r2, r3
 611 005c 8E4B     		ldr	r3, .L80+8
 612 005e 1B8E     		ldrh	r3, [r3, #48]
 613 0060 C3F58063 		rsb	r3, r3, #1024
 614 0064 92FBF3F3 		sdiv	r3, r2, r3
 615 0068 8D4A     		ldr	r2, .L80+16
 616 006a 1360     		str	r3, [r2]
 445:..\src/interruptions.c ****             else
 446:..\src/interruptions.c ****                 SH_ref = 0;
 447:..\src/interruptions.c ****             break;
 617              		.loc 1 447 0
 618 006c 25E1     		b	.L46
 619              	.L44:
 446:..\src/interruptions.c ****             break;
 620              		.loc 1 446 0
 621 006e 8C4B     		ldr	r3, .L80+16
 622 0070 0022     		movs	r2, #0
 623 0072 1A60     		str	r2, [r3]
 624              		.loc 1 447 0
 625 0074 21E1     		b	.L46
 626              	.L43:
 448:..\src/interruptions.c ****         
 449:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 450:..\src/interruptions.c ****             if (err_emg_1 > 0)
 627              		.loc 1 450 0
 628 0076 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 20


 629 0078 002B     		cmp	r3, #0
 630 007a 10DD     		ble	.L47
 451:..\src/interruptions.c ****                 SH_ref = g_mem.SH_config.pos_lim_sup - (err_emg_1 * g_mem.SH_config.pos_lim_sup) / 
 631              		.loc 1 451 0
 632 007c 874B     		ldr	r3, .L80+12
 633 007e 5A6A     		ldr	r2, [r3, #36]
 634 0080 864B     		ldr	r3, .L80+12
 635 0082 5B6A     		ldr	r3, [r3, #36]
 636 0084 B968     		ldr	r1, [r7, #8]
 637 0086 01FB03F1 		mul	r1, r1, r3
 638 008a 834B     		ldr	r3, .L80+8
 639 008c 1B8E     		ldrh	r3, [r3, #48]
 640 008e C3F58063 		rsb	r3, r3, #1024
 641 0092 91FBF3F3 		sdiv	r3, r1, r3
 642 0096 D31A     		subs	r3, r2, r3
 643 0098 814A     		ldr	r2, .L80+16
 644 009a 1360     		str	r3, [r2]
 452:..\src/interruptions.c ****             else
 453:..\src/interruptions.c ****                 SH_ref = g_mem.SH_config.pos_lim_sup;
 454:..\src/interruptions.c ****             break;
 645              		.loc 1 454 0
 646 009c 0DE1     		b	.L46
 647              	.L47:
 453:..\src/interruptions.c ****             break;
 648              		.loc 1 453 0
 649 009e 7F4B     		ldr	r3, .L80+12
 650 00a0 5B6A     		ldr	r3, [r3, #36]
 651 00a2 7F4A     		ldr	r2, .L80+16
 652 00a4 1360     		str	r3, [r2]
 653              		.loc 1 454 0
 654 00a6 08E1     		b	.L46
 655              	.L40:
 455:..\src/interruptions.c **** 
 456:..\src/interruptions.c ****         case INPUT_MODE_EMG_INTEGRAL:
 457:..\src/interruptions.c ****             SH_ref = SH_refOld;
 656              		.loc 1 457 0
 657 00a8 7E4B     		ldr	r3, .L80+20
 658 00aa 1B68     		ldr	r3, [r3]
 659 00ac 7C4A     		ldr	r2, .L80+16
 660 00ae 1360     		str	r3, [r2]
 458:..\src/interruptions.c ****             if (err_emg_1 > 0) {
 661              		.loc 1 458 0
 662 00b0 BB68     		ldr	r3, [r7, #8]
 663 00b2 002B     		cmp	r3, #0
 664 00b4 12DD     		ble	.L49
 459:..\src/interruptions.c ****                 SH_ref = SH_refOld + (err_emg_1 * (int)g_mem.emg.emg_speed[0] * 2) / (1024 - c_mem.
 665              		.loc 1 459 0
 666 00b6 794B     		ldr	r3, .L80+12
 667 00b8 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 668 00bc 1A46     		mov	r2, r3
 669 00be BB68     		ldr	r3, [r7, #8]
 670 00c0 03FB02F3 		mul	r3, r3, r2
 671 00c4 5A00     		lsls	r2, r3, #1
 672 00c6 744B     		ldr	r3, .L80+8
 673 00c8 1B8E     		ldrh	r3, [r3, #48]
 674 00ca C3F58063 		rsb	r3, r3, #1024
 675 00ce 92FBF3F2 		sdiv	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 21


 676 00d2 744B     		ldr	r3, .L80+20
 677 00d4 1B68     		ldr	r3, [r3]
 678 00d6 1344     		add	r3, r3, r2
 679 00d8 714A     		ldr	r2, .L80+16
 680 00da 1360     		str	r3, [r2]
 681              	.L49:
 460:..\src/interruptions.c ****             }
 461:..\src/interruptions.c ****             if (err_emg_2 > 0) {
 682              		.loc 1 461 0
 683 00dc 7B68     		ldr	r3, [r7, #4]
 684 00de 002B     		cmp	r3, #0
 685 00e0 40F3EA80 		ble	.L74
 462:..\src/interruptions.c ****                 SH_ref = SH_refOld - (err_emg_2 * (int)g_mem.emg.emg_speed[1] * 2) / (1024 - c_mem.
 686              		.loc 1 462 0
 687 00e4 6F4B     		ldr	r3, .L80+20
 688 00e6 1A68     		ldr	r2, [r3]
 689 00e8 6C4B     		ldr	r3, .L80+12
 690 00ea 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 691 00ee 1946     		mov	r1, r3
 692 00f0 7B68     		ldr	r3, [r7, #4]
 693 00f2 03FB01F3 		mul	r3, r3, r1
 694 00f6 5900     		lsls	r1, r3, #1
 695 00f8 674B     		ldr	r3, .L80+8
 696 00fa 5B8E     		ldrh	r3, [r3, #50]
 697 00fc C3F58063 		rsb	r3, r3, #1024
 698 0100 91FBF3F3 		sdiv	r3, r1, r3
 699 0104 D31A     		subs	r3, r2, r3
 700 0106 664A     		ldr	r2, .L80+16
 701 0108 1360     		str	r3, [r2]
 463:..\src/interruptions.c ****             }
 464:..\src/interruptions.c ****             break;
 702              		.loc 1 464 0
 703 010a D5E0     		b	.L74
 704              	.L41:
 465:..\src/interruptions.c **** 
 466:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS:
 467:..\src/interruptions.c ****             SH_ref= SH_refOld;
 705              		.loc 1 467 0
 706 010c 654B     		ldr	r3, .L80+20
 707 010e 1B68     		ldr	r3, [r3]
 708 0110 634A     		ldr	r2, .L80+16
 709 0112 1360     		str	r3, [r2]
 468:..\src/interruptions.c ****             
 469:..\src/interruptions.c ****                 switch (current_emg) {
 710              		.loc 1 469 0
 711 0114 644B     		ldr	r3, .L80+24
 712 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 713 0118 012B     		cmp	r3, #1
 714 011a 1AD0     		beq	.L52
 715 011c 022B     		cmp	r3, #2
 716 011e 33D0     		beq	.L53
 717 0120 002B     		cmp	r3, #0
 718 0122 00D0     		beq	.L54
 470:..\src/interruptions.c ****                     case 0:
 471:..\src/interruptions.c ****                         // Look for the first EMG passing the threshold
 472:..\src/interruptions.c ****                         if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 473:..\src/interruptions.c ****                             current_emg= 1;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 22


 474:..\src/interruptions.c ****                             break;
 475:..\src/interruptions.c ****                         }
 476:..\src/interruptions.c ****                         if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 477:..\src/interruptions.c ****                             current_emg = 2;
 478:..\src/interruptions.c ****                             break;
 479:..\src/interruptions.c ****                         }
 480:..\src/interruptions.c ****                         break;
 481:..\src/interruptions.c **** 
 482:..\src/interruptions.c ****                     case 1:
 483:..\src/interruptions.c ****                         // EMG 1 is first
 484:..\src/interruptions.c ****                         if (err_emg_1 < 0) {
 485:..\src/interruptions.c ****                             current_emg = 0;
 486:..\src/interruptions.c ****                             break;
 487:..\src/interruptions.c ****                         }
 488:..\src/interruptions.c ****                        SH_ref= SH_refOld + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / (1024 - c_me
 489:..\src/interruptions.c ****                         break;
 490:..\src/interruptions.c **** 
 491:..\src/interruptions.c ****                     case 2:
 492:..\src/interruptions.c ****                         // EMG 2 is first
 493:..\src/interruptions.c ****                         if (err_emg_2 < 0) {
 494:..\src/interruptions.c ****                             current_emg = 0;
 495:..\src/interruptions.c ****                             break;
 496:..\src/interruptions.c ****                         }
 497:..\src/interruptions.c ****                         SH_ref = SH_refOld - (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / (1024 - c_
 498:..\src/interruptions.c ****                         break;
 499:..\src/interruptions.c **** 
 500:..\src/interruptions.c ****                     default:
 501:..\src/interruptions.c ****                         break;
 719              		.loc 1 501 0
 720 0124 4CE0     		b	.L56
 721              	.L54:
 472:..\src/interruptions.c ****                             current_emg= 1;
 722              		.loc 1 472 0
 723 0126 BB68     		ldr	r3, [r7, #8]
 724 0128 002B     		cmp	r3, #0
 725 012a 07DD     		ble	.L55
 472:..\src/interruptions.c ****                             current_emg= 1;
 726              		.loc 1 472 0 is_stmt 0 discriminator 1
 727 012c BA68     		ldr	r2, [r7, #8]
 728 012e 7B68     		ldr	r3, [r7, #4]
 729 0130 9A42     		cmp	r2, r3
 730 0132 03DD     		ble	.L55
 473:..\src/interruptions.c ****                             break;
 731              		.loc 1 473 0 is_stmt 1
 732 0134 5C4B     		ldr	r3, .L80+24
 733 0136 0122     		movs	r2, #1
 734 0138 1A70     		strb	r2, [r3]
 474:..\src/interruptions.c ****                         }
 735              		.loc 1 474 0
 736 013a 41E0     		b	.L56
 737              	.L55:
 476:..\src/interruptions.c ****                             current_emg = 2;
 738              		.loc 1 476 0
 739 013c 7B68     		ldr	r3, [r7, #4]
 740 013e 002B     		cmp	r3, #0
 741 0140 3DDD     		ble	.L75
 476:..\src/interruptions.c ****                             current_emg = 2;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 23


 742              		.loc 1 476 0 is_stmt 0 discriminator 1
 743 0142 7A68     		ldr	r2, [r7, #4]
 744 0144 BB68     		ldr	r3, [r7, #8]
 745 0146 9A42     		cmp	r2, r3
 746 0148 39DD     		ble	.L75
 477:..\src/interruptions.c ****                             break;
 747              		.loc 1 477 0 is_stmt 1
 748 014a 574B     		ldr	r3, .L80+24
 749 014c 0222     		movs	r2, #2
 750 014e 1A70     		strb	r2, [r3]
 478:..\src/interruptions.c ****                         }
 751              		.loc 1 478 0
 752 0150 36E0     		b	.L56
 753              	.L52:
 484:..\src/interruptions.c ****                             current_emg = 0;
 754              		.loc 1 484 0
 755 0152 BB68     		ldr	r3, [r7, #8]
 756 0154 002B     		cmp	r3, #0
 757 0156 03DA     		bge	.L58
 485:..\src/interruptions.c ****                             break;
 758              		.loc 1 485 0
 759 0158 534B     		ldr	r3, .L80+24
 760 015a 0022     		movs	r2, #0
 761 015c 1A70     		strb	r2, [r3]
 486:..\src/interruptions.c ****                         }
 762              		.loc 1 486 0
 763 015e 2FE0     		b	.L56
 764              	.L58:
 488:..\src/interruptions.c ****                         break;
 765              		.loc 1 488 0
 766 0160 4E4B     		ldr	r3, .L80+12
 767 0162 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 768 0166 1A46     		mov	r2, r3
 769 0168 BB68     		ldr	r3, [r7, #8]
 770 016a 03FB02F3 		mul	r3, r3, r2
 771 016e 9A00     		lsls	r2, r3, #2
 772 0170 494B     		ldr	r3, .L80+8
 773 0172 1B8E     		ldrh	r3, [r3, #48]
 774 0174 C3F58063 		rsb	r3, r3, #1024
 775 0178 92FBF3F2 		sdiv	r2, r2, r3
 776 017c 494B     		ldr	r3, .L80+20
 777 017e 1B68     		ldr	r3, [r3]
 778 0180 1344     		add	r3, r3, r2
 779 0182 474A     		ldr	r2, .L80+16
 780 0184 1360     		str	r3, [r2]
 489:..\src/interruptions.c **** 
 781              		.loc 1 489 0
 782 0186 1BE0     		b	.L56
 783              	.L53:
 493:..\src/interruptions.c ****                             current_emg = 0;
 784              		.loc 1 493 0
 785 0188 7B68     		ldr	r3, [r7, #4]
 786 018a 002B     		cmp	r3, #0
 787 018c 03DA     		bge	.L59
 494:..\src/interruptions.c ****                             break;
 788              		.loc 1 494 0
 789 018e 464B     		ldr	r3, .L80+24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 24


 790 0190 0022     		movs	r2, #0
 791 0192 1A70     		strb	r2, [r3]
 495:..\src/interruptions.c ****                         }
 792              		.loc 1 495 0
 793 0194 14E0     		b	.L56
 794              	.L59:
 497:..\src/interruptions.c ****                         break;
 795              		.loc 1 497 0
 796 0196 434B     		ldr	r3, .L80+20
 797 0198 1A68     		ldr	r2, [r3]
 798 019a 404B     		ldr	r3, .L80+12
 799 019c 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 800 01a0 1946     		mov	r1, r3
 801 01a2 7B68     		ldr	r3, [r7, #4]
 802 01a4 03FB01F3 		mul	r3, r3, r1
 803 01a8 9900     		lsls	r1, r3, #2
 804 01aa 3B4B     		ldr	r3, .L80+8
 805 01ac 5B8E     		ldrh	r3, [r3, #50]
 806 01ae C3F58063 		rsb	r3, r3, #1024
 807 01b2 91FBF3F3 		sdiv	r3, r1, r3
 808 01b6 D31A     		subs	r3, r2, r3
 809 01b8 394A     		ldr	r2, .L80+16
 810 01ba 1360     		str	r3, [r2]
 498:..\src/interruptions.c **** 
 811              		.loc 1 498 0
 812 01bc 00E0     		b	.L56
 813              	.L75:
 480:..\src/interruptions.c **** 
 814              		.loc 1 480 0
 815 01be 00BF     		nop
 816              	.L56:
 502:..\src/interruptions.c ****                 }
 503:..\src/interruptions.c ****             
 504:..\src/interruptions.c ****             break;
 817              		.loc 1 504 0 discriminator 1
 818 01c0 7BE0     		b	.L46
 819              	.L42:
 505:..\src/interruptions.c **** 
 506:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS_ADV:
 507:..\src/interruptions.c ****             SH_ref = SH_refOld;
 820              		.loc 1 507 0
 821 01c2 384B     		ldr	r3, .L80+20
 822 01c4 1B68     		ldr	r3, [r3]
 823 01c6 364A     		ldr	r2, .L80+16
 824 01c8 1360     		str	r3, [r2]
 508:..\src/interruptions.c ****             switch (current_emg) {
 825              		.loc 1 508 0
 826 01ca 374B     		ldr	r3, .L80+24
 827 01cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 01ce 012B     		cmp	r3, #1
 829 01d0 1AD0     		beq	.L61
 830 01d2 022B     		cmp	r3, #2
 831 01d4 39D0     		beq	.L62
 832 01d6 002B     		cmp	r3, #0
 833 01d8 00D0     		beq	.L63
 509:..\src/interruptions.c ****                 // Look for the first EMG passing the threshold
 510:..\src/interruptions.c ****                 case 0:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 25


 511:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 512:..\src/interruptions.c ****                         current_emg = 1;
 513:..\src/interruptions.c ****                         break;
 514:..\src/interruptions.c ****                     }
 515:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 516:..\src/interruptions.c ****                         current_emg = 2;
 517:..\src/interruptions.c ****                         break;
 518:..\src/interruptions.c ****                     }
 519:..\src/interruptions.c ****                     break;
 520:..\src/interruptions.c **** 
 521:..\src/interruptions.c ****                 // EMG 1 is first
 522:..\src/interruptions.c ****                 case 1:
 523:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 524:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 525:..\src/interruptions.c ****                         current_emg = 0;
 526:..\src/interruptions.c ****                         break;
 527:..\src/interruptions.c ****                     }
 528:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 529:..\src/interruptions.c ****                     if (err_emg_1 > 0) 
 530:..\src/interruptions.c ****                         SH_ref = SH_refOld + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / (1024 - c_
 531:..\src/interruptions.c ****                     break;
 532:..\src/interruptions.c **** 
 533:..\src/interruptions.c ****                 // EMG 2 is first
 534:..\src/interruptions.c ****                 case 2:
 535:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 536:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 537:..\src/interruptions.c ****                         current_emg = 0;
 538:..\src/interruptions.c ****                         break;
 539:..\src/interruptions.c ****                     }
 540:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 541:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
 542:..\src/interruptions.c ****                         SH_ref = SH_refOld - (err_emg_2 * c_mem.emg.emg_speed[1] << 2) / (1024 - c_
 543:..\src/interruptions.c ****                     }
 544:..\src/interruptions.c ****                     break;
 545:..\src/interruptions.c **** 
 546:..\src/interruptions.c ****                 default:
 547:..\src/interruptions.c ****                     break;
 834              		.loc 1 547 0
 835 01da 6AE0     		b	.L65
 836              	.L63:
 511:..\src/interruptions.c ****                         current_emg = 1;
 837              		.loc 1 511 0
 838 01dc BB68     		ldr	r3, [r7, #8]
 839 01de 002B     		cmp	r3, #0
 840 01e0 07DD     		ble	.L64
 511:..\src/interruptions.c ****                         current_emg = 1;
 841              		.loc 1 511 0 is_stmt 0 discriminator 1
 842 01e2 BA68     		ldr	r2, [r7, #8]
 843 01e4 7B68     		ldr	r3, [r7, #4]
 844 01e6 9A42     		cmp	r2, r3
 845 01e8 03DD     		ble	.L64
 512:..\src/interruptions.c ****                         break;
 846              		.loc 1 512 0 is_stmt 1
 847 01ea 2F4B     		ldr	r3, .L80+24
 848 01ec 0122     		movs	r2, #1
 849 01ee 1A70     		strb	r2, [r3]
 513:..\src/interruptions.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 26


 850              		.loc 1 513 0
 851 01f0 5FE0     		b	.L65
 852              	.L64:
 515:..\src/interruptions.c ****                         current_emg = 2;
 853              		.loc 1 515 0
 854 01f2 7B68     		ldr	r3, [r7, #4]
 855 01f4 002B     		cmp	r3, #0
 856 01f6 49DD     		ble	.L76
 515:..\src/interruptions.c ****                         current_emg = 2;
 857              		.loc 1 515 0 is_stmt 0 discriminator 1
 858 01f8 7A68     		ldr	r2, [r7, #4]
 859 01fa BB68     		ldr	r3, [r7, #8]
 860 01fc 9A42     		cmp	r2, r3
 861 01fe 45DD     		ble	.L76
 516:..\src/interruptions.c ****                         break;
 862              		.loc 1 516 0 is_stmt 1
 863 0200 294B     		ldr	r3, .L80+24
 864 0202 0222     		movs	r2, #2
 865 0204 1A70     		strb	r2, [r3]
 517:..\src/interruptions.c ****                     }
 866              		.loc 1 517 0
 867 0206 54E0     		b	.L65
 868              	.L61:
 524:..\src/interruptions.c ****                         current_emg = 0;
 869              		.loc 1 524 0
 870 0208 BB68     		ldr	r3, [r7, #8]
 871 020a 002B     		cmp	r3, #0
 872 020c 06DA     		bge	.L67
 524:..\src/interruptions.c ****                         current_emg = 0;
 873              		.loc 1 524 0 is_stmt 0 discriminator 1
 874 020e 7B68     		ldr	r3, [r7, #4]
 875 0210 002B     		cmp	r3, #0
 876 0212 03DA     		bge	.L67
 525:..\src/interruptions.c ****                         break;
 877              		.loc 1 525 0 is_stmt 1
 878 0214 244B     		ldr	r3, .L80+24
 879 0216 0022     		movs	r2, #0
 880 0218 1A70     		strb	r2, [r3]
 526:..\src/interruptions.c ****                     }
 881              		.loc 1 526 0
 882 021a 4AE0     		b	.L65
 883              	.L67:
 529:..\src/interruptions.c ****                         SH_ref = SH_refOld + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / (1024 - c_
 884              		.loc 1 529 0
 885 021c BB68     		ldr	r3, [r7, #8]
 886 021e 002B     		cmp	r3, #0
 887 0220 44DD     		ble	.L77
 530:..\src/interruptions.c ****                     break;
 888              		.loc 1 530 0
 889 0222 1E4B     		ldr	r3, .L80+12
 890 0224 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 891 0228 1A46     		mov	r2, r3
 892 022a BB68     		ldr	r3, [r7, #8]
 893 022c 03FB02F3 		mul	r3, r3, r2
 894 0230 9A00     		lsls	r2, r3, #2
 895 0232 194B     		ldr	r3, .L80+8
 896 0234 1B8E     		ldrh	r3, [r3, #48]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 27


 897 0236 C3F58063 		rsb	r3, r3, #1024
 898 023a 92FBF3F2 		sdiv	r2, r2, r3
 899 023e 194B     		ldr	r3, .L80+20
 900 0240 1B68     		ldr	r3, [r3]
 901 0242 1344     		add	r3, r3, r2
 902 0244 164A     		ldr	r2, .L80+16
 903 0246 1360     		str	r3, [r2]
 531:..\src/interruptions.c **** 
 904              		.loc 1 531 0
 905 0248 30E0     		b	.L77
 906              	.L62:
 536:..\src/interruptions.c ****                         current_emg = 0;
 907              		.loc 1 536 0
 908 024a BB68     		ldr	r3, [r7, #8]
 909 024c 002B     		cmp	r3, #0
 910 024e 06DA     		bge	.L69
 536:..\src/interruptions.c ****                         current_emg = 0;
 911              		.loc 1 536 0 is_stmt 0 discriminator 1
 912 0250 7B68     		ldr	r3, [r7, #4]
 913 0252 002B     		cmp	r3, #0
 914 0254 03DA     		bge	.L69
 537:..\src/interruptions.c ****                         break;
 915              		.loc 1 537 0 is_stmt 1
 916 0256 144B     		ldr	r3, .L80+24
 917 0258 0022     		movs	r2, #0
 918 025a 1A70     		strb	r2, [r3]
 538:..\src/interruptions.c ****                     }
 919              		.loc 1 538 0
 920 025c 29E0     		b	.L65
 921              	.L69:
 541:..\src/interruptions.c ****                         SH_ref = SH_refOld - (err_emg_2 * c_mem.emg.emg_speed[1] << 2) / (1024 - c_
 922              		.loc 1 541 0
 923 025e 7B68     		ldr	r3, [r7, #4]
 924 0260 002B     		cmp	r3, #0
 925 0262 25DD     		ble	.L78
 542:..\src/interruptions.c ****                     }
 926              		.loc 1 542 0
 927 0264 0F4B     		ldr	r3, .L80+20
 928 0266 1A68     		ldr	r2, [r3]
 929 0268 0B4B     		ldr	r3, .L80+8
 930 026a 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 931 026e 1946     		mov	r1, r3
 932 0270 7B68     		ldr	r3, [r7, #4]
 933 0272 03FB01F3 		mul	r3, r3, r1
 934 0276 9900     		lsls	r1, r3, #2
 935 0278 074B     		ldr	r3, .L80+8
 936 027a 5B8E     		ldrh	r3, [r3, #50]
 937 027c C3F58063 		rsb	r3, r3, #1024
 938 0280 91FBF3F3 		sdiv	r3, r1, r3
 939 0284 D31A     		subs	r3, r2, r3
 940 0286 064A     		ldr	r2, .L80+16
 941 0288 1360     		str	r3, [r2]
 544:..\src/interruptions.c **** 
 942              		.loc 1 544 0
 943 028a 11E0     		b	.L78
 944              	.L76:
 519:..\src/interruptions.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 28


 945              		.loc 1 519 0
 946 028c 00BF     		nop
 947 028e 14E0     		b	.L46
 948              	.L81:
 949              		.align	2
 950              	.L80:
 951 0290 20000000 		.word	c_mem+32
 952 0294 00000000 		.word	g_adc_meas
 953 0298 00000000 		.word	c_mem
 954 029c 00000000 		.word	g_mem
 955 02a0 00000000 		.word	SH_ref
 956 02a4 00000000 		.word	SH_refOld
 957 02a8 8C000000 		.word	current_emg.9771
 958              	.L77:
 531:..\src/interruptions.c **** 
 959              		.loc 1 531 0
 960 02ac 00BF     		nop
 961 02ae 04E0     		b	.L46
 962              	.L78:
 544:..\src/interruptions.c **** 
 963              		.loc 1 544 0
 964 02b0 00BF     		nop
 965              	.L65:
 548:..\src/interruptions.c ****             }
 549:..\src/interruptions.c ****             break;
 966              		.loc 1 549 0 discriminator 3
 967 02b2 02E0     		b	.L46
 968              	.L73:
 550:..\src/interruptions.c **** 
 551:..\src/interruptions.c ****         default:
 552:..\src/interruptions.c ****             break;
 969              		.loc 1 552 0
 970 02b4 00BF     		nop
 971 02b6 00E0     		b	.L46
 972              	.L74:
 464:..\src/interruptions.c **** 
 973              		.loc 1 464 0
 974 02b8 00BF     		nop
 975              	.L46:
 553:..\src/interruptions.c ****     }
 554:..\src/interruptions.c **** 
 555:..\src/interruptions.c ****     // Position limit saturation
 556:..\src/interruptions.c ****     
 557:..\src/interruptions.c ****         if (SH_ref < SH->pos_lim_inf) 
 976              		.loc 1 557 0
 977 02ba FB68     		ldr	r3, [r7, #12]
 978 02bc 1A68     		ldr	r2, [r3]
 979 02be 0B4B     		ldr	r3, .L82
 980 02c0 1B68     		ldr	r3, [r3]
 981 02c2 9A42     		cmp	r2, r3
 982 02c4 03DD     		ble	.L71
 558:..\src/interruptions.c ****             SH_ref = SH->pos_lim_inf;
 983              		.loc 1 558 0
 984 02c6 FB68     		ldr	r3, [r7, #12]
 985 02c8 1B68     		ldr	r3, [r3]
 986 02ca 084A     		ldr	r2, .L82
 987 02cc 1360     		str	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 29


 988              	.L71:
 559:..\src/interruptions.c ****         if (SH_ref > SH->pos_lim_sup) 
 989              		.loc 1 559 0
 990 02ce FB68     		ldr	r3, [r7, #12]
 991 02d0 5A68     		ldr	r2, [r3, #4]
 992 02d2 064B     		ldr	r3, .L82
 993 02d4 1B68     		ldr	r3, [r3]
 994 02d6 9A42     		cmp	r2, r3
 995 02d8 03DA     		bge	.L79
 560:..\src/interruptions.c ****             SH_ref = SH->pos_lim_sup;
 996              		.loc 1 560 0
 997 02da FB68     		ldr	r3, [r7, #12]
 998 02dc 5B68     		ldr	r3, [r3, #4]
 999 02de 034A     		ldr	r2, .L82
 1000 02e0 1360     		str	r3, [r2]
 1001              	.L79:
 561:..\src/interruptions.c **** 
 562:..\src/interruptions.c **** }
 1002              		.loc 1 562 0
 1003 02e2 00BF     		nop
 1004 02e4 1437     		adds	r7, r7, #20
 1005              		.cfi_def_cfa_offset 4
 1006 02e6 BD46     		mov	sp, r7
 1007              		.cfi_def_cfa_register 13
 1008              		@ sp needed
 1009 02e8 80BC     		pop	{r7}
 1010              		.cfi_restore 7
 1011              		.cfi_def_cfa_offset 0
 1012 02ea 7047     		bx	lr
 1013              	.L83:
 1014              		.align	2
 1015              	.L82:
 1016 02ec 00000000 		.word	SH_ref
 1017              		.cfi_endproc
 1018              	.LFE68:
 1019              		.size	compute_SH_reference, .-compute_SH_reference
 1020              		.section	.text.vibrotactile_control_generic,"ax",%progbits
 1021              		.align	2
 1022              		.global	vibrotactile_control_generic
 1023              		.thumb
 1024              		.thumb_func
 1025              		.type	vibrotactile_control_generic, %function
 1026              	vibrotactile_control_generic:
 1027              	.LFB69:
 563:..\src/interruptions.c **** 
 564:..\src/interruptions.c **** 
 565:..\src/interruptions.c **** 
 566:..\src/interruptions.c **** 
 567:..\src/interruptions.c **** //==============================================================================
 568:..\src/interruptions.c **** //                                                  VIBROTACTILE CONTROL GENERIC
 569:..\src/interruptions.c **** //==============================================================================
 570:..\src/interruptions.c **** void vibrotactile_control_generic(uint8 idx) {
 1028              		.loc 1 570 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 16
 1031              		@ frame_needed = 1, uses_anonymous_args = 0
 1032 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 30


 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 7, -8
 1035              		.cfi_offset 14, -4
 1036 0002 84B0     		sub	sp, sp, #16
 1037              		.cfi_def_cfa_offset 24
 1038 0004 00AF     		add	r7, sp, #0
 1039              		.cfi_def_cfa_register 7
 1040 0006 0346     		mov	r3, r0
 1041 0008 FB71     		strb	r3, [r7, #7]
 571:..\src/interruptions.c ****    
 572:..\src/interruptions.c ****     int16 CYDATA pwm_input = 0;
 1042              		.loc 1 572 0
 1043 000a 0023     		movs	r3, #0
 1044 000c FB81     		strh	r3, [r7, #14]	@ movhi
 573:..\src/interruptions.c **** 
 574:..\src/interruptions.c ****     // Static Variables
 575:..\src/interruptions.c ****    
 576:..\src/interruptions.c ****     static CYBIT motor_dir[NUM_OF_VT_ACTUATORS]; 
 577:..\src/interruptions.c **** 
 578:..\src/interruptions.c ****     // ======================= UPDATE MOTOR REFERENCE ==========================            
 579:..\src/interruptions.c **** 
 580:..\src/interruptions.c ****     pwm_input = VT_ref[idx];
 1045              		.loc 1 580 0
 1046 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1047 0010 294A     		ldr	r2, .L97
 1048 0012 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1049 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 581:..\src/interruptions.c **** 
 582:..\src/interruptions.c ****     if (pwm_input > 0) 
 1050              		.loc 1 582 0
 1051 0016 B7F90E30 		ldrsh	r3, [r7, #14]
 1052 001a 002B     		cmp	r3, #0
 1053 001c 04DD     		ble	.L85
 583:..\src/interruptions.c ****         motor_dir[idx] = TRUE;
 1054              		.loc 1 583 0
 1055 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1056 0020 264A     		ldr	r2, .L97+4
 1057 0022 0121     		movs	r1, #1
 1058 0024 D154     		strb	r1, [r2, r3]
 1059 0026 03E0     		b	.L86
 1060              	.L85:
 584:..\src/interruptions.c ****     else 
 585:..\src/interruptions.c ****         motor_dir[idx] = FALSE;
 1061              		.loc 1 585 0
 1062 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1063 002a 244A     		ldr	r2, .L97+4
 1064 002c 0021     		movs	r1, #0
 1065 002e D154     		strb	r1, [r2, r3]
 1066              	.L86:
 586:..\src/interruptions.c ****         
 587:..\src/interruptions.c ****     if (pwm_input > PWM_MAX_VALUE_DC) 
 1067              		.loc 1 587 0
 1068 0030 B7F90E30 		ldrsh	r3, [r7, #14]
 1069 0034 642B     		cmp	r3, #100
 1070 0036 01DD     		ble	.L87
 588:..\src/interruptions.c ****         pwm_input = PWM_MAX_VALUE_DC;
 1071              		.loc 1 588 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 31


 1072 0038 6423     		movs	r3, #100
 1073 003a FB81     		strh	r3, [r7, #14]	@ movhi
 1074              	.L87:
 589:..\src/interruptions.c ****     if (pwm_input < - PWM_MAX_VALUE_DC) 
 1075              		.loc 1 589 0
 1076 003c B7F90E30 		ldrsh	r3, [r7, #14]
 1077 0040 13F1640F 		cmn	r3, #100
 1078 0044 02DA     		bge	.L88
 590:..\src/interruptions.c ****         pwm_input = - PWM_MAX_VALUE_DC;
 1079              		.loc 1 590 0
 1080 0046 4FF69C73 		movw	r3, #65436
 1081 004a FB81     		strh	r3, [r7, #14]	@ movhi
 1082              	.L88:
 591:..\src/interruptions.c ****      
 592:..\src/interruptions.c ****     // Set motor direction and write pwm value
 593:..\src/interruptions.c ****     switch (idx) {
 1083              		.loc 1 593 0
 1084 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1085 004e 002B     		cmp	r3, #0
 1086 0050 02D0     		beq	.L90
 1087 0052 012B     		cmp	r3, #1
 1088 0054 16D0     		beq	.L91
 594:..\src/interruptions.c ****         case 0:         // Motor 1
 595:..\src/interruptions.c ****             if (motor_dir[idx])
 596:..\src/interruptions.c ****                 VT1_DIR_Write(0x00);
 597:..\src/interruptions.c ****             else
 598:..\src/interruptions.c ****                 VT1_DIR_Write(0x01);
 599:..\src/interruptions.c ****          
 600:..\src/interruptions.c ****                PWM_VT_WriteCompare1(abs(pwm_input));    
 601:..\src/interruptions.c ****             
 602:..\src/interruptions.c ****             break;
 603:..\src/interruptions.c ****         case 1:         // Motor 2
 604:..\src/interruptions.c ****             
 605:..\src/interruptions.c ****             if (motor_dir[idx])
 606:..\src/interruptions.c ****                 VT2_DIR_Write(0x00);          
 607:..\src/interruptions.c ****             else
 608:..\src/interruptions.c ****                 VT2_DIR_Write(0x01);
 609:..\src/interruptions.c ****             
 610:..\src/interruptions.c ****             PWM_VT_WriteCompare2(abs(pwm_input));    
 611:..\src/interruptions.c ****         break;
 612:..\src/interruptions.c ****     }
 613:..\src/interruptions.c ****        
 614:..\src/interruptions.c ****     
 615:..\src/interruptions.c **** }
 1089              		.loc 1 615 0
 1090 0056 2BE0     		b	.L96
 1091              	.L90:
 595:..\src/interruptions.c ****                 VT1_DIR_Write(0x00);
 1092              		.loc 1 595 0
 1093 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1094 005a 184A     		ldr	r2, .L97+4
 1095 005c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1096 005e 002B     		cmp	r3, #0
 1097 0060 03D0     		beq	.L92
 596:..\src/interruptions.c ****             else
 1098              		.loc 1 596 0
 1099 0062 0020     		movs	r0, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 32


 1100 0064 FFF7FEFF 		bl	VT1_DIR_Write
 1101 0068 02E0     		b	.L93
 1102              	.L92:
 598:..\src/interruptions.c ****          
 1103              		.loc 1 598 0
 1104 006a 0120     		movs	r0, #1
 1105 006c FFF7FEFF 		bl	VT1_DIR_Write
 1106              	.L93:
 600:..\src/interruptions.c ****             
 1107              		.loc 1 600 0
 1108 0070 B7F90E30 		ldrsh	r3, [r7, #14]
 1109 0074 002B     		cmp	r3, #0
 1110 0076 B8BF     		it	lt
 1111 0078 5B42     		rsblt	r3, r3, #0
 1112 007a 9BB2     		uxth	r3, r3
 1113 007c 1846     		mov	r0, r3
 1114 007e FFF7FEFF 		bl	PWM_VT_WriteCompare1
 602:..\src/interruptions.c ****         case 1:         // Motor 2
 1115              		.loc 1 602 0
 1116 0082 15E0     		b	.L89
 1117              	.L91:
 605:..\src/interruptions.c ****                 VT2_DIR_Write(0x00);          
 1118              		.loc 1 605 0
 1119 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1120 0086 0D4A     		ldr	r2, .L97+4
 1121 0088 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1122 008a 002B     		cmp	r3, #0
 1123 008c 03D0     		beq	.L94
 606:..\src/interruptions.c ****             else
 1124              		.loc 1 606 0
 1125 008e 0020     		movs	r0, #0
 1126 0090 FFF7FEFF 		bl	VT2_DIR_Write
 1127 0094 02E0     		b	.L95
 1128              	.L94:
 608:..\src/interruptions.c ****             
 1129              		.loc 1 608 0
 1130 0096 0120     		movs	r0, #1
 1131 0098 FFF7FEFF 		bl	VT2_DIR_Write
 1132              	.L95:
 610:..\src/interruptions.c ****         break;
 1133              		.loc 1 610 0
 1134 009c B7F90E30 		ldrsh	r3, [r7, #14]
 1135 00a0 002B     		cmp	r3, #0
 1136 00a2 B8BF     		it	lt
 1137 00a4 5B42     		rsblt	r3, r3, #0
 1138 00a6 9BB2     		uxth	r3, r3
 1139 00a8 1846     		mov	r0, r3
 1140 00aa FFF7FEFF 		bl	PWM_VT_WriteCompare2
 611:..\src/interruptions.c ****     }
 1141              		.loc 1 611 0
 1142 00ae 00BF     		nop
 1143              	.L89:
 1144              	.L96:
 1145              		.loc 1 615 0
 1146 00b0 00BF     		nop
 1147 00b2 1037     		adds	r7, r7, #16
 1148              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 33


 1149 00b4 BD46     		mov	sp, r7
 1150              		.cfi_def_cfa_register 13
 1151              		@ sp needed
 1152 00b6 80BD     		pop	{r7, pc}
 1153              	.L98:
 1154              		.align	2
 1155              	.L97:
 1156 00b8 00000000 		.word	VT_ref
 1157 00bc 90000000 		.word	motor_dir.9793
 1158              		.cfi_endproc
 1159              	.LFE69:
 1160              		.size	vibrotactile_control_generic, .-vibrotactile_control_generic
 1161              		.section	.text.encoder_reading_SPI,"ax",%progbits
 1162              		.align	2
 1163              		.global	encoder_reading_SPI
 1164              		.thumb
 1165              		.thumb_func
 1166              		.type	encoder_reading_SPI, %function
 1167              	encoder_reading_SPI:
 1168              	.LFB70:
 616:..\src/interruptions.c **** 
 617:..\src/interruptions.c **** //==============================================================================
 618:..\src/interruptions.c **** //                                                           ENCODER READING SPI
 619:..\src/interruptions.c **** //==============================================================================
 620:..\src/interruptions.c **** 
 621:..\src/interruptions.c **** void encoder_reading_SPI(uint8 n_line, uint8 assoc_motor) {
 1169              		.loc 1 621 0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 8
 1172              		@ frame_needed = 1, uses_anonymous_args = 0
 1173              		@ link register save eliminated.
 1174 0000 80B4     		push	{r7}
 1175              		.cfi_def_cfa_offset 4
 1176              		.cfi_offset 7, -4
 1177 0002 83B0     		sub	sp, sp, #12
 1178              		.cfi_def_cfa_offset 16
 1179 0004 00AF     		add	r7, sp, #0
 1180              		.cfi_def_cfa_register 7
 1181 0006 0346     		mov	r3, r0
 1182 0008 0A46     		mov	r2, r1
 1183 000a FB71     		strb	r3, [r7, #7]
 1184 000c 1346     		mov	r3, r2
 1185 000e BB71     		strb	r3, [r7, #6]
 622:..\src/interruptions.c **** 
 623:..\src/interruptions.c **** }
 1186              		.loc 1 623 0
 1187 0010 00BF     		nop
 1188 0012 0C37     		adds	r7, r7, #12
 1189              		.cfi_def_cfa_offset 4
 1190 0014 BD46     		mov	sp, r7
 1191              		.cfi_def_cfa_register 13
 1192              		@ sp needed
 1193 0016 80BC     		pop	{r7}
 1194              		.cfi_restore 7
 1195              		.cfi_def_cfa_offset 0
 1196 0018 7047     		bx	lr
 1197              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 34


 1198              	.LFE70:
 1199              		.size	encoder_reading_SPI, .-encoder_reading_SPI
 1200              		.global	__aeabi_f2d
 1201              		.global	__aeabi_ddiv
 1202              		.global	__aeabi_dsub
 1203              		.global	__aeabi_d2iz
 1204              		.global	__aeabi_i2d
 1205              		.global	__aeabi_dmul
 1206 001a 00BF     		.section	.text.analog_read_end,"ax",%progbits
 1207              		.align	2
 1208              		.global	analog_read_end
 1209              		.thumb
 1210              		.thumb_func
 1211              		.type	analog_read_end, %function
 1212              	analog_read_end:
 1213              	.LFB71:
 624:..\src/interruptions.c **** 
 625:..\src/interruptions.c **** //==============================================================================
 626:..\src/interruptions.c **** //                                                           ANALOG MEASUREMENTS
 627:..\src/interruptions.c **** //==============================================================================
 628:..\src/interruptions.c **** 
 629:..\src/interruptions.c **** void analog_read_end() {
 1214              		.loc 1 629 0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 8
 1217              		@ frame_needed = 1, uses_anonymous_args = 0
 1218 0000 90B5     		push	{r4, r7, lr}
 1219              		.cfi_def_cfa_offset 12
 1220              		.cfi_offset 4, -12
 1221              		.cfi_offset 7, -8
 1222              		.cfi_offset 14, -4
 1223 0002 83B0     		sub	sp, sp, #12
 1224              		.cfi_def_cfa_offset 24
 1225 0004 00AF     		add	r7, sp, #0
 1226              		.cfi_def_cfa_register 7
 630:..\src/interruptions.c **** 
 631:..\src/interruptions.c ****     /* =========================================================================
 632:..\src/interruptions.c ****     /   Ideal formulation to calculate tension and current
 633:..\src/interruptions.c ****     /
 634:..\src/interruptions.c ****     /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
 635:..\src/interruptions.c ****     /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
 636:..\src/interruptions.c ****     /
 637:..\src/interruptions.c ****     /   Definition:
 638:..\src/interruptions.c ****     /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
 639:..\src/interruptions.c ****     /   offset = 2000 -> hardware amplifier bias in mV
 640:..\src/interruptions.c ****     /   gain = 8.086 -> amplifier gain
 641:..\src/interruptions.c ****     /   resistor = 18 -> resistor of voltage divider in KOhm 
 642:..\src/interruptions.c ****     /
 643:..\src/interruptions.c ****     /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
 644:..\src/interruptions.c ****     /   and offset unit of measurement is counts, instead dev_tension and
 645:..\src/interruptions.c ****     /   g_meas.curr[] are converted in properly unit.
 646:..\src/interruptions.c ****     /  =========================================================================
 647:..\src/interruptions.c ****     */
 648:..\src/interruptions.c **** 
 649:..\src/interruptions.c ****     int32 CYDATA i_aux;
 650:..\src/interruptions.c ****     static uint8 idx = 0;
 651:..\src/interruptions.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 35


 652:..\src/interruptions.c ****     // Wait for conversion end
 653:..\src/interruptions.c ****     
 654:..\src/interruptions.c ****     while(!ADC_STATUS_Read()){
 1227              		.loc 1 654 0
 1228 0006 08E0     		b	.L101
 1229              	.L102:
 655:..\src/interruptions.c ****         
 656:..\src/interruptions.c ****         if (interrupt_flag){
 1230              		.loc 1 656 0
 1231 0008 774B     		ldr	r3, .L114+24
 1232 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1233 000c 002B     		cmp	r3, #0
 1234 000e 04D0     		beq	.L101
 657:..\src/interruptions.c ****             interrupt_flag = FALSE;
 1235              		.loc 1 657 0
 1236 0010 754B     		ldr	r3, .L114+24
 1237 0012 0022     		movs	r2, #0
 1238 0014 1A70     		strb	r2, [r3]
 658:..\src/interruptions.c ****             interrupt_manager();
 1239              		.loc 1 658 0
 1240 0016 FFF7FEFF 		bl	interrupt_manager
 1241              	.L101:
 654:..\src/interruptions.c ****         
 1242              		.loc 1 654 0
 1243 001a FFF7FEFF 		bl	ADC_STATUS_Read
 1244 001e 0346     		mov	r3, r0
 1245 0020 002B     		cmp	r3, #0
 1246 0022 F1D0     		beq	.L102
 659:..\src/interruptions.c ****         }
 660:..\src/interruptions.c ****     }
 661:..\src/interruptions.c **** 
 662:..\src/interruptions.c ****         // Read pressure in any case
 663:..\src/interruptions.c ****         pressure_value  = (int32)(ADC_buf[0] );    //0 - 4096  
 1247              		.loc 1 663 0
 1248 0024 714B     		ldr	r3, .L114+28
 1249 0026 B3F90030 		ldrsh	r3, [r3]
 1250 002a 1A46     		mov	r2, r3
 1251 002c 704B     		ldr	r3, .L114+32
 1252 002e 1A60     		str	r2, [r3]
 664:..\src/interruptions.c ****         pressure_value = (((float)pressure_value/4096.0)/0.002421)-101.325;       // datasheet tran
 1253              		.loc 1 664 0
 1254 0030 6F4B     		ldr	r3, .L114+32
 1255 0032 1B68     		ldr	r3, [r3]
 1256 0034 1846     		mov	r0, r3
 1257 0036 FFF7FEFF 		bl	__aeabi_i2f
 1258 003a 0346     		mov	r3, r0
 1259 003c 1846     		mov	r0, r3
 1260 003e FFF7FEFF 		bl	__aeabi_f2d
 1261 0042 4FF00002 		mov	r2, #0
 1262 0046 6B4B     		ldr	r3, .L114+36
 1263 0048 FFF7FEFF 		bl	__aeabi_ddiv
 1264 004c 0346     		mov	r3, r0
 1265 004e 0C46     		mov	r4, r1
 1266 0050 1846     		mov	r0, r3
 1267 0052 2146     		mov	r1, r4
 1268 0054 5EA3     		adr	r3, .L114
 1269 0056 D3E90023 		ldrd	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 36


 1270 005a FFF7FEFF 		bl	__aeabi_ddiv
 1271 005e 0346     		mov	r3, r0
 1272 0060 0C46     		mov	r4, r1
 1273 0062 1846     		mov	r0, r3
 1274 0064 2146     		mov	r1, r4
 1275 0066 5CA3     		adr	r3, .L114+8
 1276 0068 D3E90023 		ldrd	r2, [r3]
 1277 006c FFF7FEFF 		bl	__aeabi_dsub
 1278 0070 0346     		mov	r3, r0
 1279 0072 0C46     		mov	r4, r1
 1280 0074 1846     		mov	r0, r3
 1281 0076 2146     		mov	r1, r4
 1282 0078 FFF7FEFF 		bl	__aeabi_d2iz
 1283 007c 0246     		mov	r2, r0
 1284 007e 5C4B     		ldr	r3, .L114+32
 1285 0080 1A60     		str	r2, [r3]
 665:..\src/interruptions.c ****         if (pressure_value < 0) pressure_value = 0;
 1286              		.loc 1 665 0
 1287 0082 5B4B     		ldr	r3, .L114+32
 1288 0084 1B68     		ldr	r3, [r3]
 1289 0086 002B     		cmp	r3, #0
 1290 0088 02DA     		bge	.L103
 1291              		.loc 1 665 0 is_stmt 0 discriminator 1
 1292 008a 594B     		ldr	r3, .L114+32
 1293 008c 0022     		movs	r2, #0
 1294 008e 1A60     		str	r2, [r3]
 1295              	.L103:
 666:..\src/interruptions.c ****     
 667:..\src/interruptions.c ****         flag_master =  (int32)((ADC_buf[1]/4096.0)*5000);
 1296              		.loc 1 667 0 is_stmt 1
 1297 0090 564B     		ldr	r3, .L114+28
 1298 0092 B3F90230 		ldrsh	r3, [r3, #2]
 1299 0096 1846     		mov	r0, r3
 1300 0098 FFF7FEFF 		bl	__aeabi_i2d
 1301 009c 4FF00002 		mov	r2, #0
 1302 00a0 544B     		ldr	r3, .L114+36
 1303 00a2 FFF7FEFF 		bl	__aeabi_ddiv
 1304 00a6 0346     		mov	r3, r0
 1305 00a8 0C46     		mov	r4, r1
 1306 00aa 1846     		mov	r0, r3
 1307 00ac 2146     		mov	r1, r4
 1308 00ae 4CA3     		adr	r3, .L114+16
 1309 00b0 D3E90023 		ldrd	r2, [r3]
 1310 00b4 FFF7FEFF 		bl	__aeabi_dmul
 1311 00b8 0346     		mov	r3, r0
 1312 00ba 0C46     		mov	r4, r1
 1313 00bc 1846     		mov	r0, r3
 1314 00be 2146     		mov	r1, r4
 1315 00c0 FFF7FEFF 		bl	__aeabi_d2iz
 1316 00c4 0246     		mov	r2, r0
 1317 00c6 4C4B     		ldr	r3, .L114+40
 1318 00c8 1A60     		str	r2, [r3]
 668:..\src/interruptions.c **** 
 669:..\src/interruptions.c ****         // Reset emg
 670:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_INPUT_EMGS; idx++){
 1319              		.loc 1 670 0
 1320 00ca 4C4B     		ldr	r3, .L114+44
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 37


 1321 00cc 0022     		movs	r2, #0
 1322 00ce 1A70     		strb	r2, [r3]
 1323 00d0 0CE0     		b	.L104
 1324              	.L105:
 671:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 1325              		.loc 1 671 0 discriminator 3
 1326 00d2 4A4B     		ldr	r3, .L114+44
 1327 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1328 00d6 1946     		mov	r1, r3
 1329 00d8 494B     		ldr	r3, .L114+48
 1330 00da 0022     		movs	r2, #0
 1331 00dc 43F82120 		str	r2, [r3, r1, lsl #2]
 670:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 1332              		.loc 1 670 0 discriminator 3
 1333 00e0 464B     		ldr	r3, .L114+44
 1334 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1335 00e4 0133     		adds	r3, r3, #1
 1336 00e6 DAB2     		uxtb	r2, r3
 1337 00e8 444B     		ldr	r3, .L114+44
 1338 00ea 1A70     		strb	r2, [r3]
 1339              	.L104:
 670:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 1340              		.loc 1 670 0 is_stmt 0 discriminator 1
 1341 00ec 434B     		ldr	r3, .L114+44
 1342 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1343 00f0 012B     		cmp	r3, #1
 1344 00f2 EED9     		bls	.L105
 672:..\src/interruptions.c ****         }
 673:..\src/interruptions.c **** 
 674:..\src/interruptions.c ****         i_aux = (int32)(ADC_buf[1 + c_mem.emg.switch_emg]);
 1345              		.loc 1 674 0 is_stmt 1
 1346 00f4 434B     		ldr	r3, .L114+52
 1347 00f6 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 1348 00fa 0133     		adds	r3, r3, #1
 1349 00fc 3B4A     		ldr	r2, .L114+28
 1350 00fe 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 1351 0102 7B60     		str	r3, [r7, #4]
 675:..\src/interruptions.c ****         if (i_aux < 0) 
 1352              		.loc 1 675 0
 1353 0104 7B68     		ldr	r3, [r7, #4]
 1354 0106 002B     		cmp	r3, #0
 1355 0108 01DA     		bge	.L106
 676:..\src/interruptions.c ****             i_aux = 0;
 1356              		.loc 1 676 0
 1357 010a 0023     		movs	r3, #0
 1358 010c 7B60     		str	r3, [r7, #4]
 1359              	.L106:
 677:..\src/interruptions.c ****         i_aux = filter(i_aux, &filt_emg[0]);
 1360              		.loc 1 677 0
 1361 010e 3E49     		ldr	r1, .L114+56
 1362 0110 7868     		ldr	r0, [r7, #4]
 1363 0112 FFF7FEFF 		bl	filter
 1364 0116 7860     		str	r0, [r7, #4]
 678:..\src/interruptions.c ****         i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[0];
 1365              		.loc 1 678 0
 1366 0118 7B68     		ldr	r3, [r7, #4]
 1367 011a 9B02     		lsls	r3, r3, #10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 38


 1368 011c 1A46     		mov	r2, r3
 1369 011e 3B4B     		ldr	r3, .L114+60
 1370 0120 5B6B     		ldr	r3, [r3, #52]
 1371 0122 B2FBF3F3 		udiv	r3, r2, r3
 1372 0126 7B60     		str	r3, [r7, #4]
 679:..\src/interruptions.c **** 
 680:..\src/interruptions.c ****         if (interrupt_flag){
 1373              		.loc 1 680 0
 1374 0128 2F4B     		ldr	r3, .L114+24
 1375 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1376 012c 002B     		cmp	r3, #0
 1377 012e 04D0     		beq	.L107
 681:..\src/interruptions.c ****             interrupt_flag = FALSE;
 1378              		.loc 1 681 0
 1379 0130 2D4B     		ldr	r3, .L114+24
 1380 0132 0022     		movs	r2, #0
 1381 0134 1A70     		strb	r2, [r3]
 682:..\src/interruptions.c ****             interrupt_manager();
 1382              		.loc 1 682 0
 1383 0136 FFF7FEFF 		bl	interrupt_manager
 1384              	.L107:
 683:..\src/interruptions.c ****         }
 684:..\src/interruptions.c ****         //Saturation
 685:..\src/interruptions.c ****         if (i_aux < 0)
 1385              		.loc 1 685 0
 1386 013a 7B68     		ldr	r3, [r7, #4]
 1387 013c 002B     		cmp	r3, #0
 1388 013e 02DA     		bge	.L108
 686:..\src/interruptions.c ****             i_aux = 0;
 1389              		.loc 1 686 0
 1390 0140 0023     		movs	r3, #0
 1391 0142 7B60     		str	r3, [r7, #4]
 1392 0144 06E0     		b	.L109
 1393              	.L108:
 687:..\src/interruptions.c ****         else 
 688:..\src/interruptions.c ****             if (i_aux > 1024) 
 1394              		.loc 1 688 0
 1395 0146 7B68     		ldr	r3, [r7, #4]
 1396 0148 B3F5806F 		cmp	r3, #1024
 1397 014c 02DD     		ble	.L109
 689:..\src/interruptions.c ****                 i_aux = 1024;
 1398              		.loc 1 689 0
 1399 014e 4FF48063 		mov	r3, #1024
 1400 0152 7B60     		str	r3, [r7, #4]
 1401              	.L109:
 690:..\src/interruptions.c ****         
 691:..\src/interruptions.c ****         g_adc_meas.emg[0] = i_aux;
 1402              		.loc 1 691 0
 1403 0154 2A4A     		ldr	r2, .L114+48
 1404 0156 7B68     		ldr	r3, [r7, #4]
 1405 0158 1360     		str	r3, [r2]
 692:..\src/interruptions.c ****             
 693:..\src/interruptions.c ****         i_aux = (int32)(ADC_buf[2 - c_mem.emg.switch_emg]);
 1406              		.loc 1 693 0
 1407 015a 2A4B     		ldr	r3, .L114+52
 1408 015c 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 1409 0160 C3F10203 		rsb	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 39


 1410 0164 214A     		ldr	r2, .L114+28
 1411 0166 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 1412 016a 7B60     		str	r3, [r7, #4]
 694:..\src/interruptions.c **** 
 695:..\src/interruptions.c ****         if (i_aux < 0)
 1413              		.loc 1 695 0
 1414 016c 7B68     		ldr	r3, [r7, #4]
 1415 016e 002B     		cmp	r3, #0
 1416 0170 01DA     		bge	.L110
 696:..\src/interruptions.c ****             i_aux = 0;
 1417              		.loc 1 696 0
 1418 0172 0023     		movs	r3, #0
 1419 0174 7B60     		str	r3, [r7, #4]
 1420              	.L110:
 697:..\src/interruptions.c ****         i_aux = filter(i_aux, &filt_emg[1]);
 1421              		.loc 1 697 0
 1422 0176 2649     		ldr	r1, .L114+64
 1423 0178 7868     		ldr	r0, [r7, #4]
 1424 017a FFF7FEFF 		bl	filter
 1425 017e 7860     		str	r0, [r7, #4]
 698:..\src/interruptions.c ****         i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[1];
 1426              		.loc 1 698 0
 1427 0180 7B68     		ldr	r3, [r7, #4]
 1428 0182 9B02     		lsls	r3, r3, #10
 1429 0184 1A46     		mov	r2, r3
 1430 0186 214B     		ldr	r3, .L114+60
 1431 0188 9B6B     		ldr	r3, [r3, #56]
 1432 018a B2FBF3F3 		udiv	r3, r2, r3
 1433 018e 7B60     		str	r3, [r7, #4]
 699:..\src/interruptions.c **** 
 700:..\src/interruptions.c ****         if (interrupt_flag){
 1434              		.loc 1 700 0
 1435 0190 154B     		ldr	r3, .L114+24
 1436 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1437 0194 002B     		cmp	r3, #0
 1438 0196 04D0     		beq	.L111
 701:..\src/interruptions.c ****             interrupt_flag = FALSE;
 1439              		.loc 1 701 0
 1440 0198 134B     		ldr	r3, .L114+24
 1441 019a 0022     		movs	r2, #0
 1442 019c 1A70     		strb	r2, [r3]
 702:..\src/interruptions.c ****             interrupt_manager();
 1443              		.loc 1 702 0
 1444 019e FFF7FEFF 		bl	interrupt_manager
 1445              	.L111:
 703:..\src/interruptions.c ****         }
 704:..\src/interruptions.c ****         
 705:..\src/interruptions.c ****         if (i_aux < 0) 
 1446              		.loc 1 705 0
 1447 01a2 7B68     		ldr	r3, [r7, #4]
 1448 01a4 002B     		cmp	r3, #0
 1449 01a6 02DA     		bge	.L112
 706:..\src/interruptions.c ****             i_aux = 0;
 1450              		.loc 1 706 0
 1451 01a8 0023     		movs	r3, #0
 1452 01aa 7B60     		str	r3, [r7, #4]
 1453 01ac 06E0     		b	.L113
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 40


 1454              	.L112:
 707:..\src/interruptions.c ****         else 
 708:..\src/interruptions.c ****             if (i_aux > 1024)
 1455              		.loc 1 708 0
 1456 01ae 7B68     		ldr	r3, [r7, #4]
 1457 01b0 B3F5806F 		cmp	r3, #1024
 1458 01b4 02DD     		ble	.L113
 709:..\src/interruptions.c ****                 i_aux = 1024;
 1459              		.loc 1 709 0
 1460 01b6 4FF48063 		mov	r3, #1024
 1461 01ba 7B60     		str	r3, [r7, #4]
 1462              	.L113:
 710:..\src/interruptions.c ****         
 711:..\src/interruptions.c ****         g_adc_meas.emg[1] = i_aux;
 1463              		.loc 1 711 0
 1464 01bc 104A     		ldr	r2, .L114+48
 1465 01be 7B68     		ldr	r3, [r7, #4]
 1466 01c0 5360     		str	r3, [r2, #4]
 712:..\src/interruptions.c ****     
 713:..\src/interruptions.c **** }
 1467              		.loc 1 713 0
 1468 01c2 00BF     		nop
 1469 01c4 0C37     		adds	r7, r7, #12
 1470              		.cfi_def_cfa_offset 12
 1471 01c6 BD46     		mov	sp, r7
 1472              		.cfi_def_cfa_register 13
 1473              		@ sp needed
 1474 01c8 90BD     		pop	{r4, r7, pc}
 1475              	.L115:
 1476 01ca 00BFAFF3 		.align	3
 1476      0080
 1477              	.L114:
 1478 01d0 F10F5B7A 		.word	2052788209
 1479 01d4 34D5633F 		.word	1063507252
 1480 01d8 CDCCCCCC 		.word	-858993459
 1481 01dc CC545940 		.word	1079596236
 1482 01e0 00000000 		.word	0
 1483 01e4 0088B340 		.word	1085507584
 1484 01e8 00000000 		.word	interrupt_flag
 1485 01ec 00000000 		.word	ADC_buf
 1486 01f0 00000000 		.word	pressure_value
 1487 01f4 0000B040 		.word	1085276160
 1488 01f8 00000000 		.word	flag_master
 1489 01fc 92000000 		.word	idx.9804
 1490 0200 00000000 		.word	g_adc_meas
 1491 0204 00000000 		.word	c_mem
 1492 0208 00000000 		.word	filt_emg
 1493 020c 00000000 		.word	g_mem
 1494 0210 08000000 		.word	filt_emg+8
 1495              		.cfi_endproc
 1496              	.LFE71:
 1497              		.size	analog_read_end, .-analog_read_end
 1498              		.section	.text.overcurrent_control,"ax",%progbits
 1499              		.align	2
 1500              		.global	overcurrent_control
 1501              		.thumb
 1502              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 41


 1503              		.type	overcurrent_control, %function
 1504              	overcurrent_control:
 1505              	.LFB72:
 714:..\src/interruptions.c **** 
 715:..\src/interruptions.c **** //==============================================================================
 716:..\src/interruptions.c **** //                                                           OVERCURRENT CONTROL
 717:..\src/interruptions.c **** //==============================================================================
 718:..\src/interruptions.c **** 
 719:..\src/interruptions.c **** void overcurrent_control() {
 1506              		.loc 1 719 0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 0
 1509              		@ frame_needed = 1, uses_anonymous_args = 0
 1510              		@ link register save eliminated.
 1511 0000 80B4     		push	{r7}
 1512              		.cfi_def_cfa_offset 4
 1513              		.cfi_offset 7, -4
 1514 0002 00AF     		add	r7, sp, #0
 1515              		.cfi_def_cfa_register 7
 720:..\src/interruptions.c ****     
 721:..\src/interruptions.c **** }
 1516              		.loc 1 721 0
 1517 0004 00BF     		nop
 1518 0006 BD46     		mov	sp, r7
 1519              		.cfi_def_cfa_register 13
 1520              		@ sp needed
 1521 0008 80BC     		pop	{r7}
 1522              		.cfi_restore 7
 1523              		.cfi_def_cfa_offset 0
 1524 000a 7047     		bx	lr
 1525              		.cfi_endproc
 1526              	.LFE72:
 1527              		.size	overcurrent_control, .-overcurrent_control
 1528              		.section	.text.pwm_limit_search,"ax",%progbits
 1529              		.align	2
 1530              		.global	pwm_limit_search
 1531              		.thumb
 1532              		.thumb_func
 1533              		.type	pwm_limit_search, %function
 1534              	pwm_limit_search:
 1535              	.LFB73:
 722:..\src/interruptions.c **** 
 723:..\src/interruptions.c **** //==============================================================================
 724:..\src/interruptions.c **** //                                                              PWM_LIMIT_SEARCH
 725:..\src/interruptions.c **** //==============================================================================
 726:..\src/interruptions.c **** 
 727:..\src/interruptions.c **** void pwm_limit_search(uint8 mot_idx) {
 1536              		.loc 1 727 0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 8
 1539              		@ frame_needed = 1, uses_anonymous_args = 0
 1540              		@ link register save eliminated.
 1541 0000 80B4     		push	{r7}
 1542              		.cfi_def_cfa_offset 4
 1543              		.cfi_offset 7, -4
 1544 0002 83B0     		sub	sp, sp, #12
 1545              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 42


 1546 0004 00AF     		add	r7, sp, #0
 1547              		.cfi_def_cfa_register 7
 1548 0006 0346     		mov	r3, r0
 1549 0008 FB71     		strb	r3, [r7, #7]
 728:..\src/interruptions.c **** 
 729:..\src/interruptions.c **** }
 1550              		.loc 1 729 0
 1551 000a 00BF     		nop
 1552 000c 0C37     		adds	r7, r7, #12
 1553              		.cfi_def_cfa_offset 4
 1554 000e BD46     		mov	sp, r7
 1555              		.cfi_def_cfa_register 13
 1556              		@ sp needed
 1557 0010 80BC     		pop	{r7}
 1558              		.cfi_restore 7
 1559              		.cfi_def_cfa_offset 0
 1560 0012 7047     		bx	lr
 1561              		.cfi_endproc
 1562              	.LFE73:
 1563              		.size	pwm_limit_search, .-pwm_limit_search
 1564              		.section	.text.cycles_counter_update,"ax",%progbits
 1565              		.align	2
 1566              		.global	cycles_counter_update
 1567              		.thumb
 1568              		.thumb_func
 1569              		.type	cycles_counter_update, %function
 1570              	cycles_counter_update:
 1571              	.LFB74:
 730:..\src/interruptions.c **** 
 731:..\src/interruptions.c **** //==============================================================================
 732:..\src/interruptions.c **** //                                                         CYCLES COUNTER UPDATE
 733:..\src/interruptions.c **** //==============================================================================
 734:..\src/interruptions.c **** 
 735:..\src/interruptions.c **** void cycles_counter_update() {
 1572              		.loc 1 735 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 0
 1575              		@ frame_needed = 1, uses_anonymous_args = 0
 1576              		@ link register save eliminated.
 1577 0000 80B4     		push	{r7}
 1578              		.cfi_def_cfa_offset 4
 1579              		.cfi_offset 7, -4
 1580 0002 00AF     		add	r7, sp, #0
 1581              		.cfi_def_cfa_register 7
 736:..\src/interruptions.c **** 	
 737:..\src/interruptions.c **** }
 1582              		.loc 1 737 0
 1583 0004 00BF     		nop
 1584 0006 BD46     		mov	sp, r7
 1585              		.cfi_def_cfa_register 13
 1586              		@ sp needed
 1587 0008 80BC     		pop	{r7}
 1588              		.cfi_restore 7
 1589              		.cfi_def_cfa_offset 0
 1590 000a 7047     		bx	lr
 1591              		.cfi_endproc
 1592              	.LFE74:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 43


 1593              		.size	cycles_counter_update, .-cycles_counter_update
 1594              		.section	.text.save_cycles_eeprom,"ax",%progbits
 1595              		.align	2
 1596              		.global	save_cycles_eeprom
 1597              		.thumb
 1598              		.thumb_func
 1599              		.type	save_cycles_eeprom, %function
 1600              	save_cycles_eeprom:
 1601              	.LFB75:
 738:..\src/interruptions.c **** 
 739:..\src/interruptions.c **** //==============================================================================
 740:..\src/interruptions.c **** //                                                            SAVE CYCLES EEPROM
 741:..\src/interruptions.c **** //==============================================================================
 742:..\src/interruptions.c **** 
 743:..\src/interruptions.c **** void save_cycles_eeprom() {
 1602              		.loc 1 743 0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 0
 1605              		@ frame_needed = 1, uses_anonymous_args = 0
 1606              		@ link register save eliminated.
 1607 0000 80B4     		push	{r7}
 1608              		.cfi_def_cfa_offset 4
 1609              		.cfi_offset 7, -4
 1610 0002 00AF     		add	r7, sp, #0
 1611              		.cfi_def_cfa_register 7
 744:..\src/interruptions.c **** 
 745:..\src/interruptions.c **** }
 1612              		.loc 1 745 0
 1613 0004 00BF     		nop
 1614 0006 BD46     		mov	sp, r7
 1615              		.cfi_def_cfa_register 13
 1616              		@ sp needed
 1617 0008 80BC     		pop	{r7}
 1618              		.cfi_restore 7
 1619              		.cfi_def_cfa_offset 0
 1620 000a 7047     		bx	lr
 1621              		.cfi_endproc
 1622              	.LFE75:
 1623              		.size	save_cycles_eeprom, .-save_cycles_eeprom
 1624              		.bss
 1625              	state.9746:
 1626 0000 00       		.space	1
 1627 0001 000000   		.align	2
 1628              	rx_queue.9750:
 1629 0004 000000   		.space	3
 1630              	data_packet_length.9748:
 1631 0007 00       		.space	1
 1632              	data_packet_index.9747:
 1633 0008 00       		.space	1
 1634 0009 000000   		.align	2
 1635              	data_packet_buffer.9749:
 1636 000c 00000000 		.space	128
 1636      00000000 
 1636      00000000 
 1636      00000000 
 1636      00000000 
 1637              	current_emg.9771:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 44


 1638 008c 00       		.space	1
 1639 008d 000000   		.align	2
 1640              	motor_dir.9793:
 1641 0090 0000     		.space	2
 1642              	idx.9804:
 1643 0092 00       		.space	1
 1644              		.text
 1645              	.Letext0:
 1646              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1647              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1648              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1649              		.file 5 "..\\src\\globals.h"
 1650              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1651              		.file 7 "..\\src\\commands.h"
 1652              		.section	.debug_info,"",%progbits
 1653              	.Ldebug_info0:
 1654 0000 5C070000 		.4byte	0x75c
 1655 0004 0400     		.2byte	0x4
 1656 0006 00000000 		.4byte	.Ldebug_abbrev0
 1657 000a 04       		.byte	0x4
 1658 000b 01       		.uleb128 0x1
 1659 000c C2000000 		.4byte	.LASF111
 1660 0010 0C       		.byte	0xc
 1661 0011 93020000 		.4byte	.LASF112
 1662 0015 5C050000 		.4byte	.LASF113
 1663 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1664 001d 00000000 		.4byte	0
 1665 0021 00000000 		.4byte	.Ldebug_line0
 1666 0025 02       		.uleb128 0x2
 1667 0026 01       		.byte	0x1
 1668 0027 06       		.byte	0x6
 1669 0028 FE030000 		.4byte	.LASF0
 1670 002c 02       		.uleb128 0x2
 1671 002d 01       		.byte	0x1
 1672 002e 08       		.byte	0x8
 1673 002f A0030000 		.4byte	.LASF1
 1674 0033 02       		.uleb128 0x2
 1675 0034 02       		.byte	0x2
 1676 0035 05       		.byte	0x5
 1677 0036 8F010000 		.4byte	.LASF2
 1678 003a 02       		.uleb128 0x2
 1679 003b 02       		.byte	0x2
 1680 003c 07       		.byte	0x7
 1681 003d A3040000 		.4byte	.LASF3
 1682 0041 03       		.uleb128 0x3
 1683 0042 E3040000 		.4byte	.LASF9
 1684 0046 02       		.byte	0x2
 1685 0047 3F       		.byte	0x3f
 1686 0048 4C000000 		.4byte	0x4c
 1687 004c 02       		.uleb128 0x2
 1688 004d 04       		.byte	0x4
 1689 004e 05       		.byte	0x5
 1690 004f D0020000 		.4byte	.LASF4
 1691 0053 02       		.uleb128 0x2
 1692 0054 04       		.byte	0x4
 1693 0055 07       		.byte	0x7
 1694 0056 67040000 		.4byte	.LASF5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 45


 1695 005a 02       		.uleb128 0x2
 1696 005b 08       		.byte	0x8
 1697 005c 05       		.byte	0x5
 1698 005d C2020000 		.4byte	.LASF6
 1699 0061 02       		.uleb128 0x2
 1700 0062 08       		.byte	0x8
 1701 0063 07       		.byte	0x7
 1702 0064 16040000 		.4byte	.LASF7
 1703 0068 04       		.uleb128 0x4
 1704 0069 04       		.byte	0x4
 1705 006a 05       		.byte	0x5
 1706 006b 696E7400 		.ascii	"int\000"
 1707 006f 02       		.uleb128 0x2
 1708 0070 04       		.byte	0x4
 1709 0071 07       		.byte	0x7
 1710 0072 46040000 		.4byte	.LASF8
 1711 0076 03       		.uleb128 0x3
 1712 0077 DB040000 		.4byte	.LASF10
 1713 007b 03       		.byte	0x3
 1714 007c 2C       		.byte	0x2c
 1715 007d 41000000 		.4byte	0x41
 1716 0081 05       		.uleb128 0x5
 1717 0082 ED040000 		.4byte	.LASF11
 1718 0086 04       		.byte	0x4
 1719 0087 E401     		.2byte	0x1e4
 1720 0089 2C000000 		.4byte	0x2c
 1721 008d 05       		.uleb128 0x5
 1722 008e DB010000 		.4byte	.LASF12
 1723 0092 04       		.byte	0x4
 1724 0093 E501     		.2byte	0x1e5
 1725 0095 3A000000 		.4byte	0x3a
 1726 0099 05       		.uleb128 0x5
 1727 009a 2C050000 		.4byte	.LASF13
 1728 009e 04       		.byte	0x4
 1729 009f E601     		.2byte	0x1e6
 1730 00a1 53000000 		.4byte	0x53
 1731 00a5 05       		.uleb128 0x5
 1732 00a6 8D020000 		.4byte	.LASF14
 1733 00aa 04       		.byte	0x4
 1734 00ab E801     		.2byte	0x1e8
 1735 00ad 33000000 		.4byte	0x33
 1736 00b1 05       		.uleb128 0x5
 1737 00b2 BC020000 		.4byte	.LASF15
 1738 00b6 04       		.byte	0x4
 1739 00b7 E901     		.2byte	0x1e9
 1740 00b9 4C000000 		.4byte	0x4c
 1741 00bd 02       		.uleb128 0x2
 1742 00be 04       		.byte	0x4
 1743 00bf 04       		.byte	0x4
 1744 00c0 B6020000 		.4byte	.LASF16
 1745 00c4 02       		.uleb128 0x2
 1746 00c5 08       		.byte	0x8
 1747 00c6 04       		.byte	0x4
 1748 00c7 4B050000 		.4byte	.LASF17
 1749 00cb 02       		.uleb128 0x2
 1750 00cc 01       		.byte	0x1
 1751 00cd 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 46


 1752 00ce C9040000 		.4byte	.LASF18
 1753 00d2 05       		.uleb128 0x5
 1754 00d3 33050000 		.4byte	.LASF19
 1755 00d7 04       		.byte	0x4
 1756 00d8 8E02     		.2byte	0x28e
 1757 00da DE000000 		.4byte	0xde
 1758 00de 06       		.uleb128 0x6
 1759 00df 81000000 		.4byte	0x81
 1760 00e3 02       		.uleb128 0x2
 1761 00e4 08       		.byte	0x8
 1762 00e5 04       		.byte	0x4
 1763 00e6 77030000 		.4byte	.LASF20
 1764 00ea 02       		.uleb128 0x2
 1765 00eb 04       		.byte	0x4
 1766 00ec 07       		.byte	0x7
 1767 00ed 90000000 		.4byte	.LASF21
 1768 00f1 07       		.uleb128 0x7
 1769 00f2 99010000 		.4byte	.LASF114
 1770 00f6 01       		.byte	0x1
 1771 00f7 2C000000 		.4byte	0x2c
 1772 00fb 07       		.byte	0x7
 1773 00fc BA       		.byte	0xba
 1774 00fd 32010000 		.4byte	0x132
 1775 0101 08       		.uleb128 0x8
 1776 0102 CB030000 		.4byte	.LASF22
 1777 0106 00       		.byte	0
 1778 0107 08       		.uleb128 0x8
 1779 0108 39000000 		.4byte	.LASF23
 1780 010c 01       		.byte	0x1
 1781 010d 08       		.uleb128 0x8
 1782 010e BF010000 		.4byte	.LASF24
 1783 0112 02       		.byte	0x2
 1784 0113 08       		.uleb128 0x8
 1785 0114 33030000 		.4byte	.LASF25
 1786 0118 03       		.byte	0x3
 1787 0119 08       		.uleb128 0x8
 1788 011a 54020000 		.4byte	.LASF26
 1789 011e 04       		.byte	0x4
 1790 011f 08       		.uleb128 0x8
 1791 0120 9F060000 		.4byte	.LASF27
 1792 0124 05       		.byte	0x5
 1793 0125 08       		.uleb128 0x8
 1794 0126 F7050000 		.4byte	.LASF28
 1795 012a 06       		.byte	0x6
 1796 012b 08       		.uleb128 0x8
 1797 012c 50010000 		.4byte	.LASF29
 1798 0130 07       		.byte	0x7
 1799 0131 00       		.byte	0
 1800 0132 09       		.uleb128 0x9
 1801 0133 6F030000 		.4byte	.LASF33
 1802 0137 86       		.byte	0x86
 1803 0138 05       		.byte	0x5
 1804 0139 9A       		.byte	0x9a
 1805 013a 6F010000 		.4byte	0x16f
 1806 013e 0A       		.uleb128 0xa
 1807 013f 1D050000 		.4byte	.LASF30
 1808 0143 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 47


 1809 0144 9B       		.byte	0x9b
 1810 0145 6F010000 		.4byte	0x16f
 1811 0149 00       		.byte	0
 1812 014a 0A       		.uleb128 0xa
 1813 014b BB000000 		.4byte	.LASF31
 1814 014f 05       		.byte	0x5
 1815 0150 9C       		.byte	0x9c
 1816 0151 A5000000 		.4byte	0xa5
 1817 0155 80       		.byte	0x80
 1818 0156 0B       		.uleb128 0xb
 1819 0157 696E6400 		.ascii	"ind\000"
 1820 015b 05       		.byte	0x5
 1821 015c 9D       		.byte	0x9d
 1822 015d A5000000 		.4byte	0xa5
 1823 0161 82       		.byte	0x82
 1824 0162 0A       		.uleb128 0xa
 1825 0163 D5040000 		.4byte	.LASF32
 1826 0167 05       		.byte	0x5
 1827 0168 9E       		.byte	0x9e
 1828 0169 81000000 		.4byte	0x81
 1829 016d 84       		.byte	0x84
 1830 016e 00       		.byte	0
 1831 016f 0C       		.uleb128 0xc
 1832 0170 81000000 		.4byte	0x81
 1833 0174 7F010000 		.4byte	0x17f
 1834 0178 0D       		.uleb128 0xd
 1835 0179 EA000000 		.4byte	0xea
 1836 017d 7F       		.byte	0x7f
 1837 017e 00       		.byte	0
 1838 017f 09       		.uleb128 0x9
 1839 0180 B1000000 		.4byte	.LASF34
 1840 0184 10       		.byte	0x10
 1841 0185 05       		.byte	0x5
 1842 0186 A8       		.byte	0xa8
 1843 0187 AF010000 		.4byte	0x1af
 1844 018b 0B       		.uleb128 0xb
 1845 018c 696400   		.ascii	"id\000"
 1846 018f 05       		.byte	0x5
 1847 0190 A9       		.byte	0xa9
 1848 0191 81000000 		.4byte	0x81
 1849 0195 00       		.byte	0
 1850 0196 0A       		.uleb128 0xa
 1851 0197 68020000 		.4byte	.LASF35
 1852 019b 05       		.byte	0x5
 1853 019c AA       		.byte	0xaa
 1854 019d 81000000 		.4byte	0x81
 1855 01a1 01       		.byte	0x1
 1856 01a2 0A       		.uleb128 0xa
 1857 01a3 D8050000 		.4byte	.LASF36
 1858 01a7 05       		.byte	0x5
 1859 01a8 AB       		.byte	0xab
 1860 01a9 AF010000 		.4byte	0x1af
 1861 01ad 02       		.byte	0x2
 1862 01ae 00       		.byte	0
 1863 01af 0C       		.uleb128 0xc
 1864 01b0 81000000 		.4byte	0x81
 1865 01b4 BF010000 		.4byte	0x1bf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 48


 1866 01b8 0D       		.uleb128 0xd
 1867 01b9 EA000000 		.4byte	0xea
 1868 01bd 0D       		.byte	0xd
 1869 01be 00       		.byte	0
 1870 01bf 09       		.uleb128 0x9
 1871 01c0 F6010000 		.4byte	.LASF37
 1872 01c4 10       		.byte	0x10
 1873 01c5 05       		.byte	0x5
 1874 01c6 B2       		.byte	0xb2
 1875 01c7 08020000 		.4byte	0x208
 1876 01cb 0A       		.uleb128 0xa
 1877 01cc 0A040000 		.4byte	.LASF38
 1878 01d0 05       		.byte	0x5
 1879 01d1 B4       		.byte	0xb4
 1880 01d2 B1000000 		.4byte	0xb1
 1881 01d6 00       		.byte	0
 1882 01d7 0A       		.uleb128 0xa
 1883 01d8 81020000 		.4byte	.LASF39
 1884 01dc 05       		.byte	0x5
 1885 01dd B5       		.byte	0xb5
 1886 01de B1000000 		.4byte	0xb1
 1887 01e2 04       		.byte	0x4
 1888 01e3 0A       		.uleb128 0xa
 1889 01e4 0B060000 		.4byte	.LASF40
 1890 01e8 05       		.byte	0x5
 1891 01e9 B6       		.byte	0xb6
 1892 01ea 81000000 		.4byte	0x81
 1893 01ee 08       		.byte	0x8
 1894 01ef 0B       		.uleb128 0xb
 1895 01f0 72657300 		.ascii	"res\000"
 1896 01f4 05       		.byte	0x5
 1897 01f5 B7       		.byte	0xb7
 1898 01f6 81000000 		.4byte	0x81
 1899 01fa 09       		.byte	0x9
 1900 01fb 0A       		.uleb128 0xa
 1901 01fc D8050000 		.4byte	.LASF36
 1902 0200 05       		.byte	0x5
 1903 0201 B8       		.byte	0xb8
 1904 0202 08020000 		.4byte	0x208
 1905 0206 0A       		.byte	0xa
 1906 0207 00       		.byte	0
 1907 0208 0C       		.uleb128 0xc
 1908 0209 81000000 		.4byte	0x81
 1909 020d 18020000 		.4byte	0x218
 1910 0211 0D       		.uleb128 0xd
 1911 0212 EA000000 		.4byte	0xea
 1912 0216 05       		.byte	0x5
 1913 0217 00       		.byte	0
 1914 0218 09       		.uleb128 0x9
 1915 0219 CE040000 		.4byte	.LASF41
 1916 021d 10       		.byte	0x10
 1917 021e 05       		.byte	0x5
 1918 021f C0       		.byte	0xc0
 1919 0220 61020000 		.4byte	0x261
 1920 0224 0A       		.uleb128 0xa
 1921 0225 38040000 		.4byte	.LASF42
 1922 0229 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 49


 1923 022a C1       		.byte	0xc1
 1924 022b 61020000 		.4byte	0x261
 1925 022f 00       		.byte	0
 1926 0230 0A       		.uleb128 0xa
 1927 0231 D9020000 		.4byte	.LASF43
 1928 0235 05       		.byte	0x5
 1929 0236 C2       		.byte	0xc2
 1930 0237 71020000 		.4byte	0x271
 1931 023b 04       		.byte	0x4
 1932 023c 0A       		.uleb128 0xa
 1933 023d 8F060000 		.4byte	.LASF44
 1934 0241 05       		.byte	0x5
 1935 0242 C3       		.byte	0xc3
 1936 0243 81020000 		.4byte	0x281
 1937 0247 0C       		.byte	0xc
 1938 0248 0A       		.uleb128 0xa
 1939 0249 4B030000 		.4byte	.LASF45
 1940 024d 05       		.byte	0x5
 1941 024e C4       		.byte	0xc4
 1942 024f 81000000 		.4byte	0x81
 1943 0253 0E       		.byte	0xe
 1944 0254 0A       		.uleb128 0xa
 1945 0255 D8050000 		.4byte	.LASF36
 1946 0259 05       		.byte	0x5
 1947 025a C5       		.byte	0xc5
 1948 025b 91020000 		.4byte	0x291
 1949 025f 0F       		.byte	0xf
 1950 0260 00       		.byte	0
 1951 0261 0C       		.uleb128 0xc
 1952 0262 8D000000 		.4byte	0x8d
 1953 0266 71020000 		.4byte	0x271
 1954 026a 0D       		.uleb128 0xd
 1955 026b EA000000 		.4byte	0xea
 1956 026f 01       		.byte	0x1
 1957 0270 00       		.byte	0
 1958 0271 0C       		.uleb128 0xc
 1959 0272 99000000 		.4byte	0x99
 1960 0276 81020000 		.4byte	0x281
 1961 027a 0D       		.uleb128 0xd
 1962 027b EA000000 		.4byte	0xea
 1963 027f 01       		.byte	0x1
 1964 0280 00       		.byte	0
 1965 0281 0C       		.uleb128 0xc
 1966 0282 81000000 		.4byte	0x81
 1967 0286 91020000 		.4byte	0x291
 1968 028a 0D       		.uleb128 0xd
 1969 028b EA000000 		.4byte	0xea
 1970 028f 01       		.byte	0x1
 1971 0290 00       		.byte	0
 1972 0291 0C       		.uleb128 0xc
 1973 0292 81000000 		.4byte	0x81
 1974 0296 A1020000 		.4byte	0x2a1
 1975 029a 0D       		.uleb128 0xd
 1976 029b EA000000 		.4byte	0xea
 1977 029f 00       		.byte	0
 1978 02a0 00       		.byte	0
 1979 02a1 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 50


 1980 02a2 60030000 		.4byte	.LASF46
 1981 02a6 10       		.byte	0x10
 1982 02a7 05       		.byte	0x5
 1983 02a8 CC       		.byte	0xcc
 1984 02a9 D2020000 		.4byte	0x2d2
 1985 02ad 0A       		.uleb128 0xa
 1986 02ae 38050000 		.4byte	.LASF47
 1987 02b2 05       		.byte	0x5
 1988 02b3 CD       		.byte	0xcd
 1989 02b4 81000000 		.4byte	0x81
 1990 02b8 00       		.byte	0
 1991 02b9 0A       		.uleb128 0xa
 1992 02ba 4D060000 		.4byte	.LASF48
 1993 02be 05       		.byte	0x5
 1994 02bf CE       		.byte	0xce
 1995 02c0 81000000 		.4byte	0x81
 1996 02c4 01       		.byte	0x1
 1997 02c5 0A       		.uleb128 0xa
 1998 02c6 D8050000 		.4byte	.LASF36
 1999 02ca 05       		.byte	0x5
 2000 02cb CF       		.byte	0xcf
 2001 02cc AF010000 		.4byte	0x1af
 2002 02d0 02       		.byte	0x2
 2003 02d1 00       		.byte	0
 2004 02d2 09       		.uleb128 0x9
 2005 02d3 2D040000 		.4byte	.LASF49
 2006 02d7 10       		.byte	0x10
 2007 02d8 05       		.byte	0x5
 2008 02d9 D6       		.byte	0xd6
 2009 02da 27030000 		.4byte	0x327
 2010 02de 0A       		.uleb128 0xa
 2011 02df 67060000 		.4byte	.LASF50
 2012 02e3 05       		.byte	0x5
 2013 02e4 D7       		.byte	0xd7
 2014 02e5 B1000000 		.4byte	0xb1
 2015 02e9 00       		.byte	0
 2016 02ea 0A       		.uleb128 0xa
 2017 02eb F3040000 		.4byte	.LASF51
 2018 02ef 05       		.byte	0x5
 2019 02f0 D8       		.byte	0xd8
 2020 02f1 BD000000 		.4byte	0xbd
 2021 02f5 04       		.byte	0x4
 2022 02f6 0A       		.uleb128 0xa
 2023 02f7 2F060000 		.4byte	.LASF52
 2024 02fb 05       		.byte	0x5
 2025 02fc D9       		.byte	0xd9
 2026 02fd BD000000 		.4byte	0xbd
 2027 0301 08       		.byte	0x8
 2028 0302 0A       		.uleb128 0xa
 2029 0303 AE030000 		.4byte	.LASF53
 2030 0307 05       		.byte	0x5
 2031 0308 DA       		.byte	0xda
 2032 0309 81000000 		.4byte	0x81
 2033 030d 0C       		.byte	0xc
 2034 030e 0A       		.uleb128 0xa
 2035 030f 79040000 		.4byte	.LASF54
 2036 0313 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 51


 2037 0314 DB       		.byte	0xdb
 2038 0315 81000000 		.4byte	0x81
 2039 0319 0D       		.byte	0xd
 2040 031a 0A       		.uleb128 0xa
 2041 031b D8050000 		.4byte	.LASF36
 2042 031f 05       		.byte	0x5
 2043 0320 DC       		.byte	0xdc
 2044 0321 81020000 		.4byte	0x281
 2045 0325 0E       		.byte	0xe
 2046 0326 00       		.byte	0
 2047 0327 09       		.uleb128 0x9
 2048 0328 52050000 		.4byte	.LASF55
 2049 032c 60       		.byte	0x60
 2050 032d 05       		.byte	0x5
 2051 032e E6       		.byte	0xe6
 2052 032f 86030000 		.4byte	0x386
 2053 0333 0A       		.uleb128 0xa
 2054 0334 2A060000 		.4byte	.LASF56
 2055 0338 05       		.byte	0x5
 2056 0339 E7       		.byte	0xe7
 2057 033a 81000000 		.4byte	0x81
 2058 033e 00       		.byte	0
 2059 033f 0A       		.uleb128 0xa
 2060 0340 D8050000 		.4byte	.LASF36
 2061 0344 05       		.byte	0x5
 2062 0345 E8       		.byte	0xe8
 2063 0346 86030000 		.4byte	0x386
 2064 034a 01       		.byte	0x1
 2065 034b 0B       		.uleb128 0xb
 2066 034c 64657600 		.ascii	"dev\000"
 2067 0350 05       		.byte	0x5
 2068 0351 E9       		.byte	0xe9
 2069 0352 7F010000 		.4byte	0x17f
 2070 0356 10       		.byte	0x10
 2071 0357 0A       		.uleb128 0xa
 2072 0358 72020000 		.4byte	.LASF57
 2073 035c 05       		.byte	0x5
 2074 035d EA       		.byte	0xea
 2075 035e BF010000 		.4byte	0x1bf
 2076 0362 20       		.byte	0x20
 2077 0363 0B       		.uleb128 0xb
 2078 0364 656D6700 		.ascii	"emg\000"
 2079 0368 05       		.byte	0x5
 2080 0369 EB       		.byte	0xeb
 2081 036a 18020000 		.4byte	0x218
 2082 036e 30       		.byte	0x30
 2083 036f 0B       		.uleb128 0xb
 2084 0370 4D5300   		.ascii	"MS\000"
 2085 0373 05       		.byte	0x5
 2086 0374 EC       		.byte	0xec
 2087 0375 A1020000 		.4byte	0x2a1
 2088 0379 40       		.byte	0x40
 2089 037a 0B       		.uleb128 0xb
 2090 037b 464200   		.ascii	"FB\000"
 2091 037e 05       		.byte	0x5
 2092 037f ED       		.byte	0xed
 2093 0380 D2020000 		.4byte	0x2d2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 52


 2094 0384 50       		.byte	0x50
 2095 0385 00       		.byte	0
 2096 0386 0C       		.uleb128 0xc
 2097 0387 81000000 		.4byte	0x81
 2098 038b 96030000 		.4byte	0x396
 2099 038f 0D       		.uleb128 0xd
 2100 0390 EA000000 		.4byte	0xea
 2101 0394 0E       		.byte	0xe
 2102 0395 00       		.byte	0
 2103 0396 09       		.uleb128 0x9
 2104 0397 56030000 		.4byte	.LASF58
 2105 039b 08       		.byte	0x8
 2106 039c 05       		.byte	0x5
 2107 039d F4       		.byte	0xf4
 2108 039e BB030000 		.4byte	0x3bb
 2109 03a2 0A       		.uleb128 0xa
 2110 03a3 00000000 		.4byte	.LASF59
 2111 03a7 05       		.byte	0x5
 2112 03a8 F5       		.byte	0xf5
 2113 03a9 B1000000 		.4byte	0xb1
 2114 03ad 00       		.byte	0
 2115 03ae 0A       		.uleb128 0xa
 2116 03af 9E040000 		.4byte	.LASF60
 2117 03b3 05       		.byte	0x5
 2118 03b4 F6       		.byte	0xf6
 2119 03b5 B1000000 		.4byte	0xb1
 2120 03b9 04       		.byte	0x4
 2121 03ba 00       		.byte	0
 2122 03bb 0E       		.uleb128 0xe
 2123 03bc 83010000 		.4byte	.LASF61
 2124 03c0 0C       		.byte	0xc
 2125 03c1 05       		.byte	0x5
 2126 03c2 5A01     		.2byte	0x15a
 2127 03c4 E3030000 		.4byte	0x3e3
 2128 03c8 0F       		.uleb128 0xf
 2129 03c9 656D6700 		.ascii	"emg\000"
 2130 03cd 05       		.byte	0x5
 2131 03ce 5B01     		.2byte	0x15b
 2132 03d0 E3030000 		.4byte	0x3e3
 2133 03d4 00       		.byte	0
 2134 03d5 10       		.uleb128 0x10
 2135 03d6 4B020000 		.4byte	.LASF62
 2136 03da 05       		.byte	0x5
 2137 03db 5C01     		.2byte	0x15c
 2138 03dd BD000000 		.4byte	0xbd
 2139 03e1 08       		.byte	0x8
 2140 03e2 00       		.byte	0
 2141 03e3 0C       		.uleb128 0xc
 2142 03e4 B1000000 		.4byte	0xb1
 2143 03e8 F3030000 		.4byte	0x3f3
 2144 03ec 0D       		.uleb128 0xd
 2145 03ed EA000000 		.4byte	0xea
 2146 03f1 01       		.byte	0x1
 2147 03f2 00       		.byte	0
 2148 03f3 11       		.uleb128 0x11
 2149 03f4 FF010000 		.4byte	.LASF63
 2150 03f8 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 53


 2151 03f9 62       		.byte	0x62
 2152 03fa 00000000 		.4byte	.LFB64
 2153 03fe 18000000 		.4byte	.LFE64-.LFB64
 2154 0402 01       		.uleb128 0x1
 2155 0403 9C       		.byte	0x9c
 2156 0404 11       		.uleb128 0x11
 2157 0405 EB030000 		.4byte	.LASF64
 2158 0409 01       		.byte	0x1
 2159 040a 6D       		.byte	0x6d
 2160 040b 00000000 		.4byte	.LFB65
 2161 040f 20000000 		.4byte	.LFE65-.LFB65
 2162 0413 01       		.uleb128 0x1
 2163 0414 9C       		.byte	0x9c
 2164 0415 12       		.uleb128 0x12
 2165 0416 0A000000 		.4byte	.LASF74
 2166 041a 01       		.byte	0x1
 2167 041b 86       		.byte	0x86
 2168 041c 00000000 		.4byte	.LFB66
 2169 0420 0C020000 		.4byte	.LFE66-.LFB66
 2170 0424 01       		.uleb128 0x1
 2171 0425 9C       		.byte	0x9c
 2172 0426 AA040000 		.4byte	0x4aa
 2173 042a 13       		.uleb128 0x13
 2174 042b 56000000 		.4byte	.LASF65
 2175 042f 01       		.byte	0x1
 2176 0430 8B       		.byte	0x8b
 2177 0431 81000000 		.4byte	0x81
 2178 0435 05       		.uleb128 0x5
 2179 0436 03       		.byte	0x3
 2180 0437 00000000 		.4byte	state.9746
 2181 043b 13       		.uleb128 0x13
 2182 043c E5050000 		.4byte	.LASF66
 2183 0440 01       		.byte	0x1
 2184 0441 8E       		.byte	0x8e
 2185 0442 81000000 		.4byte	0x81
 2186 0446 05       		.uleb128 0x5
 2187 0447 03       		.byte	0x3
 2188 0448 08000000 		.4byte	data_packet_index.9747
 2189 044c 13       		.uleb128 0x13
 2190 044d 7D000000 		.4byte	.LASF67
 2191 0451 01       		.byte	0x1
 2192 0452 8F       		.byte	0x8f
 2193 0453 81000000 		.4byte	0x81
 2194 0457 05       		.uleb128 0x5
 2195 0458 03       		.byte	0x3
 2196 0459 07000000 		.4byte	data_packet_length.9748
 2197 045d 13       		.uleb128 0x13
 2198 045e 7C060000 		.4byte	.LASF68
 2199 0462 01       		.byte	0x1
 2200 0463 90       		.byte	0x90
 2201 0464 6F010000 		.4byte	0x16f
 2202 0468 05       		.uleb128 0x5
 2203 0469 03       		.byte	0x3
 2204 046a 0C000000 		.4byte	data_packet_buffer.9749
 2205 046e 13       		.uleb128 0x13
 2206 046f 08050000 		.4byte	.LASF69
 2207 0473 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 54


 2208 0474 91       		.byte	0x91
 2209 0475 AA040000 		.4byte	0x4aa
 2210 0479 05       		.uleb128 0x5
 2211 047a 03       		.byte	0x3
 2212 047b 04000000 		.4byte	rx_queue.9750
 2213 047f 13       		.uleb128 0x13
 2214 0480 16060000 		.4byte	.LASF70
 2215 0484 01       		.byte	0x1
 2216 0485 94       		.byte	0x94
 2217 0486 81000000 		.4byte	0x81
 2218 048a 02       		.uleb128 0x2
 2219 048b 91       		.byte	0x91
 2220 048c 75       		.sleb128 -11
 2221 048d 13       		.uleb128 0x13
 2222 048e 99000000 		.4byte	.LASF71
 2223 0492 01       		.byte	0x1
 2224 0493 95       		.byte	0x95
 2225 0494 81000000 		.4byte	0x81
 2226 0498 02       		.uleb128 0x2
 2227 0499 91       		.byte	0x91
 2228 049a 77       		.sleb128 -9
 2229 049b 13       		.uleb128 0x13
 2230 049c 53040000 		.4byte	.LASF72
 2231 04a0 01       		.byte	0x1
 2232 04a1 96       		.byte	0x96
 2233 04a2 81000000 		.4byte	0x81
 2234 04a6 02       		.uleb128 0x2
 2235 04a7 91       		.byte	0x91
 2236 04a8 76       		.sleb128 -10
 2237 04a9 00       		.byte	0
 2238 04aa 0C       		.uleb128 0xc
 2239 04ab 81000000 		.4byte	0x81
 2240 04af BA040000 		.4byte	0x4ba
 2241 04b3 0D       		.uleb128 0xd
 2242 04b4 EA000000 		.4byte	0xea
 2243 04b8 02       		.byte	0x2
 2244 04b9 00       		.byte	0
 2245 04ba 14       		.uleb128 0x14
 2246 04bb B6040000 		.4byte	.LASF73
 2247 04bf 01       		.byte	0x1
 2248 04c0 0C01     		.2byte	0x10c
 2249 04c2 00000000 		.4byte	.LFB67
 2250 04c6 60000000 		.4byte	.LFE67-.LFB67
 2251 04ca 01       		.uleb128 0x1
 2252 04cb 9C       		.byte	0x9c
 2253 04cc 15       		.uleb128 0x15
 2254 04cd 68000000 		.4byte	.LASF75
 2255 04d1 01       		.byte	0x1
 2256 04d2 AD01     		.2byte	0x1ad
 2257 04d4 00000000 		.4byte	.LFB68
 2258 04d8 F0020000 		.4byte	.LFE68-.LFB68
 2259 04dc 01       		.uleb128 0x1
 2260 04dd 9C       		.byte	0x9c
 2261 04de 21050000 		.4byte	0x521
 2262 04e2 16       		.uleb128 0x16
 2263 04e3 12030000 		.4byte	.LASF76
 2264 04e7 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 55


 2265 04e8 AF01     		.2byte	0x1af
 2266 04ea B1000000 		.4byte	0xb1
 2267 04ee 02       		.uleb128 0x2
 2268 04ef 91       		.byte	0x91
 2269 04f0 70       		.sleb128 -16
 2270 04f1 16       		.uleb128 0x16
 2271 04f2 1C030000 		.4byte	.LASF77
 2272 04f6 01       		.byte	0x1
 2273 04f7 AF01     		.2byte	0x1af
 2274 04f9 B1000000 		.4byte	0xb1
 2275 04fd 02       		.uleb128 0x2
 2276 04fe 91       		.byte	0x91
 2277 04ff 6C       		.sleb128 -20
 2278 0500 17       		.uleb128 0x17
 2279 0501 534800   		.ascii	"SH\000"
 2280 0504 01       		.byte	0x1
 2281 0505 B001     		.2byte	0x1b0
 2282 0507 21050000 		.4byte	0x521
 2283 050b 02       		.uleb128 0x2
 2284 050c 91       		.byte	0x91
 2285 050d 74       		.sleb128 -12
 2286 050e 16       		.uleb128 0x16
 2287 050f DF030000 		.4byte	.LASF78
 2288 0513 01       		.byte	0x1
 2289 0514 B201     		.2byte	0x1b2
 2290 0516 81000000 		.4byte	0x81
 2291 051a 05       		.uleb128 0x5
 2292 051b 03       		.byte	0x3
 2293 051c 8C000000 		.4byte	current_emg.9771
 2294 0520 00       		.byte	0
 2295 0521 18       		.uleb128 0x18
 2296 0522 04       		.byte	0x4
 2297 0523 BF010000 		.4byte	0x1bf
 2298 0527 19       		.uleb128 0x19
 2299 0528 2E020000 		.4byte	.LASF81
 2300 052c 01       		.byte	0x1
 2301 052d 3A02     		.2byte	0x23a
 2302 052f 00000000 		.4byte	.LFB69
 2303 0533 C0000000 		.4byte	.LFE69-.LFB69
 2304 0537 01       		.uleb128 0x1
 2305 0538 9C       		.byte	0x9c
 2306 0539 6E050000 		.4byte	0x56e
 2307 053d 1A       		.uleb128 0x1a
 2308 053e 69647800 		.ascii	"idx\000"
 2309 0542 01       		.byte	0x1
 2310 0543 3A02     		.2byte	0x23a
 2311 0545 81000000 		.4byte	0x81
 2312 0549 02       		.uleb128 0x2
 2313 054a 91       		.byte	0x91
 2314 054b 6F       		.sleb128 -17
 2315 054c 16       		.uleb128 0x16
 2316 054d 94040000 		.4byte	.LASF79
 2317 0551 01       		.byte	0x1
 2318 0552 3C02     		.2byte	0x23c
 2319 0554 A5000000 		.4byte	0xa5
 2320 0558 02       		.uleb128 0x2
 2321 0559 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 56


 2322 055a 76       		.sleb128 -10
 2323 055b 16       		.uleb128 0x16
 2324 055c 83030000 		.4byte	.LASF80
 2325 0560 01       		.byte	0x1
 2326 0561 4002     		.2byte	0x240
 2327 0563 81020000 		.4byte	0x281
 2328 0567 05       		.uleb128 0x5
 2329 0568 03       		.byte	0x3
 2330 0569 90000000 		.4byte	motor_dir.9793
 2331 056d 00       		.byte	0
 2332 056e 1B       		.uleb128 0x1b
 2333 056f 6F010000 		.4byte	.LASF82
 2334 0573 01       		.byte	0x1
 2335 0574 6D02     		.2byte	0x26d
 2336 0576 00000000 		.4byte	.LFB70
 2337 057a 1A000000 		.4byte	.LFE70-.LFB70
 2338 057e 01       		.uleb128 0x1
 2339 057f 9C       		.byte	0x9c
 2340 0580 A3050000 		.4byte	0x5a3
 2341 0584 1C       		.uleb128 0x1c
 2342 0585 C6060000 		.4byte	.LASF83
 2343 0589 01       		.byte	0x1
 2344 058a 6D02     		.2byte	0x26d
 2345 058c 81000000 		.4byte	0x81
 2346 0590 02       		.uleb128 0x2
 2347 0591 91       		.byte	0x91
 2348 0592 77       		.sleb128 -9
 2349 0593 1C       		.uleb128 0x1c
 2350 0594 11050000 		.4byte	.LASF84
 2351 0598 01       		.byte	0x1
 2352 0599 6D02     		.2byte	0x26d
 2353 059b 81000000 		.4byte	0x81
 2354 059f 02       		.uleb128 0x2
 2355 05a0 91       		.byte	0x91
 2356 05a1 76       		.sleb128 -10
 2357 05a2 00       		.byte	0
 2358 05a3 1D       		.uleb128 0x1d
 2359 05a4 A7010000 		.4byte	.LASF85
 2360 05a8 01       		.byte	0x1
 2361 05a9 7502     		.2byte	0x275
 2362 05ab 00000000 		.4byte	.LFB71
 2363 05af 14020000 		.4byte	.LFE71-.LFB71
 2364 05b3 01       		.uleb128 0x1
 2365 05b4 9C       		.byte	0x9c
 2366 05b5 DB050000 		.4byte	0x5db
 2367 05b9 16       		.uleb128 0x16
 2368 05ba 99060000 		.4byte	.LASF86
 2369 05be 01       		.byte	0x1
 2370 05bf 8902     		.2byte	0x289
 2371 05c1 B1000000 		.4byte	0xb1
 2372 05c5 02       		.uleb128 0x2
 2373 05c6 91       		.byte	0x91
 2374 05c7 6C       		.sleb128 -20
 2375 05c8 17       		.uleb128 0x17
 2376 05c9 69647800 		.ascii	"idx\000"
 2377 05cd 01       		.byte	0x1
 2378 05ce 8A02     		.2byte	0x28a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 57


 2379 05d0 81000000 		.4byte	0x81
 2380 05d4 05       		.uleb128 0x5
 2381 05d5 03       		.byte	0x3
 2382 05d6 92000000 		.4byte	idx.9804
 2383 05da 00       		.byte	0
 2384 05db 1E       		.uleb128 0x1e
 2385 05dc E2010000 		.4byte	.LASF89
 2386 05e0 01       		.byte	0x1
 2387 05e1 CF02     		.2byte	0x2cf
 2388 05e3 00000000 		.4byte	.LFB72
 2389 05e7 0C000000 		.4byte	.LFE72-.LFB72
 2390 05eb 01       		.uleb128 0x1
 2391 05ec 9C       		.byte	0x9c
 2392 05ed 1B       		.uleb128 0x1b
 2393 05ee 56060000 		.4byte	.LASF87
 2394 05f2 01       		.byte	0x1
 2395 05f3 D702     		.2byte	0x2d7
 2396 05f5 00000000 		.4byte	.LFB73
 2397 05f9 14000000 		.4byte	.LFE73-.LFB73
 2398 05fd 01       		.uleb128 0x1
 2399 05fe 9C       		.byte	0x9c
 2400 05ff 13060000 		.4byte	0x613
 2401 0603 1C       		.uleb128 0x1c
 2402 0604 B7010000 		.4byte	.LASF88
 2403 0608 01       		.byte	0x1
 2404 0609 D702     		.2byte	0x2d7
 2405 060b 81000000 		.4byte	0x81
 2406 060f 02       		.uleb128 0x2
 2407 0610 91       		.byte	0x91
 2408 0611 77       		.sleb128 -9
 2409 0612 00       		.byte	0
 2410 0613 1E       		.uleb128 0x1e
 2411 0614 E7020000 		.4byte	.LASF90
 2412 0618 01       		.byte	0x1
 2413 0619 DF02     		.2byte	0x2df
 2414 061b 00000000 		.4byte	.LFB74
 2415 061f 0C000000 		.4byte	.LFE74-.LFB74
 2416 0623 01       		.uleb128 0x1
 2417 0624 9C       		.byte	0x9c
 2418 0625 1E       		.uleb128 0x1e
 2419 0626 1C000000 		.4byte	.LASF91
 2420 062a 01       		.byte	0x1
 2421 062b E702     		.2byte	0x2e7
 2422 062d 00000000 		.4byte	.LFB75
 2423 0631 0C000000 		.4byte	.LFE75-.LFB75
 2424 0635 01       		.uleb128 0x1
 2425 0636 9C       		.byte	0x9c
 2426 0637 0C       		.uleb128 0xc
 2427 0638 47060000 		.4byte	0x647
 2428 063c 47060000 		.4byte	0x647
 2429 0640 0D       		.uleb128 0xd
 2430 0641 EA000000 		.4byte	0xea
 2431 0645 1C       		.byte	0x1c
 2432 0646 00       		.byte	0
 2433 0647 1F       		.uleb128 0x1f
 2434 0648 81000000 		.4byte	0x81
 2435 064c 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 58


 2436 064d 8D030000 		.4byte	.LASF92
 2437 0651 01       		.byte	0x1
 2438 0652 40       		.byte	0x40
 2439 0653 5D060000 		.4byte	0x65d
 2440 0657 05       		.uleb128 0x5
 2441 0658 03       		.byte	0x3
 2442 0659 00000000 		.4byte	pwm_preload_values
 2443 065d 1F       		.uleb128 0x1f
 2444 065e 37060000 		.4byte	0x637
 2445 0662 20       		.uleb128 0x20
 2446 0663 40060000 		.4byte	.LASF93
 2447 0667 06       		.byte	0x6
 2448 0668 1207     		.2byte	0x712
 2449 066a 6E060000 		.4byte	0x66e
 2450 066e 06       		.uleb128 0x6
 2451 066f 76000000 		.4byte	0x76
 2452 0673 20       		.uleb128 0x20
 2453 0674 A6000000 		.4byte	.LASF94
 2454 0678 05       		.byte	0x5
 2455 0679 7201     		.2byte	0x172
 2456 067b BB030000 		.4byte	0x3bb
 2457 067f 20       		.uleb128 0x20
 2458 0680 7C020000 		.4byte	.LASF95
 2459 0684 05       		.byte	0x5
 2460 0685 6B01     		.2byte	0x16b
 2461 0687 32010000 		.4byte	0x132
 2462 068b 20       		.uleb128 0x20
 2463 068c 61040000 		.4byte	.LASF96
 2464 0690 05       		.byte	0x5
 2465 0691 7101     		.2byte	0x171
 2466 0693 27030000 		.4byte	0x327
 2467 0697 20       		.uleb128 0x20
 2468 0698 FD020000 		.4byte	.LASF97
 2469 069c 05       		.byte	0x5
 2470 069d 7101     		.2byte	0x171
 2471 069f 27030000 		.4byte	0x327
 2472 06a3 20       		.uleb128 0x20
 2473 06a4 5C000000 		.4byte	.LASF98
 2474 06a8 05       		.byte	0x5
 2475 06a9 7301     		.2byte	0x173
 2476 06ab 8D000000 		.4byte	0x8d
 2477 06af 20       		.uleb128 0x20
 2478 06b0 26030000 		.4byte	.LASF99
 2479 06b4 05       		.byte	0x5
 2480 06b5 7401     		.2byte	0x174
 2481 06b7 8D000000 		.4byte	0x8d
 2482 06bb 20       		.uleb128 0x20
 2483 06bc D4060000 		.4byte	.LASF100
 2484 06c0 05       		.byte	0x5
 2485 06c1 7501     		.2byte	0x175
 2486 06c3 BD000000 		.4byte	0xbd
 2487 06c7 20       		.uleb128 0x20
 2488 06c8 AA020000 		.4byte	.LASF101
 2489 06cc 05       		.byte	0x5
 2490 06cd 6E01     		.2byte	0x16e
 2491 06cf B1000000 		.4byte	0xb1
 2492 06d3 20       		.uleb128 0x20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 59


 2493 06d4 B7060000 		.4byte	.LASF102
 2494 06d8 05       		.byte	0x5
 2495 06d9 6C01     		.2byte	0x16c
 2496 06db 81000000 		.4byte	0x81
 2497 06df 20       		.uleb128 0x20
 2498 06e0 18020000 		.4byte	.LASF103
 2499 06e4 05       		.byte	0x5
 2500 06e5 1901     		.2byte	0x119
 2501 06e7 81000000 		.4byte	0x81
 2502 06eb 0C       		.uleb128 0xc
 2503 06ec A5000000 		.4byte	0xa5
 2504 06f0 FB060000 		.4byte	0x6fb
 2505 06f4 0D       		.uleb128 0xd
 2506 06f5 EA000000 		.4byte	0xea
 2507 06f9 02       		.byte	0x2
 2508 06fa 00       		.byte	0
 2509 06fb 20       		.uleb128 0x20
 2510 06fc 24050000 		.4byte	.LASF104
 2511 0700 05       		.byte	0x5
 2512 0701 2301     		.2byte	0x123
 2513 0703 EB060000 		.4byte	0x6eb
 2514 0707 20       		.uleb128 0x20
 2515 0708 1E060000 		.4byte	.LASF105
 2516 070c 05       		.byte	0x5
 2517 070d 6F01     		.2byte	0x16f
 2518 070f 81000000 		.4byte	0x81
 2519 0713 20       		.uleb128 0x20
 2520 0714 D1050000 		.4byte	.LASF106
 2521 0718 05       		.byte	0x5
 2522 0719 6601     		.2byte	0x166
 2523 071b B1000000 		.4byte	0xb1
 2524 071f 20       		.uleb128 0x20
 2525 0720 2F000000 		.4byte	.LASF107
 2526 0724 05       		.byte	0x5
 2527 0725 6601     		.2byte	0x166
 2528 0727 B1000000 		.4byte	0xb1
 2529 072b 20       		.uleb128 0x20
 2530 072c CD060000 		.4byte	.LASF108
 2531 0730 05       		.byte	0x5
 2532 0731 6701     		.2byte	0x167
 2533 0733 81020000 		.4byte	0x281
 2534 0737 20       		.uleb128 0x20
 2535 0738 03030000 		.4byte	.LASF109
 2536 073c 05       		.byte	0x5
 2537 073d 7001     		.2byte	0x170
 2538 073f B1000000 		.4byte	0xb1
 2539 0743 0C       		.uleb128 0xc
 2540 0744 96030000 		.4byte	0x396
 2541 0748 53070000 		.4byte	0x753
 2542 074c 0D       		.uleb128 0xd
 2543 074d EA000000 		.4byte	0xea
 2544 0751 01       		.byte	0x1
 2545 0752 00       		.byte	0
 2546 0753 20       		.uleb128 0x20
 2547 0754 4D000000 		.4byte	.LASF110
 2548 0758 05       		.byte	0x5
 2549 0759 7F01     		.2byte	0x17f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 60


 2550 075b 43070000 		.4byte	0x743
 2551 075f 00       		.byte	0
 2552              		.section	.debug_abbrev,"",%progbits
 2553              	.Ldebug_abbrev0:
 2554 0000 01       		.uleb128 0x1
 2555 0001 11       		.uleb128 0x11
 2556 0002 01       		.byte	0x1
 2557 0003 25       		.uleb128 0x25
 2558 0004 0E       		.uleb128 0xe
 2559 0005 13       		.uleb128 0x13
 2560 0006 0B       		.uleb128 0xb
 2561 0007 03       		.uleb128 0x3
 2562 0008 0E       		.uleb128 0xe
 2563 0009 1B       		.uleb128 0x1b
 2564 000a 0E       		.uleb128 0xe
 2565 000b 55       		.uleb128 0x55
 2566 000c 17       		.uleb128 0x17
 2567 000d 11       		.uleb128 0x11
 2568 000e 01       		.uleb128 0x1
 2569 000f 10       		.uleb128 0x10
 2570 0010 17       		.uleb128 0x17
 2571 0011 00       		.byte	0
 2572 0012 00       		.byte	0
 2573 0013 02       		.uleb128 0x2
 2574 0014 24       		.uleb128 0x24
 2575 0015 00       		.byte	0
 2576 0016 0B       		.uleb128 0xb
 2577 0017 0B       		.uleb128 0xb
 2578 0018 3E       		.uleb128 0x3e
 2579 0019 0B       		.uleb128 0xb
 2580 001a 03       		.uleb128 0x3
 2581 001b 0E       		.uleb128 0xe
 2582 001c 00       		.byte	0
 2583 001d 00       		.byte	0
 2584 001e 03       		.uleb128 0x3
 2585 001f 16       		.uleb128 0x16
 2586 0020 00       		.byte	0
 2587 0021 03       		.uleb128 0x3
 2588 0022 0E       		.uleb128 0xe
 2589 0023 3A       		.uleb128 0x3a
 2590 0024 0B       		.uleb128 0xb
 2591 0025 3B       		.uleb128 0x3b
 2592 0026 0B       		.uleb128 0xb
 2593 0027 49       		.uleb128 0x49
 2594 0028 13       		.uleb128 0x13
 2595 0029 00       		.byte	0
 2596 002a 00       		.byte	0
 2597 002b 04       		.uleb128 0x4
 2598 002c 24       		.uleb128 0x24
 2599 002d 00       		.byte	0
 2600 002e 0B       		.uleb128 0xb
 2601 002f 0B       		.uleb128 0xb
 2602 0030 3E       		.uleb128 0x3e
 2603 0031 0B       		.uleb128 0xb
 2604 0032 03       		.uleb128 0x3
 2605 0033 08       		.uleb128 0x8
 2606 0034 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 61


 2607 0035 00       		.byte	0
 2608 0036 05       		.uleb128 0x5
 2609 0037 16       		.uleb128 0x16
 2610 0038 00       		.byte	0
 2611 0039 03       		.uleb128 0x3
 2612 003a 0E       		.uleb128 0xe
 2613 003b 3A       		.uleb128 0x3a
 2614 003c 0B       		.uleb128 0xb
 2615 003d 3B       		.uleb128 0x3b
 2616 003e 05       		.uleb128 0x5
 2617 003f 49       		.uleb128 0x49
 2618 0040 13       		.uleb128 0x13
 2619 0041 00       		.byte	0
 2620 0042 00       		.byte	0
 2621 0043 06       		.uleb128 0x6
 2622 0044 35       		.uleb128 0x35
 2623 0045 00       		.byte	0
 2624 0046 49       		.uleb128 0x49
 2625 0047 13       		.uleb128 0x13
 2626 0048 00       		.byte	0
 2627 0049 00       		.byte	0
 2628 004a 07       		.uleb128 0x7
 2629 004b 04       		.uleb128 0x4
 2630 004c 01       		.byte	0x1
 2631 004d 03       		.uleb128 0x3
 2632 004e 0E       		.uleb128 0xe
 2633 004f 0B       		.uleb128 0xb
 2634 0050 0B       		.uleb128 0xb
 2635 0051 49       		.uleb128 0x49
 2636 0052 13       		.uleb128 0x13
 2637 0053 3A       		.uleb128 0x3a
 2638 0054 0B       		.uleb128 0xb
 2639 0055 3B       		.uleb128 0x3b
 2640 0056 0B       		.uleb128 0xb
 2641 0057 01       		.uleb128 0x1
 2642 0058 13       		.uleb128 0x13
 2643 0059 00       		.byte	0
 2644 005a 00       		.byte	0
 2645 005b 08       		.uleb128 0x8
 2646 005c 28       		.uleb128 0x28
 2647 005d 00       		.byte	0
 2648 005e 03       		.uleb128 0x3
 2649 005f 0E       		.uleb128 0xe
 2650 0060 1C       		.uleb128 0x1c
 2651 0061 0B       		.uleb128 0xb
 2652 0062 00       		.byte	0
 2653 0063 00       		.byte	0
 2654 0064 09       		.uleb128 0x9
 2655 0065 13       		.uleb128 0x13
 2656 0066 01       		.byte	0x1
 2657 0067 03       		.uleb128 0x3
 2658 0068 0E       		.uleb128 0xe
 2659 0069 0B       		.uleb128 0xb
 2660 006a 0B       		.uleb128 0xb
 2661 006b 3A       		.uleb128 0x3a
 2662 006c 0B       		.uleb128 0xb
 2663 006d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 62


 2664 006e 0B       		.uleb128 0xb
 2665 006f 01       		.uleb128 0x1
 2666 0070 13       		.uleb128 0x13
 2667 0071 00       		.byte	0
 2668 0072 00       		.byte	0
 2669 0073 0A       		.uleb128 0xa
 2670 0074 0D       		.uleb128 0xd
 2671 0075 00       		.byte	0
 2672 0076 03       		.uleb128 0x3
 2673 0077 0E       		.uleb128 0xe
 2674 0078 3A       		.uleb128 0x3a
 2675 0079 0B       		.uleb128 0xb
 2676 007a 3B       		.uleb128 0x3b
 2677 007b 0B       		.uleb128 0xb
 2678 007c 49       		.uleb128 0x49
 2679 007d 13       		.uleb128 0x13
 2680 007e 38       		.uleb128 0x38
 2681 007f 0B       		.uleb128 0xb
 2682 0080 00       		.byte	0
 2683 0081 00       		.byte	0
 2684 0082 0B       		.uleb128 0xb
 2685 0083 0D       		.uleb128 0xd
 2686 0084 00       		.byte	0
 2687 0085 03       		.uleb128 0x3
 2688 0086 08       		.uleb128 0x8
 2689 0087 3A       		.uleb128 0x3a
 2690 0088 0B       		.uleb128 0xb
 2691 0089 3B       		.uleb128 0x3b
 2692 008a 0B       		.uleb128 0xb
 2693 008b 49       		.uleb128 0x49
 2694 008c 13       		.uleb128 0x13
 2695 008d 38       		.uleb128 0x38
 2696 008e 0B       		.uleb128 0xb
 2697 008f 00       		.byte	0
 2698 0090 00       		.byte	0
 2699 0091 0C       		.uleb128 0xc
 2700 0092 01       		.uleb128 0x1
 2701 0093 01       		.byte	0x1
 2702 0094 49       		.uleb128 0x49
 2703 0095 13       		.uleb128 0x13
 2704 0096 01       		.uleb128 0x1
 2705 0097 13       		.uleb128 0x13
 2706 0098 00       		.byte	0
 2707 0099 00       		.byte	0
 2708 009a 0D       		.uleb128 0xd
 2709 009b 21       		.uleb128 0x21
 2710 009c 00       		.byte	0
 2711 009d 49       		.uleb128 0x49
 2712 009e 13       		.uleb128 0x13
 2713 009f 2F       		.uleb128 0x2f
 2714 00a0 0B       		.uleb128 0xb
 2715 00a1 00       		.byte	0
 2716 00a2 00       		.byte	0
 2717 00a3 0E       		.uleb128 0xe
 2718 00a4 13       		.uleb128 0x13
 2719 00a5 01       		.byte	0x1
 2720 00a6 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 63


 2721 00a7 0E       		.uleb128 0xe
 2722 00a8 0B       		.uleb128 0xb
 2723 00a9 0B       		.uleb128 0xb
 2724 00aa 3A       		.uleb128 0x3a
 2725 00ab 0B       		.uleb128 0xb
 2726 00ac 3B       		.uleb128 0x3b
 2727 00ad 05       		.uleb128 0x5
 2728 00ae 01       		.uleb128 0x1
 2729 00af 13       		.uleb128 0x13
 2730 00b0 00       		.byte	0
 2731 00b1 00       		.byte	0
 2732 00b2 0F       		.uleb128 0xf
 2733 00b3 0D       		.uleb128 0xd
 2734 00b4 00       		.byte	0
 2735 00b5 03       		.uleb128 0x3
 2736 00b6 08       		.uleb128 0x8
 2737 00b7 3A       		.uleb128 0x3a
 2738 00b8 0B       		.uleb128 0xb
 2739 00b9 3B       		.uleb128 0x3b
 2740 00ba 05       		.uleb128 0x5
 2741 00bb 49       		.uleb128 0x49
 2742 00bc 13       		.uleb128 0x13
 2743 00bd 38       		.uleb128 0x38
 2744 00be 0B       		.uleb128 0xb
 2745 00bf 00       		.byte	0
 2746 00c0 00       		.byte	0
 2747 00c1 10       		.uleb128 0x10
 2748 00c2 0D       		.uleb128 0xd
 2749 00c3 00       		.byte	0
 2750 00c4 03       		.uleb128 0x3
 2751 00c5 0E       		.uleb128 0xe
 2752 00c6 3A       		.uleb128 0x3a
 2753 00c7 0B       		.uleb128 0xb
 2754 00c8 3B       		.uleb128 0x3b
 2755 00c9 05       		.uleb128 0x5
 2756 00ca 49       		.uleb128 0x49
 2757 00cb 13       		.uleb128 0x13
 2758 00cc 38       		.uleb128 0x38
 2759 00cd 0B       		.uleb128 0xb
 2760 00ce 00       		.byte	0
 2761 00cf 00       		.byte	0
 2762 00d0 11       		.uleb128 0x11
 2763 00d1 2E       		.uleb128 0x2e
 2764 00d2 00       		.byte	0
 2765 00d3 3F       		.uleb128 0x3f
 2766 00d4 19       		.uleb128 0x19
 2767 00d5 03       		.uleb128 0x3
 2768 00d6 0E       		.uleb128 0xe
 2769 00d7 3A       		.uleb128 0x3a
 2770 00d8 0B       		.uleb128 0xb
 2771 00d9 3B       		.uleb128 0x3b
 2772 00da 0B       		.uleb128 0xb
 2773 00db 27       		.uleb128 0x27
 2774 00dc 19       		.uleb128 0x19
 2775 00dd 11       		.uleb128 0x11
 2776 00de 01       		.uleb128 0x1
 2777 00df 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 64


 2778 00e0 06       		.uleb128 0x6
 2779 00e1 40       		.uleb128 0x40
 2780 00e2 18       		.uleb128 0x18
 2781 00e3 9742     		.uleb128 0x2117
 2782 00e5 19       		.uleb128 0x19
 2783 00e6 00       		.byte	0
 2784 00e7 00       		.byte	0
 2785 00e8 12       		.uleb128 0x12
 2786 00e9 2E       		.uleb128 0x2e
 2787 00ea 01       		.byte	0x1
 2788 00eb 3F       		.uleb128 0x3f
 2789 00ec 19       		.uleb128 0x19
 2790 00ed 03       		.uleb128 0x3
 2791 00ee 0E       		.uleb128 0xe
 2792 00ef 3A       		.uleb128 0x3a
 2793 00f0 0B       		.uleb128 0xb
 2794 00f1 3B       		.uleb128 0x3b
 2795 00f2 0B       		.uleb128 0xb
 2796 00f3 11       		.uleb128 0x11
 2797 00f4 01       		.uleb128 0x1
 2798 00f5 12       		.uleb128 0x12
 2799 00f6 06       		.uleb128 0x6
 2800 00f7 40       		.uleb128 0x40
 2801 00f8 18       		.uleb128 0x18
 2802 00f9 9642     		.uleb128 0x2116
 2803 00fb 19       		.uleb128 0x19
 2804 00fc 01       		.uleb128 0x1
 2805 00fd 13       		.uleb128 0x13
 2806 00fe 00       		.byte	0
 2807 00ff 00       		.byte	0
 2808 0100 13       		.uleb128 0x13
 2809 0101 34       		.uleb128 0x34
 2810 0102 00       		.byte	0
 2811 0103 03       		.uleb128 0x3
 2812 0104 0E       		.uleb128 0xe
 2813 0105 3A       		.uleb128 0x3a
 2814 0106 0B       		.uleb128 0xb
 2815 0107 3B       		.uleb128 0x3b
 2816 0108 0B       		.uleb128 0xb
 2817 0109 49       		.uleb128 0x49
 2818 010a 13       		.uleb128 0x13
 2819 010b 02       		.uleb128 0x2
 2820 010c 18       		.uleb128 0x18
 2821 010d 00       		.byte	0
 2822 010e 00       		.byte	0
 2823 010f 14       		.uleb128 0x14
 2824 0110 2E       		.uleb128 0x2e
 2825 0111 00       		.byte	0
 2826 0112 3F       		.uleb128 0x3f
 2827 0113 19       		.uleb128 0x19
 2828 0114 03       		.uleb128 0x3
 2829 0115 0E       		.uleb128 0xe
 2830 0116 3A       		.uleb128 0x3a
 2831 0117 0B       		.uleb128 0xb
 2832 0118 3B       		.uleb128 0x3b
 2833 0119 05       		.uleb128 0x5
 2834 011a 27       		.uleb128 0x27
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 65


 2835 011b 19       		.uleb128 0x19
 2836 011c 11       		.uleb128 0x11
 2837 011d 01       		.uleb128 0x1
 2838 011e 12       		.uleb128 0x12
 2839 011f 06       		.uleb128 0x6
 2840 0120 40       		.uleb128 0x40
 2841 0121 18       		.uleb128 0x18
 2842 0122 9642     		.uleb128 0x2116
 2843 0124 19       		.uleb128 0x19
 2844 0125 00       		.byte	0
 2845 0126 00       		.byte	0
 2846 0127 15       		.uleb128 0x15
 2847 0128 2E       		.uleb128 0x2e
 2848 0129 01       		.byte	0x1
 2849 012a 3F       		.uleb128 0x3f
 2850 012b 19       		.uleb128 0x19
 2851 012c 03       		.uleb128 0x3
 2852 012d 0E       		.uleb128 0xe
 2853 012e 3A       		.uleb128 0x3a
 2854 012f 0B       		.uleb128 0xb
 2855 0130 3B       		.uleb128 0x3b
 2856 0131 05       		.uleb128 0x5
 2857 0132 11       		.uleb128 0x11
 2858 0133 01       		.uleb128 0x1
 2859 0134 12       		.uleb128 0x12
 2860 0135 06       		.uleb128 0x6
 2861 0136 40       		.uleb128 0x40
 2862 0137 18       		.uleb128 0x18
 2863 0138 9742     		.uleb128 0x2117
 2864 013a 19       		.uleb128 0x19
 2865 013b 01       		.uleb128 0x1
 2866 013c 13       		.uleb128 0x13
 2867 013d 00       		.byte	0
 2868 013e 00       		.byte	0
 2869 013f 16       		.uleb128 0x16
 2870 0140 34       		.uleb128 0x34
 2871 0141 00       		.byte	0
 2872 0142 03       		.uleb128 0x3
 2873 0143 0E       		.uleb128 0xe
 2874 0144 3A       		.uleb128 0x3a
 2875 0145 0B       		.uleb128 0xb
 2876 0146 3B       		.uleb128 0x3b
 2877 0147 05       		.uleb128 0x5
 2878 0148 49       		.uleb128 0x49
 2879 0149 13       		.uleb128 0x13
 2880 014a 02       		.uleb128 0x2
 2881 014b 18       		.uleb128 0x18
 2882 014c 00       		.byte	0
 2883 014d 00       		.byte	0
 2884 014e 17       		.uleb128 0x17
 2885 014f 34       		.uleb128 0x34
 2886 0150 00       		.byte	0
 2887 0151 03       		.uleb128 0x3
 2888 0152 08       		.uleb128 0x8
 2889 0153 3A       		.uleb128 0x3a
 2890 0154 0B       		.uleb128 0xb
 2891 0155 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 66


 2892 0156 05       		.uleb128 0x5
 2893 0157 49       		.uleb128 0x49
 2894 0158 13       		.uleb128 0x13
 2895 0159 02       		.uleb128 0x2
 2896 015a 18       		.uleb128 0x18
 2897 015b 00       		.byte	0
 2898 015c 00       		.byte	0
 2899 015d 18       		.uleb128 0x18
 2900 015e 0F       		.uleb128 0xf
 2901 015f 00       		.byte	0
 2902 0160 0B       		.uleb128 0xb
 2903 0161 0B       		.uleb128 0xb
 2904 0162 49       		.uleb128 0x49
 2905 0163 13       		.uleb128 0x13
 2906 0164 00       		.byte	0
 2907 0165 00       		.byte	0
 2908 0166 19       		.uleb128 0x19
 2909 0167 2E       		.uleb128 0x2e
 2910 0168 01       		.byte	0x1
 2911 0169 3F       		.uleb128 0x3f
 2912 016a 19       		.uleb128 0x19
 2913 016b 03       		.uleb128 0x3
 2914 016c 0E       		.uleb128 0xe
 2915 016d 3A       		.uleb128 0x3a
 2916 016e 0B       		.uleb128 0xb
 2917 016f 3B       		.uleb128 0x3b
 2918 0170 05       		.uleb128 0x5
 2919 0171 27       		.uleb128 0x27
 2920 0172 19       		.uleb128 0x19
 2921 0173 11       		.uleb128 0x11
 2922 0174 01       		.uleb128 0x1
 2923 0175 12       		.uleb128 0x12
 2924 0176 06       		.uleb128 0x6
 2925 0177 40       		.uleb128 0x40
 2926 0178 18       		.uleb128 0x18
 2927 0179 9642     		.uleb128 0x2116
 2928 017b 19       		.uleb128 0x19
 2929 017c 01       		.uleb128 0x1
 2930 017d 13       		.uleb128 0x13
 2931 017e 00       		.byte	0
 2932 017f 00       		.byte	0
 2933 0180 1A       		.uleb128 0x1a
 2934 0181 05       		.uleb128 0x5
 2935 0182 00       		.byte	0
 2936 0183 03       		.uleb128 0x3
 2937 0184 08       		.uleb128 0x8
 2938 0185 3A       		.uleb128 0x3a
 2939 0186 0B       		.uleb128 0xb
 2940 0187 3B       		.uleb128 0x3b
 2941 0188 05       		.uleb128 0x5
 2942 0189 49       		.uleb128 0x49
 2943 018a 13       		.uleb128 0x13
 2944 018b 02       		.uleb128 0x2
 2945 018c 18       		.uleb128 0x18
 2946 018d 00       		.byte	0
 2947 018e 00       		.byte	0
 2948 018f 1B       		.uleb128 0x1b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 67


 2949 0190 2E       		.uleb128 0x2e
 2950 0191 01       		.byte	0x1
 2951 0192 3F       		.uleb128 0x3f
 2952 0193 19       		.uleb128 0x19
 2953 0194 03       		.uleb128 0x3
 2954 0195 0E       		.uleb128 0xe
 2955 0196 3A       		.uleb128 0x3a
 2956 0197 0B       		.uleb128 0xb
 2957 0198 3B       		.uleb128 0x3b
 2958 0199 05       		.uleb128 0x5
 2959 019a 27       		.uleb128 0x27
 2960 019b 19       		.uleb128 0x19
 2961 019c 11       		.uleb128 0x11
 2962 019d 01       		.uleb128 0x1
 2963 019e 12       		.uleb128 0x12
 2964 019f 06       		.uleb128 0x6
 2965 01a0 40       		.uleb128 0x40
 2966 01a1 18       		.uleb128 0x18
 2967 01a2 9742     		.uleb128 0x2117
 2968 01a4 19       		.uleb128 0x19
 2969 01a5 01       		.uleb128 0x1
 2970 01a6 13       		.uleb128 0x13
 2971 01a7 00       		.byte	0
 2972 01a8 00       		.byte	0
 2973 01a9 1C       		.uleb128 0x1c
 2974 01aa 05       		.uleb128 0x5
 2975 01ab 00       		.byte	0
 2976 01ac 03       		.uleb128 0x3
 2977 01ad 0E       		.uleb128 0xe
 2978 01ae 3A       		.uleb128 0x3a
 2979 01af 0B       		.uleb128 0xb
 2980 01b0 3B       		.uleb128 0x3b
 2981 01b1 05       		.uleb128 0x5
 2982 01b2 49       		.uleb128 0x49
 2983 01b3 13       		.uleb128 0x13
 2984 01b4 02       		.uleb128 0x2
 2985 01b5 18       		.uleb128 0x18
 2986 01b6 00       		.byte	0
 2987 01b7 00       		.byte	0
 2988 01b8 1D       		.uleb128 0x1d
 2989 01b9 2E       		.uleb128 0x2e
 2990 01ba 01       		.byte	0x1
 2991 01bb 3F       		.uleb128 0x3f
 2992 01bc 19       		.uleb128 0x19
 2993 01bd 03       		.uleb128 0x3
 2994 01be 0E       		.uleb128 0xe
 2995 01bf 3A       		.uleb128 0x3a
 2996 01c0 0B       		.uleb128 0xb
 2997 01c1 3B       		.uleb128 0x3b
 2998 01c2 05       		.uleb128 0x5
 2999 01c3 11       		.uleb128 0x11
 3000 01c4 01       		.uleb128 0x1
 3001 01c5 12       		.uleb128 0x12
 3002 01c6 06       		.uleb128 0x6
 3003 01c7 40       		.uleb128 0x40
 3004 01c8 18       		.uleb128 0x18
 3005 01c9 9642     		.uleb128 0x2116
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 68


 3006 01cb 19       		.uleb128 0x19
 3007 01cc 01       		.uleb128 0x1
 3008 01cd 13       		.uleb128 0x13
 3009 01ce 00       		.byte	0
 3010 01cf 00       		.byte	0
 3011 01d0 1E       		.uleb128 0x1e
 3012 01d1 2E       		.uleb128 0x2e
 3013 01d2 00       		.byte	0
 3014 01d3 3F       		.uleb128 0x3f
 3015 01d4 19       		.uleb128 0x19
 3016 01d5 03       		.uleb128 0x3
 3017 01d6 0E       		.uleb128 0xe
 3018 01d7 3A       		.uleb128 0x3a
 3019 01d8 0B       		.uleb128 0xb
 3020 01d9 3B       		.uleb128 0x3b
 3021 01da 05       		.uleb128 0x5
 3022 01db 11       		.uleb128 0x11
 3023 01dc 01       		.uleb128 0x1
 3024 01dd 12       		.uleb128 0x12
 3025 01de 06       		.uleb128 0x6
 3026 01df 40       		.uleb128 0x40
 3027 01e0 18       		.uleb128 0x18
 3028 01e1 9742     		.uleb128 0x2117
 3029 01e3 19       		.uleb128 0x19
 3030 01e4 00       		.byte	0
 3031 01e5 00       		.byte	0
 3032 01e6 1F       		.uleb128 0x1f
 3033 01e7 26       		.uleb128 0x26
 3034 01e8 00       		.byte	0
 3035 01e9 49       		.uleb128 0x49
 3036 01ea 13       		.uleb128 0x13
 3037 01eb 00       		.byte	0
 3038 01ec 00       		.byte	0
 3039 01ed 20       		.uleb128 0x20
 3040 01ee 34       		.uleb128 0x34
 3041 01ef 00       		.byte	0
 3042 01f0 03       		.uleb128 0x3
 3043 01f1 0E       		.uleb128 0xe
 3044 01f2 3A       		.uleb128 0x3a
 3045 01f3 0B       		.uleb128 0xb
 3046 01f4 3B       		.uleb128 0x3b
 3047 01f5 05       		.uleb128 0x5
 3048 01f6 49       		.uleb128 0x49
 3049 01f7 13       		.uleb128 0x13
 3050 01f8 3F       		.uleb128 0x3f
 3051 01f9 19       		.uleb128 0x19
 3052 01fa 3C       		.uleb128 0x3c
 3053 01fb 19       		.uleb128 0x19
 3054 01fc 00       		.byte	0
 3055 01fd 00       		.byte	0
 3056 01fe 00       		.byte	0
 3057              		.section	.debug_aranges,"",%progbits
 3058 0000 74000000 		.4byte	0x74
 3059 0004 0200     		.2byte	0x2
 3060 0006 00000000 		.4byte	.Ldebug_info0
 3061 000a 04       		.byte	0x4
 3062 000b 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 69


 3063 000c 0000     		.2byte	0
 3064 000e 0000     		.2byte	0
 3065 0010 00000000 		.4byte	.LFB64
 3066 0014 18000000 		.4byte	.LFE64-.LFB64
 3067 0018 00000000 		.4byte	.LFB65
 3068 001c 20000000 		.4byte	.LFE65-.LFB65
 3069 0020 00000000 		.4byte	.LFB66
 3070 0024 0C020000 		.4byte	.LFE66-.LFB66
 3071 0028 00000000 		.4byte	.LFB67
 3072 002c 60000000 		.4byte	.LFE67-.LFB67
 3073 0030 00000000 		.4byte	.LFB68
 3074 0034 F0020000 		.4byte	.LFE68-.LFB68
 3075 0038 00000000 		.4byte	.LFB69
 3076 003c C0000000 		.4byte	.LFE69-.LFB69
 3077 0040 00000000 		.4byte	.LFB70
 3078 0044 1A000000 		.4byte	.LFE70-.LFB70
 3079 0048 00000000 		.4byte	.LFB71
 3080 004c 14020000 		.4byte	.LFE71-.LFB71
 3081 0050 00000000 		.4byte	.LFB72
 3082 0054 0C000000 		.4byte	.LFE72-.LFB72
 3083 0058 00000000 		.4byte	.LFB73
 3084 005c 14000000 		.4byte	.LFE73-.LFB73
 3085 0060 00000000 		.4byte	.LFB74
 3086 0064 0C000000 		.4byte	.LFE74-.LFB74
 3087 0068 00000000 		.4byte	.LFB75
 3088 006c 0C000000 		.4byte	.LFE75-.LFB75
 3089 0070 00000000 		.4byte	0
 3090 0074 00000000 		.4byte	0
 3091              		.section	.debug_ranges,"",%progbits
 3092              	.Ldebug_ranges0:
 3093 0000 00000000 		.4byte	.LFB64
 3094 0004 18000000 		.4byte	.LFE64
 3095 0008 00000000 		.4byte	.LFB65
 3096 000c 20000000 		.4byte	.LFE65
 3097 0010 00000000 		.4byte	.LFB66
 3098 0014 0C020000 		.4byte	.LFE66
 3099 0018 00000000 		.4byte	.LFB67
 3100 001c 60000000 		.4byte	.LFE67
 3101 0020 00000000 		.4byte	.LFB68
 3102 0024 F0020000 		.4byte	.LFE68
 3103 0028 00000000 		.4byte	.LFB69
 3104 002c C0000000 		.4byte	.LFE69
 3105 0030 00000000 		.4byte	.LFB70
 3106 0034 1A000000 		.4byte	.LFE70
 3107 0038 00000000 		.4byte	.LFB71
 3108 003c 14020000 		.4byte	.LFE71
 3109 0040 00000000 		.4byte	.LFB72
 3110 0044 0C000000 		.4byte	.LFE72
 3111 0048 00000000 		.4byte	.LFB73
 3112 004c 14000000 		.4byte	.LFE73
 3113 0050 00000000 		.4byte	.LFB74
 3114 0054 0C000000 		.4byte	.LFE74
 3115 0058 00000000 		.4byte	.LFB75
 3116 005c 0C000000 		.4byte	.LFE75
 3117 0060 00000000 		.4byte	0
 3118 0064 00000000 		.4byte	0
 3119              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 70


 3120              	.Ldebug_line0:
 3121 0000 B6030000 		.section	.debug_str,"MS",%progbits,1
 3121      02007701 
 3121      00000201 
 3121      FB0E0D00 
 3121      01010101 
 3122              	.LASF59:
 3123 0000 6F6C645F 		.ascii	"old_value\000"
 3123      76616C75 
 3123      6500
 3124              	.LASF74:
 3125 000a 696E7465 		.ascii	"interrupt_manager\000"
 3125      72727570 
 3125      745F6D61 
 3125      6E616765 
 3125      7200
 3126              	.LASF91:
 3127 001c 73617665 		.ascii	"save_cycles_eeprom\000"
 3127      5F637963 
 3127      6C65735F 
 3127      65657072 
 3127      6F6D00
 3128              	.LASF107:
 3129 002f 53485F72 		.ascii	"SH_refOld\000"
 3129      65664F6C 
 3129      6400
 3130              	.LASF23:
 3131 0039 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 3131      545F4D4F 
 3131      44455F45 
 3131      4E434F44 
 3131      45523300 
 3132              	.LASF110:
 3133 004d 66696C74 		.ascii	"filt_emg\000"
 3133      5F656D67 
 3133      00
 3134              	.LASF65:
 3135 0056 73746174 		.ascii	"state\000"
 3135      6500
 3136              	.LASF98:
 3137 005c 74696D65 		.ascii	"timer_value\000"
 3137      725F7661 
 3137      6C756500 
 3138              	.LASF75:
 3139 0068 636F6D70 		.ascii	"compute_SH_reference\000"
 3139      7574655F 
 3139      53485F72 
 3139      65666572 
 3139      656E6365 
 3140              	.LASF67:
 3141 007d 64617461 		.ascii	"data_packet_length\000"
 3141      5F706163 
 3141      6B65745F 
 3141      6C656E67 
 3141      746800
 3142              	.LASF21:
 3143 0090 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 71


 3143      74797065 
 3143      00
 3144              	.LASF71:
 3145 0099 72785F64 		.ascii	"rx_data_type\000"
 3145      6174615F 
 3145      74797065 
 3145      00
 3146              	.LASF94:
 3147 00a6 675F6164 		.ascii	"g_adc_meas\000"
 3147      635F6D65 
 3147      617300
 3148              	.LASF34:
 3149 00b1 73745F64 		.ascii	"st_device\000"
 3149      65766963 
 3149      6500
 3150              	.LASF31:
 3151 00bb 6C656E67 		.ascii	"length\000"
 3151      746800
 3152              	.LASF111:
 3153 00c2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3153      43313120 
 3153      352E342E 
 3153      31203230 
 3153      31363036 
 3154 00f5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3154      20726576 
 3154      6973696F 
 3154      6E203233 
 3154      37373135 
 3155 0128 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3155      66756E63 
 3155      74696F6E 
 3155      2D736563 
 3155      74696F6E 
 3156              	.LASF29:
 3157 0150 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 3157      545F4D4F 
 3157      44455F45 
 3157      4D475F50 
 3157      524F504F 
 3158              	.LASF82:
 3159 016f 656E636F 		.ascii	"encoder_reading_SPI\000"
 3159      6465725F 
 3159      72656164 
 3159      696E675F 
 3159      53504900 
 3160              	.LASF61:
 3161 0183 73745F61 		.ascii	"st_adc_meas\000"
 3161      64635F6D 
 3161      65617300 
 3162              	.LASF2:
 3163 018f 73686F72 		.ascii	"short int\000"
 3163      7420696E 
 3163      7400
 3164              	.LASF114:
 3165 0199 53485F69 		.ascii	"SH_input_mode\000"
 3165      6E707574 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 72


 3165      5F6D6F64 
 3165      6500
 3166              	.LASF85:
 3167 01a7 616E616C 		.ascii	"analog_read_end\000"
 3167      6F675F72 
 3167      6561645F 
 3167      656E6400 
 3168              	.LASF88:
 3169 01b7 6D6F745F 		.ascii	"mot_idx\000"
 3169      69647800 
 3170              	.LASF24:
 3171 01bf 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 3171      545F4D4F 
 3171      44455F45 
 3171      4D475F50 
 3171      524F504F 
 3172              	.LASF12:
 3173 01db 75696E74 		.ascii	"uint16\000"
 3173      313600
 3174              	.LASF89:
 3175 01e2 6F766572 		.ascii	"overcurrent_control\000"
 3175      63757272 
 3175      656E745F 
 3175      636F6E74 
 3175      726F6C00 
 3176              	.LASF37:
 3177 01f6 73745F73 		.ascii	"st_slave\000"
 3177      6C617665 
 3177      00
 3178              	.LASF63:
 3179 01ff 4953525F 		.ascii	"ISR_RS485_RX_ExInterrupt\000"
 3179      52533438 
 3179      355F5258 
 3179      5F457849 
 3179      6E746572 
 3180              	.LASF103:
 3181 0218 6379636C 		.ascii	"cycles_interrupt_flag\000"
 3181      65735F69 
 3181      6E746572 
 3181      72757074 
 3181      5F666C61 
 3182              	.LASF81:
 3183 022e 76696272 		.ascii	"vibrotactile_control_generic\000"
 3183      6F746163 
 3183      74696C65 
 3183      5F636F6E 
 3183      74726F6C 
 3184              	.LASF62:
 3185 024b 70726573 		.ascii	"pressure\000"
 3185      73757265 
 3185      00
 3186              	.LASF26:
 3187 0254 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 3187      545F4D4F 
 3187      44455F45 
 3187      4D475F46 
 3187      43465300 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 73


 3188              	.LASF35:
 3189 0268 62617564 		.ascii	"baud_rate\000"
 3189      5F726174 
 3189      6500
 3190              	.LASF57:
 3191 0272 53485F63 		.ascii	"SH_config\000"
 3191      6F6E6669 
 3191      6700
 3192              	.LASF95:
 3193 027c 675F7278 		.ascii	"g_rx\000"
 3193      00
 3194              	.LASF39:
 3195 0281 706F735F 		.ascii	"pos_lim_sup\000"
 3195      6C696D5F 
 3195      73757000 
 3196              	.LASF14:
 3197 028d 696E7431 		.ascii	"int16\000"
 3197      3600
 3198              	.LASF112:
 3199 0293 2E2E5C73 		.ascii	"..\\src\\interruptions.c\000"
 3199      72635C69 
 3199      6E746572 
 3199      72757074 
 3199      696F6E73 
 3200              	.LASF101:
 3201 02aa 666C6167 		.ascii	"flag_master\000"
 3201      5F6D6173 
 3201      74657200 
 3202              	.LASF16:
 3203 02b6 666C6F61 		.ascii	"float\000"
 3203      7400
 3204              	.LASF15:
 3205 02bc 696E7433 		.ascii	"int32\000"
 3205      3200
 3206              	.LASF6:
 3207 02c2 6C6F6E67 		.ascii	"long long int\000"
 3207      206C6F6E 
 3207      6720696E 
 3207      7400
 3208              	.LASF4:
 3209 02d0 6C6F6E67 		.ascii	"long int\000"
 3209      20696E74 
 3209      00
 3210              	.LASF43:
 3211 02d9 656D675F 		.ascii	"emg_max_value\000"
 3211      6D61785F 
 3211      76616C75 
 3211      6500
 3212              	.LASF90:
 3213 02e7 6379636C 		.ascii	"cycles_counter_update\000"
 3213      65735F63 
 3213      6F756E74 
 3213      65725F75 
 3213      70646174 
 3214              	.LASF97:
 3215 02fd 635F6D65 		.ascii	"c_mem\000"
 3215      6D00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 74


 3216              	.LASF109:
 3217 0303 70726573 		.ascii	"pressure_value\000"
 3217      73757265 
 3217      5F76616C 
 3217      756500
 3218              	.LASF76:
 3219 0312 6572725F 		.ascii	"err_emg_1\000"
 3219      656D675F 
 3219      3100
 3220              	.LASF77:
 3221 031c 6572725F 		.ascii	"err_emg_2\000"
 3221      656D675F 
 3221      3200
 3222              	.LASF99:
 3223 0326 74696D65 		.ascii	"timer_value0\000"
 3223      725F7661 
 3223      6C756530 
 3223      00
 3224              	.LASF25:
 3225 0333 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 3225      545F4D4F 
 3225      44455F45 
 3225      4D475F49 
 3225      4E544547 
 3226              	.LASF45:
 3227 034b 73776974 		.ascii	"switch_emg\000"
 3227      63685F65 
 3227      6D6700
 3228              	.LASF58:
 3229 0356 73745F66 		.ascii	"st_filter\000"
 3229      696C7465 
 3229      7200
 3230              	.LASF46:
 3231 0360 73745F4D 		.ascii	"st_MASTER_spec\000"
 3231      41535445 
 3231      525F7370 
 3231      656300
 3232              	.LASF33:
 3233 036f 73745F64 		.ascii	"st_data\000"
 3233      61746100 
 3234              	.LASF20:
 3235 0377 6C6F6E67 		.ascii	"long double\000"
 3235      20646F75 
 3235      626C6500 
 3236              	.LASF80:
 3237 0383 6D6F746F 		.ascii	"motor_dir\000"
 3237      725F6469 
 3237      7200
 3238              	.LASF92:
 3239 038d 70776D5F 		.ascii	"pwm_preload_values\000"
 3239      7072656C 
 3239      6F61645F 
 3239      76616C75 
 3239      657300
 3240              	.LASF1:
 3241 03a0 756E7369 		.ascii	"unsigned char\000"
 3241      676E6564 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 75


 3241      20636861 
 3241      7200
 3242              	.LASF53:
 3243 03ae 76696272 		.ascii	"vibrotactile_feedback_active\000"
 3243      6F746163 
 3243      74696C65 
 3243      5F666565 
 3243      64626163 
 3244              	.LASF22:
 3245 03cb 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 3245      545F4D4F 
 3245      44455F45 
 3245      58544552 
 3245      4E414C00 
 3246              	.LASF78:
 3247 03df 63757272 		.ascii	"current_emg\000"
 3247      656E745F 
 3247      656D6700 
 3248              	.LASF64:
 3249 03eb 4953525F 		.ascii	"ISR_CYCLES_Handler\000"
 3249      4359434C 
 3249      45535F48 
 3249      616E646C 
 3249      657200
 3250              	.LASF0:
 3251 03fe 7369676E 		.ascii	"signed char\000"
 3251      65642063 
 3251      68617200 
 3252              	.LASF38:
 3253 040a 706F735F 		.ascii	"pos_lim_inf\000"
 3253      6C696D5F 
 3253      696E6600 
 3254              	.LASF7:
 3255 0416 6C6F6E67 		.ascii	"long long unsigned int\000"
 3255      206C6F6E 
 3255      6720756E 
 3255      7369676E 
 3255      65642069 
 3256              	.LASF49:
 3257 042d 73745F46 		.ascii	"st_FB_spec\000"
 3257      425F7370 
 3257      656300
 3258              	.LASF42:
 3259 0438 656D675F 		.ascii	"emg_threshold\000"
 3259      74687265 
 3259      73686F6C 
 3259      6400
 3260              	.LASF8:
 3261 0446 756E7369 		.ascii	"unsigned int\000"
 3261      676E6564 
 3261      20696E74 
 3261      00
 3262              	.LASF72:
 3263 0453 7061636B 		.ascii	"package_count\000"
 3263      6167655F 
 3263      636F756E 
 3263      7400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 76


 3264              	.LASF96:
 3265 0461 675F6D65 		.ascii	"g_mem\000"
 3265      6D00
 3266              	.LASF5:
 3267 0467 6C6F6E67 		.ascii	"long unsigned int\000"
 3267      20756E73 
 3267      69676E65 
 3267      6420696E 
 3267      7400
 3268              	.LASF54:
 3269 0479 61697263 		.ascii	"airchamber_feedback_active\000"
 3269      68616D62 
 3269      65725F66 
 3269      65656462 
 3269      61636B5F 
 3270              	.LASF79:
 3271 0494 70776D5F 		.ascii	"pwm_input\000"
 3271      696E7075 
 3271      7400
 3272              	.LASF60:
 3273 049e 6761696E 		.ascii	"gain\000"
 3273      00
 3274              	.LASF3:
 3275 04a3 73686F72 		.ascii	"short unsigned int\000"
 3275      7420756E 
 3275      7369676E 
 3275      65642069 
 3275      6E7400
 3276              	.LASF73:
 3277 04b6 66756E63 		.ascii	"function_scheduler\000"
 3277      74696F6E 
 3277      5F736368 
 3277      6564756C 
 3277      657200
 3278              	.LASF18:
 3279 04c9 63686172 		.ascii	"char\000"
 3279      00
 3280              	.LASF41:
 3281 04ce 73745F65 		.ascii	"st_emg\000"
 3281      6D6700
 3282              	.LASF32:
 3283 04d5 72656164 		.ascii	"ready\000"
 3283      7900
 3284              	.LASF10:
 3285 04db 696E7433 		.ascii	"int32_t\000"
 3285      325F7400 
 3286              	.LASF9:
 3287 04e3 5F5F696E 		.ascii	"__int32_t\000"
 3287      7433325F 
 3287      7400
 3288              	.LASF11:
 3289 04ed 75696E74 		.ascii	"uint8\000"
 3289      3800
 3290              	.LASF51:
 3291 04f3 6D617869 		.ascii	"maximum_pressure_kPa\000"
 3291      6D756D5F 
 3291      70726573 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 77


 3291      73757265 
 3291      5F6B5061 
 3292              	.LASF69:
 3293 0508 72785F71 		.ascii	"rx_queue\000"
 3293      75657565 
 3293      00
 3294              	.LASF84:
 3295 0511 6173736F 		.ascii	"assoc_motor\000"
 3295      635F6D6F 
 3295      746F7200 
 3296              	.LASF30:
 3297 051d 62756666 		.ascii	"buffer\000"
 3297      657200
 3298              	.LASF104:
 3299 0524 4144435F 		.ascii	"ADC_buf\000"
 3299      62756600 
 3300              	.LASF13:
 3301 052c 75696E74 		.ascii	"uint32\000"
 3301      333200
 3302              	.LASF19:
 3303 0533 72656738 		.ascii	"reg8\000"
 3303      00
 3304              	.LASF47:
 3305 0538 6D617374 		.ascii	"master_mode_active\000"
 3305      65725F6D 
 3305      6F64655F 
 3305      61637469 
 3305      766500
 3306              	.LASF17:
 3307 054b 646F7562 		.ascii	"double\000"
 3307      6C6500
 3308              	.LASF55:
 3309 0552 73745F65 		.ascii	"st_eeprom\000"
 3309      6570726F 
 3309      6D00
 3310              	.LASF113:
 3311 055c 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\Git\\PSoC5\\PSoC5_FW"
 3311      73657273 
 3311      5C6D676E 
 3311      6F63636F 
 3311      5C446F63 
 3312 0589 5F574953 		.ascii	"_WISH_VIBES\\FW_WearableHealtySubj - WISH+Dayton\\W"
 3312      485F5649 
 3312      4245535C 
 3312      46575F57 
 3312      65617261 
 3313 05ba 4953485F 		.ascii	"ISH_VIBES_Socket.cydsn\000"
 3313      56494245 
 3313      535F536F 
 3313      636B6574 
 3313      2E637964 
 3314              	.LASF106:
 3315 05d1 53485F72 		.ascii	"SH_ref\000"
 3315      656600
 3316              	.LASF36:
 3317 05d8 756E7573 		.ascii	"unused_bytes\000"
 3317      65645F62 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 78


 3317      79746573 
 3317      00
 3318              	.LASF66:
 3319 05e5 64617461 		.ascii	"data_packet_index\000"
 3319      5F706163 
 3319      6B65745F 
 3319      696E6465 
 3319      7800
 3320              	.LASF28:
 3321 05f7 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 3321      545F4D4F 
 3321      44455F4A 
 3321      4F595354 
 3321      49434B00 
 3322              	.LASF40:
 3323 060b 696E7075 		.ascii	"input_mode\000"
 3323      745F6D6F 
 3323      646500
 3324              	.LASF70:
 3325 0616 72785F64 		.ascii	"rx_data\000"
 3325      61746100 
 3326              	.LASF105:
 3327 061e 6D617374 		.ascii	"master_mode\000"
 3327      65725F6D 
 3327      6F646500 
 3328              	.LASF56:
 3329 062a 666C6167 		.ascii	"flag\000"
 3329      00
 3330              	.LASF52:
 3331 062f 70726F70 		.ascii	"prop_err_fb_gain\000"
 3331      5F657272 
 3331      5F66625F 
 3331      6761696E 
 3331      00
 3332              	.LASF93:
 3333 0640 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3333      52784275 
 3333      66666572 
 3333      00
 3334              	.LASF48:
 3335 064d 736C6176 		.ascii	"slave_ID\000"
 3335      655F4944 
 3335      00
 3336              	.LASF87:
 3337 0656 70776D5F 		.ascii	"pwm_limit_search\000"
 3337      6C696D69 
 3337      745F7365 
 3337      61726368 
 3337      00
 3338              	.LASF50:
 3339 0667 6D61785F 		.ascii	"max_residual_current\000"
 3339      72657369 
 3339      6475616C 
 3339      5F637572 
 3339      72656E74 
 3340              	.LASF68:
 3341 067c 64617461 		.ascii	"data_packet_buffer\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccEQBDja.s 			page 79


 3341      5F706163 
 3341      6B65745F 
 3341      62756666 
 3341      657200
 3342              	.LASF44:
 3343 068f 656D675F 		.ascii	"emg_speed\000"
 3343      73706565 
 3343      6400
 3344              	.LASF86:
 3345 0699 695F6175 		.ascii	"i_aux\000"
 3345      7800
 3346              	.LASF27:
 3347 069f 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 3347      545F4D4F 
 3347      44455F45 
 3347      4D475F46 
 3347      4346535F 
 3348              	.LASF102:
 3349 06b7 696E7465 		.ascii	"interrupt_flag\000"
 3349      72727570 
 3349      745F666C 
 3349      616700
 3350              	.LASF83:
 3351 06c6 6E5F6C69 		.ascii	"n_line\000"
 3351      6E6500
 3352              	.LASF108:
 3353 06cd 56545F72 		.ascii	"VT_ref\000"
 3353      656600
 3354              	.LASF100:
 3355 06d4 6379636C 		.ascii	"cycle_time\000"
 3355      655F7469 
 3355      6D6500
 3356              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
