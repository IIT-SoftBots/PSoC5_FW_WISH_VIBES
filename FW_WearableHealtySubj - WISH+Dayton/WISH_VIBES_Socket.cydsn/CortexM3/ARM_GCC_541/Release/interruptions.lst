ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"interruptions.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              		.type	pwm_preload_values, %object
  22              		.size	pwm_preload_values, 29
  23              	pwm_preload_values:
  24 0000 64       		.byte	100
  25 0001 53       		.byte	83
  26 0002 4E       		.byte	78
  27 0003 4C       		.byte	76
  28 0004 4A       		.byte	74
  29 0005 48       		.byte	72
  30 0006 46       		.byte	70
  31 0007 44       		.byte	68
  32 0008 43       		.byte	67
  33 0009 41       		.byte	65
  34 000a 40       		.byte	64
  35 000b 3F       		.byte	63
  36 000c 3E       		.byte	62
  37 000d 3D       		.byte	61
  38 000e 3C       		.byte	60
  39 000f 3B       		.byte	59
  40 0010 3A       		.byte	58
  41 0011 39       		.byte	57
  42 0012 38       		.byte	56
  43 0013 38       		.byte	56
  44 0014 37       		.byte	55
  45 0015 36       		.byte	54
  46 0016 36       		.byte	54
  47 0017 35       		.byte	53
  48 0018 34       		.byte	52
  49 0019 34       		.byte	52
  50 001a 34       		.byte	52
  51 001b 33       		.byte	51
  52 001c 33       		.byte	51
  53              		.section	.text.ISR_RS485_RX_ExInterrupt,"ax",%progbits
  54              		.align	2
  55              		.global	ISR_RS485_RX_ExInterrupt
  56              		.thumb
  57              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 2


  58              		.type	ISR_RS485_RX_ExInterrupt, %function
  59              	ISR_RS485_RX_ExInterrupt:
  60              	.LFB64:
  61              		.file 1 "..\\src\\interruptions.c"
   1:..\src/interruptions.c **** // ----------------------------------------------------------------------------
   2:..\src/interruptions.c **** // BSD 3-Clause License
   3:..\src/interruptions.c **** 
   4:..\src/interruptions.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/interruptions.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/interruptions.c **** // All rights reserved.
   7:..\src/interruptions.c **** 
   8:..\src/interruptions.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/interruptions.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/interruptions.c **** 
  11:..\src/interruptions.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/interruptions.c **** //   list of conditions and the following disclaimer.
  13:..\src/interruptions.c **** 
  14:..\src/interruptions.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/interruptions.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/interruptions.c **** //   and/or other materials provided with the distribution.
  17:..\src/interruptions.c **** 
  18:..\src/interruptions.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/interruptions.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/interruptions.c **** //   this software without specific prior written permission.
  21:..\src/interruptions.c **** 
  22:..\src/interruptions.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/interruptions.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:..\src/interruptions.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/interruptions.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/interruptions.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/interruptions.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/interruptions.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/interruptions.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/interruptions.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/interruptions.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/interruptions.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/interruptions.c **** // ----------------------------------------------------------------------------
  34:..\src/interruptions.c **** 
  35:..\src/interruptions.c **** /**
  36:..\src/interruptions.c **** * \file         interruptions.c
  37:..\src/interruptions.c **** *
  38:..\src/interruptions.c **** * \brief        Interruption handling and firmware core functions
  39:..\src/interruptions.c **** * \date         March 20th, 2020
  40:..\src/interruptions.c **** * \author       _Centro "E.Piaggio"_
  41:..\src/interruptions.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42:..\src/interruptions.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  43:..\src/interruptions.c **** */
  44:..\src/interruptions.c **** 
  45:..\src/interruptions.c **** 
  46:..\src/interruptions.c **** //=================================================================     includes
  47:..\src/interruptions.c **** #include "interruptions.h"
  48:..\src/interruptions.c **** 
  49:..\src/interruptions.c **** //==============================================================================
  50:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  51:..\src/interruptions.c **** //==============================================================================
  52:..\src/interruptions.c **** // Processing RS-485 data frame:
  53:..\src/interruptions.c **** //
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 3


  54:..\src/interruptions.c **** // - 0:     Waits for beginning characters
  55:..\src/interruptions.c **** // - 1:     Waits for ID;
  56:..\src/interruptions.c **** // - 2:     Data length;
  57:..\src/interruptions.c **** // - 3:     Receive all bytes;
  58:..\src/interruptions.c **** // - 4:     Wait for another device end of transmission;
  59:..\src/interruptions.c **** //
  60:..\src/interruptions.c **** //==============================================================================
  61:..\src/interruptions.c **** 
  62:..\src/interruptions.c **** // PWM values needed to obtain 11.5 V given a certain input tension
  63:..\src/interruptions.c **** // Numbers are sperimentally calculated //[index] (millivolts)
  64:..\src/interruptions.c **** static const uint8 pwm_preload_values[29] = {100,    //0 (11500)
  65:..\src/interruptions.c ****                                               83,
  66:..\src/interruptions.c ****                                               78,
  67:..\src/interruptions.c ****                                               76,
  68:..\src/interruptions.c ****                                               74,
  69:..\src/interruptions.c ****                                               72,    //5 (14000)
  70:..\src/interruptions.c ****                                               70,
  71:..\src/interruptions.c ****                                               68,
  72:..\src/interruptions.c ****                                               67,
  73:..\src/interruptions.c ****                                               65,
  74:..\src/interruptions.c ****                                               64,    //10 (16500)
  75:..\src/interruptions.c ****                                               63,
  76:..\src/interruptions.c ****                                               62,
  77:..\src/interruptions.c ****                                               61,
  78:..\src/interruptions.c ****                                               60,
  79:..\src/interruptions.c ****                                               59,    //15 (19000)
  80:..\src/interruptions.c ****                                               58,
  81:..\src/interruptions.c ****                                               57,
  82:..\src/interruptions.c ****                                               56,
  83:..\src/interruptions.c ****                                               56,
  84:..\src/interruptions.c ****                                               55,    //20 (21500)
  85:..\src/interruptions.c ****                                               54,
  86:..\src/interruptions.c ****                                               54,
  87:..\src/interruptions.c ****                                               53,
  88:..\src/interruptions.c ****                                               52,
  89:..\src/interruptions.c ****                                               52,    //25 (24000)
  90:..\src/interruptions.c ****                                               52,
  91:..\src/interruptions.c ****                                               51,
  92:..\src/interruptions.c ****                                               51};   //28 (25500)
  93:..\src/interruptions.c **** 
  94:..\src/interruptions.c **** //==============================================================================
  95:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  96:..\src/interruptions.c **** //==============================================================================
  97:..\src/interruptions.c **** 
  98:..\src/interruptions.c **** CY_ISR(ISR_RS485_RX_ExInterrupt) {
  62              		.loc 1 98 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  99:..\src/interruptions.c **** 
 100:..\src/interruptions.c ****     // Set RS485 flag
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 4


 101:..\src/interruptions.c ****     
 102:..\src/interruptions.c ****     interrupt_flag = TRUE;
  72              		.loc 1 102 0
  73 0004 034B     		ldr	r3, .L2
  74 0006 0122     		movs	r2, #1
  75 0008 1A70     		strb	r2, [r3]
 103:..\src/interruptions.c ****      
 104:..\src/interruptions.c **** }
  76              		.loc 1 104 0
  77 000a 00BF     		nop
  78 000c BD46     		mov	sp, r7
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 000e 80BC     		pop	{r7}
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0010 7047     		bx	lr
  85              	.L3:
  86 0012 00BF     		.align	2
  87              	.L2:
  88 0014 00000000 		.word	interrupt_flag
  89              		.cfi_endproc
  90              	.LFE64:
  91              		.size	ISR_RS485_RX_ExInterrupt, .-ISR_RS485_RX_ExInterrupt
  92              		.section	.text.ISR_CYCLES_Handler,"ax",%progbits
  93              		.align	2
  94              		.global	ISR_CYCLES_Handler
  95              		.thumb
  96              		.thumb_func
  97              		.type	ISR_CYCLES_Handler, %function
  98              	ISR_CYCLES_Handler:
  99              	.LFB65:
 105:..\src/interruptions.c **** 
 106:..\src/interruptions.c **** //==============================================================================
 107:..\src/interruptions.c **** //                                                        CYCLES TIMER INTERRUPT
 108:..\src/interruptions.c **** //==============================================================================
 109:..\src/interruptions.c **** CY_ISR(ISR_CYCLES_Handler){
 100              		.loc 1 109 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0000 80B4     		push	{r7}
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110:..\src/interruptions.c **** 
 111:..\src/interruptions.c ****     // Set cycles interrupt flag
 112:..\src/interruptions.c ****     
 113:..\src/interruptions.c ****     cycles_interrupt_flag = TRUE;
 110              		.loc 1 113 0
 111 0004 044B     		ldr	r3, .L5
 112 0006 0122     		movs	r2, #1
 113 0008 1A70     		strb	r2, [r3]
 114:..\src/interruptions.c ****     
 115:..\src/interruptions.c ****     CYCLES_TIMER_STATUS;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 5


 114              		.loc 1 115 0
 115 000a 044B     		ldr	r3, .L5+4
 116 000c 1B78     		ldrb	r3, [r3]
 116:..\src/interruptions.c **** 
 117:..\src/interruptions.c **** }
 117              		.loc 1 117 0
 118 000e 00BF     		nop
 119 0010 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0012 80BC     		pop	{r7}
 123              		.cfi_restore 7
 124              		.cfi_def_cfa_offset 0
 125 0014 7047     		bx	lr
 126              	.L6:
 127 0016 00BF     		.align	2
 128              	.L5:
 129 0018 00000000 		.word	cycles_interrupt_flag
 130 001c 034F0040 		.word	1073762051
 131              		.cfi_endproc
 132              	.LFE65:
 133              		.size	ISR_CYCLES_Handler, .-ISR_CYCLES_Handler
 134              		.section	.text.interrupt_manager,"ax",%progbits
 135              		.align	2
 136              		.global	interrupt_manager
 137              		.thumb
 138              		.thumb_func
 139              		.type	interrupt_manager, %function
 140              	interrupt_manager:
 141              	.LFB66:
 118:..\src/interruptions.c **** 
 119:..\src/interruptions.c **** //==============================================================================
 120:..\src/interruptions.c **** //                                                             INTERRUPT MANAGER
 121:..\src/interruptions.c **** //==============================================================================
 122:..\src/interruptions.c **** // Manage interrupt from RS485 
 123:..\src/interruptions.c **** //==============================================================================
 124:..\src/interruptions.c **** // Processing RS-485 data frame:
 125:..\src/interruptions.c **** //
 126:..\src/interruptions.c **** // - WAIT_START:    Waits for beginning characters;
 127:..\src/interruptions.c **** // - WAIT_ID:       Waits for ID;
 128:..\src/interruptions.c **** // - WAIT_LENGTH:   Data length;
 129:..\src/interruptions.c **** // - RECEIVE:       Receive all bytes;
 130:..\src/interruptions.c **** // - UNLOAD:        Wait for another device end of transmission;
 131:..\src/interruptions.c **** //
 132:..\src/interruptions.c **** //==============================================================================
 133:..\src/interruptions.c **** 
 134:..\src/interruptions.c **** void interrupt_manager(){
 142              		.loc 1 134 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 82B0     		sub	sp, sp, #8
 151              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 6


 152 0004 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 135:..\src/interruptions.c **** 
 136:..\src/interruptions.c ****     
 137:..\src/interruptions.c ****     //===========================================     local variables definition
 138:..\src/interruptions.c **** 
 139:..\src/interruptions.c ****     static uint8 CYDATA state = WAIT_START;                      // state
 140:..\src/interruptions.c ****     
 141:..\src/interruptions.c ****     //------------------------------------------------- local data packet
 142:..\src/interruptions.c ****     static uint8 CYDATA data_packet_index;
 143:..\src/interruptions.c ****     static uint8 CYDATA data_packet_length;
 144:..\src/interruptions.c ****     static uint8 data_packet_buffer[128];                     
 145:..\src/interruptions.c ****     static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 146:..\src/interruptions.c ****     //-------------------------------------------------
 147:..\src/interruptions.c **** 
 148:..\src/interruptions.c ****     uint8 CYDATA    rx_data;                            // RS485 UART rx data
 149:..\src/interruptions.c ****     CYBIT           rx_data_type = TRUE;                       // my id?
 154              		.loc 1 149 0
 155 0006 0123     		movs	r3, #1
 156 0008 FB71     		strb	r3, [r7, #7]
 150:..\src/interruptions.c ****     uint8 CYDATA    package_count = 0;                     
 157              		.loc 1 150 0
 158 000a 0023     		movs	r3, #0
 159 000c BB71     		strb	r3, [r7, #6]
 151:..\src/interruptions.c **** 
 152:..\src/interruptions.c ****     //======================================================     receive routine
 153:..\src/interruptions.c ****     
 154:..\src/interruptions.c ****     while(UART_RS485_GetRxBufferSize() && (package_count < 100)){
 160              		.loc 1 154 0
 161 000e DFE0     		b	.L8
 162              	.L28:
 155:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 156:..\src/interruptions.c **** 
 157:..\src/interruptions.c ****         // Get next char
 158:..\src/interruptions.c ****         rx_data = UART_RS485_GetChar();
 163              		.loc 1 158 0
 164 0010 FFF7FEFF 		bl	UART_RS485_GetChar
 165 0014 0346     		mov	r3, r0
 166 0016 7B71     		strb	r3, [r7, #5]
 159:..\src/interruptions.c ****         
 160:..\src/interruptions.c ****         switch (state) {
 167              		.loc 1 160 0
 168 0018 744B     		ldr	r3, .L31
 169 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 001c 042B     		cmp	r3, #4
 171 001e 00F2D780 		bhi	.L8
 172 0022 01A2     		adr	r2, .L10
 173 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 174              		.p2align 2
 175              	.L10:
 176 0028 3D000000 		.word	.L9+1
 177 002c A3000000 		.word	.L11+1
 178 0030 DF000000 		.word	.L12+1
 179 0034 2D010000 		.word	.L13+1
 180 0038 97010000 		.word	.L14+1
 181              		.p2align 1
 182              	.L9:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 7


 161:..\src/interruptions.c ****             //-----     wait for frame start     -------------------------------
 162:..\src/interruptions.c ****             case WAIT_START:
 163:..\src/interruptions.c ****             
 164:..\src/interruptions.c ****                 rx_queue[0] = rx_queue[1];
 183              		.loc 1 164 0
 184 003c 6C4B     		ldr	r3, .L31+4
 185 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 186 0040 6B4B     		ldr	r3, .L31+4
 187 0042 1A70     		strb	r2, [r3]
 165:..\src/interruptions.c ****                 rx_queue[1] = rx_queue[2];
 188              		.loc 1 165 0
 189 0044 6A4B     		ldr	r3, .L31+4
 190 0046 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 191 0048 694B     		ldr	r3, .L31+4
 192 004a 5A70     		strb	r2, [r3, #1]
 166:..\src/interruptions.c ****                 rx_queue[2] = rx_data;
 193              		.loc 1 166 0
 194 004c 684A     		ldr	r2, .L31+4
 195 004e 7B79     		ldrb	r3, [r7, #5]
 196 0050 9370     		strb	r3, [r2, #2]
 167:..\src/interruptions.c ****                 
 168:..\src/interruptions.c ****                 // Check for header configuration package
 169:..\src/interruptions.c ****                 if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 197              		.loc 1 169 0
 198 0052 674B     		ldr	r3, .L31+4
 199 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 200 0056 3A2B     		cmp	r3, #58
 201 0058 10D1     		bne	.L15
 202              		.loc 1 169 0 is_stmt 0 discriminator 1
 203 005a 654B     		ldr	r3, .L31+4
 204 005c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 205 005e 3A2B     		cmp	r3, #58
 206 0060 0CD1     		bne	.L15
 170:..\src/interruptions.c ****                     rx_queue[0] = 0;
 207              		.loc 1 170 0 is_stmt 1
 208 0062 634B     		ldr	r3, .L31+4
 209 0064 0022     		movs	r2, #0
 210 0066 1A70     		strb	r2, [r3]
 171:..\src/interruptions.c ****                     rx_queue[1] = 0;
 211              		.loc 1 171 0
 212 0068 614B     		ldr	r3, .L31+4
 213 006a 0022     		movs	r2, #0
 214 006c 5A70     		strb	r2, [r3, #1]
 172:..\src/interruptions.c ****                     rx_queue[2] = 0;
 215              		.loc 1 172 0
 216 006e 604B     		ldr	r3, .L31+4
 217 0070 0022     		movs	r2, #0
 218 0072 9A70     		strb	r2, [r3, #2]
 173:..\src/interruptions.c ****                     state       = WAIT_ID;                    
 219              		.loc 1 173 0
 220 0074 5D4B     		ldr	r3, .L31
 221 0076 0122     		movs	r2, #1
 222 0078 1A70     		strb	r2, [r3]
 223 007a 11E0     		b	.L16
 224              	.L15:
 174:..\src/interruptions.c ****                 }
 175:..\src/interruptions.c ****                 else
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 8


 176:..\src/interruptions.c ****                     if ((rx_queue[0] == 63) &&      //ASCII - ?
 225              		.loc 1 176 0
 226 007c 5C4B     		ldr	r3, .L31+4
 227 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 0080 3F2B     		cmp	r3, #63
 229 0082 40F0A580 		bne	.L8
 177:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 230              		.loc 1 177 0 discriminator 1
 231 0086 5A4B     		ldr	r3, .L31+4
 232 0088 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 233              		.loc 1 176 0 discriminator 1
 234 008a 0D2B     		cmp	r3, #13
 235 008c 40F0A080 		bne	.L8
 178:..\src/interruptions.c ****                         (rx_queue[2] == 10))        //ASCII - LF)
 236              		.loc 1 178 0
 237 0090 574B     		ldr	r3, .L31+4
 238 0092 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 177:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 239              		.loc 1 177 0
 240 0094 0A2B     		cmp	r3, #10
 241 0096 40F09B80 		bne	.L8
 179:..\src/interruptions.c ****                         infoGet(INFO_ALL);
 242              		.loc 1 179 0
 243 009a 0020     		movs	r0, #0
 244 009c FFF7FEFF 		bl	infoGet
 245              	.L16:
 180:..\src/interruptions.c ****                 break;
 246              		.loc 1 180 0
 247 00a0 96E0     		b	.L8
 248              	.L11:
 181:..\src/interruptions.c **** 
 182:..\src/interruptions.c ****             //-----     wait for id     ----------------------------------------
 183:..\src/interruptions.c ****             case  WAIT_ID:
 184:..\src/interruptions.c **** 
 185:..\src/interruptions.c ****                 // packet is for my ID or is broadcast
 186:..\src/interruptions.c **** #ifdef MASTER_FW
 187:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0 || (master_mode && rx_data == c_mem.MS.
 249              		.loc 1 187 0
 250 00a2 544B     		ldr	r3, .L31+8
 251 00a4 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 252 00a6 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 253 00a8 9A42     		cmp	r2, r3
 254 00aa 0CD0     		beq	.L17
 255              		.loc 1 187 0 is_stmt 0 discriminator 1
 256 00ac 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 257 00ae 002B     		cmp	r3, #0
 258 00b0 09D0     		beq	.L17
 259              		.loc 1 187 0 discriminator 2
 260 00b2 514B     		ldr	r3, .L31+12
 261 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 262 00b6 002B     		cmp	r3, #0
 263 00b8 08D0     		beq	.L18
 264              		.loc 1 187 0 discriminator 3
 265 00ba 4E4B     		ldr	r3, .L31+8
 266 00bc 93F84130 		ldrb	r3, [r3, #65]	@ zero_extendqisi2
 267 00c0 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 9


 268 00c2 9A42     		cmp	r2, r3
 269 00c4 02D1     		bne	.L18
 270              	.L17:
 188:..\src/interruptions.c ****                    rx_data_type = FALSE;
 271              		.loc 1 188 0 is_stmt 1
 272 00c6 0023     		movs	r3, #0
 273 00c8 FB71     		strb	r3, [r7, #7]
 274 00ca 01E0     		b	.L19
 275              	.L18:
 189:..\src/interruptions.c ****                 else                //packet is for others
 190:..\src/interruptions.c ****                     rx_data_type = TRUE;
 276              		.loc 1 190 0
 277 00cc 0123     		movs	r3, #1
 278 00ce FB71     		strb	r3, [r7, #7]
 279              	.L19:
 191:..\src/interruptions.c **** #else
 192:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0)
 193:..\src/interruptions.c ****                     rx_data_type = FALSE;
 194:..\src/interruptions.c ****                 else                //packet is for others
 195:..\src/interruptions.c ****                     rx_data_type = TRUE;
 196:..\src/interruptions.c **** #endif                
 197:..\src/interruptions.c ****                 data_packet_length = 0;
 280              		.loc 1 197 0
 281 00d0 4A4B     		ldr	r3, .L31+16
 282 00d2 0022     		movs	r2, #0
 283 00d4 1A70     		strb	r2, [r3]
 198:..\src/interruptions.c ****                 state = WAIT_LENGTH;
 284              		.loc 1 198 0
 285 00d6 454B     		ldr	r3, .L31
 286 00d8 0222     		movs	r2, #2
 287 00da 1A70     		strb	r2, [r3]
 199:..\src/interruptions.c ****                 break;
 288              		.loc 1 199 0
 289 00dc 78E0     		b	.L8
 290              	.L12:
 200:..\src/interruptions.c **** 
 201:..\src/interruptions.c ****             //-----     wait for length     ------------------------------------
 202:..\src/interruptions.c ****             case  WAIT_LENGTH:
 203:..\src/interruptions.c **** 
 204:..\src/interruptions.c ****                 data_packet_length = rx_data;
 291              		.loc 1 204 0
 292 00de 474A     		ldr	r2, .L31+16
 293 00e0 7B79     		ldrb	r3, [r7, #5]
 294 00e2 1370     		strb	r3, [r2]
 205:..\src/interruptions.c ****                 // check validity of pack length
 206:..\src/interruptions.c ****                 if (data_packet_length <= 1) {
 295              		.loc 1 206 0
 296 00e4 454B     		ldr	r3, .L31+16
 297 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 298 00e8 012B     		cmp	r3, #1
 299 00ea 06D8     		bhi	.L20
 207:..\src/interruptions.c ****                     data_packet_length = 0;
 300              		.loc 1 207 0
 301 00ec 434B     		ldr	r3, .L31+16
 302 00ee 0022     		movs	r2, #0
 303 00f0 1A70     		strb	r2, [r3]
 208:..\src/interruptions.c ****                     state = WAIT_START;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 10


 304              		.loc 1 208 0
 305 00f2 3E4B     		ldr	r3, .L31
 306 00f4 0022     		movs	r2, #0
 307 00f6 1A70     		strb	r2, [r3]
 308 00f8 6AE0     		b	.L8
 309              	.L20:
 209:..\src/interruptions.c ****                 } else if (data_packet_length > 128) {
 310              		.loc 1 209 0
 311 00fa 404B     		ldr	r3, .L31+16
 312 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 00fe 802B     		cmp	r3, #128
 314 0100 06D9     		bls	.L22
 210:..\src/interruptions.c ****                     data_packet_length = 0;
 315              		.loc 1 210 0
 316 0102 3E4B     		ldr	r3, .L31+16
 317 0104 0022     		movs	r2, #0
 318 0106 1A70     		strb	r2, [r3]
 211:..\src/interruptions.c ****                     state = WAIT_START;
 319              		.loc 1 211 0
 320 0108 384B     		ldr	r3, .L31
 321 010a 0022     		movs	r2, #0
 322 010c 1A70     		strb	r2, [r3]
 323 010e 5FE0     		b	.L8
 324              	.L22:
 212:..\src/interruptions.c ****                 } else {
 213:..\src/interruptions.c ****                     data_packet_index = 0;
 325              		.loc 1 213 0
 326 0110 3B4B     		ldr	r3, .L31+20
 327 0112 0022     		movs	r2, #0
 328 0114 1A70     		strb	r2, [r3]
 214:..\src/interruptions.c ****                     
 215:..\src/interruptions.c ****                     if(rx_data_type == FALSE)
 329              		.loc 1 215 0
 330 0116 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 331 0118 002B     		cmp	r3, #0
 332 011a 03D1     		bne	.L23
 216:..\src/interruptions.c ****                         state = RECEIVE;          // packet for me or broadcast
 333              		.loc 1 216 0
 334 011c 334B     		ldr	r3, .L31
 335 011e 0322     		movs	r2, #3
 336 0120 1A70     		strb	r2, [r3]
 337 0122 55E0     		b	.L8
 338              	.L23:
 217:..\src/interruptions.c ****                     else
 218:..\src/interruptions.c ****                         state = UNLOAD;           // packet for others
 339              		.loc 1 218 0
 340 0124 314B     		ldr	r3, .L31
 341 0126 0422     		movs	r2, #4
 342 0128 1A70     		strb	r2, [r3]
 219:..\src/interruptions.c ****                 }
 220:..\src/interruptions.c ****                 break;
 343              		.loc 1 220 0
 344 012a 51E0     		b	.L8
 345              	.L13:
 221:..\src/interruptions.c **** 
 222:..\src/interruptions.c ****             //-----     receiving     -------------------------------------------
 223:..\src/interruptions.c ****             case RECEIVE:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 11


 224:..\src/interruptions.c **** 
 225:..\src/interruptions.c ****                 data_packet_buffer[data_packet_index] = rx_data;
 346              		.loc 1 225 0
 347 012c 344B     		ldr	r3, .L31+20
 348 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 349 0130 1946     		mov	r1, r3
 350 0132 344A     		ldr	r2, .L31+24
 351 0134 7B79     		ldrb	r3, [r7, #5]
 352 0136 5354     		strb	r3, [r2, r1]
 226:..\src/interruptions.c ****                 data_packet_index++;
 353              		.loc 1 226 0
 354 0138 314B     		ldr	r3, .L31+20
 355 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 356 013c 0133     		adds	r3, r3, #1
 357 013e DAB2     		uxtb	r2, r3
 358 0140 2F4B     		ldr	r3, .L31+20
 359 0142 1A70     		strb	r2, [r3]
 227:..\src/interruptions.c ****                 
 228:..\src/interruptions.c ****                 // check end of transmission
 229:..\src/interruptions.c ****                 if (data_packet_index >= data_packet_length) {
 360              		.loc 1 229 0
 361 0144 2E4B     		ldr	r3, .L31+20
 362 0146 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 363 0148 2C4B     		ldr	r3, .L31+16
 364 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 365 014c 9A42     		cmp	r2, r3
 366 014e 3FD3     		bcc	.L8
 230:..\src/interruptions.c ****                     // verify if frame ID corresponded to the device ID
 231:..\src/interruptions.c ****                     if (rx_data_type == FALSE) {
 367              		.loc 1 231 0
 368 0150 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 369 0152 002B     		cmp	r3, #0
 370 0154 12D1     		bne	.L25
 232:..\src/interruptions.c ****                         // copying data from buffer to global packet
 233:..\src/interruptions.c ****                         memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 371              		.loc 1 233 0
 372 0156 294B     		ldr	r3, .L31+16
 373 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 374 015a 1A46     		mov	r2, r3
 375 015c 2949     		ldr	r1, .L31+24
 376 015e 2A48     		ldr	r0, .L31+28
 377 0160 FFF7FEFF 		bl	memcpy
 234:..\src/interruptions.c ****                         g_rx.length = data_packet_length;
 378              		.loc 1 234 0
 379 0164 254B     		ldr	r3, .L31+16
 380 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 381 0168 1AB2     		sxth	r2, r3
 382 016a 274B     		ldr	r3, .L31+28
 383 016c A3F88020 		strh	r2, [r3, #128]	@ movhi
 235:..\src/interruptions.c ****                         g_rx.ready  = 1;
 384              		.loc 1 235 0
 385 0170 254B     		ldr	r3, .L31+28
 386 0172 0122     		movs	r2, #1
 387 0174 83F88420 		strb	r2, [r3, #132]
 236:..\src/interruptions.c ****                         commProcess();
 388              		.loc 1 236 0
 389 0178 FFF7FEFF 		bl	commProcess
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 12


 390              	.L25:
 237:..\src/interruptions.c ****                     }
 238:..\src/interruptions.c ****                     
 239:..\src/interruptions.c ****                     data_packet_index  = 0;
 391              		.loc 1 239 0
 392 017c 204B     		ldr	r3, .L31+20
 393 017e 0022     		movs	r2, #0
 394 0180 1A70     		strb	r2, [r3]
 240:..\src/interruptions.c ****                     data_packet_length = 0;
 395              		.loc 1 240 0
 396 0182 1E4B     		ldr	r3, .L31+16
 397 0184 0022     		movs	r2, #0
 398 0186 1A70     		strb	r2, [r3]
 241:..\src/interruptions.c ****                     state              = WAIT_START;
 399              		.loc 1 241 0
 400 0188 184B     		ldr	r3, .L31
 401 018a 0022     		movs	r2, #0
 402 018c 1A70     		strb	r2, [r3]
 242:..\src/interruptions.c ****                     package_count++;
 403              		.loc 1 242 0
 404 018e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 405 0190 0133     		adds	r3, r3, #1
 406 0192 BB71     		strb	r3, [r7, #6]
 243:..\src/interruptions.c ****                 
 244:..\src/interruptions.c ****                 }
 245:..\src/interruptions.c ****                 break;
 407              		.loc 1 245 0
 408 0194 1CE0     		b	.L8
 409              	.L14:
 246:..\src/interruptions.c **** 
 247:..\src/interruptions.c ****             //-----     other device is receving     ---------------------------
 248:..\src/interruptions.c ****             case UNLOAD:
 249:..\src/interruptions.c ****                 if (!(--data_packet_length)) {
 410              		.loc 1 249 0
 411 0196 194B     		ldr	r3, .L31+16
 412 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 413 019a 013B     		subs	r3, r3, #1
 414 019c DAB2     		uxtb	r2, r3
 415 019e 174B     		ldr	r3, .L31+16
 416 01a0 1A70     		strb	r2, [r3]
 417 01a2 164B     		ldr	r3, .L31+16
 418 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 419 01a6 002B     		cmp	r3, #0
 420 01a8 11D1     		bne	.L30
 250:..\src/interruptions.c ****                     data_packet_index  = 0;
 421              		.loc 1 250 0
 422 01aa 154B     		ldr	r3, .L31+20
 423 01ac 0022     		movs	r2, #0
 424 01ae 1A70     		strb	r2, [r3]
 251:..\src/interruptions.c ****                     data_packet_length = 0;
 425              		.loc 1 251 0
 426 01b0 124B     		ldr	r3, .L31+16
 427 01b2 0022     		movs	r2, #0
 428 01b4 1A70     		strb	r2, [r3]
 252:..\src/interruptions.c ****                     RS485_CTS_Write(1);
 429              		.loc 1 252 0
 430 01b6 0120     		movs	r0, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 13


 431 01b8 FFF7FEFF 		bl	RS485_CTS_Write
 253:..\src/interruptions.c ****                     RS485_CTS_Write(0);
 432              		.loc 1 253 0
 433 01bc 0020     		movs	r0, #0
 434 01be FFF7FEFF 		bl	RS485_CTS_Write
 254:..\src/interruptions.c ****                     state              = WAIT_START;
 435              		.loc 1 254 0
 436 01c2 0A4B     		ldr	r3, .L31
 437 01c4 0022     		movs	r2, #0
 438 01c6 1A70     		strb	r2, [r3]
 255:..\src/interruptions.c ****                     package_count++;
 439              		.loc 1 255 0
 440 01c8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 441 01ca 0133     		adds	r3, r3, #1
 442 01cc BB71     		strb	r3, [r7, #6]
 443              	.L30:
 256:..\src/interruptions.c ****                 }
 257:..\src/interruptions.c ****                 break;
 444              		.loc 1 257 0
 445 01ce 00BF     		nop
 446              	.L8:
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 447              		.loc 1 154 0
 448 01d0 FFF7FEFF 		bl	UART_RS485_GetRxBufferSize
 449 01d4 0346     		mov	r3, r0
 450 01d6 002B     		cmp	r3, #0
 451 01d8 03D0     		beq	.L29
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 452              		.loc 1 154 0 is_stmt 0 discriminator 1
 453 01da BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 454 01dc 632B     		cmp	r3, #99
 455 01de 7FF617AF 		bls	.L28
 456              	.L29:
 258:..\src/interruptions.c ****         }
 259:..\src/interruptions.c ****     }
 260:..\src/interruptions.c **** }
 457              		.loc 1 260 0 is_stmt 1
 458 01e2 00BF     		nop
 459 01e4 0837     		adds	r7, r7, #8
 460              		.cfi_def_cfa_offset 8
 461 01e6 BD46     		mov	sp, r7
 462              		.cfi_def_cfa_register 13
 463              		@ sp needed
 464 01e8 80BD     		pop	{r7, pc}
 465              	.L32:
 466 01ea 00BF     		.align	2
 467              	.L31:
 468 01ec 00000000 		.word	state.9752
 469 01f0 04000000 		.word	rx_queue.9756
 470 01f4 00000000 		.word	c_mem
 471 01f8 00000000 		.word	master_mode
 472 01fc 07000000 		.word	data_packet_length.9754
 473 0200 08000000 		.word	data_packet_index.9753
 474 0204 0C000000 		.word	data_packet_buffer.9755
 475 0208 00000000 		.word	g_rx
 476              		.cfi_endproc
 477              	.LFE66:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 14


 478              		.size	interrupt_manager, .-interrupt_manager
 479              		.global	__aeabi_i2f
 480              		.global	__aeabi_fdiv
 481              		.section	.text.function_scheduler,"ax",%progbits
 482              		.align	2
 483              		.global	function_scheduler
 484              		.thumb
 485              		.thumb_func
 486              		.type	function_scheduler, %function
 487              	function_scheduler:
 488              	.LFB67:
 261:..\src/interruptions.c **** //==============================================================================
 262:..\src/interruptions.c **** //                                                            FUNCTION SCHEDULER
 263:..\src/interruptions.c **** //==============================================================================
 264:..\src/interruptions.c **** // Call all the function with the right frequency
 265:..\src/interruptions.c **** //==============================================================================
 266:..\src/interruptions.c **** // Base frequency 5000 Hz (110 us - max. 200 us cycle time)
 267:..\src/interruptions.c **** //==============================================================================
 268:..\src/interruptions.c **** 
 269:..\src/interruptions.c **** void function_scheduler(void) {
 489              		.loc 1 269 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493 0000 80B5     		push	{r7, lr}
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 7, -8
 496              		.cfi_offset 14, -4
 497 0002 00AF     		add	r7, sp, #0
 498              		.cfi_def_cfa_register 7
 270:..\src/interruptions.c ****       
 271:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x00);
 499              		.loc 1 271 0
 500 0004 0020     		movs	r0, #0
 501 0006 FFF7FEFF 		bl	MY_TIMER_REG_Write
 272:..\src/interruptions.c ****     timer_value0 = (uint32)MY_TIMER_ReadCounter();
 502              		.loc 1 272 0
 503 000a FFF7FEFF 		bl	MY_TIMER_ReadCounter
 504 000e 0346     		mov	r3, r0
 505 0010 1A46     		mov	r2, r3
 506 0012 694B     		ldr	r3, .L49
 507 0014 1A80     		strh	r2, [r3]	@ movhi
 273:..\src/interruptions.c ****     // Start ADC Conversion, SOC = 1
 274:..\src/interruptions.c **** 
 275:..\src/interruptions.c ****     ADC_SOC_Write(0x01); 
 508              		.loc 1 275 0
 509 0016 0120     		movs	r0, #1
 510 0018 FFF7FEFF 		bl	ADC_SOC_Write
 276:..\src/interruptions.c ****     flag_master = MASTER_MODE_FLAG_Read();
 511              		.loc 1 276 0
 512 001c FFF7FEFF 		bl	MASTER_MODE_FLAG_Read
 513 0020 0346     		mov	r3, r0
 514 0022 1A46     		mov	r2, r3
 515 0024 654B     		ldr	r3, .L49+4
 516 0026 1A60     		str	r2, [r3]
 277:..\src/interruptions.c ****     
 278:..\src/interruptions.c ****     // Check Interrupt 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 15


 279:..\src/interruptions.c **** 
 280:..\src/interruptions.c ****     if (interrupt_flag){
 517              		.loc 1 280 0
 518 0028 654B     		ldr	r3, .L49+8
 519 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 520 002c 002B     		cmp	r3, #0
 521 002e 04D0     		beq	.L34
 281:..\src/interruptions.c ****         interrupt_flag = FALSE;
 522              		.loc 1 281 0
 523 0030 634B     		ldr	r3, .L49+8
 524 0032 0022     		movs	r2, #0
 525 0034 1A70     		strb	r2, [r3]
 282:..\src/interruptions.c ****         interrupt_manager();
 526              		.loc 1 282 0
 527 0036 FFF7FEFF 		bl	interrupt_manager
 528              	.L34:
 283:..\src/interruptions.c ****     }
 284:..\src/interruptions.c ****    
 285:..\src/interruptions.c ****     // if master_mode parameter is set to 1
 286:..\src/interruptions.c ****     if (g_mem.MS.master_mode_active){  
 529              		.loc 1 286 0
 530 003a 624B     		ldr	r3, .L49+12
 531 003c 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 532 0040 002B     		cmp	r3, #0
 533 0042 0FD0     		beq	.L35
 287:..\src/interruptions.c ****         
 288:..\src/interruptions.c ****         // Check if voltage on pin MASTER MODE VOLTAGE, set by a physical switch, is HIGH or LOW. 
 289:..\src/interruptions.c ****         // This is a way to force exit from master_mode during execution, since USB commands from P
 290:..\src/interruptions.c ****         // are hampered by the communications between the two boards (slave and master)
 291:..\src/interruptions.c ****         
 292:..\src/interruptions.c ****         if (!flag_master)       // if voltage is LOW, exit master mode
 534              		.loc 1 292 0
 535 0044 5D4B     		ldr	r3, .L49+4
 536 0046 1B68     		ldr	r3, [r3]
 537 0048 002B     		cmp	r3, #0
 538 004a 03D1     		bne	.L36
 293:..\src/interruptions.c ****             master_mode = 0;
 539              		.loc 1 293 0
 540 004c 5E4B     		ldr	r3, .L49+16
 541 004e 0022     		movs	r2, #0
 542 0050 1A70     		strb	r2, [r3]
 543 0052 0AE0     		b	.L38
 544              	.L36:
 294:..\src/interruptions.c ****         
 295:..\src/interruptions.c ****         else if (flag_master)  // if voltage is HIGH, enter master mode
 545              		.loc 1 295 0
 546 0054 594B     		ldr	r3, .L49+4
 547 0056 1B68     		ldr	r3, [r3]
 548 0058 002B     		cmp	r3, #0
 549 005a 06D0     		beq	.L38
 296:..\src/interruptions.c ****             master_mode = 1;
 550              		.loc 1 296 0
 551 005c 5A4B     		ldr	r3, .L49+16
 552 005e 0122     		movs	r2, #1
 553 0060 1A70     		strb	r2, [r3]
 554 0062 02E0     		b	.L38
 555              	.L35:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 16


 297:..\src/interruptions.c ****     }
 298:..\src/interruptions.c ****             
 299:..\src/interruptions.c ****     else{
 300:..\src/interruptions.c ****         master_mode = 0;
 556              		.loc 1 300 0
 557 0064 584B     		ldr	r3, .L49+16
 558 0066 0022     		movs	r2, #0
 559 0068 1A70     		strb	r2, [r3]
 560              	.L38:
 301:..\src/interruptions.c ****     }
 302:..\src/interruptions.c ****                     
 303:..\src/interruptions.c ****     if (master_mode){
 561              		.loc 1 303 0
 562 006a 574B     		ldr	r3, .L49+16
 563 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 564 006e 002B     		cmp	r3, #0
 565 0070 3BD0     		beq	.L39
 304:..\src/interruptions.c ****         
 305:..\src/interruptions.c ****         LED_CONTROL_Write(RED);     // Orange
 566              		.loc 1 305 0
 567 0072 0120     		movs	r0, #1
 568 0074 FFF7FEFF 		bl	LED_CONTROL_Write
 306:..\src/interruptions.c ****         
 307:..\src/interruptions.c ****         //-------------------------------------------------------------- Air Chamber and Vibrotacti
 308:..\src/interruptions.c ****         if (g_mem.FB.vibrotactile_feedback_active && g_mem.FB.airchamber_feedback_active){         
 569              		.loc 1 308 0
 570 0078 524B     		ldr	r3, .L49+12
 571 007a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 572 007e 002B     		cmp	r3, #0
 573 0080 09D0     		beq	.L40
 574              		.loc 1 308 0 is_stmt 0 discriminator 1
 575 0082 504B     		ldr	r3, .L49+12
 576 0084 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 577 0088 002B     		cmp	r3, #0
 578 008a 04D0     		beq	.L40
 309:..\src/interruptions.c ****             air_chambers_control();
 579              		.loc 1 309 0 is_stmt 1
 580 008c FFF7FEFF 		bl	air_chambers_control
 310:..\src/interruptions.c ****             vibrotactile_control();
 581              		.loc 1 310 0
 582 0090 FFF7FEFF 		bl	vibrotactile_control
 583 0094 0EE0     		b	.L41
 584              	.L40:
 311:..\src/interruptions.c ****         }
 312:..\src/interruptions.c ****         
 313:..\src/interruptions.c ****         //-------------------------------------------------------------- Air Chamber control
 314:..\src/interruptions.c ****         else if (g_mem.FB.airchamber_feedback_active){
 585              		.loc 1 314 0
 586 0096 4B4B     		ldr	r3, .L49+12
 587 0098 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 588 009c 002B     		cmp	r3, #0
 589 009e 02D0     		beq	.L42
 315:..\src/interruptions.c ****             air_chambers_control();
 590              		.loc 1 315 0
 591 00a0 FFF7FEFF 		bl	air_chambers_control
 592 00a4 06E0     		b	.L41
 593              	.L42:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 17


 316:..\src/interruptions.c ****             
 317:..\src/interruptions.c ****         }
 318:..\src/interruptions.c ****     
 319:..\src/interruptions.c ****         //-------------------------------------------------------------- Vibrotactile control
 320:..\src/interruptions.c ****         else if (g_mem.FB.vibrotactile_feedback_active){
 594              		.loc 1 320 0
 595 00a6 474B     		ldr	r3, .L49+12
 596 00a8 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 597 00ac 002B     		cmp	r3, #0
 598 00ae 01D0     		beq	.L41
 321:..\src/interruptions.c ****             vibrotactile_control();
 599              		.loc 1 321 0
 600 00b0 FFF7FEFF 		bl	vibrotactile_control
 601              	.L41:
 322:..\src/interruptions.c ****         }
 323:..\src/interruptions.c ****         
 324:..\src/interruptions.c ****         if (interrupt_flag){
 602              		.loc 1 324 0
 603 00b4 424B     		ldr	r3, .L49+8
 604 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 605 00b8 002B     		cmp	r3, #0
 606 00ba 04D0     		beq	.L43
 325:..\src/interruptions.c ****             interrupt_flag = FALSE;
 607              		.loc 1 325 0
 608 00bc 404B     		ldr	r3, .L49+8
 609 00be 0022     		movs	r2, #0
 610 00c0 1A70     		strb	r2, [r3]
 326:..\src/interruptions.c ****             interrupt_manager();
 611              		.loc 1 326 0
 612 00c2 FFF7FEFF 		bl	interrupt_manager
 613              	.L43:
 327:..\src/interruptions.c ****         }
 328:..\src/interruptions.c ****             
 329:..\src/interruptions.c ****        compute_SH_reference(); // Compute reference for the SH starting from EMG values
 614              		.loc 1 329 0
 615 00c6 FFF7FEFF 		bl	compute_SH_reference
 330:..\src/interruptions.c ****             
 331:..\src/interruptions.c ****         drive_slave(c_mem.MS.slave_ID); // Send reference to the SH calling cmd_set_inputs
 616              		.loc 1 331 0
 617 00ca 404B     		ldr	r3, .L49+20
 618 00cc 93F84130 		ldrb	r3, [r3, #65]	@ zero_extendqisi2
 619 00d0 1846     		mov	r0, r3
 620 00d2 FFF7FEFF 		bl	drive_slave
 332:..\src/interruptions.c ****             
 333:..\src/interruptions.c ****         if (interrupt_flag){
 621              		.loc 1 333 0
 622 00d6 3A4B     		ldr	r3, .L49+8
 623 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 624 00da 002B     		cmp	r3, #0
 625 00dc 11D0     		beq	.L45
 334:..\src/interruptions.c ****             interrupt_flag = FALSE;
 626              		.loc 1 334 0
 627 00de 384B     		ldr	r3, .L49+8
 628 00e0 0022     		movs	r2, #0
 629 00e2 1A70     		strb	r2, [r3]
 335:..\src/interruptions.c ****             interrupt_manager();
 630              		.loc 1 335 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 18


 631 00e4 FFF7FEFF 		bl	interrupt_manager
 632 00e8 0BE0     		b	.L45
 633              	.L39:
 336:..\src/interruptions.c ****         }
 337:..\src/interruptions.c ****     }
 338:..\src/interruptions.c ****             
 339:..\src/interruptions.c ****            
 340:..\src/interruptions.c ****     else {
 341:..\src/interruptions.c ****         
 342:..\src/interruptions.c ****         LED_CONTROL_Write(GREEN);     // Red
 634              		.loc 1 342 0
 635 00ea 0220     		movs	r0, #2
 636 00ec FFF7FEFF 		bl	LED_CONTROL_Write
 343:..\src/interruptions.c ****             
 344:..\src/interruptions.c ****         // Check Interrupt 
 345:..\src/interruptions.c ****         if (interrupt_flag){
 637              		.loc 1 345 0
 638 00f0 334B     		ldr	r3, .L49+8
 639 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 640 00f4 002B     		cmp	r3, #0
 641 00f6 04D0     		beq	.L45
 346:..\src/interruptions.c ****             interrupt_flag = FALSE;
 642              		.loc 1 346 0
 643 00f8 314B     		ldr	r3, .L49+8
 644 00fa 0022     		movs	r2, #0
 645 00fc 1A70     		strb	r2, [r3]
 347:..\src/interruptions.c ****             interrupt_manager();
 646              		.loc 1 347 0
 647 00fe FFF7FEFF 		bl	interrupt_manager
 648              	.L45:
 348:..\src/interruptions.c ****         } 
 349:..\src/interruptions.c ****     }
 350:..\src/interruptions.c ****     
 351:..\src/interruptions.c ****     pump_control();  // Compute references and drive air pump
 649              		.loc 1 351 0
 650 0102 FFF7FEFF 		bl	pump_control
 352:..\src/interruptions.c ****     VT_control();  // Compute references and drive air pump
 651              		.loc 1 352 0
 652 0106 FFF7FEFF 		bl	VT_control
 353:..\src/interruptions.c **** 
 354:..\src/interruptions.c ****     if (interrupt_flag){
 653              		.loc 1 354 0
 654 010a 2D4B     		ldr	r3, .L49+8
 655 010c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 656 010e 002B     		cmp	r3, #0
 657 0110 04D0     		beq	.L46
 355:..\src/interruptions.c ****         interrupt_flag = FALSE;
 658              		.loc 1 355 0
 659 0112 2B4B     		ldr	r3, .L49+8
 660 0114 0022     		movs	r2, #0
 661 0116 1A70     		strb	r2, [r3]
 356:..\src/interruptions.c ****         interrupt_manager();
 662              		.loc 1 356 0
 663 0118 FFF7FEFF 		bl	interrupt_manager
 664              	.L46:
 357:..\src/interruptions.c ****     }
 358:..\src/interruptions.c ****                
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 19


 359:..\src/interruptions.c ****     //---------------------------------- Read conversion buffer - LOCK function
 360:..\src/interruptions.c **** 
 361:..\src/interruptions.c ****     analog_read_end();
 665              		.loc 1 361 0
 666 011c FFF7FEFF 		bl	analog_read_end
 362:..\src/interruptions.c **** 
 363:..\src/interruptions.c ****     if (interrupt_flag){
 667              		.loc 1 363 0
 668 0120 274B     		ldr	r3, .L49+8
 669 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 670 0124 002B     		cmp	r3, #0
 671 0126 04D0     		beq	.L47
 364:..\src/interruptions.c ****         interrupt_flag = FALSE;
 672              		.loc 1 364 0
 673 0128 254B     		ldr	r3, .L49+8
 674 012a 0022     		movs	r2, #0
 675 012c 1A70     		strb	r2, [r3]
 365:..\src/interruptions.c ****         interrupt_manager();
 676              		.loc 1 365 0
 677 012e FFF7FEFF 		bl	interrupt_manager
 678              	.L47:
 366:..\src/interruptions.c ****     }  
 367:..\src/interruptions.c ****    
 368:..\src/interruptions.c ****     //---------------------------------- Update States
 369:..\src/interruptions.c **** 
 370:..\src/interruptions.c ****     // Load k-1 state
 371:..\src/interruptions.c ****     memcpy( &g_adc_measOld, &g_adc_meas, sizeof(g_adc_meas) );
 679              		.loc 1 371 0
 680 0132 274B     		ldr	r3, .L49+24
 681 0134 274A     		ldr	r2, .L49+28
 682 0136 07CA     		ldmia	r2, {r0, r1, r2}
 683 0138 83E80700 		stmia	r3, {r0, r1, r2}
 372:..\src/interruptions.c ****     memcpy( &SH_refOld, &SH_ref, sizeof(SH_ref) );
 684              		.loc 1 372 0
 685 013c 264B     		ldr	r3, .L49+32
 686 013e 1B68     		ldr	r3, [r3]
 687 0140 264A     		ldr	r2, .L49+36
 688 0142 1360     		str	r3, [r2]
 373:..\src/interruptions.c ****     memcpy( &VT_refOld, &VT_ref, sizeof(VT_ref) );
 689              		.loc 1 373 0
 690 0144 264A     		ldr	r2, .L49+40
 691 0146 274B     		ldr	r3, .L49+44
 692 0148 1B88     		ldrh	r3, [r3]	@ unaligned
 693 014a 1380     		strh	r3, [r2]	@ unaligned
 374:..\src/interruptions.c ****     memcpy( &Pump_refOld, &Pump_ref, sizeof(Pump_ref) );
 694              		.loc 1 374 0
 695 014c 264B     		ldr	r3, .L49+48
 696 014e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 697 0150 264B     		ldr	r3, .L49+52
 698 0152 1A70     		strb	r2, [r3]
 375:..\src/interruptions.c ****     
 376:..\src/interruptions.c ****     // Load k+1 state        
 377:..\src/interruptions.c ****     memcpy( &SH_ref, &SH_refNew, sizeof(SH_ref) );   
 699              		.loc 1 377 0
 700 0154 264B     		ldr	r3, .L49+56
 701 0156 1B68     		ldr	r3, [r3]
 702 0158 1F4A     		ldr	r2, .L49+32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 20


 703 015a 1360     		str	r3, [r2]
 378:..\src/interruptions.c ****     memcpy( &VT_ref, &VT_refNew, sizeof(VT_ref) );
 704              		.loc 1 378 0
 705 015c 214A     		ldr	r2, .L49+44
 706 015e 254B     		ldr	r3, .L49+60
 707 0160 1B88     		ldrh	r3, [r3]	@ unaligned
 708 0162 1380     		strh	r3, [r2]	@ unaligned
 379:..\src/interruptions.c ****     memcpy( &Pump_ref, &Pump_refNew, sizeof(Pump_ref) );
 709              		.loc 1 379 0
 710 0164 244B     		ldr	r3, .L49+64
 711 0166 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 712 0168 1F4B     		ldr	r3, .L49+48
 713 016a 1A70     		strb	r2, [r3]
 380:..\src/interruptions.c ****     
 381:..\src/interruptions.c ****     if (interrupt_flag){
 714              		.loc 1 381 0
 715 016c 144B     		ldr	r3, .L49+8
 716 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 717 0170 002B     		cmp	r3, #0
 718 0172 04D0     		beq	.L48
 382:..\src/interruptions.c ****         interrupt_flag = FALSE;
 719              		.loc 1 382 0
 720 0174 124B     		ldr	r3, .L49+8
 721 0176 0022     		movs	r2, #0
 722 0178 1A70     		strb	r2, [r3]
 383:..\src/interruptions.c ****         interrupt_manager();
 723              		.loc 1 383 0
 724 017a FFF7FEFF 		bl	interrupt_manager
 725              	.L48:
 384:..\src/interruptions.c ****     }
 385:..\src/interruptions.c **** 
 386:..\src/interruptions.c ****     timer_value = (uint16)MY_TIMER_ReadCounter();
 726              		.loc 1 386 0
 727 017e FFF7FEFF 		bl	MY_TIMER_ReadCounter
 728 0182 0346     		mov	r3, r0
 729 0184 1A46     		mov	r2, r3
 730 0186 1D4B     		ldr	r3, .L49+68
 731 0188 1A80     		strh	r2, [r3]	@ movhi
 387:..\src/interruptions.c ****     cycle_time = ((float)(timer_value0 - timer_value)/1000000.0);
 732              		.loc 1 387 0
 733 018a 0B4B     		ldr	r3, .L49
 734 018c 1B88     		ldrh	r3, [r3]
 735 018e 1A46     		mov	r2, r3
 736 0190 1A4B     		ldr	r3, .L49+68
 737 0192 1B88     		ldrh	r3, [r3]
 738 0194 D31A     		subs	r3, r2, r3
 739 0196 1846     		mov	r0, r3
 740 0198 FFF7FEFF 		bl	__aeabi_i2f
 741 019c 0346     		mov	r3, r0
 742 019e 1849     		ldr	r1, .L49+72
 743 01a0 1846     		mov	r0, r3
 744 01a2 FFF7FEFF 		bl	__aeabi_fdiv
 745 01a6 0346     		mov	r3, r0
 746 01a8 1A46     		mov	r2, r3
 747 01aa 164B     		ldr	r3, .L49+76
 748 01ac 1A60     		str	r2, [r3]	@ float
 388:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x01);   // reset timer
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 21


 749              		.loc 1 388 0
 750 01ae 0120     		movs	r0, #1
 751 01b0 FFF7FEFF 		bl	MY_TIMER_REG_Write
 389:..\src/interruptions.c **** 
 390:..\src/interruptions.c **** }
 752              		.loc 1 390 0
 753 01b4 00BF     		nop
 754 01b6 80BD     		pop	{r7, pc}
 755              	.L50:
 756              		.align	2
 757              	.L49:
 758 01b8 00000000 		.word	timer_value0
 759 01bc 00000000 		.word	flag_master
 760 01c0 00000000 		.word	interrupt_flag
 761 01c4 00000000 		.word	g_mem
 762 01c8 00000000 		.word	master_mode
 763 01cc 00000000 		.word	c_mem
 764 01d0 00000000 		.word	g_adc_measOld
 765 01d4 00000000 		.word	g_adc_meas
 766 01d8 00000000 		.word	SH_ref
 767 01dc 00000000 		.word	SH_refOld
 768 01e0 00000000 		.word	VT_refOld
 769 01e4 00000000 		.word	VT_ref
 770 01e8 00000000 		.word	Pump_ref
 771 01ec 00000000 		.word	Pump_refOld
 772 01f0 00000000 		.word	SH_refNew
 773 01f4 00000000 		.word	VT_refNew
 774 01f8 00000000 		.word	Pump_refNew
 775 01fc 00000000 		.word	timer_value
 776 0200 00247449 		.word	1232348160
 777 0204 00000000 		.word	cycle_time
 778              		.cfi_endproc
 779              	.LFE67:
 780              		.size	function_scheduler, .-function_scheduler
 781              		.section	.text.compute_SH_reference,"ax",%progbits
 782              		.align	2
 783              		.global	compute_SH_reference
 784              		.thumb
 785              		.thumb_func
 786              		.type	compute_SH_reference, %function
 787              	compute_SH_reference:
 788              	.LFB68:
 391:..\src/interruptions.c **** 
 392:..\src/interruptions.c **** //==============================================================================
 393:..\src/interruptions.c **** //                                                       COMPUTE MOTOR REFERENCE
 394:..\src/interruptions.c **** //==============================================================================
 395:..\src/interruptions.c **** 
 396:..\src/interruptions.c **** void compute_SH_reference() {
 789              		.loc 1 396 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 16
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794 0000 80B4     		push	{r7}
 795              		.cfi_def_cfa_offset 4
 796              		.cfi_offset 7, -4
 797 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 22


 798              		.cfi_def_cfa_offset 24
 799 0004 00AF     		add	r7, sp, #0
 800              		.cfi_def_cfa_register 7
 397:..\src/interruptions.c ****     
 398:..\src/interruptions.c ****     int32 CYDATA err_emg_1, err_emg_2;
 399:..\src/interruptions.c ****     struct st_slave* SH = &c_mem.SH_config;      // SoftHand default motor
 801              		.loc 1 399 0
 802 0006 A24B     		ldr	r3, .L95
 803 0008 FB60     		str	r3, [r7, #12]
 400:..\src/interruptions.c ****     
 401:..\src/interruptions.c ****     static uint8 current_emg = 0;   // 0 NONE // 1 EMG 1 // 2 EMG 2                                
 402:..\src/interruptions.c ****                                                                                                    
 403:..\src/interruptions.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 804              		.loc 1 403 0
 805 000a A24B     		ldr	r3, .L95+4
 806 000c 1B68     		ldr	r3, [r3]
 807 000e A24A     		ldr	r2, .L95+8
 808 0010 128E     		ldrh	r2, [r2, #48]
 809 0012 9B1A     		subs	r3, r3, r2
 810 0014 BB60     		str	r3, [r7, #8]
 404:..\src/interruptions.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 811              		.loc 1 404 0
 812 0016 9F4B     		ldr	r3, .L95+4
 813 0018 5B68     		ldr	r3, [r3, #4]
 814 001a 9F4A     		ldr	r2, .L95+8
 815 001c 528E     		ldrh	r2, [r2, #50]
 816 001e 9B1A     		subs	r3, r3, r2
 817 0020 7B60     		str	r3, [r7, #4]
 405:..\src/interruptions.c ****     
 406:..\src/interruptions.c ****      // =========================== POSITION INPUT ==============================            
 407:..\src/interruptions.c ****     switch(SH->input_mode) {
 818              		.loc 1 407 0
 819 0022 FB68     		ldr	r3, [r7, #12]
 820 0024 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 821 0026 023B     		subs	r3, r3, #2
 822 0028 052B     		cmp	r3, #5
 823 002a 00F24381 		bhi	.L88
 824 002e 01A2     		adr	r2, .L54
 825 0030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 826              		.p2align 2
 827              	.L54:
 828 0034 4D000000 		.word	.L53+1
 829 0038 A9000000 		.word	.L55+1
 830 003c 0D010000 		.word	.L56+1
 831 0040 C3010000 		.word	.L57+1
 832 0044 B5020000 		.word	.L88+1
 833 0048 77000000 		.word	.L58+1
 834              		.p2align 1
 835              	.L53:
 408:..\src/interruptions.c ****             
 409:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL:
 410:..\src/interruptions.c ****             if (err_emg_1 > 0)
 836              		.loc 1 410 0
 837 004c BB68     		ldr	r3, [r7, #8]
 838 004e 002B     		cmp	r3, #0
 839 0050 0DDD     		ble	.L59
 411:..\src/interruptions.c ****                 SH_ref = (err_emg_1 * g_mem.SH_config.pos_lim_sup) / (1024 - c_mem.emg.emg_threshol
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 23


 840              		.loc 1 411 0
 841 0052 924B     		ldr	r3, .L95+12
 842 0054 5B6A     		ldr	r3, [r3, #36]
 843 0056 BA68     		ldr	r2, [r7, #8]
 844 0058 02FB03F2 		mul	r2, r2, r3
 845 005c 8E4B     		ldr	r3, .L95+8
 846 005e 1B8E     		ldrh	r3, [r3, #48]
 847 0060 C3F58063 		rsb	r3, r3, #1024
 848 0064 92FBF3F3 		sdiv	r3, r2, r3
 849 0068 8D4A     		ldr	r2, .L95+16
 850 006a 1360     		str	r3, [r2]
 412:..\src/interruptions.c ****             else
 413:..\src/interruptions.c ****                 SH_ref = 0;
 414:..\src/interruptions.c ****             break;
 851              		.loc 1 414 0
 852 006c 25E1     		b	.L61
 853              	.L59:
 413:..\src/interruptions.c ****             break;
 854              		.loc 1 413 0
 855 006e 8C4B     		ldr	r3, .L95+16
 856 0070 0022     		movs	r2, #0
 857 0072 1A60     		str	r2, [r3]
 858              		.loc 1 414 0
 859 0074 21E1     		b	.L61
 860              	.L58:
 415:..\src/interruptions.c ****         
 416:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 417:..\src/interruptions.c ****             if (err_emg_1 > 0)
 861              		.loc 1 417 0
 862 0076 BB68     		ldr	r3, [r7, #8]
 863 0078 002B     		cmp	r3, #0
 864 007a 10DD     		ble	.L62
 418:..\src/interruptions.c ****                 SH_ref = g_mem.SH_config.pos_lim_sup - (err_emg_1 * g_mem.SH_config.pos_lim_sup) / 
 865              		.loc 1 418 0
 866 007c 874B     		ldr	r3, .L95+12
 867 007e 5A6A     		ldr	r2, [r3, #36]
 868 0080 864B     		ldr	r3, .L95+12
 869 0082 5B6A     		ldr	r3, [r3, #36]
 870 0084 B968     		ldr	r1, [r7, #8]
 871 0086 01FB03F1 		mul	r1, r1, r3
 872 008a 834B     		ldr	r3, .L95+8
 873 008c 1B8E     		ldrh	r3, [r3, #48]
 874 008e C3F58063 		rsb	r3, r3, #1024
 875 0092 91FBF3F3 		sdiv	r3, r1, r3
 876 0096 D31A     		subs	r3, r2, r3
 877 0098 814A     		ldr	r2, .L95+16
 878 009a 1360     		str	r3, [r2]
 419:..\src/interruptions.c ****             else
 420:..\src/interruptions.c ****                 SH_ref = g_mem.SH_config.pos_lim_sup;
 421:..\src/interruptions.c ****             break;
 879              		.loc 1 421 0
 880 009c 0DE1     		b	.L61
 881              	.L62:
 420:..\src/interruptions.c ****             break;
 882              		.loc 1 420 0
 883 009e 7F4B     		ldr	r3, .L95+12
 884 00a0 5B6A     		ldr	r3, [r3, #36]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 24


 885 00a2 7F4A     		ldr	r2, .L95+16
 886 00a4 1360     		str	r3, [r2]
 887              		.loc 1 421 0
 888 00a6 08E1     		b	.L61
 889              	.L55:
 422:..\src/interruptions.c **** 
 423:..\src/interruptions.c ****         case INPUT_MODE_EMG_INTEGRAL:
 424:..\src/interruptions.c ****             SH_ref = SH_refOld;
 890              		.loc 1 424 0
 891 00a8 7E4B     		ldr	r3, .L95+20
 892 00aa 1B68     		ldr	r3, [r3]
 893 00ac 7C4A     		ldr	r2, .L95+16
 894 00ae 1360     		str	r3, [r2]
 425:..\src/interruptions.c ****             if (err_emg_1 > 0) {
 895              		.loc 1 425 0
 896 00b0 BB68     		ldr	r3, [r7, #8]
 897 00b2 002B     		cmp	r3, #0
 898 00b4 12DD     		ble	.L64
 426:..\src/interruptions.c ****                 SH_ref = SH_refOld + (err_emg_1 * (int)g_mem.emg.emg_speed[0] * 2) / (1024 - c_mem.
 899              		.loc 1 426 0
 900 00b6 794B     		ldr	r3, .L95+12
 901 00b8 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 902 00bc 1A46     		mov	r2, r3
 903 00be BB68     		ldr	r3, [r7, #8]
 904 00c0 03FB02F3 		mul	r3, r3, r2
 905 00c4 5A00     		lsls	r2, r3, #1
 906 00c6 744B     		ldr	r3, .L95+8
 907 00c8 1B8E     		ldrh	r3, [r3, #48]
 908 00ca C3F58063 		rsb	r3, r3, #1024
 909 00ce 92FBF3F2 		sdiv	r2, r2, r3
 910 00d2 744B     		ldr	r3, .L95+20
 911 00d4 1B68     		ldr	r3, [r3]
 912 00d6 1344     		add	r3, r3, r2
 913 00d8 714A     		ldr	r2, .L95+16
 914 00da 1360     		str	r3, [r2]
 915              	.L64:
 427:..\src/interruptions.c ****             }
 428:..\src/interruptions.c ****             if (err_emg_2 > 0) {
 916              		.loc 1 428 0
 917 00dc 7B68     		ldr	r3, [r7, #4]
 918 00de 002B     		cmp	r3, #0
 919 00e0 40F3EA80 		ble	.L89
 429:..\src/interruptions.c ****                 SH_ref = SH_refOld - (err_emg_2 * (int)g_mem.emg.emg_speed[1] * 2) / (1024 - c_mem.
 920              		.loc 1 429 0
 921 00e4 6F4B     		ldr	r3, .L95+20
 922 00e6 1A68     		ldr	r2, [r3]
 923 00e8 6C4B     		ldr	r3, .L95+12
 924 00ea 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 925 00ee 1946     		mov	r1, r3
 926 00f0 7B68     		ldr	r3, [r7, #4]
 927 00f2 03FB01F3 		mul	r3, r3, r1
 928 00f6 5900     		lsls	r1, r3, #1
 929 00f8 674B     		ldr	r3, .L95+8
 930 00fa 5B8E     		ldrh	r3, [r3, #50]
 931 00fc C3F58063 		rsb	r3, r3, #1024
 932 0100 91FBF3F3 		sdiv	r3, r1, r3
 933 0104 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 25


 934 0106 664A     		ldr	r2, .L95+16
 935 0108 1360     		str	r3, [r2]
 430:..\src/interruptions.c ****             }
 431:..\src/interruptions.c ****             break;
 936              		.loc 1 431 0
 937 010a D5E0     		b	.L89
 938              	.L56:
 432:..\src/interruptions.c **** 
 433:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS:
 434:..\src/interruptions.c ****             SH_ref= SH_refOld;
 939              		.loc 1 434 0
 940 010c 654B     		ldr	r3, .L95+20
 941 010e 1B68     		ldr	r3, [r3]
 942 0110 634A     		ldr	r2, .L95+16
 943 0112 1360     		str	r3, [r2]
 435:..\src/interruptions.c ****             
 436:..\src/interruptions.c ****                 switch (current_emg) {
 944              		.loc 1 436 0
 945 0114 644B     		ldr	r3, .L95+24
 946 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 947 0118 012B     		cmp	r3, #1
 948 011a 1AD0     		beq	.L67
 949 011c 022B     		cmp	r3, #2
 950 011e 33D0     		beq	.L68
 951 0120 002B     		cmp	r3, #0
 952 0122 00D0     		beq	.L69
 437:..\src/interruptions.c ****                     case 0:
 438:..\src/interruptions.c ****                         // Look for the first EMG passing the threshold
 439:..\src/interruptions.c ****                         if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 440:..\src/interruptions.c ****                             current_emg= 1;
 441:..\src/interruptions.c ****                             break;
 442:..\src/interruptions.c ****                         }
 443:..\src/interruptions.c ****                         if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 444:..\src/interruptions.c ****                             current_emg = 2;
 445:..\src/interruptions.c ****                             break;
 446:..\src/interruptions.c ****                         }
 447:..\src/interruptions.c ****                         break;
 448:..\src/interruptions.c **** 
 449:..\src/interruptions.c ****                     case 1:
 450:..\src/interruptions.c ****                         // EMG 1 is first
 451:..\src/interruptions.c ****                         if (err_emg_1 < 0) {
 452:..\src/interruptions.c ****                             current_emg = 0;
 453:..\src/interruptions.c ****                             break;
 454:..\src/interruptions.c ****                         }
 455:..\src/interruptions.c ****                        SH_ref= SH_refOld + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / (1024 - c_me
 456:..\src/interruptions.c ****                         break;
 457:..\src/interruptions.c **** 
 458:..\src/interruptions.c ****                     case 2:
 459:..\src/interruptions.c ****                         // EMG 2 is first
 460:..\src/interruptions.c ****                         if (err_emg_2 < 0) {
 461:..\src/interruptions.c ****                             current_emg = 0;
 462:..\src/interruptions.c ****                             break;
 463:..\src/interruptions.c ****                         }
 464:..\src/interruptions.c ****                         SH_ref = SH_refOld - (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / (1024 - c_
 465:..\src/interruptions.c ****                         break;
 466:..\src/interruptions.c **** 
 467:..\src/interruptions.c ****                     default:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 26


 468:..\src/interruptions.c ****                         break;
 953              		.loc 1 468 0
 954 0124 4CE0     		b	.L71
 955              	.L69:
 439:..\src/interruptions.c ****                             current_emg= 1;
 956              		.loc 1 439 0
 957 0126 BB68     		ldr	r3, [r7, #8]
 958 0128 002B     		cmp	r3, #0
 959 012a 07DD     		ble	.L70
 439:..\src/interruptions.c ****                             current_emg= 1;
 960              		.loc 1 439 0 is_stmt 0 discriminator 1
 961 012c BA68     		ldr	r2, [r7, #8]
 962 012e 7B68     		ldr	r3, [r7, #4]
 963 0130 9A42     		cmp	r2, r3
 964 0132 03DD     		ble	.L70
 440:..\src/interruptions.c ****                             break;
 965              		.loc 1 440 0 is_stmt 1
 966 0134 5C4B     		ldr	r3, .L95+24
 967 0136 0122     		movs	r2, #1
 968 0138 1A70     		strb	r2, [r3]
 441:..\src/interruptions.c ****                         }
 969              		.loc 1 441 0
 970 013a 41E0     		b	.L71
 971              	.L70:
 443:..\src/interruptions.c ****                             current_emg = 2;
 972              		.loc 1 443 0
 973 013c 7B68     		ldr	r3, [r7, #4]
 974 013e 002B     		cmp	r3, #0
 975 0140 3DDD     		ble	.L90
 443:..\src/interruptions.c ****                             current_emg = 2;
 976              		.loc 1 443 0 is_stmt 0 discriminator 1
 977 0142 7A68     		ldr	r2, [r7, #4]
 978 0144 BB68     		ldr	r3, [r7, #8]
 979 0146 9A42     		cmp	r2, r3
 980 0148 39DD     		ble	.L90
 444:..\src/interruptions.c ****                             break;
 981              		.loc 1 444 0 is_stmt 1
 982 014a 574B     		ldr	r3, .L95+24
 983 014c 0222     		movs	r2, #2
 984 014e 1A70     		strb	r2, [r3]
 445:..\src/interruptions.c ****                         }
 985              		.loc 1 445 0
 986 0150 36E0     		b	.L71
 987              	.L67:
 451:..\src/interruptions.c ****                             current_emg = 0;
 988              		.loc 1 451 0
 989 0152 BB68     		ldr	r3, [r7, #8]
 990 0154 002B     		cmp	r3, #0
 991 0156 03DA     		bge	.L73
 452:..\src/interruptions.c ****                             break;
 992              		.loc 1 452 0
 993 0158 534B     		ldr	r3, .L95+24
 994 015a 0022     		movs	r2, #0
 995 015c 1A70     		strb	r2, [r3]
 453:..\src/interruptions.c ****                         }
 996              		.loc 1 453 0
 997 015e 2FE0     		b	.L71
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 27


 998              	.L73:
 455:..\src/interruptions.c ****                         break;
 999              		.loc 1 455 0
 1000 0160 4E4B     		ldr	r3, .L95+12
 1001 0162 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1002 0166 1A46     		mov	r2, r3
 1003 0168 BB68     		ldr	r3, [r7, #8]
 1004 016a 03FB02F3 		mul	r3, r3, r2
 1005 016e 9A00     		lsls	r2, r3, #2
 1006 0170 494B     		ldr	r3, .L95+8
 1007 0172 1B8E     		ldrh	r3, [r3, #48]
 1008 0174 C3F58063 		rsb	r3, r3, #1024
 1009 0178 92FBF3F2 		sdiv	r2, r2, r3
 1010 017c 494B     		ldr	r3, .L95+20
 1011 017e 1B68     		ldr	r3, [r3]
 1012 0180 1344     		add	r3, r3, r2
 1013 0182 474A     		ldr	r2, .L95+16
 1014 0184 1360     		str	r3, [r2]
 456:..\src/interruptions.c **** 
 1015              		.loc 1 456 0
 1016 0186 1BE0     		b	.L71
 1017              	.L68:
 460:..\src/interruptions.c ****                             current_emg = 0;
 1018              		.loc 1 460 0
 1019 0188 7B68     		ldr	r3, [r7, #4]
 1020 018a 002B     		cmp	r3, #0
 1021 018c 03DA     		bge	.L74
 461:..\src/interruptions.c ****                             break;
 1022              		.loc 1 461 0
 1023 018e 464B     		ldr	r3, .L95+24
 1024 0190 0022     		movs	r2, #0
 1025 0192 1A70     		strb	r2, [r3]
 462:..\src/interruptions.c ****                         }
 1026              		.loc 1 462 0
 1027 0194 14E0     		b	.L71
 1028              	.L74:
 464:..\src/interruptions.c ****                         break;
 1029              		.loc 1 464 0
 1030 0196 434B     		ldr	r3, .L95+20
 1031 0198 1A68     		ldr	r2, [r3]
 1032 019a 404B     		ldr	r3, .L95+12
 1033 019c 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 1034 01a0 1946     		mov	r1, r3
 1035 01a2 7B68     		ldr	r3, [r7, #4]
 1036 01a4 03FB01F3 		mul	r3, r3, r1
 1037 01a8 9900     		lsls	r1, r3, #2
 1038 01aa 3B4B     		ldr	r3, .L95+8
 1039 01ac 5B8E     		ldrh	r3, [r3, #50]
 1040 01ae C3F58063 		rsb	r3, r3, #1024
 1041 01b2 91FBF3F3 		sdiv	r3, r1, r3
 1042 01b6 D31A     		subs	r3, r2, r3
 1043 01b8 394A     		ldr	r2, .L95+16
 1044 01ba 1360     		str	r3, [r2]
 465:..\src/interruptions.c **** 
 1045              		.loc 1 465 0
 1046 01bc 00E0     		b	.L71
 1047              	.L90:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 28


 447:..\src/interruptions.c **** 
 1048              		.loc 1 447 0
 1049 01be 00BF     		nop
 1050              	.L71:
 469:..\src/interruptions.c ****                 }
 470:..\src/interruptions.c ****             
 471:..\src/interruptions.c ****             break;
 1051              		.loc 1 471 0 discriminator 1
 1052 01c0 7BE0     		b	.L61
 1053              	.L57:
 472:..\src/interruptions.c **** 
 473:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS_ADV:
 474:..\src/interruptions.c ****             SH_ref = SH_refOld;
 1054              		.loc 1 474 0
 1055 01c2 384B     		ldr	r3, .L95+20
 1056 01c4 1B68     		ldr	r3, [r3]
 1057 01c6 364A     		ldr	r2, .L95+16
 1058 01c8 1360     		str	r3, [r2]
 475:..\src/interruptions.c ****             switch (current_emg) {
 1059              		.loc 1 475 0
 1060 01ca 374B     		ldr	r3, .L95+24
 1061 01cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1062 01ce 012B     		cmp	r3, #1
 1063 01d0 1AD0     		beq	.L76
 1064 01d2 022B     		cmp	r3, #2
 1065 01d4 39D0     		beq	.L77
 1066 01d6 002B     		cmp	r3, #0
 1067 01d8 00D0     		beq	.L78
 476:..\src/interruptions.c ****                 // Look for the first EMG passing the threshold
 477:..\src/interruptions.c ****                 case 0:
 478:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 479:..\src/interruptions.c ****                         current_emg = 1;
 480:..\src/interruptions.c ****                         break;
 481:..\src/interruptions.c ****                     }
 482:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 483:..\src/interruptions.c ****                         current_emg = 2;
 484:..\src/interruptions.c ****                         break;
 485:..\src/interruptions.c ****                     }
 486:..\src/interruptions.c ****                     break;
 487:..\src/interruptions.c **** 
 488:..\src/interruptions.c ****                 // EMG 1 is first
 489:..\src/interruptions.c ****                 case 1:
 490:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 491:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 492:..\src/interruptions.c ****                         current_emg = 0;
 493:..\src/interruptions.c ****                         break;
 494:..\src/interruptions.c ****                     }
 495:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 496:..\src/interruptions.c ****                     if (err_emg_1 > 0) 
 497:..\src/interruptions.c ****                         SH_ref = SH_refOld + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / (1024 - c_
 498:..\src/interruptions.c ****                     break;
 499:..\src/interruptions.c **** 
 500:..\src/interruptions.c ****                 // EMG 2 is first
 501:..\src/interruptions.c ****                 case 2:
 502:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 503:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 504:..\src/interruptions.c ****                         current_emg = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 29


 505:..\src/interruptions.c ****                         break;
 506:..\src/interruptions.c ****                     }
 507:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 508:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
 509:..\src/interruptions.c ****                         SH_ref = SH_refOld - (err_emg_2 * c_mem.emg.emg_speed[1] << 2) / (1024 - c_
 510:..\src/interruptions.c ****                     }
 511:..\src/interruptions.c ****                     break;
 512:..\src/interruptions.c **** 
 513:..\src/interruptions.c ****                 default:
 514:..\src/interruptions.c ****                     break;
 1068              		.loc 1 514 0
 1069 01da 6AE0     		b	.L80
 1070              	.L78:
 478:..\src/interruptions.c ****                         current_emg = 1;
 1071              		.loc 1 478 0
 1072 01dc BB68     		ldr	r3, [r7, #8]
 1073 01de 002B     		cmp	r3, #0
 1074 01e0 07DD     		ble	.L79
 478:..\src/interruptions.c ****                         current_emg = 1;
 1075              		.loc 1 478 0 is_stmt 0 discriminator 1
 1076 01e2 BA68     		ldr	r2, [r7, #8]
 1077 01e4 7B68     		ldr	r3, [r7, #4]
 1078 01e6 9A42     		cmp	r2, r3
 1079 01e8 03DD     		ble	.L79
 479:..\src/interruptions.c ****                         break;
 1080              		.loc 1 479 0 is_stmt 1
 1081 01ea 2F4B     		ldr	r3, .L95+24
 1082 01ec 0122     		movs	r2, #1
 1083 01ee 1A70     		strb	r2, [r3]
 480:..\src/interruptions.c ****                     }
 1084              		.loc 1 480 0
 1085 01f0 5FE0     		b	.L80
 1086              	.L79:
 482:..\src/interruptions.c ****                         current_emg = 2;
 1087              		.loc 1 482 0
 1088 01f2 7B68     		ldr	r3, [r7, #4]
 1089 01f4 002B     		cmp	r3, #0
 1090 01f6 49DD     		ble	.L91
 482:..\src/interruptions.c ****                         current_emg = 2;
 1091              		.loc 1 482 0 is_stmt 0 discriminator 1
 1092 01f8 7A68     		ldr	r2, [r7, #4]
 1093 01fa BB68     		ldr	r3, [r7, #8]
 1094 01fc 9A42     		cmp	r2, r3
 1095 01fe 45DD     		ble	.L91
 483:..\src/interruptions.c ****                         break;
 1096              		.loc 1 483 0 is_stmt 1
 1097 0200 294B     		ldr	r3, .L95+24
 1098 0202 0222     		movs	r2, #2
 1099 0204 1A70     		strb	r2, [r3]
 484:..\src/interruptions.c ****                     }
 1100              		.loc 1 484 0
 1101 0206 54E0     		b	.L80
 1102              	.L76:
 491:..\src/interruptions.c ****                         current_emg = 0;
 1103              		.loc 1 491 0
 1104 0208 BB68     		ldr	r3, [r7, #8]
 1105 020a 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 30


 1106 020c 06DA     		bge	.L82
 491:..\src/interruptions.c ****                         current_emg = 0;
 1107              		.loc 1 491 0 is_stmt 0 discriminator 1
 1108 020e 7B68     		ldr	r3, [r7, #4]
 1109 0210 002B     		cmp	r3, #0
 1110 0212 03DA     		bge	.L82
 492:..\src/interruptions.c ****                         break;
 1111              		.loc 1 492 0 is_stmt 1
 1112 0214 244B     		ldr	r3, .L95+24
 1113 0216 0022     		movs	r2, #0
 1114 0218 1A70     		strb	r2, [r3]
 493:..\src/interruptions.c ****                     }
 1115              		.loc 1 493 0
 1116 021a 4AE0     		b	.L80
 1117              	.L82:
 496:..\src/interruptions.c ****                         SH_ref = SH_refOld + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / (1024 - c_
 1118              		.loc 1 496 0
 1119 021c BB68     		ldr	r3, [r7, #8]
 1120 021e 002B     		cmp	r3, #0
 1121 0220 44DD     		ble	.L92
 497:..\src/interruptions.c ****                     break;
 1122              		.loc 1 497 0
 1123 0222 1E4B     		ldr	r3, .L95+12
 1124 0224 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1125 0228 1A46     		mov	r2, r3
 1126 022a BB68     		ldr	r3, [r7, #8]
 1127 022c 03FB02F3 		mul	r3, r3, r2
 1128 0230 9A00     		lsls	r2, r3, #2
 1129 0232 194B     		ldr	r3, .L95+8
 1130 0234 1B8E     		ldrh	r3, [r3, #48]
 1131 0236 C3F58063 		rsb	r3, r3, #1024
 1132 023a 92FBF3F2 		sdiv	r2, r2, r3
 1133 023e 194B     		ldr	r3, .L95+20
 1134 0240 1B68     		ldr	r3, [r3]
 1135 0242 1344     		add	r3, r3, r2
 1136 0244 164A     		ldr	r2, .L95+16
 1137 0246 1360     		str	r3, [r2]
 498:..\src/interruptions.c **** 
 1138              		.loc 1 498 0
 1139 0248 30E0     		b	.L92
 1140              	.L77:
 503:..\src/interruptions.c ****                         current_emg = 0;
 1141              		.loc 1 503 0
 1142 024a BB68     		ldr	r3, [r7, #8]
 1143 024c 002B     		cmp	r3, #0
 1144 024e 06DA     		bge	.L84
 503:..\src/interruptions.c ****                         current_emg = 0;
 1145              		.loc 1 503 0 is_stmt 0 discriminator 1
 1146 0250 7B68     		ldr	r3, [r7, #4]
 1147 0252 002B     		cmp	r3, #0
 1148 0254 03DA     		bge	.L84
 504:..\src/interruptions.c ****                         break;
 1149              		.loc 1 504 0 is_stmt 1
 1150 0256 144B     		ldr	r3, .L95+24
 1151 0258 0022     		movs	r2, #0
 1152 025a 1A70     		strb	r2, [r3]
 505:..\src/interruptions.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 31


 1153              		.loc 1 505 0
 1154 025c 29E0     		b	.L80
 1155              	.L84:
 508:..\src/interruptions.c ****                         SH_ref = SH_refOld - (err_emg_2 * c_mem.emg.emg_speed[1] << 2) / (1024 - c_
 1156              		.loc 1 508 0
 1157 025e 7B68     		ldr	r3, [r7, #4]
 1158 0260 002B     		cmp	r3, #0
 1159 0262 25DD     		ble	.L93
 509:..\src/interruptions.c ****                     }
 1160              		.loc 1 509 0
 1161 0264 0F4B     		ldr	r3, .L95+20
 1162 0266 1A68     		ldr	r2, [r3]
 1163 0268 0B4B     		ldr	r3, .L95+8
 1164 026a 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 1165 026e 1946     		mov	r1, r3
 1166 0270 7B68     		ldr	r3, [r7, #4]
 1167 0272 03FB01F3 		mul	r3, r3, r1
 1168 0276 9900     		lsls	r1, r3, #2
 1169 0278 074B     		ldr	r3, .L95+8
 1170 027a 5B8E     		ldrh	r3, [r3, #50]
 1171 027c C3F58063 		rsb	r3, r3, #1024
 1172 0280 91FBF3F3 		sdiv	r3, r1, r3
 1173 0284 D31A     		subs	r3, r2, r3
 1174 0286 064A     		ldr	r2, .L95+16
 1175 0288 1360     		str	r3, [r2]
 511:..\src/interruptions.c **** 
 1176              		.loc 1 511 0
 1177 028a 11E0     		b	.L93
 1178              	.L91:
 486:..\src/interruptions.c **** 
 1179              		.loc 1 486 0
 1180 028c 00BF     		nop
 1181 028e 14E0     		b	.L61
 1182              	.L96:
 1183              		.align	2
 1184              	.L95:
 1185 0290 20000000 		.word	c_mem+32
 1186 0294 00000000 		.word	g_adc_meas
 1187 0298 00000000 		.word	c_mem
 1188 029c 00000000 		.word	g_mem
 1189 02a0 00000000 		.word	SH_ref
 1190 02a4 00000000 		.word	SH_refOld
 1191 02a8 8C000000 		.word	current_emg.9777
 1192              	.L92:
 498:..\src/interruptions.c **** 
 1193              		.loc 1 498 0
 1194 02ac 00BF     		nop
 1195 02ae 04E0     		b	.L61
 1196              	.L93:
 511:..\src/interruptions.c **** 
 1197              		.loc 1 511 0
 1198 02b0 00BF     		nop
 1199              	.L80:
 515:..\src/interruptions.c ****             }
 516:..\src/interruptions.c ****             break;
 1200              		.loc 1 516 0 discriminator 3
 1201 02b2 02E0     		b	.L61
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 32


 1202              	.L88:
 517:..\src/interruptions.c **** 
 518:..\src/interruptions.c ****         default:
 519:..\src/interruptions.c ****             break;
 1203              		.loc 1 519 0
 1204 02b4 00BF     		nop
 1205 02b6 00E0     		b	.L61
 1206              	.L89:
 431:..\src/interruptions.c **** 
 1207              		.loc 1 431 0
 1208 02b8 00BF     		nop
 1209              	.L61:
 520:..\src/interruptions.c ****     }
 521:..\src/interruptions.c **** 
 522:..\src/interruptions.c ****     // Position limit saturation
 523:..\src/interruptions.c ****     
 524:..\src/interruptions.c ****         if (SH_ref < SH->pos_lim_inf) 
 1210              		.loc 1 524 0
 1211 02ba FB68     		ldr	r3, [r7, #12]
 1212 02bc 1A68     		ldr	r2, [r3]
 1213 02be 0B4B     		ldr	r3, .L97
 1214 02c0 1B68     		ldr	r3, [r3]
 1215 02c2 9A42     		cmp	r2, r3
 1216 02c4 03DD     		ble	.L86
 525:..\src/interruptions.c ****             SH_ref = SH->pos_lim_inf;
 1217              		.loc 1 525 0
 1218 02c6 FB68     		ldr	r3, [r7, #12]
 1219 02c8 1B68     		ldr	r3, [r3]
 1220 02ca 084A     		ldr	r2, .L97
 1221 02cc 1360     		str	r3, [r2]
 1222              	.L86:
 526:..\src/interruptions.c ****         if (SH_ref > SH->pos_lim_sup) 
 1223              		.loc 1 526 0
 1224 02ce FB68     		ldr	r3, [r7, #12]
 1225 02d0 5A68     		ldr	r2, [r3, #4]
 1226 02d2 064B     		ldr	r3, .L97
 1227 02d4 1B68     		ldr	r3, [r3]
 1228 02d6 9A42     		cmp	r2, r3
 1229 02d8 03DA     		bge	.L94
 527:..\src/interruptions.c ****             SH_ref = SH->pos_lim_sup;
 1230              		.loc 1 527 0
 1231 02da FB68     		ldr	r3, [r7, #12]
 1232 02dc 5B68     		ldr	r3, [r3, #4]
 1233 02de 034A     		ldr	r2, .L97
 1234 02e0 1360     		str	r3, [r2]
 1235              	.L94:
 528:..\src/interruptions.c **** 
 529:..\src/interruptions.c **** }
 1236              		.loc 1 529 0
 1237 02e2 00BF     		nop
 1238 02e4 1437     		adds	r7, r7, #20
 1239              		.cfi_def_cfa_offset 4
 1240 02e6 BD46     		mov	sp, r7
 1241              		.cfi_def_cfa_register 13
 1242              		@ sp needed
 1243 02e8 80BC     		pop	{r7}
 1244              		.cfi_restore 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 33


 1245              		.cfi_def_cfa_offset 0
 1246 02ea 7047     		bx	lr
 1247              	.L98:
 1248              		.align	2
 1249              	.L97:
 1250 02ec 00000000 		.word	SH_ref
 1251              		.cfi_endproc
 1252              	.LFE68:
 1253              		.size	compute_SH_reference, .-compute_SH_reference
 1254              		.section	.text.vibrotactile_control_generic,"ax",%progbits
 1255              		.align	2
 1256              		.global	vibrotactile_control_generic
 1257              		.thumb
 1258              		.thumb_func
 1259              		.type	vibrotactile_control_generic, %function
 1260              	vibrotactile_control_generic:
 1261              	.LFB69:
 530:..\src/interruptions.c **** 
 531:..\src/interruptions.c **** 
 532:..\src/interruptions.c **** 
 533:..\src/interruptions.c **** 
 534:..\src/interruptions.c **** //==============================================================================
 535:..\src/interruptions.c **** //                                                  VIBROTACTILE CONTROL GENERIC
 536:..\src/interruptions.c **** //==============================================================================
 537:..\src/interruptions.c **** void vibrotactile_control_generic(uint8 idx) {
 1262              		.loc 1 537 0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 16
 1265              		@ frame_needed = 1, uses_anonymous_args = 0
 1266 0000 80B5     		push	{r7, lr}
 1267              		.cfi_def_cfa_offset 8
 1268              		.cfi_offset 7, -8
 1269              		.cfi_offset 14, -4
 1270 0002 84B0     		sub	sp, sp, #16
 1271              		.cfi_def_cfa_offset 24
 1272 0004 00AF     		add	r7, sp, #0
 1273              		.cfi_def_cfa_register 7
 1274 0006 0346     		mov	r3, r0
 1275 0008 FB71     		strb	r3, [r7, #7]
 538:..\src/interruptions.c ****    
 539:..\src/interruptions.c ****     int16 CYDATA pwm_input = 0;
 1276              		.loc 1 539 0
 1277 000a 0023     		movs	r3, #0
 1278 000c FB81     		strh	r3, [r7, #14]	@ movhi
 540:..\src/interruptions.c **** 
 541:..\src/interruptions.c ****     // Static Variables
 542:..\src/interruptions.c ****    
 543:..\src/interruptions.c ****     static CYBIT motor_dir[NUM_OF_VT_ACTUATORS]; 
 544:..\src/interruptions.c **** 
 545:..\src/interruptions.c ****     // ======================= UPDATE MOTOR REFERENCE ==========================            
 546:..\src/interruptions.c **** 
 547:..\src/interruptions.c ****     pwm_input = VT_ref[idx];
 1279              		.loc 1 547 0
 1280 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1281 0010 294A     		ldr	r2, .L112
 1282 0012 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1283 0014 FB81     		strh	r3, [r7, #14]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 34


 548:..\src/interruptions.c **** 
 549:..\src/interruptions.c ****     if (pwm_input > 0) 
 1284              		.loc 1 549 0
 1285 0016 B7F90E30 		ldrsh	r3, [r7, #14]
 1286 001a 002B     		cmp	r3, #0
 1287 001c 04DD     		ble	.L100
 550:..\src/interruptions.c ****         motor_dir[idx] = TRUE;
 1288              		.loc 1 550 0
 1289 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1290 0020 264A     		ldr	r2, .L112+4
 1291 0022 0121     		movs	r1, #1
 1292 0024 D154     		strb	r1, [r2, r3]
 1293 0026 03E0     		b	.L101
 1294              	.L100:
 551:..\src/interruptions.c ****     else 
 552:..\src/interruptions.c ****         motor_dir[idx] = FALSE;
 1295              		.loc 1 552 0
 1296 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1297 002a 244A     		ldr	r2, .L112+4
 1298 002c 0021     		movs	r1, #0
 1299 002e D154     		strb	r1, [r2, r3]
 1300              	.L101:
 553:..\src/interruptions.c ****         
 554:..\src/interruptions.c ****     if (pwm_input > PWM_MAX_VALUE_DC) 
 1301              		.loc 1 554 0
 1302 0030 B7F90E30 		ldrsh	r3, [r7, #14]
 1303 0034 642B     		cmp	r3, #100
 1304 0036 01DD     		ble	.L102
 555:..\src/interruptions.c ****         pwm_input = PWM_MAX_VALUE_DC;
 1305              		.loc 1 555 0
 1306 0038 6423     		movs	r3, #100
 1307 003a FB81     		strh	r3, [r7, #14]	@ movhi
 1308              	.L102:
 556:..\src/interruptions.c ****     if (pwm_input < - PWM_MAX_VALUE_DC) 
 1309              		.loc 1 556 0
 1310 003c B7F90E30 		ldrsh	r3, [r7, #14]
 1311 0040 13F1640F 		cmn	r3, #100
 1312 0044 02DA     		bge	.L103
 557:..\src/interruptions.c ****         pwm_input = - PWM_MAX_VALUE_DC;
 1313              		.loc 1 557 0
 1314 0046 4FF69C73 		movw	r3, #65436
 1315 004a FB81     		strh	r3, [r7, #14]	@ movhi
 1316              	.L103:
 558:..\src/interruptions.c ****      
 559:..\src/interruptions.c ****     // Set motor direction and write pwm value
 560:..\src/interruptions.c ****     switch (idx) {
 1317              		.loc 1 560 0
 1318 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1319 004e 002B     		cmp	r3, #0
 1320 0050 02D0     		beq	.L105
 1321 0052 012B     		cmp	r3, #1
 1322 0054 16D0     		beq	.L106
 561:..\src/interruptions.c ****         case 0:         // Motor 1
 562:..\src/interruptions.c ****             if (motor_dir[idx])
 563:..\src/interruptions.c ****                 VT1_DIR_Write(0x00);
 564:..\src/interruptions.c ****             else
 565:..\src/interruptions.c ****                 VT1_DIR_Write(0x01);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 35


 566:..\src/interruptions.c ****          
 567:..\src/interruptions.c ****                PWM_VT_WriteCompare1(abs(pwm_input));    
 568:..\src/interruptions.c ****             
 569:..\src/interruptions.c ****             break;
 570:..\src/interruptions.c ****         case 1:         // Motor 2
 571:..\src/interruptions.c ****             
 572:..\src/interruptions.c ****             if (motor_dir[idx])
 573:..\src/interruptions.c ****                 VT2_DIR_Write(0x00);          
 574:..\src/interruptions.c ****             else
 575:..\src/interruptions.c ****                 VT2_DIR_Write(0x01);
 576:..\src/interruptions.c ****             
 577:..\src/interruptions.c ****             PWM_VT_WriteCompare2(abs(pwm_input));    
 578:..\src/interruptions.c ****         break;
 579:..\src/interruptions.c ****     }
 580:..\src/interruptions.c ****        
 581:..\src/interruptions.c ****     
 582:..\src/interruptions.c **** }
 1323              		.loc 1 582 0
 1324 0056 2BE0     		b	.L111
 1325              	.L105:
 562:..\src/interruptions.c ****                 VT1_DIR_Write(0x00);
 1326              		.loc 1 562 0
 1327 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1328 005a 184A     		ldr	r2, .L112+4
 1329 005c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1330 005e 002B     		cmp	r3, #0
 1331 0060 03D0     		beq	.L107
 563:..\src/interruptions.c ****             else
 1332              		.loc 1 563 0
 1333 0062 0020     		movs	r0, #0
 1334 0064 FFF7FEFF 		bl	VT1_DIR_Write
 1335 0068 02E0     		b	.L108
 1336              	.L107:
 565:..\src/interruptions.c ****          
 1337              		.loc 1 565 0
 1338 006a 0120     		movs	r0, #1
 1339 006c FFF7FEFF 		bl	VT1_DIR_Write
 1340              	.L108:
 567:..\src/interruptions.c ****             
 1341              		.loc 1 567 0
 1342 0070 B7F90E30 		ldrsh	r3, [r7, #14]
 1343 0074 002B     		cmp	r3, #0
 1344 0076 B8BF     		it	lt
 1345 0078 5B42     		rsblt	r3, r3, #0
 1346 007a 9BB2     		uxth	r3, r3
 1347 007c 1846     		mov	r0, r3
 1348 007e FFF7FEFF 		bl	PWM_VT_WriteCompare1
 569:..\src/interruptions.c ****         case 1:         // Motor 2
 1349              		.loc 1 569 0
 1350 0082 15E0     		b	.L104
 1351              	.L106:
 572:..\src/interruptions.c ****                 VT2_DIR_Write(0x00);          
 1352              		.loc 1 572 0
 1353 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1354 0086 0D4A     		ldr	r2, .L112+4
 1355 0088 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1356 008a 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 36


 1357 008c 03D0     		beq	.L109
 573:..\src/interruptions.c ****             else
 1358              		.loc 1 573 0
 1359 008e 0020     		movs	r0, #0
 1360 0090 FFF7FEFF 		bl	VT2_DIR_Write
 1361 0094 02E0     		b	.L110
 1362              	.L109:
 575:..\src/interruptions.c ****             
 1363              		.loc 1 575 0
 1364 0096 0120     		movs	r0, #1
 1365 0098 FFF7FEFF 		bl	VT2_DIR_Write
 1366              	.L110:
 577:..\src/interruptions.c ****         break;
 1367              		.loc 1 577 0
 1368 009c B7F90E30 		ldrsh	r3, [r7, #14]
 1369 00a0 002B     		cmp	r3, #0
 1370 00a2 B8BF     		it	lt
 1371 00a4 5B42     		rsblt	r3, r3, #0
 1372 00a6 9BB2     		uxth	r3, r3
 1373 00a8 1846     		mov	r0, r3
 1374 00aa FFF7FEFF 		bl	PWM_VT_WriteCompare2
 578:..\src/interruptions.c ****     }
 1375              		.loc 1 578 0
 1376 00ae 00BF     		nop
 1377              	.L104:
 1378              	.L111:
 1379              		.loc 1 582 0
 1380 00b0 00BF     		nop
 1381 00b2 1037     		adds	r7, r7, #16
 1382              		.cfi_def_cfa_offset 8
 1383 00b4 BD46     		mov	sp, r7
 1384              		.cfi_def_cfa_register 13
 1385              		@ sp needed
 1386 00b6 80BD     		pop	{r7, pc}
 1387              	.L113:
 1388              		.align	2
 1389              	.L112:
 1390 00b8 00000000 		.word	VT_ref
 1391 00bc 90000000 		.word	motor_dir.9799
 1392              		.cfi_endproc
 1393              	.LFE69:
 1394              		.size	vibrotactile_control_generic, .-vibrotactile_control_generic
 1395              		.section	.text.encoder_reading_SPI,"ax",%progbits
 1396              		.align	2
 1397              		.global	encoder_reading_SPI
 1398              		.thumb
 1399              		.thumb_func
 1400              		.type	encoder_reading_SPI, %function
 1401              	encoder_reading_SPI:
 1402              	.LFB70:
 583:..\src/interruptions.c **** 
 584:..\src/interruptions.c **** //==============================================================================
 585:..\src/interruptions.c **** //                                                           ENCODER READING SPI
 586:..\src/interruptions.c **** //==============================================================================
 587:..\src/interruptions.c **** 
 588:..\src/interruptions.c **** void encoder_reading_SPI(uint8 n_line, uint8 assoc_motor) {
 1403              		.loc 1 588 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 37


 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 8
 1406              		@ frame_needed = 1, uses_anonymous_args = 0
 1407              		@ link register save eliminated.
 1408 0000 80B4     		push	{r7}
 1409              		.cfi_def_cfa_offset 4
 1410              		.cfi_offset 7, -4
 1411 0002 83B0     		sub	sp, sp, #12
 1412              		.cfi_def_cfa_offset 16
 1413 0004 00AF     		add	r7, sp, #0
 1414              		.cfi_def_cfa_register 7
 1415 0006 0346     		mov	r3, r0
 1416 0008 0A46     		mov	r2, r1
 1417 000a FB71     		strb	r3, [r7, #7]
 1418 000c 1346     		mov	r3, r2
 1419 000e BB71     		strb	r3, [r7, #6]
 589:..\src/interruptions.c **** 
 590:..\src/interruptions.c **** }
 1420              		.loc 1 590 0
 1421 0010 00BF     		nop
 1422 0012 0C37     		adds	r7, r7, #12
 1423              		.cfi_def_cfa_offset 4
 1424 0014 BD46     		mov	sp, r7
 1425              		.cfi_def_cfa_register 13
 1426              		@ sp needed
 1427 0016 80BC     		pop	{r7}
 1428              		.cfi_restore 7
 1429              		.cfi_def_cfa_offset 0
 1430 0018 7047     		bx	lr
 1431              		.cfi_endproc
 1432              	.LFE70:
 1433              		.size	encoder_reading_SPI, .-encoder_reading_SPI
 1434              		.global	__aeabi_f2iz
 1435              		.global	__aeabi_f2d
 1436              		.global	__aeabi_ddiv
 1437              		.global	__aeabi_dsub
 1438              		.global	__aeabi_d2iz
 1439 001a 00BF     		.section	.text.analog_read_end,"ax",%progbits
 1440              		.align	2
 1441              		.global	analog_read_end
 1442              		.thumb
 1443              		.thumb_func
 1444              		.type	analog_read_end, %function
 1445              	analog_read_end:
 1446              	.LFB71:
 591:..\src/interruptions.c **** 
 592:..\src/interruptions.c **** //==============================================================================
 593:..\src/interruptions.c **** //                                                           ANALOG MEASUREMENTS
 594:..\src/interruptions.c **** //==============================================================================
 595:..\src/interruptions.c **** 
 596:..\src/interruptions.c **** void analog_read_end() {
 1447              		.loc 1 596 0
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 8
 1450              		@ frame_needed = 1, uses_anonymous_args = 0
 1451 0000 90B5     		push	{r4, r7, lr}
 1452              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 38


 1453              		.cfi_offset 4, -12
 1454              		.cfi_offset 7, -8
 1455              		.cfi_offset 14, -4
 1456 0002 83B0     		sub	sp, sp, #12
 1457              		.cfi_def_cfa_offset 24
 1458 0004 00AF     		add	r7, sp, #0
 1459              		.cfi_def_cfa_register 7
 597:..\src/interruptions.c **** 
 598:..\src/interruptions.c ****     /* =========================================================================
 599:..\src/interruptions.c ****     /   Ideal formulation to calculate tension and current
 600:..\src/interruptions.c ****     /
 601:..\src/interruptions.c ****     /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
 602:..\src/interruptions.c ****     /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
 603:..\src/interruptions.c ****     /
 604:..\src/interruptions.c ****     /   Definition:
 605:..\src/interruptions.c ****     /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
 606:..\src/interruptions.c ****     /   offset = 2000 -> hardware amplifier bias in mV
 607:..\src/interruptions.c ****     /   gain = 8.086 -> amplifier gain
 608:..\src/interruptions.c ****     /   resistor = 18 -> resistor of voltage divider in KOhm 
 609:..\src/interruptions.c ****     /
 610:..\src/interruptions.c ****     /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
 611:..\src/interruptions.c ****     /   and offset unit of measurement is counts, instead dev_tension and
 612:..\src/interruptions.c ****     /   g_meas.curr[] are converted in properly unit.
 613:..\src/interruptions.c ****     /  =========================================================================
 614:..\src/interruptions.c ****     */
 615:..\src/interruptions.c **** 
 616:..\src/interruptions.c ****     int32 CYDATA i_aux;
 617:..\src/interruptions.c ****     
 618:..\src/interruptions.c ****     static uint8 idx = 0;
 619:..\src/interruptions.c ****     
 620:..\src/interruptions.c ****     // Wait for conversion end
 621:..\src/interruptions.c ****     
 622:..\src/interruptions.c ****     while(!ADC_STATUS_Read()){
 1460              		.loc 1 622 0
 1461 0006 08E0     		b	.L116
 1462              	.L117:
 623:..\src/interruptions.c ****         
 624:..\src/interruptions.c ****         if (interrupt_flag){
 1463              		.loc 1 624 0
 1464 0008 6D4B     		ldr	r3, .L129+16
 1465 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1466 000c 002B     		cmp	r3, #0
 1467 000e 04D0     		beq	.L116
 625:..\src/interruptions.c ****             interrupt_flag = FALSE;
 1468              		.loc 1 625 0
 1469 0010 6B4B     		ldr	r3, .L129+16
 1470 0012 0022     		movs	r2, #0
 1471 0014 1A70     		strb	r2, [r3]
 626:..\src/interruptions.c ****             interrupt_manager();
 1472              		.loc 1 626 0
 1473 0016 FFF7FEFF 		bl	interrupt_manager
 1474              	.L116:
 622:..\src/interruptions.c ****         
 1475              		.loc 1 622 0
 1476 001a FFF7FEFF 		bl	ADC_STATUS_Read
 1477 001e 0346     		mov	r3, r0
 1478 0020 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 39


 1479 0022 F1D0     		beq	.L117
 627:..\src/interruptions.c ****         }
 628:..\src/interruptions.c ****     }
 629:..\src/interruptions.c **** 
 630:..\src/interruptions.c ****         // Read pressure in any case
 631:..\src/interruptions.c ****         g_adc_meas.pressure  = (int32)(ADC_buf[0]);    //0 - 4096  
 1480              		.loc 1 631 0
 1481 0024 674B     		ldr	r3, .L129+20
 1482 0026 B3F90030 		ldrsh	r3, [r3]
 1483 002a 1846     		mov	r0, r3
 1484 002c FFF7FEFF 		bl	__aeabi_i2f
 1485 0030 0246     		mov	r2, r0
 1486 0032 654B     		ldr	r3, .L129+24
 1487 0034 9A60     		str	r2, [r3, #8]	@ float
 632:..\src/interruptions.c ****         pressure_value = g_adc_meas.pressure;
 1488              		.loc 1 632 0
 1489 0036 644B     		ldr	r3, .L129+24
 1490 0038 9B68     		ldr	r3, [r3, #8]	@ float
 1491 003a 1846     		mov	r0, r3
 1492 003c FFF7FEFF 		bl	__aeabi_f2iz
 1493 0040 0246     		mov	r2, r0
 1494 0042 624B     		ldr	r3, .L129+28
 1495 0044 1A60     		str	r2, [r3]
 633:..\src/interruptions.c ****         pressure_value = (((float)pressure_value/4096.0)/0.002421)-101.325;       // datasheet tran
 1496              		.loc 1 633 0
 1497 0046 614B     		ldr	r3, .L129+28
 1498 0048 1B68     		ldr	r3, [r3]
 1499 004a 1846     		mov	r0, r3
 1500 004c FFF7FEFF 		bl	__aeabi_i2f
 1501 0050 0346     		mov	r3, r0
 1502 0052 1846     		mov	r0, r3
 1503 0054 FFF7FEFF 		bl	__aeabi_f2d
 1504 0058 4FF00002 		mov	r2, #0
 1505 005c 5C4B     		ldr	r3, .L129+32
 1506 005e FFF7FEFF 		bl	__aeabi_ddiv
 1507 0062 0346     		mov	r3, r0
 1508 0064 0C46     		mov	r4, r1
 1509 0066 1846     		mov	r0, r3
 1510 0068 2146     		mov	r1, r4
 1511 006a 51A3     		adr	r3, .L129
 1512 006c D3E90023 		ldrd	r2, [r3]
 1513 0070 FFF7FEFF 		bl	__aeabi_ddiv
 1514 0074 0346     		mov	r3, r0
 1515 0076 0C46     		mov	r4, r1
 1516 0078 1846     		mov	r0, r3
 1517 007a 2146     		mov	r1, r4
 1518 007c 4EA3     		adr	r3, .L129+8
 1519 007e D3E90023 		ldrd	r2, [r3]
 1520 0082 FFF7FEFF 		bl	__aeabi_dsub
 1521 0086 0346     		mov	r3, r0
 1522 0088 0C46     		mov	r4, r1
 1523 008a 1846     		mov	r0, r3
 1524 008c 2146     		mov	r1, r4
 1525 008e FFF7FEFF 		bl	__aeabi_d2iz
 1526 0092 0246     		mov	r2, r0
 1527 0094 4D4B     		ldr	r3, .L129+28
 1528 0096 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 40


 634:..\src/interruptions.c ****         if (pressure_value < 0) 
 1529              		.loc 1 634 0
 1530 0098 4C4B     		ldr	r3, .L129+28
 1531 009a 1B68     		ldr	r3, [r3]
 1532 009c 002B     		cmp	r3, #0
 1533 009e 02DA     		bge	.L118
 635:..\src/interruptions.c ****             pressure_value = 0;
 1534              		.loc 1 635 0
 1535 00a0 4A4B     		ldr	r3, .L129+28
 1536 00a2 0022     		movs	r2, #0
 1537 00a4 1A60     		str	r2, [r3]
 1538              	.L118:
 636:..\src/interruptions.c ****     
 637:..\src/interruptions.c ****         //flag_master =  (int32)((ADC_buf[1]/4096.0)*5000);
 638:..\src/interruptions.c **** 
 639:..\src/interruptions.c ****         // Reset emg
 640:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_INPUT_EMGS; idx++){
 1539              		.loc 1 640 0
 1540 00a6 4B4B     		ldr	r3, .L129+36
 1541 00a8 0022     		movs	r2, #0
 1542 00aa 1A70     		strb	r2, [r3]
 1543 00ac 0CE0     		b	.L119
 1544              	.L120:
 641:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 1545              		.loc 1 641 0 discriminator 3
 1546 00ae 494B     		ldr	r3, .L129+36
 1547 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1548 00b2 1946     		mov	r1, r3
 1549 00b4 444B     		ldr	r3, .L129+24
 1550 00b6 0022     		movs	r2, #0
 1551 00b8 43F82120 		str	r2, [r3, r1, lsl #2]
 640:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 1552              		.loc 1 640 0 discriminator 3
 1553 00bc 454B     		ldr	r3, .L129+36
 1554 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1555 00c0 0133     		adds	r3, r3, #1
 1556 00c2 DAB2     		uxtb	r2, r3
 1557 00c4 434B     		ldr	r3, .L129+36
 1558 00c6 1A70     		strb	r2, [r3]
 1559              	.L119:
 640:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 1560              		.loc 1 640 0 is_stmt 0 discriminator 1
 1561 00c8 424B     		ldr	r3, .L129+36
 1562 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1563 00cc 012B     		cmp	r3, #1
 1564 00ce EED9     		bls	.L120
 642:..\src/interruptions.c ****         }
 643:..\src/interruptions.c ****  
 644:..\src/interruptions.c ****         
 645:..\src/interruptions.c ****         // Read EMG channel 1
 646:..\src/interruptions.c ****         i_aux = 0;  
 1565              		.loc 1 646 0 is_stmt 1
 1566 00d0 0023     		movs	r3, #0
 1567 00d2 7B60     		str	r3, [r7, #4]
 647:..\src/interruptions.c ****         i_aux = (int32)(ADC_buf[1 + c_mem.emg.switch_emg]);
 1568              		.loc 1 647 0
 1569 00d4 404B     		ldr	r3, .L129+40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 41


 1570 00d6 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 1571 00da 0133     		adds	r3, r3, #1
 1572 00dc 394A     		ldr	r2, .L129+20
 1573 00de 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 1574 00e2 7B60     		str	r3, [r7, #4]
 648:..\src/interruptions.c ****         if (i_aux < 0) 
 1575              		.loc 1 648 0
 1576 00e4 7B68     		ldr	r3, [r7, #4]
 1577 00e6 002B     		cmp	r3, #0
 1578 00e8 01DA     		bge	.L121
 649:..\src/interruptions.c ****             i_aux = 0;
 1579              		.loc 1 649 0
 1580 00ea 0023     		movs	r3, #0
 1581 00ec 7B60     		str	r3, [r7, #4]
 1582              	.L121:
 650:..\src/interruptions.c ****         i_aux = filter(i_aux, &filt_emg[0]);
 1583              		.loc 1 650 0
 1584 00ee 3B49     		ldr	r1, .L129+44
 1585 00f0 7868     		ldr	r0, [r7, #4]
 1586 00f2 FFF7FEFF 		bl	filter
 1587 00f6 7860     		str	r0, [r7, #4]
 651:..\src/interruptions.c ****         i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[0];
 1588              		.loc 1 651 0
 1589 00f8 7B68     		ldr	r3, [r7, #4]
 1590 00fa 9B02     		lsls	r3, r3, #10
 1591 00fc 1A46     		mov	r2, r3
 1592 00fe 384B     		ldr	r3, .L129+48
 1593 0100 5B6B     		ldr	r3, [r3, #52]
 1594 0102 B2FBF3F3 		udiv	r3, r2, r3
 1595 0106 7B60     		str	r3, [r7, #4]
 652:..\src/interruptions.c **** 
 653:..\src/interruptions.c ****         if (interrupt_flag){
 1596              		.loc 1 653 0
 1597 0108 2D4B     		ldr	r3, .L129+16
 1598 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1599 010c 002B     		cmp	r3, #0
 1600 010e 04D0     		beq	.L122
 654:..\src/interruptions.c ****             interrupt_flag = FALSE;
 1601              		.loc 1 654 0
 1602 0110 2B4B     		ldr	r3, .L129+16
 1603 0112 0022     		movs	r2, #0
 1604 0114 1A70     		strb	r2, [r3]
 655:..\src/interruptions.c ****             interrupt_manager();
 1605              		.loc 1 655 0
 1606 0116 FFF7FEFF 		bl	interrupt_manager
 1607              	.L122:
 656:..\src/interruptions.c ****         }
 657:..\src/interruptions.c ****         
 658:..\src/interruptions.c ****         //Saturation
 659:..\src/interruptions.c ****         if (i_aux < 0) 
 1608              		.loc 1 659 0
 1609 011a 7B68     		ldr	r3, [r7, #4]
 1610 011c 002B     		cmp	r3, #0
 1611 011e 02DA     		bge	.L123
 660:..\src/interruptions.c ****             i_aux = 0;
 1612              		.loc 1 660 0
 1613 0120 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 42


 1614 0122 7B60     		str	r3, [r7, #4]
 1615 0124 06E0     		b	.L124
 1616              	.L123:
 661:..\src/interruptions.c ****         else 
 662:..\src/interruptions.c ****             if (i_aux > 1024)
 1617              		.loc 1 662 0
 1618 0126 7B68     		ldr	r3, [r7, #4]
 1619 0128 B3F5806F 		cmp	r3, #1024
 1620 012c 02DD     		ble	.L124
 663:..\src/interruptions.c ****                 i_aux = 1024;
 1621              		.loc 1 663 0
 1622 012e 4FF48063 		mov	r3, #1024
 1623 0132 7B60     		str	r3, [r7, #4]
 1624              	.L124:
 664:..\src/interruptions.c ****         
 665:..\src/interruptions.c ****         g_adc_meas.emg[0] = i_aux;
 1625              		.loc 1 665 0
 1626 0134 244A     		ldr	r2, .L129+24
 1627 0136 7B68     		ldr	r3, [r7, #4]
 1628 0138 1360     		str	r3, [r2]
 666:..\src/interruptions.c ****         
 667:..\src/interruptions.c ****         // Read EMG channel 2
 668:..\src/interruptions.c ****         i_aux = 0;  
 1629              		.loc 1 668 0
 1630 013a 0023     		movs	r3, #0
 1631 013c 7B60     		str	r3, [r7, #4]
 669:..\src/interruptions.c ****         i_aux = (int32)(ADC_buf[2 - c_mem.emg.switch_emg]);
 1632              		.loc 1 669 0
 1633 013e 264B     		ldr	r3, .L129+40
 1634 0140 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 1635 0144 C3F10203 		rsb	r3, r3, #2
 1636 0148 1E4A     		ldr	r2, .L129+20
 1637 014a 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 1638 014e 7B60     		str	r3, [r7, #4]
 670:..\src/interruptions.c ****         
 671:..\src/interruptions.c ****         if (i_aux < 0)
 1639              		.loc 1 671 0
 1640 0150 7B68     		ldr	r3, [r7, #4]
 1641 0152 002B     		cmp	r3, #0
 1642 0154 01DA     		bge	.L125
 672:..\src/interruptions.c ****             i_aux = 0;
 1643              		.loc 1 672 0
 1644 0156 0023     		movs	r3, #0
 1645 0158 7B60     		str	r3, [r7, #4]
 1646              	.L125:
 673:..\src/interruptions.c ****         i_aux = filter(i_aux, &filt_emg[1]);
 1647              		.loc 1 673 0
 1648 015a 2249     		ldr	r1, .L129+52
 1649 015c 7868     		ldr	r0, [r7, #4]
 1650 015e FFF7FEFF 		bl	filter
 1651 0162 7860     		str	r0, [r7, #4]
 674:..\src/interruptions.c ****         i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[1];
 1652              		.loc 1 674 0
 1653 0164 7B68     		ldr	r3, [r7, #4]
 1654 0166 9B02     		lsls	r3, r3, #10
 1655 0168 1A46     		mov	r2, r3
 1656 016a 1D4B     		ldr	r3, .L129+48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 43


 1657 016c 9B6B     		ldr	r3, [r3, #56]
 1658 016e B2FBF3F3 		udiv	r3, r2, r3
 1659 0172 7B60     		str	r3, [r7, #4]
 675:..\src/interruptions.c **** 
 676:..\src/interruptions.c ****         if (interrupt_flag){
 1660              		.loc 1 676 0
 1661 0174 124B     		ldr	r3, .L129+16
 1662 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1663 0178 002B     		cmp	r3, #0
 1664 017a 04D0     		beq	.L126
 677:..\src/interruptions.c ****             interrupt_flag = FALSE;
 1665              		.loc 1 677 0
 1666 017c 104B     		ldr	r3, .L129+16
 1667 017e 0022     		movs	r2, #0
 1668 0180 1A70     		strb	r2, [r3]
 678:..\src/interruptions.c ****             interrupt_manager();
 1669              		.loc 1 678 0
 1670 0182 FFF7FEFF 		bl	interrupt_manager
 1671              	.L126:
 679:..\src/interruptions.c ****         }
 680:..\src/interruptions.c ****         
 681:..\src/interruptions.c ****         if (i_aux < 0) 
 1672              		.loc 1 681 0
 1673 0186 7B68     		ldr	r3, [r7, #4]
 1674 0188 002B     		cmp	r3, #0
 1675 018a 02DA     		bge	.L127
 682:..\src/interruptions.c ****             i_aux = 0;
 1676              		.loc 1 682 0
 1677 018c 0023     		movs	r3, #0
 1678 018e 7B60     		str	r3, [r7, #4]
 1679 0190 06E0     		b	.L128
 1680              	.L127:
 683:..\src/interruptions.c ****         else 
 684:..\src/interruptions.c ****             if (i_aux > 1024)
 1681              		.loc 1 684 0
 1682 0192 7B68     		ldr	r3, [r7, #4]
 1683 0194 B3F5806F 		cmp	r3, #1024
 1684 0198 02DD     		ble	.L128
 685:..\src/interruptions.c ****                 i_aux = 1024;
 1685              		.loc 1 685 0
 1686 019a 4FF48063 		mov	r3, #1024
 1687 019e 7B60     		str	r3, [r7, #4]
 1688              	.L128:
 686:..\src/interruptions.c ****        
 687:..\src/interruptions.c ****         g_adc_meas.emg[1] = i_aux;
 1689              		.loc 1 687 0
 1690 01a0 094A     		ldr	r2, .L129+24
 1691 01a2 7B68     		ldr	r3, [r7, #4]
 1692 01a4 5360     		str	r3, [r2, #4]
 688:..\src/interruptions.c ****     
 689:..\src/interruptions.c **** }
 1693              		.loc 1 689 0
 1694 01a6 00BF     		nop
 1695 01a8 0C37     		adds	r7, r7, #12
 1696              		.cfi_def_cfa_offset 12
 1697 01aa BD46     		mov	sp, r7
 1698              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 44


 1699              		@ sp needed
 1700 01ac 90BD     		pop	{r4, r7, pc}
 1701              	.L130:
 1702 01ae 00BF     		.align	3
 1703              	.L129:
 1704 01b0 F10F5B7A 		.word	2052788209
 1705 01b4 34D5633F 		.word	1063507252
 1706 01b8 CDCCCCCC 		.word	-858993459
 1707 01bc CC545940 		.word	1079596236
 1708 01c0 00000000 		.word	interrupt_flag
 1709 01c4 00000000 		.word	ADC_buf
 1710 01c8 00000000 		.word	g_adc_meas
 1711 01cc 00000000 		.word	pressure_value
 1712 01d0 0000B040 		.word	1085276160
 1713 01d4 92000000 		.word	idx.9810
 1714 01d8 00000000 		.word	c_mem
 1715 01dc 00000000 		.word	filt_emg
 1716 01e0 00000000 		.word	g_mem
 1717 01e4 08000000 		.word	filt_emg+8
 1718              		.cfi_endproc
 1719              	.LFE71:
 1720              		.size	analog_read_end, .-analog_read_end
 1721              		.section	.text.overcurrent_control,"ax",%progbits
 1722              		.align	2
 1723              		.global	overcurrent_control
 1724              		.thumb
 1725              		.thumb_func
 1726              		.type	overcurrent_control, %function
 1727              	overcurrent_control:
 1728              	.LFB72:
 690:..\src/interruptions.c **** 
 691:..\src/interruptions.c **** //==============================================================================
 692:..\src/interruptions.c **** //                                                           OVERCURRENT CONTROL
 693:..\src/interruptions.c **** //==============================================================================
 694:..\src/interruptions.c **** 
 695:..\src/interruptions.c **** void overcurrent_control() {
 1729              		.loc 1 695 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 0
 1732              		@ frame_needed = 1, uses_anonymous_args = 0
 1733              		@ link register save eliminated.
 1734 0000 80B4     		push	{r7}
 1735              		.cfi_def_cfa_offset 4
 1736              		.cfi_offset 7, -4
 1737 0002 00AF     		add	r7, sp, #0
 1738              		.cfi_def_cfa_register 7
 696:..\src/interruptions.c ****     
 697:..\src/interruptions.c **** }
 1739              		.loc 1 697 0
 1740 0004 00BF     		nop
 1741 0006 BD46     		mov	sp, r7
 1742              		.cfi_def_cfa_register 13
 1743              		@ sp needed
 1744 0008 80BC     		pop	{r7}
 1745              		.cfi_restore 7
 1746              		.cfi_def_cfa_offset 0
 1747 000a 7047     		bx	lr
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 45


 1748              		.cfi_endproc
 1749              	.LFE72:
 1750              		.size	overcurrent_control, .-overcurrent_control
 1751              		.section	.text.pwm_limit_search,"ax",%progbits
 1752              		.align	2
 1753              		.global	pwm_limit_search
 1754              		.thumb
 1755              		.thumb_func
 1756              		.type	pwm_limit_search, %function
 1757              	pwm_limit_search:
 1758              	.LFB73:
 698:..\src/interruptions.c **** 
 699:..\src/interruptions.c **** //==============================================================================
 700:..\src/interruptions.c **** //                                                              PWM_LIMIT_SEARCH
 701:..\src/interruptions.c **** //==============================================================================
 702:..\src/interruptions.c **** 
 703:..\src/interruptions.c **** void pwm_limit_search(uint8 mot_idx) {
 1759              		.loc 1 703 0
 1760              		.cfi_startproc
 1761              		@ args = 0, pretend = 0, frame = 8
 1762              		@ frame_needed = 1, uses_anonymous_args = 0
 1763              		@ link register save eliminated.
 1764 0000 80B4     		push	{r7}
 1765              		.cfi_def_cfa_offset 4
 1766              		.cfi_offset 7, -4
 1767 0002 83B0     		sub	sp, sp, #12
 1768              		.cfi_def_cfa_offset 16
 1769 0004 00AF     		add	r7, sp, #0
 1770              		.cfi_def_cfa_register 7
 1771 0006 0346     		mov	r3, r0
 1772 0008 FB71     		strb	r3, [r7, #7]
 704:..\src/interruptions.c **** 
 705:..\src/interruptions.c **** }
 1773              		.loc 1 705 0
 1774 000a 00BF     		nop
 1775 000c 0C37     		adds	r7, r7, #12
 1776              		.cfi_def_cfa_offset 4
 1777 000e BD46     		mov	sp, r7
 1778              		.cfi_def_cfa_register 13
 1779              		@ sp needed
 1780 0010 80BC     		pop	{r7}
 1781              		.cfi_restore 7
 1782              		.cfi_def_cfa_offset 0
 1783 0012 7047     		bx	lr
 1784              		.cfi_endproc
 1785              	.LFE73:
 1786              		.size	pwm_limit_search, .-pwm_limit_search
 1787              		.section	.text.cycles_counter_update,"ax",%progbits
 1788              		.align	2
 1789              		.global	cycles_counter_update
 1790              		.thumb
 1791              		.thumb_func
 1792              		.type	cycles_counter_update, %function
 1793              	cycles_counter_update:
 1794              	.LFB74:
 706:..\src/interruptions.c **** 
 707:..\src/interruptions.c **** //==============================================================================
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 46


 708:..\src/interruptions.c **** //                                                         CYCLES COUNTER UPDATE
 709:..\src/interruptions.c **** //==============================================================================
 710:..\src/interruptions.c **** 
 711:..\src/interruptions.c **** void cycles_counter_update() {
 1795              		.loc 1 711 0
 1796              		.cfi_startproc
 1797              		@ args = 0, pretend = 0, frame = 0
 1798              		@ frame_needed = 1, uses_anonymous_args = 0
 1799              		@ link register save eliminated.
 1800 0000 80B4     		push	{r7}
 1801              		.cfi_def_cfa_offset 4
 1802              		.cfi_offset 7, -4
 1803 0002 00AF     		add	r7, sp, #0
 1804              		.cfi_def_cfa_register 7
 712:..\src/interruptions.c **** 	
 713:..\src/interruptions.c **** }
 1805              		.loc 1 713 0
 1806 0004 00BF     		nop
 1807 0006 BD46     		mov	sp, r7
 1808              		.cfi_def_cfa_register 13
 1809              		@ sp needed
 1810 0008 80BC     		pop	{r7}
 1811              		.cfi_restore 7
 1812              		.cfi_def_cfa_offset 0
 1813 000a 7047     		bx	lr
 1814              		.cfi_endproc
 1815              	.LFE74:
 1816              		.size	cycles_counter_update, .-cycles_counter_update
 1817              		.section	.text.save_cycles_eeprom,"ax",%progbits
 1818              		.align	2
 1819              		.global	save_cycles_eeprom
 1820              		.thumb
 1821              		.thumb_func
 1822              		.type	save_cycles_eeprom, %function
 1823              	save_cycles_eeprom:
 1824              	.LFB75:
 714:..\src/interruptions.c **** 
 715:..\src/interruptions.c **** //==============================================================================
 716:..\src/interruptions.c **** //                                                            SAVE CYCLES EEPROM
 717:..\src/interruptions.c **** //==============================================================================
 718:..\src/interruptions.c **** 
 719:..\src/interruptions.c **** void save_cycles_eeprom() {
 1825              		.loc 1 719 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 0
 1828              		@ frame_needed = 1, uses_anonymous_args = 0
 1829              		@ link register save eliminated.
 1830 0000 80B4     		push	{r7}
 1831              		.cfi_def_cfa_offset 4
 1832              		.cfi_offset 7, -4
 1833 0002 00AF     		add	r7, sp, #0
 1834              		.cfi_def_cfa_register 7
 720:..\src/interruptions.c **** 
 721:..\src/interruptions.c **** }
 1835              		.loc 1 721 0
 1836 0004 00BF     		nop
 1837 0006 BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 47


 1838              		.cfi_def_cfa_register 13
 1839              		@ sp needed
 1840 0008 80BC     		pop	{r7}
 1841              		.cfi_restore 7
 1842              		.cfi_def_cfa_offset 0
 1843 000a 7047     		bx	lr
 1844              		.cfi_endproc
 1845              	.LFE75:
 1846              		.size	save_cycles_eeprom, .-save_cycles_eeprom
 1847              		.bss
 1848              	state.9752:
 1849 0000 00       		.space	1
 1850 0001 000000   		.align	2
 1851              	rx_queue.9756:
 1852 0004 000000   		.space	3
 1853              	data_packet_length.9754:
 1854 0007 00       		.space	1
 1855              	data_packet_index.9753:
 1856 0008 00       		.space	1
 1857 0009 000000   		.align	2
 1858              	data_packet_buffer.9755:
 1859 000c 00000000 		.space	128
 1859      00000000 
 1859      00000000 
 1859      00000000 
 1859      00000000 
 1860              	current_emg.9777:
 1861 008c 00       		.space	1
 1862 008d 000000   		.align	2
 1863              	motor_dir.9799:
 1864 0090 0000     		.space	2
 1865              	idx.9810:
 1866 0092 00       		.space	1
 1867              		.text
 1868              	.Letext0:
 1869              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1870              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1871              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1872              		.file 5 "..\\src\\globals.h"
 1873              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1874              		.file 7 "..\\src\\commands.h"
 1875              		.section	.debug_info,"",%progbits
 1876              	.Ldebug_info0:
 1877 0000 B0070000 		.4byte	0x7b0
 1878 0004 0400     		.2byte	0x4
 1879 0006 00000000 		.4byte	.Ldebug_abbrev0
 1880 000a 04       		.byte	0x4
 1881 000b 01       		.uleb128 0x1
 1882 000c 49000000 		.4byte	.LASF118
 1883 0010 0C       		.byte	0xc
 1884 0011 BE010000 		.4byte	.LASF119
 1885 0015 30030000 		.4byte	.LASF120
 1886 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1887 001d 00000000 		.4byte	0
 1888 0021 00000000 		.4byte	.Ldebug_line0
 1889 0025 02       		.uleb128 0x2
 1890 0026 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 48


 1891 0027 06       		.byte	0x6
 1892 0028 33000000 		.4byte	.LASF0
 1893 002c 02       		.uleb128 0x2
 1894 002d 01       		.byte	0x1
 1895 002e 08       		.byte	0x8
 1896 002f 3B050000 		.4byte	.LASF1
 1897 0033 02       		.uleb128 0x2
 1898 0034 02       		.byte	0x2
 1899 0035 05       		.byte	0x5
 1900 0036 49050000 		.4byte	.LASF2
 1901 003a 02       		.uleb128 0x2
 1902 003b 02       		.byte	0x2
 1903 003c 07       		.byte	0x7
 1904 003d F1020000 		.4byte	.LASF3
 1905 0041 03       		.uleb128 0x3
 1906 0042 EC030000 		.4byte	.LASF9
 1907 0046 02       		.byte	0x2
 1908 0047 3F       		.byte	0x3f
 1909 0048 4C000000 		.4byte	0x4c
 1910 004c 02       		.uleb128 0x2
 1911 004d 04       		.byte	0x4
 1912 004e 05       		.byte	0x5
 1913 004f 94010000 		.4byte	.LASF4
 1914 0053 02       		.uleb128 0x2
 1915 0054 04       		.byte	0x4
 1916 0055 07       		.byte	0x7
 1917 0056 C9050000 		.4byte	.LASF5
 1918 005a 02       		.uleb128 0x2
 1919 005b 08       		.byte	0x8
 1920 005c 05       		.byte	0x5
 1921 005d 42010000 		.4byte	.LASF6
 1922 0061 02       		.uleb128 0x2
 1923 0062 08       		.byte	0x8
 1924 0063 07       		.byte	0x7
 1925 0064 FC000000 		.4byte	.LASF7
 1926 0068 04       		.uleb128 0x4
 1927 0069 04       		.byte	0x4
 1928 006a 05       		.byte	0x5
 1929 006b 696E7400 		.ascii	"int\000"
 1930 006f 02       		.uleb128 0x2
 1931 0070 04       		.byte	0x4
 1932 0071 07       		.byte	0x7
 1933 0072 7B020000 		.4byte	.LASF8
 1934 0076 03       		.uleb128 0x3
 1935 0077 33050000 		.4byte	.LASF10
 1936 007b 03       		.byte	0x3
 1937 007c 2C       		.byte	0x2c
 1938 007d 41000000 		.4byte	0x41
 1939 0081 05       		.uleb128 0x5
 1940 0082 EB020000 		.4byte	.LASF11
 1941 0086 04       		.byte	0x4
 1942 0087 E401     		.2byte	0x1e4
 1943 0089 2C000000 		.4byte	0x2c
 1944 008d 05       		.uleb128 0x5
 1945 008e 00000000 		.4byte	.LASF12
 1946 0092 04       		.byte	0x4
 1947 0093 E501     		.2byte	0x1e5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 49


 1948 0095 3A000000 		.4byte	0x3a
 1949 0099 05       		.uleb128 0x5
 1950 009a FD010000 		.4byte	.LASF13
 1951 009e 04       		.byte	0x4
 1952 009f E601     		.2byte	0x1e6
 1953 00a1 53000000 		.4byte	0x53
 1954 00a5 05       		.uleb128 0x5
 1955 00a6 ED060000 		.4byte	.LASF14
 1956 00aa 04       		.byte	0x4
 1957 00ab E801     		.2byte	0x1e8
 1958 00ad 33000000 		.4byte	0x33
 1959 00b1 05       		.uleb128 0x5
 1960 00b2 67010000 		.4byte	.LASF15
 1961 00b6 04       		.byte	0x4
 1962 00b7 E901     		.2byte	0x1e9
 1963 00b9 4C000000 		.4byte	0x4c
 1964 00bd 02       		.uleb128 0x2
 1965 00be 04       		.byte	0x4
 1966 00bf 04       		.byte	0x4
 1967 00c0 F5040000 		.4byte	.LASF16
 1968 00c4 02       		.uleb128 0x2
 1969 00c5 08       		.byte	0x8
 1970 00c6 04       		.byte	0x4
 1971 00c7 D5010000 		.4byte	.LASF17
 1972 00cb 02       		.uleb128 0x2
 1973 00cc 01       		.byte	0x1
 1974 00cd 08       		.byte	0x8
 1975 00ce E2050000 		.4byte	.LASF18
 1976 00d2 05       		.uleb128 0x5
 1977 00d3 62010000 		.4byte	.LASF19
 1978 00d7 04       		.byte	0x4
 1979 00d8 8E02     		.2byte	0x28e
 1980 00da DE000000 		.4byte	0xde
 1981 00de 06       		.uleb128 0x6
 1982 00df 81000000 		.4byte	0x81
 1983 00e3 02       		.uleb128 0x2
 1984 00e4 08       		.byte	0x8
 1985 00e5 04       		.byte	0x4
 1986 00e6 4C040000 		.4byte	.LASF20
 1987 00ea 02       		.uleb128 0x2
 1988 00eb 04       		.byte	0x4
 1989 00ec 07       		.byte	0x7
 1990 00ed 24040000 		.4byte	.LASF21
 1991 00f1 07       		.uleb128 0x7
 1992 00f2 22030000 		.4byte	.LASF121
 1993 00f6 01       		.byte	0x1
 1994 00f7 2C000000 		.4byte	0x2c
 1995 00fb 07       		.byte	0x7
 1996 00fc BB       		.byte	0xbb
 1997 00fd 32010000 		.4byte	0x132
 1998 0101 08       		.uleb128 0x8
 1999 0102 0F060000 		.4byte	.LASF22
 2000 0106 00       		.byte	0
 2001 0107 08       		.uleb128 0x8
 2002 0108 0E030000 		.4byte	.LASF23
 2003 010c 01       		.byte	0x1
 2004 010d 08       		.uleb128 0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 50


 2005 010e 0D020000 		.4byte	.LASF24
 2006 0112 02       		.byte	0x2
 2007 0113 08       		.uleb128 0x8
 2008 0114 B3060000 		.4byte	.LASF25
 2009 0118 03       		.byte	0x3
 2010 0119 08       		.uleb128 0x8
 2011 011a B2020000 		.4byte	.LASF26
 2012 011e 04       		.byte	0x4
 2013 011f 08       		.uleb128 0x8
 2014 0120 BD040000 		.4byte	.LASF27
 2015 0124 05       		.byte	0x5
 2016 0125 08       		.uleb128 0x8
 2017 0126 3B020000 		.4byte	.LASF28
 2018 012a 06       		.byte	0x6
 2019 012b 08       		.uleb128 0x8
 2020 012c 94060000 		.4byte	.LASF29
 2021 0130 07       		.byte	0x7
 2022 0131 00       		.byte	0
 2023 0132 09       		.uleb128 0x9
 2024 0133 F6050000 		.4byte	.LASF33
 2025 0137 86       		.byte	0x86
 2026 0138 05       		.byte	0x5
 2027 0139 9B       		.byte	0x9b
 2028 013a 6F010000 		.4byte	0x16f
 2029 013e 0A       		.uleb128 0xa
 2030 013f 2E060000 		.4byte	.LASF30
 2031 0143 05       		.byte	0x5
 2032 0144 9C       		.byte	0x9c
 2033 0145 6F010000 		.4byte	0x16f
 2034 0149 00       		.byte	0
 2035 014a 0A       		.uleb128 0xa
 2036 014b DB050000 		.4byte	.LASF31
 2037 014f 05       		.byte	0x5
 2038 0150 9D       		.byte	0x9d
 2039 0151 A5000000 		.4byte	0xa5
 2040 0155 80       		.byte	0x80
 2041 0156 0B       		.uleb128 0xb
 2042 0157 696E6400 		.ascii	"ind\000"
 2043 015b 05       		.byte	0x5
 2044 015c 9E       		.byte	0x9e
 2045 015d A5000000 		.4byte	0xa5
 2046 0161 82       		.byte	0x82
 2047 0162 0A       		.uleb128 0xa
 2048 0163 50010000 		.4byte	.LASF32
 2049 0167 05       		.byte	0x5
 2050 0168 9F       		.byte	0x9f
 2051 0169 81000000 		.4byte	0x81
 2052 016d 84       		.byte	0x84
 2053 016e 00       		.byte	0
 2054 016f 0C       		.uleb128 0xc
 2055 0170 81000000 		.4byte	0x81
 2056 0174 7F010000 		.4byte	0x17f
 2057 0178 0D       		.uleb128 0xd
 2058 0179 EA000000 		.4byte	0xea
 2059 017d 7F       		.byte	0x7f
 2060 017e 00       		.byte	0
 2061 017f 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 51


 2062 0180 58040000 		.4byte	.LASF34
 2063 0184 10       		.byte	0x10
 2064 0185 05       		.byte	0x5
 2065 0186 A9       		.byte	0xa9
 2066 0187 AF010000 		.4byte	0x1af
 2067 018b 0B       		.uleb128 0xb
 2068 018c 696400   		.ascii	"id\000"
 2069 018f 05       		.byte	0x5
 2070 0190 AA       		.byte	0xaa
 2071 0191 81000000 		.4byte	0x81
 2072 0195 00       		.byte	0
 2073 0196 0A       		.uleb128 0xa
 2074 0197 1D010000 		.4byte	.LASF35
 2075 019b 05       		.byte	0x5
 2076 019c AB       		.byte	0xab
 2077 019d 81000000 		.4byte	0x81
 2078 01a1 01       		.byte	0x1
 2079 01a2 0A       		.uleb128 0xa
 2080 01a3 B1030000 		.4byte	.LASF36
 2081 01a7 05       		.byte	0x5
 2082 01a8 AC       		.byte	0xac
 2083 01a9 AF010000 		.4byte	0x1af
 2084 01ad 02       		.byte	0x2
 2085 01ae 00       		.byte	0
 2086 01af 0C       		.uleb128 0xc
 2087 01b0 81000000 		.4byte	0x81
 2088 01b4 BF010000 		.4byte	0x1bf
 2089 01b8 0D       		.uleb128 0xd
 2090 01b9 EA000000 		.4byte	0xea
 2091 01bd 0D       		.byte	0xd
 2092 01be 00       		.byte	0
 2093 01bf 09       		.uleb128 0x9
 2094 01c0 04020000 		.4byte	.LASF37
 2095 01c4 10       		.byte	0x10
 2096 01c5 05       		.byte	0x5
 2097 01c6 B3       		.byte	0xb3
 2098 01c7 08020000 		.4byte	0x208
 2099 01cb 0A       		.uleb128 0xa
 2100 01cc A5030000 		.4byte	.LASF38
 2101 01d0 05       		.byte	0x5
 2102 01d1 B5       		.byte	0xb5
 2103 01d2 B1000000 		.4byte	0xb1
 2104 01d6 00       		.byte	0
 2105 01d7 0A       		.uleb128 0xa
 2106 01d8 9B040000 		.4byte	.LASF39
 2107 01dc 05       		.byte	0x5
 2108 01dd B6       		.byte	0xb6
 2109 01de B1000000 		.4byte	0xb1
 2110 01e2 04       		.byte	0x4
 2111 01e3 0A       		.uleb128 0xa
 2112 01e4 EA040000 		.4byte	.LASF40
 2113 01e8 05       		.byte	0x5
 2114 01e9 B7       		.byte	0xb7
 2115 01ea 81000000 		.4byte	0x81
 2116 01ee 08       		.byte	0x8
 2117 01ef 0B       		.uleb128 0xb
 2118 01f0 72657300 		.ascii	"res\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 52


 2119 01f4 05       		.byte	0x5
 2120 01f5 B8       		.byte	0xb8
 2121 01f6 81000000 		.4byte	0x81
 2122 01fa 09       		.byte	0x9
 2123 01fb 0A       		.uleb128 0xa
 2124 01fc B1030000 		.4byte	.LASF36
 2125 0200 05       		.byte	0x5
 2126 0201 B9       		.byte	0xb9
 2127 0202 08020000 		.4byte	0x208
 2128 0206 0A       		.byte	0xa
 2129 0207 00       		.byte	0
 2130 0208 0C       		.uleb128 0xc
 2131 0209 81000000 		.4byte	0x81
 2132 020d 18020000 		.4byte	0x218
 2133 0211 0D       		.uleb128 0xd
 2134 0212 EA000000 		.4byte	0xea
 2135 0216 05       		.byte	0x5
 2136 0217 00       		.byte	0
 2137 0218 09       		.uleb128 0x9
 2138 0219 AF050000 		.4byte	.LASF41
 2139 021d 10       		.byte	0x10
 2140 021e 05       		.byte	0x5
 2141 021f C1       		.byte	0xc1
 2142 0220 61020000 		.4byte	0x261
 2143 0224 0A       		.uleb128 0xa
 2144 0225 34010000 		.4byte	.LASF42
 2145 0229 05       		.byte	0x5
 2146 022a C2       		.byte	0xc2
 2147 022b 61020000 		.4byte	0x261
 2148 022f 00       		.byte	0
 2149 0230 0A       		.uleb128 0xa
 2150 0231 D5060000 		.4byte	.LASF43
 2151 0235 05       		.byte	0x5
 2152 0236 C3       		.byte	0xc3
 2153 0237 71020000 		.4byte	0x271
 2154 023b 04       		.byte	0x4
 2155 023c 0A       		.uleb128 0xa
 2156 023d CB060000 		.4byte	.LASF44
 2157 0241 05       		.byte	0x5
 2158 0242 C4       		.byte	0xc4
 2159 0243 81020000 		.4byte	0x281
 2160 0247 0C       		.byte	0xc
 2161 0248 0A       		.uleb128 0xa
 2162 0249 30020000 		.4byte	.LASF45
 2163 024d 05       		.byte	0x5
 2164 024e C5       		.byte	0xc5
 2165 024f 81000000 		.4byte	0x81
 2166 0253 0E       		.byte	0xe
 2167 0254 0A       		.uleb128 0xa
 2168 0255 B1030000 		.4byte	.LASF36
 2169 0259 05       		.byte	0x5
 2170 025a C6       		.byte	0xc6
 2171 025b 91020000 		.4byte	0x291
 2172 025f 0F       		.byte	0xf
 2173 0260 00       		.byte	0
 2174 0261 0C       		.uleb128 0xc
 2175 0262 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 53


 2176 0266 71020000 		.4byte	0x271
 2177 026a 0D       		.uleb128 0xd
 2178 026b EA000000 		.4byte	0xea
 2179 026f 01       		.byte	0x1
 2180 0270 00       		.byte	0
 2181 0271 0C       		.uleb128 0xc
 2182 0272 99000000 		.4byte	0x99
 2183 0276 81020000 		.4byte	0x281
 2184 027a 0D       		.uleb128 0xd
 2185 027b EA000000 		.4byte	0xea
 2186 027f 01       		.byte	0x1
 2187 0280 00       		.byte	0
 2188 0281 0C       		.uleb128 0xc
 2189 0282 81000000 		.4byte	0x81
 2190 0286 91020000 		.4byte	0x291
 2191 028a 0D       		.uleb128 0xd
 2192 028b EA000000 		.4byte	0xea
 2193 028f 01       		.byte	0x1
 2194 0290 00       		.byte	0
 2195 0291 0C       		.uleb128 0xc
 2196 0292 81000000 		.4byte	0x81
 2197 0296 A1020000 		.4byte	0x2a1
 2198 029a 0D       		.uleb128 0xd
 2199 029b EA000000 		.4byte	0xea
 2200 029f 00       		.byte	0
 2201 02a0 00       		.byte	0
 2202 02a1 09       		.uleb128 0x9
 2203 02a2 7E050000 		.4byte	.LASF46
 2204 02a6 10       		.byte	0x10
 2205 02a7 05       		.byte	0x5
 2206 02a8 CD       		.byte	0xcd
 2207 02a9 D2020000 		.4byte	0x2d2
 2208 02ad 0A       		.uleb128 0xa
 2209 02ae 68020000 		.4byte	.LASF47
 2210 02b2 05       		.byte	0x5
 2211 02b3 CE       		.byte	0xce
 2212 02b4 81000000 		.4byte	0x81
 2213 02b8 00       		.byte	0
 2214 02b9 0A       		.uleb128 0xa
 2215 02ba 75050000 		.4byte	.LASF48
 2216 02be 05       		.byte	0x5
 2217 02bf CF       		.byte	0xcf
 2218 02c0 81000000 		.4byte	0x81
 2219 02c4 01       		.byte	0x1
 2220 02c5 0A       		.uleb128 0xa
 2221 02c6 B1030000 		.4byte	.LASF36
 2222 02ca 05       		.byte	0x5
 2223 02cb D0       		.byte	0xd0
 2224 02cc AF010000 		.4byte	0x1af
 2225 02d0 02       		.byte	0x2
 2226 02d1 00       		.byte	0
 2227 02d2 09       		.uleb128 0x9
 2228 02d3 15000000 		.4byte	.LASF49
 2229 02d7 10       		.byte	0x10
 2230 02d8 05       		.byte	0x5
 2231 02d9 D7       		.byte	0xd7
 2232 02da 27030000 		.4byte	0x327
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 54


 2233 02de 0A       		.uleb128 0xa
 2234 02df 76060000 		.4byte	.LASF50
 2235 02e3 05       		.byte	0x5
 2236 02e4 D8       		.byte	0xd8
 2237 02e5 B1000000 		.4byte	0xb1
 2238 02e9 00       		.byte	0
 2239 02ea 0A       		.uleb128 0xa
 2240 02eb 2D040000 		.4byte	.LASF51
 2241 02ef 05       		.byte	0x5
 2242 02f0 D9       		.byte	0xd9
 2243 02f1 BD000000 		.4byte	0xbd
 2244 02f5 04       		.byte	0x4
 2245 02f6 0A       		.uleb128 0xa
 2246 02f7 BE030000 		.4byte	.LASF52
 2247 02fb 05       		.byte	0x5
 2248 02fc DA       		.byte	0xda
 2249 02fd BD000000 		.4byte	0xbd
 2250 0301 08       		.byte	0x8
 2251 0302 0A       		.uleb128 0xa
 2252 0303 CF030000 		.4byte	.LASF53
 2253 0307 05       		.byte	0x5
 2254 0308 DB       		.byte	0xdb
 2255 0309 81000000 		.4byte	0x81
 2256 030d 0C       		.byte	0xc
 2257 030e 0A       		.uleb128 0xa
 2258 030f 35060000 		.4byte	.LASF54
 2259 0313 05       		.byte	0x5
 2260 0314 DC       		.byte	0xdc
 2261 0315 81000000 		.4byte	0x81
 2262 0319 0D       		.byte	0xd
 2263 031a 0A       		.uleb128 0xa
 2264 031b B1030000 		.4byte	.LASF36
 2265 031f 05       		.byte	0x5
 2266 0320 DD       		.byte	0xdd
 2267 0321 81020000 		.4byte	0x281
 2268 0325 0E       		.byte	0xe
 2269 0326 00       		.byte	0
 2270 0327 09       		.uleb128 0x9
 2271 0328 3F000000 		.4byte	.LASF55
 2272 032c 60       		.byte	0x60
 2273 032d 05       		.byte	0x5
 2274 032e E7       		.byte	0xe7
 2275 032f 86030000 		.4byte	0x386
 2276 0333 0A       		.uleb128 0xa
 2277 0334 70050000 		.4byte	.LASF56
 2278 0338 05       		.byte	0x5
 2279 0339 E8       		.byte	0xe8
 2280 033a 81000000 		.4byte	0x81
 2281 033e 00       		.byte	0
 2282 033f 0A       		.uleb128 0xa
 2283 0340 B1030000 		.4byte	.LASF36
 2284 0344 05       		.byte	0x5
 2285 0345 E9       		.byte	0xe9
 2286 0346 86030000 		.4byte	0x386
 2287 034a 01       		.byte	0x1
 2288 034b 0B       		.uleb128 0xb
 2289 034c 64657600 		.ascii	"dev\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 55


 2290 0350 05       		.byte	0x5
 2291 0351 EA       		.byte	0xea
 2292 0352 7F010000 		.4byte	0x17f
 2293 0356 10       		.byte	0x10
 2294 0357 0A       		.uleb128 0xa
 2295 0358 04050000 		.4byte	.LASF57
 2296 035c 05       		.byte	0x5
 2297 035d EB       		.byte	0xeb
 2298 035e BF010000 		.4byte	0x1bf
 2299 0362 20       		.byte	0x20
 2300 0363 0B       		.uleb128 0xb
 2301 0364 656D6700 		.ascii	"emg\000"
 2302 0368 05       		.byte	0x5
 2303 0369 EC       		.byte	0xec
 2304 036a 18020000 		.4byte	0x218
 2305 036e 30       		.byte	0x30
 2306 036f 0B       		.uleb128 0xb
 2307 0370 4D5300   		.ascii	"MS\000"
 2308 0373 05       		.byte	0x5
 2309 0374 ED       		.byte	0xed
 2310 0375 A1020000 		.4byte	0x2a1
 2311 0379 40       		.byte	0x40
 2312 037a 0B       		.uleb128 0xb
 2313 037b 464200   		.ascii	"FB\000"
 2314 037e 05       		.byte	0x5
 2315 037f EE       		.byte	0xee
 2316 0380 D2020000 		.4byte	0x2d2
 2317 0384 50       		.byte	0x50
 2318 0385 00       		.byte	0
 2319 0386 0C       		.uleb128 0xc
 2320 0387 81000000 		.4byte	0x81
 2321 038b 96030000 		.4byte	0x396
 2322 038f 0D       		.uleb128 0xd
 2323 0390 EA000000 		.4byte	0xea
 2324 0394 0E       		.byte	0xe
 2325 0395 00       		.byte	0
 2326 0396 09       		.uleb128 0x9
 2327 0397 53050000 		.4byte	.LASF58
 2328 039b 08       		.byte	0x8
 2329 039c 05       		.byte	0x5
 2330 039d F5       		.byte	0xf5
 2331 039e BB030000 		.4byte	0x3bb
 2332 03a2 0A       		.uleb128 0xa
 2333 03a3 AC010000 		.4byte	.LASF59
 2334 03a7 05       		.byte	0x5
 2335 03a8 F6       		.byte	0xf6
 2336 03a9 B1000000 		.4byte	0xb1
 2337 03ad 00       		.byte	0
 2338 03ae 0A       		.uleb128 0xa
 2339 03af 2E050000 		.4byte	.LASF60
 2340 03b3 05       		.byte	0x5
 2341 03b4 F7       		.byte	0xf7
 2342 03b5 B1000000 		.4byte	0xb1
 2343 03b9 04       		.byte	0x4
 2344 03ba 00       		.byte	0
 2345 03bb 0E       		.uleb128 0xe
 2346 03bc B6050000 		.4byte	.LASF61
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 56


 2347 03c0 0C       		.byte	0xc
 2348 03c1 05       		.byte	0x5
 2349 03c2 5C01     		.2byte	0x15c
 2350 03c4 E3030000 		.4byte	0x3e3
 2351 03c8 0F       		.uleb128 0xf
 2352 03c9 656D6700 		.ascii	"emg\000"
 2353 03cd 05       		.byte	0x5
 2354 03ce 5D01     		.2byte	0x15d
 2355 03d0 E3030000 		.4byte	0x3e3
 2356 03d4 00       		.byte	0
 2357 03d5 10       		.uleb128 0x10
 2358 03d6 D5040000 		.4byte	.LASF62
 2359 03da 05       		.byte	0x5
 2360 03db 5E01     		.2byte	0x15e
 2361 03dd BD000000 		.4byte	0xbd
 2362 03e1 08       		.byte	0x8
 2363 03e2 00       		.byte	0
 2364 03e3 0C       		.uleb128 0xc
 2365 03e4 B1000000 		.4byte	0xb1
 2366 03e8 F3030000 		.4byte	0x3f3
 2367 03ec 0D       		.uleb128 0xd
 2368 03ed EA000000 		.4byte	0xea
 2369 03f1 01       		.byte	0x1
 2370 03f2 00       		.byte	0
 2371 03f3 11       		.uleb128 0x11
 2372 03f4 4F020000 		.4byte	.LASF63
 2373 03f8 01       		.byte	0x1
 2374 03f9 62       		.byte	0x62
 2375 03fa 00000000 		.4byte	.LFB64
 2376 03fe 18000000 		.4byte	.LFE64-.LFB64
 2377 0402 01       		.uleb128 0x1
 2378 0403 9C       		.byte	0x9c
 2379 0404 11       		.uleb128 0x11
 2380 0405 11040000 		.4byte	.LASF64
 2381 0409 01       		.byte	0x1
 2382 040a 6D       		.byte	0x6d
 2383 040b 00000000 		.4byte	.LFB65
 2384 040f 20000000 		.4byte	.LFE65-.LFB65
 2385 0413 01       		.uleb128 0x1
 2386 0414 9C       		.byte	0x9c
 2387 0415 12       		.uleb128 0x12
 2388 0416 DC010000 		.4byte	.LASF74
 2389 041a 01       		.byte	0x1
 2390 041b 86       		.byte	0x86
 2391 041c 00000000 		.4byte	.LFB66
 2392 0420 0C020000 		.4byte	.LFE66-.LFB66
 2393 0424 01       		.uleb128 0x1
 2394 0425 9C       		.byte	0x9c
 2395 0426 AA040000 		.4byte	0x4aa
 2396 042a 13       		.uleb128 0x13
 2397 042b 8E010000 		.4byte	.LASF65
 2398 042f 01       		.byte	0x1
 2399 0430 8B       		.byte	0x8b
 2400 0431 81000000 		.4byte	0x81
 2401 0435 05       		.uleb128 0x5
 2402 0436 03       		.byte	0x3
 2403 0437 00000000 		.4byte	state.9752
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 57


 2404 043b 13       		.uleb128 0x13
 2405 043c D9020000 		.4byte	.LASF66
 2406 0440 01       		.byte	0x1
 2407 0441 8E       		.byte	0x8e
 2408 0442 81000000 		.4byte	0x81
 2409 0446 05       		.uleb128 0x5
 2410 0447 03       		.byte	0x3
 2411 0448 08000000 		.4byte	data_packet_index.9753
 2412 044c 13       		.uleb128 0x13
 2413 044d 50060000 		.4byte	.LASF67
 2414 0451 01       		.byte	0x1
 2415 0452 8F       		.byte	0x8f
 2416 0453 81000000 		.4byte	0x81
 2417 0457 05       		.uleb128 0x5
 2418 0458 03       		.byte	0x3
 2419 0459 07000000 		.4byte	data_packet_length.9754
 2420 045d 13       		.uleb128 0x13
 2421 045e 63060000 		.4byte	.LASF68
 2422 0462 01       		.byte	0x1
 2423 0463 90       		.byte	0x90
 2424 0464 6F010000 		.4byte	0x16f
 2425 0468 05       		.uleb128 0x5
 2426 0469 03       		.byte	0x3
 2427 046a 0C000000 		.4byte	data_packet_buffer.9755
 2428 046e 13       		.uleb128 0x13
 2429 046f 7F040000 		.4byte	.LASF69
 2430 0473 01       		.byte	0x1
 2431 0474 91       		.byte	0x91
 2432 0475 AA040000 		.4byte	0x4aa
 2433 0479 05       		.uleb128 0x5
 2434 047a 03       		.byte	0x3
 2435 047b 04000000 		.4byte	rx_queue.9756
 2436 047f 13       		.uleb128 0x13
 2437 0480 88020000 		.4byte	.LASF70
 2438 0484 01       		.byte	0x1
 2439 0485 94       		.byte	0x94
 2440 0486 81000000 		.4byte	0x81
 2441 048a 02       		.uleb128 0x2
 2442 048b 91       		.byte	0x91
 2443 048c 75       		.sleb128 -11
 2444 048d 13       		.uleb128 0x13
 2445 048e 04040000 		.4byte	.LASF71
 2446 0492 01       		.byte	0x1
 2447 0493 95       		.byte	0x95
 2448 0494 81000000 		.4byte	0x81
 2449 0498 02       		.uleb128 0x2
 2450 0499 91       		.byte	0x91
 2451 049a 77       		.sleb128 -9
 2452 049b 13       		.uleb128 0x13
 2453 049c F6030000 		.4byte	.LASF72
 2454 04a0 01       		.byte	0x1
 2455 04a1 96       		.byte	0x96
 2456 04a2 81000000 		.4byte	0x81
 2457 04a6 02       		.uleb128 0x2
 2458 04a7 91       		.byte	0x91
 2459 04a8 76       		.sleb128 -10
 2460 04a9 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 58


 2461 04aa 0C       		.uleb128 0xc
 2462 04ab 81000000 		.4byte	0x81
 2463 04af BA040000 		.4byte	0x4ba
 2464 04b3 0D       		.uleb128 0xd
 2465 04b4 EA000000 		.4byte	0xea
 2466 04b8 02       		.byte	0x2
 2467 04b9 00       		.byte	0
 2468 04ba 14       		.uleb128 0x14
 2469 04bb C6020000 		.4byte	.LASF73
 2470 04bf 01       		.byte	0x1
 2471 04c0 0D01     		.2byte	0x10d
 2472 04c2 00000000 		.4byte	.LFB67
 2473 04c6 08020000 		.4byte	.LFE67-.LFB67
 2474 04ca 01       		.uleb128 0x1
 2475 04cb 9C       		.byte	0x9c
 2476 04cc 15       		.uleb128 0x15
 2477 04cd 6D010000 		.4byte	.LASF75
 2478 04d1 01       		.byte	0x1
 2479 04d2 8C01     		.2byte	0x18c
 2480 04d4 00000000 		.4byte	.LFB68
 2481 04d8 F0020000 		.4byte	.LFE68-.LFB68
 2482 04dc 01       		.uleb128 0x1
 2483 04dd 9C       		.byte	0x9c
 2484 04de 21050000 		.4byte	0x521
 2485 04e2 16       		.uleb128 0x16
 2486 04e3 1A050000 		.4byte	.LASF76
 2487 04e7 01       		.byte	0x1
 2488 04e8 8E01     		.2byte	0x18e
 2489 04ea B1000000 		.4byte	0xb1
 2490 04ee 02       		.uleb128 0x2
 2491 04ef 91       		.byte	0x91
 2492 04f0 70       		.sleb128 -16
 2493 04f1 16       		.uleb128 0x16
 2494 04f2 24050000 		.4byte	.LASF77
 2495 04f6 01       		.byte	0x1
 2496 04f7 8E01     		.2byte	0x18e
 2497 04f9 B1000000 		.4byte	0xb1
 2498 04fd 02       		.uleb128 0x2
 2499 04fe 91       		.byte	0x91
 2500 04ff 6C       		.sleb128 -20
 2501 0500 17       		.uleb128 0x17
 2502 0501 534800   		.ascii	"SH\000"
 2503 0504 01       		.byte	0x1
 2504 0505 8F01     		.2byte	0x18f
 2505 0507 21050000 		.4byte	0x521
 2506 050b 02       		.uleb128 0x2
 2507 050c 91       		.byte	0x91
 2508 050d 74       		.sleb128 -12
 2509 050e 16       		.uleb128 0x16
 2510 050f F3060000 		.4byte	.LASF78
 2511 0513 01       		.byte	0x1
 2512 0514 9101     		.2byte	0x191
 2513 0516 81000000 		.4byte	0x81
 2514 051a 05       		.uleb128 0x5
 2515 051b 03       		.byte	0x3
 2516 051c 8C000000 		.4byte	current_emg.9777
 2517 0520 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 59


 2518 0521 18       		.uleb128 0x18
 2519 0522 04       		.byte	0x4
 2520 0523 BF010000 		.4byte	0x1bf
 2521 0527 19       		.uleb128 0x19
 2522 0528 62040000 		.4byte	.LASF81
 2523 052c 01       		.byte	0x1
 2524 052d 1902     		.2byte	0x219
 2525 052f 00000000 		.4byte	.LFB69
 2526 0533 C0000000 		.4byte	.LFE69-.LFB69
 2527 0537 01       		.uleb128 0x1
 2528 0538 9C       		.byte	0x9c
 2529 0539 6E050000 		.4byte	0x56e
 2530 053d 1A       		.uleb128 0x1a
 2531 053e 69647800 		.ascii	"idx\000"
 2532 0542 01       		.byte	0x1
 2533 0543 1902     		.2byte	0x219
 2534 0545 81000000 		.4byte	0x81
 2535 0549 02       		.uleb128 0x2
 2536 054a 91       		.byte	0x91
 2537 054b 6F       		.sleb128 -17
 2538 054c 16       		.uleb128 0x16
 2539 054d 22070000 		.4byte	.LASF79
 2540 0551 01       		.byte	0x1
 2541 0552 1B02     		.2byte	0x21b
 2542 0554 A5000000 		.4byte	0xa5
 2543 0558 02       		.uleb128 0x2
 2544 0559 91       		.byte	0x91
 2545 055a 76       		.sleb128 -10
 2546 055b 16       		.uleb128 0x16
 2547 055c E3060000 		.4byte	.LASF80
 2548 0560 01       		.byte	0x1
 2549 0561 1F02     		.2byte	0x21f
 2550 0563 81020000 		.4byte	0x281
 2551 0567 05       		.uleb128 0x5
 2552 0568 03       		.byte	0x3
 2553 0569 90000000 		.4byte	motor_dir.9799
 2554 056d 00       		.byte	0
 2555 056e 1B       		.uleb128 0x1b
 2556 056f E8000000 		.4byte	.LASF82
 2557 0573 01       		.byte	0x1
 2558 0574 4C02     		.2byte	0x24c
 2559 0576 00000000 		.4byte	.LFB70
 2560 057a 1A000000 		.4byte	.LFE70-.LFB70
 2561 057e 01       		.uleb128 0x1
 2562 057f 9C       		.byte	0x9c
 2563 0580 A3050000 		.4byte	0x5a3
 2564 0584 1C       		.uleb128 0x1c
 2565 0585 29020000 		.4byte	.LASF83
 2566 0589 01       		.byte	0x1
 2567 058a 4C02     		.2byte	0x24c
 2568 058c 81000000 		.4byte	0x81
 2569 0590 02       		.uleb128 0x2
 2570 0591 91       		.byte	0x91
 2571 0592 77       		.sleb128 -9
 2572 0593 1C       		.uleb128 0x1c
 2573 0594 0E050000 		.4byte	.LASF84
 2574 0598 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 60


 2575 0599 4C02     		.2byte	0x24c
 2576 059b 81000000 		.4byte	0x81
 2577 059f 02       		.uleb128 0x2
 2578 05a0 91       		.byte	0x91
 2579 05a1 76       		.sleb128 -10
 2580 05a2 00       		.byte	0
 2581 05a3 1D       		.uleb128 0x1d
 2582 05a4 12070000 		.4byte	.LASF85
 2583 05a8 01       		.byte	0x1
 2584 05a9 5402     		.2byte	0x254
 2585 05ab 00000000 		.4byte	.LFB71
 2586 05af E8010000 		.4byte	.LFE71-.LFB71
 2587 05b3 01       		.uleb128 0x1
 2588 05b4 9C       		.byte	0x9c
 2589 05b5 DB050000 		.4byte	0x5db
 2590 05b9 16       		.uleb128 0x16
 2591 05ba E2000000 		.4byte	.LASF86
 2592 05be 01       		.byte	0x1
 2593 05bf 6802     		.2byte	0x268
 2594 05c1 B1000000 		.4byte	0xb1
 2595 05c5 02       		.uleb128 0x2
 2596 05c6 91       		.byte	0x91
 2597 05c7 6C       		.sleb128 -20
 2598 05c8 17       		.uleb128 0x17
 2599 05c9 69647800 		.ascii	"idx\000"
 2600 05cd 01       		.byte	0x1
 2601 05ce 6A02     		.2byte	0x26a
 2602 05d0 81000000 		.4byte	0x81
 2603 05d4 05       		.uleb128 0x5
 2604 05d5 03       		.byte	0x3
 2605 05d6 92000000 		.4byte	idx.9810
 2606 05da 00       		.byte	0
 2607 05db 1E       		.uleb128 0x1e
 2608 05dc 9B050000 		.4byte	.LASF89
 2609 05e0 01       		.byte	0x1
 2610 05e1 B702     		.2byte	0x2b7
 2611 05e3 00000000 		.4byte	.LFB72
 2612 05e7 0C000000 		.4byte	.LFE72-.LFB72
 2613 05eb 01       		.uleb128 0x1
 2614 05ec 9C       		.byte	0x9c
 2615 05ed 1B       		.uleb128 0x1b
 2616 05ee FE050000 		.4byte	.LASF87
 2617 05f2 01       		.byte	0x1
 2618 05f3 BF02     		.2byte	0x2bf
 2619 05f5 00000000 		.4byte	.LFB73
 2620 05f9 14000000 		.4byte	.LFE73-.LFB73
 2621 05fd 01       		.uleb128 0x1
 2622 05fe 9C       		.byte	0x9c
 2623 05ff 13060000 		.4byte	0x613
 2624 0603 1C       		.uleb128 0x1c
 2625 0604 07000000 		.4byte	.LASF88
 2626 0608 01       		.byte	0x1
 2627 0609 BF02     		.2byte	0x2bf
 2628 060b 81000000 		.4byte	0x81
 2629 060f 02       		.uleb128 0x2
 2630 0610 91       		.byte	0x91
 2631 0611 77       		.sleb128 -9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 61


 2632 0612 00       		.byte	0
 2633 0613 1E       		.uleb128 0x1e
 2634 0614 A7040000 		.4byte	.LASF90
 2635 0618 01       		.byte	0x1
 2636 0619 C702     		.2byte	0x2c7
 2637 061b 00000000 		.4byte	.LFB74
 2638 061f 0C000000 		.4byte	.LFE74-.LFB74
 2639 0623 01       		.uleb128 0x1
 2640 0624 9C       		.byte	0x9c
 2641 0625 1E       		.uleb128 0x1e
 2642 0626 5D050000 		.4byte	.LASF91
 2643 062a 01       		.byte	0x1
 2644 062b CF02     		.2byte	0x2cf
 2645 062d 00000000 		.4byte	.LFB75
 2646 0631 0C000000 		.4byte	.LFE75-.LFB75
 2647 0635 01       		.uleb128 0x1
 2648 0636 9C       		.byte	0x9c
 2649 0637 0C       		.uleb128 0xc
 2650 0638 47060000 		.4byte	0x647
 2651 063c 47060000 		.4byte	0x647
 2652 0640 0D       		.uleb128 0xd
 2653 0641 EA000000 		.4byte	0xea
 2654 0645 1C       		.byte	0x1c
 2655 0646 00       		.byte	0
 2656 0647 1F       		.uleb128 0x1f
 2657 0648 81000000 		.4byte	0x81
 2658 064c 13       		.uleb128 0x13
 2659 064d 20000000 		.4byte	.LASF92
 2660 0651 01       		.byte	0x1
 2661 0652 40       		.byte	0x40
 2662 0653 5D060000 		.4byte	0x65d
 2663 0657 05       		.uleb128 0x5
 2664 0658 03       		.byte	0x3
 2665 0659 00000000 		.4byte	pwm_preload_values
 2666 065d 1F       		.uleb128 0x1f
 2667 065e 37060000 		.4byte	0x637
 2668 0662 20       		.uleb128 0x20
 2669 0663 27010000 		.4byte	.LASF93
 2670 0667 06       		.byte	0x6
 2671 0668 1207     		.2byte	0x712
 2672 066a 6E060000 		.4byte	0x66e
 2673 066e 06       		.uleb128 0x6
 2674 066f 76000000 		.4byte	0x76
 2675 0673 20       		.uleb128 0x20
 2676 0674 23060000 		.4byte	.LASF94
 2677 0678 05       		.byte	0x5
 2678 0679 6D01     		.2byte	0x16d
 2679 067b BB030000 		.4byte	0x3bb
 2680 067f 20       		.uleb128 0x20
 2681 0680 8D050000 		.4byte	.LASF95
 2682 0684 05       		.byte	0x5
 2683 0685 6D01     		.2byte	0x16d
 2684 0687 BB030000 		.4byte	0x3bb
 2685 068b 20       		.uleb128 0x20
 2686 068c 9D010000 		.4byte	.LASF96
 2687 0690 05       		.byte	0x5
 2688 0691 6601     		.2byte	0x166
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 62


 2689 0693 32010000 		.4byte	0x132
 2690 0697 20       		.uleb128 0x20
 2691 0698 88040000 		.4byte	.LASF97
 2692 069c 05       		.byte	0x5
 2693 069d 6C01     		.2byte	0x16c
 2694 069f 27030000 		.4byte	0x327
 2695 06a3 20       		.uleb128 0x20
 2696 06a4 0F000000 		.4byte	.LASF98
 2697 06a8 05       		.byte	0x5
 2698 06a9 6C01     		.2byte	0x16c
 2699 06ab 27030000 		.4byte	0x327
 2700 06af 20       		.uleb128 0x20
 2701 06b0 56010000 		.4byte	.LASF99
 2702 06b4 05       		.byte	0x5
 2703 06b5 6E01     		.2byte	0x16e
 2704 06b7 8D000000 		.4byte	0x8d
 2705 06bb 20       		.uleb128 0x20
 2706 06bc 8E040000 		.4byte	.LASF100
 2707 06c0 05       		.byte	0x5
 2708 06c1 6F01     		.2byte	0x16f
 2709 06c3 8D000000 		.4byte	0x8d
 2710 06c7 20       		.uleb128 0x20
 2711 06c8 D7000000 		.4byte	.LASF101
 2712 06cc 05       		.byte	0x5
 2713 06cd 7001     		.2byte	0x170
 2714 06cf BD000000 		.4byte	0xbd
 2715 06d3 20       		.uleb128 0x20
 2716 06d4 82010000 		.4byte	.LASF102
 2717 06d8 05       		.byte	0x5
 2718 06d9 6901     		.2byte	0x169
 2719 06db B1000000 		.4byte	0xb1
 2720 06df 20       		.uleb128 0x20
 2721 06e0 E7050000 		.4byte	.LASF103
 2722 06e4 05       		.byte	0x5
 2723 06e5 6701     		.2byte	0x167
 2724 06e7 81000000 		.4byte	0x81
 2725 06eb 20       		.uleb128 0x20
 2726 06ec 9C020000 		.4byte	.LASF104
 2727 06f0 05       		.byte	0x5
 2728 06f1 1A01     		.2byte	0x11a
 2729 06f3 81000000 		.4byte	0x81
 2730 06f7 0C       		.uleb128 0xc
 2731 06f8 A5000000 		.4byte	0xa5
 2732 06fc 07070000 		.4byte	0x707
 2733 0700 0D       		.uleb128 0xd
 2734 0701 EA000000 		.4byte	0xea
 2735 0705 02       		.byte	0x2
 2736 0706 00       		.byte	0
 2737 0707 20       		.uleb128 0x20
 2738 0708 B6010000 		.4byte	.LASF105
 2739 070c 05       		.byte	0x5
 2740 070d 2401     		.2byte	0x124
 2741 070f F7060000 		.4byte	0x6f7
 2742 0713 20       		.uleb128 0x20
 2743 0714 FF060000 		.4byte	.LASF106
 2744 0718 05       		.byte	0x5
 2745 0719 6A01     		.2byte	0x16a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 63


 2746 071b 81000000 		.4byte	0x81
 2747 071f 20       		.uleb128 0x20
 2748 0720 C2050000 		.4byte	.LASF107
 2749 0724 05       		.byte	0x5
 2750 0725 5401     		.2byte	0x154
 2751 0727 B1000000 		.4byte	0xb1
 2752 072b 20       		.uleb128 0x20
 2753 072c 13010000 		.4byte	.LASF108
 2754 0730 05       		.byte	0x5
 2755 0731 5401     		.2byte	0x154
 2756 0733 B1000000 		.4byte	0xb1
 2757 0737 20       		.uleb128 0x20
 2758 0738 04030000 		.4byte	.LASF109
 2759 073c 05       		.byte	0x5
 2760 073d 5401     		.2byte	0x154
 2761 073f B1000000 		.4byte	0xb1
 2762 0743 20       		.uleb128 0x20
 2763 0744 0B070000 		.4byte	.LASF110
 2764 0748 05       		.byte	0x5
 2765 0749 5501     		.2byte	0x155
 2766 074b 81020000 		.4byte	0x281
 2767 074f 20       		.uleb128 0x20
 2768 0750 A2010000 		.4byte	.LASF111
 2769 0754 05       		.byte	0x5
 2770 0755 5501     		.2byte	0x155
 2771 0757 81020000 		.4byte	0x281
 2772 075b 20       		.uleb128 0x20
 2773 075c 42040000 		.4byte	.LASF112
 2774 0760 05       		.byte	0x5
 2775 0761 5501     		.2byte	0x155
 2776 0763 81020000 		.4byte	0x281
 2777 0767 20       		.uleb128 0x20
 2778 0768 FB040000 		.4byte	.LASF113
 2779 076c 05       		.byte	0x5
 2780 076d 5601     		.2byte	0x156
 2781 076f 81000000 		.4byte	0x81
 2782 0773 20       		.uleb128 0x20
 2783 0774 90020000 		.4byte	.LASF114
 2784 0778 05       		.byte	0x5
 2785 0779 5601     		.2byte	0x156
 2786 077b 81000000 		.4byte	0x81
 2787 077f 20       		.uleb128 0x20
 2788 0780 DE040000 		.4byte	.LASF115
 2789 0784 05       		.byte	0x5
 2790 0785 5601     		.2byte	0x156
 2791 0787 81000000 		.4byte	0x81
 2792 078b 20       		.uleb128 0x20
 2793 078c EE010000 		.4byte	.LASF116
 2794 0790 05       		.byte	0x5
 2795 0791 6B01     		.2byte	0x16b
 2796 0793 B1000000 		.4byte	0xb1
 2797 0797 0C       		.uleb128 0xc
 2798 0798 96030000 		.4byte	0x396
 2799 079c A7070000 		.4byte	0x7a7
 2800 07a0 0D       		.uleb128 0xd
 2801 07a1 EA000000 		.4byte	0xea
 2802 07a5 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 64


 2803 07a6 00       		.byte	0
 2804 07a7 20       		.uleb128 0x20
 2805 07a8 8B060000 		.4byte	.LASF117
 2806 07ac 05       		.byte	0x5
 2807 07ad 7A01     		.2byte	0x17a
 2808 07af 97070000 		.4byte	0x797
 2809 07b3 00       		.byte	0
 2810              		.section	.debug_abbrev,"",%progbits
 2811              	.Ldebug_abbrev0:
 2812 0000 01       		.uleb128 0x1
 2813 0001 11       		.uleb128 0x11
 2814 0002 01       		.byte	0x1
 2815 0003 25       		.uleb128 0x25
 2816 0004 0E       		.uleb128 0xe
 2817 0005 13       		.uleb128 0x13
 2818 0006 0B       		.uleb128 0xb
 2819 0007 03       		.uleb128 0x3
 2820 0008 0E       		.uleb128 0xe
 2821 0009 1B       		.uleb128 0x1b
 2822 000a 0E       		.uleb128 0xe
 2823 000b 55       		.uleb128 0x55
 2824 000c 17       		.uleb128 0x17
 2825 000d 11       		.uleb128 0x11
 2826 000e 01       		.uleb128 0x1
 2827 000f 10       		.uleb128 0x10
 2828 0010 17       		.uleb128 0x17
 2829 0011 00       		.byte	0
 2830 0012 00       		.byte	0
 2831 0013 02       		.uleb128 0x2
 2832 0014 24       		.uleb128 0x24
 2833 0015 00       		.byte	0
 2834 0016 0B       		.uleb128 0xb
 2835 0017 0B       		.uleb128 0xb
 2836 0018 3E       		.uleb128 0x3e
 2837 0019 0B       		.uleb128 0xb
 2838 001a 03       		.uleb128 0x3
 2839 001b 0E       		.uleb128 0xe
 2840 001c 00       		.byte	0
 2841 001d 00       		.byte	0
 2842 001e 03       		.uleb128 0x3
 2843 001f 16       		.uleb128 0x16
 2844 0020 00       		.byte	0
 2845 0021 03       		.uleb128 0x3
 2846 0022 0E       		.uleb128 0xe
 2847 0023 3A       		.uleb128 0x3a
 2848 0024 0B       		.uleb128 0xb
 2849 0025 3B       		.uleb128 0x3b
 2850 0026 0B       		.uleb128 0xb
 2851 0027 49       		.uleb128 0x49
 2852 0028 13       		.uleb128 0x13
 2853 0029 00       		.byte	0
 2854 002a 00       		.byte	0
 2855 002b 04       		.uleb128 0x4
 2856 002c 24       		.uleb128 0x24
 2857 002d 00       		.byte	0
 2858 002e 0B       		.uleb128 0xb
 2859 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 65


 2860 0030 3E       		.uleb128 0x3e
 2861 0031 0B       		.uleb128 0xb
 2862 0032 03       		.uleb128 0x3
 2863 0033 08       		.uleb128 0x8
 2864 0034 00       		.byte	0
 2865 0035 00       		.byte	0
 2866 0036 05       		.uleb128 0x5
 2867 0037 16       		.uleb128 0x16
 2868 0038 00       		.byte	0
 2869 0039 03       		.uleb128 0x3
 2870 003a 0E       		.uleb128 0xe
 2871 003b 3A       		.uleb128 0x3a
 2872 003c 0B       		.uleb128 0xb
 2873 003d 3B       		.uleb128 0x3b
 2874 003e 05       		.uleb128 0x5
 2875 003f 49       		.uleb128 0x49
 2876 0040 13       		.uleb128 0x13
 2877 0041 00       		.byte	0
 2878 0042 00       		.byte	0
 2879 0043 06       		.uleb128 0x6
 2880 0044 35       		.uleb128 0x35
 2881 0045 00       		.byte	0
 2882 0046 49       		.uleb128 0x49
 2883 0047 13       		.uleb128 0x13
 2884 0048 00       		.byte	0
 2885 0049 00       		.byte	0
 2886 004a 07       		.uleb128 0x7
 2887 004b 04       		.uleb128 0x4
 2888 004c 01       		.byte	0x1
 2889 004d 03       		.uleb128 0x3
 2890 004e 0E       		.uleb128 0xe
 2891 004f 0B       		.uleb128 0xb
 2892 0050 0B       		.uleb128 0xb
 2893 0051 49       		.uleb128 0x49
 2894 0052 13       		.uleb128 0x13
 2895 0053 3A       		.uleb128 0x3a
 2896 0054 0B       		.uleb128 0xb
 2897 0055 3B       		.uleb128 0x3b
 2898 0056 0B       		.uleb128 0xb
 2899 0057 01       		.uleb128 0x1
 2900 0058 13       		.uleb128 0x13
 2901 0059 00       		.byte	0
 2902 005a 00       		.byte	0
 2903 005b 08       		.uleb128 0x8
 2904 005c 28       		.uleb128 0x28
 2905 005d 00       		.byte	0
 2906 005e 03       		.uleb128 0x3
 2907 005f 0E       		.uleb128 0xe
 2908 0060 1C       		.uleb128 0x1c
 2909 0061 0B       		.uleb128 0xb
 2910 0062 00       		.byte	0
 2911 0063 00       		.byte	0
 2912 0064 09       		.uleb128 0x9
 2913 0065 13       		.uleb128 0x13
 2914 0066 01       		.byte	0x1
 2915 0067 03       		.uleb128 0x3
 2916 0068 0E       		.uleb128 0xe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 66


 2917 0069 0B       		.uleb128 0xb
 2918 006a 0B       		.uleb128 0xb
 2919 006b 3A       		.uleb128 0x3a
 2920 006c 0B       		.uleb128 0xb
 2921 006d 3B       		.uleb128 0x3b
 2922 006e 0B       		.uleb128 0xb
 2923 006f 01       		.uleb128 0x1
 2924 0070 13       		.uleb128 0x13
 2925 0071 00       		.byte	0
 2926 0072 00       		.byte	0
 2927 0073 0A       		.uleb128 0xa
 2928 0074 0D       		.uleb128 0xd
 2929 0075 00       		.byte	0
 2930 0076 03       		.uleb128 0x3
 2931 0077 0E       		.uleb128 0xe
 2932 0078 3A       		.uleb128 0x3a
 2933 0079 0B       		.uleb128 0xb
 2934 007a 3B       		.uleb128 0x3b
 2935 007b 0B       		.uleb128 0xb
 2936 007c 49       		.uleb128 0x49
 2937 007d 13       		.uleb128 0x13
 2938 007e 38       		.uleb128 0x38
 2939 007f 0B       		.uleb128 0xb
 2940 0080 00       		.byte	0
 2941 0081 00       		.byte	0
 2942 0082 0B       		.uleb128 0xb
 2943 0083 0D       		.uleb128 0xd
 2944 0084 00       		.byte	0
 2945 0085 03       		.uleb128 0x3
 2946 0086 08       		.uleb128 0x8
 2947 0087 3A       		.uleb128 0x3a
 2948 0088 0B       		.uleb128 0xb
 2949 0089 3B       		.uleb128 0x3b
 2950 008a 0B       		.uleb128 0xb
 2951 008b 49       		.uleb128 0x49
 2952 008c 13       		.uleb128 0x13
 2953 008d 38       		.uleb128 0x38
 2954 008e 0B       		.uleb128 0xb
 2955 008f 00       		.byte	0
 2956 0090 00       		.byte	0
 2957 0091 0C       		.uleb128 0xc
 2958 0092 01       		.uleb128 0x1
 2959 0093 01       		.byte	0x1
 2960 0094 49       		.uleb128 0x49
 2961 0095 13       		.uleb128 0x13
 2962 0096 01       		.uleb128 0x1
 2963 0097 13       		.uleb128 0x13
 2964 0098 00       		.byte	0
 2965 0099 00       		.byte	0
 2966 009a 0D       		.uleb128 0xd
 2967 009b 21       		.uleb128 0x21
 2968 009c 00       		.byte	0
 2969 009d 49       		.uleb128 0x49
 2970 009e 13       		.uleb128 0x13
 2971 009f 2F       		.uleb128 0x2f
 2972 00a0 0B       		.uleb128 0xb
 2973 00a1 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 67


 2974 00a2 00       		.byte	0
 2975 00a3 0E       		.uleb128 0xe
 2976 00a4 13       		.uleb128 0x13
 2977 00a5 01       		.byte	0x1
 2978 00a6 03       		.uleb128 0x3
 2979 00a7 0E       		.uleb128 0xe
 2980 00a8 0B       		.uleb128 0xb
 2981 00a9 0B       		.uleb128 0xb
 2982 00aa 3A       		.uleb128 0x3a
 2983 00ab 0B       		.uleb128 0xb
 2984 00ac 3B       		.uleb128 0x3b
 2985 00ad 05       		.uleb128 0x5
 2986 00ae 01       		.uleb128 0x1
 2987 00af 13       		.uleb128 0x13
 2988 00b0 00       		.byte	0
 2989 00b1 00       		.byte	0
 2990 00b2 0F       		.uleb128 0xf
 2991 00b3 0D       		.uleb128 0xd
 2992 00b4 00       		.byte	0
 2993 00b5 03       		.uleb128 0x3
 2994 00b6 08       		.uleb128 0x8
 2995 00b7 3A       		.uleb128 0x3a
 2996 00b8 0B       		.uleb128 0xb
 2997 00b9 3B       		.uleb128 0x3b
 2998 00ba 05       		.uleb128 0x5
 2999 00bb 49       		.uleb128 0x49
 3000 00bc 13       		.uleb128 0x13
 3001 00bd 38       		.uleb128 0x38
 3002 00be 0B       		.uleb128 0xb
 3003 00bf 00       		.byte	0
 3004 00c0 00       		.byte	0
 3005 00c1 10       		.uleb128 0x10
 3006 00c2 0D       		.uleb128 0xd
 3007 00c3 00       		.byte	0
 3008 00c4 03       		.uleb128 0x3
 3009 00c5 0E       		.uleb128 0xe
 3010 00c6 3A       		.uleb128 0x3a
 3011 00c7 0B       		.uleb128 0xb
 3012 00c8 3B       		.uleb128 0x3b
 3013 00c9 05       		.uleb128 0x5
 3014 00ca 49       		.uleb128 0x49
 3015 00cb 13       		.uleb128 0x13
 3016 00cc 38       		.uleb128 0x38
 3017 00cd 0B       		.uleb128 0xb
 3018 00ce 00       		.byte	0
 3019 00cf 00       		.byte	0
 3020 00d0 11       		.uleb128 0x11
 3021 00d1 2E       		.uleb128 0x2e
 3022 00d2 00       		.byte	0
 3023 00d3 3F       		.uleb128 0x3f
 3024 00d4 19       		.uleb128 0x19
 3025 00d5 03       		.uleb128 0x3
 3026 00d6 0E       		.uleb128 0xe
 3027 00d7 3A       		.uleb128 0x3a
 3028 00d8 0B       		.uleb128 0xb
 3029 00d9 3B       		.uleb128 0x3b
 3030 00da 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 68


 3031 00db 27       		.uleb128 0x27
 3032 00dc 19       		.uleb128 0x19
 3033 00dd 11       		.uleb128 0x11
 3034 00de 01       		.uleb128 0x1
 3035 00df 12       		.uleb128 0x12
 3036 00e0 06       		.uleb128 0x6
 3037 00e1 40       		.uleb128 0x40
 3038 00e2 18       		.uleb128 0x18
 3039 00e3 9742     		.uleb128 0x2117
 3040 00e5 19       		.uleb128 0x19
 3041 00e6 00       		.byte	0
 3042 00e7 00       		.byte	0
 3043 00e8 12       		.uleb128 0x12
 3044 00e9 2E       		.uleb128 0x2e
 3045 00ea 01       		.byte	0x1
 3046 00eb 3F       		.uleb128 0x3f
 3047 00ec 19       		.uleb128 0x19
 3048 00ed 03       		.uleb128 0x3
 3049 00ee 0E       		.uleb128 0xe
 3050 00ef 3A       		.uleb128 0x3a
 3051 00f0 0B       		.uleb128 0xb
 3052 00f1 3B       		.uleb128 0x3b
 3053 00f2 0B       		.uleb128 0xb
 3054 00f3 11       		.uleb128 0x11
 3055 00f4 01       		.uleb128 0x1
 3056 00f5 12       		.uleb128 0x12
 3057 00f6 06       		.uleb128 0x6
 3058 00f7 40       		.uleb128 0x40
 3059 00f8 18       		.uleb128 0x18
 3060 00f9 9642     		.uleb128 0x2116
 3061 00fb 19       		.uleb128 0x19
 3062 00fc 01       		.uleb128 0x1
 3063 00fd 13       		.uleb128 0x13
 3064 00fe 00       		.byte	0
 3065 00ff 00       		.byte	0
 3066 0100 13       		.uleb128 0x13
 3067 0101 34       		.uleb128 0x34
 3068 0102 00       		.byte	0
 3069 0103 03       		.uleb128 0x3
 3070 0104 0E       		.uleb128 0xe
 3071 0105 3A       		.uleb128 0x3a
 3072 0106 0B       		.uleb128 0xb
 3073 0107 3B       		.uleb128 0x3b
 3074 0108 0B       		.uleb128 0xb
 3075 0109 49       		.uleb128 0x49
 3076 010a 13       		.uleb128 0x13
 3077 010b 02       		.uleb128 0x2
 3078 010c 18       		.uleb128 0x18
 3079 010d 00       		.byte	0
 3080 010e 00       		.byte	0
 3081 010f 14       		.uleb128 0x14
 3082 0110 2E       		.uleb128 0x2e
 3083 0111 00       		.byte	0
 3084 0112 3F       		.uleb128 0x3f
 3085 0113 19       		.uleb128 0x19
 3086 0114 03       		.uleb128 0x3
 3087 0115 0E       		.uleb128 0xe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 69


 3088 0116 3A       		.uleb128 0x3a
 3089 0117 0B       		.uleb128 0xb
 3090 0118 3B       		.uleb128 0x3b
 3091 0119 05       		.uleb128 0x5
 3092 011a 27       		.uleb128 0x27
 3093 011b 19       		.uleb128 0x19
 3094 011c 11       		.uleb128 0x11
 3095 011d 01       		.uleb128 0x1
 3096 011e 12       		.uleb128 0x12
 3097 011f 06       		.uleb128 0x6
 3098 0120 40       		.uleb128 0x40
 3099 0121 18       		.uleb128 0x18
 3100 0122 9642     		.uleb128 0x2116
 3101 0124 19       		.uleb128 0x19
 3102 0125 00       		.byte	0
 3103 0126 00       		.byte	0
 3104 0127 15       		.uleb128 0x15
 3105 0128 2E       		.uleb128 0x2e
 3106 0129 01       		.byte	0x1
 3107 012a 3F       		.uleb128 0x3f
 3108 012b 19       		.uleb128 0x19
 3109 012c 03       		.uleb128 0x3
 3110 012d 0E       		.uleb128 0xe
 3111 012e 3A       		.uleb128 0x3a
 3112 012f 0B       		.uleb128 0xb
 3113 0130 3B       		.uleb128 0x3b
 3114 0131 05       		.uleb128 0x5
 3115 0132 11       		.uleb128 0x11
 3116 0133 01       		.uleb128 0x1
 3117 0134 12       		.uleb128 0x12
 3118 0135 06       		.uleb128 0x6
 3119 0136 40       		.uleb128 0x40
 3120 0137 18       		.uleb128 0x18
 3121 0138 9742     		.uleb128 0x2117
 3122 013a 19       		.uleb128 0x19
 3123 013b 01       		.uleb128 0x1
 3124 013c 13       		.uleb128 0x13
 3125 013d 00       		.byte	0
 3126 013e 00       		.byte	0
 3127 013f 16       		.uleb128 0x16
 3128 0140 34       		.uleb128 0x34
 3129 0141 00       		.byte	0
 3130 0142 03       		.uleb128 0x3
 3131 0143 0E       		.uleb128 0xe
 3132 0144 3A       		.uleb128 0x3a
 3133 0145 0B       		.uleb128 0xb
 3134 0146 3B       		.uleb128 0x3b
 3135 0147 05       		.uleb128 0x5
 3136 0148 49       		.uleb128 0x49
 3137 0149 13       		.uleb128 0x13
 3138 014a 02       		.uleb128 0x2
 3139 014b 18       		.uleb128 0x18
 3140 014c 00       		.byte	0
 3141 014d 00       		.byte	0
 3142 014e 17       		.uleb128 0x17
 3143 014f 34       		.uleb128 0x34
 3144 0150 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 70


 3145 0151 03       		.uleb128 0x3
 3146 0152 08       		.uleb128 0x8
 3147 0153 3A       		.uleb128 0x3a
 3148 0154 0B       		.uleb128 0xb
 3149 0155 3B       		.uleb128 0x3b
 3150 0156 05       		.uleb128 0x5
 3151 0157 49       		.uleb128 0x49
 3152 0158 13       		.uleb128 0x13
 3153 0159 02       		.uleb128 0x2
 3154 015a 18       		.uleb128 0x18
 3155 015b 00       		.byte	0
 3156 015c 00       		.byte	0
 3157 015d 18       		.uleb128 0x18
 3158 015e 0F       		.uleb128 0xf
 3159 015f 00       		.byte	0
 3160 0160 0B       		.uleb128 0xb
 3161 0161 0B       		.uleb128 0xb
 3162 0162 49       		.uleb128 0x49
 3163 0163 13       		.uleb128 0x13
 3164 0164 00       		.byte	0
 3165 0165 00       		.byte	0
 3166 0166 19       		.uleb128 0x19
 3167 0167 2E       		.uleb128 0x2e
 3168 0168 01       		.byte	0x1
 3169 0169 3F       		.uleb128 0x3f
 3170 016a 19       		.uleb128 0x19
 3171 016b 03       		.uleb128 0x3
 3172 016c 0E       		.uleb128 0xe
 3173 016d 3A       		.uleb128 0x3a
 3174 016e 0B       		.uleb128 0xb
 3175 016f 3B       		.uleb128 0x3b
 3176 0170 05       		.uleb128 0x5
 3177 0171 27       		.uleb128 0x27
 3178 0172 19       		.uleb128 0x19
 3179 0173 11       		.uleb128 0x11
 3180 0174 01       		.uleb128 0x1
 3181 0175 12       		.uleb128 0x12
 3182 0176 06       		.uleb128 0x6
 3183 0177 40       		.uleb128 0x40
 3184 0178 18       		.uleb128 0x18
 3185 0179 9642     		.uleb128 0x2116
 3186 017b 19       		.uleb128 0x19
 3187 017c 01       		.uleb128 0x1
 3188 017d 13       		.uleb128 0x13
 3189 017e 00       		.byte	0
 3190 017f 00       		.byte	0
 3191 0180 1A       		.uleb128 0x1a
 3192 0181 05       		.uleb128 0x5
 3193 0182 00       		.byte	0
 3194 0183 03       		.uleb128 0x3
 3195 0184 08       		.uleb128 0x8
 3196 0185 3A       		.uleb128 0x3a
 3197 0186 0B       		.uleb128 0xb
 3198 0187 3B       		.uleb128 0x3b
 3199 0188 05       		.uleb128 0x5
 3200 0189 49       		.uleb128 0x49
 3201 018a 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 71


 3202 018b 02       		.uleb128 0x2
 3203 018c 18       		.uleb128 0x18
 3204 018d 00       		.byte	0
 3205 018e 00       		.byte	0
 3206 018f 1B       		.uleb128 0x1b
 3207 0190 2E       		.uleb128 0x2e
 3208 0191 01       		.byte	0x1
 3209 0192 3F       		.uleb128 0x3f
 3210 0193 19       		.uleb128 0x19
 3211 0194 03       		.uleb128 0x3
 3212 0195 0E       		.uleb128 0xe
 3213 0196 3A       		.uleb128 0x3a
 3214 0197 0B       		.uleb128 0xb
 3215 0198 3B       		.uleb128 0x3b
 3216 0199 05       		.uleb128 0x5
 3217 019a 27       		.uleb128 0x27
 3218 019b 19       		.uleb128 0x19
 3219 019c 11       		.uleb128 0x11
 3220 019d 01       		.uleb128 0x1
 3221 019e 12       		.uleb128 0x12
 3222 019f 06       		.uleb128 0x6
 3223 01a0 40       		.uleb128 0x40
 3224 01a1 18       		.uleb128 0x18
 3225 01a2 9742     		.uleb128 0x2117
 3226 01a4 19       		.uleb128 0x19
 3227 01a5 01       		.uleb128 0x1
 3228 01a6 13       		.uleb128 0x13
 3229 01a7 00       		.byte	0
 3230 01a8 00       		.byte	0
 3231 01a9 1C       		.uleb128 0x1c
 3232 01aa 05       		.uleb128 0x5
 3233 01ab 00       		.byte	0
 3234 01ac 03       		.uleb128 0x3
 3235 01ad 0E       		.uleb128 0xe
 3236 01ae 3A       		.uleb128 0x3a
 3237 01af 0B       		.uleb128 0xb
 3238 01b0 3B       		.uleb128 0x3b
 3239 01b1 05       		.uleb128 0x5
 3240 01b2 49       		.uleb128 0x49
 3241 01b3 13       		.uleb128 0x13
 3242 01b4 02       		.uleb128 0x2
 3243 01b5 18       		.uleb128 0x18
 3244 01b6 00       		.byte	0
 3245 01b7 00       		.byte	0
 3246 01b8 1D       		.uleb128 0x1d
 3247 01b9 2E       		.uleb128 0x2e
 3248 01ba 01       		.byte	0x1
 3249 01bb 3F       		.uleb128 0x3f
 3250 01bc 19       		.uleb128 0x19
 3251 01bd 03       		.uleb128 0x3
 3252 01be 0E       		.uleb128 0xe
 3253 01bf 3A       		.uleb128 0x3a
 3254 01c0 0B       		.uleb128 0xb
 3255 01c1 3B       		.uleb128 0x3b
 3256 01c2 05       		.uleb128 0x5
 3257 01c3 11       		.uleb128 0x11
 3258 01c4 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 72


 3259 01c5 12       		.uleb128 0x12
 3260 01c6 06       		.uleb128 0x6
 3261 01c7 40       		.uleb128 0x40
 3262 01c8 18       		.uleb128 0x18
 3263 01c9 9642     		.uleb128 0x2116
 3264 01cb 19       		.uleb128 0x19
 3265 01cc 01       		.uleb128 0x1
 3266 01cd 13       		.uleb128 0x13
 3267 01ce 00       		.byte	0
 3268 01cf 00       		.byte	0
 3269 01d0 1E       		.uleb128 0x1e
 3270 01d1 2E       		.uleb128 0x2e
 3271 01d2 00       		.byte	0
 3272 01d3 3F       		.uleb128 0x3f
 3273 01d4 19       		.uleb128 0x19
 3274 01d5 03       		.uleb128 0x3
 3275 01d6 0E       		.uleb128 0xe
 3276 01d7 3A       		.uleb128 0x3a
 3277 01d8 0B       		.uleb128 0xb
 3278 01d9 3B       		.uleb128 0x3b
 3279 01da 05       		.uleb128 0x5
 3280 01db 11       		.uleb128 0x11
 3281 01dc 01       		.uleb128 0x1
 3282 01dd 12       		.uleb128 0x12
 3283 01de 06       		.uleb128 0x6
 3284 01df 40       		.uleb128 0x40
 3285 01e0 18       		.uleb128 0x18
 3286 01e1 9742     		.uleb128 0x2117
 3287 01e3 19       		.uleb128 0x19
 3288 01e4 00       		.byte	0
 3289 01e5 00       		.byte	0
 3290 01e6 1F       		.uleb128 0x1f
 3291 01e7 26       		.uleb128 0x26
 3292 01e8 00       		.byte	0
 3293 01e9 49       		.uleb128 0x49
 3294 01ea 13       		.uleb128 0x13
 3295 01eb 00       		.byte	0
 3296 01ec 00       		.byte	0
 3297 01ed 20       		.uleb128 0x20
 3298 01ee 34       		.uleb128 0x34
 3299 01ef 00       		.byte	0
 3300 01f0 03       		.uleb128 0x3
 3301 01f1 0E       		.uleb128 0xe
 3302 01f2 3A       		.uleb128 0x3a
 3303 01f3 0B       		.uleb128 0xb
 3304 01f4 3B       		.uleb128 0x3b
 3305 01f5 05       		.uleb128 0x5
 3306 01f6 49       		.uleb128 0x49
 3307 01f7 13       		.uleb128 0x13
 3308 01f8 3F       		.uleb128 0x3f
 3309 01f9 19       		.uleb128 0x19
 3310 01fa 3C       		.uleb128 0x3c
 3311 01fb 19       		.uleb128 0x19
 3312 01fc 00       		.byte	0
 3313 01fd 00       		.byte	0
 3314 01fe 00       		.byte	0
 3315              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 73


 3316 0000 74000000 		.4byte	0x74
 3317 0004 0200     		.2byte	0x2
 3318 0006 00000000 		.4byte	.Ldebug_info0
 3319 000a 04       		.byte	0x4
 3320 000b 00       		.byte	0
 3321 000c 0000     		.2byte	0
 3322 000e 0000     		.2byte	0
 3323 0010 00000000 		.4byte	.LFB64
 3324 0014 18000000 		.4byte	.LFE64-.LFB64
 3325 0018 00000000 		.4byte	.LFB65
 3326 001c 20000000 		.4byte	.LFE65-.LFB65
 3327 0020 00000000 		.4byte	.LFB66
 3328 0024 0C020000 		.4byte	.LFE66-.LFB66
 3329 0028 00000000 		.4byte	.LFB67
 3330 002c 08020000 		.4byte	.LFE67-.LFB67
 3331 0030 00000000 		.4byte	.LFB68
 3332 0034 F0020000 		.4byte	.LFE68-.LFB68
 3333 0038 00000000 		.4byte	.LFB69
 3334 003c C0000000 		.4byte	.LFE69-.LFB69
 3335 0040 00000000 		.4byte	.LFB70
 3336 0044 1A000000 		.4byte	.LFE70-.LFB70
 3337 0048 00000000 		.4byte	.LFB71
 3338 004c E8010000 		.4byte	.LFE71-.LFB71
 3339 0050 00000000 		.4byte	.LFB72
 3340 0054 0C000000 		.4byte	.LFE72-.LFB72
 3341 0058 00000000 		.4byte	.LFB73
 3342 005c 14000000 		.4byte	.LFE73-.LFB73
 3343 0060 00000000 		.4byte	.LFB74
 3344 0064 0C000000 		.4byte	.LFE74-.LFB74
 3345 0068 00000000 		.4byte	.LFB75
 3346 006c 0C000000 		.4byte	.LFE75-.LFB75
 3347 0070 00000000 		.4byte	0
 3348 0074 00000000 		.4byte	0
 3349              		.section	.debug_ranges,"",%progbits
 3350              	.Ldebug_ranges0:
 3351 0000 00000000 		.4byte	.LFB64
 3352 0004 18000000 		.4byte	.LFE64
 3353 0008 00000000 		.4byte	.LFB65
 3354 000c 20000000 		.4byte	.LFE65
 3355 0010 00000000 		.4byte	.LFB66
 3356 0014 0C020000 		.4byte	.LFE66
 3357 0018 00000000 		.4byte	.LFB67
 3358 001c 08020000 		.4byte	.LFE67
 3359 0020 00000000 		.4byte	.LFB68
 3360 0024 F0020000 		.4byte	.LFE68
 3361 0028 00000000 		.4byte	.LFB69
 3362 002c C0000000 		.4byte	.LFE69
 3363 0030 00000000 		.4byte	.LFB70
 3364 0034 1A000000 		.4byte	.LFE70
 3365 0038 00000000 		.4byte	.LFB71
 3366 003c E8010000 		.4byte	.LFE71
 3367 0040 00000000 		.4byte	.LFB72
 3368 0044 0C000000 		.4byte	.LFE72
 3369 0048 00000000 		.4byte	.LFB73
 3370 004c 14000000 		.4byte	.LFE73
 3371 0050 00000000 		.4byte	.LFB74
 3372 0054 0C000000 		.4byte	.LFE74
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 74


 3373 0058 00000000 		.4byte	.LFB75
 3374 005c 0C000000 		.4byte	.LFE75
 3375 0060 00000000 		.4byte	0
 3376 0064 00000000 		.4byte	0
 3377              		.section	.debug_line,"",%progbits
 3378              	.Ldebug_line0:
 3379 0000 E8030000 		.section	.debug_str,"MS",%progbits,1
 3379      02007701 
 3379      00000201 
 3379      FB0E0D00 
 3379      01010101 
 3380              	.LASF12:
 3381 0000 75696E74 		.ascii	"uint16\000"
 3381      313600
 3382              	.LASF88:
 3383 0007 6D6F745F 		.ascii	"mot_idx\000"
 3383      69647800 
 3384              	.LASF98:
 3385 000f 635F6D65 		.ascii	"c_mem\000"
 3385      6D00
 3386              	.LASF49:
 3387 0015 73745F46 		.ascii	"st_FB_spec\000"
 3387      425F7370 
 3387      656300
 3388              	.LASF92:
 3389 0020 70776D5F 		.ascii	"pwm_preload_values\000"
 3389      7072656C 
 3389      6F61645F 
 3389      76616C75 
 3389      657300
 3390              	.LASF0:
 3391 0033 7369676E 		.ascii	"signed char\000"
 3391      65642063 
 3391      68617200 
 3392              	.LASF55:
 3393 003f 73745F65 		.ascii	"st_eeprom\000"
 3393      6570726F 
 3393      6D00
 3394              	.LASF118:
 3395 0049 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3395      43313120 
 3395      352E342E 
 3395      31203230 
 3395      31363036 
 3396 007c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3396      20726576 
 3396      6973696F 
 3396      6E203233 
 3396      37373135 
 3397 00af 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3397      66756E63 
 3397      74696F6E 
 3397      2D736563 
 3397      74696F6E 
 3398              	.LASF101:
 3399 00d7 6379636C 		.ascii	"cycle_time\000"
 3399      655F7469 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 75


 3399      6D6500
 3400              	.LASF86:
 3401 00e2 695F6175 		.ascii	"i_aux\000"
 3401      7800
 3402              	.LASF82:
 3403 00e8 656E636F 		.ascii	"encoder_reading_SPI\000"
 3403      6465725F 
 3403      72656164 
 3403      696E675F 
 3403      53504900 
 3404              	.LASF7:
 3405 00fc 6C6F6E67 		.ascii	"long long unsigned int\000"
 3405      206C6F6E 
 3405      6720756E 
 3405      7369676E 
 3405      65642069 
 3406              	.LASF108:
 3407 0113 53485F72 		.ascii	"SH_refOld\000"
 3407      65664F6C 
 3407      6400
 3408              	.LASF35:
 3409 011d 62617564 		.ascii	"baud_rate\000"
 3409      5F726174 
 3409      6500
 3410              	.LASF93:
 3411 0127 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3411      52784275 
 3411      66666572 
 3411      00
 3412              	.LASF42:
 3413 0134 656D675F 		.ascii	"emg_threshold\000"
 3413      74687265 
 3413      73686F6C 
 3413      6400
 3414              	.LASF6:
 3415 0142 6C6F6E67 		.ascii	"long long int\000"
 3415      206C6F6E 
 3415      6720696E 
 3415      7400
 3416              	.LASF32:
 3417 0150 72656164 		.ascii	"ready\000"
 3417      7900
 3418              	.LASF99:
 3419 0156 74696D65 		.ascii	"timer_value\000"
 3419      725F7661 
 3419      6C756500 
 3420              	.LASF19:
 3421 0162 72656738 		.ascii	"reg8\000"
 3421      00
 3422              	.LASF15:
 3423 0167 696E7433 		.ascii	"int32\000"
 3423      3200
 3424              	.LASF75:
 3425 016d 636F6D70 		.ascii	"compute_SH_reference\000"
 3425      7574655F 
 3425      53485F72 
 3425      65666572 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 76


 3425      656E6365 
 3426              	.LASF102:
 3427 0182 666C6167 		.ascii	"flag_master\000"
 3427      5F6D6173 
 3427      74657200 
 3428              	.LASF65:
 3429 018e 73746174 		.ascii	"state\000"
 3429      6500
 3430              	.LASF4:
 3431 0194 6C6F6E67 		.ascii	"long int\000"
 3431      20696E74 
 3431      00
 3432              	.LASF96:
 3433 019d 675F7278 		.ascii	"g_rx\000"
 3433      00
 3434              	.LASF111:
 3435 01a2 56545F72 		.ascii	"VT_refOld\000"
 3435      65664F6C 
 3435      6400
 3436              	.LASF59:
 3437 01ac 6F6C645F 		.ascii	"old_value\000"
 3437      76616C75 
 3437      6500
 3438              	.LASF105:
 3439 01b6 4144435F 		.ascii	"ADC_buf\000"
 3439      62756600 
 3440              	.LASF119:
 3441 01be 2E2E5C73 		.ascii	"..\\src\\interruptions.c\000"
 3441      72635C69 
 3441      6E746572 
 3441      72757074 
 3441      696F6E73 
 3442              	.LASF17:
 3443 01d5 646F7562 		.ascii	"double\000"
 3443      6C6500
 3444              	.LASF74:
 3445 01dc 696E7465 		.ascii	"interrupt_manager\000"
 3445      72727570 
 3445      745F6D61 
 3445      6E616765 
 3445      7200
 3446              	.LASF116:
 3447 01ee 70726573 		.ascii	"pressure_value\000"
 3447      73757265 
 3447      5F76616C 
 3447      756500
 3448              	.LASF13:
 3449 01fd 75696E74 		.ascii	"uint32\000"
 3449      333200
 3450              	.LASF37:
 3451 0204 73745F73 		.ascii	"st_slave\000"
 3451      6C617665 
 3451      00
 3452              	.LASF24:
 3453 020d 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 3453      545F4D4F 
 3453      44455F45 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 77


 3453      4D475F50 
 3453      524F504F 
 3454              	.LASF83:
 3455 0229 6E5F6C69 		.ascii	"n_line\000"
 3455      6E6500
 3456              	.LASF45:
 3457 0230 73776974 		.ascii	"switch_emg\000"
 3457      63685F65 
 3457      6D6700
 3458              	.LASF28:
 3459 023b 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 3459      545F4D4F 
 3459      44455F4A 
 3459      4F595354 
 3459      49434B00 
 3460              	.LASF63:
 3461 024f 4953525F 		.ascii	"ISR_RS485_RX_ExInterrupt\000"
 3461      52533438 
 3461      355F5258 
 3461      5F457849 
 3461      6E746572 
 3462              	.LASF47:
 3463 0268 6D617374 		.ascii	"master_mode_active\000"
 3463      65725F6D 
 3463      6F64655F 
 3463      61637469 
 3463      766500
 3464              	.LASF8:
 3465 027b 756E7369 		.ascii	"unsigned int\000"
 3465      676E6564 
 3465      20696E74 
 3465      00
 3466              	.LASF70:
 3467 0288 72785F64 		.ascii	"rx_data\000"
 3467      61746100 
 3468              	.LASF114:
 3469 0290 50756D70 		.ascii	"Pump_refOld\000"
 3469      5F726566 
 3469      4F6C6400 
 3470              	.LASF104:
 3471 029c 6379636C 		.ascii	"cycles_interrupt_flag\000"
 3471      65735F69 
 3471      6E746572 
 3471      72757074 
 3471      5F666C61 
 3472              	.LASF26:
 3473 02b2 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 3473      545F4D4F 
 3473      44455F45 
 3473      4D475F46 
 3473      43465300 
 3474              	.LASF73:
 3475 02c6 66756E63 		.ascii	"function_scheduler\000"
 3475      74696F6E 
 3475      5F736368 
 3475      6564756C 
 3475      657200
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 78


 3476              	.LASF66:
 3477 02d9 64617461 		.ascii	"data_packet_index\000"
 3477      5F706163 
 3477      6B65745F 
 3477      696E6465 
 3477      7800
 3478              	.LASF11:
 3479 02eb 75696E74 		.ascii	"uint8\000"
 3479      3800
 3480              	.LASF3:
 3481 02f1 73686F72 		.ascii	"short unsigned int\000"
 3481      7420756E 
 3481      7369676E 
 3481      65642069 
 3481      6E7400
 3482              	.LASF109:
 3483 0304 53485F72 		.ascii	"SH_refNew\000"
 3483      65664E65 
 3483      7700
 3484              	.LASF23:
 3485 030e 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 3485      545F4D4F 
 3485      44455F45 
 3485      4E434F44 
 3485      45523300 
 3486              	.LASF121:
 3487 0322 53485F69 		.ascii	"SH_input_mode\000"
 3487      6E707574 
 3487      5F6D6F64 
 3487      6500
 3488              	.LASF120:
 3489 0330 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\Git\\PSoC5\\PSoC5_FW"
 3489      73657273 
 3489      5C6D676E 
 3489      6F63636F 
 3489      5C446F63 
 3490 035d 5F574953 		.ascii	"_WISH_VIBES\\FW_WearableHealtySubj - WISH+Dayton\\W"
 3490      485F5649 
 3490      4245535C 
 3490      46575F57 
 3490      65617261 
 3491 038e 4953485F 		.ascii	"ISH_VIBES_Socket.cydsn\000"
 3491      56494245 
 3491      535F536F 
 3491      636B6574 
 3491      2E637964 
 3492              	.LASF38:
 3493 03a5 706F735F 		.ascii	"pos_lim_inf\000"
 3493      6C696D5F 
 3493      696E6600 
 3494              	.LASF36:
 3495 03b1 756E7573 		.ascii	"unused_bytes\000"
 3495      65645F62 
 3495      79746573 
 3495      00
 3496              	.LASF52:
 3497 03be 70726F70 		.ascii	"prop_err_fb_gain\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 79


 3497      5F657272 
 3497      5F66625F 
 3497      6761696E 
 3497      00
 3498              	.LASF53:
 3499 03cf 76696272 		.ascii	"vibrotactile_feedback_active\000"
 3499      6F746163 
 3499      74696C65 
 3499      5F666565 
 3499      64626163 
 3500              	.LASF9:
 3501 03ec 5F5F696E 		.ascii	"__int32_t\000"
 3501      7433325F 
 3501      7400
 3502              	.LASF72:
 3503 03f6 7061636B 		.ascii	"package_count\000"
 3503      6167655F 
 3503      636F756E 
 3503      7400
 3504              	.LASF71:
 3505 0404 72785F64 		.ascii	"rx_data_type\000"
 3505      6174615F 
 3505      74797065 
 3505      00
 3506              	.LASF64:
 3507 0411 4953525F 		.ascii	"ISR_CYCLES_Handler\000"
 3507      4359434C 
 3507      45535F48 
 3507      616E646C 
 3507      657200
 3508              	.LASF21:
 3509 0424 73697A65 		.ascii	"sizetype\000"
 3509      74797065 
 3509      00
 3510              	.LASF51:
 3511 042d 6D617869 		.ascii	"maximum_pressure_kPa\000"
 3511      6D756D5F 
 3511      70726573 
 3511      73757265 
 3511      5F6B5061 
 3512              	.LASF112:
 3513 0442 56545F72 		.ascii	"VT_refNew\000"
 3513      65664E65 
 3513      7700
 3514              	.LASF20:
 3515 044c 6C6F6E67 		.ascii	"long double\000"
 3515      20646F75 
 3515      626C6500 
 3516              	.LASF34:
 3517 0458 73745F64 		.ascii	"st_device\000"
 3517      65766963 
 3517      6500
 3518              	.LASF81:
 3519 0462 76696272 		.ascii	"vibrotactile_control_generic\000"
 3519      6F746163 
 3519      74696C65 
 3519      5F636F6E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 80


 3519      74726F6C 
 3520              	.LASF69:
 3521 047f 72785F71 		.ascii	"rx_queue\000"
 3521      75657565 
 3521      00
 3522              	.LASF97:
 3523 0488 675F6D65 		.ascii	"g_mem\000"
 3523      6D00
 3524              	.LASF100:
 3525 048e 74696D65 		.ascii	"timer_value0\000"
 3525      725F7661 
 3525      6C756530 
 3525      00
 3526              	.LASF39:
 3527 049b 706F735F 		.ascii	"pos_lim_sup\000"
 3527      6C696D5F 
 3527      73757000 
 3528              	.LASF90:
 3529 04a7 6379636C 		.ascii	"cycles_counter_update\000"
 3529      65735F63 
 3529      6F756E74 
 3529      65725F75 
 3529      70646174 
 3530              	.LASF27:
 3531 04bd 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 3531      545F4D4F 
 3531      44455F45 
 3531      4D475F46 
 3531      4346535F 
 3532              	.LASF62:
 3533 04d5 70726573 		.ascii	"pressure\000"
 3533      73757265 
 3533      00
 3534              	.LASF115:
 3535 04de 50756D70 		.ascii	"Pump_refNew\000"
 3535      5F726566 
 3535      4E657700 
 3536              	.LASF40:
 3537 04ea 696E7075 		.ascii	"input_mode\000"
 3537      745F6D6F 
 3537      646500
 3538              	.LASF16:
 3539 04f5 666C6F61 		.ascii	"float\000"
 3539      7400
 3540              	.LASF113:
 3541 04fb 50756D70 		.ascii	"Pump_ref\000"
 3541      5F726566 
 3541      00
 3542              	.LASF57:
 3543 0504 53485F63 		.ascii	"SH_config\000"
 3543      6F6E6669 
 3543      6700
 3544              	.LASF84:
 3545 050e 6173736F 		.ascii	"assoc_motor\000"
 3545      635F6D6F 
 3545      746F7200 
 3546              	.LASF76:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 81


 3547 051a 6572725F 		.ascii	"err_emg_1\000"
 3547      656D675F 
 3547      3100
 3548              	.LASF77:
 3549 0524 6572725F 		.ascii	"err_emg_2\000"
 3549      656D675F 
 3549      3200
 3550              	.LASF60:
 3551 052e 6761696E 		.ascii	"gain\000"
 3551      00
 3552              	.LASF10:
 3553 0533 696E7433 		.ascii	"int32_t\000"
 3553      325F7400 
 3554              	.LASF1:
 3555 053b 756E7369 		.ascii	"unsigned char\000"
 3555      676E6564 
 3555      20636861 
 3555      7200
 3556              	.LASF2:
 3557 0549 73686F72 		.ascii	"short int\000"
 3557      7420696E 
 3557      7400
 3558              	.LASF58:
 3559 0553 73745F66 		.ascii	"st_filter\000"
 3559      696C7465 
 3559      7200
 3560              	.LASF91:
 3561 055d 73617665 		.ascii	"save_cycles_eeprom\000"
 3561      5F637963 
 3561      6C65735F 
 3561      65657072 
 3561      6F6D00
 3562              	.LASF56:
 3563 0570 666C6167 		.ascii	"flag\000"
 3563      00
 3564              	.LASF48:
 3565 0575 736C6176 		.ascii	"slave_ID\000"
 3565      655F4944 
 3565      00
 3566              	.LASF46:
 3567 057e 73745F4D 		.ascii	"st_MASTER_spec\000"
 3567      41535445 
 3567      525F7370 
 3567      656300
 3568              	.LASF95:
 3569 058d 675F6164 		.ascii	"g_adc_measOld\000"
 3569      635F6D65 
 3569      61734F6C 
 3569      6400
 3570              	.LASF89:
 3571 059b 6F766572 		.ascii	"overcurrent_control\000"
 3571      63757272 
 3571      656E745F 
 3571      636F6E74 
 3571      726F6C00 
 3572              	.LASF41:
 3573 05af 73745F65 		.ascii	"st_emg\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 82


 3573      6D6700
 3574              	.LASF61:
 3575 05b6 73745F61 		.ascii	"st_adc_meas\000"
 3575      64635F6D 
 3575      65617300 
 3576              	.LASF107:
 3577 05c2 53485F72 		.ascii	"SH_ref\000"
 3577      656600
 3578              	.LASF5:
 3579 05c9 6C6F6E67 		.ascii	"long unsigned int\000"
 3579      20756E73 
 3579      69676E65 
 3579      6420696E 
 3579      7400
 3580              	.LASF31:
 3581 05db 6C656E67 		.ascii	"length\000"
 3581      746800
 3582              	.LASF18:
 3583 05e2 63686172 		.ascii	"char\000"
 3583      00
 3584              	.LASF103:
 3585 05e7 696E7465 		.ascii	"interrupt_flag\000"
 3585      72727570 
 3585      745F666C 
 3585      616700
 3586              	.LASF33:
 3587 05f6 73745F64 		.ascii	"st_data\000"
 3587      61746100 
 3588              	.LASF87:
 3589 05fe 70776D5F 		.ascii	"pwm_limit_search\000"
 3589      6C696D69 
 3589      745F7365 
 3589      61726368 
 3589      00
 3590              	.LASF22:
 3591 060f 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 3591      545F4D4F 
 3591      44455F45 
 3591      58544552 
 3591      4E414C00 
 3592              	.LASF94:
 3593 0623 675F6164 		.ascii	"g_adc_meas\000"
 3593      635F6D65 
 3593      617300
 3594              	.LASF30:
 3595 062e 62756666 		.ascii	"buffer\000"
 3595      657200
 3596              	.LASF54:
 3597 0635 61697263 		.ascii	"airchamber_feedback_active\000"
 3597      68616D62 
 3597      65725F66 
 3597      65656462 
 3597      61636B5F 
 3598              	.LASF67:
 3599 0650 64617461 		.ascii	"data_packet_length\000"
 3599      5F706163 
 3599      6B65745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 83


 3599      6C656E67 
 3599      746800
 3600              	.LASF68:
 3601 0663 64617461 		.ascii	"data_packet_buffer\000"
 3601      5F706163 
 3601      6B65745F 
 3601      62756666 
 3601      657200
 3602              	.LASF50:
 3603 0676 6D61785F 		.ascii	"max_residual_current\000"
 3603      72657369 
 3603      6475616C 
 3603      5F637572 
 3603      72656E74 
 3604              	.LASF117:
 3605 068b 66696C74 		.ascii	"filt_emg\000"
 3605      5F656D67 
 3605      00
 3606              	.LASF29:
 3607 0694 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 3607      545F4D4F 
 3607      44455F45 
 3607      4D475F50 
 3607      524F504F 
 3608              	.LASF25:
 3609 06b3 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 3609      545F4D4F 
 3609      44455F45 
 3609      4D475F49 
 3609      4E544547 
 3610              	.LASF44:
 3611 06cb 656D675F 		.ascii	"emg_speed\000"
 3611      73706565 
 3611      6400
 3612              	.LASF43:
 3613 06d5 656D675F 		.ascii	"emg_max_value\000"
 3613      6D61785F 
 3613      76616C75 
 3613      6500
 3614              	.LASF80:
 3615 06e3 6D6F746F 		.ascii	"motor_dir\000"
 3615      725F6469 
 3615      7200
 3616              	.LASF14:
 3617 06ed 696E7431 		.ascii	"int16\000"
 3617      3600
 3618              	.LASF78:
 3619 06f3 63757272 		.ascii	"current_emg\000"
 3619      656E745F 
 3619      656D6700 
 3620              	.LASF106:
 3621 06ff 6D617374 		.ascii	"master_mode\000"
 3621      65725F6D 
 3621      6F646500 
 3622              	.LASF110:
 3623 070b 56545F72 		.ascii	"VT_ref\000"
 3623      656600
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc74iK7u.s 			page 84


 3624              	.LASF85:
 3625 0712 616E616C 		.ascii	"analog_read_end\000"
 3625      6F675F72 
 3625      6561645F 
 3625      656E6400 
 3626              	.LASF79:
 3627 0722 70776D5F 		.ascii	"pwm_input\000"
 3627      696E7075 
 3627      7400
 3628              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
