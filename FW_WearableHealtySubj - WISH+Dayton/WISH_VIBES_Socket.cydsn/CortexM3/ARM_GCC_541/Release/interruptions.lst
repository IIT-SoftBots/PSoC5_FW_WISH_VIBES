ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"interruptions.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              		.type	pwm_preload_values, %object
  22              		.size	pwm_preload_values, 29
  23              	pwm_preload_values:
  24 0000 64       		.byte	100
  25 0001 53       		.byte	83
  26 0002 4E       		.byte	78
  27 0003 4C       		.byte	76
  28 0004 4A       		.byte	74
  29 0005 48       		.byte	72
  30 0006 46       		.byte	70
  31 0007 44       		.byte	68
  32 0008 43       		.byte	67
  33 0009 41       		.byte	65
  34 000a 40       		.byte	64
  35 000b 3F       		.byte	63
  36 000c 3E       		.byte	62
  37 000d 3D       		.byte	61
  38 000e 3C       		.byte	60
  39 000f 3B       		.byte	59
  40 0010 3A       		.byte	58
  41 0011 39       		.byte	57
  42 0012 38       		.byte	56
  43 0013 38       		.byte	56
  44 0014 37       		.byte	55
  45 0015 36       		.byte	54
  46 0016 36       		.byte	54
  47 0017 35       		.byte	53
  48 0018 34       		.byte	52
  49 0019 34       		.byte	52
  50 001a 34       		.byte	52
  51 001b 33       		.byte	51
  52 001c 33       		.byte	51
  53              		.section	.text.ISR_RS485_RX_ExInterrupt,"ax",%progbits
  54              		.align	2
  55              		.global	ISR_RS485_RX_ExInterrupt
  56              		.thumb
  57              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 2


  58              		.type	ISR_RS485_RX_ExInterrupt, %function
  59              	ISR_RS485_RX_ExInterrupt:
  60              	.LFB64:
  61              		.file 1 "..\\src\\interruptions.c"
   1:..\src/interruptions.c **** // ----------------------------------------------------------------------------
   2:..\src/interruptions.c **** // BSD 3-Clause License
   3:..\src/interruptions.c **** 
   4:..\src/interruptions.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/interruptions.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/interruptions.c **** // All rights reserved.
   7:..\src/interruptions.c **** 
   8:..\src/interruptions.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/interruptions.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/interruptions.c **** 
  11:..\src/interruptions.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/interruptions.c **** //   list of conditions and the following disclaimer.
  13:..\src/interruptions.c **** 
  14:..\src/interruptions.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/interruptions.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/interruptions.c **** //   and/or other materials provided with the distribution.
  17:..\src/interruptions.c **** 
  18:..\src/interruptions.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/interruptions.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/interruptions.c **** //   this software without specific prior written permission.
  21:..\src/interruptions.c **** 
  22:..\src/interruptions.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/interruptions.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:..\src/interruptions.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/interruptions.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/interruptions.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/interruptions.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/interruptions.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/interruptions.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/interruptions.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/interruptions.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/interruptions.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/interruptions.c **** // ----------------------------------------------------------------------------
  34:..\src/interruptions.c **** 
  35:..\src/interruptions.c **** /**
  36:..\src/interruptions.c **** * \file         interruptions.c
  37:..\src/interruptions.c **** *
  38:..\src/interruptions.c **** * \brief        Interruption handling and firmware core functions
  39:..\src/interruptions.c **** * \date         March 20th, 2020
  40:..\src/interruptions.c **** * \author       _Centro "E.Piaggio"_
  41:..\src/interruptions.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42:..\src/interruptions.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  43:..\src/interruptions.c **** */
  44:..\src/interruptions.c **** 
  45:..\src/interruptions.c **** 
  46:..\src/interruptions.c **** //=================================================================     includes
  47:..\src/interruptions.c **** #include "interruptions.h"
  48:..\src/interruptions.c **** 
  49:..\src/interruptions.c **** //==============================================================================
  50:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  51:..\src/interruptions.c **** //==============================================================================
  52:..\src/interruptions.c **** // Processing RS-485 data frame:
  53:..\src/interruptions.c **** //
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 3


  54:..\src/interruptions.c **** // - 0:     Waits for beginning characters
  55:..\src/interruptions.c **** // - 1:     Waits for ID;
  56:..\src/interruptions.c **** // - 2:     Data length;
  57:..\src/interruptions.c **** // - 3:     Receive all bytes;
  58:..\src/interruptions.c **** // - 4:     Wait for another device end of transmission;
  59:..\src/interruptions.c **** //
  60:..\src/interruptions.c **** //==============================================================================
  61:..\src/interruptions.c **** 
  62:..\src/interruptions.c **** // PWM values needed to obtain 11.5 V given a certain input tension
  63:..\src/interruptions.c **** // Numbers are sperimentally calculated //[index] (millivolts)
  64:..\src/interruptions.c **** static const uint8 pwm_preload_values[29] = {100,    //0 (11500)
  65:..\src/interruptions.c ****                                               83,
  66:..\src/interruptions.c ****                                               78,
  67:..\src/interruptions.c ****                                               76,
  68:..\src/interruptions.c ****                                               74,
  69:..\src/interruptions.c ****                                               72,    //5 (14000)
  70:..\src/interruptions.c ****                                               70,
  71:..\src/interruptions.c ****                                               68,
  72:..\src/interruptions.c ****                                               67,
  73:..\src/interruptions.c ****                                               65,
  74:..\src/interruptions.c ****                                               64,    //10 (16500)
  75:..\src/interruptions.c ****                                               63,
  76:..\src/interruptions.c ****                                               62,
  77:..\src/interruptions.c ****                                               61,
  78:..\src/interruptions.c ****                                               60,
  79:..\src/interruptions.c ****                                               59,    //15 (19000)
  80:..\src/interruptions.c ****                                               58,
  81:..\src/interruptions.c ****                                               57,
  82:..\src/interruptions.c ****                                               56,
  83:..\src/interruptions.c ****                                               56,
  84:..\src/interruptions.c ****                                               55,    //20 (21500)
  85:..\src/interruptions.c ****                                               54,
  86:..\src/interruptions.c ****                                               54,
  87:..\src/interruptions.c ****                                               53,
  88:..\src/interruptions.c ****                                               52,
  89:..\src/interruptions.c ****                                               52,    //25 (24000)
  90:..\src/interruptions.c ****                                               52,
  91:..\src/interruptions.c ****                                               51,
  92:..\src/interruptions.c ****                                               51};   //28 (25500)
  93:..\src/interruptions.c **** 
  94:..\src/interruptions.c **** //==============================================================================
  95:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  96:..\src/interruptions.c **** //==============================================================================
  97:..\src/interruptions.c **** 
  98:..\src/interruptions.c **** CY_ISR(ISR_RS485_RX_ExInterrupt) {
  62              		.loc 1 98 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  99:..\src/interruptions.c **** 
 100:..\src/interruptions.c ****     // Set RS485 flag
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 4


 101:..\src/interruptions.c ****     
 102:..\src/interruptions.c ****     interrupt_flag = TRUE;
  72              		.loc 1 102 0
  73 0004 034B     		ldr	r3, .L2
  74 0006 0122     		movs	r2, #1
  75 0008 1A70     		strb	r2, [r3]
 103:..\src/interruptions.c ****      
 104:..\src/interruptions.c **** }
  76              		.loc 1 104 0
  77 000a 00BF     		nop
  78 000c BD46     		mov	sp, r7
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 000e 80BC     		pop	{r7}
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0010 7047     		bx	lr
  85              	.L3:
  86 0012 00BF     		.align	2
  87              	.L2:
  88 0014 00000000 		.word	interrupt_flag
  89              		.cfi_endproc
  90              	.LFE64:
  91              		.size	ISR_RS485_RX_ExInterrupt, .-ISR_RS485_RX_ExInterrupt
  92              		.section	.text.ISR_CYCLES_Handler,"ax",%progbits
  93              		.align	2
  94              		.global	ISR_CYCLES_Handler
  95              		.thumb
  96              		.thumb_func
  97              		.type	ISR_CYCLES_Handler, %function
  98              	ISR_CYCLES_Handler:
  99              	.LFB65:
 105:..\src/interruptions.c **** 
 106:..\src/interruptions.c **** //==============================================================================
 107:..\src/interruptions.c **** //                                                        CYCLES TIMER INTERRUPT
 108:..\src/interruptions.c **** //==============================================================================
 109:..\src/interruptions.c **** CY_ISR(ISR_CYCLES_Handler){
 100              		.loc 1 109 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0000 80B4     		push	{r7}
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110:..\src/interruptions.c **** 
 111:..\src/interruptions.c ****     // Set cycles interrupt flag
 112:..\src/interruptions.c ****     
 113:..\src/interruptions.c ****     cycles_interrupt_flag = TRUE;
 110              		.loc 1 113 0
 111 0004 044B     		ldr	r3, .L5
 112 0006 0122     		movs	r2, #1
 113 0008 1A70     		strb	r2, [r3]
 114:..\src/interruptions.c ****     
 115:..\src/interruptions.c ****     CYCLES_TIMER_STATUS;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 5


 114              		.loc 1 115 0
 115 000a 044B     		ldr	r3, .L5+4
 116 000c 1B78     		ldrb	r3, [r3]
 116:..\src/interruptions.c **** 
 117:..\src/interruptions.c **** }
 117              		.loc 1 117 0
 118 000e 00BF     		nop
 119 0010 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0012 80BC     		pop	{r7}
 123              		.cfi_restore 7
 124              		.cfi_def_cfa_offset 0
 125 0014 7047     		bx	lr
 126              	.L6:
 127 0016 00BF     		.align	2
 128              	.L5:
 129 0018 00000000 		.word	cycles_interrupt_flag
 130 001c 034F0040 		.word	1073762051
 131              		.cfi_endproc
 132              	.LFE65:
 133              		.size	ISR_CYCLES_Handler, .-ISR_CYCLES_Handler
 134              		.section	.text.interrupt_manager,"ax",%progbits
 135              		.align	2
 136              		.global	interrupt_manager
 137              		.thumb
 138              		.thumb_func
 139              		.type	interrupt_manager, %function
 140              	interrupt_manager:
 141              	.LFB66:
 118:..\src/interruptions.c **** 
 119:..\src/interruptions.c **** //==============================================================================
 120:..\src/interruptions.c **** //                                                             INTERRUPT MANAGER
 121:..\src/interruptions.c **** //==============================================================================
 122:..\src/interruptions.c **** // Manage interrupt from RS485 
 123:..\src/interruptions.c **** //==============================================================================
 124:..\src/interruptions.c **** // Processing RS-485 data frame:
 125:..\src/interruptions.c **** //
 126:..\src/interruptions.c **** // - WAIT_START:    Waits for beginning characters;
 127:..\src/interruptions.c **** // - WAIT_ID:       Waits for ID;
 128:..\src/interruptions.c **** // - WAIT_LENGTH:   Data length;
 129:..\src/interruptions.c **** // - RECEIVE:       Receive all bytes;
 130:..\src/interruptions.c **** // - UNLOAD:        Wait for another device end of transmission;
 131:..\src/interruptions.c **** //
 132:..\src/interruptions.c **** //==============================================================================
 133:..\src/interruptions.c **** 
 134:..\src/interruptions.c **** void interrupt_manager(){
 142              		.loc 1 134 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 82B0     		sub	sp, sp, #8
 151              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 6


 152 0004 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 135:..\src/interruptions.c **** 
 136:..\src/interruptions.c ****     
 137:..\src/interruptions.c ****     //===========================================     local variables definition
 138:..\src/interruptions.c **** 
 139:..\src/interruptions.c ****     static uint8 CYDATA state = WAIT_START;                      // state
 140:..\src/interruptions.c ****     
 141:..\src/interruptions.c ****     //------------------------------------------------- local data packet
 142:..\src/interruptions.c ****     static uint8 CYDATA data_packet_index;
 143:..\src/interruptions.c ****     static uint8 CYDATA data_packet_length;
 144:..\src/interruptions.c ****     static uint8 data_packet_buffer[128];                     
 145:..\src/interruptions.c ****     static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 146:..\src/interruptions.c ****     //-------------------------------------------------
 147:..\src/interruptions.c **** 
 148:..\src/interruptions.c ****     uint8 CYDATA    rx_data;                            // RS485 UART rx data
 149:..\src/interruptions.c ****     CYBIT           rx_data_type = TRUE;                       // my id?
 154              		.loc 1 149 0
 155 0006 0123     		movs	r3, #1
 156 0008 FB71     		strb	r3, [r7, #7]
 150:..\src/interruptions.c ****     uint8 CYDATA    package_count = 0;                     
 157              		.loc 1 150 0
 158 000a 0023     		movs	r3, #0
 159 000c BB71     		strb	r3, [r7, #6]
 151:..\src/interruptions.c **** 
 152:..\src/interruptions.c ****     //======================================================     receive routine
 153:..\src/interruptions.c ****     
 154:..\src/interruptions.c ****     while(UART_RS485_GetRxBufferSize() && (package_count < 100)){
 160              		.loc 1 154 0
 161 000e DFE0     		b	.L8
 162              	.L28:
 155:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 156:..\src/interruptions.c **** 
 157:..\src/interruptions.c ****         // Get next char
 158:..\src/interruptions.c ****         rx_data = UART_RS485_GetChar();
 163              		.loc 1 158 0
 164 0010 FFF7FEFF 		bl	UART_RS485_GetChar
 165 0014 0346     		mov	r3, r0
 166 0016 7B71     		strb	r3, [r7, #5]
 159:..\src/interruptions.c ****         
 160:..\src/interruptions.c ****         switch (state) {
 167              		.loc 1 160 0
 168 0018 744B     		ldr	r3, .L31
 169 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 001c 042B     		cmp	r3, #4
 171 001e 00F2D780 		bhi	.L8
 172 0022 01A2     		adr	r2, .L10
 173 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 174              		.p2align 2
 175              	.L10:
 176 0028 3D000000 		.word	.L9+1
 177 002c A3000000 		.word	.L11+1
 178 0030 DF000000 		.word	.L12+1
 179 0034 2D010000 		.word	.L13+1
 180 0038 97010000 		.word	.L14+1
 181              		.p2align 1
 182              	.L9:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 7


 161:..\src/interruptions.c ****             //-----     wait for frame start     -------------------------------
 162:..\src/interruptions.c ****             case WAIT_START:
 163:..\src/interruptions.c ****             
 164:..\src/interruptions.c ****                 rx_queue[0] = rx_queue[1];
 183              		.loc 1 164 0
 184 003c 6C4B     		ldr	r3, .L31+4
 185 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 186 0040 6B4B     		ldr	r3, .L31+4
 187 0042 1A70     		strb	r2, [r3]
 165:..\src/interruptions.c ****                 rx_queue[1] = rx_queue[2];
 188              		.loc 1 165 0
 189 0044 6A4B     		ldr	r3, .L31+4
 190 0046 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 191 0048 694B     		ldr	r3, .L31+4
 192 004a 5A70     		strb	r2, [r3, #1]
 166:..\src/interruptions.c ****                 rx_queue[2] = rx_data;
 193              		.loc 1 166 0
 194 004c 684A     		ldr	r2, .L31+4
 195 004e 7B79     		ldrb	r3, [r7, #5]
 196 0050 9370     		strb	r3, [r2, #2]
 167:..\src/interruptions.c ****                 
 168:..\src/interruptions.c ****                 // Check for header configuration package
 169:..\src/interruptions.c ****                 if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 197              		.loc 1 169 0
 198 0052 674B     		ldr	r3, .L31+4
 199 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 200 0056 3A2B     		cmp	r3, #58
 201 0058 10D1     		bne	.L15
 202              		.loc 1 169 0 is_stmt 0 discriminator 1
 203 005a 654B     		ldr	r3, .L31+4
 204 005c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 205 005e 3A2B     		cmp	r3, #58
 206 0060 0CD1     		bne	.L15
 170:..\src/interruptions.c ****                     rx_queue[0] = 0;
 207              		.loc 1 170 0 is_stmt 1
 208 0062 634B     		ldr	r3, .L31+4
 209 0064 0022     		movs	r2, #0
 210 0066 1A70     		strb	r2, [r3]
 171:..\src/interruptions.c ****                     rx_queue[1] = 0;
 211              		.loc 1 171 0
 212 0068 614B     		ldr	r3, .L31+4
 213 006a 0022     		movs	r2, #0
 214 006c 5A70     		strb	r2, [r3, #1]
 172:..\src/interruptions.c ****                     rx_queue[2] = 0;
 215              		.loc 1 172 0
 216 006e 604B     		ldr	r3, .L31+4
 217 0070 0022     		movs	r2, #0
 218 0072 9A70     		strb	r2, [r3, #2]
 173:..\src/interruptions.c ****                     state       = WAIT_ID;                    
 219              		.loc 1 173 0
 220 0074 5D4B     		ldr	r3, .L31
 221 0076 0122     		movs	r2, #1
 222 0078 1A70     		strb	r2, [r3]
 223 007a 11E0     		b	.L16
 224              	.L15:
 174:..\src/interruptions.c ****                 }else
 175:..\src/interruptions.c ****                     if ((rx_queue[0] == 63) &&      //ASCII - ?
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 8


 225              		.loc 1 175 0
 226 007c 5C4B     		ldr	r3, .L31+4
 227 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 0080 3F2B     		cmp	r3, #63
 229 0082 40F0A580 		bne	.L8
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 230              		.loc 1 176 0 discriminator 1
 231 0086 5A4B     		ldr	r3, .L31+4
 232 0088 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 175:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 233              		.loc 1 175 0 discriminator 1
 234 008a 0D2B     		cmp	r3, #13
 235 008c 40F0A080 		bne	.L8
 177:..\src/interruptions.c ****                         (rx_queue[2] == 10))        //ASCII - LF)
 236              		.loc 1 177 0
 237 0090 574B     		ldr	r3, .L31+4
 238 0092 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 239              		.loc 1 176 0
 240 0094 0A2B     		cmp	r3, #10
 241 0096 40F09B80 		bne	.L8
 178:..\src/interruptions.c ****                         infoGet(INFO_ALL);
 242              		.loc 1 178 0
 243 009a 0020     		movs	r0, #0
 244 009c FFF7FEFF 		bl	infoGet
 245              	.L16:
 179:..\src/interruptions.c ****                 break;
 246              		.loc 1 179 0
 247 00a0 96E0     		b	.L8
 248              	.L11:
 180:..\src/interruptions.c **** 
 181:..\src/interruptions.c ****             //-----     wait for id     ----------------------------------------
 182:..\src/interruptions.c ****             case  WAIT_ID:
 183:..\src/interruptions.c **** 
 184:..\src/interruptions.c ****                 // packet is for my ID or is broadcast
 185:..\src/interruptions.c **** #ifdef MASTER_FW
 186:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0 || (master_mode && rx_data == c_mem.MS.
 249              		.loc 1 186 0
 250 00a2 544B     		ldr	r3, .L31+8
 251 00a4 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 252 00a6 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 253 00a8 9A42     		cmp	r2, r3
 254 00aa 0CD0     		beq	.L17
 255              		.loc 1 186 0 is_stmt 0 discriminator 1
 256 00ac 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 257 00ae 002B     		cmp	r3, #0
 258 00b0 09D0     		beq	.L17
 259              		.loc 1 186 0 discriminator 2
 260 00b2 514B     		ldr	r3, .L31+12
 261 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 262 00b6 002B     		cmp	r3, #0
 263 00b8 08D0     		beq	.L18
 264              		.loc 1 186 0 discriminator 3
 265 00ba 4E4B     		ldr	r3, .L31+8
 266 00bc 93F84130 		ldrb	r3, [r3, #65]	@ zero_extendqisi2
 267 00c0 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 268 00c2 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 9


 269 00c4 02D1     		bne	.L18
 270              	.L17:
 187:..\src/interruptions.c ****                    rx_data_type = FALSE;
 271              		.loc 1 187 0 is_stmt 1
 272 00c6 0023     		movs	r3, #0
 273 00c8 FB71     		strb	r3, [r7, #7]
 274 00ca 01E0     		b	.L19
 275              	.L18:
 188:..\src/interruptions.c ****                 else                //packet is for others
 189:..\src/interruptions.c ****                     rx_data_type = TRUE;
 276              		.loc 1 189 0
 277 00cc 0123     		movs	r3, #1
 278 00ce FB71     		strb	r3, [r7, #7]
 279              	.L19:
 190:..\src/interruptions.c **** #else
 191:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0)
 192:..\src/interruptions.c ****                     rx_data_type = FALSE;
 193:..\src/interruptions.c ****                 else                //packet is for others
 194:..\src/interruptions.c ****                     rx_data_type = TRUE;
 195:..\src/interruptions.c **** #endif                
 196:..\src/interruptions.c ****                 data_packet_length = 0;
 280              		.loc 1 196 0
 281 00d0 4A4B     		ldr	r3, .L31+16
 282 00d2 0022     		movs	r2, #0
 283 00d4 1A70     		strb	r2, [r3]
 197:..\src/interruptions.c ****                 state = WAIT_LENGTH;
 284              		.loc 1 197 0
 285 00d6 454B     		ldr	r3, .L31
 286 00d8 0222     		movs	r2, #2
 287 00da 1A70     		strb	r2, [r3]
 198:..\src/interruptions.c ****                 break;
 288              		.loc 1 198 0
 289 00dc 78E0     		b	.L8
 290              	.L12:
 199:..\src/interruptions.c **** 
 200:..\src/interruptions.c ****             //-----     wait for length     ------------------------------------
 201:..\src/interruptions.c ****             case  WAIT_LENGTH:
 202:..\src/interruptions.c **** 
 203:..\src/interruptions.c ****                 data_packet_length = rx_data;
 291              		.loc 1 203 0
 292 00de 474A     		ldr	r2, .L31+16
 293 00e0 7B79     		ldrb	r3, [r7, #5]
 294 00e2 1370     		strb	r3, [r2]
 204:..\src/interruptions.c ****                 // check validity of pack length
 205:..\src/interruptions.c ****                 if (data_packet_length <= 1) {
 295              		.loc 1 205 0
 296 00e4 454B     		ldr	r3, .L31+16
 297 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 298 00e8 012B     		cmp	r3, #1
 299 00ea 06D8     		bhi	.L20
 206:..\src/interruptions.c ****                     data_packet_length = 0;
 300              		.loc 1 206 0
 301 00ec 434B     		ldr	r3, .L31+16
 302 00ee 0022     		movs	r2, #0
 303 00f0 1A70     		strb	r2, [r3]
 207:..\src/interruptions.c ****                     state = WAIT_START;
 304              		.loc 1 207 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 10


 305 00f2 3E4B     		ldr	r3, .L31
 306 00f4 0022     		movs	r2, #0
 307 00f6 1A70     		strb	r2, [r3]
 308 00f8 6AE0     		b	.L8
 309              	.L20:
 208:..\src/interruptions.c ****                 } else if (data_packet_length > 128) {
 310              		.loc 1 208 0
 311 00fa 404B     		ldr	r3, .L31+16
 312 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 00fe 802B     		cmp	r3, #128
 314 0100 06D9     		bls	.L22
 209:..\src/interruptions.c ****                     data_packet_length = 0;
 315              		.loc 1 209 0
 316 0102 3E4B     		ldr	r3, .L31+16
 317 0104 0022     		movs	r2, #0
 318 0106 1A70     		strb	r2, [r3]
 210:..\src/interruptions.c ****                     state = WAIT_START;
 319              		.loc 1 210 0
 320 0108 384B     		ldr	r3, .L31
 321 010a 0022     		movs	r2, #0
 322 010c 1A70     		strb	r2, [r3]
 323 010e 5FE0     		b	.L8
 324              	.L22:
 211:..\src/interruptions.c ****                 } else {
 212:..\src/interruptions.c ****                     data_packet_index = 0;
 325              		.loc 1 212 0
 326 0110 3B4B     		ldr	r3, .L31+20
 327 0112 0022     		movs	r2, #0
 328 0114 1A70     		strb	r2, [r3]
 213:..\src/interruptions.c ****                     
 214:..\src/interruptions.c ****                     if(rx_data_type == FALSE)
 329              		.loc 1 214 0
 330 0116 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 331 0118 002B     		cmp	r3, #0
 332 011a 03D1     		bne	.L23
 215:..\src/interruptions.c ****                         state = RECEIVE;          // packet for me or broadcast
 333              		.loc 1 215 0
 334 011c 334B     		ldr	r3, .L31
 335 011e 0322     		movs	r2, #3
 336 0120 1A70     		strb	r2, [r3]
 337 0122 55E0     		b	.L8
 338              	.L23:
 216:..\src/interruptions.c ****                     else
 217:..\src/interruptions.c ****                         state = UNLOAD;           // packet for others
 339              		.loc 1 217 0
 340 0124 314B     		ldr	r3, .L31
 341 0126 0422     		movs	r2, #4
 342 0128 1A70     		strb	r2, [r3]
 218:..\src/interruptions.c ****                 }
 219:..\src/interruptions.c ****                 break;
 343              		.loc 1 219 0
 344 012a 51E0     		b	.L8
 345              	.L13:
 220:..\src/interruptions.c **** 
 221:..\src/interruptions.c ****             //-----     receiving     -------------------------------------------
 222:..\src/interruptions.c ****             case RECEIVE:
 223:..\src/interruptions.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 11


 224:..\src/interruptions.c ****                 data_packet_buffer[data_packet_index] = rx_data;
 346              		.loc 1 224 0
 347 012c 344B     		ldr	r3, .L31+20
 348 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 349 0130 1946     		mov	r1, r3
 350 0132 344A     		ldr	r2, .L31+24
 351 0134 7B79     		ldrb	r3, [r7, #5]
 352 0136 5354     		strb	r3, [r2, r1]
 225:..\src/interruptions.c ****                 data_packet_index++;
 353              		.loc 1 225 0
 354 0138 314B     		ldr	r3, .L31+20
 355 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 356 013c 0133     		adds	r3, r3, #1
 357 013e DAB2     		uxtb	r2, r3
 358 0140 2F4B     		ldr	r3, .L31+20
 359 0142 1A70     		strb	r2, [r3]
 226:..\src/interruptions.c ****                 
 227:..\src/interruptions.c ****                 // check end of transmission
 228:..\src/interruptions.c ****                 if (data_packet_index >= data_packet_length) {
 360              		.loc 1 228 0
 361 0144 2E4B     		ldr	r3, .L31+20
 362 0146 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 363 0148 2C4B     		ldr	r3, .L31+16
 364 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 365 014c 9A42     		cmp	r2, r3
 366 014e 3FD3     		bcc	.L8
 229:..\src/interruptions.c ****                     // verify if frame ID corresponded to the device ID
 230:..\src/interruptions.c ****                     if (rx_data_type == FALSE) {
 367              		.loc 1 230 0
 368 0150 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 369 0152 002B     		cmp	r3, #0
 370 0154 12D1     		bne	.L25
 231:..\src/interruptions.c ****                         // copying data from buffer to global packet
 232:..\src/interruptions.c ****                         memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 371              		.loc 1 232 0
 372 0156 294B     		ldr	r3, .L31+16
 373 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 374 015a 1A46     		mov	r2, r3
 375 015c 2949     		ldr	r1, .L31+24
 376 015e 2A48     		ldr	r0, .L31+28
 377 0160 FFF7FEFF 		bl	memcpy
 233:..\src/interruptions.c ****                         g_rx.length = data_packet_length;
 378              		.loc 1 233 0
 379 0164 254B     		ldr	r3, .L31+16
 380 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 381 0168 1AB2     		sxth	r2, r3
 382 016a 274B     		ldr	r3, .L31+28
 383 016c A3F88020 		strh	r2, [r3, #128]	@ movhi
 234:..\src/interruptions.c ****                         g_rx.ready  = 1;
 384              		.loc 1 234 0
 385 0170 254B     		ldr	r3, .L31+28
 386 0172 0122     		movs	r2, #1
 387 0174 83F88420 		strb	r2, [r3, #132]
 235:..\src/interruptions.c ****                         commProcess();
 388              		.loc 1 235 0
 389 0178 FFF7FEFF 		bl	commProcess
 390              	.L25:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 12


 236:..\src/interruptions.c ****                     }
 237:..\src/interruptions.c ****                     
 238:..\src/interruptions.c ****                     data_packet_index  = 0;
 391              		.loc 1 238 0
 392 017c 204B     		ldr	r3, .L31+20
 393 017e 0022     		movs	r2, #0
 394 0180 1A70     		strb	r2, [r3]
 239:..\src/interruptions.c ****                     data_packet_length = 0;
 395              		.loc 1 239 0
 396 0182 1E4B     		ldr	r3, .L31+16
 397 0184 0022     		movs	r2, #0
 398 0186 1A70     		strb	r2, [r3]
 240:..\src/interruptions.c ****                     state              = WAIT_START;
 399              		.loc 1 240 0
 400 0188 184B     		ldr	r3, .L31
 401 018a 0022     		movs	r2, #0
 402 018c 1A70     		strb	r2, [r3]
 241:..\src/interruptions.c ****                     package_count++;
 403              		.loc 1 241 0
 404 018e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 405 0190 0133     		adds	r3, r3, #1
 406 0192 BB71     		strb	r3, [r7, #6]
 242:..\src/interruptions.c ****                 
 243:..\src/interruptions.c ****                 }
 244:..\src/interruptions.c ****                 break;
 407              		.loc 1 244 0
 408 0194 1CE0     		b	.L8
 409              	.L14:
 245:..\src/interruptions.c **** 
 246:..\src/interruptions.c ****             //-----     other device is receving     ---------------------------
 247:..\src/interruptions.c ****             case UNLOAD:
 248:..\src/interruptions.c ****                 if (!(--data_packet_length)) {
 410              		.loc 1 248 0
 411 0196 194B     		ldr	r3, .L31+16
 412 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 413 019a 013B     		subs	r3, r3, #1
 414 019c DAB2     		uxtb	r2, r3
 415 019e 174B     		ldr	r3, .L31+16
 416 01a0 1A70     		strb	r2, [r3]
 417 01a2 164B     		ldr	r3, .L31+16
 418 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 419 01a6 002B     		cmp	r3, #0
 420 01a8 11D1     		bne	.L30
 249:..\src/interruptions.c ****                     data_packet_index  = 0;
 421              		.loc 1 249 0
 422 01aa 154B     		ldr	r3, .L31+20
 423 01ac 0022     		movs	r2, #0
 424 01ae 1A70     		strb	r2, [r3]
 250:..\src/interruptions.c ****                     data_packet_length = 0;
 425              		.loc 1 250 0
 426 01b0 124B     		ldr	r3, .L31+16
 427 01b2 0022     		movs	r2, #0
 428 01b4 1A70     		strb	r2, [r3]
 251:..\src/interruptions.c ****                     RS485_CTS_Write(1);
 429              		.loc 1 251 0
 430 01b6 0120     		movs	r0, #1
 431 01b8 FFF7FEFF 		bl	RS485_CTS_Write
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 13


 252:..\src/interruptions.c ****                     RS485_CTS_Write(0);
 432              		.loc 1 252 0
 433 01bc 0020     		movs	r0, #0
 434 01be FFF7FEFF 		bl	RS485_CTS_Write
 253:..\src/interruptions.c ****                     state              = WAIT_START;
 435              		.loc 1 253 0
 436 01c2 0A4B     		ldr	r3, .L31
 437 01c4 0022     		movs	r2, #0
 438 01c6 1A70     		strb	r2, [r3]
 254:..\src/interruptions.c ****                     package_count++;
 439              		.loc 1 254 0
 440 01c8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 441 01ca 0133     		adds	r3, r3, #1
 442 01cc BB71     		strb	r3, [r7, #6]
 443              	.L30:
 255:..\src/interruptions.c ****                 }
 256:..\src/interruptions.c ****                 break;
 444              		.loc 1 256 0
 445 01ce 00BF     		nop
 446              	.L8:
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 447              		.loc 1 154 0
 448 01d0 FFF7FEFF 		bl	UART_RS485_GetRxBufferSize
 449 01d4 0346     		mov	r3, r0
 450 01d6 002B     		cmp	r3, #0
 451 01d8 03D0     		beq	.L29
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 452              		.loc 1 154 0 is_stmt 0 discriminator 1
 453 01da BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 454 01dc 632B     		cmp	r3, #99
 455 01de 7FF617AF 		bls	.L28
 456              	.L29:
 257:..\src/interruptions.c ****         }
 258:..\src/interruptions.c ****     }
 259:..\src/interruptions.c **** }
 457              		.loc 1 259 0 is_stmt 1
 458 01e2 00BF     		nop
 459 01e4 0837     		adds	r7, r7, #8
 460              		.cfi_def_cfa_offset 8
 461 01e6 BD46     		mov	sp, r7
 462              		.cfi_def_cfa_register 13
 463              		@ sp needed
 464 01e8 80BD     		pop	{r7, pc}
 465              	.L32:
 466 01ea 00BF     		.align	2
 467              	.L31:
 468 01ec 00000000 		.word	state.9834
 469 01f0 04000000 		.word	rx_queue.9838
 470 01f4 00000000 		.word	c_mem
 471 01f8 00000000 		.word	master_mode
 472 01fc 07000000 		.word	data_packet_length.9836
 473 0200 08000000 		.word	data_packet_index.9835
 474 0204 0C000000 		.word	data_packet_buffer.9837
 475 0208 00000000 		.word	g_rx
 476              		.cfi_endproc
 477              	.LFE66:
 478              		.size	interrupt_manager, .-interrupt_manager
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 14


 479              		.global	__aeabi_i2f
 480              		.global	__aeabi_fdiv
 481              		.section	.text.function_scheduler,"ax",%progbits
 482              		.align	2
 483              		.global	function_scheduler
 484              		.thumb
 485              		.thumb_func
 486              		.type	function_scheduler, %function
 487              	function_scheduler:
 488              	.LFB67:
 260:..\src/interruptions.c **** //==============================================================================
 261:..\src/interruptions.c **** //                                                            FUNCTION SCHEDULER
 262:..\src/interruptions.c **** //==============================================================================
 263:..\src/interruptions.c **** // Call all the function with the right frequency
 264:..\src/interruptions.c **** //==============================================================================
 265:..\src/interruptions.c **** // Base frequency 5000 Hz (110 us - max. 200 us cycle time)
 266:..\src/interruptions.c **** //==============================================================================
 267:..\src/interruptions.c **** 
 268:..\src/interruptions.c **** void function_scheduler(void) {
 489              		.loc 1 268 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 2504
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493 0000 B0B5     		push	{r4, r5, r7, lr}
 494              		.cfi_def_cfa_offset 16
 495              		.cfi_offset 4, -16
 496              		.cfi_offset 5, -12
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 ADF6C81D 		subw	sp, sp, #2504
 500              		.cfi_def_cfa_offset 2520
 501 0006 00AF     		add	r7, sp, #0
 502              		.cfi_def_cfa_register 7
 269:..\src/interruptions.c ****  
 270:..\src/interruptions.c ****     static uint16 counter_calibration = DIV_INIT_VALUE;
 271:..\src/interruptions.c ****     static uint16 counter_tension_func = DIV_INIT_VALUE;
 272:..\src/interruptions.c ****     char info_[2500] = "";
 503              		.loc 1 272 0
 504 0008 3B46     		mov	r3, r7
 505 000a 0022     		movs	r2, #0
 506 000c 1A60     		str	r2, [r3]
 507 000e 0433     		adds	r3, r3, #4
 508 0010 4FF41C62 		mov	r2, #2496
 509 0014 0021     		movs	r1, #0
 510 0016 1846     		mov	r0, r3
 511 0018 FFF7FEFF 		bl	memset
 273:..\src/interruptions.c ****     
 274:..\src/interruptions.c ****     uint8 MOTOR_IDX = 0;
 512              		.loc 1 274 0
 513 001c 0023     		movs	r3, #0
 514 001e 87F8C739 		strb	r3, [r7, #2503]
 275:..\src/interruptions.c ****     uint8 SECOND_MOTOR_IDX = 1;
 515              		.loc 1 275 0
 516 0022 0123     		movs	r3, #1
 517 0024 87F8C639 		strb	r3, [r7, #2502]
 276:..\src/interruptions.c ****     
 277:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x00);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 15


 518              		.loc 1 277 0
 519 0028 0020     		movs	r0, #0
 520 002a FFF7FEFF 		bl	MY_TIMER_REG_Write
 278:..\src/interruptions.c ****     timer_value0 = (uint32)MY_TIMER_ReadCounter();
 521              		.loc 1 278 0
 522 002e FFF7FEFF 		bl	MY_TIMER_ReadCounter
 523 0032 0346     		mov	r3, r0
 524 0034 1A46     		mov	r2, r3
 525 0036 934B     		ldr	r3, .L56
 526 0038 1A80     		strh	r2, [r3]	@ movhi
 279:..\src/interruptions.c ****     // Start ADC Conversion, SOC = 1
 280:..\src/interruptions.c **** 
 281:..\src/interruptions.c ****     ADC_SOC_Write(0x01); 
 527              		.loc 1 281 0
 528 003a 0120     		movs	r0, #1
 529 003c FFF7FEFF 		bl	ADC_SOC_Write
 282:..\src/interruptions.c ****     
 283:..\src/interruptions.c ****     // Check Interrupt 
 284:..\src/interruptions.c **** 
 285:..\src/interruptions.c ****     if (interrupt_flag){
 530              		.loc 1 285 0
 531 0040 914B     		ldr	r3, .L56+4
 532 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 533 0044 002B     		cmp	r3, #0
 534 0046 04D0     		beq	.L34
 286:..\src/interruptions.c ****         interrupt_flag = FALSE;
 535              		.loc 1 286 0
 536 0048 8F4B     		ldr	r3, .L56+4
 537 004a 0022     		movs	r2, #0
 538 004c 1A70     		strb	r2, [r3]
 287:..\src/interruptions.c ****         interrupt_manager();
 539              		.loc 1 287 0
 540 004e FFF7FEFF 		bl	interrupt_manager
 541              	.L34:
 288:..\src/interruptions.c ****     }
 289:..\src/interruptions.c ****    
 290:..\src/interruptions.c ****             // if master_mode parameter is set to 1
 291:..\src/interruptions.c ****             if (g_mem.MS.master_mode_active){  
 542              		.loc 1 291 0
 543 0052 8E4B     		ldr	r3, .L56+8
 544 0054 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 545 0058 002B     		cmp	r3, #0
 546 005a 11D0     		beq	.L35
 292:..\src/interruptions.c ****                 
 293:..\src/interruptions.c ****                 // Check if voltage on pin MASTER MODE VOLTAGE, set by a physical switch, is HIGH o
 294:..\src/interruptions.c ****                 // This is a way to force exit from master_mode during execution, since USB command
 295:..\src/interruptions.c ****                 // are hampered by the communications between the two boards (slave and master)
 296:..\src/interruptions.c ****                 
 297:..\src/interruptions.c ****                 if (flag_master < 2000)       // if voltage is LOW, exit master mode
 547              		.loc 1 297 0
 548 005c 8C4B     		ldr	r3, .L56+12
 549 005e 1B68     		ldr	r3, [r3]
 550 0060 B3F5FA6F 		cmp	r3, #2000
 551 0064 03DA     		bge	.L36
 298:..\src/interruptions.c ****                     master_mode = 0;
 552              		.loc 1 298 0
 553 0066 8B4B     		ldr	r3, .L56+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 16


 554 0068 0022     		movs	r2, #0
 555 006a 1A70     		strb	r2, [r3]
 556 006c 0BE0     		b	.L38
 557              	.L36:
 299:..\src/interruptions.c ****                 
 300:..\src/interruptions.c ****                 else if (flag_master > 2000)  // if voltage is HIGH, enter master mode
 558              		.loc 1 300 0
 559 006e 884B     		ldr	r3, .L56+12
 560 0070 1B68     		ldr	r3, [r3]
 561 0072 B3F5FA6F 		cmp	r3, #2000
 562 0076 06DD     		ble	.L38
 301:..\src/interruptions.c ****                     master_mode = 1;
 563              		.loc 1 301 0
 564 0078 864B     		ldr	r3, .L56+16
 565 007a 0122     		movs	r2, #1
 566 007c 1A70     		strb	r2, [r3]
 567 007e 02E0     		b	.L38
 568              	.L35:
 302:..\src/interruptions.c ****             }
 303:..\src/interruptions.c ****             
 304:..\src/interruptions.c ****             else{
 305:..\src/interruptions.c ****                 master_mode = 0;
 569              		.loc 1 305 0
 570 0080 844B     		ldr	r3, .L56+16
 571 0082 0022     		movs	r2, #0
 572 0084 1A70     		strb	r2, [r3]
 573              	.L38:
 306:..\src/interruptions.c ****             }
 307:..\src/interruptions.c ****                     
 308:..\src/interruptions.c ****             if (master_mode){
 574              		.loc 1 308 0
 575 0086 834B     		ldr	r3, .L56+16
 576 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 577 008a 002B     		cmp	r3, #0
 578 008c 3ED0     		beq	.L39
 309:..\src/interruptions.c ****                 
 310:..\src/interruptions.c ****                 //-------------------------------------------------------------- Air Chamber and Vi
 311:..\src/interruptions.c ****                 if (g_mem.FB.vibrotactile_feedback_active && g_mem.FB.airchamber_feedback_active){ 
 579              		.loc 1 311 0
 580 008e 7F4B     		ldr	r3, .L56+8
 581 0090 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 582 0094 002B     		cmp	r3, #0
 583 0096 09D0     		beq	.L40
 584              		.loc 1 311 0 is_stmt 0 discriminator 1
 585 0098 7C4B     		ldr	r3, .L56+8
 586 009a 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 587 009e 002B     		cmp	r3, #0
 588 00a0 04D0     		beq	.L40
 312:..\src/interruptions.c ****                     
 313:..\src/interruptions.c ****                     
 314:..\src/interruptions.c ****                                     
 315:..\src/interruptions.c ****                     air_chambers_control();
 589              		.loc 1 315 0 is_stmt 1
 590 00a2 FFF7FEFF 		bl	air_chambers_control
 316:..\src/interruptions.c ****                     vibrotactile_control();
 591              		.loc 1 316 0
 592 00a6 FFF7FEFF 		bl	vibrotactile_control
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 17


 593 00aa 0EE0     		b	.L41
 594              	.L40:
 317:..\src/interruptions.c ****                   
 318:..\src/interruptions.c ****                 }
 319:..\src/interruptions.c ****                 
 320:..\src/interruptions.c ****                 //-------------------------------------------------------------- Air Chamber contro
 321:..\src/interruptions.c ****                 else if (g_mem.FB.airchamber_feedback_active){
 595              		.loc 1 321 0
 596 00ac 774B     		ldr	r3, .L56+8
 597 00ae 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 598 00b2 002B     		cmp	r3, #0
 599 00b4 02D0     		beq	.L42
 322:..\src/interruptions.c ****                     
 323:..\src/interruptions.c ****                     
 324:..\src/interruptions.c ****                       
 325:..\src/interruptions.c ****                     air_chambers_control();
 600              		.loc 1 325 0
 601 00b6 FFF7FEFF 		bl	air_chambers_control
 602 00ba 06E0     		b	.L41
 603              	.L42:
 326:..\src/interruptions.c ****                     
 327:..\src/interruptions.c ****                 }
 328:..\src/interruptions.c ****             
 329:..\src/interruptions.c ****                 //-------------------------------------------------------------- Vibrotactile contr
 330:..\src/interruptions.c ****                 else if (g_mem.FB.vibrotactile_feedback_active){
 604              		.loc 1 330 0
 605 00bc 734B     		ldr	r3, .L56+8
 606 00be 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 607 00c2 002B     		cmp	r3, #0
 608 00c4 01D0     		beq	.L41
 331:..\src/interruptions.c ****                     
 332:..\src/interruptions.c ****                     
 333:..\src/interruptions.c ****                     
 334:..\src/interruptions.c ****                     
 335:..\src/interruptions.c ****                     vibrotactile_control();
 609              		.loc 1 335 0
 610 00c6 FFF7FEFF 		bl	vibrotactile_control
 611              	.L41:
 336:..\src/interruptions.c ****                 }
 337:..\src/interruptions.c ****                 
 338:..\src/interruptions.c ****                 if (interrupt_flag){
 612              		.loc 1 338 0
 613 00ca 6F4B     		ldr	r3, .L56+4
 614 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 615 00ce 002B     		cmp	r3, #0
 616 00d0 04D0     		beq	.L43
 339:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 617              		.loc 1 339 0
 618 00d2 6D4B     		ldr	r3, .L56+4
 619 00d4 0022     		movs	r2, #0
 620 00d6 1A70     		strb	r2, [r3]
 340:..\src/interruptions.c ****                     interrupt_manager();
 621              		.loc 1 340 0
 622 00d8 FFF7FEFF 		bl	interrupt_manager
 623              	.L43:
 341:..\src/interruptions.c ****                 }
 342:..\src/interruptions.c ****                     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 18


 343:..\src/interruptions.c ****                 motor_control_generic(SECOND_MOTOR_IDX); // Compute reference for the SH starting f
 624              		.loc 1 343 0
 625 00dc 97F8C639 		ldrb	r3, [r7, #2502]	@ zero_extendqisi2
 626 00e0 1846     		mov	r0, r3
 627 00e2 FFF7FEFF 		bl	motor_control_generic
 344:..\src/interruptions.c ****                     
 345:..\src/interruptions.c ****                 drive_slave(SECOND_MOTOR_IDX, c_mem.MS.slave_ID); // Send reference to the SH calli
 628              		.loc 1 345 0
 629 00e6 6C4B     		ldr	r3, .L56+20
 630 00e8 93F84120 		ldrb	r2, [r3, #65]	@ zero_extendqisi2
 631 00ec 97F8C639 		ldrb	r3, [r7, #2502]	@ zero_extendqisi2
 632 00f0 1146     		mov	r1, r2
 633 00f2 1846     		mov	r0, r3
 634 00f4 FFF7FEFF 		bl	drive_slave
 346:..\src/interruptions.c ****                     
 347:..\src/interruptions.c ****                 if (interrupt_flag){
 635              		.loc 1 347 0
 636 00f8 634B     		ldr	r3, .L56+4
 637 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 638 00fc 002B     		cmp	r3, #0
 639 00fe 0ED0     		beq	.L45
 348:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 640              		.loc 1 348 0
 641 0100 614B     		ldr	r3, .L56+4
 642 0102 0022     		movs	r2, #0
 643 0104 1A70     		strb	r2, [r3]
 349:..\src/interruptions.c ****                     interrupt_manager();
 644              		.loc 1 349 0
 645 0106 FFF7FEFF 		bl	interrupt_manager
 646 010a 08E0     		b	.L45
 647              	.L39:
 350:..\src/interruptions.c ****                 }
 351:..\src/interruptions.c ****             }
 352:..\src/interruptions.c ****             
 353:..\src/interruptions.c ****            
 354:..\src/interruptions.c ****             else {
 355:..\src/interruptions.c ****                 
 356:..\src/interruptions.c ****                 
 357:..\src/interruptions.c ****                 
 358:..\src/interruptions.c ****                     
 359:..\src/interruptions.c ****                 // Check Interrupt 
 360:..\src/interruptions.c ****                 if (interrupt_flag){
 648              		.loc 1 360 0
 649 010c 5E4B     		ldr	r3, .L56+4
 650 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 651 0110 002B     		cmp	r3, #0
 652 0112 04D0     		beq	.L45
 361:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 653              		.loc 1 361 0
 654 0114 5C4B     		ldr	r3, .L56+4
 655 0116 0022     		movs	r2, #0
 656 0118 1A70     		strb	r2, [r3]
 362:..\src/interruptions.c ****                     interrupt_manager();
 657              		.loc 1 362 0
 658 011a FFF7FEFF 		bl	interrupt_manager
 659              	.L45:
 363:..\src/interruptions.c ****                 } 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 19


 364:..\src/interruptions.c ****             }
 365:..\src/interruptions.c ****             
 366:..\src/interruptions.c ****             motor_control_generic(MOTOR_IDX);  // Compute references and drive air pump
 660              		.loc 1 366 0
 661 011e 97F8C739 		ldrb	r3, [r7, #2503]	@ zero_extendqisi2
 662 0122 1846     		mov	r0, r3
 663 0124 FFF7FEFF 		bl	motor_control_generic
 367:..\src/interruptions.c ****     
 368:..\src/interruptions.c ****             if (interrupt_flag){
 664              		.loc 1 368 0
 665 0128 574B     		ldr	r3, .L56+4
 666 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 667 012c 002B     		cmp	r3, #0
 668 012e 04D0     		beq	.L46
 369:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 669              		.loc 1 369 0
 670 0130 554B     		ldr	r3, .L56+4
 671 0132 0022     		movs	r2, #0
 672 0134 1A70     		strb	r2, [r3]
 370:..\src/interruptions.c ****                 interrupt_manager();
 673              		.loc 1 370 0
 674 0136 FFF7FEFF 		bl	interrupt_manager
 675              	.L46:
 371:..\src/interruptions.c ****             }
 372:..\src/interruptions.c ****     
 373:..\src/interruptions.c ****            
 374:..\src/interruptions.c ****     //---------------------------------- Read conversion buffer - LOCK function
 375:..\src/interruptions.c **** 
 376:..\src/interruptions.c ****     analog_read_end();
 676              		.loc 1 376 0
 677 013a FFF7FEFF 		bl	analog_read_end
 377:..\src/interruptions.c **** 
 378:..\src/interruptions.c ****     if (interrupt_flag){
 678              		.loc 1 378 0
 679 013e 524B     		ldr	r3, .L56+4
 680 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 681 0142 002B     		cmp	r3, #0
 682 0144 04D0     		beq	.L47
 379:..\src/interruptions.c ****         interrupt_flag = FALSE;
 683              		.loc 1 379 0
 684 0146 504B     		ldr	r3, .L56+4
 685 0148 0022     		movs	r2, #0
 686 014a 1A70     		strb	r2, [r3]
 380:..\src/interruptions.c ****         interrupt_manager();
 687              		.loc 1 380 0
 688 014c FFF7FEFF 		bl	interrupt_manager
 689              	.L47:
 381:..\src/interruptions.c ****     }
 382:..\src/interruptions.c **** 
 383:..\src/interruptions.c ****     //---------------------------------- Control Overcurrent
 384:..\src/interruptions.c **** 
 385:..\src/interruptions.c ****     overcurrent_control();
 690              		.loc 1 385 0
 691 0150 FFF7FEFF 		bl	overcurrent_control
 386:..\src/interruptions.c ****     
 387:..\src/interruptions.c ****     // Check Interrupt 
 388:..\src/interruptions.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 20


 389:..\src/interruptions.c ****     if (interrupt_flag){
 692              		.loc 1 389 0
 693 0154 4C4B     		ldr	r3, .L56+4
 694 0156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 695 0158 002B     		cmp	r3, #0
 696 015a 04D0     		beq	.L48
 390:..\src/interruptions.c ****         interrupt_flag = FALSE;
 697              		.loc 1 390 0
 698 015c 4A4B     		ldr	r3, .L56+4
 699 015e 0022     		movs	r2, #0
 700 0160 1A70     		strb	r2, [r3]
 391:..\src/interruptions.c ****         interrupt_manager();
 701              		.loc 1 391 0
 702 0162 FFF7FEFF 		bl	interrupt_manager
 703              	.L48:
 392:..\src/interruptions.c ****     }
 393:..\src/interruptions.c **** 
 394:..\src/interruptions.c ****     //---------------------------------- Calibration 
 395:..\src/interruptions.c **** 
 396:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 397:..\src/interruptions.c ****     if (calib.enabled == TRUE) {
 704              		.loc 1 397 0
 705 0166 4D4B     		ldr	r3, .L56+24
 706 0168 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 707 016a 012B     		cmp	r3, #1
 708 016c 0ED1     		bne	.L49
 398:..\src/interruptions.c ****         if (counter_calibration == CALIBRATION_DIV) {
 709              		.loc 1 398 0
 710 016e 4C4B     		ldr	r3, .L56+28
 711 0170 1B88     		ldrh	r3, [r3]
 712 0172 0A2B     		cmp	r3, #10
 713 0174 04D1     		bne	.L50
 399:..\src/interruptions.c ****             calibration();
 714              		.loc 1 399 0
 715 0176 FFF7FEFF 		bl	calibration
 400:..\src/interruptions.c ****             counter_calibration = 0;
 716              		.loc 1 400 0
 717 017a 494B     		ldr	r3, .L56+28
 718 017c 0022     		movs	r2, #0
 719 017e 1A80     		strh	r2, [r3]	@ movhi
 720              	.L50:
 401:..\src/interruptions.c ****         }
 402:..\src/interruptions.c ****         counter_calibration++;
 721              		.loc 1 402 0
 722 0180 474B     		ldr	r3, .L56+28
 723 0182 1B88     		ldrh	r3, [r3]
 724 0184 0133     		adds	r3, r3, #1
 725 0186 9AB2     		uxth	r2, r3
 726 0188 454B     		ldr	r3, .L56+28
 727 018a 1A80     		strh	r2, [r3]	@ movhi
 728              	.L49:
 403:..\src/interruptions.c ****     }
 404:..\src/interruptions.c **** 
 405:..\src/interruptions.c ****     // Check Interrupt 
 406:..\src/interruptions.c ****     
 407:..\src/interruptions.c ****     if (interrupt_flag){
 729              		.loc 1 407 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 21


 730 018c 3E4B     		ldr	r3, .L56+4
 731 018e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 732 0190 002B     		cmp	r3, #0
 733 0192 04D0     		beq	.L51
 408:..\src/interruptions.c ****         interrupt_flag = FALSE;
 734              		.loc 1 408 0
 735 0194 3C4B     		ldr	r3, .L56+4
 736 0196 0022     		movs	r2, #0
 737 0198 1A70     		strb	r2, [r3]
 409:..\src/interruptions.c ****         interrupt_manager();
 738              		.loc 1 409 0
 739 019a FFF7FEFF 		bl	interrupt_manager
 740              	.L51:
 410:..\src/interruptions.c ****     }
 411:..\src/interruptions.c ****     
 412:..\src/interruptions.c **** 
 413:..\src/interruptions.c ****     
 414:..\src/interruptions.c ****      
 415:..\src/interruptions.c **** 
 416:..\src/interruptions.c ****     
 417:..\src/interruptions.c ****     //---------------------------------- Control Cycles Counter
 418:..\src/interruptions.c **** 
 419:..\src/interruptions.c ****     // Check Cycles Interrupt 
 420:..\src/interruptions.c ****     
 421:..\src/interruptions.c ****         
 422:..\src/interruptions.c ****         
 423:..\src/interruptions.c ****         // Deactivate the motor just for the time data are written in the EEPROM
 424:..\src/interruptions.c ****         
 425:..\src/interruptions.c ****         
 426:..\src/interruptions.c ****     
 427:..\src/interruptions.c ****     
 428:..\src/interruptions.c ****     // Check Interrupt 
 429:..\src/interruptions.c ****     
 430:..\src/interruptions.c ****     if (interrupt_flag){
 741              		.loc 1 430 0
 742 019e 3A4B     		ldr	r3, .L56+4
 743 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 744 01a2 002B     		cmp	r3, #0
 745 01a4 04D0     		beq	.L52
 431:..\src/interruptions.c ****         interrupt_flag = FALSE;
 746              		.loc 1 431 0
 747 01a6 384B     		ldr	r3, .L56+4
 748 01a8 0022     		movs	r2, #0
 749 01aa 1A70     		strb	r2, [r3]
 432:..\src/interruptions.c ****         interrupt_manager();
 750              		.loc 1 432 0
 751 01ac FFF7FEFF 		bl	interrupt_manager
 752              	.L52:
 433:..\src/interruptions.c ****     }
 434:..\src/interruptions.c ****     
 435:..\src/interruptions.c ****     
 436:..\src/interruptions.c ****     //---------------------------------- Check battery
 437:..\src/interruptions.c **** 
 438:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 439:..\src/interruptions.c ****     if (counter_tension_func == CALIBRATION_DIV) {
 753              		.loc 1 439 0
 754 01b0 3C4B     		ldr	r3, .L56+32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 22


 755 01b2 1B88     		ldrh	r3, [r3]
 756 01b4 0A2B     		cmp	r3, #10
 757 01b6 04D1     		bne	.L53
 440:..\src/interruptions.c ****         battery_management();   
 758              		.loc 1 440 0
 759 01b8 FFF7FEFF 		bl	battery_management
 441:..\src/interruptions.c ****         counter_tension_func = 0;
 760              		.loc 1 441 0
 761 01bc 394B     		ldr	r3, .L56+32
 762 01be 0022     		movs	r2, #0
 763 01c0 1A80     		strh	r2, [r3]	@ movhi
 764              	.L53:
 442:..\src/interruptions.c ****     }
 443:..\src/interruptions.c ****     counter_tension_func++;
 765              		.loc 1 443 0
 766 01c2 384B     		ldr	r3, .L56+32
 767 01c4 1B88     		ldrh	r3, [r3]
 768 01c6 0133     		adds	r3, r3, #1
 769 01c8 9AB2     		uxth	r2, r3
 770 01ca 364B     		ldr	r3, .L56+32
 771 01cc 1A80     		strh	r2, [r3]	@ movhi
 444:..\src/interruptions.c **** 
 445:..\src/interruptions.c ****     // Check Interrupt 
 446:..\src/interruptions.c ****     
 447:..\src/interruptions.c ****     if (interrupt_flag){
 772              		.loc 1 447 0
 773 01ce 2E4B     		ldr	r3, .L56+4
 774 01d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 775 01d2 002B     		cmp	r3, #0
 776 01d4 04D0     		beq	.L54
 448:..\src/interruptions.c ****         interrupt_flag = FALSE;
 777              		.loc 1 448 0
 778 01d6 2C4B     		ldr	r3, .L56+4
 779 01d8 0022     		movs	r2, #0
 780 01da 1A70     		strb	r2, [r3]
 449:..\src/interruptions.c ****         interrupt_manager();
 781              		.loc 1 449 0
 782 01dc FFF7FEFF 		bl	interrupt_manager
 783              	.L54:
 450:..\src/interruptions.c ****     }
 451:..\src/interruptions.c **** 
 452:..\src/interruptions.c ****    
 453:..\src/interruptions.c ****     //---------------------------------- Update States
 454:..\src/interruptions.c ****     
 455:..\src/interruptions.c ****     // Load k-1 state
 456:..\src/interruptions.c ****     memcpy( &g_adc_measOld, &g_adc_meas, sizeof(g_adc_meas) );
 784              		.loc 1 456 0
 785 01e0 314B     		ldr	r3, .L56+36
 786 01e2 324A     		ldr	r2, .L56+40
 787 01e4 07CA     		ldmia	r2, {r0, r1, r2}
 788 01e6 83E80700 		stmia	r3, {r0, r1, r2}
 457:..\src/interruptions.c ****     memcpy( &g_measOld, &g_meas, sizeof(g_meas) );
 789              		.loc 1 457 0
 790 01ea 314A     		ldr	r2, .L56+44
 791 01ec 314B     		ldr	r3, .L56+48
 792 01ee 1046     		mov	r0, r2
 793 01f0 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 23


 794 01f2 6823     		movs	r3, #104
 795 01f4 1A46     		mov	r2, r3
 796 01f6 FFF7FEFF 		bl	memcpy
 458:..\src/interruptions.c ****     memcpy( &g_refOld, &g_ref, sizeof(g_ref) );
 797              		.loc 1 458 0
 798 01fa 2F4A     		ldr	r2, .L56+52
 799 01fc 2F4B     		ldr	r3, .L56+56
 800 01fe 1446     		mov	r4, r2
 801 0200 1D46     		mov	r5, r3
 802 0202 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 803 0204 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 804 0206 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 805 020a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 459:..\src/interruptions.c **** 
 460:..\src/interruptions.c ****     // Load k+1 state        
 461:..\src/interruptions.c ****     memcpy( &g_ref, &g_refNew, sizeof(g_ref) );
 806              		.loc 1 461 0
 807 020e 2B4A     		ldr	r2, .L56+56
 808 0210 2B4B     		ldr	r3, .L56+60
 809 0212 1446     		mov	r4, r2
 810 0214 1D46     		mov	r5, r3
 811 0216 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 812 0218 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 813 021a 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 814 021e 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 462:..\src/interruptions.c ****     memcpy( &g_imu, &g_imuNew, sizeof(g_imu) );
 815              		.loc 1 462 0
 816 0222 284A     		ldr	r2, .L56+64
 817 0224 284B     		ldr	r3, .L56+68
 818 0226 1046     		mov	r0, r2
 819 0228 1946     		mov	r1, r3
 820 022a C823     		movs	r3, #200
 821 022c 1A46     		mov	r2, r3
 822 022e FFF7FEFF 		bl	memcpy
 463:..\src/interruptions.c ****                     
 464:..\src/interruptions.c ****     if (interrupt_flag){
 823              		.loc 1 464 0
 824 0232 154B     		ldr	r3, .L56+4
 825 0234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 826 0236 002B     		cmp	r3, #0
 827 0238 04D0     		beq	.L55
 465:..\src/interruptions.c ****         interrupt_flag = FALSE;
 828              		.loc 1 465 0
 829 023a 134B     		ldr	r3, .L56+4
 830 023c 0022     		movs	r2, #0
 831 023e 1A70     		strb	r2, [r3]
 466:..\src/interruptions.c ****         interrupt_manager();
 832              		.loc 1 466 0
 833 0240 FFF7FEFF 		bl	interrupt_manager
 834              	.L55:
 467:..\src/interruptions.c ****     }
 468:..\src/interruptions.c **** 
 469:..\src/interruptions.c ****     timer_value = (uint16)MY_TIMER_ReadCounter();
 835              		.loc 1 469 0
 836 0244 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 837 0248 0346     		mov	r3, r0
 838 024a 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 24


 839 024c 1F4B     		ldr	r3, .L56+72
 840 024e 1A80     		strh	r2, [r3]	@ movhi
 470:..\src/interruptions.c ****     cycle_time = ((float)(timer_value0 - timer_value)/1000000.0);
 841              		.loc 1 470 0
 842 0250 0C4B     		ldr	r3, .L56
 843 0252 1B88     		ldrh	r3, [r3]
 844 0254 1A46     		mov	r2, r3
 845 0256 1D4B     		ldr	r3, .L56+72
 846 0258 1B88     		ldrh	r3, [r3]
 847 025a D31A     		subs	r3, r2, r3
 848 025c 1846     		mov	r0, r3
 849 025e FFF7FEFF 		bl	__aeabi_i2f
 850 0262 0346     		mov	r3, r0
 851 0264 1A49     		ldr	r1, .L56+76
 852 0266 1846     		mov	r0, r3
 853 0268 FFF7FEFF 		bl	__aeabi_fdiv
 854 026c 0346     		mov	r3, r0
 855 026e 1A46     		mov	r2, r3
 856 0270 184B     		ldr	r3, .L56+80
 857 0272 1A60     		str	r2, [r3]	@ float
 471:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x01);   // reset timer
 858              		.loc 1 471 0
 859 0274 0120     		movs	r0, #1
 860 0276 FFF7FEFF 		bl	MY_TIMER_REG_Write
 472:..\src/interruptions.c **** 
 473:..\src/interruptions.c **** }
 861              		.loc 1 473 0
 862 027a 00BF     		nop
 863 027c 07F6C817 		addw	r7, r7, #2504
 864              		.cfi_def_cfa_offset 16
 865 0280 BD46     		mov	sp, r7
 866              		.cfi_def_cfa_register 13
 867              		@ sp needed
 868 0282 B0BD     		pop	{r4, r5, r7, pc}
 869              	.L57:
 870              		.align	2
 871              	.L56:
 872 0284 00000000 		.word	timer_value0
 873 0288 00000000 		.word	interrupt_flag
 874 028c 00000000 		.word	g_mem
 875 0290 00000000 		.word	flag_master
 876 0294 00000000 		.word	master_mode
 877 0298 00000000 		.word	c_mem
 878 029c 00000000 		.word	calib
 879 02a0 00000000 		.word	counter_calibration.9854
 880 02a4 02000000 		.word	counter_tension_func.9855
 881 02a8 00000000 		.word	g_adc_measOld
 882 02ac 00000000 		.word	g_adc_meas
 883 02b0 00000000 		.word	g_measOld
 884 02b4 00000000 		.word	g_meas
 885 02b8 00000000 		.word	g_refOld
 886 02bc 00000000 		.word	g_ref
 887 02c0 00000000 		.word	g_refNew
 888 02c4 00000000 		.word	g_imu
 889 02c8 00000000 		.word	g_imuNew
 890 02cc 00000000 		.word	timer_value
 891 02d0 00247449 		.word	1232348160
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 25


 892 02d4 00000000 		.word	cycle_time
 893              		.cfi_endproc
 894              	.LFE67:
 895              		.size	function_scheduler, .-function_scheduler
 896              		.section	.text.compute_reference,"ax",%progbits
 897              		.align	2
 898              		.global	compute_reference
 899              		.thumb
 900              		.thumb_func
 901              		.type	compute_reference, %function
 902              	compute_reference:
 903              	.LFB68:
 474:..\src/interruptions.c **** 
 475:..\src/interruptions.c **** //==============================================================================
 476:..\src/interruptions.c **** //                                                       COMPUTE MOTOR REFERENCE
 477:..\src/interruptions.c **** //==============================================================================
 478:..\src/interruptions.c **** void compute_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct st_ref* st_refOld_p) {
 904              		.loc 1 478 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 16
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 909 0000 80B4     		push	{r7}
 910              		.cfi_def_cfa_offset 4
 911              		.cfi_offset 7, -4
 912 0002 85B0     		sub	sp, sp, #20
 913              		.cfi_def_cfa_offset 24
 914 0004 00AF     		add	r7, sp, #0
 915              		.cfi_def_cfa_register 7
 916 0006 0346     		mov	r3, r0
 917 0008 B960     		str	r1, [r7, #8]
 918 000a 7A60     		str	r2, [r7, #4]
 919 000c FB73     		strb	r3, [r7, #15]
 479:..\src/interruptions.c ****     
 480:..\src/interruptions.c **** }
 920              		.loc 1 480 0
 921 000e 00BF     		nop
 922 0010 1437     		adds	r7, r7, #20
 923              		.cfi_def_cfa_offset 4
 924 0012 BD46     		mov	sp, r7
 925              		.cfi_def_cfa_register 13
 926              		@ sp needed
 927 0014 80BC     		pop	{r7}
 928              		.cfi_restore 7
 929              		.cfi_def_cfa_offset 0
 930 0016 7047     		bx	lr
 931              		.cfi_endproc
 932              	.LFE68:
 933              		.size	compute_reference, .-compute_reference
 934              		.section	.text.compute_SoftHand_2_motors_joystick_reference,"ax",%progbits
 935              		.align	2
 936              		.global	compute_SoftHand_2_motors_joystick_reference
 937              		.thumb
 938              		.thumb_func
 939              		.type	compute_SoftHand_2_motors_joystick_reference, %function
 940              	compute_SoftHand_2_motors_joystick_reference:
 941              	.LFB69:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 26


 481:..\src/interruptions.c **** 
 482:..\src/interruptions.c **** 
 483:..\src/interruptions.c **** //==============================================================================
 484:..\src/interruptions.c **** //                                  COMPUTE SOFTHAND 2 MOTORS JOYSTICK REFERENCE
 485:..\src/interruptions.c **** //==============================================================================
 486:..\src/interruptions.c **** void compute_SoftHand_2_motors_joystick_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct 
 942              		.loc 1 486 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 16
 945              		@ frame_needed = 1, uses_anonymous_args = 0
 946              		@ link register save eliminated.
 947 0000 80B4     		push	{r7}
 948              		.cfi_def_cfa_offset 4
 949              		.cfi_offset 7, -4
 950 0002 85B0     		sub	sp, sp, #20
 951              		.cfi_def_cfa_offset 24
 952 0004 00AF     		add	r7, sp, #0
 953              		.cfi_def_cfa_register 7
 954 0006 0346     		mov	r3, r0
 955 0008 B960     		str	r1, [r7, #8]
 956 000a 7A60     		str	r2, [r7, #4]
 957 000c FB73     		strb	r3, [r7, #15]
 487:..\src/interruptions.c ****            
 488:..\src/interruptions.c **** }
 958              		.loc 1 488 0
 959 000e 00BF     		nop
 960 0010 1437     		adds	r7, r7, #20
 961              		.cfi_def_cfa_offset 4
 962 0012 BD46     		mov	sp, r7
 963              		.cfi_def_cfa_register 13
 964              		@ sp needed
 965 0014 80BC     		pop	{r7}
 966              		.cfi_restore 7
 967              		.cfi_def_cfa_offset 0
 968 0016 7047     		bx	lr
 969              		.cfi_endproc
 970              	.LFE69:
 971              		.size	compute_SoftHand_2_motors_joystick_reference, .-compute_SoftHand_2_motors_joystick_reference
 972              		.section	.text.compute_SoftHand_2_motors_emg_reference,"ax",%progbits
 973              		.align	2
 974              		.global	compute_SoftHand_2_motors_emg_reference
 975              		.thumb
 976              		.thumb_func
 977              		.type	compute_SoftHand_2_motors_emg_reference, %function
 978              	compute_SoftHand_2_motors_emg_reference:
 979              	.LFB70:
 489:..\src/interruptions.c **** 
 490:..\src/interruptions.c **** 
 491:..\src/interruptions.c **** //==============================================================================
 492:..\src/interruptions.c **** //                                       COMPUTE SOFTHAND 2 MOTORS EMG REFERENCE
 493:..\src/interruptions.c **** //==============================================================================
 494:..\src/interruptions.c **** void compute_SoftHand_2_motors_emg_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct st_re
 495:..\src/interruptions.c ****     int32 err_emg_1, int32 err_emg_2) {
 980              		.loc 1 495 0
 981              		.cfi_startproc
 982              		@ args = 4, pretend = 0, frame = 16
 983              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 27


 984              		@ link register save eliminated.
 985 0000 80B4     		push	{r7}
 986              		.cfi_def_cfa_offset 4
 987              		.cfi_offset 7, -4
 988 0002 85B0     		sub	sp, sp, #20
 989              		.cfi_def_cfa_offset 24
 990 0004 00AF     		add	r7, sp, #0
 991              		.cfi_def_cfa_register 7
 992 0006 B960     		str	r1, [r7, #8]
 993 0008 7A60     		str	r2, [r7, #4]
 994 000a 3B60     		str	r3, [r7]
 995 000c 0346     		mov	r3, r0
 996 000e FB73     		strb	r3, [r7, #15]
 496:..\src/interruptions.c ****     
 497:..\src/interruptions.c **** }
 997              		.loc 1 497 0
 998 0010 00BF     		nop
 999 0012 1437     		adds	r7, r7, #20
 1000              		.cfi_def_cfa_offset 4
 1001 0014 BD46     		mov	sp, r7
 1002              		.cfi_def_cfa_register 13
 1003              		@ sp needed
 1004 0016 80BC     		pop	{r7}
 1005              		.cfi_restore 7
 1006              		.cfi_def_cfa_offset 0
 1007 0018 7047     		bx	lr
 1008              		.cfi_endproc
 1009              	.LFE70:
 1010              		.size	compute_SoftHand_2_motors_emg_reference, .-compute_SoftHand_2_motors_emg_reference
 1011 001a 00BF     		.section	.text.motor_control_SH,"ax",%progbits
 1012              		.align	2
 1013              		.global	motor_control_SH
 1014              		.thumb
 1015              		.thumb_func
 1016              		.type	motor_control_SH, %function
 1017              	motor_control_SH:
 1018              	.LFB71:
 498:..\src/interruptions.c **** 
 499:..\src/interruptions.c **** //==============================================================================
 500:..\src/interruptions.c **** //                                                        MOTOR CONTROL SOFTHAND
 501:..\src/interruptions.c **** //==============================================================================
 502:..\src/interruptions.c **** void motor_control_SH() {
 1019              		.loc 1 502 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 1, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 1024 0000 80B4     		push	{r7}
 1025              		.cfi_def_cfa_offset 4
 1026              		.cfi_offset 7, -4
 1027 0002 00AF     		add	r7, sp, #0
 1028              		.cfi_def_cfa_register 7
 503:..\src/interruptions.c **** 
 504:..\src/interruptions.c ****     
 505:..\src/interruptions.c **** }
 1029              		.loc 1 505 0
 1030 0004 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 28


 1031 0006 BD46     		mov	sp, r7
 1032              		.cfi_def_cfa_register 13
 1033              		@ sp needed
 1034 0008 80BC     		pop	{r7}
 1035              		.cfi_restore 7
 1036              		.cfi_def_cfa_offset 0
 1037 000a 7047     		bx	lr
 1038              		.cfi_endproc
 1039              	.LFE71:
 1040              		.size	motor_control_SH, .-motor_control_SH
 1041              		.section	.text.motor_control_generic,"ax",%progbits
 1042              		.align	2
 1043              		.global	motor_control_generic
 1044              		.thumb
 1045              		.thumb_func
 1046              		.type	motor_control_generic, %function
 1047              	motor_control_generic:
 1048              	.LFB72:
 506:..\src/interruptions.c **** 
 507:..\src/interruptions.c **** //==============================================================================
 508:..\src/interruptions.c **** //                                                         MOTOR CONTROL GENERIC
 509:..\src/interruptions.c **** //==============================================================================
 510:..\src/interruptions.c **** void motor_control_generic(uint8 idx) {
 1049              		.loc 1 510 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 8
 1052              		@ frame_needed = 1, uses_anonymous_args = 0
 1053 0000 80B5     		push	{r7, lr}
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 7, -8
 1056              		.cfi_offset 14, -4
 1057 0002 82B0     		sub	sp, sp, #8
 1058              		.cfi_def_cfa_offset 16
 1059 0004 00AF     		add	r7, sp, #0
 1060              		.cfi_def_cfa_register 7
 1061 0006 0346     		mov	r3, r0
 1062 0008 FB71     		strb	r3, [r7, #7]
 511:..\src/interruptions.c ****    
 512:..\src/interruptions.c **** 
 513:..\src/interruptions.c ****     // ======================= UPDATE MOTOR REFERENCE ==========================            
 514:..\src/interruptions.c ****     compute_reference(idx, &g_ref[idx], &g_refOld[idx]);
 1063              		.loc 1 514 0
 1064 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1065 000c 1B01     		lsls	r3, r3, #4
 1066 000e 074A     		ldr	r2, .L63
 1067 0010 9918     		adds	r1, r3, r2
 1068 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1069 0014 1B01     		lsls	r3, r3, #4
 1070 0016 064A     		ldr	r2, .L63+4
 1071 0018 1A44     		add	r2, r2, r3
 1072 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1073 001c 1846     		mov	r0, r3
 1074 001e FFF7FEFF 		bl	compute_reference
 515:..\src/interruptions.c **** 
 516:..\src/interruptions.c ****     
 517:..\src/interruptions.c **** }
 1075              		.loc 1 517 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 29


 1076 0022 00BF     		nop
 1077 0024 0837     		adds	r7, r7, #8
 1078              		.cfi_def_cfa_offset 8
 1079 0026 BD46     		mov	sp, r7
 1080              		.cfi_def_cfa_register 13
 1081              		@ sp needed
 1082 0028 80BD     		pop	{r7, pc}
 1083              	.L64:
 1084 002a 00BF     		.align	2
 1085              	.L63:
 1086 002c 00000000 		.word	g_ref
 1087 0030 00000000 		.word	g_refOld
 1088              		.cfi_endproc
 1089              	.LFE72:
 1090              		.size	motor_control_generic, .-motor_control_generic
 1091              		.section	.text.vibrotactile_control_generic,"ax",%progbits
 1092              		.align	2
 1093              		.global	vibrotactile_control_generic
 1094              		.thumb
 1095              		.thumb_func
 1096              		.type	vibrotactile_control_generic, %function
 1097              	vibrotactile_control_generic:
 1098              	.LFB73:
 518:..\src/interruptions.c **** 
 519:..\src/interruptions.c **** //==============================================================================
 520:..\src/interruptions.c **** //                                                  VIBROTACTILE CONTROL GENERIC
 521:..\src/interruptions.c **** //==============================================================================
 522:..\src/interruptions.c **** void vibrotactile_control_generic(uint8 idx) {
 1099              		.loc 1 522 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 16
 1102              		@ frame_needed = 1, uses_anonymous_args = 0
 1103 0000 80B5     		push	{r7, lr}
 1104              		.cfi_def_cfa_offset 8
 1105              		.cfi_offset 7, -8
 1106              		.cfi_offset 14, -4
 1107 0002 84B0     		sub	sp, sp, #16
 1108              		.cfi_def_cfa_offset 24
 1109 0004 00AF     		add	r7, sp, #0
 1110              		.cfi_def_cfa_register 7
 1111 0006 0346     		mov	r3, r0
 1112 0008 FB71     		strb	r3, [r7, #7]
 523:..\src/interruptions.c ****    
 524:..\src/interruptions.c ****     int16 CYDATA pwm_input = 0;
 1113              		.loc 1 524 0
 1114 000a 0023     		movs	r3, #0
 1115 000c FB81     		strh	r3, [r7, #14]	@ movhi
 525:..\src/interruptions.c **** 
 526:..\src/interruptions.c ****     // Static Variables
 527:..\src/interruptions.c ****    
 528:..\src/interruptions.c ****     static CYBIT motor_dir[NUM_OF_VT_ACTUATORS]; 
 529:..\src/interruptions.c **** 
 530:..\src/interruptions.c ****     // ======================= UPDATE MOTOR REFERENCE ==========================            
 531:..\src/interruptions.c **** 
 532:..\src/interruptions.c ****     pwm_input = VT_ref[idx];
 1116              		.loc 1 532 0
 1117 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 30


 1118 0010 294A     		ldr	r2, .L78
 1119 0012 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1120 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 533:..\src/interruptions.c **** 
 534:..\src/interruptions.c ****     if (pwm_input > 0) 
 1121              		.loc 1 534 0
 1122 0016 B7F90E30 		ldrsh	r3, [r7, #14]
 1123 001a 002B     		cmp	r3, #0
 1124 001c 04DD     		ble	.L66
 535:..\src/interruptions.c ****         motor_dir[idx] = TRUE;
 1125              		.loc 1 535 0
 1126 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1127 0020 264A     		ldr	r2, .L78+4
 1128 0022 0121     		movs	r1, #1
 1129 0024 D154     		strb	r1, [r2, r3]
 1130 0026 03E0     		b	.L67
 1131              	.L66:
 536:..\src/interruptions.c ****     else 
 537:..\src/interruptions.c ****         motor_dir[idx] = FALSE;
 1132              		.loc 1 537 0
 1133 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1134 002a 244A     		ldr	r2, .L78+4
 1135 002c 0021     		movs	r1, #0
 1136 002e D154     		strb	r1, [r2, r3]
 1137              	.L67:
 538:..\src/interruptions.c ****         
 539:..\src/interruptions.c ****     if (pwm_input > PWM_MAX_VALUE_DC) 
 1138              		.loc 1 539 0
 1139 0030 B7F90E30 		ldrsh	r3, [r7, #14]
 1140 0034 642B     		cmp	r3, #100
 1141 0036 01DD     		ble	.L68
 540:..\src/interruptions.c ****         pwm_input = PWM_MAX_VALUE_DC;
 1142              		.loc 1 540 0
 1143 0038 6423     		movs	r3, #100
 1144 003a FB81     		strh	r3, [r7, #14]	@ movhi
 1145              	.L68:
 541:..\src/interruptions.c ****     if (pwm_input < - PWM_MAX_VALUE_DC) 
 1146              		.loc 1 541 0
 1147 003c B7F90E30 		ldrsh	r3, [r7, #14]
 1148 0040 13F1640F 		cmn	r3, #100
 1149 0044 02DA     		bge	.L69
 542:..\src/interruptions.c ****         pwm_input = - PWM_MAX_VALUE_DC;
 1150              		.loc 1 542 0
 1151 0046 4FF69C73 		movw	r3, #65436
 1152 004a FB81     		strh	r3, [r7, #14]	@ movhi
 1153              	.L69:
 543:..\src/interruptions.c ****      
 544:..\src/interruptions.c ****     // Set motor direction and write pwm value
 545:..\src/interruptions.c ****     switch (idx) {
 1154              		.loc 1 545 0
 1155 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1156 004e 002B     		cmp	r3, #0
 1157 0050 02D0     		beq	.L71
 1158 0052 012B     		cmp	r3, #1
 1159 0054 16D0     		beq	.L72
 546:..\src/interruptions.c ****         case 0:         // Motor 1
 547:..\src/interruptions.c ****             if (motor_dir[idx])
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 31


 548:..\src/interruptions.c ****                 VT1_DIR_Write(0x00);
 549:..\src/interruptions.c ****             else
 550:..\src/interruptions.c ****                 VT1_DIR_Write(0x01);
 551:..\src/interruptions.c ****          
 552:..\src/interruptions.c ****                PWM_VT_WriteCompare1(abs(pwm_input));    
 553:..\src/interruptions.c ****             
 554:..\src/interruptions.c ****             break;
 555:..\src/interruptions.c ****         case 1:         // Motor 2
 556:..\src/interruptions.c ****             
 557:..\src/interruptions.c ****             if (motor_dir[idx])
 558:..\src/interruptions.c ****                 VT2_DIR_Write(0x00);          
 559:..\src/interruptions.c ****             else
 560:..\src/interruptions.c ****                 VT2_DIR_Write(0x01);
 561:..\src/interruptions.c ****             
 562:..\src/interruptions.c ****             PWM_VT_WriteCompare2(abs(pwm_input));    
 563:..\src/interruptions.c ****         break;
 564:..\src/interruptions.c ****     }
 565:..\src/interruptions.c ****        
 566:..\src/interruptions.c ****     
 567:..\src/interruptions.c **** }
 1160              		.loc 1 567 0
 1161 0056 2BE0     		b	.L77
 1162              	.L71:
 547:..\src/interruptions.c ****                 VT1_DIR_Write(0x00);
 1163              		.loc 1 547 0
 1164 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1165 005a 184A     		ldr	r2, .L78+4
 1166 005c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1167 005e 002B     		cmp	r3, #0
 1168 0060 03D0     		beq	.L73
 548:..\src/interruptions.c ****             else
 1169              		.loc 1 548 0
 1170 0062 0020     		movs	r0, #0
 1171 0064 FFF7FEFF 		bl	VT1_DIR_Write
 1172 0068 02E0     		b	.L74
 1173              	.L73:
 550:..\src/interruptions.c ****          
 1174              		.loc 1 550 0
 1175 006a 0120     		movs	r0, #1
 1176 006c FFF7FEFF 		bl	VT1_DIR_Write
 1177              	.L74:
 552:..\src/interruptions.c ****             
 1178              		.loc 1 552 0
 1179 0070 B7F90E30 		ldrsh	r3, [r7, #14]
 1180 0074 002B     		cmp	r3, #0
 1181 0076 B8BF     		it	lt
 1182 0078 5B42     		rsblt	r3, r3, #0
 1183 007a 9BB2     		uxth	r3, r3
 1184 007c 1846     		mov	r0, r3
 1185 007e FFF7FEFF 		bl	PWM_VT_WriteCompare1
 554:..\src/interruptions.c ****         case 1:         // Motor 2
 1186              		.loc 1 554 0
 1187 0082 15E0     		b	.L70
 1188              	.L72:
 557:..\src/interruptions.c ****                 VT2_DIR_Write(0x00);          
 1189              		.loc 1 557 0
 1190 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 32


 1191 0086 0D4A     		ldr	r2, .L78+4
 1192 0088 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1193 008a 002B     		cmp	r3, #0
 1194 008c 03D0     		beq	.L75
 558:..\src/interruptions.c ****             else
 1195              		.loc 1 558 0
 1196 008e 0020     		movs	r0, #0
 1197 0090 FFF7FEFF 		bl	VT2_DIR_Write
 1198 0094 02E0     		b	.L76
 1199              	.L75:
 560:..\src/interruptions.c ****             
 1200              		.loc 1 560 0
 1201 0096 0120     		movs	r0, #1
 1202 0098 FFF7FEFF 		bl	VT2_DIR_Write
 1203              	.L76:
 562:..\src/interruptions.c ****         break;
 1204              		.loc 1 562 0
 1205 009c B7F90E30 		ldrsh	r3, [r7, #14]
 1206 00a0 002B     		cmp	r3, #0
 1207 00a2 B8BF     		it	lt
 1208 00a4 5B42     		rsblt	r3, r3, #0
 1209 00a6 9BB2     		uxth	r3, r3
 1210 00a8 1846     		mov	r0, r3
 1211 00aa FFF7FEFF 		bl	PWM_VT_WriteCompare2
 563:..\src/interruptions.c ****     }
 1212              		.loc 1 563 0
 1213 00ae 00BF     		nop
 1214              	.L70:
 1215              	.L77:
 1216              		.loc 1 567 0
 1217 00b0 00BF     		nop
 1218 00b2 1037     		adds	r7, r7, #16
 1219              		.cfi_def_cfa_offset 8
 1220 00b4 BD46     		mov	sp, r7
 1221              		.cfi_def_cfa_register 13
 1222              		@ sp needed
 1223 00b6 80BD     		pop	{r7, pc}
 1224              	.L79:
 1225              		.align	2
 1226              	.L78:
 1227 00b8 00000000 		.word	VT_ref
 1228 00bc 8C000000 		.word	motor_dir.9885
 1229              		.cfi_endproc
 1230              	.LFE73:
 1231              		.size	vibrotactile_control_generic, .-vibrotactile_control_generic
 1232              		.section	.text.encoder_reading_SPI,"ax",%progbits
 1233              		.align	2
 1234              		.global	encoder_reading_SPI
 1235              		.thumb
 1236              		.thumb_func
 1237              		.type	encoder_reading_SPI, %function
 1238              	encoder_reading_SPI:
 1239              	.LFB74:
 568:..\src/interruptions.c **** 
 569:..\src/interruptions.c **** //==============================================================================
 570:..\src/interruptions.c **** //                                                           ENCODER READING SPI
 571:..\src/interruptions.c **** //==============================================================================
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 33


 572:..\src/interruptions.c **** 
 573:..\src/interruptions.c **** void encoder_reading_SPI(uint8 n_line, uint8 assoc_motor) {
 1240              		.loc 1 573 0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 8
 1243              		@ frame_needed = 1, uses_anonymous_args = 0
 1244              		@ link register save eliminated.
 1245 0000 80B4     		push	{r7}
 1246              		.cfi_def_cfa_offset 4
 1247              		.cfi_offset 7, -4
 1248 0002 83B0     		sub	sp, sp, #12
 1249              		.cfi_def_cfa_offset 16
 1250 0004 00AF     		add	r7, sp, #0
 1251              		.cfi_def_cfa_register 7
 1252 0006 0346     		mov	r3, r0
 1253 0008 0A46     		mov	r2, r1
 1254 000a FB71     		strb	r3, [r7, #7]
 1255 000c 1346     		mov	r3, r2
 1256 000e BB71     		strb	r3, [r7, #6]
 574:..\src/interruptions.c **** 
 575:..\src/interruptions.c **** }
 1257              		.loc 1 575 0
 1258 0010 00BF     		nop
 1259 0012 0C37     		adds	r7, r7, #12
 1260              		.cfi_def_cfa_offset 4
 1261 0014 BD46     		mov	sp, r7
 1262              		.cfi_def_cfa_register 13
 1263              		@ sp needed
 1264 0016 80BC     		pop	{r7}
 1265              		.cfi_restore 7
 1266              		.cfi_def_cfa_offset 0
 1267 0018 7047     		bx	lr
 1268              		.cfi_endproc
 1269              	.LFE74:
 1270              		.size	encoder_reading_SPI, .-encoder_reading_SPI
 1271 001a 00BF     		.section	.text.analog_read_end,"ax",%progbits
 1272              		.align	2
 1273              		.global	analog_read_end
 1274              		.thumb
 1275              		.thumb_func
 1276              		.type	analog_read_end, %function
 1277              	analog_read_end:
 1278              	.LFB75:
 576:..\src/interruptions.c **** 
 577:..\src/interruptions.c **** //==============================================================================
 578:..\src/interruptions.c **** //                                                           ANALOG MEASUREMENTS
 579:..\src/interruptions.c **** //==============================================================================
 580:..\src/interruptions.c **** 
 581:..\src/interruptions.c **** void analog_read_end() {
 1279              		.loc 1 581 0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 0
 1282              		@ frame_needed = 1, uses_anonymous_args = 0
 1283              		@ link register save eliminated.
 1284 0000 80B4     		push	{r7}
 1285              		.cfi_def_cfa_offset 4
 1286              		.cfi_offset 7, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 34


 1287 0002 00AF     		add	r7, sp, #0
 1288              		.cfi_def_cfa_register 7
 582:..\src/interruptions.c **** 
 583:..\src/interruptions.c ****     
 584:..\src/interruptions.c **** }
 1289              		.loc 1 584 0
 1290 0004 00BF     		nop
 1291 0006 BD46     		mov	sp, r7
 1292              		.cfi_def_cfa_register 13
 1293              		@ sp needed
 1294 0008 80BC     		pop	{r7}
 1295              		.cfi_restore 7
 1296              		.cfi_def_cfa_offset 0
 1297 000a 7047     		bx	lr
 1298              		.cfi_endproc
 1299              	.LFE75:
 1300              		.size	analog_read_end, .-analog_read_end
 1301              		.section	.text.overcurrent_control,"ax",%progbits
 1302              		.align	2
 1303              		.global	overcurrent_control
 1304              		.thumb
 1305              		.thumb_func
 1306              		.type	overcurrent_control, %function
 1307              	overcurrent_control:
 1308              	.LFB76:
 585:..\src/interruptions.c **** 
 586:..\src/interruptions.c **** //==============================================================================
 587:..\src/interruptions.c **** //                                                           OVERCURRENT CONTROL
 588:..\src/interruptions.c **** //==============================================================================
 589:..\src/interruptions.c **** 
 590:..\src/interruptions.c **** void overcurrent_control() {
 1309              		.loc 1 590 0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 0
 1312              		@ frame_needed = 1, uses_anonymous_args = 0
 1313              		@ link register save eliminated.
 1314 0000 80B4     		push	{r7}
 1315              		.cfi_def_cfa_offset 4
 1316              		.cfi_offset 7, -4
 1317 0002 00AF     		add	r7, sp, #0
 1318              		.cfi_def_cfa_register 7
 591:..\src/interruptions.c ****     
 592:..\src/interruptions.c **** }
 1319              		.loc 1 592 0
 1320 0004 00BF     		nop
 1321 0006 BD46     		mov	sp, r7
 1322              		.cfi_def_cfa_register 13
 1323              		@ sp needed
 1324 0008 80BC     		pop	{r7}
 1325              		.cfi_restore 7
 1326              		.cfi_def_cfa_offset 0
 1327 000a 7047     		bx	lr
 1328              		.cfi_endproc
 1329              	.LFE76:
 1330              		.size	overcurrent_control, .-overcurrent_control
 1331              		.section	.text.pwm_limit_search,"ax",%progbits
 1332              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 35


 1333              		.global	pwm_limit_search
 1334              		.thumb
 1335              		.thumb_func
 1336              		.type	pwm_limit_search, %function
 1337              	pwm_limit_search:
 1338              	.LFB77:
 593:..\src/interruptions.c **** 
 594:..\src/interruptions.c **** //==============================================================================
 595:..\src/interruptions.c **** //                                                              PWM_LIMIT_SEARCH
 596:..\src/interruptions.c **** //==============================================================================
 597:..\src/interruptions.c **** 
 598:..\src/interruptions.c **** void pwm_limit_search(uint8 mot_idx) {
 1339              		.loc 1 598 0
 1340              		.cfi_startproc
 1341              		@ args = 0, pretend = 0, frame = 8
 1342              		@ frame_needed = 1, uses_anonymous_args = 0
 1343              		@ link register save eliminated.
 1344 0000 80B4     		push	{r7}
 1345              		.cfi_def_cfa_offset 4
 1346              		.cfi_offset 7, -4
 1347 0002 83B0     		sub	sp, sp, #12
 1348              		.cfi_def_cfa_offset 16
 1349 0004 00AF     		add	r7, sp, #0
 1350              		.cfi_def_cfa_register 7
 1351 0006 0346     		mov	r3, r0
 1352 0008 FB71     		strb	r3, [r7, #7]
 599:..\src/interruptions.c **** 
 600:..\src/interruptions.c **** }
 1353              		.loc 1 600 0
 1354 000a 00BF     		nop
 1355 000c 0C37     		adds	r7, r7, #12
 1356              		.cfi_def_cfa_offset 4
 1357 000e BD46     		mov	sp, r7
 1358              		.cfi_def_cfa_register 13
 1359              		@ sp needed
 1360 0010 80BC     		pop	{r7}
 1361              		.cfi_restore 7
 1362              		.cfi_def_cfa_offset 0
 1363 0012 7047     		bx	lr
 1364              		.cfi_endproc
 1365              	.LFE77:
 1366              		.size	pwm_limit_search, .-pwm_limit_search
 1367              		.section	.text.cycles_counter_update,"ax",%progbits
 1368              		.align	2
 1369              		.global	cycles_counter_update
 1370              		.thumb
 1371              		.thumb_func
 1372              		.type	cycles_counter_update, %function
 1373              	cycles_counter_update:
 1374              	.LFB78:
 601:..\src/interruptions.c **** 
 602:..\src/interruptions.c **** //==============================================================================
 603:..\src/interruptions.c **** //                                                         CYCLES COUNTER UPDATE
 604:..\src/interruptions.c **** //==============================================================================
 605:..\src/interruptions.c **** 
 606:..\src/interruptions.c **** void cycles_counter_update() {
 1375              		.loc 1 606 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 36


 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 1, uses_anonymous_args = 0
 1379              		@ link register save eliminated.
 1380 0000 80B4     		push	{r7}
 1381              		.cfi_def_cfa_offset 4
 1382              		.cfi_offset 7, -4
 1383 0002 00AF     		add	r7, sp, #0
 1384              		.cfi_def_cfa_register 7
 607:..\src/interruptions.c **** 	
 608:..\src/interruptions.c **** }
 1385              		.loc 1 608 0
 1386 0004 00BF     		nop
 1387 0006 BD46     		mov	sp, r7
 1388              		.cfi_def_cfa_register 13
 1389              		@ sp needed
 1390 0008 80BC     		pop	{r7}
 1391              		.cfi_restore 7
 1392              		.cfi_def_cfa_offset 0
 1393 000a 7047     		bx	lr
 1394              		.cfi_endproc
 1395              	.LFE78:
 1396              		.size	cycles_counter_update, .-cycles_counter_update
 1397              		.section	.text.save_cycles_eeprom,"ax",%progbits
 1398              		.align	2
 1399              		.global	save_cycles_eeprom
 1400              		.thumb
 1401              		.thumb_func
 1402              		.type	save_cycles_eeprom, %function
 1403              	save_cycles_eeprom:
 1404              	.LFB79:
 609:..\src/interruptions.c **** 
 610:..\src/interruptions.c **** //==============================================================================
 611:..\src/interruptions.c **** //                                                            SAVE CYCLES EEPROM
 612:..\src/interruptions.c **** //==============================================================================
 613:..\src/interruptions.c **** 
 614:..\src/interruptions.c **** void save_cycles_eeprom() {
 1405              		.loc 1 614 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409              		@ link register save eliminated.
 1410 0000 80B4     		push	{r7}
 1411              		.cfi_def_cfa_offset 4
 1412              		.cfi_offset 7, -4
 1413 0002 00AF     		add	r7, sp, #0
 1414              		.cfi_def_cfa_register 7
 615:..\src/interruptions.c **** 
 616:..\src/interruptions.c **** }
 1415              		.loc 1 616 0
 1416 0004 00BF     		nop
 1417 0006 BD46     		mov	sp, r7
 1418              		.cfi_def_cfa_register 13
 1419              		@ sp needed
 1420 0008 80BC     		pop	{r7}
 1421              		.cfi_restore 7
 1422              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 37


 1423 000a 7047     		bx	lr
 1424              		.cfi_endproc
 1425              	.LFE79:
 1426              		.size	save_cycles_eeprom, .-save_cycles_eeprom
 1427              		.bss
 1428              	state.9834:
 1429 0000 00       		.space	1
 1430 0001 000000   		.align	2
 1431              	rx_queue.9838:
 1432 0004 000000   		.space	3
 1433              	data_packet_length.9836:
 1434 0007 00       		.space	1
 1435              	data_packet_index.9835:
 1436 0008 00       		.space	1
 1437 0009 000000   		.align	2
 1438              	data_packet_buffer.9837:
 1439 000c 00000000 		.space	128
 1439      00000000 
 1439      00000000 
 1439      00000000 
 1439      00000000 
 1440              		.data
 1441              		.align	1
 1442              		.type	counter_calibration.9854, %object
 1443              		.size	counter_calibration.9854, 2
 1444              	counter_calibration.9854:
 1445 0000 0100     		.short	1
 1446              		.align	1
 1447              		.type	counter_tension_func.9855, %object
 1448              		.size	counter_tension_func.9855, 2
 1449              	counter_tension_func.9855:
 1450 0002 0100     		.short	1
 1451              		.bss
 1452              		.align	2
 1453              	motor_dir.9885:
 1454 008c 0000     		.space	2
 1455              		.text
 1456              	.Letext0:
 1457              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1458              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1459              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1460              		.file 5 "..\\src\\globals.h"
 1461              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 1462              		.section	.debug_info,"",%progbits
 1463              	.Ldebug_info0:
 1464 0000 FD090000 		.4byte	0x9fd
 1465 0004 0400     		.2byte	0x4
 1466 0006 00000000 		.4byte	.Ldebug_abbrev0
 1467 000a 04       		.byte	0x4
 1468 000b 01       		.uleb128 0x1
 1469 000c 71000000 		.4byte	.LASF132
 1470 0010 0C       		.byte	0xc
 1471 0011 E2010000 		.4byte	.LASF133
 1472 0015 4F030000 		.4byte	.LASF134
 1473 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1474 001d 00000000 		.4byte	0
 1475 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 38


 1476 0025 02       		.uleb128 0x2
 1477 0026 01       		.byte	0x1
 1478 0027 06       		.byte	0x6
 1479 0028 5B000000 		.4byte	.LASF0
 1480 002c 02       		.uleb128 0x2
 1481 002d 01       		.byte	0x1
 1482 002e 08       		.byte	0x8
 1483 002f A1050000 		.4byte	.LASF1
 1484 0033 02       		.uleb128 0x2
 1485 0034 02       		.byte	0x2
 1486 0035 05       		.byte	0x5
 1487 0036 BA050000 		.4byte	.LASF2
 1488 003a 02       		.uleb128 0x2
 1489 003b 02       		.byte	0x2
 1490 003c 07       		.byte	0x7
 1491 003d 23030000 		.4byte	.LASF3
 1492 0041 03       		.uleb128 0x3
 1493 0042 1B040000 		.4byte	.LASF9
 1494 0046 02       		.byte	0x2
 1495 0047 3F       		.byte	0x3f
 1496 0048 4C000000 		.4byte	0x4c
 1497 004c 02       		.uleb128 0x2
 1498 004d 04       		.byte	0x4
 1499 004e 05       		.byte	0x5
 1500 004f C4010000 		.4byte	.LASF4
 1501 0053 02       		.uleb128 0x2
 1502 0054 04       		.byte	0x4
 1503 0055 07       		.byte	0x7
 1504 0056 D1020000 		.4byte	.LASF5
 1505 005a 02       		.uleb128 0x2
 1506 005b 08       		.byte	0x8
 1507 005c 05       		.byte	0x5
 1508 005d 78010000 		.4byte	.LASF6
 1509 0061 02       		.uleb128 0x2
 1510 0062 08       		.byte	0x8
 1511 0063 07       		.byte	0x7
 1512 0064 2C010000 		.4byte	.LASF7
 1513 0068 04       		.uleb128 0x4
 1514 0069 04       		.byte	0x4
 1515 006a 05       		.byte	0x5
 1516 006b 696E7400 		.ascii	"int\000"
 1517 006f 02       		.uleb128 0x2
 1518 0070 04       		.byte	0x4
 1519 0071 07       		.byte	0x7
 1520 0072 88020000 		.4byte	.LASF8
 1521 0076 03       		.uleb128 0x3
 1522 0077 99050000 		.4byte	.LASF10
 1523 007b 03       		.byte	0x3
 1524 007c 2C       		.byte	0x2c
 1525 007d 41000000 		.4byte	0x41
 1526 0081 05       		.uleb128 0x5
 1527 0082 D2010000 		.4byte	.LASF11
 1528 0086 04       		.byte	0x4
 1529 0087 E401     		.2byte	0x1e4
 1530 0089 2C000000 		.4byte	0x2c
 1531 008d 05       		.uleb128 0x5
 1532 008e 00000000 		.4byte	.LASF12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 39


 1533 0092 04       		.byte	0x4
 1534 0093 E501     		.2byte	0x1e5
 1535 0095 3A000000 		.4byte	0x3a
 1536 0099 05       		.uleb128 0x5
 1537 009a 28020000 		.4byte	.LASF13
 1538 009e 04       		.byte	0x4
 1539 009f E601     		.2byte	0x1e6
 1540 00a1 53000000 		.4byte	0x53
 1541 00a5 05       		.uleb128 0x5
 1542 00a6 4A030000 		.4byte	.LASF14
 1543 00aa 04       		.byte	0x4
 1544 00ab E701     		.2byte	0x1e7
 1545 00ad 25000000 		.4byte	0x25
 1546 00b1 05       		.uleb128 0x5
 1547 00b2 1C060000 		.4byte	.LASF15
 1548 00b6 04       		.byte	0x4
 1549 00b7 E801     		.2byte	0x1e8
 1550 00b9 33000000 		.4byte	0x33
 1551 00bd 05       		.uleb128 0x5
 1552 00be AC010000 		.4byte	.LASF16
 1553 00c2 04       		.byte	0x4
 1554 00c3 E901     		.2byte	0x1e9
 1555 00c5 4C000000 		.4byte	0x4c
 1556 00c9 02       		.uleb128 0x2
 1557 00ca 04       		.byte	0x4
 1558 00cb 04       		.byte	0x4
 1559 00cc 31050000 		.4byte	.LASF17
 1560 00d0 02       		.uleb128 0x2
 1561 00d1 08       		.byte	0x8
 1562 00d2 04       		.byte	0x4
 1563 00d3 05020000 		.4byte	.LASF18
 1564 00d7 02       		.uleb128 0x2
 1565 00d8 01       		.byte	0x1
 1566 00d9 08       		.byte	0x8
 1567 00da 64060000 		.4byte	.LASF19
 1568 00de 05       		.uleb128 0x5
 1569 00df 67050000 		.4byte	.LASF20
 1570 00e3 04       		.byte	0x4
 1571 00e4 8E02     		.2byte	0x28e
 1572 00e6 EA000000 		.4byte	0xea
 1573 00ea 06       		.uleb128 0x6
 1574 00eb 81000000 		.4byte	0x81
 1575 00ef 02       		.uleb128 0x2
 1576 00f0 08       		.byte	0x8
 1577 00f1 04       		.byte	0x4
 1578 00f2 51060000 		.4byte	.LASF21
 1579 00f6 02       		.uleb128 0x2
 1580 00f7 04       		.byte	0x4
 1581 00f8 07       		.byte	0x7
 1582 00f9 6A040000 		.4byte	.LASF22
 1583 00fd 07       		.uleb128 0x7
 1584 00fe 95020000 		.4byte	.LASF25
 1585 0102 10       		.byte	0x10
 1586 0103 05       		.byte	0x5
 1587 0104 F8       		.byte	0xf8
 1588 0105 3A010000 		.4byte	0x13a
 1589 0109 08       		.uleb128 0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 40


 1590 010a 706F7300 		.ascii	"pos\000"
 1591 010e 05       		.byte	0x5
 1592 010f F9       		.byte	0xf9
 1593 0110 BD000000 		.4byte	0xbd
 1594 0114 00       		.byte	0
 1595 0115 09       		.uleb128 0x9
 1596 0116 AF050000 		.4byte	.LASF23
 1597 011a 05       		.byte	0x5
 1598 011b FA       		.byte	0xfa
 1599 011c BD000000 		.4byte	0xbd
 1600 0120 04       		.byte	0x4
 1601 0121 08       		.uleb128 0x8
 1602 0122 70776D00 		.ascii	"pwm\000"
 1603 0126 05       		.byte	0x5
 1604 0127 FB       		.byte	0xfb
 1605 0128 BD000000 		.4byte	0xbd
 1606 012c 08       		.byte	0x8
 1607 012d 09       		.uleb128 0x9
 1608 012e B4050000 		.4byte	.LASF24
 1609 0132 05       		.byte	0x5
 1610 0133 FC       		.byte	0xfc
 1611 0134 81000000 		.4byte	0x81
 1612 0138 0C       		.byte	0xc
 1613 0139 00       		.byte	0
 1614 013a 0A       		.uleb128 0xa
 1615 013b F6040000 		.4byte	.LASF26
 1616 013f 34       		.byte	0x34
 1617 0140 05       		.byte	0x5
 1618 0141 0301     		.2byte	0x103
 1619 0143 A3010000 		.4byte	0x1a3
 1620 0147 0B       		.uleb128 0xb
 1621 0148 706F7300 		.ascii	"pos\000"
 1622 014c 05       		.byte	0x5
 1623 014d 0401     		.2byte	0x104
 1624 014f A3010000 		.4byte	0x1a3
 1625 0153 00       		.byte	0
 1626 0154 0C       		.uleb128 0xc
 1627 0155 AF050000 		.4byte	.LASF23
 1628 0159 05       		.byte	0x5
 1629 015a 0501     		.2byte	0x105
 1630 015c BD000000 		.4byte	0xbd
 1631 0160 0C       		.byte	0xc
 1632 0161 0C       		.uleb128 0xc
 1633 0162 9C020000 		.4byte	.LASF27
 1634 0166 05       		.byte	0x5
 1635 0167 0601     		.2byte	0x106
 1636 0169 BD000000 		.4byte	0xbd
 1637 016d 10       		.byte	0x10
 1638 016e 0C       		.uleb128 0xc
 1639 016f D8010000 		.4byte	.LASF28
 1640 0173 05       		.byte	0x5
 1641 0174 0701     		.2byte	0x107
 1642 0176 BD000000 		.4byte	0xbd
 1643 017a 14       		.byte	0x14
 1644 017b 0B       		.uleb128 0xb
 1645 017c 726F7400 		.ascii	"rot\000"
 1646 0180 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 41


 1647 0181 0801     		.2byte	0x108
 1648 0183 B3010000 		.4byte	0x1b3
 1649 0187 18       		.byte	0x18
 1650 0188 0B       		.uleb128 0xb
 1651 0189 76656C00 		.ascii	"vel\000"
 1652 018d 05       		.byte	0x5
 1653 018e 0901     		.2byte	0x109
 1654 0190 A3010000 		.4byte	0x1a3
 1655 0194 1C       		.byte	0x1c
 1656 0195 0B       		.uleb128 0xb
 1657 0196 61636300 		.ascii	"acc\000"
 1658 019a 05       		.byte	0x5
 1659 019b 0A01     		.2byte	0x10a
 1660 019d A3010000 		.4byte	0x1a3
 1661 01a1 28       		.byte	0x28
 1662 01a2 00       		.byte	0
 1663 01a3 0D       		.uleb128 0xd
 1664 01a4 BD000000 		.4byte	0xbd
 1665 01a8 B3010000 		.4byte	0x1b3
 1666 01ac 0E       		.uleb128 0xe
 1667 01ad F6000000 		.4byte	0xf6
 1668 01b1 02       		.byte	0x2
 1669 01b2 00       		.byte	0
 1670 01b3 0D       		.uleb128 0xd
 1671 01b4 A5000000 		.4byte	0xa5
 1672 01b8 C3010000 		.4byte	0x1c3
 1673 01bc 0E       		.uleb128 0xe
 1674 01bd F6000000 		.4byte	0xf6
 1675 01c1 02       		.byte	0x2
 1676 01c2 00       		.byte	0
 1677 01c3 0A       		.uleb128 0xa
 1678 01c4 78060000 		.4byte	.LASF29
 1679 01c8 86       		.byte	0x86
 1680 01c9 05       		.byte	0x5
 1681 01ca 1601     		.2byte	0x116
 1682 01cc 05020000 		.4byte	0x205
 1683 01d0 0C       		.uleb128 0xc
 1684 01d1 AF060000 		.4byte	.LASF30
 1685 01d5 05       		.byte	0x5
 1686 01d6 1701     		.2byte	0x117
 1687 01d8 05020000 		.4byte	0x205
 1688 01dc 00       		.byte	0
 1689 01dd 0C       		.uleb128 0xc
 1690 01de 5D060000 		.4byte	.LASF31
 1691 01e2 05       		.byte	0x5
 1692 01e3 1801     		.2byte	0x118
 1693 01e5 B1000000 		.4byte	0xb1
 1694 01e9 80       		.byte	0x80
 1695 01ea 0B       		.uleb128 0xb
 1696 01eb 696E6400 		.ascii	"ind\000"
 1697 01ef 05       		.byte	0x5
 1698 01f0 1901     		.2byte	0x119
 1699 01f2 B1000000 		.4byte	0xb1
 1700 01f6 82       		.byte	0x82
 1701 01f7 0C       		.uleb128 0xc
 1702 01f8 86010000 		.4byte	.LASF32
 1703 01fc 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 42


 1704 01fd 1A01     		.2byte	0x11a
 1705 01ff 81000000 		.4byte	0x81
 1706 0203 84       		.byte	0x84
 1707 0204 00       		.byte	0
 1708 0205 0D       		.uleb128 0xd
 1709 0206 81000000 		.4byte	0x81
 1710 020a 15020000 		.4byte	0x215
 1711 020e 0E       		.uleb128 0xe
 1712 020f F6000000 		.4byte	0xf6
 1713 0213 7F       		.byte	0x7f
 1714 0214 00       		.byte	0
 1715 0215 0A       		.uleb128 0xa
 1716 0216 88040000 		.4byte	.LASF33
 1717 021a 10       		.byte	0x10
 1718 021b 05       		.byte	0x5
 1719 021c 2801     		.2byte	0x128
 1720 021e 49020000 		.4byte	0x249
 1721 0222 0B       		.uleb128 0xb
 1722 0223 696400   		.ascii	"id\000"
 1723 0226 05       		.byte	0x5
 1724 0227 2901     		.2byte	0x129
 1725 0229 81000000 		.4byte	0x81
 1726 022d 00       		.byte	0
 1727 022e 0C       		.uleb128 0xc
 1728 022f 43010000 		.4byte	.LASF34
 1729 0233 05       		.byte	0x5
 1730 0234 2A01     		.2byte	0x12a
 1731 0236 81000000 		.4byte	0x81
 1732 023a 01       		.byte	0x1
 1733 023b 0C       		.uleb128 0xc
 1734 023c D0030000 		.4byte	.LASF35
 1735 0240 05       		.byte	0x5
 1736 0241 2B01     		.2byte	0x12b
 1737 0243 49020000 		.4byte	0x249
 1738 0247 02       		.byte	0x2
 1739 0248 00       		.byte	0
 1740 0249 0D       		.uleb128 0xd
 1741 024a 81000000 		.4byte	0x81
 1742 024e 59020000 		.4byte	0x259
 1743 0252 0E       		.uleb128 0xe
 1744 0253 F6000000 		.4byte	0xf6
 1745 0257 0D       		.byte	0xd
 1746 0258 00       		.byte	0
 1747 0259 0A       		.uleb128 0xa
 1748 025a 2F020000 		.4byte	.LASF36
 1749 025e 10       		.byte	0x10
 1750 025f 05       		.byte	0x5
 1751 0260 3201     		.2byte	0x132
 1752 0262 A8020000 		.4byte	0x2a8
 1753 0266 0C       		.uleb128 0xc
 1754 0267 C4030000 		.4byte	.LASF37
 1755 026b 05       		.byte	0x5
 1756 026c 3401     		.2byte	0x134
 1757 026e BD000000 		.4byte	0xbd
 1758 0272 00       		.byte	0
 1759 0273 0C       		.uleb128 0xc
 1760 0274 CB040000 		.4byte	.LASF38
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 43


 1761 0278 05       		.byte	0x5
 1762 0279 3501     		.2byte	0x135
 1763 027b BD000000 		.4byte	0xbd
 1764 027f 04       		.byte	0x4
 1765 0280 0C       		.uleb128 0xc
 1766 0281 26050000 		.4byte	.LASF39
 1767 0285 05       		.byte	0x5
 1768 0286 3601     		.2byte	0x136
 1769 0288 81000000 		.4byte	0x81
 1770 028c 08       		.byte	0x8
 1771 028d 0B       		.uleb128 0xb
 1772 028e 72657300 		.ascii	"res\000"
 1773 0292 05       		.byte	0x5
 1774 0293 3701     		.2byte	0x137
 1775 0295 81000000 		.4byte	0x81
 1776 0299 09       		.byte	0x9
 1777 029a 0C       		.uleb128 0xc
 1778 029b D0030000 		.4byte	.LASF35
 1779 029f 05       		.byte	0x5
 1780 02a0 3801     		.2byte	0x138
 1781 02a2 A8020000 		.4byte	0x2a8
 1782 02a6 0A       		.byte	0xa
 1783 02a7 00       		.byte	0
 1784 02a8 0D       		.uleb128 0xd
 1785 02a9 81000000 		.4byte	0x81
 1786 02ad B8020000 		.4byte	0x2b8
 1787 02b1 0E       		.uleb128 0xe
 1788 02b2 F6000000 		.4byte	0xf6
 1789 02b6 05       		.byte	0x5
 1790 02b7 00       		.byte	0
 1791 02b8 0A       		.uleb128 0xa
 1792 02b9 36060000 		.4byte	.LASF40
 1793 02bd 10       		.byte	0x10
 1794 02be 05       		.byte	0x5
 1795 02bf 4001     		.2byte	0x140
 1796 02c1 07030000 		.4byte	0x307
 1797 02c5 0C       		.uleb128 0xc
 1798 02c6 6A010000 		.4byte	.LASF41
 1799 02ca 05       		.byte	0x5
 1800 02cb 4101     		.2byte	0x141
 1801 02cd 07030000 		.4byte	0x307
 1802 02d1 00       		.byte	0
 1803 02d2 0C       		.uleb128 0xc
 1804 02d3 20070000 		.4byte	.LASF42
 1805 02d7 05       		.byte	0x5
 1806 02d8 4201     		.2byte	0x142
 1807 02da 17030000 		.4byte	0x317
 1808 02de 04       		.byte	0x4
 1809 02df 0C       		.uleb128 0xc
 1810 02e0 16070000 		.4byte	.LASF43
 1811 02e4 05       		.byte	0x5
 1812 02e5 4301     		.2byte	0x143
 1813 02e7 27030000 		.4byte	0x327
 1814 02eb 0C       		.byte	0xc
 1815 02ec 0C       		.uleb128 0xc
 1816 02ed 4B020000 		.4byte	.LASF44
 1817 02f1 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 44


 1818 02f2 4401     		.2byte	0x144
 1819 02f4 81000000 		.4byte	0x81
 1820 02f8 0E       		.byte	0xe
 1821 02f9 0C       		.uleb128 0xc
 1822 02fa D0030000 		.4byte	.LASF35
 1823 02fe 05       		.byte	0x5
 1824 02ff 4501     		.2byte	0x145
 1825 0301 37030000 		.4byte	0x337
 1826 0305 0F       		.byte	0xf
 1827 0306 00       		.byte	0
 1828 0307 0D       		.uleb128 0xd
 1829 0308 8D000000 		.4byte	0x8d
 1830 030c 17030000 		.4byte	0x317
 1831 0310 0E       		.uleb128 0xe
 1832 0311 F6000000 		.4byte	0xf6
 1833 0315 01       		.byte	0x1
 1834 0316 00       		.byte	0
 1835 0317 0D       		.uleb128 0xd
 1836 0318 99000000 		.4byte	0x99
 1837 031c 27030000 		.4byte	0x327
 1838 0320 0E       		.uleb128 0xe
 1839 0321 F6000000 		.4byte	0xf6
 1840 0325 01       		.byte	0x1
 1841 0326 00       		.byte	0
 1842 0327 0D       		.uleb128 0xd
 1843 0328 81000000 		.4byte	0x81
 1844 032c 37030000 		.4byte	0x337
 1845 0330 0E       		.uleb128 0xe
 1846 0331 F6000000 		.4byte	0xf6
 1847 0335 01       		.byte	0x1
 1848 0336 00       		.byte	0
 1849 0337 0D       		.uleb128 0xd
 1850 0338 81000000 		.4byte	0x81
 1851 033c 47030000 		.4byte	0x347
 1852 0340 0E       		.uleb128 0xe
 1853 0341 F6000000 		.4byte	0xf6
 1854 0345 00       		.byte	0
 1855 0346 00       		.byte	0
 1856 0347 0A       		.uleb128 0xa
 1857 0348 F6050000 		.4byte	.LASF45
 1858 034c 10       		.byte	0x10
 1859 034d 05       		.byte	0x5
 1860 034e 4C01     		.2byte	0x14c
 1861 0350 7C030000 		.4byte	0x37c
 1862 0354 0C       		.uleb128 0xc
 1863 0355 6F020000 		.4byte	.LASF46
 1864 0359 05       		.byte	0x5
 1865 035a 4D01     		.2byte	0x14d
 1866 035c 81000000 		.4byte	0x81
 1867 0360 00       		.byte	0
 1868 0361 0C       		.uleb128 0xc
 1869 0362 ED050000 		.4byte	.LASF47
 1870 0366 05       		.byte	0x5
 1871 0367 4E01     		.2byte	0x14e
 1872 0369 81000000 		.4byte	0x81
 1873 036d 01       		.byte	0x1
 1874 036e 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 45


 1875 036f D0030000 		.4byte	.LASF35
 1876 0373 05       		.byte	0x5
 1877 0374 4F01     		.2byte	0x14f
 1878 0376 49020000 		.4byte	0x249
 1879 037a 02       		.byte	0x2
 1880 037b 00       		.byte	0
 1881 037c 0A       		.uleb128 0xa
 1882 037d 2B000000 		.4byte	.LASF48
 1883 0381 10       		.byte	0x10
 1884 0382 05       		.byte	0x5
 1885 0383 5601     		.2byte	0x156
 1886 0385 D8030000 		.4byte	0x3d8
 1887 0389 0C       		.uleb128 0xc
 1888 038a 01070000 		.4byte	.LASF49
 1889 038e 05       		.byte	0x5
 1890 038f 5701     		.2byte	0x157
 1891 0391 BD000000 		.4byte	0xbd
 1892 0395 00       		.byte	0
 1893 0396 0C       		.uleb128 0xc
 1894 0397 73040000 		.4byte	.LASF50
 1895 039b 05       		.byte	0x5
 1896 039c 5801     		.2byte	0x158
 1897 039e C9000000 		.4byte	0xc9
 1898 03a2 04       		.byte	0x4
 1899 03a3 0C       		.uleb128 0xc
 1900 03a4 70070000 		.4byte	.LASF51
 1901 03a8 05       		.byte	0x5
 1902 03a9 5901     		.2byte	0x159
 1903 03ab C9000000 		.4byte	0xc9
 1904 03af 08       		.byte	0x8
 1905 03b0 0C       		.uleb128 0xc
 1906 03b1 F4030000 		.4byte	.LASF52
 1907 03b5 05       		.byte	0x5
 1908 03b6 5A01     		.2byte	0x15a
 1909 03b8 81000000 		.4byte	0x81
 1910 03bc 0C       		.byte	0xc
 1911 03bd 0C       		.uleb128 0xc
 1912 03be B6060000 		.4byte	.LASF53
 1913 03c2 05       		.byte	0x5
 1914 03c3 5B01     		.2byte	0x15b
 1915 03c5 81000000 		.4byte	0x81
 1916 03c9 0D       		.byte	0xd
 1917 03ca 0C       		.uleb128 0xc
 1918 03cb D0030000 		.4byte	.LASF35
 1919 03cf 05       		.byte	0x5
 1920 03d0 5C01     		.2byte	0x15c
 1921 03d2 27030000 		.4byte	0x327
 1922 03d6 0E       		.byte	0xe
 1923 03d7 00       		.byte	0
 1924 03d8 0A       		.uleb128 0xa
 1925 03d9 F7060000 		.4byte	.LASF54
 1926 03dd 60       		.byte	0x60
 1927 03de 05       		.byte	0x5
 1928 03df 6601     		.2byte	0x166
 1929 03e1 3F040000 		.4byte	0x43f
 1930 03e5 0C       		.uleb128 0xc
 1931 03e6 E2050000 		.4byte	.LASF55
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 46


 1932 03ea 05       		.byte	0x5
 1933 03eb 6701     		.2byte	0x167
 1934 03ed 81000000 		.4byte	0x81
 1935 03f1 00       		.byte	0
 1936 03f2 0C       		.uleb128 0xc
 1937 03f3 D0030000 		.4byte	.LASF35
 1938 03f7 05       		.byte	0x5
 1939 03f8 6801     		.2byte	0x168
 1940 03fa 3F040000 		.4byte	0x43f
 1941 03fe 01       		.byte	0x1
 1942 03ff 0B       		.uleb128 0xb
 1943 0400 64657600 		.ascii	"dev\000"
 1944 0404 05       		.byte	0x5
 1945 0405 6901     		.2byte	0x169
 1946 0407 15020000 		.4byte	0x215
 1947 040b 10       		.byte	0x10
 1948 040c 0C       		.uleb128 0xc
 1949 040d 3D050000 		.4byte	.LASF56
 1950 0411 05       		.byte	0x5
 1951 0412 6A01     		.2byte	0x16a
 1952 0414 59020000 		.4byte	0x259
 1953 0418 20       		.byte	0x20
 1954 0419 0B       		.uleb128 0xb
 1955 041a 656D6700 		.ascii	"emg\000"
 1956 041e 05       		.byte	0x5
 1957 041f 6B01     		.2byte	0x16b
 1958 0421 B8020000 		.4byte	0x2b8
 1959 0425 30       		.byte	0x30
 1960 0426 0B       		.uleb128 0xb
 1961 0427 4D5300   		.ascii	"MS\000"
 1962 042a 05       		.byte	0x5
 1963 042b 6C01     		.2byte	0x16c
 1964 042d 47030000 		.4byte	0x347
 1965 0431 40       		.byte	0x40
 1966 0432 0B       		.uleb128 0xb
 1967 0433 464200   		.ascii	"FB\000"
 1968 0436 05       		.byte	0x5
 1969 0437 6D01     		.2byte	0x16d
 1970 0439 7C030000 		.4byte	0x37c
 1971 043d 50       		.byte	0x50
 1972 043e 00       		.byte	0
 1973 043f 0D       		.uleb128 0xd
 1974 0440 81000000 		.4byte	0x81
 1975 0444 4F040000 		.4byte	0x44f
 1976 0448 0E       		.uleb128 0xe
 1977 0449 F6000000 		.4byte	0xf6
 1978 044d 0E       		.byte	0xe
 1979 044e 00       		.byte	0
 1980 044f 0A       		.uleb128 0xa
 1981 0450 E8030000 		.4byte	.LASF57
 1982 0454 28       		.byte	0x28
 1983 0455 05       		.byte	0x5
 1984 0456 7401     		.2byte	0x174
 1985 0458 AB040000 		.4byte	0x4ab
 1986 045c 0C       		.uleb128 0xc
 1987 045d 43070000 		.4byte	.LASF58
 1988 0461 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 47


 1989 0462 7501     		.2byte	0x175
 1990 0464 81000000 		.4byte	0x81
 1991 0468 00       		.byte	0
 1992 0469 0C       		.uleb128 0xc
 1993 046a F9010000 		.4byte	.LASF59
 1994 046e 05       		.byte	0x5
 1995 046f 7601     		.2byte	0x176
 1996 0471 AB040000 		.4byte	0x4ab
 1997 0475 02       		.byte	0x2
 1998 0476 0C       		.uleb128 0xc
 1999 0477 DD030000 		.4byte	.LASF60
 2000 047b 05       		.byte	0x5
 2001 047c 7701     		.2byte	0x177
 2002 047e AB040000 		.4byte	0x4ab
 2003 0482 08       		.byte	0x8
 2004 0483 0C       		.uleb128 0xc
 2005 0484 57040000 		.4byte	.LASF61
 2006 0488 05       		.byte	0x5
 2007 0489 7801     		.2byte	0x178
 2008 048b AB040000 		.4byte	0x4ab
 2009 048f 0E       		.byte	0xe
 2010 0490 0C       		.uleb128 0xc
 2011 0491 D7050000 		.4byte	.LASF62
 2012 0495 05       		.byte	0x5
 2013 0496 7901     		.2byte	0x179
 2014 0498 BB040000 		.4byte	0x4bb
 2015 049c 14       		.byte	0x14
 2016 049d 0C       		.uleb128 0xc
 2017 049e 53070000 		.4byte	.LASF63
 2018 04a2 05       		.byte	0x5
 2019 04a3 7A01     		.2byte	0x17a
 2020 04a5 B1000000 		.4byte	0xb1
 2021 04a9 24       		.byte	0x24
 2022 04aa 00       		.byte	0
 2023 04ab 0D       		.uleb128 0xd
 2024 04ac B1000000 		.4byte	0xb1
 2025 04b0 BB040000 		.4byte	0x4bb
 2026 04b4 0E       		.uleb128 0xe
 2027 04b5 F6000000 		.4byte	0xf6
 2028 04b9 02       		.byte	0x2
 2029 04ba 00       		.byte	0
 2030 04bb 0D       		.uleb128 0xd
 2031 04bc C9000000 		.4byte	0xc9
 2032 04c0 CB040000 		.4byte	0x4cb
 2033 04c4 0E       		.uleb128 0xe
 2034 04c5 F6000000 		.4byte	0xf6
 2035 04c9 03       		.byte	0x3
 2036 04ca 00       		.byte	0
 2037 04cb 0A       		.uleb128 0xa
 2038 04cc 05060000 		.4byte	.LASF64
 2039 04d0 06       		.byte	0x6
 2040 04d1 05       		.byte	0x5
 2041 04d2 8A01     		.2byte	0x18a
 2042 04d4 0D050000 		.4byte	0x50d
 2043 04d8 0C       		.uleb128 0xc
 2044 04d9 49060000 		.4byte	.LASF65
 2045 04dd 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 48


 2046 04de 8B01     		.2byte	0x18b
 2047 04e0 81000000 		.4byte	0x81
 2048 04e4 00       		.byte	0
 2049 04e5 0C       		.uleb128 0xc
 2050 04e6 67000000 		.4byte	.LASF66
 2051 04ea 05       		.byte	0x5
 2052 04eb 8C01     		.2byte	0x18c
 2053 04ed 81000000 		.4byte	0x81
 2054 04f1 01       		.byte	0x1
 2055 04f2 0C       		.uleb128 0xc
 2056 04f3 6A070000 		.4byte	.LASF67
 2057 04f7 05       		.byte	0x5
 2058 04f8 8D01     		.2byte	0x18d
 2059 04fa B1000000 		.4byte	0xb1
 2060 04fe 02       		.byte	0x2
 2061 04ff 0C       		.uleb128 0xc
 2062 0500 38020000 		.4byte	.LASF68
 2063 0504 05       		.byte	0x5
 2064 0505 8E01     		.2byte	0x18e
 2065 0507 B1000000 		.4byte	0xb1
 2066 050b 04       		.byte	0x4
 2067 050c 00       		.byte	0
 2068 050d 0A       		.uleb128 0xa
 2069 050e 3D060000 		.4byte	.LASF69
 2070 0512 0C       		.byte	0xc
 2071 0513 05       		.byte	0x5
 2072 0514 2202     		.2byte	0x222
 2073 0516 35050000 		.4byte	0x535
 2074 051a 0B       		.uleb128 0xb
 2075 051b 656D6700 		.ascii	"emg\000"
 2076 051f 05       		.byte	0x5
 2077 0520 2302     		.2byte	0x223
 2078 0522 35050000 		.4byte	0x535
 2079 0526 00       		.byte	0
 2080 0527 0C       		.uleb128 0xc
 2081 0528 ED040000 		.4byte	.LASF70
 2082 052c 05       		.byte	0x5
 2083 052d 2402     		.2byte	0x224
 2084 052f C9000000 		.4byte	0xc9
 2085 0533 08       		.byte	0x8
 2086 0534 00       		.byte	0
 2087 0535 0D       		.uleb128 0xd
 2088 0536 BD000000 		.4byte	0xbd
 2089 053a 45050000 		.4byte	0x545
 2090 053e 0E       		.uleb128 0xe
 2091 053f F6000000 		.4byte	0xf6
 2092 0543 01       		.byte	0x1
 2093 0544 00       		.byte	0
 2094 0545 0F       		.uleb128 0xf
 2095 0546 56020000 		.4byte	.LASF71
 2096 054a 01       		.byte	0x1
 2097 054b 62       		.byte	0x62
 2098 054c 00000000 		.4byte	.LFB64
 2099 0550 18000000 		.4byte	.LFE64-.LFB64
 2100 0554 01       		.uleb128 0x1
 2101 0555 9C       		.byte	0x9c
 2102 0556 0F       		.uleb128 0xf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 49


 2103 0557 91060000 		.4byte	.LASF72
 2104 055b 01       		.byte	0x1
 2105 055c 6D       		.byte	0x6d
 2106 055d 00000000 		.4byte	.LFB65
 2107 0561 20000000 		.4byte	.LFE65-.LFB65
 2108 0565 01       		.uleb128 0x1
 2109 0566 9C       		.byte	0x9c
 2110 0567 10       		.uleb128 0x10
 2111 0568 0C020000 		.4byte	.LASF135
 2112 056c 01       		.byte	0x1
 2113 056d 86       		.byte	0x86
 2114 056e 00000000 		.4byte	.LFB66
 2115 0572 0C020000 		.4byte	.LFE66-.LFB66
 2116 0576 01       		.uleb128 0x1
 2117 0577 9C       		.byte	0x9c
 2118 0578 FC050000 		.4byte	0x5fc
 2119 057c 11       		.uleb128 0x11
 2120 057d BE010000 		.4byte	.LASF73
 2121 0581 01       		.byte	0x1
 2122 0582 8B       		.byte	0x8b
 2123 0583 81000000 		.4byte	0x81
 2124 0587 05       		.uleb128 0x5
 2125 0588 03       		.byte	0x3
 2126 0589 00000000 		.4byte	state.9834
 2127 058d 11       		.uleb128 0x11
 2128 058e 11030000 		.4byte	.LASF74
 2129 0592 01       		.byte	0x1
 2130 0593 8E       		.byte	0x8e
 2131 0594 81000000 		.4byte	0x81
 2132 0598 05       		.uleb128 0x5
 2133 0599 03       		.byte	0x3
 2134 059a 08000000 		.4byte	data_packet_index.9835
 2135 059e 11       		.uleb128 0x11
 2136 059f D1060000 		.4byte	.LASF75
 2137 05a3 01       		.byte	0x1
 2138 05a4 8F       		.byte	0x8f
 2139 05a5 81000000 		.4byte	0x81
 2140 05a9 05       		.uleb128 0x5
 2141 05aa 03       		.byte	0x3
 2142 05ab 07000000 		.4byte	data_packet_length.9836
 2143 05af 11       		.uleb128 0x11
 2144 05b0 E4060000 		.4byte	.LASF76
 2145 05b4 01       		.byte	0x1
 2146 05b5 90       		.byte	0x90
 2147 05b6 05020000 		.4byte	0x205
 2148 05ba 05       		.uleb128 0x5
 2149 05bb 03       		.byte	0x3
 2150 05bc 0C000000 		.4byte	data_packet_buffer.9837
 2151 05c0 11       		.uleb128 0x11
 2152 05c1 AF040000 		.4byte	.LASF77
 2153 05c5 01       		.byte	0x1
 2154 05c6 91       		.byte	0x91
 2155 05c7 FC050000 		.4byte	0x5fc
 2156 05cb 05       		.uleb128 0x5
 2157 05cc 03       		.byte	0x3
 2158 05cd 04000000 		.4byte	rx_queue.9838
 2159 05d1 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 50


 2160 05d2 A7020000 		.4byte	.LASF78
 2161 05d6 01       		.byte	0x1
 2162 05d7 94       		.byte	0x94
 2163 05d8 81000000 		.4byte	0x81
 2164 05dc 02       		.uleb128 0x2
 2165 05dd 91       		.byte	0x91
 2166 05de 75       		.sleb128 -11
 2167 05df 11       		.uleb128 0x11
 2168 05e0 33040000 		.4byte	.LASF79
 2169 05e4 01       		.byte	0x1
 2170 05e5 95       		.byte	0x95
 2171 05e6 81000000 		.4byte	0x81
 2172 05ea 02       		.uleb128 0x2
 2173 05eb 91       		.byte	0x91
 2174 05ec 77       		.sleb128 -9
 2175 05ed 11       		.uleb128 0x11
 2176 05ee 25040000 		.4byte	.LASF80
 2177 05f2 01       		.byte	0x1
 2178 05f3 96       		.byte	0x96
 2179 05f4 81000000 		.4byte	0x81
 2180 05f8 02       		.uleb128 0x2
 2181 05f9 91       		.byte	0x91
 2182 05fa 76       		.sleb128 -10
 2183 05fb 00       		.byte	0
 2184 05fc 0D       		.uleb128 0xd
 2185 05fd 81000000 		.4byte	0x81
 2186 0601 0C060000 		.4byte	0x60c
 2187 0605 0E       		.uleb128 0xe
 2188 0606 F6000000 		.4byte	0xf6
 2189 060a 02       		.byte	0x2
 2190 060b 00       		.byte	0
 2191 060c 12       		.uleb128 0x12
 2192 060d FE020000 		.4byte	.LASF86
 2193 0611 01       		.byte	0x1
 2194 0612 0C01     		.2byte	0x10c
 2195 0614 00000000 		.4byte	.LFB67
 2196 0618 D8020000 		.4byte	.LFE67-.LFB67
 2197 061c 01       		.uleb128 0x1
 2198 061d 9C       		.byte	0x9c
 2199 061e 75060000 		.4byte	0x675
 2200 0622 13       		.uleb128 0x13
 2201 0623 8C010000 		.4byte	.LASF81
 2202 0627 01       		.byte	0x1
 2203 0628 0E01     		.2byte	0x10e
 2204 062a 8D000000 		.4byte	0x8d
 2205 062e 05       		.uleb128 0x5
 2206 062f 03       		.byte	0x3
 2207 0630 00000000 		.4byte	counter_calibration.9854
 2208 0634 13       		.uleb128 0x13
 2209 0635 2E070000 		.4byte	.LASF82
 2210 0639 01       		.byte	0x1
 2211 063a 0F01     		.2byte	0x10f
 2212 063c 8D000000 		.4byte	0x8d
 2213 0640 05       		.uleb128 0x5
 2214 0641 03       		.byte	0x3
 2215 0642 02000000 		.4byte	counter_tension_func.9855
 2216 0646 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 51


 2217 0647 E7050000 		.4byte	.LASF83
 2218 064b 01       		.byte	0x1
 2219 064c 1001     		.2byte	0x110
 2220 064e 75060000 		.4byte	0x675
 2221 0652 03       		.uleb128 0x3
 2222 0653 91       		.byte	0x91
 2223 0654 A86C     		.sleb128 -2520
 2224 0656 13       		.uleb128 0x13
 2225 0657 11040000 		.4byte	.LASF84
 2226 065b 01       		.byte	0x1
 2227 065c 1201     		.2byte	0x112
 2228 065e 81000000 		.4byte	0x81
 2229 0662 02       		.uleb128 0x2
 2230 0663 91       		.byte	0x91
 2231 0664 6F       		.sleb128 -17
 2232 0665 13       		.uleb128 0x13
 2233 0666 ED020000 		.4byte	.LASF85
 2234 066a 01       		.byte	0x1
 2235 066b 1301     		.2byte	0x113
 2236 066d 81000000 		.4byte	0x81
 2237 0671 02       		.uleb128 0x2
 2238 0672 91       		.byte	0x91
 2239 0673 6E       		.sleb128 -18
 2240 0674 00       		.byte	0
 2241 0675 0D       		.uleb128 0xd
 2242 0676 D7000000 		.4byte	0xd7
 2243 067a 86060000 		.4byte	0x686
 2244 067e 14       		.uleb128 0x14
 2245 067f F6000000 		.4byte	0xf6
 2246 0683 C309     		.2byte	0x9c3
 2247 0685 00       		.byte	0
 2248 0686 15       		.uleb128 0x15
 2249 0687 36000000 		.4byte	.LASF87
 2250 068b 01       		.byte	0x1
 2251 068c DE01     		.2byte	0x1de
 2252 068e 00000000 		.4byte	.LFB68
 2253 0692 18000000 		.4byte	.LFE68-.LFB68
 2254 0696 01       		.uleb128 0x1
 2255 0697 9C       		.byte	0x9c
 2256 0698 CA060000 		.4byte	0x6ca
 2257 069c 16       		.uleb128 0x16
 2258 069d E3020000 		.4byte	.LASF88
 2259 06a1 01       		.byte	0x1
 2260 06a2 DE01     		.2byte	0x1de
 2261 06a4 81000000 		.4byte	0x81
 2262 06a8 02       		.uleb128 0x2
 2263 06a9 91       		.byte	0x91
 2264 06aa 77       		.sleb128 -9
 2265 06ab 16       		.uleb128 0x16
 2266 06ac 61040000 		.4byte	.LASF89
 2267 06b0 01       		.byte	0x1
 2268 06b1 DE01     		.2byte	0x1de
 2269 06b3 CA060000 		.4byte	0x6ca
 2270 06b7 02       		.uleb128 0x2
 2271 06b8 91       		.byte	0x91
 2272 06b9 70       		.sleb128 -16
 2273 06ba 16       		.uleb128 0x16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 52


 2274 06bb AF020000 		.4byte	.LASF90
 2275 06bf 01       		.byte	0x1
 2276 06c0 DE01     		.2byte	0x1de
 2277 06c2 CA060000 		.4byte	0x6ca
 2278 06c6 02       		.uleb128 0x2
 2279 06c7 91       		.byte	0x91
 2280 06c8 6C       		.sleb128 -20
 2281 06c9 00       		.byte	0
 2282 06ca 17       		.uleb128 0x17
 2283 06cb 04       		.byte	0x4
 2284 06cc FD000000 		.4byte	0xfd
 2285 06d0 15       		.uleb128 0x15
 2286 06d1 6C050000 		.4byte	.LASF91
 2287 06d5 01       		.byte	0x1
 2288 06d6 E601     		.2byte	0x1e6
 2289 06d8 00000000 		.4byte	.LFB69
 2290 06dc 18000000 		.4byte	.LFE69-.LFB69
 2291 06e0 01       		.uleb128 0x1
 2292 06e1 9C       		.byte	0x9c
 2293 06e2 14070000 		.4byte	0x714
 2294 06e6 16       		.uleb128 0x16
 2295 06e7 E3020000 		.4byte	.LASF88
 2296 06eb 01       		.byte	0x1
 2297 06ec E601     		.2byte	0x1e6
 2298 06ee 81000000 		.4byte	0x81
 2299 06f2 02       		.uleb128 0x2
 2300 06f3 91       		.byte	0x91
 2301 06f4 77       		.sleb128 -9
 2302 06f5 16       		.uleb128 0x16
 2303 06f6 61040000 		.4byte	.LASF89
 2304 06fa 01       		.byte	0x1
 2305 06fb E601     		.2byte	0x1e6
 2306 06fd CA060000 		.4byte	0x6ca
 2307 0701 02       		.uleb128 0x2
 2308 0702 91       		.byte	0x91
 2309 0703 70       		.sleb128 -16
 2310 0704 16       		.uleb128 0x16
 2311 0705 AF020000 		.4byte	.LASF90
 2312 0709 01       		.byte	0x1
 2313 070a E601     		.2byte	0x1e6
 2314 070c CA060000 		.4byte	0x6ca
 2315 0710 02       		.uleb128 0x2
 2316 0711 91       		.byte	0x91
 2317 0712 6C       		.sleb128 -20
 2318 0713 00       		.byte	0
 2319 0714 15       		.uleb128 0x15
 2320 0715 FE040000 		.4byte	.LASF92
 2321 0719 01       		.byte	0x1
 2322 071a EE01     		.2byte	0x1ee
 2323 071c 00000000 		.4byte	.LFB70
 2324 0720 1A000000 		.4byte	.LFE70-.LFB70
 2325 0724 01       		.uleb128 0x1
 2326 0725 9C       		.byte	0x9c
 2327 0726 76070000 		.4byte	0x776
 2328 072a 16       		.uleb128 0x16
 2329 072b E3020000 		.4byte	.LASF88
 2330 072f 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 53


 2331 0730 EE01     		.2byte	0x1ee
 2332 0732 81000000 		.4byte	0x81
 2333 0736 02       		.uleb128 0x2
 2334 0737 91       		.byte	0x91
 2335 0738 77       		.sleb128 -9
 2336 0739 16       		.uleb128 0x16
 2337 073a 61040000 		.4byte	.LASF89
 2338 073e 01       		.byte	0x1
 2339 073f EE01     		.2byte	0x1ee
 2340 0741 CA060000 		.4byte	0x6ca
 2341 0745 02       		.uleb128 0x2
 2342 0746 91       		.byte	0x91
 2343 0747 70       		.sleb128 -16
 2344 0748 16       		.uleb128 0x16
 2345 0749 AF020000 		.4byte	.LASF90
 2346 074d 01       		.byte	0x1
 2347 074e EE01     		.2byte	0x1ee
 2348 0750 CA060000 		.4byte	0x6ca
 2349 0754 02       		.uleb128 0x2
 2350 0755 91       		.byte	0x91
 2351 0756 6C       		.sleb128 -20
 2352 0757 16       		.uleb128 0x16
 2353 0758 53050000 		.4byte	.LASF93
 2354 075c 01       		.byte	0x1
 2355 075d EF01     		.2byte	0x1ef
 2356 075f BD000000 		.4byte	0xbd
 2357 0763 02       		.uleb128 0x2
 2358 0764 91       		.byte	0x91
 2359 0765 68       		.sleb128 -24
 2360 0766 16       		.uleb128 0x16
 2361 0767 5D050000 		.4byte	.LASF94
 2362 076b 01       		.byte	0x1
 2363 076c EF01     		.2byte	0x1ef
 2364 076e BD000000 		.4byte	0xbd
 2365 0772 02       		.uleb128 0x2
 2366 0773 91       		.byte	0x91
 2367 0774 00       		.sleb128 0
 2368 0775 00       		.byte	0
 2369 0776 18       		.uleb128 0x18
 2370 0777 46040000 		.4byte	.LASF102
 2371 077b 01       		.byte	0x1
 2372 077c F601     		.2byte	0x1f6
 2373 077e 00000000 		.4byte	.LFB71
 2374 0782 0C000000 		.4byte	.LFE71-.LFB71
 2375 0786 01       		.uleb128 0x1
 2376 0787 9C       		.byte	0x9c
 2377 0788 12       		.uleb128 0x12
 2378 0789 15000000 		.4byte	.LASF95
 2379 078d 01       		.byte	0x1
 2380 078e FE01     		.2byte	0x1fe
 2381 0790 00000000 		.4byte	.LFB72
 2382 0794 34000000 		.4byte	.LFE72-.LFB72
 2383 0798 01       		.uleb128 0x1
 2384 0799 9C       		.byte	0x9c
 2385 079a AE070000 		.4byte	0x7ae
 2386 079e 19       		.uleb128 0x19
 2387 079f 69647800 		.ascii	"idx\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 54


 2388 07a3 01       		.byte	0x1
 2389 07a4 FE01     		.2byte	0x1fe
 2390 07a6 81000000 		.4byte	0x81
 2391 07aa 02       		.uleb128 0x2
 2392 07ab 91       		.byte	0x91
 2393 07ac 77       		.sleb128 -9
 2394 07ad 00       		.byte	0
 2395 07ae 12       		.uleb128 0x12
 2396 07af 92040000 		.4byte	.LASF96
 2397 07b3 01       		.byte	0x1
 2398 07b4 0A02     		.2byte	0x20a
 2399 07b6 00000000 		.4byte	.LFB73
 2400 07ba C0000000 		.4byte	.LFE73-.LFB73
 2401 07be 01       		.uleb128 0x1
 2402 07bf 9C       		.byte	0x9c
 2403 07c0 F5070000 		.4byte	0x7f5
 2404 07c4 19       		.uleb128 0x19
 2405 07c5 69647800 		.ascii	"idx\000"
 2406 07c9 01       		.byte	0x1
 2407 07ca 0A02     		.2byte	0x20a
 2408 07cc 81000000 		.4byte	0x81
 2409 07d0 02       		.uleb128 0x2
 2410 07d1 91       		.byte	0x91
 2411 07d2 6F       		.sleb128 -17
 2412 07d3 13       		.uleb128 0x13
 2413 07d4 88070000 		.4byte	.LASF97
 2414 07d8 01       		.byte	0x1
 2415 07d9 0C02     		.2byte	0x20c
 2416 07db B1000000 		.4byte	0xb1
 2417 07df 02       		.uleb128 0x2
 2418 07e0 91       		.byte	0x91
 2419 07e1 76       		.sleb128 -10
 2420 07e2 13       		.uleb128 0x13
 2421 07e3 49070000 		.4byte	.LASF98
 2422 07e7 01       		.byte	0x1
 2423 07e8 1002     		.2byte	0x210
 2424 07ea 27030000 		.4byte	0x327
 2425 07ee 05       		.uleb128 0x5
 2426 07ef 03       		.byte	0x3
 2427 07f0 8C000000 		.4byte	motor_dir.9885
 2428 07f4 00       		.byte	0
 2429 07f5 15       		.uleb128 0x15
 2430 07f6 18010000 		.4byte	.LASF99
 2431 07fa 01       		.byte	0x1
 2432 07fb 3D02     		.2byte	0x23d
 2433 07fd 00000000 		.4byte	.LFB74
 2434 0801 1A000000 		.4byte	.LFE74-.LFB74
 2435 0805 01       		.uleb128 0x1
 2436 0806 9C       		.byte	0x9c
 2437 0807 2A080000 		.4byte	0x82a
 2438 080b 16       		.uleb128 0x16
 2439 080c 44020000 		.4byte	.LASF100
 2440 0810 01       		.byte	0x1
 2441 0811 3D02     		.2byte	0x23d
 2442 0813 81000000 		.4byte	0x81
 2443 0817 02       		.uleb128 0x2
 2444 0818 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 55


 2445 0819 77       		.sleb128 -9
 2446 081a 16       		.uleb128 0x16
 2447 081b 47050000 		.4byte	.LASF101
 2448 081f 01       		.byte	0x1
 2449 0820 3D02     		.2byte	0x23d
 2450 0822 81000000 		.4byte	0x81
 2451 0826 02       		.uleb128 0x2
 2452 0827 91       		.byte	0x91
 2453 0828 76       		.sleb128 -10
 2454 0829 00       		.byte	0
 2455 082a 18       		.uleb128 0x18
 2456 082b 08010000 		.4byte	.LASF103
 2457 082f 01       		.byte	0x1
 2458 0830 4502     		.2byte	0x245
 2459 0832 00000000 		.4byte	.LFB75
 2460 0836 0C000000 		.4byte	.LFE75-.LFB75
 2461 083a 01       		.uleb128 0x1
 2462 083b 9C       		.byte	0x9c
 2463 083c 18       		.uleb128 0x18
 2464 083d 22060000 		.4byte	.LASF104
 2465 0841 01       		.byte	0x1
 2466 0842 4E02     		.2byte	0x24e
 2467 0844 00000000 		.4byte	.LFB76
 2468 0848 0C000000 		.4byte	.LFE76-.LFB76
 2469 084c 01       		.uleb128 0x1
 2470 084d 9C       		.byte	0x9c
 2471 084e 15       		.uleb128 0x15
 2472 084f 80060000 		.4byte	.LASF105
 2473 0853 01       		.byte	0x1
 2474 0854 5602     		.2byte	0x256
 2475 0856 00000000 		.4byte	.LFB77
 2476 085a 14000000 		.4byte	.LFE77-.LFB77
 2477 085e 01       		.uleb128 0x1
 2478 085f 9C       		.byte	0x9c
 2479 0860 74080000 		.4byte	0x874
 2480 0864 16       		.uleb128 0x16
 2481 0865 07000000 		.4byte	.LASF106
 2482 0869 01       		.byte	0x1
 2483 086a 5602     		.2byte	0x256
 2484 086c 81000000 		.4byte	0x81
 2485 0870 02       		.uleb128 0x2
 2486 0871 91       		.byte	0x91
 2487 0872 77       		.sleb128 -9
 2488 0873 00       		.byte	0
 2489 0874 18       		.uleb128 0x18
 2490 0875 D7040000 		.4byte	.LASF107
 2491 0879 01       		.byte	0x1
 2492 087a 5E02     		.2byte	0x25e
 2493 087c 00000000 		.4byte	.LFB78
 2494 0880 0C000000 		.4byte	.LFE78-.LFB78
 2495 0884 01       		.uleb128 0x1
 2496 0885 9C       		.byte	0x9c
 2497 0886 18       		.uleb128 0x18
 2498 0887 C4050000 		.4byte	.LASF108
 2499 088b 01       		.byte	0x1
 2500 088c 6602     		.2byte	0x266
 2501 088e 00000000 		.4byte	.LFB79
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 56


 2502 0892 0C000000 		.4byte	.LFE79-.LFB79
 2503 0896 01       		.uleb128 0x1
 2504 0897 9C       		.byte	0x9c
 2505 0898 0D       		.uleb128 0xd
 2506 0899 A8080000 		.4byte	0x8a8
 2507 089d A8080000 		.4byte	0x8a8
 2508 08a1 0E       		.uleb128 0xe
 2509 08a2 F6000000 		.4byte	0xf6
 2510 08a6 1C       		.byte	0x1c
 2511 08a7 00       		.byte	0
 2512 08a8 1A       		.uleb128 0x1a
 2513 08a9 81000000 		.4byte	0x81
 2514 08ad 11       		.uleb128 0x11
 2515 08ae 48000000 		.4byte	.LASF109
 2516 08b2 01       		.byte	0x1
 2517 08b3 40       		.byte	0x40
 2518 08b4 BE080000 		.4byte	0x8be
 2519 08b8 05       		.uleb128 0x5
 2520 08b9 03       		.byte	0x3
 2521 08ba 00000000 		.4byte	pwm_preload_values
 2522 08be 1A       		.uleb128 0x1a
 2523 08bf 98080000 		.4byte	0x898
 2524 08c3 1B       		.uleb128 0x1b
 2525 08c4 56010000 		.4byte	.LASF110
 2526 08c8 06       		.byte	0x6
 2527 08c9 1207     		.2byte	0x712
 2528 08cb CF080000 		.4byte	0x8cf
 2529 08cf 06       		.uleb128 0x6
 2530 08d0 76000000 		.4byte	0x76
 2531 08d4 0D       		.uleb128 0xd
 2532 08d5 FD000000 		.4byte	0xfd
 2533 08d9 E4080000 		.4byte	0x8e4
 2534 08dd 0E       		.uleb128 0xe
 2535 08de F6000000 		.4byte	0xf6
 2536 08e2 01       		.byte	0x1
 2537 08e3 00       		.byte	0
 2538 08e4 1B       		.uleb128 0x1b
 2539 08e5 37050000 		.4byte	.LASF111
 2540 08e9 05       		.byte	0x5
 2541 08ea A801     		.2byte	0x1a8
 2542 08ec D4080000 		.4byte	0x8d4
 2543 08f0 1B       		.uleb128 0x1b
 2544 08f1 41030000 		.4byte	.LASF112
 2545 08f5 05       		.byte	0x5
 2546 08f6 A801     		.2byte	0x1a8
 2547 08f8 D4080000 		.4byte	0x8d4
 2548 08fc 1B       		.uleb128 0x1b
 2549 08fd 4D010000 		.4byte	.LASF113
 2550 0901 05       		.byte	0x5
 2551 0902 A801     		.2byte	0x1a8
 2552 0904 D4080000 		.4byte	0x8d4
 2553 0908 0D       		.uleb128 0xd
 2554 0909 3A010000 		.4byte	0x13a
 2555 090d 18090000 		.4byte	0x918
 2556 0911 0E       		.uleb128 0xe
 2557 0912 F6000000 		.4byte	0xf6
 2558 0916 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 57


 2559 0917 00       		.byte	0
 2560 0918 1B       		.uleb128 0x1b
 2561 0919 63010000 		.4byte	.LASF114
 2562 091d 05       		.byte	0x5
 2563 091e A901     		.2byte	0x1a9
 2564 0920 08090000 		.4byte	0x908
 2565 0924 1B       		.uleb128 0x1b
 2566 0925 1E020000 		.4byte	.LASF115
 2567 0929 05       		.byte	0x5
 2568 092a A901     		.2byte	0x1a9
 2569 092c 08090000 		.4byte	0x908
 2570 0930 1B       		.uleb128 0x1b
 2571 0931 A4060000 		.4byte	.LASF116
 2572 0935 05       		.byte	0x5
 2573 0936 3A02     		.2byte	0x23a
 2574 0938 0D050000 		.4byte	0x50d
 2575 093c 1B       		.uleb128 0x1b
 2576 093d 0E060000 		.4byte	.LASF117
 2577 0941 05       		.byte	0x5
 2578 0942 3A02     		.2byte	0x23a
 2579 0944 0D050000 		.4byte	0x50d
 2580 0948 1B       		.uleb128 0x1b
 2581 0949 CD010000 		.4byte	.LASF118
 2582 094d 05       		.byte	0x5
 2583 094e 3302     		.2byte	0x233
 2584 0950 C3010000 		.4byte	0x1c3
 2585 0954 1B       		.uleb128 0x1b
 2586 0955 B8040000 		.4byte	.LASF119
 2587 0959 05       		.byte	0x5
 2588 095a 3902     		.2byte	0x239
 2589 095c D8030000 		.4byte	0x3d8
 2590 0960 1B       		.uleb128 0x1b
 2591 0961 0F000000 		.4byte	.LASF120
 2592 0965 05       		.byte	0x5
 2593 0966 3902     		.2byte	0x239
 2594 0968 D8030000 		.4byte	0x3d8
 2595 096c 1B       		.uleb128 0x1b
 2596 096d 40040000 		.4byte	.LASF121
 2597 0971 05       		.byte	0x5
 2598 0972 AE01     		.2byte	0x1ae
 2599 0974 CB040000 		.4byte	0x4cb
 2600 0978 1B       		.uleb128 0x1b
 2601 0979 A0010000 		.4byte	.LASF122
 2602 097d 05       		.byte	0x5
 2603 097e 3B02     		.2byte	0x23b
 2604 0980 8D000000 		.4byte	0x8d
 2605 0984 1B       		.uleb128 0x1b
 2606 0985 BE040000 		.4byte	.LASF123
 2607 0989 05       		.byte	0x5
 2608 098a 3C02     		.2byte	0x23c
 2609 098c 8D000000 		.4byte	0x8d
 2610 0990 1B       		.uleb128 0x1b
 2611 0991 36030000 		.4byte	.LASF124
 2612 0995 05       		.byte	0x5
 2613 0996 3D02     		.2byte	0x23d
 2614 0998 C9000000 		.4byte	0xc9
 2615 099c 1B       		.uleb128 0x1b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 58


 2616 099d B2010000 		.4byte	.LASF125
 2617 09a1 05       		.byte	0x5
 2618 09a2 3602     		.2byte	0x236
 2619 09a4 BD000000 		.4byte	0xbd
 2620 09a8 1B       		.uleb128 0x1b
 2621 09a9 69060000 		.4byte	.LASF126
 2622 09ad 05       		.byte	0x5
 2623 09ae 3402     		.2byte	0x234
 2624 09b0 81000000 		.4byte	0x81
 2625 09b4 1B       		.uleb128 0x1b
 2626 09b5 BB020000 		.4byte	.LASF127
 2627 09b9 05       		.byte	0x5
 2628 09ba CA01     		.2byte	0x1ca
 2629 09bc 81000000 		.4byte	0x81
 2630 09c0 0D       		.uleb128 0xd
 2631 09c1 4F040000 		.4byte	0x44f
 2632 09c5 D0090000 		.4byte	0x9d0
 2633 09c9 0E       		.uleb128 0xe
 2634 09ca F6000000 		.4byte	0xf6
 2635 09ce 04       		.byte	0x4
 2636 09cf 00       		.byte	0
 2637 09d0 1B       		.uleb128 0x1b
 2638 09d1 82020000 		.4byte	.LASF128
 2639 09d5 05       		.byte	0x5
 2640 09d6 F101     		.2byte	0x1f1
 2641 09d8 C0090000 		.4byte	0x9c0
 2642 09dc 1B       		.uleb128 0x1b
 2643 09dd FF000000 		.4byte	.LASF129
 2644 09e1 05       		.byte	0x5
 2645 09e2 F101     		.2byte	0x1f1
 2646 09e4 C0090000 		.4byte	0x9c0
 2647 09e8 1B       		.uleb128 0x1b
 2648 09e9 5E070000 		.4byte	.LASF130
 2649 09ed 05       		.byte	0x5
 2650 09ee 3702     		.2byte	0x237
 2651 09f0 81000000 		.4byte	0x81
 2652 09f4 1B       		.uleb128 0x1b
 2653 09f5 81070000 		.4byte	.LASF131
 2654 09f9 05       		.byte	0x5
 2655 09fa 2F02     		.2byte	0x22f
 2656 09fc 27030000 		.4byte	0x327
 2657 0a00 00       		.byte	0
 2658              		.section	.debug_abbrev,"",%progbits
 2659              	.Ldebug_abbrev0:
 2660 0000 01       		.uleb128 0x1
 2661 0001 11       		.uleb128 0x11
 2662 0002 01       		.byte	0x1
 2663 0003 25       		.uleb128 0x25
 2664 0004 0E       		.uleb128 0xe
 2665 0005 13       		.uleb128 0x13
 2666 0006 0B       		.uleb128 0xb
 2667 0007 03       		.uleb128 0x3
 2668 0008 0E       		.uleb128 0xe
 2669 0009 1B       		.uleb128 0x1b
 2670 000a 0E       		.uleb128 0xe
 2671 000b 55       		.uleb128 0x55
 2672 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 59


 2673 000d 11       		.uleb128 0x11
 2674 000e 01       		.uleb128 0x1
 2675 000f 10       		.uleb128 0x10
 2676 0010 17       		.uleb128 0x17
 2677 0011 00       		.byte	0
 2678 0012 00       		.byte	0
 2679 0013 02       		.uleb128 0x2
 2680 0014 24       		.uleb128 0x24
 2681 0015 00       		.byte	0
 2682 0016 0B       		.uleb128 0xb
 2683 0017 0B       		.uleb128 0xb
 2684 0018 3E       		.uleb128 0x3e
 2685 0019 0B       		.uleb128 0xb
 2686 001a 03       		.uleb128 0x3
 2687 001b 0E       		.uleb128 0xe
 2688 001c 00       		.byte	0
 2689 001d 00       		.byte	0
 2690 001e 03       		.uleb128 0x3
 2691 001f 16       		.uleb128 0x16
 2692 0020 00       		.byte	0
 2693 0021 03       		.uleb128 0x3
 2694 0022 0E       		.uleb128 0xe
 2695 0023 3A       		.uleb128 0x3a
 2696 0024 0B       		.uleb128 0xb
 2697 0025 3B       		.uleb128 0x3b
 2698 0026 0B       		.uleb128 0xb
 2699 0027 49       		.uleb128 0x49
 2700 0028 13       		.uleb128 0x13
 2701 0029 00       		.byte	0
 2702 002a 00       		.byte	0
 2703 002b 04       		.uleb128 0x4
 2704 002c 24       		.uleb128 0x24
 2705 002d 00       		.byte	0
 2706 002e 0B       		.uleb128 0xb
 2707 002f 0B       		.uleb128 0xb
 2708 0030 3E       		.uleb128 0x3e
 2709 0031 0B       		.uleb128 0xb
 2710 0032 03       		.uleb128 0x3
 2711 0033 08       		.uleb128 0x8
 2712 0034 00       		.byte	0
 2713 0035 00       		.byte	0
 2714 0036 05       		.uleb128 0x5
 2715 0037 16       		.uleb128 0x16
 2716 0038 00       		.byte	0
 2717 0039 03       		.uleb128 0x3
 2718 003a 0E       		.uleb128 0xe
 2719 003b 3A       		.uleb128 0x3a
 2720 003c 0B       		.uleb128 0xb
 2721 003d 3B       		.uleb128 0x3b
 2722 003e 05       		.uleb128 0x5
 2723 003f 49       		.uleb128 0x49
 2724 0040 13       		.uleb128 0x13
 2725 0041 00       		.byte	0
 2726 0042 00       		.byte	0
 2727 0043 06       		.uleb128 0x6
 2728 0044 35       		.uleb128 0x35
 2729 0045 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 60


 2730 0046 49       		.uleb128 0x49
 2731 0047 13       		.uleb128 0x13
 2732 0048 00       		.byte	0
 2733 0049 00       		.byte	0
 2734 004a 07       		.uleb128 0x7
 2735 004b 13       		.uleb128 0x13
 2736 004c 01       		.byte	0x1
 2737 004d 03       		.uleb128 0x3
 2738 004e 0E       		.uleb128 0xe
 2739 004f 0B       		.uleb128 0xb
 2740 0050 0B       		.uleb128 0xb
 2741 0051 3A       		.uleb128 0x3a
 2742 0052 0B       		.uleb128 0xb
 2743 0053 3B       		.uleb128 0x3b
 2744 0054 0B       		.uleb128 0xb
 2745 0055 01       		.uleb128 0x1
 2746 0056 13       		.uleb128 0x13
 2747 0057 00       		.byte	0
 2748 0058 00       		.byte	0
 2749 0059 08       		.uleb128 0x8
 2750 005a 0D       		.uleb128 0xd
 2751 005b 00       		.byte	0
 2752 005c 03       		.uleb128 0x3
 2753 005d 08       		.uleb128 0x8
 2754 005e 3A       		.uleb128 0x3a
 2755 005f 0B       		.uleb128 0xb
 2756 0060 3B       		.uleb128 0x3b
 2757 0061 0B       		.uleb128 0xb
 2758 0062 49       		.uleb128 0x49
 2759 0063 13       		.uleb128 0x13
 2760 0064 38       		.uleb128 0x38
 2761 0065 0B       		.uleb128 0xb
 2762 0066 00       		.byte	0
 2763 0067 00       		.byte	0
 2764 0068 09       		.uleb128 0x9
 2765 0069 0D       		.uleb128 0xd
 2766 006a 00       		.byte	0
 2767 006b 03       		.uleb128 0x3
 2768 006c 0E       		.uleb128 0xe
 2769 006d 3A       		.uleb128 0x3a
 2770 006e 0B       		.uleb128 0xb
 2771 006f 3B       		.uleb128 0x3b
 2772 0070 0B       		.uleb128 0xb
 2773 0071 49       		.uleb128 0x49
 2774 0072 13       		.uleb128 0x13
 2775 0073 38       		.uleb128 0x38
 2776 0074 0B       		.uleb128 0xb
 2777 0075 00       		.byte	0
 2778 0076 00       		.byte	0
 2779 0077 0A       		.uleb128 0xa
 2780 0078 13       		.uleb128 0x13
 2781 0079 01       		.byte	0x1
 2782 007a 03       		.uleb128 0x3
 2783 007b 0E       		.uleb128 0xe
 2784 007c 0B       		.uleb128 0xb
 2785 007d 0B       		.uleb128 0xb
 2786 007e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 61


 2787 007f 0B       		.uleb128 0xb
 2788 0080 3B       		.uleb128 0x3b
 2789 0081 05       		.uleb128 0x5
 2790 0082 01       		.uleb128 0x1
 2791 0083 13       		.uleb128 0x13
 2792 0084 00       		.byte	0
 2793 0085 00       		.byte	0
 2794 0086 0B       		.uleb128 0xb
 2795 0087 0D       		.uleb128 0xd
 2796 0088 00       		.byte	0
 2797 0089 03       		.uleb128 0x3
 2798 008a 08       		.uleb128 0x8
 2799 008b 3A       		.uleb128 0x3a
 2800 008c 0B       		.uleb128 0xb
 2801 008d 3B       		.uleb128 0x3b
 2802 008e 05       		.uleb128 0x5
 2803 008f 49       		.uleb128 0x49
 2804 0090 13       		.uleb128 0x13
 2805 0091 38       		.uleb128 0x38
 2806 0092 0B       		.uleb128 0xb
 2807 0093 00       		.byte	0
 2808 0094 00       		.byte	0
 2809 0095 0C       		.uleb128 0xc
 2810 0096 0D       		.uleb128 0xd
 2811 0097 00       		.byte	0
 2812 0098 03       		.uleb128 0x3
 2813 0099 0E       		.uleb128 0xe
 2814 009a 3A       		.uleb128 0x3a
 2815 009b 0B       		.uleb128 0xb
 2816 009c 3B       		.uleb128 0x3b
 2817 009d 05       		.uleb128 0x5
 2818 009e 49       		.uleb128 0x49
 2819 009f 13       		.uleb128 0x13
 2820 00a0 38       		.uleb128 0x38
 2821 00a1 0B       		.uleb128 0xb
 2822 00a2 00       		.byte	0
 2823 00a3 00       		.byte	0
 2824 00a4 0D       		.uleb128 0xd
 2825 00a5 01       		.uleb128 0x1
 2826 00a6 01       		.byte	0x1
 2827 00a7 49       		.uleb128 0x49
 2828 00a8 13       		.uleb128 0x13
 2829 00a9 01       		.uleb128 0x1
 2830 00aa 13       		.uleb128 0x13
 2831 00ab 00       		.byte	0
 2832 00ac 00       		.byte	0
 2833 00ad 0E       		.uleb128 0xe
 2834 00ae 21       		.uleb128 0x21
 2835 00af 00       		.byte	0
 2836 00b0 49       		.uleb128 0x49
 2837 00b1 13       		.uleb128 0x13
 2838 00b2 2F       		.uleb128 0x2f
 2839 00b3 0B       		.uleb128 0xb
 2840 00b4 00       		.byte	0
 2841 00b5 00       		.byte	0
 2842 00b6 0F       		.uleb128 0xf
 2843 00b7 2E       		.uleb128 0x2e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 62


 2844 00b8 00       		.byte	0
 2845 00b9 3F       		.uleb128 0x3f
 2846 00ba 19       		.uleb128 0x19
 2847 00bb 03       		.uleb128 0x3
 2848 00bc 0E       		.uleb128 0xe
 2849 00bd 3A       		.uleb128 0x3a
 2850 00be 0B       		.uleb128 0xb
 2851 00bf 3B       		.uleb128 0x3b
 2852 00c0 0B       		.uleb128 0xb
 2853 00c1 27       		.uleb128 0x27
 2854 00c2 19       		.uleb128 0x19
 2855 00c3 11       		.uleb128 0x11
 2856 00c4 01       		.uleb128 0x1
 2857 00c5 12       		.uleb128 0x12
 2858 00c6 06       		.uleb128 0x6
 2859 00c7 40       		.uleb128 0x40
 2860 00c8 18       		.uleb128 0x18
 2861 00c9 9742     		.uleb128 0x2117
 2862 00cb 19       		.uleb128 0x19
 2863 00cc 00       		.byte	0
 2864 00cd 00       		.byte	0
 2865 00ce 10       		.uleb128 0x10
 2866 00cf 2E       		.uleb128 0x2e
 2867 00d0 01       		.byte	0x1
 2868 00d1 3F       		.uleb128 0x3f
 2869 00d2 19       		.uleb128 0x19
 2870 00d3 03       		.uleb128 0x3
 2871 00d4 0E       		.uleb128 0xe
 2872 00d5 3A       		.uleb128 0x3a
 2873 00d6 0B       		.uleb128 0xb
 2874 00d7 3B       		.uleb128 0x3b
 2875 00d8 0B       		.uleb128 0xb
 2876 00d9 11       		.uleb128 0x11
 2877 00da 01       		.uleb128 0x1
 2878 00db 12       		.uleb128 0x12
 2879 00dc 06       		.uleb128 0x6
 2880 00dd 40       		.uleb128 0x40
 2881 00de 18       		.uleb128 0x18
 2882 00df 9642     		.uleb128 0x2116
 2883 00e1 19       		.uleb128 0x19
 2884 00e2 01       		.uleb128 0x1
 2885 00e3 13       		.uleb128 0x13
 2886 00e4 00       		.byte	0
 2887 00e5 00       		.byte	0
 2888 00e6 11       		.uleb128 0x11
 2889 00e7 34       		.uleb128 0x34
 2890 00e8 00       		.byte	0
 2891 00e9 03       		.uleb128 0x3
 2892 00ea 0E       		.uleb128 0xe
 2893 00eb 3A       		.uleb128 0x3a
 2894 00ec 0B       		.uleb128 0xb
 2895 00ed 3B       		.uleb128 0x3b
 2896 00ee 0B       		.uleb128 0xb
 2897 00ef 49       		.uleb128 0x49
 2898 00f0 13       		.uleb128 0x13
 2899 00f1 02       		.uleb128 0x2
 2900 00f2 18       		.uleb128 0x18
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 63


 2901 00f3 00       		.byte	0
 2902 00f4 00       		.byte	0
 2903 00f5 12       		.uleb128 0x12
 2904 00f6 2E       		.uleb128 0x2e
 2905 00f7 01       		.byte	0x1
 2906 00f8 3F       		.uleb128 0x3f
 2907 00f9 19       		.uleb128 0x19
 2908 00fa 03       		.uleb128 0x3
 2909 00fb 0E       		.uleb128 0xe
 2910 00fc 3A       		.uleb128 0x3a
 2911 00fd 0B       		.uleb128 0xb
 2912 00fe 3B       		.uleb128 0x3b
 2913 00ff 05       		.uleb128 0x5
 2914 0100 27       		.uleb128 0x27
 2915 0101 19       		.uleb128 0x19
 2916 0102 11       		.uleb128 0x11
 2917 0103 01       		.uleb128 0x1
 2918 0104 12       		.uleb128 0x12
 2919 0105 06       		.uleb128 0x6
 2920 0106 40       		.uleb128 0x40
 2921 0107 18       		.uleb128 0x18
 2922 0108 9642     		.uleb128 0x2116
 2923 010a 19       		.uleb128 0x19
 2924 010b 01       		.uleb128 0x1
 2925 010c 13       		.uleb128 0x13
 2926 010d 00       		.byte	0
 2927 010e 00       		.byte	0
 2928 010f 13       		.uleb128 0x13
 2929 0110 34       		.uleb128 0x34
 2930 0111 00       		.byte	0
 2931 0112 03       		.uleb128 0x3
 2932 0113 0E       		.uleb128 0xe
 2933 0114 3A       		.uleb128 0x3a
 2934 0115 0B       		.uleb128 0xb
 2935 0116 3B       		.uleb128 0x3b
 2936 0117 05       		.uleb128 0x5
 2937 0118 49       		.uleb128 0x49
 2938 0119 13       		.uleb128 0x13
 2939 011a 02       		.uleb128 0x2
 2940 011b 18       		.uleb128 0x18
 2941 011c 00       		.byte	0
 2942 011d 00       		.byte	0
 2943 011e 14       		.uleb128 0x14
 2944 011f 21       		.uleb128 0x21
 2945 0120 00       		.byte	0
 2946 0121 49       		.uleb128 0x49
 2947 0122 13       		.uleb128 0x13
 2948 0123 2F       		.uleb128 0x2f
 2949 0124 05       		.uleb128 0x5
 2950 0125 00       		.byte	0
 2951 0126 00       		.byte	0
 2952 0127 15       		.uleb128 0x15
 2953 0128 2E       		.uleb128 0x2e
 2954 0129 01       		.byte	0x1
 2955 012a 3F       		.uleb128 0x3f
 2956 012b 19       		.uleb128 0x19
 2957 012c 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 64


 2958 012d 0E       		.uleb128 0xe
 2959 012e 3A       		.uleb128 0x3a
 2960 012f 0B       		.uleb128 0xb
 2961 0130 3B       		.uleb128 0x3b
 2962 0131 05       		.uleb128 0x5
 2963 0132 27       		.uleb128 0x27
 2964 0133 19       		.uleb128 0x19
 2965 0134 11       		.uleb128 0x11
 2966 0135 01       		.uleb128 0x1
 2967 0136 12       		.uleb128 0x12
 2968 0137 06       		.uleb128 0x6
 2969 0138 40       		.uleb128 0x40
 2970 0139 18       		.uleb128 0x18
 2971 013a 9742     		.uleb128 0x2117
 2972 013c 19       		.uleb128 0x19
 2973 013d 01       		.uleb128 0x1
 2974 013e 13       		.uleb128 0x13
 2975 013f 00       		.byte	0
 2976 0140 00       		.byte	0
 2977 0141 16       		.uleb128 0x16
 2978 0142 05       		.uleb128 0x5
 2979 0143 00       		.byte	0
 2980 0144 03       		.uleb128 0x3
 2981 0145 0E       		.uleb128 0xe
 2982 0146 3A       		.uleb128 0x3a
 2983 0147 0B       		.uleb128 0xb
 2984 0148 3B       		.uleb128 0x3b
 2985 0149 05       		.uleb128 0x5
 2986 014a 49       		.uleb128 0x49
 2987 014b 13       		.uleb128 0x13
 2988 014c 02       		.uleb128 0x2
 2989 014d 18       		.uleb128 0x18
 2990 014e 00       		.byte	0
 2991 014f 00       		.byte	0
 2992 0150 17       		.uleb128 0x17
 2993 0151 0F       		.uleb128 0xf
 2994 0152 00       		.byte	0
 2995 0153 0B       		.uleb128 0xb
 2996 0154 0B       		.uleb128 0xb
 2997 0155 49       		.uleb128 0x49
 2998 0156 13       		.uleb128 0x13
 2999 0157 00       		.byte	0
 3000 0158 00       		.byte	0
 3001 0159 18       		.uleb128 0x18
 3002 015a 2E       		.uleb128 0x2e
 3003 015b 00       		.byte	0
 3004 015c 3F       		.uleb128 0x3f
 3005 015d 19       		.uleb128 0x19
 3006 015e 03       		.uleb128 0x3
 3007 015f 0E       		.uleb128 0xe
 3008 0160 3A       		.uleb128 0x3a
 3009 0161 0B       		.uleb128 0xb
 3010 0162 3B       		.uleb128 0x3b
 3011 0163 05       		.uleb128 0x5
 3012 0164 11       		.uleb128 0x11
 3013 0165 01       		.uleb128 0x1
 3014 0166 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 65


 3015 0167 06       		.uleb128 0x6
 3016 0168 40       		.uleb128 0x40
 3017 0169 18       		.uleb128 0x18
 3018 016a 9742     		.uleb128 0x2117
 3019 016c 19       		.uleb128 0x19
 3020 016d 00       		.byte	0
 3021 016e 00       		.byte	0
 3022 016f 19       		.uleb128 0x19
 3023 0170 05       		.uleb128 0x5
 3024 0171 00       		.byte	0
 3025 0172 03       		.uleb128 0x3
 3026 0173 08       		.uleb128 0x8
 3027 0174 3A       		.uleb128 0x3a
 3028 0175 0B       		.uleb128 0xb
 3029 0176 3B       		.uleb128 0x3b
 3030 0177 05       		.uleb128 0x5
 3031 0178 49       		.uleb128 0x49
 3032 0179 13       		.uleb128 0x13
 3033 017a 02       		.uleb128 0x2
 3034 017b 18       		.uleb128 0x18
 3035 017c 00       		.byte	0
 3036 017d 00       		.byte	0
 3037 017e 1A       		.uleb128 0x1a
 3038 017f 26       		.uleb128 0x26
 3039 0180 00       		.byte	0
 3040 0181 49       		.uleb128 0x49
 3041 0182 13       		.uleb128 0x13
 3042 0183 00       		.byte	0
 3043 0184 00       		.byte	0
 3044 0185 1B       		.uleb128 0x1b
 3045 0186 34       		.uleb128 0x34
 3046 0187 00       		.byte	0
 3047 0188 03       		.uleb128 0x3
 3048 0189 0E       		.uleb128 0xe
 3049 018a 3A       		.uleb128 0x3a
 3050 018b 0B       		.uleb128 0xb
 3051 018c 3B       		.uleb128 0x3b
 3052 018d 05       		.uleb128 0x5
 3053 018e 49       		.uleb128 0x49
 3054 018f 13       		.uleb128 0x13
 3055 0190 3F       		.uleb128 0x3f
 3056 0191 19       		.uleb128 0x19
 3057 0192 3C       		.uleb128 0x3c
 3058 0193 19       		.uleb128 0x19
 3059 0194 00       		.byte	0
 3060 0195 00       		.byte	0
 3061 0196 00       		.byte	0
 3062              		.section	.debug_aranges,"",%progbits
 3063 0000 94000000 		.4byte	0x94
 3064 0004 0200     		.2byte	0x2
 3065 0006 00000000 		.4byte	.Ldebug_info0
 3066 000a 04       		.byte	0x4
 3067 000b 00       		.byte	0
 3068 000c 0000     		.2byte	0
 3069 000e 0000     		.2byte	0
 3070 0010 00000000 		.4byte	.LFB64
 3071 0014 18000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 66


 3072 0018 00000000 		.4byte	.LFB65
 3073 001c 20000000 		.4byte	.LFE65-.LFB65
 3074 0020 00000000 		.4byte	.LFB66
 3075 0024 0C020000 		.4byte	.LFE66-.LFB66
 3076 0028 00000000 		.4byte	.LFB67
 3077 002c D8020000 		.4byte	.LFE67-.LFB67
 3078 0030 00000000 		.4byte	.LFB68
 3079 0034 18000000 		.4byte	.LFE68-.LFB68
 3080 0038 00000000 		.4byte	.LFB69
 3081 003c 18000000 		.4byte	.LFE69-.LFB69
 3082 0040 00000000 		.4byte	.LFB70
 3083 0044 1A000000 		.4byte	.LFE70-.LFB70
 3084 0048 00000000 		.4byte	.LFB71
 3085 004c 0C000000 		.4byte	.LFE71-.LFB71
 3086 0050 00000000 		.4byte	.LFB72
 3087 0054 34000000 		.4byte	.LFE72-.LFB72
 3088 0058 00000000 		.4byte	.LFB73
 3089 005c C0000000 		.4byte	.LFE73-.LFB73
 3090 0060 00000000 		.4byte	.LFB74
 3091 0064 1A000000 		.4byte	.LFE74-.LFB74
 3092 0068 00000000 		.4byte	.LFB75
 3093 006c 0C000000 		.4byte	.LFE75-.LFB75
 3094 0070 00000000 		.4byte	.LFB76
 3095 0074 0C000000 		.4byte	.LFE76-.LFB76
 3096 0078 00000000 		.4byte	.LFB77
 3097 007c 14000000 		.4byte	.LFE77-.LFB77
 3098 0080 00000000 		.4byte	.LFB78
 3099 0084 0C000000 		.4byte	.LFE78-.LFB78
 3100 0088 00000000 		.4byte	.LFB79
 3101 008c 0C000000 		.4byte	.LFE79-.LFB79
 3102 0090 00000000 		.4byte	0
 3103 0094 00000000 		.4byte	0
 3104              		.section	.debug_ranges,"",%progbits
 3105              	.Ldebug_ranges0:
 3106 0000 00000000 		.4byte	.LFB64
 3107 0004 18000000 		.4byte	.LFE64
 3108 0008 00000000 		.4byte	.LFB65
 3109 000c 20000000 		.4byte	.LFE65
 3110 0010 00000000 		.4byte	.LFB66
 3111 0014 0C020000 		.4byte	.LFE66
 3112 0018 00000000 		.4byte	.LFB67
 3113 001c D8020000 		.4byte	.LFE67
 3114 0020 00000000 		.4byte	.LFB68
 3115 0024 18000000 		.4byte	.LFE68
 3116 0028 00000000 		.4byte	.LFB69
 3117 002c 18000000 		.4byte	.LFE69
 3118 0030 00000000 		.4byte	.LFB70
 3119 0034 1A000000 		.4byte	.LFE70
 3120 0038 00000000 		.4byte	.LFB71
 3121 003c 0C000000 		.4byte	.LFE71
 3122 0040 00000000 		.4byte	.LFB72
 3123 0044 34000000 		.4byte	.LFE72
 3124 0048 00000000 		.4byte	.LFB73
 3125 004c C0000000 		.4byte	.LFE73
 3126 0050 00000000 		.4byte	.LFB74
 3127 0054 1A000000 		.4byte	.LFE74
 3128 0058 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 67


 3129 005c 0C000000 		.4byte	.LFE75
 3130 0060 00000000 		.4byte	.LFB76
 3131 0064 0C000000 		.4byte	.LFE76
 3132 0068 00000000 		.4byte	.LFB77
 3133 006c 14000000 		.4byte	.LFE77
 3134 0070 00000000 		.4byte	.LFB78
 3135 0074 0C000000 		.4byte	.LFE78
 3136 0078 00000000 		.4byte	.LFB79
 3137 007c 0C000000 		.4byte	.LFE79
 3138 0080 00000000 		.4byte	0
 3139 0084 00000000 		.4byte	0
 3140              		.section	.debug_line,"",%progbits
 3141              	.Ldebug_line0:
 3142 0000 5F030000 		.section	.debug_str,"MS",%progbits,1
 3142      02006901 
 3142      00000201 
 3142      FB0E0D00 
 3142      01010101 
 3143              	.LASF12:
 3144 0000 75696E74 		.ascii	"uint16\000"
 3144      313600
 3145              	.LASF106:
 3146 0007 6D6F745F 		.ascii	"mot_idx\000"
 3146      69647800 
 3147              	.LASF120:
 3148 000f 635F6D65 		.ascii	"c_mem\000"
 3148      6D00
 3149              	.LASF95:
 3150 0015 6D6F746F 		.ascii	"motor_control_generic\000"
 3150      725F636F 
 3150      6E74726F 
 3150      6C5F6765 
 3150      6E657269 
 3151              	.LASF48:
 3152 002b 73745F46 		.ascii	"st_FB_spec\000"
 3152      425F7370 
 3152      656300
 3153              	.LASF87:
 3154 0036 636F6D70 		.ascii	"compute_reference\000"
 3154      7574655F 
 3154      72656665 
 3154      72656E63 
 3154      6500
 3155              	.LASF109:
 3156 0048 70776D5F 		.ascii	"pwm_preload_values\000"
 3156      7072656C 
 3156      6F61645F 
 3156      76616C75 
 3156      657300
 3157              	.LASF0:
 3158 005b 7369676E 		.ascii	"signed char\000"
 3158      65642063 
 3158      68617200 
 3159              	.LASF66:
 3160 0067 64697265 		.ascii	"direction\000"
 3160      6374696F 
 3160      6E00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 68


 3161              	.LASF132:
 3162 0071 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3162      43313120 
 3162      352E342E 
 3162      31203230 
 3162      31363036 
 3163 00a4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3163      20726576 
 3163      6973696F 
 3163      6E203233 
 3163      37373135 
 3164 00d7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3164      66756E63 
 3164      74696F6E 
 3164      2D736563 
 3164      74696F6E 
 3165              	.LASF129:
 3166 00ff 675F696D 		.ascii	"g_imuNew\000"
 3166      754E6577 
 3166      00
 3167              	.LASF103:
 3168 0108 616E616C 		.ascii	"analog_read_end\000"
 3168      6F675F72 
 3168      6561645F 
 3168      656E6400 
 3169              	.LASF99:
 3170 0118 656E636F 		.ascii	"encoder_reading_SPI\000"
 3170      6465725F 
 3170      72656164 
 3170      696E675F 
 3170      53504900 
 3171              	.LASF7:
 3172 012c 6C6F6E67 		.ascii	"long long unsigned int\000"
 3172      206C6F6E 
 3172      6720756E 
 3172      7369676E 
 3172      65642069 
 3173              	.LASF34:
 3174 0143 62617564 		.ascii	"baud_rate\000"
 3174      5F726174 
 3174      6500
 3175              	.LASF113:
 3176 014d 675F7265 		.ascii	"g_refOld\000"
 3176      664F6C64 
 3176      00
 3177              	.LASF110:
 3178 0156 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3178      52784275 
 3178      66666572 
 3178      00
 3179              	.LASF114:
 3180 0163 675F6D65 		.ascii	"g_meas\000"
 3180      617300
 3181              	.LASF41:
 3182 016a 656D675F 		.ascii	"emg_threshold\000"
 3182      74687265 
 3182      73686F6C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 69


 3182      6400
 3183              	.LASF6:
 3184 0178 6C6F6E67 		.ascii	"long long int\000"
 3184      206C6F6E 
 3184      6720696E 
 3184      7400
 3185              	.LASF32:
 3186 0186 72656164 		.ascii	"ready\000"
 3186      7900
 3187              	.LASF81:
 3188 018c 636F756E 		.ascii	"counter_calibration\000"
 3188      7465725F 
 3188      63616C69 
 3188      62726174 
 3188      696F6E00 
 3189              	.LASF122:
 3190 01a0 74696D65 		.ascii	"timer_value\000"
 3190      725F7661 
 3190      6C756500 
 3191              	.LASF16:
 3192 01ac 696E7433 		.ascii	"int32\000"
 3192      3200
 3193              	.LASF125:
 3194 01b2 666C6167 		.ascii	"flag_master\000"
 3194      5F6D6173 
 3194      74657200 
 3195              	.LASF73:
 3196 01be 73746174 		.ascii	"state\000"
 3196      6500
 3197              	.LASF4:
 3198 01c4 6C6F6E67 		.ascii	"long int\000"
 3198      20696E74 
 3198      00
 3199              	.LASF118:
 3200 01cd 675F7278 		.ascii	"g_rx\000"
 3200      00
 3201              	.LASF11:
 3202 01d2 75696E74 		.ascii	"uint8\000"
 3202      3800
 3203              	.LASF28:
 3204 01d8 686F6C64 		.ascii	"hold_curr\000"
 3204      5F637572 
 3204      7200
 3205              	.LASF133:
 3206 01e2 2E2E5C73 		.ascii	"..\\src\\interruptions.c\000"
 3206      72635C69 
 3206      6E746572 
 3206      72757074 
 3206      696F6E73 
 3207              	.LASF59:
 3208 01f9 61636365 		.ascii	"accel_value\000"
 3208      6C5F7661 
 3208      6C756500 
 3209              	.LASF18:
 3210 0205 646F7562 		.ascii	"double\000"
 3210      6C6500
 3211              	.LASF135:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 70


 3212 020c 696E7465 		.ascii	"interrupt_manager\000"
 3212      72727570 
 3212      745F6D61 
 3212      6E616765 
 3212      7200
 3213              	.LASF115:
 3214 021e 675F6D65 		.ascii	"g_measOld\000"
 3214      61734F6C 
 3214      6400
 3215              	.LASF13:
 3216 0228 75696E74 		.ascii	"uint32\000"
 3216      333200
 3217              	.LASF36:
 3218 022f 73745F73 		.ascii	"st_slave\000"
 3218      6C617665 
 3218      00
 3219              	.LASF68:
 3220 0238 72657065 		.ascii	"repetitions\000"
 3220      74697469 
 3220      6F6E7300 
 3221              	.LASF100:
 3222 0244 6E5F6C69 		.ascii	"n_line\000"
 3222      6E6500
 3223              	.LASF44:
 3224 024b 73776974 		.ascii	"switch_emg\000"
 3224      63685F65 
 3224      6D6700
 3225              	.LASF71:
 3226 0256 4953525F 		.ascii	"ISR_RS485_RX_ExInterrupt\000"
 3226      52533438 
 3226      355F5258 
 3226      5F457849 
 3226      6E746572 
 3227              	.LASF46:
 3228 026f 6D617374 		.ascii	"master_mode_active\000"
 3228      65725F6D 
 3228      6F64655F 
 3228      61637469 
 3228      766500
 3229              	.LASF128:
 3230 0282 675F696D 		.ascii	"g_imu\000"
 3230      7500
 3231              	.LASF8:
 3232 0288 756E7369 		.ascii	"unsigned int\000"
 3232      676E6564 
 3232      20696E74 
 3232      00
 3233              	.LASF25:
 3234 0295 73745F72 		.ascii	"st_ref\000"
 3234      656600
 3235              	.LASF27:
 3236 029c 65737469 		.ascii	"estim_curr\000"
 3236      6D5F6375 
 3236      727200
 3237              	.LASF78:
 3238 02a7 72785F64 		.ascii	"rx_data\000"
 3238      61746100 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 71


 3239              	.LASF90:
 3240 02af 73745F72 		.ascii	"st_refOld_p\000"
 3240      65664F6C 
 3240      645F7000 
 3241              	.LASF127:
 3242 02bb 6379636C 		.ascii	"cycles_interrupt_flag\000"
 3242      65735F69 
 3242      6E746572 
 3242      72757074 
 3242      5F666C61 
 3243              	.LASF5:
 3244 02d1 6C6F6E67 		.ascii	"long unsigned int\000"
 3244      20756E73 
 3244      69676E65 
 3244      6420696E 
 3244      7400
 3245              	.LASF88:
 3246 02e3 6D6F746F 		.ascii	"motor_idx\000"
 3246      725F6964 
 3246      7800
 3247              	.LASF85:
 3248 02ed 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 3248      4E445F4D 
 3248      4F544F52 
 3248      5F494458 
 3248      00
 3249              	.LASF86:
 3250 02fe 66756E63 		.ascii	"function_scheduler\000"
 3250      74696F6E 
 3250      5F736368 
 3250      6564756C 
 3250      657200
 3251              	.LASF74:
 3252 0311 64617461 		.ascii	"data_packet_index\000"
 3252      5F706163 
 3252      6B65745F 
 3252      696E6465 
 3252      7800
 3253              	.LASF3:
 3254 0323 73686F72 		.ascii	"short unsigned int\000"
 3254      7420756E 
 3254      7369676E 
 3254      65642069 
 3254      6E7400
 3255              	.LASF124:
 3256 0336 6379636C 		.ascii	"cycle_time\000"
 3256      655F7469 
 3256      6D6500
 3257              	.LASF112:
 3258 0341 675F7265 		.ascii	"g_refNew\000"
 3258      664E6577 
 3258      00
 3259              	.LASF14:
 3260 034a 696E7438 		.ascii	"int8\000"
 3260      00
 3261              	.LASF134:
 3262 034f 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\Git\\PSoC5\\PSoC5_FW"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 72


 3262      73657273 
 3262      5C6D676E 
 3262      6F63636F 
 3262      5C446F63 
 3263 037c 5F574953 		.ascii	"_WISH_VIBES\\FW_WearableHealtySubj - WISH+Dayton\\W"
 3263      485F5649 
 3263      4245535C 
 3263      46575F57 
 3263      65617261 
 3264 03ad 4953485F 		.ascii	"ISH_VIBES_Socket.cydsn\000"
 3264      56494245 
 3264      535F536F 
 3264      636B6574 
 3264      2E637964 
 3265              	.LASF37:
 3266 03c4 706F735F 		.ascii	"pos_lim_inf\000"
 3266      6C696D5F 
 3266      696E6600 
 3267              	.LASF35:
 3268 03d0 756E7573 		.ascii	"unused_bytes\000"
 3268      65645F62 
 3268      79746573 
 3268      00
 3269              	.LASF60:
 3270 03dd 6779726F 		.ascii	"gyro_value\000"
 3270      5F76616C 
 3270      756500
 3271              	.LASF57:
 3272 03e8 73745F69 		.ascii	"st_imu_data\000"
 3272      6D755F64 
 3272      61746100 
 3273              	.LASF52:
 3274 03f4 76696272 		.ascii	"vibrotactile_feedback_active\000"
 3274      6F746163 
 3274      74696C65 
 3274      5F666565 
 3274      64626163 
 3275              	.LASF84:
 3276 0411 4D4F544F 		.ascii	"MOTOR_IDX\000"
 3276      525F4944 
 3276      5800
 3277              	.LASF9:
 3278 041b 5F5F696E 		.ascii	"__int32_t\000"
 3278      7433325F 
 3278      7400
 3279              	.LASF80:
 3280 0425 7061636B 		.ascii	"package_count\000"
 3280      6167655F 
 3280      636F756E 
 3280      7400
 3281              	.LASF79:
 3282 0433 72785F64 		.ascii	"rx_data_type\000"
 3282      6174615F 
 3282      74797065 
 3282      00
 3283              	.LASF121:
 3284 0440 63616C69 		.ascii	"calib\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 73


 3284      6200
 3285              	.LASF102:
 3286 0446 6D6F746F 		.ascii	"motor_control_SH\000"
 3286      725F636F 
 3286      6E74726F 
 3286      6C5F5348 
 3286      00
 3287              	.LASF61:
 3288 0457 6D61675F 		.ascii	"mag_value\000"
 3288      76616C75 
 3288      6500
 3289              	.LASF89:
 3290 0461 73745F72 		.ascii	"st_ref_p\000"
 3290      65665F70 
 3290      00
 3291              	.LASF22:
 3292 046a 73697A65 		.ascii	"sizetype\000"
 3292      74797065 
 3292      00
 3293              	.LASF50:
 3294 0473 6D617869 		.ascii	"maximum_pressure_kPa\000"
 3294      6D756D5F 
 3294      70726573 
 3294      73757265 
 3294      5F6B5061 
 3295              	.LASF33:
 3296 0488 73745F64 		.ascii	"st_device\000"
 3296      65766963 
 3296      6500
 3297              	.LASF96:
 3298 0492 76696272 		.ascii	"vibrotactile_control_generic\000"
 3298      6F746163 
 3298      74696C65 
 3298      5F636F6E 
 3298      74726F6C 
 3299              	.LASF77:
 3300 04af 72785F71 		.ascii	"rx_queue\000"
 3300      75657565 
 3300      00
 3301              	.LASF119:
 3302 04b8 675F6D65 		.ascii	"g_mem\000"
 3302      6D00
 3303              	.LASF123:
 3304 04be 74696D65 		.ascii	"timer_value0\000"
 3304      725F7661 
 3304      6C756530 
 3304      00
 3305              	.LASF38:
 3306 04cb 706F735F 		.ascii	"pos_lim_sup\000"
 3306      6C696D5F 
 3306      73757000 
 3307              	.LASF107:
 3308 04d7 6379636C 		.ascii	"cycles_counter_update\000"
 3308      65735F63 
 3308      6F756E74 
 3308      65725F75 
 3308      70646174 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 74


 3309              	.LASF70:
 3310 04ed 70726573 		.ascii	"pressure\000"
 3310      73757265 
 3310      00
 3311              	.LASF26:
 3312 04f6 73745F6D 		.ascii	"st_meas\000"
 3312      65617300 
 3313              	.LASF92:
 3314 04fe 636F6D70 		.ascii	"compute_SoftHand_2_motors_emg_reference\000"
 3314      7574655F 
 3314      536F6674 
 3314      48616E64 
 3314      5F325F6D 
 3315              	.LASF39:
 3316 0526 696E7075 		.ascii	"input_mode\000"
 3316      745F6D6F 
 3316      646500
 3317              	.LASF17:
 3318 0531 666C6F61 		.ascii	"float\000"
 3318      7400
 3319              	.LASF111:
 3320 0537 675F7265 		.ascii	"g_ref\000"
 3320      6600
 3321              	.LASF56:
 3322 053d 53485F63 		.ascii	"SH_config\000"
 3322      6F6E6669 
 3322      6700
 3323              	.LASF101:
 3324 0547 6173736F 		.ascii	"assoc_motor\000"
 3324      635F6D6F 
 3324      746F7200 
 3325              	.LASF93:
 3326 0553 6572725F 		.ascii	"err_emg_1\000"
 3326      656D675F 
 3326      3100
 3327              	.LASF94:
 3328 055d 6572725F 		.ascii	"err_emg_2\000"
 3328      656D675F 
 3328      3200
 3329              	.LASF20:
 3330 0567 72656738 		.ascii	"reg8\000"
 3330      00
 3331              	.LASF91:
 3332 056c 636F6D70 		.ascii	"compute_SoftHand_2_motors_joystick_reference\000"
 3332      7574655F 
 3332      536F6674 
 3332      48616E64 
 3332      5F325F6D 
 3333              	.LASF10:
 3334 0599 696E7433 		.ascii	"int32_t\000"
 3334      325F7400 
 3335              	.LASF1:
 3336 05a1 756E7369 		.ascii	"unsigned char\000"
 3336      676E6564 
 3336      20636861 
 3336      7200
 3337              	.LASF23:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 75


 3338 05af 63757272 		.ascii	"curr\000"
 3338      00
 3339              	.LASF24:
 3340 05b4 6F6E6F66 		.ascii	"onoff\000"
 3340      6600
 3341              	.LASF2:
 3342 05ba 73686F72 		.ascii	"short int\000"
 3342      7420696E 
 3342      7400
 3343              	.LASF108:
 3344 05c4 73617665 		.ascii	"save_cycles_eeprom\000"
 3344      5F637963 
 3344      6C65735F 
 3344      65657072 
 3344      6F6D00
 3345              	.LASF62:
 3346 05d7 71756174 		.ascii	"quat_value\000"
 3346      5F76616C 
 3346      756500
 3347              	.LASF55:
 3348 05e2 666C6167 		.ascii	"flag\000"
 3348      00
 3349              	.LASF83:
 3350 05e7 696E666F 		.ascii	"info_\000"
 3350      5F00
 3351              	.LASF47:
 3352 05ed 736C6176 		.ascii	"slave_ID\000"
 3352      655F4944 
 3352      00
 3353              	.LASF45:
 3354 05f6 73745F4D 		.ascii	"st_MASTER_spec\000"
 3354      41535445 
 3354      525F7370 
 3354      656300
 3355              	.LASF64:
 3356 0605 73745F63 		.ascii	"st_calib\000"
 3356      616C6962 
 3356      00
 3357              	.LASF117:
 3358 060e 675F6164 		.ascii	"g_adc_measOld\000"
 3358      635F6D65 
 3358      61734F6C 
 3358      6400
 3359              	.LASF15:
 3360 061c 696E7431 		.ascii	"int16\000"
 3360      3600
 3361              	.LASF104:
 3362 0622 6F766572 		.ascii	"overcurrent_control\000"
 3362      63757272 
 3362      656E745F 
 3362      636F6E74 
 3362      726F6C00 
 3363              	.LASF40:
 3364 0636 73745F65 		.ascii	"st_emg\000"
 3364      6D6700
 3365              	.LASF69:
 3366 063d 73745F61 		.ascii	"st_adc_meas\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 76


 3366      64635F6D 
 3366      65617300 
 3367              	.LASF65:
 3368 0649 656E6162 		.ascii	"enabled\000"
 3368      6C656400 
 3369              	.LASF21:
 3370 0651 6C6F6E67 		.ascii	"long double\000"
 3370      20646F75 
 3370      626C6500 
 3371              	.LASF31:
 3372 065d 6C656E67 		.ascii	"length\000"
 3372      746800
 3373              	.LASF19:
 3374 0664 63686172 		.ascii	"char\000"
 3374      00
 3375              	.LASF126:
 3376 0669 696E7465 		.ascii	"interrupt_flag\000"
 3376      72727570 
 3376      745F666C 
 3376      616700
 3377              	.LASF29:
 3378 0678 73745F64 		.ascii	"st_data\000"
 3378      61746100 
 3379              	.LASF105:
 3380 0680 70776D5F 		.ascii	"pwm_limit_search\000"
 3380      6C696D69 
 3380      745F7365 
 3380      61726368 
 3380      00
 3381              	.LASF72:
 3382 0691 4953525F 		.ascii	"ISR_CYCLES_Handler\000"
 3382      4359434C 
 3382      45535F48 
 3382      616E646C 
 3382      657200
 3383              	.LASF116:
 3384 06a4 675F6164 		.ascii	"g_adc_meas\000"
 3384      635F6D65 
 3384      617300
 3385              	.LASF30:
 3386 06af 62756666 		.ascii	"buffer\000"
 3386      657200
 3387              	.LASF53:
 3388 06b6 61697263 		.ascii	"airchamber_feedback_active\000"
 3388      68616D62 
 3388      65725F66 
 3388      65656462 
 3388      61636B5F 
 3389              	.LASF75:
 3390 06d1 64617461 		.ascii	"data_packet_length\000"
 3390      5F706163 
 3390      6B65745F 
 3390      6C656E67 
 3390      746800
 3391              	.LASF76:
 3392 06e4 64617461 		.ascii	"data_packet_buffer\000"
 3392      5F706163 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 77


 3392      6B65745F 
 3392      62756666 
 3392      657200
 3393              	.LASF54:
 3394 06f7 73745F65 		.ascii	"st_eeprom\000"
 3394      6570726F 
 3394      6D00
 3395              	.LASF49:
 3396 0701 6D61785F 		.ascii	"max_residual_current\000"
 3396      72657369 
 3396      6475616C 
 3396      5F637572 
 3396      72656E74 
 3397              	.LASF43:
 3398 0716 656D675F 		.ascii	"emg_speed\000"
 3398      73706565 
 3398      6400
 3399              	.LASF42:
 3400 0720 656D675F 		.ascii	"emg_max_value\000"
 3400      6D61785F 
 3400      76616C75 
 3400      6500
 3401              	.LASF82:
 3402 072e 636F756E 		.ascii	"counter_tension_func\000"
 3402      7465725F 
 3402      74656E73 
 3402      696F6E5F 
 3402      66756E63 
 3403              	.LASF58:
 3404 0743 666C6167 		.ascii	"flags\000"
 3404      7300
 3405              	.LASF98:
 3406 0749 6D6F746F 		.ascii	"motor_dir\000"
 3406      725F6469 
 3406      7200
 3407              	.LASF63:
 3408 0753 74656D70 		.ascii	"temp_value\000"
 3408      5F76616C 
 3408      756500
 3409              	.LASF130:
 3410 075e 6D617374 		.ascii	"master_mode\000"
 3410      65725F6D 
 3410      6F646500 
 3411              	.LASF67:
 3412 076a 73706565 		.ascii	"speed\000"
 3412      6400
 3413              	.LASF51:
 3414 0770 70726F70 		.ascii	"prop_err_fb_gain\000"
 3414      5F657272 
 3414      5F66625F 
 3414      6761696E 
 3414      00
 3415              	.LASF131:
 3416 0781 56545F72 		.ascii	"VT_ref\000"
 3416      656600
 3417              	.LASF97:
 3418 0788 70776D5F 		.ascii	"pwm_input\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccwSPyCC.s 			page 78


 3418      696E7075 
 3418      7400
 3419              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
