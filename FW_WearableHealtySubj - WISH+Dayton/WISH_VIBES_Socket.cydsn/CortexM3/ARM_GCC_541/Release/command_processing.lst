ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8CB0     		sub	sp, sp, #48
  44              		.cfi_def_cfa_offset 56
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 0E4B     		ldr	r3, .L50
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e 0C4B     		ldr	r3, .L50
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c 0848     		ldr	r0, .L50
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 064B     		ldr	r3, .L50
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e 044A     		ldr	r2, .L50
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 06D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 024B     		ldr	r3, .L50
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e B8E2     		b	.L1
  75              	.L51:
  76              		.align	2
  77              	.L50:
  78 0040 00000000 		.word	g_rx
  79              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  80              		.loc 1 74 0
  81 0044 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  82 0048 FA2B     		cmp	r3, #250
  83 004a 00F2B182 		bhi	.L49
  84 004e 01A2     		adr	r2, .L6
  85 0050 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  86              		.p2align 2
  87              	.L6:
  88 0054 CD040000 		.word	.L5+1
  89 0058 AD040000 		.word	.L7+1
  90 005c B1050000 		.word	.L49+1
  91 0060 D3040000 		.word	.L8+1
  92 0064 D9040000 		.word	.L9+1
  93 0068 F5040000 		.word	.L10+1
  94 006c 95040000 		.word	.L11+1
  95 0070 B1050000 		.word	.L49+1
  96 0074 B1050000 		.word	.L49+1
  97 0078 29050000 		.word	.L12+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 4


  98 007c 0F050000 		.word	.L13+1
  99 0080 B1050000 		.word	.L49+1
 100 0084 B3040000 		.word	.L14+1
 101 0088 B1050000 		.word	.L49+1
 102 008c B1050000 		.word	.L49+1
 103 0090 B1050000 		.word	.L49+1
 104 0094 B1050000 		.word	.L49+1
 105 0098 B1050000 		.word	.L49+1
 106 009c B1050000 		.word	.L49+1
 107 00a0 B1050000 		.word	.L49+1
 108 00a4 B1050000 		.word	.L49+1
 109 00a8 B1050000 		.word	.L49+1
 110 00ac B1050000 		.word	.L49+1
 111 00b0 B1050000 		.word	.L49+1
 112 00b4 B1050000 		.word	.L49+1
 113 00b8 B1050000 		.word	.L49+1
 114 00bc B1050000 		.word	.L49+1
 115 00c0 B1050000 		.word	.L49+1
 116 00c4 B1050000 		.word	.L49+1
 117 00c8 B1050000 		.word	.L49+1
 118 00cc B1050000 		.word	.L49+1
 119 00d0 B1050000 		.word	.L49+1
 120 00d4 B1050000 		.word	.L49+1
 121 00d8 B1050000 		.word	.L49+1
 122 00dc B1050000 		.word	.L49+1
 123 00e0 B1050000 		.word	.L49+1
 124 00e4 B1050000 		.word	.L49+1
 125 00e8 B1050000 		.word	.L49+1
 126 00ec B1050000 		.word	.L49+1
 127 00f0 B1050000 		.word	.L49+1
 128 00f4 B1050000 		.word	.L49+1
 129 00f8 B1050000 		.word	.L49+1
 130 00fc B1050000 		.word	.L49+1
 131 0100 B1050000 		.word	.L49+1
 132 0104 B1050000 		.word	.L49+1
 133 0108 B1050000 		.word	.L49+1
 134 010c B1050000 		.word	.L49+1
 135 0110 B1050000 		.word	.L49+1
 136 0114 B1050000 		.word	.L49+1
 137 0118 B1050000 		.word	.L49+1
 138 011c B1050000 		.word	.L49+1
 139 0120 B1050000 		.word	.L49+1
 140 0124 B1050000 		.word	.L49+1
 141 0128 B1050000 		.word	.L49+1
 142 012c B1050000 		.word	.L49+1
 143 0130 B1050000 		.word	.L49+1
 144 0134 B1050000 		.word	.L49+1
 145 0138 B1050000 		.word	.L49+1
 146 013c B1050000 		.word	.L49+1
 147 0140 B1050000 		.word	.L49+1
 148 0144 B1050000 		.word	.L49+1
 149 0148 B1050000 		.word	.L49+1
 150 014c B1050000 		.word	.L49+1
 151 0150 B1050000 		.word	.L49+1
 152 0154 B1050000 		.word	.L49+1
 153 0158 B1050000 		.word	.L49+1
 154 015c B1050000 		.word	.L49+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 5


 155 0160 B1050000 		.word	.L49+1
 156 0164 B1050000 		.word	.L49+1
 157 0168 B1050000 		.word	.L49+1
 158 016c B1050000 		.word	.L49+1
 159 0170 B1050000 		.word	.L49+1
 160 0174 B1050000 		.word	.L49+1
 161 0178 B1050000 		.word	.L49+1
 162 017c B1050000 		.word	.L49+1
 163 0180 B1050000 		.word	.L49+1
 164 0184 B1050000 		.word	.L49+1
 165 0188 B1050000 		.word	.L49+1
 166 018c B1050000 		.word	.L49+1
 167 0190 B1050000 		.word	.L49+1
 168 0194 B1050000 		.word	.L49+1
 169 0198 B1050000 		.word	.L49+1
 170 019c B1050000 		.word	.L49+1
 171 01a0 B1050000 		.word	.L49+1
 172 01a4 B1050000 		.word	.L49+1
 173 01a8 B1050000 		.word	.L49+1
 174 01ac B1050000 		.word	.L49+1
 175 01b0 B1050000 		.word	.L49+1
 176 01b4 B1050000 		.word	.L49+1
 177 01b8 B1050000 		.word	.L49+1
 178 01bc B1050000 		.word	.L49+1
 179 01c0 B1050000 		.word	.L49+1
 180 01c4 B1050000 		.word	.L49+1
 181 01c8 B1050000 		.word	.L49+1
 182 01cc B1050000 		.word	.L49+1
 183 01d0 B1050000 		.word	.L49+1
 184 01d4 B1050000 		.word	.L49+1
 185 01d8 B1050000 		.word	.L49+1
 186 01dc B1050000 		.word	.L49+1
 187 01e0 B1050000 		.word	.L49+1
 188 01e4 B1050000 		.word	.L49+1
 189 01e8 B1050000 		.word	.L49+1
 190 01ec B1050000 		.word	.L49+1
 191 01f0 B1050000 		.word	.L49+1
 192 01f4 B1050000 		.word	.L49+1
 193 01f8 B1050000 		.word	.L49+1
 194 01fc B1050000 		.word	.L49+1
 195 0200 B1050000 		.word	.L49+1
 196 0204 B1050000 		.word	.L49+1
 197 0208 B1050000 		.word	.L49+1
 198 020c B1050000 		.word	.L49+1
 199 0210 B1050000 		.word	.L49+1
 200 0214 B1050000 		.word	.L49+1
 201 0218 B1050000 		.word	.L49+1
 202 021c B1050000 		.word	.L49+1
 203 0220 B1050000 		.word	.L49+1
 204 0224 B1050000 		.word	.L49+1
 205 0228 B1050000 		.word	.L49+1
 206 022c B1050000 		.word	.L49+1
 207 0230 B1050000 		.word	.L49+1
 208 0234 B1050000 		.word	.L49+1
 209 0238 B1050000 		.word	.L49+1
 210 023c B1050000 		.word	.L49+1
 211 0240 B1050000 		.word	.L49+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 6


 212 0244 B1050000 		.word	.L49+1
 213 0248 B1050000 		.word	.L49+1
 214 024c B1050000 		.word	.L49+1
 215 0250 B1050000 		.word	.L49+1
 216 0254 41040000 		.word	.L16+1
 217 0258 83040000 		.word	.L17+1
 218 025c 47040000 		.word	.L18+1
 219 0260 8F040000 		.word	.L19+1
 220 0264 4D040000 		.word	.L20+1
 221 0268 59040000 		.word	.L21+1
 222 026c 53040000 		.word	.L22+1
 223 0270 B1050000 		.word	.L49+1
 224 0274 7D040000 		.word	.L23+1
 225 0278 6B040000 		.word	.L24+1
 226 027c B1050000 		.word	.L49+1
 227 0280 71040000 		.word	.L25+1
 228 0284 5F040000 		.word	.L26+1
 229 0288 B1050000 		.word	.L49+1
 230 028c B1050000 		.word	.L49+1
 231 0290 B1050000 		.word	.L49+1
 232 0294 89040000 		.word	.L27+1
 233 0298 B1050000 		.word	.L49+1
 234 029c 77040000 		.word	.L28+1
 235 02a0 B1050000 		.word	.L49+1
 236 02a4 B1050000 		.word	.L49+1
 237 02a8 B1050000 		.word	.L49+1
 238 02ac B1050000 		.word	.L49+1
 239 02b0 B1050000 		.word	.L49+1
 240 02b4 B1050000 		.word	.L49+1
 241 02b8 B1050000 		.word	.L49+1
 242 02bc B1050000 		.word	.L49+1
 243 02c0 B1050000 		.word	.L49+1
 244 02c4 B1050000 		.word	.L49+1
 245 02c8 B1050000 		.word	.L49+1
 246 02cc B1050000 		.word	.L49+1
 247 02d0 B1050000 		.word	.L49+1
 248 02d4 B1050000 		.word	.L49+1
 249 02d8 4B050000 		.word	.L29+1
 250 02dc 51050000 		.word	.L30+1
 251 02e0 69050000 		.word	.L31+1
 252 02e4 6F050000 		.word	.L32+1
 253 02e8 75050000 		.word	.L33+1
 254 02ec 7B050000 		.word	.L34+1
 255 02f0 81050000 		.word	.L35+1
 256 02f4 99050000 		.word	.L36+1
 257 02f8 B1050000 		.word	.L49+1
 258 02fc B1050000 		.word	.L49+1
 259 0300 B1050000 		.word	.L49+1
 260 0304 B1050000 		.word	.L49+1
 261 0308 B1050000 		.word	.L49+1
 262 030c B1050000 		.word	.L49+1
 263 0310 B1050000 		.word	.L49+1
 264 0314 B1050000 		.word	.L49+1
 265 0318 B1050000 		.word	.L49+1
 266 031c B1050000 		.word	.L49+1
 267 0320 B1050000 		.word	.L49+1
 268 0324 B1050000 		.word	.L49+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 7


 269 0328 B1050000 		.word	.L49+1
 270 032c B1050000 		.word	.L49+1
 271 0330 B1050000 		.word	.L49+1
 272 0334 B1050000 		.word	.L49+1
 273 0338 B1050000 		.word	.L49+1
 274 033c B1050000 		.word	.L49+1
 275 0340 B1050000 		.word	.L49+1
 276 0344 B1050000 		.word	.L49+1
 277 0348 B1050000 		.word	.L49+1
 278 034c B1050000 		.word	.L49+1
 279 0350 B1050000 		.word	.L49+1
 280 0354 B1050000 		.word	.L49+1
 281 0358 B1050000 		.word	.L49+1
 282 035c B1050000 		.word	.L49+1
 283 0360 B1050000 		.word	.L49+1
 284 0364 B1050000 		.word	.L49+1
 285 0368 B1050000 		.word	.L49+1
 286 036c B1050000 		.word	.L49+1
 287 0370 B1050000 		.word	.L49+1
 288 0374 B1050000 		.word	.L49+1
 289 0378 B1050000 		.word	.L49+1
 290 037c B1050000 		.word	.L49+1
 291 0380 B1050000 		.word	.L49+1
 292 0384 B1050000 		.word	.L49+1
 293 0388 B1050000 		.word	.L49+1
 294 038c B1050000 		.word	.L49+1
 295 0390 B1050000 		.word	.L49+1
 296 0394 B1050000 		.word	.L49+1
 297 0398 B1050000 		.word	.L49+1
 298 039c B1050000 		.word	.L49+1
 299 03a0 B1050000 		.word	.L49+1
 300 03a4 B1050000 		.word	.L49+1
 301 03a8 B1050000 		.word	.L49+1
 302 03ac B1050000 		.word	.L49+1
 303 03b0 B1050000 		.word	.L49+1
 304 03b4 B1050000 		.word	.L49+1
 305 03b8 B1050000 		.word	.L49+1
 306 03bc B1050000 		.word	.L49+1
 307 03c0 B1050000 		.word	.L49+1
 308 03c4 B1050000 		.word	.L49+1
 309 03c8 B1050000 		.word	.L49+1
 310 03cc B1050000 		.word	.L49+1
 311 03d0 B1050000 		.word	.L49+1
 312 03d4 B1050000 		.word	.L49+1
 313 03d8 B1050000 		.word	.L49+1
 314 03dc B1050000 		.word	.L49+1
 315 03e0 B1050000 		.word	.L49+1
 316 03e4 B1050000 		.word	.L49+1
 317 03e8 B1050000 		.word	.L49+1
 318 03ec B1050000 		.word	.L49+1
 319 03f0 B1050000 		.word	.L49+1
 320 03f4 B1050000 		.word	.L49+1
 321 03f8 B1050000 		.word	.L49+1
 322 03fc B1050000 		.word	.L49+1
 323 0400 B1050000 		.word	.L49+1
 324 0404 B1050000 		.word	.L49+1
 325 0408 B1050000 		.word	.L49+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 8


 326 040c B1050000 		.word	.L49+1
 327 0410 B1050000 		.word	.L49+1
 328 0414 B1050000 		.word	.L49+1
 329 0418 B1050000 		.word	.L49+1
 330 041c B1050000 		.word	.L49+1
 331 0420 B1050000 		.word	.L49+1
 332 0424 B1050000 		.word	.L49+1
 333 0428 B1050000 		.word	.L49+1
 334 042c B1050000 		.word	.L49+1
 335 0430 B1050000 		.word	.L49+1
 336 0434 B1050000 		.word	.L49+1
 337 0438 B1050000 		.word	.L49+1
 338 043c 65040000 		.word	.L37+1
 339              		.p2align 1
 340              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 341              		.loc 1 78 0
 342 0440 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 343              		.loc 1 79 0
 344 0444 B5E0     		b	.L1
 345              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 346              		.loc 1 84 0
 347 0446 FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 348              		.loc 1 85 0
 349 044a B2E0     		b	.L1
 350              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 351              		.loc 1 90 0
 352 044c FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 353              		.loc 1 91 0
 354 0450 AFE0     		b	.L1
 355              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 356              		.loc 1 96 0
 357 0452 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 358              		.loc 1 97 0
 359 0456 ACE0     		b	.L1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 9


 360              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 361              		.loc 1 102 0
 362 0458 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 363              		.loc 1 103 0
 364 045c A9E0     		b	.L1
 365              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 366              		.loc 1 108 0
 367 045e FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 368              		.loc 1 109 0
 369 0462 A6E0     		b	.L1
 370              	.L37:
 110:..\src/command_processing.c **** 
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_VIBROTACTILE_INPUTS
 112:..\src/command_processing.c ****          
 113:..\src/command_processing.c ****         case CMD_GET_VIBROTACTILE_INPUTS:
 114:..\src/command_processing.c ****             cmd_get_vibrotactile_inputs();
 371              		.loc 1 114 0
 372 0464 FFF7FEFF 		bl	cmd_get_vibrotactile_inputs
 115:..\src/command_processing.c ****             break;            
 373              		.loc 1 115 0
 374 0468 A3E0     		b	.L1
 375              	.L24:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c ****         
 119:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 120:..\src/command_processing.c ****             cmd_get_velocities();
 376              		.loc 1 120 0
 377 046a FFF7FEFF 		bl	cmd_get_velocities
 121:..\src/command_processing.c ****             break;
 378              		.loc 1 121 0
 379 046e A0E0     		b	.L1
 380              	.L25:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 126:..\src/command_processing.c ****             cmd_get_accelerations();
 381              		.loc 1 126 0
 382 0470 FFF7FEFF 		bl	cmd_get_accelerations
 127:..\src/command_processing.c ****             break;
 383              		.loc 1 127 0
 384 0474 9DE0     		b	.L1
 385              	.L28:
 128:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 10


 129:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 132:..\src/command_processing.c ****             cmd_get_joystick();
 386              		.loc 1 132 0
 387 0476 FFF7FEFF 		bl	cmd_get_joystick
 133:..\src/command_processing.c ****         break;
 388              		.loc 1 133 0
 389 047a 9AE0     		b	.L1
 390              	.L23:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 136:..\src/command_processing.c **** 
 137:..\src/command_processing.c ****         case CMD_GET_EMG:
 138:..\src/command_processing.c ****             cmd_get_emg();
 391              		.loc 1 138 0
 392 047c FFF7FEFF 		bl	cmd_get_emg
 139:..\src/command_processing.c ****             break;
 393              		.loc 1 139 0
 394 0480 97E0     		b	.L1
 395              	.L17:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 144:..\src/command_processing.c ****             cmd_get_activate();
 396              		.loc 1 144 0
 397 0482 FFF7FEFF 		bl	cmd_get_activate
 145:..\src/command_processing.c ****             break;
 398              		.loc 1 145 0
 399 0486 94E0     		b	.L1
 400              	.L27:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 148:..\src/command_processing.c ****             
 149:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 150:..\src/command_processing.c ****             cmd_set_baudrate();
 401              		.loc 1 150 0
 402 0488 FFF7FEFF 		bl	cmd_set_baudrate
 151:..\src/command_processing.c ****             break;  
 403              		.loc 1 151 0
 404 048c 91E0     		b	.L1
 405              	.L19:
 152:..\src/command_processing.c ****             
 153:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 156:..\src/command_processing.c ****             cmd_get_inputs();
 406              		.loc 1 156 0
 407 048e FFF7FEFF 		bl	cmd_get_inputs
 157:..\src/command_processing.c ****             break;
 408              		.loc 1 157 0
 409 0492 8EE0     		b	.L1
 410              	.L11:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 160:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 11


 161:..\src/command_processing.c ****         case CMD_GET_INFO:
 162:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 411              		.loc 1 162 0
 412 0494 484B     		ldr	r3, .L52
 413 0496 1B88     		ldrh	r3, [r3]
 414 0498 BB61     		str	r3, [r7, #24]
 415              	.LBB12:
 416              	.LBB13:
 417              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 12


  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 13


 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 14


 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 15


 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 16


 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 17


 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 18


 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 19


 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 20


 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 21


 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 22


 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 23


 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 24


 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 25


 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 418              		.loc 2 792 0
 419 049a BB69     		ldr	r3, [r7, #24]
 420              		.syntax unified
 421              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 422 049c 5BBA     		rev16 r3, r3
 423              	@ 0 "" 2
 424              		.thumb
 425              		.syntax unified
 426 049e 7B61     		str	r3, [r7, #20]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 427              		.loc 2 793 0
 428 04a0 7B69     		ldr	r3, [r7, #20]
 429              	.LBE13:
 430              	.LBE12:
 431              		.loc 1 162 0
 432 04a2 9BB2     		uxth	r3, r3
 433 04a4 1846     		mov	r0, r3
 434 04a6 FFF7FEFF 		bl	infoGet
 163:..\src/command_processing.c ****             break;
 435              		.loc 1 163 0
 436 04aa 82E0     		b	.L1
 437              	.L7:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 168:..\src/command_processing.c ****             setZeros();
 438              		.loc 1 168 0
 439 04ac FFF7FEFF 		bl	setZeros
 169:..\src/command_processing.c ****             break;
 440              		.loc 1 169 0
 441 04b0 7FE0     		b	.L1
 442              	.L14:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 172:..\src/command_processing.c **** 
 173:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 174:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])),TRUE );
 443              		.loc 1 174 0
 444 04b2 414B     		ldr	r3, .L52
 445 04b4 1B88     		ldrh	r3, [r3]
 446 04b6 BB62     		str	r3, [r7, #40]
 447              	.LBB14:
 448              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 449              		.loc 2 792 0
 450 04b8 BB6A     		ldr	r3, [r7, #40]
 451              		.syntax unified
 452              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 453 04ba 5BBA     		rev16 r3, r3
 454              	@ 0 "" 2
 455              		.thumb
 456              		.syntax unified
 457 04bc 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 26


 458              		.loc 2 793 0
 459 04be 3B69     		ldr	r3, [r7, #16]
 460              	.LBE15:
 461              	.LBE14:
 462              		.loc 1 174 0
 463 04c0 9BB2     		uxth	r3, r3
 464 04c2 0121     		movs	r1, #1
 465 04c4 1846     		mov	r0, r3
 466 04c6 FFF7FEFF 		bl	manage_param_list
 175:..\src/command_processing.c ****             break;
 467              		.loc 1 175 0
 468 04ca 72E0     		b	.L1
 469              	.L5:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================================     CMD_PING
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_PING:
 180:..\src/command_processing.c ****             cmd_ping();
 470              		.loc 1 180 0
 471 04cc FFF7FEFF 		bl	cmd_ping
 181:..\src/command_processing.c ****             break;
 472              		.loc 1 181 0
 473 04d0 6FE0     		b	.L1
 474              	.L8:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 184:..\src/command_processing.c ****             
 185:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 186:..\src/command_processing.c ****             cmd_store_params();
 475              		.loc 1 186 0
 476 04d2 FFF7FEFF 		bl	cmd_store_params
 187:..\src/command_processing.c ****             break;
 477              		.loc 1 187 0
 478 04d6 6CE0     		b	.L1
 479              	.L9:
 188:..\src/command_processing.c **** 
 189:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 190:..\src/command_processing.c **** 
 191:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 192:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 480              		.loc 1 192 0
 481 04d8 3220     		movs	r0, #50
 482 04da FFF7FEFF 		bl	memStore
 483 04de 0346     		mov	r3, r0
 484 04e0 002B     		cmp	r3, #0
 485 04e2 03D0     		beq	.L40
 193:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 486              		.loc 1 193 0
 487 04e4 0120     		movs	r0, #1
 488 04e6 FFF7FEFF 		bl	sendAcknowledgment
 194:..\src/command_processing.c ****             else
 195:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 196:..\src/command_processing.c ****             break;
 489              		.loc 1 196 0
 490 04ea 62E0     		b	.L1
 491              	.L40:
 195:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 27


 492              		.loc 1 195 0
 493 04ec 0020     		movs	r0, #0
 494 04ee FFF7FEFF 		bl	sendAcknowledgment
 495              		.loc 1 196 0
 496 04f2 5EE0     		b	.L1
 497              	.L10:
 197:..\src/command_processing.c **** 
 198:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 199:..\src/command_processing.c **** 
 200:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 201:..\src/command_processing.c ****             if(memRestore())
 498              		.loc 1 201 0
 499 04f4 FFF7FEFF 		bl	memRestore
 500 04f8 0346     		mov	r3, r0
 501 04fa 002B     		cmp	r3, #0
 502 04fc 03D0     		beq	.L42
 202:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 503              		.loc 1 202 0
 504 04fe 0120     		movs	r0, #1
 505 0500 FFF7FEFF 		bl	sendAcknowledgment
 203:..\src/command_processing.c ****             else
 204:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 205:..\src/command_processing.c ****             break;
 506              		.loc 1 205 0
 507 0504 55E0     		b	.L1
 508              	.L42:
 204:..\src/command_processing.c ****             break;
 509              		.loc 1 204 0
 510 0506 0020     		movs	r0, #0
 511 0508 FFF7FEFF 		bl	sendAcknowledgment
 512              		.loc 1 205 0
 513 050c 51E0     		b	.L1
 514              	.L13:
 206:..\src/command_processing.c **** 
 207:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 208:..\src/command_processing.c **** 
 209:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 210:..\src/command_processing.c ****             if(memInit())
 515              		.loc 1 210 0
 516 050e FFF7FEFF 		bl	memInit
 517 0512 0346     		mov	r3, r0
 518 0514 002B     		cmp	r3, #0
 519 0516 03D0     		beq	.L44
 211:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 520              		.loc 1 211 0
 521 0518 0120     		movs	r0, #1
 522 051a FFF7FEFF 		bl	sendAcknowledgment
 212:..\src/command_processing.c ****             else
 213:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 214:..\src/command_processing.c ****             break;
 523              		.loc 1 214 0
 524 051e 48E0     		b	.L1
 525              	.L44:
 213:..\src/command_processing.c ****             break;
 526              		.loc 1 213 0
 527 0520 0020     		movs	r0, #0
 528 0522 FFF7FEFF 		bl	sendAcknowledgment
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 28


 529              		.loc 1 214 0
 530 0526 44E0     		b	.L1
 531              	.L12:
 215:..\src/command_processing.c **** 
 216:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 217:..\src/command_processing.c **** 
 218:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 219:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 220:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 532              		.loc 1 220 0
 533 0528 0120     		movs	r0, #1
 534 052a FFF7FEFF 		bl	sendAcknowledgment
 221:..\src/command_processing.c ****             CyDelay(1000);
 535              		.loc 1 221 0
 536 052e 4FF47A70 		mov	r0, #1000
 537 0532 FFF7FEFF 		bl	CyDelay
 222:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 538              		.loc 1 222 0
 539 0536 0020     		movs	r0, #0
 540 0538 FFF7FEFF 		bl	FTDI_ENABLE_Write
 223:..\src/command_processing.c ****             CyDelay(1000);
 541              		.loc 1 223 0
 542 053c 4FF47A70 		mov	r0, #1000
 543 0540 FFF7FEFF 		bl	CyDelay
 224:..\src/command_processing.c ****             Bootloadable_Load();
 544              		.loc 1 224 0
 545 0544 FFF7FEFF 		bl	Bootloadable_Load
 225:..\src/command_processing.c ****             break;
 546              		.loc 1 225 0
 547 0548 33E0     		b	.L1
 548              	.L29:
 226:..\src/command_processing.c **** 
 227:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 228:..\src/command_processing.c **** 
 229:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 230:..\src/command_processing.c ****            
 231:..\src/command_processing.c ****             break;
 232:..\src/command_processing.c ****             
 233:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 234:..\src/command_processing.c **** 
 235:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 236:..\src/command_processing.c ****             cmd_get_imu_readings();
 549              		.loc 1 236 0
 550 054a FFF7FEFF 		bl	cmd_get_imu_readings
 237:..\src/command_processing.c ****             break; 
 551              		.loc 1 237 0
 552 054e 30E0     		b	.L1
 553              	.L30:
 238:..\src/command_processing.c ****             
 239:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 240:..\src/command_processing.c **** 
 241:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 242:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 554              		.loc 1 242 0
 555 0550 194B     		ldr	r3, .L52
 556 0552 1B88     		ldrh	r3, [r3]
 557 0554 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 29


 558              	.LBB16:
 559              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 560              		.loc 2 792 0
 561 0556 7B6A     		ldr	r3, [r7, #36]
 562              		.syntax unified
 563              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 564 0558 5BBA     		rev16 r3, r3
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 055a FB60     		str	r3, [r7, #12]
 569              		.loc 2 793 0
 570 055c FB68     		ldr	r3, [r7, #12]
 571              	.LBE17:
 572              	.LBE16:
 573              		.loc 1 242 0
 574 055e 9BB2     		uxth	r3, r3
 575 0560 1846     		mov	r0, r3
 576 0562 FFF7FEFF 		bl	get_IMU_param_list
 243:..\src/command_processing.c ****             break;             
 577              		.loc 1 243 0
 578 0566 24E0     		b	.L1
 579              	.L31:
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 246:..\src/command_processing.c **** 
 247:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 248:..\src/command_processing.c ****             cmd_get_encoder_map();
 580              		.loc 1 248 0
 581 0568 FFF7FEFF 		bl	cmd_get_encoder_map
 249:..\src/command_processing.c ****             break; 
 582              		.loc 1 249 0
 583 056c 21E0     		b	.L1
 584              	.L32:
 250:..\src/command_processing.c **** 
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 254:..\src/command_processing.c ****             cmd_get_encoder_raw();
 585              		.loc 1 254 0
 586 056e FFF7FEFF 		bl	cmd_get_encoder_raw
 255:..\src/command_processing.c ****             break; 
 587              		.loc 1 255 0
 588 0572 1EE0     		b	.L1
 589              	.L33:
 256:..\src/command_processing.c **** 
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 260:..\src/command_processing.c ****             cmd_get_ADC_map();
 590              		.loc 1 260 0
 591 0574 FFF7FEFF 		bl	cmd_get_ADC_map
 261:..\src/command_processing.c ****             break; 
 592              		.loc 1 261 0
 593 0578 1BE0     		b	.L1
 594              	.L34:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 30


 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 266:..\src/command_processing.c ****             cmd_get_ADC_raw();
 595              		.loc 1 266 0
 596 057a FFF7FEFF 		bl	cmd_get_ADC_raw
 267:..\src/command_processing.c ****             break; 
 597              		.loc 1 267 0
 598 057e 18E0     		b	.L1
 599              	.L35:
 268:..\src/command_processing.c ****             
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_SINGLE_FILE
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 272:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 600              		.loc 1 272 0
 601 0580 0D4B     		ldr	r3, .L52
 602 0582 1B88     		ldrh	r3, [r3]
 603 0584 3B62     		str	r3, [r7, #32]
 604              	.LBB18:
 605              	.LBB19:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 606              		.loc 2 792 0
 607 0586 3B6A     		ldr	r3, [r7, #32]
 608              		.syntax unified
 609              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 610 0588 5BBA     		rev16 r3, r3
 611              	@ 0 "" 2
 612              		.thumb
 613              		.syntax unified
 614 058a BB60     		str	r3, [r7, #8]
 615              		.loc 2 793 0
 616 058c BB68     		ldr	r3, [r7, #8]
 617              	.LBE19:
 618              	.LBE18:
 619              		.loc 1 272 0
 620 058e 9BB2     		uxth	r3, r3
 621 0590 1846     		mov	r0, r3
 622 0592 FFF7FEFF 		bl	cmd_get_SD_file
 273:..\src/command_processing.c ****             break;   
 623              		.loc 1 273 0
 624 0596 0CE0     		b	.L1
 625              	.L36:
 274:..\src/command_processing.c ****             
 275:..\src/command_processing.c **** //=====================================================     CMD_REMOVE_SD_SINGLE_FILE
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_REMOVE_SD_SINGLE_FILE:
 278:..\src/command_processing.c ****             cmd_remove_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 626              		.loc 1 278 0
 627 0598 074B     		ldr	r3, .L52
 628 059a 1B88     		ldrh	r3, [r3]
 629 059c FB61     		str	r3, [r7, #28]
 630              	.LBB20:
 631              	.LBB21:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 632              		.loc 2 792 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 31


 633 059e FB69     		ldr	r3, [r7, #28]
 634              		.syntax unified
 635              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 636 05a0 5BBA     		rev16 r3, r3
 637              	@ 0 "" 2
 638              		.thumb
 639              		.syntax unified
 640 05a2 7B60     		str	r3, [r7, #4]
 641              		.loc 2 793 0
 642 05a4 7B68     		ldr	r3, [r7, #4]
 643              	.LBE21:
 644              	.LBE20:
 645              		.loc 1 278 0
 646 05a6 9BB2     		uxth	r3, r3
 647 05a8 1846     		mov	r0, r3
 648 05aa FFF7FEFF 		bl	cmd_remove_SD_file
 279:..\src/command_processing.c ****             break;               
 649              		.loc 1 279 0
 650 05ae 00E0     		b	.L1
 651              	.L49:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 282:..\src/command_processing.c ****         default:
 283:..\src/command_processing.c ****             break;
 652              		.loc 1 283 0
 653 05b0 00BF     		nop
 654              	.L1:
 284:..\src/command_processing.c **** 
 285:..\src/command_processing.c ****     }
 286:..\src/command_processing.c **** }  
 655              		.loc 1 286 0
 656 05b2 3037     		adds	r7, r7, #48
 657              		.cfi_def_cfa_offset 8
 658 05b4 BD46     		mov	sp, r7
 659              		.cfi_def_cfa_register 13
 660              		@ sp needed
 661 05b6 80BD     		pop	{r7, pc}
 662              	.L53:
 663              		.align	2
 664              	.L52:
 665 05b8 01000000 		.word	g_rx+1
 666              		.cfi_endproc
 667              	.LFE64:
 668              		.size	commProcess, .-commProcess
 669              		.section	.text.infoSend,"ax",%progbits
 670              		.align	2
 671              		.global	infoSend
 672              		.thumb
 673              		.thumb_func
 674              		.type	infoSend, %function
 675              	infoSend:
 676              	.LFB65:
 287:..\src/command_processing.c **** 
 288:..\src/command_processing.c **** //==============================================================================
 289:..\src/command_processing.c **** //                                                                     INFO SEND
 290:..\src/command_processing.c **** //==============================================================================
 291:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 32


 292:..\src/command_processing.c **** void infoSend(void){
 677              		.loc 1 292 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 1504
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 ADF5BC6D 		sub	sp, sp, #1504
 686              		.cfi_def_cfa_offset 1512
 687 0006 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 293:..\src/command_processing.c ****     char packet_string[1500];
 294:..\src/command_processing.c ****     
 295:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 689              		.loc 1 295 0
 690 0008 3B1D     		adds	r3, r7, #4
 691 000a 1846     		mov	r0, r3
 692 000c FFF7FEFF 		bl	prepare_generic_info
 296:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 693              		.loc 1 296 0
 694 0010 3B1D     		adds	r3, r7, #4
 695 0012 1846     		mov	r0, r3
 696 0014 FFF7FEFF 		bl	UART_RS485_PutString
 297:..\src/command_processing.c **** }
 697              		.loc 1 297 0
 698 0018 00BF     		nop
 699 001a 07F5BC67 		add	r7, r7, #1504
 700              		.cfi_def_cfa_offset 8
 701 001e BD46     		mov	sp, r7
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 0020 80BD     		pop	{r7, pc}
 705              		.cfi_endproc
 706              	.LFE65:
 707              		.size	infoSend, .-infoSend
 708 0022 00BF     		.section	.text.num_of_bytes,"ax",%progbits
 709              		.align	2
 710              		.global	num_of_bytes
 711              		.thumb
 712              		.thumb_func
 713              		.type	num_of_bytes, %function
 714              	num_of_bytes:
 715              	.LFB66:
 298:..\src/command_processing.c **** //==============================================================================
 299:..\src/command_processing.c **** //                                                                  NUM_OF_BYTES
 300:..\src/command_processing.c **** //==============================================================================
 301:..\src/command_processing.c ****                     
 302:..\src/command_processing.c **** uint8 num_of_bytes (uint8 TYPE){
 716              		.loc 1 302 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 16
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 33


 723              		.cfi_offset 7, -4
 724 0002 85B0     		sub	sp, sp, #20
 725              		.cfi_def_cfa_offset 24
 726 0004 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 728 0006 0346     		mov	r3, r0
 729 0008 FB71     		strb	r3, [r7, #7]
 303:..\src/command_processing.c ****     uint8 sod;
 304:..\src/command_processing.c ****     switch (TYPE) {
 730              		.loc 1 304 0
 731 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 732 000c 092B     		cmp	r3, #9
 733 000e 20D8     		bhi	.L56
 734 0010 01A2     		adr	r2, .L58
 735 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 736 0016 00BF     		.p2align 2
 737              	.L58:
 738 0018 41000000 		.word	.L57+1
 739 001c 41000000 		.word	.L57+1
 740 0020 41000000 		.word	.L57+1
 741 0024 47000000 		.word	.L59+1
 742 0028 47000000 		.word	.L59+1
 743 002c 4D000000 		.word	.L60+1
 744 0030 4D000000 		.word	.L60+1
 745 0034 4D000000 		.word	.L60+1
 746 0038 53000000 		.word	.L56+1
 747 003c 41000000 		.word	.L57+1
 748              		.p2align 1
 749              	.L57:
 305:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 306:..\src/command_processing.c ****                 sod = 1; break;
 750              		.loc 1 306 0
 751 0040 0123     		movs	r3, #1
 752 0042 FB73     		strb	r3, [r7, #15]
 753 0044 05E0     		b	.L56
 754              	.L59:
 307:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 308:..\src/command_processing.c ****                 sod = 2; break;
 755              		.loc 1 308 0
 756 0046 0223     		movs	r3, #2
 757 0048 FB73     		strb	r3, [r7, #15]
 758 004a 02E0     		b	.L56
 759              	.L60:
 309:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 310:..\src/command_processing.c ****                 sod = 4; break;
 760              		.loc 1 310 0
 761 004c 0423     		movs	r3, #4
 762 004e FB73     		strb	r3, [r7, #15]
 763 0050 00BF     		nop
 764              	.L56:
 311:..\src/command_processing.c ****     }  
 312:..\src/command_processing.c ****     return sod;
 765              		.loc 1 312 0
 766 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 313:..\src/command_processing.c **** }
 767              		.loc 1 313 0
 768 0054 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 34


 769 0056 1437     		adds	r7, r7, #20
 770              		.cfi_def_cfa_offset 4
 771 0058 BD46     		mov	sp, r7
 772              		.cfi_def_cfa_register 13
 773              		@ sp needed
 774 005a 80BC     		pop	{r7}
 775              		.cfi_restore 7
 776              		.cfi_def_cfa_offset 0
 777 005c 7047     		bx	lr
 778              		.cfi_endproc
 779              	.LFE66:
 780              		.size	num_of_bytes, .-num_of_bytes
 781 005e 00BF     		.section	.text.infoGet,"ax",%progbits
 782              		.align	2
 783              		.global	infoGet
 784              		.thumb
 785              		.thumb_func
 786              		.type	infoGet, %function
 787              	infoGet:
 788              	.LFB67:
 314:..\src/command_processing.c **** 
 315:..\src/command_processing.c **** //==============================================================================
 316:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 317:..\src/command_processing.c **** //==============================================================================
 318:..\src/command_processing.c **** 
 319:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 789              		.loc 1 319 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 24008
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793 0000 80B5     		push	{r7, lr}
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 ADF5BB4D 		sub	sp, sp, #23936
 798              		.cfi_def_cfa_offset 23944
 799 0006 92B0     		sub	sp, sp, #72
 800              		.cfi_def_cfa_offset 24016
 801 0008 00AF     		add	r7, sp, #0
 802              		.cfi_def_cfa_register 7
 803 000a 0246     		mov	r2, r0
 804 000c 07F14803 		add	r3, r7, #72
 805 0010 423B     		subs	r3, r3, #66
 806 0012 1A80     		strh	r2, [r3]	@ movhi
 320:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 807              		.loc 1 320 0
 808 0014 07F59C43 		add	r3, r7, #19968
 809 0018 03F12803 		add	r3, r3, #40
 810 001c 0022     		movs	r2, #0
 811 001e 1A60     		str	r2, [r3]
 812 0020 0433     		adds	r3, r3, #4
 813 0022 40F69C72 		movw	r2, #3996
 814 0026 0021     		movs	r1, #0
 815 0028 1846     		mov	r0, r3
 816 002a FFF7FEFF 		bl	memset
 321:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 817              		.loc 1 321 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 35


 818 002e 07F14803 		add	r3, r7, #72
 819 0032 403B     		subs	r3, r3, #64
 820 0034 0022     		movs	r2, #0
 821 0036 1A60     		str	r2, [r3]
 822 0038 0433     		adds	r3, r3, #4
 823 003a 44F61C62 		movw	r2, #19996
 824 003e 0021     		movs	r1, #0
 825 0040 1846     		mov	r0, r3
 826 0042 FFF7FEFF 		bl	memset
 322:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 323:..\src/command_processing.c **** 
 324:..\src/command_processing.c ****     switch (info_type) {
 827              		.loc 1 324 0
 828 0046 07F14803 		add	r3, r7, #72
 829 004a 423B     		subs	r3, r3, #66
 830 004c 1B88     		ldrh	r3, [r3]
 831 004e 062B     		cmp	r3, #6
 832 0050 7DD8     		bhi	.L73
 833 0052 01A2     		adr	r2, .L65
 834 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 835              		.p2align 2
 836              	.L65:
 837 0058 75000000 		.word	.L64+1
 838 005c 97000000 		.word	.L66+1
 839 0060 B9000000 		.word	.L67+1
 840 0064 E1000000 		.word	.L68+1
 841 0068 03010000 		.word	.L69+1
 842 006c 21010000 		.word	.L70+1
 843 0070 27010000 		.word	.L71+1
 844              		.p2align 1
 845              	.L64:
 325:..\src/command_processing.c ****         case INFO_ALL:
 326:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 846              		.loc 1 326 0
 847 0074 07F59C43 		add	r3, r7, #19968
 848 0078 03F12803 		add	r3, r3, #40
 849 007c 1846     		mov	r0, r3
 850 007e FFF7FEFF 		bl	prepare_generic_info
 327:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 851              		.loc 1 327 0
 852 0082 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 328:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 853              		.loc 1 328 0
 854 0086 07F59C43 		add	r3, r7, #19968
 855 008a 03F12803 		add	r3, r3, #40
 856 008e 1846     		mov	r0, r3
 857 0090 FFF7FEFF 		bl	UART_RS485_PutString
 329:..\src/command_processing.c ****             break;
 858              		.loc 1 329 0
 859 0094 5CE0     		b	.L72
 860              	.L66:
 330:..\src/command_processing.c ****         case CYCLES_INFO:
 331:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 861              		.loc 1 331 0
 862 0096 07F59C43 		add	r3, r7, #19968
 863 009a 03F12803 		add	r3, r3, #40
 864 009e 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 36


 865 00a0 FFF7FEFF 		bl	prepare_counter_info
 332:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 866              		.loc 1 332 0
 867 00a4 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 333:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 868              		.loc 1 333 0
 869 00a8 07F59C43 		add	r3, r7, #19968
 870 00ac 03F12803 		add	r3, r3, #40
 871 00b0 1846     		mov	r0, r3
 872 00b2 FFF7FEFF 		bl	UART_RS485_PutString
 334:..\src/command_processing.c ****             break;
 873              		.loc 1 334 0
 874 00b6 4BE0     		b	.L72
 875              	.L67:
 335:..\src/command_processing.c ****         case GET_SD_PARAM:
 336:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 876              		.loc 1 336 0
 877 00b8 07F59C43 		add	r3, r7, #19968
 878 00bc 03F12803 		add	r3, r3, #40
 879 00c0 4FF47A62 		mov	r2, #4000
 880 00c4 1946     		mov	r1, r3
 881 00c6 2548     		ldr	r0, .L74
 882 00c8 FFF7FEFF 		bl	Read_SD_Closed_File
 337:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 883              		.loc 1 337 0
 884 00cc FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 338:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 885              		.loc 1 338 0
 886 00d0 07F59C43 		add	r3, r7, #19968
 887 00d4 03F12803 		add	r3, r3, #40
 888 00d8 1846     		mov	r0, r3
 889 00da FFF7FEFF 		bl	UART_RS485_PutString
 339:..\src/command_processing.c ****             break;
 890              		.loc 1 339 0
 891 00de 37E0     		b	.L72
 892              	.L68:
 340:..\src/command_processing.c ****         case GET_SD_DATA:
 341:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 893              		.loc 1 341 0
 894 00e0 07F14803 		add	r3, r7, #72
 895 00e4 403B     		subs	r3, r3, #64
 896 00e6 44F62061 		movw	r1, #20000
 897 00ea 1846     		mov	r0, r3
 898 00ec FFF7FEFF 		bl	Read_SD_Current_Data
 342:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 899              		.loc 1 342 0
 900 00f0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 343:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 901              		.loc 1 343 0
 902 00f4 07F14803 		add	r3, r7, #72
 903 00f8 403B     		subs	r3, r3, #64
 904 00fa 1846     		mov	r0, r3
 905 00fc FFF7FEFF 		bl	UART_RS485_PutString
 344:..\src/command_processing.c ****             break;
 906              		.loc 1 344 0
 907 0100 26E0     		b	.L72
 908              	.L69:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 37


 345:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 346:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 909              		.loc 1 346 0
 910 0102 07F14803 		add	r3, r7, #72
 911 0106 403B     		subs	r3, r3, #64
 912 0108 1846     		mov	r0, r3
 913 010a FFF7FEFF 		bl	Get_SD_FS
 347:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 914              		.loc 1 347 0
 915 010e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 348:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 916              		.loc 1 348 0
 917 0112 07F14803 		add	r3, r7, #72
 918 0116 403B     		subs	r3, r3, #64
 919 0118 1846     		mov	r0, r3
 920 011a FFF7FEFF 		bl	UART_RS485_PutString
 349:..\src/command_processing.c ****             break;
 921              		.loc 1 349 0
 922 011e 17E0     		b	.L72
 923              	.L70:
 350:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 351:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 352:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 924              		.loc 1 352 0
 925 0120 FFF7FEFF 		bl	Read_SD_EMG_History_Data
 353:..\src/command_processing.c ****             break;
 926              		.loc 1 353 0
 927 0124 14E0     		b	.L72
 928              	.L71:
 354:..\src/command_processing.c ****         case GET_SD_R01_SUMM:
 355:..\src/command_processing.c ****             Read_SD_Closed_File(sdR01File, packet_string, sizeof(packet_string));
 929              		.loc 1 355 0
 930 0126 07F59C43 		add	r3, r7, #19968
 931 012a 03F12803 		add	r3, r3, #40
 932 012e 4FF47A62 		mov	r2, #4000
 933 0132 1946     		mov	r1, r3
 934 0134 0A48     		ldr	r0, .L74+4
 935 0136 FFF7FEFF 		bl	Read_SD_Closed_File
 356:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 936              		.loc 1 356 0
 937 013a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 357:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 938              		.loc 1 357 0
 939 013e 07F59C43 		add	r3, r7, #19968
 940 0142 03F12803 		add	r3, r3, #40
 941 0146 1846     		mov	r0, r3
 942 0148 FFF7FEFF 		bl	UART_RS485_PutString
 358:..\src/command_processing.c ****             break;            
 943              		.loc 1 358 0
 944 014c 00E0     		b	.L72
 945              	.L73:
 359:..\src/command_processing.c ****         default:
 360:..\src/command_processing.c ****             break;
 946              		.loc 1 360 0
 947 014e 00BF     		nop
 948              	.L72:
 361:..\src/command_processing.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 38


 362:..\src/command_processing.c **** }
 949              		.loc 1 362 0 discriminator 1
 950 0150 00BF     		nop
 951 0152 07F5BB47 		add	r7, r7, #23936
 952 0156 4837     		adds	r7, r7, #72
 953              		.cfi_def_cfa_offset 8
 954 0158 BD46     		mov	sp, r7
 955              		.cfi_def_cfa_register 13
 956              		@ sp needed
 957 015a 80BD     		pop	{r7, pc}
 958              	.L75:
 959              		.align	2
 960              	.L74:
 961 015c 00000000 		.word	sdParam
 962 0160 00000000 		.word	sdR01File
 963              		.cfi_endproc
 964              	.LFE67:
 965              		.size	infoGet, .-infoGet
 966              		.section	.rodata
 967              		.align	2
 968              	.LC8:
 969 0000 00       		.ascii	"\000"
 970 0001 000000   		.align	2
 971              	.LC14:
 972 0004 202D2000 		.ascii	" - \000"
 973              		.align	2
 974              	.LC15:
 975 0008 54686520 		.ascii	"The board will reset\012\000"
 975      626F6172 
 975      64207769 
 975      6C6C2072 
 975      65736574 
 976 001e 0000     		.align	2
 977              	.LC16:
 978 0020 202D3E20 		.ascii	" -> \000"
 978      00
 979 0025 000000   		.align	2
 980              	.LC17:
 981 0028 0A00     		.ascii	"\012\000"
 982              		.section	.text.get_param_list,"ax",%progbits
 983              		.align	2
 984              		.global	get_param_list
 985              		.thumb
 986              		.thumb_func
 987              		.type	get_param_list, %function
 988              	get_param_list:
 989              	.LFB68:
 363:..\src/command_processing.c **** 
 364:..\src/command_processing.c **** 
 365:..\src/command_processing.c **** //==============================================================================
 366:..\src/command_processing.c **** //                                                                GET PARAM LIST
 367:..\src/command_processing.c **** //==============================================================================
 368:..\src/command_processing.c **** 
 369:..\src/command_processing.c **** void get_param_list ( uint8 num_params, uint8 num_menus, const struct parameter PARAM_LIST[], const
 990              		.loc 1 369 0
 991              		.cfi_startproc
 992              		@ args = 4, pretend = 0, frame = 608
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 39


 993              		@ frame_needed = 1, uses_anonymous_args = 0
 994 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 995              		.cfi_def_cfa_offset 28
 996              		.cfi_offset 4, -28
 997              		.cfi_offset 5, -24
 998              		.cfi_offset 6, -20
 999              		.cfi_offset 7, -16
 1000              		.cfi_offset 8, -12
 1001              		.cfi_offset 9, -8
 1002              		.cfi_offset 14, -4
 1003 0004 ADF5197D 		sub	sp, sp, #612
 1004              		.cfi_def_cfa_offset 640
 1005 0008 00AF     		add	r7, sp, #0
 1006              		.cfi_def_cfa_register 7
 1007 000a 0646     		mov	r6, r0
 1008 000c 0846     		mov	r0, r1
 1009 000e 07F10801 		add	r1, r7, #8
 1010 0012 0A60     		str	r2, [r1]
 1011 0014 3A1D     		adds	r2, r7, #4
 1012 0016 1360     		str	r3, [r2]
 1013 0018 07F10F03 		add	r3, r7, #15
 1014 001c 3246     		mov	r2, r6
 1015 001e 1A70     		strb	r2, [r3]
 1016 0020 07F10E03 		add	r3, r7, #14
 1017 0024 0246     		mov	r2, r0
 1018 0026 1A70     		strb	r2, [r3]
 1019              		.loc 1 369 0
 1020 0028 6B46     		mov	r3, sp
 1021 002a 1E46     		mov	r6, r3
 370:..\src/command_processing.c ****     
 371:..\src/command_processing.c ****     uint8 CYDATA idx = 0;      
 1022              		.loc 1 371 0
 1023 002c 0023     		movs	r3, #0
 1024 002e 87F85F32 		strb	r3, [r7, #607]
 372:..\src/command_processing.c ****     uint8* m_addr = (uint8*)PARAM_LIST[0].VAR_P;
 1025              		.loc 1 372 0
 1026 0032 07F10803 		add	r3, r7, #8
 1027 0036 1B68     		ldr	r3, [r3]
 1028 0038 1B68     		ldr	r3, [r3]
 1029 003a C7F85032 		str	r3, [r7, #592]
 373:..\src/command_processing.c ****     uint8 CYDATA string_length;
 374:..\src/command_processing.c ****     char CYDATA aux_str[250] = "";
 1030              		.loc 1 374 0
 1031 003e 07F5A473 		add	r3, r7, #328
 1032 0042 0022     		movs	r2, #0
 1033 0044 1A60     		str	r2, [r3]
 1034 0046 0433     		adds	r3, r3, #4
 1035 0048 F622     		movs	r2, #246
 1036 004a 0021     		movs	r1, #0
 1037 004c 1846     		mov	r0, r3
 1038 004e FFF7FEFF 		bl	memset
 375:..\src/command_processing.c ****     char CYDATA aux_str1[250] = ""; 
 1039              		.loc 1 375 0
 1040 0052 07F14C03 		add	r3, r7, #76
 1041 0056 0022     		movs	r2, #0
 1042 0058 1A60     		str	r2, [r3]
 1043 005a 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 40


 1044 005c F622     		movs	r2, #246
 1045 005e 0021     		movs	r1, #0
 1046 0060 1846     		mov	r0, r3
 1047 0062 FFF7FEFF 		bl	memset
 376:..\src/command_processing.c ****     
 377:..\src/command_processing.c ****     int32 aux_int32;
 378:..\src/command_processing.c ****     uint8 i, j;
 379:..\src/command_processing.c ****     uint8 count;
 380:..\src/command_processing.c ****     char aux_char[50];
 381:..\src/command_processing.c ****     
 382:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT*num_params + PARAM_MENU_SLOT*num_menus + PARAM_BYTE_SLOT
 1048              		.loc 1 382 0
 1049 0066 07F10F03 		add	r3, r7, #15
 1050 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1051 006c 9BB2     		uxth	r3, r3
 1052 006e 1A46     		mov	r2, r3	@ movhi
 1053 0070 9200     		lsls	r2, r2, #2
 1054 0072 1344     		add	r3, r3, r2
 1055 0074 1A46     		mov	r2, r3	@ movhi
 1056 0076 9100     		lsls	r1, r2, #2
 1057 0078 1A46     		mov	r2, r3	@ movhi
 1058 007a 0B46     		mov	r3, r1	@ movhi
 1059 007c 1344     		add	r3, r3, r2
 1060 007e 5B00     		lsls	r3, r3, #1
 1061 0080 9AB2     		uxth	r2, r3
 1062 0082 07F10E03 		add	r3, r7, #14
 1063 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1064 0088 9BB2     		uxth	r3, r3
 1065 008a 1946     		mov	r1, r3	@ movhi
 1066 008c 8900     		lsls	r1, r1, #2
 1067 008e 0B44     		add	r3, r3, r1
 1068 0090 1946     		mov	r1, r3	@ movhi
 1069 0092 0901     		lsls	r1, r1, #4
 1070 0094 CB1A     		subs	r3, r1, r3
 1071 0096 5B00     		lsls	r3, r3, #1
 1072 0098 9BB2     		uxth	r3, r3
 1073 009a 1344     		add	r3, r3, r2
 1074 009c 9BB2     		uxth	r3, r3
 1075 009e 3233     		adds	r3, r3, #50
 1076 00a0 A7F84E32 		strh	r3, [r7, #590]	@ movhi
 383:..\src/command_processing.c ****     uint8 packet_data[packet_length];
 1077              		.loc 1 383 0
 1078 00a4 B7F84E12 		ldrh	r1, [r7, #590]
 1079 00a8 0B46     		mov	r3, r1
 1080 00aa 013B     		subs	r3, r3, #1
 1081 00ac C7F84832 		str	r3, [r7, #584]
 1082 00b0 8AB2     		uxth	r2, r1
 1083 00b2 4FF00003 		mov	r3, #0
 1084 00b6 4FEAC309 		lsl	r9, r3, #3
 1085 00ba 49EA5279 		orr	r9, r9, r2, lsr #29
 1086 00be 4FEAC208 		lsl	r8, r2, #3
 1087 00c2 8AB2     		uxth	r2, r1
 1088 00c4 4FF00003 		mov	r3, #0
 1089 00c8 DD00     		lsls	r5, r3, #3
 1090 00ca 45EA5275 		orr	r5, r5, r2, lsr #29
 1091 00ce D400     		lsls	r4, r2, #3
 1092 00d0 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 41


 1093 00d2 0733     		adds	r3, r3, #7
 1094 00d4 DB08     		lsrs	r3, r3, #3
 1095 00d6 DB00     		lsls	r3, r3, #3
 1096 00d8 ADEB030D 		sub	sp, sp, r3
 1097 00dc 6B46     		mov	r3, sp
 1098 00de 0033     		adds	r3, r3, #0
 1099 00e0 C7F84432 		str	r3, [r7, #580]
 1100              	.LBB22:
 384:..\src/command_processing.c ****     for (int ii = 0; ii < packet_length; ii++) packet_data[ii] = 0;
 1101              		.loc 1 384 0
 1102 00e4 0023     		movs	r3, #0
 1103 00e6 C7F85432 		str	r3, [r7, #596]
 1104 00ea 0BE0     		b	.L77
 1105              	.L78:
 1106              		.loc 1 384 0 is_stmt 0 discriminator 3
 1107 00ec D7F84422 		ldr	r2, [r7, #580]
 1108 00f0 D7F85432 		ldr	r3, [r7, #596]
 1109 00f4 1344     		add	r3, r3, r2
 1110 00f6 0022     		movs	r2, #0
 1111 00f8 1A70     		strb	r2, [r3]
 1112 00fa D7F85432 		ldr	r3, [r7, #596]
 1113 00fe 0133     		adds	r3, r3, #1
 1114 0100 C7F85432 		str	r3, [r7, #596]
 1115              	.L77:
 1116              		.loc 1 384 0 discriminator 1
 1117 0104 B7F84E22 		ldrh	r2, [r7, #590]
 1118 0108 D7F85432 		ldr	r3, [r7, #596]
 1119 010c 9A42     		cmp	r2, r3
 1120 010e EDDC     		bgt	.L78
 1121              	.LBE22:
 385:..\src/command_processing.c **** 
 386:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1122              		.loc 1 386 0 is_stmt 1
 1123 0110 D7F84432 		ldr	r3, [r7, #580]
 1124 0114 0C22     		movs	r2, #12
 1125 0116 1A70     		strb	r2, [r3]
 387:..\src/command_processing.c ****     packet_data[1] = num_params;
 1126              		.loc 1 387 0
 1127 0118 D7F84432 		ldr	r3, [r7, #580]
 1128 011c 07F10F02 		add	r2, r7, #15
 1129 0120 1278     		ldrb	r2, [r2]
 1130 0122 5A70     		strb	r2, [r3, #1]
 388:..\src/command_processing.c ****     
 389:..\src/command_processing.c ****     for (idx = 0; idx < num_params; idx ++) {
 1131              		.loc 1 389 0
 1132 0124 0023     		movs	r3, #0
 1133 0126 87F85F32 		strb	r3, [r7, #607]
 1134 012a 44E2     		b	.L79
 1135              	.L102:
 1136              	.LBB23:
 390:..\src/command_processing.c ****         m_addr = (uint8*)PARAM_LIST[idx].VAR_P;
 1137              		.loc 1 390 0
 1138 012c 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1139 0130 1B01     		lsls	r3, r3, #4
 1140 0132 07F10802 		add	r2, r7, #8
 1141 0136 1268     		ldr	r2, [r2]
 1142 0138 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 42


 1143 013a 1B68     		ldr	r3, [r3]
 1144 013c C7F85032 		str	r3, [r7, #592]
 391:..\src/command_processing.c ****         uint8 sod = num_of_bytes(PARAM_LIST[idx].TYPES);
 1145              		.loc 1 391 0
 1146 0140 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1147 0144 1B01     		lsls	r3, r3, #4
 1148 0146 07F10802 		add	r2, r7, #8
 1149 014a 1268     		ldr	r2, [r2]
 1150 014c 1344     		add	r3, r3, r2
 1151 014e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1152 0150 1846     		mov	r0, r3
 1153 0152 FFF7FEFF 		bl	num_of_bytes
 1154 0156 0346     		mov	r3, r0
 1155 0158 87F84332 		strb	r3, [r7, #579]
 392:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = PARAM_LIST[idx].TYPES;
 1156              		.loc 1 392 0
 1157 015c 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1158 0160 3222     		movs	r2, #50
 1159 0162 02FB03F3 		mul	r3, r2, r3
 1160 0166 0233     		adds	r3, r3, #2
 1161 0168 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1162 016c 1201     		lsls	r2, r2, #4
 1163 016e 07F10801 		add	r1, r7, #8
 1164 0172 0968     		ldr	r1, [r1]
 1165 0174 0A44     		add	r2, r2, r1
 1166 0176 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
 1167 0178 D7F84422 		ldr	r2, [r7, #580]
 1168 017c D154     		strb	r1, [r2, r3]
 393:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = PARAM_LIST[idx].NUM_ITEMS;        
 1169              		.loc 1 393 0
 1170 017e 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1171 0182 3222     		movs	r2, #50
 1172 0184 02FB03F3 		mul	r3, r2, r3
 1173 0188 0333     		adds	r3, r3, #3
 1174 018a 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1175 018e 1201     		lsls	r2, r2, #4
 1176 0190 07F10801 		add	r1, r7, #8
 1177 0194 0968     		ldr	r1, [r1]
 1178 0196 0A44     		add	r2, r2, r1
 1179 0198 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1180 019a D7F84422 		ldr	r2, [r7, #580]
 1181 019e D154     		strb	r1, [r2, r3]
 394:..\src/command_processing.c **** 
 395:..\src/command_processing.c **** 
 396:..\src/command_processing.c ****     switch(PARAM_LIST[idx].custom){
 1182              		.loc 1 396 0
 1183 01a0 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1184 01a4 1B01     		lsls	r3, r3, #4
 1185 01a6 07F10802 		add	r2, r7, #8
 1186 01aa 1268     		ldr	r2, [r2]
 1187 01ac 1344     		add	r3, r3, r2
 1188 01ae 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1189 01b0 052B     		cmp	r3, #5
 1190 01b2 61D1     		bne	.L113
 397:..\src/command_processing.c **** 
 398:..\src/command_processing.c ****         case CUSTOM_POS_LIM:        //Position limits
 399:..\src/command_processing.c ****             aux_int32 = (c_mem.SH_config.pos_lim_inf >> c_mem.SH_config.res);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 43


 1191              		.loc 1 399 0
 1192 01b4 B74B     		ldr	r3, .L114
 1193 01b6 1B6A     		ldr	r3, [r3, #32]
 1194 01b8 B64A     		ldr	r2, .L114
 1195 01ba 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 1196 01be 43FA02F2 		asr	r2, r3, r2
 1197 01c2 07F14803 		add	r3, r7, #72
 1198 01c6 1A60     		str	r2, [r3]
 400:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1199              		.loc 1 400 0
 1200 01c8 0023     		movs	r3, #0
 1201 01ca 87F85C32 		strb	r3, [r7, #604]
 1202 01ce 1AE0     		b	.L82
 1203              	.L83:
 401:..\src/command_processing.c ****                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int32))[j];
 1204              		.loc 1 401 0 discriminator 3
 1205 01d0 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1206 01d4 3222     		movs	r2, #50
 1207 01d6 02FB03F3 		mul	r3, r2, r3
 1208 01da 1A1D     		adds	r2, r3, #4
 1209 01dc 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1210 01e0 1A44     		add	r2, r2, r3
 1211 01e2 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1212 01e6 D31A     		subs	r3, r2, r3
 1213 01e8 013B     		subs	r3, r3, #1
 1214 01ea 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1215 01ee 07F14801 		add	r1, r7, #72
 1216 01f2 0A44     		add	r2, r2, r1
 1217 01f4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1218 01f6 D7F84422 		ldr	r2, [r7, #580]
 1219 01fa D154     		strb	r1, [r2, r3]
 400:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1220              		.loc 1 400 0 discriminator 3
 1221 01fc 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1222 0200 0133     		adds	r3, r3, #1
 1223 0202 87F85C32 		strb	r3, [r7, #604]
 1224              	.L82:
 400:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1225              		.loc 1 400 0 is_stmt 0 discriminator 1
 1226 0206 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1227 020a 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1228 020e 9A42     		cmp	r2, r3
 1229 0210 DED3     		bcc	.L83
 402:..\src/command_processing.c ****             }
 403:..\src/command_processing.c ****             aux_int32 = (c_mem.SH_config.pos_lim_sup >> c_mem.SH_config.res);
 1230              		.loc 1 403 0 is_stmt 1
 1231 0212 A04B     		ldr	r3, .L114
 1232 0214 5B6A     		ldr	r3, [r3, #36]
 1233 0216 9F4A     		ldr	r2, .L114
 1234 0218 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 1235 021c 43FA02F2 		asr	r2, r3, r2
 1236 0220 07F14803 		add	r3, r7, #72
 1237 0224 1A60     		str	r2, [r3]
 404:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1238              		.loc 1 404 0
 1239 0226 0023     		movs	r3, #0
 1240 0228 87F85C32 		strb	r3, [r7, #604]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 44


 1241 022c 1DE0     		b	.L84
 1242              	.L85:
 405:..\src/command_processing.c ****                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&aux_int32))[j
 1243              		.loc 1 405 0 discriminator 3
 1244 022e 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1245 0232 3222     		movs	r2, #50
 1246 0234 02FB03F3 		mul	r3, r2, r3
 1247 0238 1A1D     		adds	r2, r3, #4
 1248 023a 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1249 023e 1A44     		add	r2, r2, r3
 1250 0240 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1251 0244 1A44     		add	r2, r2, r3
 1252 0246 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1253 024a D31A     		subs	r3, r2, r3
 1254 024c 013B     		subs	r3, r3, #1
 1255 024e 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1256 0252 07F14801 		add	r1, r7, #72
 1257 0256 0A44     		add	r2, r2, r1
 1258 0258 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1259 025a D7F84422 		ldr	r2, [r7, #580]
 1260 025e D154     		strb	r1, [r2, r3]
 404:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1261              		.loc 1 404 0 discriminator 3
 1262 0260 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1263 0264 0133     		adds	r3, r3, #1
 1264 0266 87F85C32 		strb	r3, [r7, #604]
 1265              	.L84:
 404:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1266              		.loc 1 404 0 is_stmt 0 discriminator 1
 1267 026a 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1268 026e 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1269 0272 9A42     		cmp	r2, r3
 1270 0274 DBD3     		bcc	.L85
 406:..\src/command_processing.c ****             }
 407:..\src/command_processing.c ****             break;            
 1271              		.loc 1 407 0 is_stmt 1
 1272 0276 48E0     		b	.L86
 1273              	.L113:
 408:..\src/command_processing.c ****             
 409:..\src/command_processing.c **** 
 410:..\src/command_processing.c ****         case 0:  // Not custom parameter
 411:..\src/command_processing.c ****         default: // Parameters that are only custom for SET
 412:..\src/command_processing.c ****             for (i = 0; i < PARAM_LIST[idx].NUM_ITEMS * sod; i+=sod){
 1274              		.loc 1 412 0
 1275 0278 0023     		movs	r3, #0
 1276 027a 87F85D32 		strb	r3, [r7, #605]
 1277 027e 32E0     		b	.L87
 1278              	.L90:
 413:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1279              		.loc 1 413 0
 1280 0280 0023     		movs	r3, #0
 1281 0282 87F85C32 		strb	r3, [r7, #604]
 1282 0286 21E0     		b	.L88
 1283              	.L89:
 414:..\src/command_processing.c ****                     packet_data[(4 + PARAM_BYTE_SLOT*idx + i) + sod - j -1] = m_addr[i+j];
 1284              		.loc 1 414 0 discriminator 3
 1285 0288 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 45


 1286 028c 3222     		movs	r2, #50
 1287 028e 02FB03F3 		mul	r3, r2, r3
 1288 0292 1A1D     		adds	r2, r3, #4
 1289 0294 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1290 0298 1A44     		add	r2, r2, r3
 1291 029a 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1292 029e 1A44     		add	r2, r2, r3
 1293 02a0 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1294 02a4 D31A     		subs	r3, r2, r3
 1295 02a6 013B     		subs	r3, r3, #1
 1296 02a8 97F85D12 		ldrb	r1, [r7, #605]	@ zero_extendqisi2
 1297 02ac 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1298 02b0 0A44     		add	r2, r2, r1
 1299 02b2 1146     		mov	r1, r2
 1300 02b4 D7F85022 		ldr	r2, [r7, #592]
 1301 02b8 0A44     		add	r2, r2, r1
 1302 02ba 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1303 02bc D7F84422 		ldr	r2, [r7, #580]
 1304 02c0 D154     		strb	r1, [r2, r3]
 413:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1305              		.loc 1 413 0 discriminator 3
 1306 02c2 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1307 02c6 0133     		adds	r3, r3, #1
 1308 02c8 87F85C32 		strb	r3, [r7, #604]
 1309              	.L88:
 413:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1310              		.loc 1 413 0 is_stmt 0 discriminator 1
 1311 02cc 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1312 02d0 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1313 02d4 9A42     		cmp	r2, r3
 1314 02d6 D7D3     		bcc	.L89
 412:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1315              		.loc 1 412 0 is_stmt 1 discriminator 2
 1316 02d8 97F85D22 		ldrb	r2, [r7, #605]
 1317 02dc 97F84332 		ldrb	r3, [r7, #579]
 1318 02e0 1344     		add	r3, r3, r2
 1319 02e2 87F85D32 		strb	r3, [r7, #605]
 1320              	.L87:
 412:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1321              		.loc 1 412 0 is_stmt 0 discriminator 1
 1322 02e6 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1323 02ea 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1324 02ee 1B01     		lsls	r3, r3, #4
 1325 02f0 07F10801 		add	r1, r7, #8
 1326 02f4 0968     		ldr	r1, [r1]
 1327 02f6 0B44     		add	r3, r3, r1
 1328 02f8 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1329 02fa 1946     		mov	r1, r3
 1330 02fc 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1331 0300 03FB01F3 		mul	r3, r3, r1
 1332 0304 9A42     		cmp	r2, r3
 1333 0306 BBDB     		blt	.L90
 415:..\src/command_processing.c ****                 }
 416:..\src/command_processing.c ****             }
 417:..\src/command_processing.c ****             break;
 1334              		.loc 1 417 0 is_stmt 1
 1335 0308 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 46


 1336              	.L86:
 418:..\src/command_processing.c ****     }
 419:..\src/command_processing.c ****        
 420:..\src/command_processing.c ****         sprintf(aux_str,"");
 1337              		.loc 1 420 0
 1338 030a 634B     		ldr	r3, .L114+4
 1339 030c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1340 030e 07F5A473 		add	r3, r7, #328
 1341 0312 1A70     		strb	r2, [r3]
 421:..\src/command_processing.c ****         itoa(idx + 1, aux_char, 10);
 1342              		.loc 1 421 0
 1343 0314 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1344 0318 0133     		adds	r3, r3, #1
 1345 031a 07F11401 		add	r1, r7, #20
 1346 031e 0A22     		movs	r2, #10
 1347 0320 1846     		mov	r0, r3
 1348 0322 FFF7FEFF 		bl	itoa
 422:..\src/command_processing.c ****         strcat(aux_str ,aux_char);
 1349              		.loc 1 422 0
 1350 0326 07F11402 		add	r2, r7, #20
 1351 032a 07F5A473 		add	r3, r7, #328
 1352 032e 1146     		mov	r1, r2
 1353 0330 1846     		mov	r0, r3
 1354 0332 FFF7FEFF 		bl	strcat
 423:..\src/command_processing.c ****         strcat(aux_str," - ");
 1355              		.loc 1 423 0
 1356 0336 07F5A473 		add	r3, r7, #328
 1357 033a 1846     		mov	r0, r3
 1358 033c FFF7FEFF 		bl	strlen
 1359 0340 0346     		mov	r3, r0
 1360 0342 1A46     		mov	r2, r3
 1361 0344 07F5A473 		add	r3, r7, #328
 1362 0348 1344     		add	r3, r3, r2
 1363 034a 544A     		ldr	r2, .L114+8
 1364 034c 1068     		ldr	r0, [r2]	@ unaligned
 1365 034e 1860     		str	r0, [r3]	@ unaligned
 424:..\src/command_processing.c ****         strcat(aux_str,(char*)PARAM_LIST[idx].PARAM_STR);                
 1366              		.loc 1 424 0
 1367 0350 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1368 0354 1B01     		lsls	r3, r3, #4
 1369 0356 07F10802 		add	r2, r7, #8
 1370 035a 1268     		ldr	r2, [r2]
 1371 035c 1344     		add	r3, r3, r2
 1372 035e 9A68     		ldr	r2, [r3, #8]
 1373 0360 07F5A473 		add	r3, r7, #328
 1374 0364 1146     		mov	r1, r2
 1375 0366 1846     		mov	r0, r3
 1376 0368 FFF7FEFF 		bl	strcat
 425:..\src/command_processing.c ****         string_length = strlen(aux_str);
 1377              		.loc 1 425 0
 1378 036c 07F5A473 		add	r3, r7, #328
 1379 0370 1846     		mov	r0, r3
 1380 0372 FFF7FEFF 		bl	strlen
 1381 0376 0346     		mov	r3, r0
 1382 0378 87F85E32 		strb	r3, [r7, #606]
 426:..\src/command_processing.c ****         
 427:..\src/command_processing.c ****         // Parameters with a menu
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 47


 428:..\src/command_processing.c ****         if (PARAM_LIST[idx].MENU != 0){
 1383              		.loc 1 428 0
 1384 037c 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1385 0380 1B01     		lsls	r3, r3, #4
 1386 0382 07F10802 		add	r2, r7, #8
 1387 0386 1268     		ldr	r2, [r2]
 1388 0388 1344     		add	r3, r3, r2
 1389 038a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1390 038c 002B     		cmp	r3, #0
 1391 038e 40D0     		beq	.L91
 429:..\src/command_processing.c ****             for (i = 0; i < num_menus ; i++){
 1392              		.loc 1 429 0
 1393 0390 0023     		movs	r3, #0
 1394 0392 87F85D32 		strb	r3, [r7, #605]
 1395 0396 35E0     		b	.L92
 1396              	.L94:
 430:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1397              		.loc 1 430 0
 1398 0398 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1399 039c 2C22     		movs	r2, #44
 1400 039e 02FB03F3 		mul	r3, r2, r3
 1401 03a2 3A1D     		adds	r2, r7, #4
 1402 03a4 1268     		ldr	r2, [r2]
 1403 03a6 1344     		add	r3, r3, r2
 1404 03a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1405 03aa 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1406 03ae 1B01     		lsls	r3, r3, #4
 1407 03b0 07F10801 		add	r1, r7, #8
 1408 03b4 0968     		ldr	r1, [r1]
 1409 03b6 0B44     		add	r3, r3, r1
 1410 03b8 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1411 03ba 9A42     		cmp	r2, r3
 1412 03bc 13D1     		bne	.L93
 431:..\src/command_processing.c ****                 strcat(aux_str, MENU_LIST[i].choice[*m_addr]);
 1413              		.loc 1 431 0
 1414 03be 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1415 03c2 2C22     		movs	r2, #44
 1416 03c4 02FB03F3 		mul	r3, r2, r3
 1417 03c8 3A1D     		adds	r2, r7, #4
 1418 03ca 1268     		ldr	r2, [r2]
 1419 03cc 1A44     		add	r2, r2, r3
 1420 03ce D7F85032 		ldr	r3, [r7, #592]
 1421 03d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 03d4 9B00     		lsls	r3, r3, #2
 1423 03d6 1344     		add	r3, r3, r2
 1424 03d8 5A68     		ldr	r2, [r3, #4]
 1425 03da 07F5A473 		add	r3, r7, #328
 1426 03de 1146     		mov	r1, r2
 1427 03e0 1846     		mov	r0, r3
 1428 03e2 FFF7FEFF 		bl	strcat
 1429              	.L93:
 432:..\src/command_processing.c ****                 }              
 433:..\src/command_processing.c ****             //Recomputes string length
 434:..\src/command_processing.c ****             string_length = strlen(aux_str)+1;
 1430              		.loc 1 434 0 discriminator 2
 1431 03e6 07F5A473 		add	r3, r7, #328
 1432 03ea 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 48


 1433 03ec FFF7FEFF 		bl	strlen
 1434 03f0 0346     		mov	r3, r0
 1435 03f2 DBB2     		uxtb	r3, r3
 1436 03f4 0133     		adds	r3, r3, #1
 1437 03f6 87F85E32 		strb	r3, [r7, #606]
 429:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1438              		.loc 1 429 0 discriminator 2
 1439 03fa 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1440 03fe 0133     		adds	r3, r3, #1
 1441 0400 87F85D32 		strb	r3, [r7, #605]
 1442              	.L92:
 429:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1443              		.loc 1 429 0 is_stmt 0 discriminator 1
 1444 0404 07F10E03 		add	r3, r7, #14
 1445 0408 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1446 040c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 040e 9A42     		cmp	r2, r3
 1448 0410 C2D3     		bcc	.L94
 1449              	.L91:
 435:..\src/command_processing.c ****             }
 436:..\src/command_processing.c ****         }
 437:..\src/command_processing.c **** 
 438:..\src/command_processing.c ****         // Add parameter string to packet
 439:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 1450              		.loc 1 439 0 is_stmt 1
 1451 0412 97F85E32 		ldrb	r3, [r7, #606]
 1452 0416 87F85D32 		strb	r3, [r7, #605]
 1453 041a 28E0     		b	.L95
 1454              	.L96:
 440:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1455              		.loc 1 440 0 discriminator 3
 1456 041c 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1457 0420 3222     		movs	r2, #50
 1458 0422 02FB03F3 		mul	r3, r2, r3
 1459 0426 1A1D     		adds	r2, r3, #4
 1460 0428 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1461 042c 97F85F12 		ldrb	r1, [r7, #607]	@ zero_extendqisi2
 1462 0430 0901     		lsls	r1, r1, #4
 1463 0432 07F10800 		add	r0, r7, #8
 1464 0436 0068     		ldr	r0, [r0]
 1465 0438 0144     		add	r1, r1, r0
 1466 043a 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1467 043c 01FB03F3 		mul	r3, r1, r3
 1468 0440 1A44     		add	r2, r2, r3
 1469 0442 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1470 0446 1A44     		add	r2, r2, r3
 1471 0448 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1472 044c D31A     		subs	r3, r2, r3
 1473 044e 97F85E12 		ldrb	r1, [r7, #606]	@ zero_extendqisi2
 1474 0452 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1475 0456 8A1A     		subs	r2, r1, r2
 1476 0458 07F5A471 		add	r1, r7, #328
 1477 045c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1478 045e D7F84422 		ldr	r2, [r7, #580]
 1479 0462 D154     		strb	r1, [r2, r3]
 439:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1480              		.loc 1 439 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 49


 1481 0464 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1482 0468 013B     		subs	r3, r3, #1
 1483 046a 87F85D32 		strb	r3, [r7, #605]
 1484              	.L95:
 439:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1485              		.loc 1 439 0 is_stmt 0 discriminator 1
 1486 046e 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1487 0472 002B     		cmp	r3, #0
 1488 0474 D2D1     		bne	.L96
 441:..\src/command_processing.c ****         
 442:..\src/command_processing.c ****         
 443:..\src/command_processing.c ****         if (PARAM_LIST[idx].TYPES == TYPE_FLAG){
 1489              		.loc 1 443 0 is_stmt 1
 1490 0476 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1491 047a 1B01     		lsls	r3, r3, #4
 1492 047c 07F10802 		add	r2, r7, #8
 1493 0480 1268     		ldr	r2, [r2]
 1494 0482 1344     		add	r3, r3, r2
 1495 0484 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1496 0486 002B     		cmp	r3, #0
 1497 0488 6ED1     		bne	.L97
 444:..\src/command_processing.c ****             //Send the number of menus          
 445:..\src/command_processing.c ****             for (i = 0; i < num_menus ; i++){
 1498              		.loc 1 445 0
 1499 048a 0023     		movs	r3, #0
 1500 048c 87F85D32 		strb	r3, [r7, #605]
 1501 0490 40E0     		b	.L98
 1502              	.L115:
 1503 0492 00BF     		.align	2
 1504              	.L114:
 1505 0494 00000000 		.word	c_mem
 1506 0498 00000000 		.word	.LC8
 1507 049c 04000000 		.word	.LC14
 1508              	.L100:
 446:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1509              		.loc 1 446 0
 1510 04a0 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1511 04a4 2C22     		movs	r2, #44
 1512 04a6 02FB03F3 		mul	r3, r2, r3
 1513 04aa 3A1D     		adds	r2, r7, #4
 1514 04ac 1268     		ldr	r2, [r2]
 1515 04ae 1344     		add	r3, r3, r2
 1516 04b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1517 04b2 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1518 04b6 1B01     		lsls	r3, r3, #4
 1519 04b8 07F10801 		add	r1, r7, #8
 1520 04bc 0968     		ldr	r1, [r1]
 1521 04be 0B44     		add	r3, r3, r1
 1522 04c0 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1523 04c2 9A42     		cmp	r2, r3
 1524 04c4 21D1     		bne	.L99
 447:..\src/command_processing.c ****                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_le
 1525              		.loc 1 447 0
 1526 04c6 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1527 04ca 3222     		movs	r2, #50
 1528 04cc 02FB03F3 		mul	r3, r2, r3
 1529 04d0 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 50


 1530 04d2 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1531 04d6 97F85F12 		ldrb	r1, [r7, #607]	@ zero_extendqisi2
 1532 04da 0901     		lsls	r1, r1, #4
 1533 04dc 07F10800 		add	r0, r7, #8
 1534 04e0 0068     		ldr	r0, [r0]
 1535 04e2 0144     		add	r1, r1, r0
 1536 04e4 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1537 04e6 01FB03F3 		mul	r3, r1, r3
 1538 04ea 1A44     		add	r2, r2, r3
 1539 04ec 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1540 04f0 1344     		add	r3, r3, r2
 1541 04f2 97F85D22 		ldrb	r2, [r7, #605]
 1542 04f6 0132     		adds	r2, r2, #1
 1543 04f8 D1B2     		uxtb	r1, r2
 1544 04fa D7F84422 		ldr	r2, [r7, #580]
 1545 04fe D154     		strb	r1, [r2, r3]
 448:..\src/command_processing.c ****                 i = num_menus;}              
 1546              		.loc 1 448 0
 1547 0500 07F10E03 		add	r3, r7, #14
 1548 0504 1B78     		ldrb	r3, [r3]
 1549 0506 87F85D32 		strb	r3, [r7, #605]
 1550              	.L99:
 445:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1551              		.loc 1 445 0 discriminator 2
 1552 050a 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1553 050e 0133     		adds	r3, r3, #1
 1554 0510 87F85D32 		strb	r3, [r7, #605]
 1555              	.L98:
 445:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1556              		.loc 1 445 0 is_stmt 0 discriminator 1
 1557 0514 07F10E03 		add	r3, r7, #14
 1558 0518 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1559 051c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1560 051e 9A42     		cmp	r2, r3
 1561 0520 BED3     		bcc	.L100
 449:..\src/command_processing.c ****             }
 450:..\src/command_processing.c ****             // Add empty bit + struct number
 451:..\src/command_processing.c ****             // Note: added here at the end of packets is transparent to old parameters retrieving v
 452:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1562              		.loc 1 452 0 is_stmt 1
 1563 0522 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1564 0526 3222     		movs	r2, #50
 1565 0528 02FB03F3 		mul	r3, r2, r3
 1566 052c 1A1D     		adds	r2, r3, #4
 1567 052e 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1568 0532 97F85F12 		ldrb	r1, [r7, #607]	@ zero_extendqisi2
 1569 0536 0901     		lsls	r1, r1, #4
 1570 0538 07F10800 		add	r0, r7, #8
 1571 053c 0068     		ldr	r0, [r0]
 1572 053e 0144     		add	r1, r1, r0
 1573 0540 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1574 0542 01FB03F3 		mul	r3, r1, r3
 1575 0546 1A44     		add	r2, r2, r3
 1576 0548 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1577 054c 1344     		add	r3, r3, r2
 1578 054e 0233     		adds	r3, r3, #2
 1579 0550 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 51


 1580 0554 1201     		lsls	r2, r2, #4
 1581 0556 07F10801 		add	r1, r7, #8
 1582 055a 0968     		ldr	r1, [r1]
 1583 055c 0A44     		add	r2, r2, r1
 1584 055e 517B     		ldrb	r1, [r2, #13]	@ zero_extendqisi2
 1585 0560 D7F84422 		ldr	r2, [r7, #580]
 1586 0564 D154     		strb	r1, [r2, r3]
 1587 0566 21E0     		b	.L101
 1588              	.L97:
 453:..\src/command_processing.c ****         }
 454:..\src/command_processing.c ****         else {
 455:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1589              		.loc 1 455 0
 1590 0568 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1591 056c 3222     		movs	r2, #50
 1592 056e 02FB03F3 		mul	r3, r2, r3
 1593 0572 1A1D     		adds	r2, r3, #4
 1594 0574 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1595 0578 97F85F12 		ldrb	r1, [r7, #607]	@ zero_extendqisi2
 1596 057c 0901     		lsls	r1, r1, #4
 1597 057e 07F10800 		add	r0, r7, #8
 1598 0582 0068     		ldr	r0, [r0]
 1599 0584 0144     		add	r1, r1, r0
 1600 0586 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1601 0588 01FB03F3 		mul	r3, r1, r3
 1602 058c 1A44     		add	r2, r2, r3
 1603 058e 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1604 0592 1344     		add	r3, r3, r2
 1605 0594 0133     		adds	r3, r3, #1
 1606 0596 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1607 059a 1201     		lsls	r2, r2, #4
 1608 059c 07F10801 		add	r1, r7, #8
 1609 05a0 0968     		ldr	r1, [r1]
 1610 05a2 0A44     		add	r2, r2, r1
 1611 05a4 517B     		ldrb	r1, [r2, #13]	@ zero_extendqisi2
 1612 05a6 D7F84422 		ldr	r2, [r7, #580]
 1613 05aa D154     		strb	r1, [r2, r3]
 1614              	.L101:
 1615              	.LBE23:
 389:..\src/command_processing.c ****         m_addr = (uint8*)PARAM_LIST[idx].VAR_P;
 1616              		.loc 1 389 0 discriminator 2
 1617 05ac 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1618 05b0 0133     		adds	r3, r3, #1
 1619 05b2 87F85F32 		strb	r3, [r7, #607]
 1620              	.L79:
 389:..\src/command_processing.c ****         m_addr = (uint8*)PARAM_LIST[idx].VAR_P;
 1621              		.loc 1 389 0 is_stmt 0 discriminator 1
 1622 05b6 07F10F03 		add	r3, r7, #15
 1623 05ba 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1624 05be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1625 05c0 9A42     		cmp	r2, r3
 1626 05c2 FFF4B3AD 		bcc	.L102
 456:..\src/command_processing.c ****         }
 457:..\src/command_processing.c ****     }
 458:..\src/command_processing.c ****     
 459:..\src/command_processing.c ****     // Add menu
 460:..\src/command_processing.c ****     for (j = 0; j < num_menus; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 52


 1627              		.loc 1 460 0 is_stmt 1
 1628 05c6 0023     		movs	r3, #0
 1629 05c8 87F85C32 		strb	r3, [r7, #604]
 1630 05cc C0E0     		b	.L103
 1631              	.L111:
 461:..\src/command_processing.c ****         sprintf(aux_str1,"");
 1632              		.loc 1 461 0
 1633 05ce 774B     		ldr	r3, .L116
 1634 05d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1635 05d2 07F14C03 		add	r3, r7, #76
 1636 05d6 1A70     		strb	r2, [r3]
 462:..\src/command_processing.c ****         for (count = 0; count <10 ; count++){            
 1637              		.loc 1 462 0
 1638 05d8 0023     		movs	r3, #0
 1639 05da 87F85B32 		strb	r3, [r7, #603]
 1640 05de 7AE0     		b	.L104
 1641              	.L108:
 463:..\src/command_processing.c ****             if (!strcmp(MENU_LIST[j].choice[count],"")){
 1642              		.loc 1 463 0
 1643 05e0 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1644 05e4 2C22     		movs	r2, #44
 1645 05e6 02FB03F3 		mul	r3, r2, r3
 1646 05ea 3A1D     		adds	r2, r7, #4
 1647 05ec 1268     		ldr	r2, [r2]
 1648 05ee 1A44     		add	r2, r2, r3
 1649 05f0 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1650 05f4 9B00     		lsls	r3, r3, #2
 1651 05f6 1344     		add	r3, r3, r2
 1652 05f8 5B68     		ldr	r3, [r3, #4]
 1653 05fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1654 05fc 002B     		cmp	r3, #0
 1655 05fe 24D1     		bne	.L105
 464:..\src/command_processing.c ****                 if (MENU_LIST[j].reset == TRUE){
 1656              		.loc 1 464 0
 1657 0600 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1658 0604 2C22     		movs	r2, #44
 1659 0606 02FB03F3 		mul	r3, r2, r3
 1660 060a 3A1D     		adds	r2, r7, #4
 1661 060c 1268     		ldr	r2, [r2]
 1662 060e 1344     		add	r3, r3, r2
 1663 0610 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1664 0612 012B     		cmp	r3, #1
 1665 0614 15D1     		bne	.L106
 465:..\src/command_processing.c ****                     strcat(aux_str1,"The board will reset\n");
 1666              		.loc 1 465 0
 1667 0616 07F14C03 		add	r3, r7, #76
 1668 061a 1846     		mov	r0, r3
 1669 061c FFF7FEFF 		bl	strlen
 1670 0620 0346     		mov	r3, r0
 1671 0622 1A46     		mov	r2, r3
 1672 0624 07F14C03 		add	r3, r7, #76
 1673 0628 1344     		add	r3, r3, r2
 1674 062a 614A     		ldr	r2, .L116+4
 1675 062c 1D46     		mov	r5, r3
 1676 062e 1446     		mov	r4, r2
 1677 0630 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1678 0632 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 53


 1679 0634 6960     		str	r1, [r5, #4]	@ unaligned
 1680 0636 AA60     		str	r2, [r5, #8]	@ unaligned
 1681 0638 EB60     		str	r3, [r5, #12]	@ unaligned
 1682 063a 2068     		ldr	r0, [r4]	@ unaligned
 1683 063c 2861     		str	r0, [r5, #16]	@ unaligned
 1684 063e A388     		ldrh	r3, [r4, #4]	@ unaligned
 1685 0640 AB82     		strh	r3, [r5, #20]	@ unaligned
 1686              	.L106:
 466:..\src/command_processing.c ****                 }
 467:..\src/command_processing.c ****                 count = 10;
 1687              		.loc 1 467 0
 1688 0642 0A23     		movs	r3, #10
 1689 0644 87F85B32 		strb	r3, [r7, #603]
 1690 0648 40E0     		b	.L107
 1691              	.L105:
 468:..\src/command_processing.c ****             }            
 469:..\src/command_processing.c ****             else {
 470:..\src/command_processing.c ****                 itoa(count, aux_char, 10);
 1692              		.loc 1 470 0
 1693 064a 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1694 064e 07F11401 		add	r1, r7, #20
 1695 0652 0A22     		movs	r2, #10
 1696 0654 1846     		mov	r0, r3
 1697 0656 FFF7FEFF 		bl	itoa
 471:..\src/command_processing.c ****                 strcat(aux_str1,aux_char);
 1698              		.loc 1 471 0
 1699 065a 07F11402 		add	r2, r7, #20
 1700 065e 07F14C03 		add	r3, r7, #76
 1701 0662 1146     		mov	r1, r2
 1702 0664 1846     		mov	r0, r3
 1703 0666 FFF7FEFF 		bl	strcat
 472:..\src/command_processing.c ****                 strcat(aux_str1," -> ");
 1704              		.loc 1 472 0
 1705 066a 07F14C03 		add	r3, r7, #76
 1706 066e 1846     		mov	r0, r3
 1707 0670 FFF7FEFF 		bl	strlen
 1708 0674 0346     		mov	r3, r0
 1709 0676 1A46     		mov	r2, r3
 1710 0678 07F14C03 		add	r3, r7, #76
 1711 067c 1344     		add	r3, r3, r2
 1712 067e 4D4A     		ldr	r2, .L116+8
 1713 0680 1068     		ldr	r0, [r2]	@ unaligned
 1714 0682 1860     		str	r0, [r3]	@ unaligned
 1715 0684 1279     		ldrb	r2, [r2, #4]
 1716 0686 1A71     		strb	r2, [r3, #4]
 473:..\src/command_processing.c ****                 strcat(aux_str1,(char*)MENU_LIST[j].choice[count]);
 1717              		.loc 1 473 0
 1718 0688 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1719 068c 2C22     		movs	r2, #44
 1720 068e 02FB03F3 		mul	r3, r2, r3
 1721 0692 3A1D     		adds	r2, r7, #4
 1722 0694 1268     		ldr	r2, [r2]
 1723 0696 1A44     		add	r2, r2, r3
 1724 0698 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1725 069c 9B00     		lsls	r3, r3, #2
 1726 069e 1344     		add	r3, r3, r2
 1727 06a0 5A68     		ldr	r2, [r3, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 54


 1728 06a2 07F14C03 		add	r3, r7, #76
 1729 06a6 1146     		mov	r1, r2
 1730 06a8 1846     		mov	r0, r3
 1731 06aa FFF7FEFF 		bl	strcat
 474:..\src/command_processing.c ****                 strcat(aux_str1,"\n");
 1732              		.loc 1 474 0
 1733 06ae 07F14C03 		add	r3, r7, #76
 1734 06b2 1846     		mov	r0, r3
 1735 06b4 FFF7FEFF 		bl	strlen
 1736 06b8 0346     		mov	r3, r0
 1737 06ba 1A46     		mov	r2, r3
 1738 06bc 07F14C03 		add	r3, r7, #76
 1739 06c0 1344     		add	r3, r3, r2
 1740 06c2 3D49     		ldr	r1, .L116+12
 1741 06c4 1A46     		mov	r2, r3
 1742 06c6 0B46     		mov	r3, r1
 1743 06c8 1B88     		ldrh	r3, [r3]	@ unaligned
 1744 06ca 1380     		strh	r3, [r2]	@ unaligned
 1745              	.L107:
 462:..\src/command_processing.c ****             if (!strcmp(MENU_LIST[j].choice[count],"")){
 1746              		.loc 1 462 0 discriminator 2
 1747 06cc 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1748 06d0 0133     		adds	r3, r3, #1
 1749 06d2 87F85B32 		strb	r3, [r7, #603]
 1750              	.L104:
 462:..\src/command_processing.c ****             if (!strcmp(MENU_LIST[j].choice[count],"")){
 1751              		.loc 1 462 0 is_stmt 0 discriminator 1
 1752 06d6 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1753 06da 092B     		cmp	r3, #9
 1754 06dc 80D9     		bls	.L108
 475:..\src/command_processing.c ****             }    
 476:..\src/command_processing.c ****         }
 477:..\src/command_processing.c ****         string_length = strlen(aux_str1);
 1755              		.loc 1 477 0 is_stmt 1
 1756 06de 07F14C03 		add	r3, r7, #76
 1757 06e2 1846     		mov	r0, r3
 1758 06e4 FFF7FEFF 		bl	strlen
 1759 06e8 0346     		mov	r3, r0
 1760 06ea 87F85E32 		strb	r3, [r7, #606]
 478:..\src/command_processing.c ****         
 479:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 1761              		.loc 1 479 0
 1762 06ee 97F85E32 		ldrb	r3, [r7, #606]
 1763 06f2 87F85D32 		strb	r3, [r7, #605]
 1764 06f6 22E0     		b	.L109
 1765              	.L110:
 480:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*num_params + 2 + j*PARAM_MENU_SLOT + string_length - i] = aux_s
 1766              		.loc 1 480 0 discriminator 3
 1767 06f8 07F10F03 		add	r3, r7, #15
 1768 06fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1769 06fe 3222     		movs	r2, #50
 1770 0700 02FB03F3 		mul	r3, r2, r3
 1771 0704 9A1C     		adds	r2, r3, #2
 1772 0706 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1773 070a 9621     		movs	r1, #150
 1774 070c 01FB03F3 		mul	r3, r1, r3
 1775 0710 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 55


 1776 0712 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1777 0716 1A44     		add	r2, r2, r3
 1778 0718 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1779 071c D31A     		subs	r3, r2, r3
 1780 071e 97F85E12 		ldrb	r1, [r7, #606]	@ zero_extendqisi2
 1781 0722 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1782 0726 8A1A     		subs	r2, r1, r2
 1783 0728 07F14C01 		add	r1, r7, #76
 1784 072c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1785 072e D7F84422 		ldr	r2, [r7, #580]
 1786 0732 D154     		strb	r1, [r2, r3]
 479:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*num_params + 2 + j*PARAM_MENU_SLOT + string_length - i] = aux_s
 1787              		.loc 1 479 0 discriminator 3
 1788 0734 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1789 0738 013B     		subs	r3, r3, #1
 1790 073a 87F85D32 		strb	r3, [r7, #605]
 1791              	.L109:
 479:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*num_params + 2 + j*PARAM_MENU_SLOT + string_length - i] = aux_s
 1792              		.loc 1 479 0 is_stmt 0 discriminator 1
 1793 073e 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1794 0742 002B     		cmp	r3, #0
 1795 0744 D8D1     		bne	.L110
 460:..\src/command_processing.c ****         sprintf(aux_str1,"");
 1796              		.loc 1 460 0 is_stmt 1 discriminator 2
 1797 0746 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1798 074a 0133     		adds	r3, r3, #1
 1799 074c 87F85C32 		strb	r3, [r7, #604]
 1800              	.L103:
 460:..\src/command_processing.c ****         sprintf(aux_str1,"");
 1801              		.loc 1 460 0 is_stmt 0 discriminator 1
 1802 0750 07F10E03 		add	r3, r7, #14
 1803 0754 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1804 0758 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1805 075a 9A42     		cmp	r2, r3
 1806 075c FFF437AF 		bcc	.L111
 481:..\src/command_processing.c ****     }
 482:..\src/command_processing.c ****         
 483:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 1807              		.loc 1 483 0 is_stmt 1
 1808 0760 B7F84E32 		ldrh	r3, [r7, #590]
 1809 0764 5C1E     		subs	r4, r3, #1
 1810 0766 D7F84422 		ldr	r2, [r7, #580]
 1811 076a B7F84E32 		ldrh	r3, [r7, #590]	@ movhi
 1812 076e DBB2     		uxtb	r3, r3
 1813 0770 013B     		subs	r3, r3, #1
 1814 0772 DBB2     		uxtb	r3, r3
 1815 0774 1946     		mov	r1, r3
 1816 0776 1046     		mov	r0, r2
 1817 0778 FFF7FEFF 		bl	LCRChecksum
 1818 077c 0346     		mov	r3, r0
 1819 077e 1A46     		mov	r2, r3
 1820 0780 D7F84432 		ldr	r3, [r7, #580]
 1821 0784 1A55     		strb	r2, [r3, r4]
 484:..\src/command_processing.c ****     
 485:..\src/command_processing.c ****     if (sendToDevice)
 1822              		.loc 1 485 0
 1823 0786 97F88032 		ldrb	r3, [r7, #640]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 56


 1824 078a 002B     		cmp	r3, #0
 1825 078c 07D0     		beq	.L112
 486:..\src/command_processing.c ****     {commWrite(packet_data, packet_length);  
 1826              		.loc 1 486 0
 1827 078e D7F84432 		ldr	r3, [r7, #580]
 1828 0792 B7F84E22 		ldrh	r2, [r7, #590]
 1829 0796 1146     		mov	r1, r2
 1830 0798 1846     		mov	r0, r3
 1831 079a FFF7FEFF 		bl	commWrite
 1832              	.L112:
 1833 079e B546     		mov	sp, r6
 487:..\src/command_processing.c ****     }
 488:..\src/command_processing.c ****     else {
 489:..\src/command_processing.c ****        //Update pointer (Bad choice since pointing to dead variable in another function, to fix)
 490:..\src/command_processing.c ****       // longPkgP = (char*)&packet_data[0];
 491:..\src/command_processing.c ****       // longPkgSize = packet_length;
 492:..\src/command_processing.c ****     }
 493:..\src/command_processing.c **** }
 1834              		.loc 1 493 0
 1835 07a0 00BF     		nop
 1836 07a2 07F51977 		add	r7, r7, #612
 1837              		.cfi_def_cfa_offset 28
 1838 07a6 BD46     		mov	sp, r7
 1839              		.cfi_def_cfa_register 13
 1840              		@ sp needed
 1841 07a8 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1842              	.L117:
 1843              		.align	2
 1844              	.L116:
 1845 07ac 00000000 		.word	.LC8
 1846 07b0 08000000 		.word	.LC15
 1847 07b4 20000000 		.word	.LC16
 1848 07b8 28000000 		.word	.LC17
 1849              		.cfi_endproc
 1850              	.LFE68:
 1851              		.size	get_param_list, .-get_param_list
 1852              		.section	.rodata
 1853 002a 0000     		.align	2
 1854              	.LC19:
 1855 002c 44657669 		.ascii	"Device ID:\000"
 1855      63652049 
 1855      443A00
 1856 0037 00       		.align	2
 1857              	.LC20:
 1858 0038 454D4720 		.ascii	"EMG thresholds:\000"
 1858      74687265 
 1858      73686F6C 
 1858      64733A00 
 1859              		.align	2
 1860              	.LC21:
 1861 0048 454D4720 		.ascii	"EMG max values:\000"
 1861      6D617820 
 1861      76616C75 
 1861      65733A00 
 1862              		.align	2
 1863              	.LC22:
 1864 0058 454D4720 		.ascii	"EMG max speeds:\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 57


 1864      6D617820 
 1864      73706565 
 1864      64733A00 
 1865              		.align	2
 1866              	.LC23:
 1867 0068 454D4720 		.ascii	"EMG inversion:\000"
 1867      696E7665 
 1867      7273696F 
 1867      6E3A00
 1868 0077 00       		.align	2
 1869              	.LC24:
 1870 0078 4D617374 		.ascii	"Master Mode:\000"
 1870      6572204D 
 1870      6F64653A 
 1870      00
 1871 0085 000000   		.align	2
 1872              	.LC25:
 1873 0088 536C6176 		.ascii	"Slave ID:\000"
 1873      65204944 
 1873      3A00
 1874 0092 0000     		.align	2
 1875              	.LC26:
 1876 0094 536C6176 		.ascii	"Slave resolution:\000"
 1876      65207265 
 1876      736F6C75 
 1876      74696F6E 
 1876      3A00
 1877 00a6 0000     		.align	2
 1878              	.LC27:
 1879 00a8 496E7075 		.ascii	"Input mode:\000"
 1879      74206D6F 
 1879      64653A00 
 1880              		.align	2
 1881              	.LC28:
 1882 00b4 506F732E 		.ascii	"Pos. limits [inf, sup]:\000"
 1882      206C696D 
 1882      69747320 
 1882      5B696E66 
 1882      2C207375 
 1883              		.align	2
 1884              	.LC29:
 1885 00cc 56696272 		.ascii	"Vibrotactile Feedback:\000"
 1885      6F746163 
 1885      74696C65 
 1885      20466565 
 1885      64626163 
 1886 00e3 00       		.align	2
 1887              	.LC30:
 1888 00e4 41697220 		.ascii	"Air Chamber Feedback:\000"
 1888      4368616D 
 1888      62657220 
 1888      46656564 
 1888      6261636B 
 1889 00fa 0000     		.align	2
 1890              	.LC31:
 1891 00fc 4D617869 		.ascii	"Maximum slave residual current:\000"
 1891      6D756D20 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 58


 1891      736C6176 
 1891      65207265 
 1891      73696475 
 1892              		.align	2
 1893              	.LC32:
 1894 011c 4D617869 		.ascii	"Maximum pressure feedback (kPa):\000"
 1894      6D756D20 
 1894      70726573 
 1894      73757265 
 1894      20666565 
 1895 013d 000000   		.align	2
 1896              	.LC33:
 1897 0140 50726F70 		.ascii	"Proportional pressure error gain:\000"
 1897      6F727469 
 1897      6F6E616C 
 1897      20707265 
 1897      73737572 
 1898 0162 0000     		.align	2
 1899              	.LC0:
 1900 0164 20557362 		.ascii	" Usb\000"
 1900      00
 1901 0169 000000   		.align	2
 1902              	.LC1:
 1903 016c 2048616E 		.ascii	" Handle\000"
 1903      646C6500 
 1904              		.align	2
 1905              	.LC2:
 1906 0174 20454D47 		.ascii	" EMG proportional\000"
 1906      2070726F 
 1906      706F7274 
 1906      696F6E61 
 1906      6C00
 1907 0186 0000     		.align	2
 1908              	.LC3:
 1909 0188 20454D47 		.ascii	" EMG Integral\000"
 1909      20496E74 
 1909      65677261 
 1909      6C00
 1910 0196 0000     		.align	2
 1911              	.LC4:
 1912 0198 20454D47 		.ascii	" EMG FCFS\000"
 1912      20464346 
 1912      5300
 1913 01a2 0000     		.align	2
 1914              	.LC5:
 1915 01a4 20454D47 		.ascii	" EMG FCFS Advanced\000"
 1915      20464346 
 1915      53204164 
 1915      76616E63 
 1915      656400
 1916 01b7 00       		.align	2
 1917              	.LC6:
 1918 01b8 204A6F79 		.ascii	" Joystick\000"
 1918      73746963 
 1918      6B00
 1919 01c2 0000     		.align	2
 1920              	.LC7:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 59


 1921 01c4 20454D47 		.ascii	" EMG proportional NC\000"
 1921      2070726F 
 1921      706F7274 
 1921      696F6E61 
 1921      6C204E43 
 1922 01d9 000000   		.align	2
 1923              	.LC9:
 1924 01dc 204E4F00 		.ascii	" NO\000"
 1925              		.align	2
 1926              	.LC10:
 1927 01e0 20594553 		.ascii	" YES\000"
 1927      00
 1928 01e5 000000   		.align	2
 1929              	.LC11:
 1930 01e8 204F4646 		.ascii	" OFF\000"
 1930      00
 1931 01ed 000000   		.align	2
 1932              	.LC12:
 1933 01f0 204F4E00 		.ascii	" ON\000"
 1934              		.align	2
 1935              	.LC18:
 1936 01f4 01       		.byte	1
 1937 01f5 00       		.byte	0
 1938 01f6 0000     		.space	2
 1939 01f8 64010000 		.word	.LC0
 1940 01fc 6C010000 		.word	.LC1
 1941 0200 74010000 		.word	.LC2
 1942 0204 88010000 		.word	.LC3
 1943 0208 98010000 		.word	.LC4
 1944 020c A4010000 		.word	.LC5
 1945 0210 B8010000 		.word	.LC6
 1946 0214 C4010000 		.word	.LC7
 1947 0218 00000000 		.word	.LC8
 1948 021c 00000000 		.word	.LC8
 1949 0220 03       		.byte	3
 1950 0221 00       		.byte	0
 1951 0222 0000     		.space	2
 1952 0224 DC010000 		.word	.LC9
 1953 0228 E0010000 		.word	.LC10
 1954 022c 00000000 		.word	.LC8
 1955 0230 00000000 		.word	.LC8
 1956 0234 00000000 		.word	.LC8
 1957 0238 00000000 		.word	.LC8
 1958 023c 00000000 		.word	.LC8
 1959 0240 00000000 		.word	.LC8
 1960 0244 00000000 		.word	.LC8
 1961 0248 00000000 		.word	.LC8
 1962 024c 05       		.byte	5
 1963 024d 01       		.byte	1
 1964 024e 0000     		.space	2
 1965 0250 E8010000 		.word	.LC11
 1966 0254 F0010000 		.word	.LC12
 1967 0258 00000000 		.word	.LC8
 1968 025c 00000000 		.word	.LC8
 1969 0260 00000000 		.word	.LC8
 1970 0264 00000000 		.word	.LC8
 1971 0268 00000000 		.word	.LC8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 60


 1972 026c 00000000 		.word	.LC8
 1973 0270 00000000 		.word	.LC8
 1974 0274 00000000 		.word	.LC8
 1975              		.section	.text.manage_param_list,"ax",%progbits
 1976              		.align	2
 1977              		.global	manage_param_list
 1978              		.thumb
 1979              		.thumb_func
 1980              		.type	manage_param_list, %function
 1981              	manage_param_list:
 1982              	.LFB69:
 494:..\src/command_processing.c **** 
 495:..\src/command_processing.c **** //==============================================================================
 496:..\src/command_processing.c **** // MANAGE PARAM LIST
 497:..\src/command_processing.c **** //==============================================================================
 498:..\src/command_processing.c **** void manage_param_list(uint16 index, uint8 sendToDevice) {
 1983              		.loc 1 498 0
 1984              		.cfi_startproc
 1985              		@ args = 0, pretend = 0, frame = 456
 1986              		@ frame_needed = 1, uses_anonymous_args = 0
 1987 0000 90B5     		push	{r4, r7, lr}
 1988              		.cfi_def_cfa_offset 12
 1989              		.cfi_offset 4, -12
 1990              		.cfi_offset 7, -8
 1991              		.cfi_offset 14, -4
 1992 0002 F5B0     		sub	sp, sp, #468
 1993              		.cfi_def_cfa_offset 480
 1994 0004 02AF     		add	r7, sp, #8
 1995              		.cfi_def_cfa 7, 472
 1996 0006 0246     		mov	r2, r0
 1997 0008 BB1D     		adds	r3, r7, #6
 1998 000a 1A80     		strh	r2, [r3]	@ movhi
 1999 000c 7B1D     		adds	r3, r7, #5
 2000 000e 0A46     		mov	r2, r1
 2001 0010 1A70     		strb	r2, [r3]
 499:..\src/command_processing.c ****     uint8 CYDATA i, j;
 500:..\src/command_processing.c ****     
 501:..\src/command_processing.c ****     uint8 PARAM_IDX;
 502:..\src/command_processing.c ****          
 503:..\src/command_processing.c ****     // Arrays
 504:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 2002              		.loc 1 504 0
 2003 0012 EE4B     		ldr	r3, .L134
 2004 0014 C7F8C031 		str	r3, [r7, #448]
 505:..\src/command_processing.c ****     
 506:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 2005              		.loc 1 506 0
 2006 0018 BB1D     		adds	r3, r7, #6
 2007 001a 1B88     		ldrh	r3, [r3]
 2008 001c 002B     		cmp	r3, #0
 2009 001e 02D0     		beq	.L119
 507:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 2010              		.loc 1 507 0
 2011 0020 EB4B     		ldr	r3, .L134+4
 2012 0022 C7F8C031 		str	r3, [r7, #448]
 2013              	.L119:
 508:..\src/command_processing.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 61


 509:..\src/command_processing.c **** 
 510:..\src/command_processing.c ****     struct menu menu_type;
 511:..\src/command_processing.c ****     
 512:..\src/command_processing.c ****     //------------------ BEGIN OF MENU LIST --------------------//  
 513:..\src/command_processing.c ****         const struct menu MENU_LIST[] = {
 2014              		.loc 1 513 0
 2015 0026 EB4A     		ldr	r2, .L134+8
 2016 0028 07F58673 		add	r3, r7, #268
 2017 002c 1146     		mov	r1, r2
 2018 002e 8422     		movs	r2, #132
 2019 0030 1846     		mov	r0, r3
 2020 0032 FFF7FEFF 		bl	memcpy
 514:..\src/command_processing.c ****     //  {num            , RESET     , { choice_0                  , choice_1                , choic
 515:..\src/command_processing.c ****         {MENU_INPUT     , FALSE     , { " Usb"                    , " Handle"               , " EMG
 516:..\src/command_processing.c ****         {MENU_Y_N       , FALSE     , { " NO"                     , " YES"                  , ""   
 517:..\src/command_processing.c ****         {MENU_ON_OFF    , TRUE      , { " OFF"                    , " ON"                   , ""   
 518:..\src/command_processing.c ****        };
 519:..\src/command_processing.c ****     //------------------ END  OF MENU LIST --------------------//  
 520:..\src/command_processing.c ****         
 521:..\src/command_processing.c ****     uint8 NUM_MENUs = sizeof(MENU_LIST)/sizeof(menu_type);  
 2021              		.loc 1 521 0
 2022 0036 0323     		movs	r3, #3
 2023 0038 87F8BF31 		strb	r3, [r7, #447]
 522:..\src/command_processing.c ****     
 523:..\src/command_processing.c ****     struct parameter param_type;   
 524:..\src/command_processing.c ****     
 525:..\src/command_processing.c ****     const struct parameter PARAM_LIST[]=
 526:..\src/command_processing.c ****     {
 527:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 528:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->dev.id)                           , TYPE_UINT8      , 1         , 
 2024              		.loc 1 528 0
 2025 003c D7F8C031 		ldr	r3, [r7, #448]
 2026 0040 03F11002 		add	r2, r3, #16
 525:..\src/command_processing.c ****     {
 2027              		.loc 1 525 0
 2028 0044 07F10C03 		add	r3, r7, #12
 2029 0048 1A60     		str	r2, [r3]
 2030 004a 07F10C03 		add	r3, r7, #12
 2031 004e 0222     		movs	r2, #2
 2032 0050 1A71     		strb	r2, [r3, #4]
 2033 0052 07F10C03 		add	r3, r7, #12
 2034 0056 0122     		movs	r2, #1
 2035 0058 5A71     		strb	r2, [r3, #5]
 2036 005a 07F10C03 		add	r3, r7, #12
 2037 005e DE4A     		ldr	r2, .L134+12
 2038 0060 9A60     		str	r2, [r3, #8]
 2039 0062 07F10C03 		add	r3, r7, #12
 2040 0066 0022     		movs	r2, #0
 2041 0068 1A73     		strb	r2, [r3, #12]
 2042 006a 07F10C03 		add	r3, r7, #12
 2043 006e 0022     		movs	r2, #0
 2044 0070 5A73     		strb	r2, [r3, #13]
 2045 0072 07F10C03 		add	r3, r7, #12
 2046 0076 0022     		movs	r2, #0
 2047 0078 9A73     		strb	r2, [r3, #14]
 2048 007a 07F10C03 		add	r3, r7, #12
 2049 007e 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 62


 2050 0080 DA73     		strb	r2, [r3, #15]
 529:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->emg.emg_threshold[0])             , TYPE_UINT16     , 2         , 
 2051              		.loc 1 529 0
 2052 0082 D7F8C031 		ldr	r3, [r7, #448]
 2053 0086 03F13002 		add	r2, r3, #48
 525:..\src/command_processing.c ****     {
 2054              		.loc 1 525 0
 2055 008a 07F10C03 		add	r3, r7, #12
 2056 008e 1A61     		str	r2, [r3, #16]
 2057 0090 07F10C03 		add	r3, r7, #12
 2058 0094 0422     		movs	r2, #4
 2059 0096 1A75     		strb	r2, [r3, #20]
 2060 0098 07F10C03 		add	r3, r7, #12
 2061 009c 0222     		movs	r2, #2
 2062 009e 5A75     		strb	r2, [r3, #21]
 2063 00a0 07F10C03 		add	r3, r7, #12
 2064 00a4 CD4A     		ldr	r2, .L134+16
 2065 00a6 9A61     		str	r2, [r3, #24]
 2066 00a8 07F10C03 		add	r3, r7, #12
 2067 00ac 0022     		movs	r2, #0
 2068 00ae 1A77     		strb	r2, [r3, #28]
 2069 00b0 07F10C03 		add	r3, r7, #12
 2070 00b4 1E22     		movs	r2, #30
 2071 00b6 5A77     		strb	r2, [r3, #29]
 2072 00b8 07F10C03 		add	r3, r7, #12
 2073 00bc 0022     		movs	r2, #0
 2074 00be 9A77     		strb	r2, [r3, #30]
 2075 00c0 07F10C03 		add	r3, r7, #12
 2076 00c4 0122     		movs	r2, #1
 2077 00c6 DA77     		strb	r2, [r3, #31]
 530:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->emg.emg_max_value[0])             , TYPE_UINT32     , 2         , 
 2078              		.loc 1 530 0
 2079 00c8 D7F8C031 		ldr	r3, [r7, #448]
 2080 00cc 03F13402 		add	r2, r3, #52
 525:..\src/command_processing.c ****     {
 2081              		.loc 1 525 0
 2082 00d0 07F10C03 		add	r3, r7, #12
 2083 00d4 1A62     		str	r2, [r3, #32]
 2084 00d6 07F10C03 		add	r3, r7, #12
 2085 00da 0622     		movs	r2, #6
 2086 00dc 83F82420 		strb	r2, [r3, #36]
 2087 00e0 07F10C03 		add	r3, r7, #12
 2088 00e4 0222     		movs	r2, #2
 2089 00e6 83F82520 		strb	r2, [r3, #37]
 2090 00ea 07F10C03 		add	r3, r7, #12
 2091 00ee BC4A     		ldr	r2, .L134+20
 2092 00f0 9A62     		str	r2, [r3, #40]
 2093 00f2 07F10C03 		add	r3, r7, #12
 2094 00f6 0022     		movs	r2, #0
 2095 00f8 83F82C20 		strb	r2, [r3, #44]
 2096 00fc 07F10C03 		add	r3, r7, #12
 2097 0100 1E22     		movs	r2, #30
 2098 0102 83F82D20 		strb	r2, [r3, #45]
 2099 0106 07F10C03 		add	r3, r7, #12
 2100 010a 0022     		movs	r2, #0
 2101 010c 83F82E20 		strb	r2, [r3, #46]
 2102 0110 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 63


 2103 0114 0122     		movs	r2, #1
 2104 0116 83F82F20 		strb	r2, [r3, #47]
 531:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->emg.emg_speed[0])                 , TYPE_UINT8      , 2         , 
 2105              		.loc 1 531 0
 2106 011a D7F8C031 		ldr	r3, [r7, #448]
 2107 011e 03F13C02 		add	r2, r3, #60
 525:..\src/command_processing.c ****     {
 2108              		.loc 1 525 0
 2109 0122 07F10C03 		add	r3, r7, #12
 2110 0126 1A63     		str	r2, [r3, #48]
 2111 0128 07F10C03 		add	r3, r7, #12
 2112 012c 0222     		movs	r2, #2
 2113 012e 83F83420 		strb	r2, [r3, #52]
 2114 0132 07F10C03 		add	r3, r7, #12
 2115 0136 0222     		movs	r2, #2
 2116 0138 83F83520 		strb	r2, [r3, #53]
 2117 013c 07F10C03 		add	r3, r7, #12
 2118 0140 A84A     		ldr	r2, .L134+24
 2119 0142 9A63     		str	r2, [r3, #56]
 2120 0144 07F10C03 		add	r3, r7, #12
 2121 0148 0022     		movs	r2, #0
 2122 014a 83F83C20 		strb	r2, [r3, #60]
 2123 014e 07F10C03 		add	r3, r7, #12
 2124 0152 1E22     		movs	r2, #30
 2125 0154 83F83D20 		strb	r2, [r3, #61]
 2126 0158 07F10C03 		add	r3, r7, #12
 2127 015c 0022     		movs	r2, #0
 2128 015e 83F83E20 		strb	r2, [r3, #62]
 2129 0162 07F10C03 		add	r3, r7, #12
 2130 0166 0122     		movs	r2, #1
 2131 0168 83F83F20 		strb	r2, [r3, #63]
 532:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->emg.switch_emg)                   , TYPE_FLAG       , 1         , 
 2132              		.loc 1 532 0
 2133 016c D7F8C031 		ldr	r3, [r7, #448]
 2134 0170 03F13E02 		add	r2, r3, #62
 525:..\src/command_processing.c ****     {
 2135              		.loc 1 525 0
 2136 0174 07F10C03 		add	r3, r7, #12
 2137 0178 1A64     		str	r2, [r3, #64]
 2138 017a 07F10C03 		add	r3, r7, #12
 2139 017e 0022     		movs	r2, #0
 2140 0180 83F84420 		strb	r2, [r3, #68]
 2141 0184 07F10C03 		add	r3, r7, #12
 2142 0188 0122     		movs	r2, #1
 2143 018a 83F84520 		strb	r2, [r3, #69]
 2144 018e 07F10C03 		add	r3, r7, #12
 2145 0192 954A     		ldr	r2, .L134+28
 2146 0194 9A64     		str	r2, [r3, #72]
 2147 0196 07F10C03 		add	r3, r7, #12
 2148 019a 0322     		movs	r2, #3
 2149 019c 83F84C20 		strb	r2, [r3, #76]
 2150 01a0 07F10C03 		add	r3, r7, #12
 2151 01a4 1E22     		movs	r2, #30
 2152 01a6 83F84D20 		strb	r2, [r3, #77]
 2153 01aa 07F10C03 		add	r3, r7, #12
 2154 01ae 0022     		movs	r2, #0
 2155 01b0 83F84E20 		strb	r2, [r3, #78]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 64


 2156 01b4 07F10C03 		add	r3, r7, #12
 2157 01b8 0122     		movs	r2, #1
 2158 01ba 83F84F20 		strb	r2, [r3, #79]
 533:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->MS.master_mode_active)            , TYPE_FLAG       , 1         , 
 2159              		.loc 1 533 0
 2160 01be D7F8C031 		ldr	r3, [r7, #448]
 2161 01c2 03F14002 		add	r2, r3, #64
 525:..\src/command_processing.c ****     {
 2162              		.loc 1 525 0
 2163 01c6 07F10C03 		add	r3, r7, #12
 2164 01ca 1A65     		str	r2, [r3, #80]
 2165 01cc 07F10C03 		add	r3, r7, #12
 2166 01d0 0022     		movs	r2, #0
 2167 01d2 83F85420 		strb	r2, [r3, #84]
 2168 01d6 07F10C03 		add	r3, r7, #12
 2169 01da 0122     		movs	r2, #1
 2170 01dc 83F85520 		strb	r2, [r3, #85]
 2171 01e0 07F10C03 		add	r3, r7, #12
 2172 01e4 814A     		ldr	r2, .L134+32
 2173 01e6 9A65     		str	r2, [r3, #88]
 2174 01e8 07F10C03 		add	r3, r7, #12
 2175 01ec 0522     		movs	r2, #5
 2176 01ee 83F85C20 		strb	r2, [r3, #92]
 2177 01f2 07F10C03 		add	r3, r7, #12
 2178 01f6 5022     		movs	r2, #80
 2179 01f8 83F85D20 		strb	r2, [r3, #93]
 2180 01fc 07F10C03 		add	r3, r7, #12
 2181 0200 0022     		movs	r2, #0
 2182 0202 83F85E20 		strb	r2, [r3, #94]
 2183 0206 07F10C03 		add	r3, r7, #12
 2184 020a 0122     		movs	r2, #1
 2185 020c 83F85F20 		strb	r2, [r3, #95]
 534:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->MS.slave_ID)                      , TYPE_UINT8      , 1         , 
 2186              		.loc 1 534 0
 2187 0210 D7F8C031 		ldr	r3, [r7, #448]
 2188 0214 03F14102 		add	r2, r3, #65
 525:..\src/command_processing.c ****     {
 2189              		.loc 1 525 0
 2190 0218 07F10C03 		add	r3, r7, #12
 2191 021c 1A66     		str	r2, [r3, #96]
 2192 021e 07F10C03 		add	r3, r7, #12
 2193 0222 0222     		movs	r2, #2
 2194 0224 83F86420 		strb	r2, [r3, #100]
 2195 0228 07F10C03 		add	r3, r7, #12
 2196 022c 0122     		movs	r2, #1
 2197 022e 83F86520 		strb	r2, [r3, #101]
 2198 0232 07F10C03 		add	r3, r7, #12
 2199 0236 6E4A     		ldr	r2, .L134+36
 2200 0238 9A66     		str	r2, [r3, #104]
 2201 023a 07F10C03 		add	r3, r7, #12
 2202 023e 0022     		movs	r2, #0
 2203 0240 83F86C20 		strb	r2, [r3, #108]
 2204 0244 07F10C03 		add	r3, r7, #12
 2205 0248 5022     		movs	r2, #80
 2206 024a 83F86D20 		strb	r2, [r3, #109]
 2207 024e 07F10C03 		add	r3, r7, #12
 2208 0252 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 65


 2209 0254 83F86E20 		strb	r2, [r3, #110]
 2210 0258 07F10C03 		add	r3, r7, #12
 2211 025c 0122     		movs	r2, #1
 2212 025e 83F86F20 		strb	r2, [r3, #111]
 535:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->SH_config.res)                    , TYPE_UINT8      , 1         , 
 2213              		.loc 1 535 0
 2214 0262 D7F8C031 		ldr	r3, [r7, #448]
 2215 0266 03F12902 		add	r2, r3, #41
 525:..\src/command_processing.c ****     {
 2216              		.loc 1 525 0
 2217 026a 07F10C03 		add	r3, r7, #12
 2218 026e 1A67     		str	r2, [r3, #112]
 2219 0270 07F10C03 		add	r3, r7, #12
 2220 0274 0222     		movs	r2, #2
 2221 0276 83F87420 		strb	r2, [r3, #116]
 2222 027a 07F10C03 		add	r3, r7, #12
 2223 027e 0122     		movs	r2, #1
 2224 0280 83F87520 		strb	r2, [r3, #117]
 2225 0284 07F10C03 		add	r3, r7, #12
 2226 0288 5A4A     		ldr	r2, .L134+40
 2227 028a 9A67     		str	r2, [r3, #120]
 2228 028c 07F10C03 		add	r3, r7, #12
 2229 0290 0022     		movs	r2, #0
 2230 0292 83F87C20 		strb	r2, [r3, #124]
 2231 0296 07F10C03 		add	r3, r7, #12
 2232 029a 5022     		movs	r2, #80
 2233 029c 83F87D20 		strb	r2, [r3, #125]
 2234 02a0 07F10C03 		add	r3, r7, #12
 2235 02a4 0022     		movs	r2, #0
 2236 02a6 83F87E20 		strb	r2, [r3, #126]
 2237 02aa 07F10C03 		add	r3, r7, #12
 2238 02ae 0122     		movs	r2, #1
 2239 02b0 83F87F20 		strb	r2, [r3, #127]
 536:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->SH_config.input_mode)             , TYPE_FLAG       , 1         , 
 2240              		.loc 1 536 0
 2241 02b4 D7F8C031 		ldr	r3, [r7, #448]
 2242 02b8 03F12802 		add	r2, r3, #40
 525:..\src/command_processing.c ****     {
 2243              		.loc 1 525 0
 2244 02bc 07F10C03 		add	r3, r7, #12
 2245 02c0 C3F88020 		str	r2, [r3, #128]
 2246 02c4 07F10C03 		add	r3, r7, #12
 2247 02c8 0022     		movs	r2, #0
 2248 02ca 83F88420 		strb	r2, [r3, #132]
 2249 02ce 07F10C03 		add	r3, r7, #12
 2250 02d2 0122     		movs	r2, #1
 2251 02d4 83F88520 		strb	r2, [r3, #133]
 2252 02d8 07F10C03 		add	r3, r7, #12
 2253 02dc 464A     		ldr	r2, .L134+44
 2254 02de C3F88820 		str	r2, [r3, #136]
 2255 02e2 07F10C03 		add	r3, r7, #12
 2256 02e6 0122     		movs	r2, #1
 2257 02e8 83F88C20 		strb	r2, [r3, #140]
 2258 02ec 07F10C03 		add	r3, r7, #12
 2259 02f0 5022     		movs	r2, #80
 2260 02f2 83F88D20 		strb	r2, [r3, #141]
 2261 02f6 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 66


 2262 02fa 0322     		movs	r2, #3
 2263 02fc 83F88E20 		strb	r2, [r3, #142]
 2264 0300 07F10C03 		add	r3, r7, #12
 2265 0304 0122     		movs	r2, #1
 2266 0306 83F88F20 		strb	r2, [r3, #143]
 537:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->SH_config.pos_lim_inf)            , TYPE_INT32      , 2         , 
 2267              		.loc 1 537 0
 2268 030a D7F8C031 		ldr	r3, [r7, #448]
 2269 030e 03F12002 		add	r2, r3, #32
 525:..\src/command_processing.c ****     {
 2270              		.loc 1 525 0
 2271 0312 07F10C03 		add	r3, r7, #12
 2272 0316 C3F89020 		str	r2, [r3, #144]
 2273 031a 07F10C03 		add	r3, r7, #12
 2274 031e 0522     		movs	r2, #5
 2275 0320 83F89420 		strb	r2, [r3, #148]
 2276 0324 07F10C03 		add	r3, r7, #12
 2277 0328 0222     		movs	r2, #2
 2278 032a 83F89520 		strb	r2, [r3, #149]
 2279 032e 07F10C03 		add	r3, r7, #12
 2280 0332 324A     		ldr	r2, .L134+48
 2281 0334 C3F89820 		str	r2, [r3, #152]
 2282 0338 07F10C03 		add	r3, r7, #12
 2283 033c 0022     		movs	r2, #0
 2284 033e 83F89C20 		strb	r2, [r3, #156]
 2285 0342 07F10C03 		add	r3, r7, #12
 2286 0346 5022     		movs	r2, #80
 2287 0348 83F89D20 		strb	r2, [r3, #157]
 2288 034c 07F10C03 		add	r3, r7, #12
 2289 0350 0522     		movs	r2, #5
 2290 0352 83F89E20 		strb	r2, [r3, #158]
 2291 0356 07F10C03 		add	r3, r7, #12
 2292 035a 0122     		movs	r2, #1
 2293 035c 83F89F20 		strb	r2, [r3, #159]
 538:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->FB.vibrotactile_feedback_active)  , TYPE_FLAG       , 1         , 
 2294              		.loc 1 538 0
 2295 0360 D7F8C031 		ldr	r3, [r7, #448]
 2296 0364 03F15C02 		add	r2, r3, #92
 525:..\src/command_processing.c ****     {
 2297              		.loc 1 525 0
 2298 0368 07F10C03 		add	r3, r7, #12
 2299 036c C3F8A020 		str	r2, [r3, #160]
 2300 0370 07F10C03 		add	r3, r7, #12
 2301 0374 0022     		movs	r2, #0
 2302 0376 83F8A420 		strb	r2, [r3, #164]
 2303 037a 07F10C03 		add	r3, r7, #12
 2304 037e 0122     		movs	r2, #1
 2305 0380 83F8A520 		strb	r2, [r3, #165]
 2306 0384 07F10C03 		add	r3, r7, #12
 2307 0388 1D4A     		ldr	r2, .L134+52
 2308 038a C3F8A820 		str	r2, [r3, #168]
 2309 038e 07F10C03 		add	r3, r7, #12
 2310 0392 0522     		movs	r2, #5
 2311 0394 83F8AC20 		strb	r2, [r3, #172]
 2312 0398 07F10C03 		add	r3, r7, #12
 2313 039c 5022     		movs	r2, #80
 2314 039e 83F8AD20 		strb	r2, [r3, #173]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 67


 2315 03a2 07F10C03 		add	r3, r7, #12
 2316 03a6 0022     		movs	r2, #0
 2317 03a8 83F8AE20 		strb	r2, [r3, #174]
 2318 03ac 07F10C03 		add	r3, r7, #12
 2319 03b0 0122     		movs	r2, #1
 2320 03b2 83F8AF20 		strb	r2, [r3, #175]
 539:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->FB.airchamber_feedback_active)    , TYPE_FLAG       , 1         , 
 2321              		.loc 1 539 0
 2322 03b6 D7F8C031 		ldr	r3, [r7, #448]
 2323 03ba 03F15D02 		add	r2, r3, #93
 525:..\src/command_processing.c ****     {
 2324              		.loc 1 525 0
 2325 03be 07F10C03 		add	r3, r7, #12
 2326 03c2 C3F8B020 		str	r2, [r3, #176]
 2327 03c6 07F10C03 		add	r3, r7, #12
 2328 03ca 1BE0     		b	.L135
 2329              	.L136:
 2330              		.align	2
 2331              	.L134:
 2332 03cc 00000000 		.word	c_mem
 2333 03d0 00000000 		.word	g_mem
 2334 03d4 F4010000 		.word	.LC18
 2335 03d8 2C000000 		.word	.LC19
 2336 03dc 38000000 		.word	.LC20
 2337 03e0 48000000 		.word	.LC21
 2338 03e4 58000000 		.word	.LC22
 2339 03e8 68000000 		.word	.LC23
 2340 03ec 78000000 		.word	.LC24
 2341 03f0 88000000 		.word	.LC25
 2342 03f4 94000000 		.word	.LC26
 2343 03f8 A8000000 		.word	.LC27
 2344 03fc B4000000 		.word	.LC28
 2345 0400 CC000000 		.word	.LC29
 2346              	.L135:
 2347 0404 0022     		movs	r2, #0
 2348 0406 83F8B420 		strb	r2, [r3, #180]
 2349 040a 07F10C03 		add	r3, r7, #12
 2350 040e 0122     		movs	r2, #1
 2351 0410 83F8B520 		strb	r2, [r3, #181]
 2352 0414 07F10C03 		add	r3, r7, #12
 2353 0418 C04A     		ldr	r2, .L137
 2354 041a C3F8B820 		str	r2, [r3, #184]
 2355 041e 07F10C03 		add	r3, r7, #12
 2356 0422 0522     		movs	r2, #5
 2357 0424 83F8BC20 		strb	r2, [r3, #188]
 2358 0428 07F10C03 		add	r3, r7, #12
 2359 042c 5022     		movs	r2, #80
 2360 042e 83F8BD20 		strb	r2, [r3, #189]
 2361 0432 07F10C03 		add	r3, r7, #12
 2362 0436 0022     		movs	r2, #0
 2363 0438 83F8BE20 		strb	r2, [r3, #190]
 2364 043c 07F10C03 		add	r3, r7, #12
 2365 0440 0122     		movs	r2, #1
 2366 0442 83F8BF20 		strb	r2, [r3, #191]
 540:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->FB.max_residual_current)          , TYPE_INT32      , 1         , 
 2367              		.loc 1 540 0
 2368 0446 D7F8C031 		ldr	r3, [r7, #448]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 68


 2369 044a 03F15002 		add	r2, r3, #80
 525:..\src/command_processing.c ****     {
 2370              		.loc 1 525 0
 2371 044e 07F10C03 		add	r3, r7, #12
 2372 0452 C3F8C020 		str	r2, [r3, #192]
 2373 0456 07F10C03 		add	r3, r7, #12
 2374 045a 0522     		movs	r2, #5
 2375 045c 83F8C420 		strb	r2, [r3, #196]
 2376 0460 07F10C03 		add	r3, r7, #12
 2377 0464 0122     		movs	r2, #1
 2378 0466 83F8C520 		strb	r2, [r3, #197]
 2379 046a 07F10C03 		add	r3, r7, #12
 2380 046e AC4A     		ldr	r2, .L137+4
 2381 0470 C3F8C820 		str	r2, [r3, #200]
 2382 0474 07F10C03 		add	r3, r7, #12
 2383 0478 0022     		movs	r2, #0
 2384 047a 83F8CC20 		strb	r2, [r3, #204]
 2385 047e 07F10C03 		add	r3, r7, #12
 2386 0482 5022     		movs	r2, #80
 2387 0484 83F8CD20 		strb	r2, [r3, #205]
 2388 0488 07F10C03 		add	r3, r7, #12
 2389 048c 0022     		movs	r2, #0
 2390 048e 83F8CE20 		strb	r2, [r3, #206]
 2391 0492 07F10C03 		add	r3, r7, #12
 2392 0496 0122     		movs	r2, #1
 2393 0498 83F8CF20 		strb	r2, [r3, #207]
 541:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->FB.maximum_pressure_kPa)          , TYPE_FLOAT      , 1         , 
 2394              		.loc 1 541 0
 2395 049c D7F8C031 		ldr	r3, [r7, #448]
 2396 04a0 03F15402 		add	r2, r3, #84
 525:..\src/command_processing.c ****     {
 2397              		.loc 1 525 0
 2398 04a4 07F10C03 		add	r3, r7, #12
 2399 04a8 C3F8D020 		str	r2, [r3, #208]
 2400 04ac 07F10C03 		add	r3, r7, #12
 2401 04b0 0722     		movs	r2, #7
 2402 04b2 83F8D420 		strb	r2, [r3, #212]
 2403 04b6 07F10C03 		add	r3, r7, #12
 2404 04ba 0122     		movs	r2, #1
 2405 04bc 83F8D520 		strb	r2, [r3, #213]
 2406 04c0 07F10C03 		add	r3, r7, #12
 2407 04c4 974A     		ldr	r2, .L137+8
 2408 04c6 C3F8D820 		str	r2, [r3, #216]
 2409 04ca 07F10C03 		add	r3, r7, #12
 2410 04ce 0022     		movs	r2, #0
 2411 04d0 83F8DC20 		strb	r2, [r3, #220]
 2412 04d4 07F10C03 		add	r3, r7, #12
 2413 04d8 5022     		movs	r2, #80
 2414 04da 83F8DD20 		strb	r2, [r3, #221]
 2415 04de 07F10C03 		add	r3, r7, #12
 2416 04e2 0022     		movs	r2, #0
 2417 04e4 83F8DE20 		strb	r2, [r3, #222]
 2418 04e8 07F10C03 		add	r3, r7, #12
 2419 04ec 0122     		movs	r2, #1
 2420 04ee 83F8DF20 		strb	r2, [r3, #223]
 542:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->FB.prop_err_fb_gain)              , TYPE_FLOAT      , 1         , 
 2421              		.loc 1 542 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 69


 2422 04f2 D7F8C031 		ldr	r3, [r7, #448]
 2423 04f6 03F15802 		add	r2, r3, #88
 525:..\src/command_processing.c ****     {
 2424              		.loc 1 525 0
 2425 04fa 07F10C03 		add	r3, r7, #12
 2426 04fe C3F8E020 		str	r2, [r3, #224]
 2427 0502 07F10C03 		add	r3, r7, #12
 2428 0506 0722     		movs	r2, #7
 2429 0508 83F8E420 		strb	r2, [r3, #228]
 2430 050c 07F10C03 		add	r3, r7, #12
 2431 0510 0122     		movs	r2, #1
 2432 0512 83F8E520 		strb	r2, [r3, #229]
 2433 0516 07F10C03 		add	r3, r7, #12
 2434 051a 834A     		ldr	r2, .L137+12
 2435 051c C3F8E820 		str	r2, [r3, #232]
 2436 0520 07F10C03 		add	r3, r7, #12
 2437 0524 0022     		movs	r2, #0
 2438 0526 83F8EC20 		strb	r2, [r3, #236]
 2439 052a 07F10C03 		add	r3, r7, #12
 2440 052e 5022     		movs	r2, #80
 2441 0530 83F8ED20 		strb	r2, [r3, #237]
 2442 0534 07F10C03 		add	r3, r7, #12
 2443 0538 0022     		movs	r2, #0
 2444 053a 83F8EE20 		strb	r2, [r3, #238]
 2445 053e 07F10C03 		add	r3, r7, #12
 2446 0542 0122     		movs	r2, #1
 2447 0544 83F8EF20 		strb	r2, [r3, #239]
 543:..\src/command_processing.c ****     };
 544:..\src/command_processing.c ****     uint8 NUM_PARAMs = sizeof(PARAM_LIST)/sizeof(param_type);  
 2448              		.loc 1 544 0
 2449 0548 0F23     		movs	r3, #15
 2450 054a 87F8BE31 		strb	r3, [r7, #446]
 545:..\src/command_processing.c ****     
 546:..\src/command_processing.c **** 
 547:..\src/command_processing.c ****     if (!index) {
 2451              		.loc 1 547 0
 2452 054e BB1D     		adds	r3, r7, #6
 2453 0550 1B88     		ldrh	r3, [r3]
 2454 0552 002B     		cmp	r3, #0
 2455 0554 0ED1     		bne	.L120
 548:..\src/command_processing.c ****         // Get parameters list with relative types
 549:..\src/command_processing.c ****         get_param_list(NUM_PARAMs, NUM_MENUs, PARAM_LIST, MENU_LIST, sendToDevice);
 2456              		.loc 1 549 0
 2457 0556 07F58674 		add	r4, r7, #268
 2458 055a 07F10C02 		add	r2, r7, #12
 2459 055e 97F8BF11 		ldrb	r1, [r7, #447]	@ zero_extendqisi2
 2460 0562 97F8BE01 		ldrb	r0, [r7, #446]	@ zero_extendqisi2
 2461 0566 7B1D     		adds	r3, r7, #5
 2462 0568 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2463 056a 0093     		str	r3, [sp]
 2464 056c 2346     		mov	r3, r4
 2465 056e FFF7FEFF 		bl	get_param_list
 550:..\src/command_processing.c ****     }   
 551:..\src/command_processing.c ****     else if  (index == 300) {
 552:..\src/command_processing.c ****         
 553:..\src/command_processing.c ****         qbadminp_string(NUM_PARAMs, NUM_MENUs, PARAM_LIST, MENU_LIST);
 554:..\src/command_processing.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 70


 555:..\src/command_processing.c **** 
 556:..\src/command_processing.c ****     else {
 557:..\src/command_processing.c ****          // Set specific parameter        
 558:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
 559:..\src/command_processing.c ****         
 560:..\src/command_processing.c ****         // Find size of data
 561:..\src/command_processing.c ****         uint8 sod = num_of_bytes(PARAM_LIST[PARAM_IDX].TYPES);
 562:..\src/command_processing.c ****    
 563:..\src/command_processing.c ****         if (PARAM_LIST[PARAM_IDX].custom == 0) {
 564:..\src/command_processing.c ****             // Use default specifications for param setting
 565:..\src/command_processing.c ****             for (i = 0; i < PARAM_LIST[PARAM_IDX].NUM_ITEMS * sod; i += sod){
 566:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 567:..\src/command_processing.c ****                     ((char*)(PARAM_LIST[PARAM_IDX].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 568:..\src/command_processing.c ****                 }
 569:..\src/command_processing.c ****             } 
 570:..\src/command_processing.c ****             if( PARAM_LIST[PARAM_IDX].TYPES == TYPE_STRING)                   
 571:..\src/command_processing.c ****                *(PARAM_LIST[PARAM_IDX].VAR_P + i) = '\0';        
 572:..\src/command_processing.c ****         }
 573:..\src/command_processing.c ****         
 574:..\src/command_processing.c ****         else {  
 575:..\src/command_processing.c ****             // Use custom specifications for param setting
 576:..\src/command_processing.c ****             set_custom_param(PARAM_IDX, PARAM_LIST);
 577:..\src/command_processing.c ****         }
 578:..\src/command_processing.c ****         
 579:..\src/command_processing.c ****        
 580:..\src/command_processing.c ****         // Perform chip reset if needed
 581:..\src/command_processing.c ****         for (i=0; i< NUM_MENUs;i++){
 582:..\src/command_processing.c ****             if ((MENU_LIST[i].name == PARAM_LIST[PARAM_IDX].MENU) & (MENU_LIST[i].reset == TRUE)){
 583:..\src/command_processing.c ****              reset_PSoC_flag = TRUE;
 584:..\src/command_processing.c ****             }   
 585:..\src/command_processing.c ****         }
 586:..\src/command_processing.c ****     }
 587:..\src/command_processing.c **** } 
 2466              		.loc 1 587 0
 2467 0572 CEE0     		b	.L133
 2468              	.L120:
 551:..\src/command_processing.c ****         
 2469              		.loc 1 551 0
 2470 0574 BB1D     		adds	r3, r7, #6
 2471 0576 1B88     		ldrh	r3, [r3]
 2472 0578 B3F5967F 		cmp	r3, #300
 2473 057c 0AD1     		bne	.L122
 553:..\src/command_processing.c ****     }
 2474              		.loc 1 553 0
 2475 057e 07F58673 		add	r3, r7, #268
 2476 0582 07F10C02 		add	r2, r7, #12
 2477 0586 97F8BF11 		ldrb	r1, [r7, #447]	@ zero_extendqisi2
 2478 058a 97F8BE01 		ldrb	r0, [r7, #446]	@ zero_extendqisi2
 2479 058e FFF7FEFF 		bl	qbadminp_string
 2480              		.loc 1 587 0
 2481 0592 BEE0     		b	.L133
 2482              	.L122:
 2483              	.LBB24:
 558:..\src/command_processing.c ****         
 2484              		.loc 1 558 0
 2485 0594 BB1D     		adds	r3, r7, #6
 2486 0596 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 71


 2487 0598 DBB2     		uxtb	r3, r3
 2488 059a 013B     		subs	r3, r3, #1
 2489 059c 87F8BD31 		strb	r3, [r7, #445]
 561:..\src/command_processing.c ****    
 2490              		.loc 1 561 0
 2491 05a0 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2492 05a4 07F10C02 		add	r2, r7, #12
 2493 05a8 1B01     		lsls	r3, r3, #4
 2494 05aa 1344     		add	r3, r3, r2
 2495 05ac 0433     		adds	r3, r3, #4
 2496 05ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2497 05b0 1846     		mov	r0, r3
 2498 05b2 FFF7FEFF 		bl	num_of_bytes
 2499 05b6 0346     		mov	r3, r0
 2500 05b8 87F8BC31 		strb	r3, [r7, #444]
 563:..\src/command_processing.c ****             // Use default specifications for param setting
 2501              		.loc 1 563 0
 2502 05bc 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2503 05c0 07F10C02 		add	r2, r7, #12
 2504 05c4 1B01     		lsls	r3, r3, #4
 2505 05c6 1344     		add	r3, r3, r2
 2506 05c8 0E33     		adds	r3, r3, #14
 2507 05ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2508 05cc 002B     		cmp	r3, #0
 2509 05ce 5BD1     		bne	.L123
 565:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 2510              		.loc 1 565 0
 2511 05d0 0023     		movs	r3, #0
 2512 05d2 87F8C731 		strb	r3, [r7, #455]
 2513 05d6 2FE0     		b	.L124
 2514              	.L127:
 566:..\src/command_processing.c ****                     ((char*)(PARAM_LIST[PARAM_IDX].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 2515              		.loc 1 566 0
 2516 05d8 0023     		movs	r3, #0
 2517 05da 87F8C631 		strb	r3, [r7, #454]
 2518 05de 1EE0     		b	.L125
 2519              	.L126:
 567:..\src/command_processing.c ****                 }
 2520              		.loc 1 567 0 discriminator 3
 2521 05e0 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2522 05e4 07F10C02 		add	r2, r7, #12
 2523 05e8 1B01     		lsls	r3, r3, #4
 2524 05ea 1344     		add	r3, r3, r2
 2525 05ec 1A68     		ldr	r2, [r3]
 2526 05ee 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2527 05f2 97F8BC01 		ldrb	r0, [r7, #444]	@ zero_extendqisi2
 2528 05f6 97F8C611 		ldrb	r1, [r7, #454]	@ zero_extendqisi2
 2529 05fa 411A     		subs	r1, r0, r1
 2530 05fc 0B44     		add	r3, r3, r1
 2531 05fe 013B     		subs	r3, r3, #1
 2532 0600 1344     		add	r3, r3, r2
 2533 0602 97F8C721 		ldrb	r2, [r7, #455]	@ zero_extendqisi2
 2534 0606 D11C     		adds	r1, r2, #3
 2535 0608 97F8C621 		ldrb	r2, [r7, #454]	@ zero_extendqisi2
 2536 060c 0A44     		add	r2, r2, r1
 2537 060e 4749     		ldr	r1, .L137+16
 2538 0610 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 72


 2539 0612 1A70     		strb	r2, [r3]
 566:..\src/command_processing.c ****                     ((char*)(PARAM_LIST[PARAM_IDX].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 2540              		.loc 1 566 0 discriminator 3
 2541 0614 97F8C631 		ldrb	r3, [r7, #454]	@ zero_extendqisi2
 2542 0618 0133     		adds	r3, r3, #1
 2543 061a 87F8C631 		strb	r3, [r7, #454]
 2544              	.L125:
 566:..\src/command_processing.c ****                     ((char*)(PARAM_LIST[PARAM_IDX].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 2545              		.loc 1 566 0 is_stmt 0 discriminator 1
 2546 061e 97F8C621 		ldrb	r2, [r7, #454]	@ zero_extendqisi2
 2547 0622 97F8BC31 		ldrb	r3, [r7, #444]	@ zero_extendqisi2
 2548 0626 9A42     		cmp	r2, r3
 2549 0628 DAD3     		bcc	.L126
 565:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 2550              		.loc 1 565 0 is_stmt 1 discriminator 2
 2551 062a 97F8C721 		ldrb	r2, [r7, #455]
 2552 062e 97F8BC31 		ldrb	r3, [r7, #444]
 2553 0632 1344     		add	r3, r3, r2
 2554 0634 87F8C731 		strb	r3, [r7, #455]
 2555              	.L124:
 565:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 2556              		.loc 1 565 0 is_stmt 0 discriminator 1
 2557 0638 97F8C721 		ldrb	r2, [r7, #455]	@ zero_extendqisi2
 2558 063c 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2559 0640 07F10C01 		add	r1, r7, #12
 2560 0644 1B01     		lsls	r3, r3, #4
 2561 0646 0B44     		add	r3, r3, r1
 2562 0648 0533     		adds	r3, r3, #5
 2563 064a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2564 064c 1946     		mov	r1, r3
 2565 064e 97F8BC31 		ldrb	r3, [r7, #444]	@ zero_extendqisi2
 2566 0652 03FB01F3 		mul	r3, r3, r1
 2567 0656 9A42     		cmp	r2, r3
 2568 0658 BEDB     		blt	.L127
 570:..\src/command_processing.c ****                *(PARAM_LIST[PARAM_IDX].VAR_P + i) = '\0';        
 2569              		.loc 1 570 0 is_stmt 1
 2570 065a 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2571 065e 07F10C02 		add	r2, r7, #12
 2572 0662 1B01     		lsls	r3, r3, #4
 2573 0664 1344     		add	r3, r3, r2
 2574 0666 0433     		adds	r3, r3, #4
 2575 0668 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2576 066a 092B     		cmp	r3, #9
 2577 066c 15D1     		bne	.L129
 571:..\src/command_processing.c ****         }
 2578              		.loc 1 571 0
 2579 066e 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2580 0672 07F10C02 		add	r2, r7, #12
 2581 0676 1B01     		lsls	r3, r3, #4
 2582 0678 1344     		add	r3, r3, r2
 2583 067a 1A68     		ldr	r2, [r3]
 2584 067c 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2585 0680 1344     		add	r3, r3, r2
 2586 0682 0022     		movs	r2, #0
 2587 0684 1A70     		strb	r2, [r3]
 2588 0686 08E0     		b	.L129
 2589              	.L123:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 73


 576:..\src/command_processing.c ****         }
 2590              		.loc 1 576 0
 2591 0688 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2592 068c 9BB2     		uxth	r3, r3
 2593 068e 07F10C02 		add	r2, r7, #12
 2594 0692 1146     		mov	r1, r2
 2595 0694 1846     		mov	r0, r3
 2596 0696 FFF7FEFF 		bl	set_custom_param
 2597              	.L129:
 581:..\src/command_processing.c ****             if ((MENU_LIST[i].name == PARAM_LIST[PARAM_IDX].MENU) & (MENU_LIST[i].reset == TRUE)){
 2598              		.loc 1 581 0
 2599 069a 0023     		movs	r3, #0
 2600 069c 87F8C731 		strb	r3, [r7, #455]
 2601 06a0 31E0     		b	.L130
 2602              	.L132:
 582:..\src/command_processing.c ****              reset_PSoC_flag = TRUE;
 2603              		.loc 1 582 0
 2604 06a2 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2605 06a6 2C22     		movs	r2, #44
 2606 06a8 02FB03F3 		mul	r3, r2, r3
 2607 06ac 07F5E472 		add	r2, r7, #456
 2608 06b0 1344     		add	r3, r3, r2
 2609 06b2 BC3B     		subs	r3, r3, #188
 2610 06b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2611 06b6 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2612 06ba 07F10C01 		add	r1, r7, #12
 2613 06be 1B01     		lsls	r3, r3, #4
 2614 06c0 0B44     		add	r3, r3, r1
 2615 06c2 0C33     		adds	r3, r3, #12
 2616 06c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2617 06c6 9A42     		cmp	r2, r3
 2618 06c8 0CBF     		ite	eq
 2619 06ca 0123     		moveq	r3, #1
 2620 06cc 0023     		movne	r3, #0
 2621 06ce DAB2     		uxtb	r2, r3
 2622 06d0 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2623 06d4 2C21     		movs	r1, #44
 2624 06d6 01FB03F3 		mul	r3, r1, r3
 2625 06da 07F5E471 		add	r1, r7, #456
 2626 06de 0B44     		add	r3, r3, r1
 2627 06e0 BB3B     		subs	r3, r3, #187
 2628 06e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2629 06e4 012B     		cmp	r3, #1
 2630 06e6 0CBF     		ite	eq
 2631 06e8 0123     		moveq	r3, #1
 2632 06ea 0023     		movne	r3, #0
 2633 06ec DBB2     		uxtb	r3, r3
 2634 06ee 1340     		ands	r3, r3, r2
 2635 06f0 DBB2     		uxtb	r3, r3
 2636 06f2 002B     		cmp	r3, #0
 2637 06f4 02D0     		beq	.L131
 583:..\src/command_processing.c ****             }   
 2638              		.loc 1 583 0
 2639 06f6 0E4B     		ldr	r3, .L137+20
 2640 06f8 0122     		movs	r2, #1
 2641 06fa 1A70     		strb	r2, [r3]
 2642              	.L131:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 74


 581:..\src/command_processing.c ****             if ((MENU_LIST[i].name == PARAM_LIST[PARAM_IDX].MENU) & (MENU_LIST[i].reset == TRUE)){
 2643              		.loc 1 581 0 discriminator 2
 2644 06fc 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2645 0700 0133     		adds	r3, r3, #1
 2646 0702 87F8C731 		strb	r3, [r7, #455]
 2647              	.L130:
 581:..\src/command_processing.c ****             if ((MENU_LIST[i].name == PARAM_LIST[PARAM_IDX].MENU) & (MENU_LIST[i].reset == TRUE)){
 2648              		.loc 1 581 0 is_stmt 0 discriminator 1
 2649 0706 97F8C721 		ldrb	r2, [r7, #455]	@ zero_extendqisi2
 2650 070a 97F8BF31 		ldrb	r3, [r7, #447]	@ zero_extendqisi2
 2651 070e 9A42     		cmp	r2, r3
 2652 0710 C7D3     		bcc	.L132
 2653              	.L133:
 2654              	.LBE24:
 2655              		.loc 1 587 0 is_stmt 1
 2656 0712 00BF     		nop
 2657 0714 07F5E677 		add	r7, r7, #460
 2658              		.cfi_def_cfa_offset 12
 2659 0718 BD46     		mov	sp, r7
 2660              		.cfi_def_cfa_register 13
 2661              		@ sp needed
 2662 071a 90BD     		pop	{r4, r7, pc}
 2663              	.L138:
 2664              		.align	2
 2665              	.L137:
 2666 071c E4000000 		.word	.LC30
 2667 0720 FC000000 		.word	.LC31
 2668 0724 1C010000 		.word	.LC32
 2669 0728 40010000 		.word	.LC33
 2670 072c 00000000 		.word	g_rx
 2671 0730 00000000 		.word	reset_PSoC_flag
 2672              		.cfi_endproc
 2673              	.LFE69:
 2674              		.size	manage_param_list, .-manage_param_list
 2675              		.section	.text.set_custom_param,"ax",%progbits
 2676              		.align	2
 2677              		.global	set_custom_param
 2678              		.thumb
 2679              		.thumb_func
 2680              		.type	set_custom_param, %function
 2681              	set_custom_param:
 2682              	.LFB70:
 588:..\src/command_processing.c **** 
 589:..\src/command_processing.c **** 
 590:..\src/command_processing.c **** //==============================================================================
 591:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
 592:..\src/command_processing.c **** //==============================================================================
 593:..\src/command_processing.c **** 
 594:..\src/command_processing.c **** void set_custom_param(uint16 index, const struct parameter PARAM_LIST[]) {
 2683              		.loc 1 594 0
 2684              		.cfi_startproc
 2685              		@ args = 0, pretend = 0, frame = 16
 2686              		@ frame_needed = 1, uses_anonymous_args = 0
 2687 0000 80B5     		push	{r7, lr}
 2688              		.cfi_def_cfa_offset 8
 2689              		.cfi_offset 7, -8
 2690              		.cfi_offset 14, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 75


 2691 0002 84B0     		sub	sp, sp, #16
 2692              		.cfi_def_cfa_offset 24
 2693 0004 00AF     		add	r7, sp, #0
 2694              		.cfi_def_cfa_register 7
 2695 0006 0346     		mov	r3, r0
 2696 0008 3960     		str	r1, [r7]
 2697 000a FB80     		strh	r3, [r7, #6]	@ movhi
 595:..\src/command_processing.c ****     uint8 sod =   num_of_bytes(PARAM_LIST[index].TYPES);
 2698              		.loc 1 595 0
 2699 000c FB88     		ldrh	r3, [r7, #6]
 2700 000e 1B01     		lsls	r3, r3, #4
 2701 0010 3A68     		ldr	r2, [r7]
 2702 0012 1344     		add	r3, r3, r2
 2703 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2704 0016 1846     		mov	r0, r3
 2705 0018 FFF7FEFF 		bl	num_of_bytes
 2706 001c 0346     		mov	r3, r0
 2707 001e 7B73     		strb	r3, [r7, #13]
 596:..\src/command_processing.c **** 
 597:..\src/command_processing.c ****     uint8 CYDATA i, j;
 598:..\src/command_processing.c ****         
 599:..\src/command_processing.c ****     switch(PARAM_LIST[index].custom){
 2708              		.loc 1 599 0
 2709 0020 FB88     		ldrh	r3, [r7, #6]
 2710 0022 1B01     		lsls	r3, r3, #4
 2711 0024 3A68     		ldr	r2, [r7]
 2712 0026 1344     		add	r3, r3, r2
 2713 0028 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 2714 002a 032B     		cmp	r3, #3
 2715 002c 02D0     		beq	.L141
 2716 002e 052B     		cmp	r3, #5
 2717 0030 06D0     		beq	.L142
 2718 0032 36E0     		b	.L149
 2719              	.L141:
 600:..\src/command_processing.c ****         
 601:..\src/command_processing.c ****             
 602:..\src/command_processing.c ****         case CUSTOM_INPUT:         //Input mode
 603:..\src/command_processing.c ****             g_mem.SH_config.input_mode = g_rx.buffer[3];            //In this specific FW, input mo
 2720              		.loc 1 603 0
 2721 0034 3D4B     		ldr	r3, .L151
 2722 0036 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2723 0038 3D4B     		ldr	r3, .L151+4
 2724 003a 83F82820 		strb	r2, [r3, #40]
 604:..\src/command_processing.c ****             break;   
 2725              		.loc 1 604 0
 2726 003e 71E0     		b	.L143
 2727              	.L142:
 605:..\src/command_processing.c **** 
 606:..\src/command_processing.c ****         
 607:..\src/command_processing.c ****         case CUSTOM_POS_LIM:        //Position limits
 608:..\src/command_processing.c ****             g_mem.SH_config.pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.bu
 2728              		.loc 1 608 0
 2729 0040 3A4B     		ldr	r3, .L151
 2730 0042 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2731 0044 1A06     		lsls	r2, r3, #24
 2732 0046 394B     		ldr	r3, .L151
 2733 0048 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 76


 2734 004a 1B04     		lsls	r3, r3, #16
 2735 004c 1A43     		orrs	r2, r2, r3
 2736 004e 374B     		ldr	r3, .L151
 2737 0050 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 2738 0052 1B02     		lsls	r3, r3, #8
 2739 0054 1343     		orrs	r3, r3, r2
 2740 0056 354A     		ldr	r2, .L151
 2741 0058 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 2742 005a 1343     		orrs	r3, r3, r2
 2743 005c 344A     		ldr	r2, .L151+4
 2744 005e 1362     		str	r3, [r2, #32]
 609:..\src/command_processing.c ****             g_mem.SH_config.pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | g_rx.bu
 2745              		.loc 1 609 0
 2746 0060 324B     		ldr	r3, .L151
 2747 0062 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 2748 0064 1A06     		lsls	r2, r3, #24
 2749 0066 314B     		ldr	r3, .L151
 2750 0068 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 2751 006a 1B04     		lsls	r3, r3, #16
 2752 006c 1A43     		orrs	r2, r2, r3
 2753 006e 2F4B     		ldr	r3, .L151
 2754 0070 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2755 0072 1B02     		lsls	r3, r3, #8
 2756 0074 1343     		orrs	r3, r3, r2
 2757 0076 2D4A     		ldr	r2, .L151
 2758 0078 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 2759 007a 1343     		orrs	r3, r3, r2
 2760 007c 2C4A     		ldr	r2, .L151+4
 2761 007e 5362     		str	r3, [r2, #36]
 610:..\src/command_processing.c **** 
 611:..\src/command_processing.c ****             g_mem.SH_config.pos_lim_inf = g_mem.SH_config.pos_lim_inf << g_mem.SH_config.res;
 2762              		.loc 1 611 0
 2763 0080 2B4B     		ldr	r3, .L151+4
 2764 0082 1B6A     		ldr	r3, [r3, #32]
 2765 0084 2A4A     		ldr	r2, .L151+4
 2766 0086 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 2767 008a 9340     		lsls	r3, r3, r2
 2768 008c 284A     		ldr	r2, .L151+4
 2769 008e 1362     		str	r3, [r2, #32]
 612:..\src/command_processing.c ****             g_mem.SH_config.pos_lim_sup = g_mem.SH_config.pos_lim_sup << g_mem.SH_config.res;
 2770              		.loc 1 612 0
 2771 0090 274B     		ldr	r3, .L151+4
 2772 0092 5B6A     		ldr	r3, [r3, #36]
 2773 0094 264A     		ldr	r2, .L151+4
 2774 0096 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 2775 009a 9340     		lsls	r3, r3, r2
 2776 009c 244A     		ldr	r2, .L151+4
 2777 009e 5362     		str	r3, [r2, #36]
 613:..\src/command_processing.c ****             break;            
 2778              		.loc 1 613 0
 2779 00a0 40E0     		b	.L143
 2780              	.L149:
 614:..\src/command_processing.c ****             default:
 615:..\src/command_processing.c **** 
 616:..\src/command_processing.c ****                 for (i = 0; i < PARAM_LIST[index].NUM_ITEMS * sod; i += sod){
 2781              		.loc 1 616 0
 2782 00a2 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 77


 2783 00a4 FB73     		strb	r3, [r7, #15]
 2784 00a6 20E0     		b	.L144
 2785              	.L147:
 617:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2786              		.loc 1 617 0
 2787 00a8 0023     		movs	r3, #0
 2788 00aa BB73     		strb	r3, [r7, #14]
 2789 00ac 15E0     		b	.L145
 2790              	.L146:
 618:..\src/command_processing.c ****                         ((char*)(PARAM_LIST[index].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 2791              		.loc 1 618 0 discriminator 3
 2792 00ae FB88     		ldrh	r3, [r7, #6]
 2793 00b0 1B01     		lsls	r3, r3, #4
 2794 00b2 3A68     		ldr	r2, [r7]
 2795 00b4 1344     		add	r3, r3, r2
 2796 00b6 1A68     		ldr	r2, [r3]
 2797 00b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2798 00ba 787B     		ldrb	r0, [r7, #13]	@ zero_extendqisi2
 2799 00bc B97B     		ldrb	r1, [r7, #14]	@ zero_extendqisi2
 2800 00be 411A     		subs	r1, r0, r1
 2801 00c0 0B44     		add	r3, r3, r1
 2802 00c2 013B     		subs	r3, r3, #1
 2803 00c4 1344     		add	r3, r3, r2
 2804 00c6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2805 00c8 D11C     		adds	r1, r2, #3
 2806 00ca BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2807 00cc 0A44     		add	r2, r2, r1
 2808 00ce 1749     		ldr	r1, .L151
 2809 00d0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2810 00d2 1A70     		strb	r2, [r3]
 617:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2811              		.loc 1 617 0 discriminator 3
 2812 00d4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2813 00d6 0133     		adds	r3, r3, #1
 2814 00d8 BB73     		strb	r3, [r7, #14]
 2815              	.L145:
 617:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2816              		.loc 1 617 0 is_stmt 0 discriminator 1
 2817 00da BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2818 00dc 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2819 00de 9A42     		cmp	r2, r3
 2820 00e0 E5D3     		bcc	.L146
 616:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2821              		.loc 1 616 0 is_stmt 1 discriminator 2
 2822 00e2 FA7B     		ldrb	r2, [r7, #15]
 2823 00e4 7B7B     		ldrb	r3, [r7, #13]
 2824 00e6 1344     		add	r3, r3, r2
 2825 00e8 FB73     		strb	r3, [r7, #15]
 2826              	.L144:
 616:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2827              		.loc 1 616 0 is_stmt 0 discriminator 1
 2828 00ea FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2829 00ec FB88     		ldrh	r3, [r7, #6]
 2830 00ee 1B01     		lsls	r3, r3, #4
 2831 00f0 3968     		ldr	r1, [r7]
 2832 00f2 0B44     		add	r3, r3, r1
 2833 00f4 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 78


 2834 00f6 1946     		mov	r1, r3
 2835 00f8 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2836 00fa 03FB01F3 		mul	r3, r3, r1
 2837 00fe 9A42     		cmp	r2, r3
 2838 0100 D2DB     		blt	.L147
 619:..\src/command_processing.c ****                     }
 620:..\src/command_processing.c ****                 } 
 621:..\src/command_processing.c ****                 if( PARAM_LIST[index].TYPES == TYPE_STRING)                   
 2839              		.loc 1 621 0 is_stmt 1
 2840 0102 FB88     		ldrh	r3, [r7, #6]
 2841 0104 1B01     		lsls	r3, r3, #4
 2842 0106 3A68     		ldr	r2, [r7]
 2843 0108 1344     		add	r3, r3, r2
 2844 010a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2845 010c 092B     		cmp	r3, #9
 2846 010e 08D1     		bne	.L150
 622:..\src/command_processing.c ****                    *(PARAM_LIST[index].VAR_P + i) = '\0';   
 2847              		.loc 1 622 0
 2848 0110 FB88     		ldrh	r3, [r7, #6]
 2849 0112 1B01     		lsls	r3, r3, #4
 2850 0114 3A68     		ldr	r2, [r7]
 2851 0116 1344     		add	r3, r3, r2
 2852 0118 1A68     		ldr	r2, [r3]
 2853 011a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2854 011c 1344     		add	r3, r3, r2
 2855 011e 0022     		movs	r2, #0
 2856 0120 1A70     		strb	r2, [r3]
 2857              	.L150:
 623:..\src/command_processing.c ****             break;
 2858              		.loc 1 623 0
 2859 0122 00BF     		nop
 2860              	.L143:
 624:..\src/command_processing.c ****     }
 625:..\src/command_processing.c **** 
 626:..\src/command_processing.c ****       
 627:..\src/command_processing.c **** }
 2861              		.loc 1 627 0
 2862 0124 00BF     		nop
 2863 0126 1037     		adds	r7, r7, #16
 2864              		.cfi_def_cfa_offset 8
 2865 0128 BD46     		mov	sp, r7
 2866              		.cfi_def_cfa_register 13
 2867              		@ sp needed
 2868 012a 80BD     		pop	{r7, pc}
 2869              	.L152:
 2870              		.align	2
 2871              	.L151:
 2872 012c 00000000 		.word	g_rx
 2873 0130 00000000 		.word	g_mem
 2874              		.cfi_endproc
 2875              	.LFE70:
 2876              		.size	set_custom_param, .-set_custom_param
 2877              		.section	.text.get_IMU_param_list,"ax",%progbits
 2878              		.align	2
 2879              		.global	get_IMU_param_list
 2880              		.thumb
 2881              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 79


 2882              		.type	get_IMU_param_list, %function
 2883              	get_IMU_param_list:
 2884              	.LFB71:
 628:..\src/command_processing.c **** 
 629:..\src/command_processing.c **** //==============================================================================
 630:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
 631:..\src/command_processing.c **** //==============================================================================
 632:..\src/command_processing.c **** 
 633:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
 634:..\src/command_processing.c **** {
 2885              		.loc 1 634 0
 2886              		.cfi_startproc
 2887              		@ args = 0, pretend = 0, frame = 8
 2888              		@ frame_needed = 1, uses_anonymous_args = 0
 2889              		@ link register save eliminated.
 2890 0000 80B4     		push	{r7}
 2891              		.cfi_def_cfa_offset 4
 2892              		.cfi_offset 7, -4
 2893 0002 83B0     		sub	sp, sp, #12
 2894              		.cfi_def_cfa_offset 16
 2895 0004 00AF     		add	r7, sp, #0
 2896              		.cfi_def_cfa_register 7
 2897 0006 0346     		mov	r3, r0
 2898 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 635:..\src/command_processing.c **** }
 2899              		.loc 1 635 0
 2900 000a 00BF     		nop
 2901 000c 0C37     		adds	r7, r7, #12
 2902              		.cfi_def_cfa_offset 4
 2903 000e BD46     		mov	sp, r7
 2904              		.cfi_def_cfa_register 13
 2905              		@ sp needed
 2906 0010 80BC     		pop	{r7}
 2907              		.cfi_restore 7
 2908              		.cfi_def_cfa_offset 0
 2909 0012 7047     		bx	lr
 2910              		.cfi_endproc
 2911              	.LFE71:
 2912              		.size	get_IMU_param_list, .-get_IMU_param_list
 2913              		.section	.text.setZeros,"ax",%progbits
 2914              		.align	2
 2915              		.global	setZeros
 2916              		.thumb
 2917              		.thumb_func
 2918              		.type	setZeros, %function
 2919              	setZeros:
 2920              	.LFB72:
 636:..\src/command_processing.c **** 
 637:..\src/command_processing.c **** //==============================================================================
 638:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
 639:..\src/command_processing.c **** //==============================================================================
 640:..\src/command_processing.c **** 
 641:..\src/command_processing.c **** void setZeros()
 642:..\src/command_processing.c **** {
 2921              		.loc 1 642 0
 2922              		.cfi_startproc
 2923              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 80


 2924              		@ frame_needed = 1, uses_anonymous_args = 0
 2925              		@ link register save eliminated.
 2926 0000 80B4     		push	{r7}
 2927              		.cfi_def_cfa_offset 4
 2928              		.cfi_offset 7, -4
 2929 0002 00AF     		add	r7, sp, #0
 2930              		.cfi_def_cfa_register 7
 643:..\src/command_processing.c **** }
 2931              		.loc 1 643 0
 2932 0004 00BF     		nop
 2933 0006 BD46     		mov	sp, r7
 2934              		.cfi_def_cfa_register 13
 2935              		@ sp needed
 2936 0008 80BC     		pop	{r7}
 2937              		.cfi_restore 7
 2938              		.cfi_def_cfa_offset 0
 2939 000a 7047     		bx	lr
 2940              		.cfi_endproc
 2941              	.LFE72:
 2942              		.size	setZeros, .-setZeros
 2943              		.section	.rodata
 2944              		.align	2
 2945              	.LC34:
 2946 0278 45434343 		.ascii	"ECCCOCIIII:\012\000"
 2946      4F434949 
 2946      49493A0A 
 2946      00
 2947 0285 000000   		.align	2
 2948              	.LC35:
 2949 0288 20256400 		.ascii	" %d\000"
 2950              		.align	2
 2951              	.LC36:
 2952 028c 20256C64 		.ascii	" %ld\000"
 2952      00
 2953              		.global	__aeabi_f2d
 2954 0291 000000   		.align	2
 2955              	.LC37:
 2956 0294 20256600 		.ascii	" %f\000"
 2957              		.align	2
 2958              	.LC38:
 2959 0298 65727479 		.ascii	"ertyuioooiuytu\000"
 2959      75696F6F 
 2959      6F697579 
 2959      747500
 2960              		.section	.text.qbadminp_string,"ax",%progbits
 2961              		.align	2
 2962              		.global	qbadminp_string
 2963              		.thumb
 2964              		.thumb_func
 2965              		.type	qbadminp_string, %function
 2966              	qbadminp_string:
 2967              	.LFB73:
 644:..\src/command_processing.c **** 
 645:..\src/command_processing.c **** 
 646:..\src/command_processing.c **** void  qbadminp_string ( uint8 num_params, uint8 num_menus, const struct parameter PARAM_LIST[], con
 2968              		.loc 1 646 0
 2969              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 81


 2970              		@ args = 0, pretend = 0, frame = 2664
 2971              		@ frame_needed = 1, uses_anonymous_args = 0
 2972 0000 90B5     		push	{r4, r7, lr}
 2973              		.cfi_def_cfa_offset 12
 2974              		.cfi_offset 4, -12
 2975              		.cfi_offset 7, -8
 2976              		.cfi_offset 14, -4
 2977 0002 ADF66C2D 		subw	sp, sp, #2668
 2978              		.cfi_def_cfa_offset 2680
 2979 0006 00AF     		add	r7, sp, #0
 2980              		.cfi_def_cfa_register 7
 2981 0008 0446     		mov	r4, r0
 2982 000a 0846     		mov	r0, r1
 2983 000c 07F10801 		add	r1, r7, #8
 2984 0010 0A60     		str	r2, [r1]
 2985 0012 3A1D     		adds	r2, r7, #4
 2986 0014 1360     		str	r3, [r2]
 2987 0016 07F10F03 		add	r3, r7, #15
 2988 001a 2246     		mov	r2, r4
 2989 001c 1A70     		strb	r2, [r3]
 2990 001e 07F10E03 		add	r3, r7, #14
 2991 0022 0246     		mov	r2, r0
 2992 0024 1A70     		strb	r2, [r3]
 647:..\src/command_processing.c ****     strcpy(superstring, "");
 2993              		.loc 1 647 0
 2994 0026 AF4B     		ldr	r3, .L181
 2995 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2996 002a AF4B     		ldr	r3, .L181+4
 2997 002c 1A70     		strb	r2, [r3]
 648:..\src/command_processing.c ****     char info_string[2500] = "";
 2998              		.loc 1 648 0
 2999 002e 07F17803 		add	r3, r7, #120
 3000 0032 0022     		movs	r2, #0
 3001 0034 1A60     		str	r2, [r3]
 3002 0036 0433     		adds	r3, r3, #4
 3003 0038 4FF41C62 		mov	r2, #2496
 3004 003c 0021     		movs	r1, #0
 3005 003e 1846     		mov	r0, r3
 3006 0040 FFF7FEFF 		bl	memset
 649:..\src/command_processing.c ****     int i;
 650:..\src/command_processing.c ****     int idx;
 651:..\src/command_processing.c ****     int32 aux_int32;
 652:..\src/command_processing.c ****     uint32 aux_uint32;
 653:..\src/command_processing.c ****     float aux_float;
 654:..\src/command_processing.c ****     uint8 aux_uint8;
 655:..\src/command_processing.c ****     int8 aux_int8;
 656:..\src/command_processing.c ****     int16 aux_int16;
 657:..\src/command_processing.c ****     uint16 aux_uint16;
 658:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 3007              		.loc 1 658 0
 3008 0044 A94B     		ldr	r3, .L181+8
 3009 0046 C7F85C3A 		str	r3, [r7, #2652]
 659:..\src/command_processing.c ****     
 660:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 3010              		.loc 1 660 0
 3011 004a A84B     		ldr	r3, .L181+8
 3012 004c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 82


 3013 004e FA2B     		cmp	r3, #250
 3014 0050 00F0BB81 		beq	.L179
 3015              	.LBB25:
 661:..\src/command_processing.c ****         uint8* m_addr;
 662:..\src/command_processing.c ****         uint8* m_tmp;
 663:..\src/command_processing.c ****         char str[100];
 664:..\src/command_processing.c ****         strcpy(info_string, "");
 3016              		.loc 1 664 0
 3017 0054 A34B     		ldr	r3, .L181
 3018 0056 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3019 0058 07F17803 		add	r3, r7, #120
 3020 005c 1A70     		strb	r2, [r3]
 665:..\src/command_processing.c ****         strcat(info_string, "ECCCOCIIII:\n");
 3021              		.loc 1 665 0
 3022 005e 07F17803 		add	r3, r7, #120
 3023 0062 1846     		mov	r0, r3
 3024 0064 FFF7FEFF 		bl	strlen
 3025 0068 0346     		mov	r3, r0
 3026 006a 1A46     		mov	r2, r3
 3027 006c 07F17803 		add	r3, r7, #120
 3028 0070 1344     		add	r3, r3, r2
 3029 0072 9F4A     		ldr	r2, .L181+12
 3030 0074 1C46     		mov	r4, r3
 3031 0076 1346     		mov	r3, r2
 3032 0078 07CB     		ldmia	r3!, {r0, r1, r2}
 3033 007a 2060     		str	r0, [r4]	@ unaligned
 3034 007c 6160     		str	r1, [r4, #4]	@ unaligned
 3035 007e A260     		str	r2, [r4, #8]	@ unaligned
 3036 0080 1B78     		ldrb	r3, [r3]
 3037 0082 2373     		strb	r3, [r4, #12]
 666:..\src/command_processing.c ****         
 667:..\src/command_processing.c ****         
 668:..\src/command_processing.c ****         for (idx = 0; idx < num_params; idx ++) {
 3038              		.loc 1 668 0
 3039 0084 0023     		movs	r3, #0
 3040 0086 C7F8603A 		str	r3, [r7, #2656]
 3041 008a 7EE1     		b	.L157
 3042              	.L178:
 669:..\src/command_processing.c ****             if (PARAM_LIST[idx].ping){
 3043              		.loc 1 669 0
 3044 008c D7F8603A 		ldr	r3, [r7, #2656]
 3045 0090 1B01     		lsls	r3, r3, #4
 3046 0092 07F10802 		add	r2, r7, #8
 3047 0096 1268     		ldr	r2, [r2]
 3048 0098 1344     		add	r3, r3, r2
 3049 009a DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 3050 009c 002B     		cmp	r3, #0
 3051 009e 00F06F81 		beq	.L158
 3052              	.LBB26:
 670:..\src/command_processing.c ****                 strcat(info_string, PARAM_LIST[idx].PARAM_STR );
 3053              		.loc 1 670 0
 3054 00a2 D7F8603A 		ldr	r3, [r7, #2656]
 3055 00a6 1B01     		lsls	r3, r3, #4
 3056 00a8 07F10802 		add	r2, r7, #8
 3057 00ac 1268     		ldr	r2, [r2]
 3058 00ae 1344     		add	r3, r3, r2
 3059 00b0 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 83


 3060 00b2 07F17803 		add	r3, r7, #120
 3061 00b6 1146     		mov	r1, r2
 3062 00b8 1846     		mov	r0, r3
 3063 00ba FFF7FEFF 		bl	strcat
 671:..\src/command_processing.c ****                 m_addr = (uint8*)PARAM_LIST[idx].VAR_P;
 3064              		.loc 1 671 0
 3065 00be D7F8603A 		ldr	r3, [r7, #2656]
 3066 00c2 1B01     		lsls	r3, r3, #4
 3067 00c4 07F10802 		add	r2, r7, #8
 3068 00c8 1268     		ldr	r2, [r2]
 3069 00ca 1344     		add	r3, r3, r2
 3070 00cc 1B68     		ldr	r3, [r3]
 3071 00ce C7F8583A 		str	r3, [r7, #2648]
 672:..\src/command_processing.c ****                 uint8 sod = num_of_bytes(PARAM_LIST[idx].TYPES);
 3072              		.loc 1 672 0
 3073 00d2 D7F8603A 		ldr	r3, [r7, #2656]
 3074 00d6 1B01     		lsls	r3, r3, #4
 3075 00d8 07F10802 		add	r2, r7, #8
 3076 00dc 1268     		ldr	r2, [r2]
 3077 00de 1344     		add	r3, r3, r2
 3078 00e0 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3079 00e2 1846     		mov	r0, r3
 3080 00e4 FFF7FEFF 		bl	num_of_bytes
 3081 00e8 0346     		mov	r3, r0
 3082 00ea 87F8573A 		strb	r3, [r7, #2647]
 673:..\src/command_processing.c ****                 switch(PARAM_LIST[idx].custom){
 3083              		.loc 1 673 0
 3084 00ee D7F8603A 		ldr	r3, [r7, #2656]
 3085 00f2 1B01     		lsls	r3, r3, #4
 3086 00f4 07F10802 		add	r2, r7, #8
 3087 00f8 1268     		ldr	r2, [r2]
 3088 00fa 1344     		add	r3, r3, r2
 3089 00fc 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 3090 00fe 052B     		cmp	r3, #5
 3091 0100 00F0FE80 		beq	.L160
 674:..\src/command_processing.c ****                 case 0:   default:    
 675:..\src/command_processing.c ****                     for (i = 0; i < PARAM_LIST[idx].NUM_ITEMS; i++){
 3092              		.loc 1 675 0
 3093 0104 0023     		movs	r3, #0
 3094 0106 C7F8643A 		str	r3, [r7, #2660]
 3095 010a DCE0     		b	.L161
 3096              	.L176:
 676:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 3097              		.loc 1 676 0
 3098 010c 97F8573A 		ldrb	r3, [r7, #2647]	@ zero_extendqisi2
 3099 0110 D7F8642A 		ldr	r2, [r7, #2660]
 3100 0114 02FB03F3 		mul	r3, r2, r3
 3101 0118 1A46     		mov	r2, r3
 3102 011a D7F8583A 		ldr	r3, [r7, #2648]
 3103 011e 1344     		add	r3, r3, r2
 3104 0120 C7F8503A 		str	r3, [r7, #2640]
 677:..\src/command_processing.c ****                         switch (PARAM_LIST[idx].TYPES){
 3105              		.loc 1 677 0
 3106 0124 D7F8603A 		ldr	r3, [r7, #2656]
 3107 0128 1B01     		lsls	r3, r3, #4
 3108 012a 07F10802 		add	r2, r7, #8
 3109 012e 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 84


 3110 0130 1344     		add	r3, r3, r2
 3111 0132 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3112 0134 072B     		cmp	r3, #7
 3113 0136 00F2B980 		bhi	.L162
 3114 013a 01A2     		adr	r2, .L164
 3115 013c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3116              		.p2align 2
 3117              	.L164:
 3118 0140 2F020000 		.word	.L163+1
 3119 0144 7D010000 		.word	.L165+1
 3120 0148 61010000 		.word	.L166+1
 3121 014c 99010000 		.word	.L167+1
 3122 0150 B5010000 		.word	.L168+1
 3123 0154 ED010000 		.word	.L169+1
 3124 0158 D1010000 		.word	.L170+1
 3125 015c 09020000 		.word	.L171+1
 3126              		.p2align 1
 3127              	.L166:
 678:..\src/command_processing.c ****                             case TYPE_UINT8:
 679:..\src/command_processing.c ****                                 aux_uint8 = *((uint8*)m_tmp);
 3128              		.loc 1 679 0
 3129 0160 D7F8503A 		ldr	r3, [r7, #2640]
 3130 0164 1B78     		ldrb	r3, [r3]
 3131 0166 87F84F3A 		strb	r3, [r7, #2639]
 680:..\src/command_processing.c ****                                 sprintf(str, " %d", aux_uint8);
 3132              		.loc 1 680 0
 3133 016a 97F84F2A 		ldrb	r2, [r7, #2639]	@ zero_extendqisi2
 3134 016e 07F11403 		add	r3, r7, #20
 3135 0172 6049     		ldr	r1, .L181+16
 3136 0174 1846     		mov	r0, r3
 3137 0176 FFF7FEFF 		bl	sprintf
 681:..\src/command_processing.c ****                                 break;
 3138              		.loc 1 681 0
 3139 017a 97E0     		b	.L162
 3140              	.L165:
 682:..\src/command_processing.c ****                             case TYPE_INT8:
 683:..\src/command_processing.c ****                                 aux_int8 = *((int8*)m_tmp);
 3141              		.loc 1 683 0
 3142 017c D7F8503A 		ldr	r3, [r7, #2640]
 3143 0180 1B78     		ldrb	r3, [r3]
 3144 0182 87F84E3A 		strb	r3, [r7, #2638]
 684:..\src/command_processing.c ****                                 sprintf(str, " %d", aux_int8);
 3145              		.loc 1 684 0
 3146 0186 97F94E2A 		ldrsb	r2, [r7, #2638]
 3147 018a 07F11403 		add	r3, r7, #20
 3148 018e 5949     		ldr	r1, .L181+16
 3149 0190 1846     		mov	r0, r3
 3150 0192 FFF7FEFF 		bl	sprintf
 685:..\src/command_processing.c ****                                 break;
 3151              		.loc 1 685 0
 3152 0196 89E0     		b	.L162
 3153              	.L167:
 686:..\src/command_processing.c ****                             case TYPE_INT16:   
 687:..\src/command_processing.c ****                                 aux_int16 = *((int16*)m_tmp);
 3154              		.loc 1 687 0
 3155 0198 D7F8503A 		ldr	r3, [r7, #2640]
 3156 019c 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 85


 3157 019e A7F84C3A 		strh	r3, [r7, #2636]	@ movhi
 688:..\src/command_processing.c ****                                 sprintf(str, " %d", aux_int16);
 3158              		.loc 1 688 0
 3159 01a2 B7F94C2A 		ldrsh	r2, [r7, #2636]
 3160 01a6 07F11403 		add	r3, r7, #20
 3161 01aa 5249     		ldr	r1, .L181+16
 3162 01ac 1846     		mov	r0, r3
 3163 01ae FFF7FEFF 		bl	sprintf
 689:..\src/command_processing.c ****                                 break;
 3164              		.loc 1 689 0
 3165 01b2 7BE0     		b	.L162
 3166              	.L168:
 690:..\src/command_processing.c ****                             
 691:..\src/command_processing.c ****                             case TYPE_UINT16: 
 692:..\src/command_processing.c ****                                 aux_uint16 = *((uint16*)m_tmp);
 3167              		.loc 1 692 0
 3168 01b4 D7F8503A 		ldr	r3, [r7, #2640]
 3169 01b8 1B88     		ldrh	r3, [r3]	@ movhi
 3170 01ba A7F84A3A 		strh	r3, [r7, #2634]	@ movhi
 693:..\src/command_processing.c ****                                 sprintf(str, " %d", aux_uint16);
 3171              		.loc 1 693 0
 3172 01be B7F84A2A 		ldrh	r2, [r7, #2634]
 3173 01c2 07F11403 		add	r3, r7, #20
 3174 01c6 4B49     		ldr	r1, .L181+16
 3175 01c8 1846     		mov	r0, r3
 3176 01ca FFF7FEFF 		bl	sprintf
 694:..\src/command_processing.c ****                                 break;
 3177              		.loc 1 694 0
 3178 01ce 6DE0     		b	.L162
 3179              	.L170:
 695:..\src/command_processing.c ****                             
 696:..\src/command_processing.c ****                             case TYPE_UINT32:
 697:..\src/command_processing.c ****                                 aux_uint32 = *((uint32*)m_tmp);
 3180              		.loc 1 697 0
 3181 01d0 D7F8503A 		ldr	r3, [r7, #2640]
 3182 01d4 1B68     		ldr	r3, [r3]
 3183 01d6 C7F8443A 		str	r3, [r7, #2628]
 698:..\src/command_processing.c ****                                 sprintf(str, " %ld", aux_uint32);
 3184              		.loc 1 698 0
 3185 01da 07F11403 		add	r3, r7, #20
 3186 01de D7F8442A 		ldr	r2, [r7, #2628]
 3187 01e2 4549     		ldr	r1, .L181+20
 3188 01e4 1846     		mov	r0, r3
 3189 01e6 FFF7FEFF 		bl	sprintf
 699:..\src/command_processing.c ****                                 break;
 3190              		.loc 1 699 0
 3191 01ea 5FE0     		b	.L162
 3192              	.L169:
 700:..\src/command_processing.c ****                                 
 701:..\src/command_processing.c ****                             case TYPE_INT32:
 702:..\src/command_processing.c ****                                 aux_int32 = *((int32*)m_tmp);
 3193              		.loc 1 702 0
 3194 01ec D7F8503A 		ldr	r3, [r7, #2640]
 3195 01f0 1B68     		ldr	r3, [r3]
 3196 01f2 C7F8403A 		str	r3, [r7, #2624]
 703:..\src/command_processing.c ****                                 sprintf(str, " %ld", aux_int32);
 3197              		.loc 1 703 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 86


 3198 01f6 07F11403 		add	r3, r7, #20
 3199 01fa D7F8402A 		ldr	r2, [r7, #2624]
 3200 01fe 3E49     		ldr	r1, .L181+20
 3201 0200 1846     		mov	r0, r3
 3202 0202 FFF7FEFF 		bl	sprintf
 704:..\src/command_processing.c ****                                 break;
 3203              		.loc 1 704 0
 3204 0206 51E0     		b	.L162
 3205              	.L171:
 705:..\src/command_processing.c ****                                 
 706:..\src/command_processing.c ****                             case TYPE_FLOAT:
 707:..\src/command_processing.c ****                                 aux_float = *((float*)m_tmp);
 3206              		.loc 1 707 0
 3207 0208 D7F8503A 		ldr	r3, [r7, #2640]
 3208 020c 1B68     		ldr	r3, [r3]	@ float
 3209 020e C7F83C3A 		str	r3, [r7, #2620]	@ float
 708:..\src/command_processing.c ****                                 sprintf(str, " %f", aux_float);
 3210              		.loc 1 708 0
 3211 0212 D7F83C0A 		ldr	r0, [r7, #2620]	@ float
 3212 0216 FFF7FEFF 		bl	__aeabi_f2d
 3213 021a 0346     		mov	r3, r0
 3214 021c 0C46     		mov	r4, r1
 3215 021e 07F11400 		add	r0, r7, #20
 3216 0222 1A46     		mov	r2, r3
 3217 0224 2346     		mov	r3, r4
 3218 0226 3549     		ldr	r1, .L181+24
 3219 0228 FFF7FEFF 		bl	sprintf
 709:..\src/command_processing.c ****                                 break;
 3220              		.loc 1 709 0
 3221 022c 3EE0     		b	.L162
 3222              	.L163:
 710:..\src/command_processing.c ****                                 
 711:..\src/command_processing.c ****                             case TYPE_FLAG:
 712:..\src/command_processing.c ****                                 for (i = 0; i < num_menus; i++){
 3223              		.loc 1 712 0
 3224 022e 0023     		movs	r3, #0
 3225 0230 C7F8643A 		str	r3, [r7, #2660]
 3226 0234 32E0     		b	.L172
 3227              	.L175:
 713:..\src/command_processing.c ****                                     if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 3228              		.loc 1 713 0
 3229 0236 D7F8643A 		ldr	r3, [r7, #2660]
 3230 023a 2C22     		movs	r2, #44
 3231 023c 02FB03F3 		mul	r3, r2, r3
 3232 0240 3A1D     		adds	r2, r7, #4
 3233 0242 1268     		ldr	r2, [r2]
 3234 0244 1344     		add	r3, r3, r2
 3235 0246 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3236 0248 D7F8603A 		ldr	r3, [r7, #2656]
 3237 024c 1B01     		lsls	r3, r3, #4
 3238 024e 07F10801 		add	r1, r7, #8
 3239 0252 0968     		ldr	r1, [r1]
 3240 0254 0B44     		add	r3, r3, r1
 3241 0256 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 3242 0258 9A42     		cmp	r2, r3
 3243 025a 1AD1     		bne	.L173
 714:..\src/command_processing.c ****                                         strcpy(str, "");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 87


 3244              		.loc 1 714 0
 3245 025c 214B     		ldr	r3, .L181
 3246 025e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3247 0260 07F11403 		add	r3, r7, #20
 3248 0264 1A70     		strb	r2, [r3]
 715:..\src/command_processing.c ****                                         strcat(str, MENU_LIST[i].choice[*m_addr]);
 3249              		.loc 1 715 0
 3250 0266 D7F8643A 		ldr	r3, [r7, #2660]
 3251 026a 2C22     		movs	r2, #44
 3252 026c 02FB03F3 		mul	r3, r2, r3
 3253 0270 3A1D     		adds	r2, r7, #4
 3254 0272 1268     		ldr	r2, [r2]
 3255 0274 1A44     		add	r2, r2, r3
 3256 0276 D7F8583A 		ldr	r3, [r7, #2648]
 3257 027a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3258 027c 9B00     		lsls	r3, r3, #2
 3259 027e 1344     		add	r3, r3, r2
 3260 0280 5A68     		ldr	r2, [r3, #4]
 3261 0282 07F11403 		add	r3, r7, #20
 3262 0286 1146     		mov	r1, r2
 3263 0288 1846     		mov	r0, r3
 3264 028a FFF7FEFF 		bl	strcat
 716:..\src/command_processing.c ****                                         break;
 3265              		.loc 1 716 0
 3266 028e 00BF     		nop
 717:..\src/command_processing.c ****                                     }
 718:..\src/command_processing.c ****                                 }
 719:..\src/command_processing.c ****                                 break;
 3267              		.loc 1 719 0
 3268 0290 0BE0     		b	.L180
 3269              	.L173:
 712:..\src/command_processing.c ****                                     if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 3270              		.loc 1 712 0 discriminator 2
 3271 0292 D7F8643A 		ldr	r3, [r7, #2660]
 3272 0296 0133     		adds	r3, r3, #1
 3273 0298 C7F8643A 		str	r3, [r7, #2660]
 3274              	.L172:
 712:..\src/command_processing.c ****                                     if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 3275              		.loc 1 712 0 is_stmt 0 discriminator 1
 3276 029c 07F10E03 		add	r3, r7, #14
 3277 02a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3278 02a2 D7F8643A 		ldr	r3, [r7, #2660]
 3279 02a6 9A42     		cmp	r2, r3
 3280 02a8 C5DC     		bgt	.L175
 3281              	.L180:
 3282              		.loc 1 719 0 is_stmt 1
 3283 02aa 00BF     		nop
 3284              	.L162:
 720:..\src/command_processing.c ****                         } 
 721:..\src/command_processing.c ****                         strcat(info_string, str);
 3285              		.loc 1 721 0 discriminator 2
 3286 02ac 07F11402 		add	r2, r7, #20
 3287 02b0 07F17803 		add	r3, r7, #120
 3288 02b4 1146     		mov	r1, r2
 3289 02b6 1846     		mov	r0, r3
 3290 02b8 FFF7FEFF 		bl	strcat
 675:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 88


 3291              		.loc 1 675 0 discriminator 2
 3292 02bc D7F8643A 		ldr	r3, [r7, #2660]
 3293 02c0 0133     		adds	r3, r3, #1
 3294 02c2 C7F8643A 		str	r3, [r7, #2660]
 3295              	.L161:
 675:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 3296              		.loc 1 675 0 is_stmt 0 discriminator 1
 3297 02c6 D7F8603A 		ldr	r3, [r7, #2656]
 3298 02ca 1B01     		lsls	r3, r3, #4
 3299 02cc 07F10802 		add	r2, r7, #8
 3300 02d0 1268     		ldr	r2, [r2]
 3301 02d2 1344     		add	r3, r3, r2
 3302 02d4 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3303 02d6 1A46     		mov	r2, r3
 3304 02d8 D7F8643A 		ldr	r3, [r7, #2660]
 3305 02dc 9A42     		cmp	r2, r3
 3306 02de 3FF715AF 		bgt	.L176
 722:..\src/command_processing.c ****                     }
 723:..\src/command_processing.c ****                     break;
 3307              		.loc 1 723 0 is_stmt 1
 3308 02e2 3EE0     		b	.L177
 3309              	.L182:
 3310              		.align	2
 3311              	.L181:
 3312 02e4 00000000 		.word	.LC8
 3313 02e8 00000000 		.word	superstring
 3314 02ec 00000000 		.word	c_mem
 3315 02f0 78020000 		.word	.LC34
 3316 02f4 88020000 		.word	.LC35
 3317 02f8 8C020000 		.word	.LC36
 3318 02fc 94020000 		.word	.LC37
 3319              	.L160:
 724:..\src/command_processing.c ****                     
 725:..\src/command_processing.c ****                     
 726:..\src/command_processing.c ****                 case CUSTOM_POS_LIM:        
 727:..\src/command_processing.c ****                     aux_int32 = (c_mem.SH_config.pos_lim_inf >> c_mem.SH_config.res);
 3320              		.loc 1 727 0
 3321 0300 344B     		ldr	r3, .L183
 3322 0302 1B6A     		ldr	r3, [r3, #32]
 3323 0304 334A     		ldr	r2, .L183
 3324 0306 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 3325 030a 1341     		asrs	r3, r3, r2
 3326 030c C7F8403A 		str	r3, [r7, #2624]
 728:..\src/command_processing.c ****                     sprintf(str, " %ld", aux_int32);
 3327              		.loc 1 728 0
 3328 0310 07F11403 		add	r3, r7, #20
 3329 0314 D7F8402A 		ldr	r2, [r7, #2624]
 3330 0318 2F49     		ldr	r1, .L183+4
 3331 031a 1846     		mov	r0, r3
 3332 031c FFF7FEFF 		bl	sprintf
 729:..\src/command_processing.c ****                     strcat(info_string, str);
 3333              		.loc 1 729 0
 3334 0320 07F11402 		add	r2, r7, #20
 3335 0324 07F17803 		add	r3, r7, #120
 3336 0328 1146     		mov	r1, r2
 3337 032a 1846     		mov	r0, r3
 3338 032c FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 89


 730:..\src/command_processing.c ****                     aux_int32 = (c_mem.SH_config.pos_lim_sup >> c_mem.SH_config.res);
 3339              		.loc 1 730 0
 3340 0330 284B     		ldr	r3, .L183
 3341 0332 5B6A     		ldr	r3, [r3, #36]
 3342 0334 274A     		ldr	r2, .L183
 3343 0336 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 3344 033a 1341     		asrs	r3, r3, r2
 3345 033c C7F8403A 		str	r3, [r7, #2624]
 731:..\src/command_processing.c ****                     sprintf(str, " %ld", aux_int32);
 3346              		.loc 1 731 0
 3347 0340 07F11403 		add	r3, r7, #20
 3348 0344 D7F8402A 		ldr	r2, [r7, #2624]
 3349 0348 2349     		ldr	r1, .L183+4
 3350 034a 1846     		mov	r0, r3
 3351 034c FFF7FEFF 		bl	sprintf
 732:..\src/command_processing.c ****                     strcat(info_string, str);
 3352              		.loc 1 732 0
 3353 0350 07F11402 		add	r2, r7, #20
 3354 0354 07F17803 		add	r3, r7, #120
 3355 0358 1146     		mov	r1, r2
 3356 035a 1846     		mov	r0, r3
 3357 035c FFF7FEFF 		bl	strcat
 733:..\src/command_processing.c ****                     break;
 3358              		.loc 1 733 0
 3359 0360 00BF     		nop
 3360              	.L177:
 734:..\src/command_processing.c ****                 }
 735:..\src/command_processing.c ****                 
 736:..\src/command_processing.c ****                 strcat(info_string, "\n");
 3361              		.loc 1 736 0
 3362 0362 07F17803 		add	r3, r7, #120
 3363 0366 1846     		mov	r0, r3
 3364 0368 FFF7FEFF 		bl	strlen
 3365 036c 0346     		mov	r3, r0
 3366 036e 1A46     		mov	r2, r3
 3367 0370 07F17803 		add	r3, r7, #120
 3368 0374 1344     		add	r3, r3, r2
 3369 0376 1949     		ldr	r1, .L183+8
 3370 0378 1A46     		mov	r2, r3
 3371 037a 0B46     		mov	r3, r1
 3372 037c 1B88     		ldrh	r3, [r3]	@ unaligned
 3373 037e 1380     		strh	r3, [r2]	@ unaligned
 3374              	.L158:
 3375              	.LBE26:
 668:..\src/command_processing.c ****             if (PARAM_LIST[idx].ping){
 3376              		.loc 1 668 0 discriminator 2
 3377 0380 D7F8603A 		ldr	r3, [r7, #2656]
 3378 0384 0133     		adds	r3, r3, #1
 3379 0386 C7F8603A 		str	r3, [r7, #2656]
 3380              	.L157:
 668:..\src/command_processing.c ****             if (PARAM_LIST[idx].ping){
 3381              		.loc 1 668 0 is_stmt 0 discriminator 1
 3382 038a 07F10F03 		add	r3, r7, #15
 3383 038e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3384 0390 D7F8603A 		ldr	r3, [r7, #2656]
 3385 0394 9A42     		cmp	r2, r3
 3386 0396 3FF779AE 		bgt	.L178
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 90


 737:..\src/command_processing.c ****                 
 738:..\src/command_processing.c ****             }
 739:..\src/command_processing.c ****             
 740:..\src/command_processing.c ****         }
 741:..\src/command_processing.c ****               
 742:..\src/command_processing.c ****       
 743:..\src/command_processing.c ****     strcat(superstring,info_string);
 3387              		.loc 1 743 0 is_stmt 1
 3388 039a 07F17803 		add	r3, r7, #120
 3389 039e 1946     		mov	r1, r3
 3390 03a0 0F48     		ldr	r0, .L183+12
 3391 03a2 FFF7FEFF 		bl	strcat
 744:..\src/command_processing.c ****     strcat(superstring,"ertyuioooiuytu");
 3392              		.loc 1 744 0
 3393 03a6 0E48     		ldr	r0, .L183+12
 3394 03a8 FFF7FEFF 		bl	strlen
 3395 03ac 0346     		mov	r3, r0
 3396 03ae 1A46     		mov	r2, r3
 3397 03b0 0B4B     		ldr	r3, .L183+12
 3398 03b2 1344     		add	r3, r3, r2
 3399 03b4 0B4A     		ldr	r2, .L183+16
 3400 03b6 1C46     		mov	r4, r3
 3401 03b8 1346     		mov	r3, r2
 3402 03ba 07CB     		ldmia	r3!, {r0, r1, r2}
 3403 03bc 2060     		str	r0, [r4]	@ unaligned
 3404 03be 6160     		str	r1, [r4, #4]	@ unaligned
 3405 03c0 A260     		str	r2, [r4, #8]	@ unaligned
 3406 03c2 1A88     		ldrh	r2, [r3]	@ unaligned
 3407 03c4 9B78     		ldrb	r3, [r3, #2]
 3408 03c6 A281     		strh	r2, [r4, #12]	@ unaligned
 3409 03c8 A373     		strb	r3, [r4, #14]
 3410              	.L179:
 3411              	.LBE25:
 745:..\src/command_processing.c **** }}
 3412              		.loc 1 745 0
 3413 03ca 00BF     		nop
 3414 03cc 07F66C27 		addw	r7, r7, #2668
 3415              		.cfi_def_cfa_offset 12
 3416 03d0 BD46     		mov	sp, r7
 3417              		.cfi_def_cfa_register 13
 3418              		@ sp needed
 3419 03d2 90BD     		pop	{r4, r7, pc}
 3420              	.L184:
 3421              		.align	2
 3422              	.L183:
 3423 03d4 00000000 		.word	c_mem
 3424 03d8 8C020000 		.word	.LC36
 3425 03dc 28000000 		.word	.LC17
 3426 03e0 00000000 		.word	superstring
 3427 03e4 98020000 		.word	.LC38
 3428              		.cfi_endproc
 3429              	.LFE73:
 3430              		.size	qbadminp_string, .-qbadminp_string
 3431              		.section	.rodata
 3432 02a7 00       		.align	2
 3433              	.LC39:
 3434 02a8 0D0A00   		.ascii	"\015\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 91


 3435 02ab 00       		.align	2
 3436              	.LC40:
 3437 02ac 4669726D 		.ascii	"Firmware version: \000"
 3437      77617265 
 3437      20766572 
 3437      73696F6E 
 3437      3A2000
 3438 02bf 00       		.align	2
 3439              	.LC41:
 3440 02c0 4149525F 		.ascii	"AIR_CHAMBERS_and_VIBROTACTILE_FB\000"
 3440      4348414D 
 3440      42455253 
 3440      5F616E64 
 3440      5F564942 
 3441 02e1 000000   		.align	2
 3442              	.LC42:
 3443 02e4 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 3443      0A00
 3444 02ea 0000     		.align	2
 3445              	.LC43:
 3446 02ec 44455649 		.ascii	"DEVICE INFO\015\012\000"
 3446      43452049 
 3446      4E464F0D 
 3446      0A00
 3447 02fa 0000     		.align	2
 3448              	.LC44:
 3449 02fc 44657669 		.ascii	"Device: PULSE\015\012\000"
 3449      63653A20 
 3449      50554C53 
 3449      450D0A00 
 3450              		.align	2
 3451              	.LC45:
 3452 030c 454D4720 		.ascii	"EMG input %d -> %d\000"
 3452      696E7075 
 3452      74202564 
 3452      202D3E20 
 3452      256400
 3453 031f 00       		.align	2
 3454              	.LC46:
 3455 0320 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 3455      20465720 
 3455      6379636C 
 3455      65207469 
 3455      6D653A20 
 3456              		.align	2
 3457              	.LC47:
 3458 033c 0D0A0000 		.ascii	"\015\012\000\000"
 3459              		.section	.text.prepare_generic_info,"ax",%progbits
 3460              		.align	2
 3461              		.global	prepare_generic_info
 3462              		.thumb
 3463              		.thumb_func
 3464              		.type	prepare_generic_info, %function
 3465              	prepare_generic_info:
 3466              	.LFB74:
 746:..\src/command_processing.c **** //==============================================================================
 747:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 92


 748:..\src/command_processing.c **** //==============================================================================
 749:..\src/command_processing.c **** 
 750:..\src/command_processing.c **** void prepare_generic_info(char *info_string){   
 3467              		.loc 1 750 0
 3468              		.cfi_startproc
 3469              		@ args = 0, pretend = 0, frame = 120
 3470              		@ frame_needed = 1, uses_anonymous_args = 0
 3471 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3472              		.cfi_def_cfa_offset 20
 3473              		.cfi_offset 4, -20
 3474              		.cfi_offset 5, -16
 3475              		.cfi_offset 6, -12
 3476              		.cfi_offset 7, -8
 3477              		.cfi_offset 14, -4
 3478 0002 9FB0     		sub	sp, sp, #124
 3479              		.cfi_def_cfa_offset 144
 3480 0004 00AF     		add	r7, sp, #0
 3481              		.cfi_def_cfa_register 7
 3482 0006 7860     		str	r0, [r7, #4]
 751:..\src/command_processing.c ****      manage_param_list(300,0);
 3483              		.loc 1 751 0
 3484 0008 0021     		movs	r1, #0
 3485 000a 4FF49670 		mov	r0, #300
 3486 000e FFF7FEFF 		bl	manage_param_list
 752:..\src/command_processing.c ****     int i;
 753:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 3487              		.loc 1 753 0
 3488 0012 654B     		ldr	r3, .L191
 3489 0014 3B67     		str	r3, [r7, #112]
 754:..\src/command_processing.c ****     
 755:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 3490              		.loc 1 755 0
 3491 0016 644B     		ldr	r3, .L191
 3492 0018 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3493 001a FA2B     		cmp	r3, #250
 3494 001c 00F0BF80 		beq	.L190
 3495              	.LBB27:
 756:..\src/command_processing.c ****         
 757:..\src/command_processing.c ****         char str[100];
 758:..\src/command_processing.c ****         strcpy(info_string, "");
 3496              		.loc 1 758 0
 3497 0020 7B68     		ldr	r3, [r7, #4]
 3498 0022 0022     		movs	r2, #0
 3499 0024 1A70     		strb	r2, [r3]
 759:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 3500              		.loc 1 759 0
 3501 0026 7868     		ldr	r0, [r7, #4]
 3502 0028 FFF7FEFF 		bl	strlen
 3503 002c 0346     		mov	r3, r0
 3504 002e 1A46     		mov	r2, r3
 3505 0030 7B68     		ldr	r3, [r7, #4]
 3506 0032 1344     		add	r3, r3, r2
 3507 0034 5D4A     		ldr	r2, .L191+4
 3508 0036 1188     		ldrh	r1, [r2]	@ unaligned
 3509 0038 9278     		ldrb	r2, [r2, #2]
 3510 003a 1980     		strh	r1, [r3]	@ unaligned
 3511 003c 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 93


 760:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 3512              		.loc 1 760 0
 3513 003e 7868     		ldr	r0, [r7, #4]
 3514 0040 FFF7FEFF 		bl	strlen
 3515 0044 0346     		mov	r3, r0
 3516 0046 1A46     		mov	r2, r3
 3517 0048 7B68     		ldr	r3, [r7, #4]
 3518 004a 1344     		add	r3, r3, r2
 3519 004c 584A     		ldr	r2, .L191+8
 3520 004e 1D46     		mov	r5, r3
 3521 0050 1446     		mov	r4, r2
 3522 0052 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3523 0054 2860     		str	r0, [r5]	@ unaligned
 3524 0056 6960     		str	r1, [r5, #4]	@ unaligned
 3525 0058 AA60     		str	r2, [r5, #8]	@ unaligned
 3526 005a EB60     		str	r3, [r5, #12]	@ unaligned
 3527 005c 2388     		ldrh	r3, [r4]	@ unaligned
 3528 005e A278     		ldrb	r2, [r4, #2]
 3529 0060 2B82     		strh	r3, [r5, #16]	@ unaligned
 3530 0062 1346     		mov	r3, r2
 3531 0064 AB74     		strb	r3, [r5, #18]
 761:..\src/command_processing.c ****         strcat(info_string, VERSION);
 3532              		.loc 1 761 0
 3533 0066 7868     		ldr	r0, [r7, #4]
 3534 0068 FFF7FEFF 		bl	strlen
 3535 006c 0346     		mov	r3, r0
 3536 006e 1A46     		mov	r2, r3
 3537 0070 7B68     		ldr	r3, [r7, #4]
 3538 0072 1344     		add	r3, r3, r2
 3539 0074 4F4A     		ldr	r2, .L191+12
 3540 0076 1446     		mov	r4, r2
 3541 0078 9E46     		mov	lr, r3
 3542 007a 04F1200C 		add	ip, r4, #32
 3543              	.L187:
 3544 007e 7546     		mov	r5, lr
 3545 0080 2646     		mov	r6, r4
 3546 0082 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3547 0084 2860     		str	r0, [r5]	@ unaligned
 3548 0086 6960     		str	r1, [r5, #4]	@ unaligned
 3549 0088 AA60     		str	r2, [r5, #8]	@ unaligned
 3550 008a EB60     		str	r3, [r5, #12]	@ unaligned
 3551 008c 1034     		adds	r4, r4, #16
 3552 008e 0EF1100E 		add	lr, lr, #16
 3553 0092 6445     		cmp	r4, ip
 3554 0094 F3D1     		bne	.L187
 3555 0096 7346     		mov	r3, lr
 3556 0098 2246     		mov	r2, r4
 3557 009a 1278     		ldrb	r2, [r2]
 3558 009c 1A70     		strb	r2, [r3]
 762:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 3559              		.loc 1 762 0
 3560 009e 7868     		ldr	r0, [r7, #4]
 3561 00a0 FFF7FEFF 		bl	strlen
 3562 00a4 0346     		mov	r3, r0
 3563 00a6 1A46     		mov	r2, r3
 3564 00a8 7B68     		ldr	r3, [r7, #4]
 3565 00aa 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 94


 3566 00ac 424A     		ldr	r2, .L191+16
 3567 00ae 1068     		ldr	r0, [r2]	@ unaligned
 3568 00b0 1860     		str	r0, [r3]	@ unaligned
 3569 00b2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3570 00b4 9A80     		strh	r2, [r3, #4]	@ unaligned
 763:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 3571              		.loc 1 763 0
 3572 00b6 7868     		ldr	r0, [r7, #4]
 3573 00b8 FFF7FEFF 		bl	strlen
 3574 00bc 0346     		mov	r3, r0
 3575 00be 1A46     		mov	r2, r3
 3576 00c0 7B68     		ldr	r3, [r7, #4]
 3577 00c2 1344     		add	r3, r3, r2
 3578 00c4 3D4A     		ldr	r2, .L191+20
 3579 00c6 1C46     		mov	r4, r3
 3580 00c8 1346     		mov	r3, r2
 3581 00ca 07CB     		ldmia	r3!, {r0, r1, r2}
 3582 00cc 2060     		str	r0, [r4]	@ unaligned
 3583 00ce 6160     		str	r1, [r4, #4]	@ unaligned
 3584 00d0 A260     		str	r2, [r4, #8]	@ unaligned
 3585 00d2 1B88     		ldrh	r3, [r3]	@ unaligned
 3586 00d4 A381     		strh	r3, [r4, #12]	@ unaligned
 764:..\src/command_processing.c ****         strcat(info_string, "Device: PULSE\r\n");
 3587              		.loc 1 764 0
 3588 00d6 7868     		ldr	r0, [r7, #4]
 3589 00d8 FFF7FEFF 		bl	strlen
 3590 00dc 0346     		mov	r3, r0
 3591 00de 1A46     		mov	r2, r3
 3592 00e0 7B68     		ldr	r3, [r7, #4]
 3593 00e2 1344     		add	r3, r3, r2
 3594 00e4 364A     		ldr	r2, .L191+24
 3595 00e6 1C46     		mov	r4, r3
 3596 00e8 1546     		mov	r5, r2
 3597 00ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3598 00ec 2060     		str	r0, [r4]	@ unaligned
 3599 00ee 6160     		str	r1, [r4, #4]	@ unaligned
 3600 00f0 A260     		str	r2, [r4, #8]	@ unaligned
 3601 00f2 E360     		str	r3, [r4, #12]	@ unaligned
 765:..\src/command_processing.c ****         strcat(info_string, superstring);
 3602              		.loc 1 765 0
 3603 00f4 3349     		ldr	r1, .L191+28
 3604 00f6 7868     		ldr	r0, [r7, #4]
 3605 00f8 FFF7FEFF 		bl	strcat
 766:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 3606              		.loc 1 766 0
 3607 00fc 7868     		ldr	r0, [r7, #4]
 3608 00fe FFF7FEFF 		bl	strlen
 3609 0102 0346     		mov	r3, r0
 3610 0104 1A46     		mov	r2, r3
 3611 0106 7B68     		ldr	r3, [r7, #4]
 3612 0108 1344     		add	r3, r3, r2
 3613 010a 284A     		ldr	r2, .L191+4
 3614 010c 1188     		ldrh	r1, [r2]	@ unaligned
 3615 010e 9278     		ldrb	r2, [r2, #2]
 3616 0110 1980     		strh	r1, [r3]	@ unaligned
 3617 0112 9A70     		strb	r2, [r3, #2]
 767:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 95


 768:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 3618              		.loc 1 768 0
 3619 0114 0023     		movs	r3, #0
 3620 0116 7B67     		str	r3, [r7, #116]
 3621 0118 20E0     		b	.L188
 3622              	.L189:
 769:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 3623              		.loc 1 769 0 discriminator 3
 3624 011a 7B6F     		ldr	r3, [r7, #116]
 3625 011c 591C     		adds	r1, r3, #1
 3626 011e 2A4A     		ldr	r2, .L191+32
 3627 0120 7B6F     		ldr	r3, [r7, #116]
 3628 0122 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3629 0126 07F10C00 		add	r0, r7, #12
 3630 012a 0A46     		mov	r2, r1
 3631 012c 2749     		ldr	r1, .L191+36
 3632 012e FFF7FEFF 		bl	sprintf
 770:..\src/command_processing.c ****                 strcat(info_string, str);
 3633              		.loc 1 770 0 discriminator 3
 3634 0132 07F10C03 		add	r3, r7, #12
 3635 0136 1946     		mov	r1, r3
 3636 0138 7868     		ldr	r0, [r7, #4]
 3637 013a FFF7FEFF 		bl	strcat
 771:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 3638              		.loc 1 771 0 discriminator 3
 3639 013e 7868     		ldr	r0, [r7, #4]
 3640 0140 FFF7FEFF 		bl	strlen
 3641 0144 0346     		mov	r3, r0
 3642 0146 1A46     		mov	r2, r3
 3643 0148 7B68     		ldr	r3, [r7, #4]
 3644 014a 1344     		add	r3, r3, r2
 3645 014c 174A     		ldr	r2, .L191+4
 3646 014e 1188     		ldrh	r1, [r2]	@ unaligned
 3647 0150 9278     		ldrb	r2, [r2, #2]
 3648 0152 1980     		strh	r1, [r3]	@ unaligned
 3649 0154 9A70     		strb	r2, [r3, #2]
 768:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 3650              		.loc 1 768 0 discriminator 3
 3651 0156 7B6F     		ldr	r3, [r7, #116]
 3652 0158 0133     		adds	r3, r3, #1
 3653 015a 7B67     		str	r3, [r7, #116]
 3654              	.L188:
 768:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 3655              		.loc 1 768 0 is_stmt 0 discriminator 1
 3656 015c 7B6F     		ldr	r3, [r7, #116]
 3657 015e 012B     		cmp	r3, #1
 3658 0160 DBDD     		ble	.L189
 772:..\src/command_processing.c ****             }
 773:..\src/command_processing.c **** 
 774:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 3659              		.loc 1 774 0 is_stmt 1
 3660 0162 1B4B     		ldr	r3, .L191+40
 3661 0164 1B88     		ldrh	r3, [r3]
 3662 0166 1A46     		mov	r2, r3
 3663 0168 1A4B     		ldr	r3, .L191+44
 3664 016a 1B88     		ldrh	r3, [r3]
 3665 016c D21A     		subs	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 96


 3666 016e 07F10C03 		add	r3, r7, #12
 3667 0172 1949     		ldr	r1, .L191+48
 3668 0174 1846     		mov	r0, r3
 3669 0176 FFF7FEFF 		bl	sprintf
 775:..\src/command_processing.c ****         strcat(info_string, str);
 3670              		.loc 1 775 0
 3671 017a 07F10C03 		add	r3, r7, #12
 3672 017e 1946     		mov	r1, r3
 3673 0180 7868     		ldr	r0, [r7, #4]
 3674 0182 FFF7FEFF 		bl	strcat
 776:..\src/command_processing.c **** 
 777:..\src/command_processing.c ****                
 778:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 3675              		.loc 1 778 0
 3676 0186 7868     		ldr	r0, [r7, #4]
 3677 0188 FFF7FEFF 		bl	strlen
 3678 018c 0346     		mov	r3, r0
 3679 018e 1A46     		mov	r2, r3
 3680 0190 7B68     		ldr	r3, [r7, #4]
 3681 0192 1344     		add	r3, r3, r2
 3682 0194 114A     		ldr	r2, .L191+52
 3683 0196 1188     		ldrh	r1, [r2]	@ unaligned
 3684 0198 9278     		ldrb	r2, [r2, #2]
 3685 019a 1980     		strh	r1, [r3]	@ unaligned
 3686 019c 9A70     		strb	r2, [r3, #2]
 3687              	.L190:
 3688              	.LBE27:
 779:..\src/command_processing.c ****     }
 780:..\src/command_processing.c **** }
 3689              		.loc 1 780 0
 3690 019e 00BF     		nop
 3691 01a0 7C37     		adds	r7, r7, #124
 3692              		.cfi_def_cfa_offset 20
 3693 01a2 BD46     		mov	sp, r7
 3694              		.cfi_def_cfa_register 13
 3695              		@ sp needed
 3696 01a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 3697              	.L192:
 3698 01a6 00BF     		.align	2
 3699              	.L191:
 3700 01a8 00000000 		.word	c_mem
 3701 01ac A8020000 		.word	.LC39
 3702 01b0 AC020000 		.word	.LC40
 3703 01b4 C0020000 		.word	.LC41
 3704 01b8 E4020000 		.word	.LC42
 3705 01bc EC020000 		.word	.LC43
 3706 01c0 FC020000 		.word	.LC44
 3707 01c4 00000000 		.word	superstring
 3708 01c8 00000000 		.word	g_adc_meas
 3709 01cc 0C030000 		.word	.LC45
 3710 01d0 00000000 		.word	timer_value0
 3711 01d4 00000000 		.word	timer_value
 3712 01d8 20030000 		.word	.LC46
 3713 01dc 3C030000 		.word	.LC47
 3714              		.cfi_endproc
 3715              	.LFE74:
 3716              		.size	prepare_generic_info, .-prepare_generic_info
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 97


 3717              		.section	.text.prepare_counter_info,"ax",%progbits
 3718              		.align	2
 3719              		.global	prepare_counter_info
 3720              		.thumb
 3721              		.thumb_func
 3722              		.type	prepare_counter_info, %function
 3723              	prepare_counter_info:
 3724              	.LFB75:
 781:..\src/command_processing.c **** 
 782:..\src/command_processing.c **** //==============================================================================
 783:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
 784:..\src/command_processing.c **** //==============================================================================
 785:..\src/command_processing.c **** 
 786:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
 787:..\src/command_processing.c **** {
 3725              		.loc 1 787 0
 3726              		.cfi_startproc
 3727              		@ args = 0, pretend = 0, frame = 8
 3728              		@ frame_needed = 1, uses_anonymous_args = 0
 3729              		@ link register save eliminated.
 3730 0000 80B4     		push	{r7}
 3731              		.cfi_def_cfa_offset 4
 3732              		.cfi_offset 7, -4
 3733 0002 83B0     		sub	sp, sp, #12
 3734              		.cfi_def_cfa_offset 16
 3735 0004 00AF     		add	r7, sp, #0
 3736              		.cfi_def_cfa_register 7
 3737 0006 7860     		str	r0, [r7, #4]
 788:..\src/command_processing.c **** }
 3738              		.loc 1 788 0
 3739 0008 00BF     		nop
 3740 000a 0C37     		adds	r7, r7, #12
 3741              		.cfi_def_cfa_offset 4
 3742 000c BD46     		mov	sp, r7
 3743              		.cfi_def_cfa_register 13
 3744              		@ sp needed
 3745 000e 80BC     		pop	{r7}
 3746              		.cfi_restore 7
 3747              		.cfi_def_cfa_offset 0
 3748 0010 7047     		bx	lr
 3749              		.cfi_endproc
 3750              	.LFE75:
 3751              		.size	prepare_counter_info, .-prepare_counter_info
 3752 0012 00BF     		.section	.text.prepare_R01_info,"ax",%progbits
 3753              		.align	2
 3754              		.global	prepare_R01_info
 3755              		.thumb
 3756              		.thumb_func
 3757              		.type	prepare_R01_info, %function
 3758              	prepare_R01_info:
 3759              	.LFB76:
 789:..\src/command_processing.c **** 
 790:..\src/command_processing.c **** //==============================================================================
 791:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
 792:..\src/command_processing.c **** //==============================================================================
 793:..\src/command_processing.c **** 
 794:..\src/command_processing.c **** void prepare_R01_info(char *info_string)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 98


 795:..\src/command_processing.c **** {
 3760              		.loc 1 795 0
 3761              		.cfi_startproc
 3762              		@ args = 0, pretend = 0, frame = 8
 3763              		@ frame_needed = 1, uses_anonymous_args = 0
 3764              		@ link register save eliminated.
 3765 0000 80B4     		push	{r7}
 3766              		.cfi_def_cfa_offset 4
 3767              		.cfi_offset 7, -4
 3768 0002 83B0     		sub	sp, sp, #12
 3769              		.cfi_def_cfa_offset 16
 3770 0004 00AF     		add	r7, sp, #0
 3771              		.cfi_def_cfa_register 7
 3772 0006 7860     		str	r0, [r7, #4]
 796:..\src/command_processing.c **** }
 3773              		.loc 1 796 0
 3774 0008 00BF     		nop
 3775 000a 0C37     		adds	r7, r7, #12
 3776              		.cfi_def_cfa_offset 4
 3777 000c BD46     		mov	sp, r7
 3778              		.cfi_def_cfa_register 13
 3779              		@ sp needed
 3780 000e 80BC     		pop	{r7}
 3781              		.cfi_restore 7
 3782              		.cfi_def_cfa_offset 0
 3783 0010 7047     		bx	lr
 3784              		.cfi_endproc
 3785              	.LFE76:
 3786              		.size	prepare_R01_info, .-prepare_R01_info
 3787 0012 00BF     		.section	.text.prepare_SD_param_info,"ax",%progbits
 3788              		.align	2
 3789              		.global	prepare_SD_param_info
 3790              		.thumb
 3791              		.thumb_func
 3792              		.type	prepare_SD_param_info, %function
 3793              	prepare_SD_param_info:
 3794              	.LFB77:
 797:..\src/command_processing.c **** 
 798:..\src/command_processing.c **** //==============================================================================
 799:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
 800:..\src/command_processing.c **** //==============================================================================
 801:..\src/command_processing.c **** 
 802:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
 803:..\src/command_processing.c **** {
 3795              		.loc 1 803 0
 3796              		.cfi_startproc
 3797              		@ args = 0, pretend = 0, frame = 8
 3798              		@ frame_needed = 1, uses_anonymous_args = 0
 3799              		@ link register save eliminated.
 3800 0000 80B4     		push	{r7}
 3801              		.cfi_def_cfa_offset 4
 3802              		.cfi_offset 7, -4
 3803 0002 83B0     		sub	sp, sp, #12
 3804              		.cfi_def_cfa_offset 16
 3805 0004 00AF     		add	r7, sp, #0
 3806              		.cfi_def_cfa_register 7
 3807 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 99


 804:..\src/command_processing.c **** }
 3808              		.loc 1 804 0
 3809 0008 00BF     		nop
 3810 000a 0C37     		adds	r7, r7, #12
 3811              		.cfi_def_cfa_offset 4
 3812 000c BD46     		mov	sp, r7
 3813              		.cfi_def_cfa_register 13
 3814              		@ sp needed
 3815 000e 80BC     		pop	{r7}
 3816              		.cfi_restore 7
 3817              		.cfi_def_cfa_offset 0
 3818 0010 7047     		bx	lr
 3819              		.cfi_endproc
 3820              	.LFE77:
 3821              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 3822 0012 00BF     		.section	.text.prepare_SD_legend,"ax",%progbits
 3823              		.align	2
 3824              		.global	prepare_SD_legend
 3825              		.thumb
 3826              		.thumb_func
 3827              		.type	prepare_SD_legend, %function
 3828              	prepare_SD_legend:
 3829              	.LFB78:
 805:..\src/command_processing.c **** 
 806:..\src/command_processing.c **** 
 807:..\src/command_processing.c **** //==============================================================================
 808:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
 809:..\src/command_processing.c **** //==============================================================================
 810:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
 811:..\src/command_processing.c **** {
 3830              		.loc 1 811 0
 3831              		.cfi_startproc
 3832              		@ args = 0, pretend = 0, frame = 8
 3833              		@ frame_needed = 1, uses_anonymous_args = 0
 3834              		@ link register save eliminated.
 3835 0000 80B4     		push	{r7}
 3836              		.cfi_def_cfa_offset 4
 3837              		.cfi_offset 7, -4
 3838 0002 83B0     		sub	sp, sp, #12
 3839              		.cfi_def_cfa_offset 16
 3840 0004 00AF     		add	r7, sp, #0
 3841              		.cfi_def_cfa_register 7
 3842 0006 7860     		str	r0, [r7, #4]
 812:..\src/command_processing.c **** }
 3843              		.loc 1 812 0
 3844 0008 00BF     		nop
 3845 000a 0C37     		adds	r7, r7, #12
 3846              		.cfi_def_cfa_offset 4
 3847 000c BD46     		mov	sp, r7
 3848              		.cfi_def_cfa_register 13
 3849              		@ sp needed
 3850 000e 80BC     		pop	{r7}
 3851              		.cfi_restore 7
 3852              		.cfi_def_cfa_offset 0
 3853 0010 7047     		bx	lr
 3854              		.cfi_endproc
 3855              	.LFE78:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 100


 3856              		.size	prepare_SD_legend, .-prepare_SD_legend
 3857 0012 00BF     		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 3858              		.align	2
 3859              		.global	prepare_SD_EMG_History_legend
 3860              		.thumb
 3861              		.thumb_func
 3862              		.type	prepare_SD_EMG_History_legend, %function
 3863              	prepare_SD_EMG_History_legend:
 3864              	.LFB79:
 813:..\src/command_processing.c **** 
 814:..\src/command_processing.c **** //==============================================================================
 815:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
 816:..\src/command_processing.c **** //==============================================================================
 817:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
 818:..\src/command_processing.c **** {
 3865              		.loc 1 818 0
 3866              		.cfi_startproc
 3867              		@ args = 0, pretend = 0, frame = 8
 3868              		@ frame_needed = 1, uses_anonymous_args = 0
 3869              		@ link register save eliminated.
 3870 0000 80B4     		push	{r7}
 3871              		.cfi_def_cfa_offset 4
 3872              		.cfi_offset 7, -4
 3873 0002 83B0     		sub	sp, sp, #12
 3874              		.cfi_def_cfa_offset 16
 3875 0004 00AF     		add	r7, sp, #0
 3876              		.cfi_def_cfa_register 7
 3877 0006 7860     		str	r0, [r7, #4]
 819:..\src/command_processing.c ****     
 820:..\src/command_processing.c **** }
 3878              		.loc 1 820 0
 3879 0008 00BF     		nop
 3880 000a 0C37     		adds	r7, r7, #12
 3881              		.cfi_def_cfa_offset 4
 3882 000c BD46     		mov	sp, r7
 3883              		.cfi_def_cfa_register 13
 3884              		@ sp needed
 3885 000e 80BC     		pop	{r7}
 3886              		.cfi_restore 7
 3887              		.cfi_def_cfa_offset 0
 3888 0010 7047     		bx	lr
 3889              		.cfi_endproc
 3890              	.LFE79:
 3891              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 3892 0012 00BF     		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 3893              		.align	2
 3894              		.global	prepare_SD_EMG_history
 3895              		.thumb
 3896              		.thumb_func
 3897              		.type	prepare_SD_EMG_history, %function
 3898              	prepare_SD_EMG_history:
 3899              	.LFB80:
 821:..\src/command_processing.c **** 
 822:..\src/command_processing.c **** //==============================================================================
 823:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
 824:..\src/command_processing.c **** //==============================================================================
 825:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 101


 826:..\src/command_processing.c **** {
 3900              		.loc 1 826 0
 3901              		.cfi_startproc
 3902              		@ args = 0, pretend = 0, frame = 8
 3903              		@ frame_needed = 1, uses_anonymous_args = 0
 3904              		@ link register save eliminated.
 3905 0000 80B4     		push	{r7}
 3906              		.cfi_def_cfa_offset 4
 3907              		.cfi_offset 7, -4
 3908 0002 83B0     		sub	sp, sp, #12
 3909              		.cfi_def_cfa_offset 16
 3910 0004 00AF     		add	r7, sp, #0
 3911              		.cfi_def_cfa_register 7
 3912 0006 7860     		str	r0, [r7, #4]
 827:..\src/command_processing.c ****         
 828:..\src/command_processing.c **** }
 3913              		.loc 1 828 0
 3914 0008 00BF     		nop
 3915 000a 0C37     		adds	r7, r7, #12
 3916              		.cfi_def_cfa_offset 4
 3917 000c BD46     		mov	sp, r7
 3918              		.cfi_def_cfa_register 13
 3919              		@ sp needed
 3920 000e 80BC     		pop	{r7}
 3921              		.cfi_restore 7
 3922              		.cfi_def_cfa_offset 0
 3923 0010 7047     		bx	lr
 3924              		.cfi_endproc
 3925              	.LFE80:
 3926              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 3927 0012 00BF     		.section	.text.IMU_reading_info,"ax",%progbits
 3928              		.align	2
 3929              		.global	IMU_reading_info
 3930              		.thumb
 3931              		.thumb_func
 3932              		.type	IMU_reading_info, %function
 3933              	IMU_reading_info:
 3934              	.LFB81:
 829:..\src/command_processing.c **** 
 830:..\src/command_processing.c **** //==============================================================================
 831:..\src/command_processing.c **** //                                                              IMU READING INFO
 832:..\src/command_processing.c **** //==============================================================================
 833:..\src/command_processing.c **** 
 834:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
 835:..\src/command_processing.c **** {
 3935              		.loc 1 835 0
 3936              		.cfi_startproc
 3937              		@ args = 0, pretend = 0, frame = 8
 3938              		@ frame_needed = 1, uses_anonymous_args = 0
 3939              		@ link register save eliminated.
 3940 0000 80B4     		push	{r7}
 3941              		.cfi_def_cfa_offset 4
 3942              		.cfi_offset 7, -4
 3943 0002 83B0     		sub	sp, sp, #12
 3944              		.cfi_def_cfa_offset 16
 3945 0004 00AF     		add	r7, sp, #0
 3946              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 102


 3947 0006 7860     		str	r0, [r7, #4]
 836:..\src/command_processing.c **** }
 3948              		.loc 1 836 0
 3949 0008 00BF     		nop
 3950 000a 0C37     		adds	r7, r7, #12
 3951              		.cfi_def_cfa_offset 4
 3952 000c BD46     		mov	sp, r7
 3953              		.cfi_def_cfa_register 13
 3954              		@ sp needed
 3955 000e 80BC     		pop	{r7}
 3956              		.cfi_restore 7
 3957              		.cfi_def_cfa_offset 0
 3958 0010 7047     		bx	lr
 3959              		.cfi_endproc
 3960              	.LFE81:
 3961              		.size	IMU_reading_info, .-IMU_reading_info
 3962 0012 00BF     		.section	.text.commWrite_old_id,"ax",%progbits
 3963              		.align	2
 3964              		.global	commWrite_old_id
 3965              		.thumb
 3966              		.thumb_func
 3967              		.type	commWrite_old_id, %function
 3968              	commWrite_old_id:
 3969              	.LFB82:
 837:..\src/command_processing.c **** 
 838:..\src/command_processing.c **** //==============================================================================
 839:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
 840:..\src/command_processing.c **** //==============================================================================
 841:..\src/command_processing.c **** 
 842:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_length, uint8 old_id)
 843:..\src/command_processing.c **** {
 3970              		.loc 1 843 0
 3971              		.cfi_startproc
 3972              		@ args = 0, pretend = 0, frame = 16
 3973              		@ frame_needed = 1, uses_anonymous_args = 0
 3974 0000 80B5     		push	{r7, lr}
 3975              		.cfi_def_cfa_offset 8
 3976              		.cfi_offset 7, -8
 3977              		.cfi_offset 14, -4
 3978 0002 84B0     		sub	sp, sp, #16
 3979              		.cfi_def_cfa_offset 24
 3980 0004 00AF     		add	r7, sp, #0
 3981              		.cfi_def_cfa_register 7
 3982 0006 7860     		str	r0, [r7, #4]
 3983 0008 0B46     		mov	r3, r1
 3984 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 3985 000c 1346     		mov	r3, r2
 3986 000e 7B70     		strb	r3, [r7, #1]
 844:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
 845:..\src/command_processing.c **** 
 846:..\src/command_processing.c ****     // frame - start
 847:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 3987              		.loc 1 847 0
 3988 0010 3A20     		movs	r0, #58
 3989 0012 FFF7FEFF 		bl	UART_RS485_PutChar
 848:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 3990              		.loc 1 848 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 103


 3991 0016 3A20     		movs	r0, #58
 3992 0018 FFF7FEFF 		bl	UART_RS485_PutChar
 849:..\src/command_processing.c ****     // frame - ID
 850:..\src/command_processing.c ****     //if(old_id)
 851:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 3993              		.loc 1 851 0
 3994 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3995 001e 1846     		mov	r0, r3
 3996 0020 FFF7FEFF 		bl	UART_RS485_PutChar
 852:..\src/command_processing.c ****     //else
 853:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
 854:..\src/command_processing.c ****         
 855:..\src/command_processing.c ****     // frame - length
 856:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 3997              		.loc 1 856 0
 3998 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3999 0026 DBB2     		uxtb	r3, r3
 4000 0028 1846     		mov	r0, r3
 4001 002a FFF7FEFF 		bl	UART_RS485_PutChar
 857:..\src/command_processing.c ****     // frame - packet data
 858:..\src/command_processing.c ****     for(index = 0; index < packet_length; ++index) {
 4002              		.loc 1 858 0
 4003 002e 0023     		movs	r3, #0
 4004 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 4005 0032 09E0     		b	.L201
 4006              	.L202:
 859:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4007              		.loc 1 859 0 discriminator 3
 4008 0034 FB89     		ldrh	r3, [r7, #14]
 4009 0036 7A68     		ldr	r2, [r7, #4]
 4010 0038 1344     		add	r3, r3, r2
 4011 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4012 003c 1846     		mov	r0, r3
 4013 003e FFF7FEFF 		bl	UART_RS485_PutChar
 858:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4014              		.loc 1 858 0 discriminator 3
 4015 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4016 0044 0133     		adds	r3, r3, #1
 4017 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 4018              	.L201:
 858:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4019              		.loc 1 858 0 is_stmt 0 discriminator 1
 4020 0048 FA89     		ldrh	r2, [r7, #14]
 4021 004a 7B88     		ldrh	r3, [r7, #2]
 4022 004c 9A42     		cmp	r2, r3
 4023 004e F1D3     		bcc	.L202
 860:..\src/command_processing.c ****     }
 861:..\src/command_processing.c **** 
 862:..\src/command_processing.c ****     index = 0;
 4024              		.loc 1 862 0 is_stmt 1
 4025 0050 0023     		movs	r3, #0
 4026 0052 FB81     		strh	r3, [r7, #14]	@ movhi
 863:..\src/command_processing.c **** 
 864:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 4027              		.loc 1 864 0
 4028 0054 00BF     		nop
 4029              	.L204:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 104


 4030              		.loc 1 864 0 is_stmt 0 discriminator 2
 4031 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 4032 005a 0346     		mov	r3, r0
 4033 005c 03F00103 		and	r3, r3, #1
 4034 0060 002B     		cmp	r3, #0
 4035 0062 05D1     		bne	.L203
 4036              		.loc 1 864 0 discriminator 1
 4037 0064 FB89     		ldrh	r3, [r7, #14]
 4038 0066 5A1C     		adds	r2, r3, #1
 4039 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 4040 006a B3F57A7F 		cmp	r3, #1000
 4041 006e F2D9     		bls	.L204
 4042              	.L203:
 865:..\src/command_processing.c **** 
 866:..\src/command_processing.c ****     RS485_CTS_Write(1);
 4043              		.loc 1 866 0 is_stmt 1
 4044 0070 0120     		movs	r0, #1
 4045 0072 FFF7FEFF 		bl	RS485_CTS_Write
 867:..\src/command_processing.c ****     RS485_CTS_Write(0);
 4046              		.loc 1 867 0
 4047 0076 0020     		movs	r0, #0
 4048 0078 FFF7FEFF 		bl	RS485_CTS_Write
 868:..\src/command_processing.c **** }
 4049              		.loc 1 868 0
 4050 007c 00BF     		nop
 4051 007e 1037     		adds	r7, r7, #16
 4052              		.cfi_def_cfa_offset 8
 4053 0080 BD46     		mov	sp, r7
 4054              		.cfi_def_cfa_register 13
 4055              		@ sp needed
 4056 0082 80BD     		pop	{r7, pc}
 4057              		.cfi_endproc
 4058              	.LFE82:
 4059              		.size	commWrite_old_id, .-commWrite_old_id
 4060              		.section	.text.commWrite,"ax",%progbits
 4061              		.align	2
 4062              		.global	commWrite
 4063              		.thumb
 4064              		.thumb_func
 4065              		.type	commWrite, %function
 4066              	commWrite:
 4067              	.LFB83:
 869:..\src/command_processing.c **** 
 870:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_length)
 871:..\src/command_processing.c **** {
 4068              		.loc 1 871 0
 4069              		.cfi_startproc
 4070              		@ args = 0, pretend = 0, frame = 16
 4071              		@ frame_needed = 1, uses_anonymous_args = 0
 4072 0000 80B5     		push	{r7, lr}
 4073              		.cfi_def_cfa_offset 8
 4074              		.cfi_offset 7, -8
 4075              		.cfi_offset 14, -4
 4076 0002 84B0     		sub	sp, sp, #16
 4077              		.cfi_def_cfa_offset 24
 4078 0004 00AF     		add	r7, sp, #0
 4079              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 105


 4080 0006 7860     		str	r0, [r7, #4]
 4081 0008 0B46     		mov	r3, r1
 4082 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 872:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
 873:..\src/command_processing.c **** 
 874:..\src/command_processing.c ****     // frame - start
 875:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4083              		.loc 1 875 0
 4084 000c 3A20     		movs	r0, #58
 4085 000e FFF7FEFF 		bl	UART_RS485_PutChar
 876:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4086              		.loc 1 876 0
 4087 0012 3A20     		movs	r0, #58
 4088 0014 FFF7FEFF 		bl	UART_RS485_PutChar
 877:..\src/command_processing.c ****     // frame - ID
 878:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 4089              		.loc 1 878 0
 4090 0018 1A4B     		ldr	r3, .L210
 4091 001a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 4092 001c 1846     		mov	r0, r3
 4093 001e FFF7FEFF 		bl	UART_RS485_PutChar
 879:..\src/command_processing.c ****     // frame - length
 880:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 4094              		.loc 1 880 0
 4095 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4096 0024 DBB2     		uxtb	r3, r3
 4097 0026 1846     		mov	r0, r3
 4098 0028 FFF7FEFF 		bl	UART_RS485_PutChar
 881:..\src/command_processing.c ****     // frame - packet data
 882:..\src/command_processing.c ****     for(index = 0; index < packet_length; ++index) {
 4099              		.loc 1 882 0
 4100 002c 0023     		movs	r3, #0
 4101 002e FB81     		strh	r3, [r7, #14]	@ movhi
 4102 0030 09E0     		b	.L206
 4103              	.L207:
 883:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4104              		.loc 1 883 0 discriminator 3
 4105 0032 FB89     		ldrh	r3, [r7, #14]
 4106 0034 7A68     		ldr	r2, [r7, #4]
 4107 0036 1344     		add	r3, r3, r2
 4108 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4109 003a 1846     		mov	r0, r3
 4110 003c FFF7FEFF 		bl	UART_RS485_PutChar
 882:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4111              		.loc 1 882 0 discriminator 3
 4112 0040 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4113 0042 0133     		adds	r3, r3, #1
 4114 0044 FB81     		strh	r3, [r7, #14]	@ movhi
 4115              	.L206:
 882:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4116              		.loc 1 882 0 is_stmt 0 discriminator 1
 4117 0046 FA89     		ldrh	r2, [r7, #14]
 4118 0048 7B88     		ldrh	r3, [r7, #2]
 4119 004a 9A42     		cmp	r2, r3
 4120 004c F1D3     		bcc	.L207
 884:..\src/command_processing.c ****     }
 885:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 106


 886:..\src/command_processing.c ****     index = 0;
 4121              		.loc 1 886 0 is_stmt 1
 4122 004e 0023     		movs	r3, #0
 4123 0050 FB81     		strh	r3, [r7, #14]	@ movhi
 887:..\src/command_processing.c **** 
 888:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 4124              		.loc 1 888 0
 4125 0052 00BF     		nop
 4126              	.L209:
 4127              		.loc 1 888 0 is_stmt 0 discriminator 2
 4128 0054 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 4129 0058 0346     		mov	r3, r0
 4130 005a 03F00103 		and	r3, r3, #1
 4131 005e 002B     		cmp	r3, #0
 4132 0060 05D1     		bne	.L208
 4133              		.loc 1 888 0 discriminator 1
 4134 0062 FB89     		ldrh	r3, [r7, #14]
 4135 0064 5A1C     		adds	r2, r3, #1
 4136 0066 FA81     		strh	r2, [r7, #14]	@ movhi
 4137 0068 B3F57A7F 		cmp	r3, #1000
 4138 006c F2D9     		bls	.L209
 4139              	.L208:
 889:..\src/command_processing.c **** 
 890:..\src/command_processing.c ****     RS485_CTS_Write(1);
 4140              		.loc 1 890 0 is_stmt 1
 4141 006e 0120     		movs	r0, #1
 4142 0070 FFF7FEFF 		bl	RS485_CTS_Write
 891:..\src/command_processing.c ****     RS485_CTS_Write(0);
 4143              		.loc 1 891 0
 4144 0074 0020     		movs	r0, #0
 4145 0076 FFF7FEFF 		bl	RS485_CTS_Write
 892:..\src/command_processing.c **** }
 4146              		.loc 1 892 0
 4147 007a 00BF     		nop
 4148 007c 1037     		adds	r7, r7, #16
 4149              		.cfi_def_cfa_offset 8
 4150 007e BD46     		mov	sp, r7
 4151              		.cfi_def_cfa_register 13
 4152              		@ sp needed
 4153 0080 80BD     		pop	{r7, pc}
 4154              	.L211:
 4155 0082 00BF     		.align	2
 4156              	.L210:
 4157 0084 00000000 		.word	g_mem
 4158              		.cfi_endproc
 4159              	.LFE83:
 4160              		.size	commWrite, .-commWrite
 4161              		.section	.text.commWriteID,"ax",%progbits
 4162              		.align	2
 4163              		.global	commWriteID
 4164              		.thumb
 4165              		.thumb_func
 4166              		.type	commWriteID, %function
 4167              	commWriteID:
 4168              	.LFB84:
 893:..\src/command_processing.c **** 
 894:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 107


 895:..\src/command_processing.c **** //==============================================================================
 896:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
 897:..\src/command_processing.c **** //==============================================================================
 898:..\src/command_processing.c **** 
 899:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_length, uint8 id)
 900:..\src/command_processing.c **** {
 4169              		.loc 1 900 0
 4170              		.cfi_startproc
 4171              		@ args = 0, pretend = 0, frame = 8
 4172              		@ frame_needed = 1, uses_anonymous_args = 0
 4173 0000 80B5     		push	{r7, lr}
 4174              		.cfi_def_cfa_offset 8
 4175              		.cfi_offset 7, -8
 4176              		.cfi_offset 14, -4
 4177 0002 82B0     		sub	sp, sp, #8
 4178              		.cfi_def_cfa_offset 16
 4179 0004 00AF     		add	r7, sp, #0
 4180              		.cfi_def_cfa_register 7
 4181 0006 7860     		str	r0, [r7, #4]
 4182 0008 0B46     		mov	r3, r1
 4183 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 4184 000c 1346     		mov	r3, r2
 4185 000e 7B70     		strb	r3, [r7, #1]
 901:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
 902:..\src/command_processing.c **** 
 903:..\src/command_processing.c ****     // frame - start
 904:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4186              		.loc 1 904 0
 4187 0010 3A20     		movs	r0, #58
 4188 0012 FFF7FEFF 		bl	UART_RS485_PutChar
 905:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4189              		.loc 1 905 0
 4190 0016 3A20     		movs	r0, #58
 4191 0018 FFF7FEFF 		bl	UART_RS485_PutChar
 906:..\src/command_processing.c ****     // frame - ID
 907:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 4192              		.loc 1 907 0
 4193 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4194 001e 1846     		mov	r0, r3
 4195 0020 FFF7FEFF 		bl	UART_RS485_PutChar
 908:..\src/command_processing.c ****     // frame - length
 909:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 4196              		.loc 1 909 0
 4197 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4198 0026 DBB2     		uxtb	r3, r3
 4199 0028 1846     		mov	r0, r3
 4200 002a FFF7FEFF 		bl	UART_RS485_PutChar
 910:..\src/command_processing.c ****     // frame - packet data
 911:..\src/command_processing.c ****     for(i = 0; i < packet_length; ++i) {
 4201              		.loc 1 911 0
 4202 002e 1B4B     		ldr	r3, .L217
 4203 0030 0022     		movs	r2, #0
 4204 0032 1A80     		strh	r2, [r3]	@ movhi
 4205 0034 0EE0     		b	.L213
 4206              	.L214:
 912:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 4207              		.loc 1 912 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 108


 4208 0036 194B     		ldr	r3, .L217
 4209 0038 1B88     		ldrh	r3, [r3]
 4210 003a 1A46     		mov	r2, r3
 4211 003c 7B68     		ldr	r3, [r7, #4]
 4212 003e 1344     		add	r3, r3, r2
 4213 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4214 0042 1846     		mov	r0, r3
 4215 0044 FFF7FEFF 		bl	UART_RS485_PutChar
 911:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 4216              		.loc 1 911 0 discriminator 3
 4217 0048 144B     		ldr	r3, .L217
 4218 004a 1B88     		ldrh	r3, [r3]
 4219 004c 0133     		adds	r3, r3, #1
 4220 004e 9AB2     		uxth	r2, r3
 4221 0050 124B     		ldr	r3, .L217
 4222 0052 1A80     		strh	r2, [r3]	@ movhi
 4223              	.L213:
 911:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 4224              		.loc 1 911 0 is_stmt 0 discriminator 1
 4225 0054 114B     		ldr	r3, .L217
 4226 0056 1B88     		ldrh	r3, [r3]
 4227 0058 7A88     		ldrh	r2, [r7, #2]
 4228 005a 9A42     		cmp	r2, r3
 4229 005c EBD8     		bhi	.L214
 913:..\src/command_processing.c ****     }
 914:..\src/command_processing.c **** 
 915:..\src/command_processing.c ****     i = 0;
 4230              		.loc 1 915 0 is_stmt 1
 4231 005e 0F4B     		ldr	r3, .L217
 4232 0060 0022     		movs	r2, #0
 4233 0062 1A80     		strh	r2, [r3]	@ movhi
 916:..\src/command_processing.c **** 
 917:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 4234              		.loc 1 917 0
 4235 0064 00BF     		nop
 4236              	.L216:
 4237              		.loc 1 917 0 is_stmt 0 discriminator 2
 4238 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 4239 006a 0346     		mov	r3, r0
 4240 006c 03F00103 		and	r3, r3, #1
 4241 0070 002B     		cmp	r3, #0
 4242 0072 08D1     		bne	.L215
 4243              		.loc 1 917 0 discriminator 1
 4244 0074 094B     		ldr	r3, .L217
 4245 0076 1B88     		ldrh	r3, [r3]
 4246 0078 5A1C     		adds	r2, r3, #1
 4247 007a 91B2     		uxth	r1, r2
 4248 007c 074A     		ldr	r2, .L217
 4249 007e 1180     		strh	r1, [r2]	@ movhi
 4250 0080 B3F57A7F 		cmp	r3, #1000
 4251 0084 EFD9     		bls	.L216
 4252              	.L215:
 918:..\src/command_processing.c ****     
 919:..\src/command_processing.c ****     RS485_CTS_Write(1);
 4253              		.loc 1 919 0 is_stmt 1
 4254 0086 0120     		movs	r0, #1
 4255 0088 FFF7FEFF 		bl	RS485_CTS_Write
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 109


 920:..\src/command_processing.c ****     RS485_CTS_Write(0);
 4256              		.loc 1 920 0
 4257 008c 0020     		movs	r0, #0
 4258 008e FFF7FEFF 		bl	RS485_CTS_Write
 921:..\src/command_processing.c **** }
 4259              		.loc 1 921 0
 4260 0092 00BF     		nop
 4261 0094 0837     		adds	r7, r7, #8
 4262              		.cfi_def_cfa_offset 8
 4263 0096 BD46     		mov	sp, r7
 4264              		.cfi_def_cfa_register 13
 4265              		@ sp needed
 4266 0098 80BD     		pop	{r7, pc}
 4267              	.L218:
 4268 009a 00BF     		.align	2
 4269              	.L217:
 4270 009c 00000000 		.word	i.10024
 4271              		.cfi_endproc
 4272              	.LFE84:
 4273              		.size	commWriteID, .-commWriteID
 4274              		.section	.text.LCRChecksum,"ax",%progbits
 4275              		.align	2
 4276              		.global	LCRChecksum
 4277              		.thumb
 4278              		.thumb_func
 4279              		.type	LCRChecksum, %function
 4280              	LCRChecksum:
 4281              	.LFB85:
 922:..\src/command_processing.c **** 
 923:..\src/command_processing.c **** //==============================================================================
 924:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
 925:..\src/command_processing.c **** //==============================================================================
 926:..\src/command_processing.c **** 
 927:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
 928:..\src/command_processing.c **** 
 929:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 4282              		.loc 1 929 0
 4283              		.cfi_startproc
 4284              		@ args = 0, pretend = 0, frame = 16
 4285              		@ frame_needed = 1, uses_anonymous_args = 0
 4286              		@ link register save eliminated.
 4287 0000 80B4     		push	{r7}
 4288              		.cfi_def_cfa_offset 4
 4289              		.cfi_offset 7, -4
 4290 0002 85B0     		sub	sp, sp, #20
 4291              		.cfi_def_cfa_offset 24
 4292 0004 00AF     		add	r7, sp, #0
 4293              		.cfi_def_cfa_register 7
 4294 0006 7860     		str	r0, [r7, #4]
 4295 0008 0B46     		mov	r3, r1
 4296 000a FB70     		strb	r3, [r7, #3]
 930:..\src/command_processing.c ****     
 931:..\src/command_processing.c ****     uint8 CYDATA i;
 932:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 4297              		.loc 1 932 0
 4298 000c 0023     		movs	r3, #0
 4299 000e BB73     		strb	r3, [r7, #14]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 110


 933:..\src/command_processing.c ****     
 934:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 4300              		.loc 1 934 0
 4301 0010 0023     		movs	r3, #0
 4302 0012 FB73     		strb	r3, [r7, #15]
 4303 0014 09E0     		b	.L220
 4304              	.L221:
 935:..\src/command_processing.c ****        checksum ^= data_array[i];
 4305              		.loc 1 935 0 discriminator 3
 4306 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4307 0018 7A68     		ldr	r2, [r7, #4]
 4308 001a 1344     		add	r3, r3, r2
 4309 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4310 001e BB7B     		ldrb	r3, [r7, #14]
 4311 0020 5340     		eors	r3, r3, r2
 4312 0022 BB73     		strb	r3, [r7, #14]
 934:..\src/command_processing.c ****        checksum ^= data_array[i];
 4313              		.loc 1 934 0 discriminator 3
 4314 0024 FB7B     		ldrb	r3, [r7, #15]
 4315 0026 0133     		adds	r3, r3, #1
 4316 0028 FB73     		strb	r3, [r7, #15]
 4317              	.L220:
 934:..\src/command_processing.c ****        checksum ^= data_array[i];
 4318              		.loc 1 934 0 is_stmt 0 discriminator 1
 4319 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4320 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4321 002e 9A42     		cmp	r2, r3
 4322 0030 F1D3     		bcc	.L221
 936:..\src/command_processing.c ****   
 937:..\src/command_processing.c ****     return checksum;
 4323              		.loc 1 937 0 is_stmt 1
 4324 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 938:..\src/command_processing.c **** }
 4325              		.loc 1 938 0
 4326 0034 1846     		mov	r0, r3
 4327 0036 1437     		adds	r7, r7, #20
 4328              		.cfi_def_cfa_offset 4
 4329 0038 BD46     		mov	sp, r7
 4330              		.cfi_def_cfa_register 13
 4331              		@ sp needed
 4332 003a 80BC     		pop	{r7}
 4333              		.cfi_restore 7
 4334              		.cfi_def_cfa_offset 0
 4335 003c 7047     		bx	lr
 4336              		.cfi_endproc
 4337              	.LFE85:
 4338              		.size	LCRChecksum, .-LCRChecksum
 4339 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 4340              		.align	2
 4341              		.global	sendAcknowledgment
 4342              		.thumb
 4343              		.thumb_func
 4344              		.type	sendAcknowledgment, %function
 4345              	sendAcknowledgment:
 4346              	.LFB86:
 939:..\src/command_processing.c **** 
 940:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 111


 941:..\src/command_processing.c **** //==============================================================================
 942:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
 943:..\src/command_processing.c **** //==============================================================================
 944:..\src/command_processing.c **** 
 945:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 4347              		.loc 1 945 0
 4348              		.cfi_startproc
 4349              		@ args = 0, pretend = 0, frame = 16
 4350              		@ frame_needed = 1, uses_anonymous_args = 0
 4351 0000 80B5     		push	{r7, lr}
 4352              		.cfi_def_cfa_offset 8
 4353              		.cfi_offset 7, -8
 4354              		.cfi_offset 14, -4
 4355 0002 84B0     		sub	sp, sp, #16
 4356              		.cfi_def_cfa_offset 24
 4357 0004 00AF     		add	r7, sp, #0
 4358              		.cfi_def_cfa_register 7
 4359 0006 0346     		mov	r3, r0
 4360 0008 FB71     		strb	r3, [r7, #7]
 946:..\src/command_processing.c ****     int packet_length = 2;
 4361              		.loc 1 946 0
 4362 000a 0223     		movs	r3, #2
 4363 000c FB60     		str	r3, [r7, #12]
 947:..\src/command_processing.c ****     uint8 packet_data[2];
 948:..\src/command_processing.c **** 
 949:..\src/command_processing.c ****     packet_data[0] = value;
 4364              		.loc 1 949 0
 4365 000e FB79     		ldrb	r3, [r7, #7]
 4366 0010 3B72     		strb	r3, [r7, #8]
 950:..\src/command_processing.c ****     packet_data[1] = value;
 4367              		.loc 1 950 0
 4368 0012 FB79     		ldrb	r3, [r7, #7]
 4369 0014 7B72     		strb	r3, [r7, #9]
 951:..\src/command_processing.c **** 
 952:..\src/command_processing.c ****     commWrite(packet_data, packet_length);
 4370              		.loc 1 952 0
 4371 0016 FB68     		ldr	r3, [r7, #12]
 4372 0018 9AB2     		uxth	r2, r3
 4373 001a 07F10803 		add	r3, r7, #8
 4374 001e 1146     		mov	r1, r2
 4375 0020 1846     		mov	r0, r3
 4376 0022 FFF7FEFF 		bl	commWrite
 953:..\src/command_processing.c **** }
 4377              		.loc 1 953 0
 4378 0026 00BF     		nop
 4379 0028 1037     		adds	r7, r7, #16
 4380              		.cfi_def_cfa_offset 8
 4381 002a BD46     		mov	sp, r7
 4382              		.cfi_def_cfa_register 13
 4383              		@ sp needed
 4384 002c 80BD     		pop	{r7, pc}
 4385              		.cfi_endproc
 4386              	.LFE86:
 4387              		.size	sendAcknowledgment, .-sendAcknowledgment
 4388 002e 00BF     		.section	.text.memStore,"ax",%progbits
 4389              		.align	2
 4390              		.global	memStore
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 112


 4391              		.thumb
 4392              		.thumb_func
 4393              		.type	memStore, %function
 4394              	memStore:
 4395              	.LFB87:
 954:..\src/command_processing.c **** 
 955:..\src/command_processing.c **** //==============================================================================
 956:..\src/command_processing.c **** //                                                                  STORE MEMORY
 957:..\src/command_processing.c **** //==============================================================================
 958:..\src/command_processing.c **** 
 959:..\src/command_processing.c **** 
 960:..\src/command_processing.c **** uint8 memStore(int displacement)
 961:..\src/command_processing.c **** {
 4396              		.loc 1 961 0
 4397              		.cfi_startproc
 4398              		@ args = 0, pretend = 0, frame = 24
 4399              		@ frame_needed = 1, uses_anonymous_args = 0
 4400 0000 80B5     		push	{r7, lr}
 4401              		.cfi_def_cfa_offset 8
 4402              		.cfi_offset 7, -8
 4403              		.cfi_offset 14, -4
 4404 0002 86B0     		sub	sp, sp, #24
 4405              		.cfi_def_cfa_offset 32
 4406 0004 00AF     		add	r7, sp, #0
 4407              		.cfi_def_cfa_register 7
 4408 0006 7860     		str	r0, [r7, #4]
 962:..\src/command_processing.c ****     int i;  // iterator
 963:..\src/command_processing.c ****     uint8 writeStatus;
 964:..\src/command_processing.c ****     int pages;
 965:..\src/command_processing.c ****     uint8 ret_val = 1;
 4409              		.loc 1 965 0
 4410 0008 0123     		movs	r3, #1
 4411 000a FB74     		strb	r3, [r7, #19]
 966:..\src/command_processing.c **** 
 967:..\src/command_processing.c ****     // Disable Interrupt
 968:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 4412              		.loc 1 968 0
 4413 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
 969:..\src/command_processing.c **** 
 970:..\src/command_processing.c ****     // Stop motor
 971:..\src/command_processing.c ****     //PWM_MOTORS_WriteCompare1(0);
 972:..\src/command_processing.c **** 
 973:..\src/command_processing.c ****     // Update temperature information for better writing performance
 974:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 4414              		.loc 1 974 0
 4415 0010 FFF7FEFF 		bl	EEPROM_UpdateTemperature
 975:..\src/command_processing.c **** 
 976:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 4416              		.loc 1 976 0
 4417 0014 1C4A     		ldr	r2, .L230
 4418 0016 1D4B     		ldr	r3, .L230+4
 4419 0018 1046     		mov	r0, r2
 4420 001a 1946     		mov	r1, r3
 4421 001c 6023     		movs	r3, #96
 4422 001e 1A46     		mov	r2, r3
 4423 0020 FFF7FEFF 		bl	memcpy
 977:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 113


 978:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 4424              		.loc 1 978 0
 4425 0024 0623     		movs	r3, #6
 4426 0026 FB60     		str	r3, [r7, #12]
 979:..\src/command_processing.c **** 
 980:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 4427              		.loc 1 980 0
 4428 0028 0023     		movs	r3, #0
 4429 002a 7B61     		str	r3, [r7, #20]
 4430 002c 18E0     		b	.L225
 4431              	.L228:
 981:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 4432              		.loc 1 981 0
 4433 002e 7B69     		ldr	r3, [r7, #20]
 4434 0030 1B01     		lsls	r3, r3, #4
 4435 0032 1A46     		mov	r2, r3
 4436 0034 154B     		ldr	r3, .L230+4
 4437 0036 D018     		adds	r0, r2, r3
 4438 0038 7B69     		ldr	r3, [r7, #20]
 4439 003a DAB2     		uxtb	r2, r3
 4440 003c 7B68     		ldr	r3, [r7, #4]
 4441 003e DBB2     		uxtb	r3, r3
 4442 0040 1344     		add	r3, r3, r2
 4443 0042 DBB2     		uxtb	r3, r3
 4444 0044 1946     		mov	r1, r3
 4445 0046 FFF7FEFF 		bl	EEPROM_Write
 4446 004a 0346     		mov	r3, r0
 4447 004c FB72     		strb	r3, [r7, #11]
 982:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 4448              		.loc 1 982 0
 4449 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4450 0050 002B     		cmp	r3, #0
 4451 0052 02D0     		beq	.L226
 983:..\src/command_processing.c ****             ret_val = 0;
 4452              		.loc 1 983 0
 4453 0054 0023     		movs	r3, #0
 4454 0056 FB74     		strb	r3, [r7, #19]
 984:..\src/command_processing.c ****             break;
 4455              		.loc 1 984 0
 4456 0058 06E0     		b	.L227
 4457              	.L226:
 980:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 4458              		.loc 1 980 0 discriminator 2
 4459 005a 7B69     		ldr	r3, [r7, #20]
 4460 005c 0133     		adds	r3, r3, #1
 4461 005e 7B61     		str	r3, [r7, #20]
 4462              	.L225:
 980:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 4463              		.loc 1 980 0 is_stmt 0 discriminator 1
 4464 0060 7A69     		ldr	r2, [r7, #20]
 4465 0062 FB68     		ldr	r3, [r7, #12]
 4466 0064 9A42     		cmp	r2, r3
 4467 0066 E2DB     		blt	.L228
 4468              	.L227:
 985:..\src/command_processing.c ****         }
 986:..\src/command_processing.c ****     }
 987:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 114


 988:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 4469              		.loc 1 988 0 is_stmt 1
 4470 0068 084A     		ldr	r2, .L230+4
 4471 006a 074B     		ldr	r3, .L230
 4472 006c 1046     		mov	r0, r2
 4473 006e 1946     		mov	r1, r3
 4474 0070 6023     		movs	r3, #96
 4475 0072 1A46     		mov	r2, r3
 4476 0074 FFF7FEFF 		bl	memcpy
 989:..\src/command_processing.c **** 
 990:..\src/command_processing.c ****     // Re-Enable Interrupt
 991:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 4477              		.loc 1 991 0
 4478 0078 FFF7FEFF 		bl	ISR_RS485_RX_Enable
 992:..\src/command_processing.c **** 
 993:..\src/command_processing.c ****     return ret_val;
 4479              		.loc 1 993 0
 4480 007c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 994:..\src/command_processing.c **** }
 4481              		.loc 1 994 0
 4482 007e 1846     		mov	r0, r3
 4483 0080 1837     		adds	r7, r7, #24
 4484              		.cfi_def_cfa_offset 8
 4485 0082 BD46     		mov	sp, r7
 4486              		.cfi_def_cfa_register 13
 4487              		@ sp needed
 4488 0084 80BD     		pop	{r7, pc}
 4489              	.L231:
 4490 0086 00BF     		.align	2
 4491              	.L230:
 4492 0088 00000000 		.word	c_mem
 4493 008c 00000000 		.word	g_mem
 4494              		.cfi_endproc
 4495              	.LFE87:
 4496              		.size	memStore, .-memStore
 4497              		.section	.text.memRecall,"ax",%progbits
 4498              		.align	2
 4499              		.global	memRecall
 4500              		.thumb
 4501              		.thumb_func
 4502              		.type	memRecall, %function
 4503              	memRecall:
 4504              	.LFB88:
 995:..\src/command_processing.c **** 
 996:..\src/command_processing.c **** 
 997:..\src/command_processing.c **** //==============================================================================
 998:..\src/command_processing.c **** //                                                                 RECALL MEMORY
 999:..\src/command_processing.c **** //==============================================================================
1000:..\src/command_processing.c **** 
1001:..\src/command_processing.c **** 
1002:..\src/command_processing.c **** void memRecall(void)
1003:..\src/command_processing.c **** {  
 4505              		.loc 1 1003 0
 4506              		.cfi_startproc
 4507              		@ args = 0, pretend = 0, frame = 8
 4508              		@ frame_needed = 1, uses_anonymous_args = 0
 4509 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 115


 4510              		.cfi_def_cfa_offset 8
 4511              		.cfi_offset 7, -8
 4512              		.cfi_offset 14, -4
 4513 0002 82B0     		sub	sp, sp, #8
 4514              		.cfi_def_cfa_offset 16
 4515 0004 00AF     		add	r7, sp, #0
 4516              		.cfi_def_cfa_register 7
1004:..\src/command_processing.c ****     uint16 i;
1005:..\src/command_processing.c **** 
1006:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 4517              		.loc 1 1006 0
 4518 0006 0023     		movs	r3, #0
 4519 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 4520 000a 0CE0     		b	.L233
 4521              	.L234:
1007:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 4522              		.loc 1 1007 0 discriminator 3
 4523 000c FB88     		ldrh	r3, [r7, #6]
 4524 000e 114A     		ldr	r2, .L238
 4525 0010 1344     		add	r3, r3, r2
 4526 0012 114A     		ldr	r2, .L238+4
 4527 0014 1168     		ldr	r1, [r2]
 4528 0016 FA88     		ldrh	r2, [r7, #6]
 4529 0018 0A44     		add	r2, r2, r1
 4530 001a 1278     		ldrb	r2, [r2]
 4531 001c D2B2     		uxtb	r2, r2
 4532 001e 1A70     		strb	r2, [r3]
1006:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 4533              		.loc 1 1006 0 discriminator 3
 4534 0020 FB88     		ldrh	r3, [r7, #6]
 4535 0022 0133     		adds	r3, r3, #1
 4536 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 4537              	.L233:
1006:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 4538              		.loc 1 1006 0 is_stmt 0 discriminator 1
 4539 0026 FB88     		ldrh	r3, [r7, #6]
 4540 0028 5F2B     		cmp	r3, #95
 4541 002a EFD9     		bls	.L234
1008:..\src/command_processing.c ****     }
1009:..\src/command_processing.c ****        //check for initialization
1010:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 4542              		.loc 1 1010 0 is_stmt 1
 4543 002c 094B     		ldr	r3, .L238
 4544 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4545 0030 002B     		cmp	r3, #0
 4546 0032 02D1     		bne	.L235
1011:..\src/command_processing.c ****         memRestore();
 4547              		.loc 1 1011 0
 4548 0034 FFF7FEFF 		bl	memRestore
1012:..\src/command_processing.c ****     } else {
1013:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
1014:..\src/command_processing.c ****     }   
1015:..\src/command_processing.c **** }
 4549              		.loc 1 1015 0
 4550 0038 07E0     		b	.L237
 4551              	.L235:
1013:..\src/command_processing.c ****     }   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 116


 4552              		.loc 1 1013 0
 4553 003a 084A     		ldr	r2, .L238+8
 4554 003c 054B     		ldr	r3, .L238
 4555 003e 1046     		mov	r0, r2
 4556 0040 1946     		mov	r1, r3
 4557 0042 6023     		movs	r3, #96
 4558 0044 1A46     		mov	r2, r3
 4559 0046 FFF7FEFF 		bl	memcpy
 4560              	.L237:
 4561              		.loc 1 1015 0
 4562 004a 00BF     		nop
 4563 004c 0837     		adds	r7, r7, #8
 4564              		.cfi_def_cfa_offset 8
 4565 004e BD46     		mov	sp, r7
 4566              		.cfi_def_cfa_register 13
 4567              		@ sp needed
 4568 0050 80BD     		pop	{r7, pc}
 4569              	.L239:
 4570 0052 00BF     		.align	2
 4571              	.L238:
 4572 0054 00000000 		.word	g_mem
 4573 0058 00000000 		.word	EEPROM_ADDR
 4574 005c 00000000 		.word	c_mem
 4575              		.cfi_endproc
 4576              	.LFE88:
 4577              		.size	memRecall, .-memRecall
 4578              		.section	.text.memRestore,"ax",%progbits
 4579              		.align	2
 4580              		.global	memRestore
 4581              		.thumb
 4582              		.thumb_func
 4583              		.type	memRestore, %function
 4584              	memRestore:
 4585              	.LFB89:
1016:..\src/command_processing.c **** 
1017:..\src/command_processing.c **** 
1018:..\src/command_processing.c **** //==============================================================================
1019:..\src/command_processing.c **** //                                                                RESTORE MEMORY
1020:..\src/command_processing.c **** //==============================================================================
1021:..\src/command_processing.c **** 
1022:..\src/command_processing.c **** 
1023:..\src/command_processing.c **** uint8 memRestore(void) {
 4586              		.loc 1 1023 0
 4587              		.cfi_startproc
 4588              		@ args = 0, pretend = 0, frame = 8
 4589              		@ frame_needed = 1, uses_anonymous_args = 0
 4590 0000 80B5     		push	{r7, lr}
 4591              		.cfi_def_cfa_offset 8
 4592              		.cfi_offset 7, -8
 4593              		.cfi_offset 14, -4
 4594 0002 82B0     		sub	sp, sp, #8
 4595              		.cfi_def_cfa_offset 16
 4596 0004 00AF     		add	r7, sp, #0
 4597              		.cfi_def_cfa_register 7
1024:..\src/command_processing.c ****     uint16 i;
1025:..\src/command_processing.c **** 
1026:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 117


 4598              		.loc 1 1026 0
 4599 0006 0023     		movs	r3, #0
 4600 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 4601 000a 0EE0     		b	.L241
 4602              	.L242:
1027:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 4603              		.loc 1 1027 0 discriminator 3
 4604 000c FB88     		ldrh	r3, [r7, #6]
 4605 000e 104A     		ldr	r2, .L245
 4606 0010 1344     		add	r3, r3, r2
 4607 0012 104A     		ldr	r2, .L245+4
 4608 0014 1168     		ldr	r1, [r2]
 4609 0016 FA88     		ldrh	r2, [r7, #6]
 4610 0018 02F54872 		add	r2, r2, #800
 4611 001c 0A44     		add	r2, r2, r1
 4612 001e 1278     		ldrb	r2, [r2]
 4613 0020 D2B2     		uxtb	r2, r2
 4614 0022 1A70     		strb	r2, [r3]
1026:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 4615              		.loc 1 1026 0 discriminator 3
 4616 0024 FB88     		ldrh	r3, [r7, #6]
 4617 0026 0133     		adds	r3, r3, #1
 4618 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 4619              	.L241:
1026:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 4620              		.loc 1 1026 0 is_stmt 0 discriminator 1
 4621 002a FB88     		ldrh	r3, [r7, #6]
 4622 002c 5F2B     		cmp	r3, #95
 4623 002e EDD9     		bls	.L242
1028:..\src/command_processing.c ****     }
1029:..\src/command_processing.c **** 
1030:..\src/command_processing.c ****     //check for initialization
1031:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 4624              		.loc 1 1031 0 is_stmt 1
 4625 0030 074B     		ldr	r3, .L245
 4626 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4627 0034 002B     		cmp	r3, #0
 4628 0036 03D1     		bne	.L243
1032:..\src/command_processing.c ****         return memInit();
 4629              		.loc 1 1032 0
 4630 0038 FFF7FEFF 		bl	memInit
 4631 003c 0346     		mov	r3, r0
 4632 003e 03E0     		b	.L244
 4633              	.L243:
1033:..\src/command_processing.c ****     } else {
1034:..\src/command_processing.c ****         return memStore(0);
 4634              		.loc 1 1034 0
 4635 0040 0020     		movs	r0, #0
 4636 0042 FFF7FEFF 		bl	memStore
 4637 0046 0346     		mov	r3, r0
 4638              	.L244:
1035:..\src/command_processing.c ****     }  
1036:..\src/command_processing.c **** }
 4639              		.loc 1 1036 0
 4640 0048 1846     		mov	r0, r3
 4641 004a 0837     		adds	r7, r7, #8
 4642              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 118


 4643 004c BD46     		mov	sp, r7
 4644              		.cfi_def_cfa_register 13
 4645              		@ sp needed
 4646 004e 80BD     		pop	{r7, pc}
 4647              	.L246:
 4648              		.align	2
 4649              	.L245:
 4650 0050 00000000 		.word	g_mem
 4651 0054 00000000 		.word	EEPROM_ADDR
 4652              		.cfi_endproc
 4653              	.LFE89:
 4654              		.size	memRestore, .-memRestore
 4655              		.section	.text.memInit,"ax",%progbits
 4656              		.align	2
 4657              		.global	memInit
 4658              		.thumb
 4659              		.thumb_func
 4660              		.type	memInit, %function
 4661              	memInit:
 4662              	.LFB90:
1037:..\src/command_processing.c **** 
1038:..\src/command_processing.c **** //==============================================================================
1039:..\src/command_processing.c **** //                                                                   MEMORY INIT
1040:..\src/command_processing.c **** //==============================================================================
1041:..\src/command_processing.c **** 
1042:..\src/command_processing.c **** uint8 memInit(void)
1043:..\src/command_processing.c **** {
 4663              		.loc 1 1043 0
 4664              		.cfi_startproc
 4665              		@ args = 0, pretend = 0, frame = 0
 4666              		@ frame_needed = 1, uses_anonymous_args = 0
 4667 0000 80B5     		push	{r7, lr}
 4668              		.cfi_def_cfa_offset 8
 4669              		.cfi_offset 7, -8
 4670              		.cfi_offset 14, -4
 4671 0002 00AF     		add	r7, sp, #0
 4672              		.cfi_def_cfa_register 7
1044:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
1045:..\src/command_processing.c ****     g_mem.flag = TRUE;
 4673              		.loc 1 1045 0
 4674 0004 2F4B     		ldr	r3, .L251
 4675 0006 0122     		movs	r2, #1
 4676 0008 1A70     		strb	r2, [r3]
1046:..\src/command_processing.c ****     
1047:..\src/command_processing.c ****     // DEV STRUCT
1048:..\src/command_processing.c ****     g_mem.dev.id = 2;
 4677              		.loc 1 1048 0
 4678 000a 2E4B     		ldr	r3, .L251
 4679 000c 0222     		movs	r2, #2
 4680 000e 1A74     		strb	r2, [r3, #16]
1049:..\src/command_processing.c ****     
1050:..\src/command_processing.c ****     // SH STRUCT
1051:..\src/command_processing.c ****     g_mem.SH_config.pos_lim_inf = 0;
 4681              		.loc 1 1051 0
 4682 0010 2C4B     		ldr	r3, .L251
 4683 0012 0022     		movs	r2, #0
 4684 0014 1A62     		str	r2, [r3, #32]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 119


1052:..\src/command_processing.c ****     g_mem.SH_config.pos_lim_sup = (int32)16000 << g_mem.SH_config.res;
 4685              		.loc 1 1052 0
 4686 0016 2B4B     		ldr	r3, .L251
 4687 0018 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 4688 001c 1A46     		mov	r2, r3
 4689 001e 4FF47A53 		mov	r3, #16000
 4690 0022 9340     		lsls	r3, r3, r2
 4691 0024 274A     		ldr	r2, .L251
 4692 0026 5362     		str	r3, [r2, #36]
1053:..\src/command_processing.c ****     g_mem.SH_config.input_mode = INPUT_MODE_EMG_FCFS;
 4693              		.loc 1 1053 0
 4694 0028 264B     		ldr	r3, .L251
 4695 002a 0422     		movs	r2, #4
 4696 002c 83F82820 		strb	r2, [r3, #40]
1054:..\src/command_processing.c ****     g_mem.SH_config.res = 3;
 4697              		.loc 1 1054 0
 4698 0030 244B     		ldr	r3, .L251
 4699 0032 0322     		movs	r2, #3
 4700 0034 83F82920 		strb	r2, [r3, #41]
1055:..\src/command_processing.c **** 
1056:..\src/command_processing.c ****     // EMG STRUCT     
1057:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 4701              		.loc 1 1057 0
 4702 0038 224B     		ldr	r3, .L251
 4703 003a C822     		movs	r2, #200
 4704 003c 1A86     		strh	r2, [r3, #48]	@ movhi
1058:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 4705              		.loc 1 1058 0
 4706 003e 214B     		ldr	r3, .L251
 4707 0040 C822     		movs	r2, #200
 4708 0042 5A86     		strh	r2, [r3, #50]	@ movhi
1059:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 4709              		.loc 1 1059 0
 4710 0044 1F4B     		ldr	r3, .L251
 4711 0046 4FF48062 		mov	r2, #1024
 4712 004a 5A63     		str	r2, [r3, #52]
1060:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 4713              		.loc 1 1060 0
 4714 004c 1D4B     		ldr	r3, .L251
 4715 004e 4FF48062 		mov	r2, #1024
 4716 0052 9A63     		str	r2, [r3, #56]
1061:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 4717              		.loc 1 1061 0
 4718 0054 1B4B     		ldr	r3, .L251
 4719 0056 6422     		movs	r2, #100
 4720 0058 83F83C20 		strb	r2, [r3, #60]
1062:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 4721              		.loc 1 1062 0
 4722 005c 194B     		ldr	r3, .L251
 4723 005e 6422     		movs	r2, #100
 4724 0060 83F83D20 		strb	r2, [r3, #61]
1063:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 4725              		.loc 1 1063 0
 4726 0064 174B     		ldr	r3, .L251
 4727 0066 0022     		movs	r2, #0
 4728 0068 83F83E20 		strb	r2, [r3, #62]
1064:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 120


1065:..\src/command_processing.c ****     // MASTER_SLAVE STRUCT
1066:..\src/command_processing.c ****     g_mem.MS.master_mode_active = FALSE;
 4729              		.loc 1 1066 0
 4730 006c 154B     		ldr	r3, .L251
 4731 006e 0022     		movs	r2, #0
 4732 0070 83F84020 		strb	r2, [r3, #64]
1067:..\src/command_processing.c ****     
1068:..\src/command_processing.c ****     
1069:..\src/command_processing.c ****     //FEEDBACK STRUCT
1070:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 4733              		.loc 1 1070 0
 4734 0074 134B     		ldr	r3, .L251
 4735 0076 4FF4E172 		mov	r2, #450
 4736 007a 1A65     		str	r2, [r3, #80]
1071:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 4737              		.loc 1 1071 0
 4738 007c 114B     		ldr	r3, .L251
 4739 007e 124A     		ldr	r2, .L251+4
 4740 0080 5A65     		str	r2, [r3, #84]	@ float
1072:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 4741              		.loc 1 1072 0
 4742 0082 104B     		ldr	r3, .L251
 4743 0084 4FF07E52 		mov	r2, #1065353216
 4744 0088 9A65     		str	r2, [r3, #88]	@ float
1073:..\src/command_processing.c ****     g_mem.FB.vibrotactile_feedback_active = FALSE;
 4745              		.loc 1 1073 0
 4746 008a 0E4B     		ldr	r3, .L251
 4747 008c 0022     		movs	r2, #0
 4748 008e 83F85C20 		strb	r2, [r3, #92]
1074:..\src/command_processing.c ****     g_mem.FB.airchamber_feedback_active = FALSE;
 4749              		.loc 1 1074 0
 4750 0092 0C4B     		ldr	r3, .L251
 4751 0094 0022     		movs	r2, #0
 4752 0096 83F85D20 		strb	r2, [r3, #93]
1075:..\src/command_processing.c ****     
1076:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
1077:..\src/command_processing.c ****     g_mem.flag = TRUE;
 4753              		.loc 1 1077 0
 4754 009a 0A4B     		ldr	r3, .L251
 4755 009c 0122     		movs	r2, #1
 4756 009e 1A70     		strb	r2, [r3]
1078:..\src/command_processing.c ****     
1079:..\src/command_processing.c ****     //write that configuration to EEPROM
1080:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );}
 4757              		.loc 1 1080 0
 4758 00a0 0020     		movs	r0, #0
 4759 00a2 FFF7FEFF 		bl	memStore
 4760 00a6 0346     		mov	r3, r0
 4761 00a8 002B     		cmp	r3, #0
 4762 00aa 07D0     		beq	.L248
 4763              		.loc 1 1080 0 is_stmt 0 discriminator 1
 4764 00ac 3220     		movs	r0, #50
 4765 00ae FFF7FEFF 		bl	memStore
 4766 00b2 0346     		mov	r3, r0
 4767 00b4 002B     		cmp	r3, #0
 4768 00b6 01D0     		beq	.L248
 4769              		.loc 1 1080 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 121


 4770 00b8 0123     		movs	r3, #1
 4771 00ba 00E0     		b	.L249
 4772              	.L248:
 4773              		.loc 1 1080 0 discriminator 4
 4774 00bc 0023     		movs	r3, #0
 4775              	.L249:
 4776              		.loc 1 1080 0 discriminator 6
 4777 00be DBB2     		uxtb	r3, r3
 4778 00c0 1846     		mov	r0, r3
 4779 00c2 80BD     		pop	{r7, pc}
 4780              	.L252:
 4781              		.align	2
 4782              	.L251:
 4783 00c4 00000000 		.word	g_mem
 4784 00c8 0000C841 		.word	1103626240
 4785              		.cfi_endproc
 4786              	.LFE90:
 4787              		.size	memInit, .-memInit
 4788              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 4789              		.align	2
 4790              		.global	memInit_SoftHandPro
 4791              		.thumb
 4792              		.thumb_func
 4793              		.type	memInit_SoftHandPro, %function
 4794              	memInit_SoftHandPro:
 4795              	.LFB91:
1081:..\src/command_processing.c **** 
1082:..\src/command_processing.c **** //==============================================================================
1083:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
1084:..\src/command_processing.c **** //==============================================================================
1085:..\src/command_processing.c **** void memInit_SoftHandPro(void)
1086:..\src/command_processing.c **** {
 4796              		.loc 1 1086 0 is_stmt 1
 4797              		.cfi_startproc
 4798              		@ args = 0, pretend = 0, frame = 0
 4799              		@ frame_needed = 1, uses_anonymous_args = 0
 4800              		@ link register save eliminated.
 4801 0000 80B4     		push	{r7}
 4802              		.cfi_def_cfa_offset 4
 4803              		.cfi_offset 7, -4
 4804 0002 00AF     		add	r7, sp, #0
 4805              		.cfi_def_cfa_register 7
1087:..\src/command_processing.c **** }
 4806              		.loc 1 1087 0
 4807 0004 00BF     		nop
 4808 0006 BD46     		mov	sp, r7
 4809              		.cfi_def_cfa_register 13
 4810              		@ sp needed
 4811 0008 80BC     		pop	{r7}
 4812              		.cfi_restore 7
 4813              		.cfi_def_cfa_offset 0
 4814 000a 7047     		bx	lr
 4815              		.cfi_endproc
 4816              	.LFE91:
 4817              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 4818              		.section	.text.memInit_Master,"ax",%progbits
 4819              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 122


 4820              		.global	memInit_Master
 4821              		.thumb
 4822              		.thumb_func
 4823              		.type	memInit_Master, %function
 4824              	memInit_Master:
 4825              	.LFB92:
1088:..\src/command_processing.c **** 
1089:..\src/command_processing.c **** //==============================================================================
1090:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
1091:..\src/command_processing.c **** //==============================================================================
1092:..\src/command_processing.c **** void memInit_Master(void)
1093:..\src/command_processing.c **** {
 4826              		.loc 1 1093 0
 4827              		.cfi_startproc
 4828              		@ args = 0, pretend = 0, frame = 0
 4829              		@ frame_needed = 1, uses_anonymous_args = 0
 4830              		@ link register save eliminated.
 4831 0000 80B4     		push	{r7}
 4832              		.cfi_def_cfa_offset 4
 4833              		.cfi_offset 7, -4
 4834 0002 00AF     		add	r7, sp, #0
 4835              		.cfi_def_cfa_register 7
1094:..\src/command_processing.c **** }
 4836              		.loc 1 1094 0
 4837 0004 00BF     		nop
 4838 0006 BD46     		mov	sp, r7
 4839              		.cfi_def_cfa_register 13
 4840              		@ sp needed
 4841 0008 80BC     		pop	{r7}
 4842              		.cfi_restore 7
 4843              		.cfi_def_cfa_offset 0
 4844 000a 7047     		bx	lr
 4845              		.cfi_endproc
 4846              	.LFE92:
 4847              		.size	memInit_Master, .-memInit_Master
 4848              		.section	.text.memInit_AirChambers_Vibrotactile_Fb,"ax",%progbits
 4849              		.align	2
 4850              		.global	memInit_AirChambers_Vibrotactile_Fb
 4851              		.thumb
 4852              		.thumb_func
 4853              		.type	memInit_AirChambers_Vibrotactile_Fb, %function
 4854              	memInit_AirChambers_Vibrotactile_Fb:
 4855              	.LFB93:
1095:..\src/command_processing.c **** 
1096:..\src/command_processing.c **** //==============================================================================
1097:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
1098:..\src/command_processing.c **** //==============================================================================
1099:..\src/command_processing.c **** void memInit_AirChambers_Vibrotactile_Fb()
1100:..\src/command_processing.c **** {
 4856              		.loc 1 1100 0
 4857              		.cfi_startproc
 4858              		@ args = 0, pretend = 0, frame = 0
 4859              		@ frame_needed = 1, uses_anonymous_args = 0
 4860              		@ link register save eliminated.
 4861 0000 80B4     		push	{r7}
 4862              		.cfi_def_cfa_offset 4
 4863              		.cfi_offset 7, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 123


 4864 0002 00AF     		add	r7, sp, #0
 4865              		.cfi_def_cfa_register 7
1101:..\src/command_processing.c **** }
 4866              		.loc 1 1101 0
 4867 0004 00BF     		nop
 4868 0006 BD46     		mov	sp, r7
 4869              		.cfi_def_cfa_register 13
 4870              		@ sp needed
 4871 0008 80BC     		pop	{r7}
 4872              		.cfi_restore 7
 4873              		.cfi_def_cfa_offset 0
 4874 000a 7047     		bx	lr
 4875              		.cfi_endproc
 4876              	.LFE93:
 4877              		.size	memInit_AirChambers_Vibrotactile_Fb, .-memInit_AirChambers_Vibrotactile_Fb
 4878              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 4879              		.align	2
 4880              		.global	memInit_OtbkActWristMs
 4881              		.thumb
 4882              		.thumb_func
 4883              		.type	memInit_OtbkActWristMs, %function
 4884              	memInit_OtbkActWristMs:
 4885              	.LFB94:
1102:..\src/command_processing.c **** 
1103:..\src/command_processing.c **** //==============================================================================
1104:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
1105:..\src/command_processing.c **** //==============================================================================
1106:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
1107:..\src/command_processing.c **** {
 4886              		.loc 1 1107 0
 4887              		.cfi_startproc
 4888              		@ args = 0, pretend = 0, frame = 0
 4889              		@ frame_needed = 1, uses_anonymous_args = 0
 4890              		@ link register save eliminated.
 4891 0000 80B4     		push	{r7}
 4892              		.cfi_def_cfa_offset 4
 4893              		.cfi_offset 7, -4
 4894 0002 00AF     		add	r7, sp, #0
 4895              		.cfi_def_cfa_register 7
1108:..\src/command_processing.c **** }
 4896              		.loc 1 1108 0
 4897 0004 00BF     		nop
 4898 0006 BD46     		mov	sp, r7
 4899              		.cfi_def_cfa_register 13
 4900              		@ sp needed
 4901 0008 80BC     		pop	{r7}
 4902              		.cfi_restore 7
 4903              		.cfi_def_cfa_offset 0
 4904 000a 7047     		bx	lr
 4905              		.cfi_endproc
 4906              	.LFE94:
 4907              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 4908              		.section	.text.cmd_get_measurements,"ax",%progbits
 4909              		.align	2
 4910              		.global	cmd_get_measurements
 4911              		.thumb
 4912              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 124


 4913              		.type	cmd_get_measurements, %function
 4914              	cmd_get_measurements:
 4915              	.LFB95:
1109:..\src/command_processing.c **** 
1110:..\src/command_processing.c **** //==============================================================================
1111:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
1112:..\src/command_processing.c **** //==============================================================================
1113:..\src/command_processing.c **** /**
1114:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
1115:..\src/command_processing.c **** **/
1116:..\src/command_processing.c **** 
1117:..\src/command_processing.c **** void cmd_get_measurements(){
 4916              		.loc 1 1117 0
 4917              		.cfi_startproc
 4918              		@ args = 0, pretend = 0, frame = 0
 4919              		@ frame_needed = 1, uses_anonymous_args = 0
 4920              		@ link register save eliminated.
 4921 0000 80B4     		push	{r7}
 4922              		.cfi_def_cfa_offset 4
 4923              		.cfi_offset 7, -4
 4924 0002 00AF     		add	r7, sp, #0
 4925              		.cfi_def_cfa_register 7
1118:..\src/command_processing.c ****  
1119:..\src/command_processing.c ****    
1120:..\src/command_processing.c **** }
 4926              		.loc 1 1120 0
 4927 0004 00BF     		nop
 4928 0006 BD46     		mov	sp, r7
 4929              		.cfi_def_cfa_register 13
 4930              		@ sp needed
 4931 0008 80BC     		pop	{r7}
 4932              		.cfi_restore 7
 4933              		.cfi_def_cfa_offset 0
 4934 000a 7047     		bx	lr
 4935              		.cfi_endproc
 4936              	.LFE95:
 4937              		.size	cmd_get_measurements, .-cmd_get_measurements
 4938              		.section	.text.cmd_get_velocities,"ax",%progbits
 4939              		.align	2
 4940              		.global	cmd_get_velocities
 4941              		.thumb
 4942              		.thumb_func
 4943              		.type	cmd_get_velocities, %function
 4944              	cmd_get_velocities:
 4945              	.LFB96:
1121:..\src/command_processing.c **** 
1122:..\src/command_processing.c **** void cmd_get_velocities(){
 4946              		.loc 1 1122 0
 4947              		.cfi_startproc
 4948              		@ args = 0, pretend = 0, frame = 0
 4949              		@ frame_needed = 1, uses_anonymous_args = 0
 4950              		@ link register save eliminated.
 4951 0000 80B4     		push	{r7}
 4952              		.cfi_def_cfa_offset 4
 4953              		.cfi_offset 7, -4
 4954 0002 00AF     		add	r7, sp, #0
 4955              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 125


1123:..\src/command_processing.c ****  
1124:..\src/command_processing.c **** }
 4956              		.loc 1 1124 0
 4957 0004 00BF     		nop
 4958 0006 BD46     		mov	sp, r7
 4959              		.cfi_def_cfa_register 13
 4960              		@ sp needed
 4961 0008 80BC     		pop	{r7}
 4962              		.cfi_restore 7
 4963              		.cfi_def_cfa_offset 0
 4964 000a 7047     		bx	lr
 4965              		.cfi_endproc
 4966              	.LFE96:
 4967              		.size	cmd_get_velocities, .-cmd_get_velocities
 4968              		.section	.text.cmd_get_accelerations,"ax",%progbits
 4969              		.align	2
 4970              		.global	cmd_get_accelerations
 4971              		.thumb
 4972              		.thumb_func
 4973              		.type	cmd_get_accelerations, %function
 4974              	cmd_get_accelerations:
 4975              	.LFB97:
1125:..\src/command_processing.c **** 
1126:..\src/command_processing.c **** void cmd_get_accelerations(){
 4976              		.loc 1 1126 0
 4977              		.cfi_startproc
 4978              		@ args = 0, pretend = 0, frame = 0
 4979              		@ frame_needed = 1, uses_anonymous_args = 0
 4980              		@ link register save eliminated.
 4981 0000 80B4     		push	{r7}
 4982              		.cfi_def_cfa_offset 4
 4983              		.cfi_offset 7, -4
 4984 0002 00AF     		add	r7, sp, #0
 4985              		.cfi_def_cfa_register 7
1127:..\src/command_processing.c ****  
1128:..\src/command_processing.c **** }
 4986              		.loc 1 1128 0
 4987 0004 00BF     		nop
 4988 0006 BD46     		mov	sp, r7
 4989              		.cfi_def_cfa_register 13
 4990              		@ sp needed
 4991 0008 80BC     		pop	{r7}
 4992              		.cfi_restore 7
 4993              		.cfi_def_cfa_offset 0
 4994 000a 7047     		bx	lr
 4995              		.cfi_endproc
 4996              	.LFE97:
 4997              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 4998              		.section	.text.cmd_get_joystick,"ax",%progbits
 4999              		.align	2
 5000              		.global	cmd_get_joystick
 5001              		.thumb
 5002              		.thumb_func
 5003              		.type	cmd_get_joystick, %function
 5004              	cmd_get_joystick:
 5005              	.LFB98:
1129:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 126


1130:..\src/command_processing.c **** void cmd_get_joystick() {
 5006              		.loc 1 1130 0
 5007              		.cfi_startproc
 5008              		@ args = 0, pretend = 0, frame = 0
 5009              		@ frame_needed = 1, uses_anonymous_args = 0
 5010              		@ link register save eliminated.
 5011 0000 80B4     		push	{r7}
 5012              		.cfi_def_cfa_offset 4
 5013              		.cfi_offset 7, -4
 5014 0002 00AF     		add	r7, sp, #0
 5015              		.cfi_def_cfa_register 7
1131:..\src/command_processing.c ****  
1132:..\src/command_processing.c **** }
 5016              		.loc 1 1132 0
 5017 0004 00BF     		nop
 5018 0006 BD46     		mov	sp, r7
 5019              		.cfi_def_cfa_register 13
 5020              		@ sp needed
 5021 0008 80BC     		pop	{r7}
 5022              		.cfi_restore 7
 5023              		.cfi_def_cfa_offset 0
 5024 000a 7047     		bx	lr
 5025              		.cfi_endproc
 5026              	.LFE98:
 5027              		.size	cmd_get_joystick, .-cmd_get_joystick
 5028              		.section	.text.cmd_set_inputs,"ax",%progbits
 5029              		.align	2
 5030              		.global	cmd_set_inputs
 5031              		.thumb
 5032              		.thumb_func
 5033              		.type	cmd_set_inputs, %function
 5034              	cmd_set_inputs:
 5035              	.LFB99:
1133:..\src/command_processing.c **** 
1134:..\src/command_processing.c **** void cmd_set_inputs(){
 5036              		.loc 1 1134 0
 5037              		.cfi_startproc
 5038              		@ args = 0, pretend = 0, frame = 0
 5039              		@ frame_needed = 1, uses_anonymous_args = 0
 5040              		@ link register save eliminated.
 5041 0000 80B4     		push	{r7}
 5042              		.cfi_def_cfa_offset 4
 5043              		.cfi_offset 7, -4
 5044 0002 00AF     		add	r7, sp, #0
 5045              		.cfi_def_cfa_register 7
1135:..\src/command_processing.c ****     
1136:..\src/command_processing.c **** }
 5046              		.loc 1 1136 0
 5047 0004 00BF     		nop
 5048 0006 BD46     		mov	sp, r7
 5049              		.cfi_def_cfa_register 13
 5050              		@ sp needed
 5051 0008 80BC     		pop	{r7}
 5052              		.cfi_restore 7
 5053              		.cfi_def_cfa_offset 0
 5054 000a 7047     		bx	lr
 5055              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 127


 5056              	.LFE99:
 5057              		.size	cmd_set_inputs, .-cmd_set_inputs
 5058              		.section	.text.cmd_activate,"ax",%progbits
 5059              		.align	2
 5060              		.global	cmd_activate
 5061              		.thumb
 5062              		.thumb_func
 5063              		.type	cmd_activate, %function
 5064              	cmd_activate:
 5065              	.LFB100:
1137:..\src/command_processing.c **** 
1138:..\src/command_processing.c **** void cmd_activate(){
 5066              		.loc 1 1138 0
 5067              		.cfi_startproc
 5068              		@ args = 0, pretend = 0, frame = 0
 5069              		@ frame_needed = 1, uses_anonymous_args = 0
 5070              		@ link register save eliminated.
 5071 0000 80B4     		push	{r7}
 5072              		.cfi_def_cfa_offset 4
 5073              		.cfi_offset 7, -4
 5074 0002 00AF     		add	r7, sp, #0
 5075              		.cfi_def_cfa_register 7
1139:..\src/command_processing.c ****     
1140:..\src/command_processing.c **** }
 5076              		.loc 1 1140 0
 5077 0004 00BF     		nop
 5078 0006 BD46     		mov	sp, r7
 5079              		.cfi_def_cfa_register 13
 5080              		@ sp needed
 5081 0008 80BC     		pop	{r7}
 5082              		.cfi_restore 7
 5083              		.cfi_def_cfa_offset 0
 5084 000a 7047     		bx	lr
 5085              		.cfi_endproc
 5086              	.LFE100:
 5087              		.size	cmd_activate, .-cmd_activate
 5088              		.section	.text.cmd_get_activate,"ax",%progbits
 5089              		.align	2
 5090              		.global	cmd_get_activate
 5091              		.thumb
 5092              		.thumb_func
 5093              		.type	cmd_get_activate, %function
 5094              	cmd_get_activate:
 5095              	.LFB101:
1141:..\src/command_processing.c **** 
1142:..\src/command_processing.c **** void cmd_get_activate(){
 5096              		.loc 1 1142 0
 5097              		.cfi_startproc
 5098              		@ args = 0, pretend = 0, frame = 0
 5099              		@ frame_needed = 1, uses_anonymous_args = 0
 5100              		@ link register save eliminated.
 5101 0000 80B4     		push	{r7}
 5102              		.cfi_def_cfa_offset 4
 5103              		.cfi_offset 7, -4
 5104 0002 00AF     		add	r7, sp, #0
 5105              		.cfi_def_cfa_register 7
1143:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 128


1144:..\src/command_processing.c **** }
 5106              		.loc 1 1144 0
 5107 0004 00BF     		nop
 5108 0006 BD46     		mov	sp, r7
 5109              		.cfi_def_cfa_register 13
 5110              		@ sp needed
 5111 0008 80BC     		pop	{r7}
 5112              		.cfi_restore 7
 5113              		.cfi_def_cfa_offset 0
 5114 000a 7047     		bx	lr
 5115              		.cfi_endproc
 5116              	.LFE101:
 5117              		.size	cmd_get_activate, .-cmd_get_activate
 5118              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 5119              		.align	2
 5120              		.global	cmd_get_curr_and_meas
 5121              		.thumb
 5122              		.thumb_func
 5123              		.type	cmd_get_curr_and_meas, %function
 5124              	cmd_get_curr_and_meas:
 5125              	.LFB102:
1145:..\src/command_processing.c **** 
1146:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 5126              		.loc 1 1146 0
 5127              		.cfi_startproc
 5128              		@ args = 0, pretend = 0, frame = 0
 5129              		@ frame_needed = 1, uses_anonymous_args = 0
 5130              		@ link register save eliminated.
 5131 0000 80B4     		push	{r7}
 5132              		.cfi_def_cfa_offset 4
 5133              		.cfi_offset 7, -4
 5134 0002 00AF     		add	r7, sp, #0
 5135              		.cfi_def_cfa_register 7
1147:..\src/command_processing.c ****    
1148:..\src/command_processing.c ****    
1149:..\src/command_processing.c **** }
 5136              		.loc 1 1149 0
 5137 0004 00BF     		nop
 5138 0006 BD46     		mov	sp, r7
 5139              		.cfi_def_cfa_register 13
 5140              		@ sp needed
 5141 0008 80BC     		pop	{r7}
 5142              		.cfi_restore 7
 5143              		.cfi_def_cfa_offset 0
 5144 000a 7047     		bx	lr
 5145              		.cfi_endproc
 5146              	.LFE102:
 5147              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 5148              		.section	.text.cmd_get_currents,"ax",%progbits
 5149              		.align	2
 5150              		.global	cmd_get_currents
 5151              		.thumb
 5152              		.thumb_func
 5153              		.type	cmd_get_currents, %function
 5154              	cmd_get_currents:
 5155              	.LFB103:
1150:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 129


1151:..\src/command_processing.c **** void cmd_get_currents(){
 5156              		.loc 1 1151 0
 5157              		.cfi_startproc
 5158              		@ args = 0, pretend = 0, frame = 0
 5159              		@ frame_needed = 1, uses_anonymous_args = 0
 5160              		@ link register save eliminated.
 5161 0000 80B4     		push	{r7}
 5162              		.cfi_def_cfa_offset 4
 5163              		.cfi_offset 7, -4
 5164 0002 00AF     		add	r7, sp, #0
 5165              		.cfi_def_cfa_register 7
1152:..\src/command_processing.c ****    
1153:..\src/command_processing.c **** }
 5166              		.loc 1 1153 0
 5167 0004 00BF     		nop
 5168 0006 BD46     		mov	sp, r7
 5169              		.cfi_def_cfa_register 13
 5170              		@ sp needed
 5171 0008 80BC     		pop	{r7}
 5172              		.cfi_restore 7
 5173              		.cfi_def_cfa_offset 0
 5174 000a 7047     		bx	lr
 5175              		.cfi_endproc
 5176              	.LFE103:
 5177              		.size	cmd_get_currents, .-cmd_get_currents
 5178              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 5179              		.align	2
 5180              		.global	cmd_get_currents_for_cuff
 5181              		.thumb
 5182              		.thumb_func
 5183              		.type	cmd_get_currents_for_cuff, %function
 5184              	cmd_get_currents_for_cuff:
 5185              	.LFB104:
1154:..\src/command_processing.c **** 
1155:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 5186              		.loc 1 1155 0
 5187              		.cfi_startproc
 5188              		@ args = 0, pretend = 0, frame = 0
 5189              		@ frame_needed = 1, uses_anonymous_args = 0
 5190              		@ link register save eliminated.
 5191 0000 80B4     		push	{r7}
 5192              		.cfi_def_cfa_offset 4
 5193              		.cfi_offset 7, -4
 5194 0002 00AF     		add	r7, sp, #0
 5195              		.cfi_def_cfa_register 7
1156:..\src/command_processing.c ****    
1157:..\src/command_processing.c **** }
 5196              		.loc 1 1157 0
 5197 0004 00BF     		nop
 5198 0006 BD46     		mov	sp, r7
 5199              		.cfi_def_cfa_register 13
 5200              		@ sp needed
 5201 0008 80BC     		pop	{r7}
 5202              		.cfi_restore 7
 5203              		.cfi_def_cfa_offset 0
 5204 000a 7047     		bx	lr
 5205              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 130


 5206              	.LFE104:
 5207              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 5208              		.section	.text.cmd_get_vibrotactile_inputs,"ax",%progbits
 5209              		.align	2
 5210              		.global	cmd_get_vibrotactile_inputs
 5211              		.thumb
 5212              		.thumb_func
 5213              		.type	cmd_get_vibrotactile_inputs, %function
 5214              	cmd_get_vibrotactile_inputs:
 5215              	.LFB105:
1158:..\src/command_processing.c **** 
1159:..\src/command_processing.c **** void cmd_get_vibrotactile_inputs(){
 5216              		.loc 1 1159 0
 5217              		.cfi_startproc
 5218              		@ args = 0, pretend = 0, frame = 0
 5219              		@ frame_needed = 1, uses_anonymous_args = 0
 5220              		@ link register save eliminated.
 5221 0000 80B4     		push	{r7}
 5222              		.cfi_def_cfa_offset 4
 5223              		.cfi_offset 7, -4
 5224 0002 00AF     		add	r7, sp, #0
 5225              		.cfi_def_cfa_register 7
1160:..\src/command_processing.c ****     
1161:..\src/command_processing.c **** }
 5226              		.loc 1 1161 0
 5227 0004 00BF     		nop
 5228 0006 BD46     		mov	sp, r7
 5229              		.cfi_def_cfa_register 13
 5230              		@ sp needed
 5231 0008 80BC     		pop	{r7}
 5232              		.cfi_restore 7
 5233              		.cfi_def_cfa_offset 0
 5234 000a 7047     		bx	lr
 5235              		.cfi_endproc
 5236              	.LFE105:
 5237              		.size	cmd_get_vibrotactile_inputs, .-cmd_get_vibrotactile_inputs
 5238              		.section	.text.commReadIMUFromSH,"ax",%progbits
 5239              		.align	2
 5240              		.global	commReadIMUFromSH
 5241              		.thumb
 5242              		.thumb_func
 5243              		.type	commReadIMUFromSH, %function
 5244              	commReadIMUFromSH:
 5245              	.LFB106:
1162:..\src/command_processing.c **** 
1163:..\src/command_processing.c **** //==============================================================================
1164:..\src/command_processing.c **** //                                                 READ IMU VALUES FROM SOFTHAND
1165:..\src/command_processing.c **** //==============================================================================
1166:..\src/command_processing.c **** void commReadIMUFromSH(){
 5246              		.loc 1 1166 0
 5247              		.cfi_startproc
 5248              		@ args = 0, pretend = 0, frame = 32
 5249              		@ frame_needed = 1, uses_anonymous_args = 0
 5250 0000 80B5     		push	{r7, lr}
 5251              		.cfi_def_cfa_offset 8
 5252              		.cfi_offset 7, -8
 5253              		.cfi_offset 14, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 131


 5254 0002 88B0     		sub	sp, sp, #32
 5255              		.cfi_def_cfa_offset 40
 5256 0004 00AF     		add	r7, sp, #0
 5257              		.cfi_def_cfa_register 7
1167:..\src/command_processing.c **** 
1168:..\src/command_processing.c ****     // Send CMD_GET_VIBROTACTILE_INPUTS to the slave and gets the PWM control values for the vibrot
1169:..\src/command_processing.c ****     // resulted from the processed IMU values.
1170:..\src/command_processing.c ****     
1171:..\src/command_processing.c ****     uint8 packet_data[16];
1172:..\src/command_processing.c ****     uint8 packet_length;
1173:..\src/command_processing.c ****    
1174:..\src/command_processing.c ****     uint32 t_start, t_end;
1175:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 5258              		.loc 1 1175 0
 5259 0006 0123     		movs	r3, #1
 5260 0008 FB77     		strb	r3, [r7, #31]
1176:..\src/command_processing.c **** 
1177:..\src/command_processing.c ****     packet_length = 2;
 5261              		.loc 1 1177 0
 5262 000a 0223     		movs	r3, #2
 5263 000c BB77     		strb	r3, [r7, #30]
1178:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VIBROTACTILE_INPUTS;
 5264              		.loc 1 1178 0
 5265 000e FA23     		movs	r3, #250
 5266 0010 3B71     		strb	r3, [r7, #4]
1179:..\src/command_processing.c ****     packet_data[1] = CMD_GET_VIBROTACTILE_INPUTS;
 5267              		.loc 1 1179 0
 5268 0012 FA23     		movs	r3, #250
 5269 0014 7B71     		strb	r3, [r7, #5]
1180:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, c_mem.MS.slave_ID);
 5270              		.loc 1 1180 0
 5271 0016 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 5272 0018 99B2     		uxth	r1, r3
 5273 001a 234B     		ldr	r3, .L275
 5274 001c 93F84120 		ldrb	r2, [r3, #65]	@ zero_extendqisi2
 5275 0020 3B1D     		adds	r3, r7, #4
 5276 0022 1846     		mov	r0, r3
 5277 0024 FFF7FEFF 		bl	commWriteID
1181:..\src/command_processing.c **** 
1182:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 5278              		.loc 1 1182 0
 5279 0028 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 5280 002c 0346     		mov	r3, r0
 5281 002e BB61     		str	r3, [r7, #24]
1183:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_VIBROTACTILE_INPUTS) {
 5282              		.loc 1 1183 0
 5283 0030 18E0     		b	.L269
 5284              	.L272:
1184:..\src/command_processing.c ****         if (interrupt_flag){
 5285              		.loc 1 1184 0
 5286 0032 1E4B     		ldr	r3, .L275+4
 5287 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5288 0036 002B     		cmp	r3, #0
 5289 0038 04D0     		beq	.L270
1185:..\src/command_processing.c ****             interrupt_flag = FALSE;
 5290              		.loc 1 1185 0
 5291 003a 1C4B     		ldr	r3, .L275+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 132


 5292 003c 0022     		movs	r2, #0
 5293 003e 1A70     		strb	r2, [r3]
1186:..\src/command_processing.c ****             interrupt_manager();
 5294              		.loc 1 1186 0
 5295 0040 FFF7FEFF 		bl	interrupt_manager
 5296              	.L270:
1187:..\src/command_processing.c ****         }
1188:..\src/command_processing.c **** 
1189:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 5297              		.loc 1 1189 0
 5298 0044 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 5299 0048 0346     		mov	r3, r0
 5300 004a 7B61     		str	r3, [r7, #20]
1190:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 5301              		.loc 1 1190 0
 5302 004c BA69     		ldr	r2, [r7, #24]
 5303 004e 7B69     		ldr	r3, [r7, #20]
 5304 0050 D31A     		subs	r3, r2, r3
 5305 0052 174A     		ldr	r2, .L275+8
 5306 0054 9342     		cmp	r3, r2
 5307 0056 05D9     		bls	.L269
1191:..\src/command_processing.c ****             read_flag = FALSE;
 5308              		.loc 1 1191 0
 5309 0058 0023     		movs	r3, #0
 5310 005a FB77     		strb	r3, [r7, #31]
1192:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 5311              		.loc 1 1192 0
 5312 005c 154B     		ldr	r3, .L275+12
 5313 005e 0022     		movs	r2, #0
 5314 0060 1A70     		strb	r2, [r3]
1193:..\src/command_processing.c ****             break;
 5315              		.loc 1 1193 0
 5316 0062 03E0     		b	.L271
 5317              	.L269:
1183:..\src/command_processing.c ****         if (interrupt_flag){
 5318              		.loc 1 1183 0
 5319 0064 144B     		ldr	r3, .L275+16
 5320 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5321 0068 FB2B     		cmp	r3, #251
 5322 006a E2D1     		bne	.L272
 5323              	.L271:
1194:..\src/command_processing.c ****         }
1195:..\src/command_processing.c ****     }
1196:..\src/command_processing.c **** 
1197:..\src/command_processing.c ****         if (read_flag) {
 5324              		.loc 1 1197 0
 5325 006c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5326 006e 002B     		cmp	r3, #0
 5327 0070 15D0     		beq	.L274
1198:..\src/command_processing.c ****         PWM_IMU_1 = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);      
 5328              		.loc 1 1198 0
 5329 0072 114B     		ldr	r3, .L275+16
 5330 0074 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5331 0076 1B02     		lsls	r3, r3, #8
 5332 0078 1AB2     		sxth	r2, r3
 5333 007a 0F4B     		ldr	r3, .L275+16
 5334 007c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 133


 5335 007e 1BB2     		sxth	r3, r3
 5336 0080 1343     		orrs	r3, r3, r2
 5337 0082 1AB2     		sxth	r2, r3
 5338 0084 0D4B     		ldr	r3, .L275+20
 5339 0086 1A80     		strh	r2, [r3]	@ movhi
1199:..\src/command_processing.c ****         PWM_IMU_2 = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);      
 5340              		.loc 1 1199 0
 5341 0088 0B4B     		ldr	r3, .L275+16
 5342 008a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 5343 008c 1B02     		lsls	r3, r3, #8
 5344 008e 1AB2     		sxth	r2, r3
 5345 0090 094B     		ldr	r3, .L275+16
 5346 0092 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 5347 0094 1BB2     		sxth	r3, r3
 5348 0096 1343     		orrs	r3, r3, r2
 5349 0098 1AB2     		sxth	r2, r3
 5350 009a 094B     		ldr	r3, .L275+24
 5351 009c 1A80     		strh	r2, [r3]	@ movhi
 5352              	.L274:
1200:..\src/command_processing.c ****     }
1201:..\src/command_processing.c ****     
1202:..\src/command_processing.c **** }
 5353              		.loc 1 1202 0
 5354 009e 00BF     		nop
 5355 00a0 2037     		adds	r7, r7, #32
 5356              		.cfi_def_cfa_offset 8
 5357 00a2 BD46     		mov	sp, r7
 5358              		.cfi_def_cfa_register 13
 5359              		@ sp needed
 5360 00a4 80BD     		pop	{r7, pc}
 5361              	.L276:
 5362 00a6 00BF     		.align	2
 5363              	.L275:
 5364 00a8 00000000 		.word	c_mem
 5365 00ac 00000000 		.word	interrupt_flag
 5366 00b0 20AA4400 		.word	4500000
 5367 00b4 00000000 		.word	master_mode
 5368 00b8 00000000 		.word	g_rx
 5369 00bc 00000000 		.word	PWM_IMU_1
 5370 00c0 00000000 		.word	PWM_IMU_2
 5371              		.cfi_endproc
 5372              	.LFE106:
 5373              		.size	commReadIMUFromSH, .-commReadIMUFromSH
 5374              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 5375              		.align	2
 5376              		.global	commReadResCurrFromSH
 5377              		.thumb
 5378              		.thumb_func
 5379              		.type	commReadResCurrFromSH, %function
 5380              	commReadResCurrFromSH:
 5381              	.LFB107:
1203:..\src/command_processing.c **** 
1204:..\src/command_processing.c **** //==============================================================================
1205:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
1206:..\src/command_processing.c **** //==============================================================================
1207:..\src/command_processing.c **** 
1208:..\src/command_processing.c **** int16 commReadResCurrFromSH()
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 134


1209:..\src/command_processing.c **** {
 5382              		.loc 1 1209 0
 5383              		.cfi_startproc
 5384              		@ args = 0, pretend = 0, frame = 32
 5385              		@ frame_needed = 1, uses_anonymous_args = 0
 5386 0000 80B5     		push	{r7, lr}
 5387              		.cfi_def_cfa_offset 8
 5388              		.cfi_offset 7, -8
 5389              		.cfi_offset 14, -4
 5390 0002 88B0     		sub	sp, sp, #32
 5391              		.cfi_def_cfa_offset 40
 5392 0004 00AF     		add	r7, sp, #0
 5393              		.cfi_def_cfa_register 7
1210:..\src/command_processing.c ****     uint8 packet_data[16];
1211:..\src/command_processing.c ****     uint8 packet_length;
1212:..\src/command_processing.c ****     int16 curr_diff = 0;
 5394              		.loc 1 1212 0
 5395 0006 0023     		movs	r3, #0
 5396 0008 FB83     		strh	r3, [r7, #30]	@ movhi
1213:..\src/command_processing.c ****     uint32 t_start, t_end;
1214:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 5397              		.loc 1 1214 0
 5398 000a 0123     		movs	r3, #1
 5399 000c 7B77     		strb	r3, [r7, #29]
1215:..\src/command_processing.c **** 
1216:..\src/command_processing.c ****     packet_length = 2;
 5400              		.loc 1 1216 0
 5401 000e 0223     		movs	r3, #2
 5402 0010 3B77     		strb	r3, [r7, #28]
1217:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 5403              		.loc 1 1217 0
 5404 0012 8C23     		movs	r3, #140
 5405 0014 3B71     		strb	r3, [r7, #4]
1218:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 5406              		.loc 1 1218 0
 5407 0016 8C23     		movs	r3, #140
 5408 0018 7B71     		strb	r3, [r7, #5]
1219:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, c_mem.MS.slave_ID);
 5409              		.loc 1 1219 0
 5410 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 5411 001c 99B2     		uxth	r1, r3
 5412 001e 1D4B     		ldr	r3, .L284
 5413 0020 93F84120 		ldrb	r2, [r3, #65]	@ zero_extendqisi2
 5414 0024 3B1D     		adds	r3, r7, #4
 5415 0026 1846     		mov	r0, r3
 5416 0028 FFF7FEFF 		bl	commWriteID
1220:..\src/command_processing.c **** 
1221:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 5417              		.loc 1 1221 0
 5418 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 5419 0030 0346     		mov	r3, r0
 5420 0032 BB61     		str	r3, [r7, #24]
1222:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 5421              		.loc 1 1222 0
 5422 0034 18E0     		b	.L278
 5423              	.L281:
1223:..\src/command_processing.c ****         if (interrupt_flag){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 135


 5424              		.loc 1 1223 0
 5425 0036 184B     		ldr	r3, .L284+4
 5426 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5427 003a 002B     		cmp	r3, #0
 5428 003c 04D0     		beq	.L279
1224:..\src/command_processing.c ****             interrupt_flag = FALSE;
 5429              		.loc 1 1224 0
 5430 003e 164B     		ldr	r3, .L284+4
 5431 0040 0022     		movs	r2, #0
 5432 0042 1A70     		strb	r2, [r3]
1225:..\src/command_processing.c ****             interrupt_manager();
 5433              		.loc 1 1225 0
 5434 0044 FFF7FEFF 		bl	interrupt_manager
 5435              	.L279:
1226:..\src/command_processing.c ****         }
1227:..\src/command_processing.c **** 
1228:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 5436              		.loc 1 1228 0
 5437 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 5438 004c 0346     		mov	r3, r0
 5439 004e 7B61     		str	r3, [r7, #20]
1229:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 5440              		.loc 1 1229 0
 5441 0050 BA69     		ldr	r2, [r7, #24]
 5442 0052 7B69     		ldr	r3, [r7, #20]
 5443 0054 D31A     		subs	r3, r2, r3
 5444 0056 114A     		ldr	r2, .L284+8
 5445 0058 9342     		cmp	r3, r2
 5446 005a 05D9     		bls	.L278
1230:..\src/command_processing.c ****             read_flag = FALSE;
 5447              		.loc 1 1230 0
 5448 005c 0023     		movs	r3, #0
 5449 005e 7B77     		strb	r3, [r7, #29]
1231:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 5450              		.loc 1 1231 0
 5451 0060 0F4B     		ldr	r3, .L284+12
 5452 0062 0022     		movs	r2, #0
 5453 0064 1A70     		strb	r2, [r3]
1232:..\src/command_processing.c ****             break;
 5454              		.loc 1 1232 0
 5455 0066 03E0     		b	.L280
 5456              	.L278:
1222:..\src/command_processing.c ****         if (interrupt_flag){
 5457              		.loc 1 1222 0
 5458 0068 0E4B     		ldr	r3, .L284+16
 5459 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5460 006c 8E2B     		cmp	r3, #142
 5461 006e E2D1     		bne	.L281
 5462              	.L280:
1233:..\src/command_processing.c ****         }
1234:..\src/command_processing.c ****     }
1235:..\src/command_processing.c **** 
1236:..\src/command_processing.c ****     if (read_flag) {
 5463              		.loc 1 1236 0
 5464 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 5465 0072 002B     		cmp	r3, #0
 5466 0074 08D0     		beq	.L282
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 136


1237:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 5467              		.loc 1 1237 0
 5468 0076 0B4B     		ldr	r3, .L284+16
 5469 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5470 007a 1B02     		lsls	r3, r3, #8
 5471 007c 1AB2     		sxth	r2, r3
 5472 007e 094B     		ldr	r3, .L284+16
 5473 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5474 0082 1BB2     		sxth	r3, r3
 5475 0084 1343     		orrs	r3, r3, r2
 5476 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 5477              	.L282:
1238:..\src/command_processing.c ****     }
1239:..\src/command_processing.c ****     
1240:..\src/command_processing.c ****     return curr_diff;
 5478              		.loc 1 1240 0
 5479 0088 B7F91E30 		ldrsh	r3, [r7, #30]
1241:..\src/command_processing.c **** }
 5480              		.loc 1 1241 0
 5481 008c 1846     		mov	r0, r3
 5482 008e 2037     		adds	r7, r7, #32
 5483              		.cfi_def_cfa_offset 8
 5484 0090 BD46     		mov	sp, r7
 5485              		.cfi_def_cfa_register 13
 5486              		@ sp needed
 5487 0092 80BD     		pop	{r7, pc}
 5488              	.L285:
 5489              		.align	2
 5490              	.L284:
 5491 0094 00000000 		.word	c_mem
 5492 0098 00000000 		.word	interrupt_flag
 5493 009c 20AA4400 		.word	4500000
 5494 00a0 00000000 		.word	master_mode
 5495 00a4 00000000 		.word	g_rx
 5496              		.cfi_endproc
 5497              	.LFE107:
 5498              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 5499              		.section	.text.cmd_set_baudrate,"ax",%progbits
 5500              		.align	2
 5501              		.global	cmd_set_baudrate
 5502              		.thumb
 5503              		.thumb_func
 5504              		.type	cmd_set_baudrate, %function
 5505              	cmd_set_baudrate:
 5506              	.LFB108:
1242:..\src/command_processing.c **** 
1243:..\src/command_processing.c **** 
1244:..\src/command_processing.c **** /////////////////////////////////////////////////////////////////////////////////////
1245:..\src/command_processing.c **** 
1246:..\src/command_processing.c **** void cmd_set_baudrate(){
 5507              		.loc 1 1246 0
 5508              		.cfi_startproc
 5509              		@ args = 0, pretend = 0, frame = 0
 5510              		@ frame_needed = 1, uses_anonymous_args = 0
 5511              		@ link register save eliminated.
 5512 0000 80B4     		push	{r7}
 5513              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 137


 5514              		.cfi_offset 7, -4
 5515 0002 00AF     		add	r7, sp, #0
 5516              		.cfi_def_cfa_register 7
1247:..\src/command_processing.c ****     
1248:..\src/command_processing.c **** }
 5517              		.loc 1 1248 0
 5518 0004 00BF     		nop
 5519 0006 BD46     		mov	sp, r7
 5520              		.cfi_def_cfa_register 13
 5521              		@ sp needed
 5522 0008 80BC     		pop	{r7}
 5523              		.cfi_restore 7
 5524              		.cfi_def_cfa_offset 0
 5525 000a 7047     		bx	lr
 5526              		.cfi_endproc
 5527              	.LFE108:
 5528              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 5529              		.section	.text.cmd_ping,"ax",%progbits
 5530              		.align	2
 5531              		.global	cmd_ping
 5532              		.thumb
 5533              		.thumb_func
 5534              		.type	cmd_ping, %function
 5535              	cmd_ping:
 5536              	.LFB109:
1249:..\src/command_processing.c **** 
1250:..\src/command_processing.c **** void cmd_ping(){
 5537              		.loc 1 1250 0
 5538              		.cfi_startproc
 5539              		@ args = 0, pretend = 0, frame = 8
 5540              		@ frame_needed = 1, uses_anonymous_args = 0
 5541 0000 80B5     		push	{r7, lr}
 5542              		.cfi_def_cfa_offset 8
 5543              		.cfi_offset 7, -8
 5544              		.cfi_offset 14, -4
 5545 0002 82B0     		sub	sp, sp, #8
 5546              		.cfi_def_cfa_offset 16
 5547 0004 00AF     		add	r7, sp, #0
 5548              		.cfi_def_cfa_register 7
1251:..\src/command_processing.c **** 
1252:..\src/command_processing.c ****     uint8 packet_data[2];
1253:..\src/command_processing.c **** 
1254:..\src/command_processing.c ****     // Header
1255:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 5549              		.loc 1 1255 0
 5550 0006 0023     		movs	r3, #0
 5551 0008 3B71     		strb	r3, [r7, #4]
1256:..\src/command_processing.c ****     
1257:..\src/command_processing.c ****     // Load Payload
1258:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 5552              		.loc 1 1258 0
 5553 000a 0023     		movs	r3, #0
 5554 000c 7B71     		strb	r3, [r7, #5]
1259:..\src/command_processing.c **** 
1260:..\src/command_processing.c ****     // Send Package to uart
1261:..\src/command_processing.c ****     commWrite(packet_data, 2);
 5555              		.loc 1 1261 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 138


 5556 000e 3B1D     		adds	r3, r7, #4
 5557 0010 0221     		movs	r1, #2
 5558 0012 1846     		mov	r0, r3
 5559 0014 FFF7FEFF 		bl	commWrite
1262:..\src/command_processing.c **** }
 5560              		.loc 1 1262 0
 5561 0018 00BF     		nop
 5562 001a 0837     		adds	r7, r7, #8
 5563              		.cfi_def_cfa_offset 8
 5564 001c BD46     		mov	sp, r7
 5565              		.cfi_def_cfa_register 13
 5566              		@ sp needed
 5567 001e 80BD     		pop	{r7, pc}
 5568              		.cfi_endproc
 5569              	.LFE109:
 5570              		.size	cmd_ping, .-cmd_ping
 5571              		.section	.text.cmd_get_inputs,"ax",%progbits
 5572              		.align	2
 5573              		.global	cmd_get_inputs
 5574              		.thumb
 5575              		.thumb_func
 5576              		.type	cmd_get_inputs, %function
 5577              	cmd_get_inputs:
 5578              	.LFB110:
1263:..\src/command_processing.c **** 
1264:..\src/command_processing.c **** void cmd_get_inputs(){
 5579              		.loc 1 1264 0
 5580              		.cfi_startproc
 5581              		@ args = 0, pretend = 0, frame = 0
 5582              		@ frame_needed = 1, uses_anonymous_args = 0
 5583              		@ link register save eliminated.
 5584 0000 80B4     		push	{r7}
 5585              		.cfi_def_cfa_offset 4
 5586              		.cfi_offset 7, -4
 5587 0002 00AF     		add	r7, sp, #0
 5588              		.cfi_def_cfa_register 7
1265:..\src/command_processing.c **** 
1266:..\src/command_processing.c **** }
 5589              		.loc 1 1266 0
 5590 0004 00BF     		nop
 5591 0006 BD46     		mov	sp, r7
 5592              		.cfi_def_cfa_register 13
 5593              		@ sp needed
 5594 0008 80BC     		pop	{r7}
 5595              		.cfi_restore 7
 5596              		.cfi_def_cfa_offset 0
 5597 000a 7047     		bx	lr
 5598              		.cfi_endproc
 5599              	.LFE110:
 5600              		.size	cmd_get_inputs, .-cmd_get_inputs
 5601              		.section	.text.cmd_store_params,"ax",%progbits
 5602              		.align	2
 5603              		.global	cmd_store_params
 5604              		.thumb
 5605              		.thumb_func
 5606              		.type	cmd_store_params, %function
 5607              	cmd_store_params:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 139


 5608              	.LFB111:
1267:..\src/command_processing.c **** 
1268:..\src/command_processing.c **** void cmd_store_params(){
 5609              		.loc 1 1268 0
 5610              		.cfi_startproc
 5611              		@ args = 0, pretend = 0, frame = 8
 5612              		@ frame_needed = 1, uses_anonymous_args = 0
 5613 0000 80B5     		push	{r7, lr}
 5614              		.cfi_def_cfa_offset 8
 5615              		.cfi_offset 7, -8
 5616              		.cfi_offset 14, -4
 5617 0002 82B0     		sub	sp, sp, #8
 5618              		.cfi_def_cfa_offset 16
 5619 0004 00AF     		add	r7, sp, #0
 5620              		.cfi_def_cfa_register 7
1269:..\src/command_processing.c ****     
1270:..\src/command_processing.c ****     uint8 CYDATA packet_length = 2;
 5621              		.loc 1 1270 0
 5622 0006 0223     		movs	r3, #2
 5623 0008 FB71     		strb	r3, [r7, #7]
1271:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
1272:..\src/command_processing.c ****     uint8 CYDATA old_id;
1273:..\src/command_processing.c ****       
1274:..\src/command_processing.c ****     // Store params 
1275:..\src/command_processing.c **** 
1276:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 5624              		.loc 1 1276 0
 5625 000a 1F4B     		ldr	r3, .L297
 5626 000c 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 5627 000e 1F4B     		ldr	r3, .L297+4
 5628 0010 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5629 0012 9A42     		cmp	r2, r3
 5630 0014 20D0     		beq	.L290
1277:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 5631              		.loc 1 1277 0
 5632 0016 1C4B     		ldr	r3, .L297
 5633 0018 1B7C     		ldrb	r3, [r3, #16]
 5634 001a BB71     		strb	r3, [r7, #6]
1278:..\src/command_processing.c ****         if(memStore(0)) {
 5635              		.loc 1 1278 0
 5636 001c 0020     		movs	r0, #0
 5637 001e FFF7FEFF 		bl	memStore
 5638 0022 0346     		mov	r3, r0
 5639 0024 002B     		cmp	r3, #0
 5640 0026 0BD0     		beq	.L291
1279:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 5641              		.loc 1 1279 0
 5642 0028 0123     		movs	r3, #1
 5643 002a 3B71     		strb	r3, [r7, #4]
1280:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 5644              		.loc 1 1280 0
 5645 002c 0123     		movs	r3, #1
 5646 002e 7B71     		strb	r3, [r7, #5]
1281:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_length, old_id);
 5647              		.loc 1 1281 0
 5648 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5649 0032 99B2     		uxth	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 140


 5650 0034 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5651 0036 3B1D     		adds	r3, r7, #4
 5652 0038 1846     		mov	r0, r3
 5653 003a FFF7FEFF 		bl	commWrite_old_id
 5654 003e 18E0     		b	.L293
 5655              	.L291:
1282:..\src/command_processing.c ****         }    
1283:..\src/command_processing.c ****         else{
1284:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 5656              		.loc 1 1284 0
 5657 0040 0023     		movs	r3, #0
 5658 0042 3B71     		strb	r3, [r7, #4]
1285:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 5659              		.loc 1 1285 0
 5660 0044 0023     		movs	r3, #0
 5661 0046 7B71     		strb	r3, [r7, #5]
1286:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_length, old_id);
 5662              		.loc 1 1286 0
 5663 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5664 004a 99B2     		uxth	r1, r3
 5665 004c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5666 004e 3B1D     		adds	r3, r7, #4
 5667 0050 1846     		mov	r0, r3
 5668 0052 FFF7FEFF 		bl	commWrite_old_id
 5669 0056 0CE0     		b	.L293
 5670              	.L290:
1287:..\src/command_processing.c ****         }
1288:..\src/command_processing.c ****     }    
1289:..\src/command_processing.c ****     else {
1290:..\src/command_processing.c ****         if(memStore(0))
 5671              		.loc 1 1290 0
 5672 0058 0020     		movs	r0, #0
 5673 005a FFF7FEFF 		bl	memStore
 5674 005e 0346     		mov	r3, r0
 5675 0060 002B     		cmp	r3, #0
 5676 0062 03D0     		beq	.L294
1291:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 5677              		.loc 1 1291 0
 5678 0064 0120     		movs	r0, #1
 5679 0066 FFF7FEFF 		bl	sendAcknowledgment
 5680 006a 02E0     		b	.L293
 5681              	.L294:
1292:..\src/command_processing.c ****         else
1293:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 5682              		.loc 1 1293 0
 5683 006c 0020     		movs	r0, #0
 5684 006e FFF7FEFF 		bl	sendAcknowledgment
 5685              	.L293:
1294:..\src/command_processing.c ****     }
1295:..\src/command_processing.c ****     
1296:..\src/command_processing.c ****     // FW reset (if necessary)
1297:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 5686              		.loc 1 1297 0
 5687 0072 074B     		ldr	r3, .L297+8
 5688 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5689 0076 012B     		cmp	r3, #1
 5690 0078 01D1     		bne	.L296
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 141


1298:..\src/command_processing.c ****         CySoftwareReset();
 5691              		.loc 1 1298 0
 5692 007a FFF7FEFF 		bl	CySoftwareReset
 5693              	.L296:
1299:..\src/command_processing.c ****     }
1300:..\src/command_processing.c **** }
 5694              		.loc 1 1300 0
 5695 007e 00BF     		nop
 5696 0080 0837     		adds	r7, r7, #8
 5697              		.cfi_def_cfa_offset 8
 5698 0082 BD46     		mov	sp, r7
 5699              		.cfi_def_cfa_register 13
 5700              		@ sp needed
 5701 0084 80BD     		pop	{r7, pc}
 5702              	.L298:
 5703 0086 00BF     		.align	2
 5704              	.L297:
 5705 0088 00000000 		.word	c_mem
 5706 008c 00000000 		.word	g_mem
 5707 0090 00000000 		.word	reset_PSoC_flag
 5708              		.cfi_endproc
 5709              	.LFE111:
 5710              		.size	cmd_store_params, .-cmd_store_params
 5711              		.section	.text.cmd_get_emg,"ax",%progbits
 5712              		.align	2
 5713              		.global	cmd_get_emg
 5714              		.thumb
 5715              		.thumb_func
 5716              		.type	cmd_get_emg, %function
 5717              	cmd_get_emg:
 5718              	.LFB112:
1301:..\src/command_processing.c **** 
1302:..\src/command_processing.c **** void cmd_get_emg(){
 5719              		.loc 1 1302 0
 5720              		.cfi_startproc
 5721              		@ args = 0, pretend = 0, frame = 16
 5722              		@ frame_needed = 1, uses_anonymous_args = 0
 5723 0000 80B5     		push	{r7, lr}
 5724              		.cfi_def_cfa_offset 8
 5725              		.cfi_offset 7, -8
 5726              		.cfi_offset 14, -4
 5727 0002 84B0     		sub	sp, sp, #16
 5728              		.cfi_def_cfa_offset 24
 5729 0004 00AF     		add	r7, sp, #0
 5730              		.cfi_def_cfa_register 7
1303:..\src/command_processing.c ****     
1304:..\src/command_processing.c ****     uint8 packet_data[6];
1305:..\src/command_processing.c ****     int16 aux_int16;
1306:..\src/command_processing.c ****     
1307:..\src/command_processing.c ****     // Header        
1308:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 5731              		.loc 1 1308 0
 5732 0006 8823     		movs	r3, #136
 5733 0008 3B72     		strb	r3, [r7, #8]
1309:..\src/command_processing.c ****     
1310:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 5734              		.loc 1 1310 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 142


 5735 000a 144B     		ldr	r3, .L300
 5736 000c 1B68     		ldr	r3, [r3]
 5737 000e 1BB2     		sxth	r3, r3
 5738 0010 FB80     		strh	r3, [r7, #6]	@ movhi
1311:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 5739              		.loc 1 1311 0
 5740 0012 BB1D     		adds	r3, r7, #6
 5741 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5742 0016 BB72     		strb	r3, [r7, #10]
1312:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 5743              		.loc 1 1312 0
 5744 0018 BB1D     		adds	r3, r7, #6
 5745 001a 0133     		adds	r3, r3, #1
 5746 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5747 001e 7B72     		strb	r3, [r7, #9]
1313:..\src/command_processing.c ****     
1314:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 5748              		.loc 1 1314 0
 5749 0020 0E4B     		ldr	r3, .L300
 5750 0022 5B68     		ldr	r3, [r3, #4]
 5751 0024 1BB2     		sxth	r3, r3
 5752 0026 FB80     		strh	r3, [r7, #6]	@ movhi
1315:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 5753              		.loc 1 1315 0
 5754 0028 BB1D     		adds	r3, r7, #6
 5755 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5756 002c 3B73     		strb	r3, [r7, #12]
1316:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 5757              		.loc 1 1316 0
 5758 002e BB1D     		adds	r3, r7, #6
 5759 0030 0133     		adds	r3, r3, #1
 5760 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5761 0034 FB72     		strb	r3, [r7, #11]
1317:..\src/command_processing.c **** 
1318:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 5762              		.loc 1 1318 0
 5763 0036 07F10803 		add	r3, r7, #8
 5764 003a 0521     		movs	r1, #5
 5765 003c 1846     		mov	r0, r3
 5766 003e FFF7FEFF 		bl	LCRChecksum
 5767 0042 0346     		mov	r3, r0
 5768 0044 7B73     		strb	r3, [r7, #13]
1319:..\src/command_processing.c **** 
1320:..\src/command_processing.c ****     commWrite(packet_data, 6);
 5769              		.loc 1 1320 0
 5770 0046 07F10803 		add	r3, r7, #8
 5771 004a 0621     		movs	r1, #6
 5772 004c 1846     		mov	r0, r3
 5773 004e FFF7FEFF 		bl	commWrite
1321:..\src/command_processing.c **** 
1322:..\src/command_processing.c **** }
 5774              		.loc 1 1322 0
 5775 0052 00BF     		nop
 5776 0054 1037     		adds	r7, r7, #16
 5777              		.cfi_def_cfa_offset 8
 5778 0056 BD46     		mov	sp, r7
 5779              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 143


 5780              		@ sp needed
 5781 0058 80BD     		pop	{r7, pc}
 5782              	.L301:
 5783 005a 00BF     		.align	2
 5784              	.L300:
 5785 005c 00000000 		.word	g_adc_measOld
 5786              		.cfi_endproc
 5787              	.LFE112:
 5788              		.size	cmd_get_emg, .-cmd_get_emg
 5789              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 5790              		.align	2
 5791              		.global	cmd_get_imu_readings
 5792              		.thumb
 5793              		.thumb_func
 5794              		.type	cmd_get_imu_readings, %function
 5795              	cmd_get_imu_readings:
 5796              	.LFB113:
1323:..\src/command_processing.c **** 
1324:..\src/command_processing.c **** void cmd_get_imu_readings(){
 5797              		.loc 1 1324 0
 5798              		.cfi_startproc
 5799              		@ args = 0, pretend = 0, frame = 0
 5800              		@ frame_needed = 1, uses_anonymous_args = 0
 5801              		@ link register save eliminated.
 5802 0000 80B4     		push	{r7}
 5803              		.cfi_def_cfa_offset 4
 5804              		.cfi_offset 7, -4
 5805 0002 00AF     		add	r7, sp, #0
 5806              		.cfi_def_cfa_register 7
1325:..\src/command_processing.c ****  
1326:..\src/command_processing.c **** }
 5807              		.loc 1 1326 0
 5808 0004 00BF     		nop
 5809 0006 BD46     		mov	sp, r7
 5810              		.cfi_def_cfa_register 13
 5811              		@ sp needed
 5812 0008 80BC     		pop	{r7}
 5813              		.cfi_restore 7
 5814              		.cfi_def_cfa_offset 0
 5815 000a 7047     		bx	lr
 5816              		.cfi_endproc
 5817              	.LFE113:
 5818              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 5819              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 5820              		.align	2
 5821              		.global	cmd_get_encoder_map
 5822              		.thumb
 5823              		.thumb_func
 5824              		.type	cmd_get_encoder_map, %function
 5825              	cmd_get_encoder_map:
 5826              	.LFB114:
1327:..\src/command_processing.c **** 
1328:..\src/command_processing.c **** void cmd_get_encoder_map(){
 5827              		.loc 1 1328 0
 5828              		.cfi_startproc
 5829              		@ args = 0, pretend = 0, frame = 0
 5830              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 144


 5831              		@ link register save eliminated.
 5832 0000 80B4     		push	{r7}
 5833              		.cfi_def_cfa_offset 4
 5834              		.cfi_offset 7, -4
 5835 0002 00AF     		add	r7, sp, #0
 5836              		.cfi_def_cfa_register 7
1329:..\src/command_processing.c ****    }
 5837              		.loc 1 1329 0
 5838 0004 00BF     		nop
 5839 0006 BD46     		mov	sp, r7
 5840              		.cfi_def_cfa_register 13
 5841              		@ sp needed
 5842 0008 80BC     		pop	{r7}
 5843              		.cfi_restore 7
 5844              		.cfi_def_cfa_offset 0
 5845 000a 7047     		bx	lr
 5846              		.cfi_endproc
 5847              	.LFE114:
 5848              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 5849              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 5850              		.align	2
 5851              		.global	cmd_get_encoder_raw
 5852              		.thumb
 5853              		.thumb_func
 5854              		.type	cmd_get_encoder_raw, %function
 5855              	cmd_get_encoder_raw:
 5856              	.LFB115:
1330:..\src/command_processing.c **** 
1331:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 5857              		.loc 1 1331 0
 5858              		.cfi_startproc
 5859              		@ args = 0, pretend = 0, frame = 0
 5860              		@ frame_needed = 1, uses_anonymous_args = 0
 5861              		@ link register save eliminated.
 5862 0000 80B4     		push	{r7}
 5863              		.cfi_def_cfa_offset 4
 5864              		.cfi_offset 7, -4
 5865 0002 00AF     		add	r7, sp, #0
 5866              		.cfi_def_cfa_register 7
1332:..\src/command_processing.c ****    }
 5867              		.loc 1 1332 0
 5868 0004 00BF     		nop
 5869 0006 BD46     		mov	sp, r7
 5870              		.cfi_def_cfa_register 13
 5871              		@ sp needed
 5872 0008 80BC     		pop	{r7}
 5873              		.cfi_restore 7
 5874              		.cfi_def_cfa_offset 0
 5875 000a 7047     		bx	lr
 5876              		.cfi_endproc
 5877              	.LFE115:
 5878              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 5879              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 5880              		.align	2
 5881              		.global	cmd_get_ADC_map
 5882              		.thumb
 5883              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 145


 5884              		.type	cmd_get_ADC_map, %function
 5885              	cmd_get_ADC_map:
 5886              	.LFB116:
1333:..\src/command_processing.c **** 
1334:..\src/command_processing.c **** void cmd_get_ADC_map(){
 5887              		.loc 1 1334 0
 5888              		.cfi_startproc
 5889              		@ args = 0, pretend = 0, frame = 0
 5890              		@ frame_needed = 1, uses_anonymous_args = 0
 5891              		@ link register save eliminated.
 5892 0000 80B4     		push	{r7}
 5893              		.cfi_def_cfa_offset 4
 5894              		.cfi_offset 7, -4
 5895 0002 00AF     		add	r7, sp, #0
 5896              		.cfi_def_cfa_register 7
1335:..\src/command_processing.c ****    }
 5897              		.loc 1 1335 0
 5898 0004 00BF     		nop
 5899 0006 BD46     		mov	sp, r7
 5900              		.cfi_def_cfa_register 13
 5901              		@ sp needed
 5902 0008 80BC     		pop	{r7}
 5903              		.cfi_restore 7
 5904              		.cfi_def_cfa_offset 0
 5905 000a 7047     		bx	lr
 5906              		.cfi_endproc
 5907              	.LFE116:
 5908              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 5909              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 5910              		.align	2
 5911              		.global	cmd_get_ADC_raw
 5912              		.thumb
 5913              		.thumb_func
 5914              		.type	cmd_get_ADC_raw, %function
 5915              	cmd_get_ADC_raw:
 5916              	.LFB117:
1336:..\src/command_processing.c **** 
1337:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 5917              		.loc 1 1337 0
 5918              		.cfi_startproc
 5919              		@ args = 0, pretend = 0, frame = 0
 5920              		@ frame_needed = 1, uses_anonymous_args = 0
 5921              		@ link register save eliminated.
 5922 0000 80B4     		push	{r7}
 5923              		.cfi_def_cfa_offset 4
 5924              		.cfi_offset 7, -4
 5925 0002 00AF     		add	r7, sp, #0
 5926              		.cfi_def_cfa_register 7
1338:..\src/command_processing.c ****    
1339:..\src/command_processing.c **** }
 5927              		.loc 1 1339 0
 5928 0004 00BF     		nop
 5929 0006 BD46     		mov	sp, r7
 5930              		.cfi_def_cfa_register 13
 5931              		@ sp needed
 5932 0008 80BC     		pop	{r7}
 5933              		.cfi_restore 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 146


 5934              		.cfi_def_cfa_offset 0
 5935 000a 7047     		bx	lr
 5936              		.cfi_endproc
 5937              	.LFE117:
 5938              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 5939              		.section	.text.cmd_get_SD_file,"ax",%progbits
 5940              		.align	2
 5941              		.global	cmd_get_SD_file
 5942              		.thumb
 5943              		.thumb_func
 5944              		.type	cmd_get_SD_file, %function
 5945              	cmd_get_SD_file:
 5946              	.LFB118:
1340:..\src/command_processing.c **** 
1341:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 5947              		.loc 1 1341 0
 5948              		.cfi_startproc
 5949              		@ args = 0, pretend = 0, frame = 20064
 5950              		@ frame_needed = 1, uses_anonymous_args = 0
 5951 0000 80B5     		push	{r7, lr}
 5952              		.cfi_def_cfa_offset 8
 5953              		.cfi_offset 7, -8
 5954              		.cfi_offset 14, -4
 5955 0002 ADF59C4D 		sub	sp, sp, #19968
 5956              		.cfi_def_cfa_offset 19976
 5957 0006 98B0     		sub	sp, sp, #96
 5958              		.cfi_def_cfa_offset 20072
 5959 0008 00AF     		add	r7, sp, #0
 5960              		.cfi_def_cfa_register 7
 5961 000a 0246     		mov	r2, r0
 5962 000c 07F16003 		add	r3, r7, #96
 5963 0010 5A3B     		subs	r3, r3, #90
 5964 0012 1A80     		strh	r2, [r3]	@ movhi
1342:..\src/command_processing.c ****     
1343:..\src/command_processing.c ****     uint8 i = 0;
 5965              		.loc 1 1343 0
 5966 0014 0023     		movs	r3, #0
 5967 0016 07F59C42 		add	r2, r7, #19968
 5968 001a 02F15F02 		add	r2, r2, #95
 5969 001e 1370     		strb	r3, [r2]
1344:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 5970              		.loc 1 1344 0
 5971 0020 0023     		movs	r3, #0
 5972 0022 07F59C42 		add	r2, r7, #19968
 5973 0026 02F12C02 		add	r2, r2, #44
 5974 002a 1360     		str	r3, [r2]
 5975 002c 07F59C43 		add	r3, r7, #19968
 5976 0030 03F13003 		add	r3, r3, #48
 5977 0034 2E22     		movs	r2, #46
 5978 0036 0021     		movs	r1, #0
 5979 0038 1846     		mov	r0, r3
 5980 003a FFF7FEFF 		bl	memset
1345:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 5981              		.loc 1 1345 0
 5982 003e 07F16003 		add	r3, r7, #96
 5983 0042 543B     		subs	r3, r3, #84
 5984 0044 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 147


 5985 0046 1A60     		str	r2, [r3]
 5986 0048 0433     		adds	r3, r3, #4
 5987 004a 44F61C62 		movw	r2, #19996
 5988 004e 0021     		movs	r1, #0
 5989 0050 1846     		mov	r0, r3
 5990 0052 FFF7FEFF 		bl	memset
1346:..\src/command_processing.c ****     strcpy(filename, "");
 5991              		.loc 1 1346 0
 5992 0056 3C4B     		ldr	r3, .L312
 5993 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5994 005a 07F59C42 		add	r2, r7, #19968
 5995 005e 02F12C02 		add	r2, r2, #44
 5996 0062 1370     		strb	r3, [r2]
1347:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 5997              		.loc 1 1347 0
 5998 0064 384B     		ldr	r3, .L312
 5999 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6000 0068 07F16003 		add	r3, r7, #96
 6001 006c 543B     		subs	r3, r3, #84
 6002 006e 1A70     		strb	r2, [r3]
1348:..\src/command_processing.c ****     
1349:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 6003              		.loc 1 1349 0
 6004 0070 0023     		movs	r3, #0
 6005 0072 07F59C42 		add	r2, r7, #19968
 6006 0076 02F15F02 		add	r2, r2, #95
 6007 007a 1370     		strb	r3, [r2]
 6008 007c 1DE0     		b	.L308
 6009              	.L309:
1350:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 6010              		.loc 1 1350 0 discriminator 3
 6011 007e 07F59C43 		add	r3, r7, #19968
 6012 0082 03F15F03 		add	r3, r3, #95
 6013 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6014 0088 07F59C42 		add	r2, r7, #19968
 6015 008c 02F12C02 		add	r2, r2, #44
 6016 0090 1344     		add	r3, r3, r2
 6017 0092 07F59C42 		add	r2, r7, #19968
 6018 0096 02F15F02 		add	r2, r2, #95
 6019 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6020 009c 0332     		adds	r2, r2, #3
 6021 009e 2B49     		ldr	r1, .L312+4
 6022 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6023 00a2 1A70     		strb	r2, [r3]
1349:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 6024              		.loc 1 1349 0 discriminator 3
 6025 00a4 07F59C43 		add	r3, r7, #19968
 6026 00a8 03F15F03 		add	r3, r3, #95
 6027 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6028 00ae 0133     		adds	r3, r3, #1
 6029 00b0 07F59C42 		add	r2, r7, #19968
 6030 00b4 02F15F02 		add	r2, r2, #95
 6031 00b8 1370     		strb	r3, [r2]
 6032              	.L308:
1349:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 6033              		.loc 1 1349 0 is_stmt 0 discriminator 1
 6034 00ba 07F59C43 		add	r3, r7, #19968
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 148


 6035 00be 03F15F03 		add	r3, r3, #95
 6036 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6037 00c4 9AB2     		uxth	r2, r3
 6038 00c6 07F16003 		add	r3, r7, #96
 6039 00ca 5A3B     		subs	r3, r3, #90
 6040 00cc 1B88     		ldrh	r3, [r3]
 6041 00ce 9342     		cmp	r3, r2
 6042 00d0 D5D8     		bhi	.L309
1351:..\src/command_processing.c ****     }
1352:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 6043              		.loc 1 1352 0 is_stmt 1
 6044 00d2 07F59C43 		add	r3, r7, #19968
 6045 00d6 03F15F03 		add	r3, r3, #95
 6046 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6047 00dc 07F59C42 		add	r2, r7, #19968
 6048 00e0 02F12C02 		add	r2, r2, #44
 6049 00e4 1344     		add	r3, r3, r2
 6050 00e6 0022     		movs	r2, #0
 6051 00e8 1A70     		strb	r2, [r3]
1353:..\src/command_processing.c ****      
1354:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
1355:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 6052              		.loc 1 1355 0
 6053 00ea 07F59C43 		add	r3, r7, #19968
 6054 00ee 03F12C03 		add	r3, r3, #44
 6055 00f2 1749     		ldr	r1, .L312+8
 6056 00f4 1846     		mov	r0, r3
 6057 00f6 FFF7FEFF 		bl	strcmp
 6058 00fa 0346     		mov	r3, r0
 6059 00fc 002B     		cmp	r3, #0
 6060 00fe 0CD0     		beq	.L310
1356:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 6061              		.loc 1 1356 0
 6062 0100 07F16003 		add	r3, r7, #96
 6063 0104 543B     		subs	r3, r3, #84
 6064 0106 07F59C40 		add	r0, r7, #19968
 6065 010a 00F12C00 		add	r0, r0, #44
 6066 010e 44F62062 		movw	r2, #20000
 6067 0112 1946     		mov	r1, r3
 6068 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 6069 0118 07E0     		b	.L311
 6070              	.L310:
1357:..\src/command_processing.c ****     }
1358:..\src/command_processing.c ****     else {
1359:..\src/command_processing.c ****         //It is the currently open working file
1360:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 6071              		.loc 1 1360 0
 6072 011a 07F16003 		add	r3, r7, #96
 6073 011e 543B     		subs	r3, r3, #84
 6074 0120 44F62061 		movw	r1, #20000
 6075 0124 1846     		mov	r0, r3
 6076 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 6077              	.L311:
1361:..\src/command_processing.c ****     }
1362:..\src/command_processing.c **** 
1363:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
1364:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 149


1365:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 6078              		.loc 1 1365 0
 6079 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1366:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 6080              		.loc 1 1366 0
 6081 012e 07F16003 		add	r3, r7, #96
 6082 0132 543B     		subs	r3, r3, #84
 6083 0134 1846     		mov	r0, r3
 6084 0136 FFF7FEFF 		bl	UART_RS485_PutString
1367:..\src/command_processing.c **** }
 6085              		.loc 1 1367 0
 6086 013a 00BF     		nop
 6087 013c 07F59C47 		add	r7, r7, #19968
 6088 0140 6037     		adds	r7, r7, #96
 6089              		.cfi_def_cfa_offset 8
 6090 0142 BD46     		mov	sp, r7
 6091              		.cfi_def_cfa_register 13
 6092              		@ sp needed
 6093 0144 80BD     		pop	{r7, pc}
 6094              	.L313:
 6095 0146 00BF     		.align	2
 6096              	.L312:
 6097 0148 00000000 		.word	.LC8
 6098 014c 00000000 		.word	g_rx
 6099 0150 00000000 		.word	sdFile
 6100              		.cfi_endproc
 6101              	.LFE118:
 6102              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 6103              		.section	.text.cmd_remove_SD_file,"ax",%progbits
 6104              		.align	2
 6105              		.global	cmd_remove_SD_file
 6106              		.thumb
 6107              		.thumb_func
 6108              		.type	cmd_remove_SD_file, %function
 6109              	cmd_remove_SD_file:
 6110              	.LFB119:
1368:..\src/command_processing.c **** 
1369:..\src/command_processing.c **** void cmd_remove_SD_file( uint16 filename_length ){
 6111              		.loc 1 1369 0
 6112              		.cfi_startproc
 6113              		@ args = 0, pretend = 0, frame = 8
 6114              		@ frame_needed = 1, uses_anonymous_args = 0
 6115              		@ link register save eliminated.
 6116 0000 80B4     		push	{r7}
 6117              		.cfi_def_cfa_offset 4
 6118              		.cfi_offset 7, -4
 6119 0002 83B0     		sub	sp, sp, #12
 6120              		.cfi_def_cfa_offset 16
 6121 0004 00AF     		add	r7, sp, #0
 6122              		.cfi_def_cfa_register 7
 6123 0006 0346     		mov	r3, r0
 6124 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1370:..\src/command_processing.c ****   
1371:..\src/command_processing.c **** }
 6125              		.loc 1 1371 0
 6126 000a 00BF     		nop
 6127 000c 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 150


 6128              		.cfi_def_cfa_offset 4
 6129 000e BD46     		mov	sp, r7
 6130              		.cfi_def_cfa_register 13
 6131              		@ sp needed
 6132 0010 80BC     		pop	{r7}
 6133              		.cfi_restore 7
 6134              		.cfi_def_cfa_offset 0
 6135 0012 7047     		bx	lr
 6136              		.cfi_endproc
 6137              	.LFE119:
 6138              		.size	cmd_remove_SD_file, .-cmd_remove_SD_file
 6139              		.global	__aeabi_i2f
 6140              		.global	__aeabi_ddiv
 6141              		.global	__aeabi_dmul
 6142              		.global	__aeabi_d2iz
 6143              		.section	.text.vibrotactile_control,"ax",%progbits
 6144              		.align	2
 6145              		.global	vibrotactile_control
 6146              		.thumb
 6147              		.thumb_func
 6148              		.type	vibrotactile_control, %function
 6149              	vibrotactile_control:
 6150              	.LFB120:
1372:..\src/command_processing.c **** 
1373:..\src/command_processing.c **** //==============================================================================
1374:..\src/command_processing.c **** //                                                          VIBROTACTILE CONTROL
1375:..\src/command_processing.c **** //==============================================================================
1376:..\src/command_processing.c **** /* It asks IMU values to the SoftHand and sets vibrotactile feedback device inputs proportionally.*
1377:..\src/command_processing.c **** 
1378:..\src/command_processing.c **** void vibrotactile_control() {
 6151              		.loc 1 1378 0
 6152              		.cfi_startproc
 6153              		@ args = 0, pretend = 0, frame = 8
 6154              		@ frame_needed = 1, uses_anonymous_args = 0
 6155 0000 90B5     		push	{r4, r7, lr}
 6156              		.cfi_def_cfa_offset 12
 6157              		.cfi_offset 4, -12
 6158              		.cfi_offset 7, -8
 6159              		.cfi_offset 14, -4
 6160 0002 83B0     		sub	sp, sp, #12
 6161              		.cfi_def_cfa_offset 24
 6162 0004 00AF     		add	r7, sp, #0
 6163              		.cfi_def_cfa_register 7
1379:..\src/command_processing.c ****     
1380:..\src/command_processing.c ****     uint8 i;
1381:..\src/command_processing.c ****     
1382:..\src/command_processing.c ****     commReadIMUFromSH();    
 6164              		.loc 1 1382 0
 6165 0006 FFF7FEFF 		bl	commReadIMUFromSH
1383:..\src/command_processing.c ****     // Ask to the slave the reference commands to drive the vibrotactile devices. 
1384:..\src/command_processing.c ****     // Values received are already the PWM commands computed by the slave board proportional to the
1385:..\src/command_processing.c ****     
1386:..\src/command_processing.c ****     PWM_IMU_1 = (int16)(((float)PWM_IMU_1/50.0) * SCALA);
 6166              		.loc 1 1386 0
 6167 000a 4B4B     		ldr	r3, .L323
 6168 000c B3F90030 		ldrsh	r3, [r3]
 6169 0010 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 151


 6170 0012 FFF7FEFF 		bl	__aeabi_i2f
 6171 0016 0346     		mov	r3, r0
 6172 0018 1846     		mov	r0, r3
 6173 001a FFF7FEFF 		bl	__aeabi_f2d
 6174 001e 4FF00002 		mov	r2, #0
 6175 0022 464B     		ldr	r3, .L323+4
 6176 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6177 0028 0346     		mov	r3, r0
 6178 002a 0C46     		mov	r4, r1
 6179 002c 1846     		mov	r0, r3
 6180 002e 2146     		mov	r1, r4
 6181 0030 4FF00002 		mov	r2, #0
 6182 0034 424B     		ldr	r3, .L323+8
 6183 0036 FFF7FEFF 		bl	__aeabi_dmul
 6184 003a 0346     		mov	r3, r0
 6185 003c 0C46     		mov	r4, r1
 6186 003e 1846     		mov	r0, r3
 6187 0040 2146     		mov	r1, r4
 6188 0042 FFF7FEFF 		bl	__aeabi_d2iz
 6189 0046 0346     		mov	r3, r0
 6190 0048 1AB2     		sxth	r2, r3
 6191 004a 3B4B     		ldr	r3, .L323
 6192 004c 1A80     		strh	r2, [r3]	@ movhi
1387:..\src/command_processing.c ****     if (PWM_IMU_1 > MAX_INPUT_PWM) PWM_IMU_1 = MAX_INPUT_PWM;
 6193              		.loc 1 1387 0
 6194 004e 3A4B     		ldr	r3, .L323
 6195 0050 B3F90030 		ldrsh	r3, [r3]
 6196 0054 642B     		cmp	r3, #100
 6197 0056 02DD     		ble	.L316
 6198              		.loc 1 1387 0 is_stmt 0 discriminator 1
 6199 0058 374B     		ldr	r3, .L323
 6200 005a 6422     		movs	r2, #100
 6201 005c 1A80     		strh	r2, [r3]	@ movhi
 6202              	.L316:
1388:..\src/command_processing.c ****     if (PWM_IMU_1 < MIN_INPUT_PWM) PWM_IMU_1 = 0;
 6203              		.loc 1 1388 0 is_stmt 1
 6204 005e 364B     		ldr	r3, .L323
 6205 0060 B3F90030 		ldrsh	r3, [r3]
 6206 0064 092B     		cmp	r3, #9
 6207 0066 02DC     		bgt	.L317
 6208              		.loc 1 1388 0 is_stmt 0 discriminator 1
 6209 0068 334B     		ldr	r3, .L323
 6210 006a 0022     		movs	r2, #0
 6211 006c 1A80     		strh	r2, [r3]	@ movhi
 6212              	.L317:
1389:..\src/command_processing.c ****     
1390:..\src/command_processing.c ****     PWM_IMU_2 = (int16) (((float)PWM_IMU_2/50.0) * SCALA);
 6213              		.loc 1 1390 0 is_stmt 1
 6214 006e 354B     		ldr	r3, .L323+12
 6215 0070 B3F90030 		ldrsh	r3, [r3]
 6216 0074 1846     		mov	r0, r3
 6217 0076 FFF7FEFF 		bl	__aeabi_i2f
 6218 007a 0346     		mov	r3, r0
 6219 007c 1846     		mov	r0, r3
 6220 007e FFF7FEFF 		bl	__aeabi_f2d
 6221 0082 4FF00002 		mov	r2, #0
 6222 0086 2D4B     		ldr	r3, .L323+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 152


 6223 0088 FFF7FEFF 		bl	__aeabi_ddiv
 6224 008c 0346     		mov	r3, r0
 6225 008e 0C46     		mov	r4, r1
 6226 0090 1846     		mov	r0, r3
 6227 0092 2146     		mov	r1, r4
 6228 0094 4FF00002 		mov	r2, #0
 6229 0098 294B     		ldr	r3, .L323+8
 6230 009a FFF7FEFF 		bl	__aeabi_dmul
 6231 009e 0346     		mov	r3, r0
 6232 00a0 0C46     		mov	r4, r1
 6233 00a2 1846     		mov	r0, r3
 6234 00a4 2146     		mov	r1, r4
 6235 00a6 FFF7FEFF 		bl	__aeabi_d2iz
 6236 00aa 0346     		mov	r3, r0
 6237 00ac 1AB2     		sxth	r2, r3
 6238 00ae 254B     		ldr	r3, .L323+12
 6239 00b0 1A80     		strh	r2, [r3]	@ movhi
1391:..\src/command_processing.c ****     if (PWM_IMU_2 > MAX_INPUT_PWM) PWM_IMU_2 = MAX_INPUT_PWM;
 6240              		.loc 1 1391 0
 6241 00b2 244B     		ldr	r3, .L323+12
 6242 00b4 B3F90030 		ldrsh	r3, [r3]
 6243 00b8 642B     		cmp	r3, #100
 6244 00ba 02DD     		ble	.L318
 6245              		.loc 1 1391 0 is_stmt 0 discriminator 1
 6246 00bc 214B     		ldr	r3, .L323+12
 6247 00be 6422     		movs	r2, #100
 6248 00c0 1A80     		strh	r2, [r3]	@ movhi
 6249              	.L318:
1392:..\src/command_processing.c ****     if (PWM_IMU_2 < MIN_INPUT_PWM) PWM_IMU_2 = 0;
 6250              		.loc 1 1392 0 is_stmt 1
 6251 00c2 204B     		ldr	r3, .L323+12
 6252 00c4 B3F90030 		ldrsh	r3, [r3]
 6253 00c8 092B     		cmp	r3, #9
 6254 00ca 02DC     		bgt	.L319
 6255              		.loc 1 1392 0 is_stmt 0 discriminator 1
 6256 00cc 1D4B     		ldr	r3, .L323+12
 6257 00ce 0022     		movs	r2, #0
 6258 00d0 1A80     		strh	r2, [r3]	@ movhi
 6259              	.L319:
1393:..\src/command_processing.c ****     
1394:..\src/command_processing.c ****     VT_ref[0] = PWM_IMU_1;
 6260              		.loc 1 1394 0 is_stmt 1
 6261 00d2 194B     		ldr	r3, .L323
 6262 00d4 B3F90030 		ldrsh	r3, [r3]
 6263 00d8 DAB2     		uxtb	r2, r3
 6264 00da 1B4B     		ldr	r3, .L323+16
 6265 00dc 1A70     		strb	r2, [r3]
1395:..\src/command_processing.c ****     VT_ref[1] = PWM_IMU_2;
 6266              		.loc 1 1395 0
 6267 00de 194B     		ldr	r3, .L323+12
 6268 00e0 B3F90030 		ldrsh	r3, [r3]
 6269 00e4 DAB2     		uxtb	r2, r3
 6270 00e6 184B     		ldr	r3, .L323+16
 6271 00e8 5A70     		strb	r2, [r3, #1]
1396:..\src/command_processing.c ****     
1397:..\src/command_processing.c ****     VT_ref[0] = PWM_IMU_1;
 6272              		.loc 1 1397 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 153


 6273 00ea 134B     		ldr	r3, .L323
 6274 00ec B3F90030 		ldrsh	r3, [r3]
 6275 00f0 DAB2     		uxtb	r2, r3
 6276 00f2 154B     		ldr	r3, .L323+16
 6277 00f4 1A70     		strb	r2, [r3]
1398:..\src/command_processing.c ****     VT_ref[1] = PWM_IMU_2;
 6278              		.loc 1 1398 0
 6279 00f6 134B     		ldr	r3, .L323+12
 6280 00f8 B3F90030 		ldrsh	r3, [r3]
 6281 00fc DAB2     		uxtb	r2, r3
 6282 00fe 124B     		ldr	r3, .L323+16
 6283 0100 5A70     		strb	r2, [r3, #1]
1399:..\src/command_processing.c **** 
1400:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_VT_ACTUATORS; i++){       
 6284              		.loc 1 1400 0
 6285 0102 0023     		movs	r3, #0
 6286 0104 FB71     		strb	r3, [r7, #7]
 6287 0106 0FE0     		b	.L320
 6288              	.L322:
1401:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 6289              		.loc 1 1401 0
 6290 0108 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6291 010a 1846     		mov	r0, r3
 6292 010c FFF7FEFF 		bl	vibrotactile_control_generic
1402:..\src/command_processing.c ****         
1403:..\src/command_processing.c ****         if (interrupt_flag){
 6293              		.loc 1 1403 0
 6294 0110 0E4B     		ldr	r3, .L323+20
 6295 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6296 0114 002B     		cmp	r3, #0
 6297 0116 04D0     		beq	.L321
1404:..\src/command_processing.c ****             interrupt_flag = FALSE;
 6298              		.loc 1 1404 0
 6299 0118 0C4B     		ldr	r3, .L323+20
 6300 011a 0022     		movs	r2, #0
 6301 011c 1A70     		strb	r2, [r3]
1405:..\src/command_processing.c ****             interrupt_manager();
 6302              		.loc 1 1405 0
 6303 011e FFF7FEFF 		bl	interrupt_manager
 6304              	.L321:
1400:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 6305              		.loc 1 1400 0 discriminator 2
 6306 0122 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6307 0124 0133     		adds	r3, r3, #1
 6308 0126 FB71     		strb	r3, [r7, #7]
 6309              	.L320:
1400:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 6310              		.loc 1 1400 0 is_stmt 0 discriminator 1
 6311 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6312 012a 012B     		cmp	r3, #1
 6313 012c ECD9     		bls	.L322
1406:..\src/command_processing.c ****         }
1407:..\src/command_processing.c ****     } 
1408:..\src/command_processing.c **** }
 6314              		.loc 1 1408 0 is_stmt 1
 6315 012e 00BF     		nop
 6316 0130 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 154


 6317              		.cfi_def_cfa_offset 12
 6318 0132 BD46     		mov	sp, r7
 6319              		.cfi_def_cfa_register 13
 6320              		@ sp needed
 6321 0134 90BD     		pop	{r4, r7, pc}
 6322              	.L324:
 6323 0136 00BF     		.align	2
 6324              	.L323:
 6325 0138 00000000 		.word	PWM_IMU_1
 6326 013c 00004940 		.word	1078525952
 6327 0140 00003E40 		.word	1077805056
 6328 0144 00000000 		.word	PWM_IMU_2
 6329 0148 00000000 		.word	VT_ref
 6330 014c 00000000 		.word	interrupt_flag
 6331              		.cfi_endproc
 6332              	.LFE120:
 6333              		.size	vibrotactile_control, .-vibrotactile_control
 6334              		.global	__aeabi_i2d
 6335              		.global	__aeabi_dsub
 6336              		.global	__aeabi_dadd
 6337              		.global	__aeabi_fcmpgt
 6338              		.global	__aeabi_f2iz
 6339              		.global	__aeabi_fmul
 6340              		.section	.text.air_chambers_control,"ax",%progbits
 6341              		.align	2
 6342              		.global	air_chambers_control
 6343              		.thumb
 6344              		.thumb_func
 6345              		.type	air_chambers_control, %function
 6346              	air_chambers_control:
 6347              	.LFB121:
1409:..\src/command_processing.c **** 
1410:..\src/command_processing.c **** 
1411:..\src/command_processing.c **** //==============================================================================
1412:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
1413:..\src/command_processing.c **** //==============================================================================
1414:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
1415:..\src/command_processing.c **** 
1416:..\src/command_processing.c **** 
1417:..\src/command_processing.c **** void air_chambers_control() {
 6348              		.loc 1 1417 0
 6349              		.cfi_startproc
 6350              		@ args = 0, pretend = 0, frame = 24
 6351              		@ frame_needed = 1, uses_anonymous_args = 0
 6352 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 6353              		.cfi_def_cfa_offset 24
 6354              		.cfi_offset 4, -24
 6355              		.cfi_offset 5, -20
 6356              		.cfi_offset 7, -16
 6357              		.cfi_offset 8, -12
 6358              		.cfi_offset 9, -8
 6359              		.cfi_offset 14, -4
 6360 0004 86B0     		sub	sp, sp, #24
 6361              		.cfi_def_cfa_offset 48
 6362 0006 00AF     		add	r7, sp, #0
 6363              		.cfi_def_cfa_register 7
1418:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 155


1419:..\src/command_processing.c ****     int16 curr_diff;
1420:..\src/command_processing.c ****     int32 pressure_reference;
1421:..\src/command_processing.c ****     int32 err_pressure, pressure_value;
1422:..\src/command_processing.c ****     int32 valve_command;
1423:..\src/command_processing.c ****     int16 x_value;
1424:..\src/command_processing.c **** 
1425:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
1426:..\src/command_processing.c ****     
1427:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
 6364              		.loc 1 1427 0
 6365 0008 FFF7FEFF 		bl	commReadResCurrFromSH
 6366 000c 0346     		mov	r3, r0
 6367 000e BB81     		strh	r3, [r7, #12]	@ movhi
1428:..\src/command_processing.c **** 
1429:..\src/command_processing.c ****     // Compute pressure reference
1430:..\src/command_processing.c **** 
1431:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
 6368              		.loc 1 1431 0
 6369 0010 B7F90C30 		ldrsh	r3, [r7, #12]
 6370 0014 1846     		mov	r0, r3
 6371 0016 FFF7FEFF 		bl	__aeabi_i2d
 6372 001a 4FF00002 		mov	r2, #0
 6373 001e 5A4B     		ldr	r3, .L335
 6374 0020 FFF7FEFF 		bl	__aeabi_dsub
 6375 0024 0346     		mov	r3, r0
 6376 0026 0C46     		mov	r4, r1
 6377 0028 1846     		mov	r0, r3
 6378 002a 2146     		mov	r1, r4
 6379 002c FFF7FEFF 		bl	__aeabi_d2iz
 6380 0030 0346     		mov	r3, r0
 6381 0032 FB81     		strh	r3, [r7, #14]	@ movhi
1432:..\src/command_processing.c ****     if (x_value < 0)
 6382              		.loc 1 1432 0
 6383 0034 B7F90E30 		ldrsh	r3, [r7, #14]
 6384 0038 002B     		cmp	r3, #0
 6385 003a 01DA     		bge	.L326
1433:..\src/command_processing.c ****         x_value = 0;
 6386              		.loc 1 1433 0
 6387 003c 0023     		movs	r3, #0
 6388 003e FB81     		strh	r3, [r7, #14]	@ movhi
 6389              	.L326:
1434:..\src/command_processing.c ****     
1435:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
 6390              		.loc 1 1435 0
 6391 0040 B7F90E30 		ldrsh	r3, [r7, #14]
 6392 0044 1846     		mov	r0, r3
 6393 0046 FFF7FEFF 		bl	__aeabi_i2d
 6394 004a 4FF00002 		mov	r2, #0
 6395 004e 4F4B     		ldr	r3, .L335+4
 6396 0050 FFF7FEFF 		bl	__aeabi_dmul
 6397 0054 0346     		mov	r3, r0
 6398 0056 0C46     		mov	r4, r1
 6399 0058 2546     		mov	r5, r4
 6400 005a 1C46     		mov	r4, r3
 6401 005c B7F90E30 		ldrsh	r3, [r7, #14]
 6402 0060 1846     		mov	r0, r3
 6403 0062 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 156


 6404 0066 0246     		mov	r2, r0
 6405 0068 0B46     		mov	r3, r1
 6406 006a 2046     		mov	r0, r4
 6407 006c 2946     		mov	r1, r5
 6408 006e FFF7FEFF 		bl	__aeabi_dmul
 6409 0072 0346     		mov	r3, r0
 6410 0074 0C46     		mov	r4, r1
 6411 0076 2546     		mov	r5, r4
 6412 0078 1C46     		mov	r4, r3
 6413 007a 454B     		ldr	r3, .L335+8
 6414 007c 1B6D     		ldr	r3, [r3, #80]
 6415 007e 1846     		mov	r0, r3
 6416 0080 FFF7FEFF 		bl	__aeabi_i2d
 6417 0084 4FF00002 		mov	r2, #0
 6418 0088 424B     		ldr	r3, .L335+12
 6419 008a FFF7FEFF 		bl	__aeabi_dmul
 6420 008e 0246     		mov	r2, r0
 6421 0090 0B46     		mov	r3, r1
 6422 0092 9046     		mov	r8, r2
 6423 0094 9946     		mov	r9, r3
 6424 0096 B7F90E30 		ldrsh	r3, [r7, #14]
 6425 009a 1846     		mov	r0, r3
 6426 009c FFF7FEFF 		bl	__aeabi_i2d
 6427 00a0 0246     		mov	r2, r0
 6428 00a2 0B46     		mov	r3, r1
 6429 00a4 4046     		mov	r0, r8
 6430 00a6 4946     		mov	r1, r9
 6431 00a8 FFF7FEFF 		bl	__aeabi_dmul
 6432 00ac 0246     		mov	r2, r0
 6433 00ae 0B46     		mov	r3, r1
 6434 00b0 2046     		mov	r0, r4
 6435 00b2 2946     		mov	r1, r5
 6436 00b4 FFF7FEFF 		bl	__aeabi_dadd
 6437 00b8 0346     		mov	r3, r0
 6438 00ba 0C46     		mov	r4, r1
 6439 00bc 1846     		mov	r0, r3
 6440 00be 2146     		mov	r1, r4
 6441 00c0 FFF7FEFF 		bl	__aeabi_d2iz
 6442 00c4 0146     		mov	r1, r0
 6443 00c6 324B     		ldr	r3, .L335+8
 6444 00c8 1B6D     		ldr	r3, [r3, #80]
 6445 00ca 314A     		ldr	r2, .L335+8
 6446 00cc 126D     		ldr	r2, [r2, #80]
 6447 00ce 02FB03F3 		mul	r3, r2, r3
 6448 00d2 91FBF3F3 		sdiv	r3, r1, r3
 6449 00d6 7B61     		str	r3, [r7, #20]
1436:..\src/command_processing.c ****     if (pressure_reference < 0)
 6450              		.loc 1 1436 0
 6451 00d8 7B69     		ldr	r3, [r7, #20]
 6452 00da 002B     		cmp	r3, #0
 6453 00dc 01DA     		bge	.L327
1437:..\src/command_processing.c ****         pressure_reference = 0;
 6454              		.loc 1 1437 0
 6455 00de 0023     		movs	r3, #0
 6456 00e0 7B61     		str	r3, [r7, #20]
 6457              	.L327:
1438:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 157


 6458              		.loc 1 1438 0
 6459 00e2 7869     		ldr	r0, [r7, #20]
 6460 00e4 FFF7FEFF 		bl	__aeabi_i2f
 6461 00e8 0246     		mov	r2, r0
 6462 00ea 294B     		ldr	r3, .L335+8
 6463 00ec 5B6D     		ldr	r3, [r3, #84]	@ float
 6464 00ee 1946     		mov	r1, r3
 6465 00f0 1046     		mov	r0, r2
 6466 00f2 FFF7FEFF 		bl	__aeabi_fcmpgt
 6467 00f6 0346     		mov	r3, r0
 6468 00f8 002B     		cmp	r3, #0
 6469 00fa 06D0     		beq	.L328
1439:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
 6470              		.loc 1 1439 0
 6471 00fc 244B     		ldr	r3, .L335+8
 6472 00fe 5B6D     		ldr	r3, [r3, #84]	@ float
 6473 0100 1846     		mov	r0, r3
 6474 0102 FFF7FEFF 		bl	__aeabi_f2iz
 6475 0106 0346     		mov	r3, r0
 6476 0108 7B61     		str	r3, [r7, #20]
 6477              	.L328:
1440:..\src/command_processing.c ****     
1441:..\src/command_processing.c ****     pressure_value = (int32)g_adc_meas.pressure;
 6478              		.loc 1 1441 0
 6479 010a 234B     		ldr	r3, .L335+16
 6480 010c 9B68     		ldr	r3, [r3, #8]	@ float
 6481 010e 1846     		mov	r0, r3
 6482 0110 FFF7FEFF 		bl	__aeabi_f2iz
 6483 0114 0346     		mov	r3, r0
 6484 0116 BB60     		str	r3, [r7, #8]
1442:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
 6485              		.loc 1 1442 0
 6486 0118 7A69     		ldr	r2, [r7, #20]
 6487 011a BB68     		ldr	r3, [r7, #8]
 6488 011c D31A     		subs	r3, r2, r3
 6489 011e 7B60     		str	r3, [r7, #4]
1443:..\src/command_processing.c **** 
1444:..\src/command_processing.c ****     if (x_value <= 0){
 6490              		.loc 1 1444 0
 6491 0120 B7F90E30 		ldrsh	r3, [r7, #14]
 6492 0124 002B     		cmp	r3, #0
 6493 0126 02DC     		bgt	.L330
1445:..\src/command_processing.c ****         //i.e the hand is opening
1446:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
 6494              		.loc 1 1446 0
 6495 0128 0023     		movs	r3, #0
 6496 012a 3B61     		str	r3, [r7, #16]
 6497 012c 01E0     		b	.L331
 6498              	.L330:
1447:..\src/command_processing.c ****     }
1448:..\src/command_processing.c ****     else {
1449:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
1450:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
1451:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
1452:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
 6499              		.loc 1 1452 0
 6500 012e 0123     		movs	r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 158


 6501 0130 3B61     		str	r3, [r7, #16]
 6502              	.L331:
1453:..\src/command_processing.c ****     }
1454:..\src/command_processing.c ****     
1455:..\src/command_processing.c ****     // Pump control*/
1456:..\src/command_processing.c ****    
1457:..\src/command_processing.c ****     Pump_refNew = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
 6503              		.loc 1 1457 0
 6504 0132 174B     		ldr	r3, .L335+8
 6505 0134 9C6D     		ldr	r4, [r3, #88]	@ float
 6506 0136 7868     		ldr	r0, [r7, #4]
 6507 0138 FFF7FEFF 		bl	__aeabi_i2f
 6508 013c 0346     		mov	r3, r0
 6509 013e 1946     		mov	r1, r3
 6510 0140 2046     		mov	r0, r4
 6511 0142 FFF7FEFF 		bl	__aeabi_fmul
 6512 0146 0346     		mov	r3, r0
 6513 0148 1846     		mov	r0, r3
 6514 014a FFF7FEFF 		bl	__aeabi_f2iz
 6515 014e 0346     		mov	r3, r0
 6516 0150 DAB2     		uxtb	r2, r3
 6517 0152 124B     		ldr	r3, .L335+20
 6518 0154 1A70     		strb	r2, [r3]
1458:..\src/command_processing.c **** 
1459:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
1460:..\src/command_processing.c ****     
1461:..\src/command_processing.c ****     // Limit output voltage
1462:..\src/command_processing.c ****     if (Pump_refNew > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
 6519              		.loc 1 1462 0
 6520 0156 114B     		ldr	r3, .L335+20
 6521 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6522 015a 502B     		cmp	r3, #80
 6523 015c 02D9     		bls	.L332
1463:..\src/command_processing.c ****         Pump_refNew = 80; // 80
 6524              		.loc 1 1463 0
 6525 015e 0F4B     		ldr	r3, .L335+20
 6526 0160 5022     		movs	r2, #80
 6527 0162 1A70     		strb	r2, [r3]
 6528              	.L332:
1464:..\src/command_processing.c ****     if (Pump_refNew < 20)
 6529              		.loc 1 1464 0
 6530 0164 0D4B     		ldr	r3, .L335+20
 6531 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6532 0168 132B     		cmp	r3, #19
 6533 016a 02D8     		bhi	.L333
1465:..\src/command_processing.c ****         Pump_refNew = 0;
 6534              		.loc 1 1465 0
 6535 016c 0B4B     		ldr	r3, .L335+20
 6536 016e 0022     		movs	r2, #0
 6537 0170 1A70     		strb	r2, [r3]
 6538              	.L333:
1466:..\src/command_processing.c ****         
1467:..\src/command_processing.c ****     VALVE_Write(valve_command);
 6539              		.loc 1 1467 0
 6540 0172 3B69     		ldr	r3, [r7, #16]
 6541 0174 DBB2     		uxtb	r3, r3
 6542 0176 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 159


 6543 0178 FFF7FEFF 		bl	VALVE_Write
1468:..\src/command_processing.c ****     
1469:..\src/command_processing.c ****     
1470:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
1471:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
1472:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
1473:..\src/command_processing.c ****     // motor_control_generic(slave_motor_idx);
1474:..\src/command_processing.c **** 
1475:..\src/command_processing.c **** }
 6544              		.loc 1 1475 0
 6545 017c 00BF     		nop
 6546 017e 1837     		adds	r7, r7, #24
 6547              		.cfi_def_cfa_offset 24
 6548 0180 BD46     		mov	sp, r7
 6549              		.cfi_def_cfa_register 13
 6550              		@ sp needed
 6551 0182 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 6552              	.L336:
 6553 0186 00BF     		.align	2
 6554              	.L335:
 6555 0188 00004940 		.word	1078525952
 6556 018c 00003EC0 		.word	-1069678592
 6557 0190 00000000 		.word	c_mem
 6558 0194 00804B40 		.word	1078689792
 6559 0198 00000000 		.word	g_adc_meas
 6560 019c 00000000 		.word	Pump_refNew
 6561              		.cfi_endproc
 6562              	.LFE121:
 6563              		.size	air_chambers_control, .-air_chambers_control
 6564              		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 6565              		.align	2
 6566              		.global	emg_activation_velocity_fsm
 6567              		.thumb
 6568              		.thumb_func
 6569              		.type	emg_activation_velocity_fsm, %function
 6570              	emg_activation_velocity_fsm:
 6571              	.LFB122:
1476:..\src/command_processing.c **** 
1477:..\src/command_processing.c **** 
1478:..\src/command_processing.c **** //==============================================================================
1479:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
1480:..\src/command_processing.c **** //==============================================================================
1481:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
1482:..\src/command_processing.c **** 
1483:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 6572              		.loc 1 1483 0
 6573              		.cfi_startproc
 6574              		@ args = 0, pretend = 0, frame = 0
 6575              		@ frame_needed = 1, uses_anonymous_args = 0
 6576              		@ link register save eliminated.
 6577 0000 80B4     		push	{r7}
 6578              		.cfi_def_cfa_offset 4
 6579              		.cfi_offset 7, -4
 6580 0002 00AF     		add	r7, sp, #0
 6581              		.cfi_def_cfa_register 7
1484:..\src/command_processing.c ****     
1485:..\src/command_processing.c **** return 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 160


 6582              		.loc 1 1485 0
 6583 0004 0023     		movs	r3, #0
1486:..\src/command_processing.c **** }
 6584              		.loc 1 1486 0
 6585 0006 1846     		mov	r0, r3
 6586 0008 BD46     		mov	sp, r7
 6587              		.cfi_def_cfa_register 13
 6588              		@ sp needed
 6589 000a 80BC     		pop	{r7}
 6590              		.cfi_restore 7
 6591              		.cfi_def_cfa_offset 0
 6592 000c 7047     		bx	lr
 6593              		.cfi_endproc
 6594              	.LFE122:
 6595              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 6596 000e 00BF     		.section	.text.otbk_act_wrist_control,"ax",%progbits
 6597              		.align	2
 6598              		.global	otbk_act_wrist_control
 6599              		.thumb
 6600              		.thumb_func
 6601              		.type	otbk_act_wrist_control, %function
 6602              	otbk_act_wrist_control:
 6603              	.LFB123:
1487:..\src/command_processing.c **** 
1488:..\src/command_processing.c **** //==============================================================================
1489:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
1490:..\src/command_processing.c **** //==============================================================================
1491:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
1492:..\src/command_processing.c **** 
1493:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 6604              		.loc 1 1493 0
 6605              		.cfi_startproc
 6606              		@ args = 0, pretend = 0, frame = 8
 6607              		@ frame_needed = 1, uses_anonymous_args = 0
 6608              		@ link register save eliminated.
 6609 0000 80B4     		push	{r7}
 6610              		.cfi_def_cfa_offset 4
 6611              		.cfi_offset 7, -4
 6612 0002 83B0     		sub	sp, sp, #12
 6613              		.cfi_def_cfa_offset 16
 6614 0004 00AF     		add	r7, sp, #0
 6615              		.cfi_def_cfa_register 7
 6616 0006 7860     		str	r0, [r7, #4]
1494:..\src/command_processing.c ****     
1495:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
1496:..\src/command_processing.c ****     
1497:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
1498:..\src/command_processing.c ****         
1499:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
1500:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
1501:..\src/command_processing.c ****     switch (fsm_state){
1502:..\src/command_processing.c ****         case RELAX_STATE:
1503:..\src/command_processing.c ****             
1504:..\src/command_processing.c ****             // Wrist stop
1505:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
1506:..\src/command_processing.c ****             
1507:..\src/command_processing.c ****             // Softhand stop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 161


1508:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
1509:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
1510:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
1511:..\src/command_processing.c ****             
1512:..\src/command_processing.c ****             break;
1513:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
1514:..\src/command_processing.c ****                 
1515:..\src/command_processing.c ****             break;
1516:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
1517:..\src/command_processing.c ****             
1518:..\src/command_processing.c ****             // Wrist movement
1519:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
1520:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
1521:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
1522:..\src/command_processing.c ****                 }
1523:..\src/command_processing.c ****                 else {
1524:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
1525:..\src/command_processing.c ****                 }
1526:..\src/command_processing.c ****             }
1527:..\src/command_processing.c ****             else {
1528:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
1529:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
1530:..\src/command_processing.c ****                 }
1531:..\src/command_processing.c ****                 else {
1532:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
1533:..\src/command_processing.c ****                 }
1534:..\src/command_processing.c ****             }
1535:..\src/command_processing.c ****             
1536:..\src/command_processing.c ****             // Softhand stop
1537:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
1538:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
1539:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
1540:..\src/command_processing.c ****             
1541:..\src/command_processing.c ****             break;
1542:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
1543:..\src/command_processing.c ****             
1544:..\src/command_processing.c ****             // Wrist stop
1545:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
1546:..\src/command_processing.c ****             
1547:..\src/command_processing.c ****             // SoftHand movement
1548:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
1549:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
1550:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
1551:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
1552:..\src/command_processing.c ****             
1553:..\src/command_processing.c ****             break;
1554:..\src/command_processing.c ****     }
1555:..\src/command_processing.c ****         
1556:..\src/command_processing.c ****     // Limit output voltage
1557:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
1558:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
1559:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
1560:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
1561:..\src/command_processing.c ****     
1562:..\src/command_processing.c **** #endif
1563:..\src/command_processing.c **** }
 6617              		.loc 1 1563 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 162


 6618 0008 00BF     		nop
 6619 000a 0C37     		adds	r7, r7, #12
 6620              		.cfi_def_cfa_offset 4
 6621 000c BD46     		mov	sp, r7
 6622              		.cfi_def_cfa_register 13
 6623              		@ sp needed
 6624 000e 80BC     		pop	{r7}
 6625              		.cfi_restore 7
 6626              		.cfi_def_cfa_offset 0
 6627 0010 7047     		bx	lr
 6628              		.cfi_endproc
 6629              	.LFE123:
 6630              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 6631 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 6632              		.align	2
 6633              		.global	drive_slave
 6634              		.thumb
 6635              		.thumb_func
 6636              		.type	drive_slave, %function
 6637              	drive_slave:
 6638              	.LFB124:
1564:..\src/command_processing.c **** 
1565:..\src/command_processing.c **** //==============================================================================
1566:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
1567:..\src/command_processing.c **** //==============================================================================
1568:..\src/command_processing.c ****  
1569:..\src/command_processing.c **** //==============================================================================
1570:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
1571:..\src/command_processing.c **** //==============================================================================
1572:..\src/command_processing.c ****  
1573:..\src/command_processing.c ****  
1574:..\src/command_processing.c **** void drive_slave( uint8 slave_ID) {
 6639              		.loc 1 1574 0
 6640              		.cfi_startproc
 6641              		@ args = 0, pretend = 0, frame = 24
 6642              		@ frame_needed = 1, uses_anonymous_args = 0
 6643 0000 90B5     		push	{r4, r7, lr}
 6644              		.cfi_def_cfa_offset 12
 6645              		.cfi_offset 4, -12
 6646              		.cfi_offset 7, -8
 6647              		.cfi_offset 14, -4
 6648 0002 87B0     		sub	sp, sp, #28
 6649              		.cfi_def_cfa_offset 40
 6650 0004 00AF     		add	r7, sp, #0
 6651              		.cfi_def_cfa_register 7
 6652 0006 0346     		mov	r3, r0
 6653 0008 FB71     		strb	r3, [r7, #7]
1575:..\src/command_processing.c **** 
1576:..\src/command_processing.c ****     uint8 packet_data[6];
1577:..\src/command_processing.c ****     uint8 packet_length;
1578:..\src/command_processing.c ****     int16 aux_int16;
1579:..\src/command_processing.c **** 
1580:..\src/command_processing.c ****        
1581:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
1582:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
 6654              		.loc 1 1582 0
 6655 000a 8223     		movs	r3, #130
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 163


 6656 000c 3B74     		strb	r3, [r7, #16]
1583:..\src/command_processing.c ****     
1584:..\src/command_processing.c ****  //aux_int16 = (int16) motor_idx;
1585:..\src/command_processing.c ****    aux_int16 = (int16) (SH_ref >> g_mem.SH_config.res);
 6657              		.loc 1 1585 0
 6658 000e 1B4B     		ldr	r3, .L341
 6659 0010 1B68     		ldr	r3, [r3]
 6660 0012 1B4A     		ldr	r2, .L341+4
 6661 0014 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 6662 0018 1341     		asrs	r3, r3, r2
 6663 001a 1BB2     		sxth	r3, r3
 6664 001c FB81     		strh	r3, [r7, #14]	@ movhi
1586:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 6665              		.loc 1 1586 0
 6666 001e 07F10E03 		add	r3, r7, #14
 6667 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6668 0024 BB74     		strb	r3, [r7, #18]
1587:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 6669              		.loc 1 1587 0
 6670 0026 07F10E03 		add	r3, r7, #14
 6671 002a 0133     		adds	r3, r3, #1
 6672 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6673 002e 7B74     		strb	r3, [r7, #17]
1588:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
 6674              		.loc 1 1588 0
 6675 0030 07F11003 		add	r3, r7, #16
 6676 0034 0333     		adds	r3, r3, #3
 6677 0036 0022     		movs	r2, #0
 6678 0038 1A80     		strh	r2, [r3]	@ movhi
1589:..\src/command_processing.c ****   //  packet_data[3] = (char*)0;
1590:..\src/command_processing.c ****    // packet_data[4] = (char*)0;
1591:..\src/command_processing.c ****     packet_length = 6;
 6679              		.loc 1 1591 0
 6680 003a 0623     		movs	r3, #6
 6681 003c FB75     		strb	r3, [r7, #23]
1592:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 6682              		.loc 1 1592 0
 6683 003e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6684 0040 5C1E     		subs	r4, r3, #1
 6685 0042 FB7D     		ldrb	r3, [r7, #23]
 6686 0044 013B     		subs	r3, r3, #1
 6687 0046 DAB2     		uxtb	r2, r3
 6688 0048 07F11003 		add	r3, r7, #16
 6689 004c 1146     		mov	r1, r2
 6690 004e 1846     		mov	r0, r3
 6691 0050 FFF7FEFF 		bl	LCRChecksum
 6692 0054 0346     		mov	r3, r0
 6693 0056 1A46     		mov	r2, r3
 6694 0058 07F11803 		add	r3, r7, #24
 6695 005c 2344     		add	r3, r3, r4
 6696 005e 03F8082C 		strb	r2, [r3, #-8]
1593:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, slave_ID);
 6697              		.loc 1 1593 0
 6698 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6699 0064 99B2     		uxth	r1, r3
 6700 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6701 0068 07F11003 		add	r3, r7, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 164


 6702 006c 1846     		mov	r0, r3
 6703 006e FFF7FEFF 		bl	commWriteID
1594:..\src/command_processing.c **** 
1595:..\src/command_processing.c **** 
1596:..\src/command_processing.c **** }
 6704              		.loc 1 1596 0
 6705 0072 00BF     		nop
 6706 0074 1C37     		adds	r7, r7, #28
 6707              		.cfi_def_cfa_offset 12
 6708 0076 BD46     		mov	sp, r7
 6709              		.cfi_def_cfa_register 13
 6710              		@ sp needed
 6711 0078 90BD     		pop	{r4, r7, pc}
 6712              	.L342:
 6713 007a 00BF     		.align	2
 6714              	.L341:
 6715 007c 00000000 		.word	SH_ref
 6716 0080 00000000 		.word	g_mem
 6717              		.cfi_endproc
 6718              	.LFE124:
 6719              		.size	drive_slave, .-drive_slave
 6720              		.section	.text.stop_master_device,"ax",%progbits
 6721              		.align	2
 6722              		.global	stop_master_device
 6723              		.thumb
 6724              		.thumb_func
 6725              		.type	stop_master_device, %function
 6726              	stop_master_device:
 6727              	.LFB125:
1597:..\src/command_processing.c **** //==============================================================================
1598:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
1599:..\src/command_processing.c **** //==============================================================================
1600:..\src/command_processing.c ****  
1601:..\src/command_processing.c **** void stop_master_device() {
 6728              		.loc 1 1601 0
 6729              		.cfi_startproc
 6730              		@ args = 0, pretend = 0, frame = 0
 6731              		@ frame_needed = 1, uses_anonymous_args = 0
 6732 0000 80B5     		push	{r7, lr}
 6733              		.cfi_def_cfa_offset 8
 6734              		.cfi_offset 7, -8
 6735              		.cfi_offset 14, -4
 6736 0002 00AF     		add	r7, sp, #0
 6737              		.cfi_def_cfa_register 7
1602:..\src/command_processing.c ****     
1603:..\src/command_processing.c ****         // Stop pump and open valve
1604:..\src/command_processing.c ****         Pump_ref = 0;    
 6738              		.loc 1 1604 0
 6739 0004 074B     		ldr	r3, .L344
 6740 0006 0022     		movs	r2, #0
 6741 0008 1A70     		strb	r2, [r3]
1605:..\src/command_processing.c ****         VALVE_Write(OPEN);
 6742              		.loc 1 1605 0
 6743 000a 0020     		movs	r0, #0
 6744 000c FFF7FEFF 		bl	VALVE_Write
1606:..\src/command_processing.c ****         master_mode = 0; 
 6745              		.loc 1 1606 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 165


 6746 0010 054B     		ldr	r3, .L344+4
 6747 0012 0022     		movs	r2, #0
 6748 0014 1A70     		strb	r2, [r3]
1607:..\src/command_processing.c ****         g_mem.MS.master_mode_active = FALSE;
 6749              		.loc 1 1607 0
 6750 0016 054B     		ldr	r3, .L344+8
 6751 0018 0022     		movs	r2, #0
 6752 001a 83F84020 		strb	r2, [r3, #64]
1608:..\src/command_processing.c **** 
1609:..\src/command_processing.c **** }
 6753              		.loc 1 1609 0
 6754 001e 00BF     		nop
 6755 0020 80BD     		pop	{r7, pc}
 6756              	.L345:
 6757 0022 00BF     		.align	2
 6758              	.L344:
 6759 0024 00000000 		.word	Pump_ref
 6760 0028 00000000 		.word	master_mode
 6761 002c 00000000 		.word	g_mem
 6762              		.cfi_endproc
 6763              	.LFE125:
 6764              		.size	stop_master_device, .-stop_master_device
 6765              		.section	.text.deactivate_slaves,"ax",%progbits
 6766              		.align	2
 6767              		.global	deactivate_slaves
 6768              		.thumb
 6769              		.thumb_func
 6770              		.type	deactivate_slaves, %function
 6771              	deactivate_slaves:
 6772              	.LFB126:
1610:..\src/command_processing.c **** 
1611:..\src/command_processing.c **** //==============================================================================
1612:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
1613:..\src/command_processing.c **** //==============================================================================
1614:..\src/command_processing.c ****  
1615:..\src/command_processing.c **** void deactivate_slaves() {
 6773              		.loc 1 1615 0
 6774              		.cfi_startproc
 6775              		@ args = 0, pretend = 0, frame = 0
 6776              		@ frame_needed = 1, uses_anonymous_args = 0
 6777              		@ link register save eliminated.
 6778 0000 80B4     		push	{r7}
 6779              		.cfi_def_cfa_offset 4
 6780              		.cfi_offset 7, -4
 6781 0002 00AF     		add	r7, sp, #0
 6782              		.cfi_def_cfa_register 7
1616:..\src/command_processing.c ****    
1617:..\src/command_processing.c **** }
 6783              		.loc 1 1617 0
 6784 0004 00BF     		nop
 6785 0006 BD46     		mov	sp, r7
 6786              		.cfi_def_cfa_register 13
 6787              		@ sp needed
 6788 0008 80BC     		pop	{r7}
 6789              		.cfi_restore 7
 6790              		.cfi_def_cfa_offset 0
 6791 000a 7047     		bx	lr
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 166


 6792              		.cfi_endproc
 6793              	.LFE126:
 6794              		.size	deactivate_slaves, .-deactivate_slaves
 6795              		.bss
 6796              		.align	1
 6797              	i.10024:
 6798 0000 0000     		.space	2
 6799              		.text
 6800              	.Letext0:
 6801              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6802              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6803              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 6804              		.file 6 "..\\src\\commands.h"
 6805              		.file 7 "..\\src\\globals.h"
 6806              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 6807              		.section	.debug_info,"",%progbits
 6808              	.Ldebug_info0:
 6809 0000 3F170000 		.4byte	0x173f
 6810 0004 0400     		.2byte	0x4
 6811 0006 00000000 		.4byte	.Ldebug_abbrev0
 6812 000a 04       		.byte	0x4
 6813 000b 01       		.uleb128 0x1
 6814 000c 24080000 		.4byte	.LASF297
 6815 0010 0C       		.byte	0xc
 6816 0011 82100000 		.4byte	.LASF298
 6817 0015 28060000 		.4byte	.LASF299
 6818 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6819 001d 00000000 		.4byte	0
 6820 0021 00000000 		.4byte	.Ldebug_line0
 6821 0025 02       		.uleb128 0x2
 6822 0026 01       		.byte	0x1
 6823 0027 06       		.byte	0x6
 6824 0028 53030000 		.4byte	.LASF0
 6825 002c 02       		.uleb128 0x2
 6826 002d 01       		.byte	0x1
 6827 002e 08       		.byte	0x8
 6828 002f B2030000 		.4byte	.LASF1
 6829 0033 02       		.uleb128 0x2
 6830 0034 02       		.byte	0x2
 6831 0035 05       		.byte	0x5
 6832 0036 660E0000 		.4byte	.LASF2
 6833 003a 02       		.uleb128 0x2
 6834 003b 02       		.byte	0x2
 6835 003c 07       		.byte	0x7
 6836 003d F50F0000 		.4byte	.LASF3
 6837 0041 03       		.uleb128 0x3
 6838 0042 58100000 		.4byte	.LASF5
 6839 0046 03       		.byte	0x3
 6840 0047 3F       		.byte	0x3f
 6841 0048 4C000000 		.4byte	0x4c
 6842 004c 02       		.uleb128 0x2
 6843 004d 04       		.byte	0x4
 6844 004e 05       		.byte	0x5
 6845 004f 48020000 		.4byte	.LASF4
 6846 0053 03       		.uleb128 0x3
 6847 0054 D7080000 		.4byte	.LASF6
 6848 0058 03       		.byte	0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 167


 6849 0059 41       		.byte	0x41
 6850 005a 5E000000 		.4byte	0x5e
 6851 005e 02       		.uleb128 0x2
 6852 005f 04       		.byte	0x4
 6853 0060 07       		.byte	0x7
 6854 0061 E1060000 		.4byte	.LASF7
 6855 0065 02       		.uleb128 0x2
 6856 0066 08       		.byte	0x8
 6857 0067 05       		.byte	0x5
 6858 0068 E2080000 		.4byte	.LASF8
 6859 006c 02       		.uleb128 0x2
 6860 006d 08       		.byte	0x8
 6861 006e 07       		.byte	0x7
 6862 006f D90B0000 		.4byte	.LASF9
 6863 0073 04       		.uleb128 0x4
 6864 0074 04       		.byte	0x4
 6865 0075 05       		.byte	0x5
 6866 0076 696E7400 		.ascii	"int\000"
 6867 007a 02       		.uleb128 0x2
 6868 007b 04       		.byte	0x4
 6869 007c 07       		.byte	0x7
 6870 007d BF090000 		.4byte	.LASF10
 6871 0081 03       		.uleb128 0x3
 6872 0082 6C000000 		.4byte	.LASF11
 6873 0086 04       		.byte	0x4
 6874 0087 2C       		.byte	0x2c
 6875 0088 41000000 		.4byte	0x41
 6876 008c 03       		.uleb128 0x3
 6877 008d 5A0F0000 		.4byte	.LASF12
 6878 0091 04       		.byte	0x4
 6879 0092 30       		.byte	0x30
 6880 0093 53000000 		.4byte	0x53
 6881 0097 05       		.uleb128 0x5
 6882 0098 540E0000 		.4byte	.LASF13
 6883 009c 05       		.byte	0x5
 6884 009d E401     		.2byte	0x1e4
 6885 009f 2C000000 		.4byte	0x2c
 6886 00a3 05       		.uleb128 0x5
 6887 00a4 D6100000 		.4byte	.LASF14
 6888 00a8 05       		.byte	0x5
 6889 00a9 E501     		.2byte	0x1e5
 6890 00ab 3A000000 		.4byte	0x3a
 6891 00af 05       		.uleb128 0x5
 6892 00b0 8D000000 		.4byte	.LASF15
 6893 00b4 05       		.byte	0x5
 6894 00b5 E601     		.2byte	0x1e6
 6895 00b7 5E000000 		.4byte	0x5e
 6896 00bb 05       		.uleb128 0x5
 6897 00bc 6E010000 		.4byte	.LASF16
 6898 00c0 05       		.byte	0x5
 6899 00c1 E701     		.2byte	0x1e7
 6900 00c3 25000000 		.4byte	0x25
 6901 00c7 05       		.uleb128 0x5
 6902 00c8 160F0000 		.4byte	.LASF17
 6903 00cc 05       		.byte	0x5
 6904 00cd E801     		.2byte	0x1e8
 6905 00cf 33000000 		.4byte	0x33
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 168


 6906 00d3 05       		.uleb128 0x5
 6907 00d4 3E100000 		.4byte	.LASF18
 6908 00d8 05       		.byte	0x5
 6909 00d9 E901     		.2byte	0x1e9
 6910 00db 4C000000 		.4byte	0x4c
 6911 00df 02       		.uleb128 0x2
 6912 00e0 04       		.byte	0x4
 6913 00e1 04       		.byte	0x4
 6914 00e2 5F090000 		.4byte	.LASF19
 6915 00e6 02       		.uleb128 0x2
 6916 00e7 08       		.byte	0x8
 6917 00e8 04       		.byte	0x4
 6918 00e9 34090000 		.4byte	.LASF20
 6919 00ed 02       		.uleb128 0x2
 6920 00ee 01       		.byte	0x1
 6921 00ef 08       		.byte	0x8
 6922 00f0 4F040000 		.4byte	.LASF21
 6923 00f4 05       		.uleb128 0x5
 6924 00f5 910C0000 		.4byte	.LASF22
 6925 00f9 05       		.byte	0x5
 6926 00fa 8E02     		.2byte	0x28e
 6927 00fc 00010000 		.4byte	0x100
 6928 0100 06       		.uleb128 0x6
 6929 0101 97000000 		.4byte	0x97
 6930 0105 02       		.uleb128 0x2
 6931 0106 08       		.byte	0x8
 6932 0107 04       		.byte	0x4
 6933 0108 430B0000 		.4byte	.LASF23
 6934 010c 02       		.uleb128 0x2
 6935 010d 04       		.byte	0x4
 6936 010e 07       		.byte	0x7
 6937 010f 20000000 		.4byte	.LASF24
 6938 0113 07       		.uleb128 0x7
 6939 0114 04       		.byte	0x4
 6940 0115 ED000000 		.4byte	0xed
 6941 0119 07       		.uleb128 0x7
 6942 011a 04       		.byte	0x4
 6943 011b 1F010000 		.4byte	0x11f
 6944 011f 08       		.uleb128 0x8
 6945 0120 ED000000 		.4byte	0xed
 6946 0124 09       		.uleb128 0x9
 6947 0125 EA050000 		.4byte	.LASF43
 6948 0129 01       		.byte	0x1
 6949 012a 2C000000 		.4byte	0x2c
 6950 012e 06       		.byte	0x6
 6951 012f 43       		.byte	0x43
 6952 0130 A1010000 		.4byte	0x1a1
 6953 0134 0A       		.uleb128 0xa
 6954 0135 AC100000 		.4byte	.LASF25
 6955 0139 01       		.byte	0x1
 6956 013a 0A       		.uleb128 0xa
 6957 013b CA0E0000 		.4byte	.LASF26
 6958 013f 02       		.byte	0x2
 6959 0140 0A       		.uleb128 0xa
 6960 0141 12030000 		.4byte	.LASF27
 6961 0145 03       		.byte	0x3
 6962 0146 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 169


 6963 0147 360F0000 		.4byte	.LASF28
 6964 014b 04       		.byte	0x4
 6965 014c 0A       		.uleb128 0xa
 6966 014d DF010000 		.4byte	.LASF29
 6967 0151 05       		.byte	0x5
 6968 0152 0A       		.uleb128 0xa
 6969 0153 80070000 		.4byte	.LASF30
 6970 0157 06       		.byte	0x6
 6971 0158 0A       		.uleb128 0xa
 6972 0159 700E0000 		.4byte	.LASF31
 6973 015d 07       		.byte	0x7
 6974 015e 0A       		.uleb128 0xa
 6975 015f 1E040000 		.4byte	.LASF32
 6976 0163 08       		.byte	0x8
 6977 0164 0A       		.uleb128 0xa
 6978 0165 F1000000 		.4byte	.LASF33
 6979 0169 09       		.byte	0x9
 6980 016a 0A       		.uleb128 0xa
 6981 016b 9E040000 		.4byte	.LASF34
 6982 016f 0A       		.byte	0xa
 6983 0170 0A       		.uleb128 0xa
 6984 0171 280F0000 		.4byte	.LASF35
 6985 0175 0B       		.byte	0xb
 6986 0176 0A       		.uleb128 0xa
 6987 0177 E9020000 		.4byte	.LASF36
 6988 017b 0C       		.byte	0xc
 6989 017c 0A       		.uleb128 0xa
 6990 017d 51020000 		.4byte	.LASF37
 6991 0181 0D       		.byte	0xd
 6992 0182 0A       		.uleb128 0xa
 6993 0183 090A0000 		.4byte	.LASF38
 6994 0187 0E       		.byte	0xe
 6995 0188 0A       		.uleb128 0xa
 6996 0189 AB010000 		.4byte	.LASF39
 6997 018d 0F       		.byte	0xf
 6998 018e 0A       		.uleb128 0xa
 6999 018f B70A0000 		.4byte	.LASF40
 7000 0193 10       		.byte	0x10
 7001 0194 0A       		.uleb128 0xa
 7002 0195 43030000 		.4byte	.LASF41
 7003 0199 11       		.byte	0x11
 7004 019a 0A       		.uleb128 0xa
 7005 019b 0F0B0000 		.4byte	.LASF42
 7006 019f 12       		.byte	0x12
 7007 01a0 00       		.byte	0
 7008 01a1 09       		.uleb128 0x9
 7009 01a2 2D050000 		.4byte	.LASF44
 7010 01a6 01       		.byte	0x1
 7011 01a7 2C000000 		.4byte	0x2c
 7012 01ab 06       		.byte	0x6
 7013 01ac 5A       		.byte	0x5a
 7014 01ad 00020000 		.4byte	0x200
 7015 01b1 0A       		.uleb128 0xa
 7016 01b2 010D0000 		.4byte	.LASF45
 7017 01b6 00       		.byte	0
 7018 01b7 0A       		.uleb128 0xa
 7019 01b8 4E000000 		.4byte	.LASF46
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 170


 7020 01bc 01       		.byte	0x1
 7021 01bd 0A       		.uleb128 0xa
 7022 01be A8030000 		.4byte	.LASF47
 7023 01c2 02       		.byte	0x2
 7024 01c3 0A       		.uleb128 0xa
 7025 01c4 09000000 		.4byte	.LASF48
 7026 01c8 03       		.byte	0x3
 7027 01c9 0A       		.uleb128 0xa
 7028 01ca 2F0A0000 		.4byte	.LASF49
 7029 01ce 04       		.byte	0x4
 7030 01cf 0A       		.uleb128 0xa
 7031 01d0 1C0F0000 		.4byte	.LASF50
 7032 01d4 05       		.byte	0x5
 7033 01d5 0A       		.uleb128 0xa
 7034 01d6 E70C0000 		.4byte	.LASF51
 7035 01da 06       		.byte	0x6
 7036 01db 0A       		.uleb128 0xa
 7037 01dc 7D040000 		.4byte	.LASF52
 7038 01e0 07       		.byte	0x7
 7039 01e1 0A       		.uleb128 0xa
 7040 01e2 F70B0000 		.4byte	.LASF53
 7041 01e6 08       		.byte	0x8
 7042 01e7 0A       		.uleb128 0xa
 7043 01e8 E5070000 		.4byte	.LASF54
 7044 01ec 09       		.byte	0x9
 7045 01ed 0A       		.uleb128 0xa
 7046 01ee 37050000 		.4byte	.LASF55
 7047 01f2 0A       		.byte	0xa
 7048 01f3 0A       		.uleb128 0xa
 7049 01f4 8C0D0000 		.4byte	.LASF56
 7050 01f8 0B       		.byte	0xb
 7051 01f9 0A       		.uleb128 0xa
 7052 01fa 1D060000 		.4byte	.LASF57
 7053 01fe 0C       		.byte	0xc
 7054 01ff 00       		.byte	0
 7055 0200 09       		.uleb128 0x9
 7056 0201 ED090000 		.4byte	.LASF58
 7057 0205 01       		.byte	0x1
 7058 0206 2C000000 		.4byte	0x2c
 7059 020a 06       		.byte	0x6
 7060 020b 69       		.byte	0x69
 7061 020c DD020000 		.4byte	0x2dd
 7062 0210 0A       		.uleb128 0xa
 7063 0211 EE100000 		.4byte	.LASF59
 7064 0215 00       		.byte	0
 7065 0216 0A       		.uleb128 0xa
 7066 0217 A60E0000 		.4byte	.LASF60
 7067 021b 01       		.byte	0x1
 7068 021c 0A       		.uleb128 0xa
 7069 021d D0060000 		.4byte	.LASF61
 7070 0221 03       		.byte	0x3
 7071 0222 0A       		.uleb128 0xa
 7072 0223 05040000 		.4byte	.LASF62
 7073 0227 04       		.byte	0x4
 7074 0228 0A       		.uleb128 0xa
 7075 0229 D40C0000 		.4byte	.LASF63
 7076 022d 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 171


 7077 022e 0A       		.uleb128 0xa
 7078 022f C0070000 		.4byte	.LASF64
 7079 0233 06       		.byte	0x6
 7080 0234 0A       		.uleb128 0xa
 7081 0235 F3060000 		.4byte	.LASF65
 7082 0239 09       		.byte	0x9
 7083 023a 0A       		.uleb128 0xa
 7084 023b 29000000 		.4byte	.LASF66
 7085 023f 0A       		.byte	0xa
 7086 0240 0A       		.uleb128 0xa
 7087 0241 F80E0000 		.4byte	.LASF67
 7088 0245 0C       		.byte	0xc
 7089 0246 0A       		.uleb128 0xa
 7090 0247 7B0B0000 		.4byte	.LASF68
 7091 024b 0D       		.byte	0xd
 7092 024c 0A       		.uleb128 0xa
 7093 024d F8030000 		.4byte	.LASF69
 7094 0251 80       		.byte	0x80
 7095 0252 0A       		.uleb128 0xa
 7096 0253 3E040000 		.4byte	.LASF70
 7097 0257 81       		.byte	0x81
 7098 0258 0A       		.uleb128 0xa
 7099 0259 43050000 		.4byte	.LASF71
 7100 025d 82       		.byte	0x82
 7101 025e 0A       		.uleb128 0xa
 7102 025f 860E0000 		.4byte	.LASF72
 7103 0263 83       		.byte	0x83
 7104 0264 0A       		.uleb128 0xa
 7105 0265 020E0000 		.4byte	.LASF73
 7106 0269 84       		.byte	0x84
 7107 026a 0A       		.uleb128 0xa
 7108 026b A9020000 		.4byte	.LASF74
 7109 026f 85       		.byte	0x85
 7110 0270 0A       		.uleb128 0xa
 7111 0271 0E080000 		.4byte	.LASF75
 7112 0275 86       		.byte	0x86
 7113 0276 0A       		.uleb128 0xa
 7114 0277 9B070000 		.4byte	.LASF76
 7115 027b 88       		.byte	0x88
 7116 027c 0A       		.uleb128 0xa
 7117 027d E50E0000 		.4byte	.LASF77
 7118 0281 89       		.byte	0x89
 7119 0282 0A       		.uleb128 0xa
 7120 0283 2B0C0000 		.4byte	.LASF78
 7121 0287 8B       		.byte	0x8b
 7122 0288 0A       		.uleb128 0xa
 7123 0289 FD0A0000 		.4byte	.LASF79
 7124 028d 8C       		.byte	0x8c
 7125 028e 0A       		.uleb128 0xa
 7126 028f C3080000 		.4byte	.LASF80
 7127 0293 8E       		.byte	0x8e
 7128 0294 0A       		.uleb128 0xa
 7129 0295 C0030000 		.4byte	.LASF81
 7130 0299 FB       		.byte	0xfb
 7131 029a 0A       		.uleb128 0xa
 7132 029b DC030000 		.4byte	.LASF82
 7133 029f FA       		.byte	0xfa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 172


 7134 02a0 0A       		.uleb128 0xa
 7135 02a1 700C0000 		.4byte	.LASF83
 7136 02a5 90       		.byte	0x90
 7137 02a6 0A       		.uleb128 0xa
 7138 02a7 EE010000 		.4byte	.LASF84
 7139 02ab 92       		.byte	0x92
 7140 02ac 0A       		.uleb128 0xa
 7141 02ad BF0F0000 		.4byte	.LASF85
 7142 02b1 A1       		.byte	0xa1
 7143 02b2 0A       		.uleb128 0xa
 7144 02b3 C40D0000 		.4byte	.LASF86
 7145 02b7 A2       		.byte	0xa2
 7146 02b8 0A       		.uleb128 0xa
 7147 02b9 620A0000 		.4byte	.LASF87
 7148 02bd A3       		.byte	0xa3
 7149 02be 0A       		.uleb128 0xa
 7150 02bf E30D0000 		.4byte	.LASF88
 7151 02c3 A4       		.byte	0xa4
 7152 02c4 0A       		.uleb128 0xa
 7153 02c5 950E0000 		.4byte	.LASF89
 7154 02c9 A5       		.byte	0xa5
 7155 02ca 0A       		.uleb128 0xa
 7156 02cb 950D0000 		.4byte	.LASF90
 7157 02cf A6       		.byte	0xa6
 7158 02d0 0A       		.uleb128 0xa
 7159 02d1 3B090000 		.4byte	.LASF91
 7160 02d5 A7       		.byte	0xa7
 7161 02d6 0A       		.uleb128 0xa
 7162 02d7 6E090000 		.4byte	.LASF92
 7163 02db A8       		.byte	0xa8
 7164 02dc 00       		.byte	0
 7165 02dd 09       		.uleb128 0x9
 7166 02de 9E100000 		.4byte	.LASF93
 7167 02e2 01       		.byte	0x1
 7168 02e3 2C000000 		.4byte	0x2c
 7169 02e7 06       		.byte	0x6
 7170 02e8 BB       		.byte	0xbb
 7171 02e9 1E030000 		.4byte	0x31e
 7172 02ed 0A       		.uleb128 0xa
 7173 02ee BB050000 		.4byte	.LASF94
 7174 02f2 00       		.byte	0
 7175 02f3 0A       		.uleb128 0xa
 7176 02f4 420A0000 		.4byte	.LASF95
 7177 02f8 01       		.byte	0x1
 7178 02f9 0A       		.uleb128 0xa
 7179 02fa FF010000 		.4byte	.LASF96
 7180 02fe 02       		.byte	0x2
 7181 02ff 0A       		.uleb128 0xa
 7182 0300 46010000 		.4byte	.LASF97
 7183 0304 03       		.byte	0x3
 7184 0305 0A       		.uleb128 0xa
 7185 0306 04010000 		.4byte	.LASF98
 7186 030a 04       		.byte	0x4
 7187 030b 0A       		.uleb128 0xa
 7188 030c 36000000 		.4byte	.LASF99
 7189 0310 05       		.byte	0x5
 7190 0311 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 173


 7191 0312 0F070000 		.4byte	.LASF100
 7192 0316 06       		.byte	0x6
 7193 0317 0A       		.uleb128 0xa
 7194 0318 A50D0000 		.4byte	.LASF101
 7195 031c 07       		.byte	0x7
 7196 031d 00       		.byte	0
 7197 031e 09       		.uleb128 0x9
 7198 031f A10B0000 		.4byte	.LASF102
 7199 0323 01       		.byte	0x1
 7200 0324 2C000000 		.4byte	0x2c
 7201 0328 06       		.byte	0x6
 7202 0329 DE       		.byte	0xde
 7203 032a 3B030000 		.4byte	0x33b
 7204 032e 0A       		.uleb128 0xa
 7205 032f B1050000 		.4byte	.LASF103
 7206 0333 00       		.byte	0
 7207 0334 0A       		.uleb128 0xa
 7208 0335 61070000 		.4byte	.LASF104
 7209 0339 01       		.byte	0x1
 7210 033a 00       		.byte	0
 7211 033b 09       		.uleb128 0x9
 7212 033c 0B0F0000 		.4byte	.LASF105
 7213 0340 01       		.byte	0x1
 7214 0341 2C000000 		.4byte	0x2c
 7215 0345 06       		.byte	0x6
 7216 0346 E6       		.byte	0xe6
 7217 0347 88030000 		.4byte	0x388
 7218 034b 0A       		.uleb128 0xa
 7219 034c 68070000 		.4byte	.LASF106
 7220 0350 00       		.byte	0
 7221 0351 0A       		.uleb128 0xa
 7222 0352 BB100000 		.4byte	.LASF107
 7223 0356 01       		.byte	0x1
 7224 0357 0A       		.uleb128 0xa
 7225 0358 0E090000 		.4byte	.LASF108
 7226 035c 02       		.byte	0x2
 7227 035d 0A       		.uleb128 0xa
 7228 035e D90A0000 		.4byte	.LASF109
 7229 0362 03       		.byte	0x3
 7230 0363 0A       		.uleb128 0xa
 7231 0364 F8090000 		.4byte	.LASF110
 7232 0368 04       		.byte	0x4
 7233 0369 0A       		.uleb128 0xa
 7234 036a 010C0000 		.4byte	.LASF111
 7235 036e 05       		.byte	0x5
 7236 036f 0A       		.uleb128 0xa
 7237 0370 4F0B0000 		.4byte	.LASF112
 7238 0374 06       		.byte	0x6
 7239 0375 0A       		.uleb128 0xa
 7240 0376 AC0A0000 		.4byte	.LASF113
 7241 037a 07       		.byte	0x7
 7242 037b 0A       		.uleb128 0xa
 7243 037c 86050000 		.4byte	.LASF114
 7244 0380 08       		.byte	0x8
 7245 0381 0A       		.uleb128 0xa
 7246 0382 C4060000 		.4byte	.LASF115
 7247 0386 09       		.byte	0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 174


 7248 0387 00       		.byte	0
 7249 0388 0B       		.uleb128 0xb
 7250 0389 79000000 		.4byte	.LASF119
 7251 038d 86       		.byte	0x86
 7252 038e 07       		.byte	0x7
 7253 038f 9A       		.byte	0x9a
 7254 0390 C5030000 		.4byte	0x3c5
 7255 0394 0C       		.uleb128 0xc
 7256 0395 59050000 		.4byte	.LASF116
 7257 0399 07       		.byte	0x7
 7258 039a 9B       		.byte	0x9b
 7259 039b C5030000 		.4byte	0x3c5
 7260 039f 00       		.byte	0
 7261 03a0 0C       		.uleb128 0xc
 7262 03a1 170C0000 		.4byte	.LASF117
 7263 03a5 07       		.byte	0x7
 7264 03a6 9C       		.byte	0x9c
 7265 03a7 C7000000 		.4byte	0xc7
 7266 03ab 80       		.byte	0x80
 7267 03ac 0D       		.uleb128 0xd
 7268 03ad 696E6400 		.ascii	"ind\000"
 7269 03b1 07       		.byte	0x7
 7270 03b2 9D       		.byte	0x9d
 7271 03b3 C7000000 		.4byte	0xc7
 7272 03b7 82       		.byte	0x82
 7273 03b8 0C       		.uleb128 0xc
 7274 03b9 D0010000 		.4byte	.LASF118
 7275 03bd 07       		.byte	0x7
 7276 03be 9E       		.byte	0x9e
 7277 03bf 97000000 		.4byte	0x97
 7278 03c3 84       		.byte	0x84
 7279 03c4 00       		.byte	0
 7280 03c5 0E       		.uleb128 0xe
 7281 03c6 97000000 		.4byte	0x97
 7282 03ca D5030000 		.4byte	0x3d5
 7283 03ce 0F       		.uleb128 0xf
 7284 03cf 0C010000 		.4byte	0x10c
 7285 03d3 7F       		.byte	0x7f
 7286 03d4 00       		.byte	0
 7287 03d5 0B       		.uleb128 0xb
 7288 03d6 F9040000 		.4byte	.LASF120
 7289 03da 10       		.byte	0x10
 7290 03db 07       		.byte	0x7
 7291 03dc A8       		.byte	0xa8
 7292 03dd 05040000 		.4byte	0x405
 7293 03e1 0D       		.uleb128 0xd
 7294 03e2 696400   		.ascii	"id\000"
 7295 03e5 07       		.byte	0x7
 7296 03e6 A9       		.byte	0xa9
 7297 03e7 97000000 		.4byte	0x97
 7298 03eb 00       		.byte	0
 7299 03ec 0C       		.uleb128 0xc
 7300 03ed 950F0000 		.4byte	.LASF121
 7301 03f1 07       		.byte	0x7
 7302 03f2 AA       		.byte	0xaa
 7303 03f3 97000000 		.4byte	0x97
 7304 03f7 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 175


 7305 03f8 0C       		.uleb128 0xc
 7306 03f9 7C020000 		.4byte	.LASF122
 7307 03fd 07       		.byte	0x7
 7308 03fe AB       		.byte	0xab
 7309 03ff 05040000 		.4byte	0x405
 7310 0403 02       		.byte	0x2
 7311 0404 00       		.byte	0
 7312 0405 0E       		.uleb128 0xe
 7313 0406 97000000 		.4byte	0x97
 7314 040a 15040000 		.4byte	0x415
 7315 040e 0F       		.uleb128 0xf
 7316 040f 0C010000 		.4byte	0x10c
 7317 0413 0D       		.byte	0xd
 7318 0414 00       		.byte	0
 7319 0415 0B       		.uleb128 0xb
 7320 0416 F0080000 		.4byte	.LASF123
 7321 041a 10       		.byte	0x10
 7322 041b 07       		.byte	0x7
 7323 041c B2       		.byte	0xb2
 7324 041d 5E040000 		.4byte	0x45e
 7325 0421 0C       		.uleb128 0xc
 7326 0422 D9000000 		.4byte	.LASF124
 7327 0426 07       		.byte	0x7
 7328 0427 B4       		.byte	0xb4
 7329 0428 D3000000 		.4byte	0xd3
 7330 042c 00       		.byte	0
 7331 042d 0C       		.uleb128 0xc
 7332 042e C0040000 		.4byte	.LASF125
 7333 0432 07       		.byte	0x7
 7334 0433 B5       		.byte	0xb5
 7335 0434 D3000000 		.4byte	0xd3
 7336 0438 04       		.byte	0x4
 7337 0439 0C       		.uleb128 0xc
 7338 043a 90070000 		.4byte	.LASF126
 7339 043e 07       		.byte	0x7
 7340 043f B6       		.byte	0xb6
 7341 0440 97000000 		.4byte	0x97
 7342 0444 08       		.byte	0x8
 7343 0445 0D       		.uleb128 0xd
 7344 0446 72657300 		.ascii	"res\000"
 7345 044a 07       		.byte	0x7
 7346 044b B7       		.byte	0xb7
 7347 044c 97000000 		.4byte	0x97
 7348 0450 09       		.byte	0x9
 7349 0451 0C       		.uleb128 0xc
 7350 0452 7C020000 		.4byte	.LASF122
 7351 0456 07       		.byte	0x7
 7352 0457 B8       		.byte	0xb8
 7353 0458 5E040000 		.4byte	0x45e
 7354 045c 0A       		.byte	0xa
 7355 045d 00       		.byte	0
 7356 045e 0E       		.uleb128 0xe
 7357 045f 97000000 		.4byte	0x97
 7358 0463 6E040000 		.4byte	0x46e
 7359 0467 0F       		.uleb128 0xf
 7360 0468 0C010000 		.4byte	0x10c
 7361 046c 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 176


 7362 046d 00       		.byte	0
 7363 046e 0B       		.uleb128 0xb
 7364 046f A4010000 		.4byte	.LASF127
 7365 0473 10       		.byte	0x10
 7366 0474 07       		.byte	0x7
 7367 0475 C0       		.byte	0xc0
 7368 0476 B7040000 		.4byte	0x4b7
 7369 047a 0C       		.uleb128 0xc
 7370 047b EF0A0000 		.4byte	.LASF128
 7371 047f 07       		.byte	0x7
 7372 0480 C1       		.byte	0xc1
 7373 0481 B7040000 		.4byte	0x4b7
 7374 0485 00       		.byte	0
 7375 0486 0C       		.uleb128 0xc
 7376 0487 62100000 		.4byte	.LASF129
 7377 048b 07       		.byte	0x7
 7378 048c C2       		.byte	0xc2
 7379 048d C7040000 		.4byte	0x4c7
 7380 0491 04       		.byte	0x4
 7381 0492 0C       		.uleb128 0xc
 7382 0493 E3040000 		.4byte	.LASF130
 7383 0497 07       		.byte	0x7
 7384 0498 C3       		.byte	0xc3
 7385 0499 D7040000 		.4byte	0x4d7
 7386 049d 0C       		.byte	0xc
 7387 049e 0C       		.uleb128 0xc
 7388 049f 84030000 		.4byte	.LASF131
 7389 04a3 07       		.byte	0x7
 7390 04a4 C4       		.byte	0xc4
 7391 04a5 97000000 		.4byte	0x97
 7392 04a9 0E       		.byte	0xe
 7393 04aa 0C       		.uleb128 0xc
 7394 04ab 7C020000 		.4byte	.LASF122
 7395 04af 07       		.byte	0x7
 7396 04b0 C5       		.byte	0xc5
 7397 04b1 E7040000 		.4byte	0x4e7
 7398 04b5 0F       		.byte	0xf
 7399 04b6 00       		.byte	0
 7400 04b7 0E       		.uleb128 0xe
 7401 04b8 A3000000 		.4byte	0xa3
 7402 04bc C7040000 		.4byte	0x4c7
 7403 04c0 0F       		.uleb128 0xf
 7404 04c1 0C010000 		.4byte	0x10c
 7405 04c5 01       		.byte	0x1
 7406 04c6 00       		.byte	0
 7407 04c7 0E       		.uleb128 0xe
 7408 04c8 AF000000 		.4byte	0xaf
 7409 04cc D7040000 		.4byte	0x4d7
 7410 04d0 0F       		.uleb128 0xf
 7411 04d1 0C010000 		.4byte	0x10c
 7412 04d5 01       		.byte	0x1
 7413 04d6 00       		.byte	0
 7414 04d7 0E       		.uleb128 0xe
 7415 04d8 97000000 		.4byte	0x97
 7416 04dc E7040000 		.4byte	0x4e7
 7417 04e0 0F       		.uleb128 0xf
 7418 04e1 0C010000 		.4byte	0x10c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 177


 7419 04e5 01       		.byte	0x1
 7420 04e6 00       		.byte	0
 7421 04e7 0E       		.uleb128 0xe
 7422 04e8 97000000 		.4byte	0x97
 7423 04ec F7040000 		.4byte	0x4f7
 7424 04f0 0F       		.uleb128 0xf
 7425 04f1 0C010000 		.4byte	0x10c
 7426 04f5 00       		.byte	0
 7427 04f6 00       		.byte	0
 7428 04f7 0B       		.uleb128 0xb
 7429 04f8 2D010000 		.4byte	.LASF132
 7430 04fc 10       		.byte	0x10
 7431 04fd 07       		.byte	0x7
 7432 04fe CC       		.byte	0xcc
 7433 04ff 28050000 		.4byte	0x528
 7434 0503 0C       		.uleb128 0xc
 7435 0504 5F030000 		.4byte	.LASF133
 7436 0508 07       		.byte	0x7
 7437 0509 CD       		.byte	0xcd
 7438 050a 97000000 		.4byte	0x97
 7439 050e 00       		.byte	0
 7440 050f 0C       		.uleb128 0xc
 7441 0510 58070000 		.4byte	.LASF134
 7442 0514 07       		.byte	0x7
 7443 0515 CE       		.byte	0xce
 7444 0516 97000000 		.4byte	0x97
 7445 051a 01       		.byte	0x1
 7446 051b 0C       		.uleb128 0xc
 7447 051c 7C020000 		.4byte	.LASF122
 7448 0520 07       		.byte	0x7
 7449 0521 CF       		.byte	0xcf
 7450 0522 05040000 		.4byte	0x405
 7451 0526 02       		.byte	0x2
 7452 0527 00       		.byte	0
 7453 0528 0B       		.uleb128 0xb
 7454 0529 5B0B0000 		.4byte	.LASF135
 7455 052d 10       		.byte	0x10
 7456 052e 07       		.byte	0x7
 7457 052f D6       		.byte	0xd6
 7458 0530 7D050000 		.4byte	0x57d
 7459 0534 0C       		.uleb128 0xc
 7460 0535 19100000 		.4byte	.LASF136
 7461 0539 07       		.byte	0x7
 7462 053a D7       		.byte	0xd7
 7463 053b D3000000 		.4byte	0xd3
 7464 053f 00       		.byte	0
 7465 0540 0C       		.uleb128 0xc
 7466 0541 D5050000 		.4byte	.LASF137
 7467 0545 07       		.byte	0x7
 7468 0546 D8       		.byte	0xd8
 7469 0547 DF000000 		.4byte	0xdf
 7470 054b 04       		.byte	0x4
 7471 054c 0C       		.uleb128 0xc
 7472 054d 960C0000 		.4byte	.LASF138
 7473 0551 07       		.byte	0x7
 7474 0552 D9       		.byte	0xd9
 7475 0553 DF000000 		.4byte	0xdf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 178


 7476 0557 08       		.byte	0x8
 7477 0558 0C       		.uleb128 0xc
 7478 0559 F1070000 		.4byte	.LASF139
 7479 055d 07       		.byte	0x7
 7480 055e DA       		.byte	0xda
 7481 055f 97000000 		.4byte	0x97
 7482 0563 0C       		.byte	0xc
 7483 0564 0C       		.uleb128 0xc
 7484 0565 170E0000 		.4byte	.LASF140
 7485 0569 07       		.byte	0x7
 7486 056a DB       		.byte	0xdb
 7487 056b 97000000 		.4byte	0x97
 7488 056f 0D       		.byte	0xd
 7489 0570 0C       		.uleb128 0xc
 7490 0571 7C020000 		.4byte	.LASF122
 7491 0575 07       		.byte	0x7
 7492 0576 DC       		.byte	0xdc
 7493 0577 D7040000 		.4byte	0x4d7
 7494 057b 0E       		.byte	0xe
 7495 057c 00       		.byte	0
 7496 057d 0B       		.uleb128 0xb
 7497 057e 2E100000 		.4byte	.LASF141
 7498 0582 60       		.byte	0x60
 7499 0583 07       		.byte	0x7
 7500 0584 E6       		.byte	0xe6
 7501 0585 DC050000 		.4byte	0x5dc
 7502 0589 0C       		.uleb128 0xc
 7503 058a 040A0000 		.4byte	.LASF142
 7504 058e 07       		.byte	0x7
 7505 058f E7       		.byte	0xe7
 7506 0590 97000000 		.4byte	0x97
 7507 0594 00       		.byte	0
 7508 0595 0C       		.uleb128 0xc
 7509 0596 7C020000 		.4byte	.LASF122
 7510 059a 07       		.byte	0x7
 7511 059b E8       		.byte	0xe8
 7512 059c DC050000 		.4byte	0x5dc
 7513 05a0 01       		.byte	0x1
 7514 05a1 0D       		.uleb128 0xd
 7515 05a2 64657600 		.ascii	"dev\000"
 7516 05a6 07       		.byte	0x7
 7517 05a7 E9       		.byte	0xe9
 7518 05a8 D5030000 		.4byte	0x3d5
 7519 05ac 10       		.byte	0x10
 7520 05ad 0C       		.uleb128 0xc
 7521 05ae 19090000 		.4byte	.LASF143
 7522 05b2 07       		.byte	0x7
 7523 05b3 EA       		.byte	0xea
 7524 05b4 15040000 		.4byte	0x415
 7525 05b8 20       		.byte	0x20
 7526 05b9 0D       		.uleb128 0xd
 7527 05ba 656D6700 		.ascii	"emg\000"
 7528 05be 07       		.byte	0x7
 7529 05bf EB       		.byte	0xeb
 7530 05c0 6E040000 		.4byte	0x46e
 7531 05c4 30       		.byte	0x30
 7532 05c5 0D       		.uleb128 0xd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 179


 7533 05c6 4D5300   		.ascii	"MS\000"
 7534 05c9 07       		.byte	0x7
 7535 05ca EC       		.byte	0xec
 7536 05cb F7040000 		.4byte	0x4f7
 7537 05cf 40       		.byte	0x40
 7538 05d0 0D       		.uleb128 0xd
 7539 05d1 464200   		.ascii	"FB\000"
 7540 05d4 07       		.byte	0x7
 7541 05d5 ED       		.byte	0xed
 7542 05d6 28050000 		.4byte	0x528
 7543 05da 50       		.byte	0x50
 7544 05db 00       		.byte	0
 7545 05dc 0E       		.uleb128 0xe
 7546 05dd 97000000 		.4byte	0x97
 7547 05e1 EC050000 		.4byte	0x5ec
 7548 05e5 0F       		.uleb128 0xf
 7549 05e6 0C010000 		.4byte	0x10c
 7550 05ea 0E       		.byte	0xe
 7551 05eb 00       		.byte	0
 7552 05ec 10       		.uleb128 0x10
 7553 05ed 23020000 		.4byte	.LASF144
 7554 05f1 2C       		.byte	0x2c
 7555 05f2 07       		.byte	0x7
 7556 05f3 3801     		.2byte	0x138
 7557 05f5 21060000 		.4byte	0x621
 7558 05f9 11       		.uleb128 0x11
 7559 05fa FD0D0000 		.4byte	.LASF145
 7560 05fe 07       		.byte	0x7
 7561 05ff 3901     		.2byte	0x139
 7562 0601 97000000 		.4byte	0x97
 7563 0605 00       		.byte	0
 7564 0606 11       		.uleb128 0x11
 7565 0607 F70D0000 		.4byte	.LASF146
 7566 060b 07       		.byte	0x7
 7567 060c 3A01     		.2byte	0x13a
 7568 060e 97000000 		.4byte	0x97
 7569 0612 01       		.byte	0x1
 7570 0613 11       		.uleb128 0x11
 7571 0614 EA000000 		.4byte	.LASF147
 7572 0618 07       		.byte	0x7
 7573 0619 3B01     		.2byte	0x13b
 7574 061b 21060000 		.4byte	0x621
 7575 061f 04       		.byte	0x4
 7576 0620 00       		.byte	0
 7577 0621 0E       		.uleb128 0xe
 7578 0622 19010000 		.4byte	0x119
 7579 0626 31060000 		.4byte	0x631
 7580 062a 0F       		.uleb128 0xf
 7581 062b 0C010000 		.4byte	0x10c
 7582 062f 09       		.byte	0x9
 7583 0630 00       		.byte	0
 7584 0631 10       		.uleb128 0x10
 7585 0632 86040000 		.4byte	.LASF148
 7586 0636 10       		.byte	0x10
 7587 0637 07       		.byte	0x7
 7588 0638 3E01     		.2byte	0x13e
 7589 063a A7060000 		.4byte	0x6a7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 180


 7590 063e 11       		.uleb128 0x11
 7591 063f 660D0000 		.4byte	.LASF149
 7592 0643 07       		.byte	0x7
 7593 0644 3F01     		.2byte	0x13f
 7594 0646 A7060000 		.4byte	0x6a7
 7595 064a 00       		.byte	0
 7596 064b 11       		.uleb128 0x11
 7597 064c 38100000 		.4byte	.LASF150
 7598 0650 07       		.byte	0x7
 7599 0651 4001     		.2byte	0x140
 7600 0653 97000000 		.4byte	0x97
 7601 0657 04       		.byte	0x4
 7602 0658 11       		.uleb128 0x11
 7603 0659 89020000 		.4byte	.LASF151
 7604 065d 07       		.byte	0x7
 7605 065e 4101     		.2byte	0x141
 7606 0660 97000000 		.4byte	0x97
 7607 0664 05       		.byte	0x5
 7608 0665 11       		.uleb128 0x11
 7609 0666 3C010000 		.4byte	.LASF152
 7610 066a 07       		.byte	0x7
 7611 066b 4201     		.2byte	0x142
 7612 066d 19010000 		.4byte	0x119
 7613 0671 08       		.byte	0x8
 7614 0672 11       		.uleb128 0x11
 7615 0673 E0070000 		.4byte	.LASF153
 7616 0677 07       		.byte	0x7
 7617 0678 4301     		.2byte	0x143
 7618 067a 97000000 		.4byte	0x97
 7619 067e 0C       		.byte	0xc
 7620 067f 11       		.uleb128 0x11
 7621 0680 770A0000 		.4byte	.LASF154
 7622 0684 07       		.byte	0x7
 7623 0685 4401     		.2byte	0x144
 7624 0687 97000000 		.4byte	0x97
 7625 068b 0D       		.byte	0xd
 7626 068c 11       		.uleb128 0x11
 7627 068d F00B0000 		.4byte	.LASF155
 7628 0691 07       		.byte	0x7
 7629 0692 4501     		.2byte	0x145
 7630 0694 97000000 		.4byte	0x97
 7631 0698 0E       		.byte	0xe
 7632 0699 11       		.uleb128 0x11
 7633 069a BB070000 		.4byte	.LASF156
 7634 069e 07       		.byte	0x7
 7635 069f 4601     		.2byte	0x146
 7636 06a1 97000000 		.4byte	0x97
 7637 06a5 0F       		.byte	0xf
 7638 06a6 00       		.byte	0
 7639 06a7 07       		.uleb128 0x7
 7640 06a8 04       		.byte	0x4
 7641 06a9 97000000 		.4byte	0x97
 7642 06ad 10       		.uleb128 0x10
 7643 06ae 9B090000 		.4byte	.LASF157
 7644 06b2 0C       		.byte	0xc
 7645 06b3 07       		.byte	0x7
 7646 06b4 5B01     		.2byte	0x15b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 181


 7647 06b6 D5060000 		.4byte	0x6d5
 7648 06ba 12       		.uleb128 0x12
 7649 06bb 656D6700 		.ascii	"emg\000"
 7650 06bf 07       		.byte	0x7
 7651 06c0 5C01     		.2byte	0x15c
 7652 06c2 D5060000 		.4byte	0x6d5
 7653 06c6 00       		.byte	0
 7654 06c7 11       		.uleb128 0x11
 7655 06c8 35040000 		.4byte	.LASF158
 7656 06cc 07       		.byte	0x7
 7657 06cd 5D01     		.2byte	0x15d
 7658 06cf DF000000 		.4byte	0xdf
 7659 06d3 08       		.byte	0x8
 7660 06d4 00       		.byte	0
 7661 06d5 0E       		.uleb128 0xe
 7662 06d6 D3000000 		.4byte	0xd3
 7663 06da E5060000 		.4byte	0x6e5
 7664 06de 0F       		.uleb128 0xf
 7665 06df 0C010000 		.4byte	0x10c
 7666 06e3 01       		.byte	0x1
 7667 06e4 00       		.byte	0
 7668 06e5 13       		.uleb128 0x13
 7669 06e6 5E0D0000 		.4byte	.LASF300
 7670 06ea 02       		.byte	0x2
 7671 06eb 1403     		.2byte	0x314
 7672 06ed 8C000000 		.4byte	0x8c
 7673 06f1 03       		.byte	0x3
 7674 06f2 0F070000 		.4byte	0x70f
 7675 06f6 14       		.uleb128 0x14
 7676 06f7 2F040000 		.4byte	.LASF218
 7677 06fb 02       		.byte	0x2
 7678 06fc 1403     		.2byte	0x314
 7679 06fe 8C000000 		.4byte	0x8c
 7680 0702 15       		.uleb128 0x15
 7681 0703 C9010000 		.4byte	.LASF301
 7682 0707 02       		.byte	0x2
 7683 0708 1603     		.2byte	0x316
 7684 070a 8C000000 		.4byte	0x8c
 7685 070e 00       		.byte	0
 7686 070f 16       		.uleb128 0x16
 7687 0710 5A0E0000 		.4byte	.LASF159
 7688 0714 01       		.byte	0x1
 7689 0715 3D       		.byte	0x3d
 7690 0716 00000000 		.4byte	.LFB64
 7691 071a BC050000 		.4byte	.LFE64-.LFB64
 7692 071e 01       		.uleb128 0x1
 7693 071f 9C       		.byte	0x9c
 7694 0720 17080000 		.4byte	0x817
 7695 0724 17       		.uleb128 0x17
 7696 0725 7F050000 		.4byte	.LASF161
 7697 0729 01       		.byte	0x1
 7698 072a 3F       		.byte	0x3f
 7699 072b 97000000 		.4byte	0x97
 7700 072f 02       		.uleb128 0x2
 7701 0730 91       		.byte	0x91
 7702 0731 77       		.sleb128 -9
 7703 0732 18       		.uleb128 0x18
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 182


 7704 0733 E5060000 		.4byte	0x6e5
 7705 0737 9A040000 		.4byte	.LBB12
 7706 073b 08000000 		.4byte	.LBE12-.LBB12
 7707 073f 01       		.byte	0x1
 7708 0740 A2       		.byte	0xa2
 7709 0741 60070000 		.4byte	0x760
 7710 0745 19       		.uleb128 0x19
 7711 0746 F6060000 		.4byte	0x6f6
 7712 074a 02       		.uleb128 0x2
 7713 074b 91       		.byte	0x91
 7714 074c 60       		.sleb128 -32
 7715 074d 1A       		.uleb128 0x1a
 7716 074e 9A040000 		.4byte	.LBB13
 7717 0752 08000000 		.4byte	.LBE13-.LBB13
 7718 0756 1B       		.uleb128 0x1b
 7719 0757 02070000 		.4byte	0x702
 7720 075b 02       		.uleb128 0x2
 7721 075c 91       		.byte	0x91
 7722 075d 5C       		.sleb128 -36
 7723 075e 00       		.byte	0
 7724 075f 00       		.byte	0
 7725 0760 18       		.uleb128 0x18
 7726 0761 E5060000 		.4byte	0x6e5
 7727 0765 B8040000 		.4byte	.LBB14
 7728 0769 08000000 		.4byte	.LBE14-.LBB14
 7729 076d 01       		.byte	0x1
 7730 076e AE       		.byte	0xae
 7731 076f 8E070000 		.4byte	0x78e
 7732 0773 19       		.uleb128 0x19
 7733 0774 F6060000 		.4byte	0x6f6
 7734 0778 02       		.uleb128 0x2
 7735 0779 91       		.byte	0x91
 7736 077a 70       		.sleb128 -16
 7737 077b 1A       		.uleb128 0x1a
 7738 077c B8040000 		.4byte	.LBB15
 7739 0780 08000000 		.4byte	.LBE15-.LBB15
 7740 0784 1B       		.uleb128 0x1b
 7741 0785 02070000 		.4byte	0x702
 7742 0789 02       		.uleb128 0x2
 7743 078a 91       		.byte	0x91
 7744 078b 58       		.sleb128 -40
 7745 078c 00       		.byte	0
 7746 078d 00       		.byte	0
 7747 078e 18       		.uleb128 0x18
 7748 078f E5060000 		.4byte	0x6e5
 7749 0793 56050000 		.4byte	.LBB16
 7750 0797 08000000 		.4byte	.LBE16-.LBB16
 7751 079b 01       		.byte	0x1
 7752 079c F2       		.byte	0xf2
 7753 079d BC070000 		.4byte	0x7bc
 7754 07a1 19       		.uleb128 0x19
 7755 07a2 F6060000 		.4byte	0x6f6
 7756 07a6 02       		.uleb128 0x2
 7757 07a7 91       		.byte	0x91
 7758 07a8 6C       		.sleb128 -20
 7759 07a9 1A       		.uleb128 0x1a
 7760 07aa 56050000 		.4byte	.LBB17
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 183


 7761 07ae 08000000 		.4byte	.LBE17-.LBB17
 7762 07b2 1B       		.uleb128 0x1b
 7763 07b3 02070000 		.4byte	0x702
 7764 07b7 02       		.uleb128 0x2
 7765 07b8 91       		.byte	0x91
 7766 07b9 54       		.sleb128 -44
 7767 07ba 00       		.byte	0
 7768 07bb 00       		.byte	0
 7769 07bc 1C       		.uleb128 0x1c
 7770 07bd E5060000 		.4byte	0x6e5
 7771 07c1 86050000 		.4byte	.LBB18
 7772 07c5 08000000 		.4byte	.LBE18-.LBB18
 7773 07c9 01       		.byte	0x1
 7774 07ca 1001     		.2byte	0x110
 7775 07cc EB070000 		.4byte	0x7eb
 7776 07d0 19       		.uleb128 0x19
 7777 07d1 F6060000 		.4byte	0x6f6
 7778 07d5 02       		.uleb128 0x2
 7779 07d6 91       		.byte	0x91
 7780 07d7 68       		.sleb128 -24
 7781 07d8 1A       		.uleb128 0x1a
 7782 07d9 86050000 		.4byte	.LBB19
 7783 07dd 08000000 		.4byte	.LBE19-.LBB19
 7784 07e1 1B       		.uleb128 0x1b
 7785 07e2 02070000 		.4byte	0x702
 7786 07e6 02       		.uleb128 0x2
 7787 07e7 91       		.byte	0x91
 7788 07e8 50       		.sleb128 -48
 7789 07e9 00       		.byte	0
 7790 07ea 00       		.byte	0
 7791 07eb 1D       		.uleb128 0x1d
 7792 07ec E5060000 		.4byte	0x6e5
 7793 07f0 9E050000 		.4byte	.LBB20
 7794 07f4 08000000 		.4byte	.LBE20-.LBB20
 7795 07f8 01       		.byte	0x1
 7796 07f9 1601     		.2byte	0x116
 7797 07fb 19       		.uleb128 0x19
 7798 07fc F6060000 		.4byte	0x6f6
 7799 0800 02       		.uleb128 0x2
 7800 0801 91       		.byte	0x91
 7801 0802 64       		.sleb128 -28
 7802 0803 1A       		.uleb128 0x1a
 7803 0804 9E050000 		.4byte	.LBB21
 7804 0808 08000000 		.4byte	.LBE21-.LBB21
 7805 080c 1B       		.uleb128 0x1b
 7806 080d 02070000 		.4byte	0x702
 7807 0811 02       		.uleb128 0x2
 7808 0812 91       		.byte	0x91
 7809 0813 4C       		.sleb128 -52
 7810 0814 00       		.byte	0
 7811 0815 00       		.byte	0
 7812 0816 00       		.byte	0
 7813 0817 1E       		.uleb128 0x1e
 7814 0818 00000000 		.4byte	.LASF160
 7815 081c 01       		.byte	0x1
 7816 081d 2401     		.2byte	0x124
 7817 081f 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 184


 7818 0823 22000000 		.4byte	.LFE65-.LFB65
 7819 0827 01       		.uleb128 0x1
 7820 0828 9C       		.byte	0x9c
 7821 0829 3E080000 		.4byte	0x83e
 7822 082d 1F       		.uleb128 0x1f
 7823 082e 90040000 		.4byte	.LASF162
 7824 0832 01       		.byte	0x1
 7825 0833 2501     		.2byte	0x125
 7826 0835 3E080000 		.4byte	0x83e
 7827 0839 03       		.uleb128 0x3
 7828 083a 91       		.byte	0x91
 7829 083b 9C74     		.sleb128 -1508
 7830 083d 00       		.byte	0
 7831 083e 0E       		.uleb128 0xe
 7832 083f ED000000 		.4byte	0xed
 7833 0843 4F080000 		.4byte	0x84f
 7834 0847 20       		.uleb128 0x20
 7835 0848 0C010000 		.4byte	0x10c
 7836 084c DB05     		.2byte	0x5db
 7837 084e 00       		.byte	0
 7838 084f 21       		.uleb128 0x21
 7839 0850 02070000 		.4byte	.LASF212
 7840 0854 01       		.byte	0x1
 7841 0855 2E01     		.2byte	0x12e
 7842 0857 97000000 		.4byte	0x97
 7843 085b 00000000 		.4byte	.LFB66
 7844 085f 5E000000 		.4byte	.LFE66-.LFB66
 7845 0863 01       		.uleb128 0x1
 7846 0864 9C       		.byte	0x9c
 7847 0865 88080000 		.4byte	0x888
 7848 0869 22       		.uleb128 0x22
 7849 086a E5000000 		.4byte	.LASF164
 7850 086e 01       		.byte	0x1
 7851 086f 2E01     		.2byte	0x12e
 7852 0871 97000000 		.4byte	0x97
 7853 0875 02       		.uleb128 0x2
 7854 0876 91       		.byte	0x91
 7855 0877 6F       		.sleb128 -17
 7856 0878 23       		.uleb128 0x23
 7857 0879 736F6400 		.ascii	"sod\000"
 7858 087d 01       		.byte	0x1
 7859 087e 2F01     		.2byte	0x12f
 7860 0880 97000000 		.4byte	0x97
 7861 0884 02       		.uleb128 0x2
 7862 0885 91       		.byte	0x91
 7863 0886 77       		.sleb128 -9
 7864 0887 00       		.byte	0
 7865 0888 1E       		.uleb128 0x1e
 7866 0889 44100000 		.4byte	.LASF163
 7867 088d 01       		.byte	0x1
 7868 088e 3F01     		.2byte	0x13f
 7869 0890 00000000 		.4byte	.LFB67
 7870 0894 64010000 		.4byte	.LFE67-.LFB67
 7871 0898 01       		.uleb128 0x1
 7872 0899 9C       		.byte	0x9c
 7873 089a D1080000 		.4byte	0x8d1
 7874 089e 22       		.uleb128 0x22
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 185


 7875 089f 820D0000 		.4byte	.LASF165
 7876 08a3 01       		.byte	0x1
 7877 08a4 3F01     		.2byte	0x13f
 7878 08a6 A3000000 		.4byte	0xa3
 7879 08aa 04       		.uleb128 0x4
 7880 08ab 91       		.byte	0x91
 7881 08ac B6C47E   		.sleb128 -24010
 7882 08af 1F       		.uleb128 0x1f
 7883 08b0 90040000 		.4byte	.LASF162
 7884 08b4 01       		.byte	0x1
 7885 08b5 4001     		.2byte	0x140
 7886 08b7 D1080000 		.4byte	0x8d1
 7887 08bb 03       		.uleb128 0x3
 7888 08bc 91       		.byte	0x91
 7889 08bd D860     		.sleb128 -4008
 7890 08bf 1F       		.uleb128 0x1f
 7891 08c0 4C070000 		.4byte	.LASF166
 7892 08c4 01       		.byte	0x1
 7893 08c5 4101     		.2byte	0x141
 7894 08c7 E2080000 		.4byte	0x8e2
 7895 08cb 04       		.uleb128 0x4
 7896 08cc 91       		.byte	0x91
 7897 08cd B8C47E   		.sleb128 -24008
 7898 08d0 00       		.byte	0
 7899 08d1 0E       		.uleb128 0xe
 7900 08d2 ED000000 		.4byte	0xed
 7901 08d6 E2080000 		.4byte	0x8e2
 7902 08da 20       		.uleb128 0x20
 7903 08db 0C010000 		.4byte	0x10c
 7904 08df 9F0F     		.2byte	0xf9f
 7905 08e1 00       		.byte	0
 7906 08e2 0E       		.uleb128 0xe
 7907 08e3 ED000000 		.4byte	0xed
 7908 08e7 F3080000 		.4byte	0x8f3
 7909 08eb 20       		.uleb128 0x20
 7910 08ec 0C010000 		.4byte	0x10c
 7911 08f0 1F4E     		.2byte	0x4e1f
 7912 08f2 00       		.byte	0
 7913 08f3 1E       		.uleb128 0x1e
 7914 08f4 73010000 		.4byte	.LASF167
 7915 08f8 01       		.byte	0x1
 7916 08f9 7101     		.2byte	0x171
 7917 08fb 00000000 		.4byte	.LFB68
 7918 08ff BC070000 		.4byte	.LFE68-.LFB68
 7919 0903 01       		.uleb128 0x1
 7920 0904 9C       		.byte	0x9c
 7921 0905 430A0000 		.4byte	0xa43
 7922 0909 22       		.uleb128 0x22
 7923 090a CE0B0000 		.4byte	.LASF168
 7924 090e 01       		.byte	0x1
 7925 090f 7101     		.2byte	0x171
 7926 0911 97000000 		.4byte	0x97
 7927 0915 03       		.uleb128 0x3
 7928 0916 91       		.byte	0x91
 7929 0917 8F7B     		.sleb128 -625
 7930 0919 22       		.uleb128 0x22
 7931 091a F70C0000 		.4byte	.LASF169
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 186


 7932 091e 01       		.byte	0x1
 7933 091f 7101     		.2byte	0x171
 7934 0921 97000000 		.4byte	0x97
 7935 0925 03       		.uleb128 0x3
 7936 0926 91       		.byte	0x91
 7937 0927 8E7B     		.sleb128 -626
 7938 0929 22       		.uleb128 0x22
 7939 092a 6D0F0000 		.4byte	.LASF170
 7940 092e 01       		.byte	0x1
 7941 092f 7101     		.2byte	0x171
 7942 0931 430A0000 		.4byte	0xa43
 7943 0935 03       		.uleb128 0x3
 7944 0936 91       		.byte	0x91
 7945 0937 887B     		.sleb128 -632
 7946 0939 22       		.uleb128 0x22
 7947 093a 380A0000 		.4byte	.LASF171
 7948 093e 01       		.byte	0x1
 7949 093f 7101     		.2byte	0x171
 7950 0941 4E0A0000 		.4byte	0xa4e
 7951 0945 03       		.uleb128 0x3
 7952 0946 91       		.byte	0x91
 7953 0947 847B     		.sleb128 -636
 7954 0949 22       		.uleb128 0x22
 7955 094a 1E0C0000 		.4byte	.LASF172
 7956 094e 01       		.byte	0x1
 7957 094f 7101     		.2byte	0x171
 7958 0951 97000000 		.4byte	0x97
 7959 0955 02       		.uleb128 0x2
 7960 0956 91       		.byte	0x91
 7961 0957 00       		.sleb128 0
 7962 0958 23       		.uleb128 0x23
 7963 0959 69647800 		.ascii	"idx\000"
 7964 095d 01       		.byte	0x1
 7965 095e 7301     		.2byte	0x173
 7966 0960 97000000 		.4byte	0x97
 7967 0964 02       		.uleb128 0x2
 7968 0965 91       		.byte	0x91
 7969 0966 5F       		.sleb128 -33
 7970 0967 1F       		.uleb128 0x1f
 7971 0968 A7090000 		.4byte	.LASF173
 7972 096c 01       		.byte	0x1
 7973 096d 7401     		.2byte	0x174
 7974 096f A7060000 		.4byte	0x6a7
 7975 0973 02       		.uleb128 0x2
 7976 0974 91       		.byte	0x91
 7977 0975 50       		.sleb128 -48
 7978 0976 1F       		.uleb128 0x1f
 7979 0977 12000000 		.4byte	.LASF174
 7980 097b 01       		.byte	0x1
 7981 097c 7501     		.2byte	0x175
 7982 097e 97000000 		.4byte	0x97
 7983 0982 02       		.uleb128 0x2
 7984 0983 91       		.byte	0x91
 7985 0984 5E       		.sleb128 -34
 7986 0985 1F       		.uleb128 0x1f
 7987 0986 E6100000 		.4byte	.LASF175
 7988 098a 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 187


 7989 098b 7601     		.2byte	0x176
 7990 098d 590A0000 		.4byte	0xa59
 7991 0991 03       		.uleb128 0x3
 7992 0992 91       		.byte	0x91
 7993 0993 C87D     		.sleb128 -312
 7994 0995 1F       		.uleb128 0x1f
 7995 0996 D6010000 		.4byte	.LASF176
 7996 099a 01       		.byte	0x1
 7997 099b 7701     		.2byte	0x177
 7998 099d 590A0000 		.4byte	0xa59
 7999 09a1 03       		.uleb128 0x3
 8000 09a2 91       		.byte	0x91
 8001 09a3 CC7B     		.sleb128 -564
 8002 09a5 1F       		.uleb128 0x1f
 8003 09a6 8B0F0000 		.4byte	.LASF177
 8004 09aa 01       		.byte	0x1
 8005 09ab 7901     		.2byte	0x179
 8006 09ad D3000000 		.4byte	0xd3
 8007 09b1 03       		.uleb128 0x3
 8008 09b2 91       		.byte	0x91
 8009 09b3 C87B     		.sleb128 -568
 8010 09b5 23       		.uleb128 0x23
 8011 09b6 6900     		.ascii	"i\000"
 8012 09b8 01       		.byte	0x1
 8013 09b9 7A01     		.2byte	0x17a
 8014 09bb 97000000 		.4byte	0x97
 8015 09bf 02       		.uleb128 0x2
 8016 09c0 91       		.byte	0x91
 8017 09c1 5D       		.sleb128 -35
 8018 09c2 23       		.uleb128 0x23
 8019 09c3 6A00     		.ascii	"j\000"
 8020 09c5 01       		.byte	0x1
 8021 09c6 7A01     		.2byte	0x17a
 8022 09c8 97000000 		.4byte	0x97
 8023 09cc 02       		.uleb128 0x2
 8024 09cd 91       		.byte	0x91
 8025 09ce 5C       		.sleb128 -36
 8026 09cf 1F       		.uleb128 0x1f
 8027 09d0 95090000 		.4byte	.LASF178
 8028 09d4 01       		.byte	0x1
 8029 09d5 7B01     		.2byte	0x17b
 8030 09d7 97000000 		.4byte	0x97
 8031 09db 02       		.uleb128 0x2
 8032 09dc 91       		.byte	0x91
 8033 09dd 5B       		.sleb128 -37
 8034 09de 1F       		.uleb128 0x1f
 8035 09df 670C0000 		.4byte	.LASF179
 8036 09e3 01       		.byte	0x1
 8037 09e4 7C01     		.2byte	0x17c
 8038 09e6 690A0000 		.4byte	0xa69
 8039 09ea 03       		.uleb128 0x3
 8040 09eb 91       		.byte	0x91
 8041 09ec 947B     		.sleb128 -620
 8042 09ee 1F       		.uleb128 0x1f
 8043 09ef 72070000 		.4byte	.LASF180
 8044 09f3 01       		.byte	0x1
 8045 09f4 7E01     		.2byte	0x17e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 188


 8046 09f6 A3000000 		.4byte	0xa3
 8047 09fa 02       		.uleb128 0x2
 8048 09fb 91       		.byte	0x91
 8049 09fc 4E       		.sleb128 -50
 8050 09fd 1F       		.uleb128 0x1f
 8051 09fe ED040000 		.4byte	.LASF181
 8052 0a02 01       		.byte	0x1
 8053 0a03 7F01     		.2byte	0x17f
 8054 0a05 790A0000 		.4byte	0xa79
 8055 0a09 03       		.uleb128 0x3
 8056 0a0a 91       		.byte	0x91
 8057 0a0b 44       		.sleb128 -60
 8058 0a0c 06       		.byte	0x6
 8059 0a0d 24       		.uleb128 0x24
 8060 0a0e E4000000 		.4byte	.LBB22
 8061 0a12 2C000000 		.4byte	.LBE22-.LBB22
 8062 0a16 290A0000 		.4byte	0xa29
 8063 0a1a 23       		.uleb128 0x23
 8064 0a1b 696900   		.ascii	"ii\000"
 8065 0a1e 01       		.byte	0x1
 8066 0a1f 8001     		.2byte	0x180
 8067 0a21 73000000 		.4byte	0x73
 8068 0a25 02       		.uleb128 0x2
 8069 0a26 91       		.byte	0x91
 8070 0a27 54       		.sleb128 -44
 8071 0a28 00       		.byte	0
 8072 0a29 1A       		.uleb128 0x1a
 8073 0a2a 2C010000 		.4byte	.LBB23
 8074 0a2e 80040000 		.4byte	.LBE23-.LBB23
 8075 0a32 23       		.uleb128 0x23
 8076 0a33 736F6400 		.ascii	"sod\000"
 8077 0a37 01       		.byte	0x1
 8078 0a38 8701     		.2byte	0x187
 8079 0a3a 97000000 		.4byte	0x97
 8080 0a3e 02       		.uleb128 0x2
 8081 0a3f 91       		.byte	0x91
 8082 0a40 43       		.sleb128 -61
 8083 0a41 00       		.byte	0
 8084 0a42 00       		.byte	0
 8085 0a43 07       		.uleb128 0x7
 8086 0a44 04       		.byte	0x4
 8087 0a45 490A0000 		.4byte	0xa49
 8088 0a49 08       		.uleb128 0x8
 8089 0a4a 31060000 		.4byte	0x631
 8090 0a4e 07       		.uleb128 0x7
 8091 0a4f 04       		.byte	0x4
 8092 0a50 540A0000 		.4byte	0xa54
 8093 0a54 08       		.uleb128 0x8
 8094 0a55 EC050000 		.4byte	0x5ec
 8095 0a59 0E       		.uleb128 0xe
 8096 0a5a ED000000 		.4byte	0xed
 8097 0a5e 690A0000 		.4byte	0xa69
 8098 0a62 0F       		.uleb128 0xf
 8099 0a63 0C010000 		.4byte	0x10c
 8100 0a67 F9       		.byte	0xf9
 8101 0a68 00       		.byte	0
 8102 0a69 0E       		.uleb128 0xe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 189


 8103 0a6a ED000000 		.4byte	0xed
 8104 0a6e 790A0000 		.4byte	0xa79
 8105 0a72 0F       		.uleb128 0xf
 8106 0a73 0C010000 		.4byte	0x10c
 8107 0a77 31       		.byte	0x31
 8108 0a78 00       		.byte	0
 8109 0a79 0E       		.uleb128 0xe
 8110 0a7a 97000000 		.4byte	0x97
 8111 0a7e 8C0A0000 		.4byte	0xa8c
 8112 0a82 25       		.uleb128 0x25
 8113 0a83 0C010000 		.4byte	0x10c
 8114 0a87 03       		.uleb128 0x3
 8115 0a88 91       		.byte	0x91
 8116 0a89 48       		.sleb128 -56
 8117 0a8a 06       		.byte	0x6
 8118 0a8b 00       		.byte	0
 8119 0a8c 1E       		.uleb128 0x1e
 8120 0a8d B80C0000 		.4byte	.LASF182
 8121 0a91 01       		.byte	0x1
 8122 0a92 F201     		.2byte	0x1f2
 8123 0a94 00000000 		.4byte	.LFB69
 8124 0a98 34070000 		.4byte	.LFE69-.LFB69
 8125 0a9c 01       		.uleb128 0x1
 8126 0a9d 9C       		.byte	0x9c
 8127 0a9e 720B0000 		.4byte	0xb72
 8128 0aa2 22       		.uleb128 0x22
 8129 0aa3 CF050000 		.4byte	.LASF183
 8130 0aa7 01       		.byte	0x1
 8131 0aa8 F201     		.2byte	0x1f2
 8132 0aaa A3000000 		.4byte	0xa3
 8133 0aae 03       		.uleb128 0x3
 8134 0aaf 91       		.byte	0x91
 8135 0ab0 AE7C     		.sleb128 -466
 8136 0ab2 22       		.uleb128 0x22
 8137 0ab3 1E0C0000 		.4byte	.LASF172
 8138 0ab7 01       		.byte	0x1
 8139 0ab8 F201     		.2byte	0x1f2
 8140 0aba 97000000 		.4byte	0x97
 8141 0abe 03       		.uleb128 0x3
 8142 0abf 91       		.byte	0x91
 8143 0ac0 AD7C     		.sleb128 -467
 8144 0ac2 23       		.uleb128 0x23
 8145 0ac3 6900     		.ascii	"i\000"
 8146 0ac5 01       		.byte	0x1
 8147 0ac6 F301     		.2byte	0x1f3
 8148 0ac8 97000000 		.4byte	0x97
 8149 0acc 02       		.uleb128 0x2
 8150 0acd 91       		.byte	0x91
 8151 0ace 6F       		.sleb128 -17
 8152 0acf 23       		.uleb128 0x23
 8153 0ad0 6A00     		.ascii	"j\000"
 8154 0ad2 01       		.byte	0x1
 8155 0ad3 F301     		.2byte	0x1f3
 8156 0ad5 97000000 		.4byte	0x97
 8157 0ad9 02       		.uleb128 0x2
 8158 0ada 91       		.byte	0x91
 8159 0adb 6E       		.sleb128 -18
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 190


 8160 0adc 1F       		.uleb128 0x1f
 8161 0add 64010000 		.4byte	.LASF184
 8162 0ae1 01       		.byte	0x1
 8163 0ae2 F501     		.2byte	0x1f5
 8164 0ae4 97000000 		.4byte	0x97
 8165 0ae8 02       		.uleb128 0x2
 8166 0ae9 91       		.byte	0x91
 8167 0aea 65       		.sleb128 -27
 8168 0aeb 1F       		.uleb128 0x1f
 8169 0aec 93020000 		.4byte	.LASF185
 8170 0af0 01       		.byte	0x1
 8171 0af1 F801     		.2byte	0x1f8
 8172 0af3 720B0000 		.4byte	0xb72
 8173 0af7 02       		.uleb128 0x2
 8174 0af8 91       		.byte	0x91
 8175 0af9 68       		.sleb128 -24
 8176 0afa 1F       		.uleb128 0x1f
 8177 0afb 2D050000 		.4byte	.LASF44
 8178 0aff 01       		.byte	0x1
 8179 0b00 FE01     		.2byte	0x1fe
 8180 0b02 EC050000 		.4byte	0x5ec
 8181 0b06 03       		.uleb128 0x3
 8182 0b07 91       		.byte	0x91
 8183 0b08 B87F     		.sleb128 -72
 8184 0b0a 1F       		.uleb128 0x1f
 8185 0b0b 380A0000 		.4byte	.LASF171
 8186 0b0f 01       		.byte	0x1
 8187 0b10 0102     		.2byte	0x201
 8188 0b12 880B0000 		.4byte	0xb88
 8189 0b16 03       		.uleb128 0x3
 8190 0b17 91       		.byte	0x91
 8191 0b18 B47E     		.sleb128 -204
 8192 0b1a 1F       		.uleb128 0x1f
 8193 0b1b CF000000 		.4byte	.LASF186
 8194 0b1f 01       		.byte	0x1
 8195 0b20 0902     		.2byte	0x209
 8196 0b22 97000000 		.4byte	0x97
 8197 0b26 02       		.uleb128 0x2
 8198 0b27 91       		.byte	0x91
 8199 0b28 67       		.sleb128 -25
 8200 0b29 1F       		.uleb128 0x1f
 8201 0b2a D40F0000 		.4byte	.LASF187
 8202 0b2e 01       		.byte	0x1
 8203 0b2f 0B02     		.2byte	0x20b
 8204 0b31 31060000 		.4byte	0x631
 8205 0b35 03       		.uleb128 0x3
 8206 0b36 91       		.byte	0x91
 8207 0b37 A47E     		.sleb128 -220
 8208 0b39 1F       		.uleb128 0x1f
 8209 0b3a 6D0F0000 		.4byte	.LASF170
 8210 0b3e 01       		.byte	0x1
 8211 0b3f 0D02     		.2byte	0x20d
 8212 0b41 9D0B0000 		.4byte	0xb9d
 8213 0b45 03       		.uleb128 0x3
 8214 0b46 91       		.byte	0x91
 8215 0b47 B47C     		.sleb128 -460
 8216 0b49 1F       		.uleb128 0x1f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 191


 8217 0b4a DA0E0000 		.4byte	.LASF188
 8218 0b4e 01       		.byte	0x1
 8219 0b4f 2002     		.2byte	0x220
 8220 0b51 97000000 		.4byte	0x97
 8221 0b55 02       		.uleb128 0x2
 8222 0b56 91       		.byte	0x91
 8223 0b57 66       		.sleb128 -26
 8224 0b58 1A       		.uleb128 0x1a
 8225 0b59 94050000 		.4byte	.LBB24
 8226 0b5d 7E010000 		.4byte	.LBE24-.LBB24
 8227 0b61 23       		.uleb128 0x23
 8228 0b62 736F6400 		.ascii	"sod\000"
 8229 0b66 01       		.byte	0x1
 8230 0b67 3102     		.2byte	0x231
 8231 0b69 97000000 		.4byte	0x97
 8232 0b6d 02       		.uleb128 0x2
 8233 0b6e 91       		.byte	0x91
 8234 0b6f 64       		.sleb128 -28
 8235 0b70 00       		.byte	0
 8236 0b71 00       		.byte	0
 8237 0b72 07       		.uleb128 0x7
 8238 0b73 04       		.byte	0x4
 8239 0b74 7D050000 		.4byte	0x57d
 8240 0b78 0E       		.uleb128 0xe
 8241 0b79 540A0000 		.4byte	0xa54
 8242 0b7d 880B0000 		.4byte	0xb88
 8243 0b81 0F       		.uleb128 0xf
 8244 0b82 0C010000 		.4byte	0x10c
 8245 0b86 02       		.byte	0x2
 8246 0b87 00       		.byte	0
 8247 0b88 08       		.uleb128 0x8
 8248 0b89 780B0000 		.4byte	0xb78
 8249 0b8d 0E       		.uleb128 0xe
 8250 0b8e 490A0000 		.4byte	0xa49
 8251 0b92 9D0B0000 		.4byte	0xb9d
 8252 0b96 0F       		.uleb128 0xf
 8253 0b97 0C010000 		.4byte	0x10c
 8254 0b9b 0E       		.byte	0xe
 8255 0b9c 00       		.byte	0
 8256 0b9d 08       		.uleb128 0x8
 8257 0b9e 8D0B0000 		.4byte	0xb8d
 8258 0ba2 1E       		.uleb128 0x1e
 8259 0ba3 1F030000 		.4byte	.LASF189
 8260 0ba7 01       		.byte	0x1
 8261 0ba8 5202     		.2byte	0x252
 8262 0baa 00000000 		.4byte	.LFB70
 8263 0bae 34010000 		.4byte	.LFE70-.LFB70
 8264 0bb2 01       		.uleb128 0x1
 8265 0bb3 9C       		.byte	0x9c
 8266 0bb4 000C0000 		.4byte	0xc00
 8267 0bb8 22       		.uleb128 0x22
 8268 0bb9 CF050000 		.4byte	.LASF183
 8269 0bbd 01       		.byte	0x1
 8270 0bbe 5202     		.2byte	0x252
 8271 0bc0 A3000000 		.4byte	0xa3
 8272 0bc4 02       		.uleb128 0x2
 8273 0bc5 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 192


 8274 0bc6 6E       		.sleb128 -18
 8275 0bc7 22       		.uleb128 0x22
 8276 0bc8 6D0F0000 		.4byte	.LASF170
 8277 0bcc 01       		.byte	0x1
 8278 0bcd 5202     		.2byte	0x252
 8279 0bcf 430A0000 		.4byte	0xa43
 8280 0bd3 02       		.uleb128 0x2
 8281 0bd4 91       		.byte	0x91
 8282 0bd5 68       		.sleb128 -24
 8283 0bd6 23       		.uleb128 0x23
 8284 0bd7 736F6400 		.ascii	"sod\000"
 8285 0bdb 01       		.byte	0x1
 8286 0bdc 5302     		.2byte	0x253
 8287 0bde 97000000 		.4byte	0x97
 8288 0be2 02       		.uleb128 0x2
 8289 0be3 91       		.byte	0x91
 8290 0be4 75       		.sleb128 -11
 8291 0be5 23       		.uleb128 0x23
 8292 0be6 6900     		.ascii	"i\000"
 8293 0be8 01       		.byte	0x1
 8294 0be9 5502     		.2byte	0x255
 8295 0beb 97000000 		.4byte	0x97
 8296 0bef 02       		.uleb128 0x2
 8297 0bf0 91       		.byte	0x91
 8298 0bf1 77       		.sleb128 -9
 8299 0bf2 23       		.uleb128 0x23
 8300 0bf3 6A00     		.ascii	"j\000"
 8301 0bf5 01       		.byte	0x1
 8302 0bf6 5502     		.2byte	0x255
 8303 0bf8 97000000 		.4byte	0x97
 8304 0bfc 02       		.uleb128 0x2
 8305 0bfd 91       		.byte	0x91
 8306 0bfe 76       		.sleb128 -10
 8307 0bff 00       		.byte	0
 8308 0c00 26       		.uleb128 0x26
 8309 0c01 CD070000 		.4byte	.LASF190
 8310 0c05 01       		.byte	0x1
 8311 0c06 7902     		.2byte	0x279
 8312 0c08 00000000 		.4byte	.LFB71
 8313 0c0c 14000000 		.4byte	.LFE71-.LFB71
 8314 0c10 01       		.uleb128 0x1
 8315 0c11 9C       		.byte	0x9c
 8316 0c12 260C0000 		.4byte	0xc26
 8317 0c16 22       		.uleb128 0x22
 8318 0c17 CF050000 		.4byte	.LASF183
 8319 0c1b 01       		.byte	0x1
 8320 0c1c 7902     		.2byte	0x279
 8321 0c1e A3000000 		.4byte	0xa3
 8322 0c22 02       		.uleb128 0x2
 8323 0c23 91       		.byte	0x91
 8324 0c24 76       		.sleb128 -10
 8325 0c25 00       		.byte	0
 8326 0c26 27       		.uleb128 0x27
 8327 0c27 73020000 		.4byte	.LASF228
 8328 0c2b 01       		.byte	0x1
 8329 0c2c 8102     		.2byte	0x281
 8330 0c2e 00000000 		.4byte	.LFB72
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 193


 8331 0c32 0C000000 		.4byte	.LFE72-.LFB72
 8332 0c36 01       		.uleb128 0x1
 8333 0c37 9C       		.byte	0x9c
 8334 0c38 1E       		.uleb128 0x1e
 8335 0c39 810C0000 		.4byte	.LASF191
 8336 0c3d 01       		.byte	0x1
 8337 0c3e 8602     		.2byte	0x286
 8338 0c40 00000000 		.4byte	.LFB73
 8339 0c44 E8030000 		.4byte	.LFE73-.LFB73
 8340 0c48 01       		.uleb128 0x1
 8341 0c49 9C       		.byte	0x9c
 8342 0c4a 840D0000 		.4byte	0xd84
 8343 0c4e 22       		.uleb128 0x22
 8344 0c4f CE0B0000 		.4byte	.LASF168
 8345 0c53 01       		.byte	0x1
 8346 0c54 8602     		.2byte	0x286
 8347 0c56 97000000 		.4byte	0x97
 8348 0c5a 03       		.uleb128 0x3
 8349 0c5b 91       		.byte	0x91
 8350 0c5c 976B     		.sleb128 -2665
 8351 0c5e 22       		.uleb128 0x22
 8352 0c5f F70C0000 		.4byte	.LASF169
 8353 0c63 01       		.byte	0x1
 8354 0c64 8602     		.2byte	0x286
 8355 0c66 97000000 		.4byte	0x97
 8356 0c6a 03       		.uleb128 0x3
 8357 0c6b 91       		.byte	0x91
 8358 0c6c 966B     		.sleb128 -2666
 8359 0c6e 22       		.uleb128 0x22
 8360 0c6f 6D0F0000 		.4byte	.LASF170
 8361 0c73 01       		.byte	0x1
 8362 0c74 8602     		.2byte	0x286
 8363 0c76 430A0000 		.4byte	0xa43
 8364 0c7a 03       		.uleb128 0x3
 8365 0c7b 91       		.byte	0x91
 8366 0c7c 906B     		.sleb128 -2672
 8367 0c7e 22       		.uleb128 0x22
 8368 0c7f 380A0000 		.4byte	.LASF171
 8369 0c83 01       		.byte	0x1
 8370 0c84 8602     		.2byte	0x286
 8371 0c86 4E0A0000 		.4byte	0xa4e
 8372 0c8a 03       		.uleb128 0x3
 8373 0c8b 91       		.byte	0x91
 8374 0c8c 8C6B     		.sleb128 -2676
 8375 0c8e 1F       		.uleb128 0x1f
 8376 0c8f C20B0000 		.4byte	.LASF192
 8377 0c93 01       		.byte	0x1
 8378 0c94 8802     		.2byte	0x288
 8379 0c96 840D0000 		.4byte	0xd84
 8380 0c9a 03       		.uleb128 0x3
 8381 0c9b 91       		.byte	0x91
 8382 0c9c 806C     		.sleb128 -2560
 8383 0c9e 23       		.uleb128 0x23
 8384 0c9f 6900     		.ascii	"i\000"
 8385 0ca1 01       		.byte	0x1
 8386 0ca2 8902     		.2byte	0x289
 8387 0ca4 73000000 		.4byte	0x73
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 194


 8388 0ca8 02       		.uleb128 0x2
 8389 0ca9 91       		.byte	0x91
 8390 0caa 6C       		.sleb128 -20
 8391 0cab 23       		.uleb128 0x23
 8392 0cac 69647800 		.ascii	"idx\000"
 8393 0cb0 01       		.byte	0x1
 8394 0cb1 8A02     		.2byte	0x28a
 8395 0cb3 73000000 		.4byte	0x73
 8396 0cb7 02       		.uleb128 0x2
 8397 0cb8 91       		.byte	0x91
 8398 0cb9 68       		.sleb128 -24
 8399 0cba 1F       		.uleb128 0x1f
 8400 0cbb 8B0F0000 		.4byte	.LASF177
 8401 0cbf 01       		.byte	0x1
 8402 0cc0 8B02     		.2byte	0x28b
 8403 0cc2 D3000000 		.4byte	0xd3
 8404 0cc6 02       		.uleb128 0x2
 8405 0cc7 91       		.byte	0x91
 8406 0cc8 48       		.sleb128 -56
 8407 0cc9 1F       		.uleb128 0x1f
 8408 0cca 0C0C0000 		.4byte	.LASF193
 8409 0cce 01       		.byte	0x1
 8410 0ccf 8C02     		.2byte	0x28c
 8411 0cd1 AF000000 		.4byte	0xaf
 8412 0cd5 02       		.uleb128 0x2
 8413 0cd6 91       		.byte	0x91
 8414 0cd7 4C       		.sleb128 -52
 8415 0cd8 1F       		.uleb128 0x1f
 8416 0cd9 630F0000 		.4byte	.LASF194
 8417 0cdd 01       		.byte	0x1
 8418 0cde 8D02     		.2byte	0x28d
 8419 0ce0 DF000000 		.4byte	0xdf
 8420 0ce4 02       		.uleb128 0x2
 8421 0ce5 91       		.byte	0x91
 8422 0ce6 44       		.sleb128 -60
 8423 0ce7 1F       		.uleb128 0x1f
 8424 0ce8 CA0C0000 		.4byte	.LASF195
 8425 0cec 01       		.byte	0x1
 8426 0ced 8E02     		.2byte	0x28e
 8427 0cef 97000000 		.4byte	0x97
 8428 0cf3 02       		.uleb128 0x2
 8429 0cf4 91       		.byte	0x91
 8430 0cf5 57       		.sleb128 -41
 8431 0cf6 1F       		.uleb128 0x1f
 8432 0cf7 65090000 		.4byte	.LASF196
 8433 0cfb 01       		.byte	0x1
 8434 0cfc 8F02     		.2byte	0x28f
 8435 0cfe BB000000 		.4byte	0xbb
 8436 0d02 02       		.uleb128 0x2
 8437 0d03 91       		.byte	0x91
 8438 0d04 56       		.sleb128 -42
 8439 0d05 1F       		.uleb128 0x1f
 8440 0d06 B40E0000 		.4byte	.LASF197
 8441 0d0a 01       		.byte	0x1
 8442 0d0b 9002     		.2byte	0x290
 8443 0d0d C7000000 		.4byte	0xc7
 8444 0d11 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 195


 8445 0d12 91       		.byte	0x91
 8446 0d13 54       		.sleb128 -44
 8447 0d14 1F       		.uleb128 0x1f
 8448 0d15 E40A0000 		.4byte	.LASF198
 8449 0d19 01       		.byte	0x1
 8450 0d1a 9102     		.2byte	0x291
 8451 0d1c A3000000 		.4byte	0xa3
 8452 0d20 02       		.uleb128 0x2
 8453 0d21 91       		.byte	0x91
 8454 0d22 52       		.sleb128 -46
 8455 0d23 1F       		.uleb128 0x1f
 8456 0d24 93020000 		.4byte	.LASF185
 8457 0d28 01       		.byte	0x1
 8458 0d29 9202     		.2byte	0x292
 8459 0d2b 720B0000 		.4byte	0xb72
 8460 0d2f 02       		.uleb128 0x2
 8461 0d30 91       		.byte	0x91
 8462 0d31 64       		.sleb128 -28
 8463 0d32 1A       		.uleb128 0x1a
 8464 0d33 54000000 		.4byte	.LBB25
 8465 0d37 76030000 		.4byte	.LBE25-.LBB25
 8466 0d3b 1F       		.uleb128 0x1f
 8467 0d3c A7090000 		.4byte	.LASF173
 8468 0d40 01       		.byte	0x1
 8469 0d41 9502     		.2byte	0x295
 8470 0d43 A7060000 		.4byte	0x6a7
 8471 0d47 02       		.uleb128 0x2
 8472 0d48 91       		.byte	0x91
 8473 0d49 60       		.sleb128 -32
 8474 0d4a 1F       		.uleb128 0x1f
 8475 0d4b 5E010000 		.4byte	.LASF199
 8476 0d4f 01       		.byte	0x1
 8477 0d50 9602     		.2byte	0x296
 8478 0d52 A7060000 		.4byte	0x6a7
 8479 0d56 02       		.uleb128 0x2
 8480 0d57 91       		.byte	0x91
 8481 0d58 58       		.sleb128 -40
 8482 0d59 23       		.uleb128 0x23
 8483 0d5a 73747200 		.ascii	"str\000"
 8484 0d5e 01       		.byte	0x1
 8485 0d5f 9702     		.2byte	0x297
 8486 0d61 950D0000 		.4byte	0xd95
 8487 0d65 03       		.uleb128 0x3
 8488 0d66 91       		.byte	0x91
 8489 0d67 9C6B     		.sleb128 -2660
 8490 0d69 1A       		.uleb128 0x1a
 8491 0d6a A2000000 		.4byte	.LBB26
 8492 0d6e DE020000 		.4byte	.LBE26-.LBB26
 8493 0d72 23       		.uleb128 0x23
 8494 0d73 736F6400 		.ascii	"sod\000"
 8495 0d77 01       		.byte	0x1
 8496 0d78 A002     		.2byte	0x2a0
 8497 0d7a 97000000 		.4byte	0x97
 8498 0d7e 02       		.uleb128 0x2
 8499 0d7f 91       		.byte	0x91
 8500 0d80 5F       		.sleb128 -33
 8501 0d81 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 196


 8502 0d82 00       		.byte	0
 8503 0d83 00       		.byte	0
 8504 0d84 0E       		.uleb128 0xe
 8505 0d85 ED000000 		.4byte	0xed
 8506 0d89 950D0000 		.4byte	0xd95
 8507 0d8d 20       		.uleb128 0x20
 8508 0d8e 0C010000 		.4byte	0x10c
 8509 0d92 C309     		.2byte	0x9c3
 8510 0d94 00       		.byte	0
 8511 0d95 0E       		.uleb128 0xe
 8512 0d96 ED000000 		.4byte	0xed
 8513 0d9a A50D0000 		.4byte	0xda5
 8514 0d9e 0F       		.uleb128 0xf
 8515 0d9f 0C010000 		.4byte	0x10c
 8516 0da3 63       		.byte	0x63
 8517 0da4 00       		.byte	0
 8518 0da5 1E       		.uleb128 0x1e
 8519 0da6 BA000000 		.4byte	.LASF200
 8520 0daa 01       		.byte	0x1
 8521 0dab EE02     		.2byte	0x2ee
 8522 0dad 00000000 		.4byte	.LFB74
 8523 0db1 E0010000 		.4byte	.LFE74-.LFB74
 8524 0db5 01       		.uleb128 0x1
 8525 0db6 9C       		.byte	0x9c
 8526 0db7 020E0000 		.4byte	0xe02
 8527 0dbb 22       		.uleb128 0x22
 8528 0dbc C20B0000 		.4byte	.LASF192
 8529 0dc0 01       		.byte	0x1
 8530 0dc1 EE02     		.2byte	0x2ee
 8531 0dc3 13010000 		.4byte	0x113
 8532 0dc7 03       		.uleb128 0x3
 8533 0dc8 91       		.byte	0x91
 8534 0dc9 F47E     		.sleb128 -140
 8535 0dcb 23       		.uleb128 0x23
 8536 0dcc 6900     		.ascii	"i\000"
 8537 0dce 01       		.byte	0x1
 8538 0dcf F002     		.2byte	0x2f0
 8539 0dd1 73000000 		.4byte	0x73
 8540 0dd5 02       		.uleb128 0x2
 8541 0dd6 91       		.byte	0x91
 8542 0dd7 64       		.sleb128 -28
 8543 0dd8 1F       		.uleb128 0x1f
 8544 0dd9 93020000 		.4byte	.LASF185
 8545 0ddd 01       		.byte	0x1
 8546 0dde F102     		.2byte	0x2f1
 8547 0de0 720B0000 		.4byte	0xb72
 8548 0de4 02       		.uleb128 0x2
 8549 0de5 91       		.byte	0x91
 8550 0de6 60       		.sleb128 -32
 8551 0de7 1A       		.uleb128 0x1a
 8552 0de8 20000000 		.4byte	.LBB27
 8553 0dec 7E010000 		.4byte	.LBE27-.LBB27
 8554 0df0 23       		.uleb128 0x23
 8555 0df1 73747200 		.ascii	"str\000"
 8556 0df5 01       		.byte	0x1
 8557 0df6 F502     		.2byte	0x2f5
 8558 0df8 950D0000 		.4byte	0xd95
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 197


 8559 0dfc 03       		.uleb128 0x3
 8560 0dfd 91       		.byte	0x91
 8561 0dfe FC7E     		.sleb128 -132
 8562 0e00 00       		.byte	0
 8563 0e01 00       		.byte	0
 8564 0e02 26       		.uleb128 0x26
 8565 0e03 240D0000 		.4byte	.LASF201
 8566 0e07 01       		.byte	0x1
 8567 0e08 1203     		.2byte	0x312
 8568 0e0a 00000000 		.4byte	.LFB75
 8569 0e0e 12000000 		.4byte	.LFE75-.LFB75
 8570 0e12 01       		.uleb128 0x1
 8571 0e13 9C       		.byte	0x9c
 8572 0e14 280E0000 		.4byte	0xe28
 8573 0e18 22       		.uleb128 0x22
 8574 0e19 C20B0000 		.4byte	.LASF192
 8575 0e1d 01       		.byte	0x1
 8576 0e1e 1203     		.2byte	0x312
 8577 0e20 13010000 		.4byte	0x113
 8578 0e24 02       		.uleb128 0x2
 8579 0e25 91       		.byte	0x91
 8580 0e26 74       		.sleb128 -12
 8581 0e27 00       		.byte	0
 8582 0e28 26       		.uleb128 0x26
 8583 0e29 C80A0000 		.4byte	.LASF202
 8584 0e2d 01       		.byte	0x1
 8585 0e2e 1A03     		.2byte	0x31a
 8586 0e30 00000000 		.4byte	.LFB76
 8587 0e34 12000000 		.4byte	.LFE76-.LFB76
 8588 0e38 01       		.uleb128 0x1
 8589 0e39 9C       		.byte	0x9c
 8590 0e3a 4E0E0000 		.4byte	0xe4e
 8591 0e3e 22       		.uleb128 0x22
 8592 0e3f C20B0000 		.4byte	.LASF192
 8593 0e43 01       		.byte	0x1
 8594 0e44 1A03     		.2byte	0x31a
 8595 0e46 13010000 		.4byte	0x113
 8596 0e4a 02       		.uleb128 0x2
 8597 0e4b 91       		.byte	0x91
 8598 0e4c 74       		.sleb128 -12
 8599 0e4d 00       		.byte	0
 8600 0e4e 26       		.uleb128 0x26
 8601 0e4f 0E0D0000 		.4byte	.LASF203
 8602 0e53 01       		.byte	0x1
 8603 0e54 2203     		.2byte	0x322
 8604 0e56 00000000 		.4byte	.LFB77
 8605 0e5a 12000000 		.4byte	.LFE77-.LFB77
 8606 0e5e 01       		.uleb128 0x1
 8607 0e5f 9C       		.byte	0x9c
 8608 0e60 740E0000 		.4byte	0xe74
 8609 0e64 22       		.uleb128 0x22
 8610 0e65 C20B0000 		.4byte	.LASF192
 8611 0e69 01       		.byte	0x1
 8612 0e6a 2203     		.2byte	0x322
 8613 0e6c 13010000 		.4byte	0x113
 8614 0e70 02       		.uleb128 0x2
 8615 0e71 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 198


 8616 0e72 74       		.sleb128 -12
 8617 0e73 00       		.byte	0
 8618 0e74 26       		.uleb128 0x26
 8619 0e75 DB090000 		.4byte	.LASF204
 8620 0e79 01       		.byte	0x1
 8621 0e7a 2A03     		.2byte	0x32a
 8622 0e7c 00000000 		.4byte	.LFB78
 8623 0e80 12000000 		.4byte	.LFE78-.LFB78
 8624 0e84 01       		.uleb128 0x1
 8625 0e85 9C       		.byte	0x9c
 8626 0e86 9A0E0000 		.4byte	0xe9a
 8627 0e8a 22       		.uleb128 0x22
 8628 0e8b C20B0000 		.4byte	.LASF192
 8629 0e8f 01       		.byte	0x1
 8630 0e90 2A03     		.2byte	0x32a
 8631 0e92 13010000 		.4byte	0x113
 8632 0e96 02       		.uleb128 0x2
 8633 0e97 91       		.byte	0x91
 8634 0e98 74       		.sleb128 -12
 8635 0e99 00       		.byte	0
 8636 0e9a 26       		.uleb128 0x26
 8637 0e9b 390D0000 		.4byte	.LASF205
 8638 0e9f 01       		.byte	0x1
 8639 0ea0 3103     		.2byte	0x331
 8640 0ea2 00000000 		.4byte	.LFB79
 8641 0ea6 12000000 		.4byte	.LFE79-.LFB79
 8642 0eaa 01       		.uleb128 0x1
 8643 0eab 9C       		.byte	0x9c
 8644 0eac C00E0000 		.4byte	0xec0
 8645 0eb0 22       		.uleb128 0x22
 8646 0eb1 C20B0000 		.4byte	.LASF192
 8647 0eb5 01       		.byte	0x1
 8648 0eb6 3103     		.2byte	0x331
 8649 0eb8 13010000 		.4byte	0x113
 8650 0ebc 02       		.uleb128 0x2
 8651 0ebd 91       		.byte	0x91
 8652 0ebe 74       		.sleb128 -12
 8653 0ebf 00       		.byte	0
 8654 0ec0 26       		.uleb128 0x26
 8655 0ec1 BA020000 		.4byte	.LASF206
 8656 0ec5 01       		.byte	0x1
 8657 0ec6 3903     		.2byte	0x339
 8658 0ec8 00000000 		.4byte	.LFB80
 8659 0ecc 12000000 		.4byte	.LFE80-.LFB80
 8660 0ed0 01       		.uleb128 0x1
 8661 0ed1 9C       		.byte	0x9c
 8662 0ed2 E60E0000 		.4byte	0xee6
 8663 0ed6 22       		.uleb128 0x22
 8664 0ed7 C20B0000 		.4byte	.LASF192
 8665 0edb 01       		.byte	0x1
 8666 0edc 3903     		.2byte	0x339
 8667 0ede 13010000 		.4byte	0x113
 8668 0ee2 02       		.uleb128 0x2
 8669 0ee3 91       		.byte	0x91
 8670 0ee4 74       		.sleb128 -12
 8671 0ee5 00       		.byte	0
 8672 0ee6 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 199


 8673 0ee7 C5100000 		.4byte	.LASF207
 8674 0eeb 01       		.byte	0x1
 8675 0eec 4203     		.2byte	0x342
 8676 0eee 00000000 		.4byte	.LFB81
 8677 0ef2 12000000 		.4byte	.LFE81-.LFB81
 8678 0ef6 01       		.uleb128 0x1
 8679 0ef7 9C       		.byte	0x9c
 8680 0ef8 0C0F0000 		.4byte	0xf0c
 8681 0efc 22       		.uleb128 0x22
 8682 0efd C20B0000 		.4byte	.LASF192
 8683 0f01 01       		.byte	0x1
 8684 0f02 4203     		.2byte	0x342
 8685 0f04 13010000 		.4byte	0x113
 8686 0f08 02       		.uleb128 0x2
 8687 0f09 91       		.byte	0x91
 8688 0f0a 74       		.sleb128 -12
 8689 0f0b 00       		.byte	0
 8690 0f0c 1E       		.uleb128 0x1e
 8691 0f0d A70C0000 		.4byte	.LASF208
 8692 0f11 01       		.byte	0x1
 8693 0f12 4A03     		.2byte	0x34a
 8694 0f14 00000000 		.4byte	.LFB82
 8695 0f18 84000000 		.4byte	.LFE82-.LFB82
 8696 0f1c 01       		.uleb128 0x1
 8697 0f1d 9C       		.byte	0x9c
 8698 0f1e 5F0F0000 		.4byte	0xf5f
 8699 0f22 22       		.uleb128 0x22
 8700 0f23 ED040000 		.4byte	.LASF181
 8701 0f27 01       		.byte	0x1
 8702 0f28 4A03     		.2byte	0x34a
 8703 0f2a A7060000 		.4byte	0x6a7
 8704 0f2e 02       		.uleb128 0x2
 8705 0f2f 91       		.byte	0x91
 8706 0f30 6C       		.sleb128 -20
 8707 0f31 22       		.uleb128 0x22
 8708 0f32 72070000 		.4byte	.LASF180
 8709 0f36 01       		.byte	0x1
 8710 0f37 4A03     		.2byte	0x34a
 8711 0f39 A3000000 		.4byte	0xa3
 8712 0f3d 02       		.uleb128 0x2
 8713 0f3e 91       		.byte	0x91
 8714 0f3f 6A       		.sleb128 -22
 8715 0f40 22       		.uleb128 0x22
 8716 0f41 570D0000 		.4byte	.LASF209
 8717 0f45 01       		.byte	0x1
 8718 0f46 4A03     		.2byte	0x34a
 8719 0f48 97000000 		.4byte	0x97
 8720 0f4c 02       		.uleb128 0x2
 8721 0f4d 91       		.byte	0x91
 8722 0f4e 69       		.sleb128 -23
 8723 0f4f 1F       		.uleb128 0x1f
 8724 0f50 CF050000 		.4byte	.LASF183
 8725 0f54 01       		.byte	0x1
 8726 0f55 4C03     		.2byte	0x34c
 8727 0f57 A3000000 		.4byte	0xa3
 8728 0f5b 02       		.uleb128 0x2
 8729 0f5c 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 200


 8730 0f5d 76       		.sleb128 -10
 8731 0f5e 00       		.byte	0
 8732 0f5f 1E       		.uleb128 0x1e
 8733 0f60 03050000 		.4byte	.LASF210
 8734 0f64 01       		.byte	0x1
 8735 0f65 6603     		.2byte	0x366
 8736 0f67 00000000 		.4byte	.LFB83
 8737 0f6b 88000000 		.4byte	.LFE83-.LFB83
 8738 0f6f 01       		.uleb128 0x1
 8739 0f70 9C       		.byte	0x9c
 8740 0f71 A30F0000 		.4byte	0xfa3
 8741 0f75 22       		.uleb128 0x22
 8742 0f76 ED040000 		.4byte	.LASF181
 8743 0f7a 01       		.byte	0x1
 8744 0f7b 6603     		.2byte	0x366
 8745 0f7d A7060000 		.4byte	0x6a7
 8746 0f81 02       		.uleb128 0x2
 8747 0f82 91       		.byte	0x91
 8748 0f83 6C       		.sleb128 -20
 8749 0f84 22       		.uleb128 0x22
 8750 0f85 72070000 		.4byte	.LASF180
 8751 0f89 01       		.byte	0x1
 8752 0f8a 6603     		.2byte	0x366
 8753 0f8c A3000000 		.4byte	0xa3
 8754 0f90 02       		.uleb128 0x2
 8755 0f91 91       		.byte	0x91
 8756 0f92 6A       		.sleb128 -22
 8757 0f93 1F       		.uleb128 0x1f
 8758 0f94 CF050000 		.4byte	.LASF183
 8759 0f98 01       		.byte	0x1
 8760 0f99 6803     		.2byte	0x368
 8761 0f9b A3000000 		.4byte	0xa3
 8762 0f9f 02       		.uleb128 0x2
 8763 0fa0 91       		.byte	0x91
 8764 0fa1 76       		.sleb128 -10
 8765 0fa2 00       		.byte	0
 8766 0fa3 1E       		.uleb128 0x1e
 8767 0fa4 560A0000 		.4byte	.LASF211
 8768 0fa8 01       		.byte	0x1
 8769 0fa9 8303     		.2byte	0x383
 8770 0fab 00000000 		.4byte	.LFB84
 8771 0faf A0000000 		.4byte	.LFE84-.LFB84
 8772 0fb3 01       		.uleb128 0x1
 8773 0fb4 9C       		.byte	0x9c
 8774 0fb5 F60F0000 		.4byte	0xff6
 8775 0fb9 22       		.uleb128 0x22
 8776 0fba ED040000 		.4byte	.LASF181
 8777 0fbe 01       		.byte	0x1
 8778 0fbf 8303     		.2byte	0x383
 8779 0fc1 A7060000 		.4byte	0x6a7
 8780 0fc5 02       		.uleb128 0x2
 8781 0fc6 91       		.byte	0x91
 8782 0fc7 74       		.sleb128 -12
 8783 0fc8 22       		.uleb128 0x22
 8784 0fc9 72070000 		.4byte	.LASF180
 8785 0fcd 01       		.byte	0x1
 8786 0fce 8303     		.2byte	0x383
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 201


 8787 0fd0 A3000000 		.4byte	0xa3
 8788 0fd4 02       		.uleb128 0x2
 8789 0fd5 91       		.byte	0x91
 8790 0fd6 72       		.sleb128 -14
 8791 0fd7 28       		.uleb128 0x28
 8792 0fd8 696400   		.ascii	"id\000"
 8793 0fdb 01       		.byte	0x1
 8794 0fdc 8303     		.2byte	0x383
 8795 0fde 97000000 		.4byte	0x97
 8796 0fe2 02       		.uleb128 0x2
 8797 0fe3 91       		.byte	0x91
 8798 0fe4 71       		.sleb128 -15
 8799 0fe5 23       		.uleb128 0x23
 8800 0fe6 6900     		.ascii	"i\000"
 8801 0fe8 01       		.byte	0x1
 8802 0fe9 8503     		.2byte	0x385
 8803 0feb A3000000 		.4byte	0xa3
 8804 0fef 05       		.uleb128 0x5
 8805 0ff0 03       		.byte	0x3
 8806 0ff1 00000000 		.4byte	i.10024
 8807 0ff5 00       		.byte	0
 8808 0ff6 21       		.uleb128 0x21
 8809 0ff7 E90F0000 		.4byte	.LASF213
 8810 0ffb 01       		.byte	0x1
 8811 0ffc A103     		.2byte	0x3a1
 8812 0ffe 97000000 		.4byte	0x97
 8813 1002 00000000 		.4byte	.LFB85
 8814 1006 3E000000 		.4byte	.LFE85-.LFB85
 8815 100a 01       		.uleb128 0x1
 8816 100b 9C       		.byte	0x9c
 8817 100c 4B100000 		.4byte	0x104b
 8818 1010 22       		.uleb128 0x22
 8819 1011 B4090000 		.4byte	.LASF214
 8820 1015 01       		.byte	0x1
 8821 1016 A103     		.2byte	0x3a1
 8822 1018 A7060000 		.4byte	0x6a7
 8823 101c 02       		.uleb128 0x2
 8824 101d 91       		.byte	0x91
 8825 101e 6C       		.sleb128 -20
 8826 101f 22       		.uleb128 0x22
 8827 1020 B4040000 		.4byte	.LASF215
 8828 1024 01       		.byte	0x1
 8829 1025 A103     		.2byte	0x3a1
 8830 1027 97000000 		.4byte	0x97
 8831 102b 02       		.uleb128 0x2
 8832 102c 91       		.byte	0x91
 8833 102d 6B       		.sleb128 -21
 8834 102e 23       		.uleb128 0x23
 8835 102f 6900     		.ascii	"i\000"
 8836 1031 01       		.byte	0x1
 8837 1032 A303     		.2byte	0x3a3
 8838 1034 97000000 		.4byte	0x97
 8839 1038 02       		.uleb128 0x2
 8840 1039 91       		.byte	0x91
 8841 103a 77       		.sleb128 -9
 8842 103b 1F       		.uleb128 0x1f
 8843 103c 660B0000 		.4byte	.LASF216
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 202


 8844 1040 01       		.byte	0x1
 8845 1041 A403     		.2byte	0x3a4
 8846 1043 97000000 		.4byte	0x97
 8847 1047 02       		.uleb128 0x2
 8848 1048 91       		.byte	0x91
 8849 1049 76       		.sleb128 -10
 8850 104a 00       		.byte	0
 8851 104b 1E       		.uleb128 0x1e
 8852 104c 780F0000 		.4byte	.LASF217
 8853 1050 01       		.byte	0x1
 8854 1051 B103     		.2byte	0x3b1
 8855 1053 00000000 		.4byte	.LFB86
 8856 1057 2E000000 		.4byte	.LFE86-.LFB86
 8857 105b 01       		.uleb128 0x1
 8858 105c 9C       		.byte	0x9c
 8859 105d 8F100000 		.4byte	0x108f
 8860 1061 22       		.uleb128 0x22
 8861 1062 2F040000 		.4byte	.LASF218
 8862 1066 01       		.byte	0x1
 8863 1067 B103     		.2byte	0x3b1
 8864 1069 97000000 		.4byte	0x97
 8865 106d 02       		.uleb128 0x2
 8866 106e 91       		.byte	0x91
 8867 106f 6F       		.sleb128 -17
 8868 1070 1F       		.uleb128 0x1f
 8869 1071 72070000 		.4byte	.LASF180
 8870 1075 01       		.byte	0x1
 8871 1076 B203     		.2byte	0x3b2
 8872 1078 73000000 		.4byte	0x73
 8873 107c 02       		.uleb128 0x2
 8874 107d 91       		.byte	0x91
 8875 107e 74       		.sleb128 -12
 8876 107f 1F       		.uleb128 0x1f
 8877 1080 ED040000 		.4byte	.LASF181
 8878 1084 01       		.byte	0x1
 8879 1085 B303     		.2byte	0x3b3
 8880 1087 D7040000 		.4byte	0x4d7
 8881 108b 02       		.uleb128 0x2
 8882 108c 91       		.byte	0x91
 8883 108d 70       		.sleb128 -16
 8884 108e 00       		.byte	0
 8885 108f 29       		.uleb128 0x29
 8886 1090 72030000 		.4byte	.LASF219
 8887 1094 01       		.byte	0x1
 8888 1095 C003     		.2byte	0x3c0
 8889 1097 97000000 		.4byte	0x97
 8890 109b 00000000 		.4byte	.LFB87
 8891 109f 90000000 		.4byte	.LFE87-.LFB87
 8892 10a3 01       		.uleb128 0x1
 8893 10a4 9C       		.byte	0x9c
 8894 10a5 F3100000 		.4byte	0x10f3
 8895 10a9 22       		.uleb128 0x22
 8896 10aa 23070000 		.4byte	.LASF220
 8897 10ae 01       		.byte	0x1
 8898 10af C003     		.2byte	0x3c0
 8899 10b1 73000000 		.4byte	0x73
 8900 10b5 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 203


 8901 10b6 91       		.byte	0x91
 8902 10b7 64       		.sleb128 -28
 8903 10b8 23       		.uleb128 0x23
 8904 10b9 6900     		.ascii	"i\000"
 8905 10bb 01       		.byte	0x1
 8906 10bc C203     		.2byte	0x3c2
 8907 10be 73000000 		.4byte	0x73
 8908 10c2 02       		.uleb128 0x2
 8909 10c3 91       		.byte	0x91
 8910 10c4 74       		.sleb128 -12
 8911 10c5 1F       		.uleb128 0x1f
 8912 10c6 81000000 		.4byte	.LASF221
 8913 10ca 01       		.byte	0x1
 8914 10cb C303     		.2byte	0x3c3
 8915 10cd 97000000 		.4byte	0x97
 8916 10d1 02       		.uleb128 0x2
 8917 10d2 91       		.byte	0x91
 8918 10d3 6B       		.sleb128 -21
 8919 10d4 1F       		.uleb128 0x1f
 8920 10d5 1F050000 		.4byte	.LASF222
 8921 10d9 01       		.byte	0x1
 8922 10da C403     		.2byte	0x3c4
 8923 10dc 73000000 		.4byte	0x73
 8924 10e0 02       		.uleb128 0x2
 8925 10e1 91       		.byte	0x91
 8926 10e2 6C       		.sleb128 -20
 8927 10e3 1F       		.uleb128 0x1f
 8928 10e4 75040000 		.4byte	.LASF223
 8929 10e8 01       		.byte	0x1
 8930 10e9 C503     		.2byte	0x3c5
 8931 10eb 97000000 		.4byte	0x97
 8932 10ef 02       		.uleb128 0x2
 8933 10f0 91       		.byte	0x91
 8934 10f1 73       		.sleb128 -13
 8935 10f2 00       		.byte	0
 8936 10f3 1E       		.uleb128 0x1e
 8937 10f4 4C0C0000 		.4byte	.LASF224
 8938 10f8 01       		.byte	0x1
 8939 10f9 EA03     		.2byte	0x3ea
 8940 10fb 00000000 		.4byte	.LFB88
 8941 10ff 60000000 		.4byte	.LFE88-.LFB88
 8942 1103 01       		.uleb128 0x1
 8943 1104 9C       		.byte	0x9c
 8944 1105 17110000 		.4byte	0x1117
 8945 1109 23       		.uleb128 0x23
 8946 110a 6900     		.ascii	"i\000"
 8947 110c 01       		.byte	0x1
 8948 110d EC03     		.2byte	0x3ec
 8949 110f A3000000 		.4byte	0xa3
 8950 1113 02       		.uleb128 0x2
 8951 1114 91       		.byte	0x91
 8952 1115 76       		.sleb128 -10
 8953 1116 00       		.byte	0
 8954 1117 29       		.uleb128 0x29
 8955 1118 B70B0000 		.4byte	.LASF225
 8956 111c 01       		.byte	0x1
 8957 111d FF03     		.2byte	0x3ff
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 204


 8958 111f 97000000 		.4byte	0x97
 8959 1123 00000000 		.4byte	.LFB89
 8960 1127 58000000 		.4byte	.LFE89-.LFB89
 8961 112b 01       		.uleb128 0x1
 8962 112c 9C       		.byte	0x9c
 8963 112d 3F110000 		.4byte	0x113f
 8964 1131 23       		.uleb128 0x23
 8965 1132 6900     		.ascii	"i\000"
 8966 1134 01       		.byte	0x1
 8967 1135 0004     		.2byte	0x400
 8968 1137 A3000000 		.4byte	0xa3
 8969 113b 02       		.uleb128 0x2
 8970 113c 91       		.byte	0x91
 8971 113d 76       		.sleb128 -10
 8972 113e 00       		.byte	0
 8973 113f 2A       		.uleb128 0x2a
 8974 1140 25050000 		.4byte	.LASF302
 8975 1144 01       		.byte	0x1
 8976 1145 1204     		.2byte	0x412
 8977 1147 97000000 		.4byte	0x97
 8978 114b 00000000 		.4byte	.LFB90
 8979 114f CC000000 		.4byte	.LFE90-.LFB90
 8980 1153 01       		.uleb128 0x1
 8981 1154 9C       		.byte	0x9c
 8982 1155 2B       		.uleb128 0x2b
 8983 1156 A7070000 		.4byte	.LASF226
 8984 115a 01       		.byte	0x1
 8985 115b 3D04     		.2byte	0x43d
 8986 115d 00000000 		.4byte	.LFB91
 8987 1161 0C000000 		.4byte	.LFE91-.LFB91
 8988 1165 01       		.uleb128 0x1
 8989 1166 9C       		.byte	0x9c
 8990 1167 2B       		.uleb128 0x2b
 8991 1168 CC090000 		.4byte	.LASF227
 8992 116c 01       		.byte	0x1
 8993 116d 4404     		.2byte	0x444
 8994 116f 00000000 		.4byte	.LFB92
 8995 1173 0C000000 		.4byte	.LFE92-.LFB92
 8996 1177 01       		.uleb128 0x1
 8997 1178 9C       		.byte	0x9c
 8998 1179 27       		.uleb128 0x27
 8999 117a 1F0B0000 		.4byte	.LASF229
 9000 117e 01       		.byte	0x1
 9001 117f 4B04     		.2byte	0x44b
 9002 1181 00000000 		.4byte	.LFB93
 9003 1185 0C000000 		.4byte	.LFE93-.LFB93
 9004 1189 01       		.uleb128 0x1
 9005 118a 9C       		.byte	0x9c
 9006 118b 2B       		.uleb128 0x2b
 9007 118c CC040000 		.4byte	.LASF230
 9008 1190 01       		.byte	0x1
 9009 1191 5204     		.2byte	0x452
 9010 1193 00000000 		.4byte	.LFB94
 9011 1197 0C000000 		.4byte	.LFE94-.LFB94
 9012 119b 01       		.uleb128 0x1
 9013 119c 9C       		.byte	0x9c
 9014 119d 27       		.uleb128 0x27
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 205


 9015 119e 6A050000 		.4byte	.LASF231
 9016 11a2 01       		.byte	0x1
 9017 11a3 5D04     		.2byte	0x45d
 9018 11a5 00000000 		.4byte	.LFB95
 9019 11a9 0C000000 		.4byte	.LFE95-.LFB95
 9020 11ad 01       		.uleb128 0x1
 9021 11ae 9C       		.byte	0x9c
 9022 11af 27       		.uleb128 0x27
 9023 11b0 390C0000 		.4byte	.LASF232
 9024 11b4 01       		.byte	0x1
 9025 11b5 6204     		.2byte	0x462
 9026 11b7 00000000 		.4byte	.LFB96
 9027 11bb 0C000000 		.4byte	.LFE96-.LFB96
 9028 11bf 01       		.uleb128 0x1
 9029 11c0 9C       		.byte	0x9c
 9030 11c1 27       		.uleb128 0x27
 9031 11c2 82010000 		.4byte	.LASF233
 9032 11c6 01       		.byte	0x1
 9033 11c7 6604     		.2byte	0x466
 9034 11c9 00000000 		.4byte	.LFB97
 9035 11cd 0C000000 		.4byte	.LFE97-.LFB97
 9036 11d1 01       		.uleb128 0x1
 9037 11d2 9C       		.byte	0x9c
 9038 11d3 27       		.uleb128 0x27
 9039 11d4 B2080000 		.4byte	.LASF234
 9040 11d8 01       		.byte	0x1
 9041 11d9 6A04     		.2byte	0x46a
 9042 11db 00000000 		.4byte	.LFB98
 9043 11df 0C000000 		.4byte	.LFE98-.LFB98
 9044 11e3 01       		.uleb128 0x1
 9045 11e4 9C       		.byte	0x9c
 9046 11e5 27       		.uleb128 0x27
 9047 11e6 200A0000 		.4byte	.LASF235
 9048 11ea 01       		.byte	0x1
 9049 11eb 6E04     		.2byte	0x46e
 9050 11ed 00000000 		.4byte	.LFB99
 9051 11f1 0C000000 		.4byte	.LFE99-.LFB99
 9052 11f5 01       		.uleb128 0x1
 9053 11f6 9C       		.byte	0x9c
 9054 11f7 27       		.uleb128 0x27
 9055 11f8 F7100000 		.4byte	.LASF236
 9056 11fc 01       		.byte	0x1
 9057 11fd 7204     		.2byte	0x472
 9058 11ff 00000000 		.4byte	.LFB100
 9059 1203 0C000000 		.4byte	.LFE100-.LFB100
 9060 1207 01       		.uleb128 0x1
 9061 1208 9C       		.byte	0x9c
 9062 1209 27       		.uleb128 0x27
 9063 120a 7F0A0000 		.4byte	.LASF237
 9064 120e 01       		.byte	0x1
 9065 120f 7604     		.2byte	0x476
 9066 1211 00000000 		.4byte	.LFB101
 9067 1215 0C000000 		.4byte	.LFE101-.LFB101
 9068 1219 01       		.uleb128 0x1
 9069 121a 9C       		.byte	0x9c
 9070 121b 27       		.uleb128 0x27
 9071 121c 6C0D0000 		.4byte	.LASF238
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 206


 9072 1220 01       		.byte	0x1
 9073 1221 7A04     		.2byte	0x47a
 9074 1223 00000000 		.4byte	.LFB102
 9075 1227 0C000000 		.4byte	.LFE102-.LFB102
 9076 122b 01       		.uleb128 0x1
 9077 122c 9C       		.byte	0x9c
 9078 122d 27       		.uleb128 0x27
 9079 122e 23090000 		.4byte	.LASF239
 9080 1232 01       		.byte	0x1
 9081 1233 7F04     		.2byte	0x47f
 9082 1235 00000000 		.4byte	.LFB103
 9083 1239 0C000000 		.4byte	.LFE103-.LFB103
 9084 123d 01       		.uleb128 0x1
 9085 123e 9C       		.byte	0x9c
 9086 123f 27       		.uleb128 0x27
 9087 1240 A50F0000 		.4byte	.LASF240
 9088 1244 01       		.byte	0x1
 9089 1245 8304     		.2byte	0x483
 9090 1247 00000000 		.4byte	.LFB104
 9091 124b 0C000000 		.4byte	.LFE104-.LFB104
 9092 124f 01       		.uleb128 0x1
 9093 1250 9C       		.byte	0x9c
 9094 1251 27       		.uleb128 0x27
 9095 1252 30070000 		.4byte	.LASF241
 9096 1256 01       		.byte	0x1
 9097 1257 8704     		.2byte	0x487
 9098 1259 00000000 		.4byte	.LFB105
 9099 125d 0C000000 		.4byte	.LFE105-.LFB105
 9100 1261 01       		.uleb128 0x1
 9101 1262 9C       		.byte	0x9c
 9102 1263 2C       		.uleb128 0x2c
 9103 1264 70100000 		.4byte	.LASF248
 9104 1268 01       		.byte	0x1
 9105 1269 8E04     		.2byte	0x48e
 9106 126b 00000000 		.4byte	.LFB106
 9107 126f C4000000 		.4byte	.LFE106-.LFB106
 9108 1273 01       		.uleb128 0x1
 9109 1274 9C       		.byte	0x9c
 9110 1275 C5120000 		.4byte	0x12c5
 9111 1279 1F       		.uleb128 0x1f
 9112 127a ED040000 		.4byte	.LASF181
 9113 127e 01       		.byte	0x1
 9114 127f 9304     		.2byte	0x493
 9115 1281 C5120000 		.4byte	0x12c5
 9116 1285 02       		.uleb128 0x2
 9117 1286 91       		.byte	0x91
 9118 1287 5C       		.sleb128 -36
 9119 1288 1F       		.uleb128 0x1f
 9120 1289 72070000 		.4byte	.LASF180
 9121 128d 01       		.byte	0x1
 9122 128e 9404     		.2byte	0x494
 9123 1290 97000000 		.4byte	0x97
 9124 1294 02       		.uleb128 0x2
 9125 1295 91       		.byte	0x91
 9126 1296 76       		.sleb128 -10
 9127 1297 1F       		.uleb128 0x1f
 9128 1298 1B020000 		.4byte	.LASF242
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 207


 9129 129c 01       		.byte	0x1
 9130 129d 9604     		.2byte	0x496
 9131 129f AF000000 		.4byte	0xaf
 9132 12a3 02       		.uleb128 0x2
 9133 12a4 91       		.byte	0x91
 9134 12a5 70       		.sleb128 -16
 9135 12a6 1F       		.uleb128 0x1f
 9136 12a7 9F0F0000 		.4byte	.LASF243
 9137 12ab 01       		.byte	0x1
 9138 12ac 9604     		.2byte	0x496
 9139 12ae AF000000 		.4byte	0xaf
 9140 12b2 02       		.uleb128 0x2
 9141 12b3 91       		.byte	0x91
 9142 12b4 6C       		.sleb128 -20
 9143 12b5 1F       		.uleb128 0x1f
 9144 12b6 8F030000 		.4byte	.LASF244
 9145 12ba 01       		.byte	0x1
 9146 12bb 9704     		.2byte	0x497
 9147 12bd 97000000 		.4byte	0x97
 9148 12c1 02       		.uleb128 0x2
 9149 12c2 91       		.byte	0x91
 9150 12c3 77       		.sleb128 -9
 9151 12c4 00       		.byte	0
 9152 12c5 0E       		.uleb128 0xe
 9153 12c6 97000000 		.4byte	0x97
 9154 12ca D5120000 		.4byte	0x12d5
 9155 12ce 0F       		.uleb128 0xf
 9156 12cf 0C010000 		.4byte	0x10c
 9157 12d3 0F       		.byte	0xf
 9158 12d4 00       		.byte	0
 9159 12d5 2D       		.uleb128 0x2d
 9160 12d6 07060000 		.4byte	.LASF245
 9161 12da 01       		.byte	0x1
 9162 12db B804     		.2byte	0x4b8
 9163 12dd C7000000 		.4byte	0xc7
 9164 12e1 00000000 		.4byte	.LFB107
 9165 12e5 A8000000 		.4byte	.LFE107-.LFB107
 9166 12e9 01       		.uleb128 0x1
 9167 12ea 9C       		.byte	0x9c
 9168 12eb 4A130000 		.4byte	0x134a
 9169 12ef 1F       		.uleb128 0x1f
 9170 12f0 ED040000 		.4byte	.LASF181
 9171 12f4 01       		.byte	0x1
 9172 12f5 BA04     		.2byte	0x4ba
 9173 12f7 C5120000 		.4byte	0x12c5
 9174 12fb 02       		.uleb128 0x2
 9175 12fc 91       		.byte	0x91
 9176 12fd 5C       		.sleb128 -36
 9177 12fe 1F       		.uleb128 0x1f
 9178 12ff 72070000 		.4byte	.LASF180
 9179 1303 01       		.byte	0x1
 9180 1304 BB04     		.2byte	0x4bb
 9181 1306 97000000 		.4byte	0x97
 9182 130a 02       		.uleb128 0x2
 9183 130b 91       		.byte	0x91
 9184 130c 74       		.sleb128 -12
 9185 130d 1F       		.uleb128 0x1f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 208


 9186 130e 60050000 		.4byte	.LASF246
 9187 1312 01       		.byte	0x1
 9188 1313 BC04     		.2byte	0x4bc
 9189 1315 C7000000 		.4byte	0xc7
 9190 1319 02       		.uleb128 0x2
 9191 131a 91       		.byte	0x91
 9192 131b 76       		.sleb128 -10
 9193 131c 1F       		.uleb128 0x1f
 9194 131d 1B020000 		.4byte	.LASF242
 9195 1321 01       		.byte	0x1
 9196 1322 BD04     		.2byte	0x4bd
 9197 1324 AF000000 		.4byte	0xaf
 9198 1328 02       		.uleb128 0x2
 9199 1329 91       		.byte	0x91
 9200 132a 70       		.sleb128 -16
 9201 132b 1F       		.uleb128 0x1f
 9202 132c 9F0F0000 		.4byte	.LASF243
 9203 1330 01       		.byte	0x1
 9204 1331 BD04     		.2byte	0x4bd
 9205 1333 AF000000 		.4byte	0xaf
 9206 1337 02       		.uleb128 0x2
 9207 1338 91       		.byte	0x91
 9208 1339 6C       		.sleb128 -20
 9209 133a 1F       		.uleb128 0x1f
 9210 133b 8F030000 		.4byte	.LASF244
 9211 133f 01       		.byte	0x1
 9212 1340 BE04     		.2byte	0x4be
 9213 1342 97000000 		.4byte	0x97
 9214 1346 02       		.uleb128 0x2
 9215 1347 91       		.byte	0x91
 9216 1348 75       		.sleb128 -11
 9217 1349 00       		.byte	0
 9218 134a 27       		.uleb128 0x27
 9219 134b 94000000 		.4byte	.LASF247
 9220 134f 01       		.byte	0x1
 9221 1350 DE04     		.2byte	0x4de
 9222 1352 00000000 		.4byte	.LFB108
 9223 1356 0C000000 		.4byte	.LFE108-.LFB108
 9224 135a 01       		.uleb128 0x1
 9225 135b 9C       		.byte	0x9c
 9226 135c 2C       		.uleb128 0x2c
 9227 135d 09030000 		.4byte	.LASF249
 9228 1361 01       		.byte	0x1
 9229 1362 E204     		.2byte	0x4e2
 9230 1364 00000000 		.4byte	.LFB109
 9231 1368 20000000 		.4byte	.LFE109-.LFB109
 9232 136c 01       		.uleb128 0x1
 9233 136d 9C       		.byte	0x9c
 9234 136e 82130000 		.4byte	0x1382
 9235 1372 1F       		.uleb128 0x1f
 9236 1373 ED040000 		.4byte	.LASF181
 9237 1377 01       		.byte	0x1
 9238 1378 E404     		.2byte	0x4e4
 9239 137a D7040000 		.4byte	0x4d7
 9240 137e 02       		.uleb128 0x2
 9241 137f 91       		.byte	0x91
 9242 1380 74       		.sleb128 -12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 209


 9243 1381 00       		.byte	0
 9244 1382 27       		.uleb128 0x27
 9245 1383 A2050000 		.4byte	.LASF250
 9246 1387 01       		.byte	0x1
 9247 1388 F004     		.2byte	0x4f0
 9248 138a 00000000 		.4byte	.LFB110
 9249 138e 0C000000 		.4byte	.LFE110-.LFB110
 9250 1392 01       		.uleb128 0x1
 9251 1393 9C       		.byte	0x9c
 9252 1394 2C       		.uleb128 0x2c
 9253 1395 560C0000 		.4byte	.LASF251
 9254 1399 01       		.byte	0x1
 9255 139a F404     		.2byte	0x4f4
 9256 139c 00000000 		.4byte	.LFB111
 9257 13a0 94000000 		.4byte	.LFE111-.LFB111
 9258 13a4 01       		.uleb128 0x1
 9259 13a5 9C       		.byte	0x9c
 9260 13a6 D8130000 		.4byte	0x13d8
 9261 13aa 1F       		.uleb128 0x1f
 9262 13ab 72070000 		.4byte	.LASF180
 9263 13af 01       		.byte	0x1
 9264 13b0 F604     		.2byte	0x4f6
 9265 13b2 97000000 		.4byte	0x97
 9266 13b6 02       		.uleb128 0x2
 9267 13b7 91       		.byte	0x91
 9268 13b8 77       		.sleb128 -9
 9269 13b9 1F       		.uleb128 0x1f
 9270 13ba ED040000 		.4byte	.LASF181
 9271 13be 01       		.byte	0x1
 9272 13bf F704     		.2byte	0x4f7
 9273 13c1 D7040000 		.4byte	0x4d7
 9274 13c5 02       		.uleb128 0x2
 9275 13c6 91       		.byte	0x91
 9276 13c7 74       		.sleb128 -12
 9277 13c8 1F       		.uleb128 0x1f
 9278 13c9 570D0000 		.4byte	.LASF209
 9279 13cd 01       		.byte	0x1
 9280 13ce F804     		.2byte	0x4f8
 9281 13d0 97000000 		.4byte	0x97
 9282 13d4 02       		.uleb128 0x2
 9283 13d5 91       		.byte	0x91
 9284 13d6 76       		.sleb128 -10
 9285 13d7 00       		.byte	0
 9286 13d8 2C       		.uleb128 0x2c
 9287 13d9 98010000 		.4byte	.LASF252
 9288 13dd 01       		.byte	0x1
 9289 13de 1605     		.2byte	0x516
 9290 13e0 00000000 		.4byte	.LFB112
 9291 13e4 60000000 		.4byte	.LFE112-.LFB112
 9292 13e8 01       		.uleb128 0x1
 9293 13e9 9C       		.byte	0x9c
 9294 13ea 0D140000 		.4byte	0x140d
 9295 13ee 1F       		.uleb128 0x1f
 9296 13ef ED040000 		.4byte	.LASF181
 9297 13f3 01       		.byte	0x1
 9298 13f4 1805     		.2byte	0x518
 9299 13f6 5E040000 		.4byte	0x45e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 210


 9300 13fa 02       		.uleb128 0x2
 9301 13fb 91       		.byte	0x91
 9302 13fc 70       		.sleb128 -16
 9303 13fd 1F       		.uleb128 0x1f
 9304 13fe B40E0000 		.4byte	.LASF197
 9305 1402 01       		.byte	0x1
 9306 1403 1905     		.2byte	0x519
 9307 1405 C7000000 		.4byte	0xc7
 9308 1409 02       		.uleb128 0x2
 9309 140a 91       		.byte	0x91
 9310 140b 6E       		.sleb128 -18
 9311 140c 00       		.byte	0
 9312 140d 27       		.uleb128 0x27
 9313 140e 18010000 		.4byte	.LASF253
 9314 1412 01       		.byte	0x1
 9315 1413 2C05     		.2byte	0x52c
 9316 1415 00000000 		.4byte	.LFB113
 9317 1419 0C000000 		.4byte	.LFE113-.LFB113
 9318 141d 01       		.uleb128 0x1
 9319 141e 9C       		.byte	0x9c
 9320 141f 27       		.uleb128 0x27
 9321 1420 460F0000 		.4byte	.LASF254
 9322 1424 01       		.byte	0x1
 9323 1425 3005     		.2byte	0x530
 9324 1427 00000000 		.4byte	.LFB114
 9325 142b 0C000000 		.4byte	.LFE114-.LFB114
 9326 142f 01       		.uleb128 0x1
 9327 1430 9C       		.byte	0x9c
 9328 1431 27       		.uleb128 0x27
 9329 1432 400E0000 		.4byte	.LASF255
 9330 1436 01       		.byte	0x1
 9331 1437 3305     		.2byte	0x533
 9332 1439 00000000 		.4byte	.LFB115
 9333 143d 0C000000 		.4byte	.LFE115-.LFB115
 9334 1441 01       		.uleb128 0x1
 9335 1442 9C       		.byte	0x9c
 9336 1443 27       		.uleb128 0x27
 9337 1444 99020000 		.4byte	.LASF256
 9338 1448 01       		.byte	0x1
 9339 1449 3605     		.2byte	0x536
 9340 144b 00000000 		.4byte	.LFB116
 9341 144f 0C000000 		.4byte	.LFE116-.LFB116
 9342 1453 01       		.uleb128 0x1
 9343 1454 9C       		.byte	0x9c
 9344 1455 27       		.uleb128 0x27
 9345 1456 D1020000 		.4byte	.LASF257
 9346 145a 01       		.byte	0x1
 9347 145b 3905     		.2byte	0x539
 9348 145d 00000000 		.4byte	.LFB117
 9349 1461 0C000000 		.4byte	.LFE117-.LFB117
 9350 1465 01       		.uleb128 0x1
 9351 1466 9C       		.byte	0x9c
 9352 1467 1E       		.uleb128 0x1e
 9353 1468 63020000 		.4byte	.LASF258
 9354 146c 01       		.byte	0x1
 9355 146d 3D05     		.2byte	0x53d
 9356 146f 00000000 		.4byte	.LFB118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 211


 9357 1473 54010000 		.4byte	.LFE118-.LFB118
 9358 1477 01       		.uleb128 0x1
 9359 1478 9C       		.byte	0x9c
 9360 1479 BC140000 		.4byte	0x14bc
 9361 147d 22       		.uleb128 0x22
 9362 147e F7050000 		.4byte	.LASF259
 9363 1482 01       		.byte	0x1
 9364 1483 3D05     		.2byte	0x53d
 9365 1485 A3000000 		.4byte	0xa3
 9366 1489 04       		.uleb128 0x4
 9367 148a 91       		.byte	0x91
 9368 148b 9EE37E   		.sleb128 -20066
 9369 148e 23       		.uleb128 0x23
 9370 148f 6900     		.ascii	"i\000"
 9371 1491 01       		.byte	0x1
 9372 1492 3F05     		.2byte	0x53f
 9373 1494 97000000 		.4byte	0x97
 9374 1498 02       		.uleb128 0x2
 9375 1499 91       		.byte	0x91
 9376 149a 77       		.sleb128 -9
 9377 149b 1F       		.uleb128 0x1f
 9378 149c 7B030000 		.4byte	.LASF260
 9379 14a0 01       		.byte	0x1
 9380 14a1 4005     		.2byte	0x540
 9381 14a3 690A0000 		.4byte	0xa69
 9382 14a7 02       		.uleb128 0x2
 9383 14a8 91       		.byte	0x91
 9384 14a9 44       		.sleb128 -60
 9385 14aa 1F       		.uleb128 0x1f
 9386 14ab 4C070000 		.4byte	.LASF166
 9387 14af 01       		.byte	0x1
 9388 14b0 4105     		.2byte	0x541
 9389 14b2 E2080000 		.4byte	0x8e2
 9390 14b6 04       		.uleb128 0x4
 9391 14b7 91       		.byte	0x91
 9392 14b8 A4E37E   		.sleb128 -20060
 9393 14bb 00       		.byte	0
 9394 14bc 26       		.uleb128 0x26
 9395 14bd 30030000 		.4byte	.LASF261
 9396 14c1 01       		.byte	0x1
 9397 14c2 5905     		.2byte	0x559
 9398 14c4 00000000 		.4byte	.LFB119
 9399 14c8 14000000 		.4byte	.LFE119-.LFB119
 9400 14cc 01       		.uleb128 0x1
 9401 14cd 9C       		.byte	0x9c
 9402 14ce E2140000 		.4byte	0x14e2
 9403 14d2 22       		.uleb128 0x22
 9404 14d3 F7050000 		.4byte	.LASF259
 9405 14d7 01       		.byte	0x1
 9406 14d8 5905     		.2byte	0x559
 9407 14da A3000000 		.4byte	0xa3
 9408 14de 02       		.uleb128 0x2
 9409 14df 91       		.byte	0x91
 9410 14e0 76       		.sleb128 -10
 9411 14e1 00       		.byte	0
 9412 14e2 2C       		.uleb128 0x2c
 9413 14e3 F9080000 		.4byte	.LASF262
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 212


 9414 14e7 01       		.byte	0x1
 9415 14e8 6205     		.2byte	0x562
 9416 14ea 00000000 		.4byte	.LFB120
 9417 14ee 50010000 		.4byte	.LFE120-.LFB120
 9418 14f2 01       		.uleb128 0x1
 9419 14f3 9C       		.byte	0x9c
 9420 14f4 06150000 		.4byte	0x1506
 9421 14f8 23       		.uleb128 0x23
 9422 14f9 6900     		.ascii	"i\000"
 9423 14fb 01       		.byte	0x1
 9424 14fc 6405     		.2byte	0x564
 9425 14fe 97000000 		.4byte	0x97
 9426 1502 02       		.uleb128 0x2
 9427 1503 91       		.byte	0x91
 9428 1504 6F       		.sleb128 -17
 9429 1505 00       		.byte	0
 9430 1506 2C       		.uleb128 0x2c
 9431 1507 A5000000 		.4byte	.LASF263
 9432 150b 01       		.byte	0x1
 9433 150c 8905     		.2byte	0x589
 9434 150e 00000000 		.4byte	.LFB121
 9435 1512 A0010000 		.4byte	.LFE121-.LFB121
 9436 1516 01       		.uleb128 0x1
 9437 1517 9C       		.byte	0x9c
 9438 1518 77150000 		.4byte	0x1577
 9439 151c 1F       		.uleb128 0x1f
 9440 151d 60050000 		.4byte	.LASF246
 9441 1521 01       		.byte	0x1
 9442 1522 8B05     		.2byte	0x58b
 9443 1524 C7000000 		.4byte	0xc7
 9444 1528 02       		.uleb128 0x2
 9445 1529 91       		.byte	0x91
 9446 152a 5C       		.sleb128 -36
 9447 152b 1F       		.uleb128 0x1f
 9448 152c 62040000 		.4byte	.LASF264
 9449 1530 01       		.byte	0x1
 9450 1531 8C05     		.2byte	0x58c
 9451 1533 D3000000 		.4byte	0xd3
 9452 1537 02       		.uleb128 0x2
 9453 1538 91       		.byte	0x91
 9454 1539 64       		.sleb128 -28
 9455 153a 1F       		.uleb128 0x1f
 9456 153b 88090000 		.4byte	.LASF265
 9457 153f 01       		.byte	0x1
 9458 1540 8D05     		.2byte	0x58d
 9459 1542 D3000000 		.4byte	0xd3
 9460 1546 02       		.uleb128 0x2
 9461 1547 91       		.byte	0x91
 9462 1548 54       		.sleb128 -44
 9463 1549 1F       		.uleb128 0x1f
 9464 154a FA020000 		.4byte	.LASF266
 9465 154e 01       		.byte	0x1
 9466 154f 8D05     		.2byte	0x58d
 9467 1551 D3000000 		.4byte	0xd3
 9468 1555 02       		.uleb128 0x2
 9469 1556 91       		.byte	0x91
 9470 1557 58       		.sleb128 -40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 213


 9471 1558 1F       		.uleb128 0x1f
 9472 1559 54040000 		.4byte	.LASF267
 9473 155d 01       		.byte	0x1
 9474 155e 8E05     		.2byte	0x58e
 9475 1560 D3000000 		.4byte	0xd3
 9476 1564 02       		.uleb128 0x2
 9477 1565 91       		.byte	0x91
 9478 1566 60       		.sleb128 -32
 9479 1567 1F       		.uleb128 0x1f
 9480 1568 180A0000 		.4byte	.LASF268
 9481 156c 01       		.byte	0x1
 9482 156d 8F05     		.2byte	0x58f
 9483 156f C7000000 		.4byte	0xc7
 9484 1573 02       		.uleb128 0x2
 9485 1574 91       		.byte	0x91
 9486 1575 5E       		.sleb128 -34
 9487 1576 00       		.byte	0
 9488 1577 2E       		.uleb128 0x2e
 9489 1578 900A0000 		.4byte	.LASF269
 9490 157c 01       		.byte	0x1
 9491 157d CB05     		.2byte	0x5cb
 9492 157f 97000000 		.4byte	0x97
 9493 1583 00000000 		.4byte	.LFB122
 9494 1587 0E000000 		.4byte	.LFE122-.LFB122
 9495 158b 01       		.uleb128 0x1
 9496 158c 9C       		.byte	0x9c
 9497 158d 26       		.uleb128 0x26
 9498 158e AD060000 		.4byte	.LASF270
 9499 1592 01       		.byte	0x1
 9500 1593 D505     		.2byte	0x5d5
 9501 1595 00000000 		.4byte	.LFB123
 9502 1599 12000000 		.4byte	.LFE123-.LFB123
 9503 159d 01       		.uleb128 0x1
 9504 159e 9C       		.byte	0x9c
 9505 159f B3150000 		.4byte	0x15b3
 9506 15a3 22       		.uleb128 0x22
 9507 15a4 92050000 		.4byte	.LASF271
 9508 15a8 01       		.byte	0x1
 9509 15a9 D505     		.2byte	0x5d5
 9510 15ab 73000000 		.4byte	0x73
 9511 15af 02       		.uleb128 0x2
 9512 15b0 91       		.byte	0x91
 9513 15b1 74       		.sleb128 -12
 9514 15b2 00       		.byte	0
 9515 15b3 1E       		.uleb128 0x1e
 9516 15b4 950B0000 		.4byte	.LASF272
 9517 15b8 01       		.byte	0x1
 9518 15b9 2606     		.2byte	0x626
 9519 15bb 00000000 		.4byte	.LFB124
 9520 15bf 84000000 		.4byte	.LFE124-.LFB124
 9521 15c3 01       		.uleb128 0x1
 9522 15c4 9C       		.byte	0x9c
 9523 15c5 06160000 		.4byte	0x1606
 9524 15c9 22       		.uleb128 0x22
 9525 15ca 58070000 		.4byte	.LASF134
 9526 15ce 01       		.byte	0x1
 9527 15cf 2606     		.2byte	0x626
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 214


 9528 15d1 97000000 		.4byte	0x97
 9529 15d5 02       		.uleb128 0x2
 9530 15d6 91       		.byte	0x91
 9531 15d7 5F       		.sleb128 -33
 9532 15d8 1F       		.uleb128 0x1f
 9533 15d9 ED040000 		.4byte	.LASF181
 9534 15dd 01       		.byte	0x1
 9535 15de 2806     		.2byte	0x628
 9536 15e0 5E040000 		.4byte	0x45e
 9537 15e4 02       		.uleb128 0x2
 9538 15e5 91       		.byte	0x91
 9539 15e6 68       		.sleb128 -24
 9540 15e7 1F       		.uleb128 0x1f
 9541 15e8 72070000 		.4byte	.LASF180
 9542 15ec 01       		.byte	0x1
 9543 15ed 2906     		.2byte	0x629
 9544 15ef 97000000 		.4byte	0x97
 9545 15f3 02       		.uleb128 0x2
 9546 15f4 91       		.byte	0x91
 9547 15f5 6F       		.sleb128 -17
 9548 15f6 1F       		.uleb128 0x1f
 9549 15f7 B40E0000 		.4byte	.LASF197
 9550 15fb 01       		.byte	0x1
 9551 15fc 2A06     		.2byte	0x62a
 9552 15fe C7000000 		.4byte	0xc7
 9553 1602 02       		.uleb128 0x2
 9554 1603 91       		.byte	0x91
 9555 1604 66       		.sleb128 -26
 9556 1605 00       		.byte	0
 9557 1606 2F       		.uleb128 0x2f
 9558 1607 59000000 		.4byte	.LASF273
 9559 160b 01       		.byte	0x1
 9560 160c 4106     		.2byte	0x641
 9561 160e 00000000 		.4byte	.LFB125
 9562 1612 30000000 		.4byte	.LFE125-.LFB125
 9563 1616 01       		.uleb128 0x1
 9564 1617 9C       		.byte	0x9c
 9565 1618 27       		.uleb128 0x27
 9566 1619 0D050000 		.4byte	.LASF274
 9567 161d 01       		.byte	0x1
 9568 161e 4F06     		.2byte	0x64f
 9569 1620 00000000 		.4byte	.LFB126
 9570 1624 0C000000 		.4byte	.LFE126-.LFB126
 9571 1628 01       		.uleb128 0x1
 9572 1629 9C       		.byte	0x9c
 9573 162a 30       		.uleb128 0x30
 9574 162b 52090000 		.4byte	.LASF275
 9575 162f 08       		.byte	0x8
 9576 1630 1207     		.2byte	0x712
 9577 1632 36160000 		.4byte	0x1636
 9578 1636 06       		.uleb128 0x6
 9579 1637 81000000 		.4byte	0x81
 9580 163b 30       		.uleb128 0x30
 9581 163c 0E100000 		.4byte	.LASF276
 9582 1640 07       		.byte	0x7
 9583 1641 7301     		.2byte	0x173
 9584 1643 AD060000 		.4byte	0x6ad
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 215


 9585 1647 30       		.uleb128 0x30
 9586 1648 320E0000 		.4byte	.LASF277
 9587 164c 07       		.byte	0x7
 9588 164d 7301     		.2byte	0x173
 9589 164f AD060000 		.4byte	0x6ad
 9590 1653 30       		.uleb128 0x30
 9591 1654 74000000 		.4byte	.LASF278
 9592 1658 07       		.byte	0x7
 9593 1659 6C01     		.2byte	0x16c
 9594 165b 88030000 		.4byte	0x388
 9595 165f 30       		.uleb128 0x30
 9596 1660 08100000 		.4byte	.LASF279
 9597 1664 07       		.byte	0x7
 9598 1665 7201     		.2byte	0x172
 9599 1667 7D050000 		.4byte	0x57d
 9600 166b 30       		.uleb128 0x30
 9601 166c AE090000 		.4byte	.LASF280
 9602 1670 07       		.byte	0x7
 9603 1671 7201     		.2byte	0x172
 9604 1673 7D050000 		.4byte	0x57d
 9605 1677 30       		.uleb128 0x30
 9606 1678 3C020000 		.4byte	.LASF281
 9607 167c 07       		.byte	0x7
 9608 167d 7401     		.2byte	0x174
 9609 167f A3000000 		.4byte	0xa3
 9610 1683 30       		.uleb128 0x30
 9611 1684 D60D0000 		.4byte	.LASF282
 9612 1688 07       		.byte	0x7
 9613 1689 7501     		.2byte	0x175
 9614 168b A3000000 		.4byte	0xa3
 9615 168f 30       		.uleb128 0x30
 9616 1690 99030000 		.4byte	.LASF283
 9617 1694 07       		.byte	0x7
 9618 1695 6D01     		.2byte	0x16d
 9619 1697 97000000 		.4byte	0x97
 9620 169b 30       		.uleb128 0x30
 9621 169c 9D060000 		.4byte	.LASF284
 9622 16a0 07       		.byte	0x7
 9623 16a1 6E01     		.2byte	0x16e
 9624 16a3 97000000 		.4byte	0x97
 9625 16a7 30       		.uleb128 0x30
 9626 16a8 F00C0000 		.4byte	.LASF285
 9627 16ac 07       		.byte	0x7
 9628 16ad 2B01     		.2byte	0x12b
 9629 16af 950D0000 		.4byte	0xd95
 9630 16b3 30       		.uleb128 0x30
 9631 16b4 E1020000 		.4byte	.LASF286
 9632 16b8 07       		.byte	0x7
 9633 16b9 2C01     		.2byte	0x12c
 9634 16bb 950D0000 		.4byte	0xd95
 9635 16bf 30       		.uleb128 0x30
 9636 16c0 DF0F0000 		.4byte	.LASF287
 9637 16c4 07       		.byte	0x7
 9638 16c5 2F01     		.2byte	0x12f
 9639 16c7 950D0000 		.4byte	0xd95
 9640 16cb 30       		.uleb128 0x30
 9641 16cc 4C100000 		.4byte	.LASF288
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 216


 9642 16d0 07       		.byte	0x7
 9643 16d1 7001     		.2byte	0x170
 9644 16d3 97000000 		.4byte	0x97
 9645 16d7 30       		.uleb128 0x30
 9646 16d8 52050000 		.4byte	.LASF289
 9647 16dc 07       		.byte	0x7
 9648 16dd 6701     		.2byte	0x167
 9649 16df D3000000 		.4byte	0xd3
 9650 16e3 30       		.uleb128 0x30
 9651 16e4 8E0B0000 		.4byte	.LASF290
 9652 16e8 07       		.byte	0x7
 9653 16e9 6801     		.2byte	0x168
 9654 16eb D7040000 		.4byte	0x4d7
 9655 16ef 30       		.uleb128 0x30
 9656 16f0 DD100000 		.4byte	.LASF291
 9657 16f4 07       		.byte	0x7
 9658 16f5 6901     		.2byte	0x169
 9659 16f7 97000000 		.4byte	0x97
 9660 16fb 30       		.uleb128 0x30
 9661 16fc BD010000 		.4byte	.LASF292
 9662 1700 07       		.byte	0x7
 9663 1701 6901     		.2byte	0x169
 9664 1703 97000000 		.4byte	0x97
 9665 1707 30       		.uleb128 0x30
 9666 1708 28020000 		.4byte	.LASF293
 9667 170c 07       		.byte	0x7
 9668 170d 8701     		.2byte	0x187
 9669 170f C7000000 		.4byte	0xc7
 9670 1713 30       		.uleb128 0x30
 9671 1714 32020000 		.4byte	.LASF294
 9672 1718 07       		.byte	0x7
 9673 1719 8801     		.2byte	0x188
 9674 171b C7000000 		.4byte	0xc7
 9675 171f 30       		.uleb128 0x30
 9676 1720 6F0B0000 		.4byte	.LASF295
 9677 1724 07       		.byte	0x7
 9678 1725 8A01     		.2byte	0x18a
 9679 1727 840D0000 		.4byte	0xd84
 9680 172b 31       		.uleb128 0x31
 9681 172c BE0E0000 		.4byte	.LASF296
 9682 1730 01       		.byte	0x1
 9683 1731 33       		.byte	0x33
 9684 1732 3C170000 		.4byte	0x173c
 9685 1736 05       		.uleb128 0x5
 9686 1737 03       		.byte	0x3
 9687 1738 00000000 		.4byte	EEPROM_ADDR
 9688 173c 07       		.uleb128 0x7
 9689 173d 04       		.byte	0x4
 9690 173e F4000000 		.4byte	0xf4
 9691 1742 00       		.byte	0
 9692              		.section	.debug_abbrev,"",%progbits
 9693              	.Ldebug_abbrev0:
 9694 0000 01       		.uleb128 0x1
 9695 0001 11       		.uleb128 0x11
 9696 0002 01       		.byte	0x1
 9697 0003 25       		.uleb128 0x25
 9698 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 217


 9699 0005 13       		.uleb128 0x13
 9700 0006 0B       		.uleb128 0xb
 9701 0007 03       		.uleb128 0x3
 9702 0008 0E       		.uleb128 0xe
 9703 0009 1B       		.uleb128 0x1b
 9704 000a 0E       		.uleb128 0xe
 9705 000b 55       		.uleb128 0x55
 9706 000c 17       		.uleb128 0x17
 9707 000d 11       		.uleb128 0x11
 9708 000e 01       		.uleb128 0x1
 9709 000f 10       		.uleb128 0x10
 9710 0010 17       		.uleb128 0x17
 9711 0011 00       		.byte	0
 9712 0012 00       		.byte	0
 9713 0013 02       		.uleb128 0x2
 9714 0014 24       		.uleb128 0x24
 9715 0015 00       		.byte	0
 9716 0016 0B       		.uleb128 0xb
 9717 0017 0B       		.uleb128 0xb
 9718 0018 3E       		.uleb128 0x3e
 9719 0019 0B       		.uleb128 0xb
 9720 001a 03       		.uleb128 0x3
 9721 001b 0E       		.uleb128 0xe
 9722 001c 00       		.byte	0
 9723 001d 00       		.byte	0
 9724 001e 03       		.uleb128 0x3
 9725 001f 16       		.uleb128 0x16
 9726 0020 00       		.byte	0
 9727 0021 03       		.uleb128 0x3
 9728 0022 0E       		.uleb128 0xe
 9729 0023 3A       		.uleb128 0x3a
 9730 0024 0B       		.uleb128 0xb
 9731 0025 3B       		.uleb128 0x3b
 9732 0026 0B       		.uleb128 0xb
 9733 0027 49       		.uleb128 0x49
 9734 0028 13       		.uleb128 0x13
 9735 0029 00       		.byte	0
 9736 002a 00       		.byte	0
 9737 002b 04       		.uleb128 0x4
 9738 002c 24       		.uleb128 0x24
 9739 002d 00       		.byte	0
 9740 002e 0B       		.uleb128 0xb
 9741 002f 0B       		.uleb128 0xb
 9742 0030 3E       		.uleb128 0x3e
 9743 0031 0B       		.uleb128 0xb
 9744 0032 03       		.uleb128 0x3
 9745 0033 08       		.uleb128 0x8
 9746 0034 00       		.byte	0
 9747 0035 00       		.byte	0
 9748 0036 05       		.uleb128 0x5
 9749 0037 16       		.uleb128 0x16
 9750 0038 00       		.byte	0
 9751 0039 03       		.uleb128 0x3
 9752 003a 0E       		.uleb128 0xe
 9753 003b 3A       		.uleb128 0x3a
 9754 003c 0B       		.uleb128 0xb
 9755 003d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 218


 9756 003e 05       		.uleb128 0x5
 9757 003f 49       		.uleb128 0x49
 9758 0040 13       		.uleb128 0x13
 9759 0041 00       		.byte	0
 9760 0042 00       		.byte	0
 9761 0043 06       		.uleb128 0x6
 9762 0044 35       		.uleb128 0x35
 9763 0045 00       		.byte	0
 9764 0046 49       		.uleb128 0x49
 9765 0047 13       		.uleb128 0x13
 9766 0048 00       		.byte	0
 9767 0049 00       		.byte	0
 9768 004a 07       		.uleb128 0x7
 9769 004b 0F       		.uleb128 0xf
 9770 004c 00       		.byte	0
 9771 004d 0B       		.uleb128 0xb
 9772 004e 0B       		.uleb128 0xb
 9773 004f 49       		.uleb128 0x49
 9774 0050 13       		.uleb128 0x13
 9775 0051 00       		.byte	0
 9776 0052 00       		.byte	0
 9777 0053 08       		.uleb128 0x8
 9778 0054 26       		.uleb128 0x26
 9779 0055 00       		.byte	0
 9780 0056 49       		.uleb128 0x49
 9781 0057 13       		.uleb128 0x13
 9782 0058 00       		.byte	0
 9783 0059 00       		.byte	0
 9784 005a 09       		.uleb128 0x9
 9785 005b 04       		.uleb128 0x4
 9786 005c 01       		.byte	0x1
 9787 005d 03       		.uleb128 0x3
 9788 005e 0E       		.uleb128 0xe
 9789 005f 0B       		.uleb128 0xb
 9790 0060 0B       		.uleb128 0xb
 9791 0061 49       		.uleb128 0x49
 9792 0062 13       		.uleb128 0x13
 9793 0063 3A       		.uleb128 0x3a
 9794 0064 0B       		.uleb128 0xb
 9795 0065 3B       		.uleb128 0x3b
 9796 0066 0B       		.uleb128 0xb
 9797 0067 01       		.uleb128 0x1
 9798 0068 13       		.uleb128 0x13
 9799 0069 00       		.byte	0
 9800 006a 00       		.byte	0
 9801 006b 0A       		.uleb128 0xa
 9802 006c 28       		.uleb128 0x28
 9803 006d 00       		.byte	0
 9804 006e 03       		.uleb128 0x3
 9805 006f 0E       		.uleb128 0xe
 9806 0070 1C       		.uleb128 0x1c
 9807 0071 0B       		.uleb128 0xb
 9808 0072 00       		.byte	0
 9809 0073 00       		.byte	0
 9810 0074 0B       		.uleb128 0xb
 9811 0075 13       		.uleb128 0x13
 9812 0076 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 219


 9813 0077 03       		.uleb128 0x3
 9814 0078 0E       		.uleb128 0xe
 9815 0079 0B       		.uleb128 0xb
 9816 007a 0B       		.uleb128 0xb
 9817 007b 3A       		.uleb128 0x3a
 9818 007c 0B       		.uleb128 0xb
 9819 007d 3B       		.uleb128 0x3b
 9820 007e 0B       		.uleb128 0xb
 9821 007f 01       		.uleb128 0x1
 9822 0080 13       		.uleb128 0x13
 9823 0081 00       		.byte	0
 9824 0082 00       		.byte	0
 9825 0083 0C       		.uleb128 0xc
 9826 0084 0D       		.uleb128 0xd
 9827 0085 00       		.byte	0
 9828 0086 03       		.uleb128 0x3
 9829 0087 0E       		.uleb128 0xe
 9830 0088 3A       		.uleb128 0x3a
 9831 0089 0B       		.uleb128 0xb
 9832 008a 3B       		.uleb128 0x3b
 9833 008b 0B       		.uleb128 0xb
 9834 008c 49       		.uleb128 0x49
 9835 008d 13       		.uleb128 0x13
 9836 008e 38       		.uleb128 0x38
 9837 008f 0B       		.uleb128 0xb
 9838 0090 00       		.byte	0
 9839 0091 00       		.byte	0
 9840 0092 0D       		.uleb128 0xd
 9841 0093 0D       		.uleb128 0xd
 9842 0094 00       		.byte	0
 9843 0095 03       		.uleb128 0x3
 9844 0096 08       		.uleb128 0x8
 9845 0097 3A       		.uleb128 0x3a
 9846 0098 0B       		.uleb128 0xb
 9847 0099 3B       		.uleb128 0x3b
 9848 009a 0B       		.uleb128 0xb
 9849 009b 49       		.uleb128 0x49
 9850 009c 13       		.uleb128 0x13
 9851 009d 38       		.uleb128 0x38
 9852 009e 0B       		.uleb128 0xb
 9853 009f 00       		.byte	0
 9854 00a0 00       		.byte	0
 9855 00a1 0E       		.uleb128 0xe
 9856 00a2 01       		.uleb128 0x1
 9857 00a3 01       		.byte	0x1
 9858 00a4 49       		.uleb128 0x49
 9859 00a5 13       		.uleb128 0x13
 9860 00a6 01       		.uleb128 0x1
 9861 00a7 13       		.uleb128 0x13
 9862 00a8 00       		.byte	0
 9863 00a9 00       		.byte	0
 9864 00aa 0F       		.uleb128 0xf
 9865 00ab 21       		.uleb128 0x21
 9866 00ac 00       		.byte	0
 9867 00ad 49       		.uleb128 0x49
 9868 00ae 13       		.uleb128 0x13
 9869 00af 2F       		.uleb128 0x2f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 220


 9870 00b0 0B       		.uleb128 0xb
 9871 00b1 00       		.byte	0
 9872 00b2 00       		.byte	0
 9873 00b3 10       		.uleb128 0x10
 9874 00b4 13       		.uleb128 0x13
 9875 00b5 01       		.byte	0x1
 9876 00b6 03       		.uleb128 0x3
 9877 00b7 0E       		.uleb128 0xe
 9878 00b8 0B       		.uleb128 0xb
 9879 00b9 0B       		.uleb128 0xb
 9880 00ba 3A       		.uleb128 0x3a
 9881 00bb 0B       		.uleb128 0xb
 9882 00bc 3B       		.uleb128 0x3b
 9883 00bd 05       		.uleb128 0x5
 9884 00be 01       		.uleb128 0x1
 9885 00bf 13       		.uleb128 0x13
 9886 00c0 00       		.byte	0
 9887 00c1 00       		.byte	0
 9888 00c2 11       		.uleb128 0x11
 9889 00c3 0D       		.uleb128 0xd
 9890 00c4 00       		.byte	0
 9891 00c5 03       		.uleb128 0x3
 9892 00c6 0E       		.uleb128 0xe
 9893 00c7 3A       		.uleb128 0x3a
 9894 00c8 0B       		.uleb128 0xb
 9895 00c9 3B       		.uleb128 0x3b
 9896 00ca 05       		.uleb128 0x5
 9897 00cb 49       		.uleb128 0x49
 9898 00cc 13       		.uleb128 0x13
 9899 00cd 38       		.uleb128 0x38
 9900 00ce 0B       		.uleb128 0xb
 9901 00cf 00       		.byte	0
 9902 00d0 00       		.byte	0
 9903 00d1 12       		.uleb128 0x12
 9904 00d2 0D       		.uleb128 0xd
 9905 00d3 00       		.byte	0
 9906 00d4 03       		.uleb128 0x3
 9907 00d5 08       		.uleb128 0x8
 9908 00d6 3A       		.uleb128 0x3a
 9909 00d7 0B       		.uleb128 0xb
 9910 00d8 3B       		.uleb128 0x3b
 9911 00d9 05       		.uleb128 0x5
 9912 00da 49       		.uleb128 0x49
 9913 00db 13       		.uleb128 0x13
 9914 00dc 38       		.uleb128 0x38
 9915 00dd 0B       		.uleb128 0xb
 9916 00de 00       		.byte	0
 9917 00df 00       		.byte	0
 9918 00e0 13       		.uleb128 0x13
 9919 00e1 2E       		.uleb128 0x2e
 9920 00e2 01       		.byte	0x1
 9921 00e3 03       		.uleb128 0x3
 9922 00e4 0E       		.uleb128 0xe
 9923 00e5 3A       		.uleb128 0x3a
 9924 00e6 0B       		.uleb128 0xb
 9925 00e7 3B       		.uleb128 0x3b
 9926 00e8 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 221


 9927 00e9 27       		.uleb128 0x27
 9928 00ea 19       		.uleb128 0x19
 9929 00eb 49       		.uleb128 0x49
 9930 00ec 13       		.uleb128 0x13
 9931 00ed 20       		.uleb128 0x20
 9932 00ee 0B       		.uleb128 0xb
 9933 00ef 01       		.uleb128 0x1
 9934 00f0 13       		.uleb128 0x13
 9935 00f1 00       		.byte	0
 9936 00f2 00       		.byte	0
 9937 00f3 14       		.uleb128 0x14
 9938 00f4 05       		.uleb128 0x5
 9939 00f5 00       		.byte	0
 9940 00f6 03       		.uleb128 0x3
 9941 00f7 0E       		.uleb128 0xe
 9942 00f8 3A       		.uleb128 0x3a
 9943 00f9 0B       		.uleb128 0xb
 9944 00fa 3B       		.uleb128 0x3b
 9945 00fb 05       		.uleb128 0x5
 9946 00fc 49       		.uleb128 0x49
 9947 00fd 13       		.uleb128 0x13
 9948 00fe 00       		.byte	0
 9949 00ff 00       		.byte	0
 9950 0100 15       		.uleb128 0x15
 9951 0101 34       		.uleb128 0x34
 9952 0102 00       		.byte	0
 9953 0103 03       		.uleb128 0x3
 9954 0104 0E       		.uleb128 0xe
 9955 0105 3A       		.uleb128 0x3a
 9956 0106 0B       		.uleb128 0xb
 9957 0107 3B       		.uleb128 0x3b
 9958 0108 05       		.uleb128 0x5
 9959 0109 49       		.uleb128 0x49
 9960 010a 13       		.uleb128 0x13
 9961 010b 00       		.byte	0
 9962 010c 00       		.byte	0
 9963 010d 16       		.uleb128 0x16
 9964 010e 2E       		.uleb128 0x2e
 9965 010f 01       		.byte	0x1
 9966 0110 3F       		.uleb128 0x3f
 9967 0111 19       		.uleb128 0x19
 9968 0112 03       		.uleb128 0x3
 9969 0113 0E       		.uleb128 0xe
 9970 0114 3A       		.uleb128 0x3a
 9971 0115 0B       		.uleb128 0xb
 9972 0116 3B       		.uleb128 0x3b
 9973 0117 0B       		.uleb128 0xb
 9974 0118 27       		.uleb128 0x27
 9975 0119 19       		.uleb128 0x19
 9976 011a 11       		.uleb128 0x11
 9977 011b 01       		.uleb128 0x1
 9978 011c 12       		.uleb128 0x12
 9979 011d 06       		.uleb128 0x6
 9980 011e 40       		.uleb128 0x40
 9981 011f 18       		.uleb128 0x18
 9982 0120 9642     		.uleb128 0x2116
 9983 0122 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 222


 9984 0123 01       		.uleb128 0x1
 9985 0124 13       		.uleb128 0x13
 9986 0125 00       		.byte	0
 9987 0126 00       		.byte	0
 9988 0127 17       		.uleb128 0x17
 9989 0128 34       		.uleb128 0x34
 9990 0129 00       		.byte	0
 9991 012a 03       		.uleb128 0x3
 9992 012b 0E       		.uleb128 0xe
 9993 012c 3A       		.uleb128 0x3a
 9994 012d 0B       		.uleb128 0xb
 9995 012e 3B       		.uleb128 0x3b
 9996 012f 0B       		.uleb128 0xb
 9997 0130 49       		.uleb128 0x49
 9998 0131 13       		.uleb128 0x13
 9999 0132 02       		.uleb128 0x2
 10000 0133 18       		.uleb128 0x18
 10001 0134 00       		.byte	0
 10002 0135 00       		.byte	0
 10003 0136 18       		.uleb128 0x18
 10004 0137 1D       		.uleb128 0x1d
 10005 0138 01       		.byte	0x1
 10006 0139 31       		.uleb128 0x31
 10007 013a 13       		.uleb128 0x13
 10008 013b 11       		.uleb128 0x11
 10009 013c 01       		.uleb128 0x1
 10010 013d 12       		.uleb128 0x12
 10011 013e 06       		.uleb128 0x6
 10012 013f 58       		.uleb128 0x58
 10013 0140 0B       		.uleb128 0xb
 10014 0141 59       		.uleb128 0x59
 10015 0142 0B       		.uleb128 0xb
 10016 0143 01       		.uleb128 0x1
 10017 0144 13       		.uleb128 0x13
 10018 0145 00       		.byte	0
 10019 0146 00       		.byte	0
 10020 0147 19       		.uleb128 0x19
 10021 0148 05       		.uleb128 0x5
 10022 0149 00       		.byte	0
 10023 014a 31       		.uleb128 0x31
 10024 014b 13       		.uleb128 0x13
 10025 014c 02       		.uleb128 0x2
 10026 014d 18       		.uleb128 0x18
 10027 014e 00       		.byte	0
 10028 014f 00       		.byte	0
 10029 0150 1A       		.uleb128 0x1a
 10030 0151 0B       		.uleb128 0xb
 10031 0152 01       		.byte	0x1
 10032 0153 11       		.uleb128 0x11
 10033 0154 01       		.uleb128 0x1
 10034 0155 12       		.uleb128 0x12
 10035 0156 06       		.uleb128 0x6
 10036 0157 00       		.byte	0
 10037 0158 00       		.byte	0
 10038 0159 1B       		.uleb128 0x1b
 10039 015a 34       		.uleb128 0x34
 10040 015b 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 223


 10041 015c 31       		.uleb128 0x31
 10042 015d 13       		.uleb128 0x13
 10043 015e 02       		.uleb128 0x2
 10044 015f 18       		.uleb128 0x18
 10045 0160 00       		.byte	0
 10046 0161 00       		.byte	0
 10047 0162 1C       		.uleb128 0x1c
 10048 0163 1D       		.uleb128 0x1d
 10049 0164 01       		.byte	0x1
 10050 0165 31       		.uleb128 0x31
 10051 0166 13       		.uleb128 0x13
 10052 0167 11       		.uleb128 0x11
 10053 0168 01       		.uleb128 0x1
 10054 0169 12       		.uleb128 0x12
 10055 016a 06       		.uleb128 0x6
 10056 016b 58       		.uleb128 0x58
 10057 016c 0B       		.uleb128 0xb
 10058 016d 59       		.uleb128 0x59
 10059 016e 05       		.uleb128 0x5
 10060 016f 01       		.uleb128 0x1
 10061 0170 13       		.uleb128 0x13
 10062 0171 00       		.byte	0
 10063 0172 00       		.byte	0
 10064 0173 1D       		.uleb128 0x1d
 10065 0174 1D       		.uleb128 0x1d
 10066 0175 01       		.byte	0x1
 10067 0176 31       		.uleb128 0x31
 10068 0177 13       		.uleb128 0x13
 10069 0178 11       		.uleb128 0x11
 10070 0179 01       		.uleb128 0x1
 10071 017a 12       		.uleb128 0x12
 10072 017b 06       		.uleb128 0x6
 10073 017c 58       		.uleb128 0x58
 10074 017d 0B       		.uleb128 0xb
 10075 017e 59       		.uleb128 0x59
 10076 017f 05       		.uleb128 0x5
 10077 0180 00       		.byte	0
 10078 0181 00       		.byte	0
 10079 0182 1E       		.uleb128 0x1e
 10080 0183 2E       		.uleb128 0x2e
 10081 0184 01       		.byte	0x1
 10082 0185 3F       		.uleb128 0x3f
 10083 0186 19       		.uleb128 0x19
 10084 0187 03       		.uleb128 0x3
 10085 0188 0E       		.uleb128 0xe
 10086 0189 3A       		.uleb128 0x3a
 10087 018a 0B       		.uleb128 0xb
 10088 018b 3B       		.uleb128 0x3b
 10089 018c 05       		.uleb128 0x5
 10090 018d 27       		.uleb128 0x27
 10091 018e 19       		.uleb128 0x19
 10092 018f 11       		.uleb128 0x11
 10093 0190 01       		.uleb128 0x1
 10094 0191 12       		.uleb128 0x12
 10095 0192 06       		.uleb128 0x6
 10096 0193 40       		.uleb128 0x40
 10097 0194 18       		.uleb128 0x18
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 224


 10098 0195 9642     		.uleb128 0x2116
 10099 0197 19       		.uleb128 0x19
 10100 0198 01       		.uleb128 0x1
 10101 0199 13       		.uleb128 0x13
 10102 019a 00       		.byte	0
 10103 019b 00       		.byte	0
 10104 019c 1F       		.uleb128 0x1f
 10105 019d 34       		.uleb128 0x34
 10106 019e 00       		.byte	0
 10107 019f 03       		.uleb128 0x3
 10108 01a0 0E       		.uleb128 0xe
 10109 01a1 3A       		.uleb128 0x3a
 10110 01a2 0B       		.uleb128 0xb
 10111 01a3 3B       		.uleb128 0x3b
 10112 01a4 05       		.uleb128 0x5
 10113 01a5 49       		.uleb128 0x49
 10114 01a6 13       		.uleb128 0x13
 10115 01a7 02       		.uleb128 0x2
 10116 01a8 18       		.uleb128 0x18
 10117 01a9 00       		.byte	0
 10118 01aa 00       		.byte	0
 10119 01ab 20       		.uleb128 0x20
 10120 01ac 21       		.uleb128 0x21
 10121 01ad 00       		.byte	0
 10122 01ae 49       		.uleb128 0x49
 10123 01af 13       		.uleb128 0x13
 10124 01b0 2F       		.uleb128 0x2f
 10125 01b1 05       		.uleb128 0x5
 10126 01b2 00       		.byte	0
 10127 01b3 00       		.byte	0
 10128 01b4 21       		.uleb128 0x21
 10129 01b5 2E       		.uleb128 0x2e
 10130 01b6 01       		.byte	0x1
 10131 01b7 3F       		.uleb128 0x3f
 10132 01b8 19       		.uleb128 0x19
 10133 01b9 03       		.uleb128 0x3
 10134 01ba 0E       		.uleb128 0xe
 10135 01bb 3A       		.uleb128 0x3a
 10136 01bc 0B       		.uleb128 0xb
 10137 01bd 3B       		.uleb128 0x3b
 10138 01be 05       		.uleb128 0x5
 10139 01bf 27       		.uleb128 0x27
 10140 01c0 19       		.uleb128 0x19
 10141 01c1 49       		.uleb128 0x49
 10142 01c2 13       		.uleb128 0x13
 10143 01c3 11       		.uleb128 0x11
 10144 01c4 01       		.uleb128 0x1
 10145 01c5 12       		.uleb128 0x12
 10146 01c6 06       		.uleb128 0x6
 10147 01c7 40       		.uleb128 0x40
 10148 01c8 18       		.uleb128 0x18
 10149 01c9 9742     		.uleb128 0x2117
 10150 01cb 19       		.uleb128 0x19
 10151 01cc 01       		.uleb128 0x1
 10152 01cd 13       		.uleb128 0x13
 10153 01ce 00       		.byte	0
 10154 01cf 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 225


 10155 01d0 22       		.uleb128 0x22
 10156 01d1 05       		.uleb128 0x5
 10157 01d2 00       		.byte	0
 10158 01d3 03       		.uleb128 0x3
 10159 01d4 0E       		.uleb128 0xe
 10160 01d5 3A       		.uleb128 0x3a
 10161 01d6 0B       		.uleb128 0xb
 10162 01d7 3B       		.uleb128 0x3b
 10163 01d8 05       		.uleb128 0x5
 10164 01d9 49       		.uleb128 0x49
 10165 01da 13       		.uleb128 0x13
 10166 01db 02       		.uleb128 0x2
 10167 01dc 18       		.uleb128 0x18
 10168 01dd 00       		.byte	0
 10169 01de 00       		.byte	0
 10170 01df 23       		.uleb128 0x23
 10171 01e0 34       		.uleb128 0x34
 10172 01e1 00       		.byte	0
 10173 01e2 03       		.uleb128 0x3
 10174 01e3 08       		.uleb128 0x8
 10175 01e4 3A       		.uleb128 0x3a
 10176 01e5 0B       		.uleb128 0xb
 10177 01e6 3B       		.uleb128 0x3b
 10178 01e7 05       		.uleb128 0x5
 10179 01e8 49       		.uleb128 0x49
 10180 01e9 13       		.uleb128 0x13
 10181 01ea 02       		.uleb128 0x2
 10182 01eb 18       		.uleb128 0x18
 10183 01ec 00       		.byte	0
 10184 01ed 00       		.byte	0
 10185 01ee 24       		.uleb128 0x24
 10186 01ef 0B       		.uleb128 0xb
 10187 01f0 01       		.byte	0x1
 10188 01f1 11       		.uleb128 0x11
 10189 01f2 01       		.uleb128 0x1
 10190 01f3 12       		.uleb128 0x12
 10191 01f4 06       		.uleb128 0x6
 10192 01f5 01       		.uleb128 0x1
 10193 01f6 13       		.uleb128 0x13
 10194 01f7 00       		.byte	0
 10195 01f8 00       		.byte	0
 10196 01f9 25       		.uleb128 0x25
 10197 01fa 21       		.uleb128 0x21
 10198 01fb 00       		.byte	0
 10199 01fc 49       		.uleb128 0x49
 10200 01fd 13       		.uleb128 0x13
 10201 01fe 2F       		.uleb128 0x2f
 10202 01ff 18       		.uleb128 0x18
 10203 0200 00       		.byte	0
 10204 0201 00       		.byte	0
 10205 0202 26       		.uleb128 0x26
 10206 0203 2E       		.uleb128 0x2e
 10207 0204 01       		.byte	0x1
 10208 0205 3F       		.uleb128 0x3f
 10209 0206 19       		.uleb128 0x19
 10210 0207 03       		.uleb128 0x3
 10211 0208 0E       		.uleb128 0xe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 226


 10212 0209 3A       		.uleb128 0x3a
 10213 020a 0B       		.uleb128 0xb
 10214 020b 3B       		.uleb128 0x3b
 10215 020c 05       		.uleb128 0x5
 10216 020d 27       		.uleb128 0x27
 10217 020e 19       		.uleb128 0x19
 10218 020f 11       		.uleb128 0x11
 10219 0210 01       		.uleb128 0x1
 10220 0211 12       		.uleb128 0x12
 10221 0212 06       		.uleb128 0x6
 10222 0213 40       		.uleb128 0x40
 10223 0214 18       		.uleb128 0x18
 10224 0215 9742     		.uleb128 0x2117
 10225 0217 19       		.uleb128 0x19
 10226 0218 01       		.uleb128 0x1
 10227 0219 13       		.uleb128 0x13
 10228 021a 00       		.byte	0
 10229 021b 00       		.byte	0
 10230 021c 27       		.uleb128 0x27
 10231 021d 2E       		.uleb128 0x2e
 10232 021e 00       		.byte	0
 10233 021f 3F       		.uleb128 0x3f
 10234 0220 19       		.uleb128 0x19
 10235 0221 03       		.uleb128 0x3
 10236 0222 0E       		.uleb128 0xe
 10237 0223 3A       		.uleb128 0x3a
 10238 0224 0B       		.uleb128 0xb
 10239 0225 3B       		.uleb128 0x3b
 10240 0226 05       		.uleb128 0x5
 10241 0227 11       		.uleb128 0x11
 10242 0228 01       		.uleb128 0x1
 10243 0229 12       		.uleb128 0x12
 10244 022a 06       		.uleb128 0x6
 10245 022b 40       		.uleb128 0x40
 10246 022c 18       		.uleb128 0x18
 10247 022d 9742     		.uleb128 0x2117
 10248 022f 19       		.uleb128 0x19
 10249 0230 00       		.byte	0
 10250 0231 00       		.byte	0
 10251 0232 28       		.uleb128 0x28
 10252 0233 05       		.uleb128 0x5
 10253 0234 00       		.byte	0
 10254 0235 03       		.uleb128 0x3
 10255 0236 08       		.uleb128 0x8
 10256 0237 3A       		.uleb128 0x3a
 10257 0238 0B       		.uleb128 0xb
 10258 0239 3B       		.uleb128 0x3b
 10259 023a 05       		.uleb128 0x5
 10260 023b 49       		.uleb128 0x49
 10261 023c 13       		.uleb128 0x13
 10262 023d 02       		.uleb128 0x2
 10263 023e 18       		.uleb128 0x18
 10264 023f 00       		.byte	0
 10265 0240 00       		.byte	0
 10266 0241 29       		.uleb128 0x29
 10267 0242 2E       		.uleb128 0x2e
 10268 0243 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 227


 10269 0244 3F       		.uleb128 0x3f
 10270 0245 19       		.uleb128 0x19
 10271 0246 03       		.uleb128 0x3
 10272 0247 0E       		.uleb128 0xe
 10273 0248 3A       		.uleb128 0x3a
 10274 0249 0B       		.uleb128 0xb
 10275 024a 3B       		.uleb128 0x3b
 10276 024b 05       		.uleb128 0x5
 10277 024c 27       		.uleb128 0x27
 10278 024d 19       		.uleb128 0x19
 10279 024e 49       		.uleb128 0x49
 10280 024f 13       		.uleb128 0x13
 10281 0250 11       		.uleb128 0x11
 10282 0251 01       		.uleb128 0x1
 10283 0252 12       		.uleb128 0x12
 10284 0253 06       		.uleb128 0x6
 10285 0254 40       		.uleb128 0x40
 10286 0255 18       		.uleb128 0x18
 10287 0256 9642     		.uleb128 0x2116
 10288 0258 19       		.uleb128 0x19
 10289 0259 01       		.uleb128 0x1
 10290 025a 13       		.uleb128 0x13
 10291 025b 00       		.byte	0
 10292 025c 00       		.byte	0
 10293 025d 2A       		.uleb128 0x2a
 10294 025e 2E       		.uleb128 0x2e
 10295 025f 00       		.byte	0
 10296 0260 3F       		.uleb128 0x3f
 10297 0261 19       		.uleb128 0x19
 10298 0262 03       		.uleb128 0x3
 10299 0263 0E       		.uleb128 0xe
 10300 0264 3A       		.uleb128 0x3a
 10301 0265 0B       		.uleb128 0xb
 10302 0266 3B       		.uleb128 0x3b
 10303 0267 05       		.uleb128 0x5
 10304 0268 27       		.uleb128 0x27
 10305 0269 19       		.uleb128 0x19
 10306 026a 49       		.uleb128 0x49
 10307 026b 13       		.uleb128 0x13
 10308 026c 11       		.uleb128 0x11
 10309 026d 01       		.uleb128 0x1
 10310 026e 12       		.uleb128 0x12
 10311 026f 06       		.uleb128 0x6
 10312 0270 40       		.uleb128 0x40
 10313 0271 18       		.uleb128 0x18
 10314 0272 9642     		.uleb128 0x2116
 10315 0274 19       		.uleb128 0x19
 10316 0275 00       		.byte	0
 10317 0276 00       		.byte	0
 10318 0277 2B       		.uleb128 0x2b
 10319 0278 2E       		.uleb128 0x2e
 10320 0279 00       		.byte	0
 10321 027a 3F       		.uleb128 0x3f
 10322 027b 19       		.uleb128 0x19
 10323 027c 03       		.uleb128 0x3
 10324 027d 0E       		.uleb128 0xe
 10325 027e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 228


 10326 027f 0B       		.uleb128 0xb
 10327 0280 3B       		.uleb128 0x3b
 10328 0281 05       		.uleb128 0x5
 10329 0282 27       		.uleb128 0x27
 10330 0283 19       		.uleb128 0x19
 10331 0284 11       		.uleb128 0x11
 10332 0285 01       		.uleb128 0x1
 10333 0286 12       		.uleb128 0x12
 10334 0287 06       		.uleb128 0x6
 10335 0288 40       		.uleb128 0x40
 10336 0289 18       		.uleb128 0x18
 10337 028a 9742     		.uleb128 0x2117
 10338 028c 19       		.uleb128 0x19
 10339 028d 00       		.byte	0
 10340 028e 00       		.byte	0
 10341 028f 2C       		.uleb128 0x2c
 10342 0290 2E       		.uleb128 0x2e
 10343 0291 01       		.byte	0x1
 10344 0292 3F       		.uleb128 0x3f
 10345 0293 19       		.uleb128 0x19
 10346 0294 03       		.uleb128 0x3
 10347 0295 0E       		.uleb128 0xe
 10348 0296 3A       		.uleb128 0x3a
 10349 0297 0B       		.uleb128 0xb
 10350 0298 3B       		.uleb128 0x3b
 10351 0299 05       		.uleb128 0x5
 10352 029a 11       		.uleb128 0x11
 10353 029b 01       		.uleb128 0x1
 10354 029c 12       		.uleb128 0x12
 10355 029d 06       		.uleb128 0x6
 10356 029e 40       		.uleb128 0x40
 10357 029f 18       		.uleb128 0x18
 10358 02a0 9642     		.uleb128 0x2116
 10359 02a2 19       		.uleb128 0x19
 10360 02a3 01       		.uleb128 0x1
 10361 02a4 13       		.uleb128 0x13
 10362 02a5 00       		.byte	0
 10363 02a6 00       		.byte	0
 10364 02a7 2D       		.uleb128 0x2d
 10365 02a8 2E       		.uleb128 0x2e
 10366 02a9 01       		.byte	0x1
 10367 02aa 3F       		.uleb128 0x3f
 10368 02ab 19       		.uleb128 0x19
 10369 02ac 03       		.uleb128 0x3
 10370 02ad 0E       		.uleb128 0xe
 10371 02ae 3A       		.uleb128 0x3a
 10372 02af 0B       		.uleb128 0xb
 10373 02b0 3B       		.uleb128 0x3b
 10374 02b1 05       		.uleb128 0x5
 10375 02b2 49       		.uleb128 0x49
 10376 02b3 13       		.uleb128 0x13
 10377 02b4 11       		.uleb128 0x11
 10378 02b5 01       		.uleb128 0x1
 10379 02b6 12       		.uleb128 0x12
 10380 02b7 06       		.uleb128 0x6
 10381 02b8 40       		.uleb128 0x40
 10382 02b9 18       		.uleb128 0x18
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 229


 10383 02ba 9642     		.uleb128 0x2116
 10384 02bc 19       		.uleb128 0x19
 10385 02bd 01       		.uleb128 0x1
 10386 02be 13       		.uleb128 0x13
 10387 02bf 00       		.byte	0
 10388 02c0 00       		.byte	0
 10389 02c1 2E       		.uleb128 0x2e
 10390 02c2 2E       		.uleb128 0x2e
 10391 02c3 00       		.byte	0
 10392 02c4 3F       		.uleb128 0x3f
 10393 02c5 19       		.uleb128 0x19
 10394 02c6 03       		.uleb128 0x3
 10395 02c7 0E       		.uleb128 0xe
 10396 02c8 3A       		.uleb128 0x3a
 10397 02c9 0B       		.uleb128 0xb
 10398 02ca 3B       		.uleb128 0x3b
 10399 02cb 05       		.uleb128 0x5
 10400 02cc 49       		.uleb128 0x49
 10401 02cd 13       		.uleb128 0x13
 10402 02ce 11       		.uleb128 0x11
 10403 02cf 01       		.uleb128 0x1
 10404 02d0 12       		.uleb128 0x12
 10405 02d1 06       		.uleb128 0x6
 10406 02d2 40       		.uleb128 0x40
 10407 02d3 18       		.uleb128 0x18
 10408 02d4 9742     		.uleb128 0x2117
 10409 02d6 19       		.uleb128 0x19
 10410 02d7 00       		.byte	0
 10411 02d8 00       		.byte	0
 10412 02d9 2F       		.uleb128 0x2f
 10413 02da 2E       		.uleb128 0x2e
 10414 02db 00       		.byte	0
 10415 02dc 3F       		.uleb128 0x3f
 10416 02dd 19       		.uleb128 0x19
 10417 02de 03       		.uleb128 0x3
 10418 02df 0E       		.uleb128 0xe
 10419 02e0 3A       		.uleb128 0x3a
 10420 02e1 0B       		.uleb128 0xb
 10421 02e2 3B       		.uleb128 0x3b
 10422 02e3 05       		.uleb128 0x5
 10423 02e4 11       		.uleb128 0x11
 10424 02e5 01       		.uleb128 0x1
 10425 02e6 12       		.uleb128 0x12
 10426 02e7 06       		.uleb128 0x6
 10427 02e8 40       		.uleb128 0x40
 10428 02e9 18       		.uleb128 0x18
 10429 02ea 9642     		.uleb128 0x2116
 10430 02ec 19       		.uleb128 0x19
 10431 02ed 00       		.byte	0
 10432 02ee 00       		.byte	0
 10433 02ef 30       		.uleb128 0x30
 10434 02f0 34       		.uleb128 0x34
 10435 02f1 00       		.byte	0
 10436 02f2 03       		.uleb128 0x3
 10437 02f3 0E       		.uleb128 0xe
 10438 02f4 3A       		.uleb128 0x3a
 10439 02f5 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 230


 10440 02f6 3B       		.uleb128 0x3b
 10441 02f7 05       		.uleb128 0x5
 10442 02f8 49       		.uleb128 0x49
 10443 02f9 13       		.uleb128 0x13
 10444 02fa 3F       		.uleb128 0x3f
 10445 02fb 19       		.uleb128 0x19
 10446 02fc 3C       		.uleb128 0x3c
 10447 02fd 19       		.uleb128 0x19
 10448 02fe 00       		.byte	0
 10449 02ff 00       		.byte	0
 10450 0300 31       		.uleb128 0x31
 10451 0301 34       		.uleb128 0x34
 10452 0302 00       		.byte	0
 10453 0303 03       		.uleb128 0x3
 10454 0304 0E       		.uleb128 0xe
 10455 0305 3A       		.uleb128 0x3a
 10456 0306 0B       		.uleb128 0xb
 10457 0307 3B       		.uleb128 0x3b
 10458 0308 0B       		.uleb128 0xb
 10459 0309 49       		.uleb128 0x49
 10460 030a 13       		.uleb128 0x13
 10461 030b 3F       		.uleb128 0x3f
 10462 030c 19       		.uleb128 0x19
 10463 030d 02       		.uleb128 0x2
 10464 030e 18       		.uleb128 0x18
 10465 030f 00       		.byte	0
 10466 0310 00       		.byte	0
 10467 0311 00       		.byte	0
 10468              		.section	.debug_aranges,"",%progbits
 10469 0000 0C020000 		.4byte	0x20c
 10470 0004 0200     		.2byte	0x2
 10471 0006 00000000 		.4byte	.Ldebug_info0
 10472 000a 04       		.byte	0x4
 10473 000b 00       		.byte	0
 10474 000c 0000     		.2byte	0
 10475 000e 0000     		.2byte	0
 10476 0010 00000000 		.4byte	.LFB64
 10477 0014 BC050000 		.4byte	.LFE64-.LFB64
 10478 0018 00000000 		.4byte	.LFB65
 10479 001c 22000000 		.4byte	.LFE65-.LFB65
 10480 0020 00000000 		.4byte	.LFB66
 10481 0024 5E000000 		.4byte	.LFE66-.LFB66
 10482 0028 00000000 		.4byte	.LFB67
 10483 002c 64010000 		.4byte	.LFE67-.LFB67
 10484 0030 00000000 		.4byte	.LFB68
 10485 0034 BC070000 		.4byte	.LFE68-.LFB68
 10486 0038 00000000 		.4byte	.LFB69
 10487 003c 34070000 		.4byte	.LFE69-.LFB69
 10488 0040 00000000 		.4byte	.LFB70
 10489 0044 34010000 		.4byte	.LFE70-.LFB70
 10490 0048 00000000 		.4byte	.LFB71
 10491 004c 14000000 		.4byte	.LFE71-.LFB71
 10492 0050 00000000 		.4byte	.LFB72
 10493 0054 0C000000 		.4byte	.LFE72-.LFB72
 10494 0058 00000000 		.4byte	.LFB73
 10495 005c E8030000 		.4byte	.LFE73-.LFB73
 10496 0060 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 231


 10497 0064 E0010000 		.4byte	.LFE74-.LFB74
 10498 0068 00000000 		.4byte	.LFB75
 10499 006c 12000000 		.4byte	.LFE75-.LFB75
 10500 0070 00000000 		.4byte	.LFB76
 10501 0074 12000000 		.4byte	.LFE76-.LFB76
 10502 0078 00000000 		.4byte	.LFB77
 10503 007c 12000000 		.4byte	.LFE77-.LFB77
 10504 0080 00000000 		.4byte	.LFB78
 10505 0084 12000000 		.4byte	.LFE78-.LFB78
 10506 0088 00000000 		.4byte	.LFB79
 10507 008c 12000000 		.4byte	.LFE79-.LFB79
 10508 0090 00000000 		.4byte	.LFB80
 10509 0094 12000000 		.4byte	.LFE80-.LFB80
 10510 0098 00000000 		.4byte	.LFB81
 10511 009c 12000000 		.4byte	.LFE81-.LFB81
 10512 00a0 00000000 		.4byte	.LFB82
 10513 00a4 84000000 		.4byte	.LFE82-.LFB82
 10514 00a8 00000000 		.4byte	.LFB83
 10515 00ac 88000000 		.4byte	.LFE83-.LFB83
 10516 00b0 00000000 		.4byte	.LFB84
 10517 00b4 A0000000 		.4byte	.LFE84-.LFB84
 10518 00b8 00000000 		.4byte	.LFB85
 10519 00bc 3E000000 		.4byte	.LFE85-.LFB85
 10520 00c0 00000000 		.4byte	.LFB86
 10521 00c4 2E000000 		.4byte	.LFE86-.LFB86
 10522 00c8 00000000 		.4byte	.LFB87
 10523 00cc 90000000 		.4byte	.LFE87-.LFB87
 10524 00d0 00000000 		.4byte	.LFB88
 10525 00d4 60000000 		.4byte	.LFE88-.LFB88
 10526 00d8 00000000 		.4byte	.LFB89
 10527 00dc 58000000 		.4byte	.LFE89-.LFB89
 10528 00e0 00000000 		.4byte	.LFB90
 10529 00e4 CC000000 		.4byte	.LFE90-.LFB90
 10530 00e8 00000000 		.4byte	.LFB91
 10531 00ec 0C000000 		.4byte	.LFE91-.LFB91
 10532 00f0 00000000 		.4byte	.LFB92
 10533 00f4 0C000000 		.4byte	.LFE92-.LFB92
 10534 00f8 00000000 		.4byte	.LFB93
 10535 00fc 0C000000 		.4byte	.LFE93-.LFB93
 10536 0100 00000000 		.4byte	.LFB94
 10537 0104 0C000000 		.4byte	.LFE94-.LFB94
 10538 0108 00000000 		.4byte	.LFB95
 10539 010c 0C000000 		.4byte	.LFE95-.LFB95
 10540 0110 00000000 		.4byte	.LFB96
 10541 0114 0C000000 		.4byte	.LFE96-.LFB96
 10542 0118 00000000 		.4byte	.LFB97
 10543 011c 0C000000 		.4byte	.LFE97-.LFB97
 10544 0120 00000000 		.4byte	.LFB98
 10545 0124 0C000000 		.4byte	.LFE98-.LFB98
 10546 0128 00000000 		.4byte	.LFB99
 10547 012c 0C000000 		.4byte	.LFE99-.LFB99
 10548 0130 00000000 		.4byte	.LFB100
 10549 0134 0C000000 		.4byte	.LFE100-.LFB100
 10550 0138 00000000 		.4byte	.LFB101
 10551 013c 0C000000 		.4byte	.LFE101-.LFB101
 10552 0140 00000000 		.4byte	.LFB102
 10553 0144 0C000000 		.4byte	.LFE102-.LFB102
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 232


 10554 0148 00000000 		.4byte	.LFB103
 10555 014c 0C000000 		.4byte	.LFE103-.LFB103
 10556 0150 00000000 		.4byte	.LFB104
 10557 0154 0C000000 		.4byte	.LFE104-.LFB104
 10558 0158 00000000 		.4byte	.LFB105
 10559 015c 0C000000 		.4byte	.LFE105-.LFB105
 10560 0160 00000000 		.4byte	.LFB106
 10561 0164 C4000000 		.4byte	.LFE106-.LFB106
 10562 0168 00000000 		.4byte	.LFB107
 10563 016c A8000000 		.4byte	.LFE107-.LFB107
 10564 0170 00000000 		.4byte	.LFB108
 10565 0174 0C000000 		.4byte	.LFE108-.LFB108
 10566 0178 00000000 		.4byte	.LFB109
 10567 017c 20000000 		.4byte	.LFE109-.LFB109
 10568 0180 00000000 		.4byte	.LFB110
 10569 0184 0C000000 		.4byte	.LFE110-.LFB110
 10570 0188 00000000 		.4byte	.LFB111
 10571 018c 94000000 		.4byte	.LFE111-.LFB111
 10572 0190 00000000 		.4byte	.LFB112
 10573 0194 60000000 		.4byte	.LFE112-.LFB112
 10574 0198 00000000 		.4byte	.LFB113
 10575 019c 0C000000 		.4byte	.LFE113-.LFB113
 10576 01a0 00000000 		.4byte	.LFB114
 10577 01a4 0C000000 		.4byte	.LFE114-.LFB114
 10578 01a8 00000000 		.4byte	.LFB115
 10579 01ac 0C000000 		.4byte	.LFE115-.LFB115
 10580 01b0 00000000 		.4byte	.LFB116
 10581 01b4 0C000000 		.4byte	.LFE116-.LFB116
 10582 01b8 00000000 		.4byte	.LFB117
 10583 01bc 0C000000 		.4byte	.LFE117-.LFB117
 10584 01c0 00000000 		.4byte	.LFB118
 10585 01c4 54010000 		.4byte	.LFE118-.LFB118
 10586 01c8 00000000 		.4byte	.LFB119
 10587 01cc 14000000 		.4byte	.LFE119-.LFB119
 10588 01d0 00000000 		.4byte	.LFB120
 10589 01d4 50010000 		.4byte	.LFE120-.LFB120
 10590 01d8 00000000 		.4byte	.LFB121
 10591 01dc A0010000 		.4byte	.LFE121-.LFB121
 10592 01e0 00000000 		.4byte	.LFB122
 10593 01e4 0E000000 		.4byte	.LFE122-.LFB122
 10594 01e8 00000000 		.4byte	.LFB123
 10595 01ec 12000000 		.4byte	.LFE123-.LFB123
 10596 01f0 00000000 		.4byte	.LFB124
 10597 01f4 84000000 		.4byte	.LFE124-.LFB124
 10598 01f8 00000000 		.4byte	.LFB125
 10599 01fc 30000000 		.4byte	.LFE125-.LFB125
 10600 0200 00000000 		.4byte	.LFB126
 10601 0204 0C000000 		.4byte	.LFE126-.LFB126
 10602 0208 00000000 		.4byte	0
 10603 020c 00000000 		.4byte	0
 10604              		.section	.debug_ranges,"",%progbits
 10605              	.Ldebug_ranges0:
 10606 0000 00000000 		.4byte	.LFB64
 10607 0004 BC050000 		.4byte	.LFE64
 10608 0008 00000000 		.4byte	.LFB65
 10609 000c 22000000 		.4byte	.LFE65
 10610 0010 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 233


 10611 0014 5E000000 		.4byte	.LFE66
 10612 0018 00000000 		.4byte	.LFB67
 10613 001c 64010000 		.4byte	.LFE67
 10614 0020 00000000 		.4byte	.LFB68
 10615 0024 BC070000 		.4byte	.LFE68
 10616 0028 00000000 		.4byte	.LFB69
 10617 002c 34070000 		.4byte	.LFE69
 10618 0030 00000000 		.4byte	.LFB70
 10619 0034 34010000 		.4byte	.LFE70
 10620 0038 00000000 		.4byte	.LFB71
 10621 003c 14000000 		.4byte	.LFE71
 10622 0040 00000000 		.4byte	.LFB72
 10623 0044 0C000000 		.4byte	.LFE72
 10624 0048 00000000 		.4byte	.LFB73
 10625 004c E8030000 		.4byte	.LFE73
 10626 0050 00000000 		.4byte	.LFB74
 10627 0054 E0010000 		.4byte	.LFE74
 10628 0058 00000000 		.4byte	.LFB75
 10629 005c 12000000 		.4byte	.LFE75
 10630 0060 00000000 		.4byte	.LFB76
 10631 0064 12000000 		.4byte	.LFE76
 10632 0068 00000000 		.4byte	.LFB77
 10633 006c 12000000 		.4byte	.LFE77
 10634 0070 00000000 		.4byte	.LFB78
 10635 0074 12000000 		.4byte	.LFE78
 10636 0078 00000000 		.4byte	.LFB79
 10637 007c 12000000 		.4byte	.LFE79
 10638 0080 00000000 		.4byte	.LFB80
 10639 0084 12000000 		.4byte	.LFE80
 10640 0088 00000000 		.4byte	.LFB81
 10641 008c 12000000 		.4byte	.LFE81
 10642 0090 00000000 		.4byte	.LFB82
 10643 0094 84000000 		.4byte	.LFE82
 10644 0098 00000000 		.4byte	.LFB83
 10645 009c 88000000 		.4byte	.LFE83
 10646 00a0 00000000 		.4byte	.LFB84
 10647 00a4 A0000000 		.4byte	.LFE84
 10648 00a8 00000000 		.4byte	.LFB85
 10649 00ac 3E000000 		.4byte	.LFE85
 10650 00b0 00000000 		.4byte	.LFB86
 10651 00b4 2E000000 		.4byte	.LFE86
 10652 00b8 00000000 		.4byte	.LFB87
 10653 00bc 90000000 		.4byte	.LFE87
 10654 00c0 00000000 		.4byte	.LFB88
 10655 00c4 60000000 		.4byte	.LFE88
 10656 00c8 00000000 		.4byte	.LFB89
 10657 00cc 58000000 		.4byte	.LFE89
 10658 00d0 00000000 		.4byte	.LFB90
 10659 00d4 CC000000 		.4byte	.LFE90
 10660 00d8 00000000 		.4byte	.LFB91
 10661 00dc 0C000000 		.4byte	.LFE91
 10662 00e0 00000000 		.4byte	.LFB92
 10663 00e4 0C000000 		.4byte	.LFE92
 10664 00e8 00000000 		.4byte	.LFB93
 10665 00ec 0C000000 		.4byte	.LFE93
 10666 00f0 00000000 		.4byte	.LFB94
 10667 00f4 0C000000 		.4byte	.LFE94
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 234


 10668 00f8 00000000 		.4byte	.LFB95
 10669 00fc 0C000000 		.4byte	.LFE95
 10670 0100 00000000 		.4byte	.LFB96
 10671 0104 0C000000 		.4byte	.LFE96
 10672 0108 00000000 		.4byte	.LFB97
 10673 010c 0C000000 		.4byte	.LFE97
 10674 0110 00000000 		.4byte	.LFB98
 10675 0114 0C000000 		.4byte	.LFE98
 10676 0118 00000000 		.4byte	.LFB99
 10677 011c 0C000000 		.4byte	.LFE99
 10678 0120 00000000 		.4byte	.LFB100
 10679 0124 0C000000 		.4byte	.LFE100
 10680 0128 00000000 		.4byte	.LFB101
 10681 012c 0C000000 		.4byte	.LFE101
 10682 0130 00000000 		.4byte	.LFB102
 10683 0134 0C000000 		.4byte	.LFE102
 10684 0138 00000000 		.4byte	.LFB103
 10685 013c 0C000000 		.4byte	.LFE103
 10686 0140 00000000 		.4byte	.LFB104
 10687 0144 0C000000 		.4byte	.LFE104
 10688 0148 00000000 		.4byte	.LFB105
 10689 014c 0C000000 		.4byte	.LFE105
 10690 0150 00000000 		.4byte	.LFB106
 10691 0154 C4000000 		.4byte	.LFE106
 10692 0158 00000000 		.4byte	.LFB107
 10693 015c A8000000 		.4byte	.LFE107
 10694 0160 00000000 		.4byte	.LFB108
 10695 0164 0C000000 		.4byte	.LFE108
 10696 0168 00000000 		.4byte	.LFB109
 10697 016c 20000000 		.4byte	.LFE109
 10698 0170 00000000 		.4byte	.LFB110
 10699 0174 0C000000 		.4byte	.LFE110
 10700 0178 00000000 		.4byte	.LFB111
 10701 017c 94000000 		.4byte	.LFE111
 10702 0180 00000000 		.4byte	.LFB112
 10703 0184 60000000 		.4byte	.LFE112
 10704 0188 00000000 		.4byte	.LFB113
 10705 018c 0C000000 		.4byte	.LFE113
 10706 0190 00000000 		.4byte	.LFB114
 10707 0194 0C000000 		.4byte	.LFE114
 10708 0198 00000000 		.4byte	.LFB115
 10709 019c 0C000000 		.4byte	.LFE115
 10710 01a0 00000000 		.4byte	.LFB116
 10711 01a4 0C000000 		.4byte	.LFE116
 10712 01a8 00000000 		.4byte	.LFB117
 10713 01ac 0C000000 		.4byte	.LFE117
 10714 01b0 00000000 		.4byte	.LFB118
 10715 01b4 54010000 		.4byte	.LFE118
 10716 01b8 00000000 		.4byte	.LFB119
 10717 01bc 14000000 		.4byte	.LFE119
 10718 01c0 00000000 		.4byte	.LFB120
 10719 01c4 50010000 		.4byte	.LFE120
 10720 01c8 00000000 		.4byte	.LFB121
 10721 01cc A0010000 		.4byte	.LFE121
 10722 01d0 00000000 		.4byte	.LFB122
 10723 01d4 0E000000 		.4byte	.LFE122
 10724 01d8 00000000 		.4byte	.LFB123
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 235


 10725 01dc 12000000 		.4byte	.LFE123
 10726 01e0 00000000 		.4byte	.LFB124
 10727 01e4 84000000 		.4byte	.LFE124
 10728 01e8 00000000 		.4byte	.LFB125
 10729 01ec 30000000 		.4byte	.LFE125
 10730 01f0 00000000 		.4byte	.LFB126
 10731 01f4 0C000000 		.4byte	.LFE126
 10732 01f8 00000000 		.4byte	0
 10733 01fc 00000000 		.4byte	0
 10734              		.section	.debug_line,"",%progbits
 10735              	.Ldebug_line0:
 10736 0000 D60A0000 		.section	.debug_str,"MS",%progbits,1
 10736      02008B01 
 10736      00000201 
 10736      FB0E0D00 
 10736      01010101 
 10737              	.LASF160:
 10738 0000 696E666F 		.ascii	"infoSend\000"
 10738      53656E64 
 10738      00
 10739              	.LASF48:
 10740 0009 4D454E55 		.ascii	"MENU_Y_N\000"
 10740      5F595F4E 
 10740      00
 10741              	.LASF174:
 10742 0012 73747269 		.ascii	"string_length\000"
 10742      6E675F6C 
 10742      656E6774 
 10742      6800
 10743              	.LASF24:
 10744 0020 73697A65 		.ascii	"sizetype\000"
 10744      74797065 
 10744      00
 10745              	.LASF66:
 10746 0029 434D445F 		.ascii	"CMD_INIT_MEM\000"
 10746      494E4954 
 10746      5F4D454D 
 10746      00
 10747              	.LASF99:
 10748 0036 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 10748      545F4D4F 
 10748      44455F45 
 10748      4D475F46 
 10748      4346535F 
 10749              	.LASF46:
 10750 004e 4D454E55 		.ascii	"MENU_INPUT\000"
 10750      5F494E50 
 10750      555400
 10751              	.LASF273:
 10752 0059 73746F70 		.ascii	"stop_master_device\000"
 10752      5F6D6173 
 10752      7465725F 
 10752      64657669 
 10752      636500
 10753              	.LASF11:
 10754 006c 696E7433 		.ascii	"int32_t\000"
 10754      325F7400 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 236


 10755              	.LASF278:
 10756 0074 675F7278 		.ascii	"g_rx\000"
 10756      00
 10757              	.LASF119:
 10758 0079 73745F64 		.ascii	"st_data\000"
 10758      61746100 
 10759              	.LASF221:
 10760 0081 77726974 		.ascii	"writeStatus\000"
 10760      65537461 
 10760      74757300 
 10761              	.LASF15:
 10762 008d 75696E74 		.ascii	"uint32\000"
 10762      333200
 10763              	.LASF247:
 10764 0094 636D645F 		.ascii	"cmd_set_baudrate\000"
 10764      7365745F 
 10764      62617564 
 10764      72617465 
 10764      00
 10765              	.LASF263:
 10766 00a5 6169725F 		.ascii	"air_chambers_control\000"
 10766      6368616D 
 10766      62657273 
 10766      5F636F6E 
 10766      74726F6C 
 10767              	.LASF200:
 10768 00ba 70726570 		.ascii	"prepare_generic_info\000"
 10768      6172655F 
 10768      67656E65 
 10768      7269635F 
 10768      696E666F 
 10769              	.LASF186:
 10770 00cf 4E554D5F 		.ascii	"NUM_MENUs\000"
 10770      4D454E55 
 10770      7300
 10771              	.LASF124:
 10772 00d9 706F735F 		.ascii	"pos_lim_inf\000"
 10772      6C696D5F 
 10772      696E6600 
 10773              	.LASF164:
 10774 00e5 54595045 		.ascii	"TYPE\000"
 10774      00
 10775              	.LASF147:
 10776 00ea 63686F69 		.ascii	"choice\000"
 10776      636500
 10777              	.LASF33:
 10778 00f1 43555354 		.ascii	"CUSTOM_RESET_COUNT\000"
 10778      4F4D5F52 
 10778      45534554 
 10778      5F434F55 
 10778      4E5400
 10779              	.LASF98:
 10780 0104 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 10780      545F4D4F 
 10780      44455F45 
 10780      4D475F46 
 10780      43465300 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 237


 10781              	.LASF253:
 10782 0118 636D645F 		.ascii	"cmd_get_imu_readings\000"
 10782      6765745F 
 10782      696D755F 
 10782      72656164 
 10782      696E6773 
 10783              	.LASF132:
 10784 012d 73745F4D 		.ascii	"st_MASTER_spec\000"
 10784      41535445 
 10784      525F7370 
 10784      656300
 10785              	.LASF152:
 10786 013c 50415241 		.ascii	"PARAM_STR\000"
 10786      4D5F5354 
 10786      5200
 10787              	.LASF97:
 10788 0146 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 10788      545F4D4F 
 10788      44455F45 
 10788      4D475F49 
 10788      4E544547 
 10789              	.LASF199:
 10790 015e 6D5F746D 		.ascii	"m_tmp\000"
 10790      7000
 10791              	.LASF184:
 10792 0164 50415241 		.ascii	"PARAM_IDX\000"
 10792      4D5F4944 
 10792      5800
 10793              	.LASF16:
 10794 016e 696E7438 		.ascii	"int8\000"
 10794      00
 10795              	.LASF167:
 10796 0173 6765745F 		.ascii	"get_param_list\000"
 10796      70617261 
 10796      6D5F6C69 
 10796      737400
 10797              	.LASF233:
 10798 0182 636D645F 		.ascii	"cmd_get_accelerations\000"
 10798      6765745F 
 10798      61636365 
 10798      6C657261 
 10798      74696F6E 
 10799              	.LASF252:
 10800 0198 636D645F 		.ascii	"cmd_get_emg\000"
 10800      6765745F 
 10800      656D6700 
 10801              	.LASF127:
 10802 01a4 73745F65 		.ascii	"st_emg\000"
 10802      6D6700
 10803              	.LASF39:
 10804 01ab 43555354 		.ascii	"CUSTOM_MEAS_OFF_2\000"
 10804      4F4D5F4D 
 10804      4541535F 
 10804      4F46465F 
 10804      3200
 10805              	.LASF292:
 10806 01bd 50756D70 		.ascii	"Pump_refNew\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 238


 10806      5F726566 
 10806      4E657700 
 10807              	.LASF301:
 10808 01c9 72657375 		.ascii	"result\000"
 10808      6C7400
 10809              	.LASF118:
 10810 01d0 72656164 		.ascii	"ready\000"
 10810      7900
 10811              	.LASF176:
 10812 01d6 6175785F 		.ascii	"aux_str1\000"
 10812      73747231 
 10812      00
 10813              	.LASF29:
 10814 01df 43555354 		.ascii	"CUSTOM_POS_LIM\000"
 10814      4F4D5F50 
 10814      4F535F4C 
 10814      494D00
 10815              	.LASF84:
 10816 01ee 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 10816      4745545F 
 10816      4A4F5953 
 10816      5449434B 
 10816      00
 10817              	.LASF96:
 10818 01ff 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 10818      545F4D4F 
 10818      44455F45 
 10818      4D475F50 
 10818      524F504F 
 10819              	.LASF242:
 10820 021b 745F7374 		.ascii	"t_start\000"
 10820      61727400 
 10821              	.LASF144:
 10822 0223 6D656E75 		.ascii	"menu\000"
 10822      00
 10823              	.LASF293:
 10824 0228 50574D5F 		.ascii	"PWM_IMU_1\000"
 10824      494D555F 
 10824      3100
 10825              	.LASF294:
 10826 0232 50574D5F 		.ascii	"PWM_IMU_2\000"
 10826      494D555F 
 10826      3200
 10827              	.LASF281:
 10828 023c 74696D65 		.ascii	"timer_value\000"
 10828      725F7661 
 10828      6C756500 
 10829              	.LASF4:
 10830 0248 6C6F6E67 		.ascii	"long int\000"
 10830      20696E74 
 10830      00
 10831              	.LASF37:
 10832 0251 43555354 		.ascii	"CUSTOM_CURR_PID_2\000"
 10832      4F4D5F43 
 10832      5552525F 
 10832      5049445F 
 10832      3200
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 239


 10833              	.LASF258:
 10834 0263 636D645F 		.ascii	"cmd_get_SD_file\000"
 10834      6765745F 
 10834      53445F66 
 10834      696C6500 
 10835              	.LASF228:
 10836 0273 7365745A 		.ascii	"setZeros\000"
 10836      65726F73 
 10836      00
 10837              	.LASF122:
 10838 027c 756E7573 		.ascii	"unused_bytes\000"
 10838      65645F62 
 10838      79746573 
 10838      00
 10839              	.LASF151:
 10840 0289 4E554D5F 		.ascii	"NUM_ITEMS\000"
 10840      4954454D 
 10840      5300
 10841              	.LASF185:
 10842 0293 4D454D5F 		.ascii	"MEM_P\000"
 10842      5000
 10843              	.LASF256:
 10844 0299 636D645F 		.ascii	"cmd_get_ADC_map\000"
 10844      6765745F 
 10844      4144435F 
 10844      6D617000 
 10845              	.LASF74:
 10846 02a9 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 10846      4745545F 
 10846      43555252 
 10846      454E5453 
 10846      00
 10847              	.LASF206:
 10848 02ba 70726570 		.ascii	"prepare_SD_EMG_history\000"
 10848      6172655F 
 10848      53445F45 
 10848      4D475F68 
 10848      6973746F 
 10849              	.LASF257:
 10850 02d1 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 10850      6765745F 
 10850      4144435F 
 10850      72617700 
 10851              	.LASF286:
 10852 02e1 73645061 		.ascii	"sdParam\000"
 10852      72616D00 
 10853              	.LASF36:
 10854 02e9 43555354 		.ascii	"CUSTOM_POS_PID_2\000"
 10854      4F4D5F50 
 10854      4F535F50 
 10854      49445F32 
 10854      00
 10855              	.LASF266:
 10856 02fa 70726573 		.ascii	"pressure_value\000"
 10856      73757265 
 10856      5F76616C 
 10856      756500
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 240


 10857              	.LASF249:
 10858 0309 636D645F 		.ascii	"cmd_ping\000"
 10858      70696E67 
 10858      00
 10859              	.LASF27:
 10860 0312 43555354 		.ascii	"CUSTOM_INPUT\000"
 10860      4F4D5F49 
 10860      4E505554 
 10860      00
 10861              	.LASF189:
 10862 031f 7365745F 		.ascii	"set_custom_param\000"
 10862      63757374 
 10862      6F6D5F70 
 10862      6172616D 
 10862      00
 10863              	.LASF261:
 10864 0330 636D645F 		.ascii	"cmd_remove_SD_file\000"
 10864      72656D6F 
 10864      76655F53 
 10864      445F6669 
 10864      6C6500
 10865              	.LASF41:
 10866 0343 43555354 		.ascii	"CUSTOM_DRIVER_2\000"
 10866      4F4D5F44 
 10866      52495645 
 10866      525F3200 
 10867              	.LASF0:
 10868 0353 7369676E 		.ascii	"signed char\000"
 10868      65642063 
 10868      68617200 
 10869              	.LASF133:
 10870 035f 6D617374 		.ascii	"master_mode_active\000"
 10870      65725F6D 
 10870      6F64655F 
 10870      61637469 
 10870      766500
 10871              	.LASF219:
 10872 0372 6D656D53 		.ascii	"memStore\000"
 10872      746F7265 
 10872      00
 10873              	.LASF260:
 10874 037b 66696C65 		.ascii	"filename\000"
 10874      6E616D65 
 10874      00
 10875              	.LASF131:
 10876 0384 73776974 		.ascii	"switch_emg\000"
 10876      63685F65 
 10876      6D6700
 10877              	.LASF244:
 10878 038f 72656164 		.ascii	"read_flag\000"
 10878      5F666C61 
 10878      6700
 10879              	.LASF283:
 10880 0399 696E7465 		.ascii	"interrupt_flag\000"
 10880      72727570 
 10880      745F666C 
 10880      616700
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 241


 10881              	.LASF47:
 10882 03a8 4D454E55 		.ascii	"MENU_CTRL\000"
 10882      5F435452 
 10882      4C00
 10883              	.LASF1:
 10884 03b2 756E7369 		.ascii	"unsigned char\000"
 10884      676E6564 
 10884      20636861 
 10884      7200
 10885              	.LASF81:
 10886 03c0 434D445F 		.ascii	"CMD_SET_VIBROTACTILE_INPUTS\000"
 10886      5345545F 
 10886      56494252 
 10886      4F544143 
 10886      54494C45 
 10887              	.LASF82:
 10888 03dc 434D445F 		.ascii	"CMD_GET_VIBROTACTILE_INPUTS\000"
 10888      4745545F 
 10888      56494252 
 10888      4F544143 
 10888      54494C45 
 10889              	.LASF69:
 10890 03f8 434D445F 		.ascii	"CMD_ACTIVATE\000"
 10890      41435449 
 10890      56415445 
 10890      00
 10891              	.LASF62:
 10892 0405 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 10892      53544F52 
 10892      455F4445 
 10892      4641554C 
 10892      545F5041 
 10893              	.LASF32:
 10894 041e 43555354 		.ascii	"CUSTOM_HAND_SIDE\000"
 10894      4F4D5F48 
 10894      414E445F 
 10894      53494445 
 10894      00
 10895              	.LASF218:
 10896 042f 76616C75 		.ascii	"value\000"
 10896      6500
 10897              	.LASF158:
 10898 0435 70726573 		.ascii	"pressure\000"
 10898      73757265 
 10898      00
 10899              	.LASF70:
 10900 043e 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 10900      4745545F 
 10900      41435449 
 10900      56415445 
 10900      00
 10901              	.LASF21:
 10902 044f 63686172 		.ascii	"char\000"
 10902      00
 10903              	.LASF267:
 10904 0454 76616C76 		.ascii	"valve_command\000"
 10904      655F636F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 242


 10904      6D6D616E 
 10904      6400
 10905              	.LASF264:
 10906 0462 70726573 		.ascii	"pressure_reference\000"
 10906      73757265 
 10906      5F726566 
 10906      6572656E 
 10906      636500
 10907              	.LASF223:
 10908 0475 7265745F 		.ascii	"ret_val\000"
 10908      76616C00 
 10909              	.LASF52:
 10910 047d 4D454E55 		.ascii	"MENU_SPI\000"
 10910      5F535049 
 10910      00
 10911              	.LASF148:
 10912 0486 70617261 		.ascii	"parameter\000"
 10912      6D657465 
 10912      7200
 10913              	.LASF162:
 10914 0490 7061636B 		.ascii	"packet_string\000"
 10914      65745F73 
 10914      7472696E 
 10914      6700
 10915              	.LASF34:
 10916 049e 43555354 		.ascii	"CUSTOM_LAST_CHECKED_t\000"
 10916      4F4D5F4C 
 10916      4153545F 
 10916      43484543 
 10916      4B45445F 
 10917              	.LASF215:
 10918 04b4 64617461 		.ascii	"data_length\000"
 10918      5F6C656E 
 10918      67746800 
 10919              	.LASF125:
 10920 04c0 706F735F 		.ascii	"pos_lim_sup\000"
 10920      6C696D5F 
 10920      73757000 
 10921              	.LASF230:
 10922 04cc 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 10922      6E69745F 
 10922      4F74626B 
 10922      41637457 
 10922      72697374 
 10923              	.LASF130:
 10924 04e3 656D675F 		.ascii	"emg_speed\000"
 10924      73706565 
 10924      6400
 10925              	.LASF181:
 10926 04ed 7061636B 		.ascii	"packet_data\000"
 10926      65745F64 
 10926      61746100 
 10927              	.LASF120:
 10928 04f9 73745F64 		.ascii	"st_device\000"
 10928      65766963 
 10928      6500
 10929              	.LASF210:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 243


 10930 0503 636F6D6D 		.ascii	"commWrite\000"
 10930      57726974 
 10930      6500
 10931              	.LASF274:
 10932 050d 64656163 		.ascii	"deactivate_slaves\000"
 10932      74697661 
 10932      74655F73 
 10932      6C617665 
 10932      7300
 10933              	.LASF222:
 10934 051f 70616765 		.ascii	"pages\000"
 10934      7300
 10935              	.LASF302:
 10936 0525 6D656D49 		.ascii	"memInit\000"
 10936      6E697400 
 10937              	.LASF44:
 10938 052d 6D656E75 		.ascii	"menu_type\000"
 10938      5F747970 
 10938      6500
 10939              	.LASF55:
 10940 0537 4D454E55 		.ascii	"MENU_DEVICE\000"
 10940      5F444556 
 10940      49434500 
 10941              	.LASF71:
 10942 0543 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 10942      5345545F 
 10942      494E5055 
 10942      545300
 10943              	.LASF289:
 10944 0552 53485F72 		.ascii	"SH_ref\000"
 10944      656600
 10945              	.LASF116:
 10946 0559 62756666 		.ascii	"buffer\000"
 10946      657200
 10947              	.LASF246:
 10948 0560 63757272 		.ascii	"curr_diff\000"
 10948      5F646966 
 10948      6600
 10949              	.LASF231:
 10950 056a 636D645F 		.ascii	"cmd_get_measurements\000"
 10950      6765745F 
 10950      6D656173 
 10950      7572656D 
 10950      656E7473 
 10951              	.LASF161:
 10952 057f 72785F63 		.ascii	"rx_cmd\000"
 10952      6D6400
 10953              	.LASF114:
 10954 0586 54595045 		.ascii	"TYPE_DOUBLE\000"
 10954      5F444F55 
 10954      424C4500 
 10955              	.LASF271:
 10956 0592 736C6176 		.ascii	"slave_motor_idx\000"
 10956      655F6D6F 
 10956      746F725F 
 10956      69647800 
 10957              	.LASF250:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 244


 10958 05a2 636D645F 		.ascii	"cmd_get_inputs\000"
 10958      6765745F 
 10958      696E7075 
 10958      747300
 10959              	.LASF103:
 10960 05b1 41434B5F 		.ascii	"ACK_ERROR\000"
 10960      4552524F 
 10960      5200
 10961              	.LASF94:
 10962 05bb 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 10962      545F4D4F 
 10962      44455F45 
 10962      58544552 
 10962      4E414C00 
 10963              	.LASF183:
 10964 05cf 696E6465 		.ascii	"index\000"
 10964      7800
 10965              	.LASF137:
 10966 05d5 6D617869 		.ascii	"maximum_pressure_kPa\000"
 10966      6D756D5F 
 10966      70726573 
 10966      73757265 
 10966      5F6B5061 
 10967              	.LASF43:
 10968 05ea 63757374 		.ascii	"custom_param\000"
 10968      6F6D5F70 
 10968      6172616D 
 10968      00
 10969              	.LASF259:
 10970 05f7 66696C65 		.ascii	"filename_length\000"
 10970      6E616D65 
 10970      5F6C656E 
 10970      67746800 
 10971              	.LASF245:
 10972 0607 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 10972      52656164 
 10972      52657343 
 10972      75727246 
 10972      726F6D53 
 10973              	.LASF57:
 10974 061d 4D454E55 		.ascii	"MENU_WRIST\000"
 10974      5F575249 
 10974      535400
 10975              	.LASF299:
 10976 0628 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\Git\\PSoC5\\PSoC5_FW"
 10976      73657273 
 10976      5C6D676E 
 10976      6F63636F 
 10976      5C446F63 
 10977 0655 5F574953 		.ascii	"_WISH_VIBES\\FW_WearableHealtySubj - WISH+Dayton\\W"
 10977      485F5649 
 10977      4245535C 
 10977      46575F57 
 10977      65617261 
 10978 0686 4953485F 		.ascii	"ISH_VIBES_Socket.cydsn\000"
 10978      56494245 
 10978      535F536F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 245


 10978      636B6574 
 10978      2E637964 
 10979              	.LASF284:
 10980 069d 72657365 		.ascii	"reset_PSoC_flag\000"
 10980      745F5053 
 10980      6F435F66 
 10980      6C616700 
 10981              	.LASF270:
 10982 06ad 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 10982      5F616374 
 10982      5F777269 
 10982      73745F63 
 10982      6F6E7472 
 10983              	.LASF115:
 10984 06c4 54595045 		.ascii	"TYPE_STRING\000"
 10984      5F535452 
 10984      494E4700 
 10985              	.LASF61:
 10986 06d0 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 10986      53544F52 
 10986      455F5041 
 10986      52414D53 
 10986      00
 10987              	.LASF7:
 10988 06e1 6C6F6E67 		.ascii	"long unsigned int\000"
 10988      20756E73 
 10988      69676E65 
 10988      6420696E 
 10988      7400
 10989              	.LASF65:
 10990 06f3 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 10990      424F4F54 
 10990      4C4F4144 
 10990      455200
 10991              	.LASF212:
 10992 0702 6E756D5F 		.ascii	"num_of_bytes\000"
 10992      6F665F62 
 10992      79746573 
 10992      00
 10993              	.LASF100:
 10994 070f 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 10994      545F4D4F 
 10994      44455F4A 
 10994      4F595354 
 10994      49434B00 
 10995              	.LASF220:
 10996 0723 64697370 		.ascii	"displacement\000"
 10996      6C616365 
 10996      6D656E74 
 10996      00
 10997              	.LASF241:
 10998 0730 636D645F 		.ascii	"cmd_get_vibrotactile_inputs\000"
 10998      6765745F 
 10998      76696272 
 10998      6F746163 
 10998      74696C65 
 10999              	.LASF166:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 246


 11000 074c 7374725F 		.ascii	"str_sd_data\000"
 11000      73645F64 
 11000      61746100 
 11001              	.LASF134:
 11002 0758 736C6176 		.ascii	"slave_ID\000"
 11002      655F4944 
 11002      00
 11003              	.LASF104:
 11004 0761 41434B5F 		.ascii	"ACK_OK\000"
 11004      4F4B00
 11005              	.LASF106:
 11006 0768 54595045 		.ascii	"TYPE_FLAG\000"
 11006      5F464C41 
 11006      4700
 11007              	.LASF180:
 11008 0772 7061636B 		.ascii	"packet_length\000"
 11008      65745F6C 
 11008      656E6774 
 11008      6800
 11009              	.LASF30:
 11010 0780 43555354 		.ascii	"CUSTOM_REST_POS\000"
 11010      4F4D5F52 
 11010      4553545F 
 11010      504F5300 
 11011              	.LASF126:
 11012 0790 696E7075 		.ascii	"input_mode\000"
 11012      745F6D6F 
 11012      646500
 11013              	.LASF76:
 11014 079b 434D445F 		.ascii	"CMD_GET_EMG\000"
 11014      4745545F 
 11014      454D4700 
 11015              	.LASF226:
 11016 07a7 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 11016      6E69745F 
 11016      536F6674 
 11016      48616E64 
 11016      50726F00 
 11017              	.LASF156:
 11018 07bb 70696E67 		.ascii	"ping\000"
 11018      00
 11019              	.LASF64:
 11020 07c0 434D445F 		.ascii	"CMD_GET_INFO\000"
 11020      4745545F 
 11020      494E464F 
 11020      00
 11021              	.LASF190:
 11022 07cd 6765745F 		.ascii	"get_IMU_param_list\000"
 11022      494D555F 
 11022      70617261 
 11022      6D5F6C69 
 11022      737400
 11023              	.LASF153:
 11024 07e0 4D454E55 		.ascii	"MENU\000"
 11024      00
 11025              	.LASF54:
 11026 07e5 4D454E55 		.ascii	"MENU_DRIVER\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 247


 11026      5F445249 
 11026      56455200 
 11027              	.LASF139:
 11028 07f1 76696272 		.ascii	"vibrotactile_feedback_active\000"
 11028      6F746163 
 11028      74696C65 
 11028      5F666565 
 11028      64626163 
 11029              	.LASF75:
 11030 080e 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 11030      4745545F 
 11030      43555252 
 11030      5F414E44 
 11030      5F4D4541 
 11031              	.LASF297:
 11032 0824 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11032      43313120 
 11032      352E342E 
 11032      31203230 
 11032      31363036 
 11033 0857 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 11033      20726576 
 11033      6973696F 
 11033      6E203233 
 11033      37373135 
 11034 088a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 11034      66756E63 
 11034      74696F6E 
 11034      2D736563 
 11034      74696F6E 
 11035              	.LASF234:
 11036 08b2 636D645F 		.ascii	"cmd_get_joystick\000"
 11036      6765745F 
 11036      6A6F7973 
 11036      7469636B 
 11036      00
 11037              	.LASF80:
 11038 08c3 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 11038      5345545F 
 11038      43554646 
 11038      5F494E50 
 11038      55545300 
 11039              	.LASF6:
 11040 08d7 5F5F7569 		.ascii	"__uint32_t\000"
 11040      6E743332 
 11040      5F7400
 11041              	.LASF8:
 11042 08e2 6C6F6E67 		.ascii	"long long int\000"
 11042      206C6F6E 
 11042      6720696E 
 11042      7400
 11043              	.LASF123:
 11044 08f0 73745F73 		.ascii	"st_slave\000"
 11044      6C617665 
 11044      00
 11045              	.LASF262:
 11046 08f9 76696272 		.ascii	"vibrotactile_control\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 248


 11046      6F746163 
 11046      74696C65 
 11046      5F636F6E 
 11046      74726F6C 
 11047              	.LASF108:
 11048 090e 54595045 		.ascii	"TYPE_UINT8\000"
 11048      5F55494E 
 11048      543800
 11049              	.LASF143:
 11050 0919 53485F63 		.ascii	"SH_config\000"
 11050      6F6E6669 
 11050      6700
 11051              	.LASF239:
 11052 0923 636D645F 		.ascii	"cmd_get_currents\000"
 11052      6765745F 
 11052      63757272 
 11052      656E7473 
 11052      00
 11053              	.LASF20:
 11054 0934 646F7562 		.ascii	"double\000"
 11054      6C6500
 11055              	.LASF91:
 11056 093b 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 11056      4745545F 
 11056      53445F53 
 11056      494E474C 
 11056      455F4649 
 11057              	.LASF275:
 11058 0952 49544D5F 		.ascii	"ITM_RxBuffer\000"
 11058      52784275 
 11058      66666572 
 11058      00
 11059              	.LASF19:
 11060 095f 666C6F61 		.ascii	"float\000"
 11060      7400
 11061              	.LASF196:
 11062 0965 6175785F 		.ascii	"aux_int8\000"
 11062      696E7438 
 11062      00
 11063              	.LASF92:
 11064 096e 434D445F 		.ascii	"CMD_REMOVE_SD_SINGLE_FILE\000"
 11064      52454D4F 
 11064      56455F53 
 11064      445F5349 
 11064      4E474C45 
 11065              	.LASF265:
 11066 0988 6572725F 		.ascii	"err_pressure\000"
 11066      70726573 
 11066      73757265 
 11066      00
 11067              	.LASF178:
 11068 0995 636F756E 		.ascii	"count\000"
 11068      7400
 11069              	.LASF157:
 11070 099b 73745F61 		.ascii	"st_adc_meas\000"
 11070      64635F6D 
 11070      65617300 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 249


 11071              	.LASF173:
 11072 09a7 6D5F6164 		.ascii	"m_addr\000"
 11072      647200
 11073              	.LASF280:
 11074 09ae 635F6D65 		.ascii	"c_mem\000"
 11074      6D00
 11075              	.LASF214:
 11076 09b4 64617461 		.ascii	"data_array\000"
 11076      5F617272 
 11076      617900
 11077              	.LASF10:
 11078 09bf 756E7369 		.ascii	"unsigned int\000"
 11078      676E6564 
 11078      20696E74 
 11078      00
 11079              	.LASF227:
 11080 09cc 6D656D49 		.ascii	"memInit_Master\000"
 11080      6E69745F 
 11080      4D617374 
 11080      657200
 11081              	.LASF204:
 11082 09db 70726570 		.ascii	"prepare_SD_legend\000"
 11082      6172655F 
 11082      53445F6C 
 11082      6567656E 
 11082      6400
 11083              	.LASF58:
 11084 09ed 53485F63 		.ascii	"SH_command\000"
 11084      6F6D6D61 
 11084      6E6400
 11085              	.LASF110:
 11086 09f8 54595045 		.ascii	"TYPE_UINT16\000"
 11086      5F55494E 
 11086      54313600 
 11087              	.LASF142:
 11088 0a04 666C6167 		.ascii	"flag\000"
 11088      00
 11089              	.LASF38:
 11090 0a09 43555354 		.ascii	"CUSTOM_INPUT_2\000"
 11090      4F4D5F49 
 11090      4E505554 
 11090      5F3200
 11091              	.LASF268:
 11092 0a18 785F7661 		.ascii	"x_value\000"
 11092      6C756500 
 11093              	.LASF235:
 11094 0a20 636D645F 		.ascii	"cmd_set_inputs\000"
 11094      7365745F 
 11094      696E7075 
 11094      747300
 11095              	.LASF49:
 11096 0a2f 4D454E55 		.ascii	"MENU_R_L\000"
 11096      5F525F4C 
 11096      00
 11097              	.LASF171:
 11098 0a38 4D454E55 		.ascii	"MENU_LIST\000"
 11098      5F4C4953 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 250


 11098      5400
 11099              	.LASF95:
 11100 0a42 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 11100      545F4D4F 
 11100      44455F45 
 11100      4E434F44 
 11100      45523300 
 11101              	.LASF211:
 11102 0a56 636F6D6D 		.ascii	"commWriteID\000"
 11102      57726974 
 11102      65494400 
 11103              	.LASF87:
 11104 0a62 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 11104      4745545F 
 11104      454E434F 
 11104      4445525F 
 11104      434F4E46 
 11105              	.LASF154:
 11106 0a77 4E554D5F 		.ascii	"NUM_STR\000"
 11106      53545200 
 11107              	.LASF237:
 11108 0a7f 636D645F 		.ascii	"cmd_get_activate\000"
 11108      6765745F 
 11108      61637469 
 11108      76617465 
 11108      00
 11109              	.LASF269:
 11110 0a90 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 11110      61637469 
 11110      76617469 
 11110      6F6E5F76 
 11110      656C6F63 
 11111              	.LASF113:
 11112 0aac 54595045 		.ascii	"TYPE_FLOAT\000"
 11112      5F464C4F 
 11112      415400
 11113              	.LASF40:
 11114 0ab7 43555354 		.ascii	"CUSTOM_POS_LIM_2\000"
 11114      4F4D5F50 
 11114      4F535F4C 
 11114      494D5F32 
 11114      00
 11115              	.LASF202:
 11116 0ac8 70726570 		.ascii	"prepare_R01_info\000"
 11116      6172655F 
 11116      5230315F 
 11116      696E666F 
 11116      00
 11117              	.LASF109:
 11118 0ad9 54595045 		.ascii	"TYPE_INT16\000"
 11118      5F494E54 
 11118      313600
 11119              	.LASF198:
 11120 0ae4 6175785F 		.ascii	"aux_uint16\000"
 11120      75696E74 
 11120      313600
 11121              	.LASF128:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 251


 11122 0aef 656D675F 		.ascii	"emg_threshold\000"
 11122      74687265 
 11122      73686F6C 
 11122      6400
 11123              	.LASF79:
 11124 0afd 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 11124      4745545F 
 11124      43555252 
 11124      5F444946 
 11124      4600
 11125              	.LASF42:
 11126 0b0f 43555354 		.ascii	"CUSTOM_DEV_TYPE\000"
 11126      4F4D5F44 
 11126      45565F54 
 11126      59504500 
 11127              	.LASF229:
 11128 0b1f 6D656D49 		.ascii	"memInit_AirChambers_Vibrotactile_Fb\000"
 11128      6E69745F 
 11128      41697243 
 11128      68616D62 
 11128      6572735F 
 11129              	.LASF23:
 11130 0b43 6C6F6E67 		.ascii	"long double\000"
 11130      20646F75 
 11130      626C6500 
 11131              	.LASF112:
 11132 0b4f 54595045 		.ascii	"TYPE_UINT32\000"
 11132      5F55494E 
 11132      54333200 
 11133              	.LASF135:
 11134 0b5b 73745F46 		.ascii	"st_FB_spec\000"
 11134      425F7370 
 11134      656300
 11135              	.LASF216:
 11136 0b66 63686563 		.ascii	"checksum\000"
 11136      6B73756D 
 11136      00
 11137              	.LASF295:
 11138 0b6f 73757065 		.ascii	"superstring\000"
 11138      72737472 
 11138      696E6700 
 11139              	.LASF68:
 11140 0b7b 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 11140      48414E44 
 11140      5F43414C 
 11140      49425241 
 11140      544500
 11141              	.LASF290:
 11142 0b8e 56545F72 		.ascii	"VT_ref\000"
 11142      656600
 11143              	.LASF272:
 11144 0b95 64726976 		.ascii	"drive_slave\000"
 11144      655F736C 
 11144      61766500 
 11145              	.LASF102:
 11146 0ba1 61636B6E 		.ascii	"acknowledgment_values\000"
 11146      6F776C65 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 252


 11146      64676D65 
 11146      6E745F76 
 11146      616C7565 
 11147              	.LASF225:
 11148 0bb7 6D656D52 		.ascii	"memRestore\000"
 11148      6573746F 
 11148      726500
 11149              	.LASF192:
 11150 0bc2 696E666F 		.ascii	"info_string\000"
 11150      5F737472 
 11150      696E6700 
 11151              	.LASF168:
 11152 0bce 6E756D5F 		.ascii	"num_params\000"
 11152      70617261 
 11152      6D7300
 11153              	.LASF9:
 11154 0bd9 6C6F6E67 		.ascii	"long long unsigned int\000"
 11154      206C6F6E 
 11154      6720756E 
 11154      7369676E 
 11154      65642069 
 11155              	.LASF155:
 11156 0bf0 63757374 		.ascii	"custom\000"
 11156      6F6D00
 11157              	.LASF53:
 11158 0bf7 4D454E55 		.ascii	"MENU_USER\000"
 11158      5F555345 
 11158      5200
 11159              	.LASF111:
 11160 0c01 54595045 		.ascii	"TYPE_INT32\000"
 11160      5F494E54 
 11160      333200
 11161              	.LASF193:
 11162 0c0c 6175785F 		.ascii	"aux_uint32\000"
 11162      75696E74 
 11162      333200
 11163              	.LASF117:
 11164 0c17 6C656E67 		.ascii	"length\000"
 11164      746800
 11165              	.LASF172:
 11166 0c1e 73656E64 		.ascii	"sendToDevice\000"
 11166      546F4465 
 11166      76696365 
 11166      00
 11167              	.LASF78:
 11168 0c2b 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 11168      4745545F 
 11168      41434345 
 11168      4C00
 11169              	.LASF232:
 11170 0c39 636D645F 		.ascii	"cmd_get_velocities\000"
 11170      6765745F 
 11170      76656C6F 
 11170      63697469 
 11170      657300
 11171              	.LASF224:
 11172 0c4c 6D656D52 		.ascii	"memRecall\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 253


 11172      6563616C 
 11172      6C00
 11173              	.LASF251:
 11174 0c56 636D645F 		.ascii	"cmd_store_params\000"
 11174      73746F72 
 11174      655F7061 
 11174      72616D73 
 11174      00
 11175              	.LASF179:
 11176 0c67 6175785F 		.ascii	"aux_char\000"
 11176      63686172 
 11176      00
 11177              	.LASF83:
 11178 0c70 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 11178      5345545F 
 11178      42415544 
 11178      52415445 
 11178      00
 11179              	.LASF191:
 11180 0c81 71626164 		.ascii	"qbadminp_string\000"
 11180      6D696E70 
 11180      5F737472 
 11180      696E6700 
 11181              	.LASF22:
 11182 0c91 72656738 		.ascii	"reg8\000"
 11182      00
 11183              	.LASF138:
 11184 0c96 70726F70 		.ascii	"prop_err_fb_gain\000"
 11184      5F657272 
 11184      5F66625F 
 11184      6761696E 
 11184      00
 11185              	.LASF208:
 11186 0ca7 636F6D6D 		.ascii	"commWrite_old_id\000"
 11186      57726974 
 11186      655F6F6C 
 11186      645F6964 
 11186      00
 11187              	.LASF182:
 11188 0cb8 6D616E61 		.ascii	"manage_param_list\000"
 11188      67655F70 
 11188      6172616D 
 11188      5F6C6973 
 11188      7400
 11189              	.LASF195:
 11190 0cca 6175785F 		.ascii	"aux_uint8\000"
 11190      75696E74 
 11190      3800
 11191              	.LASF63:
 11192 0cd4 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 11192      52455354 
 11192      4F52455F 
 11192      50415241 
 11192      4D5300
 11193              	.LASF51:
 11194 0ce7 4D454E55 		.ascii	"MENU_EXP\000"
 11194      5F455850 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 254


 11194      00
 11195              	.LASF285:
 11196 0cf0 73644669 		.ascii	"sdFile\000"
 11196      6C6500
 11197              	.LASF169:
 11198 0cf7 6E756D5F 		.ascii	"num_menus\000"
 11198      6D656E75 
 11198      7300
 11199              	.LASF45:
 11200 0d01 4D454E55 		.ascii	"MENU_NO_MENU\000"
 11200      5F4E4F5F 
 11200      4D454E55 
 11200      00
 11201              	.LASF203:
 11202 0d0e 70726570 		.ascii	"prepare_SD_param_info\000"
 11202      6172655F 
 11202      53445F70 
 11202      6172616D 
 11202      5F696E66 
 11203              	.LASF201:
 11204 0d24 70726570 		.ascii	"prepare_counter_info\000"
 11204      6172655F 
 11204      636F756E 
 11204      7465725F 
 11204      696E666F 
 11205              	.LASF205:
 11206 0d39 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 11206      6172655F 
 11206      53445F45 
 11206      4D475F48 
 11206      6973746F 
 11207              	.LASF209:
 11208 0d57 6F6C645F 		.ascii	"old_id\000"
 11208      696400
 11209              	.LASF300:
 11210 0d5e 5F5F5245 		.ascii	"__REV16\000"
 11210      56313600 
 11211              	.LASF149:
 11212 0d66 5641525F 		.ascii	"VAR_P\000"
 11212      5000
 11213              	.LASF238:
 11214 0d6c 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 11214      6765745F 
 11214      63757272 
 11214      5F616E64 
 11214      5F6D6561 
 11215              	.LASF165:
 11216 0d82 696E666F 		.ascii	"info_type\000"
 11216      5F747970 
 11216      6500
 11217              	.LASF56:
 11218 0d8c 4D454E55 		.ascii	"MENU_FSM\000"
 11218      5F46534D 
 11218      00
 11219              	.LASF90:
 11220 0d95 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 11220      4745545F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 255


 11220      4144435F 
 11220      52415700 
 11221              	.LASF101:
 11222 0da5 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 11222      545F4D4F 
 11222      44455F45 
 11222      4D475F50 
 11222      524F504F 
 11223              	.LASF86:
 11224 0dc4 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 11224      4745545F 
 11224      494D555F 
 11224      50415241 
 11224      4D00
 11225              	.LASF282:
 11226 0dd6 74696D65 		.ascii	"timer_value0\000"
 11226      725F7661 
 11226      6C756530 
 11226      00
 11227              	.LASF88:
 11228 0de3 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 11228      4745545F 
 11228      454E434F 
 11228      4445525F 
 11228      52415700 
 11229              	.LASF146:
 11230 0df7 72657365 		.ascii	"reset\000"
 11230      7400
 11231              	.LASF145:
 11232 0dfd 6E616D65 		.ascii	"name\000"
 11232      00
 11233              	.LASF73:
 11234 0e02 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 11234      4745545F 
 11234      4D454153 
 11234      5552454D 
 11234      454E5453 
 11235              	.LASF140:
 11236 0e17 61697263 		.ascii	"airchamber_feedback_active\000"
 11236      68616D62 
 11236      65725F66 
 11236      65656462 
 11236      61636B5F 
 11237              	.LASF277:
 11238 0e32 675F6164 		.ascii	"g_adc_measOld\000"
 11238      635F6D65 
 11238      61734F6C 
 11238      6400
 11239              	.LASF255:
 11240 0e40 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 11240      6765745F 
 11240      656E636F 
 11240      6465725F 
 11240      72617700 
 11241              	.LASF13:
 11242 0e54 75696E74 		.ascii	"uint8\000"
 11242      3800
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 256


 11243              	.LASF159:
 11244 0e5a 636F6D6D 		.ascii	"commProcess\000"
 11244      50726F63 
 11244      65737300 
 11245              	.LASF2:
 11246 0e66 73686F72 		.ascii	"short int\000"
 11246      7420696E 
 11246      7400
 11247              	.LASF31:
 11248 0e70 43555354 		.ascii	"CUSTOM_REST_POS_DELAY\000"
 11248      4F4D5F52 
 11248      4553545F 
 11248      504F535F 
 11248      44454C41 
 11249              	.LASF72:
 11250 0e86 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 11250      4745545F 
 11250      494E5055 
 11250      545300
 11251              	.LASF89:
 11252 0e95 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 11252      4745545F 
 11252      4144435F 
 11252      434F4E46 
 11252      00
 11253              	.LASF60:
 11254 0ea6 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 11254      5345545F 
 11254      5A45524F 
 11254      5300
 11255              	.LASF197:
 11256 0eb4 6175785F 		.ascii	"aux_int16\000"
 11256      696E7431 
 11256      3600
 11257              	.LASF296:
 11258 0ebe 45455052 		.ascii	"EEPROM_ADDR\000"
 11258      4F4D5F41 
 11258      44445200 
 11259              	.LASF26:
 11260 0eca 43555354 		.ascii	"CUSTOM_CURR_PID\000"
 11260      4F4D5F43 
 11260      5552525F 
 11260      50494400 
 11261              	.LASF188:
 11262 0eda 4E554D5F 		.ascii	"NUM_PARAMs\000"
 11262      50415241 
 11262      4D7300
 11263              	.LASF77:
 11264 0ee5 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 11264      4745545F 
 11264      56454C4F 
 11264      43495449 
 11264      455300
 11265              	.LASF67:
 11266 0ef8 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 11266      4745545F 
 11266      50415241 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 257


 11266      4D5F4C49 
 11266      535400
 11267              	.LASF105:
 11268 0f0b 64617461 		.ascii	"data_types\000"
 11268      5F747970 
 11268      657300
 11269              	.LASF17:
 11270 0f16 696E7431 		.ascii	"int16\000"
 11270      3600
 11271              	.LASF50:
 11272 0f1c 4D454E55 		.ascii	"MENU_ON_OFF\000"
 11272      5F4F4E5F 
 11272      4F464600 
 11273              	.LASF35:
 11274 0f28 43555354 		.ascii	"CUSTOM_DRIVER\000"
 11274      4F4D5F44 
 11274      52495645 
 11274      5200
 11275              	.LASF28:
 11276 0f36 43555354 		.ascii	"CUSTOM_MEAS_OFF\000"
 11276      4F4D5F4D 
 11276      4541535F 
 11276      4F464600 
 11277              	.LASF254:
 11278 0f46 636D645F 		.ascii	"cmd_get_encoder_map\000"
 11278      6765745F 
 11278      656E636F 
 11278      6465725F 
 11278      6D617000 
 11279              	.LASF12:
 11280 0f5a 75696E74 		.ascii	"uint32_t\000"
 11280      33325F74 
 11280      00
 11281              	.LASF194:
 11282 0f63 6175785F 		.ascii	"aux_float\000"
 11282      666C6F61 
 11282      7400
 11283              	.LASF170:
 11284 0f6d 50415241 		.ascii	"PARAM_LIST\000"
 11284      4D5F4C49 
 11284      535400
 11285              	.LASF217:
 11286 0f78 73656E64 		.ascii	"sendAcknowledgment\000"
 11286      41636B6E 
 11286      6F776C65 
 11286      64676D65 
 11286      6E7400
 11287              	.LASF177:
 11288 0f8b 6175785F 		.ascii	"aux_int32\000"
 11288      696E7433 
 11288      3200
 11289              	.LASF121:
 11290 0f95 62617564 		.ascii	"baud_rate\000"
 11290      5F726174 
 11290      6500
 11291              	.LASF243:
 11292 0f9f 745F656E 		.ascii	"t_end\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 258


 11292      6400
 11293              	.LASF240:
 11294 0fa5 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 11294      6765745F 
 11294      63757272 
 11294      656E7473 
 11294      5F666F72 
 11295              	.LASF85:
 11296 0fbf 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 11296      4745545F 
 11296      494D555F 
 11296      52454144 
 11296      494E4753 
 11297              	.LASF187:
 11298 0fd4 70617261 		.ascii	"param_type\000"
 11298      6D5F7479 
 11298      706500
 11299              	.LASF287:
 11300 0fdf 73645230 		.ascii	"sdR01File\000"
 11300      3146696C 
 11300      6500
 11301              	.LASF213:
 11302 0fe9 4C435243 		.ascii	"LCRChecksum\000"
 11302      6865636B 
 11302      73756D00 
 11303              	.LASF3:
 11304 0ff5 73686F72 		.ascii	"short unsigned int\000"
 11304      7420756E 
 11304      7369676E 
 11304      65642069 
 11304      6E7400
 11305              	.LASF279:
 11306 1008 675F6D65 		.ascii	"g_mem\000"
 11306      6D00
 11307              	.LASF276:
 11308 100e 675F6164 		.ascii	"g_adc_meas\000"
 11308      635F6D65 
 11308      617300
 11309              	.LASF136:
 11310 1019 6D61785F 		.ascii	"max_residual_current\000"
 11310      72657369 
 11310      6475616C 
 11310      5F637572 
 11310      72656E74 
 11311              	.LASF141:
 11312 102e 73745F65 		.ascii	"st_eeprom\000"
 11312      6570726F 
 11312      6D00
 11313              	.LASF150:
 11314 1038 54595045 		.ascii	"TYPES\000"
 11314      5300
 11315              	.LASF18:
 11316 103e 696E7433 		.ascii	"int32\000"
 11316      3200
 11317              	.LASF163:
 11318 1044 696E666F 		.ascii	"infoGet\000"
 11318      47657400 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 259


 11319              	.LASF288:
 11320 104c 6D617374 		.ascii	"master_mode\000"
 11320      65725F6D 
 11320      6F646500 
 11321              	.LASF5:
 11322 1058 5F5F696E 		.ascii	"__int32_t\000"
 11322      7433325F 
 11322      7400
 11323              	.LASF129:
 11324 1062 656D675F 		.ascii	"emg_max_value\000"
 11324      6D61785F 
 11324      76616C75 
 11324      6500
 11325              	.LASF248:
 11326 1070 636F6D6D 		.ascii	"commReadIMUFromSH\000"
 11326      52656164 
 11326      494D5546 
 11326      726F6D53 
 11326      4800
 11327              	.LASF298:
 11328 1082 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 11328      72635C63 
 11328      6F6D6D61 
 11328      6E645F70 
 11328      726F6365 
 11329              	.LASF93:
 11330 109e 53485F69 		.ascii	"SH_input_mode\000"
 11330      6E707574 
 11330      5F6D6F64 
 11330      6500
 11331              	.LASF25:
 11332 10ac 43555354 		.ascii	"CUSTOM_POS_PID\000"
 11332      4F4D5F50 
 11332      4F535F50 
 11332      494400
 11333              	.LASF107:
 11334 10bb 54595045 		.ascii	"TYPE_INT8\000"
 11334      5F494E54 
 11334      3800
 11335              	.LASF207:
 11336 10c5 494D555F 		.ascii	"IMU_reading_info\000"
 11336      72656164 
 11336      696E675F 
 11336      696E666F 
 11336      00
 11337              	.LASF14:
 11338 10d6 75696E74 		.ascii	"uint16\000"
 11338      313600
 11339              	.LASF291:
 11340 10dd 50756D70 		.ascii	"Pump_ref\000"
 11340      5F726566 
 11340      00
 11341              	.LASF175:
 11342 10e6 6175785F 		.ascii	"aux_str\000"
 11342      73747200 
 11343              	.LASF59:
 11344 10ee 434D445F 		.ascii	"CMD_PING\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccfX6M0E.s 			page 260


 11344      50494E47 
 11344      00
 11345              	.LASF236:
 11346 10f7 636D645F 		.ascii	"cmd_activate\000"
 11346      61637469 
 11346      76617465 
 11346      00
 11347              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
