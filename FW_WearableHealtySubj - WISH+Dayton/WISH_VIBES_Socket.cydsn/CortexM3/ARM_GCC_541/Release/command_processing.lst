ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8CB0     		sub	sp, sp, #48
  44              		.cfi_def_cfa_offset 56
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 0E4B     		ldr	r3, .L50
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e 0C4B     		ldr	r3, .L50
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c 0848     		ldr	r0, .L50
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 064B     		ldr	r3, .L50
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e 044A     		ldr	r2, .L50
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 06D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 024B     		ldr	r3, .L50
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e B8E2     		b	.L1
  75              	.L51:
  76              		.align	2
  77              	.L50:
  78 0040 00000000 		.word	g_rx
  79              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  80              		.loc 1 74 0
  81 0044 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  82 0048 FA2B     		cmp	r3, #250
  83 004a 00F2B182 		bhi	.L49
  84 004e 01A2     		adr	r2, .L6
  85 0050 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  86              		.p2align 2
  87              	.L6:
  88 0054 CD040000 		.word	.L5+1
  89 0058 AD040000 		.word	.L7+1
  90 005c B1050000 		.word	.L49+1
  91 0060 D3040000 		.word	.L8+1
  92 0064 D9040000 		.word	.L9+1
  93 0068 F5040000 		.word	.L10+1
  94 006c 95040000 		.word	.L11+1
  95 0070 B1050000 		.word	.L49+1
  96 0074 B1050000 		.word	.L49+1
  97 0078 29050000 		.word	.L12+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 4


  98 007c 0F050000 		.word	.L13+1
  99 0080 B1050000 		.word	.L49+1
 100 0084 B3040000 		.word	.L14+1
 101 0088 B1050000 		.word	.L49+1
 102 008c B1050000 		.word	.L49+1
 103 0090 B1050000 		.word	.L49+1
 104 0094 B1050000 		.word	.L49+1
 105 0098 B1050000 		.word	.L49+1
 106 009c B1050000 		.word	.L49+1
 107 00a0 B1050000 		.word	.L49+1
 108 00a4 B1050000 		.word	.L49+1
 109 00a8 B1050000 		.word	.L49+1
 110 00ac B1050000 		.word	.L49+1
 111 00b0 B1050000 		.word	.L49+1
 112 00b4 B1050000 		.word	.L49+1
 113 00b8 B1050000 		.word	.L49+1
 114 00bc B1050000 		.word	.L49+1
 115 00c0 B1050000 		.word	.L49+1
 116 00c4 B1050000 		.word	.L49+1
 117 00c8 B1050000 		.word	.L49+1
 118 00cc B1050000 		.word	.L49+1
 119 00d0 B1050000 		.word	.L49+1
 120 00d4 B1050000 		.word	.L49+1
 121 00d8 B1050000 		.word	.L49+1
 122 00dc B1050000 		.word	.L49+1
 123 00e0 B1050000 		.word	.L49+1
 124 00e4 B1050000 		.word	.L49+1
 125 00e8 B1050000 		.word	.L49+1
 126 00ec B1050000 		.word	.L49+1
 127 00f0 B1050000 		.word	.L49+1
 128 00f4 B1050000 		.word	.L49+1
 129 00f8 B1050000 		.word	.L49+1
 130 00fc B1050000 		.word	.L49+1
 131 0100 B1050000 		.word	.L49+1
 132 0104 B1050000 		.word	.L49+1
 133 0108 B1050000 		.word	.L49+1
 134 010c B1050000 		.word	.L49+1
 135 0110 B1050000 		.word	.L49+1
 136 0114 B1050000 		.word	.L49+1
 137 0118 B1050000 		.word	.L49+1
 138 011c B1050000 		.word	.L49+1
 139 0120 B1050000 		.word	.L49+1
 140 0124 B1050000 		.word	.L49+1
 141 0128 B1050000 		.word	.L49+1
 142 012c B1050000 		.word	.L49+1
 143 0130 B1050000 		.word	.L49+1
 144 0134 B1050000 		.word	.L49+1
 145 0138 B1050000 		.word	.L49+1
 146 013c B1050000 		.word	.L49+1
 147 0140 B1050000 		.word	.L49+1
 148 0144 B1050000 		.word	.L49+1
 149 0148 B1050000 		.word	.L49+1
 150 014c B1050000 		.word	.L49+1
 151 0150 B1050000 		.word	.L49+1
 152 0154 B1050000 		.word	.L49+1
 153 0158 B1050000 		.word	.L49+1
 154 015c B1050000 		.word	.L49+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 5


 155 0160 B1050000 		.word	.L49+1
 156 0164 B1050000 		.word	.L49+1
 157 0168 B1050000 		.word	.L49+1
 158 016c B1050000 		.word	.L49+1
 159 0170 B1050000 		.word	.L49+1
 160 0174 B1050000 		.word	.L49+1
 161 0178 B1050000 		.word	.L49+1
 162 017c B1050000 		.word	.L49+1
 163 0180 B1050000 		.word	.L49+1
 164 0184 B1050000 		.word	.L49+1
 165 0188 B1050000 		.word	.L49+1
 166 018c B1050000 		.word	.L49+1
 167 0190 B1050000 		.word	.L49+1
 168 0194 B1050000 		.word	.L49+1
 169 0198 B1050000 		.word	.L49+1
 170 019c B1050000 		.word	.L49+1
 171 01a0 B1050000 		.word	.L49+1
 172 01a4 B1050000 		.word	.L49+1
 173 01a8 B1050000 		.word	.L49+1
 174 01ac B1050000 		.word	.L49+1
 175 01b0 B1050000 		.word	.L49+1
 176 01b4 B1050000 		.word	.L49+1
 177 01b8 B1050000 		.word	.L49+1
 178 01bc B1050000 		.word	.L49+1
 179 01c0 B1050000 		.word	.L49+1
 180 01c4 B1050000 		.word	.L49+1
 181 01c8 B1050000 		.word	.L49+1
 182 01cc B1050000 		.word	.L49+1
 183 01d0 B1050000 		.word	.L49+1
 184 01d4 B1050000 		.word	.L49+1
 185 01d8 B1050000 		.word	.L49+1
 186 01dc B1050000 		.word	.L49+1
 187 01e0 B1050000 		.word	.L49+1
 188 01e4 B1050000 		.word	.L49+1
 189 01e8 B1050000 		.word	.L49+1
 190 01ec B1050000 		.word	.L49+1
 191 01f0 B1050000 		.word	.L49+1
 192 01f4 B1050000 		.word	.L49+1
 193 01f8 B1050000 		.word	.L49+1
 194 01fc B1050000 		.word	.L49+1
 195 0200 B1050000 		.word	.L49+1
 196 0204 B1050000 		.word	.L49+1
 197 0208 B1050000 		.word	.L49+1
 198 020c B1050000 		.word	.L49+1
 199 0210 B1050000 		.word	.L49+1
 200 0214 B1050000 		.word	.L49+1
 201 0218 B1050000 		.word	.L49+1
 202 021c B1050000 		.word	.L49+1
 203 0220 B1050000 		.word	.L49+1
 204 0224 B1050000 		.word	.L49+1
 205 0228 B1050000 		.word	.L49+1
 206 022c B1050000 		.word	.L49+1
 207 0230 B1050000 		.word	.L49+1
 208 0234 B1050000 		.word	.L49+1
 209 0238 B1050000 		.word	.L49+1
 210 023c B1050000 		.word	.L49+1
 211 0240 B1050000 		.word	.L49+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 6


 212 0244 B1050000 		.word	.L49+1
 213 0248 B1050000 		.word	.L49+1
 214 024c B1050000 		.word	.L49+1
 215 0250 B1050000 		.word	.L49+1
 216 0254 41040000 		.word	.L16+1
 217 0258 83040000 		.word	.L17+1
 218 025c 47040000 		.word	.L18+1
 219 0260 8F040000 		.word	.L19+1
 220 0264 4D040000 		.word	.L20+1
 221 0268 59040000 		.word	.L21+1
 222 026c 53040000 		.word	.L22+1
 223 0270 B1050000 		.word	.L49+1
 224 0274 7D040000 		.word	.L23+1
 225 0278 6B040000 		.word	.L24+1
 226 027c B1050000 		.word	.L49+1
 227 0280 71040000 		.word	.L25+1
 228 0284 5F040000 		.word	.L26+1
 229 0288 B1050000 		.word	.L49+1
 230 028c B1050000 		.word	.L49+1
 231 0290 B1050000 		.word	.L49+1
 232 0294 89040000 		.word	.L27+1
 233 0298 B1050000 		.word	.L49+1
 234 029c 77040000 		.word	.L28+1
 235 02a0 B1050000 		.word	.L49+1
 236 02a4 B1050000 		.word	.L49+1
 237 02a8 B1050000 		.word	.L49+1
 238 02ac B1050000 		.word	.L49+1
 239 02b0 B1050000 		.word	.L49+1
 240 02b4 B1050000 		.word	.L49+1
 241 02b8 B1050000 		.word	.L49+1
 242 02bc B1050000 		.word	.L49+1
 243 02c0 B1050000 		.word	.L49+1
 244 02c4 B1050000 		.word	.L49+1
 245 02c8 B1050000 		.word	.L49+1
 246 02cc B1050000 		.word	.L49+1
 247 02d0 B1050000 		.word	.L49+1
 248 02d4 B1050000 		.word	.L49+1
 249 02d8 4B050000 		.word	.L29+1
 250 02dc 51050000 		.word	.L30+1
 251 02e0 69050000 		.word	.L31+1
 252 02e4 6F050000 		.word	.L32+1
 253 02e8 75050000 		.word	.L33+1
 254 02ec 7B050000 		.word	.L34+1
 255 02f0 81050000 		.word	.L35+1
 256 02f4 99050000 		.word	.L36+1
 257 02f8 B1050000 		.word	.L49+1
 258 02fc B1050000 		.word	.L49+1
 259 0300 B1050000 		.word	.L49+1
 260 0304 B1050000 		.word	.L49+1
 261 0308 B1050000 		.word	.L49+1
 262 030c B1050000 		.word	.L49+1
 263 0310 B1050000 		.word	.L49+1
 264 0314 B1050000 		.word	.L49+1
 265 0318 B1050000 		.word	.L49+1
 266 031c B1050000 		.word	.L49+1
 267 0320 B1050000 		.word	.L49+1
 268 0324 B1050000 		.word	.L49+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 7


 269 0328 B1050000 		.word	.L49+1
 270 032c B1050000 		.word	.L49+1
 271 0330 B1050000 		.word	.L49+1
 272 0334 B1050000 		.word	.L49+1
 273 0338 B1050000 		.word	.L49+1
 274 033c B1050000 		.word	.L49+1
 275 0340 B1050000 		.word	.L49+1
 276 0344 B1050000 		.word	.L49+1
 277 0348 B1050000 		.word	.L49+1
 278 034c B1050000 		.word	.L49+1
 279 0350 B1050000 		.word	.L49+1
 280 0354 B1050000 		.word	.L49+1
 281 0358 B1050000 		.word	.L49+1
 282 035c B1050000 		.word	.L49+1
 283 0360 B1050000 		.word	.L49+1
 284 0364 B1050000 		.word	.L49+1
 285 0368 B1050000 		.word	.L49+1
 286 036c B1050000 		.word	.L49+1
 287 0370 B1050000 		.word	.L49+1
 288 0374 B1050000 		.word	.L49+1
 289 0378 B1050000 		.word	.L49+1
 290 037c B1050000 		.word	.L49+1
 291 0380 B1050000 		.word	.L49+1
 292 0384 B1050000 		.word	.L49+1
 293 0388 B1050000 		.word	.L49+1
 294 038c B1050000 		.word	.L49+1
 295 0390 B1050000 		.word	.L49+1
 296 0394 B1050000 		.word	.L49+1
 297 0398 B1050000 		.word	.L49+1
 298 039c B1050000 		.word	.L49+1
 299 03a0 B1050000 		.word	.L49+1
 300 03a4 B1050000 		.word	.L49+1
 301 03a8 B1050000 		.word	.L49+1
 302 03ac B1050000 		.word	.L49+1
 303 03b0 B1050000 		.word	.L49+1
 304 03b4 B1050000 		.word	.L49+1
 305 03b8 B1050000 		.word	.L49+1
 306 03bc B1050000 		.word	.L49+1
 307 03c0 B1050000 		.word	.L49+1
 308 03c4 B1050000 		.word	.L49+1
 309 03c8 B1050000 		.word	.L49+1
 310 03cc B1050000 		.word	.L49+1
 311 03d0 B1050000 		.word	.L49+1
 312 03d4 B1050000 		.word	.L49+1
 313 03d8 B1050000 		.word	.L49+1
 314 03dc B1050000 		.word	.L49+1
 315 03e0 B1050000 		.word	.L49+1
 316 03e4 B1050000 		.word	.L49+1
 317 03e8 B1050000 		.word	.L49+1
 318 03ec B1050000 		.word	.L49+1
 319 03f0 B1050000 		.word	.L49+1
 320 03f4 B1050000 		.word	.L49+1
 321 03f8 B1050000 		.word	.L49+1
 322 03fc B1050000 		.word	.L49+1
 323 0400 B1050000 		.word	.L49+1
 324 0404 B1050000 		.word	.L49+1
 325 0408 B1050000 		.word	.L49+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 8


 326 040c B1050000 		.word	.L49+1
 327 0410 B1050000 		.word	.L49+1
 328 0414 B1050000 		.word	.L49+1
 329 0418 B1050000 		.word	.L49+1
 330 041c B1050000 		.word	.L49+1
 331 0420 B1050000 		.word	.L49+1
 332 0424 B1050000 		.word	.L49+1
 333 0428 B1050000 		.word	.L49+1
 334 042c B1050000 		.word	.L49+1
 335 0430 B1050000 		.word	.L49+1
 336 0434 B1050000 		.word	.L49+1
 337 0438 B1050000 		.word	.L49+1
 338 043c 65040000 		.word	.L37+1
 339              		.p2align 1
 340              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 341              		.loc 1 78 0
 342 0440 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 343              		.loc 1 79 0
 344 0444 B5E0     		b	.L1
 345              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 346              		.loc 1 84 0
 347 0446 FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 348              		.loc 1 85 0
 349 044a B2E0     		b	.L1
 350              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 351              		.loc 1 90 0
 352 044c FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 353              		.loc 1 91 0
 354 0450 AFE0     		b	.L1
 355              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 356              		.loc 1 96 0
 357 0452 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 358              		.loc 1 97 0
 359 0456 ACE0     		b	.L1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 9


 360              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 361              		.loc 1 102 0
 362 0458 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 363              		.loc 1 103 0
 364 045c A9E0     		b	.L1
 365              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 366              		.loc 1 108 0
 367 045e FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 368              		.loc 1 109 0
 369 0462 A6E0     		b	.L1
 370              	.L37:
 110:..\src/command_processing.c **** 
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_VIBROTACTILE_INPUTS
 112:..\src/command_processing.c ****          
 113:..\src/command_processing.c ****         case CMD_GET_VIBROTACTILE_INPUTS:
 114:..\src/command_processing.c ****             cmd_get_vibrotactile_inputs();
 371              		.loc 1 114 0
 372 0464 FFF7FEFF 		bl	cmd_get_vibrotactile_inputs
 115:..\src/command_processing.c ****             break;            
 373              		.loc 1 115 0
 374 0468 A3E0     		b	.L1
 375              	.L24:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c ****         
 119:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 120:..\src/command_processing.c ****             cmd_get_velocities();
 376              		.loc 1 120 0
 377 046a FFF7FEFF 		bl	cmd_get_velocities
 121:..\src/command_processing.c ****             break;
 378              		.loc 1 121 0
 379 046e A0E0     		b	.L1
 380              	.L25:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 126:..\src/command_processing.c ****             cmd_get_accelerations();
 381              		.loc 1 126 0
 382 0470 FFF7FEFF 		bl	cmd_get_accelerations
 127:..\src/command_processing.c ****             break;
 383              		.loc 1 127 0
 384 0474 9DE0     		b	.L1
 385              	.L28:
 128:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 10


 129:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 132:..\src/command_processing.c ****             cmd_get_joystick();
 386              		.loc 1 132 0
 387 0476 FFF7FEFF 		bl	cmd_get_joystick
 133:..\src/command_processing.c ****         break;
 388              		.loc 1 133 0
 389 047a 9AE0     		b	.L1
 390              	.L23:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 136:..\src/command_processing.c **** 
 137:..\src/command_processing.c ****         case CMD_GET_EMG:
 138:..\src/command_processing.c ****             cmd_get_emg();
 391              		.loc 1 138 0
 392 047c FFF7FEFF 		bl	cmd_get_emg
 139:..\src/command_processing.c ****             break;
 393              		.loc 1 139 0
 394 0480 97E0     		b	.L1
 395              	.L17:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 144:..\src/command_processing.c ****             cmd_get_activate();
 396              		.loc 1 144 0
 397 0482 FFF7FEFF 		bl	cmd_get_activate
 145:..\src/command_processing.c ****             break;
 398              		.loc 1 145 0
 399 0486 94E0     		b	.L1
 400              	.L27:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 148:..\src/command_processing.c ****             
 149:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 150:..\src/command_processing.c ****             cmd_set_baudrate();
 401              		.loc 1 150 0
 402 0488 FFF7FEFF 		bl	cmd_set_baudrate
 151:..\src/command_processing.c ****             break;  
 403              		.loc 1 151 0
 404 048c 91E0     		b	.L1
 405              	.L19:
 152:..\src/command_processing.c ****             
 153:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 156:..\src/command_processing.c ****             cmd_get_inputs();
 406              		.loc 1 156 0
 407 048e FFF7FEFF 		bl	cmd_get_inputs
 157:..\src/command_processing.c ****             break;
 408              		.loc 1 157 0
 409 0492 8EE0     		b	.L1
 410              	.L11:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 160:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 11


 161:..\src/command_processing.c ****         case CMD_GET_INFO:
 162:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 411              		.loc 1 162 0
 412 0494 484B     		ldr	r3, .L52
 413 0496 1B88     		ldrh	r3, [r3]
 414 0498 BB61     		str	r3, [r7, #24]
 415              	.LBB12:
 416              	.LBB13:
 417              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 12


  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 13


 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 14


 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 15


 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 16


 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 17


 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 18


 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 19


 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 20


 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 21


 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 22


 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 23


 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 24


 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 25


 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 418              		.loc 2 792 0
 419 049a BB69     		ldr	r3, [r7, #24]
 420              		.syntax unified
 421              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 422 049c 5BBA     		rev16 r3, r3
 423              	@ 0 "" 2
 424              		.thumb
 425              		.syntax unified
 426 049e 7B61     		str	r3, [r7, #20]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 427              		.loc 2 793 0
 428 04a0 7B69     		ldr	r3, [r7, #20]
 429              	.LBE13:
 430              	.LBE12:
 431              		.loc 1 162 0
 432 04a2 9BB2     		uxth	r3, r3
 433 04a4 1846     		mov	r0, r3
 434 04a6 FFF7FEFF 		bl	infoGet
 163:..\src/command_processing.c ****             break;
 435              		.loc 1 163 0
 436 04aa 82E0     		b	.L1
 437              	.L7:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 168:..\src/command_processing.c ****             setZeros();
 438              		.loc 1 168 0
 439 04ac FFF7FEFF 		bl	setZeros
 169:..\src/command_processing.c ****             break;
 440              		.loc 1 169 0
 441 04b0 7FE0     		b	.L1
 442              	.L14:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 172:..\src/command_processing.c **** 
 173:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 174:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])),TRUE );
 443              		.loc 1 174 0
 444 04b2 414B     		ldr	r3, .L52
 445 04b4 1B88     		ldrh	r3, [r3]
 446 04b6 BB62     		str	r3, [r7, #40]
 447              	.LBB14:
 448              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 449              		.loc 2 792 0
 450 04b8 BB6A     		ldr	r3, [r7, #40]
 451              		.syntax unified
 452              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 453 04ba 5BBA     		rev16 r3, r3
 454              	@ 0 "" 2
 455              		.thumb
 456              		.syntax unified
 457 04bc 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 26


 458              		.loc 2 793 0
 459 04be 3B69     		ldr	r3, [r7, #16]
 460              	.LBE15:
 461              	.LBE14:
 462              		.loc 1 174 0
 463 04c0 9BB2     		uxth	r3, r3
 464 04c2 0121     		movs	r1, #1
 465 04c4 1846     		mov	r0, r3
 466 04c6 FFF7FEFF 		bl	manage_param_list
 175:..\src/command_processing.c ****             break;
 467              		.loc 1 175 0
 468 04ca 72E0     		b	.L1
 469              	.L5:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================================     CMD_PING
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_PING:
 180:..\src/command_processing.c ****             cmd_ping();
 470              		.loc 1 180 0
 471 04cc FFF7FEFF 		bl	cmd_ping
 181:..\src/command_processing.c ****             break;
 472              		.loc 1 181 0
 473 04d0 6FE0     		b	.L1
 474              	.L8:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 184:..\src/command_processing.c ****             
 185:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 186:..\src/command_processing.c ****             cmd_store_params();
 475              		.loc 1 186 0
 476 04d2 FFF7FEFF 		bl	cmd_store_params
 187:..\src/command_processing.c ****             break;
 477              		.loc 1 187 0
 478 04d6 6CE0     		b	.L1
 479              	.L9:
 188:..\src/command_processing.c **** 
 189:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 190:..\src/command_processing.c **** 
 191:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 192:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 480              		.loc 1 192 0
 481 04d8 3220     		movs	r0, #50
 482 04da FFF7FEFF 		bl	memStore
 483 04de 0346     		mov	r3, r0
 484 04e0 002B     		cmp	r3, #0
 485 04e2 03D0     		beq	.L40
 193:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 486              		.loc 1 193 0
 487 04e4 0120     		movs	r0, #1
 488 04e6 FFF7FEFF 		bl	sendAcknowledgment
 194:..\src/command_processing.c ****             else
 195:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 196:..\src/command_processing.c ****             break;
 489              		.loc 1 196 0
 490 04ea 62E0     		b	.L1
 491              	.L40:
 195:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 27


 492              		.loc 1 195 0
 493 04ec 0020     		movs	r0, #0
 494 04ee FFF7FEFF 		bl	sendAcknowledgment
 495              		.loc 1 196 0
 496 04f2 5EE0     		b	.L1
 497              	.L10:
 197:..\src/command_processing.c **** 
 198:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 199:..\src/command_processing.c **** 
 200:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 201:..\src/command_processing.c ****             if(memRestore())
 498              		.loc 1 201 0
 499 04f4 FFF7FEFF 		bl	memRestore
 500 04f8 0346     		mov	r3, r0
 501 04fa 002B     		cmp	r3, #0
 502 04fc 03D0     		beq	.L42
 202:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 503              		.loc 1 202 0
 504 04fe 0120     		movs	r0, #1
 505 0500 FFF7FEFF 		bl	sendAcknowledgment
 203:..\src/command_processing.c ****             else
 204:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 205:..\src/command_processing.c ****             break;
 506              		.loc 1 205 0
 507 0504 55E0     		b	.L1
 508              	.L42:
 204:..\src/command_processing.c ****             break;
 509              		.loc 1 204 0
 510 0506 0020     		movs	r0, #0
 511 0508 FFF7FEFF 		bl	sendAcknowledgment
 512              		.loc 1 205 0
 513 050c 51E0     		b	.L1
 514              	.L13:
 206:..\src/command_processing.c **** 
 207:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 208:..\src/command_processing.c **** 
 209:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 210:..\src/command_processing.c ****             if(memInit())
 515              		.loc 1 210 0
 516 050e FFF7FEFF 		bl	memInit
 517 0512 0346     		mov	r3, r0
 518 0514 002B     		cmp	r3, #0
 519 0516 03D0     		beq	.L44
 211:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 520              		.loc 1 211 0
 521 0518 0120     		movs	r0, #1
 522 051a FFF7FEFF 		bl	sendAcknowledgment
 212:..\src/command_processing.c ****             else
 213:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 214:..\src/command_processing.c ****             break;
 523              		.loc 1 214 0
 524 051e 48E0     		b	.L1
 525              	.L44:
 213:..\src/command_processing.c ****             break;
 526              		.loc 1 213 0
 527 0520 0020     		movs	r0, #0
 528 0522 FFF7FEFF 		bl	sendAcknowledgment
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 28


 529              		.loc 1 214 0
 530 0526 44E0     		b	.L1
 531              	.L12:
 215:..\src/command_processing.c **** 
 216:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 217:..\src/command_processing.c **** 
 218:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 219:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 220:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 532              		.loc 1 220 0
 533 0528 0120     		movs	r0, #1
 534 052a FFF7FEFF 		bl	sendAcknowledgment
 221:..\src/command_processing.c ****             CyDelay(1000);
 535              		.loc 1 221 0
 536 052e 4FF47A70 		mov	r0, #1000
 537 0532 FFF7FEFF 		bl	CyDelay
 222:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 538              		.loc 1 222 0
 539 0536 0020     		movs	r0, #0
 540 0538 FFF7FEFF 		bl	FTDI_ENABLE_Write
 223:..\src/command_processing.c ****             CyDelay(1000);
 541              		.loc 1 223 0
 542 053c 4FF47A70 		mov	r0, #1000
 543 0540 FFF7FEFF 		bl	CyDelay
 224:..\src/command_processing.c ****             Bootloadable_Load();
 544              		.loc 1 224 0
 545 0544 FFF7FEFF 		bl	Bootloadable_Load
 225:..\src/command_processing.c ****             break;
 546              		.loc 1 225 0
 547 0548 33E0     		b	.L1
 548              	.L29:
 226:..\src/command_processing.c **** 
 227:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 228:..\src/command_processing.c **** 
 229:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 230:..\src/command_processing.c ****            
 231:..\src/command_processing.c ****             break;
 232:..\src/command_processing.c ****             
 233:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 234:..\src/command_processing.c **** 
 235:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 236:..\src/command_processing.c ****             cmd_get_imu_readings();
 549              		.loc 1 236 0
 550 054a FFF7FEFF 		bl	cmd_get_imu_readings
 237:..\src/command_processing.c ****             break; 
 551              		.loc 1 237 0
 552 054e 30E0     		b	.L1
 553              	.L30:
 238:..\src/command_processing.c ****             
 239:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 240:..\src/command_processing.c **** 
 241:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 242:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 554              		.loc 1 242 0
 555 0550 194B     		ldr	r3, .L52
 556 0552 1B88     		ldrh	r3, [r3]
 557 0554 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 29


 558              	.LBB16:
 559              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 560              		.loc 2 792 0
 561 0556 7B6A     		ldr	r3, [r7, #36]
 562              		.syntax unified
 563              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 564 0558 5BBA     		rev16 r3, r3
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 055a FB60     		str	r3, [r7, #12]
 569              		.loc 2 793 0
 570 055c FB68     		ldr	r3, [r7, #12]
 571              	.LBE17:
 572              	.LBE16:
 573              		.loc 1 242 0
 574 055e 9BB2     		uxth	r3, r3
 575 0560 1846     		mov	r0, r3
 576 0562 FFF7FEFF 		bl	get_IMU_param_list
 243:..\src/command_processing.c ****             break;             
 577              		.loc 1 243 0
 578 0566 24E0     		b	.L1
 579              	.L31:
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 246:..\src/command_processing.c **** 
 247:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 248:..\src/command_processing.c ****             cmd_get_encoder_map();
 580              		.loc 1 248 0
 581 0568 FFF7FEFF 		bl	cmd_get_encoder_map
 249:..\src/command_processing.c ****             break; 
 582              		.loc 1 249 0
 583 056c 21E0     		b	.L1
 584              	.L32:
 250:..\src/command_processing.c **** 
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 254:..\src/command_processing.c ****             cmd_get_encoder_raw();
 585              		.loc 1 254 0
 586 056e FFF7FEFF 		bl	cmd_get_encoder_raw
 255:..\src/command_processing.c ****             break; 
 587              		.loc 1 255 0
 588 0572 1EE0     		b	.L1
 589              	.L33:
 256:..\src/command_processing.c **** 
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 260:..\src/command_processing.c ****             cmd_get_ADC_map();
 590              		.loc 1 260 0
 591 0574 FFF7FEFF 		bl	cmd_get_ADC_map
 261:..\src/command_processing.c ****             break; 
 592              		.loc 1 261 0
 593 0578 1BE0     		b	.L1
 594              	.L34:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 30


 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 266:..\src/command_processing.c ****             cmd_get_ADC_raw();
 595              		.loc 1 266 0
 596 057a FFF7FEFF 		bl	cmd_get_ADC_raw
 267:..\src/command_processing.c ****             break; 
 597              		.loc 1 267 0
 598 057e 18E0     		b	.L1
 599              	.L35:
 268:..\src/command_processing.c ****             
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_SINGLE_FILE
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 272:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 600              		.loc 1 272 0
 601 0580 0D4B     		ldr	r3, .L52
 602 0582 1B88     		ldrh	r3, [r3]
 603 0584 3B62     		str	r3, [r7, #32]
 604              	.LBB18:
 605              	.LBB19:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 606              		.loc 2 792 0
 607 0586 3B6A     		ldr	r3, [r7, #32]
 608              		.syntax unified
 609              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 610 0588 5BBA     		rev16 r3, r3
 611              	@ 0 "" 2
 612              		.thumb
 613              		.syntax unified
 614 058a BB60     		str	r3, [r7, #8]
 615              		.loc 2 793 0
 616 058c BB68     		ldr	r3, [r7, #8]
 617              	.LBE19:
 618              	.LBE18:
 619              		.loc 1 272 0
 620 058e 9BB2     		uxth	r3, r3
 621 0590 1846     		mov	r0, r3
 622 0592 FFF7FEFF 		bl	cmd_get_SD_file
 273:..\src/command_processing.c ****             break;   
 623              		.loc 1 273 0
 624 0596 0CE0     		b	.L1
 625              	.L36:
 274:..\src/command_processing.c ****             
 275:..\src/command_processing.c **** //=====================================================     CMD_REMOVE_SD_SINGLE_FILE
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_REMOVE_SD_SINGLE_FILE:
 278:..\src/command_processing.c ****             cmd_remove_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 626              		.loc 1 278 0
 627 0598 074B     		ldr	r3, .L52
 628 059a 1B88     		ldrh	r3, [r3]
 629 059c FB61     		str	r3, [r7, #28]
 630              	.LBB20:
 631              	.LBB21:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 632              		.loc 2 792 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 31


 633 059e FB69     		ldr	r3, [r7, #28]
 634              		.syntax unified
 635              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 636 05a0 5BBA     		rev16 r3, r3
 637              	@ 0 "" 2
 638              		.thumb
 639              		.syntax unified
 640 05a2 7B60     		str	r3, [r7, #4]
 641              		.loc 2 793 0
 642 05a4 7B68     		ldr	r3, [r7, #4]
 643              	.LBE21:
 644              	.LBE20:
 645              		.loc 1 278 0
 646 05a6 9BB2     		uxth	r3, r3
 647 05a8 1846     		mov	r0, r3
 648 05aa FFF7FEFF 		bl	cmd_remove_SD_file
 279:..\src/command_processing.c ****             break;               
 649              		.loc 1 279 0
 650 05ae 00E0     		b	.L1
 651              	.L49:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 282:..\src/command_processing.c ****         default:
 283:..\src/command_processing.c ****             break;
 652              		.loc 1 283 0
 653 05b0 00BF     		nop
 654              	.L1:
 284:..\src/command_processing.c **** 
 285:..\src/command_processing.c ****     }
 286:..\src/command_processing.c **** }  
 655              		.loc 1 286 0
 656 05b2 3037     		adds	r7, r7, #48
 657              		.cfi_def_cfa_offset 8
 658 05b4 BD46     		mov	sp, r7
 659              		.cfi_def_cfa_register 13
 660              		@ sp needed
 661 05b6 80BD     		pop	{r7, pc}
 662              	.L53:
 663              		.align	2
 664              	.L52:
 665 05b8 01000000 		.word	g_rx+1
 666              		.cfi_endproc
 667              	.LFE64:
 668              		.size	commProcess, .-commProcess
 669              		.section	.text.infoSend,"ax",%progbits
 670              		.align	2
 671              		.global	infoSend
 672              		.thumb
 673              		.thumb_func
 674              		.type	infoSend, %function
 675              	infoSend:
 676              	.LFB65:
 287:..\src/command_processing.c **** 
 288:..\src/command_processing.c **** //==============================================================================
 289:..\src/command_processing.c **** //                                                                     INFO SEND
 290:..\src/command_processing.c **** //==============================================================================
 291:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 32


 292:..\src/command_processing.c **** void infoSend(void){
 677              		.loc 1 292 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 1504
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 ADF5BC6D 		sub	sp, sp, #1504
 686              		.cfi_def_cfa_offset 1512
 687 0006 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 293:..\src/command_processing.c ****     char packet_string[1500];
 294:..\src/command_processing.c ****     
 295:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 689              		.loc 1 295 0
 690 0008 3B1D     		adds	r3, r7, #4
 691 000a 1846     		mov	r0, r3
 692 000c FFF7FEFF 		bl	prepare_generic_info
 296:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 693              		.loc 1 296 0
 694 0010 3B1D     		adds	r3, r7, #4
 695 0012 1846     		mov	r0, r3
 696 0014 FFF7FEFF 		bl	UART_RS485_PutString
 297:..\src/command_processing.c **** }
 697              		.loc 1 297 0
 698 0018 00BF     		nop
 699 001a 07F5BC67 		add	r7, r7, #1504
 700              		.cfi_def_cfa_offset 8
 701 001e BD46     		mov	sp, r7
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 0020 80BD     		pop	{r7, pc}
 705              		.cfi_endproc
 706              	.LFE65:
 707              		.size	infoSend, .-infoSend
 708 0022 00BF     		.section	.text.num_of_bytes,"ax",%progbits
 709              		.align	2
 710              		.global	num_of_bytes
 711              		.thumb
 712              		.thumb_func
 713              		.type	num_of_bytes, %function
 714              	num_of_bytes:
 715              	.LFB66:
 298:..\src/command_processing.c **** //==============================================================================
 299:..\src/command_processing.c **** //                                                                  NUM_OF_BYTES
 300:..\src/command_processing.c **** //==============================================================================
 301:..\src/command_processing.c ****                     
 302:..\src/command_processing.c **** uint8 num_of_bytes (uint8 TYPE){
 716              		.loc 1 302 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 16
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 33


 723              		.cfi_offset 7, -4
 724 0002 85B0     		sub	sp, sp, #20
 725              		.cfi_def_cfa_offset 24
 726 0004 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 728 0006 0346     		mov	r3, r0
 729 0008 FB71     		strb	r3, [r7, #7]
 303:..\src/command_processing.c ****     uint8 sod;
 304:..\src/command_processing.c ****     switch (TYPE) {
 730              		.loc 1 304 0
 731 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 732 000c 092B     		cmp	r3, #9
 733 000e 20D8     		bhi	.L56
 734 0010 01A2     		adr	r2, .L58
 735 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 736 0016 00BF     		.p2align 2
 737              	.L58:
 738 0018 41000000 		.word	.L57+1
 739 001c 41000000 		.word	.L57+1
 740 0020 41000000 		.word	.L57+1
 741 0024 47000000 		.word	.L59+1
 742 0028 47000000 		.word	.L59+1
 743 002c 4D000000 		.word	.L60+1
 744 0030 4D000000 		.word	.L60+1
 745 0034 4D000000 		.word	.L60+1
 746 0038 53000000 		.word	.L56+1
 747 003c 41000000 		.word	.L57+1
 748              		.p2align 1
 749              	.L57:
 305:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 306:..\src/command_processing.c ****                 sod = 1; break;
 750              		.loc 1 306 0
 751 0040 0123     		movs	r3, #1
 752 0042 FB73     		strb	r3, [r7, #15]
 753 0044 05E0     		b	.L56
 754              	.L59:
 307:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 308:..\src/command_processing.c ****                 sod = 2; break;
 755              		.loc 1 308 0
 756 0046 0223     		movs	r3, #2
 757 0048 FB73     		strb	r3, [r7, #15]
 758 004a 02E0     		b	.L56
 759              	.L60:
 309:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 310:..\src/command_processing.c ****                 sod = 4; break;
 760              		.loc 1 310 0
 761 004c 0423     		movs	r3, #4
 762 004e FB73     		strb	r3, [r7, #15]
 763 0050 00BF     		nop
 764              	.L56:
 311:..\src/command_processing.c ****     }  
 312:..\src/command_processing.c ****     return sod;
 765              		.loc 1 312 0
 766 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 313:..\src/command_processing.c **** }
 767              		.loc 1 313 0
 768 0054 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 34


 769 0056 1437     		adds	r7, r7, #20
 770              		.cfi_def_cfa_offset 4
 771 0058 BD46     		mov	sp, r7
 772              		.cfi_def_cfa_register 13
 773              		@ sp needed
 774 005a 80BC     		pop	{r7}
 775              		.cfi_restore 7
 776              		.cfi_def_cfa_offset 0
 777 005c 7047     		bx	lr
 778              		.cfi_endproc
 779              	.LFE66:
 780              		.size	num_of_bytes, .-num_of_bytes
 781 005e 00BF     		.section	.text.infoGet,"ax",%progbits
 782              		.align	2
 783              		.global	infoGet
 784              		.thumb
 785              		.thumb_func
 786              		.type	infoGet, %function
 787              	infoGet:
 788              	.LFB67:
 314:..\src/command_processing.c **** 
 315:..\src/command_processing.c **** //==============================================================================
 316:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 317:..\src/command_processing.c **** //==============================================================================
 318:..\src/command_processing.c **** 
 319:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 789              		.loc 1 319 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 24008
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793 0000 80B5     		push	{r7, lr}
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 ADF5BB4D 		sub	sp, sp, #23936
 798              		.cfi_def_cfa_offset 23944
 799 0006 92B0     		sub	sp, sp, #72
 800              		.cfi_def_cfa_offset 24016
 801 0008 00AF     		add	r7, sp, #0
 802              		.cfi_def_cfa_register 7
 803 000a 0246     		mov	r2, r0
 804 000c 07F14803 		add	r3, r7, #72
 805 0010 423B     		subs	r3, r3, #66
 806 0012 1A80     		strh	r2, [r3]	@ movhi
 320:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 807              		.loc 1 320 0
 808 0014 07F59C43 		add	r3, r7, #19968
 809 0018 03F12803 		add	r3, r3, #40
 810 001c 0022     		movs	r2, #0
 811 001e 1A60     		str	r2, [r3]
 812 0020 0433     		adds	r3, r3, #4
 813 0022 40F69C72 		movw	r2, #3996
 814 0026 0021     		movs	r1, #0
 815 0028 1846     		mov	r0, r3
 816 002a FFF7FEFF 		bl	memset
 321:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 817              		.loc 1 321 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 35


 818 002e 07F14803 		add	r3, r7, #72
 819 0032 403B     		subs	r3, r3, #64
 820 0034 0022     		movs	r2, #0
 821 0036 1A60     		str	r2, [r3]
 822 0038 0433     		adds	r3, r3, #4
 823 003a 44F61C62 		movw	r2, #19996
 824 003e 0021     		movs	r1, #0
 825 0040 1846     		mov	r0, r3
 826 0042 FFF7FEFF 		bl	memset
 322:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 323:..\src/command_processing.c **** 
 324:..\src/command_processing.c ****     switch (info_type) {
 827              		.loc 1 324 0
 828 0046 07F14803 		add	r3, r7, #72
 829 004a 423B     		subs	r3, r3, #66
 830 004c 1B88     		ldrh	r3, [r3]
 831 004e 062B     		cmp	r3, #6
 832 0050 7DD8     		bhi	.L73
 833 0052 01A2     		adr	r2, .L65
 834 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 835              		.p2align 2
 836              	.L65:
 837 0058 75000000 		.word	.L64+1
 838 005c 97000000 		.word	.L66+1
 839 0060 B9000000 		.word	.L67+1
 840 0064 E1000000 		.word	.L68+1
 841 0068 03010000 		.word	.L69+1
 842 006c 21010000 		.word	.L70+1
 843 0070 27010000 		.word	.L71+1
 844              		.p2align 1
 845              	.L64:
 325:..\src/command_processing.c ****         case INFO_ALL:
 326:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 846              		.loc 1 326 0
 847 0074 07F59C43 		add	r3, r7, #19968
 848 0078 03F12803 		add	r3, r3, #40
 849 007c 1846     		mov	r0, r3
 850 007e FFF7FEFF 		bl	prepare_generic_info
 327:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 851              		.loc 1 327 0
 852 0082 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 328:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 853              		.loc 1 328 0
 854 0086 07F59C43 		add	r3, r7, #19968
 855 008a 03F12803 		add	r3, r3, #40
 856 008e 1846     		mov	r0, r3
 857 0090 FFF7FEFF 		bl	UART_RS485_PutString
 329:..\src/command_processing.c ****             break;
 858              		.loc 1 329 0
 859 0094 5CE0     		b	.L72
 860              	.L66:
 330:..\src/command_processing.c ****         case CYCLES_INFO:
 331:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 861              		.loc 1 331 0
 862 0096 07F59C43 		add	r3, r7, #19968
 863 009a 03F12803 		add	r3, r3, #40
 864 009e 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 36


 865 00a0 FFF7FEFF 		bl	prepare_counter_info
 332:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 866              		.loc 1 332 0
 867 00a4 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 333:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 868              		.loc 1 333 0
 869 00a8 07F59C43 		add	r3, r7, #19968
 870 00ac 03F12803 		add	r3, r3, #40
 871 00b0 1846     		mov	r0, r3
 872 00b2 FFF7FEFF 		bl	UART_RS485_PutString
 334:..\src/command_processing.c ****             break;
 873              		.loc 1 334 0
 874 00b6 4BE0     		b	.L72
 875              	.L67:
 335:..\src/command_processing.c ****         case GET_SD_PARAM:
 336:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 876              		.loc 1 336 0
 877 00b8 07F59C43 		add	r3, r7, #19968
 878 00bc 03F12803 		add	r3, r3, #40
 879 00c0 4FF47A62 		mov	r2, #4000
 880 00c4 1946     		mov	r1, r3
 881 00c6 2548     		ldr	r0, .L74
 882 00c8 FFF7FEFF 		bl	Read_SD_Closed_File
 337:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 883              		.loc 1 337 0
 884 00cc FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 338:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 885              		.loc 1 338 0
 886 00d0 07F59C43 		add	r3, r7, #19968
 887 00d4 03F12803 		add	r3, r3, #40
 888 00d8 1846     		mov	r0, r3
 889 00da FFF7FEFF 		bl	UART_RS485_PutString
 339:..\src/command_processing.c ****             break;
 890              		.loc 1 339 0
 891 00de 37E0     		b	.L72
 892              	.L68:
 340:..\src/command_processing.c ****         case GET_SD_DATA:
 341:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 893              		.loc 1 341 0
 894 00e0 07F14803 		add	r3, r7, #72
 895 00e4 403B     		subs	r3, r3, #64
 896 00e6 44F62061 		movw	r1, #20000
 897 00ea 1846     		mov	r0, r3
 898 00ec FFF7FEFF 		bl	Read_SD_Current_Data
 342:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 899              		.loc 1 342 0
 900 00f0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 343:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 901              		.loc 1 343 0
 902 00f4 07F14803 		add	r3, r7, #72
 903 00f8 403B     		subs	r3, r3, #64
 904 00fa 1846     		mov	r0, r3
 905 00fc FFF7FEFF 		bl	UART_RS485_PutString
 344:..\src/command_processing.c ****             break;
 906              		.loc 1 344 0
 907 0100 26E0     		b	.L72
 908              	.L69:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 37


 345:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 346:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 909              		.loc 1 346 0
 910 0102 07F14803 		add	r3, r7, #72
 911 0106 403B     		subs	r3, r3, #64
 912 0108 1846     		mov	r0, r3
 913 010a FFF7FEFF 		bl	Get_SD_FS
 347:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 914              		.loc 1 347 0
 915 010e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 348:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 916              		.loc 1 348 0
 917 0112 07F14803 		add	r3, r7, #72
 918 0116 403B     		subs	r3, r3, #64
 919 0118 1846     		mov	r0, r3
 920 011a FFF7FEFF 		bl	UART_RS485_PutString
 349:..\src/command_processing.c ****             break;
 921              		.loc 1 349 0
 922 011e 17E0     		b	.L72
 923              	.L70:
 350:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 351:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 352:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 924              		.loc 1 352 0
 925 0120 FFF7FEFF 		bl	Read_SD_EMG_History_Data
 353:..\src/command_processing.c ****             break;
 926              		.loc 1 353 0
 927 0124 14E0     		b	.L72
 928              	.L71:
 354:..\src/command_processing.c ****         case GET_SD_R01_SUMM:
 355:..\src/command_processing.c ****             Read_SD_Closed_File(sdR01File, packet_string, sizeof(packet_string));
 929              		.loc 1 355 0
 930 0126 07F59C43 		add	r3, r7, #19968
 931 012a 03F12803 		add	r3, r3, #40
 932 012e 4FF47A62 		mov	r2, #4000
 933 0132 1946     		mov	r1, r3
 934 0134 0A48     		ldr	r0, .L74+4
 935 0136 FFF7FEFF 		bl	Read_SD_Closed_File
 356:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 936              		.loc 1 356 0
 937 013a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 357:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 938              		.loc 1 357 0
 939 013e 07F59C43 		add	r3, r7, #19968
 940 0142 03F12803 		add	r3, r3, #40
 941 0146 1846     		mov	r0, r3
 942 0148 FFF7FEFF 		bl	UART_RS485_PutString
 358:..\src/command_processing.c ****             break;            
 943              		.loc 1 358 0
 944 014c 00E0     		b	.L72
 945              	.L73:
 359:..\src/command_processing.c ****         default:
 360:..\src/command_processing.c ****             break;
 946              		.loc 1 360 0
 947 014e 00BF     		nop
 948              	.L72:
 361:..\src/command_processing.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 38


 362:..\src/command_processing.c **** }
 949              		.loc 1 362 0 discriminator 1
 950 0150 00BF     		nop
 951 0152 07F5BB47 		add	r7, r7, #23936
 952 0156 4837     		adds	r7, r7, #72
 953              		.cfi_def_cfa_offset 8
 954 0158 BD46     		mov	sp, r7
 955              		.cfi_def_cfa_register 13
 956              		@ sp needed
 957 015a 80BD     		pop	{r7, pc}
 958              	.L75:
 959              		.align	2
 960              	.L74:
 961 015c 00000000 		.word	sdParam
 962 0160 00000000 		.word	sdR01File
 963              		.cfi_endproc
 964              	.LFE67:
 965              		.size	infoGet, .-infoGet
 966              		.section	.rodata
 967              		.align	2
 968              	.LC8:
 969 0000 00       		.ascii	"\000"
 970 0001 000000   		.align	2
 971              	.LC14:
 972 0004 202D2000 		.ascii	" - \000"
 973              		.align	2
 974              	.LC15:
 975 0008 54686520 		.ascii	"The board will reset\012\000"
 975      626F6172 
 975      64207769 
 975      6C6C2072 
 975      65736574 
 976 001e 0000     		.align	2
 977              	.LC16:
 978 0020 202D3E20 		.ascii	" -> \000"
 978      00
 979 0025 000000   		.align	2
 980              	.LC17:
 981 0028 0A00     		.ascii	"\012\000"
 982              		.section	.text.get_param_list,"ax",%progbits
 983              		.align	2
 984              		.global	get_param_list
 985              		.thumb
 986              		.thumb_func
 987              		.type	get_param_list, %function
 988              	get_param_list:
 989              	.LFB68:
 363:..\src/command_processing.c **** 
 364:..\src/command_processing.c **** 
 365:..\src/command_processing.c **** //==============================================================================
 366:..\src/command_processing.c **** //                                                                GET PARAM LIST
 367:..\src/command_processing.c **** //==============================================================================
 368:..\src/command_processing.c **** 
 369:..\src/command_processing.c **** void get_param_list ( uint8 num_params, uint8 num_menus, const struct parameter PARAM_LIST[], const
 990              		.loc 1 369 0
 991              		.cfi_startproc
 992              		@ args = 4, pretend = 0, frame = 608
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 39


 993              		@ frame_needed = 1, uses_anonymous_args = 0
 994 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 995              		.cfi_def_cfa_offset 28
 996              		.cfi_offset 4, -28
 997              		.cfi_offset 5, -24
 998              		.cfi_offset 6, -20
 999              		.cfi_offset 7, -16
 1000              		.cfi_offset 8, -12
 1001              		.cfi_offset 9, -8
 1002              		.cfi_offset 14, -4
 1003 0004 ADF5197D 		sub	sp, sp, #612
 1004              		.cfi_def_cfa_offset 640
 1005 0008 00AF     		add	r7, sp, #0
 1006              		.cfi_def_cfa_register 7
 1007 000a 0646     		mov	r6, r0
 1008 000c 0846     		mov	r0, r1
 1009 000e 07F10801 		add	r1, r7, #8
 1010 0012 0A60     		str	r2, [r1]
 1011 0014 3A1D     		adds	r2, r7, #4
 1012 0016 1360     		str	r3, [r2]
 1013 0018 07F10F03 		add	r3, r7, #15
 1014 001c 3246     		mov	r2, r6
 1015 001e 1A70     		strb	r2, [r3]
 1016 0020 07F10E03 		add	r3, r7, #14
 1017 0024 0246     		mov	r2, r0
 1018 0026 1A70     		strb	r2, [r3]
 1019              		.loc 1 369 0
 1020 0028 6B46     		mov	r3, sp
 1021 002a 1E46     		mov	r6, r3
 370:..\src/command_processing.c ****     //Auxiliary variables
 371:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1022              		.loc 1 371 0
 1023 002c 0023     		movs	r3, #0
 1024 002e 87F85F32 		strb	r3, [r7, #607]
 372:..\src/command_processing.c ****     uint8* m_addr = (uint8*)PARAM_LIST[0].VAR_P;
 1025              		.loc 1 372 0
 1026 0032 07F10803 		add	r3, r7, #8
 1027 0036 1B68     		ldr	r3, [r3]
 1028 0038 1B68     		ldr	r3, [r3]
 1029 003a C7F85032 		str	r3, [r7, #592]
 373:..\src/command_processing.c ****     uint8 CYDATA string_length;
 374:..\src/command_processing.c ****     char CYDATA aux_str[250] = "";
 1030              		.loc 1 374 0
 1031 003e 07F5A473 		add	r3, r7, #328
 1032 0042 0022     		movs	r2, #0
 1033 0044 1A60     		str	r2, [r3]
 1034 0046 0433     		adds	r3, r3, #4
 1035 0048 F622     		movs	r2, #246
 1036 004a 0021     		movs	r1, #0
 1037 004c 1846     		mov	r0, r3
 1038 004e FFF7FEFF 		bl	memset
 375:..\src/command_processing.c ****     char CYDATA aux_str1[250] = ""; 
 1039              		.loc 1 375 0
 1040 0052 07F14C03 		add	r3, r7, #76
 1041 0056 0022     		movs	r2, #0
 1042 0058 1A60     		str	r2, [r3]
 1043 005a 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 40


 1044 005c F622     		movs	r2, #246
 1045 005e 0021     		movs	r1, #0
 1046 0060 1846     		mov	r0, r3
 1047 0062 FFF7FEFF 		bl	memset
 376:..\src/command_processing.c ****     
 377:..\src/command_processing.c ****     
 378:..\src/command_processing.c ****     int32 aux_int32;
 379:..\src/command_processing.c ****     uint8 i, j;
 380:..\src/command_processing.c ****     uint8 count;
 381:..\src/command_processing.c ****     char aux_char[50];
 382:..\src/command_processing.c ****     
 383:..\src/command_processing.c ****     
 384:..\src/command_processing.c ****     
 385:..\src/command_processing.c **** 
 386:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT*num_params + PARAM_MENU_SLOT*num_menus + PARAM_BYTE_SLOT
 1048              		.loc 1 386 0
 1049 0066 07F10F03 		add	r3, r7, #15
 1050 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1051 006c 9BB2     		uxth	r3, r3
 1052 006e 1A46     		mov	r2, r3	@ movhi
 1053 0070 9200     		lsls	r2, r2, #2
 1054 0072 1344     		add	r3, r3, r2
 1055 0074 1A46     		mov	r2, r3	@ movhi
 1056 0076 9100     		lsls	r1, r2, #2
 1057 0078 1A46     		mov	r2, r3	@ movhi
 1058 007a 0B46     		mov	r3, r1	@ movhi
 1059 007c 1344     		add	r3, r3, r2
 1060 007e 5B00     		lsls	r3, r3, #1
 1061 0080 9AB2     		uxth	r2, r3
 1062 0082 07F10E03 		add	r3, r7, #14
 1063 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1064 0088 9BB2     		uxth	r3, r3
 1065 008a 1946     		mov	r1, r3	@ movhi
 1066 008c 8900     		lsls	r1, r1, #2
 1067 008e 0B44     		add	r3, r3, r1
 1068 0090 1946     		mov	r1, r3	@ movhi
 1069 0092 0901     		lsls	r1, r1, #4
 1070 0094 CB1A     		subs	r3, r1, r3
 1071 0096 5B00     		lsls	r3, r3, #1
 1072 0098 9BB2     		uxth	r3, r3
 1073 009a 1344     		add	r3, r3, r2
 1074 009c 9BB2     		uxth	r3, r3
 1075 009e 3233     		adds	r3, r3, #50
 1076 00a0 A7F84E32 		strh	r3, [r7, #590]	@ movhi
 387:..\src/command_processing.c ****     uint8 packet_data[packet_length];
 1077              		.loc 1 387 0
 1078 00a4 B7F84E12 		ldrh	r1, [r7, #590]
 1079 00a8 0B46     		mov	r3, r1
 1080 00aa 013B     		subs	r3, r3, #1
 1081 00ac C7F84832 		str	r3, [r7, #584]
 1082 00b0 8AB2     		uxth	r2, r1
 1083 00b2 4FF00003 		mov	r3, #0
 1084 00b6 4FEAC309 		lsl	r9, r3, #3
 1085 00ba 49EA5279 		orr	r9, r9, r2, lsr #29
 1086 00be 4FEAC208 		lsl	r8, r2, #3
 1087 00c2 8AB2     		uxth	r2, r1
 1088 00c4 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 41


 1089 00c8 DD00     		lsls	r5, r3, #3
 1090 00ca 45EA5275 		orr	r5, r5, r2, lsr #29
 1091 00ce D400     		lsls	r4, r2, #3
 1092 00d0 0B46     		mov	r3, r1
 1093 00d2 0733     		adds	r3, r3, #7
 1094 00d4 DB08     		lsrs	r3, r3, #3
 1095 00d6 DB00     		lsls	r3, r3, #3
 1096 00d8 ADEB030D 		sub	sp, sp, r3
 1097 00dc 6B46     		mov	r3, sp
 1098 00de 0033     		adds	r3, r3, #0
 1099 00e0 C7F84432 		str	r3, [r7, #580]
 1100              	.LBB22:
 388:..\src/command_processing.c ****     for (int ii = 0; ii < packet_length; ii++) packet_data[ii] = 0;
 1101              		.loc 1 388 0
 1102 00e4 0023     		movs	r3, #0
 1103 00e6 C7F85432 		str	r3, [r7, #596]
 1104 00ea 0BE0     		b	.L77
 1105              	.L78:
 1106              		.loc 1 388 0 is_stmt 0 discriminator 3
 1107 00ec D7F84422 		ldr	r2, [r7, #580]
 1108 00f0 D7F85432 		ldr	r3, [r7, #596]
 1109 00f4 1344     		add	r3, r3, r2
 1110 00f6 0022     		movs	r2, #0
 1111 00f8 1A70     		strb	r2, [r3]
 1112 00fa D7F85432 		ldr	r3, [r7, #596]
 1113 00fe 0133     		adds	r3, r3, #1
 1114 0100 C7F85432 		str	r3, [r7, #596]
 1115              	.L77:
 1116              		.loc 1 388 0 discriminator 1
 1117 0104 B7F84E22 		ldrh	r2, [r7, #590]
 1118 0108 D7F85432 		ldr	r3, [r7, #596]
 1119 010c 9A42     		cmp	r2, r3
 1120 010e EDDC     		bgt	.L78
 1121              	.LBE22:
 389:..\src/command_processing.c **** 
 390:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1122              		.loc 1 390 0 is_stmt 1
 1123 0110 D7F84432 		ldr	r3, [r7, #580]
 1124 0114 0C22     		movs	r2, #12
 1125 0116 1A70     		strb	r2, [r3]
 391:..\src/command_processing.c ****     packet_data[1] = num_params;
 1126              		.loc 1 391 0
 1127 0118 D7F84432 		ldr	r3, [r7, #580]
 1128 011c 07F10F02 		add	r2, r7, #15
 1129 0120 1278     		ldrb	r2, [r2]
 1130 0122 5A70     		strb	r2, [r3, #1]
 392:..\src/command_processing.c ****     
 393:..\src/command_processing.c ****     for (idx = 0; idx < num_params; idx ++) {
 1131              		.loc 1 393 0
 1132 0124 0023     		movs	r3, #0
 1133 0126 87F85F32 		strb	r3, [r7, #607]
 1134 012a 44E2     		b	.L79
 1135              	.L102:
 1136              	.LBB23:
 394:..\src/command_processing.c ****         m_addr = (uint8*)PARAM_LIST[idx].VAR_P;
 1137              		.loc 1 394 0
 1138 012c 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 42


 1139 0130 1B01     		lsls	r3, r3, #4
 1140 0132 07F10802 		add	r2, r7, #8
 1141 0136 1268     		ldr	r2, [r2]
 1142 0138 1344     		add	r3, r3, r2
 1143 013a 1B68     		ldr	r3, [r3]
 1144 013c C7F85032 		str	r3, [r7, #592]
 395:..\src/command_processing.c ****         uint8 sod = num_of_bytes(PARAM_LIST[idx].TYPES);
 1145              		.loc 1 395 0
 1146 0140 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1147 0144 1B01     		lsls	r3, r3, #4
 1148 0146 07F10802 		add	r2, r7, #8
 1149 014a 1268     		ldr	r2, [r2]
 1150 014c 1344     		add	r3, r3, r2
 1151 014e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1152 0150 1846     		mov	r0, r3
 1153 0152 FFF7FEFF 		bl	num_of_bytes
 1154 0156 0346     		mov	r3, r0
 1155 0158 87F84332 		strb	r3, [r7, #579]
 396:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = PARAM_LIST[idx].TYPES;
 1156              		.loc 1 396 0
 1157 015c 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1158 0160 3222     		movs	r2, #50
 1159 0162 02FB03F3 		mul	r3, r2, r3
 1160 0166 0233     		adds	r3, r3, #2
 1161 0168 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1162 016c 1201     		lsls	r2, r2, #4
 1163 016e 07F10801 		add	r1, r7, #8
 1164 0172 0968     		ldr	r1, [r1]
 1165 0174 0A44     		add	r2, r2, r1
 1166 0176 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
 1167 0178 D7F84422 		ldr	r2, [r7, #580]
 1168 017c D154     		strb	r1, [r2, r3]
 397:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = PARAM_LIST[idx].NUM_ITEMS;        
 1169              		.loc 1 397 0
 1170 017e 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1171 0182 3222     		movs	r2, #50
 1172 0184 02FB03F3 		mul	r3, r2, r3
 1173 0188 0333     		adds	r3, r3, #3
 1174 018a 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1175 018e 1201     		lsls	r2, r2, #4
 1176 0190 07F10801 		add	r1, r7, #8
 1177 0194 0968     		ldr	r1, [r1]
 1178 0196 0A44     		add	r2, r2, r1
 1179 0198 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1180 019a D7F84422 		ldr	r2, [r7, #580]
 1181 019e D154     		strb	r1, [r2, r3]
 398:..\src/command_processing.c **** 
 399:..\src/command_processing.c **** 
 400:..\src/command_processing.c ****     switch(PARAM_LIST[idx].custom){
 1182              		.loc 1 400 0
 1183 01a0 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1184 01a4 1B01     		lsls	r3, r3, #4
 1185 01a6 07F10802 		add	r2, r7, #8
 1186 01aa 1268     		ldr	r2, [r2]
 1187 01ac 1344     		add	r3, r3, r2
 1188 01ae 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1189 01b0 052B     		cmp	r3, #5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 43


 1190 01b2 61D1     		bne	.L113
 401:..\src/command_processing.c **** 
 402:..\src/command_processing.c ****         case CUSTOM_POS_LIM:        //Position limits
 403:..\src/command_processing.c ****             aux_int32 = (c_mem.SH_config.pos_lim_inf >> c_mem.SH_config.res);
 1191              		.loc 1 403 0
 1192 01b4 B74B     		ldr	r3, .L114
 1193 01b6 1B6A     		ldr	r3, [r3, #32]
 1194 01b8 B64A     		ldr	r2, .L114
 1195 01ba 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 1196 01be 43FA02F2 		asr	r2, r3, r2
 1197 01c2 07F14803 		add	r3, r7, #72
 1198 01c6 1A60     		str	r2, [r3]
 404:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1199              		.loc 1 404 0
 1200 01c8 0023     		movs	r3, #0
 1201 01ca 87F85C32 		strb	r3, [r7, #604]
 1202 01ce 1AE0     		b	.L82
 1203              	.L83:
 405:..\src/command_processing.c ****                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int32))[j];
 1204              		.loc 1 405 0 discriminator 3
 1205 01d0 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1206 01d4 3222     		movs	r2, #50
 1207 01d6 02FB03F3 		mul	r3, r2, r3
 1208 01da 1A1D     		adds	r2, r3, #4
 1209 01dc 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1210 01e0 1A44     		add	r2, r2, r3
 1211 01e2 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1212 01e6 D31A     		subs	r3, r2, r3
 1213 01e8 013B     		subs	r3, r3, #1
 1214 01ea 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1215 01ee 07F14801 		add	r1, r7, #72
 1216 01f2 0A44     		add	r2, r2, r1
 1217 01f4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1218 01f6 D7F84422 		ldr	r2, [r7, #580]
 1219 01fa D154     		strb	r1, [r2, r3]
 404:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1220              		.loc 1 404 0 discriminator 3
 1221 01fc 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1222 0200 0133     		adds	r3, r3, #1
 1223 0202 87F85C32 		strb	r3, [r7, #604]
 1224              	.L82:
 404:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1225              		.loc 1 404 0 is_stmt 0 discriminator 1
 1226 0206 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1227 020a 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1228 020e 9A42     		cmp	r2, r3
 1229 0210 DED3     		bcc	.L83
 406:..\src/command_processing.c ****             }
 407:..\src/command_processing.c ****             aux_int32 = (c_mem.SH_config.pos_lim_sup >> c_mem.SH_config.res);
 1230              		.loc 1 407 0 is_stmt 1
 1231 0212 A04B     		ldr	r3, .L114
 1232 0214 5B6A     		ldr	r3, [r3, #36]
 1233 0216 9F4A     		ldr	r2, .L114
 1234 0218 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 1235 021c 43FA02F2 		asr	r2, r3, r2
 1236 0220 07F14803 		add	r3, r7, #72
 1237 0224 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 44


 408:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1238              		.loc 1 408 0
 1239 0226 0023     		movs	r3, #0
 1240 0228 87F85C32 		strb	r3, [r7, #604]
 1241 022c 1DE0     		b	.L84
 1242              	.L85:
 409:..\src/command_processing.c ****                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&aux_int32))[j
 1243              		.loc 1 409 0 discriminator 3
 1244 022e 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1245 0232 3222     		movs	r2, #50
 1246 0234 02FB03F3 		mul	r3, r2, r3
 1247 0238 1A1D     		adds	r2, r3, #4
 1248 023a 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1249 023e 1A44     		add	r2, r2, r3
 1250 0240 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1251 0244 1A44     		add	r2, r2, r3
 1252 0246 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1253 024a D31A     		subs	r3, r2, r3
 1254 024c 013B     		subs	r3, r3, #1
 1255 024e 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1256 0252 07F14801 		add	r1, r7, #72
 1257 0256 0A44     		add	r2, r2, r1
 1258 0258 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1259 025a D7F84422 		ldr	r2, [r7, #580]
 1260 025e D154     		strb	r1, [r2, r3]
 408:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1261              		.loc 1 408 0 discriminator 3
 1262 0260 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1263 0264 0133     		adds	r3, r3, #1
 1264 0266 87F85C32 		strb	r3, [r7, #604]
 1265              	.L84:
 408:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1266              		.loc 1 408 0 is_stmt 0 discriminator 1
 1267 026a 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1268 026e 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1269 0272 9A42     		cmp	r2, r3
 1270 0274 DBD3     		bcc	.L85
 410:..\src/command_processing.c ****             }
 411:..\src/command_processing.c ****             break;            
 1271              		.loc 1 411 0 is_stmt 1
 1272 0276 48E0     		b	.L86
 1273              	.L113:
 412:..\src/command_processing.c ****             
 413:..\src/command_processing.c **** 
 414:..\src/command_processing.c ****         case 0:  // Not custom parameter
 415:..\src/command_processing.c ****         default: // Parameters that are only custom for SET
 416:..\src/command_processing.c ****             for (i = 0; i < PARAM_LIST[idx].NUM_ITEMS * sod; i+=sod){
 1274              		.loc 1 416 0
 1275 0278 0023     		movs	r3, #0
 1276 027a 87F85D32 		strb	r3, [r7, #605]
 1277 027e 32E0     		b	.L87
 1278              	.L90:
 417:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1279              		.loc 1 417 0
 1280 0280 0023     		movs	r3, #0
 1281 0282 87F85C32 		strb	r3, [r7, #604]
 1282 0286 21E0     		b	.L88
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 45


 1283              	.L89:
 418:..\src/command_processing.c ****                     packet_data[(4 + PARAM_BYTE_SLOT*idx + i) + sod - j -1] = m_addr[i+j];
 1284              		.loc 1 418 0 discriminator 3
 1285 0288 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1286 028c 3222     		movs	r2, #50
 1287 028e 02FB03F3 		mul	r3, r2, r3
 1288 0292 1A1D     		adds	r2, r3, #4
 1289 0294 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1290 0298 1A44     		add	r2, r2, r3
 1291 029a 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1292 029e 1A44     		add	r2, r2, r3
 1293 02a0 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1294 02a4 D31A     		subs	r3, r2, r3
 1295 02a6 013B     		subs	r3, r3, #1
 1296 02a8 97F85D12 		ldrb	r1, [r7, #605]	@ zero_extendqisi2
 1297 02ac 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1298 02b0 0A44     		add	r2, r2, r1
 1299 02b2 1146     		mov	r1, r2
 1300 02b4 D7F85022 		ldr	r2, [r7, #592]
 1301 02b8 0A44     		add	r2, r2, r1
 1302 02ba 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1303 02bc D7F84422 		ldr	r2, [r7, #580]
 1304 02c0 D154     		strb	r1, [r2, r3]
 417:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1305              		.loc 1 417 0 discriminator 3
 1306 02c2 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1307 02c6 0133     		adds	r3, r3, #1
 1308 02c8 87F85C32 		strb	r3, [r7, #604]
 1309              	.L88:
 417:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1310              		.loc 1 417 0 is_stmt 0 discriminator 1
 1311 02cc 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1312 02d0 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1313 02d4 9A42     		cmp	r2, r3
 1314 02d6 D7D3     		bcc	.L89
 416:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1315              		.loc 1 416 0 is_stmt 1 discriminator 2
 1316 02d8 97F85D22 		ldrb	r2, [r7, #605]
 1317 02dc 97F84332 		ldrb	r3, [r7, #579]
 1318 02e0 1344     		add	r3, r3, r2
 1319 02e2 87F85D32 		strb	r3, [r7, #605]
 1320              	.L87:
 416:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1321              		.loc 1 416 0 is_stmt 0 discriminator 1
 1322 02e6 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1323 02ea 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1324 02ee 1B01     		lsls	r3, r3, #4
 1325 02f0 07F10801 		add	r1, r7, #8
 1326 02f4 0968     		ldr	r1, [r1]
 1327 02f6 0B44     		add	r3, r3, r1
 1328 02f8 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1329 02fa 1946     		mov	r1, r3
 1330 02fc 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1331 0300 03FB01F3 		mul	r3, r3, r1
 1332 0304 9A42     		cmp	r2, r3
 1333 0306 BBDB     		blt	.L90
 419:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 46


 420:..\src/command_processing.c ****             }
 421:..\src/command_processing.c ****             break;
 1334              		.loc 1 421 0 is_stmt 1
 1335 0308 00BF     		nop
 1336              	.L86:
 422:..\src/command_processing.c ****     }
 423:..\src/command_processing.c ****        
 424:..\src/command_processing.c ****         sprintf(aux_str,"");
 1337              		.loc 1 424 0
 1338 030a 634B     		ldr	r3, .L114+4
 1339 030c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1340 030e 07F5A473 		add	r3, r7, #328
 1341 0312 1A70     		strb	r2, [r3]
 425:..\src/command_processing.c ****         itoa(idx + 1, aux_char, 10);
 1342              		.loc 1 425 0
 1343 0314 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1344 0318 0133     		adds	r3, r3, #1
 1345 031a 07F11401 		add	r1, r7, #20
 1346 031e 0A22     		movs	r2, #10
 1347 0320 1846     		mov	r0, r3
 1348 0322 FFF7FEFF 		bl	itoa
 426:..\src/command_processing.c ****         strcat(aux_str ,aux_char);
 1349              		.loc 1 426 0
 1350 0326 07F11402 		add	r2, r7, #20
 1351 032a 07F5A473 		add	r3, r7, #328
 1352 032e 1146     		mov	r1, r2
 1353 0330 1846     		mov	r0, r3
 1354 0332 FFF7FEFF 		bl	strcat
 427:..\src/command_processing.c ****         strcat(aux_str," - ");
 1355              		.loc 1 427 0
 1356 0336 07F5A473 		add	r3, r7, #328
 1357 033a 1846     		mov	r0, r3
 1358 033c FFF7FEFF 		bl	strlen
 1359 0340 0346     		mov	r3, r0
 1360 0342 1A46     		mov	r2, r3
 1361 0344 07F5A473 		add	r3, r7, #328
 1362 0348 1344     		add	r3, r3, r2
 1363 034a 544A     		ldr	r2, .L114+8
 1364 034c 1068     		ldr	r0, [r2]	@ unaligned
 1365 034e 1860     		str	r0, [r3]	@ unaligned
 428:..\src/command_processing.c ****         strcat(aux_str,(char*)PARAM_LIST[idx].PARAM_STR);                
 1366              		.loc 1 428 0
 1367 0350 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1368 0354 1B01     		lsls	r3, r3, #4
 1369 0356 07F10802 		add	r2, r7, #8
 1370 035a 1268     		ldr	r2, [r2]
 1371 035c 1344     		add	r3, r3, r2
 1372 035e 9A68     		ldr	r2, [r3, #8]
 1373 0360 07F5A473 		add	r3, r7, #328
 1374 0364 1146     		mov	r1, r2
 1375 0366 1846     		mov	r0, r3
 1376 0368 FFF7FEFF 		bl	strcat
 429:..\src/command_processing.c ****         string_length = strlen(aux_str);
 1377              		.loc 1 429 0
 1378 036c 07F5A473 		add	r3, r7, #328
 1379 0370 1846     		mov	r0, r3
 1380 0372 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 47


 1381 0376 0346     		mov	r3, r0
 1382 0378 87F85E32 		strb	r3, [r7, #606]
 430:..\src/command_processing.c ****         
 431:..\src/command_processing.c ****         // Parameters with a menu
 432:..\src/command_processing.c ****         if (PARAM_LIST[idx].MENU != 0){
 1383              		.loc 1 432 0
 1384 037c 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1385 0380 1B01     		lsls	r3, r3, #4
 1386 0382 07F10802 		add	r2, r7, #8
 1387 0386 1268     		ldr	r2, [r2]
 1388 0388 1344     		add	r3, r3, r2
 1389 038a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1390 038c 002B     		cmp	r3, #0
 1391 038e 40D0     		beq	.L91
 433:..\src/command_processing.c ****             for (i = 0; i < num_menus ; i++){
 1392              		.loc 1 433 0
 1393 0390 0023     		movs	r3, #0
 1394 0392 87F85D32 		strb	r3, [r7, #605]
 1395 0396 35E0     		b	.L92
 1396              	.L94:
 434:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1397              		.loc 1 434 0
 1398 0398 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1399 039c 2C22     		movs	r2, #44
 1400 039e 02FB03F3 		mul	r3, r2, r3
 1401 03a2 3A1D     		adds	r2, r7, #4
 1402 03a4 1268     		ldr	r2, [r2]
 1403 03a6 1344     		add	r3, r3, r2
 1404 03a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1405 03aa 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1406 03ae 1B01     		lsls	r3, r3, #4
 1407 03b0 07F10801 		add	r1, r7, #8
 1408 03b4 0968     		ldr	r1, [r1]
 1409 03b6 0B44     		add	r3, r3, r1
 1410 03b8 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1411 03ba 9A42     		cmp	r2, r3
 1412 03bc 13D1     		bne	.L93
 435:..\src/command_processing.c ****                 strcat(aux_str, MENU_LIST[i].choice[*m_addr]);
 1413              		.loc 1 435 0
 1414 03be 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1415 03c2 2C22     		movs	r2, #44
 1416 03c4 02FB03F3 		mul	r3, r2, r3
 1417 03c8 3A1D     		adds	r2, r7, #4
 1418 03ca 1268     		ldr	r2, [r2]
 1419 03cc 1A44     		add	r2, r2, r3
 1420 03ce D7F85032 		ldr	r3, [r7, #592]
 1421 03d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 03d4 9B00     		lsls	r3, r3, #2
 1423 03d6 1344     		add	r3, r3, r2
 1424 03d8 5A68     		ldr	r2, [r3, #4]
 1425 03da 07F5A473 		add	r3, r7, #328
 1426 03de 1146     		mov	r1, r2
 1427 03e0 1846     		mov	r0, r3
 1428 03e2 FFF7FEFF 		bl	strcat
 1429              	.L93:
 436:..\src/command_processing.c ****                 }              
 437:..\src/command_processing.c ****             //Recomputes string length
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 48


 438:..\src/command_processing.c ****             string_length = strlen(aux_str)+1;
 1430              		.loc 1 438 0 discriminator 2
 1431 03e6 07F5A473 		add	r3, r7, #328
 1432 03ea 1846     		mov	r0, r3
 1433 03ec FFF7FEFF 		bl	strlen
 1434 03f0 0346     		mov	r3, r0
 1435 03f2 DBB2     		uxtb	r3, r3
 1436 03f4 0133     		adds	r3, r3, #1
 1437 03f6 87F85E32 		strb	r3, [r7, #606]
 433:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1438              		.loc 1 433 0 discriminator 2
 1439 03fa 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1440 03fe 0133     		adds	r3, r3, #1
 1441 0400 87F85D32 		strb	r3, [r7, #605]
 1442              	.L92:
 433:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1443              		.loc 1 433 0 is_stmt 0 discriminator 1
 1444 0404 07F10E03 		add	r3, r7, #14
 1445 0408 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1446 040c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 040e 9A42     		cmp	r2, r3
 1448 0410 C2D3     		bcc	.L94
 1449              	.L91:
 439:..\src/command_processing.c ****             }
 440:..\src/command_processing.c ****         }
 441:..\src/command_processing.c **** 
 442:..\src/command_processing.c ****         // Add parameter string to packet
 443:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 1450              		.loc 1 443 0 is_stmt 1
 1451 0412 97F85E32 		ldrb	r3, [r7, #606]
 1452 0416 87F85D32 		strb	r3, [r7, #605]
 1453 041a 28E0     		b	.L95
 1454              	.L96:
 444:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1455              		.loc 1 444 0 discriminator 3
 1456 041c 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1457 0420 3222     		movs	r2, #50
 1458 0422 02FB03F3 		mul	r3, r2, r3
 1459 0426 1A1D     		adds	r2, r3, #4
 1460 0428 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1461 042c 97F85F12 		ldrb	r1, [r7, #607]	@ zero_extendqisi2
 1462 0430 0901     		lsls	r1, r1, #4
 1463 0432 07F10800 		add	r0, r7, #8
 1464 0436 0068     		ldr	r0, [r0]
 1465 0438 0144     		add	r1, r1, r0
 1466 043a 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1467 043c 01FB03F3 		mul	r3, r1, r3
 1468 0440 1A44     		add	r2, r2, r3
 1469 0442 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1470 0446 1A44     		add	r2, r2, r3
 1471 0448 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1472 044c D31A     		subs	r3, r2, r3
 1473 044e 97F85E12 		ldrb	r1, [r7, #606]	@ zero_extendqisi2
 1474 0452 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1475 0456 8A1A     		subs	r2, r1, r2
 1476 0458 07F5A471 		add	r1, r7, #328
 1477 045c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 49


 1478 045e D7F84422 		ldr	r2, [r7, #580]
 1479 0462 D154     		strb	r1, [r2, r3]
 443:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1480              		.loc 1 443 0 discriminator 3
 1481 0464 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1482 0468 013B     		subs	r3, r3, #1
 1483 046a 87F85D32 		strb	r3, [r7, #605]
 1484              	.L95:
 443:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1485              		.loc 1 443 0 is_stmt 0 discriminator 1
 1486 046e 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1487 0472 002B     		cmp	r3, #0
 1488 0474 D2D1     		bne	.L96
 445:..\src/command_processing.c ****         
 446:..\src/command_processing.c ****         
 447:..\src/command_processing.c ****         if (PARAM_LIST[idx].TYPES == TYPE_FLAG){
 1489              		.loc 1 447 0 is_stmt 1
 1490 0476 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1491 047a 1B01     		lsls	r3, r3, #4
 1492 047c 07F10802 		add	r2, r7, #8
 1493 0480 1268     		ldr	r2, [r2]
 1494 0482 1344     		add	r3, r3, r2
 1495 0484 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1496 0486 002B     		cmp	r3, #0
 1497 0488 6ED1     		bne	.L97
 448:..\src/command_processing.c ****             //Send the number of menus          
 449:..\src/command_processing.c ****             for (i = 0; i < num_menus ; i++){
 1498              		.loc 1 449 0
 1499 048a 0023     		movs	r3, #0
 1500 048c 87F85D32 		strb	r3, [r7, #605]
 1501 0490 40E0     		b	.L98
 1502              	.L115:
 1503 0492 00BF     		.align	2
 1504              	.L114:
 1505 0494 00000000 		.word	c_mem
 1506 0498 00000000 		.word	.LC8
 1507 049c 04000000 		.word	.LC14
 1508              	.L100:
 450:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1509              		.loc 1 450 0
 1510 04a0 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1511 04a4 2C22     		movs	r2, #44
 1512 04a6 02FB03F3 		mul	r3, r2, r3
 1513 04aa 3A1D     		adds	r2, r7, #4
 1514 04ac 1268     		ldr	r2, [r2]
 1515 04ae 1344     		add	r3, r3, r2
 1516 04b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1517 04b2 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1518 04b6 1B01     		lsls	r3, r3, #4
 1519 04b8 07F10801 		add	r1, r7, #8
 1520 04bc 0968     		ldr	r1, [r1]
 1521 04be 0B44     		add	r3, r3, r1
 1522 04c0 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1523 04c2 9A42     		cmp	r2, r3
 1524 04c4 21D1     		bne	.L99
 451:..\src/command_processing.c ****                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_le
 1525              		.loc 1 451 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 50


 1526 04c6 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1527 04ca 3222     		movs	r2, #50
 1528 04cc 02FB03F3 		mul	r3, r2, r3
 1529 04d0 1A1D     		adds	r2, r3, #4
 1530 04d2 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1531 04d6 97F85F12 		ldrb	r1, [r7, #607]	@ zero_extendqisi2
 1532 04da 0901     		lsls	r1, r1, #4
 1533 04dc 07F10800 		add	r0, r7, #8
 1534 04e0 0068     		ldr	r0, [r0]
 1535 04e2 0144     		add	r1, r1, r0
 1536 04e4 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1537 04e6 01FB03F3 		mul	r3, r1, r3
 1538 04ea 1A44     		add	r2, r2, r3
 1539 04ec 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1540 04f0 1344     		add	r3, r3, r2
 1541 04f2 97F85D22 		ldrb	r2, [r7, #605]
 1542 04f6 0132     		adds	r2, r2, #1
 1543 04f8 D1B2     		uxtb	r1, r2
 1544 04fa D7F84422 		ldr	r2, [r7, #580]
 1545 04fe D154     		strb	r1, [r2, r3]
 452:..\src/command_processing.c ****                 i = num_menus;}              
 1546              		.loc 1 452 0
 1547 0500 07F10E03 		add	r3, r7, #14
 1548 0504 1B78     		ldrb	r3, [r3]
 1549 0506 87F85D32 		strb	r3, [r7, #605]
 1550              	.L99:
 449:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1551              		.loc 1 449 0 discriminator 2
 1552 050a 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1553 050e 0133     		adds	r3, r3, #1
 1554 0510 87F85D32 		strb	r3, [r7, #605]
 1555              	.L98:
 449:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1556              		.loc 1 449 0 is_stmt 0 discriminator 1
 1557 0514 07F10E03 		add	r3, r7, #14
 1558 0518 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1559 051c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1560 051e 9A42     		cmp	r2, r3
 1561 0520 BED3     		bcc	.L100
 453:..\src/command_processing.c ****             }
 454:..\src/command_processing.c ****             // Add empty bit + struct number
 455:..\src/command_processing.c ****             // Note: added here at the end of packets is transparent to old parameters retrieving v
 456:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1562              		.loc 1 456 0 is_stmt 1
 1563 0522 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1564 0526 3222     		movs	r2, #50
 1565 0528 02FB03F3 		mul	r3, r2, r3
 1566 052c 1A1D     		adds	r2, r3, #4
 1567 052e 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1568 0532 97F85F12 		ldrb	r1, [r7, #607]	@ zero_extendqisi2
 1569 0536 0901     		lsls	r1, r1, #4
 1570 0538 07F10800 		add	r0, r7, #8
 1571 053c 0068     		ldr	r0, [r0]
 1572 053e 0144     		add	r1, r1, r0
 1573 0540 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1574 0542 01FB03F3 		mul	r3, r1, r3
 1575 0546 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 51


 1576 0548 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1577 054c 1344     		add	r3, r3, r2
 1578 054e 0233     		adds	r3, r3, #2
 1579 0550 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1580 0554 1201     		lsls	r2, r2, #4
 1581 0556 07F10801 		add	r1, r7, #8
 1582 055a 0968     		ldr	r1, [r1]
 1583 055c 0A44     		add	r2, r2, r1
 1584 055e 517B     		ldrb	r1, [r2, #13]	@ zero_extendqisi2
 1585 0560 D7F84422 		ldr	r2, [r7, #580]
 1586 0564 D154     		strb	r1, [r2, r3]
 1587 0566 21E0     		b	.L101
 1588              	.L97:
 457:..\src/command_processing.c ****         }
 458:..\src/command_processing.c ****         else {
 459:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1589              		.loc 1 459 0
 1590 0568 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1591 056c 3222     		movs	r2, #50
 1592 056e 02FB03F3 		mul	r3, r2, r3
 1593 0572 1A1D     		adds	r2, r3, #4
 1594 0574 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1595 0578 97F85F12 		ldrb	r1, [r7, #607]	@ zero_extendqisi2
 1596 057c 0901     		lsls	r1, r1, #4
 1597 057e 07F10800 		add	r0, r7, #8
 1598 0582 0068     		ldr	r0, [r0]
 1599 0584 0144     		add	r1, r1, r0
 1600 0586 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1601 0588 01FB03F3 		mul	r3, r1, r3
 1602 058c 1A44     		add	r2, r2, r3
 1603 058e 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1604 0592 1344     		add	r3, r3, r2
 1605 0594 0133     		adds	r3, r3, #1
 1606 0596 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1607 059a 1201     		lsls	r2, r2, #4
 1608 059c 07F10801 		add	r1, r7, #8
 1609 05a0 0968     		ldr	r1, [r1]
 1610 05a2 0A44     		add	r2, r2, r1
 1611 05a4 517B     		ldrb	r1, [r2, #13]	@ zero_extendqisi2
 1612 05a6 D7F84422 		ldr	r2, [r7, #580]
 1613 05aa D154     		strb	r1, [r2, r3]
 1614              	.L101:
 1615              	.LBE23:
 393:..\src/command_processing.c ****         m_addr = (uint8*)PARAM_LIST[idx].VAR_P;
 1616              		.loc 1 393 0 discriminator 2
 1617 05ac 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1618 05b0 0133     		adds	r3, r3, #1
 1619 05b2 87F85F32 		strb	r3, [r7, #607]
 1620              	.L79:
 393:..\src/command_processing.c ****         m_addr = (uint8*)PARAM_LIST[idx].VAR_P;
 1621              		.loc 1 393 0 is_stmt 0 discriminator 1
 1622 05b6 07F10F03 		add	r3, r7, #15
 1623 05ba 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1624 05be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1625 05c0 9A42     		cmp	r2, r3
 1626 05c2 FFF4B3AD 		bcc	.L102
 460:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 52


 461:..\src/command_processing.c ****     }
 462:..\src/command_processing.c ****     
 463:..\src/command_processing.c ****     // Add menu
 464:..\src/command_processing.c ****     for (j = 0; j < num_menus; j++) {
 1627              		.loc 1 464 0 is_stmt 1
 1628 05c6 0023     		movs	r3, #0
 1629 05c8 87F85C32 		strb	r3, [r7, #604]
 1630 05cc C0E0     		b	.L103
 1631              	.L111:
 465:..\src/command_processing.c ****         sprintf(aux_str1,"");
 1632              		.loc 1 465 0
 1633 05ce 774B     		ldr	r3, .L116
 1634 05d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1635 05d2 07F14C03 		add	r3, r7, #76
 1636 05d6 1A70     		strb	r2, [r3]
 466:..\src/command_processing.c ****         for (count = 0; count <10 ; count++){            
 1637              		.loc 1 466 0
 1638 05d8 0023     		movs	r3, #0
 1639 05da 87F85B32 		strb	r3, [r7, #603]
 1640 05de 7AE0     		b	.L104
 1641              	.L108:
 467:..\src/command_processing.c ****             if (!strcmp(MENU_LIST[j].choice[count],"")){
 1642              		.loc 1 467 0
 1643 05e0 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1644 05e4 2C22     		movs	r2, #44
 1645 05e6 02FB03F3 		mul	r3, r2, r3
 1646 05ea 3A1D     		adds	r2, r7, #4
 1647 05ec 1268     		ldr	r2, [r2]
 1648 05ee 1A44     		add	r2, r2, r3
 1649 05f0 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1650 05f4 9B00     		lsls	r3, r3, #2
 1651 05f6 1344     		add	r3, r3, r2
 1652 05f8 5B68     		ldr	r3, [r3, #4]
 1653 05fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1654 05fc 002B     		cmp	r3, #0
 1655 05fe 24D1     		bne	.L105
 468:..\src/command_processing.c ****                 if (MENU_LIST[j].reset == TRUE){
 1656              		.loc 1 468 0
 1657 0600 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1658 0604 2C22     		movs	r2, #44
 1659 0606 02FB03F3 		mul	r3, r2, r3
 1660 060a 3A1D     		adds	r2, r7, #4
 1661 060c 1268     		ldr	r2, [r2]
 1662 060e 1344     		add	r3, r3, r2
 1663 0610 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1664 0612 012B     		cmp	r3, #1
 1665 0614 15D1     		bne	.L106
 469:..\src/command_processing.c ****                     strcat(aux_str1,"The board will reset\n");
 1666              		.loc 1 469 0
 1667 0616 07F14C03 		add	r3, r7, #76
 1668 061a 1846     		mov	r0, r3
 1669 061c FFF7FEFF 		bl	strlen
 1670 0620 0346     		mov	r3, r0
 1671 0622 1A46     		mov	r2, r3
 1672 0624 07F14C03 		add	r3, r7, #76
 1673 0628 1344     		add	r3, r3, r2
 1674 062a 614A     		ldr	r2, .L116+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 53


 1675 062c 1D46     		mov	r5, r3
 1676 062e 1446     		mov	r4, r2
 1677 0630 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1678 0632 2860     		str	r0, [r5]	@ unaligned
 1679 0634 6960     		str	r1, [r5, #4]	@ unaligned
 1680 0636 AA60     		str	r2, [r5, #8]	@ unaligned
 1681 0638 EB60     		str	r3, [r5, #12]	@ unaligned
 1682 063a 2068     		ldr	r0, [r4]	@ unaligned
 1683 063c 2861     		str	r0, [r5, #16]	@ unaligned
 1684 063e A388     		ldrh	r3, [r4, #4]	@ unaligned
 1685 0640 AB82     		strh	r3, [r5, #20]	@ unaligned
 1686              	.L106:
 470:..\src/command_processing.c ****                 }
 471:..\src/command_processing.c ****                 count = 10;
 1687              		.loc 1 471 0
 1688 0642 0A23     		movs	r3, #10
 1689 0644 87F85B32 		strb	r3, [r7, #603]
 1690 0648 40E0     		b	.L107
 1691              	.L105:
 472:..\src/command_processing.c ****             }            
 473:..\src/command_processing.c ****             else {
 474:..\src/command_processing.c ****                 itoa(count, aux_char, 10);
 1692              		.loc 1 474 0
 1693 064a 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1694 064e 07F11401 		add	r1, r7, #20
 1695 0652 0A22     		movs	r2, #10
 1696 0654 1846     		mov	r0, r3
 1697 0656 FFF7FEFF 		bl	itoa
 475:..\src/command_processing.c ****                 strcat(aux_str1,aux_char);
 1698              		.loc 1 475 0
 1699 065a 07F11402 		add	r2, r7, #20
 1700 065e 07F14C03 		add	r3, r7, #76
 1701 0662 1146     		mov	r1, r2
 1702 0664 1846     		mov	r0, r3
 1703 0666 FFF7FEFF 		bl	strcat
 476:..\src/command_processing.c ****                 strcat(aux_str1," -> ");
 1704              		.loc 1 476 0
 1705 066a 07F14C03 		add	r3, r7, #76
 1706 066e 1846     		mov	r0, r3
 1707 0670 FFF7FEFF 		bl	strlen
 1708 0674 0346     		mov	r3, r0
 1709 0676 1A46     		mov	r2, r3
 1710 0678 07F14C03 		add	r3, r7, #76
 1711 067c 1344     		add	r3, r3, r2
 1712 067e 4D4A     		ldr	r2, .L116+8
 1713 0680 1068     		ldr	r0, [r2]	@ unaligned
 1714 0682 1860     		str	r0, [r3]	@ unaligned
 1715 0684 1279     		ldrb	r2, [r2, #4]
 1716 0686 1A71     		strb	r2, [r3, #4]
 477:..\src/command_processing.c ****                 strcat(aux_str1,(char*)MENU_LIST[j].choice[count]);
 1717              		.loc 1 477 0
 1718 0688 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1719 068c 2C22     		movs	r2, #44
 1720 068e 02FB03F3 		mul	r3, r2, r3
 1721 0692 3A1D     		adds	r2, r7, #4
 1722 0694 1268     		ldr	r2, [r2]
 1723 0696 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 54


 1724 0698 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1725 069c 9B00     		lsls	r3, r3, #2
 1726 069e 1344     		add	r3, r3, r2
 1727 06a0 5A68     		ldr	r2, [r3, #4]
 1728 06a2 07F14C03 		add	r3, r7, #76
 1729 06a6 1146     		mov	r1, r2
 1730 06a8 1846     		mov	r0, r3
 1731 06aa FFF7FEFF 		bl	strcat
 478:..\src/command_processing.c ****                 strcat(aux_str1,"\n");
 1732              		.loc 1 478 0
 1733 06ae 07F14C03 		add	r3, r7, #76
 1734 06b2 1846     		mov	r0, r3
 1735 06b4 FFF7FEFF 		bl	strlen
 1736 06b8 0346     		mov	r3, r0
 1737 06ba 1A46     		mov	r2, r3
 1738 06bc 07F14C03 		add	r3, r7, #76
 1739 06c0 1344     		add	r3, r3, r2
 1740 06c2 3D49     		ldr	r1, .L116+12
 1741 06c4 1A46     		mov	r2, r3
 1742 06c6 0B46     		mov	r3, r1
 1743 06c8 1B88     		ldrh	r3, [r3]	@ unaligned
 1744 06ca 1380     		strh	r3, [r2]	@ unaligned
 1745              	.L107:
 466:..\src/command_processing.c ****             if (!strcmp(MENU_LIST[j].choice[count],"")){
 1746              		.loc 1 466 0 discriminator 2
 1747 06cc 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1748 06d0 0133     		adds	r3, r3, #1
 1749 06d2 87F85B32 		strb	r3, [r7, #603]
 1750              	.L104:
 466:..\src/command_processing.c ****             if (!strcmp(MENU_LIST[j].choice[count],"")){
 1751              		.loc 1 466 0 is_stmt 0 discriminator 1
 1752 06d6 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1753 06da 092B     		cmp	r3, #9
 1754 06dc 80D9     		bls	.L108
 479:..\src/command_processing.c ****             }    
 480:..\src/command_processing.c ****         }
 481:..\src/command_processing.c ****         string_length = strlen(aux_str1);
 1755              		.loc 1 481 0 is_stmt 1
 1756 06de 07F14C03 		add	r3, r7, #76
 1757 06e2 1846     		mov	r0, r3
 1758 06e4 FFF7FEFF 		bl	strlen
 1759 06e8 0346     		mov	r3, r0
 1760 06ea 87F85E32 		strb	r3, [r7, #606]
 482:..\src/command_processing.c ****         
 483:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 1761              		.loc 1 483 0
 1762 06ee 97F85E32 		ldrb	r3, [r7, #606]
 1763 06f2 87F85D32 		strb	r3, [r7, #605]
 1764 06f6 22E0     		b	.L109
 1765              	.L110:
 484:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*num_params + 2 + j*PARAM_MENU_SLOT + string_length - i] = aux_s
 1766              		.loc 1 484 0 discriminator 3
 1767 06f8 07F10F03 		add	r3, r7, #15
 1768 06fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1769 06fe 3222     		movs	r2, #50
 1770 0700 02FB03F3 		mul	r3, r2, r3
 1771 0704 9A1C     		adds	r2, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 55


 1772 0706 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1773 070a 9621     		movs	r1, #150
 1774 070c 01FB03F3 		mul	r3, r1, r3
 1775 0710 1A44     		add	r2, r2, r3
 1776 0712 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1777 0716 1A44     		add	r2, r2, r3
 1778 0718 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1779 071c D31A     		subs	r3, r2, r3
 1780 071e 97F85E12 		ldrb	r1, [r7, #606]	@ zero_extendqisi2
 1781 0722 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1782 0726 8A1A     		subs	r2, r1, r2
 1783 0728 07F14C01 		add	r1, r7, #76
 1784 072c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1785 072e D7F84422 		ldr	r2, [r7, #580]
 1786 0732 D154     		strb	r1, [r2, r3]
 483:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*num_params + 2 + j*PARAM_MENU_SLOT + string_length - i] = aux_s
 1787              		.loc 1 483 0 discriminator 3
 1788 0734 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1789 0738 013B     		subs	r3, r3, #1
 1790 073a 87F85D32 		strb	r3, [r7, #605]
 1791              	.L109:
 483:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*num_params + 2 + j*PARAM_MENU_SLOT + string_length - i] = aux_s
 1792              		.loc 1 483 0 is_stmt 0 discriminator 1
 1793 073e 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1794 0742 002B     		cmp	r3, #0
 1795 0744 D8D1     		bne	.L110
 464:..\src/command_processing.c ****         sprintf(aux_str1,"");
 1796              		.loc 1 464 0 is_stmt 1 discriminator 2
 1797 0746 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1798 074a 0133     		adds	r3, r3, #1
 1799 074c 87F85C32 		strb	r3, [r7, #604]
 1800              	.L103:
 464:..\src/command_processing.c ****         sprintf(aux_str1,"");
 1801              		.loc 1 464 0 is_stmt 0 discriminator 1
 1802 0750 07F10E03 		add	r3, r7, #14
 1803 0754 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1804 0758 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1805 075a 9A42     		cmp	r2, r3
 1806 075c FFF437AF 		bcc	.L111
 485:..\src/command_processing.c ****     }
 486:..\src/command_processing.c ****         
 487:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 1807              		.loc 1 487 0 is_stmt 1
 1808 0760 B7F84E32 		ldrh	r3, [r7, #590]
 1809 0764 5C1E     		subs	r4, r3, #1
 1810 0766 D7F84422 		ldr	r2, [r7, #580]
 1811 076a B7F84E32 		ldrh	r3, [r7, #590]	@ movhi
 1812 076e DBB2     		uxtb	r3, r3
 1813 0770 013B     		subs	r3, r3, #1
 1814 0772 DBB2     		uxtb	r3, r3
 1815 0774 1946     		mov	r1, r3
 1816 0776 1046     		mov	r0, r2
 1817 0778 FFF7FEFF 		bl	LCRChecksum
 1818 077c 0346     		mov	r3, r0
 1819 077e 1A46     		mov	r2, r3
 1820 0780 D7F84432 		ldr	r3, [r7, #580]
 1821 0784 1A55     		strb	r2, [r3, r4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 56


 488:..\src/command_processing.c ****     
 489:..\src/command_processing.c ****     if (sendToDevice)
 1822              		.loc 1 489 0
 1823 0786 97F88032 		ldrb	r3, [r7, #640]	@ zero_extendqisi2
 1824 078a 002B     		cmp	r3, #0
 1825 078c 07D0     		beq	.L112
 490:..\src/command_processing.c ****     {commWrite(packet_data, packet_length);  
 1826              		.loc 1 490 0
 1827 078e D7F84432 		ldr	r3, [r7, #580]
 1828 0792 B7F84E22 		ldrh	r2, [r7, #590]
 1829 0796 1146     		mov	r1, r2
 1830 0798 1846     		mov	r0, r3
 1831 079a FFF7FEFF 		bl	commWrite
 1832              	.L112:
 1833 079e B546     		mov	sp, r6
 491:..\src/command_processing.c ****     }
 492:..\src/command_processing.c ****     else {
 493:..\src/command_processing.c ****        //Update pointer (Bad choice since pointing to dead variable in another function, to fix)
 494:..\src/command_processing.c ****       // longPkgP = (char*)&packet_data[0];
 495:..\src/command_processing.c ****       // longPkgSize = packet_length;
 496:..\src/command_processing.c ****     }
 497:..\src/command_processing.c **** }
 1834              		.loc 1 497 0
 1835 07a0 00BF     		nop
 1836 07a2 07F51977 		add	r7, r7, #612
 1837              		.cfi_def_cfa_offset 28
 1838 07a6 BD46     		mov	sp, r7
 1839              		.cfi_def_cfa_register 13
 1840              		@ sp needed
 1841 07a8 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1842              	.L117:
 1843              		.align	2
 1844              	.L116:
 1845 07ac 00000000 		.word	.LC8
 1846 07b0 08000000 		.word	.LC15
 1847 07b4 20000000 		.word	.LC16
 1848 07b8 28000000 		.word	.LC17
 1849              		.cfi_endproc
 1850              	.LFE68:
 1851              		.size	get_param_list, .-get_param_list
 1852              		.section	.rodata
 1853 002a 0000     		.align	2
 1854              	.LC19:
 1855 002c 44657669 		.ascii	"Device ID:\000"
 1855      63652049 
 1855      443A00
 1856 0037 00       		.align	2
 1857              	.LC20:
 1858 0038 454D4720 		.ascii	"EMG thresholds:\000"
 1858      74687265 
 1858      73686F6C 
 1858      64733A00 
 1859              		.align	2
 1860              	.LC21:
 1861 0048 454D4720 		.ascii	"EMG max values:\000"
 1861      6D617820 
 1861      76616C75 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 57


 1861      65733A00 
 1862              		.align	2
 1863              	.LC22:
 1864 0058 454D4720 		.ascii	"EMG max speeds:\000"
 1864      6D617820 
 1864      73706565 
 1864      64733A00 
 1865              		.align	2
 1866              	.LC23:
 1867 0068 454D4720 		.ascii	"EMG inversion:\000"
 1867      696E7665 
 1867      7273696F 
 1867      6E3A00
 1868 0077 00       		.align	2
 1869              	.LC24:
 1870 0078 4D617374 		.ascii	"Master Mode:\000"
 1870      6572204D 
 1870      6F64653A 
 1870      00
 1871 0085 000000   		.align	2
 1872              	.LC25:
 1873 0088 536C6176 		.ascii	"Slave ID:\000"
 1873      65204944 
 1873      3A00
 1874 0092 0000     		.align	2
 1875              	.LC26:
 1876 0094 536C6176 		.ascii	"Slave resolution:\000"
 1876      65207265 
 1876      736F6C75 
 1876      74696F6E 
 1876      3A00
 1877 00a6 0000     		.align	2
 1878              	.LC27:
 1879 00a8 496E7075 		.ascii	"Input mode:\000"
 1879      74206D6F 
 1879      64653A00 
 1880              		.align	2
 1881              	.LC28:
 1882 00b4 506F732E 		.ascii	"Pos. limits [inf, sup]:\000"
 1882      206C696D 
 1882      69747320 
 1882      5B696E66 
 1882      2C207375 
 1883              		.align	2
 1884              	.LC29:
 1885 00cc 56696272 		.ascii	"Vibrotactile Feedback:\000"
 1885      6F746163 
 1885      74696C65 
 1885      20466565 
 1885      64626163 
 1886 00e3 00       		.align	2
 1887              	.LC30:
 1888 00e4 41697220 		.ascii	"Air Chamber Feedback:\000"
 1888      4368616D 
 1888      62657220 
 1888      46656564 
 1888      6261636B 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 58


 1889 00fa 0000     		.align	2
 1890              	.LC31:
 1891 00fc 4D617869 		.ascii	"Maximum slave residual current:\000"
 1891      6D756D20 
 1891      736C6176 
 1891      65207265 
 1891      73696475 
 1892              		.align	2
 1893              	.LC32:
 1894 011c 4D617869 		.ascii	"Maximum pressure feedback (kPa):\000"
 1894      6D756D20 
 1894      70726573 
 1894      73757265 
 1894      20666565 
 1895 013d 000000   		.align	2
 1896              	.LC33:
 1897 0140 50726F70 		.ascii	"Proportional pressure error gain:\000"
 1897      6F727469 
 1897      6F6E616C 
 1897      20707265 
 1897      73737572 
 1898 0162 0000     		.align	2
 1899              	.LC0:
 1900 0164 20557362 		.ascii	" Usb\000"
 1900      00
 1901 0169 000000   		.align	2
 1902              	.LC1:
 1903 016c 2048616E 		.ascii	" Handle\000"
 1903      646C6500 
 1904              		.align	2
 1905              	.LC2:
 1906 0174 20454D47 		.ascii	" EMG proportional\000"
 1906      2070726F 
 1906      706F7274 
 1906      696F6E61 
 1906      6C00
 1907 0186 0000     		.align	2
 1908              	.LC3:
 1909 0188 20454D47 		.ascii	" EMG Integral\000"
 1909      20496E74 
 1909      65677261 
 1909      6C00
 1910 0196 0000     		.align	2
 1911              	.LC4:
 1912 0198 20454D47 		.ascii	" EMG FCFS\000"
 1912      20464346 
 1912      5300
 1913 01a2 0000     		.align	2
 1914              	.LC5:
 1915 01a4 20454D47 		.ascii	" EMG FCFS Advanced\000"
 1915      20464346 
 1915      53204164 
 1915      76616E63 
 1915      656400
 1916 01b7 00       		.align	2
 1917              	.LC6:
 1918 01b8 204A6F79 		.ascii	" Joystick\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 59


 1918      73746963 
 1918      6B00
 1919 01c2 0000     		.align	2
 1920              	.LC7:
 1921 01c4 20454D47 		.ascii	" EMG proportional NC\000"
 1921      2070726F 
 1921      706F7274 
 1921      696F6E61 
 1921      6C204E43 
 1922 01d9 000000   		.align	2
 1923              	.LC9:
 1924 01dc 204E4F00 		.ascii	" NO\000"
 1925              		.align	2
 1926              	.LC10:
 1927 01e0 20594553 		.ascii	" YES\000"
 1927      00
 1928 01e5 000000   		.align	2
 1929              	.LC11:
 1930 01e8 204F4646 		.ascii	" OFF\000"
 1930      00
 1931 01ed 000000   		.align	2
 1932              	.LC12:
 1933 01f0 204F4E00 		.ascii	" ON\000"
 1934              		.align	2
 1935              	.LC18:
 1936 01f4 01       		.byte	1
 1937 01f5 00       		.byte	0
 1938 01f6 0000     		.space	2
 1939 01f8 64010000 		.word	.LC0
 1940 01fc 6C010000 		.word	.LC1
 1941 0200 74010000 		.word	.LC2
 1942 0204 88010000 		.word	.LC3
 1943 0208 98010000 		.word	.LC4
 1944 020c A4010000 		.word	.LC5
 1945 0210 B8010000 		.word	.LC6
 1946 0214 C4010000 		.word	.LC7
 1947 0218 00000000 		.word	.LC8
 1948 021c 00000000 		.word	.LC8
 1949 0220 03       		.byte	3
 1950 0221 00       		.byte	0
 1951 0222 0000     		.space	2
 1952 0224 DC010000 		.word	.LC9
 1953 0228 E0010000 		.word	.LC10
 1954 022c 00000000 		.word	.LC8
 1955 0230 00000000 		.word	.LC8
 1956 0234 00000000 		.word	.LC8
 1957 0238 00000000 		.word	.LC8
 1958 023c 00000000 		.word	.LC8
 1959 0240 00000000 		.word	.LC8
 1960 0244 00000000 		.word	.LC8
 1961 0248 00000000 		.word	.LC8
 1962 024c 05       		.byte	5
 1963 024d 01       		.byte	1
 1964 024e 0000     		.space	2
 1965 0250 E8010000 		.word	.LC11
 1966 0254 F0010000 		.word	.LC12
 1967 0258 00000000 		.word	.LC8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 60


 1968 025c 00000000 		.word	.LC8
 1969 0260 00000000 		.word	.LC8
 1970 0264 00000000 		.word	.LC8
 1971 0268 00000000 		.word	.LC8
 1972 026c 00000000 		.word	.LC8
 1973 0270 00000000 		.word	.LC8
 1974 0274 00000000 		.word	.LC8
 1975              		.section	.text.manage_param_list,"ax",%progbits
 1976              		.align	2
 1977              		.global	manage_param_list
 1978              		.thumb
 1979              		.thumb_func
 1980              		.type	manage_param_list, %function
 1981              	manage_param_list:
 1982              	.LFB69:
 498:..\src/command_processing.c **** 
 499:..\src/command_processing.c **** //==============================================================================
 500:..\src/command_processing.c **** // MANAGE PARAM LIST
 501:..\src/command_processing.c **** //==============================================================================
 502:..\src/command_processing.c **** void manage_param_list(uint16 index, uint8 sendToDevice) {
 1983              		.loc 1 502 0
 1984              		.cfi_startproc
 1985              		@ args = 0, pretend = 0, frame = 456
 1986              		@ frame_needed = 1, uses_anonymous_args = 0
 1987 0000 90B5     		push	{r4, r7, lr}
 1988              		.cfi_def_cfa_offset 12
 1989              		.cfi_offset 4, -12
 1990              		.cfi_offset 7, -8
 1991              		.cfi_offset 14, -4
 1992 0002 F5B0     		sub	sp, sp, #468
 1993              		.cfi_def_cfa_offset 480
 1994 0004 02AF     		add	r7, sp, #8
 1995              		.cfi_def_cfa 7, 472
 1996 0006 0246     		mov	r2, r0
 1997 0008 BB1D     		adds	r3, r7, #6
 1998 000a 1A80     		strh	r2, [r3]	@ movhi
 1999 000c 7B1D     		adds	r3, r7, #5
 2000 000e 0A46     		mov	r2, r1
 2001 0010 1A70     		strb	r2, [r3]
 503:..\src/command_processing.c ****     uint8 CYDATA i, j;
 504:..\src/command_processing.c ****     
 505:..\src/command_processing.c ****     uint8 PARAM_IDX;
 506:..\src/command_processing.c ****          
 507:..\src/command_processing.c ****     // Arrays
 508:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 2002              		.loc 1 508 0
 2003 0012 ED4B     		ldr	r3, .L133
 2004 0014 C7F8C031 		str	r3, [r7, #448]
 509:..\src/command_processing.c ****     
 510:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 2005              		.loc 1 510 0
 2006 0018 BB1D     		adds	r3, r7, #6
 2007 001a 1B88     		ldrh	r3, [r3]
 2008 001c 002B     		cmp	r3, #0
 2009 001e 02D0     		beq	.L119
 511:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 2010              		.loc 1 511 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 61


 2011 0020 EA4B     		ldr	r3, .L133+4
 2012 0022 C7F8C031 		str	r3, [r7, #448]
 2013              	.L119:
 512:..\src/command_processing.c ****     }
 513:..\src/command_processing.c **** 
 514:..\src/command_processing.c ****     struct menu menu_type;
 515:..\src/command_processing.c ****     
 516:..\src/command_processing.c ****     //------------------ BEGIN OF MENU LIST --------------------//  
 517:..\src/command_processing.c ****         const struct menu MENU_LIST[] = {
 2014              		.loc 1 517 0
 2015 0026 EA4A     		ldr	r2, .L133+8
 2016 0028 07F58673 		add	r3, r7, #268
 2017 002c 1146     		mov	r1, r2
 2018 002e 8422     		movs	r2, #132
 2019 0030 1846     		mov	r0, r3
 2020 0032 FFF7FEFF 		bl	memcpy
 518:..\src/command_processing.c ****     //  {num            , RESET     , { choice_0                  , choice_1                , choic
 519:..\src/command_processing.c ****         {MENU_INPUT     , FALSE     , { " Usb"                    , " Handle"               , " EMG
 520:..\src/command_processing.c ****         {MENU_Y_N       , FALSE     , { " NO"                     , " YES"                  , ""   
 521:..\src/command_processing.c ****         {MENU_ON_OFF    , TRUE      , { " OFF"                    , " ON"                   , ""   
 522:..\src/command_processing.c ****        };
 523:..\src/command_processing.c ****     //------------------ END  OF MENU LIST --------------------//  
 524:..\src/command_processing.c ****         
 525:..\src/command_processing.c ****     uint8 NUM_MENUs = sizeof(MENU_LIST)/sizeof(menu_type);  
 2021              		.loc 1 525 0
 2022 0036 0323     		movs	r3, #3
 2023 0038 87F8BF31 		strb	r3, [r7, #447]
 526:..\src/command_processing.c ****     
 527:..\src/command_processing.c ****     struct parameter param_type;
 528:..\src/command_processing.c ****     
 529:..\src/command_processing.c ****     const struct parameter PARAM_LIST[]=
 530:..\src/command_processing.c ****     {
 531:..\src/command_processing.c ****     //  {VAR_P                                              , TYPES           , NUM_ITEMS , PARAM_S
 532:..\src/command_processing.c ****         {(uint8*)&(MEM_P->dev.id)                           , TYPE_UINT8      , 1         , "Device
 2024              		.loc 1 532 0
 2025 003c D7F8C031 		ldr	r3, [r7, #448]
 2026 0040 03F11002 		add	r2, r3, #16
 529:..\src/command_processing.c ****     {
 2027              		.loc 1 529 0
 2028 0044 07F10C03 		add	r3, r7, #12
 2029 0048 1A60     		str	r2, [r3]
 2030 004a 07F10C03 		add	r3, r7, #12
 2031 004e 0222     		movs	r2, #2
 2032 0050 1A71     		strb	r2, [r3, #4]
 2033 0052 07F10C03 		add	r3, r7, #12
 2034 0056 0122     		movs	r2, #1
 2035 0058 5A71     		strb	r2, [r3, #5]
 2036 005a 07F10C03 		add	r3, r7, #12
 2037 005e DD4A     		ldr	r2, .L133+12
 2038 0060 9A60     		str	r2, [r3, #8]
 2039 0062 07F10C03 		add	r3, r7, #12
 2040 0066 0022     		movs	r2, #0
 2041 0068 1A73     		strb	r2, [r3, #12]
 2042 006a 07F10C03 		add	r3, r7, #12
 2043 006e 0022     		movs	r2, #0
 2044 0070 5A73     		strb	r2, [r3, #13]
 2045 0072 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 62


 2046 0076 0022     		movs	r2, #0
 2047 0078 9A73     		strb	r2, [r3, #14]
 533:..\src/command_processing.c ****         {(uint8*)&(MEM_P->emg.emg_threshold[0])             , TYPE_UINT16     , 2         , "EMG th
 2048              		.loc 1 533 0
 2049 007a D7F8C031 		ldr	r3, [r7, #448]
 2050 007e 03F13002 		add	r2, r3, #48
 529:..\src/command_processing.c ****     {
 2051              		.loc 1 529 0
 2052 0082 07F10C03 		add	r3, r7, #12
 2053 0086 1A61     		str	r2, [r3, #16]
 2054 0088 07F10C03 		add	r3, r7, #12
 2055 008c 0422     		movs	r2, #4
 2056 008e 1A75     		strb	r2, [r3, #20]
 2057 0090 07F10C03 		add	r3, r7, #12
 2058 0094 0222     		movs	r2, #2
 2059 0096 5A75     		strb	r2, [r3, #21]
 2060 0098 07F10C03 		add	r3, r7, #12
 2061 009c CE4A     		ldr	r2, .L133+16
 2062 009e 9A61     		str	r2, [r3, #24]
 2063 00a0 07F10C03 		add	r3, r7, #12
 2064 00a4 0022     		movs	r2, #0
 2065 00a6 1A77     		strb	r2, [r3, #28]
 2066 00a8 07F10C03 		add	r3, r7, #12
 2067 00ac 1E22     		movs	r2, #30
 2068 00ae 5A77     		strb	r2, [r3, #29]
 2069 00b0 07F10C03 		add	r3, r7, #12
 2070 00b4 0022     		movs	r2, #0
 2071 00b6 9A77     		strb	r2, [r3, #30]
 534:..\src/command_processing.c ****         {(uint8*)&(MEM_P->emg.emg_max_value[0])             , TYPE_UINT32     , 2         , "EMG ma
 2072              		.loc 1 534 0
 2073 00b8 D7F8C031 		ldr	r3, [r7, #448]
 2074 00bc 03F13402 		add	r2, r3, #52
 529:..\src/command_processing.c ****     {
 2075              		.loc 1 529 0
 2076 00c0 07F10C03 		add	r3, r7, #12
 2077 00c4 1A62     		str	r2, [r3, #32]
 2078 00c6 07F10C03 		add	r3, r7, #12
 2079 00ca 0622     		movs	r2, #6
 2080 00cc 83F82420 		strb	r2, [r3, #36]
 2081 00d0 07F10C03 		add	r3, r7, #12
 2082 00d4 0222     		movs	r2, #2
 2083 00d6 83F82520 		strb	r2, [r3, #37]
 2084 00da 07F10C03 		add	r3, r7, #12
 2085 00de BF4A     		ldr	r2, .L133+20
 2086 00e0 9A62     		str	r2, [r3, #40]
 2087 00e2 07F10C03 		add	r3, r7, #12
 2088 00e6 0022     		movs	r2, #0
 2089 00e8 83F82C20 		strb	r2, [r3, #44]
 2090 00ec 07F10C03 		add	r3, r7, #12
 2091 00f0 1E22     		movs	r2, #30
 2092 00f2 83F82D20 		strb	r2, [r3, #45]
 2093 00f6 07F10C03 		add	r3, r7, #12
 2094 00fa 0022     		movs	r2, #0
 2095 00fc 83F82E20 		strb	r2, [r3, #46]
 535:..\src/command_processing.c ****         {(uint8*)&(MEM_P->emg.emg_speed[0])                 , TYPE_UINT8      , 2         , "EMG ma
 2096              		.loc 1 535 0
 2097 0100 D7F8C031 		ldr	r3, [r7, #448]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 63


 2098 0104 03F13C02 		add	r2, r3, #60
 529:..\src/command_processing.c ****     {
 2099              		.loc 1 529 0
 2100 0108 07F10C03 		add	r3, r7, #12
 2101 010c 1A63     		str	r2, [r3, #48]
 2102 010e 07F10C03 		add	r3, r7, #12
 2103 0112 0222     		movs	r2, #2
 2104 0114 83F83420 		strb	r2, [r3, #52]
 2105 0118 07F10C03 		add	r3, r7, #12
 2106 011c 0222     		movs	r2, #2
 2107 011e 83F83520 		strb	r2, [r3, #53]
 2108 0122 07F10C03 		add	r3, r7, #12
 2109 0126 AE4A     		ldr	r2, .L133+24
 2110 0128 9A63     		str	r2, [r3, #56]
 2111 012a 07F10C03 		add	r3, r7, #12
 2112 012e 0022     		movs	r2, #0
 2113 0130 83F83C20 		strb	r2, [r3, #60]
 2114 0134 07F10C03 		add	r3, r7, #12
 2115 0138 1E22     		movs	r2, #30
 2116 013a 83F83D20 		strb	r2, [r3, #61]
 2117 013e 07F10C03 		add	r3, r7, #12
 2118 0142 0022     		movs	r2, #0
 2119 0144 83F83E20 		strb	r2, [r3, #62]
 536:..\src/command_processing.c ****         {(uint8*)&(MEM_P->emg.switch_emg)                   , TYPE_FLAG       , 1         , "EMG in
 2120              		.loc 1 536 0
 2121 0148 D7F8C031 		ldr	r3, [r7, #448]
 2122 014c 03F13E02 		add	r2, r3, #62
 529:..\src/command_processing.c ****     {
 2123              		.loc 1 529 0
 2124 0150 07F10C03 		add	r3, r7, #12
 2125 0154 1A64     		str	r2, [r3, #64]
 2126 0156 07F10C03 		add	r3, r7, #12
 2127 015a 0022     		movs	r2, #0
 2128 015c 83F84420 		strb	r2, [r3, #68]
 2129 0160 07F10C03 		add	r3, r7, #12
 2130 0164 0122     		movs	r2, #1
 2131 0166 83F84520 		strb	r2, [r3, #69]
 2132 016a 07F10C03 		add	r3, r7, #12
 2133 016e 9D4A     		ldr	r2, .L133+28
 2134 0170 9A64     		str	r2, [r3, #72]
 2135 0172 07F10C03 		add	r3, r7, #12
 2136 0176 0322     		movs	r2, #3
 2137 0178 83F84C20 		strb	r2, [r3, #76]
 2138 017c 07F10C03 		add	r3, r7, #12
 2139 0180 1E22     		movs	r2, #30
 2140 0182 83F84D20 		strb	r2, [r3, #77]
 2141 0186 07F10C03 		add	r3, r7, #12
 2142 018a 0022     		movs	r2, #0
 2143 018c 83F84E20 		strb	r2, [r3, #78]
 537:..\src/command_processing.c ****         {(uint8*)&(MEM_P->MS.master_mode_active)            , TYPE_FLAG       , 1         , "Master
 2144              		.loc 1 537 0
 2145 0190 D7F8C031 		ldr	r3, [r7, #448]
 2146 0194 03F14002 		add	r2, r3, #64
 529:..\src/command_processing.c ****     {
 2147              		.loc 1 529 0
 2148 0198 07F10C03 		add	r3, r7, #12
 2149 019c 1A65     		str	r2, [r3, #80]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 64


 2150 019e 07F10C03 		add	r3, r7, #12
 2151 01a2 0022     		movs	r2, #0
 2152 01a4 83F85420 		strb	r2, [r3, #84]
 2153 01a8 07F10C03 		add	r3, r7, #12
 2154 01ac 0122     		movs	r2, #1
 2155 01ae 83F85520 		strb	r2, [r3, #85]
 2156 01b2 07F10C03 		add	r3, r7, #12
 2157 01b6 8C4A     		ldr	r2, .L133+32
 2158 01b8 9A65     		str	r2, [r3, #88]
 2159 01ba 07F10C03 		add	r3, r7, #12
 2160 01be 0522     		movs	r2, #5
 2161 01c0 83F85C20 		strb	r2, [r3, #92]
 2162 01c4 07F10C03 		add	r3, r7, #12
 2163 01c8 5022     		movs	r2, #80
 2164 01ca 83F85D20 		strb	r2, [r3, #93]
 2165 01ce 07F10C03 		add	r3, r7, #12
 2166 01d2 0022     		movs	r2, #0
 2167 01d4 83F85E20 		strb	r2, [r3, #94]
 538:..\src/command_processing.c ****         {(uint8*)&(MEM_P->MS.slave_ID)                      , TYPE_UINT8      , 1         , "Slave 
 2168              		.loc 1 538 0
 2169 01d8 D7F8C031 		ldr	r3, [r7, #448]
 2170 01dc 03F14102 		add	r2, r3, #65
 529:..\src/command_processing.c ****     {
 2171              		.loc 1 529 0
 2172 01e0 07F10C03 		add	r3, r7, #12
 2173 01e4 1A66     		str	r2, [r3, #96]
 2174 01e6 07F10C03 		add	r3, r7, #12
 2175 01ea 0222     		movs	r2, #2
 2176 01ec 83F86420 		strb	r2, [r3, #100]
 2177 01f0 07F10C03 		add	r3, r7, #12
 2178 01f4 0122     		movs	r2, #1
 2179 01f6 83F86520 		strb	r2, [r3, #101]
 2180 01fa 07F10C03 		add	r3, r7, #12
 2181 01fe 7B4A     		ldr	r2, .L133+36
 2182 0200 9A66     		str	r2, [r3, #104]
 2183 0202 07F10C03 		add	r3, r7, #12
 2184 0206 0022     		movs	r2, #0
 2185 0208 83F86C20 		strb	r2, [r3, #108]
 2186 020c 07F10C03 		add	r3, r7, #12
 2187 0210 5022     		movs	r2, #80
 2188 0212 83F86D20 		strb	r2, [r3, #109]
 2189 0216 07F10C03 		add	r3, r7, #12
 2190 021a 0022     		movs	r2, #0
 2191 021c 83F86E20 		strb	r2, [r3, #110]
 539:..\src/command_processing.c ****         {(uint8*)&(MEM_P->SH_config.res)                    , TYPE_UINT8      , 1         , "Slave 
 2192              		.loc 1 539 0
 2193 0220 D7F8C031 		ldr	r3, [r7, #448]
 2194 0224 03F12902 		add	r2, r3, #41
 529:..\src/command_processing.c ****     {
 2195              		.loc 1 529 0
 2196 0228 07F10C03 		add	r3, r7, #12
 2197 022c 1A67     		str	r2, [r3, #112]
 2198 022e 07F10C03 		add	r3, r7, #12
 2199 0232 0222     		movs	r2, #2
 2200 0234 83F87420 		strb	r2, [r3, #116]
 2201 0238 07F10C03 		add	r3, r7, #12
 2202 023c 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 65


 2203 023e 83F87520 		strb	r2, [r3, #117]
 2204 0242 07F10C03 		add	r3, r7, #12
 2205 0246 6A4A     		ldr	r2, .L133+40
 2206 0248 9A67     		str	r2, [r3, #120]
 2207 024a 07F10C03 		add	r3, r7, #12
 2208 024e 0022     		movs	r2, #0
 2209 0250 83F87C20 		strb	r2, [r3, #124]
 2210 0254 07F10C03 		add	r3, r7, #12
 2211 0258 5022     		movs	r2, #80
 2212 025a 83F87D20 		strb	r2, [r3, #125]
 2213 025e 07F10C03 		add	r3, r7, #12
 2214 0262 0022     		movs	r2, #0
 2215 0264 83F87E20 		strb	r2, [r3, #126]
 540:..\src/command_processing.c ****         {(uint8*)&(MEM_P->SH_config.input_mode)             , TYPE_FLAG       , 1         , "Input 
 2216              		.loc 1 540 0
 2217 0268 D7F8C031 		ldr	r3, [r7, #448]
 2218 026c 03F12802 		add	r2, r3, #40
 529:..\src/command_processing.c ****     {
 2219              		.loc 1 529 0
 2220 0270 07F10C03 		add	r3, r7, #12
 2221 0274 C3F88020 		str	r2, [r3, #128]
 2222 0278 07F10C03 		add	r3, r7, #12
 2223 027c 0022     		movs	r2, #0
 2224 027e 83F88420 		strb	r2, [r3, #132]
 2225 0282 07F10C03 		add	r3, r7, #12
 2226 0286 0122     		movs	r2, #1
 2227 0288 83F88520 		strb	r2, [r3, #133]
 2228 028c 07F10C03 		add	r3, r7, #12
 2229 0290 584A     		ldr	r2, .L133+44
 2230 0292 C3F88820 		str	r2, [r3, #136]
 2231 0296 07F10C03 		add	r3, r7, #12
 2232 029a 0122     		movs	r2, #1
 2233 029c 83F88C20 		strb	r2, [r3, #140]
 2234 02a0 07F10C03 		add	r3, r7, #12
 2235 02a4 5022     		movs	r2, #80
 2236 02a6 83F88D20 		strb	r2, [r3, #141]
 2237 02aa 07F10C03 		add	r3, r7, #12
 2238 02ae 0322     		movs	r2, #3
 2239 02b0 83F88E20 		strb	r2, [r3, #142]
 541:..\src/command_processing.c ****         {(uint8*)&(MEM_P->SH_config.pos_lim_inf)            , TYPE_INT32      , 2         , "Pos. l
 2240              		.loc 1 541 0
 2241 02b4 D7F8C031 		ldr	r3, [r7, #448]
 2242 02b8 03F12002 		add	r2, r3, #32
 529:..\src/command_processing.c ****     {
 2243              		.loc 1 529 0
 2244 02bc 07F10C03 		add	r3, r7, #12
 2245 02c0 C3F89020 		str	r2, [r3, #144]
 2246 02c4 07F10C03 		add	r3, r7, #12
 2247 02c8 0522     		movs	r2, #5
 2248 02ca 83F89420 		strb	r2, [r3, #148]
 2249 02ce 07F10C03 		add	r3, r7, #12
 2250 02d2 0222     		movs	r2, #2
 2251 02d4 83F89520 		strb	r2, [r3, #149]
 2252 02d8 07F10C03 		add	r3, r7, #12
 2253 02dc 464A     		ldr	r2, .L133+48
 2254 02de C3F89820 		str	r2, [r3, #152]
 2255 02e2 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 66


 2256 02e6 0022     		movs	r2, #0
 2257 02e8 83F89C20 		strb	r2, [r3, #156]
 2258 02ec 07F10C03 		add	r3, r7, #12
 2259 02f0 5022     		movs	r2, #80
 2260 02f2 83F89D20 		strb	r2, [r3, #157]
 2261 02f6 07F10C03 		add	r3, r7, #12
 2262 02fa 0522     		movs	r2, #5
 2263 02fc 83F89E20 		strb	r2, [r3, #158]
 542:..\src/command_processing.c ****         {(uint8*)&(MEM_P->FB.vibrotactile_feedback_active)  , TYPE_FLAG       , 1         , "Vibrot
 2264              		.loc 1 542 0
 2265 0300 D7F8C031 		ldr	r3, [r7, #448]
 2266 0304 03F15C02 		add	r2, r3, #92
 529:..\src/command_processing.c ****     {
 2267              		.loc 1 529 0
 2268 0308 07F10C03 		add	r3, r7, #12
 2269 030c C3F8A020 		str	r2, [r3, #160]
 2270 0310 07F10C03 		add	r3, r7, #12
 2271 0314 0022     		movs	r2, #0
 2272 0316 83F8A420 		strb	r2, [r3, #164]
 2273 031a 07F10C03 		add	r3, r7, #12
 2274 031e 0122     		movs	r2, #1
 2275 0320 83F8A520 		strb	r2, [r3, #165]
 2276 0324 07F10C03 		add	r3, r7, #12
 2277 0328 344A     		ldr	r2, .L133+52
 2278 032a C3F8A820 		str	r2, [r3, #168]
 2279 032e 07F10C03 		add	r3, r7, #12
 2280 0332 0522     		movs	r2, #5
 2281 0334 83F8AC20 		strb	r2, [r3, #172]
 2282 0338 07F10C03 		add	r3, r7, #12
 2283 033c 5022     		movs	r2, #80
 2284 033e 83F8AD20 		strb	r2, [r3, #173]
 2285 0342 07F10C03 		add	r3, r7, #12
 2286 0346 0022     		movs	r2, #0
 2287 0348 83F8AE20 		strb	r2, [r3, #174]
 543:..\src/command_processing.c ****         {(uint8*)&(MEM_P->FB.airchamber_feedback_active)    , TYPE_FLAG       , 1         , "Air Ch
 2288              		.loc 1 543 0
 2289 034c D7F8C031 		ldr	r3, [r7, #448]
 2290 0350 03F15D02 		add	r2, r3, #93
 529:..\src/command_processing.c ****     {
 2291              		.loc 1 529 0
 2292 0354 07F10C03 		add	r3, r7, #12
 2293 0358 C3F8B020 		str	r2, [r3, #176]
 2294 035c 07F10C03 		add	r3, r7, #12
 2295 0360 0022     		movs	r2, #0
 2296 0362 83F8B420 		strb	r2, [r3, #180]
 2297 0366 07F10C03 		add	r3, r7, #12
 2298 036a 0122     		movs	r2, #1
 2299 036c 83F8B520 		strb	r2, [r3, #181]
 2300 0370 07F10C03 		add	r3, r7, #12
 2301 0374 224A     		ldr	r2, .L133+56
 2302 0376 C3F8B820 		str	r2, [r3, #184]
 2303 037a 07F10C03 		add	r3, r7, #12
 2304 037e 0522     		movs	r2, #5
 2305 0380 83F8BC20 		strb	r2, [r3, #188]
 2306 0384 07F10C03 		add	r3, r7, #12
 2307 0388 5022     		movs	r2, #80
 2308 038a 83F8BD20 		strb	r2, [r3, #189]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 67


 2309 038e 07F10C03 		add	r3, r7, #12
 2310 0392 0022     		movs	r2, #0
 2311 0394 83F8BE20 		strb	r2, [r3, #190]
 544:..\src/command_processing.c ****         {(uint8*)&(MEM_P->FB.max_residual_current)          , TYPE_INT32      , 1         , "Maximu
 2312              		.loc 1 544 0
 2313 0398 D7F8C031 		ldr	r3, [r7, #448]
 2314 039c 03F15002 		add	r2, r3, #80
 529:..\src/command_processing.c ****     {
 2315              		.loc 1 529 0
 2316 03a0 07F10C03 		add	r3, r7, #12
 2317 03a4 C3F8C020 		str	r2, [r3, #192]
 2318 03a8 07F10C03 		add	r3, r7, #12
 2319 03ac 0522     		movs	r2, #5
 2320 03ae 83F8C420 		strb	r2, [r3, #196]
 2321 03b2 07F10C03 		add	r3, r7, #12
 2322 03b6 0122     		movs	r2, #1
 2323 03b8 83F8C520 		strb	r2, [r3, #197]
 2324 03bc 07F10C03 		add	r3, r7, #12
 2325 03c0 104A     		ldr	r2, .L133+60
 2326 03c2 C3F8C820 		str	r2, [r3, #200]
 2327 03c6 1FE0     		b	.L134
 2328              	.L135:
 2329              		.align	2
 2330              	.L133:
 2331 03c8 00000000 		.word	c_mem
 2332 03cc 00000000 		.word	g_mem
 2333 03d0 F4010000 		.word	.LC18
 2334 03d4 2C000000 		.word	.LC19
 2335 03d8 38000000 		.word	.LC20
 2336 03dc 48000000 		.word	.LC21
 2337 03e0 58000000 		.word	.LC22
 2338 03e4 68000000 		.word	.LC23
 2339 03e8 78000000 		.word	.LC24
 2340 03ec 88000000 		.word	.LC25
 2341 03f0 94000000 		.word	.LC26
 2342 03f4 A8000000 		.word	.LC27
 2343 03f8 B4000000 		.word	.LC28
 2344 03fc CC000000 		.word	.LC29
 2345 0400 E4000000 		.word	.LC30
 2346 0404 FC000000 		.word	.LC31
 2347              	.L134:
 2348 0408 07F10C03 		add	r3, r7, #12
 2349 040c 0022     		movs	r2, #0
 2350 040e 83F8CC20 		strb	r2, [r3, #204]
 2351 0412 07F10C03 		add	r3, r7, #12
 2352 0416 5022     		movs	r2, #80
 2353 0418 83F8CD20 		strb	r2, [r3, #205]
 2354 041c 07F10C03 		add	r3, r7, #12
 2355 0420 0022     		movs	r2, #0
 2356 0422 83F8CE20 		strb	r2, [r3, #206]
 545:..\src/command_processing.c ****         {(uint8*)&(MEM_P->FB.maximum_pressure_kPa)          , TYPE_FLOAT      , 1         , "Maximu
 2357              		.loc 1 545 0
 2358 0426 D7F8C031 		ldr	r3, [r7, #448]
 2359 042a 03F15402 		add	r2, r3, #84
 529:..\src/command_processing.c ****     {
 2360              		.loc 1 529 0
 2361 042e 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 68


 2362 0432 C3F8D020 		str	r2, [r3, #208]
 2363 0436 07F10C03 		add	r3, r7, #12
 2364 043a 0722     		movs	r2, #7
 2365 043c 83F8D420 		strb	r2, [r3, #212]
 2366 0440 07F10C03 		add	r3, r7, #12
 2367 0444 0122     		movs	r2, #1
 2368 0446 83F8D520 		strb	r2, [r3, #213]
 2369 044a 07F10C03 		add	r3, r7, #12
 2370 044e 894A     		ldr	r2, .L136
 2371 0450 C3F8D820 		str	r2, [r3, #216]
 2372 0454 07F10C03 		add	r3, r7, #12
 2373 0458 0022     		movs	r2, #0
 2374 045a 83F8DC20 		strb	r2, [r3, #220]
 2375 045e 07F10C03 		add	r3, r7, #12
 2376 0462 5022     		movs	r2, #80
 2377 0464 83F8DD20 		strb	r2, [r3, #221]
 2378 0468 07F10C03 		add	r3, r7, #12
 2379 046c 0022     		movs	r2, #0
 2380 046e 83F8DE20 		strb	r2, [r3, #222]
 546:..\src/command_processing.c ****         {(uint8*)&(MEM_P->FB.prop_err_fb_gain)              , TYPE_FLOAT      , 1         , "Propor
 2381              		.loc 1 546 0
 2382 0472 D7F8C031 		ldr	r3, [r7, #448]
 2383 0476 03F15802 		add	r2, r3, #88
 529:..\src/command_processing.c ****     {
 2384              		.loc 1 529 0
 2385 047a 07F10C03 		add	r3, r7, #12
 2386 047e C3F8E020 		str	r2, [r3, #224]
 2387 0482 07F10C03 		add	r3, r7, #12
 2388 0486 0722     		movs	r2, #7
 2389 0488 83F8E420 		strb	r2, [r3, #228]
 2390 048c 07F10C03 		add	r3, r7, #12
 2391 0490 0122     		movs	r2, #1
 2392 0492 83F8E520 		strb	r2, [r3, #229]
 2393 0496 07F10C03 		add	r3, r7, #12
 2394 049a 774A     		ldr	r2, .L136+4
 2395 049c C3F8E820 		str	r2, [r3, #232]
 2396 04a0 07F10C03 		add	r3, r7, #12
 2397 04a4 0022     		movs	r2, #0
 2398 04a6 83F8EC20 		strb	r2, [r3, #236]
 2399 04aa 07F10C03 		add	r3, r7, #12
 2400 04ae 5022     		movs	r2, #80
 2401 04b0 83F8ED20 		strb	r2, [r3, #237]
 2402 04b4 07F10C03 		add	r3, r7, #12
 2403 04b8 0022     		movs	r2, #0
 2404 04ba 83F8EE20 		strb	r2, [r3, #238]
 547:..\src/command_processing.c ****     };
 548:..\src/command_processing.c ****     uint8 NUM_PARAMs = sizeof(PARAM_LIST)/sizeof(param_type);    
 2405              		.loc 1 548 0
 2406 04be 0F23     		movs	r3, #15
 2407 04c0 87F8BE31 		strb	r3, [r7, #446]
 549:..\src/command_processing.c **** 
 550:..\src/command_processing.c ****     if (!index) {
 2408              		.loc 1 550 0
 2409 04c4 BB1D     		adds	r3, r7, #6
 2410 04c6 1B88     		ldrh	r3, [r3]
 2411 04c8 002B     		cmp	r3, #0
 2412 04ca 0ED1     		bne	.L120
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 69


 551:..\src/command_processing.c ****         // Get parameters list with relative types
 552:..\src/command_processing.c ****         get_param_list(NUM_PARAMs, NUM_MENUs, PARAM_LIST, MENU_LIST, sendToDevice);
 2413              		.loc 1 552 0
 2414 04cc 07F58674 		add	r4, r7, #268
 2415 04d0 07F10C02 		add	r2, r7, #12
 2416 04d4 97F8BF11 		ldrb	r1, [r7, #447]	@ zero_extendqisi2
 2417 04d8 97F8BE01 		ldrb	r0, [r7, #446]	@ zero_extendqisi2
 2418 04dc 7B1D     		adds	r3, r7, #5
 2419 04de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2420 04e0 0093     		str	r3, [sp]
 2421 04e2 2346     		mov	r3, r4
 2422 04e4 FFF7FEFF 		bl	get_param_list
 553:..\src/command_processing.c ****     }
 554:..\src/command_processing.c ****     else {
 555:..\src/command_processing.c ****          // Set specific parameter        
 556:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
 557:..\src/command_processing.c ****         
 558:..\src/command_processing.c ****         // Find size of data
 559:..\src/command_processing.c ****         uint8 sod = num_of_bytes(PARAM_LIST[PARAM_IDX].TYPES);
 560:..\src/command_processing.c ****    
 561:..\src/command_processing.c ****         if (PARAM_LIST[PARAM_IDX].custom == 0) {
 562:..\src/command_processing.c ****             // Use default specifications for param setting
 563:..\src/command_processing.c ****             for (i = 0; i < PARAM_LIST[PARAM_IDX].NUM_ITEMS * sod; i += sod){
 564:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 565:..\src/command_processing.c ****                     ((char*)(PARAM_LIST[PARAM_IDX].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 566:..\src/command_processing.c ****                 }
 567:..\src/command_processing.c ****             } 
 568:..\src/command_processing.c ****             if( PARAM_LIST[PARAM_IDX].TYPES == TYPE_STRING)                   
 569:..\src/command_processing.c ****                *(PARAM_LIST[PARAM_IDX].VAR_P + i) = '\0';        
 570:..\src/command_processing.c ****         }
 571:..\src/command_processing.c ****         
 572:..\src/command_processing.c ****         else {  
 573:..\src/command_processing.c ****             // Use custom specifications for param setting
 574:..\src/command_processing.c ****             set_custom_param(PARAM_IDX, PARAM_LIST);
 575:..\src/command_processing.c ****         }
 576:..\src/command_processing.c ****         
 577:..\src/command_processing.c ****        
 578:..\src/command_processing.c ****         // Perform chip reset if needed
 579:..\src/command_processing.c ****         for (i=0; i< NUM_MENUs;i++){
 580:..\src/command_processing.c ****             if ((MENU_LIST[i].name == PARAM_LIST[PARAM_IDX].MENU) & (MENU_LIST[i].reset == TRUE)){
 581:..\src/command_processing.c ****              reset_PSoC_flag = TRUE;
 582:..\src/command_processing.c ****             }   
 583:..\src/command_processing.c ****         }
 584:..\src/command_processing.c ****     }
 585:..\src/command_processing.c **** } 
 2423              		.loc 1 585 0
 2424 04e8 BEE0     		b	.L132
 2425              	.L120:
 2426              	.LBB24:
 556:..\src/command_processing.c ****         
 2427              		.loc 1 556 0
 2428 04ea BB1D     		adds	r3, r7, #6
 2429 04ec 1B88     		ldrh	r3, [r3]	@ movhi
 2430 04ee DBB2     		uxtb	r3, r3
 2431 04f0 013B     		subs	r3, r3, #1
 2432 04f2 87F8BD31 		strb	r3, [r7, #445]
 559:..\src/command_processing.c ****    
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 70


 2433              		.loc 1 559 0
 2434 04f6 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2435 04fa 07F10C02 		add	r2, r7, #12
 2436 04fe 1B01     		lsls	r3, r3, #4
 2437 0500 1344     		add	r3, r3, r2
 2438 0502 0433     		adds	r3, r3, #4
 2439 0504 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2440 0506 1846     		mov	r0, r3
 2441 0508 FFF7FEFF 		bl	num_of_bytes
 2442 050c 0346     		mov	r3, r0
 2443 050e 87F8BC31 		strb	r3, [r7, #444]
 561:..\src/command_processing.c ****             // Use default specifications for param setting
 2444              		.loc 1 561 0
 2445 0512 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2446 0516 07F10C02 		add	r2, r7, #12
 2447 051a 1B01     		lsls	r3, r3, #4
 2448 051c 1344     		add	r3, r3, r2
 2449 051e 0E33     		adds	r3, r3, #14
 2450 0520 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2451 0522 002B     		cmp	r3, #0
 2452 0524 5BD1     		bne	.L122
 563:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 2453              		.loc 1 563 0
 2454 0526 0023     		movs	r3, #0
 2455 0528 87F8C731 		strb	r3, [r7, #455]
 2456 052c 2FE0     		b	.L123
 2457              	.L126:
 564:..\src/command_processing.c ****                     ((char*)(PARAM_LIST[PARAM_IDX].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 2458              		.loc 1 564 0
 2459 052e 0023     		movs	r3, #0
 2460 0530 87F8C631 		strb	r3, [r7, #454]
 2461 0534 1EE0     		b	.L124
 2462              	.L125:
 565:..\src/command_processing.c ****                 }
 2463              		.loc 1 565 0 discriminator 3
 2464 0536 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2465 053a 07F10C02 		add	r2, r7, #12
 2466 053e 1B01     		lsls	r3, r3, #4
 2467 0540 1344     		add	r3, r3, r2
 2468 0542 1A68     		ldr	r2, [r3]
 2469 0544 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2470 0548 97F8BC01 		ldrb	r0, [r7, #444]	@ zero_extendqisi2
 2471 054c 97F8C611 		ldrb	r1, [r7, #454]	@ zero_extendqisi2
 2472 0550 411A     		subs	r1, r0, r1
 2473 0552 0B44     		add	r3, r3, r1
 2474 0554 013B     		subs	r3, r3, #1
 2475 0556 1344     		add	r3, r3, r2
 2476 0558 97F8C721 		ldrb	r2, [r7, #455]	@ zero_extendqisi2
 2477 055c D11C     		adds	r1, r2, #3
 2478 055e 97F8C621 		ldrb	r2, [r7, #454]	@ zero_extendqisi2
 2479 0562 0A44     		add	r2, r2, r1
 2480 0564 4549     		ldr	r1, .L136+8
 2481 0566 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2482 0568 1A70     		strb	r2, [r3]
 564:..\src/command_processing.c ****                     ((char*)(PARAM_LIST[PARAM_IDX].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 2483              		.loc 1 564 0 discriminator 3
 2484 056a 97F8C631 		ldrb	r3, [r7, #454]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 71


 2485 056e 0133     		adds	r3, r3, #1
 2486 0570 87F8C631 		strb	r3, [r7, #454]
 2487              	.L124:
 564:..\src/command_processing.c ****                     ((char*)(PARAM_LIST[PARAM_IDX].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 2488              		.loc 1 564 0 is_stmt 0 discriminator 1
 2489 0574 97F8C621 		ldrb	r2, [r7, #454]	@ zero_extendqisi2
 2490 0578 97F8BC31 		ldrb	r3, [r7, #444]	@ zero_extendqisi2
 2491 057c 9A42     		cmp	r2, r3
 2492 057e DAD3     		bcc	.L125
 563:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 2493              		.loc 1 563 0 is_stmt 1 discriminator 2
 2494 0580 97F8C721 		ldrb	r2, [r7, #455]
 2495 0584 97F8BC31 		ldrb	r3, [r7, #444]
 2496 0588 1344     		add	r3, r3, r2
 2497 058a 87F8C731 		strb	r3, [r7, #455]
 2498              	.L123:
 563:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 2499              		.loc 1 563 0 is_stmt 0 discriminator 1
 2500 058e 97F8C721 		ldrb	r2, [r7, #455]	@ zero_extendqisi2
 2501 0592 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2502 0596 07F10C01 		add	r1, r7, #12
 2503 059a 1B01     		lsls	r3, r3, #4
 2504 059c 0B44     		add	r3, r3, r1
 2505 059e 0533     		adds	r3, r3, #5
 2506 05a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2507 05a2 1946     		mov	r1, r3
 2508 05a4 97F8BC31 		ldrb	r3, [r7, #444]	@ zero_extendqisi2
 2509 05a8 03FB01F3 		mul	r3, r3, r1
 2510 05ac 9A42     		cmp	r2, r3
 2511 05ae BEDB     		blt	.L126
 568:..\src/command_processing.c ****                *(PARAM_LIST[PARAM_IDX].VAR_P + i) = '\0';        
 2512              		.loc 1 568 0 is_stmt 1
 2513 05b0 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2514 05b4 07F10C02 		add	r2, r7, #12
 2515 05b8 1B01     		lsls	r3, r3, #4
 2516 05ba 1344     		add	r3, r3, r2
 2517 05bc 0433     		adds	r3, r3, #4
 2518 05be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2519 05c0 092B     		cmp	r3, #9
 2520 05c2 15D1     		bne	.L128
 569:..\src/command_processing.c ****         }
 2521              		.loc 1 569 0
 2522 05c4 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2523 05c8 07F10C02 		add	r2, r7, #12
 2524 05cc 1B01     		lsls	r3, r3, #4
 2525 05ce 1344     		add	r3, r3, r2
 2526 05d0 1A68     		ldr	r2, [r3]
 2527 05d2 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2528 05d6 1344     		add	r3, r3, r2
 2529 05d8 0022     		movs	r2, #0
 2530 05da 1A70     		strb	r2, [r3]
 2531 05dc 08E0     		b	.L128
 2532              	.L122:
 574:..\src/command_processing.c ****         }
 2533              		.loc 1 574 0
 2534 05de 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2535 05e2 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 72


 2536 05e4 07F10C02 		add	r2, r7, #12
 2537 05e8 1146     		mov	r1, r2
 2538 05ea 1846     		mov	r0, r3
 2539 05ec FFF7FEFF 		bl	set_custom_param
 2540              	.L128:
 579:..\src/command_processing.c ****             if ((MENU_LIST[i].name == PARAM_LIST[PARAM_IDX].MENU) & (MENU_LIST[i].reset == TRUE)){
 2541              		.loc 1 579 0
 2542 05f0 0023     		movs	r3, #0
 2543 05f2 87F8C731 		strb	r3, [r7, #455]
 2544 05f6 31E0     		b	.L129
 2545              	.L131:
 580:..\src/command_processing.c ****              reset_PSoC_flag = TRUE;
 2546              		.loc 1 580 0
 2547 05f8 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2548 05fc 2C22     		movs	r2, #44
 2549 05fe 02FB03F3 		mul	r3, r2, r3
 2550 0602 07F5E472 		add	r2, r7, #456
 2551 0606 1344     		add	r3, r3, r2
 2552 0608 BC3B     		subs	r3, r3, #188
 2553 060a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2554 060c 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2555 0610 07F10C01 		add	r1, r7, #12
 2556 0614 1B01     		lsls	r3, r3, #4
 2557 0616 0B44     		add	r3, r3, r1
 2558 0618 0C33     		adds	r3, r3, #12
 2559 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2560 061c 9A42     		cmp	r2, r3
 2561 061e 0CBF     		ite	eq
 2562 0620 0123     		moveq	r3, #1
 2563 0622 0023     		movne	r3, #0
 2564 0624 DAB2     		uxtb	r2, r3
 2565 0626 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2566 062a 2C21     		movs	r1, #44
 2567 062c 01FB03F3 		mul	r3, r1, r3
 2568 0630 07F5E471 		add	r1, r7, #456
 2569 0634 0B44     		add	r3, r3, r1
 2570 0636 BB3B     		subs	r3, r3, #187
 2571 0638 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2572 063a 012B     		cmp	r3, #1
 2573 063c 0CBF     		ite	eq
 2574 063e 0123     		moveq	r3, #1
 2575 0640 0023     		movne	r3, #0
 2576 0642 DBB2     		uxtb	r3, r3
 2577 0644 1340     		ands	r3, r3, r2
 2578 0646 DBB2     		uxtb	r3, r3
 2579 0648 002B     		cmp	r3, #0
 2580 064a 02D0     		beq	.L130
 581:..\src/command_processing.c ****             }   
 2581              		.loc 1 581 0
 2582 064c 0C4B     		ldr	r3, .L136+12
 2583 064e 0122     		movs	r2, #1
 2584 0650 1A70     		strb	r2, [r3]
 2585              	.L130:
 579:..\src/command_processing.c ****             if ((MENU_LIST[i].name == PARAM_LIST[PARAM_IDX].MENU) & (MENU_LIST[i].reset == TRUE)){
 2586              		.loc 1 579 0 discriminator 2
 2587 0652 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2588 0656 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 73


 2589 0658 87F8C731 		strb	r3, [r7, #455]
 2590              	.L129:
 579:..\src/command_processing.c ****             if ((MENU_LIST[i].name == PARAM_LIST[PARAM_IDX].MENU) & (MENU_LIST[i].reset == TRUE)){
 2591              		.loc 1 579 0 is_stmt 0 discriminator 1
 2592 065c 97F8C721 		ldrb	r2, [r7, #455]	@ zero_extendqisi2
 2593 0660 97F8BF31 		ldrb	r3, [r7, #447]	@ zero_extendqisi2
 2594 0664 9A42     		cmp	r2, r3
 2595 0666 C7D3     		bcc	.L131
 2596              	.L132:
 2597              	.LBE24:
 2598              		.loc 1 585 0 is_stmt 1
 2599 0668 00BF     		nop
 2600 066a 07F5E677 		add	r7, r7, #460
 2601              		.cfi_def_cfa_offset 12
 2602 066e BD46     		mov	sp, r7
 2603              		.cfi_def_cfa_register 13
 2604              		@ sp needed
 2605 0670 90BD     		pop	{r4, r7, pc}
 2606              	.L137:
 2607 0672 00BF     		.align	2
 2608              	.L136:
 2609 0674 1C010000 		.word	.LC32
 2610 0678 40010000 		.word	.LC33
 2611 067c 00000000 		.word	g_rx
 2612 0680 00000000 		.word	reset_PSoC_flag
 2613              		.cfi_endproc
 2614              	.LFE69:
 2615              		.size	manage_param_list, .-manage_param_list
 2616              		.section	.text.set_custom_param,"ax",%progbits
 2617              		.align	2
 2618              		.global	set_custom_param
 2619              		.thumb
 2620              		.thumb_func
 2621              		.type	set_custom_param, %function
 2622              	set_custom_param:
 2623              	.LFB70:
 586:..\src/command_processing.c **** 
 587:..\src/command_processing.c **** 
 588:..\src/command_processing.c **** //==============================================================================
 589:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
 590:..\src/command_processing.c **** //==============================================================================
 591:..\src/command_processing.c **** 
 592:..\src/command_processing.c **** void set_custom_param(uint16 index, const struct parameter PARAM_LIST[]) {
 2624              		.loc 1 592 0
 2625              		.cfi_startproc
 2626              		@ args = 0, pretend = 0, frame = 16
 2627              		@ frame_needed = 1, uses_anonymous_args = 0
 2628 0000 80B5     		push	{r7, lr}
 2629              		.cfi_def_cfa_offset 8
 2630              		.cfi_offset 7, -8
 2631              		.cfi_offset 14, -4
 2632 0002 84B0     		sub	sp, sp, #16
 2633              		.cfi_def_cfa_offset 24
 2634 0004 00AF     		add	r7, sp, #0
 2635              		.cfi_def_cfa_register 7
 2636 0006 0346     		mov	r3, r0
 2637 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 74


 2638 000a FB80     		strh	r3, [r7, #6]	@ movhi
 593:..\src/command_processing.c ****     uint8 sod =   num_of_bytes(PARAM_LIST[index].TYPES);
 2639              		.loc 1 593 0
 2640 000c FB88     		ldrh	r3, [r7, #6]
 2641 000e 1B01     		lsls	r3, r3, #4
 2642 0010 3A68     		ldr	r2, [r7]
 2643 0012 1344     		add	r3, r3, r2
 2644 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2645 0016 1846     		mov	r0, r3
 2646 0018 FFF7FEFF 		bl	num_of_bytes
 2647 001c 0346     		mov	r3, r0
 2648 001e 7B73     		strb	r3, [r7, #13]
 594:..\src/command_processing.c **** 
 595:..\src/command_processing.c ****     uint8 CYDATA i, j;
 596:..\src/command_processing.c ****         
 597:..\src/command_processing.c ****     switch(PARAM_LIST[index].custom){
 2649              		.loc 1 597 0
 2650 0020 FB88     		ldrh	r3, [r7, #6]
 2651 0022 1B01     		lsls	r3, r3, #4
 2652 0024 3A68     		ldr	r2, [r7]
 2653 0026 1344     		add	r3, r3, r2
 2654 0028 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 2655 002a 032B     		cmp	r3, #3
 2656 002c 02D0     		beq	.L140
 2657 002e 052B     		cmp	r3, #5
 2658 0030 06D0     		beq	.L141
 2659 0032 36E0     		b	.L148
 2660              	.L140:
 598:..\src/command_processing.c ****         
 599:..\src/command_processing.c ****             
 600:..\src/command_processing.c ****         case CUSTOM_INPUT:         //Input mode
 601:..\src/command_processing.c ****             g_mem.SH_config.input_mode = g_rx.buffer[3];            //In this specific FW, input mo
 2661              		.loc 1 601 0
 2662 0034 3D4B     		ldr	r3, .L150
 2663 0036 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2664 0038 3D4B     		ldr	r3, .L150+4
 2665 003a 83F82820 		strb	r2, [r3, #40]
 602:..\src/command_processing.c ****             break;   
 2666              		.loc 1 602 0
 2667 003e 71E0     		b	.L142
 2668              	.L141:
 603:..\src/command_processing.c **** 
 604:..\src/command_processing.c ****         
 605:..\src/command_processing.c ****         case CUSTOM_POS_LIM:        //Position limits
 606:..\src/command_processing.c ****             g_mem.SH_config.pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.bu
 2669              		.loc 1 606 0
 2670 0040 3A4B     		ldr	r3, .L150
 2671 0042 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2672 0044 1A06     		lsls	r2, r3, #24
 2673 0046 394B     		ldr	r3, .L150
 2674 0048 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2675 004a 1B04     		lsls	r3, r3, #16
 2676 004c 1A43     		orrs	r2, r2, r3
 2677 004e 374B     		ldr	r3, .L150
 2678 0050 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 2679 0052 1B02     		lsls	r3, r3, #8
 2680 0054 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 75


 2681 0056 354A     		ldr	r2, .L150
 2682 0058 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 2683 005a 1343     		orrs	r3, r3, r2
 2684 005c 344A     		ldr	r2, .L150+4
 2685 005e 1362     		str	r3, [r2, #32]
 607:..\src/command_processing.c ****             g_mem.SH_config.pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | g_rx.bu
 2686              		.loc 1 607 0
 2687 0060 324B     		ldr	r3, .L150
 2688 0062 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 2689 0064 1A06     		lsls	r2, r3, #24
 2690 0066 314B     		ldr	r3, .L150
 2691 0068 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 2692 006a 1B04     		lsls	r3, r3, #16
 2693 006c 1A43     		orrs	r2, r2, r3
 2694 006e 2F4B     		ldr	r3, .L150
 2695 0070 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2696 0072 1B02     		lsls	r3, r3, #8
 2697 0074 1343     		orrs	r3, r3, r2
 2698 0076 2D4A     		ldr	r2, .L150
 2699 0078 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 2700 007a 1343     		orrs	r3, r3, r2
 2701 007c 2C4A     		ldr	r2, .L150+4
 2702 007e 5362     		str	r3, [r2, #36]
 608:..\src/command_processing.c **** 
 609:..\src/command_processing.c ****             g_mem.SH_config.pos_lim_inf = g_mem.SH_config.pos_lim_inf << g_mem.SH_config.res;
 2703              		.loc 1 609 0
 2704 0080 2B4B     		ldr	r3, .L150+4
 2705 0082 1B6A     		ldr	r3, [r3, #32]
 2706 0084 2A4A     		ldr	r2, .L150+4
 2707 0086 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 2708 008a 9340     		lsls	r3, r3, r2
 2709 008c 284A     		ldr	r2, .L150+4
 2710 008e 1362     		str	r3, [r2, #32]
 610:..\src/command_processing.c ****             g_mem.SH_config.pos_lim_sup = g_mem.SH_config.pos_lim_sup << g_mem.SH_config.res;
 2711              		.loc 1 610 0
 2712 0090 274B     		ldr	r3, .L150+4
 2713 0092 5B6A     		ldr	r3, [r3, #36]
 2714 0094 264A     		ldr	r2, .L150+4
 2715 0096 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 2716 009a 9340     		lsls	r3, r3, r2
 2717 009c 244A     		ldr	r2, .L150+4
 2718 009e 5362     		str	r3, [r2, #36]
 611:..\src/command_processing.c ****             break;            
 2719              		.loc 1 611 0
 2720 00a0 40E0     		b	.L142
 2721              	.L148:
 612:..\src/command_processing.c ****             default:
 613:..\src/command_processing.c **** 
 614:..\src/command_processing.c ****                 for (i = 0; i < PARAM_LIST[index].NUM_ITEMS * sod; i += sod){
 2722              		.loc 1 614 0
 2723 00a2 0023     		movs	r3, #0
 2724 00a4 FB73     		strb	r3, [r7, #15]
 2725 00a6 20E0     		b	.L143
 2726              	.L146:
 615:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2727              		.loc 1 615 0
 2728 00a8 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 76


 2729 00aa BB73     		strb	r3, [r7, #14]
 2730 00ac 15E0     		b	.L144
 2731              	.L145:
 616:..\src/command_processing.c ****                         ((char*)(PARAM_LIST[index].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 2732              		.loc 1 616 0 discriminator 3
 2733 00ae FB88     		ldrh	r3, [r7, #6]
 2734 00b0 1B01     		lsls	r3, r3, #4
 2735 00b2 3A68     		ldr	r2, [r7]
 2736 00b4 1344     		add	r3, r3, r2
 2737 00b6 1A68     		ldr	r2, [r3]
 2738 00b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2739 00ba 787B     		ldrb	r0, [r7, #13]	@ zero_extendqisi2
 2740 00bc B97B     		ldrb	r1, [r7, #14]	@ zero_extendqisi2
 2741 00be 411A     		subs	r1, r0, r1
 2742 00c0 0B44     		add	r3, r3, r1
 2743 00c2 013B     		subs	r3, r3, #1
 2744 00c4 1344     		add	r3, r3, r2
 2745 00c6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2746 00c8 D11C     		adds	r1, r2, #3
 2747 00ca BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2748 00cc 0A44     		add	r2, r2, r1
 2749 00ce 1749     		ldr	r1, .L150
 2750 00d0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2751 00d2 1A70     		strb	r2, [r3]
 615:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2752              		.loc 1 615 0 discriminator 3
 2753 00d4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2754 00d6 0133     		adds	r3, r3, #1
 2755 00d8 BB73     		strb	r3, [r7, #14]
 2756              	.L144:
 615:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2757              		.loc 1 615 0 is_stmt 0 discriminator 1
 2758 00da BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2759 00dc 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2760 00de 9A42     		cmp	r2, r3
 2761 00e0 E5D3     		bcc	.L145
 614:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2762              		.loc 1 614 0 is_stmt 1 discriminator 2
 2763 00e2 FA7B     		ldrb	r2, [r7, #15]
 2764 00e4 7B7B     		ldrb	r3, [r7, #13]
 2765 00e6 1344     		add	r3, r3, r2
 2766 00e8 FB73     		strb	r3, [r7, #15]
 2767              	.L143:
 614:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2768              		.loc 1 614 0 is_stmt 0 discriminator 1
 2769 00ea FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2770 00ec FB88     		ldrh	r3, [r7, #6]
 2771 00ee 1B01     		lsls	r3, r3, #4
 2772 00f0 3968     		ldr	r1, [r7]
 2773 00f2 0B44     		add	r3, r3, r1
 2774 00f4 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 2775 00f6 1946     		mov	r1, r3
 2776 00f8 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2777 00fa 03FB01F3 		mul	r3, r3, r1
 2778 00fe 9A42     		cmp	r2, r3
 2779 0100 D2DB     		blt	.L146
 617:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 77


 618:..\src/command_processing.c ****                 } 
 619:..\src/command_processing.c ****                 if( PARAM_LIST[index].TYPES == TYPE_STRING)                   
 2780              		.loc 1 619 0 is_stmt 1
 2781 0102 FB88     		ldrh	r3, [r7, #6]
 2782 0104 1B01     		lsls	r3, r3, #4
 2783 0106 3A68     		ldr	r2, [r7]
 2784 0108 1344     		add	r3, r3, r2
 2785 010a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2786 010c 092B     		cmp	r3, #9
 2787 010e 08D1     		bne	.L149
 620:..\src/command_processing.c ****                    *(PARAM_LIST[index].VAR_P + i) = '\0';   
 2788              		.loc 1 620 0
 2789 0110 FB88     		ldrh	r3, [r7, #6]
 2790 0112 1B01     		lsls	r3, r3, #4
 2791 0114 3A68     		ldr	r2, [r7]
 2792 0116 1344     		add	r3, r3, r2
 2793 0118 1A68     		ldr	r2, [r3]
 2794 011a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2795 011c 1344     		add	r3, r3, r2
 2796 011e 0022     		movs	r2, #0
 2797 0120 1A70     		strb	r2, [r3]
 2798              	.L149:
 621:..\src/command_processing.c ****             break;
 2799              		.loc 1 621 0
 2800 0122 00BF     		nop
 2801              	.L142:
 622:..\src/command_processing.c ****     }
 623:..\src/command_processing.c **** 
 624:..\src/command_processing.c ****       
 625:..\src/command_processing.c **** }
 2802              		.loc 1 625 0
 2803 0124 00BF     		nop
 2804 0126 1037     		adds	r7, r7, #16
 2805              		.cfi_def_cfa_offset 8
 2806 0128 BD46     		mov	sp, r7
 2807              		.cfi_def_cfa_register 13
 2808              		@ sp needed
 2809 012a 80BD     		pop	{r7, pc}
 2810              	.L151:
 2811              		.align	2
 2812              	.L150:
 2813 012c 00000000 		.word	g_rx
 2814 0130 00000000 		.word	g_mem
 2815              		.cfi_endproc
 2816              	.LFE70:
 2817              		.size	set_custom_param, .-set_custom_param
 2818              		.section	.text.get_IMU_param_list,"ax",%progbits
 2819              		.align	2
 2820              		.global	get_IMU_param_list
 2821              		.thumb
 2822              		.thumb_func
 2823              		.type	get_IMU_param_list, %function
 2824              	get_IMU_param_list:
 2825              	.LFB71:
 626:..\src/command_processing.c **** 
 627:..\src/command_processing.c **** //==============================================================================
 628:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 78


 629:..\src/command_processing.c **** //==============================================================================
 630:..\src/command_processing.c **** 
 631:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
 632:..\src/command_processing.c **** {
 2826              		.loc 1 632 0
 2827              		.cfi_startproc
 2828              		@ args = 0, pretend = 0, frame = 8
 2829              		@ frame_needed = 1, uses_anonymous_args = 0
 2830              		@ link register save eliminated.
 2831 0000 80B4     		push	{r7}
 2832              		.cfi_def_cfa_offset 4
 2833              		.cfi_offset 7, -4
 2834 0002 83B0     		sub	sp, sp, #12
 2835              		.cfi_def_cfa_offset 16
 2836 0004 00AF     		add	r7, sp, #0
 2837              		.cfi_def_cfa_register 7
 2838 0006 0346     		mov	r3, r0
 2839 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 633:..\src/command_processing.c **** }
 2840              		.loc 1 633 0
 2841 000a 00BF     		nop
 2842 000c 0C37     		adds	r7, r7, #12
 2843              		.cfi_def_cfa_offset 4
 2844 000e BD46     		mov	sp, r7
 2845              		.cfi_def_cfa_register 13
 2846              		@ sp needed
 2847 0010 80BC     		pop	{r7}
 2848              		.cfi_restore 7
 2849              		.cfi_def_cfa_offset 0
 2850 0012 7047     		bx	lr
 2851              		.cfi_endproc
 2852              	.LFE71:
 2853              		.size	get_IMU_param_list, .-get_IMU_param_list
 2854              		.section	.text.setZeros,"ax",%progbits
 2855              		.align	2
 2856              		.global	setZeros
 2857              		.thumb
 2858              		.thumb_func
 2859              		.type	setZeros, %function
 2860              	setZeros:
 2861              	.LFB72:
 634:..\src/command_processing.c **** 
 635:..\src/command_processing.c **** //==============================================================================
 636:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
 637:..\src/command_processing.c **** //==============================================================================
 638:..\src/command_processing.c **** 
 639:..\src/command_processing.c **** void setZeros()
 640:..\src/command_processing.c **** {
 2862              		.loc 1 640 0
 2863              		.cfi_startproc
 2864              		@ args = 0, pretend = 0, frame = 0
 2865              		@ frame_needed = 1, uses_anonymous_args = 0
 2866              		@ link register save eliminated.
 2867 0000 80B4     		push	{r7}
 2868              		.cfi_def_cfa_offset 4
 2869              		.cfi_offset 7, -4
 2870 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 79


 2871              		.cfi_def_cfa_register 7
 641:..\src/command_processing.c **** }
 2872              		.loc 1 641 0
 2873 0004 00BF     		nop
 2874 0006 BD46     		mov	sp, r7
 2875              		.cfi_def_cfa_register 13
 2876              		@ sp needed
 2877 0008 80BC     		pop	{r7}
 2878              		.cfi_restore 7
 2879              		.cfi_def_cfa_offset 0
 2880 000a 7047     		bx	lr
 2881              		.cfi_endproc
 2882              	.LFE72:
 2883              		.size	setZeros, .-setZeros
 2884              		.section	.rodata
 2885              		.align	2
 2886              	.LC34:
 2887 0278 0D0A00   		.ascii	"\015\012\000"
 2888 027b 00       		.align	2
 2889              	.LC35:
 2890 027c 4669726D 		.ascii	"Firmware version: \000"
 2890      77617265 
 2890      20766572 
 2890      73696F6E 
 2890      3A2000
 2891 028f 00       		.align	2
 2892              	.LC36:
 2893 0290 4149525F 		.ascii	"AIR_CHAMBERS_and_VIBROTACTILE_FB\000"
 2893      4348414D 
 2893      42455253 
 2893      5F616E64 
 2893      5F564942 
 2894 02b1 000000   		.align	2
 2895              	.LC37:
 2896 02b4 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 2896      0A00
 2897 02ba 0000     		.align	2
 2898              	.LC38:
 2899 02bc 44455649 		.ascii	"DEVICE INFO\015\012\000"
 2899      43452049 
 2899      4E464F0D 
 2899      0A00
 2900 02ca 0000     		.align	2
 2901              	.LC39:
 2902 02cc 49443A20 		.ascii	"ID: %d\015\012\000"
 2902      25640D0A 
 2902      00
 2903 02d5 000000   		.align	2
 2904              	.LC40:
 2905 02d8 44657669 		.ascii	"Device: PULSE\015\012\000"
 2905      63653A20 
 2905      50554C53 
 2905      450D0A00 
 2906              		.align	2
 2907              	.LC41:
 2908 02e8 496E7075 		.ascii	"Input mode: USB\015\012\000"
 2908      74206D6F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 80


 2908      64653A20 
 2908      5553420D 
 2908      0A00
 2909 02fa 0000     		.align	2
 2910              	.LC42:
 2911 02fc 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 2911      74206D6F 
 2911      64653A20 
 2911      48616E64 
 2911      6C650D0A 
 2912 0311 000000   		.align	2
 2913              	.LC43:
 2914 0314 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 2914      74206D6F 
 2914      64653A20 
 2914      454D4720 
 2914      70726F70 
 2915 0333 00       		.align	2
 2916              	.LC44:
 2917 0334 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 2917      74206D6F 
 2917      64653A20 
 2917      454D4720 
 2917      696E7465 
 2918 034f 00       		.align	2
 2919              	.LC45:
 2920 0350 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 2920      74206D6F 
 2920      64653A20 
 2920      454D4720 
 2920      46434653 
 2921 0367 00       		.align	2
 2922              	.LC46:
 2923 0368 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 2923      74206D6F 
 2923      64653A20 
 2923      454D4720 
 2923      46434653 
 2924 0383 00       		.align	2
 2925              	.LC47:
 2926 0384 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 2926      74206D6F 
 2926      64653A20 
 2926      4A6F7973 
 2926      7469636B 
 2927 039b 00       		.align	2
 2928              	.LC48:
 2929 039c 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 2929      74206D6F 
 2929      64653A20 
 2929      454D4720 
 2929      70726F70 
 2930 03ca 00       		.ascii	"\000"
 2931 03cb 00       		.align	2
 2932              	.LC49:
 2933 03cc 536F6674 		.ascii	"SoftHand sensor resolution: \000"
 2933      48616E64 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 81


 2933      2073656E 
 2933      736F7220 
 2933      7265736F 
 2934 03e9 000000   		.align	2
 2935              	.LC50:
 2936 03ec 25640D0A 		.ascii	"%d\015\012\000"
 2936      00
 2937 03f1 000000   		.align	2
 2938              	.LC51:
 2939 03f4 506F7369 		.ascii	"Position limit SoftHand: inf -> %ld  \000"
 2939      74696F6E 
 2939      206C696D 
 2939      69742053 
 2939      6F667448 
 2940 041a 0000     		.align	2
 2941              	.LC52:
 2942 041c 73757020 		.ascii	"sup -> %ld\015\012\000"
 2942      2D3E2025 
 2942      6C640D0A 
 2942      00
 2943 0429 000000   		.align	2
 2944              	.LC53:
 2945 042c 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 2945      434F4E46 
 2945      49475552 
 2945      4154494F 
 2945      4E0D0A00 
 2946              		.align	2
 2947              	.LC54:
 2948 0440 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 2948      74687265 
 2948      73686F6C 
 2948      6473205B 
 2948      30202D20 
 2949 0462 0000     		.align	2
 2950              	.LC55:
 2951 0464 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 2951      6D617820 
 2951      76616C75 
 2951      6573205B 
 2951      30202D20 
 2952              		.align	2
 2953              	.LC56:
 2954 0488 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 2954      696E7665 
 2954      7273696F 
 2954      6E3A2059 
 2954      45530D0A 
 2955 049d 000000   		.align	2
 2956              	.LC57:
 2957 04a0 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 2957      696E7665 
 2957      7273696F 
 2957      6E3A204E 
 2957      4F0D0A00 
 2958              		.align	2
 2959              	.LC58:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 82


 2960 04b4 454D4720 		.ascii	"EMG max speed: %d %d\000"
 2960      6D617820 
 2960      73706565 
 2960      643A2025 
 2960      64202564 
 2961 04c9 000000   		.align	2
 2962              	.LC59:
 2963 04cc 454D4720 		.ascii	"EMG input %d -> %d\000"
 2963      696E7075 
 2963      74202564 
 2963      202D3E20 
 2963      256400
 2964 04df 00       		.align	2
 2965              	.LC60:
 2966 04e0 4D617374 		.ascii	"Master Mode active: YES\015\012\000"
 2966      6572204D 
 2966      6F646520 
 2966      61637469 
 2966      76653A20 
 2967 04fa 0000     		.align	2
 2968              	.LC61:
 2969 04fc 4D617374 		.ascii	"Master Mode active: NO\015\012\000"
 2969      6572204D 
 2969      6F646520 
 2969      61637469 
 2969      76653A20 
 2970 0515 000000   		.align	2
 2971              	.LC62:
 2972 0518 536C6176 		.ascii	"Slave ID: %d\015\012\000"
 2972      65204944 
 2972      3A202564 
 2972      0D0A00
 2973 0527 00       		.align	2
 2974              	.LC63:
 2975 0528 41697263 		.ascii	"Airchamber FB active: YES\015\012\000"
 2975      68616D62 
 2975      65722046 
 2975      42206163 
 2975      74697665 
 2976              		.align	2
 2977              	.LC64:
 2978 0544 41697263 		.ascii	"Airchamber FB active: NO\015\012\000"
 2978      68616D62 
 2978      65722046 
 2978      42206163 
 2978      74697665 
 2979 055f 00       		.align	2
 2980              	.LC65:
 2981 0560 56696272 		.ascii	"Vibrotactile FB active: YES\015\012\000"
 2981      6F746163 
 2981      74696C65 
 2981      20464220 
 2981      61637469 
 2982 057e 0000     		.align	2
 2983              	.LC66:
 2984 0580 56696272 		.ascii	"Vibrotactile FB active: NO\015\012\000"
 2984      6F746163 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 83


 2984      74696C65 
 2984      20464220 
 2984      61637469 
 2985 059d 000000   		.align	2
 2986              	.LC67:
 2987 05a0 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 2987      20465720 
 2987      6379636C 
 2987      65207469 
 2987      6D653A20 
 2988              		.align	2
 2989              	.LC68:
 2990 05bc 0D0A0000 		.ascii	"\015\012\000\000"
 2991              		.section	.text.prepare_generic_info,"ax",%progbits
 2992              		.align	2
 2993              		.global	prepare_generic_info
 2994              		.thumb
 2995              		.thumb_func
 2996              		.type	prepare_generic_info, %function
 2997              	prepare_generic_info:
 2998              	.LFB73:
 642:..\src/command_processing.c **** 
 643:..\src/command_processing.c **** //==============================================================================
 644:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
 645:..\src/command_processing.c **** //==============================================================================
 646:..\src/command_processing.c **** 
 647:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
 648:..\src/command_processing.c **** {  int i;
 2999              		.loc 1 648 0
 3000              		.cfi_startproc
 3001              		@ args = 0, pretend = 0, frame = 120
 3002              		@ frame_needed = 1, uses_anonymous_args = 0
 3003 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3004              		.cfi_def_cfa_offset 20
 3005              		.cfi_offset 4, -20
 3006              		.cfi_offset 5, -16
 3007              		.cfi_offset 6, -12
 3008              		.cfi_offset 7, -8
 3009              		.cfi_offset 14, -4
 3010 0002 9FB0     		sub	sp, sp, #124
 3011              		.cfi_def_cfa_offset 144
 3012 0004 00AF     		add	r7, sp, #0
 3013              		.cfi_def_cfa_register 7
 3014 0006 7860     		str	r0, [r7, #4]
 649:..\src/command_processing.c **** 
 650:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 3015              		.loc 1 650 0
 3016 0008 A14B     		ldr	r3, .L179
 3017 000a 3B67     		str	r3, [r7, #112]
 651:..\src/command_processing.c ****     
 652:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 3018              		.loc 1 652 0
 3019 000c A04B     		ldr	r3, .L179
 3020 000e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3021 0010 FA2B     		cmp	r3, #250
 3022 0012 00F06083 		beq	.L178
 3023              	.LBB25:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 84


 653:..\src/command_processing.c ****         char str[100];
 654:..\src/command_processing.c ****         strcpy(info_string, "");
 3024              		.loc 1 654 0
 3025 0016 7B68     		ldr	r3, [r7, #4]
 3026 0018 0022     		movs	r2, #0
 3027 001a 1A70     		strb	r2, [r3]
 655:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 3028              		.loc 1 655 0
 3029 001c 7868     		ldr	r0, [r7, #4]
 3030 001e FFF7FEFF 		bl	strlen
 3031 0022 0346     		mov	r3, r0
 3032 0024 1A46     		mov	r2, r3
 3033 0026 7B68     		ldr	r3, [r7, #4]
 3034 0028 1344     		add	r3, r3, r2
 3035 002a 9A4A     		ldr	r2, .L179+4
 3036 002c 1188     		ldrh	r1, [r2]	@ unaligned
 3037 002e 9278     		ldrb	r2, [r2, #2]
 3038 0030 1980     		strh	r1, [r3]	@ unaligned
 3039 0032 9A70     		strb	r2, [r3, #2]
 656:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 3040              		.loc 1 656 0
 3041 0034 7868     		ldr	r0, [r7, #4]
 3042 0036 FFF7FEFF 		bl	strlen
 3043 003a 0346     		mov	r3, r0
 3044 003c 1A46     		mov	r2, r3
 3045 003e 7B68     		ldr	r3, [r7, #4]
 3046 0040 1344     		add	r3, r3, r2
 3047 0042 954A     		ldr	r2, .L179+8
 3048 0044 1D46     		mov	r5, r3
 3049 0046 1446     		mov	r4, r2
 3050 0048 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3051 004a 2860     		str	r0, [r5]	@ unaligned
 3052 004c 6960     		str	r1, [r5, #4]	@ unaligned
 3053 004e AA60     		str	r2, [r5, #8]	@ unaligned
 3054 0050 EB60     		str	r3, [r5, #12]	@ unaligned
 3055 0052 2388     		ldrh	r3, [r4]	@ unaligned
 3056 0054 A278     		ldrb	r2, [r4, #2]
 3057 0056 2B82     		strh	r3, [r5, #16]	@ unaligned
 3058 0058 1346     		mov	r3, r2
 3059 005a AB74     		strb	r3, [r5, #18]
 657:..\src/command_processing.c ****         strcat(info_string, VERSION);
 3060              		.loc 1 657 0
 3061 005c 7868     		ldr	r0, [r7, #4]
 3062 005e FFF7FEFF 		bl	strlen
 3063 0062 0346     		mov	r3, r0
 3064 0064 1A46     		mov	r2, r3
 3065 0066 7B68     		ldr	r3, [r7, #4]
 3066 0068 1344     		add	r3, r3, r2
 3067 006a 8C4A     		ldr	r2, .L179+12
 3068 006c 1446     		mov	r4, r2
 3069 006e 9E46     		mov	lr, r3
 3070 0070 04F1200C 		add	ip, r4, #32
 3071              	.L156:
 3072 0074 7546     		mov	r5, lr
 3073 0076 2646     		mov	r6, r4
 3074 0078 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3075 007a 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 85


 3076 007c 6960     		str	r1, [r5, #4]	@ unaligned
 3077 007e AA60     		str	r2, [r5, #8]	@ unaligned
 3078 0080 EB60     		str	r3, [r5, #12]	@ unaligned
 3079 0082 1034     		adds	r4, r4, #16
 3080 0084 0EF1100E 		add	lr, lr, #16
 3081 0088 6445     		cmp	r4, ip
 3082 008a F3D1     		bne	.L156
 3083 008c 7346     		mov	r3, lr
 3084 008e 2246     		mov	r2, r4
 3085 0090 1278     		ldrb	r2, [r2]
 3086 0092 1A70     		strb	r2, [r3]
 658:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 3087              		.loc 1 658 0
 3088 0094 7868     		ldr	r0, [r7, #4]
 3089 0096 FFF7FEFF 		bl	strlen
 3090 009a 0346     		mov	r3, r0
 3091 009c 1A46     		mov	r2, r3
 3092 009e 7B68     		ldr	r3, [r7, #4]
 3093 00a0 1344     		add	r3, r3, r2
 3094 00a2 7F4A     		ldr	r2, .L179+16
 3095 00a4 1068     		ldr	r0, [r2]	@ unaligned
 3096 00a6 1860     		str	r0, [r3]	@ unaligned
 3097 00a8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3098 00aa 9A80     		strh	r2, [r3, #4]	@ unaligned
 659:..\src/command_processing.c **** 
 660:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 3099              		.loc 1 660 0
 3100 00ac 7868     		ldr	r0, [r7, #4]
 3101 00ae FFF7FEFF 		bl	strlen
 3102 00b2 0346     		mov	r3, r0
 3103 00b4 1A46     		mov	r2, r3
 3104 00b6 7B68     		ldr	r3, [r7, #4]
 3105 00b8 1344     		add	r3, r3, r2
 3106 00ba 7A4A     		ldr	r2, .L179+20
 3107 00bc 1C46     		mov	r4, r3
 3108 00be 1346     		mov	r3, r2
 3109 00c0 07CB     		ldmia	r3!, {r0, r1, r2}
 3110 00c2 2060     		str	r0, [r4]	@ unaligned
 3111 00c4 6160     		str	r1, [r4, #4]	@ unaligned
 3112 00c6 A260     		str	r2, [r4, #8]	@ unaligned
 3113 00c8 1B88     		ldrh	r3, [r3]	@ unaligned
 3114 00ca A381     		strh	r3, [r4, #12]	@ unaligned
 661:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 3115              		.loc 1 661 0
 3116 00cc 3B6F     		ldr	r3, [r7, #112]
 3117 00ce 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3118 00d0 1A46     		mov	r2, r3
 3119 00d2 07F10C03 		add	r3, r7, #12
 3120 00d6 7449     		ldr	r1, .L179+24
 3121 00d8 1846     		mov	r0, r3
 3122 00da FFF7FEFF 		bl	sprintf
 662:..\src/command_processing.c ****         strcat(info_string, str);
 3123              		.loc 1 662 0
 3124 00de 07F10C03 		add	r3, r7, #12
 3125 00e2 1946     		mov	r1, r3
 3126 00e4 7868     		ldr	r0, [r7, #4]
 3127 00e6 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 86


 663:..\src/command_processing.c **** 
 664:..\src/command_processing.c ****         strcat(info_string, "Device: PULSE\r\n");
 3128              		.loc 1 664 0
 3129 00ea 7868     		ldr	r0, [r7, #4]
 3130 00ec FFF7FEFF 		bl	strlen
 3131 00f0 0346     		mov	r3, r0
 3132 00f2 1A46     		mov	r2, r3
 3133 00f4 7B68     		ldr	r3, [r7, #4]
 3134 00f6 1344     		add	r3, r3, r2
 3135 00f8 6C4A     		ldr	r2, .L179+28
 3136 00fa 1C46     		mov	r4, r3
 3137 00fc 1546     		mov	r5, r2
 3138 00fe 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3139 0100 2060     		str	r0, [r4]	@ unaligned
 3140 0102 6160     		str	r1, [r4, #4]	@ unaligned
 3141 0104 A260     		str	r2, [r4, #8]	@ unaligned
 3142 0106 E360     		str	r3, [r4, #12]	@ unaligned
 665:..\src/command_processing.c ****            
 666:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 3143              		.loc 1 666 0
 3144 0108 7868     		ldr	r0, [r7, #4]
 3145 010a FFF7FEFF 		bl	strlen
 3146 010e 0346     		mov	r3, r0
 3147 0110 1A46     		mov	r2, r3
 3148 0112 7B68     		ldr	r3, [r7, #4]
 3149 0114 1344     		add	r3, r3, r2
 3150 0116 5F4A     		ldr	r2, .L179+4
 3151 0118 1188     		ldrh	r1, [r2]	@ unaligned
 3152 011a 9278     		ldrb	r2, [r2, #2]
 3153 011c 1980     		strh	r1, [r3]	@ unaligned
 3154 011e 9A70     		strb	r2, [r3, #2]
 667:..\src/command_processing.c ****         
 668:..\src/command_processing.c ****        
 669:..\src/command_processing.c **** 
 670:..\src/command_processing.c ****             switch(MEM_P->SH_config.input_mode) {
 3155              		.loc 1 670 0
 3156 0120 3B6F     		ldr	r3, [r7, #112]
 3157 0122 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 3158 0126 072B     		cmp	r3, #7
 3159 0128 00F2F380 		bhi	.L157
 3160 012c 01A2     		adr	r2, .L159
 3161 012e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3162 0132 00BF     		.p2align 2
 3163              	.L159:
 3164 0134 55010000 		.word	.L158+1
 3165 0138 79010000 		.word	.L160+1
 3166 013c A1010000 		.word	.L161+1
 3167 0140 D3010000 		.word	.L162+1
 3168 0144 03020000 		.word	.L163+1
 3169 0148 31020000 		.word	.L164+1
 3170 014c 61020000 		.word	.L165+1
 3171 0150 CD020000 		.word	.L166+1
 3172              		.p2align 1
 3173              	.L158:
 671:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
 672:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 3174              		.loc 1 672 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 87


 3175 0154 7868     		ldr	r0, [r7, #4]
 3176 0156 FFF7FEFF 		bl	strlen
 3177 015a 0346     		mov	r3, r0
 3178 015c 1A46     		mov	r2, r3
 3179 015e 7B68     		ldr	r3, [r7, #4]
 3180 0160 1344     		add	r3, r3, r2
 3181 0162 534A     		ldr	r2, .L179+32
 3182 0164 1D46     		mov	r5, r3
 3183 0166 1446     		mov	r4, r2
 3184 0168 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3185 016a 2860     		str	r0, [r5]	@ unaligned
 3186 016c 6960     		str	r1, [r5, #4]	@ unaligned
 3187 016e AA60     		str	r2, [r5, #8]	@ unaligned
 3188 0170 EB60     		str	r3, [r5, #12]	@ unaligned
 3189 0172 2388     		ldrh	r3, [r4]	@ unaligned
 3190 0174 2B82     		strh	r3, [r5, #16]	@ unaligned
 673:..\src/command_processing.c ****                     break;
 3191              		.loc 1 673 0
 3192 0176 CCE0     		b	.L157
 3193              	.L160:
 674:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
 675:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 3194              		.loc 1 675 0
 3195 0178 7868     		ldr	r0, [r7, #4]
 3196 017a FFF7FEFF 		bl	strlen
 3197 017e 0346     		mov	r3, r0
 3198 0180 1A46     		mov	r2, r3
 3199 0182 7B68     		ldr	r3, [r7, #4]
 3200 0184 1344     		add	r3, r3, r2
 3201 0186 4B4A     		ldr	r2, .L179+36
 3202 0188 1D46     		mov	r5, r3
 3203 018a 1446     		mov	r4, r2
 3204 018c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3205 018e 2860     		str	r0, [r5]	@ unaligned
 3206 0190 6960     		str	r1, [r5, #4]	@ unaligned
 3207 0192 AA60     		str	r2, [r5, #8]	@ unaligned
 3208 0194 EB60     		str	r3, [r5, #12]	@ unaligned
 3209 0196 2068     		ldr	r0, [r4]	@ unaligned
 3210 0198 2861     		str	r0, [r5, #16]	@ unaligned
 3211 019a 2379     		ldrb	r3, [r4, #4]
 3212 019c 2B75     		strb	r3, [r5, #20]
 676:..\src/command_processing.c ****                     break;
 3213              		.loc 1 676 0
 3214 019e B8E0     		b	.L157
 3215              	.L161:
 677:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
 678:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 3216              		.loc 1 678 0
 3217 01a0 7868     		ldr	r0, [r7, #4]
 3218 01a2 FFF7FEFF 		bl	strlen
 3219 01a6 0346     		mov	r3, r0
 3220 01a8 1A46     		mov	r2, r3
 3221 01aa 7B68     		ldr	r3, [r7, #4]
 3222 01ac 1344     		add	r3, r3, r2
 3223 01ae 424A     		ldr	r2, .L179+40
 3224 01b0 1D46     		mov	r5, r3
 3225 01b2 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 88


 3226 01b4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3227 01b6 2860     		str	r0, [r5]	@ unaligned
 3228 01b8 6960     		str	r1, [r5, #4]	@ unaligned
 3229 01ba AA60     		str	r2, [r5, #8]	@ unaligned
 3230 01bc EB60     		str	r3, [r5, #12]	@ unaligned
 3231 01be 07CC     		ldmia	r4!, {r0, r1, r2}
 3232 01c0 2861     		str	r0, [r5, #16]	@ unaligned
 3233 01c2 6961     		str	r1, [r5, #20]	@ unaligned
 3234 01c4 AA61     		str	r2, [r5, #24]	@ unaligned
 3235 01c6 2388     		ldrh	r3, [r4]	@ unaligned
 3236 01c8 A278     		ldrb	r2, [r4, #2]
 3237 01ca AB83     		strh	r3, [r5, #28]	@ unaligned
 3238 01cc 1346     		mov	r3, r2
 3239 01ce AB77     		strb	r3, [r5, #30]
 679:..\src/command_processing.c ****                     break;
 3240              		.loc 1 679 0
 3241 01d0 9FE0     		b	.L157
 3242              	.L162:
 680:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
 681:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 3243              		.loc 1 681 0
 3244 01d2 7868     		ldr	r0, [r7, #4]
 3245 01d4 FFF7FEFF 		bl	strlen
 3246 01d8 0346     		mov	r3, r0
 3247 01da 1A46     		mov	r2, r3
 3248 01dc 7B68     		ldr	r3, [r7, #4]
 3249 01de 1344     		add	r3, r3, r2
 3250 01e0 364A     		ldr	r2, .L179+44
 3251 01e2 1D46     		mov	r5, r3
 3252 01e4 1446     		mov	r4, r2
 3253 01e6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3254 01e8 2860     		str	r0, [r5]	@ unaligned
 3255 01ea 6960     		str	r1, [r5, #4]	@ unaligned
 3256 01ec AA60     		str	r2, [r5, #8]	@ unaligned
 3257 01ee EB60     		str	r3, [r5, #12]	@ unaligned
 3258 01f0 03CC     		ldmia	r4!, {r0, r1}
 3259 01f2 2861     		str	r0, [r5, #16]	@ unaligned
 3260 01f4 6961     		str	r1, [r5, #20]	@ unaligned
 3261 01f6 2388     		ldrh	r3, [r4]	@ unaligned
 3262 01f8 A278     		ldrb	r2, [r4, #2]
 3263 01fa 2B83     		strh	r3, [r5, #24]	@ unaligned
 3264 01fc 1346     		mov	r3, r2
 3265 01fe AB76     		strb	r3, [r5, #26]
 682:..\src/command_processing.c ****                     break;
 3266              		.loc 1 682 0
 3267 0200 87E0     		b	.L157
 3268              	.L163:
 683:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
 684:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 3269              		.loc 1 684 0
 3270 0202 7868     		ldr	r0, [r7, #4]
 3271 0204 FFF7FEFF 		bl	strlen
 3272 0208 0346     		mov	r3, r0
 3273 020a 1A46     		mov	r2, r3
 3274 020c 7B68     		ldr	r3, [r7, #4]
 3275 020e 1344     		add	r3, r3, r2
 3276 0210 2B4A     		ldr	r2, .L179+48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 89


 3277 0212 1C46     		mov	r4, r3
 3278 0214 1546     		mov	r5, r2
 3279 0216 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3280 0218 2060     		str	r0, [r4]	@ unaligned
 3281 021a 6160     		str	r1, [r4, #4]	@ unaligned
 3282 021c A260     		str	r2, [r4, #8]	@ unaligned
 3283 021e E360     		str	r3, [r4, #12]	@ unaligned
 3284 0220 2868     		ldr	r0, [r5]	@ unaligned
 3285 0222 2061     		str	r0, [r4, #16]	@ unaligned
 3286 0224 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 3287 0226 AA79     		ldrb	r2, [r5, #6]
 3288 0228 A382     		strh	r3, [r4, #20]	@ unaligned
 3289 022a 1346     		mov	r3, r2
 3290 022c A375     		strb	r3, [r4, #22]
 685:..\src/command_processing.c ****                     break;
 3291              		.loc 1 685 0
 3292 022e 70E0     		b	.L157
 3293              	.L164:
 686:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
 687:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 3294              		.loc 1 687 0
 3295 0230 7868     		ldr	r0, [r7, #4]
 3296 0232 FFF7FEFF 		bl	strlen
 3297 0236 0346     		mov	r3, r0
 3298 0238 1A46     		mov	r2, r3
 3299 023a 7B68     		ldr	r3, [r7, #4]
 3300 023c 1344     		add	r3, r3, r2
 3301 023e 214A     		ldr	r2, .L179+52
 3302 0240 1D46     		mov	r5, r3
 3303 0242 1446     		mov	r4, r2
 3304 0244 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3305 0246 2860     		str	r0, [r5]	@ unaligned
 3306 0248 6960     		str	r1, [r5, #4]	@ unaligned
 3307 024a AA60     		str	r2, [r5, #8]	@ unaligned
 3308 024c EB60     		str	r3, [r5, #12]	@ unaligned
 3309 024e 03CC     		ldmia	r4!, {r0, r1}
 3310 0250 2861     		str	r0, [r5, #16]	@ unaligned
 3311 0252 6961     		str	r1, [r5, #20]	@ unaligned
 3312 0254 2388     		ldrh	r3, [r4]	@ unaligned
 3313 0256 A278     		ldrb	r2, [r4, #2]
 3314 0258 2B83     		strh	r3, [r5, #24]	@ unaligned
 3315 025a 1346     		mov	r3, r2
 3316 025c AB76     		strb	r3, [r5, #26]
 688:..\src/command_processing.c ****                     break;
 3317              		.loc 1 688 0
 3318 025e 58E0     		b	.L157
 3319              	.L165:
 689:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
 690:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 3320              		.loc 1 690 0
 3321 0260 7868     		ldr	r0, [r7, #4]
 3322 0262 FFF7FEFF 		bl	strlen
 3323 0266 0346     		mov	r3, r0
 3324 0268 1A46     		mov	r2, r3
 3325 026a 7B68     		ldr	r3, [r7, #4]
 3326 026c 1344     		add	r3, r3, r2
 3327 026e 164A     		ldr	r2, .L179+56
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 90


 3328 0270 1C46     		mov	r4, r3
 3329 0272 1546     		mov	r5, r2
 3330 0274 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3331 0276 2060     		str	r0, [r4]	@ unaligned
 3332 0278 6160     		str	r1, [r4, #4]	@ unaligned
 3333 027a A260     		str	r2, [r4, #8]	@ unaligned
 3334 027c E360     		str	r3, [r4, #12]	@ unaligned
 3335 027e 2868     		ldr	r0, [r5]	@ unaligned
 3336 0280 2061     		str	r0, [r4, #16]	@ unaligned
 3337 0282 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 3338 0284 AA79     		ldrb	r2, [r5, #6]
 3339 0286 A382     		strh	r3, [r4, #20]	@ unaligned
 3340 0288 1346     		mov	r3, r2
 3341 028a A375     		strb	r3, [r4, #22]
 691:..\src/command_processing.c ****                     break;
 3342              		.loc 1 691 0
 3343 028c 41E0     		b	.L157
 3344              	.L180:
 3345 028e 00BF     		.align	2
 3346              	.L179:
 3347 0290 00000000 		.word	c_mem
 3348 0294 78020000 		.word	.LC34
 3349 0298 7C020000 		.word	.LC35
 3350 029c 90020000 		.word	.LC36
 3351 02a0 B4020000 		.word	.LC37
 3352 02a4 BC020000 		.word	.LC38
 3353 02a8 CC020000 		.word	.LC39
 3354 02ac D8020000 		.word	.LC40
 3355 02b0 E8020000 		.word	.LC41
 3356 02b4 FC020000 		.word	.LC42
 3357 02b8 14030000 		.word	.LC43
 3358 02bc 34030000 		.word	.LC44
 3359 02c0 50030000 		.word	.LC45
 3360 02c4 68030000 		.word	.LC46
 3361 02c8 84030000 		.word	.LC47
 3362              	.L166:
 692:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
 693:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 3363              		.loc 1 693 0
 3364 02cc 7868     		ldr	r0, [r7, #4]
 3365 02ce FFF7FEFF 		bl	strlen
 3366 02d2 0346     		mov	r3, r0
 3367 02d4 1A46     		mov	r2, r3
 3368 02d6 7B68     		ldr	r3, [r7, #4]
 3369 02d8 1344     		add	r3, r3, r2
 3370 02da BA4A     		ldr	r2, .L181
 3371 02dc 1546     		mov	r5, r2
 3372 02de 9E46     		mov	lr, r3
 3373 02e0 05F1200C 		add	ip, r5, #32
 3374              	.L167:
 3375 02e4 7446     		mov	r4, lr
 3376 02e6 2E46     		mov	r6, r5
 3377 02e8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3378 02ea 2060     		str	r0, [r4]	@ unaligned
 3379 02ec 6160     		str	r1, [r4, #4]	@ unaligned
 3380 02ee A260     		str	r2, [r4, #8]	@ unaligned
 3381 02f0 E360     		str	r3, [r4, #12]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 91


 3382 02f2 1035     		adds	r5, r5, #16
 3383 02f4 0EF1100E 		add	lr, lr, #16
 3384 02f8 6545     		cmp	r5, ip
 3385 02fa F3D1     		bne	.L167
 3386 02fc 7446     		mov	r4, lr
 3387 02fe 2B46     		mov	r3, r5
 3388 0300 07CB     		ldmia	r3!, {r0, r1, r2}
 3389 0302 2060     		str	r0, [r4]	@ unaligned
 3390 0304 6160     		str	r1, [r4, #4]	@ unaligned
 3391 0306 A260     		str	r2, [r4, #8]	@ unaligned
 3392 0308 1A88     		ldrh	r2, [r3]	@ unaligned
 3393 030a 9B78     		ldrb	r3, [r3, #2]
 3394 030c A281     		strh	r2, [r4, #12]	@ unaligned
 3395 030e A373     		strb	r3, [r4, #14]
 694:..\src/command_processing.c ****                     break;
 3396              		.loc 1 694 0
 3397 0310 00BF     		nop
 3398              	.L157:
 695:..\src/command_processing.c ****             }
 696:..\src/command_processing.c **** 
 697:..\src/command_processing.c **** 
 698:..\src/command_processing.c ****             strcat(info_string, "SoftHand sensor resolution: ");
 3399              		.loc 1 698 0
 3400 0312 7868     		ldr	r0, [r7, #4]
 3401 0314 FFF7FEFF 		bl	strlen
 3402 0318 0346     		mov	r3, r0
 3403 031a 1A46     		mov	r2, r3
 3404 031c 7B68     		ldr	r3, [r7, #4]
 3405 031e 1344     		add	r3, r3, r2
 3406 0320 A94A     		ldr	r2, .L181+4
 3407 0322 1D46     		mov	r5, r3
 3408 0324 1446     		mov	r4, r2
 3409 0326 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3410 0328 2860     		str	r0, [r5]	@ unaligned
 3411 032a 6960     		str	r1, [r5, #4]	@ unaligned
 3412 032c AA60     		str	r2, [r5, #8]	@ unaligned
 3413 032e EB60     		str	r3, [r5, #12]	@ unaligned
 3414 0330 07CC     		ldmia	r4!, {r0, r1, r2}
 3415 0332 2861     		str	r0, [r5, #16]	@ unaligned
 3416 0334 6961     		str	r1, [r5, #20]	@ unaligned
 3417 0336 AA61     		str	r2, [r5, #24]	@ unaligned
 3418 0338 2378     		ldrb	r3, [r4]
 3419 033a 2B77     		strb	r3, [r5, #28]
 699:..\src/command_processing.c ****             
 700:..\src/command_processing.c ****                 sprintf(str, "%d\r\n", (int) MEM_P->SH_config.res);
 3420              		.loc 1 700 0
 3421 033c 3B6F     		ldr	r3, [r7, #112]
 3422 033e 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 3423 0342 1A46     		mov	r2, r3
 3424 0344 07F10C03 		add	r3, r7, #12
 3425 0348 A049     		ldr	r1, .L181+8
 3426 034a 1846     		mov	r0, r3
 3427 034c FFF7FEFF 		bl	sprintf
 701:..\src/command_processing.c ****                 strcat(info_string, str);
 3428              		.loc 1 701 0
 3429 0350 07F10C03 		add	r3, r7, #12
 3430 0354 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 92


 3431 0356 7868     		ldr	r0, [r7, #4]
 3432 0358 FFF7FEFF 		bl	strcat
 702:..\src/command_processing.c ****                 
 703:..\src/command_processing.c **** 
 704:..\src/command_processing.c ****             sprintf(str, "Position limit SoftHand: inf -> %ld  ", (int32)MEM_P->SH_config.pos_lim_i
 3433              		.loc 1 704 0
 3434 035c 3B6F     		ldr	r3, [r7, #112]
 3435 035e 1B6A     		ldr	r3, [r3, #32]
 3436 0360 3A6F     		ldr	r2, [r7, #112]
 3437 0362 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 3438 0366 43FA02F2 		asr	r2, r3, r2
 3439 036a 07F10C03 		add	r3, r7, #12
 3440 036e 9849     		ldr	r1, .L181+12
 3441 0370 1846     		mov	r0, r3
 3442 0372 FFF7FEFF 		bl	sprintf
 705:..\src/command_processing.c ****             strcat(info_string, str);
 3443              		.loc 1 705 0
 3444 0376 07F10C03 		add	r3, r7, #12
 3445 037a 1946     		mov	r1, r3
 3446 037c 7868     		ldr	r0, [r7, #4]
 3447 037e FFF7FEFF 		bl	strcat
 706:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MEM_P->SH_config.pos_lim_sup >> MEM_P->SH_config.
 3448              		.loc 1 706 0
 3449 0382 3B6F     		ldr	r3, [r7, #112]
 3450 0384 5B6A     		ldr	r3, [r3, #36]
 3451 0386 3A6F     		ldr	r2, [r7, #112]
 3452 0388 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 3453 038c 43FA02F2 		asr	r2, r3, r2
 3454 0390 07F10C03 		add	r3, r7, #12
 3455 0394 8F49     		ldr	r1, .L181+16
 3456 0396 1846     		mov	r0, r3
 3457 0398 FFF7FEFF 		bl	sprintf
 707:..\src/command_processing.c ****             strcat(info_string, str);
 3458              		.loc 1 707 0
 3459 039c 07F10C03 		add	r3, r7, #12
 3460 03a0 1946     		mov	r1, r3
 3461 03a2 7868     		ldr	r0, [r7, #4]
 3462 03a4 FFF7FEFF 		bl	strcat
 708:..\src/command_processing.c **** 
 709:..\src/command_processing.c ****          
 710:..\src/command_processing.c ****       
 711:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 3463              		.loc 1 711 0
 3464 03a8 7868     		ldr	r0, [r7, #4]
 3465 03aa FFF7FEFF 		bl	strlen
 3466 03ae 0346     		mov	r3, r0
 3467 03b0 1A46     		mov	r2, r3
 3468 03b2 7B68     		ldr	r3, [r7, #4]
 3469 03b4 1344     		add	r3, r3, r2
 3470 03b6 884A     		ldr	r2, .L181+20
 3471 03b8 1D46     		mov	r5, r3
 3472 03ba 1446     		mov	r4, r2
 3473 03bc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3474 03be 2860     		str	r0, [r5]	@ unaligned
 3475 03c0 6960     		str	r1, [r5, #4]	@ unaligned
 3476 03c2 AA60     		str	r2, [r5, #8]	@ unaligned
 3477 03c4 EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 93


 3478 03c6 2068     		ldr	r0, [r4]	@ unaligned
 3479 03c8 2861     		str	r0, [r5, #16]	@ unaligned
 712:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 3480              		.loc 1 712 0
 3481 03ca 3B6F     		ldr	r3, [r7, #112]
 3482 03cc 1B8E     		ldrh	r3, [r3, #48]
 3483 03ce 1A46     		mov	r2, r3
 3484 03d0 3B6F     		ldr	r3, [r7, #112]
 3485 03d2 5B8E     		ldrh	r3, [r3, #50]
 3486 03d4 07F10C00 		add	r0, r7, #12
 3487 03d8 8049     		ldr	r1, .L181+24
 3488 03da FFF7FEFF 		bl	sprintf
 713:..\src/command_processing.c ****         strcat(info_string, str);
 3489              		.loc 1 713 0
 3490 03de 07F10C03 		add	r3, r7, #12
 3491 03e2 1946     		mov	r1, r3
 3492 03e4 7868     		ldr	r0, [r7, #4]
 3493 03e6 FFF7FEFF 		bl	strcat
 714:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 3494              		.loc 1 714 0
 3495 03ea 7868     		ldr	r0, [r7, #4]
 3496 03ec FFF7FEFF 		bl	strlen
 3497 03f0 0346     		mov	r3, r0
 3498 03f2 1A46     		mov	r2, r3
 3499 03f4 7B68     		ldr	r3, [r7, #4]
 3500 03f6 1344     		add	r3, r3, r2
 3501 03f8 794A     		ldr	r2, .L181+28
 3502 03fa 1188     		ldrh	r1, [r2]	@ unaligned
 3503 03fc 9278     		ldrb	r2, [r2, #2]
 3504 03fe 1980     		strh	r1, [r3]	@ unaligned
 3505 0400 9A70     		strb	r2, [r3, #2]
 715:..\src/command_processing.c **** 
 716:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 3506              		.loc 1 716 0
 3507 0402 3B6F     		ldr	r3, [r7, #112]
 3508 0404 5A6B     		ldr	r2, [r3, #52]
 3509 0406 3B6F     		ldr	r3, [r7, #112]
 3510 0408 9B6B     		ldr	r3, [r3, #56]
 3511 040a 07F10C00 		add	r0, r7, #12
 3512 040e 7549     		ldr	r1, .L181+32
 3513 0410 FFF7FEFF 		bl	sprintf
 717:..\src/command_processing.c ****         strcat(info_string, str);
 3514              		.loc 1 717 0
 3515 0414 07F10C03 		add	r3, r7, #12
 3516 0418 1946     		mov	r1, r3
 3517 041a 7868     		ldr	r0, [r7, #4]
 3518 041c FFF7FEFF 		bl	strcat
 718:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 3519              		.loc 1 718 0
 3520 0420 7868     		ldr	r0, [r7, #4]
 3521 0422 FFF7FEFF 		bl	strlen
 3522 0426 0346     		mov	r3, r0
 3523 0428 1A46     		mov	r2, r3
 3524 042a 7B68     		ldr	r3, [r7, #4]
 3525 042c 1344     		add	r3, r3, r2
 3526 042e 6C4A     		ldr	r2, .L181+28
 3527 0430 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 94


 3528 0432 9278     		ldrb	r2, [r2, #2]
 3529 0434 1980     		strh	r1, [r3]	@ unaligned
 3530 0436 9A70     		strb	r2, [r3, #2]
 719:..\src/command_processing.c **** 
 720:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 3531              		.loc 1 720 0
 3532 0438 3B6F     		ldr	r3, [r7, #112]
 3533 043a 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 3534 043e 002B     		cmp	r3, #0
 3535 0440 13D0     		beq	.L168
 721:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 3536              		.loc 1 721 0
 3537 0442 7868     		ldr	r0, [r7, #4]
 3538 0444 FFF7FEFF 		bl	strlen
 3539 0448 0346     		mov	r3, r0
 3540 044a 1A46     		mov	r2, r3
 3541 044c 7B68     		ldr	r3, [r7, #4]
 3542 044e 1344     		add	r3, r3, r2
 3543 0450 654A     		ldr	r2, .L181+36
 3544 0452 1D46     		mov	r5, r3
 3545 0454 1446     		mov	r4, r2
 3546 0456 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3547 0458 2860     		str	r0, [r5]	@ unaligned
 3548 045a 6960     		str	r1, [r5, #4]	@ unaligned
 3549 045c AA60     		str	r2, [r5, #8]	@ unaligned
 3550 045e EB60     		str	r3, [r5, #12]	@ unaligned
 3551 0460 2068     		ldr	r0, [r4]	@ unaligned
 3552 0462 2861     		str	r0, [r5, #16]	@ unaligned
 3553 0464 2379     		ldrb	r3, [r4, #4]
 3554 0466 2B75     		strb	r3, [r5, #20]
 3555 0468 10E0     		b	.L169
 3556              	.L168:
 722:..\src/command_processing.c ****         else
 723:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 3557              		.loc 1 723 0
 3558 046a 7868     		ldr	r0, [r7, #4]
 3559 046c FFF7FEFF 		bl	strlen
 3560 0470 0346     		mov	r3, r0
 3561 0472 1A46     		mov	r2, r3
 3562 0474 7B68     		ldr	r3, [r7, #4]
 3563 0476 1344     		add	r3, r3, r2
 3564 0478 5C4A     		ldr	r2, .L181+40
 3565 047a 1D46     		mov	r5, r3
 3566 047c 1446     		mov	r4, r2
 3567 047e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3568 0480 2860     		str	r0, [r5]	@ unaligned
 3569 0482 6960     		str	r1, [r5, #4]	@ unaligned
 3570 0484 AA60     		str	r2, [r5, #8]	@ unaligned
 3571 0486 EB60     		str	r3, [r5, #12]	@ unaligned
 3572 0488 2068     		ldr	r0, [r4]	@ unaligned
 3573 048a 2861     		str	r0, [r5, #16]	@ unaligned
 3574              	.L169:
 724:..\src/command_processing.c ****         
 725:..\src/command_processing.c **** 
 726:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 3575              		.loc 1 726 0
 3576 048c 3B6F     		ldr	r3, [r7, #112]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 95


 3577 048e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 3578 0492 1A46     		mov	r2, r3
 3579 0494 3B6F     		ldr	r3, [r7, #112]
 3580 0496 93F83D30 		ldrb	r3, [r3, #61]	@ zero_extendqisi2
 3581 049a 07F10C00 		add	r0, r7, #12
 3582 049e 5449     		ldr	r1, .L181+44
 3583 04a0 FFF7FEFF 		bl	sprintf
 727:..\src/command_processing.c ****         strcat(info_string, str);
 3584              		.loc 1 727 0
 3585 04a4 07F10C03 		add	r3, r7, #12
 3586 04a8 1946     		mov	r1, r3
 3587 04aa 7868     		ldr	r0, [r7, #4]
 3588 04ac FFF7FEFF 		bl	strcat
 728:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 3589              		.loc 1 728 0
 3590 04b0 7868     		ldr	r0, [r7, #4]
 3591 04b2 FFF7FEFF 		bl	strlen
 3592 04b6 0346     		mov	r3, r0
 3593 04b8 1A46     		mov	r2, r3
 3594 04ba 7B68     		ldr	r3, [r7, #4]
 3595 04bc 1344     		add	r3, r3, r2
 3596 04be 484A     		ldr	r2, .L181+28
 3597 04c0 1188     		ldrh	r1, [r2]	@ unaligned
 3598 04c2 9278     		ldrb	r2, [r2, #2]
 3599 04c4 1980     		strh	r1, [r3]	@ unaligned
 3600 04c6 9A70     		strb	r2, [r3, #2]
 729:..\src/command_processing.c **** 
 730:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 3601              		.loc 1 730 0
 3602 04c8 0023     		movs	r3, #0
 3603 04ca 7B67     		str	r3, [r7, #116]
 3604 04cc 20E0     		b	.L170
 3605              	.L171:
 731:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 3606              		.loc 1 731 0 discriminator 3
 3607 04ce 7B6F     		ldr	r3, [r7, #116]
 3608 04d0 591C     		adds	r1, r3, #1
 3609 04d2 484A     		ldr	r2, .L181+48
 3610 04d4 7B6F     		ldr	r3, [r7, #116]
 3611 04d6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3612 04da 07F10C00 		add	r0, r7, #12
 3613 04de 0A46     		mov	r2, r1
 3614 04e0 4549     		ldr	r1, .L181+52
 3615 04e2 FFF7FEFF 		bl	sprintf
 732:..\src/command_processing.c ****                 strcat(info_string, str);
 3616              		.loc 1 732 0 discriminator 3
 3617 04e6 07F10C03 		add	r3, r7, #12
 3618 04ea 1946     		mov	r1, r3
 3619 04ec 7868     		ldr	r0, [r7, #4]
 3620 04ee FFF7FEFF 		bl	strcat
 733:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 3621              		.loc 1 733 0 discriminator 3
 3622 04f2 7868     		ldr	r0, [r7, #4]
 3623 04f4 FFF7FEFF 		bl	strlen
 3624 04f8 0346     		mov	r3, r0
 3625 04fa 1A46     		mov	r2, r3
 3626 04fc 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 96


 3627 04fe 1344     		add	r3, r3, r2
 3628 0500 374A     		ldr	r2, .L181+28
 3629 0502 1188     		ldrh	r1, [r2]	@ unaligned
 3630 0504 9278     		ldrb	r2, [r2, #2]
 3631 0506 1980     		strh	r1, [r3]	@ unaligned
 3632 0508 9A70     		strb	r2, [r3, #2]
 730:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 3633              		.loc 1 730 0 discriminator 3
 3634 050a 7B6F     		ldr	r3, [r7, #116]
 3635 050c 0133     		adds	r3, r3, #1
 3636 050e 7B67     		str	r3, [r7, #116]
 3637              	.L170:
 730:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 3638              		.loc 1 730 0 is_stmt 0 discriminator 1
 3639 0510 7B6F     		ldr	r3, [r7, #116]
 3640 0512 012B     		cmp	r3, #1
 3641 0514 DBDD     		ble	.L171
 734:..\src/command_processing.c ****             }
 735:..\src/command_processing.c ****          
 736:..\src/command_processing.c **** 
 737:..\src/command_processing.c ****         if (MEM_P->MS.master_mode_active)
 3642              		.loc 1 737 0 is_stmt 1
 3643 0516 3B6F     		ldr	r3, [r7, #112]
 3644 0518 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 3645 051c 002B     		cmp	r3, #0
 3646 051e 14D0     		beq	.L172
 738:..\src/command_processing.c ****             strcat(info_string, "Master Mode active: YES\r\n");
 3647              		.loc 1 738 0
 3648 0520 7868     		ldr	r0, [r7, #4]
 3649 0522 FFF7FEFF 		bl	strlen
 3650 0526 0346     		mov	r3, r0
 3651 0528 1A46     		mov	r2, r3
 3652 052a 7B68     		ldr	r3, [r7, #4]
 3653 052c 1344     		add	r3, r3, r2
 3654 052e 334A     		ldr	r2, .L181+56
 3655 0530 1D46     		mov	r5, r3
 3656 0532 1446     		mov	r4, r2
 3657 0534 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3658 0536 2860     		str	r0, [r5]	@ unaligned
 3659 0538 6960     		str	r1, [r5, #4]	@ unaligned
 3660 053a AA60     		str	r2, [r5, #8]	@ unaligned
 3661 053c EB60     		str	r3, [r5, #12]	@ unaligned
 3662 053e 03CC     		ldmia	r4!, {r0, r1}
 3663 0540 2861     		str	r0, [r5, #16]	@ unaligned
 3664 0542 6961     		str	r1, [r5, #20]	@ unaligned
 3665 0544 2388     		ldrh	r3, [r4]	@ unaligned
 3666 0546 2B83     		strh	r3, [r5, #24]	@ unaligned
 3667 0548 13E0     		b	.L173
 3668              	.L172:
 739:..\src/command_processing.c ****         else
 740:..\src/command_processing.c ****             strcat(info_string, "Master Mode active: NO\r\n");
 3669              		.loc 1 740 0
 3670 054a 7868     		ldr	r0, [r7, #4]
 3671 054c FFF7FEFF 		bl	strlen
 3672 0550 0346     		mov	r3, r0
 3673 0552 1A46     		mov	r2, r3
 3674 0554 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 97


 3675 0556 1344     		add	r3, r3, r2
 3676 0558 294A     		ldr	r2, .L181+60
 3677 055a 1D46     		mov	r5, r3
 3678 055c 1446     		mov	r4, r2
 3679 055e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3680 0560 2860     		str	r0, [r5]	@ unaligned
 3681 0562 6960     		str	r1, [r5, #4]	@ unaligned
 3682 0564 AA60     		str	r2, [r5, #8]	@ unaligned
 3683 0566 EB60     		str	r3, [r5, #12]	@ unaligned
 3684 0568 03CC     		ldmia	r4!, {r0, r1}
 3685 056a 2861     		str	r0, [r5, #16]	@ unaligned
 3686 056c 6961     		str	r1, [r5, #20]	@ unaligned
 3687 056e 2378     		ldrb	r3, [r4]
 3688 0570 2B76     		strb	r3, [r5, #24]
 3689              	.L173:
 741:..\src/command_processing.c **** 
 742:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
 3690              		.loc 1 742 0
 3691 0572 3B6F     		ldr	r3, [r7, #112]
 3692 0574 93F84130 		ldrb	r3, [r3, #65]	@ zero_extendqisi2
 3693 0578 1A46     		mov	r2, r3
 3694 057a 07F10C03 		add	r3, r7, #12
 3695 057e 2149     		ldr	r1, .L181+64
 3696 0580 1846     		mov	r0, r3
 3697 0582 FFF7FEFF 		bl	sprintf
 743:..\src/command_processing.c ****         strcat(info_string, str);
 3698              		.loc 1 743 0
 3699 0586 07F10C03 		add	r3, r7, #12
 3700 058a 1946     		mov	r1, r3
 3701 058c 7868     		ldr	r0, [r7, #4]
 3702 058e FFF7FEFF 		bl	strcat
 744:..\src/command_processing.c **** 
 745:..\src/command_processing.c ****         if (MEM_P->FB.airchamber_feedback_active)
 3703              		.loc 1 745 0
 3704 0592 3B6F     		ldr	r3, [r7, #112]
 3705 0594 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 3706 0598 002B     		cmp	r3, #0
 3707 059a 37D0     		beq	.L174
 746:..\src/command_processing.c ****             strcat(info_string, "Airchamber FB active: YES\r\n");
 3708              		.loc 1 746 0
 3709 059c 7868     		ldr	r0, [r7, #4]
 3710 059e FFF7FEFF 		bl	strlen
 3711 05a2 0346     		mov	r3, r0
 3712 05a4 1A46     		mov	r2, r3
 3713 05a6 7B68     		ldr	r3, [r7, #4]
 3714 05a8 1344     		add	r3, r3, r2
 3715 05aa 174A     		ldr	r2, .L181+68
 3716 05ac 1D46     		mov	r5, r3
 3717 05ae 1446     		mov	r4, r2
 3718 05b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3719 05b2 2860     		str	r0, [r5]	@ unaligned
 3720 05b4 6960     		str	r1, [r5, #4]	@ unaligned
 3721 05b6 AA60     		str	r2, [r5, #8]	@ unaligned
 3722 05b8 EB60     		str	r3, [r5, #12]	@ unaligned
 3723 05ba 07CC     		ldmia	r4!, {r0, r1, r2}
 3724 05bc 2861     		str	r0, [r5, #16]	@ unaligned
 3725 05be 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 98


 3726 05c0 AA61     		str	r2, [r5, #24]	@ unaligned
 3727 05c2 3AE0     		b	.L175
 3728              	.L182:
 3729              		.align	2
 3730              	.L181:
 3731 05c4 9C030000 		.word	.LC48
 3732 05c8 CC030000 		.word	.LC49
 3733 05cc EC030000 		.word	.LC50
 3734 05d0 F4030000 		.word	.LC51
 3735 05d4 1C040000 		.word	.LC52
 3736 05d8 2C040000 		.word	.LC53
 3737 05dc 40040000 		.word	.LC54
 3738 05e0 78020000 		.word	.LC34
 3739 05e4 64040000 		.word	.LC55
 3740 05e8 88040000 		.word	.LC56
 3741 05ec A0040000 		.word	.LC57
 3742 05f0 B4040000 		.word	.LC58
 3743 05f4 00000000 		.word	g_adc_meas
 3744 05f8 CC040000 		.word	.LC59
 3745 05fc E0040000 		.word	.LC60
 3746 0600 FC040000 		.word	.LC61
 3747 0604 18050000 		.word	.LC62
 3748 0608 28050000 		.word	.LC63
 3749              	.L174:
 747:..\src/command_processing.c ****         else
 748:..\src/command_processing.c ****             strcat(info_string, "Airchamber FB active: NO\r\n");
 3750              		.loc 1 748 0
 3751 060c 7868     		ldr	r0, [r7, #4]
 3752 060e FFF7FEFF 		bl	strlen
 3753 0612 0346     		mov	r3, r0
 3754 0614 1A46     		mov	r2, r3
 3755 0616 7B68     		ldr	r3, [r7, #4]
 3756 0618 1344     		add	r3, r3, r2
 3757 061a 314A     		ldr	r2, .L183
 3758 061c 1D46     		mov	r5, r3
 3759 061e 1446     		mov	r4, r2
 3760 0620 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3761 0622 2860     		str	r0, [r5]	@ unaligned
 3762 0624 6960     		str	r1, [r5, #4]	@ unaligned
 3763 0626 AA60     		str	r2, [r5, #8]	@ unaligned
 3764 0628 EB60     		str	r3, [r5, #12]	@ unaligned
 3765 062a 03CC     		ldmia	r4!, {r0, r1}
 3766 062c 2861     		str	r0, [r5, #16]	@ unaligned
 3767 062e 6961     		str	r1, [r5, #20]	@ unaligned
 3768 0630 2388     		ldrh	r3, [r4]	@ unaligned
 3769 0632 A278     		ldrb	r2, [r4, #2]
 3770 0634 2B83     		strh	r3, [r5, #24]	@ unaligned
 3771 0636 1346     		mov	r3, r2
 3772 0638 AB76     		strb	r3, [r5, #26]
 3773              	.L175:
 749:..\src/command_processing.c ****             
 750:..\src/command_processing.c ****         if (MEM_P->FB.vibrotactile_feedback_active)
 3774              		.loc 1 750 0
 3775 063a 3B6F     		ldr	r3, [r7, #112]
 3776 063c 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3777 0640 002B     		cmp	r3, #0
 3778 0642 15D0     		beq	.L176
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 99


 751:..\src/command_processing.c ****             strcat(info_string, "Vibrotactile FB active: YES\r\n");
 3779              		.loc 1 751 0
 3780 0644 7868     		ldr	r0, [r7, #4]
 3781 0646 FFF7FEFF 		bl	strlen
 3782 064a 0346     		mov	r3, r0
 3783 064c 1A46     		mov	r2, r3
 3784 064e 7B68     		ldr	r3, [r7, #4]
 3785 0650 1344     		add	r3, r3, r2
 3786 0652 244A     		ldr	r2, .L183+4
 3787 0654 1D46     		mov	r5, r3
 3788 0656 1446     		mov	r4, r2
 3789 0658 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3790 065a 2860     		str	r0, [r5]	@ unaligned
 3791 065c 6960     		str	r1, [r5, #4]	@ unaligned
 3792 065e AA60     		str	r2, [r5, #8]	@ unaligned
 3793 0660 EB60     		str	r3, [r5, #12]	@ unaligned
 3794 0662 07CC     		ldmia	r4!, {r0, r1, r2}
 3795 0664 2861     		str	r0, [r5, #16]	@ unaligned
 3796 0666 6961     		str	r1, [r5, #20]	@ unaligned
 3797 0668 AA61     		str	r2, [r5, #24]	@ unaligned
 3798 066a 2388     		ldrh	r3, [r4]	@ unaligned
 3799 066c AB83     		strh	r3, [r5, #28]	@ unaligned
 3800 066e 14E0     		b	.L177
 3801              	.L176:
 752:..\src/command_processing.c ****         else
 753:..\src/command_processing.c ****             strcat(info_string, "Vibrotactile FB active: NO\r\n");
 3802              		.loc 1 753 0
 3803 0670 7868     		ldr	r0, [r7, #4]
 3804 0672 FFF7FEFF 		bl	strlen
 3805 0676 0346     		mov	r3, r0
 3806 0678 1A46     		mov	r2, r3
 3807 067a 7B68     		ldr	r3, [r7, #4]
 3808 067c 1344     		add	r3, r3, r2
 3809 067e 1A4A     		ldr	r2, .L183+8
 3810 0680 1D46     		mov	r5, r3
 3811 0682 1446     		mov	r4, r2
 3812 0684 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3813 0686 2860     		str	r0, [r5]	@ unaligned
 3814 0688 6960     		str	r1, [r5, #4]	@ unaligned
 3815 068a AA60     		str	r2, [r5, #8]	@ unaligned
 3816 068c EB60     		str	r3, [r5, #12]	@ unaligned
 3817 068e 07CC     		ldmia	r4!, {r0, r1, r2}
 3818 0690 2861     		str	r0, [r5, #16]	@ unaligned
 3819 0692 6961     		str	r1, [r5, #20]	@ unaligned
 3820 0694 AA61     		str	r2, [r5, #24]	@ unaligned
 3821 0696 2378     		ldrb	r3, [r4]
 3822 0698 2B77     		strb	r3, [r5, #28]
 3823              	.L177:
 754:..\src/command_processing.c **** 
 755:..\src/command_processing.c **** 
 756:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 3824              		.loc 1 756 0
 3825 069a 144B     		ldr	r3, .L183+12
 3826 069c 1B88     		ldrh	r3, [r3]
 3827 069e 1A46     		mov	r2, r3
 3828 06a0 134B     		ldr	r3, .L183+16
 3829 06a2 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 100


 3830 06a4 D21A     		subs	r2, r2, r3
 3831 06a6 07F10C03 		add	r3, r7, #12
 3832 06aa 1249     		ldr	r1, .L183+20
 3833 06ac 1846     		mov	r0, r3
 3834 06ae FFF7FEFF 		bl	sprintf
 757:..\src/command_processing.c ****         strcat(info_string, str);
 3835              		.loc 1 757 0
 3836 06b2 07F10C03 		add	r3, r7, #12
 3837 06b6 1946     		mov	r1, r3
 3838 06b8 7868     		ldr	r0, [r7, #4]
 3839 06ba FFF7FEFF 		bl	strcat
 758:..\src/command_processing.c ****   
 759:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 3840              		.loc 1 759 0
 3841 06be 7868     		ldr	r0, [r7, #4]
 3842 06c0 FFF7FEFF 		bl	strlen
 3843 06c4 0346     		mov	r3, r0
 3844 06c6 1A46     		mov	r2, r3
 3845 06c8 7B68     		ldr	r3, [r7, #4]
 3846 06ca 1344     		add	r3, r3, r2
 3847 06cc 0A4A     		ldr	r2, .L183+24
 3848 06ce 1188     		ldrh	r1, [r2]	@ unaligned
 3849 06d0 9278     		ldrb	r2, [r2, #2]
 3850 06d2 1980     		strh	r1, [r3]	@ unaligned
 3851 06d4 9A70     		strb	r2, [r3, #2]
 3852              	.L178:
 3853              	.LBE25:
 760:..\src/command_processing.c ****     }
 761:..\src/command_processing.c **** }
 3854              		.loc 1 761 0
 3855 06d6 00BF     		nop
 3856 06d8 7C37     		adds	r7, r7, #124
 3857              		.cfi_def_cfa_offset 20
 3858 06da BD46     		mov	sp, r7
 3859              		.cfi_def_cfa_register 13
 3860              		@ sp needed
 3861 06dc F0BD     		pop	{r4, r5, r6, r7, pc}
 3862              	.L184:
 3863 06de 00BF     		.align	2
 3864              	.L183:
 3865 06e0 44050000 		.word	.LC64
 3866 06e4 60050000 		.word	.LC65
 3867 06e8 80050000 		.word	.LC66
 3868 06ec 00000000 		.word	timer_value0
 3869 06f0 00000000 		.word	timer_value
 3870 06f4 A0050000 		.word	.LC67
 3871 06f8 BC050000 		.word	.LC68
 3872              		.cfi_endproc
 3873              	.LFE73:
 3874              		.size	prepare_generic_info, .-prepare_generic_info
 3875              		.section	.text.prepare_counter_info,"ax",%progbits
 3876              		.align	2
 3877              		.global	prepare_counter_info
 3878              		.thumb
 3879              		.thumb_func
 3880              		.type	prepare_counter_info, %function
 3881              	prepare_counter_info:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 101


 3882              	.LFB74:
 762:..\src/command_processing.c **** 
 763:..\src/command_processing.c **** //==============================================================================
 764:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
 765:..\src/command_processing.c **** //==============================================================================
 766:..\src/command_processing.c **** 
 767:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
 768:..\src/command_processing.c **** {
 3883              		.loc 1 768 0
 3884              		.cfi_startproc
 3885              		@ args = 0, pretend = 0, frame = 8
 3886              		@ frame_needed = 1, uses_anonymous_args = 0
 3887              		@ link register save eliminated.
 3888 0000 80B4     		push	{r7}
 3889              		.cfi_def_cfa_offset 4
 3890              		.cfi_offset 7, -4
 3891 0002 83B0     		sub	sp, sp, #12
 3892              		.cfi_def_cfa_offset 16
 3893 0004 00AF     		add	r7, sp, #0
 3894              		.cfi_def_cfa_register 7
 3895 0006 7860     		str	r0, [r7, #4]
 769:..\src/command_processing.c **** }
 3896              		.loc 1 769 0
 3897 0008 00BF     		nop
 3898 000a 0C37     		adds	r7, r7, #12
 3899              		.cfi_def_cfa_offset 4
 3900 000c BD46     		mov	sp, r7
 3901              		.cfi_def_cfa_register 13
 3902              		@ sp needed
 3903 000e 80BC     		pop	{r7}
 3904              		.cfi_restore 7
 3905              		.cfi_def_cfa_offset 0
 3906 0010 7047     		bx	lr
 3907              		.cfi_endproc
 3908              	.LFE74:
 3909              		.size	prepare_counter_info, .-prepare_counter_info
 3910 0012 00BF     		.section	.text.prepare_R01_info,"ax",%progbits
 3911              		.align	2
 3912              		.global	prepare_R01_info
 3913              		.thumb
 3914              		.thumb_func
 3915              		.type	prepare_R01_info, %function
 3916              	prepare_R01_info:
 3917              	.LFB75:
 770:..\src/command_processing.c **** 
 771:..\src/command_processing.c **** //==============================================================================
 772:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
 773:..\src/command_processing.c **** //==============================================================================
 774:..\src/command_processing.c **** 
 775:..\src/command_processing.c **** void prepare_R01_info(char *info_string)
 776:..\src/command_processing.c **** {
 3918              		.loc 1 776 0
 3919              		.cfi_startproc
 3920              		@ args = 0, pretend = 0, frame = 8
 3921              		@ frame_needed = 1, uses_anonymous_args = 0
 3922              		@ link register save eliminated.
 3923 0000 80B4     		push	{r7}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 102


 3924              		.cfi_def_cfa_offset 4
 3925              		.cfi_offset 7, -4
 3926 0002 83B0     		sub	sp, sp, #12
 3927              		.cfi_def_cfa_offset 16
 3928 0004 00AF     		add	r7, sp, #0
 3929              		.cfi_def_cfa_register 7
 3930 0006 7860     		str	r0, [r7, #4]
 777:..\src/command_processing.c **** }
 3931              		.loc 1 777 0
 3932 0008 00BF     		nop
 3933 000a 0C37     		adds	r7, r7, #12
 3934              		.cfi_def_cfa_offset 4
 3935 000c BD46     		mov	sp, r7
 3936              		.cfi_def_cfa_register 13
 3937              		@ sp needed
 3938 000e 80BC     		pop	{r7}
 3939              		.cfi_restore 7
 3940              		.cfi_def_cfa_offset 0
 3941 0010 7047     		bx	lr
 3942              		.cfi_endproc
 3943              	.LFE75:
 3944              		.size	prepare_R01_info, .-prepare_R01_info
 3945 0012 00BF     		.section	.text.prepare_SD_param_info,"ax",%progbits
 3946              		.align	2
 3947              		.global	prepare_SD_param_info
 3948              		.thumb
 3949              		.thumb_func
 3950              		.type	prepare_SD_param_info, %function
 3951              	prepare_SD_param_info:
 3952              	.LFB76:
 778:..\src/command_processing.c **** 
 779:..\src/command_processing.c **** //==============================================================================
 780:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
 781:..\src/command_processing.c **** //==============================================================================
 782:..\src/command_processing.c **** 
 783:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
 784:..\src/command_processing.c **** {
 3953              		.loc 1 784 0
 3954              		.cfi_startproc
 3955              		@ args = 0, pretend = 0, frame = 8
 3956              		@ frame_needed = 1, uses_anonymous_args = 0
 3957              		@ link register save eliminated.
 3958 0000 80B4     		push	{r7}
 3959              		.cfi_def_cfa_offset 4
 3960              		.cfi_offset 7, -4
 3961 0002 83B0     		sub	sp, sp, #12
 3962              		.cfi_def_cfa_offset 16
 3963 0004 00AF     		add	r7, sp, #0
 3964              		.cfi_def_cfa_register 7
 3965 0006 7860     		str	r0, [r7, #4]
 785:..\src/command_processing.c **** }
 3966              		.loc 1 785 0
 3967 0008 00BF     		nop
 3968 000a 0C37     		adds	r7, r7, #12
 3969              		.cfi_def_cfa_offset 4
 3970 000c BD46     		mov	sp, r7
 3971              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 103


 3972              		@ sp needed
 3973 000e 80BC     		pop	{r7}
 3974              		.cfi_restore 7
 3975              		.cfi_def_cfa_offset 0
 3976 0010 7047     		bx	lr
 3977              		.cfi_endproc
 3978              	.LFE76:
 3979              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 3980 0012 00BF     		.section	.text.prepare_SD_legend,"ax",%progbits
 3981              		.align	2
 3982              		.global	prepare_SD_legend
 3983              		.thumb
 3984              		.thumb_func
 3985              		.type	prepare_SD_legend, %function
 3986              	prepare_SD_legend:
 3987              	.LFB77:
 786:..\src/command_processing.c **** 
 787:..\src/command_processing.c **** 
 788:..\src/command_processing.c **** //==============================================================================
 789:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
 790:..\src/command_processing.c **** //==============================================================================
 791:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
 792:..\src/command_processing.c **** {
 3988              		.loc 1 792 0
 3989              		.cfi_startproc
 3990              		@ args = 0, pretend = 0, frame = 8
 3991              		@ frame_needed = 1, uses_anonymous_args = 0
 3992              		@ link register save eliminated.
 3993 0000 80B4     		push	{r7}
 3994              		.cfi_def_cfa_offset 4
 3995              		.cfi_offset 7, -4
 3996 0002 83B0     		sub	sp, sp, #12
 3997              		.cfi_def_cfa_offset 16
 3998 0004 00AF     		add	r7, sp, #0
 3999              		.cfi_def_cfa_register 7
 4000 0006 7860     		str	r0, [r7, #4]
 793:..\src/command_processing.c **** }
 4001              		.loc 1 793 0
 4002 0008 00BF     		nop
 4003 000a 0C37     		adds	r7, r7, #12
 4004              		.cfi_def_cfa_offset 4
 4005 000c BD46     		mov	sp, r7
 4006              		.cfi_def_cfa_register 13
 4007              		@ sp needed
 4008 000e 80BC     		pop	{r7}
 4009              		.cfi_restore 7
 4010              		.cfi_def_cfa_offset 0
 4011 0010 7047     		bx	lr
 4012              		.cfi_endproc
 4013              	.LFE77:
 4014              		.size	prepare_SD_legend, .-prepare_SD_legend
 4015 0012 00BF     		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 4016              		.align	2
 4017              		.global	prepare_SD_EMG_History_legend
 4018              		.thumb
 4019              		.thumb_func
 4020              		.type	prepare_SD_EMG_History_legend, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 104


 4021              	prepare_SD_EMG_History_legend:
 4022              	.LFB78:
 794:..\src/command_processing.c **** 
 795:..\src/command_processing.c **** //==============================================================================
 796:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
 797:..\src/command_processing.c **** //==============================================================================
 798:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
 799:..\src/command_processing.c **** {
 4023              		.loc 1 799 0
 4024              		.cfi_startproc
 4025              		@ args = 0, pretend = 0, frame = 8
 4026              		@ frame_needed = 1, uses_anonymous_args = 0
 4027              		@ link register save eliminated.
 4028 0000 80B4     		push	{r7}
 4029              		.cfi_def_cfa_offset 4
 4030              		.cfi_offset 7, -4
 4031 0002 83B0     		sub	sp, sp, #12
 4032              		.cfi_def_cfa_offset 16
 4033 0004 00AF     		add	r7, sp, #0
 4034              		.cfi_def_cfa_register 7
 4035 0006 7860     		str	r0, [r7, #4]
 800:..\src/command_processing.c ****     
 801:..\src/command_processing.c **** }
 4036              		.loc 1 801 0
 4037 0008 00BF     		nop
 4038 000a 0C37     		adds	r7, r7, #12
 4039              		.cfi_def_cfa_offset 4
 4040 000c BD46     		mov	sp, r7
 4041              		.cfi_def_cfa_register 13
 4042              		@ sp needed
 4043 000e 80BC     		pop	{r7}
 4044              		.cfi_restore 7
 4045              		.cfi_def_cfa_offset 0
 4046 0010 7047     		bx	lr
 4047              		.cfi_endproc
 4048              	.LFE78:
 4049              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 4050 0012 00BF     		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 4051              		.align	2
 4052              		.global	prepare_SD_EMG_history
 4053              		.thumb
 4054              		.thumb_func
 4055              		.type	prepare_SD_EMG_history, %function
 4056              	prepare_SD_EMG_history:
 4057              	.LFB79:
 802:..\src/command_processing.c **** 
 803:..\src/command_processing.c **** //==============================================================================
 804:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
 805:..\src/command_processing.c **** //==============================================================================
 806:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
 807:..\src/command_processing.c **** {
 4058              		.loc 1 807 0
 4059              		.cfi_startproc
 4060              		@ args = 0, pretend = 0, frame = 8
 4061              		@ frame_needed = 1, uses_anonymous_args = 0
 4062              		@ link register save eliminated.
 4063 0000 80B4     		push	{r7}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 105


 4064              		.cfi_def_cfa_offset 4
 4065              		.cfi_offset 7, -4
 4066 0002 83B0     		sub	sp, sp, #12
 4067              		.cfi_def_cfa_offset 16
 4068 0004 00AF     		add	r7, sp, #0
 4069              		.cfi_def_cfa_register 7
 4070 0006 7860     		str	r0, [r7, #4]
 808:..\src/command_processing.c ****         
 809:..\src/command_processing.c **** }
 4071              		.loc 1 809 0
 4072 0008 00BF     		nop
 4073 000a 0C37     		adds	r7, r7, #12
 4074              		.cfi_def_cfa_offset 4
 4075 000c BD46     		mov	sp, r7
 4076              		.cfi_def_cfa_register 13
 4077              		@ sp needed
 4078 000e 80BC     		pop	{r7}
 4079              		.cfi_restore 7
 4080              		.cfi_def_cfa_offset 0
 4081 0010 7047     		bx	lr
 4082              		.cfi_endproc
 4083              	.LFE79:
 4084              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 4085 0012 00BF     		.section	.text.IMU_reading_info,"ax",%progbits
 4086              		.align	2
 4087              		.global	IMU_reading_info
 4088              		.thumb
 4089              		.thumb_func
 4090              		.type	IMU_reading_info, %function
 4091              	IMU_reading_info:
 4092              	.LFB80:
 810:..\src/command_processing.c **** 
 811:..\src/command_processing.c **** //==============================================================================
 812:..\src/command_processing.c **** //                                                              IMU READING INFO
 813:..\src/command_processing.c **** //==============================================================================
 814:..\src/command_processing.c **** 
 815:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
 816:..\src/command_processing.c **** {
 4093              		.loc 1 816 0
 4094              		.cfi_startproc
 4095              		@ args = 0, pretend = 0, frame = 8
 4096              		@ frame_needed = 1, uses_anonymous_args = 0
 4097              		@ link register save eliminated.
 4098 0000 80B4     		push	{r7}
 4099              		.cfi_def_cfa_offset 4
 4100              		.cfi_offset 7, -4
 4101 0002 83B0     		sub	sp, sp, #12
 4102              		.cfi_def_cfa_offset 16
 4103 0004 00AF     		add	r7, sp, #0
 4104              		.cfi_def_cfa_register 7
 4105 0006 7860     		str	r0, [r7, #4]
 817:..\src/command_processing.c **** }
 4106              		.loc 1 817 0
 4107 0008 00BF     		nop
 4108 000a 0C37     		adds	r7, r7, #12
 4109              		.cfi_def_cfa_offset 4
 4110 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 106


 4111              		.cfi_def_cfa_register 13
 4112              		@ sp needed
 4113 000e 80BC     		pop	{r7}
 4114              		.cfi_restore 7
 4115              		.cfi_def_cfa_offset 0
 4116 0010 7047     		bx	lr
 4117              		.cfi_endproc
 4118              	.LFE80:
 4119              		.size	IMU_reading_info, .-IMU_reading_info
 4120 0012 00BF     		.section	.text.commWrite_old_id,"ax",%progbits
 4121              		.align	2
 4122              		.global	commWrite_old_id
 4123              		.thumb
 4124              		.thumb_func
 4125              		.type	commWrite_old_id, %function
 4126              	commWrite_old_id:
 4127              	.LFB81:
 818:..\src/command_processing.c **** 
 819:..\src/command_processing.c **** //==============================================================================
 820:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
 821:..\src/command_processing.c **** //==============================================================================
 822:..\src/command_processing.c **** 
 823:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_length, uint8 old_id)
 824:..\src/command_processing.c **** {
 4128              		.loc 1 824 0
 4129              		.cfi_startproc
 4130              		@ args = 0, pretend = 0, frame = 16
 4131              		@ frame_needed = 1, uses_anonymous_args = 0
 4132 0000 80B5     		push	{r7, lr}
 4133              		.cfi_def_cfa_offset 8
 4134              		.cfi_offset 7, -8
 4135              		.cfi_offset 14, -4
 4136 0002 84B0     		sub	sp, sp, #16
 4137              		.cfi_def_cfa_offset 24
 4138 0004 00AF     		add	r7, sp, #0
 4139              		.cfi_def_cfa_register 7
 4140 0006 7860     		str	r0, [r7, #4]
 4141 0008 0B46     		mov	r3, r1
 4142 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 4143 000c 1346     		mov	r3, r2
 4144 000e 7B70     		strb	r3, [r7, #1]
 825:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
 826:..\src/command_processing.c **** 
 827:..\src/command_processing.c ****     // frame - start
 828:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4145              		.loc 1 828 0
 4146 0010 3A20     		movs	r0, #58
 4147 0012 FFF7FEFF 		bl	UART_RS485_PutChar
 829:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4148              		.loc 1 829 0
 4149 0016 3A20     		movs	r0, #58
 4150 0018 FFF7FEFF 		bl	UART_RS485_PutChar
 830:..\src/command_processing.c ****     // frame - ID
 831:..\src/command_processing.c ****     //if(old_id)
 832:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 4151              		.loc 1 832 0
 4152 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 107


 4153 001e 1846     		mov	r0, r3
 4154 0020 FFF7FEFF 		bl	UART_RS485_PutChar
 833:..\src/command_processing.c ****     //else
 834:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
 835:..\src/command_processing.c ****         
 836:..\src/command_processing.c ****     // frame - length
 837:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 4155              		.loc 1 837 0
 4156 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4157 0026 DBB2     		uxtb	r3, r3
 4158 0028 1846     		mov	r0, r3
 4159 002a FFF7FEFF 		bl	UART_RS485_PutChar
 838:..\src/command_processing.c ****     // frame - packet data
 839:..\src/command_processing.c ****     for(index = 0; index < packet_length; ++index) {
 4160              		.loc 1 839 0
 4161 002e 0023     		movs	r3, #0
 4162 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 4163 0032 09E0     		b	.L193
 4164              	.L194:
 840:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4165              		.loc 1 840 0 discriminator 3
 4166 0034 FB89     		ldrh	r3, [r7, #14]
 4167 0036 7A68     		ldr	r2, [r7, #4]
 4168 0038 1344     		add	r3, r3, r2
 4169 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4170 003c 1846     		mov	r0, r3
 4171 003e FFF7FEFF 		bl	UART_RS485_PutChar
 839:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4172              		.loc 1 839 0 discriminator 3
 4173 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4174 0044 0133     		adds	r3, r3, #1
 4175 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 4176              	.L193:
 839:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4177              		.loc 1 839 0 is_stmt 0 discriminator 1
 4178 0048 FA89     		ldrh	r2, [r7, #14]
 4179 004a 7B88     		ldrh	r3, [r7, #2]
 4180 004c 9A42     		cmp	r2, r3
 4181 004e F1D3     		bcc	.L194
 841:..\src/command_processing.c ****     }
 842:..\src/command_processing.c **** 
 843:..\src/command_processing.c ****     index = 0;
 4182              		.loc 1 843 0 is_stmt 1
 4183 0050 0023     		movs	r3, #0
 4184 0052 FB81     		strh	r3, [r7, #14]	@ movhi
 844:..\src/command_processing.c **** 
 845:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 4185              		.loc 1 845 0
 4186 0054 00BF     		nop
 4187              	.L196:
 4188              		.loc 1 845 0 is_stmt 0 discriminator 2
 4189 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 4190 005a 0346     		mov	r3, r0
 4191 005c 03F00103 		and	r3, r3, #1
 4192 0060 002B     		cmp	r3, #0
 4193 0062 05D1     		bne	.L195
 4194              		.loc 1 845 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 108


 4195 0064 FB89     		ldrh	r3, [r7, #14]
 4196 0066 5A1C     		adds	r2, r3, #1
 4197 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 4198 006a B3F57A7F 		cmp	r3, #1000
 4199 006e F2D9     		bls	.L196
 4200              	.L195:
 846:..\src/command_processing.c **** 
 847:..\src/command_processing.c ****     RS485_CTS_Write(1);
 4201              		.loc 1 847 0 is_stmt 1
 4202 0070 0120     		movs	r0, #1
 4203 0072 FFF7FEFF 		bl	RS485_CTS_Write
 848:..\src/command_processing.c ****     RS485_CTS_Write(0);
 4204              		.loc 1 848 0
 4205 0076 0020     		movs	r0, #0
 4206 0078 FFF7FEFF 		bl	RS485_CTS_Write
 849:..\src/command_processing.c **** }
 4207              		.loc 1 849 0
 4208 007c 00BF     		nop
 4209 007e 1037     		adds	r7, r7, #16
 4210              		.cfi_def_cfa_offset 8
 4211 0080 BD46     		mov	sp, r7
 4212              		.cfi_def_cfa_register 13
 4213              		@ sp needed
 4214 0082 80BD     		pop	{r7, pc}
 4215              		.cfi_endproc
 4216              	.LFE81:
 4217              		.size	commWrite_old_id, .-commWrite_old_id
 4218              		.section	.text.commWrite,"ax",%progbits
 4219              		.align	2
 4220              		.global	commWrite
 4221              		.thumb
 4222              		.thumb_func
 4223              		.type	commWrite, %function
 4224              	commWrite:
 4225              	.LFB82:
 850:..\src/command_processing.c **** 
 851:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_length)
 852:..\src/command_processing.c **** {
 4226              		.loc 1 852 0
 4227              		.cfi_startproc
 4228              		@ args = 0, pretend = 0, frame = 16
 4229              		@ frame_needed = 1, uses_anonymous_args = 0
 4230 0000 80B5     		push	{r7, lr}
 4231              		.cfi_def_cfa_offset 8
 4232              		.cfi_offset 7, -8
 4233              		.cfi_offset 14, -4
 4234 0002 84B0     		sub	sp, sp, #16
 4235              		.cfi_def_cfa_offset 24
 4236 0004 00AF     		add	r7, sp, #0
 4237              		.cfi_def_cfa_register 7
 4238 0006 7860     		str	r0, [r7, #4]
 4239 0008 0B46     		mov	r3, r1
 4240 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 853:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
 854:..\src/command_processing.c **** 
 855:..\src/command_processing.c ****     // frame - start
 856:..\src/command_processing.c ****     UART_RS485_PutChar(':');
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 109


 4241              		.loc 1 856 0
 4242 000c 3A20     		movs	r0, #58
 4243 000e FFF7FEFF 		bl	UART_RS485_PutChar
 857:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4244              		.loc 1 857 0
 4245 0012 3A20     		movs	r0, #58
 4246 0014 FFF7FEFF 		bl	UART_RS485_PutChar
 858:..\src/command_processing.c ****     // frame - ID
 859:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 4247              		.loc 1 859 0
 4248 0018 1A4B     		ldr	r3, .L202
 4249 001a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 4250 001c 1846     		mov	r0, r3
 4251 001e FFF7FEFF 		bl	UART_RS485_PutChar
 860:..\src/command_processing.c ****     // frame - length
 861:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 4252              		.loc 1 861 0
 4253 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4254 0024 DBB2     		uxtb	r3, r3
 4255 0026 1846     		mov	r0, r3
 4256 0028 FFF7FEFF 		bl	UART_RS485_PutChar
 862:..\src/command_processing.c ****     // frame - packet data
 863:..\src/command_processing.c ****     for(index = 0; index < packet_length; ++index) {
 4257              		.loc 1 863 0
 4258 002c 0023     		movs	r3, #0
 4259 002e FB81     		strh	r3, [r7, #14]	@ movhi
 4260 0030 09E0     		b	.L198
 4261              	.L199:
 864:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4262              		.loc 1 864 0 discriminator 3
 4263 0032 FB89     		ldrh	r3, [r7, #14]
 4264 0034 7A68     		ldr	r2, [r7, #4]
 4265 0036 1344     		add	r3, r3, r2
 4266 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4267 003a 1846     		mov	r0, r3
 4268 003c FFF7FEFF 		bl	UART_RS485_PutChar
 863:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4269              		.loc 1 863 0 discriminator 3
 4270 0040 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4271 0042 0133     		adds	r3, r3, #1
 4272 0044 FB81     		strh	r3, [r7, #14]	@ movhi
 4273              	.L198:
 863:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4274              		.loc 1 863 0 is_stmt 0 discriminator 1
 4275 0046 FA89     		ldrh	r2, [r7, #14]
 4276 0048 7B88     		ldrh	r3, [r7, #2]
 4277 004a 9A42     		cmp	r2, r3
 4278 004c F1D3     		bcc	.L199
 865:..\src/command_processing.c ****     }
 866:..\src/command_processing.c **** 
 867:..\src/command_processing.c ****     index = 0;
 4279              		.loc 1 867 0 is_stmt 1
 4280 004e 0023     		movs	r3, #0
 4281 0050 FB81     		strh	r3, [r7, #14]	@ movhi
 868:..\src/command_processing.c **** 
 869:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 4282              		.loc 1 869 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 110


 4283 0052 00BF     		nop
 4284              	.L201:
 4285              		.loc 1 869 0 is_stmt 0 discriminator 2
 4286 0054 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 4287 0058 0346     		mov	r3, r0
 4288 005a 03F00103 		and	r3, r3, #1
 4289 005e 002B     		cmp	r3, #0
 4290 0060 05D1     		bne	.L200
 4291              		.loc 1 869 0 discriminator 1
 4292 0062 FB89     		ldrh	r3, [r7, #14]
 4293 0064 5A1C     		adds	r2, r3, #1
 4294 0066 FA81     		strh	r2, [r7, #14]	@ movhi
 4295 0068 B3F57A7F 		cmp	r3, #1000
 4296 006c F2D9     		bls	.L201
 4297              	.L200:
 870:..\src/command_processing.c **** 
 871:..\src/command_processing.c ****     RS485_CTS_Write(1);
 4298              		.loc 1 871 0 is_stmt 1
 4299 006e 0120     		movs	r0, #1
 4300 0070 FFF7FEFF 		bl	RS485_CTS_Write
 872:..\src/command_processing.c ****     RS485_CTS_Write(0);
 4301              		.loc 1 872 0
 4302 0074 0020     		movs	r0, #0
 4303 0076 FFF7FEFF 		bl	RS485_CTS_Write
 873:..\src/command_processing.c **** }
 4304              		.loc 1 873 0
 4305 007a 00BF     		nop
 4306 007c 1037     		adds	r7, r7, #16
 4307              		.cfi_def_cfa_offset 8
 4308 007e BD46     		mov	sp, r7
 4309              		.cfi_def_cfa_register 13
 4310              		@ sp needed
 4311 0080 80BD     		pop	{r7, pc}
 4312              	.L203:
 4313 0082 00BF     		.align	2
 4314              	.L202:
 4315 0084 00000000 		.word	g_mem
 4316              		.cfi_endproc
 4317              	.LFE82:
 4318              		.size	commWrite, .-commWrite
 4319              		.section	.text.commWriteID,"ax",%progbits
 4320              		.align	2
 4321              		.global	commWriteID
 4322              		.thumb
 4323              		.thumb_func
 4324              		.type	commWriteID, %function
 4325              	commWriteID:
 4326              	.LFB83:
 874:..\src/command_processing.c **** 
 875:..\src/command_processing.c **** 
 876:..\src/command_processing.c **** //==============================================================================
 877:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
 878:..\src/command_processing.c **** //==============================================================================
 879:..\src/command_processing.c **** 
 880:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_length, uint8 id)
 881:..\src/command_processing.c **** {
 4327              		.loc 1 881 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 111


 4328              		.cfi_startproc
 4329              		@ args = 0, pretend = 0, frame = 8
 4330              		@ frame_needed = 1, uses_anonymous_args = 0
 4331 0000 80B5     		push	{r7, lr}
 4332              		.cfi_def_cfa_offset 8
 4333              		.cfi_offset 7, -8
 4334              		.cfi_offset 14, -4
 4335 0002 82B0     		sub	sp, sp, #8
 4336              		.cfi_def_cfa_offset 16
 4337 0004 00AF     		add	r7, sp, #0
 4338              		.cfi_def_cfa_register 7
 4339 0006 7860     		str	r0, [r7, #4]
 4340 0008 0B46     		mov	r3, r1
 4341 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 4342 000c 1346     		mov	r3, r2
 4343 000e 7B70     		strb	r3, [r7, #1]
 882:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
 883:..\src/command_processing.c **** 
 884:..\src/command_processing.c ****     // frame - start
 885:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4344              		.loc 1 885 0
 4345 0010 3A20     		movs	r0, #58
 4346 0012 FFF7FEFF 		bl	UART_RS485_PutChar
 886:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4347              		.loc 1 886 0
 4348 0016 3A20     		movs	r0, #58
 4349 0018 FFF7FEFF 		bl	UART_RS485_PutChar
 887:..\src/command_processing.c ****     // frame - ID
 888:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 4350              		.loc 1 888 0
 4351 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4352 001e 1846     		mov	r0, r3
 4353 0020 FFF7FEFF 		bl	UART_RS485_PutChar
 889:..\src/command_processing.c ****     // frame - length
 890:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 4354              		.loc 1 890 0
 4355 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4356 0026 DBB2     		uxtb	r3, r3
 4357 0028 1846     		mov	r0, r3
 4358 002a FFF7FEFF 		bl	UART_RS485_PutChar
 891:..\src/command_processing.c ****     // frame - packet data
 892:..\src/command_processing.c ****     for(i = 0; i < packet_length; ++i) {
 4359              		.loc 1 892 0
 4360 002e 1B4B     		ldr	r3, .L209
 4361 0030 0022     		movs	r2, #0
 4362 0032 1A80     		strh	r2, [r3]	@ movhi
 4363 0034 0EE0     		b	.L205
 4364              	.L206:
 893:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 4365              		.loc 1 893 0 discriminator 3
 4366 0036 194B     		ldr	r3, .L209
 4367 0038 1B88     		ldrh	r3, [r3]
 4368 003a 1A46     		mov	r2, r3
 4369 003c 7B68     		ldr	r3, [r7, #4]
 4370 003e 1344     		add	r3, r3, r2
 4371 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4372 0042 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 112


 4373 0044 FFF7FEFF 		bl	UART_RS485_PutChar
 892:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 4374              		.loc 1 892 0 discriminator 3
 4375 0048 144B     		ldr	r3, .L209
 4376 004a 1B88     		ldrh	r3, [r3]
 4377 004c 0133     		adds	r3, r3, #1
 4378 004e 9AB2     		uxth	r2, r3
 4379 0050 124B     		ldr	r3, .L209
 4380 0052 1A80     		strh	r2, [r3]	@ movhi
 4381              	.L205:
 892:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 4382              		.loc 1 892 0 is_stmt 0 discriminator 1
 4383 0054 114B     		ldr	r3, .L209
 4384 0056 1B88     		ldrh	r3, [r3]
 4385 0058 7A88     		ldrh	r2, [r7, #2]
 4386 005a 9A42     		cmp	r2, r3
 4387 005c EBD8     		bhi	.L206
 894:..\src/command_processing.c ****     }
 895:..\src/command_processing.c **** 
 896:..\src/command_processing.c ****     i = 0;
 4388              		.loc 1 896 0 is_stmt 1
 4389 005e 0F4B     		ldr	r3, .L209
 4390 0060 0022     		movs	r2, #0
 4391 0062 1A80     		strh	r2, [r3]	@ movhi
 897:..\src/command_processing.c **** 
 898:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 4392              		.loc 1 898 0
 4393 0064 00BF     		nop
 4394              	.L208:
 4395              		.loc 1 898 0 is_stmt 0 discriminator 2
 4396 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 4397 006a 0346     		mov	r3, r0
 4398 006c 03F00103 		and	r3, r3, #1
 4399 0070 002B     		cmp	r3, #0
 4400 0072 08D1     		bne	.L207
 4401              		.loc 1 898 0 discriminator 1
 4402 0074 094B     		ldr	r3, .L209
 4403 0076 1B88     		ldrh	r3, [r3]
 4404 0078 5A1C     		adds	r2, r3, #1
 4405 007a 91B2     		uxth	r1, r2
 4406 007c 074A     		ldr	r2, .L209
 4407 007e 1180     		strh	r1, [r2]	@ movhi
 4408 0080 B3F57A7F 		cmp	r3, #1000
 4409 0084 EFD9     		bls	.L208
 4410              	.L207:
 899:..\src/command_processing.c ****     
 900:..\src/command_processing.c ****     RS485_CTS_Write(1);
 4411              		.loc 1 900 0 is_stmt 1
 4412 0086 0120     		movs	r0, #1
 4413 0088 FFF7FEFF 		bl	RS485_CTS_Write
 901:..\src/command_processing.c ****     RS485_CTS_Write(0);
 4414              		.loc 1 901 0
 4415 008c 0020     		movs	r0, #0
 4416 008e FFF7FEFF 		bl	RS485_CTS_Write
 902:..\src/command_processing.c **** }
 4417              		.loc 1 902 0
 4418 0092 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 113


 4419 0094 0837     		adds	r7, r7, #8
 4420              		.cfi_def_cfa_offset 8
 4421 0096 BD46     		mov	sp, r7
 4422              		.cfi_def_cfa_register 13
 4423              		@ sp needed
 4424 0098 80BD     		pop	{r7, pc}
 4425              	.L210:
 4426 009a 00BF     		.align	2
 4427              	.L209:
 4428 009c 00000000 		.word	i.9982
 4429              		.cfi_endproc
 4430              	.LFE83:
 4431              		.size	commWriteID, .-commWriteID
 4432              		.section	.text.LCRChecksum,"ax",%progbits
 4433              		.align	2
 4434              		.global	LCRChecksum
 4435              		.thumb
 4436              		.thumb_func
 4437              		.type	LCRChecksum, %function
 4438              	LCRChecksum:
 4439              	.LFB84:
 903:..\src/command_processing.c **** 
 904:..\src/command_processing.c **** //==============================================================================
 905:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
 906:..\src/command_processing.c **** //==============================================================================
 907:..\src/command_processing.c **** 
 908:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
 909:..\src/command_processing.c **** 
 910:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 4440              		.loc 1 910 0
 4441              		.cfi_startproc
 4442              		@ args = 0, pretend = 0, frame = 16
 4443              		@ frame_needed = 1, uses_anonymous_args = 0
 4444              		@ link register save eliminated.
 4445 0000 80B4     		push	{r7}
 4446              		.cfi_def_cfa_offset 4
 4447              		.cfi_offset 7, -4
 4448 0002 85B0     		sub	sp, sp, #20
 4449              		.cfi_def_cfa_offset 24
 4450 0004 00AF     		add	r7, sp, #0
 4451              		.cfi_def_cfa_register 7
 4452 0006 7860     		str	r0, [r7, #4]
 4453 0008 0B46     		mov	r3, r1
 4454 000a FB70     		strb	r3, [r7, #3]
 911:..\src/command_processing.c ****     
 912:..\src/command_processing.c ****     uint8 CYDATA i;
 913:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 4455              		.loc 1 913 0
 4456 000c 0023     		movs	r3, #0
 4457 000e BB73     		strb	r3, [r7, #14]
 914:..\src/command_processing.c ****     
 915:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 4458              		.loc 1 915 0
 4459 0010 0023     		movs	r3, #0
 4460 0012 FB73     		strb	r3, [r7, #15]
 4461 0014 09E0     		b	.L212
 4462              	.L213:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 114


 916:..\src/command_processing.c ****        checksum ^= data_array[i];
 4463              		.loc 1 916 0 discriminator 3
 4464 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4465 0018 7A68     		ldr	r2, [r7, #4]
 4466 001a 1344     		add	r3, r3, r2
 4467 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4468 001e BB7B     		ldrb	r3, [r7, #14]
 4469 0020 5340     		eors	r3, r3, r2
 4470 0022 BB73     		strb	r3, [r7, #14]
 915:..\src/command_processing.c ****        checksum ^= data_array[i];
 4471              		.loc 1 915 0 discriminator 3
 4472 0024 FB7B     		ldrb	r3, [r7, #15]
 4473 0026 0133     		adds	r3, r3, #1
 4474 0028 FB73     		strb	r3, [r7, #15]
 4475              	.L212:
 915:..\src/command_processing.c ****        checksum ^= data_array[i];
 4476              		.loc 1 915 0 is_stmt 0 discriminator 1
 4477 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4478 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4479 002e 9A42     		cmp	r2, r3
 4480 0030 F1D3     		bcc	.L213
 917:..\src/command_processing.c ****   
 918:..\src/command_processing.c ****     return checksum;
 4481              		.loc 1 918 0 is_stmt 1
 4482 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 919:..\src/command_processing.c **** }
 4483              		.loc 1 919 0
 4484 0034 1846     		mov	r0, r3
 4485 0036 1437     		adds	r7, r7, #20
 4486              		.cfi_def_cfa_offset 4
 4487 0038 BD46     		mov	sp, r7
 4488              		.cfi_def_cfa_register 13
 4489              		@ sp needed
 4490 003a 80BC     		pop	{r7}
 4491              		.cfi_restore 7
 4492              		.cfi_def_cfa_offset 0
 4493 003c 7047     		bx	lr
 4494              		.cfi_endproc
 4495              	.LFE84:
 4496              		.size	LCRChecksum, .-LCRChecksum
 4497 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 4498              		.align	2
 4499              		.global	sendAcknowledgment
 4500              		.thumb
 4501              		.thumb_func
 4502              		.type	sendAcknowledgment, %function
 4503              	sendAcknowledgment:
 4504              	.LFB85:
 920:..\src/command_processing.c **** 
 921:..\src/command_processing.c **** 
 922:..\src/command_processing.c **** //==============================================================================
 923:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
 924:..\src/command_processing.c **** //==============================================================================
 925:..\src/command_processing.c **** 
 926:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 4505              		.loc 1 926 0
 4506              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 115


 4507              		@ args = 0, pretend = 0, frame = 16
 4508              		@ frame_needed = 1, uses_anonymous_args = 0
 4509 0000 80B5     		push	{r7, lr}
 4510              		.cfi_def_cfa_offset 8
 4511              		.cfi_offset 7, -8
 4512              		.cfi_offset 14, -4
 4513 0002 84B0     		sub	sp, sp, #16
 4514              		.cfi_def_cfa_offset 24
 4515 0004 00AF     		add	r7, sp, #0
 4516              		.cfi_def_cfa_register 7
 4517 0006 0346     		mov	r3, r0
 4518 0008 FB71     		strb	r3, [r7, #7]
 927:..\src/command_processing.c ****     int packet_length = 2;
 4519              		.loc 1 927 0
 4520 000a 0223     		movs	r3, #2
 4521 000c FB60     		str	r3, [r7, #12]
 928:..\src/command_processing.c ****     uint8 packet_data[2];
 929:..\src/command_processing.c **** 
 930:..\src/command_processing.c ****     packet_data[0] = value;
 4522              		.loc 1 930 0
 4523 000e FB79     		ldrb	r3, [r7, #7]
 4524 0010 3B72     		strb	r3, [r7, #8]
 931:..\src/command_processing.c ****     packet_data[1] = value;
 4525              		.loc 1 931 0
 4526 0012 FB79     		ldrb	r3, [r7, #7]
 4527 0014 7B72     		strb	r3, [r7, #9]
 932:..\src/command_processing.c **** 
 933:..\src/command_processing.c ****     commWrite(packet_data, packet_length);
 4528              		.loc 1 933 0
 4529 0016 FB68     		ldr	r3, [r7, #12]
 4530 0018 9AB2     		uxth	r2, r3
 4531 001a 07F10803 		add	r3, r7, #8
 4532 001e 1146     		mov	r1, r2
 4533 0020 1846     		mov	r0, r3
 4534 0022 FFF7FEFF 		bl	commWrite
 934:..\src/command_processing.c **** }
 4535              		.loc 1 934 0
 4536 0026 00BF     		nop
 4537 0028 1037     		adds	r7, r7, #16
 4538              		.cfi_def_cfa_offset 8
 4539 002a BD46     		mov	sp, r7
 4540              		.cfi_def_cfa_register 13
 4541              		@ sp needed
 4542 002c 80BD     		pop	{r7, pc}
 4543              		.cfi_endproc
 4544              	.LFE85:
 4545              		.size	sendAcknowledgment, .-sendAcknowledgment
 4546 002e 00BF     		.section	.text.memStore,"ax",%progbits
 4547              		.align	2
 4548              		.global	memStore
 4549              		.thumb
 4550              		.thumb_func
 4551              		.type	memStore, %function
 4552              	memStore:
 4553              	.LFB86:
 935:..\src/command_processing.c **** 
 936:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 116


 937:..\src/command_processing.c **** //                                                                  STORE MEMORY
 938:..\src/command_processing.c **** //==============================================================================
 939:..\src/command_processing.c **** 
 940:..\src/command_processing.c **** 
 941:..\src/command_processing.c **** uint8 memStore(int displacement)
 942:..\src/command_processing.c **** {
 4554              		.loc 1 942 0
 4555              		.cfi_startproc
 4556              		@ args = 0, pretend = 0, frame = 24
 4557              		@ frame_needed = 1, uses_anonymous_args = 0
 4558 0000 80B5     		push	{r7, lr}
 4559              		.cfi_def_cfa_offset 8
 4560              		.cfi_offset 7, -8
 4561              		.cfi_offset 14, -4
 4562 0002 86B0     		sub	sp, sp, #24
 4563              		.cfi_def_cfa_offset 32
 4564 0004 00AF     		add	r7, sp, #0
 4565              		.cfi_def_cfa_register 7
 4566 0006 7860     		str	r0, [r7, #4]
 943:..\src/command_processing.c ****     int i;  // iterator
 944:..\src/command_processing.c ****     uint8 writeStatus;
 945:..\src/command_processing.c ****     int pages;
 946:..\src/command_processing.c ****     uint8 ret_val = 1;
 4567              		.loc 1 946 0
 4568 0008 0123     		movs	r3, #1
 4569 000a FB74     		strb	r3, [r7, #19]
 947:..\src/command_processing.c **** 
 948:..\src/command_processing.c ****     // Disable Interrupt
 949:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 4570              		.loc 1 949 0
 4571 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
 950:..\src/command_processing.c **** 
 951:..\src/command_processing.c ****     // Stop motor
 952:..\src/command_processing.c ****     //PWM_MOTORS_WriteCompare1(0);
 953:..\src/command_processing.c **** 
 954:..\src/command_processing.c ****     // Update temperature information for better writing performance
 955:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 4572              		.loc 1 955 0
 4573 0010 FFF7FEFF 		bl	EEPROM_UpdateTemperature
 956:..\src/command_processing.c **** 
 957:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 4574              		.loc 1 957 0
 4575 0014 1C4A     		ldr	r2, .L222
 4576 0016 1D4B     		ldr	r3, .L222+4
 4577 0018 1046     		mov	r0, r2
 4578 001a 1946     		mov	r1, r3
 4579 001c 6023     		movs	r3, #96
 4580 001e 1A46     		mov	r2, r3
 4581 0020 FFF7FEFF 		bl	memcpy
 958:..\src/command_processing.c **** 
 959:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 4582              		.loc 1 959 0
 4583 0024 0623     		movs	r3, #6
 4584 0026 FB60     		str	r3, [r7, #12]
 960:..\src/command_processing.c **** 
 961:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 4585              		.loc 1 961 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 117


 4586 0028 0023     		movs	r3, #0
 4587 002a 7B61     		str	r3, [r7, #20]
 4588 002c 18E0     		b	.L217
 4589              	.L220:
 962:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 4590              		.loc 1 962 0
 4591 002e 7B69     		ldr	r3, [r7, #20]
 4592 0030 1B01     		lsls	r3, r3, #4
 4593 0032 1A46     		mov	r2, r3
 4594 0034 154B     		ldr	r3, .L222+4
 4595 0036 D018     		adds	r0, r2, r3
 4596 0038 7B69     		ldr	r3, [r7, #20]
 4597 003a DAB2     		uxtb	r2, r3
 4598 003c 7B68     		ldr	r3, [r7, #4]
 4599 003e DBB2     		uxtb	r3, r3
 4600 0040 1344     		add	r3, r3, r2
 4601 0042 DBB2     		uxtb	r3, r3
 4602 0044 1946     		mov	r1, r3
 4603 0046 FFF7FEFF 		bl	EEPROM_Write
 4604 004a 0346     		mov	r3, r0
 4605 004c FB72     		strb	r3, [r7, #11]
 963:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 4606              		.loc 1 963 0
 4607 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4608 0050 002B     		cmp	r3, #0
 4609 0052 02D0     		beq	.L218
 964:..\src/command_processing.c ****             ret_val = 0;
 4610              		.loc 1 964 0
 4611 0054 0023     		movs	r3, #0
 4612 0056 FB74     		strb	r3, [r7, #19]
 965:..\src/command_processing.c ****             break;
 4613              		.loc 1 965 0
 4614 0058 06E0     		b	.L219
 4615              	.L218:
 961:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 4616              		.loc 1 961 0 discriminator 2
 4617 005a 7B69     		ldr	r3, [r7, #20]
 4618 005c 0133     		adds	r3, r3, #1
 4619 005e 7B61     		str	r3, [r7, #20]
 4620              	.L217:
 961:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 4621              		.loc 1 961 0 is_stmt 0 discriminator 1
 4622 0060 7A69     		ldr	r2, [r7, #20]
 4623 0062 FB68     		ldr	r3, [r7, #12]
 4624 0064 9A42     		cmp	r2, r3
 4625 0066 E2DB     		blt	.L220
 4626              	.L219:
 966:..\src/command_processing.c ****         }
 967:..\src/command_processing.c ****     }
 968:..\src/command_processing.c **** 
 969:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 4627              		.loc 1 969 0 is_stmt 1
 4628 0068 084A     		ldr	r2, .L222+4
 4629 006a 074B     		ldr	r3, .L222
 4630 006c 1046     		mov	r0, r2
 4631 006e 1946     		mov	r1, r3
 4632 0070 6023     		movs	r3, #96
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 118


 4633 0072 1A46     		mov	r2, r3
 4634 0074 FFF7FEFF 		bl	memcpy
 970:..\src/command_processing.c **** 
 971:..\src/command_processing.c ****     // Re-Enable Interrupt
 972:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 4635              		.loc 1 972 0
 4636 0078 FFF7FEFF 		bl	ISR_RS485_RX_Enable
 973:..\src/command_processing.c **** 
 974:..\src/command_processing.c ****     return ret_val;
 4637              		.loc 1 974 0
 4638 007c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 975:..\src/command_processing.c **** }
 4639              		.loc 1 975 0
 4640 007e 1846     		mov	r0, r3
 4641 0080 1837     		adds	r7, r7, #24
 4642              		.cfi_def_cfa_offset 8
 4643 0082 BD46     		mov	sp, r7
 4644              		.cfi_def_cfa_register 13
 4645              		@ sp needed
 4646 0084 80BD     		pop	{r7, pc}
 4647              	.L223:
 4648 0086 00BF     		.align	2
 4649              	.L222:
 4650 0088 00000000 		.word	c_mem
 4651 008c 00000000 		.word	g_mem
 4652              		.cfi_endproc
 4653              	.LFE86:
 4654              		.size	memStore, .-memStore
 4655              		.section	.text.memRecall,"ax",%progbits
 4656              		.align	2
 4657              		.global	memRecall
 4658              		.thumb
 4659              		.thumb_func
 4660              		.type	memRecall, %function
 4661              	memRecall:
 4662              	.LFB87:
 976:..\src/command_processing.c **** 
 977:..\src/command_processing.c **** 
 978:..\src/command_processing.c **** //==============================================================================
 979:..\src/command_processing.c **** //                                                                 RECALL MEMORY
 980:..\src/command_processing.c **** //==============================================================================
 981:..\src/command_processing.c **** 
 982:..\src/command_processing.c **** 
 983:..\src/command_processing.c **** void memRecall(void)
 984:..\src/command_processing.c **** {  
 4663              		.loc 1 984 0
 4664              		.cfi_startproc
 4665              		@ args = 0, pretend = 0, frame = 8
 4666              		@ frame_needed = 1, uses_anonymous_args = 0
 4667 0000 80B5     		push	{r7, lr}
 4668              		.cfi_def_cfa_offset 8
 4669              		.cfi_offset 7, -8
 4670              		.cfi_offset 14, -4
 4671 0002 82B0     		sub	sp, sp, #8
 4672              		.cfi_def_cfa_offset 16
 4673 0004 00AF     		add	r7, sp, #0
 4674              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 119


 985:..\src/command_processing.c ****     uint16 i;
 986:..\src/command_processing.c **** 
 987:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 4675              		.loc 1 987 0
 4676 0006 0023     		movs	r3, #0
 4677 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 4678 000a 0CE0     		b	.L225
 4679              	.L226:
 988:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 4680              		.loc 1 988 0 discriminator 3
 4681 000c FB88     		ldrh	r3, [r7, #6]
 4682 000e 114A     		ldr	r2, .L230
 4683 0010 1344     		add	r3, r3, r2
 4684 0012 114A     		ldr	r2, .L230+4
 4685 0014 1168     		ldr	r1, [r2]
 4686 0016 FA88     		ldrh	r2, [r7, #6]
 4687 0018 0A44     		add	r2, r2, r1
 4688 001a 1278     		ldrb	r2, [r2]
 4689 001c D2B2     		uxtb	r2, r2
 4690 001e 1A70     		strb	r2, [r3]
 987:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 4691              		.loc 1 987 0 discriminator 3
 4692 0020 FB88     		ldrh	r3, [r7, #6]
 4693 0022 0133     		adds	r3, r3, #1
 4694 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 4695              	.L225:
 987:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 4696              		.loc 1 987 0 is_stmt 0 discriminator 1
 4697 0026 FB88     		ldrh	r3, [r7, #6]
 4698 0028 5F2B     		cmp	r3, #95
 4699 002a EFD9     		bls	.L226
 989:..\src/command_processing.c ****     }
 990:..\src/command_processing.c ****        //check for initialization
 991:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 4700              		.loc 1 991 0 is_stmt 1
 4701 002c 094B     		ldr	r3, .L230
 4702 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4703 0030 002B     		cmp	r3, #0
 4704 0032 02D1     		bne	.L227
 992:..\src/command_processing.c ****         memRestore();
 4705              		.loc 1 992 0
 4706 0034 FFF7FEFF 		bl	memRestore
 993:..\src/command_processing.c ****     } else {
 994:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 995:..\src/command_processing.c ****     }   
 996:..\src/command_processing.c **** }
 4707              		.loc 1 996 0
 4708 0038 07E0     		b	.L229
 4709              	.L227:
 994:..\src/command_processing.c ****     }   
 4710              		.loc 1 994 0
 4711 003a 084A     		ldr	r2, .L230+8
 4712 003c 054B     		ldr	r3, .L230
 4713 003e 1046     		mov	r0, r2
 4714 0040 1946     		mov	r1, r3
 4715 0042 6023     		movs	r3, #96
 4716 0044 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 120


 4717 0046 FFF7FEFF 		bl	memcpy
 4718              	.L229:
 4719              		.loc 1 996 0
 4720 004a 00BF     		nop
 4721 004c 0837     		adds	r7, r7, #8
 4722              		.cfi_def_cfa_offset 8
 4723 004e BD46     		mov	sp, r7
 4724              		.cfi_def_cfa_register 13
 4725              		@ sp needed
 4726 0050 80BD     		pop	{r7, pc}
 4727              	.L231:
 4728 0052 00BF     		.align	2
 4729              	.L230:
 4730 0054 00000000 		.word	g_mem
 4731 0058 00000000 		.word	EEPROM_ADDR
 4732 005c 00000000 		.word	c_mem
 4733              		.cfi_endproc
 4734              	.LFE87:
 4735              		.size	memRecall, .-memRecall
 4736              		.section	.text.memRestore,"ax",%progbits
 4737              		.align	2
 4738              		.global	memRestore
 4739              		.thumb
 4740              		.thumb_func
 4741              		.type	memRestore, %function
 4742              	memRestore:
 4743              	.LFB88:
 997:..\src/command_processing.c **** 
 998:..\src/command_processing.c **** 
 999:..\src/command_processing.c **** //==============================================================================
1000:..\src/command_processing.c **** //                                                                RESTORE MEMORY
1001:..\src/command_processing.c **** //==============================================================================
1002:..\src/command_processing.c **** 
1003:..\src/command_processing.c **** 
1004:..\src/command_processing.c **** uint8 memRestore(void) {
 4744              		.loc 1 1004 0
 4745              		.cfi_startproc
 4746              		@ args = 0, pretend = 0, frame = 8
 4747              		@ frame_needed = 1, uses_anonymous_args = 0
 4748 0000 80B5     		push	{r7, lr}
 4749              		.cfi_def_cfa_offset 8
 4750              		.cfi_offset 7, -8
 4751              		.cfi_offset 14, -4
 4752 0002 82B0     		sub	sp, sp, #8
 4753              		.cfi_def_cfa_offset 16
 4754 0004 00AF     		add	r7, sp, #0
 4755              		.cfi_def_cfa_register 7
1005:..\src/command_processing.c ****     uint16 i;
1006:..\src/command_processing.c **** 
1007:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 4756              		.loc 1 1007 0
 4757 0006 0023     		movs	r3, #0
 4758 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 4759 000a 0EE0     		b	.L233
 4760              	.L234:
1008:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 4761              		.loc 1 1008 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 121


 4762 000c FB88     		ldrh	r3, [r7, #6]
 4763 000e 104A     		ldr	r2, .L237
 4764 0010 1344     		add	r3, r3, r2
 4765 0012 104A     		ldr	r2, .L237+4
 4766 0014 1168     		ldr	r1, [r2]
 4767 0016 FA88     		ldrh	r2, [r7, #6]
 4768 0018 02F54872 		add	r2, r2, #800
 4769 001c 0A44     		add	r2, r2, r1
 4770 001e 1278     		ldrb	r2, [r2]
 4771 0020 D2B2     		uxtb	r2, r2
 4772 0022 1A70     		strb	r2, [r3]
1007:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 4773              		.loc 1 1007 0 discriminator 3
 4774 0024 FB88     		ldrh	r3, [r7, #6]
 4775 0026 0133     		adds	r3, r3, #1
 4776 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 4777              	.L233:
1007:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 4778              		.loc 1 1007 0 is_stmt 0 discriminator 1
 4779 002a FB88     		ldrh	r3, [r7, #6]
 4780 002c 5F2B     		cmp	r3, #95
 4781 002e EDD9     		bls	.L234
1009:..\src/command_processing.c ****     }
1010:..\src/command_processing.c **** 
1011:..\src/command_processing.c ****     //check for initialization
1012:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 4782              		.loc 1 1012 0 is_stmt 1
 4783 0030 074B     		ldr	r3, .L237
 4784 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4785 0034 002B     		cmp	r3, #0
 4786 0036 03D1     		bne	.L235
1013:..\src/command_processing.c ****         return memInit();
 4787              		.loc 1 1013 0
 4788 0038 FFF7FEFF 		bl	memInit
 4789 003c 0346     		mov	r3, r0
 4790 003e 03E0     		b	.L236
 4791              	.L235:
1014:..\src/command_processing.c ****     } else {
1015:..\src/command_processing.c ****         return memStore(0);
 4792              		.loc 1 1015 0
 4793 0040 0020     		movs	r0, #0
 4794 0042 FFF7FEFF 		bl	memStore
 4795 0046 0346     		mov	r3, r0
 4796              	.L236:
1016:..\src/command_processing.c ****     }  
1017:..\src/command_processing.c **** }
 4797              		.loc 1 1017 0
 4798 0048 1846     		mov	r0, r3
 4799 004a 0837     		adds	r7, r7, #8
 4800              		.cfi_def_cfa_offset 8
 4801 004c BD46     		mov	sp, r7
 4802              		.cfi_def_cfa_register 13
 4803              		@ sp needed
 4804 004e 80BD     		pop	{r7, pc}
 4805              	.L238:
 4806              		.align	2
 4807              	.L237:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 122


 4808 0050 00000000 		.word	g_mem
 4809 0054 00000000 		.word	EEPROM_ADDR
 4810              		.cfi_endproc
 4811              	.LFE88:
 4812              		.size	memRestore, .-memRestore
 4813              		.section	.text.memInit,"ax",%progbits
 4814              		.align	2
 4815              		.global	memInit
 4816              		.thumb
 4817              		.thumb_func
 4818              		.type	memInit, %function
 4819              	memInit:
 4820              	.LFB89:
1018:..\src/command_processing.c **** 
1019:..\src/command_processing.c **** //==============================================================================
1020:..\src/command_processing.c **** //                                                                   MEMORY INIT
1021:..\src/command_processing.c **** //==============================================================================
1022:..\src/command_processing.c **** 
1023:..\src/command_processing.c **** uint8 memInit(void)
1024:..\src/command_processing.c **** {
 4821              		.loc 1 1024 0
 4822              		.cfi_startproc
 4823              		@ args = 0, pretend = 0, frame = 0
 4824              		@ frame_needed = 1, uses_anonymous_args = 0
 4825 0000 80B5     		push	{r7, lr}
 4826              		.cfi_def_cfa_offset 8
 4827              		.cfi_offset 7, -8
 4828              		.cfi_offset 14, -4
 4829 0002 00AF     		add	r7, sp, #0
 4830              		.cfi_def_cfa_register 7
1025:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
1026:..\src/command_processing.c ****     g_mem.flag = TRUE;
 4831              		.loc 1 1026 0
 4832 0004 2F4B     		ldr	r3, .L243
 4833 0006 0122     		movs	r2, #1
 4834 0008 1A70     		strb	r2, [r3]
1027:..\src/command_processing.c ****     
1028:..\src/command_processing.c ****     // DEV STRUCT
1029:..\src/command_processing.c ****     g_mem.dev.id = 2;
 4835              		.loc 1 1029 0
 4836 000a 2E4B     		ldr	r3, .L243
 4837 000c 0222     		movs	r2, #2
 4838 000e 1A74     		strb	r2, [r3, #16]
1030:..\src/command_processing.c ****     
1031:..\src/command_processing.c ****     // SH STRUCT
1032:..\src/command_processing.c ****     g_mem.SH_config.pos_lim_inf = 0;
 4839              		.loc 1 1032 0
 4840 0010 2C4B     		ldr	r3, .L243
 4841 0012 0022     		movs	r2, #0
 4842 0014 1A62     		str	r2, [r3, #32]
1033:..\src/command_processing.c ****     g_mem.SH_config.pos_lim_sup = (int32)16000 << g_mem.SH_config.res;
 4843              		.loc 1 1033 0
 4844 0016 2B4B     		ldr	r3, .L243
 4845 0018 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 4846 001c 1A46     		mov	r2, r3
 4847 001e 4FF47A53 		mov	r3, #16000
 4848 0022 9340     		lsls	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 123


 4849 0024 274A     		ldr	r2, .L243
 4850 0026 5362     		str	r3, [r2, #36]
1034:..\src/command_processing.c ****     g_mem.SH_config.input_mode = INPUT_MODE_EMG_FCFS;
 4851              		.loc 1 1034 0
 4852 0028 264B     		ldr	r3, .L243
 4853 002a 0422     		movs	r2, #4
 4854 002c 83F82820 		strb	r2, [r3, #40]
1035:..\src/command_processing.c ****     g_mem.SH_config.res = 3;
 4855              		.loc 1 1035 0
 4856 0030 244B     		ldr	r3, .L243
 4857 0032 0322     		movs	r2, #3
 4858 0034 83F82920 		strb	r2, [r3, #41]
1036:..\src/command_processing.c **** 
1037:..\src/command_processing.c ****     // EMG STRUCT     
1038:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 4859              		.loc 1 1038 0
 4860 0038 224B     		ldr	r3, .L243
 4861 003a C822     		movs	r2, #200
 4862 003c 1A86     		strh	r2, [r3, #48]	@ movhi
1039:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 4863              		.loc 1 1039 0
 4864 003e 214B     		ldr	r3, .L243
 4865 0040 C822     		movs	r2, #200
 4866 0042 5A86     		strh	r2, [r3, #50]	@ movhi
1040:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 4867              		.loc 1 1040 0
 4868 0044 1F4B     		ldr	r3, .L243
 4869 0046 4FF48062 		mov	r2, #1024
 4870 004a 5A63     		str	r2, [r3, #52]
1041:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 4871              		.loc 1 1041 0
 4872 004c 1D4B     		ldr	r3, .L243
 4873 004e 4FF48062 		mov	r2, #1024
 4874 0052 9A63     		str	r2, [r3, #56]
1042:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 4875              		.loc 1 1042 0
 4876 0054 1B4B     		ldr	r3, .L243
 4877 0056 6422     		movs	r2, #100
 4878 0058 83F83C20 		strb	r2, [r3, #60]
1043:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 4879              		.loc 1 1043 0
 4880 005c 194B     		ldr	r3, .L243
 4881 005e 6422     		movs	r2, #100
 4882 0060 83F83D20 		strb	r2, [r3, #61]
1044:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 4883              		.loc 1 1044 0
 4884 0064 174B     		ldr	r3, .L243
 4885 0066 0022     		movs	r2, #0
 4886 0068 83F83E20 		strb	r2, [r3, #62]
1045:..\src/command_processing.c ****     
1046:..\src/command_processing.c ****     // MASTER_SLAVE STRUCT
1047:..\src/command_processing.c ****     g_mem.MS.master_mode_active = FALSE;
 4887              		.loc 1 1047 0
 4888 006c 154B     		ldr	r3, .L243
 4889 006e 0022     		movs	r2, #0
 4890 0070 83F84020 		strb	r2, [r3, #64]
1048:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 124


1049:..\src/command_processing.c ****     
1050:..\src/command_processing.c ****     //FEEDBACK STRUCT
1051:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 4891              		.loc 1 1051 0
 4892 0074 134B     		ldr	r3, .L243
 4893 0076 4FF4E172 		mov	r2, #450
 4894 007a 1A65     		str	r2, [r3, #80]
1052:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 4895              		.loc 1 1052 0
 4896 007c 114B     		ldr	r3, .L243
 4897 007e 124A     		ldr	r2, .L243+4
 4898 0080 5A65     		str	r2, [r3, #84]	@ float
1053:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 4899              		.loc 1 1053 0
 4900 0082 104B     		ldr	r3, .L243
 4901 0084 4FF07E52 		mov	r2, #1065353216
 4902 0088 9A65     		str	r2, [r3, #88]	@ float
1054:..\src/command_processing.c ****     g_mem.FB.vibrotactile_feedback_active = FALSE;
 4903              		.loc 1 1054 0
 4904 008a 0E4B     		ldr	r3, .L243
 4905 008c 0022     		movs	r2, #0
 4906 008e 83F85C20 		strb	r2, [r3, #92]
1055:..\src/command_processing.c ****     g_mem.FB.airchamber_feedback_active = FALSE;
 4907              		.loc 1 1055 0
 4908 0092 0C4B     		ldr	r3, .L243
 4909 0094 0022     		movs	r2, #0
 4910 0096 83F85D20 		strb	r2, [r3, #93]
1056:..\src/command_processing.c ****     
1057:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
1058:..\src/command_processing.c ****     g_mem.flag = TRUE;
 4911              		.loc 1 1058 0
 4912 009a 0A4B     		ldr	r3, .L243
 4913 009c 0122     		movs	r2, #1
 4914 009e 1A70     		strb	r2, [r3]
1059:..\src/command_processing.c ****     
1060:..\src/command_processing.c ****     //write that configuration to EEPROM
1061:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );}
 4915              		.loc 1 1061 0
 4916 00a0 0020     		movs	r0, #0
 4917 00a2 FFF7FEFF 		bl	memStore
 4918 00a6 0346     		mov	r3, r0
 4919 00a8 002B     		cmp	r3, #0
 4920 00aa 07D0     		beq	.L240
 4921              		.loc 1 1061 0 is_stmt 0 discriminator 1
 4922 00ac 3220     		movs	r0, #50
 4923 00ae FFF7FEFF 		bl	memStore
 4924 00b2 0346     		mov	r3, r0
 4925 00b4 002B     		cmp	r3, #0
 4926 00b6 01D0     		beq	.L240
 4927              		.loc 1 1061 0 discriminator 3
 4928 00b8 0123     		movs	r3, #1
 4929 00ba 00E0     		b	.L241
 4930              	.L240:
 4931              		.loc 1 1061 0 discriminator 4
 4932 00bc 0023     		movs	r3, #0
 4933              	.L241:
 4934              		.loc 1 1061 0 discriminator 6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 125


 4935 00be DBB2     		uxtb	r3, r3
 4936 00c0 1846     		mov	r0, r3
 4937 00c2 80BD     		pop	{r7, pc}
 4938              	.L244:
 4939              		.align	2
 4940              	.L243:
 4941 00c4 00000000 		.word	g_mem
 4942 00c8 0000C841 		.word	1103626240
 4943              		.cfi_endproc
 4944              	.LFE89:
 4945              		.size	memInit, .-memInit
 4946              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 4947              		.align	2
 4948              		.global	memInit_SoftHandPro
 4949              		.thumb
 4950              		.thumb_func
 4951              		.type	memInit_SoftHandPro, %function
 4952              	memInit_SoftHandPro:
 4953              	.LFB90:
1062:..\src/command_processing.c **** 
1063:..\src/command_processing.c **** //==============================================================================
1064:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
1065:..\src/command_processing.c **** //==============================================================================
1066:..\src/command_processing.c **** void memInit_SoftHandPro(void)
1067:..\src/command_processing.c **** {
 4954              		.loc 1 1067 0 is_stmt 1
 4955              		.cfi_startproc
 4956              		@ args = 0, pretend = 0, frame = 0
 4957              		@ frame_needed = 1, uses_anonymous_args = 0
 4958              		@ link register save eliminated.
 4959 0000 80B4     		push	{r7}
 4960              		.cfi_def_cfa_offset 4
 4961              		.cfi_offset 7, -4
 4962 0002 00AF     		add	r7, sp, #0
 4963              		.cfi_def_cfa_register 7
1068:..\src/command_processing.c **** }
 4964              		.loc 1 1068 0
 4965 0004 00BF     		nop
 4966 0006 BD46     		mov	sp, r7
 4967              		.cfi_def_cfa_register 13
 4968              		@ sp needed
 4969 0008 80BC     		pop	{r7}
 4970              		.cfi_restore 7
 4971              		.cfi_def_cfa_offset 0
 4972 000a 7047     		bx	lr
 4973              		.cfi_endproc
 4974              	.LFE90:
 4975              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 4976              		.section	.text.memInit_Master,"ax",%progbits
 4977              		.align	2
 4978              		.global	memInit_Master
 4979              		.thumb
 4980              		.thumb_func
 4981              		.type	memInit_Master, %function
 4982              	memInit_Master:
 4983              	.LFB91:
1069:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 126


1070:..\src/command_processing.c **** //==============================================================================
1071:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
1072:..\src/command_processing.c **** //==============================================================================
1073:..\src/command_processing.c **** void memInit_Master(void)
1074:..\src/command_processing.c **** {
 4984              		.loc 1 1074 0
 4985              		.cfi_startproc
 4986              		@ args = 0, pretend = 0, frame = 0
 4987              		@ frame_needed = 1, uses_anonymous_args = 0
 4988              		@ link register save eliminated.
 4989 0000 80B4     		push	{r7}
 4990              		.cfi_def_cfa_offset 4
 4991              		.cfi_offset 7, -4
 4992 0002 00AF     		add	r7, sp, #0
 4993              		.cfi_def_cfa_register 7
1075:..\src/command_processing.c **** }
 4994              		.loc 1 1075 0
 4995 0004 00BF     		nop
 4996 0006 BD46     		mov	sp, r7
 4997              		.cfi_def_cfa_register 13
 4998              		@ sp needed
 4999 0008 80BC     		pop	{r7}
 5000              		.cfi_restore 7
 5001              		.cfi_def_cfa_offset 0
 5002 000a 7047     		bx	lr
 5003              		.cfi_endproc
 5004              	.LFE91:
 5005              		.size	memInit_Master, .-memInit_Master
 5006              		.section	.text.memInit_AirChambers_Vibrotactile_Fb,"ax",%progbits
 5007              		.align	2
 5008              		.global	memInit_AirChambers_Vibrotactile_Fb
 5009              		.thumb
 5010              		.thumb_func
 5011              		.type	memInit_AirChambers_Vibrotactile_Fb, %function
 5012              	memInit_AirChambers_Vibrotactile_Fb:
 5013              	.LFB92:
1076:..\src/command_processing.c **** 
1077:..\src/command_processing.c **** //==============================================================================
1078:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
1079:..\src/command_processing.c **** //==============================================================================
1080:..\src/command_processing.c **** void memInit_AirChambers_Vibrotactile_Fb()
1081:..\src/command_processing.c **** {
 5014              		.loc 1 1081 0
 5015              		.cfi_startproc
 5016              		@ args = 0, pretend = 0, frame = 0
 5017              		@ frame_needed = 1, uses_anonymous_args = 0
 5018              		@ link register save eliminated.
 5019 0000 80B4     		push	{r7}
 5020              		.cfi_def_cfa_offset 4
 5021              		.cfi_offset 7, -4
 5022 0002 00AF     		add	r7, sp, #0
 5023              		.cfi_def_cfa_register 7
1082:..\src/command_processing.c **** }
 5024              		.loc 1 1082 0
 5025 0004 00BF     		nop
 5026 0006 BD46     		mov	sp, r7
 5027              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 127


 5028              		@ sp needed
 5029 0008 80BC     		pop	{r7}
 5030              		.cfi_restore 7
 5031              		.cfi_def_cfa_offset 0
 5032 000a 7047     		bx	lr
 5033              		.cfi_endproc
 5034              	.LFE92:
 5035              		.size	memInit_AirChambers_Vibrotactile_Fb, .-memInit_AirChambers_Vibrotactile_Fb
 5036              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 5037              		.align	2
 5038              		.global	memInit_OtbkActWristMs
 5039              		.thumb
 5040              		.thumb_func
 5041              		.type	memInit_OtbkActWristMs, %function
 5042              	memInit_OtbkActWristMs:
 5043              	.LFB93:
1083:..\src/command_processing.c **** 
1084:..\src/command_processing.c **** //==============================================================================
1085:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
1086:..\src/command_processing.c **** //==============================================================================
1087:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
1088:..\src/command_processing.c **** {
 5044              		.loc 1 1088 0
 5045              		.cfi_startproc
 5046              		@ args = 0, pretend = 0, frame = 0
 5047              		@ frame_needed = 1, uses_anonymous_args = 0
 5048              		@ link register save eliminated.
 5049 0000 80B4     		push	{r7}
 5050              		.cfi_def_cfa_offset 4
 5051              		.cfi_offset 7, -4
 5052 0002 00AF     		add	r7, sp, #0
 5053              		.cfi_def_cfa_register 7
1089:..\src/command_processing.c **** }
 5054              		.loc 1 1089 0
 5055 0004 00BF     		nop
 5056 0006 BD46     		mov	sp, r7
 5057              		.cfi_def_cfa_register 13
 5058              		@ sp needed
 5059 0008 80BC     		pop	{r7}
 5060              		.cfi_restore 7
 5061              		.cfi_def_cfa_offset 0
 5062 000a 7047     		bx	lr
 5063              		.cfi_endproc
 5064              	.LFE93:
 5065              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 5066              		.section	.text.cmd_get_measurements,"ax",%progbits
 5067              		.align	2
 5068              		.global	cmd_get_measurements
 5069              		.thumb
 5070              		.thumb_func
 5071              		.type	cmd_get_measurements, %function
 5072              	cmd_get_measurements:
 5073              	.LFB94:
1090:..\src/command_processing.c **** 
1091:..\src/command_processing.c **** //==============================================================================
1092:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
1093:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 128


1094:..\src/command_processing.c **** /**
1095:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
1096:..\src/command_processing.c **** **/
1097:..\src/command_processing.c **** 
1098:..\src/command_processing.c **** void cmd_get_measurements(){
 5074              		.loc 1 1098 0
 5075              		.cfi_startproc
 5076              		@ args = 0, pretend = 0, frame = 0
 5077              		@ frame_needed = 1, uses_anonymous_args = 0
 5078              		@ link register save eliminated.
 5079 0000 80B4     		push	{r7}
 5080              		.cfi_def_cfa_offset 4
 5081              		.cfi_offset 7, -4
 5082 0002 00AF     		add	r7, sp, #0
 5083              		.cfi_def_cfa_register 7
1099:..\src/command_processing.c ****  
1100:..\src/command_processing.c ****    
1101:..\src/command_processing.c **** }
 5084              		.loc 1 1101 0
 5085 0004 00BF     		nop
 5086 0006 BD46     		mov	sp, r7
 5087              		.cfi_def_cfa_register 13
 5088              		@ sp needed
 5089 0008 80BC     		pop	{r7}
 5090              		.cfi_restore 7
 5091              		.cfi_def_cfa_offset 0
 5092 000a 7047     		bx	lr
 5093              		.cfi_endproc
 5094              	.LFE94:
 5095              		.size	cmd_get_measurements, .-cmd_get_measurements
 5096              		.section	.text.cmd_get_velocities,"ax",%progbits
 5097              		.align	2
 5098              		.global	cmd_get_velocities
 5099              		.thumb
 5100              		.thumb_func
 5101              		.type	cmd_get_velocities, %function
 5102              	cmd_get_velocities:
 5103              	.LFB95:
1102:..\src/command_processing.c **** 
1103:..\src/command_processing.c **** void cmd_get_velocities(){
 5104              		.loc 1 1103 0
 5105              		.cfi_startproc
 5106              		@ args = 0, pretend = 0, frame = 0
 5107              		@ frame_needed = 1, uses_anonymous_args = 0
 5108              		@ link register save eliminated.
 5109 0000 80B4     		push	{r7}
 5110              		.cfi_def_cfa_offset 4
 5111              		.cfi_offset 7, -4
 5112 0002 00AF     		add	r7, sp, #0
 5113              		.cfi_def_cfa_register 7
1104:..\src/command_processing.c ****  
1105:..\src/command_processing.c **** }
 5114              		.loc 1 1105 0
 5115 0004 00BF     		nop
 5116 0006 BD46     		mov	sp, r7
 5117              		.cfi_def_cfa_register 13
 5118              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 129


 5119 0008 80BC     		pop	{r7}
 5120              		.cfi_restore 7
 5121              		.cfi_def_cfa_offset 0
 5122 000a 7047     		bx	lr
 5123              		.cfi_endproc
 5124              	.LFE95:
 5125              		.size	cmd_get_velocities, .-cmd_get_velocities
 5126              		.section	.text.cmd_get_accelerations,"ax",%progbits
 5127              		.align	2
 5128              		.global	cmd_get_accelerations
 5129              		.thumb
 5130              		.thumb_func
 5131              		.type	cmd_get_accelerations, %function
 5132              	cmd_get_accelerations:
 5133              	.LFB96:
1106:..\src/command_processing.c **** 
1107:..\src/command_processing.c **** void cmd_get_accelerations(){
 5134              		.loc 1 1107 0
 5135              		.cfi_startproc
 5136              		@ args = 0, pretend = 0, frame = 0
 5137              		@ frame_needed = 1, uses_anonymous_args = 0
 5138              		@ link register save eliminated.
 5139 0000 80B4     		push	{r7}
 5140              		.cfi_def_cfa_offset 4
 5141              		.cfi_offset 7, -4
 5142 0002 00AF     		add	r7, sp, #0
 5143              		.cfi_def_cfa_register 7
1108:..\src/command_processing.c ****  
1109:..\src/command_processing.c **** }
 5144              		.loc 1 1109 0
 5145 0004 00BF     		nop
 5146 0006 BD46     		mov	sp, r7
 5147              		.cfi_def_cfa_register 13
 5148              		@ sp needed
 5149 0008 80BC     		pop	{r7}
 5150              		.cfi_restore 7
 5151              		.cfi_def_cfa_offset 0
 5152 000a 7047     		bx	lr
 5153              		.cfi_endproc
 5154              	.LFE96:
 5155              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 5156              		.section	.text.cmd_get_joystick,"ax",%progbits
 5157              		.align	2
 5158              		.global	cmd_get_joystick
 5159              		.thumb
 5160              		.thumb_func
 5161              		.type	cmd_get_joystick, %function
 5162              	cmd_get_joystick:
 5163              	.LFB97:
1110:..\src/command_processing.c **** 
1111:..\src/command_processing.c **** void cmd_get_joystick() {
 5164              		.loc 1 1111 0
 5165              		.cfi_startproc
 5166              		@ args = 0, pretend = 0, frame = 0
 5167              		@ frame_needed = 1, uses_anonymous_args = 0
 5168              		@ link register save eliminated.
 5169 0000 80B4     		push	{r7}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 130


 5170              		.cfi_def_cfa_offset 4
 5171              		.cfi_offset 7, -4
 5172 0002 00AF     		add	r7, sp, #0
 5173              		.cfi_def_cfa_register 7
1112:..\src/command_processing.c ****  
1113:..\src/command_processing.c **** }
 5174              		.loc 1 1113 0
 5175 0004 00BF     		nop
 5176 0006 BD46     		mov	sp, r7
 5177              		.cfi_def_cfa_register 13
 5178              		@ sp needed
 5179 0008 80BC     		pop	{r7}
 5180              		.cfi_restore 7
 5181              		.cfi_def_cfa_offset 0
 5182 000a 7047     		bx	lr
 5183              		.cfi_endproc
 5184              	.LFE97:
 5185              		.size	cmd_get_joystick, .-cmd_get_joystick
 5186              		.section	.text.cmd_set_inputs,"ax",%progbits
 5187              		.align	2
 5188              		.global	cmd_set_inputs
 5189              		.thumb
 5190              		.thumb_func
 5191              		.type	cmd_set_inputs, %function
 5192              	cmd_set_inputs:
 5193              	.LFB98:
1114:..\src/command_processing.c **** 
1115:..\src/command_processing.c **** void cmd_set_inputs(){
 5194              		.loc 1 1115 0
 5195              		.cfi_startproc
 5196              		@ args = 0, pretend = 0, frame = 0
 5197              		@ frame_needed = 1, uses_anonymous_args = 0
 5198              		@ link register save eliminated.
 5199 0000 80B4     		push	{r7}
 5200              		.cfi_def_cfa_offset 4
 5201              		.cfi_offset 7, -4
 5202 0002 00AF     		add	r7, sp, #0
 5203              		.cfi_def_cfa_register 7
1116:..\src/command_processing.c ****     
1117:..\src/command_processing.c **** }
 5204              		.loc 1 1117 0
 5205 0004 00BF     		nop
 5206 0006 BD46     		mov	sp, r7
 5207              		.cfi_def_cfa_register 13
 5208              		@ sp needed
 5209 0008 80BC     		pop	{r7}
 5210              		.cfi_restore 7
 5211              		.cfi_def_cfa_offset 0
 5212 000a 7047     		bx	lr
 5213              		.cfi_endproc
 5214              	.LFE98:
 5215              		.size	cmd_set_inputs, .-cmd_set_inputs
 5216              		.section	.text.cmd_activate,"ax",%progbits
 5217              		.align	2
 5218              		.global	cmd_activate
 5219              		.thumb
 5220              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 131


 5221              		.type	cmd_activate, %function
 5222              	cmd_activate:
 5223              	.LFB99:
1118:..\src/command_processing.c **** 
1119:..\src/command_processing.c **** void cmd_activate(){
 5224              		.loc 1 1119 0
 5225              		.cfi_startproc
 5226              		@ args = 0, pretend = 0, frame = 0
 5227              		@ frame_needed = 1, uses_anonymous_args = 0
 5228              		@ link register save eliminated.
 5229 0000 80B4     		push	{r7}
 5230              		.cfi_def_cfa_offset 4
 5231              		.cfi_offset 7, -4
 5232 0002 00AF     		add	r7, sp, #0
 5233              		.cfi_def_cfa_register 7
1120:..\src/command_processing.c ****     
1121:..\src/command_processing.c **** }
 5234              		.loc 1 1121 0
 5235 0004 00BF     		nop
 5236 0006 BD46     		mov	sp, r7
 5237              		.cfi_def_cfa_register 13
 5238              		@ sp needed
 5239 0008 80BC     		pop	{r7}
 5240              		.cfi_restore 7
 5241              		.cfi_def_cfa_offset 0
 5242 000a 7047     		bx	lr
 5243              		.cfi_endproc
 5244              	.LFE99:
 5245              		.size	cmd_activate, .-cmd_activate
 5246              		.section	.text.cmd_get_activate,"ax",%progbits
 5247              		.align	2
 5248              		.global	cmd_get_activate
 5249              		.thumb
 5250              		.thumb_func
 5251              		.type	cmd_get_activate, %function
 5252              	cmd_get_activate:
 5253              	.LFB100:
1122:..\src/command_processing.c **** 
1123:..\src/command_processing.c **** void cmd_get_activate(){
 5254              		.loc 1 1123 0
 5255              		.cfi_startproc
 5256              		@ args = 0, pretend = 0, frame = 0
 5257              		@ frame_needed = 1, uses_anonymous_args = 0
 5258              		@ link register save eliminated.
 5259 0000 80B4     		push	{r7}
 5260              		.cfi_def_cfa_offset 4
 5261              		.cfi_offset 7, -4
 5262 0002 00AF     		add	r7, sp, #0
 5263              		.cfi_def_cfa_register 7
1124:..\src/command_processing.c ****     
1125:..\src/command_processing.c **** }
 5264              		.loc 1 1125 0
 5265 0004 00BF     		nop
 5266 0006 BD46     		mov	sp, r7
 5267              		.cfi_def_cfa_register 13
 5268              		@ sp needed
 5269 0008 80BC     		pop	{r7}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 132


 5270              		.cfi_restore 7
 5271              		.cfi_def_cfa_offset 0
 5272 000a 7047     		bx	lr
 5273              		.cfi_endproc
 5274              	.LFE100:
 5275              		.size	cmd_get_activate, .-cmd_get_activate
 5276              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 5277              		.align	2
 5278              		.global	cmd_get_curr_and_meas
 5279              		.thumb
 5280              		.thumb_func
 5281              		.type	cmd_get_curr_and_meas, %function
 5282              	cmd_get_curr_and_meas:
 5283              	.LFB101:
1126:..\src/command_processing.c **** 
1127:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 5284              		.loc 1 1127 0
 5285              		.cfi_startproc
 5286              		@ args = 0, pretend = 0, frame = 0
 5287              		@ frame_needed = 1, uses_anonymous_args = 0
 5288              		@ link register save eliminated.
 5289 0000 80B4     		push	{r7}
 5290              		.cfi_def_cfa_offset 4
 5291              		.cfi_offset 7, -4
 5292 0002 00AF     		add	r7, sp, #0
 5293              		.cfi_def_cfa_register 7
1128:..\src/command_processing.c ****    
1129:..\src/command_processing.c ****    
1130:..\src/command_processing.c **** }
 5294              		.loc 1 1130 0
 5295 0004 00BF     		nop
 5296 0006 BD46     		mov	sp, r7
 5297              		.cfi_def_cfa_register 13
 5298              		@ sp needed
 5299 0008 80BC     		pop	{r7}
 5300              		.cfi_restore 7
 5301              		.cfi_def_cfa_offset 0
 5302 000a 7047     		bx	lr
 5303              		.cfi_endproc
 5304              	.LFE101:
 5305              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 5306              		.section	.text.cmd_get_currents,"ax",%progbits
 5307              		.align	2
 5308              		.global	cmd_get_currents
 5309              		.thumb
 5310              		.thumb_func
 5311              		.type	cmd_get_currents, %function
 5312              	cmd_get_currents:
 5313              	.LFB102:
1131:..\src/command_processing.c **** 
1132:..\src/command_processing.c **** void cmd_get_currents(){
 5314              		.loc 1 1132 0
 5315              		.cfi_startproc
 5316              		@ args = 0, pretend = 0, frame = 0
 5317              		@ frame_needed = 1, uses_anonymous_args = 0
 5318              		@ link register save eliminated.
 5319 0000 80B4     		push	{r7}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 133


 5320              		.cfi_def_cfa_offset 4
 5321              		.cfi_offset 7, -4
 5322 0002 00AF     		add	r7, sp, #0
 5323              		.cfi_def_cfa_register 7
1133:..\src/command_processing.c ****    
1134:..\src/command_processing.c **** }
 5324              		.loc 1 1134 0
 5325 0004 00BF     		nop
 5326 0006 BD46     		mov	sp, r7
 5327              		.cfi_def_cfa_register 13
 5328              		@ sp needed
 5329 0008 80BC     		pop	{r7}
 5330              		.cfi_restore 7
 5331              		.cfi_def_cfa_offset 0
 5332 000a 7047     		bx	lr
 5333              		.cfi_endproc
 5334              	.LFE102:
 5335              		.size	cmd_get_currents, .-cmd_get_currents
 5336              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 5337              		.align	2
 5338              		.global	cmd_get_currents_for_cuff
 5339              		.thumb
 5340              		.thumb_func
 5341              		.type	cmd_get_currents_for_cuff, %function
 5342              	cmd_get_currents_for_cuff:
 5343              	.LFB103:
1135:..\src/command_processing.c **** 
1136:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 5344              		.loc 1 1136 0
 5345              		.cfi_startproc
 5346              		@ args = 0, pretend = 0, frame = 0
 5347              		@ frame_needed = 1, uses_anonymous_args = 0
 5348              		@ link register save eliminated.
 5349 0000 80B4     		push	{r7}
 5350              		.cfi_def_cfa_offset 4
 5351              		.cfi_offset 7, -4
 5352 0002 00AF     		add	r7, sp, #0
 5353              		.cfi_def_cfa_register 7
1137:..\src/command_processing.c ****    
1138:..\src/command_processing.c **** }
 5354              		.loc 1 1138 0
 5355 0004 00BF     		nop
 5356 0006 BD46     		mov	sp, r7
 5357              		.cfi_def_cfa_register 13
 5358              		@ sp needed
 5359 0008 80BC     		pop	{r7}
 5360              		.cfi_restore 7
 5361              		.cfi_def_cfa_offset 0
 5362 000a 7047     		bx	lr
 5363              		.cfi_endproc
 5364              	.LFE103:
 5365              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 5366              		.section	.text.cmd_get_vibrotactile_inputs,"ax",%progbits
 5367              		.align	2
 5368              		.global	cmd_get_vibrotactile_inputs
 5369              		.thumb
 5370              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 134


 5371              		.type	cmd_get_vibrotactile_inputs, %function
 5372              	cmd_get_vibrotactile_inputs:
 5373              	.LFB104:
1139:..\src/command_processing.c **** 
1140:..\src/command_processing.c **** void cmd_get_vibrotactile_inputs(){
 5374              		.loc 1 1140 0
 5375              		.cfi_startproc
 5376              		@ args = 0, pretend = 0, frame = 0
 5377              		@ frame_needed = 1, uses_anonymous_args = 0
 5378              		@ link register save eliminated.
 5379 0000 80B4     		push	{r7}
 5380              		.cfi_def_cfa_offset 4
 5381              		.cfi_offset 7, -4
 5382 0002 00AF     		add	r7, sp, #0
 5383              		.cfi_def_cfa_register 7
1141:..\src/command_processing.c ****     
1142:..\src/command_processing.c **** }
 5384              		.loc 1 1142 0
 5385 0004 00BF     		nop
 5386 0006 BD46     		mov	sp, r7
 5387              		.cfi_def_cfa_register 13
 5388              		@ sp needed
 5389 0008 80BC     		pop	{r7}
 5390              		.cfi_restore 7
 5391              		.cfi_def_cfa_offset 0
 5392 000a 7047     		bx	lr
 5393              		.cfi_endproc
 5394              	.LFE104:
 5395              		.size	cmd_get_vibrotactile_inputs, .-cmd_get_vibrotactile_inputs
 5396              		.section	.text.commReadIMUFromSH,"ax",%progbits
 5397              		.align	2
 5398              		.global	commReadIMUFromSH
 5399              		.thumb
 5400              		.thumb_func
 5401              		.type	commReadIMUFromSH, %function
 5402              	commReadIMUFromSH:
 5403              	.LFB105:
1143:..\src/command_processing.c **** 
1144:..\src/command_processing.c **** //==============================================================================
1145:..\src/command_processing.c **** //                                                 READ IMU VALUES FROM SOFTHAND
1146:..\src/command_processing.c **** //==============================================================================
1147:..\src/command_processing.c **** void commReadIMUFromSH(){
 5404              		.loc 1 1147 0
 5405              		.cfi_startproc
 5406              		@ args = 0, pretend = 0, frame = 32
 5407              		@ frame_needed = 1, uses_anonymous_args = 0
 5408 0000 80B5     		push	{r7, lr}
 5409              		.cfi_def_cfa_offset 8
 5410              		.cfi_offset 7, -8
 5411              		.cfi_offset 14, -4
 5412 0002 88B0     		sub	sp, sp, #32
 5413              		.cfi_def_cfa_offset 40
 5414 0004 00AF     		add	r7, sp, #0
 5415              		.cfi_def_cfa_register 7
1148:..\src/command_processing.c **** 
1149:..\src/command_processing.c ****     // Send CMD_GET_VIBROTACTILE_INPUTS to the slave and gets the PWM control values for the vibrot
1150:..\src/command_processing.c ****     // resulted from the processed IMU values.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 135


1151:..\src/command_processing.c ****     
1152:..\src/command_processing.c ****     uint8 packet_data[16];
1153:..\src/command_processing.c ****     uint8 packet_length;
1154:..\src/command_processing.c ****    
1155:..\src/command_processing.c ****     uint32 t_start, t_end;
1156:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 5416              		.loc 1 1156 0
 5417 0006 0123     		movs	r3, #1
 5418 0008 FB77     		strb	r3, [r7, #31]
1157:..\src/command_processing.c **** 
1158:..\src/command_processing.c ****     packet_length = 2;
 5419              		.loc 1 1158 0
 5420 000a 0223     		movs	r3, #2
 5421 000c BB77     		strb	r3, [r7, #30]
1159:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VIBROTACTILE_INPUTS;
 5422              		.loc 1 1159 0
 5423 000e FA23     		movs	r3, #250
 5424 0010 3B71     		strb	r3, [r7, #4]
1160:..\src/command_processing.c ****     packet_data[1] = CMD_GET_VIBROTACTILE_INPUTS;
 5425              		.loc 1 1160 0
 5426 0012 FA23     		movs	r3, #250
 5427 0014 7B71     		strb	r3, [r7, #5]
1161:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, c_mem.MS.slave_ID);
 5428              		.loc 1 1161 0
 5429 0016 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 5430 0018 99B2     		uxth	r1, r3
 5431 001a 234B     		ldr	r3, .L267
 5432 001c 93F84120 		ldrb	r2, [r3, #65]	@ zero_extendqisi2
 5433 0020 3B1D     		adds	r3, r7, #4
 5434 0022 1846     		mov	r0, r3
 5435 0024 FFF7FEFF 		bl	commWriteID
1162:..\src/command_processing.c **** 
1163:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 5436              		.loc 1 1163 0
 5437 0028 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 5438 002c 0346     		mov	r3, r0
 5439 002e BB61     		str	r3, [r7, #24]
1164:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_VIBROTACTILE_INPUTS) {
 5440              		.loc 1 1164 0
 5441 0030 18E0     		b	.L261
 5442              	.L264:
1165:..\src/command_processing.c ****         if (interrupt_flag){
 5443              		.loc 1 1165 0
 5444 0032 1E4B     		ldr	r3, .L267+4
 5445 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5446 0036 002B     		cmp	r3, #0
 5447 0038 04D0     		beq	.L262
1166:..\src/command_processing.c ****             interrupt_flag = FALSE;
 5448              		.loc 1 1166 0
 5449 003a 1C4B     		ldr	r3, .L267+4
 5450 003c 0022     		movs	r2, #0
 5451 003e 1A70     		strb	r2, [r3]
1167:..\src/command_processing.c ****             interrupt_manager();
 5452              		.loc 1 1167 0
 5453 0040 FFF7FEFF 		bl	interrupt_manager
 5454              	.L262:
1168:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 136


1169:..\src/command_processing.c **** 
1170:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 5455              		.loc 1 1170 0
 5456 0044 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 5457 0048 0346     		mov	r3, r0
 5458 004a 7B61     		str	r3, [r7, #20]
1171:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 5459              		.loc 1 1171 0
 5460 004c BA69     		ldr	r2, [r7, #24]
 5461 004e 7B69     		ldr	r3, [r7, #20]
 5462 0050 D31A     		subs	r3, r2, r3
 5463 0052 174A     		ldr	r2, .L267+8
 5464 0054 9342     		cmp	r3, r2
 5465 0056 05D9     		bls	.L261
1172:..\src/command_processing.c ****             read_flag = FALSE;
 5466              		.loc 1 1172 0
 5467 0058 0023     		movs	r3, #0
 5468 005a FB77     		strb	r3, [r7, #31]
1173:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 5469              		.loc 1 1173 0
 5470 005c 154B     		ldr	r3, .L267+12
 5471 005e 0022     		movs	r2, #0
 5472 0060 1A70     		strb	r2, [r3]
1174:..\src/command_processing.c ****             break;
 5473              		.loc 1 1174 0
 5474 0062 03E0     		b	.L263
 5475              	.L261:
1164:..\src/command_processing.c ****         if (interrupt_flag){
 5476              		.loc 1 1164 0
 5477 0064 144B     		ldr	r3, .L267+16
 5478 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5479 0068 FB2B     		cmp	r3, #251
 5480 006a E2D1     		bne	.L264
 5481              	.L263:
1175:..\src/command_processing.c ****         }
1176:..\src/command_processing.c ****     }
1177:..\src/command_processing.c **** 
1178:..\src/command_processing.c ****         if (read_flag) {
 5482              		.loc 1 1178 0
 5483 006c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5484 006e 002B     		cmp	r3, #0
 5485 0070 15D0     		beq	.L266
1179:..\src/command_processing.c ****         PWM_IMU_1 = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);      
 5486              		.loc 1 1179 0
 5487 0072 114B     		ldr	r3, .L267+16
 5488 0074 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5489 0076 1B02     		lsls	r3, r3, #8
 5490 0078 1AB2     		sxth	r2, r3
 5491 007a 0F4B     		ldr	r3, .L267+16
 5492 007c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5493 007e 1BB2     		sxth	r3, r3
 5494 0080 1343     		orrs	r3, r3, r2
 5495 0082 1AB2     		sxth	r2, r3
 5496 0084 0D4B     		ldr	r3, .L267+20
 5497 0086 1A80     		strh	r2, [r3]	@ movhi
1180:..\src/command_processing.c ****         PWM_IMU_2 = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);      
 5498              		.loc 1 1180 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 137


 5499 0088 0B4B     		ldr	r3, .L267+16
 5500 008a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 5501 008c 1B02     		lsls	r3, r3, #8
 5502 008e 1AB2     		sxth	r2, r3
 5503 0090 094B     		ldr	r3, .L267+16
 5504 0092 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 5505 0094 1BB2     		sxth	r3, r3
 5506 0096 1343     		orrs	r3, r3, r2
 5507 0098 1AB2     		sxth	r2, r3
 5508 009a 094B     		ldr	r3, .L267+24
 5509 009c 1A80     		strh	r2, [r3]	@ movhi
 5510              	.L266:
1181:..\src/command_processing.c ****     }
1182:..\src/command_processing.c ****     
1183:..\src/command_processing.c **** }
 5511              		.loc 1 1183 0
 5512 009e 00BF     		nop
 5513 00a0 2037     		adds	r7, r7, #32
 5514              		.cfi_def_cfa_offset 8
 5515 00a2 BD46     		mov	sp, r7
 5516              		.cfi_def_cfa_register 13
 5517              		@ sp needed
 5518 00a4 80BD     		pop	{r7, pc}
 5519              	.L268:
 5520 00a6 00BF     		.align	2
 5521              	.L267:
 5522 00a8 00000000 		.word	c_mem
 5523 00ac 00000000 		.word	interrupt_flag
 5524 00b0 20AA4400 		.word	4500000
 5525 00b4 00000000 		.word	master_mode
 5526 00b8 00000000 		.word	g_rx
 5527 00bc 00000000 		.word	PWM_IMU_1
 5528 00c0 00000000 		.word	PWM_IMU_2
 5529              		.cfi_endproc
 5530              	.LFE105:
 5531              		.size	commReadIMUFromSH, .-commReadIMUFromSH
 5532              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 5533              		.align	2
 5534              		.global	commReadResCurrFromSH
 5535              		.thumb
 5536              		.thumb_func
 5537              		.type	commReadResCurrFromSH, %function
 5538              	commReadResCurrFromSH:
 5539              	.LFB106:
1184:..\src/command_processing.c **** 
1185:..\src/command_processing.c **** //==============================================================================
1186:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
1187:..\src/command_processing.c **** //==============================================================================
1188:..\src/command_processing.c **** 
1189:..\src/command_processing.c **** int16 commReadResCurrFromSH()
1190:..\src/command_processing.c **** {
 5540              		.loc 1 1190 0
 5541              		.cfi_startproc
 5542              		@ args = 0, pretend = 0, frame = 32
 5543              		@ frame_needed = 1, uses_anonymous_args = 0
 5544 0000 80B5     		push	{r7, lr}
 5545              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 138


 5546              		.cfi_offset 7, -8
 5547              		.cfi_offset 14, -4
 5548 0002 88B0     		sub	sp, sp, #32
 5549              		.cfi_def_cfa_offset 40
 5550 0004 00AF     		add	r7, sp, #0
 5551              		.cfi_def_cfa_register 7
1191:..\src/command_processing.c ****     uint8 packet_data[16];
1192:..\src/command_processing.c ****     uint8 packet_length;
1193:..\src/command_processing.c ****     int16 curr_diff = 0;
 5552              		.loc 1 1193 0
 5553 0006 0023     		movs	r3, #0
 5554 0008 FB83     		strh	r3, [r7, #30]	@ movhi
1194:..\src/command_processing.c ****     uint32 t_start, t_end;
1195:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 5555              		.loc 1 1195 0
 5556 000a 0123     		movs	r3, #1
 5557 000c 7B77     		strb	r3, [r7, #29]
1196:..\src/command_processing.c **** 
1197:..\src/command_processing.c ****     packet_length = 2;
 5558              		.loc 1 1197 0
 5559 000e 0223     		movs	r3, #2
 5560 0010 3B77     		strb	r3, [r7, #28]
1198:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 5561              		.loc 1 1198 0
 5562 0012 8C23     		movs	r3, #140
 5563 0014 3B71     		strb	r3, [r7, #4]
1199:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 5564              		.loc 1 1199 0
 5565 0016 8C23     		movs	r3, #140
 5566 0018 7B71     		strb	r3, [r7, #5]
1200:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, c_mem.MS.slave_ID);
 5567              		.loc 1 1200 0
 5568 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 5569 001c 99B2     		uxth	r1, r3
 5570 001e 1D4B     		ldr	r3, .L276
 5571 0020 93F84120 		ldrb	r2, [r3, #65]	@ zero_extendqisi2
 5572 0024 3B1D     		adds	r3, r7, #4
 5573 0026 1846     		mov	r0, r3
 5574 0028 FFF7FEFF 		bl	commWriteID
1201:..\src/command_processing.c **** 
1202:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 5575              		.loc 1 1202 0
 5576 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 5577 0030 0346     		mov	r3, r0
 5578 0032 BB61     		str	r3, [r7, #24]
1203:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 5579              		.loc 1 1203 0
 5580 0034 18E0     		b	.L270
 5581              	.L273:
1204:..\src/command_processing.c ****         if (interrupt_flag){
 5582              		.loc 1 1204 0
 5583 0036 184B     		ldr	r3, .L276+4
 5584 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5585 003a 002B     		cmp	r3, #0
 5586 003c 04D0     		beq	.L271
1205:..\src/command_processing.c ****             interrupt_flag = FALSE;
 5587              		.loc 1 1205 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 139


 5588 003e 164B     		ldr	r3, .L276+4
 5589 0040 0022     		movs	r2, #0
 5590 0042 1A70     		strb	r2, [r3]
1206:..\src/command_processing.c ****             interrupt_manager();
 5591              		.loc 1 1206 0
 5592 0044 FFF7FEFF 		bl	interrupt_manager
 5593              	.L271:
1207:..\src/command_processing.c ****         }
1208:..\src/command_processing.c **** 
1209:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 5594              		.loc 1 1209 0
 5595 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 5596 004c 0346     		mov	r3, r0
 5597 004e 7B61     		str	r3, [r7, #20]
1210:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 5598              		.loc 1 1210 0
 5599 0050 BA69     		ldr	r2, [r7, #24]
 5600 0052 7B69     		ldr	r3, [r7, #20]
 5601 0054 D31A     		subs	r3, r2, r3
 5602 0056 114A     		ldr	r2, .L276+8
 5603 0058 9342     		cmp	r3, r2
 5604 005a 05D9     		bls	.L270
1211:..\src/command_processing.c ****             read_flag = FALSE;
 5605              		.loc 1 1211 0
 5606 005c 0023     		movs	r3, #0
 5607 005e 7B77     		strb	r3, [r7, #29]
1212:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 5608              		.loc 1 1212 0
 5609 0060 0F4B     		ldr	r3, .L276+12
 5610 0062 0022     		movs	r2, #0
 5611 0064 1A70     		strb	r2, [r3]
1213:..\src/command_processing.c ****             break;
 5612              		.loc 1 1213 0
 5613 0066 03E0     		b	.L272
 5614              	.L270:
1203:..\src/command_processing.c ****         if (interrupt_flag){
 5615              		.loc 1 1203 0
 5616 0068 0E4B     		ldr	r3, .L276+16
 5617 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5618 006c 8E2B     		cmp	r3, #142
 5619 006e E2D1     		bne	.L273
 5620              	.L272:
1214:..\src/command_processing.c ****         }
1215:..\src/command_processing.c ****     }
1216:..\src/command_processing.c **** 
1217:..\src/command_processing.c ****     if (read_flag) {
 5621              		.loc 1 1217 0
 5622 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 5623 0072 002B     		cmp	r3, #0
 5624 0074 08D0     		beq	.L274
1218:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 5625              		.loc 1 1218 0
 5626 0076 0B4B     		ldr	r3, .L276+16
 5627 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5628 007a 1B02     		lsls	r3, r3, #8
 5629 007c 1AB2     		sxth	r2, r3
 5630 007e 094B     		ldr	r3, .L276+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 140


 5631 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5632 0082 1BB2     		sxth	r3, r3
 5633 0084 1343     		orrs	r3, r3, r2
 5634 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 5635              	.L274:
1219:..\src/command_processing.c ****     }
1220:..\src/command_processing.c ****     
1221:..\src/command_processing.c ****     return curr_diff;
 5636              		.loc 1 1221 0
 5637 0088 B7F91E30 		ldrsh	r3, [r7, #30]
1222:..\src/command_processing.c **** }
 5638              		.loc 1 1222 0
 5639 008c 1846     		mov	r0, r3
 5640 008e 2037     		adds	r7, r7, #32
 5641              		.cfi_def_cfa_offset 8
 5642 0090 BD46     		mov	sp, r7
 5643              		.cfi_def_cfa_register 13
 5644              		@ sp needed
 5645 0092 80BD     		pop	{r7, pc}
 5646              	.L277:
 5647              		.align	2
 5648              	.L276:
 5649 0094 00000000 		.word	c_mem
 5650 0098 00000000 		.word	interrupt_flag
 5651 009c 20AA4400 		.word	4500000
 5652 00a0 00000000 		.word	master_mode
 5653 00a4 00000000 		.word	g_rx
 5654              		.cfi_endproc
 5655              	.LFE106:
 5656              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 5657              		.section	.text.cmd_set_baudrate,"ax",%progbits
 5658              		.align	2
 5659              		.global	cmd_set_baudrate
 5660              		.thumb
 5661              		.thumb_func
 5662              		.type	cmd_set_baudrate, %function
 5663              	cmd_set_baudrate:
 5664              	.LFB107:
1223:..\src/command_processing.c **** 
1224:..\src/command_processing.c **** 
1225:..\src/command_processing.c **** /////////////////////////////////////////////////////////////////////////////////////
1226:..\src/command_processing.c **** 
1227:..\src/command_processing.c **** void cmd_set_baudrate(){
 5665              		.loc 1 1227 0
 5666              		.cfi_startproc
 5667              		@ args = 0, pretend = 0, frame = 0
 5668              		@ frame_needed = 1, uses_anonymous_args = 0
 5669              		@ link register save eliminated.
 5670 0000 80B4     		push	{r7}
 5671              		.cfi_def_cfa_offset 4
 5672              		.cfi_offset 7, -4
 5673 0002 00AF     		add	r7, sp, #0
 5674              		.cfi_def_cfa_register 7
1228:..\src/command_processing.c ****     
1229:..\src/command_processing.c **** }
 5675              		.loc 1 1229 0
 5676 0004 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 141


 5677 0006 BD46     		mov	sp, r7
 5678              		.cfi_def_cfa_register 13
 5679              		@ sp needed
 5680 0008 80BC     		pop	{r7}
 5681              		.cfi_restore 7
 5682              		.cfi_def_cfa_offset 0
 5683 000a 7047     		bx	lr
 5684              		.cfi_endproc
 5685              	.LFE107:
 5686              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 5687              		.section	.text.cmd_ping,"ax",%progbits
 5688              		.align	2
 5689              		.global	cmd_ping
 5690              		.thumb
 5691              		.thumb_func
 5692              		.type	cmd_ping, %function
 5693              	cmd_ping:
 5694              	.LFB108:
1230:..\src/command_processing.c **** 
1231:..\src/command_processing.c **** void cmd_ping(){
 5695              		.loc 1 1231 0
 5696              		.cfi_startproc
 5697              		@ args = 0, pretend = 0, frame = 8
 5698              		@ frame_needed = 1, uses_anonymous_args = 0
 5699 0000 80B5     		push	{r7, lr}
 5700              		.cfi_def_cfa_offset 8
 5701              		.cfi_offset 7, -8
 5702              		.cfi_offset 14, -4
 5703 0002 82B0     		sub	sp, sp, #8
 5704              		.cfi_def_cfa_offset 16
 5705 0004 00AF     		add	r7, sp, #0
 5706              		.cfi_def_cfa_register 7
1232:..\src/command_processing.c **** 
1233:..\src/command_processing.c ****     uint8 packet_data[2];
1234:..\src/command_processing.c **** 
1235:..\src/command_processing.c ****     // Header
1236:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 5707              		.loc 1 1236 0
 5708 0006 0023     		movs	r3, #0
 5709 0008 3B71     		strb	r3, [r7, #4]
1237:..\src/command_processing.c ****     
1238:..\src/command_processing.c ****     // Load Payload
1239:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 5710              		.loc 1 1239 0
 5711 000a 0023     		movs	r3, #0
 5712 000c 7B71     		strb	r3, [r7, #5]
1240:..\src/command_processing.c **** 
1241:..\src/command_processing.c ****     // Send Package to uart
1242:..\src/command_processing.c ****     commWrite(packet_data, 2);
 5713              		.loc 1 1242 0
 5714 000e 3B1D     		adds	r3, r7, #4
 5715 0010 0221     		movs	r1, #2
 5716 0012 1846     		mov	r0, r3
 5717 0014 FFF7FEFF 		bl	commWrite
1243:..\src/command_processing.c **** }
 5718              		.loc 1 1243 0
 5719 0018 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 142


 5720 001a 0837     		adds	r7, r7, #8
 5721              		.cfi_def_cfa_offset 8
 5722 001c BD46     		mov	sp, r7
 5723              		.cfi_def_cfa_register 13
 5724              		@ sp needed
 5725 001e 80BD     		pop	{r7, pc}
 5726              		.cfi_endproc
 5727              	.LFE108:
 5728              		.size	cmd_ping, .-cmd_ping
 5729              		.section	.text.cmd_get_inputs,"ax",%progbits
 5730              		.align	2
 5731              		.global	cmd_get_inputs
 5732              		.thumb
 5733              		.thumb_func
 5734              		.type	cmd_get_inputs, %function
 5735              	cmd_get_inputs:
 5736              	.LFB109:
1244:..\src/command_processing.c **** 
1245:..\src/command_processing.c **** void cmd_get_inputs(){
 5737              		.loc 1 1245 0
 5738              		.cfi_startproc
 5739              		@ args = 0, pretend = 0, frame = 0
 5740              		@ frame_needed = 1, uses_anonymous_args = 0
 5741              		@ link register save eliminated.
 5742 0000 80B4     		push	{r7}
 5743              		.cfi_def_cfa_offset 4
 5744              		.cfi_offset 7, -4
 5745 0002 00AF     		add	r7, sp, #0
 5746              		.cfi_def_cfa_register 7
1246:..\src/command_processing.c **** 
1247:..\src/command_processing.c **** }
 5747              		.loc 1 1247 0
 5748 0004 00BF     		nop
 5749 0006 BD46     		mov	sp, r7
 5750              		.cfi_def_cfa_register 13
 5751              		@ sp needed
 5752 0008 80BC     		pop	{r7}
 5753              		.cfi_restore 7
 5754              		.cfi_def_cfa_offset 0
 5755 000a 7047     		bx	lr
 5756              		.cfi_endproc
 5757              	.LFE109:
 5758              		.size	cmd_get_inputs, .-cmd_get_inputs
 5759              		.section	.text.cmd_store_params,"ax",%progbits
 5760              		.align	2
 5761              		.global	cmd_store_params
 5762              		.thumb
 5763              		.thumb_func
 5764              		.type	cmd_store_params, %function
 5765              	cmd_store_params:
 5766              	.LFB110:
1248:..\src/command_processing.c **** 
1249:..\src/command_processing.c **** void cmd_store_params(){
 5767              		.loc 1 1249 0
 5768              		.cfi_startproc
 5769              		@ args = 0, pretend = 0, frame = 8
 5770              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 143


 5771 0000 80B5     		push	{r7, lr}
 5772              		.cfi_def_cfa_offset 8
 5773              		.cfi_offset 7, -8
 5774              		.cfi_offset 14, -4
 5775 0002 82B0     		sub	sp, sp, #8
 5776              		.cfi_def_cfa_offset 16
 5777 0004 00AF     		add	r7, sp, #0
 5778              		.cfi_def_cfa_register 7
1250:..\src/command_processing.c ****     
1251:..\src/command_processing.c ****     uint8 CYDATA packet_length = 2;
 5779              		.loc 1 1251 0
 5780 0006 0223     		movs	r3, #2
 5781 0008 FB71     		strb	r3, [r7, #7]
1252:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
1253:..\src/command_processing.c ****     uint8 CYDATA old_id;
1254:..\src/command_processing.c ****       
1255:..\src/command_processing.c ****     // Store params 
1256:..\src/command_processing.c **** 
1257:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 5782              		.loc 1 1257 0
 5783 000a 1F4B     		ldr	r3, .L289
 5784 000c 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 5785 000e 1F4B     		ldr	r3, .L289+4
 5786 0010 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5787 0012 9A42     		cmp	r2, r3
 5788 0014 20D0     		beq	.L282
1258:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 5789              		.loc 1 1258 0
 5790 0016 1C4B     		ldr	r3, .L289
 5791 0018 1B7C     		ldrb	r3, [r3, #16]
 5792 001a BB71     		strb	r3, [r7, #6]
1259:..\src/command_processing.c ****         if(memStore(0)) {
 5793              		.loc 1 1259 0
 5794 001c 0020     		movs	r0, #0
 5795 001e FFF7FEFF 		bl	memStore
 5796 0022 0346     		mov	r3, r0
 5797 0024 002B     		cmp	r3, #0
 5798 0026 0BD0     		beq	.L283
1260:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 5799              		.loc 1 1260 0
 5800 0028 0123     		movs	r3, #1
 5801 002a 3B71     		strb	r3, [r7, #4]
1261:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 5802              		.loc 1 1261 0
 5803 002c 0123     		movs	r3, #1
 5804 002e 7B71     		strb	r3, [r7, #5]
1262:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_length, old_id);
 5805              		.loc 1 1262 0
 5806 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5807 0032 99B2     		uxth	r1, r3
 5808 0034 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5809 0036 3B1D     		adds	r3, r7, #4
 5810 0038 1846     		mov	r0, r3
 5811 003a FFF7FEFF 		bl	commWrite_old_id
 5812 003e 18E0     		b	.L285
 5813              	.L283:
1263:..\src/command_processing.c ****         }    
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 144


1264:..\src/command_processing.c ****         else{
1265:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 5814              		.loc 1 1265 0
 5815 0040 0023     		movs	r3, #0
 5816 0042 3B71     		strb	r3, [r7, #4]
1266:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 5817              		.loc 1 1266 0
 5818 0044 0023     		movs	r3, #0
 5819 0046 7B71     		strb	r3, [r7, #5]
1267:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_length, old_id);
 5820              		.loc 1 1267 0
 5821 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5822 004a 99B2     		uxth	r1, r3
 5823 004c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5824 004e 3B1D     		adds	r3, r7, #4
 5825 0050 1846     		mov	r0, r3
 5826 0052 FFF7FEFF 		bl	commWrite_old_id
 5827 0056 0CE0     		b	.L285
 5828              	.L282:
1268:..\src/command_processing.c ****         }
1269:..\src/command_processing.c ****     }    
1270:..\src/command_processing.c ****     else {
1271:..\src/command_processing.c ****         if(memStore(0))
 5829              		.loc 1 1271 0
 5830 0058 0020     		movs	r0, #0
 5831 005a FFF7FEFF 		bl	memStore
 5832 005e 0346     		mov	r3, r0
 5833 0060 002B     		cmp	r3, #0
 5834 0062 03D0     		beq	.L286
1272:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 5835              		.loc 1 1272 0
 5836 0064 0120     		movs	r0, #1
 5837 0066 FFF7FEFF 		bl	sendAcknowledgment
 5838 006a 02E0     		b	.L285
 5839              	.L286:
1273:..\src/command_processing.c ****         else
1274:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 5840              		.loc 1 1274 0
 5841 006c 0020     		movs	r0, #0
 5842 006e FFF7FEFF 		bl	sendAcknowledgment
 5843              	.L285:
1275:..\src/command_processing.c ****     }
1276:..\src/command_processing.c ****     
1277:..\src/command_processing.c ****     // FW reset (if necessary)
1278:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 5844              		.loc 1 1278 0
 5845 0072 074B     		ldr	r3, .L289+8
 5846 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5847 0076 012B     		cmp	r3, #1
 5848 0078 01D1     		bne	.L288
1279:..\src/command_processing.c ****         CySoftwareReset();
 5849              		.loc 1 1279 0
 5850 007a FFF7FEFF 		bl	CySoftwareReset
 5851              	.L288:
1280:..\src/command_processing.c ****     }
1281:..\src/command_processing.c **** }
 5852              		.loc 1 1281 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 145


 5853 007e 00BF     		nop
 5854 0080 0837     		adds	r7, r7, #8
 5855              		.cfi_def_cfa_offset 8
 5856 0082 BD46     		mov	sp, r7
 5857              		.cfi_def_cfa_register 13
 5858              		@ sp needed
 5859 0084 80BD     		pop	{r7, pc}
 5860              	.L290:
 5861 0086 00BF     		.align	2
 5862              	.L289:
 5863 0088 00000000 		.word	c_mem
 5864 008c 00000000 		.word	g_mem
 5865 0090 00000000 		.word	reset_PSoC_flag
 5866              		.cfi_endproc
 5867              	.LFE110:
 5868              		.size	cmd_store_params, .-cmd_store_params
 5869              		.section	.text.cmd_get_emg,"ax",%progbits
 5870              		.align	2
 5871              		.global	cmd_get_emg
 5872              		.thumb
 5873              		.thumb_func
 5874              		.type	cmd_get_emg, %function
 5875              	cmd_get_emg:
 5876              	.LFB111:
1282:..\src/command_processing.c **** 
1283:..\src/command_processing.c **** void cmd_get_emg(){
 5877              		.loc 1 1283 0
 5878              		.cfi_startproc
 5879              		@ args = 0, pretend = 0, frame = 16
 5880              		@ frame_needed = 1, uses_anonymous_args = 0
 5881 0000 80B5     		push	{r7, lr}
 5882              		.cfi_def_cfa_offset 8
 5883              		.cfi_offset 7, -8
 5884              		.cfi_offset 14, -4
 5885 0002 84B0     		sub	sp, sp, #16
 5886              		.cfi_def_cfa_offset 24
 5887 0004 00AF     		add	r7, sp, #0
 5888              		.cfi_def_cfa_register 7
1284:..\src/command_processing.c ****     
1285:..\src/command_processing.c ****     uint8 packet_data[6];
1286:..\src/command_processing.c ****     int16 aux_int16;
1287:..\src/command_processing.c ****     
1288:..\src/command_processing.c ****     // Header        
1289:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 5889              		.loc 1 1289 0
 5890 0006 8823     		movs	r3, #136
 5891 0008 3B72     		strb	r3, [r7, #8]
1290:..\src/command_processing.c ****     
1291:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 5892              		.loc 1 1291 0
 5893 000a 144B     		ldr	r3, .L292
 5894 000c 1B68     		ldr	r3, [r3]
 5895 000e 1BB2     		sxth	r3, r3
 5896 0010 FB80     		strh	r3, [r7, #6]	@ movhi
1292:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 5897              		.loc 1 1292 0
 5898 0012 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 146


 5899 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5900 0016 BB72     		strb	r3, [r7, #10]
1293:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 5901              		.loc 1 1293 0
 5902 0018 BB1D     		adds	r3, r7, #6
 5903 001a 0133     		adds	r3, r3, #1
 5904 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5905 001e 7B72     		strb	r3, [r7, #9]
1294:..\src/command_processing.c ****     
1295:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 5906              		.loc 1 1295 0
 5907 0020 0E4B     		ldr	r3, .L292
 5908 0022 5B68     		ldr	r3, [r3, #4]
 5909 0024 1BB2     		sxth	r3, r3
 5910 0026 FB80     		strh	r3, [r7, #6]	@ movhi
1296:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 5911              		.loc 1 1296 0
 5912 0028 BB1D     		adds	r3, r7, #6
 5913 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5914 002c 3B73     		strb	r3, [r7, #12]
1297:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 5915              		.loc 1 1297 0
 5916 002e BB1D     		adds	r3, r7, #6
 5917 0030 0133     		adds	r3, r3, #1
 5918 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5919 0034 FB72     		strb	r3, [r7, #11]
1298:..\src/command_processing.c **** 
1299:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 5920              		.loc 1 1299 0
 5921 0036 07F10803 		add	r3, r7, #8
 5922 003a 0521     		movs	r1, #5
 5923 003c 1846     		mov	r0, r3
 5924 003e FFF7FEFF 		bl	LCRChecksum
 5925 0042 0346     		mov	r3, r0
 5926 0044 7B73     		strb	r3, [r7, #13]
1300:..\src/command_processing.c **** 
1301:..\src/command_processing.c ****     commWrite(packet_data, 6);
 5927              		.loc 1 1301 0
 5928 0046 07F10803 		add	r3, r7, #8
 5929 004a 0621     		movs	r1, #6
 5930 004c 1846     		mov	r0, r3
 5931 004e FFF7FEFF 		bl	commWrite
1302:..\src/command_processing.c **** 
1303:..\src/command_processing.c **** }
 5932              		.loc 1 1303 0
 5933 0052 00BF     		nop
 5934 0054 1037     		adds	r7, r7, #16
 5935              		.cfi_def_cfa_offset 8
 5936 0056 BD46     		mov	sp, r7
 5937              		.cfi_def_cfa_register 13
 5938              		@ sp needed
 5939 0058 80BD     		pop	{r7, pc}
 5940              	.L293:
 5941 005a 00BF     		.align	2
 5942              	.L292:
 5943 005c 00000000 		.word	g_adc_measOld
 5944              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 147


 5945              	.LFE111:
 5946              		.size	cmd_get_emg, .-cmd_get_emg
 5947              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 5948              		.align	2
 5949              		.global	cmd_get_imu_readings
 5950              		.thumb
 5951              		.thumb_func
 5952              		.type	cmd_get_imu_readings, %function
 5953              	cmd_get_imu_readings:
 5954              	.LFB112:
1304:..\src/command_processing.c **** 
1305:..\src/command_processing.c **** void cmd_get_imu_readings(){
 5955              		.loc 1 1305 0
 5956              		.cfi_startproc
 5957              		@ args = 0, pretend = 0, frame = 0
 5958              		@ frame_needed = 1, uses_anonymous_args = 0
 5959              		@ link register save eliminated.
 5960 0000 80B4     		push	{r7}
 5961              		.cfi_def_cfa_offset 4
 5962              		.cfi_offset 7, -4
 5963 0002 00AF     		add	r7, sp, #0
 5964              		.cfi_def_cfa_register 7
1306:..\src/command_processing.c ****  
1307:..\src/command_processing.c **** }
 5965              		.loc 1 1307 0
 5966 0004 00BF     		nop
 5967 0006 BD46     		mov	sp, r7
 5968              		.cfi_def_cfa_register 13
 5969              		@ sp needed
 5970 0008 80BC     		pop	{r7}
 5971              		.cfi_restore 7
 5972              		.cfi_def_cfa_offset 0
 5973 000a 7047     		bx	lr
 5974              		.cfi_endproc
 5975              	.LFE112:
 5976              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 5977              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 5978              		.align	2
 5979              		.global	cmd_get_encoder_map
 5980              		.thumb
 5981              		.thumb_func
 5982              		.type	cmd_get_encoder_map, %function
 5983              	cmd_get_encoder_map:
 5984              	.LFB113:
1308:..\src/command_processing.c **** 
1309:..\src/command_processing.c **** void cmd_get_encoder_map(){
 5985              		.loc 1 1309 0
 5986              		.cfi_startproc
 5987              		@ args = 0, pretend = 0, frame = 0
 5988              		@ frame_needed = 1, uses_anonymous_args = 0
 5989              		@ link register save eliminated.
 5990 0000 80B4     		push	{r7}
 5991              		.cfi_def_cfa_offset 4
 5992              		.cfi_offset 7, -4
 5993 0002 00AF     		add	r7, sp, #0
 5994              		.cfi_def_cfa_register 7
1310:..\src/command_processing.c ****    }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 148


 5995              		.loc 1 1310 0
 5996 0004 00BF     		nop
 5997 0006 BD46     		mov	sp, r7
 5998              		.cfi_def_cfa_register 13
 5999              		@ sp needed
 6000 0008 80BC     		pop	{r7}
 6001              		.cfi_restore 7
 6002              		.cfi_def_cfa_offset 0
 6003 000a 7047     		bx	lr
 6004              		.cfi_endproc
 6005              	.LFE113:
 6006              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 6007              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 6008              		.align	2
 6009              		.global	cmd_get_encoder_raw
 6010              		.thumb
 6011              		.thumb_func
 6012              		.type	cmd_get_encoder_raw, %function
 6013              	cmd_get_encoder_raw:
 6014              	.LFB114:
1311:..\src/command_processing.c **** 
1312:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 6015              		.loc 1 1312 0
 6016              		.cfi_startproc
 6017              		@ args = 0, pretend = 0, frame = 0
 6018              		@ frame_needed = 1, uses_anonymous_args = 0
 6019              		@ link register save eliminated.
 6020 0000 80B4     		push	{r7}
 6021              		.cfi_def_cfa_offset 4
 6022              		.cfi_offset 7, -4
 6023 0002 00AF     		add	r7, sp, #0
 6024              		.cfi_def_cfa_register 7
1313:..\src/command_processing.c ****    }
 6025              		.loc 1 1313 0
 6026 0004 00BF     		nop
 6027 0006 BD46     		mov	sp, r7
 6028              		.cfi_def_cfa_register 13
 6029              		@ sp needed
 6030 0008 80BC     		pop	{r7}
 6031              		.cfi_restore 7
 6032              		.cfi_def_cfa_offset 0
 6033 000a 7047     		bx	lr
 6034              		.cfi_endproc
 6035              	.LFE114:
 6036              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 6037              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 6038              		.align	2
 6039              		.global	cmd_get_ADC_map
 6040              		.thumb
 6041              		.thumb_func
 6042              		.type	cmd_get_ADC_map, %function
 6043              	cmd_get_ADC_map:
 6044              	.LFB115:
1314:..\src/command_processing.c **** 
1315:..\src/command_processing.c **** void cmd_get_ADC_map(){
 6045              		.loc 1 1315 0
 6046              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 149


 6047              		@ args = 0, pretend = 0, frame = 0
 6048              		@ frame_needed = 1, uses_anonymous_args = 0
 6049              		@ link register save eliminated.
 6050 0000 80B4     		push	{r7}
 6051              		.cfi_def_cfa_offset 4
 6052              		.cfi_offset 7, -4
 6053 0002 00AF     		add	r7, sp, #0
 6054              		.cfi_def_cfa_register 7
1316:..\src/command_processing.c ****    }
 6055              		.loc 1 1316 0
 6056 0004 00BF     		nop
 6057 0006 BD46     		mov	sp, r7
 6058              		.cfi_def_cfa_register 13
 6059              		@ sp needed
 6060 0008 80BC     		pop	{r7}
 6061              		.cfi_restore 7
 6062              		.cfi_def_cfa_offset 0
 6063 000a 7047     		bx	lr
 6064              		.cfi_endproc
 6065              	.LFE115:
 6066              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 6067              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 6068              		.align	2
 6069              		.global	cmd_get_ADC_raw
 6070              		.thumb
 6071              		.thumb_func
 6072              		.type	cmd_get_ADC_raw, %function
 6073              	cmd_get_ADC_raw:
 6074              	.LFB116:
1317:..\src/command_processing.c **** 
1318:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 6075              		.loc 1 1318 0
 6076              		.cfi_startproc
 6077              		@ args = 0, pretend = 0, frame = 0
 6078              		@ frame_needed = 1, uses_anonymous_args = 0
 6079              		@ link register save eliminated.
 6080 0000 80B4     		push	{r7}
 6081              		.cfi_def_cfa_offset 4
 6082              		.cfi_offset 7, -4
 6083 0002 00AF     		add	r7, sp, #0
 6084              		.cfi_def_cfa_register 7
1319:..\src/command_processing.c ****    
1320:..\src/command_processing.c **** }
 6085              		.loc 1 1320 0
 6086 0004 00BF     		nop
 6087 0006 BD46     		mov	sp, r7
 6088              		.cfi_def_cfa_register 13
 6089              		@ sp needed
 6090 0008 80BC     		pop	{r7}
 6091              		.cfi_restore 7
 6092              		.cfi_def_cfa_offset 0
 6093 000a 7047     		bx	lr
 6094              		.cfi_endproc
 6095              	.LFE116:
 6096              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 6097              		.section	.text.cmd_get_SD_file,"ax",%progbits
 6098              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 150


 6099              		.global	cmd_get_SD_file
 6100              		.thumb
 6101              		.thumb_func
 6102              		.type	cmd_get_SD_file, %function
 6103              	cmd_get_SD_file:
 6104              	.LFB117:
1321:..\src/command_processing.c **** 
1322:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 6105              		.loc 1 1322 0
 6106              		.cfi_startproc
 6107              		@ args = 0, pretend = 0, frame = 20064
 6108              		@ frame_needed = 1, uses_anonymous_args = 0
 6109 0000 80B5     		push	{r7, lr}
 6110              		.cfi_def_cfa_offset 8
 6111              		.cfi_offset 7, -8
 6112              		.cfi_offset 14, -4
 6113 0002 ADF59C4D 		sub	sp, sp, #19968
 6114              		.cfi_def_cfa_offset 19976
 6115 0006 98B0     		sub	sp, sp, #96
 6116              		.cfi_def_cfa_offset 20072
 6117 0008 00AF     		add	r7, sp, #0
 6118              		.cfi_def_cfa_register 7
 6119 000a 0246     		mov	r2, r0
 6120 000c 07F16003 		add	r3, r7, #96
 6121 0010 5A3B     		subs	r3, r3, #90
 6122 0012 1A80     		strh	r2, [r3]	@ movhi
1323:..\src/command_processing.c ****     
1324:..\src/command_processing.c ****     uint8 i = 0;
 6123              		.loc 1 1324 0
 6124 0014 0023     		movs	r3, #0
 6125 0016 07F59C42 		add	r2, r7, #19968
 6126 001a 02F15F02 		add	r2, r2, #95
 6127 001e 1370     		strb	r3, [r2]
1325:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 6128              		.loc 1 1325 0
 6129 0020 0023     		movs	r3, #0
 6130 0022 07F59C42 		add	r2, r7, #19968
 6131 0026 02F12C02 		add	r2, r2, #44
 6132 002a 1360     		str	r3, [r2]
 6133 002c 07F59C43 		add	r3, r7, #19968
 6134 0030 03F13003 		add	r3, r3, #48
 6135 0034 2E22     		movs	r2, #46
 6136 0036 0021     		movs	r1, #0
 6137 0038 1846     		mov	r0, r3
 6138 003a FFF7FEFF 		bl	memset
1326:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 6139              		.loc 1 1326 0
 6140 003e 07F16003 		add	r3, r7, #96
 6141 0042 543B     		subs	r3, r3, #84
 6142 0044 0022     		movs	r2, #0
 6143 0046 1A60     		str	r2, [r3]
 6144 0048 0433     		adds	r3, r3, #4
 6145 004a 44F61C62 		movw	r2, #19996
 6146 004e 0021     		movs	r1, #0
 6147 0050 1846     		mov	r0, r3
 6148 0052 FFF7FEFF 		bl	memset
1327:..\src/command_processing.c ****     strcpy(filename, "");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 151


 6149              		.loc 1 1327 0
 6150 0056 3C4B     		ldr	r3, .L304
 6151 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6152 005a 07F59C42 		add	r2, r7, #19968
 6153 005e 02F12C02 		add	r2, r2, #44
 6154 0062 1370     		strb	r3, [r2]
1328:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 6155              		.loc 1 1328 0
 6156 0064 384B     		ldr	r3, .L304
 6157 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6158 0068 07F16003 		add	r3, r7, #96
 6159 006c 543B     		subs	r3, r3, #84
 6160 006e 1A70     		strb	r2, [r3]
1329:..\src/command_processing.c ****     
1330:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 6161              		.loc 1 1330 0
 6162 0070 0023     		movs	r3, #0
 6163 0072 07F59C42 		add	r2, r7, #19968
 6164 0076 02F15F02 		add	r2, r2, #95
 6165 007a 1370     		strb	r3, [r2]
 6166 007c 1DE0     		b	.L300
 6167              	.L301:
1331:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 6168              		.loc 1 1331 0 discriminator 3
 6169 007e 07F59C43 		add	r3, r7, #19968
 6170 0082 03F15F03 		add	r3, r3, #95
 6171 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6172 0088 07F59C42 		add	r2, r7, #19968
 6173 008c 02F12C02 		add	r2, r2, #44
 6174 0090 1344     		add	r3, r3, r2
 6175 0092 07F59C42 		add	r2, r7, #19968
 6176 0096 02F15F02 		add	r2, r2, #95
 6177 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6178 009c 0332     		adds	r2, r2, #3
 6179 009e 2B49     		ldr	r1, .L304+4
 6180 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6181 00a2 1A70     		strb	r2, [r3]
1330:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 6182              		.loc 1 1330 0 discriminator 3
 6183 00a4 07F59C43 		add	r3, r7, #19968
 6184 00a8 03F15F03 		add	r3, r3, #95
 6185 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6186 00ae 0133     		adds	r3, r3, #1
 6187 00b0 07F59C42 		add	r2, r7, #19968
 6188 00b4 02F15F02 		add	r2, r2, #95
 6189 00b8 1370     		strb	r3, [r2]
 6190              	.L300:
1330:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 6191              		.loc 1 1330 0 is_stmt 0 discriminator 1
 6192 00ba 07F59C43 		add	r3, r7, #19968
 6193 00be 03F15F03 		add	r3, r3, #95
 6194 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6195 00c4 9AB2     		uxth	r2, r3
 6196 00c6 07F16003 		add	r3, r7, #96
 6197 00ca 5A3B     		subs	r3, r3, #90
 6198 00cc 1B88     		ldrh	r3, [r3]
 6199 00ce 9342     		cmp	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 152


 6200 00d0 D5D8     		bhi	.L301
1332:..\src/command_processing.c ****     }
1333:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 6201              		.loc 1 1333 0 is_stmt 1
 6202 00d2 07F59C43 		add	r3, r7, #19968
 6203 00d6 03F15F03 		add	r3, r3, #95
 6204 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6205 00dc 07F59C42 		add	r2, r7, #19968
 6206 00e0 02F12C02 		add	r2, r2, #44
 6207 00e4 1344     		add	r3, r3, r2
 6208 00e6 0022     		movs	r2, #0
 6209 00e8 1A70     		strb	r2, [r3]
1334:..\src/command_processing.c ****      
1335:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
1336:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 6210              		.loc 1 1336 0
 6211 00ea 07F59C43 		add	r3, r7, #19968
 6212 00ee 03F12C03 		add	r3, r3, #44
 6213 00f2 1749     		ldr	r1, .L304+8
 6214 00f4 1846     		mov	r0, r3
 6215 00f6 FFF7FEFF 		bl	strcmp
 6216 00fa 0346     		mov	r3, r0
 6217 00fc 002B     		cmp	r3, #0
 6218 00fe 0CD0     		beq	.L302
1337:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 6219              		.loc 1 1337 0
 6220 0100 07F16003 		add	r3, r7, #96
 6221 0104 543B     		subs	r3, r3, #84
 6222 0106 07F59C40 		add	r0, r7, #19968
 6223 010a 00F12C00 		add	r0, r0, #44
 6224 010e 44F62062 		movw	r2, #20000
 6225 0112 1946     		mov	r1, r3
 6226 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 6227 0118 07E0     		b	.L303
 6228              	.L302:
1338:..\src/command_processing.c ****     }
1339:..\src/command_processing.c ****     else {
1340:..\src/command_processing.c ****         //It is the currently open working file
1341:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 6229              		.loc 1 1341 0
 6230 011a 07F16003 		add	r3, r7, #96
 6231 011e 543B     		subs	r3, r3, #84
 6232 0120 44F62061 		movw	r1, #20000
 6233 0124 1846     		mov	r0, r3
 6234 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 6235              	.L303:
1342:..\src/command_processing.c ****     }
1343:..\src/command_processing.c **** 
1344:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
1345:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
1346:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 6236              		.loc 1 1346 0
 6237 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1347:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 6238              		.loc 1 1347 0
 6239 012e 07F16003 		add	r3, r7, #96
 6240 0132 543B     		subs	r3, r3, #84
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 153


 6241 0134 1846     		mov	r0, r3
 6242 0136 FFF7FEFF 		bl	UART_RS485_PutString
1348:..\src/command_processing.c **** }
 6243              		.loc 1 1348 0
 6244 013a 00BF     		nop
 6245 013c 07F59C47 		add	r7, r7, #19968
 6246 0140 6037     		adds	r7, r7, #96
 6247              		.cfi_def_cfa_offset 8
 6248 0142 BD46     		mov	sp, r7
 6249              		.cfi_def_cfa_register 13
 6250              		@ sp needed
 6251 0144 80BD     		pop	{r7, pc}
 6252              	.L305:
 6253 0146 00BF     		.align	2
 6254              	.L304:
 6255 0148 00000000 		.word	.LC8
 6256 014c 00000000 		.word	g_rx
 6257 0150 00000000 		.word	sdFile
 6258              		.cfi_endproc
 6259              	.LFE117:
 6260              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 6261              		.section	.text.cmd_remove_SD_file,"ax",%progbits
 6262              		.align	2
 6263              		.global	cmd_remove_SD_file
 6264              		.thumb
 6265              		.thumb_func
 6266              		.type	cmd_remove_SD_file, %function
 6267              	cmd_remove_SD_file:
 6268              	.LFB118:
1349:..\src/command_processing.c **** 
1350:..\src/command_processing.c **** void cmd_remove_SD_file( uint16 filename_length ){
 6269              		.loc 1 1350 0
 6270              		.cfi_startproc
 6271              		@ args = 0, pretend = 0, frame = 8
 6272              		@ frame_needed = 1, uses_anonymous_args = 0
 6273              		@ link register save eliminated.
 6274 0000 80B4     		push	{r7}
 6275              		.cfi_def_cfa_offset 4
 6276              		.cfi_offset 7, -4
 6277 0002 83B0     		sub	sp, sp, #12
 6278              		.cfi_def_cfa_offset 16
 6279 0004 00AF     		add	r7, sp, #0
 6280              		.cfi_def_cfa_register 7
 6281 0006 0346     		mov	r3, r0
 6282 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1351:..\src/command_processing.c ****   
1352:..\src/command_processing.c **** }
 6283              		.loc 1 1352 0
 6284 000a 00BF     		nop
 6285 000c 0C37     		adds	r7, r7, #12
 6286              		.cfi_def_cfa_offset 4
 6287 000e BD46     		mov	sp, r7
 6288              		.cfi_def_cfa_register 13
 6289              		@ sp needed
 6290 0010 80BC     		pop	{r7}
 6291              		.cfi_restore 7
 6292              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 154


 6293 0012 7047     		bx	lr
 6294              		.cfi_endproc
 6295              	.LFE118:
 6296              		.size	cmd_remove_SD_file, .-cmd_remove_SD_file
 6297              		.global	__aeabi_i2f
 6298              		.global	__aeabi_f2d
 6299              		.global	__aeabi_ddiv
 6300              		.global	__aeabi_dmul
 6301              		.global	__aeabi_d2iz
 6302              		.section	.text.vibrotactile_control,"ax",%progbits
 6303              		.align	2
 6304              		.global	vibrotactile_control
 6305              		.thumb
 6306              		.thumb_func
 6307              		.type	vibrotactile_control, %function
 6308              	vibrotactile_control:
 6309              	.LFB119:
1353:..\src/command_processing.c **** 
1354:..\src/command_processing.c **** //==============================================================================
1355:..\src/command_processing.c **** //                                                          VIBROTACTILE CONTROL
1356:..\src/command_processing.c **** //==============================================================================
1357:..\src/command_processing.c **** /* It asks IMU values to the SoftHand and sets vibrotactile feedback device inputs proportionally.*
1358:..\src/command_processing.c **** 
1359:..\src/command_processing.c **** void vibrotactile_control() {
 6310              		.loc 1 1359 0
 6311              		.cfi_startproc
 6312              		@ args = 0, pretend = 0, frame = 8
 6313              		@ frame_needed = 1, uses_anonymous_args = 0
 6314 0000 90B5     		push	{r4, r7, lr}
 6315              		.cfi_def_cfa_offset 12
 6316              		.cfi_offset 4, -12
 6317              		.cfi_offset 7, -8
 6318              		.cfi_offset 14, -4
 6319 0002 83B0     		sub	sp, sp, #12
 6320              		.cfi_def_cfa_offset 24
 6321 0004 00AF     		add	r7, sp, #0
 6322              		.cfi_def_cfa_register 7
1360:..\src/command_processing.c ****     
1361:..\src/command_processing.c ****     uint8 i;
1362:..\src/command_processing.c ****     
1363:..\src/command_processing.c ****     commReadIMUFromSH();    
 6323              		.loc 1 1363 0
 6324 0006 FFF7FEFF 		bl	commReadIMUFromSH
1364:..\src/command_processing.c ****     // Ask to the slave the reference commands to drive the vibrotactile devices. 
1365:..\src/command_processing.c ****     // Values received are already the PWM commands computed by the slave board proportional to the
1366:..\src/command_processing.c ****     
1367:..\src/command_processing.c ****     PWM_IMU_1 = (int16)(((float)PWM_IMU_1/50.0) * SCALA);
 6325              		.loc 1 1367 0
 6326 000a 4B4B     		ldr	r3, .L315
 6327 000c B3F90030 		ldrsh	r3, [r3]
 6328 0010 1846     		mov	r0, r3
 6329 0012 FFF7FEFF 		bl	__aeabi_i2f
 6330 0016 0346     		mov	r3, r0
 6331 0018 1846     		mov	r0, r3
 6332 001a FFF7FEFF 		bl	__aeabi_f2d
 6333 001e 4FF00002 		mov	r2, #0
 6334 0022 464B     		ldr	r3, .L315+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 155


 6335 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6336 0028 0346     		mov	r3, r0
 6337 002a 0C46     		mov	r4, r1
 6338 002c 1846     		mov	r0, r3
 6339 002e 2146     		mov	r1, r4
 6340 0030 4FF00002 		mov	r2, #0
 6341 0034 424B     		ldr	r3, .L315+8
 6342 0036 FFF7FEFF 		bl	__aeabi_dmul
 6343 003a 0346     		mov	r3, r0
 6344 003c 0C46     		mov	r4, r1
 6345 003e 1846     		mov	r0, r3
 6346 0040 2146     		mov	r1, r4
 6347 0042 FFF7FEFF 		bl	__aeabi_d2iz
 6348 0046 0346     		mov	r3, r0
 6349 0048 1AB2     		sxth	r2, r3
 6350 004a 3B4B     		ldr	r3, .L315
 6351 004c 1A80     		strh	r2, [r3]	@ movhi
1368:..\src/command_processing.c ****     if (PWM_IMU_1 > MAX_INPUT_PWM) PWM_IMU_1 = MAX_INPUT_PWM;
 6352              		.loc 1 1368 0
 6353 004e 3A4B     		ldr	r3, .L315
 6354 0050 B3F90030 		ldrsh	r3, [r3]
 6355 0054 642B     		cmp	r3, #100
 6356 0056 02DD     		ble	.L308
 6357              		.loc 1 1368 0 is_stmt 0 discriminator 1
 6358 0058 374B     		ldr	r3, .L315
 6359 005a 6422     		movs	r2, #100
 6360 005c 1A80     		strh	r2, [r3]	@ movhi
 6361              	.L308:
1369:..\src/command_processing.c ****     if (PWM_IMU_1 < MIN_INPUT_PWM) PWM_IMU_1 = 0;
 6362              		.loc 1 1369 0 is_stmt 1
 6363 005e 364B     		ldr	r3, .L315
 6364 0060 B3F90030 		ldrsh	r3, [r3]
 6365 0064 092B     		cmp	r3, #9
 6366 0066 02DC     		bgt	.L309
 6367              		.loc 1 1369 0 is_stmt 0 discriminator 1
 6368 0068 334B     		ldr	r3, .L315
 6369 006a 0022     		movs	r2, #0
 6370 006c 1A80     		strh	r2, [r3]	@ movhi
 6371              	.L309:
1370:..\src/command_processing.c ****     
1371:..\src/command_processing.c ****     PWM_IMU_2 = (int16) (((float)PWM_IMU_2/50.0) * SCALA);
 6372              		.loc 1 1371 0 is_stmt 1
 6373 006e 354B     		ldr	r3, .L315+12
 6374 0070 B3F90030 		ldrsh	r3, [r3]
 6375 0074 1846     		mov	r0, r3
 6376 0076 FFF7FEFF 		bl	__aeabi_i2f
 6377 007a 0346     		mov	r3, r0
 6378 007c 1846     		mov	r0, r3
 6379 007e FFF7FEFF 		bl	__aeabi_f2d
 6380 0082 4FF00002 		mov	r2, #0
 6381 0086 2D4B     		ldr	r3, .L315+4
 6382 0088 FFF7FEFF 		bl	__aeabi_ddiv
 6383 008c 0346     		mov	r3, r0
 6384 008e 0C46     		mov	r4, r1
 6385 0090 1846     		mov	r0, r3
 6386 0092 2146     		mov	r1, r4
 6387 0094 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 156


 6388 0098 294B     		ldr	r3, .L315+8
 6389 009a FFF7FEFF 		bl	__aeabi_dmul
 6390 009e 0346     		mov	r3, r0
 6391 00a0 0C46     		mov	r4, r1
 6392 00a2 1846     		mov	r0, r3
 6393 00a4 2146     		mov	r1, r4
 6394 00a6 FFF7FEFF 		bl	__aeabi_d2iz
 6395 00aa 0346     		mov	r3, r0
 6396 00ac 1AB2     		sxth	r2, r3
 6397 00ae 254B     		ldr	r3, .L315+12
 6398 00b0 1A80     		strh	r2, [r3]	@ movhi
1372:..\src/command_processing.c ****     if (PWM_IMU_2 > MAX_INPUT_PWM) PWM_IMU_2 = MAX_INPUT_PWM;
 6399              		.loc 1 1372 0
 6400 00b2 244B     		ldr	r3, .L315+12
 6401 00b4 B3F90030 		ldrsh	r3, [r3]
 6402 00b8 642B     		cmp	r3, #100
 6403 00ba 02DD     		ble	.L310
 6404              		.loc 1 1372 0 is_stmt 0 discriminator 1
 6405 00bc 214B     		ldr	r3, .L315+12
 6406 00be 6422     		movs	r2, #100
 6407 00c0 1A80     		strh	r2, [r3]	@ movhi
 6408              	.L310:
1373:..\src/command_processing.c ****     if (PWM_IMU_2 < MIN_INPUT_PWM) PWM_IMU_2 = 0;
 6409              		.loc 1 1373 0 is_stmt 1
 6410 00c2 204B     		ldr	r3, .L315+12
 6411 00c4 B3F90030 		ldrsh	r3, [r3]
 6412 00c8 092B     		cmp	r3, #9
 6413 00ca 02DC     		bgt	.L311
 6414              		.loc 1 1373 0 is_stmt 0 discriminator 1
 6415 00cc 1D4B     		ldr	r3, .L315+12
 6416 00ce 0022     		movs	r2, #0
 6417 00d0 1A80     		strh	r2, [r3]	@ movhi
 6418              	.L311:
1374:..\src/command_processing.c ****     
1375:..\src/command_processing.c ****     VT_ref[0] = PWM_IMU_1;
 6419              		.loc 1 1375 0 is_stmt 1
 6420 00d2 194B     		ldr	r3, .L315
 6421 00d4 B3F90030 		ldrsh	r3, [r3]
 6422 00d8 DAB2     		uxtb	r2, r3
 6423 00da 1B4B     		ldr	r3, .L315+16
 6424 00dc 1A70     		strb	r2, [r3]
1376:..\src/command_processing.c ****     VT_ref[1] = PWM_IMU_2;
 6425              		.loc 1 1376 0
 6426 00de 194B     		ldr	r3, .L315+12
 6427 00e0 B3F90030 		ldrsh	r3, [r3]
 6428 00e4 DAB2     		uxtb	r2, r3
 6429 00e6 184B     		ldr	r3, .L315+16
 6430 00e8 5A70     		strb	r2, [r3, #1]
1377:..\src/command_processing.c ****     
1378:..\src/command_processing.c ****     VT_ref[0] = PWM_IMU_1;
 6431              		.loc 1 1378 0
 6432 00ea 134B     		ldr	r3, .L315
 6433 00ec B3F90030 		ldrsh	r3, [r3]
 6434 00f0 DAB2     		uxtb	r2, r3
 6435 00f2 154B     		ldr	r3, .L315+16
 6436 00f4 1A70     		strb	r2, [r3]
1379:..\src/command_processing.c ****     VT_ref[1] = PWM_IMU_2;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 157


 6437              		.loc 1 1379 0
 6438 00f6 134B     		ldr	r3, .L315+12
 6439 00f8 B3F90030 		ldrsh	r3, [r3]
 6440 00fc DAB2     		uxtb	r2, r3
 6441 00fe 124B     		ldr	r3, .L315+16
 6442 0100 5A70     		strb	r2, [r3, #1]
1380:..\src/command_processing.c **** 
1381:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_VT_ACTUATORS; i++){       
 6443              		.loc 1 1381 0
 6444 0102 0023     		movs	r3, #0
 6445 0104 FB71     		strb	r3, [r7, #7]
 6446 0106 0FE0     		b	.L312
 6447              	.L314:
1382:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 6448              		.loc 1 1382 0
 6449 0108 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6450 010a 1846     		mov	r0, r3
 6451 010c FFF7FEFF 		bl	vibrotactile_control_generic
1383:..\src/command_processing.c ****         
1384:..\src/command_processing.c ****         if (interrupt_flag){
 6452              		.loc 1 1384 0
 6453 0110 0E4B     		ldr	r3, .L315+20
 6454 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6455 0114 002B     		cmp	r3, #0
 6456 0116 04D0     		beq	.L313
1385:..\src/command_processing.c ****             interrupt_flag = FALSE;
 6457              		.loc 1 1385 0
 6458 0118 0C4B     		ldr	r3, .L315+20
 6459 011a 0022     		movs	r2, #0
 6460 011c 1A70     		strb	r2, [r3]
1386:..\src/command_processing.c ****             interrupt_manager();
 6461              		.loc 1 1386 0
 6462 011e FFF7FEFF 		bl	interrupt_manager
 6463              	.L313:
1381:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 6464              		.loc 1 1381 0 discriminator 2
 6465 0122 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6466 0124 0133     		adds	r3, r3, #1
 6467 0126 FB71     		strb	r3, [r7, #7]
 6468              	.L312:
1381:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 6469              		.loc 1 1381 0 is_stmt 0 discriminator 1
 6470 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6471 012a 012B     		cmp	r3, #1
 6472 012c ECD9     		bls	.L314
1387:..\src/command_processing.c ****         }
1388:..\src/command_processing.c ****     } 
1389:..\src/command_processing.c **** }
 6473              		.loc 1 1389 0 is_stmt 1
 6474 012e 00BF     		nop
 6475 0130 0C37     		adds	r7, r7, #12
 6476              		.cfi_def_cfa_offset 12
 6477 0132 BD46     		mov	sp, r7
 6478              		.cfi_def_cfa_register 13
 6479              		@ sp needed
 6480 0134 90BD     		pop	{r4, r7, pc}
 6481              	.L316:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 158


 6482 0136 00BF     		.align	2
 6483              	.L315:
 6484 0138 00000000 		.word	PWM_IMU_1
 6485 013c 00004940 		.word	1078525952
 6486 0140 00003E40 		.word	1077805056
 6487 0144 00000000 		.word	PWM_IMU_2
 6488 0148 00000000 		.word	VT_ref
 6489 014c 00000000 		.word	interrupt_flag
 6490              		.cfi_endproc
 6491              	.LFE119:
 6492              		.size	vibrotactile_control, .-vibrotactile_control
 6493              		.global	__aeabi_i2d
 6494              		.global	__aeabi_dsub
 6495              		.global	__aeabi_dadd
 6496              		.global	__aeabi_fcmpgt
 6497              		.global	__aeabi_f2iz
 6498              		.global	__aeabi_fmul
 6499              		.section	.text.air_chambers_control,"ax",%progbits
 6500              		.align	2
 6501              		.global	air_chambers_control
 6502              		.thumb
 6503              		.thumb_func
 6504              		.type	air_chambers_control, %function
 6505              	air_chambers_control:
 6506              	.LFB120:
1390:..\src/command_processing.c **** 
1391:..\src/command_processing.c **** 
1392:..\src/command_processing.c **** //==============================================================================
1393:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
1394:..\src/command_processing.c **** //==============================================================================
1395:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
1396:..\src/command_processing.c **** 
1397:..\src/command_processing.c **** 
1398:..\src/command_processing.c **** void air_chambers_control() {
 6507              		.loc 1 1398 0
 6508              		.cfi_startproc
 6509              		@ args = 0, pretend = 0, frame = 24
 6510              		@ frame_needed = 1, uses_anonymous_args = 0
 6511 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 6512              		.cfi_def_cfa_offset 24
 6513              		.cfi_offset 4, -24
 6514              		.cfi_offset 5, -20
 6515              		.cfi_offset 7, -16
 6516              		.cfi_offset 8, -12
 6517              		.cfi_offset 9, -8
 6518              		.cfi_offset 14, -4
 6519 0004 86B0     		sub	sp, sp, #24
 6520              		.cfi_def_cfa_offset 48
 6521 0006 00AF     		add	r7, sp, #0
 6522              		.cfi_def_cfa_register 7
1399:..\src/command_processing.c **** 
1400:..\src/command_processing.c ****     int16 curr_diff;
1401:..\src/command_processing.c ****     int32 pressure_reference;
1402:..\src/command_processing.c ****     int32 err_pressure, pressure_value;
1403:..\src/command_processing.c ****     int32 valve_command;
1404:..\src/command_processing.c ****     int16 x_value;
1405:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 159


1406:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
1407:..\src/command_processing.c ****     
1408:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
 6523              		.loc 1 1408 0
 6524 0008 FFF7FEFF 		bl	commReadResCurrFromSH
 6525 000c 0346     		mov	r3, r0
 6526 000e BB81     		strh	r3, [r7, #12]	@ movhi
1409:..\src/command_processing.c **** 
1410:..\src/command_processing.c ****     // Compute pressure reference
1411:..\src/command_processing.c **** 
1412:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
 6527              		.loc 1 1412 0
 6528 0010 B7F90C30 		ldrsh	r3, [r7, #12]
 6529 0014 1846     		mov	r0, r3
 6530 0016 FFF7FEFF 		bl	__aeabi_i2d
 6531 001a 4FF00002 		mov	r2, #0
 6532 001e 5A4B     		ldr	r3, .L327
 6533 0020 FFF7FEFF 		bl	__aeabi_dsub
 6534 0024 0346     		mov	r3, r0
 6535 0026 0C46     		mov	r4, r1
 6536 0028 1846     		mov	r0, r3
 6537 002a 2146     		mov	r1, r4
 6538 002c FFF7FEFF 		bl	__aeabi_d2iz
 6539 0030 0346     		mov	r3, r0
 6540 0032 FB81     		strh	r3, [r7, #14]	@ movhi
1413:..\src/command_processing.c ****     if (x_value < 0)
 6541              		.loc 1 1413 0
 6542 0034 B7F90E30 		ldrsh	r3, [r7, #14]
 6543 0038 002B     		cmp	r3, #0
 6544 003a 01DA     		bge	.L318
1414:..\src/command_processing.c ****         x_value = 0;
 6545              		.loc 1 1414 0
 6546 003c 0023     		movs	r3, #0
 6547 003e FB81     		strh	r3, [r7, #14]	@ movhi
 6548              	.L318:
1415:..\src/command_processing.c ****     
1416:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
 6549              		.loc 1 1416 0
 6550 0040 B7F90E30 		ldrsh	r3, [r7, #14]
 6551 0044 1846     		mov	r0, r3
 6552 0046 FFF7FEFF 		bl	__aeabi_i2d
 6553 004a 4FF00002 		mov	r2, #0
 6554 004e 4F4B     		ldr	r3, .L327+4
 6555 0050 FFF7FEFF 		bl	__aeabi_dmul
 6556 0054 0346     		mov	r3, r0
 6557 0056 0C46     		mov	r4, r1
 6558 0058 2546     		mov	r5, r4
 6559 005a 1C46     		mov	r4, r3
 6560 005c B7F90E30 		ldrsh	r3, [r7, #14]
 6561 0060 1846     		mov	r0, r3
 6562 0062 FFF7FEFF 		bl	__aeabi_i2d
 6563 0066 0246     		mov	r2, r0
 6564 0068 0B46     		mov	r3, r1
 6565 006a 2046     		mov	r0, r4
 6566 006c 2946     		mov	r1, r5
 6567 006e FFF7FEFF 		bl	__aeabi_dmul
 6568 0072 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 160


 6569 0074 0C46     		mov	r4, r1
 6570 0076 2546     		mov	r5, r4
 6571 0078 1C46     		mov	r4, r3
 6572 007a 454B     		ldr	r3, .L327+8
 6573 007c 1B6D     		ldr	r3, [r3, #80]
 6574 007e 1846     		mov	r0, r3
 6575 0080 FFF7FEFF 		bl	__aeabi_i2d
 6576 0084 4FF00002 		mov	r2, #0
 6577 0088 424B     		ldr	r3, .L327+12
 6578 008a FFF7FEFF 		bl	__aeabi_dmul
 6579 008e 0246     		mov	r2, r0
 6580 0090 0B46     		mov	r3, r1
 6581 0092 9046     		mov	r8, r2
 6582 0094 9946     		mov	r9, r3
 6583 0096 B7F90E30 		ldrsh	r3, [r7, #14]
 6584 009a 1846     		mov	r0, r3
 6585 009c FFF7FEFF 		bl	__aeabi_i2d
 6586 00a0 0246     		mov	r2, r0
 6587 00a2 0B46     		mov	r3, r1
 6588 00a4 4046     		mov	r0, r8
 6589 00a6 4946     		mov	r1, r9
 6590 00a8 FFF7FEFF 		bl	__aeabi_dmul
 6591 00ac 0246     		mov	r2, r0
 6592 00ae 0B46     		mov	r3, r1
 6593 00b0 2046     		mov	r0, r4
 6594 00b2 2946     		mov	r1, r5
 6595 00b4 FFF7FEFF 		bl	__aeabi_dadd
 6596 00b8 0346     		mov	r3, r0
 6597 00ba 0C46     		mov	r4, r1
 6598 00bc 1846     		mov	r0, r3
 6599 00be 2146     		mov	r1, r4
 6600 00c0 FFF7FEFF 		bl	__aeabi_d2iz
 6601 00c4 0146     		mov	r1, r0
 6602 00c6 324B     		ldr	r3, .L327+8
 6603 00c8 1B6D     		ldr	r3, [r3, #80]
 6604 00ca 314A     		ldr	r2, .L327+8
 6605 00cc 126D     		ldr	r2, [r2, #80]
 6606 00ce 02FB03F3 		mul	r3, r2, r3
 6607 00d2 91FBF3F3 		sdiv	r3, r1, r3
 6608 00d6 7B61     		str	r3, [r7, #20]
1417:..\src/command_processing.c ****     if (pressure_reference < 0)
 6609              		.loc 1 1417 0
 6610 00d8 7B69     		ldr	r3, [r7, #20]
 6611 00da 002B     		cmp	r3, #0
 6612 00dc 01DA     		bge	.L319
1418:..\src/command_processing.c ****         pressure_reference = 0;
 6613              		.loc 1 1418 0
 6614 00de 0023     		movs	r3, #0
 6615 00e0 7B61     		str	r3, [r7, #20]
 6616              	.L319:
1419:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
 6617              		.loc 1 1419 0
 6618 00e2 7869     		ldr	r0, [r7, #20]
 6619 00e4 FFF7FEFF 		bl	__aeabi_i2f
 6620 00e8 0246     		mov	r2, r0
 6621 00ea 294B     		ldr	r3, .L327+8
 6622 00ec 5B6D     		ldr	r3, [r3, #84]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 161


 6623 00ee 1946     		mov	r1, r3
 6624 00f0 1046     		mov	r0, r2
 6625 00f2 FFF7FEFF 		bl	__aeabi_fcmpgt
 6626 00f6 0346     		mov	r3, r0
 6627 00f8 002B     		cmp	r3, #0
 6628 00fa 06D0     		beq	.L320
1420:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
 6629              		.loc 1 1420 0
 6630 00fc 244B     		ldr	r3, .L327+8
 6631 00fe 5B6D     		ldr	r3, [r3, #84]	@ float
 6632 0100 1846     		mov	r0, r3
 6633 0102 FFF7FEFF 		bl	__aeabi_f2iz
 6634 0106 0346     		mov	r3, r0
 6635 0108 7B61     		str	r3, [r7, #20]
 6636              	.L320:
1421:..\src/command_processing.c ****     
1422:..\src/command_processing.c ****     pressure_value = (int32)g_adc_meas.pressure;
 6637              		.loc 1 1422 0
 6638 010a 234B     		ldr	r3, .L327+16
 6639 010c 9B68     		ldr	r3, [r3, #8]	@ float
 6640 010e 1846     		mov	r0, r3
 6641 0110 FFF7FEFF 		bl	__aeabi_f2iz
 6642 0114 0346     		mov	r3, r0
 6643 0116 BB60     		str	r3, [r7, #8]
1423:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
 6644              		.loc 1 1423 0
 6645 0118 7A69     		ldr	r2, [r7, #20]
 6646 011a BB68     		ldr	r3, [r7, #8]
 6647 011c D31A     		subs	r3, r2, r3
 6648 011e 7B60     		str	r3, [r7, #4]
1424:..\src/command_processing.c **** 
1425:..\src/command_processing.c ****     if (x_value <= 0){
 6649              		.loc 1 1425 0
 6650 0120 B7F90E30 		ldrsh	r3, [r7, #14]
 6651 0124 002B     		cmp	r3, #0
 6652 0126 02DC     		bgt	.L322
1426:..\src/command_processing.c ****         //i.e the hand is opening
1427:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
 6653              		.loc 1 1427 0
 6654 0128 0023     		movs	r3, #0
 6655 012a 3B61     		str	r3, [r7, #16]
 6656 012c 01E0     		b	.L323
 6657              	.L322:
1428:..\src/command_processing.c ****     }
1429:..\src/command_processing.c ****     else {
1430:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
1431:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
1432:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
1433:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
 6658              		.loc 1 1433 0
 6659 012e 0123     		movs	r3, #1
 6660 0130 3B61     		str	r3, [r7, #16]
 6661              	.L323:
1434:..\src/command_processing.c ****     }
1435:..\src/command_processing.c ****     
1436:..\src/command_processing.c ****     // Pump control*/
1437:..\src/command_processing.c ****    
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 162


1438:..\src/command_processing.c ****     Pump_refNew = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
 6662              		.loc 1 1438 0
 6663 0132 174B     		ldr	r3, .L327+8
 6664 0134 9C6D     		ldr	r4, [r3, #88]	@ float
 6665 0136 7868     		ldr	r0, [r7, #4]
 6666 0138 FFF7FEFF 		bl	__aeabi_i2f
 6667 013c 0346     		mov	r3, r0
 6668 013e 1946     		mov	r1, r3
 6669 0140 2046     		mov	r0, r4
 6670 0142 FFF7FEFF 		bl	__aeabi_fmul
 6671 0146 0346     		mov	r3, r0
 6672 0148 1846     		mov	r0, r3
 6673 014a FFF7FEFF 		bl	__aeabi_f2iz
 6674 014e 0346     		mov	r3, r0
 6675 0150 DAB2     		uxtb	r2, r3
 6676 0152 124B     		ldr	r3, .L327+20
 6677 0154 1A70     		strb	r2, [r3]
1439:..\src/command_processing.c **** 
1440:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
1441:..\src/command_processing.c ****     
1442:..\src/command_processing.c ****     // Limit output voltage
1443:..\src/command_processing.c ****     if (Pump_refNew > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
 6678              		.loc 1 1443 0
 6679 0156 114B     		ldr	r3, .L327+20
 6680 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6681 015a 502B     		cmp	r3, #80
 6682 015c 02D9     		bls	.L324
1444:..\src/command_processing.c ****         Pump_refNew = 80; // 80
 6683              		.loc 1 1444 0
 6684 015e 0F4B     		ldr	r3, .L327+20
 6685 0160 5022     		movs	r2, #80
 6686 0162 1A70     		strb	r2, [r3]
 6687              	.L324:
1445:..\src/command_processing.c ****     if (Pump_refNew < 20)
 6688              		.loc 1 1445 0
 6689 0164 0D4B     		ldr	r3, .L327+20
 6690 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6691 0168 132B     		cmp	r3, #19
 6692 016a 02D8     		bhi	.L325
1446:..\src/command_processing.c ****         Pump_refNew = 0;
 6693              		.loc 1 1446 0
 6694 016c 0B4B     		ldr	r3, .L327+20
 6695 016e 0022     		movs	r2, #0
 6696 0170 1A70     		strb	r2, [r3]
 6697              	.L325:
1447:..\src/command_processing.c ****         
1448:..\src/command_processing.c ****     VALVE_Write(valve_command);
 6698              		.loc 1 1448 0
 6699 0172 3B69     		ldr	r3, [r7, #16]
 6700 0174 DBB2     		uxtb	r3, r3
 6701 0176 1846     		mov	r0, r3
 6702 0178 FFF7FEFF 		bl	VALVE_Write
1449:..\src/command_processing.c ****     
1450:..\src/command_processing.c ****     
1451:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
1452:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
1453:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 163


1454:..\src/command_processing.c ****     // motor_control_generic(slave_motor_idx);
1455:..\src/command_processing.c **** 
1456:..\src/command_processing.c **** }
 6703              		.loc 1 1456 0
 6704 017c 00BF     		nop
 6705 017e 1837     		adds	r7, r7, #24
 6706              		.cfi_def_cfa_offset 24
 6707 0180 BD46     		mov	sp, r7
 6708              		.cfi_def_cfa_register 13
 6709              		@ sp needed
 6710 0182 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 6711              	.L328:
 6712 0186 00BF     		.align	2
 6713              	.L327:
 6714 0188 00004940 		.word	1078525952
 6715 018c 00003EC0 		.word	-1069678592
 6716 0190 00000000 		.word	c_mem
 6717 0194 00804B40 		.word	1078689792
 6718 0198 00000000 		.word	g_adc_meas
 6719 019c 00000000 		.word	Pump_refNew
 6720              		.cfi_endproc
 6721              	.LFE120:
 6722              		.size	air_chambers_control, .-air_chambers_control
 6723              		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 6724              		.align	2
 6725              		.global	emg_activation_velocity_fsm
 6726              		.thumb
 6727              		.thumb_func
 6728              		.type	emg_activation_velocity_fsm, %function
 6729              	emg_activation_velocity_fsm:
 6730              	.LFB121:
1457:..\src/command_processing.c **** 
1458:..\src/command_processing.c **** 
1459:..\src/command_processing.c **** //==============================================================================
1460:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
1461:..\src/command_processing.c **** //==============================================================================
1462:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
1463:..\src/command_processing.c **** 
1464:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 6731              		.loc 1 1464 0
 6732              		.cfi_startproc
 6733              		@ args = 0, pretend = 0, frame = 0
 6734              		@ frame_needed = 1, uses_anonymous_args = 0
 6735              		@ link register save eliminated.
 6736 0000 80B4     		push	{r7}
 6737              		.cfi_def_cfa_offset 4
 6738              		.cfi_offset 7, -4
 6739 0002 00AF     		add	r7, sp, #0
 6740              		.cfi_def_cfa_register 7
1465:..\src/command_processing.c ****     
1466:..\src/command_processing.c **** return 0;
 6741              		.loc 1 1466 0
 6742 0004 0023     		movs	r3, #0
1467:..\src/command_processing.c **** }
 6743              		.loc 1 1467 0
 6744 0006 1846     		mov	r0, r3
 6745 0008 BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 164


 6746              		.cfi_def_cfa_register 13
 6747              		@ sp needed
 6748 000a 80BC     		pop	{r7}
 6749              		.cfi_restore 7
 6750              		.cfi_def_cfa_offset 0
 6751 000c 7047     		bx	lr
 6752              		.cfi_endproc
 6753              	.LFE121:
 6754              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 6755 000e 00BF     		.section	.text.otbk_act_wrist_control,"ax",%progbits
 6756              		.align	2
 6757              		.global	otbk_act_wrist_control
 6758              		.thumb
 6759              		.thumb_func
 6760              		.type	otbk_act_wrist_control, %function
 6761              	otbk_act_wrist_control:
 6762              	.LFB122:
1468:..\src/command_processing.c **** 
1469:..\src/command_processing.c **** //==============================================================================
1470:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
1471:..\src/command_processing.c **** //==============================================================================
1472:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
1473:..\src/command_processing.c **** 
1474:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 6763              		.loc 1 1474 0
 6764              		.cfi_startproc
 6765              		@ args = 0, pretend = 0, frame = 8
 6766              		@ frame_needed = 1, uses_anonymous_args = 0
 6767              		@ link register save eliminated.
 6768 0000 80B4     		push	{r7}
 6769              		.cfi_def_cfa_offset 4
 6770              		.cfi_offset 7, -4
 6771 0002 83B0     		sub	sp, sp, #12
 6772              		.cfi_def_cfa_offset 16
 6773 0004 00AF     		add	r7, sp, #0
 6774              		.cfi_def_cfa_register 7
 6775 0006 7860     		str	r0, [r7, #4]
1475:..\src/command_processing.c ****     
1476:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
1477:..\src/command_processing.c ****     
1478:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
1479:..\src/command_processing.c ****         
1480:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
1481:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
1482:..\src/command_processing.c ****     switch (fsm_state){
1483:..\src/command_processing.c ****         case RELAX_STATE:
1484:..\src/command_processing.c ****             
1485:..\src/command_processing.c ****             // Wrist stop
1486:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
1487:..\src/command_processing.c ****             
1488:..\src/command_processing.c ****             // Softhand stop
1489:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
1490:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
1491:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
1492:..\src/command_processing.c ****             
1493:..\src/command_processing.c ****             break;
1494:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 165


1495:..\src/command_processing.c ****                 
1496:..\src/command_processing.c ****             break;
1497:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
1498:..\src/command_processing.c ****             
1499:..\src/command_processing.c ****             // Wrist movement
1500:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
1501:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
1502:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
1503:..\src/command_processing.c ****                 }
1504:..\src/command_processing.c ****                 else {
1505:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
1506:..\src/command_processing.c ****                 }
1507:..\src/command_processing.c ****             }
1508:..\src/command_processing.c ****             else {
1509:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
1510:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
1511:..\src/command_processing.c ****                 }
1512:..\src/command_processing.c ****                 else {
1513:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
1514:..\src/command_processing.c ****                 }
1515:..\src/command_processing.c ****             }
1516:..\src/command_processing.c ****             
1517:..\src/command_processing.c ****             // Softhand stop
1518:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
1519:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
1520:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
1521:..\src/command_processing.c ****             
1522:..\src/command_processing.c ****             break;
1523:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
1524:..\src/command_processing.c ****             
1525:..\src/command_processing.c ****             // Wrist stop
1526:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
1527:..\src/command_processing.c ****             
1528:..\src/command_processing.c ****             // SoftHand movement
1529:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
1530:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
1531:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
1532:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
1533:..\src/command_processing.c ****             
1534:..\src/command_processing.c ****             break;
1535:..\src/command_processing.c ****     }
1536:..\src/command_processing.c ****         
1537:..\src/command_processing.c ****     // Limit output voltage
1538:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
1539:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
1540:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
1541:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
1542:..\src/command_processing.c ****     
1543:..\src/command_processing.c **** #endif
1544:..\src/command_processing.c **** }
 6776              		.loc 1 1544 0
 6777 0008 00BF     		nop
 6778 000a 0C37     		adds	r7, r7, #12
 6779              		.cfi_def_cfa_offset 4
 6780 000c BD46     		mov	sp, r7
 6781              		.cfi_def_cfa_register 13
 6782              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 166


 6783 000e 80BC     		pop	{r7}
 6784              		.cfi_restore 7
 6785              		.cfi_def_cfa_offset 0
 6786 0010 7047     		bx	lr
 6787              		.cfi_endproc
 6788              	.LFE122:
 6789              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 6790 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 6791              		.align	2
 6792              		.global	drive_slave
 6793              		.thumb
 6794              		.thumb_func
 6795              		.type	drive_slave, %function
 6796              	drive_slave:
 6797              	.LFB123:
1545:..\src/command_processing.c **** 
1546:..\src/command_processing.c **** //==============================================================================
1547:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
1548:..\src/command_processing.c **** //==============================================================================
1549:..\src/command_processing.c ****  
1550:..\src/command_processing.c **** //==============================================================================
1551:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
1552:..\src/command_processing.c **** //==============================================================================
1553:..\src/command_processing.c ****  
1554:..\src/command_processing.c ****  
1555:..\src/command_processing.c **** void drive_slave( uint8 slave_ID) {
 6798              		.loc 1 1555 0
 6799              		.cfi_startproc
 6800              		@ args = 0, pretend = 0, frame = 24
 6801              		@ frame_needed = 1, uses_anonymous_args = 0
 6802 0000 90B5     		push	{r4, r7, lr}
 6803              		.cfi_def_cfa_offset 12
 6804              		.cfi_offset 4, -12
 6805              		.cfi_offset 7, -8
 6806              		.cfi_offset 14, -4
 6807 0002 87B0     		sub	sp, sp, #28
 6808              		.cfi_def_cfa_offset 40
 6809 0004 00AF     		add	r7, sp, #0
 6810              		.cfi_def_cfa_register 7
 6811 0006 0346     		mov	r3, r0
 6812 0008 FB71     		strb	r3, [r7, #7]
1556:..\src/command_processing.c **** 
1557:..\src/command_processing.c ****     uint8 packet_data[6];
1558:..\src/command_processing.c ****     uint8 packet_length;
1559:..\src/command_processing.c ****     int16 aux_int16;
1560:..\src/command_processing.c **** 
1561:..\src/command_processing.c ****        
1562:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
1563:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
 6813              		.loc 1 1563 0
 6814 000a 8223     		movs	r3, #130
 6815 000c 3B74     		strb	r3, [r7, #16]
1564:..\src/command_processing.c ****     
1565:..\src/command_processing.c ****  //aux_int16 = (int16) motor_idx;
1566:..\src/command_processing.c ****    aux_int16 = (int16) (SH_ref >> g_mem.SH_config.res);
 6816              		.loc 1 1566 0
 6817 000e 1B4B     		ldr	r3, .L333
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 167


 6818 0010 1B68     		ldr	r3, [r3]
 6819 0012 1B4A     		ldr	r2, .L333+4
 6820 0014 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 6821 0018 1341     		asrs	r3, r3, r2
 6822 001a 1BB2     		sxth	r3, r3
 6823 001c FB81     		strh	r3, [r7, #14]	@ movhi
1567:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 6824              		.loc 1 1567 0
 6825 001e 07F10E03 		add	r3, r7, #14
 6826 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6827 0024 BB74     		strb	r3, [r7, #18]
1568:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 6828              		.loc 1 1568 0
 6829 0026 07F10E03 		add	r3, r7, #14
 6830 002a 0133     		adds	r3, r3, #1
 6831 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6832 002e 7B74     		strb	r3, [r7, #17]
1569:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
 6833              		.loc 1 1569 0
 6834 0030 07F11003 		add	r3, r7, #16
 6835 0034 0333     		adds	r3, r3, #3
 6836 0036 0022     		movs	r2, #0
 6837 0038 1A80     		strh	r2, [r3]	@ movhi
1570:..\src/command_processing.c ****   //  packet_data[3] = (char*)0;
1571:..\src/command_processing.c ****    // packet_data[4] = (char*)0;
1572:..\src/command_processing.c ****     packet_length = 6;
 6838              		.loc 1 1572 0
 6839 003a 0623     		movs	r3, #6
 6840 003c FB75     		strb	r3, [r7, #23]
1573:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 6841              		.loc 1 1573 0
 6842 003e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6843 0040 5C1E     		subs	r4, r3, #1
 6844 0042 FB7D     		ldrb	r3, [r7, #23]
 6845 0044 013B     		subs	r3, r3, #1
 6846 0046 DAB2     		uxtb	r2, r3
 6847 0048 07F11003 		add	r3, r7, #16
 6848 004c 1146     		mov	r1, r2
 6849 004e 1846     		mov	r0, r3
 6850 0050 FFF7FEFF 		bl	LCRChecksum
 6851 0054 0346     		mov	r3, r0
 6852 0056 1A46     		mov	r2, r3
 6853 0058 07F11803 		add	r3, r7, #24
 6854 005c 2344     		add	r3, r3, r4
 6855 005e 03F8082C 		strb	r2, [r3, #-8]
1574:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, slave_ID);
 6856              		.loc 1 1574 0
 6857 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6858 0064 99B2     		uxth	r1, r3
 6859 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6860 0068 07F11003 		add	r3, r7, #16
 6861 006c 1846     		mov	r0, r3
 6862 006e FFF7FEFF 		bl	commWriteID
1575:..\src/command_processing.c **** 
1576:..\src/command_processing.c **** 
1577:..\src/command_processing.c **** }
 6863              		.loc 1 1577 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 168


 6864 0072 00BF     		nop
 6865 0074 1C37     		adds	r7, r7, #28
 6866              		.cfi_def_cfa_offset 12
 6867 0076 BD46     		mov	sp, r7
 6868              		.cfi_def_cfa_register 13
 6869              		@ sp needed
 6870 0078 90BD     		pop	{r4, r7, pc}
 6871              	.L334:
 6872 007a 00BF     		.align	2
 6873              	.L333:
 6874 007c 00000000 		.word	SH_ref
 6875 0080 00000000 		.word	g_mem
 6876              		.cfi_endproc
 6877              	.LFE123:
 6878              		.size	drive_slave, .-drive_slave
 6879              		.section	.text.stop_master_device,"ax",%progbits
 6880              		.align	2
 6881              		.global	stop_master_device
 6882              		.thumb
 6883              		.thumb_func
 6884              		.type	stop_master_device, %function
 6885              	stop_master_device:
 6886              	.LFB124:
1578:..\src/command_processing.c **** //==============================================================================
1579:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
1580:..\src/command_processing.c **** //==============================================================================
1581:..\src/command_processing.c ****  
1582:..\src/command_processing.c **** void stop_master_device() {
 6887              		.loc 1 1582 0
 6888              		.cfi_startproc
 6889              		@ args = 0, pretend = 0, frame = 0
 6890              		@ frame_needed = 1, uses_anonymous_args = 0
 6891 0000 80B5     		push	{r7, lr}
 6892              		.cfi_def_cfa_offset 8
 6893              		.cfi_offset 7, -8
 6894              		.cfi_offset 14, -4
 6895 0002 00AF     		add	r7, sp, #0
 6896              		.cfi_def_cfa_register 7
1583:..\src/command_processing.c ****     
1584:..\src/command_processing.c ****         // Stop pump and open valve
1585:..\src/command_processing.c ****         Pump_ref = 0;    
 6897              		.loc 1 1585 0
 6898 0004 074B     		ldr	r3, .L336
 6899 0006 0022     		movs	r2, #0
 6900 0008 1A70     		strb	r2, [r3]
1586:..\src/command_processing.c ****         VALVE_Write(OPEN);
 6901              		.loc 1 1586 0
 6902 000a 0020     		movs	r0, #0
 6903 000c FFF7FEFF 		bl	VALVE_Write
1587:..\src/command_processing.c ****         master_mode = 0; 
 6904              		.loc 1 1587 0
 6905 0010 054B     		ldr	r3, .L336+4
 6906 0012 0022     		movs	r2, #0
 6907 0014 1A70     		strb	r2, [r3]
1588:..\src/command_processing.c ****         g_mem.MS.master_mode_active = FALSE;
 6908              		.loc 1 1588 0
 6909 0016 054B     		ldr	r3, .L336+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 169


 6910 0018 0022     		movs	r2, #0
 6911 001a 83F84020 		strb	r2, [r3, #64]
1589:..\src/command_processing.c **** 
1590:..\src/command_processing.c **** }
 6912              		.loc 1 1590 0
 6913 001e 00BF     		nop
 6914 0020 80BD     		pop	{r7, pc}
 6915              	.L337:
 6916 0022 00BF     		.align	2
 6917              	.L336:
 6918 0024 00000000 		.word	Pump_ref
 6919 0028 00000000 		.word	master_mode
 6920 002c 00000000 		.word	g_mem
 6921              		.cfi_endproc
 6922              	.LFE124:
 6923              		.size	stop_master_device, .-stop_master_device
 6924              		.section	.text.deactivate_slaves,"ax",%progbits
 6925              		.align	2
 6926              		.global	deactivate_slaves
 6927              		.thumb
 6928              		.thumb_func
 6929              		.type	deactivate_slaves, %function
 6930              	deactivate_slaves:
 6931              	.LFB125:
1591:..\src/command_processing.c **** 
1592:..\src/command_processing.c **** //==============================================================================
1593:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
1594:..\src/command_processing.c **** //==============================================================================
1595:..\src/command_processing.c ****  
1596:..\src/command_processing.c **** void deactivate_slaves() {
 6932              		.loc 1 1596 0
 6933              		.cfi_startproc
 6934              		@ args = 0, pretend = 0, frame = 0
 6935              		@ frame_needed = 1, uses_anonymous_args = 0
 6936              		@ link register save eliminated.
 6937 0000 80B4     		push	{r7}
 6938              		.cfi_def_cfa_offset 4
 6939              		.cfi_offset 7, -4
 6940 0002 00AF     		add	r7, sp, #0
 6941              		.cfi_def_cfa_register 7
1597:..\src/command_processing.c ****    
1598:..\src/command_processing.c **** }
 6942              		.loc 1 1598 0
 6943 0004 00BF     		nop
 6944 0006 BD46     		mov	sp, r7
 6945              		.cfi_def_cfa_register 13
 6946              		@ sp needed
 6947 0008 80BC     		pop	{r7}
 6948              		.cfi_restore 7
 6949              		.cfi_def_cfa_offset 0
 6950 000a 7047     		bx	lr
 6951              		.cfi_endproc
 6952              	.LFE125:
 6953              		.size	deactivate_slaves, .-deactivate_slaves
 6954              		.bss
 6955              		.align	1
 6956              	i.9982:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 170


 6957 0000 0000     		.space	2
 6958              		.text
 6959              	.Letext0:
 6960              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6961              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6962              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 6963              		.file 6 "..\\src\\commands.h"
 6964              		.file 7 "..\\src\\globals.h"
 6965              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 6966              		.section	.debug_info,"",%progbits
 6967              	.Ldebug_info0:
 6968 0000 B7150000 		.4byte	0x15b7
 6969 0004 0400     		.2byte	0x4
 6970 0006 00000000 		.4byte	.Ldebug_abbrev0
 6971 000a 04       		.byte	0x4
 6972 000b 01       		.uleb128 0x1
 6973 000c 14080000 		.4byte	.LASF286
 6974 0010 0C       		.byte	0xc
 6975 0011 16100000 		.4byte	.LASF287
 6976 0015 1D060000 		.4byte	.LASF288
 6977 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6978 001d 00000000 		.4byte	0
 6979 0021 00000000 		.4byte	.Ldebug_line0
 6980 0025 02       		.uleb128 0x2
 6981 0026 01       		.byte	0x1
 6982 0027 06       		.byte	0x6
 6983 0028 48030000 		.4byte	.LASF0
 6984 002c 02       		.uleb128 0x2
 6985 002d 01       		.byte	0x1
 6986 002e 08       		.byte	0x8
 6987 002f A7030000 		.4byte	.LASF1
 6988 0033 02       		.uleb128 0x2
 6989 0034 02       		.byte	0x2
 6990 0035 05       		.byte	0x5
 6991 0036 040E0000 		.4byte	.LASF2
 6992 003a 02       		.uleb128 0x2
 6993 003b 02       		.byte	0x2
 6994 003c 07       		.byte	0x7
 6995 003d 890F0000 		.4byte	.LASF3
 6996 0041 03       		.uleb128 0x3
 6997 0042 EC0F0000 		.4byte	.LASF5
 6998 0046 03       		.byte	0x3
 6999 0047 3F       		.byte	0x3f
 7000 0048 4C000000 		.4byte	0x4c
 7001 004c 02       		.uleb128 0x2
 7002 004d 04       		.byte	0x4
 7003 004e 05       		.byte	0x5
 7004 004f 3D020000 		.4byte	.LASF4
 7005 0053 03       		.uleb128 0x3
 7006 0054 C7080000 		.4byte	.LASF6
 7007 0058 03       		.byte	0x3
 7008 0059 41       		.byte	0x41
 7009 005a 5E000000 		.4byte	0x5e
 7010 005e 02       		.uleb128 0x2
 7011 005f 04       		.byte	0x4
 7012 0060 07       		.byte	0x7
 7013 0061 D6060000 		.4byte	.LASF7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 171


 7014 0065 02       		.uleb128 0x2
 7015 0066 08       		.byte	0x8
 7016 0067 05       		.byte	0x5
 7017 0068 D2080000 		.4byte	.LASF8
 7018 006c 02       		.uleb128 0x2
 7019 006d 08       		.byte	0x8
 7020 006e 07       		.byte	0x7
 7021 006f A90B0000 		.4byte	.LASF9
 7022 0073 04       		.uleb128 0x4
 7023 0074 04       		.byte	0x4
 7024 0075 05       		.byte	0x5
 7025 0076 696E7400 		.ascii	"int\000"
 7026 007a 02       		.uleb128 0x2
 7027 007b 04       		.byte	0x4
 7028 007c 07       		.byte	0x7
 7029 007d A6090000 		.4byte	.LASF10
 7030 0081 03       		.uleb128 0x3
 7031 0082 6C000000 		.4byte	.LASF11
 7032 0086 04       		.byte	0x4
 7033 0087 2C       		.byte	0x2c
 7034 0088 41000000 		.4byte	0x41
 7035 008c 03       		.uleb128 0x3
 7036 008d F80E0000 		.4byte	.LASF12
 7037 0091 04       		.byte	0x4
 7038 0092 30       		.byte	0x30
 7039 0093 53000000 		.4byte	0x53
 7040 0097 05       		.uleb128 0x5
 7041 0098 F20D0000 		.4byte	.LASF13
 7042 009c 05       		.byte	0x5
 7043 009d E401     		.2byte	0x1e4
 7044 009f 2C000000 		.4byte	0x2c
 7045 00a3 05       		.uleb128 0x5
 7046 00a4 6A100000 		.4byte	.LASF14
 7047 00a8 05       		.byte	0x5
 7048 00a9 E501     		.2byte	0x1e5
 7049 00ab 3A000000 		.4byte	0x3a
 7050 00af 05       		.uleb128 0x5
 7051 00b0 8D000000 		.4byte	.LASF15
 7052 00b4 05       		.byte	0x5
 7053 00b5 E601     		.2byte	0x1e6
 7054 00b7 5E000000 		.4byte	0x5e
 7055 00bb 05       		.uleb128 0x5
 7056 00bc B40E0000 		.4byte	.LASF16
 7057 00c0 05       		.byte	0x5
 7058 00c1 E801     		.2byte	0x1e8
 7059 00c3 33000000 		.4byte	0x33
 7060 00c7 05       		.uleb128 0x5
 7061 00c8 D20F0000 		.4byte	.LASF17
 7062 00cc 05       		.byte	0x5
 7063 00cd E901     		.2byte	0x1e9
 7064 00cf 4C000000 		.4byte	0x4c
 7065 00d3 02       		.uleb128 0x2
 7066 00d4 04       		.byte	0x4
 7067 00d5 04       		.byte	0x4
 7068 00d6 4F090000 		.4byte	.LASF18
 7069 00da 02       		.uleb128 0x2
 7070 00db 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 172


 7071 00dc 04       		.byte	0x4
 7072 00dd 24090000 		.4byte	.LASF19
 7073 00e1 02       		.uleb128 0x2
 7074 00e2 01       		.byte	0x1
 7075 00e3 08       		.byte	0x8
 7076 00e4 44040000 		.4byte	.LASF20
 7077 00e8 05       		.uleb128 0x5
 7078 00e9 460C0000 		.4byte	.LASF21
 7079 00ed 05       		.byte	0x5
 7080 00ee 8E02     		.2byte	0x28e
 7081 00f0 F4000000 		.4byte	0xf4
 7082 00f4 06       		.uleb128 0x6
 7083 00f5 97000000 		.4byte	0x97
 7084 00f9 02       		.uleb128 0x2
 7085 00fa 08       		.byte	0x8
 7086 00fb 04       		.byte	0x4
 7087 00fc 1F0B0000 		.4byte	.LASF22
 7088 0100 02       		.uleb128 0x2
 7089 0101 04       		.byte	0x4
 7090 0102 07       		.byte	0x7
 7091 0103 20000000 		.4byte	.LASF23
 7092 0107 07       		.uleb128 0x7
 7093 0108 04       		.byte	0x4
 7094 0109 E1000000 		.4byte	0xe1
 7095 010d 07       		.uleb128 0x7
 7096 010e 04       		.byte	0x4
 7097 010f 13010000 		.4byte	0x113
 7098 0113 08       		.uleb128 0x8
 7099 0114 E1000000 		.4byte	0xe1
 7100 0118 09       		.uleb128 0x9
 7101 0119 DF050000 		.4byte	.LASF42
 7102 011d 01       		.byte	0x1
 7103 011e 2C000000 		.4byte	0x2c
 7104 0122 06       		.byte	0x6
 7105 0123 43       		.byte	0x43
 7106 0124 95010000 		.4byte	0x195
 7107 0128 0A       		.uleb128 0xa
 7108 0129 40100000 		.4byte	.LASF24
 7109 012d 01       		.byte	0x1
 7110 012e 0A       		.uleb128 0xa
 7111 012f 680E0000 		.4byte	.LASF25
 7112 0133 02       		.byte	0x2
 7113 0134 0A       		.uleb128 0xa
 7114 0135 07030000 		.4byte	.LASF26
 7115 0139 03       		.byte	0x3
 7116 013a 0A       		.uleb128 0xa
 7117 013b D40E0000 		.4byte	.LASF27
 7118 013f 04       		.byte	0x4
 7119 0140 0A       		.uleb128 0xa
 7120 0141 D4010000 		.4byte	.LASF28
 7121 0145 05       		.byte	0x5
 7122 0146 0A       		.uleb128 0xa
 7123 0147 75070000 		.4byte	.LASF29
 7124 014b 06       		.byte	0x6
 7125 014c 0A       		.uleb128 0xa
 7126 014d 0E0E0000 		.4byte	.LASF30
 7127 0151 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 173


 7128 0152 0A       		.uleb128 0xa
 7129 0153 13040000 		.4byte	.LASF31
 7130 0157 08       		.byte	0x8
 7131 0158 0A       		.uleb128 0xa
 7132 0159 F1000000 		.4byte	.LASF32
 7133 015d 09       		.byte	0x9
 7134 015e 0A       		.uleb128 0xa
 7135 015f 93040000 		.4byte	.LASF33
 7136 0163 0A       		.byte	0xa
 7137 0164 0A       		.uleb128 0xa
 7138 0165 C60E0000 		.4byte	.LASF34
 7139 0169 0B       		.byte	0xb
 7140 016a 0A       		.uleb128 0xa
 7141 016b DE020000 		.4byte	.LASF35
 7142 016f 0C       		.byte	0xc
 7143 0170 0A       		.uleb128 0xa
 7144 0171 46020000 		.4byte	.LASF36
 7145 0175 0D       		.byte	0xd
 7146 0176 0A       		.uleb128 0xa
 7147 0177 F0090000 		.4byte	.LASF37
 7148 017b 0E       		.byte	0xe
 7149 017c 0A       		.uleb128 0xa
 7150 017d A0010000 		.4byte	.LASF38
 7151 0181 0F       		.byte	0xf
 7152 0182 0A       		.uleb128 0xa
 7153 0183 9E0A0000 		.4byte	.LASF39
 7154 0187 10       		.byte	0x10
 7155 0188 0A       		.uleb128 0xa
 7156 0189 38030000 		.4byte	.LASF40
 7157 018d 11       		.byte	0x11
 7158 018e 0A       		.uleb128 0xa
 7159 018f EB0A0000 		.4byte	.LASF41
 7160 0193 12       		.byte	0x12
 7161 0194 00       		.byte	0
 7162 0195 09       		.uleb128 0x9
 7163 0196 22050000 		.4byte	.LASF43
 7164 019a 01       		.byte	0x1
 7165 019b 2C000000 		.4byte	0x2c
 7166 019f 06       		.byte	0x6
 7167 01a0 5A       		.byte	0x5a
 7168 01a1 EE010000 		.4byte	0x1ee
 7169 01a5 0A       		.uleb128 0xa
 7170 01a6 4E000000 		.4byte	.LASF44
 7171 01aa 01       		.byte	0x1
 7172 01ab 0A       		.uleb128 0xa
 7173 01ac 9D030000 		.4byte	.LASF45
 7174 01b0 02       		.byte	0x2
 7175 01b1 0A       		.uleb128 0xa
 7176 01b2 09000000 		.4byte	.LASF46
 7177 01b6 03       		.byte	0x3
 7178 01b7 0A       		.uleb128 0xa
 7179 01b8 160A0000 		.4byte	.LASF47
 7180 01bc 04       		.byte	0x4
 7181 01bd 0A       		.uleb128 0xa
 7182 01be BA0E0000 		.4byte	.LASF48
 7183 01c2 05       		.byte	0x5
 7184 01c3 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 174


 7185 01c4 920C0000 		.4byte	.LASF49
 7186 01c8 06       		.byte	0x6
 7187 01c9 0A       		.uleb128 0xa
 7188 01ca 72040000 		.4byte	.LASF50
 7189 01ce 07       		.byte	0x7
 7190 01cf 0A       		.uleb128 0xa
 7191 01d0 C70B0000 		.4byte	.LASF51
 7192 01d4 08       		.byte	0x8
 7193 01d5 0A       		.uleb128 0xa
 7194 01d6 D5070000 		.4byte	.LASF52
 7195 01da 09       		.byte	0x9
 7196 01db 0A       		.uleb128 0xa
 7197 01dc 2C050000 		.4byte	.LASF53
 7198 01e0 0A       		.byte	0xa
 7199 01e1 0A       		.uleb128 0xa
 7200 01e2 2A0D0000 		.4byte	.LASF54
 7201 01e6 0B       		.byte	0xb
 7202 01e7 0A       		.uleb128 0xa
 7203 01e8 12060000 		.4byte	.LASF55
 7204 01ec 0C       		.byte	0xc
 7205 01ed 00       		.byte	0
 7206 01ee 09       		.uleb128 0x9
 7207 01ef D4090000 		.4byte	.LASF56
 7208 01f3 01       		.byte	0x1
 7209 01f4 2C000000 		.4byte	0x2c
 7210 01f8 06       		.byte	0x6
 7211 01f9 68       		.byte	0x68
 7212 01fa CB020000 		.4byte	0x2cb
 7213 01fe 0A       		.uleb128 0xa
 7214 01ff 82100000 		.4byte	.LASF57
 7215 0203 00       		.byte	0
 7216 0204 0A       		.uleb128 0xa
 7217 0205 440E0000 		.4byte	.LASF58
 7218 0209 01       		.byte	0x1
 7219 020a 0A       		.uleb128 0xa
 7220 020b C5060000 		.4byte	.LASF59
 7221 020f 03       		.byte	0x3
 7222 0210 0A       		.uleb128 0xa
 7223 0211 FA030000 		.4byte	.LASF60
 7224 0215 04       		.byte	0x4
 7225 0216 0A       		.uleb128 0xa
 7226 0217 7F0C0000 		.4byte	.LASF61
 7227 021b 05       		.byte	0x5
 7228 021c 0A       		.uleb128 0xa
 7229 021d B0070000 		.4byte	.LASF62
 7230 0221 06       		.byte	0x6
 7231 0222 0A       		.uleb128 0xa
 7232 0223 E8060000 		.4byte	.LASF63
 7233 0227 09       		.byte	0x9
 7234 0228 0A       		.uleb128 0xa
 7235 0229 29000000 		.4byte	.LASF64
 7236 022d 0A       		.byte	0xa
 7237 022e 0A       		.uleb128 0xa
 7238 022f 960E0000 		.4byte	.LASF65
 7239 0233 0C       		.byte	0xc
 7240 0234 0A       		.uleb128 0xa
 7241 0235 4B0B0000 		.4byte	.LASF66
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 175


 7242 0239 0D       		.byte	0xd
 7243 023a 0A       		.uleb128 0xa
 7244 023b ED030000 		.4byte	.LASF67
 7245 023f 80       		.byte	0x80
 7246 0240 0A       		.uleb128 0xa
 7247 0241 33040000 		.4byte	.LASF68
 7248 0245 81       		.byte	0x81
 7249 0246 0A       		.uleb128 0xa
 7250 0247 38050000 		.4byte	.LASF69
 7251 024b 82       		.byte	0x82
 7252 024c 0A       		.uleb128 0xa
 7253 024d 240E0000 		.4byte	.LASF70
 7254 0251 83       		.byte	0x83
 7255 0252 0A       		.uleb128 0xa
 7256 0253 A00D0000 		.4byte	.LASF71
 7257 0257 84       		.byte	0x84
 7258 0258 0A       		.uleb128 0xa
 7259 0259 9E020000 		.4byte	.LASF72
 7260 025d 85       		.byte	0x85
 7261 025e 0A       		.uleb128 0xa
 7262 025f FE070000 		.4byte	.LASF73
 7263 0263 86       		.byte	0x86
 7264 0264 0A       		.uleb128 0xa
 7265 0265 90070000 		.4byte	.LASF74
 7266 0269 88       		.byte	0x88
 7267 026a 0A       		.uleb128 0xa
 7268 026b 830E0000 		.4byte	.LASF75
 7269 026f 89       		.byte	0x89
 7270 0270 0A       		.uleb128 0xa
 7271 0271 F00B0000 		.4byte	.LASF76
 7272 0275 8B       		.byte	0x8b
 7273 0276 0A       		.uleb128 0xa
 7274 0277 D90A0000 		.4byte	.LASF77
 7275 027b 8C       		.byte	0x8c
 7276 027c 0A       		.uleb128 0xa
 7277 027d B3080000 		.4byte	.LASF78
 7278 0281 8E       		.byte	0x8e
 7279 0282 0A       		.uleb128 0xa
 7280 0283 B5030000 		.4byte	.LASF79
 7281 0287 FB       		.byte	0xfb
 7282 0288 0A       		.uleb128 0xa
 7283 0289 D1030000 		.4byte	.LASF80
 7284 028d FA       		.byte	0xfa
 7285 028e 0A       		.uleb128 0xa
 7286 028f 350C0000 		.4byte	.LASF81
 7287 0293 90       		.byte	0x90
 7288 0294 0A       		.uleb128 0xa
 7289 0295 E3010000 		.4byte	.LASF82
 7290 0299 92       		.byte	0x92
 7291 029a 0A       		.uleb128 0xa
 7292 029b 530F0000 		.4byte	.LASF83
 7293 029f A1       		.byte	0xa1
 7294 02a0 0A       		.uleb128 0xa
 7295 02a1 620D0000 		.4byte	.LASF84
 7296 02a5 A2       		.byte	0xa2
 7297 02a6 0A       		.uleb128 0xa
 7298 02a7 490A0000 		.4byte	.LASF85
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 176


 7299 02ab A3       		.byte	0xa3
 7300 02ac 0A       		.uleb128 0xa
 7301 02ad 810D0000 		.4byte	.LASF86
 7302 02b1 A4       		.byte	0xa4
 7303 02b2 0A       		.uleb128 0xa
 7304 02b3 330E0000 		.4byte	.LASF87
 7305 02b7 A5       		.byte	0xa5
 7306 02b8 0A       		.uleb128 0xa
 7307 02b9 330D0000 		.4byte	.LASF88
 7308 02bd A6       		.byte	0xa6
 7309 02be 0A       		.uleb128 0xa
 7310 02bf 2B090000 		.4byte	.LASF89
 7311 02c3 A7       		.byte	0xa7
 7312 02c4 0A       		.uleb128 0xa
 7313 02c5 55090000 		.4byte	.LASF90
 7314 02c9 A8       		.byte	0xa8
 7315 02ca 00       		.byte	0
 7316 02cb 09       		.uleb128 0x9
 7317 02cc 32100000 		.4byte	.LASF91
 7318 02d0 01       		.byte	0x1
 7319 02d1 2C000000 		.4byte	0x2c
 7320 02d5 06       		.byte	0x6
 7321 02d6 BA       		.byte	0xba
 7322 02d7 0C030000 		.4byte	0x30c
 7323 02db 0A       		.uleb128 0xa
 7324 02dc B0050000 		.4byte	.LASF92
 7325 02e0 00       		.byte	0
 7326 02e1 0A       		.uleb128 0xa
 7327 02e2 290A0000 		.4byte	.LASF93
 7328 02e6 01       		.byte	0x1
 7329 02e7 0A       		.uleb128 0xa
 7330 02e8 F4010000 		.4byte	.LASF94
 7331 02ec 02       		.byte	0x2
 7332 02ed 0A       		.uleb128 0xa
 7333 02ee 46010000 		.4byte	.LASF95
 7334 02f2 03       		.byte	0x3
 7335 02f3 0A       		.uleb128 0xa
 7336 02f4 04010000 		.4byte	.LASF96
 7337 02f8 04       		.byte	0x4
 7338 02f9 0A       		.uleb128 0xa
 7339 02fa 36000000 		.4byte	.LASF97
 7340 02fe 05       		.byte	0x5
 7341 02ff 0A       		.uleb128 0xa
 7342 0300 04070000 		.4byte	.LASF98
 7343 0304 06       		.byte	0x6
 7344 0305 0A       		.uleb128 0xa
 7345 0306 430D0000 		.4byte	.LASF99
 7346 030a 07       		.byte	0x7
 7347 030b 00       		.byte	0
 7348 030c 09       		.uleb128 0x9
 7349 030d 710B0000 		.4byte	.LASF100
 7350 0311 01       		.byte	0x1
 7351 0312 2C000000 		.4byte	0x2c
 7352 0316 06       		.byte	0x6
 7353 0317 DD       		.byte	0xdd
 7354 0318 29030000 		.4byte	0x329
 7355 031c 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 177


 7356 031d A6050000 		.4byte	.LASF101
 7357 0321 00       		.byte	0
 7358 0322 0A       		.uleb128 0xa
 7359 0323 56070000 		.4byte	.LASF102
 7360 0327 01       		.byte	0x1
 7361 0328 00       		.byte	0
 7362 0329 09       		.uleb128 0x9
 7363 032a A90E0000 		.4byte	.LASF103
 7364 032e 01       		.byte	0x1
 7365 032f 2C000000 		.4byte	0x2c
 7366 0333 06       		.byte	0x6
 7367 0334 E5       		.byte	0xe5
 7368 0335 76030000 		.4byte	0x376
 7369 0339 0A       		.uleb128 0xa
 7370 033a 5D070000 		.4byte	.LASF104
 7371 033e 00       		.byte	0
 7372 033f 0A       		.uleb128 0xa
 7373 0340 4F100000 		.4byte	.LASF105
 7374 0344 01       		.byte	0x1
 7375 0345 0A       		.uleb128 0xa
 7376 0346 FE080000 		.4byte	.LASF106
 7377 034a 02       		.byte	0x2
 7378 034b 0A       		.uleb128 0xa
 7379 034c C00A0000 		.4byte	.LASF107
 7380 0350 03       		.byte	0x3
 7381 0351 0A       		.uleb128 0xa
 7382 0352 DF090000 		.4byte	.LASF108
 7383 0356 04       		.byte	0x4
 7384 0357 0A       		.uleb128 0xa
 7385 0358 D10B0000 		.4byte	.LASF109
 7386 035c 05       		.byte	0x5
 7387 035d 0A       		.uleb128 0xa
 7388 035e 2B0B0000 		.4byte	.LASF110
 7389 0362 06       		.byte	0x6
 7390 0363 0A       		.uleb128 0xa
 7391 0364 930A0000 		.4byte	.LASF111
 7392 0368 07       		.byte	0x7
 7393 0369 0A       		.uleb128 0xa
 7394 036a 7B050000 		.4byte	.LASF112
 7395 036e 08       		.byte	0x8
 7396 036f 0A       		.uleb128 0xa
 7397 0370 B9060000 		.4byte	.LASF113
 7398 0374 09       		.byte	0x9
 7399 0375 00       		.byte	0
 7400 0376 0B       		.uleb128 0xb
 7401 0377 79000000 		.4byte	.LASF117
 7402 037b 86       		.byte	0x86
 7403 037c 07       		.byte	0x7
 7404 037d 9A       		.byte	0x9a
 7405 037e B3030000 		.4byte	0x3b3
 7406 0382 0C       		.uleb128 0xc
 7407 0383 4E050000 		.4byte	.LASF114
 7408 0387 07       		.byte	0x7
 7409 0388 9B       		.byte	0x9b
 7410 0389 B3030000 		.4byte	0x3b3
 7411 038d 00       		.byte	0
 7412 038e 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 178


 7413 038f DC0B0000 		.4byte	.LASF115
 7414 0393 07       		.byte	0x7
 7415 0394 9C       		.byte	0x9c
 7416 0395 BB000000 		.4byte	0xbb
 7417 0399 80       		.byte	0x80
 7418 039a 0D       		.uleb128 0xd
 7419 039b 696E6400 		.ascii	"ind\000"
 7420 039f 07       		.byte	0x7
 7421 03a0 9D       		.byte	0x9d
 7422 03a1 BB000000 		.4byte	0xbb
 7423 03a5 82       		.byte	0x82
 7424 03a6 0C       		.uleb128 0xc
 7425 03a7 C5010000 		.4byte	.LASF116
 7426 03ab 07       		.byte	0x7
 7427 03ac 9E       		.byte	0x9e
 7428 03ad 97000000 		.4byte	0x97
 7429 03b1 84       		.byte	0x84
 7430 03b2 00       		.byte	0
 7431 03b3 0E       		.uleb128 0xe
 7432 03b4 97000000 		.4byte	0x97
 7433 03b8 C3030000 		.4byte	0x3c3
 7434 03bc 0F       		.uleb128 0xf
 7435 03bd 00010000 		.4byte	0x100
 7436 03c1 7F       		.byte	0x7f
 7437 03c2 00       		.byte	0
 7438 03c3 0B       		.uleb128 0xb
 7439 03c4 EE040000 		.4byte	.LASF118
 7440 03c8 10       		.byte	0x10
 7441 03c9 07       		.byte	0x7
 7442 03ca A8       		.byte	0xa8
 7443 03cb F3030000 		.4byte	0x3f3
 7444 03cf 0D       		.uleb128 0xd
 7445 03d0 696400   		.ascii	"id\000"
 7446 03d3 07       		.byte	0x7
 7447 03d4 A9       		.byte	0xa9
 7448 03d5 97000000 		.4byte	0x97
 7449 03d9 00       		.byte	0
 7450 03da 0C       		.uleb128 0xc
 7451 03db 290F0000 		.4byte	.LASF119
 7452 03df 07       		.byte	0x7
 7453 03e0 AA       		.byte	0xaa
 7454 03e1 97000000 		.4byte	0x97
 7455 03e5 01       		.byte	0x1
 7456 03e6 0C       		.uleb128 0xc
 7457 03e7 71020000 		.4byte	.LASF120
 7458 03eb 07       		.byte	0x7
 7459 03ec AB       		.byte	0xab
 7460 03ed F3030000 		.4byte	0x3f3
 7461 03f1 02       		.byte	0x2
 7462 03f2 00       		.byte	0
 7463 03f3 0E       		.uleb128 0xe
 7464 03f4 97000000 		.4byte	0x97
 7465 03f8 03040000 		.4byte	0x403
 7466 03fc 0F       		.uleb128 0xf
 7467 03fd 00010000 		.4byte	0x100
 7468 0401 0D       		.byte	0xd
 7469 0402 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 179


 7470 0403 0B       		.uleb128 0xb
 7471 0404 E0080000 		.4byte	.LASF121
 7472 0408 10       		.byte	0x10
 7473 0409 07       		.byte	0x7
 7474 040a B2       		.byte	0xb2
 7475 040b 4C040000 		.4byte	0x44c
 7476 040f 0C       		.uleb128 0xc
 7477 0410 D9000000 		.4byte	.LASF122
 7478 0414 07       		.byte	0x7
 7479 0415 B4       		.byte	0xb4
 7480 0416 C7000000 		.4byte	0xc7
 7481 041a 00       		.byte	0
 7482 041b 0C       		.uleb128 0xc
 7483 041c B5040000 		.4byte	.LASF123
 7484 0420 07       		.byte	0x7
 7485 0421 B5       		.byte	0xb5
 7486 0422 C7000000 		.4byte	0xc7
 7487 0426 04       		.byte	0x4
 7488 0427 0C       		.uleb128 0xc
 7489 0428 85070000 		.4byte	.LASF124
 7490 042c 07       		.byte	0x7
 7491 042d B6       		.byte	0xb6
 7492 042e 97000000 		.4byte	0x97
 7493 0432 08       		.byte	0x8
 7494 0433 0D       		.uleb128 0xd
 7495 0434 72657300 		.ascii	"res\000"
 7496 0438 07       		.byte	0x7
 7497 0439 B7       		.byte	0xb7
 7498 043a 97000000 		.4byte	0x97
 7499 043e 09       		.byte	0x9
 7500 043f 0C       		.uleb128 0xc
 7501 0440 71020000 		.4byte	.LASF120
 7502 0444 07       		.byte	0x7
 7503 0445 B8       		.byte	0xb8
 7504 0446 4C040000 		.4byte	0x44c
 7505 044a 0A       		.byte	0xa
 7506 044b 00       		.byte	0
 7507 044c 0E       		.uleb128 0xe
 7508 044d 97000000 		.4byte	0x97
 7509 0451 5C040000 		.4byte	0x45c
 7510 0455 0F       		.uleb128 0xf
 7511 0456 00010000 		.4byte	0x100
 7512 045a 05       		.byte	0x5
 7513 045b 00       		.byte	0
 7514 045c 0B       		.uleb128 0xb
 7515 045d 99010000 		.4byte	.LASF125
 7516 0461 10       		.byte	0x10
 7517 0462 07       		.byte	0x7
 7518 0463 C0       		.byte	0xc0
 7519 0464 A5040000 		.4byte	0x4a5
 7520 0468 0C       		.uleb128 0xc
 7521 0469 CB0A0000 		.4byte	.LASF126
 7522 046d 07       		.byte	0x7
 7523 046e C1       		.byte	0xc1
 7524 046f A5040000 		.4byte	0x4a5
 7525 0473 00       		.byte	0
 7526 0474 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 180


 7527 0475 F60F0000 		.4byte	.LASF127
 7528 0479 07       		.byte	0x7
 7529 047a C2       		.byte	0xc2
 7530 047b B5040000 		.4byte	0x4b5
 7531 047f 04       		.byte	0x4
 7532 0480 0C       		.uleb128 0xc
 7533 0481 D8040000 		.4byte	.LASF128
 7534 0485 07       		.byte	0x7
 7535 0486 C3       		.byte	0xc3
 7536 0487 C5040000 		.4byte	0x4c5
 7537 048b 0C       		.byte	0xc
 7538 048c 0C       		.uleb128 0xc
 7539 048d 79030000 		.4byte	.LASF129
 7540 0491 07       		.byte	0x7
 7541 0492 C4       		.byte	0xc4
 7542 0493 97000000 		.4byte	0x97
 7543 0497 0E       		.byte	0xe
 7544 0498 0C       		.uleb128 0xc
 7545 0499 71020000 		.4byte	.LASF120
 7546 049d 07       		.byte	0x7
 7547 049e C5       		.byte	0xc5
 7548 049f D5040000 		.4byte	0x4d5
 7549 04a3 0F       		.byte	0xf
 7550 04a4 00       		.byte	0
 7551 04a5 0E       		.uleb128 0xe
 7552 04a6 A3000000 		.4byte	0xa3
 7553 04aa B5040000 		.4byte	0x4b5
 7554 04ae 0F       		.uleb128 0xf
 7555 04af 00010000 		.4byte	0x100
 7556 04b3 01       		.byte	0x1
 7557 04b4 00       		.byte	0
 7558 04b5 0E       		.uleb128 0xe
 7559 04b6 AF000000 		.4byte	0xaf
 7560 04ba C5040000 		.4byte	0x4c5
 7561 04be 0F       		.uleb128 0xf
 7562 04bf 00010000 		.4byte	0x100
 7563 04c3 01       		.byte	0x1
 7564 04c4 00       		.byte	0
 7565 04c5 0E       		.uleb128 0xe
 7566 04c6 97000000 		.4byte	0x97
 7567 04ca D5040000 		.4byte	0x4d5
 7568 04ce 0F       		.uleb128 0xf
 7569 04cf 00010000 		.4byte	0x100
 7570 04d3 01       		.byte	0x1
 7571 04d4 00       		.byte	0
 7572 04d5 0E       		.uleb128 0xe
 7573 04d6 97000000 		.4byte	0x97
 7574 04da E5040000 		.4byte	0x4e5
 7575 04de 0F       		.uleb128 0xf
 7576 04df 00010000 		.4byte	0x100
 7577 04e3 00       		.byte	0
 7578 04e4 00       		.byte	0
 7579 04e5 0B       		.uleb128 0xb
 7580 04e6 2D010000 		.4byte	.LASF130
 7581 04ea 10       		.byte	0x10
 7582 04eb 07       		.byte	0x7
 7583 04ec CC       		.byte	0xcc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 181


 7584 04ed 16050000 		.4byte	0x516
 7585 04f1 0C       		.uleb128 0xc
 7586 04f2 54030000 		.4byte	.LASF131
 7587 04f6 07       		.byte	0x7
 7588 04f7 CD       		.byte	0xcd
 7589 04f8 97000000 		.4byte	0x97
 7590 04fc 00       		.byte	0
 7591 04fd 0C       		.uleb128 0xc
 7592 04fe 4D070000 		.4byte	.LASF132
 7593 0502 07       		.byte	0x7
 7594 0503 CE       		.byte	0xce
 7595 0504 97000000 		.4byte	0x97
 7596 0508 01       		.byte	0x1
 7597 0509 0C       		.uleb128 0xc
 7598 050a 71020000 		.4byte	.LASF120
 7599 050e 07       		.byte	0x7
 7600 050f CF       		.byte	0xcf
 7601 0510 F3030000 		.4byte	0x3f3
 7602 0514 02       		.byte	0x2
 7603 0515 00       		.byte	0
 7604 0516 0B       		.uleb128 0xb
 7605 0517 370B0000 		.4byte	.LASF133
 7606 051b 10       		.byte	0x10
 7607 051c 07       		.byte	0x7
 7608 051d D6       		.byte	0xd6
 7609 051e 6B050000 		.4byte	0x56b
 7610 0522 0C       		.uleb128 0xc
 7611 0523 AD0F0000 		.4byte	.LASF134
 7612 0527 07       		.byte	0x7
 7613 0528 D7       		.byte	0xd7
 7614 0529 C7000000 		.4byte	0xc7
 7615 052d 00       		.byte	0
 7616 052e 0C       		.uleb128 0xc
 7617 052f CA050000 		.4byte	.LASF135
 7618 0533 07       		.byte	0x7
 7619 0534 D8       		.byte	0xd8
 7620 0535 D3000000 		.4byte	0xd3
 7621 0539 04       		.byte	0x4
 7622 053a 0C       		.uleb128 0xc
 7623 053b 4B0C0000 		.4byte	.LASF136
 7624 053f 07       		.byte	0x7
 7625 0540 D9       		.byte	0xd9
 7626 0541 D3000000 		.4byte	0xd3
 7627 0545 08       		.byte	0x8
 7628 0546 0C       		.uleb128 0xc
 7629 0547 E1070000 		.4byte	.LASF137
 7630 054b 07       		.byte	0x7
 7631 054c DA       		.byte	0xda
 7632 054d 97000000 		.4byte	0x97
 7633 0551 0C       		.byte	0xc
 7634 0552 0C       		.uleb128 0xc
 7635 0553 B50D0000 		.4byte	.LASF138
 7636 0557 07       		.byte	0x7
 7637 0558 DB       		.byte	0xdb
 7638 0559 97000000 		.4byte	0x97
 7639 055d 0D       		.byte	0xd
 7640 055e 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 182


 7641 055f 71020000 		.4byte	.LASF120
 7642 0563 07       		.byte	0x7
 7643 0564 DC       		.byte	0xdc
 7644 0565 C5040000 		.4byte	0x4c5
 7645 0569 0E       		.byte	0xe
 7646 056a 00       		.byte	0
 7647 056b 0B       		.uleb128 0xb
 7648 056c C20F0000 		.4byte	.LASF139
 7649 0570 60       		.byte	0x60
 7650 0571 07       		.byte	0x7
 7651 0572 E6       		.byte	0xe6
 7652 0573 CA050000 		.4byte	0x5ca
 7653 0577 0C       		.uleb128 0xc
 7654 0578 EB090000 		.4byte	.LASF140
 7655 057c 07       		.byte	0x7
 7656 057d E7       		.byte	0xe7
 7657 057e 97000000 		.4byte	0x97
 7658 0582 00       		.byte	0
 7659 0583 0C       		.uleb128 0xc
 7660 0584 71020000 		.4byte	.LASF120
 7661 0588 07       		.byte	0x7
 7662 0589 E8       		.byte	0xe8
 7663 058a CA050000 		.4byte	0x5ca
 7664 058e 01       		.byte	0x1
 7665 058f 0D       		.uleb128 0xd
 7666 0590 64657600 		.ascii	"dev\000"
 7667 0594 07       		.byte	0x7
 7668 0595 E9       		.byte	0xe9
 7669 0596 C3030000 		.4byte	0x3c3
 7670 059a 10       		.byte	0x10
 7671 059b 0C       		.uleb128 0xc
 7672 059c 09090000 		.4byte	.LASF141
 7673 05a0 07       		.byte	0x7
 7674 05a1 EA       		.byte	0xea
 7675 05a2 03040000 		.4byte	0x403
 7676 05a6 20       		.byte	0x20
 7677 05a7 0D       		.uleb128 0xd
 7678 05a8 656D6700 		.ascii	"emg\000"
 7679 05ac 07       		.byte	0x7
 7680 05ad EB       		.byte	0xeb
 7681 05ae 5C040000 		.4byte	0x45c
 7682 05b2 30       		.byte	0x30
 7683 05b3 0D       		.uleb128 0xd
 7684 05b4 4D5300   		.ascii	"MS\000"
 7685 05b7 07       		.byte	0x7
 7686 05b8 EC       		.byte	0xec
 7687 05b9 E5040000 		.4byte	0x4e5
 7688 05bd 40       		.byte	0x40
 7689 05be 0D       		.uleb128 0xd
 7690 05bf 464200   		.ascii	"FB\000"
 7691 05c2 07       		.byte	0x7
 7692 05c3 ED       		.byte	0xed
 7693 05c4 16050000 		.4byte	0x516
 7694 05c8 50       		.byte	0x50
 7695 05c9 00       		.byte	0
 7696 05ca 0E       		.uleb128 0xe
 7697 05cb 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 183


 7698 05cf DA050000 		.4byte	0x5da
 7699 05d3 0F       		.uleb128 0xf
 7700 05d4 00010000 		.4byte	0x100
 7701 05d8 0E       		.byte	0xe
 7702 05d9 00       		.byte	0
 7703 05da 10       		.uleb128 0x10
 7704 05db 18020000 		.4byte	.LASF142
 7705 05df 2C       		.byte	0x2c
 7706 05e0 07       		.byte	0x7
 7707 05e1 3801     		.2byte	0x138
 7708 05e3 0F060000 		.4byte	0x60f
 7709 05e7 11       		.uleb128 0x11
 7710 05e8 9B0D0000 		.4byte	.LASF143
 7711 05ec 07       		.byte	0x7
 7712 05ed 3901     		.2byte	0x139
 7713 05ef 97000000 		.4byte	0x97
 7714 05f3 00       		.byte	0
 7715 05f4 11       		.uleb128 0x11
 7716 05f5 950D0000 		.4byte	.LASF144
 7717 05f9 07       		.byte	0x7
 7718 05fa 3A01     		.2byte	0x13a
 7719 05fc 97000000 		.4byte	0x97
 7720 0600 01       		.byte	0x1
 7721 0601 11       		.uleb128 0x11
 7722 0602 EA000000 		.4byte	.LASF145
 7723 0606 07       		.byte	0x7
 7724 0607 3B01     		.2byte	0x13b
 7725 0609 0F060000 		.4byte	0x60f
 7726 060d 04       		.byte	0x4
 7727 060e 00       		.byte	0
 7728 060f 0E       		.uleb128 0xe
 7729 0610 0D010000 		.4byte	0x10d
 7730 0614 1F060000 		.4byte	0x61f
 7731 0618 0F       		.uleb128 0xf
 7732 0619 00010000 		.4byte	0x100
 7733 061d 09       		.byte	0x9
 7734 061e 00       		.byte	0
 7735 061f 10       		.uleb128 0x10
 7736 0620 7B040000 		.4byte	.LASF146
 7737 0624 10       		.byte	0x10
 7738 0625 07       		.byte	0x7
 7739 0626 3E01     		.2byte	0x13e
 7740 0628 88060000 		.4byte	0x688
 7741 062c 11       		.uleb128 0x11
 7742 062d 040D0000 		.4byte	.LASF147
 7743 0631 07       		.byte	0x7
 7744 0632 3F01     		.2byte	0x13f
 7745 0634 88060000 		.4byte	0x688
 7746 0638 00       		.byte	0
 7747 0639 11       		.uleb128 0x11
 7748 063a CC0F0000 		.4byte	.LASF148
 7749 063e 07       		.byte	0x7
 7750 063f 4001     		.2byte	0x140
 7751 0641 97000000 		.4byte	0x97
 7752 0645 04       		.byte	0x4
 7753 0646 11       		.uleb128 0x11
 7754 0647 7E020000 		.4byte	.LASF149
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 184


 7755 064b 07       		.byte	0x7
 7756 064c 4101     		.2byte	0x141
 7757 064e 97000000 		.4byte	0x97
 7758 0652 05       		.byte	0x5
 7759 0653 11       		.uleb128 0x11
 7760 0654 3C010000 		.4byte	.LASF150
 7761 0658 07       		.byte	0x7
 7762 0659 4201     		.2byte	0x142
 7763 065b 0D010000 		.4byte	0x10d
 7764 065f 08       		.byte	0x8
 7765 0660 11       		.uleb128 0x11
 7766 0661 D0070000 		.4byte	.LASF151
 7767 0665 07       		.byte	0x7
 7768 0666 4301     		.2byte	0x143
 7769 0668 97000000 		.4byte	0x97
 7770 066c 0C       		.byte	0xc
 7771 066d 11       		.uleb128 0x11
 7772 066e 5E0A0000 		.4byte	.LASF152
 7773 0672 07       		.byte	0x7
 7774 0673 4401     		.2byte	0x144
 7775 0675 97000000 		.4byte	0x97
 7776 0679 0D       		.byte	0xd
 7777 067a 11       		.uleb128 0x11
 7778 067b C00B0000 		.4byte	.LASF153
 7779 067f 07       		.byte	0x7
 7780 0680 4501     		.2byte	0x145
 7781 0682 97000000 		.4byte	0x97
 7782 0686 0E       		.byte	0xe
 7783 0687 00       		.byte	0
 7784 0688 07       		.uleb128 0x7
 7785 0689 04       		.byte	0x4
 7786 068a 97000000 		.4byte	0x97
 7787 068e 10       		.uleb128 0x10
 7788 068f 82090000 		.4byte	.LASF154
 7789 0693 0C       		.byte	0xc
 7790 0694 07       		.byte	0x7
 7791 0695 5A01     		.2byte	0x15a
 7792 0697 B6060000 		.4byte	0x6b6
 7793 069b 12       		.uleb128 0x12
 7794 069c 656D6700 		.ascii	"emg\000"
 7795 06a0 07       		.byte	0x7
 7796 06a1 5B01     		.2byte	0x15b
 7797 06a3 B6060000 		.4byte	0x6b6
 7798 06a7 00       		.byte	0
 7799 06a8 11       		.uleb128 0x11
 7800 06a9 2A040000 		.4byte	.LASF155
 7801 06ad 07       		.byte	0x7
 7802 06ae 5C01     		.2byte	0x15c
 7803 06b0 D3000000 		.4byte	0xd3
 7804 06b4 08       		.byte	0x8
 7805 06b5 00       		.byte	0
 7806 06b6 0E       		.uleb128 0xe
 7807 06b7 C7000000 		.4byte	0xc7
 7808 06bb C6060000 		.4byte	0x6c6
 7809 06bf 0F       		.uleb128 0xf
 7810 06c0 00010000 		.4byte	0x100
 7811 06c4 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 185


 7812 06c5 00       		.byte	0
 7813 06c6 13       		.uleb128 0x13
 7814 06c7 FC0C0000 		.4byte	.LASF289
 7815 06cb 02       		.byte	0x2
 7816 06cc 1403     		.2byte	0x314
 7817 06ce 8C000000 		.4byte	0x8c
 7818 06d2 03       		.byte	0x3
 7819 06d3 F0060000 		.4byte	0x6f0
 7820 06d7 14       		.uleb128 0x14
 7821 06d8 24040000 		.4byte	.LASF207
 7822 06dc 02       		.byte	0x2
 7823 06dd 1403     		.2byte	0x314
 7824 06df 8C000000 		.4byte	0x8c
 7825 06e3 15       		.uleb128 0x15
 7826 06e4 BE010000 		.4byte	.LASF290
 7827 06e8 02       		.byte	0x2
 7828 06e9 1603     		.2byte	0x316
 7829 06eb 8C000000 		.4byte	0x8c
 7830 06ef 00       		.byte	0
 7831 06f0 16       		.uleb128 0x16
 7832 06f1 F80D0000 		.4byte	.LASF156
 7833 06f5 01       		.byte	0x1
 7834 06f6 3D       		.byte	0x3d
 7835 06f7 00000000 		.4byte	.LFB64
 7836 06fb BC050000 		.4byte	.LFE64-.LFB64
 7837 06ff 01       		.uleb128 0x1
 7838 0700 9C       		.byte	0x9c
 7839 0701 F8070000 		.4byte	0x7f8
 7840 0705 17       		.uleb128 0x17
 7841 0706 74050000 		.4byte	.LASF158
 7842 070a 01       		.byte	0x1
 7843 070b 3F       		.byte	0x3f
 7844 070c 97000000 		.4byte	0x97
 7845 0710 02       		.uleb128 0x2
 7846 0711 91       		.byte	0x91
 7847 0712 77       		.sleb128 -9
 7848 0713 18       		.uleb128 0x18
 7849 0714 C6060000 		.4byte	0x6c6
 7850 0718 9A040000 		.4byte	.LBB12
 7851 071c 08000000 		.4byte	.LBE12-.LBB12
 7852 0720 01       		.byte	0x1
 7853 0721 A2       		.byte	0xa2
 7854 0722 41070000 		.4byte	0x741
 7855 0726 19       		.uleb128 0x19
 7856 0727 D7060000 		.4byte	0x6d7
 7857 072b 02       		.uleb128 0x2
 7858 072c 91       		.byte	0x91
 7859 072d 60       		.sleb128 -32
 7860 072e 1A       		.uleb128 0x1a
 7861 072f 9A040000 		.4byte	.LBB13
 7862 0733 08000000 		.4byte	.LBE13-.LBB13
 7863 0737 1B       		.uleb128 0x1b
 7864 0738 E3060000 		.4byte	0x6e3
 7865 073c 02       		.uleb128 0x2
 7866 073d 91       		.byte	0x91
 7867 073e 5C       		.sleb128 -36
 7868 073f 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 186


 7869 0740 00       		.byte	0
 7870 0741 18       		.uleb128 0x18
 7871 0742 C6060000 		.4byte	0x6c6
 7872 0746 B8040000 		.4byte	.LBB14
 7873 074a 08000000 		.4byte	.LBE14-.LBB14
 7874 074e 01       		.byte	0x1
 7875 074f AE       		.byte	0xae
 7876 0750 6F070000 		.4byte	0x76f
 7877 0754 19       		.uleb128 0x19
 7878 0755 D7060000 		.4byte	0x6d7
 7879 0759 02       		.uleb128 0x2
 7880 075a 91       		.byte	0x91
 7881 075b 70       		.sleb128 -16
 7882 075c 1A       		.uleb128 0x1a
 7883 075d B8040000 		.4byte	.LBB15
 7884 0761 08000000 		.4byte	.LBE15-.LBB15
 7885 0765 1B       		.uleb128 0x1b
 7886 0766 E3060000 		.4byte	0x6e3
 7887 076a 02       		.uleb128 0x2
 7888 076b 91       		.byte	0x91
 7889 076c 58       		.sleb128 -40
 7890 076d 00       		.byte	0
 7891 076e 00       		.byte	0
 7892 076f 18       		.uleb128 0x18
 7893 0770 C6060000 		.4byte	0x6c6
 7894 0774 56050000 		.4byte	.LBB16
 7895 0778 08000000 		.4byte	.LBE16-.LBB16
 7896 077c 01       		.byte	0x1
 7897 077d F2       		.byte	0xf2
 7898 077e 9D070000 		.4byte	0x79d
 7899 0782 19       		.uleb128 0x19
 7900 0783 D7060000 		.4byte	0x6d7
 7901 0787 02       		.uleb128 0x2
 7902 0788 91       		.byte	0x91
 7903 0789 6C       		.sleb128 -20
 7904 078a 1A       		.uleb128 0x1a
 7905 078b 56050000 		.4byte	.LBB17
 7906 078f 08000000 		.4byte	.LBE17-.LBB17
 7907 0793 1B       		.uleb128 0x1b
 7908 0794 E3060000 		.4byte	0x6e3
 7909 0798 02       		.uleb128 0x2
 7910 0799 91       		.byte	0x91
 7911 079a 54       		.sleb128 -44
 7912 079b 00       		.byte	0
 7913 079c 00       		.byte	0
 7914 079d 1C       		.uleb128 0x1c
 7915 079e C6060000 		.4byte	0x6c6
 7916 07a2 86050000 		.4byte	.LBB18
 7917 07a6 08000000 		.4byte	.LBE18-.LBB18
 7918 07aa 01       		.byte	0x1
 7919 07ab 1001     		.2byte	0x110
 7920 07ad CC070000 		.4byte	0x7cc
 7921 07b1 19       		.uleb128 0x19
 7922 07b2 D7060000 		.4byte	0x6d7
 7923 07b6 02       		.uleb128 0x2
 7924 07b7 91       		.byte	0x91
 7925 07b8 68       		.sleb128 -24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 187


 7926 07b9 1A       		.uleb128 0x1a
 7927 07ba 86050000 		.4byte	.LBB19
 7928 07be 08000000 		.4byte	.LBE19-.LBB19
 7929 07c2 1B       		.uleb128 0x1b
 7930 07c3 E3060000 		.4byte	0x6e3
 7931 07c7 02       		.uleb128 0x2
 7932 07c8 91       		.byte	0x91
 7933 07c9 50       		.sleb128 -48
 7934 07ca 00       		.byte	0
 7935 07cb 00       		.byte	0
 7936 07cc 1D       		.uleb128 0x1d
 7937 07cd C6060000 		.4byte	0x6c6
 7938 07d1 9E050000 		.4byte	.LBB20
 7939 07d5 08000000 		.4byte	.LBE20-.LBB20
 7940 07d9 01       		.byte	0x1
 7941 07da 1601     		.2byte	0x116
 7942 07dc 19       		.uleb128 0x19
 7943 07dd D7060000 		.4byte	0x6d7
 7944 07e1 02       		.uleb128 0x2
 7945 07e2 91       		.byte	0x91
 7946 07e3 64       		.sleb128 -28
 7947 07e4 1A       		.uleb128 0x1a
 7948 07e5 9E050000 		.4byte	.LBB21
 7949 07e9 08000000 		.4byte	.LBE21-.LBB21
 7950 07ed 1B       		.uleb128 0x1b
 7951 07ee E3060000 		.4byte	0x6e3
 7952 07f2 02       		.uleb128 0x2
 7953 07f3 91       		.byte	0x91
 7954 07f4 4C       		.sleb128 -52
 7955 07f5 00       		.byte	0
 7956 07f6 00       		.byte	0
 7957 07f7 00       		.byte	0
 7958 07f8 1E       		.uleb128 0x1e
 7959 07f9 00000000 		.4byte	.LASF157
 7960 07fd 01       		.byte	0x1
 7961 07fe 2401     		.2byte	0x124
 7962 0800 00000000 		.4byte	.LFB65
 7963 0804 22000000 		.4byte	.LFE65-.LFB65
 7964 0808 01       		.uleb128 0x1
 7965 0809 9C       		.byte	0x9c
 7966 080a 1F080000 		.4byte	0x81f
 7967 080e 1F       		.uleb128 0x1f
 7968 080f 85040000 		.4byte	.LASF159
 7969 0813 01       		.byte	0x1
 7970 0814 2501     		.2byte	0x125
 7971 0816 1F080000 		.4byte	0x81f
 7972 081a 03       		.uleb128 0x3
 7973 081b 91       		.byte	0x91
 7974 081c 9C74     		.sleb128 -1508
 7975 081e 00       		.byte	0
 7976 081f 0E       		.uleb128 0xe
 7977 0820 E1000000 		.4byte	0xe1
 7978 0824 30080000 		.4byte	0x830
 7979 0828 20       		.uleb128 0x20
 7980 0829 00010000 		.4byte	0x100
 7981 082d DB05     		.2byte	0x5db
 7982 082f 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 188


 7983 0830 21       		.uleb128 0x21
 7984 0831 F7060000 		.4byte	.LASF201
 7985 0835 01       		.byte	0x1
 7986 0836 2E01     		.2byte	0x12e
 7987 0838 97000000 		.4byte	0x97
 7988 083c 00000000 		.4byte	.LFB66
 7989 0840 5E000000 		.4byte	.LFE66-.LFB66
 7990 0844 01       		.uleb128 0x1
 7991 0845 9C       		.byte	0x9c
 7992 0846 69080000 		.4byte	0x869
 7993 084a 22       		.uleb128 0x22
 7994 084b E5000000 		.4byte	.LASF161
 7995 084f 01       		.byte	0x1
 7996 0850 2E01     		.2byte	0x12e
 7997 0852 97000000 		.4byte	0x97
 7998 0856 02       		.uleb128 0x2
 7999 0857 91       		.byte	0x91
 8000 0858 6F       		.sleb128 -17
 8001 0859 23       		.uleb128 0x23
 8002 085a 736F6400 		.ascii	"sod\000"
 8003 085e 01       		.byte	0x1
 8004 085f 2F01     		.2byte	0x12f
 8005 0861 97000000 		.4byte	0x97
 8006 0865 02       		.uleb128 0x2
 8007 0866 91       		.byte	0x91
 8008 0867 77       		.sleb128 -9
 8009 0868 00       		.byte	0
 8010 0869 1E       		.uleb128 0x1e
 8011 086a D80F0000 		.4byte	.LASF160
 8012 086e 01       		.byte	0x1
 8013 086f 3F01     		.2byte	0x13f
 8014 0871 00000000 		.4byte	.LFB67
 8015 0875 64010000 		.4byte	.LFE67-.LFB67
 8016 0879 01       		.uleb128 0x1
 8017 087a 9C       		.byte	0x9c
 8018 087b B2080000 		.4byte	0x8b2
 8019 087f 22       		.uleb128 0x22
 8020 0880 200D0000 		.4byte	.LASF162
 8021 0884 01       		.byte	0x1
 8022 0885 3F01     		.2byte	0x13f
 8023 0887 A3000000 		.4byte	0xa3
 8024 088b 04       		.uleb128 0x4
 8025 088c 91       		.byte	0x91
 8026 088d B6C47E   		.sleb128 -24010
 8027 0890 1F       		.uleb128 0x1f
 8028 0891 85040000 		.4byte	.LASF159
 8029 0895 01       		.byte	0x1
 8030 0896 4001     		.2byte	0x140
 8031 0898 B2080000 		.4byte	0x8b2
 8032 089c 03       		.uleb128 0x3
 8033 089d 91       		.byte	0x91
 8034 089e D860     		.sleb128 -4008
 8035 08a0 1F       		.uleb128 0x1f
 8036 08a1 41070000 		.4byte	.LASF163
 8037 08a5 01       		.byte	0x1
 8038 08a6 4101     		.2byte	0x141
 8039 08a8 C3080000 		.4byte	0x8c3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 189


 8040 08ac 04       		.uleb128 0x4
 8041 08ad 91       		.byte	0x91
 8042 08ae B8C47E   		.sleb128 -24008
 8043 08b1 00       		.byte	0
 8044 08b2 0E       		.uleb128 0xe
 8045 08b3 E1000000 		.4byte	0xe1
 8046 08b7 C3080000 		.4byte	0x8c3
 8047 08bb 20       		.uleb128 0x20
 8048 08bc 00010000 		.4byte	0x100
 8049 08c0 9F0F     		.2byte	0xf9f
 8050 08c2 00       		.byte	0
 8051 08c3 0E       		.uleb128 0xe
 8052 08c4 E1000000 		.4byte	0xe1
 8053 08c8 D4080000 		.4byte	0x8d4
 8054 08cc 20       		.uleb128 0x20
 8055 08cd 00010000 		.4byte	0x100
 8056 08d1 1F4E     		.2byte	0x4e1f
 8057 08d3 00       		.byte	0
 8058 08d4 1E       		.uleb128 0x1e
 8059 08d5 68010000 		.4byte	.LASF164
 8060 08d9 01       		.byte	0x1
 8061 08da 7101     		.2byte	0x171
 8062 08dc 00000000 		.4byte	.LFB68
 8063 08e0 BC070000 		.4byte	.LFE68-.LFB68
 8064 08e4 01       		.uleb128 0x1
 8065 08e5 9C       		.byte	0x9c
 8066 08e6 240A0000 		.4byte	0xa24
 8067 08ea 22       		.uleb128 0x22
 8068 08eb 9E0B0000 		.4byte	.LASF165
 8069 08ef 01       		.byte	0x1
 8070 08f0 7101     		.2byte	0x171
 8071 08f2 97000000 		.4byte	0x97
 8072 08f6 03       		.uleb128 0x3
 8073 08f7 91       		.byte	0x91
 8074 08f8 8F7B     		.sleb128 -625
 8075 08fa 22       		.uleb128 0x22
 8076 08fb A20C0000 		.4byte	.LASF166
 8077 08ff 01       		.byte	0x1
 8078 0900 7101     		.2byte	0x171
 8079 0902 97000000 		.4byte	0x97
 8080 0906 03       		.uleb128 0x3
 8081 0907 91       		.byte	0x91
 8082 0908 8E7B     		.sleb128 -626
 8083 090a 22       		.uleb128 0x22
 8084 090b 010F0000 		.4byte	.LASF167
 8085 090f 01       		.byte	0x1
 8086 0910 7101     		.2byte	0x171
 8087 0912 240A0000 		.4byte	0xa24
 8088 0916 03       		.uleb128 0x3
 8089 0917 91       		.byte	0x91
 8090 0918 887B     		.sleb128 -632
 8091 091a 22       		.uleb128 0x22
 8092 091b 1F0A0000 		.4byte	.LASF168
 8093 091f 01       		.byte	0x1
 8094 0920 7101     		.2byte	0x171
 8095 0922 2F0A0000 		.4byte	0xa2f
 8096 0926 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 190


 8097 0927 91       		.byte	0x91
 8098 0928 847B     		.sleb128 -636
 8099 092a 22       		.uleb128 0x22
 8100 092b E30B0000 		.4byte	.LASF169
 8101 092f 01       		.byte	0x1
 8102 0930 7101     		.2byte	0x171
 8103 0932 97000000 		.4byte	0x97
 8104 0936 02       		.uleb128 0x2
 8105 0937 91       		.byte	0x91
 8106 0938 00       		.sleb128 0
 8107 0939 23       		.uleb128 0x23
 8108 093a 69647800 		.ascii	"idx\000"
 8109 093e 01       		.byte	0x1
 8110 093f 7301     		.2byte	0x173
 8111 0941 97000000 		.4byte	0x97
 8112 0945 02       		.uleb128 0x2
 8113 0946 91       		.byte	0x91
 8114 0947 5F       		.sleb128 -33
 8115 0948 1F       		.uleb128 0x1f
 8116 0949 8E090000 		.4byte	.LASF170
 8117 094d 01       		.byte	0x1
 8118 094e 7401     		.2byte	0x174
 8119 0950 88060000 		.4byte	0x688
 8120 0954 02       		.uleb128 0x2
 8121 0955 91       		.byte	0x91
 8122 0956 50       		.sleb128 -48
 8123 0957 1F       		.uleb128 0x1f
 8124 0958 12000000 		.4byte	.LASF171
 8125 095c 01       		.byte	0x1
 8126 095d 7501     		.2byte	0x175
 8127 095f 97000000 		.4byte	0x97
 8128 0963 02       		.uleb128 0x2
 8129 0964 91       		.byte	0x91
 8130 0965 5E       		.sleb128 -34
 8131 0966 1F       		.uleb128 0x1f
 8132 0967 7A100000 		.4byte	.LASF172
 8133 096b 01       		.byte	0x1
 8134 096c 7601     		.2byte	0x176
 8135 096e 3A0A0000 		.4byte	0xa3a
 8136 0972 03       		.uleb128 0x3
 8137 0973 91       		.byte	0x91
 8138 0974 C87D     		.sleb128 -312
 8139 0976 1F       		.uleb128 0x1f
 8140 0977 CB010000 		.4byte	.LASF173
 8141 097b 01       		.byte	0x1
 8142 097c 7701     		.2byte	0x177
 8143 097e 3A0A0000 		.4byte	0xa3a
 8144 0982 03       		.uleb128 0x3
 8145 0983 91       		.byte	0x91
 8146 0984 CC7B     		.sleb128 -564
 8147 0986 1F       		.uleb128 0x1f
 8148 0987 1F0F0000 		.4byte	.LASF174
 8149 098b 01       		.byte	0x1
 8150 098c 7A01     		.2byte	0x17a
 8151 098e C7000000 		.4byte	0xc7
 8152 0992 03       		.uleb128 0x3
 8153 0993 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 191


 8154 0994 C87B     		.sleb128 -568
 8155 0996 23       		.uleb128 0x23
 8156 0997 6900     		.ascii	"i\000"
 8157 0999 01       		.byte	0x1
 8158 099a 7B01     		.2byte	0x17b
 8159 099c 97000000 		.4byte	0x97
 8160 09a0 02       		.uleb128 0x2
 8161 09a1 91       		.byte	0x91
 8162 09a2 5D       		.sleb128 -35
 8163 09a3 23       		.uleb128 0x23
 8164 09a4 6A00     		.ascii	"j\000"
 8165 09a6 01       		.byte	0x1
 8166 09a7 7B01     		.2byte	0x17b
 8167 09a9 97000000 		.4byte	0x97
 8168 09ad 02       		.uleb128 0x2
 8169 09ae 91       		.byte	0x91
 8170 09af 5C       		.sleb128 -36
 8171 09b0 1F       		.uleb128 0x1f
 8172 09b1 7C090000 		.4byte	.LASF175
 8173 09b5 01       		.byte	0x1
 8174 09b6 7C01     		.2byte	0x17c
 8175 09b8 97000000 		.4byte	0x97
 8176 09bc 02       		.uleb128 0x2
 8177 09bd 91       		.byte	0x91
 8178 09be 5B       		.sleb128 -37
 8179 09bf 1F       		.uleb128 0x1f
 8180 09c0 2C0C0000 		.4byte	.LASF176
 8181 09c4 01       		.byte	0x1
 8182 09c5 7D01     		.2byte	0x17d
 8183 09c7 4A0A0000 		.4byte	0xa4a
 8184 09cb 03       		.uleb128 0x3
 8185 09cc 91       		.byte	0x91
 8186 09cd 947B     		.sleb128 -620
 8187 09cf 1F       		.uleb128 0x1f
 8188 09d0 67070000 		.4byte	.LASF177
 8189 09d4 01       		.byte	0x1
 8190 09d5 8201     		.2byte	0x182
 8191 09d7 A3000000 		.4byte	0xa3
 8192 09db 02       		.uleb128 0x2
 8193 09dc 91       		.byte	0x91
 8194 09dd 4E       		.sleb128 -50
 8195 09de 1F       		.uleb128 0x1f
 8196 09df E2040000 		.4byte	.LASF178
 8197 09e3 01       		.byte	0x1
 8198 09e4 8301     		.2byte	0x183
 8199 09e6 5A0A0000 		.4byte	0xa5a
 8200 09ea 03       		.uleb128 0x3
 8201 09eb 91       		.byte	0x91
 8202 09ec 44       		.sleb128 -60
 8203 09ed 06       		.byte	0x6
 8204 09ee 24       		.uleb128 0x24
 8205 09ef E4000000 		.4byte	.LBB22
 8206 09f3 2C000000 		.4byte	.LBE22-.LBB22
 8207 09f7 0A0A0000 		.4byte	0xa0a
 8208 09fb 23       		.uleb128 0x23
 8209 09fc 696900   		.ascii	"ii\000"
 8210 09ff 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 192


 8211 0a00 8401     		.2byte	0x184
 8212 0a02 73000000 		.4byte	0x73
 8213 0a06 02       		.uleb128 0x2
 8214 0a07 91       		.byte	0x91
 8215 0a08 54       		.sleb128 -44
 8216 0a09 00       		.byte	0
 8217 0a0a 1A       		.uleb128 0x1a
 8218 0a0b 2C010000 		.4byte	.LBB23
 8219 0a0f 80040000 		.4byte	.LBE23-.LBB23
 8220 0a13 23       		.uleb128 0x23
 8221 0a14 736F6400 		.ascii	"sod\000"
 8222 0a18 01       		.byte	0x1
 8223 0a19 8B01     		.2byte	0x18b
 8224 0a1b 97000000 		.4byte	0x97
 8225 0a1f 02       		.uleb128 0x2
 8226 0a20 91       		.byte	0x91
 8227 0a21 43       		.sleb128 -61
 8228 0a22 00       		.byte	0
 8229 0a23 00       		.byte	0
 8230 0a24 07       		.uleb128 0x7
 8231 0a25 04       		.byte	0x4
 8232 0a26 2A0A0000 		.4byte	0xa2a
 8233 0a2a 08       		.uleb128 0x8
 8234 0a2b 1F060000 		.4byte	0x61f
 8235 0a2f 07       		.uleb128 0x7
 8236 0a30 04       		.byte	0x4
 8237 0a31 350A0000 		.4byte	0xa35
 8238 0a35 08       		.uleb128 0x8
 8239 0a36 DA050000 		.4byte	0x5da
 8240 0a3a 0E       		.uleb128 0xe
 8241 0a3b E1000000 		.4byte	0xe1
 8242 0a3f 4A0A0000 		.4byte	0xa4a
 8243 0a43 0F       		.uleb128 0xf
 8244 0a44 00010000 		.4byte	0x100
 8245 0a48 F9       		.byte	0xf9
 8246 0a49 00       		.byte	0
 8247 0a4a 0E       		.uleb128 0xe
 8248 0a4b E1000000 		.4byte	0xe1
 8249 0a4f 5A0A0000 		.4byte	0xa5a
 8250 0a53 0F       		.uleb128 0xf
 8251 0a54 00010000 		.4byte	0x100
 8252 0a58 31       		.byte	0x31
 8253 0a59 00       		.byte	0
 8254 0a5a 0E       		.uleb128 0xe
 8255 0a5b 97000000 		.4byte	0x97
 8256 0a5f 6D0A0000 		.4byte	0xa6d
 8257 0a63 25       		.uleb128 0x25
 8258 0a64 00010000 		.4byte	0x100
 8259 0a68 03       		.uleb128 0x3
 8260 0a69 91       		.byte	0x91
 8261 0a6a 48       		.sleb128 -56
 8262 0a6b 06       		.byte	0x6
 8263 0a6c 00       		.byte	0
 8264 0a6d 1E       		.uleb128 0x1e
 8265 0a6e 6D0C0000 		.4byte	.LASF179
 8266 0a72 01       		.byte	0x1
 8267 0a73 F601     		.2byte	0x1f6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 193


 8268 0a75 00000000 		.4byte	.LFB69
 8269 0a79 84060000 		.4byte	.LFE69-.LFB69
 8270 0a7d 01       		.uleb128 0x1
 8271 0a7e 9C       		.byte	0x9c
 8272 0a7f 530B0000 		.4byte	0xb53
 8273 0a83 22       		.uleb128 0x22
 8274 0a84 C4050000 		.4byte	.LASF180
 8275 0a88 01       		.byte	0x1
 8276 0a89 F601     		.2byte	0x1f6
 8277 0a8b A3000000 		.4byte	0xa3
 8278 0a8f 03       		.uleb128 0x3
 8279 0a90 91       		.byte	0x91
 8280 0a91 AE7C     		.sleb128 -466
 8281 0a93 22       		.uleb128 0x22
 8282 0a94 E30B0000 		.4byte	.LASF169
 8283 0a98 01       		.byte	0x1
 8284 0a99 F601     		.2byte	0x1f6
 8285 0a9b 97000000 		.4byte	0x97
 8286 0a9f 03       		.uleb128 0x3
 8287 0aa0 91       		.byte	0x91
 8288 0aa1 AD7C     		.sleb128 -467
 8289 0aa3 23       		.uleb128 0x23
 8290 0aa4 6900     		.ascii	"i\000"
 8291 0aa6 01       		.byte	0x1
 8292 0aa7 F701     		.2byte	0x1f7
 8293 0aa9 97000000 		.4byte	0x97
 8294 0aad 02       		.uleb128 0x2
 8295 0aae 91       		.byte	0x91
 8296 0aaf 6F       		.sleb128 -17
 8297 0ab0 23       		.uleb128 0x23
 8298 0ab1 6A00     		.ascii	"j\000"
 8299 0ab3 01       		.byte	0x1
 8300 0ab4 F701     		.2byte	0x1f7
 8301 0ab6 97000000 		.4byte	0x97
 8302 0aba 02       		.uleb128 0x2
 8303 0abb 91       		.byte	0x91
 8304 0abc 6E       		.sleb128 -18
 8305 0abd 1F       		.uleb128 0x1f
 8306 0abe 5E010000 		.4byte	.LASF181
 8307 0ac2 01       		.byte	0x1
 8308 0ac3 F901     		.2byte	0x1f9
 8309 0ac5 97000000 		.4byte	0x97
 8310 0ac9 02       		.uleb128 0x2
 8311 0aca 91       		.byte	0x91
 8312 0acb 65       		.sleb128 -27
 8313 0acc 1F       		.uleb128 0x1f
 8314 0acd 88020000 		.4byte	.LASF182
 8315 0ad1 01       		.byte	0x1
 8316 0ad2 FC01     		.2byte	0x1fc
 8317 0ad4 530B0000 		.4byte	0xb53
 8318 0ad8 02       		.uleb128 0x2
 8319 0ad9 91       		.byte	0x91
 8320 0ada 68       		.sleb128 -24
 8321 0adb 1F       		.uleb128 0x1f
 8322 0adc 22050000 		.4byte	.LASF43
 8323 0ae0 01       		.byte	0x1
 8324 0ae1 0202     		.2byte	0x202
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 194


 8325 0ae3 DA050000 		.4byte	0x5da
 8326 0ae7 03       		.uleb128 0x3
 8327 0ae8 91       		.byte	0x91
 8328 0ae9 B87F     		.sleb128 -72
 8329 0aeb 1F       		.uleb128 0x1f
 8330 0aec 1F0A0000 		.4byte	.LASF168
 8331 0af0 01       		.byte	0x1
 8332 0af1 0502     		.2byte	0x205
 8333 0af3 690B0000 		.4byte	0xb69
 8334 0af7 03       		.uleb128 0x3
 8335 0af8 91       		.byte	0x91
 8336 0af9 B47E     		.sleb128 -204
 8337 0afb 1F       		.uleb128 0x1f
 8338 0afc CF000000 		.4byte	.LASF183
 8339 0b00 01       		.byte	0x1
 8340 0b01 0D02     		.2byte	0x20d
 8341 0b03 97000000 		.4byte	0x97
 8342 0b07 02       		.uleb128 0x2
 8343 0b08 91       		.byte	0x91
 8344 0b09 67       		.sleb128 -25
 8345 0b0a 1F       		.uleb128 0x1f
 8346 0b0b 680F0000 		.4byte	.LASF184
 8347 0b0f 01       		.byte	0x1
 8348 0b10 0F02     		.2byte	0x20f
 8349 0b12 1F060000 		.4byte	0x61f
 8350 0b16 03       		.uleb128 0x3
 8351 0b17 91       		.byte	0x91
 8352 0b18 A47E     		.sleb128 -220
 8353 0b1a 1F       		.uleb128 0x1f
 8354 0b1b 010F0000 		.4byte	.LASF167
 8355 0b1f 01       		.byte	0x1
 8356 0b20 1102     		.2byte	0x211
 8357 0b22 7E0B0000 		.4byte	0xb7e
 8358 0b26 03       		.uleb128 0x3
 8359 0b27 91       		.byte	0x91
 8360 0b28 B47C     		.sleb128 -460
 8361 0b2a 1F       		.uleb128 0x1f
 8362 0b2b 780E0000 		.4byte	.LASF185
 8363 0b2f 01       		.byte	0x1
 8364 0b30 2402     		.2byte	0x224
 8365 0b32 97000000 		.4byte	0x97
 8366 0b36 02       		.uleb128 0x2
 8367 0b37 91       		.byte	0x91
 8368 0b38 66       		.sleb128 -26
 8369 0b39 1A       		.uleb128 0x1a
 8370 0b3a EA040000 		.4byte	.LBB24
 8371 0b3e 7E010000 		.4byte	.LBE24-.LBB24
 8372 0b42 23       		.uleb128 0x23
 8373 0b43 736F6400 		.ascii	"sod\000"
 8374 0b47 01       		.byte	0x1
 8375 0b48 2F02     		.2byte	0x22f
 8376 0b4a 97000000 		.4byte	0x97
 8377 0b4e 02       		.uleb128 0x2
 8378 0b4f 91       		.byte	0x91
 8379 0b50 64       		.sleb128 -28
 8380 0b51 00       		.byte	0
 8381 0b52 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 195


 8382 0b53 07       		.uleb128 0x7
 8383 0b54 04       		.byte	0x4
 8384 0b55 6B050000 		.4byte	0x56b
 8385 0b59 0E       		.uleb128 0xe
 8386 0b5a 350A0000 		.4byte	0xa35
 8387 0b5e 690B0000 		.4byte	0xb69
 8388 0b62 0F       		.uleb128 0xf
 8389 0b63 00010000 		.4byte	0x100
 8390 0b67 02       		.byte	0x2
 8391 0b68 00       		.byte	0
 8392 0b69 08       		.uleb128 0x8
 8393 0b6a 590B0000 		.4byte	0xb59
 8394 0b6e 0E       		.uleb128 0xe
 8395 0b6f 2A0A0000 		.4byte	0xa2a
 8396 0b73 7E0B0000 		.4byte	0xb7e
 8397 0b77 0F       		.uleb128 0xf
 8398 0b78 00010000 		.4byte	0x100
 8399 0b7c 0E       		.byte	0xe
 8400 0b7d 00       		.byte	0
 8401 0b7e 08       		.uleb128 0x8
 8402 0b7f 6E0B0000 		.4byte	0xb6e
 8403 0b83 1E       		.uleb128 0x1e
 8404 0b84 14030000 		.4byte	.LASF186
 8405 0b88 01       		.byte	0x1
 8406 0b89 5002     		.2byte	0x250
 8407 0b8b 00000000 		.4byte	.LFB70
 8408 0b8f 34010000 		.4byte	.LFE70-.LFB70
 8409 0b93 01       		.uleb128 0x1
 8410 0b94 9C       		.byte	0x9c
 8411 0b95 E10B0000 		.4byte	0xbe1
 8412 0b99 22       		.uleb128 0x22
 8413 0b9a C4050000 		.4byte	.LASF180
 8414 0b9e 01       		.byte	0x1
 8415 0b9f 5002     		.2byte	0x250
 8416 0ba1 A3000000 		.4byte	0xa3
 8417 0ba5 02       		.uleb128 0x2
 8418 0ba6 91       		.byte	0x91
 8419 0ba7 6E       		.sleb128 -18
 8420 0ba8 22       		.uleb128 0x22
 8421 0ba9 010F0000 		.4byte	.LASF167
 8422 0bad 01       		.byte	0x1
 8423 0bae 5002     		.2byte	0x250
 8424 0bb0 240A0000 		.4byte	0xa24
 8425 0bb4 02       		.uleb128 0x2
 8426 0bb5 91       		.byte	0x91
 8427 0bb6 68       		.sleb128 -24
 8428 0bb7 23       		.uleb128 0x23
 8429 0bb8 736F6400 		.ascii	"sod\000"
 8430 0bbc 01       		.byte	0x1
 8431 0bbd 5102     		.2byte	0x251
 8432 0bbf 97000000 		.4byte	0x97
 8433 0bc3 02       		.uleb128 0x2
 8434 0bc4 91       		.byte	0x91
 8435 0bc5 75       		.sleb128 -11
 8436 0bc6 23       		.uleb128 0x23
 8437 0bc7 6900     		.ascii	"i\000"
 8438 0bc9 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 196


 8439 0bca 5302     		.2byte	0x253
 8440 0bcc 97000000 		.4byte	0x97
 8441 0bd0 02       		.uleb128 0x2
 8442 0bd1 91       		.byte	0x91
 8443 0bd2 77       		.sleb128 -9
 8444 0bd3 23       		.uleb128 0x23
 8445 0bd4 6A00     		.ascii	"j\000"
 8446 0bd6 01       		.byte	0x1
 8447 0bd7 5302     		.2byte	0x253
 8448 0bd9 97000000 		.4byte	0x97
 8449 0bdd 02       		.uleb128 0x2
 8450 0bde 91       		.byte	0x91
 8451 0bdf 76       		.sleb128 -10
 8452 0be0 00       		.byte	0
 8453 0be1 26       		.uleb128 0x26
 8454 0be2 BD070000 		.4byte	.LASF187
 8455 0be6 01       		.byte	0x1
 8456 0be7 7702     		.2byte	0x277
 8457 0be9 00000000 		.4byte	.LFB71
 8458 0bed 14000000 		.4byte	.LFE71-.LFB71
 8459 0bf1 01       		.uleb128 0x1
 8460 0bf2 9C       		.byte	0x9c
 8461 0bf3 070C0000 		.4byte	0xc07
 8462 0bf7 22       		.uleb128 0x22
 8463 0bf8 C4050000 		.4byte	.LASF180
 8464 0bfc 01       		.byte	0x1
 8465 0bfd 7702     		.2byte	0x277
 8466 0bff A3000000 		.4byte	0xa3
 8467 0c03 02       		.uleb128 0x2
 8468 0c04 91       		.byte	0x91
 8469 0c05 76       		.sleb128 -10
 8470 0c06 00       		.byte	0
 8471 0c07 27       		.uleb128 0x27
 8472 0c08 68020000 		.4byte	.LASF217
 8473 0c0c 01       		.byte	0x1
 8474 0c0d 7F02     		.2byte	0x27f
 8475 0c0f 00000000 		.4byte	.LFB72
 8476 0c13 0C000000 		.4byte	.LFE72-.LFB72
 8477 0c17 01       		.uleb128 0x1
 8478 0c18 9C       		.byte	0x9c
 8479 0c19 1E       		.uleb128 0x1e
 8480 0c1a BA000000 		.4byte	.LASF188
 8481 0c1e 01       		.byte	0x1
 8482 0c1f 8702     		.2byte	0x287
 8483 0c21 00000000 		.4byte	.LFB73
 8484 0c25 FC060000 		.4byte	.LFE73-.LFB73
 8485 0c29 01       		.uleb128 0x1
 8486 0c2a 9C       		.byte	0x9c
 8487 0c2b 760C0000 		.4byte	0xc76
 8488 0c2f 22       		.uleb128 0x22
 8489 0c30 920B0000 		.4byte	.LASF189
 8490 0c34 01       		.byte	0x1
 8491 0c35 8702     		.2byte	0x287
 8492 0c37 07010000 		.4byte	0x107
 8493 0c3b 03       		.uleb128 0x3
 8494 0c3c 91       		.byte	0x91
 8495 0c3d F47E     		.sleb128 -140
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 197


 8496 0c3f 23       		.uleb128 0x23
 8497 0c40 6900     		.ascii	"i\000"
 8498 0c42 01       		.byte	0x1
 8499 0c43 8802     		.2byte	0x288
 8500 0c45 73000000 		.4byte	0x73
 8501 0c49 02       		.uleb128 0x2
 8502 0c4a 91       		.byte	0x91
 8503 0c4b 64       		.sleb128 -28
 8504 0c4c 1F       		.uleb128 0x1f
 8505 0c4d 88020000 		.4byte	.LASF182
 8506 0c51 01       		.byte	0x1
 8507 0c52 8A02     		.2byte	0x28a
 8508 0c54 530B0000 		.4byte	0xb53
 8509 0c58 02       		.uleb128 0x2
 8510 0c59 91       		.byte	0x91
 8511 0c5a 60       		.sleb128 -32
 8512 0c5b 1A       		.uleb128 0x1a
 8513 0c5c 16000000 		.4byte	.LBB25
 8514 0c60 C0060000 		.4byte	.LBE25-.LBB25
 8515 0c64 23       		.uleb128 0x23
 8516 0c65 73747200 		.ascii	"str\000"
 8517 0c69 01       		.byte	0x1
 8518 0c6a 8D02     		.2byte	0x28d
 8519 0c6c 760C0000 		.4byte	0xc76
 8520 0c70 03       		.uleb128 0x3
 8521 0c71 91       		.byte	0x91
 8522 0c72 FC7E     		.sleb128 -132
 8523 0c74 00       		.byte	0
 8524 0c75 00       		.byte	0
 8525 0c76 0E       		.uleb128 0xe
 8526 0c77 E1000000 		.4byte	0xe1
 8527 0c7b 860C0000 		.4byte	0xc86
 8528 0c7f 0F       		.uleb128 0xf
 8529 0c80 00010000 		.4byte	0x100
 8530 0c84 63       		.byte	0x63
 8531 0c85 00       		.byte	0
 8532 0c86 26       		.uleb128 0x26
 8533 0c87 C20C0000 		.4byte	.LASF190
 8534 0c8b 01       		.byte	0x1
 8535 0c8c FF02     		.2byte	0x2ff
 8536 0c8e 00000000 		.4byte	.LFB74
 8537 0c92 12000000 		.4byte	.LFE74-.LFB74
 8538 0c96 01       		.uleb128 0x1
 8539 0c97 9C       		.byte	0x9c
 8540 0c98 AC0C0000 		.4byte	0xcac
 8541 0c9c 22       		.uleb128 0x22
 8542 0c9d 920B0000 		.4byte	.LASF189
 8543 0ca1 01       		.byte	0x1
 8544 0ca2 FF02     		.2byte	0x2ff
 8545 0ca4 07010000 		.4byte	0x107
 8546 0ca8 02       		.uleb128 0x2
 8547 0ca9 91       		.byte	0x91
 8548 0caa 74       		.sleb128 -12
 8549 0cab 00       		.byte	0
 8550 0cac 26       		.uleb128 0x26
 8551 0cad AF0A0000 		.4byte	.LASF191
 8552 0cb1 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 198


 8553 0cb2 0703     		.2byte	0x307
 8554 0cb4 00000000 		.4byte	.LFB75
 8555 0cb8 12000000 		.4byte	.LFE75-.LFB75
 8556 0cbc 01       		.uleb128 0x1
 8557 0cbd 9C       		.byte	0x9c
 8558 0cbe D20C0000 		.4byte	0xcd2
 8559 0cc2 22       		.uleb128 0x22
 8560 0cc3 920B0000 		.4byte	.LASF189
 8561 0cc7 01       		.byte	0x1
 8562 0cc8 0703     		.2byte	0x307
 8563 0cca 07010000 		.4byte	0x107
 8564 0cce 02       		.uleb128 0x2
 8565 0ccf 91       		.byte	0x91
 8566 0cd0 74       		.sleb128 -12
 8567 0cd1 00       		.byte	0
 8568 0cd2 26       		.uleb128 0x26
 8569 0cd3 AC0C0000 		.4byte	.LASF192
 8570 0cd7 01       		.byte	0x1
 8571 0cd8 0F03     		.2byte	0x30f
 8572 0cda 00000000 		.4byte	.LFB76
 8573 0cde 12000000 		.4byte	.LFE76-.LFB76
 8574 0ce2 01       		.uleb128 0x1
 8575 0ce3 9C       		.byte	0x9c
 8576 0ce4 F80C0000 		.4byte	0xcf8
 8577 0ce8 22       		.uleb128 0x22
 8578 0ce9 920B0000 		.4byte	.LASF189
 8579 0ced 01       		.byte	0x1
 8580 0cee 0F03     		.2byte	0x30f
 8581 0cf0 07010000 		.4byte	0x107
 8582 0cf4 02       		.uleb128 0x2
 8583 0cf5 91       		.byte	0x91
 8584 0cf6 74       		.sleb128 -12
 8585 0cf7 00       		.byte	0
 8586 0cf8 26       		.uleb128 0x26
 8587 0cf9 C2090000 		.4byte	.LASF193
 8588 0cfd 01       		.byte	0x1
 8589 0cfe 1703     		.2byte	0x317
 8590 0d00 00000000 		.4byte	.LFB77
 8591 0d04 12000000 		.4byte	.LFE77-.LFB77
 8592 0d08 01       		.uleb128 0x1
 8593 0d09 9C       		.byte	0x9c
 8594 0d0a 1E0D0000 		.4byte	0xd1e
 8595 0d0e 22       		.uleb128 0x22
 8596 0d0f 920B0000 		.4byte	.LASF189
 8597 0d13 01       		.byte	0x1
 8598 0d14 1703     		.2byte	0x317
 8599 0d16 07010000 		.4byte	0x107
 8600 0d1a 02       		.uleb128 0x2
 8601 0d1b 91       		.byte	0x91
 8602 0d1c 74       		.sleb128 -12
 8603 0d1d 00       		.byte	0
 8604 0d1e 26       		.uleb128 0x26
 8605 0d1f D70C0000 		.4byte	.LASF194
 8606 0d23 01       		.byte	0x1
 8607 0d24 1E03     		.2byte	0x31e
 8608 0d26 00000000 		.4byte	.LFB78
 8609 0d2a 12000000 		.4byte	.LFE78-.LFB78
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 199


 8610 0d2e 01       		.uleb128 0x1
 8611 0d2f 9C       		.byte	0x9c
 8612 0d30 440D0000 		.4byte	0xd44
 8613 0d34 22       		.uleb128 0x22
 8614 0d35 920B0000 		.4byte	.LASF189
 8615 0d39 01       		.byte	0x1
 8616 0d3a 1E03     		.2byte	0x31e
 8617 0d3c 07010000 		.4byte	0x107
 8618 0d40 02       		.uleb128 0x2
 8619 0d41 91       		.byte	0x91
 8620 0d42 74       		.sleb128 -12
 8621 0d43 00       		.byte	0
 8622 0d44 26       		.uleb128 0x26
 8623 0d45 AF020000 		.4byte	.LASF195
 8624 0d49 01       		.byte	0x1
 8625 0d4a 2603     		.2byte	0x326
 8626 0d4c 00000000 		.4byte	.LFB79
 8627 0d50 12000000 		.4byte	.LFE79-.LFB79
 8628 0d54 01       		.uleb128 0x1
 8629 0d55 9C       		.byte	0x9c
 8630 0d56 6A0D0000 		.4byte	0xd6a
 8631 0d5a 22       		.uleb128 0x22
 8632 0d5b 920B0000 		.4byte	.LASF189
 8633 0d5f 01       		.byte	0x1
 8634 0d60 2603     		.2byte	0x326
 8635 0d62 07010000 		.4byte	0x107
 8636 0d66 02       		.uleb128 0x2
 8637 0d67 91       		.byte	0x91
 8638 0d68 74       		.sleb128 -12
 8639 0d69 00       		.byte	0
 8640 0d6a 26       		.uleb128 0x26
 8641 0d6b 59100000 		.4byte	.LASF196
 8642 0d6f 01       		.byte	0x1
 8643 0d70 2F03     		.2byte	0x32f
 8644 0d72 00000000 		.4byte	.LFB80
 8645 0d76 12000000 		.4byte	.LFE80-.LFB80
 8646 0d7a 01       		.uleb128 0x1
 8647 0d7b 9C       		.byte	0x9c
 8648 0d7c 900D0000 		.4byte	0xd90
 8649 0d80 22       		.uleb128 0x22
 8650 0d81 920B0000 		.4byte	.LASF189
 8651 0d85 01       		.byte	0x1
 8652 0d86 2F03     		.2byte	0x32f
 8653 0d88 07010000 		.4byte	0x107
 8654 0d8c 02       		.uleb128 0x2
 8655 0d8d 91       		.byte	0x91
 8656 0d8e 74       		.sleb128 -12
 8657 0d8f 00       		.byte	0
 8658 0d90 1E       		.uleb128 0x1e
 8659 0d91 5C0C0000 		.4byte	.LASF197
 8660 0d95 01       		.byte	0x1
 8661 0d96 3703     		.2byte	0x337
 8662 0d98 00000000 		.4byte	.LFB81
 8663 0d9c 84000000 		.4byte	.LFE81-.LFB81
 8664 0da0 01       		.uleb128 0x1
 8665 0da1 9C       		.byte	0x9c
 8666 0da2 E30D0000 		.4byte	0xde3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 200


 8667 0da6 22       		.uleb128 0x22
 8668 0da7 E2040000 		.4byte	.LASF178
 8669 0dab 01       		.byte	0x1
 8670 0dac 3703     		.2byte	0x337
 8671 0dae 88060000 		.4byte	0x688
 8672 0db2 02       		.uleb128 0x2
 8673 0db3 91       		.byte	0x91
 8674 0db4 6C       		.sleb128 -20
 8675 0db5 22       		.uleb128 0x22
 8676 0db6 67070000 		.4byte	.LASF177
 8677 0dba 01       		.byte	0x1
 8678 0dbb 3703     		.2byte	0x337
 8679 0dbd A3000000 		.4byte	0xa3
 8680 0dc1 02       		.uleb128 0x2
 8681 0dc2 91       		.byte	0x91
 8682 0dc3 6A       		.sleb128 -22
 8683 0dc4 22       		.uleb128 0x22
 8684 0dc5 F50C0000 		.4byte	.LASF198
 8685 0dc9 01       		.byte	0x1
 8686 0dca 3703     		.2byte	0x337
 8687 0dcc 97000000 		.4byte	0x97
 8688 0dd0 02       		.uleb128 0x2
 8689 0dd1 91       		.byte	0x91
 8690 0dd2 69       		.sleb128 -23
 8691 0dd3 1F       		.uleb128 0x1f
 8692 0dd4 C4050000 		.4byte	.LASF180
 8693 0dd8 01       		.byte	0x1
 8694 0dd9 3903     		.2byte	0x339
 8695 0ddb A3000000 		.4byte	0xa3
 8696 0ddf 02       		.uleb128 0x2
 8697 0de0 91       		.byte	0x91
 8698 0de1 76       		.sleb128 -10
 8699 0de2 00       		.byte	0
 8700 0de3 1E       		.uleb128 0x1e
 8701 0de4 F8040000 		.4byte	.LASF199
 8702 0de8 01       		.byte	0x1
 8703 0de9 5303     		.2byte	0x353
 8704 0deb 00000000 		.4byte	.LFB82
 8705 0def 88000000 		.4byte	.LFE82-.LFB82
 8706 0df3 01       		.uleb128 0x1
 8707 0df4 9C       		.byte	0x9c
 8708 0df5 270E0000 		.4byte	0xe27
 8709 0df9 22       		.uleb128 0x22
 8710 0dfa E2040000 		.4byte	.LASF178
 8711 0dfe 01       		.byte	0x1
 8712 0dff 5303     		.2byte	0x353
 8713 0e01 88060000 		.4byte	0x688
 8714 0e05 02       		.uleb128 0x2
 8715 0e06 91       		.byte	0x91
 8716 0e07 6C       		.sleb128 -20
 8717 0e08 22       		.uleb128 0x22
 8718 0e09 67070000 		.4byte	.LASF177
 8719 0e0d 01       		.byte	0x1
 8720 0e0e 5303     		.2byte	0x353
 8721 0e10 A3000000 		.4byte	0xa3
 8722 0e14 02       		.uleb128 0x2
 8723 0e15 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 201


 8724 0e16 6A       		.sleb128 -22
 8725 0e17 1F       		.uleb128 0x1f
 8726 0e18 C4050000 		.4byte	.LASF180
 8727 0e1c 01       		.byte	0x1
 8728 0e1d 5503     		.2byte	0x355
 8729 0e1f A3000000 		.4byte	0xa3
 8730 0e23 02       		.uleb128 0x2
 8731 0e24 91       		.byte	0x91
 8732 0e25 76       		.sleb128 -10
 8733 0e26 00       		.byte	0
 8734 0e27 1E       		.uleb128 0x1e
 8735 0e28 3D0A0000 		.4byte	.LASF200
 8736 0e2c 01       		.byte	0x1
 8737 0e2d 7003     		.2byte	0x370
 8738 0e2f 00000000 		.4byte	.LFB83
 8739 0e33 A0000000 		.4byte	.LFE83-.LFB83
 8740 0e37 01       		.uleb128 0x1
 8741 0e38 9C       		.byte	0x9c
 8742 0e39 7A0E0000 		.4byte	0xe7a
 8743 0e3d 22       		.uleb128 0x22
 8744 0e3e E2040000 		.4byte	.LASF178
 8745 0e42 01       		.byte	0x1
 8746 0e43 7003     		.2byte	0x370
 8747 0e45 88060000 		.4byte	0x688
 8748 0e49 02       		.uleb128 0x2
 8749 0e4a 91       		.byte	0x91
 8750 0e4b 74       		.sleb128 -12
 8751 0e4c 22       		.uleb128 0x22
 8752 0e4d 67070000 		.4byte	.LASF177
 8753 0e51 01       		.byte	0x1
 8754 0e52 7003     		.2byte	0x370
 8755 0e54 A3000000 		.4byte	0xa3
 8756 0e58 02       		.uleb128 0x2
 8757 0e59 91       		.byte	0x91
 8758 0e5a 72       		.sleb128 -14
 8759 0e5b 28       		.uleb128 0x28
 8760 0e5c 696400   		.ascii	"id\000"
 8761 0e5f 01       		.byte	0x1
 8762 0e60 7003     		.2byte	0x370
 8763 0e62 97000000 		.4byte	0x97
 8764 0e66 02       		.uleb128 0x2
 8765 0e67 91       		.byte	0x91
 8766 0e68 71       		.sleb128 -15
 8767 0e69 23       		.uleb128 0x23
 8768 0e6a 6900     		.ascii	"i\000"
 8769 0e6c 01       		.byte	0x1
 8770 0e6d 7203     		.2byte	0x372
 8771 0e6f A3000000 		.4byte	0xa3
 8772 0e73 05       		.uleb128 0x5
 8773 0e74 03       		.byte	0x3
 8774 0e75 00000000 		.4byte	i.9982
 8775 0e79 00       		.byte	0
 8776 0e7a 21       		.uleb128 0x21
 8777 0e7b 7D0F0000 		.4byte	.LASF202
 8778 0e7f 01       		.byte	0x1
 8779 0e80 8E03     		.2byte	0x38e
 8780 0e82 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 202


 8781 0e86 00000000 		.4byte	.LFB84
 8782 0e8a 3E000000 		.4byte	.LFE84-.LFB84
 8783 0e8e 01       		.uleb128 0x1
 8784 0e8f 9C       		.byte	0x9c
 8785 0e90 CF0E0000 		.4byte	0xecf
 8786 0e94 22       		.uleb128 0x22
 8787 0e95 9B090000 		.4byte	.LASF203
 8788 0e99 01       		.byte	0x1
 8789 0e9a 8E03     		.2byte	0x38e
 8790 0e9c 88060000 		.4byte	0x688
 8791 0ea0 02       		.uleb128 0x2
 8792 0ea1 91       		.byte	0x91
 8793 0ea2 6C       		.sleb128 -20
 8794 0ea3 22       		.uleb128 0x22
 8795 0ea4 A9040000 		.4byte	.LASF204
 8796 0ea8 01       		.byte	0x1
 8797 0ea9 8E03     		.2byte	0x38e
 8798 0eab 97000000 		.4byte	0x97
 8799 0eaf 02       		.uleb128 0x2
 8800 0eb0 91       		.byte	0x91
 8801 0eb1 6B       		.sleb128 -21
 8802 0eb2 23       		.uleb128 0x23
 8803 0eb3 6900     		.ascii	"i\000"
 8804 0eb5 01       		.byte	0x1
 8805 0eb6 9003     		.2byte	0x390
 8806 0eb8 97000000 		.4byte	0x97
 8807 0ebc 02       		.uleb128 0x2
 8808 0ebd 91       		.byte	0x91
 8809 0ebe 77       		.sleb128 -9
 8810 0ebf 1F       		.uleb128 0x1f
 8811 0ec0 420B0000 		.4byte	.LASF205
 8812 0ec4 01       		.byte	0x1
 8813 0ec5 9103     		.2byte	0x391
 8814 0ec7 97000000 		.4byte	0x97
 8815 0ecb 02       		.uleb128 0x2
 8816 0ecc 91       		.byte	0x91
 8817 0ecd 76       		.sleb128 -10
 8818 0ece 00       		.byte	0
 8819 0ecf 1E       		.uleb128 0x1e
 8820 0ed0 0C0F0000 		.4byte	.LASF206
 8821 0ed4 01       		.byte	0x1
 8822 0ed5 9E03     		.2byte	0x39e
 8823 0ed7 00000000 		.4byte	.LFB85
 8824 0edb 2E000000 		.4byte	.LFE85-.LFB85
 8825 0edf 01       		.uleb128 0x1
 8826 0ee0 9C       		.byte	0x9c
 8827 0ee1 130F0000 		.4byte	0xf13
 8828 0ee5 22       		.uleb128 0x22
 8829 0ee6 24040000 		.4byte	.LASF207
 8830 0eea 01       		.byte	0x1
 8831 0eeb 9E03     		.2byte	0x39e
 8832 0eed 97000000 		.4byte	0x97
 8833 0ef1 02       		.uleb128 0x2
 8834 0ef2 91       		.byte	0x91
 8835 0ef3 6F       		.sleb128 -17
 8836 0ef4 1F       		.uleb128 0x1f
 8837 0ef5 67070000 		.4byte	.LASF177
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 203


 8838 0ef9 01       		.byte	0x1
 8839 0efa 9F03     		.2byte	0x39f
 8840 0efc 73000000 		.4byte	0x73
 8841 0f00 02       		.uleb128 0x2
 8842 0f01 91       		.byte	0x91
 8843 0f02 74       		.sleb128 -12
 8844 0f03 1F       		.uleb128 0x1f
 8845 0f04 E2040000 		.4byte	.LASF178
 8846 0f08 01       		.byte	0x1
 8847 0f09 A003     		.2byte	0x3a0
 8848 0f0b C5040000 		.4byte	0x4c5
 8849 0f0f 02       		.uleb128 0x2
 8850 0f10 91       		.byte	0x91
 8851 0f11 70       		.sleb128 -16
 8852 0f12 00       		.byte	0
 8853 0f13 29       		.uleb128 0x29
 8854 0f14 67030000 		.4byte	.LASF208
 8855 0f18 01       		.byte	0x1
 8856 0f19 AD03     		.2byte	0x3ad
 8857 0f1b 97000000 		.4byte	0x97
 8858 0f1f 00000000 		.4byte	.LFB86
 8859 0f23 90000000 		.4byte	.LFE86-.LFB86
 8860 0f27 01       		.uleb128 0x1
 8861 0f28 9C       		.byte	0x9c
 8862 0f29 770F0000 		.4byte	0xf77
 8863 0f2d 22       		.uleb128 0x22
 8864 0f2e 18070000 		.4byte	.LASF209
 8865 0f32 01       		.byte	0x1
 8866 0f33 AD03     		.2byte	0x3ad
 8867 0f35 73000000 		.4byte	0x73
 8868 0f39 02       		.uleb128 0x2
 8869 0f3a 91       		.byte	0x91
 8870 0f3b 64       		.sleb128 -28
 8871 0f3c 23       		.uleb128 0x23
 8872 0f3d 6900     		.ascii	"i\000"
 8873 0f3f 01       		.byte	0x1
 8874 0f40 AF03     		.2byte	0x3af
 8875 0f42 73000000 		.4byte	0x73
 8876 0f46 02       		.uleb128 0x2
 8877 0f47 91       		.byte	0x91
 8878 0f48 74       		.sleb128 -12
 8879 0f49 1F       		.uleb128 0x1f
 8880 0f4a 81000000 		.4byte	.LASF210
 8881 0f4e 01       		.byte	0x1
 8882 0f4f B003     		.2byte	0x3b0
 8883 0f51 97000000 		.4byte	0x97
 8884 0f55 02       		.uleb128 0x2
 8885 0f56 91       		.byte	0x91
 8886 0f57 6B       		.sleb128 -21
 8887 0f58 1F       		.uleb128 0x1f
 8888 0f59 14050000 		.4byte	.LASF211
 8889 0f5d 01       		.byte	0x1
 8890 0f5e B103     		.2byte	0x3b1
 8891 0f60 73000000 		.4byte	0x73
 8892 0f64 02       		.uleb128 0x2
 8893 0f65 91       		.byte	0x91
 8894 0f66 6C       		.sleb128 -20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 204


 8895 0f67 1F       		.uleb128 0x1f
 8896 0f68 6A040000 		.4byte	.LASF212
 8897 0f6c 01       		.byte	0x1
 8898 0f6d B203     		.2byte	0x3b2
 8899 0f6f 97000000 		.4byte	0x97
 8900 0f73 02       		.uleb128 0x2
 8901 0f74 91       		.byte	0x91
 8902 0f75 73       		.sleb128 -13
 8903 0f76 00       		.byte	0
 8904 0f77 1E       		.uleb128 0x1e
 8905 0f78 110C0000 		.4byte	.LASF213
 8906 0f7c 01       		.byte	0x1
 8907 0f7d D703     		.2byte	0x3d7
 8908 0f7f 00000000 		.4byte	.LFB87
 8909 0f83 60000000 		.4byte	.LFE87-.LFB87
 8910 0f87 01       		.uleb128 0x1
 8911 0f88 9C       		.byte	0x9c
 8912 0f89 9B0F0000 		.4byte	0xf9b
 8913 0f8d 23       		.uleb128 0x23
 8914 0f8e 6900     		.ascii	"i\000"
 8915 0f90 01       		.byte	0x1
 8916 0f91 D903     		.2byte	0x3d9
 8917 0f93 A3000000 		.4byte	0xa3
 8918 0f97 02       		.uleb128 0x2
 8919 0f98 91       		.byte	0x91
 8920 0f99 76       		.sleb128 -10
 8921 0f9a 00       		.byte	0
 8922 0f9b 29       		.uleb128 0x29
 8923 0f9c 870B0000 		.4byte	.LASF214
 8924 0fa0 01       		.byte	0x1
 8925 0fa1 EC03     		.2byte	0x3ec
 8926 0fa3 97000000 		.4byte	0x97
 8927 0fa7 00000000 		.4byte	.LFB88
 8928 0fab 58000000 		.4byte	.LFE88-.LFB88
 8929 0faf 01       		.uleb128 0x1
 8930 0fb0 9C       		.byte	0x9c
 8931 0fb1 C30F0000 		.4byte	0xfc3
 8932 0fb5 23       		.uleb128 0x23
 8933 0fb6 6900     		.ascii	"i\000"
 8934 0fb8 01       		.byte	0x1
 8935 0fb9 ED03     		.2byte	0x3ed
 8936 0fbb A3000000 		.4byte	0xa3
 8937 0fbf 02       		.uleb128 0x2
 8938 0fc0 91       		.byte	0x91
 8939 0fc1 76       		.sleb128 -10
 8940 0fc2 00       		.byte	0
 8941 0fc3 2A       		.uleb128 0x2a
 8942 0fc4 1A050000 		.4byte	.LASF291
 8943 0fc8 01       		.byte	0x1
 8944 0fc9 FF03     		.2byte	0x3ff
 8945 0fcb 97000000 		.4byte	0x97
 8946 0fcf 00000000 		.4byte	.LFB89
 8947 0fd3 CC000000 		.4byte	.LFE89-.LFB89
 8948 0fd7 01       		.uleb128 0x1
 8949 0fd8 9C       		.byte	0x9c
 8950 0fd9 2B       		.uleb128 0x2b
 8951 0fda 9C070000 		.4byte	.LASF215
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 205


 8952 0fde 01       		.byte	0x1
 8953 0fdf 2A04     		.2byte	0x42a
 8954 0fe1 00000000 		.4byte	.LFB90
 8955 0fe5 0C000000 		.4byte	.LFE90-.LFB90
 8956 0fe9 01       		.uleb128 0x1
 8957 0fea 9C       		.byte	0x9c
 8958 0feb 2B       		.uleb128 0x2b
 8959 0fec B3090000 		.4byte	.LASF216
 8960 0ff0 01       		.byte	0x1
 8961 0ff1 3104     		.2byte	0x431
 8962 0ff3 00000000 		.4byte	.LFB91
 8963 0ff7 0C000000 		.4byte	.LFE91-.LFB91
 8964 0ffb 01       		.uleb128 0x1
 8965 0ffc 9C       		.byte	0x9c
 8966 0ffd 27       		.uleb128 0x27
 8967 0ffe FB0A0000 		.4byte	.LASF218
 8968 1002 01       		.byte	0x1
 8969 1003 3804     		.2byte	0x438
 8970 1005 00000000 		.4byte	.LFB92
 8971 1009 0C000000 		.4byte	.LFE92-.LFB92
 8972 100d 01       		.uleb128 0x1
 8973 100e 9C       		.byte	0x9c
 8974 100f 2B       		.uleb128 0x2b
 8975 1010 C1040000 		.4byte	.LASF219
 8976 1014 01       		.byte	0x1
 8977 1015 3F04     		.2byte	0x43f
 8978 1017 00000000 		.4byte	.LFB93
 8979 101b 0C000000 		.4byte	.LFE93-.LFB93
 8980 101f 01       		.uleb128 0x1
 8981 1020 9C       		.byte	0x9c
 8982 1021 27       		.uleb128 0x27
 8983 1022 5F050000 		.4byte	.LASF220
 8984 1026 01       		.byte	0x1
 8985 1027 4A04     		.2byte	0x44a
 8986 1029 00000000 		.4byte	.LFB94
 8987 102d 0C000000 		.4byte	.LFE94-.LFB94
 8988 1031 01       		.uleb128 0x1
 8989 1032 9C       		.byte	0x9c
 8990 1033 27       		.uleb128 0x27
 8991 1034 FE0B0000 		.4byte	.LASF221
 8992 1038 01       		.byte	0x1
 8993 1039 4F04     		.2byte	0x44f
 8994 103b 00000000 		.4byte	.LFB95
 8995 103f 0C000000 		.4byte	.LFE95-.LFB95
 8996 1043 01       		.uleb128 0x1
 8997 1044 9C       		.byte	0x9c
 8998 1045 27       		.uleb128 0x27
 8999 1046 77010000 		.4byte	.LASF222
 9000 104a 01       		.byte	0x1
 9001 104b 5304     		.2byte	0x453
 9002 104d 00000000 		.4byte	.LFB96
 9003 1051 0C000000 		.4byte	.LFE96-.LFB96
 9004 1055 01       		.uleb128 0x1
 9005 1056 9C       		.byte	0x9c
 9006 1057 27       		.uleb128 0x27
 9007 1058 A2080000 		.4byte	.LASF223
 9008 105c 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 206


 9009 105d 5704     		.2byte	0x457
 9010 105f 00000000 		.4byte	.LFB97
 9011 1063 0C000000 		.4byte	.LFE97-.LFB97
 9012 1067 01       		.uleb128 0x1
 9013 1068 9C       		.byte	0x9c
 9014 1069 27       		.uleb128 0x27
 9015 106a 070A0000 		.4byte	.LASF224
 9016 106e 01       		.byte	0x1
 9017 106f 5B04     		.2byte	0x45b
 9018 1071 00000000 		.4byte	.LFB98
 9019 1075 0C000000 		.4byte	.LFE98-.LFB98
 9020 1079 01       		.uleb128 0x1
 9021 107a 9C       		.byte	0x9c
 9022 107b 27       		.uleb128 0x27
 9023 107c 8B100000 		.4byte	.LASF225
 9024 1080 01       		.byte	0x1
 9025 1081 5F04     		.2byte	0x45f
 9026 1083 00000000 		.4byte	.LFB99
 9027 1087 0C000000 		.4byte	.LFE99-.LFB99
 9028 108b 01       		.uleb128 0x1
 9029 108c 9C       		.byte	0x9c
 9030 108d 27       		.uleb128 0x27
 9031 108e 660A0000 		.4byte	.LASF226
 9032 1092 01       		.byte	0x1
 9033 1093 6304     		.2byte	0x463
 9034 1095 00000000 		.4byte	.LFB100
 9035 1099 0C000000 		.4byte	.LFE100-.LFB100
 9036 109d 01       		.uleb128 0x1
 9037 109e 9C       		.byte	0x9c
 9038 109f 27       		.uleb128 0x27
 9039 10a0 0A0D0000 		.4byte	.LASF227
 9040 10a4 01       		.byte	0x1
 9041 10a5 6704     		.2byte	0x467
 9042 10a7 00000000 		.4byte	.LFB101
 9043 10ab 0C000000 		.4byte	.LFE101-.LFB101
 9044 10af 01       		.uleb128 0x1
 9045 10b0 9C       		.byte	0x9c
 9046 10b1 27       		.uleb128 0x27
 9047 10b2 13090000 		.4byte	.LASF228
 9048 10b6 01       		.byte	0x1
 9049 10b7 6C04     		.2byte	0x46c
 9050 10b9 00000000 		.4byte	.LFB102
 9051 10bd 0C000000 		.4byte	.LFE102-.LFB102
 9052 10c1 01       		.uleb128 0x1
 9053 10c2 9C       		.byte	0x9c
 9054 10c3 27       		.uleb128 0x27
 9055 10c4 390F0000 		.4byte	.LASF229
 9056 10c8 01       		.byte	0x1
 9057 10c9 7004     		.2byte	0x470
 9058 10cb 00000000 		.4byte	.LFB103
 9059 10cf 0C000000 		.4byte	.LFE103-.LFB103
 9060 10d3 01       		.uleb128 0x1
 9061 10d4 9C       		.byte	0x9c
 9062 10d5 27       		.uleb128 0x27
 9063 10d6 25070000 		.4byte	.LASF230
 9064 10da 01       		.byte	0x1
 9065 10db 7404     		.2byte	0x474
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 207


 9066 10dd 00000000 		.4byte	.LFB104
 9067 10e1 0C000000 		.4byte	.LFE104-.LFB104
 9068 10e5 01       		.uleb128 0x1
 9069 10e6 9C       		.byte	0x9c
 9070 10e7 2C       		.uleb128 0x2c
 9071 10e8 04100000 		.4byte	.LASF237
 9072 10ec 01       		.byte	0x1
 9073 10ed 7B04     		.2byte	0x47b
 9074 10ef 00000000 		.4byte	.LFB105
 9075 10f3 C4000000 		.4byte	.LFE105-.LFB105
 9076 10f7 01       		.uleb128 0x1
 9077 10f8 9C       		.byte	0x9c
 9078 10f9 49110000 		.4byte	0x1149
 9079 10fd 1F       		.uleb128 0x1f
 9080 10fe E2040000 		.4byte	.LASF178
 9081 1102 01       		.byte	0x1
 9082 1103 8004     		.2byte	0x480
 9083 1105 49110000 		.4byte	0x1149
 9084 1109 02       		.uleb128 0x2
 9085 110a 91       		.byte	0x91
 9086 110b 5C       		.sleb128 -36
 9087 110c 1F       		.uleb128 0x1f
 9088 110d 67070000 		.4byte	.LASF177
 9089 1111 01       		.byte	0x1
 9090 1112 8104     		.2byte	0x481
 9091 1114 97000000 		.4byte	0x97
 9092 1118 02       		.uleb128 0x2
 9093 1119 91       		.byte	0x91
 9094 111a 76       		.sleb128 -10
 9095 111b 1F       		.uleb128 0x1f
 9096 111c 10020000 		.4byte	.LASF231
 9097 1120 01       		.byte	0x1
 9098 1121 8304     		.2byte	0x483
 9099 1123 AF000000 		.4byte	0xaf
 9100 1127 02       		.uleb128 0x2
 9101 1128 91       		.byte	0x91
 9102 1129 70       		.sleb128 -16
 9103 112a 1F       		.uleb128 0x1f
 9104 112b 330F0000 		.4byte	.LASF232
 9105 112f 01       		.byte	0x1
 9106 1130 8304     		.2byte	0x483
 9107 1132 AF000000 		.4byte	0xaf
 9108 1136 02       		.uleb128 0x2
 9109 1137 91       		.byte	0x91
 9110 1138 6C       		.sleb128 -20
 9111 1139 1F       		.uleb128 0x1f
 9112 113a 84030000 		.4byte	.LASF233
 9113 113e 01       		.byte	0x1
 9114 113f 8404     		.2byte	0x484
 9115 1141 97000000 		.4byte	0x97
 9116 1145 02       		.uleb128 0x2
 9117 1146 91       		.byte	0x91
 9118 1147 77       		.sleb128 -9
 9119 1148 00       		.byte	0
 9120 1149 0E       		.uleb128 0xe
 9121 114a 97000000 		.4byte	0x97
 9122 114e 59110000 		.4byte	0x1159
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 208


 9123 1152 0F       		.uleb128 0xf
 9124 1153 00010000 		.4byte	0x100
 9125 1157 0F       		.byte	0xf
 9126 1158 00       		.byte	0
 9127 1159 2D       		.uleb128 0x2d
 9128 115a FC050000 		.4byte	.LASF234
 9129 115e 01       		.byte	0x1
 9130 115f A504     		.2byte	0x4a5
 9131 1161 BB000000 		.4byte	0xbb
 9132 1165 00000000 		.4byte	.LFB106
 9133 1169 A8000000 		.4byte	.LFE106-.LFB106
 9134 116d 01       		.uleb128 0x1
 9135 116e 9C       		.byte	0x9c
 9136 116f CE110000 		.4byte	0x11ce
 9137 1173 1F       		.uleb128 0x1f
 9138 1174 E2040000 		.4byte	.LASF178
 9139 1178 01       		.byte	0x1
 9140 1179 A704     		.2byte	0x4a7
 9141 117b 49110000 		.4byte	0x1149
 9142 117f 02       		.uleb128 0x2
 9143 1180 91       		.byte	0x91
 9144 1181 5C       		.sleb128 -36
 9145 1182 1F       		.uleb128 0x1f
 9146 1183 67070000 		.4byte	.LASF177
 9147 1187 01       		.byte	0x1
 9148 1188 A804     		.2byte	0x4a8
 9149 118a 97000000 		.4byte	0x97
 9150 118e 02       		.uleb128 0x2
 9151 118f 91       		.byte	0x91
 9152 1190 74       		.sleb128 -12
 9153 1191 1F       		.uleb128 0x1f
 9154 1192 55050000 		.4byte	.LASF235
 9155 1196 01       		.byte	0x1
 9156 1197 A904     		.2byte	0x4a9
 9157 1199 BB000000 		.4byte	0xbb
 9158 119d 02       		.uleb128 0x2
 9159 119e 91       		.byte	0x91
 9160 119f 76       		.sleb128 -10
 9161 11a0 1F       		.uleb128 0x1f
 9162 11a1 10020000 		.4byte	.LASF231
 9163 11a5 01       		.byte	0x1
 9164 11a6 AA04     		.2byte	0x4aa
 9165 11a8 AF000000 		.4byte	0xaf
 9166 11ac 02       		.uleb128 0x2
 9167 11ad 91       		.byte	0x91
 9168 11ae 70       		.sleb128 -16
 9169 11af 1F       		.uleb128 0x1f
 9170 11b0 330F0000 		.4byte	.LASF232
 9171 11b4 01       		.byte	0x1
 9172 11b5 AA04     		.2byte	0x4aa
 9173 11b7 AF000000 		.4byte	0xaf
 9174 11bb 02       		.uleb128 0x2
 9175 11bc 91       		.byte	0x91
 9176 11bd 6C       		.sleb128 -20
 9177 11be 1F       		.uleb128 0x1f
 9178 11bf 84030000 		.4byte	.LASF233
 9179 11c3 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 209


 9180 11c4 AB04     		.2byte	0x4ab
 9181 11c6 97000000 		.4byte	0x97
 9182 11ca 02       		.uleb128 0x2
 9183 11cb 91       		.byte	0x91
 9184 11cc 75       		.sleb128 -11
 9185 11cd 00       		.byte	0
 9186 11ce 27       		.uleb128 0x27
 9187 11cf 94000000 		.4byte	.LASF236
 9188 11d3 01       		.byte	0x1
 9189 11d4 CB04     		.2byte	0x4cb
 9190 11d6 00000000 		.4byte	.LFB107
 9191 11da 0C000000 		.4byte	.LFE107-.LFB107
 9192 11de 01       		.uleb128 0x1
 9193 11df 9C       		.byte	0x9c
 9194 11e0 2C       		.uleb128 0x2c
 9195 11e1 FE020000 		.4byte	.LASF238
 9196 11e5 01       		.byte	0x1
 9197 11e6 CF04     		.2byte	0x4cf
 9198 11e8 00000000 		.4byte	.LFB108
 9199 11ec 20000000 		.4byte	.LFE108-.LFB108
 9200 11f0 01       		.uleb128 0x1
 9201 11f1 9C       		.byte	0x9c
 9202 11f2 06120000 		.4byte	0x1206
 9203 11f6 1F       		.uleb128 0x1f
 9204 11f7 E2040000 		.4byte	.LASF178
 9205 11fb 01       		.byte	0x1
 9206 11fc D104     		.2byte	0x4d1
 9207 11fe C5040000 		.4byte	0x4c5
 9208 1202 02       		.uleb128 0x2
 9209 1203 91       		.byte	0x91
 9210 1204 74       		.sleb128 -12
 9211 1205 00       		.byte	0
 9212 1206 27       		.uleb128 0x27
 9213 1207 97050000 		.4byte	.LASF239
 9214 120b 01       		.byte	0x1
 9215 120c DD04     		.2byte	0x4dd
 9216 120e 00000000 		.4byte	.LFB109
 9217 1212 0C000000 		.4byte	.LFE109-.LFB109
 9218 1216 01       		.uleb128 0x1
 9219 1217 9C       		.byte	0x9c
 9220 1218 2C       		.uleb128 0x2c
 9221 1219 1B0C0000 		.4byte	.LASF240
 9222 121d 01       		.byte	0x1
 9223 121e E104     		.2byte	0x4e1
 9224 1220 00000000 		.4byte	.LFB110
 9225 1224 94000000 		.4byte	.LFE110-.LFB110
 9226 1228 01       		.uleb128 0x1
 9227 1229 9C       		.byte	0x9c
 9228 122a 5C120000 		.4byte	0x125c
 9229 122e 1F       		.uleb128 0x1f
 9230 122f 67070000 		.4byte	.LASF177
 9231 1233 01       		.byte	0x1
 9232 1234 E304     		.2byte	0x4e3
 9233 1236 97000000 		.4byte	0x97
 9234 123a 02       		.uleb128 0x2
 9235 123b 91       		.byte	0x91
 9236 123c 77       		.sleb128 -9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 210


 9237 123d 1F       		.uleb128 0x1f
 9238 123e E2040000 		.4byte	.LASF178
 9239 1242 01       		.byte	0x1
 9240 1243 E404     		.2byte	0x4e4
 9241 1245 C5040000 		.4byte	0x4c5
 9242 1249 02       		.uleb128 0x2
 9243 124a 91       		.byte	0x91
 9244 124b 74       		.sleb128 -12
 9245 124c 1F       		.uleb128 0x1f
 9246 124d F50C0000 		.4byte	.LASF198
 9247 1251 01       		.byte	0x1
 9248 1252 E504     		.2byte	0x4e5
 9249 1254 97000000 		.4byte	0x97
 9250 1258 02       		.uleb128 0x2
 9251 1259 91       		.byte	0x91
 9252 125a 76       		.sleb128 -10
 9253 125b 00       		.byte	0
 9254 125c 2C       		.uleb128 0x2c
 9255 125d 8D010000 		.4byte	.LASF241
 9256 1261 01       		.byte	0x1
 9257 1262 0305     		.2byte	0x503
 9258 1264 00000000 		.4byte	.LFB111
 9259 1268 60000000 		.4byte	.LFE111-.LFB111
 9260 126c 01       		.uleb128 0x1
 9261 126d 9C       		.byte	0x9c
 9262 126e 91120000 		.4byte	0x1291
 9263 1272 1F       		.uleb128 0x1f
 9264 1273 E2040000 		.4byte	.LASF178
 9265 1277 01       		.byte	0x1
 9266 1278 0505     		.2byte	0x505
 9267 127a 4C040000 		.4byte	0x44c
 9268 127e 02       		.uleb128 0x2
 9269 127f 91       		.byte	0x91
 9270 1280 70       		.sleb128 -16
 9271 1281 1F       		.uleb128 0x1f
 9272 1282 520E0000 		.4byte	.LASF242
 9273 1286 01       		.byte	0x1
 9274 1287 0605     		.2byte	0x506
 9275 1289 BB000000 		.4byte	0xbb
 9276 128d 02       		.uleb128 0x2
 9277 128e 91       		.byte	0x91
 9278 128f 6E       		.sleb128 -18
 9279 1290 00       		.byte	0
 9280 1291 27       		.uleb128 0x27
 9281 1292 18010000 		.4byte	.LASF243
 9282 1296 01       		.byte	0x1
 9283 1297 1905     		.2byte	0x519
 9284 1299 00000000 		.4byte	.LFB112
 9285 129d 0C000000 		.4byte	.LFE112-.LFB112
 9286 12a1 01       		.uleb128 0x1
 9287 12a2 9C       		.byte	0x9c
 9288 12a3 27       		.uleb128 0x27
 9289 12a4 E40E0000 		.4byte	.LASF244
 9290 12a8 01       		.byte	0x1
 9291 12a9 1D05     		.2byte	0x51d
 9292 12ab 00000000 		.4byte	.LFB113
 9293 12af 0C000000 		.4byte	.LFE113-.LFB113
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 211


 9294 12b3 01       		.uleb128 0x1
 9295 12b4 9C       		.byte	0x9c
 9296 12b5 27       		.uleb128 0x27
 9297 12b6 DE0D0000 		.4byte	.LASF245
 9298 12ba 01       		.byte	0x1
 9299 12bb 2005     		.2byte	0x520
 9300 12bd 00000000 		.4byte	.LFB114
 9301 12c1 0C000000 		.4byte	.LFE114-.LFB114
 9302 12c5 01       		.uleb128 0x1
 9303 12c6 9C       		.byte	0x9c
 9304 12c7 27       		.uleb128 0x27
 9305 12c8 8E020000 		.4byte	.LASF246
 9306 12cc 01       		.byte	0x1
 9307 12cd 2305     		.2byte	0x523
 9308 12cf 00000000 		.4byte	.LFB115
 9309 12d3 0C000000 		.4byte	.LFE115-.LFB115
 9310 12d7 01       		.uleb128 0x1
 9311 12d8 9C       		.byte	0x9c
 9312 12d9 27       		.uleb128 0x27
 9313 12da C6020000 		.4byte	.LASF247
 9314 12de 01       		.byte	0x1
 9315 12df 2605     		.2byte	0x526
 9316 12e1 00000000 		.4byte	.LFB116
 9317 12e5 0C000000 		.4byte	.LFE116-.LFB116
 9318 12e9 01       		.uleb128 0x1
 9319 12ea 9C       		.byte	0x9c
 9320 12eb 1E       		.uleb128 0x1e
 9321 12ec 58020000 		.4byte	.LASF248
 9322 12f0 01       		.byte	0x1
 9323 12f1 2A05     		.2byte	0x52a
 9324 12f3 00000000 		.4byte	.LFB117
 9325 12f7 54010000 		.4byte	.LFE117-.LFB117
 9326 12fb 01       		.uleb128 0x1
 9327 12fc 9C       		.byte	0x9c
 9328 12fd 40130000 		.4byte	0x1340
 9329 1301 22       		.uleb128 0x22
 9330 1302 EC050000 		.4byte	.LASF249
 9331 1306 01       		.byte	0x1
 9332 1307 2A05     		.2byte	0x52a
 9333 1309 A3000000 		.4byte	0xa3
 9334 130d 04       		.uleb128 0x4
 9335 130e 91       		.byte	0x91
 9336 130f 9EE37E   		.sleb128 -20066
 9337 1312 23       		.uleb128 0x23
 9338 1313 6900     		.ascii	"i\000"
 9339 1315 01       		.byte	0x1
 9340 1316 2C05     		.2byte	0x52c
 9341 1318 97000000 		.4byte	0x97
 9342 131c 02       		.uleb128 0x2
 9343 131d 91       		.byte	0x91
 9344 131e 77       		.sleb128 -9
 9345 131f 1F       		.uleb128 0x1f
 9346 1320 70030000 		.4byte	.LASF250
 9347 1324 01       		.byte	0x1
 9348 1325 2D05     		.2byte	0x52d
 9349 1327 4A0A0000 		.4byte	0xa4a
 9350 132b 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 212


 9351 132c 91       		.byte	0x91
 9352 132d 44       		.sleb128 -60
 9353 132e 1F       		.uleb128 0x1f
 9354 132f 41070000 		.4byte	.LASF163
 9355 1333 01       		.byte	0x1
 9356 1334 2E05     		.2byte	0x52e
 9357 1336 C3080000 		.4byte	0x8c3
 9358 133a 04       		.uleb128 0x4
 9359 133b 91       		.byte	0x91
 9360 133c A4E37E   		.sleb128 -20060
 9361 133f 00       		.byte	0
 9362 1340 26       		.uleb128 0x26
 9363 1341 25030000 		.4byte	.LASF251
 9364 1345 01       		.byte	0x1
 9365 1346 4605     		.2byte	0x546
 9366 1348 00000000 		.4byte	.LFB118
 9367 134c 14000000 		.4byte	.LFE118-.LFB118
 9368 1350 01       		.uleb128 0x1
 9369 1351 9C       		.byte	0x9c
 9370 1352 66130000 		.4byte	0x1366
 9371 1356 22       		.uleb128 0x22
 9372 1357 EC050000 		.4byte	.LASF249
 9373 135b 01       		.byte	0x1
 9374 135c 4605     		.2byte	0x546
 9375 135e A3000000 		.4byte	0xa3
 9376 1362 02       		.uleb128 0x2
 9377 1363 91       		.byte	0x91
 9378 1364 76       		.sleb128 -10
 9379 1365 00       		.byte	0
 9380 1366 2C       		.uleb128 0x2c
 9381 1367 E9080000 		.4byte	.LASF252
 9382 136b 01       		.byte	0x1
 9383 136c 4F05     		.2byte	0x54f
 9384 136e 00000000 		.4byte	.LFB119
 9385 1372 50010000 		.4byte	.LFE119-.LFB119
 9386 1376 01       		.uleb128 0x1
 9387 1377 9C       		.byte	0x9c
 9388 1378 8A130000 		.4byte	0x138a
 9389 137c 23       		.uleb128 0x23
 9390 137d 6900     		.ascii	"i\000"
 9391 137f 01       		.byte	0x1
 9392 1380 5105     		.2byte	0x551
 9393 1382 97000000 		.4byte	0x97
 9394 1386 02       		.uleb128 0x2
 9395 1387 91       		.byte	0x91
 9396 1388 6F       		.sleb128 -17
 9397 1389 00       		.byte	0
 9398 138a 2C       		.uleb128 0x2c
 9399 138b A5000000 		.4byte	.LASF253
 9400 138f 01       		.byte	0x1
 9401 1390 7605     		.2byte	0x576
 9402 1392 00000000 		.4byte	.LFB120
 9403 1396 A0010000 		.4byte	.LFE120-.LFB120
 9404 139a 01       		.uleb128 0x1
 9405 139b 9C       		.byte	0x9c
 9406 139c FB130000 		.4byte	0x13fb
 9407 13a0 1F       		.uleb128 0x1f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 213


 9408 13a1 55050000 		.4byte	.LASF235
 9409 13a5 01       		.byte	0x1
 9410 13a6 7805     		.2byte	0x578
 9411 13a8 BB000000 		.4byte	0xbb
 9412 13ac 02       		.uleb128 0x2
 9413 13ad 91       		.byte	0x91
 9414 13ae 5C       		.sleb128 -36
 9415 13af 1F       		.uleb128 0x1f
 9416 13b0 57040000 		.4byte	.LASF254
 9417 13b4 01       		.byte	0x1
 9418 13b5 7905     		.2byte	0x579
 9419 13b7 C7000000 		.4byte	0xc7
 9420 13bb 02       		.uleb128 0x2
 9421 13bc 91       		.byte	0x91
 9422 13bd 64       		.sleb128 -28
 9423 13be 1F       		.uleb128 0x1f
 9424 13bf 6F090000 		.4byte	.LASF255
 9425 13c3 01       		.byte	0x1
 9426 13c4 7A05     		.2byte	0x57a
 9427 13c6 C7000000 		.4byte	0xc7
 9428 13ca 02       		.uleb128 0x2
 9429 13cb 91       		.byte	0x91
 9430 13cc 54       		.sleb128 -44
 9431 13cd 1F       		.uleb128 0x1f
 9432 13ce EF020000 		.4byte	.LASF256
 9433 13d2 01       		.byte	0x1
 9434 13d3 7A05     		.2byte	0x57a
 9435 13d5 C7000000 		.4byte	0xc7
 9436 13d9 02       		.uleb128 0x2
 9437 13da 91       		.byte	0x91
 9438 13db 58       		.sleb128 -40
 9439 13dc 1F       		.uleb128 0x1f
 9440 13dd 49040000 		.4byte	.LASF257
 9441 13e1 01       		.byte	0x1
 9442 13e2 7B05     		.2byte	0x57b
 9443 13e4 C7000000 		.4byte	0xc7
 9444 13e8 02       		.uleb128 0x2
 9445 13e9 91       		.byte	0x91
 9446 13ea 60       		.sleb128 -32
 9447 13eb 1F       		.uleb128 0x1f
 9448 13ec FF090000 		.4byte	.LASF258
 9449 13f0 01       		.byte	0x1
 9450 13f1 7C05     		.2byte	0x57c
 9451 13f3 BB000000 		.4byte	0xbb
 9452 13f7 02       		.uleb128 0x2
 9453 13f8 91       		.byte	0x91
 9454 13f9 5E       		.sleb128 -34
 9455 13fa 00       		.byte	0
 9456 13fb 2E       		.uleb128 0x2e
 9457 13fc 770A0000 		.4byte	.LASF259
 9458 1400 01       		.byte	0x1
 9459 1401 B805     		.2byte	0x5b8
 9460 1403 97000000 		.4byte	0x97
 9461 1407 00000000 		.4byte	.LFB121
 9462 140b 0E000000 		.4byte	.LFE121-.LFB121
 9463 140f 01       		.uleb128 0x1
 9464 1410 9C       		.byte	0x9c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 214


 9465 1411 26       		.uleb128 0x26
 9466 1412 A2060000 		.4byte	.LASF260
 9467 1416 01       		.byte	0x1
 9468 1417 C205     		.2byte	0x5c2
 9469 1419 00000000 		.4byte	.LFB122
 9470 141d 12000000 		.4byte	.LFE122-.LFB122
 9471 1421 01       		.uleb128 0x1
 9472 1422 9C       		.byte	0x9c
 9473 1423 37140000 		.4byte	0x1437
 9474 1427 22       		.uleb128 0x22
 9475 1428 87050000 		.4byte	.LASF261
 9476 142c 01       		.byte	0x1
 9477 142d C205     		.2byte	0x5c2
 9478 142f 73000000 		.4byte	0x73
 9479 1433 02       		.uleb128 0x2
 9480 1434 91       		.byte	0x91
 9481 1435 74       		.sleb128 -12
 9482 1436 00       		.byte	0
 9483 1437 1E       		.uleb128 0x1e
 9484 1438 650B0000 		.4byte	.LASF262
 9485 143c 01       		.byte	0x1
 9486 143d 1306     		.2byte	0x613
 9487 143f 00000000 		.4byte	.LFB123
 9488 1443 84000000 		.4byte	.LFE123-.LFB123
 9489 1447 01       		.uleb128 0x1
 9490 1448 9C       		.byte	0x9c
 9491 1449 8A140000 		.4byte	0x148a
 9492 144d 22       		.uleb128 0x22
 9493 144e 4D070000 		.4byte	.LASF132
 9494 1452 01       		.byte	0x1
 9495 1453 1306     		.2byte	0x613
 9496 1455 97000000 		.4byte	0x97
 9497 1459 02       		.uleb128 0x2
 9498 145a 91       		.byte	0x91
 9499 145b 5F       		.sleb128 -33
 9500 145c 1F       		.uleb128 0x1f
 9501 145d E2040000 		.4byte	.LASF178
 9502 1461 01       		.byte	0x1
 9503 1462 1506     		.2byte	0x615
 9504 1464 4C040000 		.4byte	0x44c
 9505 1468 02       		.uleb128 0x2
 9506 1469 91       		.byte	0x91
 9507 146a 68       		.sleb128 -24
 9508 146b 1F       		.uleb128 0x1f
 9509 146c 67070000 		.4byte	.LASF177
 9510 1470 01       		.byte	0x1
 9511 1471 1606     		.2byte	0x616
 9512 1473 97000000 		.4byte	0x97
 9513 1477 02       		.uleb128 0x2
 9514 1478 91       		.byte	0x91
 9515 1479 6F       		.sleb128 -17
 9516 147a 1F       		.uleb128 0x1f
 9517 147b 520E0000 		.4byte	.LASF242
 9518 147f 01       		.byte	0x1
 9519 1480 1706     		.2byte	0x617
 9520 1482 BB000000 		.4byte	0xbb
 9521 1486 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 215


 9522 1487 91       		.byte	0x91
 9523 1488 66       		.sleb128 -26
 9524 1489 00       		.byte	0
 9525 148a 2F       		.uleb128 0x2f
 9526 148b 59000000 		.4byte	.LASF263
 9527 148f 01       		.byte	0x1
 9528 1490 2E06     		.2byte	0x62e
 9529 1492 00000000 		.4byte	.LFB124
 9530 1496 30000000 		.4byte	.LFE124-.LFB124
 9531 149a 01       		.uleb128 0x1
 9532 149b 9C       		.byte	0x9c
 9533 149c 27       		.uleb128 0x27
 9534 149d 02050000 		.4byte	.LASF264
 9535 14a1 01       		.byte	0x1
 9536 14a2 3C06     		.2byte	0x63c
 9537 14a4 00000000 		.4byte	.LFB125
 9538 14a8 0C000000 		.4byte	.LFE125-.LFB125
 9539 14ac 01       		.uleb128 0x1
 9540 14ad 9C       		.byte	0x9c
 9541 14ae 30       		.uleb128 0x30
 9542 14af 42090000 		.4byte	.LASF265
 9543 14b3 08       		.byte	0x8
 9544 14b4 1207     		.2byte	0x712
 9545 14b6 BA140000 		.4byte	0x14ba
 9546 14ba 06       		.uleb128 0x6
 9547 14bb 81000000 		.4byte	0x81
 9548 14bf 30       		.uleb128 0x30
 9549 14c0 A20F0000 		.4byte	.LASF266
 9550 14c4 07       		.byte	0x7
 9551 14c5 7201     		.2byte	0x172
 9552 14c7 8E060000 		.4byte	0x68e
 9553 14cb 30       		.uleb128 0x30
 9554 14cc D00D0000 		.4byte	.LASF267
 9555 14d0 07       		.byte	0x7
 9556 14d1 7201     		.2byte	0x172
 9557 14d3 8E060000 		.4byte	0x68e
 9558 14d7 30       		.uleb128 0x30
 9559 14d8 74000000 		.4byte	.LASF268
 9560 14dc 07       		.byte	0x7
 9561 14dd 6B01     		.2byte	0x16b
 9562 14df 76030000 		.4byte	0x376
 9563 14e3 30       		.uleb128 0x30
 9564 14e4 9C0F0000 		.4byte	.LASF269
 9565 14e8 07       		.byte	0x7
 9566 14e9 7101     		.2byte	0x171
 9567 14eb 6B050000 		.4byte	0x56b
 9568 14ef 30       		.uleb128 0x30
 9569 14f0 95090000 		.4byte	.LASF270
 9570 14f4 07       		.byte	0x7
 9571 14f5 7101     		.2byte	0x171
 9572 14f7 6B050000 		.4byte	0x56b
 9573 14fb 30       		.uleb128 0x30
 9574 14fc 31020000 		.4byte	.LASF271
 9575 1500 07       		.byte	0x7
 9576 1501 7301     		.2byte	0x173
 9577 1503 A3000000 		.4byte	0xa3
 9578 1507 30       		.uleb128 0x30
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 216


 9579 1508 740D0000 		.4byte	.LASF272
 9580 150c 07       		.byte	0x7
 9581 150d 7401     		.2byte	0x174
 9582 150f A3000000 		.4byte	0xa3
 9583 1513 30       		.uleb128 0x30
 9584 1514 8E030000 		.4byte	.LASF273
 9585 1518 07       		.byte	0x7
 9586 1519 6C01     		.2byte	0x16c
 9587 151b 97000000 		.4byte	0x97
 9588 151f 30       		.uleb128 0x30
 9589 1520 92060000 		.4byte	.LASF274
 9590 1524 07       		.byte	0x7
 9591 1525 6D01     		.2byte	0x16d
 9592 1527 97000000 		.4byte	0x97
 9593 152b 30       		.uleb128 0x30
 9594 152c 9B0C0000 		.4byte	.LASF275
 9595 1530 07       		.byte	0x7
 9596 1531 2B01     		.2byte	0x12b
 9597 1533 760C0000 		.4byte	0xc76
 9598 1537 30       		.uleb128 0x30
 9599 1538 D6020000 		.4byte	.LASF276
 9600 153c 07       		.byte	0x7
 9601 153d 2C01     		.2byte	0x12c
 9602 153f 760C0000 		.4byte	0xc76
 9603 1543 30       		.uleb128 0x30
 9604 1544 730F0000 		.4byte	.LASF277
 9605 1548 07       		.byte	0x7
 9606 1549 2F01     		.2byte	0x12f
 9607 154b 760C0000 		.4byte	0xc76
 9608 154f 30       		.uleb128 0x30
 9609 1550 E00F0000 		.4byte	.LASF278
 9610 1554 07       		.byte	0x7
 9611 1555 6F01     		.2byte	0x16f
 9612 1557 97000000 		.4byte	0x97
 9613 155b 30       		.uleb128 0x30
 9614 155c 47050000 		.4byte	.LASF279
 9615 1560 07       		.byte	0x7
 9616 1561 6601     		.2byte	0x166
 9617 1563 C7000000 		.4byte	0xc7
 9618 1567 30       		.uleb128 0x30
 9619 1568 5E0B0000 		.4byte	.LASF280
 9620 156c 07       		.byte	0x7
 9621 156d 6701     		.2byte	0x167
 9622 156f C5040000 		.4byte	0x4c5
 9623 1573 30       		.uleb128 0x30
 9624 1574 71100000 		.4byte	.LASF281
 9625 1578 07       		.byte	0x7
 9626 1579 6801     		.2byte	0x168
 9627 157b 97000000 		.4byte	0x97
 9628 157f 30       		.uleb128 0x30
 9629 1580 B2010000 		.4byte	.LASF282
 9630 1584 07       		.byte	0x7
 9631 1585 6801     		.2byte	0x168
 9632 1587 97000000 		.4byte	0x97
 9633 158b 30       		.uleb128 0x30
 9634 158c 1D020000 		.4byte	.LASF283
 9635 1590 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 217


 9636 1591 8601     		.2byte	0x186
 9637 1593 BB000000 		.4byte	0xbb
 9638 1597 30       		.uleb128 0x30
 9639 1598 27020000 		.4byte	.LASF284
 9640 159c 07       		.byte	0x7
 9641 159d 8701     		.2byte	0x187
 9642 159f BB000000 		.4byte	0xbb
 9643 15a3 31       		.uleb128 0x31
 9644 15a4 5C0E0000 		.4byte	.LASF285
 9645 15a8 01       		.byte	0x1
 9646 15a9 33       		.byte	0x33
 9647 15aa B4150000 		.4byte	0x15b4
 9648 15ae 05       		.uleb128 0x5
 9649 15af 03       		.byte	0x3
 9650 15b0 00000000 		.4byte	EEPROM_ADDR
 9651 15b4 07       		.uleb128 0x7
 9652 15b5 04       		.byte	0x4
 9653 15b6 E8000000 		.4byte	0xe8
 9654 15ba 00       		.byte	0
 9655              		.section	.debug_abbrev,"",%progbits
 9656              	.Ldebug_abbrev0:
 9657 0000 01       		.uleb128 0x1
 9658 0001 11       		.uleb128 0x11
 9659 0002 01       		.byte	0x1
 9660 0003 25       		.uleb128 0x25
 9661 0004 0E       		.uleb128 0xe
 9662 0005 13       		.uleb128 0x13
 9663 0006 0B       		.uleb128 0xb
 9664 0007 03       		.uleb128 0x3
 9665 0008 0E       		.uleb128 0xe
 9666 0009 1B       		.uleb128 0x1b
 9667 000a 0E       		.uleb128 0xe
 9668 000b 55       		.uleb128 0x55
 9669 000c 17       		.uleb128 0x17
 9670 000d 11       		.uleb128 0x11
 9671 000e 01       		.uleb128 0x1
 9672 000f 10       		.uleb128 0x10
 9673 0010 17       		.uleb128 0x17
 9674 0011 00       		.byte	0
 9675 0012 00       		.byte	0
 9676 0013 02       		.uleb128 0x2
 9677 0014 24       		.uleb128 0x24
 9678 0015 00       		.byte	0
 9679 0016 0B       		.uleb128 0xb
 9680 0017 0B       		.uleb128 0xb
 9681 0018 3E       		.uleb128 0x3e
 9682 0019 0B       		.uleb128 0xb
 9683 001a 03       		.uleb128 0x3
 9684 001b 0E       		.uleb128 0xe
 9685 001c 00       		.byte	0
 9686 001d 00       		.byte	0
 9687 001e 03       		.uleb128 0x3
 9688 001f 16       		.uleb128 0x16
 9689 0020 00       		.byte	0
 9690 0021 03       		.uleb128 0x3
 9691 0022 0E       		.uleb128 0xe
 9692 0023 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 218


 9693 0024 0B       		.uleb128 0xb
 9694 0025 3B       		.uleb128 0x3b
 9695 0026 0B       		.uleb128 0xb
 9696 0027 49       		.uleb128 0x49
 9697 0028 13       		.uleb128 0x13
 9698 0029 00       		.byte	0
 9699 002a 00       		.byte	0
 9700 002b 04       		.uleb128 0x4
 9701 002c 24       		.uleb128 0x24
 9702 002d 00       		.byte	0
 9703 002e 0B       		.uleb128 0xb
 9704 002f 0B       		.uleb128 0xb
 9705 0030 3E       		.uleb128 0x3e
 9706 0031 0B       		.uleb128 0xb
 9707 0032 03       		.uleb128 0x3
 9708 0033 08       		.uleb128 0x8
 9709 0034 00       		.byte	0
 9710 0035 00       		.byte	0
 9711 0036 05       		.uleb128 0x5
 9712 0037 16       		.uleb128 0x16
 9713 0038 00       		.byte	0
 9714 0039 03       		.uleb128 0x3
 9715 003a 0E       		.uleb128 0xe
 9716 003b 3A       		.uleb128 0x3a
 9717 003c 0B       		.uleb128 0xb
 9718 003d 3B       		.uleb128 0x3b
 9719 003e 05       		.uleb128 0x5
 9720 003f 49       		.uleb128 0x49
 9721 0040 13       		.uleb128 0x13
 9722 0041 00       		.byte	0
 9723 0042 00       		.byte	0
 9724 0043 06       		.uleb128 0x6
 9725 0044 35       		.uleb128 0x35
 9726 0045 00       		.byte	0
 9727 0046 49       		.uleb128 0x49
 9728 0047 13       		.uleb128 0x13
 9729 0048 00       		.byte	0
 9730 0049 00       		.byte	0
 9731 004a 07       		.uleb128 0x7
 9732 004b 0F       		.uleb128 0xf
 9733 004c 00       		.byte	0
 9734 004d 0B       		.uleb128 0xb
 9735 004e 0B       		.uleb128 0xb
 9736 004f 49       		.uleb128 0x49
 9737 0050 13       		.uleb128 0x13
 9738 0051 00       		.byte	0
 9739 0052 00       		.byte	0
 9740 0053 08       		.uleb128 0x8
 9741 0054 26       		.uleb128 0x26
 9742 0055 00       		.byte	0
 9743 0056 49       		.uleb128 0x49
 9744 0057 13       		.uleb128 0x13
 9745 0058 00       		.byte	0
 9746 0059 00       		.byte	0
 9747 005a 09       		.uleb128 0x9
 9748 005b 04       		.uleb128 0x4
 9749 005c 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 219


 9750 005d 03       		.uleb128 0x3
 9751 005e 0E       		.uleb128 0xe
 9752 005f 0B       		.uleb128 0xb
 9753 0060 0B       		.uleb128 0xb
 9754 0061 49       		.uleb128 0x49
 9755 0062 13       		.uleb128 0x13
 9756 0063 3A       		.uleb128 0x3a
 9757 0064 0B       		.uleb128 0xb
 9758 0065 3B       		.uleb128 0x3b
 9759 0066 0B       		.uleb128 0xb
 9760 0067 01       		.uleb128 0x1
 9761 0068 13       		.uleb128 0x13
 9762 0069 00       		.byte	0
 9763 006a 00       		.byte	0
 9764 006b 0A       		.uleb128 0xa
 9765 006c 28       		.uleb128 0x28
 9766 006d 00       		.byte	0
 9767 006e 03       		.uleb128 0x3
 9768 006f 0E       		.uleb128 0xe
 9769 0070 1C       		.uleb128 0x1c
 9770 0071 0B       		.uleb128 0xb
 9771 0072 00       		.byte	0
 9772 0073 00       		.byte	0
 9773 0074 0B       		.uleb128 0xb
 9774 0075 13       		.uleb128 0x13
 9775 0076 01       		.byte	0x1
 9776 0077 03       		.uleb128 0x3
 9777 0078 0E       		.uleb128 0xe
 9778 0079 0B       		.uleb128 0xb
 9779 007a 0B       		.uleb128 0xb
 9780 007b 3A       		.uleb128 0x3a
 9781 007c 0B       		.uleb128 0xb
 9782 007d 3B       		.uleb128 0x3b
 9783 007e 0B       		.uleb128 0xb
 9784 007f 01       		.uleb128 0x1
 9785 0080 13       		.uleb128 0x13
 9786 0081 00       		.byte	0
 9787 0082 00       		.byte	0
 9788 0083 0C       		.uleb128 0xc
 9789 0084 0D       		.uleb128 0xd
 9790 0085 00       		.byte	0
 9791 0086 03       		.uleb128 0x3
 9792 0087 0E       		.uleb128 0xe
 9793 0088 3A       		.uleb128 0x3a
 9794 0089 0B       		.uleb128 0xb
 9795 008a 3B       		.uleb128 0x3b
 9796 008b 0B       		.uleb128 0xb
 9797 008c 49       		.uleb128 0x49
 9798 008d 13       		.uleb128 0x13
 9799 008e 38       		.uleb128 0x38
 9800 008f 0B       		.uleb128 0xb
 9801 0090 00       		.byte	0
 9802 0091 00       		.byte	0
 9803 0092 0D       		.uleb128 0xd
 9804 0093 0D       		.uleb128 0xd
 9805 0094 00       		.byte	0
 9806 0095 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 220


 9807 0096 08       		.uleb128 0x8
 9808 0097 3A       		.uleb128 0x3a
 9809 0098 0B       		.uleb128 0xb
 9810 0099 3B       		.uleb128 0x3b
 9811 009a 0B       		.uleb128 0xb
 9812 009b 49       		.uleb128 0x49
 9813 009c 13       		.uleb128 0x13
 9814 009d 38       		.uleb128 0x38
 9815 009e 0B       		.uleb128 0xb
 9816 009f 00       		.byte	0
 9817 00a0 00       		.byte	0
 9818 00a1 0E       		.uleb128 0xe
 9819 00a2 01       		.uleb128 0x1
 9820 00a3 01       		.byte	0x1
 9821 00a4 49       		.uleb128 0x49
 9822 00a5 13       		.uleb128 0x13
 9823 00a6 01       		.uleb128 0x1
 9824 00a7 13       		.uleb128 0x13
 9825 00a8 00       		.byte	0
 9826 00a9 00       		.byte	0
 9827 00aa 0F       		.uleb128 0xf
 9828 00ab 21       		.uleb128 0x21
 9829 00ac 00       		.byte	0
 9830 00ad 49       		.uleb128 0x49
 9831 00ae 13       		.uleb128 0x13
 9832 00af 2F       		.uleb128 0x2f
 9833 00b0 0B       		.uleb128 0xb
 9834 00b1 00       		.byte	0
 9835 00b2 00       		.byte	0
 9836 00b3 10       		.uleb128 0x10
 9837 00b4 13       		.uleb128 0x13
 9838 00b5 01       		.byte	0x1
 9839 00b6 03       		.uleb128 0x3
 9840 00b7 0E       		.uleb128 0xe
 9841 00b8 0B       		.uleb128 0xb
 9842 00b9 0B       		.uleb128 0xb
 9843 00ba 3A       		.uleb128 0x3a
 9844 00bb 0B       		.uleb128 0xb
 9845 00bc 3B       		.uleb128 0x3b
 9846 00bd 05       		.uleb128 0x5
 9847 00be 01       		.uleb128 0x1
 9848 00bf 13       		.uleb128 0x13
 9849 00c0 00       		.byte	0
 9850 00c1 00       		.byte	0
 9851 00c2 11       		.uleb128 0x11
 9852 00c3 0D       		.uleb128 0xd
 9853 00c4 00       		.byte	0
 9854 00c5 03       		.uleb128 0x3
 9855 00c6 0E       		.uleb128 0xe
 9856 00c7 3A       		.uleb128 0x3a
 9857 00c8 0B       		.uleb128 0xb
 9858 00c9 3B       		.uleb128 0x3b
 9859 00ca 05       		.uleb128 0x5
 9860 00cb 49       		.uleb128 0x49
 9861 00cc 13       		.uleb128 0x13
 9862 00cd 38       		.uleb128 0x38
 9863 00ce 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 221


 9864 00cf 00       		.byte	0
 9865 00d0 00       		.byte	0
 9866 00d1 12       		.uleb128 0x12
 9867 00d2 0D       		.uleb128 0xd
 9868 00d3 00       		.byte	0
 9869 00d4 03       		.uleb128 0x3
 9870 00d5 08       		.uleb128 0x8
 9871 00d6 3A       		.uleb128 0x3a
 9872 00d7 0B       		.uleb128 0xb
 9873 00d8 3B       		.uleb128 0x3b
 9874 00d9 05       		.uleb128 0x5
 9875 00da 49       		.uleb128 0x49
 9876 00db 13       		.uleb128 0x13
 9877 00dc 38       		.uleb128 0x38
 9878 00dd 0B       		.uleb128 0xb
 9879 00de 00       		.byte	0
 9880 00df 00       		.byte	0
 9881 00e0 13       		.uleb128 0x13
 9882 00e1 2E       		.uleb128 0x2e
 9883 00e2 01       		.byte	0x1
 9884 00e3 03       		.uleb128 0x3
 9885 00e4 0E       		.uleb128 0xe
 9886 00e5 3A       		.uleb128 0x3a
 9887 00e6 0B       		.uleb128 0xb
 9888 00e7 3B       		.uleb128 0x3b
 9889 00e8 05       		.uleb128 0x5
 9890 00e9 27       		.uleb128 0x27
 9891 00ea 19       		.uleb128 0x19
 9892 00eb 49       		.uleb128 0x49
 9893 00ec 13       		.uleb128 0x13
 9894 00ed 20       		.uleb128 0x20
 9895 00ee 0B       		.uleb128 0xb
 9896 00ef 01       		.uleb128 0x1
 9897 00f0 13       		.uleb128 0x13
 9898 00f1 00       		.byte	0
 9899 00f2 00       		.byte	0
 9900 00f3 14       		.uleb128 0x14
 9901 00f4 05       		.uleb128 0x5
 9902 00f5 00       		.byte	0
 9903 00f6 03       		.uleb128 0x3
 9904 00f7 0E       		.uleb128 0xe
 9905 00f8 3A       		.uleb128 0x3a
 9906 00f9 0B       		.uleb128 0xb
 9907 00fa 3B       		.uleb128 0x3b
 9908 00fb 05       		.uleb128 0x5
 9909 00fc 49       		.uleb128 0x49
 9910 00fd 13       		.uleb128 0x13
 9911 00fe 00       		.byte	0
 9912 00ff 00       		.byte	0
 9913 0100 15       		.uleb128 0x15
 9914 0101 34       		.uleb128 0x34
 9915 0102 00       		.byte	0
 9916 0103 03       		.uleb128 0x3
 9917 0104 0E       		.uleb128 0xe
 9918 0105 3A       		.uleb128 0x3a
 9919 0106 0B       		.uleb128 0xb
 9920 0107 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 222


 9921 0108 05       		.uleb128 0x5
 9922 0109 49       		.uleb128 0x49
 9923 010a 13       		.uleb128 0x13
 9924 010b 00       		.byte	0
 9925 010c 00       		.byte	0
 9926 010d 16       		.uleb128 0x16
 9927 010e 2E       		.uleb128 0x2e
 9928 010f 01       		.byte	0x1
 9929 0110 3F       		.uleb128 0x3f
 9930 0111 19       		.uleb128 0x19
 9931 0112 03       		.uleb128 0x3
 9932 0113 0E       		.uleb128 0xe
 9933 0114 3A       		.uleb128 0x3a
 9934 0115 0B       		.uleb128 0xb
 9935 0116 3B       		.uleb128 0x3b
 9936 0117 0B       		.uleb128 0xb
 9937 0118 27       		.uleb128 0x27
 9938 0119 19       		.uleb128 0x19
 9939 011a 11       		.uleb128 0x11
 9940 011b 01       		.uleb128 0x1
 9941 011c 12       		.uleb128 0x12
 9942 011d 06       		.uleb128 0x6
 9943 011e 40       		.uleb128 0x40
 9944 011f 18       		.uleb128 0x18
 9945 0120 9642     		.uleb128 0x2116
 9946 0122 19       		.uleb128 0x19
 9947 0123 01       		.uleb128 0x1
 9948 0124 13       		.uleb128 0x13
 9949 0125 00       		.byte	0
 9950 0126 00       		.byte	0
 9951 0127 17       		.uleb128 0x17
 9952 0128 34       		.uleb128 0x34
 9953 0129 00       		.byte	0
 9954 012a 03       		.uleb128 0x3
 9955 012b 0E       		.uleb128 0xe
 9956 012c 3A       		.uleb128 0x3a
 9957 012d 0B       		.uleb128 0xb
 9958 012e 3B       		.uleb128 0x3b
 9959 012f 0B       		.uleb128 0xb
 9960 0130 49       		.uleb128 0x49
 9961 0131 13       		.uleb128 0x13
 9962 0132 02       		.uleb128 0x2
 9963 0133 18       		.uleb128 0x18
 9964 0134 00       		.byte	0
 9965 0135 00       		.byte	0
 9966 0136 18       		.uleb128 0x18
 9967 0137 1D       		.uleb128 0x1d
 9968 0138 01       		.byte	0x1
 9969 0139 31       		.uleb128 0x31
 9970 013a 13       		.uleb128 0x13
 9971 013b 11       		.uleb128 0x11
 9972 013c 01       		.uleb128 0x1
 9973 013d 12       		.uleb128 0x12
 9974 013e 06       		.uleb128 0x6
 9975 013f 58       		.uleb128 0x58
 9976 0140 0B       		.uleb128 0xb
 9977 0141 59       		.uleb128 0x59
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 223


 9978 0142 0B       		.uleb128 0xb
 9979 0143 01       		.uleb128 0x1
 9980 0144 13       		.uleb128 0x13
 9981 0145 00       		.byte	0
 9982 0146 00       		.byte	0
 9983 0147 19       		.uleb128 0x19
 9984 0148 05       		.uleb128 0x5
 9985 0149 00       		.byte	0
 9986 014a 31       		.uleb128 0x31
 9987 014b 13       		.uleb128 0x13
 9988 014c 02       		.uleb128 0x2
 9989 014d 18       		.uleb128 0x18
 9990 014e 00       		.byte	0
 9991 014f 00       		.byte	0
 9992 0150 1A       		.uleb128 0x1a
 9993 0151 0B       		.uleb128 0xb
 9994 0152 01       		.byte	0x1
 9995 0153 11       		.uleb128 0x11
 9996 0154 01       		.uleb128 0x1
 9997 0155 12       		.uleb128 0x12
 9998 0156 06       		.uleb128 0x6
 9999 0157 00       		.byte	0
 10000 0158 00       		.byte	0
 10001 0159 1B       		.uleb128 0x1b
 10002 015a 34       		.uleb128 0x34
 10003 015b 00       		.byte	0
 10004 015c 31       		.uleb128 0x31
 10005 015d 13       		.uleb128 0x13
 10006 015e 02       		.uleb128 0x2
 10007 015f 18       		.uleb128 0x18
 10008 0160 00       		.byte	0
 10009 0161 00       		.byte	0
 10010 0162 1C       		.uleb128 0x1c
 10011 0163 1D       		.uleb128 0x1d
 10012 0164 01       		.byte	0x1
 10013 0165 31       		.uleb128 0x31
 10014 0166 13       		.uleb128 0x13
 10015 0167 11       		.uleb128 0x11
 10016 0168 01       		.uleb128 0x1
 10017 0169 12       		.uleb128 0x12
 10018 016a 06       		.uleb128 0x6
 10019 016b 58       		.uleb128 0x58
 10020 016c 0B       		.uleb128 0xb
 10021 016d 59       		.uleb128 0x59
 10022 016e 05       		.uleb128 0x5
 10023 016f 01       		.uleb128 0x1
 10024 0170 13       		.uleb128 0x13
 10025 0171 00       		.byte	0
 10026 0172 00       		.byte	0
 10027 0173 1D       		.uleb128 0x1d
 10028 0174 1D       		.uleb128 0x1d
 10029 0175 01       		.byte	0x1
 10030 0176 31       		.uleb128 0x31
 10031 0177 13       		.uleb128 0x13
 10032 0178 11       		.uleb128 0x11
 10033 0179 01       		.uleb128 0x1
 10034 017a 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 224


 10035 017b 06       		.uleb128 0x6
 10036 017c 58       		.uleb128 0x58
 10037 017d 0B       		.uleb128 0xb
 10038 017e 59       		.uleb128 0x59
 10039 017f 05       		.uleb128 0x5
 10040 0180 00       		.byte	0
 10041 0181 00       		.byte	0
 10042 0182 1E       		.uleb128 0x1e
 10043 0183 2E       		.uleb128 0x2e
 10044 0184 01       		.byte	0x1
 10045 0185 3F       		.uleb128 0x3f
 10046 0186 19       		.uleb128 0x19
 10047 0187 03       		.uleb128 0x3
 10048 0188 0E       		.uleb128 0xe
 10049 0189 3A       		.uleb128 0x3a
 10050 018a 0B       		.uleb128 0xb
 10051 018b 3B       		.uleb128 0x3b
 10052 018c 05       		.uleb128 0x5
 10053 018d 27       		.uleb128 0x27
 10054 018e 19       		.uleb128 0x19
 10055 018f 11       		.uleb128 0x11
 10056 0190 01       		.uleb128 0x1
 10057 0191 12       		.uleb128 0x12
 10058 0192 06       		.uleb128 0x6
 10059 0193 40       		.uleb128 0x40
 10060 0194 18       		.uleb128 0x18
 10061 0195 9642     		.uleb128 0x2116
 10062 0197 19       		.uleb128 0x19
 10063 0198 01       		.uleb128 0x1
 10064 0199 13       		.uleb128 0x13
 10065 019a 00       		.byte	0
 10066 019b 00       		.byte	0
 10067 019c 1F       		.uleb128 0x1f
 10068 019d 34       		.uleb128 0x34
 10069 019e 00       		.byte	0
 10070 019f 03       		.uleb128 0x3
 10071 01a0 0E       		.uleb128 0xe
 10072 01a1 3A       		.uleb128 0x3a
 10073 01a2 0B       		.uleb128 0xb
 10074 01a3 3B       		.uleb128 0x3b
 10075 01a4 05       		.uleb128 0x5
 10076 01a5 49       		.uleb128 0x49
 10077 01a6 13       		.uleb128 0x13
 10078 01a7 02       		.uleb128 0x2
 10079 01a8 18       		.uleb128 0x18
 10080 01a9 00       		.byte	0
 10081 01aa 00       		.byte	0
 10082 01ab 20       		.uleb128 0x20
 10083 01ac 21       		.uleb128 0x21
 10084 01ad 00       		.byte	0
 10085 01ae 49       		.uleb128 0x49
 10086 01af 13       		.uleb128 0x13
 10087 01b0 2F       		.uleb128 0x2f
 10088 01b1 05       		.uleb128 0x5
 10089 01b2 00       		.byte	0
 10090 01b3 00       		.byte	0
 10091 01b4 21       		.uleb128 0x21
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 225


 10092 01b5 2E       		.uleb128 0x2e
 10093 01b6 01       		.byte	0x1
 10094 01b7 3F       		.uleb128 0x3f
 10095 01b8 19       		.uleb128 0x19
 10096 01b9 03       		.uleb128 0x3
 10097 01ba 0E       		.uleb128 0xe
 10098 01bb 3A       		.uleb128 0x3a
 10099 01bc 0B       		.uleb128 0xb
 10100 01bd 3B       		.uleb128 0x3b
 10101 01be 05       		.uleb128 0x5
 10102 01bf 27       		.uleb128 0x27
 10103 01c0 19       		.uleb128 0x19
 10104 01c1 49       		.uleb128 0x49
 10105 01c2 13       		.uleb128 0x13
 10106 01c3 11       		.uleb128 0x11
 10107 01c4 01       		.uleb128 0x1
 10108 01c5 12       		.uleb128 0x12
 10109 01c6 06       		.uleb128 0x6
 10110 01c7 40       		.uleb128 0x40
 10111 01c8 18       		.uleb128 0x18
 10112 01c9 9742     		.uleb128 0x2117
 10113 01cb 19       		.uleb128 0x19
 10114 01cc 01       		.uleb128 0x1
 10115 01cd 13       		.uleb128 0x13
 10116 01ce 00       		.byte	0
 10117 01cf 00       		.byte	0
 10118 01d0 22       		.uleb128 0x22
 10119 01d1 05       		.uleb128 0x5
 10120 01d2 00       		.byte	0
 10121 01d3 03       		.uleb128 0x3
 10122 01d4 0E       		.uleb128 0xe
 10123 01d5 3A       		.uleb128 0x3a
 10124 01d6 0B       		.uleb128 0xb
 10125 01d7 3B       		.uleb128 0x3b
 10126 01d8 05       		.uleb128 0x5
 10127 01d9 49       		.uleb128 0x49
 10128 01da 13       		.uleb128 0x13
 10129 01db 02       		.uleb128 0x2
 10130 01dc 18       		.uleb128 0x18
 10131 01dd 00       		.byte	0
 10132 01de 00       		.byte	0
 10133 01df 23       		.uleb128 0x23
 10134 01e0 34       		.uleb128 0x34
 10135 01e1 00       		.byte	0
 10136 01e2 03       		.uleb128 0x3
 10137 01e3 08       		.uleb128 0x8
 10138 01e4 3A       		.uleb128 0x3a
 10139 01e5 0B       		.uleb128 0xb
 10140 01e6 3B       		.uleb128 0x3b
 10141 01e7 05       		.uleb128 0x5
 10142 01e8 49       		.uleb128 0x49
 10143 01e9 13       		.uleb128 0x13
 10144 01ea 02       		.uleb128 0x2
 10145 01eb 18       		.uleb128 0x18
 10146 01ec 00       		.byte	0
 10147 01ed 00       		.byte	0
 10148 01ee 24       		.uleb128 0x24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 226


 10149 01ef 0B       		.uleb128 0xb
 10150 01f0 01       		.byte	0x1
 10151 01f1 11       		.uleb128 0x11
 10152 01f2 01       		.uleb128 0x1
 10153 01f3 12       		.uleb128 0x12
 10154 01f4 06       		.uleb128 0x6
 10155 01f5 01       		.uleb128 0x1
 10156 01f6 13       		.uleb128 0x13
 10157 01f7 00       		.byte	0
 10158 01f8 00       		.byte	0
 10159 01f9 25       		.uleb128 0x25
 10160 01fa 21       		.uleb128 0x21
 10161 01fb 00       		.byte	0
 10162 01fc 49       		.uleb128 0x49
 10163 01fd 13       		.uleb128 0x13
 10164 01fe 2F       		.uleb128 0x2f
 10165 01ff 18       		.uleb128 0x18
 10166 0200 00       		.byte	0
 10167 0201 00       		.byte	0
 10168 0202 26       		.uleb128 0x26
 10169 0203 2E       		.uleb128 0x2e
 10170 0204 01       		.byte	0x1
 10171 0205 3F       		.uleb128 0x3f
 10172 0206 19       		.uleb128 0x19
 10173 0207 03       		.uleb128 0x3
 10174 0208 0E       		.uleb128 0xe
 10175 0209 3A       		.uleb128 0x3a
 10176 020a 0B       		.uleb128 0xb
 10177 020b 3B       		.uleb128 0x3b
 10178 020c 05       		.uleb128 0x5
 10179 020d 27       		.uleb128 0x27
 10180 020e 19       		.uleb128 0x19
 10181 020f 11       		.uleb128 0x11
 10182 0210 01       		.uleb128 0x1
 10183 0211 12       		.uleb128 0x12
 10184 0212 06       		.uleb128 0x6
 10185 0213 40       		.uleb128 0x40
 10186 0214 18       		.uleb128 0x18
 10187 0215 9742     		.uleb128 0x2117
 10188 0217 19       		.uleb128 0x19
 10189 0218 01       		.uleb128 0x1
 10190 0219 13       		.uleb128 0x13
 10191 021a 00       		.byte	0
 10192 021b 00       		.byte	0
 10193 021c 27       		.uleb128 0x27
 10194 021d 2E       		.uleb128 0x2e
 10195 021e 00       		.byte	0
 10196 021f 3F       		.uleb128 0x3f
 10197 0220 19       		.uleb128 0x19
 10198 0221 03       		.uleb128 0x3
 10199 0222 0E       		.uleb128 0xe
 10200 0223 3A       		.uleb128 0x3a
 10201 0224 0B       		.uleb128 0xb
 10202 0225 3B       		.uleb128 0x3b
 10203 0226 05       		.uleb128 0x5
 10204 0227 11       		.uleb128 0x11
 10205 0228 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 227


 10206 0229 12       		.uleb128 0x12
 10207 022a 06       		.uleb128 0x6
 10208 022b 40       		.uleb128 0x40
 10209 022c 18       		.uleb128 0x18
 10210 022d 9742     		.uleb128 0x2117
 10211 022f 19       		.uleb128 0x19
 10212 0230 00       		.byte	0
 10213 0231 00       		.byte	0
 10214 0232 28       		.uleb128 0x28
 10215 0233 05       		.uleb128 0x5
 10216 0234 00       		.byte	0
 10217 0235 03       		.uleb128 0x3
 10218 0236 08       		.uleb128 0x8
 10219 0237 3A       		.uleb128 0x3a
 10220 0238 0B       		.uleb128 0xb
 10221 0239 3B       		.uleb128 0x3b
 10222 023a 05       		.uleb128 0x5
 10223 023b 49       		.uleb128 0x49
 10224 023c 13       		.uleb128 0x13
 10225 023d 02       		.uleb128 0x2
 10226 023e 18       		.uleb128 0x18
 10227 023f 00       		.byte	0
 10228 0240 00       		.byte	0
 10229 0241 29       		.uleb128 0x29
 10230 0242 2E       		.uleb128 0x2e
 10231 0243 01       		.byte	0x1
 10232 0244 3F       		.uleb128 0x3f
 10233 0245 19       		.uleb128 0x19
 10234 0246 03       		.uleb128 0x3
 10235 0247 0E       		.uleb128 0xe
 10236 0248 3A       		.uleb128 0x3a
 10237 0249 0B       		.uleb128 0xb
 10238 024a 3B       		.uleb128 0x3b
 10239 024b 05       		.uleb128 0x5
 10240 024c 27       		.uleb128 0x27
 10241 024d 19       		.uleb128 0x19
 10242 024e 49       		.uleb128 0x49
 10243 024f 13       		.uleb128 0x13
 10244 0250 11       		.uleb128 0x11
 10245 0251 01       		.uleb128 0x1
 10246 0252 12       		.uleb128 0x12
 10247 0253 06       		.uleb128 0x6
 10248 0254 40       		.uleb128 0x40
 10249 0255 18       		.uleb128 0x18
 10250 0256 9642     		.uleb128 0x2116
 10251 0258 19       		.uleb128 0x19
 10252 0259 01       		.uleb128 0x1
 10253 025a 13       		.uleb128 0x13
 10254 025b 00       		.byte	0
 10255 025c 00       		.byte	0
 10256 025d 2A       		.uleb128 0x2a
 10257 025e 2E       		.uleb128 0x2e
 10258 025f 00       		.byte	0
 10259 0260 3F       		.uleb128 0x3f
 10260 0261 19       		.uleb128 0x19
 10261 0262 03       		.uleb128 0x3
 10262 0263 0E       		.uleb128 0xe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 228


 10263 0264 3A       		.uleb128 0x3a
 10264 0265 0B       		.uleb128 0xb
 10265 0266 3B       		.uleb128 0x3b
 10266 0267 05       		.uleb128 0x5
 10267 0268 27       		.uleb128 0x27
 10268 0269 19       		.uleb128 0x19
 10269 026a 49       		.uleb128 0x49
 10270 026b 13       		.uleb128 0x13
 10271 026c 11       		.uleb128 0x11
 10272 026d 01       		.uleb128 0x1
 10273 026e 12       		.uleb128 0x12
 10274 026f 06       		.uleb128 0x6
 10275 0270 40       		.uleb128 0x40
 10276 0271 18       		.uleb128 0x18
 10277 0272 9642     		.uleb128 0x2116
 10278 0274 19       		.uleb128 0x19
 10279 0275 00       		.byte	0
 10280 0276 00       		.byte	0
 10281 0277 2B       		.uleb128 0x2b
 10282 0278 2E       		.uleb128 0x2e
 10283 0279 00       		.byte	0
 10284 027a 3F       		.uleb128 0x3f
 10285 027b 19       		.uleb128 0x19
 10286 027c 03       		.uleb128 0x3
 10287 027d 0E       		.uleb128 0xe
 10288 027e 3A       		.uleb128 0x3a
 10289 027f 0B       		.uleb128 0xb
 10290 0280 3B       		.uleb128 0x3b
 10291 0281 05       		.uleb128 0x5
 10292 0282 27       		.uleb128 0x27
 10293 0283 19       		.uleb128 0x19
 10294 0284 11       		.uleb128 0x11
 10295 0285 01       		.uleb128 0x1
 10296 0286 12       		.uleb128 0x12
 10297 0287 06       		.uleb128 0x6
 10298 0288 40       		.uleb128 0x40
 10299 0289 18       		.uleb128 0x18
 10300 028a 9742     		.uleb128 0x2117
 10301 028c 19       		.uleb128 0x19
 10302 028d 00       		.byte	0
 10303 028e 00       		.byte	0
 10304 028f 2C       		.uleb128 0x2c
 10305 0290 2E       		.uleb128 0x2e
 10306 0291 01       		.byte	0x1
 10307 0292 3F       		.uleb128 0x3f
 10308 0293 19       		.uleb128 0x19
 10309 0294 03       		.uleb128 0x3
 10310 0295 0E       		.uleb128 0xe
 10311 0296 3A       		.uleb128 0x3a
 10312 0297 0B       		.uleb128 0xb
 10313 0298 3B       		.uleb128 0x3b
 10314 0299 05       		.uleb128 0x5
 10315 029a 11       		.uleb128 0x11
 10316 029b 01       		.uleb128 0x1
 10317 029c 12       		.uleb128 0x12
 10318 029d 06       		.uleb128 0x6
 10319 029e 40       		.uleb128 0x40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 229


 10320 029f 18       		.uleb128 0x18
 10321 02a0 9642     		.uleb128 0x2116
 10322 02a2 19       		.uleb128 0x19
 10323 02a3 01       		.uleb128 0x1
 10324 02a4 13       		.uleb128 0x13
 10325 02a5 00       		.byte	0
 10326 02a6 00       		.byte	0
 10327 02a7 2D       		.uleb128 0x2d
 10328 02a8 2E       		.uleb128 0x2e
 10329 02a9 01       		.byte	0x1
 10330 02aa 3F       		.uleb128 0x3f
 10331 02ab 19       		.uleb128 0x19
 10332 02ac 03       		.uleb128 0x3
 10333 02ad 0E       		.uleb128 0xe
 10334 02ae 3A       		.uleb128 0x3a
 10335 02af 0B       		.uleb128 0xb
 10336 02b0 3B       		.uleb128 0x3b
 10337 02b1 05       		.uleb128 0x5
 10338 02b2 49       		.uleb128 0x49
 10339 02b3 13       		.uleb128 0x13
 10340 02b4 11       		.uleb128 0x11
 10341 02b5 01       		.uleb128 0x1
 10342 02b6 12       		.uleb128 0x12
 10343 02b7 06       		.uleb128 0x6
 10344 02b8 40       		.uleb128 0x40
 10345 02b9 18       		.uleb128 0x18
 10346 02ba 9642     		.uleb128 0x2116
 10347 02bc 19       		.uleb128 0x19
 10348 02bd 01       		.uleb128 0x1
 10349 02be 13       		.uleb128 0x13
 10350 02bf 00       		.byte	0
 10351 02c0 00       		.byte	0
 10352 02c1 2E       		.uleb128 0x2e
 10353 02c2 2E       		.uleb128 0x2e
 10354 02c3 00       		.byte	0
 10355 02c4 3F       		.uleb128 0x3f
 10356 02c5 19       		.uleb128 0x19
 10357 02c6 03       		.uleb128 0x3
 10358 02c7 0E       		.uleb128 0xe
 10359 02c8 3A       		.uleb128 0x3a
 10360 02c9 0B       		.uleb128 0xb
 10361 02ca 3B       		.uleb128 0x3b
 10362 02cb 05       		.uleb128 0x5
 10363 02cc 49       		.uleb128 0x49
 10364 02cd 13       		.uleb128 0x13
 10365 02ce 11       		.uleb128 0x11
 10366 02cf 01       		.uleb128 0x1
 10367 02d0 12       		.uleb128 0x12
 10368 02d1 06       		.uleb128 0x6
 10369 02d2 40       		.uleb128 0x40
 10370 02d3 18       		.uleb128 0x18
 10371 02d4 9742     		.uleb128 0x2117
 10372 02d6 19       		.uleb128 0x19
 10373 02d7 00       		.byte	0
 10374 02d8 00       		.byte	0
 10375 02d9 2F       		.uleb128 0x2f
 10376 02da 2E       		.uleb128 0x2e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 230


 10377 02db 00       		.byte	0
 10378 02dc 3F       		.uleb128 0x3f
 10379 02dd 19       		.uleb128 0x19
 10380 02de 03       		.uleb128 0x3
 10381 02df 0E       		.uleb128 0xe
 10382 02e0 3A       		.uleb128 0x3a
 10383 02e1 0B       		.uleb128 0xb
 10384 02e2 3B       		.uleb128 0x3b
 10385 02e3 05       		.uleb128 0x5
 10386 02e4 11       		.uleb128 0x11
 10387 02e5 01       		.uleb128 0x1
 10388 02e6 12       		.uleb128 0x12
 10389 02e7 06       		.uleb128 0x6
 10390 02e8 40       		.uleb128 0x40
 10391 02e9 18       		.uleb128 0x18
 10392 02ea 9642     		.uleb128 0x2116
 10393 02ec 19       		.uleb128 0x19
 10394 02ed 00       		.byte	0
 10395 02ee 00       		.byte	0
 10396 02ef 30       		.uleb128 0x30
 10397 02f0 34       		.uleb128 0x34
 10398 02f1 00       		.byte	0
 10399 02f2 03       		.uleb128 0x3
 10400 02f3 0E       		.uleb128 0xe
 10401 02f4 3A       		.uleb128 0x3a
 10402 02f5 0B       		.uleb128 0xb
 10403 02f6 3B       		.uleb128 0x3b
 10404 02f7 05       		.uleb128 0x5
 10405 02f8 49       		.uleb128 0x49
 10406 02f9 13       		.uleb128 0x13
 10407 02fa 3F       		.uleb128 0x3f
 10408 02fb 19       		.uleb128 0x19
 10409 02fc 3C       		.uleb128 0x3c
 10410 02fd 19       		.uleb128 0x19
 10411 02fe 00       		.byte	0
 10412 02ff 00       		.byte	0
 10413 0300 31       		.uleb128 0x31
 10414 0301 34       		.uleb128 0x34
 10415 0302 00       		.byte	0
 10416 0303 03       		.uleb128 0x3
 10417 0304 0E       		.uleb128 0xe
 10418 0305 3A       		.uleb128 0x3a
 10419 0306 0B       		.uleb128 0xb
 10420 0307 3B       		.uleb128 0x3b
 10421 0308 0B       		.uleb128 0xb
 10422 0309 49       		.uleb128 0x49
 10423 030a 13       		.uleb128 0x13
 10424 030b 3F       		.uleb128 0x3f
 10425 030c 19       		.uleb128 0x19
 10426 030d 02       		.uleb128 0x2
 10427 030e 18       		.uleb128 0x18
 10428 030f 00       		.byte	0
 10429 0310 00       		.byte	0
 10430 0311 00       		.byte	0
 10431              		.section	.debug_aranges,"",%progbits
 10432 0000 04020000 		.4byte	0x204
 10433 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 231


 10434 0006 00000000 		.4byte	.Ldebug_info0
 10435 000a 04       		.byte	0x4
 10436 000b 00       		.byte	0
 10437 000c 0000     		.2byte	0
 10438 000e 0000     		.2byte	0
 10439 0010 00000000 		.4byte	.LFB64
 10440 0014 BC050000 		.4byte	.LFE64-.LFB64
 10441 0018 00000000 		.4byte	.LFB65
 10442 001c 22000000 		.4byte	.LFE65-.LFB65
 10443 0020 00000000 		.4byte	.LFB66
 10444 0024 5E000000 		.4byte	.LFE66-.LFB66
 10445 0028 00000000 		.4byte	.LFB67
 10446 002c 64010000 		.4byte	.LFE67-.LFB67
 10447 0030 00000000 		.4byte	.LFB68
 10448 0034 BC070000 		.4byte	.LFE68-.LFB68
 10449 0038 00000000 		.4byte	.LFB69
 10450 003c 84060000 		.4byte	.LFE69-.LFB69
 10451 0040 00000000 		.4byte	.LFB70
 10452 0044 34010000 		.4byte	.LFE70-.LFB70
 10453 0048 00000000 		.4byte	.LFB71
 10454 004c 14000000 		.4byte	.LFE71-.LFB71
 10455 0050 00000000 		.4byte	.LFB72
 10456 0054 0C000000 		.4byte	.LFE72-.LFB72
 10457 0058 00000000 		.4byte	.LFB73
 10458 005c FC060000 		.4byte	.LFE73-.LFB73
 10459 0060 00000000 		.4byte	.LFB74
 10460 0064 12000000 		.4byte	.LFE74-.LFB74
 10461 0068 00000000 		.4byte	.LFB75
 10462 006c 12000000 		.4byte	.LFE75-.LFB75
 10463 0070 00000000 		.4byte	.LFB76
 10464 0074 12000000 		.4byte	.LFE76-.LFB76
 10465 0078 00000000 		.4byte	.LFB77
 10466 007c 12000000 		.4byte	.LFE77-.LFB77
 10467 0080 00000000 		.4byte	.LFB78
 10468 0084 12000000 		.4byte	.LFE78-.LFB78
 10469 0088 00000000 		.4byte	.LFB79
 10470 008c 12000000 		.4byte	.LFE79-.LFB79
 10471 0090 00000000 		.4byte	.LFB80
 10472 0094 12000000 		.4byte	.LFE80-.LFB80
 10473 0098 00000000 		.4byte	.LFB81
 10474 009c 84000000 		.4byte	.LFE81-.LFB81
 10475 00a0 00000000 		.4byte	.LFB82
 10476 00a4 88000000 		.4byte	.LFE82-.LFB82
 10477 00a8 00000000 		.4byte	.LFB83
 10478 00ac A0000000 		.4byte	.LFE83-.LFB83
 10479 00b0 00000000 		.4byte	.LFB84
 10480 00b4 3E000000 		.4byte	.LFE84-.LFB84
 10481 00b8 00000000 		.4byte	.LFB85
 10482 00bc 2E000000 		.4byte	.LFE85-.LFB85
 10483 00c0 00000000 		.4byte	.LFB86
 10484 00c4 90000000 		.4byte	.LFE86-.LFB86
 10485 00c8 00000000 		.4byte	.LFB87
 10486 00cc 60000000 		.4byte	.LFE87-.LFB87
 10487 00d0 00000000 		.4byte	.LFB88
 10488 00d4 58000000 		.4byte	.LFE88-.LFB88
 10489 00d8 00000000 		.4byte	.LFB89
 10490 00dc CC000000 		.4byte	.LFE89-.LFB89
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 232


 10491 00e0 00000000 		.4byte	.LFB90
 10492 00e4 0C000000 		.4byte	.LFE90-.LFB90
 10493 00e8 00000000 		.4byte	.LFB91
 10494 00ec 0C000000 		.4byte	.LFE91-.LFB91
 10495 00f0 00000000 		.4byte	.LFB92
 10496 00f4 0C000000 		.4byte	.LFE92-.LFB92
 10497 00f8 00000000 		.4byte	.LFB93
 10498 00fc 0C000000 		.4byte	.LFE93-.LFB93
 10499 0100 00000000 		.4byte	.LFB94
 10500 0104 0C000000 		.4byte	.LFE94-.LFB94
 10501 0108 00000000 		.4byte	.LFB95
 10502 010c 0C000000 		.4byte	.LFE95-.LFB95
 10503 0110 00000000 		.4byte	.LFB96
 10504 0114 0C000000 		.4byte	.LFE96-.LFB96
 10505 0118 00000000 		.4byte	.LFB97
 10506 011c 0C000000 		.4byte	.LFE97-.LFB97
 10507 0120 00000000 		.4byte	.LFB98
 10508 0124 0C000000 		.4byte	.LFE98-.LFB98
 10509 0128 00000000 		.4byte	.LFB99
 10510 012c 0C000000 		.4byte	.LFE99-.LFB99
 10511 0130 00000000 		.4byte	.LFB100
 10512 0134 0C000000 		.4byte	.LFE100-.LFB100
 10513 0138 00000000 		.4byte	.LFB101
 10514 013c 0C000000 		.4byte	.LFE101-.LFB101
 10515 0140 00000000 		.4byte	.LFB102
 10516 0144 0C000000 		.4byte	.LFE102-.LFB102
 10517 0148 00000000 		.4byte	.LFB103
 10518 014c 0C000000 		.4byte	.LFE103-.LFB103
 10519 0150 00000000 		.4byte	.LFB104
 10520 0154 0C000000 		.4byte	.LFE104-.LFB104
 10521 0158 00000000 		.4byte	.LFB105
 10522 015c C4000000 		.4byte	.LFE105-.LFB105
 10523 0160 00000000 		.4byte	.LFB106
 10524 0164 A8000000 		.4byte	.LFE106-.LFB106
 10525 0168 00000000 		.4byte	.LFB107
 10526 016c 0C000000 		.4byte	.LFE107-.LFB107
 10527 0170 00000000 		.4byte	.LFB108
 10528 0174 20000000 		.4byte	.LFE108-.LFB108
 10529 0178 00000000 		.4byte	.LFB109
 10530 017c 0C000000 		.4byte	.LFE109-.LFB109
 10531 0180 00000000 		.4byte	.LFB110
 10532 0184 94000000 		.4byte	.LFE110-.LFB110
 10533 0188 00000000 		.4byte	.LFB111
 10534 018c 60000000 		.4byte	.LFE111-.LFB111
 10535 0190 00000000 		.4byte	.LFB112
 10536 0194 0C000000 		.4byte	.LFE112-.LFB112
 10537 0198 00000000 		.4byte	.LFB113
 10538 019c 0C000000 		.4byte	.LFE113-.LFB113
 10539 01a0 00000000 		.4byte	.LFB114
 10540 01a4 0C000000 		.4byte	.LFE114-.LFB114
 10541 01a8 00000000 		.4byte	.LFB115
 10542 01ac 0C000000 		.4byte	.LFE115-.LFB115
 10543 01b0 00000000 		.4byte	.LFB116
 10544 01b4 0C000000 		.4byte	.LFE116-.LFB116
 10545 01b8 00000000 		.4byte	.LFB117
 10546 01bc 54010000 		.4byte	.LFE117-.LFB117
 10547 01c0 00000000 		.4byte	.LFB118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 233


 10548 01c4 14000000 		.4byte	.LFE118-.LFB118
 10549 01c8 00000000 		.4byte	.LFB119
 10550 01cc 50010000 		.4byte	.LFE119-.LFB119
 10551 01d0 00000000 		.4byte	.LFB120
 10552 01d4 A0010000 		.4byte	.LFE120-.LFB120
 10553 01d8 00000000 		.4byte	.LFB121
 10554 01dc 0E000000 		.4byte	.LFE121-.LFB121
 10555 01e0 00000000 		.4byte	.LFB122
 10556 01e4 12000000 		.4byte	.LFE122-.LFB122
 10557 01e8 00000000 		.4byte	.LFB123
 10558 01ec 84000000 		.4byte	.LFE123-.LFB123
 10559 01f0 00000000 		.4byte	.LFB124
 10560 01f4 30000000 		.4byte	.LFE124-.LFB124
 10561 01f8 00000000 		.4byte	.LFB125
 10562 01fc 0C000000 		.4byte	.LFE125-.LFB125
 10563 0200 00000000 		.4byte	0
 10564 0204 00000000 		.4byte	0
 10565              		.section	.debug_ranges,"",%progbits
 10566              	.Ldebug_ranges0:
 10567 0000 00000000 		.4byte	.LFB64
 10568 0004 BC050000 		.4byte	.LFE64
 10569 0008 00000000 		.4byte	.LFB65
 10570 000c 22000000 		.4byte	.LFE65
 10571 0010 00000000 		.4byte	.LFB66
 10572 0014 5E000000 		.4byte	.LFE66
 10573 0018 00000000 		.4byte	.LFB67
 10574 001c 64010000 		.4byte	.LFE67
 10575 0020 00000000 		.4byte	.LFB68
 10576 0024 BC070000 		.4byte	.LFE68
 10577 0028 00000000 		.4byte	.LFB69
 10578 002c 84060000 		.4byte	.LFE69
 10579 0030 00000000 		.4byte	.LFB70
 10580 0034 34010000 		.4byte	.LFE70
 10581 0038 00000000 		.4byte	.LFB71
 10582 003c 14000000 		.4byte	.LFE71
 10583 0040 00000000 		.4byte	.LFB72
 10584 0044 0C000000 		.4byte	.LFE72
 10585 0048 00000000 		.4byte	.LFB73
 10586 004c FC060000 		.4byte	.LFE73
 10587 0050 00000000 		.4byte	.LFB74
 10588 0054 12000000 		.4byte	.LFE74
 10589 0058 00000000 		.4byte	.LFB75
 10590 005c 12000000 		.4byte	.LFE75
 10591 0060 00000000 		.4byte	.LFB76
 10592 0064 12000000 		.4byte	.LFE76
 10593 0068 00000000 		.4byte	.LFB77
 10594 006c 12000000 		.4byte	.LFE77
 10595 0070 00000000 		.4byte	.LFB78
 10596 0074 12000000 		.4byte	.LFE78
 10597 0078 00000000 		.4byte	.LFB79
 10598 007c 12000000 		.4byte	.LFE79
 10599 0080 00000000 		.4byte	.LFB80
 10600 0084 12000000 		.4byte	.LFE80
 10601 0088 00000000 		.4byte	.LFB81
 10602 008c 84000000 		.4byte	.LFE81
 10603 0090 00000000 		.4byte	.LFB82
 10604 0094 88000000 		.4byte	.LFE82
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 234


 10605 0098 00000000 		.4byte	.LFB83
 10606 009c A0000000 		.4byte	.LFE83
 10607 00a0 00000000 		.4byte	.LFB84
 10608 00a4 3E000000 		.4byte	.LFE84
 10609 00a8 00000000 		.4byte	.LFB85
 10610 00ac 2E000000 		.4byte	.LFE85
 10611 00b0 00000000 		.4byte	.LFB86
 10612 00b4 90000000 		.4byte	.LFE86
 10613 00b8 00000000 		.4byte	.LFB87
 10614 00bc 60000000 		.4byte	.LFE87
 10615 00c0 00000000 		.4byte	.LFB88
 10616 00c4 58000000 		.4byte	.LFE88
 10617 00c8 00000000 		.4byte	.LFB89
 10618 00cc CC000000 		.4byte	.LFE89
 10619 00d0 00000000 		.4byte	.LFB90
 10620 00d4 0C000000 		.4byte	.LFE90
 10621 00d8 00000000 		.4byte	.LFB91
 10622 00dc 0C000000 		.4byte	.LFE91
 10623 00e0 00000000 		.4byte	.LFB92
 10624 00e4 0C000000 		.4byte	.LFE92
 10625 00e8 00000000 		.4byte	.LFB93
 10626 00ec 0C000000 		.4byte	.LFE93
 10627 00f0 00000000 		.4byte	.LFB94
 10628 00f4 0C000000 		.4byte	.LFE94
 10629 00f8 00000000 		.4byte	.LFB95
 10630 00fc 0C000000 		.4byte	.LFE95
 10631 0100 00000000 		.4byte	.LFB96
 10632 0104 0C000000 		.4byte	.LFE96
 10633 0108 00000000 		.4byte	.LFB97
 10634 010c 0C000000 		.4byte	.LFE97
 10635 0110 00000000 		.4byte	.LFB98
 10636 0114 0C000000 		.4byte	.LFE98
 10637 0118 00000000 		.4byte	.LFB99
 10638 011c 0C000000 		.4byte	.LFE99
 10639 0120 00000000 		.4byte	.LFB100
 10640 0124 0C000000 		.4byte	.LFE100
 10641 0128 00000000 		.4byte	.LFB101
 10642 012c 0C000000 		.4byte	.LFE101
 10643 0130 00000000 		.4byte	.LFB102
 10644 0134 0C000000 		.4byte	.LFE102
 10645 0138 00000000 		.4byte	.LFB103
 10646 013c 0C000000 		.4byte	.LFE103
 10647 0140 00000000 		.4byte	.LFB104
 10648 0144 0C000000 		.4byte	.LFE104
 10649 0148 00000000 		.4byte	.LFB105
 10650 014c C4000000 		.4byte	.LFE105
 10651 0150 00000000 		.4byte	.LFB106
 10652 0154 A8000000 		.4byte	.LFE106
 10653 0158 00000000 		.4byte	.LFB107
 10654 015c 0C000000 		.4byte	.LFE107
 10655 0160 00000000 		.4byte	.LFB108
 10656 0164 20000000 		.4byte	.LFE108
 10657 0168 00000000 		.4byte	.LFB109
 10658 016c 0C000000 		.4byte	.LFE109
 10659 0170 00000000 		.4byte	.LFB110
 10660 0174 94000000 		.4byte	.LFE110
 10661 0178 00000000 		.4byte	.LFB111
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 235


 10662 017c 60000000 		.4byte	.LFE111
 10663 0180 00000000 		.4byte	.LFB112
 10664 0184 0C000000 		.4byte	.LFE112
 10665 0188 00000000 		.4byte	.LFB113
 10666 018c 0C000000 		.4byte	.LFE113
 10667 0190 00000000 		.4byte	.LFB114
 10668 0194 0C000000 		.4byte	.LFE114
 10669 0198 00000000 		.4byte	.LFB115
 10670 019c 0C000000 		.4byte	.LFE115
 10671 01a0 00000000 		.4byte	.LFB116
 10672 01a4 0C000000 		.4byte	.LFE116
 10673 01a8 00000000 		.4byte	.LFB117
 10674 01ac 54010000 		.4byte	.LFE117
 10675 01b0 00000000 		.4byte	.LFB118
 10676 01b4 14000000 		.4byte	.LFE118
 10677 01b8 00000000 		.4byte	.LFB119
 10678 01bc 50010000 		.4byte	.LFE119
 10679 01c0 00000000 		.4byte	.LFB120
 10680 01c4 A0010000 		.4byte	.LFE120
 10681 01c8 00000000 		.4byte	.LFB121
 10682 01cc 0E000000 		.4byte	.LFE121
 10683 01d0 00000000 		.4byte	.LFB122
 10684 01d4 12000000 		.4byte	.LFE122
 10685 01d8 00000000 		.4byte	.LFB123
 10686 01dc 84000000 		.4byte	.LFE123
 10687 01e0 00000000 		.4byte	.LFB124
 10688 01e4 30000000 		.4byte	.LFE124
 10689 01e8 00000000 		.4byte	.LFB125
 10690 01ec 0C000000 		.4byte	.LFE125
 10691 01f0 00000000 		.4byte	0
 10692 01f4 00000000 		.4byte	0
 10693              		.section	.debug_line,"",%progbits
 10694              	.Ldebug_line0:
 10695 0000 8E0A0000 		.section	.debug_str,"MS",%progbits,1
 10695      02008B01 
 10695      00000201 
 10695      FB0E0D00 
 10695      01010101 
 10696              	.LASF157:
 10697 0000 696E666F 		.ascii	"infoSend\000"
 10697      53656E64 
 10697      00
 10698              	.LASF46:
 10699 0009 4D454E55 		.ascii	"MENU_Y_N\000"
 10699      5F595F4E 
 10699      00
 10700              	.LASF171:
 10701 0012 73747269 		.ascii	"string_length\000"
 10701      6E675F6C 
 10701      656E6774 
 10701      6800
 10702              	.LASF23:
 10703 0020 73697A65 		.ascii	"sizetype\000"
 10703      74797065 
 10703      00
 10704              	.LASF64:
 10705 0029 434D445F 		.ascii	"CMD_INIT_MEM\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 236


 10705      494E4954 
 10705      5F4D454D 
 10705      00
 10706              	.LASF97:
 10707 0036 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 10707      545F4D4F 
 10707      44455F45 
 10707      4D475F46 
 10707      4346535F 
 10708              	.LASF44:
 10709 004e 4D454E55 		.ascii	"MENU_INPUT\000"
 10709      5F494E50 
 10709      555400
 10710              	.LASF263:
 10711 0059 73746F70 		.ascii	"stop_master_device\000"
 10711      5F6D6173 
 10711      7465725F 
 10711      64657669 
 10711      636500
 10712              	.LASF11:
 10713 006c 696E7433 		.ascii	"int32_t\000"
 10713      325F7400 
 10714              	.LASF268:
 10715 0074 675F7278 		.ascii	"g_rx\000"
 10715      00
 10716              	.LASF117:
 10717 0079 73745F64 		.ascii	"st_data\000"
 10717      61746100 
 10718              	.LASF210:
 10719 0081 77726974 		.ascii	"writeStatus\000"
 10719      65537461 
 10719      74757300 
 10720              	.LASF15:
 10721 008d 75696E74 		.ascii	"uint32\000"
 10721      333200
 10722              	.LASF236:
 10723 0094 636D645F 		.ascii	"cmd_set_baudrate\000"
 10723      7365745F 
 10723      62617564 
 10723      72617465 
 10723      00
 10724              	.LASF253:
 10725 00a5 6169725F 		.ascii	"air_chambers_control\000"
 10725      6368616D 
 10725      62657273 
 10725      5F636F6E 
 10725      74726F6C 
 10726              	.LASF188:
 10727 00ba 70726570 		.ascii	"prepare_generic_info\000"
 10727      6172655F 
 10727      67656E65 
 10727      7269635F 
 10727      696E666F 
 10728              	.LASF183:
 10729 00cf 4E554D5F 		.ascii	"NUM_MENUs\000"
 10729      4D454E55 
 10729      7300
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 237


 10730              	.LASF122:
 10731 00d9 706F735F 		.ascii	"pos_lim_inf\000"
 10731      6C696D5F 
 10731      696E6600 
 10732              	.LASF161:
 10733 00e5 54595045 		.ascii	"TYPE\000"
 10733      00
 10734              	.LASF145:
 10735 00ea 63686F69 		.ascii	"choice\000"
 10735      636500
 10736              	.LASF32:
 10737 00f1 43555354 		.ascii	"CUSTOM_RESET_COUNT\000"
 10737      4F4D5F52 
 10737      45534554 
 10737      5F434F55 
 10737      4E5400
 10738              	.LASF96:
 10739 0104 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 10739      545F4D4F 
 10739      44455F45 
 10739      4D475F46 
 10739      43465300 
 10740              	.LASF243:
 10741 0118 636D645F 		.ascii	"cmd_get_imu_readings\000"
 10741      6765745F 
 10741      696D755F 
 10741      72656164 
 10741      696E6773 
 10742              	.LASF130:
 10743 012d 73745F4D 		.ascii	"st_MASTER_spec\000"
 10743      41535445 
 10743      525F7370 
 10743      656300
 10744              	.LASF150:
 10745 013c 50415241 		.ascii	"PARAM_STR\000"
 10745      4D5F5354 
 10745      5200
 10746              	.LASF95:
 10747 0146 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 10747      545F4D4F 
 10747      44455F45 
 10747      4D475F49 
 10747      4E544547 
 10748              	.LASF181:
 10749 015e 50415241 		.ascii	"PARAM_IDX\000"
 10749      4D5F4944 
 10749      5800
 10750              	.LASF164:
 10751 0168 6765745F 		.ascii	"get_param_list\000"
 10751      70617261 
 10751      6D5F6C69 
 10751      737400
 10752              	.LASF222:
 10753 0177 636D645F 		.ascii	"cmd_get_accelerations\000"
 10753      6765745F 
 10753      61636365 
 10753      6C657261 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 238


 10753      74696F6E 
 10754              	.LASF241:
 10755 018d 636D645F 		.ascii	"cmd_get_emg\000"
 10755      6765745F 
 10755      656D6700 
 10756              	.LASF125:
 10757 0199 73745F65 		.ascii	"st_emg\000"
 10757      6D6700
 10758              	.LASF38:
 10759 01a0 43555354 		.ascii	"CUSTOM_MEAS_OFF_2\000"
 10759      4F4D5F4D 
 10759      4541535F 
 10759      4F46465F 
 10759      3200
 10760              	.LASF282:
 10761 01b2 50756D70 		.ascii	"Pump_refNew\000"
 10761      5F726566 
 10761      4E657700 
 10762              	.LASF290:
 10763 01be 72657375 		.ascii	"result\000"
 10763      6C7400
 10764              	.LASF116:
 10765 01c5 72656164 		.ascii	"ready\000"
 10765      7900
 10766              	.LASF173:
 10767 01cb 6175785F 		.ascii	"aux_str1\000"
 10767      73747231 
 10767      00
 10768              	.LASF28:
 10769 01d4 43555354 		.ascii	"CUSTOM_POS_LIM\000"
 10769      4F4D5F50 
 10769      4F535F4C 
 10769      494D00
 10770              	.LASF82:
 10771 01e3 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 10771      4745545F 
 10771      4A4F5953 
 10771      5449434B 
 10771      00
 10772              	.LASF94:
 10773 01f4 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 10773      545F4D4F 
 10773      44455F45 
 10773      4D475F50 
 10773      524F504F 
 10774              	.LASF231:
 10775 0210 745F7374 		.ascii	"t_start\000"
 10775      61727400 
 10776              	.LASF142:
 10777 0218 6D656E75 		.ascii	"menu\000"
 10777      00
 10778              	.LASF283:
 10779 021d 50574D5F 		.ascii	"PWM_IMU_1\000"
 10779      494D555F 
 10779      3100
 10780              	.LASF284:
 10781 0227 50574D5F 		.ascii	"PWM_IMU_2\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 239


 10781      494D555F 
 10781      3200
 10782              	.LASF271:
 10783 0231 74696D65 		.ascii	"timer_value\000"
 10783      725F7661 
 10783      6C756500 
 10784              	.LASF4:
 10785 023d 6C6F6E67 		.ascii	"long int\000"
 10785      20696E74 
 10785      00
 10786              	.LASF36:
 10787 0246 43555354 		.ascii	"CUSTOM_CURR_PID_2\000"
 10787      4F4D5F43 
 10787      5552525F 
 10787      5049445F 
 10787      3200
 10788              	.LASF248:
 10789 0258 636D645F 		.ascii	"cmd_get_SD_file\000"
 10789      6765745F 
 10789      53445F66 
 10789      696C6500 
 10790              	.LASF217:
 10791 0268 7365745A 		.ascii	"setZeros\000"
 10791      65726F73 
 10791      00
 10792              	.LASF120:
 10793 0271 756E7573 		.ascii	"unused_bytes\000"
 10793      65645F62 
 10793      79746573 
 10793      00
 10794              	.LASF149:
 10795 027e 4E554D5F 		.ascii	"NUM_ITEMS\000"
 10795      4954454D 
 10795      5300
 10796              	.LASF182:
 10797 0288 4D454D5F 		.ascii	"MEM_P\000"
 10797      5000
 10798              	.LASF246:
 10799 028e 636D645F 		.ascii	"cmd_get_ADC_map\000"
 10799      6765745F 
 10799      4144435F 
 10799      6D617000 
 10800              	.LASF72:
 10801 029e 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 10801      4745545F 
 10801      43555252 
 10801      454E5453 
 10801      00
 10802              	.LASF195:
 10803 02af 70726570 		.ascii	"prepare_SD_EMG_history\000"
 10803      6172655F 
 10803      53445F45 
 10803      4D475F68 
 10803      6973746F 
 10804              	.LASF247:
 10805 02c6 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 10805      6765745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 240


 10805      4144435F 
 10805      72617700 
 10806              	.LASF276:
 10807 02d6 73645061 		.ascii	"sdParam\000"
 10807      72616D00 
 10808              	.LASF35:
 10809 02de 43555354 		.ascii	"CUSTOM_POS_PID_2\000"
 10809      4F4D5F50 
 10809      4F535F50 
 10809      49445F32 
 10809      00
 10810              	.LASF256:
 10811 02ef 70726573 		.ascii	"pressure_value\000"
 10811      73757265 
 10811      5F76616C 
 10811      756500
 10812              	.LASF238:
 10813 02fe 636D645F 		.ascii	"cmd_ping\000"
 10813      70696E67 
 10813      00
 10814              	.LASF26:
 10815 0307 43555354 		.ascii	"CUSTOM_INPUT\000"
 10815      4F4D5F49 
 10815      4E505554 
 10815      00
 10816              	.LASF186:
 10817 0314 7365745F 		.ascii	"set_custom_param\000"
 10817      63757374 
 10817      6F6D5F70 
 10817      6172616D 
 10817      00
 10818              	.LASF251:
 10819 0325 636D645F 		.ascii	"cmd_remove_SD_file\000"
 10819      72656D6F 
 10819      76655F53 
 10819      445F6669 
 10819      6C6500
 10820              	.LASF40:
 10821 0338 43555354 		.ascii	"CUSTOM_DRIVER_2\000"
 10821      4F4D5F44 
 10821      52495645 
 10821      525F3200 
 10822              	.LASF0:
 10823 0348 7369676E 		.ascii	"signed char\000"
 10823      65642063 
 10823      68617200 
 10824              	.LASF131:
 10825 0354 6D617374 		.ascii	"master_mode_active\000"
 10825      65725F6D 
 10825      6F64655F 
 10825      61637469 
 10825      766500
 10826              	.LASF208:
 10827 0367 6D656D53 		.ascii	"memStore\000"
 10827      746F7265 
 10827      00
 10828              	.LASF250:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 241


 10829 0370 66696C65 		.ascii	"filename\000"
 10829      6E616D65 
 10829      00
 10830              	.LASF129:
 10831 0379 73776974 		.ascii	"switch_emg\000"
 10831      63685F65 
 10831      6D6700
 10832              	.LASF233:
 10833 0384 72656164 		.ascii	"read_flag\000"
 10833      5F666C61 
 10833      6700
 10834              	.LASF273:
 10835 038e 696E7465 		.ascii	"interrupt_flag\000"
 10835      72727570 
 10835      745F666C 
 10835      616700
 10836              	.LASF45:
 10837 039d 4D454E55 		.ascii	"MENU_CTRL\000"
 10837      5F435452 
 10837      4C00
 10838              	.LASF1:
 10839 03a7 756E7369 		.ascii	"unsigned char\000"
 10839      676E6564 
 10839      20636861 
 10839      7200
 10840              	.LASF79:
 10841 03b5 434D445F 		.ascii	"CMD_SET_VIBROTACTILE_INPUTS\000"
 10841      5345545F 
 10841      56494252 
 10841      4F544143 
 10841      54494C45 
 10842              	.LASF80:
 10843 03d1 434D445F 		.ascii	"CMD_GET_VIBROTACTILE_INPUTS\000"
 10843      4745545F 
 10843      56494252 
 10843      4F544143 
 10843      54494C45 
 10844              	.LASF67:
 10845 03ed 434D445F 		.ascii	"CMD_ACTIVATE\000"
 10845      41435449 
 10845      56415445 
 10845      00
 10846              	.LASF60:
 10847 03fa 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 10847      53544F52 
 10847      455F4445 
 10847      4641554C 
 10847      545F5041 
 10848              	.LASF31:
 10849 0413 43555354 		.ascii	"CUSTOM_HAND_SIDE\000"
 10849      4F4D5F48 
 10849      414E445F 
 10849      53494445 
 10849      00
 10850              	.LASF207:
 10851 0424 76616C75 		.ascii	"value\000"
 10851      6500
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 242


 10852              	.LASF155:
 10853 042a 70726573 		.ascii	"pressure\000"
 10853      73757265 
 10853      00
 10854              	.LASF68:
 10855 0433 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 10855      4745545F 
 10855      41435449 
 10855      56415445 
 10855      00
 10856              	.LASF20:
 10857 0444 63686172 		.ascii	"char\000"
 10857      00
 10858              	.LASF257:
 10859 0449 76616C76 		.ascii	"valve_command\000"
 10859      655F636F 
 10859      6D6D616E 
 10859      6400
 10860              	.LASF254:
 10861 0457 70726573 		.ascii	"pressure_reference\000"
 10861      73757265 
 10861      5F726566 
 10861      6572656E 
 10861      636500
 10862              	.LASF212:
 10863 046a 7265745F 		.ascii	"ret_val\000"
 10863      76616C00 
 10864              	.LASF50:
 10865 0472 4D454E55 		.ascii	"MENU_SPI\000"
 10865      5F535049 
 10865      00
 10866              	.LASF146:
 10867 047b 70617261 		.ascii	"parameter\000"
 10867      6D657465 
 10867      7200
 10868              	.LASF159:
 10869 0485 7061636B 		.ascii	"packet_string\000"
 10869      65745F73 
 10869      7472696E 
 10869      6700
 10870              	.LASF33:
 10871 0493 43555354 		.ascii	"CUSTOM_LAST_CHECKED_t\000"
 10871      4F4D5F4C 
 10871      4153545F 
 10871      43484543 
 10871      4B45445F 
 10872              	.LASF204:
 10873 04a9 64617461 		.ascii	"data_length\000"
 10873      5F6C656E 
 10873      67746800 
 10874              	.LASF123:
 10875 04b5 706F735F 		.ascii	"pos_lim_sup\000"
 10875      6C696D5F 
 10875      73757000 
 10876              	.LASF219:
 10877 04c1 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 10877      6E69745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 243


 10877      4F74626B 
 10877      41637457 
 10877      72697374 
 10878              	.LASF128:
 10879 04d8 656D675F 		.ascii	"emg_speed\000"
 10879      73706565 
 10879      6400
 10880              	.LASF178:
 10881 04e2 7061636B 		.ascii	"packet_data\000"
 10881      65745F64 
 10881      61746100 
 10882              	.LASF118:
 10883 04ee 73745F64 		.ascii	"st_device\000"
 10883      65766963 
 10883      6500
 10884              	.LASF199:
 10885 04f8 636F6D6D 		.ascii	"commWrite\000"
 10885      57726974 
 10885      6500
 10886              	.LASF264:
 10887 0502 64656163 		.ascii	"deactivate_slaves\000"
 10887      74697661 
 10887      74655F73 
 10887      6C617665 
 10887      7300
 10888              	.LASF211:
 10889 0514 70616765 		.ascii	"pages\000"
 10889      7300
 10890              	.LASF291:
 10891 051a 6D656D49 		.ascii	"memInit\000"
 10891      6E697400 
 10892              	.LASF43:
 10893 0522 6D656E75 		.ascii	"menu_type\000"
 10893      5F747970 
 10893      6500
 10894              	.LASF53:
 10895 052c 4D454E55 		.ascii	"MENU_DEVICE\000"
 10895      5F444556 
 10895      49434500 
 10896              	.LASF69:
 10897 0538 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 10897      5345545F 
 10897      494E5055 
 10897      545300
 10898              	.LASF279:
 10899 0547 53485F72 		.ascii	"SH_ref\000"
 10899      656600
 10900              	.LASF114:
 10901 054e 62756666 		.ascii	"buffer\000"
 10901      657200
 10902              	.LASF235:
 10903 0555 63757272 		.ascii	"curr_diff\000"
 10903      5F646966 
 10903      6600
 10904              	.LASF220:
 10905 055f 636D645F 		.ascii	"cmd_get_measurements\000"
 10905      6765745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 244


 10905      6D656173 
 10905      7572656D 
 10905      656E7473 
 10906              	.LASF158:
 10907 0574 72785F63 		.ascii	"rx_cmd\000"
 10907      6D6400
 10908              	.LASF112:
 10909 057b 54595045 		.ascii	"TYPE_DOUBLE\000"
 10909      5F444F55 
 10909      424C4500 
 10910              	.LASF261:
 10911 0587 736C6176 		.ascii	"slave_motor_idx\000"
 10911      655F6D6F 
 10911      746F725F 
 10911      69647800 
 10912              	.LASF239:
 10913 0597 636D645F 		.ascii	"cmd_get_inputs\000"
 10913      6765745F 
 10913      696E7075 
 10913      747300
 10914              	.LASF101:
 10915 05a6 41434B5F 		.ascii	"ACK_ERROR\000"
 10915      4552524F 
 10915      5200
 10916              	.LASF92:
 10917 05b0 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 10917      545F4D4F 
 10917      44455F45 
 10917      58544552 
 10917      4E414C00 
 10918              	.LASF180:
 10919 05c4 696E6465 		.ascii	"index\000"
 10919      7800
 10920              	.LASF135:
 10921 05ca 6D617869 		.ascii	"maximum_pressure_kPa\000"
 10921      6D756D5F 
 10921      70726573 
 10921      73757265 
 10921      5F6B5061 
 10922              	.LASF42:
 10923 05df 63757374 		.ascii	"custom_param\000"
 10923      6F6D5F70 
 10923      6172616D 
 10923      00
 10924              	.LASF249:
 10925 05ec 66696C65 		.ascii	"filename_length\000"
 10925      6E616D65 
 10925      5F6C656E 
 10925      67746800 
 10926              	.LASF234:
 10927 05fc 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 10927      52656164 
 10927      52657343 
 10927      75727246 
 10927      726F6D53 
 10928              	.LASF55:
 10929 0612 4D454E55 		.ascii	"MENU_WRIST\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 245


 10929      5F575249 
 10929      535400
 10930              	.LASF288:
 10931 061d 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\Git\\PSoC5\\PSoC5_FW"
 10931      73657273 
 10931      5C6D676E 
 10931      6F63636F 
 10931      5C446F63 
 10932 064a 5F574953 		.ascii	"_WISH_VIBES\\FW_WearableHealtySubj - WISH+Dayton\\W"
 10932      485F5649 
 10932      4245535C 
 10932      46575F57 
 10932      65617261 
 10933 067b 4953485F 		.ascii	"ISH_VIBES_Socket.cydsn\000"
 10933      56494245 
 10933      535F536F 
 10933      636B6574 
 10933      2E637964 
 10934              	.LASF274:
 10935 0692 72657365 		.ascii	"reset_PSoC_flag\000"
 10935      745F5053 
 10935      6F435F66 
 10935      6C616700 
 10936              	.LASF260:
 10937 06a2 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 10937      5F616374 
 10937      5F777269 
 10937      73745F63 
 10937      6F6E7472 
 10938              	.LASF113:
 10939 06b9 54595045 		.ascii	"TYPE_STRING\000"
 10939      5F535452 
 10939      494E4700 
 10940              	.LASF59:
 10941 06c5 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 10941      53544F52 
 10941      455F5041 
 10941      52414D53 
 10941      00
 10942              	.LASF7:
 10943 06d6 6C6F6E67 		.ascii	"long unsigned int\000"
 10943      20756E73 
 10943      69676E65 
 10943      6420696E 
 10943      7400
 10944              	.LASF63:
 10945 06e8 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 10945      424F4F54 
 10945      4C4F4144 
 10945      455200
 10946              	.LASF201:
 10947 06f7 6E756D5F 		.ascii	"num_of_bytes\000"
 10947      6F665F62 
 10947      79746573 
 10947      00
 10948              	.LASF98:
 10949 0704 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 246


 10949      545F4D4F 
 10949      44455F4A 
 10949      4F595354 
 10949      49434B00 
 10950              	.LASF209:
 10951 0718 64697370 		.ascii	"displacement\000"
 10951      6C616365 
 10951      6D656E74 
 10951      00
 10952              	.LASF230:
 10953 0725 636D645F 		.ascii	"cmd_get_vibrotactile_inputs\000"
 10953      6765745F 
 10953      76696272 
 10953      6F746163 
 10953      74696C65 
 10954              	.LASF163:
 10955 0741 7374725F 		.ascii	"str_sd_data\000"
 10955      73645F64 
 10955      61746100 
 10956              	.LASF132:
 10957 074d 736C6176 		.ascii	"slave_ID\000"
 10957      655F4944 
 10957      00
 10958              	.LASF102:
 10959 0756 41434B5F 		.ascii	"ACK_OK\000"
 10959      4F4B00
 10960              	.LASF104:
 10961 075d 54595045 		.ascii	"TYPE_FLAG\000"
 10961      5F464C41 
 10961      4700
 10962              	.LASF177:
 10963 0767 7061636B 		.ascii	"packet_length\000"
 10963      65745F6C 
 10963      656E6774 
 10963      6800
 10964              	.LASF29:
 10965 0775 43555354 		.ascii	"CUSTOM_REST_POS\000"
 10965      4F4D5F52 
 10965      4553545F 
 10965      504F5300 
 10966              	.LASF124:
 10967 0785 696E7075 		.ascii	"input_mode\000"
 10967      745F6D6F 
 10967      646500
 10968              	.LASF74:
 10969 0790 434D445F 		.ascii	"CMD_GET_EMG\000"
 10969      4745545F 
 10969      454D4700 
 10970              	.LASF215:
 10971 079c 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 10971      6E69745F 
 10971      536F6674 
 10971      48616E64 
 10971      50726F00 
 10972              	.LASF62:
 10973 07b0 434D445F 		.ascii	"CMD_GET_INFO\000"
 10973      4745545F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 247


 10973      494E464F 
 10973      00
 10974              	.LASF187:
 10975 07bd 6765745F 		.ascii	"get_IMU_param_list\000"
 10975      494D555F 
 10975      70617261 
 10975      6D5F6C69 
 10975      737400
 10976              	.LASF151:
 10977 07d0 4D454E55 		.ascii	"MENU\000"
 10977      00
 10978              	.LASF52:
 10979 07d5 4D454E55 		.ascii	"MENU_DRIVER\000"
 10979      5F445249 
 10979      56455200 
 10980              	.LASF137:
 10981 07e1 76696272 		.ascii	"vibrotactile_feedback_active\000"
 10981      6F746163 
 10981      74696C65 
 10981      5F666565 
 10981      64626163 
 10982              	.LASF73:
 10983 07fe 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 10983      4745545F 
 10983      43555252 
 10983      5F414E44 
 10983      5F4D4541 
 10984              	.LASF286:
 10985 0814 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 10985      43313120 
 10985      352E342E 
 10985      31203230 
 10985      31363036 
 10986 0847 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 10986      20726576 
 10986      6973696F 
 10986      6E203233 
 10986      37373135 
 10987 087a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 10987      66756E63 
 10987      74696F6E 
 10987      2D736563 
 10987      74696F6E 
 10988              	.LASF223:
 10989 08a2 636D645F 		.ascii	"cmd_get_joystick\000"
 10989      6765745F 
 10989      6A6F7973 
 10989      7469636B 
 10989      00
 10990              	.LASF78:
 10991 08b3 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 10991      5345545F 
 10991      43554646 
 10991      5F494E50 
 10991      55545300 
 10992              	.LASF6:
 10993 08c7 5F5F7569 		.ascii	"__uint32_t\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 248


 10993      6E743332 
 10993      5F7400
 10994              	.LASF8:
 10995 08d2 6C6F6E67 		.ascii	"long long int\000"
 10995      206C6F6E 
 10995      6720696E 
 10995      7400
 10996              	.LASF121:
 10997 08e0 73745F73 		.ascii	"st_slave\000"
 10997      6C617665 
 10997      00
 10998              	.LASF252:
 10999 08e9 76696272 		.ascii	"vibrotactile_control\000"
 10999      6F746163 
 10999      74696C65 
 10999      5F636F6E 
 10999      74726F6C 
 11000              	.LASF106:
 11001 08fe 54595045 		.ascii	"TYPE_UINT8\000"
 11001      5F55494E 
 11001      543800
 11002              	.LASF141:
 11003 0909 53485F63 		.ascii	"SH_config\000"
 11003      6F6E6669 
 11003      6700
 11004              	.LASF228:
 11005 0913 636D645F 		.ascii	"cmd_get_currents\000"
 11005      6765745F 
 11005      63757272 
 11005      656E7473 
 11005      00
 11006              	.LASF19:
 11007 0924 646F7562 		.ascii	"double\000"
 11007      6C6500
 11008              	.LASF89:
 11009 092b 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 11009      4745545F 
 11009      53445F53 
 11009      494E474C 
 11009      455F4649 
 11010              	.LASF265:
 11011 0942 49544D5F 		.ascii	"ITM_RxBuffer\000"
 11011      52784275 
 11011      66666572 
 11011      00
 11012              	.LASF18:
 11013 094f 666C6F61 		.ascii	"float\000"
 11013      7400
 11014              	.LASF90:
 11015 0955 434D445F 		.ascii	"CMD_REMOVE_SD_SINGLE_FILE\000"
 11015      52454D4F 
 11015      56455F53 
 11015      445F5349 
 11015      4E474C45 
 11016              	.LASF255:
 11017 096f 6572725F 		.ascii	"err_pressure\000"
 11017      70726573 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 249


 11017      73757265 
 11017      00
 11018              	.LASF175:
 11019 097c 636F756E 		.ascii	"count\000"
 11019      7400
 11020              	.LASF154:
 11021 0982 73745F61 		.ascii	"st_adc_meas\000"
 11021      64635F6D 
 11021      65617300 
 11022              	.LASF170:
 11023 098e 6D5F6164 		.ascii	"m_addr\000"
 11023      647200
 11024              	.LASF270:
 11025 0995 635F6D65 		.ascii	"c_mem\000"
 11025      6D00
 11026              	.LASF203:
 11027 099b 64617461 		.ascii	"data_array\000"
 11027      5F617272 
 11027      617900
 11028              	.LASF10:
 11029 09a6 756E7369 		.ascii	"unsigned int\000"
 11029      676E6564 
 11029      20696E74 
 11029      00
 11030              	.LASF216:
 11031 09b3 6D656D49 		.ascii	"memInit_Master\000"
 11031      6E69745F 
 11031      4D617374 
 11031      657200
 11032              	.LASF193:
 11033 09c2 70726570 		.ascii	"prepare_SD_legend\000"
 11033      6172655F 
 11033      53445F6C 
 11033      6567656E 
 11033      6400
 11034              	.LASF56:
 11035 09d4 53485F63 		.ascii	"SH_command\000"
 11035      6F6D6D61 
 11035      6E6400
 11036              	.LASF108:
 11037 09df 54595045 		.ascii	"TYPE_UINT16\000"
 11037      5F55494E 
 11037      54313600 
 11038              	.LASF140:
 11039 09eb 666C6167 		.ascii	"flag\000"
 11039      00
 11040              	.LASF37:
 11041 09f0 43555354 		.ascii	"CUSTOM_INPUT_2\000"
 11041      4F4D5F49 
 11041      4E505554 
 11041      5F3200
 11042              	.LASF258:
 11043 09ff 785F7661 		.ascii	"x_value\000"
 11043      6C756500 
 11044              	.LASF224:
 11045 0a07 636D645F 		.ascii	"cmd_set_inputs\000"
 11045      7365745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 250


 11045      696E7075 
 11045      747300
 11046              	.LASF47:
 11047 0a16 4D454E55 		.ascii	"MENU_R_L\000"
 11047      5F525F4C 
 11047      00
 11048              	.LASF168:
 11049 0a1f 4D454E55 		.ascii	"MENU_LIST\000"
 11049      5F4C4953 
 11049      5400
 11050              	.LASF93:
 11051 0a29 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 11051      545F4D4F 
 11051      44455F45 
 11051      4E434F44 
 11051      45523300 
 11052              	.LASF200:
 11053 0a3d 636F6D6D 		.ascii	"commWriteID\000"
 11053      57726974 
 11053      65494400 
 11054              	.LASF85:
 11055 0a49 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 11055      4745545F 
 11055      454E434F 
 11055      4445525F 
 11055      434F4E46 
 11056              	.LASF152:
 11057 0a5e 4E554D5F 		.ascii	"NUM_STR\000"
 11057      53545200 
 11058              	.LASF226:
 11059 0a66 636D645F 		.ascii	"cmd_get_activate\000"
 11059      6765745F 
 11059      61637469 
 11059      76617465 
 11059      00
 11060              	.LASF259:
 11061 0a77 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 11061      61637469 
 11061      76617469 
 11061      6F6E5F76 
 11061      656C6F63 
 11062              	.LASF111:
 11063 0a93 54595045 		.ascii	"TYPE_FLOAT\000"
 11063      5F464C4F 
 11063      415400
 11064              	.LASF39:
 11065 0a9e 43555354 		.ascii	"CUSTOM_POS_LIM_2\000"
 11065      4F4D5F50 
 11065      4F535F4C 
 11065      494D5F32 
 11065      00
 11066              	.LASF191:
 11067 0aaf 70726570 		.ascii	"prepare_R01_info\000"
 11067      6172655F 
 11067      5230315F 
 11067      696E666F 
 11067      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 251


 11068              	.LASF107:
 11069 0ac0 54595045 		.ascii	"TYPE_INT16\000"
 11069      5F494E54 
 11069      313600
 11070              	.LASF126:
 11071 0acb 656D675F 		.ascii	"emg_threshold\000"
 11071      74687265 
 11071      73686F6C 
 11071      6400
 11072              	.LASF77:
 11073 0ad9 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 11073      4745545F 
 11073      43555252 
 11073      5F444946 
 11073      4600
 11074              	.LASF41:
 11075 0aeb 43555354 		.ascii	"CUSTOM_DEV_TYPE\000"
 11075      4F4D5F44 
 11075      45565F54 
 11075      59504500 
 11076              	.LASF218:
 11077 0afb 6D656D49 		.ascii	"memInit_AirChambers_Vibrotactile_Fb\000"
 11077      6E69745F 
 11077      41697243 
 11077      68616D62 
 11077      6572735F 
 11078              	.LASF22:
 11079 0b1f 6C6F6E67 		.ascii	"long double\000"
 11079      20646F75 
 11079      626C6500 
 11080              	.LASF110:
 11081 0b2b 54595045 		.ascii	"TYPE_UINT32\000"
 11081      5F55494E 
 11081      54333200 
 11082              	.LASF133:
 11083 0b37 73745F46 		.ascii	"st_FB_spec\000"
 11083      425F7370 
 11083      656300
 11084              	.LASF205:
 11085 0b42 63686563 		.ascii	"checksum\000"
 11085      6B73756D 
 11085      00
 11086              	.LASF66:
 11087 0b4b 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 11087      48414E44 
 11087      5F43414C 
 11087      49425241 
 11087      544500
 11088              	.LASF280:
 11089 0b5e 56545F72 		.ascii	"VT_ref\000"
 11089      656600
 11090              	.LASF262:
 11091 0b65 64726976 		.ascii	"drive_slave\000"
 11091      655F736C 
 11091      61766500 
 11092              	.LASF100:
 11093 0b71 61636B6E 		.ascii	"acknowledgment_values\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 252


 11093      6F776C65 
 11093      64676D65 
 11093      6E745F76 
 11093      616C7565 
 11094              	.LASF214:
 11095 0b87 6D656D52 		.ascii	"memRestore\000"
 11095      6573746F 
 11095      726500
 11096              	.LASF189:
 11097 0b92 696E666F 		.ascii	"info_string\000"
 11097      5F737472 
 11097      696E6700 
 11098              	.LASF165:
 11099 0b9e 6E756D5F 		.ascii	"num_params\000"
 11099      70617261 
 11099      6D7300
 11100              	.LASF9:
 11101 0ba9 6C6F6E67 		.ascii	"long long unsigned int\000"
 11101      206C6F6E 
 11101      6720756E 
 11101      7369676E 
 11101      65642069 
 11102              	.LASF153:
 11103 0bc0 63757374 		.ascii	"custom\000"
 11103      6F6D00
 11104              	.LASF51:
 11105 0bc7 4D454E55 		.ascii	"MENU_USER\000"
 11105      5F555345 
 11105      5200
 11106              	.LASF109:
 11107 0bd1 54595045 		.ascii	"TYPE_INT32\000"
 11107      5F494E54 
 11107      333200
 11108              	.LASF115:
 11109 0bdc 6C656E67 		.ascii	"length\000"
 11109      746800
 11110              	.LASF169:
 11111 0be3 73656E64 		.ascii	"sendToDevice\000"
 11111      546F4465 
 11111      76696365 
 11111      00
 11112              	.LASF76:
 11113 0bf0 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 11113      4745545F 
 11113      41434345 
 11113      4C00
 11114              	.LASF221:
 11115 0bfe 636D645F 		.ascii	"cmd_get_velocities\000"
 11115      6765745F 
 11115      76656C6F 
 11115      63697469 
 11115      657300
 11116              	.LASF213:
 11117 0c11 6D656D52 		.ascii	"memRecall\000"
 11117      6563616C 
 11117      6C00
 11118              	.LASF240:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 253


 11119 0c1b 636D645F 		.ascii	"cmd_store_params\000"
 11119      73746F72 
 11119      655F7061 
 11119      72616D73 
 11119      00
 11120              	.LASF176:
 11121 0c2c 6175785F 		.ascii	"aux_char\000"
 11121      63686172 
 11121      00
 11122              	.LASF81:
 11123 0c35 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 11123      5345545F 
 11123      42415544 
 11123      52415445 
 11123      00
 11124              	.LASF21:
 11125 0c46 72656738 		.ascii	"reg8\000"
 11125      00
 11126              	.LASF136:
 11127 0c4b 70726F70 		.ascii	"prop_err_fb_gain\000"
 11127      5F657272 
 11127      5F66625F 
 11127      6761696E 
 11127      00
 11128              	.LASF197:
 11129 0c5c 636F6D6D 		.ascii	"commWrite_old_id\000"
 11129      57726974 
 11129      655F6F6C 
 11129      645F6964 
 11129      00
 11130              	.LASF179:
 11131 0c6d 6D616E61 		.ascii	"manage_param_list\000"
 11131      67655F70 
 11131      6172616D 
 11131      5F6C6973 
 11131      7400
 11132              	.LASF61:
 11133 0c7f 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 11133      52455354 
 11133      4F52455F 
 11133      50415241 
 11133      4D5300
 11134              	.LASF49:
 11135 0c92 4D454E55 		.ascii	"MENU_EXP\000"
 11135      5F455850 
 11135      00
 11136              	.LASF275:
 11137 0c9b 73644669 		.ascii	"sdFile\000"
 11137      6C6500
 11138              	.LASF166:
 11139 0ca2 6E756D5F 		.ascii	"num_menus\000"
 11139      6D656E75 
 11139      7300
 11140              	.LASF192:
 11141 0cac 70726570 		.ascii	"prepare_SD_param_info\000"
 11141      6172655F 
 11141      53445F70 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 254


 11141      6172616D 
 11141      5F696E66 
 11142              	.LASF190:
 11143 0cc2 70726570 		.ascii	"prepare_counter_info\000"
 11143      6172655F 
 11143      636F756E 
 11143      7465725F 
 11143      696E666F 
 11144              	.LASF194:
 11145 0cd7 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 11145      6172655F 
 11145      53445F45 
 11145      4D475F48 
 11145      6973746F 
 11146              	.LASF198:
 11147 0cf5 6F6C645F 		.ascii	"old_id\000"
 11147      696400
 11148              	.LASF289:
 11149 0cfc 5F5F5245 		.ascii	"__REV16\000"
 11149      56313600 
 11150              	.LASF147:
 11151 0d04 5641525F 		.ascii	"VAR_P\000"
 11151      5000
 11152              	.LASF227:
 11153 0d0a 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 11153      6765745F 
 11153      63757272 
 11153      5F616E64 
 11153      5F6D6561 
 11154              	.LASF162:
 11155 0d20 696E666F 		.ascii	"info_type\000"
 11155      5F747970 
 11155      6500
 11156              	.LASF54:
 11157 0d2a 4D454E55 		.ascii	"MENU_FSM\000"
 11157      5F46534D 
 11157      00
 11158              	.LASF88:
 11159 0d33 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 11159      4745545F 
 11159      4144435F 
 11159      52415700 
 11160              	.LASF99:
 11161 0d43 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 11161      545F4D4F 
 11161      44455F45 
 11161      4D475F50 
 11161      524F504F 
 11162              	.LASF84:
 11163 0d62 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 11163      4745545F 
 11163      494D555F 
 11163      50415241 
 11163      4D00
 11164              	.LASF272:
 11165 0d74 74696D65 		.ascii	"timer_value0\000"
 11165      725F7661 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 255


 11165      6C756530 
 11165      00
 11166              	.LASF86:
 11167 0d81 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 11167      4745545F 
 11167      454E434F 
 11167      4445525F 
 11167      52415700 
 11168              	.LASF144:
 11169 0d95 72657365 		.ascii	"reset\000"
 11169      7400
 11170              	.LASF143:
 11171 0d9b 6E616D65 		.ascii	"name\000"
 11171      00
 11172              	.LASF71:
 11173 0da0 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 11173      4745545F 
 11173      4D454153 
 11173      5552454D 
 11173      454E5453 
 11174              	.LASF138:
 11175 0db5 61697263 		.ascii	"airchamber_feedback_active\000"
 11175      68616D62 
 11175      65725F66 
 11175      65656462 
 11175      61636B5F 
 11176              	.LASF267:
 11177 0dd0 675F6164 		.ascii	"g_adc_measOld\000"
 11177      635F6D65 
 11177      61734F6C 
 11177      6400
 11178              	.LASF245:
 11179 0dde 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 11179      6765745F 
 11179      656E636F 
 11179      6465725F 
 11179      72617700 
 11180              	.LASF13:
 11181 0df2 75696E74 		.ascii	"uint8\000"
 11181      3800
 11182              	.LASF156:
 11183 0df8 636F6D6D 		.ascii	"commProcess\000"
 11183      50726F63 
 11183      65737300 
 11184              	.LASF2:
 11185 0e04 73686F72 		.ascii	"short int\000"
 11185      7420696E 
 11185      7400
 11186              	.LASF30:
 11187 0e0e 43555354 		.ascii	"CUSTOM_REST_POS_DELAY\000"
 11187      4F4D5F52 
 11187      4553545F 
 11187      504F535F 
 11187      44454C41 
 11188              	.LASF70:
 11189 0e24 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 11189      4745545F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 256


 11189      494E5055 
 11189      545300
 11190              	.LASF87:
 11191 0e33 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 11191      4745545F 
 11191      4144435F 
 11191      434F4E46 
 11191      00
 11192              	.LASF58:
 11193 0e44 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 11193      5345545F 
 11193      5A45524F 
 11193      5300
 11194              	.LASF242:
 11195 0e52 6175785F 		.ascii	"aux_int16\000"
 11195      696E7431 
 11195      3600
 11196              	.LASF285:
 11197 0e5c 45455052 		.ascii	"EEPROM_ADDR\000"
 11197      4F4D5F41 
 11197      44445200 
 11198              	.LASF25:
 11199 0e68 43555354 		.ascii	"CUSTOM_CURR_PID\000"
 11199      4F4D5F43 
 11199      5552525F 
 11199      50494400 
 11200              	.LASF185:
 11201 0e78 4E554D5F 		.ascii	"NUM_PARAMs\000"
 11201      50415241 
 11201      4D7300
 11202              	.LASF75:
 11203 0e83 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 11203      4745545F 
 11203      56454C4F 
 11203      43495449 
 11203      455300
 11204              	.LASF65:
 11205 0e96 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 11205      4745545F 
 11205      50415241 
 11205      4D5F4C49 
 11205      535400
 11206              	.LASF103:
 11207 0ea9 64617461 		.ascii	"data_types\000"
 11207      5F747970 
 11207      657300
 11208              	.LASF16:
 11209 0eb4 696E7431 		.ascii	"int16\000"
 11209      3600
 11210              	.LASF48:
 11211 0eba 4D454E55 		.ascii	"MENU_ON_OFF\000"
 11211      5F4F4E5F 
 11211      4F464600 
 11212              	.LASF34:
 11213 0ec6 43555354 		.ascii	"CUSTOM_DRIVER\000"
 11213      4F4D5F44 
 11213      52495645 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 257


 11213      5200
 11214              	.LASF27:
 11215 0ed4 43555354 		.ascii	"CUSTOM_MEAS_OFF\000"
 11215      4F4D5F4D 
 11215      4541535F 
 11215      4F464600 
 11216              	.LASF244:
 11217 0ee4 636D645F 		.ascii	"cmd_get_encoder_map\000"
 11217      6765745F 
 11217      656E636F 
 11217      6465725F 
 11217      6D617000 
 11218              	.LASF12:
 11219 0ef8 75696E74 		.ascii	"uint32_t\000"
 11219      33325F74 
 11219      00
 11220              	.LASF167:
 11221 0f01 50415241 		.ascii	"PARAM_LIST\000"
 11221      4D5F4C49 
 11221      535400
 11222              	.LASF206:
 11223 0f0c 73656E64 		.ascii	"sendAcknowledgment\000"
 11223      41636B6E 
 11223      6F776C65 
 11223      64676D65 
 11223      6E7400
 11224              	.LASF174:
 11225 0f1f 6175785F 		.ascii	"aux_int32\000"
 11225      696E7433 
 11225      3200
 11226              	.LASF119:
 11227 0f29 62617564 		.ascii	"baud_rate\000"
 11227      5F726174 
 11227      6500
 11228              	.LASF232:
 11229 0f33 745F656E 		.ascii	"t_end\000"
 11229      6400
 11230              	.LASF229:
 11231 0f39 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 11231      6765745F 
 11231      63757272 
 11231      656E7473 
 11231      5F666F72 
 11232              	.LASF83:
 11233 0f53 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 11233      4745545F 
 11233      494D555F 
 11233      52454144 
 11233      494E4753 
 11234              	.LASF184:
 11235 0f68 70617261 		.ascii	"param_type\000"
 11235      6D5F7479 
 11235      706500
 11236              	.LASF277:
 11237 0f73 73645230 		.ascii	"sdR01File\000"
 11237      3146696C 
 11237      6500
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 258


 11238              	.LASF202:
 11239 0f7d 4C435243 		.ascii	"LCRChecksum\000"
 11239      6865636B 
 11239      73756D00 
 11240              	.LASF3:
 11241 0f89 73686F72 		.ascii	"short unsigned int\000"
 11241      7420756E 
 11241      7369676E 
 11241      65642069 
 11241      6E7400
 11242              	.LASF269:
 11243 0f9c 675F6D65 		.ascii	"g_mem\000"
 11243      6D00
 11244              	.LASF266:
 11245 0fa2 675F6164 		.ascii	"g_adc_meas\000"
 11245      635F6D65 
 11245      617300
 11246              	.LASF134:
 11247 0fad 6D61785F 		.ascii	"max_residual_current\000"
 11247      72657369 
 11247      6475616C 
 11247      5F637572 
 11247      72656E74 
 11248              	.LASF139:
 11249 0fc2 73745F65 		.ascii	"st_eeprom\000"
 11249      6570726F 
 11249      6D00
 11250              	.LASF148:
 11251 0fcc 54595045 		.ascii	"TYPES\000"
 11251      5300
 11252              	.LASF17:
 11253 0fd2 696E7433 		.ascii	"int32\000"
 11253      3200
 11254              	.LASF160:
 11255 0fd8 696E666F 		.ascii	"infoGet\000"
 11255      47657400 
 11256              	.LASF278:
 11257 0fe0 6D617374 		.ascii	"master_mode\000"
 11257      65725F6D 
 11257      6F646500 
 11258              	.LASF5:
 11259 0fec 5F5F696E 		.ascii	"__int32_t\000"
 11259      7433325F 
 11259      7400
 11260              	.LASF127:
 11261 0ff6 656D675F 		.ascii	"emg_max_value\000"
 11261      6D61785F 
 11261      76616C75 
 11261      6500
 11262              	.LASF237:
 11263 1004 636F6D6D 		.ascii	"commReadIMUFromSH\000"
 11263      52656164 
 11263      494D5546 
 11263      726F6D53 
 11263      4800
 11264              	.LASF287:
 11265 1016 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccgoWdbd.s 			page 259


 11265      72635C63 
 11265      6F6D6D61 
 11265      6E645F70 
 11265      726F6365 
 11266              	.LASF91:
 11267 1032 53485F69 		.ascii	"SH_input_mode\000"
 11267      6E707574 
 11267      5F6D6F64 
 11267      6500
 11268              	.LASF24:
 11269 1040 43555354 		.ascii	"CUSTOM_POS_PID\000"
 11269      4F4D5F50 
 11269      4F535F50 
 11269      494400
 11270              	.LASF105:
 11271 104f 54595045 		.ascii	"TYPE_INT8\000"
 11271      5F494E54 
 11271      3800
 11272              	.LASF196:
 11273 1059 494D555F 		.ascii	"IMU_reading_info\000"
 11273      72656164 
 11273      696E675F 
 11273      696E666F 
 11273      00
 11274              	.LASF14:
 11275 106a 75696E74 		.ascii	"uint16\000"
 11275      313600
 11276              	.LASF281:
 11277 1071 50756D70 		.ascii	"Pump_ref\000"
 11277      5F726566 
 11277      00
 11278              	.LASF172:
 11279 107a 6175785F 		.ascii	"aux_str\000"
 11279      73747200 
 11280              	.LASF57:
 11281 1082 434D445F 		.ascii	"CMD_PING\000"
 11281      50494E47 
 11281      00
 11282              	.LASF225:
 11283 108b 636D645F 		.ascii	"cmd_activate\000"
 11283      61637469 
 11283      76617465 
 11283      00
 11284              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
