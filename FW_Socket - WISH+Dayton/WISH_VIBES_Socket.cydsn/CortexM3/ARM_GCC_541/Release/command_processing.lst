ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8CB0     		sub	sp, sp, #48
  44              		.cfi_def_cfa_offset 56
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 0E4B     		ldr	r3, .L54
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e 0C4B     		ldr	r3, .L54
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c 0848     		ldr	r0, .L54
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 064B     		ldr	r3, .L54
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e 044A     		ldr	r2, .L54
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 06D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 024B     		ldr	r3, .L54
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 06E3     		b	.L1
  75              	.L55:
  76              		.align	2
  77              	.L54:
  78 0040 00000000 		.word	g_rx
  79              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  80              		.loc 1 74 0
  81 0044 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  82 0048 FA2B     		cmp	r3, #250
  83 004a 00F2FF82 		bhi	.L53
  84 004e 01A2     		adr	r2, .L6
  85 0050 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  86              		.p2align 2
  87              	.L6:
  88 0054 CB040000 		.word	.L5+1
  89 0058 AD040000 		.word	.L7+1
  90 005c 4D060000 		.word	.L53+1
  91 0060 D1040000 		.word	.L8+1
  92 0064 D7040000 		.word	.L9+1
  93 0068 F3040000 		.word	.L10+1
  94 006c 95040000 		.word	.L11+1
  95 0070 4D060000 		.word	.L53+1
  96 0074 4D060000 		.word	.L53+1
  97 0078 27050000 		.word	.L12+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 4


  98 007c 0D050000 		.word	.L13+1
  99 0080 4D060000 		.word	.L53+1
 100 0084 B3040000 		.word	.L14+1
 101 0088 49050000 		.word	.L15+1
 102 008c 4D060000 		.word	.L53+1
 103 0090 4D060000 		.word	.L53+1
 104 0094 4D060000 		.word	.L53+1
 105 0098 4D060000 		.word	.L53+1
 106 009c 4D060000 		.word	.L53+1
 107 00a0 4D060000 		.word	.L53+1
 108 00a4 4D060000 		.word	.L53+1
 109 00a8 4D060000 		.word	.L53+1
 110 00ac 4D060000 		.word	.L53+1
 111 00b0 4D060000 		.word	.L53+1
 112 00b4 4D060000 		.word	.L53+1
 113 00b8 4D060000 		.word	.L53+1
 114 00bc 4D060000 		.word	.L53+1
 115 00c0 4D060000 		.word	.L53+1
 116 00c4 4D060000 		.word	.L53+1
 117 00c8 4D060000 		.word	.L53+1
 118 00cc 4D060000 		.word	.L53+1
 119 00d0 4D060000 		.word	.L53+1
 120 00d4 4D060000 		.word	.L53+1
 121 00d8 4D060000 		.word	.L53+1
 122 00dc 4D060000 		.word	.L53+1
 123 00e0 4D060000 		.word	.L53+1
 124 00e4 4D060000 		.word	.L53+1
 125 00e8 4D060000 		.word	.L53+1
 126 00ec 4D060000 		.word	.L53+1
 127 00f0 4D060000 		.word	.L53+1
 128 00f4 4D060000 		.word	.L53+1
 129 00f8 4D060000 		.word	.L53+1
 130 00fc 4D060000 		.word	.L53+1
 131 0100 4D060000 		.word	.L53+1
 132 0104 4D060000 		.word	.L53+1
 133 0108 4D060000 		.word	.L53+1
 134 010c 4D060000 		.word	.L53+1
 135 0110 4D060000 		.word	.L53+1
 136 0114 4D060000 		.word	.L53+1
 137 0118 4D060000 		.word	.L53+1
 138 011c 4D060000 		.word	.L53+1
 139 0120 4D060000 		.word	.L53+1
 140 0124 4D060000 		.word	.L53+1
 141 0128 4D060000 		.word	.L53+1
 142 012c 4D060000 		.word	.L53+1
 143 0130 4D060000 		.word	.L53+1
 144 0134 4D060000 		.word	.L53+1
 145 0138 4D060000 		.word	.L53+1
 146 013c 4D060000 		.word	.L53+1
 147 0140 4D060000 		.word	.L53+1
 148 0144 4D060000 		.word	.L53+1
 149 0148 4D060000 		.word	.L53+1
 150 014c 4D060000 		.word	.L53+1
 151 0150 4D060000 		.word	.L53+1
 152 0154 4D060000 		.word	.L53+1
 153 0158 4D060000 		.word	.L53+1
 154 015c 4D060000 		.word	.L53+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 5


 155 0160 4D060000 		.word	.L53+1
 156 0164 4D060000 		.word	.L53+1
 157 0168 4D060000 		.word	.L53+1
 158 016c 4D060000 		.word	.L53+1
 159 0170 4D060000 		.word	.L53+1
 160 0174 4D060000 		.word	.L53+1
 161 0178 4D060000 		.word	.L53+1
 162 017c 4D060000 		.word	.L53+1
 163 0180 4D060000 		.word	.L53+1
 164 0184 4D060000 		.word	.L53+1
 165 0188 4D060000 		.word	.L53+1
 166 018c 4D060000 		.word	.L53+1
 167 0190 4D060000 		.word	.L53+1
 168 0194 4D060000 		.word	.L53+1
 169 0198 4D060000 		.word	.L53+1
 170 019c 4D060000 		.word	.L53+1
 171 01a0 4D060000 		.word	.L53+1
 172 01a4 4D060000 		.word	.L53+1
 173 01a8 4D060000 		.word	.L53+1
 174 01ac 4D060000 		.word	.L53+1
 175 01b0 4D060000 		.word	.L53+1
 176 01b4 4D060000 		.word	.L53+1
 177 01b8 4D060000 		.word	.L53+1
 178 01bc 4D060000 		.word	.L53+1
 179 01c0 4D060000 		.word	.L53+1
 180 01c4 4D060000 		.word	.L53+1
 181 01c8 4D060000 		.word	.L53+1
 182 01cc 4D060000 		.word	.L53+1
 183 01d0 4D060000 		.word	.L53+1
 184 01d4 4D060000 		.word	.L53+1
 185 01d8 4D060000 		.word	.L53+1
 186 01dc 4D060000 		.word	.L53+1
 187 01e0 4D060000 		.word	.L53+1
 188 01e4 4D060000 		.word	.L53+1
 189 01e8 4D060000 		.word	.L53+1
 190 01ec 4D060000 		.word	.L53+1
 191 01f0 4D060000 		.word	.L53+1
 192 01f4 4D060000 		.word	.L53+1
 193 01f8 4D060000 		.word	.L53+1
 194 01fc 4D060000 		.word	.L53+1
 195 0200 4D060000 		.word	.L53+1
 196 0204 4D060000 		.word	.L53+1
 197 0208 4D060000 		.word	.L53+1
 198 020c 4D060000 		.word	.L53+1
 199 0210 4D060000 		.word	.L53+1
 200 0214 4D060000 		.word	.L53+1
 201 0218 4D060000 		.word	.L53+1
 202 021c 4D060000 		.word	.L53+1
 203 0220 4D060000 		.word	.L53+1
 204 0224 4D060000 		.word	.L53+1
 205 0228 4D060000 		.word	.L53+1
 206 022c 4D060000 		.word	.L53+1
 207 0230 4D060000 		.word	.L53+1
 208 0234 4D060000 		.word	.L53+1
 209 0238 4D060000 		.word	.L53+1
 210 023c 4D060000 		.word	.L53+1
 211 0240 4D060000 		.word	.L53+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 6


 212 0244 4D060000 		.word	.L53+1
 213 0248 4D060000 		.word	.L53+1
 214 024c 4D060000 		.word	.L53+1
 215 0250 4D060000 		.word	.L53+1
 216 0254 41040000 		.word	.L16+1
 217 0258 83040000 		.word	.L17+1
 218 025c 47040000 		.word	.L18+1
 219 0260 8F040000 		.word	.L19+1
 220 0264 4D040000 		.word	.L20+1
 221 0268 59040000 		.word	.L21+1
 222 026c 53040000 		.word	.L22+1
 223 0270 4D060000 		.word	.L53+1
 224 0274 7D040000 		.word	.L23+1
 225 0278 6B040000 		.word	.L24+1
 226 027c 4D060000 		.word	.L53+1
 227 0280 71040000 		.word	.L25+1
 228 0284 5F040000 		.word	.L26+1
 229 0288 4D060000 		.word	.L53+1
 230 028c 4D060000 		.word	.L53+1
 231 0290 4D060000 		.word	.L53+1
 232 0294 89040000 		.word	.L27+1
 233 0298 4D060000 		.word	.L53+1
 234 029c 77040000 		.word	.L28+1
 235 02a0 4D060000 		.word	.L53+1
 236 02a4 4D060000 		.word	.L53+1
 237 02a8 4D060000 		.word	.L53+1
 238 02ac 4D060000 		.word	.L53+1
 239 02b0 4D060000 		.word	.L53+1
 240 02b4 4D060000 		.word	.L53+1
 241 02b8 4D060000 		.word	.L53+1
 242 02bc 4D060000 		.word	.L53+1
 243 02c0 4D060000 		.word	.L53+1
 244 02c4 4D060000 		.word	.L53+1
 245 02c8 4D060000 		.word	.L53+1
 246 02cc 4D060000 		.word	.L53+1
 247 02d0 4D060000 		.word	.L53+1
 248 02d4 4D060000 		.word	.L53+1
 249 02d8 E7050000 		.word	.L29+1
 250 02dc ED050000 		.word	.L30+1
 251 02e0 05060000 		.word	.L31+1
 252 02e4 0B060000 		.word	.L32+1
 253 02e8 11060000 		.word	.L33+1
 254 02ec 17060000 		.word	.L34+1
 255 02f0 1D060000 		.word	.L35+1
 256 02f4 35060000 		.word	.L36+1
 257 02f8 4D060000 		.word	.L53+1
 258 02fc 4D060000 		.word	.L53+1
 259 0300 4D060000 		.word	.L53+1
 260 0304 4D060000 		.word	.L53+1
 261 0308 4D060000 		.word	.L53+1
 262 030c 4D060000 		.word	.L53+1
 263 0310 4D060000 		.word	.L53+1
 264 0314 4D060000 		.word	.L53+1
 265 0318 4D060000 		.word	.L53+1
 266 031c 4D060000 		.word	.L53+1
 267 0320 4D060000 		.word	.L53+1
 268 0324 4D060000 		.word	.L53+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 7


 269 0328 4D060000 		.word	.L53+1
 270 032c 4D060000 		.word	.L53+1
 271 0330 4D060000 		.word	.L53+1
 272 0334 4D060000 		.word	.L53+1
 273 0338 4D060000 		.word	.L53+1
 274 033c 4D060000 		.word	.L53+1
 275 0340 4D060000 		.word	.L53+1
 276 0344 4D060000 		.word	.L53+1
 277 0348 4D060000 		.word	.L53+1
 278 034c 4D060000 		.word	.L53+1
 279 0350 4D060000 		.word	.L53+1
 280 0354 4D060000 		.word	.L53+1
 281 0358 4D060000 		.word	.L53+1
 282 035c 4D060000 		.word	.L53+1
 283 0360 4D060000 		.word	.L53+1
 284 0364 4D060000 		.word	.L53+1
 285 0368 4D060000 		.word	.L53+1
 286 036c 4D060000 		.word	.L53+1
 287 0370 4D060000 		.word	.L53+1
 288 0374 4D060000 		.word	.L53+1
 289 0378 4D060000 		.word	.L53+1
 290 037c 4D060000 		.word	.L53+1
 291 0380 4D060000 		.word	.L53+1
 292 0384 4D060000 		.word	.L53+1
 293 0388 4D060000 		.word	.L53+1
 294 038c 4D060000 		.word	.L53+1
 295 0390 4D060000 		.word	.L53+1
 296 0394 4D060000 		.word	.L53+1
 297 0398 4D060000 		.word	.L53+1
 298 039c 4D060000 		.word	.L53+1
 299 03a0 4D060000 		.word	.L53+1
 300 03a4 4D060000 		.word	.L53+1
 301 03a8 4D060000 		.word	.L53+1
 302 03ac 4D060000 		.word	.L53+1
 303 03b0 4D060000 		.word	.L53+1
 304 03b4 4D060000 		.word	.L53+1
 305 03b8 4D060000 		.word	.L53+1
 306 03bc 4D060000 		.word	.L53+1
 307 03c0 4D060000 		.word	.L53+1
 308 03c4 4D060000 		.word	.L53+1
 309 03c8 4D060000 		.word	.L53+1
 310 03cc 4D060000 		.word	.L53+1
 311 03d0 4D060000 		.word	.L53+1
 312 03d4 4D060000 		.word	.L53+1
 313 03d8 4D060000 		.word	.L53+1
 314 03dc 4D060000 		.word	.L53+1
 315 03e0 4D060000 		.word	.L53+1
 316 03e4 4D060000 		.word	.L53+1
 317 03e8 4D060000 		.word	.L53+1
 318 03ec 4D060000 		.word	.L53+1
 319 03f0 4D060000 		.word	.L53+1
 320 03f4 4D060000 		.word	.L53+1
 321 03f8 4D060000 		.word	.L53+1
 322 03fc 4D060000 		.word	.L53+1
 323 0400 4D060000 		.word	.L53+1
 324 0404 4D060000 		.word	.L53+1
 325 0408 4D060000 		.word	.L53+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 8


 326 040c 4D060000 		.word	.L53+1
 327 0410 4D060000 		.word	.L53+1
 328 0414 4D060000 		.word	.L53+1
 329 0418 4D060000 		.word	.L53+1
 330 041c 4D060000 		.word	.L53+1
 331 0420 4D060000 		.word	.L53+1
 332 0424 4D060000 		.word	.L53+1
 333 0428 4D060000 		.word	.L53+1
 334 042c 4D060000 		.word	.L53+1
 335 0430 4D060000 		.word	.L53+1
 336 0434 4D060000 		.word	.L53+1
 337 0438 4D060000 		.word	.L53+1
 338 043c 65040000 		.word	.L37+1
 339              		.p2align 1
 340              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 341              		.loc 1 78 0
 342 0440 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 343              		.loc 1 79 0
 344 0444 03E1     		b	.L1
 345              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 346              		.loc 1 84 0
 347 0446 FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 348              		.loc 1 85 0
 349 044a 00E1     		b	.L1
 350              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 351              		.loc 1 90 0
 352 044c FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 353              		.loc 1 91 0
 354 0450 FDE0     		b	.L1
 355              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 356              		.loc 1 96 0
 357 0452 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 358              		.loc 1 97 0
 359 0456 FAE0     		b	.L1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 9


 360              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 361              		.loc 1 102 0
 362 0458 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 363              		.loc 1 103 0
 364 045c F7E0     		b	.L1
 365              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 366              		.loc 1 108 0
 367 045e FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 368              		.loc 1 109 0
 369 0462 F4E0     		b	.L1
 370              	.L37:
 110:..\src/command_processing.c **** 
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_VIBROTACTILE_INPUTS
 112:..\src/command_processing.c ****          
 113:..\src/command_processing.c ****         case CMD_GET_VIBROTACTILE_INPUTS:
 114:..\src/command_processing.c ****             cmd_get_vibrotactile_inputs();
 371              		.loc 1 114 0
 372 0464 FFF7FEFF 		bl	cmd_get_vibrotactile_inputs
 115:..\src/command_processing.c ****             break;            
 373              		.loc 1 115 0
 374 0468 F1E0     		b	.L1
 375              	.L24:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c ****         
 119:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 120:..\src/command_processing.c ****             cmd_get_velocities();
 376              		.loc 1 120 0
 377 046a FFF7FEFF 		bl	cmd_get_velocities
 121:..\src/command_processing.c ****             break;
 378              		.loc 1 121 0
 379 046e EEE0     		b	.L1
 380              	.L25:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 126:..\src/command_processing.c ****             cmd_get_accelerations();
 381              		.loc 1 126 0
 382 0470 FFF7FEFF 		bl	cmd_get_accelerations
 127:..\src/command_processing.c ****             break;
 383              		.loc 1 127 0
 384 0474 EBE0     		b	.L1
 385              	.L28:
 128:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 10


 129:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 132:..\src/command_processing.c ****             cmd_get_joystick();
 386              		.loc 1 132 0
 387 0476 FFF7FEFF 		bl	cmd_get_joystick
 133:..\src/command_processing.c ****         break;
 388              		.loc 1 133 0
 389 047a E8E0     		b	.L1
 390              	.L23:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 136:..\src/command_processing.c **** 
 137:..\src/command_processing.c ****         case CMD_GET_EMG:
 138:..\src/command_processing.c ****             cmd_get_emg();
 391              		.loc 1 138 0
 392 047c FFF7FEFF 		bl	cmd_get_emg
 139:..\src/command_processing.c ****             break;
 393              		.loc 1 139 0
 394 0480 E5E0     		b	.L1
 395              	.L17:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 144:..\src/command_processing.c ****             cmd_get_activate();
 396              		.loc 1 144 0
 397 0482 FFF7FEFF 		bl	cmd_get_activate
 145:..\src/command_processing.c ****             break;
 398              		.loc 1 145 0
 399 0486 E2E0     		b	.L1
 400              	.L27:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 148:..\src/command_processing.c ****             
 149:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 150:..\src/command_processing.c ****             cmd_set_baudrate();
 401              		.loc 1 150 0
 402 0488 FFF7FEFF 		bl	cmd_set_baudrate
 151:..\src/command_processing.c ****             break;  
 403              		.loc 1 151 0
 404 048c DFE0     		b	.L1
 405              	.L19:
 152:..\src/command_processing.c ****             
 153:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 156:..\src/command_processing.c ****             cmd_get_inputs();
 406              		.loc 1 156 0
 407 048e FFF7FEFF 		bl	cmd_get_inputs
 157:..\src/command_processing.c ****             break;
 408              		.loc 1 157 0
 409 0492 DCE0     		b	.L1
 410              	.L11:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 160:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 11


 161:..\src/command_processing.c ****         case CMD_GET_INFO:
 162:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 411              		.loc 1 162 0
 412 0494 6F4B     		ldr	r3, .L56
 413 0496 1B88     		ldrh	r3, [r3]
 414 0498 BB61     		str	r3, [r7, #24]
 415              	.LBB12:
 416              	.LBB13:
 417              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 12


  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 13


 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 14


 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 15


 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 16


 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 17


 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 18


 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 19


 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 20


 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 21


 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 22


 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 23


 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 24


 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 25


 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 418              		.loc 2 792 0
 419 049a BB69     		ldr	r3, [r7, #24]
 420              		.syntax unified
 421              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 422 049c 5BBA     		rev16 r3, r3
 423              	@ 0 "" 2
 424              		.thumb
 425              		.syntax unified
 426 049e 7B61     		str	r3, [r7, #20]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 427              		.loc 2 793 0
 428 04a0 7B69     		ldr	r3, [r7, #20]
 429              	.LBE13:
 430              	.LBE12:
 431              		.loc 1 162 0
 432 04a2 9BB2     		uxth	r3, r3
 433 04a4 1846     		mov	r0, r3
 434 04a6 FFF7FEFF 		bl	infoGet
 163:..\src/command_processing.c ****             break;
 435              		.loc 1 163 0
 436 04aa D0E0     		b	.L1
 437              	.L7:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 168:..\src/command_processing.c ****             setZeros();
 438              		.loc 1 168 0
 439 04ac FFF7FEFF 		bl	setZeros
 169:..\src/command_processing.c ****             break;
 440              		.loc 1 169 0
 441 04b0 CDE0     		b	.L1
 442              	.L14:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 172:..\src/command_processing.c **** 
 173:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 174:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 443              		.loc 1 174 0
 444 04b2 684B     		ldr	r3, .L56
 445 04b4 1B88     		ldrh	r3, [r3]
 446 04b6 BB62     		str	r3, [r7, #40]
 447              	.LBB14:
 448              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 449              		.loc 2 792 0
 450 04b8 BB6A     		ldr	r3, [r7, #40]
 451              		.syntax unified
 452              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 453 04ba 5BBA     		rev16 r3, r3
 454              	@ 0 "" 2
 455              		.thumb
 456              		.syntax unified
 457 04bc 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 26


 458              		.loc 2 793 0
 459 04be 3B69     		ldr	r3, [r7, #16]
 460              	.LBE15:
 461              	.LBE14:
 462              		.loc 1 174 0
 463 04c0 9BB2     		uxth	r3, r3
 464 04c2 1846     		mov	r0, r3
 465 04c4 FFF7FEFF 		bl	manage_param_list
 175:..\src/command_processing.c ****             break;
 466              		.loc 1 175 0
 467 04c8 C1E0     		b	.L1
 468              	.L5:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================================     CMD_PING
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_PING:
 180:..\src/command_processing.c ****             cmd_ping();
 469              		.loc 1 180 0
 470 04ca FFF7FEFF 		bl	cmd_ping
 181:..\src/command_processing.c ****             break;
 471              		.loc 1 181 0
 472 04ce BEE0     		b	.L1
 473              	.L8:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 184:..\src/command_processing.c ****             
 185:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 186:..\src/command_processing.c ****             cmd_store_params();
 474              		.loc 1 186 0
 475 04d0 FFF7FEFF 		bl	cmd_store_params
 187:..\src/command_processing.c ****             break;
 476              		.loc 1 187 0
 477 04d4 BBE0     		b	.L1
 478              	.L9:
 188:..\src/command_processing.c **** 
 189:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 190:..\src/command_processing.c **** 
 191:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 192:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 479              		.loc 1 192 0
 480 04d6 3220     		movs	r0, #50
 481 04d8 FFF7FEFF 		bl	memStore
 482 04dc 0346     		mov	r3, r0
 483 04de 002B     		cmp	r3, #0
 484 04e0 03D0     		beq	.L40
 193:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 485              		.loc 1 193 0
 486 04e2 0120     		movs	r0, #1
 487 04e4 FFF7FEFF 		bl	sendAcknowledgment
 194:..\src/command_processing.c ****             else
 195:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 196:..\src/command_processing.c ****             break;
 488              		.loc 1 196 0
 489 04e8 B1E0     		b	.L1
 490              	.L40:
 195:..\src/command_processing.c ****             break;
 491              		.loc 1 195 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 27


 492 04ea 0020     		movs	r0, #0
 493 04ec FFF7FEFF 		bl	sendAcknowledgment
 494              		.loc 1 196 0
 495 04f0 ADE0     		b	.L1
 496              	.L10:
 197:..\src/command_processing.c **** 
 198:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 199:..\src/command_processing.c **** 
 200:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 201:..\src/command_processing.c ****             if(memRestore())
 497              		.loc 1 201 0
 498 04f2 FFF7FEFF 		bl	memRestore
 499 04f6 0346     		mov	r3, r0
 500 04f8 002B     		cmp	r3, #0
 501 04fa 03D0     		beq	.L42
 202:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 502              		.loc 1 202 0
 503 04fc 0120     		movs	r0, #1
 504 04fe FFF7FEFF 		bl	sendAcknowledgment
 203:..\src/command_processing.c ****             else
 204:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 205:..\src/command_processing.c ****             break;
 505              		.loc 1 205 0
 506 0502 A4E0     		b	.L1
 507              	.L42:
 204:..\src/command_processing.c ****             break;
 508              		.loc 1 204 0
 509 0504 0020     		movs	r0, #0
 510 0506 FFF7FEFF 		bl	sendAcknowledgment
 511              		.loc 1 205 0
 512 050a A0E0     		b	.L1
 513              	.L13:
 206:..\src/command_processing.c **** 
 207:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 208:..\src/command_processing.c **** 
 209:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 210:..\src/command_processing.c ****             if(memInit())
 514              		.loc 1 210 0
 515 050c FFF7FEFF 		bl	memInit
 516 0510 0346     		mov	r3, r0
 517 0512 002B     		cmp	r3, #0
 518 0514 03D0     		beq	.L44
 211:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 519              		.loc 1 211 0
 520 0516 0120     		movs	r0, #1
 521 0518 FFF7FEFF 		bl	sendAcknowledgment
 212:..\src/command_processing.c ****             else
 213:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 214:..\src/command_processing.c ****             break;
 522              		.loc 1 214 0
 523 051c 97E0     		b	.L1
 524              	.L44:
 213:..\src/command_processing.c ****             break;
 525              		.loc 1 213 0
 526 051e 0020     		movs	r0, #0
 527 0520 FFF7FEFF 		bl	sendAcknowledgment
 528              		.loc 1 214 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 28


 529 0524 93E0     		b	.L1
 530              	.L12:
 215:..\src/command_processing.c **** 
 216:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 217:..\src/command_processing.c **** 
 218:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 219:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 220:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 531              		.loc 1 220 0
 532 0526 0120     		movs	r0, #1
 533 0528 FFF7FEFF 		bl	sendAcknowledgment
 221:..\src/command_processing.c ****             CyDelay(1000);
 534              		.loc 1 221 0
 535 052c 4FF47A70 		mov	r0, #1000
 536 0530 FFF7FEFF 		bl	CyDelay
 222:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 537              		.loc 1 222 0
 538 0534 0020     		movs	r0, #0
 539 0536 FFF7FEFF 		bl	FTDI_ENABLE_Write
 223:..\src/command_processing.c ****             CyDelay(1000);
 540              		.loc 1 223 0
 541 053a 4FF47A70 		mov	r0, #1000
 542 053e FFF7FEFF 		bl	CyDelay
 224:..\src/command_processing.c ****             Bootloadable_Load();
 543              		.loc 1 224 0
 544 0542 FFF7FEFF 		bl	Bootloadable_Load
 225:..\src/command_processing.c ****             break;
 545              		.loc 1 225 0
 546 0546 82E0     		b	.L1
 547              	.L15:
 226:..\src/command_processing.c **** 
 227:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 228:..\src/command_processing.c **** 
 229:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 230:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 548              		.loc 1 230 0
 549 0548 434B     		ldr	r3, .L56+4
 550 054a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 551 054c 1B02     		lsls	r3, r3, #8
 552 054e 1AB2     		sxth	r2, r3
 553 0550 414B     		ldr	r3, .L56+4
 554 0552 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 555 0554 1BB2     		sxth	r3, r3
 556 0556 1343     		orrs	r3, r3, r2
 557 0558 1AB2     		sxth	r2, r3
 558 055a 404B     		ldr	r3, .L56+8
 559 055c 5A80     		strh	r2, [r3, #2]	@ movhi
 231:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 560              		.loc 1 231 0
 561 055e 3E4B     		ldr	r3, .L56+4
 562 0560 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 563 0562 1B02     		lsls	r3, r3, #8
 564 0564 1AB2     		sxth	r2, r3
 565 0566 3C4B     		ldr	r3, .L56+4
 566 0568 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 567 056a 1BB2     		sxth	r3, r3
 568 056c 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 29


 569 056e 1AB2     		sxth	r2, r3
 570 0570 3A4B     		ldr	r3, .L56+8
 571 0572 9A80     		strh	r2, [r3, #4]	@ movhi
 232:..\src/command_processing.c ****             
 233:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 572              		.loc 1 233 0
 573 0574 394B     		ldr	r3, .L56+8
 574 0576 B3F90230 		ldrsh	r3, [r3, #2]
 575 057a B3F1FF3F 		cmp	r3, #-1
 576 057e 0FD1     		bne	.L46
 577              		.loc 1 233 0 is_stmt 0 discriminator 1
 578 0580 364B     		ldr	r3, .L56+8
 579 0582 B3F90430 		ldrsh	r3, [r3, #4]
 580 0586 B3F1FF3F 		cmp	r3, #-1
 581 058a 09D1     		bne	.L46
 234:..\src/command_processing.c ****                 calib.enabled = FALSE;
 582              		.loc 1 234 0 is_stmt 1
 583 058c 334B     		ldr	r3, .L56+8
 584 058e 0022     		movs	r2, #0
 585 0590 1A70     		strb	r2, [r3]
 235:..\src/command_processing.c ****                 calib.speed = 0;
 586              		.loc 1 235 0
 587 0592 324B     		ldr	r3, .L56+8
 588 0594 0022     		movs	r2, #0
 589 0596 5A80     		strh	r2, [r3, #2]	@ movhi
 236:..\src/command_processing.c ****                 calib.repetitions = 0;
 590              		.loc 1 236 0
 591 0598 304B     		ldr	r3, .L56+8
 592 059a 0022     		movs	r2, #0
 593 059c 9A80     		strh	r2, [r3, #4]	@ movhi
 237:..\src/command_processing.c ****                 break;
 594              		.loc 1 237 0
 595 059e 56E0     		b	.L1
 596              	.L46:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             // Speed & repetitions saturations
 240:..\src/command_processing.c ****             if (calib.speed < 0) {
 597              		.loc 1 240 0
 598 05a0 2E4B     		ldr	r3, .L56+8
 599 05a2 B3F90230 		ldrsh	r3, [r3, #2]
 600 05a6 002B     		cmp	r3, #0
 601 05a8 03DA     		bge	.L47
 241:..\src/command_processing.c ****                 calib.speed = 0;
 602              		.loc 1 241 0
 603 05aa 2C4B     		ldr	r3, .L56+8
 604 05ac 0022     		movs	r2, #0
 605 05ae 5A80     		strh	r2, [r3, #2]	@ movhi
 606 05b0 07E0     		b	.L48
 607              	.L47:
 242:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 608              		.loc 1 242 0
 609 05b2 2A4B     		ldr	r3, .L56+8
 610 05b4 B3F90230 		ldrsh	r3, [r3, #2]
 611 05b8 C82B     		cmp	r3, #200
 612 05ba 02DD     		ble	.L48
 243:..\src/command_processing.c ****                 calib.speed = 200;
 613              		.loc 1 243 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 30


 614 05bc 274B     		ldr	r3, .L56+8
 615 05be C822     		movs	r2, #200
 616 05c0 5A80     		strh	r2, [r3, #2]	@ movhi
 617              	.L48:
 244:..\src/command_processing.c ****             }
 245:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 618              		.loc 1 245 0
 619 05c2 264B     		ldr	r3, .L56+8
 620 05c4 B3F90430 		ldrsh	r3, [r3, #4]
 621 05c8 002B     		cmp	r3, #0
 622 05ca 02DA     		bge	.L49
 246:..\src/command_processing.c ****                 calib.repetitions = 0;
 623              		.loc 1 246 0
 624 05cc 234B     		ldr	r3, .L56+8
 625 05ce 0022     		movs	r2, #0
 626 05d0 9A80     		strh	r2, [r3, #4]	@ movhi
 627              	.L49:
 247:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 248:..\src/command_processing.c ****                 calib.repetitions = 32767;
 249:..\src/command_processing.c ****             }
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 628              		.loc 1 251 0
 629 05d2 234B     		ldr	r3, .L56+12
 630 05d4 0022     		movs	r2, #0
 631 05d6 1A60     		str	r2, [r3]
 252:..\src/command_processing.c ****             calib.enabled = TRUE;
 632              		.loc 1 252 0
 633 05d8 204B     		ldr	r3, .L56+8
 634 05da 0122     		movs	r2, #1
 635 05dc 1A70     		strb	r2, [r3]
 253:..\src/command_processing.c ****          
 254:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 636              		.loc 1 254 0
 637 05de 0120     		movs	r0, #1
 638 05e0 FFF7FEFF 		bl	sendAcknowledgment
 255:..\src/command_processing.c ****             break;
 639              		.loc 1 255 0
 640 05e4 33E0     		b	.L1
 641              	.L29:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 260:..\src/command_processing.c ****             cmd_get_imu_readings();
 642              		.loc 1 260 0
 643 05e6 FFF7FEFF 		bl	cmd_get_imu_readings
 261:..\src/command_processing.c ****             break; 
 644              		.loc 1 261 0
 645 05ea 30E0     		b	.L1
 646              	.L30:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 266:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 647              		.loc 1 266 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 31


 648 05ec 194B     		ldr	r3, .L56
 649 05ee 1B88     		ldrh	r3, [r3]
 650 05f0 7B62     		str	r3, [r7, #36]
 651              	.LBB16:
 652              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 653              		.loc 2 792 0
 654 05f2 7B6A     		ldr	r3, [r7, #36]
 655              		.syntax unified
 656              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 657 05f4 5BBA     		rev16 r3, r3
 658              	@ 0 "" 2
 659              		.thumb
 660              		.syntax unified
 661 05f6 FB60     		str	r3, [r7, #12]
 662              		.loc 2 793 0
 663 05f8 FB68     		ldr	r3, [r7, #12]
 664              	.LBE17:
 665              	.LBE16:
 666              		.loc 1 266 0
 667 05fa 9BB2     		uxth	r3, r3
 668 05fc 1846     		mov	r0, r3
 669 05fe FFF7FEFF 		bl	get_IMU_param_list
 267:..\src/command_processing.c ****             break;             
 670              		.loc 1 267 0
 671 0602 24E0     		b	.L1
 672              	.L31:
 268:..\src/command_processing.c ****             
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 272:..\src/command_processing.c ****             cmd_get_encoder_map();
 673              		.loc 1 272 0
 674 0604 FFF7FEFF 		bl	cmd_get_encoder_map
 273:..\src/command_processing.c ****             break; 
 675              		.loc 1 273 0
 676 0608 21E0     		b	.L1
 677              	.L32:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 278:..\src/command_processing.c ****             cmd_get_encoder_raw();
 678              		.loc 1 278 0
 679 060a FFF7FEFF 		bl	cmd_get_encoder_raw
 279:..\src/command_processing.c ****             break; 
 680              		.loc 1 279 0
 681 060e 1EE0     		b	.L1
 682              	.L33:
 280:..\src/command_processing.c **** 
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 284:..\src/command_processing.c ****             cmd_get_ADC_map();
 683              		.loc 1 284 0
 684 0610 FFF7FEFF 		bl	cmd_get_ADC_map
 285:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 32


 685              		.loc 1 285 0
 686 0614 1BE0     		b	.L1
 687              	.L34:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 290:..\src/command_processing.c ****             cmd_get_ADC_raw();
 688              		.loc 1 290 0
 689 0616 FFF7FEFF 		bl	cmd_get_ADC_raw
 291:..\src/command_processing.c ****             break; 
 690              		.loc 1 291 0
 691 061a 18E0     		b	.L1
 692              	.L35:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_SINGLE_FILE
 294:..\src/command_processing.c **** 
 295:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 296:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 693              		.loc 1 296 0
 694 061c 0D4B     		ldr	r3, .L56
 695 061e 1B88     		ldrh	r3, [r3]
 696 0620 3B62     		str	r3, [r7, #32]
 697              	.LBB18:
 698              	.LBB19:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 699              		.loc 2 792 0
 700 0622 3B6A     		ldr	r3, [r7, #32]
 701              		.syntax unified
 702              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 703 0624 5BBA     		rev16 r3, r3
 704              	@ 0 "" 2
 705              		.thumb
 706              		.syntax unified
 707 0626 BB60     		str	r3, [r7, #8]
 708              		.loc 2 793 0
 709 0628 BB68     		ldr	r3, [r7, #8]
 710              	.LBE19:
 711              	.LBE18:
 712              		.loc 1 296 0
 713 062a 9BB2     		uxth	r3, r3
 714 062c 1846     		mov	r0, r3
 715 062e FFF7FEFF 		bl	cmd_get_SD_file
 297:..\src/command_processing.c ****             break;   
 716              		.loc 1 297 0
 717 0632 0CE0     		b	.L1
 718              	.L36:
 298:..\src/command_processing.c ****             
 299:..\src/command_processing.c **** //=====================================================     CMD_REMOVE_SD_SINGLE_FILE
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c ****         case CMD_REMOVE_SD_SINGLE_FILE:
 302:..\src/command_processing.c ****             cmd_remove_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 719              		.loc 1 302 0
 720 0634 074B     		ldr	r3, .L56
 721 0636 1B88     		ldrh	r3, [r3]
 722 0638 FB61     		str	r3, [r7, #28]
 723              	.LBB20:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 33


 724              	.LBB21:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 725              		.loc 2 792 0
 726 063a FB69     		ldr	r3, [r7, #28]
 727              		.syntax unified
 728              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 729 063c 5BBA     		rev16 r3, r3
 730              	@ 0 "" 2
 731              		.thumb
 732              		.syntax unified
 733 063e 7B60     		str	r3, [r7, #4]
 734              		.loc 2 793 0
 735 0640 7B68     		ldr	r3, [r7, #4]
 736              	.LBE21:
 737              	.LBE20:
 738              		.loc 1 302 0
 739 0642 9BB2     		uxth	r3, r3
 740 0644 1846     		mov	r0, r3
 741 0646 FFF7FEFF 		bl	cmd_remove_SD_file
 303:..\src/command_processing.c ****             break;               
 742              		.loc 1 303 0
 743 064a 00E0     		b	.L1
 744              	.L53:
 304:..\src/command_processing.c ****             
 305:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 306:..\src/command_processing.c ****         default:
 307:..\src/command_processing.c ****             break;
 745              		.loc 1 307 0
 746 064c 00BF     		nop
 747              	.L1:
 308:..\src/command_processing.c **** 
 309:..\src/command_processing.c ****     }
 310:..\src/command_processing.c **** }  
 748              		.loc 1 310 0
 749 064e 3037     		adds	r7, r7, #48
 750              		.cfi_def_cfa_offset 8
 751 0650 BD46     		mov	sp, r7
 752              		.cfi_def_cfa_register 13
 753              		@ sp needed
 754 0652 80BD     		pop	{r7, pc}
 755              	.L57:
 756              		.align	2
 757              	.L56:
 758 0654 01000000 		.word	g_rx+1
 759 0658 00000000 		.word	g_rx
 760 065c 00000000 		.word	calib
 761 0660 00000000 		.word	g_refNew
 762              		.cfi_endproc
 763              	.LFE64:
 764              		.size	commProcess, .-commProcess
 765              		.section	.text.infoSend,"ax",%progbits
 766              		.align	2
 767              		.global	infoSend
 768              		.thumb
 769              		.thumb_func
 770              		.type	infoSend, %function
 771              	infoSend:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 34


 772              	.LFB65:
 311:..\src/command_processing.c **** 
 312:..\src/command_processing.c **** //==============================================================================
 313:..\src/command_processing.c **** //                                                                     INFO SEND
 314:..\src/command_processing.c **** //==============================================================================
 315:..\src/command_processing.c **** 
 316:..\src/command_processing.c **** void infoSend(void){
 773              		.loc 1 316 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 1504
 776              		@ frame_needed = 1, uses_anonymous_args = 0
 777 0000 80B5     		push	{r7, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 ADF5BC6D 		sub	sp, sp, #1504
 782              		.cfi_def_cfa_offset 1512
 783 0006 00AF     		add	r7, sp, #0
 784              		.cfi_def_cfa_register 7
 317:..\src/command_processing.c ****     char packet_string[1500];
 318:..\src/command_processing.c ****     
 319:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 785              		.loc 1 319 0
 786 0008 3B1D     		adds	r3, r7, #4
 787 000a 1846     		mov	r0, r3
 788 000c FFF7FEFF 		bl	prepare_generic_info
 320:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 789              		.loc 1 320 0
 790 0010 3B1D     		adds	r3, r7, #4
 791 0012 1846     		mov	r0, r3
 792 0014 FFF7FEFF 		bl	UART_RS485_PutString
 321:..\src/command_processing.c **** }
 793              		.loc 1 321 0
 794 0018 00BF     		nop
 795 001a 07F5BC67 		add	r7, r7, #1504
 796              		.cfi_def_cfa_offset 8
 797 001e BD46     		mov	sp, r7
 798              		.cfi_def_cfa_register 13
 799              		@ sp needed
 800 0020 80BD     		pop	{r7, pc}
 801              		.cfi_endproc
 802              	.LFE65:
 803              		.size	infoSend, .-infoSend
 804 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 805              		.align	2
 806              		.global	infoGet
 807              		.thumb
 808              		.thumb_func
 809              		.type	infoGet, %function
 810              	infoGet:
 811              	.LFB66:
 322:..\src/command_processing.c **** 
 323:..\src/command_processing.c **** 
 324:..\src/command_processing.c **** //==============================================================================
 325:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 326:..\src/command_processing.c **** //==============================================================================
 327:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 35


 328:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 812              		.loc 1 328 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 24008
 815              		@ frame_needed = 1, uses_anonymous_args = 0
 816 0000 80B5     		push	{r7, lr}
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 7, -8
 819              		.cfi_offset 14, -4
 820 0002 ADF5BB4D 		sub	sp, sp, #23936
 821              		.cfi_def_cfa_offset 23944
 822 0006 92B0     		sub	sp, sp, #72
 823              		.cfi_def_cfa_offset 24016
 824 0008 00AF     		add	r7, sp, #0
 825              		.cfi_def_cfa_register 7
 826 000a 0246     		mov	r2, r0
 827 000c 07F14803 		add	r3, r7, #72
 828 0010 423B     		subs	r3, r3, #66
 829 0012 1A80     		strh	r2, [r3]	@ movhi
 329:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 830              		.loc 1 329 0
 831 0014 07F59C43 		add	r3, r7, #19968
 832 0018 03F12803 		add	r3, r3, #40
 833 001c 0022     		movs	r2, #0
 834 001e 1A60     		str	r2, [r3]
 835 0020 0433     		adds	r3, r3, #4
 836 0022 40F69C72 		movw	r2, #3996
 837 0026 0021     		movs	r1, #0
 838 0028 1846     		mov	r0, r3
 839 002a FFF7FEFF 		bl	memset
 330:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 840              		.loc 1 330 0
 841 002e 07F14803 		add	r3, r7, #72
 842 0032 403B     		subs	r3, r3, #64
 843 0034 0022     		movs	r2, #0
 844 0036 1A60     		str	r2, [r3]
 845 0038 0433     		adds	r3, r3, #4
 846 003a 44F61C62 		movw	r2, #19996
 847 003e 0021     		movs	r1, #0
 848 0040 1846     		mov	r0, r3
 849 0042 FFF7FEFF 		bl	memset
 331:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 332:..\src/command_processing.c **** 
 333:..\src/command_processing.c ****     switch (info_type) {
 850              		.loc 1 333 0
 851 0046 07F14803 		add	r3, r7, #72
 852 004a 423B     		subs	r3, r3, #66
 853 004c 1B88     		ldrh	r3, [r3]
 854 004e 062B     		cmp	r3, #6
 855 0050 7DD8     		bhi	.L70
 856 0052 01A2     		adr	r2, .L62
 857 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 858              		.p2align 2
 859              	.L62:
 860 0058 75000000 		.word	.L61+1
 861 005c 97000000 		.word	.L63+1
 862 0060 B9000000 		.word	.L64+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 36


 863 0064 E1000000 		.word	.L65+1
 864 0068 03010000 		.word	.L66+1
 865 006c 21010000 		.word	.L67+1
 866 0070 27010000 		.word	.L68+1
 867              		.p2align 1
 868              	.L61:
 334:..\src/command_processing.c ****         case INFO_ALL:
 335:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 869              		.loc 1 335 0
 870 0074 07F59C43 		add	r3, r7, #19968
 871 0078 03F12803 		add	r3, r3, #40
 872 007c 1846     		mov	r0, r3
 873 007e FFF7FEFF 		bl	prepare_generic_info
 336:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 874              		.loc 1 336 0
 875 0082 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 337:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 876              		.loc 1 337 0
 877 0086 07F59C43 		add	r3, r7, #19968
 878 008a 03F12803 		add	r3, r3, #40
 879 008e 1846     		mov	r0, r3
 880 0090 FFF7FEFF 		bl	UART_RS485_PutString
 338:..\src/command_processing.c ****             break;
 881              		.loc 1 338 0
 882 0094 5CE0     		b	.L69
 883              	.L63:
 339:..\src/command_processing.c ****         case CYCLES_INFO:
 340:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 884              		.loc 1 340 0
 885 0096 07F59C43 		add	r3, r7, #19968
 886 009a 03F12803 		add	r3, r3, #40
 887 009e 1846     		mov	r0, r3
 888 00a0 FFF7FEFF 		bl	prepare_counter_info
 341:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 889              		.loc 1 341 0
 890 00a4 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 342:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 891              		.loc 1 342 0
 892 00a8 07F59C43 		add	r3, r7, #19968
 893 00ac 03F12803 		add	r3, r3, #40
 894 00b0 1846     		mov	r0, r3
 895 00b2 FFF7FEFF 		bl	UART_RS485_PutString
 343:..\src/command_processing.c ****             break;
 896              		.loc 1 343 0
 897 00b6 4BE0     		b	.L69
 898              	.L64:
 344:..\src/command_processing.c ****         case GET_SD_PARAM:
 345:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 899              		.loc 1 345 0
 900 00b8 07F59C43 		add	r3, r7, #19968
 901 00bc 03F12803 		add	r3, r3, #40
 902 00c0 4FF47A62 		mov	r2, #4000
 903 00c4 1946     		mov	r1, r3
 904 00c6 2548     		ldr	r0, .L71
 905 00c8 FFF7FEFF 		bl	Read_SD_Closed_File
 346:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 906              		.loc 1 346 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 37


 907 00cc FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 347:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 908              		.loc 1 347 0
 909 00d0 07F59C43 		add	r3, r7, #19968
 910 00d4 03F12803 		add	r3, r3, #40
 911 00d8 1846     		mov	r0, r3
 912 00da FFF7FEFF 		bl	UART_RS485_PutString
 348:..\src/command_processing.c ****             break;
 913              		.loc 1 348 0
 914 00de 37E0     		b	.L69
 915              	.L65:
 349:..\src/command_processing.c ****         case GET_SD_DATA:
 350:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 916              		.loc 1 350 0
 917 00e0 07F14803 		add	r3, r7, #72
 918 00e4 403B     		subs	r3, r3, #64
 919 00e6 44F62061 		movw	r1, #20000
 920 00ea 1846     		mov	r0, r3
 921 00ec FFF7FEFF 		bl	Read_SD_Current_Data
 351:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 922              		.loc 1 351 0
 923 00f0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 352:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 924              		.loc 1 352 0
 925 00f4 07F14803 		add	r3, r7, #72
 926 00f8 403B     		subs	r3, r3, #64
 927 00fa 1846     		mov	r0, r3
 928 00fc FFF7FEFF 		bl	UART_RS485_PutString
 353:..\src/command_processing.c ****             break;
 929              		.loc 1 353 0
 930 0100 26E0     		b	.L69
 931              	.L66:
 354:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 355:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 932              		.loc 1 355 0
 933 0102 07F14803 		add	r3, r7, #72
 934 0106 403B     		subs	r3, r3, #64
 935 0108 1846     		mov	r0, r3
 936 010a FFF7FEFF 		bl	Get_SD_FS
 356:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 937              		.loc 1 356 0
 938 010e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 357:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 939              		.loc 1 357 0
 940 0112 07F14803 		add	r3, r7, #72
 941 0116 403B     		subs	r3, r3, #64
 942 0118 1846     		mov	r0, r3
 943 011a FFF7FEFF 		bl	UART_RS485_PutString
 358:..\src/command_processing.c ****             break;
 944              		.loc 1 358 0
 945 011e 17E0     		b	.L69
 946              	.L67:
 359:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 360:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 361:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 947              		.loc 1 361 0
 948 0120 FFF7FEFF 		bl	Read_SD_EMG_History_Data
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 38


 362:..\src/command_processing.c ****             break;
 949              		.loc 1 362 0
 950 0124 14E0     		b	.L69
 951              	.L68:
 363:..\src/command_processing.c ****         case GET_SD_R01_SUMM:
 364:..\src/command_processing.c ****             Read_SD_Closed_File(sdR01File, packet_string, sizeof(packet_string));
 952              		.loc 1 364 0
 953 0126 07F59C43 		add	r3, r7, #19968
 954 012a 03F12803 		add	r3, r3, #40
 955 012e 4FF47A62 		mov	r2, #4000
 956 0132 1946     		mov	r1, r3
 957 0134 0A48     		ldr	r0, .L71+4
 958 0136 FFF7FEFF 		bl	Read_SD_Closed_File
 365:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 959              		.loc 1 365 0
 960 013a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 366:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 961              		.loc 1 366 0
 962 013e 07F59C43 		add	r3, r7, #19968
 963 0142 03F12803 		add	r3, r3, #40
 964 0146 1846     		mov	r0, r3
 965 0148 FFF7FEFF 		bl	UART_RS485_PutString
 367:..\src/command_processing.c ****             break;            
 966              		.loc 1 367 0
 967 014c 00E0     		b	.L69
 968              	.L70:
 368:..\src/command_processing.c ****         default:
 369:..\src/command_processing.c ****             break;
 969              		.loc 1 369 0
 970 014e 00BF     		nop
 971              	.L69:
 370:..\src/command_processing.c ****     }
 371:..\src/command_processing.c **** }
 972              		.loc 1 371 0 discriminator 1
 973 0150 00BF     		nop
 974 0152 07F5BB47 		add	r7, r7, #23936
 975 0156 4837     		adds	r7, r7, #72
 976              		.cfi_def_cfa_offset 8
 977 0158 BD46     		mov	sp, r7
 978              		.cfi_def_cfa_register 13
 979              		@ sp needed
 980 015a 80BD     		pop	{r7, pc}
 981              	.L72:
 982              		.align	2
 983              	.L71:
 984 015c 00000000 		.word	sdParam
 985 0160 00000000 		.word	sdR01File
 986              		.cfi_endproc
 987              	.LFE66:
 988              		.size	infoGet, .-infoGet
 989              		.global	__aeabi_i2f
 990              		.global	__aeabi_fdiv
 991              		.section	.rodata
 992              		.align	2
 993              	.LC88:
 994 0000 20557362 		.ascii	" Usb\000"
 994      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 39


 995 0005 000000   		.align	2
 996              	.LC89:
 997 0008 2048616E 		.ascii	" Handle\000"
 997      646C6500 
 998              		.align	2
 999              	.LC90:
 1000 0010 20454D47 		.ascii	" EMG proportional\000"
 1000      2070726F 
 1000      706F7274 
 1000      696F6E61 
 1000      6C00
 1001 0022 0000     		.align	2
 1002              	.LC91:
 1003 0024 20454D47 		.ascii	" EMG integral\000"
 1003      20696E74 
 1003      65677261 
 1003      6C00
 1004 0032 0000     		.align	2
 1005              	.LC92:
 1006 0034 20454D47 		.ascii	" EMG FCFS\000"
 1006      20464346 
 1006      5300
 1007 003e 0000     		.align	2
 1008              	.LC93:
 1009 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 1009      20464346 
 1009      53204164 
 1009      76616E63 
 1009      656400
 1010 0053 00       		.align	2
 1011              	.LC94:
 1012 0054 204A6F79 		.ascii	" Joystick\000"
 1012      73746963 
 1012      6B00
 1013 005e 0000     		.align	2
 1014              	.LC95:
 1015 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 1015      2070726F 
 1015      706F7274 
 1015      696F6E61 
 1015      6C204E6F 
 1016 0082 0000     		.align	2
 1017              	.LC96:
 1018 0084 20506F73 		.ascii	" Position\000"
 1018      6974696F 
 1018      6E00
 1019 008e 0000     		.align	2
 1020              	.LC97:
 1021 0090 2050574D 		.ascii	" PWM\000"
 1021      00
 1022 0095 000000   		.align	2
 1023              	.LC98:
 1024 0098 20437572 		.ascii	" Current\000"
 1024      72656E74 
 1024      00
 1025 00a1 000000   		.align	2
 1026              	.LC99:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 40


 1027 00a4 20506F73 		.ascii	" Position and Current\000"
 1027      6974696F 
 1027      6E20616E 
 1027      64204375 
 1027      7272656E 
 1028 00ba 0000     		.align	2
 1029              	.LC100:
 1030 00bc 20594553 		.ascii	" YES\000\000"
 1030      0000
 1031 00c2 0000     		.align	2
 1032              	.LC101:
 1033 00c4 204E4F00 		.ascii	" NO\000\000"
 1033      00
 1034 00c9 000000   		.align	2
 1035              	.LC102:
 1036 00cc 20526967 		.ascii	" Right\000\000"
 1036      68740000 
 1037              		.align	2
 1038              	.LC103:
 1039 00d4 204C6566 		.ascii	" Left\000\000"
 1039      740000
 1040 00db 00       		.align	2
 1041              	.LC104:
 1042 00dc 204F4646 		.ascii	" OFF\000\000"
 1042      0000
 1043 00e2 0000     		.align	2
 1044              	.LC105:
 1045 00e4 204F4E00 		.ascii	" ON\000\000"
 1045      00
 1046 00e9 000000   		.align	2
 1047              	.LC106:
 1048 00ec 204E6F6E 		.ascii	" None\000\000"
 1048      650000
 1049 00f3 00       		.align	2
 1050              	.LC107:
 1051 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 1051      52544320 
 1051      626F6172 
 1051      640000
 1052 0103 00       		.align	2
 1053              	.LC108:
 1054 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 1054      6920626F 
 1054      61726420 
 1054      5B4E2F41 
 1054      5D0000
 1055 0117 00       		.align	2
 1056              	.LC109:
 1057 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 1057      6572205B 
 1057      4E2F415D 
 1057      0000
 1058 0126 0000     		.align	2
 1059              	.LC110:
 1060 0128 204C6F77 		.ascii	" Low\000\000"
 1060      0000
 1061 012e 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 41


 1062              	.LC111:
 1063 0130 20486967 		.ascii	" High\000\000"
 1063      680000
 1064 0137 00       		.align	2
 1065              	.LC112:
 1066 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 1066      45524943 
 1066      20555345 
 1066      520000
 1067 0147 00       		.align	2
 1068              	.LC113:
 1069 0148 204D4152 		.ascii	" MARIA\000\000"
 1069      49410000 
 1070              		.align	2
 1071              	.LC114:
 1072 0150 20523031 		.ascii	" R01\000\000"
 1072      0000
 1073 0156 0000     		.align	2
 1074              	.LC115:
 1075 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 1075      33383837 
 1075      20285374 
 1075      616E6461 
 1075      72642900 
 1076 016d 000000   		.align	2
 1077              	.LC116:
 1078 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 1078      35303139 
 1078      20284869 
 1078      67682070 
 1078      6F776572 
 1079 0187 00       		.align	2
 1080              	.LC117:
 1081 0188 20455343 		.ascii	" ESC (Brushless)\000\000"
 1081      20284272 
 1081      7573686C 
 1081      65737329 
 1081      0000
 1082 019a 0000     		.align	2
 1083              	.LC118:
 1084 019c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 1084      5448414E 
 1084      44205052 
 1084      4F0000
 1085 01ab 00       		.align	2
 1086              	.LC119:
 1087 01ac 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 1087      45524943 
 1087      2032204D 
 1087      4F544F52 
 1087      530000
 1088 01bf 00       		.align	2
 1089              	.LC120:
 1090 01c0 20414952 		.ascii	" AIR CHAMBERS\000\000"
 1090      20434841 
 1090      4D424552 
 1090      530000
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 42


 1091 01cf 00       		.align	2
 1092              	.LC121:
 1093 01d0 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 1093      4F424F43 
 1093      4B205752 
 1093      49535400 
 1093      00
 1094 01e1 000000   		.align	2
 1095              	.LC122:
 1096 01e4 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 1096      5448414E 
 1096      44203220 
 1096      4D4F544F 
 1096      52530000 
 1097              		.align	2
 1098              	.LC123:
 1099 01f8 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 1099      743A7379 
 1099      6E322C20 
 1099      536C6F77 
 1099      3A73796E 
 1100 020f 00       		.align	2
 1101              	.LC124:
 1102 0210 20466173 		.ascii	" Fast:wrist,Slow:hand\000\000"
 1102      743A7772 
 1102      6973742C 
 1102      536C6F77 
 1102      3A68616E 
 1103 0227 00       		.align	2
 1104              	.LC125:
 1105 0228 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 1105      773A7379 
 1105      6E322C20 
 1105      46617374 
 1105      3A73796E 
 1106 023f 00       		.align	2
 1107              	.LC126:
 1108 0240 20536C6F 		.ascii	" Slow:wrist,Fast:hand\000\000"
 1108      773A7772 
 1108      6973742C 
 1108      46617374 
 1108      3A68616E 
 1109 0257 00       		.align	2
 1110              	.LC127:
 1111 0258 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 1111      73653A43 
 1111      572C204F 
 1111      70656E3A 
 1111      43435700 
 1112 026d 000000   		.align	2
 1113              	.LC128:
 1114 0270 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 1114      73653A43 
 1114      43572C20 
 1114      4F70656E 
 1114      3A435700 
 1115              		.section	.text.get_param_list,"ax",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 43


 1116              		.align	2
 1117              		.global	get_param_list
 1118              		.thumb
 1119              		.thumb_func
 1120              		.type	get_param_list, %function
 1121              	get_param_list:
 1122              	.LFB67:
 372:..\src/command_processing.c **** 
 373:..\src/command_processing.c **** 
 374:..\src/command_processing.c **** //==============================================================================
 375:..\src/command_processing.c **** //                                                                GET PARAM LIST
 376:..\src/command_processing.c **** //==============================================================================
 377:..\src/command_processing.c **** 
 378:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 379:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 380:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 381:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 1123              		.loc 1 381 0
 1124              		.cfi_startproc
 1125              		@ args = 16, pretend = 0, frame = 6104
 1126              		@ frame_needed = 1, uses_anonymous_args = 0
 1127 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1128              		.cfi_def_cfa_offset 20
 1129              		.cfi_offset 4, -20
 1130              		.cfi_offset 5, -16
 1131              		.cfi_offset 6, -12
 1132              		.cfi_offset 7, -8
 1133              		.cfi_offset 14, -4
 1134 0002 ADF5BE5D 		sub	sp, sp, #6080
 1135              		.cfi_def_cfa_offset 6100
 1136 0006 87B0     		sub	sp, sp, #28
 1137              		.cfi_def_cfa_offset 6128
 1138 0008 00AF     		add	r7, sp, #0
 1139              		.cfi_def_cfa_register 7
 1140 000a 07F11804 		add	r4, r7, #24
 1141 000e 0C3C     		subs	r4, r4, #12
 1142 0010 2060     		str	r0, [r4]
 1143 0012 07F11800 		add	r0, r7, #24
 1144 0016 1038     		subs	r0, r0, #16
 1145 0018 0160     		str	r1, [r0]
 1146 001a 07F11801 		add	r1, r7, #24
 1147 001e 1439     		subs	r1, r1, #20
 1148 0020 0A60     		str	r2, [r1]
 1149 0022 07F11802 		add	r2, r7, #24
 1150 0026 183A     		subs	r2, r2, #24
 1151 0028 1360     		str	r3, [r2]
 382:..\src/command_processing.c ****     
 383:..\src/command_processing.c ****     //Package to be sent variables
 384:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1152              		.loc 1 384 0
 1153 002a 07F15803 		add	r3, r7, #88
 1154 002e 043B     		subs	r3, r3, #4
 1155 0030 0022     		movs	r2, #0
 1156 0032 1A60     		str	r2, [r3]
 1157 0034 0433     		adds	r3, r3, #4
 1158 0036 41F26C72 		movw	r2, #5996
 1159 003a 0021     		movs	r1, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 44


 1160 003c 1846     		mov	r0, r3
 1161 003e FFF7FEFF 		bl	memset
 385:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1162              		.loc 1 385 0
 1163 0042 41F27073 		movw	r3, #6000
 1164 0046 07F5BE52 		add	r2, r7, #6080
 1165 004a 02F11002 		add	r2, r2, #16
 1166 004e 1380     		strh	r3, [r2]	@ movhi
 386:..\src/command_processing.c **** 
 387:..\src/command_processing.c ****     //Auxiliary variables
 388:..\src/command_processing.c ****     uint8 CYDATA i, j;
 389:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1167              		.loc 1 389 0
 1168 0050 0023     		movs	r3, #0
 1169 0052 07F5BE52 		add	r2, r7, #6080
 1170 0056 02F11502 		add	r2, r2, #21
 1171 005a 1370     		strb	r3, [r2]
 390:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1172              		.loc 1 390 0
 1173 005c 0023     		movs	r3, #0
 1174 005e 07F5BE52 		add	r2, r7, #6080
 1175 0062 02F11402 		add	r2, r2, #20
 1176 0066 1370     		strb	r3, [r2]
 391:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1177              		.loc 1 391 0
 1178 0068 0023     		movs	r3, #0
 1179 006a 07F5BE52 		add	r2, r7, #6080
 1180 006e 02F11302 		add	r2, r2, #19
 1181 0072 1370     		strb	r3, [r2]
 392:..\src/command_processing.c ****     uint8 CYDATA string_length;
 393:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1182              		.loc 1 393 0
 1183 0074 07F13803 		add	r3, r7, #56
 1184 0078 183B     		subs	r3, r3, #24
 1185 007a 0022     		movs	r2, #0
 1186 007c 1A60     		str	r2, [r3]
 1187 007e 0433     		adds	r3, r3, #4
 1188 0080 2E22     		movs	r2, #46
 1189 0082 0021     		movs	r1, #0
 1190 0084 1846     		mov	r0, r3
 1191 0086 FFF7FEFF 		bl	memset
 394:..\src/command_processing.c ****     float aux_float;
 395:..\src/command_processing.c ****     int16 aux_int16;
 396:..\src/command_processing.c ****     uint16 aux_uint16;
 397:..\src/command_processing.c ****     int32 aux_int32;
 398:..\src/command_processing.c ****     uint32 aux_uint32;
 399:..\src/command_processing.c **** 
 400:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1192              		.loc 1 400 0
 1193 008a 0023     		movs	r3, #0
 1194 008c 07F5BE52 		add	r2, r7, #6080
 1195 0090 02F10F02 		add	r2, r2, #15
 1196 0094 1370     		strb	r3, [r2]
 401:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1197              		.loc 1 401 0
 1198 0096 0123     		movs	r3, #1
 1199 0098 07F5BE52 		add	r2, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 45


 1200 009c 02F10E02 		add	r2, r2, #14
 1201 00a0 1370     		strb	r3, [r2]
 402:..\src/command_processing.c ****   
 403:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1202              		.loc 1 403 0
 1203 00a2 07F11803 		add	r3, r7, #24
 1204 00a6 0C3B     		subs	r3, r3, #12
 1205 00a8 1B68     		ldr	r3, [r3]
 1206 00aa 1B68     		ldr	r3, [r3]
 1207 00ac 07F5BE52 		add	r2, r7, #6080
 1208 00b0 02F10802 		add	r2, r2, #8
 1209 00b4 1360     		str	r3, [r2]
 404:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1210              		.loc 1 404 0
 1211 00b6 07F5BE53 		add	r3, r7, #6080
 1212 00ba 03F10803 		add	r3, r3, #8
 1213 00be 1B68     		ldr	r3, [r3]
 1214 00c0 07F5BE52 		add	r2, r7, #6080
 1215 00c4 02F10402 		add	r2, r2, #4
 1216 00c8 1360     		str	r3, [r2]
 405:..\src/command_processing.c ****         
 406:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1217              		.loc 1 406 0
 1218 00ca 07F15803 		add	r3, r7, #88
 1219 00ce 043B     		subs	r3, r3, #4
 1220 00d0 0C22     		movs	r2, #12
 1221 00d2 1A70     		strb	r2, [r3]
 407:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1222              		.loc 1 407 0
 1223 00d4 07F15803 		add	r3, r7, #88
 1224 00d8 043B     		subs	r3, r3, #4
 1225 00da 5322     		movs	r2, #83
 1226 00dc 5A70     		strb	r2, [r3, #1]
 408:..\src/command_processing.c ****     
 409:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1227              		.loc 1 409 0
 1228 00de 0023     		movs	r3, #0
 1229 00e0 07F5BE52 		add	r2, r7, #6080
 1230 00e4 02F11502 		add	r2, r2, #21
 1231 00e8 1370     		strb	r3, [r2]
 1232 00ea 03F025B8 		b	.L74
 1233              	.L279:
 410:..\src/command_processing.c ****         
 411:..\src/command_processing.c ****         // Assign m_addr memory address
 412:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1234              		.loc 1 412 0
 1235 00ee 07F5BE53 		add	r3, r7, #6080
 1236 00f2 03F11503 		add	r3, r3, #21
 1237 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1238 00f8 9A00     		lsls	r2, r3, #2
 1239 00fa 07F11803 		add	r3, r7, #24
 1240 00fe 0C3B     		subs	r3, r3, #12
 1241 0100 1B68     		ldr	r3, [r3]
 1242 0102 1344     		add	r3, r3, r2
 1243 0104 1B68     		ldr	r3, [r3]
 1244 0106 07F5BE52 		add	r2, r7, #6080
 1245 010a 02F10802 		add	r2, r2, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 46


 1246 010e 1360     		str	r3, [r2]
 413:..\src/command_processing.c ****         
 414:..\src/command_processing.c ****         // Add parameter type and size to packet
 415:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1247              		.loc 1 415 0
 1248 0110 07F5BE53 		add	r3, r7, #6080
 1249 0114 03F11503 		add	r3, r3, #21
 1250 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1251 011a 3222     		movs	r2, #50
 1252 011c 02FB03F3 		mul	r3, r2, r3
 1253 0120 9A1C     		adds	r2, r3, #2
 1254 0122 07F5BE53 		add	r3, r7, #6080
 1255 0126 03F11503 		add	r3, r3, #21
 1256 012a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1257 012c 07F11803 		add	r3, r7, #24
 1258 0130 103B     		subs	r3, r3, #16
 1259 0132 1B68     		ldr	r3, [r3]
 1260 0134 0B44     		add	r3, r3, r1
 1261 0136 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1262 0138 07F15803 		add	r3, r7, #88
 1263 013c 043B     		subs	r3, r3, #4
 1264 013e 9954     		strb	r1, [r3, r2]
 416:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1265              		.loc 1 416 0
 1266 0140 07F5BE53 		add	r3, r7, #6080
 1267 0144 03F11503 		add	r3, r3, #21
 1268 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1269 014a 3222     		movs	r2, #50
 1270 014c 02FB03F3 		mul	r3, r2, r3
 1271 0150 DA1C     		adds	r2, r3, #3
 1272 0152 07F5BE53 		add	r3, r7, #6080
 1273 0156 03F11503 		add	r3, r3, #21
 1274 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1275 015c 07F11803 		add	r3, r7, #24
 1276 0160 143B     		subs	r3, r3, #20
 1277 0162 1B68     		ldr	r3, [r3]
 1278 0164 0B44     		add	r3, r3, r1
 1279 0166 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1280 0168 07F15803 		add	r3, r7, #88
 1281 016c 043B     		subs	r3, r3, #4
 1282 016e 9954     		strb	r1, [r3, r2]
 417:..\src/command_processing.c ****         
 418:..\src/command_processing.c ****         // Find size of data
 419:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1283              		.loc 1 419 0
 1284 0170 07F5BE53 		add	r3, r7, #6080
 1285 0174 03F11503 		add	r3, r3, #21
 1286 0178 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1287 017a 07F11803 		add	r3, r7, #24
 1288 017e 103B     		subs	r3, r3, #16
 1289 0180 1B68     		ldr	r3, [r3]
 1290 0182 1344     		add	r3, r3, r2
 1291 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1292 0186 092B     		cmp	r3, #9
 1293 0188 2BD8     		bhi	.L75
 1294 018a 01A2     		adr	r2, .L77
 1295 018c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 47


 1296              		.p2align 2
 1297              	.L77:
 1298 0190 B9010000 		.word	.L76+1
 1299 0194 B9010000 		.word	.L76+1
 1300 0198 B9010000 		.word	.L76+1
 1301 019c C7010000 		.word	.L78+1
 1302 01a0 C7010000 		.word	.L78+1
 1303 01a4 D5010000 		.word	.L79+1
 1304 01a8 D5010000 		.word	.L79+1
 1305 01ac D5010000 		.word	.L79+1
 1306 01b0 E3010000 		.word	.L75+1
 1307 01b4 B9010000 		.word	.L76+1
 1308              		.p2align 1
 1309              	.L76:
 420:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 421:..\src/command_processing.c ****                 sod = 1; break;
 1310              		.loc 1 421 0
 1311 01b8 0123     		movs	r3, #1
 1312 01ba 07F5BE52 		add	r2, r7, #6080
 1313 01be 02F11302 		add	r2, r2, #19
 1314 01c2 1370     		strb	r3, [r2]
 1315 01c4 0DE0     		b	.L75
 1316              	.L78:
 422:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 423:..\src/command_processing.c ****                 sod = 2; break;
 1317              		.loc 1 423 0
 1318 01c6 0223     		movs	r3, #2
 1319 01c8 07F5BE52 		add	r2, r7, #6080
 1320 01cc 02F11302 		add	r2, r2, #19
 1321 01d0 1370     		strb	r3, [r2]
 1322 01d2 06E0     		b	.L75
 1323              	.L79:
 424:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 425:..\src/command_processing.c ****                 sod = 4; break;
 1324              		.loc 1 425 0
 1325 01d4 0423     		movs	r3, #4
 1326 01d6 07F5BE52 		add	r2, r7, #6080
 1327 01da 02F11302 		add	r2, r2, #19
 1328 01de 1370     		strb	r3, [r2]
 1329 01e0 00BF     		nop
 1330              	.L75:
 426:..\src/command_processing.c ****         }
 427:..\src/command_processing.c ****             
 428:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1331              		.loc 1 428 0
 1332 01e2 07F5BE53 		add	r3, r7, #6080
 1333 01e6 03F11503 		add	r3, r3, #21
 1334 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1335 01ec 07F5BF52 		add	r2, r7, #6112
 1336 01f0 02F11802 		add	r2, r2, #24
 1337 01f4 1268     		ldr	r2, [r2]
 1338 01f6 1344     		add	r3, r3, r2
 1339 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1340 01fa 002B     		cmp	r3, #0
 1341 01fc 40F0DA83 		bne	.L80
 429:..\src/command_processing.c ****             
 430:..\src/command_processing.c ****             // Add parameter data to packet
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 48


 431:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1342              		.loc 1 431 0
 1343 0200 07F5BE53 		add	r3, r7, #6080
 1344 0204 03F11503 		add	r3, r3, #21
 1345 0208 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1346 020a 07F11803 		add	r3, r7, #24
 1347 020e 103B     		subs	r3, r3, #16
 1348 0210 1B68     		ldr	r3, [r3]
 1349 0212 1344     		add	r3, r3, r2
 1350 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1351 0216 092B     		cmp	r3, #9
 1352 0218 02F25781 		bhi	.L114
 1353 021c 01A2     		adr	r2, .L83
 1354 021e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1355 0222 00BF     		.p2align 2
 1356              	.L83:
 1357 0224 4D020000 		.word	.L82+1
 1358 0228 09030000 		.word	.L84+1
 1359 022c 4D020000 		.word	.L82+1
 1360 0230 C5030000 		.word	.L85+1
 1361 0234 F7040000 		.word	.L86+1
 1362 0238 23060000 		.word	.L87+1
 1363 023c 53070000 		.word	.L88+1
 1364 0240 83080000 		.word	.L89+1
 1365 0244 CB240000 		.word	.L114+1
 1366 0248 4D020000 		.word	.L82+1
 1367              		.p2align 1
 1368              	.L82:
 432:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 433:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1369              		.loc 1 433 0
 1370 024c 0023     		movs	r3, #0
 1371 024e 07F5BE52 		add	r2, r7, #6080
 1372 0252 02F11702 		add	r2, r2, #23
 1373 0256 1370     		strb	r3, [r2]
 1374 0258 42E0     		b	.L90
 1375              	.L91:
 434:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1376              		.loc 1 434 0 discriminator 3
 1377 025a 07F5BE53 		add	r3, r7, #6080
 1378 025e 03F11703 		add	r3, r3, #23
 1379 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1380 0264 07F5BE52 		add	r2, r7, #6080
 1381 0268 02F11302 		add	r2, r2, #19
 1382 026c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1383 026e 02FB03F3 		mul	r3, r2, r3
 1384 0272 1A46     		mov	r2, r3
 1385 0274 07F5BE53 		add	r3, r7, #6080
 1386 0278 03F10803 		add	r3, r3, #8
 1387 027c 1B68     		ldr	r3, [r3]
 1388 027e 1344     		add	r3, r3, r2
 1389 0280 07F5BE52 		add	r2, r7, #6080
 1390 0284 02F10402 		add	r2, r2, #4
 1391 0288 1360     		str	r3, [r2]
 435:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1392              		.loc 1 435 0 discriminator 3
 1393 028a 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 49


 1394 028e 03F11503 		add	r3, r3, #21
 1395 0292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1396 0294 3222     		movs	r2, #50
 1397 0296 02FB03F3 		mul	r3, r2, r3
 1398 029a 1A1D     		adds	r2, r3, #4
 1399 029c 07F5BE53 		add	r3, r7, #6080
 1400 02a0 03F11703 		add	r3, r3, #23
 1401 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1402 02a6 07F5BE51 		add	r1, r7, #6080
 1403 02aa 01F11301 		add	r1, r1, #19
 1404 02ae 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1405 02b0 01FB03F3 		mul	r3, r1, r3
 1406 02b4 1A44     		add	r2, r2, r3
 1407 02b6 07F5BE53 		add	r3, r7, #6080
 1408 02ba 03F10403 		add	r3, r3, #4
 1409 02be 1B68     		ldr	r3, [r3]
 1410 02c0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1411 02c2 07F15803 		add	r3, r7, #88
 1412 02c6 043B     		subs	r3, r3, #4
 1413 02c8 9954     		strb	r1, [r3, r2]
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1414              		.loc 1 433 0 discriminator 3
 1415 02ca 07F5BE53 		add	r3, r7, #6080
 1416 02ce 03F11703 		add	r3, r3, #23
 1417 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1418 02d4 0133     		adds	r3, r3, #1
 1419 02d6 07F5BE52 		add	r2, r7, #6080
 1420 02da 02F11702 		add	r2, r2, #23
 1421 02de 1370     		strb	r3, [r2]
 1422              	.L90:
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1423              		.loc 1 433 0 is_stmt 0 discriminator 1
 1424 02e0 07F5BE53 		add	r3, r7, #6080
 1425 02e4 03F11503 		add	r3, r3, #21
 1426 02e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1427 02ea 07F11803 		add	r3, r7, #24
 1428 02ee 143B     		subs	r3, r3, #20
 1429 02f0 1B68     		ldr	r3, [r3]
 1430 02f2 1344     		add	r3, r3, r2
 1431 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1432 02f6 07F5BE52 		add	r2, r7, #6080
 1433 02fa 02F11702 		add	r2, r2, #23
 1434 02fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1435 0300 9A42     		cmp	r2, r3
 1436 0302 AAD3     		bcc	.L91
 436:..\src/command_processing.c ****                     }
 437:..\src/command_processing.c ****                     break;                
 1437              		.loc 1 437 0 is_stmt 1
 1438 0304 02F0E1B8 		b	.L114
 1439              	.L84:
 438:..\src/command_processing.c ****                 case TYPE_INT8:
 439:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1440              		.loc 1 439 0
 1441 0308 0023     		movs	r3, #0
 1442 030a 07F5BE52 		add	r2, r7, #6080
 1443 030e 02F11702 		add	r2, r2, #23
 1444 0312 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 50


 1445 0314 42E0     		b	.L92
 1446              	.L93:
 440:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1447              		.loc 1 440 0 discriminator 3
 1448 0316 07F5BE53 		add	r3, r7, #6080
 1449 031a 03F11703 		add	r3, r3, #23
 1450 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1451 0320 07F5BE52 		add	r2, r7, #6080
 1452 0324 02F11302 		add	r2, r2, #19
 1453 0328 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1454 032a 02FB03F3 		mul	r3, r2, r3
 1455 032e 1A46     		mov	r2, r3
 1456 0330 07F5BE53 		add	r3, r7, #6080
 1457 0334 03F10803 		add	r3, r3, #8
 1458 0338 1B68     		ldr	r3, [r3]
 1459 033a 1344     		add	r3, r3, r2
 1460 033c 07F5BE52 		add	r2, r7, #6080
 1461 0340 02F10402 		add	r2, r2, #4
 1462 0344 1360     		str	r3, [r2]
 441:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1463              		.loc 1 441 0 discriminator 3
 1464 0346 07F5BE53 		add	r3, r7, #6080
 1465 034a 03F11503 		add	r3, r3, #21
 1466 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1467 0350 3222     		movs	r2, #50
 1468 0352 02FB03F3 		mul	r3, r2, r3
 1469 0356 1A1D     		adds	r2, r3, #4
 1470 0358 07F5BE53 		add	r3, r7, #6080
 1471 035c 03F11703 		add	r3, r3, #23
 1472 0360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1473 0362 07F5BE51 		add	r1, r7, #6080
 1474 0366 01F11301 		add	r1, r1, #19
 1475 036a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1476 036c 01FB03F3 		mul	r3, r1, r3
 1477 0370 1A44     		add	r2, r2, r3
 1478 0372 07F5BE53 		add	r3, r7, #6080
 1479 0376 03F10403 		add	r3, r3, #4
 1480 037a 1B68     		ldr	r3, [r3]
 1481 037c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1482 037e 07F15803 		add	r3, r7, #88
 1483 0382 043B     		subs	r3, r3, #4
 1484 0384 9954     		strb	r1, [r3, r2]
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1485              		.loc 1 439 0 discriminator 3
 1486 0386 07F5BE53 		add	r3, r7, #6080
 1487 038a 03F11703 		add	r3, r3, #23
 1488 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1489 0390 0133     		adds	r3, r3, #1
 1490 0392 07F5BE52 		add	r2, r7, #6080
 1491 0396 02F11702 		add	r2, r2, #23
 1492 039a 1370     		strb	r3, [r2]
 1493              	.L92:
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1494              		.loc 1 439 0 is_stmt 0 discriminator 1
 1495 039c 07F5BE53 		add	r3, r7, #6080
 1496 03a0 03F11503 		add	r3, r3, #21
 1497 03a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 51


 1498 03a6 07F11803 		add	r3, r7, #24
 1499 03aa 143B     		subs	r3, r3, #20
 1500 03ac 1B68     		ldr	r3, [r3]
 1501 03ae 1344     		add	r3, r3, r2
 1502 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1503 03b2 07F5BE52 		add	r2, r7, #6080
 1504 03b6 02F11702 		add	r2, r2, #23
 1505 03ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1506 03bc 9A42     		cmp	r2, r3
 1507 03be AAD3     		bcc	.L93
 442:..\src/command_processing.c ****                     }
 443:..\src/command_processing.c ****                     break;
 1508              		.loc 1 443 0 is_stmt 1
 1509 03c0 02F083B8 		b	.L114
 1510              	.L85:
 444:..\src/command_processing.c ****                 case TYPE_INT16:
 445:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1511              		.loc 1 445 0
 1512 03c4 0023     		movs	r3, #0
 1513 03c6 07F5BE52 		add	r2, r7, #6080
 1514 03ca 02F11702 		add	r2, r2, #23
 1515 03ce 1370     		strb	r3, [r2]
 1516 03d0 7CE0     		b	.L94
 1517              	.L97:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1518              		.loc 1 446 0
 1519 03d2 07F5BE53 		add	r3, r7, #6080
 1520 03d6 03F11703 		add	r3, r3, #23
 1521 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1522 03dc 07F5BE52 		add	r2, r7, #6080
 1523 03e0 02F11302 		add	r2, r2, #19
 1524 03e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1525 03e6 02FB03F3 		mul	r3, r2, r3
 1526 03ea 1A46     		mov	r2, r3
 1527 03ec 07F5BE53 		add	r3, r7, #6080
 1528 03f0 03F10803 		add	r3, r3, #8
 1529 03f4 1B68     		ldr	r3, [r3]
 1530 03f6 1344     		add	r3, r3, r2
 1531 03f8 07F5BE52 		add	r2, r7, #6080
 1532 03fc 02F10402 		add	r2, r2, #4
 1533 0400 1360     		str	r3, [r2]
 447:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1534              		.loc 1 447 0
 1535 0402 07F5BE53 		add	r3, r7, #6080
 1536 0406 03F10403 		add	r3, r3, #4
 1537 040a 1B68     		ldr	r3, [r3]
 1538 040c B3F90020 		ldrsh	r2, [r3]
 1539 0410 07F13803 		add	r3, r7, #56
 1540 0414 1E3B     		subs	r3, r3, #30
 1541 0416 1A80     		strh	r2, [r3]	@ movhi
 448:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1542              		.loc 1 448 0
 1543 0418 0023     		movs	r3, #0
 1544 041a 07F5BE52 		add	r2, r7, #6080
 1545 041e 02F11602 		add	r2, r2, #22
 1546 0422 1370     		strb	r3, [r2]
 1547 0424 3BE0     		b	.L95
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 52


 1548              	.L96:
 449:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1549              		.loc 1 449 0 discriminator 3
 1550 0426 07F5BE53 		add	r3, r7, #6080
 1551 042a 03F11503 		add	r3, r3, #21
 1552 042e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1553 0430 3222     		movs	r2, #50
 1554 0432 02FB03F3 		mul	r3, r2, r3
 1555 0436 1A1D     		adds	r2, r3, #4
 1556 0438 07F5BE53 		add	r3, r7, #6080
 1557 043c 03F11703 		add	r3, r3, #23
 1558 0440 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1559 0442 07F5BE51 		add	r1, r7, #6080
 1560 0446 01F11301 		add	r1, r1, #19
 1561 044a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1562 044c 01FB03F3 		mul	r3, r1, r3
 1563 0450 1A44     		add	r2, r2, r3
 1564 0452 07F5BE53 		add	r3, r7, #6080
 1565 0456 03F11303 		add	r3, r3, #19
 1566 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1567 045c 1A44     		add	r2, r2, r3
 1568 045e 07F5BE53 		add	r3, r7, #6080
 1569 0462 03F11603 		add	r3, r3, #22
 1570 0466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1571 0468 D31A     		subs	r3, r2, r3
 1572 046a 5A1E     		subs	r2, r3, #1
 1573 046c 07F5BE53 		add	r3, r7, #6080
 1574 0470 03F11603 		add	r3, r3, #22
 1575 0474 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1576 0476 07F13803 		add	r3, r7, #56
 1577 047a 1E3B     		subs	r3, r3, #30
 1578 047c 0B44     		add	r3, r3, r1
 1579 047e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1580 0480 07F15803 		add	r3, r7, #88
 1581 0484 043B     		subs	r3, r3, #4
 1582 0486 9954     		strb	r1, [r3, r2]
 448:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1583              		.loc 1 448 0 discriminator 3
 1584 0488 07F5BE53 		add	r3, r7, #6080
 1585 048c 03F11603 		add	r3, r3, #22
 1586 0490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1587 0492 0133     		adds	r3, r3, #1
 1588 0494 07F5BE52 		add	r2, r7, #6080
 1589 0498 02F11602 		add	r2, r2, #22
 1590 049c 1370     		strb	r3, [r2]
 1591              	.L95:
 448:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1592              		.loc 1 448 0 is_stmt 0 discriminator 1
 1593 049e 07F5BE53 		add	r3, r7, #6080
 1594 04a2 03F11603 		add	r3, r3, #22
 1595 04a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1596 04a8 07F5BE53 		add	r3, r7, #6080
 1597 04ac 03F11303 		add	r3, r3, #19
 1598 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1599 04b2 9A42     		cmp	r2, r3
 1600 04b4 B7D3     		bcc	.L96
 445:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 53


 1601              		.loc 1 445 0 is_stmt 1 discriminator 2
 1602 04b6 07F5BE53 		add	r3, r7, #6080
 1603 04ba 03F11703 		add	r3, r3, #23
 1604 04be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1605 04c0 0133     		adds	r3, r3, #1
 1606 04c2 07F5BE52 		add	r2, r7, #6080
 1607 04c6 02F11702 		add	r2, r2, #23
 1608 04ca 1370     		strb	r3, [r2]
 1609              	.L94:
 445:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1610              		.loc 1 445 0 is_stmt 0 discriminator 1
 1611 04cc 07F5BE53 		add	r3, r7, #6080
 1612 04d0 03F11503 		add	r3, r3, #21
 1613 04d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1614 04d6 07F11803 		add	r3, r7, #24
 1615 04da 143B     		subs	r3, r3, #20
 1616 04dc 1B68     		ldr	r3, [r3]
 1617 04de 1344     		add	r3, r3, r2
 1618 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1619 04e2 07F5BE52 		add	r2, r7, #6080
 1620 04e6 02F11702 		add	r2, r2, #23
 1621 04ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1622 04ec 9A42     		cmp	r2, r3
 1623 04ee FFF470AF 		bcc	.L97
 450:..\src/command_processing.c ****                         }
 451:..\src/command_processing.c ****                     }
 452:..\src/command_processing.c ****                     break;
 1624              		.loc 1 452 0 is_stmt 1
 1625 04f2 01F0EABF 		b	.L114
 1626              	.L86:
 453:..\src/command_processing.c ****                 case TYPE_UINT16:
 454:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1627              		.loc 1 454 0
 1628 04f6 0023     		movs	r3, #0
 1629 04f8 07F5BE52 		add	r2, r7, #6080
 1630 04fc 02F11702 		add	r2, r2, #23
 1631 0500 1370     		strb	r3, [r2]
 1632 0502 79E0     		b	.L98
 1633              	.L101:
 455:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1634              		.loc 1 455 0
 1635 0504 07F5BE53 		add	r3, r7, #6080
 1636 0508 03F11703 		add	r3, r3, #23
 1637 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1638 050e 07F5BE52 		add	r2, r7, #6080
 1639 0512 02F11302 		add	r2, r2, #19
 1640 0516 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1641 0518 02FB03F3 		mul	r3, r2, r3
 1642 051c 1A46     		mov	r2, r3
 1643 051e 07F5BE53 		add	r3, r7, #6080
 1644 0522 03F10803 		add	r3, r3, #8
 1645 0526 1B68     		ldr	r3, [r3]
 1646 0528 1344     		add	r3, r3, r2
 1647 052a 07F5BE52 		add	r2, r7, #6080
 1648 052e 02F10402 		add	r2, r2, #4
 1649 0532 1360     		str	r3, [r2]
 456:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 54


 1650              		.loc 1 456 0
 1651 0534 07F5BE53 		add	r3, r7, #6080
 1652 0538 03F10403 		add	r3, r3, #4
 1653 053c 1B68     		ldr	r3, [r3]
 1654 053e 1A88     		ldrh	r2, [r3]
 1655 0540 07F11803 		add	r3, r7, #24
 1656 0544 1A80     		strh	r2, [r3]	@ movhi
 457:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1657              		.loc 1 457 0
 1658 0546 0023     		movs	r3, #0
 1659 0548 07F5BE52 		add	r2, r7, #6080
 1660 054c 02F11602 		add	r2, r2, #22
 1661 0550 1370     		strb	r3, [r2]
 1662 0552 3AE0     		b	.L99
 1663              	.L100:
 458:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1664              		.loc 1 458 0 discriminator 3
 1665 0554 07F5BE53 		add	r3, r7, #6080
 1666 0558 03F11503 		add	r3, r3, #21
 1667 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1668 055e 3222     		movs	r2, #50
 1669 0560 02FB03F3 		mul	r3, r2, r3
 1670 0564 1A1D     		adds	r2, r3, #4
 1671 0566 07F5BE53 		add	r3, r7, #6080
 1672 056a 03F11703 		add	r3, r3, #23
 1673 056e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1674 0570 07F5BE51 		add	r1, r7, #6080
 1675 0574 01F11301 		add	r1, r1, #19
 1676 0578 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1677 057a 01FB03F3 		mul	r3, r1, r3
 1678 057e 1A44     		add	r2, r2, r3
 1679 0580 07F5BE53 		add	r3, r7, #6080
 1680 0584 03F11303 		add	r3, r3, #19
 1681 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1682 058a 1A44     		add	r2, r2, r3
 1683 058c 07F5BE53 		add	r3, r7, #6080
 1684 0590 03F11603 		add	r3, r3, #22
 1685 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1686 0596 D31A     		subs	r3, r2, r3
 1687 0598 5A1E     		subs	r2, r3, #1
 1688 059a 07F5BE53 		add	r3, r7, #6080
 1689 059e 03F11603 		add	r3, r3, #22
 1690 05a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1691 05a4 07F11801 		add	r1, r7, #24
 1692 05a8 0B44     		add	r3, r3, r1
 1693 05aa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1694 05ac 07F15803 		add	r3, r7, #88
 1695 05b0 043B     		subs	r3, r3, #4
 1696 05b2 9954     		strb	r1, [r3, r2]
 457:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1697              		.loc 1 457 0 discriminator 3
 1698 05b4 07F5BE53 		add	r3, r7, #6080
 1699 05b8 03F11603 		add	r3, r3, #22
 1700 05bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1701 05be 0133     		adds	r3, r3, #1
 1702 05c0 07F5BE52 		add	r2, r7, #6080
 1703 05c4 02F11602 		add	r2, r2, #22
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 55


 1704 05c8 1370     		strb	r3, [r2]
 1705              	.L99:
 457:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1706              		.loc 1 457 0 is_stmt 0 discriminator 1
 1707 05ca 07F5BE53 		add	r3, r7, #6080
 1708 05ce 03F11603 		add	r3, r3, #22
 1709 05d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1710 05d4 07F5BE53 		add	r3, r7, #6080
 1711 05d8 03F11303 		add	r3, r3, #19
 1712 05dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1713 05de 9A42     		cmp	r2, r3
 1714 05e0 B8D3     		bcc	.L100
 454:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1715              		.loc 1 454 0 is_stmt 1 discriminator 2
 1716 05e2 07F5BE53 		add	r3, r7, #6080
 1717 05e6 03F11703 		add	r3, r3, #23
 1718 05ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1719 05ec 0133     		adds	r3, r3, #1
 1720 05ee 07F5BE52 		add	r2, r7, #6080
 1721 05f2 02F11702 		add	r2, r2, #23
 1722 05f6 1370     		strb	r3, [r2]
 1723              	.L98:
 454:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1724              		.loc 1 454 0 is_stmt 0 discriminator 1
 1725 05f8 07F5BE53 		add	r3, r7, #6080
 1726 05fc 03F11503 		add	r3, r3, #21
 1727 0600 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1728 0602 07F11803 		add	r3, r7, #24
 1729 0606 143B     		subs	r3, r3, #20
 1730 0608 1B68     		ldr	r3, [r3]
 1731 060a 1344     		add	r3, r3, r2
 1732 060c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1733 060e 07F5BE52 		add	r2, r7, #6080
 1734 0612 02F11702 		add	r2, r2, #23
 1735 0616 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1736 0618 9A42     		cmp	r2, r3
 1737 061a FFF473AF 		bcc	.L101
 459:..\src/command_processing.c ****                         }
 460:..\src/command_processing.c ****                     }
 461:..\src/command_processing.c ****                     break;
 1738              		.loc 1 461 0 is_stmt 1
 1739 061e 01F054BF 		b	.L114
 1740              	.L87:
 462:..\src/command_processing.c ****                 case TYPE_INT32: 
 463:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1741              		.loc 1 463 0
 1742 0622 0023     		movs	r3, #0
 1743 0624 07F5BE52 		add	r2, r7, #6080
 1744 0628 02F11702 		add	r2, r2, #23
 1745 062c 1370     		strb	r3, [r2]
 1746 062e 7BE0     		b	.L102
 1747              	.L105:
 464:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1748              		.loc 1 464 0
 1749 0630 07F5BE53 		add	r3, r7, #6080
 1750 0634 03F11703 		add	r3, r3, #23
 1751 0638 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 56


 1752 063a 07F5BE52 		add	r2, r7, #6080
 1753 063e 02F11302 		add	r2, r2, #19
 1754 0642 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1755 0644 02FB03F3 		mul	r3, r2, r3
 1756 0648 1A46     		mov	r2, r3
 1757 064a 07F5BE53 		add	r3, r7, #6080
 1758 064e 03F10803 		add	r3, r3, #8
 1759 0652 1B68     		ldr	r3, [r3]
 1760 0654 1344     		add	r3, r3, r2
 1761 0656 07F5BE52 		add	r2, r7, #6080
 1762 065a 02F10402 		add	r2, r2, #4
 1763 065e 1360     		str	r3, [r2]
 465:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1764              		.loc 1 465 0
 1765 0660 07F5BE53 		add	r3, r7, #6080
 1766 0664 03F10403 		add	r3, r3, #4
 1767 0668 1B68     		ldr	r3, [r3]
 1768 066a 1A68     		ldr	r2, [r3]
 1769 066c 07F11803 		add	r3, r7, #24
 1770 0670 043B     		subs	r3, r3, #4
 1771 0672 1A60     		str	r2, [r3]
 466:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1772              		.loc 1 466 0
 1773 0674 0023     		movs	r3, #0
 1774 0676 07F5BE52 		add	r2, r7, #6080
 1775 067a 02F11602 		add	r2, r2, #22
 1776 067e 1370     		strb	r3, [r2]
 1777 0680 3BE0     		b	.L103
 1778              	.L104:
 467:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1779              		.loc 1 467 0 discriminator 3
 1780 0682 07F5BE53 		add	r3, r7, #6080
 1781 0686 03F11503 		add	r3, r3, #21
 1782 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1783 068c 3222     		movs	r2, #50
 1784 068e 02FB03F3 		mul	r3, r2, r3
 1785 0692 1A1D     		adds	r2, r3, #4
 1786 0694 07F5BE53 		add	r3, r7, #6080
 1787 0698 03F11703 		add	r3, r3, #23
 1788 069c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1789 069e 07F5BE51 		add	r1, r7, #6080
 1790 06a2 01F11301 		add	r1, r1, #19
 1791 06a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1792 06a8 01FB03F3 		mul	r3, r1, r3
 1793 06ac 1A44     		add	r2, r2, r3
 1794 06ae 07F5BE53 		add	r3, r7, #6080
 1795 06b2 03F11303 		add	r3, r3, #19
 1796 06b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1797 06b8 1A44     		add	r2, r2, r3
 1798 06ba 07F5BE53 		add	r3, r7, #6080
 1799 06be 03F11603 		add	r3, r3, #22
 1800 06c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 06c4 D31A     		subs	r3, r2, r3
 1802 06c6 5A1E     		subs	r2, r3, #1
 1803 06c8 07F5BE53 		add	r3, r7, #6080
 1804 06cc 03F11603 		add	r3, r3, #22
 1805 06d0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 57


 1806 06d2 07F11803 		add	r3, r7, #24
 1807 06d6 043B     		subs	r3, r3, #4
 1808 06d8 0B44     		add	r3, r3, r1
 1809 06da 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1810 06dc 07F15803 		add	r3, r7, #88
 1811 06e0 043B     		subs	r3, r3, #4
 1812 06e2 9954     		strb	r1, [r3, r2]
 466:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1813              		.loc 1 466 0 discriminator 3
 1814 06e4 07F5BE53 		add	r3, r7, #6080
 1815 06e8 03F11603 		add	r3, r3, #22
 1816 06ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1817 06ee 0133     		adds	r3, r3, #1
 1818 06f0 07F5BE52 		add	r2, r7, #6080
 1819 06f4 02F11602 		add	r2, r2, #22
 1820 06f8 1370     		strb	r3, [r2]
 1821              	.L103:
 466:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1822              		.loc 1 466 0 is_stmt 0 discriminator 1
 1823 06fa 07F5BE53 		add	r3, r7, #6080
 1824 06fe 03F11603 		add	r3, r3, #22
 1825 0702 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1826 0704 07F5BE53 		add	r3, r7, #6080
 1827 0708 03F11303 		add	r3, r3, #19
 1828 070c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1829 070e 9A42     		cmp	r2, r3
 1830 0710 B7D3     		bcc	.L104
 463:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1831              		.loc 1 463 0 is_stmt 1 discriminator 2
 1832 0712 07F5BE53 		add	r3, r7, #6080
 1833 0716 03F11703 		add	r3, r3, #23
 1834 071a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1835 071c 0133     		adds	r3, r3, #1
 1836 071e 07F5BE52 		add	r2, r7, #6080
 1837 0722 02F11702 		add	r2, r2, #23
 1838 0726 1370     		strb	r3, [r2]
 1839              	.L102:
 463:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1840              		.loc 1 463 0 is_stmt 0 discriminator 1
 1841 0728 07F5BE53 		add	r3, r7, #6080
 1842 072c 03F11503 		add	r3, r3, #21
 1843 0730 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1844 0732 07F11803 		add	r3, r7, #24
 1845 0736 143B     		subs	r3, r3, #20
 1846 0738 1B68     		ldr	r3, [r3]
 1847 073a 1344     		add	r3, r3, r2
 1848 073c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1849 073e 07F5BE52 		add	r2, r7, #6080
 1850 0742 02F11702 		add	r2, r2, #23
 1851 0746 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1852 0748 9A42     		cmp	r2, r3
 1853 074a FFF471AF 		bcc	.L105
 468:..\src/command_processing.c ****                         }
 469:..\src/command_processing.c ****                     }
 470:..\src/command_processing.c ****                     break;
 1854              		.loc 1 470 0 is_stmt 1
 1855 074e 01F0BCBE 		b	.L114
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 58


 1856              	.L88:
 471:..\src/command_processing.c ****                 case TYPE_UINT32: 
 472:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1857              		.loc 1 472 0
 1858 0752 0023     		movs	r3, #0
 1859 0754 07F5BE52 		add	r2, r7, #6080
 1860 0758 02F11702 		add	r2, r2, #23
 1861 075c 1370     		strb	r3, [r2]
 1862 075e 7BE0     		b	.L106
 1863              	.L109:
 473:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1864              		.loc 1 473 0
 1865 0760 07F5BE53 		add	r3, r7, #6080
 1866 0764 03F11703 		add	r3, r3, #23
 1867 0768 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1868 076a 07F5BE52 		add	r2, r7, #6080
 1869 076e 02F11302 		add	r2, r2, #19
 1870 0772 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1871 0774 02FB03F3 		mul	r3, r2, r3
 1872 0778 1A46     		mov	r2, r3
 1873 077a 07F5BE53 		add	r3, r7, #6080
 1874 077e 03F10803 		add	r3, r3, #8
 1875 0782 1B68     		ldr	r3, [r3]
 1876 0784 1344     		add	r3, r3, r2
 1877 0786 07F5BE52 		add	r2, r7, #6080
 1878 078a 02F10402 		add	r2, r2, #4
 1879 078e 1360     		str	r3, [r2]
 474:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1880              		.loc 1 474 0
 1881 0790 07F5BE53 		add	r3, r7, #6080
 1882 0794 03F10403 		add	r3, r3, #4
 1883 0798 1B68     		ldr	r3, [r3]
 1884 079a 1A68     		ldr	r2, [r3]
 1885 079c 07F11803 		add	r3, r7, #24
 1886 07a0 083B     		subs	r3, r3, #8
 1887 07a2 1A60     		str	r2, [r3]
 475:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1888              		.loc 1 475 0
 1889 07a4 0023     		movs	r3, #0
 1890 07a6 07F5BE52 		add	r2, r7, #6080
 1891 07aa 02F11602 		add	r2, r2, #22
 1892 07ae 1370     		strb	r3, [r2]
 1893 07b0 3BE0     		b	.L107
 1894              	.L108:
 476:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1895              		.loc 1 476 0 discriminator 3
 1896 07b2 07F5BE53 		add	r3, r7, #6080
 1897 07b6 03F11503 		add	r3, r3, #21
 1898 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1899 07bc 3222     		movs	r2, #50
 1900 07be 02FB03F3 		mul	r3, r2, r3
 1901 07c2 1A1D     		adds	r2, r3, #4
 1902 07c4 07F5BE53 		add	r3, r7, #6080
 1903 07c8 03F11703 		add	r3, r3, #23
 1904 07cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1905 07ce 07F5BE51 		add	r1, r7, #6080
 1906 07d2 01F11301 		add	r1, r1, #19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 59


 1907 07d6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1908 07d8 01FB03F3 		mul	r3, r1, r3
 1909 07dc 1A44     		add	r2, r2, r3
 1910 07de 07F5BE53 		add	r3, r7, #6080
 1911 07e2 03F11303 		add	r3, r3, #19
 1912 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1913 07e8 1A44     		add	r2, r2, r3
 1914 07ea 07F5BE53 		add	r3, r7, #6080
 1915 07ee 03F11603 		add	r3, r3, #22
 1916 07f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1917 07f4 D31A     		subs	r3, r2, r3
 1918 07f6 5A1E     		subs	r2, r3, #1
 1919 07f8 07F5BE53 		add	r3, r7, #6080
 1920 07fc 03F11603 		add	r3, r3, #22
 1921 0800 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1922 0802 07F11803 		add	r3, r7, #24
 1923 0806 083B     		subs	r3, r3, #8
 1924 0808 0B44     		add	r3, r3, r1
 1925 080a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1926 080c 07F15803 		add	r3, r7, #88
 1927 0810 043B     		subs	r3, r3, #4
 1928 0812 9954     		strb	r1, [r3, r2]
 475:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1929              		.loc 1 475 0 discriminator 3
 1930 0814 07F5BE53 		add	r3, r7, #6080
 1931 0818 03F11603 		add	r3, r3, #22
 1932 081c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1933 081e 0133     		adds	r3, r3, #1
 1934 0820 07F5BE52 		add	r2, r7, #6080
 1935 0824 02F11602 		add	r2, r2, #22
 1936 0828 1370     		strb	r3, [r2]
 1937              	.L107:
 475:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1938              		.loc 1 475 0 is_stmt 0 discriminator 1
 1939 082a 07F5BE53 		add	r3, r7, #6080
 1940 082e 03F11603 		add	r3, r3, #22
 1941 0832 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1942 0834 07F5BE53 		add	r3, r7, #6080
 1943 0838 03F11303 		add	r3, r3, #19
 1944 083c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1945 083e 9A42     		cmp	r2, r3
 1946 0840 B7D3     		bcc	.L108
 472:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1947              		.loc 1 472 0 is_stmt 1 discriminator 2
 1948 0842 07F5BE53 		add	r3, r7, #6080
 1949 0846 03F11703 		add	r3, r3, #23
 1950 084a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1951 084c 0133     		adds	r3, r3, #1
 1952 084e 07F5BE52 		add	r2, r7, #6080
 1953 0852 02F11702 		add	r2, r2, #23
 1954 0856 1370     		strb	r3, [r2]
 1955              	.L106:
 472:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1956              		.loc 1 472 0 is_stmt 0 discriminator 1
 1957 0858 07F5BE53 		add	r3, r7, #6080
 1958 085c 03F11503 		add	r3, r3, #21
 1959 0860 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 60


 1960 0862 07F11803 		add	r3, r7, #24
 1961 0866 143B     		subs	r3, r3, #20
 1962 0868 1B68     		ldr	r3, [r3]
 1963 086a 1344     		add	r3, r3, r2
 1964 086c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1965 086e 07F5BE52 		add	r2, r7, #6080
 1966 0872 02F11702 		add	r2, r2, #23
 1967 0876 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1968 0878 9A42     		cmp	r2, r3
 1969 087a FFF471AF 		bcc	.L109
 477:..\src/command_processing.c ****                         }
 478:..\src/command_processing.c ****                     }
 479:..\src/command_processing.c ****                     break;
 1970              		.loc 1 479 0 is_stmt 1
 1971 087e 01F024BE 		b	.L114
 1972              	.L89:
 480:..\src/command_processing.c ****                     
 481:..\src/command_processing.c ****                 case TYPE_FLOAT:
 482:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1973              		.loc 1 482 0
 1974 0882 0023     		movs	r3, #0
 1975 0884 07F5BE52 		add	r2, r7, #6080
 1976 0888 02F11702 		add	r2, r2, #23
 1977 088c 1370     		strb	r3, [r2]
 1978 088e 7BE0     		b	.L110
 1979              	.L113:
 483:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1980              		.loc 1 483 0
 1981 0890 07F5BE53 		add	r3, r7, #6080
 1982 0894 03F11703 		add	r3, r3, #23
 1983 0898 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1984 089a 07F5BE52 		add	r2, r7, #6080
 1985 089e 02F11302 		add	r2, r2, #19
 1986 08a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1987 08a4 02FB03F3 		mul	r3, r2, r3
 1988 08a8 1A46     		mov	r2, r3
 1989 08aa 07F5BE53 		add	r3, r7, #6080
 1990 08ae 03F10803 		add	r3, r3, #8
 1991 08b2 1B68     		ldr	r3, [r3]
 1992 08b4 1344     		add	r3, r3, r2
 1993 08b6 07F5BE52 		add	r2, r7, #6080
 1994 08ba 02F10402 		add	r2, r2, #4
 1995 08be 1360     		str	r3, [r2]
 484:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1996              		.loc 1 484 0
 1997 08c0 07F5BE53 		add	r3, r7, #6080
 1998 08c4 03F10403 		add	r3, r3, #4
 1999 08c8 1B68     		ldr	r3, [r3]
 2000 08ca 1A68     		ldr	r2, [r3]	@ float
 2001 08cc 07F13803 		add	r3, r7, #56
 2002 08d0 1C3B     		subs	r3, r3, #28
 2003 08d2 1A60     		str	r2, [r3]	@ float
 485:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2004              		.loc 1 485 0
 2005 08d4 0023     		movs	r3, #0
 2006 08d6 07F5BE52 		add	r2, r7, #6080
 2007 08da 02F11602 		add	r2, r2, #22
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 61


 2008 08de 1370     		strb	r3, [r2]
 2009 08e0 3BE0     		b	.L111
 2010              	.L112:
 486:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2011              		.loc 1 486 0 discriminator 3
 2012 08e2 07F5BE53 		add	r3, r7, #6080
 2013 08e6 03F11503 		add	r3, r3, #21
 2014 08ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2015 08ec 3222     		movs	r2, #50
 2016 08ee 02FB03F3 		mul	r3, r2, r3
 2017 08f2 1A1D     		adds	r2, r3, #4
 2018 08f4 07F5BE53 		add	r3, r7, #6080
 2019 08f8 03F11703 		add	r3, r3, #23
 2020 08fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2021 08fe 07F5BE51 		add	r1, r7, #6080
 2022 0902 01F11301 		add	r1, r1, #19
 2023 0906 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 2024 0908 01FB03F3 		mul	r3, r1, r3
 2025 090c 1A44     		add	r2, r2, r3
 2026 090e 07F5BE53 		add	r3, r7, #6080
 2027 0912 03F11303 		add	r3, r3, #19
 2028 0916 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2029 0918 1A44     		add	r2, r2, r3
 2030 091a 07F5BE53 		add	r3, r7, #6080
 2031 091e 03F11603 		add	r3, r3, #22
 2032 0922 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2033 0924 D31A     		subs	r3, r2, r3
 2034 0926 5A1E     		subs	r2, r3, #1
 2035 0928 07F5BE53 		add	r3, r7, #6080
 2036 092c 03F11603 		add	r3, r3, #22
 2037 0930 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2038 0932 07F13803 		add	r3, r7, #56
 2039 0936 1C3B     		subs	r3, r3, #28
 2040 0938 0B44     		add	r3, r3, r1
 2041 093a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2042 093c 07F15803 		add	r3, r7, #88
 2043 0940 043B     		subs	r3, r3, #4
 2044 0942 9954     		strb	r1, [r3, r2]
 485:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2045              		.loc 1 485 0 discriminator 3
 2046 0944 07F5BE53 		add	r3, r7, #6080
 2047 0948 03F11603 		add	r3, r3, #22
 2048 094c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2049 094e 0133     		adds	r3, r3, #1
 2050 0950 07F5BE52 		add	r2, r7, #6080
 2051 0954 02F11602 		add	r2, r2, #22
 2052 0958 1370     		strb	r3, [r2]
 2053              	.L111:
 485:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2054              		.loc 1 485 0 is_stmt 0 discriminator 1
 2055 095a 07F5BE53 		add	r3, r7, #6080
 2056 095e 03F11603 		add	r3, r3, #22
 2057 0962 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2058 0964 07F5BE53 		add	r3, r7, #6080
 2059 0968 03F11303 		add	r3, r3, #19
 2060 096c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2061 096e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 62


 2062 0970 B7D3     		bcc	.L112
 482:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2063              		.loc 1 482 0 is_stmt 1 discriminator 2
 2064 0972 07F5BE53 		add	r3, r7, #6080
 2065 0976 03F11703 		add	r3, r3, #23
 2066 097a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2067 097c 0133     		adds	r3, r3, #1
 2068 097e 07F5BE52 		add	r2, r7, #6080
 2069 0982 02F11702 		add	r2, r2, #23
 2070 0986 1370     		strb	r3, [r2]
 2071              	.L110:
 482:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2072              		.loc 1 482 0 is_stmt 0 discriminator 1
 2073 0988 07F5BE53 		add	r3, r7, #6080
 2074 098c 03F11503 		add	r3, r3, #21
 2075 0990 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2076 0992 07F11803 		add	r3, r7, #24
 2077 0996 143B     		subs	r3, r3, #20
 2078 0998 1B68     		ldr	r3, [r3]
 2079 099a 1344     		add	r3, r3, r2
 2080 099c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2081 099e 07F5BE52 		add	r2, r7, #6080
 2082 09a2 02F11702 		add	r2, r2, #23
 2083 09a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2084 09a8 9A42     		cmp	r2, r3
 2085 09aa FFF471AF 		bcc	.L113
 487:..\src/command_processing.c ****                         }
 488:..\src/command_processing.c ****                     }
 489:..\src/command_processing.c ****                     break;   
 2086              		.loc 1 489 0 is_stmt 1 discriminator 7
 2087 09ae 00BF     		nop
 2088 09b0 01F08BBD 		b	.L114
 2089              	.L80:
 490:..\src/command_processing.c ****             }
 491:..\src/command_processing.c ****         }
 492:..\src/command_processing.c ****         else {
 493:..\src/command_processing.c ****             
 494:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 495:..\src/command_processing.c ****             
 496:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 497:..\src/command_processing.c ****                 switch(idx+1){
 2090              		.loc 1 497 0
 2091 09b4 07F5BE53 		add	r3, r7, #6080
 2092 09b8 03F11503 		add	r3, r3, #21
 2093 09bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2094 09be 0133     		adds	r3, r3, #1
 2095 09c0 023B     		subs	r3, r3, #2
 2096 09c2 332B     		cmp	r3, #51
 2097 09c4 01F28085 		bhi	.L284
 2098 09c8 01A2     		adr	r2, .L117
 2099 09ca 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2100 09ce 00BF     		.p2align 2
 2101              	.L117:
 2102 09d0 A10A0000 		.word	.L116+1
 2103 09d4 6D0F0000 		.word	.L118+1
 2104 09d8 C9240000 		.word	.L284+1
 2105 09dc C9240000 		.word	.L284+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 63


 2106 09e0 C9240000 		.word	.L284+1
 2107 09e4 C9240000 		.word	.L284+1
 2108 09e8 37140000 		.word	.L119+1
 2109 09ec C9240000 		.word	.L284+1
 2110 09f0 C9240000 		.word	.L284+1
 2111 09f4 AB150000 		.word	.L120+1
 2112 09f8 C9240000 		.word	.L284+1
 2113 09fc C9240000 		.word	.L284+1
 2114 0a00 C9240000 		.word	.L284+1
 2115 0a04 C9240000 		.word	.L284+1
 2116 0a08 C9240000 		.word	.L284+1
 2117 0a0c C9240000 		.word	.L284+1
 2118 0a10 C9240000 		.word	.L284+1
 2119 0a14 C9240000 		.word	.L284+1
 2120 0a18 C9240000 		.word	.L284+1
 2121 0a1c C9240000 		.word	.L284+1
 2122 0a20 C9240000 		.word	.L284+1
 2123 0a24 79170000 		.word	.L121+1
 2124 0a28 C9240000 		.word	.L284+1
 2125 0a2c C9240000 		.word	.L284+1
 2126 0a30 C9240000 		.word	.L284+1
 2127 0a34 C9240000 		.word	.L284+1
 2128 0a38 C9240000 		.word	.L284+1
 2129 0a3c C9240000 		.word	.L284+1
 2130 0a40 C9240000 		.word	.L284+1
 2131 0a44 C9240000 		.word	.L284+1
 2132 0a48 C9240000 		.word	.L284+1
 2133 0a4c C9240000 		.word	.L284+1
 2134 0a50 C9240000 		.word	.L284+1
 2135 0a54 C9240000 		.word	.L284+1
 2136 0a58 C9240000 		.word	.L284+1
 2137 0a5c C9240000 		.word	.L284+1
 2138 0a60 C9240000 		.word	.L284+1
 2139 0a64 C9240000 		.word	.L284+1
 2140 0a68 C9240000 		.word	.L284+1
 2141 0a6c C9240000 		.word	.L284+1
 2142 0a70 C9240000 		.word	.L284+1
 2143 0a74 C9240000 		.word	.L284+1
 2144 0a78 43180000 		.word	.L122+1
 2145 0a7c 111D0000 		.word	.L123+1
 2146 0a80 C9240000 		.word	.L284+1
 2147 0a84 C9240000 		.word	.L284+1
 2148 0a88 C9240000 		.word	.L284+1
 2149 0a8c C9240000 		.word	.L284+1
 2150 0a90 DB210000 		.word	.L124+1
 2151 0a94 C9240000 		.word	.L284+1
 2152 0a98 C9240000 		.word	.L284+1
 2153 0a9c FF220000 		.word	.L125+1
 2154              		.p2align 1
 2155              	.L116:
 498:..\src/command_processing.c ****                     case 2:         // Position PID
 499:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2156              		.loc 1 499 0
 2157 0aa0 07F5BE53 		add	r3, r7, #6080
 2158 0aa4 03F10F03 		add	r3, r3, #15
 2159 0aa8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2160 0aaa AC49     		ldr	r1, .L290
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 64


 2161 0aac 1346     		mov	r3, r2
 2162 0aae DB00     		lsls	r3, r3, #3
 2163 0ab0 9B1A     		subs	r3, r3, r2
 2164 0ab2 1B01     		lsls	r3, r3, #4
 2165 0ab4 0B44     		add	r3, r3, r1
 2166 0ab6 03F20F13 		addw	r3, r3, #271
 2167 0aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2168 0abc 032B     		cmp	r3, #3
 2169 0abe 00F02981 		beq	.L126
 500:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 2170              		.loc 1 500 0
 2171 0ac2 07F5BE53 		add	r3, r7, #6080
 2172 0ac6 03F10F03 		add	r3, r3, #15
 2173 0aca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2174 0acc A349     		ldr	r1, .L290
 2175 0ace 1346     		mov	r3, r2
 2176 0ad0 DB00     		lsls	r3, r3, #3
 2177 0ad2 9B1A     		subs	r3, r3, r2
 2178 0ad4 1B01     		lsls	r3, r3, #4
 2179 0ad6 0B44     		add	r3, r3, r1
 2180 0ad8 B033     		adds	r3, r3, #176
 2181 0ada 1B68     		ldr	r3, [r3]
 2182 0adc 1846     		mov	r0, r3
 2183 0ade FFF7FEFF 		bl	__aeabi_i2f
 2184 0ae2 0346     		mov	r3, r0
 2185 0ae4 4FF08F41 		mov	r1, #1199570944
 2186 0ae8 1846     		mov	r0, r3
 2187 0aea FFF7FEFF 		bl	__aeabi_fdiv
 2188 0aee 0346     		mov	r3, r0
 2189 0af0 1A46     		mov	r2, r3
 2190 0af2 07F13803 		add	r3, r7, #56
 2191 0af6 1C3B     		subs	r3, r3, #28
 2192 0af8 1A60     		str	r2, [r3]	@ float
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2193              		.loc 1 501 0
 2194 0afa 0023     		movs	r3, #0
 2195 0afc 07F5BE52 		add	r2, r7, #6080
 2196 0b00 02F11702 		add	r2, r2, #23
 2197 0b04 1370     		strb	r3, [r2]
 2198 0b06 2EE0     		b	.L127
 2199              	.L128:
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2200              		.loc 1 502 0 discriminator 3
 2201 0b08 07F5BE53 		add	r3, r7, #6080
 2202 0b0c 03F11503 		add	r3, r3, #21
 2203 0b10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2204 0b12 3222     		movs	r2, #50
 2205 0b14 02FB03F3 		mul	r3, r2, r3
 2206 0b18 1A1D     		adds	r2, r3, #4
 2207 0b1a 07F5BE53 		add	r3, r7, #6080
 2208 0b1e 03F11303 		add	r3, r3, #19
 2209 0b22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2210 0b24 1A44     		add	r2, r2, r3
 2211 0b26 07F5BE53 		add	r3, r7, #6080
 2212 0b2a 03F11703 		add	r3, r3, #23
 2213 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2214 0b30 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 65


 2215 0b32 5A1E     		subs	r2, r3, #1
 2216 0b34 07F5BE53 		add	r3, r7, #6080
 2217 0b38 03F11703 		add	r3, r3, #23
 2218 0b3c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2219 0b3e 07F13803 		add	r3, r7, #56
 2220 0b42 1C3B     		subs	r3, r3, #28
 2221 0b44 0B44     		add	r3, r3, r1
 2222 0b46 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2223 0b48 07F15803 		add	r3, r7, #88
 2224 0b4c 043B     		subs	r3, r3, #4
 2225 0b4e 9954     		strb	r1, [r3, r2]
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2226              		.loc 1 501 0 discriminator 3
 2227 0b50 07F5BE53 		add	r3, r7, #6080
 2228 0b54 03F11703 		add	r3, r3, #23
 2229 0b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2230 0b5a 0133     		adds	r3, r3, #1
 2231 0b5c 07F5BE52 		add	r2, r7, #6080
 2232 0b60 02F11702 		add	r2, r2, #23
 2233 0b64 1370     		strb	r3, [r2]
 2234              	.L127:
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2235              		.loc 1 501 0 is_stmt 0 discriminator 1
 2236 0b66 07F5BE53 		add	r3, r7, #6080
 2237 0b6a 03F11703 		add	r3, r3, #23
 2238 0b6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2239 0b70 07F5BE53 		add	r3, r7, #6080
 2240 0b74 03F11303 		add	r3, r3, #19
 2241 0b78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2242 0b7a 9A42     		cmp	r2, r3
 2243 0b7c C4D3     		bcc	.L128
 503:..\src/command_processing.c ****                             }
 504:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2244              		.loc 1 504 0 is_stmt 1
 2245 0b7e 07F5BE53 		add	r3, r7, #6080
 2246 0b82 03F10F03 		add	r3, r3, #15
 2247 0b86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2248 0b88 7449     		ldr	r1, .L290
 2249 0b8a 1346     		mov	r3, r2
 2250 0b8c DB00     		lsls	r3, r3, #3
 2251 0b8e 9B1A     		subs	r3, r3, r2
 2252 0b90 1B01     		lsls	r3, r3, #4
 2253 0b92 0B44     		add	r3, r3, r1
 2254 0b94 B433     		adds	r3, r3, #180
 2255 0b96 1B68     		ldr	r3, [r3]
 2256 0b98 1846     		mov	r0, r3
 2257 0b9a FFF7FEFF 		bl	__aeabi_i2f
 2258 0b9e 0346     		mov	r3, r0
 2259 0ba0 4FF08F41 		mov	r1, #1199570944
 2260 0ba4 1846     		mov	r0, r3
 2261 0ba6 FFF7FEFF 		bl	__aeabi_fdiv
 2262 0baa 0346     		mov	r3, r0
 2263 0bac 1A46     		mov	r2, r3
 2264 0bae 07F13803 		add	r3, r7, #56
 2265 0bb2 1C3B     		subs	r3, r3, #28
 2266 0bb4 1A60     		str	r2, [r3]	@ float
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 66


 2267              		.loc 1 505 0
 2268 0bb6 0023     		movs	r3, #0
 2269 0bb8 07F5BE52 		add	r2, r7, #6080
 2270 0bbc 02F11702 		add	r2, r2, #23
 2271 0bc0 1370     		strb	r3, [r2]
 2272 0bc2 34E0     		b	.L129
 2273              	.L130:
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2274              		.loc 1 506 0 discriminator 3
 2275 0bc4 07F5BE53 		add	r3, r7, #6080
 2276 0bc8 03F11503 		add	r3, r3, #21
 2277 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2278 0bce 3222     		movs	r2, #50
 2279 0bd0 02FB03F3 		mul	r3, r2, r3
 2280 0bd4 1A1D     		adds	r2, r3, #4
 2281 0bd6 07F5BE53 		add	r3, r7, #6080
 2282 0bda 03F11303 		add	r3, r3, #19
 2283 0bde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2284 0be0 1A44     		add	r2, r2, r3
 2285 0be2 07F5BE53 		add	r3, r7, #6080
 2286 0be6 03F11303 		add	r3, r3, #19
 2287 0bea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2288 0bec 1A44     		add	r2, r2, r3
 2289 0bee 07F5BE53 		add	r3, r7, #6080
 2290 0bf2 03F11703 		add	r3, r3, #23
 2291 0bf6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2292 0bf8 D31A     		subs	r3, r2, r3
 2293 0bfa 5A1E     		subs	r2, r3, #1
 2294 0bfc 07F5BE53 		add	r3, r7, #6080
 2295 0c00 03F11703 		add	r3, r3, #23
 2296 0c04 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2297 0c06 07F13803 		add	r3, r7, #56
 2298 0c0a 1C3B     		subs	r3, r3, #28
 2299 0c0c 0B44     		add	r3, r3, r1
 2300 0c0e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2301 0c10 07F15803 		add	r3, r7, #88
 2302 0c14 043B     		subs	r3, r3, #4
 2303 0c16 9954     		strb	r1, [r3, r2]
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2304              		.loc 1 505 0 discriminator 3
 2305 0c18 07F5BE53 		add	r3, r7, #6080
 2306 0c1c 03F11703 		add	r3, r3, #23
 2307 0c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2308 0c22 0133     		adds	r3, r3, #1
 2309 0c24 07F5BE52 		add	r2, r7, #6080
 2310 0c28 02F11702 		add	r2, r2, #23
 2311 0c2c 1370     		strb	r3, [r2]
 2312              	.L129:
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2313              		.loc 1 505 0 is_stmt 0 discriminator 1
 2314 0c2e 07F5BE53 		add	r3, r7, #6080
 2315 0c32 03F11703 		add	r3, r3, #23
 2316 0c36 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2317 0c38 07F5BE53 		add	r3, r7, #6080
 2318 0c3c 03F11303 		add	r3, r3, #19
 2319 0c40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2320 0c42 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 67


 2321 0c44 BED3     		bcc	.L130
 507:..\src/command_processing.c ****                             }
 508:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2322              		.loc 1 508 0 is_stmt 1
 2323 0c46 07F5BE53 		add	r3, r7, #6080
 2324 0c4a 03F10F03 		add	r3, r3, #15
 2325 0c4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2326 0c50 4249     		ldr	r1, .L290
 2327 0c52 1346     		mov	r3, r2
 2328 0c54 DB00     		lsls	r3, r3, #3
 2329 0c56 9B1A     		subs	r3, r3, r2
 2330 0c58 1B01     		lsls	r3, r3, #4
 2331 0c5a 0B44     		add	r3, r3, r1
 2332 0c5c B833     		adds	r3, r3, #184
 2333 0c5e 1B68     		ldr	r3, [r3]
 2334 0c60 1846     		mov	r0, r3
 2335 0c62 FFF7FEFF 		bl	__aeabi_i2f
 2336 0c66 0346     		mov	r3, r0
 2337 0c68 4FF08F41 		mov	r1, #1199570944
 2338 0c6c 1846     		mov	r0, r3
 2339 0c6e FFF7FEFF 		bl	__aeabi_fdiv
 2340 0c72 0346     		mov	r3, r0
 2341 0c74 1A46     		mov	r2, r3
 2342 0c76 07F13803 		add	r3, r7, #56
 2343 0c7a 1C3B     		subs	r3, r3, #28
 2344 0c7c 1A60     		str	r2, [r3]	@ float
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2345              		.loc 1 509 0
 2346 0c7e 0023     		movs	r3, #0
 2347 0c80 07F5BE52 		add	r2, r7, #6080
 2348 0c84 02F11702 		add	r2, r2, #23
 2349 0c88 1370     		strb	r3, [r2]
 2350 0c8a 35E0     		b	.L131
 2351              	.L132:
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2352              		.loc 1 510 0 discriminator 3
 2353 0c8c 07F5BE53 		add	r3, r7, #6080
 2354 0c90 03F11503 		add	r3, r3, #21
 2355 0c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2356 0c96 3222     		movs	r2, #50
 2357 0c98 02FB03F3 		mul	r3, r2, r3
 2358 0c9c 1A1D     		adds	r2, r3, #4
 2359 0c9e 07F5BE53 		add	r3, r7, #6080
 2360 0ca2 03F11303 		add	r3, r3, #19
 2361 0ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2362 0ca8 5B00     		lsls	r3, r3, #1
 2363 0caa 1A44     		add	r2, r2, r3
 2364 0cac 07F5BE53 		add	r3, r7, #6080
 2365 0cb0 03F11303 		add	r3, r3, #19
 2366 0cb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2367 0cb6 1A44     		add	r2, r2, r3
 2368 0cb8 07F5BE53 		add	r3, r7, #6080
 2369 0cbc 03F11703 		add	r3, r3, #23
 2370 0cc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2371 0cc2 D31A     		subs	r3, r2, r3
 2372 0cc4 5A1E     		subs	r2, r3, #1
 2373 0cc6 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 68


 2374 0cca 03F11703 		add	r3, r3, #23
 2375 0cce 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2376 0cd0 07F13803 		add	r3, r7, #56
 2377 0cd4 1C3B     		subs	r3, r3, #28
 2378 0cd6 0B44     		add	r3, r3, r1
 2379 0cd8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2380 0cda 07F15803 		add	r3, r7, #88
 2381 0cde 043B     		subs	r3, r3, #4
 2382 0ce0 9954     		strb	r1, [r3, r2]
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2383              		.loc 1 509 0 discriminator 3
 2384 0ce2 07F5BE53 		add	r3, r7, #6080
 2385 0ce6 03F11703 		add	r3, r3, #23
 2386 0cea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2387 0cec 0133     		adds	r3, r3, #1
 2388 0cee 07F5BE52 		add	r2, r7, #6080
 2389 0cf2 02F11702 		add	r2, r2, #23
 2390 0cf6 1370     		strb	r3, [r2]
 2391              	.L131:
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2392              		.loc 1 509 0 is_stmt 0 discriminator 1
 2393 0cf8 07F5BE53 		add	r3, r7, #6080
 2394 0cfc 03F11703 		add	r3, r3, #23
 2395 0d00 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2396 0d02 07F5BE53 		add	r3, r7, #6080
 2397 0d06 03F11303 		add	r3, r3, #19
 2398 0d0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2399 0d0c 9A42     		cmp	r2, r3
 2400 0d0e BDD3     		bcc	.L132
 511:..\src/command_processing.c ****                             } 
 512:..\src/command_processing.c ****                         }
 513:..\src/command_processing.c ****                         else {
 514:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 517:..\src/command_processing.c ****                             }
 518:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 521:..\src/command_processing.c ****                             }
 522:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 525:..\src/command_processing.c ****                             }
 526:..\src/command_processing.c ****                         }
 527:..\src/command_processing.c ****                         break;
 2401              		.loc 1 527 0 is_stmt 1
 2402 0d10 01F0DBBB 		b	.L114
 2403              	.L126:
 514:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2404              		.loc 1 514 0
 2405 0d14 07F5BE53 		add	r3, r7, #6080
 2406 0d18 03F10F03 		add	r3, r3, #15
 2407 0d1c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2408 0d1e 0F49     		ldr	r1, .L290
 2409 0d20 1346     		mov	r3, r2
 2410 0d22 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 69


 2411 0d24 9B1A     		subs	r3, r3, r2
 2412 0d26 1B01     		lsls	r3, r3, #4
 2413 0d28 0B44     		add	r3, r3, r1
 2414 0d2a C833     		adds	r3, r3, #200
 2415 0d2c 1B68     		ldr	r3, [r3]
 2416 0d2e 1846     		mov	r0, r3
 2417 0d30 FFF7FEFF 		bl	__aeabi_i2f
 2418 0d34 0346     		mov	r3, r0
 2419 0d36 4FF08F41 		mov	r1, #1199570944
 2420 0d3a 1846     		mov	r0, r3
 2421 0d3c FFF7FEFF 		bl	__aeabi_fdiv
 2422 0d40 0346     		mov	r3, r0
 2423 0d42 1A46     		mov	r2, r3
 2424 0d44 07F13803 		add	r3, r7, #56
 2425 0d48 1C3B     		subs	r3, r3, #28
 2426 0d4a 1A60     		str	r2, [r3]	@ float
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2427              		.loc 1 515 0
 2428 0d4c 0023     		movs	r3, #0
 2429 0d4e 07F5BE52 		add	r2, r7, #6080
 2430 0d52 02F11702 		add	r2, r2, #23
 2431 0d56 1370     		strb	r3, [r2]
 2432 0d58 31E0     		b	.L134
 2433              	.L291:
 2434 0d5a 00BF     		.align	2
 2435              	.L290:
 2436 0d5c 00000000 		.word	c_mem
 2437              	.L135:
 516:..\src/command_processing.c ****                             }
 2438              		.loc 1 516 0 discriminator 3
 2439 0d60 07F5BE53 		add	r3, r7, #6080
 2440 0d64 03F11503 		add	r3, r3, #21
 2441 0d68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2442 0d6a 3222     		movs	r2, #50
 2443 0d6c 02FB03F3 		mul	r3, r2, r3
 2444 0d70 1A1D     		adds	r2, r3, #4
 2445 0d72 07F5BE53 		add	r3, r7, #6080
 2446 0d76 03F11303 		add	r3, r3, #19
 2447 0d7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2448 0d7c 1A44     		add	r2, r2, r3
 2449 0d7e 07F5BE53 		add	r3, r7, #6080
 2450 0d82 03F11703 		add	r3, r3, #23
 2451 0d86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2452 0d88 D31A     		subs	r3, r2, r3
 2453 0d8a 5A1E     		subs	r2, r3, #1
 2454 0d8c 07F5BE53 		add	r3, r7, #6080
 2455 0d90 03F11703 		add	r3, r3, #23
 2456 0d94 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2457 0d96 07F13803 		add	r3, r7, #56
 2458 0d9a 1C3B     		subs	r3, r3, #28
 2459 0d9c 0B44     		add	r3, r3, r1
 2460 0d9e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2461 0da0 07F15803 		add	r3, r7, #88
 2462 0da4 043B     		subs	r3, r3, #4
 2463 0da6 9954     		strb	r1, [r3, r2]
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2464              		.loc 1 515 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 70


 2465 0da8 07F5BE53 		add	r3, r7, #6080
 2466 0dac 03F11703 		add	r3, r3, #23
 2467 0db0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2468 0db2 0133     		adds	r3, r3, #1
 2469 0db4 07F5BE52 		add	r2, r7, #6080
 2470 0db8 02F11702 		add	r2, r2, #23
 2471 0dbc 1370     		strb	r3, [r2]
 2472              	.L134:
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2473              		.loc 1 515 0 is_stmt 0 discriminator 1
 2474 0dbe 07F5BE53 		add	r3, r7, #6080
 2475 0dc2 03F11703 		add	r3, r3, #23
 2476 0dc6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2477 0dc8 07F5BE53 		add	r3, r7, #6080
 2478 0dcc 03F11303 		add	r3, r3, #19
 2479 0dd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2480 0dd2 9A42     		cmp	r2, r3
 2481 0dd4 C4D3     		bcc	.L135
 518:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2482              		.loc 1 518 0 is_stmt 1
 2483 0dd6 07F5BE53 		add	r3, r7, #6080
 2484 0dda 03F10F03 		add	r3, r3, #15
 2485 0dde 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2486 0de0 AB49     		ldr	r1, .L292
 2487 0de2 1346     		mov	r3, r2
 2488 0de4 DB00     		lsls	r3, r3, #3
 2489 0de6 9B1A     		subs	r3, r3, r2
 2490 0de8 1B01     		lsls	r3, r3, #4
 2491 0dea 0B44     		add	r3, r3, r1
 2492 0dec CC33     		adds	r3, r3, #204
 2493 0dee 1B68     		ldr	r3, [r3]
 2494 0df0 1846     		mov	r0, r3
 2495 0df2 FFF7FEFF 		bl	__aeabi_i2f
 2496 0df6 0346     		mov	r3, r0
 2497 0df8 4FF08F41 		mov	r1, #1199570944
 2498 0dfc 1846     		mov	r0, r3
 2499 0dfe FFF7FEFF 		bl	__aeabi_fdiv
 2500 0e02 0346     		mov	r3, r0
 2501 0e04 1A46     		mov	r2, r3
 2502 0e06 07F13803 		add	r3, r7, #56
 2503 0e0a 1C3B     		subs	r3, r3, #28
 2504 0e0c 1A60     		str	r2, [r3]	@ float
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2505              		.loc 1 519 0
 2506 0e0e 0023     		movs	r3, #0
 2507 0e10 07F5BE52 		add	r2, r7, #6080
 2508 0e14 02F11702 		add	r2, r2, #23
 2509 0e18 1370     		strb	r3, [r2]
 2510 0e1a 34E0     		b	.L136
 2511              	.L137:
 520:..\src/command_processing.c ****                             }
 2512              		.loc 1 520 0 discriminator 3
 2513 0e1c 07F5BE53 		add	r3, r7, #6080
 2514 0e20 03F11503 		add	r3, r3, #21
 2515 0e24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2516 0e26 3222     		movs	r2, #50
 2517 0e28 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 71


 2518 0e2c 1A1D     		adds	r2, r3, #4
 2519 0e2e 07F5BE53 		add	r3, r7, #6080
 2520 0e32 03F11303 		add	r3, r3, #19
 2521 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2522 0e38 1A44     		add	r2, r2, r3
 2523 0e3a 07F5BE53 		add	r3, r7, #6080
 2524 0e3e 03F11303 		add	r3, r3, #19
 2525 0e42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2526 0e44 1A44     		add	r2, r2, r3
 2527 0e46 07F5BE53 		add	r3, r7, #6080
 2528 0e4a 03F11703 		add	r3, r3, #23
 2529 0e4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2530 0e50 D31A     		subs	r3, r2, r3
 2531 0e52 5A1E     		subs	r2, r3, #1
 2532 0e54 07F5BE53 		add	r3, r7, #6080
 2533 0e58 03F11703 		add	r3, r3, #23
 2534 0e5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2535 0e5e 07F13803 		add	r3, r7, #56
 2536 0e62 1C3B     		subs	r3, r3, #28
 2537 0e64 0B44     		add	r3, r3, r1
 2538 0e66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2539 0e68 07F15803 		add	r3, r7, #88
 2540 0e6c 043B     		subs	r3, r3, #4
 2541 0e6e 9954     		strb	r1, [r3, r2]
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2542              		.loc 1 519 0 discriminator 3
 2543 0e70 07F5BE53 		add	r3, r7, #6080
 2544 0e74 03F11703 		add	r3, r3, #23
 2545 0e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2546 0e7a 0133     		adds	r3, r3, #1
 2547 0e7c 07F5BE52 		add	r2, r7, #6080
 2548 0e80 02F11702 		add	r2, r2, #23
 2549 0e84 1370     		strb	r3, [r2]
 2550              	.L136:
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2551              		.loc 1 519 0 is_stmt 0 discriminator 1
 2552 0e86 07F5BE53 		add	r3, r7, #6080
 2553 0e8a 03F11703 		add	r3, r3, #23
 2554 0e8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2555 0e90 07F5BE53 		add	r3, r7, #6080
 2556 0e94 03F11303 		add	r3, r3, #19
 2557 0e98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2558 0e9a 9A42     		cmp	r2, r3
 2559 0e9c BED3     		bcc	.L137
 522:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2560              		.loc 1 522 0 is_stmt 1
 2561 0e9e 07F5BE53 		add	r3, r7, #6080
 2562 0ea2 03F10F03 		add	r3, r3, #15
 2563 0ea6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2564 0ea8 7949     		ldr	r1, .L292
 2565 0eaa 1346     		mov	r3, r2
 2566 0eac DB00     		lsls	r3, r3, #3
 2567 0eae 9B1A     		subs	r3, r3, r2
 2568 0eb0 1B01     		lsls	r3, r3, #4
 2569 0eb2 0B44     		add	r3, r3, r1
 2570 0eb4 D033     		adds	r3, r3, #208
 2571 0eb6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 72


 2572 0eb8 1846     		mov	r0, r3
 2573 0eba FFF7FEFF 		bl	__aeabi_i2f
 2574 0ebe 0346     		mov	r3, r0
 2575 0ec0 4FF08F41 		mov	r1, #1199570944
 2576 0ec4 1846     		mov	r0, r3
 2577 0ec6 FFF7FEFF 		bl	__aeabi_fdiv
 2578 0eca 0346     		mov	r3, r0
 2579 0ecc 1A46     		mov	r2, r3
 2580 0ece 07F13803 		add	r3, r7, #56
 2581 0ed2 1C3B     		subs	r3, r3, #28
 2582 0ed4 1A60     		str	r2, [r3]	@ float
 523:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2583              		.loc 1 523 0
 2584 0ed6 0023     		movs	r3, #0
 2585 0ed8 07F5BE52 		add	r2, r7, #6080
 2586 0edc 02F11702 		add	r2, r2, #23
 2587 0ee0 1370     		strb	r3, [r2]
 2588 0ee2 35E0     		b	.L138
 2589              	.L139:
 524:..\src/command_processing.c ****                             }
 2590              		.loc 1 524 0 discriminator 3
 2591 0ee4 07F5BE53 		add	r3, r7, #6080
 2592 0ee8 03F11503 		add	r3, r3, #21
 2593 0eec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2594 0eee 3222     		movs	r2, #50
 2595 0ef0 02FB03F3 		mul	r3, r2, r3
 2596 0ef4 1A1D     		adds	r2, r3, #4
 2597 0ef6 07F5BE53 		add	r3, r7, #6080
 2598 0efa 03F11303 		add	r3, r3, #19
 2599 0efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2600 0f00 5B00     		lsls	r3, r3, #1
 2601 0f02 1A44     		add	r2, r2, r3
 2602 0f04 07F5BE53 		add	r3, r7, #6080
 2603 0f08 03F11303 		add	r3, r3, #19
 2604 0f0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2605 0f0e 1A44     		add	r2, r2, r3
 2606 0f10 07F5BE53 		add	r3, r7, #6080
 2607 0f14 03F11703 		add	r3, r3, #23
 2608 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2609 0f1a D31A     		subs	r3, r2, r3
 2610 0f1c 5A1E     		subs	r2, r3, #1
 2611 0f1e 07F5BE53 		add	r3, r7, #6080
 2612 0f22 03F11703 		add	r3, r3, #23
 2613 0f26 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2614 0f28 07F13803 		add	r3, r7, #56
 2615 0f2c 1C3B     		subs	r3, r3, #28
 2616 0f2e 0B44     		add	r3, r3, r1
 2617 0f30 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2618 0f32 07F15803 		add	r3, r7, #88
 2619 0f36 043B     		subs	r3, r3, #4
 2620 0f38 9954     		strb	r1, [r3, r2]
 523:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2621              		.loc 1 523 0 discriminator 3
 2622 0f3a 07F5BE53 		add	r3, r7, #6080
 2623 0f3e 03F11703 		add	r3, r3, #23
 2624 0f42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2625 0f44 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 73


 2626 0f46 07F5BE52 		add	r2, r7, #6080
 2627 0f4a 02F11702 		add	r2, r2, #23
 2628 0f4e 1370     		strb	r3, [r2]
 2629              	.L138:
 523:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2630              		.loc 1 523 0 is_stmt 0 discriminator 1
 2631 0f50 07F5BE53 		add	r3, r7, #6080
 2632 0f54 03F11703 		add	r3, r3, #23
 2633 0f58 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2634 0f5a 07F5BE53 		add	r3, r7, #6080
 2635 0f5e 03F11303 		add	r3, r3, #19
 2636 0f62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2637 0f64 9A42     		cmp	r2, r3
 2638 0f66 BDD3     		bcc	.L139
 2639              		.loc 1 527 0 is_stmt 1
 2640 0f68 01F0AFBA 		b	.L114
 2641              	.L118:
 528:..\src/command_processing.c ****                         
 529:..\src/command_processing.c ****                     case 3:         //Current PID
 530:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2642              		.loc 1 530 0
 2643 0f6c 07F5BE53 		add	r3, r7, #6080
 2644 0f70 03F10F03 		add	r3, r3, #15
 2645 0f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2646 0f76 4649     		ldr	r1, .L292
 2647 0f78 1346     		mov	r3, r2
 2648 0f7a DB00     		lsls	r3, r3, #3
 2649 0f7c 9B1A     		subs	r3, r3, r2
 2650 0f7e 1B01     		lsls	r3, r3, #4
 2651 0f80 0B44     		add	r3, r3, r1
 2652 0f82 03F20F13 		addw	r3, r3, #271
 2653 0f86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2654 0f88 032B     		cmp	r3, #3
 2655 0f8a 00F02B81 		beq	.L140
 531:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2656              		.loc 1 531 0
 2657 0f8e 07F5BE53 		add	r3, r7, #6080
 2658 0f92 03F10F03 		add	r3, r3, #15
 2659 0f96 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2660 0f98 3D49     		ldr	r1, .L292
 2661 0f9a 1346     		mov	r3, r2
 2662 0f9c DB00     		lsls	r3, r3, #3
 2663 0f9e 9B1A     		subs	r3, r3, r2
 2664 0fa0 1B01     		lsls	r3, r3, #4
 2665 0fa2 0B44     		add	r3, r3, r1
 2666 0fa4 BC33     		adds	r3, r3, #188
 2667 0fa6 1B68     		ldr	r3, [r3]
 2668 0fa8 1846     		mov	r0, r3
 2669 0faa FFF7FEFF 		bl	__aeabi_i2f
 2670 0fae 0346     		mov	r3, r0
 2671 0fb0 4FF08F41 		mov	r1, #1199570944
 2672 0fb4 1846     		mov	r0, r3
 2673 0fb6 FFF7FEFF 		bl	__aeabi_fdiv
 2674 0fba 0346     		mov	r3, r0
 2675 0fbc 1A46     		mov	r2, r3
 2676 0fbe 07F13803 		add	r3, r7, #56
 2677 0fc2 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 74


 2678 0fc4 1A60     		str	r2, [r3]	@ float
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2679              		.loc 1 532 0
 2680 0fc6 0023     		movs	r3, #0
 2681 0fc8 07F5BE52 		add	r2, r7, #6080
 2682 0fcc 02F11702 		add	r2, r2, #23
 2683 0fd0 1370     		strb	r3, [r2]
 2684 0fd2 2EE0     		b	.L141
 2685              	.L142:
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2686              		.loc 1 533 0 discriminator 3
 2687 0fd4 07F5BE53 		add	r3, r7, #6080
 2688 0fd8 03F11503 		add	r3, r3, #21
 2689 0fdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2690 0fde 3222     		movs	r2, #50
 2691 0fe0 02FB03F3 		mul	r3, r2, r3
 2692 0fe4 1A1D     		adds	r2, r3, #4
 2693 0fe6 07F5BE53 		add	r3, r7, #6080
 2694 0fea 03F11303 		add	r3, r3, #19
 2695 0fee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2696 0ff0 1A44     		add	r2, r2, r3
 2697 0ff2 07F5BE53 		add	r3, r7, #6080
 2698 0ff6 03F11703 		add	r3, r3, #23
 2699 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2700 0ffc D31A     		subs	r3, r2, r3
 2701 0ffe 5A1E     		subs	r2, r3, #1
 2702 1000 07F5BE53 		add	r3, r7, #6080
 2703 1004 03F11703 		add	r3, r3, #23
 2704 1008 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2705 100a 07F13803 		add	r3, r7, #56
 2706 100e 1C3B     		subs	r3, r3, #28
 2707 1010 0B44     		add	r3, r3, r1
 2708 1012 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2709 1014 07F15803 		add	r3, r7, #88
 2710 1018 043B     		subs	r3, r3, #4
 2711 101a 9954     		strb	r1, [r3, r2]
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2712              		.loc 1 532 0 discriminator 3
 2713 101c 07F5BE53 		add	r3, r7, #6080
 2714 1020 03F11703 		add	r3, r3, #23
 2715 1024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2716 1026 0133     		adds	r3, r3, #1
 2717 1028 07F5BE52 		add	r2, r7, #6080
 2718 102c 02F11702 		add	r2, r2, #23
 2719 1030 1370     		strb	r3, [r2]
 2720              	.L141:
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2721              		.loc 1 532 0 is_stmt 0 discriminator 1
 2722 1032 07F5BE53 		add	r3, r7, #6080
 2723 1036 03F11703 		add	r3, r3, #23
 2724 103a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2725 103c 07F5BE53 		add	r3, r7, #6080
 2726 1040 03F11303 		add	r3, r3, #19
 2727 1044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2728 1046 9A42     		cmp	r2, r3
 2729 1048 C4D3     		bcc	.L142
 534:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 75


 535:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2730              		.loc 1 535 0 is_stmt 1
 2731 104a 07F5BE53 		add	r3, r7, #6080
 2732 104e 03F10F03 		add	r3, r3, #15
 2733 1052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2734 1054 0E49     		ldr	r1, .L292
 2735 1056 1346     		mov	r3, r2
 2736 1058 DB00     		lsls	r3, r3, #3
 2737 105a 9B1A     		subs	r3, r3, r2
 2738 105c 1B01     		lsls	r3, r3, #4
 2739 105e 0B44     		add	r3, r3, r1
 2740 1060 C033     		adds	r3, r3, #192
 2741 1062 1B68     		ldr	r3, [r3]
 2742 1064 1846     		mov	r0, r3
 2743 1066 FFF7FEFF 		bl	__aeabi_i2f
 2744 106a 0346     		mov	r3, r0
 2745 106c 4FF08F41 		mov	r1, #1199570944
 2746 1070 1846     		mov	r0, r3
 2747 1072 FFF7FEFF 		bl	__aeabi_fdiv
 2748 1076 0346     		mov	r3, r0
 2749 1078 1A46     		mov	r2, r3
 2750 107a 07F13803 		add	r3, r7, #56
 2751 107e 1C3B     		subs	r3, r3, #28
 2752 1080 1A60     		str	r2, [r3]	@ float
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2753              		.loc 1 536 0
 2754 1082 0023     		movs	r3, #0
 2755 1084 07F5BE52 		add	r2, r7, #6080
 2756 1088 02F11702 		add	r2, r2, #23
 2757 108c 1370     		strb	r3, [r2]
 2758 108e 36E0     		b	.L143
 2759              	.L293:
 2760              		.align	2
 2761              	.L292:
 2762 1090 00000000 		.word	c_mem
 2763              	.L144:
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2764              		.loc 1 537 0 discriminator 3
 2765 1094 07F5BE53 		add	r3, r7, #6080
 2766 1098 03F11503 		add	r3, r3, #21
 2767 109c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2768 109e 3222     		movs	r2, #50
 2769 10a0 02FB03F3 		mul	r3, r2, r3
 2770 10a4 1A1D     		adds	r2, r3, #4
 2771 10a6 07F5BE53 		add	r3, r7, #6080
 2772 10aa 03F11303 		add	r3, r3, #19
 2773 10ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2774 10b0 1A44     		add	r2, r2, r3
 2775 10b2 07F5BE53 		add	r3, r7, #6080
 2776 10b6 03F11303 		add	r3, r3, #19
 2777 10ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2778 10bc 1A44     		add	r2, r2, r3
 2779 10be 07F5BE53 		add	r3, r7, #6080
 2780 10c2 03F11703 		add	r3, r3, #23
 2781 10c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2782 10c8 D31A     		subs	r3, r2, r3
 2783 10ca 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 76


 2784 10cc 07F5BE53 		add	r3, r7, #6080
 2785 10d0 03F11703 		add	r3, r3, #23
 2786 10d4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2787 10d6 07F13803 		add	r3, r7, #56
 2788 10da 1C3B     		subs	r3, r3, #28
 2789 10dc 0B44     		add	r3, r3, r1
 2790 10de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2791 10e0 07F15803 		add	r3, r7, #88
 2792 10e4 043B     		subs	r3, r3, #4
 2793 10e6 9954     		strb	r1, [r3, r2]
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2794              		.loc 1 536 0 discriminator 3
 2795 10e8 07F5BE53 		add	r3, r7, #6080
 2796 10ec 03F11703 		add	r3, r3, #23
 2797 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2798 10f2 0133     		adds	r3, r3, #1
 2799 10f4 07F5BE52 		add	r2, r7, #6080
 2800 10f8 02F11702 		add	r2, r2, #23
 2801 10fc 1370     		strb	r3, [r2]
 2802              	.L143:
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2803              		.loc 1 536 0 is_stmt 0 discriminator 1
 2804 10fe 07F5BE53 		add	r3, r7, #6080
 2805 1102 03F11703 		add	r3, r3, #23
 2806 1106 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2807 1108 07F5BE53 		add	r3, r7, #6080
 2808 110c 03F11303 		add	r3, r3, #19
 2809 1110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2810 1112 9A42     		cmp	r2, r3
 2811 1114 BED3     		bcc	.L144
 538:..\src/command_processing.c ****                             }
 539:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2812              		.loc 1 539 0 is_stmt 1
 2813 1116 07F5BE53 		add	r3, r7, #6080
 2814 111a 03F10F03 		add	r3, r3, #15
 2815 111e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2816 1120 C849     		ldr	r1, .L294
 2817 1122 1346     		mov	r3, r2
 2818 1124 DB00     		lsls	r3, r3, #3
 2819 1126 9B1A     		subs	r3, r3, r2
 2820 1128 1B01     		lsls	r3, r3, #4
 2821 112a 0B44     		add	r3, r3, r1
 2822 112c C433     		adds	r3, r3, #196
 2823 112e 1B68     		ldr	r3, [r3]
 2824 1130 1846     		mov	r0, r3
 2825 1132 FFF7FEFF 		bl	__aeabi_i2f
 2826 1136 0346     		mov	r3, r0
 2827 1138 4FF08F41 		mov	r1, #1199570944
 2828 113c 1846     		mov	r0, r3
 2829 113e FFF7FEFF 		bl	__aeabi_fdiv
 2830 1142 0346     		mov	r3, r0
 2831 1144 1A46     		mov	r2, r3
 2832 1146 07F13803 		add	r3, r7, #56
 2833 114a 1C3B     		subs	r3, r3, #28
 2834 114c 1A60     		str	r2, [r3]	@ float
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2835              		.loc 1 540 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 77


 2836 114e 0023     		movs	r3, #0
 2837 1150 07F5BE52 		add	r2, r7, #6080
 2838 1154 02F11702 		add	r2, r2, #23
 2839 1158 1370     		strb	r3, [r2]
 2840 115a 35E0     		b	.L145
 2841              	.L146:
 541:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2842              		.loc 1 541 0 discriminator 3
 2843 115c 07F5BE53 		add	r3, r7, #6080
 2844 1160 03F11503 		add	r3, r3, #21
 2845 1164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2846 1166 3222     		movs	r2, #50
 2847 1168 02FB03F3 		mul	r3, r2, r3
 2848 116c 1A1D     		adds	r2, r3, #4
 2849 116e 07F5BE53 		add	r3, r7, #6080
 2850 1172 03F11303 		add	r3, r3, #19
 2851 1176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2852 1178 5B00     		lsls	r3, r3, #1
 2853 117a 1A44     		add	r2, r2, r3
 2854 117c 07F5BE53 		add	r3, r7, #6080
 2855 1180 03F11303 		add	r3, r3, #19
 2856 1184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2857 1186 1A44     		add	r2, r2, r3
 2858 1188 07F5BE53 		add	r3, r7, #6080
 2859 118c 03F11703 		add	r3, r3, #23
 2860 1190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2861 1192 D31A     		subs	r3, r2, r3
 2862 1194 5A1E     		subs	r2, r3, #1
 2863 1196 07F5BE53 		add	r3, r7, #6080
 2864 119a 03F11703 		add	r3, r3, #23
 2865 119e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2866 11a0 07F13803 		add	r3, r7, #56
 2867 11a4 1C3B     		subs	r3, r3, #28
 2868 11a6 0B44     		add	r3, r3, r1
 2869 11a8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2870 11aa 07F15803 		add	r3, r7, #88
 2871 11ae 043B     		subs	r3, r3, #4
 2872 11b0 9954     		strb	r1, [r3, r2]
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2873              		.loc 1 540 0 discriminator 3
 2874 11b2 07F5BE53 		add	r3, r7, #6080
 2875 11b6 03F11703 		add	r3, r3, #23
 2876 11ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2877 11bc 0133     		adds	r3, r3, #1
 2878 11be 07F5BE52 		add	r2, r7, #6080
 2879 11c2 02F11702 		add	r2, r2, #23
 2880 11c6 1370     		strb	r3, [r2]
 2881              	.L145:
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2882              		.loc 1 540 0 is_stmt 0 discriminator 1
 2883 11c8 07F5BE53 		add	r3, r7, #6080
 2884 11cc 03F11703 		add	r3, r3, #23
 2885 11d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2886 11d2 07F5BE53 		add	r3, r7, #6080
 2887 11d6 03F11303 		add	r3, r3, #19
 2888 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2889 11dc 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 78


 2890 11de BDD3     		bcc	.L146
 542:..\src/command_processing.c ****                             }
 543:..\src/command_processing.c ****                         }
 544:..\src/command_processing.c ****                         else {
 545:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 546:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 547:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 548:..\src/command_processing.c ****                             }
 549:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 550:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 551:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 552:..\src/command_processing.c ****                             }
 553:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 554:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 555:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 556:..\src/command_processing.c ****                             }
 557:..\src/command_processing.c ****                         }            
 558:..\src/command_processing.c ****                         break;  
 2891              		.loc 1 558 0 is_stmt 1
 2892 11e0 01F073B9 		b	.L114
 2893              	.L140:
 545:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2894              		.loc 1 545 0
 2895 11e4 07F5BE53 		add	r3, r7, #6080
 2896 11e8 03F10F03 		add	r3, r3, #15
 2897 11ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2898 11ee 9549     		ldr	r1, .L294
 2899 11f0 1346     		mov	r3, r2
 2900 11f2 DB00     		lsls	r3, r3, #3
 2901 11f4 9B1A     		subs	r3, r3, r2
 2902 11f6 1B01     		lsls	r3, r3, #4
 2903 11f8 0B44     		add	r3, r3, r1
 2904 11fa D433     		adds	r3, r3, #212
 2905 11fc 1B68     		ldr	r3, [r3]
 2906 11fe 1846     		mov	r0, r3
 2907 1200 FFF7FEFF 		bl	__aeabi_i2f
 2908 1204 0346     		mov	r3, r0
 2909 1206 4FF08F41 		mov	r1, #1199570944
 2910 120a 1846     		mov	r0, r3
 2911 120c FFF7FEFF 		bl	__aeabi_fdiv
 2912 1210 0346     		mov	r3, r0
 2913 1212 1A46     		mov	r2, r3
 2914 1214 07F13803 		add	r3, r7, #56
 2915 1218 1C3B     		subs	r3, r3, #28
 2916 121a 1A60     		str	r2, [r3]	@ float
 546:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2917              		.loc 1 546 0
 2918 121c 0023     		movs	r3, #0
 2919 121e 07F5BE52 		add	r2, r7, #6080
 2920 1222 02F11702 		add	r2, r2, #23
 2921 1226 1370     		strb	r3, [r2]
 2922 1228 2EE0     		b	.L148
 2923              	.L149:
 547:..\src/command_processing.c ****                             }
 2924              		.loc 1 547 0 discriminator 3
 2925 122a 07F5BE53 		add	r3, r7, #6080
 2926 122e 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 79


 2927 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2928 1234 3222     		movs	r2, #50
 2929 1236 02FB03F3 		mul	r3, r2, r3
 2930 123a 1A1D     		adds	r2, r3, #4
 2931 123c 07F5BE53 		add	r3, r7, #6080
 2932 1240 03F11303 		add	r3, r3, #19
 2933 1244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2934 1246 1A44     		add	r2, r2, r3
 2935 1248 07F5BE53 		add	r3, r7, #6080
 2936 124c 03F11703 		add	r3, r3, #23
 2937 1250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2938 1252 D31A     		subs	r3, r2, r3
 2939 1254 5A1E     		subs	r2, r3, #1
 2940 1256 07F5BE53 		add	r3, r7, #6080
 2941 125a 03F11703 		add	r3, r3, #23
 2942 125e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2943 1260 07F13803 		add	r3, r7, #56
 2944 1264 1C3B     		subs	r3, r3, #28
 2945 1266 0B44     		add	r3, r3, r1
 2946 1268 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2947 126a 07F15803 		add	r3, r7, #88
 2948 126e 043B     		subs	r3, r3, #4
 2949 1270 9954     		strb	r1, [r3, r2]
 546:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2950              		.loc 1 546 0 discriminator 3
 2951 1272 07F5BE53 		add	r3, r7, #6080
 2952 1276 03F11703 		add	r3, r3, #23
 2953 127a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2954 127c 0133     		adds	r3, r3, #1
 2955 127e 07F5BE52 		add	r2, r7, #6080
 2956 1282 02F11702 		add	r2, r2, #23
 2957 1286 1370     		strb	r3, [r2]
 2958              	.L148:
 546:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2959              		.loc 1 546 0 is_stmt 0 discriminator 1
 2960 1288 07F5BE53 		add	r3, r7, #6080
 2961 128c 03F11703 		add	r3, r3, #23
 2962 1290 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2963 1292 07F5BE53 		add	r3, r7, #6080
 2964 1296 03F11303 		add	r3, r3, #19
 2965 129a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2966 129c 9A42     		cmp	r2, r3
 2967 129e C4D3     		bcc	.L149
 549:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2968              		.loc 1 549 0 is_stmt 1
 2969 12a0 07F5BE53 		add	r3, r7, #6080
 2970 12a4 03F10F03 		add	r3, r3, #15
 2971 12a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2972 12aa 6649     		ldr	r1, .L294
 2973 12ac 1346     		mov	r3, r2
 2974 12ae DB00     		lsls	r3, r3, #3
 2975 12b0 9B1A     		subs	r3, r3, r2
 2976 12b2 1B01     		lsls	r3, r3, #4
 2977 12b4 0B44     		add	r3, r3, r1
 2978 12b6 D833     		adds	r3, r3, #216
 2979 12b8 1B68     		ldr	r3, [r3]
 2980 12ba 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 80


 2981 12bc FFF7FEFF 		bl	__aeabi_i2f
 2982 12c0 0346     		mov	r3, r0
 2983 12c2 4FF08F41 		mov	r1, #1199570944
 2984 12c6 1846     		mov	r0, r3
 2985 12c8 FFF7FEFF 		bl	__aeabi_fdiv
 2986 12cc 0346     		mov	r3, r0
 2987 12ce 1A46     		mov	r2, r3
 2988 12d0 07F13803 		add	r3, r7, #56
 2989 12d4 1C3B     		subs	r3, r3, #28
 2990 12d6 1A60     		str	r2, [r3]	@ float
 550:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2991              		.loc 1 550 0
 2992 12d8 0023     		movs	r3, #0
 2993 12da 07F5BE52 		add	r2, r7, #6080
 2994 12de 02F11702 		add	r2, r2, #23
 2995 12e2 1370     		strb	r3, [r2]
 2996 12e4 34E0     		b	.L150
 2997              	.L151:
 551:..\src/command_processing.c ****                             }
 2998              		.loc 1 551 0 discriminator 3
 2999 12e6 07F5BE53 		add	r3, r7, #6080
 3000 12ea 03F11503 		add	r3, r3, #21
 3001 12ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3002 12f0 3222     		movs	r2, #50
 3003 12f2 02FB03F3 		mul	r3, r2, r3
 3004 12f6 1A1D     		adds	r2, r3, #4
 3005 12f8 07F5BE53 		add	r3, r7, #6080
 3006 12fc 03F11303 		add	r3, r3, #19
 3007 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3008 1302 1A44     		add	r2, r2, r3
 3009 1304 07F5BE53 		add	r3, r7, #6080
 3010 1308 03F11303 		add	r3, r3, #19
 3011 130c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3012 130e 1A44     		add	r2, r2, r3
 3013 1310 07F5BE53 		add	r3, r7, #6080
 3014 1314 03F11703 		add	r3, r3, #23
 3015 1318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3016 131a D31A     		subs	r3, r2, r3
 3017 131c 5A1E     		subs	r2, r3, #1
 3018 131e 07F5BE53 		add	r3, r7, #6080
 3019 1322 03F11703 		add	r3, r3, #23
 3020 1326 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3021 1328 07F13803 		add	r3, r7, #56
 3022 132c 1C3B     		subs	r3, r3, #28
 3023 132e 0B44     		add	r3, r3, r1
 3024 1330 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3025 1332 07F15803 		add	r3, r7, #88
 3026 1336 043B     		subs	r3, r3, #4
 3027 1338 9954     		strb	r1, [r3, r2]
 550:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3028              		.loc 1 550 0 discriminator 3
 3029 133a 07F5BE53 		add	r3, r7, #6080
 3030 133e 03F11703 		add	r3, r3, #23
 3031 1342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3032 1344 0133     		adds	r3, r3, #1
 3033 1346 07F5BE52 		add	r2, r7, #6080
 3034 134a 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 81


 3035 134e 1370     		strb	r3, [r2]
 3036              	.L150:
 550:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3037              		.loc 1 550 0 is_stmt 0 discriminator 1
 3038 1350 07F5BE53 		add	r3, r7, #6080
 3039 1354 03F11703 		add	r3, r3, #23
 3040 1358 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3041 135a 07F5BE53 		add	r3, r7, #6080
 3042 135e 03F11303 		add	r3, r3, #19
 3043 1362 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3044 1364 9A42     		cmp	r2, r3
 3045 1366 BED3     		bcc	.L151
 553:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3046              		.loc 1 553 0 is_stmt 1
 3047 1368 07F5BE53 		add	r3, r7, #6080
 3048 136c 03F10F03 		add	r3, r3, #15
 3049 1370 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3050 1372 3449     		ldr	r1, .L294
 3051 1374 1346     		mov	r3, r2
 3052 1376 DB00     		lsls	r3, r3, #3
 3053 1378 9B1A     		subs	r3, r3, r2
 3054 137a 1B01     		lsls	r3, r3, #4
 3055 137c 0B44     		add	r3, r3, r1
 3056 137e DC33     		adds	r3, r3, #220
 3057 1380 1B68     		ldr	r3, [r3]
 3058 1382 1846     		mov	r0, r3
 3059 1384 FFF7FEFF 		bl	__aeabi_i2f
 3060 1388 0346     		mov	r3, r0
 3061 138a 4FF08F41 		mov	r1, #1199570944
 3062 138e 1846     		mov	r0, r3
 3063 1390 FFF7FEFF 		bl	__aeabi_fdiv
 3064 1394 0346     		mov	r3, r0
 3065 1396 1A46     		mov	r2, r3
 3066 1398 07F13803 		add	r3, r7, #56
 3067 139c 1C3B     		subs	r3, r3, #28
 3068 139e 1A60     		str	r2, [r3]	@ float
 554:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3069              		.loc 1 554 0
 3070 13a0 0023     		movs	r3, #0
 3071 13a2 07F5BE52 		add	r2, r7, #6080
 3072 13a6 02F11702 		add	r2, r2, #23
 3073 13aa 1370     		strb	r3, [r2]
 3074 13ac 35E0     		b	.L152
 3075              	.L153:
 555:..\src/command_processing.c ****                             }
 3076              		.loc 1 555 0 discriminator 3
 3077 13ae 07F5BE53 		add	r3, r7, #6080
 3078 13b2 03F11503 		add	r3, r3, #21
 3079 13b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3080 13b8 3222     		movs	r2, #50
 3081 13ba 02FB03F3 		mul	r3, r2, r3
 3082 13be 1A1D     		adds	r2, r3, #4
 3083 13c0 07F5BE53 		add	r3, r7, #6080
 3084 13c4 03F11303 		add	r3, r3, #19
 3085 13c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3086 13ca 5B00     		lsls	r3, r3, #1
 3087 13cc 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 82


 3088 13ce 07F5BE53 		add	r3, r7, #6080
 3089 13d2 03F11303 		add	r3, r3, #19
 3090 13d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3091 13d8 1A44     		add	r2, r2, r3
 3092 13da 07F5BE53 		add	r3, r7, #6080
 3093 13de 03F11703 		add	r3, r3, #23
 3094 13e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3095 13e4 D31A     		subs	r3, r2, r3
 3096 13e6 5A1E     		subs	r2, r3, #1
 3097 13e8 07F5BE53 		add	r3, r7, #6080
 3098 13ec 03F11703 		add	r3, r3, #23
 3099 13f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3100 13f2 07F13803 		add	r3, r7, #56
 3101 13f6 1C3B     		subs	r3, r3, #28
 3102 13f8 0B44     		add	r3, r3, r1
 3103 13fa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3104 13fc 07F15803 		add	r3, r7, #88
 3105 1400 043B     		subs	r3, r3, #4
 3106 1402 9954     		strb	r1, [r3, r2]
 554:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3107              		.loc 1 554 0 discriminator 3
 3108 1404 07F5BE53 		add	r3, r7, #6080
 3109 1408 03F11703 		add	r3, r3, #23
 3110 140c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3111 140e 0133     		adds	r3, r3, #1
 3112 1410 07F5BE52 		add	r2, r7, #6080
 3113 1414 02F11702 		add	r2, r2, #23
 3114 1418 1370     		strb	r3, [r2]
 3115              	.L152:
 554:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3116              		.loc 1 554 0 is_stmt 0 discriminator 1
 3117 141a 07F5BE53 		add	r3, r7, #6080
 3118 141e 03F11703 		add	r3, r3, #23
 3119 1422 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3120 1424 07F5BE53 		add	r3, r7, #6080
 3121 1428 03F11303 		add	r3, r3, #19
 3122 142c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3123 142e 9A42     		cmp	r2, r3
 3124 1430 BDD3     		bcc	.L153
 3125              		.loc 1 558 0 is_stmt 1
 3126 1432 01F04AB8 		b	.L114
 3127              	.L119:
 559:..\src/command_processing.c **** 
 560:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 561:..\src/command_processing.c ****                         for (i=0; i<NUM_ITEMS[idx]; i++){
 3128              		.loc 1 561 0
 3129 1436 0023     		movs	r3, #0
 3130 1438 07F5BE52 		add	r2, r7, #6080
 3131 143c 02F11702 		add	r2, r2, #23
 3132 1440 1370     		strb	r3, [r2]
 3133 1442 9DE0     		b	.L154
 3134              	.L295:
 3135              		.align	2
 3136              	.L294:
 3137 1444 00000000 		.word	c_mem
 3138              	.L157:
 562:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 83


 3139              		.loc 1 562 0
 3140 1448 07F5BE53 		add	r3, r7, #6080
 3141 144c 03F10F03 		add	r3, r3, #15
 3142 1450 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3143 1452 C749     		ldr	r1, .L296
 3144 1454 1346     		mov	r3, r2
 3145 1456 DB00     		lsls	r3, r3, #3
 3146 1458 9B1A     		subs	r3, r3, r2
 3147 145a 1B01     		lsls	r3, r3, #4
 3148 145c 0B44     		add	r3, r3, r1
 3149 145e 03F58873 		add	r3, r3, #272
 3150 1462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3151 1464 1846     		mov	r0, r3
 3152 1466 07F5BE53 		add	r3, r7, #6080
 3153 146a 03F11703 		add	r3, r3, #23
 3154 146e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3155 1470 C049     		ldr	r1, .L296+4
 3156 1472 0346     		mov	r3, r0
 3157 1474 5B00     		lsls	r3, r3, #1
 3158 1476 0344     		add	r3, r3, r0
 3159 1478 9B00     		lsls	r3, r3, #2
 3160 147a 1344     		add	r3, r3, r2
 3161 147c 6633     		adds	r3, r3, #102
 3162 147e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3163 1482 07F5BE53 		add	r3, r7, #6080
 3164 1486 03F10F03 		add	r3, r3, #15
 3165 148a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3166 148c B848     		ldr	r0, .L296
 3167 148e 1346     		mov	r3, r2
 3168 1490 DB00     		lsls	r3, r3, #3
 3169 1492 9B1A     		subs	r3, r3, r2
 3170 1494 1B01     		lsls	r3, r3, #4
 3171 1496 0344     		add	r3, r3, r0
 3172 1498 03F58873 		add	r3, r3, #272
 3173 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3174 149e 1C46     		mov	r4, r3
 3175 14a0 07F5BE53 		add	r3, r7, #6080
 3176 14a4 03F11703 		add	r3, r3, #23
 3177 14a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3178 14aa B248     		ldr	r0, .L296+4
 3179 14ac 2346     		mov	r3, r4
 3180 14ae 5B00     		lsls	r3, r3, #1
 3181 14b0 2344     		add	r3, r3, r4
 3182 14b2 1B01     		lsls	r3, r3, #4
 3183 14b4 0344     		add	r3, r3, r0
 3184 14b6 1344     		add	r3, r3, r2
 3185 14b8 03F29513 		addw	r3, r3, #405
 3186 14bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3187 14be 41FA03F3 		asr	r3, r1, r3
 3188 14c2 1AB2     		sxth	r2, r3
 3189 14c4 07F13803 		add	r3, r7, #56
 3190 14c8 1E3B     		subs	r3, r3, #30
 3191 14ca 1A80     		strh	r2, [r3]	@ movhi
 563:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3192              		.loc 1 563 0
 3193 14cc 0023     		movs	r3, #0
 3194 14ce 07F5BE52 		add	r2, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 84


 3195 14d2 02F11602 		add	r2, r2, #22
 3196 14d6 1370     		strb	r3, [r2]
 3197 14d8 3BE0     		b	.L155
 3198              	.L156:
 564:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 3199              		.loc 1 564 0 discriminator 3
 3200 14da 07F5BE53 		add	r3, r7, #6080
 3201 14de 03F11503 		add	r3, r3, #21
 3202 14e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3203 14e4 3222     		movs	r2, #50
 3204 14e6 02FB03F3 		mul	r3, r2, r3
 3205 14ea 1A1D     		adds	r2, r3, #4
 3206 14ec 07F5BE53 		add	r3, r7, #6080
 3207 14f0 03F11703 		add	r3, r3, #23
 3208 14f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3209 14f6 07F5BE51 		add	r1, r7, #6080
 3210 14fa 01F11301 		add	r1, r1, #19
 3211 14fe 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3212 1500 01FB03F3 		mul	r3, r1, r3
 3213 1504 1A44     		add	r2, r2, r3
 3214 1506 07F5BE53 		add	r3, r7, #6080
 3215 150a 03F11303 		add	r3, r3, #19
 3216 150e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3217 1510 1A44     		add	r2, r2, r3
 3218 1512 07F5BE53 		add	r3, r7, #6080
 3219 1516 03F11603 		add	r3, r3, #22
 3220 151a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3221 151c D31A     		subs	r3, r2, r3
 3222 151e 5A1E     		subs	r2, r3, #1
 3223 1520 07F5BE53 		add	r3, r7, #6080
 3224 1524 03F11603 		add	r3, r3, #22
 3225 1528 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3226 152a 07F13803 		add	r3, r7, #56
 3227 152e 1E3B     		subs	r3, r3, #30
 3228 1530 0B44     		add	r3, r3, r1
 3229 1532 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3230 1534 07F15803 		add	r3, r7, #88
 3231 1538 043B     		subs	r3, r3, #4
 3232 153a 9954     		strb	r1, [r3, r2]
 563:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3233              		.loc 1 563 0 discriminator 3
 3234 153c 07F5BE53 		add	r3, r7, #6080
 3235 1540 03F11603 		add	r3, r3, #22
 3236 1544 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3237 1546 0133     		adds	r3, r3, #1
 3238 1548 07F5BE52 		add	r2, r7, #6080
 3239 154c 02F11602 		add	r2, r2, #22
 3240 1550 1370     		strb	r3, [r2]
 3241              	.L155:
 563:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3242              		.loc 1 563 0 is_stmt 0 discriminator 1
 3243 1552 07F5BE53 		add	r3, r7, #6080
 3244 1556 03F11603 		add	r3, r3, #22
 3245 155a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3246 155c 07F5BE53 		add	r3, r7, #6080
 3247 1560 03F11303 		add	r3, r3, #19
 3248 1564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 85


 3249 1566 9A42     		cmp	r2, r3
 3250 1568 B7D3     		bcc	.L156
 561:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3251              		.loc 1 561 0 is_stmt 1 discriminator 2
 3252 156a 07F5BE53 		add	r3, r7, #6080
 3253 156e 03F11703 		add	r3, r3, #23
 3254 1572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3255 1574 0133     		adds	r3, r3, #1
 3256 1576 07F5BE52 		add	r2, r7, #6080
 3257 157a 02F11702 		add	r2, r2, #23
 3258 157e 1370     		strb	r3, [r2]
 3259              	.L154:
 561:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3260              		.loc 1 561 0 is_stmt 0 discriminator 1
 3261 1580 07F5BE53 		add	r3, r7, #6080
 3262 1584 03F11503 		add	r3, r3, #21
 3263 1588 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3264 158a 07F11803 		add	r3, r7, #24
 3265 158e 143B     		subs	r3, r3, #20
 3266 1590 1B68     		ldr	r3, [r3]
 3267 1592 1344     		add	r3, r3, r2
 3268 1594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3269 1596 07F5BE52 		add	r2, r7, #6080
 3270 159a 02F11702 		add	r2, r2, #23
 3271 159e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3272 15a0 9A42     		cmp	r2, r3
 3273 15a2 FFF451AF 		bcc	.L157
 565:..\src/command_processing.c ****                             }
 566:..\src/command_processing.c ****                         }
 567:..\src/command_processing.c ****                         break;
 3274              		.loc 1 567 0 is_stmt 1
 3275 15a6 00F090BF 		b	.L114
 3276              	.L120:
 568:..\src/command_processing.c ****                 
 569:..\src/command_processing.c ****                     case 11:        //Position limits
 570:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3277              		.loc 1 570 0
 3278 15aa 07F5BE53 		add	r3, r7, #6080
 3279 15ae 03F10F03 		add	r3, r3, #15
 3280 15b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3281 15b4 6F49     		ldr	r1, .L296+4
 3282 15b6 1346     		mov	r3, r2
 3283 15b8 DB00     		lsls	r3, r3, #3
 3284 15ba 9B1A     		subs	r3, r3, r2
 3285 15bc 1B01     		lsls	r3, r3, #4
 3286 15be 0B44     		add	r3, r3, r1
 3287 15c0 E433     		adds	r3, r3, #228
 3288 15c2 1968     		ldr	r1, [r3]
 3289 15c4 07F5BE53 		add	r3, r7, #6080
 3290 15c8 03F10F03 		add	r3, r3, #15
 3291 15cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3292 15ce 6848     		ldr	r0, .L296
 3293 15d0 1346     		mov	r3, r2
 3294 15d2 DB00     		lsls	r3, r3, #3
 3295 15d4 9B1A     		subs	r3, r3, r2
 3296 15d6 1B01     		lsls	r3, r3, #4
 3297 15d8 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 86


 3298 15da 03F58873 		add	r3, r3, #272
 3299 15de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3300 15e0 1846     		mov	r0, r3
 3301 15e2 644A     		ldr	r2, .L296+4
 3302 15e4 0346     		mov	r3, r0
 3303 15e6 5B00     		lsls	r3, r3, #1
 3304 15e8 0344     		add	r3, r3, r0
 3305 15ea 1B01     		lsls	r3, r3, #4
 3306 15ec 1344     		add	r3, r3, r2
 3307 15ee 03F29513 		addw	r3, r3, #405
 3308 15f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3309 15f4 41FA03F2 		asr	r2, r1, r3
 3310 15f8 07F11803 		add	r3, r7, #24
 3311 15fc 043B     		subs	r3, r3, #4
 3312 15fe 1A60     		str	r2, [r3]
 571:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3313              		.loc 1 571 0
 3314 1600 0023     		movs	r3, #0
 3315 1602 07F5BE52 		add	r2, r7, #6080
 3316 1606 02F11602 		add	r2, r2, #22
 3317 160a 1370     		strb	r3, [r2]
 3318 160c 2EE0     		b	.L158
 3319              	.L159:
 572:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3320              		.loc 1 572 0 discriminator 3
 3321 160e 07F5BE53 		add	r3, r7, #6080
 3322 1612 03F11503 		add	r3, r3, #21
 3323 1616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3324 1618 3222     		movs	r2, #50
 3325 161a 02FB03F3 		mul	r3, r2, r3
 3326 161e 1A1D     		adds	r2, r3, #4
 3327 1620 07F5BE53 		add	r3, r7, #6080
 3328 1624 03F11303 		add	r3, r3, #19
 3329 1628 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3330 162a 1A44     		add	r2, r2, r3
 3331 162c 07F5BE53 		add	r3, r7, #6080
 3332 1630 03F11603 		add	r3, r3, #22
 3333 1634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3334 1636 D31A     		subs	r3, r2, r3
 3335 1638 5A1E     		subs	r2, r3, #1
 3336 163a 07F5BE53 		add	r3, r7, #6080
 3337 163e 03F11603 		add	r3, r3, #22
 3338 1642 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3339 1644 07F11803 		add	r3, r7, #24
 3340 1648 043B     		subs	r3, r3, #4
 3341 164a 0B44     		add	r3, r3, r1
 3342 164c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3343 164e 07F15803 		add	r3, r7, #88
 3344 1652 043B     		subs	r3, r3, #4
 3345 1654 9954     		strb	r1, [r3, r2]
 571:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3346              		.loc 1 571 0 discriminator 3
 3347 1656 07F5BE53 		add	r3, r7, #6080
 3348 165a 03F11603 		add	r3, r3, #22
 3349 165e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3350 1660 0133     		adds	r3, r3, #1
 3351 1662 07F5BE52 		add	r2, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 87


 3352 1666 02F11602 		add	r2, r2, #22
 3353 166a 1370     		strb	r3, [r2]
 3354              	.L158:
 571:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3355              		.loc 1 571 0 is_stmt 0 discriminator 1
 3356 166c 07F5BE53 		add	r3, r7, #6080
 3357 1670 03F11603 		add	r3, r3, #22
 3358 1674 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3359 1676 07F5BE53 		add	r3, r7, #6080
 3360 167a 03F11303 		add	r3, r3, #19
 3361 167e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3362 1680 9A42     		cmp	r2, r3
 3363 1682 C4D3     		bcc	.L159
 573:..\src/command_processing.c ****                         }
 574:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3364              		.loc 1 574 0 is_stmt 1
 3365 1684 07F5BE53 		add	r3, r7, #6080
 3366 1688 03F10F03 		add	r3, r3, #15
 3367 168c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3368 168e 3949     		ldr	r1, .L296+4
 3369 1690 1346     		mov	r3, r2
 3370 1692 DB00     		lsls	r3, r3, #3
 3371 1694 9B1A     		subs	r3, r3, r2
 3372 1696 1B01     		lsls	r3, r3, #4
 3373 1698 0B44     		add	r3, r3, r1
 3374 169a E833     		adds	r3, r3, #232
 3375 169c 1968     		ldr	r1, [r3]
 3376 169e 07F5BE53 		add	r3, r7, #6080
 3377 16a2 03F10F03 		add	r3, r3, #15
 3378 16a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3379 16a8 3148     		ldr	r0, .L296
 3380 16aa 1346     		mov	r3, r2
 3381 16ac DB00     		lsls	r3, r3, #3
 3382 16ae 9B1A     		subs	r3, r3, r2
 3383 16b0 1B01     		lsls	r3, r3, #4
 3384 16b2 0344     		add	r3, r3, r0
 3385 16b4 03F58873 		add	r3, r3, #272
 3386 16b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3387 16ba 1846     		mov	r0, r3
 3388 16bc 2D4A     		ldr	r2, .L296+4
 3389 16be 0346     		mov	r3, r0
 3390 16c0 5B00     		lsls	r3, r3, #1
 3391 16c2 0344     		add	r3, r3, r0
 3392 16c4 1B01     		lsls	r3, r3, #4
 3393 16c6 1344     		add	r3, r3, r2
 3394 16c8 03F29513 		addw	r3, r3, #405
 3395 16cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3396 16ce 41FA03F2 		asr	r2, r1, r3
 3397 16d2 07F11803 		add	r3, r7, #24
 3398 16d6 043B     		subs	r3, r3, #4
 3399 16d8 1A60     		str	r2, [r3]
 575:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3400              		.loc 1 575 0
 3401 16da 0023     		movs	r3, #0
 3402 16dc 07F5BE52 		add	r2, r7, #6080
 3403 16e0 02F11602 		add	r2, r2, #22
 3404 16e4 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 88


 3405 16e6 34E0     		b	.L160
 3406              	.L161:
 576:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3407              		.loc 1 576 0 discriminator 3
 3408 16e8 07F5BE53 		add	r3, r7, #6080
 3409 16ec 03F11503 		add	r3, r3, #21
 3410 16f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3411 16f2 3222     		movs	r2, #50
 3412 16f4 02FB03F3 		mul	r3, r2, r3
 3413 16f8 1A1D     		adds	r2, r3, #4
 3414 16fa 07F5BE53 		add	r3, r7, #6080
 3415 16fe 03F11303 		add	r3, r3, #19
 3416 1702 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3417 1704 1A44     		add	r2, r2, r3
 3418 1706 07F5BE53 		add	r3, r7, #6080
 3419 170a 03F11303 		add	r3, r3, #19
 3420 170e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3421 1710 1A44     		add	r2, r2, r3
 3422 1712 07F5BE53 		add	r3, r7, #6080
 3423 1716 03F11603 		add	r3, r3, #22
 3424 171a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3425 171c D31A     		subs	r3, r2, r3
 3426 171e 5A1E     		subs	r2, r3, #1
 3427 1720 07F5BE53 		add	r3, r7, #6080
 3428 1724 03F11603 		add	r3, r3, #22
 3429 1728 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3430 172a 07F11803 		add	r3, r7, #24
 3431 172e 043B     		subs	r3, r3, #4
 3432 1730 0B44     		add	r3, r3, r1
 3433 1732 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3434 1734 07F15803 		add	r3, r7, #88
 3435 1738 043B     		subs	r3, r3, #4
 3436 173a 9954     		strb	r1, [r3, r2]
 575:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3437              		.loc 1 575 0 discriminator 3
 3438 173c 07F5BE53 		add	r3, r7, #6080
 3439 1740 03F11603 		add	r3, r3, #22
 3440 1744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3441 1746 0133     		adds	r3, r3, #1
 3442 1748 07F5BE52 		add	r2, r7, #6080
 3443 174c 02F11602 		add	r2, r2, #22
 3444 1750 1370     		strb	r3, [r2]
 3445              	.L160:
 575:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3446              		.loc 1 575 0 is_stmt 0 discriminator 1
 3447 1752 07F5BE53 		add	r3, r7, #6080
 3448 1756 03F11603 		add	r3, r3, #22
 3449 175a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3450 175c 07F5BE53 		add	r3, r7, #6080
 3451 1760 03F11303 		add	r3, r3, #19
 3452 1764 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3453 1766 9A42     		cmp	r2, r3
 3454 1768 BED3     		bcc	.L161
 577:..\src/command_processing.c ****                         }
 578:..\src/command_processing.c ****                         break;            
 3455              		.loc 1 578 0 is_stmt 1
 3456 176a 00F0AEBE 		b	.L114
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 89


 3457              	.L297:
 3458 176e 00BF     		.align	2
 3459              	.L296:
 3460 1770 00000000 		.word	g_mem
 3461 1774 00000000 		.word	c_mem
 3462              	.L121:
 579:..\src/command_processing.c **** 
 580:..\src/command_processing.c ****                     case 23:        //Rest Position
 581:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3463              		.loc 1 581 0
 3464 1778 CF4B     		ldr	r3, .L298
 3465 177a D3F8A012 		ldr	r1, [r3, #672]
 3466 177e 07F5BE53 		add	r3, r7, #6080
 3467 1782 03F10F03 		add	r3, r3, #15
 3468 1786 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3469 1788 CC48     		ldr	r0, .L298+4
 3470 178a 1346     		mov	r3, r2
 3471 178c DB00     		lsls	r3, r3, #3
 3472 178e 9B1A     		subs	r3, r3, r2
 3473 1790 1B01     		lsls	r3, r3, #4
 3474 1792 0344     		add	r3, r3, r0
 3475 1794 03F58873 		add	r3, r3, #272
 3476 1798 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3477 179a 1846     		mov	r0, r3
 3478 179c C64A     		ldr	r2, .L298
 3479 179e 0346     		mov	r3, r0
 3480 17a0 5B00     		lsls	r3, r3, #1
 3481 17a2 0344     		add	r3, r3, r0
 3482 17a4 1B01     		lsls	r3, r3, #4
 3483 17a6 1344     		add	r3, r3, r2
 3484 17a8 03F29513 		addw	r3, r3, #405
 3485 17ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3486 17ae 41FA03F2 		asr	r2, r1, r3
 3487 17b2 07F11803 		add	r3, r7, #24
 3488 17b6 043B     		subs	r3, r3, #4
 3489 17b8 1A60     		str	r2, [r3]
 582:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3490              		.loc 1 582 0
 3491 17ba 0023     		movs	r3, #0
 3492 17bc 07F5BE52 		add	r2, r7, #6080
 3493 17c0 02F11602 		add	r2, r2, #22
 3494 17c4 1370     		strb	r3, [r2]
 3495 17c6 2EE0     		b	.L162
 3496              	.L163:
 583:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3497              		.loc 1 583 0 discriminator 3
 3498 17c8 07F5BE53 		add	r3, r7, #6080
 3499 17cc 03F11503 		add	r3, r3, #21
 3500 17d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3501 17d2 3222     		movs	r2, #50
 3502 17d4 02FB03F3 		mul	r3, r2, r3
 3503 17d8 1A1D     		adds	r2, r3, #4
 3504 17da 07F5BE53 		add	r3, r7, #6080
 3505 17de 03F11303 		add	r3, r3, #19
 3506 17e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3507 17e4 1A44     		add	r2, r2, r3
 3508 17e6 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 90


 3509 17ea 03F11603 		add	r3, r3, #22
 3510 17ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3511 17f0 D31A     		subs	r3, r2, r3
 3512 17f2 5A1E     		subs	r2, r3, #1
 3513 17f4 07F5BE53 		add	r3, r7, #6080
 3514 17f8 03F11603 		add	r3, r3, #22
 3515 17fc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3516 17fe 07F11803 		add	r3, r7, #24
 3517 1802 043B     		subs	r3, r3, #4
 3518 1804 0B44     		add	r3, r3, r1
 3519 1806 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3520 1808 07F15803 		add	r3, r7, #88
 3521 180c 043B     		subs	r3, r3, #4
 3522 180e 9954     		strb	r1, [r3, r2]
 582:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3523              		.loc 1 582 0 discriminator 3
 3524 1810 07F5BE53 		add	r3, r7, #6080
 3525 1814 03F11603 		add	r3, r3, #22
 3526 1818 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3527 181a 0133     		adds	r3, r3, #1
 3528 181c 07F5BE52 		add	r2, r7, #6080
 3529 1820 02F11602 		add	r2, r2, #22
 3530 1824 1370     		strb	r3, [r2]
 3531              	.L162:
 582:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3532              		.loc 1 582 0 is_stmt 0 discriminator 1
 3533 1826 07F5BE53 		add	r3, r7, #6080
 3534 182a 03F11603 		add	r3, r3, #22
 3535 182e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3536 1830 07F5BE53 		add	r3, r7, #6080
 3537 1834 03F11303 		add	r3, r3, #19
 3538 1838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3539 183a 9A42     		cmp	r2, r3
 3540 183c C4D3     		bcc	.L163
 584:..\src/command_processing.c ****                         }
 585:..\src/command_processing.c ****                         break; 
 3541              		.loc 1 585 0 is_stmt 1
 3542 183e 00F044BE 		b	.L114
 3543              	.L122:
 586:..\src/command_processing.c ****                         
 587:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 588:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3544              		.loc 1 588 0
 3545 1842 07F5BE53 		add	r3, r7, #6080
 3546 1846 03F10E03 		add	r3, r3, #14
 3547 184a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3548 184c 9A49     		ldr	r1, .L298
 3549 184e 1346     		mov	r3, r2
 3550 1850 DB00     		lsls	r3, r3, #3
 3551 1852 9B1A     		subs	r3, r3, r2
 3552 1854 1B01     		lsls	r3, r3, #4
 3553 1856 0B44     		add	r3, r3, r1
 3554 1858 03F20F13 		addw	r3, r3, #271
 3555 185c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3556 185e 032B     		cmp	r3, #3
 3557 1860 00F02E81 		beq	.L164
 589:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 91


 3558              		.loc 1 589 0
 3559 1864 07F5BE53 		add	r3, r7, #6080
 3560 1868 03F10E03 		add	r3, r3, #14
 3561 186c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3562 186e 9249     		ldr	r1, .L298
 3563 1870 1346     		mov	r3, r2
 3564 1872 DB00     		lsls	r3, r3, #3
 3565 1874 9B1A     		subs	r3, r3, r2
 3566 1876 1B01     		lsls	r3, r3, #4
 3567 1878 0B44     		add	r3, r3, r1
 3568 187a B033     		adds	r3, r3, #176
 3569 187c 1B68     		ldr	r3, [r3]
 3570 187e 1846     		mov	r0, r3
 3571 1880 FFF7FEFF 		bl	__aeabi_i2f
 3572 1884 0346     		mov	r3, r0
 3573 1886 4FF08F41 		mov	r1, #1199570944
 3574 188a 1846     		mov	r0, r3
 3575 188c FFF7FEFF 		bl	__aeabi_fdiv
 3576 1890 0346     		mov	r3, r0
 3577 1892 1A46     		mov	r2, r3
 3578 1894 07F13803 		add	r3, r7, #56
 3579 1898 1C3B     		subs	r3, r3, #28
 3580 189a 1A60     		str	r2, [r3]	@ float
 590:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3581              		.loc 1 590 0
 3582 189c 0023     		movs	r3, #0
 3583 189e 07F5BE52 		add	r2, r7, #6080
 3584 18a2 02F11702 		add	r2, r2, #23
 3585 18a6 1370     		strb	r3, [r2]
 3586 18a8 2EE0     		b	.L165
 3587              	.L166:
 591:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3588              		.loc 1 591 0 discriminator 3
 3589 18aa 07F5BE53 		add	r3, r7, #6080
 3590 18ae 03F11503 		add	r3, r3, #21
 3591 18b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3592 18b4 3222     		movs	r2, #50
 3593 18b6 02FB03F3 		mul	r3, r2, r3
 3594 18ba 1A1D     		adds	r2, r3, #4
 3595 18bc 07F5BE53 		add	r3, r7, #6080
 3596 18c0 03F11303 		add	r3, r3, #19
 3597 18c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3598 18c6 1A44     		add	r2, r2, r3
 3599 18c8 07F5BE53 		add	r3, r7, #6080
 3600 18cc 03F11703 		add	r3, r3, #23
 3601 18d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3602 18d2 D31A     		subs	r3, r2, r3
 3603 18d4 5A1E     		subs	r2, r3, #1
 3604 18d6 07F5BE53 		add	r3, r7, #6080
 3605 18da 03F11703 		add	r3, r3, #23
 3606 18de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3607 18e0 07F13803 		add	r3, r7, #56
 3608 18e4 1C3B     		subs	r3, r3, #28
 3609 18e6 0B44     		add	r3, r3, r1
 3610 18e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3611 18ea 07F15803 		add	r3, r7, #88
 3612 18ee 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 92


 3613 18f0 9954     		strb	r1, [r3, r2]
 590:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3614              		.loc 1 590 0 discriminator 3
 3615 18f2 07F5BE53 		add	r3, r7, #6080
 3616 18f6 03F11703 		add	r3, r3, #23
 3617 18fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3618 18fc 0133     		adds	r3, r3, #1
 3619 18fe 07F5BE52 		add	r2, r7, #6080
 3620 1902 02F11702 		add	r2, r2, #23
 3621 1906 1370     		strb	r3, [r2]
 3622              	.L165:
 590:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3623              		.loc 1 590 0 is_stmt 0 discriminator 1
 3624 1908 07F5BE53 		add	r3, r7, #6080
 3625 190c 03F11703 		add	r3, r3, #23
 3626 1910 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3627 1912 07F5BE53 		add	r3, r7, #6080
 3628 1916 03F11303 		add	r3, r3, #19
 3629 191a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3630 191c 9A42     		cmp	r2, r3
 3631 191e C4D3     		bcc	.L166
 592:..\src/command_processing.c ****                             }
 593:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3632              		.loc 1 593 0 is_stmt 1
 3633 1920 07F5BE53 		add	r3, r7, #6080
 3634 1924 03F10E03 		add	r3, r3, #14
 3635 1928 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3636 192a 6349     		ldr	r1, .L298
 3637 192c 1346     		mov	r3, r2
 3638 192e DB00     		lsls	r3, r3, #3
 3639 1930 9B1A     		subs	r3, r3, r2
 3640 1932 1B01     		lsls	r3, r3, #4
 3641 1934 0B44     		add	r3, r3, r1
 3642 1936 B433     		adds	r3, r3, #180
 3643 1938 1B68     		ldr	r3, [r3]
 3644 193a 1846     		mov	r0, r3
 3645 193c FFF7FEFF 		bl	__aeabi_i2f
 3646 1940 0346     		mov	r3, r0
 3647 1942 4FF08F41 		mov	r1, #1199570944
 3648 1946 1846     		mov	r0, r3
 3649 1948 FFF7FEFF 		bl	__aeabi_fdiv
 3650 194c 0346     		mov	r3, r0
 3651 194e 1A46     		mov	r2, r3
 3652 1950 07F13803 		add	r3, r7, #56
 3653 1954 1C3B     		subs	r3, r3, #28
 3654 1956 1A60     		str	r2, [r3]	@ float
 594:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3655              		.loc 1 594 0
 3656 1958 0023     		movs	r3, #0
 3657 195a 07F5BE52 		add	r2, r7, #6080
 3658 195e 02F11702 		add	r2, r2, #23
 3659 1962 1370     		strb	r3, [r2]
 3660 1964 34E0     		b	.L167
 3661              	.L168:
 595:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3662              		.loc 1 595 0 discriminator 3
 3663 1966 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 93


 3664 196a 03F11503 		add	r3, r3, #21
 3665 196e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3666 1970 3222     		movs	r2, #50
 3667 1972 02FB03F3 		mul	r3, r2, r3
 3668 1976 1A1D     		adds	r2, r3, #4
 3669 1978 07F5BE53 		add	r3, r7, #6080
 3670 197c 03F11303 		add	r3, r3, #19
 3671 1980 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3672 1982 1A44     		add	r2, r2, r3
 3673 1984 07F5BE53 		add	r3, r7, #6080
 3674 1988 03F11303 		add	r3, r3, #19
 3675 198c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3676 198e 1A44     		add	r2, r2, r3
 3677 1990 07F5BE53 		add	r3, r7, #6080
 3678 1994 03F11703 		add	r3, r3, #23
 3679 1998 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3680 199a D31A     		subs	r3, r2, r3
 3681 199c 5A1E     		subs	r2, r3, #1
 3682 199e 07F5BE53 		add	r3, r7, #6080
 3683 19a2 03F11703 		add	r3, r3, #23
 3684 19a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3685 19a8 07F13803 		add	r3, r7, #56
 3686 19ac 1C3B     		subs	r3, r3, #28
 3687 19ae 0B44     		add	r3, r3, r1
 3688 19b0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3689 19b2 07F15803 		add	r3, r7, #88
 3690 19b6 043B     		subs	r3, r3, #4
 3691 19b8 9954     		strb	r1, [r3, r2]
 594:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3692              		.loc 1 594 0 discriminator 3
 3693 19ba 07F5BE53 		add	r3, r7, #6080
 3694 19be 03F11703 		add	r3, r3, #23
 3695 19c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3696 19c4 0133     		adds	r3, r3, #1
 3697 19c6 07F5BE52 		add	r2, r7, #6080
 3698 19ca 02F11702 		add	r2, r2, #23
 3699 19ce 1370     		strb	r3, [r2]
 3700              	.L167:
 594:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3701              		.loc 1 594 0 is_stmt 0 discriminator 1
 3702 19d0 07F5BE53 		add	r3, r7, #6080
 3703 19d4 03F11703 		add	r3, r3, #23
 3704 19d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3705 19da 07F5BE53 		add	r3, r7, #6080
 3706 19de 03F11303 		add	r3, r3, #19
 3707 19e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3708 19e4 9A42     		cmp	r2, r3
 3709 19e6 BED3     		bcc	.L168
 596:..\src/command_processing.c ****                             }
 597:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3710              		.loc 1 597 0 is_stmt 1
 3711 19e8 07F5BE53 		add	r3, r7, #6080
 3712 19ec 03F10E03 		add	r3, r3, #14
 3713 19f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3714 19f2 3149     		ldr	r1, .L298
 3715 19f4 1346     		mov	r3, r2
 3716 19f6 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 94


 3717 19f8 9B1A     		subs	r3, r3, r2
 3718 19fa 1B01     		lsls	r3, r3, #4
 3719 19fc 0B44     		add	r3, r3, r1
 3720 19fe B833     		adds	r3, r3, #184
 3721 1a00 1B68     		ldr	r3, [r3]
 3722 1a02 1846     		mov	r0, r3
 3723 1a04 FFF7FEFF 		bl	__aeabi_i2f
 3724 1a08 0346     		mov	r3, r0
 3725 1a0a 4FF08F41 		mov	r1, #1199570944
 3726 1a0e 1846     		mov	r0, r3
 3727 1a10 FFF7FEFF 		bl	__aeabi_fdiv
 3728 1a14 0346     		mov	r3, r0
 3729 1a16 1A46     		mov	r2, r3
 3730 1a18 07F13803 		add	r3, r7, #56
 3731 1a1c 1C3B     		subs	r3, r3, #28
 3732 1a1e 1A60     		str	r2, [r3]	@ float
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3733              		.loc 1 598 0
 3734 1a20 0023     		movs	r3, #0
 3735 1a22 07F5BE52 		add	r2, r7, #6080
 3736 1a26 02F11702 		add	r2, r2, #23
 3737 1a2a 1370     		strb	r3, [r2]
 3738 1a2c 35E0     		b	.L169
 3739              	.L170:
 599:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3740              		.loc 1 599 0 discriminator 3
 3741 1a2e 07F5BE53 		add	r3, r7, #6080
 3742 1a32 03F11503 		add	r3, r3, #21
 3743 1a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3744 1a38 3222     		movs	r2, #50
 3745 1a3a 02FB03F3 		mul	r3, r2, r3
 3746 1a3e 1A1D     		adds	r2, r3, #4
 3747 1a40 07F5BE53 		add	r3, r7, #6080
 3748 1a44 03F11303 		add	r3, r3, #19
 3749 1a48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3750 1a4a 5B00     		lsls	r3, r3, #1
 3751 1a4c 1A44     		add	r2, r2, r3
 3752 1a4e 07F5BE53 		add	r3, r7, #6080
 3753 1a52 03F11303 		add	r3, r3, #19
 3754 1a56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3755 1a58 1A44     		add	r2, r2, r3
 3756 1a5a 07F5BE53 		add	r3, r7, #6080
 3757 1a5e 03F11703 		add	r3, r3, #23
 3758 1a62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3759 1a64 D31A     		subs	r3, r2, r3
 3760 1a66 5A1E     		subs	r2, r3, #1
 3761 1a68 07F5BE53 		add	r3, r7, #6080
 3762 1a6c 03F11703 		add	r3, r3, #23
 3763 1a70 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3764 1a72 07F13803 		add	r3, r7, #56
 3765 1a76 1C3B     		subs	r3, r3, #28
 3766 1a78 0B44     		add	r3, r3, r1
 3767 1a7a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3768 1a7c 07F15803 		add	r3, r7, #88
 3769 1a80 043B     		subs	r3, r3, #4
 3770 1a82 9954     		strb	r1, [r3, r2]
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 95


 3771              		.loc 1 598 0 discriminator 3
 3772 1a84 07F5BE53 		add	r3, r7, #6080
 3773 1a88 03F11703 		add	r3, r3, #23
 3774 1a8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3775 1a8e 0133     		adds	r3, r3, #1
 3776 1a90 07F5BE52 		add	r2, r7, #6080
 3777 1a94 02F11702 		add	r2, r2, #23
 3778 1a98 1370     		strb	r3, [r2]
 3779              	.L169:
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3780              		.loc 1 598 0 is_stmt 0 discriminator 1
 3781 1a9a 07F5BE53 		add	r3, r7, #6080
 3782 1a9e 03F11703 		add	r3, r3, #23
 3783 1aa2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3784 1aa4 07F5BE53 		add	r3, r7, #6080
 3785 1aa8 03F11303 		add	r3, r3, #19
 3786 1aac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3787 1aae 9A42     		cmp	r2, r3
 3788 1ab0 BDD3     		bcc	.L170
 600:..\src/command_processing.c ****                             } 
 601:..\src/command_processing.c ****                         }
 602:..\src/command_processing.c ****                         else {
 603:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 606:..\src/command_processing.c ****                             }
 607:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 608:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 609:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 610:..\src/command_processing.c ****                             }
 611:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 612:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 613:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 614:..\src/command_processing.c ****                             }
 615:..\src/command_processing.c ****                         }
 616:..\src/command_processing.c ****                         break;
 3789              		.loc 1 616 0 is_stmt 1
 3790 1ab2 00F00ABD 		b	.L114
 3791              	.L299:
 3792 1ab6 00BF     		.align	2
 3793              	.L298:
 3794 1ab8 00000000 		.word	c_mem
 3795 1abc 00000000 		.word	g_mem
 3796              	.L164:
 603:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3797              		.loc 1 603 0
 3798 1ac0 07F5BE53 		add	r3, r7, #6080
 3799 1ac4 03F10E03 		add	r3, r3, #14
 3800 1ac8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3801 1aca AB49     		ldr	r1, .L300
 3802 1acc 1346     		mov	r3, r2
 3803 1ace DB00     		lsls	r3, r3, #3
 3804 1ad0 9B1A     		subs	r3, r3, r2
 3805 1ad2 1B01     		lsls	r3, r3, #4
 3806 1ad4 0B44     		add	r3, r3, r1
 3807 1ad6 C833     		adds	r3, r3, #200
 3808 1ad8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 96


 3809 1ada 1846     		mov	r0, r3
 3810 1adc FFF7FEFF 		bl	__aeabi_i2f
 3811 1ae0 0346     		mov	r3, r0
 3812 1ae2 4FF08F41 		mov	r1, #1199570944
 3813 1ae6 1846     		mov	r0, r3
 3814 1ae8 FFF7FEFF 		bl	__aeabi_fdiv
 3815 1aec 0346     		mov	r3, r0
 3816 1aee 1A46     		mov	r2, r3
 3817 1af0 07F13803 		add	r3, r7, #56
 3818 1af4 1C3B     		subs	r3, r3, #28
 3819 1af6 1A60     		str	r2, [r3]	@ float
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3820              		.loc 1 604 0
 3821 1af8 0023     		movs	r3, #0
 3822 1afa 07F5BE52 		add	r2, r7, #6080
 3823 1afe 02F11702 		add	r2, r2, #23
 3824 1b02 1370     		strb	r3, [r2]
 3825 1b04 2EE0     		b	.L172
 3826              	.L173:
 605:..\src/command_processing.c ****                             }
 3827              		.loc 1 605 0 discriminator 3
 3828 1b06 07F5BE53 		add	r3, r7, #6080
 3829 1b0a 03F11503 		add	r3, r3, #21
 3830 1b0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3831 1b10 3222     		movs	r2, #50
 3832 1b12 02FB03F3 		mul	r3, r2, r3
 3833 1b16 1A1D     		adds	r2, r3, #4
 3834 1b18 07F5BE53 		add	r3, r7, #6080
 3835 1b1c 03F11303 		add	r3, r3, #19
 3836 1b20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3837 1b22 1A44     		add	r2, r2, r3
 3838 1b24 07F5BE53 		add	r3, r7, #6080
 3839 1b28 03F11703 		add	r3, r3, #23
 3840 1b2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3841 1b2e D31A     		subs	r3, r2, r3
 3842 1b30 5A1E     		subs	r2, r3, #1
 3843 1b32 07F5BE53 		add	r3, r7, #6080
 3844 1b36 03F11703 		add	r3, r3, #23
 3845 1b3a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3846 1b3c 07F13803 		add	r3, r7, #56
 3847 1b40 1C3B     		subs	r3, r3, #28
 3848 1b42 0B44     		add	r3, r3, r1
 3849 1b44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3850 1b46 07F15803 		add	r3, r7, #88
 3851 1b4a 043B     		subs	r3, r3, #4
 3852 1b4c 9954     		strb	r1, [r3, r2]
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3853              		.loc 1 604 0 discriminator 3
 3854 1b4e 07F5BE53 		add	r3, r7, #6080
 3855 1b52 03F11703 		add	r3, r3, #23
 3856 1b56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3857 1b58 0133     		adds	r3, r3, #1
 3858 1b5a 07F5BE52 		add	r2, r7, #6080
 3859 1b5e 02F11702 		add	r2, r2, #23
 3860 1b62 1370     		strb	r3, [r2]
 3861              	.L172:
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 97


 3862              		.loc 1 604 0 is_stmt 0 discriminator 1
 3863 1b64 07F5BE53 		add	r3, r7, #6080
 3864 1b68 03F11703 		add	r3, r3, #23
 3865 1b6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3866 1b6e 07F5BE53 		add	r3, r7, #6080
 3867 1b72 03F11303 		add	r3, r3, #19
 3868 1b76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3869 1b78 9A42     		cmp	r2, r3
 3870 1b7a C4D3     		bcc	.L173
 607:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3871              		.loc 1 607 0 is_stmt 1
 3872 1b7c 07F5BE53 		add	r3, r7, #6080
 3873 1b80 03F10E03 		add	r3, r3, #14
 3874 1b84 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3875 1b86 7C49     		ldr	r1, .L300
 3876 1b88 1346     		mov	r3, r2
 3877 1b8a DB00     		lsls	r3, r3, #3
 3878 1b8c 9B1A     		subs	r3, r3, r2
 3879 1b8e 1B01     		lsls	r3, r3, #4
 3880 1b90 0B44     		add	r3, r3, r1
 3881 1b92 CC33     		adds	r3, r3, #204
 3882 1b94 1B68     		ldr	r3, [r3]
 3883 1b96 1846     		mov	r0, r3
 3884 1b98 FFF7FEFF 		bl	__aeabi_i2f
 3885 1b9c 0346     		mov	r3, r0
 3886 1b9e 4FF08F41 		mov	r1, #1199570944
 3887 1ba2 1846     		mov	r0, r3
 3888 1ba4 FFF7FEFF 		bl	__aeabi_fdiv
 3889 1ba8 0346     		mov	r3, r0
 3890 1baa 1A46     		mov	r2, r3
 3891 1bac 07F13803 		add	r3, r7, #56
 3892 1bb0 1C3B     		subs	r3, r3, #28
 3893 1bb2 1A60     		str	r2, [r3]	@ float
 608:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3894              		.loc 1 608 0
 3895 1bb4 0023     		movs	r3, #0
 3896 1bb6 07F5BE52 		add	r2, r7, #6080
 3897 1bba 02F11702 		add	r2, r2, #23
 3898 1bbe 1370     		strb	r3, [r2]
 3899 1bc0 34E0     		b	.L174
 3900              	.L175:
 609:..\src/command_processing.c ****                             }
 3901              		.loc 1 609 0 discriminator 3
 3902 1bc2 07F5BE53 		add	r3, r7, #6080
 3903 1bc6 03F11503 		add	r3, r3, #21
 3904 1bca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3905 1bcc 3222     		movs	r2, #50
 3906 1bce 02FB03F3 		mul	r3, r2, r3
 3907 1bd2 1A1D     		adds	r2, r3, #4
 3908 1bd4 07F5BE53 		add	r3, r7, #6080
 3909 1bd8 03F11303 		add	r3, r3, #19
 3910 1bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3911 1bde 1A44     		add	r2, r2, r3
 3912 1be0 07F5BE53 		add	r3, r7, #6080
 3913 1be4 03F11303 		add	r3, r3, #19
 3914 1be8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3915 1bea 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 98


 3916 1bec 07F5BE53 		add	r3, r7, #6080
 3917 1bf0 03F11703 		add	r3, r3, #23
 3918 1bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3919 1bf6 D31A     		subs	r3, r2, r3
 3920 1bf8 5A1E     		subs	r2, r3, #1
 3921 1bfa 07F5BE53 		add	r3, r7, #6080
 3922 1bfe 03F11703 		add	r3, r3, #23
 3923 1c02 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3924 1c04 07F13803 		add	r3, r7, #56
 3925 1c08 1C3B     		subs	r3, r3, #28
 3926 1c0a 0B44     		add	r3, r3, r1
 3927 1c0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3928 1c0e 07F15803 		add	r3, r7, #88
 3929 1c12 043B     		subs	r3, r3, #4
 3930 1c14 9954     		strb	r1, [r3, r2]
 608:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3931              		.loc 1 608 0 discriminator 3
 3932 1c16 07F5BE53 		add	r3, r7, #6080
 3933 1c1a 03F11703 		add	r3, r3, #23
 3934 1c1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3935 1c20 0133     		adds	r3, r3, #1
 3936 1c22 07F5BE52 		add	r2, r7, #6080
 3937 1c26 02F11702 		add	r2, r2, #23
 3938 1c2a 1370     		strb	r3, [r2]
 3939              	.L174:
 608:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3940              		.loc 1 608 0 is_stmt 0 discriminator 1
 3941 1c2c 07F5BE53 		add	r3, r7, #6080
 3942 1c30 03F11703 		add	r3, r3, #23
 3943 1c34 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3944 1c36 07F5BE53 		add	r3, r7, #6080
 3945 1c3a 03F11303 		add	r3, r3, #19
 3946 1c3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3947 1c40 9A42     		cmp	r2, r3
 3948 1c42 BED3     		bcc	.L175
 611:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3949              		.loc 1 611 0 is_stmt 1
 3950 1c44 07F5BE53 		add	r3, r7, #6080
 3951 1c48 03F10E03 		add	r3, r3, #14
 3952 1c4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3953 1c4e 4A49     		ldr	r1, .L300
 3954 1c50 1346     		mov	r3, r2
 3955 1c52 DB00     		lsls	r3, r3, #3
 3956 1c54 9B1A     		subs	r3, r3, r2
 3957 1c56 1B01     		lsls	r3, r3, #4
 3958 1c58 0B44     		add	r3, r3, r1
 3959 1c5a D033     		adds	r3, r3, #208
 3960 1c5c 1B68     		ldr	r3, [r3]
 3961 1c5e 1846     		mov	r0, r3
 3962 1c60 FFF7FEFF 		bl	__aeabi_i2f
 3963 1c64 0346     		mov	r3, r0
 3964 1c66 4FF08F41 		mov	r1, #1199570944
 3965 1c6a 1846     		mov	r0, r3
 3966 1c6c FFF7FEFF 		bl	__aeabi_fdiv
 3967 1c70 0346     		mov	r3, r0
 3968 1c72 1A46     		mov	r2, r3
 3969 1c74 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 99


 3970 1c78 1C3B     		subs	r3, r3, #28
 3971 1c7a 1A60     		str	r2, [r3]	@ float
 612:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3972              		.loc 1 612 0
 3973 1c7c 0023     		movs	r3, #0
 3974 1c7e 07F5BE52 		add	r2, r7, #6080
 3975 1c82 02F11702 		add	r2, r2, #23
 3976 1c86 1370     		strb	r3, [r2]
 3977 1c88 35E0     		b	.L176
 3978              	.L177:
 613:..\src/command_processing.c ****                             }
 3979              		.loc 1 613 0 discriminator 3
 3980 1c8a 07F5BE53 		add	r3, r7, #6080
 3981 1c8e 03F11503 		add	r3, r3, #21
 3982 1c92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3983 1c94 3222     		movs	r2, #50
 3984 1c96 02FB03F3 		mul	r3, r2, r3
 3985 1c9a 1A1D     		adds	r2, r3, #4
 3986 1c9c 07F5BE53 		add	r3, r7, #6080
 3987 1ca0 03F11303 		add	r3, r3, #19
 3988 1ca4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3989 1ca6 5B00     		lsls	r3, r3, #1
 3990 1ca8 1A44     		add	r2, r2, r3
 3991 1caa 07F5BE53 		add	r3, r7, #6080
 3992 1cae 03F11303 		add	r3, r3, #19
 3993 1cb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3994 1cb4 1A44     		add	r2, r2, r3
 3995 1cb6 07F5BE53 		add	r3, r7, #6080
 3996 1cba 03F11703 		add	r3, r3, #23
 3997 1cbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3998 1cc0 D31A     		subs	r3, r2, r3
 3999 1cc2 5A1E     		subs	r2, r3, #1
 4000 1cc4 07F5BE53 		add	r3, r7, #6080
 4001 1cc8 03F11703 		add	r3, r3, #23
 4002 1ccc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4003 1cce 07F13803 		add	r3, r7, #56
 4004 1cd2 1C3B     		subs	r3, r3, #28
 4005 1cd4 0B44     		add	r3, r3, r1
 4006 1cd6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4007 1cd8 07F15803 		add	r3, r7, #88
 4008 1cdc 043B     		subs	r3, r3, #4
 4009 1cde 9954     		strb	r1, [r3, r2]
 612:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4010              		.loc 1 612 0 discriminator 3
 4011 1ce0 07F5BE53 		add	r3, r7, #6080
 4012 1ce4 03F11703 		add	r3, r3, #23
 4013 1ce8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4014 1cea 0133     		adds	r3, r3, #1
 4015 1cec 07F5BE52 		add	r2, r7, #6080
 4016 1cf0 02F11702 		add	r2, r2, #23
 4017 1cf4 1370     		strb	r3, [r2]
 4018              	.L176:
 612:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4019              		.loc 1 612 0 is_stmt 0 discriminator 1
 4020 1cf6 07F5BE53 		add	r3, r7, #6080
 4021 1cfa 03F11703 		add	r3, r3, #23
 4022 1cfe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 100


 4023 1d00 07F5BE53 		add	r3, r7, #6080
 4024 1d04 03F11303 		add	r3, r3, #19
 4025 1d08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4026 1d0a 9A42     		cmp	r2, r3
 4027 1d0c BDD3     		bcc	.L177
 4028              		.loc 1 616 0 is_stmt 1
 4029 1d0e DCE3     		b	.L114
 4030              	.L123:
 617:..\src/command_processing.c ****                         
 618:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 619:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 4031              		.loc 1 619 0
 4032 1d10 07F5BE53 		add	r3, r7, #6080
 4033 1d14 03F10E03 		add	r3, r3, #14
 4034 1d18 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4035 1d1a 1749     		ldr	r1, .L300
 4036 1d1c 1346     		mov	r3, r2
 4037 1d1e DB00     		lsls	r3, r3, #3
 4038 1d20 9B1A     		subs	r3, r3, r2
 4039 1d22 1B01     		lsls	r3, r3, #4
 4040 1d24 0B44     		add	r3, r3, r1
 4041 1d26 03F20F13 		addw	r3, r3, #271
 4042 1d2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4043 1d2c 032B     		cmp	r3, #3
 4044 1d2e 00F02A81 		beq	.L178
 620:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 4045              		.loc 1 620 0
 4046 1d32 07F5BE53 		add	r3, r7, #6080
 4047 1d36 03F10E03 		add	r3, r3, #14
 4048 1d3a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4049 1d3c 0E49     		ldr	r1, .L300
 4050 1d3e 1346     		mov	r3, r2
 4051 1d40 DB00     		lsls	r3, r3, #3
 4052 1d42 9B1A     		subs	r3, r3, r2
 4053 1d44 1B01     		lsls	r3, r3, #4
 4054 1d46 0B44     		add	r3, r3, r1
 4055 1d48 BC33     		adds	r3, r3, #188
 4056 1d4a 1B68     		ldr	r3, [r3]
 4057 1d4c 1846     		mov	r0, r3
 4058 1d4e FFF7FEFF 		bl	__aeabi_i2f
 4059 1d52 0346     		mov	r3, r0
 4060 1d54 4FF08F41 		mov	r1, #1199570944
 4061 1d58 1846     		mov	r0, r3
 4062 1d5a FFF7FEFF 		bl	__aeabi_fdiv
 4063 1d5e 0346     		mov	r3, r0
 4064 1d60 1A46     		mov	r2, r3
 4065 1d62 07F13803 		add	r3, r7, #56
 4066 1d66 1C3B     		subs	r3, r3, #28
 4067 1d68 1A60     		str	r2, [r3]	@ float
 621:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4068              		.loc 1 621 0
 4069 1d6a 0023     		movs	r3, #0
 4070 1d6c 07F5BE52 		add	r2, r7, #6080
 4071 1d70 02F11702 		add	r2, r2, #23
 4072 1d74 1370     		strb	r3, [r2]
 4073 1d76 30E0     		b	.L179
 4074              	.L301:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 101


 4075              		.align	2
 4076              	.L300:
 4077 1d78 00000000 		.word	c_mem
 4078              	.L180:
 622:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4079              		.loc 1 622 0 discriminator 3
 4080 1d7c 07F5BE53 		add	r3, r7, #6080
 4081 1d80 03F11503 		add	r3, r3, #21
 4082 1d84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4083 1d86 3222     		movs	r2, #50
 4084 1d88 02FB03F3 		mul	r3, r2, r3
 4085 1d8c 1A1D     		adds	r2, r3, #4
 4086 1d8e 07F5BE53 		add	r3, r7, #6080
 4087 1d92 03F11303 		add	r3, r3, #19
 4088 1d96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4089 1d98 1A44     		add	r2, r2, r3
 4090 1d9a 07F5BE53 		add	r3, r7, #6080
 4091 1d9e 03F11703 		add	r3, r3, #23
 4092 1da2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4093 1da4 D31A     		subs	r3, r2, r3
 4094 1da6 5A1E     		subs	r2, r3, #1
 4095 1da8 07F5BE53 		add	r3, r7, #6080
 4096 1dac 03F11703 		add	r3, r3, #23
 4097 1db0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4098 1db2 07F13803 		add	r3, r7, #56
 4099 1db6 1C3B     		subs	r3, r3, #28
 4100 1db8 0B44     		add	r3, r3, r1
 4101 1dba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4102 1dbc 07F15803 		add	r3, r7, #88
 4103 1dc0 043B     		subs	r3, r3, #4
 4104 1dc2 9954     		strb	r1, [r3, r2]
 621:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4105              		.loc 1 621 0 discriminator 3
 4106 1dc4 07F5BE53 		add	r3, r7, #6080
 4107 1dc8 03F11703 		add	r3, r3, #23
 4108 1dcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4109 1dce 0133     		adds	r3, r3, #1
 4110 1dd0 07F5BE52 		add	r2, r7, #6080
 4111 1dd4 02F11702 		add	r2, r2, #23
 4112 1dd8 1370     		strb	r3, [r2]
 4113              	.L179:
 621:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4114              		.loc 1 621 0 is_stmt 0 discriminator 1
 4115 1dda 07F5BE53 		add	r3, r7, #6080
 4116 1dde 03F11703 		add	r3, r3, #23
 4117 1de2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4118 1de4 07F5BE53 		add	r3, r7, #6080
 4119 1de8 03F11303 		add	r3, r3, #19
 4120 1dec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4121 1dee 9A42     		cmp	r2, r3
 4122 1df0 C4D3     		bcc	.L180
 623:..\src/command_processing.c ****                             }
 624:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 4123              		.loc 1 624 0 is_stmt 1
 4124 1df2 07F5BE53 		add	r3, r7, #6080
 4125 1df6 03F10E03 		add	r3, r3, #14
 4126 1dfa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 102


 4127 1dfc A249     		ldr	r1, .L302
 4128 1dfe 1346     		mov	r3, r2
 4129 1e00 DB00     		lsls	r3, r3, #3
 4130 1e02 9B1A     		subs	r3, r3, r2
 4131 1e04 1B01     		lsls	r3, r3, #4
 4132 1e06 0B44     		add	r3, r3, r1
 4133 1e08 C033     		adds	r3, r3, #192
 4134 1e0a 1B68     		ldr	r3, [r3]
 4135 1e0c 1846     		mov	r0, r3
 4136 1e0e FFF7FEFF 		bl	__aeabi_i2f
 4137 1e12 0346     		mov	r3, r0
 4138 1e14 4FF08F41 		mov	r1, #1199570944
 4139 1e18 1846     		mov	r0, r3
 4140 1e1a FFF7FEFF 		bl	__aeabi_fdiv
 4141 1e1e 0346     		mov	r3, r0
 4142 1e20 1A46     		mov	r2, r3
 4143 1e22 07F13803 		add	r3, r7, #56
 4144 1e26 1C3B     		subs	r3, r3, #28
 4145 1e28 1A60     		str	r2, [r3]	@ float
 625:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4146              		.loc 1 625 0
 4147 1e2a 0023     		movs	r3, #0
 4148 1e2c 07F5BE52 		add	r2, r7, #6080
 4149 1e30 02F11702 		add	r2, r2, #23
 4150 1e34 1370     		strb	r3, [r2]
 4151 1e36 34E0     		b	.L181
 4152              	.L182:
 626:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4153              		.loc 1 626 0 discriminator 3
 4154 1e38 07F5BE53 		add	r3, r7, #6080
 4155 1e3c 03F11503 		add	r3, r3, #21
 4156 1e40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4157 1e42 3222     		movs	r2, #50
 4158 1e44 02FB03F3 		mul	r3, r2, r3
 4159 1e48 1A1D     		adds	r2, r3, #4
 4160 1e4a 07F5BE53 		add	r3, r7, #6080
 4161 1e4e 03F11303 		add	r3, r3, #19
 4162 1e52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4163 1e54 1A44     		add	r2, r2, r3
 4164 1e56 07F5BE53 		add	r3, r7, #6080
 4165 1e5a 03F11303 		add	r3, r3, #19
 4166 1e5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4167 1e60 1A44     		add	r2, r2, r3
 4168 1e62 07F5BE53 		add	r3, r7, #6080
 4169 1e66 03F11703 		add	r3, r3, #23
 4170 1e6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4171 1e6c D31A     		subs	r3, r2, r3
 4172 1e6e 5A1E     		subs	r2, r3, #1
 4173 1e70 07F5BE53 		add	r3, r7, #6080
 4174 1e74 03F11703 		add	r3, r3, #23
 4175 1e78 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4176 1e7a 07F13803 		add	r3, r7, #56
 4177 1e7e 1C3B     		subs	r3, r3, #28
 4178 1e80 0B44     		add	r3, r3, r1
 4179 1e82 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4180 1e84 07F15803 		add	r3, r7, #88
 4181 1e88 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 103


 4182 1e8a 9954     		strb	r1, [r3, r2]
 625:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4183              		.loc 1 625 0 discriminator 3
 4184 1e8c 07F5BE53 		add	r3, r7, #6080
 4185 1e90 03F11703 		add	r3, r3, #23
 4186 1e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4187 1e96 0133     		adds	r3, r3, #1
 4188 1e98 07F5BE52 		add	r2, r7, #6080
 4189 1e9c 02F11702 		add	r2, r2, #23
 4190 1ea0 1370     		strb	r3, [r2]
 4191              	.L181:
 625:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4192              		.loc 1 625 0 is_stmt 0 discriminator 1
 4193 1ea2 07F5BE53 		add	r3, r7, #6080
 4194 1ea6 03F11703 		add	r3, r3, #23
 4195 1eaa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4196 1eac 07F5BE53 		add	r3, r7, #6080
 4197 1eb0 03F11303 		add	r3, r3, #19
 4198 1eb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4199 1eb6 9A42     		cmp	r2, r3
 4200 1eb8 BED3     		bcc	.L182
 627:..\src/command_processing.c ****                             }
 628:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 4201              		.loc 1 628 0 is_stmt 1
 4202 1eba 07F5BE53 		add	r3, r7, #6080
 4203 1ebe 03F10E03 		add	r3, r3, #14
 4204 1ec2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4205 1ec4 7049     		ldr	r1, .L302
 4206 1ec6 1346     		mov	r3, r2
 4207 1ec8 DB00     		lsls	r3, r3, #3
 4208 1eca 9B1A     		subs	r3, r3, r2
 4209 1ecc 1B01     		lsls	r3, r3, #4
 4210 1ece 0B44     		add	r3, r3, r1
 4211 1ed0 C433     		adds	r3, r3, #196
 4212 1ed2 1B68     		ldr	r3, [r3]
 4213 1ed4 1846     		mov	r0, r3
 4214 1ed6 FFF7FEFF 		bl	__aeabi_i2f
 4215 1eda 0346     		mov	r3, r0
 4216 1edc 4FF08F41 		mov	r1, #1199570944
 4217 1ee0 1846     		mov	r0, r3
 4218 1ee2 FFF7FEFF 		bl	__aeabi_fdiv
 4219 1ee6 0346     		mov	r3, r0
 4220 1ee8 1A46     		mov	r2, r3
 4221 1eea 07F13803 		add	r3, r7, #56
 4222 1eee 1C3B     		subs	r3, r3, #28
 4223 1ef0 1A60     		str	r2, [r3]	@ float
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4224              		.loc 1 629 0
 4225 1ef2 0023     		movs	r3, #0
 4226 1ef4 07F5BE52 		add	r2, r7, #6080
 4227 1ef8 02F11702 		add	r2, r2, #23
 4228 1efc 1370     		strb	r3, [r2]
 4229 1efe 35E0     		b	.L183
 4230              	.L184:
 630:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4231              		.loc 1 630 0 discriminator 3
 4232 1f00 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 104


 4233 1f04 03F11503 		add	r3, r3, #21
 4234 1f08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4235 1f0a 3222     		movs	r2, #50
 4236 1f0c 02FB03F3 		mul	r3, r2, r3
 4237 1f10 1A1D     		adds	r2, r3, #4
 4238 1f12 07F5BE53 		add	r3, r7, #6080
 4239 1f16 03F11303 		add	r3, r3, #19
 4240 1f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4241 1f1c 5B00     		lsls	r3, r3, #1
 4242 1f1e 1A44     		add	r2, r2, r3
 4243 1f20 07F5BE53 		add	r3, r7, #6080
 4244 1f24 03F11303 		add	r3, r3, #19
 4245 1f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4246 1f2a 1A44     		add	r2, r2, r3
 4247 1f2c 07F5BE53 		add	r3, r7, #6080
 4248 1f30 03F11703 		add	r3, r3, #23
 4249 1f34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4250 1f36 D31A     		subs	r3, r2, r3
 4251 1f38 5A1E     		subs	r2, r3, #1
 4252 1f3a 07F5BE53 		add	r3, r7, #6080
 4253 1f3e 03F11703 		add	r3, r3, #23
 4254 1f42 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4255 1f44 07F13803 		add	r3, r7, #56
 4256 1f48 1C3B     		subs	r3, r3, #28
 4257 1f4a 0B44     		add	r3, r3, r1
 4258 1f4c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4259 1f4e 07F15803 		add	r3, r7, #88
 4260 1f52 043B     		subs	r3, r3, #4
 4261 1f54 9954     		strb	r1, [r3, r2]
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4262              		.loc 1 629 0 discriminator 3
 4263 1f56 07F5BE53 		add	r3, r7, #6080
 4264 1f5a 03F11703 		add	r3, r3, #23
 4265 1f5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4266 1f60 0133     		adds	r3, r3, #1
 4267 1f62 07F5BE52 		add	r2, r7, #6080
 4268 1f66 02F11702 		add	r2, r2, #23
 4269 1f6a 1370     		strb	r3, [r2]
 4270              	.L183:
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4271              		.loc 1 629 0 is_stmt 0 discriminator 1
 4272 1f6c 07F5BE53 		add	r3, r7, #6080
 4273 1f70 03F11703 		add	r3, r3, #23
 4274 1f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4275 1f76 07F5BE53 		add	r3, r7, #6080
 4276 1f7a 03F11303 		add	r3, r3, #19
 4277 1f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4278 1f80 9A42     		cmp	r2, r3
 4279 1f82 BDD3     		bcc	.L184
 631:..\src/command_processing.c ****                             }
 632:..\src/command_processing.c ****                         }
 633:..\src/command_processing.c ****                         else {
 634:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 635:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 636:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 637:..\src/command_processing.c ****                             }
 638:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 105


 639:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 640:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 641:..\src/command_processing.c ****                             }
 642:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 643:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 644:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 645:..\src/command_processing.c ****                             }
 646:..\src/command_processing.c ****                         }            
 647:..\src/command_processing.c ****                         break;  
 4280              		.loc 1 647 0 is_stmt 1
 4281 1f84 A1E2     		b	.L114
 4282              	.L178:
 634:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4283              		.loc 1 634 0
 4284 1f86 07F5BE53 		add	r3, r7, #6080
 4285 1f8a 03F10E03 		add	r3, r3, #14
 4286 1f8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4287 1f90 3D49     		ldr	r1, .L302
 4288 1f92 1346     		mov	r3, r2
 4289 1f94 DB00     		lsls	r3, r3, #3
 4290 1f96 9B1A     		subs	r3, r3, r2
 4291 1f98 1B01     		lsls	r3, r3, #4
 4292 1f9a 0B44     		add	r3, r3, r1
 4293 1f9c D433     		adds	r3, r3, #212
 4294 1f9e 1B68     		ldr	r3, [r3]
 4295 1fa0 1846     		mov	r0, r3
 4296 1fa2 FFF7FEFF 		bl	__aeabi_i2f
 4297 1fa6 0346     		mov	r3, r0
 4298 1fa8 4FF08F41 		mov	r1, #1199570944
 4299 1fac 1846     		mov	r0, r3
 4300 1fae FFF7FEFF 		bl	__aeabi_fdiv
 4301 1fb2 0346     		mov	r3, r0
 4302 1fb4 1A46     		mov	r2, r3
 4303 1fb6 07F13803 		add	r3, r7, #56
 4304 1fba 1C3B     		subs	r3, r3, #28
 4305 1fbc 1A60     		str	r2, [r3]	@ float
 635:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4306              		.loc 1 635 0
 4307 1fbe 0023     		movs	r3, #0
 4308 1fc0 07F5BE52 		add	r2, r7, #6080
 4309 1fc4 02F11702 		add	r2, r2, #23
 4310 1fc8 1370     		strb	r3, [r2]
 4311 1fca 2EE0     		b	.L186
 4312              	.L187:
 636:..\src/command_processing.c ****                             }
 4313              		.loc 1 636 0 discriminator 3
 4314 1fcc 07F5BE53 		add	r3, r7, #6080
 4315 1fd0 03F11503 		add	r3, r3, #21
 4316 1fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4317 1fd6 3222     		movs	r2, #50
 4318 1fd8 02FB03F3 		mul	r3, r2, r3
 4319 1fdc 1A1D     		adds	r2, r3, #4
 4320 1fde 07F5BE53 		add	r3, r7, #6080
 4321 1fe2 03F11303 		add	r3, r3, #19
 4322 1fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4323 1fe8 1A44     		add	r2, r2, r3
 4324 1fea 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 106


 4325 1fee 03F11703 		add	r3, r3, #23
 4326 1ff2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4327 1ff4 D31A     		subs	r3, r2, r3
 4328 1ff6 5A1E     		subs	r2, r3, #1
 4329 1ff8 07F5BE53 		add	r3, r7, #6080
 4330 1ffc 03F11703 		add	r3, r3, #23
 4331 2000 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4332 2002 07F13803 		add	r3, r7, #56
 4333 2006 1C3B     		subs	r3, r3, #28
 4334 2008 0B44     		add	r3, r3, r1
 4335 200a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4336 200c 07F15803 		add	r3, r7, #88
 4337 2010 043B     		subs	r3, r3, #4
 4338 2012 9954     		strb	r1, [r3, r2]
 635:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4339              		.loc 1 635 0 discriminator 3
 4340 2014 07F5BE53 		add	r3, r7, #6080
 4341 2018 03F11703 		add	r3, r3, #23
 4342 201c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4343 201e 0133     		adds	r3, r3, #1
 4344 2020 07F5BE52 		add	r2, r7, #6080
 4345 2024 02F11702 		add	r2, r2, #23
 4346 2028 1370     		strb	r3, [r2]
 4347              	.L186:
 635:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4348              		.loc 1 635 0 is_stmt 0 discriminator 1
 4349 202a 07F5BE53 		add	r3, r7, #6080
 4350 202e 03F11703 		add	r3, r3, #23
 4351 2032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4352 2034 07F5BE53 		add	r3, r7, #6080
 4353 2038 03F11303 		add	r3, r3, #19
 4354 203c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4355 203e 9A42     		cmp	r2, r3
 4356 2040 C4D3     		bcc	.L187
 638:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4357              		.loc 1 638 0 is_stmt 1
 4358 2042 07F5BE53 		add	r3, r7, #6080
 4359 2046 03F10E03 		add	r3, r3, #14
 4360 204a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4361 204c 0E49     		ldr	r1, .L302
 4362 204e 1346     		mov	r3, r2
 4363 2050 DB00     		lsls	r3, r3, #3
 4364 2052 9B1A     		subs	r3, r3, r2
 4365 2054 1B01     		lsls	r3, r3, #4
 4366 2056 0B44     		add	r3, r3, r1
 4367 2058 D833     		adds	r3, r3, #216
 4368 205a 1B68     		ldr	r3, [r3]
 4369 205c 1846     		mov	r0, r3
 4370 205e FFF7FEFF 		bl	__aeabi_i2f
 4371 2062 0346     		mov	r3, r0
 4372 2064 4FF08F41 		mov	r1, #1199570944
 4373 2068 1846     		mov	r0, r3
 4374 206a FFF7FEFF 		bl	__aeabi_fdiv
 4375 206e 0346     		mov	r3, r0
 4376 2070 1A46     		mov	r2, r3
 4377 2072 07F13803 		add	r3, r7, #56
 4378 2076 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 107


 4379 2078 1A60     		str	r2, [r3]	@ float
 639:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4380              		.loc 1 639 0
 4381 207a 0023     		movs	r3, #0
 4382 207c 07F5BE52 		add	r2, r7, #6080
 4383 2080 02F11702 		add	r2, r2, #23
 4384 2084 1370     		strb	r3, [r2]
 4385 2086 36E0     		b	.L188
 4386              	.L303:
 4387              		.align	2
 4388              	.L302:
 4389 2088 00000000 		.word	c_mem
 4390              	.L189:
 640:..\src/command_processing.c ****                             }
 4391              		.loc 1 640 0 discriminator 3
 4392 208c 07F5BE53 		add	r3, r7, #6080
 4393 2090 03F11503 		add	r3, r3, #21
 4394 2094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4395 2096 3222     		movs	r2, #50
 4396 2098 02FB03F3 		mul	r3, r2, r3
 4397 209c 1A1D     		adds	r2, r3, #4
 4398 209e 07F5BE53 		add	r3, r7, #6080
 4399 20a2 03F11303 		add	r3, r3, #19
 4400 20a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4401 20a8 1A44     		add	r2, r2, r3
 4402 20aa 07F5BE53 		add	r3, r7, #6080
 4403 20ae 03F11303 		add	r3, r3, #19
 4404 20b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4405 20b4 1A44     		add	r2, r2, r3
 4406 20b6 07F5BE53 		add	r3, r7, #6080
 4407 20ba 03F11703 		add	r3, r3, #23
 4408 20be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4409 20c0 D31A     		subs	r3, r2, r3
 4410 20c2 5A1E     		subs	r2, r3, #1
 4411 20c4 07F5BE53 		add	r3, r7, #6080
 4412 20c8 03F11703 		add	r3, r3, #23
 4413 20cc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4414 20ce 07F13803 		add	r3, r7, #56
 4415 20d2 1C3B     		subs	r3, r3, #28
 4416 20d4 0B44     		add	r3, r3, r1
 4417 20d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4418 20d8 07F15803 		add	r3, r7, #88
 4419 20dc 043B     		subs	r3, r3, #4
 4420 20de 9954     		strb	r1, [r3, r2]
 639:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4421              		.loc 1 639 0 discriminator 3
 4422 20e0 07F5BE53 		add	r3, r7, #6080
 4423 20e4 03F11703 		add	r3, r3, #23
 4424 20e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4425 20ea 0133     		adds	r3, r3, #1
 4426 20ec 07F5BE52 		add	r2, r7, #6080
 4427 20f0 02F11702 		add	r2, r2, #23
 4428 20f4 1370     		strb	r3, [r2]
 4429              	.L188:
 639:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4430              		.loc 1 639 0 is_stmt 0 discriminator 1
 4431 20f6 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 108


 4432 20fa 03F11703 		add	r3, r3, #23
 4433 20fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4434 2100 07F5BE53 		add	r3, r7, #6080
 4435 2104 03F11303 		add	r3, r3, #19
 4436 2108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4437 210a 9A42     		cmp	r2, r3
 4438 210c BED3     		bcc	.L189
 642:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4439              		.loc 1 642 0 is_stmt 1
 4440 210e 07F5BE53 		add	r3, r7, #6080
 4441 2112 03F10E03 		add	r3, r3, #14
 4442 2116 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4443 2118 C849     		ldr	r1, .L304
 4444 211a 1346     		mov	r3, r2
 4445 211c DB00     		lsls	r3, r3, #3
 4446 211e 9B1A     		subs	r3, r3, r2
 4447 2120 1B01     		lsls	r3, r3, #4
 4448 2122 0B44     		add	r3, r3, r1
 4449 2124 DC33     		adds	r3, r3, #220
 4450 2126 1B68     		ldr	r3, [r3]
 4451 2128 1846     		mov	r0, r3
 4452 212a FFF7FEFF 		bl	__aeabi_i2f
 4453 212e 0346     		mov	r3, r0
 4454 2130 4FF08F41 		mov	r1, #1199570944
 4455 2134 1846     		mov	r0, r3
 4456 2136 FFF7FEFF 		bl	__aeabi_fdiv
 4457 213a 0346     		mov	r3, r0
 4458 213c 1A46     		mov	r2, r3
 4459 213e 07F13803 		add	r3, r7, #56
 4460 2142 1C3B     		subs	r3, r3, #28
 4461 2144 1A60     		str	r2, [r3]	@ float
 643:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4462              		.loc 1 643 0
 4463 2146 0023     		movs	r3, #0
 4464 2148 07F5BE52 		add	r2, r7, #6080
 4465 214c 02F11702 		add	r2, r2, #23
 4466 2150 1370     		strb	r3, [r2]
 4467 2152 35E0     		b	.L190
 4468              	.L191:
 644:..\src/command_processing.c ****                             }
 4469              		.loc 1 644 0 discriminator 3
 4470 2154 07F5BE53 		add	r3, r7, #6080
 4471 2158 03F11503 		add	r3, r3, #21
 4472 215c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4473 215e 3222     		movs	r2, #50
 4474 2160 02FB03F3 		mul	r3, r2, r3
 4475 2164 1A1D     		adds	r2, r3, #4
 4476 2166 07F5BE53 		add	r3, r7, #6080
 4477 216a 03F11303 		add	r3, r3, #19
 4478 216e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4479 2170 5B00     		lsls	r3, r3, #1
 4480 2172 1A44     		add	r2, r2, r3
 4481 2174 07F5BE53 		add	r3, r7, #6080
 4482 2178 03F11303 		add	r3, r3, #19
 4483 217c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4484 217e 1A44     		add	r2, r2, r3
 4485 2180 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 109


 4486 2184 03F11703 		add	r3, r3, #23
 4487 2188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4488 218a D31A     		subs	r3, r2, r3
 4489 218c 5A1E     		subs	r2, r3, #1
 4490 218e 07F5BE53 		add	r3, r7, #6080
 4491 2192 03F11703 		add	r3, r3, #23
 4492 2196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4493 2198 07F13803 		add	r3, r7, #56
 4494 219c 1C3B     		subs	r3, r3, #28
 4495 219e 0B44     		add	r3, r3, r1
 4496 21a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4497 21a2 07F15803 		add	r3, r7, #88
 4498 21a6 043B     		subs	r3, r3, #4
 4499 21a8 9954     		strb	r1, [r3, r2]
 643:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4500              		.loc 1 643 0 discriminator 3
 4501 21aa 07F5BE53 		add	r3, r7, #6080
 4502 21ae 03F11703 		add	r3, r3, #23
 4503 21b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4504 21b4 0133     		adds	r3, r3, #1
 4505 21b6 07F5BE52 		add	r2, r7, #6080
 4506 21ba 02F11702 		add	r2, r2, #23
 4507 21be 1370     		strb	r3, [r2]
 4508              	.L190:
 643:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4509              		.loc 1 643 0 is_stmt 0 discriminator 1
 4510 21c0 07F5BE53 		add	r3, r7, #6080
 4511 21c4 03F11703 		add	r3, r3, #23
 4512 21c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4513 21ca 07F5BE53 		add	r3, r7, #6080
 4514 21ce 03F11303 		add	r3, r3, #19
 4515 21d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4516 21d4 9A42     		cmp	r2, r3
 4517 21d6 BDD3     		bcc	.L191
 4518              		.loc 1 647 0 is_stmt 1
 4519 21d8 77E1     		b	.L114
 4520              	.L124:
 648:..\src/command_processing.c **** 
 649:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 650:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4521              		.loc 1 650 0
 4522 21da 07F5BE53 		add	r3, r7, #6080
 4523 21de 03F10E03 		add	r3, r3, #14
 4524 21e2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4525 21e4 9649     		ldr	r1, .L304+4
 4526 21e6 1346     		mov	r3, r2
 4527 21e8 DB00     		lsls	r3, r3, #3
 4528 21ea 9B1A     		subs	r3, r3, r2
 4529 21ec 1B01     		lsls	r3, r3, #4
 4530 21ee 0B44     		add	r3, r3, r1
 4531 21f0 03F58873 		add	r3, r3, #272
 4532 21f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4533 21f6 1846     		mov	r0, r3
 4534 21f8 07F5BE53 		add	r3, r7, #6080
 4535 21fc 03F11703 		add	r3, r3, #23
 4536 2200 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4537 2202 8E49     		ldr	r1, .L304
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 110


 4538 2204 0346     		mov	r3, r0
 4539 2206 5B00     		lsls	r3, r3, #1
 4540 2208 0344     		add	r3, r3, r0
 4541 220a 9B00     		lsls	r3, r3, #2
 4542 220c 1344     		add	r3, r3, r2
 4543 220e 6633     		adds	r3, r3, #102
 4544 2210 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4545 2214 07F5BE53 		add	r3, r7, #6080
 4546 2218 03F10E03 		add	r3, r3, #14
 4547 221c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4548 221e 8848     		ldr	r0, .L304+4
 4549 2220 1346     		mov	r3, r2
 4550 2222 DB00     		lsls	r3, r3, #3
 4551 2224 9B1A     		subs	r3, r3, r2
 4552 2226 1B01     		lsls	r3, r3, #4
 4553 2228 0344     		add	r3, r3, r0
 4554 222a 03F58873 		add	r3, r3, #272
 4555 222e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4556 2230 1C46     		mov	r4, r3
 4557 2232 07F5BE53 		add	r3, r7, #6080
 4558 2236 03F11703 		add	r3, r3, #23
 4559 223a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4560 223c 7F48     		ldr	r0, .L304
 4561 223e 2346     		mov	r3, r4
 4562 2240 5B00     		lsls	r3, r3, #1
 4563 2242 2344     		add	r3, r3, r4
 4564 2244 1B01     		lsls	r3, r3, #4
 4565 2246 0344     		add	r3, r3, r0
 4566 2248 1344     		add	r3, r3, r2
 4567 224a 03F29513 		addw	r3, r3, #405
 4568 224e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4569 2250 41FA03F3 		asr	r3, r1, r3
 4570 2254 1AB2     		sxth	r2, r3
 4571 2256 07F13803 		add	r3, r7, #56
 4572 225a 1E3B     		subs	r3, r3, #30
 4573 225c 1A80     		strh	r2, [r3]	@ movhi
 651:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4574              		.loc 1 651 0
 4575 225e 0023     		movs	r3, #0
 4576 2260 07F5BE52 		add	r2, r7, #6080
 4577 2264 02F11602 		add	r2, r2, #22
 4578 2268 1370     		strb	r3, [r2]
 4579 226a 3BE0     		b	.L192
 4580              	.L193:
 652:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4581              		.loc 1 652 0 discriminator 3
 4582 226c 07F5BE53 		add	r3, r7, #6080
 4583 2270 03F11503 		add	r3, r3, #21
 4584 2274 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4585 2276 3222     		movs	r2, #50
 4586 2278 02FB03F3 		mul	r3, r2, r3
 4587 227c 1A1D     		adds	r2, r3, #4
 4588 227e 07F5BE53 		add	r3, r7, #6080
 4589 2282 03F11703 		add	r3, r3, #23
 4590 2286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4591 2288 07F5BE51 		add	r1, r7, #6080
 4592 228c 01F11301 		add	r1, r1, #19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 111


 4593 2290 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4594 2292 01FB03F3 		mul	r3, r1, r3
 4595 2296 1A44     		add	r2, r2, r3
 4596 2298 07F5BE53 		add	r3, r7, #6080
 4597 229c 03F11303 		add	r3, r3, #19
 4598 22a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4599 22a2 1A44     		add	r2, r2, r3
 4600 22a4 07F5BE53 		add	r3, r7, #6080
 4601 22a8 03F11603 		add	r3, r3, #22
 4602 22ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4603 22ae D31A     		subs	r3, r2, r3
 4604 22b0 5A1E     		subs	r2, r3, #1
 4605 22b2 07F5BE53 		add	r3, r7, #6080
 4606 22b6 03F11603 		add	r3, r3, #22
 4607 22ba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4608 22bc 07F13803 		add	r3, r7, #56
 4609 22c0 1E3B     		subs	r3, r3, #30
 4610 22c2 0B44     		add	r3, r3, r1
 4611 22c4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4612 22c6 07F15803 		add	r3, r7, #88
 4613 22ca 043B     		subs	r3, r3, #4
 4614 22cc 9954     		strb	r1, [r3, r2]
 651:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4615              		.loc 1 651 0 discriminator 3
 4616 22ce 07F5BE53 		add	r3, r7, #6080
 4617 22d2 03F11603 		add	r3, r3, #22
 4618 22d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4619 22d8 0133     		adds	r3, r3, #1
 4620 22da 07F5BE52 		add	r2, r7, #6080
 4621 22de 02F11602 		add	r2, r2, #22
 4622 22e2 1370     		strb	r3, [r2]
 4623              	.L192:
 651:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4624              		.loc 1 651 0 is_stmt 0 discriminator 1
 4625 22e4 07F5BE53 		add	r3, r7, #6080
 4626 22e8 03F11603 		add	r3, r3, #22
 4627 22ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4628 22ee 07F5BE53 		add	r3, r7, #6080
 4629 22f2 03F11303 		add	r3, r3, #19
 4630 22f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4631 22f8 9A42     		cmp	r2, r3
 4632 22fa B7D3     		bcc	.L193
 653:..\src/command_processing.c ****                         }
 654:..\src/command_processing.c ****                         break;
 4633              		.loc 1 654 0 is_stmt 1
 4634 22fc E5E0     		b	.L114
 4635              	.L125:
 655:..\src/command_processing.c ****                 
 656:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 657:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4636              		.loc 1 657 0
 4637 22fe 07F5BE53 		add	r3, r7, #6080
 4638 2302 03F10E03 		add	r3, r3, #14
 4639 2306 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4640 2308 4C49     		ldr	r1, .L304
 4641 230a 1346     		mov	r3, r2
 4642 230c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 112


 4643 230e 9B1A     		subs	r3, r3, r2
 4644 2310 1B01     		lsls	r3, r3, #4
 4645 2312 0B44     		add	r3, r3, r1
 4646 2314 E433     		adds	r3, r3, #228
 4647 2316 1968     		ldr	r1, [r3]
 4648 2318 07F5BE53 		add	r3, r7, #6080
 4649 231c 03F10E03 		add	r3, r3, #14
 4650 2320 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4651 2322 4748     		ldr	r0, .L304+4
 4652 2324 1346     		mov	r3, r2
 4653 2326 DB00     		lsls	r3, r3, #3
 4654 2328 9B1A     		subs	r3, r3, r2
 4655 232a 1B01     		lsls	r3, r3, #4
 4656 232c 0344     		add	r3, r3, r0
 4657 232e 03F58873 		add	r3, r3, #272
 4658 2332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4659 2334 1846     		mov	r0, r3
 4660 2336 414A     		ldr	r2, .L304
 4661 2338 0346     		mov	r3, r0
 4662 233a 5B00     		lsls	r3, r3, #1
 4663 233c 0344     		add	r3, r3, r0
 4664 233e 1B01     		lsls	r3, r3, #4
 4665 2340 1344     		add	r3, r3, r2
 4666 2342 03F29513 		addw	r3, r3, #405
 4667 2346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4668 2348 41FA03F2 		asr	r2, r1, r3
 4669 234c 07F11803 		add	r3, r7, #24
 4670 2350 043B     		subs	r3, r3, #4
 4671 2352 1A60     		str	r2, [r3]
 658:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4672              		.loc 1 658 0
 4673 2354 0023     		movs	r3, #0
 4674 2356 07F5BE52 		add	r2, r7, #6080
 4675 235a 02F11602 		add	r2, r2, #22
 4676 235e 1370     		strb	r3, [r2]
 4677 2360 2EE0     		b	.L194
 4678              	.L195:
 659:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4679              		.loc 1 659 0 discriminator 3
 4680 2362 07F5BE53 		add	r3, r7, #6080
 4681 2366 03F11503 		add	r3, r3, #21
 4682 236a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4683 236c 3222     		movs	r2, #50
 4684 236e 02FB03F3 		mul	r3, r2, r3
 4685 2372 1A1D     		adds	r2, r3, #4
 4686 2374 07F5BE53 		add	r3, r7, #6080
 4687 2378 03F11303 		add	r3, r3, #19
 4688 237c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4689 237e 1A44     		add	r2, r2, r3
 4690 2380 07F5BE53 		add	r3, r7, #6080
 4691 2384 03F11603 		add	r3, r3, #22
 4692 2388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4693 238a D31A     		subs	r3, r2, r3
 4694 238c 5A1E     		subs	r2, r3, #1
 4695 238e 07F5BE53 		add	r3, r7, #6080
 4696 2392 03F11603 		add	r3, r3, #22
 4697 2396 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 113


 4698 2398 07F11803 		add	r3, r7, #24
 4699 239c 043B     		subs	r3, r3, #4
 4700 239e 0B44     		add	r3, r3, r1
 4701 23a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4702 23a2 07F15803 		add	r3, r7, #88
 4703 23a6 043B     		subs	r3, r3, #4
 4704 23a8 9954     		strb	r1, [r3, r2]
 658:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4705              		.loc 1 658 0 discriminator 3
 4706 23aa 07F5BE53 		add	r3, r7, #6080
 4707 23ae 03F11603 		add	r3, r3, #22
 4708 23b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4709 23b4 0133     		adds	r3, r3, #1
 4710 23b6 07F5BE52 		add	r2, r7, #6080
 4711 23ba 02F11602 		add	r2, r2, #22
 4712 23be 1370     		strb	r3, [r2]
 4713              	.L194:
 658:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4714              		.loc 1 658 0 is_stmt 0 discriminator 1
 4715 23c0 07F5BE53 		add	r3, r7, #6080
 4716 23c4 03F11603 		add	r3, r3, #22
 4717 23c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4718 23ca 07F5BE53 		add	r3, r7, #6080
 4719 23ce 03F11303 		add	r3, r3, #19
 4720 23d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4721 23d4 9A42     		cmp	r2, r3
 4722 23d6 C4D3     		bcc	.L195
 660:..\src/command_processing.c ****                         }
 661:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4723              		.loc 1 661 0 is_stmt 1
 4724 23d8 07F5BE53 		add	r3, r7, #6080
 4725 23dc 03F10E03 		add	r3, r3, #14
 4726 23e0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4727 23e2 1649     		ldr	r1, .L304
 4728 23e4 1346     		mov	r3, r2
 4729 23e6 DB00     		lsls	r3, r3, #3
 4730 23e8 9B1A     		subs	r3, r3, r2
 4731 23ea 1B01     		lsls	r3, r3, #4
 4732 23ec 0B44     		add	r3, r3, r1
 4733 23ee E833     		adds	r3, r3, #232
 4734 23f0 1968     		ldr	r1, [r3]
 4735 23f2 07F5BE53 		add	r3, r7, #6080
 4736 23f6 03F10E03 		add	r3, r3, #14
 4737 23fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4738 23fc 1048     		ldr	r0, .L304+4
 4739 23fe 1346     		mov	r3, r2
 4740 2400 DB00     		lsls	r3, r3, #3
 4741 2402 9B1A     		subs	r3, r3, r2
 4742 2404 1B01     		lsls	r3, r3, #4
 4743 2406 0344     		add	r3, r3, r0
 4744 2408 03F58873 		add	r3, r3, #272
 4745 240c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4746 240e 1846     		mov	r0, r3
 4747 2410 0A4A     		ldr	r2, .L304
 4748 2412 0346     		mov	r3, r0
 4749 2414 5B00     		lsls	r3, r3, #1
 4750 2416 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 114


 4751 2418 1B01     		lsls	r3, r3, #4
 4752 241a 1344     		add	r3, r3, r2
 4753 241c 03F29513 		addw	r3, r3, #405
 4754 2420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4755 2422 41FA03F2 		asr	r2, r1, r3
 4756 2426 07F11803 		add	r3, r7, #24
 4757 242a 043B     		subs	r3, r3, #4
 4758 242c 1A60     		str	r2, [r3]
 662:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4759              		.loc 1 662 0
 4760 242e 0023     		movs	r3, #0
 4761 2430 07F5BE52 		add	r2, r7, #6080
 4762 2434 02F11602 		add	r2, r2, #22
 4763 2438 1370     		strb	r3, [r2]
 4764 243a 38E0     		b	.L196
 4765              	.L305:
 4766              		.align	2
 4767              	.L304:
 4768 243c 00000000 		.word	c_mem
 4769 2440 00000000 		.word	g_mem
 4770              	.L197:
 663:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4771              		.loc 1 663 0 discriminator 3
 4772 2444 07F5BE53 		add	r3, r7, #6080
 4773 2448 03F11503 		add	r3, r3, #21
 4774 244c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4775 244e 3222     		movs	r2, #50
 4776 2450 02FB03F3 		mul	r3, r2, r3
 4777 2454 1A1D     		adds	r2, r3, #4
 4778 2456 07F5BE53 		add	r3, r7, #6080
 4779 245a 03F11303 		add	r3, r3, #19
 4780 245e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4781 2460 1A44     		add	r2, r2, r3
 4782 2462 07F5BE53 		add	r3, r7, #6080
 4783 2466 03F11303 		add	r3, r3, #19
 4784 246a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4785 246c 1A44     		add	r2, r2, r3
 4786 246e 07F5BE53 		add	r3, r7, #6080
 4787 2472 03F11603 		add	r3, r3, #22
 4788 2476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4789 2478 D31A     		subs	r3, r2, r3
 4790 247a 5A1E     		subs	r2, r3, #1
 4791 247c 07F5BE53 		add	r3, r7, #6080
 4792 2480 03F11603 		add	r3, r3, #22
 4793 2484 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4794 2486 07F11803 		add	r3, r7, #24
 4795 248a 043B     		subs	r3, r3, #4
 4796 248c 0B44     		add	r3, r3, r1
 4797 248e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4798 2490 07F15803 		add	r3, r7, #88
 4799 2494 043B     		subs	r3, r3, #4
 4800 2496 9954     		strb	r1, [r3, r2]
 662:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4801              		.loc 1 662 0 discriminator 3
 4802 2498 07F5BE53 		add	r3, r7, #6080
 4803 249c 03F11603 		add	r3, r3, #22
 4804 24a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 115


 4805 24a2 0133     		adds	r3, r3, #1
 4806 24a4 07F5BE52 		add	r2, r7, #6080
 4807 24a8 02F11602 		add	r2, r2, #22
 4808 24ac 1370     		strb	r3, [r2]
 4809              	.L196:
 662:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4810              		.loc 1 662 0 is_stmt 0 discriminator 1
 4811 24ae 07F5BE53 		add	r3, r7, #6080
 4812 24b2 03F11603 		add	r3, r3, #22
 4813 24b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4814 24b8 07F5BE53 		add	r3, r7, #6080
 4815 24bc 03F11303 		add	r3, r3, #19
 4816 24c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4817 24c2 9A42     		cmp	r2, r3
 4818 24c4 BED3     		bcc	.L197
 664:..\src/command_processing.c ****                         }
 665:..\src/command_processing.c ****                         break;
 4819              		.loc 1 665 0 is_stmt 1
 4820 24c6 00E0     		b	.L114
 4821              	.L284:
 666:..\src/command_processing.c ****                         
 667:..\src/command_processing.c ****                     default:
 668:..\src/command_processing.c ****                         break;
 4822              		.loc 1 668 0
 4823 24c8 00BF     		nop
 4824              	.L114:
 669:..\src/command_processing.c ****                 }
 670:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 671:..\src/command_processing.c ****                         
 672:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 673:..\src/command_processing.c ****         }
 674:..\src/command_processing.c ****         
 675:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4825              		.loc 1 675 0
 4826 24ca 07F5BE53 		add	r3, r7, #6080
 4827 24ce 03F11503 		add	r3, r3, #21
 4828 24d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4829 24d4 9B00     		lsls	r3, r3, #2
 4830 24d6 07F5BF52 		add	r2, r7, #6112
 4831 24da 02F11402 		add	r2, r2, #20
 4832 24de 1268     		ldr	r2, [r2]
 4833 24e0 1344     		add	r3, r3, r2
 4834 24e2 1A68     		ldr	r2, [r3]
 4835 24e4 07F13803 		add	r3, r7, #56
 4836 24e8 183B     		subs	r3, r3, #24
 4837 24ea 1146     		mov	r1, r2
 4838 24ec 1846     		mov	r0, r3
 4839 24ee FFF7FEFF 		bl	sprintf
 676:..\src/command_processing.c ****         string_length = strlen(aux_str);
 4840              		.loc 1 676 0
 4841 24f2 07F13803 		add	r3, r7, #56
 4842 24f6 183B     		subs	r3, r3, #24
 4843 24f8 1846     		mov	r0, r3
 4844 24fa FFF7FEFF 		bl	strlen
 4845 24fe 0346     		mov	r3, r0
 4846 2500 07F5BE52 		add	r2, r7, #6080
 4847 2504 02F11202 		add	r2, r2, #18
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 116


 4848 2508 1370     		strb	r3, [r2]
 677:..\src/command_processing.c ****         
 678:..\src/command_processing.c ****         // Parameters with a menu
 679:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4849              		.loc 1 679 0
 4850 250a 07F5BE53 		add	r3, r7, #6080
 4851 250e 03F11503 		add	r3, r3, #21
 4852 2512 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4853 2514 07F11803 		add	r3, r7, #24
 4854 2518 103B     		subs	r3, r3, #16
 4855 251a 1B68     		ldr	r3, [r3]
 4856 251c 1344     		add	r3, r3, r2
 4857 251e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4858 2520 002B     		cmp	r3, #0
 4859 2522 40F0D984 		bne	.L198
 680:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4860              		.loc 1 680 0
 4861 2526 07F5BE53 		add	r3, r7, #6080
 4862 252a 03F11403 		add	r3, r3, #20
 4863 252e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4864 2530 07F5BF52 		add	r2, r7, #6112
 4865 2534 02F11002 		add	r2, r2, #16
 4866 2538 1268     		ldr	r2, [r2]
 4867 253a 1344     		add	r3, r3, r2
 4868 253c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4869 253e 013B     		subs	r3, r3, #1
 4870 2540 0B2B     		cmp	r3, #11
 4871 2542 00F2BB84 		bhi	.L199
 4872 2546 01A2     		adr	r2, .L201
 4873 2548 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4874              		.p2align 2
 4875              	.L201:
 4876 254c 7D250000 		.word	.L200+1
 4877 2550 27270000 		.word	.L202+1
 4878 2554 FD270000 		.word	.L203+1
 4879 2558 51280000 		.word	.L204+1
 4880 255c B5280000 		.word	.L205+1
 4881 2560 11290000 		.word	.L206+1
 4882 2564 2D2A0000 		.word	.L207+1
 4883 2568 B52A0000 		.word	.L208+1
 4884 256c 492B0000 		.word	.L209+1
 4885 2570 F32B0000 		.word	.L210+1
 4886 2574 472D0000 		.word	.L211+1
 4887 2578 3B2E0000 		.word	.L212+1
 4888              		.p2align 1
 4889              	.L200:
 681:..\src/command_processing.c ****                 case 1:     // input mode menu
 682:..\src/command_processing.c ****                     switch(*m_addr) {
 4890              		.loc 1 682 0
 4891 257c 07F5BE53 		add	r3, r7, #6080
 4892 2580 03F10803 		add	r3, r3, #8
 4893 2584 1B68     		ldr	r3, [r3]
 4894 2586 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4895 2588 072B     		cmp	r3, #7
 4896 258a 00F29084 		bhi	.L285
 4897 258e 01A2     		adr	r2, .L215
 4898 2590 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 117


 4899              		.p2align 2
 4900              	.L215:
 4901 2594 B5250000 		.word	.L214+1
 4902 2598 D9250000 		.word	.L216+1
 4903 259c FF250000 		.word	.L217+1
 4904 25a0 2D260000 		.word	.L218+1
 4905 25a4 59260000 		.word	.L219+1
 4906 25a8 83260000 		.word	.L220+1
 4907 25ac B7260000 		.word	.L221+1
 4908 25b0 E1260000 		.word	.L222+1
 4909              		.p2align 1
 4910              	.L214:
 683:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 684:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4911              		.loc 1 684 0
 4912 25b4 07F13803 		add	r3, r7, #56
 4913 25b8 183B     		subs	r3, r3, #24
 4914 25ba 1846     		mov	r0, r3
 4915 25bc FFF7FEFF 		bl	strlen
 4916 25c0 0346     		mov	r3, r0
 4917 25c2 1A46     		mov	r2, r3
 4918 25c4 07F13803 		add	r3, r7, #56
 4919 25c8 183B     		subs	r3, r3, #24
 4920 25ca 1344     		add	r3, r3, r2
 4921 25cc DA4A     		ldr	r2, .L306
 4922 25ce 1068     		ldr	r0, [r2]	@ unaligned
 4923 25d0 1860     		str	r0, [r3]	@ unaligned
 4924 25d2 1279     		ldrb	r2, [r2, #4]
 4925 25d4 1A71     		strb	r2, [r3, #4]
 685:..\src/command_processing.c ****                         break;
 4926              		.loc 1 685 0
 4927 25d6 A5E0     		b	.L213
 4928              	.L216:
 686:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 687:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4929              		.loc 1 687 0
 4930 25d8 07F13803 		add	r3, r7, #56
 4931 25dc 183B     		subs	r3, r3, #24
 4932 25de 1846     		mov	r0, r3
 4933 25e0 FFF7FEFF 		bl	strlen
 4934 25e4 0346     		mov	r3, r0
 4935 25e6 1A46     		mov	r2, r3
 4936 25e8 07F13803 		add	r3, r7, #56
 4937 25ec 183B     		subs	r3, r3, #24
 4938 25ee 1344     		add	r3, r3, r2
 4939 25f0 D249     		ldr	r1, .L306+4
 4940 25f2 1A46     		mov	r2, r3
 4941 25f4 0B46     		mov	r3, r1
 4942 25f6 03CB     		ldmia	r3!, {r0, r1}
 4943 25f8 1060     		str	r0, [r2]	@ unaligned
 4944 25fa 5160     		str	r1, [r2, #4]	@ unaligned
 688:..\src/command_processing.c ****                         break;
 4945              		.loc 1 688 0
 4946 25fc 92E0     		b	.L213
 4947              	.L217:
 689:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 690:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 118


 4948              		.loc 1 690 0
 4949 25fe 07F13803 		add	r3, r7, #56
 4950 2602 183B     		subs	r3, r3, #24
 4951 2604 1846     		mov	r0, r3
 4952 2606 FFF7FEFF 		bl	strlen
 4953 260a 0346     		mov	r3, r0
 4954 260c 1A46     		mov	r2, r3
 4955 260e 07F13803 		add	r3, r7, #56
 4956 2612 183B     		subs	r3, r3, #24
 4957 2614 1344     		add	r3, r3, r2
 4958 2616 CA4A     		ldr	r2, .L306+8
 4959 2618 1D46     		mov	r5, r3
 4960 261a 1446     		mov	r4, r2
 4961 261c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4962 261e 2860     		str	r0, [r5]	@ unaligned
 4963 2620 6960     		str	r1, [r5, #4]	@ unaligned
 4964 2622 AA60     		str	r2, [r5, #8]	@ unaligned
 4965 2624 EB60     		str	r3, [r5, #12]	@ unaligned
 4966 2626 2388     		ldrh	r3, [r4]	@ unaligned
 4967 2628 2B82     		strh	r3, [r5, #16]	@ unaligned
 691:..\src/command_processing.c ****                         break;
 4968              		.loc 1 691 0
 4969 262a 7BE0     		b	.L213
 4970              	.L218:
 692:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 693:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4971              		.loc 1 693 0
 4972 262c 07F13803 		add	r3, r7, #56
 4973 2630 183B     		subs	r3, r3, #24
 4974 2632 1846     		mov	r0, r3
 4975 2634 FFF7FEFF 		bl	strlen
 4976 2638 0346     		mov	r3, r0
 4977 263a 1A46     		mov	r2, r3
 4978 263c 07F13803 		add	r3, r7, #56
 4979 2640 183B     		subs	r3, r3, #24
 4980 2642 1344     		add	r3, r3, r2
 4981 2644 BF4A     		ldr	r2, .L306+12
 4982 2646 1C46     		mov	r4, r3
 4983 2648 1346     		mov	r3, r2
 4984 264a 07CB     		ldmia	r3!, {r0, r1, r2}
 4985 264c 2060     		str	r0, [r4]	@ unaligned
 4986 264e 6160     		str	r1, [r4, #4]	@ unaligned
 4987 2650 A260     		str	r2, [r4, #8]	@ unaligned
 4988 2652 1B88     		ldrh	r3, [r3]	@ unaligned
 4989 2654 A381     		strh	r3, [r4, #12]	@ unaligned
 694:..\src/command_processing.c ****                         break;
 4990              		.loc 1 694 0
 4991 2656 65E0     		b	.L213
 4992              	.L219:
 695:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 696:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4993              		.loc 1 696 0
 4994 2658 07F13803 		add	r3, r7, #56
 4995 265c 183B     		subs	r3, r3, #24
 4996 265e 1846     		mov	r0, r3
 4997 2660 FFF7FEFF 		bl	strlen
 4998 2664 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 119


 4999 2666 1A46     		mov	r2, r3
 5000 2668 07F13803 		add	r3, r7, #56
 5001 266c 183B     		subs	r3, r3, #24
 5002 266e 1344     		add	r3, r3, r2
 5003 2670 B549     		ldr	r1, .L306+16
 5004 2672 1A46     		mov	r2, r3
 5005 2674 0B46     		mov	r3, r1
 5006 2676 03CB     		ldmia	r3!, {r0, r1}
 5007 2678 1060     		str	r0, [r2]	@ unaligned
 5008 267a 5160     		str	r1, [r2, #4]	@ unaligned
 5009 267c 1B88     		ldrh	r3, [r3]	@ unaligned
 5010 267e 1381     		strh	r3, [r2, #8]	@ unaligned
 697:..\src/command_processing.c ****                         break;
 5011              		.loc 1 697 0
 5012 2680 50E0     		b	.L213
 5013              	.L220:
 698:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 699:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 5014              		.loc 1 699 0
 5015 2682 07F13803 		add	r3, r7, #56
 5016 2686 183B     		subs	r3, r3, #24
 5017 2688 1846     		mov	r0, r3
 5018 268a FFF7FEFF 		bl	strlen
 5019 268e 0346     		mov	r3, r0
 5020 2690 1A46     		mov	r2, r3
 5021 2692 07F13803 		add	r3, r7, #56
 5022 2696 183B     		subs	r3, r3, #24
 5023 2698 1344     		add	r3, r3, r2
 5024 269a AC4A     		ldr	r2, .L306+20
 5025 269c 1D46     		mov	r5, r3
 5026 269e 1446     		mov	r4, r2
 5027 26a0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5028 26a2 2860     		str	r0, [r5]	@ unaligned
 5029 26a4 6960     		str	r1, [r5, #4]	@ unaligned
 5030 26a6 AA60     		str	r2, [r5, #8]	@ unaligned
 5031 26a8 EB60     		str	r3, [r5, #12]	@ unaligned
 5032 26aa 2388     		ldrh	r3, [r4]	@ unaligned
 5033 26ac A278     		ldrb	r2, [r4, #2]
 5034 26ae 2B82     		strh	r3, [r5, #16]	@ unaligned
 5035 26b0 1346     		mov	r3, r2
 5036 26b2 AB74     		strb	r3, [r5, #18]
 700:..\src/command_processing.c ****                         break;
 5037              		.loc 1 700 0
 5038 26b4 36E0     		b	.L213
 5039              	.L221:
 701:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 702:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 5040              		.loc 1 702 0
 5041 26b6 07F13803 		add	r3, r7, #56
 5042 26ba 183B     		subs	r3, r3, #24
 5043 26bc 1846     		mov	r0, r3
 5044 26be FFF7FEFF 		bl	strlen
 5045 26c2 0346     		mov	r3, r0
 5046 26c4 1A46     		mov	r2, r3
 5047 26c6 07F13803 		add	r3, r7, #56
 5048 26ca 183B     		subs	r3, r3, #24
 5049 26cc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 120


 5050 26ce A049     		ldr	r1, .L306+24
 5051 26d0 1A46     		mov	r2, r3
 5052 26d2 0B46     		mov	r3, r1
 5053 26d4 03CB     		ldmia	r3!, {r0, r1}
 5054 26d6 1060     		str	r0, [r2]	@ unaligned
 5055 26d8 5160     		str	r1, [r2, #4]	@ unaligned
 5056 26da 1B88     		ldrh	r3, [r3]	@ unaligned
 5057 26dc 1381     		strh	r3, [r2, #8]	@ unaligned
 703:..\src/command_processing.c ****                         break;
 5058              		.loc 1 703 0
 5059 26de 21E0     		b	.L213
 5060              	.L222:
 704:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 705:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 5061              		.loc 1 705 0
 5062 26e0 07F13803 		add	r3, r7, #56
 5063 26e4 183B     		subs	r3, r3, #24
 5064 26e6 1846     		mov	r0, r3
 5065 26e8 FFF7FEFF 		bl	strlen
 5066 26ec 0346     		mov	r3, r0
 5067 26ee 1A46     		mov	r2, r3
 5068 26f0 07F13803 		add	r3, r7, #56
 5069 26f4 183B     		subs	r3, r3, #24
 5070 26f6 1344     		add	r3, r3, r2
 5071 26f8 964A     		ldr	r2, .L306+28
 5072 26fa 1446     		mov	r4, r2
 5073 26fc 9E46     		mov	lr, r3
 5074 26fe 04F1200C 		add	ip, r4, #32
 5075              	.L223:
 5076 2702 7546     		mov	r5, lr
 5077 2704 2646     		mov	r6, r4
 5078 2706 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 5079 2708 2860     		str	r0, [r5]	@ unaligned
 5080 270a 6960     		str	r1, [r5, #4]	@ unaligned
 5081 270c AA60     		str	r2, [r5, #8]	@ unaligned
 5082 270e EB60     		str	r3, [r5, #12]	@ unaligned
 5083 2710 1034     		adds	r4, r4, #16
 5084 2712 0EF1100E 		add	lr, lr, #16
 5085 2716 6445     		cmp	r4, ip
 5086 2718 F3D1     		bne	.L223
 5087 271a 7246     		mov	r2, lr
 5088 271c 2346     		mov	r3, r4
 5089 271e 1B88     		ldrh	r3, [r3]	@ unaligned
 5090 2720 1380     		strh	r3, [r2]	@ unaligned
 706:..\src/command_processing.c ****                         break;
 5091              		.loc 1 706 0
 5092 2722 00BF     		nop
 5093              	.L213:
 707:..\src/command_processing.c ****                     }
 708:..\src/command_processing.c ****                     break;
 5094              		.loc 1 708 0
 5095 2724 C3E3     		b	.L285
 5096              	.L202:
 709:..\src/command_processing.c ****                 case 2:     // control mode menu
 710:..\src/command_processing.c ****                     switch(*m_addr){
 5097              		.loc 1 710 0
 5098 2726 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 121


 5099 272a 03F10803 		add	r3, r3, #8
 5100 272e 1B68     		ldr	r3, [r3]
 5101 2730 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5102 2732 032B     		cmp	r3, #3
 5103 2734 00F2BD83 		bhi	.L286
 5104 2738 01A2     		adr	r2, .L226
 5105 273a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5106 273e 00BF     		.p2align 2
 5107              	.L226:
 5108 2740 51270000 		.word	.L225+1
 5109 2744 7B270000 		.word	.L227+1
 5110 2748 9F270000 		.word	.L228+1
 5111 274c C9270000 		.word	.L229+1
 5112              		.p2align 1
 5113              	.L225:
 711:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 712:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 5114              		.loc 1 712 0
 5115 2750 07F13803 		add	r3, r7, #56
 5116 2754 183B     		subs	r3, r3, #24
 5117 2756 1846     		mov	r0, r3
 5118 2758 FFF7FEFF 		bl	strlen
 5119 275c 0346     		mov	r3, r0
 5120 275e 1A46     		mov	r2, r3
 5121 2760 07F13803 		add	r3, r7, #56
 5122 2764 183B     		subs	r3, r3, #24
 5123 2766 1344     		add	r3, r3, r2
 5124 2768 7B49     		ldr	r1, .L306+32
 5125 276a 1A46     		mov	r2, r3
 5126 276c 0B46     		mov	r3, r1
 5127 276e 03CB     		ldmia	r3!, {r0, r1}
 5128 2770 1060     		str	r0, [r2]	@ unaligned
 5129 2772 5160     		str	r1, [r2, #4]	@ unaligned
 5130 2774 1B88     		ldrh	r3, [r3]	@ unaligned
 5131 2776 1381     		strh	r3, [r2, #8]	@ unaligned
 713:..\src/command_processing.c ****                         break;
 5132              		.loc 1 713 0
 5133 2778 3FE0     		b	.L224
 5134              	.L227:
 714:..\src/command_processing.c ****                         case CONTROL_PWM:
 715:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 5135              		.loc 1 715 0
 5136 277a 07F13803 		add	r3, r7, #56
 5137 277e 183B     		subs	r3, r3, #24
 5138 2780 1846     		mov	r0, r3
 5139 2782 FFF7FEFF 		bl	strlen
 5140 2786 0346     		mov	r3, r0
 5141 2788 1A46     		mov	r2, r3
 5142 278a 07F13803 		add	r3, r7, #56
 5143 278e 183B     		subs	r3, r3, #24
 5144 2790 1344     		add	r3, r3, r2
 5145 2792 724A     		ldr	r2, .L306+36
 5146 2794 1068     		ldr	r0, [r2]	@ unaligned
 5147 2796 1860     		str	r0, [r3]	@ unaligned
 5148 2798 1279     		ldrb	r2, [r2, #4]
 5149 279a 1A71     		strb	r2, [r3, #4]
 716:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 122


 5150              		.loc 1 716 0
 5151 279c 2DE0     		b	.L224
 5152              	.L228:
 717:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 718:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 5153              		.loc 1 718 0
 5154 279e 07F13803 		add	r3, r7, #56
 5155 27a2 183B     		subs	r3, r3, #24
 5156 27a4 1846     		mov	r0, r3
 5157 27a6 FFF7FEFF 		bl	strlen
 5158 27aa 0346     		mov	r3, r0
 5159 27ac 1A46     		mov	r2, r3
 5160 27ae 07F13803 		add	r3, r7, #56
 5161 27b2 183B     		subs	r3, r3, #24
 5162 27b4 1344     		add	r3, r3, r2
 5163 27b6 6A49     		ldr	r1, .L306+40
 5164 27b8 1A46     		mov	r2, r3
 5165 27ba 0B46     		mov	r3, r1
 5166 27bc 03CB     		ldmia	r3!, {r0, r1}
 5167 27be 1060     		str	r0, [r2]	@ unaligned
 5168 27c0 5160     		str	r1, [r2, #4]	@ unaligned
 5169 27c2 1B78     		ldrb	r3, [r3]
 5170 27c4 1372     		strb	r3, [r2, #8]
 719:..\src/command_processing.c ****                         break;
 5171              		.loc 1 719 0
 5172 27c6 18E0     		b	.L224
 5173              	.L229:
 720:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 721:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 5174              		.loc 1 721 0
 5175 27c8 07F13803 		add	r3, r7, #56
 5176 27cc 183B     		subs	r3, r3, #24
 5177 27ce 1846     		mov	r0, r3
 5178 27d0 FFF7FEFF 		bl	strlen
 5179 27d4 0346     		mov	r3, r0
 5180 27d6 1A46     		mov	r2, r3
 5181 27d8 07F13803 		add	r3, r7, #56
 5182 27dc 183B     		subs	r3, r3, #24
 5183 27de 1344     		add	r3, r3, r2
 5184 27e0 604A     		ldr	r2, .L306+44
 5185 27e2 1D46     		mov	r5, r3
 5186 27e4 1446     		mov	r4, r2
 5187 27e6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5188 27e8 2860     		str	r0, [r5]	@ unaligned
 5189 27ea 6960     		str	r1, [r5, #4]	@ unaligned
 5190 27ec AA60     		str	r2, [r5, #8]	@ unaligned
 5191 27ee EB60     		str	r3, [r5, #12]	@ unaligned
 5192 27f0 2068     		ldr	r0, [r4]	@ unaligned
 5193 27f2 2861     		str	r0, [r5, #16]	@ unaligned
 5194 27f4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5195 27f6 AB82     		strh	r3, [r5, #20]	@ unaligned
 722:..\src/command_processing.c ****                         break;
 5196              		.loc 1 722 0
 5197 27f8 00BF     		nop
 5198              	.L224:
 723:..\src/command_processing.c ****                     }
 724:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 123


 5199              		.loc 1 724 0
 5200 27fa 5AE3     		b	.L286
 5201              	.L203:
 725:..\src/command_processing.c ****                 case 3:     // yes/no menu
 726:..\src/command_processing.c ****                     if(*m_addr){
 5202              		.loc 1 726 0
 5203 27fc 07F5BE53 		add	r3, r7, #6080
 5204 2800 03F10803 		add	r3, r3, #8
 5205 2804 1B68     		ldr	r3, [r3]
 5206 2806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5207 2808 002B     		cmp	r3, #0
 5208 280a 11D0     		beq	.L230
 727:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 5209              		.loc 1 727 0
 5210 280c 07F13803 		add	r3, r7, #56
 5211 2810 183B     		subs	r3, r3, #24
 5212 2812 1846     		mov	r0, r3
 5213 2814 FFF7FEFF 		bl	strlen
 5214 2818 0346     		mov	r3, r0
 5215 281a 1A46     		mov	r2, r3
 5216 281c 07F13803 		add	r3, r7, #56
 5217 2820 183B     		subs	r3, r3, #24
 5218 2822 1344     		add	r3, r3, r2
 5219 2824 504A     		ldr	r2, .L306+48
 5220 2826 1068     		ldr	r0, [r2]	@ unaligned
 5221 2828 1860     		str	r0, [r3]	@ unaligned
 5222 282a 1279     		ldrb	r2, [r2, #4]
 5223 282c 1A71     		strb	r2, [r3, #4]
 728:..\src/command_processing.c ****                     }
 729:..\src/command_processing.c ****                     else {
 730:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 731:..\src/command_processing.c ****                     }
 732:..\src/command_processing.c ****                     break;    
 5224              		.loc 1 732 0
 5225 282e 45E3     		b	.L199
 5226              	.L230:
 730:..\src/command_processing.c ****                     }
 5227              		.loc 1 730 0
 5228 2830 07F13803 		add	r3, r7, #56
 5229 2834 183B     		subs	r3, r3, #24
 5230 2836 1846     		mov	r0, r3
 5231 2838 FFF7FEFF 		bl	strlen
 5232 283c 0346     		mov	r3, r0
 5233 283e 1A46     		mov	r2, r3
 5234 2840 07F13803 		add	r3, r7, #56
 5235 2844 183B     		subs	r3, r3, #24
 5236 2846 1344     		add	r3, r3, r2
 5237 2848 484A     		ldr	r2, .L306+52
 5238 284a 1068     		ldr	r0, [r2]	@ unaligned
 5239 284c 1860     		str	r0, [r3]	@ unaligned
 5240              		.loc 1 732 0
 5241 284e 35E3     		b	.L199
 5242              	.L204:
 733:..\src/command_processing.c ****                 case 4:     // right/lef menu
 734:..\src/command_processing.c ****                     switch(*m_addr){
 5243              		.loc 1 734 0
 5244 2850 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 124


 5245 2854 03F10803 		add	r3, r3, #8
 5246 2858 1B68     		ldr	r3, [r3]
 5247 285a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5248 285c 002B     		cmp	r3, #0
 5249 285e 02D0     		beq	.L233
 5250 2860 012B     		cmp	r3, #1
 5251 2862 14D0     		beq	.L234
 735:..\src/command_processing.c ****                         case RIGHT_HAND:
 736:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 737:..\src/command_processing.c ****                         break;
 738:..\src/command_processing.c ****                         case LEFT_HAND:
 739:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 740:..\src/command_processing.c ****                         break;
 741:..\src/command_processing.c ****                     }
 742:..\src/command_processing.c ****                     break;
 5252              		.loc 1 742 0
 5253 2864 2AE3     		b	.L199
 5254              	.L233:
 736:..\src/command_processing.c ****                         break;
 5255              		.loc 1 736 0
 5256 2866 07F13803 		add	r3, r7, #56
 5257 286a 183B     		subs	r3, r3, #24
 5258 286c 1846     		mov	r0, r3
 5259 286e FFF7FEFF 		bl	strlen
 5260 2872 0346     		mov	r3, r0
 5261 2874 1A46     		mov	r2, r3
 5262 2876 07F13803 		add	r3, r7, #56
 5263 287a 183B     		subs	r3, r3, #24
 5264 287c 1344     		add	r3, r3, r2
 5265 287e 3C4A     		ldr	r2, .L306+56
 5266 2880 1068     		ldr	r0, [r2]	@ unaligned
 5267 2882 1860     		str	r0, [r3]	@ unaligned
 5268 2884 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5269 2886 9279     		ldrb	r2, [r2, #6]
 5270 2888 9980     		strh	r1, [r3, #4]	@ unaligned
 5271 288a 9A71     		strb	r2, [r3, #6]
 737:..\src/command_processing.c ****                         case LEFT_HAND:
 5272              		.loc 1 737 0
 5273 288c 11E0     		b	.L232
 5274              	.L234:
 739:..\src/command_processing.c ****                         break;
 5275              		.loc 1 739 0
 5276 288e 07F13803 		add	r3, r7, #56
 5277 2892 183B     		subs	r3, r3, #24
 5278 2894 1846     		mov	r0, r3
 5279 2896 FFF7FEFF 		bl	strlen
 5280 289a 0346     		mov	r3, r0
 5281 289c 1A46     		mov	r2, r3
 5282 289e 07F13803 		add	r3, r7, #56
 5283 28a2 183B     		subs	r3, r3, #24
 5284 28a4 1344     		add	r3, r3, r2
 5285 28a6 334A     		ldr	r2, .L306+60
 5286 28a8 1068     		ldr	r0, [r2]	@ unaligned
 5287 28aa 1860     		str	r0, [r3]	@ unaligned
 5288 28ac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5289 28ae 9A80     		strh	r2, [r3, #4]	@ unaligned
 740:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 125


 5290              		.loc 1 740 0
 5291 28b0 00BF     		nop
 5292              	.L232:
 5293              		.loc 1 742 0
 5294 28b2 03E3     		b	.L199
 5295              	.L205:
 743:..\src/command_processing.c ****                 case 5:     // on/off menu
 744:..\src/command_processing.c ****                     switch(*m_addr){
 5296              		.loc 1 744 0
 5297 28b4 07F5BE53 		add	r3, r7, #6080
 5298 28b8 03F10803 		add	r3, r3, #8
 5299 28bc 1B68     		ldr	r3, [r3]
 5300 28be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5301 28c0 002B     		cmp	r3, #0
 5302 28c2 02D0     		beq	.L236
 5303 28c4 012B     		cmp	r3, #1
 5304 28c6 12D0     		beq	.L237
 745:..\src/command_processing.c ****                         case 0:
 746:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 747:..\src/command_processing.c ****                         break;
 748:..\src/command_processing.c ****                         case 1:
 749:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 750:..\src/command_processing.c ****                         break;
 751:..\src/command_processing.c ****                     }
 752:..\src/command_processing.c ****                     break;
 5305              		.loc 1 752 0
 5306 28c8 F8E2     		b	.L199
 5307              	.L236:
 746:..\src/command_processing.c ****                         break;
 5308              		.loc 1 746 0
 5309 28ca 07F13803 		add	r3, r7, #56
 5310 28ce 183B     		subs	r3, r3, #24
 5311 28d0 1846     		mov	r0, r3
 5312 28d2 FFF7FEFF 		bl	strlen
 5313 28d6 0346     		mov	r3, r0
 5314 28d8 1A46     		mov	r2, r3
 5315 28da 07F13803 		add	r3, r7, #56
 5316 28de 183B     		subs	r3, r3, #24
 5317 28e0 1344     		add	r3, r3, r2
 5318 28e2 254A     		ldr	r2, .L306+64
 5319 28e4 1068     		ldr	r0, [r2]	@ unaligned
 5320 28e6 1860     		str	r0, [r3]	@ unaligned
 5321 28e8 1279     		ldrb	r2, [r2, #4]
 5322 28ea 1A71     		strb	r2, [r3, #4]
 747:..\src/command_processing.c ****                         case 1:
 5323              		.loc 1 747 0
 5324 28ec 0FE0     		b	.L235
 5325              	.L237:
 749:..\src/command_processing.c ****                         break;
 5326              		.loc 1 749 0
 5327 28ee 07F13803 		add	r3, r7, #56
 5328 28f2 183B     		subs	r3, r3, #24
 5329 28f4 1846     		mov	r0, r3
 5330 28f6 FFF7FEFF 		bl	strlen
 5331 28fa 0346     		mov	r3, r0
 5332 28fc 1A46     		mov	r2, r3
 5333 28fe 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 126


 5334 2902 183B     		subs	r3, r3, #24
 5335 2904 1344     		add	r3, r3, r2
 5336 2906 1D4A     		ldr	r2, .L306+68
 5337 2908 1068     		ldr	r0, [r2]	@ unaligned
 5338 290a 1860     		str	r0, [r3]	@ unaligned
 750:..\src/command_processing.c ****                     }
 5339              		.loc 1 750 0
 5340 290c 00BF     		nop
 5341              	.L235:
 5342              		.loc 1 752 0
 5343 290e D5E2     		b	.L199
 5344              	.L206:
 753:..\src/command_processing.c ****                 case 6:     // expansion port menu
 754:..\src/command_processing.c ****                     switch(*m_addr){
 5345              		.loc 1 754 0
 5346 2910 07F5BE53 		add	r3, r7, #6080
 5347 2914 03F10803 		add	r3, r3, #8
 5348 2918 1B68     		ldr	r3, [r3]
 5349 291a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5350 291c 032B     		cmp	r3, #3
 5351 291e 00F2CA82 		bhi	.L287
 5352 2922 01A2     		adr	r2, .L240
 5353 2924 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5354              		.p2align 2
 5355              	.L240:
 5356 2928 81290000 		.word	.L239+1
 5357 292c A5290000 		.word	.L241+1
 5358 2930 D1290000 		.word	.L242+1
 5359 2934 FF290000 		.word	.L243+1
 5360              		.p2align 1
 5361              	.L307:
 5362              		.align	2
 5363              	.L306:
 5364 2938 00000000 		.word	.LC88
 5365 293c 08000000 		.word	.LC89
 5366 2940 10000000 		.word	.LC90
 5367 2944 24000000 		.word	.LC91
 5368 2948 34000000 		.word	.LC92
 5369 294c 40000000 		.word	.LC93
 5370 2950 54000000 		.word	.LC94
 5371 2954 60000000 		.word	.LC95
 5372 2958 84000000 		.word	.LC96
 5373 295c 90000000 		.word	.LC97
 5374 2960 98000000 		.word	.LC98
 5375 2964 A4000000 		.word	.LC99
 5376 2968 BC000000 		.word	.LC100
 5377 296c C4000000 		.word	.LC101
 5378 2970 CC000000 		.word	.LC102
 5379 2974 D4000000 		.word	.LC103
 5380 2978 DC000000 		.word	.LC104
 5381 297c E4000000 		.word	.LC105
 5382              	.L239:
 755:..\src/command_processing.c ****                         case EXP_NONE:
 756:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5383              		.loc 1 756 0
 5384 2980 07F13803 		add	r3, r7, #56
 5385 2984 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 127


 5386 2986 1846     		mov	r0, r3
 5387 2988 FFF7FEFF 		bl	strlen
 5388 298c 0346     		mov	r3, r0
 5389 298e 1A46     		mov	r2, r3
 5390 2990 07F13803 		add	r3, r7, #56
 5391 2994 183B     		subs	r3, r3, #24
 5392 2996 1344     		add	r3, r3, r2
 5393 2998 CD4A     		ldr	r2, .L308
 5394 299a 1068     		ldr	r0, [r2]	@ unaligned
 5395 299c 1860     		str	r0, [r3]	@ unaligned
 5396 299e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5397 29a0 9A80     		strh	r2, [r3, #4]	@ unaligned
 757:..\src/command_processing.c ****                             break;
 5398              		.loc 1 757 0
 5399 29a2 42E0     		b	.L238
 5400              	.L241:
 758:..\src/command_processing.c ****                         case EXP_SD_RTC:
 759:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5401              		.loc 1 759 0
 5402 29a4 07F13803 		add	r3, r7, #56
 5403 29a8 183B     		subs	r3, r3, #24
 5404 29aa 1846     		mov	r0, r3
 5405 29ac FFF7FEFF 		bl	strlen
 5406 29b0 0346     		mov	r3, r0
 5407 29b2 1A46     		mov	r2, r3
 5408 29b4 07F13803 		add	r3, r7, #56
 5409 29b8 183B     		subs	r3, r3, #24
 5410 29ba 1344     		add	r3, r3, r2
 5411 29bc C54A     		ldr	r2, .L308+4
 5412 29be 1C46     		mov	r4, r3
 5413 29c0 1346     		mov	r3, r2
 5414 29c2 07CB     		ldmia	r3!, {r0, r1, r2}
 5415 29c4 2060     		str	r0, [r4]	@ unaligned
 5416 29c6 6160     		str	r1, [r4, #4]	@ unaligned
 5417 29c8 A260     		str	r2, [r4, #8]	@ unaligned
 5418 29ca 1B88     		ldrh	r3, [r3]	@ unaligned
 5419 29cc A381     		strh	r3, [r4, #12]	@ unaligned
 760:..\src/command_processing.c ****                             break;
 5420              		.loc 1 760 0
 5421 29ce 2CE0     		b	.L238
 5422              	.L242:
 761:..\src/command_processing.c ****                         case EXP_WIFI:
 762:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5423              		.loc 1 762 0
 5424 29d0 07F13803 		add	r3, r7, #56
 5425 29d4 183B     		subs	r3, r3, #24
 5426 29d6 1846     		mov	r0, r3
 5427 29d8 FFF7FEFF 		bl	strlen
 5428 29dc 0346     		mov	r3, r0
 5429 29de 1A46     		mov	r2, r3
 5430 29e0 07F13803 		add	r3, r7, #56
 5431 29e4 183B     		subs	r3, r3, #24
 5432 29e6 1344     		add	r3, r3, r2
 5433 29e8 BB4A     		ldr	r2, .L308+8
 5434 29ea 1D46     		mov	r5, r3
 5435 29ec 1446     		mov	r4, r2
 5436 29ee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 128


 5437 29f0 2860     		str	r0, [r5]	@ unaligned
 5438 29f2 6960     		str	r1, [r5, #4]	@ unaligned
 5439 29f4 AA60     		str	r2, [r5, #8]	@ unaligned
 5440 29f6 EB60     		str	r3, [r5, #12]	@ unaligned
 5441 29f8 2388     		ldrh	r3, [r4]	@ unaligned
 5442 29fa 2B82     		strh	r3, [r5, #16]	@ unaligned
 763:..\src/command_processing.c ****         					break;
 5443              		.loc 1 763 0
 5444 29fc 15E0     		b	.L238
 5445              	.L243:
 764:..\src/command_processing.c ****                         case EXP_OTHER:
 765:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5446              		.loc 1 765 0
 5447 29fe 07F13803 		add	r3, r7, #56
 5448 2a02 183B     		subs	r3, r3, #24
 5449 2a04 1846     		mov	r0, r3
 5450 2a06 FFF7FEFF 		bl	strlen
 5451 2a0a 0346     		mov	r3, r0
 5452 2a0c 1A46     		mov	r2, r3
 5453 2a0e 07F13803 		add	r3, r7, #56
 5454 2a12 183B     		subs	r3, r3, #24
 5455 2a14 1344     		add	r3, r3, r2
 5456 2a16 B14A     		ldr	r2, .L308+12
 5457 2a18 1C46     		mov	r4, r3
 5458 2a1a 1346     		mov	r3, r2
 5459 2a1c 07CB     		ldmia	r3!, {r0, r1, r2}
 5460 2a1e 2060     		str	r0, [r4]	@ unaligned
 5461 2a20 6160     		str	r1, [r4, #4]	@ unaligned
 5462 2a22 A260     		str	r2, [r4, #8]	@ unaligned
 5463 2a24 1B78     		ldrb	r3, [r3]
 5464 2a26 2373     		strb	r3, [r4, #12]
 766:..\src/command_processing.c ****         					break;
 5465              		.loc 1 766 0
 5466 2a28 00BF     		nop
 5467              	.L238:
 767:..\src/command_processing.c ****                     }
 768:..\src/command_processing.c ****                     break;
 5468              		.loc 1 768 0
 5469 2a2a 44E2     		b	.L287
 5470              	.L207:
 769:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 770:..\src/command_processing.c ****                     switch(*m_addr){
 5471              		.loc 1 770 0
 5472 2a2c 07F5BE53 		add	r3, r7, #6080
 5473 2a30 03F10803 		add	r3, r3, #8
 5474 2a34 1B68     		ldr	r3, [r3]
 5475 2a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5476 2a38 012B     		cmp	r3, #1
 5477 2a3a 16D0     		beq	.L245
 5478 2a3c 022B     		cmp	r3, #2
 5479 2a3e 26D0     		beq	.L246
 5480 2a40 002B     		cmp	r3, #0
 5481 2a42 00D0     		beq	.L247
 771:..\src/command_processing.c ****                         case 0: 
 772:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 773:..\src/command_processing.c ****                             break;
 774:..\src/command_processing.c ****                         case 1: 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 129


 775:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 776:..\src/command_processing.c ****                             break;
 777:..\src/command_processing.c ****                         case 2: 
 778:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 779:..\src/command_processing.c ****                             break;
 780:..\src/command_processing.c ****                         default:
 781:..\src/command_processing.c ****                             break;
 5482              		.loc 1 781 0
 5483 2a44 35E0     		b	.L248
 5484              	.L247:
 772:..\src/command_processing.c ****                             break;
 5485              		.loc 1 772 0
 5486 2a46 07F13803 		add	r3, r7, #56
 5487 2a4a 183B     		subs	r3, r3, #24
 5488 2a4c 1846     		mov	r0, r3
 5489 2a4e FFF7FEFF 		bl	strlen
 5490 2a52 0346     		mov	r3, r0
 5491 2a54 1A46     		mov	r2, r3
 5492 2a56 07F13803 		add	r3, r7, #56
 5493 2a5a 183B     		subs	r3, r3, #24
 5494 2a5c 1344     		add	r3, r3, r2
 5495 2a5e 9C4A     		ldr	r2, .L308
 5496 2a60 1068     		ldr	r0, [r2]	@ unaligned
 5497 2a62 1860     		str	r0, [r3]	@ unaligned
 5498 2a64 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5499 2a66 9A80     		strh	r2, [r3, #4]	@ unaligned
 773:..\src/command_processing.c ****                         case 1: 
 5500              		.loc 1 773 0
 5501 2a68 23E0     		b	.L248
 5502              	.L245:
 775:..\src/command_processing.c ****                             break;
 5503              		.loc 1 775 0
 5504 2a6a 07F13803 		add	r3, r7, #56
 5505 2a6e 183B     		subs	r3, r3, #24
 5506 2a70 1846     		mov	r0, r3
 5507 2a72 FFF7FEFF 		bl	strlen
 5508 2a76 0346     		mov	r3, r0
 5509 2a78 1A46     		mov	r2, r3
 5510 2a7a 07F13803 		add	r3, r7, #56
 5511 2a7e 183B     		subs	r3, r3, #24
 5512 2a80 1344     		add	r3, r3, r2
 5513 2a82 974A     		ldr	r2, .L308+16
 5514 2a84 1068     		ldr	r0, [r2]	@ unaligned
 5515 2a86 1860     		str	r0, [r3]	@ unaligned
 5516 2a88 1279     		ldrb	r2, [r2, #4]
 5517 2a8a 1A71     		strb	r2, [r3, #4]
 776:..\src/command_processing.c ****                         case 2: 
 5518              		.loc 1 776 0
 5519 2a8c 11E0     		b	.L248
 5520              	.L246:
 778:..\src/command_processing.c ****                             break;
 5521              		.loc 1 778 0
 5522 2a8e 07F13803 		add	r3, r7, #56
 5523 2a92 183B     		subs	r3, r3, #24
 5524 2a94 1846     		mov	r0, r3
 5525 2a96 FFF7FEFF 		bl	strlen
 5526 2a9a 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 130


 5527 2a9c 1A46     		mov	r2, r3
 5528 2a9e 07F13803 		add	r3, r7, #56
 5529 2aa2 183B     		subs	r3, r3, #24
 5530 2aa4 1344     		add	r3, r3, r2
 5531 2aa6 8F4A     		ldr	r2, .L308+20
 5532 2aa8 1068     		ldr	r0, [r2]	@ unaligned
 5533 2aaa 1860     		str	r0, [r3]	@ unaligned
 5534 2aac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5535 2aae 9A80     		strh	r2, [r3, #4]	@ unaligned
 779:..\src/command_processing.c ****                         default:
 5536              		.loc 1 779 0
 5537 2ab0 00BF     		nop
 5538              	.L248:
 782:..\src/command_processing.c ****                     } 
 783:..\src/command_processing.c ****                     break;
 5539              		.loc 1 783 0 discriminator 12
 5540 2ab2 03E2     		b	.L199
 5541              	.L208:
 784:..\src/command_processing.c ****                 case 8:     // user menu          
 785:..\src/command_processing.c ****                     switch(*m_addr){
 5542              		.loc 1 785 0
 5543 2ab4 07F5BE53 		add	r3, r7, #6080
 5544 2ab8 03F10803 		add	r3, r3, #8
 5545 2abc 1B68     		ldr	r3, [r3]
 5546 2abe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5547 2ac0 012B     		cmp	r3, #1
 5548 2ac2 1AD0     		beq	.L250
 5549 2ac4 022B     		cmp	r3, #2
 5550 2ac6 2CD0     		beq	.L251
 5551 2ac8 002B     		cmp	r3, #0
 5552 2aca 00D0     		beq	.L252
 786:..\src/command_processing.c ****                         case GENERIC_USER:
 787:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 788:..\src/command_processing.c ****                         break;
 789:..\src/command_processing.c ****                         case MARIA:
 790:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 791:..\src/command_processing.c ****                         break;
 792:..\src/command_processing.c ****                         case R01:
 793:..\src/command_processing.c ****                             strcat(aux_str, " R01\0");
 794:..\src/command_processing.c ****                         break;
 795:..\src/command_processing.c ****                     }   
 796:..\src/command_processing.c ****                     break;                    
 5553              		.loc 1 796 0
 5554 2acc F6E1     		b	.L199
 5555              	.L252:
 787:..\src/command_processing.c ****                         break;
 5556              		.loc 1 787 0
 5557 2ace 07F13803 		add	r3, r7, #56
 5558 2ad2 183B     		subs	r3, r3, #24
 5559 2ad4 1846     		mov	r0, r3
 5560 2ad6 FFF7FEFF 		bl	strlen
 5561 2ada 0346     		mov	r3, r0
 5562 2adc 1A46     		mov	r2, r3
 5563 2ade 07F13803 		add	r3, r7, #56
 5564 2ae2 183B     		subs	r3, r3, #24
 5565 2ae4 1344     		add	r3, r3, r2
 5566 2ae6 804A     		ldr	r2, .L308+24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 131


 5567 2ae8 1C46     		mov	r4, r3
 5568 2aea 1346     		mov	r3, r2
 5569 2aec 07CB     		ldmia	r3!, {r0, r1, r2}
 5570 2aee 2060     		str	r0, [r4]	@ unaligned
 5571 2af0 6160     		str	r1, [r4, #4]	@ unaligned
 5572 2af2 A260     		str	r2, [r4, #8]	@ unaligned
 5573 2af4 1B88     		ldrh	r3, [r3]	@ unaligned
 5574 2af6 A381     		strh	r3, [r4, #12]	@ unaligned
 788:..\src/command_processing.c ****                         case MARIA:
 5575              		.loc 1 788 0
 5576 2af8 25E0     		b	.L249
 5577              	.L250:
 790:..\src/command_processing.c ****                         break;
 5578              		.loc 1 790 0
 5579 2afa 07F13803 		add	r3, r7, #56
 5580 2afe 183B     		subs	r3, r3, #24
 5581 2b00 1846     		mov	r0, r3
 5582 2b02 FFF7FEFF 		bl	strlen
 5583 2b06 0346     		mov	r3, r0
 5584 2b08 1A46     		mov	r2, r3
 5585 2b0a 07F13803 		add	r3, r7, #56
 5586 2b0e 183B     		subs	r3, r3, #24
 5587 2b10 1344     		add	r3, r3, r2
 5588 2b12 764A     		ldr	r2, .L308+28
 5589 2b14 1068     		ldr	r0, [r2]	@ unaligned
 5590 2b16 1860     		str	r0, [r3]	@ unaligned
 5591 2b18 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5592 2b1a 9279     		ldrb	r2, [r2, #6]
 5593 2b1c 9980     		strh	r1, [r3, #4]	@ unaligned
 5594 2b1e 9A71     		strb	r2, [r3, #6]
 791:..\src/command_processing.c ****                         case R01:
 5595              		.loc 1 791 0
 5596 2b20 11E0     		b	.L249
 5597              	.L251:
 793:..\src/command_processing.c ****                         break;
 5598              		.loc 1 793 0
 5599 2b22 07F13803 		add	r3, r7, #56
 5600 2b26 183B     		subs	r3, r3, #24
 5601 2b28 1846     		mov	r0, r3
 5602 2b2a FFF7FEFF 		bl	strlen
 5603 2b2e 0346     		mov	r3, r0
 5604 2b30 1A46     		mov	r2, r3
 5605 2b32 07F13803 		add	r3, r7, #56
 5606 2b36 183B     		subs	r3, r3, #24
 5607 2b38 1344     		add	r3, r3, r2
 5608 2b3a 6D4A     		ldr	r2, .L308+32
 5609 2b3c 1068     		ldr	r0, [r2]	@ unaligned
 5610 2b3e 1860     		str	r0, [r3]	@ unaligned
 5611 2b40 1279     		ldrb	r2, [r2, #4]
 5612 2b42 1A71     		strb	r2, [r3, #4]
 794:..\src/command_processing.c ****                     }   
 5613              		.loc 1 794 0
 5614 2b44 00BF     		nop
 5615              	.L249:
 5616              		.loc 1 796 0
 5617 2b46 B9E1     		b	.L199
 5618              	.L209:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 132


 797:..\src/command_processing.c ****                 case 9:     // driver type menu
 798:..\src/command_processing.c ****                     switch(*m_addr){
 5619              		.loc 1 798 0
 5620 2b48 07F5BE53 		add	r3, r7, #6080
 5621 2b4c 03F10803 		add	r3, r3, #8
 5622 2b50 1B68     		ldr	r3, [r3]
 5623 2b52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5624 2b54 012B     		cmp	r3, #1
 5625 2b56 1BD0     		beq	.L254
 5626 2b58 022B     		cmp	r3, #2
 5627 2b5a 32D0     		beq	.L255
 5628 2b5c 002B     		cmp	r3, #0
 5629 2b5e 00D0     		beq	.L256
 799:..\src/command_processing.c ****                         case 0:
 800:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 801:..\src/command_processing.c ****                         break;
 802:..\src/command_processing.c ****                         case 1:
 803:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 804:..\src/command_processing.c ****                         break;
 805:..\src/command_processing.c ****                         case 2:
 806:..\src/command_processing.c ****                             strcat(aux_str, " ESC (Brushless)\0");
 807:..\src/command_processing.c ****                         break;
 808:..\src/command_processing.c ****                     }
 809:..\src/command_processing.c ****                     break;
 5630              		.loc 1 809 0
 5631 2b60 ACE1     		b	.L199
 5632              	.L256:
 800:..\src/command_processing.c ****                         break;
 5633              		.loc 1 800 0
 5634 2b62 07F13803 		add	r3, r7, #56
 5635 2b66 183B     		subs	r3, r3, #24
 5636 2b68 1846     		mov	r0, r3
 5637 2b6a FFF7FEFF 		bl	strlen
 5638 2b6e 0346     		mov	r3, r0
 5639 2b70 1A46     		mov	r2, r3
 5640 2b72 07F13803 		add	r3, r7, #56
 5641 2b76 183B     		subs	r3, r3, #24
 5642 2b78 1344     		add	r3, r3, r2
 5643 2b7a 5E4A     		ldr	r2, .L308+36
 5644 2b7c 1D46     		mov	r5, r3
 5645 2b7e 1446     		mov	r4, r2
 5646 2b80 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5647 2b82 2860     		str	r0, [r5]	@ unaligned
 5648 2b84 6960     		str	r1, [r5, #4]	@ unaligned
 5649 2b86 AA60     		str	r2, [r5, #8]	@ unaligned
 5650 2b88 EB60     		str	r3, [r5, #12]	@ unaligned
 5651 2b8a 2068     		ldr	r0, [r4]	@ unaligned
 5652 2b8c 2861     		str	r0, [r5, #16]	@ unaligned
 801:..\src/command_processing.c ****                         case 1:
 5653              		.loc 1 801 0
 5654 2b8e 2FE0     		b	.L253
 5655              	.L254:
 803:..\src/command_processing.c ****                         break;
 5656              		.loc 1 803 0
 5657 2b90 07F13803 		add	r3, r7, #56
 5658 2b94 183B     		subs	r3, r3, #24
 5659 2b96 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 133


 5660 2b98 FFF7FEFF 		bl	strlen
 5661 2b9c 0346     		mov	r3, r0
 5662 2b9e 1A46     		mov	r2, r3
 5663 2ba0 07F13803 		add	r3, r7, #56
 5664 2ba4 183B     		subs	r3, r3, #24
 5665 2ba6 1344     		add	r3, r3, r2
 5666 2ba8 534A     		ldr	r2, .L308+40
 5667 2baa 1D46     		mov	r5, r3
 5668 2bac 1446     		mov	r4, r2
 5669 2bae 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5670 2bb0 2860     		str	r0, [r5]	@ unaligned
 5671 2bb2 6960     		str	r1, [r5, #4]	@ unaligned
 5672 2bb4 AA60     		str	r2, [r5, #8]	@ unaligned
 5673 2bb6 EB60     		str	r3, [r5, #12]	@ unaligned
 5674 2bb8 2068     		ldr	r0, [r4]	@ unaligned
 5675 2bba 2861     		str	r0, [r5, #16]	@ unaligned
 5676 2bbc A388     		ldrh	r3, [r4, #4]	@ unaligned
 5677 2bbe AB82     		strh	r3, [r5, #20]	@ unaligned
 804:..\src/command_processing.c ****                         case 2:
 5678              		.loc 1 804 0
 5679 2bc0 16E0     		b	.L253
 5680              	.L255:
 806:..\src/command_processing.c ****                         break;
 5681              		.loc 1 806 0
 5682 2bc2 07F13803 		add	r3, r7, #56
 5683 2bc6 183B     		subs	r3, r3, #24
 5684 2bc8 1846     		mov	r0, r3
 5685 2bca FFF7FEFF 		bl	strlen
 5686 2bce 0346     		mov	r3, r0
 5687 2bd0 1A46     		mov	r2, r3
 5688 2bd2 07F13803 		add	r3, r7, #56
 5689 2bd6 183B     		subs	r3, r3, #24
 5690 2bd8 1344     		add	r3, r3, r2
 5691 2bda 484A     		ldr	r2, .L308+44
 5692 2bdc 1D46     		mov	r5, r3
 5693 2bde 1446     		mov	r4, r2
 5694 2be0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5695 2be2 2860     		str	r0, [r5]	@ unaligned
 5696 2be4 6960     		str	r1, [r5, #4]	@ unaligned
 5697 2be6 AA60     		str	r2, [r5, #8]	@ unaligned
 5698 2be8 EB60     		str	r3, [r5, #12]	@ unaligned
 5699 2bea 2378     		ldrb	r3, [r4]
 5700 2bec 2B74     		strb	r3, [r5, #16]
 807:..\src/command_processing.c ****                     }
 5701              		.loc 1 807 0
 5702 2bee 00BF     		nop
 5703              	.L253:
 5704              		.loc 1 809 0
 5705 2bf0 64E1     		b	.L199
 5706              	.L210:
 810:..\src/command_processing.c ****                 case 10:    // device type menu
 811:..\src/command_processing.c ****                     switch(*m_addr){
 5707              		.loc 1 811 0
 5708 2bf2 07F5BE53 		add	r3, r7, #6080
 5709 2bf6 03F10803 		add	r3, r3, #8
 5710 2bfa 1B68     		ldr	r3, [r3]
 5711 2bfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 134


 5712 2bfe 042B     		cmp	r3, #4
 5713 2c00 00F25B81 		bhi	.L288
 5714 2c04 01A2     		adr	r2, .L259
 5715 2c06 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5716 2c0a 00BF     		.p2align 2
 5717              	.L259:
 5718 2c0c 212C0000 		.word	.L258+1
 5719 2c10 4D2C0000 		.word	.L260+1
 5720 2c14 7B2C0000 		.word	.L261+1
 5721 2c18 A72C0000 		.word	.L262+1
 5722 2c1c 112D0000 		.word	.L263+1
 5723              		.p2align 1
 5724              	.L258:
 812:..\src/command_processing.c ****                         case 0:
 813:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5725              		.loc 1 813 0
 5726 2c20 07F13803 		add	r3, r7, #56
 5727 2c24 183B     		subs	r3, r3, #24
 5728 2c26 1846     		mov	r0, r3
 5729 2c28 FFF7FEFF 		bl	strlen
 5730 2c2c 0346     		mov	r3, r0
 5731 2c2e 1A46     		mov	r2, r3
 5732 2c30 07F13803 		add	r3, r7, #56
 5733 2c34 183B     		subs	r3, r3, #24
 5734 2c36 1344     		add	r3, r3, r2
 5735 2c38 314A     		ldr	r2, .L308+48
 5736 2c3a 1C46     		mov	r4, r3
 5737 2c3c 1346     		mov	r3, r2
 5738 2c3e 07CB     		ldmia	r3!, {r0, r1, r2}
 5739 2c40 2060     		str	r0, [r4]	@ unaligned
 5740 2c42 6160     		str	r1, [r4, #4]	@ unaligned
 5741 2c44 A260     		str	r2, [r4, #8]	@ unaligned
 5742 2c46 1B88     		ldrh	r3, [r3]	@ unaligned
 5743 2c48 A381     		strh	r3, [r4, #12]	@ unaligned
 814:..\src/command_processing.c ****                         break;
 5744              		.loc 1 814 0
 5745 2c4a 7BE0     		b	.L257
 5746              	.L260:
 815:..\src/command_processing.c ****                         case 1:
 816:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5747              		.loc 1 816 0
 5748 2c4c 07F13803 		add	r3, r7, #56
 5749 2c50 183B     		subs	r3, r3, #24
 5750 2c52 1846     		mov	r0, r3
 5751 2c54 FFF7FEFF 		bl	strlen
 5752 2c58 0346     		mov	r3, r0
 5753 2c5a 1A46     		mov	r2, r3
 5754 2c5c 07F13803 		add	r3, r7, #56
 5755 2c60 183B     		subs	r3, r3, #24
 5756 2c62 1344     		add	r3, r3, r2
 5757 2c64 274A     		ldr	r2, .L308+52
 5758 2c66 1D46     		mov	r5, r3
 5759 2c68 1446     		mov	r4, r2
 5760 2c6a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5761 2c6c 2860     		str	r0, [r5]	@ unaligned
 5762 2c6e 6960     		str	r1, [r5, #4]	@ unaligned
 5763 2c70 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 135


 5764 2c72 EB60     		str	r3, [r5, #12]	@ unaligned
 5765 2c74 2388     		ldrh	r3, [r4]	@ unaligned
 5766 2c76 2B82     		strh	r3, [r5, #16]	@ unaligned
 817:..\src/command_processing.c ****                         break;
 5767              		.loc 1 817 0
 5768 2c78 64E0     		b	.L257
 5769              	.L261:
 818:..\src/command_processing.c ****                         case 2:
 819:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5770              		.loc 1 819 0
 5771 2c7a 07F13803 		add	r3, r7, #56
 5772 2c7e 183B     		subs	r3, r3, #24
 5773 2c80 1846     		mov	r0, r3
 5774 2c82 FFF7FEFF 		bl	strlen
 5775 2c86 0346     		mov	r3, r0
 5776 2c88 1A46     		mov	r2, r3
 5777 2c8a 07F13803 		add	r3, r7, #56
 5778 2c8e 183B     		subs	r3, r3, #24
 5779 2c90 1344     		add	r3, r3, r2
 5780 2c92 1D4A     		ldr	r2, .L308+56
 5781 2c94 1C46     		mov	r4, r3
 5782 2c96 1346     		mov	r3, r2
 5783 2c98 07CB     		ldmia	r3!, {r0, r1, r2}
 5784 2c9a 2060     		str	r0, [r4]	@ unaligned
 5785 2c9c 6160     		str	r1, [r4, #4]	@ unaligned
 5786 2c9e A260     		str	r2, [r4, #8]	@ unaligned
 5787 2ca0 1B88     		ldrh	r3, [r3]	@ unaligned
 5788 2ca2 A381     		strh	r3, [r4, #12]	@ unaligned
 820:..\src/command_processing.c ****                         break;
 5789              		.loc 1 820 0
 5790 2ca4 4EE0     		b	.L257
 5791              	.L262:
 821:..\src/command_processing.c ****                         case 3:
 822:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5792              		.loc 1 822 0
 5793 2ca6 07F13803 		add	r3, r7, #56
 5794 2caa 183B     		subs	r3, r3, #24
 5795 2cac 1846     		mov	r0, r3
 5796 2cae FFF7FEFF 		bl	strlen
 5797 2cb2 0346     		mov	r3, r0
 5798 2cb4 1A46     		mov	r2, r3
 5799 2cb6 07F13803 		add	r3, r7, #56
 5800 2cba 183B     		subs	r3, r3, #24
 5801 2cbc 1344     		add	r3, r3, r2
 5802 2cbe 134A     		ldr	r2, .L308+60
 5803 2cc0 1C46     		mov	r4, r3
 5804 2cc2 1546     		mov	r5, r2
 5805 2cc4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5806 2cc6 2060     		str	r0, [r4]	@ unaligned
 5807 2cc8 6160     		str	r1, [r4, #4]	@ unaligned
 5808 2cca A260     		str	r2, [r4, #8]	@ unaligned
 5809 2ccc E360     		str	r3, [r4, #12]	@ unaligned
 823:..\src/command_processing.c ****                         break;
 5810              		.loc 1 823 0
 5811 2cce 39E0     		b	.L257
 5812              	.L309:
 5813              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 136


 5814              	.L308:
 5815 2cd0 EC000000 		.word	.LC106
 5816 2cd4 F4000000 		.word	.LC107
 5817 2cd8 04010000 		.word	.LC108
 5818 2cdc 18010000 		.word	.LC109
 5819 2ce0 28010000 		.word	.LC110
 5820 2ce4 30010000 		.word	.LC111
 5821 2ce8 38010000 		.word	.LC112
 5822 2cec 48010000 		.word	.LC113
 5823 2cf0 50010000 		.word	.LC114
 5824 2cf4 58010000 		.word	.LC115
 5825 2cf8 70010000 		.word	.LC116
 5826 2cfc 88010000 		.word	.LC117
 5827 2d00 9C010000 		.word	.LC118
 5828 2d04 AC010000 		.word	.LC119
 5829 2d08 C0010000 		.word	.LC120
 5830 2d0c D0010000 		.word	.LC121
 5831              	.L263:
 824:..\src/command_processing.c ****                         case 4:
 825:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5832              		.loc 1 825 0
 5833 2d10 07F13803 		add	r3, r7, #56
 5834 2d14 183B     		subs	r3, r3, #24
 5835 2d16 1846     		mov	r0, r3
 5836 2d18 FFF7FEFF 		bl	strlen
 5837 2d1c 0346     		mov	r3, r0
 5838 2d1e 1A46     		mov	r2, r3
 5839 2d20 07F13803 		add	r3, r7, #56
 5840 2d24 183B     		subs	r3, r3, #24
 5841 2d26 1344     		add	r3, r3, r2
 5842 2d28 714A     		ldr	r2, .L310
 5843 2d2a 1D46     		mov	r5, r3
 5844 2d2c 1446     		mov	r4, r2
 5845 2d2e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5846 2d30 2860     		str	r0, [r5]	@ unaligned
 5847 2d32 6960     		str	r1, [r5, #4]	@ unaligned
 5848 2d34 AA60     		str	r2, [r5, #8]	@ unaligned
 5849 2d36 EB60     		str	r3, [r5, #12]	@ unaligned
 5850 2d38 2388     		ldrh	r3, [r4]	@ unaligned
 5851 2d3a A278     		ldrb	r2, [r4, #2]
 5852 2d3c 2B82     		strh	r3, [r5, #16]	@ unaligned
 5853 2d3e 1346     		mov	r3, r2
 5854 2d40 AB74     		strb	r3, [r5, #18]
 826:..\src/command_processing.c ****                         break;
 5855              		.loc 1 826 0
 5856 2d42 00BF     		nop
 5857              	.L257:
 827:..\src/command_processing.c ****                     }
 828:..\src/command_processing.c ****                     break;
 5858              		.loc 1 828 0
 5859 2d44 B9E0     		b	.L288
 5860              	.L211:
 829:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 830:..\src/command_processing.c ****                     switch(*m_addr){
 5861              		.loc 1 830 0
 5862 2d46 07F5BE53 		add	r3, r7, #6080
 5863 2d4a 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 137


 5864 2d4e 1B68     		ldr	r3, [r3]
 5865 2d50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5866 2d52 002B     		cmp	r3, #0
 5867 2d54 02D0     		beq	.L265
 5868 2d56 012B     		cmp	r3, #1
 5869 2d58 37D0     		beq	.L266
 831:..\src/command_processing.c ****                         case 0:
 832:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 833:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 834:..\src/command_processing.c ****                             }
 835:..\src/command_processing.c ****                             else {
 836:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist,Slow:hand\0");
 837:..\src/command_processing.c ****                             }                            
 838:..\src/command_processing.c ****                         break;
 839:..\src/command_processing.c ****                         case 1:
 840:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 841:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 842:..\src/command_processing.c ****                             }
 843:..\src/command_processing.c ****                             else {
 844:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist,Fast:hand\0");
 845:..\src/command_processing.c ****                             }
 846:..\src/command_processing.c ****                         break;
 847:..\src/command_processing.c ****                     }
 848:..\src/command_processing.c ****                     break;
 5870              		.loc 1 848 0
 5871 2d5a AFE0     		b	.L199
 5872              	.L265:
 832:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 5873              		.loc 1 832 0
 5874 2d5c 654B     		ldr	r3, .L310+4
 5875 2d5e 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5876 2d62 042B     		cmp	r3, #4
 5877 2d64 18D1     		bne	.L267
 833:..\src/command_processing.c ****                             }
 5878              		.loc 1 833 0
 5879 2d66 07F13803 		add	r3, r7, #56
 5880 2d6a 183B     		subs	r3, r3, #24
 5881 2d6c 1846     		mov	r0, r3
 5882 2d6e FFF7FEFF 		bl	strlen
 5883 2d72 0346     		mov	r3, r0
 5884 2d74 1A46     		mov	r2, r3
 5885 2d76 07F13803 		add	r3, r7, #56
 5886 2d7a 183B     		subs	r3, r3, #24
 5887 2d7c 1344     		add	r3, r3, r2
 5888 2d7e 5E4A     		ldr	r2, .L310+8
 5889 2d80 1D46     		mov	r5, r3
 5890 2d82 1446     		mov	r4, r2
 5891 2d84 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5892 2d86 2860     		str	r0, [r5]	@ unaligned
 5893 2d88 6960     		str	r1, [r5, #4]	@ unaligned
 5894 2d8a AA60     		str	r2, [r5, #8]	@ unaligned
 5895 2d8c EB60     		str	r3, [r5, #12]	@ unaligned
 5896 2d8e 2068     		ldr	r0, [r4]	@ unaligned
 5897 2d90 2861     		str	r0, [r5, #16]	@ unaligned
 5898 2d92 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5899 2d94 AB82     		strh	r3, [r5, #20]	@ unaligned
 838:..\src/command_processing.c ****                         case 1:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 138


 5900              		.loc 1 838 0
 5901 2d96 4FE0     		b	.L264
 5902              	.L267:
 836:..\src/command_processing.c ****                             }                            
 5903              		.loc 1 836 0
 5904 2d98 07F13803 		add	r3, r7, #56
 5905 2d9c 183B     		subs	r3, r3, #24
 5906 2d9e 1846     		mov	r0, r3
 5907 2da0 FFF7FEFF 		bl	strlen
 5908 2da4 0346     		mov	r3, r0
 5909 2da6 1A46     		mov	r2, r3
 5910 2da8 07F13803 		add	r3, r7, #56
 5911 2dac 183B     		subs	r3, r3, #24
 5912 2dae 1344     		add	r3, r3, r2
 5913 2db0 524A     		ldr	r2, .L310+12
 5914 2db2 1D46     		mov	r5, r3
 5915 2db4 1446     		mov	r4, r2
 5916 2db6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5917 2db8 2860     		str	r0, [r5]	@ unaligned
 5918 2dba 6960     		str	r1, [r5, #4]	@ unaligned
 5919 2dbc AA60     		str	r2, [r5, #8]	@ unaligned
 5920 2dbe EB60     		str	r3, [r5, #12]	@ unaligned
 5921 2dc0 2068     		ldr	r0, [r4]	@ unaligned
 5922 2dc2 2861     		str	r0, [r5, #16]	@ unaligned
 5923 2dc4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5924 2dc6 AB82     		strh	r3, [r5, #20]	@ unaligned
 838:..\src/command_processing.c ****                         case 1:
 5925              		.loc 1 838 0
 5926 2dc8 36E0     		b	.L264
 5927              	.L266:
 840:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 5928              		.loc 1 840 0
 5929 2dca 4A4B     		ldr	r3, .L310+4
 5930 2dcc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5931 2dd0 042B     		cmp	r3, #4
 5932 2dd2 18D1     		bne	.L269
 841:..\src/command_processing.c ****                             }
 5933              		.loc 1 841 0
 5934 2dd4 07F13803 		add	r3, r7, #56
 5935 2dd8 183B     		subs	r3, r3, #24
 5936 2dda 1846     		mov	r0, r3
 5937 2ddc FFF7FEFF 		bl	strlen
 5938 2de0 0346     		mov	r3, r0
 5939 2de2 1A46     		mov	r2, r3
 5940 2de4 07F13803 		add	r3, r7, #56
 5941 2de8 183B     		subs	r3, r3, #24
 5942 2dea 1344     		add	r3, r3, r2
 5943 2dec 444A     		ldr	r2, .L310+16
 5944 2dee 1D46     		mov	r5, r3
 5945 2df0 1446     		mov	r4, r2
 5946 2df2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5947 2df4 2860     		str	r0, [r5]	@ unaligned
 5948 2df6 6960     		str	r1, [r5, #4]	@ unaligned
 5949 2df8 AA60     		str	r2, [r5, #8]	@ unaligned
 5950 2dfa EB60     		str	r3, [r5, #12]	@ unaligned
 5951 2dfc 2068     		ldr	r0, [r4]	@ unaligned
 5952 2dfe 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 139


 5953 2e00 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5954 2e02 AB82     		strh	r3, [r5, #20]	@ unaligned
 846:..\src/command_processing.c ****                     }
 5955              		.loc 1 846 0
 5956 2e04 17E0     		b	.L289
 5957              	.L269:
 844:..\src/command_processing.c ****                             }
 5958              		.loc 1 844 0
 5959 2e06 07F13803 		add	r3, r7, #56
 5960 2e0a 183B     		subs	r3, r3, #24
 5961 2e0c 1846     		mov	r0, r3
 5962 2e0e FFF7FEFF 		bl	strlen
 5963 2e12 0346     		mov	r3, r0
 5964 2e14 1A46     		mov	r2, r3
 5965 2e16 07F13803 		add	r3, r7, #56
 5966 2e1a 183B     		subs	r3, r3, #24
 5967 2e1c 1344     		add	r3, r3, r2
 5968 2e1e 394A     		ldr	r2, .L310+20
 5969 2e20 1D46     		mov	r5, r3
 5970 2e22 1446     		mov	r4, r2
 5971 2e24 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5972 2e26 2860     		str	r0, [r5]	@ unaligned
 5973 2e28 6960     		str	r1, [r5, #4]	@ unaligned
 5974 2e2a AA60     		str	r2, [r5, #8]	@ unaligned
 5975 2e2c EB60     		str	r3, [r5, #12]	@ unaligned
 5976 2e2e 2068     		ldr	r0, [r4]	@ unaligned
 5977 2e30 2861     		str	r0, [r5, #16]	@ unaligned
 5978 2e32 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5979 2e34 AB82     		strh	r3, [r5, #20]	@ unaligned
 5980              	.L289:
 846:..\src/command_processing.c ****                     }
 5981              		.loc 1 846 0
 5982 2e36 00BF     		nop
 5983              	.L264:
 5984              		.loc 1 848 0 discriminator 13
 5985 2e38 40E0     		b	.L199
 5986              	.L212:
 849:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 850:..\src/command_processing.c ****                     switch(*m_addr){
 5987              		.loc 1 850 0
 5988 2e3a 07F5BE53 		add	r3, r7, #6080
 5989 2e3e 03F10803 		add	r3, r3, #8
 5990 2e42 1B68     		ldr	r3, [r3]
 5991 2e44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5992 2e46 002B     		cmp	r3, #0
 5993 2e48 02D0     		beq	.L272
 5994 2e4a 012B     		cmp	r3, #1
 5995 2e4c 17D0     		beq	.L273
 851:..\src/command_processing.c ****                         case 0:
 852:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 853:..\src/command_processing.c ****                         break;
 854:..\src/command_processing.c ****                         case 1:
 855:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 856:..\src/command_processing.c ****                         break;
 857:..\src/command_processing.c ****                     }
 858:..\src/command_processing.c ****                     break;
 5996              		.loc 1 858 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 140


 5997 2e4e 35E0     		b	.L199
 5998              	.L272:
 852:..\src/command_processing.c ****                         break;
 5999              		.loc 1 852 0
 6000 2e50 07F13803 		add	r3, r7, #56
 6001 2e54 183B     		subs	r3, r3, #24
 6002 2e56 1846     		mov	r0, r3
 6003 2e58 FFF7FEFF 		bl	strlen
 6004 2e5c 0346     		mov	r3, r0
 6005 2e5e 1A46     		mov	r2, r3
 6006 2e60 07F13803 		add	r3, r7, #56
 6007 2e64 183B     		subs	r3, r3, #24
 6008 2e66 1344     		add	r3, r3, r2
 6009 2e68 274A     		ldr	r2, .L310+24
 6010 2e6a 1D46     		mov	r5, r3
 6011 2e6c 1446     		mov	r4, r2
 6012 2e6e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 6013 2e70 2860     		str	r0, [r5]	@ unaligned
 6014 2e72 6960     		str	r1, [r5, #4]	@ unaligned
 6015 2e74 AA60     		str	r2, [r5, #8]	@ unaligned
 6016 2e76 EB60     		str	r3, [r5, #12]	@ unaligned
 6017 2e78 2068     		ldr	r0, [r4]	@ unaligned
 6018 2e7a 2861     		str	r0, [r5, #16]	@ unaligned
 853:..\src/command_processing.c ****                         case 1:
 6019              		.loc 1 853 0
 6020 2e7c 16E0     		b	.L271
 6021              	.L273:
 855:..\src/command_processing.c ****                         break;
 6022              		.loc 1 855 0
 6023 2e7e 07F13803 		add	r3, r7, #56
 6024 2e82 183B     		subs	r3, r3, #24
 6025 2e84 1846     		mov	r0, r3
 6026 2e86 FFF7FEFF 		bl	strlen
 6027 2e8a 0346     		mov	r3, r0
 6028 2e8c 1A46     		mov	r2, r3
 6029 2e8e 07F13803 		add	r3, r7, #56
 6030 2e92 183B     		subs	r3, r3, #24
 6031 2e94 1344     		add	r3, r3, r2
 6032 2e96 1D4A     		ldr	r2, .L310+28
 6033 2e98 1D46     		mov	r5, r3
 6034 2e9a 1446     		mov	r4, r2
 6035 2e9c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 6036 2e9e 2860     		str	r0, [r5]	@ unaligned
 6037 2ea0 6960     		str	r1, [r5, #4]	@ unaligned
 6038 2ea2 AA60     		str	r2, [r5, #8]	@ unaligned
 6039 2ea4 EB60     		str	r3, [r5, #12]	@ unaligned
 6040 2ea6 2068     		ldr	r0, [r4]	@ unaligned
 6041 2ea8 2861     		str	r0, [r5, #16]	@ unaligned
 856:..\src/command_processing.c ****                     }
 6042              		.loc 1 856 0
 6043 2eaa 00BF     		nop
 6044              	.L271:
 6045              		.loc 1 858 0
 6046 2eac 06E0     		b	.L199
 6047              	.L285:
 708:..\src/command_processing.c ****                 case 2:     // control mode menu
 6048              		.loc 1 708 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 141


 6049 2eae 00BF     		nop
 6050 2eb0 04E0     		b	.L199
 6051              	.L286:
 724:..\src/command_processing.c ****                 case 3:     // yes/no menu
 6052              		.loc 1 724 0
 6053 2eb2 00BF     		nop
 6054 2eb4 02E0     		b	.L199
 6055              	.L287:
 768:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 6056              		.loc 1 768 0
 6057 2eb6 00BF     		nop
 6058 2eb8 00E0     		b	.L199
 6059              	.L288:
 828:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 6060              		.loc 1 828 0
 6061 2eba 00BF     		nop
 6062              	.L199:
 859:..\src/command_processing.c ****             }
 860:..\src/command_processing.c ****             //Recomputes string length
 861:..\src/command_processing.c ****             string_length = strlen(aux_str)+1;
 6063              		.loc 1 861 0
 6064 2ebc 07F13803 		add	r3, r7, #56
 6065 2ec0 183B     		subs	r3, r3, #24
 6066 2ec2 1846     		mov	r0, r3
 6067 2ec4 FFF7FEFF 		bl	strlen
 6068 2ec8 0346     		mov	r3, r0
 6069 2eca DBB2     		uxtb	r3, r3
 6070 2ecc 0133     		adds	r3, r3, #1
 6071 2ece 07F5BE52 		add	r2, r7, #6080
 6072 2ed2 02F11202 		add	r2, r2, #18
 6073 2ed6 1370     		strb	r3, [r2]
 6074              	.L198:
 862:..\src/command_processing.c ****         }
 863:..\src/command_processing.c **** 
 864:..\src/command_processing.c ****         // Add parameter string to packet
 865:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 6075              		.loc 1 865 0
 6076 2ed8 07F5BE53 		add	r3, r7, #6080
 6077 2edc 03F11203 		add	r3, r3, #18
 6078 2ee0 1B78     		ldrb	r3, [r3]
 6079 2ee2 07F5BE52 		add	r2, r7, #6080
 6080 2ee6 02F11702 		add	r2, r2, #23
 6081 2eea 1370     		strb	r3, [r2]
 6082 2eec 56E0     		b	.L274
 6083              	.L311:
 6084 2eee 00BF     		.align	2
 6085              	.L310:
 6086 2ef0 E4010000 		.word	.LC122
 6087 2ef4 00000000 		.word	c_mem
 6088 2ef8 F8010000 		.word	.LC123
 6089 2efc 10020000 		.word	.LC124
 6090 2f00 28020000 		.word	.LC125
 6091 2f04 40020000 		.word	.LC126
 6092 2f08 58020000 		.word	.LC127
 6093 2f0c 70020000 		.word	.LC128
 6094              	.L275:
 866:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length - i] = aux
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 142


 6095              		.loc 1 866 0 discriminator 3
 6096 2f10 07F5BE53 		add	r3, r7, #6080
 6097 2f14 03F11503 		add	r3, r3, #21
 6098 2f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6099 2f1a 3222     		movs	r2, #50
 6100 2f1c 02FB03F3 		mul	r3, r2, r3
 6101 2f20 1A1D     		adds	r2, r3, #4
 6102 2f22 07F5BE53 		add	r3, r7, #6080
 6103 2f26 03F11303 		add	r3, r3, #19
 6104 2f2a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6105 2f2c 07F5BE53 		add	r3, r7, #6080
 6106 2f30 03F11503 		add	r3, r3, #21
 6107 2f34 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6108 2f36 07F11803 		add	r3, r7, #24
 6109 2f3a 143B     		subs	r3, r3, #20
 6110 2f3c 1B68     		ldr	r3, [r3]
 6111 2f3e 0344     		add	r3, r3, r0
 6112 2f40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6113 2f42 03FB01F3 		mul	r3, r3, r1
 6114 2f46 1A44     		add	r2, r2, r3
 6115 2f48 07F5BE53 		add	r3, r7, #6080
 6116 2f4c 03F11203 		add	r3, r3, #18
 6117 2f50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6118 2f52 1A44     		add	r2, r2, r3
 6119 2f54 07F5BE53 		add	r3, r7, #6080
 6120 2f58 03F11703 		add	r3, r3, #23
 6121 2f5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6122 2f5e D21A     		subs	r2, r2, r3
 6123 2f60 07F5BE53 		add	r3, r7, #6080
 6124 2f64 03F11203 		add	r3, r3, #18
 6125 2f68 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6126 2f6a 07F5BE53 		add	r3, r7, #6080
 6127 2f6e 03F11703 		add	r3, r3, #23
 6128 2f72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6129 2f74 C91A     		subs	r1, r1, r3
 6130 2f76 07F13803 		add	r3, r7, #56
 6131 2f7a 183B     		subs	r3, r3, #24
 6132 2f7c 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 6133 2f7e 07F15803 		add	r3, r7, #88
 6134 2f82 043B     		subs	r3, r3, #4
 6135 2f84 9954     		strb	r1, [r3, r2]
 865:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length - i] = aux
 6136              		.loc 1 865 0 discriminator 3
 6137 2f86 07F5BE53 		add	r3, r7, #6080
 6138 2f8a 03F11703 		add	r3, r3, #23
 6139 2f8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6140 2f90 013B     		subs	r3, r3, #1
 6141 2f92 07F5BE52 		add	r2, r7, #6080
 6142 2f96 02F11702 		add	r2, r2, #23
 6143 2f9a 1370     		strb	r3, [r2]
 6144              	.L274:
 865:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length - i] = aux
 6145              		.loc 1 865 0 is_stmt 0 discriminator 1
 6146 2f9c 07F5BE53 		add	r3, r7, #6080
 6147 2fa0 03F11703 		add	r3, r3, #23
 6148 2fa4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6149 2fa6 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 143


 6150 2fa8 B2D1     		bne	.L275
 867:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 868:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6151              		.loc 1 868 0 is_stmt 1
 6152 2faa 07F5BE53 		add	r3, r7, #6080
 6153 2fae 03F11503 		add	r3, r3, #21
 6154 2fb2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6155 2fb4 07F11803 		add	r3, r7, #24
 6156 2fb8 103B     		subs	r3, r3, #16
 6157 2fba 1B68     		ldr	r3, [r3]
 6158 2fbc 1344     		add	r3, r3, r2
 6159 2fbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6160 2fc0 002B     		cmp	r3, #0
 6161 2fc2 3CD1     		bne	.L276
 869:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length] = NUM_MEN
 6162              		.loc 1 869 0
 6163 2fc4 07F5BE53 		add	r3, r7, #6080
 6164 2fc8 03F11503 		add	r3, r3, #21
 6165 2fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6166 2fce 3222     		movs	r2, #50
 6167 2fd0 02FB03F3 		mul	r3, r2, r3
 6168 2fd4 1A1D     		adds	r2, r3, #4
 6169 2fd6 07F5BE53 		add	r3, r7, #6080
 6170 2fda 03F11303 		add	r3, r3, #19
 6171 2fde 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6172 2fe0 07F5BE53 		add	r3, r7, #6080
 6173 2fe4 03F11503 		add	r3, r3, #21
 6174 2fe8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6175 2fea 07F11803 		add	r3, r7, #24
 6176 2fee 143B     		subs	r3, r3, #20
 6177 2ff0 1B68     		ldr	r3, [r3]
 6178 2ff2 0344     		add	r3, r3, r0
 6179 2ff4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6180 2ff6 03FB01F3 		mul	r3, r3, r1
 6181 2ffa 1A44     		add	r2, r2, r3
 6182 2ffc 07F5BE53 		add	r3, r7, #6080
 6183 3000 03F11203 		add	r3, r3, #18
 6184 3004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6185 3006 1A44     		add	r2, r2, r3
 6186 3008 07F5BE53 		add	r3, r7, #6080
 6187 300c 03F11403 		add	r3, r3, #20
 6188 3010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6189 3012 07F5BF51 		add	r1, r7, #6112
 6190 3016 01F11001 		add	r1, r1, #16
 6191 301a 0968     		ldr	r1, [r1]
 6192 301c 0B44     		add	r3, r3, r1
 6193 301e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6194 3020 07F15803 		add	r3, r7, #88
 6195 3024 043B     		subs	r3, r3, #4
 6196 3026 9954     		strb	r1, [r3, r2]
 870:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 6197              		.loc 1 870 0
 6198 3028 07F5BE53 		add	r3, r7, #6080
 6199 302c 03F11403 		add	r3, r3, #20
 6200 3030 1B78     		ldrb	r3, [r3]
 6201 3032 0133     		adds	r3, r3, #1
 6202 3034 07F5BE52 		add	r2, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 144


 6203 3038 02F11402 		add	r2, r2, #20
 6204 303c 1370     		strb	r3, [r2]
 6205              	.L276:
 871:..\src/command_processing.c ****         }      
 872:..\src/command_processing.c ****         
 873:..\src/command_processing.c ****         // Add struct index after an empty bit
 874:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 875:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6206              		.loc 1 875 0
 6207 303e 07F5BE53 		add	r3, r7, #6080
 6208 3042 03F11503 		add	r3, r3, #21
 6209 3046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6210 3048 07F11803 		add	r3, r7, #24
 6211 304c 103B     		subs	r3, r3, #16
 6212 304e 1B68     		ldr	r3, [r3]
 6213 3050 1344     		add	r3, r3, r2
 6214 3052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6215 3054 002B     		cmp	r3, #0
 6216 3056 32D1     		bne	.L277
 876:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length + 2] = NUM
 6217              		.loc 1 876 0
 6218 3058 07F5BE53 		add	r3, r7, #6080
 6219 305c 03F11503 		add	r3, r3, #21
 6220 3060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6221 3062 3222     		movs	r2, #50
 6222 3064 02FB03F3 		mul	r3, r2, r3
 6223 3068 1A1D     		adds	r2, r3, #4
 6224 306a 07F5BE53 		add	r3, r7, #6080
 6225 306e 03F11303 		add	r3, r3, #19
 6226 3072 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6227 3074 07F5BE53 		add	r3, r7, #6080
 6228 3078 03F11503 		add	r3, r3, #21
 6229 307c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6230 307e 07F11803 		add	r3, r7, #24
 6231 3082 143B     		subs	r3, r3, #20
 6232 3084 1B68     		ldr	r3, [r3]
 6233 3086 0344     		add	r3, r3, r0
 6234 3088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6235 308a 03FB01F3 		mul	r3, r3, r1
 6236 308e 1A44     		add	r2, r2, r3
 6237 3090 07F5BE53 		add	r3, r7, #6080
 6238 3094 03F11203 		add	r3, r3, #18
 6239 3098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6240 309a 1344     		add	r3, r3, r2
 6241 309c 9A1C     		adds	r2, r3, #2
 6242 309e 07F5BE53 		add	r3, r7, #6080
 6243 30a2 03F11503 		add	r3, r3, #21
 6244 30a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6245 30a8 07F11803 		add	r3, r7, #24
 6246 30ac 183B     		subs	r3, r3, #24
 6247 30ae 1B68     		ldr	r3, [r3]
 6248 30b0 0B44     		add	r3, r3, r1
 6249 30b2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6250 30b4 07F15803 		add	r3, r7, #88
 6251 30b8 043B     		subs	r3, r3, #4
 6252 30ba 9954     		strb	r1, [r3, r2]
 6253 30bc 31E0     		b	.L278
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 145


 6254              	.L277:
 877:..\src/command_processing.c ****         }
 878:..\src/command_processing.c ****         else {
 879:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length + 1] = NUM
 6255              		.loc 1 879 0
 6256 30be 07F5BE53 		add	r3, r7, #6080
 6257 30c2 03F11503 		add	r3, r3, #21
 6258 30c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6259 30c8 3222     		movs	r2, #50
 6260 30ca 02FB03F3 		mul	r3, r2, r3
 6261 30ce 1A1D     		adds	r2, r3, #4
 6262 30d0 07F5BE53 		add	r3, r7, #6080
 6263 30d4 03F11303 		add	r3, r3, #19
 6264 30d8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6265 30da 07F5BE53 		add	r3, r7, #6080
 6266 30de 03F11503 		add	r3, r3, #21
 6267 30e2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6268 30e4 07F11803 		add	r3, r7, #24
 6269 30e8 143B     		subs	r3, r3, #20
 6270 30ea 1B68     		ldr	r3, [r3]
 6271 30ec 0344     		add	r3, r3, r0
 6272 30ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6273 30f0 03FB01F3 		mul	r3, r3, r1
 6274 30f4 1A44     		add	r2, r2, r3
 6275 30f6 07F5BE53 		add	r3, r7, #6080
 6276 30fa 03F11203 		add	r3, r3, #18
 6277 30fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6278 3100 1344     		add	r3, r3, r2
 6279 3102 5A1C     		adds	r2, r3, #1
 6280 3104 07F5BE53 		add	r3, r7, #6080
 6281 3108 03F11503 		add	r3, r3, #21
 6282 310c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6283 310e 07F11803 		add	r3, r7, #24
 6284 3112 183B     		subs	r3, r3, #24
 6285 3114 1B68     		ldr	r3, [r3]
 6286 3116 0B44     		add	r3, r3, r1
 6287 3118 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6288 311a 07F15803 		add	r3, r7, #88
 6289 311e 043B     		subs	r3, r3, #4
 6290 3120 9954     		strb	r1, [r3, r2]
 6291              	.L278:
 409:..\src/command_processing.c ****         
 6292              		.loc 1 409 0 discriminator 2
 6293 3122 07F5BE53 		add	r3, r7, #6080
 6294 3126 03F11503 		add	r3, r3, #21
 6295 312a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6296 312c 0133     		adds	r3, r3, #1
 6297 312e 07F5BE52 		add	r2, r7, #6080
 6298 3132 02F11502 		add	r2, r2, #21
 6299 3136 1370     		strb	r3, [r2]
 6300              	.L74:
 409:..\src/command_processing.c ****         
 6301              		.loc 1 409 0 is_stmt 0 discriminator 1
 6302 3138 07F5BE53 		add	r3, r7, #6080
 6303 313c 03F11503 		add	r3, r3, #21
 6304 3140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6305 3142 522B     		cmp	r3, #82
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 146


 6306 3144 7CF6D3AF 		bls	.L279
 880:..\src/command_processing.c ****         }
 881:..\src/command_processing.c ****     }
 882:..\src/command_processing.c **** 
 883:..\src/command_processing.c ****     // Add menu
 884:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 6307              		.loc 1 884 0 is_stmt 1
 6308 3148 0023     		movs	r3, #0
 6309 314a 07F5BE52 		add	r2, r7, #6080
 6310 314e 02F11602 		add	r2, r2, #22
 6311 3152 1370     		strb	r3, [r2]
 6312 3154 72E0     		b	.L280
 6313              	.L283:
 885:..\src/command_processing.c ****         string_length = strlen((char*)MENU_STR[j]);
 6314              		.loc 1 885 0
 6315 3156 07F5BE53 		add	r3, r7, #6080
 6316 315a 03F11603 		add	r3, r3, #22
 6317 315e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6318 3160 9B00     		lsls	r3, r3, #2
 6319 3162 07F5BF52 		add	r2, r7, #6112
 6320 3166 02F11C02 		add	r2, r2, #28
 6321 316a 1268     		ldr	r2, [r2]
 6322 316c 1344     		add	r3, r3, r2
 6323 316e 1B68     		ldr	r3, [r3]
 6324 3170 1846     		mov	r0, r3
 6325 3172 FFF7FEFF 		bl	strlen
 6326 3176 0346     		mov	r3, r0
 6327 3178 07F5BE52 		add	r2, r7, #6080
 6328 317c 02F11202 		add	r2, r2, #18
 6329 3180 1370     		strb	r3, [r2]
 886:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 6330              		.loc 1 886 0
 6331 3182 07F5BE53 		add	r3, r7, #6080
 6332 3186 03F11203 		add	r3, r3, #18
 6333 318a 1B78     		ldrb	r3, [r3]
 6334 318c 07F5BE52 		add	r2, r7, #6080
 6335 3190 02F11702 		add	r2, r2, #23
 6336 3194 1370     		strb	r3, [r2]
 6337 3196 3FE0     		b	.L281
 6338              	.L282:
 887:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_length -
 6339              		.loc 1 887 0 discriminator 3
 6340 3198 07F5BE53 		add	r3, r7, #6080
 6341 319c 03F11603 		add	r3, r3, #22
 6342 31a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6343 31a2 9622     		movs	r2, #150
 6344 31a4 02FB03F3 		mul	r3, r2, r3
 6345 31a8 03F58153 		add	r3, r3, #4128
 6346 31ac 1833     		adds	r3, r3, #24
 6347 31ae 07F5BE52 		add	r2, r7, #6080
 6348 31b2 02F11202 		add	r2, r2, #18
 6349 31b6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6350 31b8 1A44     		add	r2, r2, r3
 6351 31ba 07F5BE53 		add	r3, r7, #6080
 6352 31be 03F11703 		add	r3, r3, #23
 6353 31c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6354 31c4 D21A     		subs	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 147


 6355 31c6 07F5BE53 		add	r3, r7, #6080
 6356 31ca 03F11603 		add	r3, r3, #22
 6357 31ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6358 31d0 9B00     		lsls	r3, r3, #2
 6359 31d2 07F5BF51 		add	r1, r7, #6112
 6360 31d6 01F11C01 		add	r1, r1, #28
 6361 31da 0968     		ldr	r1, [r1]
 6362 31dc 0B44     		add	r3, r3, r1
 6363 31de 1B68     		ldr	r3, [r3]
 6364 31e0 07F5BE51 		add	r1, r7, #6080
 6365 31e4 01F11201 		add	r1, r1, #18
 6366 31e8 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6367 31ea 07F5BE51 		add	r1, r7, #6080
 6368 31ee 01F11701 		add	r1, r1, #23
 6369 31f2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6370 31f4 411A     		subs	r1, r0, r1
 6371 31f6 0B44     		add	r3, r3, r1
 6372 31f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6373 31fa 07F15803 		add	r3, r7, #88
 6374 31fe 043B     		subs	r3, r3, #4
 6375 3200 9954     		strb	r1, [r3, r2]
 886:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 6376              		.loc 1 886 0 discriminator 3
 6377 3202 07F5BE53 		add	r3, r7, #6080
 6378 3206 03F11703 		add	r3, r3, #23
 6379 320a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6380 320c 013B     		subs	r3, r3, #1
 6381 320e 07F5BE52 		add	r2, r7, #6080
 6382 3212 02F11702 		add	r2, r2, #23
 6383 3216 1370     		strb	r3, [r2]
 6384              	.L281:
 886:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 6385              		.loc 1 886 0 is_stmt 0 discriminator 1
 6386 3218 07F5BE53 		add	r3, r7, #6080
 6387 321c 03F11703 		add	r3, r3, #23
 6388 3220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6389 3222 002B     		cmp	r3, #0
 6390 3224 B8D1     		bne	.L282
 884:..\src/command_processing.c ****         string_length = strlen((char*)MENU_STR[j]);
 6391              		.loc 1 884 0 is_stmt 1 discriminator 2
 6392 3226 07F5BE53 		add	r3, r7, #6080
 6393 322a 03F11603 		add	r3, r3, #22
 6394 322e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6395 3230 0133     		adds	r3, r3, #1
 6396 3232 07F5BE52 		add	r2, r7, #6080
 6397 3236 02F11602 		add	r2, r2, #22
 6398 323a 1370     		strb	r3, [r2]
 6399              	.L280:
 884:..\src/command_processing.c ****         string_length = strlen((char*)MENU_STR[j]);
 6400              		.loc 1 884 0 is_stmt 0 discriminator 1
 6401 323c 07F5BE53 		add	r3, r7, #6080
 6402 3240 03F11603 		add	r3, r3, #22
 6403 3244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6404 3246 0B2B     		cmp	r3, #11
 6405 3248 85D9     		bls	.L283
 888:..\src/command_processing.c ****     }
 889:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 148


 890:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 6406              		.loc 1 890 0 is_stmt 1
 6407 324a 07F5BE53 		add	r3, r7, #6080
 6408 324e 03F11003 		add	r3, r3, #16
 6409 3252 1B88     		ldrh	r3, [r3]
 6410 3254 5C1E     		subs	r4, r3, #1
 6411 3256 07F5BE53 		add	r3, r7, #6080
 6412 325a 03F11003 		add	r3, r3, #16
 6413 325e 1B88     		ldrh	r3, [r3]	@ movhi
 6414 3260 DBB2     		uxtb	r3, r3
 6415 3262 013B     		subs	r3, r3, #1
 6416 3264 DAB2     		uxtb	r2, r3
 6417 3266 07F15803 		add	r3, r7, #88
 6418 326a 043B     		subs	r3, r3, #4
 6419 326c 1146     		mov	r1, r2
 6420 326e 1846     		mov	r0, r3
 6421 3270 FFF7FEFF 		bl	LCRChecksum
 6422 3274 0346     		mov	r3, r0
 6423 3276 1A46     		mov	r2, r3
 6424 3278 07F15803 		add	r3, r7, #88
 6425 327c 043B     		subs	r3, r3, #4
 6426 327e 1A55     		strb	r2, [r3, r4]
 891:..\src/command_processing.c ****     commWrite(packet_data, packet_length);
 6427              		.loc 1 891 0
 6428 3280 07F5BE53 		add	r3, r7, #6080
 6429 3284 03F11003 		add	r3, r3, #16
 6430 3288 1A88     		ldrh	r2, [r3]
 6431 328a 07F15803 		add	r3, r7, #88
 6432 328e 043B     		subs	r3, r3, #4
 6433 3290 1146     		mov	r1, r2
 6434 3292 1846     		mov	r0, r3
 6435 3294 FFF7FEFF 		bl	commWrite
 892:..\src/command_processing.c **** }
 6436              		.loc 1 892 0
 6437 3298 00BF     		nop
 6438 329a 07F5BE57 		add	r7, r7, #6080
 6439 329e 1C37     		adds	r7, r7, #28
 6440              		.cfi_def_cfa_offset 20
 6441 32a0 BD46     		mov	sp, r7
 6442              		.cfi_def_cfa_register 13
 6443              		@ sp needed
 6444 32a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 6445              		.cfi_endproc
 6446              	.LFE67:
 6447              		.size	get_param_list, .-get_param_list
 6448              		.section	.rodata
 6449 0285 000000   		.align	2
 6450              	.LC130:
 6451 0288 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 6451      204E6F6E 
 6451      650A3120 
 6451      2D3E204C 
 6451      6F772028 
 6452 02b8 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6452      74657220 
 6452      72656164 
 6452      290A3220 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 149


 6452      2D3E2048 
 6453 02e8 62697420 		.ascii	"bit register read)\012\000"
 6453      72656769 
 6453      73746572 
 6453      20726561 
 6453      64290A00 
 6454              		.align	2
 6455              	.LC131:
 6456 02fc 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 6456      20466173 
 6456      743A7379 
 6456      6E322C20 
 6456      536C6F77 
 6457 032c 796E310A 		.ascii	"yn1\012\000"
 6457      00
 6458 0331 000000   		.align	2
 6459              	.LC132:
 6460 0334 30202D3E 		.ascii	"0 -> Fast:wrist,Slow:hand\0121 -> Slow:wrist,Fast:h"
 6460      20466173 
 6460      743A7772 
 6460      6973742C 
 6460      536C6F77 
 6461 0364 616E640A 		.ascii	"and\012\000"
 6461      00
 6462 0369 000000   		.align	2
 6463              	.LC133:
 6464 036c 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6464      20557362 
 6464      0A31202D 
 6464      3E204861 
 6464      6E646C65 
 6465 0397 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6465      20454D47 
 6465      20496E74 
 6465      65677261 
 6465      6C0A3420 
 6466 03c4 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6466      616E6365 
 6466      640A3620 
 6466      2D3E204A 
 6466      6F797374 
 6467 03f1 204E430A 		.ascii	" NC\012\000"
 6467      00
 6468 03f6 0000     		.align	2
 6469              	.LC134:
 6470 03f8 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6470      20506F73 
 6470      6974696F 
 6470      6E0A3120 
 6470      2D3E2050 
 6471 0422 6F736974 		.ascii	"osition and Current\012\000"
 6471      696F6E20 
 6471      616E6420 
 6471      43757272 
 6471      656E740A 
 6472 0437 00       		.align	2
 6473              	.LC135:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 150


 6474 0438 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6474      20446561 
 6474      63746976 
 6474      61746520 
 6474      5B4E4F5D 
 6475 0462 0000     		.align	2
 6476              	.LC136:
 6477 0464 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 6477      20526967 
 6477      68740A31 
 6477      202D3E20 
 6477      4C656674 
 6478 047a 0000     		.align	2
 6479              	.LC137:
 6480 047c 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6480      204F4646 
 6480      0A31202D 
 6480      3E204F4E 
 6480      0A546865 
 6481 04a3 00       		.align	2
 6482              	.LC138:
 6483 04a4 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6483      204E6F6E 
 6483      650A3120 
 6483      2D3E2053 
 6483      442F5254 
 6484 04d1 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6484      0A33202D 
 6484      3E204F74 
 6484      68657220 
 6484      5B4E2F41 
 6485 04fc 00       		.ascii	"\000"
 6486 04fd 000000   		.align	2
 6487              	.LC139:
 6488 0500 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> R01\012The "
 6488      2047656E 
 6488      65726963 
 6488      20757365 
 6488      720A3120 
 6489 052a 626F6172 		.ascii	"board will reset\012\000"
 6489      64207769 
 6489      6C6C2072 
 6489      65736574 
 6489      0A00
 6490              		.align	2
 6491              	.LC140:
 6492 053c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 6492      204D4333 
 6492      33383837 
 6492      20285374 
 6492      616E6461 
 6493 056c 290A3220 		.ascii	")\0122 -> ESC (Brushless)\012The board will reset\012"
 6493      2D3E2045 
 6493      53432028 
 6493      42727573 
 6493      686C6573 
 6494 0598 00       		.ascii	"\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 151


 6495 0599 000000   		.align	2
 6496              	.LC141:
 6497 059c 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6497      20534F46 
 6497      5448414E 
 6497      44205052 
 6497      4F0A3120 
 6498 05c9 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6498      4348414D 
 6498      42455253 
 6498      0A33202D 
 6498      3E204F54 
 6499 05f6 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6499      4D4F544F 
 6499      52530A54 
 6499      68652062 
 6499      6F617264 
 6500 0617 00       		.align	2
 6501              	.LC142:
 6502 0618 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6502      20436C6F 
 6502      73653A43 
 6502      572C204F 
 6502      70656E3A 
 6503 0648 00       		.ascii	"\000"
 6504 0649 000000   		.align	2
 6505              	.LC0:
 6506 064c 02       		.byte	2
 6507 064d 07       		.byte	7
 6508 064e 07       		.byte	7
 6509 064f 00       		.byte	0
 6510 0650 00       		.byte	0
 6511 0651 00       		.byte	0
 6512 0652 02       		.byte	2
 6513 0653 03       		.byte	3
 6514 0654 07       		.byte	7
 6515 0655 00       		.byte	0
 6516 0656 05       		.byte	5
 6517 0657 05       		.byte	5
 6518 0658 03       		.byte	3
 6519 0659 04       		.byte	4
 6520 065a 00       		.byte	0
 6521 065b 06       		.byte	6
 6522 065c 02       		.byte	2
 6523 065d 00       		.byte	0
 6524 065e 01       		.byte	1
 6525 065f 00       		.byte	0
 6526 0660 07       		.byte	7
 6527 0661 02       		.byte	2
 6528 0662 05       		.byte	5
 6529 0663 05       		.byte	5
 6530 0664 05       		.byte	5
 6531 0665 00       		.byte	0
 6532 0666 00       		.byte	0
 6533 0667 00       		.byte	0
 6534 0668 00       		.byte	0
 6535 0669 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 152


 6536 066a 00       		.byte	0
 6537 066b 02       		.byte	2
 6538 066c 00       		.byte	0
 6539 066d 02       		.byte	2
 6540 066e 00       		.byte	0
 6541 066f 09       		.byte	9
 6542 0670 02       		.byte	2
 6543 0671 00       		.byte	0
 6544 0672 02       		.byte	2
 6545 0673 00       		.byte	0
 6546 0674 02       		.byte	2
 6547 0675 01       		.byte	1
 6548 0676 00       		.byte	0
 6549 0677 07       		.byte	7
 6550 0678 07       		.byte	7
 6551 0679 00       		.byte	0
 6552 067a 00       		.byte	0
 6553 067b 00       		.byte	0
 6554 067c 02       		.byte	2
 6555 067d 03       		.byte	3
 6556 067e 07       		.byte	7
 6557 067f 00       		.byte	0
 6558 0680 05       		.byte	5
 6559 0681 05       		.byte	5
 6560 0682 03       		.byte	3
 6561 0683 00       		.byte	0
 6562 0684 01       		.byte	1
 6563 0685 00       		.byte	0
 6564 0686 07       		.byte	7
 6565 0687 02       		.byte	2
 6566 0688 00       		.byte	0
 6567 0689 02       		.byte	2
 6568 068a 00       		.byte	0
 6569 068b 02       		.byte	2
 6570 068c 01       		.byte	1
 6571 068d 02       		.byte	2
 6572 068e 02       		.byte	2
 6573 068f 00       		.byte	0
 6574 0690 02       		.byte	2
 6575 0691 02       		.byte	2
 6576 0692 00       		.byte	0
 6577 0693 04       		.byte	4
 6578 0694 03       		.byte	3
 6579 0695 04       		.byte	4
 6580 0696 00       		.byte	0
 6581 0697 00       		.byte	0
 6582 0698 00       		.byte	0
 6583 0699 00       		.byte	0
 6584 069a 00       		.byte	0
 6585 069b 02       		.byte	2
 6586 069c 05       		.byte	5
 6587 069d 07       		.byte	7
 6588 069e 07       		.byte	7
 6589 069f 00       		.align	2
 6590              	.LC1:
 6591 06a0 31202D20 		.ascii	"1 - Device ID:\000"
 6591      44657669 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 153


 6591      63652049 
 6591      443A00
 6592 06af 00       		.align	2
 6593              	.LC2:
 6594 06b0 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6594      506F7369 
 6594      74696F6E 
 6594      20504944 
 6594      205B502C 
 6595              		.align	2
 6596              	.LC3:
 6597 06cc 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 6597      43757272 
 6597      656E7420 
 6597      50494420 
 6597      5B502C20 
 6598 06e7 00       		.align	2
 6599              	.LC4:
 6600 06e8 34202D20 		.ascii	"4 - Startup Activation:\000"
 6600      53746172 
 6600      74757020 
 6600      41637469 
 6600      76617469 
 6601              		.align	2
 6602              	.LC5:
 6603 0700 35202D20 		.ascii	"5 - Input mode:\000"
 6603      496E7075 
 6603      74206D6F 
 6603      64653A00 
 6604              		.align	2
 6605              	.LC6:
 6606 0710 36202D20 		.ascii	"6 - Control mode:\000"
 6606      436F6E74 
 6606      726F6C20 
 6606      6D6F6465 
 6606      3A00
 6607 0722 0000     		.align	2
 6608              	.LC7:
 6609 0724 37202D20 		.ascii	"7 - Resolutions:\000"
 6609      5265736F 
 6609      6C757469 
 6609      6F6E733A 
 6609      00
 6610 0735 000000   		.align	2
 6611              	.LC8:
 6612 0738 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6612      4D656173 
 6612      7572656D 
 6612      656E7420 
 6612      4F666673 
 6613 0751 000000   		.align	2
 6614              	.LC9:
 6615 0754 39202D20 		.ascii	"9 - Multipliers:\000"
 6615      4D756C74 
 6615      69706C69 
 6615      6572733A 
 6615      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 154


 6616 0765 000000   		.align	2
 6617              	.LC10:
 6618 0768 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6618      20506F73 
 6618      2E206C69 
 6618      6D697420 
 6618      61637469 
 6619              		.align	2
 6620              	.LC11:
 6621 0780 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6621      20506F73 
 6621      2E206C69 
 6621      6D697473 
 6621      205B696E 
 6622 079d 000000   		.align	2
 6623              	.LC12:
 6624 07a0 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6624      204D6178 
 6624      20737465 
 6624      7073205B 
 6624      6E65672C 
 6625 07bb 00       		.align	2
 6626              	.LC13:
 6627 07bc 3133202D 		.ascii	"13 - Current limit:\000"
 6627      20437572 
 6627      72656E74 
 6627      206C696D 
 6627      69743A00 
 6628              		.align	2
 6629              	.LC14:
 6630 07d0 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6630      20454D47 
 6630      20746872 
 6630      6573686F 
 6630      6C64733A 
 6631 07e5 000000   		.align	2
 6632              	.LC15:
 6633 07e8 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6633      20454D47 
 6633      2063616C 
 6633      69627261 
 6633      74696F6E 
 6634 0809 000000   		.align	2
 6635              	.LC16:
 6636 080c 3136202D 		.ascii	"16 - EMG max values:\000"
 6636      20454D47 
 6636      206D6178 
 6636      2076616C 
 6636      7565733A 
 6637 0821 000000   		.align	2
 6638              	.LC17:
 6639 0824 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6639      20454D47 
 6639      206D6178 
 6639      20737065 
 6639      6564733A 
 6640 0839 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 155


 6641              	.LC18:
 6642 083c 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6642      20416273 
 6642      6F6C7574 
 6642      6520656E 
 6642      636F6465 
 6643              		.align	2
 6644              	.LC19:
 6645 085c 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6645      204D6F74 
 6645      6F722068 
 6645      616E646C 
 6645      65207261 
 6646 0875 000000   		.align	2
 6647              	.LC20:
 6648 0878 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6648      2050574D 
 6648      20726573 
 6648      63616C69 
 6648      6E673A00 
 6649              		.align	2
 6650              	.LC21:
 6651 088c 3231202D 		.ascii	"21 - Current lookup:\000"
 6651      20437572 
 6651      72656E74 
 6651      206C6F6F 
 6651      6B75703A 
 6652 08a1 000000   		.align	2
 6653              	.LC22:
 6654 08a4 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6654      20446174 
 6654      65206F66 
 6654      206D6169 
 6654      6E74656E 
 6655 08c6 0000     		.align	2
 6656              	.LC23:
 6657 08c8 3233202D 		.ascii	"23 - Rest position:\000"
 6657      20526573 
 6657      7420706F 
 6657      73697469 
 6657      6F6E3A00 
 6658              		.align	2
 6659              	.LC24:
 6660 08dc 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6660      20526573 
 6660      7420706F 
 6660      73697469 
 6660      6F6E2074 
 6661              		.align	2
 6662              	.LC25:
 6663 0900 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6663      20526573 
 6663      74207665 
 6663      6C20636C 
 6663      6F737572 
 6664 0923 00       		.align	2
 6665              	.LC26:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 156


 6666 0924 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6666      20526573 
 6666      7420706F 
 6666      73697469 
 6666      6F6E2065 
 6667              		.align	2
 6668              	.LC27:
 6669 0940 3237202D 		.ascii	"27 - EMG inversion:\000"
 6669      20454D47 
 6669      20696E76 
 6669      65727369 
 6669      6F6E3A00 
 6670              		.align	2
 6671              	.LC28:
 6672 0954 3238202D 		.ascii	"28 - Hand side:\000"
 6672      2048616E 
 6672      64207369 
 6672      64653A00 
 6673              		.align	2
 6674              	.LC29:
 6675 0964 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6675      20456E61 
 6675      626C6520 
 6675      494D5573 
 6675      3A00
 6676 0976 0000     		.align	2
 6677              	.LC30:
 6678 0978 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6678      20526561 
 6678      64204578 
 6678      70616E73 
 6678      696F6E20 
 6679 0992 0000     		.align	2
 6680              	.LC31:
 6681 0994 3331202D 		.ascii	"31 - Reset counters:\000"
 6681      20526573 
 6681      65742063 
 6681      6F756E74 
 6681      6572733A 
 6682 09a9 000000   		.align	2
 6683              	.LC32:
 6684 09ac 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6684      204C6173 
 6684      74206368 
 6684      65636B65 
 6684      64205469 
 6685 09d2 0000     		.align	2
 6686              	.LC33:
 6687 09d4 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6687      20535049 
 6687      20726561 
 6687      64206465 
 6687      6C617920 
 6688 09ef 00       		.align	2
 6689              	.LC34:
 6690 09f0 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6690      204F6E20 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 157


 6690      626F6172 
 6690      6420494D 
 6690      5520636F 
 6691 0a15 000000   		.align	2
 6692              	.LC35:
 6693 0a18 3335202D 		.ascii	"35 - User ID:\000"
 6693      20557365 
 6693      72204944 
 6693      3A00
 6694 0a26 0000     		.align	2
 6695              	.LC36:
 6696 0a28 3336202D 		.ascii	"36 - User code:\000"
 6696      20557365 
 6696      7220636F 
 6696      64653A00 
 6697              		.align	2
 6698              	.LC37:
 6699 0a38 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6699      20417373 
 6699      6F636961 
 6699      74656420 
 6699      656E636F 
 6700 0a56 0000     		.align	2
 6701              	.LC38:
 6702 0a58 3338202D 		.ascii	"38 - Driver type:\000"
 6702      20447269 
 6702      76657220 
 6702      74797065 
 6702      3A00
 6703 0a6a 0000     		.align	2
 6704              	.LC39:
 6705 0a6c 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6705      2050574D 
 6705      20726174 
 6705      65206C69 
 6705      6D697465 
 6706 0a83 00       		.align	2
 6707              	.LC40:
 6708 0a84 3430202D 		.ascii	"40 - Not reversible:\000"
 6708      204E6F74 
 6708      20726576 
 6708      65727369 
 6708      626C653A 
 6709 0a99 000000   		.align	2
 6710              	.LC41:
 6711 0a9c 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6711      20456E63 
 6711      20696478 
 6711      20757365 
 6711      6420666F 
 6712 0abb 00       		.align	2
 6713              	.LC42:
 6714 0abc 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6714      20476561 
 6714      72207061 
 6714      72616D73 
 6714      5B4E312C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 158


 6715 0ada 0000     		.align	2
 6716              	.LC43:
 6717 0adc 3433202D 		.ascii	"43 - Use second motor:\000"
 6717      20557365 
 6717      20736563 
 6717      6F6E6420 
 6717      6D6F746F 
 6718 0af3 00       		.align	2
 6719              	.LC44:
 6720 0af4 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6720      20506F73 
 6720      6974696F 
 6720      6E205049 
 6720      44205B50 
 6721 0b11 000000   		.align	2
 6722              	.LC45:
 6723 0b14 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6723      20437572 
 6723      72656E74 
 6723      20504944 
 6723      205B502C 
 6724              		.align	2
 6725              	.LC46:
 6726 0b30 3436202D 		.ascii	"46 - Startup Activation:\000"
 6726      20537461 
 6726      72747570 
 6726      20416374 
 6726      69766174 
 6727 0b49 000000   		.align	2
 6728              	.LC47:
 6729 0b4c 3437202D 		.ascii	"47 - Input mode:\000"
 6729      20496E70 
 6729      7574206D 
 6729      6F64653A 
 6729      00
 6730 0b5d 000000   		.align	2
 6731              	.LC48:
 6732 0b60 3438202D 		.ascii	"48 - Control mode:\000"
 6732      20436F6E 
 6732      74726F6C 
 6732      206D6F64 
 6732      653A00
 6733 0b73 00       		.align	2
 6734              	.LC49:
 6735 0b74 3439202D 		.ascii	"49 - Resolutions:\000"
 6735      20526573 
 6735      6F6C7574 
 6735      696F6E73 
 6735      3A00
 6736 0b86 0000     		.align	2
 6737              	.LC50:
 6738 0b88 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6738      204D6561 
 6738      73757265 
 6738      6D656E74 
 6738      204F6666 
 6739 0ba2 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 159


 6740              	.LC51:
 6741 0ba4 3531202D 		.ascii	"51 - Multipliers:\000"
 6741      204D756C 
 6741      7469706C 
 6741      69657273 
 6741      3A00
 6742 0bb6 0000     		.align	2
 6743              	.LC52:
 6744 0bb8 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6744      20506F73 
 6744      2E206C69 
 6744      6D697420 
 6744      61637469 
 6745              		.align	2
 6746              	.LC53:
 6747 0bd0 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6747      20506F73 
 6747      2E206C69 
 6747      6D697473 
 6747      205B696E 
 6748 0bed 000000   		.align	2
 6749              	.LC54:
 6750 0bf0 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6750      204D6178 
 6750      20737465 
 6750      7073205B 
 6750      6E65672C 
 6751 0c0b 00       		.align	2
 6752              	.LC55:
 6753 0c0c 3535202D 		.ascii	"55 - Current limit:\000"
 6753      20437572 
 6753      72656E74 
 6753      206C696D 
 6753      69743A00 
 6754              		.align	2
 6755              	.LC56:
 6756 0c20 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6756      20416273 
 6756      6F6C7574 
 6756      6520656E 
 6756      636F6465 
 6757              		.align	2
 6758              	.LC57:
 6759 0c40 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6759      204D6F74 
 6759      6F722068 
 6759      616E646C 
 6759      65207261 
 6760 0c59 000000   		.align	2
 6761              	.LC58:
 6762 0c5c 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6762      2050574D 
 6762      20726573 
 6762      63616C69 
 6762      6E673A00 
 6763              		.align	2
 6764              	.LC59:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 160


 6765 0c70 3539202D 		.ascii	"59 - Current lookup:\000"
 6765      20437572 
 6765      72656E74 
 6765      206C6F6F 
 6765      6B75703A 
 6766 0c85 000000   		.align	2
 6767              	.LC60:
 6768 0c88 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6768      20417373 
 6768      6F636961 
 6768      74656420 
 6768      656E636F 
 6769 0ca6 0000     		.align	2
 6770              	.LC61:
 6771 0ca8 3631202D 		.ascii	"61 - Driver type:\000"
 6771      20447269 
 6771      76657220 
 6771      74797065 
 6771      3A00
 6772 0cba 0000     		.align	2
 6773              	.LC62:
 6774 0cbc 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6774      2050574D 
 6774      20726174 
 6774      65206C69 
 6774      6D697465 
 6775 0cd3 00       		.align	2
 6776              	.LC63:
 6777 0cd4 3633202D 		.ascii	"63 - Not reversible:\000"
 6777      204E6F74 
 6777      20726576 
 6777      65727369 
 6777      626C653A 
 6778 0ce9 000000   		.align	2
 6779              	.LC64:
 6780 0cec 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6780      20456E63 
 6780      20696478 
 6780      20757365 
 6780      6420666F 
 6781 0d0b 00       		.align	2
 6782              	.LC65:
 6783 0d0c 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6783      20476561 
 6783      72207061 
 6783      72616D73 
 6783      5B4E312C 
 6784 0d2a 0000     		.align	2
 6785              	.LC66:
 6786 0d2c 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6786      20526561 
 6786      6420656E 
 6786      63207261 
 6786      77206C69 
 6787 0d46 0000     		.align	2
 6788              	.LC67:
 6789 0d48 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 161


 6789      20526561 
 6789      6420656E 
 6789      63207261 
 6789      77206C69 
 6790 0d62 0000     		.align	2
 6791              	.LC68:
 6792 0d64 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6792      20526561 
 6792      64206164 
 6792      64697469 
 6792      6F6E616C 
 6793 0d83 00       		.align	2
 6794              	.LC69:
 6795 0d84 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6795      20414443 
 6795      20636861 
 6795      6E6E656C 
 6795      205B312D 
 6796              		.align	2
 6797              	.LC70:
 6798 0d9c 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6798      20414443 
 6798      20636861 
 6798      6E6E656C 
 6798      205B372D 
 6799 0db5 000000   		.align	2
 6800              	.LC71:
 6801 0db8 3731202D 		.ascii	"71 - Record EMG on SD card:\000"
 6801      20526563 
 6801      6F726420 
 6801      454D4720 
 6801      6F6E2053 
 6802              		.align	2
 6803              	.LC72:
 6804 0dd4 3732202D 		.ascii	"72 - Joystick closure speed:\000"
 6804      204A6F79 
 6804      73746963 
 6804      6B20636C 
 6804      6F737572 
 6805 0df1 000000   		.align	2
 6806              	.LC73:
 6807 0df4 3733202D 		.ascii	"73 - Joystick threshold:\000"
 6807      204A6F79 
 6807      73746963 
 6807      6B207468 
 6807      72657368 
 6808 0e0d 000000   		.align	2
 6809              	.LC74:
 6810 0e10 3734202D 		.ascii	"74 - Joystick gains:\000"
 6810      204A6F79 
 6810      73746963 
 6810      6B206761 
 6810      696E733A 
 6811 0e25 000000   		.align	2
 6812              	.LC75:
 6813 0e28 3735202D 		.ascii	"75 - Device type:\000"
 6813      20446576 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 162


 6813      69636520 
 6813      74797065 
 6813      3A00
 6814 0e3a 0000     		.align	2
 6815              	.LC76:
 6816 0e3c 3736202D 		.ascii	"76 - EMG FSM act.mode:\000"
 6816      20454D47 
 6816      2046534D 
 6816      20616374 
 6816      2E6D6F64 
 6817 0e53 00       		.align	2
 6818              	.LC77:
 6819 0e54 3737202D 		.ascii	"77 - Air Chamber Feedback:\000"
 6819      20416972 
 6819      20436861 
 6819      6D626572 
 6819      20466565 
 6820 0e6f 00       		.align	2
 6821              	.LC78:
 6822 0e70 3738202D 		.ascii	"78 - Vibrotactile Feedback:\000"
 6822      20566962 
 6822      726F7461 
 6822      6374696C 
 6822      65204665 
 6823              		.align	2
 6824              	.LC79:
 6825 0e8c 3739202D 		.ascii	"79 - Master Mode:\000"
 6825      204D6173 
 6825      74657220 
 6825      4D6F6465 
 6825      3A00
 6826 0e9e 0000     		.align	2
 6827              	.LC80:
 6828 0ea0 3830202D 		.ascii	"80 - Slave ID:\000"
 6828      20536C61 
 6828      76652049 
 6828      443A00
 6829 0eaf 00       		.align	2
 6830              	.LC81:
 6831 0eb0 3831202D 		.ascii	"81 - Maximum slave residual current:\000"
 6831      204D6178 
 6831      696D756D 
 6831      20736C61 
 6831      76652072 
 6832 0ed5 000000   		.align	2
 6833              	.LC82:
 6834 0ed8 3832202D 		.ascii	"82 - Maximum pressure feedback (kPa):\000"
 6834      204D6178 
 6834      696D756D 
 6834      20707265 
 6834      73737572 
 6835 0efe 0000     		.align	2
 6836              	.LC83:
 6837 0f00 3833202D 		.ascii	"83 - Proportional pressure error gain:\000"
 6837      2050726F 
 6837      706F7274 
 6837      696F6E61 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 163


 6837      6C207072 
 6838 0f27 00       		.align	2
 6839              	.LC129:
 6840 0f28 A0060000 		.word	.LC1
 6841 0f2c B0060000 		.word	.LC2
 6842 0f30 CC060000 		.word	.LC3
 6843 0f34 E8060000 		.word	.LC4
 6844 0f38 00070000 		.word	.LC5
 6845 0f3c 10070000 		.word	.LC6
 6846 0f40 24070000 		.word	.LC7
 6847 0f44 38070000 		.word	.LC8
 6848 0f48 54070000 		.word	.LC9
 6849 0f4c 68070000 		.word	.LC10
 6850 0f50 80070000 		.word	.LC11
 6851 0f54 A0070000 		.word	.LC12
 6852 0f58 BC070000 		.word	.LC13
 6853 0f5c D0070000 		.word	.LC14
 6854 0f60 E8070000 		.word	.LC15
 6855 0f64 0C080000 		.word	.LC16
 6856 0f68 24080000 		.word	.LC17
 6857 0f6c 3C080000 		.word	.LC18
 6858 0f70 5C080000 		.word	.LC19
 6859 0f74 78080000 		.word	.LC20
 6860 0f78 8C080000 		.word	.LC21
 6861 0f7c A4080000 		.word	.LC22
 6862 0f80 C8080000 		.word	.LC23
 6863 0f84 DC080000 		.word	.LC24
 6864 0f88 00090000 		.word	.LC25
 6865 0f8c 24090000 		.word	.LC26
 6866 0f90 40090000 		.word	.LC27
 6867 0f94 54090000 		.word	.LC28
 6868 0f98 64090000 		.word	.LC29
 6869 0f9c 78090000 		.word	.LC30
 6870 0fa0 94090000 		.word	.LC31
 6871 0fa4 AC090000 		.word	.LC32
 6872 0fa8 D4090000 		.word	.LC33
 6873 0fac F0090000 		.word	.LC34
 6874 0fb0 180A0000 		.word	.LC35
 6875 0fb4 280A0000 		.word	.LC36
 6876 0fb8 380A0000 		.word	.LC37
 6877 0fbc 580A0000 		.word	.LC38
 6878 0fc0 6C0A0000 		.word	.LC39
 6879 0fc4 840A0000 		.word	.LC40
 6880 0fc8 9C0A0000 		.word	.LC41
 6881 0fcc BC0A0000 		.word	.LC42
 6882 0fd0 DC0A0000 		.word	.LC43
 6883 0fd4 F40A0000 		.word	.LC44
 6884 0fd8 140B0000 		.word	.LC45
 6885 0fdc 300B0000 		.word	.LC46
 6886 0fe0 4C0B0000 		.word	.LC47
 6887 0fe4 600B0000 		.word	.LC48
 6888 0fe8 740B0000 		.word	.LC49
 6889 0fec 880B0000 		.word	.LC50
 6890 0ff0 A40B0000 		.word	.LC51
 6891 0ff4 B80B0000 		.word	.LC52
 6892 0ff8 D00B0000 		.word	.LC53
 6893 0ffc F00B0000 		.word	.LC54
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 164


 6894 1000 0C0C0000 		.word	.LC55
 6895 1004 200C0000 		.word	.LC56
 6896 1008 400C0000 		.word	.LC57
 6897 100c 5C0C0000 		.word	.LC58
 6898 1010 700C0000 		.word	.LC59
 6899 1014 880C0000 		.word	.LC60
 6900 1018 A80C0000 		.word	.LC61
 6901 101c BC0C0000 		.word	.LC62
 6902 1020 D40C0000 		.word	.LC63
 6903 1024 EC0C0000 		.word	.LC64
 6904 1028 0C0D0000 		.word	.LC65
 6905 102c 2C0D0000 		.word	.LC66
 6906 1030 480D0000 		.word	.LC67
 6907 1034 640D0000 		.word	.LC68
 6908 1038 840D0000 		.word	.LC69
 6909 103c 9C0D0000 		.word	.LC70
 6910 1040 B80D0000 		.word	.LC71
 6911 1044 D40D0000 		.word	.LC72
 6912 1048 F40D0000 		.word	.LC73
 6913 104c 100E0000 		.word	.LC74
 6914 1050 280E0000 		.word	.LC75
 6915 1054 3C0E0000 		.word	.LC76
 6916 1058 540E0000 		.word	.LC77
 6917 105c 700E0000 		.word	.LC78
 6918 1060 8C0E0000 		.word	.LC79
 6919 1064 A00E0000 		.word	.LC80
 6920 1068 B00E0000 		.word	.LC81
 6921 106c D80E0000 		.word	.LC82
 6922 1070 000F0000 		.word	.LC83
 6923              		.align	2
 6924              	.LC85:
 6925 1074 03       		.byte	3
 6926 1075 01       		.byte	1
 6927 1076 02       		.byte	2
 6928 1077 03       		.byte	3
 6929 1078 03       		.byte	3
 6930 1079 03       		.byte	3
 6931 107a 03       		.byte	3
 6932 107b 03       		.byte	3
 6933 107c 03       		.byte	3
 6934 107d 04       		.byte	4
 6935 107e 05       		.byte	5
 6936 107f 06       		.byte	6
 6937 1080 03       		.byte	3
 6938 1081 07       		.byte	7
 6939 1082 08       		.byte	8
 6940 1083 09       		.byte	9
 6941 1084 03       		.byte	3
 6942 1085 05       		.byte	5
 6943 1086 03       		.byte	3
 6944 1087 01       		.byte	1
 6945 1088 02       		.byte	2
 6946 1089 03       		.byte	3
 6947 108a 03       		.byte	3
 6948 108b 03       		.byte	3
 6949 108c 09       		.byte	9
 6950 108d 03       		.byte	3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 165


 6951 108e 05       		.byte	5
 6952 108f 03       		.byte	3
 6953 1090 0A       		.byte	10
 6954 1091 03       		.byte	3
 6955 1092 03       		.byte	3
 6956 1093 03       		.byte	3
 6957 1094 03       		.byte	3
 6958 1095 000000   		.align	2
 6959              	.LC86:
 6960 1098 02       		.byte	2
 6961 1099 03       		.byte	3
 6962 109a 08       		.byte	8
 6963 109b 0B       		.byte	11
 6964 109c 17       		.byte	23
 6965 109d 2C       		.byte	44
 6966 109e 2D       		.byte	45
 6967 109f 32       		.byte	50
 6968 10a0 35       		.byte	53
 6969 10a1 000000   		.align	2
 6970              	.LC87:
 6971 10a4 02       		.byte	2
 6972 10a5 03       		.byte	3
 6973 10a6 05       		.byte	5
 6974 10a7 08       		.byte	8
 6975 10a8 0B       		.byte	11
 6976 10a9 17       		.byte	23
 6977 10aa 18       		.byte	24
 6978 10ab 1C       		.byte	28
 6979 10ac 1F       		.byte	31
 6980 10ad 20       		.byte	32
 6981 10ae 26       		.byte	38
 6982 10af 2C       		.byte	44
 6983 10b0 2D       		.byte	45
 6984 10b1 2F       		.byte	47
 6985 10b2 32       		.byte	50
 6986 10b3 35       		.byte	53
 6987 10b4 3D       		.byte	61
 6988 10b5 4B       		.byte	75
 6989              		.section	.text.manage_param_list,"ax",%progbits
 6990              		.align	2
 6991              		.global	manage_param_list
 6992              		.thumb
 6993              		.thumb_func
 6994              		.type	manage_param_list, %function
 6995              	manage_param_list:
 6996              	.LFB68:
 893:..\src/command_processing.c **** 
 894:..\src/command_processing.c **** //==============================================================================
 895:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 896:..\src/command_processing.c **** //==============================================================================
 897:..\src/command_processing.c **** 
 898:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6997              		.loc 1 898 0
 6998              		.cfi_startproc
 6999              		@ args = 0, pretend = 0, frame = 1416
 7000              		@ frame_needed = 1, uses_anonymous_args = 0
 7001 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 166


 7002              		.cfi_def_cfa_offset 20
 7003              		.cfi_offset 4, -20
 7004              		.cfi_offset 5, -16
 7005              		.cfi_offset 6, -12
 7006              		.cfi_offset 7, -8
 7007              		.cfi_offset 14, -4
 7008 0002 ADF29C5D 		subw	sp, sp, #1436
 7009              		.cfi_def_cfa_offset 1456
 7010 0006 04AF     		add	r7, sp, #16
 7011              		.cfi_def_cfa 7, 1440
 7012 0008 0246     		mov	r2, r0
 7013 000a BB1D     		adds	r3, r7, #6
 7014 000c 1A80     		strh	r2, [r3]	@ movhi
 899:..\src/command_processing.c ****     uint8 CYDATA i, j;
 900:..\src/command_processing.c ****     uint8 CYDATA sod;
 901:..\src/command_processing.c ****     uint8 PARAM_IDX;
 902:..\src/command_processing.c ****     int16 aux_int16;
 903:..\src/command_processing.c ****     uint16 aux_uint16;
 904:..\src/command_processing.c ****     int32 aux_int32;
 905:..\src/command_processing.c ****     uint32 aux_uint32;
 906:..\src/command_processing.c ****     float aux_float;
 907:..\src/command_processing.c ****  
 908:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 7015              		.loc 1 908 0
 7016 000e 0023     		movs	r3, #0
 7017 0010 87F87D35 		strb	r3, [r7, #1405]
 909:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 7018              		.loc 1 909 0
 7019 0014 0123     		movs	r3, #1
 7020 0016 87F87C35 		strb	r3, [r7, #1404]
 910:..\src/command_processing.c ****     
 911:..\src/command_processing.c ****     // Arrays
 912:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 7021              		.loc 1 912 0
 7022 001a 054B     		ldr	r3, .L377
 7023 001c C7F88035 		str	r3, [r7, #1408]
 913:..\src/command_processing.c ****     
 914:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 7024              		.loc 1 914 0
 7025 0020 BB1D     		adds	r3, r7, #6
 7026 0022 1B88     		ldrh	r3, [r3]
 7027 0024 002B     		cmp	r3, #0
 7028 0026 07D0     		beq	.L313
 915:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 7029              		.loc 1 915 0
 7030 0028 024B     		ldr	r3, .L377+4
 7031 002a C7F88035 		str	r3, [r7, #1408]
 7032 002e 03E0     		b	.L378
 7033              	.L379:
 7034              		.align	2
 7035              	.L377:
 7036 0030 00000000 		.word	c_mem
 7037 0034 00000000 		.word	g_mem
 7038              	.L378:
 7039              	.L313:
 916:..\src/command_processing.c ****     }
 917:..\src/command_processing.c ****  
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 167


 918:..\src/command_processing.c ****     
 919:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 920:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7040              		.loc 1 921 0
 7041 0038 D7F88035 		ldr	r3, [r7, #1408]
 7042 003c 03F1A002 		add	r2, r3, #160
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7043              		.loc 1 920 0
 7044 0040 07F21C43 		addw	r3, r7, #1052
 7045 0044 1A60     		str	r2, [r3]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 7046              		.loc 1 922 0
 7047 0046 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7048 004a 1346     		mov	r3, r2
 7049 004c DB00     		lsls	r3, r3, #3
 7050 004e 9B1A     		subs	r3, r3, r2
 7051 0050 1B01     		lsls	r3, r3, #4
 7052 0052 B033     		adds	r3, r3, #176
 7053 0054 D7F88025 		ldr	r2, [r7, #1408]
 7054 0058 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7055              		.loc 1 920 0
 7056 005a 07F21C43 		addw	r3, r7, #1052
 7057 005e 5A60     		str	r2, [r3, #4]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 7058              		.loc 1 923 0
 7059 0060 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7060 0064 1346     		mov	r3, r2
 7061 0066 DB00     		lsls	r3, r3, #3
 7062 0068 9B1A     		subs	r3, r3, r2
 7063 006a 1B01     		lsls	r3, r3, #4
 7064 006c B833     		adds	r3, r3, #184
 7065 006e D7F88025 		ldr	r2, [r7, #1408]
 7066 0072 1344     		add	r3, r3, r2
 7067 0074 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7068              		.loc 1 920 0
 7069 0076 07F21C43 		addw	r3, r7, #1052
 7070 007a 9A60     		str	r2, [r3, #8]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 7071              		.loc 1 924 0
 7072 007c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7073 0080 1346     		mov	r3, r2
 7074 0082 DB00     		lsls	r3, r3, #3
 7075 0084 9B1A     		subs	r3, r3, r2
 7076 0086 1B01     		lsls	r3, r3, #4
 7077 0088 E033     		adds	r3, r3, #224
 7078 008a D7F88025 		ldr	r2, [r7, #1408]
 7079 008e 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7080              		.loc 1 920 0
 7081 0090 07F21C43 		addw	r3, r7, #1052
 7082 0094 DA60     		str	r2, [r3, #12]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 7083              		.loc 1 925 0
 7084 0096 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 168


 7085 009a 1346     		mov	r3, r2
 7086 009c DB00     		lsls	r3, r3, #3
 7087 009e 9B1A     		subs	r3, r3, r2
 7088 00a0 1B01     		lsls	r3, r3, #4
 7089 00a2 03F58473 		add	r3, r3, #264
 7090 00a6 D7F88025 		ldr	r2, [r7, #1408]
 7091 00aa 1344     		add	r3, r3, r2
 7092 00ac 9A1D     		adds	r2, r3, #6
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7093              		.loc 1 920 0
 7094 00ae 07F21C43 		addw	r3, r7, #1052
 7095 00b2 1A61     		str	r2, [r3, #16]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 7096              		.loc 1 926 0
 7097 00b4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7098 00b8 1346     		mov	r3, r2
 7099 00ba DB00     		lsls	r3, r3, #3
 7100 00bc 9B1A     		subs	r3, r3, r2
 7101 00be 1B01     		lsls	r3, r3, #4
 7102 00c0 03F58473 		add	r3, r3, #264
 7103 00c4 D7F88025 		ldr	r2, [r7, #1408]
 7104 00c8 1344     		add	r3, r3, r2
 7105 00ca DA1D     		adds	r2, r3, #7
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7106              		.loc 1 920 0
 7107 00cc 07F21C43 		addw	r3, r7, #1052
 7108 00d0 5A61     		str	r2, [r3, #20]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 7109              		.loc 1 927 0
 7110 00d2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7111 00d6 D7F88015 		ldr	r1, [r7, #1408]
 7112 00da 1346     		mov	r3, r2
 7113 00dc DB00     		lsls	r3, r3, #3
 7114 00de 9B1A     		subs	r3, r3, r2
 7115 00e0 1B01     		lsls	r3, r3, #4
 7116 00e2 0B44     		add	r3, r3, r1
 7117 00e4 03F58873 		add	r3, r3, #272
 7118 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7119 00ea 1A46     		mov	r2, r3
 7120 00ec 1346     		mov	r3, r2
 7121 00ee 5B00     		lsls	r3, r3, #1
 7122 00f0 1344     		add	r3, r3, r2
 7123 00f2 1B01     		lsls	r3, r3, #4
 7124 00f4 03F5C873 		add	r3, r3, #400
 7125 00f8 D7F88025 		ldr	r2, [r7, #1408]
 7126 00fc 1344     		add	r3, r3, r2
 7127 00fe 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7128              		.loc 1 920 0
 7129 0100 07F21C43 		addw	r3, r7, #1052
 7130 0104 9A61     		str	r2, [r3, #24]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 7131              		.loc 1 928 0
 7132 0106 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7133 010a D7F88015 		ldr	r1, [r7, #1408]
 7134 010e 1346     		mov	r3, r2
 7135 0110 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 169


 7136 0112 9B1A     		subs	r3, r3, r2
 7137 0114 1B01     		lsls	r3, r3, #4
 7138 0116 0B44     		add	r3, r3, r1
 7139 0118 03F58873 		add	r3, r3, #272
 7140 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7141 011e 1A46     		mov	r2, r3
 7142 0120 1346     		mov	r3, r2
 7143 0122 5B00     		lsls	r3, r3, #1
 7144 0124 1344     		add	r3, r3, r2
 7145 0126 1B01     		lsls	r3, r3, #4
 7146 0128 03F5CC73 		add	r3, r3, #408
 7147 012c D7F88025 		ldr	r2, [r7, #1408]
 7148 0130 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7149              		.loc 1 920 0
 7150 0132 07F21C43 		addw	r3, r7, #1052
 7151 0136 DA61     		str	r2, [r3, #28]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 7152              		.loc 1 929 0
 7153 0138 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7154 013c D7F88015 		ldr	r1, [r7, #1408]
 7155 0140 1346     		mov	r3, r2
 7156 0142 DB00     		lsls	r3, r3, #3
 7157 0144 9B1A     		subs	r3, r3, r2
 7158 0146 1B01     		lsls	r3, r3, #4
 7159 0148 0B44     		add	r3, r3, r1
 7160 014a 03F58873 		add	r3, r3, #272
 7161 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7162 0150 1A46     		mov	r2, r3
 7163 0152 1346     		mov	r3, r2
 7164 0154 5B00     		lsls	r3, r3, #1
 7165 0156 1344     		add	r3, r3, r2
 7166 0158 1B01     		lsls	r3, r3, #4
 7167 015a 03F5D073 		add	r3, r3, #416
 7168 015e D7F88025 		ldr	r2, [r7, #1408]
 7169 0162 1344     		add	r3, r3, r2
 7170 0164 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7171              		.loc 1 920 0
 7172 0166 07F21C43 		addw	r3, r7, #1052
 7173 016a 1A62     		str	r2, [r3, #32]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 7174              		.loc 1 930 0
 7175 016c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7176 0170 1346     		mov	r3, r2
 7177 0172 DB00     		lsls	r3, r3, #3
 7178 0174 9B1A     		subs	r3, r3, r2
 7179 0176 1B01     		lsls	r3, r3, #4
 7180 0178 E033     		adds	r3, r3, #224
 7181 017a D7F88025 		ldr	r2, [r7, #1408]
 7182 017e 1344     		add	r3, r3, r2
 7183 0180 DA1C     		adds	r2, r3, #3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7184              		.loc 1 920 0
 7185 0182 07F21C43 		addw	r3, r7, #1052
 7186 0186 5A62     		str	r2, [r3, #36]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 170


 7187              		.loc 1 931 0
 7188 0188 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7189 018c 1346     		mov	r3, r2
 7190 018e DB00     		lsls	r3, r3, #3
 7191 0190 9B1A     		subs	r3, r3, r2
 7192 0192 1B01     		lsls	r3, r3, #4
 7193 0194 E033     		adds	r3, r3, #224
 7194 0196 D7F88025 		ldr	r2, [r7, #1408]
 7195 019a 1344     		add	r3, r3, r2
 7196 019c 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7197              		.loc 1 920 0
 7198 019e 07F21C43 		addw	r3, r7, #1052
 7199 01a2 9A62     		str	r2, [r3, #40]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 7200              		.loc 1 932 0
 7201 01a4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7202 01a8 1346     		mov	r3, r2
 7203 01aa DB00     		lsls	r3, r3, #3
 7204 01ac 9B1A     		subs	r3, r3, r2
 7205 01ae 1B01     		lsls	r3, r3, #4
 7206 01b0 E833     		adds	r3, r3, #232
 7207 01b2 D7F88025 		ldr	r2, [r7, #1408]
 7208 01b6 1344     		add	r3, r3, r2
 7209 01b8 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7210              		.loc 1 920 0
 7211 01ba 07F21C43 		addw	r3, r7, #1052
 7212 01be DA62     		str	r2, [r3, #44]
 933:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 7213              		.loc 1 933 0
 7214 01c0 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7215 01c4 1346     		mov	r3, r2
 7216 01c6 DB00     		lsls	r3, r3, #3
 7217 01c8 9B1A     		subs	r3, r3, r2
 7218 01ca 1B01     		lsls	r3, r3, #4
 7219 01cc 03F58473 		add	r3, r3, #264
 7220 01d0 D7F88025 		ldr	r2, [r7, #1408]
 7221 01d4 1344     		add	r3, r3, r2
 7222 01d6 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7223              		.loc 1 920 0
 7224 01d8 07F21C43 		addw	r3, r7, #1052
 7225 01dc 1A63     		str	r2, [r3, #48]
 934:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 7226              		.loc 1 934 0
 7227 01de D7F88035 		ldr	r3, [r7, #1408]
 7228 01e2 03F5F872 		add	r2, r3, #496
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7229              		.loc 1 920 0
 7230 01e6 07F21C43 		addw	r3, r7, #1052
 7231 01ea 5A63     		str	r2, [r3, #52]
 935:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 7232              		.loc 1 935 0
 7233 01ec D7F88035 		ldr	r3, [r7, #1408]
 7234 01f0 03F5FF72 		add	r2, r3, #510
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 171


 7235              		.loc 1 920 0
 7236 01f4 07F21C43 		addw	r3, r7, #1052
 7237 01f8 9A63     		str	r2, [r3, #56]
 936:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 7238              		.loc 1 936 0
 7239 01fa D7F88035 		ldr	r3, [r7, #1408]
 7240 01fe 03F5FA72 		add	r2, r3, #500
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7241              		.loc 1 920 0
 7242 0202 07F21C43 		addw	r3, r7, #1052
 7243 0206 DA63     		str	r2, [r3, #60]
 937:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 7244              		.loc 1 937 0
 7245 0208 D7F88035 		ldr	r3, [r7, #1408]
 7246 020c 03F5FE72 		add	r2, r3, #508
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7247              		.loc 1 920 0
 7248 0210 07F21C43 		addw	r3, r7, #1052
 7249 0214 1A64     		str	r2, [r3, #64]
 938:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 7250              		.loc 1 938 0
 7251 0216 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7252 021a D7F88015 		ldr	r1, [r7, #1408]
 7253 021e 1346     		mov	r3, r2
 7254 0220 DB00     		lsls	r3, r3, #3
 7255 0222 9B1A     		subs	r3, r3, r2
 7256 0224 1B01     		lsls	r3, r3, #4
 7257 0226 0B44     		add	r3, r3, r1
 7258 0228 03F58873 		add	r3, r3, #272
 7259 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7260 022e 1A46     		mov	r2, r3
 7261 0230 1346     		mov	r3, r2
 7262 0232 5B00     		lsls	r3, r3, #1
 7263 0234 1344     		add	r3, r3, r2
 7264 0236 1B01     		lsls	r3, r3, #4
 7265 0238 03F5D873 		add	r3, r3, #432
 7266 023c D7F88025 		ldr	r2, [r7, #1408]
 7267 0240 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7268              		.loc 1 920 0
 7269 0242 07F21C43 		addw	r3, r7, #1052
 7270 0246 5A64     		str	r2, [r3, #68]
 939:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 7271              		.loc 1 939 0
 7272 0248 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7273 024c D7F88015 		ldr	r1, [r7, #1408]
 7274 0250 1346     		mov	r3, r2
 7275 0252 DB00     		lsls	r3, r3, #3
 7276 0254 9B1A     		subs	r3, r3, r2
 7277 0256 1B01     		lsls	r3, r3, #4
 7278 0258 0B44     		add	r3, r3, r1
 7279 025a 03F58873 		add	r3, r3, #272
 7280 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7281 0260 1A46     		mov	r2, r3
 7282 0262 1346     		mov	r3, r2
 7283 0264 5B00     		lsls	r3, r3, #1
 7284 0266 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 172


 7285 0268 1B01     		lsls	r3, r3, #4
 7286 026a 03F5D873 		add	r3, r3, #432
 7287 026e D7F88025 		ldr	r2, [r7, #1408]
 7288 0272 1344     		add	r3, r3, r2
 7289 0274 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7290              		.loc 1 920 0
 7291 0276 07F21C43 		addw	r3, r7, #1052
 7292 027a 9A64     		str	r2, [r3, #72]
 940:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 7293              		.loc 1 940 0
 7294 027c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7295 0280 1346     		mov	r3, r2
 7296 0282 DB00     		lsls	r3, r3, #3
 7297 0284 9B1A     		subs	r3, r3, r2
 7298 0286 1B01     		lsls	r3, r3, #4
 7299 0288 E033     		adds	r3, r3, #224
 7300 028a D7F88025 		ldr	r2, [r7, #1408]
 7301 028e 1344     		add	r3, r3, r2
 7302 0290 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7303              		.loc 1 920 0
 7304 0292 07F21C43 		addw	r3, r7, #1052
 7305 0296 DA64     		str	r2, [r3, #76]
 941:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 7306              		.loc 1 941 0
 7307 0298 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7308 029c 1346     		mov	r3, r2
 7309 029e DB00     		lsls	r3, r3, #3
 7310 02a0 9B1A     		subs	r3, r3, r2
 7311 02a2 1B01     		lsls	r3, r3, #4
 7312 02a4 F033     		adds	r3, r3, #240
 7313 02a6 D7F88025 		ldr	r2, [r7, #1408]
 7314 02aa 1344     		add	r3, r3, r2
 7315 02ac 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7316              		.loc 1 920 0
 7317 02ae 07F21C43 		addw	r3, r7, #1052
 7318 02b2 1A65     		str	r2, [r3, #80]
 942:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 7319              		.loc 1 942 0
 7320 02b4 D7F88035 		ldr	r3, [r7, #1408]
 7321 02b8 03F1A102 		add	r2, r3, #161
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7322              		.loc 1 920 0
 7323 02bc 07F21C43 		addw	r3, r7, #1052
 7324 02c0 5A65     		str	r2, [r3, #84]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 7325              		.loc 1 943 0
 7326 02c2 D7F88035 		ldr	r3, [r7, #1408]
 7327 02c6 03F52872 		add	r2, r3, #672
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7328              		.loc 1 920 0
 7329 02ca 07F21C43 		addw	r3, r7, #1052
 7330 02ce 9A65     		str	r2, [r3, #88]
 944:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 7331              		.loc 1 944 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 173


 7332 02d0 D7F88035 		ldr	r3, [r7, #1408]
 7333 02d4 03F52972 		add	r2, r3, #676
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7334              		.loc 1 920 0
 7335 02d8 07F21C43 		addw	r3, r7, #1052
 7336 02dc DA65     		str	r2, [r3, #92]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 7337              		.loc 1 945 0
 7338 02de D7F88035 		ldr	r3, [r7, #1408]
 7339 02e2 03F52A72 		add	r2, r3, #680
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7340              		.loc 1 920 0
 7341 02e6 07F21C43 		addw	r3, r7, #1052
 7342 02ea 1A66     		str	r2, [r3, #96]
 946:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 7343              		.loc 1 946 0
 7344 02ec D7F88035 		ldr	r3, [r7, #1408]
 7345 02f0 03F52B72 		add	r2, r3, #684
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7346              		.loc 1 920 0
 7347 02f4 07F21C43 		addw	r3, r7, #1052
 7348 02f8 5A66     		str	r2, [r3, #100]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 7349              		.loc 1 947 0
 7350 02fa D7F88035 		ldr	r3, [r7, #1408]
 7351 02fe 03F2FF12 		addw	r2, r3, #511
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7352              		.loc 1 920 0
 7353 0302 07F21C43 		addw	r3, r7, #1052
 7354 0306 9A66     		str	r2, [r3, #104]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7355              		.loc 1 948 0
 7356 0308 D7F88035 		ldr	r3, [r7, #1408]
 7357 030c 03F1A702 		add	r2, r3, #167
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7358              		.loc 1 920 0
 7359 0310 07F21C43 		addw	r3, r7, #1052
 7360 0314 DA66     		str	r2, [r3, #108]
 949:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 7361              		.loc 1 949 0
 7362 0316 D7F88035 		ldr	r3, [r7, #1408]
 7363 031a 03F50072 		add	r2, r3, #512
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7364              		.loc 1 920 0
 7365 031e 07F21C43 		addw	r3, r7, #1052
 7366 0322 1A67     		str	r2, [r3, #112]
 950:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 7367              		.loc 1 950 0
 7368 0324 D7F88035 		ldr	r3, [r7, #1408]
 7369 0328 03F22622 		addw	r2, r3, #550
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7370              		.loc 1 920 0
 7371 032c 07F21C43 		addw	r3, r7, #1052
 7372 0330 5A67     		str	r2, [r3, #116]
 951:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 7373              		.loc 1 951 0
 7374 0332 D7F88035 		ldr	r3, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 174


 7375 0336 03F1A802 		add	r2, r3, #168
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7376              		.loc 1 920 0
 7377 033a 07F21C43 		addw	r3, r7, #1052
 7378 033e 9A67     		str	r2, [r3, #120]
 952:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7379              		.loc 1 952 0
 7380 0340 D7F88035 		ldr	r3, [r7, #1408]
 7381 0344 03F50872 		add	r2, r3, #544
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7382              		.loc 1 920 0
 7383 0348 07F21C43 		addw	r3, r7, #1052
 7384 034c DA67     		str	r2, [r3, #124]
 953:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7385              		.loc 1 953 0
 7386 034e D7F88035 		ldr	r3, [r7, #1408]
 7387 0352 03F20122 		addw	r2, r3, #513
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7388              		.loc 1 920 0
 7389 0356 07F21C43 		addw	r3, r7, #1052
 7390 035a C3F88020 		str	r2, [r3, #128]
 954:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7391              		.loc 1 954 0
 7392 035e D7F88035 		ldr	r3, [r7, #1408]
 7393 0362 03F20222 		addw	r2, r3, #514
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7394              		.loc 1 920 0
 7395 0366 07F21C43 		addw	r3, r7, #1052
 7396 036a C3F88420 		str	r2, [r3, #132]
 955:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7397              		.loc 1 955 0
 7398 036e D7F88035 		ldr	r3, [r7, #1408]
 7399 0372 03F1AB02 		add	r2, r3, #171
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7400              		.loc 1 920 0
 7401 0376 07F21C43 		addw	r3, r7, #1052
 7402 037a C3F88820 		str	r2, [r3, #136]
 956:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7403              		.loc 1 956 0
 7404 037e D7F88035 		ldr	r3, [r7, #1408]
 7405 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7406 0386 1233     		adds	r3, r3, #18
 7407 0388 5B01     		lsls	r3, r3, #5
 7408 038a D7F88025 		ldr	r2, [r7, #1408]
 7409 038e 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7410              		.loc 1 920 0
 7411 0390 07F21C43 		addw	r3, r7, #1052
 7412 0394 C3F88C20 		str	r2, [r3, #140]
 957:..\src/command_processing.c ****         
 958:..\src/command_processing.c ****         // GENERIC PARAMS
 959:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 7413              		.loc 1 959 0
 7414 0398 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7415 039c 1346     		mov	r3, r2
 7416 039e DB00     		lsls	r3, r3, #3
 7417 03a0 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 175


 7418 03a2 1B01     		lsls	r3, r3, #4
 7419 03a4 03F58873 		add	r3, r3, #272
 7420 03a8 D7F88025 		ldr	r2, [r7, #1408]
 7421 03ac 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7422              		.loc 1 920 0
 7423 03ae 07F21C43 		addw	r3, r7, #1052
 7424 03b2 C3F89020 		str	r2, [r3, #144]
 960:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 7425              		.loc 1 960 0
 7426 03b6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7427 03ba 1346     		mov	r3, r2
 7428 03bc DB00     		lsls	r3, r3, #3
 7429 03be 9B1A     		subs	r3, r3, r2
 7430 03c0 1B01     		lsls	r3, r3, #4
 7431 03c2 E033     		adds	r3, r3, #224
 7432 03c4 D7F88025 		ldr	r2, [r7, #1408]
 7433 03c8 1344     		add	r3, r3, r2
 7434 03ca 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7435              		.loc 1 920 0
 7436 03cc 07F21C43 		addw	r3, r7, #1052
 7437 03d0 C3F89420 		str	r2, [r3, #148]
 961:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 7438              		.loc 1 961 0
 7439 03d4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7440 03d8 1346     		mov	r3, r2
 7441 03da DB00     		lsls	r3, r3, #3
 7442 03dc 9B1A     		subs	r3, r3, r2
 7443 03de 1B01     		lsls	r3, r3, #4
 7444 03e0 03F58873 		add	r3, r3, #272
 7445 03e4 D7F88025 		ldr	r2, [r7, #1408]
 7446 03e8 1344     		add	r3, r3, r2
 7447 03ea 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7448              		.loc 1 920 0
 7449 03ec 07F21C43 		addw	r3, r7, #1052
 7450 03f0 C3F89820 		str	r2, [r3, #152]
 962:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 7451              		.loc 1 962 0
 7452 03f4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7453 03f8 1346     		mov	r3, r2
 7454 03fa DB00     		lsls	r3, r3, #3
 7455 03fc 9B1A     		subs	r3, r3, r2
 7456 03fe 1B01     		lsls	r3, r3, #4
 7457 0400 03F58873 		add	r3, r3, #272
 7458 0404 D7F88025 		ldr	r2, [r7, #1408]
 7459 0408 1344     		add	r3, r3, r2
 7460 040a 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7461              		.loc 1 920 0
 7462 040c 07F21C43 		addw	r3, r7, #1052
 7463 0410 C3F89C20 		str	r2, [r3, #156]
 963:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7464              		.loc 1 963 0
 7465 0414 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7466 0418 D7F88015 		ldr	r1, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 176


 7467 041c 1346     		mov	r3, r2
 7468 041e DB00     		lsls	r3, r3, #3
 7469 0420 9B1A     		subs	r3, r3, r2
 7470 0422 1B01     		lsls	r3, r3, #4
 7471 0424 0B44     		add	r3, r3, r1
 7472 0426 03F58873 		add	r3, r3, #272
 7473 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7474 042c 1A46     		mov	r2, r3
 7475 042e 1346     		mov	r3, r2
 7476 0430 5B00     		lsls	r3, r3, #1
 7477 0432 1344     		add	r3, r3, r2
 7478 0434 1B01     		lsls	r3, r3, #4
 7479 0436 03F5D873 		add	r3, r3, #432
 7480 043a D7F88025 		ldr	r2, [r7, #1408]
 7481 043e 1344     		add	r3, r3, r2
 7482 0440 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7483              		.loc 1 920 0
 7484 0442 07F21C43 		addw	r3, r7, #1052
 7485 0446 C3F8A020 		str	r2, [r3, #160]
 964:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7486              		.loc 1 964 0
 7487 044a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7488 044e D7F88015 		ldr	r1, [r7, #1408]
 7489 0452 1346     		mov	r3, r2
 7490 0454 DB00     		lsls	r3, r3, #3
 7491 0456 9B1A     		subs	r3, r3, r2
 7492 0458 1B01     		lsls	r3, r3, #4
 7493 045a 0B44     		add	r3, r3, r1
 7494 045c 03F58873 		add	r3, r3, #272
 7495 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7496 0462 1A46     		mov	r2, r3
 7497 0464 1346     		mov	r3, r2
 7498 0466 5B00     		lsls	r3, r3, #1
 7499 0468 1344     		add	r3, r3, r2
 7500 046a 1B01     		lsls	r3, r3, #4
 7501 046c 03F5D873 		add	r3, r3, #432
 7502 0470 D7F88025 		ldr	r2, [r7, #1408]
 7503 0474 1344     		add	r3, r3, r2
 7504 0476 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7505              		.loc 1 920 0
 7506 0478 07F21C43 		addw	r3, r7, #1052
 7507 047c C3F8A420 		str	r2, [r3, #164]
 965:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7508              		.loc 1 965 0
 7509 0480 D7F88035 		ldr	r3, [r7, #1408]
 7510 0484 03F1A902 		add	r2, r3, #169
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7511              		.loc 1 920 0
 7512 0488 07F21C43 		addw	r3, r7, #1052
 7513 048c C3F8A820 		str	r2, [r3, #168]
 966:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7514              		.loc 1 966 0
 7515 0490 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7516 0494 1346     		mov	r3, r2
 7517 0496 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 177


 7518 0498 9B1A     		subs	r3, r3, r2
 7519 049a 1B01     		lsls	r3, r3, #4
 7520 049c B033     		adds	r3, r3, #176
 7521 049e D7F88025 		ldr	r2, [r7, #1408]
 7522 04a2 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7523              		.loc 1 920 0
 7524 04a4 07F21C43 		addw	r3, r7, #1052
 7525 04a8 C3F8AC20 		str	r2, [r3, #172]
 967:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7526              		.loc 1 967 0
 7527 04ac 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7528 04b0 1346     		mov	r3, r2
 7529 04b2 DB00     		lsls	r3, r3, #3
 7530 04b4 9B1A     		subs	r3, r3, r2
 7531 04b6 1B01     		lsls	r3, r3, #4
 7532 04b8 B833     		adds	r3, r3, #184
 7533 04ba D7F88025 		ldr	r2, [r7, #1408]
 7534 04be 1344     		add	r3, r3, r2
 7535 04c0 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7536              		.loc 1 920 0
 7537 04c2 07F21C43 		addw	r3, r7, #1052
 7538 04c6 C3F8B020 		str	r2, [r3, #176]
 968:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 7539              		.loc 1 968 0
 7540 04ca 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7541 04ce 1346     		mov	r3, r2
 7542 04d0 DB00     		lsls	r3, r3, #3
 7543 04d2 9B1A     		subs	r3, r3, r2
 7544 04d4 1B01     		lsls	r3, r3, #4
 7545 04d6 E033     		adds	r3, r3, #224
 7546 04d8 D7F88025 		ldr	r2, [r7, #1408]
 7547 04dc 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7548              		.loc 1 920 0
 7549 04de 07F21C43 		addw	r3, r7, #1052
 7550 04e2 C3F8B420 		str	r2, [r3, #180]
 969:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7551              		.loc 1 969 0
 7552 04e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7553 04ea 1346     		mov	r3, r2
 7554 04ec DB00     		lsls	r3, r3, #3
 7555 04ee 9B1A     		subs	r3, r3, r2
 7556 04f0 1B01     		lsls	r3, r3, #4
 7557 04f2 03F58473 		add	r3, r3, #264
 7558 04f6 D7F88025 		ldr	r2, [r7, #1408]
 7559 04fa 1344     		add	r3, r3, r2
 7560 04fc 9A1D     		adds	r2, r3, #6
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7561              		.loc 1 920 0
 7562 04fe 07F21C43 		addw	r3, r7, #1052
 7563 0502 C3F8B820 		str	r2, [r3, #184]
 970:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7564              		.loc 1 970 0
 7565 0506 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7566 050a 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 178


 7567 050c DB00     		lsls	r3, r3, #3
 7568 050e 9B1A     		subs	r3, r3, r2
 7569 0510 1B01     		lsls	r3, r3, #4
 7570 0512 03F58473 		add	r3, r3, #264
 7571 0516 D7F88025 		ldr	r2, [r7, #1408]
 7572 051a 1344     		add	r3, r3, r2
 7573 051c DA1D     		adds	r2, r3, #7
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7574              		.loc 1 920 0
 7575 051e 07F21C43 		addw	r3, r7, #1052
 7576 0522 C3F8BC20 		str	r2, [r3, #188]
 971:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 7577              		.loc 1 971 0
 7578 0526 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7579 052a D7F88015 		ldr	r1, [r7, #1408]
 7580 052e 1346     		mov	r3, r2
 7581 0530 DB00     		lsls	r3, r3, #3
 7582 0532 9B1A     		subs	r3, r3, r2
 7583 0534 1B01     		lsls	r3, r3, #4
 7584 0536 0B44     		add	r3, r3, r1
 7585 0538 03F58873 		add	r3, r3, #272
 7586 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7587 053e 1A46     		mov	r2, r3
 7588 0540 1346     		mov	r3, r2
 7589 0542 5B00     		lsls	r3, r3, #1
 7590 0544 1344     		add	r3, r3, r2
 7591 0546 1B01     		lsls	r3, r3, #4
 7592 0548 03F5C873 		add	r3, r3, #400
 7593 054c D7F88025 		ldr	r2, [r7, #1408]
 7594 0550 1344     		add	r3, r3, r2
 7595 0552 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7596              		.loc 1 920 0
 7597 0554 07F21C43 		addw	r3, r7, #1052
 7598 0558 C3F8C020 		str	r2, [r3, #192]
 972:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 7599              		.loc 1 972 0
 7600 055c 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7601 0560 D7F88015 		ldr	r1, [r7, #1408]
 7602 0564 1346     		mov	r3, r2
 7603 0566 DB00     		lsls	r3, r3, #3
 7604 0568 9B1A     		subs	r3, r3, r2
 7605 056a 1B01     		lsls	r3, r3, #4
 7606 056c 0B44     		add	r3, r3, r1
 7607 056e 03F58873 		add	r3, r3, #272
 7608 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7609 0574 1A46     		mov	r2, r3
 7610 0576 1346     		mov	r3, r2
 7611 0578 5B00     		lsls	r3, r3, #1
 7612 057a 1344     		add	r3, r3, r2
 7613 057c 1B01     		lsls	r3, r3, #4
 7614 057e 03F5CC73 		add	r3, r3, #408
 7615 0582 D7F88025 		ldr	r2, [r7, #1408]
 7616 0586 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7617              		.loc 1 920 0
 7618 0588 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 179


 7619 058c C3F8C420 		str	r2, [r3, #196]
 973:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7620              		.loc 1 973 0
 7621 0590 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7622 0594 D7F88015 		ldr	r1, [r7, #1408]
 7623 0598 1346     		mov	r3, r2
 7624 059a DB00     		lsls	r3, r3, #3
 7625 059c 9B1A     		subs	r3, r3, r2
 7626 059e 1B01     		lsls	r3, r3, #4
 7627 05a0 0B44     		add	r3, r3, r1
 7628 05a2 03F58873 		add	r3, r3, #272
 7629 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7630 05a8 1A46     		mov	r2, r3
 7631 05aa 1346     		mov	r3, r2
 7632 05ac 5B00     		lsls	r3, r3, #1
 7633 05ae 1344     		add	r3, r3, r2
 7634 05b0 1B01     		lsls	r3, r3, #4
 7635 05b2 03F5D073 		add	r3, r3, #416
 7636 05b6 D7F88025 		ldr	r2, [r7, #1408]
 7637 05ba 1344     		add	r3, r3, r2
 7638 05bc 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7639              		.loc 1 920 0
 7640 05be 07F21C43 		addw	r3, r7, #1052
 7641 05c2 C3F8C820 		str	r2, [r3, #200]
 974:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7642              		.loc 1 974 0
 7643 05c6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7644 05ca 1346     		mov	r3, r2
 7645 05cc DB00     		lsls	r3, r3, #3
 7646 05ce 9B1A     		subs	r3, r3, r2
 7647 05d0 1B01     		lsls	r3, r3, #4
 7648 05d2 E033     		adds	r3, r3, #224
 7649 05d4 D7F88025 		ldr	r2, [r7, #1408]
 7650 05d8 1344     		add	r3, r3, r2
 7651 05da DA1C     		adds	r2, r3, #3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7652              		.loc 1 920 0
 7653 05dc 07F21C43 		addw	r3, r7, #1052
 7654 05e0 C3F8CC20 		str	r2, [r3, #204]
 975:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7655              		.loc 1 975 0
 7656 05e4 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7657 05e8 1346     		mov	r3, r2
 7658 05ea DB00     		lsls	r3, r3, #3
 7659 05ec 9B1A     		subs	r3, r3, r2
 7660 05ee 1B01     		lsls	r3, r3, #4
 7661 05f0 E033     		adds	r3, r3, #224
 7662 05f2 D7F88025 		ldr	r2, [r7, #1408]
 7663 05f6 1344     		add	r3, r3, r2
 7664 05f8 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7665              		.loc 1 920 0
 7666 05fa 07F21C43 		addw	r3, r7, #1052
 7667 05fe C3F8D020 		str	r2, [r3, #208]
 976:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7668              		.loc 1 976 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 180


 7669 0602 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7670 0606 1346     		mov	r3, r2
 7671 0608 DB00     		lsls	r3, r3, #3
 7672 060a 9B1A     		subs	r3, r3, r2
 7673 060c 1B01     		lsls	r3, r3, #4
 7674 060e E833     		adds	r3, r3, #232
 7675 0610 D7F88025 		ldr	r2, [r7, #1408]
 7676 0614 1344     		add	r3, r3, r2
 7677 0616 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7678              		.loc 1 920 0
 7679 0618 07F21C43 		addw	r3, r7, #1052
 7680 061c C3F8D420 		str	r2, [r3, #212]
 977:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7681              		.loc 1 977 0
 7682 0620 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7683 0624 1346     		mov	r3, r2
 7684 0626 DB00     		lsls	r3, r3, #3
 7685 0628 9B1A     		subs	r3, r3, r2
 7686 062a 1B01     		lsls	r3, r3, #4
 7687 062c 03F58473 		add	r3, r3, #264
 7688 0630 D7F88025 		ldr	r2, [r7, #1408]
 7689 0634 1344     		add	r3, r3, r2
 7690 0636 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7691              		.loc 1 920 0
 7692 0638 07F21C43 		addw	r3, r7, #1052
 7693 063c C3F8D820 		str	r2, [r3, #216]
 978:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7694              		.loc 1 978 0
 7695 0640 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7696 0644 D7F88015 		ldr	r1, [r7, #1408]
 7697 0648 1346     		mov	r3, r2
 7698 064a DB00     		lsls	r3, r3, #3
 7699 064c 9B1A     		subs	r3, r3, r2
 7700 064e 1B01     		lsls	r3, r3, #4
 7701 0650 0B44     		add	r3, r3, r1
 7702 0652 03F58873 		add	r3, r3, #272
 7703 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7704 0658 1A46     		mov	r2, r3
 7705 065a 1346     		mov	r3, r2
 7706 065c 5B00     		lsls	r3, r3, #1
 7707 065e 1344     		add	r3, r3, r2
 7708 0660 1B01     		lsls	r3, r3, #4
 7709 0662 03F5D873 		add	r3, r3, #432
 7710 0666 D7F88025 		ldr	r2, [r7, #1408]
 7711 066a 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7712              		.loc 1 920 0
 7713 066c 07F21C43 		addw	r3, r7, #1052
 7714 0670 C3F8DC20 		str	r2, [r3, #220]
 979:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7715              		.loc 1 979 0
 7716 0674 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7717 0678 D7F88015 		ldr	r1, [r7, #1408]
 7718 067c 1346     		mov	r3, r2
 7719 067e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 181


 7720 0680 9B1A     		subs	r3, r3, r2
 7721 0682 1B01     		lsls	r3, r3, #4
 7722 0684 0B44     		add	r3, r3, r1
 7723 0686 03F58873 		add	r3, r3, #272
 7724 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7725 068c 1A46     		mov	r2, r3
 7726 068e 1346     		mov	r3, r2
 7727 0690 5B00     		lsls	r3, r3, #1
 7728 0692 1344     		add	r3, r3, r2
 7729 0694 1B01     		lsls	r3, r3, #4
 7730 0696 03F5D873 		add	r3, r3, #432
 7731 069a D7F88025 		ldr	r2, [r7, #1408]
 7732 069e 1344     		add	r3, r3, r2
 7733 06a0 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7734              		.loc 1 920 0
 7735 06a2 07F21C43 		addw	r3, r7, #1052
 7736 06a6 C3F8E020 		str	r2, [r3, #224]
 980:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7737              		.loc 1 980 0
 7738 06aa 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7739 06ae 1346     		mov	r3, r2
 7740 06b0 DB00     		lsls	r3, r3, #3
 7741 06b2 9B1A     		subs	r3, r3, r2
 7742 06b4 1B01     		lsls	r3, r3, #4
 7743 06b6 E033     		adds	r3, r3, #224
 7744 06b8 D7F88025 		ldr	r2, [r7, #1408]
 7745 06bc 1344     		add	r3, r3, r2
 7746 06be 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7747              		.loc 1 920 0
 7748 06c0 07F21C43 		addw	r3, r7, #1052
 7749 06c4 C3F8E420 		str	r2, [r3, #228]
 981:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7750              		.loc 1 981 0
 7751 06c8 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7752 06cc 1346     		mov	r3, r2
 7753 06ce DB00     		lsls	r3, r3, #3
 7754 06d0 9B1A     		subs	r3, r3, r2
 7755 06d2 1B01     		lsls	r3, r3, #4
 7756 06d4 F033     		adds	r3, r3, #240
 7757 06d6 D7F88025 		ldr	r2, [r7, #1408]
 7758 06da 1344     		add	r3, r3, r2
 7759 06dc 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7760              		.loc 1 920 0
 7761 06de 07F21C43 		addw	r3, r7, #1052
 7762 06e2 C3F8E820 		str	r2, [r3, #232]
 982:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7763              		.loc 1 982 0
 7764 06e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7765 06ea 1346     		mov	r3, r2
 7766 06ec DB00     		lsls	r3, r3, #3
 7767 06ee 9B1A     		subs	r3, r3, r2
 7768 06f0 1B01     		lsls	r3, r3, #4
 7769 06f2 03F58873 		add	r3, r3, #272
 7770 06f6 D7F88025 		ldr	r2, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 182


 7771 06fa 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7772              		.loc 1 920 0
 7773 06fc 07F21C43 		addw	r3, r7, #1052
 7774 0700 C3F8EC20 		str	r2, [r3, #236]
 983:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7775              		.loc 1 983 0
 7776 0704 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7777 0708 1346     		mov	r3, r2
 7778 070a DB00     		lsls	r3, r3, #3
 7779 070c 9B1A     		subs	r3, r3, r2
 7780 070e 1B01     		lsls	r3, r3, #4
 7781 0710 E033     		adds	r3, r3, #224
 7782 0712 D7F88025 		ldr	r2, [r7, #1408]
 7783 0716 1344     		add	r3, r3, r2
 7784 0718 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7785              		.loc 1 920 0
 7786 071a 07F21C43 		addw	r3, r7, #1052
 7787 071e C3F8F020 		str	r2, [r3, #240]
 984:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7788              		.loc 1 984 0
 7789 0722 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7790 0726 1346     		mov	r3, r2
 7791 0728 DB00     		lsls	r3, r3, #3
 7792 072a 9B1A     		subs	r3, r3, r2
 7793 072c 1B01     		lsls	r3, r3, #4
 7794 072e 03F58873 		add	r3, r3, #272
 7795 0732 D7F88025 		ldr	r2, [r7, #1408]
 7796 0736 1344     		add	r3, r3, r2
 7797 0738 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7798              		.loc 1 920 0
 7799 073a 07F21C43 		addw	r3, r7, #1052
 7800 073e C3F8F420 		str	r2, [r3, #244]
 985:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7801              		.loc 1 985 0
 7802 0742 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7803 0746 1346     		mov	r3, r2
 7804 0748 DB00     		lsls	r3, r3, #3
 7805 074a 9B1A     		subs	r3, r3, r2
 7806 074c 1B01     		lsls	r3, r3, #4
 7807 074e 03F58873 		add	r3, r3, #272
 7808 0752 D7F88025 		ldr	r2, [r7, #1408]
 7809 0756 1344     		add	r3, r3, r2
 7810 0758 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7811              		.loc 1 920 0
 7812 075a 07F21C43 		addw	r3, r7, #1052
 7813 075e C3F8F820 		str	r2, [r3, #248]
 986:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7814              		.loc 1 986 0
 7815 0762 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7816 0766 D7F88015 		ldr	r1, [r7, #1408]
 7817 076a 1346     		mov	r3, r2
 7818 076c DB00     		lsls	r3, r3, #3
 7819 076e 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 183


 7820 0770 1B01     		lsls	r3, r3, #4
 7821 0772 0B44     		add	r3, r3, r1
 7822 0774 03F58873 		add	r3, r3, #272
 7823 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7824 077a 1A46     		mov	r2, r3
 7825 077c 1346     		mov	r3, r2
 7826 077e 5B00     		lsls	r3, r3, #1
 7827 0780 1344     		add	r3, r3, r2
 7828 0782 1B01     		lsls	r3, r3, #4
 7829 0784 03F5D873 		add	r3, r3, #432
 7830 0788 D7F88025 		ldr	r2, [r7, #1408]
 7831 078c 1344     		add	r3, r3, r2
 7832 078e 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7833              		.loc 1 920 0
 7834 0790 07F21C43 		addw	r3, r7, #1052
 7835 0794 C3F8FC20 		str	r2, [r3, #252]
 987:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7836              		.loc 1 987 0
 7837 0798 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7838 079c D7F88015 		ldr	r1, [r7, #1408]
 7839 07a0 1346     		mov	r3, r2
 7840 07a2 DB00     		lsls	r3, r3, #3
 7841 07a4 9B1A     		subs	r3, r3, r2
 7842 07a6 1B01     		lsls	r3, r3, #4
 7843 07a8 0B44     		add	r3, r3, r1
 7844 07aa 03F58873 		add	r3, r3, #272
 7845 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7846 07b0 1A46     		mov	r2, r3
 7847 07b2 1346     		mov	r3, r2
 7848 07b4 5B00     		lsls	r3, r3, #1
 7849 07b6 1344     		add	r3, r3, r2
 7850 07b8 1B01     		lsls	r3, r3, #4
 7851 07ba 03F5D873 		add	r3, r3, #432
 7852 07be D7F88025 		ldr	r2, [r7, #1408]
 7853 07c2 1344     		add	r3, r3, r2
 7854 07c4 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7855              		.loc 1 920 0
 7856 07c6 07F21C43 		addw	r3, r7, #1052
 7857 07ca C3F80021 		str	r2, [r3, #256]
 988:..\src/command_processing.c ****         
 989:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7858              		.loc 1 989 0
 7859 07ce D7F88035 		ldr	r3, [r7, #1408]
 7860 07d2 03F5C872 		add	r2, r3, #400
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7861              		.loc 1 920 0
 7862 07d6 07F21C43 		addw	r3, r7, #1052
 7863 07da C3F80421 		str	r2, [r3, #260]
 990:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7864              		.loc 1 990 0
 7865 07de D7F88035 		ldr	r3, [r7, #1408]
 7866 07e2 03F5E072 		add	r2, r3, #448
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7867              		.loc 1 920 0
 7868 07e6 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 184


 7869 07ea C3F80821 		str	r2, [r3, #264]
 991:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7870              		.loc 1 991 0
 7871 07ee D7F88035 		ldr	r3, [r7, #1408]
 7872 07f2 03F22722 		addw	r2, r3, #551
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7873              		.loc 1 920 0
 7874 07f6 07F21C43 		addw	r3, r7, #1052
 7875 07fa C3F80C21 		str	r2, [r3, #268]
 992:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7876              		.loc 1 992 0
 7877 07fe D7F88035 		ldr	r3, [r7, #1408]
 7878 0802 03F50A72 		add	r2, r3, #552
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7879              		.loc 1 920 0
 7880 0806 07F21C43 		addw	r3, r7, #1052
 7881 080a C3F81021 		str	r2, [r3, #272]
 993:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 7882              		.loc 1 993 0
 7883 080e D7F88035 		ldr	r3, [r7, #1408]
 7884 0812 03F22E22 		addw	r2, r3, #558
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7885              		.loc 1 920 0
 7886 0816 07F21C43 		addw	r3, r7, #1052
 7887 081a C3F81421 		str	r2, [r3, #276]
 994:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.record_EMG_history_on_SD),
 7888              		.loc 1 994 0
 7889 081e D7F88035 		ldr	r3, [r7, #1408]
 7890 0822 03F50D72 		add	r2, r3, #564
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7891              		.loc 1 920 0
 7892 0826 07F21C43 		addw	r3, r7, #1052
 7893 082a C3F81821 		str	r2, [r3, #280]
 995:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7894              		.loc 1 995 0
 7895 082e D7F88035 		ldr	r3, [r7, #1408]
 7896 0832 03F52C72 		add	r2, r3, #688
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7897              		.loc 1 920 0
 7898 0836 07F21C43 		addw	r3, r7, #1052
 7899 083a C3F81C21 		str	r2, [r3, #284]
 996:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7900              		.loc 1 996 0
 7901 083e D7F88035 		ldr	r3, [r7, #1408]
 7902 0842 03F2B222 		addw	r2, r3, #690
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7903              		.loc 1 920 0
 7904 0846 07F21C43 		addw	r3, r7, #1052
 7905 084a C3F82021 		str	r2, [r3, #288]
 997:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7906              		.loc 1 997 0
 7907 084e D7F88035 		ldr	r3, [r7, #1408]
 7908 0852 03F52D72 		add	r2, r3, #692
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7909              		.loc 1 920 0
 7910 0856 07F21C43 		addw	r3, r7, #1052
 7911 085a C3F82421 		str	r2, [r3, #292]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 185


 998:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7912              		.loc 1 998 0
 7913 085e D7F88035 		ldr	r3, [r7, #1408]
 7914 0862 03F1AC02 		add	r2, r3, #172
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7915              		.loc 1 920 0
 7916 0866 07F21C43 		addw	r3, r7, #1052
 7917 086a C3F82821 		str	r2, [r3, #296]
 999:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7918              		.loc 1 999 0
 7919 086e D7F88035 		ldr	r3, [r7, #1408]
 7920 0872 03F53872 		add	r2, r3, #736
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7921              		.loc 1 920 0
 7922 0876 07F21C43 		addw	r3, r7, #1052
 7923 087a C3F82C21 		str	r2, [r3, #300]
1000:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.airchamber_feedback_active),
 7924              		.loc 1 1000 0
 7925 087e D7F88035 		ldr	r3, [r7, #1408]
 7926 0882 03F2DD22 		addw	r2, r3, #733
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7927              		.loc 1 920 0
 7928 0886 07F21C43 		addw	r3, r7, #1052
 7929 088a C3F83021 		str	r2, [r3, #304]
1001:..\src/command_processing.c ****         
1002:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.vibrotactile_feedback_active),              // additional wrist params
 7930              		.loc 1 1002 0
 7931 088e D7F88035 		ldr	r3, [r7, #1408]
 7932 0892 03F53772 		add	r2, r3, #732
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7933              		.loc 1 920 0
 7934 0896 07F21C43 		addw	r3, r7, #1052
 7935 089a C3F83421 		str	r2, [r3, #308]
1003:..\src/command_processing.c ****         
1004:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.master_mode_active),                        // additional master params
 7936              		.loc 1 1004 0
 7937 089e D7F88035 		ldr	r3, [r7, #1408]
 7938 08a2 03F53072 		add	r2, r3, #704
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7939              		.loc 1 920 0
 7940 08a6 07F21C43 		addw	r3, r7, #1052
 7941 08aa C3F83821 		str	r2, [r3, #312]
1005:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7942              		.loc 1 1005 0
 7943 08ae D7F88035 		ldr	r3, [r7, #1408]
 7944 08b2 03F2C122 		addw	r2, r3, #705
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7945              		.loc 1 920 0
 7946 08b6 07F21C43 		addw	r3, r7, #1052
 7947 08ba C3F83C21 		str	r2, [r3, #316]
1006:..\src/command_processing.c ****         
1007:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7948              		.loc 1 1007 0
 7949 08be D7F88035 		ldr	r3, [r7, #1408]
 7950 08c2 03F53472 		add	r2, r3, #720
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7951              		.loc 1 920 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 186


 7952 08c6 07F21C43 		addw	r3, r7, #1052
 7953 08ca C3F84021 		str	r2, [r3, #320]
1008:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7954              		.loc 1 1008 0
 7955 08ce D7F88035 		ldr	r3, [r7, #1408]
 7956 08d2 03F53572 		add	r2, r3, #724
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7957              		.loc 1 920 0
 7958 08d6 07F21C43 		addw	r3, r7, #1052
 7959 08da C3F84421 		str	r2, [r3, #324]
1009:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7960              		.loc 1 1009 0
 7961 08de D7F88035 		ldr	r3, [r7, #1408]
 7962 08e2 03F53672 		add	r2, r3, #728
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7963              		.loc 1 920 0
 7964 08e6 07F21C43 		addw	r3, r7, #1052
 7965 08ea C3F84821 		str	r2, [r3, #328]
1010:..\src/command_processing.c ****         
1011:..\src/command_processing.c **** 
1012:..\src/command_processing.c ****     };
1013:..\src/command_processing.c ****     
1014:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7966              		.loc 1 1014 0
 7967 08ee 07F57273 		add	r3, r7, #968
 7968 08f2 F64A     		ldr	r2, .L380
 7969 08f4 1846     		mov	r0, r3
 7970 08f6 1146     		mov	r1, r2
 7971 08f8 5323     		movs	r3, #83
 7972 08fa 1A46     		mov	r2, r3
 7973 08fc FFF7FEFF 		bl	memcpy
1015:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
1016:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
1017:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
1018:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
1019:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
1020:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
1021:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
1022:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
1023:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
1024:..\src/command_processing.c ****         
1025:..\src/command_processing.c ****         // GENERIC PARAMS
1026:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1027:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1028:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1029:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1030:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1031:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1032:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1033:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1034:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_UINT16, 
1035:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_FLAG,
1036:..\src/command_processing.c ****         TYPE_FLAG,
1037:..\src/command_processing.c ****         
1038:..\src/command_processing.c ****                     TYPE_FLAG, TYPE_FLAG, TYPE_UINT8,
1039:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
1040:..\src/command_processing.c ****     };
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 187


1041:..\src/command_processing.c **** 
1042:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7974              		.loc 1 1042 0
 7975 0900 07F55D73 		add	r3, r7, #884
 7976 0904 0122     		movs	r2, #1
 7977 0906 1A70     		strb	r2, [r3]
 7978 0908 07F55D73 		add	r3, r7, #884
 7979 090c 0322     		movs	r2, #3
 7980 090e 5A70     		strb	r2, [r3, #1]
 7981 0910 07F55D73 		add	r3, r7, #884
 7982 0914 0322     		movs	r2, #3
 7983 0916 9A70     		strb	r2, [r3, #2]
 7984 0918 07F55D73 		add	r3, r7, #884
 7985 091c 0122     		movs	r2, #1
 7986 091e DA70     		strb	r2, [r3, #3]
 7987 0920 07F55D73 		add	r3, r7, #884
 7988 0924 0122     		movs	r2, #1
 7989 0926 1A71     		strb	r2, [r3, #4]
 7990 0928 07F55D73 		add	r3, r7, #884
 7991 092c 0122     		movs	r2, #1
 7992 092e 5A71     		strb	r2, [r3, #5]
 7993 0930 07F55D73 		add	r3, r7, #884
 7994 0934 0322     		movs	r2, #3
 7995 0936 9A71     		strb	r2, [r3, #6]
 7996 0938 07F55D73 		add	r3, r7, #884
 7997 093c 0322     		movs	r2, #3
 7998 093e DA71     		strb	r2, [r3, #7]
 7999 0940 07F55D73 		add	r3, r7, #884
 8000 0944 0322     		movs	r2, #3
 8001 0946 1A72     		strb	r2, [r3, #8]
 8002 0948 07F55D73 		add	r3, r7, #884
 8003 094c 0122     		movs	r2, #1
 8004 094e 5A72     		strb	r2, [r3, #9]
 8005 0950 07F55D73 		add	r3, r7, #884
 8006 0954 0222     		movs	r2, #2
 8007 0956 9A72     		strb	r2, [r3, #10]
 8008 0958 07F55D73 		add	r3, r7, #884
 8009 095c 0222     		movs	r2, #2
 8010 095e DA72     		strb	r2, [r3, #11]
 8011 0960 07F55D73 		add	r3, r7, #884
 8012 0964 0122     		movs	r2, #1
 8013 0966 1A73     		strb	r2, [r3, #12]
 8014 0968 07F55D73 		add	r3, r7, #884
 8015 096c 0222     		movs	r2, #2
 8016 096e 5A73     		strb	r2, [r3, #13]
 8017 0970 07F55D73 		add	r3, r7, #884
 8018 0974 0122     		movs	r2, #1
 8019 0976 9A73     		strb	r2, [r3, #14]
 8020 0978 07F55D73 		add	r3, r7, #884
 8021 097c 0222     		movs	r2, #2
 8022 097e DA73     		strb	r2, [r3, #15]
 8023 0980 07F55D73 		add	r3, r7, #884
 8024 0984 0222     		movs	r2, #2
 8025 0986 1A74     		strb	r2, [r3, #16]
 8026 0988 07F55D73 		add	r3, r7, #884
 8027 098c 0122     		movs	r2, #1
 8028 098e 5A74     		strb	r2, [r3, #17]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 188


 8029 0990 07F55D73 		add	r3, r7, #884
 8030 0994 0122     		movs	r2, #1
 8031 0996 9A74     		strb	r2, [r3, #18]
 8032 0998 07F55D73 		add	r3, r7, #884
 8033 099c 0122     		movs	r2, #1
 8034 099e DA74     		strb	r2, [r3, #19]
 8035 09a0 07F55D73 		add	r3, r7, #884
 8036 09a4 0622     		movs	r2, #6
 8037 09a6 1A75     		strb	r2, [r3, #20]
 8038 09a8 07F55D73 		add	r3, r7, #884
 8039 09ac 0322     		movs	r2, #3
 8040 09ae 5A75     		strb	r2, [r3, #21]
 8041 09b0 07F55D73 		add	r3, r7, #884
 8042 09b4 0122     		movs	r2, #1
 8043 09b6 9A75     		strb	r2, [r3, #22]
 8044 09b8 07F55D73 		add	r3, r7, #884
 8045 09bc 0122     		movs	r2, #1
 8046 09be DA75     		strb	r2, [r3, #23]
 8047 09c0 07F55D73 		add	r3, r7, #884
 8048 09c4 0122     		movs	r2, #1
 8049 09c6 1A76     		strb	r2, [r3, #24]
 8050 09c8 07F55D73 		add	r3, r7, #884
 8051 09cc 0122     		movs	r2, #1
 8052 09ce 5A76     		strb	r2, [r3, #25]
 8053 09d0 07F55D73 		add	r3, r7, #884
 8054 09d4 0122     		movs	r2, #1
 8055 09d6 9A76     		strb	r2, [r3, #26]
 8056 09d8 07F55D73 		add	r3, r7, #884
 8057 09dc 0122     		movs	r2, #1
 8058 09de DA76     		strb	r2, [r3, #27]
 8059 09e0 07F55D73 		add	r3, r7, #884
 8060 09e4 0122     		movs	r2, #1
 8061 09e6 1A77     		strb	r2, [r3, #28]
 8062 09e8 07F55D73 		add	r3, r7, #884
 8063 09ec 0122     		movs	r2, #1
 8064 09ee 5A77     		strb	r2, [r3, #29]
 8065 09f0 07F55D73 		add	r3, r7, #884
 8066 09f4 0122     		movs	r2, #1
 8067 09f6 9A77     		strb	r2, [r3, #30]
 8068 09f8 07F55D73 		add	r3, r7, #884
 8069 09fc 0622     		movs	r2, #6
 8070 09fe DA77     		strb	r2, [r3, #31]
 8071 0a00 07F55D73 		add	r3, r7, #884
 8072 0a04 0122     		movs	r2, #1
 8073 0a06 83F82020 		strb	r2, [r3, #32]
 8074 0a0a 07F55D73 		add	r3, r7, #884
 8075 0a0e 0522     		movs	r2, #5
 8076 0a10 83F82120 		strb	r2, [r3, #33]
 8077 0a14 07F55D73 		add	r3, r7, #884
 8078 0a18 0122     		movs	r2, #1
 8079 0a1a 83F82220 		strb	r2, [r3, #34]
 8080 0a1e 07F55D73 		add	r3, r7, #884
 8081 0a22 0622     		movs	r2, #6
 8082 0a24 83F82320 		strb	r2, [r3, #35]
 8083 0a28 07F55D73 		add	r3, r7, #884
 8084 0a2c 0122     		movs	r2, #1
 8085 0a2e 83F82420 		strb	r2, [r3, #36]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 189


 8086 0a32 07F55D73 		add	r3, r7, #884
 8087 0a36 0122     		movs	r2, #1
 8088 0a38 83F82520 		strb	r2, [r3, #37]
 8089 0a3c 07F55D73 		add	r3, r7, #884
 8090 0a40 0122     		movs	r2, #1
 8091 0a42 83F82620 		strb	r2, [r3, #38]
 8092 0a46 07F55D73 		add	r3, r7, #884
 8093 0a4a 0122     		movs	r2, #1
 8094 0a4c 83F82720 		strb	r2, [r3, #39]
 8095 0a50 07F55D73 		add	r3, r7, #884
 8096 0a54 0322     		movs	r2, #3
 8097 0a56 83F82820 		strb	r2, [r3, #40]
 8098 0a5a 07F55D73 		add	r3, r7, #884
 8099 0a5e 0322     		movs	r2, #3
 8100 0a60 83F82920 		strb	r2, [r3, #41]
 8101 0a64 07F55D73 		add	r3, r7, #884
 8102 0a68 0122     		movs	r2, #1
 8103 0a6a 83F82A20 		strb	r2, [r3, #42]
 8104 0a6e 07F55D73 		add	r3, r7, #884
 8105 0a72 0322     		movs	r2, #3
 8106 0a74 83F82B20 		strb	r2, [r3, #43]
 8107 0a78 07F55D73 		add	r3, r7, #884
 8108 0a7c 0322     		movs	r2, #3
 8109 0a7e 83F82C20 		strb	r2, [r3, #44]
 8110 0a82 07F55D73 		add	r3, r7, #884
 8111 0a86 0122     		movs	r2, #1
 8112 0a88 83F82D20 		strb	r2, [r3, #45]
 8113 0a8c 07F55D73 		add	r3, r7, #884
 8114 0a90 0122     		movs	r2, #1
 8115 0a92 83F82E20 		strb	r2, [r3, #46]
 8116 0a96 07F55D73 		add	r3, r7, #884
 8117 0a9a 0122     		movs	r2, #1
 8118 0a9c 83F82F20 		strb	r2, [r3, #47]
 8119 0aa0 07F55D73 		add	r3, r7, #884
 8120 0aa4 0322     		movs	r2, #3
 8121 0aa6 83F83020 		strb	r2, [r3, #48]
 8122 0aaa 07F55D73 		add	r3, r7, #884
 8123 0aae 0322     		movs	r2, #3
 8124 0ab0 83F83120 		strb	r2, [r3, #49]
 8125 0ab4 07F55D73 		add	r3, r7, #884
 8126 0ab8 0322     		movs	r2, #3
 8127 0aba 83F83220 		strb	r2, [r3, #50]
 8128 0abe 07F55D73 		add	r3, r7, #884
 8129 0ac2 0122     		movs	r2, #1
 8130 0ac4 83F83320 		strb	r2, [r3, #51]
 8131 0ac8 07F55D73 		add	r3, r7, #884
 8132 0acc 0222     		movs	r2, #2
 8133 0ace 83F83420 		strb	r2, [r3, #52]
 8134 0ad2 07F55D73 		add	r3, r7, #884
 8135 0ad6 0222     		movs	r2, #2
 8136 0ad8 83F83520 		strb	r2, [r3, #53]
 8137 0adc 07F55D73 		add	r3, r7, #884
 8138 0ae0 0122     		movs	r2, #1
 8139 0ae2 83F83620 		strb	r2, [r3, #54]
 8140 0ae6 07F55D73 		add	r3, r7, #884
 8141 0aea 0122     		movs	r2, #1
 8142 0aec 83F83720 		strb	r2, [r3, #55]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 190


 8143 0af0 07F55D73 		add	r3, r7, #884
 8144 0af4 0122     		movs	r2, #1
 8145 0af6 83F83820 		strb	r2, [r3, #56]
 8146 0afa 07F55D73 		add	r3, r7, #884
 8147 0afe 0122     		movs	r2, #1
 8148 0b00 83F83920 		strb	r2, [r3, #57]
 8149 0b04 07F55D73 		add	r3, r7, #884
 8150 0b08 0622     		movs	r2, #6
 8151 0b0a 83F83A20 		strb	r2, [r3, #58]
 8152 0b0e 07F55D73 		add	r3, r7, #884
 8153 0b12 0122     		movs	r2, #1
 8154 0b14 83F83B20 		strb	r2, [r3, #59]
 8155 0b18 07F55D73 		add	r3, r7, #884
 8156 0b1c 0122     		movs	r2, #1
 8157 0b1e 83F83C20 		strb	r2, [r3, #60]
 8158 0b22 07F55D73 		add	r3, r7, #884
 8159 0b26 0122     		movs	r2, #1
 8160 0b28 83F83D20 		strb	r2, [r3, #61]
 8161 0b2c 07F55D73 		add	r3, r7, #884
 8162 0b30 0122     		movs	r2, #1
 8163 0b32 83F83E20 		strb	r2, [r3, #62]
 8164 0b36 07F55D73 		add	r3, r7, #884
 8165 0b3a 0322     		movs	r2, #3
 8166 0b3c 83F83F20 		strb	r2, [r3, #63]
 8167 0b40 07F55D73 		add	r3, r7, #884
 8168 0b44 0322     		movs	r2, #3
 8169 0b46 83F84020 		strb	r2, [r3, #64]
1043:..\src/command_processing.c ****         1, 3, 3, 1, 
1044:..\src/command_processing.c ****         1, 1, 3, 3,
1045:..\src/command_processing.c ****         3, 1, 2, 2, 
1046:..\src/command_processing.c ****         1, 2, 1, 2,
1047:..\src/command_processing.c ****         2, 1, 1, 1, 
1048:..\src/command_processing.c ****         6, 3, 1, 1,
1049:..\src/command_processing.c ****         1, 1, 1, 1, 
1050:..\src/command_processing.c ****         1, 1, 1, 6,
1051:..\src/command_processing.c ****         1, 5, 1, 6,
1052:..\src/command_processing.c ****         
1053:..\src/command_processing.c ****         // GENERIC PARAMS
1054:..\src/command_processing.c ****         1, 1, 1, 1,
1055:..\src/command_processing.c ****         3, 3, 1, 3,
1056:..\src/command_processing.c ****         3, 1, 1, 1,
1057:..\src/command_processing.c ****         3, 3, 3, 1,
1058:..\src/command_processing.c ****         2, 2, 1, 1,
1059:..\src/command_processing.c ****         1, 1, 6, 1,
1060:..\src/command_processing.c ****         1, 1, 1, 3, 
1061:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 8170              		.loc 1 1061 0
 8171 0b4a 614B     		ldr	r3, .L380+4
 8172 0b4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         1, 3, 3, 1, 
 8173              		.loc 1 1042 0
 8174 0b4e 07F55D73 		add	r3, r7, #884
 8175 0b52 83F84120 		strb	r2, [r3, #65]
 8176              		.loc 1 1061 0
 8177 0b56 5E4B     		ldr	r3, .L380+4
 8178 0b58 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         1, 3, 3, 1, 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 191


 8179              		.loc 1 1042 0
 8180 0b5a 07F55D73 		add	r3, r7, #884
 8181 0b5e 83F84220 		strb	r2, [r3, #66]
 8182 0b62 07F55D73 		add	r3, r7, #884
 8183 0b66 0122     		movs	r2, #1
 8184 0b68 83F84320 		strb	r2, [r3, #67]
 8185 0b6c 07F55D73 		add	r3, r7, #884
 8186 0b70 0622     		movs	r2, #6
 8187 0b72 83F84420 		strb	r2, [r3, #68]
 8188 0b76 07F55D73 		add	r3, r7, #884
 8189 0b7a 0622     		movs	r2, #6
 8190 0b7c 83F84520 		strb	r2, [r3, #69]
 8191 0b80 07F55D73 		add	r3, r7, #884
 8192 0b84 0122     		movs	r2, #1
 8193 0b86 83F84620 		strb	r2, [r3, #70]
 8194 0b8a 07F55D73 		add	r3, r7, #884
 8195 0b8e 0122     		movs	r2, #1
 8196 0b90 83F84720 		strb	r2, [r3, #71]
 8197 0b94 07F55D73 		add	r3, r7, #884
 8198 0b98 0122     		movs	r2, #1
 8199 0b9a 83F84820 		strb	r2, [r3, #72]
 8200 0b9e 07F55D73 		add	r3, r7, #884
 8201 0ba2 0222     		movs	r2, #2
 8202 0ba4 83F84920 		strb	r2, [r3, #73]
 8203 0ba8 07F55D73 		add	r3, r7, #884
 8204 0bac 0122     		movs	r2, #1
 8205 0bae 83F84A20 		strb	r2, [r3, #74]
 8206 0bb2 07F55D73 		add	r3, r7, #884
 8207 0bb6 0122     		movs	r2, #1
 8208 0bb8 83F84B20 		strb	r2, [r3, #75]
 8209 0bbc 07F55D73 		add	r3, r7, #884
 8210 0bc0 0122     		movs	r2, #1
 8211 0bc2 83F84C20 		strb	r2, [r3, #76]
 8212 0bc6 07F55D73 		add	r3, r7, #884
 8213 0bca 0122     		movs	r2, #1
 8214 0bcc 83F84D20 		strb	r2, [r3, #77]
 8215 0bd0 07F55D73 		add	r3, r7, #884
 8216 0bd4 0122     		movs	r2, #1
 8217 0bd6 83F84E20 		strb	r2, [r3, #78]
 8218 0bda 07F55D73 		add	r3, r7, #884
 8219 0bde 0122     		movs	r2, #1
 8220 0be0 83F84F20 		strb	r2, [r3, #79]
 8221 0be4 07F55D73 		add	r3, r7, #884
 8222 0be8 0122     		movs	r2, #1
 8223 0bea 83F85020 		strb	r2, [r3, #80]
 8224 0bee 07F55D73 		add	r3, r7, #884
 8225 0bf2 0122     		movs	r2, #1
 8226 0bf4 83F85120 		strb	r2, [r3, #81]
 8227 0bf8 07F55D73 		add	r3, r7, #884
 8228 0bfc 0122     		movs	r2, #1
 8229 0bfe 83F85220 		strb	r2, [r3, #82]
1062:..\src/command_processing.c ****         6, 6, 1, 1,
1063:..\src/command_processing.c ****         1, 2, 1, 1,
1064:..\src/command_processing.c ****         1,
1065:..\src/command_processing.c ****         
1066:..\src/command_processing.c ****            1, 1, 1, 
1067:..\src/command_processing.c ****         1, 1, 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 192


1068:..\src/command_processing.c ****     };
1069:..\src/command_processing.c ****     
1070:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 8230              		.loc 1 1070 0
 8231 0c02 07F54873 		add	r3, r7, #800
 8232 0c06 0022     		movs	r2, #0
 8233 0c08 1A70     		strb	r2, [r3]
 8234 0c0a 97F87D35 		ldrb	r3, [r7, #1405]
 8235 0c0e 0A33     		adds	r3, r3, #10
 8236 0c10 DAB2     		uxtb	r2, r3
 8237 0c12 07F54873 		add	r3, r7, #800
 8238 0c16 5A70     		strb	r2, [r3, #1]
 8239 0c18 97F87D35 		ldrb	r3, [r7, #1405]
 8240 0c1c 0A33     		adds	r3, r3, #10
 8241 0c1e DAB2     		uxtb	r2, r3
 8242 0c20 07F54873 		add	r3, r7, #800
 8243 0c24 9A70     		strb	r2, [r3, #2]
 8244 0c26 97F87D35 		ldrb	r3, [r7, #1405]
 8245 0c2a 0A33     		adds	r3, r3, #10
 8246 0c2c DAB2     		uxtb	r2, r3
 8247 0c2e 07F54873 		add	r3, r7, #800
 8248 0c32 DA70     		strb	r2, [r3, #3]
 8249 0c34 97F87D35 		ldrb	r3, [r7, #1405]
 8250 0c38 0A33     		adds	r3, r3, #10
 8251 0c3a DAB2     		uxtb	r2, r3
 8252 0c3c 07F54873 		add	r3, r7, #800
 8253 0c40 1A71     		strb	r2, [r3, #4]
 8254 0c42 97F87D35 		ldrb	r3, [r7, #1405]
 8255 0c46 0A33     		adds	r3, r3, #10
 8256 0c48 DAB2     		uxtb	r2, r3
 8257 0c4a 07F54873 		add	r3, r7, #800
 8258 0c4e 5A71     		strb	r2, [r3, #5]
1071:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1072:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 8259              		.loc 1 1072 0
 8260 0c50 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8261 0c54 D7F88015 		ldr	r1, [r7, #1408]
 8262 0c58 1346     		mov	r3, r2
 8263 0c5a DB00     		lsls	r3, r3, #3
 8264 0c5c 9B1A     		subs	r3, r3, r2
 8265 0c5e 1B01     		lsls	r3, r3, #4
 8266 0c60 0B44     		add	r3, r3, r1
 8267 0c62 03F58873 		add	r3, r3, #272
 8268 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8269              		.loc 1 1070 0
 8270 0c68 1433     		adds	r3, r3, #20
 8271 0c6a DAB2     		uxtb	r2, r3
 8272 0c6c 07F54873 		add	r3, r7, #800
 8273 0c70 9A71     		strb	r2, [r3, #6]
 8274              		.loc 1 1072 0
 8275 0c72 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8276 0c76 D7F88015 		ldr	r1, [r7, #1408]
 8277 0c7a 1346     		mov	r3, r2
 8278 0c7c DB00     		lsls	r3, r3, #3
 8279 0c7e 9B1A     		subs	r3, r3, r2
 8280 0c80 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 193


 8281 0c82 0B44     		add	r3, r3, r1
 8282 0c84 03F58873 		add	r3, r3, #272
 8283 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8284              		.loc 1 1070 0
 8285 0c8a 1433     		adds	r3, r3, #20
 8286 0c8c DAB2     		uxtb	r2, r3
 8287 0c8e 07F54873 		add	r3, r7, #800
 8288 0c92 DA71     		strb	r2, [r3, #7]
1073:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8289              		.loc 1 1073 0
 8290 0c94 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8291 0c98 D7F88015 		ldr	r1, [r7, #1408]
 8292 0c9c 1346     		mov	r3, r2
 8293 0c9e DB00     		lsls	r3, r3, #3
 8294 0ca0 9B1A     		subs	r3, r3, r2
 8295 0ca2 1B01     		lsls	r3, r3, #4
 8296 0ca4 0B44     		add	r3, r3, r1
 8297 0ca6 03F58873 		add	r3, r3, #272
 8298 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8299              		.loc 1 1070 0
 8300 0cac 1433     		adds	r3, r3, #20
 8301 0cae DAB2     		uxtb	r2, r3
 8302 0cb0 07F54873 		add	r3, r7, #800
 8303 0cb4 1A72     		strb	r2, [r3, #8]
 8304 0cb6 97F87D35 		ldrb	r3, [r7, #1405]
 8305 0cba 0A33     		adds	r3, r3, #10
 8306 0cbc DAB2     		uxtb	r2, r3
 8307 0cbe 07F54873 		add	r3, r7, #800
 8308 0cc2 5A72     		strb	r2, [r3, #9]
 8309 0cc4 97F87D35 		ldrb	r3, [r7, #1405]
 8310 0cc8 04E0     		b	.L381
 8311              	.L382:
 8312 0cca 00BF     		.align	2
 8313              	.L380:
 8314 0ccc 4C060000 		.word	.LC0
 8315 0cd0 00000000 		.word	N_Encoder_Line_Connected
 8316              	.L381:
 8317 0cd4 0A33     		adds	r3, r3, #10
 8318 0cd6 DAB2     		uxtb	r2, r3
 8319 0cd8 07F54873 		add	r3, r7, #800
 8320 0cdc 9A72     		strb	r2, [r3, #10]
 8321 0cde 97F87D35 		ldrb	r3, [r7, #1405]
 8322 0ce2 0A33     		adds	r3, r3, #10
 8323 0ce4 DAB2     		uxtb	r2, r3
 8324 0ce6 07F54873 		add	r3, r7, #800
 8325 0cea DA72     		strb	r2, [r3, #11]
 8326 0cec 97F87D35 		ldrb	r3, [r7, #1405]
 8327 0cf0 0A33     		adds	r3, r3, #10
 8328 0cf2 DAB2     		uxtb	r2, r3
 8329 0cf4 07F54873 		add	r3, r7, #800
 8330 0cf8 1A73     		strb	r2, [r3, #12]
 8331 0cfa 07F54873 		add	r3, r7, #800
 8332 0cfe 1E22     		movs	r2, #30
 8333 0d00 5A73     		strb	r2, [r3, #13]
 8334 0d02 07F54873 		add	r3, r7, #800
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 194


 8335 0d06 1E22     		movs	r2, #30
 8336 0d08 9A73     		strb	r2, [r3, #14]
 8337 0d0a 07F54873 		add	r3, r7, #800
 8338 0d0e 1E22     		movs	r2, #30
 8339 0d10 DA73     		strb	r2, [r3, #15]
 8340 0d12 07F54873 		add	r3, r7, #800
 8341 0d16 1E22     		movs	r2, #30
 8342 0d18 1A74     		strb	r2, [r3, #16]
1074:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1075:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 8343              		.loc 1 1075 0
 8344 0d1a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8345 0d1e D7F88015 		ldr	r1, [r7, #1408]
 8346 0d22 1346     		mov	r3, r2
 8347 0d24 DB00     		lsls	r3, r3, #3
 8348 0d26 9B1A     		subs	r3, r3, r2
 8349 0d28 1B01     		lsls	r3, r3, #4
 8350 0d2a 0B44     		add	r3, r3, r1
 8351 0d2c 03F58873 		add	r3, r3, #272
 8352 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8353              		.loc 1 1070 0
 8354 0d32 1433     		adds	r3, r3, #20
 8355 0d34 DAB2     		uxtb	r2, r3
 8356 0d36 07F54873 		add	r3, r7, #800
 8357 0d3a 5A74     		strb	r2, [r3, #17]
 8358              		.loc 1 1075 0
 8359 0d3c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8360 0d40 D7F88015 		ldr	r1, [r7, #1408]
 8361 0d44 1346     		mov	r3, r2
 8362 0d46 DB00     		lsls	r3, r3, #3
 8363 0d48 9B1A     		subs	r3, r3, r2
 8364 0d4a 1B01     		lsls	r3, r3, #4
 8365 0d4c 0B44     		add	r3, r3, r1
 8366 0d4e 03F58873 		add	r3, r3, #272
 8367 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8368              		.loc 1 1070 0
 8369 0d54 1433     		adds	r3, r3, #20
 8370 0d56 DAB2     		uxtb	r2, r3
 8371 0d58 07F54873 		add	r3, r7, #800
 8372 0d5c 9A74     		strb	r2, [r3, #18]
 8373 0d5e 97F87D35 		ldrb	r3, [r7, #1405]
 8374 0d62 0A33     		adds	r3, r3, #10
 8375 0d64 DAB2     		uxtb	r2, r3
 8376 0d66 07F54873 		add	r3, r7, #800
 8377 0d6a DA74     		strb	r2, [r3, #19]
 8378 0d6c 97F87D35 		ldrb	r3, [r7, #1405]
 8379 0d70 0A33     		adds	r3, r3, #10
 8380 0d72 DAB2     		uxtb	r2, r3
 8381 0d74 07F54873 		add	r3, r7, #800
 8382 0d78 1A75     		strb	r2, [r3, #20]
 8383 0d7a 07F54873 		add	r3, r7, #800
 8384 0d7e 0022     		movs	r2, #0
 8385 0d80 5A75     		strb	r2, [r3, #21]
 8386 0d82 07F54873 		add	r3, r7, #800
 8387 0d86 4622     		movs	r2, #70
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 195


 8388 0d88 9A75     		strb	r2, [r3, #22]
 8389 0d8a 07F54873 		add	r3, r7, #800
 8390 0d8e 4622     		movs	r2, #70
 8391 0d90 DA75     		strb	r2, [r3, #23]
 8392 0d92 07F54873 		add	r3, r7, #800
 8393 0d96 4622     		movs	r2, #70
 8394 0d98 1A76     		strb	r2, [r3, #24]
 8395 0d9a 07F54873 		add	r3, r7, #800
 8396 0d9e 4622     		movs	r2, #70
 8397 0da0 5A76     		strb	r2, [r3, #25]
 8398 0da2 07F54873 		add	r3, r7, #800
 8399 0da6 1E22     		movs	r2, #30
 8400 0da8 9A76     		strb	r2, [r3, #26]
 8401 0daa 07F54873 		add	r3, r7, #800
 8402 0dae 0022     		movs	r2, #0
 8403 0db0 DA76     		strb	r2, [r3, #27]
 8404 0db2 07F54873 		add	r3, r7, #800
 8405 0db6 2822     		movs	r2, #40
 8406 0db8 1A77     		strb	r2, [r3, #28]
 8407 0dba 07F54873 		add	r3, r7, #800
 8408 0dbe 3222     		movs	r2, #50
 8409 0dc0 5A77     		strb	r2, [r3, #29]
 8410 0dc2 07F54873 		add	r3, r7, #800
 8411 0dc6 0022     		movs	r2, #0
 8412 0dc8 9A77     		strb	r2, [r3, #30]
 8413 0dca 07F54873 		add	r3, r7, #800
 8414 0dce 3222     		movs	r2, #50
 8415 0dd0 DA77     		strb	r2, [r3, #31]
 8416 0dd2 07F54873 		add	r3, r7, #800
 8417 0dd6 2822     		movs	r2, #40
 8418 0dd8 83F82020 		strb	r2, [r3, #32]
 8419 0ddc 07F54873 		add	r3, r7, #800
 8420 0de0 2822     		movs	r2, #40
 8421 0de2 83F82120 		strb	r2, [r3, #33]
 8422 0de6 07F54873 		add	r3, r7, #800
 8423 0dea 0022     		movs	r2, #0
 8424 0dec 83F82220 		strb	r2, [r3, #34]
1076:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1077:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1078:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1079:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 8425              		.loc 1 1079 0
 8426 0df0 D7F88035 		ldr	r3, [r7, #1408]
 8427 0df4 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8428              		.loc 1 1070 0
 8429 0df8 3C33     		adds	r3, r3, #60
 8430 0dfa DAB2     		uxtb	r2, r3
 8431 0dfc 07F54873 		add	r3, r7, #800
 8432 0e00 83F82320 		strb	r2, [r3, #35]
 8433 0e04 97F87D35 		ldrb	r3, [r7, #1405]
 8434 0e08 0A33     		adds	r3, r3, #10
 8435 0e0a DAB2     		uxtb	r2, r3
 8436 0e0c 07F54873 		add	r3, r7, #800
 8437 0e10 83F82420 		strb	r2, [r3, #36]
 8438 0e14 97F87D35 		ldrb	r3, [r7, #1405]
 8439 0e18 0A33     		adds	r3, r3, #10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 196


 8440 0e1a DAB2     		uxtb	r2, r3
 8441 0e1c 07F54873 		add	r3, r7, #800
 8442 0e20 83F82520 		strb	r2, [r3, #37]
 8443 0e24 97F87D35 		ldrb	r3, [r7, #1405]
 8444 0e28 0A33     		adds	r3, r3, #10
 8445 0e2a DAB2     		uxtb	r2, r3
 8446 0e2c 07F54873 		add	r3, r7, #800
 8447 0e30 83F82620 		strb	r2, [r3, #38]
 8448 0e34 97F87D35 		ldrb	r3, [r7, #1405]
 8449 0e38 0A33     		adds	r3, r3, #10
 8450 0e3a DAB2     		uxtb	r2, r3
 8451 0e3c 07F54873 		add	r3, r7, #800
 8452 0e40 83F82720 		strb	r2, [r3, #39]
1080:..\src/command_processing.c ****         
1081:..\src/command_processing.c ****         // GENERIC PARAMS
1082:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1083:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8453              		.loc 1 1083 0
 8454 0e44 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8455 0e48 D7F88015 		ldr	r1, [r7, #1408]
 8456 0e4c 1346     		mov	r3, r2
 8457 0e4e DB00     		lsls	r3, r3, #3
 8458 0e50 9B1A     		subs	r3, r3, r2
 8459 0e52 1B01     		lsls	r3, r3, #4
 8460 0e54 0B44     		add	r3, r3, r1
 8461 0e56 03F58873 		add	r3, r3, #272
 8462 0e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8463              		.loc 1 1070 0
 8464 0e5c 1433     		adds	r3, r3, #20
 8465 0e5e DAB2     		uxtb	r2, r3
 8466 0e60 07F54873 		add	r3, r7, #800
 8467 0e64 83F82820 		strb	r2, [r3, #40]
 8468              		.loc 1 1083 0
 8469 0e68 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8470 0e6c D7F88015 		ldr	r1, [r7, #1408]
 8471 0e70 1346     		mov	r3, r2
 8472 0e72 DB00     		lsls	r3, r3, #3
 8473 0e74 9B1A     		subs	r3, r3, r2
 8474 0e76 1B01     		lsls	r3, r3, #4
 8475 0e78 0B44     		add	r3, r3, r1
 8476 0e7a 03F58873 		add	r3, r3, #272
 8477 0e7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8478              		.loc 1 1070 0
 8479 0e80 1433     		adds	r3, r3, #20
 8480 0e82 DAB2     		uxtb	r2, r3
 8481 0e84 07F54873 		add	r3, r7, #800
 8482 0e88 83F82920 		strb	r2, [r3, #41]
 8483 0e8c 07F54873 		add	r3, r7, #800
 8484 0e90 0022     		movs	r2, #0
 8485 0e92 83F82A20 		strb	r2, [r3, #42]
 8486 0e96 97F87C35 		ldrb	r3, [r7, #1404]
 8487 0e9a 0A33     		adds	r3, r3, #10
 8488 0e9c DAB2     		uxtb	r2, r3
 8489 0e9e 07F54873 		add	r3, r7, #800
 8490 0ea2 83F82B20 		strb	r2, [r3, #43]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 197


 8491 0ea6 97F87C35 		ldrb	r3, [r7, #1404]
 8492 0eaa 0A33     		adds	r3, r3, #10
 8493 0eac DAB2     		uxtb	r2, r3
 8494 0eae 07F54873 		add	r3, r7, #800
 8495 0eb2 83F82C20 		strb	r2, [r3, #44]
 8496 0eb6 97F87C35 		ldrb	r3, [r7, #1404]
 8497 0eba 0A33     		adds	r3, r3, #10
 8498 0ebc DAB2     		uxtb	r2, r3
 8499 0ebe 07F54873 		add	r3, r7, #800
 8500 0ec2 83F82D20 		strb	r2, [r3, #45]
 8501 0ec6 97F87C35 		ldrb	r3, [r7, #1404]
 8502 0eca 0A33     		adds	r3, r3, #10
 8503 0ecc DAB2     		uxtb	r2, r3
 8504 0ece 07F54873 		add	r3, r7, #800
 8505 0ed2 83F82E20 		strb	r2, [r3, #46]
 8506 0ed6 97F87C35 		ldrb	r3, [r7, #1404]
 8507 0eda 0A33     		adds	r3, r3, #10
 8508 0edc DAB2     		uxtb	r2, r3
 8509 0ede 07F54873 		add	r3, r7, #800
 8510 0ee2 83F82F20 		strb	r2, [r3, #47]
1084:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1085:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8511              		.loc 1 1085 0
 8512 0ee6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8513 0eea D7F88015 		ldr	r1, [r7, #1408]
 8514 0eee 1346     		mov	r3, r2
 8515 0ef0 DB00     		lsls	r3, r3, #3
 8516 0ef2 9B1A     		subs	r3, r3, r2
 8517 0ef4 1B01     		lsls	r3, r3, #4
 8518 0ef6 0B44     		add	r3, r3, r1
 8519 0ef8 03F58873 		add	r3, r3, #272
 8520 0efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8521              		.loc 1 1070 0
 8522 0efe 1433     		adds	r3, r3, #20
 8523 0f00 DAB2     		uxtb	r2, r3
 8524 0f02 07F54873 		add	r3, r7, #800
 8525 0f06 83F83020 		strb	r2, [r3, #48]
 8526              		.loc 1 1085 0
 8527 0f0a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8528 0f0e D7F88015 		ldr	r1, [r7, #1408]
 8529 0f12 1346     		mov	r3, r2
 8530 0f14 DB00     		lsls	r3, r3, #3
 8531 0f16 9B1A     		subs	r3, r3, r2
 8532 0f18 1B01     		lsls	r3, r3, #4
 8533 0f1a 0B44     		add	r3, r3, r1
 8534 0f1c 03F58873 		add	r3, r3, #272
 8535 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8536              		.loc 1 1070 0
 8537 0f22 1433     		adds	r3, r3, #20
 8538 0f24 DAB2     		uxtb	r2, r3
 8539 0f26 07F54873 		add	r3, r7, #800
 8540 0f2a 83F83120 		strb	r2, [r3, #49]
 8541              		.loc 1 1085 0
 8542 0f2e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8543 0f32 D7F88015 		ldr	r1, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 198


 8544 0f36 1346     		mov	r3, r2
 8545 0f38 DB00     		lsls	r3, r3, #3
 8546 0f3a 9B1A     		subs	r3, r3, r2
 8547 0f3c 1B01     		lsls	r3, r3, #4
 8548 0f3e 0B44     		add	r3, r3, r1
 8549 0f40 03F58873 		add	r3, r3, #272
 8550 0f44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8551              		.loc 1 1070 0
 8552 0f46 1433     		adds	r3, r3, #20
 8553 0f48 DAB2     		uxtb	r2, r3
 8554 0f4a 07F54873 		add	r3, r7, #800
 8555 0f4e 83F83220 		strb	r2, [r3, #50]
 8556 0f52 97F87C35 		ldrb	r3, [r7, #1404]
 8557 0f56 0A33     		adds	r3, r3, #10
 8558 0f58 DAB2     		uxtb	r2, r3
 8559 0f5a 07F54873 		add	r3, r7, #800
 8560 0f5e 83F83320 		strb	r2, [r3, #51]
 8561 0f62 97F87C35 		ldrb	r3, [r7, #1404]
 8562 0f66 0A33     		adds	r3, r3, #10
 8563 0f68 DAB2     		uxtb	r2, r3
 8564 0f6a 07F54873 		add	r3, r7, #800
 8565 0f6e 83F83420 		strb	r2, [r3, #52]
 8566 0f72 97F87C35 		ldrb	r3, [r7, #1404]
 8567 0f76 0A33     		adds	r3, r3, #10
 8568 0f78 DAB2     		uxtb	r2, r3
 8569 0f7a 07F54873 		add	r3, r7, #800
 8570 0f7e 83F83520 		strb	r2, [r3, #53]
 8571 0f82 97F87C35 		ldrb	r3, [r7, #1404]
 8572 0f86 0A33     		adds	r3, r3, #10
 8573 0f88 DAB2     		uxtb	r2, r3
 8574 0f8a 07F54873 		add	r3, r7, #800
 8575 0f8e 83F83620 		strb	r2, [r3, #54]
1086:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8576              		.loc 1 1086 0
 8577 0f92 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8578 0f96 D7F88015 		ldr	r1, [r7, #1408]
 8579 0f9a 1346     		mov	r3, r2
 8580 0f9c DB00     		lsls	r3, r3, #3
 8581 0f9e 9B1A     		subs	r3, r3, r2
 8582 0fa0 1B01     		lsls	r3, r3, #4
 8583 0fa2 0B44     		add	r3, r3, r1
 8584 0fa4 03F58873 		add	r3, r3, #272
 8585 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8586              		.loc 1 1070 0
 8587 0faa 1433     		adds	r3, r3, #20
 8588 0fac DAB2     		uxtb	r2, r3
 8589 0fae 07F54873 		add	r3, r7, #800
 8590 0fb2 83F83720 		strb	r2, [r3, #55]
1087:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8591              		.loc 1 1087 0
 8592 0fb6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8593 0fba D7F88015 		ldr	r1, [r7, #1408]
 8594 0fbe 1346     		mov	r3, r2
 8595 0fc0 DB00     		lsls	r3, r3, #3
 8596 0fc2 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 199


 8597 0fc4 1B01     		lsls	r3, r3, #4
 8598 0fc6 0B44     		add	r3, r3, r1
 8599 0fc8 03F58873 		add	r3, r3, #272
 8600 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8601              		.loc 1 1070 0
 8602 0fce 1433     		adds	r3, r3, #20
 8603 0fd0 DAB2     		uxtb	r2, r3
 8604 0fd2 07F54873 		add	r3, r7, #800
 8605 0fd6 83F83820 		strb	r2, [r3, #56]
 8606 0fda 97F87C35 		ldrb	r3, [r7, #1404]
 8607 0fde 0A33     		adds	r3, r3, #10
 8608 0fe0 DAB2     		uxtb	r2, r3
 8609 0fe2 07F54873 		add	r3, r7, #800
 8610 0fe6 83F83920 		strb	r2, [r3, #57]
 8611 0fea 97F87C35 		ldrb	r3, [r7, #1404]
 8612 0fee 0A33     		adds	r3, r3, #10
 8613 0ff0 DAB2     		uxtb	r2, r3
 8614 0ff2 07F54873 		add	r3, r7, #800
 8615 0ff6 83F83A20 		strb	r2, [r3, #58]
 8616 0ffa 97F87C35 		ldrb	r3, [r7, #1404]
 8617 0ffe 0A33     		adds	r3, r3, #10
 8618 1000 DAB2     		uxtb	r2, r3
 8619 1002 07F54873 		add	r3, r7, #800
 8620 1006 83F83B20 		strb	r2, [r3, #59]
 8621 100a 97F87C35 		ldrb	r3, [r7, #1404]
 8622 100e 0A33     		adds	r3, r3, #10
 8623 1010 DAB2     		uxtb	r2, r3
 8624 1012 07F54873 		add	r3, r7, #800
 8625 1016 83F83C20 		strb	r2, [r3, #60]
 8626 101a 97F87C35 		ldrb	r3, [r7, #1404]
 8627 101e 0A33     		adds	r3, r3, #10
 8628 1020 DAB2     		uxtb	r2, r3
 8629 1022 07F54873 		add	r3, r7, #800
 8630 1026 83F83D20 		strb	r2, [r3, #61]
 8631 102a 97F87C35 		ldrb	r3, [r7, #1404]
 8632 102e 0A33     		adds	r3, r3, #10
 8633 1030 DAB2     		uxtb	r2, r3
 8634 1032 07F54873 		add	r3, r7, #800
 8635 1036 83F83E20 		strb	r2, [r3, #62]
1088:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8636              		.loc 1 1088 0
 8637 103a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8638 103e D7F88015 		ldr	r1, [r7, #1408]
 8639 1042 1346     		mov	r3, r2
 8640 1044 DB00     		lsls	r3, r3, #3
 8641 1046 9B1A     		subs	r3, r3, r2
 8642 1048 1B01     		lsls	r3, r3, #4
 8643 104a 0B44     		add	r3, r3, r1
 8644 104c 03F58873 		add	r3, r3, #272
 8645 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8646              		.loc 1 1070 0
 8647 1052 1433     		adds	r3, r3, #20
 8648 1054 DAB2     		uxtb	r2, r3
 8649 1056 07F54873 		add	r3, r7, #800
 8650 105a 83F83F20 		strb	r2, [r3, #63]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 200


1089:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8651              		.loc 1 1089 0
 8652 105e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8653 1062 D7F88015 		ldr	r1, [r7, #1408]
 8654 1066 1346     		mov	r3, r2
 8655 1068 DB00     		lsls	r3, r3, #3
 8656 106a 9B1A     		subs	r3, r3, r2
 8657 106c 1B01     		lsls	r3, r3, #4
 8658 106e 0B44     		add	r3, r3, r1
 8659 1070 03F58873 		add	r3, r3, #272
 8660 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8661              		.loc 1 1070 0
 8662 1076 1433     		adds	r3, r3, #20
 8663 1078 DAB2     		uxtb	r2, r3
 8664 107a 07F54873 		add	r3, r7, #800
 8665 107e 83F84020 		strb	r2, [r3, #64]
 8666 1082 07F54873 		add	r3, r7, #800
 8667 1086 1422     		movs	r2, #20
 8668 1088 83F84120 		strb	r2, [r3, #65]
 8669 108c 07F54873 		add	r3, r7, #800
 8670 1090 1522     		movs	r2, #21
 8671 1092 83F84220 		strb	r2, [r3, #66]
 8672 1096 07F54873 		add	r3, r7, #800
 8673 109a 3222     		movs	r2, #50
 8674 109c 83F84320 		strb	r2, [r3, #67]
 8675 10a0 07F54873 		add	r3, r7, #800
 8676 10a4 3222     		movs	r2, #50
 8677 10a6 83F84420 		strb	r2, [r3, #68]
 8678 10aa 07F54873 		add	r3, r7, #800
 8679 10ae 3222     		movs	r2, #50
 8680 10b0 83F84520 		strb	r2, [r3, #69]
 8681 10b4 07F54873 		add	r3, r7, #800
 8682 10b8 3222     		movs	r2, #50
 8683 10ba 83F84620 		strb	r2, [r3, #70]
 8684 10be 07F54873 		add	r3, r7, #800
 8685 10c2 6E22     		movs	r2, #110
 8686 10c4 83F84720 		strb	r2, [r3, #71]
 8687 10c8 07F54873 		add	r3, r7, #800
 8688 10cc 6E22     		movs	r2, #110
 8689 10ce 83F84820 		strb	r2, [r3, #72]
 8690 10d2 07F54873 		add	r3, r7, #800
 8691 10d6 6E22     		movs	r2, #110
 8692 10d8 83F84920 		strb	r2, [r3, #73]
 8693 10dc 07F54873 		add	r3, r7, #800
 8694 10e0 0022     		movs	r2, #0
 8695 10e2 83F84A20 		strb	r2, [r3, #74]
 8696 10e6 07F54873 		add	r3, r7, #800
 8697 10ea 6422     		movs	r2, #100
 8698 10ec 83F84B20 		strb	r2, [r3, #75]
 8699 10f0 07F54873 		add	r3, r7, #800
 8700 10f4 5A22     		movs	r2, #90
 8701 10f6 83F84C20 		strb	r2, [r3, #76]
 8702 10fa 07F54873 		add	r3, r7, #800
 8703 10fe 5A22     		movs	r2, #90
 8704 1100 83F84D20 		strb	r2, [r3, #77]
 8705 1104 07F54873 		add	r3, r7, #800
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 201


 8706 1108 5022     		movs	r2, #80
 8707 110a 83F84E20 		strb	r2, [r3, #78]
 8708 110e 07F54873 		add	r3, r7, #800
 8709 1112 5022     		movs	r2, #80
 8710 1114 83F84F20 		strb	r2, [r3, #79]
 8711 1118 07F54873 		add	r3, r7, #800
 8712 111c 5A22     		movs	r2, #90
 8713 111e 83F85020 		strb	r2, [r3, #80]
 8714 1122 07F54873 		add	r3, r7, #800
 8715 1126 5A22     		movs	r2, #90
 8716 1128 83F85120 		strb	r2, [r3, #81]
 8717 112c 07F54873 		add	r3, r7, #800
 8718 1130 5A22     		movs	r2, #90
 8719 1132 83F85220 		strb	r2, [r3, #82]
1090:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC,
1091:..\src/command_processing.c ****         ST_JOY_SPEC, ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, 
1092:..\src/command_processing.c ****         ST_FB_SPEC,
1093:..\src/command_processing.c ****         
1094:..\src/command_processing.c ****                     ST_FB_SPEC, ST_MS_SPEC, ST_MS_SPEC,
1095:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
1096:..\src/command_processing.c ****         
1097:..\src/command_processing.c ****     };
1098:..\src/command_processing.c ****     
1099:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8720              		.loc 1 1099 0
 8721 1136 07F5EA73 		add	r3, r7, #468
 8722 113a D04A     		ldr	r2, .L383
 8723 113c 1846     		mov	r0, r3
 8724 113e 1146     		mov	r1, r2
 8725 1140 4FF4A673 		mov	r3, #332
 8726 1144 1A46     		mov	r2, r3
 8727 1146 FFF7FEFF 		bl	memcpy
1100:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1101:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1102:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1103:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1104:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1105:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1106:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1107:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1108:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1109:..\src/command_processing.c ****         
1110:..\src/command_processing.c ****         // GENERIC PARAMS
1111:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1112:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1113:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1114:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1115:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1116:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1117:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1118:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1119:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Record EMG on SD card:", "72 -
1120:..\src/command_processing.c ****         "73 - Joystick threshold:", "74 - Joystick gains:", "75 - Device type:", "76 - EMG FSM act.
1121:..\src/command_processing.c ****         "77 - Air Chamber Feedback:",
1122:..\src/command_processing.c ****         
1123:..\src/command_processing.c ****                                      "78 - Vibrotactile Feedback:", "79 - Master Mode:", "80 - Slav
1124:..\src/command_processing.c ****         "81 - Maximum slave residual current:", "82 - Maximum pressure feedback (kPa):", "83 - Prop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 202


1125:..\src/command_processing.c ****     };
1126:..\src/command_processing.c **** 
1127:..\src/command_processing.c ****     //Parameters menu
1128:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8728              		.loc 1 1128 0
 8729 114a 07F5AE73 		add	r3, r7, #348
 8730 114e 0022     		movs	r2, #0
 8731 1150 1A60     		str	r2, [r3]
 8732 1152 0433     		adds	r3, r3, #4
 8733 1154 7222     		movs	r2, #114
 8734 1156 0021     		movs	r1, #0
 8735 1158 1846     		mov	r0, r3
 8736 115a FFF7FEFF 		bl	memset
1129:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8737              		.loc 1 1129 0
 8738 115e 07F5AE70 		add	r0, r7, #348
 8739 1162 6423     		movs	r3, #100
 8740 1164 0A22     		movs	r2, #10
 8741 1166 C649     		ldr	r1, .L383+4
 8742 1168 FFF7FEFF 		bl	sprintf
1130:..\src/command_processing.c **** 
1131:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 8743              		.loc 1 1131 0
 8744 116c 07F59273 		add	r3, r7, #292
 8745 1170 0022     		movs	r2, #0
 8746 1172 1A60     		str	r2, [r3]
 8747 1174 0433     		adds	r3, r3, #4
 8748 1176 3422     		movs	r2, #52
 8749 1178 0021     		movs	r1, #0
 8750 117a 1846     		mov	r0, r3
 8751 117c FFF7FEFF 		bl	memset
1132:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 8752              		.loc 1 1132 0
 8753 1180 D7F88035 		ldr	r3, [r7, #1408]
 8754 1184 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8755 1188 042B     		cmp	r3, #4
 8756 118a 10D1     		bne	.L314
1133:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 8757              		.loc 1 1133 0
 8758 118c 07F59273 		add	r3, r7, #292
 8759 1190 BC4A     		ldr	r2, .L383+8
 8760 1192 1C46     		mov	r4, r3
 8761 1194 1546     		mov	r5, r2
 8762 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8763 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8764 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8765 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8766 119e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8767 11a0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8768 11a2 95E80300 		ldmia	r5, {r0, r1}
 8769 11a6 2060     		str	r0, [r4]
 8770 11a8 0434     		adds	r4, r4, #4
 8771 11aa 2170     		strb	r1, [r4]
 8772 11ac 0FE0     		b	.L315
 8773              	.L314:
1134:..\src/command_processing.c ****     }
1135:..\src/command_processing.c ****     else {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 203


1136:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist,Slow:hand\n1 -> Slow:wrist,Fast:hand\n")
 8774              		.loc 1 1136 0
 8775 11ae 07F59273 		add	r3, r7, #292
 8776 11b2 B54A     		ldr	r2, .L383+12
 8777 11b4 1C46     		mov	r4, r3
 8778 11b6 1546     		mov	r5, r2
 8779 11b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8780 11ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8781 11bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8782 11be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8783 11c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8784 11c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8785 11c4 95E80300 		ldmia	r5, {r0, r1}
 8786 11c8 2060     		str	r0, [r4]
 8787 11ca 0434     		adds	r4, r4, #4
 8788 11cc 2170     		strb	r1, [r4]
 8789              	.L315:
1137:..\src/command_processing.c ****     }
1138:..\src/command_processing.c ****     
1139:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8790              		.loc 1 1139 0
 8791 11ce 07F1F403 		add	r3, r7, #244
 8792 11d2 AE4A     		ldr	r2, .L383+16
 8793 11d4 1A60     		str	r2, [r3]
 8794 11d6 07F1F403 		add	r3, r7, #244
 8795 11da AD4A     		ldr	r2, .L383+20
 8796 11dc 5A60     		str	r2, [r3, #4]
 8797 11de 07F1F403 		add	r3, r7, #244
 8798 11e2 AC4A     		ldr	r2, .L383+24
 8799 11e4 9A60     		str	r2, [r3, #8]
 8800 11e6 07F1F403 		add	r3, r7, #244
 8801 11ea AB4A     		ldr	r2, .L383+28
 8802 11ec DA60     		str	r2, [r3, #12]
 8803 11ee 07F1F403 		add	r3, r7, #244
 8804 11f2 AA4A     		ldr	r2, .L383+32
 8805 11f4 1A61     		str	r2, [r3, #16]
 8806 11f6 07F1F403 		add	r3, r7, #244
 8807 11fa A94A     		ldr	r2, .L383+36
 8808 11fc 5A61     		str	r2, [r3, #20]
 8809 11fe 07F1F403 		add	r3, r7, #244
 8810 1202 07F5AE72 		add	r2, r7, #348
 8811 1206 9A61     		str	r2, [r3, #24]
 8812 1208 07F1F403 		add	r3, r7, #244
 8813 120c A54A     		ldr	r2, .L383+40
 8814 120e DA61     		str	r2, [r3, #28]
 8815 1210 07F1F403 		add	r3, r7, #244
 8816 1214 A44A     		ldr	r2, .L383+44
 8817 1216 1A62     		str	r2, [r3, #32]
 8818 1218 07F1F403 		add	r3, r7, #244
 8819 121c A34A     		ldr	r2, .L383+48
 8820 121e 5A62     		str	r2, [r3, #36]
 8821 1220 07F1F403 		add	r3, r7, #244
 8822 1224 07F59272 		add	r2, r7, #292
 8823 1228 9A62     		str	r2, [r3, #40]
 8824 122a 07F1F403 		add	r3, r7, #244
 8825 122e A04A     		ldr	r2, .L383+52
 8826 1230 DA62     		str	r2, [r3, #44]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 204


1140:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1141:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1142:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1143:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1144:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1145:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1146:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1147:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> R01\nThe board will reset\n",                         
1148:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\n2 -> ESC (Brushless)\nThe board will r
1149:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1150:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1151:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1152:..\src/command_processing.c ****     };   
1153:..\src/command_processing.c ****     
1154:..\src/command_processing.c ****     uint8 NUM_MENU[33] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8827              		.loc 1 1154 0
 8828 1232 07F1D003 		add	r3, r7, #208
 8829 1236 9F4A     		ldr	r2, .L383+56
 8830 1238 1446     		mov	r4, r2
 8831 123a 1E46     		mov	r6, r3
 8832 123c 04F1200E 		add	lr, r4, #32
 8833              	.L316:
 8834 1240 3546     		mov	r5, r6
 8835 1242 2346     		mov	r3, r4
 8836 1244 1868     		ldr	r0, [r3]	@ unaligned
 8837 1246 5968     		ldr	r1, [r3, #4]	@ unaligned
 8838 1248 9A68     		ldr	r2, [r3, #8]	@ unaligned
 8839 124a DB68     		ldr	r3, [r3, #12]	@ unaligned
 8840 124c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 8841 124e 1034     		adds	r4, r4, #16
 8842 1250 1036     		adds	r6, r6, #16
 8843 1252 7445     		cmp	r4, lr
 8844 1254 F4D1     		bne	.L316
 8845 1256 3346     		mov	r3, r6
 8846 1258 2246     		mov	r2, r4
 8847 125a 1278     		ldrb	r2, [r2]
 8848 125c 1A70     		strb	r2, [r3]
1155:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8849              		.loc 1 1155 0
 8850 125e 07F1C403 		add	r3, r7, #196
 8851 1262 954A     		ldr	r2, .L383+60
 8852 1264 1068     		ldr	r0, [r2]	@ unaligned
 8853 1266 5168     		ldr	r1, [r2, #4]	@ unaligned
 8854 1268 03C3     		stmia	r3!, {r0, r1}
 8855 126a 127A     		ldrb	r2, [r2, #8]
 8856 126c 1A70     		strb	r2, [r3]
1156:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8857              		.loc 1 1156 0
 8858 126e 07F1B003 		add	r3, r7, #176
 8859 1272 924A     		ldr	r2, .L383+64
 8860 1274 1C46     		mov	r4, r3
 8861 1276 1546     		mov	r5, r2
 8862 1278 2868     		ldr	r0, [r5]	@ unaligned
 8863 127a 6968     		ldr	r1, [r5, #4]	@ unaligned
 8864 127c AA68     		ldr	r2, [r5, #8]	@ unaligned
 8865 127e EB68     		ldr	r3, [r5, #12]	@ unaligned
 8866 1280 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 205


 8867 1282 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8868 1284 2380     		strh	r3, [r4]	@ unaligned
1157:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8869              		.loc 1 1157 0
 8870 1286 2323     		movs	r3, #35
 8871 1288 87F87B35 		strb	r3, [r7, #1403]
1158:..\src/command_processing.c **** 
1159:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1160:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1161:..\src/command_processing.c ****     
1162:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1163:..\src/command_processing.c **** 
1164:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1165:..\src/command_processing.c ****     
1166:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1167:..\src/command_processing.c ****     j = 0;
 8872              		.loc 1 1167 0
 8873 128c 0023     		movs	r3, #0
 8874 128e 87F88635 		strb	r3, [r7, #1414]
1168:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8875              		.loc 1 1168 0
 8876 1292 0023     		movs	r3, #0
 8877 1294 87F88735 		strb	r3, [r7, #1415]
 8878 1298 21E0     		b	.L317
 8879              	.L320:
1169:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8880              		.loc 1 1169 0
 8881 129a 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8882 129e 07F1C402 		add	r2, r7, #196
 8883 12a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8884 12a4 1A46     		mov	r2, r3
 8885 12a6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8886 12aa 0133     		adds	r3, r3, #1
 8887 12ac 9A42     		cmp	r2, r3
 8888 12ae 0BD1     		bne	.L318
1170:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8889              		.loc 1 1170 0
 8890 12b0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8891 12b4 07F15C02 		add	r2, r7, #92
 8892 12b8 0121     		movs	r1, #1
 8893 12ba D154     		strb	r1, [r2, r3]
1171:..\src/command_processing.c ****             j++;
 8894              		.loc 1 1171 0
 8895 12bc 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8896 12c0 0133     		adds	r3, r3, #1
 8897 12c2 87F88635 		strb	r3, [r7, #1414]
 8898 12c6 05E0     		b	.L319
 8899              	.L318:
1172:..\src/command_processing.c ****         }
1173:..\src/command_processing.c ****         else {
1174:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8900              		.loc 1 1174 0
 8901 12c8 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8902 12cc 07F15C02 		add	r2, r7, #92
 8903 12d0 0021     		movs	r1, #0
 8904 12d2 D154     		strb	r1, [r2, r3]
 8905              	.L319:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 206


1168:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8906              		.loc 1 1168 0 discriminator 2
 8907 12d4 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8908 12d8 0133     		adds	r3, r3, #1
 8909 12da 87F88735 		strb	r3, [r7, #1415]
 8910              	.L317:
1168:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8911              		.loc 1 1168 0 is_stmt 0 discriminator 1
 8912 12de 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8913 12e2 522B     		cmp	r3, #82
 8914 12e4 D9D9     		bls	.L320
1175:..\src/command_processing.c ****         }
1176:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1177:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1178:..\src/command_processing.c ****     j = 0;
 8915              		.loc 1 1178 0 is_stmt 1
 8916 12e6 0023     		movs	r3, #0
 8917 12e8 87F88635 		strb	r3, [r7, #1414]
1179:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8918              		.loc 1 1179 0
 8919 12ec 0023     		movs	r3, #0
 8920 12ee 87F88735 		strb	r3, [r7, #1415]
 8921 12f2 21E0     		b	.L321
 8922              	.L324:
1180:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8923              		.loc 1 1180 0
 8924 12f4 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8925 12f8 07F1B002 		add	r2, r7, #176
 8926 12fc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8927 12fe 1A46     		mov	r2, r3
 8928 1300 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8929 1304 0133     		adds	r3, r3, #1
 8930 1306 9A42     		cmp	r2, r3
 8931 1308 0BD1     		bne	.L322
1181:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8932              		.loc 1 1181 0
 8933 130a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8934 130e 07F10802 		add	r2, r7, #8
 8935 1312 0121     		movs	r1, #1
 8936 1314 D154     		strb	r1, [r2, r3]
1182:..\src/command_processing.c ****             j++;
 8937              		.loc 1 1182 0
 8938 1316 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8939 131a 0133     		adds	r3, r3, #1
 8940 131c 87F88635 		strb	r3, [r7, #1414]
 8941 1320 05E0     		b	.L323
 8942              	.L322:
1183:..\src/command_processing.c ****         }
1184:..\src/command_processing.c ****         else {
1185:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8943              		.loc 1 1185 0
 8944 1322 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8945 1326 07F10802 		add	r2, r7, #8
 8946 132a 0021     		movs	r1, #0
 8947 132c D154     		strb	r1, [r2, r3]
 8948              	.L323:
1179:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 207


 8949              		.loc 1 1179 0 discriminator 2
 8950 132e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8951 1332 0133     		adds	r3, r3, #1
 8952 1334 87F88735 		strb	r3, [r7, #1415]
 8953              	.L321:
1179:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8954              		.loc 1 1179 0 is_stmt 0 discriminator 1
 8955 1338 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8956 133c 522B     		cmp	r3, #82
 8957 133e D9D9     		bls	.L324
1186:..\src/command_processing.c ****         }
1187:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1188:..\src/command_processing.c ****         
1189:..\src/command_processing.c ****     if (!index) {
 8958              		.loc 1 1189 0 is_stmt 1
 8959 1340 BB1D     		adds	r3, r7, #6
 8960 1342 1B88     		ldrh	r3, [r3]
 8961 1344 002B     		cmp	r3, #0
 8962 1346 17D1     		bne	.L325
1190:..\src/command_processing.c ****         // Get parameters list with relative types
1191:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8963              		.loc 1 1191 0
 8964 1348 07F54874 		add	r4, r7, #800
 8965 134c 07F55D72 		add	r2, r7, #884
 8966 1350 07F57271 		add	r1, r7, #968
 8967 1354 07F21C40 		addw	r0, r7, #1052
 8968 1358 07F1F403 		add	r3, r7, #244
 8969 135c 0393     		str	r3, [sp, #12]
 8970 135e 07F15C03 		add	r3, r7, #92
 8971 1362 0293     		str	r3, [sp, #8]
 8972 1364 07F5EA73 		add	r3, r7, #468
 8973 1368 0193     		str	r3, [sp, #4]
 8974 136a 07F1D003 		add	r3, r7, #208
 8975 136e 0093     		str	r3, [sp]
 8976 1370 2346     		mov	r3, r4
 8977 1372 FFF7FEFF 		bl	get_param_list
1192:..\src/command_processing.c ****     }
1193:..\src/command_processing.c ****     else {
1194:..\src/command_processing.c ****         // Set specific parameter        
1195:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1196:..\src/command_processing.c ****         
1197:..\src/command_processing.c ****         // Find size of data
1198:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1199:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1200:..\src/command_processing.c ****                 sod = 1; break;
1201:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1202:..\src/command_processing.c ****                 sod = 2; break;
1203:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1204:..\src/command_processing.c ****                 sod = 4; break;
1205:..\src/command_processing.c ****         }   
1206:..\src/command_processing.c ****             
1207:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1208:..\src/command_processing.c ****             // Use default specifications for param setting
1209:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1210:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1211:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1212:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 208


1213:..\src/command_processing.c ****                     }
1214:..\src/command_processing.c ****                     break;                
1215:..\src/command_processing.c ****                 case TYPE_STRING:
1216:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1217:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1218:..\src/command_processing.c ****                     }
1219:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1220:..\src/command_processing.c ****                 break; 
1221:..\src/command_processing.c ****                 case TYPE_INT8:
1222:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1223:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1224:..\src/command_processing.c ****                     }
1225:..\src/command_processing.c ****                     break;                    
1226:..\src/command_processing.c ****                 case TYPE_INT16:
1227:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1228:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1229:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1230:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1231:..\src/command_processing.c ****                         }
1232:..\src/command_processing.c ****                     }                   
1233:..\src/command_processing.c ****                     break;
1234:..\src/command_processing.c ****                 case TYPE_UINT16:
1235:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1236:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1237:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1238:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1239:..\src/command_processing.c ****                         }
1240:..\src/command_processing.c ****                     }
1241:..\src/command_processing.c ****                     break;
1242:..\src/command_processing.c ****                 case TYPE_INT32:
1243:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1244:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1245:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1246:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1247:..\src/command_processing.c ****                         }
1248:..\src/command_processing.c ****                     }
1249:..\src/command_processing.c ****                     break;
1250:..\src/command_processing.c ****                 case TYPE_UINT32:
1251:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1252:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1253:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1254:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1255:..\src/command_processing.c ****                         }
1256:..\src/command_processing.c ****                     }
1257:..\src/command_processing.c ****                     break;
1258:..\src/command_processing.c ****                 case TYPE_FLOAT:
1259:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1260:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1261:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1262:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1263:..\src/command_processing.c ****                         }
1264:..\src/command_processing.c ****                     }
1265:..\src/command_processing.c ****                     break;
1266:..\src/command_processing.c ****                 default:
1267:..\src/command_processing.c ****                     break;
1268:..\src/command_processing.c ****             }
1269:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 209


1270:..\src/command_processing.c ****         else {  
1271:..\src/command_processing.c ****             // Use custom specifications for param setting
1272:..\src/command_processing.c ****             set_custom_param(index);
1273:..\src/command_processing.c ****         }
1274:..\src/command_processing.c ****         
1275:..\src/command_processing.c ****         // Store param also in user_emg structure
1276:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1277:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1278:..\src/command_processing.c ****         }
1279:..\src/command_processing.c ****         
1280:..\src/command_processing.c ****         // Perform chip reset if needed
1281:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1282:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1283:..\src/command_processing.c ****             do {
1284:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1285:..\src/command_processing.c ****                 idx++;
1286:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1287:..\src/command_processing.c ****             
1288:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1289:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1290:..\src/command_processing.c ****             }   
1291:..\src/command_processing.c ****         }
1292:..\src/command_processing.c ****     }
1293:..\src/command_processing.c **** } 
 8978              		.loc 1 1293 0
 8979 1376 DFE2     		b	.L376
 8980              	.L325:
1195:..\src/command_processing.c ****         
 8981              		.loc 1 1195 0
 8982 1378 BB1D     		adds	r3, r7, #6
 8983 137a 1B88     		ldrh	r3, [r3]	@ movhi
 8984 137c DBB2     		uxtb	r3, r3
 8985 137e 013B     		subs	r3, r3, #1
 8986 1380 87F87A35 		strb	r3, [r7, #1402]
1198:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8987              		.loc 1 1198 0
 8988 1384 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8989 1388 07F57272 		add	r2, r7, #968
 8990 138c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8991 138e 092B     		cmp	r3, #9
 8992 1390 22D8     		bhi	.L327
 8993 1392 01A2     		adr	r2, .L329
 8994 1394 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8995              		.p2align 2
 8996              	.L329:
 8997 1398 C1130000 		.word	.L328+1
 8998 139c C1130000 		.word	.L328+1
 8999 13a0 C1130000 		.word	.L328+1
 9000 13a4 C9130000 		.word	.L330+1
 9001 13a8 C9130000 		.word	.L330+1
 9002 13ac D1130000 		.word	.L331+1
 9003 13b0 D1130000 		.word	.L331+1
 9004 13b4 D1130000 		.word	.L331+1
 9005 13b8 D9130000 		.word	.L327+1
 9006 13bc C1130000 		.word	.L328+1
 9007              		.p2align 1
 9008              	.L328:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 210


1200:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 9009              		.loc 1 1200 0
 9010 13c0 0123     		movs	r3, #1
 9011 13c2 87F88535 		strb	r3, [r7, #1413]
 9012 13c6 07E0     		b	.L327
 9013              	.L330:
1202:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 9014              		.loc 1 1202 0
 9015 13c8 0223     		movs	r3, #2
 9016 13ca 87F88535 		strb	r3, [r7, #1413]
 9017 13ce 03E0     		b	.L327
 9018              	.L331:
1204:..\src/command_processing.c ****         }   
 9019              		.loc 1 1204 0
 9020 13d0 0423     		movs	r3, #4
 9021 13d2 87F88535 		strb	r3, [r7, #1413]
 9022 13d6 00BF     		nop
 9023              	.L327:
1207:..\src/command_processing.c ****             // Use default specifications for param setting
 9024              		.loc 1 1207 0
 9025 13d8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9026 13dc 07F10802 		add	r2, r7, #8
 9027 13e0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9028 13e2 002B     		cmp	r3, #0
 9029 13e4 40F03B82 		bne	.L332
1209:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 9030              		.loc 1 1209 0
 9031 13e8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9032 13ec 07F57272 		add	r2, r7, #968
 9033 13f0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9034 13f2 092B     		cmp	r3, #9
 9035 13f4 00F23C82 		bhi	.L375
 9036 13f8 01A2     		adr	r2, .L335
 9037 13fa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9038 13fe 00BF     		.p2align 2
 9039              	.L335:
 9040 1400 29140000 		.word	.L334+1
 9041 1404 27150000 		.word	.L336+1
 9042 1408 29140000 		.word	.L334+1
 9043 140c 79150000 		.word	.L337+1
 9044 1410 0F160000 		.word	.L338+1
 9045 1414 A3160000 		.word	.L339+1
 9046 1418 37170000 		.word	.L340+1
 9047 141c CB170000 		.word	.L341+1
 9048 1420 71180000 		.word	.L375+1
 9049 1424 75140000 		.word	.L342+1
 9050              		.p2align 1
 9051              	.L334:
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9052              		.loc 1 1211 0
 9053 1428 0023     		movs	r3, #0
 9054 142a 87F88735 		strb	r3, [r7, #1415]
 9055 142e 17E0     		b	.L343
 9056              	.L344:
1212:..\src/command_processing.c ****                     }
 9057              		.loc 1 1212 0 discriminator 3
 9058 1430 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 211


 9059 1434 07F21C43 		addw	r3, r7, #1052
 9060 1438 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9061 143c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9062 1440 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9063 1444 01FB02F2 		mul	r2, r1, r2
 9064 1448 1344     		add	r3, r3, r2
 9065 144a 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9066 144e 0332     		adds	r2, r2, #3
 9067 1450 1B49     		ldr	r1, .L383+68
 9068 1452 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9069 1454 1A70     		strb	r2, [r3]
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9070              		.loc 1 1211 0 discriminator 3
 9071 1456 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9072 145a 0133     		adds	r3, r3, #1
 9073 145c 87F88735 		strb	r3, [r7, #1415]
 9074              	.L343:
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9075              		.loc 1 1211 0 is_stmt 0 discriminator 1
 9076 1460 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9077 1464 07F55D72 		add	r2, r7, #884
 9078 1468 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9079 146a 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9080 146e 9A42     		cmp	r2, r3
 9081 1470 DED3     		bcc	.L344
1214:..\src/command_processing.c ****                 case TYPE_STRING:
 9082              		.loc 1 1214 0 is_stmt 1
 9083 1472 FEE1     		b	.L370
 9084              	.L342:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9085              		.loc 1 1216 0
 9086 1474 0023     		movs	r3, #0
 9087 1476 87F88735 		strb	r3, [r7, #1415]
 9088 147a 3BE0     		b	.L346
 9089              	.L384:
 9090              		.align	2
 9091              	.L383:
 9092 147c 280F0000 		.word	.LC129
 9093 1480 88020000 		.word	.LC130
 9094 1484 FC020000 		.word	.LC131
 9095 1488 34030000 		.word	.LC132
 9096 148c 6C030000 		.word	.LC133
 9097 1490 F8030000 		.word	.LC134
 9098 1494 38040000 		.word	.LC135
 9099 1498 64040000 		.word	.LC136
 9100 149c 7C040000 		.word	.LC137
 9101 14a0 A4040000 		.word	.LC138
 9102 14a4 00050000 		.word	.LC139
 9103 14a8 3C050000 		.word	.LC140
 9104 14ac 9C050000 		.word	.LC141
 9105 14b0 18060000 		.word	.LC142
 9106 14b4 74100000 		.word	.LC85
 9107 14b8 98100000 		.word	.LC86
 9108 14bc A4100000 		.word	.LC87
 9109 14c0 00000000 		.word	g_rx
 9110              	.L347:
1217:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 212


 9111              		.loc 1 1217 0 discriminator 3
 9112 14c4 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9113 14c8 07F21C43 		addw	r3, r7, #1052
 9114 14cc 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9115 14d0 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9116 14d4 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9117 14d8 01FB02F2 		mul	r2, r1, r2
 9118 14dc 1344     		add	r3, r3, r2
 9119 14de 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9120 14e2 0332     		adds	r2, r2, #3
 9121 14e4 E149     		ldr	r1, .L385
 9122 14e6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9123 14e8 1A70     		strb	r2, [r3]
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9124              		.loc 1 1216 0 discriminator 3
 9125 14ea 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9126 14ee 0133     		adds	r3, r3, #1
 9127 14f0 87F88735 		strb	r3, [r7, #1415]
 9128              	.L346:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9129              		.loc 1 1216 0 is_stmt 0 discriminator 1
 9130 14f4 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9131 14f8 07F55D72 		add	r2, r7, #884
 9132 14fc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9133 14fe 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9134 1502 9A42     		cmp	r2, r3
 9135 1504 DED3     		bcc	.L347
1219:..\src/command_processing.c ****                 break; 
 9136              		.loc 1 1219 0 is_stmt 1
 9137 1506 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9138 150a 07F21C43 		addw	r3, r7, #1052
 9139 150e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9140 1512 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9141 1516 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9142 151a 01FB02F2 		mul	r2, r1, r2
 9143 151e 1344     		add	r3, r3, r2
 9144 1520 0022     		movs	r2, #0
 9145 1522 1A70     		strb	r2, [r3]
1220:..\src/command_processing.c ****                 case TYPE_INT8:
 9146              		.loc 1 1220 0
 9147 1524 A5E1     		b	.L370
 9148              	.L336:
1222:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9149              		.loc 1 1222 0
 9150 1526 0023     		movs	r3, #0
 9151 1528 87F88735 		strb	r3, [r7, #1415]
 9152 152c 1AE0     		b	.L348
 9153              	.L349:
1223:..\src/command_processing.c ****                     }
 9154              		.loc 1 1223 0 discriminator 3
 9155 152e 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9156 1532 07F21C43 		addw	r3, r7, #1052
 9157 1536 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9158 153a 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9159 153e 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9160 1542 01FB02F2 		mul	r2, r1, r2
 9161 1546 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 213


 9162 1548 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9163 154c 0332     		adds	r2, r2, #3
 9164 154e C749     		ldr	r1, .L385
 9165 1550 0A44     		add	r2, r2, r1
 9166 1552 92F90020 		ldrsb	r2, [r2]
 9167 1556 D2B2     		uxtb	r2, r2
 9168 1558 1A70     		strb	r2, [r3]
1222:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9169              		.loc 1 1222 0 discriminator 3
 9170 155a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9171 155e 0133     		adds	r3, r3, #1
 9172 1560 87F88735 		strb	r3, [r7, #1415]
 9173              	.L348:
1222:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9174              		.loc 1 1222 0 is_stmt 0 discriminator 1
 9175 1564 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9176 1568 07F55D72 		add	r2, r7, #884
 9177 156c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9178 156e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9179 1572 9A42     		cmp	r2, r3
 9180 1574 DBD3     		bcc	.L349
1225:..\src/command_processing.c ****                 case TYPE_INT16:
 9181              		.loc 1 1225 0 is_stmt 1
 9182 1576 7CE1     		b	.L370
 9183              	.L337:
1227:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9184              		.loc 1 1227 0
 9185 1578 0023     		movs	r3, #0
 9186 157a 87F88735 		strb	r3, [r7, #1415]
 9187 157e 3CE0     		b	.L350
 9188              	.L353:
1228:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9189              		.loc 1 1228 0
 9190 1580 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9191 1584 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9192 1588 02FB03F3 		mul	r3, r2, r3
 9193 158c 0333     		adds	r3, r3, #3
 9194 158e B74A     		ldr	r2, .L385
 9195 1590 1344     		add	r3, r3, r2
 9196 1592 B3F90030 		ldrsh	r3, [r3]
 9197 1596 A7F87835 		strh	r3, [r7, #1400]	@ movhi
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9198              		.loc 1 1229 0
 9199 159a 0023     		movs	r3, #0
 9200 159c 87F88635 		strb	r3, [r7, #1414]
 9201 15a0 20E0     		b	.L351
 9202              	.L352:
1230:..\src/command_processing.c ****                         }
 9203              		.loc 1 1230 0 discriminator 3
 9204 15a2 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9205 15a6 07F21C43 		addw	r3, r7, #1052
 9206 15aa 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9207 15ae 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9208 15b2 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9209 15b6 01FB03F3 		mul	r3, r1, r3
 9210 15ba 1846     		mov	r0, r3
 9211 15bc 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 214


 9212 15c0 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9213 15c4 CB1A     		subs	r3, r1, r3
 9214 15c6 0344     		add	r3, r3, r0
 9215 15c8 013B     		subs	r3, r3, #1
 9216 15ca 1344     		add	r3, r3, r2
 9217 15cc 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9218 15d0 07F5AF61 		add	r1, r7, #1400
 9219 15d4 0A44     		add	r2, r2, r1
 9220 15d6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9221 15d8 1A70     		strb	r2, [r3]
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9222              		.loc 1 1229 0 discriminator 3
 9223 15da 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9224 15de 0133     		adds	r3, r3, #1
 9225 15e0 87F88635 		strb	r3, [r7, #1414]
 9226              	.L351:
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9227              		.loc 1 1229 0 is_stmt 0 discriminator 1
 9228 15e4 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9229 15e8 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9230 15ec 9A42     		cmp	r2, r3
 9231 15ee D8D3     		bcc	.L352
1227:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9232              		.loc 1 1227 0 is_stmt 1 discriminator 2
 9233 15f0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9234 15f4 0133     		adds	r3, r3, #1
 9235 15f6 87F88735 		strb	r3, [r7, #1415]
 9236              	.L350:
1227:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9237              		.loc 1 1227 0 is_stmt 0 discriminator 1
 9238 15fa 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9239 15fe 07F55D72 		add	r2, r7, #884
 9240 1602 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9241 1604 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9242 1608 9A42     		cmp	r2, r3
 9243 160a B9D3     		bcc	.L353
1233:..\src/command_processing.c ****                 case TYPE_UINT16:
 9244              		.loc 1 1233 0 is_stmt 1
 9245 160c 31E1     		b	.L370
 9246              	.L338:
1235:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9247              		.loc 1 1235 0
 9248 160e 0023     		movs	r3, #0
 9249 1610 87F88735 		strb	r3, [r7, #1415]
 9250 1614 3BE0     		b	.L354
 9251              	.L357:
1236:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9252              		.loc 1 1236 0
 9253 1616 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9254 161a 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9255 161e 02FB03F3 		mul	r3, r2, r3
 9256 1622 0333     		adds	r3, r3, #3
 9257 1624 914A     		ldr	r2, .L385
 9258 1626 1344     		add	r3, r3, r2
 9259 1628 1B88     		ldrh	r3, [r3]
 9260 162a A7F87635 		strh	r3, [r7, #1398]	@ movhi
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 215


 9261              		.loc 1 1237 0
 9262 162e 0023     		movs	r3, #0
 9263 1630 87F88635 		strb	r3, [r7, #1414]
 9264 1634 20E0     		b	.L355
 9265              	.L356:
1238:..\src/command_processing.c ****                         }
 9266              		.loc 1 1238 0 discriminator 3
 9267 1636 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9268 163a 07F21C43 		addw	r3, r7, #1052
 9269 163e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9270 1642 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9271 1646 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9272 164a 01FB03F3 		mul	r3, r1, r3
 9273 164e 1846     		mov	r0, r3
 9274 1650 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9275 1654 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9276 1658 CB1A     		subs	r3, r1, r3
 9277 165a 0344     		add	r3, r3, r0
 9278 165c 013B     		subs	r3, r3, #1
 9279 165e 1344     		add	r3, r3, r2
 9280 1660 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9281 1664 07F27651 		addw	r1, r7, #1398
 9282 1668 0A44     		add	r2, r2, r1
 9283 166a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9284 166c 1A70     		strb	r2, [r3]
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9285              		.loc 1 1237 0 discriminator 3
 9286 166e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9287 1672 0133     		adds	r3, r3, #1
 9288 1674 87F88635 		strb	r3, [r7, #1414]
 9289              	.L355:
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9290              		.loc 1 1237 0 is_stmt 0 discriminator 1
 9291 1678 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9292 167c 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9293 1680 9A42     		cmp	r2, r3
 9294 1682 D8D3     		bcc	.L356
1235:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9295              		.loc 1 1235 0 is_stmt 1 discriminator 2
 9296 1684 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9297 1688 0133     		adds	r3, r3, #1
 9298 168a 87F88735 		strb	r3, [r7, #1415]
 9299              	.L354:
1235:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9300              		.loc 1 1235 0 is_stmt 0 discriminator 1
 9301 168e 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9302 1692 07F55D72 		add	r2, r7, #884
 9303 1696 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9304 1698 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9305 169c 9A42     		cmp	r2, r3
 9306 169e BAD3     		bcc	.L357
1241:..\src/command_processing.c ****                 case TYPE_INT32:
 9307              		.loc 1 1241 0 is_stmt 1
 9308 16a0 E7E0     		b	.L370
 9309              	.L339:
1243:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9310              		.loc 1 1243 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 216


 9311 16a2 0023     		movs	r3, #0
 9312 16a4 87F88735 		strb	r3, [r7, #1415]
 9313 16a8 3BE0     		b	.L358
 9314              	.L361:
1244:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9315              		.loc 1 1244 0
 9316 16aa 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9317 16ae 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9318 16b2 02FB03F3 		mul	r3, r2, r3
 9319 16b6 0333     		adds	r3, r3, #3
 9320 16b8 6C4A     		ldr	r2, .L385
 9321 16ba 1344     		add	r3, r3, r2
 9322 16bc 1B68     		ldr	r3, [r3]
 9323 16be C7F87035 		str	r3, [r7, #1392]
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9324              		.loc 1 1245 0
 9325 16c2 0023     		movs	r3, #0
 9326 16c4 87F88635 		strb	r3, [r7, #1414]
 9327 16c8 20E0     		b	.L359
 9328              	.L360:
1246:..\src/command_processing.c ****                         }
 9329              		.loc 1 1246 0 discriminator 3
 9330 16ca 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9331 16ce 07F21C43 		addw	r3, r7, #1052
 9332 16d2 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9333 16d6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9334 16da 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9335 16de 01FB03F3 		mul	r3, r1, r3
 9336 16e2 1846     		mov	r0, r3
 9337 16e4 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9338 16e8 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9339 16ec CB1A     		subs	r3, r1, r3
 9340 16ee 0344     		add	r3, r3, r0
 9341 16f0 013B     		subs	r3, r3, #1
 9342 16f2 1344     		add	r3, r3, r2
 9343 16f4 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9344 16f8 07F5AE61 		add	r1, r7, #1392
 9345 16fc 0A44     		add	r2, r2, r1
 9346 16fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9347 1700 1A70     		strb	r2, [r3]
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9348              		.loc 1 1245 0 discriminator 3
 9349 1702 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9350 1706 0133     		adds	r3, r3, #1
 9351 1708 87F88635 		strb	r3, [r7, #1414]
 9352              	.L359:
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9353              		.loc 1 1245 0 is_stmt 0 discriminator 1
 9354 170c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9355 1710 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9356 1714 9A42     		cmp	r2, r3
 9357 1716 D8D3     		bcc	.L360
1243:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9358              		.loc 1 1243 0 is_stmt 1 discriminator 2
 9359 1718 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9360 171c 0133     		adds	r3, r3, #1
 9361 171e 87F88735 		strb	r3, [r7, #1415]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 217


 9362              	.L358:
1243:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9363              		.loc 1 1243 0 is_stmt 0 discriminator 1
 9364 1722 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9365 1726 07F55D72 		add	r2, r7, #884
 9366 172a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9367 172c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9368 1730 9A42     		cmp	r2, r3
 9369 1732 BAD3     		bcc	.L361
1249:..\src/command_processing.c ****                 case TYPE_UINT32:
 9370              		.loc 1 1249 0 is_stmt 1
 9371 1734 9DE0     		b	.L370
 9372              	.L340:
1251:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9373              		.loc 1 1251 0
 9374 1736 0023     		movs	r3, #0
 9375 1738 87F88735 		strb	r3, [r7, #1415]
 9376 173c 3BE0     		b	.L362
 9377              	.L365:
1252:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9378              		.loc 1 1252 0
 9379 173e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9380 1742 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9381 1746 02FB03F3 		mul	r3, r2, r3
 9382 174a 0333     		adds	r3, r3, #3
 9383 174c 474A     		ldr	r2, .L385
 9384 174e 1344     		add	r3, r3, r2
 9385 1750 1B68     		ldr	r3, [r3]
 9386 1752 C7F86C35 		str	r3, [r7, #1388]
1253:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9387              		.loc 1 1253 0
 9388 1756 0023     		movs	r3, #0
 9389 1758 87F88635 		strb	r3, [r7, #1414]
 9390 175c 20E0     		b	.L363
 9391              	.L364:
1254:..\src/command_processing.c ****                         }
 9392              		.loc 1 1254 0 discriminator 3
 9393 175e 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9394 1762 07F21C43 		addw	r3, r7, #1052
 9395 1766 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9396 176a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9397 176e 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9398 1772 01FB03F3 		mul	r3, r1, r3
 9399 1776 1846     		mov	r0, r3
 9400 1778 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9401 177c 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9402 1780 CB1A     		subs	r3, r1, r3
 9403 1782 0344     		add	r3, r3, r0
 9404 1784 013B     		subs	r3, r3, #1
 9405 1786 1344     		add	r3, r3, r2
 9406 1788 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9407 178c 07F26C51 		addw	r1, r7, #1388
 9408 1790 0A44     		add	r2, r2, r1
 9409 1792 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9410 1794 1A70     		strb	r2, [r3]
1253:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9411              		.loc 1 1253 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 218


 9412 1796 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9413 179a 0133     		adds	r3, r3, #1
 9414 179c 87F88635 		strb	r3, [r7, #1414]
 9415              	.L363:
1253:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9416              		.loc 1 1253 0 is_stmt 0 discriminator 1
 9417 17a0 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9418 17a4 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9419 17a8 9A42     		cmp	r2, r3
 9420 17aa D8D3     		bcc	.L364
1251:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9421              		.loc 1 1251 0 is_stmt 1 discriminator 2
 9422 17ac 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9423 17b0 0133     		adds	r3, r3, #1
 9424 17b2 87F88735 		strb	r3, [r7, #1415]
 9425              	.L362:
1251:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9426              		.loc 1 1251 0 is_stmt 0 discriminator 1
 9427 17b6 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9428 17ba 07F55D72 		add	r2, r7, #884
 9429 17be D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9430 17c0 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9431 17c4 9A42     		cmp	r2, r3
 9432 17c6 BAD3     		bcc	.L365
1257:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9433              		.loc 1 1257 0 is_stmt 1
 9434 17c8 53E0     		b	.L370
 9435              	.L341:
1259:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9436              		.loc 1 1259 0
 9437 17ca 0023     		movs	r3, #0
 9438 17cc 87F88735 		strb	r3, [r7, #1415]
 9439 17d0 3BE0     		b	.L366
 9440              	.L369:
1260:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9441              		.loc 1 1260 0
 9442 17d2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9443 17d6 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9444 17da 02FB03F3 		mul	r3, r2, r3
 9445 17de 0333     		adds	r3, r3, #3
 9446 17e0 224A     		ldr	r2, .L385
 9447 17e2 1344     		add	r3, r3, r2
 9448 17e4 1B68     		ldr	r3, [r3]	@ float
 9449 17e6 C7F86835 		str	r3, [r7, #1384]	@ float
1261:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9450              		.loc 1 1261 0
 9451 17ea 0023     		movs	r3, #0
 9452 17ec 87F88635 		strb	r3, [r7, #1414]
 9453 17f0 20E0     		b	.L367
 9454              	.L368:
1262:..\src/command_processing.c ****                         }
 9455              		.loc 1 1262 0 discriminator 3
 9456 17f2 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9457 17f6 07F21C43 		addw	r3, r7, #1052
 9458 17fa 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9459 17fe 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9460 1802 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 219


 9461 1806 01FB03F3 		mul	r3, r1, r3
 9462 180a 1846     		mov	r0, r3
 9463 180c 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9464 1810 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9465 1814 CB1A     		subs	r3, r1, r3
 9466 1816 0344     		add	r3, r3, r0
 9467 1818 013B     		subs	r3, r3, #1
 9468 181a 1344     		add	r3, r3, r2
 9469 181c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9470 1820 07F5AD61 		add	r1, r7, #1384
 9471 1824 0A44     		add	r2, r2, r1
 9472 1826 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9473 1828 1A70     		strb	r2, [r3]
1261:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9474              		.loc 1 1261 0 discriminator 3
 9475 182a 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9476 182e 0133     		adds	r3, r3, #1
 9477 1830 87F88635 		strb	r3, [r7, #1414]
 9478              	.L367:
1261:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9479              		.loc 1 1261 0 is_stmt 0 discriminator 1
 9480 1834 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9481 1838 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9482 183c 9A42     		cmp	r2, r3
 9483 183e D8D3     		bcc	.L368
1259:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9484              		.loc 1 1259 0 is_stmt 1 discriminator 2
 9485 1840 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9486 1844 0133     		adds	r3, r3, #1
 9487 1846 87F88735 		strb	r3, [r7, #1415]
 9488              	.L366:
1259:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9489              		.loc 1 1259 0 is_stmt 0 discriminator 1
 9490 184a 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9491 184e 07F55D72 		add	r2, r7, #884
 9492 1852 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9493 1854 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9494 1858 9A42     		cmp	r2, r3
 9495 185a BAD3     		bcc	.L369
1265:..\src/command_processing.c ****                 default:
 9496              		.loc 1 1265 0 is_stmt 1
 9497 185c 09E0     		b	.L370
 9498              	.L332:
1272:..\src/command_processing.c ****         }
 9499              		.loc 1 1272 0
 9500 185e BB1D     		adds	r3, r7, #6
 9501 1860 1B88     		ldrh	r3, [r3]
 9502 1862 1846     		mov	r0, r3
 9503 1864 FFF7FEFF 		bl	set_custom_param
 9504 1868 03E0     		b	.L370
 9505              	.L386:
 9506 186a 00BF     		.align	2
 9507              	.L385:
 9508 186c 00000000 		.word	g_rx
 9509              	.L375:
1267:..\src/command_processing.c ****             }
 9510              		.loc 1 1267 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 220


 9511 1870 00BF     		nop
 9512              	.L370:
1276:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9513              		.loc 1 1276 0
 9514 1872 97F87B35 		ldrb	r3, [r7, #1403]	@ zero_extendqisi2
 9515 1876 9BB2     		uxth	r3, r3
 9516 1878 BA1D     		adds	r2, r7, #6
 9517 187a 1288     		ldrh	r2, [r2]
 9518 187c 9A42     		cmp	r2, r3
 9519 187e 11D0     		beq	.L371
1277:..\src/command_processing.c ****         }
 9520              		.loc 1 1277 0
 9521 1880 D7F88035 		ldr	r3, [r7, #1408]
 9522 1884 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9523 1888 5B01     		lsls	r3, r3, #5
 9524 188a 03F51273 		add	r3, r3, #584
 9525 188e D7F88025 		ldr	r2, [r7, #1408]
 9526 1892 D018     		adds	r0, r2, r3
 9527 1894 D7F88035 		ldr	r3, [r7, #1408]
 9528 1898 03F5F873 		add	r3, r3, #496
 9529 189c 1022     		movs	r2, #16
 9530 189e 1946     		mov	r1, r3
 9531 18a0 FFF7FEFF 		bl	memcpy
 9532              	.L371:
1281:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9533              		.loc 1 1281 0
 9534 18a4 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9535 18a8 07F57272 		add	r2, r7, #968
 9536 18ac D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9537 18ae 002B     		cmp	r3, #0
 9538 18b0 42D1     		bne	.L376
 9539              	.LBB22:
1282:..\src/command_processing.c ****             do {
 9540              		.loc 1 1282 0
 9541 18b2 0023     		movs	r3, #0
 9542 18b4 87F87F35 		strb	r3, [r7, #1407]
 9543 18b8 FF23     		movs	r3, #255
 9544 18ba 87F87E35 		strb	r3, [r7, #1406]
 9545              	.L373:
1284:..\src/command_processing.c ****                 idx++;
 9546              		.loc 1 1284 0
 9547 18be 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9548 18c2 07F57272 		add	r2, r7, #968
 9549 18c6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9550 18c8 002B     		cmp	r3, #0
 9551 18ca 04D1     		bne	.L372
1284:..\src/command_processing.c ****                 idx++;
 9552              		.loc 1 1284 0 is_stmt 0 discriminator 1
 9553 18cc 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9554 18d0 0133     		adds	r3, r3, #1
 9555 18d2 87F87E35 		strb	r3, [r7, #1406]
 9556              	.L372:
1285:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9557              		.loc 1 1285 0 is_stmt 1
 9558 18d6 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9559 18da 0133     		adds	r3, r3, #1
 9560 18dc 87F87F35 		strb	r3, [r7, #1407]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 221


1286:..\src/command_processing.c ****             
 9561              		.loc 1 1286 0
 9562 18e0 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9563 18e4 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9564 18e8 9A42     		cmp	r2, r3
 9565 18ea E8D9     		bls	.L373
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9566              		.loc 1 1288 0
 9567 18ec 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9568 18f0 07F1D002 		add	r2, r7, #208
 9569 18f4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9570 18f6 052B     		cmp	r3, #5
 9571 18f8 1BD0     		beq	.L374
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9572              		.loc 1 1288 0 is_stmt 0 discriminator 1
 9573 18fa 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9574 18fe 07F1D002 		add	r2, r7, #208
 9575 1902 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9576 1904 062B     		cmp	r3, #6
 9577 1906 14D0     		beq	.L374
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9578              		.loc 1 1288 0 discriminator 2
 9579 1908 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9580 190c 07F1D002 		add	r2, r7, #208
 9581 1910 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9582 1912 082B     		cmp	r3, #8
 9583 1914 0DD0     		beq	.L374
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9584              		.loc 1 1288 0 discriminator 3
 9585 1916 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9586 191a 07F1D002 		add	r2, r7, #208
 9587 191e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9588 1920 092B     		cmp	r3, #9
 9589 1922 06D0     		beq	.L374
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9590              		.loc 1 1288 0 discriminator 4
 9591 1924 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9592 1928 07F1D002 		add	r2, r7, #208
 9593 192c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9594 192e 0A2B     		cmp	r3, #10
 9595 1930 02D1     		bne	.L376
 9596              	.L374:
1289:..\src/command_processing.c ****             }   
 9597              		.loc 1 1289 0 is_stmt 1
 9598 1932 044B     		ldr	r3, .L387
 9599 1934 0122     		movs	r2, #1
 9600 1936 1A70     		strb	r2, [r3]
 9601              	.L376:
 9602              	.LBE22:
 9603              		.loc 1 1293 0
 9604 1938 00BF     		nop
 9605 193a 07F28C57 		addw	r7, r7, #1420
 9606              		.cfi_def_cfa_offset 20
 9607 193e BD46     		mov	sp, r7
 9608              		.cfi_def_cfa_register 13
 9609              		@ sp needed
 9610 1940 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 222


 9611              	.L388:
 9612 1942 00BF     		.align	2
 9613              	.L387:
 9614 1944 00000000 		.word	reset_PSoC_flag
 9615              		.cfi_endproc
 9616              	.LFE68:
 9617              		.size	manage_param_list, .-manage_param_list
 9618              		.global	__aeabi_fmul
 9619              		.global	__aeabi_f2iz
 9620              		.section	.text.set_custom_param,"ax",%progbits
 9621              		.align	2
 9622              		.global	set_custom_param
 9623              		.thumb
 9624              		.thumb_func
 9625              		.type	set_custom_param, %function
 9626              	set_custom_param:
 9627              	.LFB69:
1294:..\src/command_processing.c **** 
1295:..\src/command_processing.c **** //==============================================================================
1296:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1297:..\src/command_processing.c **** //==============================================================================
1298:..\src/command_processing.c **** 
1299:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9628              		.loc 1 1299 0
 9629              		.cfi_startproc
 9630              		@ args = 0, pretend = 0, frame = 24
 9631              		@ frame_needed = 1, uses_anonymous_args = 0
 9632 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9633              		.cfi_def_cfa_offset 20
 9634              		.cfi_offset 4, -20
 9635              		.cfi_offset 5, -16
 9636              		.cfi_offset 6, -12
 9637              		.cfi_offset 7, -8
 9638              		.cfi_offset 14, -4
 9639 0002 87B0     		sub	sp, sp, #28
 9640              		.cfi_def_cfa_offset 48
 9641 0004 00AF     		add	r7, sp, #0
 9642              		.cfi_def_cfa_register 7
 9643 0006 0346     		mov	r3, r0
 9644 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1300:..\src/command_processing.c **** 
1301:..\src/command_processing.c ****     uint8 CYDATA i, j;
1302:..\src/command_processing.c ****     uint8 aux_uchar;
1303:..\src/command_processing.c ****     float aux_float, aux_float2;
1304:..\src/command_processing.c **** 
1305:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9645              		.loc 1 1305 0
 9646 000a 0023     		movs	r3, #0
 9647 000c 3B75     		strb	r3, [r7, #20]
1306:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9648              		.loc 1 1306 0
 9649 000e 0123     		movs	r3, #1
 9650 0010 FB74     		strb	r3, [r7, #19]
1307:..\src/command_processing.c ****     
1308:..\src/command_processing.c ****     switch(index){
 9651              		.loc 1 1308 0
 9652 0012 FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 223


 9653 0014 023B     		subs	r3, r3, #2
 9654 0016 492B     		cmp	r3, #73
 9655 0018 01F24C82 		bhi	.L484
 9656 001c 01A2     		adr	r2, .L392
 9657 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9658 0022 00BF     		.p2align 2
 9659              	.L392:
 9660 0024 4D010000 		.word	.L391+1
 9661 0028 7F030000 		.word	.L393+1
 9662 002c B5140000 		.word	.L484+1
 9663 0030 C5050000 		.word	.L394+1
 9664 0034 B5140000 		.word	.L484+1
 9665 0038 B5140000 		.word	.L484+1
 9666 003c 0F060000 		.word	.L395+1
 9667 0040 B5140000 		.word	.L484+1
 9668 0044 B5140000 		.word	.L484+1
 9669 0048 49070000 		.word	.L396+1
 9670 004c B5140000 		.word	.L484+1
 9671 0050 B5140000 		.word	.L484+1
 9672 0054 B5140000 		.word	.L484+1
 9673 0058 B5140000 		.word	.L484+1
 9674 005c B5140000 		.word	.L484+1
 9675 0060 B5140000 		.word	.L484+1
 9676 0064 B5140000 		.word	.L484+1
 9677 0068 B5140000 		.word	.L484+1
 9678 006c B5140000 		.word	.L484+1
 9679 0070 B5140000 		.word	.L484+1
 9680 0074 B5140000 		.word	.L484+1
 9681 0078 49080000 		.word	.L397+1
 9682 007c A7080000 		.word	.L398+1
 9683 0080 B5140000 		.word	.L484+1
 9684 0084 B5140000 		.word	.L484+1
 9685 0088 B5140000 		.word	.L484+1
 9686 008c E1080000 		.word	.L399+1
 9687 0090 B5140000 		.word	.L484+1
 9688 0094 B5140000 		.word	.L484+1
 9689 0098 5D0A0000 		.word	.L400+1
 9690 009c 090B0000 		.word	.L401+1
 9691 00a0 B5140000 		.word	.L484+1
 9692 00a4 B5140000 		.word	.L484+1
 9693 00a8 B5140000 		.word	.L484+1
 9694 00ac B5140000 		.word	.L484+1
 9695 00b0 B5140000 		.word	.L484+1
 9696 00b4 430B0000 		.word	.L402+1
 9697 00b8 B5140000 		.word	.L484+1
 9698 00bc B5140000 		.word	.L484+1
 9699 00c0 B5140000 		.word	.L484+1
 9700 00c4 B5140000 		.word	.L484+1
 9701 00c8 B5140000 		.word	.L484+1
 9702 00cc 630B0000 		.word	.L403+1
 9703 00d0 AB0D0000 		.word	.L404+1
 9704 00d4 B5140000 		.word	.L484+1
 9705 00d8 D90F0000 		.word	.L405+1
 9706 00dc B5140000 		.word	.L484+1
 9707 00e0 B5140000 		.word	.L484+1
 9708 00e4 21100000 		.word	.L406+1
 9709 00e8 B5140000 		.word	.L484+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 224


 9710 00ec B5140000 		.word	.L484+1
 9711 00f0 59110000 		.word	.L407+1
 9712 00f4 B5140000 		.word	.L484+1
 9713 00f8 B5140000 		.word	.L484+1
 9714 00fc B5140000 		.word	.L484+1
 9715 0100 B5140000 		.word	.L484+1
 9716 0104 B5140000 		.word	.L484+1
 9717 0108 B5140000 		.word	.L484+1
 9718 010c B5140000 		.word	.L484+1
 9719 0110 57120000 		.word	.L408+1
 9720 0114 B5140000 		.word	.L484+1
 9721 0118 B5140000 		.word	.L484+1
 9722 011c B5140000 		.word	.L484+1
 9723 0120 B5140000 		.word	.L484+1
 9724 0124 B5140000 		.word	.L484+1
 9725 0128 B5140000 		.word	.L484+1
 9726 012c B5140000 		.word	.L484+1
 9727 0130 B5140000 		.word	.L484+1
 9728 0134 B5140000 		.word	.L484+1
 9729 0138 B5140000 		.word	.L484+1
 9730 013c B5140000 		.word	.L484+1
 9731 0140 B5140000 		.word	.L484+1
 9732 0144 B5140000 		.word	.L484+1
 9733 0148 85120000 		.word	.L409+1
 9734              		.p2align 1
 9735              	.L391:
1309:..\src/command_processing.c ****         case 2:         // Position PID
1310:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9736              		.loc 1 1310 0
 9737 014c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9738 014e AB49     		ldr	r1, .L490
 9739 0150 1346     		mov	r3, r2
 9740 0152 DB00     		lsls	r3, r3, #3
 9741 0154 9B1A     		subs	r3, r3, r2
 9742 0156 1B01     		lsls	r3, r3, #4
 9743 0158 0B44     		add	r3, r3, r1
 9744 015a 03F20F13 		addw	r3, r3, #271
 9745 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9746 0160 032B     		cmp	r3, #3
 9747 0162 00F08680 		beq	.L410
1311:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9748              		.loc 1 1311 0
 9749 0166 A64B     		ldr	r3, .L490+4
 9750 0168 1B68     		ldr	r3, [r3]	@ float
 9751 016a FB60     		str	r3, [r7, #12]	@ float
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9752              		.loc 1 1312 0
 9753 016c 0023     		movs	r3, #0
 9754 016e BB75     		strb	r3, [r7, #22]
 9755 0170 0EE0     		b	.L411
 9756              	.L412:
1313:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9757              		.loc 1 1313 0 discriminator 3
 9758 0172 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9759 0174 C3F10303 		rsb	r3, r3, #3
 9760 0178 07F10802 		add	r2, r7, #8
 9761 017c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 225


 9762 017e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9763 0180 07F10C01 		add	r1, r7, #12
 9764 0184 0A44     		add	r2, r2, r1
 9765 0186 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9766 0188 1A70     		strb	r2, [r3]
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9767              		.loc 1 1312 0 discriminator 3
 9768 018a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9769 018c 0133     		adds	r3, r3, #1
 9770 018e BB75     		strb	r3, [r7, #22]
 9771              	.L411:
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9772              		.loc 1 1312 0 is_stmt 0 discriminator 1
 9773 0190 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9774 0192 032B     		cmp	r3, #3
 9775 0194 EDD9     		bls	.L412
1314:..\src/command_processing.c ****                 }
1315:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 9776              		.loc 1 1315 0 is_stmt 1
 9777 0196 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9778 0198 BB68     		ldr	r3, [r7, #8]	@ float
 9779 019a 4FF08F41 		mov	r1, #1199570944
 9780 019e 1846     		mov	r0, r3
 9781 01a0 FFF7FEFF 		bl	__aeabi_fmul
 9782 01a4 0346     		mov	r3, r0
 9783 01a6 1846     		mov	r0, r3
 9784 01a8 FFF7FEFF 		bl	__aeabi_f2iz
 9785 01ac 0146     		mov	r1, r0
 9786 01ae 954A     		ldr	r2, .L490+8
 9787 01b0 2346     		mov	r3, r4
 9788 01b2 DB00     		lsls	r3, r3, #3
 9789 01b4 1B1B     		subs	r3, r3, r4
 9790 01b6 1B01     		lsls	r3, r3, #4
 9791 01b8 1344     		add	r3, r3, r2
 9792 01ba B033     		adds	r3, r3, #176
 9793 01bc 1960     		str	r1, [r3]
1316:..\src/command_processing.c ****                 
1317:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9794              		.loc 1 1317 0
 9795 01be 924B     		ldr	r3, .L490+12
 9796 01c0 1B68     		ldr	r3, [r3]	@ float
 9797 01c2 FB60     		str	r3, [r7, #12]	@ float
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9798              		.loc 1 1318 0
 9799 01c4 0023     		movs	r3, #0
 9800 01c6 BB75     		strb	r3, [r7, #22]
 9801 01c8 0EE0     		b	.L413
 9802              	.L414:
1319:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9803              		.loc 1 1319 0 discriminator 3
 9804 01ca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9805 01cc C3F10303 		rsb	r3, r3, #3
 9806 01d0 07F10802 		add	r2, r7, #8
 9807 01d4 1344     		add	r3, r3, r2
 9808 01d6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9809 01d8 07F10C01 		add	r1, r7, #12
 9810 01dc 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 226


 9811 01de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9812 01e0 1A70     		strb	r2, [r3]
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9813              		.loc 1 1318 0 discriminator 3
 9814 01e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9815 01e4 0133     		adds	r3, r3, #1
 9816 01e6 BB75     		strb	r3, [r7, #22]
 9817              	.L413:
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9818              		.loc 1 1318 0 is_stmt 0 discriminator 1
 9819 01e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9820 01ea 032B     		cmp	r3, #3
 9821 01ec EDD9     		bls	.L414
1320:..\src/command_processing.c ****                 }
1321:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9822              		.loc 1 1321 0 is_stmt 1
 9823 01ee 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9824 01f0 BB68     		ldr	r3, [r7, #8]	@ float
 9825 01f2 4FF08F41 		mov	r1, #1199570944
 9826 01f6 1846     		mov	r0, r3
 9827 01f8 FFF7FEFF 		bl	__aeabi_fmul
 9828 01fc 0346     		mov	r3, r0
 9829 01fe 1846     		mov	r0, r3
 9830 0200 FFF7FEFF 		bl	__aeabi_f2iz
 9831 0204 0146     		mov	r1, r0
 9832 0206 7F4A     		ldr	r2, .L490+8
 9833 0208 2346     		mov	r3, r4
 9834 020a DB00     		lsls	r3, r3, #3
 9835 020c 1B1B     		subs	r3, r3, r4
 9836 020e 1B01     		lsls	r3, r3, #4
 9837 0210 1344     		add	r3, r3, r2
 9838 0212 B433     		adds	r3, r3, #180
 9839 0214 1960     		str	r1, [r3]
1322:..\src/command_processing.c ****                 
1323:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9840              		.loc 1 1323 0
 9841 0216 7D4B     		ldr	r3, .L490+16
 9842 0218 1B68     		ldr	r3, [r3]	@ float
 9843 021a FB60     		str	r3, [r7, #12]	@ float
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9844              		.loc 1 1324 0
 9845 021c 0023     		movs	r3, #0
 9846 021e BB75     		strb	r3, [r7, #22]
 9847 0220 0EE0     		b	.L415
 9848              	.L416:
1325:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9849              		.loc 1 1325 0 discriminator 3
 9850 0222 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9851 0224 C3F10303 		rsb	r3, r3, #3
 9852 0228 07F10802 		add	r2, r7, #8
 9853 022c 1344     		add	r3, r3, r2
 9854 022e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9855 0230 07F10C01 		add	r1, r7, #12
 9856 0234 0A44     		add	r2, r2, r1
 9857 0236 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9858 0238 1A70     		strb	r2, [r3]
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 227


 9859              		.loc 1 1324 0 discriminator 3
 9860 023a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9861 023c 0133     		adds	r3, r3, #1
 9862 023e BB75     		strb	r3, [r7, #22]
 9863              	.L415:
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9864              		.loc 1 1324 0 is_stmt 0 discriminator 1
 9865 0240 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9866 0242 032B     		cmp	r3, #3
 9867 0244 EDD9     		bls	.L416
1326:..\src/command_processing.c ****                 }
1327:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9868              		.loc 1 1327 0 is_stmt 1
 9869 0246 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9870 0248 BB68     		ldr	r3, [r7, #8]	@ float
 9871 024a 4FF08F41 		mov	r1, #1199570944
 9872 024e 1846     		mov	r0, r3
 9873 0250 FFF7FEFF 		bl	__aeabi_fmul
 9874 0254 0346     		mov	r3, r0
 9875 0256 1846     		mov	r0, r3
 9876 0258 FFF7FEFF 		bl	__aeabi_f2iz
 9877 025c 0146     		mov	r1, r0
 9878 025e 694A     		ldr	r2, .L490+8
 9879 0260 2346     		mov	r3, r4
 9880 0262 DB00     		lsls	r3, r3, #3
 9881 0264 1B1B     		subs	r3, r3, r4
 9882 0266 1B01     		lsls	r3, r3, #4
 9883 0268 1344     		add	r3, r3, r2
 9884 026a B833     		adds	r3, r3, #184
 9885 026c 1960     		str	r1, [r3]
1328:..\src/command_processing.c ****             }
1329:..\src/command_processing.c ****             else {
1330:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1332:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1333:..\src/command_processing.c ****                 }
1334:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1335:..\src/command_processing.c ****                 
1336:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1338:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1339:..\src/command_processing.c ****                 }
1340:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1341:..\src/command_processing.c ****                 
1342:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1343:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1344:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1345:..\src/command_processing.c ****                 }
1346:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1347:..\src/command_processing.c ****             }
1348:..\src/command_processing.c ****             break;
 9886              		.loc 1 1348 0
 9887 026e 01F02CB9 		b	.L424
 9888              	.L410:
1330:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9889              		.loc 1 1330 0
 9890 0272 634B     		ldr	r3, .L490+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 228


 9891 0274 1B68     		ldr	r3, [r3]	@ float
 9892 0276 FB60     		str	r3, [r7, #12]	@ float
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9893              		.loc 1 1331 0
 9894 0278 0023     		movs	r3, #0
 9895 027a BB75     		strb	r3, [r7, #22]
 9896 027c 0EE0     		b	.L418
 9897              	.L419:
1332:..\src/command_processing.c ****                 }
 9898              		.loc 1 1332 0 discriminator 3
 9899 027e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9900 0280 C3F10303 		rsb	r3, r3, #3
 9901 0284 07F10802 		add	r2, r7, #8
 9902 0288 1344     		add	r3, r3, r2
 9903 028a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9904 028c 07F10C01 		add	r1, r7, #12
 9905 0290 0A44     		add	r2, r2, r1
 9906 0292 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9907 0294 1A70     		strb	r2, [r3]
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9908              		.loc 1 1331 0 discriminator 3
 9909 0296 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9910 0298 0133     		adds	r3, r3, #1
 9911 029a BB75     		strb	r3, [r7, #22]
 9912              	.L418:
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9913              		.loc 1 1331 0 is_stmt 0 discriminator 1
 9914 029c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9915 029e 032B     		cmp	r3, #3
 9916 02a0 EDD9     		bls	.L419
1334:..\src/command_processing.c ****                 
 9917              		.loc 1 1334 0 is_stmt 1
 9918 02a2 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9919 02a4 BB68     		ldr	r3, [r7, #8]	@ float
 9920 02a6 4FF08F41 		mov	r1, #1199570944
 9921 02aa 1846     		mov	r0, r3
 9922 02ac FFF7FEFF 		bl	__aeabi_fmul
 9923 02b0 0346     		mov	r3, r0
 9924 02b2 1846     		mov	r0, r3
 9925 02b4 FFF7FEFF 		bl	__aeabi_f2iz
 9926 02b8 0146     		mov	r1, r0
 9927 02ba 524A     		ldr	r2, .L490+8
 9928 02bc 2346     		mov	r3, r4
 9929 02be DB00     		lsls	r3, r3, #3
 9930 02c0 1B1B     		subs	r3, r3, r4
 9931 02c2 1B01     		lsls	r3, r3, #4
 9932 02c4 1344     		add	r3, r3, r2
 9933 02c6 C833     		adds	r3, r3, #200
 9934 02c8 1960     		str	r1, [r3]
1336:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9935              		.loc 1 1336 0
 9936 02ca 4F4B     		ldr	r3, .L490+12
 9937 02cc 1B68     		ldr	r3, [r3]	@ float
 9938 02ce FB60     		str	r3, [r7, #12]	@ float
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9939              		.loc 1 1337 0
 9940 02d0 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 229


 9941 02d2 BB75     		strb	r3, [r7, #22]
 9942 02d4 0EE0     		b	.L420
 9943              	.L421:
1338:..\src/command_processing.c ****                 }
 9944              		.loc 1 1338 0 discriminator 3
 9945 02d6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9946 02d8 C3F10303 		rsb	r3, r3, #3
 9947 02dc 07F10802 		add	r2, r7, #8
 9948 02e0 1344     		add	r3, r3, r2
 9949 02e2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9950 02e4 07F10C01 		add	r1, r7, #12
 9951 02e8 0A44     		add	r2, r2, r1
 9952 02ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9953 02ec 1A70     		strb	r2, [r3]
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9954              		.loc 1 1337 0 discriminator 3
 9955 02ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9956 02f0 0133     		adds	r3, r3, #1
 9957 02f2 BB75     		strb	r3, [r7, #22]
 9958              	.L420:
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9959              		.loc 1 1337 0 is_stmt 0 discriminator 1
 9960 02f4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9961 02f6 032B     		cmp	r3, #3
 9962 02f8 EDD9     		bls	.L421
1340:..\src/command_processing.c ****                 
 9963              		.loc 1 1340 0 is_stmt 1
 9964 02fa 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9965 02fc BB68     		ldr	r3, [r7, #8]	@ float
 9966 02fe 4FF08F41 		mov	r1, #1199570944
 9967 0302 1846     		mov	r0, r3
 9968 0304 FFF7FEFF 		bl	__aeabi_fmul
 9969 0308 0346     		mov	r3, r0
 9970 030a 1846     		mov	r0, r3
 9971 030c FFF7FEFF 		bl	__aeabi_f2iz
 9972 0310 0146     		mov	r1, r0
 9973 0312 3C4A     		ldr	r2, .L490+8
 9974 0314 2346     		mov	r3, r4
 9975 0316 DB00     		lsls	r3, r3, #3
 9976 0318 1B1B     		subs	r3, r3, r4
 9977 031a 1B01     		lsls	r3, r3, #4
 9978 031c 1344     		add	r3, r3, r2
 9979 031e CC33     		adds	r3, r3, #204
 9980 0320 1960     		str	r1, [r3]
1342:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9981              		.loc 1 1342 0
 9982 0322 3A4B     		ldr	r3, .L490+16
 9983 0324 1B68     		ldr	r3, [r3]	@ float
 9984 0326 FB60     		str	r3, [r7, #12]	@ float
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9985              		.loc 1 1343 0
 9986 0328 0023     		movs	r3, #0
 9987 032a BB75     		strb	r3, [r7, #22]
 9988 032c 0EE0     		b	.L422
 9989              	.L423:
1344:..\src/command_processing.c ****                 }
 9990              		.loc 1 1344 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 230


 9991 032e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9992 0330 C3F10303 		rsb	r3, r3, #3
 9993 0334 07F10802 		add	r2, r7, #8
 9994 0338 1344     		add	r3, r3, r2
 9995 033a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9996 033c 07F10C01 		add	r1, r7, #12
 9997 0340 0A44     		add	r2, r2, r1
 9998 0342 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9999 0344 1A70     		strb	r2, [r3]
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10000              		.loc 1 1343 0 discriminator 3
 10001 0346 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10002 0348 0133     		adds	r3, r3, #1
 10003 034a BB75     		strb	r3, [r7, #22]
 10004              	.L422:
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10005              		.loc 1 1343 0 is_stmt 0 discriminator 1
 10006 034c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10007 034e 032B     		cmp	r3, #3
 10008 0350 EDD9     		bls	.L423
1346:..\src/command_processing.c ****             }
 10009              		.loc 1 1346 0 is_stmt 1
 10010 0352 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10011 0354 BB68     		ldr	r3, [r7, #8]	@ float
 10012 0356 4FF08F41 		mov	r1, #1199570944
 10013 035a 1846     		mov	r0, r3
 10014 035c FFF7FEFF 		bl	__aeabi_fmul
 10015 0360 0346     		mov	r3, r0
 10016 0362 1846     		mov	r0, r3
 10017 0364 FFF7FEFF 		bl	__aeabi_f2iz
 10018 0368 0146     		mov	r1, r0
 10019 036a 264A     		ldr	r2, .L490+8
 10020 036c 2346     		mov	r3, r4
 10021 036e DB00     		lsls	r3, r3, #3
 10022 0370 1B1B     		subs	r3, r3, r4
 10023 0372 1B01     		lsls	r3, r3, #4
 10024 0374 1344     		add	r3, r3, r2
 10025 0376 D033     		adds	r3, r3, #208
 10026 0378 1960     		str	r1, [r3]
 10027              		.loc 1 1348 0
 10028 037a 01F0A6B8 		b	.L424
 10029              	.L393:
1349:..\src/command_processing.c ****             
1350:..\src/command_processing.c ****         case 3:         //Current PID
1351:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10030              		.loc 1 1351 0
 10031 037e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10032 0380 1E49     		ldr	r1, .L490
 10033 0382 1346     		mov	r3, r2
 10034 0384 DB00     		lsls	r3, r3, #3
 10035 0386 9B1A     		subs	r3, r3, r2
 10036 0388 1B01     		lsls	r3, r3, #4
 10037 038a 0B44     		add	r3, r3, r1
 10038 038c 03F20F13 		addw	r3, r3, #271
 10039 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10040 0392 032B     		cmp	r3, #3
 10041 0394 00F09080 		beq	.L425
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 231


1352:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10042              		.loc 1 1352 0
 10043 0398 194B     		ldr	r3, .L490+4
 10044 039a 1B68     		ldr	r3, [r3]	@ float
 10045 039c FB60     		str	r3, [r7, #12]	@ float
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10046              		.loc 1 1353 0
 10047 039e 0023     		movs	r3, #0
 10048 03a0 BB75     		strb	r3, [r7, #22]
 10049 03a2 0EE0     		b	.L426
 10050              	.L427:
1354:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10051              		.loc 1 1354 0 discriminator 3
 10052 03a4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10053 03a6 C3F10303 		rsb	r3, r3, #3
 10054 03aa 07F10802 		add	r2, r7, #8
 10055 03ae 1344     		add	r3, r3, r2
 10056 03b0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10057 03b2 07F10C01 		add	r1, r7, #12
 10058 03b6 0A44     		add	r2, r2, r1
 10059 03b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10060 03ba 1A70     		strb	r2, [r3]
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10061              		.loc 1 1353 0 discriminator 3
 10062 03bc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10063 03be 0133     		adds	r3, r3, #1
 10064 03c0 BB75     		strb	r3, [r7, #22]
 10065              	.L426:
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10066              		.loc 1 1353 0 is_stmt 0 discriminator 1
 10067 03c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10068 03c4 032B     		cmp	r3, #3
 10069 03c6 EDD9     		bls	.L427
1355:..\src/command_processing.c ****                 }
1356:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 10070              		.loc 1 1356 0 is_stmt 1
 10071 03c8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10072 03ca BB68     		ldr	r3, [r7, #8]	@ float
 10073 03cc 4FF08F41 		mov	r1, #1199570944
 10074 03d0 1846     		mov	r0, r3
 10075 03d2 FFF7FEFF 		bl	__aeabi_fmul
 10076 03d6 0346     		mov	r3, r0
 10077 03d8 1846     		mov	r0, r3
 10078 03da FFF7FEFF 		bl	__aeabi_f2iz
 10079 03de 0146     		mov	r1, r0
 10080 03e0 084A     		ldr	r2, .L490+8
 10081 03e2 2346     		mov	r3, r4
 10082 03e4 DB00     		lsls	r3, r3, #3
 10083 03e6 1B1B     		subs	r3, r3, r4
 10084 03e8 1B01     		lsls	r3, r3, #4
 10085 03ea 1344     		add	r3, r3, r2
 10086 03ec BC33     		adds	r3, r3, #188
 10087 03ee 1960     		str	r1, [r3]
1357:..\src/command_processing.c ****                 
1358:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10088              		.loc 1 1358 0
 10089 03f0 054B     		ldr	r3, .L490+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 232


 10090 03f2 1B68     		ldr	r3, [r3]	@ float
 10091 03f4 FB60     		str	r3, [r7, #12]	@ float
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10092              		.loc 1 1359 0
 10093 03f6 0023     		movs	r3, #0
 10094 03f8 BB75     		strb	r3, [r7, #22]
 10095 03fa 18E0     		b	.L428
 10096              	.L491:
 10097              		.align	2
 10098              	.L490:
 10099 03fc 00000000 		.word	c_mem
 10100 0400 03000000 		.word	g_rx+3
 10101 0404 00000000 		.word	g_mem
 10102 0408 07000000 		.word	g_rx+7
 10103 040c 0B000000 		.word	g_rx+11
 10104              	.L429:
1360:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10105              		.loc 1 1360 0 discriminator 3
 10106 0410 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10107 0412 C3F10303 		rsb	r3, r3, #3
 10108 0416 07F10802 		add	r2, r7, #8
 10109 041a 1344     		add	r3, r3, r2
 10110 041c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10111 041e 07F10C01 		add	r1, r7, #12
 10112 0422 0A44     		add	r2, r2, r1
 10113 0424 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10114 0426 1A70     		strb	r2, [r3]
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10115              		.loc 1 1359 0 discriminator 3
 10116 0428 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10117 042a 0133     		adds	r3, r3, #1
 10118 042c BB75     		strb	r3, [r7, #22]
 10119              	.L428:
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10120              		.loc 1 1359 0 is_stmt 0 discriminator 1
 10121 042e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10122 0430 032B     		cmp	r3, #3
 10123 0432 EDD9     		bls	.L429
1361:..\src/command_processing.c ****                 }
1362:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 10124              		.loc 1 1362 0 is_stmt 1
 10125 0434 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10126 0436 BB68     		ldr	r3, [r7, #8]	@ float
 10127 0438 4FF08F41 		mov	r1, #1199570944
 10128 043c 1846     		mov	r0, r3
 10129 043e FFF7FEFF 		bl	__aeabi_fmul
 10130 0442 0346     		mov	r3, r0
 10131 0444 1846     		mov	r0, r3
 10132 0446 FFF7FEFF 		bl	__aeabi_f2iz
 10133 044a 0146     		mov	r1, r0
 10134 044c B64A     		ldr	r2, .L492
 10135 044e 2346     		mov	r3, r4
 10136 0450 DB00     		lsls	r3, r3, #3
 10137 0452 1B1B     		subs	r3, r3, r4
 10138 0454 1B01     		lsls	r3, r3, #4
 10139 0456 1344     		add	r3, r3, r2
 10140 0458 C033     		adds	r3, r3, #192
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 233


 10141 045a 1960     		str	r1, [r3]
1363:..\src/command_processing.c ****                 
1364:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10142              		.loc 1 1364 0
 10143 045c B34B     		ldr	r3, .L492+4
 10144 045e 1B68     		ldr	r3, [r3]	@ float
 10145 0460 FB60     		str	r3, [r7, #12]	@ float
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10146              		.loc 1 1365 0
 10147 0462 0023     		movs	r3, #0
 10148 0464 BB75     		strb	r3, [r7, #22]
 10149 0466 0EE0     		b	.L430
 10150              	.L431:
1366:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10151              		.loc 1 1366 0 discriminator 3
 10152 0468 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10153 046a C3F10303 		rsb	r3, r3, #3
 10154 046e 07F10802 		add	r2, r7, #8
 10155 0472 1344     		add	r3, r3, r2
 10156 0474 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10157 0476 07F10C01 		add	r1, r7, #12
 10158 047a 0A44     		add	r2, r2, r1
 10159 047c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10160 047e 1A70     		strb	r2, [r3]
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10161              		.loc 1 1365 0 discriminator 3
 10162 0480 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10163 0482 0133     		adds	r3, r3, #1
 10164 0484 BB75     		strb	r3, [r7, #22]
 10165              	.L430:
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10166              		.loc 1 1365 0 is_stmt 0 discriminator 1
 10167 0486 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10168 0488 032B     		cmp	r3, #3
 10169 048a EDD9     		bls	.L431
1367:..\src/command_processing.c ****                 }
1368:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 10170              		.loc 1 1368 0 is_stmt 1
 10171 048c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10172 048e BB68     		ldr	r3, [r7, #8]	@ float
 10173 0490 4FF08F41 		mov	r1, #1199570944
 10174 0494 1846     		mov	r0, r3
 10175 0496 FFF7FEFF 		bl	__aeabi_fmul
 10176 049a 0346     		mov	r3, r0
 10177 049c 1846     		mov	r0, r3
 10178 049e FFF7FEFF 		bl	__aeabi_f2iz
 10179 04a2 0146     		mov	r1, r0
 10180 04a4 A04A     		ldr	r2, .L492
 10181 04a6 2346     		mov	r3, r4
 10182 04a8 DB00     		lsls	r3, r3, #3
 10183 04aa 1B1B     		subs	r3, r3, r4
 10184 04ac 1B01     		lsls	r3, r3, #4
 10185 04ae 1344     		add	r3, r3, r2
 10186 04b0 C433     		adds	r3, r3, #196
 10187 04b2 1960     		str	r1, [r3]
1369:..\src/command_processing.c ****             }
1370:..\src/command_processing.c ****             else {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 234


1371:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1373:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1374:..\src/command_processing.c ****                 }
1375:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1376:..\src/command_processing.c ****                 
1377:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1379:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1380:..\src/command_processing.c ****                 }
1381:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1382:..\src/command_processing.c ****                 
1383:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1385:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1386:..\src/command_processing.c ****                 }
1387:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1388:..\src/command_processing.c ****             }            
1389:..\src/command_processing.c ****             break;  
 10188              		.loc 1 1389 0
 10189 04b4 01F009B8 		b	.L424
 10190              	.L425:
1371:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10191              		.loc 1 1371 0
 10192 04b8 9D4B     		ldr	r3, .L492+8
 10193 04ba 1B68     		ldr	r3, [r3]	@ float
 10194 04bc FB60     		str	r3, [r7, #12]	@ float
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10195              		.loc 1 1372 0
 10196 04be 0023     		movs	r3, #0
 10197 04c0 BB75     		strb	r3, [r7, #22]
 10198 04c2 0EE0     		b	.L433
 10199              	.L434:
1373:..\src/command_processing.c ****                 }
 10200              		.loc 1 1373 0 discriminator 3
 10201 04c4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10202 04c6 C3F10303 		rsb	r3, r3, #3
 10203 04ca 07F10802 		add	r2, r7, #8
 10204 04ce 1344     		add	r3, r3, r2
 10205 04d0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10206 04d2 07F10C01 		add	r1, r7, #12
 10207 04d6 0A44     		add	r2, r2, r1
 10208 04d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10209 04da 1A70     		strb	r2, [r3]
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10210              		.loc 1 1372 0 discriminator 3
 10211 04dc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10212 04de 0133     		adds	r3, r3, #1
 10213 04e0 BB75     		strb	r3, [r7, #22]
 10214              	.L433:
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10215              		.loc 1 1372 0 is_stmt 0 discriminator 1
 10216 04e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10217 04e4 032B     		cmp	r3, #3
 10218 04e6 EDD9     		bls	.L434
1375:..\src/command_processing.c ****                 
 10219              		.loc 1 1375 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 235


 10220 04e8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10221 04ea BB68     		ldr	r3, [r7, #8]	@ float
 10222 04ec 4FF08F41 		mov	r1, #1199570944
 10223 04f0 1846     		mov	r0, r3
 10224 04f2 FFF7FEFF 		bl	__aeabi_fmul
 10225 04f6 0346     		mov	r3, r0
 10226 04f8 1846     		mov	r0, r3
 10227 04fa FFF7FEFF 		bl	__aeabi_f2iz
 10228 04fe 0146     		mov	r1, r0
 10229 0500 894A     		ldr	r2, .L492
 10230 0502 2346     		mov	r3, r4
 10231 0504 DB00     		lsls	r3, r3, #3
 10232 0506 1B1B     		subs	r3, r3, r4
 10233 0508 1B01     		lsls	r3, r3, #4
 10234 050a 1344     		add	r3, r3, r2
 10235 050c D433     		adds	r3, r3, #212
 10236 050e 1960     		str	r1, [r3]
1377:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10237              		.loc 1 1377 0
 10238 0510 884B     		ldr	r3, .L492+12
 10239 0512 1B68     		ldr	r3, [r3]	@ float
 10240 0514 FB60     		str	r3, [r7, #12]	@ float
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10241              		.loc 1 1378 0
 10242 0516 0023     		movs	r3, #0
 10243 0518 BB75     		strb	r3, [r7, #22]
 10244 051a 0EE0     		b	.L435
 10245              	.L436:
1379:..\src/command_processing.c ****                 }
 10246              		.loc 1 1379 0 discriminator 3
 10247 051c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10248 051e C3F10303 		rsb	r3, r3, #3
 10249 0522 07F10802 		add	r2, r7, #8
 10250 0526 1344     		add	r3, r3, r2
 10251 0528 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10252 052a 07F10C01 		add	r1, r7, #12
 10253 052e 0A44     		add	r2, r2, r1
 10254 0530 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10255 0532 1A70     		strb	r2, [r3]
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10256              		.loc 1 1378 0 discriminator 3
 10257 0534 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10258 0536 0133     		adds	r3, r3, #1
 10259 0538 BB75     		strb	r3, [r7, #22]
 10260              	.L435:
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10261              		.loc 1 1378 0 is_stmt 0 discriminator 1
 10262 053a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10263 053c 032B     		cmp	r3, #3
 10264 053e EDD9     		bls	.L436
1381:..\src/command_processing.c ****                 
 10265              		.loc 1 1381 0 is_stmt 1
 10266 0540 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10267 0542 BB68     		ldr	r3, [r7, #8]	@ float
 10268 0544 4FF08F41 		mov	r1, #1199570944
 10269 0548 1846     		mov	r0, r3
 10270 054a FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 236


 10271 054e 0346     		mov	r3, r0
 10272 0550 1846     		mov	r0, r3
 10273 0552 FFF7FEFF 		bl	__aeabi_f2iz
 10274 0556 0146     		mov	r1, r0
 10275 0558 734A     		ldr	r2, .L492
 10276 055a 2346     		mov	r3, r4
 10277 055c DB00     		lsls	r3, r3, #3
 10278 055e 1B1B     		subs	r3, r3, r4
 10279 0560 1B01     		lsls	r3, r3, #4
 10280 0562 1344     		add	r3, r3, r2
 10281 0564 D833     		adds	r3, r3, #216
 10282 0566 1960     		str	r1, [r3]
1383:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10283              		.loc 1 1383 0
 10284 0568 704B     		ldr	r3, .L492+4
 10285 056a 1B68     		ldr	r3, [r3]	@ float
 10286 056c FB60     		str	r3, [r7, #12]	@ float
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10287              		.loc 1 1384 0
 10288 056e 0023     		movs	r3, #0
 10289 0570 BB75     		strb	r3, [r7, #22]
 10290 0572 0EE0     		b	.L437
 10291              	.L438:
1385:..\src/command_processing.c ****                 }
 10292              		.loc 1 1385 0 discriminator 3
 10293 0574 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10294 0576 C3F10303 		rsb	r3, r3, #3
 10295 057a 07F10802 		add	r2, r7, #8
 10296 057e 1344     		add	r3, r3, r2
 10297 0580 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10298 0582 07F10C01 		add	r1, r7, #12
 10299 0586 0A44     		add	r2, r2, r1
 10300 0588 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10301 058a 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10302              		.loc 1 1384 0 discriminator 3
 10303 058c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10304 058e 0133     		adds	r3, r3, #1
 10305 0590 BB75     		strb	r3, [r7, #22]
 10306              	.L437:
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10307              		.loc 1 1384 0 is_stmt 0 discriminator 1
 10308 0592 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10309 0594 032B     		cmp	r3, #3
 10310 0596 EDD9     		bls	.L438
1387:..\src/command_processing.c ****             }            
 10311              		.loc 1 1387 0 is_stmt 1
 10312 0598 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10313 059a BB68     		ldr	r3, [r7, #8]	@ float
 10314 059c 4FF08F41 		mov	r1, #1199570944
 10315 05a0 1846     		mov	r0, r3
 10316 05a2 FFF7FEFF 		bl	__aeabi_fmul
 10317 05a6 0346     		mov	r3, r0
 10318 05a8 1846     		mov	r0, r3
 10319 05aa FFF7FEFF 		bl	__aeabi_f2iz
 10320 05ae 0146     		mov	r1, r0
 10321 05b0 5D4A     		ldr	r2, .L492
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 237


 10322 05b2 2346     		mov	r3, r4
 10323 05b4 DB00     		lsls	r3, r3, #3
 10324 05b6 1B1B     		subs	r3, r3, r4
 10325 05b8 1B01     		lsls	r3, r3, #4
 10326 05ba 1344     		add	r3, r3, r2
 10327 05bc DC33     		adds	r3, r3, #220
 10328 05be 1960     		str	r1, [r3]
 10329              		.loc 1 1389 0
 10330 05c0 00F083BF 		b	.L424
 10331              	.L394:
1390:..\src/command_processing.c ****             
1391:..\src/command_processing.c ****         case 5:         //Input mode
1392:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 10332              		.loc 1 1392 0
 10333 05c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10334 05c6 5C4B     		ldr	r3, .L492+16
 10335 05c8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10336 05ca 5749     		ldr	r1, .L492
 10337 05cc 1346     		mov	r3, r2
 10338 05ce DB00     		lsls	r3, r3, #3
 10339 05d0 9B1A     		subs	r3, r3, r2
 10340 05d2 1B01     		lsls	r3, r3, #4
 10341 05d4 0B44     		add	r3, r3, r1
 10342 05d6 03F58773 		add	r3, r3, #270
 10343 05da 0246     		mov	r2, r0
 10344 05dc 1A70     		strb	r2, [r3]
1393:..\src/command_processing.c ****             
1394:..\src/command_processing.c ****             // Hold the actual position
1395:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 10345              		.loc 1 1395 0
 10346 05de 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10347 05e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10348 05e2 5148     		ldr	r0, .L492
 10349 05e4 1346     		mov	r3, r2
 10350 05e6 DB00     		lsls	r3, r3, #3
 10351 05e8 9B1A     		subs	r3, r3, r2
 10352 05ea 1B01     		lsls	r3, r3, #4
 10353 05ec 0344     		add	r3, r3, r0
 10354 05ee 03F58873 		add	r3, r3, #272
 10355 05f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10356 05f4 1846     		mov	r0, r3
 10357 05f6 514A     		ldr	r2, .L492+20
 10358 05f8 3423     		movs	r3, #52
 10359 05fa 03FB00F3 		mul	r3, r3, r0
 10360 05fe 1344     		add	r3, r3, r2
 10361 0600 1A68     		ldr	r2, [r3]
 10362 0602 4F48     		ldr	r0, .L492+24
 10363 0604 0B01     		lsls	r3, r1, #4
 10364 0606 0344     		add	r3, r3, r0
 10365 0608 1A60     		str	r2, [r3]
1396:..\src/command_processing.c ****             break;   
 10366              		.loc 1 1396 0
 10367 060a 00F05EBF 		b	.L424
 10368              	.L395:
1397:..\src/command_processing.c **** 
1398:..\src/command_processing.c ****         case 8:         //Measurement Offset
1399:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 238


 10369              		.loc 1 1399 0
 10370 060e 0023     		movs	r3, #0
 10371 0610 FB75     		strb	r3, [r7, #23]
 10372 0612 7EE0     		b	.L439
 10373              	.L440:
1400:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10374              		.loc 1 1400 0 discriminator 3
 10375 0614 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10376 0616 4449     		ldr	r1, .L492
 10377 0618 1346     		mov	r3, r2
 10378 061a DB00     		lsls	r3, r3, #3
 10379 061c 9B1A     		subs	r3, r3, r2
 10380 061e 1B01     		lsls	r3, r3, #4
 10381 0620 0B44     		add	r3, r3, r1
 10382 0622 03F58873 		add	r3, r3, #272
 10383 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10384 0628 1C46     		mov	r4, r3
 10385 062a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10386 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10387 062e 5B00     		lsls	r3, r3, #1
 10388 0630 0333     		adds	r3, r3, #3
 10389 0632 4149     		ldr	r1, .L492+16
 10390 0634 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10391 0636 1B02     		lsls	r3, r3, #8
 10392 0638 19B2     		sxth	r1, r3
 10393 063a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10394 063c 0233     		adds	r3, r3, #2
 10395 063e 5B00     		lsls	r3, r3, #1
 10396 0640 3D48     		ldr	r0, .L492+16
 10397 0642 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10398 0644 1BB2     		sxth	r3, r3
 10399 0646 0B43     		orrs	r3, r3, r1
 10400 0648 1BB2     		sxth	r3, r3
 10401 064a 1846     		mov	r0, r3
 10402 064c 3649     		ldr	r1, .L492
 10403 064e 2346     		mov	r3, r4
 10404 0650 5B00     		lsls	r3, r3, #1
 10405 0652 2344     		add	r3, r3, r4
 10406 0654 9B00     		lsls	r3, r3, #2
 10407 0656 1344     		add	r3, r3, r2
 10408 0658 6633     		adds	r3, r3, #102
 10409 065a 41F82300 		str	r0, [r1, r3, lsl #2]
1401:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10410              		.loc 1 1401 0 discriminator 3
 10411 065e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10412 0660 3149     		ldr	r1, .L492
 10413 0662 1346     		mov	r3, r2
 10414 0664 DB00     		lsls	r3, r3, #3
 10415 0666 9B1A     		subs	r3, r3, r2
 10416 0668 1B01     		lsls	r3, r3, #4
 10417 066a 0B44     		add	r3, r3, r1
 10418 066c 03F58873 		add	r3, r3, #272
 10419 0670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10420 0672 1D46     		mov	r5, r3
 10421 0674 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10422 0676 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10423 0678 2B48     		ldr	r0, .L492
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 239


 10424 067a 1346     		mov	r3, r2
 10425 067c DB00     		lsls	r3, r3, #3
 10426 067e 9B1A     		subs	r3, r3, r2
 10427 0680 1B01     		lsls	r3, r3, #4
 10428 0682 0344     		add	r3, r3, r0
 10429 0684 03F58873 		add	r3, r3, #272
 10430 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10431 068a 1C46     		mov	r4, r3
 10432 068c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10433 068e 2648     		ldr	r0, .L492
 10434 0690 2346     		mov	r3, r4
 10435 0692 5B00     		lsls	r3, r3, #1
 10436 0694 2344     		add	r3, r3, r4
 10437 0696 9B00     		lsls	r3, r3, #2
 10438 0698 1344     		add	r3, r3, r2
 10439 069a 6633     		adds	r3, r3, #102
 10440 069c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10441 06a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10442 06a2 214C     		ldr	r4, .L492
 10443 06a4 1346     		mov	r3, r2
 10444 06a6 DB00     		lsls	r3, r3, #3
 10445 06a8 9B1A     		subs	r3, r3, r2
 10446 06aa 1B01     		lsls	r3, r3, #4
 10447 06ac 2344     		add	r3, r3, r4
 10448 06ae 03F58873 		add	r3, r3, #272
 10449 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10450 06b4 1E46     		mov	r6, r3
 10451 06b6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10452 06b8 1B4C     		ldr	r4, .L492
 10453 06ba 3346     		mov	r3, r6
 10454 06bc 5B00     		lsls	r3, r3, #1
 10455 06be 3344     		add	r3, r3, r6
 10456 06c0 1B01     		lsls	r3, r3, #4
 10457 06c2 2344     		add	r3, r3, r4
 10458 06c4 1344     		add	r3, r3, r2
 10459 06c6 03F29513 		addw	r3, r3, #405
 10460 06ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10461 06cc 00FA03F2 		lsl	r2, r0, r3
 10462 06d0 1548     		ldr	r0, .L492
 10463 06d2 2B46     		mov	r3, r5
 10464 06d4 5B00     		lsls	r3, r3, #1
 10465 06d6 2B44     		add	r3, r3, r5
 10466 06d8 9B00     		lsls	r3, r3, #2
 10467 06da 0B44     		add	r3, r3, r1
 10468 06dc 6633     		adds	r3, r3, #102
 10469 06de 40F82320 		str	r2, [r0, r3, lsl #2]
1402:..\src/command_processing.c **** 
1403:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 10470              		.loc 1 1403 0 discriminator 3
 10471 06e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10472 06e4 1049     		ldr	r1, .L492
 10473 06e6 1346     		mov	r3, r2
 10474 06e8 DB00     		lsls	r3, r3, #3
 10475 06ea 9B1A     		subs	r3, r3, r2
 10476 06ec 1B01     		lsls	r3, r3, #4
 10477 06ee 0B44     		add	r3, r3, r1
 10478 06f0 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 240


 10479 06f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10480 06f6 1846     		mov	r0, r3
 10481 06f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10482 06fa 1049     		ldr	r1, .L492+20
 10483 06fc 3422     		movs	r2, #52
 10484 06fe 02FB00F2 		mul	r2, r2, r0
 10485 0702 0A44     		add	r2, r2, r1
 10486 0704 1344     		add	r3, r3, r2
 10487 0706 1833     		adds	r3, r3, #24
 10488 0708 0022     		movs	r2, #0
 10489 070a 1A70     		strb	r2, [r3]
1399:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10490              		.loc 1 1399 0 discriminator 3
 10491 070c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10492 070e 0133     		adds	r3, r3, #1
 10493 0710 FB75     		strb	r3, [r7, #23]
 10494              	.L439:
1399:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10495              		.loc 1 1399 0 is_stmt 0 discriminator 1
 10496 0712 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10497 0714 022B     		cmp	r3, #2
 10498 0716 7FF67DAF 		bls	.L440
1404:..\src/command_processing.c ****             }
1405:..\src/command_processing.c ****             reset_last_value_flag[MOTOR_IDX] = 1;
 10499              		.loc 1 1405 0 is_stmt 1
 10500 071a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10501 071c 094A     		ldr	r2, .L492+28
 10502 071e 0121     		movs	r1, #1
 10503 0720 D154     		strb	r1, [r2, r3]
1406:..\src/command_processing.c ****             break;
 10504              		.loc 1 1406 0
 10505 0722 00F0D2BE 		b	.L424
 10506              	.L493:
 10507 0726 00BF     		.align	2
 10508              	.L492:
 10509 0728 00000000 		.word	g_mem
 10510 072c 0B000000 		.word	g_rx+11
 10511 0730 03000000 		.word	g_rx+3
 10512 0734 07000000 		.word	g_rx+7
 10513 0738 00000000 		.word	g_rx
 10514 073c 00000000 		.word	g_meas
 10515 0740 00000000 		.word	g_refNew
 10516 0744 00000000 		.word	reset_last_value_flag
 10517              	.L396:
1407:..\src/command_processing.c ****     
1408:..\src/command_processing.c ****         case 11:        //Position limits
1409:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 10518              		.loc 1 1409 0
 10519 0748 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10520 074a C14B     		ldr	r3, .L494
 10521 074c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10522 074e 1906     		lsls	r1, r3, #24
 10523 0750 BF4B     		ldr	r3, .L494
 10524 0752 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10525 0754 1B04     		lsls	r3, r3, #16
 10526 0756 1943     		orrs	r1, r1, r3
 10527 0758 BD4B     		ldr	r3, .L494
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 241


 10528 075a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10529 075c 1B02     		lsls	r3, r3, #8
 10530 075e 0B43     		orrs	r3, r3, r1
 10531 0760 BB49     		ldr	r1, .L494
 10532 0762 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10533 0764 1943     		orrs	r1, r1, r3
 10534 0766 BB48     		ldr	r0, .L494+4
 10535 0768 1346     		mov	r3, r2
 10536 076a DB00     		lsls	r3, r3, #3
 10537 076c 9B1A     		subs	r3, r3, r2
 10538 076e 1B01     		lsls	r3, r3, #4
 10539 0770 0344     		add	r3, r3, r0
 10540 0772 E433     		adds	r3, r3, #228
 10541 0774 1960     		str	r1, [r3]
1410:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10542              		.loc 1 1410 0
 10543 0776 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10544 0778 B54B     		ldr	r3, .L494
 10545 077a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10546 077c 1906     		lsls	r1, r3, #24
 10547 077e B44B     		ldr	r3, .L494
 10548 0780 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10549 0782 1B04     		lsls	r3, r3, #16
 10550 0784 1943     		orrs	r1, r1, r3
 10551 0786 B24B     		ldr	r3, .L494
 10552 0788 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10553 078a 1B02     		lsls	r3, r3, #8
 10554 078c 0B43     		orrs	r3, r3, r1
 10555 078e B049     		ldr	r1, .L494
 10556 0790 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10557 0792 1943     		orrs	r1, r1, r3
 10558 0794 AF48     		ldr	r0, .L494+4
 10559 0796 1346     		mov	r3, r2
 10560 0798 DB00     		lsls	r3, r3, #3
 10561 079a 9B1A     		subs	r3, r3, r2
 10562 079c 1B01     		lsls	r3, r3, #4
 10563 079e 0344     		add	r3, r3, r0
 10564 07a0 E833     		adds	r3, r3, #232
 10565 07a2 1960     		str	r1, [r3]
1411:..\src/command_processing.c **** 
1412:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10566              		.loc 1 1412 0
 10567 07a4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10568 07a6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10569 07a8 AA48     		ldr	r0, .L494+4
 10570 07aa 0B46     		mov	r3, r1
 10571 07ac DB00     		lsls	r3, r3, #3
 10572 07ae 5B1A     		subs	r3, r3, r1
 10573 07b0 1B01     		lsls	r3, r3, #4
 10574 07b2 0344     		add	r3, r3, r0
 10575 07b4 E433     		adds	r3, r3, #228
 10576 07b6 1868     		ldr	r0, [r3]
 10577 07b8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10578 07ba A64C     		ldr	r4, .L494+4
 10579 07bc 0B46     		mov	r3, r1
 10580 07be DB00     		lsls	r3, r3, #3
 10581 07c0 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 242


 10582 07c2 1B01     		lsls	r3, r3, #4
 10583 07c4 2344     		add	r3, r3, r4
 10584 07c6 03F58873 		add	r3, r3, #272
 10585 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10586 07cc 1C46     		mov	r4, r3
 10587 07ce A149     		ldr	r1, .L494+4
 10588 07d0 2346     		mov	r3, r4
 10589 07d2 5B00     		lsls	r3, r3, #1
 10590 07d4 2344     		add	r3, r3, r4
 10591 07d6 1B01     		lsls	r3, r3, #4
 10592 07d8 0B44     		add	r3, r3, r1
 10593 07da 03F29513 		addw	r3, r3, #405
 10594 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10595 07e0 00FA03F1 		lsl	r1, r0, r3
 10596 07e4 9B48     		ldr	r0, .L494+4
 10597 07e6 1346     		mov	r3, r2
 10598 07e8 DB00     		lsls	r3, r3, #3
 10599 07ea 9B1A     		subs	r3, r3, r2
 10600 07ec 1B01     		lsls	r3, r3, #4
 10601 07ee 0344     		add	r3, r3, r0
 10602 07f0 E433     		adds	r3, r3, #228
 10603 07f2 1960     		str	r1, [r3]
1413:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10604              		.loc 1 1413 0
 10605 07f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10606 07f6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10607 07f8 9648     		ldr	r0, .L494+4
 10608 07fa 0B46     		mov	r3, r1
 10609 07fc DB00     		lsls	r3, r3, #3
 10610 07fe 5B1A     		subs	r3, r3, r1
 10611 0800 1B01     		lsls	r3, r3, #4
 10612 0802 0344     		add	r3, r3, r0
 10613 0804 E833     		adds	r3, r3, #232
 10614 0806 1868     		ldr	r0, [r3]
 10615 0808 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10616 080a 924C     		ldr	r4, .L494+4
 10617 080c 0B46     		mov	r3, r1
 10618 080e DB00     		lsls	r3, r3, #3
 10619 0810 5B1A     		subs	r3, r3, r1
 10620 0812 1B01     		lsls	r3, r3, #4
 10621 0814 2344     		add	r3, r3, r4
 10622 0816 03F58873 		add	r3, r3, #272
 10623 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10624 081c 1C46     		mov	r4, r3
 10625 081e 8D49     		ldr	r1, .L494+4
 10626 0820 2346     		mov	r3, r4
 10627 0822 5B00     		lsls	r3, r3, #1
 10628 0824 2344     		add	r3, r3, r4
 10629 0826 1B01     		lsls	r3, r3, #4
 10630 0828 0B44     		add	r3, r3, r1
 10631 082a 03F29513 		addw	r3, r3, #405
 10632 082e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10633 0830 00FA03F1 		lsl	r1, r0, r3
 10634 0834 8748     		ldr	r0, .L494+4
 10635 0836 1346     		mov	r3, r2
 10636 0838 DB00     		lsls	r3, r3, #3
 10637 083a 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 243


 10638 083c 1B01     		lsls	r3, r3, #4
 10639 083e 0344     		add	r3, r3, r0
 10640 0840 E833     		adds	r3, r3, #232
 10641 0842 1960     		str	r1, [r3]
1414:..\src/command_processing.c ****             break;            
 10642              		.loc 1 1414 0
 10643 0844 00F041BE 		b	.L424
 10644              	.L397:
1415:..\src/command_processing.c **** 
1416:..\src/command_processing.c ****         case 23:        //Rest Position
1417:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10645              		.loc 1 1417 0
 10646 0848 814B     		ldr	r3, .L494
 10647 084a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10648 084c 1A06     		lsls	r2, r3, #24
 10649 084e 804B     		ldr	r3, .L494
 10650 0850 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10651 0852 1B04     		lsls	r3, r3, #16
 10652 0854 1A43     		orrs	r2, r2, r3
 10653 0856 7E4B     		ldr	r3, .L494
 10654 0858 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10655 085a 1B02     		lsls	r3, r3, #8
 10656 085c 1343     		orrs	r3, r3, r2
 10657 085e 7C4A     		ldr	r2, .L494
 10658 0860 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10659 0862 1343     		orrs	r3, r3, r2
 10660 0864 7B4A     		ldr	r2, .L494+4
 10661 0866 C2F8A032 		str	r3, [r2, #672]
1418:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10662              		.loc 1 1418 0
 10663 086a 7A4B     		ldr	r3, .L494+4
 10664 086c D3F8A012 		ldr	r1, [r3, #672]
 10665 0870 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10666 0872 7848     		ldr	r0, .L494+4
 10667 0874 1346     		mov	r3, r2
 10668 0876 DB00     		lsls	r3, r3, #3
 10669 0878 9B1A     		subs	r3, r3, r2
 10670 087a 1B01     		lsls	r3, r3, #4
 10671 087c 0344     		add	r3, r3, r0
 10672 087e 03F58873 		add	r3, r3, #272
 10673 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10674 0884 1846     		mov	r0, r3
 10675 0886 734A     		ldr	r2, .L494+4
 10676 0888 0346     		mov	r3, r0
 10677 088a 5B00     		lsls	r3, r3, #1
 10678 088c 0344     		add	r3, r3, r0
 10679 088e 1B01     		lsls	r3, r3, #4
 10680 0890 1344     		add	r3, r3, r2
 10681 0892 03F29513 		addw	r3, r3, #405
 10682 0896 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10683 0898 01FA03F3 		lsl	r3, r1, r3
 10684 089c 6D4A     		ldr	r2, .L494+4
 10685 089e C2F8A032 		str	r3, [r2, #672]
1419:..\src/command_processing.c ****             break; 
 10686              		.loc 1 1419 0
 10687 08a2 00F012BE 		b	.L424
 10688              	.L398:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 244


1420:..\src/command_processing.c ****             
1421:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1422:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10689              		.loc 1 1422 0
 10690 08a6 6A4B     		ldr	r3, .L494
 10691 08a8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10692 08aa 1A06     		lsls	r2, r3, #24
 10693 08ac 684B     		ldr	r3, .L494
 10694 08ae 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10695 08b0 1B04     		lsls	r3, r3, #16
 10696 08b2 1A43     		orrs	r2, r2, r3
 10697 08b4 664B     		ldr	r3, .L494
 10698 08b6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10699 08b8 1B02     		lsls	r3, r3, #8
 10700 08ba 1343     		orrs	r3, r3, r2
 10701 08bc 644A     		ldr	r2, .L494
 10702 08be 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10703 08c0 1343     		orrs	r3, r3, r2
 10704 08c2 644A     		ldr	r2, .L494+4
 10705 08c4 C2F8A432 		str	r3, [r2, #676]
1423:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10706              		.loc 1 1423 0
 10707 08c8 624B     		ldr	r3, .L494+4
 10708 08ca D3F8A432 		ldr	r3, [r3, #676]
 10709 08ce 092B     		cmp	r3, #9
 10710 08d0 00F3F285 		bgt	.L485
 10711              		.loc 1 1423 0 is_stmt 0 discriminator 1
 10712 08d4 5F4B     		ldr	r3, .L494+4
 10713 08d6 0A22     		movs	r2, #10
 10714 08d8 C3F8A422 		str	r2, [r3, #676]
1424:..\src/command_processing.c ****            break; 
 10715              		.loc 1 1424 0 is_stmt 1 discriminator 1
 10716 08dc 00F0ECBD 		b	.L485
 10717              	.L399:
1425:..\src/command_processing.c ****             
1426:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1427:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10718              		.loc 1 1427 0
 10719 08e0 5B4B     		ldr	r3, .L494
 10720 08e2 DB78     		ldrb	r3, [r3, #3]
 10721 08e4 BB74     		strb	r3, [r7, #18]
1428:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10722              		.loc 1 1428 0
 10723 08e6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10724 08e8 002B     		cmp	r3, #0
 10725 08ea 04D0     		beq	.L442
1429:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 10726              		.loc 1 1429 0
 10727 08ec 594B     		ldr	r3, .L494+4
 10728 08ee 0122     		movs	r2, #1
 10729 08f0 83F8A720 		strb	r2, [r3, #167]
 10730 08f4 03E0     		b	.L443
 10731              	.L442:
1430:..\src/command_processing.c ****             } else {            // 0
1431:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10732              		.loc 1 1431 0
 10733 08f6 574B     		ldr	r3, .L494+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 245


 10734 08f8 0022     		movs	r2, #0
 10735 08fa 83F8A720 		strb	r2, [r3, #167]
 10736              	.L443:
1432:..\src/command_processing.c ****             }
1433:..\src/command_processing.c **** 			reset_last_value_flag[MOTOR_IDX] = 1;
 10737              		.loc 1 1433 0
 10738 08fe 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10739 0900 554A     		ldr	r2, .L494+8
 10740 0902 0121     		movs	r1, #1
 10741 0904 D154     		strb	r1, [r2, r3]
1434:..\src/command_processing.c **** 
1435:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10742              		.loc 1 1435 0
 10743 0906 534B     		ldr	r3, .L494+4
 10744 0908 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10745 090c 002B     		cmp	r3, #0
 10746 090e 40F0D585 		bne	.L486
1436:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1437:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10747              		.loc 1 1437 0
 10748 0912 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10749 0914 4F4B     		ldr	r3, .L494+4
 10750 0916 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10751 091a 4E49     		ldr	r1, .L494+4
 10752 091c 1346     		mov	r3, r2
 10753 091e DB00     		lsls	r3, r3, #3
 10754 0920 9B1A     		subs	r3, r3, r2
 10755 0922 1B01     		lsls	r3, r3, #4
 10756 0924 0B44     		add	r3, r3, r1
 10757 0926 03F58873 		add	r3, r3, #272
 10758 092a 0246     		mov	r2, r0
 10759 092c 1A70     		strb	r2, [r3]
1438:..\src/command_processing.c ****                 
1439:..\src/command_processing.c ****                 // Change also gears parameters
1440:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10760              		.loc 1 1440 0
 10761 092e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10762 0930 4849     		ldr	r1, .L494+4
 10763 0932 1346     		mov	r3, r2
 10764 0934 DB00     		lsls	r3, r3, #3
 10765 0936 9B1A     		subs	r3, r3, r2
 10766 0938 1B01     		lsls	r3, r3, #4
 10767 093a 0B44     		add	r3, r3, r1
 10768 093c 03F58873 		add	r3, r3, #272
 10769 0940 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10770 0942 1946     		mov	r1, r3
 10771 0944 434A     		ldr	r2, .L494+4
 10772 0946 0B46     		mov	r3, r1
 10773 0948 5B00     		lsls	r3, r3, #1
 10774 094a 0B44     		add	r3, r3, r1
 10775 094c 1B01     		lsls	r3, r3, #4
 10776 094e 1344     		add	r3, r3, r2
 10777 0950 03F5D873 		add	r3, r3, #432
 10778 0954 0122     		movs	r2, #1
 10779 0956 1A70     		strb	r2, [r3]
1441:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10780              		.loc 1 1441 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 246


 10781 0958 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10782 095a 3E49     		ldr	r1, .L494+4
 10783 095c 1346     		mov	r3, r2
 10784 095e DB00     		lsls	r3, r3, #3
 10785 0960 9B1A     		subs	r3, r3, r2
 10786 0962 1B01     		lsls	r3, r3, #4
 10787 0964 0B44     		add	r3, r3, r1
 10788 0966 03F58873 		add	r3, r3, #272
 10789 096a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10790 096c 1946     		mov	r1, r3
 10791 096e 394A     		ldr	r2, .L494+4
 10792 0970 0B46     		mov	r3, r1
 10793 0972 5B00     		lsls	r3, r3, #1
 10794 0974 0B44     		add	r3, r3, r1
 10795 0976 1B01     		lsls	r3, r3, #4
 10796 0978 1344     		add	r3, r3, r2
 10797 097a 03F2B513 		addw	r3, r3, #437
 10798 097e 2322     		movs	r2, #35
 10799 0980 1A70     		strb	r2, [r3]
1442:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10800              		.loc 1 1442 0
 10801 0982 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10802 0984 3349     		ldr	r1, .L494+4
 10803 0986 1346     		mov	r3, r2
 10804 0988 DB00     		lsls	r3, r3, #3
 10805 098a 9B1A     		subs	r3, r3, r2
 10806 098c 1B01     		lsls	r3, r3, #4
 10807 098e 0B44     		add	r3, r3, r1
 10808 0990 03F58873 		add	r3, r3, #272
 10809 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10810 0996 1946     		mov	r1, r3
 10811 0998 2E4A     		ldr	r2, .L494+4
 10812 099a 0B46     		mov	r3, r1
 10813 099c 5B00     		lsls	r3, r3, #1
 10814 099e 0B44     		add	r3, r3, r1
 10815 09a0 1B01     		lsls	r3, r3, #4
 10816 09a2 1344     		add	r3, r3, r2
 10817 09a4 03F5DB73 		add	r3, r3, #438
 10818 09a8 0322     		movs	r2, #3
 10819 09aa 1A70     		strb	r2, [r3]
1443:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10820              		.loc 1 1443 0
 10821 09ac 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10822 09ae 2949     		ldr	r1, .L494+4
 10823 09b0 1346     		mov	r3, r2
 10824 09b2 DB00     		lsls	r3, r3, #3
 10825 09b4 9B1A     		subs	r3, r3, r2
 10826 09b6 1B01     		lsls	r3, r3, #4
 10827 09b8 0B44     		add	r3, r3, r1
 10828 09ba 03F58873 		add	r3, r3, #272
 10829 09be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10830 09c0 1946     		mov	r1, r3
 10831 09c2 244A     		ldr	r2, .L494+4
 10832 09c4 0B46     		mov	r3, r1
 10833 09c6 5B00     		lsls	r3, r3, #1
 10834 09c8 0B44     		add	r3, r3, r1
 10835 09ca 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 247


 10836 09cc 1344     		add	r3, r3, r2
 10837 09ce 03F2B713 		addw	r3, r3, #439
 10838 09d2 FF22     		movs	r2, #255
 10839 09d4 1A70     		strb	r2, [r3]
1444:..\src/command_processing.c ****                 
1445:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1446:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10840              		.loc 1 1446 0
 10841 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10842 09d8 1E49     		ldr	r1, .L494+4
 10843 09da 1346     		mov	r3, r2
 10844 09dc DB00     		lsls	r3, r3, #3
 10845 09de 9B1A     		subs	r3, r3, r2
 10846 09e0 1B01     		lsls	r3, r3, #4
 10847 09e2 0B44     		add	r3, r3, r1
 10848 09e4 03F21113 		addw	r3, r3, #273
 10849 09e8 0122     		movs	r2, #1
 10850 09ea 1A70     		strb	r2, [r3]
1447:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10851              		.loc 1 1447 0
 10852 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10853 09ee 1949     		ldr	r1, .L494+4
 10854 09f0 1346     		mov	r3, r2
 10855 09f2 DB00     		lsls	r3, r3, #3
 10856 09f4 9B1A     		subs	r3, r3, r2
 10857 09f6 1B01     		lsls	r3, r3, #4
 10858 09f8 0B44     		add	r3, r3, r1
 10859 09fa 03F58973 		add	r3, r3, #274
 10860 09fe 0122     		movs	r2, #1
 10861 0a00 1A70     		strb	r2, [r3]
1448:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10862              		.loc 1 1448 0
 10863 0a02 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10864 0a04 1349     		ldr	r1, .L494+4
 10865 0a06 1346     		mov	r3, r2
 10866 0a08 DB00     		lsls	r3, r3, #3
 10867 0a0a 9B1A     		subs	r3, r3, r2
 10868 0a0c 1B01     		lsls	r3, r3, #4
 10869 0a0e 0B44     		add	r3, r3, r1
 10870 0a10 E433     		adds	r3, r3, #228
 10871 0a12 0022     		movs	r2, #0
 10872 0a14 1A60     		str	r2, [r3]
1449:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10873              		.loc 1 1449 0
 10874 0a16 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10875 0a18 0E4B     		ldr	r3, .L494+4
 10876 0a1a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10877 0a1e 1846     		mov	r0, r3
 10878 0a20 0C49     		ldr	r1, .L494+4
 10879 0a22 0346     		mov	r3, r0
 10880 0a24 5B00     		lsls	r3, r3, #1
 10881 0a26 0344     		add	r3, r3, r0
 10882 0a28 1B01     		lsls	r3, r3, #4
 10883 0a2a 0B44     		add	r3, r3, r1
 10884 0a2c 03F29513 		addw	r3, r3, #405
 10885 0a30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10886 0a32 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 248


 10887 0a34 4FF47A53 		mov	r3, #16000
 10888 0a38 03FA01F1 		lsl	r1, r3, r1
 10889 0a3c 0548     		ldr	r0, .L494+4
 10890 0a3e 1346     		mov	r3, r2
 10891 0a40 DB00     		lsls	r3, r3, #3
 10892 0a42 9B1A     		subs	r3, r3, r2
 10893 0a44 1B01     		lsls	r3, r3, #4
 10894 0a46 0344     		add	r3, r3, r0
 10895 0a48 E833     		adds	r3, r3, #232
 10896 0a4a 1960     		str	r1, [r3]
1450:..\src/command_processing.c ****             }    
1451:..\src/command_processing.c **** 
1452:..\src/command_processing.c ****             break; 
 10897              		.loc 1 1452 0
 10898 0a4c 00F036BD 		b	.L486
 10899              	.L495:
 10900              		.align	2
 10901              	.L494:
 10902 0a50 00000000 		.word	g_rx
 10903 0a54 00000000 		.word	g_mem
 10904 0a58 00000000 		.word	reset_last_value_flag
 10905              	.L400:
1453:..\src/command_processing.c **** 
1454:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1455:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10906              		.loc 1 1455 0
 10907 0a5c B94B     		ldr	r3, .L496
 10908 0a5e DB78     		ldrb	r3, [r3, #3]
 10909 0a60 BB74     		strb	r3, [r7, #18]
1456:..\src/command_processing.c ****             if (aux_uchar) {
 10910              		.loc 1 1456 0
 10911 0a62 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10912 0a64 002B     		cmp	r3, #0
 10913 0a66 05D0     		beq	.L445
1457:..\src/command_processing.c ****                 reset_counters();
 10914              		.loc 1 1457 0
 10915 0a68 FFF7FEFF 		bl	reset_counters
1458:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10916              		.loc 1 1458 0
 10917 0a6c B64B     		ldr	r3, .L496+4
 10918 0a6e 0022     		movs	r2, #0
 10919 0a70 83F8A820 		strb	r2, [r3, #168]
 10920              	.L445:
1459:..\src/command_processing.c ****             }
1460:..\src/command_processing.c ****             
1461:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10921              		.loc 1 1461 0
 10922 0a74 B54B     		ldr	r3, .L496+8
 10923 0a76 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10924 0a7a 012B     		cmp	r3, #1
 10925 0a7c 40F02085 		bne	.L487
1462:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1463:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10926              		.loc 1 1463 0
 10927 0a80 8720     		movs	r0, #135
 10928 0a82 FFF7FEFF 		bl	DS1302_read
 10929 0a86 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 249


 10930 0a88 BB74     		strb	r3, [r7, #18]
1464:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10931              		.loc 1 1464 0
 10932 0a8a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10933 0a8c 1B09     		lsrs	r3, r3, #4
 10934 0a8e DBB2     		uxtb	r3, r3
 10935 0a90 1A46     		mov	r2, r3
 10936 0a92 9200     		lsls	r2, r2, #2
 10937 0a94 1344     		add	r3, r3, r2
 10938 0a96 5B00     		lsls	r3, r3, #1
 10939 0a98 DAB2     		uxtb	r2, r3
 10940 0a9a BB7C     		ldrb	r3, [r7, #18]
 10941 0a9c 03F00F03 		and	r3, r3, #15
 10942 0aa0 DBB2     		uxtb	r3, r3
 10943 0aa2 1344     		add	r3, r3, r2
 10944 0aa4 DAB2     		uxtb	r2, r3
 10945 0aa6 A84B     		ldr	r3, .L496+4
 10946 0aa8 83F8A420 		strb	r2, [r3, #164]
1465:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10947              		.loc 1 1465 0
 10948 0aac 8920     		movs	r0, #137
 10949 0aae FFF7FEFF 		bl	DS1302_read
 10950 0ab2 0346     		mov	r3, r0
 10951 0ab4 BB74     		strb	r3, [r7, #18]
1466:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10952              		.loc 1 1466 0
 10953 0ab6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10954 0ab8 1B09     		lsrs	r3, r3, #4
 10955 0aba DBB2     		uxtb	r3, r3
 10956 0abc 1A46     		mov	r2, r3
 10957 0abe 9200     		lsls	r2, r2, #2
 10958 0ac0 1344     		add	r3, r3, r2
 10959 0ac2 5B00     		lsls	r3, r3, #1
 10960 0ac4 DAB2     		uxtb	r2, r3
 10961 0ac6 BB7C     		ldrb	r3, [r7, #18]
 10962 0ac8 03F00F03 		and	r3, r3, #15
 10963 0acc DBB2     		uxtb	r3, r3
 10964 0ace 1344     		add	r3, r3, r2
 10965 0ad0 DAB2     		uxtb	r2, r3
 10966 0ad2 9D4B     		ldr	r3, .L496+4
 10967 0ad4 83F8A520 		strb	r2, [r3, #165]
1467:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10968              		.loc 1 1467 0
 10969 0ad8 8D20     		movs	r0, #141
 10970 0ada FFF7FEFF 		bl	DS1302_read
 10971 0ade 0346     		mov	r3, r0
 10972 0ae0 BB74     		strb	r3, [r7, #18]
1468:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10973              		.loc 1 1468 0
 10974 0ae2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10975 0ae4 1B09     		lsrs	r3, r3, #4
 10976 0ae6 DBB2     		uxtb	r3, r3
 10977 0ae8 1A46     		mov	r2, r3
 10978 0aea 9200     		lsls	r2, r2, #2
 10979 0aec 1344     		add	r3, r3, r2
 10980 0aee 5B00     		lsls	r3, r3, #1
 10981 0af0 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 250


 10982 0af2 BB7C     		ldrb	r3, [r7, #18]
 10983 0af4 03F00F03 		and	r3, r3, #15
 10984 0af8 DBB2     		uxtb	r3, r3
 10985 0afa 1344     		add	r3, r3, r2
 10986 0afc DAB2     		uxtb	r2, r3
 10987 0afe 924B     		ldr	r3, .L496+4
 10988 0b00 83F8A620 		strb	r2, [r3, #166]
1469:..\src/command_processing.c ****             }
1470:..\src/command_processing.c ****             break;             
 10989              		.loc 1 1470 0
 10990 0b04 00F0DCBC 		b	.L487
 10991              	.L401:
 10992              	.LBB23:
1471:..\src/command_processing.c ****             
1472:..\src/command_processing.c ****         case 32:         //Current Time
1473:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10993              		.loc 1 1473 0
 10994 0b08 0023     		movs	r3, #0
 10995 0b0a 7B75     		strb	r3, [r7, #21]
 10996 0b0c 0CE0     		b	.L447
 10997              	.L448:
1474:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10998              		.loc 1 1474 0 discriminator 3
 10999 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 11000 0b10 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 11001 0b12 0332     		adds	r2, r2, #3
 11002 0b14 8B49     		ldr	r1, .L496
 11003 0b16 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11004 0b18 8B4A     		ldr	r2, .L496+4
 11005 0b1a 1344     		add	r3, r3, r2
 11006 0b1c 0A46     		mov	r2, r1
 11007 0b1e 83F82022 		strb	r2, [r3, #544]
1473:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 11008              		.loc 1 1473 0 discriminator 3
 11009 0b22 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 11010 0b24 0133     		adds	r3, r3, #1
 11011 0b26 7B75     		strb	r3, [r7, #21]
 11012              	.L447:
1473:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 11013              		.loc 1 1473 0 is_stmt 0 discriminator 1
 11014 0b28 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 11015 0b2a 052B     		cmp	r3, #5
 11016 0b2c EFD9     		bls	.L448
 11017              	.LBE23:
1475:..\src/command_processing.c ****             }
1476:..\src/command_processing.c ****             
1477:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 11018              		.loc 1 1477 0 is_stmt 1
 11019 0b2e 864B     		ldr	r3, .L496+4
 11020 0b30 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 11021 0b34 012B     		cmp	r3, #1
 11022 0b36 40F0C584 		bne	.L488
1478:..\src/command_processing.c ****                 set_RTC_time();
 11023              		.loc 1 1478 0
 11024 0b3a FFF7FEFF 		bl	set_RTC_time
1479:..\src/command_processing.c ****             }
1480:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 251


 11025              		.loc 1 1480 0
 11026 0b3e 00F0C1BC 		b	.L488
 11027              	.L402:
1481:..\src/command_processing.c ****            
1482:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1483:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11028              		.loc 1 1483 0
 11029 0b42 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11030 0b44 7F4B     		ldr	r3, .L496
 11031 0b46 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11032 0b48 7F49     		ldr	r1, .L496+4
 11033 0b4a 1346     		mov	r3, r2
 11034 0b4c DB00     		lsls	r3, r3, #3
 11035 0b4e 9B1A     		subs	r3, r3, r2
 11036 0b50 1B01     		lsls	r3, r3, #4
 11037 0b52 0B44     		add	r3, r3, r1
 11038 0b54 E233     		adds	r3, r3, #226
 11039 0b56 0246     		mov	r2, r0
 11040 0b58 1A70     		strb	r2, [r3]
1484:..\src/command_processing.c ****             set_motor_driver_type();            
 11041              		.loc 1 1484 0
 11042 0b5a FFF7FEFF 		bl	set_motor_driver_type
1485:..\src/command_processing.c ****             break;
 11043              		.loc 1 1485 0
 11044 0b5e 00F0B4BC 		b	.L424
 11045              	.L403:
1486:..\src/command_processing.c ****             
1487:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1488:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11046              		.loc 1 1488 0
 11047 0b62 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11048 0b64 7949     		ldr	r1, .L496+8
 11049 0b66 1346     		mov	r3, r2
 11050 0b68 DB00     		lsls	r3, r3, #3
 11051 0b6a 9B1A     		subs	r3, r3, r2
 11052 0b6c 1B01     		lsls	r3, r3, #4
 11053 0b6e 0B44     		add	r3, r3, r1
 11054 0b70 03F20F13 		addw	r3, r3, #271
 11055 0b74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11056 0b76 032B     		cmp	r3, #3
 11057 0b78 00F08680 		beq	.L450
1489:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11058              		.loc 1 1489 0
 11059 0b7c 744B     		ldr	r3, .L496+12
 11060 0b7e 1B68     		ldr	r3, [r3]	@ float
 11061 0b80 FB60     		str	r3, [r7, #12]	@ float
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11062              		.loc 1 1490 0
 11063 0b82 0023     		movs	r3, #0
 11064 0b84 BB75     		strb	r3, [r7, #22]
 11065 0b86 0EE0     		b	.L451
 11066              	.L452:
1491:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11067              		.loc 1 1491 0 discriminator 3
 11068 0b88 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11069 0b8a C3F10303 		rsb	r3, r3, #3
 11070 0b8e 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 252


 11071 0b92 1344     		add	r3, r3, r2
 11072 0b94 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11073 0b96 07F10C01 		add	r1, r7, #12
 11074 0b9a 0A44     		add	r2, r2, r1
 11075 0b9c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11076 0b9e 1A70     		strb	r2, [r3]
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11077              		.loc 1 1490 0 discriminator 3
 11078 0ba0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11079 0ba2 0133     		adds	r3, r3, #1
 11080 0ba4 BB75     		strb	r3, [r7, #22]
 11081              	.L451:
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11082              		.loc 1 1490 0 is_stmt 0 discriminator 1
 11083 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11084 0ba8 032B     		cmp	r3, #3
 11085 0baa EDD9     		bls	.L452
1492:..\src/command_processing.c ****                 }
1493:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 11086              		.loc 1 1493 0 is_stmt 1
 11087 0bac FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11088 0bae BB68     		ldr	r3, [r7, #8]	@ float
 11089 0bb0 4FF08F41 		mov	r1, #1199570944
 11090 0bb4 1846     		mov	r0, r3
 11091 0bb6 FFF7FEFF 		bl	__aeabi_fmul
 11092 0bba 0346     		mov	r3, r0
 11093 0bbc 1846     		mov	r0, r3
 11094 0bbe FFF7FEFF 		bl	__aeabi_f2iz
 11095 0bc2 0146     		mov	r1, r0
 11096 0bc4 604A     		ldr	r2, .L496+4
 11097 0bc6 2346     		mov	r3, r4
 11098 0bc8 DB00     		lsls	r3, r3, #3
 11099 0bca 1B1B     		subs	r3, r3, r4
 11100 0bcc 1B01     		lsls	r3, r3, #4
 11101 0bce 1344     		add	r3, r3, r2
 11102 0bd0 B033     		adds	r3, r3, #176
 11103 0bd2 1960     		str	r1, [r3]
1494:..\src/command_processing.c ****                 
1495:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11104              		.loc 1 1495 0
 11105 0bd4 5F4B     		ldr	r3, .L496+16
 11106 0bd6 1B68     		ldr	r3, [r3]	@ float
 11107 0bd8 FB60     		str	r3, [r7, #12]	@ float
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11108              		.loc 1 1496 0
 11109 0bda 0023     		movs	r3, #0
 11110 0bdc BB75     		strb	r3, [r7, #22]
 11111 0bde 0EE0     		b	.L453
 11112              	.L454:
1497:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11113              		.loc 1 1497 0 discriminator 3
 11114 0be0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11115 0be2 C3F10303 		rsb	r3, r3, #3
 11116 0be6 07F10802 		add	r2, r7, #8
 11117 0bea 1344     		add	r3, r3, r2
 11118 0bec BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11119 0bee 07F10C01 		add	r1, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 253


 11120 0bf2 0A44     		add	r2, r2, r1
 11121 0bf4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11122 0bf6 1A70     		strb	r2, [r3]
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11123              		.loc 1 1496 0 discriminator 3
 11124 0bf8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11125 0bfa 0133     		adds	r3, r3, #1
 11126 0bfc BB75     		strb	r3, [r7, #22]
 11127              	.L453:
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11128              		.loc 1 1496 0 is_stmt 0 discriminator 1
 11129 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11130 0c00 032B     		cmp	r3, #3
 11131 0c02 EDD9     		bls	.L454
1498:..\src/command_processing.c ****                 }
1499:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 11132              		.loc 1 1499 0 is_stmt 1
 11133 0c04 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11134 0c06 BB68     		ldr	r3, [r7, #8]	@ float
 11135 0c08 4FF08F41 		mov	r1, #1199570944
 11136 0c0c 1846     		mov	r0, r3
 11137 0c0e FFF7FEFF 		bl	__aeabi_fmul
 11138 0c12 0346     		mov	r3, r0
 11139 0c14 1846     		mov	r0, r3
 11140 0c16 FFF7FEFF 		bl	__aeabi_f2iz
 11141 0c1a 0146     		mov	r1, r0
 11142 0c1c 4A4A     		ldr	r2, .L496+4
 11143 0c1e 2346     		mov	r3, r4
 11144 0c20 DB00     		lsls	r3, r3, #3
 11145 0c22 1B1B     		subs	r3, r3, r4
 11146 0c24 1B01     		lsls	r3, r3, #4
 11147 0c26 1344     		add	r3, r3, r2
 11148 0c28 B433     		adds	r3, r3, #180
 11149 0c2a 1960     		str	r1, [r3]
1500:..\src/command_processing.c ****                 
1501:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11150              		.loc 1 1501 0
 11151 0c2c 4A4B     		ldr	r3, .L496+20
 11152 0c2e 1B68     		ldr	r3, [r3]	@ float
 11153 0c30 FB60     		str	r3, [r7, #12]	@ float
1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11154              		.loc 1 1502 0
 11155 0c32 0023     		movs	r3, #0
 11156 0c34 BB75     		strb	r3, [r7, #22]
 11157 0c36 0EE0     		b	.L455
 11158              	.L456:
1503:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11159              		.loc 1 1503 0 discriminator 3
 11160 0c38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11161 0c3a C3F10303 		rsb	r3, r3, #3
 11162 0c3e 07F10802 		add	r2, r7, #8
 11163 0c42 1344     		add	r3, r3, r2
 11164 0c44 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11165 0c46 07F10C01 		add	r1, r7, #12
 11166 0c4a 0A44     		add	r2, r2, r1
 11167 0c4c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11168 0c4e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 254


1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11169              		.loc 1 1502 0 discriminator 3
 11170 0c50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11171 0c52 0133     		adds	r3, r3, #1
 11172 0c54 BB75     		strb	r3, [r7, #22]
 11173              	.L455:
1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11174              		.loc 1 1502 0 is_stmt 0 discriminator 1
 11175 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11176 0c58 032B     		cmp	r3, #3
 11177 0c5a EDD9     		bls	.L456
1504:..\src/command_processing.c ****                 }
1505:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 11178              		.loc 1 1505 0 is_stmt 1
 11179 0c5c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11180 0c5e BB68     		ldr	r3, [r7, #8]	@ float
 11181 0c60 4FF08F41 		mov	r1, #1199570944
 11182 0c64 1846     		mov	r0, r3
 11183 0c66 FFF7FEFF 		bl	__aeabi_fmul
 11184 0c6a 0346     		mov	r3, r0
 11185 0c6c 1846     		mov	r0, r3
 11186 0c6e FFF7FEFF 		bl	__aeabi_f2iz
 11187 0c72 0146     		mov	r1, r0
 11188 0c74 344A     		ldr	r2, .L496+4
 11189 0c76 2346     		mov	r3, r4
 11190 0c78 DB00     		lsls	r3, r3, #3
 11191 0c7a 1B1B     		subs	r3, r3, r4
 11192 0c7c 1B01     		lsls	r3, r3, #4
 11193 0c7e 1344     		add	r3, r3, r2
 11194 0c80 B833     		adds	r3, r3, #184
 11195 0c82 1960     		str	r1, [r3]
1506:..\src/command_processing.c ****             }
1507:..\src/command_processing.c ****             else {
1508:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1510:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1511:..\src/command_processing.c ****                 }
1512:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1513:..\src/command_processing.c ****                 
1514:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1516:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1517:..\src/command_processing.c ****                 }
1518:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1519:..\src/command_processing.c ****                 
1520:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1521:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1522:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1523:..\src/command_processing.c ****                 }
1524:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1525:..\src/command_processing.c ****             }
1526:..\src/command_processing.c ****             break;
 11196              		.loc 1 1526 0
 11197 0c84 00F021BC 		b	.L424
 11198              	.L450:
1508:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11199              		.loc 1 1508 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 255


 11200 0c88 314B     		ldr	r3, .L496+12
 11201 0c8a 1B68     		ldr	r3, [r3]	@ float
 11202 0c8c FB60     		str	r3, [r7, #12]	@ float
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11203              		.loc 1 1509 0
 11204 0c8e 0023     		movs	r3, #0
 11205 0c90 BB75     		strb	r3, [r7, #22]
 11206 0c92 0EE0     		b	.L458
 11207              	.L459:
1510:..\src/command_processing.c ****                 }
 11208              		.loc 1 1510 0 discriminator 3
 11209 0c94 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11210 0c96 C3F10303 		rsb	r3, r3, #3
 11211 0c9a 07F10802 		add	r2, r7, #8
 11212 0c9e 1344     		add	r3, r3, r2
 11213 0ca0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11214 0ca2 07F10C01 		add	r1, r7, #12
 11215 0ca6 0A44     		add	r2, r2, r1
 11216 0ca8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11217 0caa 1A70     		strb	r2, [r3]
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11218              		.loc 1 1509 0 discriminator 3
 11219 0cac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11220 0cae 0133     		adds	r3, r3, #1
 11221 0cb0 BB75     		strb	r3, [r7, #22]
 11222              	.L458:
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11223              		.loc 1 1509 0 is_stmt 0 discriminator 1
 11224 0cb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11225 0cb4 032B     		cmp	r3, #3
 11226 0cb6 EDD9     		bls	.L459
1512:..\src/command_processing.c ****                 
 11227              		.loc 1 1512 0 is_stmt 1
 11228 0cb8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11229 0cba BB68     		ldr	r3, [r7, #8]	@ float
 11230 0cbc 4FF08F41 		mov	r1, #1199570944
 11231 0cc0 1846     		mov	r0, r3
 11232 0cc2 FFF7FEFF 		bl	__aeabi_fmul
 11233 0cc6 0346     		mov	r3, r0
 11234 0cc8 1846     		mov	r0, r3
 11235 0cca FFF7FEFF 		bl	__aeabi_f2iz
 11236 0cce 0146     		mov	r1, r0
 11237 0cd0 1D4A     		ldr	r2, .L496+4
 11238 0cd2 2346     		mov	r3, r4
 11239 0cd4 DB00     		lsls	r3, r3, #3
 11240 0cd6 1B1B     		subs	r3, r3, r4
 11241 0cd8 1B01     		lsls	r3, r3, #4
 11242 0cda 1344     		add	r3, r3, r2
 11243 0cdc C833     		adds	r3, r3, #200
 11244 0cde 1960     		str	r1, [r3]
1514:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11245              		.loc 1 1514 0
 11246 0ce0 1C4B     		ldr	r3, .L496+16
 11247 0ce2 1B68     		ldr	r3, [r3]	@ float
 11248 0ce4 FB60     		str	r3, [r7, #12]	@ float
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11249              		.loc 1 1515 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 256


 11250 0ce6 0023     		movs	r3, #0
 11251 0ce8 BB75     		strb	r3, [r7, #22]
 11252 0cea 0EE0     		b	.L460
 11253              	.L461:
1516:..\src/command_processing.c ****                 }
 11254              		.loc 1 1516 0 discriminator 3
 11255 0cec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11256 0cee C3F10303 		rsb	r3, r3, #3
 11257 0cf2 07F10802 		add	r2, r7, #8
 11258 0cf6 1344     		add	r3, r3, r2
 11259 0cf8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11260 0cfa 07F10C01 		add	r1, r7, #12
 11261 0cfe 0A44     		add	r2, r2, r1
 11262 0d00 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11263 0d02 1A70     		strb	r2, [r3]
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11264              		.loc 1 1515 0 discriminator 3
 11265 0d04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11266 0d06 0133     		adds	r3, r3, #1
 11267 0d08 BB75     		strb	r3, [r7, #22]
 11268              	.L460:
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11269              		.loc 1 1515 0 is_stmt 0 discriminator 1
 11270 0d0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11271 0d0c 032B     		cmp	r3, #3
 11272 0d0e EDD9     		bls	.L461
1518:..\src/command_processing.c ****                 
 11273              		.loc 1 1518 0 is_stmt 1
 11274 0d10 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11275 0d12 BB68     		ldr	r3, [r7, #8]	@ float
 11276 0d14 4FF08F41 		mov	r1, #1199570944
 11277 0d18 1846     		mov	r0, r3
 11278 0d1a FFF7FEFF 		bl	__aeabi_fmul
 11279 0d1e 0346     		mov	r3, r0
 11280 0d20 1846     		mov	r0, r3
 11281 0d22 FFF7FEFF 		bl	__aeabi_f2iz
 11282 0d26 0146     		mov	r1, r0
 11283 0d28 074A     		ldr	r2, .L496+4
 11284 0d2a 2346     		mov	r3, r4
 11285 0d2c DB00     		lsls	r3, r3, #3
 11286 0d2e 1B1B     		subs	r3, r3, r4
 11287 0d30 1B01     		lsls	r3, r3, #4
 11288 0d32 1344     		add	r3, r3, r2
 11289 0d34 CC33     		adds	r3, r3, #204
 11290 0d36 1960     		str	r1, [r3]
1520:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11291              		.loc 1 1520 0
 11292 0d38 074B     		ldr	r3, .L496+20
 11293 0d3a 1B68     		ldr	r3, [r3]	@ float
 11294 0d3c FB60     		str	r3, [r7, #12]	@ float
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11295              		.loc 1 1521 0
 11296 0d3e 0023     		movs	r3, #0
 11297 0d40 BB75     		strb	r3, [r7, #22]
 11298 0d42 1AE0     		b	.L462
 11299              	.L497:
 11300              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 257


 11301              	.L496:
 11302 0d44 00000000 		.word	g_rx
 11303 0d48 00000000 		.word	g_mem
 11304 0d4c 00000000 		.word	c_mem
 11305 0d50 03000000 		.word	g_rx+3
 11306 0d54 07000000 		.word	g_rx+7
 11307 0d58 0B000000 		.word	g_rx+11
 11308              	.L463:
1522:..\src/command_processing.c ****                 }
 11309              		.loc 1 1522 0 discriminator 3
 11310 0d5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11311 0d5e C3F10303 		rsb	r3, r3, #3
 11312 0d62 07F10802 		add	r2, r7, #8
 11313 0d66 1344     		add	r3, r3, r2
 11314 0d68 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11315 0d6a 07F10C01 		add	r1, r7, #12
 11316 0d6e 0A44     		add	r2, r2, r1
 11317 0d70 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11318 0d72 1A70     		strb	r2, [r3]
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11319              		.loc 1 1521 0 discriminator 3
 11320 0d74 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11321 0d76 0133     		adds	r3, r3, #1
 11322 0d78 BB75     		strb	r3, [r7, #22]
 11323              	.L462:
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11324              		.loc 1 1521 0 is_stmt 0 discriminator 1
 11325 0d7a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11326 0d7c 032B     		cmp	r3, #3
 11327 0d7e EDD9     		bls	.L463
1524:..\src/command_processing.c ****             }
 11328              		.loc 1 1524 0 is_stmt 1
 11329 0d80 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11330 0d82 BB68     		ldr	r3, [r7, #8]	@ float
 11331 0d84 4FF08F41 		mov	r1, #1199570944
 11332 0d88 1846     		mov	r0, r3
 11333 0d8a FFF7FEFF 		bl	__aeabi_fmul
 11334 0d8e 0346     		mov	r3, r0
 11335 0d90 1846     		mov	r0, r3
 11336 0d92 FFF7FEFF 		bl	__aeabi_f2iz
 11337 0d96 0146     		mov	r1, r0
 11338 0d98 A34A     		ldr	r2, .L498
 11339 0d9a 2346     		mov	r3, r4
 11340 0d9c DB00     		lsls	r3, r3, #3
 11341 0d9e 1B1B     		subs	r3, r3, r4
 11342 0da0 1B01     		lsls	r3, r3, #4
 11343 0da2 1344     		add	r3, r3, r2
 11344 0da4 D033     		adds	r3, r3, #208
 11345 0da6 1960     		str	r1, [r3]
 11346              		.loc 1 1526 0
 11347 0da8 8FE3     		b	.L424
 11348              	.L404:
1527:..\src/command_processing.c ****             
1528:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1529:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11349              		.loc 1 1529 0
 11350 0daa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 258


 11351 0dac 9F49     		ldr	r1, .L498+4
 11352 0dae 1346     		mov	r3, r2
 11353 0db0 DB00     		lsls	r3, r3, #3
 11354 0db2 9B1A     		subs	r3, r3, r2
 11355 0db4 1B01     		lsls	r3, r3, #4
 11356 0db6 0B44     		add	r3, r3, r1
 11357 0db8 03F20F13 		addw	r3, r3, #271
 11358 0dbc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11359 0dbe 032B     		cmp	r3, #3
 11360 0dc0 00F08580 		beq	.L464
1530:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11361              		.loc 1 1530 0
 11362 0dc4 9A4B     		ldr	r3, .L498+8
 11363 0dc6 1B68     		ldr	r3, [r3]	@ float
 11364 0dc8 FB60     		str	r3, [r7, #12]	@ float
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11365              		.loc 1 1531 0
 11366 0dca 0023     		movs	r3, #0
 11367 0dcc BB75     		strb	r3, [r7, #22]
 11368 0dce 0EE0     		b	.L465
 11369              	.L466:
1532:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11370              		.loc 1 1532 0 discriminator 3
 11371 0dd0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11372 0dd2 C3F10303 		rsb	r3, r3, #3
 11373 0dd6 07F10802 		add	r2, r7, #8
 11374 0dda 1344     		add	r3, r3, r2
 11375 0ddc BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11376 0dde 07F10C01 		add	r1, r7, #12
 11377 0de2 0A44     		add	r2, r2, r1
 11378 0de4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11379 0de6 1A70     		strb	r2, [r3]
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11380              		.loc 1 1531 0 discriminator 3
 11381 0de8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11382 0dea 0133     		adds	r3, r3, #1
 11383 0dec BB75     		strb	r3, [r7, #22]
 11384              	.L465:
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11385              		.loc 1 1531 0 is_stmt 0 discriminator 1
 11386 0dee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11387 0df0 032B     		cmp	r3, #3
 11388 0df2 EDD9     		bls	.L466
1533:..\src/command_processing.c ****                 }
1534:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 11389              		.loc 1 1534 0 is_stmt 1
 11390 0df4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11391 0df6 BB68     		ldr	r3, [r7, #8]	@ float
 11392 0df8 4FF08F41 		mov	r1, #1199570944
 11393 0dfc 1846     		mov	r0, r3
 11394 0dfe FFF7FEFF 		bl	__aeabi_fmul
 11395 0e02 0346     		mov	r3, r0
 11396 0e04 1846     		mov	r0, r3
 11397 0e06 FFF7FEFF 		bl	__aeabi_f2iz
 11398 0e0a 0146     		mov	r1, r0
 11399 0e0c 864A     		ldr	r2, .L498
 11400 0e0e 2346     		mov	r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 259


 11401 0e10 DB00     		lsls	r3, r3, #3
 11402 0e12 1B1B     		subs	r3, r3, r4
 11403 0e14 1B01     		lsls	r3, r3, #4
 11404 0e16 1344     		add	r3, r3, r2
 11405 0e18 BC33     		adds	r3, r3, #188
 11406 0e1a 1960     		str	r1, [r3]
1535:..\src/command_processing.c ****                 
1536:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11407              		.loc 1 1536 0
 11408 0e1c 854B     		ldr	r3, .L498+12
 11409 0e1e 1B68     		ldr	r3, [r3]	@ float
 11410 0e20 FB60     		str	r3, [r7, #12]	@ float
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11411              		.loc 1 1537 0
 11412 0e22 0023     		movs	r3, #0
 11413 0e24 BB75     		strb	r3, [r7, #22]
 11414 0e26 0EE0     		b	.L467
 11415              	.L468:
1538:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11416              		.loc 1 1538 0 discriminator 3
 11417 0e28 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11418 0e2a C3F10303 		rsb	r3, r3, #3
 11419 0e2e 07F10802 		add	r2, r7, #8
 11420 0e32 1344     		add	r3, r3, r2
 11421 0e34 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11422 0e36 07F10C01 		add	r1, r7, #12
 11423 0e3a 0A44     		add	r2, r2, r1
 11424 0e3c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11425 0e3e 1A70     		strb	r2, [r3]
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11426              		.loc 1 1537 0 discriminator 3
 11427 0e40 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11428 0e42 0133     		adds	r3, r3, #1
 11429 0e44 BB75     		strb	r3, [r7, #22]
 11430              	.L467:
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11431              		.loc 1 1537 0 is_stmt 0 discriminator 1
 11432 0e46 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11433 0e48 032B     		cmp	r3, #3
 11434 0e4a EDD9     		bls	.L468
1539:..\src/command_processing.c ****                 }
1540:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11435              		.loc 1 1540 0 is_stmt 1
 11436 0e4c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11437 0e4e BB68     		ldr	r3, [r7, #8]	@ float
 11438 0e50 4FF08F41 		mov	r1, #1199570944
 11439 0e54 1846     		mov	r0, r3
 11440 0e56 FFF7FEFF 		bl	__aeabi_fmul
 11441 0e5a 0346     		mov	r3, r0
 11442 0e5c 1846     		mov	r0, r3
 11443 0e5e FFF7FEFF 		bl	__aeabi_f2iz
 11444 0e62 0146     		mov	r1, r0
 11445 0e64 704A     		ldr	r2, .L498
 11446 0e66 2346     		mov	r3, r4
 11447 0e68 DB00     		lsls	r3, r3, #3
 11448 0e6a 1B1B     		subs	r3, r3, r4
 11449 0e6c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 260


 11450 0e6e 1344     		add	r3, r3, r2
 11451 0e70 C033     		adds	r3, r3, #192
 11452 0e72 1960     		str	r1, [r3]
1541:..\src/command_processing.c ****                 
1542:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11453              		.loc 1 1542 0
 11454 0e74 704B     		ldr	r3, .L498+16
 11455 0e76 1B68     		ldr	r3, [r3]	@ float
 11456 0e78 FB60     		str	r3, [r7, #12]	@ float
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11457              		.loc 1 1543 0
 11458 0e7a 0023     		movs	r3, #0
 11459 0e7c BB75     		strb	r3, [r7, #22]
 11460 0e7e 0EE0     		b	.L469
 11461              	.L470:
1544:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11462              		.loc 1 1544 0 discriminator 3
 11463 0e80 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11464 0e82 C3F10303 		rsb	r3, r3, #3
 11465 0e86 07F10802 		add	r2, r7, #8
 11466 0e8a 1344     		add	r3, r3, r2
 11467 0e8c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11468 0e8e 07F10C01 		add	r1, r7, #12
 11469 0e92 0A44     		add	r2, r2, r1
 11470 0e94 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11471 0e96 1A70     		strb	r2, [r3]
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11472              		.loc 1 1543 0 discriminator 3
 11473 0e98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11474 0e9a 0133     		adds	r3, r3, #1
 11475 0e9c BB75     		strb	r3, [r7, #22]
 11476              	.L469:
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11477              		.loc 1 1543 0 is_stmt 0 discriminator 1
 11478 0e9e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11479 0ea0 032B     		cmp	r3, #3
 11480 0ea2 EDD9     		bls	.L470
1545:..\src/command_processing.c ****                 }
1546:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11481              		.loc 1 1546 0 is_stmt 1
 11482 0ea4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11483 0ea6 BB68     		ldr	r3, [r7, #8]	@ float
 11484 0ea8 4FF08F41 		mov	r1, #1199570944
 11485 0eac 1846     		mov	r0, r3
 11486 0eae FFF7FEFF 		bl	__aeabi_fmul
 11487 0eb2 0346     		mov	r3, r0
 11488 0eb4 1846     		mov	r0, r3
 11489 0eb6 FFF7FEFF 		bl	__aeabi_f2iz
 11490 0eba 0146     		mov	r1, r0
 11491 0ebc 5A4A     		ldr	r2, .L498
 11492 0ebe 2346     		mov	r3, r4
 11493 0ec0 DB00     		lsls	r3, r3, #3
 11494 0ec2 1B1B     		subs	r3, r3, r4
 11495 0ec4 1B01     		lsls	r3, r3, #4
 11496 0ec6 1344     		add	r3, r3, r2
 11497 0ec8 C433     		adds	r3, r3, #196
 11498 0eca 1960     		str	r1, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 261


1547:..\src/command_processing.c ****             }
1548:..\src/command_processing.c ****             else {
1549:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1550:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1551:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1552:..\src/command_processing.c ****                 }
1553:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1554:..\src/command_processing.c ****                 
1555:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1556:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1557:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1558:..\src/command_processing.c ****                 }
1559:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1560:..\src/command_processing.c ****                 
1561:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1562:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1563:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1564:..\src/command_processing.c ****                 }
1565:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1566:..\src/command_processing.c ****             }            
1567:..\src/command_processing.c ****             break;  
 11499              		.loc 1 1567 0
 11500 0ecc FDE2     		b	.L424
 11501              	.L464:
1549:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11502              		.loc 1 1549 0
 11503 0ece 584B     		ldr	r3, .L498+8
 11504 0ed0 1B68     		ldr	r3, [r3]	@ float
 11505 0ed2 FB60     		str	r3, [r7, #12]	@ float
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11506              		.loc 1 1550 0
 11507 0ed4 0023     		movs	r3, #0
 11508 0ed6 BB75     		strb	r3, [r7, #22]
 11509 0ed8 0EE0     		b	.L472
 11510              	.L473:
1551:..\src/command_processing.c ****                 }
 11511              		.loc 1 1551 0 discriminator 3
 11512 0eda BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11513 0edc C3F10303 		rsb	r3, r3, #3
 11514 0ee0 07F10802 		add	r2, r7, #8
 11515 0ee4 1344     		add	r3, r3, r2
 11516 0ee6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11517 0ee8 07F10C01 		add	r1, r7, #12
 11518 0eec 0A44     		add	r2, r2, r1
 11519 0eee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11520 0ef0 1A70     		strb	r2, [r3]
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11521              		.loc 1 1550 0 discriminator 3
 11522 0ef2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11523 0ef4 0133     		adds	r3, r3, #1
 11524 0ef6 BB75     		strb	r3, [r7, #22]
 11525              	.L472:
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11526              		.loc 1 1550 0 is_stmt 0 discriminator 1
 11527 0ef8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11528 0efa 032B     		cmp	r3, #3
 11529 0efc EDD9     		bls	.L473
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 262


1553:..\src/command_processing.c ****                 
 11530              		.loc 1 1553 0 is_stmt 1
 11531 0efe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11532 0f00 BB68     		ldr	r3, [r7, #8]	@ float
 11533 0f02 4FF08F41 		mov	r1, #1199570944
 11534 0f06 1846     		mov	r0, r3
 11535 0f08 FFF7FEFF 		bl	__aeabi_fmul
 11536 0f0c 0346     		mov	r3, r0
 11537 0f0e 1846     		mov	r0, r3
 11538 0f10 FFF7FEFF 		bl	__aeabi_f2iz
 11539 0f14 0146     		mov	r1, r0
 11540 0f16 444A     		ldr	r2, .L498
 11541 0f18 2346     		mov	r3, r4
 11542 0f1a DB00     		lsls	r3, r3, #3
 11543 0f1c 1B1B     		subs	r3, r3, r4
 11544 0f1e 1B01     		lsls	r3, r3, #4
 11545 0f20 1344     		add	r3, r3, r2
 11546 0f22 D433     		adds	r3, r3, #212
 11547 0f24 1960     		str	r1, [r3]
1555:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11548              		.loc 1 1555 0
 11549 0f26 434B     		ldr	r3, .L498+12
 11550 0f28 1B68     		ldr	r3, [r3]	@ float
 11551 0f2a FB60     		str	r3, [r7, #12]	@ float
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11552              		.loc 1 1556 0
 11553 0f2c 0023     		movs	r3, #0
 11554 0f2e BB75     		strb	r3, [r7, #22]
 11555 0f30 0EE0     		b	.L474
 11556              	.L475:
1557:..\src/command_processing.c ****                 }
 11557              		.loc 1 1557 0 discriminator 3
 11558 0f32 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11559 0f34 C3F10303 		rsb	r3, r3, #3
 11560 0f38 07F10802 		add	r2, r7, #8
 11561 0f3c 1344     		add	r3, r3, r2
 11562 0f3e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11563 0f40 07F10C01 		add	r1, r7, #12
 11564 0f44 0A44     		add	r2, r2, r1
 11565 0f46 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11566 0f48 1A70     		strb	r2, [r3]
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11567              		.loc 1 1556 0 discriminator 3
 11568 0f4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11569 0f4c 0133     		adds	r3, r3, #1
 11570 0f4e BB75     		strb	r3, [r7, #22]
 11571              	.L474:
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11572              		.loc 1 1556 0 is_stmt 0 discriminator 1
 11573 0f50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11574 0f52 032B     		cmp	r3, #3
 11575 0f54 EDD9     		bls	.L475
1559:..\src/command_processing.c ****                 
 11576              		.loc 1 1559 0 is_stmt 1
 11577 0f56 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11578 0f58 BB68     		ldr	r3, [r7, #8]	@ float
 11579 0f5a 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 263


 11580 0f5e 1846     		mov	r0, r3
 11581 0f60 FFF7FEFF 		bl	__aeabi_fmul
 11582 0f64 0346     		mov	r3, r0
 11583 0f66 1846     		mov	r0, r3
 11584 0f68 FFF7FEFF 		bl	__aeabi_f2iz
 11585 0f6c 0146     		mov	r1, r0
 11586 0f6e 2E4A     		ldr	r2, .L498
 11587 0f70 2346     		mov	r3, r4
 11588 0f72 DB00     		lsls	r3, r3, #3
 11589 0f74 1B1B     		subs	r3, r3, r4
 11590 0f76 1B01     		lsls	r3, r3, #4
 11591 0f78 1344     		add	r3, r3, r2
 11592 0f7a D833     		adds	r3, r3, #216
 11593 0f7c 1960     		str	r1, [r3]
1561:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11594              		.loc 1 1561 0
 11595 0f7e 2E4B     		ldr	r3, .L498+16
 11596 0f80 1B68     		ldr	r3, [r3]	@ float
 11597 0f82 FB60     		str	r3, [r7, #12]	@ float
1562:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11598              		.loc 1 1562 0
 11599 0f84 0023     		movs	r3, #0
 11600 0f86 BB75     		strb	r3, [r7, #22]
 11601 0f88 0EE0     		b	.L476
 11602              	.L477:
1563:..\src/command_processing.c ****                 }
 11603              		.loc 1 1563 0 discriminator 3
 11604 0f8a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11605 0f8c C3F10303 		rsb	r3, r3, #3
 11606 0f90 07F10802 		add	r2, r7, #8
 11607 0f94 1344     		add	r3, r3, r2
 11608 0f96 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11609 0f98 07F10C01 		add	r1, r7, #12
 11610 0f9c 0A44     		add	r2, r2, r1
 11611 0f9e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11612 0fa0 1A70     		strb	r2, [r3]
1562:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11613              		.loc 1 1562 0 discriminator 3
 11614 0fa2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11615 0fa4 0133     		adds	r3, r3, #1
 11616 0fa6 BB75     		strb	r3, [r7, #22]
 11617              	.L476:
1562:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11618              		.loc 1 1562 0 is_stmt 0 discriminator 1
 11619 0fa8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11620 0faa 032B     		cmp	r3, #3
 11621 0fac EDD9     		bls	.L477
1565:..\src/command_processing.c ****             }            
 11622              		.loc 1 1565 0 is_stmt 1
 11623 0fae FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11624 0fb0 BB68     		ldr	r3, [r7, #8]	@ float
 11625 0fb2 4FF08F41 		mov	r1, #1199570944
 11626 0fb6 1846     		mov	r0, r3
 11627 0fb8 FFF7FEFF 		bl	__aeabi_fmul
 11628 0fbc 0346     		mov	r3, r0
 11629 0fbe 1846     		mov	r0, r3
 11630 0fc0 FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 264


 11631 0fc4 0146     		mov	r1, r0
 11632 0fc6 184A     		ldr	r2, .L498
 11633 0fc8 2346     		mov	r3, r4
 11634 0fca DB00     		lsls	r3, r3, #3
 11635 0fcc 1B1B     		subs	r3, r3, r4
 11636 0fce 1B01     		lsls	r3, r3, #4
 11637 0fd0 1344     		add	r3, r3, r2
 11638 0fd2 DC33     		adds	r3, r3, #220
 11639 0fd4 1960     		str	r1, [r3]
 11640              		.loc 1 1567 0
 11641 0fd6 78E2     		b	.L424
 11642              	.L405:
1568:..\src/command_processing.c ****             
1569:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1570:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11643              		.loc 1 1570 0
 11644 0fd8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11645 0fda 184B     		ldr	r3, .L498+20
 11646 0fdc D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11647 0fde 1249     		ldr	r1, .L498
 11648 0fe0 1346     		mov	r3, r2
 11649 0fe2 DB00     		lsls	r3, r3, #3
 11650 0fe4 9B1A     		subs	r3, r3, r2
 11651 0fe6 1B01     		lsls	r3, r3, #4
 11652 0fe8 0B44     		add	r3, r3, r1
 11653 0fea 03F58773 		add	r3, r3, #270
 11654 0fee 0246     		mov	r2, r0
 11655 0ff0 1A70     		strb	r2, [r3]
1571:..\src/command_processing.c ****             
1572:..\src/command_processing.c ****             // Hold the actual position
1573:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11656              		.loc 1 1573 0
 11657 0ff2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11658 0ff4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11659 0ff6 0C48     		ldr	r0, .L498
 11660 0ff8 1346     		mov	r3, r2
 11661 0ffa DB00     		lsls	r3, r3, #3
 11662 0ffc 9B1A     		subs	r3, r3, r2
 11663 0ffe 1B01     		lsls	r3, r3, #4
 11664 1000 0344     		add	r3, r3, r0
 11665 1002 03F58873 		add	r3, r3, #272
 11666 1006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11667 1008 1846     		mov	r0, r3
 11668 100a 0D4A     		ldr	r2, .L498+24
 11669 100c 3423     		movs	r3, #52
 11670 100e 03FB00F3 		mul	r3, r3, r0
 11671 1012 1344     		add	r3, r3, r2
 11672 1014 1A68     		ldr	r2, [r3]
 11673 1016 0B48     		ldr	r0, .L498+28
 11674 1018 0B01     		lsls	r3, r1, #4
 11675 101a 0344     		add	r3, r3, r0
 11676 101c 1A60     		str	r2, [r3]
1574:..\src/command_processing.c ****             break;   
 11677              		.loc 1 1574 0
 11678 101e 54E2     		b	.L424
 11679              	.L406:
1575:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 265


1576:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1577:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11680              		.loc 1 1577 0
 11681 1020 0023     		movs	r3, #0
 11682 1022 FB75     		strb	r3, [r7, #23]
 11683 1024 8FE0     		b	.L478
 11684              	.L499:
 11685 1026 00BF     		.align	2
 11686              	.L498:
 11687 1028 00000000 		.word	g_mem
 11688 102c 00000000 		.word	c_mem
 11689 1030 03000000 		.word	g_rx+3
 11690 1034 07000000 		.word	g_rx+7
 11691 1038 0B000000 		.word	g_rx+11
 11692 103c 00000000 		.word	g_rx
 11693 1040 00000000 		.word	g_meas
 11694 1044 00000000 		.word	g_refNew
 11695              	.L479:
1578:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11696              		.loc 1 1578 0 discriminator 3
 11697 1048 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11698 104a 8A49     		ldr	r1, .L500
 11699 104c 1346     		mov	r3, r2
 11700 104e DB00     		lsls	r3, r3, #3
 11701 1050 9B1A     		subs	r3, r3, r2
 11702 1052 1B01     		lsls	r3, r3, #4
 11703 1054 0B44     		add	r3, r3, r1
 11704 1056 03F58873 		add	r3, r3, #272
 11705 105a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11706 105c 1C46     		mov	r4, r3
 11707 105e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11708 1060 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11709 1062 5B00     		lsls	r3, r3, #1
 11710 1064 0333     		adds	r3, r3, #3
 11711 1066 8449     		ldr	r1, .L500+4
 11712 1068 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11713 106a 1B02     		lsls	r3, r3, #8
 11714 106c 19B2     		sxth	r1, r3
 11715 106e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11716 1070 0233     		adds	r3, r3, #2
 11717 1072 5B00     		lsls	r3, r3, #1
 11718 1074 8048     		ldr	r0, .L500+4
 11719 1076 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11720 1078 1BB2     		sxth	r3, r3
 11721 107a 0B43     		orrs	r3, r3, r1
 11722 107c 1BB2     		sxth	r3, r3
 11723 107e 1846     		mov	r0, r3
 11724 1080 7C49     		ldr	r1, .L500
 11725 1082 2346     		mov	r3, r4
 11726 1084 5B00     		lsls	r3, r3, #1
 11727 1086 2344     		add	r3, r3, r4
 11728 1088 9B00     		lsls	r3, r3, #2
 11729 108a 1344     		add	r3, r3, r2
 11730 108c 6633     		adds	r3, r3, #102
 11731 108e 41F82300 		str	r0, [r1, r3, lsl #2]
1579:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11732              		.loc 1 1579 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 266


 11733 1092 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11734 1094 7749     		ldr	r1, .L500
 11735 1096 1346     		mov	r3, r2
 11736 1098 DB00     		lsls	r3, r3, #3
 11737 109a 9B1A     		subs	r3, r3, r2
 11738 109c 1B01     		lsls	r3, r3, #4
 11739 109e 0B44     		add	r3, r3, r1
 11740 10a0 03F58873 		add	r3, r3, #272
 11741 10a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11742 10a6 1D46     		mov	r5, r3
 11743 10a8 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11744 10aa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11745 10ac 7148     		ldr	r0, .L500
 11746 10ae 1346     		mov	r3, r2
 11747 10b0 DB00     		lsls	r3, r3, #3
 11748 10b2 9B1A     		subs	r3, r3, r2
 11749 10b4 1B01     		lsls	r3, r3, #4
 11750 10b6 0344     		add	r3, r3, r0
 11751 10b8 03F58873 		add	r3, r3, #272
 11752 10bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11753 10be 1C46     		mov	r4, r3
 11754 10c0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11755 10c2 6C48     		ldr	r0, .L500
 11756 10c4 2346     		mov	r3, r4
 11757 10c6 5B00     		lsls	r3, r3, #1
 11758 10c8 2344     		add	r3, r3, r4
 11759 10ca 9B00     		lsls	r3, r3, #2
 11760 10cc 1344     		add	r3, r3, r2
 11761 10ce 6633     		adds	r3, r3, #102
 11762 10d0 50F82300 		ldr	r0, [r0, r3, lsl #2]
 11763 10d4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11764 10d6 674C     		ldr	r4, .L500
 11765 10d8 1346     		mov	r3, r2
 11766 10da DB00     		lsls	r3, r3, #3
 11767 10dc 9B1A     		subs	r3, r3, r2
 11768 10de 1B01     		lsls	r3, r3, #4
 11769 10e0 2344     		add	r3, r3, r4
 11770 10e2 03F58873 		add	r3, r3, #272
 11771 10e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11772 10e8 1E46     		mov	r6, r3
 11773 10ea FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11774 10ec 614C     		ldr	r4, .L500
 11775 10ee 3346     		mov	r3, r6
 11776 10f0 5B00     		lsls	r3, r3, #1
 11777 10f2 3344     		add	r3, r3, r6
 11778 10f4 1B01     		lsls	r3, r3, #4
 11779 10f6 2344     		add	r3, r3, r4
 11780 10f8 1344     		add	r3, r3, r2
 11781 10fa 03F29513 		addw	r3, r3, #405
 11782 10fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11783 1100 00FA03F2 		lsl	r2, r0, r3
 11784 1104 5B48     		ldr	r0, .L500
 11785 1106 2B46     		mov	r3, r5
 11786 1108 5B00     		lsls	r3, r3, #1
 11787 110a 2B44     		add	r3, r3, r5
 11788 110c 9B00     		lsls	r3, r3, #2
 11789 110e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 267


 11790 1110 6633     		adds	r3, r3, #102
 11791 1112 40F82320 		str	r2, [r0, r3, lsl #2]
1580:..\src/command_processing.c **** 
1581:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11792              		.loc 1 1581 0 discriminator 3
 11793 1116 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11794 1118 5649     		ldr	r1, .L500
 11795 111a 1346     		mov	r3, r2
 11796 111c DB00     		lsls	r3, r3, #3
 11797 111e 9B1A     		subs	r3, r3, r2
 11798 1120 1B01     		lsls	r3, r3, #4
 11799 1122 0B44     		add	r3, r3, r1
 11800 1124 03F58873 		add	r3, r3, #272
 11801 1128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11802 112a 1846     		mov	r0, r3
 11803 112c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11804 112e 5349     		ldr	r1, .L500+8
 11805 1130 3422     		movs	r2, #52
 11806 1132 02FB00F2 		mul	r2, r2, r0
 11807 1136 0A44     		add	r2, r2, r1
 11808 1138 1344     		add	r3, r3, r2
 11809 113a 1833     		adds	r3, r3, #24
 11810 113c 0022     		movs	r2, #0
 11811 113e 1A70     		strb	r2, [r3]
1577:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11812              		.loc 1 1577 0 discriminator 3
 11813 1140 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11814 1142 0133     		adds	r3, r3, #1
 11815 1144 FB75     		strb	r3, [r7, #23]
 11816              	.L478:
1577:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11817              		.loc 1 1577 0 is_stmt 0 discriminator 1
 11818 1146 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11819 1148 022B     		cmp	r3, #2
 11820 114a 7FF67DAF 		bls	.L479
1582:..\src/command_processing.c ****             }
1583:..\src/command_processing.c ****             reset_last_value_flag[SECOND_MOTOR_IDX] = 1;
 11821              		.loc 1 1583 0 is_stmt 1
 11822 114e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11823 1150 4B4A     		ldr	r2, .L500+12
 11824 1152 0121     		movs	r1, #1
 11825 1154 D154     		strb	r1, [r2, r3]
1584:..\src/command_processing.c ****             break;
 11826              		.loc 1 1584 0
 11827 1156 B8E1     		b	.L424
 11828              	.L407:
1585:..\src/command_processing.c ****     
1586:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1587:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11829              		.loc 1 1587 0
 11830 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11831 115a 474B     		ldr	r3, .L500+4
 11832 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11833 115e 1906     		lsls	r1, r3, #24
 11834 1160 454B     		ldr	r3, .L500+4
 11835 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11836 1164 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 268


 11837 1166 1943     		orrs	r1, r1, r3
 11838 1168 434B     		ldr	r3, .L500+4
 11839 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11840 116c 1B02     		lsls	r3, r3, #8
 11841 116e 0B43     		orrs	r3, r3, r1
 11842 1170 4149     		ldr	r1, .L500+4
 11843 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11844 1174 1943     		orrs	r1, r1, r3
 11845 1176 3F48     		ldr	r0, .L500
 11846 1178 1346     		mov	r3, r2
 11847 117a DB00     		lsls	r3, r3, #3
 11848 117c 9B1A     		subs	r3, r3, r2
 11849 117e 1B01     		lsls	r3, r3, #4
 11850 1180 0344     		add	r3, r3, r0
 11851 1182 E433     		adds	r3, r3, #228
 11852 1184 1960     		str	r1, [r3]
1588:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11853              		.loc 1 1588 0
 11854 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11855 1188 3B4B     		ldr	r3, .L500+4
 11856 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11857 118c 1906     		lsls	r1, r3, #24
 11858 118e 3A4B     		ldr	r3, .L500+4
 11859 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11860 1192 1B04     		lsls	r3, r3, #16
 11861 1194 1943     		orrs	r1, r1, r3
 11862 1196 384B     		ldr	r3, .L500+4
 11863 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11864 119a 1B02     		lsls	r3, r3, #8
 11865 119c 0B43     		orrs	r3, r3, r1
 11866 119e 3649     		ldr	r1, .L500+4
 11867 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11868 11a2 1943     		orrs	r1, r1, r3
 11869 11a4 3348     		ldr	r0, .L500
 11870 11a6 1346     		mov	r3, r2
 11871 11a8 DB00     		lsls	r3, r3, #3
 11872 11aa 9B1A     		subs	r3, r3, r2
 11873 11ac 1B01     		lsls	r3, r3, #4
 11874 11ae 0344     		add	r3, r3, r0
 11875 11b0 E833     		adds	r3, r3, #232
 11876 11b2 1960     		str	r1, [r3]
1589:..\src/command_processing.c **** 
1590:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11877              		.loc 1 1590 0
 11878 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11879 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11880 11b8 2E48     		ldr	r0, .L500
 11881 11ba 0B46     		mov	r3, r1
 11882 11bc DB00     		lsls	r3, r3, #3
 11883 11be 5B1A     		subs	r3, r3, r1
 11884 11c0 1B01     		lsls	r3, r3, #4
 11885 11c2 0344     		add	r3, r3, r0
 11886 11c4 E433     		adds	r3, r3, #228
 11887 11c6 1868     		ldr	r0, [r3]
 11888 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11889 11ca 2A4C     		ldr	r4, .L500
 11890 11cc 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 269


 11891 11ce DB00     		lsls	r3, r3, #3
 11892 11d0 5B1A     		subs	r3, r3, r1
 11893 11d2 1B01     		lsls	r3, r3, #4
 11894 11d4 2344     		add	r3, r3, r4
 11895 11d6 03F58873 		add	r3, r3, #272
 11896 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11897 11dc 1C46     		mov	r4, r3
 11898 11de 2549     		ldr	r1, .L500
 11899 11e0 2346     		mov	r3, r4
 11900 11e2 5B00     		lsls	r3, r3, #1
 11901 11e4 2344     		add	r3, r3, r4
 11902 11e6 1B01     		lsls	r3, r3, #4
 11903 11e8 0B44     		add	r3, r3, r1
 11904 11ea 03F29513 		addw	r3, r3, #405
 11905 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11906 11f0 00FA03F1 		lsl	r1, r0, r3
 11907 11f4 1F48     		ldr	r0, .L500
 11908 11f6 1346     		mov	r3, r2
 11909 11f8 DB00     		lsls	r3, r3, #3
 11910 11fa 9B1A     		subs	r3, r3, r2
 11911 11fc 1B01     		lsls	r3, r3, #4
 11912 11fe 0344     		add	r3, r3, r0
 11913 1200 E433     		adds	r3, r3, #228
 11914 1202 1960     		str	r1, [r3]
1591:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11915              		.loc 1 1591 0
 11916 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11917 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11918 1208 1A48     		ldr	r0, .L500
 11919 120a 0B46     		mov	r3, r1
 11920 120c DB00     		lsls	r3, r3, #3
 11921 120e 5B1A     		subs	r3, r3, r1
 11922 1210 1B01     		lsls	r3, r3, #4
 11923 1212 0344     		add	r3, r3, r0
 11924 1214 E833     		adds	r3, r3, #232
 11925 1216 1868     		ldr	r0, [r3]
 11926 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11927 121a 164C     		ldr	r4, .L500
 11928 121c 0B46     		mov	r3, r1
 11929 121e DB00     		lsls	r3, r3, #3
 11930 1220 5B1A     		subs	r3, r3, r1
 11931 1222 1B01     		lsls	r3, r3, #4
 11932 1224 2344     		add	r3, r3, r4
 11933 1226 03F58873 		add	r3, r3, #272
 11934 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11935 122c 1C46     		mov	r4, r3
 11936 122e 1149     		ldr	r1, .L500
 11937 1230 2346     		mov	r3, r4
 11938 1232 5B00     		lsls	r3, r3, #1
 11939 1234 2344     		add	r3, r3, r4
 11940 1236 1B01     		lsls	r3, r3, #4
 11941 1238 0B44     		add	r3, r3, r1
 11942 123a 03F29513 		addw	r3, r3, #405
 11943 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11944 1240 00FA03F1 		lsl	r1, r0, r3
 11945 1244 0B48     		ldr	r0, .L500
 11946 1246 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 270


 11947 1248 DB00     		lsls	r3, r3, #3
 11948 124a 9B1A     		subs	r3, r3, r2
 11949 124c 1B01     		lsls	r3, r3, #4
 11950 124e 0344     		add	r3, r3, r0
 11951 1250 E833     		adds	r3, r3, #232
 11952 1252 1960     		str	r1, [r3]
1592:..\src/command_processing.c ****             break;
 11953              		.loc 1 1592 0
 11954 1254 39E1     		b	.L424
 11955              	.L408:
1593:..\src/command_processing.c ****             
1594:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1595:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11956              		.loc 1 1595 0
 11957 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11958 1258 074B     		ldr	r3, .L500+4
 11959 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11960 125c 0549     		ldr	r1, .L500
 11961 125e 1346     		mov	r3, r2
 11962 1260 DB00     		lsls	r3, r3, #3
 11963 1262 9B1A     		subs	r3, r3, r2
 11964 1264 1B01     		lsls	r3, r3, #4
 11965 1266 0B44     		add	r3, r3, r1
 11966 1268 E233     		adds	r3, r3, #226
 11967 126a 0246     		mov	r2, r0
 11968 126c 1A70     		strb	r2, [r3]
1596:..\src/command_processing.c ****             set_motor_driver_type();
 11969              		.loc 1 1596 0
 11970 126e FFF7FEFF 		bl	set_motor_driver_type
1597:..\src/command_processing.c ****             break;
 11971              		.loc 1 1597 0
 11972 1272 2AE1     		b	.L424
 11973              	.L501:
 11974              		.align	2
 11975              	.L500:
 11976 1274 00000000 		.word	g_mem
 11977 1278 00000000 		.word	g_rx
 11978 127c 00000000 		.word	g_meas
 11979 1280 00000000 		.word	reset_last_value_flag
 11980              	.L409:
1598:..\src/command_processing.c **** 
1599:..\src/command_processing.c ****         case 75:        // Device type
1600:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11981              		.loc 1 1600 0
 11982 1284 934B     		ldr	r3, .L502
 11983 1286 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11984 1288 934B     		ldr	r3, .L502+4
 11985 128a 83F8AC20 		strb	r2, [r3, #172]
1601:..\src/command_processing.c ****             
1602:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11986              		.loc 1 1602 0
 11987 128e 924B     		ldr	r3, .L502+4
 11988 1290 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11989 1294 002B     		cmp	r3, #0
 11990 1296 40F0A480 		bne	.L480
1603:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11991              		.loc 1 1603 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 271


 11992 129a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11993 129c 8E49     		ldr	r1, .L502+4
 11994 129e 1346     		mov	r3, r2
 11995 12a0 DB00     		lsls	r3, r3, #3
 11996 12a2 9B1A     		subs	r3, r3, r2
 11997 12a4 1B01     		lsls	r3, r3, #4
 11998 12a6 0B44     		add	r3, r3, r1
 11999 12a8 03F58873 		add	r3, r3, #272
 12000 12ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12001 12ae 1946     		mov	r1, r3
 12002 12b0 894A     		ldr	r2, .L502+4
 12003 12b2 0B46     		mov	r3, r1
 12004 12b4 5B00     		lsls	r3, r3, #1
 12005 12b6 0B44     		add	r3, r3, r1
 12006 12b8 1B01     		lsls	r3, r3, #4
 12007 12ba 1344     		add	r3, r3, r2
 12008 12bc 03F5D873 		add	r3, r3, #432
 12009 12c0 0122     		movs	r2, #1
 12010 12c2 1A70     		strb	r2, [r3]
1604:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 12011              		.loc 1 1604 0
 12012 12c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12013 12c6 8449     		ldr	r1, .L502+4
 12014 12c8 1346     		mov	r3, r2
 12015 12ca DB00     		lsls	r3, r3, #3
 12016 12cc 9B1A     		subs	r3, r3, r2
 12017 12ce 1B01     		lsls	r3, r3, #4
 12018 12d0 0B44     		add	r3, r3, r1
 12019 12d2 03F58873 		add	r3, r3, #272
 12020 12d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12021 12d8 1946     		mov	r1, r3
 12022 12da 7F4A     		ldr	r2, .L502+4
 12023 12dc 0B46     		mov	r3, r1
 12024 12de 5B00     		lsls	r3, r3, #1
 12025 12e0 0B44     		add	r3, r3, r1
 12026 12e2 1B01     		lsls	r3, r3, #4
 12027 12e4 1344     		add	r3, r3, r2
 12028 12e6 03F2B513 		addw	r3, r3, #437
 12029 12ea 2322     		movs	r2, #35
 12030 12ec 1A70     		strb	r2, [r3]
1605:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 12031              		.loc 1 1605 0
 12032 12ee 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12033 12f0 7949     		ldr	r1, .L502+4
 12034 12f2 1346     		mov	r3, r2
 12035 12f4 DB00     		lsls	r3, r3, #3
 12036 12f6 9B1A     		subs	r3, r3, r2
 12037 12f8 1B01     		lsls	r3, r3, #4
 12038 12fa 0B44     		add	r3, r3, r1
 12039 12fc 03F58873 		add	r3, r3, #272
 12040 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12041 1302 1946     		mov	r1, r3
 12042 1304 744A     		ldr	r2, .L502+4
 12043 1306 0B46     		mov	r3, r1
 12044 1308 5B00     		lsls	r3, r3, #1
 12045 130a 0B44     		add	r3, r3, r1
 12046 130c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 272


 12047 130e 1344     		add	r3, r3, r2
 12048 1310 03F5DB73 		add	r3, r3, #438
 12049 1314 0322     		movs	r2, #3
 12050 1316 1A70     		strb	r2, [r3]
1606:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 12051              		.loc 1 1606 0
 12052 1318 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12053 131a 6F49     		ldr	r1, .L502+4
 12054 131c 1346     		mov	r3, r2
 12055 131e DB00     		lsls	r3, r3, #3
 12056 1320 9B1A     		subs	r3, r3, r2
 12057 1322 1B01     		lsls	r3, r3, #4
 12058 1324 0B44     		add	r3, r3, r1
 12059 1326 03F58873 		add	r3, r3, #272
 12060 132a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12061 132c 1946     		mov	r1, r3
 12062 132e 6A4A     		ldr	r2, .L502+4
 12063 1330 0B46     		mov	r3, r1
 12064 1332 5B00     		lsls	r3, r3, #1
 12065 1334 0B44     		add	r3, r3, r1
 12066 1336 1B01     		lsls	r3, r3, #4
 12067 1338 1344     		add	r3, r3, r2
 12068 133a 03F2B713 		addw	r3, r3, #439
 12069 133e FF22     		movs	r2, #255
 12070 1340 1A70     		strb	r2, [r3]
1607:..\src/command_processing.c ****                 
1608:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1609:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 12071              		.loc 1 1609 0
 12072 1342 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12073 1344 644B     		ldr	r3, .L502+4
 12074 1346 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 12075 134a 6349     		ldr	r1, .L502+4
 12076 134c 1346     		mov	r3, r2
 12077 134e DB00     		lsls	r3, r3, #3
 12078 1350 9B1A     		subs	r3, r3, r2
 12079 1352 1B01     		lsls	r3, r3, #4
 12080 1354 0B44     		add	r3, r3, r1
 12081 1356 03F58873 		add	r3, r3, #272
 12082 135a 0246     		mov	r2, r0
 12083 135c 1A70     		strb	r2, [r3]
1610:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 12084              		.loc 1 1610 0
 12085 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12086 1360 5D49     		ldr	r1, .L502+4
 12087 1362 1346     		mov	r3, r2
 12088 1364 DB00     		lsls	r3, r3, #3
 12089 1366 9B1A     		subs	r3, r3, r2
 12090 1368 1B01     		lsls	r3, r3, #4
 12091 136a 0B44     		add	r3, r3, r1
 12092 136c 03F21113 		addw	r3, r3, #273
 12093 1370 0122     		movs	r2, #1
 12094 1372 1A70     		strb	r2, [r3]
1611:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 12095              		.loc 1 1611 0
 12096 1374 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12097 1376 5849     		ldr	r1, .L502+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 273


 12098 1378 1346     		mov	r3, r2
 12099 137a DB00     		lsls	r3, r3, #3
 12100 137c 9B1A     		subs	r3, r3, r2
 12101 137e 1B01     		lsls	r3, r3, #4
 12102 1380 0B44     		add	r3, r3, r1
 12103 1382 03F58973 		add	r3, r3, #274
 12104 1386 0122     		movs	r2, #1
 12105 1388 1A70     		strb	r2, [r3]
1612:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 12106              		.loc 1 1612 0
 12107 138a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12108 138c 5249     		ldr	r1, .L502+4
 12109 138e 1346     		mov	r3, r2
 12110 1390 DB00     		lsls	r3, r3, #3
 12111 1392 9B1A     		subs	r3, r3, r2
 12112 1394 1B01     		lsls	r3, r3, #4
 12113 1396 0B44     		add	r3, r3, r1
 12114 1398 E433     		adds	r3, r3, #228
 12115 139a 0022     		movs	r2, #0
 12116 139c 1A60     		str	r2, [r3]
1613:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_ID
 12117              		.loc 1 1613 0
 12118 139e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12119 13a0 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 12120 13a2 4D48     		ldr	r0, .L502+4
 12121 13a4 0B46     		mov	r3, r1
 12122 13a6 DB00     		lsls	r3, r3, #3
 12123 13a8 5B1A     		subs	r3, r3, r1
 12124 13aa 1B01     		lsls	r3, r3, #4
 12125 13ac 0344     		add	r3, r3, r0
 12126 13ae 03F58873 		add	r3, r3, #272
 12127 13b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12128 13b4 1846     		mov	r0, r3
 12129 13b6 4849     		ldr	r1, .L502+4
 12130 13b8 0346     		mov	r3, r0
 12131 13ba 5B00     		lsls	r3, r3, #1
 12132 13bc 0344     		add	r3, r3, r0
 12133 13be 1B01     		lsls	r3, r3, #4
 12134 13c0 0B44     		add	r3, r3, r1
 12135 13c2 03F29513 		addw	r3, r3, #405
 12136 13c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12137 13c8 1946     		mov	r1, r3
 12138 13ca 4FF47A53 		mov	r3, #16000
 12139 13ce 03FA01F1 		lsl	r1, r3, r1
 12140 13d2 4148     		ldr	r0, .L502+4
 12141 13d4 1346     		mov	r3, r2
 12142 13d6 DB00     		lsls	r3, r3, #3
 12143 13d8 9B1A     		subs	r3, r3, r2
 12144 13da 1B01     		lsls	r3, r3, #4
 12145 13dc 0344     		add	r3, r3, r0
 12146 13de E833     		adds	r3, r3, #232
 12147 13e0 1960     		str	r1, [r3]
 12148              	.L480:
1614:..\src/command_processing.c ****             }      
1615:..\src/command_processing.c ****             
1616:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 12149              		.loc 1 1616 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 274


 12150 13e2 3D4B     		ldr	r3, .L502+4
 12151 13e4 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 12152 13e8 042B     		cmp	r3, #4
 12153 13ea 6DD1     		bne	.L489
1617:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 12154              		.loc 1 1617 0
 12155 13ec 3A4B     		ldr	r3, .L502+4
 12156 13ee 0122     		movs	r2, #1
 12157 13f0 83F8A920 		strb	r2, [r3, #169]
1618:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12158              		.loc 1 1618 0
 12159 13f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12160 13f6 3849     		ldr	r1, .L502+4
 12161 13f8 1346     		mov	r3, r2
 12162 13fa DB00     		lsls	r3, r3, #3
 12163 13fc 9B1A     		subs	r3, r3, r2
 12164 13fe 1B01     		lsls	r3, r3, #4
 12165 1400 0B44     		add	r3, r3, r1
 12166 1402 03F58873 		add	r3, r3, #272
 12167 1406 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12168 1408 1946     		mov	r1, r3
 12169 140a 334A     		ldr	r2, .L502+4
 12170 140c 0B46     		mov	r3, r1
 12171 140e 5B00     		lsls	r3, r3, #1
 12172 1410 0B44     		add	r3, r3, r1
 12173 1412 1B01     		lsls	r3, r3, #4
 12174 1414 1344     		add	r3, r3, r2
 12175 1416 03F5D873 		add	r3, r3, #432
 12176 141a 0122     		movs	r2, #1
 12177 141c 1A70     		strb	r2, [r3]
1619:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12178              		.loc 1 1619 0
 12179 141e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 12180 1420 2D49     		ldr	r1, .L502+4
 12181 1422 1346     		mov	r3, r2
 12182 1424 DB00     		lsls	r3, r3, #3
 12183 1426 9B1A     		subs	r3, r3, r2
 12184 1428 1B01     		lsls	r3, r3, #4
 12185 142a 0B44     		add	r3, r3, r1
 12186 142c 03F58873 		add	r3, r3, #272
 12187 1430 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12188 1432 1946     		mov	r1, r3
 12189 1434 284A     		ldr	r2, .L502+4
 12190 1436 0B46     		mov	r3, r1
 12191 1438 5B00     		lsls	r3, r3, #1
 12192 143a 0B44     		add	r3, r3, r1
 12193 143c 1B01     		lsls	r3, r3, #4
 12194 143e 1344     		add	r3, r3, r2
 12195 1440 03F5D873 		add	r3, r3, #432
 12196 1444 0122     		movs	r2, #1
 12197 1446 1A70     		strb	r2, [r3]
1620:..\src/command_processing.c ****             /*    
1621:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
1622:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)18000 << g_mem.enc[g_mem.motor[MOTOR_ID
1623:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = ((int32)(-25000)) << g_mem.enc[g_mem.mo
1624:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = 0;
1625:..\src/command_processing.c ****             */    
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 275


1626:..\src/command_processing.c ****                 for (i=0; i< NUM_OF_MOTORS; i++) {                     // Maxon DCX16S
 12198              		.loc 1 1626 0
 12199 1448 0023     		movs	r3, #0
 12200 144a FB75     		strb	r3, [r7, #23]
 12201 144c 2EE0     		b	.L482
 12202              	.L483:
1627:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12203              		.loc 1 1627 0 discriminator 3
 12204 144e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12205 1450 2149     		ldr	r1, .L502+4
 12206 1452 1346     		mov	r3, r2
 12207 1454 DB00     		lsls	r3, r3, #3
 12208 1456 9B1A     		subs	r3, r3, r2
 12209 1458 1B01     		lsls	r3, r3, #4
 12210 145a 0B44     		add	r3, r3, r1
 12211 145c 03F58673 		add	r3, r3, #268
 12212 1460 4FF44872 		mov	r2, #800
 12213 1464 1A80     		strh	r2, [r3]	@ movhi
1628:..\src/command_processing.c ****                     g_mem.motor[i].k_p           = 0.12 * 65536;
 12214              		.loc 1 1628 0 discriminator 3
 12215 1466 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12216 1468 1B49     		ldr	r1, .L502+4
 12217 146a 1346     		mov	r3, r2
 12218 146c DB00     		lsls	r3, r3, #3
 12219 146e 9B1A     		subs	r3, r3, r2
 12220 1470 1B01     		lsls	r3, r3, #4
 12221 1472 0B44     		add	r3, r3, r1
 12222 1474 B033     		adds	r3, r3, #176
 12223 1476 41F6B862 		movw	r2, #7864
 12224 147a 1A60     		str	r2, [r3]
1629:..\src/command_processing.c ****                     g_mem.motor[i].k_i           =    0 * 65536;
 12225              		.loc 1 1629 0 discriminator 3
 12226 147c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12227 147e 1649     		ldr	r1, .L502+4
 12228 1480 1346     		mov	r3, r2
 12229 1482 DB00     		lsls	r3, r3, #3
 12230 1484 9B1A     		subs	r3, r3, r2
 12231 1486 1B01     		lsls	r3, r3, #4
 12232 1488 0B44     		add	r3, r3, r1
 12233 148a B433     		adds	r3, r3, #180
 12234 148c 0022     		movs	r2, #0
 12235 148e 1A60     		str	r2, [r3]
1630:..\src/command_processing.c ****                     g_mem.motor[i].k_d           = 0.05 * 65536;
 12236              		.loc 1 1630 0 discriminator 3
 12237 1490 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12238 1492 1149     		ldr	r1, .L502+4
 12239 1494 1346     		mov	r3, r2
 12240 1496 DB00     		lsls	r3, r3, #3
 12241 1498 9B1A     		subs	r3, r3, r2
 12242 149a 1B01     		lsls	r3, r3, #4
 12243 149c 0B44     		add	r3, r3, r1
 12244 149e B833     		adds	r3, r3, #184
 12245 14a0 40F6CC42 		movw	r2, #3276
 12246 14a4 1A60     		str	r2, [r3]
1626:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12247              		.loc 1 1626 0 discriminator 3
 12248 14a6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 276


 12249 14a8 0133     		adds	r3, r3, #1
 12250 14aa FB75     		strb	r3, [r7, #23]
 12251              	.L482:
1626:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12252              		.loc 1 1626 0 is_stmt 0 discriminator 1
 12253 14ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12254 14ae 012B     		cmp	r3, #1
 12255 14b0 CDD9     		bls	.L483
1631:..\src/command_processing.c ****                 }
1632:..\src/command_processing.c ****             }      
1633:..\src/command_processing.c ****             
1634:..\src/command_processing.c ****             break;
 12256              		.loc 1 1634 0 is_stmt 1
 12257 14b2 09E0     		b	.L489
 12258              	.L484:
1635:..\src/command_processing.c ****             
1636:..\src/command_processing.c ****         default:
1637:..\src/command_processing.c ****             break;
 12259              		.loc 1 1637 0
 12260 14b4 00BF     		nop
 12261 14b6 08E0     		b	.L424
 12262              	.L485:
1424:..\src/command_processing.c ****             
 12263              		.loc 1 1424 0
 12264 14b8 00BF     		nop
 12265 14ba 06E0     		b	.L424
 12266              	.L486:
1452:..\src/command_processing.c **** 
 12267              		.loc 1 1452 0
 12268 14bc 00BF     		nop
 12269 14be 04E0     		b	.L424
 12270              	.L487:
1470:..\src/command_processing.c ****             
 12271              		.loc 1 1470 0
 12272 14c0 00BF     		nop
 12273 14c2 02E0     		b	.L424
 12274              	.L488:
1480:..\src/command_processing.c ****            
 12275              		.loc 1 1480 0
 12276 14c4 00BF     		nop
 12277 14c6 00E0     		b	.L424
 12278              	.L489:
1634:..\src/command_processing.c ****             
 12279              		.loc 1 1634 0
 12280 14c8 00BF     		nop
 12281              	.L424:
1638:..\src/command_processing.c ****     }
1639:..\src/command_processing.c **** }
 12282              		.loc 1 1639 0 discriminator 1
 12283 14ca 00BF     		nop
 12284 14cc 1C37     		adds	r7, r7, #28
 12285              		.cfi_def_cfa_offset 20
 12286 14ce BD46     		mov	sp, r7
 12287              		.cfi_def_cfa_register 13
 12288              		@ sp needed
 12289 14d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 12290              	.L503:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 277


 12291 14d2 00BF     		.align	2
 12292              	.L502:
 12293 14d4 00000000 		.word	g_rx
 12294 14d8 00000000 		.word	g_mem
 12295              		.cfi_endproc
 12296              	.LFE69:
 12297              		.size	set_custom_param, .-set_custom_param
 12298              		.section	.rodata
 12299 10b6 0000     		.align	2
 12300              	.LC145:
 12301 10b8 506F7274 		.ascii	"Port %u ID:\000"
 12301      20257520 
 12301      49443A00 
 12302              		.align	2
 12303              	.LC146:
 12304 10c4 2575202D 		.ascii	"%u - Device ID:\000"
 12304      20446576 
 12304      69636520 
 12304      49443A00 
 12305              		.align	2
 12306              	.LC147:
 12307 10d4 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 12307      20494D55 
 12307      20256420 
 12307      636F6E66 
 12307      69677572 
 12308 10ef 00       		.align	2
 12309              	.LC148:
 12310 10f0 2575202D 		.ascii	"%u - SPI read delay:\000"
 12310      20535049 
 12310      20726561 
 12310      64206465 
 12310      6C61793A 
 12311 1105 000000   		.align	2
 12312              	.LC149:
 12313 1108 204E6F6E 		.ascii	" None\000"
 12313      6500
 12314 110e 0000     		.align	2
 12315              	.LC150:
 12316 1110 204C6F77 		.ascii	" Low\000"
 12316      00
 12317 1115 000000   		.align	2
 12318              	.LC151:
 12319 1118 20486967 		.ascii	" High\000"
 12319      6800
 12320 111e 0000     		.align	2
 12321              	.LC143:
 12322 1120 4E756D62 		.ascii	"Number of connected IMUs:\000"
 12322      6572206F 
 12322      6620636F 
 12322      6E6E6563 
 12322      74656420 
 12323 113a 0000     		.align	2
 12324              	.LC144:
 12325 113c 4D616720 		.ascii	"Mag cal parameters:\000"
 12325      63616C20 
 12325      70617261 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 278


 12325      6D657465 
 12325      72733A00 
 12326              		.section	.text.get_IMU_param_list,"ax",%progbits
 12327              		.align	2
 12328              		.global	get_IMU_param_list
 12329              		.thumb
 12330              		.thumb_func
 12331              		.type	get_IMU_param_list, %function
 12332              	get_IMU_param_list:
 12333              	.LFB70:
1640:..\src/command_processing.c **** 
1641:..\src/command_processing.c **** //==============================================================================
1642:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1643:..\src/command_processing.c **** //==============================================================================
1644:..\src/command_processing.c **** 
1645:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1646:..\src/command_processing.c **** {
 12334              		.loc 1 1646 0
 12335              		.cfi_startproc
 12336              		@ args = 0, pretend = 0, frame = 1704
 12337              		@ frame_needed = 1, uses_anonymous_args = 0
 12338 0000 B0B5     		push	{r4, r5, r7, lr}
 12339              		.cfi_def_cfa_offset 16
 12340              		.cfi_offset 4, -16
 12341              		.cfi_offset 5, -12
 12342              		.cfi_offset 7, -8
 12343              		.cfi_offset 14, -4
 12344 0002 ADF5D56D 		sub	sp, sp, #1704
 12345              		.cfi_def_cfa_offset 1720
 12346 0006 00AF     		add	r7, sp, #0
 12347              		.cfi_def_cfa_register 7
 12348 0008 0246     		mov	r2, r0
 12349 000a BB1D     		adds	r3, r7, #6
 12350 000c 1A80     		strh	r2, [r3]	@ movhi
1647:..\src/command_processing.c ****     //Package to be sent variables
1648:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 12351              		.loc 1 1648 0
 12352 000e 07F58A73 		add	r3, r7, #276
 12353 0012 0022     		movs	r2, #0
 12354 0014 1A60     		str	r2, [r3]
 12355 0016 0433     		adds	r3, r3, #4
 12356 0018 40F27552 		movw	r2, #1397
 12357 001c 0021     		movs	r1, #0
 12358 001e 1846     		mov	r0, r3
 12359 0020 FFF7FEFF 		bl	memset
1649:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1650:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1651:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1652:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1653:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1654:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1655:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 12360              		.loc 1 1655 0
 12361 0024 0723     		movs	r3, #7
 12362 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1656:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 12363              		.loc 1 1656 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 279


 12364 002a 0023     		movs	r3, #0
 12365 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1657:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 12366              		.loc 1 1657 0
 12367 0030 0223     		movs	r3, #2
 12368 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1658:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12369              		.loc 1 1658 0
 12370 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 12371 003a 5A1C     		adds	r2, r3, #1
1659:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 12372              		.loc 1 1659 0
 12373 003c B7F8A636 		ldrh	r3, [r7, #1702]
 12374 0040 1344     		add	r3, r3, r2
1660:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 12375              		.loc 1 1660 0
 12376 0042 0133     		adds	r3, r3, #1
1658:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12377              		.loc 1 1658 0
 12378 0044 9AB2     		uxth	r2, r3
 12379 0046 D24B     		ldr	r3, .L550
 12380 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12381 004a 9BB2     		uxth	r3, r3
 12382 004c 1344     		add	r3, r3, r2
 12383 004e 9BB2     		uxth	r3, r3
 12384 0050 1A46     		mov	r2, r3	@ movhi
 12385 0052 9200     		lsls	r2, r2, #2
 12386 0054 1344     		add	r3, r3, r2
 12387 0056 1A46     		mov	r2, r3	@ movhi
 12388 0058 9100     		lsls	r1, r2, #2
 12389 005a 1A46     		mov	r2, r3	@ movhi
 12390 005c 0B46     		mov	r3, r1	@ movhi
 12391 005e 1344     		add	r3, r3, r2
 12392 0060 5B00     		lsls	r3, r3, #1
 12393 0062 9BB2     		uxth	r3, r3
 12394 0064 FB33     		adds	r3, r3, #251
 12395 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1661:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1662:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1663:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1664:..\src/command_processing.c **** 
1665:..\src/command_processing.c ****     //Auxiliary variables
1666:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1667:..\src/command_processing.c ****     uint16 start_byte = 0;
 12396              		.loc 1 1667 0
 12397 006a 0023     		movs	r3, #0
 12398 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1668:..\src/command_processing.c **** 
1669:..\src/command_processing.c ****     //Parameters menu string definitions
1670:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 12399              		.loc 1 1670 0
 12400 0070 07F1F803 		add	r3, r7, #248
 12401 0074 C74A     		ldr	r2, .L550+4
 12402 0076 1C46     		mov	r4, r3
 12403 0078 1546     		mov	r5, r2
 12404 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12405 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 280


 12406 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 12407 0082 03C4     		stmia	r4!, {r0, r1}
 12408 0084 2280     		strh	r2, [r4]	@ movhi
1671:..\src/command_processing.c ****     char ids_str[11]            = "";
 12409              		.loc 1 1671 0
 12410 0086 07F1EC03 		add	r3, r7, #236
 12411 008a 0022     		movs	r2, #0
 12412 008c 1A60     		str	r2, [r3]
 12413 008e 0433     		adds	r3, r3, #4
 12414 0090 0022     		movs	r2, #0
 12415 0092 1A60     		str	r2, [r3]
 12416 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1672:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 12417              		.loc 1 1672 0
 12418 0098 07F1D803 		add	r3, r7, #216
 12419 009c BE4A     		ldr	r2, .L550+8
 12420 009e 1C46     		mov	r4, r3
 12421 00a0 1546     		mov	r5, r2
 12422 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12423 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12424 00a6 2B68     		ldr	r3, [r5]
 12425 00a8 2360     		str	r3, [r4]
1673:..\src/command_processing.c ****     char id_str[16]             = "";
 12426              		.loc 1 1673 0
 12427 00aa 07F1C803 		add	r3, r7, #200
 12428 00ae 0022     		movs	r2, #0
 12429 00b0 1A60     		str	r2, [r3]
 12430 00b2 0433     		adds	r3, r3, #4
 12431 00b4 0022     		movs	r2, #0
 12432 00b6 1A60     		str	r2, [r3]
 12433 00b8 5A60     		str	r2, [r3, #4]
 12434 00ba 9A60     		str	r2, [r3, #8]
1674:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 12435              		.loc 1 1674 0
 12436 00bc 07F19C03 		add	r3, r7, #156
 12437 00c0 0022     		movs	r2, #0
 12438 00c2 1A60     		str	r2, [r3]
 12439 00c4 0433     		adds	r3, r3, #4
 12440 00c6 2622     		movs	r2, #38
 12441 00c8 0021     		movs	r1, #0
 12442 00ca 1846     		mov	r0, r3
 12443 00cc FFF7FEFF 		bl	memset
1675:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 12444              		.loc 1 1675 0
 12445 00d0 07F18003 		add	r3, r7, #128
 12446 00d4 0022     		movs	r2, #0
 12447 00d6 1A60     		str	r2, [r3]
 12448 00d8 0433     		adds	r3, r3, #4
 12449 00da 0022     		movs	r2, #0
 12450 00dc 1A60     		str	r2, [r3]
 12451 00de 5A60     		str	r2, [r3, #4]
 12452 00e0 9A60     		str	r2, [r3, #8]
 12453 00e2 DA60     		str	r2, [r3, #12]
 12454 00e4 1A61     		str	r2, [r3, #16]
 12455 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1676:..\src/command_processing.c ****     
1677:..\src/command_processing.c ****     //Strings lengths
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 281


1678:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 12456              		.loc 1 1678 0
 12457 00e8 07F1C803 		add	r3, r7, #200
 12458 00ec 1846     		mov	r0, r3
 12459 00ee FFF7FEFF 		bl	strlen
 12460 00f2 0346     		mov	r3, r0
 12461 00f4 87F89336 		strb	r3, [r7, #1683]
1679:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 12462              		.loc 1 1679 0
 12463 00f8 07F1F803 		add	r3, r7, #248
 12464 00fc 1846     		mov	r0, r3
 12465 00fe FFF7FEFF 		bl	strlen
 12466 0102 0346     		mov	r3, r0
 12467 0104 87F89236 		strb	r3, [r7, #1682]
1680:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 12468              		.loc 1 1680 0
 12469 0108 07F1EC03 		add	r3, r7, #236
 12470 010c 1846     		mov	r0, r3
 12471 010e FFF7FEFF 		bl	strlen
 12472 0112 0346     		mov	r3, r0
 12473 0114 87F89136 		strb	r3, [r7, #1681]
1681:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12474              		.loc 1 1681 0
 12475 0118 07F1D803 		add	r3, r7, #216
 12476 011c 1846     		mov	r0, r3
 12477 011e FFF7FEFF 		bl	strlen
 12478 0122 0346     		mov	r3, r0
 12479 0124 87F89036 		strb	r3, [r7, #1680]
1682:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12480              		.loc 1 1682 0
 12481 0128 07F19C03 		add	r3, r7, #156
 12482 012c 1846     		mov	r0, r3
 12483 012e FFF7FEFF 		bl	strlen
 12484 0132 0346     		mov	r3, r0
 12485 0134 87F88F36 		strb	r3, [r7, #1679]
1683:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12486              		.loc 1 1683 0
 12487 0138 07F18003 		add	r3, r7, #128
 12488 013c 1846     		mov	r0, r3
 12489 013e FFF7FEFF 		bl	strlen
 12490 0142 0346     		mov	r3, r0
 12491 0144 87F89D36 		strb	r3, [r7, #1693]
1684:..\src/command_processing.c ****     
1685:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 12492              		.loc 1 1685 0
 12493 0148 07F10803 		add	r3, r7, #8
 12494 014c 0022     		movs	r2, #0
 12495 014e 1A60     		str	r2, [r3]
 12496 0150 0433     		adds	r3, r3, #4
 12497 0152 7222     		movs	r2, #114
 12498 0154 0021     		movs	r1, #0
 12499 0156 1846     		mov	r0, r3
 12500 0158 FFF7FEFF 		bl	memset
1686:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1687:..\src/command_processing.c ****  
1688:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12501              		.loc 1 1688 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 282


 12502 015c 07F10800 		add	r0, r7, #8
 12503 0160 6423     		movs	r3, #100
 12504 0162 0A22     		movs	r2, #10
 12505 0164 8D49     		ldr	r1, .L550+12
 12506 0166 FFF7FEFF 		bl	sprintf
1689:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12507              		.loc 1 1689 0
 12508 016a 07F10803 		add	r3, r7, #8
 12509 016e 1846     		mov	r0, r3
 12510 0170 FFF7FEFF 		bl	strlen
 12511 0174 0346     		mov	r3, r0
 12512 0176 87F88E36 		strb	r3, [r7, #1678]
1690:..\src/command_processing.c **** 
1691:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1692:..\src/command_processing.c ****     // update packet_length
1693:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12513              		.loc 1 1693 0
 12514 017a 854B     		ldr	r3, .L550
 12515 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12516 017e 5B08     		lsrs	r3, r3, #1
 12517 0180 DBB2     		uxtb	r3, r3
 12518 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1694:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12519              		.loc 1 1694 0
 12520 0186 824B     		ldr	r3, .L550
 12521 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12522 018a 1A46     		mov	r2, r3
 12523 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12524 0190 5B00     		lsls	r3, r3, #1
 12525 0192 D31A     		subs	r3, r2, r3
 12526 0194 002B     		cmp	r3, #0
 12527 0196 04DD     		ble	.L505
 12528              		.loc 1 1694 0 is_stmt 0 discriminator 1
 12529 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12530 019c 0133     		adds	r3, r3, #1
 12531 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12532              	.L505:
1695:..\src/command_processing.c ****     
1696:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12533              		.loc 1 1696 0 is_stmt 1
 12534 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12535 01a6 5A1C     		adds	r2, r3, #1
1697:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12536              		.loc 1 1697 0
 12537 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 12538 01ac 1344     		add	r3, r3, r2
1698:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12539              		.loc 1 1698 0
 12540 01ae 0133     		adds	r3, r3, #1
1696:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12541              		.loc 1 1696 0
 12542 01b0 9AB2     		uxth	r2, r3
 12543 01b2 774B     		ldr	r3, .L550
 12544 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12545 01b6 9BB2     		uxth	r3, r3
 12546 01b8 1344     		add	r3, r3, r2
 12547 01ba 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 283


 12548 01bc 1A46     		mov	r2, r3	@ movhi
 12549 01be 9200     		lsls	r2, r2, #2
 12550 01c0 1344     		add	r3, r3, r2
 12551 01c2 1A46     		mov	r2, r3	@ movhi
 12552 01c4 9100     		lsls	r1, r2, #2
 12553 01c6 1A46     		mov	r2, r3	@ movhi
 12554 01c8 0B46     		mov	r3, r1	@ movhi
 12555 01ca 1344     		add	r3, r3, r2
 12556 01cc 5B00     		lsls	r3, r3, #1
 12557 01ce 9BB2     		uxth	r3, r3
 12558 01d0 C933     		adds	r3, r3, #201
 12559 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1699:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1700:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1701:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1702:..\src/command_processing.c **** 
1703:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12560              		.loc 1 1703 0
 12561 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12562 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12563 01de 1344     		add	r3, r3, r2
 12564 01e0 9BB2     		uxth	r3, r3
 12565 01e2 0333     		adds	r3, r3, #3
 12566 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1704:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12567              		.loc 1 1704 0
 12568 01e8 07F58A73 		add	r3, r7, #276
 12569 01ec A222     		movs	r2, #162
 12570 01ee 1A70     		strb	r2, [r3]
1705:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12571              		.loc 1 1705 0
 12572 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12573 01f4 DAB2     		uxtb	r2, r3
 12574 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12575 01fa DBB2     		uxtb	r3, r3
 12576 01fc 1344     		add	r3, r3, r2
 12577 01fe DAB2     		uxtb	r2, r3
 12578 0200 634B     		ldr	r3, .L550
 12579 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12580 0204 1344     		add	r3, r3, r2
 12581 0206 DBB2     		uxtb	r3, r3
 12582 0208 0333     		adds	r3, r3, #3
 12583 020a DAB2     		uxtb	r2, r3
 12584 020c 07F58A73 		add	r3, r7, #276
 12585 0210 5A70     		strb	r2, [r3, #1]
1706:..\src/command_processing.c **** 
1707:..\src/command_processing.c ****     switch(index) {
 12586              		.loc 1 1707 0
 12587 0212 BB1D     		adds	r3, r7, #6
 12588 0214 1B88     		ldrh	r3, [r3]
 12589 0216 002B     		cmp	r3, #0
 12590 0218 40F0D084 		bne	.L548
1708:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1709:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1710:..\src/command_processing.c ****             start_byte = 0;
 12591              		.loc 1 1710 0
 12592 021c 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 284


 12593 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1711:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 12594              		.loc 1 1711 0
 12595 0222 07F58A73 		add	r3, r7, #276
 12596 0226 0222     		movs	r2, #2
 12597 0228 9A70     		strb	r2, [r3, #2]
1712:..\src/command_processing.c ****             packet_data[3] = 1;
 12598              		.loc 1 1712 0
 12599 022a 07F58A73 		add	r3, r7, #276
 12600 022e 0122     		movs	r2, #1
 12601 0230 DA70     		strb	r2, [r3, #3]
1713:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12602              		.loc 1 1713 0
 12603 0232 574B     		ldr	r3, .L550
 12604 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12605 0236 07F58A73 		add	r3, r7, #276
 12606 023a 1A71     		strb	r2, [r3, #4]
1714:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12607              		.loc 1 1714 0
 12608 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12609 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12610 0244 15E0     		b	.L508
 12611              	.L509:
1715:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12612              		.loc 1 1715 0 discriminator 3
 12613 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12614 024a 5A1D     		adds	r2, r3, #5
 12615 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12616 0250 D31A     		subs	r3, r2, r3
 12617 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12618 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12619 025a 8A1A     		subs	r2, r1, r2
 12620 025c 07F1F801 		add	r1, r7, #248
 12621 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12622 0262 07F58A72 		add	r2, r7, #276
 12623 0266 D154     		strb	r1, [r2, r3]
1714:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12624              		.loc 1 1714 0 discriminator 3
 12625 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12626 026c 013B     		subs	r3, r3, #1
 12627 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12628              	.L508:
1714:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12629              		.loc 1 1714 0 is_stmt 0 discriminator 1
 12630 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 12631 0276 002B     		cmp	r3, #0
 12632 0278 E5D1     		bne	.L509
1716:..\src/command_processing.c ****                 
1717:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1718:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12633              		.loc 1 1718 0 is_stmt 1
 12634 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12635 027e 3233     		adds	r3, r3, #50
 12636 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1719:..\src/command_processing.c ****             i = 0;
 12637              		.loc 1 1719 0
 12638 0284 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 285


 12639 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1720:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 12640              		.loc 1 1720 0
 12641 028a 0023     		movs	r3, #0
 12642 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12643 0290 B2E0     		b	.L510
 12644              	.L517:
1721:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12645              		.loc 1 1721 0
 12646 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12647 0296 07F1EC03 		add	r3, r7, #236
 12648 029a 4149     		ldr	r1, .L550+16
 12649 029c 1846     		mov	r0, r3
 12650 029e FFF7FEFF 		bl	sprintf
1722:..\src/command_processing.c ****                 h = 4;
 12651              		.loc 1 1722 0
 12652 02a2 0423     		movs	r3, #4
 12653 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1723:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12654              		.loc 1 1723 0
 12655 02a8 07F1EC03 		add	r3, r7, #236
 12656 02ac 1846     		mov	r0, r3
 12657 02ae FFF7FEFF 		bl	strlen
 12658 02b2 0346     		mov	r3, r0
 12659 02b4 87F89136 		strb	r3, [r7, #1681]
1724:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12660              		.loc 1 1724 0
 12661 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12662 02bc 9A1C     		adds	r2, r3, #2
 12663 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12664 02c2 3221     		movs	r1, #50
 12665 02c4 01FB03F3 		mul	r3, r1, r3
 12666 02c8 1344     		add	r3, r3, r2
 12667 02ca 07F58A72 		add	r2, r7, #276
 12668 02ce 0221     		movs	r1, #2
 12669 02d0 D154     		strb	r1, [r2, r3]
1725:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12670              		.loc 1 1725 0
 12671 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12672 02d6 DA1C     		adds	r2, r3, #3
 12673 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12674 02dc 3221     		movs	r1, #50
 12675 02de 01FB03F3 		mul	r3, r1, r3
 12676 02e2 1344     		add	r3, r3, r2
 12677 02e4 07F58A72 		add	r2, r7, #276
 12678 02e8 0321     		movs	r1, #3
 12679 02ea D154     		strb	r1, [r2, r3]
1726:..\src/command_processing.c ****                 
1727:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 12680              		.loc 1 1727 0
 12681 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12682 02f0 1A46     		mov	r2, r3	@ movhi
 12683 02f2 5200     		lsls	r2, r2, #1
 12684 02f4 1344     		add	r3, r3, r2
 12685 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12686 02fa 39E0     		b	.L511
 12687              	.L514:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 286


1728:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12688              		.loc 1 1728 0
 12689 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12690 0300 284A     		ldr	r2, .L550+20
 12691 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12692 0304 9BB2     		uxth	r3, r3
 12693 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12694 030a 9A42     		cmp	r2, r3
 12695 030c 17D1     		bne	.L512
1729:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12696              		.loc 1 1729 0
 12697 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12698 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12699 0316 1A44     		add	r2, r2, r3
 12700 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12701 031c 3221     		movs	r1, #50
 12702 031e 01FB03F3 		mul	r3, r1, r3
 12703 0322 1344     		add	r3, r3, r2
 12704 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12705 0328 1E49     		ldr	r1, .L550+20
 12706 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12707 032c 07F58A72 		add	r2, r7, #276
 12708 0330 D154     		strb	r1, [r2, r3]
1730:..\src/command_processing.c ****                         i++;
 12709              		.loc 1 1730 0
 12710 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12711 0336 0133     		adds	r3, r3, #1
 12712 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12713 033c 0EE0     		b	.L513
 12714              	.L512:
1731:..\src/command_processing.c ****                     } 
1732:..\src/command_processing.c ****                     else {
1733:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12715              		.loc 1 1733 0
 12716 033e B7F89E26 		ldrh	r2, [r7, #1694]
 12717 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12718 0346 1A44     		add	r2, r2, r3
 12719 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12720 034c 3221     		movs	r1, #50
 12721 034e 01FB03F3 		mul	r3, r1, r3
 12722 0352 1344     		add	r3, r3, r2
 12723 0354 07F58A72 		add	r2, r7, #276
 12724 0358 FF21     		movs	r1, #255
 12725 035a D154     		strb	r1, [r2, r3]
 12726              	.L513:
1734:..\src/command_processing.c ****                     }
1735:..\src/command_processing.c ****                     h++;
 12727              		.loc 1 1735 0 discriminator 2
 12728 035c B7F89E36 		ldrh	r3, [r7, #1694]
 12729 0360 0133     		adds	r3, r3, #1
 12730 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1727:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12731              		.loc 1 1727 0 discriminator 2
 12732 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12733 036a 0133     		adds	r3, r3, #1
 12734 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12735              	.L511:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 287


1727:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12736              		.loc 1 1727 0 is_stmt 0 discriminator 1
 12737 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12738 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12739 0378 1346     		mov	r3, r2
 12740 037a 5B00     		lsls	r3, r3, #1
 12741 037c 1344     		add	r3, r3, r2
 12742 037e 0233     		adds	r3, r3, #2
 12743 0380 9942     		cmp	r1, r3
 12744 0382 BBDD     		ble	.L514
1736:..\src/command_processing.c ****                 }
1737:..\src/command_processing.c **** 
1738:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1739:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12745              		.loc 1 1739 0 is_stmt 1
 12746 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12747 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12748 038c 2BE0     		b	.L515
 12749              	.L551:
 12750 038e 00BF     		.align	2
 12751              	.L550:
 12752 0390 00000000 		.word	N_IMU_Connected
 12753 0394 20110000 		.word	.LC143
 12754 0398 3C110000 		.word	.LC144
 12755 039c 88020000 		.word	.LC130
 12756 03a0 B8100000 		.word	.LC145
 12757 03a4 00000000 		.word	IMU_connected
 12758              	.L516:
1740:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12759              		.loc 1 1740 0 discriminator 3
 12760 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12761 03ac DA1D     		adds	r2, r3, #7
 12762 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12763 03b2 3221     		movs	r1, #50
 12764 03b4 01FB03F3 		mul	r3, r1, r3
 12765 03b8 1A44     		add	r2, r2, r3
 12766 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12767 03be 1A44     		add	r2, r2, r3
 12768 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12769 03c4 D31A     		subs	r3, r2, r3
 12770 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12771 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12772 03ce 8A1A     		subs	r2, r1, r2
 12773 03d0 07F1EC01 		add	r1, r7, #236
 12774 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12775 03d6 07F58A72 		add	r2, r7, #276
 12776 03da D154     		strb	r1, [r2, r3]
1739:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12777              		.loc 1 1739 0 discriminator 3
 12778 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12779 03e0 013B     		subs	r3, r3, #1
 12780 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12781              	.L515:
1739:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12782              		.loc 1 1739 0 is_stmt 0 discriminator 1
 12783 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12784 03ea 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 288


 12785 03ec DCD1     		bne	.L516
1720:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12786              		.loc 1 1720 0 is_stmt 1 discriminator 2
 12787 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12788 03f2 0133     		adds	r3, r3, #1
 12789 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12790              	.L510:
1720:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12791              		.loc 1 1720 0 is_stmt 0 discriminator 1
 12792 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12793 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12794 0400 9A42     		cmp	r2, r3
 12795 0402 FFF446AF 		bcc	.L517
1741:..\src/command_processing.c ****             }
1742:..\src/command_processing.c ****             
1743:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1744:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12796              		.loc 1 1744 0 is_stmt 1
 12797 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12798 040a 1A46     		mov	r2, r3	@ movhi
 12799 040c 9200     		lsls	r2, r2, #2
 12800 040e 1344     		add	r3, r3, r2
 12801 0410 1A46     		mov	r2, r3	@ movhi
 12802 0412 9100     		lsls	r1, r2, #2
 12803 0414 1A46     		mov	r2, r3	@ movhi
 12804 0416 0B46     		mov	r3, r1	@ movhi
 12805 0418 1344     		add	r3, r3, r2
 12806 041a 5B00     		lsls	r3, r3, #1
 12807 041c 9AB2     		uxth	r2, r3
 12808 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12809 0422 1344     		add	r3, r3, r2
 12810 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1745:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12811              		.loc 1 1745 0
 12812 0428 0023     		movs	r3, #0
 12813 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12814 042e 1FE1     		b	.L518
 12815              	.L525:
1746:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12816              		.loc 1 1746 0
 12817 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12818 0434 9A1C     		adds	r2, r3, #2
 12819 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12820 043a 3221     		movs	r1, #50
 12821 043c 01FB03F3 		mul	r3, r1, r3
 12822 0440 1344     		add	r3, r3, r2
 12823 0442 07F58A72 		add	r2, r7, #276
 12824 0446 0221     		movs	r1, #2
 12825 0448 D154     		strb	r1, [r2, r3]
1747:..\src/command_processing.c ****                 
1748:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12826              		.loc 1 1748 0
 12827 044a B7F89436 		ldrh	r3, [r7, #1684]
 12828 044e DA1C     		adds	r2, r3, #3
 12829 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12830 0454 3221     		movs	r1, #50
 12831 0456 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 289


 12832 045a 1344     		add	r3, r3, r2
 12833 045c 07F58A72 		add	r2, r7, #276
 12834 0460 0321     		movs	r1, #3
 12835 0462 D154     		strb	r1, [r2, r3]
1749:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12836              		.loc 1 1749 0
 12837 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12838 0468 1A1D     		adds	r2, r3, #4
 12839 046a B7F8A036 		ldrh	r3, [r7, #1696]
 12840 046e 3221     		movs	r1, #50
 12841 0470 01FB03F3 		mul	r3, r1, r3
 12842 0474 1A44     		add	r2, r2, r3
 12843 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12844 047a 5B00     		lsls	r3, r3, #1
 12845 047c B249     		ldr	r1, .L552
 12846 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12847 0480 1846     		mov	r0, r3
 12848 0482 B249     		ldr	r1, .L552+4
 12849 0484 0346     		mov	r3, r0
 12850 0486 5B00     		lsls	r3, r3, #1
 12851 0488 0344     		add	r3, r3, r0
 12852 048a 0B44     		add	r3, r3, r1
 12853 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12854 048e 07F58A73 		add	r3, r7, #276
 12855 0492 9954     		strb	r1, [r3, r2]
1750:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12856              		.loc 1 1750 0
 12857 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12858 0498 5A1D     		adds	r2, r3, #5
 12859 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12860 049e 3221     		movs	r1, #50
 12861 04a0 01FB03F3 		mul	r3, r1, r3
 12862 04a4 1A44     		add	r2, r2, r3
 12863 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12864 04aa 5B00     		lsls	r3, r3, #1
 12865 04ac A649     		ldr	r1, .L552
 12866 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12867 04b0 1846     		mov	r0, r3
 12868 04b2 A649     		ldr	r1, .L552+4
 12869 04b4 0346     		mov	r3, r0
 12870 04b6 5B00     		lsls	r3, r3, #1
 12871 04b8 0344     		add	r3, r3, r0
 12872 04ba 0B44     		add	r3, r3, r1
 12873 04bc 0133     		adds	r3, r3, #1
 12874 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12875 04c0 07F58A73 		add	r3, r7, #276
 12876 04c4 9954     		strb	r1, [r3, r2]
1751:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12877              		.loc 1 1751 0
 12878 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12879 04ca 9A1D     		adds	r2, r3, #6
 12880 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12881 04d0 3221     		movs	r1, #50
 12882 04d2 01FB03F3 		mul	r3, r1, r3
 12883 04d6 1A44     		add	r2, r2, r3
 12884 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12885 04dc 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 290


 12886 04de 9A49     		ldr	r1, .L552
 12887 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12888 04e2 1846     		mov	r0, r3
 12889 04e4 9949     		ldr	r1, .L552+4
 12890 04e6 0346     		mov	r3, r0
 12891 04e8 5B00     		lsls	r3, r3, #1
 12892 04ea 0344     		add	r3, r3, r0
 12893 04ec 0B44     		add	r3, r3, r1
 12894 04ee 0233     		adds	r3, r3, #2
 12895 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12896 04f2 07F58A73 		add	r3, r7, #276
 12897 04f6 9954     		strb	r1, [r3, r2]
1752:..\src/command_processing.c ****                 
1753:..\src/command_processing.c ****                 // check if there is a second value
1754:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12898              		.loc 1 1754 0
 12899 04f8 954B     		ldr	r3, .L552+8
 12900 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12901 04fc 1A46     		mov	r2, r3
 12902 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12903 0502 0133     		adds	r3, r3, #1
 12904 0504 5B00     		lsls	r3, r3, #1
 12905 0506 9A42     		cmp	r2, r3
 12906 0508 28DA     		bge	.L519
1755:..\src/command_processing.c ****                     // there is only one value
1756:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12907              		.loc 1 1756 0
 12908 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12909 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12910 0512 1EE0     		b	.L520
 12911              	.L521:
1757:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12912              		.loc 1 1757 0 discriminator 3
 12913 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12914 0518 DA1D     		adds	r2, r3, #7
 12915 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12916 051e 3221     		movs	r1, #50
 12917 0520 01FB03F3 		mul	r3, r1, r3
 12918 0524 1A44     		add	r2, r2, r3
 12919 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12920 052a 1A44     		add	r2, r2, r3
 12921 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12922 0530 D31A     		subs	r3, r2, r3
 12923 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12924 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12925 053a 8A1A     		subs	r2, r1, r2
 12926 053c 07F1D801 		add	r1, r7, #216
 12927 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12928 0542 07F58A72 		add	r2, r7, #276
 12929 0546 D154     		strb	r1, [r2, r3]
1756:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12930              		.loc 1 1756 0 discriminator 3
 12931 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12932 054c 013B     		subs	r3, r3, #1
 12933 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12934              	.L520:
1756:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 291


 12935              		.loc 1 1756 0 is_stmt 0 discriminator 1
 12936 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12937 0556 002B     		cmp	r3, #0
 12938 0558 DCD1     		bne	.L521
 12939 055a 84E0     		b	.L522
 12940              	.L519:
1758:..\src/command_processing.c ****                 }
1759:..\src/command_processing.c ****                 else {
1760:..\src/command_processing.c ****                     // fill the second value
1761:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12941              		.loc 1 1761 0 is_stmt 1
 12942 055c B7F89436 		ldrh	r3, [r7, #1684]
 12943 0560 DA1C     		adds	r2, r3, #3
 12944 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12945 0566 3221     		movs	r1, #50
 12946 0568 01FB03F3 		mul	r3, r1, r3
 12947 056c 1344     		add	r3, r3, r2
 12948 056e 07F58A72 		add	r2, r7, #276
 12949 0572 0621     		movs	r1, #6
 12950 0574 D154     		strb	r1, [r2, r3]
1762:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12951              		.loc 1 1762 0
 12952 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12953 057a DA1D     		adds	r2, r3, #7
 12954 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12955 0580 3221     		movs	r1, #50
 12956 0582 01FB03F3 		mul	r3, r1, r3
 12957 0586 1A44     		add	r2, r2, r3
 12958 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12959 058c 5B00     		lsls	r3, r3, #1
 12960 058e 0133     		adds	r3, r3, #1
 12961 0590 6D49     		ldr	r1, .L552
 12962 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12963 0594 1846     		mov	r0, r3
 12964 0596 6D49     		ldr	r1, .L552+4
 12965 0598 0346     		mov	r3, r0
 12966 059a 5B00     		lsls	r3, r3, #1
 12967 059c 0344     		add	r3, r3, r0
 12968 059e 0B44     		add	r3, r3, r1
 12969 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12970 05a2 07F58A73 		add	r3, r7, #276
 12971 05a6 9954     		strb	r1, [r3, r2]
1763:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12972              		.loc 1 1763 0
 12973 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12974 05ac 03F10802 		add	r2, r3, #8
 12975 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12976 05b4 3221     		movs	r1, #50
 12977 05b6 01FB03F3 		mul	r3, r1, r3
 12978 05ba 1A44     		add	r2, r2, r3
 12979 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12980 05c0 5B00     		lsls	r3, r3, #1
 12981 05c2 0133     		adds	r3, r3, #1
 12982 05c4 6049     		ldr	r1, .L552
 12983 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12984 05c8 1846     		mov	r0, r3
 12985 05ca 6049     		ldr	r1, .L552+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 292


 12986 05cc 0346     		mov	r3, r0
 12987 05ce 5B00     		lsls	r3, r3, #1
 12988 05d0 0344     		add	r3, r3, r0
 12989 05d2 0B44     		add	r3, r3, r1
 12990 05d4 0133     		adds	r3, r3, #1
 12991 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12992 05d8 07F58A73 		add	r3, r7, #276
 12993 05dc 9954     		strb	r1, [r3, r2]
1764:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12994              		.loc 1 1764 0
 12995 05de B7F89436 		ldrh	r3, [r7, #1684]
 12996 05e2 03F10902 		add	r2, r3, #9
 12997 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12998 05ea 3221     		movs	r1, #50
 12999 05ec 01FB03F3 		mul	r3, r1, r3
 13000 05f0 1A44     		add	r2, r2, r3
 13001 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 13002 05f6 5B00     		lsls	r3, r3, #1
 13003 05f8 0133     		adds	r3, r3, #1
 13004 05fa 5349     		ldr	r1, .L552
 13005 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13006 05fe 1846     		mov	r0, r3
 13007 0600 5249     		ldr	r1, .L552+4
 13008 0602 0346     		mov	r3, r0
 13009 0604 5B00     		lsls	r3, r3, #1
 13010 0606 0344     		add	r3, r3, r0
 13011 0608 0B44     		add	r3, r3, r1
 13012 060a 0233     		adds	r3, r3, #2
 13013 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 13014 060e 07F58A73 		add	r3, r7, #276
 13015 0612 9954     		strb	r1, [r3, r2]
1765:..\src/command_processing.c ****                 
1766:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 13016              		.loc 1 1766 0
 13017 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 13018 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13019 061c 1FE0     		b	.L523
 13020              	.L524:
1767:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 13021              		.loc 1 1767 0 discriminator 3
 13022 061e B7F89436 		ldrh	r3, [r7, #1684]
 13023 0622 03F10A02 		add	r2, r3, #10
 13024 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 13025 062a 3221     		movs	r1, #50
 13026 062c 01FB03F3 		mul	r3, r1, r3
 13027 0630 1A44     		add	r2, r2, r3
 13028 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 13029 0636 1A44     		add	r2, r2, r3
 13030 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 13031 063c D31A     		subs	r3, r2, r3
 13032 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 13033 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 13034 0646 8A1A     		subs	r2, r1, r2
 13035 0648 07F1D801 		add	r1, r7, #216
 13036 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13037 064e 07F58A72 		add	r2, r7, #276
 13038 0652 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 293


1766:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 13039              		.loc 1 1766 0 discriminator 3
 13040 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 13041 0658 013B     		subs	r3, r3, #1
 13042 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13043              	.L523:
1766:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 13044              		.loc 1 1766 0 is_stmt 0 discriminator 1
 13045 065e B7F8A236 		ldrh	r3, [r7, #1698]
 13046 0662 002B     		cmp	r3, #0
 13047 0664 DBD1     		bne	.L524
 13048              	.L522:
1745:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 13049              		.loc 1 1745 0 is_stmt 1 discriminator 2
 13050 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 13051 066a 0133     		adds	r3, r3, #1
 13052 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 13053              	.L518:
1745:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 13054              		.loc 1 1745 0 is_stmt 0 discriminator 1
 13055 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 13056 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 13057 0678 9A42     		cmp	r2, r3
 13058 067a FFF4D9AE 		bcc	.L525
1768:..\src/command_processing.c ****                 }
1769:..\src/command_processing.c ****             }
1770:..\src/command_processing.c ****             
1771:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1772:..\src/command_processing.c ****             
1773:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 13059              		.loc 1 1773 0 is_stmt 1
 13060 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 13061 0682 1A46     		mov	r2, r3	@ movhi
 13062 0684 9200     		lsls	r2, r2, #2
 13063 0686 1344     		add	r3, r3, r2
 13064 0688 1A46     		mov	r2, r3	@ movhi
 13065 068a 9100     		lsls	r1, r2, #2
 13066 068c 1A46     		mov	r2, r3	@ movhi
 13067 068e 0B46     		mov	r3, r1	@ movhi
 13068 0690 1344     		add	r3, r3, r2
 13069 0692 5B00     		lsls	r3, r3, #1
 13070 0694 9AB2     		uxth	r2, r3
 13071 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13072 069a 1344     		add	r3, r3, r2
 13073 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1774:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 13074              		.loc 1 1774 0
 13075 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 13076 06a4 5A1E     		subs	r2, r3, #1
 13077 06a6 07F1C803 		add	r3, r7, #200
 13078 06aa 2A49     		ldr	r1, .L552+12
 13079 06ac 1846     		mov	r0, r3
 13080 06ae FFF7FEFF 		bl	sprintf
1775:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 13081              		.loc 1 1775 0
 13082 06b2 07F1C803 		add	r3, r7, #200
 13083 06b6 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 294


 13084 06b8 FFF7FEFF 		bl	strlen
 13085 06bc 0346     		mov	r3, r0
 13086 06be 87F89336 		strb	r3, [r7, #1683]
1776:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 13087              		.loc 1 1776 0
 13088 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 13089 06c6 0233     		adds	r3, r3, #2
 13090 06c8 07F58A72 		add	r2, r7, #276
 13091 06cc 0221     		movs	r1, #2
 13092 06ce D154     		strb	r1, [r2, r3]
1777:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13093              		.loc 1 1777 0
 13094 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 13095 06d4 0333     		adds	r3, r3, #3
 13096 06d6 07F58A72 		add	r2, r7, #276
 13097 06da 0121     		movs	r1, #1
 13098 06dc D154     		strb	r1, [r2, r3]
1778:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 13099              		.loc 1 1778 0
 13100 06de B7F89436 		ldrh	r3, [r7, #1684]
 13101 06e2 0433     		adds	r3, r3, #4
 13102 06e4 1C4A     		ldr	r2, .L552+16
 13103 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 13104 06ea 07F58A72 		add	r2, r7, #276
 13105 06ee D154     		strb	r1, [r2, r3]
1779:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13106              		.loc 1 1779 0
 13107 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 13108 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13109 06f8 18E0     		b	.L526
 13110              	.L527:
1780:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 13111              		.loc 1 1780 0 discriminator 3
 13112 06fa B7F89436 		ldrh	r3, [r7, #1684]
 13113 06fe 5A1D     		adds	r2, r3, #5
 13114 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 13115 0704 1A44     		add	r2, r2, r3
 13116 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 13117 070a D31A     		subs	r3, r2, r3
 13118 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 13119 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 13120 0714 8A1A     		subs	r2, r1, r2
 13121 0716 07F1C801 		add	r1, r7, #200
 13122 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13123 071c 07F58A72 		add	r2, r7, #276
 13124 0720 D154     		strb	r1, [r2, r3]
1779:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13125              		.loc 1 1779 0 discriminator 3
 13126 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 13127 0726 013B     		subs	r3, r3, #1
 13128 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13129              	.L526:
1779:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13130              		.loc 1 1779 0 is_stmt 0 discriminator 1
 13131 072c B7F8A436 		ldrh	r3, [r7, #1700]
 13132 0730 002B     		cmp	r3, #0
 13133 0732 E2D1     		bne	.L527
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 295


1781:..\src/command_processing.c ****                 
1782:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1783:..\src/command_processing.c ****             
1784:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13134              		.loc 1 1784 0 is_stmt 1
 13135 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13136 0738 3233     		adds	r3, r3, #50
 13137 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1785:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 13138              		.loc 1 1785 0
 13139 073e 0023     		movs	r3, #0
 13140 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13141 0744 38E1     		b	.L528
 13142              	.L553:
 13143 0746 00BF     		.align	2
 13144              	.L552:
 13145 0748 00000000 		.word	IMU_connected
 13146 074c 00000000 		.word	MagCal
 13147 0750 00000000 		.word	N_IMU_Connected
 13148 0754 C4100000 		.word	.LC146
 13149 0758 00000000 		.word	c_mem
 13150              	.L531:
1786:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13151              		.loc 1 1786 0
 13152 075c B7F89826 		ldrh	r2, [r7, #1688]
 13153 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 13154 0764 D118     		adds	r1, r2, r3
 13155 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 13156 076a D54A     		ldr	r2, .L554
 13157 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13158 076e 07F19C00 		add	r0, r7, #156
 13159 0772 0A46     		mov	r2, r1
 13160 0774 D349     		ldr	r1, .L554+4
 13161 0776 FFF7FEFF 		bl	sprintf
1787:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 13162              		.loc 1 1787 0
 13163 077a 07F19C03 		add	r3, r7, #156
 13164 077e 1846     		mov	r0, r3
 13165 0780 FFF7FEFF 		bl	strlen
 13166 0784 0346     		mov	r3, r0
 13167 0786 87F88F36 		strb	r3, [r7, #1679]
1788:..\src/command_processing.c ****             
1789:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 13168              		.loc 1 1789 0
 13169 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13170 078e 1A46     		mov	r2, r3	@ movhi
 13171 0790 9200     		lsls	r2, r2, #2
 13172 0792 1344     		add	r3, r3, r2
 13173 0794 1A46     		mov	r2, r3	@ movhi
 13174 0796 9100     		lsls	r1, r2, #2
 13175 0798 1A46     		mov	r2, r3	@ movhi
 13176 079a 0B46     		mov	r3, r1	@ movhi
 13177 079c 1344     		add	r3, r3, r2
 13178 079e 5B00     		lsls	r3, r3, #1
 13179 07a0 9AB2     		uxth	r2, r3
 13180 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13181 07a6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 296


 13182 07a8 9BB2     		uxth	r3, r3
 13183 07aa 0233     		adds	r3, r3, #2
 13184 07ac 9BB2     		uxth	r3, r3
 13185 07ae 1A46     		mov	r2, r3
 13186 07b0 07F58A73 		add	r3, r7, #276
 13187 07b4 0221     		movs	r1, #2
 13188 07b6 9954     		strb	r1, [r3, r2]
1790:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 13189              		.loc 1 1790 0
 13190 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13191 07bc 1A46     		mov	r2, r3	@ movhi
 13192 07be 9200     		lsls	r2, r2, #2
 13193 07c0 1344     		add	r3, r3, r2
 13194 07c2 1A46     		mov	r2, r3	@ movhi
 13195 07c4 9100     		lsls	r1, r2, #2
 13196 07c6 1A46     		mov	r2, r3	@ movhi
 13197 07c8 0B46     		mov	r3, r1	@ movhi
 13198 07ca 1344     		add	r3, r3, r2
 13199 07cc 5B00     		lsls	r3, r3, #1
 13200 07ce 9AB2     		uxth	r2, r3
 13201 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13202 07d4 1344     		add	r3, r3, r2
 13203 07d6 9BB2     		uxth	r3, r3
 13204 07d8 0333     		adds	r3, r3, #3
 13205 07da 9BB2     		uxth	r3, r3
 13206 07dc 1A46     		mov	r2, r3
 13207 07de 07F58A73 		add	r3, r7, #276
 13208 07e2 0521     		movs	r1, #5
 13209 07e4 9954     		strb	r1, [r3, r2]
1791:..\src/command_processing.c ****                 
1792:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13210              		.loc 1 1792 0
 13211 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13212 07ea 1A46     		mov	r2, r3	@ movhi
 13213 07ec 9200     		lsls	r2, r2, #2
 13214 07ee 1344     		add	r3, r3, r2
 13215 07f0 1A46     		mov	r2, r3	@ movhi
 13216 07f2 9100     		lsls	r1, r2, #2
 13217 07f4 1A46     		mov	r2, r3	@ movhi
 13218 07f6 0B46     		mov	r3, r1	@ movhi
 13219 07f8 1344     		add	r3, r3, r2
 13220 07fa 5B00     		lsls	r3, r3, #1
 13221 07fc 9AB2     		uxth	r2, r3
 13222 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13223 0802 1344     		add	r3, r3, r2
 13224 0804 9BB2     		uxth	r3, r3
 13225 0806 0433     		adds	r3, r3, #4
 13226 0808 9BB2     		uxth	r3, r3
 13227 080a 1846     		mov	r0, r3
 13228 080c B7F8A436 		ldrh	r3, [r7, #1700]
 13229 0810 AB4A     		ldr	r2, .L554
 13230 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13231 0814 1946     		mov	r1, r3
 13232 0816 AC4A     		ldr	r2, .L554+8
 13233 0818 0B46     		mov	r3, r1
 13234 081a 9B00     		lsls	r3, r3, #2
 13235 081c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 297


 13236 081e 1344     		add	r3, r3, r2
 13237 0820 03F20223 		addw	r3, r3, #514
 13238 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13239 0826 07F58A73 		add	r3, r7, #276
 13240 082a 1A54     		strb	r2, [r3, r0]
1793:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13241              		.loc 1 1793 0
 13242 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13243 0830 1A46     		mov	r2, r3	@ movhi
 13244 0832 9200     		lsls	r2, r2, #2
 13245 0834 1344     		add	r3, r3, r2
 13246 0836 1A46     		mov	r2, r3	@ movhi
 13247 0838 9100     		lsls	r1, r2, #2
 13248 083a 1A46     		mov	r2, r3	@ movhi
 13249 083c 0B46     		mov	r3, r1	@ movhi
 13250 083e 1344     		add	r3, r3, r2
 13251 0840 5B00     		lsls	r3, r3, #1
 13252 0842 9AB2     		uxth	r2, r3
 13253 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13254 0848 1344     		add	r3, r3, r2
 13255 084a 9BB2     		uxth	r3, r3
 13256 084c 0533     		adds	r3, r3, #5
 13257 084e 9BB2     		uxth	r3, r3
 13258 0850 1846     		mov	r0, r3
 13259 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 13260 0856 9A4A     		ldr	r2, .L554
 13261 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13262 085a 1946     		mov	r1, r3
 13263 085c 9A4A     		ldr	r2, .L554+8
 13264 085e 0B46     		mov	r3, r1
 13265 0860 9B00     		lsls	r3, r3, #2
 13266 0862 0B44     		add	r3, r3, r1
 13267 0864 1344     		add	r3, r3, r2
 13268 0866 03F20323 		addw	r3, r3, #515
 13269 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13270 086c 07F58A73 		add	r3, r7, #276
 13271 0870 1A54     		strb	r2, [r3, r0]
1794:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13272              		.loc 1 1794 0
 13273 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13274 0876 1A46     		mov	r2, r3	@ movhi
 13275 0878 9200     		lsls	r2, r2, #2
 13276 087a 1344     		add	r3, r3, r2
 13277 087c 1A46     		mov	r2, r3	@ movhi
 13278 087e 9100     		lsls	r1, r2, #2
 13279 0880 1A46     		mov	r2, r3	@ movhi
 13280 0882 0B46     		mov	r3, r1	@ movhi
 13281 0884 1344     		add	r3, r3, r2
 13282 0886 5B00     		lsls	r3, r3, #1
 13283 0888 9AB2     		uxth	r2, r3
 13284 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13285 088e 1344     		add	r3, r3, r2
 13286 0890 9BB2     		uxth	r3, r3
 13287 0892 0633     		adds	r3, r3, #6
 13288 0894 9BB2     		uxth	r3, r3
 13289 0896 1846     		mov	r0, r3
 13290 0898 B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 298


 13291 089c 884A     		ldr	r2, .L554
 13292 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13293 08a0 1946     		mov	r1, r3
 13294 08a2 894A     		ldr	r2, .L554+8
 13295 08a4 0B46     		mov	r3, r1
 13296 08a6 9B00     		lsls	r3, r3, #2
 13297 08a8 0B44     		add	r3, r3, r1
 13298 08aa 1344     		add	r3, r3, r2
 13299 08ac 03F50173 		add	r3, r3, #516
 13300 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13301 08b2 07F58A73 		add	r3, r7, #276
 13302 08b6 1A54     		strb	r2, [r3, r0]
1795:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13303              		.loc 1 1795 0
 13304 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13305 08bc 1A46     		mov	r2, r3	@ movhi
 13306 08be 9200     		lsls	r2, r2, #2
 13307 08c0 1344     		add	r3, r3, r2
 13308 08c2 1A46     		mov	r2, r3	@ movhi
 13309 08c4 9100     		lsls	r1, r2, #2
 13310 08c6 1A46     		mov	r2, r3	@ movhi
 13311 08c8 0B46     		mov	r3, r1	@ movhi
 13312 08ca 1344     		add	r3, r3, r2
 13313 08cc 5B00     		lsls	r3, r3, #1
 13314 08ce 9AB2     		uxth	r2, r3
 13315 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13316 08d4 1344     		add	r3, r3, r2
 13317 08d6 9BB2     		uxth	r3, r3
 13318 08d8 0733     		adds	r3, r3, #7
 13319 08da 9BB2     		uxth	r3, r3
 13320 08dc 1846     		mov	r0, r3
 13321 08de B7F8A436 		ldrh	r3, [r7, #1700]
 13322 08e2 774A     		ldr	r2, .L554
 13323 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13324 08e6 1946     		mov	r1, r3
 13325 08e8 774A     		ldr	r2, .L554+8
 13326 08ea 0B46     		mov	r3, r1
 13327 08ec 9B00     		lsls	r3, r3, #2
 13328 08ee 0B44     		add	r3, r3, r1
 13329 08f0 1344     		add	r3, r3, r2
 13330 08f2 03F20523 		addw	r3, r3, #517
 13331 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13332 08f8 07F58A73 		add	r3, r7, #276
 13333 08fc 1A54     		strb	r2, [r3, r0]
1796:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13334              		.loc 1 1796 0
 13335 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13336 0902 1A46     		mov	r2, r3	@ movhi
 13337 0904 9200     		lsls	r2, r2, #2
 13338 0906 1344     		add	r3, r3, r2
 13339 0908 1A46     		mov	r2, r3	@ movhi
 13340 090a 9100     		lsls	r1, r2, #2
 13341 090c 1A46     		mov	r2, r3	@ movhi
 13342 090e 0B46     		mov	r3, r1	@ movhi
 13343 0910 1344     		add	r3, r3, r2
 13344 0912 5B00     		lsls	r3, r3, #1
 13345 0914 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 299


 13346 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13347 091a 1344     		add	r3, r3, r2
 13348 091c 9BB2     		uxth	r3, r3
 13349 091e 0833     		adds	r3, r3, #8
 13350 0920 9BB2     		uxth	r3, r3
 13351 0922 1846     		mov	r0, r3
 13352 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 13353 0928 654A     		ldr	r2, .L554
 13354 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13355 092c 1946     		mov	r1, r3
 13356 092e 664A     		ldr	r2, .L554+8
 13357 0930 0B46     		mov	r3, r1
 13358 0932 9B00     		lsls	r3, r3, #2
 13359 0934 0B44     		add	r3, r3, r1
 13360 0936 1344     		add	r3, r3, r2
 13361 0938 03F20623 		addw	r3, r3, #518
 13362 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13363 093e 07F58A73 		add	r3, r7, #276
 13364 0942 1A54     		strb	r2, [r3, r0]
1797:..\src/command_processing.c **** 
1798:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 13365              		.loc 1 1798 0
 13366 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13367 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13368 094c 2BE0     		b	.L529
 13369              	.L530:
1799:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13370              		.loc 1 1799 0 discriminator 3
 13371 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13372 0952 1A46     		mov	r2, r3	@ movhi
 13373 0954 9200     		lsls	r2, r2, #2
 13374 0956 1344     		add	r3, r3, r2
 13375 0958 1A46     		mov	r2, r3	@ movhi
 13376 095a 9100     		lsls	r1, r2, #2
 13377 095c 1A46     		mov	r2, r3	@ movhi
 13378 095e 0B46     		mov	r3, r1	@ movhi
 13379 0960 1344     		add	r3, r3, r2
 13380 0962 5B00     		lsls	r3, r3, #1
 13381 0964 9AB2     		uxth	r2, r3
 13382 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13383 096a 1344     		add	r3, r3, r2
 13384 096c 9AB2     		uxth	r2, r3
 13385 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13386 0972 9BB2     		uxth	r3, r3
 13387 0974 1344     		add	r3, r3, r2
 13388 0976 9AB2     		uxth	r2, r3
 13389 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 13390 097c D31A     		subs	r3, r2, r3
 13391 097e 9BB2     		uxth	r3, r3
 13392 0980 0933     		adds	r3, r3, #9
 13393 0982 9BB2     		uxth	r3, r3
 13394 0984 1946     		mov	r1, r3
 13395 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 13396 098a B7F8A236 		ldrh	r3, [r7, #1698]
 13397 098e D31A     		subs	r3, r2, r3
 13398 0990 07F19C02 		add	r2, r7, #156
 13399 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 300


 13400 0996 07F58A73 		add	r3, r7, #276
 13401 099a 5A54     		strb	r2, [r3, r1]
1798:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13402              		.loc 1 1798 0 discriminator 3
 13403 099c B7F8A236 		ldrh	r3, [r7, #1698]
 13404 09a0 013B     		subs	r3, r3, #1
 13405 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13406              	.L529:
1798:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13407              		.loc 1 1798 0 is_stmt 0 discriminator 1
 13408 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 13409 09aa 002B     		cmp	r3, #0
 13410 09ac CFD1     		bne	.L530
1785:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13411              		.loc 1 1785 0 is_stmt 1 discriminator 2
 13412 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 13413 09b2 0133     		adds	r3, r3, #1
 13414 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13415              	.L528:
1785:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13416              		.loc 1 1785 0 is_stmt 0 discriminator 1
 13417 09b8 444B     		ldr	r3, .L554+12
 13418 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13419 09bc 9BB2     		uxth	r3, r3
 13420 09be B7F8A426 		ldrh	r2, [r7, #1700]
 13421 09c2 9A42     		cmp	r2, r3
 13422 09c4 FFF4CAAE 		bcc	.L531
1800:..\src/command_processing.c ****             }  
1801:..\src/command_processing.c ****           
1802:..\src/command_processing.c **** 
1803:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1804:..\src/command_processing.c ****             
1805:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 13423              		.loc 1 1805 0 is_stmt 1
 13424 09c8 404B     		ldr	r3, .L554+12
 13425 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13426 09cc 9BB2     		uxth	r3, r3
 13427 09ce 1A46     		mov	r2, r3	@ movhi
 13428 09d0 9200     		lsls	r2, r2, #2
 13429 09d2 1344     		add	r3, r3, r2
 13430 09d4 1A46     		mov	r2, r3	@ movhi
 13431 09d6 9100     		lsls	r1, r2, #2
 13432 09d8 1A46     		mov	r2, r3	@ movhi
 13433 09da 0B46     		mov	r3, r1	@ movhi
 13434 09dc 1344     		add	r3, r3, r2
 13435 09de 5B00     		lsls	r3, r3, #1
 13436 09e0 9AB2     		uxth	r2, r3
 13437 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13438 09e6 1344     		add	r3, r3, r2
 13439 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1806:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 13440              		.loc 1 1806 0
 13441 09ec B7F89836 		ldrh	r3, [r7, #1688]
 13442 09f0 364A     		ldr	r2, .L554+12
 13443 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13444 09f4 1A44     		add	r2, r2, r3
 13445 09f6 07F18003 		add	r3, r7, #128
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 301


 13446 09fa 3549     		ldr	r1, .L554+16
 13447 09fc 1846     		mov	r0, r3
 13448 09fe FFF7FEFF 		bl	sprintf
1807:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 13449              		.loc 1 1807 0
 13450 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 13451 0a06 0233     		adds	r3, r3, #2
 13452 0a08 07F58A72 		add	r2, r7, #276
 13453 0a0c 0021     		movs	r1, #0
 13454 0a0e D154     		strb	r1, [r2, r3]
1808:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13455              		.loc 1 1808 0
 13456 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 13457 0a14 0333     		adds	r3, r3, #3
 13458 0a16 07F58A72 		add	r2, r7, #276
 13459 0a1a 0121     		movs	r1, #1
 13460 0a1c D154     		strb	r1, [r2, r3]
1809:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 13461              		.loc 1 1809 0
 13462 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 13463 0a22 0433     		adds	r3, r3, #4
 13464 0a24 284A     		ldr	r2, .L554+8
 13465 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 13466 0a2a 07F58A72 		add	r2, r7, #276
 13467 0a2e D154     		strb	r1, [r2, r3]
1810:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 13468              		.loc 1 1810 0
 13469 0a30 254B     		ldr	r3, .L554+8
 13470 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 13471 0a36 012B     		cmp	r3, #1
 13472 0a38 17D0     		beq	.L533
 13473 0a3a 022B     		cmp	r3, #2
 13474 0a3c 28D0     		beq	.L534
 13475 0a3e 002B     		cmp	r3, #0
 13476 0a40 00D0     		beq	.L535
1811:..\src/command_processing.c ****                 case 0: 
1812:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1813:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1814:..\src/command_processing.c ****                     break;
1815:..\src/command_processing.c ****                 case 1: 
1816:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1817:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1818:..\src/command_processing.c ****                     break;
1819:..\src/command_processing.c ****                 case 2: 
1820:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1821:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1822:..\src/command_processing.c ****                     break;
1823:..\src/command_processing.c ****                 default:
1824:..\src/command_processing.c ****                     break;
 13477              		.loc 1 1824 0
 13478 0a42 38E0     		b	.L536
 13479              	.L535:
1812:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13480              		.loc 1 1812 0
 13481 0a44 07F18003 		add	r3, r7, #128
 13482 0a48 1846     		mov	r0, r3
 13483 0a4a FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 302


 13484 0a4e 0346     		mov	r3, r0
 13485 0a50 1A46     		mov	r2, r3
 13486 0a52 07F18003 		add	r3, r7, #128
 13487 0a56 1344     		add	r3, r3, r2
 13488 0a58 1E4A     		ldr	r2, .L554+20
 13489 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13490 0a5c 1860     		str	r0, [r3]	@ unaligned
 13491 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13492 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1813:..\src/command_processing.c ****                     break;
 13493              		.loc 1 1813 0
 13494 0a62 1A23     		movs	r3, #26
 13495 0a64 87F89D36 		strb	r3, [r7, #1693]
1814:..\src/command_processing.c ****                 case 1: 
 13496              		.loc 1 1814 0
 13497 0a68 25E0     		b	.L536
 13498              	.L533:
1816:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 13499              		.loc 1 1816 0
 13500 0a6a 07F18003 		add	r3, r7, #128
 13501 0a6e 1846     		mov	r0, r3
 13502 0a70 FFF7FEFF 		bl	strlen
 13503 0a74 0346     		mov	r3, r0
 13504 0a76 1A46     		mov	r2, r3
 13505 0a78 07F18003 		add	r3, r7, #128
 13506 0a7c 1344     		add	r3, r3, r2
 13507 0a7e 164A     		ldr	r2, .L554+24
 13508 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13509 0a82 1860     		str	r0, [r3]	@ unaligned
 13510 0a84 1279     		ldrb	r2, [r2, #4]
 13511 0a86 1A71     		strb	r2, [r3, #4]
1817:..\src/command_processing.c ****                     break;
 13512              		.loc 1 1817 0
 13513 0a88 1923     		movs	r3, #25
 13514 0a8a 87F89D36 		strb	r3, [r7, #1693]
1818:..\src/command_processing.c ****                 case 2: 
 13515              		.loc 1 1818 0
 13516 0a8e 12E0     		b	.L536
 13517              	.L534:
1820:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13518              		.loc 1 1820 0
 13519 0a90 07F18003 		add	r3, r7, #128
 13520 0a94 1846     		mov	r0, r3
 13521 0a96 FFF7FEFF 		bl	strlen
 13522 0a9a 0346     		mov	r3, r0
 13523 0a9c 1A46     		mov	r2, r3
 13524 0a9e 07F18003 		add	r3, r7, #128
 13525 0aa2 1344     		add	r3, r3, r2
 13526 0aa4 0D4A     		ldr	r2, .L554+28
 13527 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13528 0aa8 1860     		str	r0, [r3]	@ unaligned
 13529 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13530 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1821:..\src/command_processing.c ****                     break;
 13531              		.loc 1 1821 0
 13532 0aae 1A23     		movs	r3, #26
 13533 0ab0 87F89D36 		strb	r3, [r7, #1693]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 303


1822:..\src/command_processing.c ****                 default:
 13534              		.loc 1 1822 0
 13535 0ab4 00BF     		nop
 13536              	.L536:
1825:..\src/command_processing.c ****             }            
1826:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13537              		.loc 1 1826 0
 13538 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13539 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13540 0abe 28E0     		b	.L537
 13541              	.L555:
 13542              		.align	2
 13543              	.L554:
 13544 0ac0 00000000 		.word	IMU_connected
 13545 0ac4 D4100000 		.word	.LC147
 13546 0ac8 00000000 		.word	c_mem
 13547 0acc 00000000 		.word	N_IMU_Connected
 13548 0ad0 F0100000 		.word	.LC148
 13549 0ad4 08110000 		.word	.LC149
 13550 0ad8 10110000 		.word	.LC150
 13551 0adc 18110000 		.word	.LC151
 13552              	.L538:
1827:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13553              		.loc 1 1827 0 discriminator 3
 13554 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13555 0ae4 5A1D     		adds	r2, r3, #5
 13556 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13557 0aea 1A44     		add	r2, r2, r3
 13558 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13559 0af0 D31A     		subs	r3, r2, r3
 13560 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13561 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13562 0afa 8A1A     		subs	r2, r1, r2
 13563 0afc 07F18001 		add	r1, r7, #128
 13564 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13565 0b02 07F58A72 		add	r2, r7, #276
 13566 0b06 D154     		strb	r1, [r2, r3]
1826:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13567              		.loc 1 1826 0 discriminator 3
 13568 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13569 0b0c 013B     		subs	r3, r3, #1
 13570 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13571              	.L537:
1826:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13572              		.loc 1 1826 0 is_stmt 0 discriminator 1
 13573 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13574 0b16 002B     		cmp	r3, #0
 13575 0b18 E2D1     		bne	.L538
1828:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1829:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13576              		.loc 1 1829 0 is_stmt 1
 13577 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13578 0b1e 5A1D     		adds	r2, r3, #5
 13579 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13580 0b24 1344     		add	r3, r3, r2
 13581 0b26 07F58A72 		add	r2, r7, #276
 13582 0b2a 0121     		movs	r1, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 304


 13583 0b2c D154     		strb	r1, [r2, r3]
1830:..\src/command_processing.c ****                   
1831:..\src/command_processing.c ****             
1832:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1833:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13584              		.loc 1 1833 0
 13585 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13586 0b32 3233     		adds	r3, r3, #50
 13587 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1834:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13588              		.loc 1 1834 0
 13589 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13590 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13591 0b40 1AE0     		b	.L539
 13592              	.L540:
1835:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13593              		.loc 1 1835 0 discriminator 3
 13594 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13595 0b46 0233     		adds	r3, r3, #2
 13596 0b48 9BB2     		uxth	r3, r3
 13597 0b4a 1A46     		mov	r2, r3
 13598 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13599 0b50 1A44     		add	r2, r2, r3
 13600 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13601 0b56 D31A     		subs	r3, r2, r3
 13602 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13603 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13604 0b60 8A1A     		subs	r2, r1, r2
 13605 0b62 07F10801 		add	r1, r7, #8
 13606 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13607 0b68 07F58A72 		add	r2, r7, #276
 13608 0b6c D154     		strb	r1, [r2, r3]
1834:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13609              		.loc 1 1834 0 discriminator 3
 13610 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 13611 0b72 013B     		subs	r3, r3, #1
 13612 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13613              	.L539:
1834:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13614              		.loc 1 1834 0 is_stmt 0 discriminator 1
 13615 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13616 0b7c 002B     		cmp	r3, #0
 13617 0b7e E0D1     		bne	.L540
1836:..\src/command_processing.c **** 
1837:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 13618              		.loc 1 1837 0 is_stmt 1
 13619 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13620 0b84 5C1E     		subs	r4, r3, #1
 13621 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 13622 0b8a DBB2     		uxtb	r3, r3
 13623 0b8c 013B     		subs	r3, r3, #1
 13624 0b8e DAB2     		uxtb	r2, r3
 13625 0b90 07F58A73 		add	r3, r7, #276
 13626 0b94 1146     		mov	r1, r2
 13627 0b96 1846     		mov	r0, r3
 13628 0b98 FFF7FEFF 		bl	LCRChecksum
 13629 0b9c 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 305


 13630 0b9e 1A46     		mov	r2, r3
 13631 0ba0 07F58A73 		add	r3, r7, #276
 13632 0ba4 1A55     		strb	r2, [r3, r4]
1838:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13633              		.loc 1 1838 0
 13634 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13635 0baa 07F58A73 		add	r3, r7, #276
 13636 0bae 1146     		mov	r1, r2
 13637 0bb0 1846     		mov	r0, r3
 13638 0bb2 FFF7FEFF 		bl	commWrite
1839:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13639              		.loc 1 1839 0
 13640 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1840:..\src/command_processing.c ****         break;
 13641              		.loc 1 1840 0
 13642 0bba 09E1     		b	.L541
 13643              	.L548:
1841:..\src/command_processing.c **** 
1842:..\src/command_processing.c **** //=========================================================     other_params
1843:..\src/command_processing.c ****         default: 
1844:..\src/command_processing.c ****             
1845:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13644              		.loc 1 1845 0
 13645 0bbc BB1D     		adds	r3, r7, #6
 13646 0bbe 1A88     		ldrh	r2, [r3]
 13647 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13648 0bc4 013B     		subs	r3, r3, #1
 13649 0bc6 9A42     		cmp	r2, r3
 13650 0bc8 C0F20181 		blt	.L549
1846:..\src/command_processing.c ****                 break;
1847:..\src/command_processing.c ****             
1848:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13651              		.loc 1 1848 0
 13652 0bcc BB1D     		adds	r3, r7, #6
 13653 0bce 1A88     		ldrh	r2, [r3]
 13654 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13655 0bd4 8149     		ldr	r1, .L556
 13656 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13657 0bd8 0B44     		add	r3, r3, r1
 13658 0bda 9A42     		cmp	r2, r3
 13659 0bdc 05D1     		bne	.L543
1849:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13660              		.loc 1 1849 0
 13661 0bde 804B     		ldr	r3, .L556+4
 13662 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13663 0be2 804B     		ldr	r3, .L556+8
 13664 0be4 83F80122 		strb	r2, [r3, #513]
1850:..\src/command_processing.c ****                 break;
 13665              		.loc 1 1850 0
 13666 0be8 F2E0     		b	.L541
 13667              	.L543:
1851:..\src/command_processing.c ****             }
1852:..\src/command_processing.c ****             
1853:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13668              		.loc 1 1853 0
 13669 0bea BB1D     		adds	r3, r7, #6
 13670 0bec 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 306


 13671 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13672 0bf2 013B     		subs	r3, r3, #1
 13673 0bf4 9A42     		cmp	r2, r3
 13674 0bf6 05D1     		bne	.L544
1854:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 13675              		.loc 1 1854 0
 13676 0bf8 794B     		ldr	r3, .L556+4
 13677 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13678 0bfc 794B     		ldr	r3, .L556+8
 13679 0bfe 83F8A020 		strb	r2, [r3, #160]
1855:..\src/command_processing.c ****             }
1856:..\src/command_processing.c ****             else {
1857:..\src/command_processing.c ****             
1858:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1859:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1860:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1861:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1862:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1863:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1864:..\src/command_processing.c ****                 
1865:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1866:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1867:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1868:..\src/command_processing.c ****                 {
1869:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1870:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1871:..\src/command_processing.c ****                 }
1872:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1873:..\src/command_processing.c ****             
1874:..\src/command_processing.c ****             }
1875:..\src/command_processing.c ****             
1876:..\src/command_processing.c ****         break;
 13680              		.loc 1 1876 0
 13681 0c02 E5E0     		b	.L541
 13682              	.L544:
1859:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13683              		.loc 1 1859 0
 13684 0c04 BB1D     		adds	r3, r7, #6
 13685 0c06 1A88     		ldrh	r2, [r3]
 13686 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13687 0c0c D31A     		subs	r3, r2, r3
 13688 0c0e 764A     		ldr	r2, .L556+12
 13689 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13690 0c12 1946     		mov	r1, r3
 13691 0c14 724B     		ldr	r3, .L556+4
 13692 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13693 0c18 724A     		ldr	r2, .L556+8
 13694 0c1a 0B46     		mov	r3, r1
 13695 0c1c 9B00     		lsls	r3, r3, #2
 13696 0c1e 0B44     		add	r3, r3, r1
 13697 0c20 1344     		add	r3, r3, r2
 13698 0c22 03F20223 		addw	r3, r3, #514
 13699 0c26 0246     		mov	r2, r0
 13700 0c28 1A70     		strb	r2, [r3]
1860:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13701              		.loc 1 1860 0
 13702 0c2a BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 307


 13703 0c2c 1A88     		ldrh	r2, [r3]
 13704 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 13705 0c32 D31A     		subs	r3, r2, r3
 13706 0c34 6C4A     		ldr	r2, .L556+12
 13707 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13708 0c38 1946     		mov	r1, r3
 13709 0c3a 694B     		ldr	r3, .L556+4
 13710 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 13711 0c3e 694A     		ldr	r2, .L556+8
 13712 0c40 0B46     		mov	r3, r1
 13713 0c42 9B00     		lsls	r3, r3, #2
 13714 0c44 0B44     		add	r3, r3, r1
 13715 0c46 1344     		add	r3, r3, r2
 13716 0c48 03F20323 		addw	r3, r3, #515
 13717 0c4c 0246     		mov	r2, r0
 13718 0c4e 1A70     		strb	r2, [r3]
1861:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13719              		.loc 1 1861 0
 13720 0c50 BB1D     		adds	r3, r7, #6
 13721 0c52 1A88     		ldrh	r2, [r3]
 13722 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13723 0c58 D31A     		subs	r3, r2, r3
 13724 0c5a 634A     		ldr	r2, .L556+12
 13725 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13726 0c5e 1946     		mov	r1, r3
 13727 0c60 5F4B     		ldr	r3, .L556+4
 13728 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13729 0c64 5F4A     		ldr	r2, .L556+8
 13730 0c66 0B46     		mov	r3, r1
 13731 0c68 9B00     		lsls	r3, r3, #2
 13732 0c6a 0B44     		add	r3, r3, r1
 13733 0c6c 1344     		add	r3, r3, r2
 13734 0c6e 03F50173 		add	r3, r3, #516
 13735 0c72 0246     		mov	r2, r0
 13736 0c74 1A70     		strb	r2, [r3]
1862:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13737              		.loc 1 1862 0
 13738 0c76 BB1D     		adds	r3, r7, #6
 13739 0c78 1A88     		ldrh	r2, [r3]
 13740 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13741 0c7e D31A     		subs	r3, r2, r3
 13742 0c80 594A     		ldr	r2, .L556+12
 13743 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13744 0c84 1946     		mov	r1, r3
 13745 0c86 564B     		ldr	r3, .L556+4
 13746 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13747 0c8a 564A     		ldr	r2, .L556+8
 13748 0c8c 0B46     		mov	r3, r1
 13749 0c8e 9B00     		lsls	r3, r3, #2
 13750 0c90 0B44     		add	r3, r3, r1
 13751 0c92 1344     		add	r3, r3, r2
 13752 0c94 03F20523 		addw	r3, r3, #517
 13753 0c98 0246     		mov	r2, r0
 13754 0c9a 1A70     		strb	r2, [r3]
1863:..\src/command_processing.c ****                 
 13755              		.loc 1 1863 0
 13756 0c9c BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 308


 13757 0c9e 1A88     		ldrh	r2, [r3]
 13758 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 13759 0ca4 D31A     		subs	r3, r2, r3
 13760 0ca6 504A     		ldr	r2, .L556+12
 13761 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13762 0caa 1946     		mov	r1, r3
 13763 0cac 4C4B     		ldr	r3, .L556+4
 13764 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 13765 0cb0 4C4A     		ldr	r2, .L556+8
 13766 0cb2 0B46     		mov	r3, r1
 13767 0cb4 9B00     		lsls	r3, r3, #2
 13768 0cb6 0B44     		add	r3, r3, r1
 13769 0cb8 1344     		add	r3, r3, r2
 13770 0cba 03F20623 		addw	r3, r3, #518
 13771 0cbe 0246     		mov	r2, r0
 13772 0cc0 1A70     		strb	r2, [r3]
1866:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13773              		.loc 1 1866 0
 13774 0cc2 4A4B     		ldr	r3, .L556+16
 13775 0cc4 0122     		movs	r2, #1
 13776 0cc6 1A60     		str	r2, [r3]
1867:..\src/command_processing.c ****                 {
 13777              		.loc 1 1867 0
 13778 0cc8 0023     		movs	r3, #0
 13779 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13780 0cce 71E0     		b	.L546
 13781              	.L547:
1869:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13782              		.loc 1 1869 0 discriminator 3
 13783 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13784 0cd4 444A     		ldr	r2, .L556+12
 13785 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13786 0cd8 1C46     		mov	r4, r3
 13787 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13788 0cde 424A     		ldr	r2, .L556+12
 13789 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13790 0ce2 1946     		mov	r1, r3
 13791 0ce4 3F4A     		ldr	r2, .L556+8
 13792 0ce6 0B46     		mov	r3, r1
 13793 0ce8 9B00     		lsls	r3, r3, #2
 13794 0cea 0B44     		add	r3, r3, r1
 13795 0cec 1344     		add	r3, r3, r2
 13796 0cee 03F20223 		addw	r3, r3, #514
 13797 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13798 0cf4 1A46     		mov	r2, r3
 13799 0cf6 1346     		mov	r3, r2
 13800 0cf8 5B00     		lsls	r3, r3, #1
 13801 0cfa 1344     		add	r3, r3, r2
 13802 0cfc 5B00     		lsls	r3, r3, #1
 13803 0cfe 5A1C     		adds	r2, r3, #1
 13804 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13805 0d04 3849     		ldr	r1, .L556+12
 13806 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13807 0d08 1846     		mov	r0, r3
 13808 0d0a 3649     		ldr	r1, .L556+8
 13809 0d0c 0346     		mov	r3, r0
 13810 0d0e 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 309


 13811 0d10 0344     		add	r3, r3, r0
 13812 0d12 0B44     		add	r3, r3, r1
 13813 0d14 03F20323 		addw	r3, r3, #515
 13814 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13815 0d1a 1946     		mov	r1, r3
 13816 0d1c 0B46     		mov	r3, r1
 13817 0d1e 5B00     		lsls	r3, r3, #1
 13818 0d20 0B44     		add	r3, r3, r1
 13819 0d22 5B00     		lsls	r3, r3, #1
 13820 0d24 1A44     		add	r2, r2, r3
 13821 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13822 0d2a 2F49     		ldr	r1, .L556+12
 13823 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13824 0d2e 1846     		mov	r0, r3
 13825 0d30 2C49     		ldr	r1, .L556+8
 13826 0d32 0346     		mov	r3, r0
 13827 0d34 9B00     		lsls	r3, r3, #2
 13828 0d36 0344     		add	r3, r3, r0
 13829 0d38 0B44     		add	r3, r3, r1
 13830 0d3a 03F50173 		add	r3, r3, #516
 13831 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13832 0d40 1946     		mov	r1, r3
 13833 0d42 0B46     		mov	r3, r1
 13834 0d44 5B00     		lsls	r3, r3, #1
 13835 0d46 0B44     		add	r3, r3, r1
 13836 0d48 5B00     		lsls	r3, r3, #1
 13837 0d4a 1A44     		add	r2, r2, r3
 13838 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13839 0d50 2549     		ldr	r1, .L556+12
 13840 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13841 0d54 1846     		mov	r0, r3
 13842 0d56 2349     		ldr	r1, .L556+8
 13843 0d58 0346     		mov	r3, r0
 13844 0d5a 9B00     		lsls	r3, r3, #2
 13845 0d5c 0344     		add	r3, r3, r0
 13846 0d5e 0B44     		add	r3, r3, r1
 13847 0d60 03F20523 		addw	r3, r3, #517
 13848 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13849 0d66 1B01     		lsls	r3, r3, #4
 13850 0d68 1A44     		add	r2, r2, r3
 13851 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13852 0d6e 1E49     		ldr	r1, .L556+12
 13853 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13854 0d72 1846     		mov	r0, r3
 13855 0d74 1B49     		ldr	r1, .L556+8
 13856 0d76 0346     		mov	r3, r0
 13857 0d78 9B00     		lsls	r3, r3, #2
 13858 0d7a 0344     		add	r3, r3, r0
 13859 0d7c 0B44     		add	r3, r3, r1
 13860 0d7e 03F20623 		addw	r3, r3, #518
 13861 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13862 0d84 5B00     		lsls	r3, r3, #1
 13863 0d86 1344     		add	r3, r3, r2
 13864 0d88 0133     		adds	r3, r3, #1
 13865 0d8a 194A     		ldr	r2, .L556+20
 13866 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1870:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 310


 13867              		.loc 1 1870 0 discriminator 3
 13868 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 13869 0d94 144A     		ldr	r2, .L556+12
 13870 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13871 0d98 1A46     		mov	r2, r3
 13872 0d9a 154B     		ldr	r3, .L556+20
 13873 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13874 0da0 124B     		ldr	r3, .L556+16
 13875 0da2 1B68     		ldr	r3, [r3]
 13876 0da4 1344     		add	r3, r3, r2
 13877 0da6 114A     		ldr	r2, .L556+16
 13878 0da8 1360     		str	r3, [r2]
1867:..\src/command_processing.c ****                 {
 13879              		.loc 1 1867 0 discriminator 3
 13880 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13881 0dae 0133     		adds	r3, r3, #1
 13882 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13883              	.L546:
1867:..\src/command_processing.c ****                 {
 13884              		.loc 1 1867 0 is_stmt 0 discriminator 1
 13885 0db4 094B     		ldr	r3, .L556
 13886 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13887 0db8 9BB2     		uxth	r3, r3
 13888 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13889 0dbe 9A42     		cmp	r2, r3
 13890 0dc0 86D3     		bcc	.L547
1872:..\src/command_processing.c ****             
 13891              		.loc 1 1872 0 is_stmt 1
 13892 0dc2 0A4B     		ldr	r3, .L556+16
 13893 0dc4 1B68     		ldr	r3, [r3]
 13894 0dc6 0133     		adds	r3, r3, #1
 13895 0dc8 084A     		ldr	r2, .L556+16
 13896 0dca 1360     		str	r3, [r2]
 13897              		.loc 1 1876 0
 13898 0dcc 00E0     		b	.L541
 13899              	.L549:
1846:..\src/command_processing.c ****             
 13900              		.loc 1 1846 0
 13901 0dce 00BF     		nop
 13902              	.L541:
1877:..\src/command_processing.c ****     }
1878:..\src/command_processing.c **** }
 13903              		.loc 1 1878 0 discriminator 1
 13904 0dd0 00BF     		nop
 13905 0dd2 07F5D567 		add	r7, r7, #1704
 13906              		.cfi_def_cfa_offset 16
 13907 0dd6 BD46     		mov	sp, r7
 13908              		.cfi_def_cfa_register 13
 13909              		@ sp needed
 13910 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13911              	.L557:
 13912 0dda 00BF     		.align	2
 13913              	.L556:
 13914 0ddc 00000000 		.word	N_IMU_Connected
 13915 0de0 00000000 		.word	g_rx
 13916 0de4 00000000 		.word	g_mem
 13917 0de8 00000000 		.word	IMU_connected
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 311


 13918 0dec 00000000 		.word	imus_data_size
 13919 0df0 00000000 		.word	single_imu_size
 13920              		.cfi_endproc
 13921              	.LFE70:
 13922              		.size	get_IMU_param_list, .-get_IMU_param_list
 13923              		.section	.text.setZeros,"ax",%progbits
 13924              		.align	2
 13925              		.global	setZeros
 13926              		.thumb
 13927              		.thumb_func
 13928              		.type	setZeros, %function
 13929              	setZeros:
 13930              	.LFB71:
1879:..\src/command_processing.c **** 
1880:..\src/command_processing.c **** //==============================================================================
1881:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1882:..\src/command_processing.c **** //==============================================================================
1883:..\src/command_processing.c **** 
1884:..\src/command_processing.c **** void setZeros()
1885:..\src/command_processing.c **** {
 13931              		.loc 1 1885 0
 13932              		.cfi_startproc
 13933              		@ args = 0, pretend = 0, frame = 8
 13934              		@ frame_needed = 1, uses_anonymous_args = 0
 13935 0000 B0B5     		push	{r4, r5, r7, lr}
 13936              		.cfi_def_cfa_offset 16
 13937              		.cfi_offset 4, -16
 13938              		.cfi_offset 5, -12
 13939              		.cfi_offset 7, -8
 13940              		.cfi_offset 14, -4
 13941 0002 82B0     		sub	sp, sp, #8
 13942              		.cfi_def_cfa_offset 24
 13943 0004 00AF     		add	r7, sp, #0
 13944              		.cfi_def_cfa_register 7
1886:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1887:..\src/command_processing.c ****     
1888:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13945              		.loc 1 1888 0
 13946 0006 0023     		movs	r3, #0
 13947 0008 BB71     		strb	r3, [r7, #6]
 13948 000a 2FE0     		b	.L559
 13949              	.L562:
1889:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13950              		.loc 1 1889 0
 13951 000c 0023     		movs	r3, #0
 13952 000e FB71     		strb	r3, [r7, #7]
 13953 0010 22E0     		b	.L560
 13954              	.L561:
1890:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = (int32)(data_encoder_raw[j][i]);
 13955              		.loc 1 1890 0 discriminator 3
 13956 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13957 0014 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 13958 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 13959 0018 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 13960 001a 194D     		ldr	r5, .L563
 13961 001c 0B46     		mov	r3, r1
 13962 001e 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 312


 13963 0020 0B44     		add	r3, r3, r1
 13964 0022 2344     		add	r3, r3, r4
 13965 0024 55F82330 		ldr	r3, [r5, r3, lsl #2]
 13966 0028 1C46     		mov	r4, r3
 13967 002a 1649     		ldr	r1, .L563+4
 13968 002c 1346     		mov	r3, r2
 13969 002e 5B00     		lsls	r3, r3, #1
 13970 0030 1344     		add	r3, r3, r2
 13971 0032 9B00     		lsls	r3, r3, #2
 13972 0034 0344     		add	r3, r3, r0
 13973 0036 6633     		adds	r3, r3, #102
 13974 0038 41F82340 		str	r4, [r1, r3, lsl #2]
1891:..\src/command_processing.c ****             g_meas[j].rot[i] = (int8)0;
 13975              		.loc 1 1891 0 discriminator 3
 13976 003c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13977 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13978 0040 1149     		ldr	r1, .L563+8
 13979 0042 3420     		movs	r0, #52
 13980 0044 00FB02F2 		mul	r2, r0, r2
 13981 0048 0A44     		add	r2, r2, r1
 13982 004a 1344     		add	r3, r3, r2
 13983 004c 1833     		adds	r3, r3, #24
 13984 004e 0022     		movs	r2, #0
 13985 0050 1A70     		strb	r2, [r3]
1889:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13986              		.loc 1 1889 0 discriminator 3
 13987 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13988 0054 0133     		adds	r3, r3, #1
 13989 0056 FB71     		strb	r3, [r7, #7]
 13990              	.L560:
1889:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13991              		.loc 1 1889 0 is_stmt 0 discriminator 1
 13992 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13993 005a 022B     		cmp	r3, #2
 13994 005c D9D9     		bls	.L561
1892:..\src/command_processing.c ****         }
1893:..\src/command_processing.c ****         reset_last_value_flag[j] = 1;
 13995              		.loc 1 1893 0 is_stmt 1 discriminator 2
 13996 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13997 0060 0A4A     		ldr	r2, .L563+12
 13998 0062 0121     		movs	r1, #1
 13999 0064 D154     		strb	r1, [r2, r3]
1888:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 14000              		.loc 1 1888 0 discriminator 2
 14001 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 14002 0068 0133     		adds	r3, r3, #1
 14003 006a BB71     		strb	r3, [r7, #6]
 14004              	.L559:
1888:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 14005              		.loc 1 1888 0 is_stmt 0 discriminator 1
 14006 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 14007 006e 012B     		cmp	r3, #1
 14008 0070 CCD9     		bls	.L562
1894:..\src/command_processing.c ****     }
1895:..\src/command_processing.c **** 
1896:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 14009              		.loc 1 1896 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 313


 14010 0072 0120     		movs	r0, #1
 14011 0074 FFF7FEFF 		bl	sendAcknowledgment
1897:..\src/command_processing.c **** }
 14012              		.loc 1 1897 0
 14013 0078 00BF     		nop
 14014 007a 0837     		adds	r7, r7, #8
 14015              		.cfi_def_cfa_offset 16
 14016 007c BD46     		mov	sp, r7
 14017              		.cfi_def_cfa_register 13
 14018              		@ sp needed
 14019 007e B0BD     		pop	{r4, r5, r7, pc}
 14020              	.L564:
 14021              		.align	2
 14022              	.L563:
 14023 0080 00000000 		.word	data_encoder_raw
 14024 0084 00000000 		.word	g_mem
 14025 0088 00000000 		.word	g_meas
 14026 008c 00000000 		.word	reset_last_value_flag
 14027              		.cfi_endproc
 14028              	.LFE71:
 14029              		.size	setZeros, .-setZeros
 14030              		.section	.rodata
 14031              		.align	2
 14032              	.LC152:
 14033 1150 0D0A00   		.ascii	"\015\012\000"
 14034 1153 00       		.align	2
 14035              	.LC153:
 14036 1154 4669726D 		.ascii	"Firmware version: \000"
 14036      77617265 
 14036      20766572 
 14036      73696F6E 
 14036      3A2000
 14037 1167 00       		.align	2
 14038              	.LC154:
 14039 1168 4149525F 		.ascii	"AIR_CHAMBERS_and_VIBROTACTILE_FB\000"
 14039      4348414D 
 14039      42455253 
 14039      5F616E64 
 14039      5F564942 
 14040 1189 000000   		.align	2
 14041              	.LC155:
 14042 118c 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 14042      0A00
 14043 1192 0000     		.align	2
 14044              	.LC156:
 14045 1194 44455649 		.ascii	"DEVICE INFO\015\012\000"
 14045      43452049 
 14045      4E464F0D 
 14045      0A00
 14046 11a2 0000     		.align	2
 14047              	.LC157:
 14048 11a4 49443A20 		.ascii	"ID: %d\015\012\000"
 14048      25640D0A 
 14048      00
 14049 11ad 000000   		.align	2
 14050              	.LC158:
 14051 11b0 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 314


 14051      63653A20 
 14051      534F4654 
 14051      48414E44 
 14051      2050524F 
 14052 11c7 00       		.align	2
 14053              	.LC159:
 14054 11c8 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 14054      63653A20 
 14054      47454E45 
 14054      52494320 
 14054      32204D4F 
 14055 11e3 00       		.align	2
 14056              	.LC160:
 14057 11e4 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 14057      63653A20 
 14057      41495220 
 14057      4348414D 
 14057      42455253 
 14058 120b 00       		.align	2
 14059              	.LC161:
 14060 120c 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 14060      63653A20 
 14060      4F54544F 
 14060      424F434B 
 14060      20367620 
 14061 1236 0000     		.align	2
 14062              	.LC162:
 14063 1238 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 14063      63653A20 
 14063      534F4654 
 14063      48414E44 
 14063      2032204D 
 14064              		.align	2
 14065              	.LC163:
 14066 1254 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 14066      20736964 
 14066      653A2052 
 14066      49474854 
 14066      0D0A00
 14067 1267 00       		.align	2
 14068              	.LC164:
 14069 1268 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 14069      20736964 
 14069      653A204C 
 14069      4546540D 
 14069      0A00
 14070 127a 0000     		.align	2
 14071              	.LC165:
 14072 127c 55736572 		.ascii	"User: MARIA\015\012\000"
 14072      3A204D41 
 14072      5249410D 
 14072      0A00
 14073 128a 0000     		.align	2
 14074              	.LC166:
 14075 128c 55736572 		.ascii	"User: R01\015\012\000"
 14075      3A205230 
 14075      310D0A00 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 315


 14076              		.align	2
 14077              	.LC167:
 14078 1298 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 14078      3A204745 
 14078      4E455249 
 14078      43205553 
 14078      45520D0A 
 14079 12ad 000000   		.align	2
 14080              	.LC168:
 14081 12b0 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 14081      52202564 
 14081      20494E46 
 14081      4F0D0A00 
 14082              		.align	2
 14083              	.LC169:
 14084 12c0 4D6F746F 		.ascii	"Motor reference\000"
 14084      72207265 
 14084      66657265 
 14084      6E636500 
 14085              		.align	2
 14086              	.LC170:
 14087 12d0 202D2043 		.ascii	" - Currents: \000"
 14087      75727265 
 14087      6E74733A 
 14087      2000
 14088 12de 0000     		.align	2
 14089              	.LC171:
 14090 12e0 202D2050 		.ascii	" - Pwm: \000"
 14090      776D3A20 
 14090      00
 14091 12e9 000000   		.align	2
 14092              	.LC172:
 14093 12ec 202D2050 		.ascii	" - Position: \000"
 14093      6F736974 
 14093      696F6E3A 
 14093      2000
 14094 12fa 0000     		.align	2
 14095              	.LC173:
 14096 12fc 25642000 		.ascii	"%d \000"
 14097              		.align	2
 14098              	.LC174:
 14099 1300 4D6F746F 		.ascii	"Motor enabled: \000"
 14099      7220656E 
 14099      61626C65 
 14099      643A2000 
 14100              		.align	2
 14101              	.LC175:
 14102 1310 5945530D 		.ascii	"YES\015\012\000"
 14102      0A00
 14103 1316 0000     		.align	2
 14104              	.LC176:
 14105 1318 4E4F0D0A 		.ascii	"NO\015\012\000"
 14105      00
 14106 131d 000000   		.align	2
 14107              	.LC177:
 14108 1320 50574D20 		.ascii	"PWM rescaling activation: \000"
 14108      72657363 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 316


 14108      616C696E 
 14108      67206163 
 14108      74697661 
 14109 133b 00       		.align	2
 14110              	.LC178:
 14111 133c 5945530A 		.ascii	"YES\012\000"
 14111      00
 14112 1341 000000   		.align	2
 14113              	.LC179:
 14114 1344 4E4F0A00 		.ascii	"NO\012\000"
 14115              		.align	2
 14116              	.LC180:
 14117 1348 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 14117      4C696D69 
 14117      743A2025 
 14117      640D0A00 
 14118              		.align	2
 14119              	.LC181:
 14120 1358 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 14120      41535552 
 14120      454D454E 
 14120      54532049 
 14120      4E464F0D 
 14121 136e 0000     		.align	2
 14122              	.LC182:
 14123 1370 53656E73 		.ascii	"Sensor value: \000"
 14123      6F722076 
 14123      616C7565 
 14123      3A2000
 14124 137f 00       		.align	2
 14125              	.LC183:
 14126 1380 256400   		.ascii	"%d\000"
 14127 1383 00       		.align	2
 14128              	.LC184:
 14129 1384 2C2000   		.ascii	", \000"
 14130 1387 00       		.align	2
 14131              	.LC185:
 14132 1388 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 14132      7469636B 
 14132      206D6561 
 14132      73757265 
 14132      6D656E74 
 14133 13a6 0000     		.align	2
 14134              	.LC186:
 14135 13a8 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 14135      65727920 
 14135      25642056 
 14135      6F6C7461 
 14135      67652028 
 14136 13c5 000000   		.align	2
 14137              	.LC187:
 14138 13c8 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 14138      20636861 
 14138      72676520 
 14138      706F7765 
 14138      72207465 
 14139 13ef 00       		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 317


 14140              	.LC188:
 14141 13f0 43757272 		.ascii	"Current %d (mA): %ld\000"
 14141      656E7420 
 14141      25642028 
 14141      6D41293A 
 14141      20256C64 
 14142 1405 000000   		.align	2
 14143              	.LC189:
 14144 1408 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 14144      20477261 
 14144      73702048 
 14144      6F6C6420 
 14144      43757272 
 14145 142d 000000   		.align	2
 14146              	.LC190:
 14147 1430 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 14147      544F5220 
 14147      25642043 
 14147      4F4E4649 
 14147      47555241 
 14148 144b 00       		.align	2
 14149              	.LC191:
 14150 144c 50494420 		.ascii	"PID Controller: \000"
 14150      436F6E74 
 14150      726F6C6C 
 14150      65723A20 
 14150      00
 14151              		.global	__aeabi_i2d
 14152              		.global	__aeabi_ddiv
 14153 145d 000000   		.align	2
 14154              	.LC192:
 14155 1460 50202D3E 		.ascii	"P -> %f  \000"
 14155      20256620 
 14155      2000
 14156 146a 0000     		.align	2
 14157              	.LC193:
 14158 146c 49202D3E 		.ascii	"I -> %f  \000"
 14158      20256620 
 14158      2000
 14159 1476 0000     		.align	2
 14160              	.LC194:
 14161 1478 44202D3E 		.ascii	"D -> %f\015\012\000"
 14161      2025660D 
 14161      0A00
 14162 1482 0000     		.align	2
 14163              	.LC195:
 14164 1484 43757272 		.ascii	"Current PID Controller: \000"
 14164      656E7420 
 14164      50494420 
 14164      436F6E74 
 14164      726F6C6C 
 14165 149d 000000   		.align	2
 14166              	.LC196:
 14167 14a0 53746172 		.ascii	"Startup activation: YES\015\012\000"
 14167      74757020 
 14167      61637469 
 14167      76617469 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 318


 14167      6F6E3A20 
 14168 14ba 0000     		.align	2
 14169              	.LC197:
 14170 14bc 53746172 		.ascii	"Startup activation: NO\015\012\000"
 14170      74757020 
 14170      61637469 
 14170      76617469 
 14170      6F6E3A20 
 14171 14d5 000000   		.align	2
 14172              	.LC198:
 14173 14d8 496E7075 		.ascii	"Input mode: USB\015\012\000"
 14173      74206D6F 
 14173      64653A20 
 14173      5553420D 
 14173      0A00
 14174 14ea 0000     		.align	2
 14175              	.LC199:
 14176 14ec 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 14176      74206D6F 
 14176      64653A20 
 14176      48616E64 
 14176      6C650D0A 
 14177 1501 000000   		.align	2
 14178              	.LC200:
 14179 1504 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 14179      74206D6F 
 14179      64653A20 
 14179      454D4720 
 14179      70726F70 
 14180 1523 00       		.align	2
 14181              	.LC201:
 14182 1524 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 14182      74206D6F 
 14182      64653A20 
 14182      454D4720 
 14182      696E7465 
 14183 153f 00       		.align	2
 14184              	.LC202:
 14185 1540 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 14185      74206D6F 
 14185      64653A20 
 14185      454D4720 
 14185      46434653 
 14186 1557 00       		.align	2
 14187              	.LC203:
 14188 1558 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 14188      74206D6F 
 14188      64653A20 
 14188      454D4720 
 14188      46434653 
 14189 1573 00       		.align	2
 14190              	.LC204:
 14191 1574 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 14191      74206D6F 
 14191      64653A20 
 14191      4A6F7973 
 14191      7469636B 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 319


 14192 158b 00       		.align	2
 14193              	.LC205:
 14194 158c 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 14194      74206D6F 
 14194      64653A20 
 14194      454D4720 
 14194      70726F70 
 14195 15ba 00       		.ascii	"\000"
 14196 15bb 00       		.align	2
 14197              	.LC206:
 14198 15bc 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 14198      726F6C20 
 14198      6D6F6465 
 14198      3A20506F 
 14198      73697469 
 14199 15d5 000000   		.align	2
 14200              	.LC207:
 14201 15d8 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 14201      726F6C20 
 14201      6D6F6465 
 14201      3A205057 
 14201      4D0D0A00 
 14202              		.align	2
 14203              	.LC208:
 14204 15ec 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 14204      726F6C20 
 14204      6D6F6465 
 14204      3A204375 
 14204      7272656E 
 14205              		.align	2
 14206              	.LC209:
 14207 1604 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 14207      726F6C20 
 14207      6D6F6465 
 14207      3A20506F 
 14207      73697469 
 14208 1629 000000   		.align	2
 14209              	.LC210:
 14210 162c 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 14210      6C757465 
 14210      20656E63 
 14210      6F646572 
 14210      20706F73 
 14211 164d 000000   		.align	2
 14212              	.LC211:
 14213 1650 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 14213      6C757465 
 14213      20656E63 
 14213      6F646572 
 14213      20706F73 
 14214              		.align	2
 14215              	.LC212:
 14216 1670 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 14216      722D4861 
 14216      6E646C65 
 14216      20526174 
 14216      696F3A20 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 320


 14217 1689 000000   		.align	2
 14218              	.LC213:
 14219 168c 53656E73 		.ascii	"Sensor resolution: \000"
 14219      6F722072 
 14219      65736F6C 
 14219      7574696F 
 14219      6E3A2000 
 14220              		.align	2
 14221              	.LC214:
 14222 16a0 4D656173 		.ascii	"Measurement Offset: \000"
 14222      7572656D 
 14222      656E7420 
 14222      4F666673 
 14222      65743A20 
 14223 16b5 000000   		.align	2
 14224              	.LC215:
 14225 16b8 256C6400 		.ascii	"%ld\000"
 14226              		.align	2
 14227              	.LC216:
 14228 16bc 4D656173 		.ascii	"Measurement Multiplier: \000"
 14228      7572656D 
 14228      656E7420 
 14228      4D756C74 
 14228      69706C69 
 14229              		.global	__aeabi_f2d
 14230 16d5 000000   		.align	2
 14231              	.LC217:
 14232 16d8 256600   		.ascii	"%f\000"
 14233 16db 00       		.align	2
 14234              	.LC218:
 14235 16dc 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 14235      656E7420 
 14235      6C6F6F6B 
 14235      75702074 
 14235      61626C65 
 14236 170a 00       		.ascii	"\000"
 14237 170b 00       		.align	2
 14238              	.LC219:
 14239 170c 506F7369 		.ascii	"Position limit active: %d\000"
 14239      74696F6E 
 14239      206C696D 
 14239      69742061 
 14239      63746976 
 14240 1726 0000     		.align	2
 14241              	.LC220:
 14242 1728 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 14242      74696F6E 
 14242      206C696D 
 14242      6974206D 
 14242      6F746F72 
 14243 174b 00       		.align	2
 14244              	.LC221:
 14245 174c 73757020 		.ascii	"sup -> %ld\015\012\000"
 14245      2D3E2025 
 14245      6C640D0A 
 14245      00
 14246 1759 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 321


 14247              	.LC222:
 14248 175c 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 14248      73746570 
 14248      20706F73 
 14248      20616E64 
 14248      206E6567 
 14249              		.align	2
 14250              	.LC223:
 14251 1778 43757272 		.ascii	"Current limit: %d\015\012\000"
 14251      656E7420 
 14251      6C696D69 
 14251      743A2025 
 14251      640D0A00 
 14252              		.align	2
 14253              	.LC224:
 14254 178c 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 14254      434F4E46 
 14254      49475552 
 14254      4154494F 
 14254      4E0D0A00 
 14255              		.align	2
 14256              	.LC225:
 14257 17a0 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 14257      74687265 
 14257      73686F6C 
 14257      6473205B 
 14257      30202D20 
 14258 17c2 0000     		.align	2
 14259              	.LC226:
 14260 17c4 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 14260      6D617820 
 14260      76616C75 
 14260      6573205B 
 14260      30202D20 
 14261              		.align	2
 14262              	.LC227:
 14263 17e8 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 14263      696E7665 
 14263      7273696F 
 14263      6E3A2059 
 14263      45530D0A 
 14264 17fd 000000   		.align	2
 14265              	.LC228:
 14266 1800 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 14266      696E7665 
 14266      7273696F 
 14266      6E3A204E 
 14266      4F0D0A00 
 14267              		.align	2
 14268              	.LC229:
 14269 1814 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 14269      62726174 
 14269      696F6E20 
 14269      656E6162 
 14269      6C65643A 
 14270 182f 00       		.align	2
 14271              	.LC230:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 322


 14272 1830 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 14272      62726174 
 14272      696F6E20 
 14272      656E6162 
 14272      6C65643A 
 14273 184a 0000     		.align	2
 14274              	.LC231:
 14275 184c 454D4720 		.ascii	"EMG max speed: %d %d\000"
 14275      6D617820 
 14275      73706565 
 14275      643A2025 
 14275      64202564 
 14276 1861 000000   		.align	2
 14277              	.LC232:
 14278 1864 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 14278      74696F6E 
 14278      616C2041 
 14278      44432073 
 14278      656E736F 
 14279              		.align	2
 14280              	.LC233:
 14281 1884 41444320 		.ascii	"ADC %d -> %d\000"
 14281      2564202D 
 14281      3E202564 
 14281      00
 14282 1891 000000   		.align	2
 14283              	.LC234:
 14284 1894 454D4720 		.ascii	"EMG input %d -> %d\000"
 14284      696E7075 
 14284      74202564 
 14284      202D3E20 
 14284      256400
 14285 18a7 00       		.align	2
 14286              	.LC235:
 14287 18a8 52657374 		.ascii	"Rest time delay (ms): %d\000"
 14287      2074696D 
 14287      65206465 
 14287      6C617920 
 14287      286D7329 
 14288 18c1 000000   		.align	2
 14289              	.LC236:
 14290 18c4 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 14290      2076656C 
 14290      6F636974 
 14290      7920636C 
 14290      6F737572 
 14291 18ea 0000     		.align	2
 14292              	.LC237:
 14293 18ec 52657374 		.ascii	"Rest position: %d\000"
 14293      20706F73 
 14293      6974696F 
 14293      6E3A2025 
 14293      6400
 14294 18fe 0000     		.align	2
 14295              	.LC238:
 14296 1900 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 14296      436F6E6E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 323


 14296      65637465 
 14296      643A2025 
 14296      640D0A00 
 14297              		.align	2
 14298              	.LC239:
 14299 1914 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 14299      20434F4E 
 14299      46494755 
 14299      52415449 
 14299      4F4E0D0A 
 14300 1929 000000   		.align	2
 14301              	.LC240:
 14302 192c 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 14302      2564200D 
 14302      0A094944 
 14302      3A202564 
 14302      0D0A00
 14303 193f 00       		.align	2
 14304              	.LC241:
 14305 1940 09416363 		.ascii	"\011Accelerometers: \000"
 14305      656C6572 
 14305      6F6D6574 
 14305      6572733A 
 14305      2000
 14306 1952 0000     		.align	2
 14307              	.LC242:
 14308 1954 09477972 		.ascii	"\011Gyroscopes: \000"
 14308      6F73636F 
 14308      7065733A 
 14308      2000
 14309 1962 0000     		.align	2
 14310              	.LC243:
 14311 1964 094D6167 		.ascii	"\011Magnetometers: \000"
 14311      6E65746F 
 14311      6D657465 
 14311      72733A20 
 14311      00
 14312 1975 000000   		.align	2
 14313              	.LC244:
 14314 1978 09517561 		.ascii	"\011Quaternion: \000"
 14314      7465726E 
 14314      696F6E3A 
 14314      2000
 14315 1986 0000     		.align	2
 14316              	.LC245:
 14317 1988 0954656D 		.ascii	"\011Temperature: \000"
 14317      70657261 
 14317      74757265 
 14317      3A2000
 14318 1997 00       		.align	2
 14319              	.LC246:
 14320 1998 4D617374 		.ascii	"Master Mode active: YES\015\012\000"
 14320      6572204D 
 14320      6F646520 
 14320      61637469 
 14320      76653A20 
 14321 19b2 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 324


 14322              	.LC247:
 14323 19b4 4D617374 		.ascii	"Master Mode active: NO\015\012\000"
 14323      6572204D 
 14323      6F646520 
 14323      61637469 
 14323      76653A20 
 14324 19cd 000000   		.align	2
 14325              	.LC248:
 14326 19d0 536C6176 		.ascii	"Slave ID: %d\015\012\000"
 14326      65204944 
 14326      3A202564 
 14326      0D0A00
 14327 19df 00       		.align	2
 14328              	.LC249:
 14329 19e0 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 14329      20465720 
 14329      6379636C 
 14329      65207469 
 14329      6D653A20 
 14330              		.align	2
 14331              	.LC250:
 14332 19fc 0D0A0000 		.ascii	"\015\012\000\000"
 14333              		.section	.text.prepare_generic_info,"ax",%progbits
 14334              		.align	2
 14335              		.global	prepare_generic_info
 14336              		.thumb
 14337              		.thumb_func
 14338              		.type	prepare_generic_info, %function
 14339              	prepare_generic_info:
 14340              	.LFB72:
1898:..\src/command_processing.c **** 
1899:..\src/command_processing.c **** //==============================================================================
1900:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1901:..\src/command_processing.c **** //==============================================================================
1902:..\src/command_processing.c **** 
1903:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1904:..\src/command_processing.c **** {
 14341              		.loc 1 1904 0
 14342              		.cfi_startproc
 14343              		@ args = 0, pretend = 0, frame = 152
 14344              		@ frame_needed = 1, uses_anonymous_args = 0
 14345 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 14346              		.cfi_def_cfa_offset 36
 14347              		.cfi_offset 4, -36
 14348              		.cfi_offset 5, -32
 14349              		.cfi_offset 6, -28
 14350              		.cfi_offset 7, -24
 14351              		.cfi_offset 8, -20
 14352              		.cfi_offset 9, -16
 14353              		.cfi_offset 10, -12
 14354              		.cfi_offset 11, -8
 14355              		.cfi_offset 14, -4
 14356 0004 B1B0     		sub	sp, sp, #196
 14357              		.cfi_def_cfa_offset 232
 14358 0006 0AAF     		add	r7, sp, #40
 14359              		.cfi_def_cfa 7, 192
 14360 0008 7861     		str	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 325


1905:..\src/command_processing.c ****     int i;
1906:..\src/command_processing.c **** 
1907:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 14361              		.loc 1 1907 0
 14362 000a C64B     		ldr	r3, .L668
 14363 000c C7F88C30 		str	r3, [r7, #140]
1908:..\src/command_processing.c ****     
1909:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 14364              		.loc 1 1909 0
 14365 0010 C44B     		ldr	r3, .L668
 14366 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14367 0016 FA2B     		cmp	r3, #250
 14368 0018 01F01986 		beq	.L665
 14369              	.LBB24:
1910:..\src/command_processing.c ****         char str[100];
1911:..\src/command_processing.c ****         strcpy(info_string, "");
 14370              		.loc 1 1911 0
 14371 001c 7B69     		ldr	r3, [r7, #20]
 14372 001e 0022     		movs	r2, #0
 14373 0020 1A70     		strb	r2, [r3]
1912:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14374              		.loc 1 1912 0
 14375 0022 7869     		ldr	r0, [r7, #20]
 14376 0024 FFF7FEFF 		bl	strlen
 14377 0028 0346     		mov	r3, r0
 14378 002a 1A46     		mov	r2, r3
 14379 002c 7B69     		ldr	r3, [r7, #20]
 14380 002e 1344     		add	r3, r3, r2
 14381 0030 BD4A     		ldr	r2, .L668+4
 14382 0032 1188     		ldrh	r1, [r2]	@ unaligned
 14383 0034 9278     		ldrb	r2, [r2, #2]
 14384 0036 1980     		strh	r1, [r3]	@ unaligned
 14385 0038 9A70     		strb	r2, [r3, #2]
1913:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 14386              		.loc 1 1913 0
 14387 003a 7869     		ldr	r0, [r7, #20]
 14388 003c FFF7FEFF 		bl	strlen
 14389 0040 0346     		mov	r3, r0
 14390 0042 1A46     		mov	r2, r3
 14391 0044 7B69     		ldr	r3, [r7, #20]
 14392 0046 1344     		add	r3, r3, r2
 14393 0048 B84A     		ldr	r2, .L668+8
 14394 004a 1D46     		mov	r5, r3
 14395 004c 1446     		mov	r4, r2
 14396 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14397 0050 2860     		str	r0, [r5]	@ unaligned
 14398 0052 6960     		str	r1, [r5, #4]	@ unaligned
 14399 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 14400 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 14401 0058 2388     		ldrh	r3, [r4]	@ unaligned
 14402 005a A278     		ldrb	r2, [r4, #2]
 14403 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 14404 005e 1346     		mov	r3, r2
 14405 0060 AB74     		strb	r3, [r5, #18]
1914:..\src/command_processing.c ****         strcat(info_string, VERSION);
 14406              		.loc 1 1914 0
 14407 0062 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 326


 14408 0064 FFF7FEFF 		bl	strlen
 14409 0068 0346     		mov	r3, r0
 14410 006a 1A46     		mov	r2, r3
 14411 006c 7B69     		ldr	r3, [r7, #20]
 14412 006e 1344     		add	r3, r3, r2
 14413 0070 AF4A     		ldr	r2, .L668+12
 14414 0072 1446     		mov	r4, r2
 14415 0074 9E46     		mov	lr, r3
 14416 0076 04F1200C 		add	ip, r4, #32
 14417              	.L567:
 14418 007a 7546     		mov	r5, lr
 14419 007c 2646     		mov	r6, r4
 14420 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14421 0080 2860     		str	r0, [r5]	@ unaligned
 14422 0082 6960     		str	r1, [r5, #4]	@ unaligned
 14423 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 14424 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 14425 0088 1034     		adds	r4, r4, #16
 14426 008a 0EF1100E 		add	lr, lr, #16
 14427 008e 6445     		cmp	r4, ip
 14428 0090 F3D1     		bne	.L567
 14429 0092 7346     		mov	r3, lr
 14430 0094 2246     		mov	r2, r4
 14431 0096 1278     		ldrb	r2, [r2]
 14432 0098 1A70     		strb	r2, [r3]
1915:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 14433              		.loc 1 1915 0
 14434 009a 7869     		ldr	r0, [r7, #20]
 14435 009c FFF7FEFF 		bl	strlen
 14436 00a0 0346     		mov	r3, r0
 14437 00a2 1A46     		mov	r2, r3
 14438 00a4 7B69     		ldr	r3, [r7, #20]
 14439 00a6 1344     		add	r3, r3, r2
 14440 00a8 A24A     		ldr	r2, .L668+16
 14441 00aa 1068     		ldr	r0, [r2]	@ unaligned
 14442 00ac 1860     		str	r0, [r3]	@ unaligned
 14443 00ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14444 00b0 9A80     		strh	r2, [r3, #4]	@ unaligned
1916:..\src/command_processing.c **** 
1917:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 14445              		.loc 1 1917 0
 14446 00b2 7869     		ldr	r0, [r7, #20]
 14447 00b4 FFF7FEFF 		bl	strlen
 14448 00b8 0346     		mov	r3, r0
 14449 00ba 1A46     		mov	r2, r3
 14450 00bc 7B69     		ldr	r3, [r7, #20]
 14451 00be 1344     		add	r3, r3, r2
 14452 00c0 9D4A     		ldr	r2, .L668+20
 14453 00c2 1C46     		mov	r4, r3
 14454 00c4 1346     		mov	r3, r2
 14455 00c6 07CB     		ldmia	r3!, {r0, r1, r2}
 14456 00c8 2060     		str	r0, [r4]	@ unaligned
 14457 00ca 6160     		str	r1, [r4, #4]	@ unaligned
 14458 00cc A260     		str	r2, [r4, #8]	@ unaligned
 14459 00ce 1B88     		ldrh	r3, [r3]	@ unaligned
 14460 00d0 A381     		strh	r3, [r4, #12]	@ unaligned
1918:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 327


 14461              		.loc 1 1918 0
 14462 00d2 D7F88C30 		ldr	r3, [r7, #140]
 14463 00d6 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14464 00da 1A46     		mov	r2, r3
 14465 00dc 07F11C03 		add	r3, r7, #28
 14466 00e0 9649     		ldr	r1, .L668+24
 14467 00e2 1846     		mov	r0, r3
 14468 00e4 FFF7FEFF 		bl	sprintf
1919:..\src/command_processing.c ****         strcat(info_string, str);
 14469              		.loc 1 1919 0
 14470 00e8 07F11C03 		add	r3, r7, #28
 14471 00ec 1946     		mov	r1, r3
 14472 00ee 7869     		ldr	r0, [r7, #20]
 14473 00f0 FFF7FEFF 		bl	strcat
1920:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 14474              		.loc 1 1920 0
 14475 00f4 D7F88C30 		ldr	r3, [r7, #140]
 14476 00f8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14477 00fc 042B     		cmp	r3, #4
 14478 00fe 00F29180 		bhi	.L666
 14479 0102 01A2     		adr	r2, .L570
 14480 0104 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14481              		.p2align 2
 14482              	.L570:
 14483 0108 1D010000 		.word	.L569+1
 14484 010c 4B010000 		.word	.L571+1
 14485 0110 7B010000 		.word	.L572+1
 14486 0114 BD010000 		.word	.L573+1
 14487 0118 FD010000 		.word	.L574+1
 14488              		.p2align 1
 14489              	.L569:
1921:..\src/command_processing.c ****             case SOFTHAND_PRO:
1922:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14490              		.loc 1 1922 0
 14491 011c 7869     		ldr	r0, [r7, #20]
 14492 011e FFF7FEFF 		bl	strlen
 14493 0122 0346     		mov	r3, r0
 14494 0124 1A46     		mov	r2, r3
 14495 0126 7B69     		ldr	r3, [r7, #20]
 14496 0128 1344     		add	r3, r3, r2
 14497 012a 854A     		ldr	r2, .L668+28
 14498 012c 1C46     		mov	r4, r3
 14499 012e 1546     		mov	r5, r2
 14500 0130 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14501 0132 2060     		str	r0, [r4]	@ unaligned
 14502 0134 6160     		str	r1, [r4, #4]	@ unaligned
 14503 0136 A260     		str	r2, [r4, #8]	@ unaligned
 14504 0138 E360     		str	r3, [r4, #12]	@ unaligned
 14505 013a 2868     		ldr	r0, [r5]	@ unaligned
 14506 013c 2061     		str	r0, [r4, #16]	@ unaligned
 14507 013e AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14508 0140 AA79     		ldrb	r2, [r5, #6]
 14509 0142 A382     		strh	r3, [r4, #20]	@ unaligned
 14510 0144 1346     		mov	r3, r2
 14511 0146 A375     		strb	r3, [r4, #22]
1923:..\src/command_processing.c ****                 break;
 14512              		.loc 1 1923 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 328


 14513 0148 6DE0     		b	.L575
 14514              	.L571:
1924:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1925:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14515              		.loc 1 1925 0
 14516 014a 7869     		ldr	r0, [r7, #20]
 14517 014c FFF7FEFF 		bl	strlen
 14518 0150 0346     		mov	r3, r0
 14519 0152 1A46     		mov	r2, r3
 14520 0154 7B69     		ldr	r3, [r7, #20]
 14521 0156 1344     		add	r3, r3, r2
 14522 0158 7A4A     		ldr	r2, .L668+32
 14523 015a 1D46     		mov	r5, r3
 14524 015c 1446     		mov	r4, r2
 14525 015e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14526 0160 2860     		str	r0, [r5]	@ unaligned
 14527 0162 6960     		str	r1, [r5, #4]	@ unaligned
 14528 0164 AA60     		str	r2, [r5, #8]	@ unaligned
 14529 0166 EB60     		str	r3, [r5, #12]	@ unaligned
 14530 0168 03CC     		ldmia	r4!, {r0, r1}
 14531 016a 2861     		str	r0, [r5, #16]	@ unaligned
 14532 016c 6961     		str	r1, [r5, #20]	@ unaligned
 14533 016e 2388     		ldrh	r3, [r4]	@ unaligned
 14534 0170 A278     		ldrb	r2, [r4, #2]
 14535 0172 2B83     		strh	r3, [r5, #24]	@ unaligned
 14536 0174 1346     		mov	r3, r2
 14537 0176 AB76     		strb	r3, [r5, #26]
1926:..\src/command_processing.c ****                 break;
 14538              		.loc 1 1926 0
 14539 0178 55E0     		b	.L575
 14540              	.L572:
1927:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1928:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14541              		.loc 1 1928 0
 14542 017a 7869     		ldr	r0, [r7, #20]
 14543 017c FFF7FEFF 		bl	strlen
 14544 0180 0346     		mov	r3, r0
 14545 0182 1A46     		mov	r2, r3
 14546 0184 7B69     		ldr	r3, [r7, #20]
 14547 0186 1344     		add	r3, r3, r2
 14548 0188 6F4A     		ldr	r2, .L668+36
 14549 018a 1446     		mov	r4, r2
 14550 018c 9E46     		mov	lr, r3
 14551 018e 04F1200C 		add	ip, r4, #32
 14552              	.L576:
 14553 0192 7546     		mov	r5, lr
 14554 0194 2646     		mov	r6, r4
 14555 0196 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14556 0198 2860     		str	r0, [r5]	@ unaligned
 14557 019a 6960     		str	r1, [r5, #4]	@ unaligned
 14558 019c AA60     		str	r2, [r5, #8]	@ unaligned
 14559 019e EB60     		str	r3, [r5, #12]	@ unaligned
 14560 01a0 1034     		adds	r4, r4, #16
 14561 01a2 0EF1100E 		add	lr, lr, #16
 14562 01a6 6445     		cmp	r4, ip
 14563 01a8 F3D1     		bne	.L576
 14564 01aa 7346     		mov	r3, lr
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 329


 14565 01ac 2246     		mov	r2, r4
 14566 01ae 1068     		ldr	r0, [r2]	@ unaligned
 14567 01b0 1860     		str	r0, [r3]	@ unaligned
 14568 01b2 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14569 01b4 9279     		ldrb	r2, [r2, #6]
 14570 01b6 9980     		strh	r1, [r3, #4]	@ unaligned
 14571 01b8 9A71     		strb	r2, [r3, #6]
1929:..\src/command_processing.c ****                 break;
 14572              		.loc 1 1929 0
 14573 01ba 34E0     		b	.L575
 14574              	.L573:
1930:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1931:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14575              		.loc 1 1931 0
 14576 01bc 7869     		ldr	r0, [r7, #20]
 14577 01be FFF7FEFF 		bl	strlen
 14578 01c2 0346     		mov	r3, r0
 14579 01c4 1A46     		mov	r2, r3
 14580 01c6 7B69     		ldr	r3, [r7, #20]
 14581 01c8 1344     		add	r3, r3, r2
 14582 01ca 604A     		ldr	r2, .L668+40
 14583 01cc 1446     		mov	r4, r2
 14584 01ce 9E46     		mov	lr, r3
 14585 01d0 04F1200C 		add	ip, r4, #32
 14586              	.L577:
 14587 01d4 7546     		mov	r5, lr
 14588 01d6 2646     		mov	r6, r4
 14589 01d8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14590 01da 2860     		str	r0, [r5]	@ unaligned
 14591 01dc 6960     		str	r1, [r5, #4]	@ unaligned
 14592 01de AA60     		str	r2, [r5, #8]	@ unaligned
 14593 01e0 EB60     		str	r3, [r5, #12]	@ unaligned
 14594 01e2 1034     		adds	r4, r4, #16
 14595 01e4 0EF1100E 		add	lr, lr, #16
 14596 01e8 6445     		cmp	r4, ip
 14597 01ea F3D1     		bne	.L577
 14598 01ec 7246     		mov	r2, lr
 14599 01ee 2346     		mov	r3, r4
 14600 01f0 03CB     		ldmia	r3!, {r0, r1}
 14601 01f2 1060     		str	r0, [r2]	@ unaligned
 14602 01f4 5160     		str	r1, [r2, #4]	@ unaligned
 14603 01f6 1B88     		ldrh	r3, [r3]	@ unaligned
 14604 01f8 1381     		strh	r3, [r2, #8]	@ unaligned
1932:..\src/command_processing.c ****                 break;
 14605              		.loc 1 1932 0
 14606 01fa 14E0     		b	.L575
 14607              	.L574:
1933:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1934:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14608              		.loc 1 1934 0
 14609 01fc 7869     		ldr	r0, [r7, #20]
 14610 01fe FFF7FEFF 		bl	strlen
 14611 0202 0346     		mov	r3, r0
 14612 0204 1A46     		mov	r2, r3
 14613 0206 7B69     		ldr	r3, [r7, #20]
 14614 0208 1344     		add	r3, r3, r2
 14615 020a 514A     		ldr	r2, .L668+44
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 330


 14616 020c 1D46     		mov	r5, r3
 14617 020e 1446     		mov	r4, r2
 14618 0210 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14619 0212 2860     		str	r0, [r5]	@ unaligned
 14620 0214 6960     		str	r1, [r5, #4]	@ unaligned
 14621 0216 AA60     		str	r2, [r5, #8]	@ unaligned
 14622 0218 EB60     		str	r3, [r5, #12]	@ unaligned
 14623 021a 07CC     		ldmia	r4!, {r0, r1, r2}
 14624 021c 2861     		str	r0, [r5, #16]	@ unaligned
 14625 021e 6961     		str	r1, [r5, #20]	@ unaligned
 14626 0220 AA61     		str	r2, [r5, #24]	@ unaligned
1935:..\src/command_processing.c ****                 break;
 14627              		.loc 1 1935 0
 14628 0222 00E0     		b	.L575
 14629              	.L666:
1936:..\src/command_processing.c ****             default:
1937:..\src/command_processing.c ****                 break;
 14630              		.loc 1 1937 0
 14631 0224 00BF     		nop
 14632              	.L575:
1938:..\src/command_processing.c ****         }
1939:..\src/command_processing.c ****         
1940:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14633              		.loc 1 1940 0
 14634 0226 D7F88C30 		ldr	r3, [r7, #140]
 14635 022a 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14636 022e 002B     		cmp	r3, #0
 14637 0230 02D0     		beq	.L579
 14638 0232 012B     		cmp	r3, #1
 14639 0234 15D0     		beq	.L580
 14640 0236 26E0     		b	.L578
 14641              	.L579:
1941:..\src/command_processing.c ****             case RIGHT_HAND:
1942:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14642              		.loc 1 1942 0
 14643 0238 7869     		ldr	r0, [r7, #20]
 14644 023a FFF7FEFF 		bl	strlen
 14645 023e 0346     		mov	r3, r0
 14646 0240 1A46     		mov	r2, r3
 14647 0242 7B69     		ldr	r3, [r7, #20]
 14648 0244 1344     		add	r3, r3, r2
 14649 0246 434A     		ldr	r2, .L668+48
 14650 0248 1D46     		mov	r5, r3
 14651 024a 1446     		mov	r4, r2
 14652 024c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14653 024e 2860     		str	r0, [r5]	@ unaligned
 14654 0250 6960     		str	r1, [r5, #4]	@ unaligned
 14655 0252 AA60     		str	r2, [r5, #8]	@ unaligned
 14656 0254 EB60     		str	r3, [r5, #12]	@ unaligned
 14657 0256 2388     		ldrh	r3, [r4]	@ unaligned
 14658 0258 A278     		ldrb	r2, [r4, #2]
 14659 025a 2B82     		strh	r3, [r5, #16]	@ unaligned
 14660 025c 1346     		mov	r3, r2
 14661 025e AB74     		strb	r3, [r5, #18]
1943:..\src/command_processing.c ****                 break;
 14662              		.loc 1 1943 0
 14663 0260 11E0     		b	.L578
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 331


 14664              	.L580:
1944:..\src/command_processing.c ****             case LEFT_HAND:
1945:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 14665              		.loc 1 1945 0
 14666 0262 7869     		ldr	r0, [r7, #20]
 14667 0264 FFF7FEFF 		bl	strlen
 14668 0268 0346     		mov	r3, r0
 14669 026a 1A46     		mov	r2, r3
 14670 026c 7B69     		ldr	r3, [r7, #20]
 14671 026e 1344     		add	r3, r3, r2
 14672 0270 394A     		ldr	r2, .L668+52
 14673 0272 1D46     		mov	r5, r3
 14674 0274 1446     		mov	r4, r2
 14675 0276 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14676 0278 2860     		str	r0, [r5]	@ unaligned
 14677 027a 6960     		str	r1, [r5, #4]	@ unaligned
 14678 027c AA60     		str	r2, [r5, #8]	@ unaligned
 14679 027e EB60     		str	r3, [r5, #12]	@ unaligned
 14680 0280 2388     		ldrh	r3, [r4]	@ unaligned
 14681 0282 2B82     		strh	r3, [r5, #16]	@ unaligned
1946:..\src/command_processing.c ****                 break;
 14682              		.loc 1 1946 0
 14683 0284 00BF     		nop
 14684              	.L578:
1947:..\src/command_processing.c ****         }
1948:..\src/command_processing.c **** 
1949:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14685              		.loc 1 1949 0
 14686 0286 D7F88C30 		ldr	r3, [r7, #140]
 14687 028a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14688 028e 012B     		cmp	r3, #1
 14689 0290 02D0     		beq	.L582
 14690 0292 022B     		cmp	r3, #2
 14691 0294 11D0     		beq	.L583
 14692 0296 1FE0     		b	.L664
 14693              	.L582:
1950:..\src/command_processing.c ****             case MARIA:
1951:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14694              		.loc 1 1951 0
 14695 0298 7869     		ldr	r0, [r7, #20]
 14696 029a FFF7FEFF 		bl	strlen
 14697 029e 0346     		mov	r3, r0
 14698 02a0 1A46     		mov	r2, r3
 14699 02a2 7B69     		ldr	r3, [r7, #20]
 14700 02a4 1344     		add	r3, r3, r2
 14701 02a6 2D4A     		ldr	r2, .L668+56
 14702 02a8 1C46     		mov	r4, r3
 14703 02aa 1346     		mov	r3, r2
 14704 02ac 07CB     		ldmia	r3!, {r0, r1, r2}
 14705 02ae 2060     		str	r0, [r4]	@ unaligned
 14706 02b0 6160     		str	r1, [r4, #4]	@ unaligned
 14707 02b2 A260     		str	r2, [r4, #8]	@ unaligned
 14708 02b4 1B88     		ldrh	r3, [r3]	@ unaligned
 14709 02b6 A381     		strh	r3, [r4, #12]	@ unaligned
1952:..\src/command_processing.c ****                 break;
 14710              		.loc 1 1952 0
 14711 02b8 22E0     		b	.L584
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 332


 14712              	.L583:
1953:..\src/command_processing.c ****             case R01:
1954:..\src/command_processing.c ****                 strcat(info_string, "User: R01\r\n");
 14713              		.loc 1 1954 0
 14714 02ba 7869     		ldr	r0, [r7, #20]
 14715 02bc FFF7FEFF 		bl	strlen
 14716 02c0 0346     		mov	r3, r0
 14717 02c2 1A46     		mov	r2, r3
 14718 02c4 7B69     		ldr	r3, [r7, #20]
 14719 02c6 1344     		add	r3, r3, r2
 14720 02c8 254A     		ldr	r2, .L668+60
 14721 02ca 1C46     		mov	r4, r3
 14722 02cc 1346     		mov	r3, r2
 14723 02ce 07CB     		ldmia	r3!, {r0, r1, r2}
 14724 02d0 2060     		str	r0, [r4]	@ unaligned
 14725 02d2 6160     		str	r1, [r4, #4]	@ unaligned
 14726 02d4 A260     		str	r2, [r4, #8]	@ unaligned
1955:..\src/command_processing.c ****                 break;
 14727              		.loc 1 1955 0
 14728 02d6 13E0     		b	.L584
 14729              	.L664:
1956:..\src/command_processing.c ****             default:
1957:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14730              		.loc 1 1957 0
 14731 02d8 7869     		ldr	r0, [r7, #20]
 14732 02da FFF7FEFF 		bl	strlen
 14733 02de 0346     		mov	r3, r0
 14734 02e0 1A46     		mov	r2, r3
 14735 02e2 7B69     		ldr	r3, [r7, #20]
 14736 02e4 1344     		add	r3, r3, r2
 14737 02e6 1F4A     		ldr	r2, .L668+64
 14738 02e8 1D46     		mov	r5, r3
 14739 02ea 1446     		mov	r4, r2
 14740 02ec 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14741 02ee 2860     		str	r0, [r5]	@ unaligned
 14742 02f0 6960     		str	r1, [r5, #4]	@ unaligned
 14743 02f2 AA60     		str	r2, [r5, #8]	@ unaligned
 14744 02f4 EB60     		str	r3, [r5, #12]	@ unaligned
 14745 02f6 2068     		ldr	r0, [r4]	@ unaligned
 14746 02f8 2861     		str	r0, [r5, #16]	@ unaligned
 14747 02fa 2379     		ldrb	r3, [r4, #4]
 14748 02fc 2B75     		strb	r3, [r5, #20]
1958:..\src/command_processing.c ****                 break;
 14749              		.loc 1 1958 0
 14750 02fe 00BF     		nop
 14751              	.L584:
1959:..\src/command_processing.c ****         }
1960:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14752              		.loc 1 1960 0
 14753 0300 7869     		ldr	r0, [r7, #20]
 14754 0302 FFF7FEFF 		bl	strlen
 14755 0306 0346     		mov	r3, r0
 14756 0308 1A46     		mov	r2, r3
 14757 030a 7B69     		ldr	r3, [r7, #20]
 14758 030c 1344     		add	r3, r3, r2
 14759 030e 064A     		ldr	r2, .L668+4
 14760 0310 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 333


 14761 0312 9278     		ldrb	r2, [r2, #2]
 14762 0314 1980     		strh	r1, [r3]	@ unaligned
 14763 0316 9A70     		strb	r2, [r3, #2]
 14764              	.LBB25:
1961:..\src/command_processing.c ****         
1962:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14765              		.loc 1 1962 0
 14766 0318 0023     		movs	r3, #0
 14767 031a 87F89330 		strb	r3, [r7, #147]
 14768 031e 01F070B8 		b	.L585
 14769              	.L669:
 14770 0322 00BF     		.align	2
 14771              	.L668:
 14772 0324 00000000 		.word	c_mem
 14773 0328 50110000 		.word	.LC152
 14774 032c 54110000 		.word	.LC153
 14775 0330 68110000 		.word	.LC154
 14776 0334 8C110000 		.word	.LC155
 14777 0338 94110000 		.word	.LC156
 14778 033c A4110000 		.word	.LC157
 14779 0340 B0110000 		.word	.LC158
 14780 0344 C8110000 		.word	.LC159
 14781 0348 E4110000 		.word	.LC160
 14782 034c 0C120000 		.word	.LC161
 14783 0350 38120000 		.word	.LC162
 14784 0354 54120000 		.word	.LC163
 14785 0358 68120000 		.word	.LC164
 14786 035c 7C120000 		.word	.LC165
 14787 0360 8C120000 		.word	.LC166
 14788 0364 98120000 		.word	.LC167
 14789              	.L638:
 14790              	.LBB26:
1963:..\src/command_processing.c ****             
1964:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14791              		.loc 1 1964 0
 14792 0368 97F89330 		ldrb	r3, [r7, #147]
 14793 036c 87F88B30 		strb	r3, [r7, #139]
1965:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14794              		.loc 1 1965 0
 14795 0370 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 14796 0374 1346     		mov	r3, r2
 14797 0376 DB00     		lsls	r3, r3, #3
 14798 0378 9B1A     		subs	r3, r3, r2
 14799 037a 1B01     		lsls	r3, r3, #4
 14800 037c B033     		adds	r3, r3, #176
 14801 037e D7F88C20 		ldr	r2, [r7, #140]
 14802 0382 1344     		add	r3, r3, r2
 14803 0384 C7F88430 		str	r3, [r7, #132]
1966:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14804              		.loc 1 1966 0
 14805 0388 D7F88430 		ldr	r3, [r7, #132]
 14806 038c 93F86030 		ldrb	r3, [r3, #96]
 14807 0390 87F88330 		strb	r3, [r7, #131]
1967:..\src/command_processing.c ****                   
1968:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14808              		.loc 1 1968 0
 14809 0394 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 334


 14810 0398 5A1C     		adds	r2, r3, #1
 14811 039a 07F11C03 		add	r3, r7, #28
 14812 039e AE49     		ldr	r1, .L670
 14813 03a0 1846     		mov	r0, r3
 14814 03a2 FFF7FEFF 		bl	sprintf
1969:..\src/command_processing.c ****             strcat(info_string, str);
 14815              		.loc 1 1969 0
 14816 03a6 07F11C03 		add	r3, r7, #28
 14817 03aa 1946     		mov	r1, r3
 14818 03ac 7869     		ldr	r0, [r7, #20]
 14819 03ae FFF7FEFF 		bl	strcat
1970:..\src/command_processing.c ****                         
1971:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14820              		.loc 1 1971 0
 14821 03b2 7869     		ldr	r0, [r7, #20]
 14822 03b4 FFF7FEFF 		bl	strlen
 14823 03b8 0346     		mov	r3, r0
 14824 03ba 1A46     		mov	r2, r3
 14825 03bc 7B69     		ldr	r3, [r7, #20]
 14826 03be 1344     		add	r3, r3, r2
 14827 03c0 A64A     		ldr	r2, .L670+4
 14828 03c2 1C46     		mov	r4, r3
 14829 03c4 1546     		mov	r5, r2
 14830 03c6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14831 03c8 2060     		str	r0, [r4]	@ unaligned
 14832 03ca 6160     		str	r1, [r4, #4]	@ unaligned
 14833 03cc A260     		str	r2, [r4, #8]	@ unaligned
 14834 03ce E360     		str	r3, [r4, #12]	@ unaligned
1972:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14835              		.loc 1 1972 0
 14836 03d0 D7F88430 		ldr	r3, [r7, #132]
 14837 03d4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14838 03d8 022B     		cmp	r3, #2
 14839 03da 10D1     		bne	.L586
1973:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 14840              		.loc 1 1973 0
 14841 03dc 7869     		ldr	r0, [r7, #20]
 14842 03de FFF7FEFF 		bl	strlen
 14843 03e2 0346     		mov	r3, r0
 14844 03e4 1A46     		mov	r2, r3
 14845 03e6 7B69     		ldr	r3, [r7, #20]
 14846 03e8 1344     		add	r3, r3, r2
 14847 03ea 9D4A     		ldr	r2, .L670+8
 14848 03ec 1C46     		mov	r4, r3
 14849 03ee 1346     		mov	r3, r2
 14850 03f0 07CB     		ldmia	r3!, {r0, r1, r2}
 14851 03f2 2060     		str	r0, [r4]	@ unaligned
 14852 03f4 6160     		str	r1, [r4, #4]	@ unaligned
 14853 03f6 A260     		str	r2, [r4, #8]	@ unaligned
 14854 03f8 1B88     		ldrh	r3, [r3]	@ unaligned
 14855 03fa A381     		strh	r3, [r4, #12]	@ unaligned
 14856 03fc 25E0     		b	.L587
 14857              	.L586:
1974:..\src/command_processing.c ****             else {
1975:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14858              		.loc 1 1975 0
 14859 03fe D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 335


 14860 0402 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14861 0406 012B     		cmp	r3, #1
 14862 0408 0FD1     		bne	.L588
1976:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14863              		.loc 1 1976 0
 14864 040a 7869     		ldr	r0, [r7, #20]
 14865 040c FFF7FEFF 		bl	strlen
 14866 0410 0346     		mov	r3, r0
 14867 0412 1A46     		mov	r2, r3
 14868 0414 7B69     		ldr	r3, [r7, #20]
 14869 0416 1344     		add	r3, r3, r2
 14870 0418 9249     		ldr	r1, .L670+12
 14871 041a 1A46     		mov	r2, r3
 14872 041c 0B46     		mov	r3, r1
 14873 041e 03CB     		ldmia	r3!, {r0, r1}
 14874 0420 1060     		str	r0, [r2]	@ unaligned
 14875 0422 5160     		str	r1, [r2, #4]	@ unaligned
 14876 0424 1B78     		ldrb	r3, [r3]
 14877 0426 1372     		strb	r3, [r2, #8]
 14878 0428 0FE0     		b	.L587
 14879              	.L588:
1977:..\src/command_processing.c ****                 else
1978:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14880              		.loc 1 1978 0
 14881 042a 7869     		ldr	r0, [r7, #20]
 14882 042c FFF7FEFF 		bl	strlen
 14883 0430 0346     		mov	r3, r0
 14884 0432 1A46     		mov	r2, r3
 14885 0434 7B69     		ldr	r3, [r7, #20]
 14886 0436 1344     		add	r3, r3, r2
 14887 0438 8B4A     		ldr	r2, .L670+16
 14888 043a 1C46     		mov	r4, r3
 14889 043c 1346     		mov	r3, r2
 14890 043e 07CB     		ldmia	r3!, {r0, r1, r2}
 14891 0440 2060     		str	r0, [r4]	@ unaligned
 14892 0442 6160     		str	r1, [r4, #4]	@ unaligned
 14893 0444 A260     		str	r2, [r4, #8]	@ unaligned
 14894 0446 1B88     		ldrh	r3, [r3]	@ unaligned
 14895 0448 A381     		strh	r3, [r4, #12]	@ unaligned
 14896              	.L587:
1979:..\src/command_processing.c ****             }
1980:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14897              		.loc 1 1980 0
 14898 044a D7F88430 		ldr	r3, [r7, #132]
 14899 044e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14900 0452 022B     		cmp	r3, #2
 14901 0454 13D1     		bne	.L589
1981:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14902              		.loc 1 1981 0
 14903 0456 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14904 045a 844A     		ldr	r2, .L670+20
 14905 045c 1B01     		lsls	r3, r3, #4
 14906 045e 1344     		add	r3, r3, r2
 14907 0460 0433     		adds	r3, r3, #4
 14908 0462 1A68     		ldr	r2, [r3]
 14909 0464 07F11C03 		add	r3, r7, #28
 14910 0468 8149     		ldr	r1, .L670+24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 336


 14911 046a 1846     		mov	r0, r3
 14912 046c FFF7FEFF 		bl	sprintf
1982:..\src/command_processing.c ****                 strcat(info_string,str);
 14913              		.loc 1 1982 0
 14914 0470 07F11C03 		add	r3, r7, #28
 14915 0474 1946     		mov	r1, r3
 14916 0476 7869     		ldr	r0, [r7, #20]
 14917 0478 FFF7FEFF 		bl	strcat
 14918 047c 39E0     		b	.L590
 14919              	.L589:
1983:..\src/command_processing.c ****             }
1984:..\src/command_processing.c ****             else {
1985:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14920              		.loc 1 1985 0
 14921 047e D7F88430 		ldr	r3, [r7, #132]
 14922 0482 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14923 0486 012B     		cmp	r3, #1
 14924 0488 13D1     		bne	.L591
1986:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14925              		.loc 1 1986 0
 14926 048a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14927 048e 774A     		ldr	r2, .L670+20
 14928 0490 1B01     		lsls	r3, r3, #4
 14929 0492 1344     		add	r3, r3, r2
 14930 0494 0833     		adds	r3, r3, #8
 14931 0496 1A68     		ldr	r2, [r3]
 14932 0498 07F11C03 		add	r3, r7, #28
 14933 049c 7449     		ldr	r1, .L670+24
 14934 049e 1846     		mov	r0, r3
 14935 04a0 FFF7FEFF 		bl	sprintf
1987:..\src/command_processing.c ****                     strcat(info_string,str);
 14936              		.loc 1 1987 0
 14937 04a4 07F11C03 		add	r3, r7, #28
 14938 04a8 1946     		mov	r1, r3
 14939 04aa 7869     		ldr	r0, [r7, #20]
 14940 04ac FFF7FEFF 		bl	strcat
 14941 04b0 1FE0     		b	.L590
 14942              	.L591:
1988:..\src/command_processing.c ****                 }
1989:..\src/command_processing.c ****                 else {
1990:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 14943              		.loc 1 1990 0
 14944 04b2 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14945 04b6 6D4A     		ldr	r2, .L670+20
 14946 04b8 1B01     		lsls	r3, r3, #4
 14947 04ba 1344     		add	r3, r3, r2
 14948 04bc 1968     		ldr	r1, [r3]
 14949 04be 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14950 04c2 D7F88C00 		ldr	r0, [r7, #140]
 14951 04c6 1346     		mov	r3, r2
 14952 04c8 5B00     		lsls	r3, r3, #1
 14953 04ca 1344     		add	r3, r3, r2
 14954 04cc 1B01     		lsls	r3, r3, #4
 14955 04ce 0344     		add	r3, r3, r0
 14956 04d0 03F29513 		addw	r3, r3, #405
 14957 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14958 04d6 41FA03F2 		asr	r2, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 337


 14959 04da 07F11C03 		add	r3, r7, #28
 14960 04de 6449     		ldr	r1, .L670+24
 14961 04e0 1846     		mov	r0, r3
 14962 04e2 FFF7FEFF 		bl	sprintf
1991:..\src/command_processing.c ****                     strcat(info_string,str);
 14963              		.loc 1 1991 0
 14964 04e6 07F11C03 		add	r3, r7, #28
 14965 04ea 1946     		mov	r1, r3
 14966 04ec 7869     		ldr	r0, [r7, #20]
 14967 04ee FFF7FEFF 		bl	strcat
 14968              	.L590:
1992:..\src/command_processing.c ****                 }
1993:..\src/command_processing.c ****             }
1994:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14969              		.loc 1 1994 0
 14970 04f2 7869     		ldr	r0, [r7, #20]
 14971 04f4 FFF7FEFF 		bl	strlen
 14972 04f8 0346     		mov	r3, r0
 14973 04fa 1A46     		mov	r2, r3
 14974 04fc 7B69     		ldr	r3, [r7, #20]
 14975 04fe 1344     		add	r3, r3, r2
 14976 0500 5C4A     		ldr	r2, .L670+28
 14977 0502 1188     		ldrh	r1, [r2]	@ unaligned
 14978 0504 9278     		ldrb	r2, [r2, #2]
 14979 0506 1980     		strh	r1, [r3]	@ unaligned
 14980 0508 9A70     		strb	r2, [r3, #2]
1995:..\src/command_processing.c **** 
1996:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14981              		.loc 1 1996 0
 14982 050a 07F11C03 		add	r3, r7, #28
 14983 050e 5A4A     		ldr	r2, .L670+32
 14984 0510 1C46     		mov	r4, r3
 14985 0512 1346     		mov	r3, r2
 14986 0514 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14987 0516 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1997:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14988              		.loc 1 1997 0
 14989 051a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14990 051e 574A     		ldr	r2, .L670+36
 14991 0520 1B01     		lsls	r3, r3, #4
 14992 0522 1344     		add	r3, r3, r2
 14993 0524 0C33     		adds	r3, r3, #12
 14994 0526 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14995 0528 03F00103 		and	r3, r3, #1
 14996 052c 002B     		cmp	r3, #0
 14997 052e 0FD0     		beq	.L592
1998:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14998              		.loc 1 1998 0
 14999 0530 07F11C03 		add	r3, r7, #28
 15000 0534 1846     		mov	r0, r3
 15001 0536 FFF7FEFF 		bl	strlen
 15002 053a 0346     		mov	r3, r0
 15003 053c 1A46     		mov	r2, r3
 15004 053e 07F11C03 		add	r3, r7, #28
 15005 0542 1344     		add	r3, r3, r2
 15006 0544 4E4A     		ldr	r2, .L670+40
 15007 0546 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 338


 15008 0548 1860     		str	r0, [r3]	@ unaligned
 15009 054a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15010 054c 9A80     		strh	r2, [r3, #4]	@ unaligned
 15011 054e 0EE0     		b	.L593
 15012              	.L592:
1999:..\src/command_processing.c ****             } else {
2000:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 15013              		.loc 1 2000 0
 15014 0550 07F11C03 		add	r3, r7, #28
 15015 0554 1846     		mov	r0, r3
 15016 0556 FFF7FEFF 		bl	strlen
 15017 055a 0346     		mov	r3, r0
 15018 055c 1A46     		mov	r2, r3
 15019 055e 07F11C03 		add	r3, r7, #28
 15020 0562 1344     		add	r3, r3, r2
 15021 0564 474A     		ldr	r2, .L670+44
 15022 0566 1068     		ldr	r0, [r2]	@ unaligned
 15023 0568 1860     		str	r0, [r3]	@ unaligned
 15024 056a 1279     		ldrb	r2, [r2, #4]
 15025 056c 1A71     		strb	r2, [r3, #4]
 15026              	.L593:
2001:..\src/command_processing.c ****             }
2002:..\src/command_processing.c ****             strcat(info_string, str);
 15027              		.loc 1 2002 0
 15028 056e 07F11C03 		add	r3, r7, #28
 15029 0572 1946     		mov	r1, r3
 15030 0574 7869     		ldr	r0, [r7, #20]
 15031 0576 FFF7FEFF 		bl	strcat
2003:..\src/command_processing.c ****                         
2004:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 15032              		.loc 1 2004 0
 15033 057a 7869     		ldr	r0, [r7, #20]
 15034 057c FFF7FEFF 		bl	strlen
 15035 0580 0346     		mov	r3, r0
 15036 0582 1A46     		mov	r2, r3
 15037 0584 7B69     		ldr	r3, [r7, #20]
 15038 0586 1344     		add	r3, r3, r2
 15039 0588 3F4A     		ldr	r2, .L670+48
 15040 058a 1D46     		mov	r5, r3
 15041 058c 1446     		mov	r4, r2
 15042 058e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15043 0590 2860     		str	r0, [r5]	@ unaligned
 15044 0592 6960     		str	r1, [r5, #4]	@ unaligned
 15045 0594 AA60     		str	r2, [r5, #8]	@ unaligned
 15046 0596 EB60     		str	r3, [r5, #12]	@ unaligned
 15047 0598 03CC     		ldmia	r4!, {r0, r1}
 15048 059a 2861     		str	r0, [r5, #16]	@ unaligned
 15049 059c 6961     		str	r1, [r5, #20]	@ unaligned
 15050 059e 2388     		ldrh	r3, [r4]	@ unaligned
 15051 05a0 A278     		ldrb	r2, [r4, #2]
 15052 05a2 2B83     		strh	r3, [r5, #24]	@ unaligned
 15053 05a4 1346     		mov	r3, r2
 15054 05a6 AB76     		strb	r3, [r5, #26]
2005:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 15055              		.loc 1 2005 0
 15056 05a8 D7F88430 		ldr	r3, [r7, #132]
 15057 05ac 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 339


 15058 05b0 012B     		cmp	r3, #1
 15059 05b2 0CD1     		bne	.L594
2006:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 15060              		.loc 1 2006 0
 15061 05b4 7869     		ldr	r0, [r7, #20]
 15062 05b6 FFF7FEFF 		bl	strlen
 15063 05ba 0346     		mov	r3, r0
 15064 05bc 1A46     		mov	r2, r3
 15065 05be 7B69     		ldr	r3, [r7, #20]
 15066 05c0 1344     		add	r3, r3, r2
 15067 05c2 324A     		ldr	r2, .L670+52
 15068 05c4 1068     		ldr	r0, [r2]	@ unaligned
 15069 05c6 1860     		str	r0, [r3]	@ unaligned
 15070 05c8 1279     		ldrb	r2, [r2, #4]
 15071 05ca 1A71     		strb	r2, [r3, #4]
 15072 05cc 09E0     		b	.L595
 15073              	.L594:
2007:..\src/command_processing.c ****             else
2008:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 15074              		.loc 1 2008 0
 15075 05ce 7869     		ldr	r0, [r7, #20]
 15076 05d0 FFF7FEFF 		bl	strlen
 15077 05d4 0346     		mov	r3, r0
 15078 05d6 1A46     		mov	r2, r3
 15079 05d8 7B69     		ldr	r3, [r7, #20]
 15080 05da 1344     		add	r3, r3, r2
 15081 05dc 2C4A     		ldr	r2, .L670+56
 15082 05de 1068     		ldr	r0, [r2]	@ unaligned
 15083 05e0 1860     		str	r0, [r3]	@ unaligned
 15084              	.L595:
2009:..\src/command_processing.c ****             
2010:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 15085              		.loc 1 2010 0
 15086 05e2 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15087 05e6 2B4A     		ldr	r2, .L670+60
 15088 05e8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 15089 05ec 1A46     		mov	r2, r3
 15090 05ee 07F11C03 		add	r3, r7, #28
 15091 05f2 2949     		ldr	r1, .L670+64
 15092 05f4 1846     		mov	r0, r3
 15093 05f6 FFF7FEFF 		bl	sprintf
2011:..\src/command_processing.c ****             strcat(info_string, str);
 15094              		.loc 1 2011 0
 15095 05fa 07F11C03 		add	r3, r7, #28
 15096 05fe 1946     		mov	r1, r3
 15097 0600 7869     		ldr	r0, [r7, #20]
 15098 0602 FFF7FEFF 		bl	strcat
2012:..\src/command_processing.c **** 
2013:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 15099              		.loc 1 2013 0
 15100 0606 7869     		ldr	r0, [r7, #20]
 15101 0608 FFF7FEFF 		bl	strlen
 15102 060c 0346     		mov	r3, r0
 15103 060e 1A46     		mov	r2, r3
 15104 0610 7B69     		ldr	r3, [r7, #20]
 15105 0612 1344     		add	r3, r3, r2
 15106 0614 214A     		ldr	r2, .L670+68
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 340


 15107 0616 1D46     		mov	r5, r3
 15108 0618 1446     		mov	r4, r2
 15109 061a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15110 061c 2860     		str	r0, [r5]	@ unaligned
 15111 061e 6960     		str	r1, [r5, #4]	@ unaligned
 15112 0620 AA60     		str	r2, [r5, #8]	@ unaligned
 15113 0622 EB60     		str	r3, [r5, #12]	@ unaligned
 15114 0624 2068     		ldr	r0, [r4]	@ unaligned
 15115 0626 2861     		str	r0, [r5, #16]	@ unaligned
 15116 0628 A388     		ldrh	r3, [r4, #4]	@ unaligned
 15117 062a AB82     		strh	r3, [r5, #20]	@ unaligned
2014:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 15118              		.loc 1 2014 0
 15119 062c 7869     		ldr	r0, [r7, #20]
 15120 062e FFF7FEFF 		bl	strlen
 15121 0632 0346     		mov	r3, r0
 15122 0634 1A46     		mov	r2, r3
 15123 0636 7B69     		ldr	r3, [r7, #20]
 15124 0638 1344     		add	r3, r3, r2
 15125 063a 194A     		ldr	r2, .L670+72
 15126 063c 1C46     		mov	r4, r3
 15127 063e 1346     		mov	r3, r2
 15128 0640 07CB     		ldmia	r3!, {r0, r1, r2}
 15129 0642 2060     		str	r0, [r4]	@ unaligned
 15130 0644 6160     		str	r1, [r4, #4]	@ unaligned
 15131 0646 A260     		str	r2, [r4, #8]	@ unaligned
 15132 0648 1A88     		ldrh	r2, [r3]	@ unaligned
 15133 064a 9B78     		ldrb	r3, [r3, #2]
 15134 064c A281     		strh	r2, [r4, #12]	@ unaligned
 15135 064e A373     		strb	r3, [r4, #14]
2015:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 15136              		.loc 1 2015 0
 15137 0650 0023     		movs	r3, #0
 15138 0652 C7F89430 		str	r3, [r7, #148]
 15139 0656 64E0     		b	.L596
 15140              	.L671:
 15141              		.align	2
 15142              	.L670:
 15143 0658 B0120000 		.word	.LC168
 15144 065c C0120000 		.word	.LC169
 15145 0660 D0120000 		.word	.LC170
 15146 0664 E0120000 		.word	.LC171
 15147 0668 EC120000 		.word	.LC172
 15148 066c 00000000 		.word	g_refOld
 15149 0670 FC120000 		.word	.LC173
 15150 0674 50110000 		.word	.LC152
 15151 0678 00130000 		.word	.LC174
 15152 067c 00000000 		.word	g_ref
 15153 0680 10130000 		.word	.LC175
 15154 0684 18130000 		.word	.LC176
 15155 0688 20130000 		.word	.LC177
 15156 068c 3C130000 		.word	.LC178
 15157 0690 44130000 		.word	.LC179
 15158 0694 00000000 		.word	dev_pwm_limit
 15159 0698 48130000 		.word	.LC180
 15160 069c 58130000 		.word	.LC181
 15161 06a0 70130000 		.word	.LC182
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 341


 15162              	.L598:
2016:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15163              		.loc 1 2016 0
 15164 06a4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15165 06a8 B849     		ldr	r1, .L672
 15166 06aa 1346     		mov	r3, r2
 15167 06ac 5B00     		lsls	r3, r3, #1
 15168 06ae 1344     		add	r3, r3, r2
 15169 06b0 9B00     		lsls	r3, r3, #2
 15170 06b2 1344     		add	r3, r3, r2
 15171 06b4 D7F89420 		ldr	r2, [r7, #148]
 15172 06b8 1344     		add	r3, r3, r2
 15173 06ba 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15174 06be 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15175 06c2 D7F88C00 		ldr	r0, [r7, #140]
 15176 06c6 1346     		mov	r3, r2
 15177 06c8 5B00     		lsls	r3, r3, #1
 15178 06ca 1344     		add	r3, r3, r2
 15179 06cc 1B01     		lsls	r3, r3, #4
 15180 06ce C218     		adds	r2, r0, r3
 15181 06d0 D7F89430 		ldr	r3, [r7, #148]
 15182 06d4 1344     		add	r3, r3, r2
 15183 06d6 03F29513 		addw	r3, r3, #405
 15184 06da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15185 06dc 41FA03F2 		asr	r2, r1, r3
 15186 06e0 07F11C03 		add	r3, r7, #28
 15187 06e4 AA49     		ldr	r1, .L672+4
 15188 06e6 1846     		mov	r0, r3
 15189 06e8 FFF7FEFF 		bl	sprintf
2017:..\src/command_processing.c ****                 strcat(info_string, str);
 15190              		.loc 1 2017 0
 15191 06ec 07F11C03 		add	r3, r7, #28
 15192 06f0 1946     		mov	r1, r3
 15193 06f2 7869     		ldr	r0, [r7, #20]
 15194 06f4 FFF7FEFF 		bl	strcat
2018:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15195              		.loc 1 2018 0
 15196 06f8 D7F89430 		ldr	r3, [r7, #148]
 15197 06fc 022B     		cmp	r3, #2
 15198 06fe 0BD0     		beq	.L597
2019:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15199              		.loc 1 2019 0
 15200 0700 7869     		ldr	r0, [r7, #20]
 15201 0702 FFF7FEFF 		bl	strlen
 15202 0706 0346     		mov	r3, r0
 15203 0708 1A46     		mov	r2, r3
 15204 070a 7B69     		ldr	r3, [r7, #20]
 15205 070c 1344     		add	r3, r3, r2
 15206 070e A14A     		ldr	r2, .L672+8
 15207 0710 1188     		ldrh	r1, [r2]	@ unaligned
 15208 0712 9278     		ldrb	r2, [r2, #2]
 15209 0714 1980     		strh	r1, [r3]	@ unaligned
 15210 0716 9A70     		strb	r2, [r3, #2]
 15211              	.L597:
2015:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15212              		.loc 1 2015 0 discriminator 2
 15213 0718 D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 342


 15214 071c 0133     		adds	r3, r3, #1
 15215 071e C7F89430 		str	r3, [r7, #148]
 15216              	.L596:
2015:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15217              		.loc 1 2015 0 is_stmt 0 discriminator 1
 15218 0722 D7F89430 		ldr	r3, [r7, #148]
 15219 0726 022B     		cmp	r3, #2
 15220 0728 BCDD     		ble	.L598
2020:..\src/command_processing.c ****                 }                
2021:..\src/command_processing.c ****             }
2022:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15221              		.loc 1 2022 0 is_stmt 1
 15222 072a 7869     		ldr	r0, [r7, #20]
 15223 072c FFF7FEFF 		bl	strlen
 15224 0730 0346     		mov	r3, r0
 15225 0732 1A46     		mov	r2, r3
 15226 0734 7B69     		ldr	r3, [r7, #20]
 15227 0736 1344     		add	r3, r3, r2
 15228 0738 974A     		ldr	r2, .L672+12
 15229 073a 1188     		ldrh	r1, [r2]	@ unaligned
 15230 073c 9278     		ldrb	r2, [r2, #2]
 15231 073e 1980     		strh	r1, [r3]	@ unaligned
 15232 0740 9A70     		strb	r2, [r3, #2]
2023:..\src/command_processing.c ****             
2024:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 15233              		.loc 1 2024 0
 15234 0742 D7F88430 		ldr	r3, [r7, #132]
 15235 0746 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15236 074a 062B     		cmp	r3, #6
 15237 074c 1AD1     		bne	.L599
2025:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 15238              		.loc 1 2025 0
 15239 074e 934B     		ldr	r3, .L672+16
 15240 0750 1A6A     		ldr	r2, [r3, #32]
 15241 0752 924B     		ldr	r3, .L672+16
 15242 0754 5B6A     		ldr	r3, [r3, #36]
 15243 0756 07F11C00 		add	r0, r7, #28
 15244 075a 9149     		ldr	r1, .L672+20
 15245 075c FFF7FEFF 		bl	sprintf
2026:..\src/command_processing.c ****                 strcat(info_string, str);
 15246              		.loc 1 2026 0
 15247 0760 07F11C03 		add	r3, r7, #28
 15248 0764 1946     		mov	r1, r3
 15249 0766 7869     		ldr	r0, [r7, #20]
 15250 0768 FFF7FEFF 		bl	strcat
2027:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15251              		.loc 1 2027 0
 15252 076c 7869     		ldr	r0, [r7, #20]
 15253 076e FFF7FEFF 		bl	strlen
 15254 0772 0346     		mov	r3, r0
 15255 0774 1A46     		mov	r2, r3
 15256 0776 7B69     		ldr	r3, [r7, #20]
 15257 0778 1344     		add	r3, r3, r2
 15258 077a 874A     		ldr	r2, .L672+12
 15259 077c 1188     		ldrh	r1, [r2]	@ unaligned
 15260 077e 9278     		ldrb	r2, [r2, #2]
 15261 0780 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 343


 15262 0782 9A70     		strb	r2, [r3, #2]
 15263              	.L599:
2028:..\src/command_processing.c ****             }
2029:..\src/command_processing.c **** 
2030:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 15264              		.loc 1 2030 0
 15265 0784 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15266 0788 591C     		adds	r1, r3, #1
 15267 078a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15268 078e 854A     		ldr	r2, .L672+24
 15269 0790 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15270 0794 07F11C00 		add	r0, r7, #28
 15271 0798 0A46     		mov	r2, r1
 15272 079a 8349     		ldr	r1, .L672+28
 15273 079c FFF7FEFF 		bl	sprintf
2031:..\src/command_processing.c ****             strcat(info_string, str);
 15274              		.loc 1 2031 0
 15275 07a0 07F11C03 		add	r3, r7, #28
 15276 07a4 1946     		mov	r1, r3
 15277 07a6 7869     		ldr	r0, [r7, #20]
 15278 07a8 FFF7FEFF 		bl	strcat
2032:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15279              		.loc 1 2032 0
 15280 07ac 7869     		ldr	r0, [r7, #20]
 15281 07ae FFF7FEFF 		bl	strlen
 15282 07b2 0346     		mov	r3, r0
 15283 07b4 1A46     		mov	r2, r3
 15284 07b6 7B69     		ldr	r3, [r7, #20]
 15285 07b8 1344     		add	r3, r3, r2
 15286 07ba 774A     		ldr	r2, .L672+12
 15287 07bc 1188     		ldrh	r1, [r2]	@ unaligned
 15288 07be 9278     		ldrb	r2, [r2, #2]
 15289 07c0 1980     		strh	r1, [r3]	@ unaligned
 15290 07c2 9A70     		strb	r2, [r3, #2]
2033:..\src/command_processing.c ****             
2034:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 15291              		.loc 1 2034 0
 15292 07c4 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15293 07c8 591C     		adds	r1, r3, #1
 15294 07ca 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15295 07ce 774A     		ldr	r2, .L672+32
 15296 07d0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15297 07d4 07F11C00 		add	r0, r7, #28
 15298 07d8 0A46     		mov	r2, r1
 15299 07da 7549     		ldr	r1, .L672+36
 15300 07dc FFF7FEFF 		bl	sprintf
2035:..\src/command_processing.c ****             strcat(info_string, str);
 15301              		.loc 1 2035 0
 15302 07e0 07F11C03 		add	r3, r7, #28
 15303 07e4 1946     		mov	r1, r3
 15304 07e6 7869     		ldr	r0, [r7, #20]
 15305 07e8 FFF7FEFF 		bl	strcat
2036:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15306              		.loc 1 2036 0
 15307 07ec 7869     		ldr	r0, [r7, #20]
 15308 07ee FFF7FEFF 		bl	strlen
 15309 07f2 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 344


 15310 07f4 1A46     		mov	r2, r3
 15311 07f6 7B69     		ldr	r3, [r7, #20]
 15312 07f8 1344     		add	r3, r3, r2
 15313 07fa 674A     		ldr	r2, .L672+12
 15314 07fc 1188     		ldrh	r1, [r2]	@ unaligned
 15315 07fe 9278     		ldrb	r2, [r2, #2]
 15316 0800 1980     		strh	r1, [r3]	@ unaligned
 15317 0802 9A70     		strb	r2, [r3, #2]
2037:..\src/command_processing.c **** 
2038:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 15318              		.loc 1 2038 0
 15319 0804 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15320 0808 5C1C     		adds	r4, r3, #1
 15321 080a 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 15322 080e 5F4A     		ldr	r2, .L672
 15323 0810 3421     		movs	r1, #52
 15324 0812 01FB03F3 		mul	r3, r1, r3
 15325 0816 1344     		add	r3, r3, r2
 15326 0818 0C33     		adds	r3, r3, #12
 15327 081a 1B68     		ldr	r3, [r3]
 15328 081c 07F11C00 		add	r0, r7, #28
 15329 0820 2246     		mov	r2, r4
 15330 0822 6449     		ldr	r1, .L672+40
 15331 0824 FFF7FEFF 		bl	sprintf
2039:..\src/command_processing.c ****             strcat(info_string, str);
 15332              		.loc 1 2039 0
 15333 0828 07F11C03 		add	r3, r7, #28
 15334 082c 1946     		mov	r1, r3
 15335 082e 7869     		ldr	r0, [r7, #20]
 15336 0830 FFF7FEFF 		bl	strcat
2040:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15337              		.loc 1 2040 0
 15338 0834 7869     		ldr	r0, [r7, #20]
 15339 0836 FFF7FEFF 		bl	strlen
 15340 083a 0346     		mov	r3, r0
 15341 083c 1A46     		mov	r2, r3
 15342 083e 7B69     		ldr	r3, [r7, #20]
 15343 0840 1344     		add	r3, r3, r2
 15344 0842 554A     		ldr	r2, .L672+12
 15345 0844 1188     		ldrh	r1, [r2]	@ unaligned
 15346 0846 9278     		ldrb	r2, [r2, #2]
 15347 0848 1980     		strh	r1, [r3]	@ unaligned
 15348 084a 9A70     		strb	r2, [r3, #2]
2041:..\src/command_processing.c ****             
2042:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 15349              		.loc 1 2042 0
 15350 084c D7F88430 		ldr	r3, [r7, #132]
 15351 0850 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15352 0854 012B     		cmp	r3, #1
 15353 0856 23D1     		bne	.L600
2043:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 15354              		.loc 1 2043 0
 15355 0858 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15356 085c 5C1C     		adds	r4, r3, #1
 15357 085e 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 15358 0862 4A4A     		ldr	r2, .L672
 15359 0864 3421     		movs	r1, #52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 345


 15360 0866 01FB03F3 		mul	r3, r1, r3
 15361 086a 1344     		add	r3, r3, r2
 15362 086c 1433     		adds	r3, r3, #20
 15363 086e 1B68     		ldr	r3, [r3]
 15364 0870 07F11C00 		add	r0, r7, #28
 15365 0874 2246     		mov	r2, r4
 15366 0876 5049     		ldr	r1, .L672+44
 15367 0878 FFF7FEFF 		bl	sprintf
2044:..\src/command_processing.c ****                 strcat(info_string, str);
 15368              		.loc 1 2044 0
 15369 087c 07F11C03 		add	r3, r7, #28
 15370 0880 1946     		mov	r1, r3
 15371 0882 7869     		ldr	r0, [r7, #20]
 15372 0884 FFF7FEFF 		bl	strcat
2045:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15373              		.loc 1 2045 0
 15374 0888 7869     		ldr	r0, [r7, #20]
 15375 088a FFF7FEFF 		bl	strlen
 15376 088e 0346     		mov	r3, r0
 15377 0890 1A46     		mov	r2, r3
 15378 0892 7B69     		ldr	r3, [r7, #20]
 15379 0894 1344     		add	r3, r3, r2
 15380 0896 404A     		ldr	r2, .L672+12
 15381 0898 1188     		ldrh	r1, [r2]	@ unaligned
 15382 089a 9278     		ldrb	r2, [r2, #2]
 15383 089c 1980     		strh	r1, [r3]	@ unaligned
 15384 089e 9A70     		strb	r2, [r3, #2]
 15385              	.L600:
2046:..\src/command_processing.c ****             }
2047:..\src/command_processing.c ****             
2048:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 15386              		.loc 1 2048 0
 15387 08a0 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15388 08a4 5A1C     		adds	r2, r3, #1
 15389 08a6 07F11C03 		add	r3, r7, #28
 15390 08aa 4449     		ldr	r1, .L672+48
 15391 08ac 1846     		mov	r0, r3
 15392 08ae FFF7FEFF 		bl	sprintf
2049:..\src/command_processing.c ****             strcat(info_string, str);
 15393              		.loc 1 2049 0
 15394 08b2 07F11C03 		add	r3, r7, #28
 15395 08b6 1946     		mov	r1, r3
 15396 08b8 7869     		ldr	r0, [r7, #20]
 15397 08ba FFF7FEFF 		bl	strcat
2050:..\src/command_processing.c **** 
2051:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 15398              		.loc 1 2051 0
 15399 08be 7869     		ldr	r0, [r7, #20]
 15400 08c0 FFF7FEFF 		bl	strlen
 15401 08c4 0346     		mov	r3, r0
 15402 08c6 1A46     		mov	r2, r3
 15403 08c8 7B69     		ldr	r3, [r7, #20]
 15404 08ca 1344     		add	r3, r3, r2
 15405 08cc 3C4A     		ldr	r2, .L672+52
 15406 08ce 1D46     		mov	r5, r3
 15407 08d0 1446     		mov	r4, r2
 15408 08d2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 346


 15409 08d4 2860     		str	r0, [r5]	@ unaligned
 15410 08d6 6960     		str	r1, [r5, #4]	@ unaligned
 15411 08d8 AA60     		str	r2, [r5, #8]	@ unaligned
 15412 08da EB60     		str	r3, [r5, #12]	@ unaligned
 15413 08dc 2378     		ldrb	r3, [r4]
 15414 08de 2B74     		strb	r3, [r5, #16]
2052:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15415              		.loc 1 2052 0
 15416 08e0 D7F88430 		ldr	r3, [r7, #132]
 15417 08e4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15418 08e8 032B     		cmp	r3, #3
 15419 08ea 73D0     		beq	.L601
2053:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15420              		.loc 1 2053 0
 15421 08ec D7F88430 		ldr	r3, [r7, #132]
 15422 08f0 1B68     		ldr	r3, [r3]
 15423 08f2 1846     		mov	r0, r3
 15424 08f4 FFF7FEFF 		bl	__aeabi_i2d
 15425 08f8 4FF00002 		mov	r2, #0
 15426 08fc 314B     		ldr	r3, .L672+56
 15427 08fe FFF7FEFF 		bl	__aeabi_ddiv
 15428 0902 0346     		mov	r3, r0
 15429 0904 0C46     		mov	r4, r1
 15430 0906 07F11C00 		add	r0, r7, #28
 15431 090a 1A46     		mov	r2, r3
 15432 090c 2346     		mov	r3, r4
 15433 090e 2E49     		ldr	r1, .L672+60
 15434 0910 FFF7FEFF 		bl	sprintf
2054:..\src/command_processing.c ****                 strcat(info_string, str);
 15435              		.loc 1 2054 0
 15436 0914 07F11C03 		add	r3, r7, #28
 15437 0918 1946     		mov	r1, r3
 15438 091a 7869     		ldr	r0, [r7, #20]
 15439 091c FFF7FEFF 		bl	strcat
2055:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15440              		.loc 1 2055 0
 15441 0920 D7F88430 		ldr	r3, [r7, #132]
 15442 0924 5B68     		ldr	r3, [r3, #4]
 15443 0926 1846     		mov	r0, r3
 15444 0928 FFF7FEFF 		bl	__aeabi_i2d
 15445 092c 4FF00002 		mov	r2, #0
 15446 0930 244B     		ldr	r3, .L672+56
 15447 0932 FFF7FEFF 		bl	__aeabi_ddiv
 15448 0936 0346     		mov	r3, r0
 15449 0938 0C46     		mov	r4, r1
 15450 093a 07F11C00 		add	r0, r7, #28
 15451 093e 1A46     		mov	r2, r3
 15452 0940 2346     		mov	r3, r4
 15453 0942 2249     		ldr	r1, .L672+64
 15454 0944 FFF7FEFF 		bl	sprintf
2056:..\src/command_processing.c ****                 strcat(info_string, str);
 15455              		.loc 1 2056 0
 15456 0948 07F11C03 		add	r3, r7, #28
 15457 094c 1946     		mov	r1, r3
 15458 094e 7869     		ldr	r0, [r7, #20]
 15459 0950 FFF7FEFF 		bl	strcat
2057:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 347


 15460              		.loc 1 2057 0
 15461 0954 D7F88430 		ldr	r3, [r7, #132]
 15462 0958 9B68     		ldr	r3, [r3, #8]
 15463 095a 1846     		mov	r0, r3
 15464 095c FFF7FEFF 		bl	__aeabi_i2d
 15465 0960 4FF00002 		mov	r2, #0
 15466 0964 174B     		ldr	r3, .L672+56
 15467 0966 FFF7FEFF 		bl	__aeabi_ddiv
 15468 096a 0346     		mov	r3, r0
 15469 096c 0C46     		mov	r4, r1
 15470 096e 07F11C00 		add	r0, r7, #28
 15471 0972 1A46     		mov	r2, r3
 15472 0974 2346     		mov	r3, r4
 15473 0976 1649     		ldr	r1, .L672+68
 15474 0978 FFF7FEFF 		bl	sprintf
2058:..\src/command_processing.c ****                 strcat(info_string, str);
 15475              		.loc 1 2058 0
 15476 097c 07F11C03 		add	r3, r7, #28
 15477 0980 1946     		mov	r1, r3
 15478 0982 7869     		ldr	r0, [r7, #20]
 15479 0984 FFF7FEFF 		bl	strcat
 15480 0988 72E0     		b	.L602
 15481              	.L673:
 15482 098a 00BF     		.align	2
 15483              	.L672:
 15484 098c 00000000 		.word	g_meas
 15485 0990 80130000 		.word	.LC183
 15486 0994 84130000 		.word	.LC184
 15487 0998 50110000 		.word	.LC152
 15488 099c 00000000 		.word	g_adc_measOld
 15489 09a0 88130000 		.word	.LC185
 15490 09a4 00000000 		.word	dev_tension
 15491 09a8 A8130000 		.word	.LC186
 15492 09ac 00000000 		.word	pow_tension
 15493 09b0 C8130000 		.word	.LC187
 15494 09b4 F0130000 		.word	.LC188
 15495 09b8 08140000 		.word	.LC189
 15496 09bc 30140000 		.word	.LC190
 15497 09c0 4C140000 		.word	.LC191
 15498 09c4 0000F040 		.word	1089470464
 15499 09c8 60140000 		.word	.LC192
 15500 09cc 6C140000 		.word	.LC193
 15501 09d0 78140000 		.word	.LC194
 15502              	.L601:
2059:..\src/command_processing.c ****             }
2060:..\src/command_processing.c ****             else { 
2061:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15503              		.loc 1 2061 0
 15504 09d4 D7F88430 		ldr	r3, [r7, #132]
 15505 09d8 9B69     		ldr	r3, [r3, #24]
 15506 09da 1846     		mov	r0, r3
 15507 09dc FFF7FEFF 		bl	__aeabi_i2d
 15508 09e0 4FF00002 		mov	r2, #0
 15509 09e4 CE4B     		ldr	r3, .L674
 15510 09e6 FFF7FEFF 		bl	__aeabi_ddiv
 15511 09ea 0346     		mov	r3, r0
 15512 09ec 0C46     		mov	r4, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 348


 15513 09ee 07F11C00 		add	r0, r7, #28
 15514 09f2 1A46     		mov	r2, r3
 15515 09f4 2346     		mov	r3, r4
 15516 09f6 CB49     		ldr	r1, .L674+4
 15517 09f8 FFF7FEFF 		bl	sprintf
2062:..\src/command_processing.c ****                 strcat(info_string, str);
 15518              		.loc 1 2062 0
 15519 09fc 07F11C03 		add	r3, r7, #28
 15520 0a00 1946     		mov	r1, r3
 15521 0a02 7869     		ldr	r0, [r7, #20]
 15522 0a04 FFF7FEFF 		bl	strcat
2063:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15523              		.loc 1 2063 0
 15524 0a08 D7F88430 		ldr	r3, [r7, #132]
 15525 0a0c DB69     		ldr	r3, [r3, #28]
 15526 0a0e 1846     		mov	r0, r3
 15527 0a10 FFF7FEFF 		bl	__aeabi_i2d
 15528 0a14 4FF00002 		mov	r2, #0
 15529 0a18 C14B     		ldr	r3, .L674
 15530 0a1a FFF7FEFF 		bl	__aeabi_ddiv
 15531 0a1e 0346     		mov	r3, r0
 15532 0a20 0C46     		mov	r4, r1
 15533 0a22 07F11C00 		add	r0, r7, #28
 15534 0a26 1A46     		mov	r2, r3
 15535 0a28 2346     		mov	r3, r4
 15536 0a2a BF49     		ldr	r1, .L674+8
 15537 0a2c FFF7FEFF 		bl	sprintf
2064:..\src/command_processing.c ****                 strcat(info_string, str);
 15538              		.loc 1 2064 0
 15539 0a30 07F11C03 		add	r3, r7, #28
 15540 0a34 1946     		mov	r1, r3
 15541 0a36 7869     		ldr	r0, [r7, #20]
 15542 0a38 FFF7FEFF 		bl	strcat
2065:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15543              		.loc 1 2065 0
 15544 0a3c D7F88430 		ldr	r3, [r7, #132]
 15545 0a40 1B6A     		ldr	r3, [r3, #32]
 15546 0a42 1846     		mov	r0, r3
 15547 0a44 FFF7FEFF 		bl	__aeabi_i2d
 15548 0a48 4FF00002 		mov	r2, #0
 15549 0a4c B44B     		ldr	r3, .L674
 15550 0a4e FFF7FEFF 		bl	__aeabi_ddiv
 15551 0a52 0346     		mov	r3, r0
 15552 0a54 0C46     		mov	r4, r1
 15553 0a56 07F11C00 		add	r0, r7, #28
 15554 0a5a 1A46     		mov	r2, r3
 15555 0a5c 2346     		mov	r3, r4
 15556 0a5e B349     		ldr	r1, .L674+12
 15557 0a60 FFF7FEFF 		bl	sprintf
2066:..\src/command_processing.c ****                 strcat(info_string, str);
 15558              		.loc 1 2066 0
 15559 0a64 07F11C03 		add	r3, r7, #28
 15560 0a68 1946     		mov	r1, r3
 15561 0a6a 7869     		ldr	r0, [r7, #20]
 15562 0a6c FFF7FEFF 		bl	strcat
 15563              	.L602:
2067:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 349


2068:..\src/command_processing.c **** 
2069:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15564              		.loc 1 2069 0
 15565 0a70 7869     		ldr	r0, [r7, #20]
 15566 0a72 FFF7FEFF 		bl	strlen
 15567 0a76 0346     		mov	r3, r0
 15568 0a78 1A46     		mov	r2, r3
 15569 0a7a 7B69     		ldr	r3, [r7, #20]
 15570 0a7c 1344     		add	r3, r3, r2
 15571 0a7e AC4A     		ldr	r2, .L674+16
 15572 0a80 1D46     		mov	r5, r3
 15573 0a82 1446     		mov	r4, r2
 15574 0a84 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15575 0a86 2860     		str	r0, [r5]	@ unaligned
 15576 0a88 6960     		str	r1, [r5, #4]	@ unaligned
 15577 0a8a AA60     		str	r2, [r5, #8]	@ unaligned
 15578 0a8c EB60     		str	r3, [r5, #12]	@ unaligned
 15579 0a8e 03CC     		ldmia	r4!, {r0, r1}
 15580 0a90 2861     		str	r0, [r5, #16]	@ unaligned
 15581 0a92 6961     		str	r1, [r5, #20]	@ unaligned
 15582 0a94 2378     		ldrb	r3, [r4]
 15583 0a96 2B76     		strb	r3, [r5, #24]
2070:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15584              		.loc 1 2070 0
 15585 0a98 D7F88430 		ldr	r3, [r7, #132]
 15586 0a9c 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15587 0aa0 032B     		cmp	r3, #3
 15588 0aa2 4ED0     		beq	.L603
2071:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15589              		.loc 1 2071 0
 15590 0aa4 D7F88430 		ldr	r3, [r7, #132]
 15591 0aa8 DB68     		ldr	r3, [r3, #12]
 15592 0aaa 1846     		mov	r0, r3
 15593 0aac FFF7FEFF 		bl	__aeabi_i2d
 15594 0ab0 4FF00002 		mov	r2, #0
 15595 0ab4 9A4B     		ldr	r3, .L674
 15596 0ab6 FFF7FEFF 		bl	__aeabi_ddiv
 15597 0aba 0346     		mov	r3, r0
 15598 0abc 0C46     		mov	r4, r1
 15599 0abe 07F11C00 		add	r0, r7, #28
 15600 0ac2 1A46     		mov	r2, r3
 15601 0ac4 2346     		mov	r3, r4
 15602 0ac6 9749     		ldr	r1, .L674+4
 15603 0ac8 FFF7FEFF 		bl	sprintf
2072:..\src/command_processing.c ****                 strcat(info_string, str);
 15604              		.loc 1 2072 0
 15605 0acc 07F11C03 		add	r3, r7, #28
 15606 0ad0 1946     		mov	r1, r3
 15607 0ad2 7869     		ldr	r0, [r7, #20]
 15608 0ad4 FFF7FEFF 		bl	strcat
2073:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 15609              		.loc 1 2073 0
 15610 0ad8 D7F88430 		ldr	r3, [r7, #132]
 15611 0adc 1B69     		ldr	r3, [r3, #16]
 15612 0ade 1846     		mov	r0, r3
 15613 0ae0 FFF7FEFF 		bl	__aeabi_i2d
 15614 0ae4 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 350


 15615 0ae8 8D4B     		ldr	r3, .L674
 15616 0aea FFF7FEFF 		bl	__aeabi_ddiv
 15617 0aee 0346     		mov	r3, r0
 15618 0af0 0C46     		mov	r4, r1
 15619 0af2 07F11C00 		add	r0, r7, #28
 15620 0af6 1A46     		mov	r2, r3
 15621 0af8 2346     		mov	r3, r4
 15622 0afa 8B49     		ldr	r1, .L674+8
 15623 0afc FFF7FEFF 		bl	sprintf
2074:..\src/command_processing.c ****                 strcat(info_string, str);
 15624              		.loc 1 2074 0
 15625 0b00 07F11C03 		add	r3, r7, #28
 15626 0b04 1946     		mov	r1, r3
 15627 0b06 7869     		ldr	r0, [r7, #20]
 15628 0b08 FFF7FEFF 		bl	strcat
2075:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15629              		.loc 1 2075 0
 15630 0b0c D7F88430 		ldr	r3, [r7, #132]
 15631 0b10 5B69     		ldr	r3, [r3, #20]
 15632 0b12 1846     		mov	r0, r3
 15633 0b14 FFF7FEFF 		bl	__aeabi_i2d
 15634 0b18 4FF00002 		mov	r2, #0
 15635 0b1c 804B     		ldr	r3, .L674
 15636 0b1e FFF7FEFF 		bl	__aeabi_ddiv
 15637 0b22 0346     		mov	r3, r0
 15638 0b24 0C46     		mov	r4, r1
 15639 0b26 07F11C00 		add	r0, r7, #28
 15640 0b2a 1A46     		mov	r2, r3
 15641 0b2c 2346     		mov	r3, r4
 15642 0b2e 7F49     		ldr	r1, .L674+12
 15643 0b30 FFF7FEFF 		bl	sprintf
2076:..\src/command_processing.c ****                 strcat(info_string, str);
 15644              		.loc 1 2076 0
 15645 0b34 07F11C03 		add	r3, r7, #28
 15646 0b38 1946     		mov	r1, r3
 15647 0b3a 7869     		ldr	r0, [r7, #20]
 15648 0b3c FFF7FEFF 		bl	strcat
 15649 0b40 4DE0     		b	.L604
 15650              	.L603:
2077:..\src/command_processing.c **** 
2078:..\src/command_processing.c ****             }
2079:..\src/command_processing.c ****             else {
2080:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15651              		.loc 1 2080 0
 15652 0b42 D7F88430 		ldr	r3, [r7, #132]
 15653 0b46 5B6A     		ldr	r3, [r3, #36]
 15654 0b48 1846     		mov	r0, r3
 15655 0b4a FFF7FEFF 		bl	__aeabi_i2d
 15656 0b4e 4FF00002 		mov	r2, #0
 15657 0b52 734B     		ldr	r3, .L674
 15658 0b54 FFF7FEFF 		bl	__aeabi_ddiv
 15659 0b58 0346     		mov	r3, r0
 15660 0b5a 0C46     		mov	r4, r1
 15661 0b5c 07F11C00 		add	r0, r7, #28
 15662 0b60 1A46     		mov	r2, r3
 15663 0b62 2346     		mov	r3, r4
 15664 0b64 6F49     		ldr	r1, .L674+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 351


 15665 0b66 FFF7FEFF 		bl	sprintf
2081:..\src/command_processing.c ****                 strcat(info_string, str);
 15666              		.loc 1 2081 0
 15667 0b6a 07F11C03 		add	r3, r7, #28
 15668 0b6e 1946     		mov	r1, r3
 15669 0b70 7869     		ldr	r0, [r7, #20]
 15670 0b72 FFF7FEFF 		bl	strcat
2082:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15671              		.loc 1 2082 0
 15672 0b76 D7F88430 		ldr	r3, [r7, #132]
 15673 0b7a 9B6A     		ldr	r3, [r3, #40]
 15674 0b7c 1846     		mov	r0, r3
 15675 0b7e FFF7FEFF 		bl	__aeabi_i2d
 15676 0b82 4FF00002 		mov	r2, #0
 15677 0b86 664B     		ldr	r3, .L674
 15678 0b88 FFF7FEFF 		bl	__aeabi_ddiv
 15679 0b8c 0346     		mov	r3, r0
 15680 0b8e 0C46     		mov	r4, r1
 15681 0b90 07F11C00 		add	r0, r7, #28
 15682 0b94 1A46     		mov	r2, r3
 15683 0b96 2346     		mov	r3, r4
 15684 0b98 6349     		ldr	r1, .L674+8
 15685 0b9a FFF7FEFF 		bl	sprintf
2083:..\src/command_processing.c ****                 strcat(info_string, str);
 15686              		.loc 1 2083 0
 15687 0b9e 07F11C03 		add	r3, r7, #28
 15688 0ba2 1946     		mov	r1, r3
 15689 0ba4 7869     		ldr	r0, [r7, #20]
 15690 0ba6 FFF7FEFF 		bl	strcat
2084:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15691              		.loc 1 2084 0
 15692 0baa D7F88430 		ldr	r3, [r7, #132]
 15693 0bae DB6A     		ldr	r3, [r3, #44]
 15694 0bb0 1846     		mov	r0, r3
 15695 0bb2 FFF7FEFF 		bl	__aeabi_i2d
 15696 0bb6 4FF00002 		mov	r2, #0
 15697 0bba 594B     		ldr	r3, .L674
 15698 0bbc FFF7FEFF 		bl	__aeabi_ddiv
 15699 0bc0 0346     		mov	r3, r0
 15700 0bc2 0C46     		mov	r4, r1
 15701 0bc4 07F11C00 		add	r0, r7, #28
 15702 0bc8 1A46     		mov	r2, r3
 15703 0bca 2346     		mov	r3, r4
 15704 0bcc 5749     		ldr	r1, .L674+12
 15705 0bce FFF7FEFF 		bl	sprintf
2085:..\src/command_processing.c ****                 strcat(info_string, str);
 15706              		.loc 1 2085 0
 15707 0bd2 07F11C03 		add	r3, r7, #28
 15708 0bd6 1946     		mov	r1, r3
 15709 0bd8 7869     		ldr	r0, [r7, #20]
 15710 0bda FFF7FEFF 		bl	strcat
 15711              	.L604:
2086:..\src/command_processing.c ****             }
2087:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15712              		.loc 1 2087 0
 15713 0bde D7F88430 		ldr	r3, [r7, #132]
 15714 0be2 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 352


 15715 0be6 012B     		cmp	r3, #1
 15716 0be8 14D1     		bne	.L605
2088:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 15717              		.loc 1 2088 0
 15718 0bea 7869     		ldr	r0, [r7, #20]
 15719 0bec FFF7FEFF 		bl	strlen
 15720 0bf0 0346     		mov	r3, r0
 15721 0bf2 1A46     		mov	r2, r3
 15722 0bf4 7B69     		ldr	r3, [r7, #20]
 15723 0bf6 1344     		add	r3, r3, r2
 15724 0bf8 4E4A     		ldr	r2, .L674+20
 15725 0bfa 1D46     		mov	r5, r3
 15726 0bfc 1446     		mov	r4, r2
 15727 0bfe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15728 0c00 2860     		str	r0, [r5]	@ unaligned
 15729 0c02 6960     		str	r1, [r5, #4]	@ unaligned
 15730 0c04 AA60     		str	r2, [r5, #8]	@ unaligned
 15731 0c06 EB60     		str	r3, [r5, #12]	@ unaligned
 15732 0c08 03CC     		ldmia	r4!, {r0, r1}
 15733 0c0a 2861     		str	r0, [r5, #16]	@ unaligned
 15734 0c0c 6961     		str	r1, [r5, #20]	@ unaligned
 15735 0c0e 2388     		ldrh	r3, [r4]	@ unaligned
 15736 0c10 2B83     		strh	r3, [r5, #24]	@ unaligned
 15737 0c12 13E0     		b	.L606
 15738              	.L605:
2089:..\src/command_processing.c ****             else
2090:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 15739              		.loc 1 2090 0
 15740 0c14 7869     		ldr	r0, [r7, #20]
 15741 0c16 FFF7FEFF 		bl	strlen
 15742 0c1a 0346     		mov	r3, r0
 15743 0c1c 1A46     		mov	r2, r3
 15744 0c1e 7B69     		ldr	r3, [r7, #20]
 15745 0c20 1344     		add	r3, r3, r2
 15746 0c22 454A     		ldr	r2, .L674+24
 15747 0c24 1D46     		mov	r5, r3
 15748 0c26 1446     		mov	r4, r2
 15749 0c28 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15750 0c2a 2860     		str	r0, [r5]	@ unaligned
 15751 0c2c 6960     		str	r1, [r5, #4]	@ unaligned
 15752 0c2e AA60     		str	r2, [r5, #8]	@ unaligned
 15753 0c30 EB60     		str	r3, [r5, #12]	@ unaligned
 15754 0c32 03CC     		ldmia	r4!, {r0, r1}
 15755 0c34 2861     		str	r0, [r5, #16]	@ unaligned
 15756 0c36 6961     		str	r1, [r5, #20]	@ unaligned
 15757 0c38 2378     		ldrb	r3, [r4]
 15758 0c3a 2B76     		strb	r3, [r5, #24]
 15759              	.L606:
2091:..\src/command_processing.c **** 
2092:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15760              		.loc 1 2092 0
 15761 0c3c D7F88430 		ldr	r3, [r7, #132]
 15762 0c40 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15763 0c44 072B     		cmp	r3, #7
 15764 0c46 00F2EA80 		bhi	.L607
 15765 0c4a 01A2     		adr	r2, .L609
 15766 0c4c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 353


 15767              		.p2align 2
 15768              	.L609:
 15769 0c50 710C0000 		.word	.L608+1
 15770 0c54 950C0000 		.word	.L610+1
 15771 0c58 BD0C0000 		.word	.L611+1
 15772 0c5c EF0C0000 		.word	.L612+1
 15773 0c60 4D0D0000 		.word	.L613+1
 15774 0c64 7B0D0000 		.word	.L614+1
 15775 0c68 AB0D0000 		.word	.L615+1
 15776 0c6c D90D0000 		.word	.L616+1
 15777              		.p2align 1
 15778              	.L608:
2093:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2094:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15779              		.loc 1 2094 0
 15780 0c70 7869     		ldr	r0, [r7, #20]
 15781 0c72 FFF7FEFF 		bl	strlen
 15782 0c76 0346     		mov	r3, r0
 15783 0c78 1A46     		mov	r2, r3
 15784 0c7a 7B69     		ldr	r3, [r7, #20]
 15785 0c7c 1344     		add	r3, r3, r2
 15786 0c7e 2F4A     		ldr	r2, .L674+28
 15787 0c80 1D46     		mov	r5, r3
 15788 0c82 1446     		mov	r4, r2
 15789 0c84 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15790 0c86 2860     		str	r0, [r5]	@ unaligned
 15791 0c88 6960     		str	r1, [r5, #4]	@ unaligned
 15792 0c8a AA60     		str	r2, [r5, #8]	@ unaligned
 15793 0c8c EB60     		str	r3, [r5, #12]	@ unaligned
 15794 0c8e 2388     		ldrh	r3, [r4]	@ unaligned
 15795 0c90 2B82     		strh	r3, [r5, #16]	@ unaligned
2095:..\src/command_processing.c ****                     break;
 15796              		.loc 1 2095 0
 15797 0c92 C4E0     		b	.L607
 15798              	.L610:
2096:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2097:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15799              		.loc 1 2097 0
 15800 0c94 7869     		ldr	r0, [r7, #20]
 15801 0c96 FFF7FEFF 		bl	strlen
 15802 0c9a 0346     		mov	r3, r0
 15803 0c9c 1A46     		mov	r2, r3
 15804 0c9e 7B69     		ldr	r3, [r7, #20]
 15805 0ca0 1344     		add	r3, r3, r2
 15806 0ca2 274A     		ldr	r2, .L674+32
 15807 0ca4 1D46     		mov	r5, r3
 15808 0ca6 1446     		mov	r4, r2
 15809 0ca8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15810 0caa 2860     		str	r0, [r5]	@ unaligned
 15811 0cac 6960     		str	r1, [r5, #4]	@ unaligned
 15812 0cae AA60     		str	r2, [r5, #8]	@ unaligned
 15813 0cb0 EB60     		str	r3, [r5, #12]	@ unaligned
 15814 0cb2 2068     		ldr	r0, [r4]	@ unaligned
 15815 0cb4 2861     		str	r0, [r5, #16]	@ unaligned
 15816 0cb6 2379     		ldrb	r3, [r4, #4]
 15817 0cb8 2B75     		strb	r3, [r5, #20]
2098:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 354


 15818              		.loc 1 2098 0
 15819 0cba B0E0     		b	.L607
 15820              	.L611:
2099:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2100:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 15821              		.loc 1 2100 0
 15822 0cbc 7869     		ldr	r0, [r7, #20]
 15823 0cbe FFF7FEFF 		bl	strlen
 15824 0cc2 0346     		mov	r3, r0
 15825 0cc4 1A46     		mov	r2, r3
 15826 0cc6 7B69     		ldr	r3, [r7, #20]
 15827 0cc8 1344     		add	r3, r3, r2
 15828 0cca 1E4A     		ldr	r2, .L674+36
 15829 0ccc 1D46     		mov	r5, r3
 15830 0cce 1446     		mov	r4, r2
 15831 0cd0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15832 0cd2 2860     		str	r0, [r5]	@ unaligned
 15833 0cd4 6960     		str	r1, [r5, #4]	@ unaligned
 15834 0cd6 AA60     		str	r2, [r5, #8]	@ unaligned
 15835 0cd8 EB60     		str	r3, [r5, #12]	@ unaligned
 15836 0cda 07CC     		ldmia	r4!, {r0, r1, r2}
 15837 0cdc 2861     		str	r0, [r5, #16]	@ unaligned
 15838 0cde 6961     		str	r1, [r5, #20]	@ unaligned
 15839 0ce0 AA61     		str	r2, [r5, #24]	@ unaligned
 15840 0ce2 2388     		ldrh	r3, [r4]	@ unaligned
 15841 0ce4 A278     		ldrb	r2, [r4, #2]
 15842 0ce6 AB83     		strh	r3, [r5, #28]	@ unaligned
 15843 0ce8 1346     		mov	r3, r2
 15844 0cea AB77     		strb	r3, [r5, #30]
2101:..\src/command_processing.c ****                     break;
 15845              		.loc 1 2101 0
 15846 0cec 97E0     		b	.L607
 15847              	.L612:
2102:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2103:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 15848              		.loc 1 2103 0
 15849 0cee 7869     		ldr	r0, [r7, #20]
 15850 0cf0 FFF7FEFF 		bl	strlen
 15851 0cf4 0346     		mov	r3, r0
 15852 0cf6 1A46     		mov	r2, r3
 15853 0cf8 7B69     		ldr	r3, [r7, #20]
 15854 0cfa 1344     		add	r3, r3, r2
 15855 0cfc 124A     		ldr	r2, .L674+40
 15856 0cfe 1D46     		mov	r5, r3
 15857 0d00 1446     		mov	r4, r2
 15858 0d02 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15859 0d04 2860     		str	r0, [r5]	@ unaligned
 15860 0d06 6960     		str	r1, [r5, #4]	@ unaligned
 15861 0d08 AA60     		str	r2, [r5, #8]	@ unaligned
 15862 0d0a EB60     		str	r3, [r5, #12]	@ unaligned
 15863 0d0c 03CC     		ldmia	r4!, {r0, r1}
 15864 0d0e 2861     		str	r0, [r5, #16]	@ unaligned
 15865 0d10 6961     		str	r1, [r5, #20]	@ unaligned
 15866 0d12 2388     		ldrh	r3, [r4]	@ unaligned
 15867 0d14 A278     		ldrb	r2, [r4, #2]
 15868 0d16 2B83     		strh	r3, [r5, #24]	@ unaligned
 15869 0d18 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 355


 15870 0d1a AB76     		strb	r3, [r5, #26]
2104:..\src/command_processing.c ****                     break;
 15871              		.loc 1 2104 0
 15872 0d1c 7FE0     		b	.L607
 15873              	.L675:
 15874 0d1e 00BF     		.align	2
 15875              	.L674:
 15876 0d20 0000F040 		.word	1089470464
 15877 0d24 60140000 		.word	.LC192
 15878 0d28 6C140000 		.word	.LC193
 15879 0d2c 78140000 		.word	.LC194
 15880 0d30 84140000 		.word	.LC195
 15881 0d34 A0140000 		.word	.LC196
 15882 0d38 BC140000 		.word	.LC197
 15883 0d3c D8140000 		.word	.LC198
 15884 0d40 EC140000 		.word	.LC199
 15885 0d44 04150000 		.word	.LC200
 15886 0d48 24150000 		.word	.LC201
 15887              	.L613:
2105:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2106:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15888              		.loc 1 2106 0
 15889 0d4c 7869     		ldr	r0, [r7, #20]
 15890 0d4e FFF7FEFF 		bl	strlen
 15891 0d52 0346     		mov	r3, r0
 15892 0d54 1A46     		mov	r2, r3
 15893 0d56 7B69     		ldr	r3, [r7, #20]
 15894 0d58 1344     		add	r3, r3, r2
 15895 0d5a CF4A     		ldr	r2, .L676
 15896 0d5c 1C46     		mov	r4, r3
 15897 0d5e 1546     		mov	r5, r2
 15898 0d60 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15899 0d62 2060     		str	r0, [r4]	@ unaligned
 15900 0d64 6160     		str	r1, [r4, #4]	@ unaligned
 15901 0d66 A260     		str	r2, [r4, #8]	@ unaligned
 15902 0d68 E360     		str	r3, [r4, #12]	@ unaligned
 15903 0d6a 2868     		ldr	r0, [r5]	@ unaligned
 15904 0d6c 2061     		str	r0, [r4, #16]	@ unaligned
 15905 0d6e AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15906 0d70 AA79     		ldrb	r2, [r5, #6]
 15907 0d72 A382     		strh	r3, [r4, #20]	@ unaligned
 15908 0d74 1346     		mov	r3, r2
 15909 0d76 A375     		strb	r3, [r4, #22]
2107:..\src/command_processing.c ****                     break;
 15910              		.loc 1 2107 0
 15911 0d78 51E0     		b	.L607
 15912              	.L614:
2108:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2109:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15913              		.loc 1 2109 0
 15914 0d7a 7869     		ldr	r0, [r7, #20]
 15915 0d7c FFF7FEFF 		bl	strlen
 15916 0d80 0346     		mov	r3, r0
 15917 0d82 1A46     		mov	r2, r3
 15918 0d84 7B69     		ldr	r3, [r7, #20]
 15919 0d86 1344     		add	r3, r3, r2
 15920 0d88 C44A     		ldr	r2, .L676+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 356


 15921 0d8a 1D46     		mov	r5, r3
 15922 0d8c 1446     		mov	r4, r2
 15923 0d8e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15924 0d90 2860     		str	r0, [r5]	@ unaligned
 15925 0d92 6960     		str	r1, [r5, #4]	@ unaligned
 15926 0d94 AA60     		str	r2, [r5, #8]	@ unaligned
 15927 0d96 EB60     		str	r3, [r5, #12]	@ unaligned
 15928 0d98 03CC     		ldmia	r4!, {r0, r1}
 15929 0d9a 2861     		str	r0, [r5, #16]	@ unaligned
 15930 0d9c 6961     		str	r1, [r5, #20]	@ unaligned
 15931 0d9e 2388     		ldrh	r3, [r4]	@ unaligned
 15932 0da0 A278     		ldrb	r2, [r4, #2]
 15933 0da2 2B83     		strh	r3, [r5, #24]	@ unaligned
 15934 0da4 1346     		mov	r3, r2
 15935 0da6 AB76     		strb	r3, [r5, #26]
2110:..\src/command_processing.c ****                     break;
 15936              		.loc 1 2110 0
 15937 0da8 39E0     		b	.L607
 15938              	.L615:
2111:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2112:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15939              		.loc 1 2112 0
 15940 0daa 7869     		ldr	r0, [r7, #20]
 15941 0dac FFF7FEFF 		bl	strlen
 15942 0db0 0346     		mov	r3, r0
 15943 0db2 1A46     		mov	r2, r3
 15944 0db4 7B69     		ldr	r3, [r7, #20]
 15945 0db6 1344     		add	r3, r3, r2
 15946 0db8 B94A     		ldr	r2, .L676+8
 15947 0dba 1C46     		mov	r4, r3
 15948 0dbc 1546     		mov	r5, r2
 15949 0dbe 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15950 0dc0 2060     		str	r0, [r4]	@ unaligned
 15951 0dc2 6160     		str	r1, [r4, #4]	@ unaligned
 15952 0dc4 A260     		str	r2, [r4, #8]	@ unaligned
 15953 0dc6 E360     		str	r3, [r4, #12]	@ unaligned
 15954 0dc8 2868     		ldr	r0, [r5]	@ unaligned
 15955 0dca 2061     		str	r0, [r4, #16]	@ unaligned
 15956 0dcc AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15957 0dce AA79     		ldrb	r2, [r5, #6]
 15958 0dd0 A382     		strh	r3, [r4, #20]	@ unaligned
 15959 0dd2 1346     		mov	r3, r2
 15960 0dd4 A375     		strb	r3, [r4, #22]
2113:..\src/command_processing.c ****                     break;
 15961              		.loc 1 2113 0
 15962 0dd6 22E0     		b	.L607
 15963              	.L616:
2114:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2115:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15964              		.loc 1 2115 0
 15965 0dd8 7869     		ldr	r0, [r7, #20]
 15966 0dda FFF7FEFF 		bl	strlen
 15967 0dde 0346     		mov	r3, r0
 15968 0de0 1A46     		mov	r2, r3
 15969 0de2 7B69     		ldr	r3, [r7, #20]
 15970 0de4 1344     		add	r3, r3, r2
 15971 0de6 AF4A     		ldr	r2, .L676+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 357


 15972 0de8 1546     		mov	r5, r2
 15973 0dea 9E46     		mov	lr, r3
 15974 0dec 05F1200C 		add	ip, r5, #32
 15975              	.L617:
 15976 0df0 7446     		mov	r4, lr
 15977 0df2 2E46     		mov	r6, r5
 15978 0df4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15979 0df6 2060     		str	r0, [r4]	@ unaligned
 15980 0df8 6160     		str	r1, [r4, #4]	@ unaligned
 15981 0dfa A260     		str	r2, [r4, #8]	@ unaligned
 15982 0dfc E360     		str	r3, [r4, #12]	@ unaligned
 15983 0dfe 1035     		adds	r5, r5, #16
 15984 0e00 0EF1100E 		add	lr, lr, #16
 15985 0e04 6545     		cmp	r5, ip
 15986 0e06 F3D1     		bne	.L617
 15987 0e08 7446     		mov	r4, lr
 15988 0e0a 2B46     		mov	r3, r5
 15989 0e0c 07CB     		ldmia	r3!, {r0, r1, r2}
 15990 0e0e 2060     		str	r0, [r4]	@ unaligned
 15991 0e10 6160     		str	r1, [r4, #4]	@ unaligned
 15992 0e12 A260     		str	r2, [r4, #8]	@ unaligned
 15993 0e14 1A88     		ldrh	r2, [r3]	@ unaligned
 15994 0e16 9B78     		ldrb	r3, [r3, #2]
 15995 0e18 A281     		strh	r2, [r4, #12]	@ unaligned
 15996 0e1a A373     		strb	r3, [r4, #14]
2116:..\src/command_processing.c ****                     break;
 15997              		.loc 1 2116 0
 15998 0e1c 00BF     		nop
 15999              	.L607:
2117:..\src/command_processing.c ****             }
2118:..\src/command_processing.c **** 
2119:..\src/command_processing.c ****             switch(MOT->control_mode) {
 16000              		.loc 1 2119 0
 16001 0e1e D7F88430 		ldr	r3, [r7, #132]
 16002 0e22 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 16003 0e26 032B     		cmp	r3, #3
 16004 0e28 63D8     		bhi	.L667
 16005 0e2a 01A2     		adr	r2, .L620
 16006 0e2c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 16007              		.p2align 2
 16008              	.L620:
 16009 0e30 410E0000 		.word	.L619+1
 16010 0e34 6B0E0000 		.word	.L621+1
 16011 0e38 8F0E0000 		.word	.L622+1
 16012 0e3c B50E0000 		.word	.L623+1
 16013              		.p2align 1
 16014              	.L619:
2120:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2121:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 16015              		.loc 1 2121 0
 16016 0e40 7869     		ldr	r0, [r7, #20]
 16017 0e42 FFF7FEFF 		bl	strlen
 16018 0e46 0346     		mov	r3, r0
 16019 0e48 1A46     		mov	r2, r3
 16020 0e4a 7B69     		ldr	r3, [r7, #20]
 16021 0e4c 1344     		add	r3, r3, r2
 16022 0e4e 964A     		ldr	r2, .L676+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 358


 16023 0e50 1D46     		mov	r5, r3
 16024 0e52 1446     		mov	r4, r2
 16025 0e54 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16026 0e56 2860     		str	r0, [r5]	@ unaligned
 16027 0e58 6960     		str	r1, [r5, #4]	@ unaligned
 16028 0e5a AA60     		str	r2, [r5, #8]	@ unaligned
 16029 0e5c EB60     		str	r3, [r5, #12]	@ unaligned
 16030 0e5e 03CC     		ldmia	r4!, {r0, r1}
 16031 0e60 2861     		str	r0, [r5, #16]	@ unaligned
 16032 0e62 6961     		str	r1, [r5, #20]	@ unaligned
 16033 0e64 2378     		ldrb	r3, [r4]
 16034 0e66 2B76     		strb	r3, [r5, #24]
2122:..\src/command_processing.c ****                     break;
 16035              		.loc 1 2122 0
 16036 0e68 44E0     		b	.L624
 16037              	.L621:
2123:..\src/command_processing.c ****                 case CONTROL_PWM:
2124:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 16038              		.loc 1 2124 0
 16039 0e6a 7869     		ldr	r0, [r7, #20]
 16040 0e6c FFF7FEFF 		bl	strlen
 16041 0e70 0346     		mov	r3, r0
 16042 0e72 1A46     		mov	r2, r3
 16043 0e74 7B69     		ldr	r3, [r7, #20]
 16044 0e76 1344     		add	r3, r3, r2
 16045 0e78 8C4A     		ldr	r2, .L676+20
 16046 0e7a 1D46     		mov	r5, r3
 16047 0e7c 1446     		mov	r4, r2
 16048 0e7e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16049 0e80 2860     		str	r0, [r5]	@ unaligned
 16050 0e82 6960     		str	r1, [r5, #4]	@ unaligned
 16051 0e84 AA60     		str	r2, [r5, #8]	@ unaligned
 16052 0e86 EB60     		str	r3, [r5, #12]	@ unaligned
 16053 0e88 2068     		ldr	r0, [r4]	@ unaligned
 16054 0e8a 2861     		str	r0, [r5, #16]	@ unaligned
2125:..\src/command_processing.c ****                     break;
 16055              		.loc 1 2125 0
 16056 0e8c 32E0     		b	.L624
 16057              	.L622:
2126:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2127:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 16058              		.loc 1 2127 0
 16059 0e8e 7869     		ldr	r0, [r7, #20]
 16060 0e90 FFF7FEFF 		bl	strlen
 16061 0e94 0346     		mov	r3, r0
 16062 0e96 1A46     		mov	r2, r3
 16063 0e98 7B69     		ldr	r3, [r7, #20]
 16064 0e9a 1344     		add	r3, r3, r2
 16065 0e9c 844A     		ldr	r2, .L676+24
 16066 0e9e 1D46     		mov	r5, r3
 16067 0ea0 1446     		mov	r4, r2
 16068 0ea2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16069 0ea4 2860     		str	r0, [r5]	@ unaligned
 16070 0ea6 6960     		str	r1, [r5, #4]	@ unaligned
 16071 0ea8 AA60     		str	r2, [r5, #8]	@ unaligned
 16072 0eaa EB60     		str	r3, [r5, #12]	@ unaligned
 16073 0eac 03CC     		ldmia	r4!, {r0, r1}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 359


 16074 0eae 2861     		str	r0, [r5, #16]	@ unaligned
 16075 0eb0 6961     		str	r1, [r5, #20]	@ unaligned
2128:..\src/command_processing.c ****                     break;
 16076              		.loc 1 2128 0
 16077 0eb2 1FE0     		b	.L624
 16078              	.L623:
2129:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2130:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 16079              		.loc 1 2130 0
 16080 0eb4 7869     		ldr	r0, [r7, #20]
 16081 0eb6 FFF7FEFF 		bl	strlen
 16082 0eba 0346     		mov	r3, r0
 16083 0ebc 1A46     		mov	r2, r3
 16084 0ebe 7B69     		ldr	r3, [r7, #20]
 16085 0ec0 1344     		add	r3, r3, r2
 16086 0ec2 7C4A     		ldr	r2, .L676+28
 16087 0ec4 1446     		mov	r4, r2
 16088 0ec6 9E46     		mov	lr, r3
 16089 0ec8 04F1200C 		add	ip, r4, #32
 16090              	.L625:
 16091 0ecc 7546     		mov	r5, lr
 16092 0ece 2646     		mov	r6, r4
 16093 0ed0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16094 0ed2 2860     		str	r0, [r5]	@ unaligned
 16095 0ed4 6960     		str	r1, [r5, #4]	@ unaligned
 16096 0ed6 AA60     		str	r2, [r5, #8]	@ unaligned
 16097 0ed8 EB60     		str	r3, [r5, #12]	@ unaligned
 16098 0eda 1034     		adds	r4, r4, #16
 16099 0edc 0EF1100E 		add	lr, lr, #16
 16100 0ee0 6445     		cmp	r4, ip
 16101 0ee2 F3D1     		bne	.L625
 16102 0ee4 7346     		mov	r3, lr
 16103 0ee6 2246     		mov	r2, r4
 16104 0ee8 1068     		ldr	r0, [r2]	@ unaligned
 16105 0eea 1860     		str	r0, [r3]	@ unaligned
 16106 0eec 1279     		ldrb	r2, [r2, #4]
 16107 0eee 1A71     		strb	r2, [r3, #4]
2131:..\src/command_processing.c ****                     break;
 16108              		.loc 1 2131 0
 16109 0ef0 00E0     		b	.L624
 16110              	.L667:
2132:..\src/command_processing.c ****                 default:
2133:..\src/command_processing.c ****                     break;
 16111              		.loc 1 2133 0
 16112 0ef2 00BF     		nop
 16113              	.L624:
2134:..\src/command_processing.c ****             }
2135:..\src/command_processing.c **** 
2136:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 16114              		.loc 1 2136 0
 16115 0ef4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16116 0ef8 D7F88C10 		ldr	r1, [r7, #140]
 16117 0efc 1346     		mov	r3, r2
 16118 0efe 5B00     		lsls	r3, r3, #1
 16119 0f00 1344     		add	r3, r3, r2
 16120 0f02 1B01     		lsls	r3, r3, #4
 16121 0f04 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 360


 16122 0f06 03F5D873 		add	r3, r3, #432
 16123 0f0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16124 0f0c 002B     		cmp	r3, #0
 16125 0f0e 1CD0     		beq	.L626
2137:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 16126              		.loc 1 2137 0
 16127 0f10 7869     		ldr	r0, [r7, #20]
 16128 0f12 FFF7FEFF 		bl	strlen
 16129 0f16 0346     		mov	r3, r0
 16130 0f18 1A46     		mov	r2, r3
 16131 0f1a 7B69     		ldr	r3, [r7, #20]
 16132 0f1c 1344     		add	r3, r3, r2
 16133 0f1e 664A     		ldr	r2, .L676+32
 16134 0f20 1446     		mov	r4, r2
 16135 0f22 9E46     		mov	lr, r3
 16136 0f24 04F1200C 		add	ip, r4, #32
 16137              	.L627:
 16138 0f28 7546     		mov	r5, lr
 16139 0f2a 2646     		mov	r6, r4
 16140 0f2c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16141 0f2e 2860     		str	r0, [r5]	@ unaligned
 16142 0f30 6960     		str	r1, [r5, #4]	@ unaligned
 16143 0f32 AA60     		str	r2, [r5, #8]	@ unaligned
 16144 0f34 EB60     		str	r3, [r5, #12]	@ unaligned
 16145 0f36 1034     		adds	r4, r4, #16
 16146 0f38 0EF1100E 		add	lr, lr, #16
 16147 0f3c 6445     		cmp	r4, ip
 16148 0f3e F3D1     		bne	.L627
 16149 0f40 7346     		mov	r3, lr
 16150 0f42 2246     		mov	r2, r4
 16151 0f44 1278     		ldrb	r2, [r2]
 16152 0f46 1A70     		strb	r2, [r3]
 16153 0f48 13E0     		b	.L628
 16154              	.L626:
2138:..\src/command_processing.c ****             else
2139:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 16155              		.loc 1 2139 0
 16156 0f4a 7869     		ldr	r0, [r7, #20]
 16157 0f4c FFF7FEFF 		bl	strlen
 16158 0f50 0346     		mov	r3, r0
 16159 0f52 1A46     		mov	r2, r3
 16160 0f54 7B69     		ldr	r3, [r7, #20]
 16161 0f56 1344     		add	r3, r3, r2
 16162 0f58 584A     		ldr	r2, .L676+36
 16163 0f5a 1C46     		mov	r4, r3
 16164 0f5c 1546     		mov	r5, r2
 16165 0f5e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16166 0f60 2060     		str	r0, [r4]	@ unaligned
 16167 0f62 6160     		str	r1, [r4, #4]	@ unaligned
 16168 0f64 A260     		str	r2, [r4, #8]	@ unaligned
 16169 0f66 E360     		str	r3, [r4, #12]	@ unaligned
 16170 0f68 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16171 0f6a 2061     		str	r0, [r4, #16]	@ unaligned
 16172 0f6c 6161     		str	r1, [r4, #20]	@ unaligned
 16173 0f6e A261     		str	r2, [r4, #24]	@ unaligned
 16174 0f70 E361     		str	r3, [r4, #28]	@ unaligned
 16175              	.L628:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 361


2140:..\src/command_processing.c **** 
2141:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 16176              		.loc 1 2141 0
 16177 0f72 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16178 0f76 D7F88C10 		ldr	r1, [r7, #140]
 16179 0f7a 1346     		mov	r3, r2
 16180 0f7c 5B00     		lsls	r3, r3, #1
 16181 0f7e 1344     		add	r3, r3, r2
 16182 0f80 1B01     		lsls	r3, r3, #4
 16183 0f82 0B44     		add	r3, r3, r1
 16184 0f84 03F5DA73 		add	r3, r3, #436
 16185 0f88 93F90030 		ldrsb	r3, [r3]
 16186 0f8c 1A46     		mov	r2, r3
 16187 0f8e 07F11C03 		add	r3, r7, #28
 16188 0f92 4B49     		ldr	r1, .L676+40
 16189 0f94 1846     		mov	r0, r3
 16190 0f96 FFF7FEFF 		bl	sprintf
2142:..\src/command_processing.c ****             strcat(info_string, str);
 16191              		.loc 1 2142 0
 16192 0f9a 07F11C03 		add	r3, r7, #28
 16193 0f9e 1946     		mov	r1, r3
 16194 0fa0 7869     		ldr	r0, [r7, #20]
 16195 0fa2 FFF7FEFF 		bl	strcat
2143:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2144:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
2145:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
2146:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
2147:..\src/command_processing.c ****                 strcat(info_string, str);
2148:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
2149:..\src/command_processing.c ****                     strcat(info_string, ", ");
2150:..\src/command_processing.c ****                 }                
2151:..\src/command_processing.c ****             }
2152:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2153:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
2154:..\src/command_processing.c ****             strcat(info_string, str);
2155:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
2156:..\src/command_processing.c ****             strcat(info_string, str);
2157:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
2158:..\src/command_processing.c ****             strcat(info_string, str);
2159:..\src/command_processing.c **** #endif            
2160:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16196              		.loc 1 2160 0
 16197 0fa6 7869     		ldr	r0, [r7, #20]
 16198 0fa8 FFF7FEFF 		bl	strlen
 16199 0fac 0346     		mov	r3, r0
 16200 0fae 1A46     		mov	r2, r3
 16201 0fb0 7B69     		ldr	r3, [r7, #20]
 16202 0fb2 1344     		add	r3, r3, r2
 16203 0fb4 434A     		ldr	r2, .L676+44
 16204 0fb6 1188     		ldrh	r1, [r2]	@ unaligned
 16205 0fb8 9278     		ldrb	r2, [r2, #2]
 16206 0fba 1980     		strh	r1, [r3]	@ unaligned
 16207 0fbc 9A70     		strb	r2, [r3, #2]
2161:..\src/command_processing.c **** 
2162:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 16208              		.loc 1 2162 0
 16209 0fbe 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 362


 16210 0fc0 FFF7FEFF 		bl	strlen
 16211 0fc4 0346     		mov	r3, r0
 16212 0fc6 1A46     		mov	r2, r3
 16213 0fc8 7B69     		ldr	r3, [r7, #20]
 16214 0fca 1344     		add	r3, r3, r2
 16215 0fcc 3E4A     		ldr	r2, .L676+48
 16216 0fce 1D46     		mov	r5, r3
 16217 0fd0 1446     		mov	r4, r2
 16218 0fd2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16219 0fd4 2860     		str	r0, [r5]	@ unaligned
 16220 0fd6 6960     		str	r1, [r5, #4]	@ unaligned
 16221 0fd8 AA60     		str	r2, [r5, #8]	@ unaligned
 16222 0fda EB60     		str	r3, [r5, #12]	@ unaligned
 16223 0fdc 2068     		ldr	r0, [r4]	@ unaligned
 16224 0fde 2861     		str	r0, [r5, #16]	@ unaligned
2163:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16225              		.loc 1 2163 0
 16226 0fe0 0023     		movs	r3, #0
 16227 0fe2 C7F89430 		str	r3, [r7, #148]
 16228 0fe6 30E0     		b	.L629
 16229              	.L631:
2164:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16230              		.loc 1 2164 0
 16231 0fe8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16232 0fec D7F88C10 		ldr	r1, [r7, #140]
 16233 0ff0 1346     		mov	r3, r2
 16234 0ff2 5B00     		lsls	r3, r3, #1
 16235 0ff4 1344     		add	r3, r3, r2
 16236 0ff6 1B01     		lsls	r3, r3, #4
 16237 0ff8 CA18     		adds	r2, r1, r3
 16238 0ffa D7F89430 		ldr	r3, [r7, #148]
 16239 0ffe 1344     		add	r3, r3, r2
 16240 1000 03F29513 		addw	r3, r3, #405
 16241 1004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16242 1006 1A46     		mov	r2, r3
 16243 1008 07F11C03 		add	r3, r7, #28
 16244 100c 2F49     		ldr	r1, .L676+52
 16245 100e 1846     		mov	r0, r3
 16246 1010 FFF7FEFF 		bl	sprintf
2165:..\src/command_processing.c ****                 strcat(info_string, str);
 16247              		.loc 1 2165 0
 16248 1014 07F11C03 		add	r3, r7, #28
 16249 1018 1946     		mov	r1, r3
 16250 101a 7869     		ldr	r0, [r7, #20]
 16251 101c FFF7FEFF 		bl	strcat
2166:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16252              		.loc 1 2166 0
 16253 1020 D7F89430 		ldr	r3, [r7, #148]
 16254 1024 022B     		cmp	r3, #2
 16255 1026 0BD0     		beq	.L630
2167:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16256              		.loc 1 2167 0
 16257 1028 7869     		ldr	r0, [r7, #20]
 16258 102a FFF7FEFF 		bl	strlen
 16259 102e 0346     		mov	r3, r0
 16260 1030 1A46     		mov	r2, r3
 16261 1032 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 363


 16262 1034 1344     		add	r3, r3, r2
 16263 1036 264A     		ldr	r2, .L676+56
 16264 1038 1188     		ldrh	r1, [r2]	@ unaligned
 16265 103a 9278     		ldrb	r2, [r2, #2]
 16266 103c 1980     		strh	r1, [r3]	@ unaligned
 16267 103e 9A70     		strb	r2, [r3, #2]
 16268              	.L630:
2163:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16269              		.loc 1 2163 0 discriminator 2
 16270 1040 D7F89430 		ldr	r3, [r7, #148]
 16271 1044 0133     		adds	r3, r3, #1
 16272 1046 C7F89430 		str	r3, [r7, #148]
 16273              	.L629:
2163:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16274              		.loc 1 2163 0 is_stmt 0 discriminator 1
 16275 104a D7F89430 		ldr	r3, [r7, #148]
 16276 104e 022B     		cmp	r3, #2
 16277 1050 CADD     		ble	.L631
2168:..\src/command_processing.c ****                 }                
2169:..\src/command_processing.c ****             }
2170:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16278              		.loc 1 2170 0 is_stmt 1
 16279 1052 7869     		ldr	r0, [r7, #20]
 16280 1054 FFF7FEFF 		bl	strlen
 16281 1058 0346     		mov	r3, r0
 16282 105a 1A46     		mov	r2, r3
 16283 105c 7B69     		ldr	r3, [r7, #20]
 16284 105e 1344     		add	r3, r3, r2
 16285 1060 184A     		ldr	r2, .L676+44
 16286 1062 1188     		ldrh	r1, [r2]	@ unaligned
 16287 1064 9278     		ldrb	r2, [r2, #2]
 16288 1066 1980     		strh	r1, [r3]	@ unaligned
 16289 1068 9A70     		strb	r2, [r3, #2]
2171:..\src/command_processing.c **** 
2172:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 16290              		.loc 1 2172 0
 16291 106a 7869     		ldr	r0, [r7, #20]
 16292 106c FFF7FEFF 		bl	strlen
 16293 1070 0346     		mov	r3, r0
 16294 1072 1A46     		mov	r2, r3
 16295 1074 7B69     		ldr	r3, [r7, #20]
 16296 1076 1344     		add	r3, r3, r2
 16297 1078 164A     		ldr	r2, .L676+60
 16298 107a 1D46     		mov	r5, r3
 16299 107c 1446     		mov	r4, r2
 16300 107e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16301 1080 2860     		str	r0, [r5]	@ unaligned
 16302 1082 6960     		str	r1, [r5, #4]	@ unaligned
 16303 1084 AA60     		str	r2, [r5, #8]	@ unaligned
 16304 1086 EB60     		str	r3, [r5, #12]	@ unaligned
 16305 1088 2068     		ldr	r0, [r4]	@ unaligned
 16306 108a 2861     		str	r0, [r5, #16]	@ unaligned
 16307 108c 2379     		ldrb	r3, [r4, #4]
 16308 108e 2B75     		strb	r3, [r5, #20]
2173:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16309              		.loc 1 2173 0
 16310 1090 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 364


 16311 1092 C7F89430 		str	r3, [r7, #148]
 16312 1096 5FE0     		b	.L632
 16313              	.L677:
 16314              		.align	2
 16315              	.L676:
 16316 1098 40150000 		.word	.LC202
 16317 109c 58150000 		.word	.LC203
 16318 10a0 74150000 		.word	.LC204
 16319 10a4 8C150000 		.word	.LC205
 16320 10a8 BC150000 		.word	.LC206
 16321 10ac D8150000 		.word	.LC207
 16322 10b0 EC150000 		.word	.LC208
 16323 10b4 04160000 		.word	.LC209
 16324 10b8 2C160000 		.word	.LC210
 16325 10bc 50160000 		.word	.LC211
 16326 10c0 70160000 		.word	.LC212
 16327 10c4 50110000 		.word	.LC152
 16328 10c8 8C160000 		.word	.LC213
 16329 10cc 80130000 		.word	.LC183
 16330 10d0 84130000 		.word	.LC184
 16331 10d4 A0160000 		.word	.LC214
 16332              	.L634:
2174:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16333              		.loc 1 2174 0
 16334 10d8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16335 10dc D7F88C10 		ldr	r1, [r7, #140]
 16336 10e0 1346     		mov	r3, r2
 16337 10e2 5B00     		lsls	r3, r3, #1
 16338 10e4 1344     		add	r3, r3, r2
 16339 10e6 9B00     		lsls	r3, r3, #2
 16340 10e8 D7F89420 		ldr	r2, [r7, #148]
 16341 10ec 1344     		add	r3, r3, r2
 16342 10ee 6633     		adds	r3, r3, #102
 16343 10f0 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16344 10f4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16345 10f8 D7F88C00 		ldr	r0, [r7, #140]
 16346 10fc 1346     		mov	r3, r2
 16347 10fe 5B00     		lsls	r3, r3, #1
 16348 1100 1344     		add	r3, r3, r2
 16349 1102 1B01     		lsls	r3, r3, #4
 16350 1104 C218     		adds	r2, r0, r3
 16351 1106 D7F89430 		ldr	r3, [r7, #148]
 16352 110a 1344     		add	r3, r3, r2
 16353 110c 03F29513 		addw	r3, r3, #405
 16354 1110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16355 1112 41FA03F2 		asr	r2, r1, r3
 16356 1116 07F11C03 		add	r3, r7, #28
 16357 111a 2349     		ldr	r1, .L678
 16358 111c 1846     		mov	r0, r3
 16359 111e FFF7FEFF 		bl	sprintf
2175:..\src/command_processing.c ****                 strcat(info_string, str);
 16360              		.loc 1 2175 0
 16361 1122 07F11C03 		add	r3, r7, #28
 16362 1126 1946     		mov	r1, r3
 16363 1128 7869     		ldr	r0, [r7, #20]
 16364 112a FFF7FEFF 		bl	strcat
2176:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 365


 16365              		.loc 1 2176 0
 16366 112e D7F89430 		ldr	r3, [r7, #148]
 16367 1132 022B     		cmp	r3, #2
 16368 1134 0BD0     		beq	.L633
2177:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16369              		.loc 1 2177 0
 16370 1136 7869     		ldr	r0, [r7, #20]
 16371 1138 FFF7FEFF 		bl	strlen
 16372 113c 0346     		mov	r3, r0
 16373 113e 1A46     		mov	r2, r3
 16374 1140 7B69     		ldr	r3, [r7, #20]
 16375 1142 1344     		add	r3, r3, r2
 16376 1144 194A     		ldr	r2, .L678+4
 16377 1146 1188     		ldrh	r1, [r2]	@ unaligned
 16378 1148 9278     		ldrb	r2, [r2, #2]
 16379 114a 1980     		strh	r1, [r3]	@ unaligned
 16380 114c 9A70     		strb	r2, [r3, #2]
 16381              	.L633:
2173:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16382              		.loc 1 2173 0 discriminator 2
 16383 114e D7F89430 		ldr	r3, [r7, #148]
 16384 1152 0133     		adds	r3, r3, #1
 16385 1154 C7F89430 		str	r3, [r7, #148]
 16386              	.L632:
2173:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16387              		.loc 1 2173 0 is_stmt 0 discriminator 1
 16388 1158 D7F89430 		ldr	r3, [r7, #148]
 16389 115c 022B     		cmp	r3, #2
 16390 115e BBDD     		ble	.L634
2178:..\src/command_processing.c ****                 }
2179:..\src/command_processing.c ****             }
2180:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16391              		.loc 1 2180 0 is_stmt 1
 16392 1160 7869     		ldr	r0, [r7, #20]
 16393 1162 FFF7FEFF 		bl	strlen
 16394 1166 0346     		mov	r3, r0
 16395 1168 1A46     		mov	r2, r3
 16396 116a 7B69     		ldr	r3, [r7, #20]
 16397 116c 1344     		add	r3, r3, r2
 16398 116e 104A     		ldr	r2, .L678+8
 16399 1170 1188     		ldrh	r1, [r2]	@ unaligned
 16400 1172 9278     		ldrb	r2, [r2, #2]
 16401 1174 1980     		strh	r1, [r3]	@ unaligned
 16402 1176 9A70     		strb	r2, [r3, #2]
2181:..\src/command_processing.c ****                 
2182:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 16403              		.loc 1 2182 0
 16404 1178 7869     		ldr	r0, [r7, #20]
 16405 117a FFF7FEFF 		bl	strlen
 16406 117e 0346     		mov	r3, r0
 16407 1180 1A46     		mov	r2, r3
 16408 1182 7B69     		ldr	r3, [r7, #20]
 16409 1184 1344     		add	r3, r3, r2
 16410 1186 0B4A     		ldr	r2, .L678+12
 16411 1188 1D46     		mov	r5, r3
 16412 118a 1446     		mov	r4, r2
 16413 118c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 366


 16414 118e 2860     		str	r0, [r5]	@ unaligned
 16415 1190 6960     		str	r1, [r5, #4]	@ unaligned
 16416 1192 AA60     		str	r2, [r5, #8]	@ unaligned
 16417 1194 EB60     		str	r3, [r5, #12]	@ unaligned
 16418 1196 03CC     		ldmia	r4!, {r0, r1}
 16419 1198 2861     		str	r0, [r5, #16]	@ unaligned
 16420 119a 6961     		str	r1, [r5, #20]	@ unaligned
 16421 119c 2378     		ldrb	r3, [r4]
 16422 119e 2B76     		strb	r3, [r5, #24]
2183:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16423              		.loc 1 2183 0
 16424 11a0 0023     		movs	r3, #0
 16425 11a2 C7F89430 		str	r3, [r7, #148]
 16426 11a6 3DE0     		b	.L635
 16427              	.L679:
 16428              		.align	2
 16429              	.L678:
 16430 11a8 B8160000 		.word	.LC215
 16431 11ac 84130000 		.word	.LC184
 16432 11b0 50110000 		.word	.LC152
 16433 11b4 BC160000 		.word	.LC216
 16434              	.L637:
2184:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16435              		.loc 1 2184 0
 16436 11b8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16437 11bc D7F88C10 		ldr	r1, [r7, #140]
 16438 11c0 1346     		mov	r3, r2
 16439 11c2 5B00     		lsls	r3, r3, #1
 16440 11c4 1344     		add	r3, r3, r2
 16441 11c6 9B00     		lsls	r3, r3, #2
 16442 11c8 D7F89420 		ldr	r2, [r7, #148]
 16443 11cc 1344     		add	r3, r3, r2
 16444 11ce 6833     		adds	r3, r3, #104
 16445 11d0 9B00     		lsls	r3, r3, #2
 16446 11d2 0B44     		add	r3, r3, r1
 16447 11d4 5B68     		ldr	r3, [r3, #4]	@ float
 16448 11d6 1846     		mov	r0, r3
 16449 11d8 FFF7FEFF 		bl	__aeabi_f2d
 16450 11dc 0346     		mov	r3, r0
 16451 11de 0C46     		mov	r4, r1
 16452 11e0 07F11C00 		add	r0, r7, #28
 16453 11e4 1A46     		mov	r2, r3
 16454 11e6 2346     		mov	r3, r4
 16455 11e8 BF49     		ldr	r1, .L680
 16456 11ea FFF7FEFF 		bl	sprintf
2185:..\src/command_processing.c ****                 strcat(info_string, str);
 16457              		.loc 1 2185 0
 16458 11ee 07F11C03 		add	r3, r7, #28
 16459 11f2 1946     		mov	r1, r3
 16460 11f4 7869     		ldr	r0, [r7, #20]
 16461 11f6 FFF7FEFF 		bl	strcat
2186:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16462              		.loc 1 2186 0
 16463 11fa D7F89430 		ldr	r3, [r7, #148]
 16464 11fe 022B     		cmp	r3, #2
 16465 1200 0BD0     		beq	.L636
2187:..\src/command_processing.c ****                     strcat(info_string, ", ");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 367


 16466              		.loc 1 2187 0
 16467 1202 7869     		ldr	r0, [r7, #20]
 16468 1204 FFF7FEFF 		bl	strlen
 16469 1208 0346     		mov	r3, r0
 16470 120a 1A46     		mov	r2, r3
 16471 120c 7B69     		ldr	r3, [r7, #20]
 16472 120e 1344     		add	r3, r3, r2
 16473 1210 B64A     		ldr	r2, .L680+4
 16474 1212 1188     		ldrh	r1, [r2]	@ unaligned
 16475 1214 9278     		ldrb	r2, [r2, #2]
 16476 1216 1980     		strh	r1, [r3]	@ unaligned
 16477 1218 9A70     		strb	r2, [r3, #2]
 16478              	.L636:
2183:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16479              		.loc 1 2183 0 discriminator 2
 16480 121a D7F89430 		ldr	r3, [r7, #148]
 16481 121e 0133     		adds	r3, r3, #1
 16482 1220 C7F89430 		str	r3, [r7, #148]
 16483              	.L635:
2183:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16484              		.loc 1 2183 0 is_stmt 0 discriminator 1
 16485 1224 D7F89430 		ldr	r3, [r7, #148]
 16486 1228 022B     		cmp	r3, #2
 16487 122a C5DD     		ble	.L637
2188:..\src/command_processing.c ****                 }
2189:..\src/command_processing.c ****             }
2190:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16488              		.loc 1 2190 0 is_stmt 1 discriminator 2
 16489 122c 7869     		ldr	r0, [r7, #20]
 16490 122e FFF7FEFF 		bl	strlen
 16491 1232 0346     		mov	r3, r0
 16492 1234 1A46     		mov	r2, r3
 16493 1236 7B69     		ldr	r3, [r7, #20]
 16494 1238 1344     		add	r3, r3, r2
 16495 123a AD4A     		ldr	r2, .L680+8
 16496 123c 1188     		ldrh	r1, [r2]	@ unaligned
 16497 123e 9278     		ldrb	r2, [r2, #2]
 16498 1240 1980     		strh	r1, [r3]	@ unaligned
 16499 1242 9A70     		strb	r2, [r3, #2]
2191:..\src/command_processing.c ****             
2192:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2193:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16500              		.loc 1 2193 0 discriminator 2
 16501 1244 D7F88430 		ldr	r3, [r7, #132]
 16502 1248 5B6C     		ldr	r3, [r3, #68]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16503              		.loc 1 2192 0 discriminator 2
 16504 124a 1846     		mov	r0, r3
 16505 124c FFF7FEFF 		bl	__aeabi_f2d
 16506 1250 C7E90201 		strd	r0, [r7, #8]
 16507              		.loc 1 2193 0 discriminator 2
 16508 1254 D7F88430 		ldr	r3, [r7, #132]
 16509 1258 9B6C     		ldr	r3, [r3, #72]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16510              		.loc 1 2192 0 discriminator 2
 16511 125a 1846     		mov	r0, r3
 16512 125c FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 368


 16513 1260 0446     		mov	r4, r0
 16514 1262 0D46     		mov	r5, r1
 16515              		.loc 1 2193 0 discriminator 2
 16516 1264 D7F88430 		ldr	r3, [r7, #132]
 16517 1268 DB6C     		ldr	r3, [r3, #76]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16518              		.loc 1 2192 0 discriminator 2
 16519 126a 1846     		mov	r0, r3
 16520 126c FFF7FEFF 		bl	__aeabi_f2d
 16521 1270 8046     		mov	r8, r0
 16522 1272 8946     		mov	r9, r1
2194:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16523              		.loc 1 2194 0 discriminator 2
 16524 1274 D7F88430 		ldr	r3, [r7, #132]
 16525 1278 1B6D     		ldr	r3, [r3, #80]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16526              		.loc 1 2192 0 discriminator 2
 16527 127a 1846     		mov	r0, r3
 16528 127c FFF7FEFF 		bl	__aeabi_f2d
 16529 1280 8246     		mov	r10, r0
 16530 1282 8B46     		mov	fp, r1
 16531              		.loc 1 2194 0 discriminator 2
 16532 1284 D7F88430 		ldr	r3, [r7, #132]
 16533 1288 5B6D     		ldr	r3, [r3, #84]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16534              		.loc 1 2192 0 discriminator 2
 16535 128a 1846     		mov	r0, r3
 16536 128c FFF7FEFF 		bl	__aeabi_f2d
 16537 1290 C7E90001 		strd	r0, [r7]
 16538              		.loc 1 2194 0 discriminator 2
 16539 1294 D7F88430 		ldr	r3, [r7, #132]
 16540 1298 9B6D     		ldr	r3, [r3, #88]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16541              		.loc 1 2192 0 discriminator 2
 16542 129a 1846     		mov	r0, r3
 16543 129c FFF7FEFF 		bl	__aeabi_f2d
 16544 12a0 0246     		mov	r2, r0
 16545 12a2 0B46     		mov	r3, r1
 16546 12a4 07F11C00 		add	r0, r7, #28
 16547 12a8 CDE90823 		strd	r2, [sp, #32]
 16548 12ac D7E90012 		ldrd	r1, [r7]
 16549 12b0 CDE90612 		strd	r1, [sp, #24]
 16550 12b4 CDE904AB 		strd	r10, [sp, #16]
 16551 12b8 CDE90289 		strd	r8, [sp, #8]
 16552 12bc CDE90045 		strd	r4, [sp]
 16553 12c0 D7E90223 		ldrd	r2, [r7, #8]
 16554 12c4 8B49     		ldr	r1, .L680+12
 16555 12c6 FFF7FEFF 		bl	sprintf
2195:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16556              		.loc 1 2195 0 discriminator 2
 16557 12ca 07F11C03 		add	r3, r7, #28
 16558 12ce 1946     		mov	r1, r3
 16559 12d0 7869     		ldr	r0, [r7, #20]
 16560 12d2 FFF7FEFF 		bl	strcat
2196:..\src/command_processing.c **** 
2197:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16561              		.loc 1 2197 0 discriminator 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 369


 16562 12d6 D7F88430 		ldr	r3, [r7, #132]
 16563 12da 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16564 12de 1A46     		mov	r2, r3
 16565 12e0 07F11C03 		add	r3, r7, #28
 16566 12e4 8449     		ldr	r1, .L680+16
 16567 12e6 1846     		mov	r0, r3
 16568 12e8 FFF7FEFF 		bl	sprintf
2198:..\src/command_processing.c ****             strcat(info_string, str);
 16569              		.loc 1 2198 0 discriminator 2
 16570 12ec 07F11C03 		add	r3, r7, #28
 16571 12f0 1946     		mov	r1, r3
 16572 12f2 7869     		ldr	r0, [r7, #20]
 16573 12f4 FFF7FEFF 		bl	strcat
2199:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16574              		.loc 1 2199 0 discriminator 2
 16575 12f8 7869     		ldr	r0, [r7, #20]
 16576 12fa FFF7FEFF 		bl	strlen
 16577 12fe 0346     		mov	r3, r0
 16578 1300 1A46     		mov	r2, r3
 16579 1302 7B69     		ldr	r3, [r7, #20]
 16580 1304 1344     		add	r3, r3, r2
 16581 1306 7A4A     		ldr	r2, .L680+8
 16582 1308 1188     		ldrh	r1, [r2]	@ unaligned
 16583 130a 9278     		ldrb	r2, [r2, #2]
 16584 130c 1980     		strh	r1, [r3]	@ unaligned
 16585 130e 9A70     		strb	r2, [r3, #2]
2200:..\src/command_processing.c **** 
2201:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16586              		.loc 1 2201 0 discriminator 2
 16587 1310 D7F88430 		ldr	r3, [r7, #132]
 16588 1314 596B     		ldr	r1, [r3, #52]
 16589 1316 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16590 131a D7F88C00 		ldr	r0, [r7, #140]
 16591 131e 1346     		mov	r3, r2
 16592 1320 5B00     		lsls	r3, r3, #1
 16593 1322 1344     		add	r3, r3, r2
 16594 1324 1B01     		lsls	r3, r3, #4
 16595 1326 0344     		add	r3, r3, r0
 16596 1328 03F29513 		addw	r3, r3, #405
 16597 132c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16598 132e 41FA03F2 		asr	r2, r1, r3
 16599 1332 07F11C03 		add	r3, r7, #28
 16600 1336 7149     		ldr	r1, .L680+20
 16601 1338 1846     		mov	r0, r3
 16602 133a FFF7FEFF 		bl	sprintf
2202:..\src/command_processing.c ****             strcat(info_string, str);
 16603              		.loc 1 2202 0 discriminator 2
 16604 133e 07F11C03 		add	r3, r7, #28
 16605 1342 1946     		mov	r1, r3
 16606 1344 7869     		ldr	r0, [r7, #20]
 16607 1346 FFF7FEFF 		bl	strcat
2203:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16608              		.loc 1 2203 0 discriminator 2
 16609 134a D7F88430 		ldr	r3, [r7, #132]
 16610 134e 996B     		ldr	r1, [r3, #56]
 16611 1350 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16612 1354 D7F88C00 		ldr	r0, [r7, #140]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 370


 16613 1358 1346     		mov	r3, r2
 16614 135a 5B00     		lsls	r3, r3, #1
 16615 135c 1344     		add	r3, r3, r2
 16616 135e 1B01     		lsls	r3, r3, #4
 16617 1360 0344     		add	r3, r3, r0
 16618 1362 03F29513 		addw	r3, r3, #405
 16619 1366 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16620 1368 41FA03F2 		asr	r2, r1, r3
 16621 136c 07F11C03 		add	r3, r7, #28
 16622 1370 6349     		ldr	r1, .L680+24
 16623 1372 1846     		mov	r0, r3
 16624 1374 FFF7FEFF 		bl	sprintf
2204:..\src/command_processing.c ****             strcat(info_string, str);
 16625              		.loc 1 2204 0 discriminator 2
 16626 1378 07F11C03 		add	r3, r7, #28
 16627 137c 1946     		mov	r1, r3
 16628 137e 7869     		ldr	r0, [r7, #20]
 16629 1380 FFF7FEFF 		bl	strcat
2205:..\src/command_processing.c **** 
2206:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16630              		.loc 1 2206 0 discriminator 2
 16631 1384 D7F88430 		ldr	r3, [r7, #132]
 16632 1388 1A6C     		ldr	r2, [r3, #64]
 16633 138a D7F88430 		ldr	r3, [r7, #132]
 16634 138e DB6B     		ldr	r3, [r3, #60]
 16635 1390 07F11C00 		add	r0, r7, #28
 16636 1394 5B49     		ldr	r1, .L680+28
 16637 1396 FFF7FEFF 		bl	sprintf
2207:..\src/command_processing.c ****             strcat(info_string, str);
 16638              		.loc 1 2207 0 discriminator 2
 16639 139a 07F11C03 		add	r3, r7, #28
 16640 139e 1946     		mov	r1, r3
 16641 13a0 7869     		ldr	r0, [r7, #20]
 16642 13a2 FFF7FEFF 		bl	strcat
2208:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16643              		.loc 1 2208 0 discriminator 2
 16644 13a6 7869     		ldr	r0, [r7, #20]
 16645 13a8 FFF7FEFF 		bl	strlen
 16646 13ac 0346     		mov	r3, r0
 16647 13ae 1A46     		mov	r2, r3
 16648 13b0 7B69     		ldr	r3, [r7, #20]
 16649 13b2 1344     		add	r3, r3, r2
 16650 13b4 4E4A     		ldr	r2, .L680+8
 16651 13b6 1188     		ldrh	r1, [r2]	@ unaligned
 16652 13b8 9278     		ldrb	r2, [r2, #2]
 16653 13ba 1980     		strh	r1, [r3]	@ unaligned
 16654 13bc 9A70     		strb	r2, [r3, #2]
2209:..\src/command_processing.c **** 
2210:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16655              		.loc 1 2210 0 discriminator 2
 16656 13be D7F88430 		ldr	r3, [r7, #132]
 16657 13c2 B3F95C30 		ldrsh	r3, [r3, #92]
 16658 13c6 1A46     		mov	r2, r3
 16659 13c8 07F11C03 		add	r3, r7, #28
 16660 13cc 4E49     		ldr	r1, .L680+32
 16661 13ce 1846     		mov	r0, r3
 16662 13d0 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 371


2211:..\src/command_processing.c ****             strcat(info_string, str);
 16663              		.loc 1 2211 0 discriminator 2
 16664 13d4 07F11C03 		add	r3, r7, #28
 16665 13d8 1946     		mov	r1, r3
 16666 13da 7869     		ldr	r0, [r7, #20]
 16667 13dc FFF7FEFF 		bl	strcat
2212:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2213:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
2214:..\src/command_processing.c ****             strcat(info_string, str);
2215:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
2216:..\src/command_processing.c ****                 case DRIVER_MC33887:
2217:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2218:..\src/command_processing.c ****                     break;
2219:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2220:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2221:..\src/command_processing.c ****                     break;
2222:..\src/command_processing.c ****                 case DRIVER_BRUSHLESS:
2223:..\src/command_processing.c ****                     strcat(info_string, "Driver type: ESC (Brushless)\r\n");
2224:..\src/command_processing.c ****                     break;
2225:..\src/command_processing.c ****                 default:
2226:..\src/command_processing.c ****                     break;
2227:..\src/command_processing.c ****             }
2228:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
2229:..\src/command_processing.c ****             strcat(info_string, str);
2230:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
2231:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
2232:..\src/command_processing.c ****             else
2233:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
2234:..\src/command_processing.c **** #endif                
2235:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16668              		.loc 1 2235 0 discriminator 2
 16669 13e0 7869     		ldr	r0, [r7, #20]
 16670 13e2 FFF7FEFF 		bl	strlen
 16671 13e6 0346     		mov	r3, r0
 16672 13e8 1A46     		mov	r2, r3
 16673 13ea 7B69     		ldr	r3, [r7, #20]
 16674 13ec 1344     		add	r3, r3, r2
 16675 13ee 404A     		ldr	r2, .L680+8
 16676 13f0 1188     		ldrh	r1, [r2]	@ unaligned
 16677 13f2 9278     		ldrb	r2, [r2, #2]
 16678 13f4 1980     		strh	r1, [r3]	@ unaligned
 16679 13f6 9A70     		strb	r2, [r3, #2]
 16680              	.LBE26:
1962:..\src/command_processing.c ****             
 16681              		.loc 1 1962 0 discriminator 2
 16682 13f8 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 16683 13fc 0133     		adds	r3, r3, #1
 16684 13fe 87F89330 		strb	r3, [r7, #147]
 16685              	.L585:
1962:..\src/command_processing.c ****             
 16686              		.loc 1 1962 0 is_stmt 0 discriminator 1
 16687 1402 D7F88C30 		ldr	r3, [r7, #140]
 16688 1406 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 16689 140a 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 16690 140e 9A42     		cmp	r2, r3
 16691 1410 7EF6AAAF 		bls	.L638
 16692              	.LBE25:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 372


2236:..\src/command_processing.c ****         }
2237:..\src/command_processing.c ****       
2238:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 16693              		.loc 1 2238 0 is_stmt 1
 16694 1414 7869     		ldr	r0, [r7, #20]
 16695 1416 FFF7FEFF 		bl	strlen
 16696 141a 0346     		mov	r3, r0
 16697 141c 1A46     		mov	r2, r3
 16698 141e 7B69     		ldr	r3, [r7, #20]
 16699 1420 1344     		add	r3, r3, r2
 16700 1422 3A4A     		ldr	r2, .L680+36
 16701 1424 1D46     		mov	r5, r3
 16702 1426 1446     		mov	r4, r2
 16703 1428 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16704 142a 2860     		str	r0, [r5]	@ unaligned
 16705 142c 6960     		str	r1, [r5, #4]	@ unaligned
 16706 142e AA60     		str	r2, [r5, #8]	@ unaligned
 16707 1430 EB60     		str	r3, [r5, #12]	@ unaligned
 16708 1432 2068     		ldr	r0, [r4]	@ unaligned
 16709 1434 2861     		str	r0, [r5, #16]	@ unaligned
2239:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16710              		.loc 1 2239 0
 16711 1436 D7F88C30 		ldr	r3, [r7, #140]
 16712 143a B3F8F031 		ldrh	r3, [r3, #496]
 16713 143e 1A46     		mov	r2, r3
 16714 1440 D7F88C30 		ldr	r3, [r7, #140]
 16715 1444 B3F8F231 		ldrh	r3, [r3, #498]
 16716 1448 07F11C00 		add	r0, r7, #28
 16717 144c 3049     		ldr	r1, .L680+40
 16718 144e FFF7FEFF 		bl	sprintf
2240:..\src/command_processing.c ****         strcat(info_string, str);
 16719              		.loc 1 2240 0
 16720 1452 07F11C03 		add	r3, r7, #28
 16721 1456 1946     		mov	r1, r3
 16722 1458 7869     		ldr	r0, [r7, #20]
 16723 145a FFF7FEFF 		bl	strcat
2241:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16724              		.loc 1 2241 0
 16725 145e 7869     		ldr	r0, [r7, #20]
 16726 1460 FFF7FEFF 		bl	strlen
 16727 1464 0346     		mov	r3, r0
 16728 1466 1A46     		mov	r2, r3
 16729 1468 7B69     		ldr	r3, [r7, #20]
 16730 146a 1344     		add	r3, r3, r2
 16731 146c 204A     		ldr	r2, .L680+8
 16732 146e 1188     		ldrh	r1, [r2]	@ unaligned
 16733 1470 9278     		ldrb	r2, [r2, #2]
 16734 1472 1980     		strh	r1, [r3]	@ unaligned
 16735 1474 9A70     		strb	r2, [r3, #2]
2242:..\src/command_processing.c **** 
2243:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 16736              		.loc 1 2243 0
 16737 1476 D7F88C30 		ldr	r3, [r7, #140]
 16738 147a D3F8F421 		ldr	r2, [r3, #500]
 16739 147e D7F88C30 		ldr	r3, [r7, #140]
 16740 1482 D3F8F831 		ldr	r3, [r3, #504]
 16741 1486 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 373


 16742 148a 2249     		ldr	r1, .L680+44
 16743 148c FFF7FEFF 		bl	sprintf
2244:..\src/command_processing.c ****         strcat(info_string, str);
 16744              		.loc 1 2244 0
 16745 1490 07F11C03 		add	r3, r7, #28
 16746 1494 1946     		mov	r1, r3
 16747 1496 7869     		ldr	r0, [r7, #20]
 16748 1498 FFF7FEFF 		bl	strcat
2245:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16749              		.loc 1 2245 0
 16750 149c 7869     		ldr	r0, [r7, #20]
 16751 149e FFF7FEFF 		bl	strlen
 16752 14a2 0346     		mov	r3, r0
 16753 14a4 1A46     		mov	r2, r3
 16754 14a6 7B69     		ldr	r3, [r7, #20]
 16755 14a8 1344     		add	r3, r3, r2
 16756 14aa 114A     		ldr	r2, .L680+8
 16757 14ac 1188     		ldrh	r1, [r2]	@ unaligned
 16758 14ae 9278     		ldrb	r2, [r2, #2]
 16759 14b0 1980     		strh	r1, [r3]	@ unaligned
 16760 14b2 9A70     		strb	r2, [r3, #2]
2246:..\src/command_processing.c **** 
2247:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 16761              		.loc 1 2247 0
 16762 14b4 D7F88C30 		ldr	r3, [r7, #140]
 16763 14b8 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 16764 14bc 002B     		cmp	r3, #0
 16765 14be 2DD0     		beq	.L639
2248:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 16766              		.loc 1 2248 0
 16767 14c0 7869     		ldr	r0, [r7, #20]
 16768 14c2 FFF7FEFF 		bl	strlen
 16769 14c6 0346     		mov	r3, r0
 16770 14c8 1A46     		mov	r2, r3
 16771 14ca 7B69     		ldr	r3, [r7, #20]
 16772 14cc 1344     		add	r3, r3, r2
 16773 14ce 124A     		ldr	r2, .L680+48
 16774 14d0 1D46     		mov	r5, r3
 16775 14d2 1446     		mov	r4, r2
 16776 14d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16777 14d6 2860     		str	r0, [r5]	@ unaligned
 16778 14d8 6960     		str	r1, [r5, #4]	@ unaligned
 16779 14da AA60     		str	r2, [r5, #8]	@ unaligned
 16780 14dc EB60     		str	r3, [r5, #12]	@ unaligned
 16781 14de 2068     		ldr	r0, [r4]	@ unaligned
 16782 14e0 2861     		str	r0, [r5, #16]	@ unaligned
 16783 14e2 2379     		ldrb	r3, [r4, #4]
 16784 14e4 2B75     		strb	r3, [r5, #20]
 16785 14e6 2AE0     		b	.L640
 16786              	.L681:
 16787              		.align	2
 16788              	.L680:
 16789 14e8 D8160000 		.word	.LC217
 16790 14ec 84130000 		.word	.LC184
 16791 14f0 50110000 		.word	.LC152
 16792 14f4 DC160000 		.word	.LC218
 16793 14f8 0C170000 		.word	.LC219
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 374


 16794 14fc 28170000 		.word	.LC220
 16795 1500 4C170000 		.word	.LC221
 16796 1504 5C170000 		.word	.LC222
 16797 1508 78170000 		.word	.LC223
 16798 150c 8C170000 		.word	.LC224
 16799 1510 A0170000 		.word	.LC225
 16800 1514 C4170000 		.word	.LC226
 16801 1518 E8170000 		.word	.LC227
 16802              	.L639:
2249:..\src/command_processing.c ****         else
2250:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 16803              		.loc 1 2250 0
 16804 151c 7869     		ldr	r0, [r7, #20]
 16805 151e FFF7FEFF 		bl	strlen
 16806 1522 0346     		mov	r3, r0
 16807 1524 1A46     		mov	r2, r3
 16808 1526 7B69     		ldr	r3, [r7, #20]
 16809 1528 1344     		add	r3, r3, r2
 16810 152a BA4A     		ldr	r2, .L682
 16811 152c 1D46     		mov	r5, r3
 16812 152e 1446     		mov	r4, r2
 16813 1530 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16814 1532 2860     		str	r0, [r5]	@ unaligned
 16815 1534 6960     		str	r1, [r5, #4]	@ unaligned
 16816 1536 AA60     		str	r2, [r5, #8]	@ unaligned
 16817 1538 EB60     		str	r3, [r5, #12]	@ unaligned
 16818 153a 2068     		ldr	r0, [r4]	@ unaligned
 16819 153c 2861     		str	r0, [r5, #16]	@ unaligned
 16820              	.L640:
2251:..\src/command_processing.c ****             
2252:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 16821              		.loc 1 2252 0
 16822 153e D7F88C30 		ldr	r3, [r7, #140]
 16823 1542 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 16824 1546 002B     		cmp	r3, #0
 16825 1548 17D0     		beq	.L641
2253:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 16826              		.loc 1 2253 0
 16827 154a 7869     		ldr	r0, [r7, #20]
 16828 154c FFF7FEFF 		bl	strlen
 16829 1550 0346     		mov	r3, r0
 16830 1552 1A46     		mov	r2, r3
 16831 1554 7B69     		ldr	r3, [r7, #20]
 16832 1556 1344     		add	r3, r3, r2
 16833 1558 AF4A     		ldr	r2, .L682+4
 16834 155a 1D46     		mov	r5, r3
 16835 155c 1446     		mov	r4, r2
 16836 155e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16837 1560 2860     		str	r0, [r5]	@ unaligned
 16838 1562 6960     		str	r1, [r5, #4]	@ unaligned
 16839 1564 AA60     		str	r2, [r5, #8]	@ unaligned
 16840 1566 EB60     		str	r3, [r5, #12]	@ unaligned
 16841 1568 03CC     		ldmia	r4!, {r0, r1}
 16842 156a 2861     		str	r0, [r5, #16]	@ unaligned
 16843 156c 6961     		str	r1, [r5, #20]	@ unaligned
 16844 156e 2388     		ldrh	r3, [r4]	@ unaligned
 16845 1570 A278     		ldrb	r2, [r4, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 375


 16846 1572 2B83     		strh	r3, [r5, #24]	@ unaligned
 16847 1574 1346     		mov	r3, r2
 16848 1576 AB76     		strb	r3, [r5, #26]
 16849 1578 13E0     		b	.L642
 16850              	.L641:
2254:..\src/command_processing.c ****         else
2255:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 16851              		.loc 1 2255 0
 16852 157a 7869     		ldr	r0, [r7, #20]
 16853 157c FFF7FEFF 		bl	strlen
 16854 1580 0346     		mov	r3, r0
 16855 1582 1A46     		mov	r2, r3
 16856 1584 7B69     		ldr	r3, [r7, #20]
 16857 1586 1344     		add	r3, r3, r2
 16858 1588 A44A     		ldr	r2, .L682+8
 16859 158a 1D46     		mov	r5, r3
 16860 158c 1446     		mov	r4, r2
 16861 158e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16862 1590 2860     		str	r0, [r5]	@ unaligned
 16863 1592 6960     		str	r1, [r5, #4]	@ unaligned
 16864 1594 AA60     		str	r2, [r5, #8]	@ unaligned
 16865 1596 EB60     		str	r3, [r5, #12]	@ unaligned
 16866 1598 03CC     		ldmia	r4!, {r0, r1}
 16867 159a 2861     		str	r0, [r5, #16]	@ unaligned
 16868 159c 6961     		str	r1, [r5, #20]	@ unaligned
 16869 159e 2388     		ldrh	r3, [r4]	@ unaligned
 16870 15a0 2B83     		strh	r3, [r5, #24]	@ unaligned
 16871              	.L642:
2256:..\src/command_processing.c **** 
2257:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 16872              		.loc 1 2257 0
 16873 15a2 D7F88C30 		ldr	r3, [r7, #140]
 16874 15a6 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 16875 15aa 1A46     		mov	r2, r3
 16876 15ac D7F88C30 		ldr	r3, [r7, #140]
 16877 15b0 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 16878 15b4 07F11C00 		add	r0, r7, #28
 16879 15b8 9949     		ldr	r1, .L682+12
 16880 15ba FFF7FEFF 		bl	sprintf
2258:..\src/command_processing.c ****         strcat(info_string, str);
 16881              		.loc 1 2258 0
 16882 15be 07F11C03 		add	r3, r7, #28
 16883 15c2 1946     		mov	r1, r3
 16884 15c4 7869     		ldr	r0, [r7, #20]
 16885 15c6 FFF7FEFF 		bl	strcat
2259:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16886              		.loc 1 2259 0
 16887 15ca 7869     		ldr	r0, [r7, #20]
 16888 15cc FFF7FEFF 		bl	strlen
 16889 15d0 0346     		mov	r3, r0
 16890 15d2 1A46     		mov	r2, r3
 16891 15d4 7B69     		ldr	r3, [r7, #20]
 16892 15d6 1344     		add	r3, r3, r2
 16893 15d8 924A     		ldr	r2, .L682+16
 16894 15da 1188     		ldrh	r1, [r2]	@ unaligned
 16895 15dc 9278     		ldrb	r2, [r2, #2]
 16896 15de 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 376


 16897 15e0 9A70     		strb	r2, [r3, #2]
2260:..\src/command_processing.c **** 
2261:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 16898              		.loc 1 2261 0
 16899 15e2 D7F88C30 		ldr	r3, [r7, #140]
 16900 15e6 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 16901 15ea 012B     		cmp	r3, #1
 16902 15ec 6ED1     		bne	.L643
2262:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 16903              		.loc 1 2262 0
 16904 15ee 7869     		ldr	r0, [r7, #20]
 16905 15f0 FFF7FEFF 		bl	strlen
 16906 15f4 0346     		mov	r3, r0
 16907 15f6 1A46     		mov	r2, r3
 16908 15f8 7B69     		ldr	r3, [r7, #20]
 16909 15fa 1344     		add	r3, r3, r2
 16910 15fc 8A4A     		ldr	r2, .L682+20
 16911 15fe 1C46     		mov	r4, r3
 16912 1600 1546     		mov	r5, r2
 16913 1602 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16914 1604 2060     		str	r0, [r4]	@ unaligned
 16915 1606 6160     		str	r1, [r4, #4]	@ unaligned
 16916 1608 A260     		str	r2, [r4, #8]	@ unaligned
 16917 160a E360     		str	r3, [r4, #12]	@ unaligned
 16918 160c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16919 160e 2061     		str	r0, [r4, #16]	@ unaligned
 16920 1610 6161     		str	r1, [r4, #20]	@ unaligned
 16921 1612 A261     		str	r2, [r4, #24]	@ unaligned
 16922 1614 E361     		str	r3, [r4, #28]	@ unaligned
2263:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 16923              		.loc 1 2263 0
 16924 1616 0023     		movs	r3, #0
 16925 1618 C7F89430 		str	r3, [r7, #148]
 16926 161c 25E0     		b	.L644
 16927              	.L645:
2264:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16928              		.loc 1 2264 0 discriminator 3
 16929 161e D7F89430 		ldr	r3, [r7, #148]
 16930 1622 591C     		adds	r1, r3, #1
 16931 1624 814A     		ldr	r2, .L682+24
 16932 1626 D7F89430 		ldr	r3, [r7, #148]
 16933 162a 0233     		adds	r3, r3, #2
 16934 162c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16935 1630 07F11C00 		add	r0, r7, #28
 16936 1634 0A46     		mov	r2, r1
 16937 1636 7E49     		ldr	r1, .L682+28
 16938 1638 FFF7FEFF 		bl	sprintf
2265:..\src/command_processing.c ****                 strcat(info_string, str);
 16939              		.loc 1 2265 0 discriminator 3
 16940 163c 07F11C03 		add	r3, r7, #28
 16941 1640 1946     		mov	r1, r3
 16942 1642 7869     		ldr	r0, [r7, #20]
 16943 1644 FFF7FEFF 		bl	strcat
2266:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16944              		.loc 1 2266 0 discriminator 3
 16945 1648 7869     		ldr	r0, [r7, #20]
 16946 164a FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 377


 16947 164e 0346     		mov	r3, r0
 16948 1650 1A46     		mov	r2, r3
 16949 1652 7B69     		ldr	r3, [r7, #20]
 16950 1654 1344     		add	r3, r3, r2
 16951 1656 734A     		ldr	r2, .L682+16
 16952 1658 1188     		ldrh	r1, [r2]	@ unaligned
 16953 165a 9278     		ldrb	r2, [r2, #2]
 16954 165c 1980     		strh	r1, [r3]	@ unaligned
 16955 165e 9A70     		strb	r2, [r3, #2]
2263:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16956              		.loc 1 2263 0 discriminator 3
 16957 1660 D7F89430 		ldr	r3, [r7, #148]
 16958 1664 0133     		adds	r3, r3, #1
 16959 1666 C7F89430 		str	r3, [r7, #148]
 16960              	.L644:
2263:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16961              		.loc 1 2263 0 is_stmt 0 discriminator 1
 16962 166a D7F89430 		ldr	r3, [r7, #148]
 16963 166e 052B     		cmp	r3, #5
 16964 1670 D5DD     		ble	.L645
2267:..\src/command_processing.c ****             }
2268:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 16965              		.loc 1 2268 0 is_stmt 1
 16966 1672 0023     		movs	r3, #0
 16967 1674 C7F89430 		str	r3, [r7, #148]
 16968 1678 24E0     		b	.L646
 16969              	.L647:
2269:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16970              		.loc 1 2269 0 discriminator 3
 16971 167a D7F89430 		ldr	r3, [r7, #148]
 16972 167e 591C     		adds	r1, r3, #1
 16973 1680 6A4A     		ldr	r2, .L682+24
 16974 1682 D7F89430 		ldr	r3, [r7, #148]
 16975 1686 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16976 168a 07F11C00 		add	r0, r7, #28
 16977 168e 0A46     		mov	r2, r1
 16978 1690 6849     		ldr	r1, .L682+32
 16979 1692 FFF7FEFF 		bl	sprintf
2270:..\src/command_processing.c ****                 strcat(info_string, str);
 16980              		.loc 1 2270 0 discriminator 3
 16981 1696 07F11C03 		add	r3, r7, #28
 16982 169a 1946     		mov	r1, r3
 16983 169c 7869     		ldr	r0, [r7, #20]
 16984 169e FFF7FEFF 		bl	strcat
2271:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16985              		.loc 1 2271 0 discriminator 3
 16986 16a2 7869     		ldr	r0, [r7, #20]
 16987 16a4 FFF7FEFF 		bl	strlen
 16988 16a8 0346     		mov	r3, r0
 16989 16aa 1A46     		mov	r2, r3
 16990 16ac 7B69     		ldr	r3, [r7, #20]
 16991 16ae 1344     		add	r3, r3, r2
 16992 16b0 5C4A     		ldr	r2, .L682+16
 16993 16b2 1188     		ldrh	r1, [r2]	@ unaligned
 16994 16b4 9278     		ldrb	r2, [r2, #2]
 16995 16b6 1980     		strh	r1, [r3]	@ unaligned
 16996 16b8 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 378


2268:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16997              		.loc 1 2268 0 discriminator 3
 16998 16ba D7F89430 		ldr	r3, [r7, #148]
 16999 16be 0133     		adds	r3, r3, #1
 17000 16c0 C7F89430 		str	r3, [r7, #148]
 17001              	.L646:
2268:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17002              		.loc 1 2268 0 is_stmt 0 discriminator 1
 17003 16c4 D7F89430 		ldr	r3, [r7, #148]
 17004 16c8 012B     		cmp	r3, #1
 17005 16ca D6DD     		ble	.L647
 17006              	.L643:
2272:..\src/command_processing.c ****             }
2273:..\src/command_processing.c ****         }
2274:..\src/command_processing.c **** 
2275:..\src/command_processing.c **** #ifdef GENERIC_FW
2276:..\src/command_processing.c ****     
2277:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2278:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
2279:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
2280:..\src/command_processing.c ****         strcat(info_string, str);
2281:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2282:..\src/command_processing.c **** 
2283:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
2284:..\src/command_processing.c ****         strcat(info_string, str);
2285:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2286:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
2287:..\src/command_processing.c ****         strcat(info_string, str);
2288:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2289:..\src/command_processing.c **** 
2290:..\src/command_processing.c **** #endif
2291:..\src/command_processing.c ****         
2292:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 17007              		.loc 1 2292 0 is_stmt 1
 17008 16cc D7F88C30 		ldr	r3, [r7, #140]
 17009 16d0 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17010 16d4 002B     		cmp	r3, #0
 17011 16d6 63D0     		beq	.L648
2293:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17012              		.loc 1 2293 0
 17013 16d8 D7F88C30 		ldr	r3, [r7, #140]
 17014 16dc D3F8A422 		ldr	r2, [r3, #676]
 17015 16e0 07F11C03 		add	r3, r7, #28
 17016 16e4 5449     		ldr	r1, .L682+36
 17017 16e6 1846     		mov	r0, r3
 17018 16e8 FFF7FEFF 		bl	sprintf
2294:..\src/command_processing.c ****             strcat(info_string, str);
 17019              		.loc 1 2294 0
 17020 16ec 07F11C03 		add	r3, r7, #28
 17021 16f0 1946     		mov	r1, r3
 17022 16f2 7869     		ldr	r0, [r7, #20]
 17023 16f4 FFF7FEFF 		bl	strcat
2295:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17024              		.loc 1 2295 0
 17025 16f8 7869     		ldr	r0, [r7, #20]
 17026 16fa FFF7FEFF 		bl	strlen
 17027 16fe 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 379


 17028 1700 1A46     		mov	r2, r3
 17029 1702 7B69     		ldr	r3, [r7, #20]
 17030 1704 1344     		add	r3, r3, r2
 17031 1706 474A     		ldr	r2, .L682+16
 17032 1708 1188     		ldrh	r1, [r2]	@ unaligned
 17033 170a 9278     		ldrb	r2, [r2, #2]
 17034 170c 1980     		strh	r1, [r3]	@ unaligned
 17035 170e 9A70     		strb	r2, [r3, #2]
2296:..\src/command_processing.c ****             
2297:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17036              		.loc 1 2297 0
 17037 1710 D7F88C30 		ldr	r3, [r7, #140]
 17038 1714 D3F8A822 		ldr	r2, [r3, #680]
 17039 1718 07F11C03 		add	r3, r7, #28
 17040 171c 4749     		ldr	r1, .L682+40
 17041 171e 1846     		mov	r0, r3
 17042 1720 FFF7FEFF 		bl	sprintf
2298:..\src/command_processing.c ****             strcat(info_string, str);
 17043              		.loc 1 2298 0
 17044 1724 07F11C03 		add	r3, r7, #28
 17045 1728 1946     		mov	r1, r3
 17046 172a 7869     		ldr	r0, [r7, #20]
 17047 172c FFF7FEFF 		bl	strcat
2299:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17048              		.loc 1 2299 0
 17049 1730 7869     		ldr	r0, [r7, #20]
 17050 1732 FFF7FEFF 		bl	strlen
 17051 1736 0346     		mov	r3, r0
 17052 1738 1A46     		mov	r2, r3
 17053 173a 7B69     		ldr	r3, [r7, #20]
 17054 173c 1344     		add	r3, r3, r2
 17055 173e 394A     		ldr	r2, .L682+16
 17056 1740 1188     		ldrh	r1, [r2]	@ unaligned
 17057 1742 9278     		ldrb	r2, [r2, #2]
 17058 1744 1980     		strh	r1, [r3]	@ unaligned
 17059 1746 9A70     		strb	r2, [r3, #2]
2300:..\src/command_processing.c ****             
2301:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 17060              		.loc 1 2301 0
 17061 1748 D7F88C30 		ldr	r3, [r7, #140]
 17062 174c D3F8A022 		ldr	r2, [r3, #672]
 17063 1750 D7F88C30 		ldr	r3, [r7, #140]
 17064 1754 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17065 1758 1846     		mov	r0, r3
 17066 175a D7F88C10 		ldr	r1, [r7, #140]
 17067 175e 0346     		mov	r3, r0
 17068 1760 5B00     		lsls	r3, r3, #1
 17069 1762 0344     		add	r3, r3, r0
 17070 1764 1B01     		lsls	r3, r3, #4
 17071 1766 0B44     		add	r3, r3, r1
 17072 1768 03F29513 		addw	r3, r3, #405
 17073 176c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17074 176e 1A41     		asrs	r2, r2, r3
 17075 1770 07F11C03 		add	r3, r7, #28
 17076 1774 3249     		ldr	r1, .L682+44
 17077 1776 1846     		mov	r0, r3
 17078 1778 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 380


2302:..\src/command_processing.c ****             strcat(info_string, str);
 17079              		.loc 1 2302 0
 17080 177c 07F11C03 		add	r3, r7, #28
 17081 1780 1946     		mov	r1, r3
 17082 1782 7869     		ldr	r0, [r7, #20]
 17083 1784 FFF7FEFF 		bl	strcat
2303:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 17084              		.loc 1 2303 0
 17085 1788 7869     		ldr	r0, [r7, #20]
 17086 178a FFF7FEFF 		bl	strlen
 17087 178e 0346     		mov	r3, r0
 17088 1790 1A46     		mov	r2, r3
 17089 1792 7B69     		ldr	r3, [r7, #20]
 17090 1794 1344     		add	r3, r3, r2
 17091 1796 234A     		ldr	r2, .L682+16
 17092 1798 1188     		ldrh	r1, [r2]	@ unaligned
 17093 179a 9278     		ldrb	r2, [r2, #2]
 17094 179c 1980     		strh	r1, [r3]	@ unaligned
 17095 179e 9A70     		strb	r2, [r3, #2]
 17096              	.L648:
2304:..\src/command_processing.c ****         }
2305:..\src/command_processing.c **** 
2306:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 17097              		.loc 1 2306 0
 17098 17a0 D7F88C30 		ldr	r3, [r7, #140]
 17099 17a4 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17100 17a8 002B     		cmp	r3, #0
 17101 17aa 00F0CD81 		beq	.L649
2307:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17102              		.loc 1 2307 0
 17103 17ae 254B     		ldr	r3, .L682+48
 17104 17b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17105 17b2 1A46     		mov	r2, r3
 17106 17b4 07F11C03 		add	r3, r7, #28
 17107 17b8 2349     		ldr	r1, .L682+52
 17108 17ba 1846     		mov	r0, r3
 17109 17bc FFF7FEFF 		bl	sprintf
2308:..\src/command_processing.c ****             strcat(info_string, str);
 17110              		.loc 1 2308 0
 17111 17c0 07F11C03 		add	r3, r7, #28
 17112 17c4 1946     		mov	r1, r3
 17113 17c6 7869     		ldr	r0, [r7, #20]
 17114 17c8 FFF7FEFF 		bl	strcat
2309:..\src/command_processing.c ****             
2310:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17115              		.loc 1 2310 0
 17116 17cc 7869     		ldr	r0, [r7, #20]
 17117 17ce FFF7FEFF 		bl	strlen
 17118 17d2 0346     		mov	r3, r0
 17119 17d4 1A46     		mov	r2, r3
 17120 17d6 7B69     		ldr	r3, [r7, #20]
 17121 17d8 1344     		add	r3, r3, r2
 17122 17da 124A     		ldr	r2, .L682+16
 17123 17dc 1188     		ldrh	r1, [r2]	@ unaligned
 17124 17de 9278     		ldrb	r2, [r2, #2]
 17125 17e0 1980     		strh	r1, [r3]	@ unaligned
 17126 17e2 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 381


2311:..\src/command_processing.c ****             
2312:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 17127              		.loc 1 2312 0
 17128 17e4 7869     		ldr	r0, [r7, #20]
 17129 17e6 FFF7FEFF 		bl	strlen
 17130 17ea 0346     		mov	r3, r0
 17131 17ec 1A46     		mov	r2, r3
 17132 17ee 7B69     		ldr	r3, [r7, #20]
 17133 17f0 1344     		add	r3, r3, r2
 17134 17f2 164A     		ldr	r2, .L682+56
 17135 17f4 1D46     		mov	r5, r3
 17136 17f6 1446     		mov	r4, r2
 17137 17f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17138 17fa 2860     		str	r0, [r5]	@ unaligned
 17139 17fc 6960     		str	r1, [r5, #4]	@ unaligned
 17140 17fe AA60     		str	r2, [r5, #8]	@ unaligned
 17141 1800 EB60     		str	r3, [r5, #12]	@ unaligned
 17142 1802 2068     		ldr	r0, [r4]	@ unaligned
 17143 1804 2861     		str	r0, [r5, #16]	@ unaligned
 17144 1806 2379     		ldrb	r3, [r4, #4]
 17145 1808 2B75     		strb	r3, [r5, #20]
2313:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 17146              		.loc 1 2313 0
 17147 180a 0023     		movs	r3, #0
 17148 180c C7F89430 		str	r3, [r7, #148]
 17149 1810 83E1     		b	.L650
 17150              	.L683:
 17151 1812 00BF     		.align	2
 17152              	.L682:
 17153 1814 00180000 		.word	.LC228
 17154 1818 14180000 		.word	.LC229
 17155 181c 30180000 		.word	.LC230
 17156 1820 4C180000 		.word	.LC231
 17157 1824 50110000 		.word	.LC152
 17158 1828 64180000 		.word	.LC232
 17159 182c 00000000 		.word	g_adc_meas
 17160 1830 84180000 		.word	.LC233
 17161 1834 94180000 		.word	.LC234
 17162 1838 A8180000 		.word	.LC235
 17163 183c C4180000 		.word	.LC236
 17164 1840 EC180000 		.word	.LC237
 17165 1844 00000000 		.word	N_IMU_Connected
 17166 1848 00190000 		.word	.LC238
 17167 184c 14190000 		.word	.LC239
 17168              	.L661:
2314:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17169              		.loc 1 2314 0
 17170 1850 D14A     		ldr	r2, .L684
 17171 1852 D7F89430 		ldr	r3, [r7, #148]
 17172 1856 1344     		add	r3, r3, r2
 17173 1858 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17174 185a 07F11C00 		add	r0, r7, #28
 17175 185e D7F89420 		ldr	r2, [r7, #148]
 17176 1862 CE49     		ldr	r1, .L684+4
 17177 1864 FFF7FEFF 		bl	sprintf
2315:..\src/command_processing.c ****                 strcat(info_string, str);
 17178              		.loc 1 2315 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 382


 17179 1868 07F11C03 		add	r3, r7, #28
 17180 186c 1946     		mov	r1, r3
 17181 186e 7869     		ldr	r0, [r7, #20]
 17182 1870 FFF7FEFF 		bl	strcat
2316:..\src/command_processing.c ****                 
2317:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 17183              		.loc 1 2317 0
 17184 1874 07F11C03 		add	r3, r7, #28
 17185 1878 C94A     		ldr	r2, .L684+8
 17186 187a 1C46     		mov	r4, r3
 17187 187c 1546     		mov	r5, r2
 17188 187e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17189 1880 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17190 1882 2B68     		ldr	r3, [r5]
 17191 1884 2380     		strh	r3, [r4]	@ movhi
2318:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17192              		.loc 1 2318 0
 17193 1886 C44A     		ldr	r2, .L684
 17194 1888 D7F89430 		ldr	r3, [r7, #148]
 17195 188c 1344     		add	r3, r3, r2
 17196 188e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17197 1890 1946     		mov	r1, r3
 17198 1892 D7F88C20 		ldr	r2, [r7, #140]
 17199 1896 0B46     		mov	r3, r1
 17200 1898 9B00     		lsls	r3, r3, #2
 17201 189a 0B44     		add	r3, r3, r1
 17202 189c 1344     		add	r3, r3, r2
 17203 189e 03F20223 		addw	r3, r3, #514
 17204 18a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17205 18a4 002B     		cmp	r3, #0
 17206 18a6 0FD0     		beq	.L651
2319:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17207              		.loc 1 2319 0
 17208 18a8 07F11C03 		add	r3, r7, #28
 17209 18ac 1846     		mov	r0, r3
 17210 18ae FFF7FEFF 		bl	strlen
 17211 18b2 0346     		mov	r3, r0
 17212 18b4 1A46     		mov	r2, r3
 17213 18b6 07F11C03 		add	r3, r7, #28
 17214 18ba 1344     		add	r3, r3, r2
 17215 18bc B94A     		ldr	r2, .L684+12
 17216 18be 1068     		ldr	r0, [r2]	@ unaligned
 17217 18c0 1860     		str	r0, [r3]	@ unaligned
 17218 18c2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17219 18c4 9A80     		strh	r2, [r3, #4]	@ unaligned
 17220 18c6 0EE0     		b	.L652
 17221              	.L651:
2320:..\src/command_processing.c ****                 else
2321:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17222              		.loc 1 2321 0
 17223 18c8 07F11C03 		add	r3, r7, #28
 17224 18cc 1846     		mov	r0, r3
 17225 18ce FFF7FEFF 		bl	strlen
 17226 18d2 0346     		mov	r3, r0
 17227 18d4 1A46     		mov	r2, r3
 17228 18d6 07F11C03 		add	r3, r7, #28
 17229 18da 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 383


 17230 18dc B24A     		ldr	r2, .L684+16
 17231 18de 1068     		ldr	r0, [r2]	@ unaligned
 17232 18e0 1860     		str	r0, [r3]	@ unaligned
 17233 18e2 1279     		ldrb	r2, [r2, #4]
 17234 18e4 1A71     		strb	r2, [r3, #4]
 17235              	.L652:
2322:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 17236              		.loc 1 2322 0
 17237 18e6 07F11C03 		add	r3, r7, #28
 17238 18ea 1846     		mov	r0, r3
 17239 18ec FFF7FEFF 		bl	strlen
 17240 18f0 0346     		mov	r3, r0
 17241 18f2 1A46     		mov	r2, r3
 17242 18f4 07F11C03 		add	r3, r7, #28
 17243 18f8 1344     		add	r3, r3, r2
 17244 18fa AC4A     		ldr	r2, .L684+20
 17245 18fc 1C46     		mov	r4, r3
 17246 18fe 1346     		mov	r3, r2
 17247 1900 07CB     		ldmia	r3!, {r0, r1, r2}
 17248 1902 2060     		str	r0, [r4]	@ unaligned
 17249 1904 6160     		str	r1, [r4, #4]	@ unaligned
 17250 1906 A260     		str	r2, [r4, #8]	@ unaligned
 17251 1908 1B88     		ldrh	r3, [r3]	@ unaligned
 17252 190a A381     		strh	r3, [r4, #12]	@ unaligned
2323:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17253              		.loc 1 2323 0
 17254 190c A24A     		ldr	r2, .L684
 17255 190e D7F89430 		ldr	r3, [r7, #148]
 17256 1912 1344     		add	r3, r3, r2
 17257 1914 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17258 1916 1946     		mov	r1, r3
 17259 1918 D7F88C20 		ldr	r2, [r7, #140]
 17260 191c 0B46     		mov	r3, r1
 17261 191e 9B00     		lsls	r3, r3, #2
 17262 1920 0B44     		add	r3, r3, r1
 17263 1922 1344     		add	r3, r3, r2
 17264 1924 03F20323 		addw	r3, r3, #515
 17265 1928 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17266 192a 002B     		cmp	r3, #0
 17267 192c 0FD0     		beq	.L653
2324:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17268              		.loc 1 2324 0
 17269 192e 07F11C03 		add	r3, r7, #28
 17270 1932 1846     		mov	r0, r3
 17271 1934 FFF7FEFF 		bl	strlen
 17272 1938 0346     		mov	r3, r0
 17273 193a 1A46     		mov	r2, r3
 17274 193c 07F11C03 		add	r3, r7, #28
 17275 1940 1344     		add	r3, r3, r2
 17276 1942 984A     		ldr	r2, .L684+12
 17277 1944 1068     		ldr	r0, [r2]	@ unaligned
 17278 1946 1860     		str	r0, [r3]	@ unaligned
 17279 1948 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17280 194a 9A80     		strh	r2, [r3, #4]	@ unaligned
 17281 194c 0EE0     		b	.L654
 17282              	.L653:
2325:..\src/command_processing.c ****                 else
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 384


2326:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17283              		.loc 1 2326 0
 17284 194e 07F11C03 		add	r3, r7, #28
 17285 1952 1846     		mov	r0, r3
 17286 1954 FFF7FEFF 		bl	strlen
 17287 1958 0346     		mov	r3, r0
 17288 195a 1A46     		mov	r2, r3
 17289 195c 07F11C03 		add	r3, r7, #28
 17290 1960 1344     		add	r3, r3, r2
 17291 1962 914A     		ldr	r2, .L684+16
 17292 1964 1068     		ldr	r0, [r2]	@ unaligned
 17293 1966 1860     		str	r0, [r3]	@ unaligned
 17294 1968 1279     		ldrb	r2, [r2, #4]
 17295 196a 1A71     		strb	r2, [r3, #4]
 17296              	.L654:
2327:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 17297              		.loc 1 2327 0
 17298 196c 07F11C03 		add	r3, r7, #28
 17299 1970 1846     		mov	r0, r3
 17300 1972 FFF7FEFF 		bl	strlen
 17301 1976 0346     		mov	r3, r0
 17302 1978 1A46     		mov	r2, r3
 17303 197a 07F11C03 		add	r3, r7, #28
 17304 197e 1344     		add	r3, r3, r2
 17305 1980 8B4A     		ldr	r2, .L684+24
 17306 1982 1D46     		mov	r5, r3
 17307 1984 1446     		mov	r4, r2
 17308 1986 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17309 1988 2860     		str	r0, [r5]	@ unaligned
 17310 198a 6960     		str	r1, [r5, #4]	@ unaligned
 17311 198c AA60     		str	r2, [r5, #8]	@ unaligned
 17312 198e EB60     		str	r3, [r5, #12]	@ unaligned
 17313 1990 2378     		ldrb	r3, [r4]
 17314 1992 2B74     		strb	r3, [r5, #16]
2328:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17315              		.loc 1 2328 0
 17316 1994 804A     		ldr	r2, .L684
 17317 1996 D7F89430 		ldr	r3, [r7, #148]
 17318 199a 1344     		add	r3, r3, r2
 17319 199c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17320 199e 1946     		mov	r1, r3
 17321 19a0 D7F88C20 		ldr	r2, [r7, #140]
 17322 19a4 0B46     		mov	r3, r1
 17323 19a6 9B00     		lsls	r3, r3, #2
 17324 19a8 0B44     		add	r3, r3, r1
 17325 19aa 1344     		add	r3, r3, r2
 17326 19ac 03F50173 		add	r3, r3, #516
 17327 19b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17328 19b2 002B     		cmp	r3, #0
 17329 19b4 0FD0     		beq	.L655
2329:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17330              		.loc 1 2329 0
 17331 19b6 07F11C03 		add	r3, r7, #28
 17332 19ba 1846     		mov	r0, r3
 17333 19bc FFF7FEFF 		bl	strlen
 17334 19c0 0346     		mov	r3, r0
 17335 19c2 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 385


 17336 19c4 07F11C03 		add	r3, r7, #28
 17337 19c8 1344     		add	r3, r3, r2
 17338 19ca 764A     		ldr	r2, .L684+12
 17339 19cc 1068     		ldr	r0, [r2]	@ unaligned
 17340 19ce 1860     		str	r0, [r3]	@ unaligned
 17341 19d0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17342 19d2 9A80     		strh	r2, [r3, #4]	@ unaligned
 17343 19d4 0EE0     		b	.L656
 17344              	.L655:
2330:..\src/command_processing.c ****                 else
2331:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17345              		.loc 1 2331 0
 17346 19d6 07F11C03 		add	r3, r7, #28
 17347 19da 1846     		mov	r0, r3
 17348 19dc FFF7FEFF 		bl	strlen
 17349 19e0 0346     		mov	r3, r0
 17350 19e2 1A46     		mov	r2, r3
 17351 19e4 07F11C03 		add	r3, r7, #28
 17352 19e8 1344     		add	r3, r3, r2
 17353 19ea 6F4A     		ldr	r2, .L684+16
 17354 19ec 1068     		ldr	r0, [r2]	@ unaligned
 17355 19ee 1860     		str	r0, [r3]	@ unaligned
 17356 19f0 1279     		ldrb	r2, [r2, #4]
 17357 19f2 1A71     		strb	r2, [r3, #4]
 17358              	.L656:
2332:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 17359              		.loc 1 2332 0
 17360 19f4 07F11C03 		add	r3, r7, #28
 17361 19f8 1846     		mov	r0, r3
 17362 19fa FFF7FEFF 		bl	strlen
 17363 19fe 0346     		mov	r3, r0
 17364 1a00 1A46     		mov	r2, r3
 17365 1a02 07F11C03 		add	r3, r7, #28
 17366 1a06 1344     		add	r3, r3, r2
 17367 1a08 6A4A     		ldr	r2, .L684+28
 17368 1a0a 1C46     		mov	r4, r3
 17369 1a0c 1346     		mov	r3, r2
 17370 1a0e 07CB     		ldmia	r3!, {r0, r1, r2}
 17371 1a10 2060     		str	r0, [r4]	@ unaligned
 17372 1a12 6160     		str	r1, [r4, #4]	@ unaligned
 17373 1a14 A260     		str	r2, [r4, #8]	@ unaligned
 17374 1a16 1B88     		ldrh	r3, [r3]	@ unaligned
 17375 1a18 A381     		strh	r3, [r4, #12]	@ unaligned
2333:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17376              		.loc 1 2333 0
 17377 1a1a 5F4A     		ldr	r2, .L684
 17378 1a1c D7F89430 		ldr	r3, [r7, #148]
 17379 1a20 1344     		add	r3, r3, r2
 17380 1a22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17381 1a24 1946     		mov	r1, r3
 17382 1a26 D7F88C20 		ldr	r2, [r7, #140]
 17383 1a2a 0B46     		mov	r3, r1
 17384 1a2c 9B00     		lsls	r3, r3, #2
 17385 1a2e 0B44     		add	r3, r3, r1
 17386 1a30 1344     		add	r3, r3, r2
 17387 1a32 03F20523 		addw	r3, r3, #517
 17388 1a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 386


 17389 1a38 002B     		cmp	r3, #0
 17390 1a3a 0FD0     		beq	.L657
2334:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17391              		.loc 1 2334 0
 17392 1a3c 07F11C03 		add	r3, r7, #28
 17393 1a40 1846     		mov	r0, r3
 17394 1a42 FFF7FEFF 		bl	strlen
 17395 1a46 0346     		mov	r3, r0
 17396 1a48 1A46     		mov	r2, r3
 17397 1a4a 07F11C03 		add	r3, r7, #28
 17398 1a4e 1344     		add	r3, r3, r2
 17399 1a50 544A     		ldr	r2, .L684+12
 17400 1a52 1068     		ldr	r0, [r2]	@ unaligned
 17401 1a54 1860     		str	r0, [r3]	@ unaligned
 17402 1a56 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17403 1a58 9A80     		strh	r2, [r3, #4]	@ unaligned
 17404 1a5a 0EE0     		b	.L658
 17405              	.L657:
2335:..\src/command_processing.c ****                 else
2336:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17406              		.loc 1 2336 0
 17407 1a5c 07F11C03 		add	r3, r7, #28
 17408 1a60 1846     		mov	r0, r3
 17409 1a62 FFF7FEFF 		bl	strlen
 17410 1a66 0346     		mov	r3, r0
 17411 1a68 1A46     		mov	r2, r3
 17412 1a6a 07F11C03 		add	r3, r7, #28
 17413 1a6e 1344     		add	r3, r3, r2
 17414 1a70 4D4A     		ldr	r2, .L684+16
 17415 1a72 1068     		ldr	r0, [r2]	@ unaligned
 17416 1a74 1860     		str	r0, [r3]	@ unaligned
 17417 1a76 1279     		ldrb	r2, [r2, #4]
 17418 1a78 1A71     		strb	r2, [r3, #4]
 17419              	.L658:
2337:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 17420              		.loc 1 2337 0
 17421 1a7a 07F11C03 		add	r3, r7, #28
 17422 1a7e 1846     		mov	r0, r3
 17423 1a80 FFF7FEFF 		bl	strlen
 17424 1a84 0346     		mov	r3, r0
 17425 1a86 1A46     		mov	r2, r3
 17426 1a88 07F11C03 		add	r3, r7, #28
 17427 1a8c 1344     		add	r3, r3, r2
 17428 1a8e 4A4A     		ldr	r2, .L684+32
 17429 1a90 1C46     		mov	r4, r3
 17430 1a92 1346     		mov	r3, r2
 17431 1a94 07CB     		ldmia	r3!, {r0, r1, r2}
 17432 1a96 2060     		str	r0, [r4]	@ unaligned
 17433 1a98 6160     		str	r1, [r4, #4]	@ unaligned
 17434 1a9a A260     		str	r2, [r4, #8]	@ unaligned
 17435 1a9c 1A88     		ldrh	r2, [r3]	@ unaligned
 17436 1a9e 9B78     		ldrb	r3, [r3, #2]
 17437 1aa0 A281     		strh	r2, [r4, #12]	@ unaligned
 17438 1aa2 A373     		strb	r3, [r4, #14]
2338:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17439              		.loc 1 2338 0
 17440 1aa4 3C4A     		ldr	r2, .L684
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 387


 17441 1aa6 D7F89430 		ldr	r3, [r7, #148]
 17442 1aaa 1344     		add	r3, r3, r2
 17443 1aac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17444 1aae 1946     		mov	r1, r3
 17445 1ab0 D7F88C20 		ldr	r2, [r7, #140]
 17446 1ab4 0B46     		mov	r3, r1
 17447 1ab6 9B00     		lsls	r3, r3, #2
 17448 1ab8 0B44     		add	r3, r3, r1
 17449 1aba 1344     		add	r3, r3, r2
 17450 1abc 03F20623 		addw	r3, r3, #518
 17451 1ac0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17452 1ac2 002B     		cmp	r3, #0
 17453 1ac4 0FD0     		beq	.L659
2339:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17454              		.loc 1 2339 0
 17455 1ac6 07F11C03 		add	r3, r7, #28
 17456 1aca 1846     		mov	r0, r3
 17457 1acc FFF7FEFF 		bl	strlen
 17458 1ad0 0346     		mov	r3, r0
 17459 1ad2 1A46     		mov	r2, r3
 17460 1ad4 07F11C03 		add	r3, r7, #28
 17461 1ad8 1344     		add	r3, r3, r2
 17462 1ada 324A     		ldr	r2, .L684+12
 17463 1adc 1068     		ldr	r0, [r2]	@ unaligned
 17464 1ade 1860     		str	r0, [r3]	@ unaligned
 17465 1ae0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17466 1ae2 9A80     		strh	r2, [r3, #4]	@ unaligned
 17467 1ae4 0EE0     		b	.L660
 17468              	.L659:
2340:..\src/command_processing.c ****                 else
2341:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17469              		.loc 1 2341 0
 17470 1ae6 07F11C03 		add	r3, r7, #28
 17471 1aea 1846     		mov	r0, r3
 17472 1aec FFF7FEFF 		bl	strlen
 17473 1af0 0346     		mov	r3, r0
 17474 1af2 1A46     		mov	r2, r3
 17475 1af4 07F11C03 		add	r3, r7, #28
 17476 1af8 1344     		add	r3, r3, r2
 17477 1afa 2B4A     		ldr	r2, .L684+16
 17478 1afc 1068     		ldr	r0, [r2]	@ unaligned
 17479 1afe 1860     		str	r0, [r3]	@ unaligned
 17480 1b00 1279     		ldrb	r2, [r2, #4]
 17481 1b02 1A71     		strb	r2, [r3, #4]
 17482              	.L660:
2342:..\src/command_processing.c ****                      
2343:..\src/command_processing.c ****                 strcat(info_string, str);
 17483              		.loc 1 2343 0 discriminator 2
 17484 1b04 07F11C03 		add	r3, r7, #28
 17485 1b08 1946     		mov	r1, r3
 17486 1b0a 7869     		ldr	r0, [r7, #20]
 17487 1b0c FFF7FEFF 		bl	strcat
2313:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17488              		.loc 1 2313 0 discriminator 2
 17489 1b10 D7F89430 		ldr	r3, [r7, #148]
 17490 1b14 0133     		adds	r3, r3, #1
 17491 1b16 C7F89430 		str	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 388


 17492              	.L650:
2313:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17493              		.loc 1 2313 0 is_stmt 0 discriminator 1
 17494 1b1a 284B     		ldr	r3, .L684+36
 17495 1b1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17496 1b1e 1A46     		mov	r2, r3
 17497 1b20 D7F89430 		ldr	r3, [r7, #148]
 17498 1b24 9A42     		cmp	r2, r3
 17499 1b26 3FF793AE 		bgt	.L661
2344:..\src/command_processing.c ****             }       
2345:..\src/command_processing.c ****             
2346:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17500              		.loc 1 2346 0 is_stmt 1
 17501 1b2a 7869     		ldr	r0, [r7, #20]
 17502 1b2c FFF7FEFF 		bl	strlen
 17503 1b30 0346     		mov	r3, r0
 17504 1b32 1A46     		mov	r2, r3
 17505 1b34 7B69     		ldr	r3, [r7, #20]
 17506 1b36 1344     		add	r3, r3, r2
 17507 1b38 214A     		ldr	r2, .L684+40
 17508 1b3a 1188     		ldrh	r1, [r2]	@ unaligned
 17509 1b3c 9278     		ldrb	r2, [r2, #2]
 17510 1b3e 1980     		strh	r1, [r3]	@ unaligned
 17511 1b40 9A70     		strb	r2, [r3, #2]
2347:..\src/command_processing.c ****           
2348:..\src/command_processing.c ****             IMU_reading_info(info_string);
 17512              		.loc 1 2348 0
 17513 1b42 7869     		ldr	r0, [r7, #20]
 17514 1b44 FFF7FEFF 		bl	IMU_reading_info
 17515              	.L649:
2349:..\src/command_processing.c ****         }
2350:..\src/command_processing.c ****         
2351:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17516              		.loc 1 2351 0
 17517 1b48 7869     		ldr	r0, [r7, #20]
 17518 1b4a FFF7FEFF 		bl	strlen
 17519 1b4e 0346     		mov	r3, r0
 17520 1b50 1A46     		mov	r2, r3
 17521 1b52 7B69     		ldr	r3, [r7, #20]
 17522 1b54 1344     		add	r3, r3, r2
 17523 1b56 1A4A     		ldr	r2, .L684+40
 17524 1b58 1188     		ldrh	r1, [r2]	@ unaligned
 17525 1b5a 9278     		ldrb	r2, [r2, #2]
 17526 1b5c 1980     		strh	r1, [r3]	@ unaligned
 17527 1b5e 9A70     		strb	r2, [r3, #2]
2352:..\src/command_processing.c **** 
2353:..\src/command_processing.c **** #ifdef GENERIC_FW   
2354:..\src/command_processing.c ****         int j;
2355:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
2356:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
2357:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
2358:..\src/command_processing.c ****             strcat(info_string, str);
2359:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
2360:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
2361:..\src/command_processing.c ****                 strcat(info_string, str);
2362:..\src/command_processing.c ****             }
2363:..\src/command_processing.c ****             strcat(info_string, "\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 389


2364:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
2365:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
2366:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
2367:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
2368:..\src/command_processing.c ****                     strcat(info_string, str);
2369:..\src/command_processing.c ****                 }
2370:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
2371:..\src/command_processing.c ****             }
2372:..\src/command_processing.c ****         }
2373:..\src/command_processing.c **** #endif   
2374:..\src/command_processing.c ****         
2375:..\src/command_processing.c **** #ifdef MASTER_FW
2376:..\src/command_processing.c ****         if (MEM_P->MS.master_mode_active)
 17528              		.loc 1 2376 0
 17529 1b60 D7F88C30 		ldr	r3, [r7, #140]
 17530 1b64 93F8C032 		ldrb	r3, [r3, #704]	@ zero_extendqisi2
 17531 1b68 002B     		cmp	r3, #0
 17532 1b6a 2DD0     		beq	.L662
2377:..\src/command_processing.c ****             strcat(info_string, "Master Mode active: YES\r\n");
 17533              		.loc 1 2377 0
 17534 1b6c 7869     		ldr	r0, [r7, #20]
 17535 1b6e FFF7FEFF 		bl	strlen
 17536 1b72 0346     		mov	r3, r0
 17537 1b74 1A46     		mov	r2, r3
 17538 1b76 7B69     		ldr	r3, [r7, #20]
 17539 1b78 1344     		add	r3, r3, r2
 17540 1b7a 124A     		ldr	r2, .L684+44
 17541 1b7c 1D46     		mov	r5, r3
 17542 1b7e 1446     		mov	r4, r2
 17543 1b80 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17544 1b82 2860     		str	r0, [r5]	@ unaligned
 17545 1b84 6960     		str	r1, [r5, #4]	@ unaligned
 17546 1b86 AA60     		str	r2, [r5, #8]	@ unaligned
 17547 1b88 EB60     		str	r3, [r5, #12]	@ unaligned
 17548 1b8a 03CC     		ldmia	r4!, {r0, r1}
 17549 1b8c 2861     		str	r0, [r5, #16]	@ unaligned
 17550 1b8e 6961     		str	r1, [r5, #20]	@ unaligned
 17551 1b90 2388     		ldrh	r3, [r4]	@ unaligned
 17552 1b92 2B83     		strh	r3, [r5, #24]	@ unaligned
 17553 1b94 2CE0     		b	.L663
 17554              	.L685:
 17555 1b96 00BF     		.align	2
 17556              	.L684:
 17557 1b98 00000000 		.word	IMU_connected
 17558 1b9c 2C190000 		.word	.LC240
 17559 1ba0 40190000 		.word	.LC241
 17560 1ba4 10130000 		.word	.LC175
 17561 1ba8 18130000 		.word	.LC176
 17562 1bac 54190000 		.word	.LC242
 17563 1bb0 64190000 		.word	.LC243
 17564 1bb4 78190000 		.word	.LC244
 17565 1bb8 88190000 		.word	.LC245
 17566 1bbc 00000000 		.word	N_IMU_Connected
 17567 1bc0 50110000 		.word	.LC152
 17568 1bc4 98190000 		.word	.LC246
 17569              	.L662:
2378:..\src/command_processing.c ****         else
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 390


2379:..\src/command_processing.c ****             strcat(info_string, "Master Mode active: NO\r\n");
 17570              		.loc 1 2379 0
 17571 1bc8 7869     		ldr	r0, [r7, #20]
 17572 1bca FFF7FEFF 		bl	strlen
 17573 1bce 0346     		mov	r3, r0
 17574 1bd0 1A46     		mov	r2, r3
 17575 1bd2 7B69     		ldr	r3, [r7, #20]
 17576 1bd4 1344     		add	r3, r3, r2
 17577 1bd6 204A     		ldr	r2, .L686
 17578 1bd8 1D46     		mov	r5, r3
 17579 1bda 1446     		mov	r4, r2
 17580 1bdc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17581 1bde 2860     		str	r0, [r5]	@ unaligned
 17582 1be0 6960     		str	r1, [r5, #4]	@ unaligned
 17583 1be2 AA60     		str	r2, [r5, #8]	@ unaligned
 17584 1be4 EB60     		str	r3, [r5, #12]	@ unaligned
 17585 1be6 03CC     		ldmia	r4!, {r0, r1}
 17586 1be8 2861     		str	r0, [r5, #16]	@ unaligned
 17587 1bea 6961     		str	r1, [r5, #20]	@ unaligned
 17588 1bec 2378     		ldrb	r3, [r4]
 17589 1bee 2B76     		strb	r3, [r5, #24]
 17590              	.L663:
2380:..\src/command_processing.c **** 
2381:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
 17591              		.loc 1 2381 0
 17592 1bf0 D7F88C30 		ldr	r3, [r7, #140]
 17593 1bf4 93F8C132 		ldrb	r3, [r3, #705]	@ zero_extendqisi2
 17594 1bf8 1A46     		mov	r2, r3
 17595 1bfa 07F11C03 		add	r3, r7, #28
 17596 1bfe 1749     		ldr	r1, .L686+4
 17597 1c00 1846     		mov	r0, r3
 17598 1c02 FFF7FEFF 		bl	sprintf
2382:..\src/command_processing.c ****         strcat(info_string, str);
 17599              		.loc 1 2382 0
 17600 1c06 07F11C03 		add	r3, r7, #28
 17601 1c0a 1946     		mov	r1, r3
 17602 1c0c 7869     		ldr	r0, [r7, #20]
 17603 1c0e FFF7FEFF 		bl	strcat
2383:..\src/command_processing.c **** #endif
2384:..\src/command_processing.c **** 
2385:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 17604              		.loc 1 2385 0
 17605 1c12 134B     		ldr	r3, .L686+8
 17606 1c14 1B88     		ldrh	r3, [r3]
 17607 1c16 1A46     		mov	r2, r3
 17608 1c18 124B     		ldr	r3, .L686+12
 17609 1c1a 1B88     		ldrh	r3, [r3]
 17610 1c1c D21A     		subs	r2, r2, r3
 17611 1c1e 07F11C03 		add	r3, r7, #28
 17612 1c22 1149     		ldr	r1, .L686+16
 17613 1c24 1846     		mov	r0, r3
 17614 1c26 FFF7FEFF 		bl	sprintf
2386:..\src/command_processing.c ****         strcat(info_string, str);
 17615              		.loc 1 2386 0
 17616 1c2a 07F11C03 		add	r3, r7, #28
 17617 1c2e 1946     		mov	r1, r3
 17618 1c30 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 391


 17619 1c32 FFF7FEFF 		bl	strcat
2387:..\src/command_processing.c ****   
2388:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 17620              		.loc 1 2388 0
 17621 1c36 7869     		ldr	r0, [r7, #20]
 17622 1c38 FFF7FEFF 		bl	strlen
 17623 1c3c 0346     		mov	r3, r0
 17624 1c3e 1A46     		mov	r2, r3
 17625 1c40 7B69     		ldr	r3, [r7, #20]
 17626 1c42 1344     		add	r3, r3, r2
 17627 1c44 094A     		ldr	r2, .L686+20
 17628 1c46 1188     		ldrh	r1, [r2]	@ unaligned
 17629 1c48 9278     		ldrb	r2, [r2, #2]
 17630 1c4a 1980     		strh	r1, [r3]	@ unaligned
 17631 1c4c 9A70     		strb	r2, [r3, #2]
 17632              	.L665:
 17633              	.LBE24:
2389:..\src/command_processing.c ****     }
2390:..\src/command_processing.c **** }
 17634              		.loc 1 2390 0
 17635 1c4e 00BF     		nop
 17636 1c50 9C37     		adds	r7, r7, #156
 17637              		.cfi_def_cfa_offset 36
 17638 1c52 BD46     		mov	sp, r7
 17639              		.cfi_def_cfa_register 13
 17640              		@ sp needed
 17641 1c54 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17642              	.L687:
 17643              		.align	2
 17644              	.L686:
 17645 1c58 B4190000 		.word	.LC247
 17646 1c5c D0190000 		.word	.LC248
 17647 1c60 00000000 		.word	timer_value0
 17648 1c64 00000000 		.word	timer_value
 17649 1c68 E0190000 		.word	.LC249
 17650 1c6c FC190000 		.word	.LC250
 17651              		.cfi_endproc
 17652              	.LFE72:
 17653              		.size	prepare_generic_info, .-prepare_generic_info
 17654              		.section	.rodata
 17655              		.align	2
 17656              	.LC251:
 17657 1a00 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 17657      41474520 
 17657      53544154 
 17657      49535449 
 17657      43530D0A 
 17658 1a15 000000   		.align	2
 17659              	.LC252:
 17660 1a18 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 17660      206F6620 
 17660      4857206D 
 17660      61696E74 
 17660      656E616E 
 17661 1a43 00       		.align	2
 17662              	.LC253:
 17663 1a44 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 392


 17663      206F6620 
 17663      75736167 
 17663      65207374 
 17663      61747320 
 17664 1a77 0A00     		.ascii	"\012\000"
 17665 1a79 000000   		.align	2
 17666              	.LC254:
 17667 1a7c 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 17667      20636865 
 17667      636B6564 
 17667      2054696D 
 17667      653A2025 
 17668 1aaf 0A00     		.ascii	"\012\000"
 17669 1ab1 000000   		.align	2
 17670              	.LC255:
 17671 1ab4 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 17671      74696F6E 
 17671      73206869 
 17671      73746F67 
 17671      72616D20 
 17672 1ad3 00       		.align	2
 17673              	.LC256:
 17674 1ad4 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 17674      2564205B 
 17674      25642D25 
 17674      645D3A20 
 17674      256C750D 
 17675 1aea 0000     		.align	2
 17676              	.LC257:
 17677 1aec 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 17677      656E7420 
 17677      68697374 
 17677      6F677261 
 17677      6D20286D 
 17678 1b06 0000     		.align	2
 17679              	.LC258:
 17680 1b08 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 17680      73686F6C 
 17680      64202564 
 17680      205B2564 
 17680      2D25645D 
 17681              		.align	2
 17682              	.LC259:
 17683 1b24 4D6F7469 		.ascii	"Motions through EMG counter: %lu, %lu\000"
 17683      6F6E7320 
 17683      7468726F 
 17683      75676820 
 17683      454D4720 
 17684 1b4a 0000     		.align	2
 17685              	.LC260:
 17686 1b4c 52657374 		.ascii	"Rest position occurrences: %lu\000"
 17686      20706F73 
 17686      6974696F 
 17686      6E206F63 
 17686      63757272 
 17687 1b6b 00       		.align	2
 17688              	.LC261:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 393


 17689 1b6c 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 17689      6520746F 
 17689      74616C20 
 17689      64697370 
 17689      6C616365 
 17690 1b92 0000     		.align	2
 17691              	.LC262:
 17692 1b94 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 17692      6C20706F 
 17692      77657220 
 17692      6F6E2074 
 17692      696D6520 
 17693 1bb3 00       		.align	2
 17694              	.LC263:
 17695 1bb4 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 17695      6C207265 
 17695      73742070 
 17695      6F736974 
 17695      696F6E20 
 17696              		.section	.text.prepare_counter_info,"ax",%progbits
 17697              		.align	2
 17698              		.global	prepare_counter_info
 17699              		.thumb
 17700              		.thumb_func
 17701              		.type	prepare_counter_info, %function
 17702              	prepare_counter_info:
 17703              	.LFB73:
2391:..\src/command_processing.c **** 
2392:..\src/command_processing.c **** //==============================================================================
2393:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2394:..\src/command_processing.c **** //==============================================================================
2395:..\src/command_processing.c **** 
2396:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2397:..\src/command_processing.c **** {
 17704              		.loc 1 2397 0
 17705              		.cfi_startproc
 17706              		@ args = 0, pretend = 0, frame = 432
 17707              		@ frame_needed = 1, uses_anonymous_args = 0
 17708 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 17709              		.cfi_def_cfa_offset 20
 17710              		.cfi_offset 4, -20
 17711              		.cfi_offset 5, -16
 17712              		.cfi_offset 6, -12
 17713              		.cfi_offset 7, -8
 17714              		.cfi_offset 14, -4
 17715 0002 F1B0     		sub	sp, sp, #452
 17716              		.cfi_def_cfa_offset 472
 17717 0004 04AF     		add	r7, sp, #16
 17718              		.cfi_def_cfa 7, 456
 17719 0006 3B1D     		adds	r3, r7, #4
 17720 0008 1860     		str	r0, [r3]
2398:..\src/command_processing.c ****     char str[100];  
2399:..\src/command_processing.c ****     int i;
2400:..\src/command_processing.c ****     int step;
2401:..\src/command_processing.c **** 
2402:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17721              		.loc 1 2402 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 394


 17722 000a 964B     		ldr	r3, .L694
 17723 000c C7F8A831 		str	r3, [r7, #424]
2403:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 17724              		.loc 1 2403 0
 17725 0010 D7F8A831 		ldr	r3, [r7, #424]
 17726 0014 B033     		adds	r3, r3, #176
 17727 0016 C7F8A431 		str	r3, [r7, #420]
2404:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 17728              		.loc 1 2404 0
 17729 001a D7F8A431 		ldr	r3, [r7, #420]
 17730 001e 93F86030 		ldrb	r3, [r3, #96]
 17731 0022 87F8A331 		strb	r3, [r7, #419]
2405:..\src/command_processing.c ****     
2406:..\src/command_processing.c ****     strcpy(info_string, "");
 17732              		.loc 1 2406 0
 17733 0026 3B1D     		adds	r3, r7, #4
 17734 0028 1B68     		ldr	r3, [r3]
 17735 002a 0022     		movs	r2, #0
 17736 002c 1A70     		strb	r2, [r3]
2407:..\src/command_processing.c ****     
2408:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 17737              		.loc 1 2408 0
 17738 002e 3B1D     		adds	r3, r7, #4
 17739 0030 1868     		ldr	r0, [r3]
 17740 0032 FFF7FEFF 		bl	strlen
 17741 0036 0346     		mov	r3, r0
 17742 0038 1A46     		mov	r2, r3
 17743 003a 3B1D     		adds	r3, r7, #4
 17744 003c 1B68     		ldr	r3, [r3]
 17745 003e 1344     		add	r3, r3, r2
 17746 0040 894A     		ldr	r2, .L694+4
 17747 0042 1D46     		mov	r5, r3
 17748 0044 1446     		mov	r4, r2
 17749 0046 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17750 0048 2860     		str	r0, [r5]	@ unaligned
 17751 004a 6960     		str	r1, [r5, #4]	@ unaligned
 17752 004c AA60     		str	r2, [r5, #8]	@ unaligned
 17753 004e EB60     		str	r3, [r5, #12]	@ unaligned
 17754 0050 2068     		ldr	r0, [r4]	@ unaligned
 17755 0052 2861     		str	r0, [r5, #16]	@ unaligned
 17756 0054 2379     		ldrb	r3, [r4, #4]
 17757 0056 2B75     		strb	r3, [r5, #20]
2409:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17758              		.loc 1 2409 0
 17759 0058 3B1D     		adds	r3, r7, #4
 17760 005a 1868     		ldr	r0, [r3]
 17761 005c FFF7FEFF 		bl	strlen
 17762 0060 0346     		mov	r3, r0
 17763 0062 1A46     		mov	r2, r3
 17764 0064 3B1D     		adds	r3, r7, #4
 17765 0066 1B68     		ldr	r3, [r3]
 17766 0068 1344     		add	r3, r3, r2
 17767 006a 804A     		ldr	r2, .L694+8
 17768 006c 1188     		ldrh	r1, [r2]	@ unaligned
 17769 006e 9278     		ldrb	r2, [r2, #2]
 17770 0070 1980     		strh	r1, [r3]	@ unaligned
 17771 0072 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 395


2410:..\src/command_processing.c ****     
2411:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17772              		.loc 1 2411 0
 17773 0074 D7F8A831 		ldr	r3, [r7, #424]
 17774 0078 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17775 007c 1A46     		mov	r2, r3
 17776 007e D7F8A831 		ldr	r3, [r7, #424]
 17777 0082 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17778 0086 1946     		mov	r1, r3
 17779 0088 D7F8A831 		ldr	r3, [r7, #424]
 17780 008c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17781 0090 07F59C70 		add	r0, r7, #312
 17782 0094 0093     		str	r3, [sp]
 17783 0096 0B46     		mov	r3, r1
 17784 0098 7549     		ldr	r1, .L694+12
 17785 009a FFF7FEFF 		bl	sprintf
2412:..\src/command_processing.c ****     strcat(info_string, str);
 17786              		.loc 1 2412 0
 17787 009e 07F59C72 		add	r2, r7, #312
 17788 00a2 3B1D     		adds	r3, r7, #4
 17789 00a4 1146     		mov	r1, r2
 17790 00a6 1868     		ldr	r0, [r3]
 17791 00a8 FFF7FEFF 		bl	strcat
2413:..\src/command_processing.c ****     
2414:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17792              		.loc 1 2414 0
 17793 00ac D7F8A831 		ldr	r3, [r7, #424]
 17794 00b0 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17795 00b4 1A46     		mov	r2, r3
 17796 00b6 D7F8A831 		ldr	r3, [r7, #424]
 17797 00ba 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17798 00be 1946     		mov	r1, r3
 17799 00c0 D7F8A831 		ldr	r3, [r7, #424]
 17800 00c4 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17801 00c8 07F59C70 		add	r0, r7, #312
 17802 00cc 0093     		str	r3, [sp]
 17803 00ce 0B46     		mov	r3, r1
 17804 00d0 6849     		ldr	r1, .L694+16
 17805 00d2 FFF7FEFF 		bl	sprintf
2415:..\src/command_processing.c ****     strcat(info_string, str);
 17806              		.loc 1 2415 0
 17807 00d6 07F59C72 		add	r2, r7, #312
 17808 00da 3B1D     		adds	r3, r7, #4
 17809 00dc 1146     		mov	r1, r2
 17810 00de 1868     		ldr	r0, [r3]
 17811 00e0 FFF7FEFF 		bl	strcat
2416:..\src/command_processing.c ****             
2417:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 17812              		.loc 1 2417 0
 17813 00e4 D7F8A831 		ldr	r3, [r7, #424]
 17814 00e8 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 17815 00ec 1D46     		mov	r5, r3
 17816 00ee D7F8A831 		ldr	r3, [r7, #424]
 17817 00f2 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 17818 00f6 1E46     		mov	r6, r3
 17819 00f8 D7F8A831 		ldr	r3, [r7, #424]
 17820 00fc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 396


 17821 0100 1A46     		mov	r2, r3
 17822 0102 D7F8A831 		ldr	r3, [r7, #424]
 17823 0106 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 17824 010a 1946     		mov	r1, r3
 17825 010c D7F8A831 		ldr	r3, [r7, #424]
 17826 0110 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 17827 0114 1C46     		mov	r4, r3
 17828 0116 D7F8A831 		ldr	r3, [r7, #424]
 17829 011a 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 17830 011e 07F59C70 		add	r0, r7, #312
 17831 0122 0393     		str	r3, [sp, #12]
 17832 0124 0294     		str	r4, [sp, #8]
 17833 0126 0191     		str	r1, [sp, #4]
 17834 0128 0092     		str	r2, [sp]
 17835 012a 3346     		mov	r3, r6
 17836 012c 2A46     		mov	r2, r5
 17837 012e 5249     		ldr	r1, .L694+20
 17838 0130 FFF7FEFF 		bl	sprintf
2418:..\src/command_processing.c ****     strcat(info_string, str);
 17839              		.loc 1 2418 0
 17840 0134 07F59C72 		add	r2, r7, #312
 17841 0138 3B1D     		adds	r3, r7, #4
 17842 013a 1146     		mov	r1, r2
 17843 013c 1868     		ldr	r0, [r3]
 17844 013e FFF7FEFF 		bl	strcat
2419:..\src/command_processing.c ****     
2420:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 17845              		.loc 1 2420 0
 17846 0142 07F59C73 		add	r3, r7, #312
 17847 0146 4D4A     		ldr	r2, .L694+24
 17848 0148 1C46     		mov	r4, r3
 17849 014a 1546     		mov	r5, r2
 17850 014c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17851 014e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17852 0150 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 17853 0154 07C4     		stmia	r4!, {r0, r1, r2}
 17854 0156 2380     		strh	r3, [r4]	@ movhi
 17855 0158 0234     		adds	r4, r4, #2
 17856 015a 1B0C     		lsrs	r3, r3, #16
 17857 015c 2370     		strb	r3, [r4]
2421:..\src/command_processing.c ****     strcat(info_string, str);
 17858              		.loc 1 2421 0
 17859 015e 07F59C72 		add	r2, r7, #312
 17860 0162 3B1D     		adds	r3, r7, #4
 17861 0164 1146     		mov	r1, r2
 17862 0166 1868     		ldr	r0, [r3]
 17863 0168 FFF7FEFF 		bl	strcat
2422:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 17864              		.loc 1 2422 0
 17865 016c D7F8A431 		ldr	r3, [r7, #420]
 17866 0170 996B     		ldr	r1, [r3, #56]
 17867 0172 97F8A321 		ldrb	r2, [r7, #419]	@ zero_extendqisi2
 17868 0176 D7F8A801 		ldr	r0, [r7, #424]
 17869 017a 1346     		mov	r3, r2
 17870 017c 5B00     		lsls	r3, r3, #1
 17871 017e 1344     		add	r3, r3, r2
 17872 0180 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 397


 17873 0182 0344     		add	r3, r3, r0
 17874 0184 03F29513 		addw	r3, r3, #405
 17875 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17876 018a 41FA03F3 		asr	r3, r1, r3
 17877 018e 3C4A     		ldr	r2, .L694+28
 17878 0190 82FB0312 		smull	r1, r2, r2, r3
 17879 0194 9210     		asrs	r2, r2, #2
 17880 0196 DB17     		asrs	r3, r3, #31
 17881 0198 D31A     		subs	r3, r2, r3
 17882 019a C7F89C31 		str	r3, [r7, #412]
2423:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17883              		.loc 1 2423 0
 17884 019e 0123     		movs	r3, #1
 17885 01a0 C7F8AC31 		str	r3, [r7, #428]
 17886 01a4 2BE0     		b	.L689
 17887              	.L690:
2424:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 17888              		.loc 1 2424 0 discriminator 3
 17889 01a6 D7F8AC31 		ldr	r3, [r7, #428]
 17890 01aa 013B     		subs	r3, r3, #1
 17891 01ac D7F89C21 		ldr	r2, [r7, #412]
 17892 01b0 02FB03F3 		mul	r3, r2, r3
 17893 01b4 5C1C     		adds	r4, r3, #1
 17894 01b6 D7F89C31 		ldr	r3, [r7, #412]
 17895 01ba D7F8AC21 		ldr	r2, [r7, #428]
 17896 01be 02FB03F3 		mul	r3, r2, r3
 17897 01c2 D7F8AC21 		ldr	r2, [r7, #428]
 17898 01c6 511E     		subs	r1, r2, #1
 17899 01c8 D7F8A821 		ldr	r2, [r7, #424]
 17900 01cc 0631     		adds	r1, r1, #6
 17901 01ce 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17902 01d2 07F59C70 		add	r0, r7, #312
 17903 01d6 0192     		str	r2, [sp, #4]
 17904 01d8 0093     		str	r3, [sp]
 17905 01da 2346     		mov	r3, r4
 17906 01dc D7F8AC21 		ldr	r2, [r7, #428]
 17907 01e0 2849     		ldr	r1, .L694+32
 17908 01e2 FFF7FEFF 		bl	sprintf
2425:..\src/command_processing.c ****         strcat(info_string, str);
 17909              		.loc 1 2425 0 discriminator 3
 17910 01e6 07F59C72 		add	r2, r7, #312
 17911 01ea 3B1D     		adds	r3, r7, #4
 17912 01ec 1146     		mov	r1, r2
 17913 01ee 1868     		ldr	r0, [r3]
 17914 01f0 FFF7FEFF 		bl	strcat
2423:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17915              		.loc 1 2423 0 discriminator 3
 17916 01f4 D7F8AC31 		ldr	r3, [r7, #428]
 17917 01f8 0133     		adds	r3, r3, #1
 17918 01fa C7F8AC31 		str	r3, [r7, #428]
 17919              	.L689:
2423:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17920              		.loc 1 2423 0 is_stmt 0 discriminator 1
 17921 01fe D7F8AC31 		ldr	r3, [r7, #428]
 17922 0202 0A2B     		cmp	r3, #10
 17923 0204 CFDD     		ble	.L690
2426:..\src/command_processing.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 398


2427:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17924              		.loc 1 2427 0 is_stmt 1
 17925 0206 3B1D     		adds	r3, r7, #4
 17926 0208 1868     		ldr	r0, [r3]
 17927 020a FFF7FEFF 		bl	strlen
 17928 020e 0346     		mov	r3, r0
 17929 0210 1A46     		mov	r2, r3
 17930 0212 3B1D     		adds	r3, r7, #4
 17931 0214 1B68     		ldr	r3, [r3]
 17932 0216 1344     		add	r3, r3, r2
 17933 0218 144A     		ldr	r2, .L694+8
 17934 021a 1188     		ldrh	r1, [r2]	@ unaligned
 17935 021c 9278     		ldrb	r2, [r2, #2]
 17936 021e 1980     		strh	r1, [r3]	@ unaligned
 17937 0220 9A70     		strb	r2, [r3, #2]
2428:..\src/command_processing.c ****     
2429:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 17938              		.loc 1 2429 0
 17939 0222 07F59C73 		add	r3, r7, #312
 17940 0226 184A     		ldr	r2, .L694+36
 17941 0228 1C46     		mov	r4, r3
 17942 022a 1546     		mov	r5, r2
 17943 022c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17944 022e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17945 0230 95E80700 		ldmia	r5, {r0, r1, r2}
 17946 0234 03C4     		stmia	r4!, {r0, r1}
 17947 0236 2280     		strh	r2, [r4]	@ movhi
2430:..\src/command_processing.c ****     strcat(info_string, str);
 17948              		.loc 1 2430 0
 17949 0238 07F59C72 		add	r2, r7, #312
 17950 023c 3B1D     		adds	r3, r7, #4
 17951 023e 1146     		mov	r1, r2
 17952 0240 1868     		ldr	r0, [r3]
 17953 0242 FFF7FEFF 		bl	strcat
2431:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 17954              		.loc 1 2431 0
 17955 0246 D7F8A431 		ldr	r3, [r7, #420]
 17956 024a B3F95C30 		ldrsh	r3, [r3, #92]
 17957 024e 002B     		cmp	r3, #0
 17958 0250 00DA     		bge	.L691
 17959 0252 0333     		adds	r3, r3, #3
 17960              	.L691:
 17961 0254 9B10     		asrs	r3, r3, #2
 17962 0256 1BB2     		sxth	r3, r3
 17963 0258 C7F89C31 		str	r3, [r7, #412]
2432:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17964              		.loc 1 2432 0
 17965 025c 0123     		movs	r3, #1
 17966 025e C7F8AC31 		str	r3, [r7, #428]
 17967 0262 3EE0     		b	.L692
 17968              	.L695:
 17969              		.align	2
 17970              	.L694:
 17971 0264 00000000 		.word	g_mem
 17972 0268 001A0000 		.word	.LC251
 17973 026c 50110000 		.word	.LC152
 17974 0270 181A0000 		.word	.LC252
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 399


 17975 0274 441A0000 		.word	.LC253
 17976 0278 7C1A0000 		.word	.LC254
 17977 027c B41A0000 		.word	.LC255
 17978 0280 67666666 		.word	1717986919
 17979 0284 D41A0000 		.word	.LC256
 17980 0288 EC1A0000 		.word	.LC257
 17981              	.L693:
2433:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 17982              		.loc 1 2433 0 discriminator 3
 17983 028c D7F8AC31 		ldr	r3, [r7, #428]
 17984 0290 013B     		subs	r3, r3, #1
 17985 0292 D7F89C21 		ldr	r2, [r7, #412]
 17986 0296 02FB03F4 		mul	r4, r2, r3
 17987 029a D7F89C31 		ldr	r3, [r7, #412]
 17988 029e D7F8AC21 		ldr	r2, [r7, #428]
 17989 02a2 02FB03F3 		mul	r3, r2, r3
 17990 02a6 D7F8AC21 		ldr	r2, [r7, #428]
 17991 02aa 511E     		subs	r1, r2, #1
 17992 02ac D7F8A821 		ldr	r2, [r7, #424]
 17993 02b0 1031     		adds	r1, r1, #16
 17994 02b2 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17995 02b6 07F59C70 		add	r0, r7, #312
 17996 02ba 0192     		str	r2, [sp, #4]
 17997 02bc 0093     		str	r3, [sp]
 17998 02be 2346     		mov	r3, r4
 17999 02c0 D7F8AC21 		ldr	r2, [r7, #428]
 18000 02c4 6B49     		ldr	r1, .L696
 18001 02c6 FFF7FEFF 		bl	sprintf
2434:..\src/command_processing.c ****         strcat(info_string, str);
 18002              		.loc 1 2434 0 discriminator 3
 18003 02ca 07F59C72 		add	r2, r7, #312
 18004 02ce 3B1D     		adds	r3, r7, #4
 18005 02d0 1146     		mov	r1, r2
 18006 02d2 1868     		ldr	r0, [r3]
 18007 02d4 FFF7FEFF 		bl	strcat
2432:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18008              		.loc 1 2432 0 discriminator 3
 18009 02d8 D7F8AC31 		ldr	r3, [r7, #428]
 18010 02dc 0133     		adds	r3, r3, #1
 18011 02de C7F8AC31 		str	r3, [r7, #428]
 18012              	.L692:
2432:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18013              		.loc 1 2432 0 is_stmt 0 discriminator 1
 18014 02e2 D7F8AC31 		ldr	r3, [r7, #428]
 18015 02e6 042B     		cmp	r3, #4
 18016 02e8 D0DD     		ble	.L693
2435:..\src/command_processing.c ****     }
2436:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18017              		.loc 1 2436 0 is_stmt 1
 18018 02ea 3B1D     		adds	r3, r7, #4
 18019 02ec 1868     		ldr	r0, [r3]
 18020 02ee FFF7FEFF 		bl	strlen
 18021 02f2 0346     		mov	r3, r0
 18022 02f4 1A46     		mov	r2, r3
 18023 02f6 3B1D     		adds	r3, r7, #4
 18024 02f8 1B68     		ldr	r3, [r3]
 18025 02fa 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 400


 18026 02fc 5E4A     		ldr	r2, .L696+4
 18027 02fe 1188     		ldrh	r1, [r2]	@ unaligned
 18028 0300 9278     		ldrb	r2, [r2, #2]
 18029 0302 1980     		strh	r1, [r3]	@ unaligned
 18030 0304 9A70     		strb	r2, [r3, #2]
2437:..\src/command_processing.c ****             
2438:..\src/command_processing.c ****     sprintf(str, "Motions through EMG counter: %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->cnt.
 18031              		.loc 1 2438 0
 18032 0306 D7F8A831 		ldr	r3, [r7, #424]
 18033 030a DA6E     		ldr	r2, [r3, #108]
 18034 030c D7F8A831 		ldr	r3, [r7, #424]
 18035 0310 1B6F     		ldr	r3, [r3, #112]
 18036 0312 07F59C70 		add	r0, r7, #312
 18037 0316 5949     		ldr	r1, .L696+8
 18038 0318 FFF7FEFF 		bl	sprintf
2439:..\src/command_processing.c ****     strcat(info_string, str);
 18039              		.loc 1 2439 0
 18040 031c 07F59C72 		add	r2, r7, #312
 18041 0320 3B1D     		adds	r3, r7, #4
 18042 0322 1146     		mov	r1, r2
 18043 0324 1868     		ldr	r0, [r3]
 18044 0326 FFF7FEFF 		bl	strcat
2440:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18045              		.loc 1 2440 0
 18046 032a 3B1D     		adds	r3, r7, #4
 18047 032c 1868     		ldr	r0, [r3]
 18048 032e FFF7FEFF 		bl	strlen
 18049 0332 0346     		mov	r3, r0
 18050 0334 1A46     		mov	r2, r3
 18051 0336 3B1D     		adds	r3, r7, #4
 18052 0338 1B68     		ldr	r3, [r3]
 18053 033a 1344     		add	r3, r3, r2
 18054 033c 4E4A     		ldr	r2, .L696+4
 18055 033e 1188     		ldrh	r1, [r2]	@ unaligned
 18056 0340 9278     		ldrb	r2, [r2, #2]
 18057 0342 1980     		strh	r1, [r3]	@ unaligned
 18058 0344 9A70     		strb	r2, [r3, #2]
2441:..\src/command_processing.c ****     
2442:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 18059              		.loc 1 2442 0
 18060 0346 D7F8A831 		ldr	r3, [r7, #424]
 18061 034a 1A6D     		ldr	r2, [r3, #80]
 18062 034c 07F59C73 		add	r3, r7, #312
 18063 0350 4B49     		ldr	r1, .L696+12
 18064 0352 1846     		mov	r0, r3
 18065 0354 FFF7FEFF 		bl	sprintf
2443:..\src/command_processing.c ****     strcat(info_string, str);
 18066              		.loc 1 2443 0
 18067 0358 07F59C72 		add	r2, r7, #312
 18068 035c 3B1D     		adds	r3, r7, #4
 18069 035e 1146     		mov	r1, r2
 18070 0360 1868     		ldr	r0, [r3]
 18071 0362 FFF7FEFF 		bl	strcat
2444:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18072              		.loc 1 2444 0
 18073 0366 3B1D     		adds	r3, r7, #4
 18074 0368 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 401


 18075 036a FFF7FEFF 		bl	strlen
 18076 036e 0346     		mov	r3, r0
 18077 0370 1A46     		mov	r2, r3
 18078 0372 3B1D     		adds	r3, r7, #4
 18079 0374 1B68     		ldr	r3, [r3]
 18080 0376 1344     		add	r3, r3, r2
 18081 0378 3F4A     		ldr	r2, .L696+4
 18082 037a 1188     		ldrh	r1, [r2]	@ unaligned
 18083 037c 9278     		ldrb	r2, [r2, #2]
 18084 037e 1980     		strh	r1, [r3]	@ unaligned
 18085 0380 9A70     		strb	r2, [r3, #2]
2445:..\src/command_processing.c ****     
2446:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 18086              		.loc 1 2446 0
 18087 0382 D7F8A831 		ldr	r3, [r7, #424]
 18088 0386 5A6D     		ldr	r2, [r3, #84]
 18089 0388 07F59C73 		add	r3, r7, #312
 18090 038c 3D49     		ldr	r1, .L696+16
 18091 038e 1846     		mov	r0, r3
 18092 0390 FFF7FEFF 		bl	sprintf
2447:..\src/command_processing.c ****     strcat(info_string, str);
 18093              		.loc 1 2447 0
 18094 0394 07F59C72 		add	r2, r7, #312
 18095 0398 3B1D     		adds	r3, r7, #4
 18096 039a 1146     		mov	r1, r2
 18097 039c 1868     		ldr	r0, [r3]
 18098 039e FFF7FEFF 		bl	strcat
2448:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18099              		.loc 1 2448 0
 18100 03a2 3B1D     		adds	r3, r7, #4
 18101 03a4 1868     		ldr	r0, [r3]
 18102 03a6 FFF7FEFF 		bl	strlen
 18103 03aa 0346     		mov	r3, r0
 18104 03ac 1A46     		mov	r2, r3
 18105 03ae 3B1D     		adds	r3, r7, #4
 18106 03b0 1B68     		ldr	r3, [r3]
 18107 03b2 1344     		add	r3, r3, r2
 18108 03b4 304A     		ldr	r2, .L696+4
 18109 03b6 1188     		ldrh	r1, [r2]	@ unaligned
 18110 03b8 9278     		ldrb	r2, [r2, #2]
 18111 03ba 1980     		strh	r1, [r3]	@ unaligned
 18112 03bc 9A70     		strb	r2, [r3, #2]
2449:..\src/command_processing.c ****     
2450:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_runtime);
 18113              		.loc 1 2450 0
 18114 03be D7F8A831 		ldr	r3, [r7, #424]
 18115 03c2 9A6D     		ldr	r2, [r3, #88]
 18116 03c4 07F59C73 		add	r3, r7, #312
 18117 03c8 2F49     		ldr	r1, .L696+20
 18118 03ca 1846     		mov	r0, r3
 18119 03cc FFF7FEFF 		bl	sprintf
2451:..\src/command_processing.c ****     strcat(info_string, str);
 18120              		.loc 1 2451 0
 18121 03d0 07F59C72 		add	r2, r7, #312
 18122 03d4 3B1D     		adds	r3, r7, #4
 18123 03d6 1146     		mov	r1, r2
 18124 03d8 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 402


 18125 03da FFF7FEFF 		bl	strcat
2452:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18126              		.loc 1 2452 0
 18127 03de 3B1D     		adds	r3, r7, #4
 18128 03e0 1868     		ldr	r0, [r3]
 18129 03e2 FFF7FEFF 		bl	strlen
 18130 03e6 0346     		mov	r3, r0
 18131 03e8 1A46     		mov	r2, r3
 18132 03ea 3B1D     		adds	r3, r7, #4
 18133 03ec 1B68     		ldr	r3, [r3]
 18134 03ee 1344     		add	r3, r3, r2
 18135 03f0 214A     		ldr	r2, .L696+4
 18136 03f2 1188     		ldrh	r1, [r2]	@ unaligned
 18137 03f4 9278     		ldrb	r2, [r2, #2]
 18138 03f6 1980     		strh	r1, [r3]	@ unaligned
 18139 03f8 9A70     		strb	r2, [r3, #2]
2453:..\src/command_processing.c ****     
2454:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 18140              		.loc 1 2454 0
 18141 03fa D7F8A831 		ldr	r3, [r7, #424]
 18142 03fe DA6D     		ldr	r2, [r3, #92]
 18143 0400 07F59C73 		add	r3, r7, #312
 18144 0404 2149     		ldr	r1, .L696+24
 18145 0406 1846     		mov	r0, r3
 18146 0408 FFF7FEFF 		bl	sprintf
2455:..\src/command_processing.c ****     strcat(info_string, str);
 18147              		.loc 1 2455 0
 18148 040c 07F59C72 		add	r2, r7, #312
 18149 0410 3B1D     		adds	r3, r7, #4
 18150 0412 1146     		mov	r1, r2
 18151 0414 1868     		ldr	r0, [r3]
 18152 0416 FFF7FEFF 		bl	strcat
2456:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18153              		.loc 1 2456 0
 18154 041a 3B1D     		adds	r3, r7, #4
 18155 041c 1868     		ldr	r0, [r3]
 18156 041e FFF7FEFF 		bl	strlen
 18157 0422 0346     		mov	r3, r0
 18158 0424 1A46     		mov	r2, r3
 18159 0426 3B1D     		adds	r3, r7, #4
 18160 0428 1B68     		ldr	r3, [r3]
 18161 042a 1344     		add	r3, r3, r2
 18162 042c 124A     		ldr	r2, .L696+4
 18163 042e 1188     		ldrh	r1, [r2]	@ unaligned
 18164 0430 9278     		ldrb	r2, [r2, #2]
 18165 0432 1980     		strh	r1, [r3]	@ unaligned
 18166 0434 9A70     		strb	r2, [r3, #2]
2457:..\src/command_processing.c ****     
2458:..\src/command_processing.c ****     
2459:..\src/command_processing.c ****     // R01 Project statistics (some are duplicated)
2460:..\src/command_processing.c ****     char CYDATA R01_str[300];
2461:..\src/command_processing.c ****     prepare_R01_info(R01_str);
 18167              		.loc 1 2461 0
 18168 0436 07F10C03 		add	r3, r7, #12
 18169 043a 1846     		mov	r0, r3
 18170 043c FFF7FEFF 		bl	prepare_R01_info
2462:..\src/command_processing.c ****     strcat(info_string, "\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 403


 18171              		.loc 1 2462 0
 18172 0440 3B1D     		adds	r3, r7, #4
 18173 0442 1868     		ldr	r0, [r3]
 18174 0444 FFF7FEFF 		bl	strlen
 18175 0448 0346     		mov	r3, r0
 18176 044a 1A46     		mov	r2, r3
 18177 044c 3B1D     		adds	r3, r7, #4
 18178 044e 1B68     		ldr	r3, [r3]
 18179 0450 1344     		add	r3, r3, r2
 18180 0452 094A     		ldr	r2, .L696+4
 18181 0454 1188     		ldrh	r1, [r2]	@ unaligned
 18182 0456 9278     		ldrb	r2, [r2, #2]
 18183 0458 1980     		strh	r1, [r3]	@ unaligned
 18184 045a 9A70     		strb	r2, [r3, #2]
2463:..\src/command_processing.c ****     strcat(info_string, R01_str);
 18185              		.loc 1 2463 0
 18186 045c 07F10C02 		add	r2, r7, #12
 18187 0460 3B1D     		adds	r3, r7, #4
 18188 0462 1146     		mov	r1, r2
 18189 0464 1868     		ldr	r0, [r3]
 18190 0466 FFF7FEFF 		bl	strcat
2464:..\src/command_processing.c **** }
 18191              		.loc 1 2464 0
 18192 046a 00BF     		nop
 18193 046c 07F5DA77 		add	r7, r7, #436
 18194              		.cfi_def_cfa_offset 20
 18195 0470 BD46     		mov	sp, r7
 18196              		.cfi_def_cfa_register 13
 18197              		@ sp needed
 18198 0472 F0BD     		pop	{r4, r5, r6, r7, pc}
 18199              	.L697:
 18200              		.align	2
 18201              	.L696:
 18202 0474 081B0000 		.word	.LC258
 18203 0478 50110000 		.word	.LC152
 18204 047c 241B0000 		.word	.LC259
 18205 0480 4C1B0000 		.word	.LC260
 18206 0484 6C1B0000 		.word	.LC261
 18207 0488 941B0000 		.word	.LC262
 18208 048c B41B0000 		.word	.LC263
 18209              		.cfi_endproc
 18210              	.LFE73:
 18211              		.size	prepare_counter_info, .-prepare_counter_info
 18212              		.section	.rodata
 18213              		.align	2
 18214              	.LC264:
 18215 1bd8 52303120 		.ascii	"R01 PROJECT STATISTICS\015\012\000"
 18215      50524F4A 
 18215      45435420 
 18215      53544154 
 18215      49535449 
 18216 1bf1 000000   		.align	2
 18217              	.LC265:
 18218 1bf4 506F7765 		.ascii	"Power cycles: %lu\000"
 18218      72206379 
 18218      636C6573 
 18218      3A20256C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 404


 18218      7500
 18219 1c06 0000     		.align	2
 18220              	.LC266:
 18221 1c08 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 18221      61637469 
 18221      76617469 
 18221      6F6E7320 
 18221      636F756E 
 18222 1c2a 0000     		.align	2
 18223              	.LC267:
 18224 1c2c 4E756D62 		.ascii	"Number of motions (close/open): %lu, %lu\000"
 18224      6572206F 
 18224      66206D6F 
 18224      74696F6E 
 18224      73202863 
 18225 1c55 000000   		.align	2
 18226              	.LC268:
 18227 1c58 45786365 		.ascii	"Excessive signal activity (close/open): %lu, %lu\000"
 18227      73736976 
 18227      65207369 
 18227      676E616C 
 18227      20616374 
 18228 1c89 000000   		.align	2
 18229              	.LC269:
 18230 1c8c 546F7461 		.ascii	"Total runtime (sec): %lu\000"
 18230      6C207275 
 18230      6E74696D 
 18230      65202873 
 18230      6563293A 
 18231              		.global	__aeabi_ui2f
 18232 1ca5 000000   		.align	2
 18233              	.LC270:
 18234 1ca8 41766572 		.ascii	"Average duration of a powered-on session (sec): %.4"
 18234      61676520 
 18234      64757261 
 18234      74696F6E 
 18234      206F6620 
 18235 1cdb 6600     		.ascii	"f\000"
 18236 1cdd 000000   		.align	2
 18237              	.LC271:
 18238 1ce0 46726571 		.ascii	"Frequency of motions: %.4f\000"
 18238      75656E63 
 18238      79206F66 
 18238      206D6F74 
 18238      696F6E73 
 18239              		.section	.text.prepare_R01_info,"ax",%progbits
 18240              		.align	2
 18241              		.global	prepare_R01_info
 18242              		.thumb
 18243              		.thumb_func
 18244              		.type	prepare_R01_info, %function
 18245              	prepare_R01_info:
 18246              	.LFB74:
2465:..\src/command_processing.c **** 
2466:..\src/command_processing.c **** //==============================================================================
2467:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2468:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 405


2469:..\src/command_processing.c **** 
2470:..\src/command_processing.c **** void prepare_R01_info(char *info_string)
2471:..\src/command_processing.c **** {
 18247              		.loc 1 2471 0
 18248              		.cfi_startproc
 18249              		@ args = 0, pretend = 0, frame = 168
 18250              		@ frame_needed = 1, uses_anonymous_args = 0
 18251 0000 B0B5     		push	{r4, r5, r7, lr}
 18252              		.cfi_def_cfa_offset 16
 18253              		.cfi_offset 4, -16
 18254              		.cfi_offset 5, -12
 18255              		.cfi_offset 7, -8
 18256              		.cfi_offset 14, -4
 18257 0002 AAB0     		sub	sp, sp, #168
 18258              		.cfi_def_cfa_offset 184
 18259 0004 00AF     		add	r7, sp, #0
 18260              		.cfi_def_cfa_register 7
 18261 0006 7860     		str	r0, [r7, #4]
2472:..\src/command_processing.c ****     char str[150];  
2473:..\src/command_processing.c **** 
2474:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18262              		.loc 1 2474 0
 18263 0008 8A4B     		ldr	r3, .L699
 18264 000a C7F8A430 		str	r3, [r7, #164]
2475:..\src/command_processing.c **** 
2476:..\src/command_processing.c ****     strcpy(info_string, "");
 18265              		.loc 1 2476 0
 18266 000e 7B68     		ldr	r3, [r7, #4]
 18267 0010 0022     		movs	r2, #0
 18268 0012 1A70     		strb	r2, [r3]
2477:..\src/command_processing.c ****     
2478:..\src/command_processing.c ****     strcat(info_string, "R01 PROJECT STATISTICS\r\n");
 18269              		.loc 1 2478 0
 18270 0014 7868     		ldr	r0, [r7, #4]
 18271 0016 FFF7FEFF 		bl	strlen
 18272 001a 0346     		mov	r3, r0
 18273 001c 1A46     		mov	r2, r3
 18274 001e 7B68     		ldr	r3, [r7, #4]
 18275 0020 1344     		add	r3, r3, r2
 18276 0022 854A     		ldr	r2, .L699+4
 18277 0024 1D46     		mov	r5, r3
 18278 0026 1446     		mov	r4, r2
 18279 0028 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18280 002a 2860     		str	r0, [r5]	@ unaligned
 18281 002c 6960     		str	r1, [r5, #4]	@ unaligned
 18282 002e AA60     		str	r2, [r5, #8]	@ unaligned
 18283 0030 EB60     		str	r3, [r5, #12]	@ unaligned
 18284 0032 03CC     		ldmia	r4!, {r0, r1}
 18285 0034 2861     		str	r0, [r5, #16]	@ unaligned
 18286 0036 6961     		str	r1, [r5, #20]	@ unaligned
 18287 0038 2378     		ldrb	r3, [r4]
 18288 003a 2B76     		strb	r3, [r5, #24]
2479:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18289              		.loc 1 2479 0
 18290 003c 7868     		ldr	r0, [r7, #4]
 18291 003e FFF7FEFF 		bl	strlen
 18292 0042 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 406


 18293 0044 1A46     		mov	r2, r3
 18294 0046 7B68     		ldr	r3, [r7, #4]
 18295 0048 1344     		add	r3, r3, r2
 18296 004a 7C4A     		ldr	r2, .L699+8
 18297 004c 1188     		ldrh	r1, [r2]	@ unaligned
 18298 004e 9278     		ldrb	r2, [r2, #2]
 18299 0050 1980     		strh	r1, [r3]	@ unaligned
 18300 0052 9A70     		strb	r2, [r3, #2]
2480:..\src/command_processing.c ****     
2481:..\src/command_processing.c ****     sprintf(str, "Power cycles: %lu", MEM_P->cnt.power_cycles);
 18301              		.loc 1 2481 0
 18302 0054 D7F8A430 		ldr	r3, [r7, #164]
 18303 0058 1A6E     		ldr	r2, [r3, #96]
 18304 005a 07F10C03 		add	r3, r7, #12
 18305 005e 7849     		ldr	r1, .L699+12
 18306 0060 1846     		mov	r0, r3
 18307 0062 FFF7FEFF 		bl	sprintf
2482:..\src/command_processing.c ****     strcat(info_string, str);
 18308              		.loc 1 2482 0
 18309 0066 07F10C03 		add	r3, r7, #12
 18310 006a 1946     		mov	r1, r3
 18311 006c 7868     		ldr	r0, [r7, #4]
 18312 006e FFF7FEFF 		bl	strcat
2483:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18313              		.loc 1 2483 0
 18314 0072 7868     		ldr	r0, [r7, #4]
 18315 0074 FFF7FEFF 		bl	strlen
 18316 0078 0346     		mov	r3, r0
 18317 007a 1A46     		mov	r2, r3
 18318 007c 7B68     		ldr	r3, [r7, #4]
 18319 007e 1344     		add	r3, r3, r2
 18320 0080 6E4A     		ldr	r2, .L699+8
 18321 0082 1188     		ldrh	r1, [r2]	@ unaligned
 18322 0084 9278     		ldrb	r2, [r2, #2]
 18323 0086 1980     		strh	r1, [r3]	@ unaligned
 18324 0088 9A70     		strb	r2, [r3, #2]
2484:..\src/command_processing.c ****     
2485:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_act_counter[0], MEM_P->cnt.emg
 18325              		.loc 1 2485 0
 18326 008a D7F8A430 		ldr	r3, [r7, #164]
 18327 008e 1A69     		ldr	r2, [r3, #16]
 18328 0090 D7F8A430 		ldr	r3, [r7, #164]
 18329 0094 5B69     		ldr	r3, [r3, #20]
 18330 0096 07F10C00 		add	r0, r7, #12
 18331 009a 6A49     		ldr	r1, .L699+16
 18332 009c FFF7FEFF 		bl	sprintf
2486:..\src/command_processing.c ****     strcat(info_string, str);
 18333              		.loc 1 2486 0
 18334 00a0 07F10C03 		add	r3, r7, #12
 18335 00a4 1946     		mov	r1, r3
 18336 00a6 7868     		ldr	r0, [r7, #4]
 18337 00a8 FFF7FEFF 		bl	strcat
2487:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18338              		.loc 1 2487 0
 18339 00ac 7868     		ldr	r0, [r7, #4]
 18340 00ae FFF7FEFF 		bl	strlen
 18341 00b2 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 407


 18342 00b4 1A46     		mov	r2, r3
 18343 00b6 7B68     		ldr	r3, [r7, #4]
 18344 00b8 1344     		add	r3, r3, r2
 18345 00ba 604A     		ldr	r2, .L699+8
 18346 00bc 1188     		ldrh	r1, [r2]	@ unaligned
 18347 00be 9278     		ldrb	r2, [r2, #2]
 18348 00c0 1980     		strh	r1, [r3]	@ unaligned
 18349 00c2 9A70     		strb	r2, [r3, #2]
2488:..\src/command_processing.c ****     
2489:..\src/command_processing.c ****     sprintf(str, "Number of motions (close/open): %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->c
 18350              		.loc 1 2489 0
 18351 00c4 D7F8A430 		ldr	r3, [r7, #164]
 18352 00c8 DA6E     		ldr	r2, [r3, #108]
 18353 00ca D7F8A430 		ldr	r3, [r7, #164]
 18354 00ce 1B6F     		ldr	r3, [r3, #112]
 18355 00d0 07F10C00 		add	r0, r7, #12
 18356 00d4 5C49     		ldr	r1, .L699+20
 18357 00d6 FFF7FEFF 		bl	sprintf
2490:..\src/command_processing.c ****     strcat(info_string, str);
 18358              		.loc 1 2490 0
 18359 00da 07F10C03 		add	r3, r7, #12
 18360 00de 1946     		mov	r1, r3
 18361 00e0 7868     		ldr	r0, [r7, #4]
 18362 00e2 FFF7FEFF 		bl	strcat
2491:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18363              		.loc 1 2491 0
 18364 00e6 7868     		ldr	r0, [r7, #4]
 18365 00e8 FFF7FEFF 		bl	strlen
 18366 00ec 0346     		mov	r3, r0
 18367 00ee 1A46     		mov	r2, r3
 18368 00f0 7B68     		ldr	r3, [r7, #4]
 18369 00f2 1344     		add	r3, r3, r2
 18370 00f4 514A     		ldr	r2, .L699+8
 18371 00f6 1188     		ldrh	r1, [r2]	@ unaligned
 18372 00f8 9278     		ldrb	r2, [r2, #2]
 18373 00fa 1980     		strh	r1, [r3]	@ unaligned
 18374 00fc 9A70     		strb	r2, [r3, #2]
2492:..\src/command_processing.c ****     
2493:..\src/command_processing.c ****     sprintf(str, "Excessive signal activity (close/open): %lu, %lu", MEM_P->cnt.excessive_signal_ac
 18375              		.loc 1 2493 0
 18376 00fe D7F8A430 		ldr	r3, [r7, #164]
 18377 0102 5A6E     		ldr	r2, [r3, #100]
 18378 0104 D7F8A430 		ldr	r3, [r7, #164]
 18379 0108 9B6E     		ldr	r3, [r3, #104]
 18380 010a 07F10C00 		add	r0, r7, #12
 18381 010e 4F49     		ldr	r1, .L699+24
 18382 0110 FFF7FEFF 		bl	sprintf
2494:..\src/command_processing.c ****     strcat(info_string, str);
 18383              		.loc 1 2494 0
 18384 0114 07F10C03 		add	r3, r7, #12
 18385 0118 1946     		mov	r1, r3
 18386 011a 7868     		ldr	r0, [r7, #4]
 18387 011c FFF7FEFF 		bl	strcat
2495:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18388              		.loc 1 2495 0
 18389 0120 7868     		ldr	r0, [r7, #4]
 18390 0122 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 408


 18391 0126 0346     		mov	r3, r0
 18392 0128 1A46     		mov	r2, r3
 18393 012a 7B68     		ldr	r3, [r7, #4]
 18394 012c 1344     		add	r3, r3, r2
 18395 012e 434A     		ldr	r2, .L699+8
 18396 0130 1188     		ldrh	r1, [r2]	@ unaligned
 18397 0132 9278     		ldrb	r2, [r2, #2]
 18398 0134 1980     		strh	r1, [r3]	@ unaligned
 18399 0136 9A70     		strb	r2, [r3, #2]
2496:..\src/command_processing.c ****     
2497:..\src/command_processing.c ****     sprintf(str, "Total runtime (sec): %lu", MEM_P->cnt.total_runtime);
 18400              		.loc 1 2497 0
 18401 0138 D7F8A430 		ldr	r3, [r7, #164]
 18402 013c 9A6D     		ldr	r2, [r3, #88]
 18403 013e 07F10C03 		add	r3, r7, #12
 18404 0142 4349     		ldr	r1, .L699+28
 18405 0144 1846     		mov	r0, r3
 18406 0146 FFF7FEFF 		bl	sprintf
2498:..\src/command_processing.c ****     strcat(info_string, str);
 18407              		.loc 1 2498 0
 18408 014a 07F10C03 		add	r3, r7, #12
 18409 014e 1946     		mov	r1, r3
 18410 0150 7868     		ldr	r0, [r7, #4]
 18411 0152 FFF7FEFF 		bl	strcat
2499:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18412              		.loc 1 2499 0
 18413 0156 7868     		ldr	r0, [r7, #4]
 18414 0158 FFF7FEFF 		bl	strlen
 18415 015c 0346     		mov	r3, r0
 18416 015e 1A46     		mov	r2, r3
 18417 0160 7B68     		ldr	r3, [r7, #4]
 18418 0162 1344     		add	r3, r3, r2
 18419 0164 354A     		ldr	r2, .L699+8
 18420 0166 1188     		ldrh	r1, [r2]	@ unaligned
 18421 0168 9278     		ldrb	r2, [r2, #2]
 18422 016a 1980     		strh	r1, [r3]	@ unaligned
 18423 016c 9A70     		strb	r2, [r3, #2]
2500:..\src/command_processing.c ****     
2501:..\src/command_processing.c ****     sprintf(str, "Average duration of a powered-on session (sec): %.4f", (float)(MEM_P->cnt.total_r
 18424              		.loc 1 2501 0
 18425 016e D7F8A430 		ldr	r3, [r7, #164]
 18426 0172 9A6D     		ldr	r2, [r3, #88]
 18427 0174 D7F8A430 		ldr	r3, [r7, #164]
 18428 0178 1B6E     		ldr	r3, [r3, #96]
 18429 017a B2FBF3F3 		udiv	r3, r2, r3
 18430 017e 1846     		mov	r0, r3
 18431 0180 FFF7FEFF 		bl	__aeabi_ui2f
 18432 0184 0346     		mov	r3, r0
 18433 0186 1846     		mov	r0, r3
 18434 0188 FFF7FEFF 		bl	__aeabi_f2d
 18435 018c 0346     		mov	r3, r0
 18436 018e 0C46     		mov	r4, r1
 18437 0190 07F10C00 		add	r0, r7, #12
 18438 0194 1A46     		mov	r2, r3
 18439 0196 2346     		mov	r3, r4
 18440 0198 2E49     		ldr	r1, .L699+32
 18441 019a FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 409


2502:..\src/command_processing.c ****     strcat(info_string, str);
 18442              		.loc 1 2502 0
 18443 019e 07F10C03 		add	r3, r7, #12
 18444 01a2 1946     		mov	r1, r3
 18445 01a4 7868     		ldr	r0, [r7, #4]
 18446 01a6 FFF7FEFF 		bl	strcat
2503:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18447              		.loc 1 2503 0
 18448 01aa 7868     		ldr	r0, [r7, #4]
 18449 01ac FFF7FEFF 		bl	strlen
 18450 01b0 0346     		mov	r3, r0
 18451 01b2 1A46     		mov	r2, r3
 18452 01b4 7B68     		ldr	r3, [r7, #4]
 18453 01b6 1344     		add	r3, r3, r2
 18454 01b8 204A     		ldr	r2, .L699+8
 18455 01ba 1188     		ldrh	r1, [r2]	@ unaligned
 18456 01bc 9278     		ldrb	r2, [r2, #2]
 18457 01be 1980     		strh	r1, [r3]	@ unaligned
 18458 01c0 9A70     		strb	r2, [r3, #2]
2504:..\src/command_processing.c ****     
2505:..\src/command_processing.c ****     sprintf(str, "Frequency of motions: %.4f", (float)((MEM_P->cnt.emg_act_counter[0] + MEM_P->cnt.
 18459              		.loc 1 2505 0
 18460 01c2 D7F8A430 		ldr	r3, [r7, #164]
 18461 01c6 1A69     		ldr	r2, [r3, #16]
 18462 01c8 D7F8A430 		ldr	r3, [r7, #164]
 18463 01cc 5B69     		ldr	r3, [r3, #20]
 18464 01ce 1344     		add	r3, r3, r2
 18465 01d0 1846     		mov	r0, r3
 18466 01d2 FFF7FEFF 		bl	__aeabi_ui2f
 18467 01d6 0446     		mov	r4, r0
 18468 01d8 D7F8A430 		ldr	r3, [r7, #164]
 18469 01dc 9B6D     		ldr	r3, [r3, #88]
 18470 01de 1846     		mov	r0, r3
 18471 01e0 FFF7FEFF 		bl	__aeabi_ui2f
 18472 01e4 0346     		mov	r3, r0
 18473 01e6 1946     		mov	r1, r3
 18474 01e8 2046     		mov	r0, r4
 18475 01ea FFF7FEFF 		bl	__aeabi_fdiv
 18476 01ee 0346     		mov	r3, r0
 18477 01f0 1846     		mov	r0, r3
 18478 01f2 FFF7FEFF 		bl	__aeabi_f2d
 18479 01f6 0346     		mov	r3, r0
 18480 01f8 0C46     		mov	r4, r1
 18481 01fa 07F10C00 		add	r0, r7, #12
 18482 01fe 1A46     		mov	r2, r3
 18483 0200 2346     		mov	r3, r4
 18484 0202 1549     		ldr	r1, .L699+36
 18485 0204 FFF7FEFF 		bl	sprintf
2506:..\src/command_processing.c ****     strcat(info_string, str);
 18486              		.loc 1 2506 0
 18487 0208 07F10C03 		add	r3, r7, #12
 18488 020c 1946     		mov	r1, r3
 18489 020e 7868     		ldr	r0, [r7, #4]
 18490 0210 FFF7FEFF 		bl	strcat
2507:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18491              		.loc 1 2507 0
 18492 0214 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 410


 18493 0216 FFF7FEFF 		bl	strlen
 18494 021a 0346     		mov	r3, r0
 18495 021c 1A46     		mov	r2, r3
 18496 021e 7B68     		ldr	r3, [r7, #4]
 18497 0220 1344     		add	r3, r3, r2
 18498 0222 064A     		ldr	r2, .L699+8
 18499 0224 1188     		ldrh	r1, [r2]	@ unaligned
 18500 0226 9278     		ldrb	r2, [r2, #2]
 18501 0228 1980     		strh	r1, [r3]	@ unaligned
 18502 022a 9A70     		strb	r2, [r3, #2]
2508:..\src/command_processing.c **** 
2509:..\src/command_processing.c **** }
 18503              		.loc 1 2509 0
 18504 022c 00BF     		nop
 18505 022e A837     		adds	r7, r7, #168
 18506              		.cfi_def_cfa_offset 16
 18507 0230 BD46     		mov	sp, r7
 18508              		.cfi_def_cfa_register 13
 18509              		@ sp needed
 18510 0232 B0BD     		pop	{r4, r5, r7, pc}
 18511              	.L700:
 18512              		.align	2
 18513              	.L699:
 18514 0234 00000000 		.word	g_mem
 18515 0238 D81B0000 		.word	.LC264
 18516 023c 50110000 		.word	.LC152
 18517 0240 F41B0000 		.word	.LC265
 18518 0244 081C0000 		.word	.LC266
 18519 0248 2C1C0000 		.word	.LC267
 18520 024c 581C0000 		.word	.LC268
 18521 0250 8C1C0000 		.word	.LC269
 18522 0254 A81C0000 		.word	.LC270
 18523 0258 E01C0000 		.word	.LC271
 18524              		.cfi_endproc
 18525              	.LFE74:
 18526              		.size	prepare_R01_info, .-prepare_R01_info
 18527              		.section	.rodata
 18528 1cfb 00       		.align	2
 18529              	.LC272:
 18530 1cfc 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 18530      77617265 
 18530      20766572 
 18530      73696F6E 
 18530      3A202573 
 18531 1d13 00       		.align	2
 18532              	.LC273:
 18533 1d14 506F7369 		.ascii	"Position PID: \000"
 18533      74696F6E 
 18533      20504944 
 18533      3A2000
 18534 1d23 00       		.align	2
 18535              	.LC274:
 18536 1d24 43757272 		.ascii	"Current PID: \000"
 18536      656E7420 
 18536      5049443A 
 18536      2000
 18537 1d32 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 411


 18538              	.LC275:
 18539 1d34 5265736F 		.ascii	"Resolutions: \000"
 18539      6C757469 
 18539      6F6E733A 
 18539      2000
 18540 1d42 0000     		.align	2
 18541              	.LC276:
 18542 1d44 4F666673 		.ascii	"Offsets: \000"
 18542      6574733A 
 18542      2000
 18543 1d4e 0000     		.align	2
 18544              	.LC277:
 18545 1d50 4D756C74 		.ascii	"Multipliers: \000"
 18545      69706C69 
 18545      6572733A 
 18545      2000
 18546 1d5e 0000     		.align	2
 18547              	.LC278:
 18548 1d60 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 18548      656E7420 
 18548      6C6F6F6B 
 18548      75702074 
 18548      61626C65 
 18549 1d93 662C2025 		.ascii	"f, %f\015\012\000"
 18549      660D0A00 
 18550 1d9b 00       		.align	2
 18551              	.LC279:
 18552 1d9c 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 18552      74696F6E 
 18552      206C696D 
 18552      69742061 
 18552      63746976 
 18553              		.align	2
 18554              	.LC280:
 18555 1db8 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 18555      74696F6E 
 18555      206C696D 
 18555      6974733A 
 18555      20696E66 
 18556              		.section	.text.prepare_SD_param_info,"ax",%progbits
 18557              		.align	2
 18558              		.global	prepare_SD_param_info
 18559              		.thumb
 18560              		.thumb_func
 18561              		.type	prepare_SD_param_info, %function
 18562              	prepare_SD_param_info:
 18563              	.LFB75:
2510:..\src/command_processing.c **** 
2511:..\src/command_processing.c **** //==============================================================================
2512:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2513:..\src/command_processing.c **** //==============================================================================
2514:..\src/command_processing.c **** 
2515:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2516:..\src/command_processing.c **** {
 18564              		.loc 1 2516 0
 18565              		.cfi_startproc
 18566              		@ args = 0, pretend = 0, frame = 152
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 412


 18567              		@ frame_needed = 1, uses_anonymous_args = 0
 18568 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18569              		.cfi_def_cfa_offset 36
 18570              		.cfi_offset 4, -36
 18571              		.cfi_offset 5, -32
 18572              		.cfi_offset 6, -28
 18573              		.cfi_offset 7, -24
 18574              		.cfi_offset 8, -20
 18575              		.cfi_offset 9, -16
 18576              		.cfi_offset 10, -12
 18577              		.cfi_offset 11, -8
 18578              		.cfi_offset 14, -4
 18579 0004 B1B0     		sub	sp, sp, #196
 18580              		.cfi_def_cfa_offset 232
 18581 0006 0AAF     		add	r7, sp, #40
 18582              		.cfi_def_cfa 7, 192
 18583 0008 7861     		str	r0, [r7, #20]
2517:..\src/command_processing.c ****     char str[100];  
2518:..\src/command_processing.c ****     int i;
2519:..\src/command_processing.c ****            
2520:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2521:..\src/command_processing.c ****     
2522:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18584              		.loc 1 2522 0
 18585 000a AC4B     		ldr	r3, .L766
 18586 000c C7F88C30 		str	r3, [r7, #140]
2523:..\src/command_processing.c ****         
2524:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 18587              		.loc 1 2524 0
 18588 0010 AB4A     		ldr	r2, .L766+4
 18589 0012 AC49     		ldr	r1, .L766+8
 18590 0014 7869     		ldr	r0, [r7, #20]
 18591 0016 FFF7FEFF 		bl	sprintf
2525:..\src/command_processing.c ****     
2526:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 18592              		.loc 1 2526 0
 18593 001a D7F88C30 		ldr	r3, [r7, #140]
 18594 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18595 0022 1A46     		mov	r2, r3
 18596 0024 07F11C03 		add	r3, r7, #28
 18597 0028 A749     		ldr	r1, .L766+12
 18598 002a 1846     		mov	r0, r3
 18599 002c FFF7FEFF 		bl	sprintf
2527:..\src/command_processing.c ****     strcat(info_string, str);
 18600              		.loc 1 2527 0
 18601 0030 07F11C03 		add	r3, r7, #28
 18602 0034 1946     		mov	r1, r3
 18603 0036 7869     		ldr	r0, [r7, #20]
 18604 0038 FFF7FEFF 		bl	strcat
2528:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 18605              		.loc 1 2528 0
 18606 003c D7F88C30 		ldr	r3, [r7, #140]
 18607 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18608 0044 002B     		cmp	r3, #0
 18609 0046 02D0     		beq	.L703
 18610 0048 012B     		cmp	r3, #1
 18611 004a 15D0     		beq	.L704
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 413


 18612 004c 26E0     		b	.L702
 18613              	.L703:
2529:..\src/command_processing.c ****         case RIGHT_HAND:
2530:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 18614              		.loc 1 2530 0
 18615 004e 7869     		ldr	r0, [r7, #20]
 18616 0050 FFF7FEFF 		bl	strlen
 18617 0054 0346     		mov	r3, r0
 18618 0056 1A46     		mov	r2, r3
 18619 0058 7B69     		ldr	r3, [r7, #20]
 18620 005a 1344     		add	r3, r3, r2
 18621 005c 9B4A     		ldr	r2, .L766+16
 18622 005e 1D46     		mov	r5, r3
 18623 0060 1446     		mov	r4, r2
 18624 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18625 0064 2860     		str	r0, [r5]	@ unaligned
 18626 0066 6960     		str	r1, [r5, #4]	@ unaligned
 18627 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 18628 006a EB60     		str	r3, [r5, #12]	@ unaligned
 18629 006c 2388     		ldrh	r3, [r4]	@ unaligned
 18630 006e A278     		ldrb	r2, [r4, #2]
 18631 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 18632 0072 1346     		mov	r3, r2
 18633 0074 AB74     		strb	r3, [r5, #18]
2531:..\src/command_processing.c ****             break;
 18634              		.loc 1 2531 0
 18635 0076 11E0     		b	.L702
 18636              	.L704:
2532:..\src/command_processing.c ****         case LEFT_HAND:
2533:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 18637              		.loc 1 2533 0
 18638 0078 7869     		ldr	r0, [r7, #20]
 18639 007a FFF7FEFF 		bl	strlen
 18640 007e 0346     		mov	r3, r0
 18641 0080 1A46     		mov	r2, r3
 18642 0082 7B69     		ldr	r3, [r7, #20]
 18643 0084 1344     		add	r3, r3, r2
 18644 0086 924A     		ldr	r2, .L766+20
 18645 0088 1D46     		mov	r5, r3
 18646 008a 1446     		mov	r4, r2
 18647 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18648 008e 2860     		str	r0, [r5]	@ unaligned
 18649 0090 6960     		str	r1, [r5, #4]	@ unaligned
 18650 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 18651 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 18652 0096 2388     		ldrh	r3, [r4]	@ unaligned
 18653 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2534:..\src/command_processing.c ****             break;
 18654              		.loc 1 2534 0
 18655 009a 00BF     		nop
 18656              	.L702:
2535:..\src/command_processing.c ****     }
2536:..\src/command_processing.c **** 
2537:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18657              		.loc 1 2537 0
 18658 009c D7F88C30 		ldr	r3, [r7, #140]
 18659 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 414


 18660 00a4 1A46     		mov	r2, r3
 18661 00a6 D7F88C30 		ldr	r3, [r7, #140]
 18662 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18663 00ae 1946     		mov	r1, r3
 18664 00b0 D7F88C30 		ldr	r3, [r7, #140]
 18665 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18666 00b8 07F11C00 		add	r0, r7, #28
 18667 00bc 0093     		str	r3, [sp]
 18668 00be 0B46     		mov	r3, r1
 18669 00c0 8449     		ldr	r1, .L766+24
 18670 00c2 FFF7FEFF 		bl	sprintf
2538:..\src/command_processing.c ****     strcat(info_string, str);
 18671              		.loc 1 2538 0
 18672 00c6 07F11C03 		add	r3, r7, #28
 18673 00ca 1946     		mov	r1, r3
 18674 00cc 7869     		ldr	r0, [r7, #20]
 18675 00ce FFF7FEFF 		bl	strcat
2539:..\src/command_processing.c ****     
2540:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18676              		.loc 1 2540 0
 18677 00d2 D7F88C30 		ldr	r3, [r7, #140]
 18678 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18679 00da 1A46     		mov	r2, r3
 18680 00dc D7F88C30 		ldr	r3, [r7, #140]
 18681 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18682 00e4 1946     		mov	r1, r3
 18683 00e6 D7F88C30 		ldr	r3, [r7, #140]
 18684 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18685 00ee 07F11C00 		add	r0, r7, #28
 18686 00f2 0093     		str	r3, [sp]
 18687 00f4 0B46     		mov	r3, r1
 18688 00f6 7849     		ldr	r1, .L766+28
 18689 00f8 FFF7FEFF 		bl	sprintf
2541:..\src/command_processing.c ****     strcat(info_string, str);
 18690              		.loc 1 2541 0
 18691 00fc 07F11C03 		add	r3, r7, #28
 18692 0100 1946     		mov	r1, r3
 18693 0102 7869     		ldr	r0, [r7, #20]
 18694 0104 FFF7FEFF 		bl	strcat
 18695              	.LBB27:
2542:..\src/command_processing.c ****     
2543:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 18696              		.loc 1 2543 0
 18697 0108 0023     		movs	r3, #0
 18698 010a 87F89330 		strb	r3, [r7, #147]
 18699 010e 00F05EBE 		b	.L705
 18700              	.L749:
 18701              	.LBB28:
2544:..\src/command_processing.c ****             
2545:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 18702              		.loc 1 2545 0
 18703 0112 97F89330 		ldrb	r3, [r7, #147]
 18704 0116 87F88B30 		strb	r3, [r7, #139]
2546:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 18705              		.loc 1 2546 0
 18706 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 18707 011e 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 415


 18708 0120 DB00     		lsls	r3, r3, #3
 18709 0122 9B1A     		subs	r3, r3, r2
 18710 0124 1B01     		lsls	r3, r3, #4
 18711 0126 B033     		adds	r3, r3, #176
 18712 0128 D7F88C20 		ldr	r2, [r7, #140]
 18713 012c 1344     		add	r3, r3, r2
 18714 012e C7F88430 		str	r3, [r7, #132]
2547:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 18715              		.loc 1 2547 0
 18716 0132 D7F88430 		ldr	r3, [r7, #132]
 18717 0136 93F86030 		ldrb	r3, [r3, #96]
 18718 013a 87F88330 		strb	r3, [r7, #131]
2548:..\src/command_processing.c ****               
2549:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 18719              		.loc 1 2549 0
 18720 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18721 0142 5A1C     		adds	r2, r3, #1
 18722 0144 07F11C03 		add	r3, r7, #28
 18723 0148 6449     		ldr	r1, .L766+32
 18724 014a 1846     		mov	r0, r3
 18725 014c FFF7FEFF 		bl	sprintf
2550:..\src/command_processing.c ****         strcat(info_string, str);
 18726              		.loc 1 2550 0
 18727 0150 07F11C03 		add	r3, r7, #28
 18728 0154 1946     		mov	r1, r3
 18729 0156 7869     		ldr	r0, [r7, #20]
 18730 0158 FFF7FEFF 		bl	strcat
2551:..\src/command_processing.c ****                     
2552:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 18731              		.loc 1 2552 0
 18732 015c 7869     		ldr	r0, [r7, #20]
 18733 015e FFF7FEFF 		bl	strlen
 18734 0162 0346     		mov	r3, r0
 18735 0164 1A46     		mov	r2, r3
 18736 0166 7B69     		ldr	r3, [r7, #20]
 18737 0168 1344     		add	r3, r3, r2
 18738 016a 5D4A     		ldr	r2, .L766+36
 18739 016c 1D46     		mov	r5, r3
 18740 016e 1446     		mov	r4, r2
 18741 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18742 0172 2860     		str	r0, [r5]	@ unaligned
 18743 0174 6960     		str	r1, [r5, #4]	@ unaligned
 18744 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 18745 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 18746 017a 03CC     		ldmia	r4!, {r0, r1}
 18747 017c 2861     		str	r0, [r5, #16]	@ unaligned
 18748 017e 6961     		str	r1, [r5, #20]	@ unaligned
 18749 0180 2388     		ldrh	r3, [r4]	@ unaligned
 18750 0182 A278     		ldrb	r2, [r4, #2]
 18751 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 18752 0186 1346     		mov	r3, r2
 18753 0188 AB76     		strb	r3, [r5, #26]
2553:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 18754              		.loc 1 2553 0
 18755 018a D7F88430 		ldr	r3, [r7, #132]
 18756 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 18757 0192 012B     		cmp	r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 416


 18758 0194 0CD1     		bne	.L706
2554:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 18759              		.loc 1 2554 0
 18760 0196 7869     		ldr	r0, [r7, #20]
 18761 0198 FFF7FEFF 		bl	strlen
 18762 019c 0346     		mov	r3, r0
 18763 019e 1A46     		mov	r2, r3
 18764 01a0 7B69     		ldr	r3, [r7, #20]
 18765 01a2 1344     		add	r3, r3, r2
 18766 01a4 4F4A     		ldr	r2, .L766+40
 18767 01a6 1068     		ldr	r0, [r2]	@ unaligned
 18768 01a8 1860     		str	r0, [r3]	@ unaligned
 18769 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18770 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 18771 01ae 0BE0     		b	.L707
 18772              	.L706:
2555:..\src/command_processing.c ****         else
2556:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 18773              		.loc 1 2556 0
 18774 01b0 7869     		ldr	r0, [r7, #20]
 18775 01b2 FFF7FEFF 		bl	strlen
 18776 01b6 0346     		mov	r3, r0
 18777 01b8 1A46     		mov	r2, r3
 18778 01ba 7B69     		ldr	r3, [r7, #20]
 18779 01bc 1344     		add	r3, r3, r2
 18780 01be 4A4A     		ldr	r2, .L766+44
 18781 01c0 1068     		ldr	r0, [r2]	@ unaligned
 18782 01c2 1860     		str	r0, [r3]	@ unaligned
 18783 01c4 1279     		ldrb	r2, [r2, #4]
 18784 01c6 1A71     		strb	r2, [r3, #4]
 18785              	.L707:
2557:..\src/command_processing.c ****         
2558:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 18786              		.loc 1 2558 0
 18787 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18788 01cc 474A     		ldr	r2, .L766+48
 18789 01ce 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 18790 01d2 1A46     		mov	r2, r3
 18791 01d4 07F11C03 		add	r3, r7, #28
 18792 01d8 4549     		ldr	r1, .L766+52
 18793 01da 1846     		mov	r0, r3
 18794 01dc FFF7FEFF 		bl	sprintf
2559:..\src/command_processing.c ****         strcat(info_string, str);
 18795              		.loc 1 2559 0
 18796 01e0 07F11C03 		add	r3, r7, #28
 18797 01e4 1946     		mov	r1, r3
 18798 01e6 7869     		ldr	r0, [r7, #20]
 18799 01e8 FFF7FEFF 		bl	strcat
2560:..\src/command_processing.c **** 
2561:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 18800              		.loc 1 2561 0
 18801 01ec 7869     		ldr	r0, [r7, #20]
 18802 01ee FFF7FEFF 		bl	strlen
 18803 01f2 0346     		mov	r3, r0
 18804 01f4 1A46     		mov	r2, r3
 18805 01f6 7B69     		ldr	r3, [r7, #20]
 18806 01f8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 417


 18807 01fa 3E4A     		ldr	r2, .L766+56
 18808 01fc 1C46     		mov	r4, r3
 18809 01fe 1346     		mov	r3, r2
 18810 0200 07CB     		ldmia	r3!, {r0, r1, r2}
 18811 0202 2060     		str	r0, [r4]	@ unaligned
 18812 0204 6160     		str	r1, [r4, #4]	@ unaligned
 18813 0206 A260     		str	r2, [r4, #8]	@ unaligned
 18814 0208 1A88     		ldrh	r2, [r3]	@ unaligned
 18815 020a 9B78     		ldrb	r3, [r3, #2]
 18816 020c A281     		strh	r2, [r4, #12]	@ unaligned
 18817 020e A373     		strb	r3, [r4, #14]
2562:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18818              		.loc 1 2562 0
 18819 0210 D7F88430 		ldr	r3, [r7, #132]
 18820 0214 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18821 0218 032B     		cmp	r3, #3
 18822 021a 75D0     		beq	.L708
2563:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 18823              		.loc 1 2563 0
 18824 021c D7F88430 		ldr	r3, [r7, #132]
 18825 0220 1B68     		ldr	r3, [r3]
 18826 0222 1846     		mov	r0, r3
 18827 0224 FFF7FEFF 		bl	__aeabi_i2d
 18828 0228 4FF00002 		mov	r2, #0
 18829 022c 324B     		ldr	r3, .L766+60
 18830 022e FFF7FEFF 		bl	__aeabi_ddiv
 18831 0232 0346     		mov	r3, r0
 18832 0234 0C46     		mov	r4, r1
 18833 0236 07F11C00 		add	r0, r7, #28
 18834 023a 1A46     		mov	r2, r3
 18835 023c 2346     		mov	r3, r4
 18836 023e 2F49     		ldr	r1, .L766+64
 18837 0240 FFF7FEFF 		bl	sprintf
2564:..\src/command_processing.c ****             strcat(info_string, str);
 18838              		.loc 1 2564 0
 18839 0244 07F11C03 		add	r3, r7, #28
 18840 0248 1946     		mov	r1, r3
 18841 024a 7869     		ldr	r0, [r7, #20]
 18842 024c FFF7FEFF 		bl	strcat
2565:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 18843              		.loc 1 2565 0
 18844 0250 D7F88430 		ldr	r3, [r7, #132]
 18845 0254 5B68     		ldr	r3, [r3, #4]
 18846 0256 1846     		mov	r0, r3
 18847 0258 FFF7FEFF 		bl	__aeabi_i2d
 18848 025c 4FF00002 		mov	r2, #0
 18849 0260 254B     		ldr	r3, .L766+60
 18850 0262 FFF7FEFF 		bl	__aeabi_ddiv
 18851 0266 0346     		mov	r3, r0
 18852 0268 0C46     		mov	r4, r1
 18853 026a 07F11C00 		add	r0, r7, #28
 18854 026e 1A46     		mov	r2, r3
 18855 0270 2346     		mov	r3, r4
 18856 0272 2349     		ldr	r1, .L766+68
 18857 0274 FFF7FEFF 		bl	sprintf
2566:..\src/command_processing.c ****             strcat(info_string, str);
 18858              		.loc 1 2566 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 418


 18859 0278 07F11C03 		add	r3, r7, #28
 18860 027c 1946     		mov	r1, r3
 18861 027e 7869     		ldr	r0, [r7, #20]
 18862 0280 FFF7FEFF 		bl	strcat
2567:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 18863              		.loc 1 2567 0
 18864 0284 D7F88430 		ldr	r3, [r7, #132]
 18865 0288 9B68     		ldr	r3, [r3, #8]
 18866 028a 1846     		mov	r0, r3
 18867 028c FFF7FEFF 		bl	__aeabi_i2d
 18868 0290 4FF00002 		mov	r2, #0
 18869 0294 184B     		ldr	r3, .L766+60
 18870 0296 FFF7FEFF 		bl	__aeabi_ddiv
 18871 029a 0346     		mov	r3, r0
 18872 029c 0C46     		mov	r4, r1
 18873 029e 07F11C00 		add	r0, r7, #28
 18874 02a2 1A46     		mov	r2, r3
 18875 02a4 2346     		mov	r3, r4
 18876 02a6 1749     		ldr	r1, .L766+72
 18877 02a8 FFF7FEFF 		bl	sprintf
2568:..\src/command_processing.c ****             strcat(info_string, str);
 18878              		.loc 1 2568 0
 18879 02ac 07F11C03 		add	r3, r7, #28
 18880 02b0 1946     		mov	r1, r3
 18881 02b2 7869     		ldr	r0, [r7, #20]
 18882 02b4 FFF7FEFF 		bl	strcat
 18883 02b8 74E0     		b	.L709
 18884              	.L767:
 18885 02ba 00BF     		.align	2
 18886              	.L766:
 18887 02bc 00000000 		.word	g_mem
 18888 02c0 68110000 		.word	.LC154
 18889 02c4 FC1C0000 		.word	.LC272
 18890 02c8 A4110000 		.word	.LC157
 18891 02cc 54120000 		.word	.LC163
 18892 02d0 68120000 		.word	.LC164
 18893 02d4 181A0000 		.word	.LC252
 18894 02d8 441A0000 		.word	.LC253
 18895 02dc B0120000 		.word	.LC168
 18896 02e0 20130000 		.word	.LC177
 18897 02e4 10130000 		.word	.LC175
 18898 02e8 18130000 		.word	.LC176
 18899 02ec 00000000 		.word	dev_pwm_limit
 18900 02f0 48130000 		.word	.LC180
 18901 02f4 141D0000 		.word	.LC273
 18902 02f8 0000F040 		.word	1089470464
 18903 02fc 60140000 		.word	.LC192
 18904 0300 6C140000 		.word	.LC193
 18905 0304 78140000 		.word	.LC194
 18906              	.L708:
2569:..\src/command_processing.c ****         }
2570:..\src/command_processing.c ****         else { 
2571:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 18907              		.loc 1 2571 0
 18908 0308 D7F88430 		ldr	r3, [r7, #132]
 18909 030c 9B69     		ldr	r3, [r3, #24]
 18910 030e 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 419


 18911 0310 FFF7FEFF 		bl	__aeabi_i2d
 18912 0314 4FF00002 		mov	r2, #0
 18913 0318 CC4B     		ldr	r3, .L768
 18914 031a FFF7FEFF 		bl	__aeabi_ddiv
 18915 031e 0346     		mov	r3, r0
 18916 0320 0C46     		mov	r4, r1
 18917 0322 07F11C00 		add	r0, r7, #28
 18918 0326 1A46     		mov	r2, r3
 18919 0328 2346     		mov	r3, r4
 18920 032a C949     		ldr	r1, .L768+4
 18921 032c FFF7FEFF 		bl	sprintf
2572:..\src/command_processing.c ****             strcat(info_string, str);
 18922              		.loc 1 2572 0
 18923 0330 07F11C03 		add	r3, r7, #28
 18924 0334 1946     		mov	r1, r3
 18925 0336 7869     		ldr	r0, [r7, #20]
 18926 0338 FFF7FEFF 		bl	strcat
2573:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 18927              		.loc 1 2573 0
 18928 033c D7F88430 		ldr	r3, [r7, #132]
 18929 0340 DB69     		ldr	r3, [r3, #28]
 18930 0342 1846     		mov	r0, r3
 18931 0344 FFF7FEFF 		bl	__aeabi_i2d
 18932 0348 4FF00002 		mov	r2, #0
 18933 034c BF4B     		ldr	r3, .L768
 18934 034e FFF7FEFF 		bl	__aeabi_ddiv
 18935 0352 0346     		mov	r3, r0
 18936 0354 0C46     		mov	r4, r1
 18937 0356 07F11C00 		add	r0, r7, #28
 18938 035a 1A46     		mov	r2, r3
 18939 035c 2346     		mov	r3, r4
 18940 035e BD49     		ldr	r1, .L768+8
 18941 0360 FFF7FEFF 		bl	sprintf
2574:..\src/command_processing.c ****             strcat(info_string, str);
 18942              		.loc 1 2574 0
 18943 0364 07F11C03 		add	r3, r7, #28
 18944 0368 1946     		mov	r1, r3
 18945 036a 7869     		ldr	r0, [r7, #20]
 18946 036c FFF7FEFF 		bl	strcat
2575:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 18947              		.loc 1 2575 0
 18948 0370 D7F88430 		ldr	r3, [r7, #132]
 18949 0374 1B6A     		ldr	r3, [r3, #32]
 18950 0376 1846     		mov	r0, r3
 18951 0378 FFF7FEFF 		bl	__aeabi_i2d
 18952 037c 4FF00002 		mov	r2, #0
 18953 0380 B24B     		ldr	r3, .L768
 18954 0382 FFF7FEFF 		bl	__aeabi_ddiv
 18955 0386 0346     		mov	r3, r0
 18956 0388 0C46     		mov	r4, r1
 18957 038a 07F11C00 		add	r0, r7, #28
 18958 038e 1A46     		mov	r2, r3
 18959 0390 2346     		mov	r3, r4
 18960 0392 B149     		ldr	r1, .L768+12
 18961 0394 FFF7FEFF 		bl	sprintf
2576:..\src/command_processing.c ****             strcat(info_string, str);
 18962              		.loc 1 2576 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 420


 18963 0398 07F11C03 		add	r3, r7, #28
 18964 039c 1946     		mov	r1, r3
 18965 039e 7869     		ldr	r0, [r7, #20]
 18966 03a0 FFF7FEFF 		bl	strcat
 18967              	.L709:
2577:..\src/command_processing.c ****         }
2578:..\src/command_processing.c **** 
2579:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 18968              		.loc 1 2579 0
 18969 03a4 7869     		ldr	r0, [r7, #20]
 18970 03a6 FFF7FEFF 		bl	strlen
 18971 03aa 0346     		mov	r3, r0
 18972 03ac 1A46     		mov	r2, r3
 18973 03ae 7B69     		ldr	r3, [r7, #20]
 18974 03b0 1344     		add	r3, r3, r2
 18975 03b2 AA4A     		ldr	r2, .L768+16
 18976 03b4 1C46     		mov	r4, r3
 18977 03b6 1346     		mov	r3, r2
 18978 03b8 07CB     		ldmia	r3!, {r0, r1, r2}
 18979 03ba 2060     		str	r0, [r4]	@ unaligned
 18980 03bc 6160     		str	r1, [r4, #4]	@ unaligned
 18981 03be A260     		str	r2, [r4, #8]	@ unaligned
 18982 03c0 1B88     		ldrh	r3, [r3]	@ unaligned
 18983 03c2 A381     		strh	r3, [r4, #12]	@ unaligned
2580:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18984              		.loc 1 2580 0
 18985 03c4 D7F88430 		ldr	r3, [r7, #132]
 18986 03c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18987 03cc 032B     		cmp	r3, #3
 18988 03ce 4ED0     		beq	.L710
2581:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 18989              		.loc 1 2581 0
 18990 03d0 D7F88430 		ldr	r3, [r7, #132]
 18991 03d4 DB68     		ldr	r3, [r3, #12]
 18992 03d6 1846     		mov	r0, r3
 18993 03d8 FFF7FEFF 		bl	__aeabi_i2d
 18994 03dc 4FF00002 		mov	r2, #0
 18995 03e0 9A4B     		ldr	r3, .L768
 18996 03e2 FFF7FEFF 		bl	__aeabi_ddiv
 18997 03e6 0346     		mov	r3, r0
 18998 03e8 0C46     		mov	r4, r1
 18999 03ea 07F11C00 		add	r0, r7, #28
 19000 03ee 1A46     		mov	r2, r3
 19001 03f0 2346     		mov	r3, r4
 19002 03f2 9749     		ldr	r1, .L768+4
 19003 03f4 FFF7FEFF 		bl	sprintf
2582:..\src/command_processing.c ****             strcat(info_string, str);
 19004              		.loc 1 2582 0
 19005 03f8 07F11C03 		add	r3, r7, #28
 19006 03fc 1946     		mov	r1, r3
 19007 03fe 7869     		ldr	r0, [r7, #20]
 19008 0400 FFF7FEFF 		bl	strcat
2583:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 19009              		.loc 1 2583 0
 19010 0404 D7F88430 		ldr	r3, [r7, #132]
 19011 0408 1B69     		ldr	r3, [r3, #16]
 19012 040a 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 421


 19013 040c FFF7FEFF 		bl	__aeabi_i2d
 19014 0410 4FF00002 		mov	r2, #0
 19015 0414 8D4B     		ldr	r3, .L768
 19016 0416 FFF7FEFF 		bl	__aeabi_ddiv
 19017 041a 0346     		mov	r3, r0
 19018 041c 0C46     		mov	r4, r1
 19019 041e 07F11C00 		add	r0, r7, #28
 19020 0422 1A46     		mov	r2, r3
 19021 0424 2346     		mov	r3, r4
 19022 0426 8B49     		ldr	r1, .L768+8
 19023 0428 FFF7FEFF 		bl	sprintf
2584:..\src/command_processing.c ****             strcat(info_string, str);
 19024              		.loc 1 2584 0
 19025 042c 07F11C03 		add	r3, r7, #28
 19026 0430 1946     		mov	r1, r3
 19027 0432 7869     		ldr	r0, [r7, #20]
 19028 0434 FFF7FEFF 		bl	strcat
2585:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 19029              		.loc 1 2585 0
 19030 0438 D7F88430 		ldr	r3, [r7, #132]
 19031 043c 5B69     		ldr	r3, [r3, #20]
 19032 043e 1846     		mov	r0, r3
 19033 0440 FFF7FEFF 		bl	__aeabi_i2d
 19034 0444 4FF00002 		mov	r2, #0
 19035 0448 804B     		ldr	r3, .L768
 19036 044a FFF7FEFF 		bl	__aeabi_ddiv
 19037 044e 0346     		mov	r3, r0
 19038 0450 0C46     		mov	r4, r1
 19039 0452 07F11C00 		add	r0, r7, #28
 19040 0456 1A46     		mov	r2, r3
 19041 0458 2346     		mov	r3, r4
 19042 045a 7F49     		ldr	r1, .L768+12
 19043 045c FFF7FEFF 		bl	sprintf
2586:..\src/command_processing.c ****             strcat(info_string, str);
 19044              		.loc 1 2586 0
 19045 0460 07F11C03 		add	r3, r7, #28
 19046 0464 1946     		mov	r1, r3
 19047 0466 7869     		ldr	r0, [r7, #20]
 19048 0468 FFF7FEFF 		bl	strcat
 19049 046c 4DE0     		b	.L711
 19050              	.L710:
2587:..\src/command_processing.c **** 
2588:..\src/command_processing.c ****         }
2589:..\src/command_processing.c ****         else {
2590:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 19051              		.loc 1 2590 0
 19052 046e D7F88430 		ldr	r3, [r7, #132]
 19053 0472 5B6A     		ldr	r3, [r3, #36]
 19054 0474 1846     		mov	r0, r3
 19055 0476 FFF7FEFF 		bl	__aeabi_i2d
 19056 047a 4FF00002 		mov	r2, #0
 19057 047e 734B     		ldr	r3, .L768
 19058 0480 FFF7FEFF 		bl	__aeabi_ddiv
 19059 0484 0346     		mov	r3, r0
 19060 0486 0C46     		mov	r4, r1
 19061 0488 07F11C00 		add	r0, r7, #28
 19062 048c 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 422


 19063 048e 2346     		mov	r3, r4
 19064 0490 6F49     		ldr	r1, .L768+4
 19065 0492 FFF7FEFF 		bl	sprintf
2591:..\src/command_processing.c ****             strcat(info_string, str);
 19066              		.loc 1 2591 0
 19067 0496 07F11C03 		add	r3, r7, #28
 19068 049a 1946     		mov	r1, r3
 19069 049c 7869     		ldr	r0, [r7, #20]
 19070 049e FFF7FEFF 		bl	strcat
2592:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 19071              		.loc 1 2592 0
 19072 04a2 D7F88430 		ldr	r3, [r7, #132]
 19073 04a6 9B6A     		ldr	r3, [r3, #40]
 19074 04a8 1846     		mov	r0, r3
 19075 04aa FFF7FEFF 		bl	__aeabi_i2d
 19076 04ae 4FF00002 		mov	r2, #0
 19077 04b2 664B     		ldr	r3, .L768
 19078 04b4 FFF7FEFF 		bl	__aeabi_ddiv
 19079 04b8 0346     		mov	r3, r0
 19080 04ba 0C46     		mov	r4, r1
 19081 04bc 07F11C00 		add	r0, r7, #28
 19082 04c0 1A46     		mov	r2, r3
 19083 04c2 2346     		mov	r3, r4
 19084 04c4 6349     		ldr	r1, .L768+8
 19085 04c6 FFF7FEFF 		bl	sprintf
2593:..\src/command_processing.c ****             strcat(info_string, str);
 19086              		.loc 1 2593 0
 19087 04ca 07F11C03 		add	r3, r7, #28
 19088 04ce 1946     		mov	r1, r3
 19089 04d0 7869     		ldr	r0, [r7, #20]
 19090 04d2 FFF7FEFF 		bl	strcat
2594:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 19091              		.loc 1 2594 0
 19092 04d6 D7F88430 		ldr	r3, [r7, #132]
 19093 04da DB6A     		ldr	r3, [r3, #44]
 19094 04dc 1846     		mov	r0, r3
 19095 04de FFF7FEFF 		bl	__aeabi_i2d
 19096 04e2 4FF00002 		mov	r2, #0
 19097 04e6 594B     		ldr	r3, .L768
 19098 04e8 FFF7FEFF 		bl	__aeabi_ddiv
 19099 04ec 0346     		mov	r3, r0
 19100 04ee 0C46     		mov	r4, r1
 19101 04f0 07F11C00 		add	r0, r7, #28
 19102 04f4 1A46     		mov	r2, r3
 19103 04f6 2346     		mov	r3, r4
 19104 04f8 5749     		ldr	r1, .L768+12
 19105 04fa FFF7FEFF 		bl	sprintf
2595:..\src/command_processing.c ****             strcat(info_string, str);
 19106              		.loc 1 2595 0
 19107 04fe 07F11C03 		add	r3, r7, #28
 19108 0502 1946     		mov	r1, r3
 19109 0504 7869     		ldr	r0, [r7, #20]
 19110 0506 FFF7FEFF 		bl	strcat
 19111              	.L711:
2596:..\src/command_processing.c ****         }
2597:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 19112              		.loc 1 2597 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 423


 19113 050a D7F88430 		ldr	r3, [r7, #132]
 19114 050e 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 19115 0512 012B     		cmp	r3, #1
 19116 0514 14D1     		bne	.L712
2598:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 19117              		.loc 1 2598 0
 19118 0516 7869     		ldr	r0, [r7, #20]
 19119 0518 FFF7FEFF 		bl	strlen
 19120 051c 0346     		mov	r3, r0
 19121 051e 1A46     		mov	r2, r3
 19122 0520 7B69     		ldr	r3, [r7, #20]
 19123 0522 1344     		add	r3, r3, r2
 19124 0524 4E4A     		ldr	r2, .L768+20
 19125 0526 1D46     		mov	r5, r3
 19126 0528 1446     		mov	r4, r2
 19127 052a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19128 052c 2860     		str	r0, [r5]	@ unaligned
 19129 052e 6960     		str	r1, [r5, #4]	@ unaligned
 19130 0530 AA60     		str	r2, [r5, #8]	@ unaligned
 19131 0532 EB60     		str	r3, [r5, #12]	@ unaligned
 19132 0534 03CC     		ldmia	r4!, {r0, r1}
 19133 0536 2861     		str	r0, [r5, #16]	@ unaligned
 19134 0538 6961     		str	r1, [r5, #20]	@ unaligned
 19135 053a 2388     		ldrh	r3, [r4]	@ unaligned
 19136 053c 2B83     		strh	r3, [r5, #24]	@ unaligned
 19137 053e 13E0     		b	.L713
 19138              	.L712:
2599:..\src/command_processing.c ****         else
2600:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 19139              		.loc 1 2600 0
 19140 0540 7869     		ldr	r0, [r7, #20]
 19141 0542 FFF7FEFF 		bl	strlen
 19142 0546 0346     		mov	r3, r0
 19143 0548 1A46     		mov	r2, r3
 19144 054a 7B69     		ldr	r3, [r7, #20]
 19145 054c 1344     		add	r3, r3, r2
 19146 054e 454A     		ldr	r2, .L768+24
 19147 0550 1D46     		mov	r5, r3
 19148 0552 1446     		mov	r4, r2
 19149 0554 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19150 0556 2860     		str	r0, [r5]	@ unaligned
 19151 0558 6960     		str	r1, [r5, #4]	@ unaligned
 19152 055a AA60     		str	r2, [r5, #8]	@ unaligned
 19153 055c EB60     		str	r3, [r5, #12]	@ unaligned
 19154 055e 03CC     		ldmia	r4!, {r0, r1}
 19155 0560 2861     		str	r0, [r5, #16]	@ unaligned
 19156 0562 6961     		str	r1, [r5, #20]	@ unaligned
 19157 0564 2378     		ldrb	r3, [r4]
 19158 0566 2B76     		strb	r3, [r5, #24]
 19159              	.L713:
2601:..\src/command_processing.c **** 
2602:..\src/command_processing.c ****         switch(MOT->input_mode) {
 19160              		.loc 1 2602 0
 19161 0568 D7F88430 		ldr	r3, [r7, #132]
 19162 056c 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19163 0570 072B     		cmp	r3, #7
 19164 0572 00F2EA80 		bhi	.L714
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 424


 19165 0576 01A2     		adr	r2, .L716
 19166 0578 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19167              		.p2align 2
 19168              	.L716:
 19169 057c 9D050000 		.word	.L715+1
 19170 0580 C1050000 		.word	.L717+1
 19171 0584 E9050000 		.word	.L718+1
 19172 0588 1B060000 		.word	.L719+1
 19173 058c 79060000 		.word	.L720+1
 19174 0590 A7060000 		.word	.L721+1
 19175 0594 D7060000 		.word	.L722+1
 19176 0598 05070000 		.word	.L723+1
 19177              		.p2align 1
 19178              	.L715:
2603:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2604:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 19179              		.loc 1 2604 0
 19180 059c 7869     		ldr	r0, [r7, #20]
 19181 059e FFF7FEFF 		bl	strlen
 19182 05a2 0346     		mov	r3, r0
 19183 05a4 1A46     		mov	r2, r3
 19184 05a6 7B69     		ldr	r3, [r7, #20]
 19185 05a8 1344     		add	r3, r3, r2
 19186 05aa 2F4A     		ldr	r2, .L768+28
 19187 05ac 1D46     		mov	r5, r3
 19188 05ae 1446     		mov	r4, r2
 19189 05b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19190 05b2 2860     		str	r0, [r5]	@ unaligned
 19191 05b4 6960     		str	r1, [r5, #4]	@ unaligned
 19192 05b6 AA60     		str	r2, [r5, #8]	@ unaligned
 19193 05b8 EB60     		str	r3, [r5, #12]	@ unaligned
 19194 05ba 2388     		ldrh	r3, [r4]	@ unaligned
 19195 05bc 2B82     		strh	r3, [r5, #16]	@ unaligned
2605:..\src/command_processing.c ****                 break;
 19196              		.loc 1 2605 0
 19197 05be C4E0     		b	.L714
 19198              	.L717:
2606:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2607:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 19199              		.loc 1 2607 0
 19200 05c0 7869     		ldr	r0, [r7, #20]
 19201 05c2 FFF7FEFF 		bl	strlen
 19202 05c6 0346     		mov	r3, r0
 19203 05c8 1A46     		mov	r2, r3
 19204 05ca 7B69     		ldr	r3, [r7, #20]
 19205 05cc 1344     		add	r3, r3, r2
 19206 05ce 274A     		ldr	r2, .L768+32
 19207 05d0 1D46     		mov	r5, r3
 19208 05d2 1446     		mov	r4, r2
 19209 05d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19210 05d6 2860     		str	r0, [r5]	@ unaligned
 19211 05d8 6960     		str	r1, [r5, #4]	@ unaligned
 19212 05da AA60     		str	r2, [r5, #8]	@ unaligned
 19213 05dc EB60     		str	r3, [r5, #12]	@ unaligned
 19214 05de 2068     		ldr	r0, [r4]	@ unaligned
 19215 05e0 2861     		str	r0, [r5, #16]	@ unaligned
 19216 05e2 2379     		ldrb	r3, [r4, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 425


 19217 05e4 2B75     		strb	r3, [r5, #20]
2608:..\src/command_processing.c ****                 break;
 19218              		.loc 1 2608 0
 19219 05e6 B0E0     		b	.L714
 19220              	.L718:
2609:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2610:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 19221              		.loc 1 2610 0
 19222 05e8 7869     		ldr	r0, [r7, #20]
 19223 05ea FFF7FEFF 		bl	strlen
 19224 05ee 0346     		mov	r3, r0
 19225 05f0 1A46     		mov	r2, r3
 19226 05f2 7B69     		ldr	r3, [r7, #20]
 19227 05f4 1344     		add	r3, r3, r2
 19228 05f6 1E4A     		ldr	r2, .L768+36
 19229 05f8 1D46     		mov	r5, r3
 19230 05fa 1446     		mov	r4, r2
 19231 05fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19232 05fe 2860     		str	r0, [r5]	@ unaligned
 19233 0600 6960     		str	r1, [r5, #4]	@ unaligned
 19234 0602 AA60     		str	r2, [r5, #8]	@ unaligned
 19235 0604 EB60     		str	r3, [r5, #12]	@ unaligned
 19236 0606 07CC     		ldmia	r4!, {r0, r1, r2}
 19237 0608 2861     		str	r0, [r5, #16]	@ unaligned
 19238 060a 6961     		str	r1, [r5, #20]	@ unaligned
 19239 060c AA61     		str	r2, [r5, #24]	@ unaligned
 19240 060e 2388     		ldrh	r3, [r4]	@ unaligned
 19241 0610 A278     		ldrb	r2, [r4, #2]
 19242 0612 AB83     		strh	r3, [r5, #28]	@ unaligned
 19243 0614 1346     		mov	r3, r2
 19244 0616 AB77     		strb	r3, [r5, #30]
2611:..\src/command_processing.c ****                 break;
 19245              		.loc 1 2611 0
 19246 0618 97E0     		b	.L714
 19247              	.L719:
2612:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2613:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 19248              		.loc 1 2613 0
 19249 061a 7869     		ldr	r0, [r7, #20]
 19250 061c FFF7FEFF 		bl	strlen
 19251 0620 0346     		mov	r3, r0
 19252 0622 1A46     		mov	r2, r3
 19253 0624 7B69     		ldr	r3, [r7, #20]
 19254 0626 1344     		add	r3, r3, r2
 19255 0628 124A     		ldr	r2, .L768+40
 19256 062a 1D46     		mov	r5, r3
 19257 062c 1446     		mov	r4, r2
 19258 062e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19259 0630 2860     		str	r0, [r5]	@ unaligned
 19260 0632 6960     		str	r1, [r5, #4]	@ unaligned
 19261 0634 AA60     		str	r2, [r5, #8]	@ unaligned
 19262 0636 EB60     		str	r3, [r5, #12]	@ unaligned
 19263 0638 03CC     		ldmia	r4!, {r0, r1}
 19264 063a 2861     		str	r0, [r5, #16]	@ unaligned
 19265 063c 6961     		str	r1, [r5, #20]	@ unaligned
 19266 063e 2388     		ldrh	r3, [r4]	@ unaligned
 19267 0640 A278     		ldrb	r2, [r4, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 426


 19268 0642 2B83     		strh	r3, [r5, #24]	@ unaligned
 19269 0644 1346     		mov	r3, r2
 19270 0646 AB76     		strb	r3, [r5, #26]
2614:..\src/command_processing.c ****                 break;
 19271              		.loc 1 2614 0
 19272 0648 7FE0     		b	.L714
 19273              	.L769:
 19274 064a 00BF     		.align	2
 19275              	.L768:
 19276 064c 0000F040 		.word	1089470464
 19277 0650 60140000 		.word	.LC192
 19278 0654 6C140000 		.word	.LC193
 19279 0658 78140000 		.word	.LC194
 19280 065c 241D0000 		.word	.LC274
 19281 0660 A0140000 		.word	.LC196
 19282 0664 BC140000 		.word	.LC197
 19283 0668 D8140000 		.word	.LC198
 19284 066c EC140000 		.word	.LC199
 19285 0670 04150000 		.word	.LC200
 19286 0674 24150000 		.word	.LC201
 19287              	.L720:
2615:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2616:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 19288              		.loc 1 2616 0
 19289 0678 7869     		ldr	r0, [r7, #20]
 19290 067a FFF7FEFF 		bl	strlen
 19291 067e 0346     		mov	r3, r0
 19292 0680 1A46     		mov	r2, r3
 19293 0682 7B69     		ldr	r3, [r7, #20]
 19294 0684 1344     		add	r3, r3, r2
 19295 0686 BA4A     		ldr	r2, .L770
 19296 0688 1C46     		mov	r4, r3
 19297 068a 1546     		mov	r5, r2
 19298 068c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19299 068e 2060     		str	r0, [r4]	@ unaligned
 19300 0690 6160     		str	r1, [r4, #4]	@ unaligned
 19301 0692 A260     		str	r2, [r4, #8]	@ unaligned
 19302 0694 E360     		str	r3, [r4, #12]	@ unaligned
 19303 0696 2868     		ldr	r0, [r5]	@ unaligned
 19304 0698 2061     		str	r0, [r4, #16]	@ unaligned
 19305 069a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19306 069c AA79     		ldrb	r2, [r5, #6]
 19307 069e A382     		strh	r3, [r4, #20]	@ unaligned
 19308 06a0 1346     		mov	r3, r2
 19309 06a2 A375     		strb	r3, [r4, #22]
2617:..\src/command_processing.c ****                 break;
 19310              		.loc 1 2617 0
 19311 06a4 51E0     		b	.L714
 19312              	.L721:
2618:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2619:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 19313              		.loc 1 2619 0
 19314 06a6 7869     		ldr	r0, [r7, #20]
 19315 06a8 FFF7FEFF 		bl	strlen
 19316 06ac 0346     		mov	r3, r0
 19317 06ae 1A46     		mov	r2, r3
 19318 06b0 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 427


 19319 06b2 1344     		add	r3, r3, r2
 19320 06b4 AF4A     		ldr	r2, .L770+4
 19321 06b6 1D46     		mov	r5, r3
 19322 06b8 1446     		mov	r4, r2
 19323 06ba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19324 06bc 2860     		str	r0, [r5]	@ unaligned
 19325 06be 6960     		str	r1, [r5, #4]	@ unaligned
 19326 06c0 AA60     		str	r2, [r5, #8]	@ unaligned
 19327 06c2 EB60     		str	r3, [r5, #12]	@ unaligned
 19328 06c4 03CC     		ldmia	r4!, {r0, r1}
 19329 06c6 2861     		str	r0, [r5, #16]	@ unaligned
 19330 06c8 6961     		str	r1, [r5, #20]	@ unaligned
 19331 06ca 2388     		ldrh	r3, [r4]	@ unaligned
 19332 06cc A278     		ldrb	r2, [r4, #2]
 19333 06ce 2B83     		strh	r3, [r5, #24]	@ unaligned
 19334 06d0 1346     		mov	r3, r2
 19335 06d2 AB76     		strb	r3, [r5, #26]
2620:..\src/command_processing.c ****                 break;
 19336              		.loc 1 2620 0
 19337 06d4 39E0     		b	.L714
 19338              	.L722:
2621:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2622:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 19339              		.loc 1 2622 0
 19340 06d6 7869     		ldr	r0, [r7, #20]
 19341 06d8 FFF7FEFF 		bl	strlen
 19342 06dc 0346     		mov	r3, r0
 19343 06de 1A46     		mov	r2, r3
 19344 06e0 7B69     		ldr	r3, [r7, #20]
 19345 06e2 1344     		add	r3, r3, r2
 19346 06e4 A44A     		ldr	r2, .L770+8
 19347 06e6 1C46     		mov	r4, r3
 19348 06e8 1546     		mov	r5, r2
 19349 06ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19350 06ec 2060     		str	r0, [r4]	@ unaligned
 19351 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 19352 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 19353 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 19354 06f4 2868     		ldr	r0, [r5]	@ unaligned
 19355 06f6 2061     		str	r0, [r4, #16]	@ unaligned
 19356 06f8 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19357 06fa AA79     		ldrb	r2, [r5, #6]
 19358 06fc A382     		strh	r3, [r4, #20]	@ unaligned
 19359 06fe 1346     		mov	r3, r2
 19360 0700 A375     		strb	r3, [r4, #22]
2623:..\src/command_processing.c ****                 break;
 19361              		.loc 1 2623 0
 19362 0702 22E0     		b	.L714
 19363              	.L723:
2624:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2625:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 19364              		.loc 1 2625 0
 19365 0704 7869     		ldr	r0, [r7, #20]
 19366 0706 FFF7FEFF 		bl	strlen
 19367 070a 0346     		mov	r3, r0
 19368 070c 1A46     		mov	r2, r3
 19369 070e 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 428


 19370 0710 1344     		add	r3, r3, r2
 19371 0712 9A4A     		ldr	r2, .L770+12
 19372 0714 1546     		mov	r5, r2
 19373 0716 9E46     		mov	lr, r3
 19374 0718 05F1200C 		add	ip, r5, #32
 19375              	.L724:
 19376 071c 7446     		mov	r4, lr
 19377 071e 2E46     		mov	r6, r5
 19378 0720 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19379 0722 2060     		str	r0, [r4]	@ unaligned
 19380 0724 6160     		str	r1, [r4, #4]	@ unaligned
 19381 0726 A260     		str	r2, [r4, #8]	@ unaligned
 19382 0728 E360     		str	r3, [r4, #12]	@ unaligned
 19383 072a 1035     		adds	r5, r5, #16
 19384 072c 0EF1100E 		add	lr, lr, #16
 19385 0730 6545     		cmp	r5, ip
 19386 0732 F3D1     		bne	.L724
 19387 0734 7446     		mov	r4, lr
 19388 0736 2B46     		mov	r3, r5
 19389 0738 07CB     		ldmia	r3!, {r0, r1, r2}
 19390 073a 2060     		str	r0, [r4]	@ unaligned
 19391 073c 6160     		str	r1, [r4, #4]	@ unaligned
 19392 073e A260     		str	r2, [r4, #8]	@ unaligned
 19393 0740 1A88     		ldrh	r2, [r3]	@ unaligned
 19394 0742 9B78     		ldrb	r3, [r3, #2]
 19395 0744 A281     		strh	r2, [r4, #12]	@ unaligned
 19396 0746 A373     		strb	r3, [r4, #14]
2626:..\src/command_processing.c ****                 break;
 19397              		.loc 1 2626 0
 19398 0748 00BF     		nop
 19399              	.L714:
2627:..\src/command_processing.c ****         }
2628:..\src/command_processing.c **** 
2629:..\src/command_processing.c ****         switch(MOT->control_mode) {
 19400              		.loc 1 2629 0
 19401 074a D7F88430 		ldr	r3, [r7, #132]
 19402 074e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19403 0752 032B     		cmp	r3, #3
 19404 0754 63D8     		bhi	.L764
 19405 0756 01A2     		adr	r2, .L727
 19406 0758 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19407              		.p2align 2
 19408              	.L727:
 19409 075c 6D070000 		.word	.L726+1
 19410 0760 97070000 		.word	.L728+1
 19411 0764 BB070000 		.word	.L729+1
 19412 0768 E1070000 		.word	.L730+1
 19413              		.p2align 1
 19414              	.L726:
2630:..\src/command_processing.c ****             case CONTROL_ANGLE:
2631:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 19415              		.loc 1 2631 0
 19416 076c 7869     		ldr	r0, [r7, #20]
 19417 076e FFF7FEFF 		bl	strlen
 19418 0772 0346     		mov	r3, r0
 19419 0774 1A46     		mov	r2, r3
 19420 0776 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 429


 19421 0778 1344     		add	r3, r3, r2
 19422 077a 814A     		ldr	r2, .L770+16
 19423 077c 1D46     		mov	r5, r3
 19424 077e 1446     		mov	r4, r2
 19425 0780 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19426 0782 2860     		str	r0, [r5]	@ unaligned
 19427 0784 6960     		str	r1, [r5, #4]	@ unaligned
 19428 0786 AA60     		str	r2, [r5, #8]	@ unaligned
 19429 0788 EB60     		str	r3, [r5, #12]	@ unaligned
 19430 078a 03CC     		ldmia	r4!, {r0, r1}
 19431 078c 2861     		str	r0, [r5, #16]	@ unaligned
 19432 078e 6961     		str	r1, [r5, #20]	@ unaligned
 19433 0790 2378     		ldrb	r3, [r4]
 19434 0792 2B76     		strb	r3, [r5, #24]
2632:..\src/command_processing.c ****                 break;
 19435              		.loc 1 2632 0
 19436 0794 44E0     		b	.L731
 19437              	.L728:
2633:..\src/command_processing.c ****             case CONTROL_PWM:
2634:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 19438              		.loc 1 2634 0
 19439 0796 7869     		ldr	r0, [r7, #20]
 19440 0798 FFF7FEFF 		bl	strlen
 19441 079c 0346     		mov	r3, r0
 19442 079e 1A46     		mov	r2, r3
 19443 07a0 7B69     		ldr	r3, [r7, #20]
 19444 07a2 1344     		add	r3, r3, r2
 19445 07a4 774A     		ldr	r2, .L770+20
 19446 07a6 1D46     		mov	r5, r3
 19447 07a8 1446     		mov	r4, r2
 19448 07aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19449 07ac 2860     		str	r0, [r5]	@ unaligned
 19450 07ae 6960     		str	r1, [r5, #4]	@ unaligned
 19451 07b0 AA60     		str	r2, [r5, #8]	@ unaligned
 19452 07b2 EB60     		str	r3, [r5, #12]	@ unaligned
 19453 07b4 2068     		ldr	r0, [r4]	@ unaligned
 19454 07b6 2861     		str	r0, [r5, #16]	@ unaligned
2635:..\src/command_processing.c ****                 break;
 19455              		.loc 1 2635 0
 19456 07b8 32E0     		b	.L731
 19457              	.L729:
2636:..\src/command_processing.c ****             case CONTROL_CURRENT:
2637:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 19458              		.loc 1 2637 0
 19459 07ba 7869     		ldr	r0, [r7, #20]
 19460 07bc FFF7FEFF 		bl	strlen
 19461 07c0 0346     		mov	r3, r0
 19462 07c2 1A46     		mov	r2, r3
 19463 07c4 7B69     		ldr	r3, [r7, #20]
 19464 07c6 1344     		add	r3, r3, r2
 19465 07c8 6F4A     		ldr	r2, .L770+24
 19466 07ca 1D46     		mov	r5, r3
 19467 07cc 1446     		mov	r4, r2
 19468 07ce 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19469 07d0 2860     		str	r0, [r5]	@ unaligned
 19470 07d2 6960     		str	r1, [r5, #4]	@ unaligned
 19471 07d4 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 430


 19472 07d6 EB60     		str	r3, [r5, #12]	@ unaligned
 19473 07d8 03CC     		ldmia	r4!, {r0, r1}
 19474 07da 2861     		str	r0, [r5, #16]	@ unaligned
 19475 07dc 6961     		str	r1, [r5, #20]	@ unaligned
2638:..\src/command_processing.c ****                 break;
 19476              		.loc 1 2638 0
 19477 07de 1FE0     		b	.L731
 19478              	.L730:
2639:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2640:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 19479              		.loc 1 2640 0
 19480 07e0 7869     		ldr	r0, [r7, #20]
 19481 07e2 FFF7FEFF 		bl	strlen
 19482 07e6 0346     		mov	r3, r0
 19483 07e8 1A46     		mov	r2, r3
 19484 07ea 7B69     		ldr	r3, [r7, #20]
 19485 07ec 1344     		add	r3, r3, r2
 19486 07ee 674A     		ldr	r2, .L770+28
 19487 07f0 1446     		mov	r4, r2
 19488 07f2 9E46     		mov	lr, r3
 19489 07f4 04F1200C 		add	ip, r4, #32
 19490              	.L732:
 19491 07f8 7546     		mov	r5, lr
 19492 07fa 2646     		mov	r6, r4
 19493 07fc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19494 07fe 2860     		str	r0, [r5]	@ unaligned
 19495 0800 6960     		str	r1, [r5, #4]	@ unaligned
 19496 0802 AA60     		str	r2, [r5, #8]	@ unaligned
 19497 0804 EB60     		str	r3, [r5, #12]	@ unaligned
 19498 0806 1034     		adds	r4, r4, #16
 19499 0808 0EF1100E 		add	lr, lr, #16
 19500 080c 6445     		cmp	r4, ip
 19501 080e F3D1     		bne	.L732
 19502 0810 7346     		mov	r3, lr
 19503 0812 2246     		mov	r2, r4
 19504 0814 1068     		ldr	r0, [r2]	@ unaligned
 19505 0816 1860     		str	r0, [r3]	@ unaligned
 19506 0818 1279     		ldrb	r2, [r2, #4]
 19507 081a 1A71     		strb	r2, [r3, #4]
2641:..\src/command_processing.c ****                 break;
 19508              		.loc 1 2641 0
 19509 081c 00E0     		b	.L731
 19510              	.L764:
2642:..\src/command_processing.c ****             default:
2643:..\src/command_processing.c ****                 break;
 19511              		.loc 1 2643 0
 19512 081e 00BF     		nop
 19513              	.L731:
2644:..\src/command_processing.c ****         }
2645:..\src/command_processing.c **** 
2646:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 19514              		.loc 1 2646 0
 19515 0820 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19516 0824 D7F88C10 		ldr	r1, [r7, #140]
 19517 0828 1346     		mov	r3, r2
 19518 082a 5B00     		lsls	r3, r3, #1
 19519 082c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 431


 19520 082e 1B01     		lsls	r3, r3, #4
 19521 0830 0B44     		add	r3, r3, r1
 19522 0832 03F5D873 		add	r3, r3, #432
 19523 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19524 0838 002B     		cmp	r3, #0
 19525 083a 1CD0     		beq	.L733
2647:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 19526              		.loc 1 2647 0
 19527 083c 7869     		ldr	r0, [r7, #20]
 19528 083e FFF7FEFF 		bl	strlen
 19529 0842 0346     		mov	r3, r0
 19530 0844 1A46     		mov	r2, r3
 19531 0846 7B69     		ldr	r3, [r7, #20]
 19532 0848 1344     		add	r3, r3, r2
 19533 084a 514A     		ldr	r2, .L770+32
 19534 084c 1446     		mov	r4, r2
 19535 084e 9E46     		mov	lr, r3
 19536 0850 04F1200C 		add	ip, r4, #32
 19537              	.L734:
 19538 0854 7546     		mov	r5, lr
 19539 0856 2646     		mov	r6, r4
 19540 0858 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19541 085a 2860     		str	r0, [r5]	@ unaligned
 19542 085c 6960     		str	r1, [r5, #4]	@ unaligned
 19543 085e AA60     		str	r2, [r5, #8]	@ unaligned
 19544 0860 EB60     		str	r3, [r5, #12]	@ unaligned
 19545 0862 1034     		adds	r4, r4, #16
 19546 0864 0EF1100E 		add	lr, lr, #16
 19547 0868 6445     		cmp	r4, ip
 19548 086a F3D1     		bne	.L734
 19549 086c 7346     		mov	r3, lr
 19550 086e 2246     		mov	r2, r4
 19551 0870 1278     		ldrb	r2, [r2]
 19552 0872 1A70     		strb	r2, [r3]
 19553 0874 13E0     		b	.L735
 19554              	.L733:
2648:..\src/command_processing.c ****         else
2649:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 19555              		.loc 1 2649 0
 19556 0876 7869     		ldr	r0, [r7, #20]
 19557 0878 FFF7FEFF 		bl	strlen
 19558 087c 0346     		mov	r3, r0
 19559 087e 1A46     		mov	r2, r3
 19560 0880 7B69     		ldr	r3, [r7, #20]
 19561 0882 1344     		add	r3, r3, r2
 19562 0884 434A     		ldr	r2, .L770+36
 19563 0886 1C46     		mov	r4, r3
 19564 0888 1546     		mov	r5, r2
 19565 088a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19566 088c 2060     		str	r0, [r4]	@ unaligned
 19567 088e 6160     		str	r1, [r4, #4]	@ unaligned
 19568 0890 A260     		str	r2, [r4, #8]	@ unaligned
 19569 0892 E360     		str	r3, [r4, #12]	@ unaligned
 19570 0894 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19571 0896 2061     		str	r0, [r4, #16]	@ unaligned
 19572 0898 6161     		str	r1, [r4, #20]	@ unaligned
 19573 089a A261     		str	r2, [r4, #24]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 432


 19574 089c E361     		str	r3, [r4, #28]	@ unaligned
 19575              	.L735:
2650:..\src/command_processing.c **** 
2651:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 19576              		.loc 1 2651 0
 19577 089e 7869     		ldr	r0, [r7, #20]
 19578 08a0 FFF7FEFF 		bl	strlen
 19579 08a4 0346     		mov	r3, r0
 19580 08a6 1A46     		mov	r2, r3
 19581 08a8 7B69     		ldr	r3, [r7, #20]
 19582 08aa 1344     		add	r3, r3, r2
 19583 08ac 3A4A     		ldr	r2, .L770+40
 19584 08ae 1C46     		mov	r4, r3
 19585 08b0 1346     		mov	r3, r2
 19586 08b2 07CB     		ldmia	r3!, {r0, r1, r2}
 19587 08b4 2060     		str	r0, [r4]	@ unaligned
 19588 08b6 6160     		str	r1, [r4, #4]	@ unaligned
 19589 08b8 A260     		str	r2, [r4, #8]	@ unaligned
 19590 08ba 1B88     		ldrh	r3, [r3]	@ unaligned
 19591 08bc A381     		strh	r3, [r4, #12]	@ unaligned
2652:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19592              		.loc 1 2652 0
 19593 08be 0023     		movs	r3, #0
 19594 08c0 C7F89430 		str	r3, [r7, #148]
 19595 08c4 30E0     		b	.L736
 19596              	.L738:
2653:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19597              		.loc 1 2653 0
 19598 08c6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19599 08ca D7F88C10 		ldr	r1, [r7, #140]
 19600 08ce 1346     		mov	r3, r2
 19601 08d0 5B00     		lsls	r3, r3, #1
 19602 08d2 1344     		add	r3, r3, r2
 19603 08d4 1B01     		lsls	r3, r3, #4
 19604 08d6 CA18     		adds	r2, r1, r3
 19605 08d8 D7F89430 		ldr	r3, [r7, #148]
 19606 08dc 1344     		add	r3, r3, r2
 19607 08de 03F29513 		addw	r3, r3, #405
 19608 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19609 08e4 1A46     		mov	r2, r3
 19610 08e6 07F11C03 		add	r3, r7, #28
 19611 08ea 2C49     		ldr	r1, .L770+44
 19612 08ec 1846     		mov	r0, r3
 19613 08ee FFF7FEFF 		bl	sprintf
2654:..\src/command_processing.c ****             strcat(info_string, str);
 19614              		.loc 1 2654 0
 19615 08f2 07F11C03 		add	r3, r7, #28
 19616 08f6 1946     		mov	r1, r3
 19617 08f8 7869     		ldr	r0, [r7, #20]
 19618 08fa FFF7FEFF 		bl	strcat
2655:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19619              		.loc 1 2655 0
 19620 08fe D7F89430 		ldr	r3, [r7, #148]
 19621 0902 022B     		cmp	r3, #2
 19622 0904 0BD0     		beq	.L737
2656:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19623              		.loc 1 2656 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 433


 19624 0906 7869     		ldr	r0, [r7, #20]
 19625 0908 FFF7FEFF 		bl	strlen
 19626 090c 0346     		mov	r3, r0
 19627 090e 1A46     		mov	r2, r3
 19628 0910 7B69     		ldr	r3, [r7, #20]
 19629 0912 1344     		add	r3, r3, r2
 19630 0914 224A     		ldr	r2, .L770+48
 19631 0916 1188     		ldrh	r1, [r2]	@ unaligned
 19632 0918 9278     		ldrb	r2, [r2, #2]
 19633 091a 1980     		strh	r1, [r3]	@ unaligned
 19634 091c 9A70     		strb	r2, [r3, #2]
 19635              	.L737:
2652:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19636              		.loc 1 2652 0 discriminator 2
 19637 091e D7F89430 		ldr	r3, [r7, #148]
 19638 0922 0133     		adds	r3, r3, #1
 19639 0924 C7F89430 		str	r3, [r7, #148]
 19640              	.L736:
2652:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19641              		.loc 1 2652 0 is_stmt 0 discriminator 1
 19642 0928 D7F89430 		ldr	r3, [r7, #148]
 19643 092c 022B     		cmp	r3, #2
 19644 092e CADD     		ble	.L738
2657:..\src/command_processing.c ****             }                
2658:..\src/command_processing.c ****         }
2659:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19645              		.loc 1 2659 0 is_stmt 1
 19646 0930 7869     		ldr	r0, [r7, #20]
 19647 0932 FFF7FEFF 		bl	strlen
 19648 0936 0346     		mov	r3, r0
 19649 0938 1A46     		mov	r2, r3
 19650 093a 7B69     		ldr	r3, [r7, #20]
 19651 093c 1344     		add	r3, r3, r2
 19652 093e 194A     		ldr	r2, .L770+52
 19653 0940 1188     		ldrh	r1, [r2]	@ unaligned
 19654 0942 9278     		ldrb	r2, [r2, #2]
 19655 0944 1980     		strh	r1, [r3]	@ unaligned
 19656 0946 9A70     		strb	r2, [r3, #2]
2660:..\src/command_processing.c **** 
2661:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 19657              		.loc 1 2661 0
 19658 0948 7869     		ldr	r0, [r7, #20]
 19659 094a FFF7FEFF 		bl	strlen
 19660 094e 0346     		mov	r3, r0
 19661 0950 1A46     		mov	r2, r3
 19662 0952 7B69     		ldr	r3, [r7, #20]
 19663 0954 1344     		add	r3, r3, r2
 19664 0956 1449     		ldr	r1, .L770+56
 19665 0958 1A46     		mov	r2, r3
 19666 095a 0B46     		mov	r3, r1
 19667 095c 03CB     		ldmia	r3!, {r0, r1}
 19668 095e 1060     		str	r0, [r2]	@ unaligned
 19669 0960 5160     		str	r1, [r2, #4]	@ unaligned
 19670 0962 1B88     		ldrh	r3, [r3]	@ unaligned
 19671 0964 1381     		strh	r3, [r2, #8]	@ unaligned
2662:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19672              		.loc 1 2662 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 434


 19673 0966 0023     		movs	r3, #0
 19674 0968 C7F89430 		str	r3, [r7, #148]
 19675 096c 5EE0     		b	.L739
 19676              	.L771:
 19677 096e 00BF     		.align	2
 19678              	.L770:
 19679 0970 40150000 		.word	.LC202
 19680 0974 58150000 		.word	.LC203
 19681 0978 74150000 		.word	.LC204
 19682 097c 8C150000 		.word	.LC205
 19683 0980 BC150000 		.word	.LC206
 19684 0984 D8150000 		.word	.LC207
 19685 0988 EC150000 		.word	.LC208
 19686 098c 04160000 		.word	.LC209
 19687 0990 2C160000 		.word	.LC210
 19688 0994 50160000 		.word	.LC211
 19689 0998 341D0000 		.word	.LC275
 19690 099c 80130000 		.word	.LC183
 19691 09a0 84130000 		.word	.LC184
 19692 09a4 50110000 		.word	.LC152
 19693 09a8 441D0000 		.word	.LC276
 19694              	.L741:
2663:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19695              		.loc 1 2663 0
 19696 09ac 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19697 09b0 D7F88C10 		ldr	r1, [r7, #140]
 19698 09b4 1346     		mov	r3, r2
 19699 09b6 5B00     		lsls	r3, r3, #1
 19700 09b8 1344     		add	r3, r3, r2
 19701 09ba 9B00     		lsls	r3, r3, #2
 19702 09bc D7F89420 		ldr	r2, [r7, #148]
 19703 09c0 1344     		add	r3, r3, r2
 19704 09c2 6633     		adds	r3, r3, #102
 19705 09c4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 19706 09c8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19707 09cc D7F88C00 		ldr	r0, [r7, #140]
 19708 09d0 1346     		mov	r3, r2
 19709 09d2 5B00     		lsls	r3, r3, #1
 19710 09d4 1344     		add	r3, r3, r2
 19711 09d6 1B01     		lsls	r3, r3, #4
 19712 09d8 C218     		adds	r2, r0, r3
 19713 09da D7F89430 		ldr	r3, [r7, #148]
 19714 09de 1344     		add	r3, r3, r2
 19715 09e0 03F29513 		addw	r3, r3, #405
 19716 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19717 09e6 41FA03F2 		asr	r2, r1, r3
 19718 09ea 07F11C03 		add	r3, r7, #28
 19719 09ee CF49     		ldr	r1, .L772
 19720 09f0 1846     		mov	r0, r3
 19721 09f2 FFF7FEFF 		bl	sprintf
2664:..\src/command_processing.c ****             strcat(info_string, str);
 19722              		.loc 1 2664 0
 19723 09f6 07F11C03 		add	r3, r7, #28
 19724 09fa 1946     		mov	r1, r3
 19725 09fc 7869     		ldr	r0, [r7, #20]
 19726 09fe FFF7FEFF 		bl	strcat
2665:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 435


 19727              		.loc 1 2665 0
 19728 0a02 D7F89430 		ldr	r3, [r7, #148]
 19729 0a06 022B     		cmp	r3, #2
 19730 0a08 0BD0     		beq	.L740
2666:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19731              		.loc 1 2666 0
 19732 0a0a 7869     		ldr	r0, [r7, #20]
 19733 0a0c FFF7FEFF 		bl	strlen
 19734 0a10 0346     		mov	r3, r0
 19735 0a12 1A46     		mov	r2, r3
 19736 0a14 7B69     		ldr	r3, [r7, #20]
 19737 0a16 1344     		add	r3, r3, r2
 19738 0a18 C54A     		ldr	r2, .L772+4
 19739 0a1a 1188     		ldrh	r1, [r2]	@ unaligned
 19740 0a1c 9278     		ldrb	r2, [r2, #2]
 19741 0a1e 1980     		strh	r1, [r3]	@ unaligned
 19742 0a20 9A70     		strb	r2, [r3, #2]
 19743              	.L740:
2662:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19744              		.loc 1 2662 0 discriminator 2
 19745 0a22 D7F89430 		ldr	r3, [r7, #148]
 19746 0a26 0133     		adds	r3, r3, #1
 19747 0a28 C7F89430 		str	r3, [r7, #148]
 19748              	.L739:
2662:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19749              		.loc 1 2662 0 is_stmt 0 discriminator 1
 19750 0a2c D7F89430 		ldr	r3, [r7, #148]
 19751 0a30 022B     		cmp	r3, #2
 19752 0a32 BBDD     		ble	.L741
2667:..\src/command_processing.c ****             }
2668:..\src/command_processing.c ****         }
2669:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19753              		.loc 1 2669 0 is_stmt 1
 19754 0a34 7869     		ldr	r0, [r7, #20]
 19755 0a36 FFF7FEFF 		bl	strlen
 19756 0a3a 0346     		mov	r3, r0
 19757 0a3c 1A46     		mov	r2, r3
 19758 0a3e 7B69     		ldr	r3, [r7, #20]
 19759 0a40 1344     		add	r3, r3, r2
 19760 0a42 BC4A     		ldr	r2, .L772+8
 19761 0a44 1188     		ldrh	r1, [r2]	@ unaligned
 19762 0a46 9278     		ldrb	r2, [r2, #2]
 19763 0a48 1980     		strh	r1, [r3]	@ unaligned
 19764 0a4a 9A70     		strb	r2, [r3, #2]
2670:..\src/command_processing.c ****             
2671:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 19765              		.loc 1 2671 0
 19766 0a4c 7869     		ldr	r0, [r7, #20]
 19767 0a4e FFF7FEFF 		bl	strlen
 19768 0a52 0346     		mov	r3, r0
 19769 0a54 1A46     		mov	r2, r3
 19770 0a56 7B69     		ldr	r3, [r7, #20]
 19771 0a58 1344     		add	r3, r3, r2
 19772 0a5a B74A     		ldr	r2, .L772+12
 19773 0a5c 1C46     		mov	r4, r3
 19774 0a5e 1346     		mov	r3, r2
 19775 0a60 07CB     		ldmia	r3!, {r0, r1, r2}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 436


 19776 0a62 2060     		str	r0, [r4]	@ unaligned
 19777 0a64 6160     		str	r1, [r4, #4]	@ unaligned
 19778 0a66 A260     		str	r2, [r4, #8]	@ unaligned
 19779 0a68 1B88     		ldrh	r3, [r3]	@ unaligned
 19780 0a6a A381     		strh	r3, [r4, #12]	@ unaligned
2672:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19781              		.loc 1 2672 0
 19782 0a6c 0023     		movs	r3, #0
 19783 0a6e C7F89430 		str	r3, [r7, #148]
 19784 0a72 35E0     		b	.L742
 19785              	.L744:
2673:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19786              		.loc 1 2673 0
 19787 0a74 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19788 0a78 D7F88C10 		ldr	r1, [r7, #140]
 19789 0a7c 1346     		mov	r3, r2
 19790 0a7e 5B00     		lsls	r3, r3, #1
 19791 0a80 1344     		add	r3, r3, r2
 19792 0a82 9B00     		lsls	r3, r3, #2
 19793 0a84 D7F89420 		ldr	r2, [r7, #148]
 19794 0a88 1344     		add	r3, r3, r2
 19795 0a8a 6833     		adds	r3, r3, #104
 19796 0a8c 9B00     		lsls	r3, r3, #2
 19797 0a8e 0B44     		add	r3, r3, r1
 19798 0a90 5B68     		ldr	r3, [r3, #4]	@ float
 19799 0a92 1846     		mov	r0, r3
 19800 0a94 FFF7FEFF 		bl	__aeabi_f2d
 19801 0a98 0346     		mov	r3, r0
 19802 0a9a 0C46     		mov	r4, r1
 19803 0a9c 07F11C00 		add	r0, r7, #28
 19804 0aa0 1A46     		mov	r2, r3
 19805 0aa2 2346     		mov	r3, r4
 19806 0aa4 A549     		ldr	r1, .L772+16
 19807 0aa6 FFF7FEFF 		bl	sprintf
2674:..\src/command_processing.c ****             strcat(info_string, str);
 19808              		.loc 1 2674 0
 19809 0aaa 07F11C03 		add	r3, r7, #28
 19810 0aae 1946     		mov	r1, r3
 19811 0ab0 7869     		ldr	r0, [r7, #20]
 19812 0ab2 FFF7FEFF 		bl	strcat
2675:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19813              		.loc 1 2675 0
 19814 0ab6 D7F89430 		ldr	r3, [r7, #148]
 19815 0aba 022B     		cmp	r3, #2
 19816 0abc 0BD0     		beq	.L743
2676:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19817              		.loc 1 2676 0
 19818 0abe 7869     		ldr	r0, [r7, #20]
 19819 0ac0 FFF7FEFF 		bl	strlen
 19820 0ac4 0346     		mov	r3, r0
 19821 0ac6 1A46     		mov	r2, r3
 19822 0ac8 7B69     		ldr	r3, [r7, #20]
 19823 0aca 1344     		add	r3, r3, r2
 19824 0acc 984A     		ldr	r2, .L772+4
 19825 0ace 1188     		ldrh	r1, [r2]	@ unaligned
 19826 0ad0 9278     		ldrb	r2, [r2, #2]
 19827 0ad2 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 437


 19828 0ad4 9A70     		strb	r2, [r3, #2]
 19829              	.L743:
2672:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19830              		.loc 1 2672 0 discriminator 2
 19831 0ad6 D7F89430 		ldr	r3, [r7, #148]
 19832 0ada 0133     		adds	r3, r3, #1
 19833 0adc C7F89430 		str	r3, [r7, #148]
 19834              	.L742:
2672:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19835              		.loc 1 2672 0 is_stmt 0 discriminator 1
 19836 0ae0 D7F89430 		ldr	r3, [r7, #148]
 19837 0ae4 022B     		cmp	r3, #2
 19838 0ae6 C5DD     		ble	.L744
2677:..\src/command_processing.c ****             }
2678:..\src/command_processing.c ****         }
2679:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 19839              		.loc 1 2679 0 is_stmt 1
 19840 0ae8 7869     		ldr	r0, [r7, #20]
 19841 0aea FFF7FEFF 		bl	strlen
 19842 0aee 0346     		mov	r3, r0
 19843 0af0 1A46     		mov	r2, r3
 19844 0af2 7B69     		ldr	r3, [r7, #20]
 19845 0af4 1344     		add	r3, r3, r2
 19846 0af6 8F4A     		ldr	r2, .L772+8
 19847 0af8 1188     		ldrh	r1, [r2]	@ unaligned
 19848 0afa 9278     		ldrb	r2, [r2, #2]
 19849 0afc 1980     		strh	r1, [r3]	@ unaligned
 19850 0afe 9A70     		strb	r2, [r3, #2]
2680:..\src/command_processing.c **** 
2681:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 19851              		.loc 1 2681 0
 19852 0b00 D7F88430 		ldr	r3, [r7, #132]
 19853 0b04 5B6C     		ldr	r3, [r3, #68]	@ float
 19854 0b06 1846     		mov	r0, r3
 19855 0b08 FFF7FEFF 		bl	__aeabi_f2d
 19856 0b0c C7E90201 		strd	r0, [r7, #8]
 19857 0b10 D7F88430 		ldr	r3, [r7, #132]
 19858 0b14 9B6C     		ldr	r3, [r3, #72]	@ float
 19859 0b16 1846     		mov	r0, r3
 19860 0b18 FFF7FEFF 		bl	__aeabi_f2d
 19861 0b1c 0446     		mov	r4, r0
 19862 0b1e 0D46     		mov	r5, r1
 19863 0b20 D7F88430 		ldr	r3, [r7, #132]
 19864 0b24 DB6C     		ldr	r3, [r3, #76]	@ float
 19865 0b26 1846     		mov	r0, r3
 19866 0b28 FFF7FEFF 		bl	__aeabi_f2d
 19867 0b2c 8046     		mov	r8, r0
 19868 0b2e 8946     		mov	r9, r1
 19869 0b30 D7F88430 		ldr	r3, [r7, #132]
 19870 0b34 1B6D     		ldr	r3, [r3, #80]	@ float
 19871 0b36 1846     		mov	r0, r3
 19872 0b38 FFF7FEFF 		bl	__aeabi_f2d
 19873 0b3c 8246     		mov	r10, r0
 19874 0b3e 8B46     		mov	fp, r1
 19875 0b40 D7F88430 		ldr	r3, [r7, #132]
 19876 0b44 5B6D     		ldr	r3, [r3, #84]	@ float
 19877 0b46 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 438


 19878 0b48 FFF7FEFF 		bl	__aeabi_f2d
 19879 0b4c C7E90001 		strd	r0, [r7]
 19880 0b50 D7F88430 		ldr	r3, [r7, #132]
 19881 0b54 9B6D     		ldr	r3, [r3, #88]	@ float
 19882 0b56 1846     		mov	r0, r3
 19883 0b58 FFF7FEFF 		bl	__aeabi_f2d
 19884 0b5c 0246     		mov	r2, r0
 19885 0b5e 0B46     		mov	r3, r1
 19886 0b60 07F11C00 		add	r0, r7, #28
 19887 0b64 CDE90823 		strd	r2, [sp, #32]
 19888 0b68 D7E90012 		ldrd	r1, [r7]
 19889 0b6c CDE90612 		strd	r1, [sp, #24]
 19890 0b70 CDE904AB 		strd	r10, [sp, #16]
 19891 0b74 CDE90289 		strd	r8, [sp, #8]
 19892 0b78 CDE90045 		strd	r4, [sp]
 19893 0b7c D7E90223 		ldrd	r2, [r7, #8]
 19894 0b80 6F49     		ldr	r1, .L772+20
 19895 0b82 FFF7FEFF 		bl	sprintf
2682:..\src/command_processing.c **** 		strcat(info_string, str);
 19896              		.loc 1 2682 0
 19897 0b86 07F11C03 		add	r3, r7, #28
 19898 0b8a 1946     		mov	r1, r3
 19899 0b8c 7869     		ldr	r0, [r7, #20]
 19900 0b8e FFF7FEFF 		bl	strcat
2683:..\src/command_processing.c **** 
2684:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 19901              		.loc 1 2684 0
 19902 0b92 D7F88430 		ldr	r3, [r7, #132]
 19903 0b96 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 19904 0b9a 1A46     		mov	r2, r3
 19905 0b9c 07F11C03 		add	r3, r7, #28
 19906 0ba0 6849     		ldr	r1, .L772+24
 19907 0ba2 1846     		mov	r0, r3
 19908 0ba4 FFF7FEFF 		bl	sprintf
2685:..\src/command_processing.c **** 		strcat(info_string, str);
 19909              		.loc 1 2685 0
 19910 0ba8 07F11C03 		add	r3, r7, #28
 19911 0bac 1946     		mov	r1, r3
 19912 0bae 7869     		ldr	r0, [r7, #20]
 19913 0bb0 FFF7FEFF 		bl	strcat
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 19914              		.loc 1 2687 0
 19915 0bb4 D7F88430 		ldr	r3, [r7, #132]
 19916 0bb8 596B     		ldr	r1, [r3, #52]
 19917 0bba 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19918 0bbe D7F88C00 		ldr	r0, [r7, #140]
 19919 0bc2 1346     		mov	r3, r2
 19920 0bc4 5B00     		lsls	r3, r3, #1
 19921 0bc6 1344     		add	r3, r3, r2
 19922 0bc8 1B01     		lsls	r3, r3, #4
 19923 0bca 0344     		add	r3, r3, r0
 19924 0bcc 03F29513 		addw	r3, r3, #405
 19925 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19926 0bd2 41FA03F4 		asr	r4, r1, r3
 19927 0bd6 D7F88430 		ldr	r3, [r7, #132]
 19928 0bda 996B     		ldr	r1, [r3, #56]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 439


 19929 0bdc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19930 0be0 D7F88C00 		ldr	r0, [r7, #140]
 19931 0be4 1346     		mov	r3, r2
 19932 0be6 5B00     		lsls	r3, r3, #1
 19933 0be8 1344     		add	r3, r3, r2
 19934 0bea 1B01     		lsls	r3, r3, #4
 19935 0bec 0344     		add	r3, r3, r0
 19936 0bee 03F29513 		addw	r3, r3, #405
 19937 0bf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19938 0bf4 41FA03F3 		asr	r3, r1, r3
 19939 0bf8 07F11C00 		add	r0, r7, #28
 19940 0bfc 2246     		mov	r2, r4
 19941 0bfe 5249     		ldr	r1, .L772+28
 19942 0c00 FFF7FEFF 		bl	sprintf
2688:..\src/command_processing.c **** 		strcat(info_string, str);
 19943              		.loc 1 2688 0
 19944 0c04 07F11C03 		add	r3, r7, #28
 19945 0c08 1946     		mov	r1, r3
 19946 0c0a 7869     		ldr	r0, [r7, #20]
 19947 0c0c FFF7FEFF 		bl	strcat
2689:..\src/command_processing.c **** 
2690:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 19948              		.loc 1 2690 0
 19949 0c10 D7F88430 		ldr	r3, [r7, #132]
 19950 0c14 B3F95C30 		ldrsh	r3, [r3, #92]
 19951 0c18 1A46     		mov	r2, r3
 19952 0c1a 07F11C03 		add	r3, r7, #28
 19953 0c1e 4B49     		ldr	r1, .L772+32
 19954 0c20 1846     		mov	r0, r3
 19955 0c22 FFF7FEFF 		bl	sprintf
2691:..\src/command_processing.c **** 		strcat(info_string, str);
 19956              		.loc 1 2691 0
 19957 0c26 07F11C03 		add	r3, r7, #28
 19958 0c2a 1946     		mov	r1, r3
 19959 0c2c 7869     		ldr	r0, [r7, #20]
 19960 0c2e FFF7FEFF 		bl	strcat
2692:..\src/command_processing.c **** 
2693:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 19961              		.loc 1 2693 0
 19962 0c32 D7F88430 		ldr	r3, [r7, #132]
 19963 0c36 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19964 0c3a 022B     		cmp	r3, #2
 19965 0c3c 18D0     		beq	.L745
2694:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19966              		.loc 1 2694 0 discriminator 1
 19967 0c3e D7F88430 		ldr	r3, [r7, #132]
 19968 0c42 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2693:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19969              		.loc 1 2693 0 discriminator 1
 19970 0c46 032B     		cmp	r3, #3
 19971 0c48 12D0     		beq	.L745
2695:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19972              		.loc 1 2695 0
 19973 0c4a D7F88430 		ldr	r3, [r7, #132]
 19974 0c4e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2694:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19975              		.loc 1 2694 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 440


 19976 0c52 042B     		cmp	r3, #4
 19977 0c54 0CD0     		beq	.L745
2696:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19978              		.loc 1 2696 0
 19979 0c56 D7F88430 		ldr	r3, [r7, #132]
 19980 0c5a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2695:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19981              		.loc 1 2695 0
 19982 0c5e 052B     		cmp	r3, #5
 19983 0c60 06D0     		beq	.L745
2697:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 19984              		.loc 1 2697 0
 19985 0c62 D7F88430 		ldr	r3, [r7, #132]
 19986 0c66 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2696:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19987              		.loc 1 2696 0
 19988 0c6a 072B     		cmp	r3, #7
 19989 0c6c 40F0AA80 		bne	.L746
 19990              	.L745:
2698:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 19991              		.loc 1 2698 0
 19992 0c70 D7F88C30 		ldr	r3, [r7, #140]
 19993 0c74 B3F8F031 		ldrh	r3, [r3, #496]
 19994 0c78 1A46     		mov	r2, r3
 19995 0c7a D7F88C30 		ldr	r3, [r7, #140]
 19996 0c7e B3F8F231 		ldrh	r3, [r3, #498]
 19997 0c82 07F11C00 		add	r0, r7, #28
 19998 0c86 3249     		ldr	r1, .L772+36
 19999 0c88 FFF7FEFF 		bl	sprintf
2699:..\src/command_processing.c **** 			strcat(info_string, str);
 20000              		.loc 1 2699 0
 20001 0c8c 07F11C03 		add	r3, r7, #28
 20002 0c90 1946     		mov	r1, r3
 20003 0c92 7869     		ldr	r0, [r7, #20]
 20004 0c94 FFF7FEFF 		bl	strcat
2700:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20005              		.loc 1 2700 0
 20006 0c98 7869     		ldr	r0, [r7, #20]
 20007 0c9a FFF7FEFF 		bl	strlen
 20008 0c9e 0346     		mov	r3, r0
 20009 0ca0 1A46     		mov	r2, r3
 20010 0ca2 7B69     		ldr	r3, [r7, #20]
 20011 0ca4 1344     		add	r3, r3, r2
 20012 0ca6 234A     		ldr	r2, .L772+8
 20013 0ca8 1188     		ldrh	r1, [r2]	@ unaligned
 20014 0caa 9278     		ldrb	r2, [r2, #2]
 20015 0cac 1980     		strh	r1, [r3]	@ unaligned
 20016 0cae 9A70     		strb	r2, [r3, #2]
2701:..\src/command_processing.c **** 
2702:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 20017              		.loc 1 2702 0
 20018 0cb0 D7F88C30 		ldr	r3, [r7, #140]
 20019 0cb4 D3F8F421 		ldr	r2, [r3, #500]
 20020 0cb8 D7F88C30 		ldr	r3, [r7, #140]
 20021 0cbc D3F8F831 		ldr	r3, [r3, #504]
 20022 0cc0 07F11C00 		add	r0, r7, #28
 20023 0cc4 2349     		ldr	r1, .L772+40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 441


 20024 0cc6 FFF7FEFF 		bl	sprintf
2703:..\src/command_processing.c **** 			strcat(info_string, str);
 20025              		.loc 1 2703 0
 20026 0cca 07F11C03 		add	r3, r7, #28
 20027 0cce 1946     		mov	r1, r3
 20028 0cd0 7869     		ldr	r0, [r7, #20]
 20029 0cd2 FFF7FEFF 		bl	strcat
2704:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20030              		.loc 1 2704 0
 20031 0cd6 7869     		ldr	r0, [r7, #20]
 20032 0cd8 FFF7FEFF 		bl	strlen
 20033 0cdc 0346     		mov	r3, r0
 20034 0cde 1A46     		mov	r2, r3
 20035 0ce0 7B69     		ldr	r3, [r7, #20]
 20036 0ce2 1344     		add	r3, r3, r2
 20037 0ce4 134A     		ldr	r2, .L772+8
 20038 0ce6 1188     		ldrh	r1, [r2]	@ unaligned
 20039 0ce8 9278     		ldrb	r2, [r2, #2]
 20040 0cea 1980     		strh	r1, [r3]	@ unaligned
 20041 0cec 9A70     		strb	r2, [r3, #2]
2705:..\src/command_processing.c **** 
2706:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 20042              		.loc 1 2706 0
 20043 0cee D7F88C30 		ldr	r3, [r7, #140]
 20044 0cf2 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 20045 0cf6 002B     		cmp	r3, #0
 20046 0cf8 30D0     		beq	.L747
2707:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 20047              		.loc 1 2707 0
 20048 0cfa 7869     		ldr	r0, [r7, #20]
 20049 0cfc FFF7FEFF 		bl	strlen
 20050 0d00 0346     		mov	r3, r0
 20051 0d02 1A46     		mov	r2, r3
 20052 0d04 7B69     		ldr	r3, [r7, #20]
 20053 0d06 1344     		add	r3, r3, r2
 20054 0d08 134A     		ldr	r2, .L772+44
 20055 0d0a 1D46     		mov	r5, r3
 20056 0d0c 1446     		mov	r4, r2
 20057 0d0e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20058 0d10 2860     		str	r0, [r5]	@ unaligned
 20059 0d12 6960     		str	r1, [r5, #4]	@ unaligned
 20060 0d14 AA60     		str	r2, [r5, #8]	@ unaligned
 20061 0d16 EB60     		str	r3, [r5, #12]	@ unaligned
 20062 0d18 03CC     		ldmia	r4!, {r0, r1}
 20063 0d1a 2861     		str	r0, [r5, #16]	@ unaligned
 20064 0d1c 6961     		str	r1, [r5, #20]	@ unaligned
 20065 0d1e 2388     		ldrh	r3, [r4]	@ unaligned
 20066 0d20 A278     		ldrb	r2, [r4, #2]
 20067 0d22 2B83     		strh	r3, [r5, #24]	@ unaligned
 20068 0d24 1346     		mov	r3, r2
 20069 0d26 AB76     		strb	r3, [r5, #26]
 20070 0d28 2CE0     		b	.L748
 20071              	.L773:
 20072 0d2a 00BF     		.align	2
 20073              	.L772:
 20074 0d2c B8160000 		.word	.LC215
 20075 0d30 84130000 		.word	.LC184
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 442


 20076 0d34 50110000 		.word	.LC152
 20077 0d38 501D0000 		.word	.LC277
 20078 0d3c D8160000 		.word	.LC217
 20079 0d40 601D0000 		.word	.LC278
 20080 0d44 9C1D0000 		.word	.LC279
 20081 0d48 B81D0000 		.word	.LC280
 20082 0d4c 78170000 		.word	.LC223
 20083 0d50 A0170000 		.word	.LC225
 20084 0d54 C4170000 		.word	.LC226
 20085 0d58 14180000 		.word	.LC229
 20086              	.L747:
2708:..\src/command_processing.c **** 			else
2709:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 20087              		.loc 1 2709 0
 20088 0d5c 7869     		ldr	r0, [r7, #20]
 20089 0d5e FFF7FEFF 		bl	strlen
 20090 0d62 0346     		mov	r3, r0
 20091 0d64 1A46     		mov	r2, r3
 20092 0d66 7B69     		ldr	r3, [r7, #20]
 20093 0d68 1344     		add	r3, r3, r2
 20094 0d6a D04A     		ldr	r2, .L774
 20095 0d6c 1D46     		mov	r5, r3
 20096 0d6e 1446     		mov	r4, r2
 20097 0d70 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20098 0d72 2860     		str	r0, [r5]	@ unaligned
 20099 0d74 6960     		str	r1, [r5, #4]	@ unaligned
 20100 0d76 AA60     		str	r2, [r5, #8]	@ unaligned
 20101 0d78 EB60     		str	r3, [r5, #12]	@ unaligned
 20102 0d7a 03CC     		ldmia	r4!, {r0, r1}
 20103 0d7c 2861     		str	r0, [r5, #16]	@ unaligned
 20104 0d7e 6961     		str	r1, [r5, #20]	@ unaligned
 20105 0d80 2388     		ldrh	r3, [r4]	@ unaligned
 20106 0d82 2B83     		strh	r3, [r5, #24]	@ unaligned
 20107              	.L748:
2710:..\src/command_processing.c **** 
2711:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 20108              		.loc 1 2711 0
 20109 0d84 D7F88C30 		ldr	r3, [r7, #140]
 20110 0d88 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 20111 0d8c 1A46     		mov	r2, r3
 20112 0d8e D7F88C30 		ldr	r3, [r7, #140]
 20113 0d92 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 20114 0d96 07F11C00 		add	r0, r7, #28
 20115 0d9a C549     		ldr	r1, .L774+4
 20116 0d9c FFF7FEFF 		bl	sprintf
2712:..\src/command_processing.c **** 			strcat(info_string, str);
 20117              		.loc 1 2712 0
 20118 0da0 07F11C03 		add	r3, r7, #28
 20119 0da4 1946     		mov	r1, r3
 20120 0da6 7869     		ldr	r0, [r7, #20]
 20121 0da8 FFF7FEFF 		bl	strcat
2713:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20122              		.loc 1 2713 0
 20123 0dac 7869     		ldr	r0, [r7, #20]
 20124 0dae FFF7FEFF 		bl	strlen
 20125 0db2 0346     		mov	r3, r0
 20126 0db4 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 443


 20127 0db6 7B69     		ldr	r3, [r7, #20]
 20128 0db8 1344     		add	r3, r3, r2
 20129 0dba BE4A     		ldr	r2, .L774+8
 20130 0dbc 1188     		ldrh	r1, [r2]	@ unaligned
 20131 0dbe 9278     		ldrb	r2, [r2, #2]
 20132 0dc0 1980     		strh	r1, [r3]	@ unaligned
 20133 0dc2 9A70     		strb	r2, [r3, #2]
 20134              	.L746:
 20135              	.LBE28:
2543:..\src/command_processing.c ****             
 20136              		.loc 1 2543 0 discriminator 2
 20137 0dc4 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 20138 0dc8 0133     		adds	r3, r3, #1
 20139 0dca 87F89330 		strb	r3, [r7, #147]
 20140              	.L705:
2543:..\src/command_processing.c ****             
 20141              		.loc 1 2543 0 is_stmt 0 discriminator 1
 20142 0dce D7F88C30 		ldr	r3, [r7, #140]
 20143 0dd2 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20144 0dd6 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 20145 0dda 9A42     		cmp	r2, r3
 20146 0ddc 7FF699A9 		bls	.L749
 20147              	.LBE27:
2714:..\src/command_processing.c **** 		}
2715:..\src/command_processing.c **** 	}
2716:..\src/command_processing.c **** 	 
2717:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 20148              		.loc 1 2717 0 is_stmt 1
 20149 0de0 D7F88C30 		ldr	r3, [r7, #140]
 20150 0de4 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 20151 0de8 002B     		cmp	r3, #0
 20152 0dea 63D0     		beq	.L750
2718:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 20153              		.loc 1 2718 0
 20154 0dec D7F88C30 		ldr	r3, [r7, #140]
 20155 0df0 D3F8A422 		ldr	r2, [r3, #676]
 20156 0df4 07F11C03 		add	r3, r7, #28
 20157 0df8 AF49     		ldr	r1, .L774+12
 20158 0dfa 1846     		mov	r0, r3
 20159 0dfc FFF7FEFF 		bl	sprintf
2719:..\src/command_processing.c ****         strcat(info_string, str);
 20160              		.loc 1 2719 0
 20161 0e00 07F11C03 		add	r3, r7, #28
 20162 0e04 1946     		mov	r1, r3
 20163 0e06 7869     		ldr	r0, [r7, #20]
 20164 0e08 FFF7FEFF 		bl	strcat
2720:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20165              		.loc 1 2720 0
 20166 0e0c 7869     		ldr	r0, [r7, #20]
 20167 0e0e FFF7FEFF 		bl	strlen
 20168 0e12 0346     		mov	r3, r0
 20169 0e14 1A46     		mov	r2, r3
 20170 0e16 7B69     		ldr	r3, [r7, #20]
 20171 0e18 1344     		add	r3, r3, r2
 20172 0e1a A64A     		ldr	r2, .L774+8
 20173 0e1c 1188     		ldrh	r1, [r2]	@ unaligned
 20174 0e1e 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 444


 20175 0e20 1980     		strh	r1, [r3]	@ unaligned
 20176 0e22 9A70     		strb	r2, [r3, #2]
2721:..\src/command_processing.c ****         
2722:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 20177              		.loc 1 2722 0
 20178 0e24 D7F88C30 		ldr	r3, [r7, #140]
 20179 0e28 D3F8A822 		ldr	r2, [r3, #680]
 20180 0e2c 07F11C03 		add	r3, r7, #28
 20181 0e30 A249     		ldr	r1, .L774+16
 20182 0e32 1846     		mov	r0, r3
 20183 0e34 FFF7FEFF 		bl	sprintf
2723:..\src/command_processing.c ****         strcat(info_string, str);
 20184              		.loc 1 2723 0
 20185 0e38 07F11C03 		add	r3, r7, #28
 20186 0e3c 1946     		mov	r1, r3
 20187 0e3e 7869     		ldr	r0, [r7, #20]
 20188 0e40 FFF7FEFF 		bl	strcat
2724:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20189              		.loc 1 2724 0
 20190 0e44 7869     		ldr	r0, [r7, #20]
 20191 0e46 FFF7FEFF 		bl	strlen
 20192 0e4a 0346     		mov	r3, r0
 20193 0e4c 1A46     		mov	r2, r3
 20194 0e4e 7B69     		ldr	r3, [r7, #20]
 20195 0e50 1344     		add	r3, r3, r2
 20196 0e52 984A     		ldr	r2, .L774+8
 20197 0e54 1188     		ldrh	r1, [r2]	@ unaligned
 20198 0e56 9278     		ldrb	r2, [r2, #2]
 20199 0e58 1980     		strh	r1, [r3]	@ unaligned
 20200 0e5a 9A70     		strb	r2, [r3, #2]
2725:..\src/command_processing.c ****         
2726:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 20201              		.loc 1 2726 0
 20202 0e5c D7F88C30 		ldr	r3, [r7, #140]
 20203 0e60 D3F8A022 		ldr	r2, [r3, #672]
 20204 0e64 D7F88C30 		ldr	r3, [r7, #140]
 20205 0e68 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20206 0e6c 1846     		mov	r0, r3
 20207 0e6e D7F88C10 		ldr	r1, [r7, #140]
 20208 0e72 0346     		mov	r3, r0
 20209 0e74 5B00     		lsls	r3, r3, #1
 20210 0e76 0344     		add	r3, r3, r0
 20211 0e78 1B01     		lsls	r3, r3, #4
 20212 0e7a 0B44     		add	r3, r3, r1
 20213 0e7c 03F29513 		addw	r3, r3, #405
 20214 0e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20215 0e82 1A41     		asrs	r2, r2, r3
 20216 0e84 07F11C03 		add	r3, r7, #28
 20217 0e88 8D49     		ldr	r1, .L774+20
 20218 0e8a 1846     		mov	r0, r3
 20219 0e8c FFF7FEFF 		bl	sprintf
2727:..\src/command_processing.c ****         strcat(info_string, str);
 20220              		.loc 1 2727 0
 20221 0e90 07F11C03 		add	r3, r7, #28
 20222 0e94 1946     		mov	r1, r3
 20223 0e96 7869     		ldr	r0, [r7, #20]
 20224 0e98 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 445


2728:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 20225              		.loc 1 2728 0
 20226 0e9c 7869     		ldr	r0, [r7, #20]
 20227 0e9e FFF7FEFF 		bl	strlen
 20228 0ea2 0346     		mov	r3, r0
 20229 0ea4 1A46     		mov	r2, r3
 20230 0ea6 7B69     		ldr	r3, [r7, #20]
 20231 0ea8 1344     		add	r3, r3, r2
 20232 0eaa 824A     		ldr	r2, .L774+8
 20233 0eac 1188     		ldrh	r1, [r2]	@ unaligned
 20234 0eae 9278     		ldrb	r2, [r2, #2]
 20235 0eb0 1980     		strh	r1, [r3]	@ unaligned
 20236 0eb2 9A70     		strb	r2, [r3, #2]
 20237              	.L750:
2729:..\src/command_processing.c ****     }
2730:..\src/command_processing.c **** 	
2731:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 20238              		.loc 1 2731 0
 20239 0eb4 D7F88C30 		ldr	r3, [r7, #140]
 20240 0eb8 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 20241 0ebc 002B     		cmp	r3, #0
 20242 0ebe 00F0CB81 		beq	.L765
2732:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 20243              		.loc 1 2732 0
 20244 0ec2 804B     		ldr	r3, .L774+24
 20245 0ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20246 0ec6 1A46     		mov	r2, r3
 20247 0ec8 07F11C03 		add	r3, r7, #28
 20248 0ecc 7E49     		ldr	r1, .L774+28
 20249 0ece 1846     		mov	r0, r3
 20250 0ed0 FFF7FEFF 		bl	sprintf
2733:..\src/command_processing.c **** 		strcat(info_string, str);
 20251              		.loc 1 2733 0
 20252 0ed4 07F11C03 		add	r3, r7, #28
 20253 0ed8 1946     		mov	r1, r3
 20254 0eda 7869     		ldr	r0, [r7, #20]
 20255 0edc FFF7FEFF 		bl	strcat
2734:..\src/command_processing.c **** 		
2735:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20256              		.loc 1 2735 0
 20257 0ee0 7869     		ldr	r0, [r7, #20]
 20258 0ee2 FFF7FEFF 		bl	strlen
 20259 0ee6 0346     		mov	r3, r0
 20260 0ee8 1A46     		mov	r2, r3
 20261 0eea 7B69     		ldr	r3, [r7, #20]
 20262 0eec 1344     		add	r3, r3, r2
 20263 0eee 714A     		ldr	r2, .L774+8
 20264 0ef0 1188     		ldrh	r1, [r2]	@ unaligned
 20265 0ef2 9278     		ldrb	r2, [r2, #2]
 20266 0ef4 1980     		strh	r1, [r3]	@ unaligned
 20267 0ef6 9A70     		strb	r2, [r3, #2]
2736:..\src/command_processing.c **** 		
2737:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 20268              		.loc 1 2737 0
 20269 0ef8 7869     		ldr	r0, [r7, #20]
 20270 0efa FFF7FEFF 		bl	strlen
 20271 0efe 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 446


 20272 0f00 1A46     		mov	r2, r3
 20273 0f02 7B69     		ldr	r3, [r7, #20]
 20274 0f04 1344     		add	r3, r3, r2
 20275 0f06 714A     		ldr	r2, .L774+32
 20276 0f08 1D46     		mov	r5, r3
 20277 0f0a 1446     		mov	r4, r2
 20278 0f0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20279 0f0e 2860     		str	r0, [r5]	@ unaligned
 20280 0f10 6960     		str	r1, [r5, #4]	@ unaligned
 20281 0f12 AA60     		str	r2, [r5, #8]	@ unaligned
 20282 0f14 EB60     		str	r3, [r5, #12]	@ unaligned
 20283 0f16 2068     		ldr	r0, [r4]	@ unaligned
 20284 0f18 2861     		str	r0, [r5, #16]	@ unaligned
 20285 0f1a 2379     		ldrb	r3, [r4, #4]
 20286 0f1c 2B75     		strb	r3, [r5, #20]
2738:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 20287              		.loc 1 2738 0
 20288 0f1e 0023     		movs	r3, #0
 20289 0f20 C7F89430 		str	r3, [r7, #148]
 20290 0f24 84E1     		b	.L752
 20291              	.L763:
2739:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20292              		.loc 1 2739 0
 20293 0f26 6A4A     		ldr	r2, .L774+36
 20294 0f28 D7F89430 		ldr	r3, [r7, #148]
 20295 0f2c 1344     		add	r3, r3, r2
 20296 0f2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20297 0f30 07F11C00 		add	r0, r7, #28
 20298 0f34 D7F89420 		ldr	r2, [r7, #148]
 20299 0f38 6649     		ldr	r1, .L774+40
 20300 0f3a FFF7FEFF 		bl	sprintf
2740:..\src/command_processing.c **** 			strcat(info_string, str);
 20301              		.loc 1 2740 0
 20302 0f3e 07F11C03 		add	r3, r7, #28
 20303 0f42 1946     		mov	r1, r3
 20304 0f44 7869     		ldr	r0, [r7, #20]
 20305 0f46 FFF7FEFF 		bl	strcat
2741:..\src/command_processing.c **** 			
2742:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 20306              		.loc 1 2742 0
 20307 0f4a 07F11C03 		add	r3, r7, #28
 20308 0f4e 624A     		ldr	r2, .L774+44
 20309 0f50 1C46     		mov	r4, r3
 20310 0f52 1546     		mov	r5, r2
 20311 0f54 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20312 0f56 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 20313 0f58 2B68     		ldr	r3, [r5]
 20314 0f5a 2380     		strh	r3, [r4]	@ movhi
2743:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 20315              		.loc 1 2743 0
 20316 0f5c 5C4A     		ldr	r2, .L774+36
 20317 0f5e D7F89430 		ldr	r3, [r7, #148]
 20318 0f62 1344     		add	r3, r3, r2
 20319 0f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20320 0f66 1946     		mov	r1, r3
 20321 0f68 D7F88C20 		ldr	r2, [r7, #140]
 20322 0f6c 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 447


 20323 0f6e 9B00     		lsls	r3, r3, #2
 20324 0f70 0B44     		add	r3, r3, r1
 20325 0f72 1344     		add	r3, r3, r2
 20326 0f74 03F20223 		addw	r3, r3, #514
 20327 0f78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20328 0f7a 002B     		cmp	r3, #0
 20329 0f7c 0FD0     		beq	.L753
2744:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20330              		.loc 1 2744 0
 20331 0f7e 07F11C03 		add	r3, r7, #28
 20332 0f82 1846     		mov	r0, r3
 20333 0f84 FFF7FEFF 		bl	strlen
 20334 0f88 0346     		mov	r3, r0
 20335 0f8a 1A46     		mov	r2, r3
 20336 0f8c 07F11C03 		add	r3, r7, #28
 20337 0f90 1344     		add	r3, r3, r2
 20338 0f92 524A     		ldr	r2, .L774+48
 20339 0f94 1068     		ldr	r0, [r2]	@ unaligned
 20340 0f96 1860     		str	r0, [r3]	@ unaligned
 20341 0f98 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20342 0f9a 9A80     		strh	r2, [r3, #4]	@ unaligned
 20343 0f9c 0EE0     		b	.L754
 20344              	.L753:
2745:..\src/command_processing.c **** 			else
2746:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20345              		.loc 1 2746 0
 20346 0f9e 07F11C03 		add	r3, r7, #28
 20347 0fa2 1846     		mov	r0, r3
 20348 0fa4 FFF7FEFF 		bl	strlen
 20349 0fa8 0346     		mov	r3, r0
 20350 0faa 1A46     		mov	r2, r3
 20351 0fac 07F11C03 		add	r3, r7, #28
 20352 0fb0 1344     		add	r3, r3, r2
 20353 0fb2 4B4A     		ldr	r2, .L774+52
 20354 0fb4 1068     		ldr	r0, [r2]	@ unaligned
 20355 0fb6 1860     		str	r0, [r3]	@ unaligned
 20356 0fb8 1279     		ldrb	r2, [r2, #4]
 20357 0fba 1A71     		strb	r2, [r3, #4]
 20358              	.L754:
2747:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 20359              		.loc 1 2747 0
 20360 0fbc 07F11C03 		add	r3, r7, #28
 20361 0fc0 1846     		mov	r0, r3
 20362 0fc2 FFF7FEFF 		bl	strlen
 20363 0fc6 0346     		mov	r3, r0
 20364 0fc8 1A46     		mov	r2, r3
 20365 0fca 07F11C03 		add	r3, r7, #28
 20366 0fce 1344     		add	r3, r3, r2
 20367 0fd0 444A     		ldr	r2, .L774+56
 20368 0fd2 1C46     		mov	r4, r3
 20369 0fd4 1346     		mov	r3, r2
 20370 0fd6 07CB     		ldmia	r3!, {r0, r1, r2}
 20371 0fd8 2060     		str	r0, [r4]	@ unaligned
 20372 0fda 6160     		str	r1, [r4, #4]	@ unaligned
 20373 0fdc A260     		str	r2, [r4, #8]	@ unaligned
 20374 0fde 1B88     		ldrh	r3, [r3]	@ unaligned
 20375 0fe0 A381     		strh	r3, [r4, #12]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 448


2748:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 20376              		.loc 1 2748 0
 20377 0fe2 3B4A     		ldr	r2, .L774+36
 20378 0fe4 D7F89430 		ldr	r3, [r7, #148]
 20379 0fe8 1344     		add	r3, r3, r2
 20380 0fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20381 0fec 1946     		mov	r1, r3
 20382 0fee D7F88C20 		ldr	r2, [r7, #140]
 20383 0ff2 0B46     		mov	r3, r1
 20384 0ff4 9B00     		lsls	r3, r3, #2
 20385 0ff6 0B44     		add	r3, r3, r1
 20386 0ff8 1344     		add	r3, r3, r2
 20387 0ffa 03F20323 		addw	r3, r3, #515
 20388 0ffe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20389 1000 002B     		cmp	r3, #0
 20390 1002 0FD0     		beq	.L755
2749:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20391              		.loc 1 2749 0
 20392 1004 07F11C03 		add	r3, r7, #28
 20393 1008 1846     		mov	r0, r3
 20394 100a FFF7FEFF 		bl	strlen
 20395 100e 0346     		mov	r3, r0
 20396 1010 1A46     		mov	r2, r3
 20397 1012 07F11C03 		add	r3, r7, #28
 20398 1016 1344     		add	r3, r3, r2
 20399 1018 304A     		ldr	r2, .L774+48
 20400 101a 1068     		ldr	r0, [r2]	@ unaligned
 20401 101c 1860     		str	r0, [r3]	@ unaligned
 20402 101e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20403 1020 9A80     		strh	r2, [r3, #4]	@ unaligned
 20404 1022 0EE0     		b	.L756
 20405              	.L755:
2750:..\src/command_processing.c **** 			else
2751:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20406              		.loc 1 2751 0
 20407 1024 07F11C03 		add	r3, r7, #28
 20408 1028 1846     		mov	r0, r3
 20409 102a FFF7FEFF 		bl	strlen
 20410 102e 0346     		mov	r3, r0
 20411 1030 1A46     		mov	r2, r3
 20412 1032 07F11C03 		add	r3, r7, #28
 20413 1036 1344     		add	r3, r3, r2
 20414 1038 294A     		ldr	r2, .L774+52
 20415 103a 1068     		ldr	r0, [r2]	@ unaligned
 20416 103c 1860     		str	r0, [r3]	@ unaligned
 20417 103e 1279     		ldrb	r2, [r2, #4]
 20418 1040 1A71     		strb	r2, [r3, #4]
 20419              	.L756:
2752:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 20420              		.loc 1 2752 0
 20421 1042 07F11C03 		add	r3, r7, #28
 20422 1046 1846     		mov	r0, r3
 20423 1048 FFF7FEFF 		bl	strlen
 20424 104c 0346     		mov	r3, r0
 20425 104e 1A46     		mov	r2, r3
 20426 1050 07F11C03 		add	r3, r7, #28
 20427 1054 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 449


 20428 1056 244A     		ldr	r2, .L774+60
 20429 1058 1D46     		mov	r5, r3
 20430 105a 1446     		mov	r4, r2
 20431 105c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20432 105e 2860     		str	r0, [r5]	@ unaligned
 20433 1060 6960     		str	r1, [r5, #4]	@ unaligned
 20434 1062 AA60     		str	r2, [r5, #8]	@ unaligned
 20435 1064 EB60     		str	r3, [r5, #12]	@ unaligned
 20436 1066 2378     		ldrb	r3, [r4]
 20437 1068 2B74     		strb	r3, [r5, #16]
2753:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 20438              		.loc 1 2753 0
 20439 106a 194A     		ldr	r2, .L774+36
 20440 106c D7F89430 		ldr	r3, [r7, #148]
 20441 1070 1344     		add	r3, r3, r2
 20442 1072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20443 1074 1946     		mov	r1, r3
 20444 1076 D7F88C20 		ldr	r2, [r7, #140]
 20445 107a 0B46     		mov	r3, r1
 20446 107c 9B00     		lsls	r3, r3, #2
 20447 107e 0B44     		add	r3, r3, r1
 20448 1080 1344     		add	r3, r3, r2
 20449 1082 03F50173 		add	r3, r3, #516
 20450 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20451 1088 002B     		cmp	r3, #0
 20452 108a 2FD0     		beq	.L757
2754:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20453              		.loc 1 2754 0
 20454 108c 07F11C03 		add	r3, r7, #28
 20455 1090 1846     		mov	r0, r3
 20456 1092 FFF7FEFF 		bl	strlen
 20457 1096 0346     		mov	r3, r0
 20458 1098 1A46     		mov	r2, r3
 20459 109a 07F11C03 		add	r3, r7, #28
 20460 109e 1344     		add	r3, r3, r2
 20461 10a0 0E4A     		ldr	r2, .L774+48
 20462 10a2 1068     		ldr	r0, [r2]	@ unaligned
 20463 10a4 1860     		str	r0, [r3]	@ unaligned
 20464 10a6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20465 10a8 9A80     		strh	r2, [r3, #4]	@ unaligned
 20466 10aa 2EE0     		b	.L758
 20467              	.L775:
 20468              		.align	2
 20469              	.L774:
 20470 10ac 30180000 		.word	.LC230
 20471 10b0 4C180000 		.word	.LC231
 20472 10b4 50110000 		.word	.LC152
 20473 10b8 A8180000 		.word	.LC235
 20474 10bc C4180000 		.word	.LC236
 20475 10c0 EC180000 		.word	.LC237
 20476 10c4 00000000 		.word	N_IMU_Connected
 20477 10c8 00190000 		.word	.LC238
 20478 10cc 14190000 		.word	.LC239
 20479 10d0 00000000 		.word	IMU_connected
 20480 10d4 2C190000 		.word	.LC240
 20481 10d8 40190000 		.word	.LC241
 20482 10dc 10130000 		.word	.LC175
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 450


 20483 10e0 18130000 		.word	.LC176
 20484 10e4 54190000 		.word	.LC242
 20485 10e8 64190000 		.word	.LC243
 20486              	.L757:
2755:..\src/command_processing.c **** 			else
2756:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20487              		.loc 1 2756 0
 20488 10ec 07F11C03 		add	r3, r7, #28
 20489 10f0 1846     		mov	r0, r3
 20490 10f2 FFF7FEFF 		bl	strlen
 20491 10f6 0346     		mov	r3, r0
 20492 10f8 1A46     		mov	r2, r3
 20493 10fa 07F11C03 		add	r3, r7, #28
 20494 10fe 1344     		add	r3, r3, r2
 20495 1100 584A     		ldr	r2, .L776
 20496 1102 1068     		ldr	r0, [r2]	@ unaligned
 20497 1104 1860     		str	r0, [r3]	@ unaligned
 20498 1106 1279     		ldrb	r2, [r2, #4]
 20499 1108 1A71     		strb	r2, [r3, #4]
 20500              	.L758:
2757:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 20501              		.loc 1 2757 0
 20502 110a 07F11C03 		add	r3, r7, #28
 20503 110e 1846     		mov	r0, r3
 20504 1110 FFF7FEFF 		bl	strlen
 20505 1114 0346     		mov	r3, r0
 20506 1116 1A46     		mov	r2, r3
 20507 1118 07F11C03 		add	r3, r7, #28
 20508 111c 1344     		add	r3, r3, r2
 20509 111e 524A     		ldr	r2, .L776+4
 20510 1120 1C46     		mov	r4, r3
 20511 1122 1346     		mov	r3, r2
 20512 1124 07CB     		ldmia	r3!, {r0, r1, r2}
 20513 1126 2060     		str	r0, [r4]	@ unaligned
 20514 1128 6160     		str	r1, [r4, #4]	@ unaligned
 20515 112a A260     		str	r2, [r4, #8]	@ unaligned
 20516 112c 1B88     		ldrh	r3, [r3]	@ unaligned
 20517 112e A381     		strh	r3, [r4, #12]	@ unaligned
2758:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 20518              		.loc 1 2758 0
 20519 1130 4E4A     		ldr	r2, .L776+8
 20520 1132 D7F89430 		ldr	r3, [r7, #148]
 20521 1136 1344     		add	r3, r3, r2
 20522 1138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20523 113a 1946     		mov	r1, r3
 20524 113c D7F88C20 		ldr	r2, [r7, #140]
 20525 1140 0B46     		mov	r3, r1
 20526 1142 9B00     		lsls	r3, r3, #2
 20527 1144 0B44     		add	r3, r3, r1
 20528 1146 1344     		add	r3, r3, r2
 20529 1148 03F20523 		addw	r3, r3, #517
 20530 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20531 114e 002B     		cmp	r3, #0
 20532 1150 0FD0     		beq	.L759
2759:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20533              		.loc 1 2759 0
 20534 1152 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 451


 20535 1156 1846     		mov	r0, r3
 20536 1158 FFF7FEFF 		bl	strlen
 20537 115c 0346     		mov	r3, r0
 20538 115e 1A46     		mov	r2, r3
 20539 1160 07F11C03 		add	r3, r7, #28
 20540 1164 1344     		add	r3, r3, r2
 20541 1166 424A     		ldr	r2, .L776+12
 20542 1168 1068     		ldr	r0, [r2]	@ unaligned
 20543 116a 1860     		str	r0, [r3]	@ unaligned
 20544 116c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20545 116e 9A80     		strh	r2, [r3, #4]	@ unaligned
 20546 1170 0EE0     		b	.L760
 20547              	.L759:
2760:..\src/command_processing.c **** 			else
2761:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20548              		.loc 1 2761 0
 20549 1172 07F11C03 		add	r3, r7, #28
 20550 1176 1846     		mov	r0, r3
 20551 1178 FFF7FEFF 		bl	strlen
 20552 117c 0346     		mov	r3, r0
 20553 117e 1A46     		mov	r2, r3
 20554 1180 07F11C03 		add	r3, r7, #28
 20555 1184 1344     		add	r3, r3, r2
 20556 1186 374A     		ldr	r2, .L776
 20557 1188 1068     		ldr	r0, [r2]	@ unaligned
 20558 118a 1860     		str	r0, [r3]	@ unaligned
 20559 118c 1279     		ldrb	r2, [r2, #4]
 20560 118e 1A71     		strb	r2, [r3, #4]
 20561              	.L760:
2762:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 20562              		.loc 1 2762 0
 20563 1190 07F11C03 		add	r3, r7, #28
 20564 1194 1846     		mov	r0, r3
 20565 1196 FFF7FEFF 		bl	strlen
 20566 119a 0346     		mov	r3, r0
 20567 119c 1A46     		mov	r2, r3
 20568 119e 07F11C03 		add	r3, r7, #28
 20569 11a2 1344     		add	r3, r3, r2
 20570 11a4 334A     		ldr	r2, .L776+16
 20571 11a6 1C46     		mov	r4, r3
 20572 11a8 1346     		mov	r3, r2
 20573 11aa 07CB     		ldmia	r3!, {r0, r1, r2}
 20574 11ac 2060     		str	r0, [r4]	@ unaligned
 20575 11ae 6160     		str	r1, [r4, #4]	@ unaligned
 20576 11b0 A260     		str	r2, [r4, #8]	@ unaligned
 20577 11b2 1A88     		ldrh	r2, [r3]	@ unaligned
 20578 11b4 9B78     		ldrb	r3, [r3, #2]
 20579 11b6 A281     		strh	r2, [r4, #12]	@ unaligned
 20580 11b8 A373     		strb	r3, [r4, #14]
2763:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 20581              		.loc 1 2763 0
 20582 11ba 2C4A     		ldr	r2, .L776+8
 20583 11bc D7F89430 		ldr	r3, [r7, #148]
 20584 11c0 1344     		add	r3, r3, r2
 20585 11c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20586 11c4 1946     		mov	r1, r3
 20587 11c6 D7F88C20 		ldr	r2, [r7, #140]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 452


 20588 11ca 0B46     		mov	r3, r1
 20589 11cc 9B00     		lsls	r3, r3, #2
 20590 11ce 0B44     		add	r3, r3, r1
 20591 11d0 1344     		add	r3, r3, r2
 20592 11d2 03F20623 		addw	r3, r3, #518
 20593 11d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20594 11d8 002B     		cmp	r3, #0
 20595 11da 0FD0     		beq	.L761
2764:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20596              		.loc 1 2764 0
 20597 11dc 07F11C03 		add	r3, r7, #28
 20598 11e0 1846     		mov	r0, r3
 20599 11e2 FFF7FEFF 		bl	strlen
 20600 11e6 0346     		mov	r3, r0
 20601 11e8 1A46     		mov	r2, r3
 20602 11ea 07F11C03 		add	r3, r7, #28
 20603 11ee 1344     		add	r3, r3, r2
 20604 11f0 1F4A     		ldr	r2, .L776+12
 20605 11f2 1068     		ldr	r0, [r2]	@ unaligned
 20606 11f4 1860     		str	r0, [r3]	@ unaligned
 20607 11f6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20608 11f8 9A80     		strh	r2, [r3, #4]	@ unaligned
 20609 11fa 0EE0     		b	.L762
 20610              	.L761:
2765:..\src/command_processing.c **** 			else
2766:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20611              		.loc 1 2766 0
 20612 11fc 07F11C03 		add	r3, r7, #28
 20613 1200 1846     		mov	r0, r3
 20614 1202 FFF7FEFF 		bl	strlen
 20615 1206 0346     		mov	r3, r0
 20616 1208 1A46     		mov	r2, r3
 20617 120a 07F11C03 		add	r3, r7, #28
 20618 120e 1344     		add	r3, r3, r2
 20619 1210 144A     		ldr	r2, .L776
 20620 1212 1068     		ldr	r0, [r2]	@ unaligned
 20621 1214 1860     		str	r0, [r3]	@ unaligned
 20622 1216 1279     		ldrb	r2, [r2, #4]
 20623 1218 1A71     		strb	r2, [r3, #4]
 20624              	.L762:
2767:..\src/command_processing.c **** 				 
2768:..\src/command_processing.c **** 			strcat(info_string, str);
 20625              		.loc 1 2768 0 discriminator 2
 20626 121a 07F11C03 		add	r3, r7, #28
 20627 121e 1946     		mov	r1, r3
 20628 1220 7869     		ldr	r0, [r7, #20]
 20629 1222 FFF7FEFF 		bl	strcat
2738:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20630              		.loc 1 2738 0 discriminator 2
 20631 1226 D7F89430 		ldr	r3, [r7, #148]
 20632 122a 0133     		adds	r3, r3, #1
 20633 122c C7F89430 		str	r3, [r7, #148]
 20634              	.L752:
2738:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20635              		.loc 1 2738 0 is_stmt 0 discriminator 1
 20636 1230 114B     		ldr	r3, .L776+20
 20637 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 453


 20638 1234 1A46     		mov	r2, r3
 20639 1236 D7F89430 		ldr	r3, [r7, #148]
 20640 123a 9A42     		cmp	r2, r3
 20641 123c 3FF773AE 		bgt	.L763
2769:..\src/command_processing.c **** 		}       
2770:..\src/command_processing.c **** 		
2771:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20642              		.loc 1 2771 0 is_stmt 1
 20643 1240 7869     		ldr	r0, [r7, #20]
 20644 1242 FFF7FEFF 		bl	strlen
 20645 1246 0346     		mov	r3, r0
 20646 1248 1A46     		mov	r2, r3
 20647 124a 7B69     		ldr	r3, [r7, #20]
 20648 124c 1344     		add	r3, r3, r2
 20649 124e 0B4A     		ldr	r2, .L776+24
 20650 1250 1188     		ldrh	r1, [r2]	@ unaligned
 20651 1252 9278     		ldrb	r2, [r2, #2]
 20652 1254 1980     		strh	r1, [r3]	@ unaligned
 20653 1256 9A70     		strb	r2, [r3, #2]
 20654              	.L765:
2772:..\src/command_processing.c **** 	}
2773:..\src/command_processing.c **** }
 20655              		.loc 1 2773 0
 20656 1258 00BF     		nop
 20657 125a 9C37     		adds	r7, r7, #156
 20658              		.cfi_def_cfa_offset 36
 20659 125c BD46     		mov	sp, r7
 20660              		.cfi_def_cfa_register 13
 20661              		@ sp needed
 20662 125e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20663              	.L777:
 20664 1262 00BF     		.align	2
 20665              	.L776:
 20666 1264 18130000 		.word	.LC176
 20667 1268 78190000 		.word	.LC244
 20668 126c 00000000 		.word	IMU_connected
 20669 1270 10130000 		.word	.LC175
 20670 1274 88190000 		.word	.LC245
 20671 1278 00000000 		.word	N_IMU_Connected
 20672 127c 50110000 		.word	.LC152
 20673              		.cfi_endproc
 20674              	.LFE75:
 20675              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 20676              		.section	.rodata
 20677 1de2 0000     		.align	2
 20678              	.LC281:
 20679 1de4 486F7572 		.ascii	"Hour,Min,Sec,\000"
 20679      2C4D696E 
 20679      2C536563 
 20679      2C00
 20680 1df2 0000     		.align	2
 20681              	.LC282:
 20682 1df4 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 20682      25645F50 
 20682      6F732C00 
 20683              		.align	2
 20684              	.LC283:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 454


 20685 1e00 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 20685      25645F43 
 20685      7572722C 
 20685      00
 20686 1e0d 000000   		.align	2
 20687              	.LC284:
 20688 1e10 52657374 		.ascii	"Rest_times,Wire_disp,Total_rest_time,Power_cycles,E"
 20688      5F74696D 
 20688      65732C57 
 20688      6972655F 
 20688      64697370 
 20689 1e43 4D475F31 		.ascii	"MG_1_act,EMG_2_act,EMG_1_excess,EMG_2_excess,Motion"
 20689      5F616374 
 20689      2C454D47 
 20689      5F325F61 
 20689      63742C45 
 20690 1e76 5F312C4D 		.ascii	"_1,Motion_2,Total_runtime\000"
 20690      6F74696F 
 20690      6E5F322C 
 20690      546F7461 
 20690      6C5F7275 
 20691              		.section	.text.prepare_SD_legend,"ax",%progbits
 20692              		.align	2
 20693              		.global	prepare_SD_legend
 20694              		.thumb
 20695              		.thumb_func
 20696              		.type	prepare_SD_legend, %function
 20697              	prepare_SD_legend:
 20698              	.LFB76:
2774:..\src/command_processing.c **** 
2775:..\src/command_processing.c **** 
2776:..\src/command_processing.c **** //==============================================================================
2777:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2778:..\src/command_processing.c **** //==============================================================================
2779:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2780:..\src/command_processing.c **** {
 20699              		.loc 1 2780 0
 20700              		.cfi_startproc
 20701              		@ args = 0, pretend = 0, frame = 152
 20702              		@ frame_needed = 1, uses_anonymous_args = 0
 20703 0000 90B5     		push	{r4, r7, lr}
 20704              		.cfi_def_cfa_offset 12
 20705              		.cfi_offset 4, -12
 20706              		.cfi_offset 7, -8
 20707              		.cfi_offset 14, -4
 20708 0002 A7B0     		sub	sp, sp, #156
 20709              		.cfi_def_cfa_offset 168
 20710 0004 00AF     		add	r7, sp, #0
 20711              		.cfi_def_cfa_register 7
 20712 0006 7860     		str	r0, [r7, #4]
2781:..\src/command_processing.c ****     char str[140];  
2782:..\src/command_processing.c ****     int i;
2783:..\src/command_processing.c ****         
2784:..\src/command_processing.c ****     // Legend
2785:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 20713              		.loc 1 2785 0
 20714 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 455


 20715 000a 2F4A     		ldr	r2, .L783
 20716 000c 1C46     		mov	r4, r3
 20717 000e 1346     		mov	r3, r2
 20718 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 20719 0012 2060     		str	r0, [r4]	@ unaligned
 20720 0014 6160     		str	r1, [r4, #4]	@ unaligned
 20721 0016 A260     		str	r2, [r4, #8]	@ unaligned
 20722 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 20723 001a A381     		strh	r3, [r4, #12]	@ unaligned
2786:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20724              		.loc 1 2786 0
 20725 001c 0123     		movs	r3, #1
 20726 001e C7F89430 		str	r3, [r7, #148]
 20727 0022 12E0     		b	.L779
 20728              	.L780:
2787:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 20729              		.loc 1 2787 0 discriminator 3
 20730 0024 07F10803 		add	r3, r7, #8
 20731 0028 D7F89420 		ldr	r2, [r7, #148]
 20732 002c 2749     		ldr	r1, .L783+4
 20733 002e 1846     		mov	r0, r3
 20734 0030 FFF7FEFF 		bl	sprintf
2788:..\src/command_processing.c ****         strcat(info_string, str);
 20735              		.loc 1 2788 0 discriminator 3
 20736 0034 07F10803 		add	r3, r7, #8
 20737 0038 1946     		mov	r1, r3
 20738 003a 7868     		ldr	r0, [r7, #4]
 20739 003c FFF7FEFF 		bl	strcat
2786:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20740              		.loc 1 2786 0 discriminator 3
 20741 0040 D7F89430 		ldr	r3, [r7, #148]
 20742 0044 0133     		adds	r3, r3, #1
 20743 0046 C7F89430 		str	r3, [r7, #148]
 20744              	.L779:
2786:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20745              		.loc 1 2786 0 is_stmt 0 discriminator 1
 20746 004a D7F89430 		ldr	r3, [r7, #148]
 20747 004e 0A2B     		cmp	r3, #10
 20748 0050 E8DD     		ble	.L780
2789:..\src/command_processing.c ****     }
2790:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 20749              		.loc 1 2790 0 is_stmt 1
 20750 0052 0123     		movs	r3, #1
 20751 0054 C7F89430 		str	r3, [r7, #148]
 20752 0058 12E0     		b	.L781
 20753              	.L782:
2791:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20754              		.loc 1 2791 0 discriminator 3
 20755 005a 07F10803 		add	r3, r7, #8
 20756 005e D7F89420 		ldr	r2, [r7, #148]
 20757 0062 1B49     		ldr	r1, .L783+8
 20758 0064 1846     		mov	r0, r3
 20759 0066 FFF7FEFF 		bl	sprintf
2792:..\src/command_processing.c ****         strcat(info_string, str);
 20760              		.loc 1 2792 0 discriminator 3
 20761 006a 07F10803 		add	r3, r7, #8
 20762 006e 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 456


 20763 0070 7868     		ldr	r0, [r7, #4]
 20764 0072 FFF7FEFF 		bl	strcat
2790:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20765              		.loc 1 2790 0 discriminator 3
 20766 0076 D7F89430 		ldr	r3, [r7, #148]
 20767 007a 0133     		adds	r3, r3, #1
 20768 007c C7F89430 		str	r3, [r7, #148]
 20769              	.L781:
2790:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20770              		.loc 1 2790 0 is_stmt 0 discriminator 1
 20771 0080 D7F89430 		ldr	r3, [r7, #148]
 20772 0084 042B     		cmp	r3, #4
 20773 0086 E8DD     		ble	.L782
2793:..\src/command_processing.c ****     }
2794:..\src/command_processing.c ****     sprintf(str, "Rest_times,Wire_disp,Total_rest_time,Power_cycles,EMG_1_act,EMG_2_act,EMG_1_exces
 20774              		.loc 1 2794 0 is_stmt 1
 20775 0088 07F10803 		add	r3, r7, #8
 20776 008c 114A     		ldr	r2, .L783+12
 20777 008e 1846     		mov	r0, r3
 20778 0090 1146     		mov	r1, r2
 20779 0092 8023     		movs	r3, #128
 20780 0094 1A46     		mov	r2, r3
 20781 0096 FFF7FEFF 		bl	memcpy
2795:..\src/command_processing.c ****     strcat(info_string, str);
 20782              		.loc 1 2795 0
 20783 009a 07F10803 		add	r3, r7, #8
 20784 009e 1946     		mov	r1, r3
 20785 00a0 7868     		ldr	r0, [r7, #4]
 20786 00a2 FFF7FEFF 		bl	strcat
2796:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20787              		.loc 1 2796 0
 20788 00a6 7868     		ldr	r0, [r7, #4]
 20789 00a8 FFF7FEFF 		bl	strlen
 20790 00ac 0346     		mov	r3, r0
 20791 00ae 1A46     		mov	r2, r3
 20792 00b0 7B68     		ldr	r3, [r7, #4]
 20793 00b2 1344     		add	r3, r3, r2
 20794 00b4 084A     		ldr	r2, .L783+16
 20795 00b6 1188     		ldrh	r1, [r2]	@ unaligned
 20796 00b8 9278     		ldrb	r2, [r2, #2]
 20797 00ba 1980     		strh	r1, [r3]	@ unaligned
 20798 00bc 9A70     		strb	r2, [r3, #2]
2797:..\src/command_processing.c **** }
 20799              		.loc 1 2797 0
 20800 00be 00BF     		nop
 20801 00c0 9C37     		adds	r7, r7, #156
 20802              		.cfi_def_cfa_offset 12
 20803 00c2 BD46     		mov	sp, r7
 20804              		.cfi_def_cfa_register 13
 20805              		@ sp needed
 20806 00c4 90BD     		pop	{r4, r7, pc}
 20807              	.L784:
 20808 00c6 00BF     		.align	2
 20809              	.L783:
 20810 00c8 E41D0000 		.word	.LC281
 20811 00cc F41D0000 		.word	.LC282
 20812 00d0 001E0000 		.word	.LC283
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 457


 20813 00d4 101E0000 		.word	.LC284
 20814 00d8 50110000 		.word	.LC152
 20815              		.cfi_endproc
 20816              	.LFE76:
 20817              		.size	prepare_SD_legend, .-prepare_SD_legend
 20818              		.section	.rodata
 20819              		.align	2
 20820              	.LC285:
 20821 1e90 25303264 		.ascii	"%02d,%02d,%02d,\000"
 20821      2C253032 
 20821      642C2530 
 20821      32642C00 
 20822              		.align	2
 20823              	.LC286:
 20824 1ea0 256C752C 		.ascii	"%lu,\000"
 20824      00
 20825 1ea5 000000   		.align	2
 20826              	.LC287:
 20827 1ea8 256C752C 		.ascii	"%lu,%lu,%lu,%lu,\000"
 20827      256C752C 
 20827      256C752C 
 20827      256C752C 
 20827      00
 20828 1eb9 000000   		.align	2
 20829              	.LC288:
 20830 1ebc 256C752C 		.ascii	"%lu,%lu,%lu,%lu,%lu,%lu,\000"
 20830      256C752C 
 20830      256C752C 
 20830      256C752C 
 20830      256C752C 
 20831 1ed5 000000   		.align	2
 20832              	.LC289:
 20833 1ed8 256C7500 		.ascii	"%lu\000"
 20834              		.section	.text.prepare_SD_info,"ax",%progbits
 20835              		.align	2
 20836              		.global	prepare_SD_info
 20837              		.thumb
 20838              		.thumb_func
 20839              		.type	prepare_SD_info, %function
 20840              	prepare_SD_info:
 20841              	.LFB77:
2798:..\src/command_processing.c **** 
2799:..\src/command_processing.c **** 
2800:..\src/command_processing.c **** //==============================================================================
2801:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2802:..\src/command_processing.c **** //==============================================================================
2803:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2804:..\src/command_processing.c **** {
 20842              		.loc 1 2804 0
 20843              		.cfi_startproc
 20844              		@ args = 0, pretend = 0, frame = 136
 20845              		@ frame_needed = 1, uses_anonymous_args = 0
 20846 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 20847              		.cfi_def_cfa_offset 20
 20848              		.cfi_offset 4, -20
 20849              		.cfi_offset 5, -16
 20850              		.cfi_offset 6, -12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 458


 20851              		.cfi_offset 7, -8
 20852              		.cfi_offset 14, -4
 20853 0002 A7B0     		sub	sp, sp, #156
 20854              		.cfi_def_cfa_offset 176
 20855 0004 04AF     		add	r7, sp, #16
 20856              		.cfi_def_cfa 7, 160
 20857 0006 7860     		str	r0, [r7, #4]
2805:..\src/command_processing.c ****     char str[120];  
2806:..\src/command_processing.c ****     int i;
2807:..\src/command_processing.c ****             
2808:..\src/command_processing.c ****     strcpy(info_string, "");
 20858              		.loc 1 2808 0
 20859 0008 7B68     		ldr	r3, [r7, #4]
 20860 000a 0022     		movs	r2, #0
 20861 000c 1A70     		strb	r2, [r3]
2809:..\src/command_processing.c ****     
2810:..\src/command_processing.c ****     // Time
2811:..\src/command_processing.c ****     strcat(info_string, "");
2812:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 20862              		.loc 1 2812 0
 20863 000e 554B     		ldr	r3, .L790
 20864 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 20865 0014 1A46     		mov	r2, r3
 20866 0016 534B     		ldr	r3, .L790
 20867 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 20868 001c 1946     		mov	r1, r3
 20869 001e 514B     		ldr	r3, .L790
 20870 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 20871 0024 07F10C00 		add	r0, r7, #12
 20872 0028 0093     		str	r3, [sp]
 20873 002a 0B46     		mov	r3, r1
 20874 002c 4E49     		ldr	r1, .L790+4
 20875 002e FFF7FEFF 		bl	sprintf
2813:..\src/command_processing.c ****     strcat(info_string, str);
 20876              		.loc 1 2813 0
 20877 0032 07F10C03 		add	r3, r7, #12
 20878 0036 1946     		mov	r1, r3
 20879 0038 7868     		ldr	r0, [r7, #4]
 20880 003a FFF7FEFF 		bl	strcat
2814:..\src/command_processing.c **** 
2815:..\src/command_processing.c ****     // Pos_Bin
2816:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 20881              		.loc 1 2816 0
 20882 003e 0123     		movs	r3, #1
 20883 0040 C7F88430 		str	r3, [r7, #132]
 20884 0044 17E0     		b	.L786
 20885              	.L787:
2817:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20886              		.loc 1 2817 0 discriminator 3
 20887 0046 D7F88430 		ldr	r3, [r7, #132]
 20888 004a 013B     		subs	r3, r3, #1
 20889 004c 454A     		ldr	r2, .L790
 20890 004e 0633     		adds	r3, r3, #6
 20891 0050 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20892 0054 07F10C03 		add	r3, r7, #12
 20893 0058 4449     		ldr	r1, .L790+8
 20894 005a 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 459


 20895 005c FFF7FEFF 		bl	sprintf
2818:..\src/command_processing.c ****         strcat(info_string, str);
 20896              		.loc 1 2818 0 discriminator 3
 20897 0060 07F10C03 		add	r3, r7, #12
 20898 0064 1946     		mov	r1, r3
 20899 0066 7868     		ldr	r0, [r7, #4]
 20900 0068 FFF7FEFF 		bl	strcat
2816:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20901              		.loc 1 2816 0 discriminator 3
 20902 006c D7F88430 		ldr	r3, [r7, #132]
 20903 0070 0133     		adds	r3, r3, #1
 20904 0072 C7F88430 		str	r3, [r7, #132]
 20905              	.L786:
2816:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20906              		.loc 1 2816 0 is_stmt 0 discriminator 1
 20907 0076 D7F88430 		ldr	r3, [r7, #132]
 20908 007a 0A2B     		cmp	r3, #10
 20909 007c E3DD     		ble	.L787
2819:..\src/command_processing.c ****     }
2820:..\src/command_processing.c ****     
2821:..\src/command_processing.c ****     // Curr_Bin
2822:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 20910              		.loc 1 2822 0 is_stmt 1
 20911 007e 0123     		movs	r3, #1
 20912 0080 C7F88430 		str	r3, [r7, #132]
 20913 0084 17E0     		b	.L788
 20914              	.L789:
2823:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20915              		.loc 1 2823 0 discriminator 3
 20916 0086 D7F88430 		ldr	r3, [r7, #132]
 20917 008a 013B     		subs	r3, r3, #1
 20918 008c 354A     		ldr	r2, .L790
 20919 008e 1033     		adds	r3, r3, #16
 20920 0090 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20921 0094 07F10C03 		add	r3, r7, #12
 20922 0098 3449     		ldr	r1, .L790+8
 20923 009a 1846     		mov	r0, r3
 20924 009c FFF7FEFF 		bl	sprintf
2824:..\src/command_processing.c ****         strcat(info_string, str);
 20925              		.loc 1 2824 0 discriminator 3
 20926 00a0 07F10C03 		add	r3, r7, #12
 20927 00a4 1946     		mov	r1, r3
 20928 00a6 7868     		ldr	r0, [r7, #4]
 20929 00a8 FFF7FEFF 		bl	strcat
2822:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20930              		.loc 1 2822 0 discriminator 3
 20931 00ac D7F88430 		ldr	r3, [r7, #132]
 20932 00b0 0133     		adds	r3, r3, #1
 20933 00b2 C7F88430 		str	r3, [r7, #132]
 20934              	.L788:
2822:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20935              		.loc 1 2822 0 is_stmt 0 discriminator 1
 20936 00b6 D7F88430 		ldr	r3, [r7, #132]
 20937 00ba 042B     		cmp	r3, #4
 20938 00bc E3DD     		ble	.L789
2825:..\src/command_processing.c ****     }
2826:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 460


2827:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_time_rest, Power_cycles
2828:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_t
 20939              		.loc 1 2828 0 is_stmt 1
 20940 00be 294B     		ldr	r3, .L790
 20941 00c0 196D     		ldr	r1, [r3, #80]
 20942 00c2 284B     		ldr	r3, .L790
 20943 00c4 5C6D     		ldr	r4, [r3, #84]
 20944 00c6 274B     		ldr	r3, .L790
 20945 00c8 DB6D     		ldr	r3, [r3, #92]
 20946 00ca 264A     		ldr	r2, .L790
 20947 00cc 126E     		ldr	r2, [r2, #96]
 20948 00ce 07F10C00 		add	r0, r7, #12
 20949 00d2 0192     		str	r2, [sp, #4]
 20950 00d4 0093     		str	r3, [sp]
 20951 00d6 2346     		mov	r3, r4
 20952 00d8 0A46     		mov	r2, r1
 20953 00da 2549     		ldr	r1, .L790+12
 20954 00dc FFF7FEFF 		bl	sprintf
2829:..\src/command_processing.c ****     strcat(info_string, str);
 20955              		.loc 1 2829 0
 20956 00e0 07F10C03 		add	r3, r7, #12
 20957 00e4 1946     		mov	r1, r3
 20958 00e6 7868     		ldr	r0, [r7, #4]
 20959 00e8 FFF7FEFF 		bl	strcat
2830:..\src/command_processing.c ****     
2831:..\src/command_processing.c ****     // EMG_1_act, EMG_2_act, EMG_1_excess, EMG_2_excess, Motion_1, Motion_2
2832:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,%lu,%lu,", g_mem.cnt.emg_act_counter[0], g_mem.cnt.emg_act_counte
 20960              		.loc 1 2832 0
 20961 00ec 1D4B     		ldr	r3, .L790
 20962 00ee 1D69     		ldr	r5, [r3, #16]
 20963 00f0 1C4B     		ldr	r3, .L790
 20964 00f2 5E69     		ldr	r6, [r3, #20]
 20965 00f4 1B4B     		ldr	r3, .L790
 20966 00f6 5B6E     		ldr	r3, [r3, #100]
 20967 00f8 1A4A     		ldr	r2, .L790
 20968 00fa 926E     		ldr	r2, [r2, #104]
 20969 00fc 1949     		ldr	r1, .L790
 20970 00fe C96E     		ldr	r1, [r1, #108]
 20971 0100 1848     		ldr	r0, .L790
 20972 0102 006F     		ldr	r0, [r0, #112]
 20973 0104 07F10C04 		add	r4, r7, #12
 20974 0108 0390     		str	r0, [sp, #12]
 20975 010a 0291     		str	r1, [sp, #8]
 20976 010c 0192     		str	r2, [sp, #4]
 20977 010e 0093     		str	r3, [sp]
 20978 0110 3346     		mov	r3, r6
 20979 0112 2A46     		mov	r2, r5
 20980 0114 1749     		ldr	r1, .L790+16
 20981 0116 2046     		mov	r0, r4
 20982 0118 FFF7FEFF 		bl	sprintf
2833:..\src/command_processing.c ****                                     g_mem.cnt.excessive_signal_activity[0], g_mem.cnt.excessive_sig
2834:..\src/command_processing.c ****                                     g_mem.cnt.motion_counter[0], g_mem.cnt.motion_counter[1]);
2835:..\src/command_processing.c ****     strcat(info_string, str);
 20983              		.loc 1 2835 0
 20984 011c 07F10C03 		add	r3, r7, #12
 20985 0120 1946     		mov	r1, r3
 20986 0122 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 461


 20987 0124 FFF7FEFF 		bl	strcat
2836:..\src/command_processing.c ****     
2837:..\src/command_processing.c ****     // Total_runtime
2838:..\src/command_processing.c ****     sprintf(str, "%lu", g_mem.cnt.total_runtime);
 20988              		.loc 1 2838 0
 20989 0128 0E4B     		ldr	r3, .L790
 20990 012a 9A6D     		ldr	r2, [r3, #88]
 20991 012c 07F10C03 		add	r3, r7, #12
 20992 0130 1149     		ldr	r1, .L790+20
 20993 0132 1846     		mov	r0, r3
 20994 0134 FFF7FEFF 		bl	sprintf
2839:..\src/command_processing.c ****     strcat(info_string, str);
 20995              		.loc 1 2839 0
 20996 0138 07F10C03 		add	r3, r7, #12
 20997 013c 1946     		mov	r1, r3
 20998 013e 7868     		ldr	r0, [r7, #4]
 20999 0140 FFF7FEFF 		bl	strcat
2840:..\src/command_processing.c ****     
2841:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21000              		.loc 1 2841 0
 21001 0144 7868     		ldr	r0, [r7, #4]
 21002 0146 FFF7FEFF 		bl	strlen
 21003 014a 0346     		mov	r3, r0
 21004 014c 1A46     		mov	r2, r3
 21005 014e 7B68     		ldr	r3, [r7, #4]
 21006 0150 1344     		add	r3, r3, r2
 21007 0152 0A4A     		ldr	r2, .L790+24
 21008 0154 1188     		ldrh	r1, [r2]	@ unaligned
 21009 0156 9278     		ldrb	r2, [r2, #2]
 21010 0158 1980     		strh	r1, [r3]	@ unaligned
 21011 015a 9A70     		strb	r2, [r3, #2]
2842:..\src/command_processing.c **** }
 21012              		.loc 1 2842 0
 21013 015c 00BF     		nop
 21014 015e 8C37     		adds	r7, r7, #140
 21015              		.cfi_def_cfa_offset 20
 21016 0160 BD46     		mov	sp, r7
 21017              		.cfi_def_cfa_register 13
 21018              		@ sp needed
 21019 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 21020              	.L791:
 21021              		.align	2
 21022              	.L790:
 21023 0164 00000000 		.word	g_mem
 21024 0168 901E0000 		.word	.LC285
 21025 016c A01E0000 		.word	.LC286
 21026 0170 A81E0000 		.word	.LC287
 21027 0174 BC1E0000 		.word	.LC288
 21028 0178 D81E0000 		.word	.LC289
 21029 017c 50110000 		.word	.LC152
 21030              		.cfi_endproc
 21031              	.LFE77:
 21032              		.size	prepare_SD_info, .-prepare_SD_info
 21033              		.section	.rodata
 21034              		.align	2
 21035              	.LC290:
 21036 1edc 54696D65 		.ascii	"Time,EMG1,EMG2\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 462


 21036      2C454D47 
 21036      312C454D 
 21036      47320A00 
 21037              		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 21038              		.align	2
 21039              		.global	prepare_SD_EMG_History_legend
 21040              		.thumb
 21041              		.thumb_func
 21042              		.type	prepare_SD_EMG_History_legend, %function
 21043              	prepare_SD_EMG_History_legend:
 21044              	.LFB78:
2843:..\src/command_processing.c **** 
2844:..\src/command_processing.c **** //==============================================================================
2845:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
2846:..\src/command_processing.c **** //==============================================================================
2847:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
2848:..\src/command_processing.c **** {
 21045              		.loc 1 2848 0
 21046              		.cfi_startproc
 21047              		@ args = 0, pretend = 0, frame = 8
 21048              		@ frame_needed = 1, uses_anonymous_args = 0
 21049              		@ link register save eliminated.
 21050 0000 B0B4     		push	{r4, r5, r7}
 21051              		.cfi_def_cfa_offset 12
 21052              		.cfi_offset 4, -12
 21053              		.cfi_offset 5, -8
 21054              		.cfi_offset 7, -4
 21055 0002 83B0     		sub	sp, sp, #12
 21056              		.cfi_def_cfa_offset 24
 21057 0004 00AF     		add	r7, sp, #0
 21058              		.cfi_def_cfa_register 7
 21059 0006 7860     		str	r0, [r7, #4]
2849:..\src/command_processing.c ****         
2850:..\src/command_processing.c ****     // Legend
2851:..\src/command_processing.c ****     strcpy(info_string, "Time,EMG1,EMG2\n");
 21060              		.loc 1 2851 0
 21061 0008 7B68     		ldr	r3, [r7, #4]
 21062 000a 064A     		ldr	r2, .L793
 21063 000c 1C46     		mov	r4, r3
 21064 000e 1546     		mov	r5, r2
 21065 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 21066 0012 2060     		str	r0, [r4]	@ unaligned
 21067 0014 6160     		str	r1, [r4, #4]	@ unaligned
 21068 0016 A260     		str	r2, [r4, #8]	@ unaligned
 21069 0018 E360     		str	r3, [r4, #12]	@ unaligned
2852:..\src/command_processing.c ****     
2853:..\src/command_processing.c **** }
 21070              		.loc 1 2853 0
 21071 001a 00BF     		nop
 21072 001c 0C37     		adds	r7, r7, #12
 21073              		.cfi_def_cfa_offset 12
 21074 001e BD46     		mov	sp, r7
 21075              		.cfi_def_cfa_register 13
 21076              		@ sp needed
 21077 0020 B0BC     		pop	{r4, r5, r7}
 21078              		.cfi_restore 7
 21079              		.cfi_restore 5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 463


 21080              		.cfi_restore 4
 21081              		.cfi_def_cfa_offset 0
 21082 0022 7047     		bx	lr
 21083              	.L794:
 21084              		.align	2
 21085              	.L793:
 21086 0024 DC1E0000 		.word	.LC290
 21087              		.cfi_endproc
 21088              	.LFE78:
 21089              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 21090              		.section	.rodata
 21091              		.align	2
 21092              	.LC291:
 21093 1eec 252E3166 		.ascii	"%.1f,%u,%u\012\000"
 21093      2C25752C 
 21093      25750A00 
 21094              		.global	__aeabi_dadd
 21095              		.global	__aeabi_d2f
 21096              		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 21097              		.align	2
 21098              		.global	prepare_SD_EMG_history
 21099              		.thumb
 21100              		.thumb_func
 21101              		.type	prepare_SD_EMG_history, %function
 21102              	prepare_SD_EMG_history:
 21103              	.LFB79:
2854:..\src/command_processing.c **** 
2855:..\src/command_processing.c **** //==============================================================================
2856:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
2857:..\src/command_processing.c **** //==============================================================================
2858:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
2859:..\src/command_processing.c **** {
 21104              		.loc 1 2859 0
 21105              		.cfi_startproc
 21106              		@ args = 0, pretend = 0, frame = 120
 21107              		@ frame_needed = 1, uses_anonymous_args = 0
 21108 0000 B0B5     		push	{r4, r5, r7, lr}
 21109              		.cfi_def_cfa_offset 16
 21110              		.cfi_offset 4, -16
 21111              		.cfi_offset 5, -12
 21112              		.cfi_offset 7, -8
 21113              		.cfi_offset 14, -4
 21114 0002 A0B0     		sub	sp, sp, #128
 21115              		.cfi_def_cfa_offset 144
 21116 0004 02AF     		add	r7, sp, #8
 21117              		.cfi_def_cfa 7, 136
 21118 0006 7860     		str	r0, [r7, #4]
2860:..\src/command_processing.c ****     char str_data[100] = "";
 21119              		.loc 1 2860 0
 21120 0008 0023     		movs	r3, #0
 21121 000a FB60     		str	r3, [r7, #12]
 21122 000c 07F11003 		add	r3, r7, #16
 21123 0010 6022     		movs	r2, #96
 21124 0012 0021     		movs	r1, #0
 21125 0014 1846     		mov	r0, r3
 21126 0016 FFF7FEFF 		bl	memset
2861:..\src/command_processing.c ****     uint16 v_idx = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 464


 21127              		.loc 1 2861 0
 21128 001a 0023     		movs	r3, #0
 21129 001c A7F87630 		strh	r3, [r7, #118]	@ movhi
2862:..\src/command_processing.c ****     static float h_time = 0.0;
2863:..\src/command_processing.c ****                 
2864:..\src/command_processing.c ****     strcpy(info_string, "");
 21130              		.loc 1 2864 0
 21131 0020 7B68     		ldr	r3, [r7, #4]
 21132 0022 0022     		movs	r2, #0
 21133 0024 1A70     		strb	r2, [r3]
 21134              	.LBB29:
2865:..\src/command_processing.c ****     
2866:..\src/command_processing.c ****     // Oldest samples of the vector
2867:..\src/command_processing.c ****     for (int i = 0; i < SAMPLES_FOR_EMG_HISTORY; i++){
 21135              		.loc 1 2867 0
 21136 0026 0023     		movs	r3, #0
 21137 0028 3B67     		str	r3, [r7, #112]
 21138 002a 4AE0     		b	.L796
 21139              	.L798:
2868:..\src/command_processing.c ****               
2869:..\src/command_processing.c ****         // Send line per line all the history vector
2870:..\src/command_processing.c ****         // First line (oldest) is made by values of emg_history_next_idx index (they will be the ne
2871:..\src/command_processing.c ****         v_idx = emg_history_next_idx + i;
 21140              		.loc 1 2871 0
 21141 002c 2C4B     		ldr	r3, .L799+8
 21142 002e 1B68     		ldr	r3, [r3]
 21143 0030 9AB2     		uxth	r2, r3
 21144 0032 3B6F     		ldr	r3, [r7, #112]
 21145 0034 9BB2     		uxth	r3, r3
 21146 0036 1344     		add	r3, r3, r2
 21147 0038 A7F87630 		strh	r3, [r7, #118]	@ movhi
2872:..\src/command_processing.c ****         if (v_idx > SAMPLES_FOR_EMG_HISTORY){
 21148              		.loc 1 2872 0
 21149 003c B7F87630 		ldrh	r3, [r7, #118]
 21150 0040 B3F5167F 		cmp	r3, #600
 21151 0044 05D9     		bls	.L797
2873:..\src/command_processing.c ****             v_idx -= SAMPLES_FOR_EMG_HISTORY;
 21152              		.loc 1 2873 0
 21153 0046 B7F87630 		ldrh	r3, [r7, #118]	@ movhi
 21154 004a A3F51673 		sub	r3, r3, #600
 21155 004e A7F87630 		strh	r3, [r7, #118]	@ movhi
 21156              	.L797:
2874:..\src/command_processing.c ****         }
2875:..\src/command_processing.c ****         
2876:..\src/command_processing.c ****         // Time vector is reconstructed setting oldest samples as t=0.0s
2877:..\src/command_processing.c ****         sprintf(str_data, "%.1f,%u,%u\n", h_time, emg_history[v_idx][0], emg_history[v_idx][1]);
 21157              		.loc 1 2877 0 discriminator 2
 21158 0052 244B     		ldr	r3, .L799+12
 21159 0054 1B68     		ldr	r3, [r3]	@ float
 21160 0056 1846     		mov	r0, r3
 21161 0058 FFF7FEFF 		bl	__aeabi_f2d
 21162 005c 0446     		mov	r4, r0
 21163 005e 0D46     		mov	r5, r1
 21164 0060 B7F87630 		ldrh	r3, [r7, #118]
 21165 0064 204A     		ldr	r2, .L799+16
 21166 0066 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 21167 006a 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 465


 21168 006c B7F87630 		ldrh	r3, [r7, #118]
 21169 0070 1D4A     		ldr	r2, .L799+16
 21170 0072 9B00     		lsls	r3, r3, #2
 21171 0074 1344     		add	r3, r3, r2
 21172 0076 5B88     		ldrh	r3, [r3, #2]
 21173 0078 07F10C00 		add	r0, r7, #12
 21174 007c 0193     		str	r3, [sp, #4]
 21175 007e 0091     		str	r1, [sp]
 21176 0080 2246     		mov	r2, r4
 21177 0082 2B46     		mov	r3, r5
 21178 0084 1949     		ldr	r1, .L799+20
 21179 0086 FFF7FEFF 		bl	sprintf
2878:..\src/command_processing.c ****         
2879:..\src/command_processing.c ****         strcat(info_string, str_data);
 21180              		.loc 1 2879 0 discriminator 2
 21181 008a 07F10C03 		add	r3, r7, #12
 21182 008e 1946     		mov	r1, r3
 21183 0090 7868     		ldr	r0, [r7, #4]
 21184 0092 FFF7FEFF 		bl	strcat
2880:..\src/command_processing.c ****         
2881:..\src/command_processing.c ****         h_time += 0.2;      // Row time interval is 200ms (5Hz)
 21185              		.loc 1 2881 0 discriminator 2
 21186 0096 134B     		ldr	r3, .L799+12
 21187 0098 1B68     		ldr	r3, [r3]	@ float
 21188 009a 1846     		mov	r0, r3
 21189 009c FFF7FEFF 		bl	__aeabi_f2d
 21190 00a0 0DA3     		adr	r3, .L799
 21191 00a2 D3E90023 		ldrd	r2, [r3]
 21192 00a6 FFF7FEFF 		bl	__aeabi_dadd
 21193 00aa 0346     		mov	r3, r0
 21194 00ac 0C46     		mov	r4, r1
 21195 00ae 1846     		mov	r0, r3
 21196 00b0 2146     		mov	r1, r4
 21197 00b2 FFF7FEFF 		bl	__aeabi_d2f
 21198 00b6 0246     		mov	r2, r0
 21199 00b8 0A4B     		ldr	r3, .L799+12
 21200 00ba 1A60     		str	r2, [r3]	@ float
2867:..\src/command_processing.c ****               
 21201              		.loc 1 2867 0 discriminator 2
 21202 00bc 3B6F     		ldr	r3, [r7, #112]
 21203 00be 0133     		adds	r3, r3, #1
 21204 00c0 3B67     		str	r3, [r7, #112]
 21205              	.L796:
2867:..\src/command_processing.c ****               
 21206              		.loc 1 2867 0 is_stmt 0 discriminator 1
 21207 00c2 3B6F     		ldr	r3, [r7, #112]
 21208 00c4 B3F5167F 		cmp	r3, #600
 21209 00c8 B0DB     		blt	.L798
 21210              	.LBE29:
2882:..\src/command_processing.c **** 
2883:..\src/command_processing.c ****     }
2884:..\src/command_processing.c ****     
2885:..\src/command_processing.c **** }
 21211              		.loc 1 2885 0 is_stmt 1
 21212 00ca 00BF     		nop
 21213 00cc 7837     		adds	r7, r7, #120
 21214              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 466


 21215 00ce BD46     		mov	sp, r7
 21216              		.cfi_def_cfa_register 13
 21217              		@ sp needed
 21218 00d0 B0BD     		pop	{r4, r5, r7, pc}
 21219              	.L800:
 21220 00d2 00BFAFF3 		.align	3
 21220      0080
 21221              	.L799:
 21222 00d8 9A999999 		.word	-1717986918
 21223 00dc 9999C93F 		.word	1070176665
 21224 00e0 00000000 		.word	emg_history_next_idx
 21225 00e4 00000000 		.word	h_time.10994
 21226 00e8 00000000 		.word	emg_history
 21227 00ec EC1E0000 		.word	.LC291
 21228              		.cfi_endproc
 21229              	.LFE79:
 21230              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 21231              		.section	.rodata
 21232              		.align	2
 21233              	.LC292:
 21234 1ef8 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 21234      4F525320 
 21234      494E464F 
 21234      0D0A00
 21235 1f07 00       		.align	2
 21236              	.LC293:
 21237 1f08 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 21237      3A202564 
 21237      09256409 
 21237      25640D0A 
 21237      00
 21238 1f19 000000   		.align	2
 21239              	.LC294:
 21240 1f1c 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 21240      6F3A2025 
 21240      64092564 
 21240      0925640D 
 21240      0A00
 21241 1f2e 0000     		.align	2
 21242              	.LC295:
 21243 1f30 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 21243      3A202564 
 21243      09256409 
 21243      25640D0A 
 21243      00
 21244 1f41 000000   		.align	2
 21245              	.LC296:
 21246 1f44 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 21246      743A2025 
 21246      2E336609 
 21246      252E3366 
 21246      09252E33 
 21247 1f61 000000   		.align	2
 21248              	.LC297:
 21249 1f64 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 21249      70657261 
 21249      74757265 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 467


 21249      3A202564 
 21249      0D0A00
 21250              		.section	.text.IMU_reading_info,"ax",%progbits
 21251              		.align	2
 21252              		.global	IMU_reading_info
 21253              		.thumb
 21254              		.thumb_func
 21255              		.type	IMU_reading_info, %function
 21256              	IMU_reading_info:
 21257              	.LFB80:
2886:..\src/command_processing.c **** 
2887:..\src/command_processing.c **** //==============================================================================
2888:..\src/command_processing.c **** //                                                              IMU READING INFO
2889:..\src/command_processing.c **** //==============================================================================
2890:..\src/command_processing.c **** 
2891:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2892:..\src/command_processing.c **** {
 21258              		.loc 1 2892 0
 21259              		.cfi_startproc
 21260              		@ args = 0, pretend = 0, frame = 312
 21261              		@ frame_needed = 1, uses_anonymous_args = 0
 21262 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 21263              		.cfi_def_cfa_offset 32
 21264              		.cfi_offset 4, -32
 21265              		.cfi_offset 5, -28
 21266              		.cfi_offset 7, -24
 21267              		.cfi_offset 8, -20
 21268              		.cfi_offset 9, -16
 21269              		.cfi_offset 10, -12
 21270              		.cfi_offset 11, -8
 21271              		.cfi_offset 14, -4
 21272 0004 D4B0     		sub	sp, sp, #336
 21273              		.cfi_def_cfa_offset 368
 21274 0006 06AF     		add	r7, sp, #24
 21275              		.cfi_def_cfa 7, 344
 21276 0008 3B1D     		adds	r3, r7, #4
 21277 000a 1860     		str	r0, [r3]
2893:..\src/command_processing.c ****     char str[300];  
2894:..\src/command_processing.c ****     int i;
2895:..\src/command_processing.c ****                  
2896:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 21278              		.loc 1 2896 0
 21279 000c 3B1D     		adds	r3, r7, #4
 21280 000e 1868     		ldr	r0, [r3]
 21281 0010 FFF7FEFF 		bl	strlen
 21282 0014 0346     		mov	r3, r0
 21283 0016 1A46     		mov	r2, r3
 21284 0018 3B1D     		adds	r3, r7, #4
 21285 001a 1B68     		ldr	r3, [r3]
 21286 001c 1344     		add	r3, r3, r2
 21287 001e C94A     		ldr	r2, .L809
 21288 0020 1C46     		mov	r4, r3
 21289 0022 1346     		mov	r3, r2
 21290 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 21291 0026 2060     		str	r0, [r4]	@ unaligned
 21292 0028 6160     		str	r1, [r4, #4]	@ unaligned
 21293 002a A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 468


 21294 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 21295 002e 9B78     		ldrb	r3, [r3, #2]
 21296 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 21297 0032 A373     		strb	r3, [r4, #14]
2897:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 21298              		.loc 1 2897 0
 21299 0034 0023     		movs	r3, #0
 21300 0036 C7F83431 		str	r3, [r7, #308]
 21301 003a 66E1     		b	.L802
 21302              	.L808:
2898:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21303              		.loc 1 2898 0
 21304 003c C24A     		ldr	r2, .L809+4
 21305 003e D7F83431 		ldr	r3, [r7, #308]
 21306 0042 1344     		add	r3, r3, r2
 21307 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21308 0046 07F10800 		add	r0, r7, #8
 21309 004a D7F83421 		ldr	r2, [r7, #308]
 21310 004e BF49     		ldr	r1, .L809+8
 21311 0050 FFF7FEFF 		bl	sprintf
2899:..\src/command_processing.c ****         strcat(info_string, str);
 21312              		.loc 1 2899 0
 21313 0054 07F10802 		add	r2, r7, #8
 21314 0058 3B1D     		adds	r3, r7, #4
 21315 005a 1146     		mov	r1, r2
 21316 005c 1868     		ldr	r0, [r3]
 21317 005e FFF7FEFF 		bl	strcat
2900:..\src/command_processing.c ****         
2901:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 21318              		.loc 1 2901 0
 21319 0062 B94A     		ldr	r2, .L809+4
 21320 0064 D7F83431 		ldr	r3, [r7, #308]
 21321 0068 1344     		add	r3, r3, r2
 21322 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21323 006c 1946     		mov	r1, r3
 21324 006e B84A     		ldr	r2, .L809+12
 21325 0070 0B46     		mov	r3, r1
 21326 0072 9B00     		lsls	r3, r3, #2
 21327 0074 0B44     		add	r3, r3, r1
 21328 0076 1344     		add	r3, r3, r2
 21329 0078 03F20223 		addw	r3, r3, #514
 21330 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21331 007e 002B     		cmp	r3, #0
 21332 0080 31D0     		beq	.L803
2902:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 21333              		.loc 1 2902 0
 21334 0082 B449     		ldr	r1, .L809+16
 21335 0084 D7F83421 		ldr	r2, [r7, #308]
 21336 0088 1346     		mov	r3, r2
 21337 008a 9B00     		lsls	r3, r3, #2
 21338 008c 1344     		add	r3, r3, r2
 21339 008e DB00     		lsls	r3, r3, #3
 21340 0090 0B44     		add	r3, r3, r1
 21341 0092 0233     		adds	r3, r3, #2
 21342 0094 B3F90030 		ldrsh	r3, [r3]
 21343 0098 1C46     		mov	r4, r3
 21344 009a AE49     		ldr	r1, .L809+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 469


 21345 009c D7F83421 		ldr	r2, [r7, #308]
 21346 00a0 1346     		mov	r3, r2
 21347 00a2 9B00     		lsls	r3, r3, #2
 21348 00a4 1344     		add	r3, r3, r2
 21349 00a6 DB00     		lsls	r3, r3, #3
 21350 00a8 0B44     		add	r3, r3, r1
 21351 00aa 0433     		adds	r3, r3, #4
 21352 00ac B3F90030 		ldrsh	r3, [r3]
 21353 00b0 1D46     		mov	r5, r3
 21354 00b2 A849     		ldr	r1, .L809+16
 21355 00b4 D7F83421 		ldr	r2, [r7, #308]
 21356 00b8 1346     		mov	r3, r2
 21357 00ba 9B00     		lsls	r3, r3, #2
 21358 00bc 1344     		add	r3, r3, r2
 21359 00be DB00     		lsls	r3, r3, #3
 21360 00c0 0B44     		add	r3, r3, r1
 21361 00c2 0633     		adds	r3, r3, #6
 21362 00c4 B3F90030 		ldrsh	r3, [r3]
 21363 00c8 07F10800 		add	r0, r7, #8
 21364 00cc 0093     		str	r3, [sp]
 21365 00ce 2B46     		mov	r3, r5
 21366 00d0 2246     		mov	r2, r4
 21367 00d2 A149     		ldr	r1, .L809+20
 21368 00d4 FFF7FEFF 		bl	sprintf
2903:..\src/command_processing.c ****             strcat(info_string, str);
 21369              		.loc 1 2903 0
 21370 00d8 07F10802 		add	r2, r7, #8
 21371 00dc 3B1D     		adds	r3, r7, #4
 21372 00de 1146     		mov	r1, r2
 21373 00e0 1868     		ldr	r0, [r3]
 21374 00e2 FFF7FEFF 		bl	strcat
 21375              	.L803:
2904:..\src/command_processing.c ****         }
2905:..\src/command_processing.c **** 
2906:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 21376              		.loc 1 2906 0
 21377 00e6 984A     		ldr	r2, .L809+4
 21378 00e8 D7F83431 		ldr	r3, [r7, #308]
 21379 00ec 1344     		add	r3, r3, r2
 21380 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21381 00f0 1946     		mov	r1, r3
 21382 00f2 974A     		ldr	r2, .L809+12
 21383 00f4 0B46     		mov	r3, r1
 21384 00f6 9B00     		lsls	r3, r3, #2
 21385 00f8 0B44     		add	r3, r3, r1
 21386 00fa 1344     		add	r3, r3, r2
 21387 00fc 03F20323 		addw	r3, r3, #515
 21388 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21389 0102 002B     		cmp	r3, #0
 21390 0104 31D0     		beq	.L804
2907:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 21391              		.loc 1 2907 0
 21392 0106 9349     		ldr	r1, .L809+16
 21393 0108 D7F83421 		ldr	r2, [r7, #308]
 21394 010c 1346     		mov	r3, r2
 21395 010e 9B00     		lsls	r3, r3, #2
 21396 0110 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 470


 21397 0112 DB00     		lsls	r3, r3, #3
 21398 0114 0B44     		add	r3, r3, r1
 21399 0116 0833     		adds	r3, r3, #8
 21400 0118 B3F90030 		ldrsh	r3, [r3]
 21401 011c 1C46     		mov	r4, r3
 21402 011e 8D49     		ldr	r1, .L809+16
 21403 0120 D7F83421 		ldr	r2, [r7, #308]
 21404 0124 1346     		mov	r3, r2
 21405 0126 9B00     		lsls	r3, r3, #2
 21406 0128 1344     		add	r3, r3, r2
 21407 012a DB00     		lsls	r3, r3, #3
 21408 012c 0B44     		add	r3, r3, r1
 21409 012e 0A33     		adds	r3, r3, #10
 21410 0130 B3F90030 		ldrsh	r3, [r3]
 21411 0134 1D46     		mov	r5, r3
 21412 0136 8749     		ldr	r1, .L809+16
 21413 0138 D7F83421 		ldr	r2, [r7, #308]
 21414 013c 1346     		mov	r3, r2
 21415 013e 9B00     		lsls	r3, r3, #2
 21416 0140 1344     		add	r3, r3, r2
 21417 0142 DB00     		lsls	r3, r3, #3
 21418 0144 0B44     		add	r3, r3, r1
 21419 0146 0C33     		adds	r3, r3, #12
 21420 0148 B3F90030 		ldrsh	r3, [r3]
 21421 014c 07F10800 		add	r0, r7, #8
 21422 0150 0093     		str	r3, [sp]
 21423 0152 2B46     		mov	r3, r5
 21424 0154 2246     		mov	r2, r4
 21425 0156 8149     		ldr	r1, .L809+24
 21426 0158 FFF7FEFF 		bl	sprintf
2908:..\src/command_processing.c ****             strcat(info_string, str);
 21427              		.loc 1 2908 0
 21428 015c 07F10802 		add	r2, r7, #8
 21429 0160 3B1D     		adds	r3, r7, #4
 21430 0162 1146     		mov	r1, r2
 21431 0164 1868     		ldr	r0, [r3]
 21432 0166 FFF7FEFF 		bl	strcat
 21433              	.L804:
2909:..\src/command_processing.c ****         }
2910:..\src/command_processing.c **** 
2911:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 21434              		.loc 1 2911 0
 21435 016a 774A     		ldr	r2, .L809+4
 21436 016c D7F83431 		ldr	r3, [r7, #308]
 21437 0170 1344     		add	r3, r3, r2
 21438 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21439 0174 1946     		mov	r1, r3
 21440 0176 764A     		ldr	r2, .L809+12
 21441 0178 0B46     		mov	r3, r1
 21442 017a 9B00     		lsls	r3, r3, #2
 21443 017c 0B44     		add	r3, r3, r1
 21444 017e 1344     		add	r3, r3, r2
 21445 0180 03F50173 		add	r3, r3, #516
 21446 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21447 0186 002B     		cmp	r3, #0
 21448 0188 31D0     		beq	.L805
2912:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 471


 21449              		.loc 1 2912 0
 21450 018a 7249     		ldr	r1, .L809+16
 21451 018c D7F83421 		ldr	r2, [r7, #308]
 21452 0190 1346     		mov	r3, r2
 21453 0192 9B00     		lsls	r3, r3, #2
 21454 0194 1344     		add	r3, r3, r2
 21455 0196 DB00     		lsls	r3, r3, #3
 21456 0198 0B44     		add	r3, r3, r1
 21457 019a 0E33     		adds	r3, r3, #14
 21458 019c B3F90030 		ldrsh	r3, [r3]
 21459 01a0 1C46     		mov	r4, r3
 21460 01a2 6C49     		ldr	r1, .L809+16
 21461 01a4 D7F83421 		ldr	r2, [r7, #308]
 21462 01a8 1346     		mov	r3, r2
 21463 01aa 9B00     		lsls	r3, r3, #2
 21464 01ac 1344     		add	r3, r3, r2
 21465 01ae DB00     		lsls	r3, r3, #3
 21466 01b0 0B44     		add	r3, r3, r1
 21467 01b2 1033     		adds	r3, r3, #16
 21468 01b4 B3F90030 		ldrsh	r3, [r3]
 21469 01b8 1D46     		mov	r5, r3
 21470 01ba 6649     		ldr	r1, .L809+16
 21471 01bc D7F83421 		ldr	r2, [r7, #308]
 21472 01c0 1346     		mov	r3, r2
 21473 01c2 9B00     		lsls	r3, r3, #2
 21474 01c4 1344     		add	r3, r3, r2
 21475 01c6 DB00     		lsls	r3, r3, #3
 21476 01c8 0B44     		add	r3, r3, r1
 21477 01ca 1233     		adds	r3, r3, #18
 21478 01cc B3F90030 		ldrsh	r3, [r3]
 21479 01d0 07F10800 		add	r0, r7, #8
 21480 01d4 0093     		str	r3, [sp]
 21481 01d6 2B46     		mov	r3, r5
 21482 01d8 2246     		mov	r2, r4
 21483 01da 6149     		ldr	r1, .L809+28
 21484 01dc FFF7FEFF 		bl	sprintf
2913:..\src/command_processing.c ****             strcat(info_string, str);
 21485              		.loc 1 2913 0
 21486 01e0 07F10802 		add	r2, r7, #8
 21487 01e4 3B1D     		adds	r3, r7, #4
 21488 01e6 1146     		mov	r1, r2
 21489 01e8 1868     		ldr	r0, [r3]
 21490 01ea FFF7FEFF 		bl	strcat
 21491              	.L805:
2914:..\src/command_processing.c ****         }
2915:..\src/command_processing.c ****         
2916:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 21492              		.loc 1 2916 0
 21493 01ee 564A     		ldr	r2, .L809+4
 21494 01f0 D7F83431 		ldr	r3, [r7, #308]
 21495 01f4 1344     		add	r3, r3, r2
 21496 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21497 01f8 1946     		mov	r1, r3
 21498 01fa 554A     		ldr	r2, .L809+12
 21499 01fc 0B46     		mov	r3, r1
 21500 01fe 9B00     		lsls	r3, r3, #2
 21501 0200 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 472


 21502 0202 1344     		add	r3, r3, r2
 21503 0204 03F20523 		addw	r3, r3, #517
 21504 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21505 020a 002B     		cmp	r3, #0
 21506 020c 4FD0     		beq	.L806
2917:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 21507              		.loc 1 2917 0
 21508 020e 5149     		ldr	r1, .L809+16
 21509 0210 D7F83421 		ldr	r2, [r7, #308]
 21510 0214 1346     		mov	r3, r2
 21511 0216 9B00     		lsls	r3, r3, #2
 21512 0218 1344     		add	r3, r3, r2
 21513 021a DB00     		lsls	r3, r3, #3
 21514 021c 0B44     		add	r3, r3, r1
 21515 021e 1433     		adds	r3, r3, #20
 21516 0220 1B68     		ldr	r3, [r3]	@ float
 21517 0222 1846     		mov	r0, r3
 21518 0224 FFF7FEFF 		bl	__aeabi_f2d
 21519 0228 8246     		mov	r10, r0
 21520 022a 8B46     		mov	fp, r1
 21521 022c 4949     		ldr	r1, .L809+16
 21522 022e D7F83421 		ldr	r2, [r7, #308]
 21523 0232 1346     		mov	r3, r2
 21524 0234 9B00     		lsls	r3, r3, #2
 21525 0236 1344     		add	r3, r3, r2
 21526 0238 DB00     		lsls	r3, r3, #3
 21527 023a 0B44     		add	r3, r3, r1
 21528 023c 1833     		adds	r3, r3, #24
 21529 023e 1B68     		ldr	r3, [r3]	@ float
 21530 0240 1846     		mov	r0, r3
 21531 0242 FFF7FEFF 		bl	__aeabi_f2d
 21532 0246 0446     		mov	r4, r0
 21533 0248 0D46     		mov	r5, r1
 21534 024a 4249     		ldr	r1, .L809+16
 21535 024c D7F83421 		ldr	r2, [r7, #308]
 21536 0250 1346     		mov	r3, r2
 21537 0252 9B00     		lsls	r3, r3, #2
 21538 0254 1344     		add	r3, r3, r2
 21539 0256 DB00     		lsls	r3, r3, #3
 21540 0258 0B44     		add	r3, r3, r1
 21541 025a 1C33     		adds	r3, r3, #28
 21542 025c 1B68     		ldr	r3, [r3]	@ float
 21543 025e 1846     		mov	r0, r3
 21544 0260 FFF7FEFF 		bl	__aeabi_f2d
 21545 0264 8046     		mov	r8, r0
 21546 0266 8946     		mov	r9, r1
 21547 0268 3A49     		ldr	r1, .L809+16
 21548 026a D7F83421 		ldr	r2, [r7, #308]
 21549 026e 1346     		mov	r3, r2
 21550 0270 9B00     		lsls	r3, r3, #2
 21551 0272 1344     		add	r3, r3, r2
 21552 0274 DB00     		lsls	r3, r3, #3
 21553 0276 0B44     		add	r3, r3, r1
 21554 0278 2033     		adds	r3, r3, #32
 21555 027a 1B68     		ldr	r3, [r3]	@ float
 21556 027c 1846     		mov	r0, r3
 21557 027e FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 473


 21558 0282 0246     		mov	r2, r0
 21559 0284 0B46     		mov	r3, r1
 21560 0286 07F10800 		add	r0, r7, #8
 21561 028a CDE90423 		strd	r2, [sp, #16]
 21562 028e CDE90289 		strd	r8, [sp, #8]
 21563 0292 CDE90045 		strd	r4, [sp]
 21564 0296 5246     		mov	r2, r10
 21565 0298 5B46     		mov	r3, fp
 21566 029a 3249     		ldr	r1, .L809+32
 21567 029c FFF7FEFF 		bl	sprintf
2918:..\src/command_processing.c ****             strcat(info_string, str);
 21568              		.loc 1 2918 0
 21569 02a0 07F10802 		add	r2, r7, #8
 21570 02a4 3B1D     		adds	r3, r7, #4
 21571 02a6 1146     		mov	r1, r2
 21572 02a8 1868     		ldr	r0, [r3]
 21573 02aa FFF7FEFF 		bl	strcat
 21574              	.L806:
2919:..\src/command_processing.c ****         }
2920:..\src/command_processing.c ****         
2921:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 21575              		.loc 1 2921 0
 21576 02ae 264A     		ldr	r2, .L809+4
 21577 02b0 D7F83431 		ldr	r3, [r7, #308]
 21578 02b4 1344     		add	r3, r3, r2
 21579 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21580 02b8 1946     		mov	r1, r3
 21581 02ba 254A     		ldr	r2, .L809+12
 21582 02bc 0B46     		mov	r3, r1
 21583 02be 9B00     		lsls	r3, r3, #2
 21584 02c0 0B44     		add	r3, r3, r1
 21585 02c2 1344     		add	r3, r3, r2
 21586 02c4 03F20623 		addw	r3, r3, #518
 21587 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21588 02ca 002B     		cmp	r3, #0
 21589 02cc 18D0     		beq	.L807
2922:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 21590              		.loc 1 2922 0
 21591 02ce 2149     		ldr	r1, .L809+16
 21592 02d0 D7F83421 		ldr	r2, [r7, #308]
 21593 02d4 1346     		mov	r3, r2
 21594 02d6 9B00     		lsls	r3, r3, #2
 21595 02d8 1344     		add	r3, r3, r2
 21596 02da DB00     		lsls	r3, r3, #3
 21597 02dc 0B44     		add	r3, r3, r1
 21598 02de 2433     		adds	r3, r3, #36
 21599 02e0 B3F90030 		ldrsh	r3, [r3]
 21600 02e4 1A46     		mov	r2, r3
 21601 02e6 07F10803 		add	r3, r7, #8
 21602 02ea 1F49     		ldr	r1, .L809+36
 21603 02ec 1846     		mov	r0, r3
 21604 02ee FFF7FEFF 		bl	sprintf
2923:..\src/command_processing.c ****             strcat(info_string, str);
 21605              		.loc 1 2923 0
 21606 02f2 07F10802 		add	r2, r7, #8
 21607 02f6 3B1D     		adds	r3, r7, #4
 21608 02f8 1146     		mov	r1, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 474


 21609 02fa 1868     		ldr	r0, [r3]
 21610 02fc FFF7FEFF 		bl	strcat
 21611              	.L807:
2897:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21612              		.loc 1 2897 0 discriminator 2
 21613 0300 D7F83431 		ldr	r3, [r7, #308]
 21614 0304 0133     		adds	r3, r3, #1
 21615 0306 C7F83431 		str	r3, [r7, #308]
 21616              	.L802:
2897:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21617              		.loc 1 2897 0 is_stmt 0 discriminator 1
 21618 030a 184B     		ldr	r3, .L809+40
 21619 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21620 030e 1A46     		mov	r2, r3
 21621 0310 D7F83431 		ldr	r3, [r7, #308]
 21622 0314 9A42     		cmp	r2, r3
 21623 0316 3FF791AE 		bgt	.L808
2924:..\src/command_processing.c ****         }
2925:..\src/command_processing.c ****         
2926:..\src/command_processing.c ****     }
2927:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21624              		.loc 1 2927 0 is_stmt 1
 21625 031a 3B1D     		adds	r3, r7, #4
 21626 031c 1868     		ldr	r0, [r3]
 21627 031e FFF7FEFF 		bl	strlen
 21628 0322 0346     		mov	r3, r0
 21629 0324 1A46     		mov	r2, r3
 21630 0326 3B1D     		adds	r3, r7, #4
 21631 0328 1B68     		ldr	r3, [r3]
 21632 032a 1344     		add	r3, r3, r2
 21633 032c 104A     		ldr	r2, .L809+44
 21634 032e 1188     		ldrh	r1, [r2]	@ unaligned
 21635 0330 9278     		ldrb	r2, [r2, #2]
 21636 0332 1980     		strh	r1, [r3]	@ unaligned
 21637 0334 9A70     		strb	r2, [r3, #2]
2928:..\src/command_processing.c **** }
 21638              		.loc 1 2928 0
 21639 0336 00BF     		nop
 21640 0338 07F59C77 		add	r7, r7, #312
 21641              		.cfi_def_cfa_offset 32
 21642 033c BD46     		mov	sp, r7
 21643              		.cfi_def_cfa_register 13
 21644              		@ sp needed
 21645 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 21646              	.L810:
 21647 0342 00BF     		.align	2
 21648              	.L809:
 21649 0344 F81E0000 		.word	.LC292
 21650 0348 00000000 		.word	IMU_connected
 21651 034c 2C190000 		.word	.LC240
 21652 0350 00000000 		.word	c_mem
 21653 0354 00000000 		.word	g_imu
 21654 0358 081F0000 		.word	.LC293
 21655 035c 1C1F0000 		.word	.LC294
 21656 0360 301F0000 		.word	.LC295
 21657 0364 441F0000 		.word	.LC296
 21658 0368 641F0000 		.word	.LC297
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 475


 21659 036c 00000000 		.word	N_IMU_Connected
 21660 0370 50110000 		.word	.LC152
 21661              		.cfi_endproc
 21662              	.LFE80:
 21663              		.size	IMU_reading_info, .-IMU_reading_info
 21664              		.section	.text.commWrite_old_id,"ax",%progbits
 21665              		.align	2
 21666              		.global	commWrite_old_id
 21667              		.thumb
 21668              		.thumb_func
 21669              		.type	commWrite_old_id, %function
 21670              	commWrite_old_id:
 21671              	.LFB81:
2929:..\src/command_processing.c **** 
2930:..\src/command_processing.c **** //==============================================================================
2931:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2932:..\src/command_processing.c **** //==============================================================================
2933:..\src/command_processing.c **** 
2934:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_length, uint8 old_id)
2935:..\src/command_processing.c **** {
 21672              		.loc 1 2935 0
 21673              		.cfi_startproc
 21674              		@ args = 0, pretend = 0, frame = 16
 21675              		@ frame_needed = 1, uses_anonymous_args = 0
 21676 0000 80B5     		push	{r7, lr}
 21677              		.cfi_def_cfa_offset 8
 21678              		.cfi_offset 7, -8
 21679              		.cfi_offset 14, -4
 21680 0002 84B0     		sub	sp, sp, #16
 21681              		.cfi_def_cfa_offset 24
 21682 0004 00AF     		add	r7, sp, #0
 21683              		.cfi_def_cfa_register 7
 21684 0006 7860     		str	r0, [r7, #4]
 21685 0008 0B46     		mov	r3, r1
 21686 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21687 000c 1346     		mov	r3, r2
 21688 000e 7B70     		strb	r3, [r7, #1]
2936:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2937:..\src/command_processing.c **** 
2938:..\src/command_processing.c ****     // frame - start
2939:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21689              		.loc 1 2939 0
 21690 0010 3A20     		movs	r0, #58
 21691 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2940:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21692              		.loc 1 2940 0
 21693 0016 3A20     		movs	r0, #58
 21694 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2941:..\src/command_processing.c ****     // frame - ID
2942:..\src/command_processing.c ****     //if(old_id)
2943:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 21695              		.loc 1 2943 0
 21696 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21697 001e 1846     		mov	r0, r3
 21698 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2944:..\src/command_processing.c ****     //else
2945:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 476


2946:..\src/command_processing.c ****         
2947:..\src/command_processing.c ****     // frame - length
2948:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 21699              		.loc 1 2948 0
 21700 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21701 0026 DBB2     		uxtb	r3, r3
 21702 0028 1846     		mov	r0, r3
 21703 002a FFF7FEFF 		bl	UART_RS485_PutChar
2949:..\src/command_processing.c ****     // frame - packet data
2950:..\src/command_processing.c ****     for(index = 0; index < packet_length; ++index) {
 21704              		.loc 1 2950 0
 21705 002e 0023     		movs	r3, #0
 21706 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21707 0032 09E0     		b	.L812
 21708              	.L813:
2951:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21709              		.loc 1 2951 0 discriminator 3
 21710 0034 FB89     		ldrh	r3, [r7, #14]
 21711 0036 7A68     		ldr	r2, [r7, #4]
 21712 0038 1344     		add	r3, r3, r2
 21713 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21714 003c 1846     		mov	r0, r3
 21715 003e FFF7FEFF 		bl	UART_RS485_PutChar
2950:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21716              		.loc 1 2950 0 discriminator 3
 21717 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21718 0044 0133     		adds	r3, r3, #1
 21719 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21720              	.L812:
2950:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21721              		.loc 1 2950 0 is_stmt 0 discriminator 1
 21722 0048 FA89     		ldrh	r2, [r7, #14]
 21723 004a 7B88     		ldrh	r3, [r7, #2]
 21724 004c 9A42     		cmp	r2, r3
 21725 004e F1D3     		bcc	.L813
2952:..\src/command_processing.c ****     }
2953:..\src/command_processing.c **** 
2954:..\src/command_processing.c ****     index = 0;
 21726              		.loc 1 2954 0 is_stmt 1
 21727 0050 0023     		movs	r3, #0
 21728 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2955:..\src/command_processing.c **** 
2956:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21729              		.loc 1 2956 0
 21730 0054 00BF     		nop
 21731              	.L815:
 21732              		.loc 1 2956 0 is_stmt 0 discriminator 2
 21733 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21734 005a 0346     		mov	r3, r0
 21735 005c 03F00103 		and	r3, r3, #1
 21736 0060 002B     		cmp	r3, #0
 21737 0062 05D1     		bne	.L814
 21738              		.loc 1 2956 0 discriminator 1
 21739 0064 FB89     		ldrh	r3, [r7, #14]
 21740 0066 5A1C     		adds	r2, r3, #1
 21741 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21742 006a B3F57A7F 		cmp	r3, #1000
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 477


 21743 006e F2D9     		bls	.L815
 21744              	.L814:
2957:..\src/command_processing.c **** 
2958:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21745              		.loc 1 2958 0 is_stmt 1
 21746 0070 0120     		movs	r0, #1
 21747 0072 FFF7FEFF 		bl	RS485_CTS_Write
2959:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21748              		.loc 1 2959 0
 21749 0076 0020     		movs	r0, #0
 21750 0078 FFF7FEFF 		bl	RS485_CTS_Write
2960:..\src/command_processing.c **** }
 21751              		.loc 1 2960 0
 21752 007c 00BF     		nop
 21753 007e 1037     		adds	r7, r7, #16
 21754              		.cfi_def_cfa_offset 8
 21755 0080 BD46     		mov	sp, r7
 21756              		.cfi_def_cfa_register 13
 21757              		@ sp needed
 21758 0082 80BD     		pop	{r7, pc}
 21759              		.cfi_endproc
 21760              	.LFE81:
 21761              		.size	commWrite_old_id, .-commWrite_old_id
 21762              		.section	.text.commWrite,"ax",%progbits
 21763              		.align	2
 21764              		.global	commWrite
 21765              		.thumb
 21766              		.thumb_func
 21767              		.type	commWrite, %function
 21768              	commWrite:
 21769              	.LFB82:
2961:..\src/command_processing.c **** 
2962:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_length)
2963:..\src/command_processing.c **** {
 21770              		.loc 1 2963 0
 21771              		.cfi_startproc
 21772              		@ args = 0, pretend = 0, frame = 16
 21773              		@ frame_needed = 1, uses_anonymous_args = 0
 21774 0000 80B5     		push	{r7, lr}
 21775              		.cfi_def_cfa_offset 8
 21776              		.cfi_offset 7, -8
 21777              		.cfi_offset 14, -4
 21778 0002 84B0     		sub	sp, sp, #16
 21779              		.cfi_def_cfa_offset 24
 21780 0004 00AF     		add	r7, sp, #0
 21781              		.cfi_def_cfa_register 7
 21782 0006 7860     		str	r0, [r7, #4]
 21783 0008 0B46     		mov	r3, r1
 21784 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2964:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2965:..\src/command_processing.c **** 
2966:..\src/command_processing.c ****     // frame - start
2967:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21785              		.loc 1 2967 0
 21786 000c 3A20     		movs	r0, #58
 21787 000e FFF7FEFF 		bl	UART_RS485_PutChar
2968:..\src/command_processing.c ****     UART_RS485_PutChar(':');
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 478


 21788              		.loc 1 2968 0
 21789 0012 3A20     		movs	r0, #58
 21790 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2969:..\src/command_processing.c ****     // frame - ID
2970:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 21791              		.loc 1 2970 0
 21792 0018 1A4B     		ldr	r3, .L821
 21793 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21794 001e 1846     		mov	r0, r3
 21795 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2971:..\src/command_processing.c ****     // frame - length
2972:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 21796              		.loc 1 2972 0
 21797 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21798 0026 DBB2     		uxtb	r3, r3
 21799 0028 1846     		mov	r0, r3
 21800 002a FFF7FEFF 		bl	UART_RS485_PutChar
2973:..\src/command_processing.c ****     // frame - packet data
2974:..\src/command_processing.c ****     for(index = 0; index < packet_length; ++index) {
 21801              		.loc 1 2974 0
 21802 002e 0023     		movs	r3, #0
 21803 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21804 0032 09E0     		b	.L817
 21805              	.L818:
2975:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21806              		.loc 1 2975 0 discriminator 3
 21807 0034 FB89     		ldrh	r3, [r7, #14]
 21808 0036 7A68     		ldr	r2, [r7, #4]
 21809 0038 1344     		add	r3, r3, r2
 21810 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21811 003c 1846     		mov	r0, r3
 21812 003e FFF7FEFF 		bl	UART_RS485_PutChar
2974:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21813              		.loc 1 2974 0 discriminator 3
 21814 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21815 0044 0133     		adds	r3, r3, #1
 21816 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21817              	.L817:
2974:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21818              		.loc 1 2974 0 is_stmt 0 discriminator 1
 21819 0048 FA89     		ldrh	r2, [r7, #14]
 21820 004a 7B88     		ldrh	r3, [r7, #2]
 21821 004c 9A42     		cmp	r2, r3
 21822 004e F1D3     		bcc	.L818
2976:..\src/command_processing.c ****     }
2977:..\src/command_processing.c **** 
2978:..\src/command_processing.c ****     index = 0;
 21823              		.loc 1 2978 0 is_stmt 1
 21824 0050 0023     		movs	r3, #0
 21825 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2979:..\src/command_processing.c **** 
2980:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21826              		.loc 1 2980 0
 21827 0054 00BF     		nop
 21828              	.L820:
 21829              		.loc 1 2980 0 is_stmt 0 discriminator 2
 21830 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 479


 21831 005a 0346     		mov	r3, r0
 21832 005c 03F00103 		and	r3, r3, #1
 21833 0060 002B     		cmp	r3, #0
 21834 0062 05D1     		bne	.L819
 21835              		.loc 1 2980 0 discriminator 1
 21836 0064 FB89     		ldrh	r3, [r7, #14]
 21837 0066 5A1C     		adds	r2, r3, #1
 21838 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21839 006a B3F57A7F 		cmp	r3, #1000
 21840 006e F2D9     		bls	.L820
 21841              	.L819:
2981:..\src/command_processing.c **** 
2982:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21842              		.loc 1 2982 0 is_stmt 1
 21843 0070 0120     		movs	r0, #1
 21844 0072 FFF7FEFF 		bl	RS485_CTS_Write
2983:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21845              		.loc 1 2983 0
 21846 0076 0020     		movs	r0, #0
 21847 0078 FFF7FEFF 		bl	RS485_CTS_Write
2984:..\src/command_processing.c **** }
 21848              		.loc 1 2984 0
 21849 007c 00BF     		nop
 21850 007e 1037     		adds	r7, r7, #16
 21851              		.cfi_def_cfa_offset 8
 21852 0080 BD46     		mov	sp, r7
 21853              		.cfi_def_cfa_register 13
 21854              		@ sp needed
 21855 0082 80BD     		pop	{r7, pc}
 21856              	.L822:
 21857              		.align	2
 21858              	.L821:
 21859 0084 00000000 		.word	g_mem
 21860              		.cfi_endproc
 21861              	.LFE82:
 21862              		.size	commWrite, .-commWrite
 21863              		.section	.text.commWriteID,"ax",%progbits
 21864              		.align	2
 21865              		.global	commWriteID
 21866              		.thumb
 21867              		.thumb_func
 21868              		.type	commWriteID, %function
 21869              	commWriteID:
 21870              	.LFB83:
2985:..\src/command_processing.c **** 
2986:..\src/command_processing.c **** //==============================================================================
2987:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2988:..\src/command_processing.c **** //==============================================================================
2989:..\src/command_processing.c **** 
2990:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_length, uint8 id)
2991:..\src/command_processing.c **** {
 21871              		.loc 1 2991 0
 21872              		.cfi_startproc
 21873              		@ args = 0, pretend = 0, frame = 8
 21874              		@ frame_needed = 1, uses_anonymous_args = 0
 21875 0000 80B5     		push	{r7, lr}
 21876              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 480


 21877              		.cfi_offset 7, -8
 21878              		.cfi_offset 14, -4
 21879 0002 82B0     		sub	sp, sp, #8
 21880              		.cfi_def_cfa_offset 16
 21881 0004 00AF     		add	r7, sp, #0
 21882              		.cfi_def_cfa_register 7
 21883 0006 7860     		str	r0, [r7, #4]
 21884 0008 0B46     		mov	r3, r1
 21885 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21886 000c 1346     		mov	r3, r2
 21887 000e 7B70     		strb	r3, [r7, #1]
2992:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2993:..\src/command_processing.c **** 
2994:..\src/command_processing.c ****     // frame - start
2995:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21888              		.loc 1 2995 0
 21889 0010 3A20     		movs	r0, #58
 21890 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2996:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21891              		.loc 1 2996 0
 21892 0016 3A20     		movs	r0, #58
 21893 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2997:..\src/command_processing.c ****     // frame - ID
2998:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 21894              		.loc 1 2998 0
 21895 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21896 001e 1846     		mov	r0, r3
 21897 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2999:..\src/command_processing.c ****     // frame - length
3000:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 21898              		.loc 1 3000 0
 21899 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21900 0026 DBB2     		uxtb	r3, r3
 21901 0028 1846     		mov	r0, r3
 21902 002a FFF7FEFF 		bl	UART_RS485_PutChar
3001:..\src/command_processing.c ****     // frame - packet data
3002:..\src/command_processing.c ****     for(i = 0; i < packet_length; ++i) {
 21903              		.loc 1 3002 0
 21904 002e 1B4B     		ldr	r3, .L828
 21905 0030 0022     		movs	r2, #0
 21906 0032 1A80     		strh	r2, [r3]	@ movhi
 21907 0034 0EE0     		b	.L824
 21908              	.L825:
3003:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21909              		.loc 1 3003 0 discriminator 3
 21910 0036 194B     		ldr	r3, .L828
 21911 0038 1B88     		ldrh	r3, [r3]
 21912 003a 1A46     		mov	r2, r3
 21913 003c 7B68     		ldr	r3, [r7, #4]
 21914 003e 1344     		add	r3, r3, r2
 21915 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21916 0042 1846     		mov	r0, r3
 21917 0044 FFF7FEFF 		bl	UART_RS485_PutChar
3002:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21918              		.loc 1 3002 0 discriminator 3
 21919 0048 144B     		ldr	r3, .L828
 21920 004a 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 481


 21921 004c 0133     		adds	r3, r3, #1
 21922 004e 9AB2     		uxth	r2, r3
 21923 0050 124B     		ldr	r3, .L828
 21924 0052 1A80     		strh	r2, [r3]	@ movhi
 21925              	.L824:
3002:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21926              		.loc 1 3002 0 is_stmt 0 discriminator 1
 21927 0054 114B     		ldr	r3, .L828
 21928 0056 1B88     		ldrh	r3, [r3]
 21929 0058 7A88     		ldrh	r2, [r7, #2]
 21930 005a 9A42     		cmp	r2, r3
 21931 005c EBD8     		bhi	.L825
3004:..\src/command_processing.c ****     }
3005:..\src/command_processing.c **** 
3006:..\src/command_processing.c ****     i = 0;
 21932              		.loc 1 3006 0 is_stmt 1
 21933 005e 0F4B     		ldr	r3, .L828
 21934 0060 0022     		movs	r2, #0
 21935 0062 1A80     		strh	r2, [r3]	@ movhi
3007:..\src/command_processing.c **** 
3008:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 21936              		.loc 1 3008 0
 21937 0064 00BF     		nop
 21938              	.L827:
 21939              		.loc 1 3008 0 is_stmt 0 discriminator 2
 21940 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21941 006a 0346     		mov	r3, r0
 21942 006c 03F00103 		and	r3, r3, #1
 21943 0070 002B     		cmp	r3, #0
 21944 0072 08D1     		bne	.L826
 21945              		.loc 1 3008 0 discriminator 1
 21946 0074 094B     		ldr	r3, .L828
 21947 0076 1B88     		ldrh	r3, [r3]
 21948 0078 5A1C     		adds	r2, r3, #1
 21949 007a 91B2     		uxth	r1, r2
 21950 007c 074A     		ldr	r2, .L828
 21951 007e 1180     		strh	r1, [r2]	@ movhi
 21952 0080 B3F57A7F 		cmp	r3, #1000
 21953 0084 EFD9     		bls	.L827
 21954              	.L826:
3009:..\src/command_processing.c ****     
3010:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21955              		.loc 1 3010 0 is_stmt 1
 21956 0086 0120     		movs	r0, #1
 21957 0088 FFF7FEFF 		bl	RS485_CTS_Write
3011:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21958              		.loc 1 3011 0
 21959 008c 0020     		movs	r0, #0
 21960 008e FFF7FEFF 		bl	RS485_CTS_Write
3012:..\src/command_processing.c **** }
 21961              		.loc 1 3012 0
 21962 0092 00BF     		nop
 21963 0094 0837     		adds	r7, r7, #8
 21964              		.cfi_def_cfa_offset 8
 21965 0096 BD46     		mov	sp, r7
 21966              		.cfi_def_cfa_register 13
 21967              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 482


 21968 0098 80BD     		pop	{r7, pc}
 21969              	.L829:
 21970 009a 00BF     		.align	2
 21971              	.L828:
 21972 009c 04000000 		.word	i.11035
 21973              		.cfi_endproc
 21974              	.LFE83:
 21975              		.size	commWriteID, .-commWriteID
 21976              		.section	.text.LCRChecksum,"ax",%progbits
 21977              		.align	2
 21978              		.global	LCRChecksum
 21979              		.thumb
 21980              		.thumb_func
 21981              		.type	LCRChecksum, %function
 21982              	LCRChecksum:
 21983              	.LFB84:
3013:..\src/command_processing.c **** 
3014:..\src/command_processing.c **** //==============================================================================
3015:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
3016:..\src/command_processing.c **** //==============================================================================
3017:..\src/command_processing.c **** 
3018:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
3019:..\src/command_processing.c **** 
3020:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 21984              		.loc 1 3020 0
 21985              		.cfi_startproc
 21986              		@ args = 0, pretend = 0, frame = 16
 21987              		@ frame_needed = 1, uses_anonymous_args = 0
 21988              		@ link register save eliminated.
 21989 0000 80B4     		push	{r7}
 21990              		.cfi_def_cfa_offset 4
 21991              		.cfi_offset 7, -4
 21992 0002 85B0     		sub	sp, sp, #20
 21993              		.cfi_def_cfa_offset 24
 21994 0004 00AF     		add	r7, sp, #0
 21995              		.cfi_def_cfa_register 7
 21996 0006 7860     		str	r0, [r7, #4]
 21997 0008 0B46     		mov	r3, r1
 21998 000a FB70     		strb	r3, [r7, #3]
3021:..\src/command_processing.c ****     
3022:..\src/command_processing.c ****     uint8 CYDATA i;
3023:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 21999              		.loc 1 3023 0
 22000 000c 0023     		movs	r3, #0
 22001 000e BB73     		strb	r3, [r7, #14]
3024:..\src/command_processing.c ****     
3025:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 22002              		.loc 1 3025 0
 22003 0010 0023     		movs	r3, #0
 22004 0012 FB73     		strb	r3, [r7, #15]
 22005 0014 09E0     		b	.L831
 22006              	.L832:
3026:..\src/command_processing.c ****        checksum ^= data_array[i];
 22007              		.loc 1 3026 0 discriminator 3
 22008 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22009 0018 7A68     		ldr	r2, [r7, #4]
 22010 001a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 483


 22011 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 22012 001e BB7B     		ldrb	r3, [r7, #14]
 22013 0020 5340     		eors	r3, r3, r2
 22014 0022 BB73     		strb	r3, [r7, #14]
3025:..\src/command_processing.c ****        checksum ^= data_array[i];
 22015              		.loc 1 3025 0 discriminator 3
 22016 0024 FB7B     		ldrb	r3, [r7, #15]
 22017 0026 0133     		adds	r3, r3, #1
 22018 0028 FB73     		strb	r3, [r7, #15]
 22019              	.L831:
3025:..\src/command_processing.c ****        checksum ^= data_array[i];
 22020              		.loc 1 3025 0 is_stmt 0 discriminator 1
 22021 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22022 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 22023 002e 9A42     		cmp	r2, r3
 22024 0030 F1D3     		bcc	.L832
3027:..\src/command_processing.c ****   
3028:..\src/command_processing.c ****     return checksum;
 22025              		.loc 1 3028 0 is_stmt 1
 22026 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
3029:..\src/command_processing.c **** }
 22027              		.loc 1 3029 0
 22028 0034 1846     		mov	r0, r3
 22029 0036 1437     		adds	r7, r7, #20
 22030              		.cfi_def_cfa_offset 4
 22031 0038 BD46     		mov	sp, r7
 22032              		.cfi_def_cfa_register 13
 22033              		@ sp needed
 22034 003a 80BC     		pop	{r7}
 22035              		.cfi_restore 7
 22036              		.cfi_def_cfa_offset 0
 22037 003c 7047     		bx	lr
 22038              		.cfi_endproc
 22039              	.LFE84:
 22040              		.size	LCRChecksum, .-LCRChecksum
 22041 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 22042              		.align	2
 22043              		.global	sendAcknowledgment
 22044              		.thumb
 22045              		.thumb_func
 22046              		.type	sendAcknowledgment, %function
 22047              	sendAcknowledgment:
 22048              	.LFB85:
3030:..\src/command_processing.c **** 
3031:..\src/command_processing.c **** 
3032:..\src/command_processing.c **** //==============================================================================
3033:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
3034:..\src/command_processing.c **** //==============================================================================
3035:..\src/command_processing.c **** 
3036:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 22049              		.loc 1 3036 0
 22050              		.cfi_startproc
 22051              		@ args = 0, pretend = 0, frame = 16
 22052              		@ frame_needed = 1, uses_anonymous_args = 0
 22053 0000 80B5     		push	{r7, lr}
 22054              		.cfi_def_cfa_offset 8
 22055              		.cfi_offset 7, -8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 484


 22056              		.cfi_offset 14, -4
 22057 0002 84B0     		sub	sp, sp, #16
 22058              		.cfi_def_cfa_offset 24
 22059 0004 00AF     		add	r7, sp, #0
 22060              		.cfi_def_cfa_register 7
 22061 0006 0346     		mov	r3, r0
 22062 0008 FB71     		strb	r3, [r7, #7]
3037:..\src/command_processing.c ****     int packet_length = 2;
 22063              		.loc 1 3037 0
 22064 000a 0223     		movs	r3, #2
 22065 000c FB60     		str	r3, [r7, #12]
3038:..\src/command_processing.c ****     uint8 packet_data[2];
3039:..\src/command_processing.c **** 
3040:..\src/command_processing.c ****     packet_data[0] = value;
 22066              		.loc 1 3040 0
 22067 000e FB79     		ldrb	r3, [r7, #7]
 22068 0010 3B72     		strb	r3, [r7, #8]
3041:..\src/command_processing.c ****     packet_data[1] = value;
 22069              		.loc 1 3041 0
 22070 0012 FB79     		ldrb	r3, [r7, #7]
 22071 0014 7B72     		strb	r3, [r7, #9]
3042:..\src/command_processing.c **** 
3043:..\src/command_processing.c ****     commWrite(packet_data, packet_length);
 22072              		.loc 1 3043 0
 22073 0016 FB68     		ldr	r3, [r7, #12]
 22074 0018 9AB2     		uxth	r2, r3
 22075 001a 07F10803 		add	r3, r7, #8
 22076 001e 1146     		mov	r1, r2
 22077 0020 1846     		mov	r0, r3
 22078 0022 FFF7FEFF 		bl	commWrite
3044:..\src/command_processing.c **** }
 22079              		.loc 1 3044 0
 22080 0026 00BF     		nop
 22081 0028 1037     		adds	r7, r7, #16
 22082              		.cfi_def_cfa_offset 8
 22083 002a BD46     		mov	sp, r7
 22084              		.cfi_def_cfa_register 13
 22085              		@ sp needed
 22086 002c 80BD     		pop	{r7, pc}
 22087              		.cfi_endproc
 22088              	.LFE85:
 22089              		.size	sendAcknowledgment, .-sendAcknowledgment
 22090 002e 00BF     		.section	.text.memStore,"ax",%progbits
 22091              		.align	2
 22092              		.global	memStore
 22093              		.thumb
 22094              		.thumb_func
 22095              		.type	memStore, %function
 22096              	memStore:
 22097              	.LFB86:
3045:..\src/command_processing.c **** 
3046:..\src/command_processing.c **** //==============================================================================
3047:..\src/command_processing.c **** //                                                                  STORE MEMORY
3048:..\src/command_processing.c **** //==============================================================================
3049:..\src/command_processing.c **** 
3050:..\src/command_processing.c **** 
3051:..\src/command_processing.c **** uint8 memStore(int displacement)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 485


3052:..\src/command_processing.c **** {
 22098              		.loc 1 3052 0
 22099              		.cfi_startproc
 22100              		@ args = 0, pretend = 0, frame = 24
 22101              		@ frame_needed = 1, uses_anonymous_args = 0
 22102 0000 80B5     		push	{r7, lr}
 22103              		.cfi_def_cfa_offset 8
 22104              		.cfi_offset 7, -8
 22105              		.cfi_offset 14, -4
 22106 0002 86B0     		sub	sp, sp, #24
 22107              		.cfi_def_cfa_offset 32
 22108 0004 00AF     		add	r7, sp, #0
 22109              		.cfi_def_cfa_register 7
 22110 0006 7860     		str	r0, [r7, #4]
3053:..\src/command_processing.c ****     int i;  // iterator
3054:..\src/command_processing.c ****     uint8 writeStatus;
3055:..\src/command_processing.c ****     int pages;
3056:..\src/command_processing.c ****     uint8 ret_val = 1;
 22111              		.loc 1 3056 0
 22112 0008 0123     		movs	r3, #1
 22113 000a FB74     		strb	r3, [r7, #19]
3057:..\src/command_processing.c **** 
3058:..\src/command_processing.c ****     // Disable Interrupt
3059:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 22114              		.loc 1 3059 0
 22115 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
3060:..\src/command_processing.c **** 
3061:..\src/command_processing.c ****     // Stop motor
3062:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 22116              		.loc 1 3062 0
 22117 0010 0020     		movs	r0, #0
 22118 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
3063:..\src/command_processing.c **** 
3064:..\src/command_processing.c ****     // Update temperature information for better writing performance
3065:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 22119              		.loc 1 3065 0
 22120 0016 FFF7FEFF 		bl	EEPROM_UpdateTemperature
3066:..\src/command_processing.c **** 
3067:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 22121              		.loc 1 3067 0
 22122 001a 1D4A     		ldr	r2, .L841
 22123 001c 1D4B     		ldr	r3, .L841+4
 22124 001e 1046     		mov	r0, r2
 22125 0020 1946     		mov	r1, r3
 22126 0022 4FF43D73 		mov	r3, #756
 22127 0026 1A46     		mov	r2, r3
 22128 0028 FFF7FEFF 		bl	memcpy
3068:..\src/command_processing.c **** 
3069:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 22129              		.loc 1 3069 0
 22130 002c 3023     		movs	r3, #48
 22131 002e FB60     		str	r3, [r7, #12]
3070:..\src/command_processing.c **** 
3071:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 22132              		.loc 1 3071 0
 22133 0030 0023     		movs	r3, #0
 22134 0032 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 486


 22135 0034 18E0     		b	.L836
 22136              	.L839:
3072:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22137              		.loc 1 3072 0
 22138 0036 7B69     		ldr	r3, [r7, #20]
 22139 0038 1B01     		lsls	r3, r3, #4
 22140 003a 1A46     		mov	r2, r3
 22141 003c 154B     		ldr	r3, .L841+4
 22142 003e D018     		adds	r0, r2, r3
 22143 0040 7B69     		ldr	r3, [r7, #20]
 22144 0042 DAB2     		uxtb	r2, r3
 22145 0044 7B68     		ldr	r3, [r7, #4]
 22146 0046 DBB2     		uxtb	r3, r3
 22147 0048 1344     		add	r3, r3, r2
 22148 004a DBB2     		uxtb	r3, r3
 22149 004c 1946     		mov	r1, r3
 22150 004e FFF7FEFF 		bl	EEPROM_Write
 22151 0052 0346     		mov	r3, r0
 22152 0054 FB72     		strb	r3, [r7, #11]
3073:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 22153              		.loc 1 3073 0
 22154 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 22155 0058 002B     		cmp	r3, #0
 22156 005a 02D0     		beq	.L837
3074:..\src/command_processing.c ****             ret_val = 0;
 22157              		.loc 1 3074 0
 22158 005c 0023     		movs	r3, #0
 22159 005e FB74     		strb	r3, [r7, #19]
3075:..\src/command_processing.c ****             break;
 22160              		.loc 1 3075 0
 22161 0060 06E0     		b	.L838
 22162              	.L837:
3071:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22163              		.loc 1 3071 0 discriminator 2
 22164 0062 7B69     		ldr	r3, [r7, #20]
 22165 0064 0133     		adds	r3, r3, #1
 22166 0066 7B61     		str	r3, [r7, #20]
 22167              	.L836:
3071:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22168              		.loc 1 3071 0 is_stmt 0 discriminator 1
 22169 0068 7A69     		ldr	r2, [r7, #20]
 22170 006a FB68     		ldr	r3, [r7, #12]
 22171 006c 9A42     		cmp	r2, r3
 22172 006e E2DB     		blt	.L839
 22173              	.L838:
3076:..\src/command_processing.c ****         }
3077:..\src/command_processing.c ****     }
3078:..\src/command_processing.c **** 
3079:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 22174              		.loc 1 3079 0 is_stmt 1
 22175 0070 084A     		ldr	r2, .L841+4
 22176 0072 074B     		ldr	r3, .L841
 22177 0074 1046     		mov	r0, r2
 22178 0076 1946     		mov	r1, r3
 22179 0078 4FF43D73 		mov	r3, #756
 22180 007c 1A46     		mov	r2, r3
 22181 007e FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 487


3080:..\src/command_processing.c **** 
3081:..\src/command_processing.c ****     // Re-Enable Interrupt
3082:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 22182              		.loc 1 3082 0
 22183 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
3083:..\src/command_processing.c **** 
3084:..\src/command_processing.c ****     return ret_val;
 22184              		.loc 1 3084 0
 22185 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
3085:..\src/command_processing.c **** }
 22186              		.loc 1 3085 0
 22187 0088 1846     		mov	r0, r3
 22188 008a 1837     		adds	r7, r7, #24
 22189              		.cfi_def_cfa_offset 8
 22190 008c BD46     		mov	sp, r7
 22191              		.cfi_def_cfa_register 13
 22192              		@ sp needed
 22193 008e 80BD     		pop	{r7, pc}
 22194              	.L842:
 22195              		.align	2
 22196              	.L841:
 22197 0090 00000000 		.word	c_mem
 22198 0094 00000000 		.word	g_mem
 22199              		.cfi_endproc
 22200              	.LFE86:
 22201              		.size	memStore, .-memStore
 22202              		.section	.text.memRecall,"ax",%progbits
 22203              		.align	2
 22204              		.global	memRecall
 22205              		.thumb
 22206              		.thumb_func
 22207              		.type	memRecall, %function
 22208              	memRecall:
 22209              	.LFB87:
3086:..\src/command_processing.c **** 
3087:..\src/command_processing.c **** 
3088:..\src/command_processing.c **** //==============================================================================
3089:..\src/command_processing.c **** //                                                                 RECALL MEMORY
3090:..\src/command_processing.c **** //==============================================================================
3091:..\src/command_processing.c **** 
3092:..\src/command_processing.c **** 
3093:..\src/command_processing.c **** void memRecall(void)
3094:..\src/command_processing.c **** {
 22210              		.loc 1 3094 0
 22211              		.cfi_startproc
 22212              		@ args = 0, pretend = 0, frame = 8
 22213              		@ frame_needed = 1, uses_anonymous_args = 0
 22214 0000 80B5     		push	{r7, lr}
 22215              		.cfi_def_cfa_offset 8
 22216              		.cfi_offset 7, -8
 22217              		.cfi_offset 14, -4
 22218 0002 82B0     		sub	sp, sp, #8
 22219              		.cfi_def_cfa_offset 16
 22220 0004 00AF     		add	r7, sp, #0
 22221              		.cfi_def_cfa_register 7
3095:..\src/command_processing.c ****     uint16 i;
3096:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 488


3097:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22222              		.loc 1 3097 0
 22223 0006 0023     		movs	r3, #0
 22224 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22225 000a 0CE0     		b	.L844
 22226              	.L845:
3098:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22227              		.loc 1 3098 0 discriminator 3
 22228 000c FB88     		ldrh	r3, [r7, #6]
 22229 000e 184A     		ldr	r2, .L849
 22230 0010 1344     		add	r3, r3, r2
 22231 0012 184A     		ldr	r2, .L849+4
 22232 0014 1168     		ldr	r1, [r2]
 22233 0016 FA88     		ldrh	r2, [r7, #6]
 22234 0018 0A44     		add	r2, r2, r1
 22235 001a 1278     		ldrb	r2, [r2]
 22236 001c D2B2     		uxtb	r2, r2
 22237 001e 1A70     		strb	r2, [r3]
3097:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22238              		.loc 1 3097 0 discriminator 3
 22239 0020 FB88     		ldrh	r3, [r7, #6]
 22240 0022 0133     		adds	r3, r3, #1
 22241 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 22242              	.L844:
3097:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22243              		.loc 1 3097 0 is_stmt 0 discriminator 1
 22244 0026 FB88     		ldrh	r3, [r7, #6]
 22245 0028 B3F53D7F 		cmp	r3, #756
 22246 002c EED3     		bcc	.L845
3099:..\src/command_processing.c ****     }
3100:..\src/command_processing.c ****     
3101:..\src/command_processing.c ****     // Recall saved user_emg structure
3102:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 22247              		.loc 1 3102 0 is_stmt 1
 22248 002e 104B     		ldr	r3, .L849
 22249 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22250 0034 5B01     		lsls	r3, r3, #5
 22251 0036 03F51273 		add	r3, r3, #584
 22252 003a 0D4A     		ldr	r2, .L849
 22253 003c 1344     		add	r3, r3, r2
 22254 003e 1022     		movs	r2, #16
 22255 0040 1946     		mov	r1, r3
 22256 0042 0D48     		ldr	r0, .L849+8
 22257 0044 FFF7FEFF 		bl	memcpy
3103:..\src/command_processing.c **** 
3104:..\src/command_processing.c ****     //check for initialization
3105:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22258              		.loc 1 3105 0
 22259 0048 094B     		ldr	r3, .L849
 22260 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22261 004c 002B     		cmp	r3, #0
 22262 004e 02D1     		bne	.L846
3106:..\src/command_processing.c ****         memRestore();
 22263              		.loc 1 3106 0
 22264 0050 FFF7FEFF 		bl	memRestore
3107:..\src/command_processing.c ****     } else {
3108:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 489


3109:..\src/command_processing.c ****     }        
3110:..\src/command_processing.c **** }
 22265              		.loc 1 3110 0
 22266 0054 08E0     		b	.L848
 22267              	.L846:
3108:..\src/command_processing.c ****     }        
 22268              		.loc 1 3108 0
 22269 0056 094A     		ldr	r2, .L849+12
 22270 0058 054B     		ldr	r3, .L849
 22271 005a 1046     		mov	r0, r2
 22272 005c 1946     		mov	r1, r3
 22273 005e 4FF43D73 		mov	r3, #756
 22274 0062 1A46     		mov	r2, r3
 22275 0064 FFF7FEFF 		bl	memcpy
 22276              	.L848:
 22277              		.loc 1 3110 0
 22278 0068 00BF     		nop
 22279 006a 0837     		adds	r7, r7, #8
 22280              		.cfi_def_cfa_offset 8
 22281 006c BD46     		mov	sp, r7
 22282              		.cfi_def_cfa_register 13
 22283              		@ sp needed
 22284 006e 80BD     		pop	{r7, pc}
 22285              	.L850:
 22286              		.align	2
 22287              	.L849:
 22288 0070 00000000 		.word	g_mem
 22289 0074 00000000 		.word	EEPROM_ADDR
 22290 0078 F0010000 		.word	g_mem+496
 22291 007c 00000000 		.word	c_mem
 22292              		.cfi_endproc
 22293              	.LFE87:
 22294              		.size	memRecall, .-memRecall
 22295              		.section	.text.memRestore,"ax",%progbits
 22296              		.align	2
 22297              		.global	memRestore
 22298              		.thumb
 22299              		.thumb_func
 22300              		.type	memRestore, %function
 22301              	memRestore:
 22302              	.LFB88:
3111:..\src/command_processing.c **** 
3112:..\src/command_processing.c **** 
3113:..\src/command_processing.c **** //==============================================================================
3114:..\src/command_processing.c **** //                                                                RESTORE MEMORY
3115:..\src/command_processing.c **** //==============================================================================
3116:..\src/command_processing.c **** 
3117:..\src/command_processing.c **** 
3118:..\src/command_processing.c **** uint8 memRestore(void) {
 22303              		.loc 1 3118 0
 22304              		.cfi_startproc
 22305              		@ args = 0, pretend = 0, frame = 8
 22306              		@ frame_needed = 1, uses_anonymous_args = 0
 22307 0000 80B5     		push	{r7, lr}
 22308              		.cfi_def_cfa_offset 8
 22309              		.cfi_offset 7, -8
 22310              		.cfi_offset 14, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 490


 22311 0002 82B0     		sub	sp, sp, #8
 22312              		.cfi_def_cfa_offset 16
 22313 0004 00AF     		add	r7, sp, #0
 22314              		.cfi_def_cfa_register 7
3119:..\src/command_processing.c ****     uint16 i;
3120:..\src/command_processing.c **** 
3121:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22315              		.loc 1 3121 0
 22316 0006 0023     		movs	r3, #0
 22317 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22318 000a 0EE0     		b	.L852
 22319              	.L853:
3122:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22320              		.loc 1 3122 0 discriminator 3
 22321 000c FB88     		ldrh	r3, [r7, #6]
 22322 000e 114A     		ldr	r2, .L856
 22323 0010 1344     		add	r3, r3, r2
 22324 0012 114A     		ldr	r2, .L856+4
 22325 0014 1168     		ldr	r1, [r2]
 22326 0016 FA88     		ldrh	r2, [r7, #6]
 22327 0018 02F54872 		add	r2, r2, #800
 22328 001c 0A44     		add	r2, r2, r1
 22329 001e 1278     		ldrb	r2, [r2]
 22330 0020 D2B2     		uxtb	r2, r2
 22331 0022 1A70     		strb	r2, [r3]
3121:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22332              		.loc 1 3121 0 discriminator 3
 22333 0024 FB88     		ldrh	r3, [r7, #6]
 22334 0026 0133     		adds	r3, r3, #1
 22335 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 22336              	.L852:
3121:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22337              		.loc 1 3121 0 is_stmt 0 discriminator 1
 22338 002a FB88     		ldrh	r3, [r7, #6]
 22339 002c B3F53D7F 		cmp	r3, #756
 22340 0030 ECD3     		bcc	.L853
3123:..\src/command_processing.c ****     }
3124:..\src/command_processing.c **** 
3125:..\src/command_processing.c ****     //check for initialization
3126:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22341              		.loc 1 3126 0 is_stmt 1
 22342 0032 084B     		ldr	r3, .L856
 22343 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22344 0036 002B     		cmp	r3, #0
 22345 0038 03D1     		bne	.L854
3127:..\src/command_processing.c ****         return memInit();
 22346              		.loc 1 3127 0
 22347 003a FFF7FEFF 		bl	memInit
 22348 003e 0346     		mov	r3, r0
 22349 0040 03E0     		b	.L855
 22350              	.L854:
3128:..\src/command_processing.c ****     } else {
3129:..\src/command_processing.c ****         return memStore(0);
 22351              		.loc 1 3129 0
 22352 0042 0020     		movs	r0, #0
 22353 0044 FFF7FEFF 		bl	memStore
 22354 0048 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 491


 22355              	.L855:
3130:..\src/command_processing.c ****     }  
3131:..\src/command_processing.c **** }
 22356              		.loc 1 3131 0
 22357 004a 1846     		mov	r0, r3
 22358 004c 0837     		adds	r7, r7, #8
 22359              		.cfi_def_cfa_offset 8
 22360 004e BD46     		mov	sp, r7
 22361              		.cfi_def_cfa_register 13
 22362              		@ sp needed
 22363 0050 80BD     		pop	{r7, pc}
 22364              	.L857:
 22365 0052 00BF     		.align	2
 22366              	.L856:
 22367 0054 00000000 		.word	g_mem
 22368 0058 00000000 		.word	EEPROM_ADDR
 22369              		.cfi_endproc
 22370              	.LFE88:
 22371              		.size	memRestore, .-memRestore
 22372              		.section	.rodata
 22373 1f77 00       		.align	2
 22374              	.LC298:
 22375 1f78 47454E30 		.ascii	"GEN001\000"
 22375      303100
 22376              		.section	.text.memInit,"ax",%progbits
 22377              		.align	2
 22378              		.global	memInit
 22379              		.thumb
 22380              		.thumb_func
 22381              		.type	memInit, %function
 22382              	memInit:
 22383              	.LFB89:
3132:..\src/command_processing.c **** 
3133:..\src/command_processing.c **** //==============================================================================
3134:..\src/command_processing.c **** //                                                                   MEMORY INIT
3135:..\src/command_processing.c **** //==============================================================================
3136:..\src/command_processing.c **** 
3137:..\src/command_processing.c **** uint8 memInit(void)
3138:..\src/command_processing.c **** {
 22384              		.loc 1 3138 0
 22385              		.cfi_startproc
 22386              		@ args = 0, pretend = 0, frame = 8
 22387              		@ frame_needed = 1, uses_anonymous_args = 0
 22388 0000 80B5     		push	{r7, lr}
 22389              		.cfi_def_cfa_offset 8
 22390              		.cfi_offset 7, -8
 22391              		.cfi_offset 14, -4
 22392 0002 82B0     		sub	sp, sp, #8
 22393              		.cfi_def_cfa_offset 16
 22394 0004 00AF     		add	r7, sp, #0
 22395              		.cfi_def_cfa_register 7
3139:..\src/command_processing.c ****     uint8 i, j;
3140:..\src/command_processing.c **** 
3141:..\src/command_processing.c ****     //initialize memory settings
3142:..\src/command_processing.c ****     for (i=0; i<15; i++){
 22396              		.loc 1 3142 0
 22397 0006 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 492


 22398 0008 FB71     		strb	r3, [r7, #7]
 22399 000a 07E0     		b	.L859
 22400              	.L860:
3143:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22401              		.loc 1 3143 0 discriminator 3
 22402 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22403 000e B44A     		ldr	r2, .L885
 22404 0010 1344     		add	r3, r3, r2
 22405 0012 0022     		movs	r2, #0
 22406 0014 5A70     		strb	r2, [r3, #1]
3142:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22407              		.loc 1 3142 0 discriminator 3
 22408 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22409 0018 0133     		adds	r3, r3, #1
 22410 001a FB71     		strb	r3, [r7, #7]
 22411              	.L859:
3142:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22412              		.loc 1 3142 0 is_stmt 0 discriminator 1
 22413 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22414 001e 0E2B     		cmp	r3, #14
 22415 0020 F4D9     		bls	.L860
3144:..\src/command_processing.c ****     }
3145:..\src/command_processing.c ****         
3146:..\src/command_processing.c ****     // DEV STRUCT
3147:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 22416              		.loc 1 3147 0 is_stmt 1
 22417 0022 AF4B     		ldr	r3, .L885
 22418 0024 0122     		movs	r2, #1
 22419 0026 83F8A020 		strb	r2, [r3, #160]
3148:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 22420              		.loc 1 3148 0
 22421 002a AD4B     		ldr	r3, .L885
 22422 002c 0022     		movs	r2, #0
 22423 002e 83F8A720 		strb	r2, [r3, #167]
3149:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 22424              		.loc 1 3149 0
 22425 0032 AB4B     		ldr	r3, .L885
 22426 0034 0122     		movs	r2, #1
 22427 0036 83F8AC20 		strb	r2, [r3, #172]
3150:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 22428              		.loc 1 3150 0
 22429 003a A94B     		ldr	r3, .L885
 22430 003c 0022     		movs	r2, #0
 22431 003e 83F8A820 		strb	r2, [r3, #168]
3151:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 22432              		.loc 1 3151 0
 22433 0042 FFF7FEFF 		bl	reset_counters
3152:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22434              		.loc 1 3152 0
 22435 0046 0023     		movs	r3, #0
 22436 0048 FB71     		strb	r3, [r7, #7]
 22437 004a 08E0     		b	.L861
 22438              	.L862:
3153:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 22439              		.loc 1 3153 0 discriminator 3
 22440 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22441 004e A44A     		ldr	r2, .L885
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 493


 22442 0050 1344     		add	r3, r3, r2
 22443 0052 0022     		movs	r2, #0
 22444 0054 83F88020 		strb	r2, [r3, #128]
3152:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22445              		.loc 1 3152 0 discriminator 3
 22446 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22447 005a 0133     		adds	r3, r3, #1
 22448 005c FB71     		strb	r3, [r7, #7]
 22449              	.L861:
3152:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22450              		.loc 1 3152 0 is_stmt 0 discriminator 1
 22451 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22452 0060 1F2B     		cmp	r3, #31
 22453 0062 F3D9     		bls	.L862
3154:..\src/command_processing.c ****     }
3155:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 22454              		.loc 1 3155 0 is_stmt 1
 22455 0064 9E4B     		ldr	r3, .L885
 22456 0066 0022     		movs	r2, #0
 22457 0068 83F8A920 		strb	r2, [r3, #169]
3156:..\src/command_processing.c **** 
3157:..\src/command_processing.c ****     // MOTOR STRUCT
3158:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22458              		.loc 1 3158 0
 22459 006c 0023     		movs	r3, #0
 22460 006e FB71     		strb	r3, [r7, #7]
 22461 0070 15E1     		b	.L863
 22462              	.L866:
3159:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22463              		.loc 1 3159 0
 22464 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22465 0074 9A49     		ldr	r1, .L885
 22466 0076 1346     		mov	r3, r2
 22467 0078 DB00     		lsls	r3, r3, #3
 22468 007a 9B1A     		subs	r3, r3, r2
 22469 007c 1B01     		lsls	r3, r3, #4
 22470 007e 0B44     		add	r3, r3, r1
 22471 0080 B033     		adds	r3, r3, #176
 22472 0082 40F23942 		movw	r2, #1081
 22473 0086 1A60     		str	r2, [r3]
3160:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 22474              		.loc 1 3160 0
 22475 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22476 008a 9549     		ldr	r1, .L885
 22477 008c 1346     		mov	r3, r2
 22478 008e DB00     		lsls	r3, r3, #3
 22479 0090 9B1A     		subs	r3, r3, r2
 22480 0092 1B01     		lsls	r3, r3, #4
 22481 0094 0B44     		add	r3, r3, r1
 22482 0096 B433     		adds	r3, r3, #180
 22483 0098 0022     		movs	r2, #0
 22484 009a 1A60     		str	r2, [r3]
3161:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 22485              		.loc 1 3161 0
 22486 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22487 009e 9049     		ldr	r1, .L885
 22488 00a0 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 494


 22489 00a2 DB00     		lsls	r3, r3, #3
 22490 00a4 9B1A     		subs	r3, r3, r2
 22491 00a6 1B01     		lsls	r3, r3, #4
 22492 00a8 0B44     		add	r3, r3, r1
 22493 00aa B833     		adds	r3, r3, #184
 22494 00ac 4FF4E572 		mov	r2, #458
 22495 00b0 1A60     		str	r2, [r3]
3162:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 22496              		.loc 1 3162 0
 22497 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22498 00b4 8A49     		ldr	r1, .L885
 22499 00b6 1346     		mov	r3, r2
 22500 00b8 DB00     		lsls	r3, r3, #3
 22501 00ba 9B1A     		subs	r3, r3, r2
 22502 00bc 1B01     		lsls	r3, r3, #4
 22503 00be 0B44     		add	r3, r3, r1
 22504 00c0 BC33     		adds	r3, r3, #188
 22505 00c2 4FF48032 		mov	r2, #65536
 22506 00c6 1A60     		str	r2, [r3]
3163:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 22507              		.loc 1 3163 0
 22508 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22509 00ca 8549     		ldr	r1, .L885
 22510 00cc 1346     		mov	r3, r2
 22511 00ce DB00     		lsls	r3, r3, #3
 22512 00d0 9B1A     		subs	r3, r3, r2
 22513 00d2 1B01     		lsls	r3, r3, #4
 22514 00d4 0B44     		add	r3, r3, r1
 22515 00d6 C033     		adds	r3, r3, #192
 22516 00d8 4122     		movs	r2, #65
 22517 00da 1A60     		str	r2, [r3]
3164:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 22518              		.loc 1 3164 0
 22519 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22520 00de 8049     		ldr	r1, .L885
 22521 00e0 1346     		mov	r3, r2
 22522 00e2 DB00     		lsls	r3, r3, #3
 22523 00e4 9B1A     		subs	r3, r3, r2
 22524 00e6 1B01     		lsls	r3, r3, #4
 22525 00e8 0B44     		add	r3, r3, r1
 22526 00ea C433     		adds	r3, r3, #196
 22527 00ec 0022     		movs	r2, #0
 22528 00ee 1A60     		str	r2, [r3]
3165:..\src/command_processing.c **** 
3166:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 22529              		.loc 1 3166 0
 22530 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22531 00f2 7B49     		ldr	r1, .L885
 22532 00f4 1346     		mov	r3, r2
 22533 00f6 DB00     		lsls	r3, r3, #3
 22534 00f8 9B1A     		subs	r3, r3, r2
 22535 00fa 1B01     		lsls	r3, r3, #4
 22536 00fc 0B44     		add	r3, r3, r1
 22537 00fe C833     		adds	r3, r3, #200
 22538 0100 41F69912 		movw	r2, #6553
 22539 0104 1A60     		str	r2, [r3]
3167:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 495


 22540              		.loc 1 3167 0
 22541 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22542 0108 7549     		ldr	r1, .L885
 22543 010a 1346     		mov	r3, r2
 22544 010c DB00     		lsls	r3, r3, #3
 22545 010e 9B1A     		subs	r3, r3, r2
 22546 0110 1B01     		lsls	r3, r3, #4
 22547 0112 0B44     		add	r3, r3, r1
 22548 0114 CC33     		adds	r3, r3, #204
 22549 0116 0022     		movs	r2, #0
 22550 0118 1A60     		str	r2, [r3]
3168:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 22551              		.loc 1 3168 0
 22552 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22553 011c 7049     		ldr	r1, .L885
 22554 011e 1346     		mov	r3, r2
 22555 0120 DB00     		lsls	r3, r3, #3
 22556 0122 9B1A     		subs	r3, r3, r2
 22557 0124 1B01     		lsls	r3, r3, #4
 22558 0126 0B44     		add	r3, r3, r1
 22559 0128 D033     		adds	r3, r3, #208
 22560 012a 0022     		movs	r2, #0
 22561 012c 1A60     		str	r2, [r3]
3169:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 22562              		.loc 1 3169 0
 22563 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22564 0130 6B49     		ldr	r1, .L885
 22565 0132 1346     		mov	r3, r2
 22566 0134 DB00     		lsls	r3, r3, #3
 22567 0136 9B1A     		subs	r3, r3, r2
 22568 0138 1B01     		lsls	r3, r3, #4
 22569 013a 0B44     		add	r3, r3, r1
 22570 013c D433     		adds	r3, r3, #212
 22571 013e 44F6CC42 		movw	r2, #19660
 22572 0142 1A60     		str	r2, [r3]
3170:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 22573              		.loc 1 3170 0
 22574 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22575 0146 6649     		ldr	r1, .L885
 22576 0148 1346     		mov	r3, r2
 22577 014a DB00     		lsls	r3, r3, #3
 22578 014c 9B1A     		subs	r3, r3, r2
 22579 014e 1B01     		lsls	r3, r3, #4
 22580 0150 0B44     		add	r3, r3, r1
 22581 0152 D833     		adds	r3, r3, #216
 22582 0154 0D22     		movs	r2, #13
 22583 0156 1A60     		str	r2, [r3]
3171:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 22584              		.loc 1 3171 0
 22585 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22586 015a 6149     		ldr	r1, .L885
 22587 015c 1346     		mov	r3, r2
 22588 015e DB00     		lsls	r3, r3, #3
 22589 0160 9B1A     		subs	r3, r3, r2
 22590 0162 1B01     		lsls	r3, r3, #4
 22591 0164 0B44     		add	r3, r3, r1
 22592 0166 DC33     		adds	r3, r3, #220
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 496


 22593 0168 0022     		movs	r2, #0
 22594 016a 1A60     		str	r2, [r3]
3172:..\src/command_processing.c **** 
3173:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 22595              		.loc 1 3173 0
 22596 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22597 016e 5C49     		ldr	r1, .L885
 22598 0170 1346     		mov	r3, r2
 22599 0172 DB00     		lsls	r3, r3, #3
 22600 0174 9B1A     		subs	r3, r3, r2
 22601 0176 1B01     		lsls	r3, r3, #4
 22602 0178 0B44     		add	r3, r3, r1
 22603 017a E033     		adds	r3, r3, #224
 22604 017c 0122     		movs	r2, #1
 22605 017e 1A70     		strb	r2, [r3]
3174:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 22606              		.loc 1 3174 0
 22607 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22608 0182 5749     		ldr	r1, .L885
 22609 0184 1346     		mov	r3, r2
 22610 0186 DB00     		lsls	r3, r3, #3
 22611 0188 9B1A     		subs	r3, r3, r2
 22612 018a 1B01     		lsls	r3, r3, #4
 22613 018c 0B44     		add	r3, r3, r1
 22614 018e E133     		adds	r3, r3, #225
 22615 0190 0022     		movs	r2, #0
 22616 0192 1A70     		strb	r2, [r3]
3175:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 22617              		.loc 1 3175 0
 22618 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22619 0196 5249     		ldr	r1, .L885
 22620 0198 1346     		mov	r3, r2
 22621 019a DB00     		lsls	r3, r3, #3
 22622 019c 9B1A     		subs	r3, r3, r2
 22623 019e 1B01     		lsls	r3, r3, #4
 22624 01a0 0B44     		add	r3, r3, r1
 22625 01a2 E233     		adds	r3, r3, #226
 22626 01a4 0022     		movs	r2, #0
 22627 01a6 1A70     		strb	r2, [r3]
3176:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 22628              		.loc 1 3176 0
 22629 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22630 01aa 4D49     		ldr	r1, .L885
 22631 01ac 1346     		mov	r3, r2
 22632 01ae DB00     		lsls	r3, r3, #3
 22633 01b0 9B1A     		subs	r3, r3, r2
 22634 01b2 1B01     		lsls	r3, r3, #4
 22635 01b4 0B44     		add	r3, r3, r1
 22636 01b6 03F58773 		add	r3, r3, #270
 22637 01ba 0022     		movs	r2, #0
 22638 01bc 1A70     		strb	r2, [r3]
3177:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 22639              		.loc 1 3177 0
 22640 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22641 01c0 4749     		ldr	r1, .L885
 22642 01c2 1346     		mov	r3, r2
 22643 01c4 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 497


 22644 01c6 9B1A     		subs	r3, r3, r2
 22645 01c8 1B01     		lsls	r3, r3, #4
 22646 01ca 0B44     		add	r3, r3, r1
 22647 01cc 03F20F13 		addw	r3, r3, #271
 22648 01d0 0022     		movs	r2, #0
 22649 01d2 1A70     		strb	r2, [r3]
3178:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 22650              		.loc 1 3178 0
 22651 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22652 01d6 4249     		ldr	r1, .L885
 22653 01d8 1346     		mov	r3, r2
 22654 01da DB00     		lsls	r3, r3, #3
 22655 01dc 9B1A     		subs	r3, r3, r2
 22656 01de 1B01     		lsls	r3, r3, #4
 22657 01e0 0B44     		add	r3, r3, r1
 22658 01e2 F033     		adds	r3, r3, #240
 22659 01e4 0022     		movs	r2, #0
 22660 01e6 1A60     		str	r2, [r3]
3179:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 22661              		.loc 1 3179 0
 22662 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22663 01ea 3D49     		ldr	r1, .L885
 22664 01ec 1346     		mov	r3, r2
 22665 01ee DB00     		lsls	r3, r3, #3
 22666 01f0 9B1A     		subs	r3, r3, r2
 22667 01f2 1B01     		lsls	r3, r3, #4
 22668 01f4 0B44     		add	r3, r3, r1
 22669 01f6 EC33     		adds	r3, r3, #236
 22670 01f8 0022     		movs	r2, #0
 22671 01fa 1A60     		str	r2, [r3]
3180:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22672              		.loc 1 3180 0
 22673 01fc 0023     		movs	r3, #0
 22674 01fe BB71     		strb	r3, [r7, #6]
 22675 0200 10E0     		b	.L864
 22676              	.L865:
3181:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 22677              		.loc 1 3181 0 discriminator 3
 22678 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22679 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22680 0206 3648     		ldr	r0, .L885
 22681 0208 1346     		mov	r3, r2
 22682 020a DB00     		lsls	r3, r3, #3
 22683 020c 9B1A     		subs	r3, r3, r2
 22684 020e 9B00     		lsls	r3, r3, #2
 22685 0210 0B44     		add	r3, r3, r1
 22686 0212 3C33     		adds	r3, r3, #60
 22687 0214 9B00     		lsls	r3, r3, #2
 22688 0216 0344     		add	r3, r3, r0
 22689 0218 4FF00002 		mov	r2, #0
 22690 021c 5A60     		str	r2, [r3, #4]	@ float
3180:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22691              		.loc 1 3180 0 discriminator 3
 22692 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22693 0220 0133     		adds	r3, r3, #1
 22694 0222 BB71     		strb	r3, [r7, #6]
 22695              	.L864:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 498


3180:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22696              		.loc 1 3180 0 is_stmt 0 discriminator 1
 22697 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22698 0226 052B     		cmp	r3, #5
 22699 0228 EBD9     		bls	.L865
3182:..\src/command_processing.c ****         }
3183:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 22700              		.loc 1 3183 0 is_stmt 1 discriminator 2
 22701 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22702 022c 2C49     		ldr	r1, .L885
 22703 022e 1346     		mov	r3, r2
 22704 0230 DB00     		lsls	r3, r3, #3
 22705 0232 9B1A     		subs	r3, r3, r2
 22706 0234 1B01     		lsls	r3, r3, #4
 22707 0236 0B44     		add	r3, r3, r1
 22708 0238 03F58673 		add	r3, r3, #268
 22709 023c 40F2DC52 		movw	r2, #1500
 22710 0240 1A80     		strh	r2, [r3]	@ movhi
3184:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 22711              		.loc 1 3184 0 discriminator 2
 22712 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22713 0244 2649     		ldr	r1, .L885
 22714 0246 1346     		mov	r3, r2
 22715 0248 DB00     		lsls	r3, r3, #3
 22716 024a 9B1A     		subs	r3, r3, r2
 22717 024c 1B01     		lsls	r3, r3, #4
 22718 024e 0B44     		add	r3, r3, r1
 22719 0250 03F58873 		add	r3, r3, #272
 22720 0254 FA79     		ldrb	r2, [r7, #7]
 22721 0256 1A70     		strb	r2, [r3]
3185:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 22722              		.loc 1 3185 0 discriminator 2
 22723 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22724 025a 2149     		ldr	r1, .L885
 22725 025c 1346     		mov	r3, r2
 22726 025e DB00     		lsls	r3, r3, #3
 22727 0260 9B1A     		subs	r3, r3, r2
 22728 0262 1B01     		lsls	r3, r3, #4
 22729 0264 0B44     		add	r3, r3, r1
 22730 0266 E333     		adds	r3, r3, #227
 22731 0268 0122     		movs	r2, #1
 22732 026a 1A70     		strb	r2, [r3]
3186:..\src/command_processing.c ****         
3187:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22733              		.loc 1 3187 0 discriminator 2
 22734 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22735 026e 1C49     		ldr	r1, .L885
 22736 0270 1346     		mov	r3, r2
 22737 0272 DB00     		lsls	r3, r3, #3
 22738 0274 9B1A     		subs	r3, r3, r2
 22739 0276 1B01     		lsls	r3, r3, #4
 22740 0278 0B44     		add	r3, r3, r1
 22741 027a 03F21113 		addw	r3, r3, #273
 22742 027e 0122     		movs	r2, #1
 22743 0280 1A70     		strb	r2, [r3]
3188:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 22744              		.loc 1 3188 0 discriminator 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 499


 22745 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22746 0284 1649     		ldr	r1, .L885
 22747 0286 1346     		mov	r3, r2
 22748 0288 DB00     		lsls	r3, r3, #3
 22749 028a 9B1A     		subs	r3, r3, r2
 22750 028c 1B01     		lsls	r3, r3, #4
 22751 028e 0B44     		add	r3, r3, r1
 22752 0290 03F58973 		add	r3, r3, #274
 22753 0294 0022     		movs	r2, #0
 22754 0296 1A70     		strb	r2, [r3]
3158:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22755              		.loc 1 3158 0 discriminator 2
 22756 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22757 029a 0133     		adds	r3, r3, #1
 22758 029c FB71     		strb	r3, [r7, #7]
 22759              	.L863:
3158:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22760              		.loc 1 3158 0 is_stmt 0 discriminator 1
 22761 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22762 02a0 012B     		cmp	r3, #1
 22763 02a2 7FF6E6AE 		bls	.L866
3189:..\src/command_processing.c ****     }
3190:..\src/command_processing.c ****     
3191:..\src/command_processing.c ****     // ENC STRUCT
3192:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 22764              		.loc 1 3192 0 is_stmt 1
 22765 02a6 0023     		movs	r3, #0
 22766 02a8 FB71     		strb	r3, [r7, #7]
 22767 02aa 98E0     		b	.L867
 22768              	.L874:
3193:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22769              		.loc 1 3193 0
 22770 02ac 0023     		movs	r3, #0
 22771 02ae BB71     		strb	r3, [r7, #6]
 22772 02b0 0FE0     		b	.L868
 22773              	.L869:
3194:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 22774              		.loc 1 3194 0 discriminator 3
 22775 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22776 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22777 02b6 0A48     		ldr	r0, .L885
 22778 02b8 1346     		mov	r3, r2
 22779 02ba 5B00     		lsls	r3, r3, #1
 22780 02bc 1344     		add	r3, r3, r2
 22781 02be 1B01     		lsls	r3, r3, #4
 22782 02c0 0344     		add	r3, r3, r0
 22783 02c2 0B44     		add	r3, r3, r1
 22784 02c4 03F5C873 		add	r3, r3, #400
 22785 02c8 0022     		movs	r2, #0
 22786 02ca 1A70     		strb	r2, [r3]
3193:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22787              		.loc 1 3193 0 discriminator 3
 22788 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22789 02ce 0133     		adds	r3, r3, #1
 22790 02d0 BB71     		strb	r3, [r7, #6]
 22791              	.L868:
3193:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 500


 22792              		.loc 1 3193 0 is_stmt 0 discriminator 1
 22793 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22794 02d4 042B     		cmp	r3, #4
 22795 02d6 ECD9     		bls	.L869
3195:..\src/command_processing.c ****         }
3196:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22796              		.loc 1 3196 0 is_stmt 1
 22797 02d8 0023     		movs	r3, #0
 22798 02da BB71     		strb	r3, [r7, #6]
 22799 02dc 2CE0     		b	.L870
 22800              	.L886:
 22801 02de 00BF     		.align	2
 22802              	.L885:
 22803 02e0 00000000 		.word	g_mem
 22804              	.L871:
3197:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22805              		.loc 1 3197 0 discriminator 3
 22806 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22807 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22808 02e8 A548     		ldr	r0, .L887
 22809 02ea 1346     		mov	r3, r2
 22810 02ec 5B00     		lsls	r3, r3, #1
 22811 02ee 1344     		add	r3, r3, r2
 22812 02f0 1B01     		lsls	r3, r3, #4
 22813 02f2 0344     		add	r3, r3, r0
 22814 02f4 0B44     		add	r3, r3, r1
 22815 02f6 03F29513 		addw	r3, r3, #405
 22816 02fa 0322     		movs	r2, #3
 22817 02fc 1A70     		strb	r2, [r3]
3198:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 22818              		.loc 1 3198 0 discriminator 3
 22819 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22820 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22821 0302 9F48     		ldr	r0, .L887
 22822 0304 1346     		mov	r3, r2
 22823 0306 5B00     		lsls	r3, r3, #1
 22824 0308 1344     		add	r3, r3, r2
 22825 030a 9B00     		lsls	r3, r3, #2
 22826 030c 0B44     		add	r3, r3, r1
 22827 030e 6833     		adds	r3, r3, #104
 22828 0310 9B00     		lsls	r3, r3, #2
 22829 0312 0344     		add	r3, r3, r0
 22830 0314 4FF07E52 		mov	r2, #1065353216
 22831 0318 5A60     		str	r2, [r3, #4]	@ float
3199:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 22832              		.loc 1 3199 0 discriminator 3
 22833 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22834 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22835 031e 9848     		ldr	r0, .L887
 22836 0320 1346     		mov	r3, r2
 22837 0322 5B00     		lsls	r3, r3, #1
 22838 0324 1344     		add	r3, r3, r2
 22839 0326 9B00     		lsls	r3, r3, #2
 22840 0328 0B44     		add	r3, r3, r1
 22841 032a 6633     		adds	r3, r3, #102
 22842 032c 0022     		movs	r2, #0
 22843 032e 40F82320 		str	r2, [r0, r3, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 501


3196:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22844              		.loc 1 3196 0 discriminator 3
 22845 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22846 0334 0133     		adds	r3, r3, #1
 22847 0336 BB71     		strb	r3, [r7, #6]
 22848              	.L870:
3196:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22849              		.loc 1 3196 0 is_stmt 0 discriminator 1
 22850 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22851 033a 022B     		cmp	r3, #2
 22852 033c D2D9     		bls	.L871
3200:..\src/command_processing.c ****         }
3201:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 22853              		.loc 1 3201 0 is_stmt 1
 22854 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22855 0340 8F49     		ldr	r1, .L887
 22856 0342 1346     		mov	r3, r2
 22857 0344 5B00     		lsls	r3, r3, #1
 22858 0346 1344     		add	r3, r3, r2
 22859 0348 1B01     		lsls	r3, r3, #4
 22860 034a 0B44     		add	r3, r3, r1
 22861 034c 03F5D873 		add	r3, r3, #432
 22862 0350 0022     		movs	r2, #0
 22863 0352 1A70     		strb	r2, [r3]
3202:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 22864              		.loc 1 3202 0
 22865 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22866 0356 8A49     		ldr	r1, .L887
 22867 0358 1346     		mov	r3, r2
 22868 035a 5B00     		lsls	r3, r3, #1
 22869 035c 1344     		add	r3, r3, r2
 22870 035e 1B01     		lsls	r3, r3, #4
 22871 0360 0B44     		add	r3, r3, r1
 22872 0362 03F5DA73 		add	r3, r3, #436
 22873 0366 1622     		movs	r2, #22
 22874 0368 1A70     		strb	r2, [r3]
3203:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22875              		.loc 1 3203 0
 22876 036a 0023     		movs	r3, #0
 22877 036c BB71     		strb	r3, [r7, #6]
 22878 036e 0FE0     		b	.L872
 22879              	.L873:
3204:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 22880              		.loc 1 3204 0 discriminator 3
 22881 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22882 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22883 0374 8248     		ldr	r0, .L887
 22884 0376 1346     		mov	r3, r2
 22885 0378 5B00     		lsls	r3, r3, #1
 22886 037a 1344     		add	r3, r3, r2
 22887 037c 1B01     		lsls	r3, r3, #4
 22888 037e 0344     		add	r3, r3, r0
 22889 0380 0B44     		add	r3, r3, r1
 22890 0382 03F2B113 		addw	r3, r3, #433
 22891 0386 BA79     		ldrb	r2, [r7, #6]
 22892 0388 1A70     		strb	r2, [r3]
3203:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 502


 22893              		.loc 1 3203 0 discriminator 3
 22894 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22895 038c 0133     		adds	r3, r3, #1
 22896 038e BB71     		strb	r3, [r7, #6]
 22897              	.L872:
3203:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22898              		.loc 1 3203 0 is_stmt 0 discriminator 1
 22899 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22900 0392 022B     		cmp	r3, #2
 22901 0394 ECD9     		bls	.L873
3205:..\src/command_processing.c ****         }
3206:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 22902              		.loc 1 3206 0 is_stmt 1 discriminator 2
 22903 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22904 0398 7949     		ldr	r1, .L887
 22905 039a 1346     		mov	r3, r2
 22906 039c 5B00     		lsls	r3, r3, #1
 22907 039e 1344     		add	r3, r3, r2
 22908 03a0 1B01     		lsls	r3, r3, #4
 22909 03a2 0B44     		add	r3, r3, r1
 22910 03a4 03F2B513 		addw	r3, r3, #437
 22911 03a8 0F22     		movs	r2, #15
 22912 03aa 1A70     		strb	r2, [r3]
3207:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 22913              		.loc 1 3207 0 discriminator 2
 22914 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22915 03ae 7449     		ldr	r1, .L887
 22916 03b0 1346     		mov	r3, r2
 22917 03b2 5B00     		lsls	r3, r3, #1
 22918 03b4 1344     		add	r3, r3, r2
 22919 03b6 1B01     		lsls	r3, r3, #4
 22920 03b8 0B44     		add	r3, r3, r1
 22921 03ba 03F5DB73 		add	r3, r3, #438
 22922 03be 0E22     		movs	r2, #14
 22923 03c0 1A70     		strb	r2, [r3]
3208:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 22924              		.loc 1 3208 0 discriminator 2
 22925 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22926 03c4 6E49     		ldr	r1, .L887
 22927 03c6 1346     		mov	r3, r2
 22928 03c8 5B00     		lsls	r3, r3, #1
 22929 03ca 1344     		add	r3, r3, r2
 22930 03cc 1B01     		lsls	r3, r3, #4
 22931 03ce 0B44     		add	r3, r3, r1
 22932 03d0 03F2B713 		addw	r3, r3, #439
 22933 03d4 0122     		movs	r2, #1
 22934 03d6 1A70     		strb	r2, [r3]
3192:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22935              		.loc 1 3192 0 discriminator 2
 22936 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22937 03da 0133     		adds	r3, r3, #1
 22938 03dc FB71     		strb	r3, [r7, #7]
 22939              	.L867:
3192:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22940              		.loc 1 3192 0 is_stmt 0 discriminator 1
 22941 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22942 03e0 012B     		cmp	r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 503


 22943 03e2 7FF663AF 		bls	.L874
3209:..\src/command_processing.c ****     }
3210:..\src/command_processing.c ****     
3211:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22944              		.loc 1 3211 0 is_stmt 1
 22945 03e6 0023     		movs	r3, #0
 22946 03e8 FB71     		strb	r3, [r7, #7]
 22947 03ea 2EE0     		b	.L875
 22948              	.L876:
3212:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22949              		.loc 1 3212 0 discriminator 3
 22950 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22951 03ee 6449     		ldr	r1, .L887
 22952 03f0 1346     		mov	r3, r2
 22953 03f2 DB00     		lsls	r3, r3, #3
 22954 03f4 9B1A     		subs	r3, r3, r2
 22955 03f6 1B01     		lsls	r3, r3, #4
 22956 03f8 0B44     		add	r3, r3, r1
 22957 03fa E433     		adds	r3, r3, #228
 22958 03fc 0022     		movs	r2, #0
 22959 03fe 1A60     		str	r2, [r3]
3213:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 22960              		.loc 1 3213 0 discriminator 3
 22961 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22962 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 22963 0404 5E48     		ldr	r0, .L887
 22964 0406 0B46     		mov	r3, r1
 22965 0408 DB00     		lsls	r3, r3, #3
 22966 040a 5B1A     		subs	r3, r3, r1
 22967 040c 1B01     		lsls	r3, r3, #4
 22968 040e 0344     		add	r3, r3, r0
 22969 0410 03F58873 		add	r3, r3, #272
 22970 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22971 0416 1846     		mov	r0, r3
 22972 0418 5949     		ldr	r1, .L887
 22973 041a 0346     		mov	r3, r0
 22974 041c 5B00     		lsls	r3, r3, #1
 22975 041e 0344     		add	r3, r3, r0
 22976 0420 1B01     		lsls	r3, r3, #4
 22977 0422 0B44     		add	r3, r3, r1
 22978 0424 03F29513 		addw	r3, r3, #405
 22979 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22980 042a 1946     		mov	r1, r3
 22981 042c 44F63823 		movw	r3, #19000
 22982 0430 03FA01F1 		lsl	r1, r3, r1
 22983 0434 5248     		ldr	r0, .L887
 22984 0436 1346     		mov	r3, r2
 22985 0438 DB00     		lsls	r3, r3, #3
 22986 043a 9B1A     		subs	r3, r3, r2
 22987 043c 1B01     		lsls	r3, r3, #4
 22988 043e 0344     		add	r3, r3, r0
 22989 0440 E833     		adds	r3, r3, #232
 22990 0442 1960     		str	r1, [r3]
3211:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22991              		.loc 1 3211 0 discriminator 3
 22992 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22993 0446 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 504


 22994 0448 FB71     		strb	r3, [r7, #7]
 22995              	.L875:
3211:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22996              		.loc 1 3211 0 is_stmt 0 discriminator 1
 22997 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22998 044c 012B     		cmp	r3, #1
 22999 044e CDD9     		bls	.L876
3214:..\src/command_processing.c ****     }
3215:..\src/command_processing.c ****     
3216:..\src/command_processing.c ****     // EMG STRUCT     
3217:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23000              		.loc 1 3217 0 is_stmt 1
 23001 0450 4B4B     		ldr	r3, .L887
 23002 0452 C822     		movs	r2, #200
 23003 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3218:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23004              		.loc 1 3218 0
 23005 0458 494B     		ldr	r3, .L887
 23006 045a C822     		movs	r2, #200
 23007 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3219:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23008              		.loc 1 3219 0
 23009 0460 474B     		ldr	r3, .L887
 23010 0462 4FF48062 		mov	r2, #1024
 23011 0466 C3F8F421 		str	r2, [r3, #500]
3220:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 23012              		.loc 1 3220 0
 23013 046a 454B     		ldr	r3, .L887
 23014 046c 4FF48062 		mov	r2, #1024
 23015 0470 C3F8F821 		str	r2, [r3, #504]
3221:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 23016              		.loc 1 3221 0
 23017 0474 424B     		ldr	r3, .L887
 23018 0476 6422     		movs	r2, #100
 23019 0478 83F8FC21 		strb	r2, [r3, #508]
3222:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 23020              		.loc 1 3222 0
 23021 047c 404B     		ldr	r3, .L887
 23022 047e 6422     		movs	r2, #100
 23023 0480 83F8FD21 		strb	r2, [r3, #509]
3223:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23024              		.loc 1 3223 0
 23025 0484 3E4B     		ldr	r3, .L887
 23026 0486 0022     		movs	r2, #0
 23027 0488 83F8FE21 		strb	r2, [r3, #510]
3224:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 23028              		.loc 1 3224 0
 23029 048c 3C4B     		ldr	r3, .L887
 23030 048e 0022     		movs	r2, #0
 23031 0490 83F8FF21 		strb	r2, [r3, #511]
3225:..\src/command_processing.c **** 
3226:..\src/command_processing.c ****     // IMU STRUCT
3227:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23032              		.loc 1 3227 0
 23033 0494 3A4B     		ldr	r3, .L887
 23034 0496 0022     		movs	r2, #0
 23035 0498 83F80022 		strb	r2, [r3, #512]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 505


3228:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 23036              		.loc 1 3228 0
 23037 049c 384B     		ldr	r3, .L887
 23038 049e 0022     		movs	r2, #0
 23039 04a0 83F80122 		strb	r2, [r3, #513]
3229:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 23040              		.loc 1 3229 0
 23041 04a4 0023     		movs	r3, #0
 23042 04a6 FB71     		strb	r3, [r7, #7]
 23043 04a8 34E0     		b	.L877
 23044              	.L878:
3230:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23045              		.loc 1 3230 0 discriminator 3
 23046 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23047 04ac 3449     		ldr	r1, .L887
 23048 04ae 1346     		mov	r3, r2
 23049 04b0 9B00     		lsls	r3, r3, #2
 23050 04b2 1344     		add	r3, r3, r2
 23051 04b4 0B44     		add	r3, r3, r1
 23052 04b6 03F20223 		addw	r3, r3, #514
 23053 04ba 0122     		movs	r2, #1
 23054 04bc 1A70     		strb	r2, [r3]
3231:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 23055              		.loc 1 3231 0 discriminator 3
 23056 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23057 04c0 2F49     		ldr	r1, .L887
 23058 04c2 1346     		mov	r3, r2
 23059 04c4 9B00     		lsls	r3, r3, #2
 23060 04c6 1344     		add	r3, r3, r2
 23061 04c8 0B44     		add	r3, r3, r1
 23062 04ca 03F20323 		addw	r3, r3, #515
 23063 04ce 0122     		movs	r2, #1
 23064 04d0 1A70     		strb	r2, [r3]
3232:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 23065              		.loc 1 3232 0 discriminator 3
 23066 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23067 04d4 2A49     		ldr	r1, .L887
 23068 04d6 1346     		mov	r3, r2
 23069 04d8 9B00     		lsls	r3, r3, #2
 23070 04da 1344     		add	r3, r3, r2
 23071 04dc 0B44     		add	r3, r3, r1
 23072 04de 03F50173 		add	r3, r3, #516
 23073 04e2 0022     		movs	r2, #0
 23074 04e4 1A70     		strb	r2, [r3]
3233:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 23075              		.loc 1 3233 0 discriminator 3
 23076 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23077 04e8 2549     		ldr	r1, .L887
 23078 04ea 1346     		mov	r3, r2
 23079 04ec 9B00     		lsls	r3, r3, #2
 23080 04ee 1344     		add	r3, r3, r2
 23081 04f0 0B44     		add	r3, r3, r1
 23082 04f2 03F20523 		addw	r3, r3, #517
 23083 04f6 0022     		movs	r2, #0
 23084 04f8 1A70     		strb	r2, [r3]
3234:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 23085              		.loc 1 3234 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 506


 23086 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23087 04fc 2049     		ldr	r1, .L887
 23088 04fe 1346     		mov	r3, r2
 23089 0500 9B00     		lsls	r3, r3, #2
 23090 0502 1344     		add	r3, r3, r2
 23091 0504 0B44     		add	r3, r3, r1
 23092 0506 03F20623 		addw	r3, r3, #518
 23093 050a 0022     		movs	r2, #0
 23094 050c 1A70     		strb	r2, [r3]
3229:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23095              		.loc 1 3229 0 discriminator 3
 23096 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23097 0510 0133     		adds	r3, r3, #1
 23098 0512 FB71     		strb	r3, [r7, #7]
 23099              	.L877:
3229:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23100              		.loc 1 3229 0 is_stmt 0 discriminator 1
 23101 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23102 0516 042B     		cmp	r3, #4
 23103 0518 C7D9     		bls	.L878
3235:..\src/command_processing.c ****     }
3236:..\src/command_processing.c ****      
3237:..\src/command_processing.c ****     // EXP STRUCT
3238:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23104              		.loc 1 3238 0 is_stmt 1
 23105 051a 194B     		ldr	r3, .L887
 23106 051c 0022     		movs	r2, #0
 23107 051e 83F82622 		strb	r2, [r3, #550]
3239:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 23108              		.loc 1 3239 0
 23109 0522 174B     		ldr	r3, .L887
 23110 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23111 0528 1233     		adds	r3, r3, #18
 23112 052a 5B01     		lsls	r3, r3, #5
 23113 052c 144A     		ldr	r2, .L887
 23114 052e 1344     		add	r3, r3, r2
 23115 0530 144A     		ldr	r2, .L887+4
 23116 0532 1068     		ldr	r0, [r2]	@ unaligned
 23117 0534 1860     		str	r0, [r3]	@ unaligned
 23118 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23119 0538 9279     		ldrb	r2, [r2, #6]
 23120 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 23121 053c 9A71     		strb	r2, [r3, #6]
3240:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23122              		.loc 1 3240 0
 23123 053e 104B     		ldr	r3, .L887
 23124 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 23125 0544 012B     		cmp	r3, #1
 23126 0546 13D1     		bne	.L879
3241:..\src/command_processing.c ****         // Set date of maintenance from RTC
3242:..\src/command_processing.c ****         store_RTC_current_time();
 23127              		.loc 1 3242 0
 23128 0548 FFF7FEFF 		bl	store_RTC_current_time
3243:..\src/command_processing.c ****         
3244:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 23129              		.loc 1 3244 0
 23130 054c 0C4B     		ldr	r3, .L887
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 507


 23131 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 23132 0552 0B4B     		ldr	r3, .L887
 23133 0554 83F8A420 		strb	r2, [r3, #164]
3245:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 23134              		.loc 1 3245 0
 23135 0558 094B     		ldr	r3, .L887
 23136 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 23137 055e 084B     		ldr	r3, .L887
 23138 0560 83F8A520 		strb	r2, [r3, #165]
3246:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 23139              		.loc 1 3246 0
 23140 0564 064B     		ldr	r3, .L887
 23141 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 23142 056a 054B     		ldr	r3, .L887
 23143 056c 83F8A620 		strb	r2, [r3, #166]
 23144              	.L879:
3247:..\src/command_processing.c ****     }
3248:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 23145              		.loc 1 3248 0
 23146 0570 034B     		ldr	r3, .L887
 23147 0572 0022     		movs	r2, #0
 23148 0574 83F82722 		strb	r2, [r3, #551]
3249:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23149              		.loc 1 3249 0
 23150 0578 0023     		movs	r3, #0
 23151 057a FB71     		strb	r3, [r7, #7]
 23152 057c 0DE0     		b	.L880
 23153              	.L888:
 23154 057e 00BF     		.align	2
 23155              	.L887:
 23156 0580 00000000 		.word	g_mem
 23157 0584 781F0000 		.word	.LC298
 23158              	.L881:
3250:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 23159              		.loc 1 3250 0 discriminator 3
 23160 0588 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23161 058a 284A     		ldr	r2, .L889
 23162 058c 1344     		add	r3, r3, r2
 23163 058e 0022     		movs	r2, #0
 23164 0590 83F82822 		strb	r2, [r3, #552]
3249:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23165              		.loc 1 3249 0 discriminator 3
 23166 0594 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23167 0596 0133     		adds	r3, r3, #1
 23168 0598 FB71     		strb	r3, [r7, #7]
 23169              	.L880:
3249:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23170              		.loc 1 3249 0 is_stmt 0 discriminator 1
 23171 059a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23172 059c 0B2B     		cmp	r3, #11
 23173 059e F3D9     		bls	.L881
3251:..\src/command_processing.c ****     }
3252:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3253:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 23174              		.loc 1 3253 0 is_stmt 1
 23175 05a0 224B     		ldr	r3, .L889
 23176 05a2 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 508


 23177 05a4 83F82A22 		strb	r2, [r3, #554]
3254:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 23178              		.loc 1 3254 0
 23179 05a8 204B     		ldr	r3, .L889
 23180 05aa 0122     		movs	r2, #1
 23181 05ac 83F82B22 		strb	r2, [r3, #555]
3255:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23182              		.loc 1 3255 0
 23183 05b0 1E4B     		ldr	r3, .L889
 23184 05b2 0022     		movs	r2, #0
 23185 05b4 83F83422 		strb	r2, [r3, #564]
3256:..\src/command_processing.c **** 
3257:..\src/command_processing.c ****     // WR STRUCT (default in generic fw)
3258:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23186              		.loc 1 3258 0
 23187 05b8 1C4B     		ldr	r3, .L889
 23188 05ba 0022     		movs	r2, #0
 23189 05bc 83F8E022 		strb	r2, [r3, #736]
3259:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23190              		.loc 1 3259 0
 23191 05c0 1A4B     		ldr	r3, .L889
 23192 05c2 4FF44872 		mov	r2, #800
 23193 05c6 A3F8E222 		strh	r2, [r3, #738]	@ movhi
3260:..\src/command_processing.c **** 
3261:..\src/command_processing.c **** 
3262:..\src/command_processing.c **** 
3263:..\src/command_processing.c **** 
3264:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3265:..\src/command_processing.c ****     memInit_Master();
 23194              		.loc 1 3265 0
 23195 05ca FFF7FEFF 		bl	memInit_Master
3266:..\src/command_processing.c **** 
3267:..\src/command_processing.c **** 
3268:..\src/command_processing.c **** 
3269:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3270:..\src/command_processing.c ****     memInit_AirChambers_Vibrotactile_Fb();
 23196              		.loc 1 3270 0
 23197 05ce FFF7FEFF 		bl	memInit_AirChambers_Vibrotactile_Fb
3271:..\src/command_processing.c **** 
3272:..\src/command_processing.c **** 
3273:..\src/command_processing.c **** 
3274:..\src/command_processing.c ****     // JOYSTICK STRUCT
3275:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 23198              		.loc 1 3275 0
 23199 05d2 164B     		ldr	r3, .L889
 23200 05d4 9622     		movs	r2, #150
 23201 05d6 A3F8B022 		strh	r2, [r3, #688]	@ movhi
3276:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 23202              		.loc 1 3276 0
 23203 05da 144B     		ldr	r3, .L889
 23204 05dc 6422     		movs	r2, #100
 23205 05de A3F8B222 		strh	r2, [r3, #690]	@ movhi
3277:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 23206              		.loc 1 3277 0
 23207 05e2 124B     		ldr	r3, .L889
 23208 05e4 4FF48062 		mov	r2, #1024
 23209 05e8 A3F8B422 		strh	r2, [r3, #692]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 509


3278:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 23210              		.loc 1 3278 0
 23211 05ec 0F4B     		ldr	r3, .L889
 23212 05ee 4FF48062 		mov	r2, #1024
 23213 05f2 A3F8B622 		strh	r2, [r3, #694]	@ movhi
3279:..\src/command_processing.c **** 
3280:..\src/command_processing.c ****     // Default generic user_id
3281:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 23214              		.loc 1 3281 0
 23215 05f6 0D4B     		ldr	r3, .L889
 23216 05f8 0022     		movs	r2, #0
 23217 05fa 83F8AB20 		strb	r2, [r3, #171]
3282:..\src/command_processing.c **** 
3283:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3284:..\src/command_processing.c ****     g_mem.flag = TRUE;
 23218              		.loc 1 3284 0
 23219 05fe 0B4B     		ldr	r3, .L889
 23220 0600 0122     		movs	r2, #1
 23221 0602 1A70     		strb	r2, [r3]
3285:..\src/command_processing.c ****     
3286:..\src/command_processing.c ****     //write that configuration to EEPROM
3287:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 23222              		.loc 1 3287 0
 23223 0604 0020     		movs	r0, #0
 23224 0606 FFF7FEFF 		bl	memStore
 23225 060a 0346     		mov	r3, r0
 23226 060c 002B     		cmp	r3, #0
 23227 060e 07D0     		beq	.L882
 23228              		.loc 1 3287 0 is_stmt 0 discriminator 1
 23229 0610 3220     		movs	r0, #50
 23230 0612 FFF7FEFF 		bl	memStore
 23231 0616 0346     		mov	r3, r0
 23232 0618 002B     		cmp	r3, #0
 23233 061a 01D0     		beq	.L882
 23234              		.loc 1 3287 0 discriminator 3
 23235 061c 0123     		movs	r3, #1
 23236 061e 00E0     		b	.L883
 23237              	.L882:
 23238              		.loc 1 3287 0 discriminator 4
 23239 0620 0023     		movs	r3, #0
 23240              	.L883:
 23241              		.loc 1 3287 0 discriminator 6
 23242 0622 DBB2     		uxtb	r3, r3
3288:..\src/command_processing.c **** }
 23243              		.loc 1 3288 0 is_stmt 1 discriminator 6
 23244 0624 1846     		mov	r0, r3
 23245 0626 0837     		adds	r7, r7, #8
 23246              		.cfi_def_cfa_offset 8
 23247 0628 BD46     		mov	sp, r7
 23248              		.cfi_def_cfa_register 13
 23249              		@ sp needed
 23250 062a 80BD     		pop	{r7, pc}
 23251              	.L890:
 23252              		.align	2
 23253              	.L889:
 23254 062c 00000000 		.word	g_mem
 23255              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 510


 23256              	.LFE89:
 23257              		.size	memInit, .-memInit
 23258              		.section	.rodata
 23259 1f7f 00       		.align	2
 23260              	.LC299:
 23261 1f80 55535230 		.ascii	"USR001\000"
 23261      303100
 23262              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 23263              		.align	2
 23264              		.global	memInit_SoftHandPro
 23265              		.thumb
 23266              		.thumb_func
 23267              		.type	memInit_SoftHandPro, %function
 23268              	memInit_SoftHandPro:
 23269              	.LFB90:
3289:..\src/command_processing.c **** 
3290:..\src/command_processing.c **** //==============================================================================
3291:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3292:..\src/command_processing.c **** //==============================================================================
3293:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3294:..\src/command_processing.c **** {
 23270              		.loc 1 3294 0
 23271              		.cfi_startproc
 23272              		@ args = 0, pretend = 0, frame = 8
 23273              		@ frame_needed = 1, uses_anonymous_args = 0
 23274              		@ link register save eliminated.
 23275 0000 80B4     		push	{r7}
 23276              		.cfi_def_cfa_offset 4
 23277              		.cfi_offset 7, -4
 23278 0002 83B0     		sub	sp, sp, #12
 23279              		.cfi_def_cfa_offset 16
 23280 0004 00AF     		add	r7, sp, #0
 23281              		.cfi_def_cfa_register 7
3295:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 23282              		.loc 1 3295 0
 23283 0006 0023     		movs	r3, #0
 23284 0008 FB70     		strb	r3, [r7, #3]
3296:..\src/command_processing.c ****     
3297:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3298:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23285              		.loc 1 3298 0
 23286 000a 8B4B     		ldr	r3, .L894
 23287 000c 0122     		movs	r2, #1
 23288 000e 83F8A720 		strb	r2, [r3, #167]
3299:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 23289              		.loc 1 3299 0
 23290 0012 894B     		ldr	r3, .L894
 23291 0014 0022     		movs	r2, #0
 23292 0016 83F8AC20 		strb	r2, [r3, #172]
3300:..\src/command_processing.c ****     
3301:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 23293              		.loc 1 3301 0
 23294 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23295 001c 8649     		ldr	r1, .L894
 23296 001e 1346     		mov	r3, r2
 23297 0020 DB00     		lsls	r3, r3, #3
 23298 0022 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 511


 23299 0024 1B01     		lsls	r3, r3, #4
 23300 0026 0B44     		add	r3, r3, r1
 23301 0028 E033     		adds	r3, r3, #224
 23302 002a 0122     		movs	r2, #1
 23303 002c 1A70     		strb	r2, [r3]
3302:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 23304              		.loc 1 3302 0
 23305 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23306 0030 8149     		ldr	r1, .L894
 23307 0032 1346     		mov	r3, r2
 23308 0034 DB00     		lsls	r3, r3, #3
 23309 0036 9B1A     		subs	r3, r3, r2
 23310 0038 1B01     		lsls	r3, r3, #4
 23311 003a 0B44     		add	r3, r3, r1
 23312 003c 03F58773 		add	r3, r3, #270
 23313 0040 0022     		movs	r2, #0
 23314 0042 1A70     		strb	r2, [r3]
3303:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 23315              		.loc 1 3303 0
 23316 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23317 0046 7C49     		ldr	r1, .L894
 23318 0048 1346     		mov	r3, r2
 23319 004a DB00     		lsls	r3, r3, #3
 23320 004c 9B1A     		subs	r3, r3, r2
 23321 004e 1B01     		lsls	r3, r3, #4
 23322 0050 0B44     		add	r3, r3, r1
 23323 0052 03F20F13 		addw	r3, r3, #271
 23324 0056 0022     		movs	r2, #0
 23325 0058 1A70     		strb	r2, [r3]
3304:..\src/command_processing.c ****     
3305:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3306:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 23326              		.loc 1 3306 0
 23327 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23328 005c 764B     		ldr	r3, .L894
 23329 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 23330 0062 7549     		ldr	r1, .L894
 23331 0064 1346     		mov	r3, r2
 23332 0066 DB00     		lsls	r3, r3, #3
 23333 0068 9B1A     		subs	r3, r3, r2
 23334 006a 1B01     		lsls	r3, r3, #4
 23335 006c 0B44     		add	r3, r3, r1
 23336 006e 03F58873 		add	r3, r3, #272
 23337 0072 0246     		mov	r2, r0
 23338 0074 1A70     		strb	r2, [r3]
3307:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23339              		.loc 1 3307 0
 23340 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23341 0078 6F49     		ldr	r1, .L894
 23342 007a 1346     		mov	r3, r2
 23343 007c DB00     		lsls	r3, r3, #3
 23344 007e 9B1A     		subs	r3, r3, r2
 23345 0080 1B01     		lsls	r3, r3, #4
 23346 0082 0B44     		add	r3, r3, r1
 23347 0084 03F21113 		addw	r3, r3, #273
 23348 0088 0122     		movs	r2, #1
 23349 008a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 512


3308:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 23350              		.loc 1 3308 0
 23351 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23352 008e 6A49     		ldr	r1, .L894
 23353 0090 1346     		mov	r3, r2
 23354 0092 DB00     		lsls	r3, r3, #3
 23355 0094 9B1A     		subs	r3, r3, r2
 23356 0096 1B01     		lsls	r3, r3, #4
 23357 0098 0B44     		add	r3, r3, r1
 23358 009a 03F58973 		add	r3, r3, #274
 23359 009e 0122     		movs	r2, #1
 23360 00a0 1A70     		strb	r2, [r3]
3309:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 23361              		.loc 1 3309 0
 23362 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23363 00a4 6449     		ldr	r1, .L894
 23364 00a6 1346     		mov	r3, r2
 23365 00a8 DB00     		lsls	r3, r3, #3
 23366 00aa 9B1A     		subs	r3, r3, r2
 23367 00ac 1B01     		lsls	r3, r3, #4
 23368 00ae 0B44     		add	r3, r3, r1
 23369 00b0 E433     		adds	r3, r3, #228
 23370 00b2 0022     		movs	r2, #0
 23371 00b4 1A60     		str	r2, [r3]
3310:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 23372              		.loc 1 3310 0
 23373 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23374 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 23375 00ba 5F48     		ldr	r0, .L894
 23376 00bc 0B46     		mov	r3, r1
 23377 00be DB00     		lsls	r3, r3, #3
 23378 00c0 5B1A     		subs	r3, r3, r1
 23379 00c2 1B01     		lsls	r3, r3, #4
 23380 00c4 0344     		add	r3, r3, r0
 23381 00c6 03F58873 		add	r3, r3, #272
 23382 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23383 00cc 1846     		mov	r0, r3
 23384 00ce 5A49     		ldr	r1, .L894
 23385 00d0 0346     		mov	r3, r0
 23386 00d2 5B00     		lsls	r3, r3, #1
 23387 00d4 0344     		add	r3, r3, r0
 23388 00d6 1B01     		lsls	r3, r3, #4
 23389 00d8 0B44     		add	r3, r3, r1
 23390 00da 03F29513 		addw	r3, r3, #405
 23391 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23392 00e0 1946     		mov	r1, r3
 23393 00e2 4FF47A53 		mov	r3, #16000
 23394 00e6 03FA01F1 		lsl	r1, r3, r1
 23395 00ea 5348     		ldr	r0, .L894
 23396 00ec 1346     		mov	r3, r2
 23397 00ee DB00     		lsls	r3, r3, #3
 23398 00f0 9B1A     		subs	r3, r3, r2
 23399 00f2 1B01     		lsls	r3, r3, #4
 23400 00f4 0344     		add	r3, r3, r0
 23401 00f6 E833     		adds	r3, r3, #232
 23402 00f8 1960     		str	r1, [r3]
 23403              	.LBB30:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 513


3311:..\src/command_processing.c ****     
3312:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 23404              		.loc 1 3312 0
 23405 00fa 0023     		movs	r3, #0
 23406 00fc 7B60     		str	r3, [r7, #4]
 23407 00fe 2EE0     		b	.L892
 23408              	.L893:
3313:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3314:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 23409              		.loc 1 3314 0 discriminator 3
 23410 0100 4D49     		ldr	r1, .L894
 23411 0102 7A68     		ldr	r2, [r7, #4]
 23412 0104 1346     		mov	r3, r2
 23413 0106 5B00     		lsls	r3, r3, #1
 23414 0108 1344     		add	r3, r3, r2
 23415 010a 1B01     		lsls	r3, r3, #4
 23416 010c 0B44     		add	r3, r3, r1
 23417 010e 03F5D873 		add	r3, r3, #432
 23418 0112 0122     		movs	r2, #1
 23419 0114 1A70     		strb	r2, [r3]
3315:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 23420              		.loc 1 3315 0 discriminator 3
 23421 0116 4849     		ldr	r1, .L894
 23422 0118 7A68     		ldr	r2, [r7, #4]
 23423 011a 1346     		mov	r3, r2
 23424 011c 5B00     		lsls	r3, r3, #1
 23425 011e 1344     		add	r3, r3, r2
 23426 0120 1B01     		lsls	r3, r3, #4
 23427 0122 0B44     		add	r3, r3, r1
 23428 0124 03F2B513 		addw	r3, r3, #437
 23429 0128 2322     		movs	r2, #35
 23430 012a 1A70     		strb	r2, [r3]
3316:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 23431              		.loc 1 3316 0 discriminator 3
 23432 012c 4249     		ldr	r1, .L894
 23433 012e 7A68     		ldr	r2, [r7, #4]
 23434 0130 1346     		mov	r3, r2
 23435 0132 5B00     		lsls	r3, r3, #1
 23436 0134 1344     		add	r3, r3, r2
 23437 0136 1B01     		lsls	r3, r3, #4
 23438 0138 0B44     		add	r3, r3, r1
 23439 013a 03F5DB73 		add	r3, r3, #438
 23440 013e 0322     		movs	r2, #3
 23441 0140 1A70     		strb	r2, [r3]
3317:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 23442              		.loc 1 3317 0 discriminator 3
 23443 0142 3D49     		ldr	r1, .L894
 23444 0144 7A68     		ldr	r2, [r7, #4]
 23445 0146 1346     		mov	r3, r2
 23446 0148 5B00     		lsls	r3, r3, #1
 23447 014a 1344     		add	r3, r3, r2
 23448 014c 1B01     		lsls	r3, r3, #4
 23449 014e 0B44     		add	r3, r3, r1
 23450 0150 03F2B713 		addw	r3, r3, #439
 23451 0154 FF22     		movs	r2, #255
 23452 0156 1A70     		strb	r2, [r3]
3312:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 514


 23453              		.loc 1 3312 0 discriminator 3
 23454 0158 7B68     		ldr	r3, [r7, #4]
 23455 015a 0133     		adds	r3, r3, #1
 23456 015c 7B60     		str	r3, [r7, #4]
 23457              	.L892:
3312:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23458              		.loc 1 3312 0 is_stmt 0 discriminator 1
 23459 015e 7B68     		ldr	r3, [r7, #4]
 23460 0160 012B     		cmp	r3, #1
 23461 0162 CDDD     		ble	.L893
 23462              	.LBE30:
3318:..\src/command_processing.c ****     }
3319:..\src/command_processing.c ****     
3320:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23463              		.loc 1 3320 0 is_stmt 1
 23464 0164 344B     		ldr	r3, .L894
 23465 0166 4FF48062 		mov	r2, #1024
 23466 016a C3F8F421 		str	r2, [r3, #500]
3321:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 23467              		.loc 1 3321 0
 23468 016e 324B     		ldr	r3, .L894
 23469 0170 4FF48062 		mov	r2, #1024
 23470 0174 C3F8F821 		str	r2, [r3, #504]
3322:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23471              		.loc 1 3322 0
 23472 0178 2F4B     		ldr	r3, .L894
 23473 017a C822     		movs	r2, #200
 23474 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3323:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23475              		.loc 1 3323 0
 23476 0180 2D4B     		ldr	r3, .L894
 23477 0182 C822     		movs	r2, #200
 23478 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3324:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 23479              		.loc 1 3324 0
 23480 0188 2B4B     		ldr	r3, .L894
 23481 018a 6422     		movs	r2, #100
 23482 018c 83F8FC21 		strb	r2, [r3, #508]
3325:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 23483              		.loc 1 3325 0
 23484 0190 294B     		ldr	r3, .L894
 23485 0192 6422     		movs	r2, #100
 23486 0194 83F8FD21 		strb	r2, [r3, #509]
3326:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23487              		.loc 1 3326 0
 23488 0198 274B     		ldr	r3, .L894
 23489 019a 0022     		movs	r2, #0
 23490 019c 83F8FE21 		strb	r2, [r3, #510]
3327:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 23491              		.loc 1 3327 0
 23492 01a0 254B     		ldr	r3, .L894
 23493 01a2 0022     		movs	r2, #0
 23494 01a4 83F8FF21 		strb	r2, [r3, #511]
3328:..\src/command_processing.c ****     
3329:..\src/command_processing.c ****     //Initialize rest position parameters  
3330:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 23495              		.loc 1 3330 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 515


 23496 01a8 234B     		ldr	r3, .L894
 23497 01aa 0022     		movs	r2, #0
 23498 01ac 83F8AC22 		strb	r2, [r3, #684]
3331:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 23499              		.loc 1 3331 0
 23500 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23501 01b2 2149     		ldr	r1, .L894
 23502 01b4 1346     		mov	r3, r2
 23503 01b6 DB00     		lsls	r3, r3, #3
 23504 01b8 9B1A     		subs	r3, r3, r2
 23505 01ba 1B01     		lsls	r3, r3, #4
 23506 01bc 0B44     		add	r3, r3, r1
 23507 01be 03F58873 		add	r3, r3, #272
 23508 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23509 01c4 1946     		mov	r1, r3
 23510 01c6 1C4A     		ldr	r2, .L894
 23511 01c8 0B46     		mov	r3, r1
 23512 01ca 5B00     		lsls	r3, r3, #1
 23513 01cc 0B44     		add	r3, r3, r1
 23514 01ce 1B01     		lsls	r3, r3, #4
 23515 01d0 1344     		add	r3, r3, r2
 23516 01d2 03F29513 		addw	r3, r3, #405
 23517 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23518 01d8 1A46     		mov	r2, r3
 23519 01da 41F65833 		movw	r3, #7000
 23520 01de 9340     		lsls	r3, r3, r2
 23521 01e0 154A     		ldr	r2, .L894
 23522 01e2 C2F8A032 		str	r3, [r2, #672]
3332:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 23523              		.loc 1 3332 0
 23524 01e6 144B     		ldr	r3, .L894
 23525 01e8 0A22     		movs	r2, #10
 23526 01ea C3F8A422 		str	r2, [r3, #676]
3333:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 23527              		.loc 1 3333 0
 23528 01ee 124B     		ldr	r3, .L894
 23529 01f0 42F21072 		movw	r2, #10000
 23530 01f4 C3F8A822 		str	r2, [r3, #680]
3334:..\src/command_processing.c **** 	
3335:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23531              		.loc 1 3335 0
 23532 01f8 0F4B     		ldr	r3, .L894
 23533 01fa 0022     		movs	r2, #0
 23534 01fc 83F80022 		strb	r2, [r3, #512]
3336:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23535              		.loc 1 3336 0
 23536 0200 0D4B     		ldr	r3, .L894
 23537 0202 0022     		movs	r2, #0
 23538 0204 83F82622 		strb	r2, [r3, #550]
3337:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23539              		.loc 1 3337 0
 23540 0208 0B4B     		ldr	r3, .L894
 23541 020a 0022     		movs	r2, #0
 23542 020c 83F83422 		strb	r2, [r3, #564]
3338:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 23543              		.loc 1 3338 0
 23544 0210 094B     		ldr	r3, .L894
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 516


 23545 0212 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23546 0216 1233     		adds	r3, r3, #18
 23547 0218 5B01     		lsls	r3, r3, #5
 23548 021a 074A     		ldr	r2, .L894
 23549 021c 1344     		add	r3, r3, r2
 23550 021e 074A     		ldr	r2, .L894+4
 23551 0220 1068     		ldr	r0, [r2]	@ unaligned
 23552 0222 1860     		str	r0, [r3]	@ unaligned
 23553 0224 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23554 0226 9279     		ldrb	r2, [r2, #6]
 23555 0228 9980     		strh	r1, [r3, #4]	@ unaligned
 23556 022a 9A71     		strb	r2, [r3, #6]
3339:..\src/command_processing.c **** }
 23557              		.loc 1 3339 0
 23558 022c 00BF     		nop
 23559 022e 0C37     		adds	r7, r7, #12
 23560              		.cfi_def_cfa_offset 4
 23561 0230 BD46     		mov	sp, r7
 23562              		.cfi_def_cfa_register 13
 23563              		@ sp needed
 23564 0232 80BC     		pop	{r7}
 23565              		.cfi_restore 7
 23566              		.cfi_def_cfa_offset 0
 23567 0234 7047     		bx	lr
 23568              	.L895:
 23569 0236 00BF     		.align	2
 23570              	.L894:
 23571 0238 00000000 		.word	g_mem
 23572 023c 801F0000 		.word	.LC299
 23573              		.cfi_endproc
 23574              	.LFE90:
 23575              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 23576              		.section	.text.memInit_Master,"ax",%progbits
 23577              		.align	2
 23578              		.global	memInit_Master
 23579              		.thumb
 23580              		.thumb_func
 23581              		.type	memInit_Master, %function
 23582              	memInit_Master:
 23583              	.LFB91:
3340:..\src/command_processing.c **** 
3341:..\src/command_processing.c **** //==============================================================================
3342:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3343:..\src/command_processing.c **** //==============================================================================
3344:..\src/command_processing.c **** void memInit_Master(void)
3345:..\src/command_processing.c **** {
 23584              		.loc 1 3345 0
 23585              		.cfi_startproc
 23586              		@ args = 0, pretend = 0, frame = 0
 23587              		@ frame_needed = 1, uses_anonymous_args = 0
 23588              		@ link register save eliminated.
 23589 0000 80B4     		push	{r7}
 23590              		.cfi_def_cfa_offset 4
 23591              		.cfi_offset 7, -4
 23592 0002 00AF     		add	r7, sp, #0
 23593              		.cfi_def_cfa_register 7
3346:..\src/command_processing.c ****     g_mem.dev.id                = 2;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 517


 23594              		.loc 1 3346 0
 23595 0004 074B     		ldr	r3, .L897
 23596 0006 0222     		movs	r2, #2
 23597 0008 83F8A020 		strb	r2, [r3, #160]
3347:..\src/command_processing.c ****     
3348:..\src/command_processing.c ****     // MS STRUCT
3349:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 23598              		.loc 1 3349 0
 23599 000c 054B     		ldr	r3, .L897
 23600 000e 0122     		movs	r2, #1
 23601 0010 83F8C122 		strb	r2, [r3, #705]
3350:..\src/command_processing.c ****     g_mem.MS.master_mode_active = FALSE;
 23602              		.loc 1 3350 0
 23603 0014 034B     		ldr	r3, .L897
 23604 0016 0022     		movs	r2, #0
 23605 0018 83F8C022 		strb	r2, [r3, #704]
3351:..\src/command_processing.c **** }
 23606              		.loc 1 3351 0
 23607 001c 00BF     		nop
 23608 001e BD46     		mov	sp, r7
 23609              		.cfi_def_cfa_register 13
 23610              		@ sp needed
 23611 0020 80BC     		pop	{r7}
 23612              		.cfi_restore 7
 23613              		.cfi_def_cfa_offset 0
 23614 0022 7047     		bx	lr
 23615              	.L898:
 23616              		.align	2
 23617              	.L897:
 23618 0024 00000000 		.word	g_mem
 23619              		.cfi_endproc
 23620              	.LFE91:
 23621              		.size	memInit_Master, .-memInit_Master
 23622              		.section	.text.memInit_AirChambers_Vibrotactile_Fb,"ax",%progbits
 23623              		.align	2
 23624              		.global	memInit_AirChambers_Vibrotactile_Fb
 23625              		.thumb
 23626              		.thumb_func
 23627              		.type	memInit_AirChambers_Vibrotactile_Fb, %function
 23628              	memInit_AirChambers_Vibrotactile_Fb:
 23629              	.LFB92:
3352:..\src/command_processing.c **** 
3353:..\src/command_processing.c **** //==============================================================================
3354:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3355:..\src/command_processing.c **** //==============================================================================
3356:..\src/command_processing.c **** void memInit_AirChambers_Vibrotactile_Fb()
3357:..\src/command_processing.c **** {
 23630              		.loc 1 3357 0
 23631              		.cfi_startproc
 23632              		@ args = 0, pretend = 0, frame = 0
 23633              		@ frame_needed = 1, uses_anonymous_args = 0
 23634              		@ link register save eliminated.
 23635 0000 80B4     		push	{r7}
 23636              		.cfi_def_cfa_offset 4
 23637              		.cfi_offset 7, -4
 23638 0002 00AF     		add	r7, sp, #0
 23639              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 518


3358:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3359:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 23640              		.loc 1 3359 0
 23641 0004 1E4B     		ldr	r3, .L900
 23642 0006 0222     		movs	r2, #2
 23643 0008 83F8AC20 		strb	r2, [r3, #172]
3360:..\src/command_processing.c ****     
3361:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 23644              		.loc 1 3361 0
 23645 000c 1C4B     		ldr	r3, .L900
 23646 000e 0122     		movs	r2, #1
 23647 0010 83F80F21 		strb	r2, [r3, #271]
3362:..\src/command_processing.c ****     
3363:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3364:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3365:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23648              		.loc 1 3365 0
 23649 0014 1A4B     		ldr	r3, .L900
 23650 0016 0422     		movs	r2, #4
 23651 0018 83F87E21 		strb	r2, [r3, #382]
3366:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23652              		.loc 1 3366 0
 23653 001c 184B     		ldr	r3, .L900
 23654 001e 0022     		movs	r2, #0
 23655 0020 C3F85421 		str	r2, [r3, #340]
3367:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23656              		.loc 1 3367 0
 23657 0024 164B     		ldr	r3, .L900
 23658 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23659 002a 1946     		mov	r1, r3
 23660 002c 144A     		ldr	r2, .L900
 23661 002e 0B46     		mov	r3, r1
 23662 0030 5B00     		lsls	r3, r3, #1
 23663 0032 0B44     		add	r3, r3, r1
 23664 0034 1B01     		lsls	r3, r3, #4
 23665 0036 1344     		add	r3, r3, r2
 23666 0038 03F29513 		addw	r3, r3, #405
 23667 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23668 003e 1A46     		mov	r2, r3
 23669 0040 45F2F053 		movw	r3, #22000
 23670 0044 9340     		lsls	r3, r3, r2
 23671 0046 0E4A     		ldr	r2, .L900
 23672 0048 C2F85831 		str	r3, [r2, #344]
3368:..\src/command_processing.c ****     
3369:..\src/command_processing.c ****     // FB STRUCT
3370:..\src/command_processing.c ****     g_mem.FB.vibrotactile_feedback_active = FALSE;
 23673              		.loc 1 3370 0
 23674 004c 0C4B     		ldr	r3, .L900
 23675 004e 0022     		movs	r2, #0
 23676 0050 83F8DC22 		strb	r2, [r3, #732]
3371:..\src/command_processing.c ****     g_mem.FB.airchamber_feedback_active = FALSE;
 23677              		.loc 1 3371 0
 23678 0054 0A4B     		ldr	r3, .L900
 23679 0056 0022     		movs	r2, #0
 23680 0058 83F8DD22 		strb	r2, [r3, #733]
3372:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 23681              		.loc 1 3372 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 519


 23682 005c 084B     		ldr	r3, .L900
 23683 005e 4FF4E172 		mov	r2, #450
 23684 0062 C3F8D022 		str	r2, [r3, #720]
3373:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 23685              		.loc 1 3373 0
 23686 0066 064B     		ldr	r3, .L900
 23687 0068 064A     		ldr	r2, .L900+4
 23688 006a C3F8D422 		str	r2, [r3, #724]	@ float
3374:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 23689              		.loc 1 3374 0
 23690 006e 044B     		ldr	r3, .L900
 23691 0070 4FF07E52 		mov	r2, #1065353216
 23692 0074 C3F8D822 		str	r2, [r3, #728]	@ float
3375:..\src/command_processing.c **** }
 23693              		.loc 1 3375 0
 23694 0078 00BF     		nop
 23695 007a BD46     		mov	sp, r7
 23696              		.cfi_def_cfa_register 13
 23697              		@ sp needed
 23698 007c 80BC     		pop	{r7}
 23699              		.cfi_restore 7
 23700              		.cfi_def_cfa_offset 0
 23701 007e 7047     		bx	lr
 23702              	.L901:
 23703              		.align	2
 23704              	.L900:
 23705 0080 00000000 		.word	g_mem
 23706 0084 0000C841 		.word	1103626240
 23707              		.cfi_endproc
 23708              	.LFE92:
 23709              		.size	memInit_AirChambers_Vibrotactile_Fb, .-memInit_AirChambers_Vibrotactile_Fb
 23710              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 23711              		.align	2
 23712              		.global	memInit_OtbkActWristMs
 23713              		.thumb
 23714              		.thumb_func
 23715              		.type	memInit_OtbkActWristMs, %function
 23716              	memInit_OtbkActWristMs:
 23717              	.LFB93:
3376:..\src/command_processing.c **** 
3377:..\src/command_processing.c **** //==============================================================================
3378:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3379:..\src/command_processing.c **** //==============================================================================
3380:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3381:..\src/command_processing.c **** {
 23718              		.loc 1 3381 0
 23719              		.cfi_startproc
 23720              		@ args = 0, pretend = 0, frame = 0
 23721              		@ frame_needed = 1, uses_anonymous_args = 0
 23722              		@ link register save eliminated.
 23723 0000 80B4     		push	{r7}
 23724              		.cfi_def_cfa_offset 4
 23725              		.cfi_offset 7, -4
 23726 0002 00AF     		add	r7, sp, #0
 23727              		.cfi_def_cfa_register 7
3382:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3383:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 520


 23728              		.loc 1 3383 0
 23729 0004 294B     		ldr	r3, .L903
 23730 0006 0322     		movs	r2, #3
 23731 0008 83F8AC20 		strb	r2, [r3, #172]
3384:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23732              		.loc 1 3384 0
 23733 000c 274B     		ldr	r3, .L903
 23734 000e 0122     		movs	r2, #1
 23735 0010 83F8A720 		strb	r2, [r3, #167]
3385:..\src/command_processing.c ****     
3386:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 23736              		.loc 1 3386 0
 23737 0014 254B     		ldr	r3, .L903
 23738 0016 0122     		movs	r2, #1
 23739 0018 83F80F21 		strb	r2, [r3, #271]
3387:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 23740              		.loc 1 3387 0
 23741 001c 234B     		ldr	r3, .L903
 23742 001e 6422     		movs	r2, #100
 23743 0020 83F81121 		strb	r2, [r3, #273]
3388:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 23744              		.loc 1 3388 0
 23745 0024 214B     		ldr	r3, .L903
 23746 0026 0022     		movs	r2, #0
 23747 0028 83F81221 		strb	r2, [r3, #274]
3389:..\src/command_processing.c ****     
3390:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3391:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3392:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23748              		.loc 1 3392 0
 23749 002c 1F4B     		ldr	r3, .L903
 23750 002e 0422     		movs	r2, #4
 23751 0030 83F87E21 		strb	r2, [r3, #382]
3393:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 23752              		.loc 1 3393 0
 23753 0034 1D4B     		ldr	r3, .L903
 23754 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 23755 003a 1C4B     		ldr	r3, .L903
 23756 003c 83F88021 		strb	r2, [r3, #384]
3394:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23757              		.loc 1 3394 0
 23758 0040 1A4B     		ldr	r3, .L903
 23759 0042 0122     		movs	r2, #1
 23760 0044 83F88121 		strb	r2, [r3, #385]
3395:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 23761              		.loc 1 3395 0
 23762 0048 184B     		ldr	r3, .L903
 23763 004a 0022     		movs	r2, #0
 23764 004c 83F88221 		strb	r2, [r3, #386]
3396:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23765              		.loc 1 3396 0
 23766 0050 164B     		ldr	r3, .L903
 23767 0052 0022     		movs	r2, #0
 23768 0054 C3F85421 		str	r2, [r3, #340]
3397:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23769              		.loc 1 3397 0
 23770 0058 144B     		ldr	r3, .L903
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 521


 23771 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23772 005e 1946     		mov	r1, r3
 23773 0060 124A     		ldr	r2, .L903
 23774 0062 0B46     		mov	r3, r1
 23775 0064 5B00     		lsls	r3, r3, #1
 23776 0066 0B44     		add	r3, r3, r1
 23777 0068 1B01     		lsls	r3, r3, #4
 23778 006a 1344     		add	r3, r3, r2
 23779 006c 03F29513 		addw	r3, r3, #405
 23780 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23781 0072 1A46     		mov	r2, r3
 23782 0074 4FF47A53 		mov	r3, #16000
 23783 0078 9340     		lsls	r3, r3, r2
 23784 007a 0C4A     		ldr	r2, .L903
 23785 007c C2F85831 		str	r3, [r2, #344]
3398:..\src/command_processing.c ****     
3399:..\src/command_processing.c ****     // WR STRUCT
3400:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23786              		.loc 1 3400 0
 23787 0080 0A4B     		ldr	r3, .L903
 23788 0082 0022     		movs	r2, #0
 23789 0084 83F8E022 		strb	r2, [r3, #736]
3401:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23790              		.loc 1 3401 0
 23791 0088 084B     		ldr	r3, .L903
 23792 008a 4FF44872 		mov	r2, #800
 23793 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
3402:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 23794              		.loc 1 3402 0
 23795 0092 064B     		ldr	r3, .L903
 23796 0094 4FF44872 		mov	r2, #800
 23797 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3403:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 23798              		.loc 1 3403 0
 23799 009c 034B     		ldr	r3, .L903
 23800 009e 0022     		movs	r2, #0
 23801 00a0 83F8E622 		strb	r2, [r3, #742]
3404:..\src/command_processing.c **** }
 23802              		.loc 1 3404 0
 23803 00a4 00BF     		nop
 23804 00a6 BD46     		mov	sp, r7
 23805              		.cfi_def_cfa_register 13
 23806              		@ sp needed
 23807 00a8 80BC     		pop	{r7}
 23808              		.cfi_restore 7
 23809              		.cfi_def_cfa_offset 0
 23810 00aa 7047     		bx	lr
 23811              	.L904:
 23812              		.align	2
 23813              	.L903:
 23814 00ac 00000000 		.word	g_mem
 23815              		.cfi_endproc
 23816              	.LFE93:
 23817              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 23818              		.section	.text.cmd_get_measurements,"ax",%progbits
 23819              		.align	2
 23820              		.global	cmd_get_measurements
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 522


 23821              		.thumb
 23822              		.thumb_func
 23823              		.type	cmd_get_measurements, %function
 23824              	cmd_get_measurements:
 23825              	.LFB94:
3405:..\src/command_processing.c **** 
3406:..\src/command_processing.c **** //==============================================================================
3407:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3408:..\src/command_processing.c **** //==============================================================================
3409:..\src/command_processing.c **** /**
3410:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3411:..\src/command_processing.c **** **/
3412:..\src/command_processing.c **** 
3413:..\src/command_processing.c **** void cmd_get_measurements(){
 23826              		.loc 1 3413 0
 23827              		.cfi_startproc
 23828              		@ args = 0, pretend = 0, frame = 16
 23829              		@ frame_needed = 1, uses_anonymous_args = 0
 23830 0000 90B5     		push	{r4, r7, lr}
 23831              		.cfi_def_cfa_offset 12
 23832              		.cfi_offset 4, -12
 23833              		.cfi_offset 7, -8
 23834              		.cfi_offset 14, -4
 23835 0002 85B0     		sub	sp, sp, #20
 23836              		.cfi_def_cfa_offset 32
 23837 0004 00AF     		add	r7, sp, #0
 23838              		.cfi_def_cfa_register 7
3414:..\src/command_processing.c ****  
3415:..\src/command_processing.c ****     uint8 CYDATA index;
3416:..\src/command_processing.c ****     int16 aux_int16;
3417:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3418:..\src/command_processing.c ****     
3419:..\src/command_processing.c ****     uint8 packet_data[8]; 
3420:..\src/command_processing.c ****     
3421:..\src/command_processing.c ****     //Header package
3422:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 23839              		.loc 1 3422 0
 23840 0006 8423     		movs	r3, #132
 23841 0008 3B71     		strb	r3, [r7, #4]
3423:..\src/command_processing.c ****     
3424:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23842              		.loc 1 3424 0
 23843 000a 0323     		movs	r3, #3
 23844 000c FB73     		strb	r3, [r7, #15]
 23845 000e 38E0     		b	.L906
 23846              	.L907:
3425:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23847              		.loc 1 3425 0
 23848 0010 434B     		ldr	r3, .L909
 23849 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23850 0016 1A46     		mov	r2, r3
 23851 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23852 001a 4248     		ldr	r0, .L909+4
 23853 001c 1346     		mov	r3, r2
 23854 001e 5B00     		lsls	r3, r3, #1
 23855 0020 1344     		add	r3, r3, r2
 23856 0022 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 523


 23857 0024 1344     		add	r3, r3, r2
 23858 0026 0B44     		add	r3, r3, r1
 23859 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23860 002c 3C4B     		ldr	r3, .L909
 23861 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23862 0032 1C46     		mov	r4, r3
 23863 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23864 0036 3A48     		ldr	r0, .L909
 23865 0038 2346     		mov	r3, r4
 23866 003a 5B00     		lsls	r3, r3, #1
 23867 003c 2344     		add	r3, r3, r4
 23868 003e 1B01     		lsls	r3, r3, #4
 23869 0040 0344     		add	r3, r3, r0
 23870 0042 0B44     		add	r3, r3, r1
 23871 0044 03F29513 		addw	r3, r3, #405
 23872 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23873 004a 42FA03F3 		asr	r3, r2, r3
 23874 004e 1BB2     		sxth	r3, r3
 23875 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3426:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23876              		.loc 1 3426 0
 23877 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23878 0054 5B00     		lsls	r3, r3, #1
 23879 0056 0233     		adds	r3, r3, #2
 23880 0058 07F10C02 		add	r2, r7, #12
 23881 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23882 005e 07F11001 		add	r1, r7, #16
 23883 0062 0B44     		add	r3, r3, r1
 23884 0064 03F80C2C 		strb	r2, [r3, #-12]
3427:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23885              		.loc 1 3427 0
 23886 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23887 006a 5B00     		lsls	r3, r3, #1
 23888 006c 5A1C     		adds	r2, r3, #1
 23889 006e 07F10C03 		add	r3, r7, #12
 23890 0072 0133     		adds	r3, r3, #1
 23891 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23892 0076 07F11003 		add	r3, r7, #16
 23893 007a 1344     		add	r3, r3, r2
 23894 007c 0A46     		mov	r2, r1
 23895 007e 03F80C2C 		strb	r2, [r3, #-12]
 23896              	.L906:
3424:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23897              		.loc 1 3424 0 discriminator 1
 23898 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23899 0084 5A1E     		subs	r2, r3, #1
 23900 0086 FA73     		strb	r2, [r7, #15]
 23901 0088 002B     		cmp	r3, #0
 23902 008a C1D1     		bne	.L907
3428:..\src/command_processing.c ****     }
3429:..\src/command_processing.c **** 
3430:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE){
 23903              		.loc 1 3430 0
 23904 008c 244B     		ldr	r3, .L909
 23905 008e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23906 0092 012B     		cmp	r3, #1
 23907 0094 34D1     		bne	.L908
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 524


3431:..\src/command_processing.c ****         //Overwrite only second measure with first encoder on second motor line (just to have a mea
3432:..\src/command_processing.c ****         index = 1;
 23908              		.loc 1 3432 0
 23909 0096 0123     		movs	r3, #1
 23910 0098 FB73     		strb	r3, [r7, #15]
3433:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[1].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[
 23911              		.loc 1 3433 0
 23912 009a 214B     		ldr	r3, .L909
 23913 009c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23914 00a0 1946     		mov	r1, r3
 23915 00a2 204A     		ldr	r2, .L909+4
 23916 00a4 3423     		movs	r3, #52
 23917 00a6 03FB01F3 		mul	r3, r3, r1
 23918 00aa 1344     		add	r3, r3, r2
 23919 00ac 1A68     		ldr	r2, [r3]
 23920 00ae 1C4B     		ldr	r3, .L909
 23921 00b0 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23922 00b4 1846     		mov	r0, r3
 23923 00b6 1A49     		ldr	r1, .L909
 23924 00b8 0346     		mov	r3, r0
 23925 00ba 5B00     		lsls	r3, r3, #1
 23926 00bc 0344     		add	r3, r3, r0
 23927 00be 1B01     		lsls	r3, r3, #4
 23928 00c0 0B44     		add	r3, r3, r1
 23929 00c2 03F29513 		addw	r3, r3, #405
 23930 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23931 00c8 42FA03F3 		asr	r3, r2, r3
 23932 00cc 1BB2     		sxth	r3, r3
 23933 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3434:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23934              		.loc 1 3434 0
 23935 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23936 00d2 5B00     		lsls	r3, r3, #1
 23937 00d4 0233     		adds	r3, r3, #2
 23938 00d6 07F10C02 		add	r2, r7, #12
 23939 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23940 00dc 07F11001 		add	r1, r7, #16
 23941 00e0 0B44     		add	r3, r3, r1
 23942 00e2 03F80C2C 		strb	r2, [r3, #-12]
3435:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23943              		.loc 1 3435 0
 23944 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23945 00e8 5B00     		lsls	r3, r3, #1
 23946 00ea 5A1C     		adds	r2, r3, #1
 23947 00ec 07F10C03 		add	r3, r7, #12
 23948 00f0 0133     		adds	r3, r3, #1
 23949 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23950 00f4 07F11003 		add	r3, r7, #16
 23951 00f8 1344     		add	r3, r3, r2
 23952 00fa 0A46     		mov	r2, r1
 23953 00fc 03F80C2C 		strb	r2, [r3, #-12]
 23954              	.L908:
3436:..\src/command_processing.c ****     }
3437:..\src/command_processing.c ****     
3438:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3439:..\src/command_processing.c **** 
3440:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 525


 23955              		.loc 1 3440 0
 23956 0100 3B1D     		adds	r3, r7, #4
 23957 0102 0721     		movs	r1, #7
 23958 0104 1846     		mov	r0, r3
 23959 0106 FFF7FEFF 		bl	LCRChecksum
 23960 010a 0346     		mov	r3, r0
 23961 010c FB72     		strb	r3, [r7, #11]
3441:..\src/command_processing.c **** 
3442:..\src/command_processing.c ****     commWrite(packet_data, 8);
 23962              		.loc 1 3442 0
 23963 010e 3B1D     		adds	r3, r7, #4
 23964 0110 0821     		movs	r1, #8
 23965 0112 1846     		mov	r0, r3
 23966 0114 FFF7FEFF 		bl	commWrite
3443:..\src/command_processing.c ****    
3444:..\src/command_processing.c **** }
 23967              		.loc 1 3444 0
 23968 0118 00BF     		nop
 23969 011a 1437     		adds	r7, r7, #20
 23970              		.cfi_def_cfa_offset 12
 23971 011c BD46     		mov	sp, r7
 23972              		.cfi_def_cfa_register 13
 23973              		@ sp needed
 23974 011e 90BD     		pop	{r4, r7, pc}
 23975              	.L910:
 23976              		.align	2
 23977              	.L909:
 23978 0120 00000000 		.word	g_mem
 23979 0124 00000000 		.word	g_measOld
 23980              		.cfi_endproc
 23981              	.LFE94:
 23982              		.size	cmd_get_measurements, .-cmd_get_measurements
 23983              		.section	.text.cmd_get_velocities,"ax",%progbits
 23984              		.align	2
 23985              		.global	cmd_get_velocities
 23986              		.thumb
 23987              		.thumb_func
 23988              		.type	cmd_get_velocities, %function
 23989              	cmd_get_velocities:
 23990              	.LFB95:
3445:..\src/command_processing.c **** 
3446:..\src/command_processing.c **** void cmd_get_velocities(){
 23991              		.loc 1 3446 0
 23992              		.cfi_startproc
 23993              		@ args = 0, pretend = 0, frame = 16
 23994              		@ frame_needed = 1, uses_anonymous_args = 0
 23995 0000 90B5     		push	{r4, r7, lr}
 23996              		.cfi_def_cfa_offset 12
 23997              		.cfi_offset 4, -12
 23998              		.cfi_offset 7, -8
 23999              		.cfi_offset 14, -4
 24000 0002 85B0     		sub	sp, sp, #20
 24001              		.cfi_def_cfa_offset 32
 24002 0004 00AF     		add	r7, sp, #0
 24003              		.cfi_def_cfa_register 7
3447:..\src/command_processing.c ****  
3448:..\src/command_processing.c ****     uint8 CYDATA index;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 526


3449:..\src/command_processing.c ****     int16 aux_int16;
3450:..\src/command_processing.c ****    
3451:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3452:..\src/command_processing.c ****     
3453:..\src/command_processing.c ****     uint8 packet_data[8]; 
3454:..\src/command_processing.c ****     
3455:..\src/command_processing.c ****     //Header package
3456:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 24004              		.loc 1 3456 0
 24005 0006 8923     		movs	r3, #137
 24006 0008 3B71     		strb	r3, [r7, #4]
3457:..\src/command_processing.c ****     
3458:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24007              		.loc 1 3458 0
 24008 000a 0323     		movs	r3, #3
 24009 000c FB73     		strb	r3, [r7, #15]
 24010 000e 3AE0     		b	.L912
 24011              	.L913:
3459:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24012              		.loc 1 3459 0
 24013 0010 274B     		ldr	r3, .L914
 24014 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24015 0016 1A46     		mov	r2, r3
 24016 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24017 001a 2648     		ldr	r0, .L914+4
 24018 001c 1346     		mov	r3, r2
 24019 001e 5B00     		lsls	r3, r3, #1
 24020 0020 1344     		add	r3, r3, r2
 24021 0022 9B00     		lsls	r3, r3, #2
 24022 0024 1344     		add	r3, r3, r2
 24023 0026 0B44     		add	r3, r3, r1
 24024 0028 0633     		adds	r3, r3, #6
 24025 002a 9B00     		lsls	r3, r3, #2
 24026 002c 0344     		add	r3, r3, r0
 24027 002e 5A68     		ldr	r2, [r3, #4]
 24028 0030 1F4B     		ldr	r3, .L914
 24029 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24030 0036 1C46     		mov	r4, r3
 24031 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24032 003a 1D48     		ldr	r0, .L914
 24033 003c 2346     		mov	r3, r4
 24034 003e 5B00     		lsls	r3, r3, #1
 24035 0040 2344     		add	r3, r3, r4
 24036 0042 1B01     		lsls	r3, r3, #4
 24037 0044 0344     		add	r3, r3, r0
 24038 0046 0B44     		add	r3, r3, r1
 24039 0048 03F29513 		addw	r3, r3, #405
 24040 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24041 004e 42FA03F3 		asr	r3, r2, r3
 24042 0052 1BB2     		sxth	r3, r3
 24043 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3460:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24044              		.loc 1 3460 0
 24045 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24046 0058 5B00     		lsls	r3, r3, #1
 24047 005a 0233     		adds	r3, r3, #2
 24048 005c 07F10C02 		add	r2, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 527


 24049 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24050 0062 07F11001 		add	r1, r7, #16
 24051 0066 0B44     		add	r3, r3, r1
 24052 0068 03F80C2C 		strb	r2, [r3, #-12]
3461:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24053              		.loc 1 3461 0
 24054 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24055 006e 5B00     		lsls	r3, r3, #1
 24056 0070 5A1C     		adds	r2, r3, #1
 24057 0072 07F10C03 		add	r3, r7, #12
 24058 0076 0133     		adds	r3, r3, #1
 24059 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24060 007a 07F11003 		add	r3, r7, #16
 24061 007e 1344     		add	r3, r3, r2
 24062 0080 0A46     		mov	r2, r1
 24063 0082 03F80C2C 		strb	r2, [r3, #-12]
 24064              	.L912:
3458:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24065              		.loc 1 3458 0 discriminator 1
 24066 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24067 0088 5A1E     		subs	r2, r3, #1
 24068 008a FA73     		strb	r2, [r7, #15]
 24069 008c 002B     		cmp	r3, #0
 24070 008e BFD1     		bne	.L913
3462:..\src/command_processing.c ****     }
3463:..\src/command_processing.c ****             
3464:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3465:..\src/command_processing.c **** 
3466:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24071              		.loc 1 3466 0
 24072 0090 3B1D     		adds	r3, r7, #4
 24073 0092 0721     		movs	r1, #7
 24074 0094 1846     		mov	r0, r3
 24075 0096 FFF7FEFF 		bl	LCRChecksum
 24076 009a 0346     		mov	r3, r0
 24077 009c FB72     		strb	r3, [r7, #11]
3467:..\src/command_processing.c **** 
3468:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24078              		.loc 1 3468 0
 24079 009e 3B1D     		adds	r3, r7, #4
 24080 00a0 0821     		movs	r1, #8
 24081 00a2 1846     		mov	r0, r3
 24082 00a4 FFF7FEFF 		bl	commWrite
3469:..\src/command_processing.c **** }
 24083              		.loc 1 3469 0
 24084 00a8 00BF     		nop
 24085 00aa 1437     		adds	r7, r7, #20
 24086              		.cfi_def_cfa_offset 12
 24087 00ac BD46     		mov	sp, r7
 24088              		.cfi_def_cfa_register 13
 24089              		@ sp needed
 24090 00ae 90BD     		pop	{r4, r7, pc}
 24091              	.L915:
 24092              		.align	2
 24093              	.L914:
 24094 00b0 00000000 		.word	g_mem
 24095 00b4 00000000 		.word	g_measOld
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 528


 24096              		.cfi_endproc
 24097              	.LFE95:
 24098              		.size	cmd_get_velocities, .-cmd_get_velocities
 24099              		.section	.text.cmd_get_accelerations,"ax",%progbits
 24100              		.align	2
 24101              		.global	cmd_get_accelerations
 24102              		.thumb
 24103              		.thumb_func
 24104              		.type	cmd_get_accelerations, %function
 24105              	cmd_get_accelerations:
 24106              	.LFB96:
3470:..\src/command_processing.c **** 
3471:..\src/command_processing.c **** void cmd_get_accelerations(){
 24107              		.loc 1 3471 0
 24108              		.cfi_startproc
 24109              		@ args = 0, pretend = 0, frame = 16
 24110              		@ frame_needed = 1, uses_anonymous_args = 0
 24111 0000 90B5     		push	{r4, r7, lr}
 24112              		.cfi_def_cfa_offset 12
 24113              		.cfi_offset 4, -12
 24114              		.cfi_offset 7, -8
 24115              		.cfi_offset 14, -4
 24116 0002 85B0     		sub	sp, sp, #20
 24117              		.cfi_def_cfa_offset 32
 24118 0004 00AF     		add	r7, sp, #0
 24119              		.cfi_def_cfa_register 7
3472:..\src/command_processing.c ****  
3473:..\src/command_processing.c ****     uint8 CYDATA index;
3474:..\src/command_processing.c ****     int16 aux_int16;
3475:..\src/command_processing.c ****     
3476:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3477:..\src/command_processing.c ****     
3478:..\src/command_processing.c ****     uint8 packet_data[8]; 
3479:..\src/command_processing.c ****     
3480:..\src/command_processing.c ****     //Header package
3481:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 24120              		.loc 1 3481 0
 24121 0006 8B23     		movs	r3, #139
 24122 0008 3B71     		strb	r3, [r7, #4]
3482:..\src/command_processing.c ****     
3483:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24123              		.loc 1 3483 0
 24124 000a 0323     		movs	r3, #3
 24125 000c FB73     		strb	r3, [r7, #15]
 24126 000e 39E0     		b	.L917
 24127              	.L918:
3484:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24128              		.loc 1 3484 0
 24129 0010 274B     		ldr	r3, .L919
 24130 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24131 0016 1A46     		mov	r2, r3
 24132 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24133 001a 2648     		ldr	r0, .L919+4
 24134 001c 1346     		mov	r3, r2
 24135 001e 5B00     		lsls	r3, r3, #1
 24136 0020 1344     		add	r3, r3, r2
 24137 0022 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 529


 24138 0024 1344     		add	r3, r3, r2
 24139 0026 0B44     		add	r3, r3, r1
 24140 0028 0A33     		adds	r3, r3, #10
 24141 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24142 002e 204B     		ldr	r3, .L919
 24143 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24144 0034 1C46     		mov	r4, r3
 24145 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24146 0038 1D48     		ldr	r0, .L919
 24147 003a 2346     		mov	r3, r4
 24148 003c 5B00     		lsls	r3, r3, #1
 24149 003e 2344     		add	r3, r3, r4
 24150 0040 1B01     		lsls	r3, r3, #4
 24151 0042 0344     		add	r3, r3, r0
 24152 0044 0B44     		add	r3, r3, r1
 24153 0046 03F29513 		addw	r3, r3, #405
 24154 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24155 004c 42FA03F3 		asr	r3, r2, r3
 24156 0050 1BB2     		sxth	r3, r3
 24157 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3485:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24158              		.loc 1 3485 0
 24159 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24160 0056 5B00     		lsls	r3, r3, #1
 24161 0058 0233     		adds	r3, r3, #2
 24162 005a 07F10C02 		add	r2, r7, #12
 24163 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24164 0060 07F11001 		add	r1, r7, #16
 24165 0064 0B44     		add	r3, r3, r1
 24166 0066 03F80C2C 		strb	r2, [r3, #-12]
3486:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24167              		.loc 1 3486 0
 24168 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24169 006c 5B00     		lsls	r3, r3, #1
 24170 006e 5A1C     		adds	r2, r3, #1
 24171 0070 07F10C03 		add	r3, r7, #12
 24172 0074 0133     		adds	r3, r3, #1
 24173 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24174 0078 07F11003 		add	r3, r7, #16
 24175 007c 1344     		add	r3, r3, r2
 24176 007e 0A46     		mov	r2, r1
 24177 0080 03F80C2C 		strb	r2, [r3, #-12]
 24178              	.L917:
3483:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24179              		.loc 1 3483 0 discriminator 1
 24180 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24181 0086 5A1E     		subs	r2, r3, #1
 24182 0088 FA73     		strb	r2, [r7, #15]
 24183 008a 002B     		cmp	r3, #0
 24184 008c C0D1     		bne	.L918
3487:..\src/command_processing.c ****     }
3488:..\src/command_processing.c ****     
3489:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3490:..\src/command_processing.c **** 
3491:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24185              		.loc 1 3491 0
 24186 008e 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 530


 24187 0090 0721     		movs	r1, #7
 24188 0092 1846     		mov	r0, r3
 24189 0094 FFF7FEFF 		bl	LCRChecksum
 24190 0098 0346     		mov	r3, r0
 24191 009a FB72     		strb	r3, [r7, #11]
3492:..\src/command_processing.c **** 
3493:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24192              		.loc 1 3493 0
 24193 009c 3B1D     		adds	r3, r7, #4
 24194 009e 0821     		movs	r1, #8
 24195 00a0 1846     		mov	r0, r3
 24196 00a2 FFF7FEFF 		bl	commWrite
3494:..\src/command_processing.c **** }
 24197              		.loc 1 3494 0
 24198 00a6 00BF     		nop
 24199 00a8 1437     		adds	r7, r7, #20
 24200              		.cfi_def_cfa_offset 12
 24201 00aa BD46     		mov	sp, r7
 24202              		.cfi_def_cfa_register 13
 24203              		@ sp needed
 24204 00ac 90BD     		pop	{r4, r7, pc}
 24205              	.L920:
 24206 00ae 00BF     		.align	2
 24207              	.L919:
 24208 00b0 00000000 		.word	g_mem
 24209 00b4 00000000 		.word	g_measOld
 24210              		.cfi_endproc
 24211              	.LFE96:
 24212              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 24213              		.section	.text.cmd_get_joystick,"ax",%progbits
 24214              		.align	2
 24215              		.global	cmd_get_joystick
 24216              		.thumb
 24217              		.thumb_func
 24218              		.type	cmd_get_joystick, %function
 24219              	cmd_get_joystick:
 24220              	.LFB97:
3495:..\src/command_processing.c **** 
3496:..\src/command_processing.c **** void cmd_get_joystick() {
 24221              		.loc 1 3496 0
 24222              		.cfi_startproc
 24223              		@ args = 0, pretend = 0, frame = 8
 24224              		@ frame_needed = 1, uses_anonymous_args = 0
 24225 0000 80B5     		push	{r7, lr}
 24226              		.cfi_def_cfa_offset 8
 24227              		.cfi_offset 7, -8
 24228              		.cfi_offset 14, -4
 24229 0002 82B0     		sub	sp, sp, #8
 24230              		.cfi_def_cfa_offset 16
 24231 0004 00AF     		add	r7, sp, #0
 24232              		.cfi_def_cfa_register 7
3497:..\src/command_processing.c ****  
3498:..\src/command_processing.c ****     int16 aux_int16;
3499:..\src/command_processing.c ****     
3500:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3501:..\src/command_processing.c ****     
3502:..\src/command_processing.c ****     uint8 packet_data[6];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 531


3503:..\src/command_processing.c ****     
3504:..\src/command_processing.c ****     // Header        
3505:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 24233              		.loc 1 3505 0
 24234 0006 9223     		movs	r3, #146
 24235 0008 3B70     		strb	r3, [r7]
3506:..\src/command_processing.c ****     
3507:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 24236              		.loc 1 3507 0
 24237 000a 134B     		ldr	r3, .L922
 24238 000c 1B6A     		ldr	r3, [r3, #32]
 24239 000e 1BB2     		sxth	r3, r3
 24240 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3508:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24241              		.loc 1 3508 0
 24242 0012 BB1D     		adds	r3, r7, #6
 24243 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24244 0016 BB70     		strb	r3, [r7, #2]
3509:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24245              		.loc 1 3509 0
 24246 0018 BB1D     		adds	r3, r7, #6
 24247 001a 0133     		adds	r3, r3, #1
 24248 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24249 001e 7B70     		strb	r3, [r7, #1]
3510:..\src/command_processing.c ****     
3511:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 24250              		.loc 1 3511 0
 24251 0020 0D4B     		ldr	r3, .L922
 24252 0022 5B6A     		ldr	r3, [r3, #36]
 24253 0024 1BB2     		sxth	r3, r3
 24254 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3512:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24255              		.loc 1 3512 0
 24256 0028 BB1D     		adds	r3, r7, #6
 24257 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24258 002c 3B71     		strb	r3, [r7, #4]
3513:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24259              		.loc 1 3513 0
 24260 002e BB1D     		adds	r3, r7, #6
 24261 0030 0133     		adds	r3, r3, #1
 24262 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24263 0034 FB70     		strb	r3, [r7, #3]
3514:..\src/command_processing.c **** 
3515:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24264              		.loc 1 3515 0
 24265 0036 3B46     		mov	r3, r7
 24266 0038 0521     		movs	r1, #5
 24267 003a 1846     		mov	r0, r3
 24268 003c FFF7FEFF 		bl	LCRChecksum
 24269 0040 0346     		mov	r3, r0
 24270 0042 7B71     		strb	r3, [r7, #5]
3516:..\src/command_processing.c **** 
3517:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24271              		.loc 1 3517 0
 24272 0044 3B46     		mov	r3, r7
 24273 0046 0621     		movs	r1, #6
 24274 0048 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 532


 24275 004a FFF7FEFF 		bl	commWrite
3518:..\src/command_processing.c **** }
 24276              		.loc 1 3518 0
 24277 004e 00BF     		nop
 24278 0050 0837     		adds	r7, r7, #8
 24279              		.cfi_def_cfa_offset 8
 24280 0052 BD46     		mov	sp, r7
 24281              		.cfi_def_cfa_register 13
 24282              		@ sp needed
 24283 0054 80BD     		pop	{r7, pc}
 24284              	.L923:
 24285 0056 00BF     		.align	2
 24286              	.L922:
 24287 0058 00000000 		.word	g_adc_measOld
 24288              		.cfi_endproc
 24289              	.LFE97:
 24290              		.size	cmd_get_joystick, .-cmd_get_joystick
 24291              		.section	.text.cmd_set_inputs,"ax",%progbits
 24292              		.align	2
 24293              		.global	cmd_set_inputs
 24294              		.thumb
 24295              		.thumb_func
 24296              		.type	cmd_set_inputs, %function
 24297              	cmd_set_inputs:
 24298              	.LFB98:
3519:..\src/command_processing.c **** 
3520:..\src/command_processing.c **** void cmd_set_inputs(){
 24299              		.loc 1 3520 0
 24300              		.cfi_startproc
 24301              		@ args = 0, pretend = 0, frame = 8
 24302              		@ frame_needed = 1, uses_anonymous_args = 0
 24303              		@ link register save eliminated.
 24304 0000 90B4     		push	{r4, r7}
 24305              		.cfi_def_cfa_offset 8
 24306              		.cfi_offset 4, -8
 24307              		.cfi_offset 7, -4
 24308 0002 82B0     		sub	sp, sp, #8
 24309              		.cfi_def_cfa_offset 16
 24310 0004 00AF     		add	r7, sp, #0
 24311              		.cfi_def_cfa_register 7
3521:..\src/command_processing.c ****     
3522:..\src/command_processing.c ****     // Store position setted in right variables
3523:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3524:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3525:..\src/command_processing.c ****     
3526:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 24312              		.loc 1 3526 0
 24313 0006 894B     		ldr	r3, .L938
 24314 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24315 000a 1B02     		lsls	r3, r3, #8
 24316 000c 1AB2     		sxth	r2, r3
 24317 000e 874B     		ldr	r3, .L938
 24318 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24319 0012 1BB2     		sxth	r3, r3
 24320 0014 1343     		orrs	r3, r3, r2
 24321 0016 1BB2     		sxth	r3, r3
 24322 0018 3B80     		strh	r3, [r7]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 533


3527:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 24323              		.loc 1 3527 0
 24324 001a 844B     		ldr	r3, .L938
 24325 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 24326 001e 1B02     		lsls	r3, r3, #8
 24327 0020 1AB2     		sxth	r2, r3
 24328 0022 824B     		ldr	r3, .L938
 24329 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24330 0026 1BB2     		sxth	r3, r3
 24331 0028 1343     		orrs	r3, r3, r2
 24332 002a 1BB2     		sxth	r3, r3
 24333 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 24334              	.LBB31:
3528:..\src/command_processing.c ****     
3529:..\src/command_processing.c ****     // Check if last command received was the same as this 
3530:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3531:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 24335              		.loc 1 3531 0
 24336 002e 0023     		movs	r3, #0
 24337 0030 FB71     		strb	r3, [r7, #7]
 24338 0032 1DE0     		b	.L925
 24339              	.L927:
3532:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24340              		.loc 1 3532 0
 24341 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24342 0036 7E4A     		ldr	r2, .L938+4
 24343 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 24344 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24345 003e 5B00     		lsls	r3, r3, #1
 24346 0040 07F10801 		add	r1, r7, #8
 24347 0044 0B44     		add	r3, r3, r1
 24348 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 24349 004a 9A42     		cmp	r2, r3
 24350 004c 02D0     		beq	.L926
3533:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 24351              		.loc 1 3533 0
 24352 004e 794B     		ldr	r3, .L938+8
 24353 0050 0122     		movs	r2, #1
 24354 0052 1A70     		strb	r2, [r3]
 24355              	.L926:
3534:..\src/command_processing.c ****        }
3535:..\src/command_processing.c ****         // Update last command
3536:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 24356              		.loc 1 3536 0 discriminator 2
 24357 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24358 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24359 0058 5B00     		lsls	r3, r3, #1
 24360 005a 07F10801 		add	r1, r7, #8
 24361 005e 0B44     		add	r3, r3, r1
 24362 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 24363 0064 724B     		ldr	r3, .L938+4
 24364 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3531:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24365              		.loc 1 3531 0 discriminator 2
 24366 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24367 006c 0133     		adds	r3, r3, #1
 24368 006e FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 534


 24369              	.L925:
3531:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24370              		.loc 1 3531 0 is_stmt 0 discriminator 1
 24371 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24372 0072 714B     		ldr	r3, .L938+12
 24373 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24374 0078 0133     		adds	r3, r3, #1
 24375 007a 9A42     		cmp	r2, r3
 24376 007c DADB     		blt	.L927
 24377              	.LBE31:
3537:..\src/command_processing.c ****     }
3538:..\src/command_processing.c ****     
3539:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3540:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 24378              		.loc 1 3540 0 is_stmt 1
 24379 007e 6D4B     		ldr	r3, .L938+8
 24380 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24381 0082 002B     		cmp	r3, #0
 24382 0084 00F0CC80 		beq	.L937
 24383              	.LBB32:
3541:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 24384              		.loc 1 3541 0
 24385 0088 0023     		movs	r3, #0
 24386 008a BB71     		strb	r3, [r7, #6]
 24387 008c C4E0     		b	.L929
 24388              	.L936:
3542:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24389              		.loc 1 3542 0
 24390 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24391 0090 6A49     		ldr	r1, .L938+16
 24392 0092 1346     		mov	r3, r2
 24393 0094 DB00     		lsls	r3, r3, #3
 24394 0096 9B1A     		subs	r3, r3, r2
 24395 0098 1B01     		lsls	r3, r3, #4
 24396 009a 0B44     		add	r3, r3, r1
 24397 009c 03F20F13 		addw	r3, r3, #271
 24398 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24399 00a2 022B     		cmp	r3, #2
 24400 00a4 0ED1     		bne	.L930
3543:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 24401              		.loc 1 3543 0
 24402 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24403 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24404 00aa 5B00     		lsls	r3, r3, #1
 24405 00ac 07F10801 		add	r1, r7, #8
 24406 00b0 0B44     		add	r3, r3, r1
 24407 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 24408 00b6 1846     		mov	r0, r3
 24409 00b8 6149     		ldr	r1, .L938+20
 24410 00ba 1301     		lsls	r3, r2, #4
 24411 00bc 0B44     		add	r3, r3, r1
 24412 00be 0433     		adds	r3, r3, #4
 24413 00c0 1860     		str	r0, [r3]
 24414 00c2 47E0     		b	.L931
 24415              	.L930:
3544:..\src/command_processing.c ****             }
3545:..\src/command_processing.c ****             else {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 535


3546:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 24416              		.loc 1 3546 0
 24417 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24418 00c6 5D49     		ldr	r1, .L938+16
 24419 00c8 1346     		mov	r3, r2
 24420 00ca DB00     		lsls	r3, r3, #3
 24421 00cc 9B1A     		subs	r3, r3, r2
 24422 00ce 1B01     		lsls	r3, r3, #4
 24423 00d0 0B44     		add	r3, r3, r1
 24424 00d2 03F20F13 		addw	r3, r3, #271
 24425 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24426 00d8 012B     		cmp	r3, #1
 24427 00da 0ED1     		bne	.L932
3547:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 24428              		.loc 1 3547 0
 24429 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24430 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24431 00e0 5B00     		lsls	r3, r3, #1
 24432 00e2 07F10801 		add	r1, r7, #8
 24433 00e6 0B44     		add	r3, r3, r1
 24434 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 24435 00ec 1846     		mov	r0, r3
 24436 00ee 5449     		ldr	r1, .L938+20
 24437 00f0 1301     		lsls	r3, r2, #4
 24438 00f2 0B44     		add	r3, r3, r1
 24439 00f4 0833     		adds	r3, r3, #8
 24440 00f6 1860     		str	r0, [r3]
 24441 00f8 2CE0     		b	.L931
 24442              	.L932:
3548:..\src/command_processing.c ****                 }
3549:..\src/command_processing.c ****                 else {
3550:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 24443              		.loc 1 3550 0
 24444 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24445 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24446 00fe 5B00     		lsls	r3, r3, #1
 24447 0100 07F10801 		add	r1, r7, #8
 24448 0104 0B44     		add	r3, r3, r1
 24449 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 24450 010a 1846     		mov	r0, r3
 24451 010c 4C49     		ldr	r1, .L938+20
 24452 010e 1301     		lsls	r3, r2, #4
 24453 0110 0B44     		add	r3, r3, r1
 24454 0112 1860     		str	r0, [r3]
3551:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 24455              		.loc 1 3551 0
 24456 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24457 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24458 0118 494A     		ldr	r2, .L938+20
 24459 011a 1B01     		lsls	r3, r3, #4
 24460 011c 1344     		add	r3, r3, r2
 24461 011e 1868     		ldr	r0, [r3]
 24462 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24463 0122 454C     		ldr	r4, .L938+12
 24464 0124 1346     		mov	r3, r2
 24465 0126 DB00     		lsls	r3, r3, #3
 24466 0128 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 536


 24467 012a 1B01     		lsls	r3, r3, #4
 24468 012c 2344     		add	r3, r3, r4
 24469 012e 03F58873 		add	r3, r3, #272
 24470 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24471 0134 1C46     		mov	r4, r3
 24472 0136 414A     		ldr	r2, .L938+16
 24473 0138 2346     		mov	r3, r4
 24474 013a 5B00     		lsls	r3, r3, #1
 24475 013c 2344     		add	r3, r3, r4
 24476 013e 1B01     		lsls	r3, r3, #4
 24477 0140 1344     		add	r3, r3, r2
 24478 0142 03F29513 		addw	r3, r3, #405
 24479 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24480 0148 00FA03F2 		lsl	r2, r0, r3
 24481 014c 3C48     		ldr	r0, .L938+20
 24482 014e 0B01     		lsls	r3, r1, #4
 24483 0150 0344     		add	r3, r3, r0
 24484 0152 1A60     		str	r2, [r3]
 24485              	.L931:
3552:..\src/command_processing.c ****                 }
3553:..\src/command_processing.c ****             }  
3554:..\src/command_processing.c ****                
3555:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3556:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 24486              		.loc 1 3556 0
 24487 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24488 0156 3849     		ldr	r1, .L938+12
 24489 0158 1346     		mov	r3, r2
 24490 015a DB00     		lsls	r3, r3, #3
 24491 015c 9B1A     		subs	r3, r3, r2
 24492 015e 1B01     		lsls	r3, r3, #4
 24493 0160 0B44     		add	r3, r3, r1
 24494 0162 E333     		adds	r3, r3, #227
 24495 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24496 0166 002B     		cmp	r3, #0
 24497 0168 53D0     		beq	.L933
 24498              		.loc 1 3556 0 is_stmt 0 discriminator 1
 24499 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24500 016c 3349     		ldr	r1, .L938+16
 24501 016e 1346     		mov	r3, r2
 24502 0170 DB00     		lsls	r3, r3, #3
 24503 0172 9B1A     		subs	r3, r3, r2
 24504 0174 1B01     		lsls	r3, r3, #4
 24505 0176 0B44     		add	r3, r3, r1
 24506 0178 03F20F13 		addw	r3, r3, #271
 24507 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24508 017e 032B     		cmp	r3, #3
 24509 0180 0BD0     		beq	.L934
 24510              		.loc 1 3556 0 discriminator 2
 24511 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24512 0184 2D49     		ldr	r1, .L938+16
 24513 0186 1346     		mov	r3, r2
 24514 0188 DB00     		lsls	r3, r3, #3
 24515 018a 9B1A     		subs	r3, r3, r2
 24516 018c 1B01     		lsls	r3, r3, #4
 24517 018e 0B44     		add	r3, r3, r1
 24518 0190 03F20F13 		addw	r3, r3, #271
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 537


 24519 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24520 0196 002B     		cmp	r3, #0
 24521 0198 3BD1     		bne	.L933
 24522              	.L934:
3557:..\src/command_processing.c ****                 
3558:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 24523              		.loc 1 3558 0 is_stmt 1
 24524 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24525 019c 284A     		ldr	r2, .L938+20
 24526 019e 1B01     		lsls	r3, r3, #4
 24527 01a0 1344     		add	r3, r3, r2
 24528 01a2 1968     		ldr	r1, [r3]
 24529 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24530 01a6 2448     		ldr	r0, .L938+12
 24531 01a8 1346     		mov	r3, r2
 24532 01aa DB00     		lsls	r3, r3, #3
 24533 01ac 9B1A     		subs	r3, r3, r2
 24534 01ae 1B01     		lsls	r3, r3, #4
 24535 01b0 0344     		add	r3, r3, r0
 24536 01b2 E433     		adds	r3, r3, #228
 24537 01b4 1B68     		ldr	r3, [r3]
 24538 01b6 9942     		cmp	r1, r3
 24539 01b8 0DDA     		bge	.L935
3559:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 24540              		.loc 1 3559 0
 24541 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24542 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24543 01be 1E48     		ldr	r0, .L938+12
 24544 01c0 1346     		mov	r3, r2
 24545 01c2 DB00     		lsls	r3, r3, #3
 24546 01c4 9B1A     		subs	r3, r3, r2
 24547 01c6 1B01     		lsls	r3, r3, #4
 24548 01c8 0344     		add	r3, r3, r0
 24549 01ca E433     		adds	r3, r3, #228
 24550 01cc 1A68     		ldr	r2, [r3]
 24551 01ce 1C48     		ldr	r0, .L938+20
 24552 01d0 0B01     		lsls	r3, r1, #4
 24553 01d2 0344     		add	r3, r3, r0
 24554 01d4 1A60     		str	r2, [r3]
 24555              	.L935:
3560:..\src/command_processing.c **** 
3561:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 24556              		.loc 1 3561 0
 24557 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24558 01d8 194A     		ldr	r2, .L938+20
 24559 01da 1B01     		lsls	r3, r3, #4
 24560 01dc 1344     		add	r3, r3, r2
 24561 01de 1968     		ldr	r1, [r3]
 24562 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24563 01e2 1548     		ldr	r0, .L938+12
 24564 01e4 1346     		mov	r3, r2
 24565 01e6 DB00     		lsls	r3, r3, #3
 24566 01e8 9B1A     		subs	r3, r3, r2
 24567 01ea 1B01     		lsls	r3, r3, #4
 24568 01ec 0344     		add	r3, r3, r0
 24569 01ee E833     		adds	r3, r3, #232
 24570 01f0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 538


 24571 01f2 9942     		cmp	r1, r3
 24572 01f4 0DDD     		ble	.L933
3562:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 24573              		.loc 1 3562 0
 24574 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24575 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24576 01fa 0F48     		ldr	r0, .L938+12
 24577 01fc 1346     		mov	r3, r2
 24578 01fe DB00     		lsls	r3, r3, #3
 24579 0200 9B1A     		subs	r3, r3, r2
 24580 0202 1B01     		lsls	r3, r3, #4
 24581 0204 0344     		add	r3, r3, r0
 24582 0206 E833     		adds	r3, r3, #232
 24583 0208 1A68     		ldr	r2, [r3]
 24584 020a 0D48     		ldr	r0, .L938+20
 24585 020c 0B01     		lsls	r3, r1, #4
 24586 020e 0344     		add	r3, r3, r0
 24587 0210 1A60     		str	r2, [r3]
 24588              	.L933:
3541:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24589              		.loc 1 3541 0 discriminator 2
 24590 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24591 0214 0133     		adds	r3, r3, #1
 24592 0216 BB71     		strb	r3, [r7, #6]
 24593              	.L929:
3541:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24594              		.loc 1 3541 0 is_stmt 0 discriminator 1
 24595 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24596 021a 012B     		cmp	r3, #1
 24597 021c 7FF637AF 		bls	.L936
 24598              	.L937:
 24599              	.LBE32:
3563:..\src/command_processing.c ****             }
3564:..\src/command_processing.c ****         }  
3565:..\src/command_processing.c ****     }
3566:..\src/command_processing.c **** }
 24600              		.loc 1 3566 0 is_stmt 1
 24601 0220 00BF     		nop
 24602 0222 0837     		adds	r7, r7, #8
 24603              		.cfi_def_cfa_offset 8
 24604 0224 BD46     		mov	sp, r7
 24605              		.cfi_def_cfa_register 13
 24606              		@ sp needed
 24607 0226 90BC     		pop	{r4, r7}
 24608              		.cfi_restore 7
 24609              		.cfi_restore 4
 24610              		.cfi_def_cfa_offset 0
 24611 0228 7047     		bx	lr
 24612              	.L939:
 24613 022a 00BF     		.align	2
 24614              	.L938:
 24615 022c 00000000 		.word	g_rx
 24616 0230 08000000 		.word	last_aux_int16.11165
 24617 0234 00000000 		.word	change_ext_ref_flag
 24618 0238 00000000 		.word	c_mem
 24619 023c 00000000 		.word	g_mem
 24620 0240 00000000 		.word	g_refNew
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 539


 24621              		.cfi_endproc
 24622              	.LFE98:
 24623              		.size	cmd_set_inputs, .-cmd_set_inputs
 24624              		.section	.text.cmd_activate,"ax",%progbits
 24625              		.align	2
 24626              		.global	cmd_activate
 24627              		.thumb
 24628              		.thumb_func
 24629              		.type	cmd_activate, %function
 24630              	cmd_activate:
 24631              	.LFB99:
3567:..\src/command_processing.c **** 
3568:..\src/command_processing.c **** void cmd_activate(){
 24632              		.loc 1 3568 0
 24633              		.cfi_startproc
 24634              		@ args = 0, pretend = 0, frame = 8
 24635              		@ frame_needed = 1, uses_anonymous_args = 0
 24636 0000 80B5     		push	{r7, lr}
 24637              		.cfi_def_cfa_offset 8
 24638              		.cfi_offset 7, -8
 24639              		.cfi_offset 14, -4
 24640 0002 82B0     		sub	sp, sp, #8
 24641              		.cfi_def_cfa_offset 16
 24642 0004 00AF     		add	r7, sp, #0
 24643              		.cfi_def_cfa_register 7
3569:..\src/command_processing.c ****     
3570:..\src/command_processing.c ****     // Store new value reads
3571:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 24644              		.loc 1 3571 0
 24645 0006 334B     		ldr	r3, .L949
 24646 0008 5B78     		ldrb	r3, [r3, #1]
 24647 000a FB71     		strb	r3, [r7, #7]
3572:..\src/command_processing.c ****     
3573:..\src/command_processing.c ****     // Check type of control mode enabled
3574:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 24648              		.loc 1 3574 0
 24649 000c 324B     		ldr	r3, .L949+4
 24650 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24651 0012 002B     		cmp	r3, #0
 24652 0014 04D0     		beq	.L941
 24653              		.loc 1 3574 0 is_stmt 0 discriminator 1
 24654 0016 304B     		ldr	r3, .L949+4
 24655 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24656 001c 032B     		cmp	r3, #3
 24657 001e 0BD1     		bne	.L942
 24658              	.L941:
3575:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 24659              		.loc 1 3575 0 is_stmt 1
 24660 0020 2D4B     		ldr	r3, .L949+4
 24661 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24662 0026 1946     		mov	r1, r3
 24663 0028 2C4A     		ldr	r2, .L949+8
 24664 002a 3423     		movs	r3, #52
 24665 002c 03FB01F3 		mul	r3, r3, r1
 24666 0030 1344     		add	r3, r3, r2
 24667 0032 1B68     		ldr	r3, [r3]
 24668 0034 2A4A     		ldr	r2, .L949+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 540


 24669 0036 1360     		str	r3, [r2]
 24670              	.L942:
3576:..\src/command_processing.c ****     }
3577:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 24671              		.loc 1 3577 0
 24672 0038 FB79     		ldrb	r3, [r7, #7]
 24673 003a 03F00103 		and	r3, r3, #1
 24674 003e DAB2     		uxtb	r2, r3
 24675 0040 274B     		ldr	r3, .L949+12
 24676 0042 1A73     		strb	r2, [r3, #12]
3578:..\src/command_processing.c ****     
3579:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3580:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
 24677              		.loc 1 3580 0
 24678 0044 244B     		ldr	r3, .L949+4
 24679 0046 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 24680 004a 022B     		cmp	r3, #2
 24681 004c 0FD1     		bne	.L943
3581:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3582:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3583:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
 24682              		.loc 1 3583 0
 24683 004e 244B     		ldr	r3, .L949+12
 24684 0050 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24685 0052 002B     		cmp	r3, #0
 24686 0054 02D1     		bne	.L944
3584:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
 24687              		.loc 1 3584 0
 24688 0056 224B     		ldr	r3, .L949+12
 24689 0058 0022     		movs	r2, #0
 24690 005a 9A60     		str	r2, [r3, #8]
 24691              	.L944:
3585:..\src/command_processing.c ****         }
3586:..\src/command_processing.c ****         
3587:..\src/command_processing.c ****         // Activate or deactivate the valve
3588:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
 24692              		.loc 1 3588 0
 24693 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24694 005e 5B08     		lsrs	r3, r3, #1
 24695 0060 DBB2     		uxtb	r3, r3
 24696 0062 03F00103 		and	r3, r3, #1
 24697 0066 DBB2     		uxtb	r3, r3
 24698 0068 1846     		mov	r0, r3
 24699 006a FFF7FEFF 		bl	VALVE_Write
 24700              	.L943:
3589:..\src/command_processing.c ****     }
3590:..\src/command_processing.c **** #endif
3591:..\src/command_processing.c ****     
3592:..\src/command_processing.c ****     // Activate/Deactivate motor
3593:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 24701              		.loc 1 3593 0
 24702 006e 1C4B     		ldr	r3, .L949+12
 24703 0070 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24704 0072 1946     		mov	r1, r3
 24705 0074 0020     		movs	r0, #0
 24706 0076 FFF7FEFF 		bl	enable_motor
3594:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 541


3595:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24707              		.loc 1 3595 0
 24708 007a 174B     		ldr	r3, .L949+4
 24709 007c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24710 0080 012B     		cmp	r3, #1
 24711 0082 23D1     		bne	.L948
3596:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 24712              		.loc 1 3596 0
 24713 0084 144B     		ldr	r3, .L949+4
 24714 0086 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24715 008a 002B     		cmp	r3, #0
 24716 008c 04D0     		beq	.L946
 24717              		.loc 1 3596 0 is_stmt 0 discriminator 1
 24718 008e 124B     		ldr	r3, .L949+4
 24719 0090 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24720 0094 032B     		cmp	r3, #3
 24721 0096 0BD1     		bne	.L947
 24722              	.L946:
3597:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 24723              		.loc 1 3597 0 is_stmt 1
 24724 0098 0F4B     		ldr	r3, .L949+4
 24725 009a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24726 009e 1946     		mov	r1, r3
 24727 00a0 0E4A     		ldr	r2, .L949+8
 24728 00a2 3423     		movs	r3, #52
 24729 00a4 03FB01F3 		mul	r3, r3, r1
 24730 00a8 1344     		add	r3, r3, r2
 24731 00aa 1B68     		ldr	r3, [r3]
 24732 00ac 0C4A     		ldr	r2, .L949+12
 24733 00ae 1361     		str	r3, [r2, #16]
 24734              	.L947:
3598:..\src/command_processing.c ****         }
3599:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 24735              		.loc 1 3599 0
 24736 00b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24737 00b2 5B08     		lsrs	r3, r3, #1
 24738 00b4 DBB2     		uxtb	r3, r3
 24739 00b6 03F00103 		and	r3, r3, #1
 24740 00ba DAB2     		uxtb	r2, r3
 24741 00bc 084B     		ldr	r3, .L949+12
 24742 00be 1A77     		strb	r2, [r3, #28]
3600:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 24743              		.loc 1 3600 0
 24744 00c0 074B     		ldr	r3, .L949+12
 24745 00c2 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24746 00c4 1946     		mov	r1, r3
 24747 00c6 0120     		movs	r0, #1
 24748 00c8 FFF7FEFF 		bl	enable_motor
 24749              	.L948:
3601:..\src/command_processing.c ****     }
3602:..\src/command_processing.c ****     
3603:..\src/command_processing.c **** }
 24750              		.loc 1 3603 0
 24751 00cc 00BF     		nop
 24752 00ce 0837     		adds	r7, r7, #8
 24753              		.cfi_def_cfa_offset 8
 24754 00d0 BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 542


 24755              		.cfi_def_cfa_register 13
 24756              		@ sp needed
 24757 00d2 80BD     		pop	{r7, pc}
 24758              	.L950:
 24759              		.align	2
 24760              	.L949:
 24761 00d4 00000000 		.word	g_rx
 24762 00d8 00000000 		.word	g_mem
 24763 00dc 00000000 		.word	g_meas
 24764 00e0 00000000 		.word	g_refNew
 24765              		.cfi_endproc
 24766              	.LFE99:
 24767              		.size	cmd_activate, .-cmd_activate
 24768              		.section	.text.cmd_get_activate,"ax",%progbits
 24769              		.align	2
 24770              		.global	cmd_get_activate
 24771              		.thumb
 24772              		.thumb_func
 24773              		.type	cmd_get_activate, %function
 24774              	cmd_get_activate:
 24775              	.LFB100:
3604:..\src/command_processing.c **** 
3605:..\src/command_processing.c **** void cmd_get_activate(){
 24776              		.loc 1 3605 0
 24777              		.cfi_startproc
 24778              		@ args = 0, pretend = 0, frame = 8
 24779              		@ frame_needed = 1, uses_anonymous_args = 0
 24780 0000 80B5     		push	{r7, lr}
 24781              		.cfi_def_cfa_offset 8
 24782              		.cfi_offset 7, -8
 24783              		.cfi_offset 14, -4
 24784 0002 82B0     		sub	sp, sp, #8
 24785              		.cfi_def_cfa_offset 16
 24786 0004 00AF     		add	r7, sp, #0
 24787              		.cfi_def_cfa_register 7
3606:..\src/command_processing.c ****     
3607:..\src/command_processing.c ****     uint8 packet_data[3];
3608:..\src/command_processing.c **** 
3609:..\src/command_processing.c ****     // Header        
3610:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 24788              		.loc 1 3610 0
 24789 0006 8123     		movs	r3, #129
 24790 0008 3B71     		strb	r3, [r7, #4]
3611:..\src/command_processing.c ****     
3612:..\src/command_processing.c ****     // Fill payload
3613:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24791              		.loc 1 3613 0
 24792 000a 124B     		ldr	r3, .L954
 24793 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24794 0010 012B     		cmp	r3, #1
 24795 0012 0BD1     		bne	.L952
3614:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 24796              		.loc 1 3614 0
 24797 0014 104B     		ldr	r3, .L954+4
 24798 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24799 0018 5B00     		lsls	r3, r3, #1
 24800 001a 5AB2     		sxtb	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 543


 24801 001c 0E4B     		ldr	r3, .L954+4
 24802 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24803 0020 5BB2     		sxtb	r3, r3
 24804 0022 1343     		orrs	r3, r3, r2
 24805 0024 5BB2     		sxtb	r3, r3
 24806 0026 DBB2     		uxtb	r3, r3
 24807 0028 7B71     		strb	r3, [r7, #5]
 24808 002a 02E0     		b	.L953
 24809              	.L952:
3615:..\src/command_processing.c ****     } 
3616:..\src/command_processing.c ****     else {
3617:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 24810              		.loc 1 3617 0
 24811 002c 0A4B     		ldr	r3, .L954+4
 24812 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24813 0030 7B71     		strb	r3, [r7, #5]
 24814              	.L953:
3618:..\src/command_processing.c ****     }
3619:..\src/command_processing.c ****     
3620:..\src/command_processing.c ****     // Calculate checksum
3621:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 24815              		.loc 1 3621 0
 24816 0032 3B1D     		adds	r3, r7, #4
 24817 0034 0221     		movs	r1, #2
 24818 0036 1846     		mov	r0, r3
 24819 0038 FFF7FEFF 		bl	LCRChecksum
 24820 003c 0346     		mov	r3, r0
 24821 003e BB71     		strb	r3, [r7, #6]
3622:..\src/command_processing.c ****     
3623:..\src/command_processing.c ****     // Send package to UART
3624:..\src/command_processing.c ****     commWrite(packet_data, 3);
 24822              		.loc 1 3624 0
 24823 0040 3B1D     		adds	r3, r7, #4
 24824 0042 0321     		movs	r1, #3
 24825 0044 1846     		mov	r0, r3
 24826 0046 FFF7FEFF 		bl	commWrite
3625:..\src/command_processing.c **** 
3626:..\src/command_processing.c **** }
 24827              		.loc 1 3626 0
 24828 004a 00BF     		nop
 24829 004c 0837     		adds	r7, r7, #8
 24830              		.cfi_def_cfa_offset 8
 24831 004e BD46     		mov	sp, r7
 24832              		.cfi_def_cfa_register 13
 24833              		@ sp needed
 24834 0050 80BD     		pop	{r7, pc}
 24835              	.L955:
 24836 0052 00BF     		.align	2
 24837              	.L954:
 24838 0054 00000000 		.word	g_mem
 24839 0058 00000000 		.word	g_ref
 24840              		.cfi_endproc
 24841              	.LFE100:
 24842              		.size	cmd_get_activate, .-cmd_get_activate
 24843              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 24844              		.align	2
 24845              		.global	cmd_get_curr_and_meas
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 544


 24846              		.thumb
 24847              		.thumb_func
 24848              		.type	cmd_get_curr_and_meas, %function
 24849              	cmd_get_curr_and_meas:
 24850              	.LFB101:
3627:..\src/command_processing.c **** 
3628:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 24851              		.loc 1 3628 0
 24852              		.cfi_startproc
 24853              		@ args = 0, pretend = 0, frame = 16
 24854              		@ frame_needed = 1, uses_anonymous_args = 0
 24855 0000 90B5     		push	{r4, r7, lr}
 24856              		.cfi_def_cfa_offset 12
 24857              		.cfi_offset 4, -12
 24858              		.cfi_offset 7, -8
 24859              		.cfi_offset 14, -4
 24860 0002 85B0     		sub	sp, sp, #20
 24861              		.cfi_def_cfa_offset 32
 24862 0004 00AF     		add	r7, sp, #0
 24863              		.cfi_def_cfa_register 7
3629:..\src/command_processing.c ****     
3630:..\src/command_processing.c ****     uint8 CYDATA index;
3631:..\src/command_processing.c ****     int16 aux_int16;
3632:..\src/command_processing.c ****    
3633:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3634:..\src/command_processing.c ****     
3635:..\src/command_processing.c ****     uint8 packet_data[12]; 
3636:..\src/command_processing.c **** 
3637:..\src/command_processing.c ****     //Header package
3638:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 24864              		.loc 1 3638 0
 24865 0006 8623     		movs	r3, #134
 24866 0008 3B70     		strb	r3, [r7]
3639:..\src/command_processing.c **** 
3640:..\src/command_processing.c ****     // Currents
3641:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 24867              		.loc 1 3641 0
 24868 000a 484B     		ldr	r3, .L961
 24869 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24870 0010 1946     		mov	r1, r3
 24871 0012 474A     		ldr	r2, .L961+4
 24872 0014 3423     		movs	r3, #52
 24873 0016 03FB01F3 		mul	r3, r3, r1
 24874 001a 1344     		add	r3, r3, r2
 24875 001c 0C33     		adds	r3, r3, #12
 24876 001e 1B68     		ldr	r3, [r3]
 24877 0020 1BB2     		sxth	r3, r3
 24878 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3642:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24879              		.loc 1 3642 0
 24880 0024 07F10C03 		add	r3, r7, #12
 24881 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24882 002a BB70     		strb	r3, [r7, #2]
3643:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24883              		.loc 1 3643 0
 24884 002c 07F10C03 		add	r3, r7, #12
 24885 0030 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 545


 24886 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24887 0034 7B70     		strb	r3, [r7, #1]
3644:..\src/command_processing.c ****     
3645:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24888              		.loc 1 3645 0
 24889 0036 3F4B     		ldr	r3, .L961+8
 24890 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24891 003c 012B     		cmp	r3, #1
 24892 003e 0DD1     		bne	.L957
3646:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24893              		.loc 1 3646 0
 24894 0040 3A4B     		ldr	r3, .L961
 24895 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24896 0046 1946     		mov	r1, r3
 24897 0048 394A     		ldr	r2, .L961+4
 24898 004a 3423     		movs	r3, #52
 24899 004c 03FB01F3 		mul	r3, r3, r1
 24900 0050 1344     		add	r3, r3, r2
 24901 0052 0C33     		adds	r3, r3, #12
 24902 0054 1B68     		ldr	r3, [r3]
 24903 0056 1BB2     		sxth	r3, r3
 24904 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 24905 005a 0CE0     		b	.L958
 24906              	.L957:
3647:..\src/command_processing.c ****     }
3648:..\src/command_processing.c ****     else {
3649:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24907              		.loc 1 3649 0
 24908 005c 334B     		ldr	r3, .L961
 24909 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24910 0062 1946     		mov	r1, r3
 24911 0064 324A     		ldr	r2, .L961+4
 24912 0066 3423     		movs	r3, #52
 24913 0068 03FB01F3 		mul	r3, r3, r1
 24914 006c 1344     		add	r3, r3, r2
 24915 006e 1033     		adds	r3, r3, #16
 24916 0070 1B68     		ldr	r3, [r3]
 24917 0072 1BB2     		sxth	r3, r3
 24918 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 24919              	.L958:
3650:..\src/command_processing.c ****     }
3651:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24920              		.loc 1 3651 0
 24921 0076 07F10C03 		add	r3, r7, #12
 24922 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24923 007c 3B71     		strb	r3, [r7, #4]
3652:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24924              		.loc 1 3652 0
 24925 007e 07F10C03 		add	r3, r7, #12
 24926 0082 0133     		adds	r3, r3, #1
 24927 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24928 0086 FB70     		strb	r3, [r7, #3]
3653:..\src/command_processing.c **** 
3654:..\src/command_processing.c ****     // Positions
3655:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24929              		.loc 1 3655 0
 24930 0088 0323     		movs	r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 546


 24931 008a FB73     		strb	r3, [r7, #15]
 24932 008c 38E0     		b	.L959
 24933              	.L960:
3656:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24934              		.loc 1 3656 0
 24935 008e 274B     		ldr	r3, .L961
 24936 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24937 0094 1A46     		mov	r2, r3
 24938 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24939 0098 2548     		ldr	r0, .L961+4
 24940 009a 1346     		mov	r3, r2
 24941 009c 5B00     		lsls	r3, r3, #1
 24942 009e 1344     		add	r3, r3, r2
 24943 00a0 9B00     		lsls	r3, r3, #2
 24944 00a2 1344     		add	r3, r3, r2
 24945 00a4 0B44     		add	r3, r3, r1
 24946 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24947 00aa 204B     		ldr	r3, .L961
 24948 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24949 00b0 1C46     		mov	r4, r3
 24950 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24951 00b4 1D48     		ldr	r0, .L961
 24952 00b6 2346     		mov	r3, r4
 24953 00b8 5B00     		lsls	r3, r3, #1
 24954 00ba 2344     		add	r3, r3, r4
 24955 00bc 1B01     		lsls	r3, r3, #4
 24956 00be 0344     		add	r3, r3, r0
 24957 00c0 0B44     		add	r3, r3, r1
 24958 00c2 03F29513 		addw	r3, r3, #405
 24959 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24960 00c8 42FA03F3 		asr	r3, r2, r3
 24961 00cc 1BB2     		sxth	r3, r3
 24962 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3657:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 24963              		.loc 1 3657 0
 24964 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24965 00d2 5B00     		lsls	r3, r3, #1
 24966 00d4 0633     		adds	r3, r3, #6
 24967 00d6 07F10C02 		add	r2, r7, #12
 24968 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24969 00dc 07F11001 		add	r1, r7, #16
 24970 00e0 0B44     		add	r3, r3, r1
 24971 00e2 03F8102C 		strb	r2, [r3, #-16]
3658:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 24972              		.loc 1 3658 0
 24973 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24974 00e8 5B00     		lsls	r3, r3, #1
 24975 00ea 5A1D     		adds	r2, r3, #5
 24976 00ec 07F10C03 		add	r3, r7, #12
 24977 00f0 0133     		adds	r3, r3, #1
 24978 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24979 00f4 07F11003 		add	r3, r7, #16
 24980 00f8 1344     		add	r3, r3, r2
 24981 00fa 0A46     		mov	r2, r1
 24982 00fc 03F8102C 		strb	r2, [r3, #-16]
 24983              	.L959:
3655:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 547


 24984              		.loc 1 3655 0 discriminator 1
 24985 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24986 0102 5A1E     		subs	r2, r3, #1
 24987 0104 FA73     		strb	r2, [r7, #15]
 24988 0106 002B     		cmp	r3, #0
 24989 0108 C1D1     		bne	.L960
3659:..\src/command_processing.c ****     }
3660:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3661:..\src/command_processing.c ****         
3662:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 24990              		.loc 1 3662 0
 24991 010a 3B46     		mov	r3, r7
 24992 010c 0B21     		movs	r1, #11
 24993 010e 1846     		mov	r0, r3
 24994 0110 FFF7FEFF 		bl	LCRChecksum
 24995 0114 0346     		mov	r3, r0
 24996 0116 FB72     		strb	r3, [r7, #11]
3663:..\src/command_processing.c ****     commWrite(packet_data, 12);
 24997              		.loc 1 3663 0
 24998 0118 3B46     		mov	r3, r7
 24999 011a 0C21     		movs	r1, #12
 25000 011c 1846     		mov	r0, r3
 25001 011e FFF7FEFF 		bl	commWrite
3664:..\src/command_processing.c ****    
3665:..\src/command_processing.c **** }
 25002              		.loc 1 3665 0
 25003 0122 00BF     		nop
 25004 0124 1437     		adds	r7, r7, #20
 25005              		.cfi_def_cfa_offset 12
 25006 0126 BD46     		mov	sp, r7
 25007              		.cfi_def_cfa_register 13
 25008              		@ sp needed
 25009 0128 90BD     		pop	{r4, r7, pc}
 25010              	.L962:
 25011 012a 00BF     		.align	2
 25012              	.L961:
 25013 012c 00000000 		.word	g_mem
 25014 0130 00000000 		.word	g_measOld
 25015 0134 00000000 		.word	c_mem
 25016              		.cfi_endproc
 25017              	.LFE101:
 25018              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 25019              		.global	__aeabi_dmul
 25020              		.global	__aeabi_d2iz
 25021              		.section	.text.cmd_get_currents,"ax",%progbits
 25022              		.align	2
 25023              		.global	cmd_get_currents
 25024              		.thumb
 25025              		.thumb_func
 25026              		.type	cmd_get_currents, %function
 25027              	cmd_get_currents:
 25028              	.LFB102:
3666:..\src/command_processing.c **** 
3667:..\src/command_processing.c **** void cmd_get_currents(){
 25029              		.loc 1 3667 0
 25030              		.cfi_startproc
 25031              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 548


 25032              		@ frame_needed = 1, uses_anonymous_args = 0
 25033 0000 90B5     		push	{r4, r7, lr}
 25034              		.cfi_def_cfa_offset 12
 25035              		.cfi_offset 4, -12
 25036              		.cfi_offset 7, -8
 25037              		.cfi_offset 14, -4
 25038 0002 85B0     		sub	sp, sp, #20
 25039              		.cfi_def_cfa_offset 32
 25040 0004 00AF     		add	r7, sp, #0
 25041              		.cfi_def_cfa_register 7
3668:..\src/command_processing.c ****     
3669:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3670:..\src/command_processing.c ****     
3671:..\src/command_processing.c ****     uint8 packet_data[6]; 
3672:..\src/command_processing.c ****     int16 aux_int16;
3673:..\src/command_processing.c ****     
3674:..\src/command_processing.c ****     //Header package
3675:..\src/command_processing.c **** 
3676:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 25042              		.loc 1 3676 0
 25043 0006 8523     		movs	r3, #133
 25044 0008 3B72     		strb	r3, [r7, #8]
3677:..\src/command_processing.c **** 
3678:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 25045              		.loc 1 3678 0
 25046 000a 2E4B     		ldr	r3, .L968
 25047 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 25048 0010 022B     		cmp	r3, #2
 25049 0012 0DD0     		beq	.L964
3679:..\src/command_processing.c ****         // Currents
3680:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 25050              		.loc 1 3680 0
 25051 0014 2C4B     		ldr	r3, .L968+4
 25052 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25053 001a 1946     		mov	r1, r3
 25054 001c 2B4A     		ldr	r2, .L968+8
 25055 001e 3423     		movs	r3, #52
 25056 0020 03FB01F3 		mul	r3, r3, r1
 25057 0024 1344     		add	r3, r3, r2
 25058 0026 0C33     		adds	r3, r3, #12
 25059 0028 1B68     		ldr	r3, [r3]
 25060 002a 1BB2     		sxth	r3, r3
 25061 002c FB80     		strh	r3, [r7, #6]	@ movhi
 25062 002e 12E0     		b	.L965
 25063              	.L964:
3681:..\src/command_processing.c ****     }
3682:..\src/command_processing.c ****     else {
3683:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3684:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 25064              		.loc 1 3684 0
 25065 0030 274B     		ldr	r3, .L968+12
 25066 0032 1B68     		ldr	r3, [r3]	@ float
 25067 0034 1846     		mov	r0, r3
 25068 0036 FFF7FEFF 		bl	__aeabi_f2d
 25069 003a 4FF00002 		mov	r2, #0
 25070 003e 254B     		ldr	r3, .L968+16
 25071 0040 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 549


 25072 0044 0346     		mov	r3, r0
 25073 0046 0C46     		mov	r4, r1
 25074 0048 1846     		mov	r0, r3
 25075 004a 2146     		mov	r1, r4
 25076 004c FFF7FEFF 		bl	__aeabi_d2iz
 25077 0050 0346     		mov	r3, r0
 25078 0052 1BB2     		sxth	r3, r3
 25079 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 25080              	.L965:
3685:..\src/command_processing.c ****     }
3686:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25081              		.loc 1 3686 0
 25082 0056 BB1D     		adds	r3, r7, #6
 25083 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25084 005a BB72     		strb	r3, [r7, #10]
3687:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25085              		.loc 1 3687 0
 25086 005c BB1D     		adds	r3, r7, #6
 25087 005e 0133     		adds	r3, r3, #1
 25088 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25089 0062 7B72     		strb	r3, [r7, #9]
3688:..\src/command_processing.c ****     
3689:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 25090              		.loc 1 3689 0
 25091 0064 174B     		ldr	r3, .L968
 25092 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 25093 006a 012B     		cmp	r3, #1
 25094 006c 0DD1     		bne	.L966
3690:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 25095              		.loc 1 3690 0
 25096 006e 164B     		ldr	r3, .L968+4
 25097 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25098 0074 1946     		mov	r1, r3
 25099 0076 154A     		ldr	r2, .L968+8
 25100 0078 3423     		movs	r3, #52
 25101 007a 03FB01F3 		mul	r3, r3, r1
 25102 007e 1344     		add	r3, r3, r2
 25103 0080 0C33     		adds	r3, r3, #12
 25104 0082 1B68     		ldr	r3, [r3]
 25105 0084 1BB2     		sxth	r3, r3
 25106 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 25107 0088 03E0     		b	.L967
 25108              	.L966:
3691:..\src/command_processing.c ****     }
3692:..\src/command_processing.c ****     else {
3693:..\src/command_processing.c ****        // aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated curren
3694:..\src/command_processing.c ****         aux_int16 = (int16)PWM_IMU_2;
 25109              		.loc 1 3694 0
 25110 008a 134B     		ldr	r3, .L968+20
 25111 008c B3F90030 		ldrsh	r3, [r3]
 25112 0090 FB80     		strh	r3, [r7, #6]	@ movhi
 25113              	.L967:
3695:..\src/command_processing.c ****     }
3696:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25114              		.loc 1 3696 0
 25115 0092 BB1D     		adds	r3, r7, #6
 25116 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 550


 25117 0096 3B73     		strb	r3, [r7, #12]
3697:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25118              		.loc 1 3697 0
 25119 0098 BB1D     		adds	r3, r7, #6
 25120 009a 0133     		adds	r3, r3, #1
 25121 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25122 009e FB72     		strb	r3, [r7, #11]
3698:..\src/command_processing.c **** 
3699:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3700:..\src/command_processing.c **** 
3701:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25123              		.loc 1 3701 0
 25124 00a0 07F10803 		add	r3, r7, #8
 25125 00a4 0521     		movs	r1, #5
 25126 00a6 1846     		mov	r0, r3
 25127 00a8 FFF7FEFF 		bl	LCRChecksum
 25128 00ac 0346     		mov	r3, r0
 25129 00ae 7B73     		strb	r3, [r7, #13]
3702:..\src/command_processing.c ****     
3703:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25130              		.loc 1 3703 0
 25131 00b0 07F10803 		add	r3, r7, #8
 25132 00b4 0621     		movs	r1, #6
 25133 00b6 1846     		mov	r0, r3
 25134 00b8 FFF7FEFF 		bl	commWrite
3704:..\src/command_processing.c **** }
 25135              		.loc 1 3704 0
 25136 00bc 00BF     		nop
 25137 00be 1437     		adds	r7, r7, #20
 25138              		.cfi_def_cfa_offset 12
 25139 00c0 BD46     		mov	sp, r7
 25140              		.cfi_def_cfa_register 13
 25141              		@ sp needed
 25142 00c2 90BD     		pop	{r4, r7, pc}
 25143              	.L969:
 25144              		.align	2
 25145              	.L968:
 25146 00c4 00000000 		.word	c_mem
 25147 00c8 00000000 		.word	g_mem
 25148 00cc 00000000 		.word	g_measOld
 25149 00d0 00000000 		.word	g_fb_meas
 25150 00d4 00005940 		.word	1079574528
 25151 00d8 00000000 		.word	PWM_IMU_2
 25152              		.cfi_endproc
 25153              	.LFE102:
 25154              		.size	cmd_get_currents, .-cmd_get_currents
 25155              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 25156              		.align	2
 25157              		.global	cmd_get_currents_for_cuff
 25158              		.thumb
 25159              		.thumb_func
 25160              		.type	cmd_get_currents_for_cuff, %function
 25161              	cmd_get_currents_for_cuff:
 25162              	.LFB103:
3705:..\src/command_processing.c **** 
3706:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 25163              		.loc 1 3706 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 551


 25164              		.cfi_startproc
 25165              		@ args = 0, pretend = 0, frame = 8
 25166              		@ frame_needed = 1, uses_anonymous_args = 0
 25167 0000 80B5     		push	{r7, lr}
 25168              		.cfi_def_cfa_offset 8
 25169              		.cfi_offset 7, -8
 25170              		.cfi_offset 14, -4
 25171 0002 82B0     		sub	sp, sp, #8
 25172              		.cfi_def_cfa_offset 16
 25173 0004 00AF     		add	r7, sp, #0
 25174              		.cfi_def_cfa_register 7
3707:..\src/command_processing.c ****     
3708:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3709:..\src/command_processing.c ****     
3710:..\src/command_processing.c ****     uint8 packet_data[4]; 
3711:..\src/command_processing.c ****     int16 aux_int16;
3712:..\src/command_processing.c ****     
3713:..\src/command_processing.c ****     //Header package
3714:..\src/command_processing.c **** 
3715:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 25175              		.loc 1 3715 0
 25176 0006 8E23     		movs	r3, #142
 25177 0008 3B71     		strb	r3, [r7, #4]
3716:..\src/command_processing.c **** 
3717:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 25178              		.loc 1 3717 0
 25179 000a 144B     		ldr	r3, .L971
 25180 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25181 0010 1946     		mov	r1, r3
 25182 0012 134A     		ldr	r2, .L971+4
 25183 0014 3423     		movs	r3, #52
 25184 0016 03FB01F3 		mul	r3, r3, r1
 25185 001a 1344     		add	r3, r3, r2
 25186 001c 1033     		adds	r3, r3, #16
 25187 001e 1B68     		ldr	r3, [r3]
 25188 0020 1BB2     		sxth	r3, r3
 25189 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3718:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25190              		.loc 1 3718 0
 25191 0024 BB1C     		adds	r3, r7, #2
 25192 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25193 0028 BB71     		strb	r3, [r7, #6]
3719:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25194              		.loc 1 3719 0
 25195 002a BB1C     		adds	r3, r7, #2
 25196 002c 0133     		adds	r3, r3, #1
 25197 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25198 0030 7B71     		strb	r3, [r7, #5]
3720:..\src/command_processing.c **** 
3721:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3722:..\src/command_processing.c **** 
3723:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 25199              		.loc 1 3723 0
 25200 0032 3B1D     		adds	r3, r7, #4
 25201 0034 0321     		movs	r1, #3
 25202 0036 1846     		mov	r0, r3
 25203 0038 FFF7FEFF 		bl	LCRChecksum
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 552


 25204 003c 0346     		mov	r3, r0
 25205 003e FB71     		strb	r3, [r7, #7]
3724:..\src/command_processing.c ****     
3725:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 25206              		.loc 1 3725 0
 25207 0040 064B     		ldr	r3, .L971
 25208 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25209 0046 013B     		subs	r3, r3, #1
 25210 0048 DAB2     		uxtb	r2, r3
 25211 004a 3B1D     		adds	r3, r7, #4
 25212 004c 0421     		movs	r1, #4
 25213 004e 1846     		mov	r0, r3
 25214 0050 FFF7FEFF 		bl	commWriteID
3726:..\src/command_processing.c **** }
 25215              		.loc 1 3726 0
 25216 0054 00BF     		nop
 25217 0056 0837     		adds	r7, r7, #8
 25218              		.cfi_def_cfa_offset 8
 25219 0058 BD46     		mov	sp, r7
 25220              		.cfi_def_cfa_register 13
 25221              		@ sp needed
 25222 005a 80BD     		pop	{r7, pc}
 25223              	.L972:
 25224              		.align	2
 25225              	.L971:
 25226 005c 00000000 		.word	g_mem
 25227 0060 00000000 		.word	g_measOld
 25228              		.cfi_endproc
 25229              	.LFE103:
 25230              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 25231              		.section	.text.cmd_get_vibrotactile_inputs,"ax",%progbits
 25232              		.align	2
 25233              		.global	cmd_get_vibrotactile_inputs
 25234              		.thumb
 25235              		.thumb_func
 25236              		.type	cmd_get_vibrotactile_inputs, %function
 25237              	cmd_get_vibrotactile_inputs:
 25238              	.LFB104:
3727:..\src/command_processing.c **** 
3728:..\src/command_processing.c **** void cmd_get_vibrotactile_inputs(){
 25239              		.loc 1 3728 0
 25240              		.cfi_startproc
 25241              		@ args = 0, pretend = 0, frame = 0
 25242              		@ frame_needed = 1, uses_anonymous_args = 0
 25243              		@ link register save eliminated.
 25244 0000 80B4     		push	{r7}
 25245              		.cfi_def_cfa_offset 4
 25246              		.cfi_offset 7, -4
 25247 0002 00AF     		add	r7, sp, #0
 25248              		.cfi_def_cfa_register 7
3729:..\src/command_processing.c ****     
3730:..\src/command_processing.c **** }
 25249              		.loc 1 3730 0
 25250 0004 00BF     		nop
 25251 0006 BD46     		mov	sp, r7
 25252              		.cfi_def_cfa_register 13
 25253              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 553


 25254 0008 80BC     		pop	{r7}
 25255              		.cfi_restore 7
 25256              		.cfi_def_cfa_offset 0
 25257 000a 7047     		bx	lr
 25258              		.cfi_endproc
 25259              	.LFE104:
 25260              		.size	cmd_get_vibrotactile_inputs, .-cmd_get_vibrotactile_inputs
 25261              		.section	.text.commReadIMUFromSH,"ax",%progbits
 25262              		.align	2
 25263              		.global	commReadIMUFromSH
 25264              		.thumb
 25265              		.thumb_func
 25266              		.type	commReadIMUFromSH, %function
 25267              	commReadIMUFromSH:
 25268              	.LFB105:
3731:..\src/command_processing.c **** 
3732:..\src/command_processing.c **** //==============================================================================
3733:..\src/command_processing.c **** //                                                 READ IMU VALUES FROM SOFTHAND
3734:..\src/command_processing.c **** //==============================================================================
3735:..\src/command_processing.c **** void commReadIMUFromSH(){
 25269              		.loc 1 3735 0
 25270              		.cfi_startproc
 25271              		@ args = 0, pretend = 0, frame = 32
 25272              		@ frame_needed = 1, uses_anonymous_args = 0
 25273 0000 80B5     		push	{r7, lr}
 25274              		.cfi_def_cfa_offset 8
 25275              		.cfi_offset 7, -8
 25276              		.cfi_offset 14, -4
 25277 0002 88B0     		sub	sp, sp, #32
 25278              		.cfi_def_cfa_offset 40
 25279 0004 00AF     		add	r7, sp, #0
 25280              		.cfi_def_cfa_register 7
3736:..\src/command_processing.c **** 
3737:..\src/command_processing.c ****     // Send CMD_GET_VIBROTACTILE_INPUTS to the slave and gets the PWM control values for the vibrot
3738:..\src/command_processing.c ****     // resulted from the processed IMU values.
3739:..\src/command_processing.c ****     
3740:..\src/command_processing.c ****     uint8 packet_data[16];
3741:..\src/command_processing.c ****     uint8 packet_length;
3742:..\src/command_processing.c ****    
3743:..\src/command_processing.c ****     uint32 t_start, t_end;
3744:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 25281              		.loc 1 3744 0
 25282 0006 0123     		movs	r3, #1
 25283 0008 FB77     		strb	r3, [r7, #31]
3745:..\src/command_processing.c **** 
3746:..\src/command_processing.c ****     packet_length = 2;
 25284              		.loc 1 3746 0
 25285 000a 0223     		movs	r3, #2
 25286 000c BB77     		strb	r3, [r7, #30]
3747:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VIBROTACTILE_INPUTS;
 25287              		.loc 1 3747 0
 25288 000e FA23     		movs	r3, #250
 25289 0010 3B71     		strb	r3, [r7, #4]
3748:..\src/command_processing.c ****     packet_data[1] = CMD_GET_VIBROTACTILE_INPUTS;
 25290              		.loc 1 3748 0
 25291 0012 FA23     		movs	r3, #250
 25292 0014 7B71     		strb	r3, [r7, #5]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 554


3749:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, c_mem.MS.slave_ID);
 25293              		.loc 1 3749 0
 25294 0016 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25295 0018 99B2     		uxth	r1, r3
 25296 001a 234B     		ldr	r3, .L981
 25297 001c 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 25298 0020 3B1D     		adds	r3, r7, #4
 25299 0022 1846     		mov	r0, r3
 25300 0024 FFF7FEFF 		bl	commWriteID
3750:..\src/command_processing.c **** 
3751:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 25301              		.loc 1 3751 0
 25302 0028 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25303 002c 0346     		mov	r3, r0
 25304 002e BB61     		str	r3, [r7, #24]
3752:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_VIBROTACTILE_INPUTS) {
 25305              		.loc 1 3752 0
 25306 0030 18E0     		b	.L975
 25307              	.L978:
3753:..\src/command_processing.c ****         if (interrupt_flag){
 25308              		.loc 1 3753 0
 25309 0032 1E4B     		ldr	r3, .L981+4
 25310 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25311 0036 002B     		cmp	r3, #0
 25312 0038 04D0     		beq	.L976
3754:..\src/command_processing.c ****             interrupt_flag = FALSE;
 25313              		.loc 1 3754 0
 25314 003a 1C4B     		ldr	r3, .L981+4
 25315 003c 0022     		movs	r2, #0
 25316 003e 1A70     		strb	r2, [r3]
3755:..\src/command_processing.c ****             interrupt_manager();
 25317              		.loc 1 3755 0
 25318 0040 FFF7FEFF 		bl	interrupt_manager
 25319              	.L976:
3756:..\src/command_processing.c ****         }
3757:..\src/command_processing.c **** 
3758:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 25320              		.loc 1 3758 0
 25321 0044 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25322 0048 0346     		mov	r3, r0
 25323 004a 7B61     		str	r3, [r7, #20]
3759:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 25324              		.loc 1 3759 0
 25325 004c BA69     		ldr	r2, [r7, #24]
 25326 004e 7B69     		ldr	r3, [r7, #20]
 25327 0050 D31A     		subs	r3, r2, r3
 25328 0052 174A     		ldr	r2, .L981+8
 25329 0054 9342     		cmp	r3, r2
 25330 0056 05D9     		bls	.L975
3760:..\src/command_processing.c ****             read_flag = FALSE;
 25331              		.loc 1 3760 0
 25332 0058 0023     		movs	r3, #0
 25333 005a FB77     		strb	r3, [r7, #31]
3761:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 25334              		.loc 1 3761 0
 25335 005c 154B     		ldr	r3, .L981+12
 25336 005e 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 555


 25337 0060 1A70     		strb	r2, [r3]
3762:..\src/command_processing.c ****             break;
 25338              		.loc 1 3762 0
 25339 0062 03E0     		b	.L977
 25340              	.L975:
3752:..\src/command_processing.c ****         if (interrupt_flag){
 25341              		.loc 1 3752 0
 25342 0064 144B     		ldr	r3, .L981+16
 25343 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25344 0068 FB2B     		cmp	r3, #251
 25345 006a E2D1     		bne	.L978
 25346              	.L977:
3763:..\src/command_processing.c ****         }
3764:..\src/command_processing.c ****     }
3765:..\src/command_processing.c **** 
3766:..\src/command_processing.c ****         if (read_flag) {
 25347              		.loc 1 3766 0
 25348 006c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25349 006e 002B     		cmp	r3, #0
 25350 0070 15D0     		beq	.L980
3767:..\src/command_processing.c ****         PWM_IMU_1 = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);      
 25351              		.loc 1 3767 0
 25352 0072 114B     		ldr	r3, .L981+16
 25353 0074 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25354 0076 1B02     		lsls	r3, r3, #8
 25355 0078 1AB2     		sxth	r2, r3
 25356 007a 0F4B     		ldr	r3, .L981+16
 25357 007c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 25358 007e 1BB2     		sxth	r3, r3
 25359 0080 1343     		orrs	r3, r3, r2
 25360 0082 1AB2     		sxth	r2, r3
 25361 0084 0D4B     		ldr	r3, .L981+20
 25362 0086 1A80     		strh	r2, [r3]	@ movhi
3768:..\src/command_processing.c ****         PWM_IMU_2 = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);      
 25363              		.loc 1 3768 0
 25364 0088 0B4B     		ldr	r3, .L981+16
 25365 008a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 25366 008c 1B02     		lsls	r3, r3, #8
 25367 008e 1AB2     		sxth	r2, r3
 25368 0090 094B     		ldr	r3, .L981+16
 25369 0092 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25370 0094 1BB2     		sxth	r3, r3
 25371 0096 1343     		orrs	r3, r3, r2
 25372 0098 1AB2     		sxth	r2, r3
 25373 009a 094B     		ldr	r3, .L981+24
 25374 009c 1A80     		strh	r2, [r3]	@ movhi
 25375              	.L980:
3769:..\src/command_processing.c ****     }
3770:..\src/command_processing.c ****     
3771:..\src/command_processing.c **** }
 25376              		.loc 1 3771 0
 25377 009e 00BF     		nop
 25378 00a0 2037     		adds	r7, r7, #32
 25379              		.cfi_def_cfa_offset 8
 25380 00a2 BD46     		mov	sp, r7
 25381              		.cfi_def_cfa_register 13
 25382              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 556


 25383 00a4 80BD     		pop	{r7, pc}
 25384              	.L982:
 25385 00a6 00BF     		.align	2
 25386              	.L981:
 25387 00a8 00000000 		.word	c_mem
 25388 00ac 00000000 		.word	interrupt_flag
 25389 00b0 20AA4400 		.word	4500000
 25390 00b4 00000000 		.word	master_mode
 25391 00b8 00000000 		.word	g_rx
 25392 00bc 00000000 		.word	PWM_IMU_1
 25393 00c0 00000000 		.word	PWM_IMU_2
 25394              		.cfi_endproc
 25395              	.LFE105:
 25396              		.size	commReadIMUFromSH, .-commReadIMUFromSH
 25397              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 25398              		.align	2
 25399              		.global	commReadResCurrFromSH
 25400              		.thumb
 25401              		.thumb_func
 25402              		.type	commReadResCurrFromSH, %function
 25403              	commReadResCurrFromSH:
 25404              	.LFB106:
3772:..\src/command_processing.c **** 
3773:..\src/command_processing.c **** //==============================================================================
3774:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3775:..\src/command_processing.c **** //==============================================================================
3776:..\src/command_processing.c **** 
3777:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3778:..\src/command_processing.c **** {
 25405              		.loc 1 3778 0
 25406              		.cfi_startproc
 25407              		@ args = 0, pretend = 0, frame = 32
 25408              		@ frame_needed = 1, uses_anonymous_args = 0
 25409 0000 80B5     		push	{r7, lr}
 25410              		.cfi_def_cfa_offset 8
 25411              		.cfi_offset 7, -8
 25412              		.cfi_offset 14, -4
 25413 0002 88B0     		sub	sp, sp, #32
 25414              		.cfi_def_cfa_offset 40
 25415 0004 00AF     		add	r7, sp, #0
 25416              		.cfi_def_cfa_register 7
3779:..\src/command_processing.c ****     uint8 packet_data[16];
3780:..\src/command_processing.c ****     uint8 packet_length;
3781:..\src/command_processing.c ****     int16 curr_diff = 0;
 25417              		.loc 1 3781 0
 25418 0006 0023     		movs	r3, #0
 25419 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3782:..\src/command_processing.c ****     uint32 t_start, t_end;
3783:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 25420              		.loc 1 3783 0
 25421 000a 0123     		movs	r3, #1
 25422 000c 7B77     		strb	r3, [r7, #29]
3784:..\src/command_processing.c **** 
3785:..\src/command_processing.c ****     packet_length = 2;
 25423              		.loc 1 3785 0
 25424 000e 0223     		movs	r3, #2
 25425 0010 3B77     		strb	r3, [r7, #28]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 557


3786:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 25426              		.loc 1 3786 0
 25427 0012 8C23     		movs	r3, #140
 25428 0014 3B71     		strb	r3, [r7, #4]
3787:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 25429              		.loc 1 3787 0
 25430 0016 8C23     		movs	r3, #140
 25431 0018 7B71     		strb	r3, [r7, #5]
3788:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, c_mem.MS.slave_ID);
 25432              		.loc 1 3788 0
 25433 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 25434 001c 99B2     		uxth	r1, r3
 25435 001e 1D4B     		ldr	r3, .L990
 25436 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 25437 0024 3B1D     		adds	r3, r7, #4
 25438 0026 1846     		mov	r0, r3
 25439 0028 FFF7FEFF 		bl	commWriteID
3789:..\src/command_processing.c **** 
3790:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 25440              		.loc 1 3790 0
 25441 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25442 0030 0346     		mov	r3, r0
 25443 0032 BB61     		str	r3, [r7, #24]
3791:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 25444              		.loc 1 3791 0
 25445 0034 18E0     		b	.L984
 25446              	.L987:
3792:..\src/command_processing.c ****         if (interrupt_flag){
 25447              		.loc 1 3792 0
 25448 0036 184B     		ldr	r3, .L990+4
 25449 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25450 003a 002B     		cmp	r3, #0
 25451 003c 04D0     		beq	.L985
3793:..\src/command_processing.c ****             interrupt_flag = FALSE;
 25452              		.loc 1 3793 0
 25453 003e 164B     		ldr	r3, .L990+4
 25454 0040 0022     		movs	r2, #0
 25455 0042 1A70     		strb	r2, [r3]
3794:..\src/command_processing.c ****             interrupt_manager();
 25456              		.loc 1 3794 0
 25457 0044 FFF7FEFF 		bl	interrupt_manager
 25458              	.L985:
3795:..\src/command_processing.c ****         }
3796:..\src/command_processing.c **** 
3797:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 25459              		.loc 1 3797 0
 25460 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25461 004c 0346     		mov	r3, r0
 25462 004e 7B61     		str	r3, [r7, #20]
3798:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 25463              		.loc 1 3798 0
 25464 0050 BA69     		ldr	r2, [r7, #24]
 25465 0052 7B69     		ldr	r3, [r7, #20]
 25466 0054 D31A     		subs	r3, r2, r3
 25467 0056 114A     		ldr	r2, .L990+8
 25468 0058 9342     		cmp	r3, r2
 25469 005a 05D9     		bls	.L984
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 558


3799:..\src/command_processing.c ****             read_flag = FALSE;
 25470              		.loc 1 3799 0
 25471 005c 0023     		movs	r3, #0
 25472 005e 7B77     		strb	r3, [r7, #29]
3800:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 25473              		.loc 1 3800 0
 25474 0060 0F4B     		ldr	r3, .L990+12
 25475 0062 0022     		movs	r2, #0
 25476 0064 1A70     		strb	r2, [r3]
3801:..\src/command_processing.c ****             break;
 25477              		.loc 1 3801 0
 25478 0066 03E0     		b	.L986
 25479              	.L984:
3791:..\src/command_processing.c ****         if (interrupt_flag){
 25480              		.loc 1 3791 0
 25481 0068 0E4B     		ldr	r3, .L990+16
 25482 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25483 006c 8E2B     		cmp	r3, #142
 25484 006e E2D1     		bne	.L987
 25485              	.L986:
3802:..\src/command_processing.c ****         }
3803:..\src/command_processing.c ****     }
3804:..\src/command_processing.c **** 
3805:..\src/command_processing.c ****     if (read_flag) {
 25486              		.loc 1 3805 0
 25487 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25488 0072 002B     		cmp	r3, #0
 25489 0074 08D0     		beq	.L988
3806:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 25490              		.loc 1 3806 0
 25491 0076 0B4B     		ldr	r3, .L990+16
 25492 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25493 007a 1B02     		lsls	r3, r3, #8
 25494 007c 1AB2     		sxth	r2, r3
 25495 007e 094B     		ldr	r3, .L990+16
 25496 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 25497 0082 1BB2     		sxth	r3, r3
 25498 0084 1343     		orrs	r3, r3, r2
 25499 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 25500              	.L988:
3807:..\src/command_processing.c ****     }
3808:..\src/command_processing.c ****     
3809:..\src/command_processing.c ****     return curr_diff;
 25501              		.loc 1 3809 0
 25502 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3810:..\src/command_processing.c **** }
 25503              		.loc 1 3810 0
 25504 008c 1846     		mov	r0, r3
 25505 008e 2037     		adds	r7, r7, #32
 25506              		.cfi_def_cfa_offset 8
 25507 0090 BD46     		mov	sp, r7
 25508              		.cfi_def_cfa_register 13
 25509              		@ sp needed
 25510 0092 80BD     		pop	{r7, pc}
 25511              	.L991:
 25512              		.align	2
 25513              	.L990:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 559


 25514 0094 00000000 		.word	c_mem
 25515 0098 00000000 		.word	interrupt_flag
 25516 009c 20AA4400 		.word	4500000
 25517 00a0 00000000 		.word	master_mode
 25518 00a4 00000000 		.word	g_rx
 25519              		.cfi_endproc
 25520              	.LFE106:
 25521              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 25522              		.section	.text.cmd_set_baudrate,"ax",%progbits
 25523              		.align	2
 25524              		.global	cmd_set_baudrate
 25525              		.thumb
 25526              		.thumb_func
 25527              		.type	cmd_set_baudrate, %function
 25528              	cmd_set_baudrate:
 25529              	.LFB107:
3811:..\src/command_processing.c **** 
3812:..\src/command_processing.c **** 
3813:..\src/command_processing.c **** /////////////////////////////////////////////////////////////////////////////////////
3814:..\src/command_processing.c **** 
3815:..\src/command_processing.c **** void cmd_set_baudrate(){
 25530              		.loc 1 3815 0
 25531              		.cfi_startproc
 25532              		@ args = 0, pretend = 0, frame = 0
 25533              		@ frame_needed = 1, uses_anonymous_args = 0
 25534 0000 80B5     		push	{r7, lr}
 25535              		.cfi_def_cfa_offset 8
 25536              		.cfi_offset 7, -8
 25537              		.cfi_offset 14, -4
 25538 0002 00AF     		add	r7, sp, #0
 25539              		.cfi_def_cfa_register 7
3816:..\src/command_processing.c ****     
3817:..\src/command_processing.c ****     // Set BaudRate
3818:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 25540              		.loc 1 3818 0
 25541 0004 094B     		ldr	r3, .L997
 25542 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 25543 0008 094B     		ldr	r3, .L997+4
 25544 000a 83F8AA20 		strb	r2, [r3, #170]
3819:..\src/command_processing.c ****     
3820:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 25545              		.loc 1 3820 0
 25546 000e 074B     		ldr	r3, .L997
 25547 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25548 0012 0D2B     		cmp	r3, #13
 25549 0014 04D1     		bne	.L996
3821:..\src/command_processing.c ****         case 13:
3822:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 25550              		.loc 1 3822 0
 25551 0016 0121     		movs	r1, #1
 25552 0018 0C20     		movs	r0, #12
 25553 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3823:..\src/command_processing.c ****             break;
 25554              		.loc 1 3823 0
 25555 001e 03E0     		b	.L995
 25556              	.L996:
3824:..\src/command_processing.c ****         default:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 560


3825:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 25557              		.loc 1 3825 0
 25558 0020 0121     		movs	r1, #1
 25559 0022 0220     		movs	r0, #2
 25560 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 25561              	.L995:
3826:..\src/command_processing.c ****     }
3827:..\src/command_processing.c **** }
 25562              		.loc 1 3827 0
 25563 0028 00BF     		nop
 25564 002a 80BD     		pop	{r7, pc}
 25565              	.L998:
 25566              		.align	2
 25567              	.L997:
 25568 002c 00000000 		.word	g_rx
 25569 0030 00000000 		.word	c_mem
 25570              		.cfi_endproc
 25571              	.LFE107:
 25572              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 25573              		.section	.text.cmd_ping,"ax",%progbits
 25574              		.align	2
 25575              		.global	cmd_ping
 25576              		.thumb
 25577              		.thumb_func
 25578              		.type	cmd_ping, %function
 25579              	cmd_ping:
 25580              	.LFB108:
3828:..\src/command_processing.c **** 
3829:..\src/command_processing.c **** void cmd_ping(){
 25581              		.loc 1 3829 0
 25582              		.cfi_startproc
 25583              		@ args = 0, pretend = 0, frame = 8
 25584              		@ frame_needed = 1, uses_anonymous_args = 0
 25585 0000 80B5     		push	{r7, lr}
 25586              		.cfi_def_cfa_offset 8
 25587              		.cfi_offset 7, -8
 25588              		.cfi_offset 14, -4
 25589 0002 82B0     		sub	sp, sp, #8
 25590              		.cfi_def_cfa_offset 16
 25591 0004 00AF     		add	r7, sp, #0
 25592              		.cfi_def_cfa_register 7
3830:..\src/command_processing.c **** 
3831:..\src/command_processing.c ****     uint8 packet_data[2];
3832:..\src/command_processing.c **** 
3833:..\src/command_processing.c ****     // Header
3834:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 25593              		.loc 1 3834 0
 25594 0006 0023     		movs	r3, #0
 25595 0008 3B71     		strb	r3, [r7, #4]
3835:..\src/command_processing.c ****     
3836:..\src/command_processing.c ****     // Load Payload
3837:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 25596              		.loc 1 3837 0
 25597 000a 0023     		movs	r3, #0
 25598 000c 7B71     		strb	r3, [r7, #5]
3838:..\src/command_processing.c **** 
3839:..\src/command_processing.c ****     // Send Package to uart
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 561


3840:..\src/command_processing.c ****     commWrite(packet_data, 2);
 25599              		.loc 1 3840 0
 25600 000e 3B1D     		adds	r3, r7, #4
 25601 0010 0221     		movs	r1, #2
 25602 0012 1846     		mov	r0, r3
 25603 0014 FFF7FEFF 		bl	commWrite
3841:..\src/command_processing.c **** }
 25604              		.loc 1 3841 0
 25605 0018 00BF     		nop
 25606 001a 0837     		adds	r7, r7, #8
 25607              		.cfi_def_cfa_offset 8
 25608 001c BD46     		mov	sp, r7
 25609              		.cfi_def_cfa_register 13
 25610              		@ sp needed
 25611 001e 80BD     		pop	{r7, pc}
 25612              		.cfi_endproc
 25613              	.LFE108:
 25614              		.size	cmd_ping, .-cmd_ping
 25615              		.section	.text.cmd_get_inputs,"ax",%progbits
 25616              		.align	2
 25617              		.global	cmd_get_inputs
 25618              		.thumb
 25619              		.thumb_func
 25620              		.type	cmd_get_inputs, %function
 25621              	cmd_get_inputs:
 25622              	.LFB109:
3842:..\src/command_processing.c **** 
3843:..\src/command_processing.c **** void cmd_get_inputs(){
 25623              		.loc 1 3843 0
 25624              		.cfi_startproc
 25625              		@ args = 0, pretend = 0, frame = 16
 25626              		@ frame_needed = 1, uses_anonymous_args = 0
 25627 0000 80B5     		push	{r7, lr}
 25628              		.cfi_def_cfa_offset 8
 25629              		.cfi_offset 7, -8
 25630              		.cfi_offset 14, -4
 25631 0002 84B0     		sub	sp, sp, #16
 25632              		.cfi_def_cfa_offset 24
 25633 0004 00AF     		add	r7, sp, #0
 25634              		.cfi_def_cfa_register 7
3844:..\src/command_processing.c **** 
3845:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3846:..\src/command_processing.c **** 
3847:..\src/command_processing.c ****     uint8 packet_data[6]; 
3848:..\src/command_processing.c ****     int16 aux_int16;
3849:..\src/command_processing.c ****     
3850:..\src/command_processing.c ****     //Header package
3851:..\src/command_processing.c **** 
3852:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 25635              		.loc 1 3852 0
 25636 0006 8323     		movs	r3, #131
 25637 0008 3B72     		strb	r3, [r7, #8]
3853:..\src/command_processing.c ****         
3854:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 25638              		.loc 1 3854 0
 25639 000a 234B     		ldr	r3, .L1001
 25640 000c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 562


 25641 000e 234B     		ldr	r3, .L1001+4
 25642 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25643 0014 1846     		mov	r0, r3
 25644 0016 2149     		ldr	r1, .L1001+4
 25645 0018 0346     		mov	r3, r0
 25646 001a 5B00     		lsls	r3, r3, #1
 25647 001c 0344     		add	r3, r3, r0
 25648 001e 1B01     		lsls	r3, r3, #4
 25649 0020 0B44     		add	r3, r3, r1
 25650 0022 03F29513 		addw	r3, r3, #405
 25651 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25652 0028 42FA03F3 		asr	r3, r2, r3
 25653 002c 1BB2     		sxth	r3, r3
 25654 002e FB80     		strh	r3, [r7, #6]	@ movhi
3855:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25655              		.loc 1 3855 0
 25656 0030 BB1D     		adds	r3, r7, #6
 25657 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25658 0034 BB72     		strb	r3, [r7, #10]
3856:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25659              		.loc 1 3856 0
 25660 0036 BB1D     		adds	r3, r7, #6
 25661 0038 0133     		adds	r3, r3, #1
 25662 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25663 003c 7B72     		strb	r3, [r7, #9]
3857:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 25664              		.loc 1 3857 0
 25665 003e 164B     		ldr	r3, .L1001
 25666 0040 1A69     		ldr	r2, [r3, #16]
 25667 0042 164B     		ldr	r3, .L1001+4
 25668 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25669 0048 1846     		mov	r0, r3
 25670 004a 1449     		ldr	r1, .L1001+4
 25671 004c 0346     		mov	r3, r0
 25672 004e 5B00     		lsls	r3, r3, #1
 25673 0050 0344     		add	r3, r3, r0
 25674 0052 1B01     		lsls	r3, r3, #4
 25675 0054 0B44     		add	r3, r3, r1
 25676 0056 03F29513 		addw	r3, r3, #405
 25677 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25678 005c 42FA03F3 		asr	r3, r2, r3
 25679 0060 1BB2     		sxth	r3, r3
 25680 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3858:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25681              		.loc 1 3858 0
 25682 0064 BB1D     		adds	r3, r7, #6
 25683 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25684 0068 3B73     		strb	r3, [r7, #12]
3859:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25685              		.loc 1 3859 0
 25686 006a BB1D     		adds	r3, r7, #6
 25687 006c 0133     		adds	r3, r3, #1
 25688 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25689 0070 FB72     		strb	r3, [r7, #11]
3860:..\src/command_processing.c ****     
3861:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3862:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 563


3863:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 25690              		.loc 1 3863 0
 25691 0072 07F10803 		add	r3, r7, #8
 25692 0076 0521     		movs	r1, #5
 25693 0078 1846     		mov	r0, r3
 25694 007a FFF7FEFF 		bl	LCRChecksum
 25695 007e 0346     		mov	r3, r0
 25696 0080 7B73     		strb	r3, [r7, #13]
3864:..\src/command_processing.c **** 
3865:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25697              		.loc 1 3865 0
 25698 0082 07F10803 		add	r3, r7, #8
 25699 0086 0621     		movs	r1, #6
 25700 0088 1846     		mov	r0, r3
 25701 008a FFF7FEFF 		bl	commWrite
3866:..\src/command_processing.c **** }
 25702              		.loc 1 3866 0
 25703 008e 00BF     		nop
 25704 0090 1037     		adds	r7, r7, #16
 25705              		.cfi_def_cfa_offset 8
 25706 0092 BD46     		mov	sp, r7
 25707              		.cfi_def_cfa_register 13
 25708              		@ sp needed
 25709 0094 80BD     		pop	{r7, pc}
 25710              	.L1002:
 25711 0096 00BF     		.align	2
 25712              	.L1001:
 25713 0098 00000000 		.word	g_refOld
 25714 009c 00000000 		.word	g_mem
 25715              		.cfi_endproc
 25716              	.LFE109:
 25717              		.size	cmd_get_inputs, .-cmd_get_inputs
 25718              		.section	.text.cmd_store_params,"ax",%progbits
 25719              		.align	2
 25720              		.global	cmd_store_params
 25721              		.thumb
 25722              		.thumb_func
 25723              		.type	cmd_store_params, %function
 25724              	cmd_store_params:
 25725              	.LFB110:
3867:..\src/command_processing.c **** 
3868:..\src/command_processing.c **** void cmd_store_params(){
 25726              		.loc 1 3868 0
 25727              		.cfi_startproc
 25728              		@ args = 0, pretend = 0, frame = 16
 25729              		@ frame_needed = 1, uses_anonymous_args = 0
 25730 0000 80B5     		push	{r7, lr}
 25731              		.cfi_def_cfa_offset 8
 25732              		.cfi_offset 7, -8
 25733              		.cfi_offset 14, -4
 25734 0002 84B0     		sub	sp, sp, #16
 25735              		.cfi_def_cfa_offset 24
 25736 0004 00AF     		add	r7, sp, #0
 25737              		.cfi_def_cfa_register 7
3869:..\src/command_processing.c ****     
3870:..\src/command_processing.c ****     // Check input mode enabled
3871:..\src/command_processing.c ****     uint32 off_1;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 564


3872:..\src/command_processing.c ****     float mult_1;
3873:..\src/command_processing.c ****     uint8 CYDATA packet_length = 2;
 25738              		.loc 1 3873 0
 25739 0006 0223     		movs	r3, #2
 25740 0008 FB73     		strb	r3, [r7, #15]
3874:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3875:..\src/command_processing.c ****     uint8 CYDATA old_id;
3876:..\src/command_processing.c ****     
3877:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 25741              		.loc 1 3877 0
 25742 000a 674B     		ldr	r3, .L1014
 25743 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 25744 0010 002B     		cmp	r3, #0
 25745 0012 7CD1     		bne	.L1004
3878:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 25746              		.loc 1 3878 0
 25747 0014 644B     		ldr	r3, .L1014
 25748 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25749 001a 1946     		mov	r1, r3
 25750 001c 624A     		ldr	r2, .L1014
 25751 001e 0B46     		mov	r3, r1
 25752 0020 5B00     		lsls	r3, r3, #1
 25753 0022 0B44     		add	r3, r3, r1
 25754 0024 1B01     		lsls	r3, r3, #4
 25755 0026 1344     		add	r3, r3, r2
 25756 0028 03F5CC73 		add	r3, r3, #408
 25757 002c 1B68     		ldr	r3, [r3]
 25758 002e BB60     		str	r3, [r7, #8]
3879:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 25759              		.loc 1 3879 0
 25760 0030 5D4B     		ldr	r3, .L1014
 25761 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25762 0036 1946     		mov	r1, r3
 25763 0038 5B4A     		ldr	r2, .L1014
 25764 003a 0B46     		mov	r3, r1
 25765 003c 5B00     		lsls	r3, r3, #1
 25766 003e 0B44     		add	r3, r3, r1
 25767 0040 1B01     		lsls	r3, r3, #4
 25768 0042 1344     		add	r3, r3, r2
 25769 0044 03F5D273 		add	r3, r3, #420
 25770 0048 1B68     		ldr	r3, [r3]	@ float
 25771 004a 7B60     		str	r3, [r7, #4]	@ float
3880:..\src/command_processing.c **** 
3881:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 25772              		.loc 1 3881 0
 25773 004c 574B     		ldr	r3, .L1014+4
 25774 004e 1B68     		ldr	r3, [r3]
 25775 0050 1846     		mov	r0, r3
 25776 0052 FFF7FEFF 		bl	__aeabi_i2f
 25777 0056 0346     		mov	r3, r0
 25778 0058 7968     		ldr	r1, [r7, #4]	@ float
 25779 005a 1846     		mov	r0, r3
 25780 005c FFF7FEFF 		bl	__aeabi_fdiv
 25781 0060 0346     		mov	r3, r0
 25782 0062 1846     		mov	r0, r3
 25783 0064 FFF7FEFF 		bl	__aeabi_f2iz
 25784 0068 0246     		mov	r2, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 565


 25785 006a 504B     		ldr	r3, .L1014+4
 25786 006c 1A60     		str	r2, [r3]
3882:..\src/command_processing.c **** 
3883:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 25787              		.loc 1 3883 0
 25788 006e 4F4B     		ldr	r3, .L1014+4
 25789 0070 1B68     		ldr	r3, [r3]
 25790 0072 1846     		mov	r0, r3
 25791 0074 FFF7FEFF 		bl	__aeabi_i2f
 25792 0078 4B4B     		ldr	r3, .L1014
 25793 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25794 007e 1946     		mov	r1, r3
 25795 0080 4B4A     		ldr	r2, .L1014+8
 25796 0082 0B46     		mov	r3, r1
 25797 0084 5B00     		lsls	r3, r3, #1
 25798 0086 0B44     		add	r3, r3, r1
 25799 0088 1B01     		lsls	r3, r3, #4
 25800 008a 1344     		add	r3, r3, r2
 25801 008c 03F5D273 		add	r3, r3, #420
 25802 0090 1B68     		ldr	r3, [r3]	@ float
 25803 0092 1946     		mov	r1, r3
 25804 0094 FFF7FEFF 		bl	__aeabi_fmul
 25805 0098 0346     		mov	r3, r0
 25806 009a 1846     		mov	r0, r3
 25807 009c FFF7FEFF 		bl	__aeabi_f2iz
 25808 00a0 0246     		mov	r2, r0
 25809 00a2 424B     		ldr	r3, .L1014+4
 25810 00a4 1A60     		str	r2, [r3]
3884:..\src/command_processing.c **** 
3885:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 25811              		.loc 1 3885 0
 25812 00a6 414B     		ldr	r3, .L1014+4
 25813 00a8 1B68     		ldr	r3, [r3]
 25814 00aa 1846     		mov	r0, r3
 25815 00ac 3E4B     		ldr	r3, .L1014
 25816 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25817 00b2 1946     		mov	r1, r3
 25818 00b4 3E4A     		ldr	r2, .L1014+8
 25819 00b6 0B46     		mov	r3, r1
 25820 00b8 5B00     		lsls	r3, r3, #1
 25821 00ba 0B44     		add	r3, r3, r1
 25822 00bc 1B01     		lsls	r3, r3, #4
 25823 00be 1344     		add	r3, r3, r2
 25824 00c0 03F5CC73 		add	r3, r3, #408
 25825 00c4 1B68     		ldr	r3, [r3]
 25826 00c6 1A46     		mov	r2, r3
 25827 00c8 BB68     		ldr	r3, [r7, #8]
 25828 00ca D31A     		subs	r3, r2, r3
 25829 00cc 0344     		add	r3, r3, r0
 25830 00ce 1A46     		mov	r2, r3
 25831 00d0 364B     		ldr	r3, .L1014+4
 25832 00d2 1A60     		str	r2, [r3]
3886:..\src/command_processing.c ****         
3887:..\src/command_processing.c ****         // Check position Limits
3888:..\src/command_processing.c **** 
3889:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 25833              		.loc 1 3889 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 566


 25834 00d4 344B     		ldr	r3, .L1014
 25835 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 25836 00da 002B     		cmp	r3, #0
 25837 00dc 17D0     		beq	.L1004
3890:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 25838              		.loc 1 3890 0
 25839 00de 334B     		ldr	r3, .L1014+4
 25840 00e0 1A68     		ldr	r2, [r3]
 25841 00e2 314B     		ldr	r3, .L1014
 25842 00e4 D3F8E430 		ldr	r3, [r3, #228]
 25843 00e8 9A42     		cmp	r2, r3
 25844 00ea 04DA     		bge	.L1005
3891:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 25845              		.loc 1 3891 0
 25846 00ec 2E4B     		ldr	r3, .L1014
 25847 00ee D3F8E430 		ldr	r3, [r3, #228]
 25848 00f2 2E4A     		ldr	r2, .L1014+4
 25849 00f4 1360     		str	r3, [r2]
 25850              	.L1005:
3892:..\src/command_processing.c **** 
3893:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 25851              		.loc 1 3893 0
 25852 00f6 2D4B     		ldr	r3, .L1014+4
 25853 00f8 1A68     		ldr	r2, [r3]
 25854 00fa 2B4B     		ldr	r3, .L1014
 25855 00fc D3F8E830 		ldr	r3, [r3, #232]
 25856 0100 9A42     		cmp	r2, r3
 25857 0102 04DD     		ble	.L1004
3894:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 25858              		.loc 1 3894 0
 25859 0104 284B     		ldr	r3, .L1014
 25860 0106 D3F8E830 		ldr	r3, [r3, #232]
 25861 010a 284A     		ldr	r2, .L1014+4
 25862 010c 1360     		str	r3, [r2]
 25863              	.L1004:
3895:..\src/command_processing.c ****         }
3896:..\src/command_processing.c ****     }
3897:..\src/command_processing.c ****     
3898:..\src/command_processing.c ****     // If SD is used, create new param and data file
3899:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 25864              		.loc 1 3899 0
 25865 010e 264B     		ldr	r3, .L1014
 25866 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 25867 0114 012B     		cmp	r3, #1
 25868 0116 06D1     		bne	.L1006
3900:..\src/command_processing.c ****         FS_FClose(pFile);
 25869              		.loc 1 3900 0
 25870 0118 264B     		ldr	r3, .L1014+12
 25871 011a 1B68     		ldr	r3, [r3]
 25872 011c 1846     		mov	r0, r3
 25873 011e FFF7FEFF 		bl	FS_FClose
3901:..\src/command_processing.c ****         
3902:..\src/command_processing.c ****         InitSD_FS();
 25874              		.loc 1 3902 0
 25875 0122 FFF7FEFF 		bl	InitSD_FS
 25876              	.L1006:
3903:..\src/command_processing.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 567


3904:..\src/command_processing.c ****    
3905:..\src/command_processing.c ****     // Store params 
3906:..\src/command_processing.c **** 
3907:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 25877              		.loc 1 3907 0
 25878 0126 204B     		ldr	r3, .L1014
 25879 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 25880 012c 204B     		ldr	r3, .L1014+8
 25881 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25882 0132 9A42     		cmp	r2, r3
 25883 0134 21D0     		beq	.L1007
3908:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 25884              		.loc 1 3908 0
 25885 0136 1C4B     		ldr	r3, .L1014
 25886 0138 93F8A030 		ldrb	r3, [r3, #160]
 25887 013c FB70     		strb	r3, [r7, #3]
3909:..\src/command_processing.c ****         if(memStore(0)) {
 25888              		.loc 1 3909 0
 25889 013e 0020     		movs	r0, #0
 25890 0140 FFF7FEFF 		bl	memStore
 25891 0144 0346     		mov	r3, r0
 25892 0146 002B     		cmp	r3, #0
 25893 0148 0BD0     		beq	.L1008
3910:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 25894              		.loc 1 3910 0
 25895 014a 0123     		movs	r3, #1
 25896 014c 3B70     		strb	r3, [r7]
3911:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 25897              		.loc 1 3911 0
 25898 014e 0123     		movs	r3, #1
 25899 0150 7B70     		strb	r3, [r7, #1]
3912:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_length, old_id);
 25900              		.loc 1 3912 0
 25901 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25902 0154 99B2     		uxth	r1, r3
 25903 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25904 0158 3B46     		mov	r3, r7
 25905 015a 1846     		mov	r0, r3
 25906 015c FFF7FEFF 		bl	commWrite_old_id
 25907 0160 18E0     		b	.L1010
 25908              	.L1008:
3913:..\src/command_processing.c ****         }    
3914:..\src/command_processing.c ****         else{
3915:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 25909              		.loc 1 3915 0
 25910 0162 0023     		movs	r3, #0
 25911 0164 3B70     		strb	r3, [r7]
3916:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 25912              		.loc 1 3916 0
 25913 0166 0023     		movs	r3, #0
 25914 0168 7B70     		strb	r3, [r7, #1]
3917:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_length, old_id);
 25915              		.loc 1 3917 0
 25916 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25917 016c 99B2     		uxth	r1, r3
 25918 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25919 0170 3B46     		mov	r3, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 568


 25920 0172 1846     		mov	r0, r3
 25921 0174 FFF7FEFF 		bl	commWrite_old_id
 25922 0178 0CE0     		b	.L1010
 25923              	.L1007:
3918:..\src/command_processing.c ****         }
3919:..\src/command_processing.c ****     }    
3920:..\src/command_processing.c ****     else {
3921:..\src/command_processing.c ****         if(memStore(0))
 25924              		.loc 1 3921 0
 25925 017a 0020     		movs	r0, #0
 25926 017c FFF7FEFF 		bl	memStore
 25927 0180 0346     		mov	r3, r0
 25928 0182 002B     		cmp	r3, #0
 25929 0184 03D0     		beq	.L1011
3922:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 25930              		.loc 1 3922 0
 25931 0186 0120     		movs	r0, #1
 25932 0188 FFF7FEFF 		bl	sendAcknowledgment
 25933 018c 02E0     		b	.L1010
 25934              	.L1011:
3923:..\src/command_processing.c ****         else
3924:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 25935              		.loc 1 3924 0
 25936 018e 0020     		movs	r0, #0
 25937 0190 FFF7FEFF 		bl	sendAcknowledgment
 25938              	.L1010:
3925:..\src/command_processing.c ****     }
3926:..\src/command_processing.c ****     
3927:..\src/command_processing.c ****     // FW reset (if necessary)
3928:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 25939              		.loc 1 3928 0
 25940 0194 084B     		ldr	r3, .L1014+16
 25941 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25942 0198 012B     		cmp	r3, #1
 25943 019a 01D1     		bne	.L1013
3929:..\src/command_processing.c ****         CySoftwareReset();
 25944              		.loc 1 3929 0
 25945 019c FFF7FEFF 		bl	CySoftwareReset
 25946              	.L1013:
3930:..\src/command_processing.c ****     }
3931:..\src/command_processing.c **** }
 25947              		.loc 1 3931 0
 25948 01a0 00BF     		nop
 25949 01a2 1037     		adds	r7, r7, #16
 25950              		.cfi_def_cfa_offset 8
 25951 01a4 BD46     		mov	sp, r7
 25952              		.cfi_def_cfa_register 13
 25953              		@ sp needed
 25954 01a6 80BD     		pop	{r7, pc}
 25955              	.L1015:
 25956              		.align	2
 25957              	.L1014:
 25958 01a8 00000000 		.word	c_mem
 25959 01ac 00000000 		.word	g_refNew
 25960 01b0 00000000 		.word	g_mem
 25961 01b4 00000000 		.word	pFile
 25962 01b8 00000000 		.word	reset_PSoC_flag
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 569


 25963              		.cfi_endproc
 25964              	.LFE110:
 25965              		.size	cmd_store_params, .-cmd_store_params
 25966              		.section	.text.cmd_get_emg,"ax",%progbits
 25967              		.align	2
 25968              		.global	cmd_get_emg
 25969              		.thumb
 25970              		.thumb_func
 25971              		.type	cmd_get_emg, %function
 25972              	cmd_get_emg:
 25973              	.LFB111:
3932:..\src/command_processing.c **** 
3933:..\src/command_processing.c **** void cmd_get_emg(){
 25974              		.loc 1 3933 0
 25975              		.cfi_startproc
 25976              		@ args = 0, pretend = 0, frame = 16
 25977              		@ frame_needed = 1, uses_anonymous_args = 0
 25978 0000 80B5     		push	{r7, lr}
 25979              		.cfi_def_cfa_offset 8
 25980              		.cfi_offset 7, -8
 25981              		.cfi_offset 14, -4
 25982 0002 84B0     		sub	sp, sp, #16
 25983              		.cfi_def_cfa_offset 24
 25984 0004 00AF     		add	r7, sp, #0
 25985              		.cfi_def_cfa_register 7
3934:..\src/command_processing.c ****     
3935:..\src/command_processing.c ****     uint8 packet_data[6];
3936:..\src/command_processing.c ****     int16 aux_int16;
3937:..\src/command_processing.c ****     
3938:..\src/command_processing.c ****     // Header        
3939:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 25986              		.loc 1 3939 0
 25987 0006 8823     		movs	r3, #136
 25988 0008 3B72     		strb	r3, [r7, #8]
3940:..\src/command_processing.c ****     
3941:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 25989              		.loc 1 3941 0
 25990 000a 144B     		ldr	r3, .L1017
 25991 000c 1B68     		ldr	r3, [r3]
 25992 000e 1BB2     		sxth	r3, r3
 25993 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3942:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25994              		.loc 1 3942 0
 25995 0012 BB1D     		adds	r3, r7, #6
 25996 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25997 0016 BB72     		strb	r3, [r7, #10]
3943:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25998              		.loc 1 3943 0
 25999 0018 BB1D     		adds	r3, r7, #6
 26000 001a 0133     		adds	r3, r3, #1
 26001 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26002 001e 7B72     		strb	r3, [r7, #9]
3944:..\src/command_processing.c ****     
3945:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 26003              		.loc 1 3945 0
 26004 0020 0E4B     		ldr	r3, .L1017
 26005 0022 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 570


 26006 0024 1BB2     		sxth	r3, r3
 26007 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3946:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 26008              		.loc 1 3946 0
 26009 0028 BB1D     		adds	r3, r7, #6
 26010 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26011 002c 3B73     		strb	r3, [r7, #12]
3947:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 26012              		.loc 1 3947 0
 26013 002e BB1D     		adds	r3, r7, #6
 26014 0030 0133     		adds	r3, r3, #1
 26015 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26016 0034 FB72     		strb	r3, [r7, #11]
3948:..\src/command_processing.c **** 
3949:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 26017              		.loc 1 3949 0
 26018 0036 07F10803 		add	r3, r7, #8
 26019 003a 0521     		movs	r1, #5
 26020 003c 1846     		mov	r0, r3
 26021 003e FFF7FEFF 		bl	LCRChecksum
 26022 0042 0346     		mov	r3, r0
 26023 0044 7B73     		strb	r3, [r7, #13]
3950:..\src/command_processing.c **** 
3951:..\src/command_processing.c ****     commWrite(packet_data, 6);
 26024              		.loc 1 3951 0
 26025 0046 07F10803 		add	r3, r7, #8
 26026 004a 0621     		movs	r1, #6
 26027 004c 1846     		mov	r0, r3
 26028 004e FFF7FEFF 		bl	commWrite
3952:..\src/command_processing.c **** 
3953:..\src/command_processing.c **** }
 26029              		.loc 1 3953 0
 26030 0052 00BF     		nop
 26031 0054 1037     		adds	r7, r7, #16
 26032              		.cfi_def_cfa_offset 8
 26033 0056 BD46     		mov	sp, r7
 26034              		.cfi_def_cfa_register 13
 26035              		@ sp needed
 26036 0058 80BD     		pop	{r7, pc}
 26037              	.L1018:
 26038 005a 00BF     		.align	2
 26039              	.L1017:
 26040 005c 00000000 		.word	g_adc_measOld
 26041              		.cfi_endproc
 26042              	.LFE111:
 26043              		.size	cmd_get_emg, .-cmd_get_emg
 26044              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 26045              		.align	2
 26046              		.global	cmd_get_imu_readings
 26047              		.thumb
 26048              		.thumb_func
 26049              		.type	cmd_get_imu_readings, %function
 26050              	cmd_get_imu_readings:
 26051              	.LFB112:
3954:..\src/command_processing.c **** 
3955:..\src/command_processing.c **** void cmd_get_imu_readings(){
 26052              		.loc 1 3955 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 571


 26053              		.cfi_startproc
 26054              		@ args = 0, pretend = 0, frame = 400
 26055              		@ frame_needed = 1, uses_anonymous_args = 0
 26056 0000 90B5     		push	{r4, r7, lr}
 26057              		.cfi_def_cfa_offset 12
 26058              		.cfi_offset 4, -12
 26059              		.cfi_offset 7, -8
 26060              		.cfi_offset 14, -4
 26061 0002 E5B0     		sub	sp, sp, #404
 26062              		.cfi_def_cfa_offset 416
 26063 0004 00AF     		add	r7, sp, #0
 26064              		.cfi_def_cfa_register 7
3956:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3957:..\src/command_processing.c ****     
3958:..\src/command_processing.c ****     uint8 k_imu;
3959:..\src/command_processing.c ****     uint16 c = 1;
 26065              		.loc 1 3959 0
 26066 0006 0123     		movs	r3, #1
 26067 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3960:..\src/command_processing.c ****     uint8 k = 0;
 26068              		.loc 1 3960 0
 26069 000c 0023     		movs	r3, #0
 26070 000e 87F88B31 		strb	r3, [r7, #395]
3961:..\src/command_processing.c ****     uint16 gl_c = 1;
 26071              		.loc 1 3961 0
 26072 0012 0123     		movs	r3, #1
 26073 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3962:..\src/command_processing.c ****     int16 aux_int16;
3963:..\src/command_processing.c ****     float aux_float;
3964:..\src/command_processing.c ****     
3965:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3966:..\src/command_processing.c ****     uint8 packet_data[350];
3967:..\src/command_processing.c ****     uint8 single_packet[32];
3968:..\src/command_processing.c ****     
3969:..\src/command_processing.c ****     //Header package 
3970:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 26074              		.loc 1 3970 0
 26075 0018 07F12003 		add	r3, r7, #32
 26076 001c A122     		movs	r2, #161
 26077 001e 1A70     		strb	r2, [r3]
3971:..\src/command_processing.c ****  
3972:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 26078              		.loc 1 3972 0
 26079 0020 0023     		movs	r3, #0
 26080 0022 87F88F31 		strb	r3, [r7, #399]
 26081 0026 82E2     		b	.L1020
 26082              	.L1036:
3973:..\src/command_processing.c ****     {	
3974:..\src/command_processing.c ****             
3975:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 26083              		.loc 1 3975 0
 26084 0028 3B46     		mov	r3, r7
 26085 002a 3A22     		movs	r2, #58
 26086 002c 1A70     		strb	r2, [r3]
3976:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 26087              		.loc 1 3976 0
 26088 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 572


 26089 0032 DB4A     		ldr	r2, .L1037
 26090 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26091 0036 1946     		mov	r1, r3
 26092 0038 DA4A     		ldr	r2, .L1037+4
 26093 003a 0B46     		mov	r3, r1
 26094 003c 9B00     		lsls	r3, r3, #2
 26095 003e 0B44     		add	r3, r3, r1
 26096 0040 1344     		add	r3, r3, r2
 26097 0042 03F20223 		addw	r3, r3, #514
 26098 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26099 0048 002B     		cmp	r3, #0
 26100 004a 5DD0     		beq	.L1021
3977:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 26101              		.loc 1 3977 0
 26102 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26103 0050 D549     		ldr	r1, .L1037+8
 26104 0052 1346     		mov	r3, r2
 26105 0054 9B00     		lsls	r3, r3, #2
 26106 0056 1344     		add	r3, r3, r2
 26107 0058 DB00     		lsls	r3, r3, #3
 26108 005a 0B44     		add	r3, r3, r1
 26109 005c 0233     		adds	r3, r3, #2
 26110 005e B3F90030 		ldrsh	r3, [r3]
 26111 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3978:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26112              		.loc 1 3978 0
 26113 0066 B7F88C31 		ldrh	r3, [r7, #396]
 26114 006a 0133     		adds	r3, r3, #1
 26115 006c 07F5C372 		add	r2, r7, #390
 26116 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26117 0072 3A46     		mov	r2, r7
 26118 0074 D154     		strb	r1, [r2, r3]
3979:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26119              		.loc 1 3979 0
 26120 0076 B7F88C21 		ldrh	r2, [r7, #396]
 26121 007a 07F5C373 		add	r3, r7, #390
 26122 007e 0133     		adds	r3, r3, #1
 26123 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26124 0082 3B46     		mov	r3, r7
 26125 0084 9954     		strb	r1, [r3, r2]
3980:..\src/command_processing.c **** 
3981:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 26126              		.loc 1 3981 0
 26127 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26128 008a C749     		ldr	r1, .L1037+8
 26129 008c 1346     		mov	r3, r2
 26130 008e 9B00     		lsls	r3, r3, #2
 26131 0090 1344     		add	r3, r3, r2
 26132 0092 DB00     		lsls	r3, r3, #3
 26133 0094 0B44     		add	r3, r3, r1
 26134 0096 0433     		adds	r3, r3, #4
 26135 0098 B3F90030 		ldrsh	r3, [r3]
 26136 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3982:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26137              		.loc 1 3982 0
 26138 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 26139 00a4 0333     		adds	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 573


 26140 00a6 07F5C372 		add	r2, r7, #390
 26141 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26142 00ac 3A46     		mov	r2, r7
 26143 00ae D154     		strb	r1, [r2, r3]
3983:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26144              		.loc 1 3983 0
 26145 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 26146 00b4 9A1C     		adds	r2, r3, #2
 26147 00b6 07F5C373 		add	r3, r7, #390
 26148 00ba 0133     		adds	r3, r3, #1
 26149 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26150 00be 3B46     		mov	r3, r7
 26151 00c0 9954     		strb	r1, [r3, r2]
3984:..\src/command_processing.c **** 
3985:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 26152              		.loc 1 3985 0
 26153 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26154 00c6 B849     		ldr	r1, .L1037+8
 26155 00c8 1346     		mov	r3, r2
 26156 00ca 9B00     		lsls	r3, r3, #2
 26157 00cc 1344     		add	r3, r3, r2
 26158 00ce DB00     		lsls	r3, r3, #3
 26159 00d0 0B44     		add	r3, r3, r1
 26160 00d2 0633     		adds	r3, r3, #6
 26161 00d4 B3F90030 		ldrsh	r3, [r3]
 26162 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3986:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26163              		.loc 1 3986 0
 26164 00dc B7F88C31 		ldrh	r3, [r7, #396]
 26165 00e0 0533     		adds	r3, r3, #5
 26166 00e2 07F5C372 		add	r2, r7, #390
 26167 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26168 00e8 3A46     		mov	r2, r7
 26169 00ea D154     		strb	r1, [r2, r3]
3987:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26170              		.loc 1 3987 0
 26171 00ec B7F88C31 		ldrh	r3, [r7, #396]
 26172 00f0 1A1D     		adds	r2, r3, #4
 26173 00f2 07F5C373 		add	r3, r7, #390
 26174 00f6 0133     		adds	r3, r3, #1
 26175 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26176 00fa 3B46     		mov	r3, r7
 26177 00fc 9954     		strb	r1, [r3, r2]
3988:..\src/command_processing.c **** 
3989:..\src/command_processing.c ****             c = c + 6;
 26178              		.loc 1 3989 0
 26179 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26180 0102 0633     		adds	r3, r3, #6
 26181 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26182              	.L1021:
3990:..\src/command_processing.c ****         }
3991:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 26183              		.loc 1 3991 0
 26184 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26185 010c A44A     		ldr	r2, .L1037
 26186 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26187 0110 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 574


 26188 0112 A44A     		ldr	r2, .L1037+4
 26189 0114 0B46     		mov	r3, r1
 26190 0116 9B00     		lsls	r3, r3, #2
 26191 0118 0B44     		add	r3, r3, r1
 26192 011a 1344     		add	r3, r3, r2
 26193 011c 03F20323 		addw	r3, r3, #515
 26194 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26195 0122 002B     		cmp	r3, #0
 26196 0124 5DD0     		beq	.L1022
3992:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 26197              		.loc 1 3992 0
 26198 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26199 012a 9F49     		ldr	r1, .L1037+8
 26200 012c 1346     		mov	r3, r2
 26201 012e 9B00     		lsls	r3, r3, #2
 26202 0130 1344     		add	r3, r3, r2
 26203 0132 DB00     		lsls	r3, r3, #3
 26204 0134 0B44     		add	r3, r3, r1
 26205 0136 0833     		adds	r3, r3, #8
 26206 0138 B3F90030 		ldrsh	r3, [r3]
 26207 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3993:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26208              		.loc 1 3993 0
 26209 0140 B7F88C31 		ldrh	r3, [r7, #396]
 26210 0144 0133     		adds	r3, r3, #1
 26211 0146 07F5C372 		add	r2, r7, #390
 26212 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26213 014c 3A46     		mov	r2, r7
 26214 014e D154     		strb	r1, [r2, r3]
3994:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26215              		.loc 1 3994 0
 26216 0150 B7F88C21 		ldrh	r2, [r7, #396]
 26217 0154 07F5C373 		add	r3, r7, #390
 26218 0158 0133     		adds	r3, r3, #1
 26219 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26220 015c 3B46     		mov	r3, r7
 26221 015e 9954     		strb	r1, [r3, r2]
3995:..\src/command_processing.c **** 
3996:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 26222              		.loc 1 3996 0
 26223 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26224 0164 9049     		ldr	r1, .L1037+8
 26225 0166 1346     		mov	r3, r2
 26226 0168 9B00     		lsls	r3, r3, #2
 26227 016a 1344     		add	r3, r3, r2
 26228 016c DB00     		lsls	r3, r3, #3
 26229 016e 0B44     		add	r3, r3, r1
 26230 0170 0A33     		adds	r3, r3, #10
 26231 0172 B3F90030 		ldrsh	r3, [r3]
 26232 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3997:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26233              		.loc 1 3997 0
 26234 017a B7F88C31 		ldrh	r3, [r7, #396]
 26235 017e 0333     		adds	r3, r3, #3
 26236 0180 07F5C372 		add	r2, r7, #390
 26237 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26238 0186 3A46     		mov	r2, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 575


 26239 0188 D154     		strb	r1, [r2, r3]
3998:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26240              		.loc 1 3998 0
 26241 018a B7F88C31 		ldrh	r3, [r7, #396]
 26242 018e 9A1C     		adds	r2, r3, #2
 26243 0190 07F5C373 		add	r3, r7, #390
 26244 0194 0133     		adds	r3, r3, #1
 26245 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26246 0198 3B46     		mov	r3, r7
 26247 019a 9954     		strb	r1, [r3, r2]
3999:..\src/command_processing.c **** 
4000:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 26248              		.loc 1 4000 0
 26249 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26250 01a0 8149     		ldr	r1, .L1037+8
 26251 01a2 1346     		mov	r3, r2
 26252 01a4 9B00     		lsls	r3, r3, #2
 26253 01a6 1344     		add	r3, r3, r2
 26254 01a8 DB00     		lsls	r3, r3, #3
 26255 01aa 0B44     		add	r3, r3, r1
 26256 01ac 0C33     		adds	r3, r3, #12
 26257 01ae B3F90030 		ldrsh	r3, [r3]
 26258 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
4001:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26259              		.loc 1 4001 0
 26260 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 26261 01ba 0533     		adds	r3, r3, #5
 26262 01bc 07F5C372 		add	r2, r7, #390
 26263 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26264 01c2 3A46     		mov	r2, r7
 26265 01c4 D154     		strb	r1, [r2, r3]
4002:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26266              		.loc 1 4002 0
 26267 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 26268 01ca 1A1D     		adds	r2, r3, #4
 26269 01cc 07F5C373 		add	r3, r7, #390
 26270 01d0 0133     		adds	r3, r3, #1
 26271 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26272 01d4 3B46     		mov	r3, r7
 26273 01d6 9954     		strb	r1, [r3, r2]
4003:..\src/command_processing.c **** 
4004:..\src/command_processing.c ****             c = c + 6;
 26274              		.loc 1 4004 0
 26275 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26276 01dc 0633     		adds	r3, r3, #6
 26277 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26278              	.L1022:
4005:..\src/command_processing.c ****         }
4006:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 26279              		.loc 1 4006 0
 26280 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26281 01e6 6E4A     		ldr	r2, .L1037
 26282 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26283 01ea 1946     		mov	r1, r3
 26284 01ec 6D4A     		ldr	r2, .L1037+4
 26285 01ee 0B46     		mov	r3, r1
 26286 01f0 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 576


 26287 01f2 0B44     		add	r3, r3, r1
 26288 01f4 1344     		add	r3, r3, r2
 26289 01f6 03F50173 		add	r3, r3, #516
 26290 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26291 01fc 002B     		cmp	r3, #0
 26292 01fe 5DD0     		beq	.L1023
4007:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 26293              		.loc 1 4007 0
 26294 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26295 0204 6849     		ldr	r1, .L1037+8
 26296 0206 1346     		mov	r3, r2
 26297 0208 9B00     		lsls	r3, r3, #2
 26298 020a 1344     		add	r3, r3, r2
 26299 020c DB00     		lsls	r3, r3, #3
 26300 020e 0B44     		add	r3, r3, r1
 26301 0210 0E33     		adds	r3, r3, #14
 26302 0212 B3F90030 		ldrsh	r3, [r3]
 26303 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
4008:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26304              		.loc 1 4008 0
 26305 021a B7F88C31 		ldrh	r3, [r7, #396]
 26306 021e 0133     		adds	r3, r3, #1
 26307 0220 07F5C372 		add	r2, r7, #390
 26308 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26309 0226 3A46     		mov	r2, r7
 26310 0228 D154     		strb	r1, [r2, r3]
4009:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26311              		.loc 1 4009 0
 26312 022a B7F88C21 		ldrh	r2, [r7, #396]
 26313 022e 07F5C373 		add	r3, r7, #390
 26314 0232 0133     		adds	r3, r3, #1
 26315 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26316 0236 3B46     		mov	r3, r7
 26317 0238 9954     		strb	r1, [r3, r2]
4010:..\src/command_processing.c **** 
4011:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 26318              		.loc 1 4011 0
 26319 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26320 023e 5A49     		ldr	r1, .L1037+8
 26321 0240 1346     		mov	r3, r2
 26322 0242 9B00     		lsls	r3, r3, #2
 26323 0244 1344     		add	r3, r3, r2
 26324 0246 DB00     		lsls	r3, r3, #3
 26325 0248 0B44     		add	r3, r3, r1
 26326 024a 1033     		adds	r3, r3, #16
 26327 024c B3F90030 		ldrsh	r3, [r3]
 26328 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
4012:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26329              		.loc 1 4012 0
 26330 0254 B7F88C31 		ldrh	r3, [r7, #396]
 26331 0258 0333     		adds	r3, r3, #3
 26332 025a 07F5C372 		add	r2, r7, #390
 26333 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26334 0260 3A46     		mov	r2, r7
 26335 0262 D154     		strb	r1, [r2, r3]
4013:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26336              		.loc 1 4013 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 577


 26337 0264 B7F88C31 		ldrh	r3, [r7, #396]
 26338 0268 9A1C     		adds	r2, r3, #2
 26339 026a 07F5C373 		add	r3, r7, #390
 26340 026e 0133     		adds	r3, r3, #1
 26341 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26342 0272 3B46     		mov	r3, r7
 26343 0274 9954     		strb	r1, [r3, r2]
4014:..\src/command_processing.c **** 
4015:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 26344              		.loc 1 4015 0
 26345 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26346 027a 4B49     		ldr	r1, .L1037+8
 26347 027c 1346     		mov	r3, r2
 26348 027e 9B00     		lsls	r3, r3, #2
 26349 0280 1344     		add	r3, r3, r2
 26350 0282 DB00     		lsls	r3, r3, #3
 26351 0284 0B44     		add	r3, r3, r1
 26352 0286 1233     		adds	r3, r3, #18
 26353 0288 B3F90030 		ldrsh	r3, [r3]
 26354 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
4016:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26355              		.loc 1 4016 0
 26356 0290 B7F88C31 		ldrh	r3, [r7, #396]
 26357 0294 0533     		adds	r3, r3, #5
 26358 0296 07F5C372 		add	r2, r7, #390
 26359 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26360 029c 3A46     		mov	r2, r7
 26361 029e D154     		strb	r1, [r2, r3]
4017:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26362              		.loc 1 4017 0
 26363 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 26364 02a4 1A1D     		adds	r2, r3, #4
 26365 02a6 07F5C373 		add	r3, r7, #390
 26366 02aa 0133     		adds	r3, r3, #1
 26367 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26368 02ae 3B46     		mov	r3, r7
 26369 02b0 9954     		strb	r1, [r3, r2]
4018:..\src/command_processing.c **** 
4019:..\src/command_processing.c ****             c = c + 6;
 26370              		.loc 1 4019 0
 26371 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26372 02b6 0633     		adds	r3, r3, #6
 26373 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26374              	.L1023:
4020:..\src/command_processing.c ****         }
4021:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 26375              		.loc 1 4021 0
 26376 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26377 02c0 374A     		ldr	r2, .L1037
 26378 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26379 02c4 1946     		mov	r1, r3
 26380 02c6 374A     		ldr	r2, .L1037+4
 26381 02c8 0B46     		mov	r3, r1
 26382 02ca 9B00     		lsls	r3, r3, #2
 26383 02cc 0B44     		add	r3, r3, r1
 26384 02ce 1344     		add	r3, r3, r2
 26385 02d0 03F20523 		addw	r3, r3, #517
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 578


 26386 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26387 02d6 002B     		cmp	r3, #0
 26388 02d8 00F0AF80 		beq	.L1024
4022:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 26389              		.loc 1 4022 0
 26390 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26391 02e0 3149     		ldr	r1, .L1037+8
 26392 02e2 1346     		mov	r3, r2
 26393 02e4 9B00     		lsls	r3, r3, #2
 26394 02e6 1344     		add	r3, r3, r2
 26395 02e8 DB00     		lsls	r3, r3, #3
 26396 02ea 0B44     		add	r3, r3, r1
 26397 02ec 1433     		adds	r3, r3, #20
 26398 02ee 1B68     		ldr	r3, [r3]	@ float
 26399 02f0 C7F88031 		str	r3, [r7, #384]	@ float
4023:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26400              		.loc 1 4023 0
 26401 02f4 0023     		movs	r3, #0
 26402 02f6 87F88B31 		strb	r3, [r7, #395]
 26403 02fa 13E0     		b	.L1025
 26404              	.L1026:
4024:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 26405              		.loc 1 4024 0 discriminator 3
 26406 02fc B7F88C31 		ldrh	r3, [r7, #396]
 26407 0300 1A1D     		adds	r2, r3, #4
 26408 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26409 0306 D31A     		subs	r3, r2, r3
 26410 0308 013B     		subs	r3, r3, #1
 26411 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26412 030e 07F5C071 		add	r1, r7, #384
 26413 0312 0A44     		add	r2, r2, r1
 26414 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26415 0316 3A46     		mov	r2, r7
 26416 0318 D154     		strb	r1, [r2, r3]
4023:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26417              		.loc 1 4023 0 discriminator 3
 26418 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26419 031e 0133     		adds	r3, r3, #1
 26420 0320 87F88B31 		strb	r3, [r7, #395]
 26421              	.L1025:
4023:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26422              		.loc 1 4023 0 is_stmt 0 discriminator 1
 26423 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26424 0328 032B     		cmp	r3, #3
 26425 032a E7D9     		bls	.L1026
4025:..\src/command_processing.c ****             }
4026:..\src/command_processing.c **** 
4027:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 26426              		.loc 1 4027 0 is_stmt 1
 26427 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26428 0330 1D49     		ldr	r1, .L1037+8
 26429 0332 1346     		mov	r3, r2
 26430 0334 9B00     		lsls	r3, r3, #2
 26431 0336 1344     		add	r3, r3, r2
 26432 0338 DB00     		lsls	r3, r3, #3
 26433 033a 0B44     		add	r3, r3, r1
 26434 033c 1833     		adds	r3, r3, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 579


 26435 033e 1B68     		ldr	r3, [r3]	@ float
 26436 0340 C7F88031 		str	r3, [r7, #384]	@ float
4028:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26437              		.loc 1 4028 0
 26438 0344 0023     		movs	r3, #0
 26439 0346 87F88B31 		strb	r3, [r7, #395]
 26440 034a 14E0     		b	.L1027
 26441              	.L1028:
4029:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 26442              		.loc 1 4029 0 discriminator 3
 26443 034c B7F88C31 		ldrh	r3, [r7, #396]
 26444 0350 03F10802 		add	r2, r3, #8
 26445 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26446 0358 D31A     		subs	r3, r2, r3
 26447 035a 013B     		subs	r3, r3, #1
 26448 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26449 0360 07F5C071 		add	r1, r7, #384
 26450 0364 0A44     		add	r2, r2, r1
 26451 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26452 0368 3A46     		mov	r2, r7
 26453 036a D154     		strb	r1, [r2, r3]
4028:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26454              		.loc 1 4028 0 discriminator 3
 26455 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26456 0370 0133     		adds	r3, r3, #1
 26457 0372 87F88B31 		strb	r3, [r7, #395]
 26458              	.L1027:
4028:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26459              		.loc 1 4028 0 is_stmt 0 discriminator 1
 26460 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26461 037a 032B     		cmp	r3, #3
 26462 037c E6D9     		bls	.L1028
4030:..\src/command_processing.c ****             }
4031:..\src/command_processing.c **** 
4032:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 26463              		.loc 1 4032 0 is_stmt 1
 26464 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26465 0382 0949     		ldr	r1, .L1037+8
 26466 0384 1346     		mov	r3, r2
 26467 0386 9B00     		lsls	r3, r3, #2
 26468 0388 1344     		add	r3, r3, r2
 26469 038a DB00     		lsls	r3, r3, #3
 26470 038c 0B44     		add	r3, r3, r1
 26471 038e 1C33     		adds	r3, r3, #28
 26472 0390 1B68     		ldr	r3, [r3]	@ float
 26473 0392 C7F88031 		str	r3, [r7, #384]	@ float
4033:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26474              		.loc 1 4033 0
 26475 0396 0023     		movs	r3, #0
 26476 0398 87F88B31 		strb	r3, [r7, #395]
 26477 039c 1BE0     		b	.L1029
 26478              	.L1038:
 26479 039e 00BF     		.align	2
 26480              	.L1037:
 26481 03a0 00000000 		.word	IMU_connected
 26482 03a4 00000000 		.word	c_mem
 26483 03a8 00000000 		.word	g_imu
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 580


 26484              	.L1030:
4034:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 26485              		.loc 1 4034 0 discriminator 3
 26486 03ac B7F88C31 		ldrh	r3, [r7, #396]
 26487 03b0 03F10C02 		add	r2, r3, #12
 26488 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26489 03b8 D31A     		subs	r3, r2, r3
 26490 03ba 013B     		subs	r3, r3, #1
 26491 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26492 03c0 07F5C071 		add	r1, r7, #384
 26493 03c4 0A44     		add	r2, r2, r1
 26494 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26495 03c8 3A46     		mov	r2, r7
 26496 03ca D154     		strb	r1, [r2, r3]
4033:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26497              		.loc 1 4033 0 discriminator 3
 26498 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26499 03d0 0133     		adds	r3, r3, #1
 26500 03d2 87F88B31 		strb	r3, [r7, #395]
 26501              	.L1029:
4033:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26502              		.loc 1 4033 0 is_stmt 0 discriminator 1
 26503 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26504 03da 032B     		cmp	r3, #3
 26505 03dc E6D9     		bls	.L1030
4035:..\src/command_processing.c ****             }
4036:..\src/command_processing.c **** 
4037:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 26506              		.loc 1 4037 0 is_stmt 1
 26507 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26508 03e2 6749     		ldr	r1, .L1039
 26509 03e4 1346     		mov	r3, r2
 26510 03e6 9B00     		lsls	r3, r3, #2
 26511 03e8 1344     		add	r3, r3, r2
 26512 03ea DB00     		lsls	r3, r3, #3
 26513 03ec 0B44     		add	r3, r3, r1
 26514 03ee 2033     		adds	r3, r3, #32
 26515 03f0 1B68     		ldr	r3, [r3]	@ float
 26516 03f2 C7F88031 		str	r3, [r7, #384]	@ float
4038:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26517              		.loc 1 4038 0
 26518 03f6 0023     		movs	r3, #0
 26519 03f8 87F88B31 		strb	r3, [r7, #395]
 26520 03fc 14E0     		b	.L1031
 26521              	.L1032:
4039:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 26522              		.loc 1 4039 0 discriminator 3
 26523 03fe B7F88C31 		ldrh	r3, [r7, #396]
 26524 0402 03F11002 		add	r2, r3, #16
 26525 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26526 040a D31A     		subs	r3, r2, r3
 26527 040c 013B     		subs	r3, r3, #1
 26528 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26529 0412 07F5C071 		add	r1, r7, #384
 26530 0416 0A44     		add	r2, r2, r1
 26531 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26532 041a 3A46     		mov	r2, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 581


 26533 041c D154     		strb	r1, [r2, r3]
4038:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26534              		.loc 1 4038 0 discriminator 3
 26535 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26536 0422 0133     		adds	r3, r3, #1
 26537 0424 87F88B31 		strb	r3, [r7, #395]
 26538              	.L1031:
4038:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26539              		.loc 1 4038 0 is_stmt 0 discriminator 1
 26540 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26541 042c 032B     		cmp	r3, #3
 26542 042e E6D9     		bls	.L1032
4040:..\src/command_processing.c ****             }
4041:..\src/command_processing.c ****             c = c + 16;
 26543              		.loc 1 4041 0 is_stmt 1
 26544 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26545 0434 1033     		adds	r3, r3, #16
 26546 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26547              	.L1024:
4042:..\src/command_processing.c ****         }
4043:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 26548              		.loc 1 4043 0
 26549 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26550 043e 514A     		ldr	r2, .L1039+4
 26551 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26552 0442 1946     		mov	r1, r3
 26553 0444 504A     		ldr	r2, .L1039+8
 26554 0446 0B46     		mov	r3, r1
 26555 0448 9B00     		lsls	r3, r3, #2
 26556 044a 0B44     		add	r3, r3, r1
 26557 044c 1344     		add	r3, r3, r2
 26558 044e 03F20623 		addw	r3, r3, #518
 26559 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26560 0454 002B     		cmp	r3, #0
 26561 0456 21D0     		beq	.L1033
4044:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 26562              		.loc 1 4044 0
 26563 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26564 045c 4849     		ldr	r1, .L1039
 26565 045e 1346     		mov	r3, r2
 26566 0460 9B00     		lsls	r3, r3, #2
 26567 0462 1344     		add	r3, r3, r2
 26568 0464 DB00     		lsls	r3, r3, #3
 26569 0466 0B44     		add	r3, r3, r1
 26570 0468 2433     		adds	r3, r3, #36
 26571 046a B3F90030 		ldrsh	r3, [r3]
 26572 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
4045:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26573              		.loc 1 4045 0
 26574 0472 B7F88C31 		ldrh	r3, [r7, #396]
 26575 0476 0133     		adds	r3, r3, #1
 26576 0478 07F5C372 		add	r2, r7, #390
 26577 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26578 047e 3A46     		mov	r2, r7
 26579 0480 D154     		strb	r1, [r2, r3]
4046:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26580              		.loc 1 4046 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 582


 26581 0482 B7F88C21 		ldrh	r2, [r7, #396]
 26582 0486 07F5C373 		add	r3, r7, #390
 26583 048a 0133     		adds	r3, r3, #1
 26584 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26585 048e 3B46     		mov	r3, r7
 26586 0490 9954     		strb	r1, [r3, r2]
4047:..\src/command_processing.c ****             c = c + 2;
 26587              		.loc 1 4047 0
 26588 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26589 0496 0233     		adds	r3, r3, #2
 26590 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26591              	.L1033:
4048:..\src/command_processing.c ****         }
4049:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 26592              		.loc 1 4049 0
 26593 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26594 04a0 384A     		ldr	r2, .L1039+4
 26595 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26596 04a4 1A46     		mov	r2, r3
 26597 04a6 394B     		ldr	r3, .L1039+12
 26598 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26599 04ac 013B     		subs	r3, r3, #1
 26600 04ae 3A46     		mov	r2, r7
 26601 04b0 3A21     		movs	r1, #58
 26602 04b2 D154     		strb	r1, [r2, r3]
4050:..\src/command_processing.c ****         c = 1;
 26603              		.loc 1 4050 0
 26604 04b4 0123     		movs	r3, #1
 26605 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
4051:..\src/command_processing.c ****                
4052:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 26606              		.loc 1 4052 0
 26607 04ba 0023     		movs	r3, #0
 26608 04bc 87F88B31 		strb	r3, [r7, #395]
 26609 04c0 10E0     		b	.L1034
 26610              	.L1035:
4053:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26611              		.loc 1 4053 0 discriminator 3
 26612 04c2 B7F88821 		ldrh	r2, [r7, #392]
 26613 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26614 04ca 1344     		add	r3, r3, r2
 26615 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26616 04d0 3946     		mov	r1, r7
 26617 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 26618 04d4 07F12002 		add	r2, r7, #32
 26619 04d8 D154     		strb	r1, [r2, r3]
4052:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26620              		.loc 1 4052 0 discriminator 3
 26621 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26622 04de 0133     		adds	r3, r3, #1
 26623 04e0 87F88B31 		strb	r3, [r7, #395]
 26624              	.L1034:
4052:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26625              		.loc 1 4052 0 is_stmt 0 discriminator 1
 26626 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26627 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26628 04ec 2549     		ldr	r1, .L1039+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 583


 26629 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 26630 04f0 1946     		mov	r1, r3
 26631 04f2 264B     		ldr	r3, .L1039+12
 26632 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 26633 04f8 9A42     		cmp	r2, r3
 26634 04fa E2DB     		blt	.L1035
4054:..\src/command_processing.c ****         }
4055:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 26635              		.loc 1 4055 0 is_stmt 1 discriminator 2
 26636 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26637 0500 204A     		ldr	r2, .L1039+4
 26638 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26639 0504 1A46     		mov	r2, r3
 26640 0506 214B     		ldr	r3, .L1039+12
 26641 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26642 050c 9AB2     		uxth	r2, r3
 26643 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 26644 0512 1344     		add	r3, r3, r2
 26645 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
4056:..\src/command_processing.c ****         
4057:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 26646              		.loc 1 4057 0 discriminator 2
 26647 0518 3B46     		mov	r3, r7
 26648 051a 2022     		movs	r2, #32
 26649 051c 0021     		movs	r1, #0
 26650 051e 1846     		mov	r0, r3
 26651 0520 FFF7FEFF 		bl	memset
3972:..\src/command_processing.c ****     {	
 26652              		.loc 1 3972 0 discriminator 2
 26653 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26654 0528 0133     		adds	r3, r3, #1
 26655 052a 87F88F31 		strb	r3, [r7, #399]
 26656              	.L1020:
3972:..\src/command_processing.c ****     {	
 26657              		.loc 1 3972 0 is_stmt 0 discriminator 1
 26658 052e 184B     		ldr	r3, .L1039+16
 26659 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26660 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26661 0536 9A42     		cmp	r2, r3
 26662 0538 FFF476AD 		bcc	.L1036
4058:..\src/command_processing.c ****         
4059:..\src/command_processing.c ****     }
4060:..\src/command_processing.c **** 
4061:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4062:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 26663              		.loc 1 4062 0 is_stmt 1
 26664 053c 154B     		ldr	r3, .L1039+20
 26665 053e 1B68     		ldr	r3, [r3]
 26666 0540 5C1E     		subs	r4, r3, #1
 26667 0542 144B     		ldr	r3, .L1039+20
 26668 0544 1B68     		ldr	r3, [r3]
 26669 0546 DBB2     		uxtb	r3, r3
 26670 0548 013B     		subs	r3, r3, #1
 26671 054a DAB2     		uxtb	r2, r3
 26672 054c 07F12003 		add	r3, r7, #32
 26673 0550 1146     		mov	r1, r2
 26674 0552 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 584


 26675 0554 FFF7FEFF 		bl	LCRChecksum
 26676 0558 0346     		mov	r3, r0
 26677 055a 1A46     		mov	r2, r3
 26678 055c 07F12003 		add	r3, r7, #32
 26679 0560 1A55     		strb	r2, [r3, r4]
4063:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 26680              		.loc 1 4063 0
 26681 0562 0C4B     		ldr	r3, .L1039+20
 26682 0564 1B68     		ldr	r3, [r3]
 26683 0566 9AB2     		uxth	r2, r3
 26684 0568 07F12003 		add	r3, r7, #32
 26685 056c 1146     		mov	r1, r2
 26686 056e 1846     		mov	r0, r3
 26687 0570 FFF7FEFF 		bl	commWrite
4064:..\src/command_processing.c **** }
 26688              		.loc 1 4064 0
 26689 0574 00BF     		nop
 26690 0576 07F5CA77 		add	r7, r7, #404
 26691              		.cfi_def_cfa_offset 12
 26692 057a BD46     		mov	sp, r7
 26693              		.cfi_def_cfa_register 13
 26694              		@ sp needed
 26695 057c 90BD     		pop	{r4, r7, pc}
 26696              	.L1040:
 26697 057e 00BF     		.align	2
 26698              	.L1039:
 26699 0580 00000000 		.word	g_imu
 26700 0584 00000000 		.word	IMU_connected
 26701 0588 00000000 		.word	c_mem
 26702 058c 00000000 		.word	single_imu_size
 26703 0590 00000000 		.word	N_IMU_Connected
 26704 0594 00000000 		.word	imus_data_size
 26705              		.cfi_endproc
 26706              	.LFE112:
 26707              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 26708              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 26709              		.align	2
 26710              		.global	cmd_get_encoder_map
 26711              		.thumb
 26712              		.thumb_func
 26713              		.type	cmd_get_encoder_map, %function
 26714              	cmd_get_encoder_map:
 26715              	.LFB113:
4065:..\src/command_processing.c **** 
4066:..\src/command_processing.c **** void cmd_get_encoder_map(){
 26716              		.loc 1 4066 0
 26717              		.cfi_startproc
 26718              		@ args = 0, pretend = 0, frame = 16
 26719              		@ frame_needed = 1, uses_anonymous_args = 0
 26720 0000 90B5     		push	{r4, r7, lr}
 26721              		.cfi_def_cfa_offset 12
 26722              		.cfi_offset 4, -12
 26723              		.cfi_offset 7, -8
 26724              		.cfi_offset 14, -4
 26725 0002 85B0     		sub	sp, sp, #20
 26726              		.cfi_def_cfa_offset 32
 26727 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 585


 26728              		.cfi_def_cfa_register 7
4067:..\src/command_processing.c ****     //Retrieve Encoder map
4068:..\src/command_processing.c ****     
4069:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
4070:..\src/command_processing.c ****     uint8 CYDATA i, j;
4071:..\src/command_processing.c ****     
4072:..\src/command_processing.c ****     // Header        
4073:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 26729              		.loc 1 4073 0
 26730 0006 A323     		movs	r3, #163
 26731 0008 3B70     		strb	r3, [r7]
4074:..\src/command_processing.c ****     
4075:..\src/command_processing.c ****     // Fill payload
4076:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 26732              		.loc 1 4076 0
 26733 000a 0223     		movs	r3, #2
 26734 000c 7B70     		strb	r3, [r7, #1]
4077:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 26735              		.loc 1 4077 0
 26736 000e 0523     		movs	r3, #5
 26737 0010 BB70     		strb	r3, [r7, #2]
4078:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26738              		.loc 1 4078 0
 26739 0012 0023     		movs	r3, #0
 26740 0014 FB73     		strb	r3, [r7, #15]
 26741 0016 23E0     		b	.L1042
 26742              	.L1045:
4079:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26743              		.loc 1 4079 0
 26744 0018 0023     		movs	r3, #0
 26745 001a BB73     		strb	r3, [r7, #14]
 26746 001c 1AE0     		b	.L1043
 26747              	.L1044:
4080:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 26748              		.loc 1 4080 0 discriminator 3
 26749 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26750 0020 1346     		mov	r3, r2
 26751 0022 9B00     		lsls	r3, r3, #2
 26752 0024 1344     		add	r3, r3, r2
 26753 0026 DA1C     		adds	r2, r3, #3
 26754 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26755 002a D118     		adds	r1, r2, r3
 26756 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26757 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 26758 0030 154C     		ldr	r4, .L1046
 26759 0032 1346     		mov	r3, r2
 26760 0034 5B00     		lsls	r3, r3, #1
 26761 0036 1344     		add	r3, r3, r2
 26762 0038 1B01     		lsls	r3, r3, #4
 26763 003a 2344     		add	r3, r3, r4
 26764 003c 0344     		add	r3, r3, r0
 26765 003e 03F5C873 		add	r3, r3, #400
 26766 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26767 0044 07F11003 		add	r3, r7, #16
 26768 0048 0B44     		add	r3, r3, r1
 26769 004a 03F8102C 		strb	r2, [r3, #-16]
4079:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 586


 26770              		.loc 1 4079 0 discriminator 3
 26771 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26772 0050 0133     		adds	r3, r3, #1
 26773 0052 BB73     		strb	r3, [r7, #14]
 26774              	.L1043:
4079:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26775              		.loc 1 4079 0 is_stmt 0 discriminator 1
 26776 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26777 0056 042B     		cmp	r3, #4
 26778 0058 E1D9     		bls	.L1044
4078:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26779              		.loc 1 4078 0 is_stmt 1 discriminator 2
 26780 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26781 005c 0133     		adds	r3, r3, #1
 26782 005e FB73     		strb	r3, [r7, #15]
 26783              	.L1042:
4078:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26784              		.loc 1 4078 0 is_stmt 0 discriminator 1
 26785 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26786 0062 012B     		cmp	r3, #1
 26787 0064 D8D9     		bls	.L1045
4081:..\src/command_processing.c ****         }
4082:..\src/command_processing.c ****     }
4083:..\src/command_processing.c ****     
4084:..\src/command_processing.c ****     // Calculate checksum
4085:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 26788              		.loc 1 4085 0 is_stmt 1
 26789 0066 3B46     		mov	r3, r7
 26790 0068 0D21     		movs	r1, #13
 26791 006a 1846     		mov	r0, r3
 26792 006c FFF7FEFF 		bl	LCRChecksum
 26793 0070 0346     		mov	r3, r0
 26794 0072 7B73     		strb	r3, [r7, #13]
4086:..\src/command_processing.c ****     
4087:..\src/command_processing.c ****     // Send package to UART
4088:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 26795              		.loc 1 4088 0
 26796 0074 3B46     		mov	r3, r7
 26797 0076 0E21     		movs	r1, #14
 26798 0078 1846     		mov	r0, r3
 26799 007a FFF7FEFF 		bl	commWrite
4089:..\src/command_processing.c **** }
 26800              		.loc 1 4089 0
 26801 007e 00BF     		nop
 26802 0080 1437     		adds	r7, r7, #20
 26803              		.cfi_def_cfa_offset 12
 26804 0082 BD46     		mov	sp, r7
 26805              		.cfi_def_cfa_register 13
 26806              		@ sp needed
 26807 0084 90BD     		pop	{r4, r7, pc}
 26808              	.L1047:
 26809 0086 00BF     		.align	2
 26810              	.L1046:
 26811 0088 00000000 		.word	c_mem
 26812              		.cfi_endproc
 26813              	.LFE113:
 26814              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 587


 26815              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 26816              		.align	2
 26817              		.global	cmd_get_encoder_raw
 26818              		.thumb
 26819              		.thumb_func
 26820              		.type	cmd_get_encoder_raw, %function
 26821              	cmd_get_encoder_raw:
 26822              	.LFB114:
4090:..\src/command_processing.c **** 
4091:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 26823              		.loc 1 4091 0
 26824              		.cfi_startproc
 26825              		@ args = 0, pretend = 0, frame = 32
 26826              		@ frame_needed = 1, uses_anonymous_args = 0
 26827 0000 90B5     		push	{r4, r7, lr}
 26828              		.cfi_def_cfa_offset 12
 26829              		.cfi_offset 4, -12
 26830              		.cfi_offset 7, -8
 26831              		.cfi_offset 14, -4
 26832 0002 89B0     		sub	sp, sp, #36
 26833              		.cfi_def_cfa_offset 48
 26834 0004 00AF     		add	r7, sp, #0
 26835              		.cfi_def_cfa_register 7
4092:..\src/command_processing.c ****     //Retrieve all Encoders raw values
4093:..\src/command_processing.c ****     
4094:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
4095:..\src/command_processing.c ****     uint8 i, j, idx;
4096:..\src/command_processing.c ****     uint16 aux_uint16;
4097:..\src/command_processing.c ****     
4098:..\src/command_processing.c ****     //Header package 
4099:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 26836              		.loc 1 4099 0
 26837 0006 A423     		movs	r3, #164
 26838 0008 3B71     		strb	r3, [r7, #4]
4100:..\src/command_processing.c ****  
4101:..\src/command_processing.c ****     // Fill payload
4102:..\src/command_processing.c ****     idx = 0;
 26839              		.loc 1 4102 0
 26840 000a 0023     		movs	r3, #0
 26841 000c 7B77     		strb	r3, [r7, #29]
4103:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26842              		.loc 1 4103 0
 26843 000e 0023     		movs	r3, #0
 26844 0010 FB77     		strb	r3, [r7, #31]
 26845 0012 3FE0     		b	.L1049
 26846              	.L1053:
4104:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26847              		.loc 1 4104 0
 26848 0014 0023     		movs	r3, #0
 26849 0016 BB77     		strb	r3, [r7, #30]
 26850 0018 33E0     		b	.L1050
 26851              	.L1052:
4105:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26852              		.loc 1 4105 0
 26853 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26854 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26855 001e 3048     		ldr	r0, .L1054
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 588


 26856 0020 1346     		mov	r3, r2
 26857 0022 5B00     		lsls	r3, r3, #1
 26858 0024 1344     		add	r3, r3, r2
 26859 0026 1B01     		lsls	r3, r3, #4
 26860 0028 0344     		add	r3, r3, r0
 26861 002a 0B44     		add	r3, r3, r1
 26862 002c 03F5C873 		add	r3, r3, #400
 26863 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26864 0032 012B     		cmp	r3, #1
 26865 0034 22D1     		bne	.L1051
4106:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 26866              		.loc 1 4106 0
 26867 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26868 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26869 003a 2A48     		ldr	r0, .L1054+4
 26870 003c 1346     		mov	r3, r2
 26871 003e 9B00     		lsls	r3, r3, #2
 26872 0040 1344     		add	r3, r3, r2
 26873 0042 0B44     		add	r3, r3, r1
 26874 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 26875 0048 7B80     		strh	r3, [r7, #2]	@ movhi
4107:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 26876              		.loc 1 4107 0
 26877 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26878 004c 5B00     		lsls	r3, r3, #1
 26879 004e 0233     		adds	r3, r3, #2
 26880 0050 BA1C     		adds	r2, r7, #2
 26881 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26882 0054 07F12001 		add	r1, r7, #32
 26883 0058 0B44     		add	r3, r3, r1
 26884 005a 03F81C2C 		strb	r2, [r3, #-28]
4108:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 26885              		.loc 1 4108 0
 26886 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26887 0060 5B00     		lsls	r3, r3, #1
 26888 0062 5A1C     		adds	r2, r3, #1
 26889 0064 BB1C     		adds	r3, r7, #2
 26890 0066 0133     		adds	r3, r3, #1
 26891 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26892 006a 07F12003 		add	r3, r7, #32
 26893 006e 1344     		add	r3, r3, r2
 26894 0070 0A46     		mov	r2, r1
 26895 0072 03F81C2C 		strb	r2, [r3, #-28]
4109:..\src/command_processing.c ****                 idx++;
 26896              		.loc 1 4109 0
 26897 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26898 0078 0133     		adds	r3, r3, #1
 26899 007a 7B77     		strb	r3, [r7, #29]
 26900              	.L1051:
4104:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26901              		.loc 1 4104 0 discriminator 2
 26902 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26903 007e 0133     		adds	r3, r3, #1
 26904 0080 BB77     		strb	r3, [r7, #30]
 26905              	.L1050:
4104:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26906              		.loc 1 4104 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 589


 26907 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26908 0084 184A     		ldr	r2, .L1054+8
 26909 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26910 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 26911 008a 9A42     		cmp	r2, r3
 26912 008c C5D3     		bcc	.L1052
4103:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26913              		.loc 1 4103 0 is_stmt 1 discriminator 2
 26914 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26915 0090 0133     		adds	r3, r3, #1
 26916 0092 FB77     		strb	r3, [r7, #31]
 26917              	.L1049:
4103:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26918              		.loc 1 4103 0 is_stmt 0 discriminator 1
 26919 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26920 0096 012B     		cmp	r3, #1
 26921 0098 BCD9     		bls	.L1053
4110:..\src/command_processing.c ****             }
4111:..\src/command_processing.c ****         }
4112:..\src/command_processing.c ****     }
4113:..\src/command_processing.c **** 
4114:..\src/command_processing.c ****     // Calculate checksum
4115:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26922              		.loc 1 4115 0 is_stmt 1
 26923 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26924 009c 5B00     		lsls	r3, r3, #1
 26925 009e 5C1C     		adds	r4, r3, #1
 26926 00a0 7B7F     		ldrb	r3, [r7, #29]
 26927 00a2 5B00     		lsls	r3, r3, #1
 26928 00a4 DBB2     		uxtb	r3, r3
 26929 00a6 0133     		adds	r3, r3, #1
 26930 00a8 DAB2     		uxtb	r2, r3
 26931 00aa 3B1D     		adds	r3, r7, #4
 26932 00ac 1146     		mov	r1, r2
 26933 00ae 1846     		mov	r0, r3
 26934 00b0 FFF7FEFF 		bl	LCRChecksum
 26935 00b4 0346     		mov	r3, r0
 26936 00b6 1A46     		mov	r2, r3
 26937 00b8 07F12003 		add	r3, r7, #32
 26938 00bc 2344     		add	r3, r3, r4
 26939 00be 03F81C2C 		strb	r2, [r3, #-28]
4116:..\src/command_processing.c ****     
4117:..\src/command_processing.c ****     // Send package to UART
4118:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26940              		.loc 1 4118 0
 26941 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26942 00c4 0133     		adds	r3, r3, #1
 26943 00c6 9BB2     		uxth	r3, r3
 26944 00c8 5B00     		lsls	r3, r3, #1
 26945 00ca 9AB2     		uxth	r2, r3
 26946 00cc 3B1D     		adds	r3, r7, #4
 26947 00ce 1146     		mov	r1, r2
 26948 00d0 1846     		mov	r0, r3
 26949 00d2 FFF7FEFF 		bl	commWrite
4119:..\src/command_processing.c **** }
 26950              		.loc 1 4119 0
 26951 00d6 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 590


 26952 00d8 2437     		adds	r7, r7, #36
 26953              		.cfi_def_cfa_offset 12
 26954 00da BD46     		mov	sp, r7
 26955              		.cfi_def_cfa_register 13
 26956              		@ sp needed
 26957 00dc 90BD     		pop	{r4, r7, pc}
 26958              	.L1055:
 26959 00de 00BF     		.align	2
 26960              	.L1054:
 26961 00e0 00000000 		.word	c_mem
 26962 00e4 00000000 		.word	Encoder_Value
 26963 00e8 00000000 		.word	N_Encoder_Line_Connected
 26964              		.cfi_endproc
 26965              	.LFE114:
 26966              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 26967              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 26968              		.align	2
 26969              		.global	cmd_get_ADC_map
 26970              		.thumb
 26971              		.thumb_func
 26972              		.type	cmd_get_ADC_map, %function
 26973              	cmd_get_ADC_map:
 26974              	.LFB115:
4120:..\src/command_processing.c **** 
4121:..\src/command_processing.c **** void cmd_get_ADC_map(){
 26975              		.loc 1 4121 0
 26976              		.cfi_startproc
 26977              		@ args = 0, pretend = 0, frame = 16
 26978              		@ frame_needed = 1, uses_anonymous_args = 0
 26979 0000 80B5     		push	{r7, lr}
 26980              		.cfi_def_cfa_offset 8
 26981              		.cfi_offset 7, -8
 26982              		.cfi_offset 14, -4
 26983 0002 84B0     		sub	sp, sp, #16
 26984              		.cfi_def_cfa_offset 24
 26985 0004 00AF     		add	r7, sp, #0
 26986              		.cfi_def_cfa_register 7
4122:..\src/command_processing.c ****     //Retrieve Encoder map
4123:..\src/command_processing.c ****     
4124:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
4125:..\src/command_processing.c ****     uint8 CYDATA i;
4126:..\src/command_processing.c ****     
4127:..\src/command_processing.c ****     // Header        
4128:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 26987              		.loc 1 4128 0
 26988 0006 A523     		movs	r3, #165
 26989 0008 3B70     		strb	r3, [r7]
4129:..\src/command_processing.c ****     
4130:..\src/command_processing.c ****     // Fill payload
4131:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 26990              		.loc 1 4131 0
 26991 000a 0C23     		movs	r3, #12
 26992 000c 7B70     		strb	r3, [r7, #1]
4132:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26993              		.loc 1 4132 0
 26994 000e 0023     		movs	r3, #0
 26995 0010 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 591


 26996 0012 0EE0     		b	.L1057
 26997              	.L1058:
4133:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 26998              		.loc 1 4133 0 discriminator 3
 26999 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 27000 0016 0233     		adds	r3, r3, #2
 27001 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 27002 001a 0F49     		ldr	r1, .L1059
 27003 001c 0A44     		add	r2, r2, r1
 27004 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 27005 0022 07F11001 		add	r1, r7, #16
 27006 0026 0B44     		add	r3, r3, r1
 27007 0028 03F8102C 		strb	r2, [r3, #-16]
4132:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 27008              		.loc 1 4132 0 discriminator 3
 27009 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 27010 002e 0133     		adds	r3, r3, #1
 27011 0030 FB73     		strb	r3, [r7, #15]
 27012              	.L1057:
4132:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 27013              		.loc 1 4132 0 is_stmt 0 discriminator 1
 27014 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 27015 0034 0B2B     		cmp	r3, #11
 27016 0036 EDD9     		bls	.L1058
4134:..\src/command_processing.c ****     }
4135:..\src/command_processing.c ****     
4136:..\src/command_processing.c ****     // Calculate checksum
4137:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 27017              		.loc 1 4137 0 is_stmt 1
 27018 0038 3B46     		mov	r3, r7
 27019 003a 0E21     		movs	r1, #14
 27020 003c 1846     		mov	r0, r3
 27021 003e FFF7FEFF 		bl	LCRChecksum
 27022 0042 0346     		mov	r3, r0
 27023 0044 BB73     		strb	r3, [r7, #14]
4138:..\src/command_processing.c ****     
4139:..\src/command_processing.c ****     // Send package to UART
4140:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 27024              		.loc 1 4140 0
 27025 0046 3B46     		mov	r3, r7
 27026 0048 0F21     		movs	r1, #15
 27027 004a 1846     		mov	r0, r3
 27028 004c FFF7FEFF 		bl	commWrite
4141:..\src/command_processing.c ****     
4142:..\src/command_processing.c **** }
 27029              		.loc 1 4142 0
 27030 0050 00BF     		nop
 27031 0052 1037     		adds	r7, r7, #16
 27032              		.cfi_def_cfa_offset 8
 27033 0054 BD46     		mov	sp, r7
 27034              		.cfi_def_cfa_register 13
 27035              		@ sp needed
 27036 0056 80BD     		pop	{r7, pc}
 27037              	.L1060:
 27038              		.align	2
 27039              	.L1059:
 27040 0058 00000000 		.word	c_mem
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 592


 27041              		.cfi_endproc
 27042              	.LFE115:
 27043              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 27044              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 27045              		.align	2
 27046              		.global	cmd_get_ADC_raw
 27047              		.thumb
 27048              		.thumb_func
 27049              		.type	cmd_get_ADC_raw, %function
 27050              	cmd_get_ADC_raw:
 27051              	.LFB116:
4143:..\src/command_processing.c **** 
4144:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 27052              		.loc 1 4144 0
 27053              		.cfi_startproc
 27054              		@ args = 0, pretend = 0, frame = 32
 27055              		@ frame_needed = 1, uses_anonymous_args = 0
 27056 0000 90B5     		push	{r4, r7, lr}
 27057              		.cfi_def_cfa_offset 12
 27058              		.cfi_offset 4, -12
 27059              		.cfi_offset 7, -8
 27060              		.cfi_offset 14, -4
 27061 0002 89B0     		sub	sp, sp, #36
 27062              		.cfi_def_cfa_offset 48
 27063 0004 00AF     		add	r7, sp, #0
 27064              		.cfi_def_cfa_register 7
4145:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
4146:..\src/command_processing.c ****     
4147:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
4148:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 27065              		.loc 1 4148 0
 27066 0006 0023     		movs	r3, #0
 27067 0008 BB77     		strb	r3, [r7, #30]
4149:..\src/command_processing.c ****     int16 aux_int16;
4150:..\src/command_processing.c ****     
4151:..\src/command_processing.c ****     // Header        
4152:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 27068              		.loc 1 4152 0
 27069 000a A623     		movs	r3, #166
 27070 000c 3B71     		strb	r3, [r7, #4]
4153:..\src/command_processing.c ****     
4154:..\src/command_processing.c ****     // Fill payload
4155:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 27071              		.loc 1 4155 0
 27072 000e 0023     		movs	r3, #0
 27073 0010 FB77     		strb	r3, [r7, #31]
 27074 0012 27E0     		b	.L1062
 27075              	.L1064:
4156:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27076              		.loc 1 4156 0
 27077 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27078 0016 274A     		ldr	r2, .L1065
 27079 0018 1344     		add	r3, r3, r2
 27080 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 27081 001e 012B     		cmp	r3, #1
 27082 0020 1DD1     		bne	.L1063
4157:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 593


 27083              		.loc 1 4157 0
 27084 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27085 0024 244A     		ldr	r2, .L1065+4
 27086 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 27087 002a 7B80     		strh	r3, [r7, #2]	@ movhi
4158:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 27088              		.loc 1 4158 0
 27089 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27090 002e 5B00     		lsls	r3, r3, #1
 27091 0030 0233     		adds	r3, r3, #2
 27092 0032 BA1C     		adds	r2, r7, #2
 27093 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27094 0036 07F12001 		add	r1, r7, #32
 27095 003a 0B44     		add	r3, r3, r1
 27096 003c 03F81C2C 		strb	r2, [r3, #-28]
4159:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 27097              		.loc 1 4159 0
 27098 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27099 0042 5B00     		lsls	r3, r3, #1
 27100 0044 5A1C     		adds	r2, r3, #1
 27101 0046 BB1C     		adds	r3, r7, #2
 27102 0048 0133     		adds	r3, r3, #1
 27103 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 27104 004c 07F12003 		add	r3, r7, #32
 27105 0050 1344     		add	r3, r3, r2
 27106 0052 0A46     		mov	r2, r1
 27107 0054 03F81C2C 		strb	r2, [r3, #-28]
4160:..\src/command_processing.c ****             idx++;
 27108              		.loc 1 4160 0
 27109 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27110 005a 0133     		adds	r3, r3, #1
 27111 005c BB77     		strb	r3, [r7, #30]
 27112              	.L1063:
4155:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27113              		.loc 1 4155 0 discriminator 2
 27114 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27115 0060 0133     		adds	r3, r3, #1
 27116 0062 FB77     		strb	r3, [r7, #31]
 27117              	.L1062:
4155:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27118              		.loc 1 4155 0 is_stmt 0 discriminator 1
 27119 0064 154B     		ldr	r3, .L1065+8
 27120 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27121 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 27122 006a 9A42     		cmp	r2, r3
 27123 006c D2D3     		bcc	.L1064
4161:..\src/command_processing.c ****         }
4162:..\src/command_processing.c ****     }
4163:..\src/command_processing.c **** 
4164:..\src/command_processing.c ****     // Calculate checksum
4165:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 27124              		.loc 1 4165 0 is_stmt 1
 27125 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27126 0070 5B00     		lsls	r3, r3, #1
 27127 0072 5C1C     		adds	r4, r3, #1
 27128 0074 BB7F     		ldrb	r3, [r7, #30]
 27129 0076 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 594


 27130 0078 DBB2     		uxtb	r3, r3
 27131 007a 0133     		adds	r3, r3, #1
 27132 007c DAB2     		uxtb	r2, r3
 27133 007e 3B1D     		adds	r3, r7, #4
 27134 0080 1146     		mov	r1, r2
 27135 0082 1846     		mov	r0, r3
 27136 0084 FFF7FEFF 		bl	LCRChecksum
 27137 0088 0346     		mov	r3, r0
 27138 008a 1A46     		mov	r2, r3
 27139 008c 07F12003 		add	r3, r7, #32
 27140 0090 2344     		add	r3, r3, r4
 27141 0092 03F81C2C 		strb	r2, [r3, #-28]
4166:..\src/command_processing.c ****     
4167:..\src/command_processing.c ****     // Send package to UART
4168:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 27142              		.loc 1 4168 0
 27143 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27144 0098 0133     		adds	r3, r3, #1
 27145 009a 9BB2     		uxth	r3, r3
 27146 009c 5B00     		lsls	r3, r3, #1
 27147 009e 9AB2     		uxth	r2, r3
 27148 00a0 3B1D     		adds	r3, r7, #4
 27149 00a2 1146     		mov	r1, r2
 27150 00a4 1846     		mov	r0, r3
 27151 00a6 FFF7FEFF 		bl	commWrite
4169:..\src/command_processing.c **** }
 27152              		.loc 1 4169 0
 27153 00aa 00BF     		nop
 27154 00ac 2437     		adds	r7, r7, #36
 27155              		.cfi_def_cfa_offset 12
 27156 00ae BD46     		mov	sp, r7
 27157              		.cfi_def_cfa_register 13
 27158              		@ sp needed
 27159 00b0 90BD     		pop	{r4, r7, pc}
 27160              	.L1066:
 27161 00b2 00BF     		.align	2
 27162              	.L1065:
 27163 00b4 00000000 		.word	c_mem
 27164 00b8 00000000 		.word	ADC_buf
 27165 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 27166              		.cfi_endproc
 27167              	.LFE116:
 27168              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 27169              		.section	.rodata
 27170 1f87 00       		.align	2
 27171              	.LC300:
 27172 1f88 00       		.ascii	"\000"
 27173              		.section	.text.cmd_get_SD_file,"ax",%progbits
 27174              		.align	2
 27175              		.global	cmd_get_SD_file
 27176              		.thumb
 27177              		.thumb_func
 27178              		.type	cmd_get_SD_file, %function
 27179              	cmd_get_SD_file:
 27180              	.LFB117:
4170:..\src/command_processing.c **** 
4171:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 595


 27181              		.loc 1 4171 0
 27182              		.cfi_startproc
 27183              		@ args = 0, pretend = 0, frame = 20064
 27184              		@ frame_needed = 1, uses_anonymous_args = 0
 27185 0000 80B5     		push	{r7, lr}
 27186              		.cfi_def_cfa_offset 8
 27187              		.cfi_offset 7, -8
 27188              		.cfi_offset 14, -4
 27189 0002 ADF59C4D 		sub	sp, sp, #19968
 27190              		.cfi_def_cfa_offset 19976
 27191 0006 98B0     		sub	sp, sp, #96
 27192              		.cfi_def_cfa_offset 20072
 27193 0008 00AF     		add	r7, sp, #0
 27194              		.cfi_def_cfa_register 7
 27195 000a 0246     		mov	r2, r0
 27196 000c 07F16003 		add	r3, r7, #96
 27197 0010 5A3B     		subs	r3, r3, #90
 27198 0012 1A80     		strh	r2, [r3]	@ movhi
4172:..\src/command_processing.c ****     
4173:..\src/command_processing.c ****     uint8 i = 0;
 27199              		.loc 1 4173 0
 27200 0014 0023     		movs	r3, #0
 27201 0016 07F59C42 		add	r2, r7, #19968
 27202 001a 02F15F02 		add	r2, r2, #95
 27203 001e 1370     		strb	r3, [r2]
4174:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 27204              		.loc 1 4174 0
 27205 0020 0023     		movs	r3, #0
 27206 0022 07F59C42 		add	r2, r7, #19968
 27207 0026 02F12C02 		add	r2, r2, #44
 27208 002a 1360     		str	r3, [r2]
 27209 002c 07F59C43 		add	r3, r7, #19968
 27210 0030 03F13003 		add	r3, r3, #48
 27211 0034 2E22     		movs	r2, #46
 27212 0036 0021     		movs	r1, #0
 27213 0038 1846     		mov	r0, r3
 27214 003a FFF7FEFF 		bl	memset
4175:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 27215              		.loc 1 4175 0
 27216 003e 07F16003 		add	r3, r7, #96
 27217 0042 543B     		subs	r3, r3, #84
 27218 0044 0022     		movs	r2, #0
 27219 0046 1A60     		str	r2, [r3]
 27220 0048 0433     		adds	r3, r3, #4
 27221 004a 44F61C62 		movw	r2, #19996
 27222 004e 0021     		movs	r1, #0
 27223 0050 1846     		mov	r0, r3
 27224 0052 FFF7FEFF 		bl	memset
4176:..\src/command_processing.c ****     strcpy(filename, "");
 27225              		.loc 1 4176 0
 27226 0056 3C4B     		ldr	r3, .L1072
 27227 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27228 005a 07F59C42 		add	r2, r7, #19968
 27229 005e 02F12C02 		add	r2, r2, #44
 27230 0062 1370     		strb	r3, [r2]
4177:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 27231              		.loc 1 4177 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 596


 27232 0064 384B     		ldr	r3, .L1072
 27233 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 27234 0068 07F16003 		add	r3, r7, #96
 27235 006c 543B     		subs	r3, r3, #84
 27236 006e 1A70     		strb	r2, [r3]
4178:..\src/command_processing.c ****     
4179:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27237              		.loc 1 4179 0
 27238 0070 0023     		movs	r3, #0
 27239 0072 07F59C42 		add	r2, r7, #19968
 27240 0076 02F15F02 		add	r2, r2, #95
 27241 007a 1370     		strb	r3, [r2]
 27242 007c 1DE0     		b	.L1068
 27243              	.L1069:
4180:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27244              		.loc 1 4180 0 discriminator 3
 27245 007e 07F59C43 		add	r3, r7, #19968
 27246 0082 03F15F03 		add	r3, r3, #95
 27247 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27248 0088 07F59C42 		add	r2, r7, #19968
 27249 008c 02F12C02 		add	r2, r2, #44
 27250 0090 1344     		add	r3, r3, r2
 27251 0092 07F59C42 		add	r2, r7, #19968
 27252 0096 02F15F02 		add	r2, r2, #95
 27253 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27254 009c 0332     		adds	r2, r2, #3
 27255 009e 2B49     		ldr	r1, .L1072+4
 27256 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27257 00a2 1A70     		strb	r2, [r3]
4179:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27258              		.loc 1 4179 0 discriminator 3
 27259 00a4 07F59C43 		add	r3, r7, #19968
 27260 00a8 03F15F03 		add	r3, r3, #95
 27261 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27262 00ae 0133     		adds	r3, r3, #1
 27263 00b0 07F59C42 		add	r2, r7, #19968
 27264 00b4 02F15F02 		add	r2, r2, #95
 27265 00b8 1370     		strb	r3, [r2]
 27266              	.L1068:
4179:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27267              		.loc 1 4179 0 is_stmt 0 discriminator 1
 27268 00ba 07F59C43 		add	r3, r7, #19968
 27269 00be 03F15F03 		add	r3, r3, #95
 27270 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27271 00c4 9AB2     		uxth	r2, r3
 27272 00c6 07F16003 		add	r3, r7, #96
 27273 00ca 5A3B     		subs	r3, r3, #90
 27274 00cc 1B88     		ldrh	r3, [r3]
 27275 00ce 9342     		cmp	r3, r2
 27276 00d0 D5D8     		bhi	.L1069
4181:..\src/command_processing.c ****     }
4182:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27277              		.loc 1 4182 0 is_stmt 1
 27278 00d2 07F59C43 		add	r3, r7, #19968
 27279 00d6 03F15F03 		add	r3, r3, #95
 27280 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27281 00dc 07F59C42 		add	r2, r7, #19968
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 597


 27282 00e0 02F12C02 		add	r2, r2, #44
 27283 00e4 1344     		add	r3, r3, r2
 27284 00e6 0022     		movs	r2, #0
 27285 00e8 1A70     		strb	r2, [r3]
4183:..\src/command_processing.c ****      
4184:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4185:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 27286              		.loc 1 4185 0
 27287 00ea 07F59C43 		add	r3, r7, #19968
 27288 00ee 03F12C03 		add	r3, r3, #44
 27289 00f2 1749     		ldr	r1, .L1072+8
 27290 00f4 1846     		mov	r0, r3
 27291 00f6 FFF7FEFF 		bl	strcmp
 27292 00fa 0346     		mov	r3, r0
 27293 00fc 002B     		cmp	r3, #0
 27294 00fe 0CD0     		beq	.L1070
4186:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 27295              		.loc 1 4186 0
 27296 0100 07F16003 		add	r3, r7, #96
 27297 0104 543B     		subs	r3, r3, #84
 27298 0106 07F59C40 		add	r0, r7, #19968
 27299 010a 00F12C00 		add	r0, r0, #44
 27300 010e 44F62062 		movw	r2, #20000
 27301 0112 1946     		mov	r1, r3
 27302 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 27303 0118 07E0     		b	.L1071
 27304              	.L1070:
4187:..\src/command_processing.c ****     }
4188:..\src/command_processing.c ****     else {
4189:..\src/command_processing.c ****         //It is the currently open working file
4190:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 27305              		.loc 1 4190 0
 27306 011a 07F16003 		add	r3, r7, #96
 27307 011e 543B     		subs	r3, r3, #84
 27308 0120 44F62061 		movw	r1, #20000
 27309 0124 1846     		mov	r0, r3
 27310 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 27311              	.L1071:
4191:..\src/command_processing.c ****     }
4192:..\src/command_processing.c **** 
4193:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
4194:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
4195:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 27312              		.loc 1 4195 0
 27313 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
4196:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 27314              		.loc 1 4196 0
 27315 012e 07F16003 		add	r3, r7, #96
 27316 0132 543B     		subs	r3, r3, #84
 27317 0134 1846     		mov	r0, r3
 27318 0136 FFF7FEFF 		bl	UART_RS485_PutString
4197:..\src/command_processing.c **** }
 27319              		.loc 1 4197 0
 27320 013a 00BF     		nop
 27321 013c 07F59C47 		add	r7, r7, #19968
 27322 0140 6037     		adds	r7, r7, #96
 27323              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 598


 27324 0142 BD46     		mov	sp, r7
 27325              		.cfi_def_cfa_register 13
 27326              		@ sp needed
 27327 0144 80BD     		pop	{r7, pc}
 27328              	.L1073:
 27329 0146 00BF     		.align	2
 27330              	.L1072:
 27331 0148 881F0000 		.word	.LC300
 27332 014c 00000000 		.word	g_rx
 27333 0150 00000000 		.word	sdFile
 27334              		.cfi_endproc
 27335              	.LFE117:
 27336              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 27337              		.section	.text.cmd_remove_SD_file,"ax",%progbits
 27338              		.align	2
 27339              		.global	cmd_remove_SD_file
 27340              		.thumb
 27341              		.thumb_func
 27342              		.type	cmd_remove_SD_file, %function
 27343              	cmd_remove_SD_file:
 27344              	.LFB118:
4198:..\src/command_processing.c **** 
4199:..\src/command_processing.c **** void cmd_remove_SD_file( uint16 filename_length ){
 27345              		.loc 1 4199 0
 27346              		.cfi_startproc
 27347              		@ args = 0, pretend = 0, frame = 64
 27348              		@ frame_needed = 1, uses_anonymous_args = 0
 27349 0000 80B5     		push	{r7, lr}
 27350              		.cfi_def_cfa_offset 8
 27351              		.cfi_offset 7, -8
 27352              		.cfi_offset 14, -4
 27353 0002 90B0     		sub	sp, sp, #64
 27354              		.cfi_def_cfa_offset 72
 27355 0004 00AF     		add	r7, sp, #0
 27356              		.cfi_def_cfa_register 7
 27357 0006 0346     		mov	r3, r0
 27358 0008 FB80     		strh	r3, [r7, #6]	@ movhi
4200:..\src/command_processing.c ****     
4201:..\src/command_processing.c ****     uint8 i = 0;
 27359              		.loc 1 4201 0
 27360 000a 0023     		movs	r3, #0
 27361 000c 87F83F30 		strb	r3, [r7, #63]
4202:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 27362              		.loc 1 4202 0
 27363 0010 0023     		movs	r3, #0
 27364 0012 FB60     		str	r3, [r7, #12]
 27365 0014 07F11003 		add	r3, r7, #16
 27366 0018 2E22     		movs	r2, #46
 27367 001a 0021     		movs	r1, #0
 27368 001c 1846     		mov	r0, r3
 27369 001e FFF7FEFF 		bl	memset
4203:..\src/command_processing.c ****     strcpy(filename, "");
 27370              		.loc 1 4203 0
 27371 0022 214B     		ldr	r3, .L1077
 27372 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27373 0026 3B73     		strb	r3, [r7, #12]
4204:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 599


4205:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27374              		.loc 1 4205 0
 27375 0028 0023     		movs	r3, #0
 27376 002a 87F83F30 		strb	r3, [r7, #63]
 27377 002e 0FE0     		b	.L1075
 27378              	.L1076:
4206:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27379              		.loc 1 4206 0 discriminator 3
 27380 0030 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27381 0034 07F10C02 		add	r2, r7, #12
 27382 0038 1344     		add	r3, r3, r2
 27383 003a 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 27384 003e 0332     		adds	r2, r2, #3
 27385 0040 1A49     		ldr	r1, .L1077+4
 27386 0042 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27387 0044 1A70     		strb	r2, [r3]
4205:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27388              		.loc 1 4205 0 discriminator 3
 27389 0046 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27390 004a 0133     		adds	r3, r3, #1
 27391 004c 87F83F30 		strb	r3, [r7, #63]
 27392              	.L1075:
4205:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27393              		.loc 1 4205 0 is_stmt 0 discriminator 1
 27394 0050 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27395 0054 9BB2     		uxth	r3, r3
 27396 0056 FA88     		ldrh	r2, [r7, #6]
 27397 0058 9A42     		cmp	r2, r3
 27398 005a E9D8     		bhi	.L1076
4207:..\src/command_processing.c ****     }
4208:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27399              		.loc 1 4208 0 is_stmt 1
 27400 005c 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27401 0060 07F10C02 		add	r2, r7, #12
 27402 0064 1344     		add	r3, r3, r2
 27403 0066 0022     		movs	r2, #0
 27404 0068 1A70     		strb	r2, [r3]
4209:..\src/command_processing.c ****      
4210:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4211:..\src/command_processing.c ****     uint8 res = Remove_SD_File(filename);
 27405              		.loc 1 4211 0
 27406 006a 07F10C03 		add	r3, r7, #12
 27407 006e 1846     		mov	r0, r3
 27408 0070 FFF7FEFF 		bl	Remove_SD_File
 27409 0074 0346     		mov	r3, r0
 27410 0076 87F83E30 		strb	r3, [r7, #62]
4212:..\src/command_processing.c ****   
4213:..\src/command_processing.c ****     
4214:..\src/command_processing.c ****     uint8 packet_data[3]; 
4215:..\src/command_processing.c ****     
4216:..\src/command_processing.c ****     //Header package
4217:..\src/command_processing.c **** 
4218:..\src/command_processing.c ****     packet_data[0] = CMD_REMOVE_SD_SINGLE_FILE;
 27411              		.loc 1 4218 0
 27412 007a A823     		movs	r3, #168
 27413 007c 3B72     		strb	r3, [r7, #8]
4219:..\src/command_processing.c ****     packet_data[1] = res;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 600


 27414              		.loc 1 4219 0
 27415 007e 97F83E30 		ldrb	r3, [r7, #62]
 27416 0082 7B72     		strb	r3, [r7, #9]
4220:..\src/command_processing.c **** 
4221:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4222:..\src/command_processing.c ****     packet_data[2] = LCRChecksum (packet_data, 2);
 27417              		.loc 1 4222 0
 27418 0084 07F10803 		add	r3, r7, #8
 27419 0088 0221     		movs	r1, #2
 27420 008a 1846     		mov	r0, r3
 27421 008c FFF7FEFF 		bl	LCRChecksum
 27422 0090 0346     		mov	r3, r0
 27423 0092 BB72     		strb	r3, [r7, #10]
4223:..\src/command_processing.c ****     
4224:..\src/command_processing.c ****     commWrite(packet_data, 3);
 27424              		.loc 1 4224 0
 27425 0094 07F10803 		add	r3, r7, #8
 27426 0098 0321     		movs	r1, #3
 27427 009a 1846     		mov	r0, r3
 27428 009c FFF7FEFF 		bl	commWrite
4225:..\src/command_processing.c **** }
 27429              		.loc 1 4225 0
 27430 00a0 00BF     		nop
 27431 00a2 4037     		adds	r7, r7, #64
 27432              		.cfi_def_cfa_offset 8
 27433 00a4 BD46     		mov	sp, r7
 27434              		.cfi_def_cfa_register 13
 27435              		@ sp needed
 27436 00a6 80BD     		pop	{r7, pc}
 27437              	.L1078:
 27438              		.align	2
 27439              	.L1077:
 27440 00a8 881F0000 		.word	.LC300
 27441 00ac 00000000 		.word	g_rx
 27442              		.cfi_endproc
 27443              	.LFE118:
 27444              		.size	cmd_remove_SD_file, .-cmd_remove_SD_file
 27445              		.section	.text.vibrotactile_control,"ax",%progbits
 27446              		.align	2
 27447              		.global	vibrotactile_control
 27448              		.thumb
 27449              		.thumb_func
 27450              		.type	vibrotactile_control, %function
 27451              	vibrotactile_control:
 27452              	.LFB119:
4226:..\src/command_processing.c **** 
4227:..\src/command_processing.c **** //==============================================================================
4228:..\src/command_processing.c **** //                                                          VIBROTACTILE CONTROL
4229:..\src/command_processing.c **** //==============================================================================
4230:..\src/command_processing.c **** /* It asks IMU values to the SoftHand and sets vibrotactile feedback device inputs proportionally.*
4231:..\src/command_processing.c **** 
4232:..\src/command_processing.c **** void vibrotactile_control() {
 27453              		.loc 1 4232 0
 27454              		.cfi_startproc
 27455              		@ args = 0, pretend = 0, frame = 8
 27456              		@ frame_needed = 1, uses_anonymous_args = 0
 27457 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 601


 27458              		.cfi_def_cfa_offset 12
 27459              		.cfi_offset 4, -12
 27460              		.cfi_offset 7, -8
 27461              		.cfi_offset 14, -4
 27462 0002 83B0     		sub	sp, sp, #12
 27463              		.cfi_def_cfa_offset 24
 27464 0004 00AF     		add	r7, sp, #0
 27465              		.cfi_def_cfa_register 7
4233:..\src/command_processing.c ****     
4234:..\src/command_processing.c ****     uint8 i;
4235:..\src/command_processing.c ****     
4236:..\src/command_processing.c ****     commReadIMUFromSH();    
 27466              		.loc 1 4236 0
 27467 0006 FFF7FEFF 		bl	commReadIMUFromSH
4237:..\src/command_processing.c ****     // Ask to the slave the reference commands to drive the vibrotactile devices. 
4238:..\src/command_processing.c ****     // Values received are already the PWM commands computed by the slave board proportional to the
4239:..\src/command_processing.c ****     
4240:..\src/command_processing.c ****     PWM_IMU_1 = (int16)(((float)PWM_IMU_1/50.0) * SCALA);
 27468              		.loc 1 4240 0
 27469 000a 494B     		ldr	r3, .L1087
 27470 000c B3F90030 		ldrsh	r3, [r3]
 27471 0010 1846     		mov	r0, r3
 27472 0012 FFF7FEFF 		bl	__aeabi_i2f
 27473 0016 0346     		mov	r3, r0
 27474 0018 1846     		mov	r0, r3
 27475 001a FFF7FEFF 		bl	__aeabi_f2d
 27476 001e 4FF00002 		mov	r2, #0
 27477 0022 444B     		ldr	r3, .L1087+4
 27478 0024 FFF7FEFF 		bl	__aeabi_ddiv
 27479 0028 0346     		mov	r3, r0
 27480 002a 0C46     		mov	r4, r1
 27481 002c 1846     		mov	r0, r3
 27482 002e 2146     		mov	r1, r4
 27483 0030 4FF00002 		mov	r2, #0
 27484 0034 404B     		ldr	r3, .L1087+8
 27485 0036 FFF7FEFF 		bl	__aeabi_dmul
 27486 003a 0346     		mov	r3, r0
 27487 003c 0C46     		mov	r4, r1
 27488 003e 1846     		mov	r0, r3
 27489 0040 2146     		mov	r1, r4
 27490 0042 FFF7FEFF 		bl	__aeabi_d2iz
 27491 0046 0346     		mov	r3, r0
 27492 0048 1AB2     		sxth	r2, r3
 27493 004a 394B     		ldr	r3, .L1087
 27494 004c 1A80     		strh	r2, [r3]	@ movhi
4241:..\src/command_processing.c ****     if (PWM_IMU_1 > MAX_INPUT_PWM) PWM_IMU_1 = MAX_INPUT_PWM;
 27495              		.loc 1 4241 0
 27496 004e 384B     		ldr	r3, .L1087
 27497 0050 B3F90030 		ldrsh	r3, [r3]
 27498 0054 642B     		cmp	r3, #100
 27499 0056 02DD     		ble	.L1080
 27500              		.loc 1 4241 0 is_stmt 0 discriminator 1
 27501 0058 354B     		ldr	r3, .L1087
 27502 005a 6422     		movs	r2, #100
 27503 005c 1A80     		strh	r2, [r3]	@ movhi
 27504              	.L1080:
4242:..\src/command_processing.c ****     if (PWM_IMU_1 < MIN_INPUT_PWM) PWM_IMU_1 = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 602


 27505              		.loc 1 4242 0 is_stmt 1
 27506 005e 344B     		ldr	r3, .L1087
 27507 0060 B3F90030 		ldrsh	r3, [r3]
 27508 0064 092B     		cmp	r3, #9
 27509 0066 02DC     		bgt	.L1081
 27510              		.loc 1 4242 0 is_stmt 0 discriminator 1
 27511 0068 314B     		ldr	r3, .L1087
 27512 006a 0022     		movs	r2, #0
 27513 006c 1A80     		strh	r2, [r3]	@ movhi
 27514              	.L1081:
4243:..\src/command_processing.c ****     
4244:..\src/command_processing.c ****     PWM_IMU_2 = (int16) (((float)PWM_IMU_2/50.0) * SCALA);
 27515              		.loc 1 4244 0 is_stmt 1
 27516 006e 334B     		ldr	r3, .L1087+12
 27517 0070 B3F90030 		ldrsh	r3, [r3]
 27518 0074 1846     		mov	r0, r3
 27519 0076 FFF7FEFF 		bl	__aeabi_i2f
 27520 007a 0346     		mov	r3, r0
 27521 007c 1846     		mov	r0, r3
 27522 007e FFF7FEFF 		bl	__aeabi_f2d
 27523 0082 4FF00002 		mov	r2, #0
 27524 0086 2B4B     		ldr	r3, .L1087+4
 27525 0088 FFF7FEFF 		bl	__aeabi_ddiv
 27526 008c 0346     		mov	r3, r0
 27527 008e 0C46     		mov	r4, r1
 27528 0090 1846     		mov	r0, r3
 27529 0092 2146     		mov	r1, r4
 27530 0094 4FF00002 		mov	r2, #0
 27531 0098 274B     		ldr	r3, .L1087+8
 27532 009a FFF7FEFF 		bl	__aeabi_dmul
 27533 009e 0346     		mov	r3, r0
 27534 00a0 0C46     		mov	r4, r1
 27535 00a2 1846     		mov	r0, r3
 27536 00a4 2146     		mov	r1, r4
 27537 00a6 FFF7FEFF 		bl	__aeabi_d2iz
 27538 00aa 0346     		mov	r3, r0
 27539 00ac 1AB2     		sxth	r2, r3
 27540 00ae 234B     		ldr	r3, .L1087+12
 27541 00b0 1A80     		strh	r2, [r3]	@ movhi
4245:..\src/command_processing.c ****     if (PWM_IMU_2 > MAX_INPUT_PWM) PWM_IMU_2 = MAX_INPUT_PWM;
 27542              		.loc 1 4245 0
 27543 00b2 224B     		ldr	r3, .L1087+12
 27544 00b4 B3F90030 		ldrsh	r3, [r3]
 27545 00b8 642B     		cmp	r3, #100
 27546 00ba 02DD     		ble	.L1082
 27547              		.loc 1 4245 0 is_stmt 0 discriminator 1
 27548 00bc 1F4B     		ldr	r3, .L1087+12
 27549 00be 6422     		movs	r2, #100
 27550 00c0 1A80     		strh	r2, [r3]	@ movhi
 27551              	.L1082:
4246:..\src/command_processing.c ****     if (PWM_IMU_2 < MIN_INPUT_PWM) PWM_IMU_2 = 0;
 27552              		.loc 1 4246 0 is_stmt 1
 27553 00c2 1E4B     		ldr	r3, .L1087+12
 27554 00c4 B3F90030 		ldrsh	r3, [r3]
 27555 00c8 092B     		cmp	r3, #9
 27556 00ca 02DC     		bgt	.L1083
 27557              		.loc 1 4246 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 603


 27558 00cc 1B4B     		ldr	r3, .L1087+12
 27559 00ce 0022     		movs	r2, #0
 27560 00d0 1A80     		strh	r2, [r3]	@ movhi
 27561              	.L1083:
4247:..\src/command_processing.c ****     
4248:..\src/command_processing.c ****     g_ref_vibrotactile[0].pwm = PWM_IMU_1;
 27562              		.loc 1 4248 0 is_stmt 1
 27563 00d2 174B     		ldr	r3, .L1087
 27564 00d4 B3F90020 		ldrsh	r2, [r3]
 27565 00d8 194B     		ldr	r3, .L1087+16
 27566 00da 1A80     		strh	r2, [r3]	@ movhi
4249:..\src/command_processing.c ****     g_ref_vibrotactile[1].pwm = PWM_IMU_2;
 27567              		.loc 1 4249 0
 27568 00dc 174B     		ldr	r3, .L1087+12
 27569 00de B3F90020 		ldrsh	r2, [r3]
 27570 00e2 174B     		ldr	r3, .L1087+16
 27571 00e4 5A80     		strh	r2, [r3, #2]	@ movhi
4250:..\src/command_processing.c ****     
4251:..\src/command_processing.c ****     g_ref_vibrotactile[0].pwm = PWM_IMU_1;
 27572              		.loc 1 4251 0
 27573 00e6 124B     		ldr	r3, .L1087
 27574 00e8 B3F90020 		ldrsh	r2, [r3]
 27575 00ec 144B     		ldr	r3, .L1087+16
 27576 00ee 1A80     		strh	r2, [r3]	@ movhi
4252:..\src/command_processing.c ****     g_ref_vibrotactile[1].pwm = PWM_IMU_2;
 27577              		.loc 1 4252 0
 27578 00f0 124B     		ldr	r3, .L1087+12
 27579 00f2 B3F90020 		ldrsh	r2, [r3]
 27580 00f6 124B     		ldr	r3, .L1087+16
 27581 00f8 5A80     		strh	r2, [r3, #2]	@ movhi
4253:..\src/command_processing.c **** 
4254:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_EXTERNAL_IMU; i++){       
 27582              		.loc 1 4254 0
 27583 00fa 0023     		movs	r3, #0
 27584 00fc FB71     		strb	r3, [r7, #7]
 27585 00fe 0FE0     		b	.L1084
 27586              	.L1086:
4255:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 27587              		.loc 1 4255 0
 27588 0100 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 27589 0102 1846     		mov	r0, r3
 27590 0104 FFF7FEFF 		bl	vibrotactile_control_generic
4256:..\src/command_processing.c ****         
4257:..\src/command_processing.c ****         if (interrupt_flag){
 27591              		.loc 1 4257 0
 27592 0108 0E4B     		ldr	r3, .L1087+20
 27593 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27594 010c 002B     		cmp	r3, #0
 27595 010e 04D0     		beq	.L1085
4258:..\src/command_processing.c ****             interrupt_flag = FALSE;
 27596              		.loc 1 4258 0
 27597 0110 0C4B     		ldr	r3, .L1087+20
 27598 0112 0022     		movs	r2, #0
 27599 0114 1A70     		strb	r2, [r3]
4259:..\src/command_processing.c ****             interrupt_manager();
 27600              		.loc 1 4259 0
 27601 0116 FFF7FEFF 		bl	interrupt_manager
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 604


 27602              	.L1085:
4254:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 27603              		.loc 1 4254 0 discriminator 2
 27604 011a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 27605 011c 0133     		adds	r3, r3, #1
 27606 011e FB71     		strb	r3, [r7, #7]
 27607              	.L1084:
4254:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 27608              		.loc 1 4254 0 is_stmt 0 discriminator 1
 27609 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 27610 0122 012B     		cmp	r3, #1
 27611 0124 ECD9     		bls	.L1086
4260:..\src/command_processing.c ****         }
4261:..\src/command_processing.c ****     } 
4262:..\src/command_processing.c **** }
 27612              		.loc 1 4262 0 is_stmt 1
 27613 0126 00BF     		nop
 27614 0128 0C37     		adds	r7, r7, #12
 27615              		.cfi_def_cfa_offset 12
 27616 012a BD46     		mov	sp, r7
 27617              		.cfi_def_cfa_register 13
 27618              		@ sp needed
 27619 012c 90BD     		pop	{r4, r7, pc}
 27620              	.L1088:
 27621 012e 00BF     		.align	2
 27622              	.L1087:
 27623 0130 00000000 		.word	PWM_IMU_1
 27624 0134 00004940 		.word	1078525952
 27625 0138 00003E40 		.word	1077805056
 27626 013c 00000000 		.word	PWM_IMU_2
 27627 0140 00000000 		.word	g_ref_vibrotactile
 27628 0144 00000000 		.word	interrupt_flag
 27629              		.cfi_endproc
 27630              	.LFE119:
 27631              		.size	vibrotactile_control, .-vibrotactile_control
 27632              		.global	__aeabi_dsub
 27633              		.global	__aeabi_fcmpgt
 27634              		.section	.text.air_chambers_control,"ax",%progbits
 27635              		.align	2
 27636              		.global	air_chambers_control
 27637              		.thumb
 27638              		.thumb_func
 27639              		.type	air_chambers_control, %function
 27640              	air_chambers_control:
 27641              	.LFB120:
4263:..\src/command_processing.c **** 
4264:..\src/command_processing.c **** 
4265:..\src/command_processing.c **** //==============================================================================
4266:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
4267:..\src/command_processing.c **** //==============================================================================
4268:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
4269:..\src/command_processing.c **** 
4270:..\src/command_processing.c **** 
4271:..\src/command_processing.c **** void air_chambers_control() {
 27642              		.loc 1 4271 0
 27643              		.cfi_startproc
 27644              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 605


 27645              		@ frame_needed = 1, uses_anonymous_args = 0
 27646 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 27647              		.cfi_def_cfa_offset 24
 27648              		.cfi_offset 4, -24
 27649              		.cfi_offset 5, -20
 27650              		.cfi_offset 7, -16
 27651              		.cfi_offset 8, -12
 27652              		.cfi_offset 9, -8
 27653              		.cfi_offset 14, -4
 27654 0004 86B0     		sub	sp, sp, #24
 27655              		.cfi_def_cfa_offset 48
 27656 0006 00AF     		add	r7, sp, #0
 27657              		.cfi_def_cfa_register 7
4272:..\src/command_processing.c **** 
4273:..\src/command_processing.c ****     int16 curr_diff;
4274:..\src/command_processing.c ****     int32 pressure_reference;
4275:..\src/command_processing.c ****     int32 err_pressure, pressure_value;
4276:..\src/command_processing.c ****     int32 valve_command;
4277:..\src/command_processing.c ****     int16 x_value;
4278:..\src/command_processing.c **** 
4279:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
4280:..\src/command_processing.c ****     
4281:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
 27658              		.loc 1 4281 0
 27659 0008 FFF7FEFF 		bl	commReadResCurrFromSH
 27660 000c 0346     		mov	r3, r0
 27661 000e BB81     		strh	r3, [r7, #12]	@ movhi
4282:..\src/command_processing.c **** 
4283:..\src/command_processing.c ****     // Compute pressure reference
4284:..\src/command_processing.c **** 
4285:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
 27662              		.loc 1 4285 0
 27663 0010 B7F90C30 		ldrsh	r3, [r7, #12]
 27664 0014 1846     		mov	r0, r3
 27665 0016 FFF7FEFF 		bl	__aeabi_i2d
 27666 001a 4FF00002 		mov	r2, #0
 27667 001e 5C4B     		ldr	r3, .L1099
 27668 0020 FFF7FEFF 		bl	__aeabi_dsub
 27669 0024 0346     		mov	r3, r0
 27670 0026 0C46     		mov	r4, r1
 27671 0028 1846     		mov	r0, r3
 27672 002a 2146     		mov	r1, r4
 27673 002c FFF7FEFF 		bl	__aeabi_d2iz
 27674 0030 0346     		mov	r3, r0
 27675 0032 FB81     		strh	r3, [r7, #14]	@ movhi
4286:..\src/command_processing.c ****     if (x_value < 0)
 27676              		.loc 1 4286 0
 27677 0034 B7F90E30 		ldrsh	r3, [r7, #14]
 27678 0038 002B     		cmp	r3, #0
 27679 003a 01DA     		bge	.L1090
4287:..\src/command_processing.c ****         x_value = 0;
 27680              		.loc 1 4287 0
 27681 003c 0023     		movs	r3, #0
 27682 003e FB81     		strh	r3, [r7, #14]	@ movhi
 27683              	.L1090:
4288:..\src/command_processing.c ****     
4289:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 606


 27684              		.loc 1 4289 0
 27685 0040 B7F90E30 		ldrsh	r3, [r7, #14]
 27686 0044 1846     		mov	r0, r3
 27687 0046 FFF7FEFF 		bl	__aeabi_i2d
 27688 004a 4FF00002 		mov	r2, #0
 27689 004e 514B     		ldr	r3, .L1099+4
 27690 0050 FFF7FEFF 		bl	__aeabi_dmul
 27691 0054 0346     		mov	r3, r0
 27692 0056 0C46     		mov	r4, r1
 27693 0058 2546     		mov	r5, r4
 27694 005a 1C46     		mov	r4, r3
 27695 005c B7F90E30 		ldrsh	r3, [r7, #14]
 27696 0060 1846     		mov	r0, r3
 27697 0062 FFF7FEFF 		bl	__aeabi_i2d
 27698 0066 0246     		mov	r2, r0
 27699 0068 0B46     		mov	r3, r1
 27700 006a 2046     		mov	r0, r4
 27701 006c 2946     		mov	r1, r5
 27702 006e FFF7FEFF 		bl	__aeabi_dmul
 27703 0072 0346     		mov	r3, r0
 27704 0074 0C46     		mov	r4, r1
 27705 0076 2546     		mov	r5, r4
 27706 0078 1C46     		mov	r4, r3
 27707 007a 474B     		ldr	r3, .L1099+8
 27708 007c D3F8D032 		ldr	r3, [r3, #720]
 27709 0080 1846     		mov	r0, r3
 27710 0082 FFF7FEFF 		bl	__aeabi_i2d
 27711 0086 4FF00002 		mov	r2, #0
 27712 008a 444B     		ldr	r3, .L1099+12
 27713 008c FFF7FEFF 		bl	__aeabi_dmul
 27714 0090 0246     		mov	r2, r0
 27715 0092 0B46     		mov	r3, r1
 27716 0094 9046     		mov	r8, r2
 27717 0096 9946     		mov	r9, r3
 27718 0098 B7F90E30 		ldrsh	r3, [r7, #14]
 27719 009c 1846     		mov	r0, r3
 27720 009e FFF7FEFF 		bl	__aeabi_i2d
 27721 00a2 0246     		mov	r2, r0
 27722 00a4 0B46     		mov	r3, r1
 27723 00a6 4046     		mov	r0, r8
 27724 00a8 4946     		mov	r1, r9
 27725 00aa FFF7FEFF 		bl	__aeabi_dmul
 27726 00ae 0246     		mov	r2, r0
 27727 00b0 0B46     		mov	r3, r1
 27728 00b2 2046     		mov	r0, r4
 27729 00b4 2946     		mov	r1, r5
 27730 00b6 FFF7FEFF 		bl	__aeabi_dadd
 27731 00ba 0346     		mov	r3, r0
 27732 00bc 0C46     		mov	r4, r1
 27733 00be 1846     		mov	r0, r3
 27734 00c0 2146     		mov	r1, r4
 27735 00c2 FFF7FEFF 		bl	__aeabi_d2iz
 27736 00c6 0146     		mov	r1, r0
 27737 00c8 334B     		ldr	r3, .L1099+8
 27738 00ca D3F8D032 		ldr	r3, [r3, #720]
 27739 00ce 324A     		ldr	r2, .L1099+8
 27740 00d0 D2F8D022 		ldr	r2, [r2, #720]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 607


 27741 00d4 02FB03F3 		mul	r3, r2, r3
 27742 00d8 91FBF3F3 		sdiv	r3, r1, r3
 27743 00dc 7B61     		str	r3, [r7, #20]
4290:..\src/command_processing.c ****     if (pressure_reference < 0)
 27744              		.loc 1 4290 0
 27745 00de 7B69     		ldr	r3, [r7, #20]
 27746 00e0 002B     		cmp	r3, #0
 27747 00e2 01DA     		bge	.L1091
4291:..\src/command_processing.c ****         pressure_reference = 0;
 27748              		.loc 1 4291 0
 27749 00e4 0023     		movs	r3, #0
 27750 00e6 7B61     		str	r3, [r7, #20]
 27751              	.L1091:
4292:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
 27752              		.loc 1 4292 0
 27753 00e8 7869     		ldr	r0, [r7, #20]
 27754 00ea FFF7FEFF 		bl	__aeabi_i2f
 27755 00ee 0246     		mov	r2, r0
 27756 00f0 294B     		ldr	r3, .L1099+8
 27757 00f2 D3F8D432 		ldr	r3, [r3, #724]	@ float
 27758 00f6 1946     		mov	r1, r3
 27759 00f8 1046     		mov	r0, r2
 27760 00fa FFF7FEFF 		bl	__aeabi_fcmpgt
 27761 00fe 0346     		mov	r3, r0
 27762 0100 002B     		cmp	r3, #0
 27763 0102 07D0     		beq	.L1092
4293:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
 27764              		.loc 1 4293 0
 27765 0104 244B     		ldr	r3, .L1099+8
 27766 0106 D3F8D432 		ldr	r3, [r3, #724]	@ float
 27767 010a 1846     		mov	r0, r3
 27768 010c FFF7FEFF 		bl	__aeabi_f2iz
 27769 0110 0346     		mov	r3, r0
 27770 0112 7B61     		str	r3, [r7, #20]
 27771              	.L1092:
4294:..\src/command_processing.c ****     
4295:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
 27772              		.loc 1 4295 0
 27773 0114 224B     		ldr	r3, .L1099+16
 27774 0116 1B68     		ldr	r3, [r3]	@ float
 27775 0118 1846     		mov	r0, r3
 27776 011a FFF7FEFF 		bl	__aeabi_f2iz
 27777 011e 0346     		mov	r3, r0
 27778 0120 BB60     		str	r3, [r7, #8]
4296:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
 27779              		.loc 1 4296 0
 27780 0122 7A69     		ldr	r2, [r7, #20]
 27781 0124 BB68     		ldr	r3, [r7, #8]
 27782 0126 D31A     		subs	r3, r2, r3
 27783 0128 7B60     		str	r3, [r7, #4]
4297:..\src/command_processing.c **** 
4298:..\src/command_processing.c ****     if (x_value <= 0){
 27784              		.loc 1 4298 0
 27785 012a B7F90E30 		ldrsh	r3, [r7, #14]
 27786 012e 002B     		cmp	r3, #0
 27787 0130 02DC     		bgt	.L1094
4299:..\src/command_processing.c ****         //i.e the hand is opening
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 608


4300:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
 27788              		.loc 1 4300 0
 27789 0132 0023     		movs	r3, #0
 27790 0134 3B61     		str	r3, [r7, #16]
 27791 0136 01E0     		b	.L1095
 27792              	.L1094:
4301:..\src/command_processing.c ****     }
4302:..\src/command_processing.c ****     else {
4303:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4304:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4305:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4306:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
 27793              		.loc 1 4306 0
 27794 0138 0123     		movs	r3, #1
 27795 013a 3B61     		str	r3, [r7, #16]
 27796              	.L1095:
4307:..\src/command_processing.c ****     }
4308:..\src/command_processing.c ****     
4309:..\src/command_processing.c ****     // Pump control*/
4310:..\src/command_processing.c ****    
4311:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
 27797              		.loc 1 4311 0
 27798 013c 164B     		ldr	r3, .L1099+8
 27799 013e D3F8D842 		ldr	r4, [r3, #728]	@ float
 27800 0142 7868     		ldr	r0, [r7, #4]
 27801 0144 FFF7FEFF 		bl	__aeabi_i2f
 27802 0148 0346     		mov	r3, r0
 27803 014a 1946     		mov	r1, r3
 27804 014c 2046     		mov	r0, r4
 27805 014e FFF7FEFF 		bl	__aeabi_fmul
 27806 0152 0346     		mov	r3, r0
 27807 0154 1846     		mov	r0, r3
 27808 0156 FFF7FEFF 		bl	__aeabi_f2iz
 27809 015a 0246     		mov	r2, r0
 27810 015c 114B     		ldr	r3, .L1099+20
 27811 015e 9A60     		str	r2, [r3, #8]
4312:..\src/command_processing.c **** 
4313:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4314:..\src/command_processing.c ****     
4315:..\src/command_processing.c ****     // Limit output voltage
4316:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
 27812              		.loc 1 4316 0
 27813 0160 104B     		ldr	r3, .L1099+20
 27814 0162 9B68     		ldr	r3, [r3, #8]
 27815 0164 502B     		cmp	r3, #80
 27816 0166 02DD     		ble	.L1096
4317:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
 27817              		.loc 1 4317 0
 27818 0168 0E4B     		ldr	r3, .L1099+20
 27819 016a 5022     		movs	r2, #80
 27820 016c 9A60     		str	r2, [r3, #8]
 27821              	.L1096:
4318:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
 27822              		.loc 1 4318 0
 27823 016e 0D4B     		ldr	r3, .L1099+20
 27824 0170 9B68     		ldr	r3, [r3, #8]
 27825 0172 132B     		cmp	r3, #19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 609


 27826 0174 02DC     		bgt	.L1097
4319:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
 27827              		.loc 1 4319 0
 27828 0176 0B4B     		ldr	r3, .L1099+20
 27829 0178 0022     		movs	r2, #0
 27830 017a 9A60     		str	r2, [r3, #8]
 27831              	.L1097:
4320:..\src/command_processing.c ****         
4321:..\src/command_processing.c ****     VALVE_Write(valve_command);
 27832              		.loc 1 4321 0
 27833 017c 3B69     		ldr	r3, [r7, #16]
 27834 017e DBB2     		uxtb	r3, r3
 27835 0180 1846     		mov	r0, r3
 27836 0182 FFF7FEFF 		bl	VALVE_Write
4322:..\src/command_processing.c ****     
4323:..\src/command_processing.c ****     
4324:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4325:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4326:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4327:..\src/command_processing.c ****     // motor_control_generic(slave_motor_idx);
4328:..\src/command_processing.c **** 
4329:..\src/command_processing.c **** }
 27837              		.loc 1 4329 0
 27838 0186 00BF     		nop
 27839 0188 1837     		adds	r7, r7, #24
 27840              		.cfi_def_cfa_offset 24
 27841 018a BD46     		mov	sp, r7
 27842              		.cfi_def_cfa_register 13
 27843              		@ sp needed
 27844 018c BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 27845              	.L1100:
 27846              		.align	2
 27847              	.L1099:
 27848 0190 00004940 		.word	1078525952
 27849 0194 00003EC0 		.word	-1069678592
 27850 0198 00000000 		.word	c_mem
 27851 019c 00804B40 		.word	1078689792
 27852 01a0 00000000 		.word	g_fb_meas
 27853 01a4 00000000 		.word	g_refNew
 27854              		.cfi_endproc
 27855              	.LFE120:
 27856              		.size	air_chambers_control, .-air_chambers_control
 27857              		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 27858              		.align	2
 27859              		.global	emg_activation_velocity_fsm
 27860              		.thumb
 27861              		.thumb_func
 27862              		.type	emg_activation_velocity_fsm, %function
 27863              	emg_activation_velocity_fsm:
 27864              	.LFB121:
4330:..\src/command_processing.c **** 
4331:..\src/command_processing.c **** 
4332:..\src/command_processing.c **** //==============================================================================
4333:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4334:..\src/command_processing.c **** //==============================================================================
4335:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4336:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 610


4337:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 27865              		.loc 1 4337 0
 27866              		.cfi_startproc
 27867              		@ args = 0, pretend = 0, frame = 16
 27868              		@ frame_needed = 1, uses_anonymous_args = 0
 27869              		@ link register save eliminated.
 27870 0000 80B4     		push	{r7}
 27871              		.cfi_def_cfa_offset 4
 27872              		.cfi_offset 7, -4
 27873 0002 85B0     		sub	sp, sp, #20
 27874              		.cfi_def_cfa_offset 24
 27875 0004 00AF     		add	r7, sp, #0
 27876              		.cfi_def_cfa_register 7
4338:..\src/command_processing.c ****       
4339:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4340:..\src/command_processing.c ****     static int32 cnt = 0;
4341:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4342:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4343:..\src/command_processing.c ****     
4344:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 27877              		.loc 1 4344 0
 27878 0006 534B     		ldr	r3, .L1130
 27879 0008 1B68     		ldr	r3, [r3]
 27880 000a 534A     		ldr	r2, .L1130+4
 27881 000c B2F8F021 		ldrh	r2, [r2, #496]
 27882 0010 9B1A     		subs	r3, r3, r2
 27883 0012 FB60     		str	r3, [r7, #12]
4345:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 27884              		.loc 1 4345 0
 27885 0014 4F4B     		ldr	r3, .L1130
 27886 0016 5B68     		ldr	r3, [r3, #4]
 27887 0018 4F4A     		ldr	r2, .L1130+4
 27888 001a B2F8F221 		ldrh	r2, [r2, #498]
 27889 001e 9B1A     		subs	r3, r3, r2
 27890 0020 BB60     		str	r3, [r7, #8]
4346:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 27891              		.loc 1 4346 0
 27892 0022 4C4B     		ldr	r3, .L1130
 27893 0024 1B68     		ldr	r3, [r3]
 27894 0026 4C4A     		ldr	r2, .L1130+4
 27895 0028 B2F8E222 		ldrh	r2, [r2, #738]
 27896 002c 9B1A     		subs	r3, r3, r2
 27897 002e 7B60     		str	r3, [r7, #4]
4347:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 27898              		.loc 1 4347 0
 27899 0030 484B     		ldr	r3, .L1130
 27900 0032 5B68     		ldr	r3, [r3, #4]
 27901 0034 484A     		ldr	r2, .L1130+4
 27902 0036 B2F8E422 		ldrh	r2, [r2, #740]
 27903 003a 9B1A     		subs	r3, r3, r2
 27904 003c 3B60     		str	r3, [r7]
4348:..\src/command_processing.c ****     
4349:..\src/command_processing.c **** 
4350:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4351:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4352:..\src/command_processing.c ****     switch (fsm_state){
 27905              		.loc 1 4352 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 611


 27906 003e 474B     		ldr	r3, .L1130+8
 27907 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27908 0042 032B     		cmp	r3, #3
 27909 0044 7FD8     		bhi	.L1102
 27910 0046 01A2     		adr	r2, .L1104
 27911 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 27912              		.p2align 2
 27913              	.L1104:
 27914 004c 5D000000 		.word	.L1103+1
 27915 0050 71000000 		.word	.L1105+1
 27916 0054 11010000 		.word	.L1106+1
 27917 0058 25010000 		.word	.L1107+1
 27918              		.p2align 1
 27919              	.L1103:
4353:..\src/command_processing.c ****         case RELAX_STATE:
4354:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27920              		.loc 1 4354 0
 27921 005c FB68     		ldr	r3, [r7, #12]
 27922 005e 002B     		cmp	r3, #0
 27923 0060 02DC     		bgt	.L1108
 27924              		.loc 1 4354 0 is_stmt 0 discriminator 1
 27925 0062 BB68     		ldr	r3, [r7, #8]
 27926 0064 002B     		cmp	r3, #0
 27927 0066 67DD     		ble	.L1126
 27928              	.L1108:
4355:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 27929              		.loc 1 4355 0 is_stmt 1
 27930 0068 3C4B     		ldr	r3, .L1130+8
 27931 006a 0122     		movs	r2, #1
 27932 006c 1A70     		strb	r2, [r3]
4356:..\src/command_processing.c ****             }
4357:..\src/command_processing.c ****             
4358:..\src/command_processing.c ****             break;
 27933              		.loc 1 4358 0
 27934 006e 63E0     		b	.L1126
 27935              	.L1105:
4359:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4360:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27936              		.loc 1 4360 0
 27937 0070 FB68     		ldr	r3, [r7, #12]
 27938 0072 002B     		cmp	r3, #0
 27939 0074 02DC     		bgt	.L1110
 27940              		.loc 1 4360 0 is_stmt 0 discriminator 1
 27941 0076 BB68     		ldr	r3, [r7, #8]
 27942 0078 002B     		cmp	r3, #0
 27943 007a 05DD     		ble	.L1111
 27944              	.L1110:
4361:..\src/command_processing.c ****                 cnt = cnt +1;
 27945              		.loc 1 4361 0 is_stmt 1
 27946 007c 384B     		ldr	r3, .L1130+12
 27947 007e 1B68     		ldr	r3, [r3]
 27948 0080 0133     		adds	r3, r3, #1
 27949 0082 374A     		ldr	r2, .L1130+12
 27950 0084 1360     		str	r3, [r2]
 27951 0086 02E0     		b	.L1112
 27952              	.L1111:
4362:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 612


4363:..\src/command_processing.c ****             else {
4364:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27953              		.loc 1 4364 0
 27954 0088 344B     		ldr	r3, .L1130+8
 27955 008a 0022     		movs	r2, #0
 27956 008c 1A70     		strb	r2, [r3]
 27957              	.L1112:
4365:..\src/command_processing.c ****             }
4366:..\src/command_processing.c ****             
4367:..\src/command_processing.c ****             if (cnt > 100){
 27958              		.loc 1 4367 0
 27959 008e 344B     		ldr	r3, .L1130+12
 27960 0090 1B68     		ldr	r3, [r3]
 27961 0092 642B     		cmp	r3, #100
 27962 0094 52DD     		ble	.L1127
4368:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 27963              		.loc 1 4368 0
 27964 0096 FB68     		ldr	r3, [r7, #12]
 27965 0098 002B     		cmp	r3, #0
 27966 009a 02DD     		ble	.L1114
 27967              		.loc 1 4368 0 is_stmt 0 discriminator 1
 27968 009c 7B68     		ldr	r3, [r7, #4]
 27969 009e 002B     		cmp	r3, #0
 27970 00a0 05DC     		bgt	.L1115
 27971              	.L1114:
 27972              		.loc 1 4368 0 discriminator 3
 27973 00a2 BB68     		ldr	r3, [r7, #8]
 27974 00a4 002B     		cmp	r3, #0
 27975 00a6 0EDD     		ble	.L1116
 27976              		.loc 1 4368 0 discriminator 4
 27977 00a8 3B68     		ldr	r3, [r7]
 27978 00aa 002B     		cmp	r3, #0
 27979 00ac 0BDD     		ble	.L1116
 27980              	.L1115:
4369:..\src/command_processing.c ****                     // Fast activation
4370:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27981              		.loc 1 4370 0 is_stmt 1
 27982 00ae 2A4B     		ldr	r3, .L1130+4
 27983 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27984 00b4 002B     		cmp	r3, #0
 27985 00b6 03D1     		bne	.L1117
4371:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27986              		.loc 1 4371 0
 27987 00b8 284B     		ldr	r3, .L1130+8
 27988 00ba 0222     		movs	r2, #2
 27989 00bc 1A70     		strb	r2, [r3]
 27990 00be 02E0     		b	.L1116
 27991              	.L1117:
4372:..\src/command_processing.c ****                     }
4373:..\src/command_processing.c ****                     else{
4374:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27992              		.loc 1 4374 0
 27993 00c0 264B     		ldr	r3, .L1130+8
 27994 00c2 0322     		movs	r2, #3
 27995 00c4 1A70     		strb	r2, [r3]
 27996              	.L1116:
4375:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 613


4376:..\src/command_processing.c ****                 }
4377:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 27997              		.loc 1 4377 0
 27998 00c6 FB68     		ldr	r3, [r7, #12]
 27999 00c8 002B     		cmp	r3, #0
 28000 00ca 02DD     		ble	.L1118
 28001              		.loc 1 4377 0 is_stmt 0 discriminator 1
 28002 00cc 7B68     		ldr	r3, [r7, #4]
 28003 00ce 002B     		cmp	r3, #0
 28004 00d0 05DB     		blt	.L1119
 28005              	.L1118:
 28006              		.loc 1 4377 0 discriminator 3
 28007 00d2 BB68     		ldr	r3, [r7, #8]
 28008 00d4 002B     		cmp	r3, #0
 28009 00d6 0EDD     		ble	.L1120
 28010              		.loc 1 4377 0 discriminator 4
 28011 00d8 3B68     		ldr	r3, [r7]
 28012 00da 002B     		cmp	r3, #0
 28013 00dc 0BDA     		bge	.L1120
 28014              	.L1119:
4378:..\src/command_processing.c ****                     // Slow activation
4379:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 28015              		.loc 1 4379 0 is_stmt 1
 28016 00de 1E4B     		ldr	r3, .L1130+4
 28017 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 28018 00e4 002B     		cmp	r3, #0
 28019 00e6 03D1     		bne	.L1121
4380:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 28020              		.loc 1 4380 0
 28021 00e8 1C4B     		ldr	r3, .L1130+8
 28022 00ea 0322     		movs	r2, #3
 28023 00ec 1A70     		strb	r2, [r3]
 28024 00ee 02E0     		b	.L1120
 28025              	.L1121:
4381:..\src/command_processing.c ****                     }
4382:..\src/command_processing.c ****                     else{
4383:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 28026              		.loc 1 4383 0
 28027 00f0 1A4B     		ldr	r3, .L1130+8
 28028 00f2 0222     		movs	r2, #2
 28029 00f4 1A70     		strb	r2, [r3]
 28030              	.L1120:
4384:..\src/command_processing.c ****                     }
4385:..\src/command_processing.c ****                 }
4386:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 28031              		.loc 1 4386 0
 28032 00f6 FB68     		ldr	r3, [r7, #12]
 28033 00f8 002B     		cmp	r3, #0
 28034 00fa 05DA     		bge	.L1122
 28035              		.loc 1 4386 0 is_stmt 0 discriminator 1
 28036 00fc BB68     		ldr	r3, [r7, #8]
 28037 00fe 002B     		cmp	r3, #0
 28038 0100 02DA     		bge	.L1122
4387:..\src/command_processing.c ****                     // Involuntary activation
4388:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 28039              		.loc 1 4388 0 is_stmt 1
 28040 0102 164B     		ldr	r3, .L1130+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 614


 28041 0104 0022     		movs	r2, #0
 28042 0106 1A70     		strb	r2, [r3]
 28043              	.L1122:
4389:..\src/command_processing.c ****                 }
4390:..\src/command_processing.c ****                 cnt = 0;
 28044              		.loc 1 4390 0
 28045 0108 154B     		ldr	r3, .L1130+12
 28046 010a 0022     		movs	r2, #0
 28047 010c 1A60     		str	r2, [r3]
4391:..\src/command_processing.c ****             }
4392:..\src/command_processing.c ****     
4393:..\src/command_processing.c ****             break;
 28048              		.loc 1 4393 0
 28049 010e 15E0     		b	.L1127
 28050              	.L1106:
4394:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4395:..\src/command_processing.c ****             
4396:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 28051              		.loc 1 4396 0
 28052 0110 FB68     		ldr	r3, [r7, #12]
 28053 0112 002B     		cmp	r3, #0
 28054 0114 14DA     		bge	.L1128
 28055              		.loc 1 4396 0 is_stmt 0 discriminator 1
 28056 0116 BB68     		ldr	r3, [r7, #8]
 28057 0118 002B     		cmp	r3, #0
 28058 011a 11DA     		bge	.L1128
4397:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 28059              		.loc 1 4397 0 is_stmt 1
 28060 011c 0F4B     		ldr	r3, .L1130+8
 28061 011e 0022     		movs	r2, #0
 28062 0120 1A70     		strb	r2, [r3]
4398:..\src/command_processing.c ****             }
4399:..\src/command_processing.c ****         
4400:..\src/command_processing.c ****             break;
 28063              		.loc 1 4400 0
 28064 0122 0DE0     		b	.L1128
 28065              	.L1107:
4401:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4402:..\src/command_processing.c ****           
4403:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 28066              		.loc 1 4403 0
 28067 0124 FB68     		ldr	r3, [r7, #12]
 28068 0126 002B     		cmp	r3, #0
 28069 0128 0CDA     		bge	.L1129
 28070              		.loc 1 4403 0 is_stmt 0 discriminator 1
 28071 012a BB68     		ldr	r3, [r7, #8]
 28072 012c 002B     		cmp	r3, #0
 28073 012e 09DA     		bge	.L1129
4404:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 28074              		.loc 1 4404 0 is_stmt 1
 28075 0130 0A4B     		ldr	r3, .L1130+8
 28076 0132 0022     		movs	r2, #0
 28077 0134 1A70     		strb	r2, [r3]
4405:..\src/command_processing.c ****             }
4406:..\src/command_processing.c ****             
4407:..\src/command_processing.c ****             break;
 28078              		.loc 1 4407 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 615


 28079 0136 05E0     		b	.L1129
 28080              	.L1126:
4358:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 28081              		.loc 1 4358 0
 28082 0138 00BF     		nop
 28083 013a 04E0     		b	.L1102
 28084              	.L1127:
4393:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 28085              		.loc 1 4393 0
 28086 013c 00BF     		nop
 28087 013e 02E0     		b	.L1102
 28088              	.L1128:
4400:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
 28089              		.loc 1 4400 0
 28090 0140 00BF     		nop
 28091 0142 00E0     		b	.L1102
 28092              	.L1129:
 28093              		.loc 1 4407 0
 28094 0144 00BF     		nop
 28095              	.L1102:
4408:..\src/command_processing.c ****     }
4409:..\src/command_processing.c ****     
4410:..\src/command_processing.c ****     return fsm_state;
 28096              		.loc 1 4410 0
 28097 0146 054B     		ldr	r3, .L1130+8
 28098 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4411:..\src/command_processing.c **** 
4412:..\src/command_processing.c **** }
 28099              		.loc 1 4412 0
 28100 014a 1846     		mov	r0, r3
 28101 014c 1437     		adds	r7, r7, #20
 28102              		.cfi_def_cfa_offset 4
 28103 014e BD46     		mov	sp, r7
 28104              		.cfi_def_cfa_register 13
 28105              		@ sp needed
 28106 0150 80BC     		pop	{r7}
 28107              		.cfi_restore 7
 28108              		.cfi_def_cfa_offset 0
 28109 0152 7047     		bx	lr
 28110              	.L1131:
 28111              		.align	2
 28112              	.L1130:
 28113 0154 00000000 		.word	g_adc_meas
 28114 0158 00000000 		.word	c_mem
 28115 015c 0C000000 		.word	fsm_state.11345
 28116 0160 10000000 		.word	cnt.11346
 28117              		.cfi_endproc
 28118              	.LFE121:
 28119              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 28120              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 28121              		.align	2
 28122              		.global	otbk_act_wrist_control
 28123              		.thumb
 28124              		.thumb_func
 28125              		.type	otbk_act_wrist_control, %function
 28126              	otbk_act_wrist_control:
 28127              	.LFB122:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 616


4413:..\src/command_processing.c **** 
4414:..\src/command_processing.c **** //==============================================================================
4415:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4416:..\src/command_processing.c **** //==============================================================================
4417:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4418:..\src/command_processing.c **** 
4419:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 28128              		.loc 1 4419 0
 28129              		.cfi_startproc
 28130              		@ args = 0, pretend = 0, frame = 8
 28131              		@ frame_needed = 1, uses_anonymous_args = 0
 28132              		@ link register save eliminated.
 28133 0000 80B4     		push	{r7}
 28134              		.cfi_def_cfa_offset 4
 28135              		.cfi_offset 7, -4
 28136 0002 83B0     		sub	sp, sp, #12
 28137              		.cfi_def_cfa_offset 16
 28138 0004 00AF     		add	r7, sp, #0
 28139              		.cfi_def_cfa_register 7
 28140 0006 7860     		str	r0, [r7, #4]
4420:..\src/command_processing.c ****     
4421:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4422:..\src/command_processing.c ****     
4423:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4424:..\src/command_processing.c ****         
4425:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4426:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4427:..\src/command_processing.c ****     switch (fsm_state){
4428:..\src/command_processing.c ****         case RELAX_STATE:
4429:..\src/command_processing.c ****             
4430:..\src/command_processing.c ****             // Wrist stop
4431:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4432:..\src/command_processing.c ****             
4433:..\src/command_processing.c ****             // Softhand stop
4434:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4435:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4436:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4437:..\src/command_processing.c ****             
4438:..\src/command_processing.c ****             break;
4439:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4440:..\src/command_processing.c ****                 
4441:..\src/command_processing.c ****             break;
4442:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4443:..\src/command_processing.c ****             
4444:..\src/command_processing.c ****             // Wrist movement
4445:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4446:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4447:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4448:..\src/command_processing.c ****                 }
4449:..\src/command_processing.c ****                 else {
4450:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4451:..\src/command_processing.c ****                 }
4452:..\src/command_processing.c ****             }
4453:..\src/command_processing.c ****             else {
4454:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4455:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4456:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 617


4457:..\src/command_processing.c ****                 else {
4458:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4459:..\src/command_processing.c ****                 }
4460:..\src/command_processing.c ****             }
4461:..\src/command_processing.c ****             
4462:..\src/command_processing.c ****             // Softhand stop
4463:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4464:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4465:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4466:..\src/command_processing.c ****             
4467:..\src/command_processing.c ****             break;
4468:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4469:..\src/command_processing.c ****             
4470:..\src/command_processing.c ****             // Wrist stop
4471:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4472:..\src/command_processing.c ****             
4473:..\src/command_processing.c ****             // SoftHand movement
4474:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4475:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4476:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4477:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4478:..\src/command_processing.c ****             
4479:..\src/command_processing.c ****             break;
4480:..\src/command_processing.c ****     }
4481:..\src/command_processing.c ****         
4482:..\src/command_processing.c ****     // Limit output voltage
4483:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4484:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4485:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4486:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4487:..\src/command_processing.c ****     
4488:..\src/command_processing.c **** #endif
4489:..\src/command_processing.c **** }
 28141              		.loc 1 4489 0
 28142 0008 00BF     		nop
 28143 000a 0C37     		adds	r7, r7, #12
 28144              		.cfi_def_cfa_offset 4
 28145 000c BD46     		mov	sp, r7
 28146              		.cfi_def_cfa_register 13
 28147              		@ sp needed
 28148 000e 80BC     		pop	{r7}
 28149              		.cfi_restore 7
 28150              		.cfi_def_cfa_offset 0
 28151 0010 7047     		bx	lr
 28152              		.cfi_endproc
 28153              	.LFE122:
 28154              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 28155 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 28156              		.align	2
 28157              		.global	drive_slave
 28158              		.thumb
 28159              		.thumb_func
 28160              		.type	drive_slave, %function
 28161              	drive_slave:
 28162              	.LFB123:
4490:..\src/command_processing.c **** 
4491:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 618


4492:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4493:..\src/command_processing.c **** //==============================================================================
4494:..\src/command_processing.c ****  
4495:..\src/command_processing.c ****  
4496:..\src/command_processing.c **** void drive_slave(uint8 slave_motor_idx, uint8 slave_ID) {
 28163              		.loc 1 4496 0
 28164              		.cfi_startproc
 28165              		@ args = 0, pretend = 0, frame = 24
 28166              		@ frame_needed = 1, uses_anonymous_args = 0
 28167 0000 90B5     		push	{r4, r7, lr}
 28168              		.cfi_def_cfa_offset 12
 28169              		.cfi_offset 4, -12
 28170              		.cfi_offset 7, -8
 28171              		.cfi_offset 14, -4
 28172 0002 87B0     		sub	sp, sp, #28
 28173              		.cfi_def_cfa_offset 40
 28174 0004 00AF     		add	r7, sp, #0
 28175              		.cfi_def_cfa_register 7
 28176 0006 0346     		mov	r3, r0
 28177 0008 0A46     		mov	r2, r1
 28178 000a FB71     		strb	r3, [r7, #7]
 28179 000c 1346     		mov	r3, r2
 28180 000e BB71     		strb	r3, [r7, #6]
4497:..\src/command_processing.c **** 
4498:..\src/command_processing.c ****     uint8 packet_data[6];
4499:..\src/command_processing.c ****     uint8 packet_length;
4500:..\src/command_processing.c ****     int16 aux_int16;
4501:..\src/command_processing.c **** 
4502:..\src/command_processing.c ****        
4503:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4504:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
 28181              		.loc 1 4504 0
 28182 0010 8223     		movs	r3, #130
 28183 0012 3B74     		strb	r3, [r7, #16]
4505:..\src/command_processing.c ****     
4506:..\src/command_processing.c ****  //aux_int16 = (int16) motor_idx;
4507:..\src/command_processing.c ****    aux_int16 = (int16) (g_ref[slave_motor_idx].pos >> g_mem.enc[g_mem.motor[slave_motor_idx].encode
 28184              		.loc 1 4507 0
 28185 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 28186 0016 264A     		ldr	r2, .L1134
 28187 0018 1B01     		lsls	r3, r3, #4
 28188 001a 1344     		add	r3, r3, r2
 28189 001c 1968     		ldr	r1, [r3]
 28190 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 28191 0020 2448     		ldr	r0, .L1134+4
 28192 0022 1346     		mov	r3, r2
 28193 0024 DB00     		lsls	r3, r3, #3
 28194 0026 9B1A     		subs	r3, r3, r2
 28195 0028 1B01     		lsls	r3, r3, #4
 28196 002a 0344     		add	r3, r3, r0
 28197 002c 03F58873 		add	r3, r3, #272
 28198 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 28199 0032 1C46     		mov	r4, r3
 28200 0034 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 28201 0036 1F48     		ldr	r0, .L1134+4
 28202 0038 2346     		mov	r3, r4
 28203 003a 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 619


 28204 003c 2344     		add	r3, r3, r4
 28205 003e 1B01     		lsls	r3, r3, #4
 28206 0040 0344     		add	r3, r3, r0
 28207 0042 1344     		add	r3, r3, r2
 28208 0044 03F29513 		addw	r3, r3, #405
 28209 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 28210 004a 41FA03F3 		asr	r3, r1, r3
 28211 004e 1BB2     		sxth	r3, r3
 28212 0050 FB81     		strh	r3, [r7, #14]	@ movhi
4508:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 28213              		.loc 1 4508 0
 28214 0052 07F10E03 		add	r3, r7, #14
 28215 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 28216 0058 BB74     		strb	r3, [r7, #18]
4509:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 28217              		.loc 1 4509 0
 28218 005a 07F10E03 		add	r3, r7, #14
 28219 005e 0133     		adds	r3, r3, #1
 28220 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 28221 0062 7B74     		strb	r3, [r7, #17]
4510:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
 28222              		.loc 1 4510 0
 28223 0064 07F11003 		add	r3, r7, #16
 28224 0068 0333     		adds	r3, r3, #3
 28225 006a 0022     		movs	r2, #0
 28226 006c 1A80     		strh	r2, [r3]	@ movhi
4511:..\src/command_processing.c ****   //  packet_data[3] = (char*)0;
4512:..\src/command_processing.c ****    // packet_data[4] = (char*)0;
4513:..\src/command_processing.c ****     packet_length = 6;
 28227              		.loc 1 4513 0
 28228 006e 0623     		movs	r3, #6
 28229 0070 FB75     		strb	r3, [r7, #23]
4514:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 28230              		.loc 1 4514 0
 28231 0072 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 28232 0074 5C1E     		subs	r4, r3, #1
 28233 0076 FB7D     		ldrb	r3, [r7, #23]
 28234 0078 013B     		subs	r3, r3, #1
 28235 007a DAB2     		uxtb	r2, r3
 28236 007c 07F11003 		add	r3, r7, #16
 28237 0080 1146     		mov	r1, r2
 28238 0082 1846     		mov	r0, r3
 28239 0084 FFF7FEFF 		bl	LCRChecksum
 28240 0088 0346     		mov	r3, r0
 28241 008a 1A46     		mov	r2, r3
 28242 008c 07F11803 		add	r3, r7, #24
 28243 0090 2344     		add	r3, r3, r4
 28244 0092 03F8082C 		strb	r2, [r3, #-8]
4515:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, slave_ID);
 28245              		.loc 1 4515 0
 28246 0096 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 28247 0098 99B2     		uxth	r1, r3
 28248 009a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 28249 009c 07F11003 		add	r3, r7, #16
 28250 00a0 1846     		mov	r0, r3
 28251 00a2 FFF7FEFF 		bl	commWriteID
4516:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 620


4517:..\src/command_processing.c **** 
4518:..\src/command_processing.c **** }
 28252              		.loc 1 4518 0
 28253 00a6 00BF     		nop
 28254 00a8 1C37     		adds	r7, r7, #28
 28255              		.cfi_def_cfa_offset 12
 28256 00aa BD46     		mov	sp, r7
 28257              		.cfi_def_cfa_register 13
 28258              		@ sp needed
 28259 00ac 90BD     		pop	{r4, r7, pc}
 28260              	.L1135:
 28261 00ae 00BF     		.align	2
 28262              	.L1134:
 28263 00b0 00000000 		.word	g_ref
 28264 00b4 00000000 		.word	g_mem
 28265              		.cfi_endproc
 28266              	.LFE123:
 28267              		.size	drive_slave, .-drive_slave
 28268              		.section	.text.stop_master_device,"ax",%progbits
 28269              		.align	2
 28270              		.global	stop_master_device
 28271              		.thumb
 28272              		.thumb_func
 28273              		.type	stop_master_device, %function
 28274              	stop_master_device:
 28275              	.LFB124:
4519:..\src/command_processing.c **** 
4520:..\src/command_processing.c **** //==============================================================================
4521:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4522:..\src/command_processing.c **** //==============================================================================
4523:..\src/command_processing.c ****  
4524:..\src/command_processing.c **** void stop_master_device() {
 28276              		.loc 1 4524 0
 28277              		.cfi_startproc
 28278              		@ args = 0, pretend = 0, frame = 0
 28279              		@ frame_needed = 1, uses_anonymous_args = 0
 28280 0000 80B5     		push	{r7, lr}
 28281              		.cfi_def_cfa_offset 8
 28282              		.cfi_offset 7, -8
 28283              		.cfi_offset 14, -4
 28284 0002 00AF     		add	r7, sp, #0
 28285              		.cfi_def_cfa_register 7
4525:..\src/command_processing.c ****     
4526:..\src/command_processing.c ****         // Stop pump and open valve
4527:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
 28286              		.loc 1 4527 0
 28287 0004 0A4B     		ldr	r3, .L1137
 28288 0006 0022     		movs	r2, #0
 28289 0008 9A60     		str	r2, [r3, #8]
4528:..\src/command_processing.c ****         VALVE_Write(OPEN);
 28290              		.loc 1 4528 0
 28291 000a 0020     		movs	r0, #0
 28292 000c FFF7FEFF 		bl	VALVE_Write
4529:..\src/command_processing.c ****         master_mode = 0; 
 28293              		.loc 1 4529 0
 28294 0010 084B     		ldr	r3, .L1137+4
 28295 0012 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 621


 28296 0014 1A70     		strb	r2, [r3]
4530:..\src/command_processing.c ****         g_mem.MS.master_mode_active = FALSE;
 28297              		.loc 1 4530 0
 28298 0016 084B     		ldr	r3, .L1137+8
 28299 0018 0022     		movs	r2, #0
 28300 001a 83F8C022 		strb	r2, [r3, #704]
4531:..\src/command_processing.c ****         LED_CTRL_Write(0);
 28301              		.loc 1 4531 0
 28302 001e 0020     		movs	r0, #0
 28303 0020 FFF7FEFF 		bl	LED_CTRL_Write
4532:..\src/command_processing.c ****         BLINK_CTRL_EN_Write(0);
 28304              		.loc 1 4532 0
 28305 0024 0020     		movs	r0, #0
 28306 0026 FFF7FEFF 		bl	BLINK_CTRL_EN_Write
4533:..\src/command_processing.c ****     
4534:..\src/command_processing.c **** }
 28307              		.loc 1 4534 0
 28308 002a 00BF     		nop
 28309 002c 80BD     		pop	{r7, pc}
 28310              	.L1138:
 28311 002e 00BF     		.align	2
 28312              	.L1137:
 28313 0030 00000000 		.word	g_refNew
 28314 0034 00000000 		.word	master_mode
 28315 0038 00000000 		.word	g_mem
 28316              		.cfi_endproc
 28317              	.LFE124:
 28318              		.size	stop_master_device, .-stop_master_device
 28319              		.section	.text.deactivate_slaves,"ax",%progbits
 28320              		.align	2
 28321              		.global	deactivate_slaves
 28322              		.thumb
 28323              		.thumb_func
 28324              		.type	deactivate_slaves, %function
 28325              	deactivate_slaves:
 28326              	.LFB125:
4535:..\src/command_processing.c **** 
4536:..\src/command_processing.c **** //==============================================================================
4537:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4538:..\src/command_processing.c **** //==============================================================================
4539:..\src/command_processing.c ****  
4540:..\src/command_processing.c **** void deactivate_slaves() {
 28327              		.loc 1 4540 0
 28328              		.cfi_startproc
 28329              		@ args = 0, pretend = 0, frame = 16
 28330              		@ frame_needed = 1, uses_anonymous_args = 0
 28331 0000 90B5     		push	{r4, r7, lr}
 28332              		.cfi_def_cfa_offset 12
 28333              		.cfi_offset 4, -12
 28334              		.cfi_offset 7, -8
 28335              		.cfi_offset 14, -4
 28336 0002 85B0     		sub	sp, sp, #20
 28337              		.cfi_def_cfa_offset 32
 28338 0004 00AF     		add	r7, sp, #0
 28339              		.cfi_def_cfa_register 7
4541:..\src/command_processing.c ****     
4542:..\src/command_processing.c **** #ifdef MASTER_FW
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 622


4543:..\src/command_processing.c ****     
4544:..\src/command_processing.c ****     uint8 packet_data[10];
4545:..\src/command_processing.c ****     uint8 packet_length;
4546:..\src/command_processing.c ****     
4547:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4548:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 28340              		.loc 1 4548 0
 28341 0006 204B     		ldr	r3, .L1142
 28342 0008 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 28343 000c 022B     		cmp	r3, #2
 28344 000e 17D0     		beq	.L1140
4549:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
 28345              		.loc 1 4549 0 discriminator 1
 28346 0010 1D4B     		ldr	r3, .L1142
 28347 0012 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4548:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
 28348              		.loc 1 4548 0 discriminator 1
 28349 0016 032B     		cmp	r3, #3
 28350 0018 12D0     		beq	.L1140
4550:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
 28351              		.loc 1 4550 0
 28352 001a 1B4B     		ldr	r3, .L1142
 28353 001c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4549:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
 28354              		.loc 1 4549 0
 28355 0020 042B     		cmp	r3, #4
 28356 0022 0DD0     		beq	.L1140
4551:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
 28357              		.loc 1 4551 0
 28358 0024 184B     		ldr	r3, .L1142
 28359 0026 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4550:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
 28360              		.loc 1 4550 0
 28361 002a 052B     		cmp	r3, #5
 28362 002c 08D0     		beq	.L1140
4552:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
 28363              		.loc 1 4552 0
 28364 002e 164B     		ldr	r3, .L1142
 28365 0030 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4551:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
 28366              		.loc 1 4551 0
 28367 0034 072B     		cmp	r3, #7
 28368 0036 03D0     		beq	.L1140
4553:..\src/command_processing.c ****         master_mode = 0;
 28369              		.loc 1 4553 0
 28370 0038 144B     		ldr	r3, .L1142+4
 28371 003a 0022     		movs	r2, #0
 28372 003c 1A70     		strb	r2, [r3]
 28373 003e 1FE0     		b	.L1139
 28374              	.L1140:
4554:..\src/command_processing.c ****         return;
4555:..\src/command_processing.c ****     }
4556:..\src/command_processing.c ****    
4557:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4558:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
 28375              		.loc 1 4558 0
 28376 0040 8023     		movs	r3, #128
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 623


 28377 0042 3B71     		strb	r3, [r7, #4]
4559:..\src/command_processing.c **** 
4560:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
 28378              		.loc 1 4560 0
 28379 0044 3B1D     		adds	r3, r7, #4
 28380 0046 0133     		adds	r3, r3, #1
 28381 0048 0022     		movs	r2, #0
 28382 004a 1A80     		strh	r2, [r3]	@ movhi
4561:..\src/command_processing.c ****     packet_length = 3;
 28383              		.loc 1 4561 0
 28384 004c 0323     		movs	r3, #3
 28385 004e FB73     		strb	r3, [r7, #15]
4562:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 28386              		.loc 1 4562 0
 28387 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 28388 0052 5C1E     		subs	r4, r3, #1
 28389 0054 FB7B     		ldrb	r3, [r7, #15]
 28390 0056 013B     		subs	r3, r3, #1
 28391 0058 DAB2     		uxtb	r2, r3
 28392 005a 3B1D     		adds	r3, r7, #4
 28393 005c 1146     		mov	r1, r2
 28394 005e 1846     		mov	r0, r3
 28395 0060 FFF7FEFF 		bl	LCRChecksum
 28396 0064 0346     		mov	r3, r0
 28397 0066 1A46     		mov	r2, r3
 28398 0068 07F11003 		add	r3, r7, #16
 28399 006c 2344     		add	r3, r3, r4
 28400 006e 03F80C2C 		strb	r2, [r3, #-12]
4563:..\src/command_processing.c ****     
4564:..\src/command_processing.c ****     commWrite(packet_data, packet_length);
 28401              		.loc 1 4564 0
 28402 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 28403 0074 9AB2     		uxth	r2, r3
 28404 0076 3B1D     		adds	r3, r7, #4
 28405 0078 1146     		mov	r1, r2
 28406 007a 1846     		mov	r0, r3
 28407 007c FFF7FEFF 		bl	commWrite
 28408              	.L1139:
4565:..\src/command_processing.c ****     
4566:..\src/command_processing.c **** #endif    
4567:..\src/command_processing.c **** }
 28409              		.loc 1 4567 0
 28410 0080 1437     		adds	r7, r7, #20
 28411              		.cfi_def_cfa_offset 12
 28412 0082 BD46     		mov	sp, r7
 28413              		.cfi_def_cfa_register 13
 28414              		@ sp needed
 28415 0084 90BD     		pop	{r4, r7, pc}
 28416              	.L1143:
 28417 0086 00BF     		.align	2
 28418              	.L1142:
 28419 0088 00000000 		.word	c_mem
 28420 008c 00000000 		.word	master_mode
 28421              		.cfi_endproc
 28422              	.LFE125:
 28423              		.size	deactivate_slaves, .-deactivate_slaves
 28424              		.bss
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 624


 28425              		.align	2
 28426              	h_time.10994:
 28427 0000 00000000 		.space	4
 28428              		.align	1
 28429              	i.11035:
 28430 0004 0000     		.space	2
 28431 0006 0000     		.align	2
 28432              	last_aux_int16.11165:
 28433 0008 00000000 		.space	4
 28434              	fsm_state.11345:
 28435 000c 00       		.space	1
 28436 000d 000000   		.align	2
 28437              	cnt.11346:
 28438 0010 00000000 		.space	4
 28439              		.text
 28440              	.Letext0:
 28441              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 28442              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 28443              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 28444              		.file 6 "..\\src\\commands.h"
 28445              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 28446              		.file 8 "..\\src\\globals.h"
 28447              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 28448              		.section	.debug_info,"",%progbits
 28449              	.Ldebug_info0:
 28450 0000 E5280000 		.4byte	0x28e5
 28451 0004 0400     		.2byte	0x4
 28452 0006 00000000 		.4byte	.Ldebug_abbrev0
 28453 000a 04       		.byte	0x4
 28454 000b 01       		.uleb128 0x1
 28455 000c A90A0000 		.4byte	.LASF422
 28456 0010 0C       		.byte	0xc
 28457 0011 7E160000 		.4byte	.LASF423
 28458 0015 17170000 		.4byte	.LASF424
 28459 0019 00000000 		.4byte	.Ldebug_ranges0+0
 28460 001d 00000000 		.4byte	0
 28461 0021 00000000 		.4byte	.Ldebug_line0
 28462 0025 02       		.uleb128 0x2
 28463 0026 01       		.byte	0x1
 28464 0027 06       		.byte	0x6
 28465 0028 B5040000 		.4byte	.LASF0
 28466 002c 02       		.uleb128 0x2
 28467 002d 01       		.byte	0x1
 28468 002e 08       		.byte	0x8
 28469 002f 42050000 		.4byte	.LASF1
 28470 0033 02       		.uleb128 0x2
 28471 0034 02       		.byte	0x2
 28472 0035 05       		.byte	0x5
 28473 0036 EB120000 		.4byte	.LASF2
 28474 003a 02       		.uleb128 0x2
 28475 003b 02       		.byte	0x2
 28476 003c 07       		.byte	0x7
 28477 003d 5E150000 		.4byte	.LASF3
 28478 0041 03       		.uleb128 0x3
 28479 0042 2A160000 		.4byte	.LASF5
 28480 0046 03       		.byte	0x3
 28481 0047 3F       		.byte	0x3f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 625


 28482 0048 4C000000 		.4byte	0x4c
 28483 004c 02       		.uleb128 0x2
 28484 004d 04       		.byte	0x4
 28485 004e 05       		.byte	0x5
 28486 004f 6F030000 		.4byte	.LASF4
 28487 0053 03       		.uleb128 0x3
 28488 0054 740B0000 		.4byte	.LASF6
 28489 0058 03       		.byte	0x3
 28490 0059 41       		.byte	0x41
 28491 005a 5E000000 		.4byte	0x5e
 28492 005e 02       		.uleb128 0x2
 28493 005f 04       		.byte	0x4
 28494 0060 07       		.byte	0x7
 28495 0061 2A090000 		.4byte	.LASF7
 28496 0065 02       		.uleb128 0x2
 28497 0066 08       		.byte	0x8
 28498 0067 05       		.byte	0x5
 28499 0068 7F0B0000 		.4byte	.LASF8
 28500 006c 02       		.uleb128 0x2
 28501 006d 08       		.byte	0x8
 28502 006e 07       		.byte	0x7
 28503 006f DC0F0000 		.4byte	.LASF9
 28504 0073 04       		.uleb128 0x4
 28505 0074 04       		.byte	0x4
 28506 0075 05       		.byte	0x5
 28507 0076 696E7400 		.ascii	"int\000"
 28508 007a 02       		.uleb128 0x2
 28509 007b 04       		.byte	0x4
 28510 007c 07       		.byte	0x7
 28511 007d DE0C0000 		.4byte	.LASF10
 28512 0081 03       		.uleb128 0x3
 28513 0082 E0000000 		.4byte	.LASF11
 28514 0086 04       		.byte	0x4
 28515 0087 2C       		.byte	0x2c
 28516 0088 41000000 		.4byte	0x41
 28517 008c 03       		.uleb128 0x3
 28518 008d CC140000 		.4byte	.LASF12
 28519 0091 04       		.byte	0x4
 28520 0092 30       		.byte	0x30
 28521 0093 53000000 		.4byte	0x53
 28522 0097 05       		.uleb128 0x5
 28523 0098 CD120000 		.4byte	.LASF13
 28524 009c 05       		.byte	0x5
 28525 009d E401     		.2byte	0x1e4
 28526 009f 2C000000 		.4byte	0x2c
 28527 00a3 05       		.uleb128 0x5
 28528 00a4 E1160000 		.4byte	.LASF14
 28529 00a8 05       		.byte	0x5
 28530 00a9 E501     		.2byte	0x1e5
 28531 00ab 3A000000 		.4byte	0x3a
 28532 00af 05       		.uleb128 0x5
 28533 00b0 16010000 		.4byte	.LASF15
 28534 00b4 05       		.byte	0x5
 28535 00b5 E601     		.2byte	0x1e6
 28536 00b7 5E000000 		.4byte	0x5e
 28537 00bb 05       		.uleb128 0x5
 28538 00bc 24020000 		.4byte	.LASF16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 626


 28539 00c0 05       		.byte	0x5
 28540 00c1 E701     		.2byte	0x1e7
 28541 00c3 25000000 		.4byte	0x25
 28542 00c7 05       		.uleb128 0x5
 28543 00c8 2C140000 		.4byte	.LASF17
 28544 00cc 05       		.byte	0x5
 28545 00cd E801     		.2byte	0x1e8
 28546 00cf 33000000 		.4byte	0x33
 28547 00d3 05       		.uleb128 0x5
 28548 00d4 B8150000 		.4byte	.LASF18
 28549 00d8 05       		.byte	0x5
 28550 00d9 E901     		.2byte	0x1e9
 28551 00db 4C000000 		.4byte	0x4c
 28552 00df 05       		.uleb128 0x5
 28553 00e0 EC030000 		.4byte	.LASF19
 28554 00e4 05       		.byte	0x5
 28555 00e5 EA01     		.2byte	0x1ea
 28556 00e7 EB000000 		.4byte	0xeb
 28557 00eb 02       		.uleb128 0x2
 28558 00ec 04       		.byte	0x4
 28559 00ed 04       		.byte	0x4
 28560 00ee 7A0C0000 		.4byte	.LASF20
 28561 00f2 02       		.uleb128 0x2
 28562 00f3 08       		.byte	0x8
 28563 00f4 04       		.byte	0x4
 28564 00f5 EC0B0000 		.4byte	.LASF21
 28565 00f9 02       		.uleb128 0x2
 28566 00fa 01       		.byte	0x1
 28567 00fb 08       		.byte	0x8
 28568 00fc 1E060000 		.4byte	.LASF22
 28569 0100 05       		.uleb128 0x5
 28570 0101 BC100000 		.4byte	.LASF23
 28571 0105 05       		.byte	0x5
 28572 0106 8E02     		.2byte	0x28e
 28573 0108 0C010000 		.4byte	0x10c
 28574 010c 06       		.uleb128 0x6
 28575 010d 97000000 		.4byte	0x97
 28576 0111 02       		.uleb128 0x2
 28577 0112 08       		.byte	0x8
 28578 0113 04       		.byte	0x4
 28579 0114 C80E0000 		.4byte	.LASF24
 28580 0118 02       		.uleb128 0x2
 28581 0119 04       		.byte	0x4
 28582 011a 07       		.byte	0x7
 28583 011b 47000000 		.4byte	.LASF25
 28584 011f 07       		.uleb128 0x7
 28585 0120 04       		.byte	0x4
 28586 0121 F9000000 		.4byte	0xf9
 28587 0125 07       		.uleb128 0x7
 28588 0126 04       		.byte	0x4
 28589 0127 2B010000 		.4byte	0x12b
 28590 012b 08       		.uleb128 0x8
 28591 012c F9000000 		.4byte	0xf9
 28592 0130 09       		.uleb128 0x9
 28593 0131 F9000000 		.4byte	0xf9
 28594 0135 40010000 		.4byte	0x140
 28595 0139 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 627


 28596 013a 18010000 		.4byte	0x118
 28597 013e 19       		.byte	0x19
 28598 013f 00       		.byte	0
 28599 0140 09       		.uleb128 0x9
 28600 0141 F9000000 		.4byte	0xf9
 28601 0145 50010000 		.4byte	0x150
 28602 0149 0A       		.uleb128 0xa
 28603 014a 18010000 		.4byte	0x118
 28604 014e 07       		.byte	0x7
 28605 014f 00       		.byte	0
 28606 0150 0B       		.uleb128 0xb
 28607 0151 300D0000 		.4byte	.LASF60
 28608 0155 01       		.byte	0x1
 28609 0156 2C000000 		.4byte	0x2c
 28610 015a 06       		.byte	0x6
 28611 015b 42       		.byte	0x42
 28612 015c 2D020000 		.4byte	0x22d
 28613 0160 0C       		.uleb128 0xc
 28614 0161 FB160000 		.4byte	.LASF26
 28615 0165 00       		.byte	0
 28616 0166 0C       		.uleb128 0xc
 28617 0167 66130000 		.4byte	.LASF27
 28618 016b 01       		.byte	0x1
 28619 016c 0C       		.uleb128 0xc
 28620 016d 06090000 		.4byte	.LASF28
 28621 0171 03       		.byte	0x3
 28622 0172 0C       		.uleb128 0xc
 28623 0173 B2050000 		.4byte	.LASF29
 28624 0177 04       		.byte	0x4
 28625 0178 0C       		.uleb128 0xc
 28626 0179 F5100000 		.4byte	.LASF30
 28627 017d 05       		.byte	0x5
 28628 017e 0C       		.uleb128 0xc
 28629 017f 340A0000 		.4byte	.LASF31
 28630 0183 06       		.byte	0x6
 28631 0184 0C       		.uleb128 0xc
 28632 0185 3C090000 		.4byte	.LASF32
 28633 0189 09       		.byte	0x9
 28634 018a 0C       		.uleb128 0xc
 28635 018b 5D000000 		.4byte	.LASF33
 28636 018f 0A       		.byte	0xa
 28637 0190 0C       		.uleb128 0xc
 28638 0191 0E140000 		.4byte	.LASF34
 28639 0195 0C       		.byte	0xc
 28640 0196 0C       		.uleb128 0xc
 28641 0197 280F0000 		.4byte	.LASF35
 28642 019b 0D       		.byte	0xd
 28643 019c 0C       		.uleb128 0xc
 28644 019d A3000000 		.4byte	.LASF36
 28645 01a1 80       		.byte	0x80
 28646 01a2 0C       		.uleb128 0xc
 28647 01a3 0D060000 		.4byte	.LASF37
 28648 01a7 81       		.byte	0x81
 28649 01a8 0C       		.uleb128 0xc
 28650 01a9 80070000 		.4byte	.LASF38
 28651 01ad 82       		.byte	0x82
 28652 01ae 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 628


 28653 01af 30130000 		.4byte	.LASF39
 28654 01b3 83       		.byte	0x83
 28655 01b4 0C       		.uleb128 0xc
 28656 01b5 7B120000 		.4byte	.LASF40
 28657 01b9 84       		.byte	0x84
 28658 01ba 0C       		.uleb128 0xc
 28659 01bb 04040000 		.4byte	.LASF41
 28660 01bf 85       		.byte	0x85
 28661 01c0 0C       		.uleb128 0xc
 28662 01c1 930A0000 		.4byte	.LASF42
 28663 01c5 86       		.byte	0x86
 28664 01c6 0C       		.uleb128 0xc
 28665 01c7 140A0000 		.4byte	.LASF43
 28666 01cb 88       		.byte	0x88
 28667 01cc 0C       		.uleb128 0xc
 28668 01cd EF130000 		.4byte	.LASF44
 28669 01d1 89       		.byte	0x89
 28670 01d2 0C       		.uleb128 0xc
 28671 01d3 3A100000 		.4byte	.LASF45
 28672 01d7 8B       		.byte	0x8b
 28673 01d8 0C       		.uleb128 0xc
 28674 01d9 620E0000 		.4byte	.LASF46
 28675 01dd 8C       		.byte	0x8c
 28676 01de 0C       		.uleb128 0xc
 28677 01df 4F0B0000 		.4byte	.LASF47
 28678 01e3 8E       		.byte	0x8e
 28679 01e4 0C       		.uleb128 0xc
 28680 01e5 50050000 		.4byte	.LASF48
 28681 01e9 FB       		.byte	0xfb
 28682 01ea 0C       		.uleb128 0xc
 28683 01eb 82050000 		.4byte	.LASF49
 28684 01ef FA       		.byte	0xfa
 28685 01f0 0C       		.uleb128 0xc
 28686 01f1 72100000 		.4byte	.LASF50
 28687 01f5 90       		.byte	0x90
 28688 01f6 0C       		.uleb128 0xc
 28689 01f7 C6020000 		.4byte	.LASF51
 28690 01fb 92       		.byte	0x92
 28691 01fc 0C       		.uleb128 0xc
 28692 01fd 2D150000 		.4byte	.LASF52
 28693 0201 A1       		.byte	0xa1
 28694 0202 0C       		.uleb128 0xc
 28695 0203 34120000 		.4byte	.LASF53
 28696 0207 A2       		.byte	0xa2
 28697 0208 0C       		.uleb128 0xc
 28698 0209 960D0000 		.4byte	.LASF54
 28699 020d A3       		.byte	0xa3
 28700 020e 0C       		.uleb128 0xc
 28701 020f 50120000 		.4byte	.LASF55
 28702 0213 A4       		.byte	0xa4
 28703 0214 0C       		.uleb128 0xc
 28704 0215 55130000 		.4byte	.LASF56
 28705 0219 A5       		.byte	0xa5
 28706 021a 0C       		.uleb128 0xc
 28707 021b E8110000 		.4byte	.LASF57
 28708 021f A6       		.byte	0xa6
 28709 0220 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 629


 28710 0221 F30B0000 		.4byte	.LASF58
 28711 0225 A7       		.byte	0xa7
 28712 0226 0C       		.uleb128 0xc
 28713 0227 890C0000 		.4byte	.LASF59
 28714 022b A8       		.byte	0xa8
 28715 022c 00       		.byte	0
 28716 022d 0B       		.uleb128 0xb
 28717 022e A8160000 		.4byte	.LASF61
 28718 0232 01       		.byte	0x1
 28719 0233 2C000000 		.4byte	0x2c
 28720 0237 06       		.byte	0x6
 28721 0238 94       		.byte	0x94
 28722 0239 6E020000 		.4byte	0x26e
 28723 023d 0C       		.uleb128 0xc
 28724 023e 0E080000 		.4byte	.LASF62
 28725 0242 00       		.byte	0
 28726 0243 0C       		.uleb128 0xc
 28727 0244 760D0000 		.4byte	.LASF63
 28728 0248 01       		.byte	0x1
 28729 0249 0C       		.uleb128 0xc
 28730 024a D7020000 		.4byte	.LASF64
 28731 024e 02       		.byte	0x2
 28732 024f 0C       		.uleb128 0xc
 28733 0250 00020000 		.4byte	.LASF65
 28734 0254 03       		.byte	0x3
 28735 0255 0C       		.uleb128 0xc
 28736 0256 A4010000 		.4byte	.LASF66
 28737 025a 04       		.byte	0x4
 28738 025b 0C       		.uleb128 0xc
 28739 025c 8B000000 		.4byte	.LASF67
 28740 0260 05       		.byte	0x5
 28741 0261 0C       		.uleb128 0xc
 28742 0262 64090000 		.4byte	.LASF68
 28743 0266 06       		.byte	0x6
 28744 0267 0C       		.uleb128 0xc
 28745 0268 15120000 		.4byte	.LASF69
 28746 026c 07       		.byte	0x7
 28747 026d 00       		.byte	0
 28748 026e 0B       		.uleb128 0xb
 28749 026f 8D0B0000 		.4byte	.LASF70
 28750 0273 01       		.byte	0x1
 28751 0274 2C000000 		.4byte	0x2c
 28752 0278 06       		.byte	0x6
 28753 0279 A8       		.byte	0xa8
 28754 027a 97020000 		.4byte	0x297
 28755 027e 0C       		.uleb128 0xc
 28756 027f 0F160000 		.4byte	.LASF71
 28757 0283 00       		.byte	0
 28758 0284 0C       		.uleb128 0xc
 28759 0285 080A0000 		.4byte	.LASF72
 28760 0289 01       		.byte	0x1
 28761 028a 0C       		.uleb128 0xc
 28762 028b B80E0000 		.4byte	.LASF73
 28763 028f 02       		.byte	0x2
 28764 0290 0C       		.uleb128 0xc
 28765 0291 F1080000 		.4byte	.LASF74
 28766 0295 03       		.byte	0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 630


 28767 0296 00       		.byte	0
 28768 0297 0B       		.uleb128 0xb
 28769 0298 0A050000 		.4byte	.LASF75
 28770 029c 01       		.byte	0x1
 28771 029d 2C000000 		.4byte	0x2c
 28772 02a1 06       		.byte	0x6
 28773 02a2 B2       		.byte	0xb2
 28774 02a3 B4020000 		.4byte	0x2b4
 28775 02a7 0C       		.uleb128 0xc
 28776 02a8 0B120000 		.4byte	.LASF76
 28777 02ac 00       		.byte	0
 28778 02ad 0C       		.uleb128 0xc
 28779 02ae CE0B0000 		.4byte	.LASF77
 28780 02b2 01       		.byte	0x1
 28781 02b3 00       		.byte	0
 28782 02b4 0B       		.uleb128 0xb
 28783 02b5 810F0000 		.4byte	.LASF78
 28784 02b9 01       		.byte	0x1
 28785 02ba 2C000000 		.4byte	0x2c
 28786 02be 06       		.byte	0x6
 28787 02bf B7       		.byte	0xb7
 28788 02c0 D1020000 		.4byte	0x2d1
 28789 02c4 0C       		.uleb128 0xc
 28790 02c5 F3070000 		.4byte	.LASF79
 28791 02c9 00       		.byte	0
 28792 02ca 0C       		.uleb128 0xc
 28793 02cb C5090000 		.4byte	.LASF80
 28794 02cf 01       		.byte	0x1
 28795 02d0 00       		.byte	0
 28796 02d1 0B       		.uleb128 0xb
 28797 02d2 21140000 		.4byte	.LASF81
 28798 02d6 01       		.byte	0x1
 28799 02d7 2C000000 		.4byte	0x2c
 28800 02db 06       		.byte	0x6
 28801 02dc BF       		.byte	0xbf
 28802 02dd 1E030000 		.4byte	0x31e
 28803 02e1 0C       		.uleb128 0xc
 28804 02e2 CC090000 		.4byte	.LASF82
 28805 02e6 00       		.byte	0
 28806 02e7 0C       		.uleb128 0xc
 28807 02e8 B6160000 		.4byte	.LASF83
 28808 02ec 01       		.byte	0x1
 28809 02ed 0C       		.uleb128 0xc
 28810 02ee B20B0000 		.4byte	.LASF84
 28811 02f2 02       		.byte	0x2
 28812 02f3 0C       		.uleb128 0xc
 28813 02f4 3E0E0000 		.4byte	.LASF85
 28814 02f8 03       		.byte	0x3
 28815 02f9 0C       		.uleb128 0xc
 28816 02fa 3B0D0000 		.4byte	.LASF86
 28817 02fe 04       		.byte	0x4
 28818 02ff 0C       		.uleb128 0xc
 28819 0300 F30F0000 		.4byte	.LASF87
 28820 0304 05       		.byte	0x5
 28821 0305 0C       		.uleb128 0xc
 28822 0306 D40E0000 		.4byte	.LASF88
 28823 030a 06       		.byte	0x6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 631


 28824 030b 0C       		.uleb128 0xc
 28825 030c DF0D0000 		.4byte	.LASF89
 28826 0310 07       		.byte	0x7
 28827 0311 0C       		.uleb128 0xc
 28828 0312 C1070000 		.4byte	.LASF90
 28829 0316 08       		.byte	0x8
 28830 0317 0C       		.uleb128 0xc
 28831 0318 E5080000 		.4byte	.LASF91
 28832 031c 09       		.byte	0x9
 28833 031d 00       		.byte	0
 28834 031e 03       		.uleb128 0x3
 28835 031f F0150000 		.4byte	.LASF92
 28836 0323 07       		.byte	0x7
 28837 0324 7E       		.byte	0x7e
 28838 0325 29030000 		.4byte	0x329
 28839 0329 0D       		.uleb128 0xd
 28840 032a F0150000 		.4byte	.LASF92
 28841 032e 07       		.uleb128 0x7
 28842 032f 04       		.byte	0x4
 28843 0330 1E030000 		.4byte	0x31e
 28844 0334 0E       		.uleb128 0xe
 28845 0335 370B0000 		.4byte	.LASF95
 28846 0339 10       		.byte	0x10
 28847 033a 08       		.byte	0x8
 28848 033b F5       		.byte	0xf5
 28849 033c 71030000 		.4byte	0x371
 28850 0340 0F       		.uleb128 0xf
 28851 0341 706F7300 		.ascii	"pos\000"
 28852 0345 08       		.byte	0x8
 28853 0346 F6       		.byte	0xf6
 28854 0347 D3000000 		.4byte	0xd3
 28855 034b 00       		.byte	0
 28856 034c 10       		.uleb128 0x10
 28857 034d F8090000 		.4byte	.LASF93
 28858 0351 08       		.byte	0x8
 28859 0352 F7       		.byte	0xf7
 28860 0353 D3000000 		.4byte	0xd3
 28861 0357 04       		.byte	0x4
 28862 0358 0F       		.uleb128 0xf
 28863 0359 70776D00 		.ascii	"pwm\000"
 28864 035d 08       		.byte	0x8
 28865 035e F8       		.byte	0xf8
 28866 035f D3000000 		.4byte	0xd3
 28867 0363 08       		.byte	0x8
 28868 0364 10       		.uleb128 0x10
 28869 0365 34100000 		.4byte	.LASF94
 28870 0369 08       		.byte	0x8
 28871 036a F9       		.byte	0xf9
 28872 036b 97000000 		.4byte	0x97
 28873 036f 0C       		.byte	0xc
 28874 0370 00       		.byte	0
 28875 0371 11       		.uleb128 0x11
 28876 0372 E0110000 		.4byte	.LASF96
 28877 0376 34       		.byte	0x34
 28878 0377 08       		.byte	0x8
 28879 0378 0001     		.2byte	0x100
 28880 037a DA030000 		.4byte	0x3da
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 632


 28881 037e 12       		.uleb128 0x12
 28882 037f 706F7300 		.ascii	"pos\000"
 28883 0383 08       		.byte	0x8
 28884 0384 0101     		.2byte	0x101
 28885 0386 DA030000 		.4byte	0x3da
 28886 038a 00       		.byte	0
 28887 038b 13       		.uleb128 0x13
 28888 038c F8090000 		.4byte	.LASF93
 28889 0390 08       		.byte	0x8
 28890 0391 0201     		.2byte	0x102
 28891 0393 D3000000 		.4byte	0xd3
 28892 0397 0C       		.byte	0xc
 28893 0398 13       		.uleb128 0x13
 28894 0399 6E140000 		.4byte	.LASF97
 28895 039d 08       		.byte	0x8
 28896 039e 0301     		.2byte	0x103
 28897 03a0 D3000000 		.4byte	0xd3
 28898 03a4 10       		.byte	0x10
 28899 03a5 13       		.uleb128 0x13
 28900 03a6 5A090000 		.4byte	.LASF98
 28901 03aa 08       		.byte	0x8
 28902 03ab 0401     		.2byte	0x104
 28903 03ad D3000000 		.4byte	0xd3
 28904 03b1 14       		.byte	0x14
 28905 03b2 12       		.uleb128 0x12
 28906 03b3 726F7400 		.ascii	"rot\000"
 28907 03b7 08       		.byte	0x8
 28908 03b8 0501     		.2byte	0x105
 28909 03ba EA030000 		.4byte	0x3ea
 28910 03be 18       		.byte	0x18
 28911 03bf 12       		.uleb128 0x12
 28912 03c0 76656C00 		.ascii	"vel\000"
 28913 03c4 08       		.byte	0x8
 28914 03c5 0601     		.2byte	0x106
 28915 03c7 DA030000 		.4byte	0x3da
 28916 03cb 1C       		.byte	0x1c
 28917 03cc 12       		.uleb128 0x12
 28918 03cd 61636300 		.ascii	"acc\000"
 28919 03d1 08       		.byte	0x8
 28920 03d2 0701     		.2byte	0x107
 28921 03d4 DA030000 		.4byte	0x3da
 28922 03d8 28       		.byte	0x28
 28923 03d9 00       		.byte	0
 28924 03da 09       		.uleb128 0x9
 28925 03db D3000000 		.4byte	0xd3
 28926 03df EA030000 		.4byte	0x3ea
 28927 03e3 0A       		.uleb128 0xa
 28928 03e4 18010000 		.4byte	0x118
 28929 03e8 02       		.byte	0x2
 28930 03e9 00       		.byte	0
 28931 03ea 09       		.uleb128 0x9
 28932 03eb BB000000 		.4byte	0xbb
 28933 03ef FA030000 		.4byte	0x3fa
 28934 03f3 0A       		.uleb128 0xa
 28935 03f4 18010000 		.4byte	0x118
 28936 03f8 02       		.byte	0x2
 28937 03f9 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 633


 28938 03fa 11       		.uleb128 0x11
 28939 03fb BA0C0000 		.4byte	.LASF99
 28940 03ff 28       		.byte	0x28
 28941 0400 08       		.byte	0x8
 28942 0401 0A01     		.2byte	0x10a
 28943 0403 2F040000 		.4byte	0x42f
 28944 0407 12       		.uleb128 0x12
 28945 0408 656D6700 		.ascii	"emg\000"
 28946 040c 08       		.byte	0x8
 28947 040d 0B01     		.2byte	0x10b
 28948 040f 2F040000 		.4byte	0x42f
 28949 0413 00       		.byte	0
 28950 0414 13       		.uleb128 0x13
 28951 0415 360E0000 		.4byte	.LASF100
 28952 0419 08       		.byte	0x8
 28953 041a 0C01     		.2byte	0x10c
 28954 041c 3F040000 		.4byte	0x43f
 28955 0420 08       		.byte	0x8
 28956 0421 13       		.uleb128 0x13
 28957 0422 11130000 		.4byte	.LASF101
 28958 0426 08       		.byte	0x8
 28959 0427 0D01     		.2byte	0x10d
 28960 0429 2F040000 		.4byte	0x42f
 28961 042d 20       		.byte	0x20
 28962 042e 00       		.byte	0
 28963 042f 09       		.uleb128 0x9
 28964 0430 D3000000 		.4byte	0xd3
 28965 0434 3F040000 		.4byte	0x43f
 28966 0438 0A       		.uleb128 0xa
 28967 0439 18010000 		.4byte	0x118
 28968 043d 01       		.byte	0x1
 28969 043e 00       		.byte	0
 28970 043f 09       		.uleb128 0x9
 28971 0440 D3000000 		.4byte	0xd3
 28972 0444 4F040000 		.4byte	0x44f
 28973 0448 0A       		.uleb128 0xa
 28974 0449 18010000 		.4byte	0x118
 28975 044d 05       		.byte	0x5
 28976 044e 00       		.byte	0
 28977 044f 11       		.uleb128 0x11
 28978 0450 B0060000 		.4byte	.LASF102
 28979 0454 04       		.byte	0x4
 28980 0455 08       		.byte	0x8
 28981 0456 1001     		.2byte	0x110
 28982 0458 6A040000 		.4byte	0x46a
 28983 045c 13       		.uleb128 0x13
 28984 045d 04060000 		.4byte	.LASF103
 28985 0461 08       		.byte	0x8
 28986 0462 1101     		.2byte	0x111
 28987 0464 EB000000 		.4byte	0xeb
 28988 0468 00       		.byte	0
 28989 0469 00       		.byte	0
 28990 046a 11       		.uleb128 0x11
 28991 046b ED000000 		.4byte	.LASF104
 28992 046f 86       		.byte	0x86
 28993 0470 08       		.byte	0x8
 28994 0471 1801     		.2byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 634


 28995 0473 AC040000 		.4byte	0x4ac
 28996 0477 13       		.uleb128 0x13
 28997 0478 8F070000 		.4byte	.LASF105
 28998 047c 08       		.byte	0x8
 28999 047d 1901     		.2byte	0x119
 29000 047f AC040000 		.4byte	0x4ac
 29001 0483 00       		.byte	0
 29002 0484 13       		.uleb128 0x13
 29003 0485 09100000 		.4byte	.LASF106
 29004 0489 08       		.byte	0x8
 29005 048a 1A01     		.2byte	0x11a
 29006 048c C7000000 		.4byte	0xc7
 29007 0490 80       		.byte	0x80
 29008 0491 12       		.uleb128 0x12
 29009 0492 696E6400 		.ascii	"ind\000"
 29010 0496 08       		.byte	0x8
 29011 0497 1B01     		.2byte	0x11b
 29012 0499 C7000000 		.4byte	0xc7
 29013 049d 82       		.byte	0x82
 29014 049e 13       		.uleb128 0x13
 29015 049f A8020000 		.4byte	.LASF107
 29016 04a3 08       		.byte	0x8
 29017 04a4 1C01     		.2byte	0x11c
 29018 04a6 97000000 		.4byte	0x97
 29019 04aa 84       		.byte	0x84
 29020 04ab 00       		.byte	0
 29021 04ac 09       		.uleb128 0x9
 29022 04ad 97000000 		.4byte	0x97
 29023 04b1 BC040000 		.4byte	0x4bc
 29024 04b5 0A       		.uleb128 0xa
 29025 04b6 18010000 		.4byte	0x118
 29026 04ba 7F       		.byte	0x7f
 29027 04bb 00       		.byte	0
 29028 04bc 11       		.uleb128 0x11
 29029 04bd DA030000 		.4byte	.LASF108
 29030 04c1 70       		.byte	0x70
 29031 04c2 08       		.byte	0x8
 29032 04c3 2501     		.2byte	0x125
 29033 04c5 59050000 		.4byte	0x559
 29034 04c9 13       		.uleb128 0x13
 29035 04ca 17000000 		.4byte	.LASF109
 29036 04ce 08       		.byte	0x8
 29037 04cf 2601     		.2byte	0x126
 29038 04d1 59050000 		.4byte	0x559
 29039 04d5 00       		.byte	0
 29040 04d6 13       		.uleb128 0x13
 29041 04d7 61020000 		.4byte	.LASF110
 29042 04db 08       		.byte	0x8
 29043 04dc 2701     		.2byte	0x127
 29044 04de 69050000 		.4byte	0x569
 29045 04e2 08       		.byte	0x8
 29046 04e3 13       		.uleb128 0x13
 29047 04e4 AB0E0000 		.4byte	.LASF111
 29048 04e8 08       		.byte	0x8
 29049 04e9 2801     		.2byte	0x128
 29050 04eb 79050000 		.4byte	0x579
 29051 04ef 30       		.byte	0x30
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 635


 29052 04f0 13       		.uleb128 0x13
 29053 04f1 C4010000 		.4byte	.LASF112
 29054 04f5 08       		.byte	0x8
 29055 04f6 2901     		.2byte	0x129
 29056 04f8 AF000000 		.4byte	0xaf
 29057 04fc 40       		.byte	0x40
 29058 04fd 13       		.uleb128 0x13
 29059 04fe 43160000 		.4byte	.LASF113
 29060 0502 08       		.byte	0x8
 29061 0503 2A01     		.2byte	0x12a
 29062 0505 AF000000 		.4byte	0xaf
 29063 0509 44       		.byte	0x44
 29064 050a 13       		.uleb128 0x13
 29065 050b 08010000 		.4byte	.LASF114
 29066 050f 08       		.byte	0x8
 29067 0510 2B01     		.2byte	0x12b
 29068 0512 AF000000 		.4byte	0xaf
 29069 0516 48       		.byte	0x48
 29070 0517 13       		.uleb128 0x13
 29071 0518 78090000 		.4byte	.LASF115
 29072 051c 08       		.byte	0x8
 29073 051d 2C01     		.2byte	0x12c
 29074 051f AF000000 		.4byte	0xaf
 29075 0523 4C       		.byte	0x4c
 29076 0524 13       		.uleb128 0x13
 29077 0525 50000000 		.4byte	.LASF116
 29078 0529 08       		.byte	0x8
 29079 052a 2D01     		.2byte	0x12d
 29080 052c AF000000 		.4byte	0xaf
 29081 0530 50       		.byte	0x50
 29082 0531 13       		.uleb128 0x13
 29083 0532 0E030000 		.4byte	.LASF117
 29084 0536 08       		.byte	0x8
 29085 0537 2E01     		.2byte	0x12e
 29086 0539 59050000 		.4byte	0x559
 29087 053d 54       		.byte	0x54
 29088 053e 13       		.uleb128 0x13
 29089 053f 070F0000 		.4byte	.LASF118
 29090 0543 08       		.byte	0x8
 29091 0544 2F01     		.2byte	0x12f
 29092 0546 59050000 		.4byte	0x559
 29093 054a 5C       		.byte	0x5c
 29094 054b 13       		.uleb128 0x13
 29095 054c B7030000 		.4byte	.LASF119
 29096 0550 08       		.byte	0x8
 29097 0551 3001     		.2byte	0x130
 29098 0553 89050000 		.4byte	0x589
 29099 0557 64       		.byte	0x64
 29100 0558 00       		.byte	0
 29101 0559 09       		.uleb128 0x9
 29102 055a AF000000 		.4byte	0xaf
 29103 055e 69050000 		.4byte	0x569
 29104 0562 0A       		.uleb128 0xa
 29105 0563 18010000 		.4byte	0x118
 29106 0567 01       		.byte	0x1
 29107 0568 00       		.byte	0
 29108 0569 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 636


 29109 056a AF000000 		.4byte	0xaf
 29110 056e 79050000 		.4byte	0x579
 29111 0572 0A       		.uleb128 0xa
 29112 0573 18010000 		.4byte	0x118
 29113 0577 09       		.byte	0x9
 29114 0578 00       		.byte	0
 29115 0579 09       		.uleb128 0x9
 29116 057a AF000000 		.4byte	0xaf
 29117 057e 89050000 		.4byte	0x589
 29118 0582 0A       		.uleb128 0xa
 29119 0583 18010000 		.4byte	0x118
 29120 0587 03       		.byte	0x3
 29121 0588 00       		.byte	0
 29122 0589 09       		.uleb128 0x9
 29123 058a 97000000 		.4byte	0x97
 29124 058e 99050000 		.4byte	0x599
 29125 0592 0A       		.uleb128 0xa
 29126 0593 18010000 		.4byte	0x118
 29127 0597 0B       		.byte	0xb
 29128 0598 00       		.byte	0
 29129 0599 11       		.uleb128 0x11
 29130 059a 22070000 		.4byte	.LASF120
 29131 059e 10       		.byte	0x10
 29132 059f 08       		.byte	0x8
 29133 05a0 3701     		.2byte	0x137
 29134 05a2 28060000 		.4byte	0x628
 29135 05a6 12       		.uleb128 0x12
 29136 05a7 696400   		.ascii	"id\000"
 29137 05aa 08       		.byte	0x8
 29138 05ab 3801     		.2byte	0x138
 29139 05ad 97000000 		.4byte	0x97
 29140 05b1 00       		.byte	0
 29141 05b2 13       		.uleb128 0x13
 29142 05b3 3F130000 		.4byte	.LASF121
 29143 05b7 08       		.byte	0x8
 29144 05b8 3901     		.2byte	0x139
 29145 05ba 28060000 		.4byte	0x628
 29146 05be 01       		.byte	0x1
 29147 05bf 13       		.uleb128 0x13
 29148 05c0 BB130000 		.4byte	.LASF122
 29149 05c4 08       		.byte	0x8
 29150 05c5 3A01     		.2byte	0x13a
 29151 05c7 28060000 		.4byte	0x628
 29152 05cb 04       		.byte	0x4
 29153 05cc 13       		.uleb128 0x13
 29154 05cd A7050000 		.4byte	.LASF123
 29155 05d1 08       		.byte	0x8
 29156 05d2 3B01     		.2byte	0x13b
 29157 05d4 97000000 		.4byte	0x97
 29158 05d8 07       		.byte	0x7
 29159 05d9 13       		.uleb128 0x13
 29160 05da 86030000 		.4byte	.LASF124
 29161 05de 08       		.byte	0x8
 29162 05df 3C01     		.2byte	0x13c
 29163 05e1 97000000 		.4byte	0x97
 29164 05e5 08       		.byte	0x8
 29165 05e6 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 637


 29166 05e7 F3020000 		.4byte	.LASF125
 29167 05eb 08       		.byte	0x8
 29168 05ec 3D01     		.2byte	0x13d
 29169 05ee 97000000 		.4byte	0x97
 29170 05f2 09       		.byte	0x9
 29171 05f3 13       		.uleb128 0x13
 29172 05f4 00150000 		.4byte	.LASF126
 29173 05f8 08       		.byte	0x8
 29174 05f9 3E01     		.2byte	0x13e
 29175 05fb 97000000 		.4byte	0x97
 29176 05ff 0A       		.byte	0xa
 29177 0600 13       		.uleb128 0x13
 29178 0601 C4140000 		.4byte	.LASF127
 29179 0605 08       		.byte	0x8
 29180 0606 3F01     		.2byte	0x13f
 29181 0608 97000000 		.4byte	0x97
 29182 060c 0B       		.byte	0xb
 29183 060d 13       		.uleb128 0x13
 29184 060e 8A110000 		.4byte	.LASF128
 29185 0612 08       		.byte	0x8
 29186 0613 4001     		.2byte	0x140
 29187 0615 97000000 		.4byte	0x97
 29188 0619 0C       		.byte	0xc
 29189 061a 13       		.uleb128 0x13
 29190 061b B7030000 		.4byte	.LASF119
 29191 061f 08       		.byte	0x8
 29192 0620 4101     		.2byte	0x141
 29193 0622 28060000 		.4byte	0x628
 29194 0626 0D       		.byte	0xd
 29195 0627 00       		.byte	0
 29196 0628 09       		.uleb128 0x9
 29197 0629 97000000 		.4byte	0x97
 29198 062d 38060000 		.4byte	0x638
 29199 0631 0A       		.uleb128 0xa
 29200 0632 18010000 		.4byte	0x118
 29201 0636 02       		.byte	0x2
 29202 0637 00       		.byte	0
 29203 0638 11       		.uleb128 0x11
 29204 0639 DB150000 		.4byte	.LASF129
 29205 063d 70       		.byte	0x70
 29206 063e 08       		.byte	0x8
 29207 063f 4801     		.2byte	0x148
 29208 0641 B2070000 		.4byte	0x7b2
 29209 0645 12       		.uleb128 0x12
 29210 0646 6B5F7000 		.ascii	"k_p\000"
 29211 064a 08       		.byte	0x8
 29212 064b 4901     		.2byte	0x149
 29213 064d D3000000 		.4byte	0xd3
 29214 0651 00       		.byte	0
 29215 0652 12       		.uleb128 0x12
 29216 0653 6B5F6900 		.ascii	"k_i\000"
 29217 0657 08       		.byte	0x8
 29218 0658 4A01     		.2byte	0x14a
 29219 065a D3000000 		.4byte	0xd3
 29220 065e 04       		.byte	0x4
 29221 065f 12       		.uleb128 0x12
 29222 0660 6B5F6400 		.ascii	"k_d\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 638


 29223 0664 08       		.byte	0x8
 29224 0665 4B01     		.2byte	0x14b
 29225 0667 D3000000 		.4byte	0xd3
 29226 066b 08       		.byte	0x8
 29227 066c 13       		.uleb128 0x13
 29228 066d 83100000 		.4byte	.LASF130
 29229 0671 08       		.byte	0x8
 29230 0672 4C01     		.2byte	0x14c
 29231 0674 D3000000 		.4byte	0xd3
 29232 0678 0C       		.byte	0xc
 29233 0679 13       		.uleb128 0x13
 29234 067a D0060000 		.4byte	.LASF131
 29235 067e 08       		.byte	0x8
 29236 067f 4D01     		.2byte	0x14d
 29237 0681 D3000000 		.4byte	0xd3
 29238 0685 10       		.byte	0x10
 29239 0686 13       		.uleb128 0x13
 29240 0687 AA060000 		.4byte	.LASF132
 29241 068b 08       		.byte	0x8
 29242 068c 4E01     		.2byte	0x14e
 29243 068e D3000000 		.4byte	0xd3
 29244 0692 14       		.byte	0x14
 29245 0693 13       		.uleb128 0x13
 29246 0694 67140000 		.4byte	.LASF133
 29247 0698 08       		.byte	0x8
 29248 0699 4F01     		.2byte	0x14f
 29249 069b D3000000 		.4byte	0xd3
 29250 069f 18       		.byte	0x18
 29251 06a0 13       		.uleb128 0x13
 29252 06a1 79070000 		.4byte	.LASF134
 29253 06a5 08       		.byte	0x8
 29254 06a6 5001     		.2byte	0x150
 29255 06a8 D3000000 		.4byte	0xd3
 29256 06ac 1C       		.byte	0x1c
 29257 06ad 13       		.uleb128 0x13
 29258 06ae 01130000 		.4byte	.LASF135
 29259 06b2 08       		.byte	0x8
 29260 06b3 5101     		.2byte	0x151
 29261 06b5 D3000000 		.4byte	0xd3
 29262 06b9 20       		.byte	0x20
 29263 06ba 13       		.uleb128 0x13
 29264 06bb 96070000 		.4byte	.LASF136
 29265 06bf 08       		.byte	0x8
 29266 06c0 5201     		.2byte	0x152
 29267 06c2 D3000000 		.4byte	0xd3
 29268 06c6 24       		.byte	0x24
 29269 06c7 13       		.uleb128 0x13
 29270 06c8 77080000 		.4byte	.LASF137
 29271 06cc 08       		.byte	0x8
 29272 06cd 5301     		.2byte	0x153
 29273 06cf D3000000 		.4byte	0xd3
 29274 06d3 28       		.byte	0x28
 29275 06d4 13       		.uleb128 0x13
 29276 06d5 04170000 		.4byte	.LASF138
 29277 06d9 08       		.byte	0x8
 29278 06da 5401     		.2byte	0x154
 29279 06dc D3000000 		.4byte	0xd3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 639


 29280 06e0 2C       		.byte	0x2c
 29281 06e1 13       		.uleb128 0x13
 29282 06e2 B0090000 		.4byte	.LASF139
 29283 06e6 08       		.byte	0x8
 29284 06e7 5501     		.2byte	0x155
 29285 06e9 97000000 		.4byte	0x97
 29286 06ed 30       		.byte	0x30
 29287 06ee 13       		.uleb128 0x13
 29288 06ef 50140000 		.4byte	.LASF140
 29289 06f3 08       		.byte	0x8
 29290 06f4 5601     		.2byte	0x156
 29291 06f6 97000000 		.4byte	0x97
 29292 06fa 31       		.byte	0x31
 29293 06fb 13       		.uleb128 0x13
 29294 06fc A3100000 		.4byte	.LASF141
 29295 0700 08       		.byte	0x8
 29296 0701 5701     		.2byte	0x157
 29297 0703 97000000 		.4byte	0x97
 29298 0707 32       		.byte	0x32
 29299 0708 13       		.uleb128 0x13
 29300 0709 F8150000 		.4byte	.LASF142
 29301 070d 08       		.byte	0x8
 29302 070e 5801     		.2byte	0x158
 29303 0710 97000000 		.4byte	0x97
 29304 0714 33       		.byte	0x33
 29305 0715 13       		.uleb128 0x13
 29306 0716 78010000 		.4byte	.LASF143
 29307 071a 08       		.byte	0x8
 29308 071b 5901     		.2byte	0x159
 29309 071d D3000000 		.4byte	0xd3
 29310 0721 34       		.byte	0x34
 29311 0722 13       		.uleb128 0x13
 29312 0723 EF060000 		.4byte	.LASF144
 29313 0727 08       		.byte	0x8
 29314 0728 5A01     		.2byte	0x15a
 29315 072a D3000000 		.4byte	0xd3
 29316 072e 38       		.byte	0x38
 29317 072f 13       		.uleb128 0x13
 29318 0730 280C0000 		.4byte	.LASF145
 29319 0734 08       		.byte	0x8
 29320 0735 5B01     		.2byte	0x15b
 29321 0737 D3000000 		.4byte	0xd3
 29322 073b 3C       		.byte	0x3c
 29323 073c 13       		.uleb128 0x13
 29324 073d 23060000 		.4byte	.LASF146
 29325 0741 08       		.byte	0x8
 29326 0742 5C01     		.2byte	0x15c
 29327 0744 D3000000 		.4byte	0xd3
 29328 0748 40       		.byte	0x40
 29329 0749 13       		.uleb128 0x13
 29330 074a B8010000 		.4byte	.LASF147
 29331 074e 08       		.byte	0x8
 29332 074f 5D01     		.2byte	0x15d
 29333 0751 B2070000 		.4byte	0x7b2
 29334 0755 44       		.byte	0x44
 29335 0756 13       		.uleb128 0x13
 29336 0757 9A160000 		.4byte	.LASF148
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 640


 29337 075b 08       		.byte	0x8
 29338 075c 5E01     		.2byte	0x15e
 29339 075e C7000000 		.4byte	0xc7
 29340 0762 5C       		.byte	0x5c
 29341 0763 13       		.uleb128 0x13
 29342 0764 FD090000 		.4byte	.LASF149
 29343 0768 08       		.byte	0x8
 29344 0769 5F01     		.2byte	0x15f
 29345 076b 97000000 		.4byte	0x97
 29346 076f 5E       		.byte	0x5e
 29347 0770 13       		.uleb128 0x13
 29348 0771 630D0000 		.4byte	.LASF150
 29349 0775 08       		.byte	0x8
 29350 0776 6001     		.2byte	0x160
 29351 0778 97000000 		.4byte	0x97
 29352 077c 5F       		.byte	0x5f
 29353 077d 13       		.uleb128 0x13
 29354 077e CB050000 		.4byte	.LASF151
 29355 0782 08       		.byte	0x8
 29356 0783 6101     		.2byte	0x161
 29357 0785 97000000 		.4byte	0x97
 29358 0789 60       		.byte	0x60
 29359 078a 13       		.uleb128 0x13
 29360 078b 99060000 		.4byte	.LASF152
 29361 078f 08       		.byte	0x8
 29362 0790 6201     		.2byte	0x162
 29363 0792 97000000 		.4byte	0x97
 29364 0796 61       		.byte	0x61
 29365 0797 13       		.uleb128 0x13
 29366 0798 6C050000 		.4byte	.LASF153
 29367 079c 08       		.byte	0x8
 29368 079d 6301     		.2byte	0x163
 29369 079f 97000000 		.4byte	0x97
 29370 07a3 62       		.byte	0x62
 29371 07a4 13       		.uleb128 0x13
 29372 07a5 B7030000 		.4byte	.LASF119
 29373 07a9 08       		.byte	0x8
 29374 07aa 6401     		.2byte	0x164
 29375 07ac C2070000 		.4byte	0x7c2
 29376 07b0 63       		.byte	0x63
 29377 07b1 00       		.byte	0
 29378 07b2 09       		.uleb128 0x9
 29379 07b3 EB000000 		.4byte	0xeb
 29380 07b7 C2070000 		.4byte	0x7c2
 29381 07bb 0A       		.uleb128 0xa
 29382 07bc 18010000 		.4byte	0x118
 29383 07c0 05       		.byte	0x5
 29384 07c1 00       		.byte	0
 29385 07c2 09       		.uleb128 0x9
 29386 07c3 97000000 		.4byte	0x97
 29387 07c7 D2070000 		.4byte	0x7d2
 29388 07cb 0A       		.uleb128 0xa
 29389 07cc 18010000 		.4byte	0x118
 29390 07d0 0C       		.byte	0xc
 29391 07d1 00       		.byte	0
 29392 07d2 11       		.uleb128 0x11
 29393 07d3 71150000 		.4byte	.LASF154
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 641


 29394 07d7 30       		.byte	0x30
 29395 07d8 08       		.byte	0x8
 29396 07d9 6B01     		.2byte	0x16b
 29397 07db 55080000 		.4byte	0x855
 29398 07df 13       		.uleb128 0x13
 29399 07e0 0A0C0000 		.4byte	.LASF155
 29400 07e4 08       		.byte	0x8
 29401 07e5 6C01     		.2byte	0x16c
 29402 07e7 55080000 		.4byte	0x855
 29403 07eb 00       		.byte	0
 29404 07ec 12       		.uleb128 0x12
 29405 07ed 72657300 		.ascii	"res\000"
 29406 07f1 08       		.byte	0x8
 29407 07f2 6D01     		.2byte	0x16d
 29408 07f4 28060000 		.4byte	0x628
 29409 07f8 05       		.byte	0x5
 29410 07f9 13       		.uleb128 0x13
 29411 07fa BF090000 		.4byte	.LASF156
 29412 07fe 08       		.byte	0x8
 29413 07ff 6E01     		.2byte	0x16e
 29414 0801 DA030000 		.4byte	0x3da
 29415 0805 08       		.byte	0x8
 29416 0806 13       		.uleb128 0x13
 29417 0807 C9060000 		.4byte	.LASF157
 29418 080b 08       		.byte	0x8
 29419 080c 6F01     		.2byte	0x16f
 29420 080e 65080000 		.4byte	0x865
 29421 0812 14       		.byte	0x14
 29422 0813 13       		.uleb128 0x13
 29423 0814 500F0000 		.4byte	.LASF158
 29424 0818 08       		.byte	0x8
 29425 0819 7001     		.2byte	0x170
 29426 081b 97000000 		.4byte	0x97
 29427 081f 20       		.byte	0x20
 29428 0820 13       		.uleb128 0x13
 29429 0821 AE020000 		.4byte	.LASF159
 29430 0825 08       		.byte	0x8
 29431 0826 7101     		.2byte	0x171
 29432 0828 28060000 		.4byte	0x628
 29433 082c 21       		.byte	0x21
 29434 082d 13       		.uleb128 0x13
 29435 082e 980E0000 		.4byte	.LASF160
 29436 0832 08       		.byte	0x8
 29437 0833 7201     		.2byte	0x172
 29438 0835 BB000000 		.4byte	0xbb
 29439 0839 24       		.byte	0x24
 29440 083a 13       		.uleb128 0x13
 29441 083b B1110000 		.4byte	.LASF161
 29442 083f 08       		.byte	0x8
 29443 0840 7301     		.2byte	0x173
 29444 0842 EA030000 		.4byte	0x3ea
 29445 0846 25       		.byte	0x25
 29446 0847 13       		.uleb128 0x13
 29447 0848 B7030000 		.4byte	.LASF119
 29448 084c 08       		.byte	0x8
 29449 084d 7401     		.2byte	0x174
 29450 084f 75080000 		.4byte	0x875
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 642


 29451 0853 28       		.byte	0x28
 29452 0854 00       		.byte	0
 29453 0855 09       		.uleb128 0x9
 29454 0856 97000000 		.4byte	0x97
 29455 085a 65080000 		.4byte	0x865
 29456 085e 0A       		.uleb128 0xa
 29457 085f 18010000 		.4byte	0x118
 29458 0863 04       		.byte	0x4
 29459 0864 00       		.byte	0
 29460 0865 09       		.uleb128 0x9
 29461 0866 DF000000 		.4byte	0xdf
 29462 086a 75080000 		.4byte	0x875
 29463 086e 0A       		.uleb128 0xa
 29464 086f 18010000 		.4byte	0x118
 29465 0873 02       		.byte	0x2
 29466 0874 00       		.byte	0
 29467 0875 09       		.uleb128 0x9
 29468 0876 97000000 		.4byte	0x97
 29469 087a 85080000 		.4byte	0x885
 29470 087e 0A       		.uleb128 0xa
 29471 087f 18010000 		.4byte	0x118
 29472 0883 07       		.byte	0x7
 29473 0884 00       		.byte	0
 29474 0885 11       		.uleb128 0x11
 29475 0886 5A020000 		.4byte	.LASF162
 29476 088a 10       		.byte	0x10
 29477 088b 08       		.byte	0x8
 29478 088c 7B01     		.2byte	0x17b
 29479 088e D4080000 		.4byte	0x8d4
 29480 0892 13       		.uleb128 0x13
 29481 0893 540E0000 		.4byte	.LASF163
 29482 0897 08       		.byte	0x8
 29483 0898 7C01     		.2byte	0x17c
 29484 089a D4080000 		.4byte	0x8d4
 29485 089e 00       		.byte	0
 29486 089f 13       		.uleb128 0x13
 29487 08a0 4D160000 		.4byte	.LASF164
 29488 08a4 08       		.byte	0x8
 29489 08a5 7D01     		.2byte	0x17d
 29490 08a7 59050000 		.4byte	0x559
 29491 08ab 04       		.byte	0x4
 29492 08ac 13       		.uleb128 0x13
 29493 08ad 03070000 		.4byte	.LASF165
 29494 08b1 08       		.byte	0x8
 29495 08b2 7E01     		.2byte	0x17e
 29496 08b4 E4080000 		.4byte	0x8e4
 29497 08b8 0C       		.byte	0xc
 29498 08b9 13       		.uleb128 0x13
 29499 08ba CB110000 		.4byte	.LASF166
 29500 08be 08       		.byte	0x8
 29501 08bf 7F01     		.2byte	0x17f
 29502 08c1 97000000 		.4byte	0x97
 29503 08c5 0E       		.byte	0xe
 29504 08c6 13       		.uleb128 0x13
 29505 08c7 45140000 		.4byte	.LASF167
 29506 08cb 08       		.byte	0x8
 29507 08cc 8001     		.2byte	0x180
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 643


 29508 08ce 97000000 		.4byte	0x97
 29509 08d2 0F       		.byte	0xf
 29510 08d3 00       		.byte	0
 29511 08d4 09       		.uleb128 0x9
 29512 08d5 A3000000 		.4byte	0xa3
 29513 08d9 E4080000 		.4byte	0x8e4
 29514 08dd 0A       		.uleb128 0xa
 29515 08de 18010000 		.4byte	0x118
 29516 08e2 01       		.byte	0x1
 29517 08e3 00       		.byte	0
 29518 08e4 09       		.uleb128 0x9
 29519 08e5 97000000 		.4byte	0x97
 29520 08e9 F4080000 		.4byte	0x8f4
 29521 08ed 0A       		.uleb128 0xa
 29522 08ee 18010000 		.4byte	0x118
 29523 08f2 01       		.byte	0x1
 29524 08f3 00       		.byte	0
 29525 08f4 11       		.uleb128 0x11
 29526 08f5 AB0D0000 		.4byte	.LASF168
 29527 08f9 20       		.byte	0x20
 29528 08fa 08       		.byte	0x8
 29529 08fb 8701     		.2byte	0x187
 29530 08fd 36090000 		.4byte	0x936
 29531 0901 13       		.uleb128 0x13
 29532 0902 28030000 		.4byte	.LASF169
 29533 0906 08       		.byte	0x8
 29534 0907 8801     		.2byte	0x188
 29535 0909 97000000 		.4byte	0x97
 29536 090d 00       		.byte	0
 29537 090e 13       		.uleb128 0x13
 29538 090f 720F0000 		.4byte	.LASF170
 29539 0913 08       		.byte	0x8
 29540 0914 8901     		.2byte	0x189
 29541 0916 97000000 		.4byte	0x97
 29542 091a 01       		.byte	0x1
 29543 091b 13       		.uleb128 0x13
 29544 091c 800C0000 		.4byte	.LASF171
 29545 0920 08       		.byte	0x8
 29546 0921 8A01     		.2byte	0x18a
 29547 0923 36090000 		.4byte	0x936
 29548 0927 02       		.byte	0x2
 29549 0928 13       		.uleb128 0x13
 29550 0929 B7030000 		.4byte	.LASF119
 29551 092d 08       		.byte	0x8
 29552 092e 8B01     		.2byte	0x18b
 29553 0930 55080000 		.4byte	0x855
 29554 0934 1B       		.byte	0x1b
 29555 0935 00       		.byte	0
 29556 0936 09       		.uleb128 0x9
 29557 0937 97000000 		.4byte	0x97
 29558 093b 4C090000 		.4byte	0x94c
 29559 093f 0A       		.uleb128 0xa
 29560 0940 18010000 		.4byte	0x118
 29561 0944 04       		.byte	0x4
 29562 0945 0A       		.uleb128 0xa
 29563 0946 18010000 		.4byte	0x118
 29564 094a 04       		.byte	0x4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 644


 29565 094b 00       		.byte	0
 29566 094c 11       		.uleb128 0x11
 29567 094d BE110000 		.4byte	.LASF172
 29568 0951 20       		.byte	0x20
 29569 0952 08       		.byte	0x8
 29570 0953 9201     		.2byte	0x192
 29571 0955 A8090000 		.4byte	0x9a8
 29572 0959 13       		.uleb128 0x13
 29573 095a 460F0000 		.4byte	.LASF173
 29574 095e 08       		.byte	0x8
 29575 095f 9301     		.2byte	0x193
 29576 0961 A8090000 		.4byte	0x9a8
 29577 0965 00       		.byte	0
 29578 0966 13       		.uleb128 0x13
 29579 0967 32140000 		.4byte	.LASF174
 29580 096b 08       		.byte	0x8
 29581 096c 9401     		.2byte	0x194
 29582 096e 97000000 		.4byte	0x97
 29583 0972 06       		.byte	0x6
 29584 0973 13       		.uleb128 0x13
 29585 0974 87140000 		.4byte	.LASF175
 29586 0978 08       		.byte	0x8
 29587 0979 9501     		.2byte	0x195
 29588 097b 97000000 		.4byte	0x97
 29589 097f 07       		.byte	0x7
 29590 0980 13       		.uleb128 0x13
 29591 0981 32070000 		.4byte	.LASF176
 29592 0985 08       		.byte	0x8
 29593 0986 9601     		.2byte	0x196
 29594 0988 89050000 		.4byte	0x589
 29595 098c 08       		.byte	0x8
 29596 098d 13       		.uleb128 0x13
 29597 098e 4A030000 		.4byte	.LASF177
 29598 0992 08       		.byte	0x8
 29599 0993 9701     		.2byte	0x197
 29600 0995 97000000 		.4byte	0x97
 29601 0999 14       		.byte	0x14
 29602 099a 13       		.uleb128 0x13
 29603 099b B7030000 		.4byte	.LASF119
 29604 099f 08       		.byte	0x8
 29605 09a0 9801     		.2byte	0x198
 29606 09a2 B8090000 		.4byte	0x9b8
 29607 09a6 15       		.byte	0x15
 29608 09a7 00       		.byte	0
 29609 09a8 09       		.uleb128 0x9
 29610 09a9 97000000 		.4byte	0x97
 29611 09ad B8090000 		.4byte	0x9b8
 29612 09b1 0A       		.uleb128 0xa
 29613 09b2 18010000 		.4byte	0x118
 29614 09b6 05       		.byte	0x5
 29615 09b7 00       		.byte	0
 29616 09b8 09       		.uleb128 0x9
 29617 09b9 97000000 		.4byte	0x97
 29618 09bd C8090000 		.4byte	0x9c8
 29619 09c1 0A       		.uleb128 0xa
 29620 09c2 18010000 		.4byte	0x118
 29621 09c6 0A       		.byte	0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 645


 29622 09c7 00       		.byte	0
 29623 09c8 11       		.uleb128 0x11
 29624 09c9 93110000 		.4byte	.LASF178
 29625 09cd 20       		.byte	0x20
 29626 09ce 08       		.byte	0x8
 29627 09cf 9F01     		.2byte	0x19f
 29628 09d1 FD090000 		.4byte	0x9fd
 29629 09d5 13       		.uleb128 0x13
 29630 09d6 C1040000 		.4byte	.LASF179
 29631 09da 08       		.byte	0x8
 29632 09db A001     		.2byte	0x1a0
 29633 09dd 40010000 		.4byte	0x140
 29634 09e1 00       		.byte	0
 29635 09e2 13       		.uleb128 0x13
 29636 09e3 95030000 		.4byte	.LASF180
 29637 09e7 08       		.byte	0x8
 29638 09e8 A101     		.2byte	0x1a1
 29639 09ea 85080000 		.4byte	0x885
 29640 09ee 08       		.byte	0x8
 29641 09ef 13       		.uleb128 0x13
 29642 09f0 B7030000 		.4byte	.LASF119
 29643 09f4 08       		.byte	0x8
 29644 09f5 A201     		.2byte	0x1a2
 29645 09f7 75080000 		.4byte	0x875
 29646 09fb 18       		.byte	0x18
 29647 09fc 00       		.byte	0
 29648 09fd 11       		.uleb128 0x11
 29649 09fe 630B0000 		.4byte	.LASF181
 29650 0a02 10       		.byte	0x10
 29651 0a03 08       		.byte	0x8
 29652 0a04 A901     		.2byte	0x1a9
 29653 0a06 4C0A0000 		.4byte	0xa4c
 29654 0a0a 13       		.uleb128 0x13
 29655 0a0b EF090000 		.4byte	.LASF182
 29656 0a0f 08       		.byte	0x8
 29657 0a10 AA01     		.2byte	0x1aa
 29658 0a12 D3000000 		.4byte	0xd3
 29659 0a16 00       		.byte	0
 29660 0a17 13       		.uleb128 0x13
 29661 0a18 E8160000 		.4byte	.LASF183
 29662 0a1c 08       		.byte	0x8
 29663 0a1d AB01     		.2byte	0x1ab
 29664 0a1f D3000000 		.4byte	0xd3
 29665 0a23 04       		.byte	0x4
 29666 0a24 13       		.uleb128 0x13
 29667 0a25 0D070000 		.4byte	.LASF184
 29668 0a29 08       		.byte	0x8
 29669 0a2a AC01     		.2byte	0x1ac
 29670 0a2c D3000000 		.4byte	0xd3
 29671 0a30 08       		.byte	0x8
 29672 0a31 13       		.uleb128 0x13
 29673 0a32 3D080000 		.4byte	.LASF185
 29674 0a36 08       		.byte	0x8
 29675 0a37 AD01     		.2byte	0x1ad
 29676 0a39 97000000 		.4byte	0x97
 29677 0a3d 0C       		.byte	0xc
 29678 0a3e 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 646


 29679 0a3f B7030000 		.4byte	.LASF119
 29680 0a43 08       		.byte	0x8
 29681 0a44 AE01     		.2byte	0x1ae
 29682 0a46 28060000 		.4byte	0x628
 29683 0a4a 0D       		.byte	0xd
 29684 0a4b 00       		.byte	0
 29685 0a4c 11       		.uleb128 0x11
 29686 0a4d DF120000 		.4byte	.LASF186
 29687 0a51 10       		.byte	0x10
 29688 0a52 08       		.byte	0x8
 29689 0a53 B501     		.2byte	0x1b5
 29690 0a55 8E0A0000 		.4byte	0xa8e
 29691 0a59 13       		.uleb128 0x13
 29692 0a5a 50080000 		.4byte	.LASF187
 29693 0a5e 08       		.byte	0x8
 29694 0a5f B601     		.2byte	0x1b6
 29695 0a61 A3000000 		.4byte	0xa3
 29696 0a65 00       		.byte	0
 29697 0a66 13       		.uleb128 0x13
 29698 0a67 F8110000 		.4byte	.LASF188
 29699 0a6b 08       		.byte	0x8
 29700 0a6c B701     		.2byte	0x1b7
 29701 0a6e C7000000 		.4byte	0xc7
 29702 0a72 02       		.byte	0x2
 29703 0a73 13       		.uleb128 0x13
 29704 0a74 4B090000 		.4byte	.LASF189
 29705 0a78 08       		.byte	0x8
 29706 0a79 B801     		.2byte	0x1b8
 29707 0a7b D4080000 		.4byte	0x8d4
 29708 0a7f 04       		.byte	0x4
 29709 0a80 13       		.uleb128 0x13
 29710 0a81 B7030000 		.4byte	.LASF119
 29711 0a85 08       		.byte	0x8
 29712 0a86 B901     		.2byte	0x1b9
 29713 0a88 75080000 		.4byte	0x875
 29714 0a8c 08       		.byte	0x8
 29715 0a8d 00       		.byte	0
 29716 0a8e 11       		.uleb128 0x11
 29717 0a8f E6010000 		.4byte	.LASF190
 29718 0a93 10       		.byte	0x10
 29719 0a94 08       		.byte	0x8
 29720 0a95 C001     		.2byte	0x1c0
 29721 0a97 C30A0000 		.4byte	0xac3
 29722 0a9b 13       		.uleb128 0x13
 29723 0a9c D2040000 		.4byte	.LASF191
 29724 0aa0 08       		.byte	0x8
 29725 0aa1 C101     		.2byte	0x1c1
 29726 0aa3 97000000 		.4byte	0x97
 29727 0aa7 00       		.byte	0
 29728 0aa8 13       		.uleb128 0x13
 29729 0aa9 4A0C0000 		.4byte	.LASF192
 29730 0aad 08       		.byte	0x8
 29731 0aae C201     		.2byte	0x1c2
 29732 0ab0 97000000 		.4byte	0x97
 29733 0ab4 01       		.byte	0x1
 29734 0ab5 13       		.uleb128 0x13
 29735 0ab6 B7030000 		.4byte	.LASF119
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 647


 29736 0aba 08       		.byte	0x8
 29737 0abb C301     		.2byte	0x1c3
 29738 0abd C30A0000 		.4byte	0xac3
 29739 0ac1 02       		.byte	0x2
 29740 0ac2 00       		.byte	0
 29741 0ac3 09       		.uleb128 0x9
 29742 0ac4 97000000 		.4byte	0x97
 29743 0ac8 D30A0000 		.4byte	0xad3
 29744 0acc 0A       		.uleb128 0xa
 29745 0acd 18010000 		.4byte	0x118
 29746 0ad1 0D       		.byte	0xd
 29747 0ad2 00       		.byte	0
 29748 0ad3 11       		.uleb128 0x11
 29749 0ad4 E00E0000 		.4byte	.LASF193
 29750 0ad8 10       		.byte	0x10
 29751 0ad9 08       		.byte	0x8
 29752 0ada CA01     		.2byte	0x1ca
 29753 0adc 2F0B0000 		.4byte	0xb2f
 29754 0ae0 13       		.uleb128 0x13
 29755 0ae1 87150000 		.4byte	.LASF194
 29756 0ae5 08       		.byte	0x8
 29757 0ae6 CC01     		.2byte	0x1cc
 29758 0ae8 D3000000 		.4byte	0xd3
 29759 0aec 00       		.byte	0
 29760 0aed 13       		.uleb128 0x13
 29761 0aee 28080000 		.4byte	.LASF195
 29762 0af2 08       		.byte	0x8
 29763 0af3 CD01     		.2byte	0x1cd
 29764 0af5 EB000000 		.4byte	0xeb
 29765 0af9 04       		.byte	0x4
 29766 0afa 13       		.uleb128 0x13
 29767 0afb C1100000 		.4byte	.LASF196
 29768 0aff 08       		.byte	0x8
 29769 0b00 CE01     		.2byte	0x1ce
 29770 0b02 EB000000 		.4byte	0xeb
 29771 0b06 08       		.byte	0x8
 29772 0b07 13       		.uleb128 0x13
 29773 0b08 540A0000 		.4byte	.LASF197
 29774 0b0c 08       		.byte	0x8
 29775 0b0d CF01     		.2byte	0x1cf
 29776 0b0f 97000000 		.4byte	0x97
 29777 0b13 0C       		.byte	0xc
 29778 0b14 13       		.uleb128 0x13
 29779 0b15 90120000 		.4byte	.LASF198
 29780 0b19 08       		.byte	0x8
 29781 0b1a D001     		.2byte	0x1d0
 29782 0b1c 97000000 		.4byte	0x97
 29783 0b20 0D       		.byte	0xd
 29784 0b21 13       		.uleb128 0x13
 29785 0b22 B7030000 		.4byte	.LASF119
 29786 0b26 08       		.byte	0x8
 29787 0b27 D101     		.2byte	0x1d1
 29788 0b29 E4080000 		.4byte	0x8e4
 29789 0b2d 0E       		.byte	0xe
 29790 0b2e 00       		.byte	0
 29791 0b2f 11       		.uleb128 0x11
 29792 0b30 65070000 		.4byte	.LASF199
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 648


 29793 0b34 02       		.byte	0x2
 29794 0b35 08       		.byte	0x8
 29795 0b36 D401     		.2byte	0x1d4
 29796 0b38 4A0B0000 		.4byte	0xb4a
 29797 0b3c 12       		.uleb128 0x12
 29798 0b3d 70776D00 		.ascii	"pwm\000"
 29799 0b41 08       		.byte	0x8
 29800 0b42 D501     		.2byte	0x1d5
 29801 0b44 C7000000 		.4byte	0xc7
 29802 0b48 00       		.byte	0
 29803 0b49 00       		.byte	0
 29804 0b4a 11       		.uleb128 0x11
 29805 0b4b 9D020000 		.4byte	.LASF200
 29806 0b4f 12       		.byte	0x12
 29807 0b50 08       		.byte	0x8
 29808 0b51 DB01     		.2byte	0x1db
 29809 0b53 8C0B0000 		.4byte	0xb8c
 29810 0b57 13       		.uleb128 0x13
 29811 0b58 C0160000 		.4byte	.LASF201
 29812 0b5c 08       		.byte	0x8
 29813 0b5d DC01     		.2byte	0x1dc
 29814 0b5f 97000000 		.4byte	0x97
 29815 0b63 00       		.byte	0
 29816 0b64 13       		.uleb128 0x13
 29817 0b65 10150000 		.4byte	.LASF202
 29818 0b69 08       		.byte	0x8
 29819 0b6a DD01     		.2byte	0x1dd
 29820 0b6c D4080000 		.4byte	0x8d4
 29821 0b70 02       		.byte	0x2
 29822 0b71 13       		.uleb128 0x13
 29823 0b72 6F000000 		.4byte	.LASF203
 29824 0b76 08       		.byte	0x8
 29825 0b77 DE01     		.2byte	0x1de
 29826 0b79 97000000 		.4byte	0x97
 29827 0b7d 06       		.byte	0x6
 29828 0b7e 13       		.uleb128 0x13
 29829 0b7f B7030000 		.4byte	.LASF119
 29830 0b83 08       		.byte	0x8
 29831 0b84 DF01     		.2byte	0x1df
 29832 0b86 8C0B0000 		.4byte	0xb8c
 29833 0b8a 07       		.byte	0x7
 29834 0b8b 00       		.byte	0
 29835 0b8c 09       		.uleb128 0x9
 29836 0b8d 97000000 		.4byte	0x97
 29837 0b91 9C0B0000 		.4byte	0xb9c
 29838 0b95 0A       		.uleb128 0xa
 29839 0b96 18010000 		.4byte	0x118
 29840 0b9a 09       		.byte	0x9
 29841 0b9b 00       		.byte	0
 29842 0b9c 14       		.uleb128 0x14
 29843 0b9d A2150000 		.4byte	.LASF204
 29844 0ba1 F402     		.2byte	0x2f4
 29845 0ba3 08       		.byte	0x8
 29846 0ba4 E801     		.2byte	0x1e8
 29847 0ba6 810C0000 		.4byte	0xc81
 29848 0baa 13       		.uleb128 0x13
 29849 0bab 470D0000 		.4byte	.LASF205
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 649


 29850 0baf 08       		.byte	0x8
 29851 0bb0 EA01     		.2byte	0x1ea
 29852 0bb2 97000000 		.4byte	0x97
 29853 0bb6 00       		.byte	0
 29854 0bb7 13       		.uleb128 0x13
 29855 0bb8 B7030000 		.4byte	.LASF119
 29856 0bbc 08       		.byte	0x8
 29857 0bbd EB01     		.2byte	0x1eb
 29858 0bbf 810C0000 		.4byte	0xc81
 29859 0bc3 01       		.byte	0x1
 29860 0bc4 12       		.uleb128 0x12
 29861 0bc5 636E7400 		.ascii	"cnt\000"
 29862 0bc9 08       		.byte	0x8
 29863 0bca EC01     		.2byte	0x1ec
 29864 0bcc BC040000 		.4byte	0x4bc
 29865 0bd0 10       		.byte	0x10
 29866 0bd1 13       		.uleb128 0x13
 29867 0bd2 78030000 		.4byte	.LASF206
 29868 0bd6 08       		.byte	0x8
 29869 0bd7 ED01     		.2byte	0x1ed
 29870 0bd9 910C0000 		.4byte	0xc91
 29871 0bdd 80       		.byte	0x80
 29872 0bde 12       		.uleb128 0x12
 29873 0bdf 64657600 		.ascii	"dev\000"
 29874 0be3 08       		.byte	0x8
 29875 0be4 EE01     		.2byte	0x1ee
 29876 0be6 99050000 		.4byte	0x599
 29877 0bea A0       		.byte	0xa0
 29878 0beb 13       		.uleb128 0x13
 29879 0bec 1A130000 		.4byte	.LASF207
 29880 0bf0 08       		.byte	0x8
 29881 0bf1 EF01     		.2byte	0x1ef
 29882 0bf3 A10C0000 		.4byte	0xca1
 29883 0bf7 B0       		.byte	0xb0
 29884 0bf8 15       		.uleb128 0x15
 29885 0bf9 656E6300 		.ascii	"enc\000"
 29886 0bfd 08       		.byte	0x8
 29887 0bfe F001     		.2byte	0x1f0
 29888 0c00 B10C0000 		.4byte	0xcb1
 29889 0c04 9001     		.2byte	0x190
 29890 0c06 15       		.uleb128 0x15
 29891 0c07 656D6700 		.ascii	"emg\000"
 29892 0c0b 08       		.byte	0x8
 29893 0c0c F101     		.2byte	0x1f1
 29894 0c0e 85080000 		.4byte	0x885
 29895 0c12 F001     		.2byte	0x1f0
 29896 0c14 15       		.uleb128 0x15
 29897 0c15 696D7500 		.ascii	"imu\000"
 29898 0c19 08       		.byte	0x8
 29899 0c1a F201     		.2byte	0x1f2
 29900 0c1c F4080000 		.4byte	0x8f4
 29901 0c20 0002     		.2byte	0x200
 29902 0c22 15       		.uleb128 0x15
 29903 0c23 65787000 		.ascii	"exp\000"
 29904 0c27 08       		.byte	0x8
 29905 0c28 F301     		.2byte	0x1f3
 29906 0c2a 4C090000 		.4byte	0x94c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 650


 29907 0c2e 2002     		.2byte	0x220
 29908 0c30 16       		.uleb128 0x16
 29909 0c31 B0000000 		.4byte	.LASF208
 29910 0c35 08       		.byte	0x8
 29911 0c36 F401     		.2byte	0x1f4
 29912 0c38 C10C0000 		.4byte	0xcc1
 29913 0c3c 4002     		.2byte	0x240
 29914 0c3e 15       		.uleb128 0x15
 29915 0c3f 534800   		.ascii	"SH\000"
 29916 0c42 08       		.byte	0x8
 29917 0c43 F601     		.2byte	0x1f6
 29918 0c45 FD090000 		.4byte	0x9fd
 29919 0c49 A002     		.2byte	0x2a0
 29920 0c4b 16       		.uleb128 0x16
 29921 0c4c 5A010000 		.4byte	.LASF209
 29922 0c50 08       		.byte	0x8
 29923 0c51 F701     		.2byte	0x1f7
 29924 0c53 4C0A0000 		.4byte	0xa4c
 29925 0c57 B002     		.2byte	0x2b0
 29926 0c59 15       		.uleb128 0x15
 29927 0c5a 4D5300   		.ascii	"MS\000"
 29928 0c5d 08       		.byte	0x8
 29929 0c5e F801     		.2byte	0x1f8
 29930 0c60 8E0A0000 		.4byte	0xa8e
 29931 0c64 C002     		.2byte	0x2c0
 29932 0c66 15       		.uleb128 0x15
 29933 0c67 464200   		.ascii	"FB\000"
 29934 0c6a 08       		.byte	0x8
 29935 0c6b F901     		.2byte	0x1f9
 29936 0c6d D30A0000 		.4byte	0xad3
 29937 0c71 D002     		.2byte	0x2d0
 29938 0c73 15       		.uleb128 0x15
 29939 0c74 575200   		.ascii	"WR\000"
 29940 0c77 08       		.byte	0x8
 29941 0c78 FA01     		.2byte	0x1fa
 29942 0c7a 4A0B0000 		.4byte	0xb4a
 29943 0c7e E002     		.2byte	0x2e0
 29944 0c80 00       		.byte	0
 29945 0c81 09       		.uleb128 0x9
 29946 0c82 97000000 		.4byte	0x97
 29947 0c86 910C0000 		.4byte	0xc91
 29948 0c8a 0A       		.uleb128 0xa
 29949 0c8b 18010000 		.4byte	0x118
 29950 0c8f 0E       		.byte	0xe
 29951 0c90 00       		.byte	0
 29952 0c91 09       		.uleb128 0x9
 29953 0c92 97000000 		.4byte	0x97
 29954 0c96 A10C0000 		.4byte	0xca1
 29955 0c9a 0A       		.uleb128 0xa
 29956 0c9b 18010000 		.4byte	0x118
 29957 0c9f 1F       		.byte	0x1f
 29958 0ca0 00       		.byte	0
 29959 0ca1 09       		.uleb128 0x9
 29960 0ca2 38060000 		.4byte	0x638
 29961 0ca6 B10C0000 		.4byte	0xcb1
 29962 0caa 0A       		.uleb128 0xa
 29963 0cab 18010000 		.4byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 651


 29964 0caf 01       		.byte	0x1
 29965 0cb0 00       		.byte	0
 29966 0cb1 09       		.uleb128 0x9
 29967 0cb2 D2070000 		.4byte	0x7d2
 29968 0cb6 C10C0000 		.4byte	0xcc1
 29969 0cba 0A       		.uleb128 0xa
 29970 0cbb 18010000 		.4byte	0x118
 29971 0cbf 01       		.byte	0x1
 29972 0cc0 00       		.byte	0
 29973 0cc1 09       		.uleb128 0x9
 29974 0cc2 C8090000 		.4byte	0x9c8
 29975 0cc6 D10C0000 		.4byte	0xcd1
 29976 0cca 0A       		.uleb128 0xa
 29977 0ccb 18010000 		.4byte	0x118
 29978 0ccf 02       		.byte	0x2
 29979 0cd0 00       		.byte	0
 29980 0cd1 11       		.uleb128 0x11
 29981 0cd2 1E100000 		.4byte	.LASF210
 29982 0cd6 28       		.byte	0x28
 29983 0cd7 08       		.byte	0x8
 29984 0cd8 0502     		.2byte	0x205
 29985 0cda 2D0D0000 		.4byte	0xd2d
 29986 0cde 13       		.uleb128 0x13
 29987 0cdf FE050000 		.4byte	.LASF211
 29988 0ce3 08       		.byte	0x8
 29989 0ce4 0602     		.2byte	0x206
 29990 0ce6 97000000 		.4byte	0x97
 29991 0cea 00       		.byte	0
 29992 0ceb 13       		.uleb128 0x13
 29993 0cec C4030000 		.4byte	.LASF212
 29994 0cf0 08       		.byte	0x8
 29995 0cf1 0702     		.2byte	0x207
 29996 0cf3 2D0D0000 		.4byte	0xd2d
 29997 0cf7 02       		.byte	0x2
 29998 0cf8 13       		.uleb128 0x13
 29999 0cf9 3B0F0000 		.4byte	.LASF213
 30000 0cfd 08       		.byte	0x8
 30001 0cfe 0802     		.2byte	0x208
 30002 0d00 2D0D0000 		.4byte	0xd2d
 30003 0d04 08       		.byte	0x8
 30004 0d05 13       		.uleb128 0x13
 30005 0d06 2A100000 		.4byte	.LASF214
 30006 0d0a 08       		.byte	0x8
 30007 0d0b 0902     		.2byte	0x209
 30008 0d0d 2D0D0000 		.4byte	0xd2d
 30009 0d11 0E       		.byte	0xe
 30010 0d12 13       		.uleb128 0x13
 30011 0d13 D6090000 		.4byte	.LASF215
 30012 0d17 08       		.byte	0x8
 30013 0d18 0A02     		.2byte	0x20a
 30014 0d1a 3D0D0000 		.4byte	0xd3d
 30015 0d1e 14       		.byte	0x14
 30016 0d1f 13       		.uleb128 0x13
 30017 0d20 6F020000 		.4byte	.LASF216
 30018 0d24 08       		.byte	0x8
 30019 0d25 0B02     		.2byte	0x20b
 30020 0d27 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 652


 30021 0d2b 24       		.byte	0x24
 30022 0d2c 00       		.byte	0
 30023 0d2d 09       		.uleb128 0x9
 30024 0d2e C7000000 		.4byte	0xc7
 30025 0d32 3D0D0000 		.4byte	0xd3d
 30026 0d36 0A       		.uleb128 0xa
 30027 0d37 18010000 		.4byte	0x118
 30028 0d3b 02       		.byte	0x2
 30029 0d3c 00       		.byte	0
 30030 0d3d 09       		.uleb128 0x9
 30031 0d3e EB000000 		.4byte	0xeb
 30032 0d42 4D0D0000 		.4byte	0xd4d
 30033 0d46 0A       		.uleb128 0xa
 30034 0d47 18010000 		.4byte	0x118
 30035 0d4b 03       		.byte	0x3
 30036 0d4c 00       		.byte	0
 30037 0d4d 11       		.uleb128 0x11
 30038 0d4e E5040000 		.4byte	.LASF217
 30039 0d52 06       		.byte	0x6
 30040 0d53 08       		.byte	0x8
 30041 0d54 1B02     		.2byte	0x21b
 30042 0d56 8F0D0000 		.4byte	0xd8f
 30043 0d5a 13       		.uleb128 0x13
 30044 0d5b 22090000 		.4byte	.LASF218
 30045 0d5f 08       		.byte	0x8
 30046 0d60 1C02     		.2byte	0x21c
 30047 0d62 97000000 		.4byte	0x97
 30048 0d66 00       		.byte	0
 30049 0d67 13       		.uleb128 0x13
 30050 0d68 0D170000 		.4byte	.LASF219
 30051 0d6c 08       		.byte	0x8
 30052 0d6d 1D02     		.2byte	0x21d
 30053 0d6f 97000000 		.4byte	0x97
 30054 0d73 01       		.byte	0x1
 30055 0d74 13       		.uleb128 0x13
 30056 0d75 B4070000 		.4byte	.LASF220
 30057 0d79 08       		.byte	0x8
 30058 0d7a 1E02     		.2byte	0x21e
 30059 0d7c C7000000 		.4byte	0xc7
 30060 0d80 02       		.byte	0x2
 30061 0d81 13       		.uleb128 0x13
 30062 0d82 1C0C0000 		.4byte	.LASF221
 30063 0d86 08       		.byte	0x8
 30064 0d87 1F02     		.2byte	0x21f
 30065 0d89 C7000000 		.4byte	0xc7
 30066 0d8d 04       		.byte	0x4
 30067 0d8e 00       		.byte	0
 30068 0d8f 17       		.uleb128 0x17
 30069 0d90 69110000 		.4byte	.LASF425
 30070 0d94 02       		.byte	0x2
 30071 0d95 1403     		.2byte	0x314
 30072 0d97 8C000000 		.4byte	0x8c
 30073 0d9b 03       		.byte	0x3
 30074 0d9c B90D0000 		.4byte	0xdb9
 30075 0da0 18       		.uleb128 0x18
 30076 0da1 F8050000 		.4byte	.LASF308
 30077 0da5 02       		.byte	0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 653


 30078 0da6 1403     		.2byte	0x314
 30079 0da8 8C000000 		.4byte	0x8c
 30080 0dac 19       		.uleb128 0x19
 30081 0dad 83020000 		.4byte	.LASF426
 30082 0db1 02       		.byte	0x2
 30083 0db2 1603     		.2byte	0x316
 30084 0db4 8C000000 		.4byte	0x8c
 30085 0db8 00       		.byte	0
 30086 0db9 1A       		.uleb128 0x1a
 30087 0dba D3120000 		.4byte	.LASF222
 30088 0dbe 01       		.byte	0x1
 30089 0dbf 3D       		.byte	0x3d
 30090 0dc0 00000000 		.4byte	.LFB64
 30091 0dc4 64060000 		.4byte	.LFE64-.LFB64
 30092 0dc8 01       		.uleb128 0x1
 30093 0dc9 9C       		.byte	0x9c
 30094 0dca C20E0000 		.4byte	0xec2
 30095 0dce 1B       		.uleb128 0x1b
 30096 0dcf BA070000 		.4byte	.LASF224
 30097 0dd3 01       		.byte	0x1
 30098 0dd4 3F       		.byte	0x3f
 30099 0dd5 97000000 		.4byte	0x97
 30100 0dd9 02       		.uleb128 0x2
 30101 0dda 91       		.byte	0x91
 30102 0ddb 77       		.sleb128 -9
 30103 0ddc 1C       		.uleb128 0x1c
 30104 0ddd 8F0D0000 		.4byte	0xd8f
 30105 0de1 9A040000 		.4byte	.LBB12
 30106 0de5 08000000 		.4byte	.LBE12-.LBB12
 30107 0de9 01       		.byte	0x1
 30108 0dea A2       		.byte	0xa2
 30109 0deb 0A0E0000 		.4byte	0xe0a
 30110 0def 1D       		.uleb128 0x1d
 30111 0df0 A00D0000 		.4byte	0xda0
 30112 0df4 02       		.uleb128 0x2
 30113 0df5 91       		.byte	0x91
 30114 0df6 60       		.sleb128 -32
 30115 0df7 1E       		.uleb128 0x1e
 30116 0df8 9A040000 		.4byte	.LBB13
 30117 0dfc 08000000 		.4byte	.LBE13-.LBB13
 30118 0e00 1F       		.uleb128 0x1f
 30119 0e01 AC0D0000 		.4byte	0xdac
 30120 0e05 02       		.uleb128 0x2
 30121 0e06 91       		.byte	0x91
 30122 0e07 5C       		.sleb128 -36
 30123 0e08 00       		.byte	0
 30124 0e09 00       		.byte	0
 30125 0e0a 1C       		.uleb128 0x1c
 30126 0e0b 8F0D0000 		.4byte	0xd8f
 30127 0e0f B8040000 		.4byte	.LBB14
 30128 0e13 08000000 		.4byte	.LBE14-.LBB14
 30129 0e17 01       		.byte	0x1
 30130 0e18 AE       		.byte	0xae
 30131 0e19 380E0000 		.4byte	0xe38
 30132 0e1d 1D       		.uleb128 0x1d
 30133 0e1e A00D0000 		.4byte	0xda0
 30134 0e22 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 654


 30135 0e23 91       		.byte	0x91
 30136 0e24 70       		.sleb128 -16
 30137 0e25 1E       		.uleb128 0x1e
 30138 0e26 B8040000 		.4byte	.LBB15
 30139 0e2a 08000000 		.4byte	.LBE15-.LBB15
 30140 0e2e 1F       		.uleb128 0x1f
 30141 0e2f AC0D0000 		.4byte	0xdac
 30142 0e33 02       		.uleb128 0x2
 30143 0e34 91       		.byte	0x91
 30144 0e35 58       		.sleb128 -40
 30145 0e36 00       		.byte	0
 30146 0e37 00       		.byte	0
 30147 0e38 20       		.uleb128 0x20
 30148 0e39 8F0D0000 		.4byte	0xd8f
 30149 0e3d F2050000 		.4byte	.LBB16
 30150 0e41 08000000 		.4byte	.LBE16-.LBB16
 30151 0e45 01       		.byte	0x1
 30152 0e46 0A01     		.2byte	0x10a
 30153 0e48 670E0000 		.4byte	0xe67
 30154 0e4c 1D       		.uleb128 0x1d
 30155 0e4d A00D0000 		.4byte	0xda0
 30156 0e51 02       		.uleb128 0x2
 30157 0e52 91       		.byte	0x91
 30158 0e53 6C       		.sleb128 -20
 30159 0e54 1E       		.uleb128 0x1e
 30160 0e55 F2050000 		.4byte	.LBB17
 30161 0e59 08000000 		.4byte	.LBE17-.LBB17
 30162 0e5d 1F       		.uleb128 0x1f
 30163 0e5e AC0D0000 		.4byte	0xdac
 30164 0e62 02       		.uleb128 0x2
 30165 0e63 91       		.byte	0x91
 30166 0e64 54       		.sleb128 -44
 30167 0e65 00       		.byte	0
 30168 0e66 00       		.byte	0
 30169 0e67 20       		.uleb128 0x20
 30170 0e68 8F0D0000 		.4byte	0xd8f
 30171 0e6c 22060000 		.4byte	.LBB18
 30172 0e70 08000000 		.4byte	.LBE18-.LBB18
 30173 0e74 01       		.byte	0x1
 30174 0e75 2801     		.2byte	0x128
 30175 0e77 960E0000 		.4byte	0xe96
 30176 0e7b 1D       		.uleb128 0x1d
 30177 0e7c A00D0000 		.4byte	0xda0
 30178 0e80 02       		.uleb128 0x2
 30179 0e81 91       		.byte	0x91
 30180 0e82 68       		.sleb128 -24
 30181 0e83 1E       		.uleb128 0x1e
 30182 0e84 22060000 		.4byte	.LBB19
 30183 0e88 08000000 		.4byte	.LBE19-.LBB19
 30184 0e8c 1F       		.uleb128 0x1f
 30185 0e8d AC0D0000 		.4byte	0xdac
 30186 0e91 02       		.uleb128 0x2
 30187 0e92 91       		.byte	0x91
 30188 0e93 50       		.sleb128 -48
 30189 0e94 00       		.byte	0
 30190 0e95 00       		.byte	0
 30191 0e96 21       		.uleb128 0x21
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 655


 30192 0e97 8F0D0000 		.4byte	0xd8f
 30193 0e9b 3A060000 		.4byte	.LBB20
 30194 0e9f 08000000 		.4byte	.LBE20-.LBB20
 30195 0ea3 01       		.byte	0x1
 30196 0ea4 2E01     		.2byte	0x12e
 30197 0ea6 1D       		.uleb128 0x1d
 30198 0ea7 A00D0000 		.4byte	0xda0
 30199 0eab 02       		.uleb128 0x2
 30200 0eac 91       		.byte	0x91
 30201 0ead 64       		.sleb128 -28
 30202 0eae 1E       		.uleb128 0x1e
 30203 0eaf 3A060000 		.4byte	.LBB21
 30204 0eb3 08000000 		.4byte	.LBE21-.LBB21
 30205 0eb7 1F       		.uleb128 0x1f
 30206 0eb8 AC0D0000 		.4byte	0xdac
 30207 0ebc 02       		.uleb128 0x2
 30208 0ebd 91       		.byte	0x91
 30209 0ebe 4C       		.sleb128 -52
 30210 0ebf 00       		.byte	0
 30211 0ec0 00       		.byte	0
 30212 0ec1 00       		.byte	0
 30213 0ec2 22       		.uleb128 0x22
 30214 0ec3 00000000 		.4byte	.LASF223
 30215 0ec7 01       		.byte	0x1
 30216 0ec8 3C01     		.2byte	0x13c
 30217 0eca 00000000 		.4byte	.LFB65
 30218 0ece 22000000 		.4byte	.LFE65-.LFB65
 30219 0ed2 01       		.uleb128 0x1
 30220 0ed3 9C       		.byte	0x9c
 30221 0ed4 E90E0000 		.4byte	0xee9
 30222 0ed8 23       		.uleb128 0x23
 30223 0ed9 BB060000 		.4byte	.LASF225
 30224 0edd 01       		.byte	0x1
 30225 0ede 3D01     		.2byte	0x13d
 30226 0ee0 E90E0000 		.4byte	0xee9
 30227 0ee4 03       		.uleb128 0x3
 30228 0ee5 91       		.byte	0x91
 30229 0ee6 9C74     		.sleb128 -1508
 30230 0ee8 00       		.byte	0
 30231 0ee9 09       		.uleb128 0x9
 30232 0eea F9000000 		.4byte	0xf9
 30233 0eee FA0E0000 		.4byte	0xefa
 30234 0ef2 24       		.uleb128 0x24
 30235 0ef3 18010000 		.4byte	0x118
 30236 0ef7 DB05     		.2byte	0x5db
 30237 0ef9 00       		.byte	0
 30238 0efa 22       		.uleb128 0x22
 30239 0efb D3150000 		.4byte	.LASF226
 30240 0eff 01       		.byte	0x1
 30241 0f00 4801     		.2byte	0x148
 30242 0f02 00000000 		.4byte	.LFB66
 30243 0f06 64010000 		.4byte	.LFE66-.LFB66
 30244 0f0a 01       		.uleb128 0x1
 30245 0f0b 9C       		.byte	0x9c
 30246 0f0c 430F0000 		.4byte	0xf43
 30247 0f10 25       		.uleb128 0x25
 30248 0f11 23150000 		.4byte	.LASF229
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 656


 30249 0f15 01       		.byte	0x1
 30250 0f16 4801     		.2byte	0x148
 30251 0f18 A3000000 		.4byte	0xa3
 30252 0f1c 04       		.uleb128 0x4
 30253 0f1d 91       		.byte	0x91
 30254 0f1e B6C47E   		.sleb128 -24010
 30255 0f21 23       		.uleb128 0x23
 30256 0f22 BB060000 		.4byte	.LASF225
 30257 0f26 01       		.byte	0x1
 30258 0f27 4901     		.2byte	0x149
 30259 0f29 430F0000 		.4byte	0xf43
 30260 0f2d 03       		.uleb128 0x3
 30261 0f2e 91       		.byte	0x91
 30262 0f2f D860     		.sleb128 -4008
 30263 0f31 23       		.uleb128 0x23
 30264 0f32 A4090000 		.4byte	.LASF227
 30265 0f36 01       		.byte	0x1
 30266 0f37 4A01     		.2byte	0x14a
 30267 0f39 540F0000 		.4byte	0xf54
 30268 0f3d 04       		.uleb128 0x4
 30269 0f3e 91       		.byte	0x91
 30270 0f3f B8C47E   		.sleb128 -24008
 30271 0f42 00       		.byte	0
 30272 0f43 09       		.uleb128 0x9
 30273 0f44 F9000000 		.4byte	0xf9
 30274 0f48 540F0000 		.4byte	0xf54
 30275 0f4c 24       		.uleb128 0x24
 30276 0f4d 18010000 		.4byte	0x118
 30277 0f51 9F0F     		.2byte	0xf9f
 30278 0f53 00       		.byte	0
 30279 0f54 09       		.uleb128 0x9
 30280 0f55 F9000000 		.4byte	0xf9
 30281 0f59 650F0000 		.4byte	0xf65
 30282 0f5d 24       		.uleb128 0x24
 30283 0f5e 18010000 		.4byte	0x118
 30284 0f62 1F4E     		.2byte	0x4e1f
 30285 0f64 00       		.byte	0
 30286 0f65 22       		.uleb128 0x22
 30287 0f66 29020000 		.4byte	.LASF228
 30288 0f6a 01       		.byte	0x1
 30289 0f6b 7A01     		.2byte	0x17a
 30290 0f6d 00000000 		.4byte	.LFB67
 30291 0f71 A4320000 		.4byte	.LFE67-.LFB67
 30292 0f75 01       		.uleb128 0x1
 30293 0f76 9C       		.byte	0x9c
 30294 0f77 09110000 		.4byte	0x1109
 30295 0f7b 25       		.uleb128 0x25
 30296 0f7c EB0E0000 		.4byte	.LASF230
 30297 0f80 01       		.byte	0x1
 30298 0f81 7A01     		.2byte	0x17a
 30299 0f83 09110000 		.4byte	0x1109
 30300 0f87 03       		.uleb128 0x3
 30301 0f88 91       		.byte	0x91
 30302 0f89 9C50     		.sleb128 -6116
 30303 0f8b 25       		.uleb128 0x25
 30304 0f8c AC150000 		.4byte	.LASF231
 30305 0f90 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 657


 30306 0f91 7A01     		.2byte	0x17a
 30307 0f93 0F110000 		.4byte	0x110f
 30308 0f97 03       		.uleb128 0x3
 30309 0f98 91       		.byte	0x91
 30310 0f99 9850     		.sleb128 -6120
 30311 0f9b 25       		.uleb128 0x25
 30312 0f9c D0030000 		.4byte	.LASF232
 30313 0fa0 01       		.byte	0x1
 30314 0fa1 7B01     		.2byte	0x17b
 30315 0fa3 0F110000 		.4byte	0x110f
 30316 0fa7 03       		.uleb128 0x3
 30317 0fa8 91       		.byte	0x91
 30318 0fa9 9450     		.sleb128 -6124
 30319 0fab 25       		.uleb128 0x25
 30320 0fac 000E0000 		.4byte	.LASF233
 30321 0fb0 01       		.byte	0x1
 30322 0fb1 7B01     		.2byte	0x17b
 30323 0fb3 0F110000 		.4byte	0x110f
 30324 0fb7 03       		.uleb128 0x3
 30325 0fb8 91       		.byte	0x91
 30326 0fb9 9050     		.sleb128 -6128
 30327 0fbb 25       		.uleb128 0x25
 30328 0fbc ED140000 		.4byte	.LASF234
 30329 0fc0 01       		.byte	0x1
 30330 0fc1 7C01     		.2byte	0x17c
 30331 0fc3 0F110000 		.4byte	0x110f
 30332 0fc7 02       		.uleb128 0x2
 30333 0fc8 91       		.byte	0x91
 30334 0fc9 00       		.sleb128 0
 30335 0fca 25       		.uleb128 0x25
 30336 0fcb 17090000 		.4byte	.LASF235
 30337 0fcf 01       		.byte	0x1
 30338 0fd0 7C01     		.2byte	0x17c
 30339 0fd2 15110000 		.4byte	0x1115
 30340 0fd6 02       		.uleb128 0x2
 30341 0fd7 91       		.byte	0x91
 30342 0fd8 04       		.sleb128 4
 30343 0fd9 25       		.uleb128 0x25
 30344 0fda 690C0000 		.4byte	.LASF236
 30345 0fde 01       		.byte	0x1
 30346 0fdf 7D01     		.2byte	0x17d
 30347 0fe1 0F110000 		.4byte	0x110f
 30348 0fe5 02       		.uleb128 0x2
 30349 0fe6 91       		.byte	0x91
 30350 0fe7 08       		.sleb128 8
 30351 0fe8 25       		.uleb128 0x25
 30352 0fe9 B6090000 		.4byte	.LASF237
 30353 0fed 01       		.byte	0x1
 30354 0fee 7D01     		.2byte	0x17d
 30355 0ff0 15110000 		.4byte	0x1115
 30356 0ff4 02       		.uleb128 0x2
 30357 0ff5 91       		.byte	0x91
 30358 0ff6 0C       		.sleb128 12
 30359 0ff7 23       		.uleb128 0x23
 30360 0ff8 16070000 		.4byte	.LASF238
 30361 0ffc 01       		.byte	0x1
 30362 0ffd 8001     		.2byte	0x180
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 658


 30363 0fff 1B110000 		.4byte	0x111b
 30364 1003 03       		.uleb128 0x3
 30365 1004 91       		.byte	0x91
 30366 1005 E450     		.sleb128 -6044
 30367 1007 23       		.uleb128 0x23
 30368 1008 E1090000 		.4byte	.LASF239
 30369 100c 01       		.byte	0x1
 30370 100d 8101     		.2byte	0x181
 30371 100f A3000000 		.4byte	0xa3
 30372 1013 02       		.uleb128 0x2
 30373 1014 91       		.byte	0x91
 30374 1015 60       		.sleb128 -32
 30375 1016 26       		.uleb128 0x26
 30376 1017 6900     		.ascii	"i\000"
 30377 1019 01       		.byte	0x1
 30378 101a 8401     		.2byte	0x184
 30379 101c 97000000 		.4byte	0x97
 30380 1020 02       		.uleb128 0x2
 30381 1021 91       		.byte	0x91
 30382 1022 67       		.sleb128 -25
 30383 1023 26       		.uleb128 0x26
 30384 1024 6A00     		.ascii	"j\000"
 30385 1026 01       		.byte	0x1
 30386 1027 8401     		.2byte	0x184
 30387 1029 97000000 		.4byte	0x97
 30388 102d 02       		.uleb128 0x2
 30389 102e 91       		.byte	0x91
 30390 102f 66       		.sleb128 -26
 30391 1030 26       		.uleb128 0x26
 30392 1031 69647800 		.ascii	"idx\000"
 30393 1035 01       		.byte	0x1
 30394 1036 8501     		.2byte	0x185
 30395 1038 97000000 		.4byte	0x97
 30396 103c 02       		.uleb128 0x2
 30397 103d 91       		.byte	0x91
 30398 103e 65       		.sleb128 -27
 30399 103f 23       		.uleb128 0x23
 30400 1040 08130000 		.4byte	.LASF240
 30401 1044 01       		.byte	0x1
 30402 1045 8601     		.2byte	0x186
 30403 1047 97000000 		.4byte	0x97
 30404 104b 02       		.uleb128 0x2
 30405 104c 91       		.byte	0x91
 30406 104d 64       		.sleb128 -28
 30407 104e 26       		.uleb128 0x26
 30408 104f 736F6400 		.ascii	"sod\000"
 30409 1053 01       		.byte	0x1
 30410 1054 8701     		.2byte	0x187
 30411 1056 97000000 		.4byte	0x97
 30412 105a 02       		.uleb128 0x2
 30413 105b 91       		.byte	0x91
 30414 105c 63       		.sleb128 -29
 30415 105d 23       		.uleb128 0x23
 30416 105e 09000000 		.4byte	.LASF241
 30417 1062 01       		.byte	0x1
 30418 1063 8801     		.2byte	0x188
 30419 1065 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 659


 30420 1069 02       		.uleb128 0x2
 30421 106a 91       		.byte	0x91
 30422 106b 62       		.sleb128 -30
 30423 106c 23       		.uleb128 0x23
 30424 106d F3160000 		.4byte	.LASF242
 30425 1071 01       		.byte	0x1
 30426 1072 8901     		.2byte	0x189
 30427 1074 2C110000 		.4byte	0x112c
 30428 1078 03       		.uleb128 0x3
 30429 1079 91       		.byte	0x91
 30430 107a B050     		.sleb128 -6096
 30431 107c 23       		.uleb128 0x23
 30432 107d D5140000 		.4byte	.LASF243
 30433 1081 01       		.byte	0x1
 30434 1082 8A01     		.2byte	0x18a
 30435 1084 EB000000 		.4byte	0xeb
 30436 1088 03       		.uleb128 0x3
 30437 1089 91       		.byte	0x91
 30438 108a AC50     		.sleb128 -6100
 30439 108c 23       		.uleb128 0x23
 30440 108d 99130000 		.4byte	.LASF244
 30441 1091 01       		.byte	0x1
 30442 1092 8B01     		.2byte	0x18b
 30443 1094 C7000000 		.4byte	0xc7
 30444 1098 03       		.uleb128 0x3
 30445 1099 91       		.byte	0x91
 30446 109a AA50     		.sleb128 -6102
 30447 109c 23       		.uleb128 0x23
 30448 109d 490E0000 		.4byte	.LASF245
 30449 10a1 01       		.byte	0x1
 30450 10a2 8C01     		.2byte	0x18c
 30451 10a4 A3000000 		.4byte	0xa3
 30452 10a8 03       		.uleb128 0x3
 30453 10a9 91       		.byte	0x91
 30454 10aa A850     		.sleb128 -6104
 30455 10ac 23       		.uleb128 0x23
 30456 10ad F6140000 		.4byte	.LASF246
 30457 10b1 01       		.byte	0x1
 30458 10b2 8D01     		.2byte	0x18d
 30459 10b4 D3000000 		.4byte	0xd3
 30460 10b8 03       		.uleb128 0x3
 30461 10b9 91       		.byte	0x91
 30462 10ba A450     		.sleb128 -6108
 30463 10bc 23       		.uleb128 0x23
 30464 10bd FE0F0000 		.4byte	.LASF247
 30465 10c1 01       		.byte	0x1
 30466 10c2 8E01     		.2byte	0x18e
 30467 10c4 AF000000 		.4byte	0xaf
 30468 10c8 03       		.uleb128 0x3
 30469 10c9 91       		.byte	0x91
 30470 10ca A050     		.sleb128 -6112
 30471 10cc 23       		.uleb128 0x23
 30472 10cd 970F0000 		.4byte	.LASF248
 30473 10d1 01       		.byte	0x1
 30474 10d2 9001     		.2byte	0x190
 30475 10d4 97000000 		.4byte	0x97
 30476 10d8 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 660


 30477 10d9 91       		.byte	0x91
 30478 10da 5F       		.sleb128 -33
 30479 10db 23       		.uleb128 0x23
 30480 10dc 84010000 		.4byte	.LASF249
 30481 10e0 01       		.byte	0x1
 30482 10e1 9101     		.2byte	0x191
 30483 10e3 97000000 		.4byte	0x97
 30484 10e7 02       		.uleb128 0x2
 30485 10e8 91       		.byte	0x91
 30486 10e9 5E       		.sleb128 -34
 30487 10ea 23       		.uleb128 0x23
 30488 10eb C60C0000 		.4byte	.LASF250
 30489 10ef 01       		.byte	0x1
 30490 10f0 9301     		.2byte	0x193
 30491 10f2 0F110000 		.4byte	0x110f
 30492 10f6 02       		.uleb128 0x2
 30493 10f7 91       		.byte	0x91
 30494 10f8 58       		.sleb128 -40
 30495 10f9 23       		.uleb128 0x23
 30496 10fa 18020000 		.4byte	.LASF251
 30497 10fe 01       		.byte	0x1
 30498 10ff 9401     		.2byte	0x194
 30499 1101 0F110000 		.4byte	0x110f
 30500 1105 02       		.uleb128 0x2
 30501 1106 91       		.byte	0x91
 30502 1107 54       		.sleb128 -44
 30503 1108 00       		.byte	0
 30504 1109 07       		.uleb128 0x7
 30505 110a 04       		.byte	0x4
 30506 110b 0F110000 		.4byte	0x110f
 30507 110f 07       		.uleb128 0x7
 30508 1110 04       		.byte	0x4
 30509 1111 97000000 		.4byte	0x97
 30510 1115 07       		.uleb128 0x7
 30511 1116 04       		.byte	0x4
 30512 1117 25010000 		.4byte	0x125
 30513 111b 09       		.uleb128 0x9
 30514 111c 97000000 		.4byte	0x97
 30515 1120 2C110000 		.4byte	0x112c
 30516 1124 24       		.uleb128 0x24
 30517 1125 18010000 		.4byte	0x118
 30518 1129 6F17     		.2byte	0x176f
 30519 112b 00       		.byte	0
 30520 112c 09       		.uleb128 0x9
 30521 112d F9000000 		.4byte	0xf9
 30522 1131 3C110000 		.4byte	0x113c
 30523 1135 0A       		.uleb128 0xa
 30524 1136 18010000 		.4byte	0x118
 30525 113a 31       		.byte	0x31
 30526 113b 00       		.byte	0
 30527 113c 22       		.uleb128 0x22
 30528 113d E3100000 		.4byte	.LASF252
 30529 1141 01       		.byte	0x1
 30530 1142 8203     		.2byte	0x382
 30531 1144 00000000 		.4byte	.LFB68
 30532 1148 48190000 		.4byte	.LFE68-.LFB68
 30533 114c 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 661


 30534 114d 9C       		.byte	0x9c
 30535 114e 1A130000 		.4byte	0x131a
 30536 1152 25       		.uleb128 0x25
 30537 1153 22080000 		.4byte	.LASF253
 30538 1157 01       		.byte	0x1
 30539 1158 8203     		.2byte	0x382
 30540 115a A3000000 		.4byte	0xa3
 30541 115e 03       		.uleb128 0x3
 30542 115f 91       		.byte	0x91
 30543 1160 E674     		.sleb128 -1434
 30544 1162 26       		.uleb128 0x26
 30545 1163 6900     		.ascii	"i\000"
 30546 1165 01       		.byte	0x1
 30547 1166 8303     		.2byte	0x383
 30548 1168 97000000 		.4byte	0x97
 30549 116c 02       		.uleb128 0x2
 30550 116d 91       		.byte	0x91
 30551 116e 67       		.sleb128 -25
 30552 116f 26       		.uleb128 0x26
 30553 1170 6A00     		.ascii	"j\000"
 30554 1172 01       		.byte	0x1
 30555 1173 8303     		.2byte	0x383
 30556 1175 97000000 		.4byte	0x97
 30557 1179 02       		.uleb128 0x2
 30558 117a 91       		.byte	0x91
 30559 117b 66       		.sleb128 -26
 30560 117c 26       		.uleb128 0x26
 30561 117d 736F6400 		.ascii	"sod\000"
 30562 1181 01       		.byte	0x1
 30563 1182 8403     		.2byte	0x384
 30564 1184 97000000 		.4byte	0x97
 30565 1188 02       		.uleb128 0x2
 30566 1189 91       		.byte	0x91
 30567 118a 65       		.sleb128 -27
 30568 118b 23       		.uleb128 0x23
 30569 118c B00C0000 		.4byte	.LASF254
 30570 1190 01       		.byte	0x1
 30571 1191 8503     		.2byte	0x385
 30572 1193 97000000 		.4byte	0x97
 30573 1197 02       		.uleb128 0x2
 30574 1198 91       		.byte	0x91
 30575 1199 5A       		.sleb128 -38
 30576 119a 23       		.uleb128 0x23
 30577 119b 99130000 		.4byte	.LASF244
 30578 119f 01       		.byte	0x1
 30579 11a0 8603     		.2byte	0x386
 30580 11a2 C7000000 		.4byte	0xc7
 30581 11a6 02       		.uleb128 0x2
 30582 11a7 91       		.byte	0x91
 30583 11a8 58       		.sleb128 -40
 30584 11a9 23       		.uleb128 0x23
 30585 11aa 490E0000 		.4byte	.LASF245
 30586 11ae 01       		.byte	0x1
 30587 11af 8703     		.2byte	0x387
 30588 11b1 A3000000 		.4byte	0xa3
 30589 11b5 02       		.uleb128 0x2
 30590 11b6 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 662


 30591 11b7 56       		.sleb128 -42
 30592 11b8 23       		.uleb128 0x23
 30593 11b9 F6140000 		.4byte	.LASF246
 30594 11bd 01       		.byte	0x1
 30595 11be 8803     		.2byte	0x388
 30596 11c0 D3000000 		.4byte	0xd3
 30597 11c4 02       		.uleb128 0x2
 30598 11c5 91       		.byte	0x91
 30599 11c6 50       		.sleb128 -48
 30600 11c7 23       		.uleb128 0x23
 30601 11c8 FE0F0000 		.4byte	.LASF247
 30602 11cc 01       		.byte	0x1
 30603 11cd 8903     		.2byte	0x389
 30604 11cf AF000000 		.4byte	0xaf
 30605 11d3 02       		.uleb128 0x2
 30606 11d4 91       		.byte	0x91
 30607 11d5 4C       		.sleb128 -52
 30608 11d6 23       		.uleb128 0x23
 30609 11d7 D5140000 		.4byte	.LASF243
 30610 11db 01       		.byte	0x1
 30611 11dc 8A03     		.2byte	0x38a
 30612 11de EB000000 		.4byte	0xeb
 30613 11e2 02       		.uleb128 0x2
 30614 11e3 91       		.byte	0x91
 30615 11e4 48       		.sleb128 -56
 30616 11e5 23       		.uleb128 0x23
 30617 11e6 970F0000 		.4byte	.LASF248
 30618 11ea 01       		.byte	0x1
 30619 11eb 8C03     		.2byte	0x38c
 30620 11ed 97000000 		.4byte	0x97
 30621 11f1 02       		.uleb128 0x2
 30622 11f2 91       		.byte	0x91
 30623 11f3 5D       		.sleb128 -35
 30624 11f4 23       		.uleb128 0x23
 30625 11f5 84010000 		.4byte	.LASF249
 30626 11f9 01       		.byte	0x1
 30627 11fa 8D03     		.2byte	0x38d
 30628 11fc 97000000 		.4byte	0x97
 30629 1200 02       		.uleb128 0x2
 30630 1201 91       		.byte	0x91
 30631 1202 5C       		.sleb128 -36
 30632 1203 23       		.uleb128 0x23
 30633 1204 E6030000 		.4byte	.LASF255
 30634 1208 01       		.byte	0x1
 30635 1209 9003     		.2byte	0x390
 30636 120b 1A130000 		.4byte	0x131a
 30637 120f 02       		.uleb128 0x2
 30638 1210 91       		.byte	0x91
 30639 1211 60       		.sleb128 -32
 30640 1212 23       		.uleb128 0x23
 30641 1213 EB0E0000 		.4byte	.LASF230
 30642 1217 01       		.byte	0x1
 30643 1218 9803     		.2byte	0x398
 30644 121a 20130000 		.4byte	0x1320
 30645 121e 03       		.uleb128 0x3
 30646 121f 91       		.byte	0x91
 30647 1220 FC7C     		.sleb128 -388
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 663


 30648 1222 23       		.uleb128 0x23
 30649 1223 AC150000 		.4byte	.LASF231
 30650 1227 01       		.byte	0x1
 30651 1228 F603     		.2byte	0x3f6
 30652 122a 30130000 		.4byte	0x1330
 30653 122e 03       		.uleb128 0x3
 30654 122f 91       		.byte	0x91
 30655 1230 A87C     		.sleb128 -472
 30656 1232 23       		.uleb128 0x23
 30657 1233 D0030000 		.4byte	.LASF232
 30658 1237 01       		.byte	0x1
 30659 1238 1204     		.2byte	0x412
 30660 123a 30130000 		.4byte	0x1330
 30661 123e 03       		.uleb128 0x3
 30662 123f 91       		.byte	0x91
 30663 1240 D47B     		.sleb128 -556
 30664 1242 23       		.uleb128 0x23
 30665 1243 000E0000 		.4byte	.LASF233
 30666 1247 01       		.byte	0x1
 30667 1248 2E04     		.2byte	0x42e
 30668 124a 30130000 		.4byte	0x1330
 30669 124e 03       		.uleb128 0x3
 30670 124f 91       		.byte	0x91
 30671 1250 807B     		.sleb128 -640
 30672 1252 23       		.uleb128 0x23
 30673 1253 17090000 		.4byte	.LASF235
 30674 1257 01       		.byte	0x1
 30675 1258 4B04     		.2byte	0x44b
 30676 125a 40130000 		.4byte	0x1340
 30677 125e 03       		.uleb128 0x3
 30678 125f 91       		.byte	0x91
 30679 1260 B478     		.sleb128 -972
 30680 1262 23       		.uleb128 0x23
 30681 1263 34160000 		.4byte	.LASF256
 30682 1267 01       		.byte	0x1
 30683 1268 6804     		.2byte	0x468
 30684 126a 50130000 		.4byte	0x1350
 30685 126e 03       		.uleb128 0x3
 30686 126f 91       		.byte	0x91
 30687 1270 BC77     		.sleb128 -1092
 30688 1272 23       		.uleb128 0x23
 30689 1273 2E000000 		.4byte	.LASF257
 30690 1277 01       		.byte	0x1
 30691 1278 6B04     		.2byte	0x46b
 30692 127a 60130000 		.4byte	0x1360
 30693 127e 03       		.uleb128 0x3
 30694 127f 91       		.byte	0x91
 30695 1280 8477     		.sleb128 -1148
 30696 1282 23       		.uleb128 0x23
 30697 1283 B6090000 		.4byte	.LASF237
 30698 1287 01       		.byte	0x1
 30699 1288 7304     		.2byte	0x473
 30700 128a 70130000 		.4byte	0x1370
 30701 128e 03       		.uleb128 0x3
 30702 128f 91       		.byte	0x91
 30703 1290 D476     		.sleb128 -1196
 30704 1292 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 664


 30705 1293 ED140000 		.4byte	.LASF234
 30706 1297 01       		.byte	0x1
 30707 1298 8204     		.2byte	0x482
 30708 129a 80130000 		.4byte	0x1380
 30709 129e 03       		.uleb128 0x3
 30710 129f 91       		.byte	0x91
 30711 12a0 B076     		.sleb128 -1232
 30712 12a2 23       		.uleb128 0x23
 30713 12a3 F10E0000 		.4byte	.LASF258
 30714 12a7 01       		.byte	0x1
 30715 12a8 8304     		.2byte	0x483
 30716 12aa 90130000 		.4byte	0x1390
 30717 12ae 03       		.uleb128 0x3
 30718 12af 91       		.byte	0x91
 30719 12b0 A476     		.sleb128 -1244
 30720 12b2 23       		.uleb128 0x23
 30721 12b3 EA0D0000 		.4byte	.LASF259
 30722 12b7 01       		.byte	0x1
 30723 12b8 8404     		.2byte	0x484
 30724 12ba A0130000 		.4byte	0x13a0
 30725 12be 03       		.uleb128 0x3
 30726 12bf 91       		.byte	0x91
 30727 12c0 9076     		.sleb128 -1264
 30728 12c2 23       		.uleb128 0x23
 30729 12c3 10100000 		.4byte	.LASF260
 30730 12c7 01       		.byte	0x1
 30731 12c8 8504     		.2byte	0x485
 30732 12ca 97000000 		.4byte	0x97
 30733 12ce 02       		.uleb128 0x2
 30734 12cf 91       		.byte	0x91
 30735 12d0 5B       		.sleb128 -37
 30736 12d1 23       		.uleb128 0x23
 30737 12d2 690C0000 		.4byte	.LASF236
 30738 12d6 01       		.byte	0x1
 30739 12d7 8E04     		.2byte	0x48e
 30740 12d9 30130000 		.4byte	0x1330
 30741 12dd 03       		.uleb128 0x3
 30742 12de 91       		.byte	0x91
 30743 12df BC75     		.sleb128 -1348
 30744 12e1 23       		.uleb128 0x23
 30745 12e2 5B160000 		.4byte	.LASF261
 30746 12e6 01       		.byte	0x1
 30747 12e7 9904     		.2byte	0x499
 30748 12e9 30130000 		.4byte	0x1330
 30749 12ed 03       		.uleb128 0x3
 30750 12ee 91       		.byte	0x91
 30751 12ef E874     		.sleb128 -1432
 30752 12f1 1E       		.uleb128 0x1e
 30753 12f2 B2180000 		.4byte	.LBB22
 30754 12f6 86000000 		.4byte	.LBE22-.LBB22
 30755 12fa 26       		.uleb128 0x26
 30756 12fb 69647800 		.ascii	"idx\000"
 30757 12ff 01       		.byte	0x1
 30758 1300 0205     		.2byte	0x502
 30759 1302 97000000 		.4byte	0x97
 30760 1306 02       		.uleb128 0x2
 30761 1307 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 665


 30762 1308 5F       		.sleb128 -33
 30763 1309 23       		.uleb128 0x23
 30764 130a 72060000 		.4byte	.LASF262
 30765 130e 01       		.byte	0x1
 30766 130f 0205     		.2byte	0x502
 30767 1311 97000000 		.4byte	0x97
 30768 1315 02       		.uleb128 0x2
 30769 1316 91       		.byte	0x91
 30770 1317 5E       		.sleb128 -34
 30771 1318 00       		.byte	0
 30772 1319 00       		.byte	0
 30773 131a 07       		.uleb128 0x7
 30774 131b 04       		.byte	0x4
 30775 131c 9C0B0000 		.4byte	0xb9c
 30776 1320 09       		.uleb128 0x9
 30777 1321 0F110000 		.4byte	0x110f
 30778 1325 30130000 		.4byte	0x1330
 30779 1329 0A       		.uleb128 0xa
 30780 132a 18010000 		.4byte	0x118
 30781 132e 52       		.byte	0x52
 30782 132f 00       		.byte	0
 30783 1330 09       		.uleb128 0x9
 30784 1331 97000000 		.4byte	0x97
 30785 1335 40130000 		.4byte	0x1340
 30786 1339 0A       		.uleb128 0xa
 30787 133a 18010000 		.4byte	0x118
 30788 133e 52       		.byte	0x52
 30789 133f 00       		.byte	0
 30790 1340 09       		.uleb128 0x9
 30791 1341 25010000 		.4byte	0x125
 30792 1345 50130000 		.4byte	0x1350
 30793 1349 0A       		.uleb128 0xa
 30794 134a 18010000 		.4byte	0x118
 30795 134e 52       		.byte	0x52
 30796 134f 00       		.byte	0
 30797 1350 09       		.uleb128 0x9
 30798 1351 F9000000 		.4byte	0xf9
 30799 1355 60130000 		.4byte	0x1360
 30800 1359 0A       		.uleb128 0xa
 30801 135a 18010000 		.4byte	0x118
 30802 135e 75       		.byte	0x75
 30803 135f 00       		.byte	0
 30804 1360 09       		.uleb128 0x9
 30805 1361 F9000000 		.4byte	0xf9
 30806 1365 70130000 		.4byte	0x1370
 30807 1369 0A       		.uleb128 0xa
 30808 136a 18010000 		.4byte	0x118
 30809 136e 37       		.byte	0x37
 30810 136f 00       		.byte	0
 30811 1370 09       		.uleb128 0x9
 30812 1371 25010000 		.4byte	0x125
 30813 1375 80130000 		.4byte	0x1380
 30814 1379 0A       		.uleb128 0xa
 30815 137a 18010000 		.4byte	0x118
 30816 137e 0B       		.byte	0xb
 30817 137f 00       		.byte	0
 30818 1380 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 666


 30819 1381 97000000 		.4byte	0x97
 30820 1385 90130000 		.4byte	0x1390
 30821 1389 0A       		.uleb128 0xa
 30822 138a 18010000 		.4byte	0x118
 30823 138e 20       		.byte	0x20
 30824 138f 00       		.byte	0
 30825 1390 09       		.uleb128 0x9
 30826 1391 97000000 		.4byte	0x97
 30827 1395 A0130000 		.4byte	0x13a0
 30828 1399 0A       		.uleb128 0xa
 30829 139a 18010000 		.4byte	0x118
 30830 139e 08       		.byte	0x8
 30831 139f 00       		.byte	0
 30832 13a0 09       		.uleb128 0x9
 30833 13a1 97000000 		.4byte	0x97
 30834 13a5 B0130000 		.4byte	0x13b0
 30835 13a9 0A       		.uleb128 0xa
 30836 13aa 18010000 		.4byte	0x118
 30837 13ae 11       		.byte	0x11
 30838 13af 00       		.byte	0
 30839 13b0 22       		.uleb128 0x22
 30840 13b1 7A040000 		.4byte	.LASF263
 30841 13b5 01       		.byte	0x1
 30842 13b6 1305     		.2byte	0x513
 30843 13b8 00000000 		.4byte	.LFB69
 30844 13bc DC140000 		.4byte	.LFE69-.LFB69
 30845 13c0 01       		.uleb128 0x1
 30846 13c1 9C       		.byte	0x9c
 30847 13c2 52140000 		.4byte	0x1452
 30848 13c6 25       		.uleb128 0x25
 30849 13c7 22080000 		.4byte	.LASF253
 30850 13cb 01       		.byte	0x1
 30851 13cc 1305     		.2byte	0x513
 30852 13ce A3000000 		.4byte	0xa3
 30853 13d2 02       		.uleb128 0x2
 30854 13d3 91       		.byte	0x91
 30855 13d4 56       		.sleb128 -42
 30856 13d5 26       		.uleb128 0x26
 30857 13d6 6900     		.ascii	"i\000"
 30858 13d8 01       		.byte	0x1
 30859 13d9 1505     		.2byte	0x515
 30860 13db 97000000 		.4byte	0x97
 30861 13df 02       		.uleb128 0x2
 30862 13e0 91       		.byte	0x91
 30863 13e1 67       		.sleb128 -25
 30864 13e2 26       		.uleb128 0x26
 30865 13e3 6A00     		.ascii	"j\000"
 30866 13e5 01       		.byte	0x1
 30867 13e6 1505     		.2byte	0x515
 30868 13e8 97000000 		.4byte	0x97
 30869 13ec 02       		.uleb128 0x2
 30870 13ed 91       		.byte	0x91
 30871 13ee 66       		.sleb128 -26
 30872 13ef 23       		.uleb128 0x23
 30873 13f0 1B0E0000 		.4byte	.LASF264
 30874 13f4 01       		.byte	0x1
 30875 13f5 1605     		.2byte	0x516
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 667


 30876 13f7 97000000 		.4byte	0x97
 30877 13fb 02       		.uleb128 0x2
 30878 13fc 91       		.byte	0x91
 30879 13fd 62       		.sleb128 -30
 30880 13fe 23       		.uleb128 0x23
 30881 13ff D5140000 		.4byte	.LASF243
 30882 1403 01       		.byte	0x1
 30883 1404 1705     		.2byte	0x517
 30884 1406 EB000000 		.4byte	0xeb
 30885 140a 02       		.uleb128 0x2
 30886 140b 91       		.byte	0x91
 30887 140c 5C       		.sleb128 -36
 30888 140d 23       		.uleb128 0x23
 30889 140e 53040000 		.4byte	.LASF265
 30890 1412 01       		.byte	0x1
 30891 1413 1705     		.2byte	0x517
 30892 1415 EB000000 		.4byte	0xeb
 30893 1419 02       		.uleb128 0x2
 30894 141a 91       		.byte	0x91
 30895 141b 58       		.sleb128 -40
 30896 141c 23       		.uleb128 0x23
 30897 141d 970F0000 		.4byte	.LASF248
 30898 1421 01       		.byte	0x1
 30899 1422 1905     		.2byte	0x519
 30900 1424 97000000 		.4byte	0x97
 30901 1428 02       		.uleb128 0x2
 30902 1429 91       		.byte	0x91
 30903 142a 64       		.sleb128 -28
 30904 142b 23       		.uleb128 0x23
 30905 142c 84010000 		.4byte	.LASF249
 30906 1430 01       		.byte	0x1
 30907 1431 1A05     		.2byte	0x51a
 30908 1433 97000000 		.4byte	0x97
 30909 1437 02       		.uleb128 0x2
 30910 1438 91       		.byte	0x91
 30911 1439 63       		.sleb128 -29
 30912 143a 1E       		.uleb128 0x1e
 30913 143b 080B0000 		.4byte	.LBB23
 30914 143f 26000000 		.4byte	.LBE23-.LBB23
 30915 1443 26       		.uleb128 0x26
 30916 1444 6900     		.ascii	"i\000"
 30917 1446 01       		.byte	0x1
 30918 1447 C105     		.2byte	0x5c1
 30919 1449 97000000 		.4byte	0x97
 30920 144d 02       		.uleb128 0x2
 30921 144e 91       		.byte	0x91
 30922 144f 65       		.sleb128 -27
 30923 1450 00       		.byte	0
 30924 1451 00       		.byte	0
 30925 1452 22       		.uleb128 0x22
 30926 1453 410A0000 		.4byte	.LASF266
 30927 1457 01       		.byte	0x1
 30928 1458 6D06     		.2byte	0x66d
 30929 145a 00000000 		.4byte	.LFB70
 30930 145e F40D0000 		.4byte	.LFE70-.LFB70
 30931 1462 01       		.uleb128 0x1
 30932 1463 9C       		.byte	0x9c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 668


 30933 1464 E1150000 		.4byte	0x15e1
 30934 1468 25       		.uleb128 0x25
 30935 1469 22080000 		.4byte	.LASF253
 30936 146d 01       		.byte	0x1
 30937 146e 6D06     		.2byte	0x66d
 30938 1470 A3000000 		.4byte	0xa3
 30939 1474 03       		.uleb128 0x3
 30940 1475 91       		.byte	0x91
 30941 1476 CE72     		.sleb128 -1714
 30942 1478 23       		.uleb128 0x23
 30943 1479 16070000 		.4byte	.LASF238
 30944 147d 01       		.byte	0x1
 30945 147e 7006     		.2byte	0x670
 30946 1480 E1150000 		.4byte	0x15e1
 30947 1484 03       		.uleb128 0x3
 30948 1485 91       		.byte	0x91
 30949 1486 DC74     		.sleb128 -1444
 30950 1488 23       		.uleb128 0x23
 30951 1489 86130000 		.4byte	.LASF267
 30952 148d 01       		.byte	0x1
 30953 148e 7706     		.2byte	0x677
 30954 1490 A3000000 		.4byte	0xa3
 30955 1494 02       		.uleb128 0x2
 30956 1495 91       		.byte	0x91
 30957 1496 62       		.sleb128 -30
 30958 1497 23       		.uleb128 0x23
 30959 1498 86060000 		.4byte	.LASF268
 30960 149c 01       		.byte	0x1
 30961 149d 7806     		.2byte	0x678
 30962 149f A3000000 		.4byte	0xa3
 30963 14a3 02       		.uleb128 0x2
 30964 14a4 91       		.byte	0x91
 30965 14a5 6E       		.sleb128 -18
 30966 14a6 23       		.uleb128 0x23
 30967 14a7 7F0A0000 		.4byte	.LASF269
 30968 14ab 01       		.byte	0x1
 30969 14ac 7906     		.2byte	0x679
 30970 14ae A3000000 		.4byte	0xa3
 30971 14b2 02       		.uleb128 0x2
 30972 14b3 91       		.byte	0x91
 30973 14b4 60       		.sleb128 -32
 30974 14b5 23       		.uleb128 0x23
 30975 14b6 E1090000 		.4byte	.LASF239
 30976 14ba 01       		.byte	0x1
 30977 14bb 7A06     		.2byte	0x67a
 30978 14bd A3000000 		.4byte	0xa3
 30979 14c1 02       		.uleb128 0x2
 30980 14c2 91       		.byte	0x91
 30981 14c3 5E       		.sleb128 -34
 30982 14c4 26       		.uleb128 0x26
 30983 14c5 6900     		.ascii	"i\000"
 30984 14c7 01       		.byte	0x1
 30985 14c8 8206     		.2byte	0x682
 30986 14ca A3000000 		.4byte	0xa3
 30987 14ce 02       		.uleb128 0x2
 30988 14cf 91       		.byte	0x91
 30989 14d0 6C       		.sleb128 -20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 669


 30990 14d1 26       		.uleb128 0x26
 30991 14d2 6A00     		.ascii	"j\000"
 30992 14d4 01       		.byte	0x1
 30993 14d5 8206     		.2byte	0x682
 30994 14d7 A3000000 		.4byte	0xa3
 30995 14db 02       		.uleb128 0x2
 30996 14dc 91       		.byte	0x91
 30997 14dd 6A       		.sleb128 -22
 30998 14de 26       		.uleb128 0x26
 30999 14df 6B00     		.ascii	"k\000"
 31000 14e1 01       		.byte	0x1
 31001 14e2 8206     		.2byte	0x682
 31002 14e4 A3000000 		.4byte	0xa3
 31003 14e8 02       		.uleb128 0x2
 31004 14e9 91       		.byte	0x91
 31005 14ea 68       		.sleb128 -24
 31006 14eb 26       		.uleb128 0x26
 31007 14ec 6800     		.ascii	"h\000"
 31008 14ee 01       		.byte	0x1
 31009 14ef 8206     		.2byte	0x682
 31010 14f1 A3000000 		.4byte	0xa3
 31011 14f5 02       		.uleb128 0x2
 31012 14f6 91       		.byte	0x91
 31013 14f7 66       		.sleb128 -26
 31014 14f8 23       		.uleb128 0x23
 31015 14f9 7B060000 		.4byte	.LASF270
 31016 14fd 01       		.byte	0x1
 31017 14fe 8306     		.2byte	0x683
 31018 1500 A3000000 		.4byte	0xa3
 31019 1504 02       		.uleb128 0x2
 31020 1505 91       		.byte	0x91
 31021 1506 5C       		.sleb128 -36
 31022 1507 23       		.uleb128 0x23
 31023 1508 AC0F0000 		.4byte	.LASF271
 31024 150c 01       		.byte	0x1
 31025 150d 8606     		.2byte	0x686
 31026 150f 30010000 		.4byte	0x130
 31027 1513 03       		.uleb128 0x3
 31028 1514 91       		.byte	0x91
 31029 1515 C074     		.sleb128 -1472
 31030 1517 23       		.uleb128 0x23
 31031 1518 4D130000 		.4byte	.LASF272
 31032 151c 01       		.byte	0x1
 31033 151d 8706     		.2byte	0x687
 31034 151f F2150000 		.4byte	0x15f2
 31035 1523 03       		.uleb128 0x3
 31036 1524 91       		.byte	0x91
 31037 1525 B474     		.sleb128 -1484
 31038 1527 23       		.uleb128 0x23
 31039 1528 B0080000 		.4byte	.LASF273
 31040 152c 01       		.byte	0x1
 31041 152d 8806     		.2byte	0x688
 31042 152f 02160000 		.4byte	0x1602
 31043 1533 03       		.uleb128 0x3
 31044 1534 91       		.byte	0x91
 31045 1535 A074     		.sleb128 -1504
 31046 1537 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 670


 31047 1538 27000000 		.4byte	.LASF274
 31048 153c 01       		.byte	0x1
 31049 153d 8906     		.2byte	0x689
 31050 153f 12160000 		.4byte	0x1612
 31051 1543 03       		.uleb128 0x3
 31052 1544 91       		.byte	0x91
 31053 1545 9074     		.sleb128 -1520
 31054 1547 23       		.uleb128 0x23
 31055 1548 89100000 		.4byte	.LASF275
 31056 154c 01       		.byte	0x1
 31057 154d 8A06     		.2byte	0x68a
 31058 154f 22160000 		.4byte	0x1622
 31059 1553 03       		.uleb128 0x3
 31060 1554 91       		.byte	0x91
 31061 1555 E473     		.sleb128 -1564
 31062 1557 23       		.uleb128 0x23
 31063 1558 8A020000 		.4byte	.LASF276
 31064 155c 01       		.byte	0x1
 31065 155d 8B06     		.2byte	0x68b
 31066 155f 30010000 		.4byte	0x130
 31067 1563 03       		.uleb128 0x3
 31068 1564 91       		.byte	0x91
 31069 1565 C873     		.sleb128 -1592
 31070 1567 23       		.uleb128 0x23
 31071 1568 F5010000 		.4byte	.LASF277
 31072 156c 01       		.byte	0x1
 31073 156d 8E06     		.2byte	0x68e
 31074 156f 97000000 		.4byte	0x97
 31075 1573 02       		.uleb128 0x2
 31076 1574 91       		.byte	0x91
 31077 1575 5B       		.sleb128 -37
 31078 1576 23       		.uleb128 0x23
 31079 1577 D8050000 		.4byte	.LASF278
 31080 157b 01       		.byte	0x1
 31081 157c 8F06     		.2byte	0x68f
 31082 157e 97000000 		.4byte	0x97
 31083 1582 02       		.uleb128 0x2
 31084 1583 91       		.byte	0x91
 31085 1584 5A       		.sleb128 -38
 31086 1585 23       		.uleb128 0x23
 31087 1586 F5120000 		.4byte	.LASF279
 31088 158a 01       		.byte	0x1
 31089 158b 9006     		.2byte	0x690
 31090 158d 97000000 		.4byte	0x97
 31091 1591 02       		.uleb128 0x2
 31092 1592 91       		.byte	0x91
 31093 1593 59       		.sleb128 -39
 31094 1594 23       		.uleb128 0x23
 31095 1595 74130000 		.4byte	.LASF280
 31096 1599 01       		.byte	0x1
 31097 159a 9106     		.2byte	0x691
 31098 159c 97000000 		.4byte	0x97
 31099 15a0 02       		.uleb128 0x2
 31100 15a1 91       		.byte	0x91
 31101 15a2 58       		.sleb128 -40
 31102 15a3 23       		.uleb128 0x23
 31103 15a4 E6050000 		.4byte	.LASF281
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 671


 31104 15a8 01       		.byte	0x1
 31105 15a9 9206     		.2byte	0x692
 31106 15ab 97000000 		.4byte	0x97
 31107 15af 02       		.uleb128 0x2
 31108 15b0 91       		.byte	0x91
 31109 15b1 57       		.sleb128 -41
 31110 15b2 23       		.uleb128 0x23
 31111 15b3 43010000 		.4byte	.LASF282
 31112 15b7 01       		.byte	0x1
 31113 15b8 9306     		.2byte	0x693
 31114 15ba 97000000 		.4byte	0x97
 31115 15be 02       		.uleb128 0x2
 31116 15bf 91       		.byte	0x91
 31117 15c0 65       		.sleb128 -27
 31118 15c1 23       		.uleb128 0x23
 31119 15c2 34160000 		.4byte	.LASF256
 31120 15c6 01       		.byte	0x1
 31121 15c7 9506     		.2byte	0x695
 31122 15c9 50130000 		.4byte	0x1350
 31123 15cd 03       		.uleb128 0x3
 31124 15ce 91       		.byte	0x91
 31125 15cf D072     		.sleb128 -1712
 31126 15d1 23       		.uleb128 0x23
 31127 15d2 67040000 		.4byte	.LASF283
 31128 15d6 01       		.byte	0x1
 31129 15d7 9606     		.2byte	0x696
 31130 15d9 97000000 		.4byte	0x97
 31131 15dd 02       		.uleb128 0x2
 31132 15de 91       		.byte	0x91
 31133 15df 56       		.sleb128 -42
 31134 15e0 00       		.byte	0
 31135 15e1 09       		.uleb128 0x9
 31136 15e2 97000000 		.4byte	0x97
 31137 15e6 F2150000 		.4byte	0x15f2
 31138 15ea 24       		.uleb128 0x24
 31139 15eb 18010000 		.4byte	0x118
 31140 15ef 7805     		.2byte	0x578
 31141 15f1 00       		.byte	0
 31142 15f2 09       		.uleb128 0x9
 31143 15f3 F9000000 		.4byte	0xf9
 31144 15f7 02160000 		.4byte	0x1602
 31145 15fb 0A       		.uleb128 0xa
 31146 15fc 18010000 		.4byte	0x118
 31147 1600 0A       		.byte	0xa
 31148 1601 00       		.byte	0
 31149 1602 09       		.uleb128 0x9
 31150 1603 F9000000 		.4byte	0xf9
 31151 1607 12160000 		.4byte	0x1612
 31152 160b 0A       		.uleb128 0xa
 31153 160c 18010000 		.4byte	0x118
 31154 1610 13       		.byte	0x13
 31155 1611 00       		.byte	0
 31156 1612 09       		.uleb128 0x9
 31157 1613 F9000000 		.4byte	0xf9
 31158 1617 22160000 		.4byte	0x1622
 31159 161b 0A       		.uleb128 0xa
 31160 161c 18010000 		.4byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 672


 31161 1620 0F       		.byte	0xf
 31162 1621 00       		.byte	0
 31163 1622 09       		.uleb128 0x9
 31164 1623 F9000000 		.4byte	0xf9
 31165 1627 32160000 		.4byte	0x1632
 31166 162b 0A       		.uleb128 0xa
 31167 162c 18010000 		.4byte	0x118
 31168 1630 29       		.byte	0x29
 31169 1631 00       		.byte	0
 31170 1632 27       		.uleb128 0x27
 31171 1633 AE030000 		.4byte	.LASF321
 31172 1637 01       		.byte	0x1
 31173 1638 5C07     		.2byte	0x75c
 31174 163a 00000000 		.4byte	.LFB71
 31175 163e 90000000 		.4byte	.LFE71-.LFB71
 31176 1642 01       		.uleb128 0x1
 31177 1643 9C       		.byte	0x9c
 31178 1644 63160000 		.4byte	0x1663
 31179 1648 26       		.uleb128 0x26
 31180 1649 6900     		.ascii	"i\000"
 31181 164b 01       		.byte	0x1
 31182 164c 5E07     		.2byte	0x75e
 31183 164e 97000000 		.4byte	0x97
 31184 1652 02       		.uleb128 0x2
 31185 1653 91       		.byte	0x91
 31186 1654 6F       		.sleb128 -17
 31187 1655 26       		.uleb128 0x26
 31188 1656 6A00     		.ascii	"j\000"
 31189 1658 01       		.byte	0x1
 31190 1659 5E07     		.2byte	0x75e
 31191 165b 97000000 		.4byte	0x97
 31192 165f 02       		.uleb128 0x2
 31193 1660 91       		.byte	0x91
 31194 1661 6E       		.sleb128 -18
 31195 1662 00       		.byte	0
 31196 1663 22       		.uleb128 0x22
 31197 1664 63010000 		.4byte	.LASF284
 31198 1668 01       		.byte	0x1
 31199 1669 6F07     		.2byte	0x76f
 31200 166b 00000000 		.4byte	.LFB72
 31201 166f 701C0000 		.4byte	.LFE72-.LFB72
 31202 1673 01       		.uleb128 0x1
 31203 1674 9C       		.byte	0x9c
 31204 1675 0E170000 		.4byte	0x170e
 31205 1679 25       		.uleb128 0x25
 31206 167a B60F0000 		.4byte	.LASF285
 31207 167e 01       		.byte	0x1
 31208 167f 6F07     		.2byte	0x76f
 31209 1681 1F010000 		.4byte	0x11f
 31210 1685 03       		.uleb128 0x3
 31211 1686 91       		.byte	0x91
 31212 1687 D47E     		.sleb128 -172
 31213 1689 26       		.uleb128 0x26
 31214 168a 6900     		.ascii	"i\000"
 31215 168c 01       		.byte	0x1
 31216 168d 7107     		.2byte	0x771
 31217 168f 73000000 		.4byte	0x73
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 673


 31218 1693 02       		.uleb128 0x2
 31219 1694 91       		.byte	0x91
 31220 1695 54       		.sleb128 -44
 31221 1696 23       		.uleb128 0x23
 31222 1697 E6030000 		.4byte	.LASF255
 31223 169b 01       		.byte	0x1
 31224 169c 7307     		.2byte	0x773
 31225 169e 1A130000 		.4byte	0x131a
 31226 16a2 02       		.uleb128 0x2
 31227 16a3 91       		.byte	0x91
 31228 16a4 4C       		.sleb128 -52
 31229 16a5 1E       		.uleb128 0x1e
 31230 16a6 1C000000 		.4byte	.LBB24
 31231 16aa 321C0000 		.4byte	.LBE24-.LBB24
 31232 16ae 26       		.uleb128 0x26
 31233 16af 73747200 		.ascii	"str\000"
 31234 16b3 01       		.byte	0x1
 31235 16b4 7607     		.2byte	0x776
 31236 16b6 0E170000 		.4byte	0x170e
 31237 16ba 03       		.uleb128 0x3
 31238 16bb 91       		.byte	0x91
 31239 16bc DC7E     		.sleb128 -164
 31240 16be 1E       		.uleb128 0x1e
 31241 16bf 18030000 		.4byte	.LBB25
 31242 16c3 FC100000 		.4byte	.LBE25-.LBB25
 31243 16c7 26       		.uleb128 0x26
 31244 16c8 6B00     		.ascii	"k\000"
 31245 16ca 01       		.byte	0x1
 31246 16cb AA07     		.2byte	0x7aa
 31247 16cd 97000000 		.4byte	0x97
 31248 16d1 02       		.uleb128 0x2
 31249 16d2 91       		.byte	0x91
 31250 16d3 53       		.sleb128 -45
 31251 16d4 1E       		.uleb128 0x1e
 31252 16d5 68030000 		.4byte	.LBB26
 31253 16d9 90100000 		.4byte	.LBE26-.LBB26
 31254 16dd 23       		.uleb128 0x23
 31255 16de 970F0000 		.4byte	.LASF248
 31256 16e2 01       		.byte	0x1
 31257 16e3 AC07     		.2byte	0x7ac
 31258 16e5 97000000 		.4byte	0x97
 31259 16e9 02       		.uleb128 0x2
 31260 16ea 91       		.byte	0x91
 31261 16eb 4B       		.sleb128 -53
 31262 16ec 26       		.uleb128 0x26
 31263 16ed 4D4F5400 		.ascii	"MOT\000"
 31264 16f1 01       		.byte	0x1
 31265 16f2 AD07     		.2byte	0x7ad
 31266 16f4 1E170000 		.4byte	0x171e
 31267 16f8 02       		.uleb128 0x2
 31268 16f9 91       		.byte	0x91
 31269 16fa 44       		.sleb128 -60
 31270 16fb 23       		.uleb128 0x23
 31271 16fc 9C150000 		.4byte	.LASF286
 31272 1700 01       		.byte	0x1
 31273 1701 AE07     		.2byte	0x7ae
 31274 1703 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 674


 31275 1707 02       		.uleb128 0x2
 31276 1708 91       		.byte	0x91
 31277 1709 43       		.sleb128 -61
 31278 170a 00       		.byte	0
 31279 170b 00       		.byte	0
 31280 170c 00       		.byte	0
 31281 170d 00       		.byte	0
 31282 170e 09       		.uleb128 0x9
 31283 170f F9000000 		.4byte	0xf9
 31284 1713 1E170000 		.4byte	0x171e
 31285 1717 0A       		.uleb128 0xa
 31286 1718 18010000 		.4byte	0x118
 31287 171c 63       		.byte	0x63
 31288 171d 00       		.byte	0
 31289 171e 07       		.uleb128 0x7
 31290 171f 04       		.byte	0x4
 31291 1720 38060000 		.4byte	0x638
 31292 1724 22       		.uleb128 0x22
 31293 1725 2F110000 		.4byte	.LASF287
 31294 1729 01       		.byte	0x1
 31295 172a 5C09     		.2byte	0x95c
 31296 172c 00000000 		.4byte	.LFB73
 31297 1730 90040000 		.4byte	.LFE73-.LFB73
 31298 1734 01       		.uleb128 0x1
 31299 1735 9C       		.byte	0x9c
 31300 1736 B4170000 		.4byte	0x17b4
 31301 173a 25       		.uleb128 0x25
 31302 173b B60F0000 		.4byte	.LASF285
 31303 173f 01       		.byte	0x1
 31304 1740 5C09     		.2byte	0x95c
 31305 1742 1F010000 		.4byte	0x11f
 31306 1746 03       		.uleb128 0x3
 31307 1747 91       		.byte	0x91
 31308 1748 BC7C     		.sleb128 -452
 31309 174a 26       		.uleb128 0x26
 31310 174b 73747200 		.ascii	"str\000"
 31311 174f 01       		.byte	0x1
 31312 1750 5E09     		.2byte	0x95e
 31313 1752 0E170000 		.4byte	0x170e
 31314 1756 03       		.uleb128 0x3
 31315 1757 91       		.byte	0x91
 31316 1758 F07E     		.sleb128 -144
 31317 175a 26       		.uleb128 0x26
 31318 175b 6900     		.ascii	"i\000"
 31319 175d 01       		.byte	0x1
 31320 175e 5F09     		.2byte	0x95f
 31321 1760 73000000 		.4byte	0x73
 31322 1764 02       		.uleb128 0x2
 31323 1765 91       		.byte	0x91
 31324 1766 64       		.sleb128 -28
 31325 1767 23       		.uleb128 0x23
 31326 1768 3D050000 		.4byte	.LASF288
 31327 176c 01       		.byte	0x1
 31328 176d 6009     		.2byte	0x960
 31329 176f 73000000 		.4byte	0x73
 31330 1773 02       		.uleb128 0x2
 31331 1774 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 675


 31332 1775 54       		.sleb128 -44
 31333 1776 23       		.uleb128 0x23
 31334 1777 E6030000 		.4byte	.LASF255
 31335 177b 01       		.byte	0x1
 31336 177c 6209     		.2byte	0x962
 31337 177e 1A130000 		.4byte	0x131a
 31338 1782 02       		.uleb128 0x2
 31339 1783 91       		.byte	0x91
 31340 1784 60       		.sleb128 -32
 31341 1785 26       		.uleb128 0x26
 31342 1786 4D4F5400 		.ascii	"MOT\000"
 31343 178a 01       		.byte	0x1
 31344 178b 6309     		.2byte	0x963
 31345 178d 1E170000 		.4byte	0x171e
 31346 1791 02       		.uleb128 0x2
 31347 1792 91       		.byte	0x91
 31348 1793 5C       		.sleb128 -36
 31349 1794 23       		.uleb128 0x23
 31350 1795 9C150000 		.4byte	.LASF286
 31351 1799 01       		.byte	0x1
 31352 179a 6409     		.2byte	0x964
 31353 179c 97000000 		.4byte	0x97
 31354 17a0 02       		.uleb128 0x2
 31355 17a1 91       		.byte	0x91
 31356 17a2 5B       		.sleb128 -37
 31357 17a3 23       		.uleb128 0x23
 31358 17a4 FB060000 		.4byte	.LASF289
 31359 17a8 01       		.byte	0x1
 31360 17a9 9C09     		.2byte	0x99c
 31361 17ab B4170000 		.4byte	0x17b4
 31362 17af 03       		.uleb128 0x3
 31363 17b0 91       		.byte	0x91
 31364 17b1 C47C     		.sleb128 -444
 31365 17b3 00       		.byte	0
 31366 17b4 09       		.uleb128 0x9
 31367 17b5 F9000000 		.4byte	0xf9
 31368 17b9 C5170000 		.4byte	0x17c5
 31369 17bd 24       		.uleb128 0x24
 31370 17be 18010000 		.4byte	0x118
 31371 17c2 2B01     		.2byte	0x12b
 31372 17c4 00       		.byte	0
 31373 17c5 22       		.uleb128 0x22
 31374 17c6 250E0000 		.4byte	.LASF290
 31375 17ca 01       		.byte	0x1
 31376 17cb A609     		.2byte	0x9a6
 31377 17cd 00000000 		.4byte	.LFB74
 31378 17d1 5C020000 		.4byte	.LFE74-.LFB74
 31379 17d5 01       		.uleb128 0x1
 31380 17d6 9C       		.byte	0x9c
 31381 17d7 0B180000 		.4byte	0x180b
 31382 17db 25       		.uleb128 0x25
 31383 17dc B60F0000 		.4byte	.LASF285
 31384 17e0 01       		.byte	0x1
 31385 17e1 A609     		.2byte	0x9a6
 31386 17e3 1F010000 		.4byte	0x11f
 31387 17e7 03       		.uleb128 0x3
 31388 17e8 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 676


 31389 17e9 CC7E     		.sleb128 -180
 31390 17eb 26       		.uleb128 0x26
 31391 17ec 73747200 		.ascii	"str\000"
 31392 17f0 01       		.byte	0x1
 31393 17f1 A809     		.2byte	0x9a8
 31394 17f3 0B180000 		.4byte	0x180b
 31395 17f7 03       		.uleb128 0x3
 31396 17f8 91       		.byte	0x91
 31397 17f9 D47E     		.sleb128 -172
 31398 17fb 23       		.uleb128 0x23
 31399 17fc E6030000 		.4byte	.LASF255
 31400 1800 01       		.byte	0x1
 31401 1801 AA09     		.2byte	0x9aa
 31402 1803 1A130000 		.4byte	0x131a
 31403 1807 02       		.uleb128 0x2
 31404 1808 91       		.byte	0x91
 31405 1809 6C       		.sleb128 -20
 31406 180a 00       		.byte	0
 31407 180b 09       		.uleb128 0x9
 31408 180c F9000000 		.4byte	0xf9
 31409 1810 1B180000 		.4byte	0x181b
 31410 1814 0A       		.uleb128 0xa
 31411 1815 18010000 		.4byte	0x118
 31412 1819 95       		.byte	0x95
 31413 181a 00       		.byte	0
 31414 181b 22       		.uleb128 0x22
 31415 181c 0F110000 		.4byte	.LASF291
 31416 1820 01       		.byte	0x1
 31417 1821 D309     		.2byte	0x9d3
 31418 1823 00000000 		.4byte	.LFB75
 31419 1827 80120000 		.4byte	.LFE75-.LFB75
 31420 182b 01       		.uleb128 0x1
 31421 182c 9C       		.byte	0x9c
 31422 182d BC180000 		.4byte	0x18bc
 31423 1831 25       		.uleb128 0x25
 31424 1832 B60F0000 		.4byte	.LASF285
 31425 1836 01       		.byte	0x1
 31426 1837 D309     		.2byte	0x9d3
 31427 1839 1F010000 		.4byte	0x11f
 31428 183d 03       		.uleb128 0x3
 31429 183e 91       		.byte	0x91
 31430 183f D47E     		.sleb128 -172
 31431 1841 26       		.uleb128 0x26
 31432 1842 73747200 		.ascii	"str\000"
 31433 1846 01       		.byte	0x1
 31434 1847 D509     		.2byte	0x9d5
 31435 1849 0E170000 		.4byte	0x170e
 31436 184d 03       		.uleb128 0x3
 31437 184e 91       		.byte	0x91
 31438 184f DC7E     		.sleb128 -164
 31439 1851 26       		.uleb128 0x26
 31440 1852 6900     		.ascii	"i\000"
 31441 1854 01       		.byte	0x1
 31442 1855 D609     		.2byte	0x9d6
 31443 1857 73000000 		.4byte	0x73
 31444 185b 02       		.uleb128 0x2
 31445 185c 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 677


 31446 185d 54       		.sleb128 -44
 31447 185e 23       		.uleb128 0x23
 31448 185f E6030000 		.4byte	.LASF255
 31449 1863 01       		.byte	0x1
 31450 1864 DA09     		.2byte	0x9da
 31451 1866 1A130000 		.4byte	0x131a
 31452 186a 02       		.uleb128 0x2
 31453 186b 91       		.byte	0x91
 31454 186c 4C       		.sleb128 -52
 31455 186d 1E       		.uleb128 0x1e
 31456 186e 08010000 		.4byte	.LBB27
 31457 1872 D80C0000 		.4byte	.LBE27-.LBB27
 31458 1876 26       		.uleb128 0x26
 31459 1877 6B00     		.ascii	"k\000"
 31460 1879 01       		.byte	0x1
 31461 187a EF09     		.2byte	0x9ef
 31462 187c 97000000 		.4byte	0x97
 31463 1880 02       		.uleb128 0x2
 31464 1881 91       		.byte	0x91
 31465 1882 53       		.sleb128 -45
 31466 1883 1E       		.uleb128 0x1e
 31467 1884 12010000 		.4byte	.LBB28
 31468 1888 B20C0000 		.4byte	.LBE28-.LBB28
 31469 188c 23       		.uleb128 0x23
 31470 188d 970F0000 		.4byte	.LASF248
 31471 1891 01       		.byte	0x1
 31472 1892 F109     		.2byte	0x9f1
 31473 1894 97000000 		.4byte	0x97
 31474 1898 02       		.uleb128 0x2
 31475 1899 91       		.byte	0x91
 31476 189a 4B       		.sleb128 -53
 31477 189b 26       		.uleb128 0x26
 31478 189c 4D4F5400 		.ascii	"MOT\000"
 31479 18a0 01       		.byte	0x1
 31480 18a1 F209     		.2byte	0x9f2
 31481 18a3 1E170000 		.4byte	0x171e
 31482 18a7 02       		.uleb128 0x2
 31483 18a8 91       		.byte	0x91
 31484 18a9 44       		.sleb128 -60
 31485 18aa 23       		.uleb128 0x23
 31486 18ab 9C150000 		.4byte	.LASF286
 31487 18af 01       		.byte	0x1
 31488 18b0 F309     		.2byte	0x9f3
 31489 18b2 97000000 		.4byte	0x97
 31490 18b6 02       		.uleb128 0x2
 31491 18b7 91       		.byte	0x91
 31492 18b8 43       		.sleb128 -61
 31493 18b9 00       		.byte	0
 31494 18ba 00       		.byte	0
 31495 18bb 00       		.byte	0
 31496 18bc 22       		.uleb128 0x22
 31497 18bd 170D0000 		.4byte	.LASF292
 31498 18c1 01       		.byte	0x1
 31499 18c2 DB0A     		.2byte	0xadb
 31500 18c4 00000000 		.4byte	.LFB76
 31501 18c8 DC000000 		.4byte	.LFE76-.LFB76
 31502 18cc 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 678


 31503 18cd 9C       		.byte	0x9c
 31504 18ce 00190000 		.4byte	0x1900
 31505 18d2 25       		.uleb128 0x25
 31506 18d3 B60F0000 		.4byte	.LASF285
 31507 18d7 01       		.byte	0x1
 31508 18d8 DB0A     		.2byte	0xadb
 31509 18da 1F010000 		.4byte	0x11f
 31510 18de 03       		.uleb128 0x3
 31511 18df 91       		.byte	0x91
 31512 18e0 DC7E     		.sleb128 -164
 31513 18e2 26       		.uleb128 0x26
 31514 18e3 73747200 		.ascii	"str\000"
 31515 18e7 01       		.byte	0x1
 31516 18e8 DD0A     		.2byte	0xadd
 31517 18ea 00190000 		.4byte	0x1900
 31518 18ee 03       		.uleb128 0x3
 31519 18ef 91       		.byte	0x91
 31520 18f0 E07E     		.sleb128 -160
 31521 18f2 26       		.uleb128 0x26
 31522 18f3 6900     		.ascii	"i\000"
 31523 18f5 01       		.byte	0x1
 31524 18f6 DE0A     		.2byte	0xade
 31525 18f8 73000000 		.4byte	0x73
 31526 18fc 02       		.uleb128 0x2
 31527 18fd 91       		.byte	0x91
 31528 18fe 6C       		.sleb128 -20
 31529 18ff 00       		.byte	0
 31530 1900 09       		.uleb128 0x9
 31531 1901 F9000000 		.4byte	0xf9
 31532 1905 10190000 		.4byte	0x1910
 31533 1909 0A       		.uleb128 0xa
 31534 190a 18010000 		.4byte	0x118
 31535 190e 8B       		.byte	0x8b
 31536 190f 00       		.byte	0
 31537 1910 22       		.uleb128 0x22
 31538 1911 C20F0000 		.4byte	.LASF293
 31539 1915 01       		.byte	0x1
 31540 1916 F30A     		.2byte	0xaf3
 31541 1918 00000000 		.4byte	.LFB77
 31542 191c 80010000 		.4byte	.LFE77-.LFB77
 31543 1920 01       		.uleb128 0x1
 31544 1921 9C       		.byte	0x9c
 31545 1922 54190000 		.4byte	0x1954
 31546 1926 25       		.uleb128 0x25
 31547 1927 B60F0000 		.4byte	.LASF285
 31548 192b 01       		.byte	0x1
 31549 192c F30A     		.2byte	0xaf3
 31550 192e 1F010000 		.4byte	0x11f
 31551 1932 03       		.uleb128 0x3
 31552 1933 91       		.byte	0x91
 31553 1934 E47E     		.sleb128 -156
 31554 1936 26       		.uleb128 0x26
 31555 1937 73747200 		.ascii	"str\000"
 31556 193b 01       		.byte	0x1
 31557 193c F50A     		.2byte	0xaf5
 31558 193e 54190000 		.4byte	0x1954
 31559 1942 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 679


 31560 1943 91       		.byte	0x91
 31561 1944 EC7E     		.sleb128 -148
 31562 1946 26       		.uleb128 0x26
 31563 1947 6900     		.ascii	"i\000"
 31564 1949 01       		.byte	0x1
 31565 194a F60A     		.2byte	0xaf6
 31566 194c 73000000 		.4byte	0x73
 31567 1950 02       		.uleb128 0x2
 31568 1951 91       		.byte	0x91
 31569 1952 64       		.sleb128 -28
 31570 1953 00       		.byte	0
 31571 1954 09       		.uleb128 0x9
 31572 1955 F9000000 		.4byte	0xf9
 31573 1959 64190000 		.4byte	0x1964
 31574 195d 0A       		.uleb128 0xa
 31575 195e 18010000 		.4byte	0x118
 31576 1962 77       		.byte	0x77
 31577 1963 00       		.byte	0
 31578 1964 28       		.uleb128 0x28
 31579 1965 44110000 		.4byte	.LASF294
 31580 1969 01       		.byte	0x1
 31581 196a 1F0B     		.2byte	0xb1f
 31582 196c 00000000 		.4byte	.LFB78
 31583 1970 28000000 		.4byte	.LFE78-.LFB78
 31584 1974 01       		.uleb128 0x1
 31585 1975 9C       		.byte	0x9c
 31586 1976 8A190000 		.4byte	0x198a
 31587 197a 25       		.uleb128 0x25
 31588 197b B60F0000 		.4byte	.LASF285
 31589 197f 01       		.byte	0x1
 31590 1980 1F0B     		.2byte	0xb1f
 31591 1982 1F010000 		.4byte	0x11f
 31592 1986 02       		.uleb128 0x2
 31593 1987 91       		.byte	0x91
 31594 1988 6C       		.sleb128 -20
 31595 1989 00       		.byte	0
 31596 198a 22       		.uleb128 0x22
 31597 198b 15040000 		.4byte	.LASF295
 31598 198f 01       		.byte	0x1
 31599 1990 2A0B     		.2byte	0xb2a
 31600 1992 00000000 		.4byte	.LFB79
 31601 1996 F0000000 		.4byte	.LFE79-.LFB79
 31602 199a 01       		.uleb128 0x1
 31603 199b 9C       		.byte	0x9c
 31604 199c F9190000 		.4byte	0x19f9
 31605 19a0 25       		.uleb128 0x25
 31606 19a1 B60F0000 		.4byte	.LASF285
 31607 19a5 01       		.byte	0x1
 31608 19a6 2A0B     		.2byte	0xb2a
 31609 19a8 1F010000 		.4byte	0x11f
 31610 19ac 03       		.uleb128 0x3
 31611 19ad 91       		.byte	0x91
 31612 19ae FC7E     		.sleb128 -132
 31613 19b0 23       		.uleb128 0x23
 31614 19b1 7A020000 		.4byte	.LASF296
 31615 19b5 01       		.byte	0x1
 31616 19b6 2C0B     		.2byte	0xb2c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 680


 31617 19b8 0E170000 		.4byte	0x170e
 31618 19bc 03       		.uleb128 0x3
 31619 19bd 91       		.byte	0x91
 31620 19be 847F     		.sleb128 -124
 31621 19c0 23       		.uleb128 0x23
 31622 19c1 1E020000 		.4byte	.LASF297
 31623 19c5 01       		.byte	0x1
 31624 19c6 2D0B     		.2byte	0xb2d
 31625 19c8 A3000000 		.4byte	0xa3
 31626 19cc 02       		.uleb128 0x2
 31627 19cd 91       		.byte	0x91
 31628 19ce 6E       		.sleb128 -18
 31629 19cf 23       		.uleb128 0x23
 31630 19d0 F5000000 		.4byte	.LASF298
 31631 19d4 01       		.byte	0x1
 31632 19d5 2E0B     		.2byte	0xb2e
 31633 19d7 EB000000 		.4byte	0xeb
 31634 19db 05       		.uleb128 0x5
 31635 19dc 03       		.byte	0x3
 31636 19dd 00000000 		.4byte	h_time.10994
 31637 19e1 1E       		.uleb128 0x1e
 31638 19e2 26000000 		.4byte	.LBB29
 31639 19e6 A4000000 		.4byte	.LBE29-.LBB29
 31640 19ea 26       		.uleb128 0x26
 31641 19eb 6900     		.ascii	"i\000"
 31642 19ed 01       		.byte	0x1
 31643 19ee 330B     		.2byte	0xb33
 31644 19f0 73000000 		.4byte	0x73
 31645 19f4 02       		.uleb128 0x2
 31646 19f5 91       		.byte	0x91
 31647 19f6 68       		.sleb128 -24
 31648 19f7 00       		.byte	0
 31649 19f8 00       		.byte	0
 31650 19f9 22       		.uleb128 0x22
 31651 19fa D0160000 		.4byte	.LASF299
 31652 19fe 01       		.byte	0x1
 31653 19ff 4B0B     		.2byte	0xb4b
 31654 1a01 00000000 		.4byte	.LFB80
 31655 1a05 74030000 		.4byte	.LFE80-.LFB80
 31656 1a09 01       		.uleb128 0x1
 31657 1a0a 9C       		.byte	0x9c
 31658 1a0b 3D1A0000 		.4byte	0x1a3d
 31659 1a0f 25       		.uleb128 0x25
 31660 1a10 B60F0000 		.4byte	.LASF285
 31661 1a14 01       		.byte	0x1
 31662 1a15 4B0B     		.2byte	0xb4b
 31663 1a17 1F010000 		.4byte	0x11f
 31664 1a1b 03       		.uleb128 0x3
 31665 1a1c 91       		.byte	0x91
 31666 1a1d AC7D     		.sleb128 -340
 31667 1a1f 26       		.uleb128 0x26
 31668 1a20 73747200 		.ascii	"str\000"
 31669 1a24 01       		.byte	0x1
 31670 1a25 4D0B     		.2byte	0xb4d
 31671 1a27 B4170000 		.4byte	0x17b4
 31672 1a2b 03       		.uleb128 0x3
 31673 1a2c 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 681


 31674 1a2d B07D     		.sleb128 -336
 31675 1a2f 26       		.uleb128 0x26
 31676 1a30 6900     		.ascii	"i\000"
 31677 1a32 01       		.byte	0x1
 31678 1a33 4E0B     		.2byte	0xb4e
 31679 1a35 73000000 		.4byte	0x73
 31680 1a39 02       		.uleb128 0x2
 31681 1a3a 91       		.byte	0x91
 31682 1a3b 5C       		.sleb128 -36
 31683 1a3c 00       		.byte	0
 31684 1a3d 22       		.uleb128 0x22
 31685 1a3e D2100000 		.4byte	.LASF300
 31686 1a42 01       		.byte	0x1
 31687 1a43 760B     		.2byte	0xb76
 31688 1a45 00000000 		.4byte	.LFB81
 31689 1a49 84000000 		.4byte	.LFE81-.LFB81
 31690 1a4d 01       		.uleb128 0x1
 31691 1a4e 9C       		.byte	0x9c
 31692 1a4f 901A0000 		.4byte	0x1a90
 31693 1a53 25       		.uleb128 0x25
 31694 1a54 16070000 		.4byte	.LASF238
 31695 1a58 01       		.byte	0x1
 31696 1a59 760B     		.2byte	0xb76
 31697 1a5b 0F110000 		.4byte	0x110f
 31698 1a5f 02       		.uleb128 0x2
 31699 1a60 91       		.byte	0x91
 31700 1a61 6C       		.sleb128 -20
 31701 1a62 25       		.uleb128 0x25
 31702 1a63 E1090000 		.4byte	.LASF239
 31703 1a67 01       		.byte	0x1
 31704 1a68 760B     		.2byte	0xb76
 31705 1a6a A3000000 		.4byte	0xa3
 31706 1a6e 02       		.uleb128 0x2
 31707 1a6f 91       		.byte	0x91
 31708 1a70 6A       		.sleb128 -22
 31709 1a71 25       		.uleb128 0x25
 31710 1a72 62110000 		.4byte	.LASF301
 31711 1a76 01       		.byte	0x1
 31712 1a77 760B     		.2byte	0xb76
 31713 1a79 97000000 		.4byte	0x97
 31714 1a7d 02       		.uleb128 0x2
 31715 1a7e 91       		.byte	0x91
 31716 1a7f 69       		.sleb128 -23
 31717 1a80 23       		.uleb128 0x23
 31718 1a81 22080000 		.4byte	.LASF253
 31719 1a85 01       		.byte	0x1
 31720 1a86 780B     		.2byte	0xb78
 31721 1a88 A3000000 		.4byte	0xa3
 31722 1a8c 02       		.uleb128 0x2
 31723 1a8d 91       		.byte	0x91
 31724 1a8e 76       		.sleb128 -10
 31725 1a8f 00       		.byte	0
 31726 1a90 22       		.uleb128 0x22
 31727 1a91 3B070000 		.4byte	.LASF302
 31728 1a95 01       		.byte	0x1
 31729 1a96 920B     		.2byte	0xb92
 31730 1a98 00000000 		.4byte	.LFB82
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 682


 31731 1a9c 88000000 		.4byte	.LFE82-.LFB82
 31732 1aa0 01       		.uleb128 0x1
 31733 1aa1 9C       		.byte	0x9c
 31734 1aa2 D41A0000 		.4byte	0x1ad4
 31735 1aa6 25       		.uleb128 0x25
 31736 1aa7 16070000 		.4byte	.LASF238
 31737 1aab 01       		.byte	0x1
 31738 1aac 920B     		.2byte	0xb92
 31739 1aae 0F110000 		.4byte	0x110f
 31740 1ab2 02       		.uleb128 0x2
 31741 1ab3 91       		.byte	0x91
 31742 1ab4 6C       		.sleb128 -20
 31743 1ab5 25       		.uleb128 0x25
 31744 1ab6 E1090000 		.4byte	.LASF239
 31745 1aba 01       		.byte	0x1
 31746 1abb 920B     		.2byte	0xb92
 31747 1abd A3000000 		.4byte	0xa3
 31748 1ac1 02       		.uleb128 0x2
 31749 1ac2 91       		.byte	0x91
 31750 1ac3 6A       		.sleb128 -22
 31751 1ac4 23       		.uleb128 0x23
 31752 1ac5 22080000 		.4byte	.LASF253
 31753 1ac9 01       		.byte	0x1
 31754 1aca 940B     		.2byte	0xb94
 31755 1acc A3000000 		.4byte	0xa3
 31756 1ad0 02       		.uleb128 0x2
 31757 1ad1 91       		.byte	0x91
 31758 1ad2 76       		.sleb128 -10
 31759 1ad3 00       		.byte	0
 31760 1ad4 22       		.uleb128 0x22
 31761 1ad5 8A0D0000 		.4byte	.LASF303
 31762 1ad9 01       		.byte	0x1
 31763 1ada AE0B     		.2byte	0xbae
 31764 1adc 00000000 		.4byte	.LFB83
 31765 1ae0 A0000000 		.4byte	.LFE83-.LFB83
 31766 1ae4 01       		.uleb128 0x1
 31767 1ae5 9C       		.byte	0x9c
 31768 1ae6 271B0000 		.4byte	0x1b27
 31769 1aea 25       		.uleb128 0x25
 31770 1aeb 16070000 		.4byte	.LASF238
 31771 1aef 01       		.byte	0x1
 31772 1af0 AE0B     		.2byte	0xbae
 31773 1af2 0F110000 		.4byte	0x110f
 31774 1af6 02       		.uleb128 0x2
 31775 1af7 91       		.byte	0x91
 31776 1af8 74       		.sleb128 -12
 31777 1af9 25       		.uleb128 0x25
 31778 1afa E1090000 		.4byte	.LASF239
 31779 1afe 01       		.byte	0x1
 31780 1aff AE0B     		.2byte	0xbae
 31781 1b01 A3000000 		.4byte	0xa3
 31782 1b05 02       		.uleb128 0x2
 31783 1b06 91       		.byte	0x91
 31784 1b07 72       		.sleb128 -14
 31785 1b08 29       		.uleb128 0x29
 31786 1b09 696400   		.ascii	"id\000"
 31787 1b0c 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 683


 31788 1b0d AE0B     		.2byte	0xbae
 31789 1b0f 97000000 		.4byte	0x97
 31790 1b13 02       		.uleb128 0x2
 31791 1b14 91       		.byte	0x91
 31792 1b15 71       		.sleb128 -15
 31793 1b16 26       		.uleb128 0x26
 31794 1b17 6900     		.ascii	"i\000"
 31795 1b19 01       		.byte	0x1
 31796 1b1a B00B     		.2byte	0xbb0
 31797 1b1c A3000000 		.4byte	0xa3
 31798 1b20 05       		.uleb128 0x5
 31799 1b21 03       		.byte	0x3
 31800 1b22 04000000 		.4byte	i.11035
 31801 1b26 00       		.byte	0
 31802 1b27 2A       		.uleb128 0x2a
 31803 1b28 4C150000 		.4byte	.LASF309
 31804 1b2c 01       		.byte	0x1
 31805 1b2d CC0B     		.2byte	0xbcc
 31806 1b2f 97000000 		.4byte	0x97
 31807 1b33 00000000 		.4byte	.LFB84
 31808 1b37 3E000000 		.4byte	.LFE84-.LFB84
 31809 1b3b 01       		.uleb128 0x1
 31810 1b3c 9C       		.byte	0x9c
 31811 1b3d 7C1B0000 		.4byte	0x1b7c
 31812 1b41 25       		.uleb128 0x25
 31813 1b42 D30C0000 		.4byte	.LASF304
 31814 1b46 01       		.byte	0x1
 31815 1b47 CC0B     		.2byte	0xbcc
 31816 1b49 0F110000 		.4byte	0x110f
 31817 1b4d 02       		.uleb128 0x2
 31818 1b4e 91       		.byte	0x91
 31819 1b4f 6C       		.sleb128 -20
 31820 1b50 25       		.uleb128 0x25
 31821 1b51 E3060000 		.4byte	.LASF305
 31822 1b55 01       		.byte	0x1
 31823 1b56 CC0B     		.2byte	0xbcc
 31824 1b58 97000000 		.4byte	0x97
 31825 1b5c 02       		.uleb128 0x2
 31826 1b5d 91       		.byte	0x91
 31827 1b5e 6B       		.sleb128 -21
 31828 1b5f 26       		.uleb128 0x26
 31829 1b60 6900     		.ascii	"i\000"
 31830 1b62 01       		.byte	0x1
 31831 1b63 CE0B     		.2byte	0xbce
 31832 1b65 97000000 		.4byte	0x97
 31833 1b69 02       		.uleb128 0x2
 31834 1b6a 91       		.byte	0x91
 31835 1b6b 77       		.sleb128 -9
 31836 1b6c 23       		.uleb128 0x23
 31837 1b6d 160F0000 		.4byte	.LASF306
 31838 1b71 01       		.byte	0x1
 31839 1b72 CF0B     		.2byte	0xbcf
 31840 1b74 97000000 		.4byte	0x97
 31841 1b78 02       		.uleb128 0x2
 31842 1b79 91       		.byte	0x91
 31843 1b7a 76       		.sleb128 -10
 31844 1b7b 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 684


 31845 1b7c 22       		.uleb128 0x22
 31846 1b7d 040D0000 		.4byte	.LASF307
 31847 1b81 01       		.byte	0x1
 31848 1b82 DC0B     		.2byte	0xbdc
 31849 1b84 00000000 		.4byte	.LFB85
 31850 1b88 2E000000 		.4byte	.LFE85-.LFB85
 31851 1b8c 01       		.uleb128 0x1
 31852 1b8d 9C       		.byte	0x9c
 31853 1b8e C01B0000 		.4byte	0x1bc0
 31854 1b92 25       		.uleb128 0x25
 31855 1b93 F8050000 		.4byte	.LASF308
 31856 1b97 01       		.byte	0x1
 31857 1b98 DC0B     		.2byte	0xbdc
 31858 1b9a 97000000 		.4byte	0x97
 31859 1b9e 02       		.uleb128 0x2
 31860 1b9f 91       		.byte	0x91
 31861 1ba0 6F       		.sleb128 -17
 31862 1ba1 23       		.uleb128 0x23
 31863 1ba2 E1090000 		.4byte	.LASF239
 31864 1ba6 01       		.byte	0x1
 31865 1ba7 DD0B     		.2byte	0xbdd
 31866 1ba9 73000000 		.4byte	0x73
 31867 1bad 02       		.uleb128 0x2
 31868 1bae 91       		.byte	0x91
 31869 1baf 74       		.sleb128 -12
 31870 1bb0 23       		.uleb128 0x23
 31871 1bb1 16070000 		.4byte	.LASF238
 31872 1bb5 01       		.byte	0x1
 31873 1bb6 DE0B     		.2byte	0xbde
 31874 1bb8 E4080000 		.4byte	0x8e4
 31875 1bbc 02       		.uleb128 0x2
 31876 1bbd 91       		.byte	0x91
 31877 1bbe 70       		.sleb128 -16
 31878 1bbf 00       		.byte	0
 31879 1bc0 2B       		.uleb128 0x2b
 31880 1bc1 F8040000 		.4byte	.LASF310
 31881 1bc5 01       		.byte	0x1
 31882 1bc6 EB0B     		.2byte	0xbeb
 31883 1bc8 97000000 		.4byte	0x97
 31884 1bcc 00000000 		.4byte	.LFB86
 31885 1bd0 98000000 		.4byte	.LFE86-.LFB86
 31886 1bd4 01       		.uleb128 0x1
 31887 1bd5 9C       		.byte	0x9c
 31888 1bd6 241C0000 		.4byte	0x1c24
 31889 1bda 25       		.uleb128 0x25
 31890 1bdb D6060000 		.4byte	.LASF311
 31891 1bdf 01       		.byte	0x1
 31892 1be0 EB0B     		.2byte	0xbeb
 31893 1be2 73000000 		.4byte	0x73
 31894 1be6 02       		.uleb128 0x2
 31895 1be7 91       		.byte	0x91
 31896 1be8 64       		.sleb128 -28
 31897 1be9 26       		.uleb128 0x26
 31898 1bea 6900     		.ascii	"i\000"
 31899 1bec 01       		.byte	0x1
 31900 1bed ED0B     		.2byte	0xbed
 31901 1bef 73000000 		.4byte	0x73
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 685


 31902 1bf3 02       		.uleb128 0x2
 31903 1bf4 91       		.byte	0x91
 31904 1bf5 74       		.sleb128 -12
 31905 1bf6 23       		.uleb128 0x23
 31906 1bf7 FC000000 		.4byte	.LASF312
 31907 1bfb 01       		.byte	0x1
 31908 1bfc EE0B     		.2byte	0xbee
 31909 1bfe 97000000 		.4byte	0x97
 31910 1c02 02       		.uleb128 0x2
 31911 1c03 91       		.byte	0x91
 31912 1c04 6B       		.sleb128 -21
 31913 1c05 23       		.uleb128 0x23
 31914 1c06 57070000 		.4byte	.LASF313
 31915 1c0a 01       		.byte	0x1
 31916 1c0b EF0B     		.2byte	0xbef
 31917 1c0d 73000000 		.4byte	0x73
 31918 1c11 02       		.uleb128 0x2
 31919 1c12 91       		.byte	0x91
 31920 1c13 6C       		.sleb128 -20
 31921 1c14 23       		.uleb128 0x23
 31922 1c15 6A060000 		.4byte	.LASF314
 31923 1c19 01       		.byte	0x1
 31924 1c1a F00B     		.2byte	0xbf0
 31925 1c1c 97000000 		.4byte	0x97
 31926 1c20 02       		.uleb128 0x2
 31927 1c21 91       		.byte	0x91
 31928 1c22 73       		.sleb128 -13
 31929 1c23 00       		.byte	0
 31930 1c24 22       		.uleb128 0x22
 31931 1c25 5B100000 		.4byte	.LASF315
 31932 1c29 01       		.byte	0x1
 31933 1c2a 150C     		.2byte	0xc15
 31934 1c2c 00000000 		.4byte	.LFB87
 31935 1c30 80000000 		.4byte	.LFE87-.LFB87
 31936 1c34 01       		.uleb128 0x1
 31937 1c35 9C       		.byte	0x9c
 31938 1c36 481C0000 		.4byte	0x1c48
 31939 1c3a 26       		.uleb128 0x26
 31940 1c3b 6900     		.ascii	"i\000"
 31941 1c3d 01       		.byte	0x1
 31942 1c3e 170C     		.2byte	0xc17
 31943 1c40 A3000000 		.4byte	0xa3
 31944 1c44 02       		.uleb128 0x2
 31945 1c45 91       		.byte	0x91
 31946 1c46 76       		.sleb128 -10
 31947 1c47 00       		.byte	0
 31948 1c48 2B       		.uleb128 0x2b
 31949 1c49 A10F0000 		.4byte	.LASF316
 31950 1c4d 01       		.byte	0x1
 31951 1c4e 2E0C     		.2byte	0xc2e
 31952 1c50 97000000 		.4byte	0x97
 31953 1c54 00000000 		.4byte	.LFB88
 31954 1c58 5C000000 		.4byte	.LFE88-.LFB88
 31955 1c5c 01       		.uleb128 0x1
 31956 1c5d 9C       		.byte	0x9c
 31957 1c5e 701C0000 		.4byte	0x1c70
 31958 1c62 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 686


 31959 1c63 6900     		.ascii	"i\000"
 31960 1c65 01       		.byte	0x1
 31961 1c66 2F0C     		.2byte	0xc2f
 31962 1c68 A3000000 		.4byte	0xa3
 31963 1c6c 02       		.uleb128 0x2
 31964 1c6d 91       		.byte	0x91
 31965 1c6e 76       		.sleb128 -10
 31966 1c6f 00       		.byte	0
 31967 1c70 2B       		.uleb128 0x2b
 31968 1c71 5D070000 		.4byte	.LASF317
 31969 1c75 01       		.byte	0x1
 31970 1c76 410C     		.2byte	0xc41
 31971 1c78 97000000 		.4byte	0x97
 31972 1c7c 00000000 		.4byte	.LFB89
 31973 1c80 30060000 		.4byte	.LFE89-.LFB89
 31974 1c84 01       		.uleb128 0x1
 31975 1c85 9C       		.byte	0x9c
 31976 1c86 A51C0000 		.4byte	0x1ca5
 31977 1c8a 26       		.uleb128 0x26
 31978 1c8b 6900     		.ascii	"i\000"
 31979 1c8d 01       		.byte	0x1
 31980 1c8e 430C     		.2byte	0xc43
 31981 1c90 97000000 		.4byte	0x97
 31982 1c94 02       		.uleb128 0x2
 31983 1c95 91       		.byte	0x91
 31984 1c96 77       		.sleb128 -9
 31985 1c97 26       		.uleb128 0x26
 31986 1c98 6A00     		.ascii	"j\000"
 31987 1c9a 01       		.byte	0x1
 31988 1c9b 430C     		.2byte	0xc43
 31989 1c9d 97000000 		.4byte	0x97
 31990 1ca1 02       		.uleb128 0x2
 31991 1ca2 91       		.byte	0x91
 31992 1ca3 76       		.sleb128 -10
 31993 1ca4 00       		.byte	0
 31994 1ca5 28       		.uleb128 0x28
 31995 1ca6 200A0000 		.4byte	.LASF318
 31996 1caa 01       		.byte	0x1
 31997 1cab DD0C     		.2byte	0xcdd
 31998 1cad 00000000 		.4byte	.LFB90
 31999 1cb1 40020000 		.4byte	.LFE90-.LFB90
 32000 1cb5 01       		.uleb128 0x1
 32001 1cb6 9C       		.byte	0x9c
 32002 1cb7 E21C0000 		.4byte	0x1ce2
 32003 1cbb 23       		.uleb128 0x23
 32004 1cbc 970F0000 		.4byte	.LASF248
 32005 1cc0 01       		.byte	0x1
 32006 1cc1 DF0C     		.2byte	0xcdf
 32007 1cc3 97000000 		.4byte	0x97
 32008 1cc7 02       		.uleb128 0x2
 32009 1cc8 91       		.byte	0x91
 32010 1cc9 73       		.sleb128 -13
 32011 1cca 1E       		.uleb128 0x1e
 32012 1ccb FA000000 		.4byte	.LBB30
 32013 1ccf 6A000000 		.4byte	.LBE30-.LBB30
 32014 1cd3 26       		.uleb128 0x26
 32015 1cd4 6900     		.ascii	"i\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 687


 32016 1cd6 01       		.byte	0x1
 32017 1cd7 F00C     		.2byte	0xcf0
 32018 1cd9 73000000 		.4byte	0x73
 32019 1cdd 02       		.uleb128 0x2
 32020 1cde 91       		.byte	0x91
 32021 1cdf 74       		.sleb128 -12
 32022 1ce0 00       		.byte	0
 32023 1ce1 00       		.byte	0
 32024 1ce2 2C       		.uleb128 0x2c
 32025 1ce3 F50C0000 		.4byte	.LASF319
 32026 1ce7 01       		.byte	0x1
 32027 1ce8 100D     		.2byte	0xd10
 32028 1cea 00000000 		.4byte	.LFB91
 32029 1cee 28000000 		.4byte	.LFE91-.LFB91
 32030 1cf2 01       		.uleb128 0x1
 32031 1cf3 9C       		.byte	0x9c
 32032 1cf4 2D       		.uleb128 0x2d
 32033 1cf5 740E0000 		.4byte	.LASF333
 32034 1cf9 01       		.byte	0x1
 32035 1cfa 1C0D     		.2byte	0xd1c
 32036 1cfc 00000000 		.4byte	.LFB92
 32037 1d00 88000000 		.4byte	.LFE92-.LFB92
 32038 1d04 01       		.uleb128 0x1
 32039 1d05 9C       		.byte	0x9c
 32040 1d06 2C       		.uleb128 0x2c
 32041 1d07 9E040000 		.4byte	.LASF320
 32042 1d0b 01       		.byte	0x1
 32043 1d0c 340D     		.2byte	0xd34
 32044 1d0e 00000000 		.4byte	.LFB93
 32045 1d12 B0000000 		.4byte	.LFE93-.LFB93
 32046 1d16 01       		.uleb128 0x1
 32047 1d17 9C       		.byte	0x9c
 32048 1d18 27       		.uleb128 0x27
 32049 1d19 9F070000 		.4byte	.LASF322
 32050 1d1d 01       		.byte	0x1
 32051 1d1e 550D     		.2byte	0xd55
 32052 1d20 00000000 		.4byte	.LFB94
 32053 1d24 28010000 		.4byte	.LFE94-.LFB94
 32054 1d28 01       		.uleb128 0x1
 32055 1d29 9C       		.byte	0x9c
 32056 1d2a 5C1D0000 		.4byte	0x1d5c
 32057 1d2e 23       		.uleb128 0x23
 32058 1d2f 22080000 		.4byte	.LASF253
 32059 1d33 01       		.byte	0x1
 32060 1d34 570D     		.2byte	0xd57
 32061 1d36 97000000 		.4byte	0x97
 32062 1d3a 02       		.uleb128 0x2
 32063 1d3b 91       		.byte	0x91
 32064 1d3c 6F       		.sleb128 -17
 32065 1d3d 23       		.uleb128 0x23
 32066 1d3e 99130000 		.4byte	.LASF244
 32067 1d42 01       		.byte	0x1
 32068 1d43 580D     		.2byte	0xd58
 32069 1d45 C7000000 		.4byte	0xc7
 32070 1d49 02       		.uleb128 0x2
 32071 1d4a 91       		.byte	0x91
 32072 1d4b 6C       		.sleb128 -20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 688


 32073 1d4c 23       		.uleb128 0x23
 32074 1d4d 16070000 		.4byte	.LASF238
 32075 1d51 01       		.byte	0x1
 32076 1d52 5B0D     		.2byte	0xd5b
 32077 1d54 75080000 		.4byte	0x875
 32078 1d58 02       		.uleb128 0x2
 32079 1d59 91       		.byte	0x91
 32080 1d5a 64       		.sleb128 -28
 32081 1d5b 00       		.byte	0
 32082 1d5c 27       		.uleb128 0x27
 32083 1d5d 48100000 		.4byte	.LASF323
 32084 1d61 01       		.byte	0x1
 32085 1d62 760D     		.2byte	0xd76
 32086 1d64 00000000 		.4byte	.LFB95
 32087 1d68 B8000000 		.4byte	.LFE95-.LFB95
 32088 1d6c 01       		.uleb128 0x1
 32089 1d6d 9C       		.byte	0x9c
 32090 1d6e A01D0000 		.4byte	0x1da0
 32091 1d72 23       		.uleb128 0x23
 32092 1d73 22080000 		.4byte	.LASF253
 32093 1d77 01       		.byte	0x1
 32094 1d78 780D     		.2byte	0xd78
 32095 1d7a 97000000 		.4byte	0x97
 32096 1d7e 02       		.uleb128 0x2
 32097 1d7f 91       		.byte	0x91
 32098 1d80 6F       		.sleb128 -17
 32099 1d81 23       		.uleb128 0x23
 32100 1d82 99130000 		.4byte	.LASF244
 32101 1d86 01       		.byte	0x1
 32102 1d87 790D     		.2byte	0xd79
 32103 1d89 C7000000 		.4byte	0xc7
 32104 1d8d 02       		.uleb128 0x2
 32105 1d8e 91       		.byte	0x91
 32106 1d8f 6C       		.sleb128 -20
 32107 1d90 23       		.uleb128 0x23
 32108 1d91 16070000 		.4byte	.LASF238
 32109 1d95 01       		.byte	0x1
 32110 1d96 7D0D     		.2byte	0xd7d
 32111 1d98 75080000 		.4byte	0x875
 32112 1d9c 02       		.uleb128 0x2
 32113 1d9d 91       		.byte	0x91
 32114 1d9e 64       		.sleb128 -28
 32115 1d9f 00       		.byte	0
 32116 1da0 27       		.uleb128 0x27
 32117 1da1 38020000 		.4byte	.LASF324
 32118 1da5 01       		.byte	0x1
 32119 1da6 8F0D     		.2byte	0xd8f
 32120 1da8 00000000 		.4byte	.LFB96
 32121 1dac B8000000 		.4byte	.LFE96-.LFB96
 32122 1db0 01       		.uleb128 0x1
 32123 1db1 9C       		.byte	0x9c
 32124 1db2 E41D0000 		.4byte	0x1de4
 32125 1db6 23       		.uleb128 0x23
 32126 1db7 22080000 		.4byte	.LASF253
 32127 1dbb 01       		.byte	0x1
 32128 1dbc 910D     		.2byte	0xd91
 32129 1dbe 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 689


 32130 1dc2 02       		.uleb128 0x2
 32131 1dc3 91       		.byte	0x91
 32132 1dc4 6F       		.sleb128 -17
 32133 1dc5 23       		.uleb128 0x23
 32134 1dc6 99130000 		.4byte	.LASF244
 32135 1dca 01       		.byte	0x1
 32136 1dcb 920D     		.2byte	0xd92
 32137 1dcd C7000000 		.4byte	0xc7
 32138 1dd1 02       		.uleb128 0x2
 32139 1dd2 91       		.byte	0x91
 32140 1dd3 6C       		.sleb128 -20
 32141 1dd4 23       		.uleb128 0x23
 32142 1dd5 16070000 		.4byte	.LASF238
 32143 1dd9 01       		.byte	0x1
 32144 1dda 960D     		.2byte	0xd96
 32145 1ddc 75080000 		.4byte	0x875
 32146 1de0 02       		.uleb128 0x2
 32147 1de1 91       		.byte	0x91
 32148 1de2 64       		.sleb128 -28
 32149 1de3 00       		.byte	0
 32150 1de4 27       		.uleb128 0x27
 32151 1de5 3E0B0000 		.4byte	.LASF325
 32152 1de9 01       		.byte	0x1
 32153 1dea A80D     		.2byte	0xda8
 32154 1dec 00000000 		.4byte	.LFB97
 32155 1df0 5C000000 		.4byte	.LFE97-.LFB97
 32156 1df4 01       		.uleb128 0x1
 32157 1df5 9C       		.byte	0x9c
 32158 1df6 191E0000 		.4byte	0x1e19
 32159 1dfa 23       		.uleb128 0x23
 32160 1dfb 99130000 		.4byte	.LASF244
 32161 1dff 01       		.byte	0x1
 32162 1e00 AA0D     		.2byte	0xdaa
 32163 1e02 C7000000 		.4byte	0xc7
 32164 1e06 02       		.uleb128 0x2
 32165 1e07 91       		.byte	0x91
 32166 1e08 76       		.sleb128 -10
 32167 1e09 23       		.uleb128 0x23
 32168 1e0a 16070000 		.4byte	.LASF238
 32169 1e0e 01       		.byte	0x1
 32170 1e0f AE0D     		.2byte	0xdae
 32171 1e11 A8090000 		.4byte	0x9a8
 32172 1e15 02       		.uleb128 0x2
 32173 1e16 91       		.byte	0x91
 32174 1e17 70       		.sleb128 -16
 32175 1e18 00       		.byte	0
 32176 1e19 2E       		.uleb128 0x2e
 32177 1e1a 540D0000 		.4byte	.LASF326
 32178 1e1e 01       		.byte	0x1
 32179 1e1f C00D     		.2byte	0xdc0
 32180 1e21 00000000 		.4byte	.LFB98
 32181 1e25 44020000 		.4byte	.LFE98-.LFB98
 32182 1e29 01       		.uleb128 0x1
 32183 1e2a 9C       		.byte	0x9c
 32184 1e2b 831E0000 		.4byte	0x1e83
 32185 1e2f 23       		.uleb128 0x23
 32186 1e30 99130000 		.4byte	.LASF244
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 690


 32187 1e34 01       		.byte	0x1
 32188 1e35 C30D     		.2byte	0xdc3
 32189 1e37 831E0000 		.4byte	0x1e83
 32190 1e3b 02       		.uleb128 0x2
 32191 1e3c 91       		.byte	0x91
 32192 1e3d 70       		.sleb128 -16
 32193 1e3e 23       		.uleb128 0x23
 32194 1e3f E4070000 		.4byte	.LASF327
 32195 1e43 01       		.byte	0x1
 32196 1e44 C40D     		.2byte	0xdc4
 32197 1e46 831E0000 		.4byte	0x1e83
 32198 1e4a 05       		.uleb128 0x5
 32199 1e4b 03       		.byte	0x3
 32200 1e4c 08000000 		.4byte	last_aux_int16.11165
 32201 1e50 2F       		.uleb128 0x2f
 32202 1e51 2E000000 		.4byte	.LBB31
 32203 1e55 50000000 		.4byte	.LBE31-.LBB31
 32204 1e59 6B1E0000 		.4byte	0x1e6b
 32205 1e5d 26       		.uleb128 0x26
 32206 1e5e 6900     		.ascii	"i\000"
 32207 1e60 01       		.byte	0x1
 32208 1e61 CB0D     		.2byte	0xdcb
 32209 1e63 97000000 		.4byte	0x97
 32210 1e67 02       		.uleb128 0x2
 32211 1e68 91       		.byte	0x91
 32212 1e69 77       		.sleb128 -9
 32213 1e6a 00       		.byte	0
 32214 1e6b 1E       		.uleb128 0x1e
 32215 1e6c 88000000 		.4byte	.LBB32
 32216 1e70 98010000 		.4byte	.LBE32-.LBB32
 32217 1e74 26       		.uleb128 0x26
 32218 1e75 6900     		.ascii	"i\000"
 32219 1e77 01       		.byte	0x1
 32220 1e78 D50D     		.2byte	0xdd5
 32221 1e7a 97000000 		.4byte	0x97
 32222 1e7e 02       		.uleb128 0x2
 32223 1e7f 91       		.byte	0x91
 32224 1e80 76       		.sleb128 -10
 32225 1e81 00       		.byte	0
 32226 1e82 00       		.byte	0
 32227 1e83 09       		.uleb128 0x9
 32228 1e84 C7000000 		.4byte	0xc7
 32229 1e88 931E0000 		.4byte	0x1e93
 32230 1e8c 0A       		.uleb128 0xa
 32231 1e8d 18010000 		.4byte	0x118
 32232 1e91 01       		.byte	0x1
 32233 1e92 00       		.byte	0
 32234 1e93 27       		.uleb128 0x27
 32235 1e94 1D160000 		.4byte	.LASF328
 32236 1e98 01       		.byte	0x1
 32237 1e99 F00D     		.2byte	0xdf0
 32238 1e9b 00000000 		.4byte	.LFB99
 32239 1e9f E4000000 		.4byte	.LFE99-.LFB99
 32240 1ea3 01       		.uleb128 0x1
 32241 1ea4 9C       		.byte	0x9c
 32242 1ea5 B91E0000 		.4byte	0x1eb9
 32243 1ea9 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 691


 32244 1eaa 61757800 		.ascii	"aux\000"
 32245 1eae 01       		.byte	0x1
 32246 1eaf F30D     		.2byte	0xdf3
 32247 1eb1 97000000 		.4byte	0x97
 32248 1eb5 02       		.uleb128 0x2
 32249 1eb6 91       		.byte	0x91
 32250 1eb7 77       		.sleb128 -9
 32251 1eb8 00       		.byte	0
 32252 1eb9 27       		.uleb128 0x27
 32253 1eba B20D0000 		.4byte	.LASF329
 32254 1ebe 01       		.byte	0x1
 32255 1ebf 150E     		.2byte	0xe15
 32256 1ec1 00000000 		.4byte	.LFB100
 32257 1ec5 5C000000 		.4byte	.LFE100-.LFB100
 32258 1ec9 01       		.uleb128 0x1
 32259 1eca 9C       		.byte	0x9c
 32260 1ecb DF1E0000 		.4byte	0x1edf
 32261 1ecf 23       		.uleb128 0x23
 32262 1ed0 16070000 		.4byte	.LASF238
 32263 1ed4 01       		.byte	0x1
 32264 1ed5 170E     		.2byte	0xe17
 32265 1ed7 28060000 		.4byte	0x628
 32266 1edb 02       		.uleb128 0x2
 32267 1edc 91       		.byte	0x91
 32268 1edd 74       		.sleb128 -12
 32269 1ede 00       		.byte	0
 32270 1edf 27       		.uleb128 0x27
 32271 1ee0 9B110000 		.4byte	.LASF330
 32272 1ee4 01       		.byte	0x1
 32273 1ee5 2C0E     		.2byte	0xe2c
 32274 1ee7 00000000 		.4byte	.LFB101
 32275 1eeb 38010000 		.4byte	.LFE101-.LFB101
 32276 1eef 01       		.uleb128 0x1
 32277 1ef0 9C       		.byte	0x9c
 32278 1ef1 231F0000 		.4byte	0x1f23
 32279 1ef5 23       		.uleb128 0x23
 32280 1ef6 22080000 		.4byte	.LASF253
 32281 1efa 01       		.byte	0x1
 32282 1efb 2E0E     		.2byte	0xe2e
 32283 1efd 97000000 		.4byte	0x97
 32284 1f01 02       		.uleb128 0x2
 32285 1f02 91       		.byte	0x91
 32286 1f03 6F       		.sleb128 -17
 32287 1f04 23       		.uleb128 0x23
 32288 1f05 99130000 		.4byte	.LASF244
 32289 1f09 01       		.byte	0x1
 32290 1f0a 2F0E     		.2byte	0xe2f
 32291 1f0c C7000000 		.4byte	0xc7
 32292 1f10 02       		.uleb128 0x2
 32293 1f11 91       		.byte	0x91
 32294 1f12 6C       		.sleb128 -20
 32295 1f13 23       		.uleb128 0x23
 32296 1f14 16070000 		.4byte	.LASF238
 32297 1f18 01       		.byte	0x1
 32298 1f19 330E     		.2byte	0xe33
 32299 1f1b 89050000 		.4byte	0x589
 32300 1f1f 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 692


 32301 1f20 91       		.byte	0x91
 32302 1f21 60       		.sleb128 -32
 32303 1f22 00       		.byte	0
 32304 1f23 27       		.uleb128 0x27
 32305 1f24 BD0B0000 		.4byte	.LASF331
 32306 1f28 01       		.byte	0x1
 32307 1f29 530E     		.2byte	0xe53
 32308 1f2b 00000000 		.4byte	.LFB102
 32309 1f2f DC000000 		.4byte	.LFE102-.LFB102
 32310 1f33 01       		.uleb128 0x1
 32311 1f34 9C       		.byte	0x9c
 32312 1f35 581F0000 		.4byte	0x1f58
 32313 1f39 23       		.uleb128 0x23
 32314 1f3a 16070000 		.4byte	.LASF238
 32315 1f3e 01       		.byte	0x1
 32316 1f3f 570E     		.2byte	0xe57
 32317 1f41 A8090000 		.4byte	0x9a8
 32318 1f45 02       		.uleb128 0x2
 32319 1f46 91       		.byte	0x91
 32320 1f47 68       		.sleb128 -24
 32321 1f48 23       		.uleb128 0x23
 32322 1f49 99130000 		.4byte	.LASF244
 32323 1f4d 01       		.byte	0x1
 32324 1f4e 580E     		.2byte	0xe58
 32325 1f50 C7000000 		.4byte	0xc7
 32326 1f54 02       		.uleb128 0x2
 32327 1f55 91       		.byte	0x91
 32328 1f56 66       		.sleb128 -26
 32329 1f57 00       		.byte	0
 32330 1f58 27       		.uleb128 0x27
 32331 1f59 96080000 		.4byte	.LASF332
 32332 1f5d 01       		.byte	0x1
 32333 1f5e 7A0E     		.2byte	0xe7a
 32334 1f60 00000000 		.4byte	.LFB103
 32335 1f64 64000000 		.4byte	.LFE103-.LFB103
 32336 1f68 01       		.uleb128 0x1
 32337 1f69 9C       		.byte	0x9c
 32338 1f6a 8D1F0000 		.4byte	0x1f8d
 32339 1f6e 23       		.uleb128 0x23
 32340 1f6f 16070000 		.4byte	.LASF238
 32341 1f73 01       		.byte	0x1
 32342 1f74 7E0E     		.2byte	0xe7e
 32343 1f76 8D1F0000 		.4byte	0x1f8d
 32344 1f7a 02       		.uleb128 0x2
 32345 1f7b 91       		.byte	0x91
 32346 1f7c 74       		.sleb128 -12
 32347 1f7d 23       		.uleb128 0x23
 32348 1f7e 99130000 		.4byte	.LASF244
 32349 1f82 01       		.byte	0x1
 32350 1f83 7F0E     		.2byte	0xe7f
 32351 1f85 C7000000 		.4byte	0xc7
 32352 1f89 02       		.uleb128 0x2
 32353 1f8a 91       		.byte	0x91
 32354 1f8b 72       		.sleb128 -14
 32355 1f8c 00       		.byte	0
 32356 1f8d 09       		.uleb128 0x9
 32357 1f8e 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 693


 32358 1f92 9D1F0000 		.4byte	0x1f9d
 32359 1f96 0A       		.uleb128 0xa
 32360 1f97 18010000 		.4byte	0x118
 32361 1f9b 03       		.byte	0x3
 32362 1f9c 00       		.byte	0
 32363 1f9d 2D       		.uleb128 0x2d
 32364 1f9e 88090000 		.4byte	.LASF334
 32365 1fa2 01       		.byte	0x1
 32366 1fa3 900E     		.2byte	0xe90
 32367 1fa5 00000000 		.4byte	.LFB104
 32368 1fa9 0C000000 		.4byte	.LFE104-.LFB104
 32369 1fad 01       		.uleb128 0x1
 32370 1fae 9C       		.byte	0x9c
 32371 1faf 27       		.uleb128 0x27
 32372 1fb0 6C160000 		.4byte	.LASF335
 32373 1fb4 01       		.byte	0x1
 32374 1fb5 970E     		.2byte	0xe97
 32375 1fb7 00000000 		.4byte	.LFB105
 32376 1fbb C4000000 		.4byte	.LFE105-.LFB105
 32377 1fbf 01       		.uleb128 0x1
 32378 1fc0 9C       		.byte	0x9c
 32379 1fc1 11200000 		.4byte	0x2011
 32380 1fc5 23       		.uleb128 0x23
 32381 1fc6 16070000 		.4byte	.LASF238
 32382 1fca 01       		.byte	0x1
 32383 1fcb 9C0E     		.2byte	0xe9c
 32384 1fcd 11200000 		.4byte	0x2011
 32385 1fd1 02       		.uleb128 0x2
 32386 1fd2 91       		.byte	0x91
 32387 1fd3 5C       		.sleb128 -36
 32388 1fd4 23       		.uleb128 0x23
 32389 1fd5 E1090000 		.4byte	.LASF239
 32390 1fd9 01       		.byte	0x1
 32391 1fda 9D0E     		.2byte	0xe9d
 32392 1fdc 97000000 		.4byte	0x97
 32393 1fe0 02       		.uleb128 0x2
 32394 1fe1 91       		.byte	0x91
 32395 1fe2 76       		.sleb128 -10
 32396 1fe3 23       		.uleb128 0x23
 32397 1fe4 06030000 		.4byte	.LASF336
 32398 1fe8 01       		.byte	0x1
 32399 1fe9 9F0E     		.2byte	0xe9f
 32400 1feb AF000000 		.4byte	0xaf
 32401 1fef 02       		.uleb128 0x2
 32402 1ff0 91       		.byte	0x91
 32403 1ff1 70       		.sleb128 -16
 32404 1ff2 23       		.uleb128 0x23
 32405 1ff3 0A150000 		.4byte	.LASF337
 32406 1ff7 01       		.byte	0x1
 32407 1ff8 9F0E     		.2byte	0xe9f
 32408 1ffa AF000000 		.4byte	0xaf
 32409 1ffe 02       		.uleb128 0x2
 32410 1fff 91       		.byte	0x91
 32411 2000 6C       		.sleb128 -20
 32412 2001 23       		.uleb128 0x23
 32413 2002 1C050000 		.4byte	.LASF338
 32414 2006 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 694


 32415 2007 A00E     		.2byte	0xea0
 32416 2009 97000000 		.4byte	0x97
 32417 200d 02       		.uleb128 0x2
 32418 200e 91       		.byte	0x91
 32419 200f 77       		.sleb128 -9
 32420 2010 00       		.byte	0
 32421 2011 09       		.uleb128 0x9
 32422 2012 97000000 		.4byte	0x97
 32423 2016 21200000 		.4byte	0x2021
 32424 201a 0A       		.uleb128 0xa
 32425 201b 18010000 		.4byte	0x118
 32426 201f 0F       		.byte	0xf
 32427 2020 00       		.byte	0
 32428 2021 30       		.uleb128 0x30
 32429 2022 80080000 		.4byte	.LASF339
 32430 2026 01       		.byte	0x1
 32431 2027 C10E     		.2byte	0xec1
 32432 2029 C7000000 		.4byte	0xc7
 32433 202d 00000000 		.4byte	.LFB106
 32434 2031 A8000000 		.4byte	.LFE106-.LFB106
 32435 2035 01       		.uleb128 0x1
 32436 2036 9C       		.byte	0x9c
 32437 2037 96200000 		.4byte	0x2096
 32438 203b 23       		.uleb128 0x23
 32439 203c 16070000 		.4byte	.LASF238
 32440 2040 01       		.byte	0x1
 32441 2041 C30E     		.2byte	0xec3
 32442 2043 11200000 		.4byte	0x2011
 32443 2047 02       		.uleb128 0x2
 32444 2048 91       		.byte	0x91
 32445 2049 5C       		.sleb128 -36
 32446 204a 23       		.uleb128 0x23
 32447 204b E1090000 		.4byte	.LASF239
 32448 204f 01       		.byte	0x1
 32449 2050 C40E     		.2byte	0xec4
 32450 2052 97000000 		.4byte	0x97
 32451 2056 02       		.uleb128 0x2
 32452 2057 91       		.byte	0x91
 32453 2058 74       		.sleb128 -12
 32454 2059 23       		.uleb128 0x23
 32455 205a 25110000 		.4byte	.LASF340
 32456 205e 01       		.byte	0x1
 32457 205f C50E     		.2byte	0xec5
 32458 2061 C7000000 		.4byte	0xc7
 32459 2065 02       		.uleb128 0x2
 32460 2066 91       		.byte	0x91
 32461 2067 76       		.sleb128 -10
 32462 2068 23       		.uleb128 0x23
 32463 2069 06030000 		.4byte	.LASF336
 32464 206d 01       		.byte	0x1
 32465 206e C60E     		.2byte	0xec6
 32466 2070 AF000000 		.4byte	0xaf
 32467 2074 02       		.uleb128 0x2
 32468 2075 91       		.byte	0x91
 32469 2076 70       		.sleb128 -16
 32470 2077 23       		.uleb128 0x23
 32471 2078 0A150000 		.4byte	.LASF337
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 695


 32472 207c 01       		.byte	0x1
 32473 207d C60E     		.2byte	0xec6
 32474 207f AF000000 		.4byte	0xaf
 32475 2083 02       		.uleb128 0x2
 32476 2084 91       		.byte	0x91
 32477 2085 6C       		.sleb128 -20
 32478 2086 23       		.uleb128 0x23
 32479 2087 1C050000 		.4byte	.LASF338
 32480 208b 01       		.byte	0x1
 32481 208c C70E     		.2byte	0xec7
 32482 208e 97000000 		.4byte	0x97
 32483 2092 02       		.uleb128 0x2
 32484 2093 91       		.byte	0x91
 32485 2094 75       		.sleb128 -11
 32486 2095 00       		.byte	0
 32487 2096 31       		.uleb128 0x31
 32488 2097 1D010000 		.4byte	.LASF341
 32489 209b 01       		.byte	0x1
 32490 209c E70E     		.2byte	0xee7
 32491 209e 00000000 		.4byte	.LFB107
 32492 20a2 34000000 		.4byte	.LFE107-.LFB107
 32493 20a6 01       		.uleb128 0x1
 32494 20a7 9C       		.byte	0x9c
 32495 20a8 27       		.uleb128 0x27
 32496 20a9 5E040000 		.4byte	.LASF342
 32497 20ad 01       		.byte	0x1
 32498 20ae F50E     		.2byte	0xef5
 32499 20b0 00000000 		.4byte	.LFB108
 32500 20b4 20000000 		.4byte	.LFE108-.LFB108
 32501 20b8 01       		.uleb128 0x1
 32502 20b9 9C       		.byte	0x9c
 32503 20ba CE200000 		.4byte	0x20ce
 32504 20be 23       		.uleb128 0x23
 32505 20bf 16070000 		.4byte	.LASF238
 32506 20c3 01       		.byte	0x1
 32507 20c4 F70E     		.2byte	0xef7
 32508 20c6 E4080000 		.4byte	0x8e4
 32509 20ca 02       		.uleb128 0x2
 32510 20cb 91       		.byte	0x91
 32511 20cc 74       		.sleb128 -12
 32512 20cd 00       		.byte	0
 32513 20ce 27       		.uleb128 0x27
 32514 20cf 95010000 		.4byte	.LASF343
 32515 20d3 01       		.byte	0x1
 32516 20d4 030F     		.2byte	0xf03
 32517 20d6 00000000 		.4byte	.LFB109
 32518 20da A0000000 		.4byte	.LFE109-.LFB109
 32519 20de 01       		.uleb128 0x1
 32520 20df 9C       		.byte	0x9c
 32521 20e0 03210000 		.4byte	0x2103
 32522 20e4 23       		.uleb128 0x23
 32523 20e5 16070000 		.4byte	.LASF238
 32524 20e9 01       		.byte	0x1
 32525 20ea 070F     		.2byte	0xf07
 32526 20ec A8090000 		.4byte	0x9a8
 32527 20f0 02       		.uleb128 0x2
 32528 20f1 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 696


 32529 20f2 70       		.sleb128 -16
 32530 20f3 23       		.uleb128 0x23
 32531 20f4 99130000 		.4byte	.LASF244
 32532 20f8 01       		.byte	0x1
 32533 20f9 080F     		.2byte	0xf08
 32534 20fb C7000000 		.4byte	0xc7
 32535 20ff 02       		.uleb128 0x2
 32536 2100 91       		.byte	0x91
 32537 2101 6E       		.sleb128 -18
 32538 2102 00       		.byte	0
 32539 2103 27       		.uleb128 0x27
 32540 2104 64120000 		.4byte	.LASF344
 32541 2108 01       		.byte	0x1
 32542 2109 1C0F     		.2byte	0xf1c
 32543 210b 00000000 		.4byte	.LFB110
 32544 210f BC010000 		.4byte	.LFE110-.LFB110
 32545 2113 01       		.uleb128 0x1
 32546 2114 9C       		.byte	0x9c
 32547 2115 65210000 		.4byte	0x2165
 32548 2119 23       		.uleb128 0x23
 32549 211a 700D0000 		.4byte	.LASF345
 32550 211e 01       		.byte	0x1
 32551 211f 1F0F     		.2byte	0xf1f
 32552 2121 AF000000 		.4byte	0xaf
 32553 2125 02       		.uleb128 0x2
 32554 2126 91       		.byte	0x91
 32555 2127 70       		.sleb128 -16
 32556 2128 23       		.uleb128 0x23
 32557 2129 B5100000 		.4byte	.LASF346
 32558 212d 01       		.byte	0x1
 32559 212e 200F     		.2byte	0xf20
 32560 2130 EB000000 		.4byte	0xeb
 32561 2134 02       		.uleb128 0x2
 32562 2135 91       		.byte	0x91
 32563 2136 6C       		.sleb128 -20
 32564 2137 23       		.uleb128 0x23
 32565 2138 E1090000 		.4byte	.LASF239
 32566 213c 01       		.byte	0x1
 32567 213d 210F     		.2byte	0xf21
 32568 213f 97000000 		.4byte	0x97
 32569 2143 02       		.uleb128 0x2
 32570 2144 91       		.byte	0x91
 32571 2145 77       		.sleb128 -9
 32572 2146 23       		.uleb128 0x23
 32573 2147 16070000 		.4byte	.LASF238
 32574 214b 01       		.byte	0x1
 32575 214c 220F     		.2byte	0xf22
 32576 214e E4080000 		.4byte	0x8e4
 32577 2152 02       		.uleb128 0x2
 32578 2153 91       		.byte	0x91
 32579 2154 68       		.sleb128 -24
 32580 2155 23       		.uleb128 0x23
 32581 2156 62110000 		.4byte	.LASF301
 32582 215a 01       		.byte	0x1
 32583 215b 230F     		.2byte	0xf23
 32584 215d 97000000 		.4byte	0x97
 32585 2161 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 697


 32586 2162 91       		.byte	0x91
 32587 2163 6B       		.sleb128 -21
 32588 2164 00       		.byte	0
 32589 2165 27       		.uleb128 0x27
 32590 2166 4E020000 		.4byte	.LASF347
 32591 216a 01       		.byte	0x1
 32592 216b 5D0F     		.2byte	0xf5d
 32593 216d 00000000 		.4byte	.LFB111
 32594 2171 60000000 		.4byte	.LFE111-.LFB111
 32595 2175 01       		.uleb128 0x1
 32596 2176 9C       		.byte	0x9c
 32597 2177 9A210000 		.4byte	0x219a
 32598 217b 23       		.uleb128 0x23
 32599 217c 16070000 		.4byte	.LASF238
 32600 2180 01       		.byte	0x1
 32601 2181 5F0F     		.2byte	0xf5f
 32602 2183 A8090000 		.4byte	0x9a8
 32603 2187 02       		.uleb128 0x2
 32604 2188 91       		.byte	0x91
 32605 2189 70       		.sleb128 -16
 32606 218a 23       		.uleb128 0x23
 32607 218b 99130000 		.4byte	.LASF244
 32608 218f 01       		.byte	0x1
 32609 2190 600F     		.2byte	0xf60
 32610 2192 C7000000 		.4byte	0xc7
 32611 2196 02       		.uleb128 0x2
 32612 2197 91       		.byte	0x91
 32613 2198 6E       		.sleb128 -18
 32614 2199 00       		.byte	0
 32615 219a 27       		.uleb128 0x27
 32616 219b D1010000 		.4byte	.LASF348
 32617 219f 01       		.byte	0x1
 32618 21a0 730F     		.2byte	0xf73
 32619 21a2 00000000 		.4byte	.LFB112
 32620 21a6 98050000 		.4byte	.LFE112-.LFB112
 32621 21aa 01       		.uleb128 0x1
 32622 21ab 9C       		.byte	0x9c
 32623 21ac 27220000 		.4byte	0x2227
 32624 21b0 23       		.uleb128 0x23
 32625 21b1 58150000 		.4byte	.LASF349
 32626 21b5 01       		.byte	0x1
 32627 21b6 760F     		.2byte	0xf76
 32628 21b8 97000000 		.4byte	0x97
 32629 21bc 02       		.uleb128 0x2
 32630 21bd 91       		.byte	0x91
 32631 21be 6F       		.sleb128 -17
 32632 21bf 26       		.uleb128 0x26
 32633 21c0 6300     		.ascii	"c\000"
 32634 21c2 01       		.byte	0x1
 32635 21c3 770F     		.2byte	0xf77
 32636 21c5 A3000000 		.4byte	0xa3
 32637 21c9 02       		.uleb128 0x2
 32638 21ca 91       		.byte	0x91
 32639 21cb 6C       		.sleb128 -20
 32640 21cc 26       		.uleb128 0x26
 32641 21cd 6B00     		.ascii	"k\000"
 32642 21cf 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 698


 32643 21d0 780F     		.2byte	0xf78
 32644 21d2 97000000 		.4byte	0x97
 32645 21d6 02       		.uleb128 0x2
 32646 21d7 91       		.byte	0x91
 32647 21d8 6B       		.sleb128 -21
 32648 21d9 23       		.uleb128 0x23
 32649 21da 6A000000 		.4byte	.LASF350
 32650 21de 01       		.byte	0x1
 32651 21df 790F     		.2byte	0xf79
 32652 21e1 A3000000 		.4byte	0xa3
 32653 21e5 02       		.uleb128 0x2
 32654 21e6 91       		.byte	0x91
 32655 21e7 68       		.sleb128 -24
 32656 21e8 23       		.uleb128 0x23
 32657 21e9 99130000 		.4byte	.LASF244
 32658 21ed 01       		.byte	0x1
 32659 21ee 7A0F     		.2byte	0xf7a
 32660 21f0 C7000000 		.4byte	0xc7
 32661 21f4 02       		.uleb128 0x2
 32662 21f5 91       		.byte	0x91
 32663 21f6 66       		.sleb128 -26
 32664 21f7 23       		.uleb128 0x23
 32665 21f8 D5140000 		.4byte	.LASF243
 32666 21fc 01       		.byte	0x1
 32667 21fd 7B0F     		.2byte	0xf7b
 32668 21ff EB000000 		.4byte	0xeb
 32669 2203 02       		.uleb128 0x2
 32670 2204 91       		.byte	0x91
 32671 2205 60       		.sleb128 -32
 32672 2206 23       		.uleb128 0x23
 32673 2207 16070000 		.4byte	.LASF238
 32674 220b 01       		.byte	0x1
 32675 220c 7E0F     		.2byte	0xf7e
 32676 220e 27220000 		.4byte	0x2227
 32677 2212 03       		.uleb128 0x3
 32678 2213 91       		.byte	0x91
 32679 2214 807D     		.sleb128 -384
 32680 2216 23       		.uleb128 0x23
 32681 2217 710A0000 		.4byte	.LASF351
 32682 221b 01       		.byte	0x1
 32683 221c 7F0F     		.2byte	0xf7f
 32684 221e 910C0000 		.4byte	0xc91
 32685 2222 03       		.uleb128 0x3
 32686 2223 91       		.byte	0x91
 32687 2224 E07C     		.sleb128 -416
 32688 2226 00       		.byte	0
 32689 2227 09       		.uleb128 0x9
 32690 2228 97000000 		.4byte	0x97
 32691 222c 38220000 		.4byte	0x2238
 32692 2230 24       		.uleb128 0x24
 32693 2231 18010000 		.4byte	0x118
 32694 2235 5D01     		.2byte	0x15d
 32695 2237 00       		.byte	0
 32696 2238 27       		.uleb128 0x27
 32697 2239 B0140000 		.4byte	.LASF352
 32698 223d 01       		.byte	0x1
 32699 223e E20F     		.2byte	0xfe2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 699


 32700 2240 00000000 		.4byte	.LFB113
 32701 2244 8C000000 		.4byte	.LFE113-.LFB113
 32702 2248 01       		.uleb128 0x1
 32703 2249 9C       		.byte	0x9c
 32704 224a 78220000 		.4byte	0x2278
 32705 224e 23       		.uleb128 0x23
 32706 224f 16070000 		.4byte	.LASF238
 32707 2253 01       		.byte	0x1
 32708 2254 E50F     		.2byte	0xfe5
 32709 2256 C30A0000 		.4byte	0xac3
 32710 225a 02       		.uleb128 0x2
 32711 225b 91       		.byte	0x91
 32712 225c 60       		.sleb128 -32
 32713 225d 26       		.uleb128 0x26
 32714 225e 6900     		.ascii	"i\000"
 32715 2260 01       		.byte	0x1
 32716 2261 E60F     		.2byte	0xfe6
 32717 2263 97000000 		.4byte	0x97
 32718 2267 02       		.uleb128 0x2
 32719 2268 91       		.byte	0x91
 32720 2269 6F       		.sleb128 -17
 32721 226a 26       		.uleb128 0x26
 32722 226b 6A00     		.ascii	"j\000"
 32723 226d 01       		.byte	0x1
 32724 226e E60F     		.2byte	0xfe6
 32725 2270 97000000 		.4byte	0x97
 32726 2274 02       		.uleb128 0x2
 32727 2275 91       		.byte	0x91
 32728 2276 6E       		.sleb128 -18
 32729 2277 00       		.byte	0
 32730 2278 27       		.uleb128 0x27
 32731 2279 B9120000 		.4byte	.LASF353
 32732 227d 01       		.byte	0x1
 32733 227e FB0F     		.2byte	0xffb
 32734 2280 00000000 		.4byte	.LFB114
 32735 2284 EC000000 		.4byte	.LFE114-.LFB114
 32736 2288 01       		.uleb128 0x1
 32737 2289 9C       		.byte	0x9c
 32738 228a D6220000 		.4byte	0x22d6
 32739 228e 23       		.uleb128 0x23
 32740 228f 16070000 		.4byte	.LASF238
 32741 2293 01       		.byte	0x1
 32742 2294 FE0F     		.2byte	0xffe
 32743 2296 D6220000 		.4byte	0x22d6
 32744 229a 02       		.uleb128 0x2
 32745 229b 91       		.byte	0x91
 32746 229c 54       		.sleb128 -44
 32747 229d 26       		.uleb128 0x26
 32748 229e 6900     		.ascii	"i\000"
 32749 22a0 01       		.byte	0x1
 32750 22a1 FF0F     		.2byte	0xfff
 32751 22a3 97000000 		.4byte	0x97
 32752 22a7 02       		.uleb128 0x2
 32753 22a8 91       		.byte	0x91
 32754 22a9 6F       		.sleb128 -17
 32755 22aa 26       		.uleb128 0x26
 32756 22ab 6A00     		.ascii	"j\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 700


 32757 22ad 01       		.byte	0x1
 32758 22ae FF0F     		.2byte	0xfff
 32759 22b0 97000000 		.4byte	0x97
 32760 22b4 02       		.uleb128 0x2
 32761 22b5 91       		.byte	0x91
 32762 22b6 6E       		.sleb128 -18
 32763 22b7 26       		.uleb128 0x26
 32764 22b8 69647800 		.ascii	"idx\000"
 32765 22bc 01       		.byte	0x1
 32766 22bd FF0F     		.2byte	0xfff
 32767 22bf 97000000 		.4byte	0x97
 32768 22c3 02       		.uleb128 0x2
 32769 22c4 91       		.byte	0x91
 32770 22c5 6D       		.sleb128 -19
 32771 22c6 23       		.uleb128 0x23
 32772 22c7 490E0000 		.4byte	.LASF245
 32773 22cb 01       		.byte	0x1
 32774 22cc 0010     		.2byte	0x1000
 32775 22ce A3000000 		.4byte	0xa3
 32776 22d2 02       		.uleb128 0x2
 32777 22d3 91       		.byte	0x91
 32778 22d4 52       		.sleb128 -46
 32779 22d5 00       		.byte	0
 32780 22d6 09       		.uleb128 0x9
 32781 22d7 97000000 		.4byte	0x97
 32782 22db E6220000 		.4byte	0x22e6
 32783 22df 0A       		.uleb128 0xa
 32784 22e0 18010000 		.4byte	0x118
 32785 22e4 15       		.byte	0x15
 32786 22e5 00       		.byte	0
 32787 22e6 27       		.uleb128 0x27
 32788 22e7 F4030000 		.4byte	.LASF354
 32789 22eb 01       		.byte	0x1
 32790 22ec 1910     		.2byte	0x1019
 32791 22ee 00000000 		.4byte	.LFB115
 32792 22f2 5C000000 		.4byte	.LFE115-.LFB115
 32793 22f6 01       		.uleb128 0x1
 32794 22f7 9C       		.byte	0x9c
 32795 22f8 19230000 		.4byte	0x2319
 32796 22fc 23       		.uleb128 0x23
 32797 22fd 16070000 		.4byte	.LASF238
 32798 2301 01       		.byte	0x1
 32799 2302 1C10     		.2byte	0x101c
 32800 2304 810C0000 		.4byte	0xc81
 32801 2308 02       		.uleb128 0x2
 32802 2309 91       		.byte	0x91
 32803 230a 68       		.sleb128 -24
 32804 230b 26       		.uleb128 0x26
 32805 230c 6900     		.ascii	"i\000"
 32806 230e 01       		.byte	0x1
 32807 230f 1D10     		.2byte	0x101d
 32808 2311 97000000 		.4byte	0x97
 32809 2315 02       		.uleb128 0x2
 32810 2316 91       		.byte	0x91
 32811 2317 77       		.sleb128 -9
 32812 2318 00       		.byte	0
 32813 2319 27       		.uleb128 0x27
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 701


 32814 231a 2C040000 		.4byte	.LASF355
 32815 231e 01       		.byte	0x1
 32816 231f 3010     		.2byte	0x1030
 32817 2321 00000000 		.4byte	.LFB116
 32818 2325 C0000000 		.4byte	.LFE116-.LFB116
 32819 2329 01       		.uleb128 0x1
 32820 232a 9C       		.byte	0x9c
 32821 232b 6A230000 		.4byte	0x236a
 32822 232f 23       		.uleb128 0x23
 32823 2330 16070000 		.4byte	.LASF238
 32824 2334 01       		.byte	0x1
 32825 2335 3310     		.2byte	0x1033
 32826 2337 6A230000 		.4byte	0x236a
 32827 233b 02       		.uleb128 0x2
 32828 233c 91       		.byte	0x91
 32829 233d 54       		.sleb128 -44
 32830 233e 26       		.uleb128 0x26
 32831 233f 6900     		.ascii	"i\000"
 32832 2341 01       		.byte	0x1
 32833 2342 3410     		.2byte	0x1034
 32834 2344 97000000 		.4byte	0x97
 32835 2348 02       		.uleb128 0x2
 32836 2349 91       		.byte	0x91
 32837 234a 6F       		.sleb128 -17
 32838 234b 26       		.uleb128 0x26
 32839 234c 69647800 		.ascii	"idx\000"
 32840 2350 01       		.byte	0x1
 32841 2351 3410     		.2byte	0x1034
 32842 2353 97000000 		.4byte	0x97
 32843 2357 02       		.uleb128 0x2
 32844 2358 91       		.byte	0x91
 32845 2359 6E       		.sleb128 -18
 32846 235a 23       		.uleb128 0x23
 32847 235b 99130000 		.4byte	.LASF244
 32848 235f 01       		.byte	0x1
 32849 2360 3510     		.2byte	0x1035
 32850 2362 C7000000 		.4byte	0xc7
 32851 2366 02       		.uleb128 0x2
 32852 2367 91       		.byte	0x91
 32853 2368 52       		.sleb128 -46
 32854 2369 00       		.byte	0
 32855 236a 09       		.uleb128 0x9
 32856 236b 97000000 		.4byte	0x97
 32857 236f 7A230000 		.4byte	0x237a
 32858 2373 0A       		.uleb128 0xa
 32859 2374 18010000 		.4byte	0x118
 32860 2378 19       		.byte	0x19
 32861 2379 00       		.byte	0
 32862 237a 22       		.uleb128 0x22
 32863 237b 9E030000 		.4byte	.LASF356
 32864 237f 01       		.byte	0x1
 32865 2380 4B10     		.2byte	0x104b
 32866 2382 00000000 		.4byte	.LFB117
 32867 2386 54010000 		.4byte	.LFE117-.LFB117
 32868 238a 01       		.uleb128 0x1
 32869 238b 9C       		.byte	0x9c
 32870 238c CF230000 		.4byte	0x23cf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 702


 32871 2390 25       		.uleb128 0x25
 32872 2391 67080000 		.4byte	.LASF357
 32873 2395 01       		.byte	0x1
 32874 2396 4B10     		.2byte	0x104b
 32875 2398 A3000000 		.4byte	0xa3
 32876 239c 04       		.uleb128 0x4
 32877 239d 91       		.byte	0x91
 32878 239e 9EE37E   		.sleb128 -20066
 32879 23a1 26       		.uleb128 0x26
 32880 23a2 6900     		.ascii	"i\000"
 32881 23a4 01       		.byte	0x1
 32882 23a5 4D10     		.2byte	0x104d
 32883 23a7 97000000 		.4byte	0x97
 32884 23ab 02       		.uleb128 0x2
 32885 23ac 91       		.byte	0x91
 32886 23ad 77       		.sleb128 -9
 32887 23ae 23       		.uleb128 0x23
 32888 23af 01050000 		.4byte	.LASF358
 32889 23b3 01       		.byte	0x1
 32890 23b4 4E10     		.2byte	0x104e
 32891 23b6 2C110000 		.4byte	0x112c
 32892 23ba 02       		.uleb128 0x2
 32893 23bb 91       		.byte	0x91
 32894 23bc 44       		.sleb128 -60
 32895 23bd 23       		.uleb128 0x23
 32896 23be A4090000 		.4byte	.LASF227
 32897 23c2 01       		.byte	0x1
 32898 23c3 4F10     		.2byte	0x104f
 32899 23c5 540F0000 		.4byte	0xf54
 32900 23c9 04       		.uleb128 0x4
 32901 23ca 91       		.byte	0x91
 32902 23cb A4E37E   		.sleb128 -20060
 32903 23ce 00       		.byte	0
 32904 23cf 22       		.uleb128 0x22
 32905 23d0 8B040000 		.4byte	.LASF359
 32906 23d4 01       		.byte	0x1
 32907 23d5 6710     		.2byte	0x1067
 32908 23d7 00000000 		.4byte	.LFB118
 32909 23db B0000000 		.4byte	.LFE118-.LFB118
 32910 23df 01       		.uleb128 0x1
 32911 23e0 9C       		.byte	0x9c
 32912 23e1 30240000 		.4byte	0x2430
 32913 23e5 25       		.uleb128 0x25
 32914 23e6 67080000 		.4byte	.LASF357
 32915 23ea 01       		.byte	0x1
 32916 23eb 6710     		.2byte	0x1067
 32917 23ed A3000000 		.4byte	0xa3
 32918 23f1 03       		.uleb128 0x3
 32919 23f2 91       		.byte	0x91
 32920 23f3 BE7F     		.sleb128 -66
 32921 23f5 26       		.uleb128 0x26
 32922 23f6 6900     		.ascii	"i\000"
 32923 23f8 01       		.byte	0x1
 32924 23f9 6910     		.2byte	0x1069
 32925 23fb 97000000 		.4byte	0x97
 32926 23ff 02       		.uleb128 0x2
 32927 2400 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 703


 32928 2401 77       		.sleb128 -9
 32929 2402 23       		.uleb128 0x23
 32930 2403 01050000 		.4byte	.LASF358
 32931 2407 01       		.byte	0x1
 32932 2408 6A10     		.2byte	0x106a
 32933 240a 2C110000 		.4byte	0x112c
 32934 240e 02       		.uleb128 0x2
 32935 240f 91       		.byte	0x91
 32936 2410 44       		.sleb128 -60
 32937 2411 26       		.uleb128 0x26
 32938 2412 72657300 		.ascii	"res\000"
 32939 2416 01       		.byte	0x1
 32940 2417 7310     		.2byte	0x1073
 32941 2419 97000000 		.4byte	0x97
 32942 241d 02       		.uleb128 0x2
 32943 241e 91       		.byte	0x91
 32944 241f 76       		.sleb128 -10
 32945 2420 23       		.uleb128 0x23
 32946 2421 16070000 		.4byte	.LASF238
 32947 2425 01       		.byte	0x1
 32948 2426 7610     		.2byte	0x1076
 32949 2428 28060000 		.4byte	0x628
 32950 242c 02       		.uleb128 0x2
 32951 242d 91       		.byte	0x91
 32952 242e 40       		.sleb128 -64
 32953 242f 00       		.byte	0
 32954 2430 27       		.uleb128 0x27
 32955 2431 9D0B0000 		.4byte	.LASF360
 32956 2435 01       		.byte	0x1
 32957 2436 8810     		.2byte	0x1088
 32958 2438 00000000 		.4byte	.LFB119
 32959 243c 48010000 		.4byte	.LFE119-.LFB119
 32960 2440 01       		.uleb128 0x1
 32961 2441 9C       		.byte	0x9c
 32962 2442 54240000 		.4byte	0x2454
 32963 2446 26       		.uleb128 0x26
 32964 2447 6900     		.ascii	"i\000"
 32965 2449 01       		.byte	0x1
 32966 244a 8A10     		.2byte	0x108a
 32967 244c 97000000 		.4byte	0x97
 32968 2450 02       		.uleb128 0x2
 32969 2451 91       		.byte	0x91
 32970 2452 6F       		.sleb128 -17
 32971 2453 00       		.byte	0
 32972 2454 27       		.uleb128 0x27
 32973 2455 2E010000 		.4byte	.LASF361
 32974 2459 01       		.byte	0x1
 32975 245a AF10     		.2byte	0x10af
 32976 245c 00000000 		.4byte	.LFB120
 32977 2460 A8010000 		.4byte	.LFE120-.LFB120
 32978 2464 01       		.uleb128 0x1
 32979 2465 9C       		.byte	0x9c
 32980 2466 C5240000 		.4byte	0x24c5
 32981 246a 23       		.uleb128 0x23
 32982 246b 25110000 		.4byte	.LASF340
 32983 246f 01       		.byte	0x1
 32984 2470 B110     		.2byte	0x10b1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 704


 32985 2472 C7000000 		.4byte	0xc7
 32986 2476 02       		.uleb128 0x2
 32987 2477 91       		.byte	0x91
 32988 2478 5C       		.sleb128 -36
 32989 2479 23       		.uleb128 0x23
 32990 247a 57060000 		.4byte	.LASF362
 32991 247e 01       		.byte	0x1
 32992 247f B210     		.2byte	0x10b2
 32993 2481 D3000000 		.4byte	0xd3
 32994 2485 02       		.uleb128 0x2
 32995 2486 91       		.byte	0x91
 32996 2487 64       		.sleb128 -28
 32997 2488 23       		.uleb128 0x23
 32998 2489 A30C0000 		.4byte	.LASF363
 32999 248d 01       		.byte	0x1
 33000 248e B310     		.2byte	0x10b3
 33001 2490 D3000000 		.4byte	0xd3
 33002 2494 02       		.uleb128 0x2
 33003 2495 91       		.byte	0x91
 33004 2496 54       		.sleb128 -44
 33005 2497 23       		.uleb128 0x23
 33006 2498 44040000 		.4byte	.LASF364
 33007 249c 01       		.byte	0x1
 33008 249d B310     		.2byte	0x10b3
 33009 249f D3000000 		.4byte	0xd3
 33010 24a3 02       		.uleb128 0x2
 33011 24a4 91       		.byte	0x91
 33012 24a5 58       		.sleb128 -40
 33013 24a6 23       		.uleb128 0x23
 33014 24a7 49060000 		.4byte	.LASF365
 33015 24ab 01       		.byte	0x1
 33016 24ac B410     		.2byte	0x10b4
 33017 24ae D3000000 		.4byte	0xd3
 33018 24b2 02       		.uleb128 0x2
 33019 24b3 91       		.byte	0x91
 33020 24b4 60       		.sleb128 -32
 33021 24b5 23       		.uleb128 0x23
 33022 24b6 4C0D0000 		.4byte	.LASF366
 33023 24ba 01       		.byte	0x1
 33024 24bb B510     		.2byte	0x10b5
 33025 24bd C7000000 		.4byte	0xc7
 33026 24c1 02       		.uleb128 0x2
 33027 24c2 91       		.byte	0x91
 33028 24c3 5E       		.sleb128 -34
 33029 24c4 00       		.byte	0
 33030 24c5 32       		.uleb128 0x32
 33031 24c6 C30D0000 		.4byte	.LASF367
 33032 24ca 01       		.byte	0x1
 33033 24cb F110     		.2byte	0x10f1
 33034 24cd 97000000 		.4byte	0x97
 33035 24d1 00000000 		.4byte	.LFB121
 33036 24d5 64010000 		.4byte	.LFE121-.LFB121
 33037 24d9 01       		.uleb128 0x1
 33038 24da 9C       		.byte	0x9c
 33039 24db 40250000 		.4byte	0x2540
 33040 24df 23       		.uleb128 0x23
 33041 24e0 D20F0000 		.4byte	.LASF368
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 705


 33042 24e4 01       		.byte	0x1
 33043 24e5 F310     		.2byte	0x10f3
 33044 24e7 97000000 		.4byte	0x97
 33045 24eb 05       		.uleb128 0x5
 33046 24ec 03       		.byte	0x3
 33047 24ed 0C000000 		.4byte	fsm_state.11345
 33048 24f1 26       		.uleb128 0x26
 33049 24f2 636E7400 		.ascii	"cnt\000"
 33050 24f6 01       		.byte	0x1
 33051 24f7 F410     		.2byte	0x10f4
 33052 24f9 D3000000 		.4byte	0xd3
 33053 24fd 05       		.uleb128 0x5
 33054 24fe 03       		.byte	0x3
 33055 24ff 10000000 		.4byte	cnt.11346
 33056 2503 23       		.uleb128 0x23
 33057 2504 EE040000 		.4byte	.LASF369
 33058 2508 01       		.byte	0x1
 33059 2509 F510     		.2byte	0x10f5
 33060 250b D3000000 		.4byte	0xd3
 33061 250f 02       		.uleb128 0x2
 33062 2510 91       		.byte	0x91
 33063 2511 74       		.sleb128 -12
 33064 2512 23       		.uleb128 0x23
 33065 2513 EB0C0000 		.4byte	.LASF370
 33066 2517 01       		.byte	0x1
 33067 2518 F510     		.2byte	0x10f5
 33068 251a D3000000 		.4byte	0xd3
 33069 251e 02       		.uleb128 0x2
 33070 251f 91       		.byte	0x91
 33071 2520 70       		.sleb128 -16
 33072 2521 23       		.uleb128 0x23
 33073 2522 B5000000 		.4byte	.LASF371
 33074 2526 01       		.byte	0x1
 33075 2527 F610     		.2byte	0x10f6
 33076 2529 D3000000 		.4byte	0xd3
 33077 252d 02       		.uleb128 0x2
 33078 252e 91       		.byte	0x91
 33079 252f 6C       		.sleb128 -20
 33080 2530 23       		.uleb128 0x23
 33081 2531 C1000000 		.4byte	.LASF372
 33082 2535 01       		.byte	0x1
 33083 2536 F610     		.2byte	0x10f6
 33084 2538 D3000000 		.4byte	0xd3
 33085 253c 02       		.uleb128 0x2
 33086 253d 91       		.byte	0x91
 33087 253e 68       		.sleb128 -24
 33088 253f 00       		.byte	0
 33089 2540 28       		.uleb128 0x28
 33090 2541 CE080000 		.4byte	.LASF373
 33091 2545 01       		.byte	0x1
 33092 2546 4311     		.2byte	0x1143
 33093 2548 00000000 		.4byte	.LFB122
 33094 254c 12000000 		.4byte	.LFE122-.LFB122
 33095 2550 01       		.uleb128 0x1
 33096 2551 9C       		.byte	0x9c
 33097 2552 66250000 		.4byte	0x2566
 33098 2556 25       		.uleb128 0x25
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 706


 33099 2557 CD070000 		.4byte	.LASF374
 33100 255b 01       		.byte	0x1
 33101 255c 4311     		.2byte	0x1143
 33102 255e 73000000 		.4byte	0x73
 33103 2562 02       		.uleb128 0x2
 33104 2563 91       		.byte	0x91
 33105 2564 74       		.sleb128 -12
 33106 2565 00       		.byte	0
 33107 2566 22       		.uleb128 0x22
 33108 2567 660F0000 		.4byte	.LASF375
 33109 256b 01       		.byte	0x1
 33110 256c 9011     		.2byte	0x1190
 33111 256e 00000000 		.4byte	.LFB123
 33112 2572 B8000000 		.4byte	.LFE123-.LFB123
 33113 2576 01       		.uleb128 0x1
 33114 2577 9C       		.byte	0x9c
 33115 2578 C8250000 		.4byte	0x25c8
 33116 257c 25       		.uleb128 0x25
 33117 257d CD070000 		.4byte	.LASF374
 33118 2581 01       		.byte	0x1
 33119 2582 9011     		.2byte	0x1190
 33120 2584 97000000 		.4byte	0x97
 33121 2588 02       		.uleb128 0x2
 33122 2589 91       		.byte	0x91
 33123 258a 5F       		.sleb128 -33
 33124 258b 25       		.uleb128 0x25
 33125 258c 4A0C0000 		.4byte	.LASF192
 33126 2590 01       		.byte	0x1
 33127 2591 9011     		.2byte	0x1190
 33128 2593 97000000 		.4byte	0x97
 33129 2597 02       		.uleb128 0x2
 33130 2598 91       		.byte	0x91
 33131 2599 5E       		.sleb128 -34
 33132 259a 23       		.uleb128 0x23
 33133 259b 16070000 		.4byte	.LASF238
 33134 259f 01       		.byte	0x1
 33135 25a0 9211     		.2byte	0x1192
 33136 25a2 A8090000 		.4byte	0x9a8
 33137 25a6 02       		.uleb128 0x2
 33138 25a7 91       		.byte	0x91
 33139 25a8 68       		.sleb128 -24
 33140 25a9 23       		.uleb128 0x23
 33141 25aa E1090000 		.4byte	.LASF239
 33142 25ae 01       		.byte	0x1
 33143 25af 9311     		.2byte	0x1193
 33144 25b1 97000000 		.4byte	0x97
 33145 25b5 02       		.uleb128 0x2
 33146 25b6 91       		.byte	0x91
 33147 25b7 6F       		.sleb128 -17
 33148 25b8 23       		.uleb128 0x23
 33149 25b9 99130000 		.4byte	.LASF244
 33150 25bd 01       		.byte	0x1
 33151 25be 9411     		.2byte	0x1194
 33152 25c0 C7000000 		.4byte	0xc7
 33153 25c4 02       		.uleb128 0x2
 33154 25c5 91       		.byte	0x91
 33155 25c6 66       		.sleb128 -26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 707


 33156 25c7 00       		.byte	0
 33157 25c8 31       		.uleb128 0x31
 33158 25c9 CD000000 		.4byte	.LASF376
 33159 25cd 01       		.byte	0x1
 33160 25ce AC11     		.2byte	0x11ac
 33161 25d0 00000000 		.4byte	.LFB124
 33162 25d4 3C000000 		.4byte	.LFE124-.LFB124
 33163 25d8 01       		.uleb128 0x1
 33164 25d9 9C       		.byte	0x9c
 33165 25da 27       		.uleb128 0x27
 33166 25db 45070000 		.4byte	.LASF377
 33167 25df 01       		.byte	0x1
 33168 25e0 BC11     		.2byte	0x11bc
 33169 25e2 00000000 		.4byte	.LFB125
 33170 25e6 90000000 		.4byte	.LFE125-.LFB125
 33171 25ea 01       		.uleb128 0x1
 33172 25eb 9C       		.byte	0x9c
 33173 25ec 0F260000 		.4byte	0x260f
 33174 25f0 23       		.uleb128 0x23
 33175 25f1 16070000 		.4byte	.LASF238
 33176 25f5 01       		.byte	0x1
 33177 25f6 C011     		.2byte	0x11c0
 33178 25f8 8C0B0000 		.4byte	0xb8c
 33179 25fc 02       		.uleb128 0x2
 33180 25fd 91       		.byte	0x91
 33181 25fe 64       		.sleb128 -28
 33182 25ff 23       		.uleb128 0x23
 33183 2600 E1090000 		.4byte	.LASF239
 33184 2604 01       		.byte	0x1
 33185 2605 C111     		.2byte	0x11c1
 33186 2607 97000000 		.4byte	0x97
 33187 260b 02       		.uleb128 0x2
 33188 260c 91       		.byte	0x91
 33189 260d 6F       		.sleb128 -17
 33190 260e 00       		.byte	0
 33191 260f 33       		.uleb128 0x33
 33192 2610 E2130000 		.4byte	.LASF378
 33193 2614 09       		.byte	0x9
 33194 2615 1207     		.2byte	0x712
 33195 2617 1B260000 		.4byte	0x261b
 33196 261b 06       		.uleb128 0x6
 33197 261c 81000000 		.4byte	0x81
 33198 2620 09       		.uleb128 0x9
 33199 2621 2F0B0000 		.4byte	0xb2f
 33200 2625 30260000 		.4byte	0x2630
 33201 2629 0A       		.uleb128 0xa
 33202 262a 18010000 		.4byte	0x118
 33203 262e 01       		.byte	0x1
 33204 262f 00       		.byte	0
 33205 2630 33       		.uleb128 0x33
 33206 2631 36060000 		.4byte	.LASF379
 33207 2635 08       		.byte	0x8
 33208 2636 3802     		.2byte	0x238
 33209 2638 20260000 		.4byte	0x2620
 33210 263c 09       		.uleb128 0x9
 33211 263d 34030000 		.4byte	0x334
 33212 2641 4C260000 		.4byte	0x264c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 708


 33213 2645 0A       		.uleb128 0xa
 33214 2646 18010000 		.4byte	0x118
 33215 264a 01       		.byte	0x1
 33216 264b 00       		.byte	0
 33217 264c 33       		.uleb128 0x33
 33218 264d B2150000 		.4byte	.LASF380
 33219 2651 08       		.byte	0x8
 33220 2652 3902     		.2byte	0x239
 33221 2654 3C260000 		.4byte	0x263c
 33222 2658 33       		.uleb128 0x33
 33223 2659 9E050000 		.4byte	.LASF381
 33224 265d 08       		.byte	0x8
 33225 265e 3902     		.2byte	0x239
 33226 2660 3C260000 		.4byte	0x263c
 33227 2664 33       		.uleb128 0x33
 33228 2665 1F0F0000 		.4byte	.LASF382
 33229 2669 08       		.byte	0x8
 33230 266a 3902     		.2byte	0x239
 33231 266c 3C260000 		.4byte	0x263c
 33232 2670 09       		.uleb128 0x9
 33233 2671 71030000 		.4byte	0x371
 33234 2675 80260000 		.4byte	0x2680
 33235 2679 0A       		.uleb128 0xa
 33236 267a 18010000 		.4byte	0x118
 33237 267e 01       		.byte	0x1
 33238 267f 00       		.byte	0
 33239 2680 33       		.uleb128 0x33
 33240 2681 DD070000 		.4byte	.LASF383
 33241 2685 08       		.byte	0x8
 33242 2686 3A02     		.2byte	0x23a
 33243 2688 70260000 		.4byte	0x2670
 33244 268c 33       		.uleb128 0x33
 33245 268d 05160000 		.4byte	.LASF384
 33246 2691 08       		.byte	0x8
 33247 2692 3A02     		.2byte	0x23a
 33248 2694 70260000 		.4byte	0x2670
 33249 2698 33       		.uleb128 0x33
 33250 2699 7C150000 		.4byte	.LASF385
 33251 269d 08       		.byte	0x8
 33252 269e 3B02     		.2byte	0x23b
 33253 26a0 FA030000 		.4byte	0x3fa
 33254 26a4 33       		.uleb128 0x33
 33255 26a5 AB120000 		.4byte	.LASF386
 33256 26a9 08       		.byte	0x8
 33257 26aa 3B02     		.2byte	0x23b
 33258 26ac FA030000 		.4byte	0x3fa
 33259 26b0 33       		.uleb128 0x33
 33260 26b1 46120000 		.4byte	.LASF387
 33261 26b5 08       		.byte	0x8
 33262 26b6 3C02     		.2byte	0x23c
 33263 26b8 4F040000 		.4byte	0x44f
 33264 26bc 33       		.uleb128 0x33
 33265 26bd E8000000 		.4byte	.LASF388
 33266 26c1 08       		.byte	0x8
 33267 26c2 3D02     		.2byte	0x23d
 33268 26c4 6A040000 		.4byte	0x46a
 33269 26c8 33       		.uleb128 0x33
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 709


 33270 26c9 75120000 		.4byte	.LASF389
 33271 26cd 08       		.byte	0x8
 33272 26ce 3E02     		.2byte	0x23e
 33273 26d0 9C0B0000 		.4byte	0xb9c
 33274 26d4 33       		.uleb128 0x33
 33275 26d5 CD0C0000 		.4byte	.LASF390
 33276 26d9 08       		.byte	0x8
 33277 26da 3E02     		.2byte	0x23e
 33278 26dc 9C0B0000 		.4byte	0xb9c
 33279 26e0 33       		.uleb128 0x33
 33280 26e1 6E0B0000 		.4byte	.LASF391
 33281 26e5 08       		.byte	0x8
 33282 26e6 3F02     		.2byte	0x23f
 33283 26e8 4D0D0000 		.4byte	0xd4d
 33284 26ec 33       		.uleb128 0x33
 33285 26ed 63030000 		.4byte	.LASF392
 33286 26f1 08       		.byte	0x8
 33287 26f2 4502     		.2byte	0x245
 33288 26f4 A3000000 		.4byte	0xa3
 33289 26f8 33       		.uleb128 0x33
 33290 26f9 65100000 		.4byte	.LASF393
 33291 26fd 08       		.byte	0x8
 33292 26fe 4602     		.2byte	0x246
 33293 2700 A3000000 		.4byte	0xa3
 33294 2704 33       		.uleb128 0x33
 33295 2705 97100000 		.4byte	.LASF394
 33296 2709 08       		.byte	0x8
 33297 270a 4A02     		.2byte	0x24a
 33298 270c 2F040000 		.4byte	0x42f
 33299 2710 33       		.uleb128 0x33
 33300 2711 79140000 		.4byte	.LASF395
 33301 2715 08       		.byte	0x8
 33302 2716 4B02     		.2byte	0x24b
 33303 2718 D4080000 		.4byte	0x8d4
 33304 271c 33       		.uleb128 0x33
 33305 271d 02140000 		.4byte	.LASF396
 33306 2721 08       		.byte	0x8
 33307 2722 4E02     		.2byte	0x24e
 33308 2724 2F040000 		.4byte	0x42f
 33309 2728 33       		.uleb128 0x33
 33310 2729 530C0000 		.4byte	.LASF397
 33311 272d 08       		.byte	0x8
 33312 272e 5802     		.2byte	0x258
 33313 2730 E4080000 		.4byte	0x8e4
 33314 2734 33       		.uleb128 0x33
 33315 2735 2E050000 		.4byte	.LASF398
 33316 2739 08       		.byte	0x8
 33317 273a 5A02     		.2byte	0x25a
 33318 273c 97000000 		.4byte	0x97
 33319 2740 33       		.uleb128 0x33
 33320 2741 D80B0000 		.4byte	.LASF399
 33321 2745 08       		.byte	0x8
 33322 2746 6102     		.2byte	0x261
 33323 2748 97000000 		.4byte	0x97
 33324 274c 33       		.uleb128 0x33
 33325 274d BE080000 		.4byte	.LASF400
 33326 2751 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 710


 33327 2752 6202     		.2byte	0x262
 33328 2754 97000000 		.4byte	0x97
 33329 2758 09       		.uleb128 0x9
 33330 2759 C7000000 		.4byte	0xc7
 33331 275d 68270000 		.4byte	0x2768
 33332 2761 0A       		.uleb128 0xa
 33333 2762 18010000 		.4byte	0x118
 33334 2766 0B       		.byte	0xb
 33335 2767 00       		.byte	0
 33336 2768 33       		.uleb128 0x33
 33337 2769 26050000 		.4byte	.LASF401
 33338 276d 08       		.byte	0x8
 33339 276e 6502     		.2byte	0x265
 33340 2770 58270000 		.4byte	0x2758
 33341 2774 33       		.uleb128 0x33
 33342 2775 BE150000 		.4byte	.LASF402
 33343 2779 08       		.byte	0x8
 33344 277a 6602     		.2byte	0x266
 33345 277c 97000000 		.4byte	0x97
 33346 2780 09       		.uleb128 0x9
 33347 2781 AF000000 		.4byte	0xaf
 33348 2785 96270000 		.4byte	0x2796
 33349 2789 0A       		.uleb128 0xa
 33350 278a 18010000 		.4byte	0x118
 33351 278e 01       		.byte	0x1
 33352 278f 0A       		.uleb128 0xa
 33353 2790 18010000 		.4byte	0x118
 33354 2794 04       		.byte	0x4
 33355 2795 00       		.byte	0
 33356 2796 33       		.uleb128 0x33
 33357 2797 FD070000 		.4byte	.LASF403
 33358 279b 08       		.byte	0x8
 33359 279c 6C02     		.2byte	0x26c
 33360 279e 80270000 		.4byte	0x2780
 33361 27a2 33       		.uleb128 0x33
 33362 27a3 71110000 		.4byte	.LASF404
 33363 27a7 08       		.byte	0x8
 33364 27a8 6D02     		.2byte	0x26d
 33365 27aa E4080000 		.4byte	0x8e4
 33366 27ae 09       		.uleb128 0x9
 33367 27af A3000000 		.4byte	0xa3
 33368 27b3 C4270000 		.4byte	0x27c4
 33369 27b7 0A       		.uleb128 0xa
 33370 27b8 18010000 		.4byte	0x118
 33371 27bc 01       		.byte	0x1
 33372 27bd 0A       		.uleb128 0xa
 33373 27be 18010000 		.4byte	0x118
 33374 27c2 04       		.byte	0x4
 33375 27c3 00       		.byte	0
 33376 27c4 33       		.uleb128 0x33
 33377 27c5 A2140000 		.4byte	.LASF405
 33378 27c9 08       		.byte	0x8
 33379 27ca 6E02     		.2byte	0x26e
 33380 27cc AE270000 		.4byte	0x27ae
 33381 27d0 33       		.uleb128 0x33
 33382 27d1 2C070000 		.4byte	.LASF406
 33383 27d5 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 711


 33384 27d6 7602     		.2byte	0x276
 33385 27d8 2E030000 		.4byte	0x32e
 33386 27dc 33       		.uleb128 0x33
 33387 27dd 08110000 		.4byte	.LASF407
 33388 27e1 08       		.byte	0x8
 33389 27e2 7702     		.2byte	0x277
 33390 27e4 0E170000 		.4byte	0x170e
 33391 27e8 33       		.uleb128 0x33
 33392 27e9 3C040000 		.4byte	.LASF408
 33393 27ed 08       		.byte	0x8
 33394 27ee 7802     		.2byte	0x278
 33395 27f0 0E170000 		.4byte	0x170e
 33396 27f4 33       		.uleb128 0x33
 33397 27f5 42150000 		.4byte	.LASF409
 33398 27f9 08       		.byte	0x8
 33399 27fa 7B02     		.2byte	0x27b
 33400 27fc 0E170000 		.4byte	0x170e
 33401 2800 33       		.uleb128 0x33
 33402 2801 20130000 		.4byte	.LASF410
 33403 2805 08       		.byte	0x8
 33404 2806 7E02     		.2byte	0x27e
 33405 2808 97000000 		.4byte	0x97
 33406 280c 33       		.uleb128 0x33
 33407 280d DF140000 		.4byte	.LASF411
 33408 2811 08       		.byte	0x8
 33409 2812 7F02     		.2byte	0x27f
 33410 2814 55080000 		.4byte	0x855
 33411 2818 33       		.uleb128 0x33
 33412 2819 D3130000 		.4byte	.LASF412
 33413 281d 08       		.byte	0x8
 33414 281e 8002     		.2byte	0x280
 33415 2820 73000000 		.4byte	0x73
 33416 2824 09       		.uleb128 0x9
 33417 2825 73000000 		.4byte	0x73
 33418 2829 34280000 		.4byte	0x2834
 33419 282d 0A       		.uleb128 0xa
 33420 282e 18010000 		.4byte	0x118
 33421 2832 04       		.byte	0x4
 33422 2833 00       		.byte	0
 33423 2834 33       		.uleb128 0x33
 33424 2835 0B0E0000 		.4byte	.LASF413
 33425 2839 08       		.byte	0x8
 33426 283a 8102     		.2byte	0x281
 33427 283c 24280000 		.4byte	0x2824
 33428 2840 09       		.uleb128 0x9
 33429 2841 D10C0000 		.4byte	0xcd1
 33430 2845 50280000 		.4byte	0x2850
 33431 2849 0A       		.uleb128 0xa
 33432 284a 18010000 		.4byte	0x118
 33433 284e 04       		.byte	0x4
 33434 284f 00       		.byte	0
 33435 2850 33       		.uleb128 0x33
 33436 2851 30060000 		.4byte	.LASF414
 33437 2855 08       		.byte	0x8
 33438 2856 8202     		.2byte	0x282
 33439 2858 40280000 		.4byte	0x2840
 33440 285c 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 712


 33441 285d 97000000 		.4byte	0x97
 33442 2861 72280000 		.4byte	0x2872
 33443 2865 0A       		.uleb128 0xa
 33444 2866 18010000 		.4byte	0x118
 33445 286a 04       		.byte	0x4
 33446 286b 0A       		.uleb128 0xa
 33447 286c 18010000 		.4byte	0x118
 33448 2870 02       		.byte	0x2
 33449 2871 00       		.byte	0
 33450 2872 33       		.uleb128 0x33
 33451 2873 290D0000 		.4byte	.LASF415
 33452 2877 08       		.byte	0x8
 33453 2878 8602     		.2byte	0x286
 33454 287a 5C280000 		.4byte	0x285c
 33455 287e 33       		.uleb128 0x33
 33456 287f E4150000 		.4byte	.LASF416
 33457 2883 08       		.byte	0x8
 33458 2884 8B02     		.2byte	0x28b
 33459 2886 97000000 		.4byte	0x97
 33460 288a 09       		.uleb128 0x9
 33461 288b A3000000 		.4byte	0xa3
 33462 288f A1280000 		.4byte	0x28a1
 33463 2893 24       		.uleb128 0x24
 33464 2894 18010000 		.4byte	0x118
 33465 2898 5702     		.2byte	0x257
 33466 289a 0A       		.uleb128 0xa
 33467 289b 18010000 		.4byte	0x118
 33468 289f 01       		.byte	0x1
 33469 28a0 00       		.byte	0
 33470 28a1 33       		.uleb128 0x33
 33471 28a2 A3130000 		.4byte	.LASF417
 33472 28a6 08       		.byte	0x8
 33473 28a7 8E02     		.2byte	0x28e
 33474 28a9 8A280000 		.4byte	0x288a
 33475 28ad 33       		.uleb128 0x33
 33476 28ae 350C0000 		.4byte	.LASF418
 33477 28b2 08       		.byte	0x8
 33478 28b3 8F02     		.2byte	0x28f
 33479 28b5 AF000000 		.4byte	0xaf
 33480 28b9 33       		.uleb128 0x33
 33481 28ba 36030000 		.4byte	.LASF419
 33482 28be 08       		.byte	0x8
 33483 28bf 9202     		.2byte	0x292
 33484 28c1 C7000000 		.4byte	0xc7
 33485 28c5 33       		.uleb128 0x33
 33486 28c6 40030000 		.4byte	.LASF420
 33487 28ca 08       		.byte	0x8
 33488 28cb 9302     		.2byte	0x293
 33489 28cd C7000000 		.4byte	0xc7
 33490 28d1 34       		.uleb128 0x34
 33491 28d2 AF130000 		.4byte	.LASF421
 33492 28d6 01       		.byte	0x1
 33493 28d7 33       		.byte	0x33
 33494 28d8 E2280000 		.4byte	0x28e2
 33495 28dc 05       		.uleb128 0x5
 33496 28dd 03       		.byte	0x3
 33497 28de 00000000 		.4byte	EEPROM_ADDR
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 713


 33498 28e2 07       		.uleb128 0x7
 33499 28e3 04       		.byte	0x4
 33500 28e4 00010000 		.4byte	0x100
 33501 28e8 00       		.byte	0
 33502              		.section	.debug_abbrev,"",%progbits
 33503              	.Ldebug_abbrev0:
 33504 0000 01       		.uleb128 0x1
 33505 0001 11       		.uleb128 0x11
 33506 0002 01       		.byte	0x1
 33507 0003 25       		.uleb128 0x25
 33508 0004 0E       		.uleb128 0xe
 33509 0005 13       		.uleb128 0x13
 33510 0006 0B       		.uleb128 0xb
 33511 0007 03       		.uleb128 0x3
 33512 0008 0E       		.uleb128 0xe
 33513 0009 1B       		.uleb128 0x1b
 33514 000a 0E       		.uleb128 0xe
 33515 000b 55       		.uleb128 0x55
 33516 000c 17       		.uleb128 0x17
 33517 000d 11       		.uleb128 0x11
 33518 000e 01       		.uleb128 0x1
 33519 000f 10       		.uleb128 0x10
 33520 0010 17       		.uleb128 0x17
 33521 0011 00       		.byte	0
 33522 0012 00       		.byte	0
 33523 0013 02       		.uleb128 0x2
 33524 0014 24       		.uleb128 0x24
 33525 0015 00       		.byte	0
 33526 0016 0B       		.uleb128 0xb
 33527 0017 0B       		.uleb128 0xb
 33528 0018 3E       		.uleb128 0x3e
 33529 0019 0B       		.uleb128 0xb
 33530 001a 03       		.uleb128 0x3
 33531 001b 0E       		.uleb128 0xe
 33532 001c 00       		.byte	0
 33533 001d 00       		.byte	0
 33534 001e 03       		.uleb128 0x3
 33535 001f 16       		.uleb128 0x16
 33536 0020 00       		.byte	0
 33537 0021 03       		.uleb128 0x3
 33538 0022 0E       		.uleb128 0xe
 33539 0023 3A       		.uleb128 0x3a
 33540 0024 0B       		.uleb128 0xb
 33541 0025 3B       		.uleb128 0x3b
 33542 0026 0B       		.uleb128 0xb
 33543 0027 49       		.uleb128 0x49
 33544 0028 13       		.uleb128 0x13
 33545 0029 00       		.byte	0
 33546 002a 00       		.byte	0
 33547 002b 04       		.uleb128 0x4
 33548 002c 24       		.uleb128 0x24
 33549 002d 00       		.byte	0
 33550 002e 0B       		.uleb128 0xb
 33551 002f 0B       		.uleb128 0xb
 33552 0030 3E       		.uleb128 0x3e
 33553 0031 0B       		.uleb128 0xb
 33554 0032 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 714


 33555 0033 08       		.uleb128 0x8
 33556 0034 00       		.byte	0
 33557 0035 00       		.byte	0
 33558 0036 05       		.uleb128 0x5
 33559 0037 16       		.uleb128 0x16
 33560 0038 00       		.byte	0
 33561 0039 03       		.uleb128 0x3
 33562 003a 0E       		.uleb128 0xe
 33563 003b 3A       		.uleb128 0x3a
 33564 003c 0B       		.uleb128 0xb
 33565 003d 3B       		.uleb128 0x3b
 33566 003e 05       		.uleb128 0x5
 33567 003f 49       		.uleb128 0x49
 33568 0040 13       		.uleb128 0x13
 33569 0041 00       		.byte	0
 33570 0042 00       		.byte	0
 33571 0043 06       		.uleb128 0x6
 33572 0044 35       		.uleb128 0x35
 33573 0045 00       		.byte	0
 33574 0046 49       		.uleb128 0x49
 33575 0047 13       		.uleb128 0x13
 33576 0048 00       		.byte	0
 33577 0049 00       		.byte	0
 33578 004a 07       		.uleb128 0x7
 33579 004b 0F       		.uleb128 0xf
 33580 004c 00       		.byte	0
 33581 004d 0B       		.uleb128 0xb
 33582 004e 0B       		.uleb128 0xb
 33583 004f 49       		.uleb128 0x49
 33584 0050 13       		.uleb128 0x13
 33585 0051 00       		.byte	0
 33586 0052 00       		.byte	0
 33587 0053 08       		.uleb128 0x8
 33588 0054 26       		.uleb128 0x26
 33589 0055 00       		.byte	0
 33590 0056 49       		.uleb128 0x49
 33591 0057 13       		.uleb128 0x13
 33592 0058 00       		.byte	0
 33593 0059 00       		.byte	0
 33594 005a 09       		.uleb128 0x9
 33595 005b 01       		.uleb128 0x1
 33596 005c 01       		.byte	0x1
 33597 005d 49       		.uleb128 0x49
 33598 005e 13       		.uleb128 0x13
 33599 005f 01       		.uleb128 0x1
 33600 0060 13       		.uleb128 0x13
 33601 0061 00       		.byte	0
 33602 0062 00       		.byte	0
 33603 0063 0A       		.uleb128 0xa
 33604 0064 21       		.uleb128 0x21
 33605 0065 00       		.byte	0
 33606 0066 49       		.uleb128 0x49
 33607 0067 13       		.uleb128 0x13
 33608 0068 2F       		.uleb128 0x2f
 33609 0069 0B       		.uleb128 0xb
 33610 006a 00       		.byte	0
 33611 006b 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 715


 33612 006c 0B       		.uleb128 0xb
 33613 006d 04       		.uleb128 0x4
 33614 006e 01       		.byte	0x1
 33615 006f 03       		.uleb128 0x3
 33616 0070 0E       		.uleb128 0xe
 33617 0071 0B       		.uleb128 0xb
 33618 0072 0B       		.uleb128 0xb
 33619 0073 49       		.uleb128 0x49
 33620 0074 13       		.uleb128 0x13
 33621 0075 3A       		.uleb128 0x3a
 33622 0076 0B       		.uleb128 0xb
 33623 0077 3B       		.uleb128 0x3b
 33624 0078 0B       		.uleb128 0xb
 33625 0079 01       		.uleb128 0x1
 33626 007a 13       		.uleb128 0x13
 33627 007b 00       		.byte	0
 33628 007c 00       		.byte	0
 33629 007d 0C       		.uleb128 0xc
 33630 007e 28       		.uleb128 0x28
 33631 007f 00       		.byte	0
 33632 0080 03       		.uleb128 0x3
 33633 0081 0E       		.uleb128 0xe
 33634 0082 1C       		.uleb128 0x1c
 33635 0083 0B       		.uleb128 0xb
 33636 0084 00       		.byte	0
 33637 0085 00       		.byte	0
 33638 0086 0D       		.uleb128 0xd
 33639 0087 13       		.uleb128 0x13
 33640 0088 00       		.byte	0
 33641 0089 03       		.uleb128 0x3
 33642 008a 0E       		.uleb128 0xe
 33643 008b 3C       		.uleb128 0x3c
 33644 008c 19       		.uleb128 0x19
 33645 008d 00       		.byte	0
 33646 008e 00       		.byte	0
 33647 008f 0E       		.uleb128 0xe
 33648 0090 13       		.uleb128 0x13
 33649 0091 01       		.byte	0x1
 33650 0092 03       		.uleb128 0x3
 33651 0093 0E       		.uleb128 0xe
 33652 0094 0B       		.uleb128 0xb
 33653 0095 0B       		.uleb128 0xb
 33654 0096 3A       		.uleb128 0x3a
 33655 0097 0B       		.uleb128 0xb
 33656 0098 3B       		.uleb128 0x3b
 33657 0099 0B       		.uleb128 0xb
 33658 009a 01       		.uleb128 0x1
 33659 009b 13       		.uleb128 0x13
 33660 009c 00       		.byte	0
 33661 009d 00       		.byte	0
 33662 009e 0F       		.uleb128 0xf
 33663 009f 0D       		.uleb128 0xd
 33664 00a0 00       		.byte	0
 33665 00a1 03       		.uleb128 0x3
 33666 00a2 08       		.uleb128 0x8
 33667 00a3 3A       		.uleb128 0x3a
 33668 00a4 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 716


 33669 00a5 3B       		.uleb128 0x3b
 33670 00a6 0B       		.uleb128 0xb
 33671 00a7 49       		.uleb128 0x49
 33672 00a8 13       		.uleb128 0x13
 33673 00a9 38       		.uleb128 0x38
 33674 00aa 0B       		.uleb128 0xb
 33675 00ab 00       		.byte	0
 33676 00ac 00       		.byte	0
 33677 00ad 10       		.uleb128 0x10
 33678 00ae 0D       		.uleb128 0xd
 33679 00af 00       		.byte	0
 33680 00b0 03       		.uleb128 0x3
 33681 00b1 0E       		.uleb128 0xe
 33682 00b2 3A       		.uleb128 0x3a
 33683 00b3 0B       		.uleb128 0xb
 33684 00b4 3B       		.uleb128 0x3b
 33685 00b5 0B       		.uleb128 0xb
 33686 00b6 49       		.uleb128 0x49
 33687 00b7 13       		.uleb128 0x13
 33688 00b8 38       		.uleb128 0x38
 33689 00b9 0B       		.uleb128 0xb
 33690 00ba 00       		.byte	0
 33691 00bb 00       		.byte	0
 33692 00bc 11       		.uleb128 0x11
 33693 00bd 13       		.uleb128 0x13
 33694 00be 01       		.byte	0x1
 33695 00bf 03       		.uleb128 0x3
 33696 00c0 0E       		.uleb128 0xe
 33697 00c1 0B       		.uleb128 0xb
 33698 00c2 0B       		.uleb128 0xb
 33699 00c3 3A       		.uleb128 0x3a
 33700 00c4 0B       		.uleb128 0xb
 33701 00c5 3B       		.uleb128 0x3b
 33702 00c6 05       		.uleb128 0x5
 33703 00c7 01       		.uleb128 0x1
 33704 00c8 13       		.uleb128 0x13
 33705 00c9 00       		.byte	0
 33706 00ca 00       		.byte	0
 33707 00cb 12       		.uleb128 0x12
 33708 00cc 0D       		.uleb128 0xd
 33709 00cd 00       		.byte	0
 33710 00ce 03       		.uleb128 0x3
 33711 00cf 08       		.uleb128 0x8
 33712 00d0 3A       		.uleb128 0x3a
 33713 00d1 0B       		.uleb128 0xb
 33714 00d2 3B       		.uleb128 0x3b
 33715 00d3 05       		.uleb128 0x5
 33716 00d4 49       		.uleb128 0x49
 33717 00d5 13       		.uleb128 0x13
 33718 00d6 38       		.uleb128 0x38
 33719 00d7 0B       		.uleb128 0xb
 33720 00d8 00       		.byte	0
 33721 00d9 00       		.byte	0
 33722 00da 13       		.uleb128 0x13
 33723 00db 0D       		.uleb128 0xd
 33724 00dc 00       		.byte	0
 33725 00dd 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 717


 33726 00de 0E       		.uleb128 0xe
 33727 00df 3A       		.uleb128 0x3a
 33728 00e0 0B       		.uleb128 0xb
 33729 00e1 3B       		.uleb128 0x3b
 33730 00e2 05       		.uleb128 0x5
 33731 00e3 49       		.uleb128 0x49
 33732 00e4 13       		.uleb128 0x13
 33733 00e5 38       		.uleb128 0x38
 33734 00e6 0B       		.uleb128 0xb
 33735 00e7 00       		.byte	0
 33736 00e8 00       		.byte	0
 33737 00e9 14       		.uleb128 0x14
 33738 00ea 13       		.uleb128 0x13
 33739 00eb 01       		.byte	0x1
 33740 00ec 03       		.uleb128 0x3
 33741 00ed 0E       		.uleb128 0xe
 33742 00ee 0B       		.uleb128 0xb
 33743 00ef 05       		.uleb128 0x5
 33744 00f0 3A       		.uleb128 0x3a
 33745 00f1 0B       		.uleb128 0xb
 33746 00f2 3B       		.uleb128 0x3b
 33747 00f3 05       		.uleb128 0x5
 33748 00f4 01       		.uleb128 0x1
 33749 00f5 13       		.uleb128 0x13
 33750 00f6 00       		.byte	0
 33751 00f7 00       		.byte	0
 33752 00f8 15       		.uleb128 0x15
 33753 00f9 0D       		.uleb128 0xd
 33754 00fa 00       		.byte	0
 33755 00fb 03       		.uleb128 0x3
 33756 00fc 08       		.uleb128 0x8
 33757 00fd 3A       		.uleb128 0x3a
 33758 00fe 0B       		.uleb128 0xb
 33759 00ff 3B       		.uleb128 0x3b
 33760 0100 05       		.uleb128 0x5
 33761 0101 49       		.uleb128 0x49
 33762 0102 13       		.uleb128 0x13
 33763 0103 38       		.uleb128 0x38
 33764 0104 05       		.uleb128 0x5
 33765 0105 00       		.byte	0
 33766 0106 00       		.byte	0
 33767 0107 16       		.uleb128 0x16
 33768 0108 0D       		.uleb128 0xd
 33769 0109 00       		.byte	0
 33770 010a 03       		.uleb128 0x3
 33771 010b 0E       		.uleb128 0xe
 33772 010c 3A       		.uleb128 0x3a
 33773 010d 0B       		.uleb128 0xb
 33774 010e 3B       		.uleb128 0x3b
 33775 010f 05       		.uleb128 0x5
 33776 0110 49       		.uleb128 0x49
 33777 0111 13       		.uleb128 0x13
 33778 0112 38       		.uleb128 0x38
 33779 0113 05       		.uleb128 0x5
 33780 0114 00       		.byte	0
 33781 0115 00       		.byte	0
 33782 0116 17       		.uleb128 0x17
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 718


 33783 0117 2E       		.uleb128 0x2e
 33784 0118 01       		.byte	0x1
 33785 0119 03       		.uleb128 0x3
 33786 011a 0E       		.uleb128 0xe
 33787 011b 3A       		.uleb128 0x3a
 33788 011c 0B       		.uleb128 0xb
 33789 011d 3B       		.uleb128 0x3b
 33790 011e 05       		.uleb128 0x5
 33791 011f 27       		.uleb128 0x27
 33792 0120 19       		.uleb128 0x19
 33793 0121 49       		.uleb128 0x49
 33794 0122 13       		.uleb128 0x13
 33795 0123 20       		.uleb128 0x20
 33796 0124 0B       		.uleb128 0xb
 33797 0125 01       		.uleb128 0x1
 33798 0126 13       		.uleb128 0x13
 33799 0127 00       		.byte	0
 33800 0128 00       		.byte	0
 33801 0129 18       		.uleb128 0x18
 33802 012a 05       		.uleb128 0x5
 33803 012b 00       		.byte	0
 33804 012c 03       		.uleb128 0x3
 33805 012d 0E       		.uleb128 0xe
 33806 012e 3A       		.uleb128 0x3a
 33807 012f 0B       		.uleb128 0xb
 33808 0130 3B       		.uleb128 0x3b
 33809 0131 05       		.uleb128 0x5
 33810 0132 49       		.uleb128 0x49
 33811 0133 13       		.uleb128 0x13
 33812 0134 00       		.byte	0
 33813 0135 00       		.byte	0
 33814 0136 19       		.uleb128 0x19
 33815 0137 34       		.uleb128 0x34
 33816 0138 00       		.byte	0
 33817 0139 03       		.uleb128 0x3
 33818 013a 0E       		.uleb128 0xe
 33819 013b 3A       		.uleb128 0x3a
 33820 013c 0B       		.uleb128 0xb
 33821 013d 3B       		.uleb128 0x3b
 33822 013e 05       		.uleb128 0x5
 33823 013f 49       		.uleb128 0x49
 33824 0140 13       		.uleb128 0x13
 33825 0141 00       		.byte	0
 33826 0142 00       		.byte	0
 33827 0143 1A       		.uleb128 0x1a
 33828 0144 2E       		.uleb128 0x2e
 33829 0145 01       		.byte	0x1
 33830 0146 3F       		.uleb128 0x3f
 33831 0147 19       		.uleb128 0x19
 33832 0148 03       		.uleb128 0x3
 33833 0149 0E       		.uleb128 0xe
 33834 014a 3A       		.uleb128 0x3a
 33835 014b 0B       		.uleb128 0xb
 33836 014c 3B       		.uleb128 0x3b
 33837 014d 0B       		.uleb128 0xb
 33838 014e 27       		.uleb128 0x27
 33839 014f 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 719


 33840 0150 11       		.uleb128 0x11
 33841 0151 01       		.uleb128 0x1
 33842 0152 12       		.uleb128 0x12
 33843 0153 06       		.uleb128 0x6
 33844 0154 40       		.uleb128 0x40
 33845 0155 18       		.uleb128 0x18
 33846 0156 9642     		.uleb128 0x2116
 33847 0158 19       		.uleb128 0x19
 33848 0159 01       		.uleb128 0x1
 33849 015a 13       		.uleb128 0x13
 33850 015b 00       		.byte	0
 33851 015c 00       		.byte	0
 33852 015d 1B       		.uleb128 0x1b
 33853 015e 34       		.uleb128 0x34
 33854 015f 00       		.byte	0
 33855 0160 03       		.uleb128 0x3
 33856 0161 0E       		.uleb128 0xe
 33857 0162 3A       		.uleb128 0x3a
 33858 0163 0B       		.uleb128 0xb
 33859 0164 3B       		.uleb128 0x3b
 33860 0165 0B       		.uleb128 0xb
 33861 0166 49       		.uleb128 0x49
 33862 0167 13       		.uleb128 0x13
 33863 0168 02       		.uleb128 0x2
 33864 0169 18       		.uleb128 0x18
 33865 016a 00       		.byte	0
 33866 016b 00       		.byte	0
 33867 016c 1C       		.uleb128 0x1c
 33868 016d 1D       		.uleb128 0x1d
 33869 016e 01       		.byte	0x1
 33870 016f 31       		.uleb128 0x31
 33871 0170 13       		.uleb128 0x13
 33872 0171 11       		.uleb128 0x11
 33873 0172 01       		.uleb128 0x1
 33874 0173 12       		.uleb128 0x12
 33875 0174 06       		.uleb128 0x6
 33876 0175 58       		.uleb128 0x58
 33877 0176 0B       		.uleb128 0xb
 33878 0177 59       		.uleb128 0x59
 33879 0178 0B       		.uleb128 0xb
 33880 0179 01       		.uleb128 0x1
 33881 017a 13       		.uleb128 0x13
 33882 017b 00       		.byte	0
 33883 017c 00       		.byte	0
 33884 017d 1D       		.uleb128 0x1d
 33885 017e 05       		.uleb128 0x5
 33886 017f 00       		.byte	0
 33887 0180 31       		.uleb128 0x31
 33888 0181 13       		.uleb128 0x13
 33889 0182 02       		.uleb128 0x2
 33890 0183 18       		.uleb128 0x18
 33891 0184 00       		.byte	0
 33892 0185 00       		.byte	0
 33893 0186 1E       		.uleb128 0x1e
 33894 0187 0B       		.uleb128 0xb
 33895 0188 01       		.byte	0x1
 33896 0189 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 720


 33897 018a 01       		.uleb128 0x1
 33898 018b 12       		.uleb128 0x12
 33899 018c 06       		.uleb128 0x6
 33900 018d 00       		.byte	0
 33901 018e 00       		.byte	0
 33902 018f 1F       		.uleb128 0x1f
 33903 0190 34       		.uleb128 0x34
 33904 0191 00       		.byte	0
 33905 0192 31       		.uleb128 0x31
 33906 0193 13       		.uleb128 0x13
 33907 0194 02       		.uleb128 0x2
 33908 0195 18       		.uleb128 0x18
 33909 0196 00       		.byte	0
 33910 0197 00       		.byte	0
 33911 0198 20       		.uleb128 0x20
 33912 0199 1D       		.uleb128 0x1d
 33913 019a 01       		.byte	0x1
 33914 019b 31       		.uleb128 0x31
 33915 019c 13       		.uleb128 0x13
 33916 019d 11       		.uleb128 0x11
 33917 019e 01       		.uleb128 0x1
 33918 019f 12       		.uleb128 0x12
 33919 01a0 06       		.uleb128 0x6
 33920 01a1 58       		.uleb128 0x58
 33921 01a2 0B       		.uleb128 0xb
 33922 01a3 59       		.uleb128 0x59
 33923 01a4 05       		.uleb128 0x5
 33924 01a5 01       		.uleb128 0x1
 33925 01a6 13       		.uleb128 0x13
 33926 01a7 00       		.byte	0
 33927 01a8 00       		.byte	0
 33928 01a9 21       		.uleb128 0x21
 33929 01aa 1D       		.uleb128 0x1d
 33930 01ab 01       		.byte	0x1
 33931 01ac 31       		.uleb128 0x31
 33932 01ad 13       		.uleb128 0x13
 33933 01ae 11       		.uleb128 0x11
 33934 01af 01       		.uleb128 0x1
 33935 01b0 12       		.uleb128 0x12
 33936 01b1 06       		.uleb128 0x6
 33937 01b2 58       		.uleb128 0x58
 33938 01b3 0B       		.uleb128 0xb
 33939 01b4 59       		.uleb128 0x59
 33940 01b5 05       		.uleb128 0x5
 33941 01b6 00       		.byte	0
 33942 01b7 00       		.byte	0
 33943 01b8 22       		.uleb128 0x22
 33944 01b9 2E       		.uleb128 0x2e
 33945 01ba 01       		.byte	0x1
 33946 01bb 3F       		.uleb128 0x3f
 33947 01bc 19       		.uleb128 0x19
 33948 01bd 03       		.uleb128 0x3
 33949 01be 0E       		.uleb128 0xe
 33950 01bf 3A       		.uleb128 0x3a
 33951 01c0 0B       		.uleb128 0xb
 33952 01c1 3B       		.uleb128 0x3b
 33953 01c2 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 721


 33954 01c3 27       		.uleb128 0x27
 33955 01c4 19       		.uleb128 0x19
 33956 01c5 11       		.uleb128 0x11
 33957 01c6 01       		.uleb128 0x1
 33958 01c7 12       		.uleb128 0x12
 33959 01c8 06       		.uleb128 0x6
 33960 01c9 40       		.uleb128 0x40
 33961 01ca 18       		.uleb128 0x18
 33962 01cb 9642     		.uleb128 0x2116
 33963 01cd 19       		.uleb128 0x19
 33964 01ce 01       		.uleb128 0x1
 33965 01cf 13       		.uleb128 0x13
 33966 01d0 00       		.byte	0
 33967 01d1 00       		.byte	0
 33968 01d2 23       		.uleb128 0x23
 33969 01d3 34       		.uleb128 0x34
 33970 01d4 00       		.byte	0
 33971 01d5 03       		.uleb128 0x3
 33972 01d6 0E       		.uleb128 0xe
 33973 01d7 3A       		.uleb128 0x3a
 33974 01d8 0B       		.uleb128 0xb
 33975 01d9 3B       		.uleb128 0x3b
 33976 01da 05       		.uleb128 0x5
 33977 01db 49       		.uleb128 0x49
 33978 01dc 13       		.uleb128 0x13
 33979 01dd 02       		.uleb128 0x2
 33980 01de 18       		.uleb128 0x18
 33981 01df 00       		.byte	0
 33982 01e0 00       		.byte	0
 33983 01e1 24       		.uleb128 0x24
 33984 01e2 21       		.uleb128 0x21
 33985 01e3 00       		.byte	0
 33986 01e4 49       		.uleb128 0x49
 33987 01e5 13       		.uleb128 0x13
 33988 01e6 2F       		.uleb128 0x2f
 33989 01e7 05       		.uleb128 0x5
 33990 01e8 00       		.byte	0
 33991 01e9 00       		.byte	0
 33992 01ea 25       		.uleb128 0x25
 33993 01eb 05       		.uleb128 0x5
 33994 01ec 00       		.byte	0
 33995 01ed 03       		.uleb128 0x3
 33996 01ee 0E       		.uleb128 0xe
 33997 01ef 3A       		.uleb128 0x3a
 33998 01f0 0B       		.uleb128 0xb
 33999 01f1 3B       		.uleb128 0x3b
 34000 01f2 05       		.uleb128 0x5
 34001 01f3 49       		.uleb128 0x49
 34002 01f4 13       		.uleb128 0x13
 34003 01f5 02       		.uleb128 0x2
 34004 01f6 18       		.uleb128 0x18
 34005 01f7 00       		.byte	0
 34006 01f8 00       		.byte	0
 34007 01f9 26       		.uleb128 0x26
 34008 01fa 34       		.uleb128 0x34
 34009 01fb 00       		.byte	0
 34010 01fc 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 722


 34011 01fd 08       		.uleb128 0x8
 34012 01fe 3A       		.uleb128 0x3a
 34013 01ff 0B       		.uleb128 0xb
 34014 0200 3B       		.uleb128 0x3b
 34015 0201 05       		.uleb128 0x5
 34016 0202 49       		.uleb128 0x49
 34017 0203 13       		.uleb128 0x13
 34018 0204 02       		.uleb128 0x2
 34019 0205 18       		.uleb128 0x18
 34020 0206 00       		.byte	0
 34021 0207 00       		.byte	0
 34022 0208 27       		.uleb128 0x27
 34023 0209 2E       		.uleb128 0x2e
 34024 020a 01       		.byte	0x1
 34025 020b 3F       		.uleb128 0x3f
 34026 020c 19       		.uleb128 0x19
 34027 020d 03       		.uleb128 0x3
 34028 020e 0E       		.uleb128 0xe
 34029 020f 3A       		.uleb128 0x3a
 34030 0210 0B       		.uleb128 0xb
 34031 0211 3B       		.uleb128 0x3b
 34032 0212 05       		.uleb128 0x5
 34033 0213 11       		.uleb128 0x11
 34034 0214 01       		.uleb128 0x1
 34035 0215 12       		.uleb128 0x12
 34036 0216 06       		.uleb128 0x6
 34037 0217 40       		.uleb128 0x40
 34038 0218 18       		.uleb128 0x18
 34039 0219 9642     		.uleb128 0x2116
 34040 021b 19       		.uleb128 0x19
 34041 021c 01       		.uleb128 0x1
 34042 021d 13       		.uleb128 0x13
 34043 021e 00       		.byte	0
 34044 021f 00       		.byte	0
 34045 0220 28       		.uleb128 0x28
 34046 0221 2E       		.uleb128 0x2e
 34047 0222 01       		.byte	0x1
 34048 0223 3F       		.uleb128 0x3f
 34049 0224 19       		.uleb128 0x19
 34050 0225 03       		.uleb128 0x3
 34051 0226 0E       		.uleb128 0xe
 34052 0227 3A       		.uleb128 0x3a
 34053 0228 0B       		.uleb128 0xb
 34054 0229 3B       		.uleb128 0x3b
 34055 022a 05       		.uleb128 0x5
 34056 022b 27       		.uleb128 0x27
 34057 022c 19       		.uleb128 0x19
 34058 022d 11       		.uleb128 0x11
 34059 022e 01       		.uleb128 0x1
 34060 022f 12       		.uleb128 0x12
 34061 0230 06       		.uleb128 0x6
 34062 0231 40       		.uleb128 0x40
 34063 0232 18       		.uleb128 0x18
 34064 0233 9742     		.uleb128 0x2117
 34065 0235 19       		.uleb128 0x19
 34066 0236 01       		.uleb128 0x1
 34067 0237 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 723


 34068 0238 00       		.byte	0
 34069 0239 00       		.byte	0
 34070 023a 29       		.uleb128 0x29
 34071 023b 05       		.uleb128 0x5
 34072 023c 00       		.byte	0
 34073 023d 03       		.uleb128 0x3
 34074 023e 08       		.uleb128 0x8
 34075 023f 3A       		.uleb128 0x3a
 34076 0240 0B       		.uleb128 0xb
 34077 0241 3B       		.uleb128 0x3b
 34078 0242 05       		.uleb128 0x5
 34079 0243 49       		.uleb128 0x49
 34080 0244 13       		.uleb128 0x13
 34081 0245 02       		.uleb128 0x2
 34082 0246 18       		.uleb128 0x18
 34083 0247 00       		.byte	0
 34084 0248 00       		.byte	0
 34085 0249 2A       		.uleb128 0x2a
 34086 024a 2E       		.uleb128 0x2e
 34087 024b 01       		.byte	0x1
 34088 024c 3F       		.uleb128 0x3f
 34089 024d 19       		.uleb128 0x19
 34090 024e 03       		.uleb128 0x3
 34091 024f 0E       		.uleb128 0xe
 34092 0250 3A       		.uleb128 0x3a
 34093 0251 0B       		.uleb128 0xb
 34094 0252 3B       		.uleb128 0x3b
 34095 0253 05       		.uleb128 0x5
 34096 0254 27       		.uleb128 0x27
 34097 0255 19       		.uleb128 0x19
 34098 0256 49       		.uleb128 0x49
 34099 0257 13       		.uleb128 0x13
 34100 0258 11       		.uleb128 0x11
 34101 0259 01       		.uleb128 0x1
 34102 025a 12       		.uleb128 0x12
 34103 025b 06       		.uleb128 0x6
 34104 025c 40       		.uleb128 0x40
 34105 025d 18       		.uleb128 0x18
 34106 025e 9742     		.uleb128 0x2117
 34107 0260 19       		.uleb128 0x19
 34108 0261 01       		.uleb128 0x1
 34109 0262 13       		.uleb128 0x13
 34110 0263 00       		.byte	0
 34111 0264 00       		.byte	0
 34112 0265 2B       		.uleb128 0x2b
 34113 0266 2E       		.uleb128 0x2e
 34114 0267 01       		.byte	0x1
 34115 0268 3F       		.uleb128 0x3f
 34116 0269 19       		.uleb128 0x19
 34117 026a 03       		.uleb128 0x3
 34118 026b 0E       		.uleb128 0xe
 34119 026c 3A       		.uleb128 0x3a
 34120 026d 0B       		.uleb128 0xb
 34121 026e 3B       		.uleb128 0x3b
 34122 026f 05       		.uleb128 0x5
 34123 0270 27       		.uleb128 0x27
 34124 0271 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 724


 34125 0272 49       		.uleb128 0x49
 34126 0273 13       		.uleb128 0x13
 34127 0274 11       		.uleb128 0x11
 34128 0275 01       		.uleb128 0x1
 34129 0276 12       		.uleb128 0x12
 34130 0277 06       		.uleb128 0x6
 34131 0278 40       		.uleb128 0x40
 34132 0279 18       		.uleb128 0x18
 34133 027a 9642     		.uleb128 0x2116
 34134 027c 19       		.uleb128 0x19
 34135 027d 01       		.uleb128 0x1
 34136 027e 13       		.uleb128 0x13
 34137 027f 00       		.byte	0
 34138 0280 00       		.byte	0
 34139 0281 2C       		.uleb128 0x2c
 34140 0282 2E       		.uleb128 0x2e
 34141 0283 00       		.byte	0
 34142 0284 3F       		.uleb128 0x3f
 34143 0285 19       		.uleb128 0x19
 34144 0286 03       		.uleb128 0x3
 34145 0287 0E       		.uleb128 0xe
 34146 0288 3A       		.uleb128 0x3a
 34147 0289 0B       		.uleb128 0xb
 34148 028a 3B       		.uleb128 0x3b
 34149 028b 05       		.uleb128 0x5
 34150 028c 27       		.uleb128 0x27
 34151 028d 19       		.uleb128 0x19
 34152 028e 11       		.uleb128 0x11
 34153 028f 01       		.uleb128 0x1
 34154 0290 12       		.uleb128 0x12
 34155 0291 06       		.uleb128 0x6
 34156 0292 40       		.uleb128 0x40
 34157 0293 18       		.uleb128 0x18
 34158 0294 9742     		.uleb128 0x2117
 34159 0296 19       		.uleb128 0x19
 34160 0297 00       		.byte	0
 34161 0298 00       		.byte	0
 34162 0299 2D       		.uleb128 0x2d
 34163 029a 2E       		.uleb128 0x2e
 34164 029b 00       		.byte	0
 34165 029c 3F       		.uleb128 0x3f
 34166 029d 19       		.uleb128 0x19
 34167 029e 03       		.uleb128 0x3
 34168 029f 0E       		.uleb128 0xe
 34169 02a0 3A       		.uleb128 0x3a
 34170 02a1 0B       		.uleb128 0xb
 34171 02a2 3B       		.uleb128 0x3b
 34172 02a3 05       		.uleb128 0x5
 34173 02a4 11       		.uleb128 0x11
 34174 02a5 01       		.uleb128 0x1
 34175 02a6 12       		.uleb128 0x12
 34176 02a7 06       		.uleb128 0x6
 34177 02a8 40       		.uleb128 0x40
 34178 02a9 18       		.uleb128 0x18
 34179 02aa 9742     		.uleb128 0x2117
 34180 02ac 19       		.uleb128 0x19
 34181 02ad 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 725


 34182 02ae 00       		.byte	0
 34183 02af 2E       		.uleb128 0x2e
 34184 02b0 2E       		.uleb128 0x2e
 34185 02b1 01       		.byte	0x1
 34186 02b2 3F       		.uleb128 0x3f
 34187 02b3 19       		.uleb128 0x19
 34188 02b4 03       		.uleb128 0x3
 34189 02b5 0E       		.uleb128 0xe
 34190 02b6 3A       		.uleb128 0x3a
 34191 02b7 0B       		.uleb128 0xb
 34192 02b8 3B       		.uleb128 0x3b
 34193 02b9 05       		.uleb128 0x5
 34194 02ba 11       		.uleb128 0x11
 34195 02bb 01       		.uleb128 0x1
 34196 02bc 12       		.uleb128 0x12
 34197 02bd 06       		.uleb128 0x6
 34198 02be 40       		.uleb128 0x40
 34199 02bf 18       		.uleb128 0x18
 34200 02c0 9742     		.uleb128 0x2117
 34201 02c2 19       		.uleb128 0x19
 34202 02c3 01       		.uleb128 0x1
 34203 02c4 13       		.uleb128 0x13
 34204 02c5 00       		.byte	0
 34205 02c6 00       		.byte	0
 34206 02c7 2F       		.uleb128 0x2f
 34207 02c8 0B       		.uleb128 0xb
 34208 02c9 01       		.byte	0x1
 34209 02ca 11       		.uleb128 0x11
 34210 02cb 01       		.uleb128 0x1
 34211 02cc 12       		.uleb128 0x12
 34212 02cd 06       		.uleb128 0x6
 34213 02ce 01       		.uleb128 0x1
 34214 02cf 13       		.uleb128 0x13
 34215 02d0 00       		.byte	0
 34216 02d1 00       		.byte	0
 34217 02d2 30       		.uleb128 0x30
 34218 02d3 2E       		.uleb128 0x2e
 34219 02d4 01       		.byte	0x1
 34220 02d5 3F       		.uleb128 0x3f
 34221 02d6 19       		.uleb128 0x19
 34222 02d7 03       		.uleb128 0x3
 34223 02d8 0E       		.uleb128 0xe
 34224 02d9 3A       		.uleb128 0x3a
 34225 02da 0B       		.uleb128 0xb
 34226 02db 3B       		.uleb128 0x3b
 34227 02dc 05       		.uleb128 0x5
 34228 02dd 49       		.uleb128 0x49
 34229 02de 13       		.uleb128 0x13
 34230 02df 11       		.uleb128 0x11
 34231 02e0 01       		.uleb128 0x1
 34232 02e1 12       		.uleb128 0x12
 34233 02e2 06       		.uleb128 0x6
 34234 02e3 40       		.uleb128 0x40
 34235 02e4 18       		.uleb128 0x18
 34236 02e5 9642     		.uleb128 0x2116
 34237 02e7 19       		.uleb128 0x19
 34238 02e8 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 726


 34239 02e9 13       		.uleb128 0x13
 34240 02ea 00       		.byte	0
 34241 02eb 00       		.byte	0
 34242 02ec 31       		.uleb128 0x31
 34243 02ed 2E       		.uleb128 0x2e
 34244 02ee 00       		.byte	0
 34245 02ef 3F       		.uleb128 0x3f
 34246 02f0 19       		.uleb128 0x19
 34247 02f1 03       		.uleb128 0x3
 34248 02f2 0E       		.uleb128 0xe
 34249 02f3 3A       		.uleb128 0x3a
 34250 02f4 0B       		.uleb128 0xb
 34251 02f5 3B       		.uleb128 0x3b
 34252 02f6 05       		.uleb128 0x5
 34253 02f7 11       		.uleb128 0x11
 34254 02f8 01       		.uleb128 0x1
 34255 02f9 12       		.uleb128 0x12
 34256 02fa 06       		.uleb128 0x6
 34257 02fb 40       		.uleb128 0x40
 34258 02fc 18       		.uleb128 0x18
 34259 02fd 9642     		.uleb128 0x2116
 34260 02ff 19       		.uleb128 0x19
 34261 0300 00       		.byte	0
 34262 0301 00       		.byte	0
 34263 0302 32       		.uleb128 0x32
 34264 0303 2E       		.uleb128 0x2e
 34265 0304 01       		.byte	0x1
 34266 0305 3F       		.uleb128 0x3f
 34267 0306 19       		.uleb128 0x19
 34268 0307 03       		.uleb128 0x3
 34269 0308 0E       		.uleb128 0xe
 34270 0309 3A       		.uleb128 0x3a
 34271 030a 0B       		.uleb128 0xb
 34272 030b 3B       		.uleb128 0x3b
 34273 030c 05       		.uleb128 0x5
 34274 030d 49       		.uleb128 0x49
 34275 030e 13       		.uleb128 0x13
 34276 030f 11       		.uleb128 0x11
 34277 0310 01       		.uleb128 0x1
 34278 0311 12       		.uleb128 0x12
 34279 0312 06       		.uleb128 0x6
 34280 0313 40       		.uleb128 0x40
 34281 0314 18       		.uleb128 0x18
 34282 0315 9742     		.uleb128 0x2117
 34283 0317 19       		.uleb128 0x19
 34284 0318 01       		.uleb128 0x1
 34285 0319 13       		.uleb128 0x13
 34286 031a 00       		.byte	0
 34287 031b 00       		.byte	0
 34288 031c 33       		.uleb128 0x33
 34289 031d 34       		.uleb128 0x34
 34290 031e 00       		.byte	0
 34291 031f 03       		.uleb128 0x3
 34292 0320 0E       		.uleb128 0xe
 34293 0321 3A       		.uleb128 0x3a
 34294 0322 0B       		.uleb128 0xb
 34295 0323 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 727


 34296 0324 05       		.uleb128 0x5
 34297 0325 49       		.uleb128 0x49
 34298 0326 13       		.uleb128 0x13
 34299 0327 3F       		.uleb128 0x3f
 34300 0328 19       		.uleb128 0x19
 34301 0329 3C       		.uleb128 0x3c
 34302 032a 19       		.uleb128 0x19
 34303 032b 00       		.byte	0
 34304 032c 00       		.byte	0
 34305 032d 34       		.uleb128 0x34
 34306 032e 34       		.uleb128 0x34
 34307 032f 00       		.byte	0
 34308 0330 03       		.uleb128 0x3
 34309 0331 0E       		.uleb128 0xe
 34310 0332 3A       		.uleb128 0x3a
 34311 0333 0B       		.uleb128 0xb
 34312 0334 3B       		.uleb128 0x3b
 34313 0335 0B       		.uleb128 0xb
 34314 0336 49       		.uleb128 0x49
 34315 0337 13       		.uleb128 0x13
 34316 0338 3F       		.uleb128 0x3f
 34317 0339 19       		.uleb128 0x19
 34318 033a 02       		.uleb128 0x2
 34319 033b 18       		.uleb128 0x18
 34320 033c 00       		.byte	0
 34321 033d 00       		.byte	0
 34322 033e 00       		.byte	0
 34323              		.section	.debug_aranges,"",%progbits
 34324 0000 04020000 		.4byte	0x204
 34325 0004 0200     		.2byte	0x2
 34326 0006 00000000 		.4byte	.Ldebug_info0
 34327 000a 04       		.byte	0x4
 34328 000b 00       		.byte	0
 34329 000c 0000     		.2byte	0
 34330 000e 0000     		.2byte	0
 34331 0010 00000000 		.4byte	.LFB64
 34332 0014 64060000 		.4byte	.LFE64-.LFB64
 34333 0018 00000000 		.4byte	.LFB65
 34334 001c 22000000 		.4byte	.LFE65-.LFB65
 34335 0020 00000000 		.4byte	.LFB66
 34336 0024 64010000 		.4byte	.LFE66-.LFB66
 34337 0028 00000000 		.4byte	.LFB67
 34338 002c A4320000 		.4byte	.LFE67-.LFB67
 34339 0030 00000000 		.4byte	.LFB68
 34340 0034 48190000 		.4byte	.LFE68-.LFB68
 34341 0038 00000000 		.4byte	.LFB69
 34342 003c DC140000 		.4byte	.LFE69-.LFB69
 34343 0040 00000000 		.4byte	.LFB70
 34344 0044 F40D0000 		.4byte	.LFE70-.LFB70
 34345 0048 00000000 		.4byte	.LFB71
 34346 004c 90000000 		.4byte	.LFE71-.LFB71
 34347 0050 00000000 		.4byte	.LFB72
 34348 0054 701C0000 		.4byte	.LFE72-.LFB72
 34349 0058 00000000 		.4byte	.LFB73
 34350 005c 90040000 		.4byte	.LFE73-.LFB73
 34351 0060 00000000 		.4byte	.LFB74
 34352 0064 5C020000 		.4byte	.LFE74-.LFB74
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 728


 34353 0068 00000000 		.4byte	.LFB75
 34354 006c 80120000 		.4byte	.LFE75-.LFB75
 34355 0070 00000000 		.4byte	.LFB76
 34356 0074 DC000000 		.4byte	.LFE76-.LFB76
 34357 0078 00000000 		.4byte	.LFB77
 34358 007c 80010000 		.4byte	.LFE77-.LFB77
 34359 0080 00000000 		.4byte	.LFB78
 34360 0084 28000000 		.4byte	.LFE78-.LFB78
 34361 0088 00000000 		.4byte	.LFB79
 34362 008c F0000000 		.4byte	.LFE79-.LFB79
 34363 0090 00000000 		.4byte	.LFB80
 34364 0094 74030000 		.4byte	.LFE80-.LFB80
 34365 0098 00000000 		.4byte	.LFB81
 34366 009c 84000000 		.4byte	.LFE81-.LFB81
 34367 00a0 00000000 		.4byte	.LFB82
 34368 00a4 88000000 		.4byte	.LFE82-.LFB82
 34369 00a8 00000000 		.4byte	.LFB83
 34370 00ac A0000000 		.4byte	.LFE83-.LFB83
 34371 00b0 00000000 		.4byte	.LFB84
 34372 00b4 3E000000 		.4byte	.LFE84-.LFB84
 34373 00b8 00000000 		.4byte	.LFB85
 34374 00bc 2E000000 		.4byte	.LFE85-.LFB85
 34375 00c0 00000000 		.4byte	.LFB86
 34376 00c4 98000000 		.4byte	.LFE86-.LFB86
 34377 00c8 00000000 		.4byte	.LFB87
 34378 00cc 80000000 		.4byte	.LFE87-.LFB87
 34379 00d0 00000000 		.4byte	.LFB88
 34380 00d4 5C000000 		.4byte	.LFE88-.LFB88
 34381 00d8 00000000 		.4byte	.LFB89
 34382 00dc 30060000 		.4byte	.LFE89-.LFB89
 34383 00e0 00000000 		.4byte	.LFB90
 34384 00e4 40020000 		.4byte	.LFE90-.LFB90
 34385 00e8 00000000 		.4byte	.LFB91
 34386 00ec 28000000 		.4byte	.LFE91-.LFB91
 34387 00f0 00000000 		.4byte	.LFB92
 34388 00f4 88000000 		.4byte	.LFE92-.LFB92
 34389 00f8 00000000 		.4byte	.LFB93
 34390 00fc B0000000 		.4byte	.LFE93-.LFB93
 34391 0100 00000000 		.4byte	.LFB94
 34392 0104 28010000 		.4byte	.LFE94-.LFB94
 34393 0108 00000000 		.4byte	.LFB95
 34394 010c B8000000 		.4byte	.LFE95-.LFB95
 34395 0110 00000000 		.4byte	.LFB96
 34396 0114 B8000000 		.4byte	.LFE96-.LFB96
 34397 0118 00000000 		.4byte	.LFB97
 34398 011c 5C000000 		.4byte	.LFE97-.LFB97
 34399 0120 00000000 		.4byte	.LFB98
 34400 0124 44020000 		.4byte	.LFE98-.LFB98
 34401 0128 00000000 		.4byte	.LFB99
 34402 012c E4000000 		.4byte	.LFE99-.LFB99
 34403 0130 00000000 		.4byte	.LFB100
 34404 0134 5C000000 		.4byte	.LFE100-.LFB100
 34405 0138 00000000 		.4byte	.LFB101
 34406 013c 38010000 		.4byte	.LFE101-.LFB101
 34407 0140 00000000 		.4byte	.LFB102
 34408 0144 DC000000 		.4byte	.LFE102-.LFB102
 34409 0148 00000000 		.4byte	.LFB103
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 729


 34410 014c 64000000 		.4byte	.LFE103-.LFB103
 34411 0150 00000000 		.4byte	.LFB104
 34412 0154 0C000000 		.4byte	.LFE104-.LFB104
 34413 0158 00000000 		.4byte	.LFB105
 34414 015c C4000000 		.4byte	.LFE105-.LFB105
 34415 0160 00000000 		.4byte	.LFB106
 34416 0164 A8000000 		.4byte	.LFE106-.LFB106
 34417 0168 00000000 		.4byte	.LFB107
 34418 016c 34000000 		.4byte	.LFE107-.LFB107
 34419 0170 00000000 		.4byte	.LFB108
 34420 0174 20000000 		.4byte	.LFE108-.LFB108
 34421 0178 00000000 		.4byte	.LFB109
 34422 017c A0000000 		.4byte	.LFE109-.LFB109
 34423 0180 00000000 		.4byte	.LFB110
 34424 0184 BC010000 		.4byte	.LFE110-.LFB110
 34425 0188 00000000 		.4byte	.LFB111
 34426 018c 60000000 		.4byte	.LFE111-.LFB111
 34427 0190 00000000 		.4byte	.LFB112
 34428 0194 98050000 		.4byte	.LFE112-.LFB112
 34429 0198 00000000 		.4byte	.LFB113
 34430 019c 8C000000 		.4byte	.LFE113-.LFB113
 34431 01a0 00000000 		.4byte	.LFB114
 34432 01a4 EC000000 		.4byte	.LFE114-.LFB114
 34433 01a8 00000000 		.4byte	.LFB115
 34434 01ac 5C000000 		.4byte	.LFE115-.LFB115
 34435 01b0 00000000 		.4byte	.LFB116
 34436 01b4 C0000000 		.4byte	.LFE116-.LFB116
 34437 01b8 00000000 		.4byte	.LFB117
 34438 01bc 54010000 		.4byte	.LFE117-.LFB117
 34439 01c0 00000000 		.4byte	.LFB118
 34440 01c4 B0000000 		.4byte	.LFE118-.LFB118
 34441 01c8 00000000 		.4byte	.LFB119
 34442 01cc 48010000 		.4byte	.LFE119-.LFB119
 34443 01d0 00000000 		.4byte	.LFB120
 34444 01d4 A8010000 		.4byte	.LFE120-.LFB120
 34445 01d8 00000000 		.4byte	.LFB121
 34446 01dc 64010000 		.4byte	.LFE121-.LFB121
 34447 01e0 00000000 		.4byte	.LFB122
 34448 01e4 12000000 		.4byte	.LFE122-.LFB122
 34449 01e8 00000000 		.4byte	.LFB123
 34450 01ec B8000000 		.4byte	.LFE123-.LFB123
 34451 01f0 00000000 		.4byte	.LFB124
 34452 01f4 3C000000 		.4byte	.LFE124-.LFB124
 34453 01f8 00000000 		.4byte	.LFB125
 34454 01fc 90000000 		.4byte	.LFE125-.LFB125
 34455 0200 00000000 		.4byte	0
 34456 0204 00000000 		.4byte	0
 34457              		.section	.debug_ranges,"",%progbits
 34458              	.Ldebug_ranges0:
 34459 0000 00000000 		.4byte	.LFB64
 34460 0004 64060000 		.4byte	.LFE64
 34461 0008 00000000 		.4byte	.LFB65
 34462 000c 22000000 		.4byte	.LFE65
 34463 0010 00000000 		.4byte	.LFB66
 34464 0014 64010000 		.4byte	.LFE66
 34465 0018 00000000 		.4byte	.LFB67
 34466 001c A4320000 		.4byte	.LFE67
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 730


 34467 0020 00000000 		.4byte	.LFB68
 34468 0024 48190000 		.4byte	.LFE68
 34469 0028 00000000 		.4byte	.LFB69
 34470 002c DC140000 		.4byte	.LFE69
 34471 0030 00000000 		.4byte	.LFB70
 34472 0034 F40D0000 		.4byte	.LFE70
 34473 0038 00000000 		.4byte	.LFB71
 34474 003c 90000000 		.4byte	.LFE71
 34475 0040 00000000 		.4byte	.LFB72
 34476 0044 701C0000 		.4byte	.LFE72
 34477 0048 00000000 		.4byte	.LFB73
 34478 004c 90040000 		.4byte	.LFE73
 34479 0050 00000000 		.4byte	.LFB74
 34480 0054 5C020000 		.4byte	.LFE74
 34481 0058 00000000 		.4byte	.LFB75
 34482 005c 80120000 		.4byte	.LFE75
 34483 0060 00000000 		.4byte	.LFB76
 34484 0064 DC000000 		.4byte	.LFE76
 34485 0068 00000000 		.4byte	.LFB77
 34486 006c 80010000 		.4byte	.LFE77
 34487 0070 00000000 		.4byte	.LFB78
 34488 0074 28000000 		.4byte	.LFE78
 34489 0078 00000000 		.4byte	.LFB79
 34490 007c F0000000 		.4byte	.LFE79
 34491 0080 00000000 		.4byte	.LFB80
 34492 0084 74030000 		.4byte	.LFE80
 34493 0088 00000000 		.4byte	.LFB81
 34494 008c 84000000 		.4byte	.LFE81
 34495 0090 00000000 		.4byte	.LFB82
 34496 0094 88000000 		.4byte	.LFE82
 34497 0098 00000000 		.4byte	.LFB83
 34498 009c A0000000 		.4byte	.LFE83
 34499 00a0 00000000 		.4byte	.LFB84
 34500 00a4 3E000000 		.4byte	.LFE84
 34501 00a8 00000000 		.4byte	.LFB85
 34502 00ac 2E000000 		.4byte	.LFE85
 34503 00b0 00000000 		.4byte	.LFB86
 34504 00b4 98000000 		.4byte	.LFE86
 34505 00b8 00000000 		.4byte	.LFB87
 34506 00bc 80000000 		.4byte	.LFE87
 34507 00c0 00000000 		.4byte	.LFB88
 34508 00c4 5C000000 		.4byte	.LFE88
 34509 00c8 00000000 		.4byte	.LFB89
 34510 00cc 30060000 		.4byte	.LFE89
 34511 00d0 00000000 		.4byte	.LFB90
 34512 00d4 40020000 		.4byte	.LFE90
 34513 00d8 00000000 		.4byte	.LFB91
 34514 00dc 28000000 		.4byte	.LFE91
 34515 00e0 00000000 		.4byte	.LFB92
 34516 00e4 88000000 		.4byte	.LFE92
 34517 00e8 00000000 		.4byte	.LFB93
 34518 00ec B0000000 		.4byte	.LFE93
 34519 00f0 00000000 		.4byte	.LFB94
 34520 00f4 28010000 		.4byte	.LFE94
 34521 00f8 00000000 		.4byte	.LFB95
 34522 00fc B8000000 		.4byte	.LFE95
 34523 0100 00000000 		.4byte	.LFB96
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 731


 34524 0104 B8000000 		.4byte	.LFE96
 34525 0108 00000000 		.4byte	.LFB97
 34526 010c 5C000000 		.4byte	.LFE97
 34527 0110 00000000 		.4byte	.LFB98
 34528 0114 44020000 		.4byte	.LFE98
 34529 0118 00000000 		.4byte	.LFB99
 34530 011c E4000000 		.4byte	.LFE99
 34531 0120 00000000 		.4byte	.LFB100
 34532 0124 5C000000 		.4byte	.LFE100
 34533 0128 00000000 		.4byte	.LFB101
 34534 012c 38010000 		.4byte	.LFE101
 34535 0130 00000000 		.4byte	.LFB102
 34536 0134 DC000000 		.4byte	.LFE102
 34537 0138 00000000 		.4byte	.LFB103
 34538 013c 64000000 		.4byte	.LFE103
 34539 0140 00000000 		.4byte	.LFB104
 34540 0144 0C000000 		.4byte	.LFE104
 34541 0148 00000000 		.4byte	.LFB105
 34542 014c C4000000 		.4byte	.LFE105
 34543 0150 00000000 		.4byte	.LFB106
 34544 0154 A8000000 		.4byte	.LFE106
 34545 0158 00000000 		.4byte	.LFB107
 34546 015c 34000000 		.4byte	.LFE107
 34547 0160 00000000 		.4byte	.LFB108
 34548 0164 20000000 		.4byte	.LFE108
 34549 0168 00000000 		.4byte	.LFB109
 34550 016c A0000000 		.4byte	.LFE109
 34551 0170 00000000 		.4byte	.LFB110
 34552 0174 BC010000 		.4byte	.LFE110
 34553 0178 00000000 		.4byte	.LFB111
 34554 017c 60000000 		.4byte	.LFE111
 34555 0180 00000000 		.4byte	.LFB112
 34556 0184 98050000 		.4byte	.LFE112
 34557 0188 00000000 		.4byte	.LFB113
 34558 018c 8C000000 		.4byte	.LFE113
 34559 0190 00000000 		.4byte	.LFB114
 34560 0194 EC000000 		.4byte	.LFE114
 34561 0198 00000000 		.4byte	.LFB115
 34562 019c 5C000000 		.4byte	.LFE115
 34563 01a0 00000000 		.4byte	.LFB116
 34564 01a4 C0000000 		.4byte	.LFE116
 34565 01a8 00000000 		.4byte	.LFB117
 34566 01ac 54010000 		.4byte	.LFE117
 34567 01b0 00000000 		.4byte	.LFB118
 34568 01b4 B0000000 		.4byte	.LFE118
 34569 01b8 00000000 		.4byte	.LFB119
 34570 01bc 48010000 		.4byte	.LFE119
 34571 01c0 00000000 		.4byte	.LFB120
 34572 01c4 A8010000 		.4byte	.LFE120
 34573 01c8 00000000 		.4byte	.LFB121
 34574 01cc 64010000 		.4byte	.LFE121
 34575 01d0 00000000 		.4byte	.LFB122
 34576 01d4 12000000 		.4byte	.LFE122
 34577 01d8 00000000 		.4byte	.LFB123
 34578 01dc B8000000 		.4byte	.LFE123
 34579 01e0 00000000 		.4byte	.LFB124
 34580 01e4 3C000000 		.4byte	.LFE124
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 732


 34581 01e8 00000000 		.4byte	.LFB125
 34582 01ec 90000000 		.4byte	.LFE125
 34583 01f0 00000000 		.4byte	0
 34584 01f4 00000000 		.4byte	0
 34585              		.section	.debug_line,"",%progbits
 34586              	.Ldebug_line0:
 34587 0000 E11F0000 		.section	.debug_str,"MS",%progbits,1
 34587      0200C001 
 34587      00000201 
 34587      FB0E0D00 
 34587      01010101 
 34588              	.LASF223:
 34589 0000 696E666F 		.ascii	"infoSend\000"
 34589      53656E64 
 34589      00
 34590              	.LASF241:
 34591 0009 73747269 		.ascii	"string_length\000"
 34591      6E675F6C 
 34591      656E6774 
 34591      6800
 34592              	.LASF109:
 34593 0017 656D675F 		.ascii	"emg_act_counter\000"
 34593      6163745F 
 34593      636F756E 
 34593      74657200 
 34594              	.LASF274:
 34595 0027 69645F73 		.ascii	"id_str\000"
 34595      747200
 34596              	.LASF257:
 34597 002e 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 34597      61637469 
 34597      76617469 
 34597      6F6E5F6D 
 34597      6F64655F 
 34598              	.LASF25:
 34599 0047 73697A65 		.ascii	"sizetype\000"
 34599      74797065 
 34599      00
 34600              	.LASF116:
 34601 0050 706F7765 		.ascii	"power_cycles\000"
 34601      725F6379 
 34601      636C6573 
 34601      00
 34602              	.LASF33:
 34603 005d 434D445F 		.ascii	"CMD_INIT_MEM\000"
 34603      494E4954 
 34603      5F4D454D 
 34603      00
 34604              	.LASF350:
 34605 006a 676C5F63 		.ascii	"gl_c\000"
 34605      00
 34606              	.LASF203:
 34607 006f 77726973 		.ascii	"wrist_direction_association\000"
 34607      745F6469 
 34607      72656374 
 34607      696F6E5F 
 34607      6173736F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 733


 34608              	.LASF67:
 34609 008b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 34609      545F4D4F 
 34609      44455F45 
 34609      4D475F46 
 34609      4346535F 
 34610              	.LASF36:
 34611 00a3 434D445F 		.ascii	"CMD_ACTIVATE\000"
 34611      41435449 
 34611      56415445 
 34611      00
 34612              	.LASF208:
 34613 00b0 75736572 		.ascii	"user\000"
 34613      00
 34614              	.LASF371:
 34615 00b5 665F6572 		.ascii	"f_err_emg_1\000"
 34615      725F656D 
 34615      675F3100 
 34616              	.LASF372:
 34617 00c1 665F6572 		.ascii	"f_err_emg_2\000"
 34617      725F656D 
 34617      675F3200 
 34618              	.LASF376:
 34619 00cd 73746F70 		.ascii	"stop_master_device\000"
 34619      5F6D6173 
 34619      7465725F 
 34619      64657669 
 34619      636500
 34620              	.LASF11:
 34621 00e0 696E7433 		.ascii	"int32_t\000"
 34621      325F7400 
 34622              	.LASF388:
 34623 00e8 675F7278 		.ascii	"g_rx\000"
 34623      00
 34624              	.LASF104:
 34625 00ed 73745F64 		.ascii	"st_data\000"
 34625      61746100 
 34626              	.LASF298:
 34627 00f5 685F7469 		.ascii	"h_time\000"
 34627      6D6500
 34628              	.LASF312:
 34629 00fc 77726974 		.ascii	"writeStatus\000"
 34629      65537461 
 34629      74757300 
 34630              	.LASF114:
 34631 0108 746F7461 		.ascii	"total_runtime\000"
 34631      6C5F7275 
 34631      6E74696D 
 34631      6500
 34632              	.LASF15:
 34633 0116 75696E74 		.ascii	"uint32\000"
 34633      333200
 34634              	.LASF341:
 34635 011d 636D645F 		.ascii	"cmd_set_baudrate\000"
 34635      7365745F 
 34635      62617564 
 34635      72617465 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 734


 34635      00
 34636              	.LASF361:
 34637 012e 6169725F 		.ascii	"air_chambers_control\000"
 34637      6368616D 
 34637      62657273 
 34637      5F636F6E 
 34637      74726F6C 
 34638              	.LASF282:
 34639 0143 7370695F 		.ascii	"spi_read_delay_str_len\000"
 34639      72656164 
 34639      5F64656C 
 34639      61795F73 
 34639      74725F6C 
 34640              	.LASF209:
 34641 015a 4A4F595F 		.ascii	"JOY_spec\000"
 34641      73706563 
 34641      00
 34642              	.LASF284:
 34643 0163 70726570 		.ascii	"prepare_generic_info\000"
 34643      6172655F 
 34643      67656E65 
 34643      7269635F 
 34643      696E666F 
 34644              	.LASF143:
 34645 0178 706F735F 		.ascii	"pos_lim_inf\000"
 34645      6C696D5F 
 34645      696E6600 
 34646              	.LASF249:
 34647 0184 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 34647      4E445F4D 
 34647      4F544F52 
 34647      5F494458 
 34647      00
 34648              	.LASF343:
 34649 0195 636D645F 		.ascii	"cmd_get_inputs\000"
 34649      6765745F 
 34649      696E7075 
 34649      747300
 34650              	.LASF66:
 34651 01a4 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 34651      545F4D4F 
 34651      44455F45 
 34651      4D475F46 
 34651      43465300 
 34652              	.LASF147:
 34653 01b8 63757272 		.ascii	"curr_lookup\000"
 34653      5F6C6F6F 
 34653      6B757000 
 34654              	.LASF112:
 34655 01c4 72657374 		.ascii	"rest_counter\000"
 34655      5F636F75 
 34655      6E746572 
 34655      00
 34656              	.LASF348:
 34657 01d1 636D645F 		.ascii	"cmd_get_imu_readings\000"
 34657      6765745F 
 34657      696D755F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 735


 34657      72656164 
 34657      696E6773 
 34658              	.LASF190:
 34659 01e6 73745F4D 		.ascii	"st_MASTER_spec\000"
 34659      41535445 
 34659      525F7370 
 34659      656300
 34660              	.LASF277:
 34661 01f5 69645F73 		.ascii	"id_str_len\000"
 34661      74725F6C 
 34661      656E00
 34662              	.LASF65:
 34663 0200 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 34663      545F4D4F 
 34663      44455F45 
 34663      4D475F49 
 34663      4E544547 
 34664              	.LASF251:
 34665 0218 6D5F746D 		.ascii	"m_tmp\000"
 34665      7000
 34666              	.LASF297:
 34667 021e 765F6964 		.ascii	"v_idx\000"
 34667      7800
 34668              	.LASF16:
 34669 0224 696E7438 		.ascii	"int8\000"
 34669      00
 34670              	.LASF228:
 34671 0229 6765745F 		.ascii	"get_param_list\000"
 34671      70617261 
 34671      6D5F6C69 
 34671      737400
 34672              	.LASF324:
 34673 0238 636D645F 		.ascii	"cmd_get_accelerations\000"
 34673      6765745F 
 34673      61636365 
 34673      6C657261 
 34673      74696F6E 
 34674              	.LASF347:
 34675 024e 636D645F 		.ascii	"cmd_get_emg\000"
 34675      6765745F 
 34675      656D6700 
 34676              	.LASF162:
 34677 025a 73745F65 		.ascii	"st_emg\000"
 34677      6D6700
 34678              	.LASF110:
 34679 0261 706F7369 		.ascii	"position_hist\000"
 34679      74696F6E 
 34679      5F686973 
 34679      7400
 34680              	.LASF216:
 34681 026f 74656D70 		.ascii	"temp_value\000"
 34681      5F76616C 
 34681      756500
 34682              	.LASF296:
 34683 027a 7374725F 		.ascii	"str_data\000"
 34683      64617461 
 34683      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 736


 34684              	.LASF426:
 34685 0283 72657375 		.ascii	"result\000"
 34685      6C7400
 34686              	.LASF276:
 34687 028a 7370695F 		.ascii	"spi_read_delay_str\000"
 34687      72656164 
 34687      5F64656C 
 34687      61795F73 
 34687      747200
 34688              	.LASF200:
 34689 029d 73745F57 		.ascii	"st_WR_spec\000"
 34689      525F7370 
 34689      656300
 34690              	.LASF107:
 34691 02a8 72656164 		.ascii	"ready\000"
 34691      7900
 34692              	.LASF159:
 34693 02ae 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 34693      6964785F 
 34693      7573655F 
 34693      666F725F 
 34693      636F6E74 
 34694              	.LASF51:
 34695 02c6 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 34695      4745545F 
 34695      4A4F5953 
 34695      5449434B 
 34695      00
 34696              	.LASF64:
 34697 02d7 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 34697      545F4D4F 
 34697      44455F45 
 34697      4D475F50 
 34697      524F504F 
 34698              	.LASF125:
 34699 02f3 7573655F 		.ascii	"use_2nd_motor_flag\000"
 34699      326E645F 
 34699      6D6F746F 
 34699      725F666C 
 34699      616700
 34700              	.LASF336:
 34701 0306 745F7374 		.ascii	"t_start\000"
 34701      61727400 
 34702              	.LASF117:
 34703 030e 65786365 		.ascii	"excessive_signal_activity\000"
 34703      73736976 
 34703      655F7369 
 34703      676E616C 
 34703      5F616374 
 34704              	.LASF169:
 34705 0328 72656164 		.ascii	"read_imu_flag\000"
 34705      5F696D75 
 34705      5F666C61 
 34705      6700
 34706              	.LASF419:
 34707 0336 50574D5F 		.ascii	"PWM_IMU_1\000"
 34707      494D555F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 737


 34707      3100
 34708              	.LASF420:
 34709 0340 50574D5F 		.ascii	"PWM_IMU_2\000"
 34709      494D555F 
 34709      3200
 34710              	.LASF177:
 34711 034a 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 34711      72645F45 
 34711      4D475F68 
 34711      6973746F 
 34711      72795F6F 
 34712              	.LASF392:
 34713 0363 74696D65 		.ascii	"timer_value\000"
 34713      725F7661 
 34713      6C756500 
 34714              	.LASF4:
 34715 036f 6C6F6E67 		.ascii	"long int\000"
 34715      20696E74 
 34715      00
 34716              	.LASF206:
 34717 0378 756E7573 		.ascii	"unused_bytes1\000"
 34717      65645F62 
 34717      79746573 
 34717      3100
 34718              	.LASF124:
 34719 0386 72657365 		.ascii	"reset_counters\000"
 34719      745F636F 
 34719      756E7465 
 34719      727300
 34720              	.LASF180:
 34721 0395 75736572 		.ascii	"user_emg\000"
 34721      5F656D67 
 34721      00
 34722              	.LASF356:
 34723 039e 636D645F 		.ascii	"cmd_get_SD_file\000"
 34723      6765745F 
 34723      53445F66 
 34723      696C6500 
 34724              	.LASF321:
 34725 03ae 7365745A 		.ascii	"setZeros\000"
 34725      65726F73 
 34725      00
 34726              	.LASF119:
 34727 03b7 756E7573 		.ascii	"unused_bytes\000"
 34727      65645F62 
 34727      79746573 
 34727      00
 34728              	.LASF212:
 34729 03c4 61636365 		.ascii	"accel_value\000"
 34729      6C5F7661 
 34729      6C756500 
 34730              	.LASF232:
 34731 03d0 4E554D5F 		.ascii	"NUM_ITEMS\000"
 34731      4954454D 
 34731      5300
 34732              	.LASF108:
 34733 03da 73745F63 		.ascii	"st_counters\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 738


 34733      6F756E74 
 34733      65727300 
 34734              	.LASF255:
 34735 03e6 4D454D5F 		.ascii	"MEM_P\000"
 34735      5000
 34736              	.LASF19:
 34737 03ec 666C6F61 		.ascii	"float32\000"
 34737      74333200 
 34738              	.LASF354:
 34739 03f4 636D645F 		.ascii	"cmd_get_ADC_map\000"
 34739      6765745F 
 34739      4144435F 
 34739      6D617000 
 34740              	.LASF41:
 34741 0404 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 34741      4745545F 
 34741      43555252 
 34741      454E5453 
 34741      00
 34742              	.LASF295:
 34743 0415 70726570 		.ascii	"prepare_SD_EMG_history\000"
 34743      6172655F 
 34743      53445F45 
 34743      4D475F68 
 34743      6973746F 
 34744              	.LASF355:
 34745 042c 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 34745      6765745F 
 34745      4144435F 
 34745      72617700 
 34746              	.LASF408:
 34747 043c 73645061 		.ascii	"sdParam\000"
 34747      72616D00 
 34748              	.LASF364:
 34749 0444 70726573 		.ascii	"pressure_value\000"
 34749      73757265 
 34749      5F76616C 
 34749      756500
 34750              	.LASF265:
 34751 0453 6175785F 		.ascii	"aux_float2\000"
 34751      666C6F61 
 34751      743200
 34752              	.LASF342:
 34753 045e 636D645F 		.ascii	"cmd_ping\000"
 34753      70696E67 
 34753      00
 34754              	.LASF283:
 34755 0467 7370695F 		.ascii	"spi_delay_menu_len\000"
 34755      64656C61 
 34755      795F6D65 
 34755      6E755F6C 
 34755      656E00
 34756              	.LASF263:
 34757 047a 7365745F 		.ascii	"set_custom_param\000"
 34757      63757374 
 34757      6F6D5F70 
 34757      6172616D 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 739


 34757      00
 34758              	.LASF359:
 34759 048b 636D645F 		.ascii	"cmd_remove_SD_file\000"
 34759      72656D6F 
 34759      76655F53 
 34759      445F6669 
 34759      6C6500
 34760              	.LASF320:
 34761 049e 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 34761      6E69745F 
 34761      4F74626B 
 34761      41637457 
 34761      72697374 
 34762              	.LASF0:
 34763 04b5 7369676E 		.ascii	"signed char\000"
 34763      65642063 
 34763      68617200 
 34764              	.LASF179:
 34765 04c1 75736572 		.ascii	"user_code_string\000"
 34765      5F636F64 
 34765      655F7374 
 34765      72696E67 
 34765      00
 34766              	.LASF191:
 34767 04d2 6D617374 		.ascii	"master_mode_active\000"
 34767      65725F6D 
 34767      6F64655F 
 34767      61637469 
 34767      766500
 34768              	.LASF217:
 34769 04e5 73745F63 		.ascii	"st_calib\000"
 34769      616C6962 
 34769      00
 34770              	.LASF369:
 34771 04ee 6572725F 		.ascii	"err_emg_1\000"
 34771      656D675F 
 34771      3100
 34772              	.LASF310:
 34773 04f8 6D656D53 		.ascii	"memStore\000"
 34773      746F7265 
 34773      00
 34774              	.LASF358:
 34775 0501 66696C65 		.ascii	"filename\000"
 34775      6E616D65 
 34775      00
 34776              	.LASF75:
 34777 050a 6D6F746F 		.ascii	"motor_supply_type\000"
 34777      725F7375 
 34777      70706C79 
 34777      5F747970 
 34777      6500
 34778              	.LASF338:
 34779 051c 72656164 		.ascii	"read_flag\000"
 34779      5F666C61 
 34779      6700
 34780              	.LASF401:
 34781 0526 4144435F 		.ascii	"ADC_buf\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 740


 34781      62756600 
 34782              	.LASF398:
 34783 052e 696E7465 		.ascii	"interrupt_flag\000"
 34783      72727570 
 34783      745F666C 
 34783      616700
 34784              	.LASF288:
 34785 053d 73746570 		.ascii	"step\000"
 34785      00
 34786              	.LASF1:
 34787 0542 756E7369 		.ascii	"unsigned char\000"
 34787      676E6564 
 34787      20636861 
 34787      7200
 34788              	.LASF48:
 34789 0550 434D445F 		.ascii	"CMD_SET_VIBROTACTILE_INPUTS\000"
 34789      5345545F 
 34789      56494252 
 34789      4F544143 
 34789      54494C45 
 34790              	.LASF153:
 34791 056c 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 34791      72657665 
 34791      72735F6D 
 34791      6F746F72 
 34791      5F666C61 
 34792              	.LASF49:
 34793 0582 434D445F 		.ascii	"CMD_GET_VIBROTACTILE_INPUTS\000"
 34793      4745545F 
 34793      56494252 
 34793      4F544143 
 34793      54494C45 
 34794              	.LASF381:
 34795 059e 675F7265 		.ascii	"g_refNew\000"
 34795      664E6577 
 34795      00
 34796              	.LASF123:
 34797 05a7 72696768 		.ascii	"right_left\000"
 34797      745F6C65 
 34797      667400
 34798              	.LASF29:
 34799 05b2 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 34799      53544F52 
 34799      455F4445 
 34799      4641554C 
 34799      545F5041 
 34800              	.LASF151:
 34801 05cb 656E636F 		.ascii	"encoder_line\000"
 34801      6465725F 
 34801      6C696E65 
 34801      00
 34802              	.LASF278:
 34803 05d8 6E5F696D 		.ascii	"n_imu_str_len\000"
 34803      755F7374 
 34803      725F6C65 
 34803      6E00
 34804              	.LASF281:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 741


 34805 05e6 696D755F 		.ascii	"imu_table_str_len\000"
 34805      7461626C 
 34805      655F7374 
 34805      725F6C65 
 34805      6E00
 34806              	.LASF308:
 34807 05f8 76616C75 		.ascii	"value\000"
 34807      6500
 34808              	.LASF211:
 34809 05fe 666C6167 		.ascii	"flags\000"
 34809      7300
 34810              	.LASF103:
 34811 0604 70726573 		.ascii	"pressure\000"
 34811      73757265 
 34811      00
 34812              	.LASF37:
 34813 060d 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 34813      4745545F 
 34813      41435449 
 34813      56415445 
 34813      00
 34814              	.LASF22:
 34815 061e 63686172 		.ascii	"char\000"
 34815      00
 34816              	.LASF146:
 34817 0623 6D61785F 		.ascii	"max_step_pos\000"
 34817      73746570 
 34817      5F706F73 
 34817      00
 34818              	.LASF414:
 34819 0630 675F696D 		.ascii	"g_imu\000"
 34819      7500
 34820              	.LASF379:
 34821 0636 675F7265 		.ascii	"g_ref_vibrotactile\000"
 34821      665F7669 
 34821      62726F74 
 34821      61637469 
 34821      6C6500
 34822              	.LASF365:
 34823 0649 76616C76 		.ascii	"valve_command\000"
 34823      655F636F 
 34823      6D6D616E 
 34823      6400
 34824              	.LASF362:
 34825 0657 70726573 		.ascii	"pressure_reference\000"
 34825      73757265 
 34825      5F726566 
 34825      6572656E 
 34825      636500
 34826              	.LASF314:
 34827 066a 7265745F 		.ascii	"ret_val\000"
 34827      76616C00 
 34828              	.LASF262:
 34829 0672 6D656E75 		.ascii	"menu_idx\000"
 34829      5F696478 
 34829      00
 34830              	.LASF270:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 742


 34831 067b 73746172 		.ascii	"start_byte\000"
 34831      745F6279 
 34831      746500
 34832              	.LASF268:
 34833 0686 6E756D5F 		.ascii	"num_mag_cal_params\000"
 34833      6D61675F 
 34833      63616C5F 
 34833      70617261 
 34833      6D7300
 34834              	.LASF152:
 34835 0699 70776D5F 		.ascii	"pwm_rate_limiter\000"
 34835      72617465 
 34835      5F6C696D 
 34835      69746572 
 34835      00
 34836              	.LASF132:
 34837 06aa 6B5F645F 		.ascii	"k_d_c\000"
 34837      6300
 34838              	.LASF102:
 34839 06b0 73745F66 		.ascii	"st_fb_meas\000"
 34839      625F6D65 
 34839      617300
 34840              	.LASF225:
 34841 06bb 7061636B 		.ascii	"packet_string\000"
 34841      65745F73 
 34841      7472696E 
 34841      6700
 34842              	.LASF157:
 34843 06c9 6D5F6D75 		.ascii	"m_mult\000"
 34843      6C7400
 34844              	.LASF131:
 34845 06d0 6B5F695F 		.ascii	"k_i_c\000"
 34845      6300
 34846              	.LASF311:
 34847 06d6 64697370 		.ascii	"displacement\000"
 34847      6C616365 
 34847      6D656E74 
 34847      00
 34848              	.LASF305:
 34849 06e3 64617461 		.ascii	"data_length\000"
 34849      5F6C656E 
 34849      67746800 
 34850              	.LASF144:
 34851 06ef 706F735F 		.ascii	"pos_lim_sup\000"
 34851      6C696D5F 
 34851      73757000 
 34852              	.LASF289:
 34853 06fb 5230315F 		.ascii	"R01_str\000"
 34853      73747200 
 34854              	.LASF165:
 34855 0703 656D675F 		.ascii	"emg_speed\000"
 34855      73706565 
 34855      6400
 34856              	.LASF184:
 34857 070d 72657374 		.ascii	"rest_vel\000"
 34857      5F76656C 
 34857      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 743


 34858              	.LASF238:
 34859 0716 7061636B 		.ascii	"packet_data\000"
 34859      65745F64 
 34859      61746100 
 34860              	.LASF120:
 34861 0722 73745F64 		.ascii	"st_device\000"
 34861      65766963 
 34861      6500
 34862              	.LASF406:
 34863 072c 7046696C 		.ascii	"pFile\000"
 34863      6500
 34864              	.LASF176:
 34865 0732 4144435F 		.ascii	"ADC_conf\000"
 34865      636F6E66 
 34865      00
 34866              	.LASF302:
 34867 073b 636F6D6D 		.ascii	"commWrite\000"
 34867      57726974 
 34867      6500
 34868              	.LASF377:
 34869 0745 64656163 		.ascii	"deactivate_slaves\000"
 34869      74697661 
 34869      74655F73 
 34869      6C617665 
 34869      7300
 34870              	.LASF313:
 34871 0757 70616765 		.ascii	"pages\000"
 34871      7300
 34872              	.LASF317:
 34873 075d 6D656D49 		.ascii	"memInit\000"
 34873      6E697400 
 34874              	.LASF199:
 34875 0765 73745F72 		.ascii	"st_ref_vibrotactile\000"
 34875      65665F76 
 34875      6962726F 
 34875      74616374 
 34875      696C6500 
 34876              	.LASF134:
 34877 0779 6B5F695F 		.ascii	"k_i_dl\000"
 34877      646C00
 34878              	.LASF38:
 34879 0780 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 34879      5345545F 
 34879      494E5055 
 34879      545300
 34880              	.LASF105:
 34881 078f 62756666 		.ascii	"buffer\000"
 34881      657200
 34882              	.LASF136:
 34883 0796 6B5F705F 		.ascii	"k_p_c_dl\000"
 34883      635F646C 
 34883      00
 34884              	.LASF322:
 34885 079f 636D645F 		.ascii	"cmd_get_measurements\000"
 34885      6765745F 
 34885      6D656173 
 34885      7572656D 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 744


 34885      656E7473 
 34886              	.LASF220:
 34887 07b4 73706565 		.ascii	"speed\000"
 34887      6400
 34888              	.LASF224:
 34889 07ba 72785F63 		.ascii	"rx_cmd\000"
 34889      6D6400
 34890              	.LASF90:
 34891 07c1 54595045 		.ascii	"TYPE_DOUBLE\000"
 34891      5F444F55 
 34891      424C4500 
 34892              	.LASF374:
 34893 07cd 736C6176 		.ascii	"slave_motor_idx\000"
 34893      655F6D6F 
 34893      746F725F 
 34893      69647800 
 34894              	.LASF383:
 34895 07dd 675F6D65 		.ascii	"g_meas\000"
 34895      617300
 34896              	.LASF327:
 34897 07e4 6C617374 		.ascii	"last_aux_int16\000"
 34897      5F617578 
 34897      5F696E74 
 34897      313600
 34898              	.LASF79:
 34899 07f3 41434B5F 		.ascii	"ACK_ERROR\000"
 34899      4552524F 
 34899      5200
 34900              	.LASF403:
 34901 07fd 64617461 		.ascii	"data_encoder_raw\000"
 34901      5F656E63 
 34901      6F646572 
 34901      5F726177 
 34901      00
 34902              	.LASF62:
 34903 080e 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 34903      545F4D4F 
 34903      44455F45 
 34903      58544552 
 34903      4E414C00 
 34904              	.LASF253:
 34905 0822 696E6465 		.ascii	"index\000"
 34905      7800
 34906              	.LASF195:
 34907 0828 6D617869 		.ascii	"maximum_pressure_kPa\000"
 34907      6D756D5F 
 34907      70726573 
 34907      73757265 
 34907      5F6B5061 
 34908              	.LASF185:
 34909 083d 72657374 		.ascii	"rest_position_flag\000"
 34909      5F706F73 
 34909      6974696F 
 34909      6E5F666C 
 34909      616700
 34910              	.LASF187:
 34911 0850 6A6F7973 		.ascii	"joystick_closure_speed\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 745


 34911      7469636B 
 34911      5F636C6F 
 34911      73757265 
 34911      5F737065 
 34912              	.LASF357:
 34913 0867 66696C65 		.ascii	"filename_length\000"
 34913      6E616D65 
 34913      5F6C656E 
 34913      67746800 
 34914              	.LASF137:
 34915 0877 6B5F695F 		.ascii	"k_i_c_dl\000"
 34915      635F646C 
 34915      00
 34916              	.LASF339:
 34917 0880 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 34917      52656164 
 34917      52657343 
 34917      75727246 
 34917      726F6D53 
 34918              	.LASF332:
 34919 0896 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 34919      6765745F 
 34919      63757272 
 34919      656E7473 
 34919      5F666F72 
 34920              	.LASF273:
 34921 08b0 6D61675F 		.ascii	"mag_param_str\000"
 34921      70617261 
 34921      6D5F7374 
 34921      7200
 34922              	.LASF400:
 34923 08be 72657365 		.ascii	"reset_PSoC_flag\000"
 34923      745F5053 
 34923      6F435F66 
 34923      6C616700 
 34924              	.LASF373:
 34925 08ce 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 34925      5F616374 
 34925      5F777269 
 34925      73745F63 
 34925      6F6E7472 
 34926              	.LASF91:
 34927 08e5 54595045 		.ascii	"TYPE_STRING\000"
 34927      5F535452 
 34927      494E4700 
 34928              	.LASF74:
 34929 08f1 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 34929      5F414E44 
 34929      5F504F53 
 34929      5F434F4E 
 34929      54524F4C 
 34930              	.LASF28:
 34931 0906 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 34931      53544F52 
 34931      455F5041 
 34931      52414D53 
 34931      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 746


 34932              	.LASF235:
 34933 0917 50415241 		.ascii	"PARAMS_STR\000"
 34933      4D535F53 
 34933      545200
 34934              	.LASF218:
 34935 0922 656E6162 		.ascii	"enabled\000"
 34935      6C656400 
 34936              	.LASF7:
 34937 092a 6C6F6E67 		.ascii	"long unsigned int\000"
 34937      20756E73 
 34937      69676E65 
 34937      6420696E 
 34937      7400
 34938              	.LASF32:
 34939 093c 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 34939      424F4F54 
 34939      4C4F4144 
 34939      455200
 34940              	.LASF189:
 34941 094b 6A6F7973 		.ascii	"joystick_gains\000"
 34941      7469636B 
 34941      5F676169 
 34941      6E7300
 34942              	.LASF98:
 34943 095a 686F6C64 		.ascii	"hold_curr\000"
 34943      5F637572 
 34943      7200
 34944              	.LASF68:
 34945 0964 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 34945      545F4D4F 
 34945      44455F4A 
 34945      4F595354 
 34945      49434B00 
 34946              	.LASF115:
 34947 0978 746F7461 		.ascii	"total_time_rest\000"
 34947      6C5F7469 
 34947      6D655F72 
 34947      65737400 
 34948              	.LASF334:
 34949 0988 636D645F 		.ascii	"cmd_get_vibrotactile_inputs\000"
 34949      6765745F 
 34949      76696272 
 34949      6F746163 
 34949      74696C65 
 34950              	.LASF227:
 34951 09a4 7374725F 		.ascii	"str_sd_data\000"
 34951      73645F64 
 34951      61746100 
 34952              	.LASF139:
 34953 09b0 61637469 		.ascii	"activ\000"
 34953      7600
 34954              	.LASF237:
 34955 09b6 4D454E55 		.ascii	"MENU_STR\000"
 34955      5F535452 
 34955      00
 34956              	.LASF156:
 34957 09bf 6D5F6F66 		.ascii	"m_off\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 747


 34957      6600
 34958              	.LASF80:
 34959 09c5 41434B5F 		.ascii	"ACK_OK\000"
 34959      4F4B00
 34960              	.LASF82:
 34961 09cc 54595045 		.ascii	"TYPE_FLAG\000"
 34961      5F464C41 
 34961      4700
 34962              	.LASF215:
 34963 09d6 71756174 		.ascii	"quat_value\000"
 34963      5F76616C 
 34963      756500
 34964              	.LASF239:
 34965 09e1 7061636B 		.ascii	"packet_length\000"
 34965      65745F6C 
 34965      656E6774 
 34965      6800
 34966              	.LASF182:
 34967 09ef 72657374 		.ascii	"rest_pos\000"
 34967      5F706F73 
 34967      00
 34968              	.LASF93:
 34969 09f8 63757272 		.ascii	"curr\000"
 34969      00
 34970              	.LASF149:
 34971 09fd 696E7075 		.ascii	"input_mode\000"
 34971      745F6D6F 
 34971      646500
 34972              	.LASF72:
 34973 0a08 434F4E54 		.ascii	"CONTROL_PWM\000"
 34973      524F4C5F 
 34973      50574D00 
 34974              	.LASF43:
 34975 0a14 434D445F 		.ascii	"CMD_GET_EMG\000"
 34975      4745545F 
 34975      454D4700 
 34976              	.LASF318:
 34977 0a20 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 34977      6E69745F 
 34977      536F6674 
 34977      48616E64 
 34977      50726F00 
 34978              	.LASF31:
 34979 0a34 434D445F 		.ascii	"CMD_GET_INFO\000"
 34979      4745545F 
 34979      494E464F 
 34979      00
 34980              	.LASF266:
 34981 0a41 6765745F 		.ascii	"get_IMU_param_list\000"
 34981      494D555F 
 34981      70617261 
 34981      6D5F6C69 
 34981      737400
 34982              	.LASF197:
 34983 0a54 76696272 		.ascii	"vibrotactile_feedback_active\000"
 34983      6F746163 
 34983      74696C65 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 748


 34983      5F666565 
 34983      64626163 
 34984              	.LASF351:
 34985 0a71 73696E67 		.ascii	"single_packet\000"
 34985      6C655F70 
 34985      61636B65 
 34985      7400
 34986              	.LASF269:
 34987 0a7f 66697273 		.ascii	"first_imu_parameter\000"
 34987      745F696D 
 34987      755F7061 
 34987      72616D65 
 34987      74657200 
 34988              	.LASF42:
 34989 0a93 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 34989      4745545F 
 34989      43555252 
 34989      5F414E44 
 34989      5F4D4541 
 34990              	.LASF422:
 34991 0aa9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 34991      43313120 
 34991      352E342E 
 34991      31203230 
 34991      31363036 
 34992 0adc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 34992      20726576 
 34992      6973696F 
 34992      6E203233 
 34992      37373135 
 34993 0b0f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 34993      66756E63 
 34993      74696F6E 
 34993      2D736563 
 34993      74696F6E 
 34994              	.LASF95:
 34995 0b37 73745F72 		.ascii	"st_ref\000"
 34995      656600
 34996              	.LASF325:
 34997 0b3e 636D645F 		.ascii	"cmd_get_joystick\000"
 34997      6765745F 
 34997      6A6F7973 
 34997      7469636B 
 34997      00
 34998              	.LASF47:
 34999 0b4f 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 34999      5345545F 
 34999      43554646 
 34999      5F494E50 
 34999      55545300 
 35000              	.LASF181:
 35001 0b63 73745F53 		.ascii	"st_SH_spec\000"
 35001      485F7370 
 35001      656300
 35002              	.LASF391:
 35003 0b6e 63616C69 		.ascii	"calib\000"
 35003      6200
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 749


 35004              	.LASF6:
 35005 0b74 5F5F7569 		.ascii	"__uint32_t\000"
 35005      6E743332 
 35005      5F7400
 35006              	.LASF8:
 35007 0b7f 6C6F6E67 		.ascii	"long long int\000"
 35007      206C6F6E 
 35007      6720696E 
 35007      7400
 35008              	.LASF70:
 35009 0b8d 53485F63 		.ascii	"SH_control_mode\000"
 35009      6F6E7472 
 35009      6F6C5F6D 
 35009      6F646500 
 35010              	.LASF360:
 35011 0b9d 76696272 		.ascii	"vibrotactile_control\000"
 35011      6F746163 
 35011      74696C65 
 35011      5F636F6E 
 35011      74726F6C 
 35012              	.LASF84:
 35013 0bb2 54595045 		.ascii	"TYPE_UINT8\000"
 35013      5F55494E 
 35013      543800
 35014              	.LASF331:
 35015 0bbd 636D645F 		.ascii	"cmd_get_currents\000"
 35015      6765745F 
 35015      63757272 
 35015      656E7473 
 35015      00
 35016              	.LASF77:
 35017 0bce 4D41584F 		.ascii	"MAXON_12V\000"
 35017      4E5F3132 
 35017      5600
 35018              	.LASF399:
 35019 0bd8 6368616E 		.ascii	"change_ext_ref_flag\000"
 35019      67655F65 
 35019      78745F72 
 35019      65665F66 
 35019      6C616700 
 35020              	.LASF21:
 35021 0bec 646F7562 		.ascii	"double\000"
 35021      6C6500
 35022              	.LASF58:
 35023 0bf3 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 35023      4745545F 
 35023      53445F53 
 35023      494E474C 
 35023      455F4649 
 35024              	.LASF155:
 35025 0c0a 456E635F 		.ascii	"Enc_raw_read_conf\000"
 35025      7261775F 
 35025      72656164 
 35025      5F636F6E 
 35025      6600
 35026              	.LASF221:
 35027 0c1c 72657065 		.ascii	"repetitions\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 750


 35027      74697469 
 35027      6F6E7300 
 35028              	.LASF145:
 35029 0c28 6D61785F 		.ascii	"max_step_neg\000"
 35029      73746570 
 35029      5F6E6567 
 35029      00
 35030              	.LASF418:
 35031 0c35 656D675F 		.ascii	"emg_history_next_idx\000"
 35031      68697374 
 35031      6F72795F 
 35031      6E657874 
 35031      5F696478 
 35032              	.LASF192:
 35033 0c4a 736C6176 		.ascii	"slave_ID\000"
 35033      655F4944 
 35033      00
 35034              	.LASF397:
 35035 0c53 72657365 		.ascii	"reset_last_value_flag\000"
 35035      745F6C61 
 35035      73745F76 
 35035      616C7565 
 35035      5F666C61 
 35036              	.LASF236:
 35037 0c69 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 35037      4F4D5F50 
 35037      4152414D 
 35037      5F474554 
 35037      00
 35038              	.LASF20:
 35039 0c7a 666C6F61 		.ascii	"float\000"
 35039      7400
 35040              	.LASF171:
 35041 0c80 494D555F 		.ascii	"IMU_conf\000"
 35041      636F6E66 
 35041      00
 35042              	.LASF59:
 35043 0c89 434D445F 		.ascii	"CMD_REMOVE_SD_SINGLE_FILE\000"
 35043      52454D4F 
 35043      56455F53 
 35043      445F5349 
 35043      4E474C45 
 35044              	.LASF363:
 35045 0ca3 6572725F 		.ascii	"err_pressure\000"
 35045      70726573 
 35045      73757265 
 35045      00
 35046              	.LASF254:
 35047 0cb0 50415241 		.ascii	"PARAM_IDX\000"
 35047      4D5F4944 
 35047      5800
 35048              	.LASF99:
 35049 0cba 73745F61 		.ascii	"st_adc_meas\000"
 35049      64635F6D 
 35049      65617300 
 35050              	.LASF250:
 35051 0cc6 6D5F6164 		.ascii	"m_addr\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 751


 35051      647200
 35052              	.LASF390:
 35053 0ccd 635F6D65 		.ascii	"c_mem\000"
 35053      6D00
 35054              	.LASF304:
 35055 0cd3 64617461 		.ascii	"data_array\000"
 35055      5F617272 
 35055      617900
 35056              	.LASF10:
 35057 0cde 756E7369 		.ascii	"unsigned int\000"
 35057      676E6564 
 35057      20696E74 
 35057      00
 35058              	.LASF370:
 35059 0ceb 6572725F 		.ascii	"err_emg_2\000"
 35059      656D675F 
 35059      3200
 35060              	.LASF319:
 35061 0cf5 6D656D49 		.ascii	"memInit_Master\000"
 35061      6E69745F 
 35061      4D617374 
 35061      657200
 35062              	.LASF307:
 35063 0d04 73656E64 		.ascii	"sendAcknowledgment\000"
 35063      41636B6E 
 35063      6F776C65 
 35063      64676D65 
 35063      6E7400
 35064              	.LASF292:
 35065 0d17 70726570 		.ascii	"prepare_SD_legend\000"
 35065      6172655F 
 35065      53445F6C 
 35065      6567656E 
 35065      6400
 35066              	.LASF415:
 35067 0d29 4D616743 		.ascii	"MagCal\000"
 35067      616C00
 35068              	.LASF60:
 35069 0d30 53485F63 		.ascii	"SH_command\000"
 35069      6F6D6D61 
 35069      6E6400
 35070              	.LASF86:
 35071 0d3b 54595045 		.ascii	"TYPE_UINT16\000"
 35071      5F55494E 
 35071      54313600 
 35072              	.LASF205:
 35073 0d47 666C6167 		.ascii	"flag\000"
 35073      00
 35074              	.LASF366:
 35075 0d4c 785F7661 		.ascii	"x_value\000"
 35075      6C756500 
 35076              	.LASF326:
 35077 0d54 636D645F 		.ascii	"cmd_set_inputs\000"
 35077      7365745F 
 35077      696E7075 
 35077      747300
 35078              	.LASF150:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 752


 35079 0d63 636F6E74 		.ascii	"control_mode\000"
 35079      726F6C5F 
 35079      6D6F6465 
 35079      00
 35080              	.LASF345:
 35081 0d70 6F66665F 		.ascii	"off_1\000"
 35081      3100
 35082              	.LASF63:
 35083 0d76 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 35083      545F4D4F 
 35083      44455F45 
 35083      4E434F44 
 35083      45523300 
 35084              	.LASF303:
 35085 0d8a 636F6D6D 		.ascii	"commWriteID\000"
 35085      57726974 
 35085      65494400 
 35086              	.LASF54:
 35087 0d96 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 35087      4745545F 
 35087      454E434F 
 35087      4445525F 
 35087      434F4E46 
 35088              	.LASF168:
 35089 0dab 73745F69 		.ascii	"st_imu\000"
 35089      6D7500
 35090              	.LASF329:
 35091 0db2 636D645F 		.ascii	"cmd_get_activate\000"
 35091      6765745F 
 35091      61637469 
 35091      76617465 
 35091      00
 35092              	.LASF367:
 35093 0dc3 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 35093      61637469 
 35093      76617469 
 35093      6F6E5F76 
 35093      656C6F63 
 35094              	.LASF89:
 35095 0ddf 54595045 		.ascii	"TYPE_FLOAT\000"
 35095      5F464C4F 
 35095      415400
 35096              	.LASF259:
 35097 0dea 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 35097      4F4D5F50 
 35097      4152414D 
 35097      5F534554 
 35097      5F4C4953 
 35098              	.LASF233:
 35099 0e00 4E554D5F 		.ascii	"NUM_STRUCT\000"
 35099      53545255 
 35099      435400
 35100              	.LASF413:
 35101 0e0b 73696E67 		.ascii	"single_imu_size\000"
 35101      6C655F69 
 35101      6D755F73 
 35101      697A6500 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 753


 35102              	.LASF264:
 35103 0e1b 6175785F 		.ascii	"aux_uchar\000"
 35103      75636861 
 35103      7200
 35104              	.LASF290:
 35105 0e25 70726570 		.ascii	"prepare_R01_info\000"
 35105      6172655F 
 35105      5230315F 
 35105      696E666F 
 35105      00
 35106              	.LASF100:
 35107 0e36 6164645F 		.ascii	"add_emg\000"
 35107      656D6700 
 35108              	.LASF85:
 35109 0e3e 54595045 		.ascii	"TYPE_INT16\000"
 35109      5F494E54 
 35109      313600
 35110              	.LASF245:
 35111 0e49 6175785F 		.ascii	"aux_uint16\000"
 35111      75696E74 
 35111      313600
 35112              	.LASF163:
 35113 0e54 656D675F 		.ascii	"emg_threshold\000"
 35113      74687265 
 35113      73686F6C 
 35113      6400
 35114              	.LASF46:
 35115 0e62 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 35115      4745545F 
 35115      43555252 
 35115      5F444946 
 35115      4600
 35116              	.LASF333:
 35117 0e74 6D656D49 		.ascii	"memInit_AirChambers_Vibrotactile_Fb\000"
 35117      6E69745F 
 35117      41697243 
 35117      68616D62 
 35117      6572735F 
 35118              	.LASF160:
 35119 0e98 6D6F746F 		.ascii	"motor_handle_ratio\000"
 35119      725F6861 
 35119      6E646C65 
 35119      5F726174 
 35119      696F00
 35120              	.LASF111:
 35121 0eab 63757272 		.ascii	"current_hist\000"
 35121      656E745F 
 35121      68697374 
 35121      00
 35122              	.LASF73:
 35123 0eb8 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 35123      524F4C5F 
 35123      43555252 
 35123      454E5400 
 35124              	.LASF24:
 35125 0ec8 6C6F6E67 		.ascii	"long double\000"
 35125      20646F75 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 754


 35125      626C6500 
 35126              	.LASF88:
 35127 0ed4 54595045 		.ascii	"TYPE_UINT32\000"
 35127      5F55494E 
 35127      54333200 
 35128              	.LASF193:
 35129 0ee0 73745F46 		.ascii	"st_FB_spec\000"
 35129      425F7370 
 35129      656300
 35130              	.LASF230:
 35131 0eeb 5641525F 		.ascii	"VAR_P\000"
 35131      5000
 35132              	.LASF258:
 35133 0ef1 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 35133      4F4D5F50 
 35133      4152414D 
 35133      5F474554 
 35133      5F4C4953 
 35134              	.LASF118:
 35135 0f07 6D6F7469 		.ascii	"motion_counter\000"
 35135      6F6E5F63 
 35135      6F756E74 
 35135      657200
 35136              	.LASF306:
 35137 0f16 63686563 		.ascii	"checksum\000"
 35137      6B73756D 
 35137      00
 35138              	.LASF382:
 35139 0f1f 675F7265 		.ascii	"g_refOld\000"
 35139      664F6C64 
 35139      00
 35140              	.LASF35:
 35141 0f28 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 35141      48414E44 
 35141      5F43414C 
 35141      49425241 
 35141      544500
 35142              	.LASF213:
 35143 0f3b 6779726F 		.ascii	"gyro_value\000"
 35143      5F76616C 
 35143      756500
 35144              	.LASF173:
 35145 0f46 63757272 		.ascii	"curr_time\000"
 35145      5F74696D 
 35145      6500
 35146              	.LASF158:
 35147 0f50 646F7562 		.ascii	"double_encoder_on_off\000"
 35147      6C655F65 
 35147      6E636F64 
 35147      65725F6F 
 35147      6E5F6F66 
 35148              	.LASF375:
 35149 0f66 64726976 		.ascii	"drive_slave\000"
 35149      655F736C 
 35149      61766500 
 35150              	.LASF170:
 35151 0f72 5350495F 		.ascii	"SPI_read_delay\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 755


 35151      72656164 
 35151      5F64656C 
 35151      617900
 35152              	.LASF78:
 35153 0f81 61636B6E 		.ascii	"acknowledgment_values\000"
 35153      6F776C65 
 35153      64676D65 
 35153      6E745F76 
 35153      616C7565 
 35154              	.LASF248:
 35155 0f97 4D4F544F 		.ascii	"MOTOR_IDX\000"
 35155      525F4944 
 35155      5800
 35156              	.LASF316:
 35157 0fa1 6D656D52 		.ascii	"memRestore\000"
 35157      6573746F 
 35157      726500
 35158              	.LASF271:
 35159 0fac 6E5F696D 		.ascii	"n_imu_str\000"
 35159      755F7374 
 35159      7200
 35160              	.LASF285:
 35161 0fb6 696E666F 		.ascii	"info_string\000"
 35161      5F737472 
 35161      696E6700 
 35162              	.LASF293:
 35163 0fc2 70726570 		.ascii	"prepare_SD_info\000"
 35163      6172655F 
 35163      53445F69 
 35163      6E666F00 
 35164              	.LASF368:
 35165 0fd2 66736D5F 		.ascii	"fsm_state\000"
 35165      73746174 
 35165      6500
 35166              	.LASF9:
 35167 0fdc 6C6F6E67 		.ascii	"long long unsigned int\000"
 35167      206C6F6E 
 35167      6720756E 
 35167      7369676E 
 35167      65642069 
 35168              	.LASF87:
 35169 0ff3 54595045 		.ascii	"TYPE_INT32\000"
 35169      5F494E54 
 35169      333200
 35170              	.LASF247:
 35171 0ffe 6175785F 		.ascii	"aux_uint32\000"
 35171      75696E74 
 35171      333200
 35172              	.LASF106:
 35173 1009 6C656E67 		.ascii	"length\000"
 35173      746800
 35174              	.LASF260:
 35175 1010 55534552 		.ascii	"USER_ID_PARAM\000"
 35175      5F49445F 
 35175      50415241 
 35175      4D00
 35176              	.LASF210:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 756


 35177 101e 73745F69 		.ascii	"st_imu_data\000"
 35177      6D755F64 
 35177      61746100 
 35178              	.LASF214:
 35179 102a 6D61675F 		.ascii	"mag_value\000"
 35179      76616C75 
 35179      6500
 35180              	.LASF94:
 35181 1034 6F6E6F66 		.ascii	"onoff\000"
 35181      6600
 35182              	.LASF45:
 35183 103a 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 35183      4745545F 
 35183      41434345 
 35183      4C00
 35184              	.LASF323:
 35185 1048 636D645F 		.ascii	"cmd_get_velocities\000"
 35185      6765745F 
 35185      76656C6F 
 35185      63697469 
 35185      657300
 35186              	.LASF315:
 35187 105b 6D656D52 		.ascii	"memRecall\000"
 35187      6563616C 
 35187      6C00
 35188              	.LASF393:
 35189 1065 74696D65 		.ascii	"timer_value0\000"
 35189      725F7661 
 35189      6C756530 
 35189      00
 35190              	.LASF50:
 35191 1072 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 35191      5345545F 
 35191      42415544 
 35191      52415445 
 35191      00
 35192              	.LASF130:
 35193 1083 6B5F705F 		.ascii	"k_p_c\000"
 35193      6300
 35194              	.LASF275:
 35195 1089 696D755F 		.ascii	"imu_table_str\000"
 35195      7461626C 
 35195      655F7374 
 35195      7200
 35196              	.LASF394:
 35197 1097 6465765F 		.ascii	"dev_tension\000"
 35197      74656E73 
 35197      696F6E00 
 35198              	.LASF141:
 35199 10a3 6D6F746F 		.ascii	"motor_driver_type\000"
 35199      725F6472 
 35199      69766572 
 35199      5F747970 
 35199      6500
 35200              	.LASF346:
 35201 10b5 6D756C74 		.ascii	"mult_1\000"
 35201      5F3100
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 757


 35202              	.LASF23:
 35203 10bc 72656738 		.ascii	"reg8\000"
 35203      00
 35204              	.LASF196:
 35205 10c1 70726F70 		.ascii	"prop_err_fb_gain\000"
 35205      5F657272 
 35205      5F66625F 
 35205      6761696E 
 35205      00
 35206              	.LASF300:
 35207 10d2 636F6D6D 		.ascii	"commWrite_old_id\000"
 35207      57726974 
 35207      655F6F6C 
 35207      645F6964 
 35207      00
 35208              	.LASF252:
 35209 10e3 6D616E61 		.ascii	"manage_param_list\000"
 35209      67655F70 
 35209      6172616D 
 35209      5F6C6973 
 35209      7400
 35210              	.LASF30:
 35211 10f5 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 35211      52455354 
 35211      4F52455F 
 35211      50415241 
 35211      4D5300
 35212              	.LASF407:
 35213 1108 73644669 		.ascii	"sdFile\000"
 35213      6C6500
 35214              	.LASF291:
 35215 110f 70726570 		.ascii	"prepare_SD_param_info\000"
 35215      6172655F 
 35215      53445F70 
 35215      6172616D 
 35215      5F696E66 
 35216              	.LASF340:
 35217 1125 63757272 		.ascii	"curr_diff\000"
 35217      5F646966 
 35217      6600
 35218              	.LASF287:
 35219 112f 70726570 		.ascii	"prepare_counter_info\000"
 35219      6172655F 
 35219      636F756E 
 35219      7465725F 
 35219      696E666F 
 35220              	.LASF294:
 35221 1144 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 35221      6172655F 
 35221      53445F45 
 35221      4D475F48 
 35221      6973746F 
 35222              	.LASF301:
 35223 1162 6F6C645F 		.ascii	"old_id\000"
 35223      696400
 35224              	.LASF425:
 35225 1169 5F5F5245 		.ascii	"__REV16\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 758


 35225      56313600 
 35226              	.LASF404:
 35227 1171 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 35227      636F6465 
 35227      725F4C69 
 35227      6E655F43 
 35227      6F6E6E65 
 35228              	.LASF128:
 35229 118a 6465765F 		.ascii	"dev_type\000"
 35229      74797065 
 35229      00
 35230              	.LASF178:
 35231 1193 73745F75 		.ascii	"st_user\000"
 35231      73657200 
 35232              	.LASF330:
 35233 119b 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 35233      6765745F 
 35233      63757272 
 35233      5F616E64 
 35233      5F6D6561 
 35234              	.LASF161:
 35235 11b1 67656172 		.ascii	"gears_params\000"
 35235      735F7061 
 35235      72616D73 
 35235      00
 35236              	.LASF172:
 35237 11be 73745F65 		.ascii	"st_expansion\000"
 35237      7870616E 
 35237      73696F6E 
 35237      00
 35238              	.LASF166:
 35239 11cb 656D675F 		.ascii	"emg_calibration_flag\000"
 35239      63616C69 
 35239      62726174 
 35239      696F6E5F 
 35239      666C6167 
 35240              	.LASF96:
 35241 11e0 73745F6D 		.ascii	"st_meas\000"
 35241      65617300 
 35242              	.LASF57:
 35243 11e8 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 35243      4745545F 
 35243      4144435F 
 35243      52415700 
 35244              	.LASF188:
 35245 11f8 6A6F7973 		.ascii	"joystick_threshold\000"
 35245      7469636B 
 35245      5F746872 
 35245      6573686F 
 35245      6C6400
 35246              	.LASF76:
 35247 120b 4D41584F 		.ascii	"MAXON_24V\000"
 35247      4E5F3234 
 35247      5600
 35248              	.LASF69:
 35249 1215 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 35249      545F4D4F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 759


 35249      44455F45 
 35249      4D475F50 
 35249      524F504F 
 35250              	.LASF53:
 35251 1234 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 35251      4745545F 
 35251      494D555F 
 35251      50415241 
 35251      4D00
 35252              	.LASF387:
 35253 1246 675F6662 		.ascii	"g_fb_meas\000"
 35253      5F6D6561 
 35253      7300
 35254              	.LASF55:
 35255 1250 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 35255      4745545F 
 35255      454E434F 
 35255      4445525F 
 35255      52415700 
 35256              	.LASF344:
 35257 1264 636D645F 		.ascii	"cmd_store_params\000"
 35257      73746F72 
 35257      655F7061 
 35257      72616D73 
 35257      00
 35258              	.LASF389:
 35259 1275 675F6D65 		.ascii	"g_mem\000"
 35259      6D00
 35260              	.LASF40:
 35261 127b 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 35261      4745545F 
 35261      4D454153 
 35261      5552454D 
 35261      454E5453 
 35262              	.LASF198:
 35263 1290 61697263 		.ascii	"airchamber_feedback_active\000"
 35263      68616D62 
 35263      65725F66 
 35263      65656462 
 35263      61636B5F 
 35264              	.LASF386:
 35265 12ab 675F6164 		.ascii	"g_adc_measOld\000"
 35265      635F6D65 
 35265      61734F6C 
 35265      6400
 35266              	.LASF353:
 35267 12b9 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 35267      6765745F 
 35267      656E636F 
 35267      6465725F 
 35267      72617700 
 35268              	.LASF13:
 35269 12cd 75696E74 		.ascii	"uint8\000"
 35269      3800
 35270              	.LASF222:
 35271 12d3 636F6D6D 		.ascii	"commProcess\000"
 35271      50726F63 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 760


 35271      65737300 
 35272              	.LASF186:
 35273 12df 73745F4A 		.ascii	"st_JOY_spec\000"
 35273      4F595F73 
 35273      70656300 
 35274              	.LASF2:
 35275 12eb 73686F72 		.ascii	"short int\000"
 35275      7420696E 
 35275      7400
 35276              	.LASF279:
 35277 12f5 6964735F 		.ascii	"ids_str_len\000"
 35277      7374725F 
 35277      6C656E00 
 35278              	.LASF135:
 35279 1301 6B5F645F 		.ascii	"k_d_dl\000"
 35279      646C00
 35280              	.LASF240:
 35281 1308 6964785F 		.ascii	"idx_menu\000"
 35281      6D656E75 
 35281      00
 35282              	.LASF101:
 35283 1311 6A6F7973 		.ascii	"joystick\000"
 35283      7469636B 
 35283      00
 35284              	.LASF207:
 35285 131a 6D6F746F 		.ascii	"motor\000"
 35285      7200
 35286              	.LASF410:
 35287 1320 4E5F494D 		.ascii	"N_IMU_Connected\000"
 35287      555F436F 
 35287      6E6E6563 
 35287      74656400 
 35288              	.LASF39:
 35289 1330 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 35289      4745545F 
 35289      494E5055 
 35289      545300
 35290              	.LASF121:
 35291 133f 68775F6D 		.ascii	"hw_maint_date\000"
 35291      61696E74 
 35291      5F646174 
 35291      6500
 35292              	.LASF272:
 35293 134d 6964735F 		.ascii	"ids_str\000"
 35293      73747200 
 35294              	.LASF56:
 35295 1355 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 35295      4745545F 
 35295      4144435F 
 35295      434F4E46 
 35295      00
 35296              	.LASF27:
 35297 1366 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 35297      5345545F 
 35297      5A45524F 
 35297      5300
 35298              	.LASF280:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 761


 35299 1374 6D61675F 		.ascii	"mag_param_str_len\000"
 35299      70617261 
 35299      6D5F7374 
 35299      725F6C65 
 35299      6E00
 35300              	.LASF267:
 35301 1386 6E756D5F 		.ascii	"num_imus_id_params\000"
 35301      696D7573 
 35301      5F69645F 
 35301      70617261 
 35301      6D7300
 35302              	.LASF244:
 35303 1399 6175785F 		.ascii	"aux_int16\000"
 35303      696E7431 
 35303      3600
 35304              	.LASF417:
 35305 13a3 656D675F 		.ascii	"emg_history\000"
 35305      68697374 
 35305      6F727900 
 35306              	.LASF421:
 35307 13af 45455052 		.ascii	"EEPROM_ADDR\000"
 35307      4F4D5F41 
 35307      44445200 
 35308              	.LASF122:
 35309 13bb 73746174 		.ascii	"stats_period_begin_date\000"
 35309      735F7065 
 35309      72696F64 
 35309      5F626567 
 35309      696E5F64 
 35310              	.LASF412:
 35311 13d3 696D7573 		.ascii	"imus_data_size\000"
 35311      5F646174 
 35311      615F7369 
 35311      7A6500
 35312              	.LASF378:
 35313 13e2 49544D5F 		.ascii	"ITM_RxBuffer\000"
 35313      52784275 
 35313      66666572 
 35313      00
 35314              	.LASF44:
 35315 13ef 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 35315      4745545F 
 35315      56454C4F 
 35315      43495449 
 35315      455300
 35316              	.LASF396:
 35317 1402 706F775F 		.ascii	"pow_tension\000"
 35317      74656E73 
 35317      696F6E00 
 35318              	.LASF34:
 35319 140e 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 35319      4745545F 
 35319      50415241 
 35319      4D5F4C49 
 35319      535400
 35320              	.LASF81:
 35321 1421 64617461 		.ascii	"data_types\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 762


 35321      5F747970 
 35321      657300
 35322              	.LASF17:
 35323 142c 696E7431 		.ascii	"int16\000"
 35323      3600
 35324              	.LASF174:
 35325 1432 72656164 		.ascii	"read_exp_port_flag\000"
 35325      5F657870 
 35325      5F706F72 
 35325      745F666C 
 35325      616700
 35326              	.LASF167:
 35327 1445 73776974 		.ascii	"switch_emg\000"
 35327      63685F65 
 35327      6D6700
 35328              	.LASF140:
 35329 1450 61637469 		.ascii	"activate_pwm_rescaling\000"
 35329      76617465 
 35329      5F70776D 
 35329      5F726573 
 35329      63616C69 
 35330              	.LASF133:
 35331 1467 6B5F705F 		.ascii	"k_p_dl\000"
 35331      646C00
 35332              	.LASF97:
 35333 146e 65737469 		.ascii	"estim_curr\000"
 35333      6D5F6375 
 35333      727200
 35334              	.LASF395:
 35335 1479 6465765F 		.ascii	"dev_pwm_limit\000"
 35335      70776D5F 
 35335      6C696D69 
 35335      7400
 35336              	.LASF175:
 35337 1487 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 35337      5F414443 
 35337      5F73656E 
 35337      736F7273 
 35337      5F706F72 
 35338              	.LASF405:
 35339 14a2 456E636F 		.ascii	"Encoder_Value\000"
 35339      6465725F 
 35339      56616C75 
 35339      6500
 35340              	.LASF352:
 35341 14b0 636D645F 		.ascii	"cmd_get_encoder_map\000"
 35341      6765745F 
 35341      656E636F 
 35341      6465725F 
 35341      6D617000 
 35342              	.LASF127:
 35343 14c4 75736572 		.ascii	"user_id\000"
 35343      5F696400 
 35344              	.LASF12:
 35345 14cc 75696E74 		.ascii	"uint32_t\000"
 35345      33325F74 
 35345      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 763


 35346              	.LASF243:
 35347 14d5 6175785F 		.ascii	"aux_float\000"
 35347      666C6F61 
 35347      7400
 35348              	.LASF411:
 35349 14df 494D555F 		.ascii	"IMU_connected\000"
 35349      636F6E6E 
 35349      65637465 
 35349      6400
 35350              	.LASF234:
 35351 14ed 4E554D5F 		.ascii	"NUM_MENU\000"
 35351      4D454E55 
 35351      00
 35352              	.LASF246:
 35353 14f6 6175785F 		.ascii	"aux_int32\000"
 35353      696E7433 
 35353      3200
 35354              	.LASF126:
 35355 1500 62617564 		.ascii	"baud_rate\000"
 35355      5F726174 
 35355      6500
 35356              	.LASF337:
 35357 150a 745F656E 		.ascii	"t_end\000"
 35357      6400
 35358              	.LASF202:
 35359 1510 66617374 		.ascii	"fast_act_threshold\000"
 35359      5F616374 
 35359      5F746872 
 35359      6573686F 
 35359      6C6400
 35360              	.LASF229:
 35361 1523 696E666F 		.ascii	"info_type\000"
 35361      5F747970 
 35361      6500
 35362              	.LASF52:
 35363 152d 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 35363      4745545F 
 35363      494D555F 
 35363      52454144 
 35363      494E4753 
 35364              	.LASF409:
 35365 1542 73645230 		.ascii	"sdR01File\000"
 35365      3146696C 
 35365      6500
 35366              	.LASF309:
 35367 154c 4C435243 		.ascii	"LCRChecksum\000"
 35367      6865636B 
 35367      73756D00 
 35368              	.LASF349:
 35369 1558 6B5F696D 		.ascii	"k_imu\000"
 35369      7500
 35370              	.LASF3:
 35371 155e 73686F72 		.ascii	"short unsigned int\000"
 35371      7420756E 
 35371      7369676E 
 35371      65642069 
 35371      6E7400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 764


 35372              	.LASF154:
 35373 1571 73745F65 		.ascii	"st_encoder\000"
 35373      6E636F64 
 35373      657200
 35374              	.LASF385:
 35375 157c 675F6164 		.ascii	"g_adc_meas\000"
 35375      635F6D65 
 35375      617300
 35376              	.LASF194:
 35377 1587 6D61785F 		.ascii	"max_residual_current\000"
 35377      72657369 
 35377      6475616C 
 35377      5F637572 
 35377      72656E74 
 35378              	.LASF286:
 35379 159c 454E435F 		.ascii	"ENC_L\000"
 35379      4C00
 35380              	.LASF204:
 35381 15a2 73745F65 		.ascii	"st_eeprom\000"
 35381      6570726F 
 35381      6D00
 35382              	.LASF231:
 35383 15ac 54595045 		.ascii	"TYPES\000"
 35383      5300
 35384              	.LASF380:
 35385 15b2 675F7265 		.ascii	"g_ref\000"
 35385      6600
 35386              	.LASF18:
 35387 15b8 696E7433 		.ascii	"int32\000"
 35387      3200
 35388              	.LASF402:
 35389 15be 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 35389      4F465F41 
 35389      4E414C4F 
 35389      475F494E 
 35389      50555453 
 35390              	.LASF226:
 35391 15d3 696E666F 		.ascii	"infoGet\000"
 35391      47657400 
 35392              	.LASF129:
 35393 15db 73745F6D 		.ascii	"st_motor\000"
 35393      6F746F72 
 35393      00
 35394              	.LASF416:
 35395 15e4 6D617374 		.ascii	"master_mode\000"
 35395      65725F6D 
 35395      6F646500 
 35396              	.LASF92:
 35397 15f0 46535F46 		.ascii	"FS_FILE\000"
 35397      494C4500 
 35398              	.LASF142:
 35399 15f8 706F735F 		.ascii	"pos_lim_flag\000"
 35399      6C696D5F 
 35399      666C6167 
 35399      00
 35400              	.LASF384:
 35401 1605 675F6D65 		.ascii	"g_measOld\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 765


 35401      61734F6C 
 35401      6400
 35402              	.LASF71:
 35403 160f 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 35403      524F4C5F 
 35403      414E474C 
 35403      4500
 35404              	.LASF328:
 35405 161d 636D645F 		.ascii	"cmd_activate\000"
 35405      61637469 
 35405      76617465 
 35405      00
 35406              	.LASF5:
 35407 162a 5F5F696E 		.ascii	"__int32_t\000"
 35407      7433325F 
 35407      7400
 35408              	.LASF256:
 35409 1634 7370695F 		.ascii	"spi_delay_menu\000"
 35409      64656C61 
 35409      795F6D65 
 35409      6E7500
 35410              	.LASF113:
 35411 1643 77697265 		.ascii	"wire_disp\000"
 35411      5F646973 
 35411      7000
 35412              	.LASF164:
 35413 164d 656D675F 		.ascii	"emg_max_value\000"
 35413      6D61785F 
 35413      76616C75 
 35413      6500
 35414              	.LASF261:
 35415 165b 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 35415      4F4D5F50 
 35415      4152414D 
 35415      5F534554 
 35415      00
 35416              	.LASF335:
 35417 166c 636F6D6D 		.ascii	"commReadIMUFromSH\000"
 35417      52656164 
 35417      494D5546 
 35417      726F6D53 
 35417      4800
 35418              	.LASF423:
 35419 167e 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 35419      72635C63 
 35419      6F6D6D61 
 35419      6E645F70 
 35419      726F6365 
 35420              	.LASF148:
 35421 169a 63757272 		.ascii	"current_limit\000"
 35421      656E745F 
 35421      6C696D69 
 35421      7400
 35422              	.LASF61:
 35423 16a8 53485F69 		.ascii	"SH_input_mode\000"
 35423      6E707574 
 35423      5F6D6F64 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc5vWZGV.s 			page 766


 35423      6500
 35424              	.LASF83:
 35425 16b6 54595045 		.ascii	"TYPE_INT8\000"
 35425      5F494E54 
 35425      3800
 35426              	.LASF201:
 35427 16c0 61637469 		.ascii	"activation_mode\000"
 35427      76617469 
 35427      6F6E5F6D 
 35427      6F646500 
 35428              	.LASF299:
 35429 16d0 494D555F 		.ascii	"IMU_reading_info\000"
 35429      72656164 
 35429      696E675F 
 35429      696E666F 
 35429      00
 35430              	.LASF14:
 35431 16e1 75696E74 		.ascii	"uint16\000"
 35431      313600
 35432              	.LASF183:
 35433 16e8 72657374 		.ascii	"rest_delay\000"
 35433      5F64656C 
 35433      617900
 35434              	.LASF242:
 35435 16f3 6175785F 		.ascii	"aux_str\000"
 35435      73747200 
 35436              	.LASF26:
 35437 16fb 434D445F 		.ascii	"CMD_PING\000"
 35437      50494E47 
 35437      00
 35438              	.LASF138:
 35439 1704 6B5F645F 		.ascii	"k_d_c_dl\000"
 35439      635F646C 
 35439      00
 35440              	.LASF219:
 35441 170d 64697265 		.ascii	"direction\000"
 35441      6374696F 
 35441      6E00
 35442              	.LASF424:
 35443 1717 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\Git\\PSoC5\\PSoC5_FW"
 35443      73657273 
 35443      5C6D676E 
 35443      6F63636F 
 35443      5C446F63 
 35444 1744 5F574953 		.ascii	"_WISH_VIBES\\FW_Socket - WISH+Dayton\\WISH_VIBES_So"
 35444      485F5649 
 35444      4245535C 
 35444      46575F53 
 35444      6F636B65 
 35445 1775 636B6574 		.ascii	"cket.cydsn\000"
 35445      2E637964 
 35445      736E00
 35446              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
