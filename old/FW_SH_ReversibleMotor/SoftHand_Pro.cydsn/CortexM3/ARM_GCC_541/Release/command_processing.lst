ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8CB0     		sub	sp, sp, #48
  44              		.cfi_def_cfa_offset 56
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E44B     		ldr	r3, .L53
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e E24B     		ldr	r3, .L53
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c DE48     		ldr	r0, .L53
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 DC4B     		ldr	r3, .L53
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e DA4A     		ldr	r2, .L53
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 D84B     		ldr	r3, .L53
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 61E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 0040 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  78 0044 A82B     		cmp	r3, #168
  79 0046 00F25C82 		bhi	.L52
  80 004a 01A2     		adr	r2, .L6
  81 004c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 0050 79030000 		.word	.L5+1
  85 0054 5B030000 		.word	.L7+1
  86 0058 03050000 		.word	.L52+1
  87 005c 7F030000 		.word	.L8+1
  88 0060 85030000 		.word	.L9+1
  89 0064 A9030000 		.word	.L10+1
  90 0068 43030000 		.word	.L11+1
  91 006c 03050000 		.word	.L52+1
  92 0070 03050000 		.word	.L52+1
  93 0074 DD030000 		.word	.L12+1
  94 0078 C3030000 		.word	.L13+1
  95 007c 03050000 		.word	.L52+1
  96 0080 61030000 		.word	.L14+1
  97 0084 FF030000 		.word	.L15+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 4


  98 0088 03050000 		.word	.L52+1
  99 008c 03050000 		.word	.L52+1
 100 0090 03050000 		.word	.L52+1
 101 0094 03050000 		.word	.L52+1
 102 0098 03050000 		.word	.L52+1
 103 009c 03050000 		.word	.L52+1
 104 00a0 03050000 		.word	.L52+1
 105 00a4 03050000 		.word	.L52+1
 106 00a8 03050000 		.word	.L52+1
 107 00ac 03050000 		.word	.L52+1
 108 00b0 03050000 		.word	.L52+1
 109 00b4 03050000 		.word	.L52+1
 110 00b8 03050000 		.word	.L52+1
 111 00bc 03050000 		.word	.L52+1
 112 00c0 03050000 		.word	.L52+1
 113 00c4 03050000 		.word	.L52+1
 114 00c8 03050000 		.word	.L52+1
 115 00cc 03050000 		.word	.L52+1
 116 00d0 03050000 		.word	.L52+1
 117 00d4 03050000 		.word	.L52+1
 118 00d8 03050000 		.word	.L52+1
 119 00dc 03050000 		.word	.L52+1
 120 00e0 03050000 		.word	.L52+1
 121 00e4 03050000 		.word	.L52+1
 122 00e8 03050000 		.word	.L52+1
 123 00ec 03050000 		.word	.L52+1
 124 00f0 03050000 		.word	.L52+1
 125 00f4 03050000 		.word	.L52+1
 126 00f8 03050000 		.word	.L52+1
 127 00fc 03050000 		.word	.L52+1
 128 0100 03050000 		.word	.L52+1
 129 0104 03050000 		.word	.L52+1
 130 0108 03050000 		.word	.L52+1
 131 010c 03050000 		.word	.L52+1
 132 0110 03050000 		.word	.L52+1
 133 0114 03050000 		.word	.L52+1
 134 0118 03050000 		.word	.L52+1
 135 011c 03050000 		.word	.L52+1
 136 0120 03050000 		.word	.L52+1
 137 0124 03050000 		.word	.L52+1
 138 0128 03050000 		.word	.L52+1
 139 012c 03050000 		.word	.L52+1
 140 0130 03050000 		.word	.L52+1
 141 0134 03050000 		.word	.L52+1
 142 0138 03050000 		.word	.L52+1
 143 013c 03050000 		.word	.L52+1
 144 0140 03050000 		.word	.L52+1
 145 0144 03050000 		.word	.L52+1
 146 0148 03050000 		.word	.L52+1
 147 014c 03050000 		.word	.L52+1
 148 0150 03050000 		.word	.L52+1
 149 0154 03050000 		.word	.L52+1
 150 0158 03050000 		.word	.L52+1
 151 015c 03050000 		.word	.L52+1
 152 0160 03050000 		.word	.L52+1
 153 0164 03050000 		.word	.L52+1
 154 0168 03050000 		.word	.L52+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 5


 155 016c 03050000 		.word	.L52+1
 156 0170 03050000 		.word	.L52+1
 157 0174 03050000 		.word	.L52+1
 158 0178 03050000 		.word	.L52+1
 159 017c 03050000 		.word	.L52+1
 160 0180 03050000 		.word	.L52+1
 161 0184 03050000 		.word	.L52+1
 162 0188 03050000 		.word	.L52+1
 163 018c 03050000 		.word	.L52+1
 164 0190 03050000 		.word	.L52+1
 165 0194 03050000 		.word	.L52+1
 166 0198 03050000 		.word	.L52+1
 167 019c 03050000 		.word	.L52+1
 168 01a0 03050000 		.word	.L52+1
 169 01a4 03050000 		.word	.L52+1
 170 01a8 03050000 		.word	.L52+1
 171 01ac 03050000 		.word	.L52+1
 172 01b0 03050000 		.word	.L52+1
 173 01b4 03050000 		.word	.L52+1
 174 01b8 03050000 		.word	.L52+1
 175 01bc 03050000 		.word	.L52+1
 176 01c0 03050000 		.word	.L52+1
 177 01c4 03050000 		.word	.L52+1
 178 01c8 03050000 		.word	.L52+1
 179 01cc 03050000 		.word	.L52+1
 180 01d0 03050000 		.word	.L52+1
 181 01d4 03050000 		.word	.L52+1
 182 01d8 03050000 		.word	.L52+1
 183 01dc 03050000 		.word	.L52+1
 184 01e0 03050000 		.word	.L52+1
 185 01e4 03050000 		.word	.L52+1
 186 01e8 03050000 		.word	.L52+1
 187 01ec 03050000 		.word	.L52+1
 188 01f0 03050000 		.word	.L52+1
 189 01f4 03050000 		.word	.L52+1
 190 01f8 03050000 		.word	.L52+1
 191 01fc 03050000 		.word	.L52+1
 192 0200 03050000 		.word	.L52+1
 193 0204 03050000 		.word	.L52+1
 194 0208 03050000 		.word	.L52+1
 195 020c 03050000 		.word	.L52+1
 196 0210 03050000 		.word	.L52+1
 197 0214 03050000 		.word	.L52+1
 198 0218 03050000 		.word	.L52+1
 199 021c 03050000 		.word	.L52+1
 200 0220 03050000 		.word	.L52+1
 201 0224 03050000 		.word	.L52+1
 202 0228 03050000 		.word	.L52+1
 203 022c 03050000 		.word	.L52+1
 204 0230 03050000 		.word	.L52+1
 205 0234 03050000 		.word	.L52+1
 206 0238 03050000 		.word	.L52+1
 207 023c 03050000 		.word	.L52+1
 208 0240 03050000 		.word	.L52+1
 209 0244 03050000 		.word	.L52+1
 210 0248 03050000 		.word	.L52+1
 211 024c 03050000 		.word	.L52+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 6


 212 0250 F5020000 		.word	.L16+1
 213 0254 31030000 		.word	.L17+1
 214 0258 FB020000 		.word	.L18+1
 215 025c 3D030000 		.word	.L19+1
 216 0260 01030000 		.word	.L20+1
 217 0264 0D030000 		.word	.L21+1
 218 0268 07030000 		.word	.L22+1
 219 026c 03050000 		.word	.L52+1
 220 0270 2B030000 		.word	.L23+1
 221 0274 19030000 		.word	.L24+1
 222 0278 03050000 		.word	.L52+1
 223 027c 1F030000 		.word	.L25+1
 224 0280 13030000 		.word	.L26+1
 225 0284 03050000 		.word	.L52+1
 226 0288 03050000 		.word	.L52+1
 227 028c 03050000 		.word	.L52+1
 228 0290 37030000 		.word	.L27+1
 229 0294 03050000 		.word	.L52+1
 230 0298 25030000 		.word	.L28+1
 231 029c 03050000 		.word	.L52+1
 232 02a0 03050000 		.word	.L52+1
 233 02a4 03050000 		.word	.L52+1
 234 02a8 03050000 		.word	.L52+1
 235 02ac 03050000 		.word	.L52+1
 236 02b0 03050000 		.word	.L52+1
 237 02b4 03050000 		.word	.L52+1
 238 02b8 03050000 		.word	.L52+1
 239 02bc 03050000 		.word	.L52+1
 240 02c0 03050000 		.word	.L52+1
 241 02c4 03050000 		.word	.L52+1
 242 02c8 03050000 		.word	.L52+1
 243 02cc 03050000 		.word	.L52+1
 244 02d0 03050000 		.word	.L52+1
 245 02d4 9D040000 		.word	.L29+1
 246 02d8 A3040000 		.word	.L30+1
 247 02dc BB040000 		.word	.L31+1
 248 02e0 C1040000 		.word	.L32+1
 249 02e4 C7040000 		.word	.L33+1
 250 02e8 CD040000 		.word	.L34+1
 251 02ec D3040000 		.word	.L35+1
 252 02f0 EB040000 		.word	.L36+1
 253              		.p2align 1
 254              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 255              		.loc 1 78 0
 256 02f4 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 257              		.loc 1 79 0
 258 02f8 04E1     		b	.L1
 259              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 7


  84:..\src/command_processing.c ****             cmd_set_inputs();
 260              		.loc 1 84 0
 261 02fa FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 262              		.loc 1 85 0
 263 02fe 01E1     		b	.L1
 264              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 265              		.loc 1 90 0
 266 0300 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 267              		.loc 1 91 0
 268 0304 FEE0     		b	.L1
 269              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 270              		.loc 1 96 0
 271 0306 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 272              		.loc 1 97 0
 273 030a FBE0     		b	.L1
 274              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 275              		.loc 1 102 0
 276 030c FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 277              		.loc 1 103 0
 278 0310 F8E0     		b	.L1
 279              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 280              		.loc 1 108 0
 281 0312 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 282              		.loc 1 109 0
 283 0316 F5E0     		b	.L1
 284              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 285              		.loc 1 114 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 8


 286 0318 FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
 287              		.loc 1 115 0
 288 031c F2E0     		b	.L1
 289              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 290              		.loc 1 120 0
 291 031e FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 292              		.loc 1 121 0
 293 0322 EFE0     		b	.L1
 294              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 295              		.loc 1 126 0
 296 0324 FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 297              		.loc 1 127 0
 298 0328 ECE0     		b	.L1
 299              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 300              		.loc 1 132 0
 301 032a FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 302              		.loc 1 133 0
 303 032e E9E0     		b	.L1
 304              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 305              		.loc 1 138 0
 306 0330 FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 307              		.loc 1 139 0
 308 0334 E6E0     		b	.L1
 309              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 310              		.loc 1 144 0
 311 0336 FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 9


 312              		.loc 1 145 0
 313 033a E3E0     		b	.L1
 314              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 315              		.loc 1 150 0
 316 033c FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 317              		.loc 1 151 0
 318 0340 E0E0     		b	.L1
 319              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 320              		.loc 1 156 0
 321 0342 164B     		ldr	r3, .L53+4
 322 0344 1B88     		ldrh	r3, [r3]
 323 0346 BB61     		str	r3, [r7, #24]
 324              	.LBB12:
 325              	.LBB13:
 326              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 10


  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 11


  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 12


 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 13


 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 14


 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 15


 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 16


 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 17


 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 18


 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 19


 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 20


 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 21


 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 22


 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 23


 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 327              		.loc 2 792 0
 328 0348 BB69     		ldr	r3, [r7, #24]
 329              		.syntax unified
 330              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 331 034a 5BBA     		rev16 r3, r3
 332              	@ 0 "" 2
 333              		.thumb
 334              		.syntax unified
 335 034c 7B61     		str	r3, [r7, #20]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 336              		.loc 2 793 0
 337 034e 7B69     		ldr	r3, [r7, #20]
 338              	.LBE13:
 339              	.LBE12:
 340              		.loc 1 156 0
 341 0350 9BB2     		uxth	r3, r3
 342 0352 1846     		mov	r0, r3
 343 0354 FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 344              		.loc 1 157 0
 345 0358 D4E0     		b	.L1
 346              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 347              		.loc 1 162 0
 348 035a FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 349              		.loc 1 163 0
 350 035e D1E0     		b	.L1
 351              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 24


 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 352              		.loc 1 168 0
 353 0360 0E4B     		ldr	r3, .L53+4
 354 0362 1B88     		ldrh	r3, [r3]
 355 0364 BB62     		str	r3, [r7, #40]
 356              	.LBB14:
 357              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 358              		.loc 2 792 0
 359 0366 BB6A     		ldr	r3, [r7, #40]
 360              		.syntax unified
 361              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 362 0368 5BBA     		rev16 r3, r3
 363              	@ 0 "" 2
 364              		.thumb
 365              		.syntax unified
 366 036a 3B61     		str	r3, [r7, #16]
 367              		.loc 2 793 0
 368 036c 3B69     		ldr	r3, [r7, #16]
 369              	.LBE15:
 370              	.LBE14:
 371              		.loc 1 168 0
 372 036e 9BB2     		uxth	r3, r3
 373 0370 1846     		mov	r0, r3
 374 0372 FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 375              		.loc 1 169 0
 376 0376 C5E0     		b	.L1
 377              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 378              		.loc 1 174 0
 379 0378 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 380              		.loc 1 175 0
 381 037c C2E0     		b	.L1
 382              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 383              		.loc 1 180 0
 384 037e FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 385              		.loc 1 181 0
 386 0382 BFE0     		b	.L1
 387              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 388              		.loc 1 186 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 25


 389 0384 3220     		movs	r0, #50
 390 0386 FFF7FEFF 		bl	memStore
 391 038a 0346     		mov	r3, r0
 392 038c 002B     		cmp	r3, #0
 393 038e 07D0     		beq	.L39
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 394              		.loc 1 187 0
 395 0390 0120     		movs	r0, #1
 396 0392 FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 397              		.loc 1 190 0
 398 0396 B5E0     		b	.L1
 399              	.L54:
 400              		.align	2
 401              	.L53:
 402 0398 00000000 		.word	g_rx
 403 039c 01000000 		.word	g_rx+1
 404              	.L39:
 189:..\src/command_processing.c ****             break;
 405              		.loc 1 189 0
 406 03a0 0020     		movs	r0, #0
 407 03a2 FFF7FEFF 		bl	sendAcknowledgment
 408              		.loc 1 190 0
 409 03a6 ADE0     		b	.L1
 410              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 411              		.loc 1 195 0
 412 03a8 FFF7FEFF 		bl	memRestore
 413 03ac 0346     		mov	r3, r0
 414 03ae 002B     		cmp	r3, #0
 415 03b0 03D0     		beq	.L41
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 416              		.loc 1 196 0
 417 03b2 0120     		movs	r0, #1
 418 03b4 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 419              		.loc 1 199 0
 420 03b8 A4E0     		b	.L1
 421              	.L41:
 198:..\src/command_processing.c ****             break;
 422              		.loc 1 198 0
 423 03ba 0020     		movs	r0, #0
 424 03bc FFF7FEFF 		bl	sendAcknowledgment
 425              		.loc 1 199 0
 426 03c0 A0E0     		b	.L1
 427              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 26


 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 204:..\src/command_processing.c ****             if(memInit())
 428              		.loc 1 204 0
 429 03c2 FFF7FEFF 		bl	memInit
 430 03c6 0346     		mov	r3, r0
 431 03c8 002B     		cmp	r3, #0
 432 03ca 03D0     		beq	.L43
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 433              		.loc 1 205 0
 434 03cc 0120     		movs	r0, #1
 435 03ce FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 436              		.loc 1 208 0
 437 03d2 97E0     		b	.L1
 438              	.L43:
 207:..\src/command_processing.c ****             break;
 439              		.loc 1 207 0
 440 03d4 0020     		movs	r0, #0
 441 03d6 FFF7FEFF 		bl	sendAcknowledgment
 442              		.loc 1 208 0
 443 03da 93E0     		b	.L1
 444              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 445              		.loc 1 214 0
 446 03dc 0120     		movs	r0, #1
 447 03de FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 448              		.loc 1 215 0
 449 03e2 4FF47A70 		mov	r0, #1000
 450 03e6 FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 451              		.loc 1 216 0
 452 03ea 0020     		movs	r0, #0
 453 03ec FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 454              		.loc 1 217 0
 455 03f0 4FF47A70 		mov	r0, #1000
 456 03f4 FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 457              		.loc 1 218 0
 458 03f8 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 459              		.loc 1 219 0
 460 03fc 82E0     		b	.L1
 461              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 27


 462              		.loc 1 224 0
 463 03fe 434B     		ldr	r3, .L55
 464 0400 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 465 0402 1B02     		lsls	r3, r3, #8
 466 0404 1AB2     		sxth	r2, r3
 467 0406 414B     		ldr	r3, .L55
 468 0408 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 469 040a 1BB2     		sxth	r3, r3
 470 040c 1343     		orrs	r3, r3, r2
 471 040e 1AB2     		sxth	r2, r3
 472 0410 3F4B     		ldr	r3, .L55+4
 473 0412 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 474              		.loc 1 225 0
 475 0414 3D4B     		ldr	r3, .L55
 476 0416 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 477 0418 1B02     		lsls	r3, r3, #8
 478 041a 1AB2     		sxth	r2, r3
 479 041c 3B4B     		ldr	r3, .L55
 480 041e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 481 0420 1BB2     		sxth	r3, r3
 482 0422 1343     		orrs	r3, r3, r2
 483 0424 1AB2     		sxth	r2, r3
 484 0426 3A4B     		ldr	r3, .L55+4
 485 0428 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 486              		.loc 1 227 0
 487 042a 394B     		ldr	r3, .L55+4
 488 042c B3F90230 		ldrsh	r3, [r3, #2]
 489 0430 B3F1FF3F 		cmp	r3, #-1
 490 0434 0FD1     		bne	.L45
 491              		.loc 1 227 0 is_stmt 0 discriminator 1
 492 0436 364B     		ldr	r3, .L55+4
 493 0438 B3F90430 		ldrsh	r3, [r3, #4]
 494 043c B3F1FF3F 		cmp	r3, #-1
 495 0440 09D1     		bne	.L45
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 496              		.loc 1 228 0 is_stmt 1
 497 0442 334B     		ldr	r3, .L55+4
 498 0444 0022     		movs	r2, #0
 499 0446 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 500              		.loc 1 229 0
 501 0448 314B     		ldr	r3, .L55+4
 502 044a 0022     		movs	r2, #0
 503 044c 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 504              		.loc 1 230 0
 505 044e 304B     		ldr	r3, .L55+4
 506 0450 0022     		movs	r2, #0
 507 0452 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 508              		.loc 1 231 0
 509 0454 56E0     		b	.L1
 510              	.L45:
 232:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 28


 233:..\src/command_processing.c ****             // Speed & repetitions saturations
 234:..\src/command_processing.c ****             if (calib.speed < 0) {
 511              		.loc 1 234 0
 512 0456 2E4B     		ldr	r3, .L55+4
 513 0458 B3F90230 		ldrsh	r3, [r3, #2]
 514 045c 002B     		cmp	r3, #0
 515 045e 03DA     		bge	.L46
 235:..\src/command_processing.c ****                 calib.speed = 0;
 516              		.loc 1 235 0
 517 0460 2B4B     		ldr	r3, .L55+4
 518 0462 0022     		movs	r2, #0
 519 0464 5A80     		strh	r2, [r3, #2]	@ movhi
 520 0466 07E0     		b	.L47
 521              	.L46:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 522              		.loc 1 236 0
 523 0468 294B     		ldr	r3, .L55+4
 524 046a B3F90230 		ldrsh	r3, [r3, #2]
 525 046e C82B     		cmp	r3, #200
 526 0470 02DD     		ble	.L47
 237:..\src/command_processing.c ****                 calib.speed = 200;
 527              		.loc 1 237 0
 528 0472 274B     		ldr	r3, .L55+4
 529 0474 C822     		movs	r2, #200
 530 0476 5A80     		strh	r2, [r3, #2]	@ movhi
 531              	.L47:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 532              		.loc 1 239 0
 533 0478 254B     		ldr	r3, .L55+4
 534 047a B3F90430 		ldrsh	r3, [r3, #4]
 535 047e 002B     		cmp	r3, #0
 536 0480 02DA     		bge	.L48
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 537              		.loc 1 240 0
 538 0482 234B     		ldr	r3, .L55+4
 539 0484 0022     		movs	r2, #0
 540 0486 9A80     		strh	r2, [r3, #4]	@ movhi
 541              	.L48:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 542              		.loc 1 245 0
 543 0488 224B     		ldr	r3, .L55+8
 544 048a 0022     		movs	r2, #0
 545 048c 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 546              		.loc 1 246 0
 547 048e 204B     		ldr	r3, .L55+4
 548 0490 0122     		movs	r2, #1
 549 0492 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 550              		.loc 1 248 0
 551 0494 0120     		movs	r0, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 29


 552 0496 FFF7FEFF 		bl	sendAcknowledgment
 249:..\src/command_processing.c ****             break;
 553              		.loc 1 249 0
 554 049a 33E0     		b	.L1
 555              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 556              		.loc 1 254 0
 557 049c FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 558              		.loc 1 255 0
 559 04a0 30E0     		b	.L1
 560              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 561              		.loc 1 260 0
 562 04a2 1D4B     		ldr	r3, .L55+12
 563 04a4 1B88     		ldrh	r3, [r3]
 564 04a6 7B62     		str	r3, [r7, #36]
 565              	.LBB16:
 566              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 567              		.loc 2 792 0
 568 04a8 7B6A     		ldr	r3, [r7, #36]
 569              		.syntax unified
 570              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 571 04aa 5BBA     		rev16 r3, r3
 572              	@ 0 "" 2
 573              		.thumb
 574              		.syntax unified
 575 04ac FB60     		str	r3, [r7, #12]
 576              		.loc 2 793 0
 577 04ae FB68     		ldr	r3, [r7, #12]
 578              	.LBE17:
 579              	.LBE16:
 580              		.loc 1 260 0
 581 04b0 9BB2     		uxth	r3, r3
 582 04b2 1846     		mov	r0, r3
 583 04b4 FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 584              		.loc 1 261 0
 585 04b8 24E0     		b	.L1
 586              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 587              		.loc 1 266 0
 588 04ba FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 30


 589              		.loc 1 267 0
 590 04be 21E0     		b	.L1
 591              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 592              		.loc 1 272 0
 593 04c0 FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 594              		.loc 1 273 0
 595 04c4 1EE0     		b	.L1
 596              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 597              		.loc 1 278 0
 598 04c6 FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 599              		.loc 1 279 0
 600 04ca 1BE0     		b	.L1
 601              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 602              		.loc 1 284 0
 603 04cc FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 604              		.loc 1 285 0
 605 04d0 18E0     		b	.L1
 606              	.L35:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_SINGLE_FILE
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 290:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 607              		.loc 1 290 0
 608 04d2 114B     		ldr	r3, .L55+12
 609 04d4 1B88     		ldrh	r3, [r3]
 610 04d6 3B62     		str	r3, [r7, #32]
 611              	.LBB18:
 612              	.LBB19:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 613              		.loc 2 792 0
 614 04d8 3B6A     		ldr	r3, [r7, #32]
 615              		.syntax unified
 616              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 617 04da 5BBA     		rev16 r3, r3
 618              	@ 0 "" 2
 619              		.thumb
 620              		.syntax unified
 621 04dc BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 31


 622              		.loc 2 793 0
 623 04de BB68     		ldr	r3, [r7, #8]
 624              	.LBE19:
 625              	.LBE18:
 626              		.loc 1 290 0
 627 04e0 9BB2     		uxth	r3, r3
 628 04e2 1846     		mov	r0, r3
 629 04e4 FFF7FEFF 		bl	cmd_get_SD_file
 291:..\src/command_processing.c ****             break;   
 630              		.loc 1 291 0
 631 04e8 0CE0     		b	.L1
 632              	.L36:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c **** //=====================================================     CMD_REMOVE_SD_SINGLE_FILE
 294:..\src/command_processing.c **** 
 295:..\src/command_processing.c ****         case CMD_REMOVE_SD_SINGLE_FILE:
 296:..\src/command_processing.c ****             cmd_remove_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 633              		.loc 1 296 0
 634 04ea 0B4B     		ldr	r3, .L55+12
 635 04ec 1B88     		ldrh	r3, [r3]
 636 04ee FB61     		str	r3, [r7, #28]
 637              	.LBB20:
 638              	.LBB21:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 639              		.loc 2 792 0
 640 04f0 FB69     		ldr	r3, [r7, #28]
 641              		.syntax unified
 642              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 643 04f2 5BBA     		rev16 r3, r3
 644              	@ 0 "" 2
 645              		.thumb
 646              		.syntax unified
 647 04f4 7B60     		str	r3, [r7, #4]
 648              		.loc 2 793 0
 649 04f6 7B68     		ldr	r3, [r7, #4]
 650              	.LBE21:
 651              	.LBE20:
 652              		.loc 1 296 0
 653 04f8 9BB2     		uxth	r3, r3
 654 04fa 1846     		mov	r0, r3
 655 04fc FFF7FEFF 		bl	cmd_remove_SD_file
 297:..\src/command_processing.c ****             break;               
 656              		.loc 1 297 0
 657 0500 00E0     		b	.L1
 658              	.L52:
 298:..\src/command_processing.c ****             
 299:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 300:..\src/command_processing.c ****         default:
 301:..\src/command_processing.c ****             break;
 659              		.loc 1 301 0
 660 0502 00BF     		nop
 661              	.L1:
 302:..\src/command_processing.c **** 
 303:..\src/command_processing.c ****     }
 304:..\src/command_processing.c **** }  
 662              		.loc 1 304 0
 663 0504 3037     		adds	r7, r7, #48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 32


 664              		.cfi_def_cfa_offset 8
 665 0506 BD46     		mov	sp, r7
 666              		.cfi_def_cfa_register 13
 667              		@ sp needed
 668 0508 80BD     		pop	{r7, pc}
 669              	.L56:
 670 050a 00BF     		.align	2
 671              	.L55:
 672 050c 00000000 		.word	g_rx
 673 0510 00000000 		.word	calib
 674 0514 00000000 		.word	g_refNew
 675 0518 01000000 		.word	g_rx+1
 676              		.cfi_endproc
 677              	.LFE64:
 678              		.size	commProcess, .-commProcess
 679              		.section	.text.infoSend,"ax",%progbits
 680              		.align	2
 681              		.global	infoSend
 682              		.thumb
 683              		.thumb_func
 684              		.type	infoSend, %function
 685              	infoSend:
 686              	.LFB65:
 305:..\src/command_processing.c **** 
 306:..\src/command_processing.c **** //==============================================================================
 307:..\src/command_processing.c **** //                                                                     INFO SEND
 308:..\src/command_processing.c **** //==============================================================================
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c **** void infoSend(void){
 687              		.loc 1 310 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 1504
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691 0000 80B5     		push	{r7, lr}
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 7, -8
 694              		.cfi_offset 14, -4
 695 0002 ADF5BC6D 		sub	sp, sp, #1504
 696              		.cfi_def_cfa_offset 1512
 697 0006 00AF     		add	r7, sp, #0
 698              		.cfi_def_cfa_register 7
 311:..\src/command_processing.c ****     char packet_string[1500];
 312:..\src/command_processing.c ****     
 313:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 699              		.loc 1 313 0
 700 0008 3B1D     		adds	r3, r7, #4
 701 000a 1846     		mov	r0, r3
 702 000c FFF7FEFF 		bl	prepare_generic_info
 314:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 703              		.loc 1 314 0
 704 0010 3B1D     		adds	r3, r7, #4
 705 0012 1846     		mov	r0, r3
 706 0014 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c **** }
 707              		.loc 1 315 0
 708 0018 00BF     		nop
 709 001a 07F5BC67 		add	r7, r7, #1504
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 33


 710              		.cfi_def_cfa_offset 8
 711 001e BD46     		mov	sp, r7
 712              		.cfi_def_cfa_register 13
 713              		@ sp needed
 714 0020 80BD     		pop	{r7, pc}
 715              		.cfi_endproc
 716              	.LFE65:
 717              		.size	infoSend, .-infoSend
 718 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 719              		.align	2
 720              		.global	infoGet
 721              		.thumb
 722              		.thumb_func
 723              		.type	infoGet, %function
 724              	infoGet:
 725              	.LFB66:
 316:..\src/command_processing.c **** 
 317:..\src/command_processing.c **** 
 318:..\src/command_processing.c **** //==============================================================================
 319:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 320:..\src/command_processing.c **** //==============================================================================
 321:..\src/command_processing.c **** 
 322:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 726              		.loc 1 322 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 24008
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 ADF5BB4D 		sub	sp, sp, #23936
 735              		.cfi_def_cfa_offset 23944
 736 0006 92B0     		sub	sp, sp, #72
 737              		.cfi_def_cfa_offset 24016
 738 0008 00AF     		add	r7, sp, #0
 739              		.cfi_def_cfa_register 7
 740 000a 0246     		mov	r2, r0
 741 000c 07F14803 		add	r3, r7, #72
 742 0010 423B     		subs	r3, r3, #66
 743 0012 1A80     		strh	r2, [r3]	@ movhi
 323:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 744              		.loc 1 323 0
 745 0014 07F59C43 		add	r3, r7, #19968
 746 0018 03F12803 		add	r3, r3, #40
 747 001c 0022     		movs	r2, #0
 748 001e 1A60     		str	r2, [r3]
 749 0020 0433     		adds	r3, r3, #4
 750 0022 40F69C72 		movw	r2, #3996
 751 0026 0021     		movs	r1, #0
 752 0028 1846     		mov	r0, r3
 753 002a FFF7FEFF 		bl	memset
 324:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 754              		.loc 1 324 0
 755 002e 07F14803 		add	r3, r7, #72
 756 0032 403B     		subs	r3, r3, #64
 757 0034 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 34


 758 0036 1A60     		str	r2, [r3]
 759 0038 0433     		adds	r3, r3, #4
 760 003a 44F61C62 		movw	r2, #19996
 761 003e 0021     		movs	r1, #0
 762 0040 1846     		mov	r0, r3
 763 0042 FFF7FEFF 		bl	memset
 325:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 326:..\src/command_processing.c **** 
 327:..\src/command_processing.c ****     switch (info_type) {
 764              		.loc 1 327 0
 765 0046 07F14803 		add	r3, r7, #72
 766 004a 423B     		subs	r3, r3, #66
 767 004c 1B88     		ldrh	r3, [r3]
 768 004e 062B     		cmp	r3, #6
 769 0050 7DD8     		bhi	.L69
 770 0052 01A2     		adr	r2, .L61
 771 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 772              		.p2align 2
 773              	.L61:
 774 0058 75000000 		.word	.L60+1
 775 005c 97000000 		.word	.L62+1
 776 0060 B9000000 		.word	.L63+1
 777 0064 E1000000 		.word	.L64+1
 778 0068 03010000 		.word	.L65+1
 779 006c 21010000 		.word	.L66+1
 780 0070 27010000 		.word	.L67+1
 781              		.p2align 1
 782              	.L60:
 328:..\src/command_processing.c ****         case INFO_ALL:
 329:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 783              		.loc 1 329 0
 784 0074 07F59C43 		add	r3, r7, #19968
 785 0078 03F12803 		add	r3, r3, #40
 786 007c 1846     		mov	r0, r3
 787 007e FFF7FEFF 		bl	prepare_generic_info
 330:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 788              		.loc 1 330 0
 789 0082 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 331:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 790              		.loc 1 331 0
 791 0086 07F59C43 		add	r3, r7, #19968
 792 008a 03F12803 		add	r3, r3, #40
 793 008e 1846     		mov	r0, r3
 794 0090 FFF7FEFF 		bl	UART_RS485_PutString
 332:..\src/command_processing.c ****             break;
 795              		.loc 1 332 0
 796 0094 5CE0     		b	.L68
 797              	.L62:
 333:..\src/command_processing.c ****         case CYCLES_INFO:
 334:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 798              		.loc 1 334 0
 799 0096 07F59C43 		add	r3, r7, #19968
 800 009a 03F12803 		add	r3, r3, #40
 801 009e 1846     		mov	r0, r3
 802 00a0 FFF7FEFF 		bl	prepare_counter_info
 335:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 803              		.loc 1 335 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 35


 804 00a4 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 336:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 805              		.loc 1 336 0
 806 00a8 07F59C43 		add	r3, r7, #19968
 807 00ac 03F12803 		add	r3, r3, #40
 808 00b0 1846     		mov	r0, r3
 809 00b2 FFF7FEFF 		bl	UART_RS485_PutString
 337:..\src/command_processing.c ****             break;
 810              		.loc 1 337 0
 811 00b6 4BE0     		b	.L68
 812              	.L63:
 338:..\src/command_processing.c ****         case GET_SD_PARAM:
 339:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 813              		.loc 1 339 0
 814 00b8 07F59C43 		add	r3, r7, #19968
 815 00bc 03F12803 		add	r3, r3, #40
 816 00c0 4FF47A62 		mov	r2, #4000
 817 00c4 1946     		mov	r1, r3
 818 00c6 2548     		ldr	r0, .L70
 819 00c8 FFF7FEFF 		bl	Read_SD_Closed_File
 340:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 820              		.loc 1 340 0
 821 00cc FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 341:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 822              		.loc 1 341 0
 823 00d0 07F59C43 		add	r3, r7, #19968
 824 00d4 03F12803 		add	r3, r3, #40
 825 00d8 1846     		mov	r0, r3
 826 00da FFF7FEFF 		bl	UART_RS485_PutString
 342:..\src/command_processing.c ****             break;
 827              		.loc 1 342 0
 828 00de 37E0     		b	.L68
 829              	.L64:
 343:..\src/command_processing.c ****         case GET_SD_DATA:
 344:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 830              		.loc 1 344 0
 831 00e0 07F14803 		add	r3, r7, #72
 832 00e4 403B     		subs	r3, r3, #64
 833 00e6 44F62061 		movw	r1, #20000
 834 00ea 1846     		mov	r0, r3
 835 00ec FFF7FEFF 		bl	Read_SD_Current_Data
 345:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 836              		.loc 1 345 0
 837 00f0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 346:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 838              		.loc 1 346 0
 839 00f4 07F14803 		add	r3, r7, #72
 840 00f8 403B     		subs	r3, r3, #64
 841 00fa 1846     		mov	r0, r3
 842 00fc FFF7FEFF 		bl	UART_RS485_PutString
 347:..\src/command_processing.c ****             break;
 843              		.loc 1 347 0
 844 0100 26E0     		b	.L68
 845              	.L65:
 348:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 349:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 846              		.loc 1 349 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 36


 847 0102 07F14803 		add	r3, r7, #72
 848 0106 403B     		subs	r3, r3, #64
 849 0108 1846     		mov	r0, r3
 850 010a FFF7FEFF 		bl	Get_SD_FS
 350:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 851              		.loc 1 350 0
 852 010e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 351:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 853              		.loc 1 351 0
 854 0112 07F14803 		add	r3, r7, #72
 855 0116 403B     		subs	r3, r3, #64
 856 0118 1846     		mov	r0, r3
 857 011a FFF7FEFF 		bl	UART_RS485_PutString
 352:..\src/command_processing.c ****             break;
 858              		.loc 1 352 0
 859 011e 17E0     		b	.L68
 860              	.L66:
 353:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 354:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 355:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 861              		.loc 1 355 0
 862 0120 FFF7FEFF 		bl	Read_SD_EMG_History_Data
 356:..\src/command_processing.c ****             break;
 863              		.loc 1 356 0
 864 0124 14E0     		b	.L68
 865              	.L67:
 357:..\src/command_processing.c ****         case GET_SD_R01_SUMM:
 358:..\src/command_processing.c ****             Read_SD_Closed_File(sdR01File, packet_string, sizeof(packet_string));
 866              		.loc 1 358 0
 867 0126 07F59C43 		add	r3, r7, #19968
 868 012a 03F12803 		add	r3, r3, #40
 869 012e 4FF47A62 		mov	r2, #4000
 870 0132 1946     		mov	r1, r3
 871 0134 0A48     		ldr	r0, .L70+4
 872 0136 FFF7FEFF 		bl	Read_SD_Closed_File
 359:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 873              		.loc 1 359 0
 874 013a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 360:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 875              		.loc 1 360 0
 876 013e 07F59C43 		add	r3, r7, #19968
 877 0142 03F12803 		add	r3, r3, #40
 878 0146 1846     		mov	r0, r3
 879 0148 FFF7FEFF 		bl	UART_RS485_PutString
 361:..\src/command_processing.c ****             break;            
 880              		.loc 1 361 0
 881 014c 00E0     		b	.L68
 882              	.L69:
 362:..\src/command_processing.c ****         default:
 363:..\src/command_processing.c ****             break;
 883              		.loc 1 363 0
 884 014e 00BF     		nop
 885              	.L68:
 364:..\src/command_processing.c ****     }
 365:..\src/command_processing.c **** }
 886              		.loc 1 365 0 discriminator 1
 887 0150 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 37


 888 0152 07F5BB47 		add	r7, r7, #23936
 889 0156 4837     		adds	r7, r7, #72
 890              		.cfi_def_cfa_offset 8
 891 0158 BD46     		mov	sp, r7
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 015a 80BD     		pop	{r7, pc}
 895              	.L71:
 896              		.align	2
 897              	.L70:
 898 015c 00000000 		.word	sdParam
 899 0160 00000000 		.word	sdR01File
 900              		.cfi_endproc
 901              	.LFE66:
 902              		.size	infoGet, .-infoGet
 903              		.global	__aeabi_i2f
 904              		.global	__aeabi_fdiv
 905              		.section	.rodata
 906              		.align	2
 907              	.LC88:
 908 0000 20557362 		.ascii	" Usb\000"
 908      00
 909 0005 000000   		.align	2
 910              	.LC89:
 911 0008 2048616E 		.ascii	" Handle\000"
 911      646C6500 
 912              		.align	2
 913              	.LC90:
 914 0010 20454D47 		.ascii	" EMG proportional\000"
 914      2070726F 
 914      706F7274 
 914      696F6E61 
 914      6C00
 915 0022 0000     		.align	2
 916              	.LC91:
 917 0024 20454D47 		.ascii	" EMG integral\000"
 917      20696E74 
 917      65677261 
 917      6C00
 918 0032 0000     		.align	2
 919              	.LC92:
 920 0034 20454D47 		.ascii	" EMG FCFS\000"
 920      20464346 
 920      5300
 921 003e 0000     		.align	2
 922              	.LC93:
 923 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 923      20464346 
 923      53204164 
 923      76616E63 
 923      656400
 924 0053 00       		.align	2
 925              	.LC94:
 926 0054 204A6F79 		.ascii	" Joystick\000"
 926      73746963 
 926      6B00
 927 005e 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 38


 928              	.LC95:
 929 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 929      2070726F 
 929      706F7274 
 929      696F6E61 
 929      6C204E6F 
 930 0082 0000     		.align	2
 931              	.LC96:
 932 0084 20506F73 		.ascii	" Position\000"
 932      6974696F 
 932      6E00
 933 008e 0000     		.align	2
 934              	.LC97:
 935 0090 2050574D 		.ascii	" PWM\000"
 935      00
 936 0095 000000   		.align	2
 937              	.LC98:
 938 0098 20437572 		.ascii	" Current\000"
 938      72656E74 
 938      00
 939 00a1 000000   		.align	2
 940              	.LC99:
 941 00a4 20506F73 		.ascii	" Position and Current\000"
 941      6974696F 
 941      6E20616E 
 941      64204375 
 941      7272656E 
 942 00ba 0000     		.align	2
 943              	.LC100:
 944 00bc 20594553 		.ascii	" YES\000\000"
 944      0000
 945 00c2 0000     		.align	2
 946              	.LC101:
 947 00c4 204E4F00 		.ascii	" NO\000\000"
 947      00
 948 00c9 000000   		.align	2
 949              	.LC102:
 950 00cc 20526967 		.ascii	" Right\000\000"
 950      68740000 
 951              		.align	2
 952              	.LC103:
 953 00d4 204C6566 		.ascii	" Left\000\000"
 953      740000
 954 00db 00       		.align	2
 955              	.LC104:
 956 00dc 204F4646 		.ascii	" OFF\000\000"
 956      0000
 957 00e2 0000     		.align	2
 958              	.LC105:
 959 00e4 204F4E00 		.ascii	" ON\000\000"
 959      00
 960 00e9 000000   		.align	2
 961              	.LC106:
 962 00ec 204E6F6E 		.ascii	" None\000\000"
 962      650000
 963 00f3 00       		.align	2
 964              	.LC107:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 39


 965 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 965      52544320 
 965      626F6172 
 965      640000
 966 0103 00       		.align	2
 967              	.LC108:
 968 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 968      6920626F 
 968      61726420 
 968      5B4E2F41 
 968      5D0000
 969 0117 00       		.align	2
 970              	.LC109:
 971 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 971      6572205B 
 971      4E2F415D 
 971      0000
 972 0126 0000     		.align	2
 973              	.LC110:
 974 0128 204C6F77 		.ascii	" Low\000\000"
 974      0000
 975 012e 0000     		.align	2
 976              	.LC111:
 977 0130 20486967 		.ascii	" High\000\000"
 977      680000
 978 0137 00       		.align	2
 979              	.LC112:
 980 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 980      45524943 
 980      20555345 
 980      520000
 981 0147 00       		.align	2
 982              	.LC113:
 983 0148 204D4152 		.ascii	" MARIA\000\000"
 983      49410000 
 984              		.align	2
 985              	.LC114:
 986 0150 20523031 		.ascii	" R01\000\000"
 986      0000
 987 0156 0000     		.align	2
 988              	.LC115:
 989 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 989      33383837 
 989      20285374 
 989      616E6461 
 989      72642900 
 990 016d 000000   		.align	2
 991              	.LC116:
 992 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 992      35303139 
 992      20284869 
 992      67682070 
 992      6F776572 
 993 0187 00       		.align	2
 994              	.LC117:
 995 0188 20455343 		.ascii	" ESC (Brushless)\000\000"
 995      20284272 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 40


 995      7573686C 
 995      65737329 
 995      0000
 996 019a 0000     		.align	2
 997              	.LC118:
 998 019c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 998      5448414E 
 998      44205052 
 998      4F0000
 999 01ab 00       		.align	2
 1000              	.LC119:
 1001 01ac 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 1001      45524943 
 1001      2032204D 
 1001      4F544F52 
 1001      530000
 1002 01bf 00       		.align	2
 1003              	.LC120:
 1004 01c0 20414952 		.ascii	" AIR CHAMBERS\000\000"
 1004      20434841 
 1004      4D424552 
 1004      530000
 1005 01cf 00       		.align	2
 1006              	.LC121:
 1007 01d0 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 1007      4F424F43 
 1007      4B205752 
 1007      49535400 
 1007      00
 1008 01e1 000000   		.align	2
 1009              	.LC122:
 1010 01e4 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 1010      5448414E 
 1010      44203220 
 1010      4D4F544F 
 1010      52530000 
 1011              		.align	2
 1012              	.LC123:
 1013 01f8 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 1013      743A7379 
 1013      6E322C20 
 1013      536C6F77 
 1013      3A73796E 
 1014 020f 00       		.align	2
 1015              	.LC124:
 1016 0210 20466173 		.ascii	" Fast:wrist,Slow:hand\000\000"
 1016      743A7772 
 1016      6973742C 
 1016      536C6F77 
 1016      3A68616E 
 1017 0227 00       		.align	2
 1018              	.LC125:
 1019 0228 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 1019      773A7379 
 1019      6E322C20 
 1019      46617374 
 1019      3A73796E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 41


 1020 023f 00       		.align	2
 1021              	.LC126:
 1022 0240 20536C6F 		.ascii	" Slow:wrist,Fast:hand\000\000"
 1022      773A7772 
 1022      6973742C 
 1022      46617374 
 1022      3A68616E 
 1023 0257 00       		.align	2
 1024              	.LC127:
 1025 0258 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 1025      73653A43 
 1025      572C204F 
 1025      70656E3A 
 1025      43435700 
 1026 026d 000000   		.align	2
 1027              	.LC128:
 1028 0270 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 1028      73653A43 
 1028      43572C20 
 1028      4F70656E 
 1028      3A435700 
 1029              		.section	.text.get_param_list,"ax",%progbits
 1030              		.align	2
 1031              		.global	get_param_list
 1032              		.thumb
 1033              		.thumb_func
 1034              		.type	get_param_list, %function
 1035              	get_param_list:
 1036              	.LFB67:
 366:..\src/command_processing.c **** 
 367:..\src/command_processing.c **** 
 368:..\src/command_processing.c **** //==============================================================================
 369:..\src/command_processing.c **** //                                                                GET PARAM LIST
 370:..\src/command_processing.c **** //==============================================================================
 371:..\src/command_processing.c **** 
 372:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 373:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 374:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 375:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 1037              		.loc 1 375 0
 1038              		.cfi_startproc
 1039              		@ args = 16, pretend = 0, frame = 3160
 1040              		@ frame_needed = 1, uses_anonymous_args = 0
 1041 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1042              		.cfi_def_cfa_offset 20
 1043              		.cfi_offset 4, -20
 1044              		.cfi_offset 5, -16
 1045              		.cfi_offset 6, -12
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 ADF65C4D 		subw	sp, sp, #3164
 1049              		.cfi_def_cfa_offset 3184
 1050 0006 00AF     		add	r7, sp, #0
 1051              		.cfi_def_cfa_register 7
 1052 0008 07F10C04 		add	r4, r7, #12
 1053 000c 2060     		str	r0, [r4]
 1054 000e 07F10800 		add	r0, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 42


 1055 0012 0160     		str	r1, [r0]
 1056 0014 391D     		adds	r1, r7, #4
 1057 0016 0A60     		str	r2, [r1]
 1058 0018 3A46     		mov	r2, r7
 1059 001a 1360     		str	r3, [r2]
 376:..\src/command_processing.c ****     
 377:..\src/command_processing.c ****     //Package to be sent variables
 378:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1060              		.loc 1 378 0
 1061 001c 07F15803 		add	r3, r7, #88
 1062 0020 0022     		movs	r2, #0
 1063 0022 1A60     		str	r2, [r3]
 1064 0024 0433     		adds	r3, r3, #4
 1065 0026 40F6E632 		movw	r2, #3046
 1066 002a 0021     		movs	r1, #0
 1067 002c 1846     		mov	r0, r3
 1068 002e FFF7FEFF 		bl	memset
 379:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1069              		.loc 1 379 0
 1070 0032 40F6EA33 		movw	r3, #3050
 1071 0036 A7F8503C 		strh	r3, [r7, #3152]	@ movhi
 380:..\src/command_processing.c **** 
 381:..\src/command_processing.c ****     //Auxiliary variables
 382:..\src/command_processing.c ****     uint8 CYDATA i, j;
 383:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1072              		.loc 1 383 0
 1073 003a 0023     		movs	r3, #0
 1074 003c 87F8553C 		strb	r3, [r7, #3157]
 384:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1075              		.loc 1 384 0
 1076 0040 0023     		movs	r3, #0
 1077 0042 87F8543C 		strb	r3, [r7, #3156]
 385:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1078              		.loc 1 385 0
 1079 0046 0023     		movs	r3, #0
 1080 0048 87F8533C 		strb	r3, [r7, #3155]
 386:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 387:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1081              		.loc 1 387 0
 1082 004c 07F12403 		add	r3, r7, #36
 1083 0050 0022     		movs	r2, #0
 1084 0052 1A60     		str	r2, [r3]
 1085 0054 0433     		adds	r3, r3, #4
 1086 0056 2E22     		movs	r2, #46
 1087 0058 0021     		movs	r1, #0
 1088 005a 1846     		mov	r0, r3
 1089 005c FFF7FEFF 		bl	memset
 388:..\src/command_processing.c ****     float aux_float;
 389:..\src/command_processing.c ****     int16 aux_int16;
 390:..\src/command_processing.c ****     uint16 aux_uint16;
 391:..\src/command_processing.c ****     int32 aux_int32;
 392:..\src/command_processing.c ****     uint32 aux_uint32;
 393:..\src/command_processing.c **** 
 394:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1090              		.loc 1 394 0
 1091 0060 0023     		movs	r3, #0
 1092 0062 87F84F3C 		strb	r3, [r7, #3151]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 43


 395:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1093              		.loc 1 395 0
 1094 0066 0123     		movs	r3, #1
 1095 0068 87F84E3C 		strb	r3, [r7, #3150]
 396:..\src/command_processing.c ****   
 397:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1096              		.loc 1 397 0
 1097 006c 07F10C03 		add	r3, r7, #12
 1098 0070 1B68     		ldr	r3, [r3]
 1099 0072 1B68     		ldr	r3, [r3]
 1100 0074 C7F8483C 		str	r3, [r7, #3144]
 398:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1101              		.loc 1 398 0
 1102 0078 D7F8483C 		ldr	r3, [r7, #3144]
 1103 007c C7F8443C 		str	r3, [r7, #3140]
 399:..\src/command_processing.c ****         
 400:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1104              		.loc 1 400 0
 1105 0080 07F15803 		add	r3, r7, #88
 1106 0084 0C22     		movs	r2, #12
 1107 0086 1A70     		strb	r2, [r3]
 401:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1108              		.loc 1 401 0
 1109 0088 07F15803 		add	r3, r7, #88
 1110 008c 2422     		movs	r2, #36
 1111 008e 5A70     		strb	r2, [r3, #1]
 402:..\src/command_processing.c ****     
 403:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1112              		.loc 1 403 0
 1113 0090 0023     		movs	r3, #0
 1114 0092 87F8553C 		strb	r3, [r7, #3157]
 1115 0096 02F0AFB8 		b	.L73
 1116              	.L278:
 404:..\src/command_processing.c ****         
 405:..\src/command_processing.c ****         // Assign m_addr memory address
 406:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1117              		.loc 1 406 0
 1118 009a 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1119 009e 9B00     		lsls	r3, r3, #2
 1120 00a0 07F10C02 		add	r2, r7, #12
 1121 00a4 1268     		ldr	r2, [r2]
 1122 00a6 1344     		add	r3, r3, r2
 1123 00a8 1B68     		ldr	r3, [r3]
 1124 00aa C7F8483C 		str	r3, [r7, #3144]
 407:..\src/command_processing.c ****         
 408:..\src/command_processing.c ****         // Add parameter type and size to packet
 409:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1125              		.loc 1 409 0
 1126 00ae 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1127 00b2 3222     		movs	r2, #50
 1128 00b4 02FB03F3 		mul	r3, r2, r3
 1129 00b8 0233     		adds	r3, r3, #2
 1130 00ba 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 1131 00be 07F10801 		add	r1, r7, #8
 1132 00c2 0968     		ldr	r1, [r1]
 1133 00c4 0A44     		add	r2, r2, r1
 1134 00c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 44


 1135 00c8 07F15802 		add	r2, r7, #88
 1136 00cc D154     		strb	r1, [r2, r3]
 410:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1137              		.loc 1 410 0
 1138 00ce 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1139 00d2 3222     		movs	r2, #50
 1140 00d4 02FB03F3 		mul	r3, r2, r3
 1141 00d8 0333     		adds	r3, r3, #3
 1142 00da 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 1143 00de 391D     		adds	r1, r7, #4
 1144 00e0 0968     		ldr	r1, [r1]
 1145 00e2 0A44     		add	r2, r2, r1
 1146 00e4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1147 00e6 07F15802 		add	r2, r7, #88
 1148 00ea D154     		strb	r1, [r2, r3]
 411:..\src/command_processing.c ****         
 412:..\src/command_processing.c ****         // Find size of data
 413:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1149              		.loc 1 413 0
 1150 00ec 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1151 00f0 07F10802 		add	r2, r7, #8
 1152 00f4 1268     		ldr	r2, [r2]
 1153 00f6 1344     		add	r3, r3, r2
 1154 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1155 00fa 092B     		cmp	r3, #9
 1156 00fc 22D8     		bhi	.L74
 1157 00fe 01A2     		adr	r2, .L76
 1158 0100 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1159              		.p2align 2
 1160              	.L76:
 1161 0104 2D010000 		.word	.L75+1
 1162 0108 2D010000 		.word	.L75+1
 1163 010c 2D010000 		.word	.L75+1
 1164 0110 35010000 		.word	.L77+1
 1165 0114 35010000 		.word	.L77+1
 1166 0118 3D010000 		.word	.L78+1
 1167 011c 3D010000 		.word	.L78+1
 1168 0120 3D010000 		.word	.L78+1
 1169 0124 45010000 		.word	.L74+1
 1170 0128 2D010000 		.word	.L75+1
 1171              		.p2align 1
 1172              	.L75:
 414:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 415:..\src/command_processing.c ****                 sod = 1; break;
 1173              		.loc 1 415 0
 1174 012c 0123     		movs	r3, #1
 1175 012e 87F8533C 		strb	r3, [r7, #3155]
 1176 0132 07E0     		b	.L74
 1177              	.L77:
 416:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 417:..\src/command_processing.c ****                 sod = 2; break;
 1178              		.loc 1 417 0
 1179 0134 0223     		movs	r3, #2
 1180 0136 87F8533C 		strb	r3, [r7, #3155]
 1181 013a 03E0     		b	.L74
 1182              	.L78:
 418:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 45


 419:..\src/command_processing.c ****                 sod = 4; break;
 1183              		.loc 1 419 0
 1184 013c 0423     		movs	r3, #4
 1185 013e 87F8533C 		strb	r3, [r7, #3155]
 1186 0142 00BF     		nop
 1187              	.L74:
 420:..\src/command_processing.c ****         }
 421:..\src/command_processing.c ****             
 422:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1188              		.loc 1 422 0
 1189 0144 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1190 0148 D7F8782C 		ldr	r2, [r7, #3192]
 1191 014c 1344     		add	r3, r3, r2
 1192 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1193 0150 002B     		cmp	r3, #0
 1194 0152 40F02A82 		bne	.L79
 423:..\src/command_processing.c ****             
 424:..\src/command_processing.c ****             // Add parameter data to packet
 425:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1195              		.loc 1 425 0
 1196 0156 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1197 015a 07F10802 		add	r2, r7, #8
 1198 015e 1268     		ldr	r2, [r2]
 1199 0160 1344     		add	r3, r3, r2
 1200 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1201 0164 092B     		cmp	r3, #9
 1202 0166 01F22083 		bhi	.L113
 1203 016a 01A2     		adr	r2, .L82
 1204 016c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1205              		.p2align 2
 1206              	.L82:
 1207 0170 99010000 		.word	.L81+1
 1208 0174 01020000 		.word	.L83+1
 1209 0178 99010000 		.word	.L81+1
 1210 017c 69020000 		.word	.L84+1
 1211 0180 11030000 		.word	.L85+1
 1212 0184 B7030000 		.word	.L86+1
 1213 0188 5D040000 		.word	.L87+1
 1214 018c 03050000 		.word	.L88+1
 1215 0190 AB170000 		.word	.L113+1
 1216 0194 99010000 		.word	.L81+1
 1217              		.p2align 1
 1218              	.L81:
 426:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1219              		.loc 1 427 0
 1220 0198 0023     		movs	r3, #0
 1221 019a 87F8573C 		strb	r3, [r7, #3159]
 1222 019e 23E0     		b	.L89
 1223              	.L90:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1224              		.loc 1 428 0 discriminator 3
 1225 01a0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1226 01a4 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1227 01a8 02FB03F3 		mul	r3, r2, r3
 1228 01ac 1A46     		mov	r2, r3
 1229 01ae D7F8483C 		ldr	r3, [r7, #3144]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 46


 1230 01b2 1344     		add	r3, r3, r2
 1231 01b4 C7F8443C 		str	r3, [r7, #3140]
 429:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1232              		.loc 1 429 0 discriminator 3
 1233 01b8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1234 01bc 3222     		movs	r2, #50
 1235 01be 02FB03F3 		mul	r3, r2, r3
 1236 01c2 1A1D     		adds	r2, r3, #4
 1237 01c4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1238 01c8 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1239 01cc 01FB03F3 		mul	r3, r1, r3
 1240 01d0 1344     		add	r3, r3, r2
 1241 01d2 D7F8442C 		ldr	r2, [r7, #3140]
 1242 01d6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1243 01d8 07F15802 		add	r2, r7, #88
 1244 01dc D154     		strb	r1, [r2, r3]
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1245              		.loc 1 427 0 discriminator 3
 1246 01de 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1247 01e2 0133     		adds	r3, r3, #1
 1248 01e4 87F8573C 		strb	r3, [r7, #3159]
 1249              	.L89:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1250              		.loc 1 427 0 is_stmt 0 discriminator 1
 1251 01e8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1252 01ec 3A1D     		adds	r2, r7, #4
 1253 01ee 1268     		ldr	r2, [r2]
 1254 01f0 1344     		add	r3, r3, r2
 1255 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 01f4 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1257 01f8 9A42     		cmp	r2, r3
 1258 01fa D1D3     		bcc	.L90
 430:..\src/command_processing.c ****                     }
 431:..\src/command_processing.c ****                     break;                
 1259              		.loc 1 431 0 is_stmt 1
 1260 01fc 01F0D5BA 		b	.L113
 1261              	.L83:
 432:..\src/command_processing.c ****                 case TYPE_INT8:
 433:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1262              		.loc 1 433 0
 1263 0200 0023     		movs	r3, #0
 1264 0202 87F8573C 		strb	r3, [r7, #3159]
 1265 0206 23E0     		b	.L91
 1266              	.L92:
 434:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1267              		.loc 1 434 0 discriminator 3
 1268 0208 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1269 020c 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1270 0210 02FB03F3 		mul	r3, r2, r3
 1271 0214 1A46     		mov	r2, r3
 1272 0216 D7F8483C 		ldr	r3, [r7, #3144]
 1273 021a 1344     		add	r3, r3, r2
 1274 021c C7F8443C 		str	r3, [r7, #3140]
 435:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1275              		.loc 1 435 0 discriminator 3
 1276 0220 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1277 0224 3222     		movs	r2, #50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 47


 1278 0226 02FB03F3 		mul	r3, r2, r3
 1279 022a 1A1D     		adds	r2, r3, #4
 1280 022c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1281 0230 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1282 0234 01FB03F3 		mul	r3, r1, r3
 1283 0238 1344     		add	r3, r3, r2
 1284 023a D7F8442C 		ldr	r2, [r7, #3140]
 1285 023e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1286 0240 07F15802 		add	r2, r7, #88
 1287 0244 D154     		strb	r1, [r2, r3]
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1288              		.loc 1 433 0 discriminator 3
 1289 0246 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1290 024a 0133     		adds	r3, r3, #1
 1291 024c 87F8573C 		strb	r3, [r7, #3159]
 1292              	.L91:
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1293              		.loc 1 433 0 is_stmt 0 discriminator 1
 1294 0250 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1295 0254 3A1D     		adds	r2, r7, #4
 1296 0256 1268     		ldr	r2, [r2]
 1297 0258 1344     		add	r3, r3, r2
 1298 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1299 025c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1300 0260 9A42     		cmp	r2, r3
 1301 0262 D1D3     		bcc	.L92
 436:..\src/command_processing.c ****                     }
 437:..\src/command_processing.c ****                     break;
 1302              		.loc 1 437 0 is_stmt 1
 1303 0264 01F0A1BA 		b	.L113
 1304              	.L84:
 438:..\src/command_processing.c ****                 case TYPE_INT16:
 439:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1305              		.loc 1 439 0
 1306 0268 0023     		movs	r3, #0
 1307 026a 87F8573C 		strb	r3, [r7, #3159]
 1308 026e 43E0     		b	.L93
 1309              	.L96:
 440:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1310              		.loc 1 440 0
 1311 0270 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1312 0274 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1313 0278 02FB03F3 		mul	r3, r2, r3
 1314 027c 1A46     		mov	r2, r3
 1315 027e D7F8483C 		ldr	r3, [r7, #3144]
 1316 0282 1344     		add	r3, r3, r2
 1317 0284 C7F8443C 		str	r3, [r7, #3140]
 441:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1318              		.loc 1 441 0
 1319 0288 D7F8443C 		ldr	r3, [r7, #3140]
 1320 028c B3F90020 		ldrsh	r2, [r3]
 1321 0290 07F11E03 		add	r3, r7, #30
 1322 0294 1A80     		strh	r2, [r3]	@ movhi
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1323              		.loc 1 442 0
 1324 0296 0023     		movs	r3, #0
 1325 0298 87F8563C 		strb	r3, [r7, #3158]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 48


 1326 029c 21E0     		b	.L94
 1327              	.L95:
 443:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1328              		.loc 1 443 0 discriminator 3
 1329 029e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1330 02a2 3222     		movs	r2, #50
 1331 02a4 02FB03F3 		mul	r3, r2, r3
 1332 02a8 1A1D     		adds	r2, r3, #4
 1333 02aa 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1334 02ae 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1335 02b2 01FB03F3 		mul	r3, r1, r3
 1336 02b6 1A44     		add	r2, r2, r3
 1337 02b8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1338 02bc 1A44     		add	r2, r2, r3
 1339 02be 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1340 02c2 D31A     		subs	r3, r2, r3
 1341 02c4 013B     		subs	r3, r3, #1
 1342 02c6 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1343 02ca 07F11E01 		add	r1, r7, #30
 1344 02ce 0A44     		add	r2, r2, r1
 1345 02d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1346 02d2 07F15802 		add	r2, r7, #88
 1347 02d6 D154     		strb	r1, [r2, r3]
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1348              		.loc 1 442 0 discriminator 3
 1349 02d8 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1350 02dc 0133     		adds	r3, r3, #1
 1351 02de 87F8563C 		strb	r3, [r7, #3158]
 1352              	.L94:
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1353              		.loc 1 442 0 is_stmt 0 discriminator 1
 1354 02e2 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1355 02e6 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1356 02ea 9A42     		cmp	r2, r3
 1357 02ec D7D3     		bcc	.L95
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1358              		.loc 1 439 0 is_stmt 1 discriminator 2
 1359 02ee 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1360 02f2 0133     		adds	r3, r3, #1
 1361 02f4 87F8573C 		strb	r3, [r7, #3159]
 1362              	.L93:
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1363              		.loc 1 439 0 is_stmt 0 discriminator 1
 1364 02f8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1365 02fc 3A1D     		adds	r2, r7, #4
 1366 02fe 1268     		ldr	r2, [r2]
 1367 0300 1344     		add	r3, r3, r2
 1368 0302 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1369 0304 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1370 0308 9A42     		cmp	r2, r3
 1371 030a B1D3     		bcc	.L96
 444:..\src/command_processing.c ****                         }
 445:..\src/command_processing.c ****                     }
 446:..\src/command_processing.c ****                     break;
 1372              		.loc 1 446 0 is_stmt 1
 1373 030c 01F04DBA 		b	.L113
 1374              	.L85:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 49


 447:..\src/command_processing.c ****                 case TYPE_UINT16:
 448:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1375              		.loc 1 448 0
 1376 0310 0023     		movs	r3, #0
 1377 0312 87F8573C 		strb	r3, [r7, #3159]
 1378 0316 42E0     		b	.L97
 1379              	.L100:
 449:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1380              		.loc 1 449 0
 1381 0318 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1382 031c 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1383 0320 02FB03F3 		mul	r3, r2, r3
 1384 0324 1A46     		mov	r2, r3
 1385 0326 D7F8483C 		ldr	r3, [r7, #3144]
 1386 032a 1344     		add	r3, r3, r2
 1387 032c C7F8443C 		str	r3, [r7, #3140]
 450:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1388              		.loc 1 450 0
 1389 0330 D7F8443C 		ldr	r3, [r7, #3140]
 1390 0334 1A88     		ldrh	r2, [r3]
 1391 0336 07F11C03 		add	r3, r7, #28
 1392 033a 1A80     		strh	r2, [r3]	@ movhi
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1393              		.loc 1 451 0
 1394 033c 0023     		movs	r3, #0
 1395 033e 87F8563C 		strb	r3, [r7, #3158]
 1396 0342 21E0     		b	.L98
 1397              	.L99:
 452:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1398              		.loc 1 452 0 discriminator 3
 1399 0344 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1400 0348 3222     		movs	r2, #50
 1401 034a 02FB03F3 		mul	r3, r2, r3
 1402 034e 1A1D     		adds	r2, r3, #4
 1403 0350 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1404 0354 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1405 0358 01FB03F3 		mul	r3, r1, r3
 1406 035c 1A44     		add	r2, r2, r3
 1407 035e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1408 0362 1A44     		add	r2, r2, r3
 1409 0364 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1410 0368 D31A     		subs	r3, r2, r3
 1411 036a 013B     		subs	r3, r3, #1
 1412 036c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1413 0370 07F11C01 		add	r1, r7, #28
 1414 0374 0A44     		add	r2, r2, r1
 1415 0376 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1416 0378 07F15802 		add	r2, r7, #88
 1417 037c D154     		strb	r1, [r2, r3]
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1418              		.loc 1 451 0 discriminator 3
 1419 037e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1420 0382 0133     		adds	r3, r3, #1
 1421 0384 87F8563C 		strb	r3, [r7, #3158]
 1422              	.L98:
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1423              		.loc 1 451 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 50


 1424 0388 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1425 038c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1426 0390 9A42     		cmp	r2, r3
 1427 0392 D7D3     		bcc	.L99
 448:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1428              		.loc 1 448 0 is_stmt 1 discriminator 2
 1429 0394 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1430 0398 0133     		adds	r3, r3, #1
 1431 039a 87F8573C 		strb	r3, [r7, #3159]
 1432              	.L97:
 448:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1433              		.loc 1 448 0 is_stmt 0 discriminator 1
 1434 039e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1435 03a2 3A1D     		adds	r2, r7, #4
 1436 03a4 1268     		ldr	r2, [r2]
 1437 03a6 1344     		add	r3, r3, r2
 1438 03a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439 03aa 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1440 03ae 9A42     		cmp	r2, r3
 1441 03b0 B2D3     		bcc	.L100
 453:..\src/command_processing.c ****                         }
 454:..\src/command_processing.c ****                     }
 455:..\src/command_processing.c ****                     break;
 1442              		.loc 1 455 0 is_stmt 1
 1443 03b2 01F0FAB9 		b	.L113
 1444              	.L86:
 456:..\src/command_processing.c ****                 case TYPE_INT32: 
 457:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1445              		.loc 1 457 0
 1446 03b6 0023     		movs	r3, #0
 1447 03b8 87F8573C 		strb	r3, [r7, #3159]
 1448 03bc 42E0     		b	.L101
 1449              	.L104:
 458:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1450              		.loc 1 458 0
 1451 03be 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1452 03c2 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1453 03c6 02FB03F3 		mul	r3, r2, r3
 1454 03ca 1A46     		mov	r2, r3
 1455 03cc D7F8483C 		ldr	r3, [r7, #3144]
 1456 03d0 1344     		add	r3, r3, r2
 1457 03d2 C7F8443C 		str	r3, [r7, #3140]
 459:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1458              		.loc 1 459 0
 1459 03d6 D7F8443C 		ldr	r3, [r7, #3140]
 1460 03da 1A68     		ldr	r2, [r3]
 1461 03dc 07F11803 		add	r3, r7, #24
 1462 03e0 1A60     		str	r2, [r3]
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1463              		.loc 1 460 0
 1464 03e2 0023     		movs	r3, #0
 1465 03e4 87F8563C 		strb	r3, [r7, #3158]
 1466 03e8 21E0     		b	.L102
 1467              	.L103:
 461:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1468              		.loc 1 461 0 discriminator 3
 1469 03ea 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 51


 1470 03ee 3222     		movs	r2, #50
 1471 03f0 02FB03F3 		mul	r3, r2, r3
 1472 03f4 1A1D     		adds	r2, r3, #4
 1473 03f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1474 03fa 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1475 03fe 01FB03F3 		mul	r3, r1, r3
 1476 0402 1A44     		add	r2, r2, r3
 1477 0404 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1478 0408 1A44     		add	r2, r2, r3
 1479 040a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1480 040e D31A     		subs	r3, r2, r3
 1481 0410 013B     		subs	r3, r3, #1
 1482 0412 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1483 0416 07F11801 		add	r1, r7, #24
 1484 041a 0A44     		add	r2, r2, r1
 1485 041c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1486 041e 07F15802 		add	r2, r7, #88
 1487 0422 D154     		strb	r1, [r2, r3]
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1488              		.loc 1 460 0 discriminator 3
 1489 0424 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1490 0428 0133     		adds	r3, r3, #1
 1491 042a 87F8563C 		strb	r3, [r7, #3158]
 1492              	.L102:
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1493              		.loc 1 460 0 is_stmt 0 discriminator 1
 1494 042e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1495 0432 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1496 0436 9A42     		cmp	r2, r3
 1497 0438 D7D3     		bcc	.L103
 457:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1498              		.loc 1 457 0 is_stmt 1 discriminator 2
 1499 043a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1500 043e 0133     		adds	r3, r3, #1
 1501 0440 87F8573C 		strb	r3, [r7, #3159]
 1502              	.L101:
 457:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1503              		.loc 1 457 0 is_stmt 0 discriminator 1
 1504 0444 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1505 0448 3A1D     		adds	r2, r7, #4
 1506 044a 1268     		ldr	r2, [r2]
 1507 044c 1344     		add	r3, r3, r2
 1508 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1509 0450 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1510 0454 9A42     		cmp	r2, r3
 1511 0456 B2D3     		bcc	.L104
 462:..\src/command_processing.c ****                         }
 463:..\src/command_processing.c ****                     }
 464:..\src/command_processing.c ****                     break;
 1512              		.loc 1 464 0 is_stmt 1
 1513 0458 01F0A7B9 		b	.L113
 1514              	.L87:
 465:..\src/command_processing.c ****                 case TYPE_UINT32: 
 466:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1515              		.loc 1 466 0
 1516 045c 0023     		movs	r3, #0
 1517 045e 87F8573C 		strb	r3, [r7, #3159]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 52


 1518 0462 42E0     		b	.L105
 1519              	.L108:
 467:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1520              		.loc 1 467 0
 1521 0464 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1522 0468 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1523 046c 02FB03F3 		mul	r3, r2, r3
 1524 0470 1A46     		mov	r2, r3
 1525 0472 D7F8483C 		ldr	r3, [r7, #3144]
 1526 0476 1344     		add	r3, r3, r2
 1527 0478 C7F8443C 		str	r3, [r7, #3140]
 468:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1528              		.loc 1 468 0
 1529 047c D7F8443C 		ldr	r3, [r7, #3140]
 1530 0480 1A68     		ldr	r2, [r3]
 1531 0482 07F11403 		add	r3, r7, #20
 1532 0486 1A60     		str	r2, [r3]
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1533              		.loc 1 469 0
 1534 0488 0023     		movs	r3, #0
 1535 048a 87F8563C 		strb	r3, [r7, #3158]
 1536 048e 21E0     		b	.L106
 1537              	.L107:
 470:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1538              		.loc 1 470 0 discriminator 3
 1539 0490 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1540 0494 3222     		movs	r2, #50
 1541 0496 02FB03F3 		mul	r3, r2, r3
 1542 049a 1A1D     		adds	r2, r3, #4
 1543 049c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1544 04a0 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1545 04a4 01FB03F3 		mul	r3, r1, r3
 1546 04a8 1A44     		add	r2, r2, r3
 1547 04aa 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1548 04ae 1A44     		add	r2, r2, r3
 1549 04b0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1550 04b4 D31A     		subs	r3, r2, r3
 1551 04b6 013B     		subs	r3, r3, #1
 1552 04b8 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1553 04bc 07F11401 		add	r1, r7, #20
 1554 04c0 0A44     		add	r2, r2, r1
 1555 04c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1556 04c4 07F15802 		add	r2, r7, #88
 1557 04c8 D154     		strb	r1, [r2, r3]
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1558              		.loc 1 469 0 discriminator 3
 1559 04ca 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1560 04ce 0133     		adds	r3, r3, #1
 1561 04d0 87F8563C 		strb	r3, [r7, #3158]
 1562              	.L106:
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1563              		.loc 1 469 0 is_stmt 0 discriminator 1
 1564 04d4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1565 04d8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1566 04dc 9A42     		cmp	r2, r3
 1567 04de D7D3     		bcc	.L107
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 53


 1568              		.loc 1 466 0 is_stmt 1 discriminator 2
 1569 04e0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1570 04e4 0133     		adds	r3, r3, #1
 1571 04e6 87F8573C 		strb	r3, [r7, #3159]
 1572              	.L105:
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1573              		.loc 1 466 0 is_stmt 0 discriminator 1
 1574 04ea 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1575 04ee 3A1D     		adds	r2, r7, #4
 1576 04f0 1268     		ldr	r2, [r2]
 1577 04f2 1344     		add	r3, r3, r2
 1578 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1579 04f6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1580 04fa 9A42     		cmp	r2, r3
 1581 04fc B2D3     		bcc	.L108
 471:..\src/command_processing.c ****                         }
 472:..\src/command_processing.c ****                     }
 473:..\src/command_processing.c ****                     break;
 1582              		.loc 1 473 0 is_stmt 1
 1583 04fe 01F054B9 		b	.L113
 1584              	.L88:
 474:..\src/command_processing.c ****                     
 475:..\src/command_processing.c ****                 case TYPE_FLOAT:
 476:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1585              		.loc 1 476 0
 1586 0502 0023     		movs	r3, #0
 1587 0504 87F8573C 		strb	r3, [r7, #3159]
 1588 0508 42E0     		b	.L109
 1589              	.L112:
 477:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1590              		.loc 1 477 0
 1591 050a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1592 050e 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1593 0512 02FB03F3 		mul	r3, r2, r3
 1594 0516 1A46     		mov	r2, r3
 1595 0518 D7F8483C 		ldr	r3, [r7, #3144]
 1596 051c 1344     		add	r3, r3, r2
 1597 051e C7F8443C 		str	r3, [r7, #3140]
 478:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1598              		.loc 1 478 0
 1599 0522 D7F8443C 		ldr	r3, [r7, #3140]
 1600 0526 1A68     		ldr	r2, [r3]	@ float
 1601 0528 07F12003 		add	r3, r7, #32
 1602 052c 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1603              		.loc 1 479 0
 1604 052e 0023     		movs	r3, #0
 1605 0530 87F8563C 		strb	r3, [r7, #3158]
 1606 0534 21E0     		b	.L110
 1607              	.L111:
 480:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1608              		.loc 1 480 0 discriminator 3
 1609 0536 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1610 053a 3222     		movs	r2, #50
 1611 053c 02FB03F3 		mul	r3, r2, r3
 1612 0540 1A1D     		adds	r2, r3, #4
 1613 0542 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 54


 1614 0546 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1615 054a 01FB03F3 		mul	r3, r1, r3
 1616 054e 1A44     		add	r2, r2, r3
 1617 0550 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1618 0554 1A44     		add	r2, r2, r3
 1619 0556 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1620 055a D31A     		subs	r3, r2, r3
 1621 055c 013B     		subs	r3, r3, #1
 1622 055e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1623 0562 07F12001 		add	r1, r7, #32
 1624 0566 0A44     		add	r2, r2, r1
 1625 0568 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1626 056a 07F15802 		add	r2, r7, #88
 1627 056e D154     		strb	r1, [r2, r3]
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1628              		.loc 1 479 0 discriminator 3
 1629 0570 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1630 0574 0133     		adds	r3, r3, #1
 1631 0576 87F8563C 		strb	r3, [r7, #3158]
 1632              	.L110:
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1633              		.loc 1 479 0 is_stmt 0 discriminator 1
 1634 057a 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1635 057e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1636 0582 9A42     		cmp	r2, r3
 1637 0584 D7D3     		bcc	.L111
 476:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1638              		.loc 1 476 0 is_stmt 1 discriminator 2
 1639 0586 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1640 058a 0133     		adds	r3, r3, #1
 1641 058c 87F8573C 		strb	r3, [r7, #3159]
 1642              	.L109:
 476:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1643              		.loc 1 476 0 is_stmt 0 discriminator 1
 1644 0590 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1645 0594 3A1D     		adds	r2, r7, #4
 1646 0596 1268     		ldr	r2, [r2]
 1647 0598 1344     		add	r3, r3, r2
 1648 059a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1649 059c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1650 05a0 9A42     		cmp	r2, r3
 1651 05a2 B2D3     		bcc	.L112
 481:..\src/command_processing.c ****                         }
 482:..\src/command_processing.c ****                     }
 483:..\src/command_processing.c ****                     break;   
 1652              		.loc 1 483 0 is_stmt 1 discriminator 7
 1653 05a4 00BF     		nop
 1654 05a6 01F000B9 		b	.L113
 1655              	.L79:
 484:..\src/command_processing.c ****             }
 485:..\src/command_processing.c ****         }
 486:..\src/command_processing.c ****         else {
 487:..\src/command_processing.c ****             
 488:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 489:..\src/command_processing.c ****             
 490:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 491:..\src/command_processing.c ****                 switch(idx+1){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 55


 1656              		.loc 1 491 0
 1657 05aa 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1658 05ae 0133     		adds	r3, r3, #1
 1659 05b0 023B     		subs	r3, r3, #2
 1660 05b2 332B     		cmp	r3, #51
 1661 05b4 01F2F880 		bhi	.L283
 1662 05b8 01A2     		adr	r2, .L116
 1663 05ba 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1664 05be 00BF     		.p2align 2
 1665              	.L116:
 1666 05c0 91060000 		.word	.L115+1
 1667 05c4 B1090000 		.word	.L117+1
 1668 05c8 A9170000 		.word	.L283+1
 1669 05cc A9170000 		.word	.L283+1
 1670 05d0 A9170000 		.word	.L283+1
 1671 05d4 A9170000 		.word	.L283+1
 1672 05d8 CD0C0000 		.word	.L118+1
 1673 05dc A9170000 		.word	.L283+1
 1674 05e0 A9170000 		.word	.L283+1
 1675 05e4 BD0D0000 		.word	.L119+1
 1676 05e8 A9170000 		.word	.L283+1
 1677 05ec A9170000 		.word	.L283+1
 1678 05f0 A9170000 		.word	.L283+1
 1679 05f4 A9170000 		.word	.L283+1
 1680 05f8 A9170000 		.word	.L283+1
 1681 05fc A9170000 		.word	.L283+1
 1682 0600 A9170000 		.word	.L283+1
 1683 0604 A9170000 		.word	.L283+1
 1684 0608 A9170000 		.word	.L283+1
 1685 060c A9170000 		.word	.L283+1
 1686 0610 A9170000 		.word	.L283+1
 1687 0614 EB0E0000 		.word	.L120+1
 1688 0618 A9170000 		.word	.L283+1
 1689 061c A9170000 		.word	.L283+1
 1690 0620 A9170000 		.word	.L283+1
 1691 0624 A9170000 		.word	.L283+1
 1692 0628 A9170000 		.word	.L283+1
 1693 062c A9170000 		.word	.L283+1
 1694 0630 A9170000 		.word	.L283+1
 1695 0634 A9170000 		.word	.L283+1
 1696 0638 A9170000 		.word	.L283+1
 1697 063c A9170000 		.word	.L283+1
 1698 0640 A9170000 		.word	.L283+1
 1699 0644 A9170000 		.word	.L283+1
 1700 0648 A9170000 		.word	.L283+1
 1701 064c A9170000 		.word	.L283+1
 1702 0650 A9170000 		.word	.L283+1
 1703 0654 A9170000 		.word	.L283+1
 1704 0658 A9170000 		.word	.L283+1
 1705 065c A9170000 		.word	.L283+1
 1706 0660 A9170000 		.word	.L283+1
 1707 0664 A9170000 		.word	.L283+1
 1708 0668 730F0000 		.word	.L121+1
 1709 066c 93120000 		.word	.L122+1
 1710 0670 A9170000 		.word	.L283+1
 1711 0674 A9170000 		.word	.L283+1
 1712 0678 A9170000 		.word	.L283+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 56


 1713 067c A9170000 		.word	.L283+1
 1714 0680 AF150000 		.word	.L123+1
 1715 0684 A9170000 		.word	.L283+1
 1716 0688 A9170000 		.word	.L283+1
 1717 068c 73160000 		.word	.L124+1
 1718              		.p2align 1
 1719              	.L115:
 492:..\src/command_processing.c ****                     case 2:         // Position PID
 493:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1720              		.loc 1 493 0
 1721 0690 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1722 0694 C549     		ldr	r1, .L289
 1723 0696 1346     		mov	r3, r2
 1724 0698 DB00     		lsls	r3, r3, #3
 1725 069a 9B1A     		subs	r3, r3, r2
 1726 069c 1B01     		lsls	r3, r3, #4
 1727 069e 0B44     		add	r3, r3, r1
 1728 06a0 03F20F13 		addw	r3, r3, #271
 1729 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1730 06a6 032B     		cmp	r3, #3
 1731 06a8 00F0C080 		beq	.L125
 494:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1732              		.loc 1 494 0
 1733 06ac 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1734 06b0 BE49     		ldr	r1, .L289
 1735 06b2 1346     		mov	r3, r2
 1736 06b4 DB00     		lsls	r3, r3, #3
 1737 06b6 9B1A     		subs	r3, r3, r2
 1738 06b8 1B01     		lsls	r3, r3, #4
 1739 06ba 0B44     		add	r3, r3, r1
 1740 06bc B033     		adds	r3, r3, #176
 1741 06be 1B68     		ldr	r3, [r3]
 1742 06c0 1846     		mov	r0, r3
 1743 06c2 FFF7FEFF 		bl	__aeabi_i2f
 1744 06c6 0346     		mov	r3, r0
 1745 06c8 4FF08F41 		mov	r1, #1199570944
 1746 06cc 1846     		mov	r0, r3
 1747 06ce FFF7FEFF 		bl	__aeabi_fdiv
 1748 06d2 0346     		mov	r3, r0
 1749 06d4 1A46     		mov	r2, r3
 1750 06d6 07F12003 		add	r3, r7, #32
 1751 06da 1A60     		str	r2, [r3]	@ float
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1752              		.loc 1 495 0
 1753 06dc 0023     		movs	r3, #0
 1754 06de 87F8573C 		strb	r3, [r7, #3159]
 1755 06e2 1AE0     		b	.L126
 1756              	.L127:
 496:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1757              		.loc 1 496 0 discriminator 3
 1758 06e4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1759 06e8 3222     		movs	r2, #50
 1760 06ea 02FB03F3 		mul	r3, r2, r3
 1761 06ee 1A1D     		adds	r2, r3, #4
 1762 06f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1763 06f4 1A44     		add	r2, r2, r3
 1764 06f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 57


 1765 06fa D31A     		subs	r3, r2, r3
 1766 06fc 013B     		subs	r3, r3, #1
 1767 06fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1768 0702 07F12001 		add	r1, r7, #32
 1769 0706 0A44     		add	r2, r2, r1
 1770 0708 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1771 070a 07F15802 		add	r2, r7, #88
 1772 070e D154     		strb	r1, [r2, r3]
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1773              		.loc 1 495 0 discriminator 3
 1774 0710 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1775 0714 0133     		adds	r3, r3, #1
 1776 0716 87F8573C 		strb	r3, [r7, #3159]
 1777              	.L126:
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1778              		.loc 1 495 0 is_stmt 0 discriminator 1
 1779 071a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1780 071e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1781 0722 9A42     		cmp	r2, r3
 1782 0724 DED3     		bcc	.L127
 497:..\src/command_processing.c ****                             }
 498:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 1783              		.loc 1 498 0 is_stmt 1
 1784 0726 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1785 072a A049     		ldr	r1, .L289
 1786 072c 1346     		mov	r3, r2
 1787 072e DB00     		lsls	r3, r3, #3
 1788 0730 9B1A     		subs	r3, r3, r2
 1789 0732 1B01     		lsls	r3, r3, #4
 1790 0734 0B44     		add	r3, r3, r1
 1791 0736 B433     		adds	r3, r3, #180
 1792 0738 1B68     		ldr	r3, [r3]
 1793 073a 1846     		mov	r0, r3
 1794 073c FFF7FEFF 		bl	__aeabi_i2f
 1795 0740 0346     		mov	r3, r0
 1796 0742 4FF08F41 		mov	r1, #1199570944
 1797 0746 1846     		mov	r0, r3
 1798 0748 FFF7FEFF 		bl	__aeabi_fdiv
 1799 074c 0346     		mov	r3, r0
 1800 074e 1A46     		mov	r2, r3
 1801 0750 07F12003 		add	r3, r7, #32
 1802 0754 1A60     		str	r2, [r3]	@ float
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1803              		.loc 1 499 0
 1804 0756 0023     		movs	r3, #0
 1805 0758 87F8573C 		strb	r3, [r7, #3159]
 1806 075c 1DE0     		b	.L128
 1807              	.L129:
 500:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1808              		.loc 1 500 0 discriminator 3
 1809 075e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1810 0762 3222     		movs	r2, #50
 1811 0764 02FB03F3 		mul	r3, r2, r3
 1812 0768 1A1D     		adds	r2, r3, #4
 1813 076a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1814 076e 1A44     		add	r2, r2, r3
 1815 0770 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 58


 1816 0774 1A44     		add	r2, r2, r3
 1817 0776 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1818 077a D31A     		subs	r3, r2, r3
 1819 077c 013B     		subs	r3, r3, #1
 1820 077e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1821 0782 07F12001 		add	r1, r7, #32
 1822 0786 0A44     		add	r2, r2, r1
 1823 0788 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1824 078a 07F15802 		add	r2, r7, #88
 1825 078e D154     		strb	r1, [r2, r3]
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1826              		.loc 1 499 0 discriminator 3
 1827 0790 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1828 0794 0133     		adds	r3, r3, #1
 1829 0796 87F8573C 		strb	r3, [r7, #3159]
 1830              	.L128:
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1831              		.loc 1 499 0 is_stmt 0 discriminator 1
 1832 079a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1833 079e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1834 07a2 9A42     		cmp	r2, r3
 1835 07a4 DBD3     		bcc	.L129
 501:..\src/command_processing.c ****                             }
 502:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 1836              		.loc 1 502 0 is_stmt 1
 1837 07a6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1838 07aa 8049     		ldr	r1, .L289
 1839 07ac 1346     		mov	r3, r2
 1840 07ae DB00     		lsls	r3, r3, #3
 1841 07b0 9B1A     		subs	r3, r3, r2
 1842 07b2 1B01     		lsls	r3, r3, #4
 1843 07b4 0B44     		add	r3, r3, r1
 1844 07b6 B833     		adds	r3, r3, #184
 1845 07b8 1B68     		ldr	r3, [r3]
 1846 07ba 1846     		mov	r0, r3
 1847 07bc FFF7FEFF 		bl	__aeabi_i2f
 1848 07c0 0346     		mov	r3, r0
 1849 07c2 4FF08F41 		mov	r1, #1199570944
 1850 07c6 1846     		mov	r0, r3
 1851 07c8 FFF7FEFF 		bl	__aeabi_fdiv
 1852 07cc 0346     		mov	r3, r0
 1853 07ce 1A46     		mov	r2, r3
 1854 07d0 07F12003 		add	r3, r7, #32
 1855 07d4 1A60     		str	r2, [r3]	@ float
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1856              		.loc 1 503 0
 1857 07d6 0023     		movs	r3, #0
 1858 07d8 87F8573C 		strb	r3, [r7, #3159]
 1859 07dc 1EE0     		b	.L130
 1860              	.L131:
 504:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1861              		.loc 1 504 0 discriminator 3
 1862 07de 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1863 07e2 3222     		movs	r2, #50
 1864 07e4 02FB03F3 		mul	r3, r2, r3
 1865 07e8 1A1D     		adds	r2, r3, #4
 1866 07ea 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 59


 1867 07ee 5B00     		lsls	r3, r3, #1
 1868 07f0 1A44     		add	r2, r2, r3
 1869 07f2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1870 07f6 1A44     		add	r2, r2, r3
 1871 07f8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1872 07fc D31A     		subs	r3, r2, r3
 1873 07fe 013B     		subs	r3, r3, #1
 1874 0800 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1875 0804 07F12001 		add	r1, r7, #32
 1876 0808 0A44     		add	r2, r2, r1
 1877 080a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1878 080c 07F15802 		add	r2, r7, #88
 1879 0810 D154     		strb	r1, [r2, r3]
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1880              		.loc 1 503 0 discriminator 3
 1881 0812 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1882 0816 0133     		adds	r3, r3, #1
 1883 0818 87F8573C 		strb	r3, [r7, #3159]
 1884              	.L130:
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1885              		.loc 1 503 0 is_stmt 0 discriminator 1
 1886 081c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1887 0820 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1888 0824 9A42     		cmp	r2, r3
 1889 0826 DAD3     		bcc	.L131
 505:..\src/command_processing.c ****                             } 
 506:..\src/command_processing.c ****                         }
 507:..\src/command_processing.c ****                         else {
 508:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 511:..\src/command_processing.c ****                             }
 512:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 515:..\src/command_processing.c ****                             }
 516:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 519:..\src/command_processing.c ****                             }
 520:..\src/command_processing.c ****                         }
 521:..\src/command_processing.c ****                         break;
 1890              		.loc 1 521 0 is_stmt 1
 1891 0828 00F0BFBF 		b	.L113
 1892              	.L125:
 508:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1893              		.loc 1 508 0
 1894 082c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1895 0830 5E49     		ldr	r1, .L289
 1896 0832 1346     		mov	r3, r2
 1897 0834 DB00     		lsls	r3, r3, #3
 1898 0836 9B1A     		subs	r3, r3, r2
 1899 0838 1B01     		lsls	r3, r3, #4
 1900 083a 0B44     		add	r3, r3, r1
 1901 083c C833     		adds	r3, r3, #200
 1902 083e 1B68     		ldr	r3, [r3]
 1903 0840 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 60


 1904 0842 FFF7FEFF 		bl	__aeabi_i2f
 1905 0846 0346     		mov	r3, r0
 1906 0848 4FF08F41 		mov	r1, #1199570944
 1907 084c 1846     		mov	r0, r3
 1908 084e FFF7FEFF 		bl	__aeabi_fdiv
 1909 0852 0346     		mov	r3, r0
 1910 0854 1A46     		mov	r2, r3
 1911 0856 07F12003 		add	r3, r7, #32
 1912 085a 1A60     		str	r2, [r3]	@ float
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1913              		.loc 1 509 0
 1914 085c 0023     		movs	r3, #0
 1915 085e 87F8573C 		strb	r3, [r7, #3159]
 1916 0862 1AE0     		b	.L133
 1917              	.L134:
 510:..\src/command_processing.c ****                             }
 1918              		.loc 1 510 0 discriminator 3
 1919 0864 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1920 0868 3222     		movs	r2, #50
 1921 086a 02FB03F3 		mul	r3, r2, r3
 1922 086e 1A1D     		adds	r2, r3, #4
 1923 0870 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1924 0874 1A44     		add	r2, r2, r3
 1925 0876 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1926 087a D31A     		subs	r3, r2, r3
 1927 087c 013B     		subs	r3, r3, #1
 1928 087e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1929 0882 07F12001 		add	r1, r7, #32
 1930 0886 0A44     		add	r2, r2, r1
 1931 0888 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1932 088a 07F15802 		add	r2, r7, #88
 1933 088e D154     		strb	r1, [r2, r3]
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1934              		.loc 1 509 0 discriminator 3
 1935 0890 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1936 0894 0133     		adds	r3, r3, #1
 1937 0896 87F8573C 		strb	r3, [r7, #3159]
 1938              	.L133:
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1939              		.loc 1 509 0 is_stmt 0 discriminator 1
 1940 089a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1941 089e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1942 08a2 9A42     		cmp	r2, r3
 1943 08a4 DED3     		bcc	.L134
 512:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1944              		.loc 1 512 0 is_stmt 1
 1945 08a6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1946 08aa 4049     		ldr	r1, .L289
 1947 08ac 1346     		mov	r3, r2
 1948 08ae DB00     		lsls	r3, r3, #3
 1949 08b0 9B1A     		subs	r3, r3, r2
 1950 08b2 1B01     		lsls	r3, r3, #4
 1951 08b4 0B44     		add	r3, r3, r1
 1952 08b6 CC33     		adds	r3, r3, #204
 1953 08b8 1B68     		ldr	r3, [r3]
 1954 08ba 1846     		mov	r0, r3
 1955 08bc FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 61


 1956 08c0 0346     		mov	r3, r0
 1957 08c2 4FF08F41 		mov	r1, #1199570944
 1958 08c6 1846     		mov	r0, r3
 1959 08c8 FFF7FEFF 		bl	__aeabi_fdiv
 1960 08cc 0346     		mov	r3, r0
 1961 08ce 1A46     		mov	r2, r3
 1962 08d0 07F12003 		add	r3, r7, #32
 1963 08d4 1A60     		str	r2, [r3]	@ float
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1964              		.loc 1 513 0
 1965 08d6 0023     		movs	r3, #0
 1966 08d8 87F8573C 		strb	r3, [r7, #3159]
 1967 08dc 1DE0     		b	.L135
 1968              	.L136:
 514:..\src/command_processing.c ****                             }
 1969              		.loc 1 514 0 discriminator 3
 1970 08de 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1971 08e2 3222     		movs	r2, #50
 1972 08e4 02FB03F3 		mul	r3, r2, r3
 1973 08e8 1A1D     		adds	r2, r3, #4
 1974 08ea 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1975 08ee 1A44     		add	r2, r2, r3
 1976 08f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1977 08f4 1A44     		add	r2, r2, r3
 1978 08f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1979 08fa D31A     		subs	r3, r2, r3
 1980 08fc 013B     		subs	r3, r3, #1
 1981 08fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1982 0902 07F12001 		add	r1, r7, #32
 1983 0906 0A44     		add	r2, r2, r1
 1984 0908 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1985 090a 07F15802 		add	r2, r7, #88
 1986 090e D154     		strb	r1, [r2, r3]
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1987              		.loc 1 513 0 discriminator 3
 1988 0910 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1989 0914 0133     		adds	r3, r3, #1
 1990 0916 87F8573C 		strb	r3, [r7, #3159]
 1991              	.L135:
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1992              		.loc 1 513 0 is_stmt 0 discriminator 1
 1993 091a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1994 091e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1995 0922 9A42     		cmp	r2, r3
 1996 0924 DBD3     		bcc	.L136
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1997              		.loc 1 516 0 is_stmt 1
 1998 0926 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1999 092a 2049     		ldr	r1, .L289
 2000 092c 1346     		mov	r3, r2
 2001 092e DB00     		lsls	r3, r3, #3
 2002 0930 9B1A     		subs	r3, r3, r2
 2003 0932 1B01     		lsls	r3, r3, #4
 2004 0934 0B44     		add	r3, r3, r1
 2005 0936 D033     		adds	r3, r3, #208
 2006 0938 1B68     		ldr	r3, [r3]
 2007 093a 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 62


 2008 093c FFF7FEFF 		bl	__aeabi_i2f
 2009 0940 0346     		mov	r3, r0
 2010 0942 4FF08F41 		mov	r1, #1199570944
 2011 0946 1846     		mov	r0, r3
 2012 0948 FFF7FEFF 		bl	__aeabi_fdiv
 2013 094c 0346     		mov	r3, r0
 2014 094e 1A46     		mov	r2, r3
 2015 0950 07F12003 		add	r3, r7, #32
 2016 0954 1A60     		str	r2, [r3]	@ float
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2017              		.loc 1 517 0
 2018 0956 0023     		movs	r3, #0
 2019 0958 87F8573C 		strb	r3, [r7, #3159]
 2020 095c 1EE0     		b	.L137
 2021              	.L138:
 518:..\src/command_processing.c ****                             }
 2022              		.loc 1 518 0 discriminator 3
 2023 095e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2024 0962 3222     		movs	r2, #50
 2025 0964 02FB03F3 		mul	r3, r2, r3
 2026 0968 1A1D     		adds	r2, r3, #4
 2027 096a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2028 096e 5B00     		lsls	r3, r3, #1
 2029 0970 1A44     		add	r2, r2, r3
 2030 0972 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2031 0976 1A44     		add	r2, r2, r3
 2032 0978 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2033 097c D31A     		subs	r3, r2, r3
 2034 097e 013B     		subs	r3, r3, #1
 2035 0980 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2036 0984 07F12001 		add	r1, r7, #32
 2037 0988 0A44     		add	r2, r2, r1
 2038 098a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2039 098c 07F15802 		add	r2, r7, #88
 2040 0990 D154     		strb	r1, [r2, r3]
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2041              		.loc 1 517 0 discriminator 3
 2042 0992 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2043 0996 0133     		adds	r3, r3, #1
 2044 0998 87F8573C 		strb	r3, [r7, #3159]
 2045              	.L137:
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2046              		.loc 1 517 0 is_stmt 0 discriminator 1
 2047 099c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2048 09a0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2049 09a4 9A42     		cmp	r2, r3
 2050 09a6 DAD3     		bcc	.L138
 2051              		.loc 1 521 0 is_stmt 1
 2052 09a8 00F0FFBE 		b	.L113
 2053              	.L290:
 2054              		.align	2
 2055              	.L289:
 2056 09ac 00000000 		.word	c_mem
 2057              	.L117:
 522:..\src/command_processing.c ****                         
 523:..\src/command_processing.c ****                     case 3:         //Current PID
 524:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 63


 2058              		.loc 1 524 0
 2059 09b0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2060 09b4 C749     		ldr	r1, .L291
 2061 09b6 1346     		mov	r3, r2
 2062 09b8 DB00     		lsls	r3, r3, #3
 2063 09ba 9B1A     		subs	r3, r3, r2
 2064 09bc 1B01     		lsls	r3, r3, #4
 2065 09be 0B44     		add	r3, r3, r1
 2066 09c0 03F20F13 		addw	r3, r3, #271
 2067 09c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2068 09c6 032B     		cmp	r3, #3
 2069 09c8 00F0C080 		beq	.L139
 525:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2070              		.loc 1 525 0
 2071 09cc 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2072 09d0 C049     		ldr	r1, .L291
 2073 09d2 1346     		mov	r3, r2
 2074 09d4 DB00     		lsls	r3, r3, #3
 2075 09d6 9B1A     		subs	r3, r3, r2
 2076 09d8 1B01     		lsls	r3, r3, #4
 2077 09da 0B44     		add	r3, r3, r1
 2078 09dc BC33     		adds	r3, r3, #188
 2079 09de 1B68     		ldr	r3, [r3]
 2080 09e0 1846     		mov	r0, r3
 2081 09e2 FFF7FEFF 		bl	__aeabi_i2f
 2082 09e6 0346     		mov	r3, r0
 2083 09e8 4FF08F41 		mov	r1, #1199570944
 2084 09ec 1846     		mov	r0, r3
 2085 09ee FFF7FEFF 		bl	__aeabi_fdiv
 2086 09f2 0346     		mov	r3, r0
 2087 09f4 1A46     		mov	r2, r3
 2088 09f6 07F12003 		add	r3, r7, #32
 2089 09fa 1A60     		str	r2, [r3]	@ float
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2090              		.loc 1 526 0
 2091 09fc 0023     		movs	r3, #0
 2092 09fe 87F8573C 		strb	r3, [r7, #3159]
 2093 0a02 1AE0     		b	.L140
 2094              	.L141:
 527:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2095              		.loc 1 527 0 discriminator 3
 2096 0a04 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2097 0a08 3222     		movs	r2, #50
 2098 0a0a 02FB03F3 		mul	r3, r2, r3
 2099 0a0e 1A1D     		adds	r2, r3, #4
 2100 0a10 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2101 0a14 1A44     		add	r2, r2, r3
 2102 0a16 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2103 0a1a D31A     		subs	r3, r2, r3
 2104 0a1c 013B     		subs	r3, r3, #1
 2105 0a1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2106 0a22 07F12001 		add	r1, r7, #32
 2107 0a26 0A44     		add	r2, r2, r1
 2108 0a28 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2109 0a2a 07F15802 		add	r2, r7, #88
 2110 0a2e D154     		strb	r1, [r2, r3]
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 64


 2111              		.loc 1 526 0 discriminator 3
 2112 0a30 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2113 0a34 0133     		adds	r3, r3, #1
 2114 0a36 87F8573C 		strb	r3, [r7, #3159]
 2115              	.L140:
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2116              		.loc 1 526 0 is_stmt 0 discriminator 1
 2117 0a3a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2118 0a3e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2119 0a42 9A42     		cmp	r2, r3
 2120 0a44 DED3     		bcc	.L141
 528:..\src/command_processing.c ****                             }
 529:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2121              		.loc 1 529 0 is_stmt 1
 2122 0a46 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2123 0a4a A249     		ldr	r1, .L291
 2124 0a4c 1346     		mov	r3, r2
 2125 0a4e DB00     		lsls	r3, r3, #3
 2126 0a50 9B1A     		subs	r3, r3, r2
 2127 0a52 1B01     		lsls	r3, r3, #4
 2128 0a54 0B44     		add	r3, r3, r1
 2129 0a56 C033     		adds	r3, r3, #192
 2130 0a58 1B68     		ldr	r3, [r3]
 2131 0a5a 1846     		mov	r0, r3
 2132 0a5c FFF7FEFF 		bl	__aeabi_i2f
 2133 0a60 0346     		mov	r3, r0
 2134 0a62 4FF08F41 		mov	r1, #1199570944
 2135 0a66 1846     		mov	r0, r3
 2136 0a68 FFF7FEFF 		bl	__aeabi_fdiv
 2137 0a6c 0346     		mov	r3, r0
 2138 0a6e 1A46     		mov	r2, r3
 2139 0a70 07F12003 		add	r3, r7, #32
 2140 0a74 1A60     		str	r2, [r3]	@ float
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2141              		.loc 1 530 0
 2142 0a76 0023     		movs	r3, #0
 2143 0a78 87F8573C 		strb	r3, [r7, #3159]
 2144 0a7c 1DE0     		b	.L142
 2145              	.L143:
 531:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2146              		.loc 1 531 0 discriminator 3
 2147 0a7e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2148 0a82 3222     		movs	r2, #50
 2149 0a84 02FB03F3 		mul	r3, r2, r3
 2150 0a88 1A1D     		adds	r2, r3, #4
 2151 0a8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2152 0a8e 1A44     		add	r2, r2, r3
 2153 0a90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2154 0a94 1A44     		add	r2, r2, r3
 2155 0a96 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2156 0a9a D31A     		subs	r3, r2, r3
 2157 0a9c 013B     		subs	r3, r3, #1
 2158 0a9e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2159 0aa2 07F12001 		add	r1, r7, #32
 2160 0aa6 0A44     		add	r2, r2, r1
 2161 0aa8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2162 0aaa 07F15802 		add	r2, r7, #88
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 65


 2163 0aae D154     		strb	r1, [r2, r3]
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2164              		.loc 1 530 0 discriminator 3
 2165 0ab0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2166 0ab4 0133     		adds	r3, r3, #1
 2167 0ab6 87F8573C 		strb	r3, [r7, #3159]
 2168              	.L142:
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2169              		.loc 1 530 0 is_stmt 0 discriminator 1
 2170 0aba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2171 0abe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2172 0ac2 9A42     		cmp	r2, r3
 2173 0ac4 DBD3     		bcc	.L143
 532:..\src/command_processing.c ****                             }
 533:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2174              		.loc 1 533 0 is_stmt 1
 2175 0ac6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2176 0aca 8249     		ldr	r1, .L291
 2177 0acc 1346     		mov	r3, r2
 2178 0ace DB00     		lsls	r3, r3, #3
 2179 0ad0 9B1A     		subs	r3, r3, r2
 2180 0ad2 1B01     		lsls	r3, r3, #4
 2181 0ad4 0B44     		add	r3, r3, r1
 2182 0ad6 C433     		adds	r3, r3, #196
 2183 0ad8 1B68     		ldr	r3, [r3]
 2184 0ada 1846     		mov	r0, r3
 2185 0adc FFF7FEFF 		bl	__aeabi_i2f
 2186 0ae0 0346     		mov	r3, r0
 2187 0ae2 4FF08F41 		mov	r1, #1199570944
 2188 0ae6 1846     		mov	r0, r3
 2189 0ae8 FFF7FEFF 		bl	__aeabi_fdiv
 2190 0aec 0346     		mov	r3, r0
 2191 0aee 1A46     		mov	r2, r3
 2192 0af0 07F12003 		add	r3, r7, #32
 2193 0af4 1A60     		str	r2, [r3]	@ float
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2194              		.loc 1 534 0
 2195 0af6 0023     		movs	r3, #0
 2196 0af8 87F8573C 		strb	r3, [r7, #3159]
 2197 0afc 1EE0     		b	.L144
 2198              	.L145:
 535:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2199              		.loc 1 535 0 discriminator 3
 2200 0afe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2201 0b02 3222     		movs	r2, #50
 2202 0b04 02FB03F3 		mul	r3, r2, r3
 2203 0b08 1A1D     		adds	r2, r3, #4
 2204 0b0a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2205 0b0e 5B00     		lsls	r3, r3, #1
 2206 0b10 1A44     		add	r2, r2, r3
 2207 0b12 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2208 0b16 1A44     		add	r2, r2, r3
 2209 0b18 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2210 0b1c D31A     		subs	r3, r2, r3
 2211 0b1e 013B     		subs	r3, r3, #1
 2212 0b20 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2213 0b24 07F12001 		add	r1, r7, #32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 66


 2214 0b28 0A44     		add	r2, r2, r1
 2215 0b2a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2216 0b2c 07F15802 		add	r2, r7, #88
 2217 0b30 D154     		strb	r1, [r2, r3]
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2218              		.loc 1 534 0 discriminator 3
 2219 0b32 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2220 0b36 0133     		adds	r3, r3, #1
 2221 0b38 87F8573C 		strb	r3, [r7, #3159]
 2222              	.L144:
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2223              		.loc 1 534 0 is_stmt 0 discriminator 1
 2224 0b3c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2225 0b40 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2226 0b44 9A42     		cmp	r2, r3
 2227 0b46 DAD3     		bcc	.L145
 536:..\src/command_processing.c ****                             }
 537:..\src/command_processing.c ****                         }
 538:..\src/command_processing.c ****                         else {
 539:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 541:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 542:..\src/command_processing.c ****                             }
 543:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 544:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 545:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 546:..\src/command_processing.c ****                             }
 547:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 548:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 549:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 550:..\src/command_processing.c ****                             }
 551:..\src/command_processing.c ****                         }            
 552:..\src/command_processing.c ****                         break;  
 2228              		.loc 1 552 0 is_stmt 1
 2229 0b48 00F02FBE 		b	.L113
 2230              	.L139:
 539:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2231              		.loc 1 539 0
 2232 0b4c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2233 0b50 6049     		ldr	r1, .L291
 2234 0b52 1346     		mov	r3, r2
 2235 0b54 DB00     		lsls	r3, r3, #3
 2236 0b56 9B1A     		subs	r3, r3, r2
 2237 0b58 1B01     		lsls	r3, r3, #4
 2238 0b5a 0B44     		add	r3, r3, r1
 2239 0b5c D433     		adds	r3, r3, #212
 2240 0b5e 1B68     		ldr	r3, [r3]
 2241 0b60 1846     		mov	r0, r3
 2242 0b62 FFF7FEFF 		bl	__aeabi_i2f
 2243 0b66 0346     		mov	r3, r0
 2244 0b68 4FF08F41 		mov	r1, #1199570944
 2245 0b6c 1846     		mov	r0, r3
 2246 0b6e FFF7FEFF 		bl	__aeabi_fdiv
 2247 0b72 0346     		mov	r3, r0
 2248 0b74 1A46     		mov	r2, r3
 2249 0b76 07F12003 		add	r3, r7, #32
 2250 0b7a 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 67


 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2251              		.loc 1 540 0
 2252 0b7c 0023     		movs	r3, #0
 2253 0b7e 87F8573C 		strb	r3, [r7, #3159]
 2254 0b82 1AE0     		b	.L147
 2255              	.L148:
 541:..\src/command_processing.c ****                             }
 2256              		.loc 1 541 0 discriminator 3
 2257 0b84 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2258 0b88 3222     		movs	r2, #50
 2259 0b8a 02FB03F3 		mul	r3, r2, r3
 2260 0b8e 1A1D     		adds	r2, r3, #4
 2261 0b90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2262 0b94 1A44     		add	r2, r2, r3
 2263 0b96 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2264 0b9a D31A     		subs	r3, r2, r3
 2265 0b9c 013B     		subs	r3, r3, #1
 2266 0b9e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2267 0ba2 07F12001 		add	r1, r7, #32
 2268 0ba6 0A44     		add	r2, r2, r1
 2269 0ba8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2270 0baa 07F15802 		add	r2, r7, #88
 2271 0bae D154     		strb	r1, [r2, r3]
 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2272              		.loc 1 540 0 discriminator 3
 2273 0bb0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2274 0bb4 0133     		adds	r3, r3, #1
 2275 0bb6 87F8573C 		strb	r3, [r7, #3159]
 2276              	.L147:
 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2277              		.loc 1 540 0 is_stmt 0 discriminator 1
 2278 0bba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2279 0bbe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2280 0bc2 9A42     		cmp	r2, r3
 2281 0bc4 DED3     		bcc	.L148
 543:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2282              		.loc 1 543 0 is_stmt 1
 2283 0bc6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2284 0bca 4249     		ldr	r1, .L291
 2285 0bcc 1346     		mov	r3, r2
 2286 0bce DB00     		lsls	r3, r3, #3
 2287 0bd0 9B1A     		subs	r3, r3, r2
 2288 0bd2 1B01     		lsls	r3, r3, #4
 2289 0bd4 0B44     		add	r3, r3, r1
 2290 0bd6 D833     		adds	r3, r3, #216
 2291 0bd8 1B68     		ldr	r3, [r3]
 2292 0bda 1846     		mov	r0, r3
 2293 0bdc FFF7FEFF 		bl	__aeabi_i2f
 2294 0be0 0346     		mov	r3, r0
 2295 0be2 4FF08F41 		mov	r1, #1199570944
 2296 0be6 1846     		mov	r0, r3
 2297 0be8 FFF7FEFF 		bl	__aeabi_fdiv
 2298 0bec 0346     		mov	r3, r0
 2299 0bee 1A46     		mov	r2, r3
 2300 0bf0 07F12003 		add	r3, r7, #32
 2301 0bf4 1A60     		str	r2, [r3]	@ float
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 68


 2302              		.loc 1 544 0
 2303 0bf6 0023     		movs	r3, #0
 2304 0bf8 87F8573C 		strb	r3, [r7, #3159]
 2305 0bfc 1DE0     		b	.L149
 2306              	.L150:
 545:..\src/command_processing.c ****                             }
 2307              		.loc 1 545 0 discriminator 3
 2308 0bfe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2309 0c02 3222     		movs	r2, #50
 2310 0c04 02FB03F3 		mul	r3, r2, r3
 2311 0c08 1A1D     		adds	r2, r3, #4
 2312 0c0a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2313 0c0e 1A44     		add	r2, r2, r3
 2314 0c10 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2315 0c14 1A44     		add	r2, r2, r3
 2316 0c16 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2317 0c1a D31A     		subs	r3, r2, r3
 2318 0c1c 013B     		subs	r3, r3, #1
 2319 0c1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2320 0c22 07F12001 		add	r1, r7, #32
 2321 0c26 0A44     		add	r2, r2, r1
 2322 0c28 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2323 0c2a 07F15802 		add	r2, r7, #88
 2324 0c2e D154     		strb	r1, [r2, r3]
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2325              		.loc 1 544 0 discriminator 3
 2326 0c30 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2327 0c34 0133     		adds	r3, r3, #1
 2328 0c36 87F8573C 		strb	r3, [r7, #3159]
 2329              	.L149:
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2330              		.loc 1 544 0 is_stmt 0 discriminator 1
 2331 0c3a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2332 0c3e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2333 0c42 9A42     		cmp	r2, r3
 2334 0c44 DBD3     		bcc	.L150
 547:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2335              		.loc 1 547 0 is_stmt 1
 2336 0c46 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2337 0c4a 2249     		ldr	r1, .L291
 2338 0c4c 1346     		mov	r3, r2
 2339 0c4e DB00     		lsls	r3, r3, #3
 2340 0c50 9B1A     		subs	r3, r3, r2
 2341 0c52 1B01     		lsls	r3, r3, #4
 2342 0c54 0B44     		add	r3, r3, r1
 2343 0c56 DC33     		adds	r3, r3, #220
 2344 0c58 1B68     		ldr	r3, [r3]
 2345 0c5a 1846     		mov	r0, r3
 2346 0c5c FFF7FEFF 		bl	__aeabi_i2f
 2347 0c60 0346     		mov	r3, r0
 2348 0c62 4FF08F41 		mov	r1, #1199570944
 2349 0c66 1846     		mov	r0, r3
 2350 0c68 FFF7FEFF 		bl	__aeabi_fdiv
 2351 0c6c 0346     		mov	r3, r0
 2352 0c6e 1A46     		mov	r2, r3
 2353 0c70 07F12003 		add	r3, r7, #32
 2354 0c74 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 69


 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2355              		.loc 1 548 0
 2356 0c76 0023     		movs	r3, #0
 2357 0c78 87F8573C 		strb	r3, [r7, #3159]
 2358 0c7c 1EE0     		b	.L151
 2359              	.L152:
 549:..\src/command_processing.c ****                             }
 2360              		.loc 1 549 0 discriminator 3
 2361 0c7e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2362 0c82 3222     		movs	r2, #50
 2363 0c84 02FB03F3 		mul	r3, r2, r3
 2364 0c88 1A1D     		adds	r2, r3, #4
 2365 0c8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2366 0c8e 5B00     		lsls	r3, r3, #1
 2367 0c90 1A44     		add	r2, r2, r3
 2368 0c92 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2369 0c96 1A44     		add	r2, r2, r3
 2370 0c98 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2371 0c9c D31A     		subs	r3, r2, r3
 2372 0c9e 013B     		subs	r3, r3, #1
 2373 0ca0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2374 0ca4 07F12001 		add	r1, r7, #32
 2375 0ca8 0A44     		add	r2, r2, r1
 2376 0caa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2377 0cac 07F15802 		add	r2, r7, #88
 2378 0cb0 D154     		strb	r1, [r2, r3]
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2379              		.loc 1 548 0 discriminator 3
 2380 0cb2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2381 0cb6 0133     		adds	r3, r3, #1
 2382 0cb8 87F8573C 		strb	r3, [r7, #3159]
 2383              	.L151:
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2384              		.loc 1 548 0 is_stmt 0 discriminator 1
 2385 0cbc 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2386 0cc0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2387 0cc4 9A42     		cmp	r2, r3
 2388 0cc6 DAD3     		bcc	.L152
 2389              		.loc 1 552 0 is_stmt 1
 2390 0cc8 00F06FBD 		b	.L113
 2391              	.L118:
 553:..\src/command_processing.c **** 
 554:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 555:..\src/command_processing.c ****                         for (i=0; i<NUM_ITEMS[idx]; i++){
 2392              		.loc 1 555 0
 2393 0ccc 0023     		movs	r3, #0
 2394 0cce 87F8573C 		strb	r3, [r7, #3159]
 2395 0cd2 67E0     		b	.L153
 2396              	.L292:
 2397              		.align	2
 2398              	.L291:
 2399 0cd4 00000000 		.word	c_mem
 2400              	.L156:
 556:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 2401              		.loc 1 556 0
 2402 0cd8 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2403 0cdc D849     		ldr	r1, .L293
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 70


 2404 0cde 1346     		mov	r3, r2
 2405 0ce0 DB00     		lsls	r3, r3, #3
 2406 0ce2 9B1A     		subs	r3, r3, r2
 2407 0ce4 1B01     		lsls	r3, r3, #4
 2408 0ce6 0B44     		add	r3, r3, r1
 2409 0ce8 03F58873 		add	r3, r3, #272
 2410 0cec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2411 0cee 1846     		mov	r0, r3
 2412 0cf0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2413 0cf4 D349     		ldr	r1, .L293+4
 2414 0cf6 0346     		mov	r3, r0
 2415 0cf8 5B00     		lsls	r3, r3, #1
 2416 0cfa 0344     		add	r3, r3, r0
 2417 0cfc 9B00     		lsls	r3, r3, #2
 2418 0cfe 1344     		add	r3, r3, r2
 2419 0d00 6633     		adds	r3, r3, #102
 2420 0d02 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2421 0d06 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2422 0d0a CD48     		ldr	r0, .L293
 2423 0d0c 1346     		mov	r3, r2
 2424 0d0e DB00     		lsls	r3, r3, #3
 2425 0d10 9B1A     		subs	r3, r3, r2
 2426 0d12 1B01     		lsls	r3, r3, #4
 2427 0d14 0344     		add	r3, r3, r0
 2428 0d16 03F58873 		add	r3, r3, #272
 2429 0d1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2430 0d1c 1C46     		mov	r4, r3
 2431 0d1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2432 0d22 C848     		ldr	r0, .L293+4
 2433 0d24 2346     		mov	r3, r4
 2434 0d26 5B00     		lsls	r3, r3, #1
 2435 0d28 2344     		add	r3, r3, r4
 2436 0d2a 1B01     		lsls	r3, r3, #4
 2437 0d2c 0344     		add	r3, r3, r0
 2438 0d2e 1344     		add	r3, r3, r2
 2439 0d30 03F29513 		addw	r3, r3, #405
 2440 0d34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2441 0d36 41FA03F3 		asr	r3, r1, r3
 2442 0d3a 1AB2     		sxth	r2, r3
 2443 0d3c 07F11E03 		add	r3, r7, #30
 2444 0d40 1A80     		strh	r2, [r3]	@ movhi
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 2445              		.loc 1 557 0
 2446 0d42 0023     		movs	r3, #0
 2447 0d44 87F8563C 		strb	r3, [r7, #3158]
 2448 0d48 21E0     		b	.L154
 2449              	.L155:
 558:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 2450              		.loc 1 558 0 discriminator 3
 2451 0d4a 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2452 0d4e 3222     		movs	r2, #50
 2453 0d50 02FB03F3 		mul	r3, r2, r3
 2454 0d54 1A1D     		adds	r2, r3, #4
 2455 0d56 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2456 0d5a 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 2457 0d5e 01FB03F3 		mul	r3, r1, r3
 2458 0d62 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 71


 2459 0d64 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2460 0d68 1A44     		add	r2, r2, r3
 2461 0d6a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2462 0d6e D31A     		subs	r3, r2, r3
 2463 0d70 013B     		subs	r3, r3, #1
 2464 0d72 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2465 0d76 07F11E01 		add	r1, r7, #30
 2466 0d7a 0A44     		add	r2, r2, r1
 2467 0d7c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2468 0d7e 07F15802 		add	r2, r7, #88
 2469 0d82 D154     		strb	r1, [r2, r3]
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 2470              		.loc 1 557 0 discriminator 3
 2471 0d84 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2472 0d88 0133     		adds	r3, r3, #1
 2473 0d8a 87F8563C 		strb	r3, [r7, #3158]
 2474              	.L154:
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 2475              		.loc 1 557 0 is_stmt 0 discriminator 1
 2476 0d8e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2477 0d92 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2478 0d96 9A42     		cmp	r2, r3
 2479 0d98 D7D3     		bcc	.L155
 555:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 2480              		.loc 1 555 0 is_stmt 1 discriminator 2
 2481 0d9a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2482 0d9e 0133     		adds	r3, r3, #1
 2483 0da0 87F8573C 		strb	r3, [r7, #3159]
 2484              	.L153:
 555:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 2485              		.loc 1 555 0 is_stmt 0 discriminator 1
 2486 0da4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2487 0da8 3A1D     		adds	r2, r7, #4
 2488 0daa 1268     		ldr	r2, [r2]
 2489 0dac 1344     		add	r3, r3, r2
 2490 0dae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2491 0db0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2492 0db4 9A42     		cmp	r2, r3
 2493 0db6 8FD3     		bcc	.L156
 559:..\src/command_processing.c ****                             }
 560:..\src/command_processing.c ****                         }
 561:..\src/command_processing.c ****                         break;
 2494              		.loc 1 561 0 is_stmt 1
 2495 0db8 00F0F7BC 		b	.L113
 2496              	.L119:
 562:..\src/command_processing.c ****                 
 563:..\src/command_processing.c ****                     case 11:        //Position limits
 564:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 2497              		.loc 1 564 0
 2498 0dbc 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2499 0dc0 A049     		ldr	r1, .L293+4
 2500 0dc2 1346     		mov	r3, r2
 2501 0dc4 DB00     		lsls	r3, r3, #3
 2502 0dc6 9B1A     		subs	r3, r3, r2
 2503 0dc8 1B01     		lsls	r3, r3, #4
 2504 0dca 0B44     		add	r3, r3, r1
 2505 0dcc E433     		adds	r3, r3, #228
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 72


 2506 0dce 1968     		ldr	r1, [r3]
 2507 0dd0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2508 0dd4 9A48     		ldr	r0, .L293
 2509 0dd6 1346     		mov	r3, r2
 2510 0dd8 DB00     		lsls	r3, r3, #3
 2511 0dda 9B1A     		subs	r3, r3, r2
 2512 0ddc 1B01     		lsls	r3, r3, #4
 2513 0dde 0344     		add	r3, r3, r0
 2514 0de0 03F58873 		add	r3, r3, #272
 2515 0de4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2516 0de6 1846     		mov	r0, r3
 2517 0de8 964A     		ldr	r2, .L293+4
 2518 0dea 0346     		mov	r3, r0
 2519 0dec 5B00     		lsls	r3, r3, #1
 2520 0dee 0344     		add	r3, r3, r0
 2521 0df0 1B01     		lsls	r3, r3, #4
 2522 0df2 1344     		add	r3, r3, r2
 2523 0df4 03F29513 		addw	r3, r3, #405
 2524 0df8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2525 0dfa 41FA03F2 		asr	r2, r1, r3
 2526 0dfe 07F11803 		add	r3, r7, #24
 2527 0e02 1A60     		str	r2, [r3]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2528              		.loc 1 565 0
 2529 0e04 0023     		movs	r3, #0
 2530 0e06 87F8563C 		strb	r3, [r7, #3158]
 2531 0e0a 1AE0     		b	.L157
 2532              	.L158:
 566:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 2533              		.loc 1 566 0 discriminator 3
 2534 0e0c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2535 0e10 3222     		movs	r2, #50
 2536 0e12 02FB03F3 		mul	r3, r2, r3
 2537 0e16 1A1D     		adds	r2, r3, #4
 2538 0e18 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2539 0e1c 1A44     		add	r2, r2, r3
 2540 0e1e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2541 0e22 D31A     		subs	r3, r2, r3
 2542 0e24 013B     		subs	r3, r3, #1
 2543 0e26 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2544 0e2a 07F11801 		add	r1, r7, #24
 2545 0e2e 0A44     		add	r2, r2, r1
 2546 0e30 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2547 0e32 07F15802 		add	r2, r7, #88
 2548 0e36 D154     		strb	r1, [r2, r3]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2549              		.loc 1 565 0 discriminator 3
 2550 0e38 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2551 0e3c 0133     		adds	r3, r3, #1
 2552 0e3e 87F8563C 		strb	r3, [r7, #3158]
 2553              	.L157:
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2554              		.loc 1 565 0 is_stmt 0 discriminator 1
 2555 0e42 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2556 0e46 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2557 0e4a 9A42     		cmp	r2, r3
 2558 0e4c DED3     		bcc	.L158
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 73


 567:..\src/command_processing.c ****                         }
 568:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 2559              		.loc 1 568 0 is_stmt 1
 2560 0e4e 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2561 0e52 7C49     		ldr	r1, .L293+4
 2562 0e54 1346     		mov	r3, r2
 2563 0e56 DB00     		lsls	r3, r3, #3
 2564 0e58 9B1A     		subs	r3, r3, r2
 2565 0e5a 1B01     		lsls	r3, r3, #4
 2566 0e5c 0B44     		add	r3, r3, r1
 2567 0e5e E833     		adds	r3, r3, #232
 2568 0e60 1968     		ldr	r1, [r3]
 2569 0e62 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2570 0e66 7648     		ldr	r0, .L293
 2571 0e68 1346     		mov	r3, r2
 2572 0e6a DB00     		lsls	r3, r3, #3
 2573 0e6c 9B1A     		subs	r3, r3, r2
 2574 0e6e 1B01     		lsls	r3, r3, #4
 2575 0e70 0344     		add	r3, r3, r0
 2576 0e72 03F58873 		add	r3, r3, #272
 2577 0e76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2578 0e78 1846     		mov	r0, r3
 2579 0e7a 724A     		ldr	r2, .L293+4
 2580 0e7c 0346     		mov	r3, r0
 2581 0e7e 5B00     		lsls	r3, r3, #1
 2582 0e80 0344     		add	r3, r3, r0
 2583 0e82 1B01     		lsls	r3, r3, #4
 2584 0e84 1344     		add	r3, r3, r2
 2585 0e86 03F29513 		addw	r3, r3, #405
 2586 0e8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2587 0e8c 41FA03F2 		asr	r2, r1, r3
 2588 0e90 07F11803 		add	r3, r7, #24
 2589 0e94 1A60     		str	r2, [r3]
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2590              		.loc 1 569 0
 2591 0e96 0023     		movs	r3, #0
 2592 0e98 87F8563C 		strb	r3, [r7, #3158]
 2593 0e9c 1DE0     		b	.L159
 2594              	.L160:
 570:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 2595              		.loc 1 570 0 discriminator 3
 2596 0e9e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2597 0ea2 3222     		movs	r2, #50
 2598 0ea4 02FB03F3 		mul	r3, r2, r3
 2599 0ea8 1A1D     		adds	r2, r3, #4
 2600 0eaa 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2601 0eae 1A44     		add	r2, r2, r3
 2602 0eb0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2603 0eb4 1A44     		add	r2, r2, r3
 2604 0eb6 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2605 0eba D31A     		subs	r3, r2, r3
 2606 0ebc 013B     		subs	r3, r3, #1
 2607 0ebe 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2608 0ec2 07F11801 		add	r1, r7, #24
 2609 0ec6 0A44     		add	r2, r2, r1
 2610 0ec8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2611 0eca 07F15802 		add	r2, r7, #88
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 74


 2612 0ece D154     		strb	r1, [r2, r3]
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2613              		.loc 1 569 0 discriminator 3
 2614 0ed0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2615 0ed4 0133     		adds	r3, r3, #1
 2616 0ed6 87F8563C 		strb	r3, [r7, #3158]
 2617              	.L159:
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2618              		.loc 1 569 0 is_stmt 0 discriminator 1
 2619 0eda 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2620 0ede 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2621 0ee2 9A42     		cmp	r2, r3
 2622 0ee4 DBD3     		bcc	.L160
 571:..\src/command_processing.c ****                         }
 572:..\src/command_processing.c ****                         break;            
 2623              		.loc 1 572 0 is_stmt 1
 2624 0ee6 00F060BC 		b	.L113
 2625              	.L120:
 573:..\src/command_processing.c **** 
 574:..\src/command_processing.c ****                     case 23:        //Rest Position
 575:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 2626              		.loc 1 575 0
 2627 0eea 564B     		ldr	r3, .L293+4
 2628 0eec D3F8A012 		ldr	r1, [r3, #672]
 2629 0ef0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2630 0ef4 5248     		ldr	r0, .L293
 2631 0ef6 1346     		mov	r3, r2
 2632 0ef8 DB00     		lsls	r3, r3, #3
 2633 0efa 9B1A     		subs	r3, r3, r2
 2634 0efc 1B01     		lsls	r3, r3, #4
 2635 0efe 0344     		add	r3, r3, r0
 2636 0f00 03F58873 		add	r3, r3, #272
 2637 0f04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2638 0f06 1846     		mov	r0, r3
 2639 0f08 4E4A     		ldr	r2, .L293+4
 2640 0f0a 0346     		mov	r3, r0
 2641 0f0c 5B00     		lsls	r3, r3, #1
 2642 0f0e 0344     		add	r3, r3, r0
 2643 0f10 1B01     		lsls	r3, r3, #4
 2644 0f12 1344     		add	r3, r3, r2
 2645 0f14 03F29513 		addw	r3, r3, #405
 2646 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2647 0f1a 41FA03F2 		asr	r2, r1, r3
 2648 0f1e 07F11803 		add	r3, r7, #24
 2649 0f22 1A60     		str	r2, [r3]
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2650              		.loc 1 576 0
 2651 0f24 0023     		movs	r3, #0
 2652 0f26 87F8563C 		strb	r3, [r7, #3158]
 2653 0f2a 1AE0     		b	.L161
 2654              	.L162:
 577:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 2655              		.loc 1 577 0 discriminator 3
 2656 0f2c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2657 0f30 3222     		movs	r2, #50
 2658 0f32 02FB03F3 		mul	r3, r2, r3
 2659 0f36 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 75


 2660 0f38 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2661 0f3c 1A44     		add	r2, r2, r3
 2662 0f3e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2663 0f42 D31A     		subs	r3, r2, r3
 2664 0f44 013B     		subs	r3, r3, #1
 2665 0f46 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2666 0f4a 07F11801 		add	r1, r7, #24
 2667 0f4e 0A44     		add	r2, r2, r1
 2668 0f50 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2669 0f52 07F15802 		add	r2, r7, #88
 2670 0f56 D154     		strb	r1, [r2, r3]
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2671              		.loc 1 576 0 discriminator 3
 2672 0f58 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2673 0f5c 0133     		adds	r3, r3, #1
 2674 0f5e 87F8563C 		strb	r3, [r7, #3158]
 2675              	.L161:
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2676              		.loc 1 576 0 is_stmt 0 discriminator 1
 2677 0f62 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2678 0f66 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2679 0f6a 9A42     		cmp	r2, r3
 2680 0f6c DED3     		bcc	.L162
 578:..\src/command_processing.c ****                         }
 579:..\src/command_processing.c ****                         break; 
 2681              		.loc 1 579 0 is_stmt 1
 2682 0f6e 00F01CBC 		b	.L113
 2683              	.L121:
 580:..\src/command_processing.c ****                         
 581:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 582:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2684              		.loc 1 582 0
 2685 0f72 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2686 0f76 3349     		ldr	r1, .L293+4
 2687 0f78 1346     		mov	r3, r2
 2688 0f7a DB00     		lsls	r3, r3, #3
 2689 0f7c 9B1A     		subs	r3, r3, r2
 2690 0f7e 1B01     		lsls	r3, r3, #4
 2691 0f80 0B44     		add	r3, r3, r1
 2692 0f82 03F20F13 		addw	r3, r3, #271
 2693 0f86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2694 0f88 032B     		cmp	r3, #3
 2695 0f8a 00F0C380 		beq	.L163
 583:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 2696              		.loc 1 583 0
 2697 0f8e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2698 0f92 2C49     		ldr	r1, .L293+4
 2699 0f94 1346     		mov	r3, r2
 2700 0f96 DB00     		lsls	r3, r3, #3
 2701 0f98 9B1A     		subs	r3, r3, r2
 2702 0f9a 1B01     		lsls	r3, r3, #4
 2703 0f9c 0B44     		add	r3, r3, r1
 2704 0f9e B033     		adds	r3, r3, #176
 2705 0fa0 1B68     		ldr	r3, [r3]
 2706 0fa2 1846     		mov	r0, r3
 2707 0fa4 FFF7FEFF 		bl	__aeabi_i2f
 2708 0fa8 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 76


 2709 0faa 4FF08F41 		mov	r1, #1199570944
 2710 0fae 1846     		mov	r0, r3
 2711 0fb0 FFF7FEFF 		bl	__aeabi_fdiv
 2712 0fb4 0346     		mov	r3, r0
 2713 0fb6 1A46     		mov	r2, r3
 2714 0fb8 07F12003 		add	r3, r7, #32
 2715 0fbc 1A60     		str	r2, [r3]	@ float
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2716              		.loc 1 584 0
 2717 0fbe 0023     		movs	r3, #0
 2718 0fc0 87F8573C 		strb	r3, [r7, #3159]
 2719 0fc4 1AE0     		b	.L164
 2720              	.L165:
 585:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2721              		.loc 1 585 0 discriminator 3
 2722 0fc6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2723 0fca 3222     		movs	r2, #50
 2724 0fcc 02FB03F3 		mul	r3, r2, r3
 2725 0fd0 1A1D     		adds	r2, r3, #4
 2726 0fd2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2727 0fd6 1A44     		add	r2, r2, r3
 2728 0fd8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2729 0fdc D31A     		subs	r3, r2, r3
 2730 0fde 013B     		subs	r3, r3, #1
 2731 0fe0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2732 0fe4 07F12001 		add	r1, r7, #32
 2733 0fe8 0A44     		add	r2, r2, r1
 2734 0fea 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2735 0fec 07F15802 		add	r2, r7, #88
 2736 0ff0 D154     		strb	r1, [r2, r3]
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2737              		.loc 1 584 0 discriminator 3
 2738 0ff2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2739 0ff6 0133     		adds	r3, r3, #1
 2740 0ff8 87F8573C 		strb	r3, [r7, #3159]
 2741              	.L164:
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2742              		.loc 1 584 0 is_stmt 0 discriminator 1
 2743 0ffc 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2744 1000 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2745 1004 9A42     		cmp	r2, r3
 2746 1006 DED3     		bcc	.L165
 586:..\src/command_processing.c ****                             }
 587:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 2747              		.loc 1 587 0 is_stmt 1
 2748 1008 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2749 100c 0D49     		ldr	r1, .L293+4
 2750 100e 1346     		mov	r3, r2
 2751 1010 DB00     		lsls	r3, r3, #3
 2752 1012 9B1A     		subs	r3, r3, r2
 2753 1014 1B01     		lsls	r3, r3, #4
 2754 1016 0B44     		add	r3, r3, r1
 2755 1018 B433     		adds	r3, r3, #180
 2756 101a 1B68     		ldr	r3, [r3]
 2757 101c 1846     		mov	r0, r3
 2758 101e FFF7FEFF 		bl	__aeabi_i2f
 2759 1022 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 77


 2760 1024 4FF08F41 		mov	r1, #1199570944
 2761 1028 1846     		mov	r0, r3
 2762 102a FFF7FEFF 		bl	__aeabi_fdiv
 2763 102e 0346     		mov	r3, r0
 2764 1030 1A46     		mov	r2, r3
 2765 1032 07F12003 		add	r3, r7, #32
 2766 1036 1A60     		str	r2, [r3]	@ float
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2767              		.loc 1 588 0
 2768 1038 0023     		movs	r3, #0
 2769 103a 87F8573C 		strb	r3, [r7, #3159]
 2770 103e 21E0     		b	.L166
 2771              	.L294:
 2772              		.align	2
 2773              	.L293:
 2774 1040 00000000 		.word	g_mem
 2775 1044 00000000 		.word	c_mem
 2776              	.L167:
 589:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2777              		.loc 1 589 0 discriminator 3
 2778 1048 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2779 104c 3222     		movs	r2, #50
 2780 104e 02FB03F3 		mul	r3, r2, r3
 2781 1052 1A1D     		adds	r2, r3, #4
 2782 1054 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2783 1058 1A44     		add	r2, r2, r3
 2784 105a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2785 105e 1A44     		add	r2, r2, r3
 2786 1060 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2787 1064 D31A     		subs	r3, r2, r3
 2788 1066 013B     		subs	r3, r3, #1
 2789 1068 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2790 106c 07F12001 		add	r1, r7, #32
 2791 1070 0A44     		add	r2, r2, r1
 2792 1072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2793 1074 07F15802 		add	r2, r7, #88
 2794 1078 D154     		strb	r1, [r2, r3]
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2795              		.loc 1 588 0 discriminator 3
 2796 107a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2797 107e 0133     		adds	r3, r3, #1
 2798 1080 87F8573C 		strb	r3, [r7, #3159]
 2799              	.L166:
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2800              		.loc 1 588 0 is_stmt 0 discriminator 1
 2801 1084 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2802 1088 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2803 108c 9A42     		cmp	r2, r3
 2804 108e DBD3     		bcc	.L167
 590:..\src/command_processing.c ****                             }
 591:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 2805              		.loc 1 591 0 is_stmt 1
 2806 1090 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2807 1094 D249     		ldr	r1, .L295
 2808 1096 1346     		mov	r3, r2
 2809 1098 DB00     		lsls	r3, r3, #3
 2810 109a 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 78


 2811 109c 1B01     		lsls	r3, r3, #4
 2812 109e 0B44     		add	r3, r3, r1
 2813 10a0 B833     		adds	r3, r3, #184
 2814 10a2 1B68     		ldr	r3, [r3]
 2815 10a4 1846     		mov	r0, r3
 2816 10a6 FFF7FEFF 		bl	__aeabi_i2f
 2817 10aa 0346     		mov	r3, r0
 2818 10ac 4FF08F41 		mov	r1, #1199570944
 2819 10b0 1846     		mov	r0, r3
 2820 10b2 FFF7FEFF 		bl	__aeabi_fdiv
 2821 10b6 0346     		mov	r3, r0
 2822 10b8 1A46     		mov	r2, r3
 2823 10ba 07F12003 		add	r3, r7, #32
 2824 10be 1A60     		str	r2, [r3]	@ float
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2825              		.loc 1 592 0
 2826 10c0 0023     		movs	r3, #0
 2827 10c2 87F8573C 		strb	r3, [r7, #3159]
 2828 10c6 1EE0     		b	.L168
 2829              	.L169:
 593:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2830              		.loc 1 593 0 discriminator 3
 2831 10c8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2832 10cc 3222     		movs	r2, #50
 2833 10ce 02FB03F3 		mul	r3, r2, r3
 2834 10d2 1A1D     		adds	r2, r3, #4
 2835 10d4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2836 10d8 5B00     		lsls	r3, r3, #1
 2837 10da 1A44     		add	r2, r2, r3
 2838 10dc 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2839 10e0 1A44     		add	r2, r2, r3
 2840 10e2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2841 10e6 D31A     		subs	r3, r2, r3
 2842 10e8 013B     		subs	r3, r3, #1
 2843 10ea 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2844 10ee 07F12001 		add	r1, r7, #32
 2845 10f2 0A44     		add	r2, r2, r1
 2846 10f4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2847 10f6 07F15802 		add	r2, r7, #88
 2848 10fa D154     		strb	r1, [r2, r3]
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2849              		.loc 1 592 0 discriminator 3
 2850 10fc 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2851 1100 0133     		adds	r3, r3, #1
 2852 1102 87F8573C 		strb	r3, [r7, #3159]
 2853              	.L168:
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2854              		.loc 1 592 0 is_stmt 0 discriminator 1
 2855 1106 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2856 110a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2857 110e 9A42     		cmp	r2, r3
 2858 1110 DAD3     		bcc	.L169
 594:..\src/command_processing.c ****                             } 
 595:..\src/command_processing.c ****                         }
 596:..\src/command_processing.c ****                         else {
 597:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 79


 599:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 600:..\src/command_processing.c ****                             }
 601:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 604:..\src/command_processing.c ****                             }
 605:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 608:..\src/command_processing.c ****                             }
 609:..\src/command_processing.c ****                         }
 610:..\src/command_processing.c ****                         break;
 2859              		.loc 1 610 0 is_stmt 1
 2860 1112 4AE3     		b	.L113
 2861              	.L163:
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2862              		.loc 1 597 0
 2863 1114 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2864 1118 B149     		ldr	r1, .L295
 2865 111a 1346     		mov	r3, r2
 2866 111c DB00     		lsls	r3, r3, #3
 2867 111e 9B1A     		subs	r3, r3, r2
 2868 1120 1B01     		lsls	r3, r3, #4
 2869 1122 0B44     		add	r3, r3, r1
 2870 1124 C833     		adds	r3, r3, #200
 2871 1126 1B68     		ldr	r3, [r3]
 2872 1128 1846     		mov	r0, r3
 2873 112a FFF7FEFF 		bl	__aeabi_i2f
 2874 112e 0346     		mov	r3, r0
 2875 1130 4FF08F41 		mov	r1, #1199570944
 2876 1134 1846     		mov	r0, r3
 2877 1136 FFF7FEFF 		bl	__aeabi_fdiv
 2878 113a 0346     		mov	r3, r0
 2879 113c 1A46     		mov	r2, r3
 2880 113e 07F12003 		add	r3, r7, #32
 2881 1142 1A60     		str	r2, [r3]	@ float
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2882              		.loc 1 598 0
 2883 1144 0023     		movs	r3, #0
 2884 1146 87F8573C 		strb	r3, [r7, #3159]
 2885 114a 1AE0     		b	.L171
 2886              	.L172:
 599:..\src/command_processing.c ****                             }
 2887              		.loc 1 599 0 discriminator 3
 2888 114c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2889 1150 3222     		movs	r2, #50
 2890 1152 02FB03F3 		mul	r3, r2, r3
 2891 1156 1A1D     		adds	r2, r3, #4
 2892 1158 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2893 115c 1A44     		add	r2, r2, r3
 2894 115e 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2895 1162 D31A     		subs	r3, r2, r3
 2896 1164 013B     		subs	r3, r3, #1
 2897 1166 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2898 116a 07F12001 		add	r1, r7, #32
 2899 116e 0A44     		add	r2, r2, r1
 2900 1170 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 80


 2901 1172 07F15802 		add	r2, r7, #88
 2902 1176 D154     		strb	r1, [r2, r3]
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2903              		.loc 1 598 0 discriminator 3
 2904 1178 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2905 117c 0133     		adds	r3, r3, #1
 2906 117e 87F8573C 		strb	r3, [r7, #3159]
 2907              	.L171:
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2908              		.loc 1 598 0 is_stmt 0 discriminator 1
 2909 1182 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2910 1186 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2911 118a 9A42     		cmp	r2, r3
 2912 118c DED3     		bcc	.L172
 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2913              		.loc 1 601 0 is_stmt 1
 2914 118e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2915 1192 9349     		ldr	r1, .L295
 2916 1194 1346     		mov	r3, r2
 2917 1196 DB00     		lsls	r3, r3, #3
 2918 1198 9B1A     		subs	r3, r3, r2
 2919 119a 1B01     		lsls	r3, r3, #4
 2920 119c 0B44     		add	r3, r3, r1
 2921 119e CC33     		adds	r3, r3, #204
 2922 11a0 1B68     		ldr	r3, [r3]
 2923 11a2 1846     		mov	r0, r3
 2924 11a4 FFF7FEFF 		bl	__aeabi_i2f
 2925 11a8 0346     		mov	r3, r0
 2926 11aa 4FF08F41 		mov	r1, #1199570944
 2927 11ae 1846     		mov	r0, r3
 2928 11b0 FFF7FEFF 		bl	__aeabi_fdiv
 2929 11b4 0346     		mov	r3, r0
 2930 11b6 1A46     		mov	r2, r3
 2931 11b8 07F12003 		add	r3, r7, #32
 2932 11bc 1A60     		str	r2, [r3]	@ float
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2933              		.loc 1 602 0
 2934 11be 0023     		movs	r3, #0
 2935 11c0 87F8573C 		strb	r3, [r7, #3159]
 2936 11c4 1DE0     		b	.L173
 2937              	.L174:
 603:..\src/command_processing.c ****                             }
 2938              		.loc 1 603 0 discriminator 3
 2939 11c6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2940 11ca 3222     		movs	r2, #50
 2941 11cc 02FB03F3 		mul	r3, r2, r3
 2942 11d0 1A1D     		adds	r2, r3, #4
 2943 11d2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2944 11d6 1A44     		add	r2, r2, r3
 2945 11d8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2946 11dc 1A44     		add	r2, r2, r3
 2947 11de 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2948 11e2 D31A     		subs	r3, r2, r3
 2949 11e4 013B     		subs	r3, r3, #1
 2950 11e6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2951 11ea 07F12001 		add	r1, r7, #32
 2952 11ee 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 81


 2953 11f0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2954 11f2 07F15802 		add	r2, r7, #88
 2955 11f6 D154     		strb	r1, [r2, r3]
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2956              		.loc 1 602 0 discriminator 3
 2957 11f8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2958 11fc 0133     		adds	r3, r3, #1
 2959 11fe 87F8573C 		strb	r3, [r7, #3159]
 2960              	.L173:
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2961              		.loc 1 602 0 is_stmt 0 discriminator 1
 2962 1202 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2963 1206 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2964 120a 9A42     		cmp	r2, r3
 2965 120c DBD3     		bcc	.L174
 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2966              		.loc 1 605 0 is_stmt 1
 2967 120e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2968 1212 7349     		ldr	r1, .L295
 2969 1214 1346     		mov	r3, r2
 2970 1216 DB00     		lsls	r3, r3, #3
 2971 1218 9B1A     		subs	r3, r3, r2
 2972 121a 1B01     		lsls	r3, r3, #4
 2973 121c 0B44     		add	r3, r3, r1
 2974 121e D033     		adds	r3, r3, #208
 2975 1220 1B68     		ldr	r3, [r3]
 2976 1222 1846     		mov	r0, r3
 2977 1224 FFF7FEFF 		bl	__aeabi_i2f
 2978 1228 0346     		mov	r3, r0
 2979 122a 4FF08F41 		mov	r1, #1199570944
 2980 122e 1846     		mov	r0, r3
 2981 1230 FFF7FEFF 		bl	__aeabi_fdiv
 2982 1234 0346     		mov	r3, r0
 2983 1236 1A46     		mov	r2, r3
 2984 1238 07F12003 		add	r3, r7, #32
 2985 123c 1A60     		str	r2, [r3]	@ float
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2986              		.loc 1 606 0
 2987 123e 0023     		movs	r3, #0
 2988 1240 87F8573C 		strb	r3, [r7, #3159]
 2989 1244 1EE0     		b	.L175
 2990              	.L176:
 607:..\src/command_processing.c ****                             }
 2991              		.loc 1 607 0 discriminator 3
 2992 1246 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2993 124a 3222     		movs	r2, #50
 2994 124c 02FB03F3 		mul	r3, r2, r3
 2995 1250 1A1D     		adds	r2, r3, #4
 2996 1252 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2997 1256 5B00     		lsls	r3, r3, #1
 2998 1258 1A44     		add	r2, r2, r3
 2999 125a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3000 125e 1A44     		add	r2, r2, r3
 3001 1260 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3002 1264 D31A     		subs	r3, r2, r3
 3003 1266 013B     		subs	r3, r3, #1
 3004 1268 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 82


 3005 126c 07F12001 		add	r1, r7, #32
 3006 1270 0A44     		add	r2, r2, r1
 3007 1272 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3008 1274 07F15802 		add	r2, r7, #88
 3009 1278 D154     		strb	r1, [r2, r3]
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3010              		.loc 1 606 0 discriminator 3
 3011 127a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3012 127e 0133     		adds	r3, r3, #1
 3013 1280 87F8573C 		strb	r3, [r7, #3159]
 3014              	.L175:
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3015              		.loc 1 606 0 is_stmt 0 discriminator 1
 3016 1284 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3017 1288 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3018 128c 9A42     		cmp	r2, r3
 3019 128e DAD3     		bcc	.L176
 3020              		.loc 1 610 0 is_stmt 1
 3021 1290 8BE2     		b	.L113
 3022              	.L122:
 611:..\src/command_processing.c ****                         
 612:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 613:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3023              		.loc 1 613 0
 3024 1292 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3025 1296 5249     		ldr	r1, .L295
 3026 1298 1346     		mov	r3, r2
 3027 129a DB00     		lsls	r3, r3, #3
 3028 129c 9B1A     		subs	r3, r3, r2
 3029 129e 1B01     		lsls	r3, r3, #4
 3030 12a0 0B44     		add	r3, r3, r1
 3031 12a2 03F20F13 		addw	r3, r3, #271
 3032 12a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3033 12a8 032B     		cmp	r3, #3
 3034 12aa 00F0C180 		beq	.L177
 614:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3035              		.loc 1 614 0
 3036 12ae 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3037 12b2 4B49     		ldr	r1, .L295
 3038 12b4 1346     		mov	r3, r2
 3039 12b6 DB00     		lsls	r3, r3, #3
 3040 12b8 9B1A     		subs	r3, r3, r2
 3041 12ba 1B01     		lsls	r3, r3, #4
 3042 12bc 0B44     		add	r3, r3, r1
 3043 12be BC33     		adds	r3, r3, #188
 3044 12c0 1B68     		ldr	r3, [r3]
 3045 12c2 1846     		mov	r0, r3
 3046 12c4 FFF7FEFF 		bl	__aeabi_i2f
 3047 12c8 0346     		mov	r3, r0
 3048 12ca 4FF08F41 		mov	r1, #1199570944
 3049 12ce 1846     		mov	r0, r3
 3050 12d0 FFF7FEFF 		bl	__aeabi_fdiv
 3051 12d4 0346     		mov	r3, r0
 3052 12d6 1A46     		mov	r2, r3
 3053 12d8 07F12003 		add	r3, r7, #32
 3054 12dc 1A60     		str	r2, [r3]	@ float
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 83


 3055              		.loc 1 615 0
 3056 12de 0023     		movs	r3, #0
 3057 12e0 87F8573C 		strb	r3, [r7, #3159]
 3058 12e4 1AE0     		b	.L178
 3059              	.L179:
 616:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3060              		.loc 1 616 0 discriminator 3
 3061 12e6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3062 12ea 3222     		movs	r2, #50
 3063 12ec 02FB03F3 		mul	r3, r2, r3
 3064 12f0 1A1D     		adds	r2, r3, #4
 3065 12f2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3066 12f6 1A44     		add	r2, r2, r3
 3067 12f8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3068 12fc D31A     		subs	r3, r2, r3
 3069 12fe 013B     		subs	r3, r3, #1
 3070 1300 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3071 1304 07F12001 		add	r1, r7, #32
 3072 1308 0A44     		add	r2, r2, r1
 3073 130a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3074 130c 07F15802 		add	r2, r7, #88
 3075 1310 D154     		strb	r1, [r2, r3]
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3076              		.loc 1 615 0 discriminator 3
 3077 1312 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3078 1316 0133     		adds	r3, r3, #1
 3079 1318 87F8573C 		strb	r3, [r7, #3159]
 3080              	.L178:
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3081              		.loc 1 615 0 is_stmt 0 discriminator 1
 3082 131c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3083 1320 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3084 1324 9A42     		cmp	r2, r3
 3085 1326 DED3     		bcc	.L179
 617:..\src/command_processing.c ****                             }
 618:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3086              		.loc 1 618 0 is_stmt 1
 3087 1328 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3088 132c 2C49     		ldr	r1, .L295
 3089 132e 1346     		mov	r3, r2
 3090 1330 DB00     		lsls	r3, r3, #3
 3091 1332 9B1A     		subs	r3, r3, r2
 3092 1334 1B01     		lsls	r3, r3, #4
 3093 1336 0B44     		add	r3, r3, r1
 3094 1338 C033     		adds	r3, r3, #192
 3095 133a 1B68     		ldr	r3, [r3]
 3096 133c 1846     		mov	r0, r3
 3097 133e FFF7FEFF 		bl	__aeabi_i2f
 3098 1342 0346     		mov	r3, r0
 3099 1344 4FF08F41 		mov	r1, #1199570944
 3100 1348 1846     		mov	r0, r3
 3101 134a FFF7FEFF 		bl	__aeabi_fdiv
 3102 134e 0346     		mov	r3, r0
 3103 1350 1A46     		mov	r2, r3
 3104 1352 07F12003 		add	r3, r7, #32
 3105 1356 1A60     		str	r2, [r3]	@ float
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 84


 3106              		.loc 1 619 0
 3107 1358 0023     		movs	r3, #0
 3108 135a 87F8573C 		strb	r3, [r7, #3159]
 3109 135e 1DE0     		b	.L180
 3110              	.L181:
 620:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3111              		.loc 1 620 0 discriminator 3
 3112 1360 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3113 1364 3222     		movs	r2, #50
 3114 1366 02FB03F3 		mul	r3, r2, r3
 3115 136a 1A1D     		adds	r2, r3, #4
 3116 136c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3117 1370 1A44     		add	r2, r2, r3
 3118 1372 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3119 1376 1A44     		add	r2, r2, r3
 3120 1378 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3121 137c D31A     		subs	r3, r2, r3
 3122 137e 013B     		subs	r3, r3, #1
 3123 1380 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3124 1384 07F12001 		add	r1, r7, #32
 3125 1388 0A44     		add	r2, r2, r1
 3126 138a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3127 138c 07F15802 		add	r2, r7, #88
 3128 1390 D154     		strb	r1, [r2, r3]
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3129              		.loc 1 619 0 discriminator 3
 3130 1392 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3131 1396 0133     		adds	r3, r3, #1
 3132 1398 87F8573C 		strb	r3, [r7, #3159]
 3133              	.L180:
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3134              		.loc 1 619 0 is_stmt 0 discriminator 1
 3135 139c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3136 13a0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3137 13a4 9A42     		cmp	r2, r3
 3138 13a6 DBD3     		bcc	.L181
 621:..\src/command_processing.c ****                             }
 622:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 3139              		.loc 1 622 0 is_stmt 1
 3140 13a8 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3141 13ac 0C49     		ldr	r1, .L295
 3142 13ae 1346     		mov	r3, r2
 3143 13b0 DB00     		lsls	r3, r3, #3
 3144 13b2 9B1A     		subs	r3, r3, r2
 3145 13b4 1B01     		lsls	r3, r3, #4
 3146 13b6 0B44     		add	r3, r3, r1
 3147 13b8 C433     		adds	r3, r3, #196
 3148 13ba 1B68     		ldr	r3, [r3]
 3149 13bc 1846     		mov	r0, r3
 3150 13be FFF7FEFF 		bl	__aeabi_i2f
 3151 13c2 0346     		mov	r3, r0
 3152 13c4 4FF08F41 		mov	r1, #1199570944
 3153 13c8 1846     		mov	r0, r3
 3154 13ca FFF7FEFF 		bl	__aeabi_fdiv
 3155 13ce 0346     		mov	r3, r0
 3156 13d0 1A46     		mov	r2, r3
 3157 13d2 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 85


 3158 13d6 1A60     		str	r2, [r3]	@ float
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3159              		.loc 1 623 0
 3160 13d8 0023     		movs	r3, #0
 3161 13da 87F8573C 		strb	r3, [r7, #3159]
 3162 13de 20E0     		b	.L182
 3163              	.L296:
 3164              		.align	2
 3165              	.L295:
 3166 13e0 00000000 		.word	c_mem
 3167              	.L183:
 624:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3168              		.loc 1 624 0 discriminator 3
 3169 13e4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3170 13e8 3222     		movs	r2, #50
 3171 13ea 02FB03F3 		mul	r3, r2, r3
 3172 13ee 1A1D     		adds	r2, r3, #4
 3173 13f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3174 13f4 5B00     		lsls	r3, r3, #1
 3175 13f6 1A44     		add	r2, r2, r3
 3176 13f8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3177 13fc 1A44     		add	r2, r2, r3
 3178 13fe 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3179 1402 D31A     		subs	r3, r2, r3
 3180 1404 013B     		subs	r3, r3, #1
 3181 1406 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3182 140a 07F12001 		add	r1, r7, #32
 3183 140e 0A44     		add	r2, r2, r1
 3184 1410 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3185 1412 07F15802 		add	r2, r7, #88
 3186 1416 D154     		strb	r1, [r2, r3]
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3187              		.loc 1 623 0 discriminator 3
 3188 1418 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3189 141c 0133     		adds	r3, r3, #1
 3190 141e 87F8573C 		strb	r3, [r7, #3159]
 3191              	.L182:
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3192              		.loc 1 623 0 is_stmt 0 discriminator 1
 3193 1422 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3194 1426 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3195 142a 9A42     		cmp	r2, r3
 3196 142c DAD3     		bcc	.L183
 625:..\src/command_processing.c ****                             }
 626:..\src/command_processing.c ****                         }
 627:..\src/command_processing.c ****                         else {
 628:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 630:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 631:..\src/command_processing.c ****                             }
 632:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 633:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 634:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 635:..\src/command_processing.c ****                             }
 636:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 637:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 638:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 86


 639:..\src/command_processing.c ****                             }
 640:..\src/command_processing.c ****                         }            
 641:..\src/command_processing.c ****                         break;  
 3197              		.loc 1 641 0 is_stmt 1
 3198 142e BCE1     		b	.L113
 3199              	.L177:
 628:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3200              		.loc 1 628 0
 3201 1430 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3202 1434 DA49     		ldr	r1, .L297
 3203 1436 1346     		mov	r3, r2
 3204 1438 DB00     		lsls	r3, r3, #3
 3205 143a 9B1A     		subs	r3, r3, r2
 3206 143c 1B01     		lsls	r3, r3, #4
 3207 143e 0B44     		add	r3, r3, r1
 3208 1440 D433     		adds	r3, r3, #212
 3209 1442 1B68     		ldr	r3, [r3]
 3210 1444 1846     		mov	r0, r3
 3211 1446 FFF7FEFF 		bl	__aeabi_i2f
 3212 144a 0346     		mov	r3, r0
 3213 144c 4FF08F41 		mov	r1, #1199570944
 3214 1450 1846     		mov	r0, r3
 3215 1452 FFF7FEFF 		bl	__aeabi_fdiv
 3216 1456 0346     		mov	r3, r0
 3217 1458 1A46     		mov	r2, r3
 3218 145a 07F12003 		add	r3, r7, #32
 3219 145e 1A60     		str	r2, [r3]	@ float
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3220              		.loc 1 629 0
 3221 1460 0023     		movs	r3, #0
 3222 1462 87F8573C 		strb	r3, [r7, #3159]
 3223 1466 1AE0     		b	.L185
 3224              	.L186:
 630:..\src/command_processing.c ****                             }
 3225              		.loc 1 630 0 discriminator 3
 3226 1468 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3227 146c 3222     		movs	r2, #50
 3228 146e 02FB03F3 		mul	r3, r2, r3
 3229 1472 1A1D     		adds	r2, r3, #4
 3230 1474 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3231 1478 1A44     		add	r2, r2, r3
 3232 147a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3233 147e D31A     		subs	r3, r2, r3
 3234 1480 013B     		subs	r3, r3, #1
 3235 1482 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3236 1486 07F12001 		add	r1, r7, #32
 3237 148a 0A44     		add	r2, r2, r1
 3238 148c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3239 148e 07F15802 		add	r2, r7, #88
 3240 1492 D154     		strb	r1, [r2, r3]
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3241              		.loc 1 629 0 discriminator 3
 3242 1494 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3243 1498 0133     		adds	r3, r3, #1
 3244 149a 87F8573C 		strb	r3, [r7, #3159]
 3245              	.L185:
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 87


 3246              		.loc 1 629 0 is_stmt 0 discriminator 1
 3247 149e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3248 14a2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3249 14a6 9A42     		cmp	r2, r3
 3250 14a8 DED3     		bcc	.L186
 632:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3251              		.loc 1 632 0 is_stmt 1
 3252 14aa 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3253 14ae BC49     		ldr	r1, .L297
 3254 14b0 1346     		mov	r3, r2
 3255 14b2 DB00     		lsls	r3, r3, #3
 3256 14b4 9B1A     		subs	r3, r3, r2
 3257 14b6 1B01     		lsls	r3, r3, #4
 3258 14b8 0B44     		add	r3, r3, r1
 3259 14ba D833     		adds	r3, r3, #216
 3260 14bc 1B68     		ldr	r3, [r3]
 3261 14be 1846     		mov	r0, r3
 3262 14c0 FFF7FEFF 		bl	__aeabi_i2f
 3263 14c4 0346     		mov	r3, r0
 3264 14c6 4FF08F41 		mov	r1, #1199570944
 3265 14ca 1846     		mov	r0, r3
 3266 14cc FFF7FEFF 		bl	__aeabi_fdiv
 3267 14d0 0346     		mov	r3, r0
 3268 14d2 1A46     		mov	r2, r3
 3269 14d4 07F12003 		add	r3, r7, #32
 3270 14d8 1A60     		str	r2, [r3]	@ float
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3271              		.loc 1 633 0
 3272 14da 0023     		movs	r3, #0
 3273 14dc 87F8573C 		strb	r3, [r7, #3159]
 3274 14e0 1DE0     		b	.L187
 3275              	.L188:
 634:..\src/command_processing.c ****                             }
 3276              		.loc 1 634 0 discriminator 3
 3277 14e2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3278 14e6 3222     		movs	r2, #50
 3279 14e8 02FB03F3 		mul	r3, r2, r3
 3280 14ec 1A1D     		adds	r2, r3, #4
 3281 14ee 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3282 14f2 1A44     		add	r2, r2, r3
 3283 14f4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3284 14f8 1A44     		add	r2, r2, r3
 3285 14fa 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3286 14fe D31A     		subs	r3, r2, r3
 3287 1500 013B     		subs	r3, r3, #1
 3288 1502 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3289 1506 07F12001 		add	r1, r7, #32
 3290 150a 0A44     		add	r2, r2, r1
 3291 150c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3292 150e 07F15802 		add	r2, r7, #88
 3293 1512 D154     		strb	r1, [r2, r3]
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3294              		.loc 1 633 0 discriminator 3
 3295 1514 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3296 1518 0133     		adds	r3, r3, #1
 3297 151a 87F8573C 		strb	r3, [r7, #3159]
 3298              	.L187:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 88


 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3299              		.loc 1 633 0 is_stmt 0 discriminator 1
 3300 151e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3301 1522 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3302 1526 9A42     		cmp	r2, r3
 3303 1528 DBD3     		bcc	.L188
 636:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3304              		.loc 1 636 0 is_stmt 1
 3305 152a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3306 152e 9C49     		ldr	r1, .L297
 3307 1530 1346     		mov	r3, r2
 3308 1532 DB00     		lsls	r3, r3, #3
 3309 1534 9B1A     		subs	r3, r3, r2
 3310 1536 1B01     		lsls	r3, r3, #4
 3311 1538 0B44     		add	r3, r3, r1
 3312 153a DC33     		adds	r3, r3, #220
 3313 153c 1B68     		ldr	r3, [r3]
 3314 153e 1846     		mov	r0, r3
 3315 1540 FFF7FEFF 		bl	__aeabi_i2f
 3316 1544 0346     		mov	r3, r0
 3317 1546 4FF08F41 		mov	r1, #1199570944
 3318 154a 1846     		mov	r0, r3
 3319 154c FFF7FEFF 		bl	__aeabi_fdiv
 3320 1550 0346     		mov	r3, r0
 3321 1552 1A46     		mov	r2, r3
 3322 1554 07F12003 		add	r3, r7, #32
 3323 1558 1A60     		str	r2, [r3]	@ float
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3324              		.loc 1 637 0
 3325 155a 0023     		movs	r3, #0
 3326 155c 87F8573C 		strb	r3, [r7, #3159]
 3327 1560 1EE0     		b	.L189
 3328              	.L190:
 638:..\src/command_processing.c ****                             }
 3329              		.loc 1 638 0 discriminator 3
 3330 1562 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3331 1566 3222     		movs	r2, #50
 3332 1568 02FB03F3 		mul	r3, r2, r3
 3333 156c 1A1D     		adds	r2, r3, #4
 3334 156e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3335 1572 5B00     		lsls	r3, r3, #1
 3336 1574 1A44     		add	r2, r2, r3
 3337 1576 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3338 157a 1A44     		add	r2, r2, r3
 3339 157c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3340 1580 D31A     		subs	r3, r2, r3
 3341 1582 013B     		subs	r3, r3, #1
 3342 1584 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3343 1588 07F12001 		add	r1, r7, #32
 3344 158c 0A44     		add	r2, r2, r1
 3345 158e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3346 1590 07F15802 		add	r2, r7, #88
 3347 1594 D154     		strb	r1, [r2, r3]
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3348              		.loc 1 637 0 discriminator 3
 3349 1596 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3350 159a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 89


 3351 159c 87F8573C 		strb	r3, [r7, #3159]
 3352              	.L189:
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3353              		.loc 1 637 0 is_stmt 0 discriminator 1
 3354 15a0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3355 15a4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3356 15a8 9A42     		cmp	r2, r3
 3357 15aa DAD3     		bcc	.L190
 3358              		.loc 1 641 0 is_stmt 1
 3359 15ac FDE0     		b	.L113
 3360              	.L123:
 642:..\src/command_processing.c **** 
 643:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 644:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 3361              		.loc 1 644 0
 3362 15ae 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3363 15b2 7C49     		ldr	r1, .L297+4
 3364 15b4 1346     		mov	r3, r2
 3365 15b6 DB00     		lsls	r3, r3, #3
 3366 15b8 9B1A     		subs	r3, r3, r2
 3367 15ba 1B01     		lsls	r3, r3, #4
 3368 15bc 0B44     		add	r3, r3, r1
 3369 15be 03F58873 		add	r3, r3, #272
 3370 15c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3371 15c4 1846     		mov	r0, r3
 3372 15c6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3373 15ca 7549     		ldr	r1, .L297
 3374 15cc 0346     		mov	r3, r0
 3375 15ce 5B00     		lsls	r3, r3, #1
 3376 15d0 0344     		add	r3, r3, r0
 3377 15d2 9B00     		lsls	r3, r3, #2
 3378 15d4 1344     		add	r3, r3, r2
 3379 15d6 6633     		adds	r3, r3, #102
 3380 15d8 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3381 15dc 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3382 15e0 7048     		ldr	r0, .L297+4
 3383 15e2 1346     		mov	r3, r2
 3384 15e4 DB00     		lsls	r3, r3, #3
 3385 15e6 9B1A     		subs	r3, r3, r2
 3386 15e8 1B01     		lsls	r3, r3, #4
 3387 15ea 0344     		add	r3, r3, r0
 3388 15ec 03F58873 		add	r3, r3, #272
 3389 15f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3390 15f2 1C46     		mov	r4, r3
 3391 15f4 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3392 15f8 6948     		ldr	r0, .L297
 3393 15fa 2346     		mov	r3, r4
 3394 15fc 5B00     		lsls	r3, r3, #1
 3395 15fe 2344     		add	r3, r3, r4
 3396 1600 1B01     		lsls	r3, r3, #4
 3397 1602 0344     		add	r3, r3, r0
 3398 1604 1344     		add	r3, r3, r2
 3399 1606 03F29513 		addw	r3, r3, #405
 3400 160a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3401 160c 41FA03F3 		asr	r3, r1, r3
 3402 1610 1AB2     		sxth	r2, r3
 3403 1612 07F11E03 		add	r3, r7, #30
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 90


 3404 1616 1A80     		strh	r2, [r3]	@ movhi
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3405              		.loc 1 645 0
 3406 1618 0023     		movs	r3, #0
 3407 161a 87F8563C 		strb	r3, [r7, #3158]
 3408 161e 21E0     		b	.L191
 3409              	.L192:
 646:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 3410              		.loc 1 646 0 discriminator 3
 3411 1620 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3412 1624 3222     		movs	r2, #50
 3413 1626 02FB03F3 		mul	r3, r2, r3
 3414 162a 1A1D     		adds	r2, r3, #4
 3415 162c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3416 1630 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 3417 1634 01FB03F3 		mul	r3, r1, r3
 3418 1638 1A44     		add	r2, r2, r3
 3419 163a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3420 163e 1A44     		add	r2, r2, r3
 3421 1640 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3422 1644 D31A     		subs	r3, r2, r3
 3423 1646 013B     		subs	r3, r3, #1
 3424 1648 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3425 164c 07F11E01 		add	r1, r7, #30
 3426 1650 0A44     		add	r2, r2, r1
 3427 1652 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3428 1654 07F15802 		add	r2, r7, #88
 3429 1658 D154     		strb	r1, [r2, r3]
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3430              		.loc 1 645 0 discriminator 3
 3431 165a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3432 165e 0133     		adds	r3, r3, #1
 3433 1660 87F8563C 		strb	r3, [r7, #3158]
 3434              	.L191:
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3435              		.loc 1 645 0 is_stmt 0 discriminator 1
 3436 1664 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3437 1668 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3438 166c 9A42     		cmp	r2, r3
 3439 166e D7D3     		bcc	.L192
 647:..\src/command_processing.c ****                         }
 648:..\src/command_processing.c ****                         break;
 3440              		.loc 1 648 0 is_stmt 1
 3441 1670 9BE0     		b	.L113
 3442              	.L124:
 649:..\src/command_processing.c ****                 
 650:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 651:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 3443              		.loc 1 651 0
 3444 1672 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3445 1676 4A49     		ldr	r1, .L297
 3446 1678 1346     		mov	r3, r2
 3447 167a DB00     		lsls	r3, r3, #3
 3448 167c 9B1A     		subs	r3, r3, r2
 3449 167e 1B01     		lsls	r3, r3, #4
 3450 1680 0B44     		add	r3, r3, r1
 3451 1682 E433     		adds	r3, r3, #228
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 91


 3452 1684 1968     		ldr	r1, [r3]
 3453 1686 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3454 168a 4648     		ldr	r0, .L297+4
 3455 168c 1346     		mov	r3, r2
 3456 168e DB00     		lsls	r3, r3, #3
 3457 1690 9B1A     		subs	r3, r3, r2
 3458 1692 1B01     		lsls	r3, r3, #4
 3459 1694 0344     		add	r3, r3, r0
 3460 1696 03F58873 		add	r3, r3, #272
 3461 169a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3462 169c 1846     		mov	r0, r3
 3463 169e 404A     		ldr	r2, .L297
 3464 16a0 0346     		mov	r3, r0
 3465 16a2 5B00     		lsls	r3, r3, #1
 3466 16a4 0344     		add	r3, r3, r0
 3467 16a6 1B01     		lsls	r3, r3, #4
 3468 16a8 1344     		add	r3, r3, r2
 3469 16aa 03F29513 		addw	r3, r3, #405
 3470 16ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3471 16b0 41FA03F2 		asr	r2, r1, r3
 3472 16b4 07F11803 		add	r3, r7, #24
 3473 16b8 1A60     		str	r2, [r3]
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3474              		.loc 1 652 0
 3475 16ba 0023     		movs	r3, #0
 3476 16bc 87F8563C 		strb	r3, [r7, #3158]
 3477 16c0 1AE0     		b	.L193
 3478              	.L194:
 653:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3479              		.loc 1 653 0 discriminator 3
 3480 16c2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3481 16c6 3222     		movs	r2, #50
 3482 16c8 02FB03F3 		mul	r3, r2, r3
 3483 16cc 1A1D     		adds	r2, r3, #4
 3484 16ce 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3485 16d2 1A44     		add	r2, r2, r3
 3486 16d4 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3487 16d8 D31A     		subs	r3, r2, r3
 3488 16da 013B     		subs	r3, r3, #1
 3489 16dc 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3490 16e0 07F11801 		add	r1, r7, #24
 3491 16e4 0A44     		add	r2, r2, r1
 3492 16e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3493 16e8 07F15802 		add	r2, r7, #88
 3494 16ec D154     		strb	r1, [r2, r3]
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3495              		.loc 1 652 0 discriminator 3
 3496 16ee 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3497 16f2 0133     		adds	r3, r3, #1
 3498 16f4 87F8563C 		strb	r3, [r7, #3158]
 3499              	.L193:
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3500              		.loc 1 652 0 is_stmt 0 discriminator 1
 3501 16f8 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3502 16fc 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3503 1700 9A42     		cmp	r2, r3
 3504 1702 DED3     		bcc	.L194
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 92


 654:..\src/command_processing.c ****                         }
 655:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 3505              		.loc 1 655 0 is_stmt 1
 3506 1704 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3507 1708 2549     		ldr	r1, .L297
 3508 170a 1346     		mov	r3, r2
 3509 170c DB00     		lsls	r3, r3, #3
 3510 170e 9B1A     		subs	r3, r3, r2
 3511 1710 1B01     		lsls	r3, r3, #4
 3512 1712 0B44     		add	r3, r3, r1
 3513 1714 E833     		adds	r3, r3, #232
 3514 1716 1968     		ldr	r1, [r3]
 3515 1718 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3516 171c 2148     		ldr	r0, .L297+4
 3517 171e 1346     		mov	r3, r2
 3518 1720 DB00     		lsls	r3, r3, #3
 3519 1722 9B1A     		subs	r3, r3, r2
 3520 1724 1B01     		lsls	r3, r3, #4
 3521 1726 0344     		add	r3, r3, r0
 3522 1728 03F58873 		add	r3, r3, #272
 3523 172c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3524 172e 1846     		mov	r0, r3
 3525 1730 1B4A     		ldr	r2, .L297
 3526 1732 0346     		mov	r3, r0
 3527 1734 5B00     		lsls	r3, r3, #1
 3528 1736 0344     		add	r3, r3, r0
 3529 1738 1B01     		lsls	r3, r3, #4
 3530 173a 1344     		add	r3, r3, r2
 3531 173c 03F29513 		addw	r3, r3, #405
 3532 1740 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3533 1742 41FA03F2 		asr	r2, r1, r3
 3534 1746 07F11803 		add	r3, r7, #24
 3535 174a 1A60     		str	r2, [r3]
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3536              		.loc 1 656 0
 3537 174c 0023     		movs	r3, #0
 3538 174e 87F8563C 		strb	r3, [r7, #3158]
 3539 1752 1DE0     		b	.L195
 3540              	.L196:
 657:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3541              		.loc 1 657 0 discriminator 3
 3542 1754 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3543 1758 3222     		movs	r2, #50
 3544 175a 02FB03F3 		mul	r3, r2, r3
 3545 175e 1A1D     		adds	r2, r3, #4
 3546 1760 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3547 1764 1A44     		add	r2, r2, r3
 3548 1766 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3549 176a 1A44     		add	r2, r2, r3
 3550 176c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3551 1770 D31A     		subs	r3, r2, r3
 3552 1772 013B     		subs	r3, r3, #1
 3553 1774 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3554 1778 07F11801 		add	r1, r7, #24
 3555 177c 0A44     		add	r2, r2, r1
 3556 177e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3557 1780 07F15802 		add	r2, r7, #88
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 93


 3558 1784 D154     		strb	r1, [r2, r3]
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3559              		.loc 1 656 0 discriminator 3
 3560 1786 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3561 178a 0133     		adds	r3, r3, #1
 3562 178c 87F8563C 		strb	r3, [r7, #3158]
 3563              	.L195:
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3564              		.loc 1 656 0 is_stmt 0 discriminator 1
 3565 1790 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3566 1794 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3567 1798 9A42     		cmp	r2, r3
 3568 179a DBD3     		bcc	.L196
 658:..\src/command_processing.c ****                         }
 659:..\src/command_processing.c ****                         break;
 3569              		.loc 1 659 0 is_stmt 1
 3570 179c 05E0     		b	.L113
 3571              	.L298:
 3572 179e 00BF     		.align	2
 3573              	.L297:
 3574 17a0 00000000 		.word	c_mem
 3575 17a4 00000000 		.word	g_mem
 3576              	.L283:
 660:..\src/command_processing.c ****                         
 661:..\src/command_processing.c ****                     default:
 662:..\src/command_processing.c ****                         break;
 3577              		.loc 1 662 0
 3578 17a8 00BF     		nop
 3579              	.L113:
 663:..\src/command_processing.c ****                 }
 664:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 665:..\src/command_processing.c ****                         
 666:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 667:..\src/command_processing.c ****         }
 668:..\src/command_processing.c ****         
 669:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 3580              		.loc 1 669 0
 3581 17aa 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3582 17ae 9B00     		lsls	r3, r3, #2
 3583 17b0 D7F8742C 		ldr	r2, [r7, #3188]
 3584 17b4 1344     		add	r3, r3, r2
 3585 17b6 1A68     		ldr	r2, [r3]
 3586 17b8 07F12403 		add	r3, r7, #36
 3587 17bc 1146     		mov	r1, r2
 3588 17be 1846     		mov	r0, r3
 3589 17c0 FFF7FEFF 		bl	sprintf
 670:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 3590              		.loc 1 670 0
 3591 17c4 07F12403 		add	r3, r7, #36
 3592 17c8 1846     		mov	r0, r3
 3593 17ca FFF7FEFF 		bl	strlen
 3594 17ce 0346     		mov	r3, r0
 3595 17d0 87F8523C 		strb	r3, [r7, #3154]
 671:..\src/command_processing.c ****         
 672:..\src/command_processing.c ****         // Parameters with a menu
 673:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 3596              		.loc 1 673 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 94


 3597 17d4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3598 17d8 07F10802 		add	r2, r7, #8
 3599 17dc 1268     		ldr	r2, [r2]
 3600 17de 1344     		add	r3, r3, r2
 3601 17e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3602 17e2 002B     		cmp	r3, #0
 3603 17e4 40F06284 		bne	.L197
 674:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 3604              		.loc 1 674 0
 3605 17e8 97F8543C 		ldrb	r3, [r7, #3156]	@ zero_extendqisi2
 3606 17ec D7F8702C 		ldr	r2, [r7, #3184]
 3607 17f0 1344     		add	r3, r3, r2
 3608 17f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3609 17f4 013B     		subs	r3, r3, #1
 3610 17f6 0B2B     		cmp	r3, #11
 3611 17f8 00F24E84 		bhi	.L198
 3612 17fc 01A2     		adr	r2, .L200
 3613 17fe 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3614 1802 00BF     		.p2align 2
 3615              	.L200:
 3616 1804 35180000 		.word	.L199+1
 3617 1808 BB190000 		.word	.L201+1
 3618 180c 791A0000 		.word	.L202+1
 3619 1810 BF1A0000 		.word	.L203+1
 3620 1814 151B0000 		.word	.L204+1
 3621 1818 631B0000 		.word	.L205+1
 3622 181c 711C0000 		.word	.L206+1
 3623 1820 E71C0000 		.word	.L207+1
 3624 1824 691D0000 		.word	.L208+1
 3625 1828 011E0000 		.word	.L209+1
 3626 182c FB1E0000 		.word	.L210+1
 3627 1830 25200000 		.word	.L211+1
 3628              		.p2align 1
 3629              	.L199:
 675:..\src/command_processing.c ****                 case 1:     // input mode menu
 676:..\src/command_processing.c ****                     switch(*m_addr) {
 3630              		.loc 1 676 0
 3631 1834 D7F8483C 		ldr	r3, [r7, #3144]
 3632 1838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3633 183a 072B     		cmp	r3, #7
 3634 183c 00F22584 		bhi	.L284
 3635 1840 01A2     		adr	r2, .L214
 3636 1842 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3637 1846 00BF     		.p2align 2
 3638              	.L214:
 3639 1848 69180000 		.word	.L213+1
 3640 184c 89180000 		.word	.L215+1
 3641 1850 AB180000 		.word	.L216+1
 3642 1854 D5180000 		.word	.L217+1
 3643 1858 FD180000 		.word	.L218+1
 3644 185c 23190000 		.word	.L219+1
 3645 1860 53190000 		.word	.L220+1
 3646 1864 79190000 		.word	.L221+1
 3647              		.p2align 1
 3648              	.L213:
 677:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 678:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 95


 3649              		.loc 1 678 0
 3650 1868 07F12403 		add	r3, r7, #36
 3651 186c 1846     		mov	r0, r3
 3652 186e FFF7FEFF 		bl	strlen
 3653 1872 0346     		mov	r3, r0
 3654 1874 1A46     		mov	r2, r3
 3655 1876 07F12403 		add	r3, r7, #36
 3656 187a 1344     		add	r3, r3, r2
 3657 187c D34A     		ldr	r2, .L299
 3658 187e 1068     		ldr	r0, [r2]	@ unaligned
 3659 1880 1860     		str	r0, [r3]	@ unaligned
 3660 1882 1279     		ldrb	r2, [r2, #4]
 3661 1884 1A71     		strb	r2, [r3, #4]
 679:..\src/command_processing.c ****                         break;
 3662              		.loc 1 679 0
 3663 1886 97E0     		b	.L212
 3664              	.L215:
 680:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 681:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 3665              		.loc 1 681 0
 3666 1888 07F12403 		add	r3, r7, #36
 3667 188c 1846     		mov	r0, r3
 3668 188e FFF7FEFF 		bl	strlen
 3669 1892 0346     		mov	r3, r0
 3670 1894 1A46     		mov	r2, r3
 3671 1896 07F12403 		add	r3, r7, #36
 3672 189a 1344     		add	r3, r3, r2
 3673 189c CC49     		ldr	r1, .L299+4
 3674 189e 1A46     		mov	r2, r3
 3675 18a0 0B46     		mov	r3, r1
 3676 18a2 03CB     		ldmia	r3!, {r0, r1}
 3677 18a4 1060     		str	r0, [r2]	@ unaligned
 3678 18a6 5160     		str	r1, [r2, #4]	@ unaligned
 682:..\src/command_processing.c ****                         break;
 3679              		.loc 1 682 0
 3680 18a8 86E0     		b	.L212
 3681              	.L216:
 683:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 684:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 3682              		.loc 1 684 0
 3683 18aa 07F12403 		add	r3, r7, #36
 3684 18ae 1846     		mov	r0, r3
 3685 18b0 FFF7FEFF 		bl	strlen
 3686 18b4 0346     		mov	r3, r0
 3687 18b6 1A46     		mov	r2, r3
 3688 18b8 07F12403 		add	r3, r7, #36
 3689 18bc 1344     		add	r3, r3, r2
 3690 18be C54A     		ldr	r2, .L299+8
 3691 18c0 1D46     		mov	r5, r3
 3692 18c2 1446     		mov	r4, r2
 3693 18c4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3694 18c6 2860     		str	r0, [r5]	@ unaligned
 3695 18c8 6960     		str	r1, [r5, #4]	@ unaligned
 3696 18ca AA60     		str	r2, [r5, #8]	@ unaligned
 3697 18cc EB60     		str	r3, [r5, #12]	@ unaligned
 3698 18ce 2388     		ldrh	r3, [r4]	@ unaligned
 3699 18d0 2B82     		strh	r3, [r5, #16]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 96


 685:..\src/command_processing.c ****                         break;
 3700              		.loc 1 685 0
 3701 18d2 71E0     		b	.L212
 3702              	.L217:
 686:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 687:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 3703              		.loc 1 687 0
 3704 18d4 07F12403 		add	r3, r7, #36
 3705 18d8 1846     		mov	r0, r3
 3706 18da FFF7FEFF 		bl	strlen
 3707 18de 0346     		mov	r3, r0
 3708 18e0 1A46     		mov	r2, r3
 3709 18e2 07F12403 		add	r3, r7, #36
 3710 18e6 1344     		add	r3, r3, r2
 3711 18e8 BB4A     		ldr	r2, .L299+12
 3712 18ea 1C46     		mov	r4, r3
 3713 18ec 1346     		mov	r3, r2
 3714 18ee 07CB     		ldmia	r3!, {r0, r1, r2}
 3715 18f0 2060     		str	r0, [r4]	@ unaligned
 3716 18f2 6160     		str	r1, [r4, #4]	@ unaligned
 3717 18f4 A260     		str	r2, [r4, #8]	@ unaligned
 3718 18f6 1B88     		ldrh	r3, [r3]	@ unaligned
 3719 18f8 A381     		strh	r3, [r4, #12]	@ unaligned
 688:..\src/command_processing.c ****                         break;
 3720              		.loc 1 688 0
 3721 18fa 5DE0     		b	.L212
 3722              	.L218:
 689:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 690:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 3723              		.loc 1 690 0
 3724 18fc 07F12403 		add	r3, r7, #36
 3725 1900 1846     		mov	r0, r3
 3726 1902 FFF7FEFF 		bl	strlen
 3727 1906 0346     		mov	r3, r0
 3728 1908 1A46     		mov	r2, r3
 3729 190a 07F12403 		add	r3, r7, #36
 3730 190e 1344     		add	r3, r3, r2
 3731 1910 B249     		ldr	r1, .L299+16
 3732 1912 1A46     		mov	r2, r3
 3733 1914 0B46     		mov	r3, r1
 3734 1916 03CB     		ldmia	r3!, {r0, r1}
 3735 1918 1060     		str	r0, [r2]	@ unaligned
 3736 191a 5160     		str	r1, [r2, #4]	@ unaligned
 3737 191c 1B88     		ldrh	r3, [r3]	@ unaligned
 3738 191e 1381     		strh	r3, [r2, #8]	@ unaligned
 691:..\src/command_processing.c ****                         break;
 3739              		.loc 1 691 0
 3740 1920 4AE0     		b	.L212
 3741              	.L219:
 692:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 693:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 3742              		.loc 1 693 0
 3743 1922 07F12403 		add	r3, r7, #36
 3744 1926 1846     		mov	r0, r3
 3745 1928 FFF7FEFF 		bl	strlen
 3746 192c 0346     		mov	r3, r0
 3747 192e 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 97


 3748 1930 07F12403 		add	r3, r7, #36
 3749 1934 1344     		add	r3, r3, r2
 3750 1936 AA4A     		ldr	r2, .L299+20
 3751 1938 1D46     		mov	r5, r3
 3752 193a 1446     		mov	r4, r2
 3753 193c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3754 193e 2860     		str	r0, [r5]	@ unaligned
 3755 1940 6960     		str	r1, [r5, #4]	@ unaligned
 3756 1942 AA60     		str	r2, [r5, #8]	@ unaligned
 3757 1944 EB60     		str	r3, [r5, #12]	@ unaligned
 3758 1946 2388     		ldrh	r3, [r4]	@ unaligned
 3759 1948 A278     		ldrb	r2, [r4, #2]
 3760 194a 2B82     		strh	r3, [r5, #16]	@ unaligned
 3761 194c 1346     		mov	r3, r2
 3762 194e AB74     		strb	r3, [r5, #18]
 694:..\src/command_processing.c ****                         break;
 3763              		.loc 1 694 0
 3764 1950 32E0     		b	.L212
 3765              	.L220:
 695:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 696:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 3766              		.loc 1 696 0
 3767 1952 07F12403 		add	r3, r7, #36
 3768 1956 1846     		mov	r0, r3
 3769 1958 FFF7FEFF 		bl	strlen
 3770 195c 0346     		mov	r3, r0
 3771 195e 1A46     		mov	r2, r3
 3772 1960 07F12403 		add	r3, r7, #36
 3773 1964 1344     		add	r3, r3, r2
 3774 1966 9F49     		ldr	r1, .L299+24
 3775 1968 1A46     		mov	r2, r3
 3776 196a 0B46     		mov	r3, r1
 3777 196c 03CB     		ldmia	r3!, {r0, r1}
 3778 196e 1060     		str	r0, [r2]	@ unaligned
 3779 1970 5160     		str	r1, [r2, #4]	@ unaligned
 3780 1972 1B88     		ldrh	r3, [r3]	@ unaligned
 3781 1974 1381     		strh	r3, [r2, #8]	@ unaligned
 697:..\src/command_processing.c ****                         break;
 3782              		.loc 1 697 0
 3783 1976 1FE0     		b	.L212
 3784              	.L221:
 698:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 699:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 3785              		.loc 1 699 0
 3786 1978 07F12403 		add	r3, r7, #36
 3787 197c 1846     		mov	r0, r3
 3788 197e FFF7FEFF 		bl	strlen
 3789 1982 0346     		mov	r3, r0
 3790 1984 1A46     		mov	r2, r3
 3791 1986 07F12403 		add	r3, r7, #36
 3792 198a 1344     		add	r3, r3, r2
 3793 198c 964A     		ldr	r2, .L299+28
 3794 198e 1446     		mov	r4, r2
 3795 1990 9E46     		mov	lr, r3
 3796 1992 04F1200C 		add	ip, r4, #32
 3797              	.L222:
 3798 1996 7546     		mov	r5, lr
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 98


 3799 1998 2646     		mov	r6, r4
 3800 199a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3801 199c 2860     		str	r0, [r5]	@ unaligned
 3802 199e 6960     		str	r1, [r5, #4]	@ unaligned
 3803 19a0 AA60     		str	r2, [r5, #8]	@ unaligned
 3804 19a2 EB60     		str	r3, [r5, #12]	@ unaligned
 3805 19a4 1034     		adds	r4, r4, #16
 3806 19a6 0EF1100E 		add	lr, lr, #16
 3807 19aa 6445     		cmp	r4, ip
 3808 19ac F3D1     		bne	.L222
 3809 19ae 7246     		mov	r2, lr
 3810 19b0 2346     		mov	r3, r4
 3811 19b2 1B88     		ldrh	r3, [r3]	@ unaligned
 3812 19b4 1380     		strh	r3, [r2]	@ unaligned
 700:..\src/command_processing.c ****                         break;
 3813              		.loc 1 700 0
 3814 19b6 00BF     		nop
 3815              	.L212:
 701:..\src/command_processing.c ****                     }
 702:..\src/command_processing.c ****                     break;
 3816              		.loc 1 702 0
 3817 19b8 67E3     		b	.L284
 3818              	.L201:
 703:..\src/command_processing.c ****                 case 2:     // control mode menu
 704:..\src/command_processing.c ****                     switch(*m_addr){
 3819              		.loc 1 704 0
 3820 19ba D7F8483C 		ldr	r3, [r7, #3144]
 3821 19be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3822 19c0 032B     		cmp	r3, #3
 3823 19c2 00F26483 		bhi	.L285
 3824 19c6 01A2     		adr	r2, .L225
 3825 19c8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3826              		.p2align 2
 3827              	.L225:
 3828 19cc DD190000 		.word	.L224+1
 3829 19d0 031A0000 		.word	.L226+1
 3830 19d4 231A0000 		.word	.L227+1
 3831 19d8 491A0000 		.word	.L228+1
 3832              		.p2align 1
 3833              	.L224:
 705:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 706:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 3834              		.loc 1 706 0
 3835 19dc 07F12403 		add	r3, r7, #36
 3836 19e0 1846     		mov	r0, r3
 3837 19e2 FFF7FEFF 		bl	strlen
 3838 19e6 0346     		mov	r3, r0
 3839 19e8 1A46     		mov	r2, r3
 3840 19ea 07F12403 		add	r3, r7, #36
 3841 19ee 1344     		add	r3, r3, r2
 3842 19f0 7E49     		ldr	r1, .L299+32
 3843 19f2 1A46     		mov	r2, r3
 3844 19f4 0B46     		mov	r3, r1
 3845 19f6 03CB     		ldmia	r3!, {r0, r1}
 3846 19f8 1060     		str	r0, [r2]	@ unaligned
 3847 19fa 5160     		str	r1, [r2, #4]	@ unaligned
 3848 19fc 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 99


 3849 19fe 1381     		strh	r3, [r2, #8]	@ unaligned
 707:..\src/command_processing.c ****                         break;
 3850              		.loc 1 707 0
 3851 1a00 39E0     		b	.L223
 3852              	.L226:
 708:..\src/command_processing.c ****                         case CONTROL_PWM:
 709:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 3853              		.loc 1 709 0
 3854 1a02 07F12403 		add	r3, r7, #36
 3855 1a06 1846     		mov	r0, r3
 3856 1a08 FFF7FEFF 		bl	strlen
 3857 1a0c 0346     		mov	r3, r0
 3858 1a0e 1A46     		mov	r2, r3
 3859 1a10 07F12403 		add	r3, r7, #36
 3860 1a14 1344     		add	r3, r3, r2
 3861 1a16 764A     		ldr	r2, .L299+36
 3862 1a18 1068     		ldr	r0, [r2]	@ unaligned
 3863 1a1a 1860     		str	r0, [r3]	@ unaligned
 3864 1a1c 1279     		ldrb	r2, [r2, #4]
 3865 1a1e 1A71     		strb	r2, [r3, #4]
 710:..\src/command_processing.c ****                         break;
 3866              		.loc 1 710 0
 3867 1a20 29E0     		b	.L223
 3868              	.L227:
 711:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 712:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 3869              		.loc 1 712 0
 3870 1a22 07F12403 		add	r3, r7, #36
 3871 1a26 1846     		mov	r0, r3
 3872 1a28 FFF7FEFF 		bl	strlen
 3873 1a2c 0346     		mov	r3, r0
 3874 1a2e 1A46     		mov	r2, r3
 3875 1a30 07F12403 		add	r3, r7, #36
 3876 1a34 1344     		add	r3, r3, r2
 3877 1a36 6F49     		ldr	r1, .L299+40
 3878 1a38 1A46     		mov	r2, r3
 3879 1a3a 0B46     		mov	r3, r1
 3880 1a3c 03CB     		ldmia	r3!, {r0, r1}
 3881 1a3e 1060     		str	r0, [r2]	@ unaligned
 3882 1a40 5160     		str	r1, [r2, #4]	@ unaligned
 3883 1a42 1B78     		ldrb	r3, [r3]
 3884 1a44 1372     		strb	r3, [r2, #8]
 713:..\src/command_processing.c ****                         break;
 3885              		.loc 1 713 0
 3886 1a46 16E0     		b	.L223
 3887              	.L228:
 714:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 715:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 3888              		.loc 1 715 0
 3889 1a48 07F12403 		add	r3, r7, #36
 3890 1a4c 1846     		mov	r0, r3
 3891 1a4e FFF7FEFF 		bl	strlen
 3892 1a52 0346     		mov	r3, r0
 3893 1a54 1A46     		mov	r2, r3
 3894 1a56 07F12403 		add	r3, r7, #36
 3895 1a5a 1344     		add	r3, r3, r2
 3896 1a5c 664A     		ldr	r2, .L299+44
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 100


 3897 1a5e 1D46     		mov	r5, r3
 3898 1a60 1446     		mov	r4, r2
 3899 1a62 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3900 1a64 2860     		str	r0, [r5]	@ unaligned
 3901 1a66 6960     		str	r1, [r5, #4]	@ unaligned
 3902 1a68 AA60     		str	r2, [r5, #8]	@ unaligned
 3903 1a6a EB60     		str	r3, [r5, #12]	@ unaligned
 3904 1a6c 2068     		ldr	r0, [r4]	@ unaligned
 3905 1a6e 2861     		str	r0, [r5, #16]	@ unaligned
 3906 1a70 A388     		ldrh	r3, [r4, #4]	@ unaligned
 3907 1a72 AB82     		strh	r3, [r5, #20]	@ unaligned
 716:..\src/command_processing.c ****                         break;
 3908              		.loc 1 716 0
 3909 1a74 00BF     		nop
 3910              	.L223:
 717:..\src/command_processing.c ****                     }
 718:..\src/command_processing.c ****                     break;
 3911              		.loc 1 718 0
 3912 1a76 0AE3     		b	.L285
 3913              	.L202:
 719:..\src/command_processing.c ****                 case 3:     // yes/no menu
 720:..\src/command_processing.c ****                     if(*m_addr){
 3914              		.loc 1 720 0
 3915 1a78 D7F8483C 		ldr	r3, [r7, #3144]
 3916 1a7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3917 1a7e 002B     		cmp	r3, #0
 3918 1a80 0FD0     		beq	.L229
 721:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 3919              		.loc 1 721 0
 3920 1a82 07F12403 		add	r3, r7, #36
 3921 1a86 1846     		mov	r0, r3
 3922 1a88 FFF7FEFF 		bl	strlen
 3923 1a8c 0346     		mov	r3, r0
 3924 1a8e 1A46     		mov	r2, r3
 3925 1a90 07F12403 		add	r3, r7, #36
 3926 1a94 1344     		add	r3, r3, r2
 3927 1a96 594A     		ldr	r2, .L299+48
 3928 1a98 1068     		ldr	r0, [r2]	@ unaligned
 3929 1a9a 1860     		str	r0, [r3]	@ unaligned
 3930 1a9c 1279     		ldrb	r2, [r2, #4]
 3931 1a9e 1A71     		strb	r2, [r3, #4]
 722:..\src/command_processing.c ****                     }
 723:..\src/command_processing.c ****                     else {
 724:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 725:..\src/command_processing.c ****                     }
 726:..\src/command_processing.c ****                     break;    
 3932              		.loc 1 726 0
 3933 1aa0 FAE2     		b	.L198
 3934              	.L229:
 724:..\src/command_processing.c ****                     }
 3935              		.loc 1 724 0
 3936 1aa2 07F12403 		add	r3, r7, #36
 3937 1aa6 1846     		mov	r0, r3
 3938 1aa8 FFF7FEFF 		bl	strlen
 3939 1aac 0346     		mov	r3, r0
 3940 1aae 1A46     		mov	r2, r3
 3941 1ab0 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 101


 3942 1ab4 1344     		add	r3, r3, r2
 3943 1ab6 524A     		ldr	r2, .L299+52
 3944 1ab8 1068     		ldr	r0, [r2]	@ unaligned
 3945 1aba 1860     		str	r0, [r3]	@ unaligned
 3946              		.loc 1 726 0
 3947 1abc ECE2     		b	.L198
 3948              	.L203:
 727:..\src/command_processing.c ****                 case 4:     // right/lef menu
 728:..\src/command_processing.c ****                     switch(*m_addr){
 3949              		.loc 1 728 0
 3950 1abe D7F8483C 		ldr	r3, [r7, #3144]
 3951 1ac2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3952 1ac4 002B     		cmp	r3, #0
 3953 1ac6 02D0     		beq	.L232
 3954 1ac8 012B     		cmp	r3, #1
 3955 1aca 12D0     		beq	.L233
 729:..\src/command_processing.c ****                         case RIGHT_HAND:
 730:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 731:..\src/command_processing.c ****                         break;
 732:..\src/command_processing.c ****                         case LEFT_HAND:
 733:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 734:..\src/command_processing.c ****                         break;
 735:..\src/command_processing.c ****                     }
 736:..\src/command_processing.c ****                     break;
 3956              		.loc 1 736 0
 3957 1acc E4E2     		b	.L198
 3958              	.L232:
 730:..\src/command_processing.c ****                         break;
 3959              		.loc 1 730 0
 3960 1ace 07F12403 		add	r3, r7, #36
 3961 1ad2 1846     		mov	r0, r3
 3962 1ad4 FFF7FEFF 		bl	strlen
 3963 1ad8 0346     		mov	r3, r0
 3964 1ada 1A46     		mov	r2, r3
 3965 1adc 07F12403 		add	r3, r7, #36
 3966 1ae0 1344     		add	r3, r3, r2
 3967 1ae2 484A     		ldr	r2, .L299+56
 3968 1ae4 1068     		ldr	r0, [r2]	@ unaligned
 3969 1ae6 1860     		str	r0, [r3]	@ unaligned
 3970 1ae8 9188     		ldrh	r1, [r2, #4]	@ unaligned
 3971 1aea 9279     		ldrb	r2, [r2, #6]
 3972 1aec 9980     		strh	r1, [r3, #4]	@ unaligned
 3973 1aee 9A71     		strb	r2, [r3, #6]
 731:..\src/command_processing.c ****                         case LEFT_HAND:
 3974              		.loc 1 731 0
 3975 1af0 0FE0     		b	.L231
 3976              	.L233:
 733:..\src/command_processing.c ****                         break;
 3977              		.loc 1 733 0
 3978 1af2 07F12403 		add	r3, r7, #36
 3979 1af6 1846     		mov	r0, r3
 3980 1af8 FFF7FEFF 		bl	strlen
 3981 1afc 0346     		mov	r3, r0
 3982 1afe 1A46     		mov	r2, r3
 3983 1b00 07F12403 		add	r3, r7, #36
 3984 1b04 1344     		add	r3, r3, r2
 3985 1b06 404A     		ldr	r2, .L299+60
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 102


 3986 1b08 1068     		ldr	r0, [r2]	@ unaligned
 3987 1b0a 1860     		str	r0, [r3]	@ unaligned
 3988 1b0c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3989 1b0e 9A80     		strh	r2, [r3, #4]	@ unaligned
 734:..\src/command_processing.c ****                     }
 3990              		.loc 1 734 0
 3991 1b10 00BF     		nop
 3992              	.L231:
 3993              		.loc 1 736 0
 3994 1b12 C1E2     		b	.L198
 3995              	.L204:
 737:..\src/command_processing.c ****                 case 5:     // on/off menu
 738:..\src/command_processing.c ****                     switch(*m_addr){
 3996              		.loc 1 738 0
 3997 1b14 D7F8483C 		ldr	r3, [r7, #3144]
 3998 1b18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3999 1b1a 002B     		cmp	r3, #0
 4000 1b1c 02D0     		beq	.L235
 4001 1b1e 012B     		cmp	r3, #1
 4002 1b20 10D0     		beq	.L236
 739:..\src/command_processing.c ****                         case 0:
 740:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 741:..\src/command_processing.c ****                         break;
 742:..\src/command_processing.c ****                         case 1:
 743:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 744:..\src/command_processing.c ****                         break;
 745:..\src/command_processing.c ****                     }
 746:..\src/command_processing.c ****                     break;
 4003              		.loc 1 746 0
 4004 1b22 B9E2     		b	.L198
 4005              	.L235:
 740:..\src/command_processing.c ****                         break;
 4006              		.loc 1 740 0
 4007 1b24 07F12403 		add	r3, r7, #36
 4008 1b28 1846     		mov	r0, r3
 4009 1b2a FFF7FEFF 		bl	strlen
 4010 1b2e 0346     		mov	r3, r0
 4011 1b30 1A46     		mov	r2, r3
 4012 1b32 07F12403 		add	r3, r7, #36
 4013 1b36 1344     		add	r3, r3, r2
 4014 1b38 344A     		ldr	r2, .L299+64
 4015 1b3a 1068     		ldr	r0, [r2]	@ unaligned
 4016 1b3c 1860     		str	r0, [r3]	@ unaligned
 4017 1b3e 1279     		ldrb	r2, [r2, #4]
 4018 1b40 1A71     		strb	r2, [r3, #4]
 741:..\src/command_processing.c ****                         case 1:
 4019              		.loc 1 741 0
 4020 1b42 0DE0     		b	.L234
 4021              	.L236:
 743:..\src/command_processing.c ****                         break;
 4022              		.loc 1 743 0
 4023 1b44 07F12403 		add	r3, r7, #36
 4024 1b48 1846     		mov	r0, r3
 4025 1b4a FFF7FEFF 		bl	strlen
 4026 1b4e 0346     		mov	r3, r0
 4027 1b50 1A46     		mov	r2, r3
 4028 1b52 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 103


 4029 1b56 1344     		add	r3, r3, r2
 4030 1b58 2D4A     		ldr	r2, .L299+68
 4031 1b5a 1068     		ldr	r0, [r2]	@ unaligned
 4032 1b5c 1860     		str	r0, [r3]	@ unaligned
 744:..\src/command_processing.c ****                     }
 4033              		.loc 1 744 0
 4034 1b5e 00BF     		nop
 4035              	.L234:
 4036              		.loc 1 746 0
 4037 1b60 9AE2     		b	.L198
 4038              	.L205:
 747:..\src/command_processing.c ****                 case 6:     // expansion port menu
 748:..\src/command_processing.c ****                     switch(*m_addr){
 4039              		.loc 1 748 0
 4040 1b62 D7F8483C 		ldr	r3, [r7, #3144]
 4041 1b66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4042 1b68 032B     		cmp	r3, #3
 4043 1b6a 00F29282 		bhi	.L286
 4044 1b6e 01A2     		adr	r2, .L239
 4045 1b70 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4046              		.p2align 2
 4047              	.L239:
 4048 1b74 851B0000 		.word	.L238+1
 4049 1b78 A51B0000 		.word	.L240+1
 4050 1b7c 1D1C0000 		.word	.L241+1
 4051 1b80 471C0000 		.word	.L242+1
 4052              		.p2align 1
 4053              	.L238:
 749:..\src/command_processing.c ****                         case EXP_NONE:
 750:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 4054              		.loc 1 750 0
 4055 1b84 07F12403 		add	r3, r7, #36
 4056 1b88 1846     		mov	r0, r3
 4057 1b8a FFF7FEFF 		bl	strlen
 4058 1b8e 0346     		mov	r3, r0
 4059 1b90 1A46     		mov	r2, r3
 4060 1b92 07F12403 		add	r3, r7, #36
 4061 1b96 1344     		add	r3, r3, r2
 4062 1b98 1E4A     		ldr	r2, .L299+72
 4063 1b9a 1068     		ldr	r0, [r2]	@ unaligned
 4064 1b9c 1860     		str	r0, [r3]	@ unaligned
 4065 1b9e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4066 1ba0 9A80     		strh	r2, [r3, #4]	@ unaligned
 751:..\src/command_processing.c ****                             break;
 4067              		.loc 1 751 0
 4068 1ba2 64E0     		b	.L237
 4069              	.L240:
 752:..\src/command_processing.c ****                         case EXP_SD_RTC:
 753:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 4070              		.loc 1 753 0
 4071 1ba4 07F12403 		add	r3, r7, #36
 4072 1ba8 1846     		mov	r0, r3
 4073 1baa FFF7FEFF 		bl	strlen
 4074 1bae 0346     		mov	r3, r0
 4075 1bb0 1A46     		mov	r2, r3
 4076 1bb2 07F12403 		add	r3, r7, #36
 4077 1bb6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 104


 4078 1bb8 174A     		ldr	r2, .L299+76
 4079 1bba 1C46     		mov	r4, r3
 4080 1bbc 1346     		mov	r3, r2
 4081 1bbe 07CB     		ldmia	r3!, {r0, r1, r2}
 4082 1bc0 2060     		str	r0, [r4]	@ unaligned
 4083 1bc2 6160     		str	r1, [r4, #4]	@ unaligned
 4084 1bc4 A260     		str	r2, [r4, #8]	@ unaligned
 4085 1bc6 1B88     		ldrh	r3, [r3]	@ unaligned
 4086 1bc8 A381     		strh	r3, [r4, #12]	@ unaligned
 754:..\src/command_processing.c ****                             break;
 4087              		.loc 1 754 0
 4088 1bca 50E0     		b	.L237
 4089              	.L300:
 4090              		.align	2
 4091              	.L299:
 4092 1bcc 00000000 		.word	.LC88
 4093 1bd0 08000000 		.word	.LC89
 4094 1bd4 10000000 		.word	.LC90
 4095 1bd8 24000000 		.word	.LC91
 4096 1bdc 34000000 		.word	.LC92
 4097 1be0 40000000 		.word	.LC93
 4098 1be4 54000000 		.word	.LC94
 4099 1be8 60000000 		.word	.LC95
 4100 1bec 84000000 		.word	.LC96
 4101 1bf0 90000000 		.word	.LC97
 4102 1bf4 98000000 		.word	.LC98
 4103 1bf8 A4000000 		.word	.LC99
 4104 1bfc BC000000 		.word	.LC100
 4105 1c00 C4000000 		.word	.LC101
 4106 1c04 CC000000 		.word	.LC102
 4107 1c08 D4000000 		.word	.LC103
 4108 1c0c DC000000 		.word	.LC104
 4109 1c10 E4000000 		.word	.LC105
 4110 1c14 EC000000 		.word	.LC106
 4111 1c18 F4000000 		.word	.LC107
 4112              	.L241:
 755:..\src/command_processing.c ****                         case EXP_WIFI:
 756:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 4113              		.loc 1 756 0
 4114 1c1c 07F12403 		add	r3, r7, #36
 4115 1c20 1846     		mov	r0, r3
 4116 1c22 FFF7FEFF 		bl	strlen
 4117 1c26 0346     		mov	r3, r0
 4118 1c28 1A46     		mov	r2, r3
 4119 1c2a 07F12403 		add	r3, r7, #36
 4120 1c2e 1344     		add	r3, r3, r2
 4121 1c30 CF4A     		ldr	r2, .L301
 4122 1c32 1D46     		mov	r5, r3
 4123 1c34 1446     		mov	r4, r2
 4124 1c36 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4125 1c38 2860     		str	r0, [r5]	@ unaligned
 4126 1c3a 6960     		str	r1, [r5, #4]	@ unaligned
 4127 1c3c AA60     		str	r2, [r5, #8]	@ unaligned
 4128 1c3e EB60     		str	r3, [r5, #12]	@ unaligned
 4129 1c40 2388     		ldrh	r3, [r4]	@ unaligned
 4130 1c42 2B82     		strh	r3, [r5, #16]	@ unaligned
 757:..\src/command_processing.c ****         					break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 105


 4131              		.loc 1 757 0
 4132 1c44 13E0     		b	.L237
 4133              	.L242:
 758:..\src/command_processing.c ****                         case EXP_OTHER:
 759:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 4134              		.loc 1 759 0
 4135 1c46 07F12403 		add	r3, r7, #36
 4136 1c4a 1846     		mov	r0, r3
 4137 1c4c FFF7FEFF 		bl	strlen
 4138 1c50 0346     		mov	r3, r0
 4139 1c52 1A46     		mov	r2, r3
 4140 1c54 07F12403 		add	r3, r7, #36
 4141 1c58 1344     		add	r3, r3, r2
 4142 1c5a C64A     		ldr	r2, .L301+4
 4143 1c5c 1C46     		mov	r4, r3
 4144 1c5e 1346     		mov	r3, r2
 4145 1c60 07CB     		ldmia	r3!, {r0, r1, r2}
 4146 1c62 2060     		str	r0, [r4]	@ unaligned
 4147 1c64 6160     		str	r1, [r4, #4]	@ unaligned
 4148 1c66 A260     		str	r2, [r4, #8]	@ unaligned
 4149 1c68 1B78     		ldrb	r3, [r3]
 4150 1c6a 2373     		strb	r3, [r4, #12]
 760:..\src/command_processing.c ****         					break;
 4151              		.loc 1 760 0
 4152 1c6c 00BF     		nop
 4153              	.L237:
 761:..\src/command_processing.c ****                     }
 762:..\src/command_processing.c ****                     break;
 4154              		.loc 1 762 0
 4155 1c6e 10E2     		b	.L286
 4156              	.L206:
 763:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 764:..\src/command_processing.c ****                     switch(*m_addr){
 4157              		.loc 1 764 0
 4158 1c70 D7F8483C 		ldr	r3, [r7, #3144]
 4159 1c74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4160 1c76 012B     		cmp	r3, #1
 4161 1c78 14D0     		beq	.L244
 4162 1c7a 022B     		cmp	r3, #2
 4163 1c7c 22D0     		beq	.L245
 4164 1c7e 002B     		cmp	r3, #0
 4165 1c80 00D0     		beq	.L246
 765:..\src/command_processing.c ****                         case 0: 
 766:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 767:..\src/command_processing.c ****                             break;
 768:..\src/command_processing.c ****                         case 1: 
 769:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 770:..\src/command_processing.c ****                             break;
 771:..\src/command_processing.c ****                         case 2: 
 772:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 773:..\src/command_processing.c ****                             break;
 774:..\src/command_processing.c ****                         default:
 775:..\src/command_processing.c ****                             break;
 4166              		.loc 1 775 0
 4167 1c82 2FE0     		b	.L247
 4168              	.L246:
 766:..\src/command_processing.c ****                             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 106


 4169              		.loc 1 766 0
 4170 1c84 07F12403 		add	r3, r7, #36
 4171 1c88 1846     		mov	r0, r3
 4172 1c8a FFF7FEFF 		bl	strlen
 4173 1c8e 0346     		mov	r3, r0
 4174 1c90 1A46     		mov	r2, r3
 4175 1c92 07F12403 		add	r3, r7, #36
 4176 1c96 1344     		add	r3, r3, r2
 4177 1c98 B74A     		ldr	r2, .L301+8
 4178 1c9a 1068     		ldr	r0, [r2]	@ unaligned
 4179 1c9c 1860     		str	r0, [r3]	@ unaligned
 4180 1c9e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4181 1ca0 9A80     		strh	r2, [r3, #4]	@ unaligned
 767:..\src/command_processing.c ****                         case 1: 
 4182              		.loc 1 767 0
 4183 1ca2 1FE0     		b	.L247
 4184              	.L244:
 769:..\src/command_processing.c ****                             break;
 4185              		.loc 1 769 0
 4186 1ca4 07F12403 		add	r3, r7, #36
 4187 1ca8 1846     		mov	r0, r3
 4188 1caa FFF7FEFF 		bl	strlen
 4189 1cae 0346     		mov	r3, r0
 4190 1cb0 1A46     		mov	r2, r3
 4191 1cb2 07F12403 		add	r3, r7, #36
 4192 1cb6 1344     		add	r3, r3, r2
 4193 1cb8 B04A     		ldr	r2, .L301+12
 4194 1cba 1068     		ldr	r0, [r2]	@ unaligned
 4195 1cbc 1860     		str	r0, [r3]	@ unaligned
 4196 1cbe 1279     		ldrb	r2, [r2, #4]
 4197 1cc0 1A71     		strb	r2, [r3, #4]
 770:..\src/command_processing.c ****                         case 2: 
 4198              		.loc 1 770 0
 4199 1cc2 0FE0     		b	.L247
 4200              	.L245:
 772:..\src/command_processing.c ****                             break;
 4201              		.loc 1 772 0
 4202 1cc4 07F12403 		add	r3, r7, #36
 4203 1cc8 1846     		mov	r0, r3
 4204 1cca FFF7FEFF 		bl	strlen
 4205 1cce 0346     		mov	r3, r0
 4206 1cd0 1A46     		mov	r2, r3
 4207 1cd2 07F12403 		add	r3, r7, #36
 4208 1cd6 1344     		add	r3, r3, r2
 4209 1cd8 A94A     		ldr	r2, .L301+16
 4210 1cda 1068     		ldr	r0, [r2]	@ unaligned
 4211 1cdc 1860     		str	r0, [r3]	@ unaligned
 4212 1cde 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4213 1ce0 9A80     		strh	r2, [r3, #4]	@ unaligned
 773:..\src/command_processing.c ****                         default:
 4214              		.loc 1 773 0
 4215 1ce2 00BF     		nop
 4216              	.L247:
 776:..\src/command_processing.c ****                     } 
 777:..\src/command_processing.c ****                     break;
 4217              		.loc 1 777 0 discriminator 12
 4218 1ce4 D8E1     		b	.L198
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 107


 4219              	.L207:
 778:..\src/command_processing.c ****                 case 8:     // user menu          
 779:..\src/command_processing.c ****                     switch(*m_addr){
 4220              		.loc 1 779 0
 4221 1ce6 D7F8483C 		ldr	r3, [r7, #3144]
 4222 1cea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4223 1cec 012B     		cmp	r3, #1
 4224 1cee 18D0     		beq	.L249
 4225 1cf0 022B     		cmp	r3, #2
 4226 1cf2 28D0     		beq	.L250
 4227 1cf4 002B     		cmp	r3, #0
 4228 1cf6 00D0     		beq	.L251
 780:..\src/command_processing.c ****                         case GENERIC_USER:
 781:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 782:..\src/command_processing.c ****                         break;
 783:..\src/command_processing.c ****                         case MARIA:
 784:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 785:..\src/command_processing.c ****                         break;
 786:..\src/command_processing.c ****                         case R01:
 787:..\src/command_processing.c ****                             strcat(aux_str, " R01\0");
 788:..\src/command_processing.c ****                         break;
 789:..\src/command_processing.c ****                     }   
 790:..\src/command_processing.c ****                     break;                    
 4229              		.loc 1 790 0
 4230 1cf8 CEE1     		b	.L198
 4231              	.L251:
 781:..\src/command_processing.c ****                         break;
 4232              		.loc 1 781 0
 4233 1cfa 07F12403 		add	r3, r7, #36
 4234 1cfe 1846     		mov	r0, r3
 4235 1d00 FFF7FEFF 		bl	strlen
 4236 1d04 0346     		mov	r3, r0
 4237 1d06 1A46     		mov	r2, r3
 4238 1d08 07F12403 		add	r3, r7, #36
 4239 1d0c 1344     		add	r3, r3, r2
 4240 1d0e 9D4A     		ldr	r2, .L301+20
 4241 1d10 1C46     		mov	r4, r3
 4242 1d12 1346     		mov	r3, r2
 4243 1d14 07CB     		ldmia	r3!, {r0, r1, r2}
 4244 1d16 2060     		str	r0, [r4]	@ unaligned
 4245 1d18 6160     		str	r1, [r4, #4]	@ unaligned
 4246 1d1a A260     		str	r2, [r4, #8]	@ unaligned
 4247 1d1c 1B88     		ldrh	r3, [r3]	@ unaligned
 4248 1d1e A381     		strh	r3, [r4, #12]	@ unaligned
 782:..\src/command_processing.c ****                         case MARIA:
 4249              		.loc 1 782 0
 4250 1d20 21E0     		b	.L248
 4251              	.L249:
 784:..\src/command_processing.c ****                         break;
 4252              		.loc 1 784 0
 4253 1d22 07F12403 		add	r3, r7, #36
 4254 1d26 1846     		mov	r0, r3
 4255 1d28 FFF7FEFF 		bl	strlen
 4256 1d2c 0346     		mov	r3, r0
 4257 1d2e 1A46     		mov	r2, r3
 4258 1d30 07F12403 		add	r3, r7, #36
 4259 1d34 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 108


 4260 1d36 944A     		ldr	r2, .L301+24
 4261 1d38 1068     		ldr	r0, [r2]	@ unaligned
 4262 1d3a 1860     		str	r0, [r3]	@ unaligned
 4263 1d3c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 4264 1d3e 9279     		ldrb	r2, [r2, #6]
 4265 1d40 9980     		strh	r1, [r3, #4]	@ unaligned
 4266 1d42 9A71     		strb	r2, [r3, #6]
 785:..\src/command_processing.c ****                         case R01:
 4267              		.loc 1 785 0
 4268 1d44 0FE0     		b	.L248
 4269              	.L250:
 787:..\src/command_processing.c ****                         break;
 4270              		.loc 1 787 0
 4271 1d46 07F12403 		add	r3, r7, #36
 4272 1d4a 1846     		mov	r0, r3
 4273 1d4c FFF7FEFF 		bl	strlen
 4274 1d50 0346     		mov	r3, r0
 4275 1d52 1A46     		mov	r2, r3
 4276 1d54 07F12403 		add	r3, r7, #36
 4277 1d58 1344     		add	r3, r3, r2
 4278 1d5a 8C4A     		ldr	r2, .L301+28
 4279 1d5c 1068     		ldr	r0, [r2]	@ unaligned
 4280 1d5e 1860     		str	r0, [r3]	@ unaligned
 4281 1d60 1279     		ldrb	r2, [r2, #4]
 4282 1d62 1A71     		strb	r2, [r3, #4]
 788:..\src/command_processing.c ****                     }   
 4283              		.loc 1 788 0
 4284 1d64 00BF     		nop
 4285              	.L248:
 4286              		.loc 1 790 0
 4287 1d66 97E1     		b	.L198
 4288              	.L208:
 791:..\src/command_processing.c ****                 case 9:     // driver type menu
 792:..\src/command_processing.c ****                     switch(*m_addr){
 4289              		.loc 1 792 0
 4290 1d68 D7F8483C 		ldr	r3, [r7, #3144]
 4291 1d6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4292 1d6e 012B     		cmp	r3, #1
 4293 1d70 19D0     		beq	.L253
 4294 1d72 022B     		cmp	r3, #2
 4295 1d74 2ED0     		beq	.L254
 4296 1d76 002B     		cmp	r3, #0
 4297 1d78 00D0     		beq	.L255
 793:..\src/command_processing.c ****                         case 0:
 794:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 795:..\src/command_processing.c ****                         break;
 796:..\src/command_processing.c ****                         case 1:
 797:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 798:..\src/command_processing.c ****                         break;
 799:..\src/command_processing.c ****                         case 2:
 800:..\src/command_processing.c ****                             strcat(aux_str, " ESC (Brushless)\0");
 801:..\src/command_processing.c ****                         break;
 802:..\src/command_processing.c ****                     }
 803:..\src/command_processing.c ****                     break;
 4298              		.loc 1 803 0
 4299 1d7a 8DE1     		b	.L198
 4300              	.L255:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 109


 794:..\src/command_processing.c ****                         break;
 4301              		.loc 1 794 0
 4302 1d7c 07F12403 		add	r3, r7, #36
 4303 1d80 1846     		mov	r0, r3
 4304 1d82 FFF7FEFF 		bl	strlen
 4305 1d86 0346     		mov	r3, r0
 4306 1d88 1A46     		mov	r2, r3
 4307 1d8a 07F12403 		add	r3, r7, #36
 4308 1d8e 1344     		add	r3, r3, r2
 4309 1d90 7F4A     		ldr	r2, .L301+32
 4310 1d92 1D46     		mov	r5, r3
 4311 1d94 1446     		mov	r4, r2
 4312 1d96 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4313 1d98 2860     		str	r0, [r5]	@ unaligned
 4314 1d9a 6960     		str	r1, [r5, #4]	@ unaligned
 4315 1d9c AA60     		str	r2, [r5, #8]	@ unaligned
 4316 1d9e EB60     		str	r3, [r5, #12]	@ unaligned
 4317 1da0 2068     		ldr	r0, [r4]	@ unaligned
 4318 1da2 2861     		str	r0, [r5, #16]	@ unaligned
 795:..\src/command_processing.c ****                         case 1:
 4319              		.loc 1 795 0
 4320 1da4 2BE0     		b	.L252
 4321              	.L253:
 797:..\src/command_processing.c ****                         break;
 4322              		.loc 1 797 0
 4323 1da6 07F12403 		add	r3, r7, #36
 4324 1daa 1846     		mov	r0, r3
 4325 1dac FFF7FEFF 		bl	strlen
 4326 1db0 0346     		mov	r3, r0
 4327 1db2 1A46     		mov	r2, r3
 4328 1db4 07F12403 		add	r3, r7, #36
 4329 1db8 1344     		add	r3, r3, r2
 4330 1dba 764A     		ldr	r2, .L301+36
 4331 1dbc 1D46     		mov	r5, r3
 4332 1dbe 1446     		mov	r4, r2
 4333 1dc0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4334 1dc2 2860     		str	r0, [r5]	@ unaligned
 4335 1dc4 6960     		str	r1, [r5, #4]	@ unaligned
 4336 1dc6 AA60     		str	r2, [r5, #8]	@ unaligned
 4337 1dc8 EB60     		str	r3, [r5, #12]	@ unaligned
 4338 1dca 2068     		ldr	r0, [r4]	@ unaligned
 4339 1dcc 2861     		str	r0, [r5, #16]	@ unaligned
 4340 1dce A388     		ldrh	r3, [r4, #4]	@ unaligned
 4341 1dd0 AB82     		strh	r3, [r5, #20]	@ unaligned
 798:..\src/command_processing.c ****                         case 2:
 4342              		.loc 1 798 0
 4343 1dd2 14E0     		b	.L252
 4344              	.L254:
 800:..\src/command_processing.c ****                         break;
 4345              		.loc 1 800 0
 4346 1dd4 07F12403 		add	r3, r7, #36
 4347 1dd8 1846     		mov	r0, r3
 4348 1dda FFF7FEFF 		bl	strlen
 4349 1dde 0346     		mov	r3, r0
 4350 1de0 1A46     		mov	r2, r3
 4351 1de2 07F12403 		add	r3, r7, #36
 4352 1de6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 110


 4353 1de8 6B4A     		ldr	r2, .L301+40
 4354 1dea 1D46     		mov	r5, r3
 4355 1dec 1446     		mov	r4, r2
 4356 1dee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4357 1df0 2860     		str	r0, [r5]	@ unaligned
 4358 1df2 6960     		str	r1, [r5, #4]	@ unaligned
 4359 1df4 AA60     		str	r2, [r5, #8]	@ unaligned
 4360 1df6 EB60     		str	r3, [r5, #12]	@ unaligned
 4361 1df8 2378     		ldrb	r3, [r4]
 4362 1dfa 2B74     		strb	r3, [r5, #16]
 801:..\src/command_processing.c ****                     }
 4363              		.loc 1 801 0
 4364 1dfc 00BF     		nop
 4365              	.L252:
 4366              		.loc 1 803 0
 4367 1dfe 4BE1     		b	.L198
 4368              	.L209:
 804:..\src/command_processing.c ****                 case 10:    // device type menu
 805:..\src/command_processing.c ****                     switch(*m_addr){
 4369              		.loc 1 805 0
 4370 1e00 D7F8483C 		ldr	r3, [r7, #3144]
 4371 1e04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4372 1e06 042B     		cmp	r3, #4
 4373 1e08 00F24581 		bhi	.L287
 4374 1e0c 01A2     		adr	r2, .L258
 4375 1e0e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4376 1e12 00BF     		.p2align 2
 4377              	.L258:
 4378 1e14 291E0000 		.word	.L257+1
 4379 1e18 511E0000 		.word	.L259+1
 4380 1e1c 7B1E0000 		.word	.L260+1
 4381 1e20 A31E0000 		.word	.L261+1
 4382 1e24 C91E0000 		.word	.L262+1
 4383              		.p2align 1
 4384              	.L257:
 806:..\src/command_processing.c ****                         case 0:
 807:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 4385              		.loc 1 807 0
 4386 1e28 07F12403 		add	r3, r7, #36
 4387 1e2c 1846     		mov	r0, r3
 4388 1e2e FFF7FEFF 		bl	strlen
 4389 1e32 0346     		mov	r3, r0
 4390 1e34 1A46     		mov	r2, r3
 4391 1e36 07F12403 		add	r3, r7, #36
 4392 1e3a 1344     		add	r3, r3, r2
 4393 1e3c 574A     		ldr	r2, .L301+44
 4394 1e3e 1C46     		mov	r4, r3
 4395 1e40 1346     		mov	r3, r2
 4396 1e42 07CB     		ldmia	r3!, {r0, r1, r2}
 4397 1e44 2060     		str	r0, [r4]	@ unaligned
 4398 1e46 6160     		str	r1, [r4, #4]	@ unaligned
 4399 1e48 A260     		str	r2, [r4, #8]	@ unaligned
 4400 1e4a 1B88     		ldrh	r3, [r3]	@ unaligned
 4401 1e4c A381     		strh	r3, [r4, #12]	@ unaligned
 808:..\src/command_processing.c ****                         break;
 4402              		.loc 1 808 0
 4403 1e4e 53E0     		b	.L256
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 111


 4404              	.L259:
 809:..\src/command_processing.c ****                         case 1:
 810:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 4405              		.loc 1 810 0
 4406 1e50 07F12403 		add	r3, r7, #36
 4407 1e54 1846     		mov	r0, r3
 4408 1e56 FFF7FEFF 		bl	strlen
 4409 1e5a 0346     		mov	r3, r0
 4410 1e5c 1A46     		mov	r2, r3
 4411 1e5e 07F12403 		add	r3, r7, #36
 4412 1e62 1344     		add	r3, r3, r2
 4413 1e64 4E4A     		ldr	r2, .L301+48
 4414 1e66 1D46     		mov	r5, r3
 4415 1e68 1446     		mov	r4, r2
 4416 1e6a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4417 1e6c 2860     		str	r0, [r5]	@ unaligned
 4418 1e6e 6960     		str	r1, [r5, #4]	@ unaligned
 4419 1e70 AA60     		str	r2, [r5, #8]	@ unaligned
 4420 1e72 EB60     		str	r3, [r5, #12]	@ unaligned
 4421 1e74 2388     		ldrh	r3, [r4]	@ unaligned
 4422 1e76 2B82     		strh	r3, [r5, #16]	@ unaligned
 811:..\src/command_processing.c ****                         break;
 4423              		.loc 1 811 0
 4424 1e78 3EE0     		b	.L256
 4425              	.L260:
 812:..\src/command_processing.c ****                         case 2:
 813:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 4426              		.loc 1 813 0
 4427 1e7a 07F12403 		add	r3, r7, #36
 4428 1e7e 1846     		mov	r0, r3
 4429 1e80 FFF7FEFF 		bl	strlen
 4430 1e84 0346     		mov	r3, r0
 4431 1e86 1A46     		mov	r2, r3
 4432 1e88 07F12403 		add	r3, r7, #36
 4433 1e8c 1344     		add	r3, r3, r2
 4434 1e8e 454A     		ldr	r2, .L301+52
 4435 1e90 1C46     		mov	r4, r3
 4436 1e92 1346     		mov	r3, r2
 4437 1e94 07CB     		ldmia	r3!, {r0, r1, r2}
 4438 1e96 2060     		str	r0, [r4]	@ unaligned
 4439 1e98 6160     		str	r1, [r4, #4]	@ unaligned
 4440 1e9a A260     		str	r2, [r4, #8]	@ unaligned
 4441 1e9c 1B88     		ldrh	r3, [r3]	@ unaligned
 4442 1e9e A381     		strh	r3, [r4, #12]	@ unaligned
 814:..\src/command_processing.c ****                         break;
 4443              		.loc 1 814 0
 4444 1ea0 2AE0     		b	.L256
 4445              	.L261:
 815:..\src/command_processing.c ****                         case 3:
 816:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 4446              		.loc 1 816 0
 4447 1ea2 07F12403 		add	r3, r7, #36
 4448 1ea6 1846     		mov	r0, r3
 4449 1ea8 FFF7FEFF 		bl	strlen
 4450 1eac 0346     		mov	r3, r0
 4451 1eae 1A46     		mov	r2, r3
 4452 1eb0 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 112


 4453 1eb4 1344     		add	r3, r3, r2
 4454 1eb6 3C4A     		ldr	r2, .L301+56
 4455 1eb8 1C46     		mov	r4, r3
 4456 1eba 1546     		mov	r5, r2
 4457 1ebc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4458 1ebe 2060     		str	r0, [r4]	@ unaligned
 4459 1ec0 6160     		str	r1, [r4, #4]	@ unaligned
 4460 1ec2 A260     		str	r2, [r4, #8]	@ unaligned
 4461 1ec4 E360     		str	r3, [r4, #12]	@ unaligned
 817:..\src/command_processing.c ****                         break;
 4462              		.loc 1 817 0
 4463 1ec6 17E0     		b	.L256
 4464              	.L262:
 818:..\src/command_processing.c ****                         case 4:
 819:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 4465              		.loc 1 819 0
 4466 1ec8 07F12403 		add	r3, r7, #36
 4467 1ecc 1846     		mov	r0, r3
 4468 1ece FFF7FEFF 		bl	strlen
 4469 1ed2 0346     		mov	r3, r0
 4470 1ed4 1A46     		mov	r2, r3
 4471 1ed6 07F12403 		add	r3, r7, #36
 4472 1eda 1344     		add	r3, r3, r2
 4473 1edc 334A     		ldr	r2, .L301+60
 4474 1ede 1D46     		mov	r5, r3
 4475 1ee0 1446     		mov	r4, r2
 4476 1ee2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4477 1ee4 2860     		str	r0, [r5]	@ unaligned
 4478 1ee6 6960     		str	r1, [r5, #4]	@ unaligned
 4479 1ee8 AA60     		str	r2, [r5, #8]	@ unaligned
 4480 1eea EB60     		str	r3, [r5, #12]	@ unaligned
 4481 1eec 2388     		ldrh	r3, [r4]	@ unaligned
 4482 1eee A278     		ldrb	r2, [r4, #2]
 4483 1ef0 2B82     		strh	r3, [r5, #16]	@ unaligned
 4484 1ef2 1346     		mov	r3, r2
 4485 1ef4 AB74     		strb	r3, [r5, #18]
 820:..\src/command_processing.c ****                         break;
 4486              		.loc 1 820 0
 4487 1ef6 00BF     		nop
 4488              	.L256:
 821:..\src/command_processing.c ****                     }
 822:..\src/command_processing.c ****                     break;
 4489              		.loc 1 822 0
 4490 1ef8 CDE0     		b	.L287
 4491              	.L210:
 823:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 824:..\src/command_processing.c ****                     switch(*m_addr){
 4492              		.loc 1 824 0
 4493 1efa D7F8483C 		ldr	r3, [r7, #3144]
 4494 1efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4495 1f00 002B     		cmp	r3, #0
 4496 1f02 02D0     		beq	.L264
 4497 1f04 012B     		cmp	r3, #1
 4498 1f06 59D0     		beq	.L265
 825:..\src/command_processing.c ****                         case 0:
 826:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 827:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 113


 828:..\src/command_processing.c ****                             }
 829:..\src/command_processing.c ****                             else {
 830:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist,Slow:hand\0");
 831:..\src/command_processing.c ****                             }                            
 832:..\src/command_processing.c ****                         break;
 833:..\src/command_processing.c ****                         case 1:
 834:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 835:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 836:..\src/command_processing.c ****                             }
 837:..\src/command_processing.c ****                             else {
 838:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist,Fast:hand\0");
 839:..\src/command_processing.c ****                             }
 840:..\src/command_processing.c ****                         break;
 841:..\src/command_processing.c ****                     }
 842:..\src/command_processing.c ****                     break;
 4499              		.loc 1 842 0
 4500 1f08 C6E0     		b	.L198
 4501              	.L264:
 826:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 4502              		.loc 1 826 0
 4503 1f0a 294B     		ldr	r3, .L301+64
 4504 1f0c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 4505 1f10 042B     		cmp	r3, #4
 4506 1f12 16D1     		bne	.L266
 827:..\src/command_processing.c ****                             }
 4507              		.loc 1 827 0
 4508 1f14 07F12403 		add	r3, r7, #36
 4509 1f18 1846     		mov	r0, r3
 4510 1f1a FFF7FEFF 		bl	strlen
 4511 1f1e 0346     		mov	r3, r0
 4512 1f20 1A46     		mov	r2, r3
 4513 1f22 07F12403 		add	r3, r7, #36
 4514 1f26 1344     		add	r3, r3, r2
 4515 1f28 224A     		ldr	r2, .L301+68
 4516 1f2a 1D46     		mov	r5, r3
 4517 1f2c 1446     		mov	r4, r2
 4518 1f2e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4519 1f30 2860     		str	r0, [r5]	@ unaligned
 4520 1f32 6960     		str	r1, [r5, #4]	@ unaligned
 4521 1f34 AA60     		str	r2, [r5, #8]	@ unaligned
 4522 1f36 EB60     		str	r3, [r5, #12]	@ unaligned
 4523 1f38 2068     		ldr	r0, [r4]	@ unaligned
 4524 1f3a 2861     		str	r0, [r5, #16]	@ unaligned
 4525 1f3c A388     		ldrh	r3, [r4, #4]	@ unaligned
 4526 1f3e AB82     		strh	r3, [r5, #20]	@ unaligned
 832:..\src/command_processing.c ****                         case 1:
 4527              		.loc 1 832 0
 4528 1f40 6FE0     		b	.L263
 4529              	.L266:
 830:..\src/command_processing.c ****                             }                            
 4530              		.loc 1 830 0
 4531 1f42 07F12403 		add	r3, r7, #36
 4532 1f46 1846     		mov	r0, r3
 4533 1f48 FFF7FEFF 		bl	strlen
 4534 1f4c 0346     		mov	r3, r0
 4535 1f4e 1A46     		mov	r2, r3
 4536 1f50 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 114


 4537 1f54 1344     		add	r3, r3, r2
 4538 1f56 184A     		ldr	r2, .L301+72
 4539 1f58 1D46     		mov	r5, r3
 4540 1f5a 1446     		mov	r4, r2
 4541 1f5c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4542 1f5e 2860     		str	r0, [r5]	@ unaligned
 4543 1f60 6960     		str	r1, [r5, #4]	@ unaligned
 4544 1f62 AA60     		str	r2, [r5, #8]	@ unaligned
 4545 1f64 EB60     		str	r3, [r5, #12]	@ unaligned
 4546 1f66 2068     		ldr	r0, [r4]	@ unaligned
 4547 1f68 2861     		str	r0, [r5, #16]	@ unaligned
 4548 1f6a A388     		ldrh	r3, [r4, #4]	@ unaligned
 4549 1f6c AB82     		strh	r3, [r5, #20]	@ unaligned
 832:..\src/command_processing.c ****                         case 1:
 4550              		.loc 1 832 0
 4551 1f6e 58E0     		b	.L263
 4552              	.L302:
 4553              		.align	2
 4554              	.L301:
 4555 1f70 04010000 		.word	.LC108
 4556 1f74 18010000 		.word	.LC109
 4557 1f78 EC000000 		.word	.LC106
 4558 1f7c 28010000 		.word	.LC110
 4559 1f80 30010000 		.word	.LC111
 4560 1f84 38010000 		.word	.LC112
 4561 1f88 48010000 		.word	.LC113
 4562 1f8c 50010000 		.word	.LC114
 4563 1f90 58010000 		.word	.LC115
 4564 1f94 70010000 		.word	.LC116
 4565 1f98 88010000 		.word	.LC117
 4566 1f9c 9C010000 		.word	.LC118
 4567 1fa0 AC010000 		.word	.LC119
 4568 1fa4 C0010000 		.word	.LC120
 4569 1fa8 D0010000 		.word	.LC121
 4570 1fac E4010000 		.word	.LC122
 4571 1fb0 00000000 		.word	c_mem
 4572 1fb4 F8010000 		.word	.LC123
 4573 1fb8 10020000 		.word	.LC124
 4574              	.L265:
 834:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 4575              		.loc 1 834 0
 4576 1fbc C44B     		ldr	r3, .L303
 4577 1fbe 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 4578 1fc2 042B     		cmp	r3, #4
 4579 1fc4 16D1     		bne	.L268
 835:..\src/command_processing.c ****                             }
 4580              		.loc 1 835 0
 4581 1fc6 07F12403 		add	r3, r7, #36
 4582 1fca 1846     		mov	r0, r3
 4583 1fcc FFF7FEFF 		bl	strlen
 4584 1fd0 0346     		mov	r3, r0
 4585 1fd2 1A46     		mov	r2, r3
 4586 1fd4 07F12403 		add	r3, r7, #36
 4587 1fd8 1344     		add	r3, r3, r2
 4588 1fda BE4A     		ldr	r2, .L303+4
 4589 1fdc 1D46     		mov	r5, r3
 4590 1fde 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 115


 4591 1fe0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4592 1fe2 2860     		str	r0, [r5]	@ unaligned
 4593 1fe4 6960     		str	r1, [r5, #4]	@ unaligned
 4594 1fe6 AA60     		str	r2, [r5, #8]	@ unaligned
 4595 1fe8 EB60     		str	r3, [r5, #12]	@ unaligned
 4596 1fea 2068     		ldr	r0, [r4]	@ unaligned
 4597 1fec 2861     		str	r0, [r5, #16]	@ unaligned
 4598 1fee A388     		ldrh	r3, [r4, #4]	@ unaligned
 4599 1ff0 AB82     		strh	r3, [r5, #20]	@ unaligned
 840:..\src/command_processing.c ****                     }
 4600              		.loc 1 840 0
 4601 1ff2 15E0     		b	.L288
 4602              	.L268:
 838:..\src/command_processing.c ****                             }
 4603              		.loc 1 838 0
 4604 1ff4 07F12403 		add	r3, r7, #36
 4605 1ff8 1846     		mov	r0, r3
 4606 1ffa FFF7FEFF 		bl	strlen
 4607 1ffe 0346     		mov	r3, r0
 4608 2000 1A46     		mov	r2, r3
 4609 2002 07F12403 		add	r3, r7, #36
 4610 2006 1344     		add	r3, r3, r2
 4611 2008 B34A     		ldr	r2, .L303+8
 4612 200a 1D46     		mov	r5, r3
 4613 200c 1446     		mov	r4, r2
 4614 200e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4615 2010 2860     		str	r0, [r5]	@ unaligned
 4616 2012 6960     		str	r1, [r5, #4]	@ unaligned
 4617 2014 AA60     		str	r2, [r5, #8]	@ unaligned
 4618 2016 EB60     		str	r3, [r5, #12]	@ unaligned
 4619 2018 2068     		ldr	r0, [r4]	@ unaligned
 4620 201a 2861     		str	r0, [r5, #16]	@ unaligned
 4621 201c A388     		ldrh	r3, [r4, #4]	@ unaligned
 4622 201e AB82     		strh	r3, [r5, #20]	@ unaligned
 4623              	.L288:
 840:..\src/command_processing.c ****                     }
 4624              		.loc 1 840 0
 4625 2020 00BF     		nop
 4626              	.L263:
 4627              		.loc 1 842 0 discriminator 13
 4628 2022 39E0     		b	.L198
 4629              	.L211:
 843:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 844:..\src/command_processing.c ****                     switch(*m_addr){
 4630              		.loc 1 844 0
 4631 2024 D7F8483C 		ldr	r3, [r7, #3144]
 4632 2028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4633 202a 002B     		cmp	r3, #0
 4634 202c 02D0     		beq	.L271
 4635 202e 012B     		cmp	r3, #1
 4636 2030 15D0     		beq	.L272
 845:..\src/command_processing.c ****                         case 0:
 846:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 847:..\src/command_processing.c ****                         break;
 848:..\src/command_processing.c ****                         case 1:
 849:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 850:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 116


 851:..\src/command_processing.c ****                     }
 852:..\src/command_processing.c ****                     break;
 4637              		.loc 1 852 0
 4638 2032 31E0     		b	.L198
 4639              	.L271:
 846:..\src/command_processing.c ****                         break;
 4640              		.loc 1 846 0
 4641 2034 07F12403 		add	r3, r7, #36
 4642 2038 1846     		mov	r0, r3
 4643 203a FFF7FEFF 		bl	strlen
 4644 203e 0346     		mov	r3, r0
 4645 2040 1A46     		mov	r2, r3
 4646 2042 07F12403 		add	r3, r7, #36
 4647 2046 1344     		add	r3, r3, r2
 4648 2048 A44A     		ldr	r2, .L303+12
 4649 204a 1D46     		mov	r5, r3
 4650 204c 1446     		mov	r4, r2
 4651 204e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4652 2050 2860     		str	r0, [r5]	@ unaligned
 4653 2052 6960     		str	r1, [r5, #4]	@ unaligned
 4654 2054 AA60     		str	r2, [r5, #8]	@ unaligned
 4655 2056 EB60     		str	r3, [r5, #12]	@ unaligned
 4656 2058 2068     		ldr	r0, [r4]	@ unaligned
 4657 205a 2861     		str	r0, [r5, #16]	@ unaligned
 847:..\src/command_processing.c ****                         case 1:
 4658              		.loc 1 847 0
 4659 205c 14E0     		b	.L270
 4660              	.L272:
 849:..\src/command_processing.c ****                         break;
 4661              		.loc 1 849 0
 4662 205e 07F12403 		add	r3, r7, #36
 4663 2062 1846     		mov	r0, r3
 4664 2064 FFF7FEFF 		bl	strlen
 4665 2068 0346     		mov	r3, r0
 4666 206a 1A46     		mov	r2, r3
 4667 206c 07F12403 		add	r3, r7, #36
 4668 2070 1344     		add	r3, r3, r2
 4669 2072 9B4A     		ldr	r2, .L303+16
 4670 2074 1D46     		mov	r5, r3
 4671 2076 1446     		mov	r4, r2
 4672 2078 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4673 207a 2860     		str	r0, [r5]	@ unaligned
 4674 207c 6960     		str	r1, [r5, #4]	@ unaligned
 4675 207e AA60     		str	r2, [r5, #8]	@ unaligned
 4676 2080 EB60     		str	r3, [r5, #12]	@ unaligned
 4677 2082 2068     		ldr	r0, [r4]	@ unaligned
 4678 2084 2861     		str	r0, [r5, #16]	@ unaligned
 850:..\src/command_processing.c ****                     }
 4679              		.loc 1 850 0
 4680 2086 00BF     		nop
 4681              	.L270:
 4682              		.loc 1 852 0
 4683 2088 06E0     		b	.L198
 4684              	.L284:
 702:..\src/command_processing.c ****                 case 2:     // control mode menu
 4685              		.loc 1 702 0
 4686 208a 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 117


 4687 208c 04E0     		b	.L198
 4688              	.L285:
 718:..\src/command_processing.c ****                 case 3:     // yes/no menu
 4689              		.loc 1 718 0
 4690 208e 00BF     		nop
 4691 2090 02E0     		b	.L198
 4692              	.L286:
 762:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 4693              		.loc 1 762 0
 4694 2092 00BF     		nop
 4695 2094 00E0     		b	.L198
 4696              	.L287:
 822:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 4697              		.loc 1 822 0
 4698 2096 00BF     		nop
 4699              	.L198:
 853:..\src/command_processing.c ****             }
 854:..\src/command_processing.c ****             //Recomputes string lenght
 855:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 4700              		.loc 1 855 0
 4701 2098 07F12403 		add	r3, r7, #36
 4702 209c 1846     		mov	r0, r3
 4703 209e FFF7FEFF 		bl	strlen
 4704 20a2 0346     		mov	r3, r0
 4705 20a4 DBB2     		uxtb	r3, r3
 4706 20a6 0133     		adds	r3, r3, #1
 4707 20a8 87F8523C 		strb	r3, [r7, #3154]
 4708              	.L197:
 856:..\src/command_processing.c ****         }
 857:..\src/command_processing.c **** 
 858:..\src/command_processing.c ****         // Add parameter string to packet
 859:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4709              		.loc 1 859 0
 4710 20ac 97F8523C 		ldrb	r3, [r7, #3154]
 4711 20b0 87F8573C 		strb	r3, [r7, #3159]
 4712 20b4 26E0     		b	.L273
 4713              	.L274:
 860:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4714              		.loc 1 860 0 discriminator 3
 4715 20b6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4716 20ba 3222     		movs	r2, #50
 4717 20bc 02FB03F3 		mul	r3, r2, r3
 4718 20c0 1A1D     		adds	r2, r3, #4
 4719 20c2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4720 20c6 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4721 20ca 381D     		adds	r0, r7, #4
 4722 20cc 0068     		ldr	r0, [r0]
 4723 20ce 0144     		add	r1, r1, r0
 4724 20d0 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4725 20d2 01FB03F3 		mul	r3, r1, r3
 4726 20d6 1A44     		add	r2, r2, r3
 4727 20d8 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4728 20dc 1A44     		add	r2, r2, r3
 4729 20de 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4730 20e2 D31A     		subs	r3, r2, r3
 4731 20e4 97F8521C 		ldrb	r1, [r7, #3154]	@ zero_extendqisi2
 4732 20e8 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 118


 4733 20ec 8A1A     		subs	r2, r1, r2
 4734 20ee 07F12401 		add	r1, r7, #36
 4735 20f2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4736 20f4 07F15802 		add	r2, r7, #88
 4737 20f8 D154     		strb	r1, [r2, r3]
 859:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4738              		.loc 1 859 0 discriminator 3
 4739 20fa 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4740 20fe 013B     		subs	r3, r3, #1
 4741 2100 87F8573C 		strb	r3, [r7, #3159]
 4742              	.L273:
 859:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4743              		.loc 1 859 0 is_stmt 0 discriminator 1
 4744 2104 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4745 2108 002B     		cmp	r3, #0
 4746 210a D4D1     		bne	.L274
 861:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 862:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4747              		.loc 1 862 0 is_stmt 1
 4748 210c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4749 2110 07F10802 		add	r2, r7, #8
 4750 2114 1268     		ldr	r2, [r2]
 4751 2116 1344     		add	r3, r3, r2
 4752 2118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4753 211a 002B     		cmp	r3, #0
 4754 211c 21D1     		bne	.L275
 863:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 4755              		.loc 1 863 0
 4756 211e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4757 2122 3222     		movs	r2, #50
 4758 2124 02FB03F3 		mul	r3, r2, r3
 4759 2128 1A1D     		adds	r2, r3, #4
 4760 212a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4761 212e 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4762 2132 381D     		adds	r0, r7, #4
 4763 2134 0068     		ldr	r0, [r0]
 4764 2136 0144     		add	r1, r1, r0
 4765 2138 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4766 213a 01FB03F3 		mul	r3, r1, r3
 4767 213e 1A44     		add	r2, r2, r3
 4768 2140 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4769 2144 1344     		add	r3, r3, r2
 4770 2146 97F8542C 		ldrb	r2, [r7, #3156]	@ zero_extendqisi2
 4771 214a D7F8701C 		ldr	r1, [r7, #3184]
 4772 214e 0A44     		add	r2, r2, r1
 4773 2150 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4774 2152 07F15802 		add	r2, r7, #88
 4775 2156 D154     		strb	r1, [r2, r3]
 864:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 4776              		.loc 1 864 0
 4777 2158 97F8543C 		ldrb	r3, [r7, #3156]
 4778 215c 0133     		adds	r3, r3, #1
 4779 215e 87F8543C 		strb	r3, [r7, #3156]
 4780              	.L275:
 865:..\src/command_processing.c ****         }      
 866:..\src/command_processing.c ****         
 867:..\src/command_processing.c ****         // Add struct index after an empty bit
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 119


 868:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 869:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4781              		.loc 1 869 0
 4782 2162 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4783 2166 07F10802 		add	r2, r7, #8
 4784 216a 1268     		ldr	r2, [r2]
 4785 216c 1344     		add	r3, r3, r2
 4786 216e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4787 2170 002B     		cmp	r3, #0
 4788 2172 1ED1     		bne	.L276
 870:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 4789              		.loc 1 870 0
 4790 2174 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4791 2178 3222     		movs	r2, #50
 4792 217a 02FB03F3 		mul	r3, r2, r3
 4793 217e 1A1D     		adds	r2, r3, #4
 4794 2180 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4795 2184 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4796 2188 381D     		adds	r0, r7, #4
 4797 218a 0068     		ldr	r0, [r0]
 4798 218c 0144     		add	r1, r1, r0
 4799 218e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4800 2190 01FB03F3 		mul	r3, r1, r3
 4801 2194 1A44     		add	r2, r2, r3
 4802 2196 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4803 219a 1344     		add	r3, r3, r2
 4804 219c 0233     		adds	r3, r3, #2
 4805 219e 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 4806 21a2 3946     		mov	r1, r7
 4807 21a4 0968     		ldr	r1, [r1]
 4808 21a6 0A44     		add	r2, r2, r1
 4809 21a8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4810 21aa 07F15802 		add	r2, r7, #88
 4811 21ae D154     		strb	r1, [r2, r3]
 4812 21b0 1DE0     		b	.L277
 4813              	.L276:
 871:..\src/command_processing.c ****         }
 872:..\src/command_processing.c ****         else {
 873:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 4814              		.loc 1 873 0
 4815 21b2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4816 21b6 3222     		movs	r2, #50
 4817 21b8 02FB03F3 		mul	r3, r2, r3
 4818 21bc 1A1D     		adds	r2, r3, #4
 4819 21be 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4820 21c2 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4821 21c6 381D     		adds	r0, r7, #4
 4822 21c8 0068     		ldr	r0, [r0]
 4823 21ca 0144     		add	r1, r1, r0
 4824 21cc 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4825 21ce 01FB03F3 		mul	r3, r1, r3
 4826 21d2 1A44     		add	r2, r2, r3
 4827 21d4 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4828 21d8 1344     		add	r3, r3, r2
 4829 21da 0133     		adds	r3, r3, #1
 4830 21dc 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 4831 21e0 3946     		mov	r1, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 120


 4832 21e2 0968     		ldr	r1, [r1]
 4833 21e4 0A44     		add	r2, r2, r1
 4834 21e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4835 21e8 07F15802 		add	r2, r7, #88
 4836 21ec D154     		strb	r1, [r2, r3]
 4837              	.L277:
 403:..\src/command_processing.c ****         
 4838              		.loc 1 403 0 discriminator 2
 4839 21ee 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4840 21f2 0133     		adds	r3, r3, #1
 4841 21f4 87F8553C 		strb	r3, [r7, #3157]
 4842              	.L73:
 403:..\src/command_processing.c ****         
 4843              		.loc 1 403 0 is_stmt 0 discriminator 1
 4844 21f8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4845 21fc 232B     		cmp	r3, #35
 4846 21fe 7DF64CAF 		bls	.L278
 874:..\src/command_processing.c ****         }
 875:..\src/command_processing.c ****     }
 876:..\src/command_processing.c **** 
 877:..\src/command_processing.c ****     // Add menu
 878:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 4847              		.loc 1 878 0 is_stmt 1
 4848 2202 0023     		movs	r3, #0
 4849 2204 87F8563C 		strb	r3, [r7, #3158]
 4850 2208 3DE0     		b	.L279
 4851              	.L282:
 879:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4852              		.loc 1 879 0
 4853 220a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4854 220e 9B00     		lsls	r3, r3, #2
 4855 2210 D7F87C2C 		ldr	r2, [r7, #3196]
 4856 2214 1344     		add	r3, r3, r2
 4857 2216 1B68     		ldr	r3, [r3]
 4858 2218 1846     		mov	r0, r3
 4859 221a FFF7FEFF 		bl	strlen
 4860 221e 0346     		mov	r3, r0
 4861 2220 87F8523C 		strb	r3, [r7, #3154]
 880:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4862              		.loc 1 880 0
 4863 2224 97F8523C 		ldrb	r3, [r7, #3154]
 4864 2228 87F8573C 		strb	r3, [r7, #3159]
 4865 222c 22E0     		b	.L280
 4866              	.L281:
 881:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 4867              		.loc 1 881 0 discriminator 3
 4868 222e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4869 2232 9622     		movs	r2, #150
 4870 2234 02FB03F3 		mul	r3, r2, r3
 4871 2238 03F20A72 		addw	r2, r3, #1802
 4872 223c 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4873 2240 1A44     		add	r2, r2, r3
 4874 2242 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4875 2246 D31A     		subs	r3, r2, r3
 4876 2248 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 4877 224c 9200     		lsls	r2, r2, #2
 4878 224e D7F87C1C 		ldr	r1, [r7, #3196]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 121


 4879 2252 0A44     		add	r2, r2, r1
 4880 2254 1268     		ldr	r2, [r2]
 4881 2256 97F8520C 		ldrb	r0, [r7, #3154]	@ zero_extendqisi2
 4882 225a 97F8571C 		ldrb	r1, [r7, #3159]	@ zero_extendqisi2
 4883 225e 411A     		subs	r1, r0, r1
 4884 2260 0A44     		add	r2, r2, r1
 4885 2262 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4886 2264 07F15802 		add	r2, r7, #88
 4887 2268 D154     		strb	r1, [r2, r3]
 880:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4888              		.loc 1 880 0 discriminator 3
 4889 226a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4890 226e 013B     		subs	r3, r3, #1
 4891 2270 87F8573C 		strb	r3, [r7, #3159]
 4892              	.L280:
 880:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4893              		.loc 1 880 0 is_stmt 0 discriminator 1
 4894 2274 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4895 2278 002B     		cmp	r3, #0
 4896 227a D8D1     		bne	.L281
 878:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4897              		.loc 1 878 0 is_stmt 1 discriminator 2
 4898 227c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4899 2280 0133     		adds	r3, r3, #1
 4900 2282 87F8563C 		strb	r3, [r7, #3158]
 4901              	.L279:
 878:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4902              		.loc 1 878 0 is_stmt 0 discriminator 1
 4903 2286 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4904 228a 072B     		cmp	r3, #7
 4905 228c BDD9     		bls	.L282
 882:..\src/command_processing.c ****     }
 883:..\src/command_processing.c ****     
 884:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 4906              		.loc 1 884 0 is_stmt 1
 4907 228e B7F8503C 		ldrh	r3, [r7, #3152]
 4908 2292 5C1E     		subs	r4, r3, #1
 4909 2294 B7F8503C 		ldrh	r3, [r7, #3152]	@ movhi
 4910 2298 DBB2     		uxtb	r3, r3
 4911 229a 013B     		subs	r3, r3, #1
 4912 229c DAB2     		uxtb	r2, r3
 4913 229e 07F15803 		add	r3, r7, #88
 4914 22a2 1146     		mov	r1, r2
 4915 22a4 1846     		mov	r0, r3
 4916 22a6 FFF7FEFF 		bl	LCRChecksum
 4917 22aa 0346     		mov	r3, r0
 4918 22ac 1A46     		mov	r2, r3
 4919 22ae 07F15803 		add	r3, r7, #88
 4920 22b2 1A55     		strb	r2, [r3, r4]
 885:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 4921              		.loc 1 885 0
 4922 22b4 B7F8502C 		ldrh	r2, [r7, #3152]
 4923 22b8 07F15803 		add	r3, r7, #88
 4924 22bc 1146     		mov	r1, r2
 4925 22be 1846     		mov	r0, r3
 4926 22c0 FFF7FEFF 		bl	commWrite
 886:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 122


 4927              		.loc 1 886 0
 4928 22c4 00BF     		nop
 4929 22c6 07F65C47 		addw	r7, r7, #3164
 4930              		.cfi_def_cfa_offset 20
 4931 22ca BD46     		mov	sp, r7
 4932              		.cfi_def_cfa_register 13
 4933              		@ sp needed
 4934 22cc F0BD     		pop	{r4, r5, r6, r7, pc}
 4935              	.L304:
 4936 22ce 00BF     		.align	2
 4937              	.L303:
 4938 22d0 00000000 		.word	c_mem
 4939 22d4 28020000 		.word	.LC125
 4940 22d8 40020000 		.word	.LC126
 4941 22dc 58020000 		.word	.LC127
 4942 22e0 70020000 		.word	.LC128
 4943              		.cfi_endproc
 4944              	.LFE67:
 4945              		.size	get_param_list, .-get_param_list
 4946              		.section	.rodata
 4947 0285 000000   		.align	2
 4948              	.LC130:
 4949 0288 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 4949      204E6F6E 
 4949      650A3120 
 4949      2D3E204C 
 4949      6F772028 
 4950 02b8 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 4950      74657220 
 4950      72656164 
 4950      290A3220 
 4950      2D3E2048 
 4951 02e8 62697420 		.ascii	"bit register read)\012\000"
 4951      72656769 
 4951      73746572 
 4951      20726561 
 4951      64290A00 
 4952              		.align	2
 4953              	.LC131:
 4954 02fc 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 4954      20466173 
 4954      743A7379 
 4954      6E322C20 
 4954      536C6F77 
 4955 032c 796E310A 		.ascii	"yn1\012\000"
 4955      00
 4956 0331 000000   		.align	2
 4957              	.LC132:
 4958 0334 30202D3E 		.ascii	"0 -> Fast:wrist,Slow:hand\0121 -> Slow:wrist,Fast:h"
 4958      20466173 
 4958      743A7772 
 4958      6973742C 
 4958      536C6F77 
 4959 0364 616E640A 		.ascii	"and\012\000"
 4959      00
 4960 0369 000000   		.align	2
 4961              	.LC133:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 123


 4962 036c 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 4962      20557362 
 4962      0A31202D 
 4962      3E204861 
 4962      6E646C65 
 4963 0397 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 4963      20454D47 
 4963      20496E74 
 4963      65677261 
 4963      6C0A3420 
 4964 03c4 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 4964      616E6365 
 4964      640A3620 
 4964      2D3E204A 
 4964      6F797374 
 4965 03f1 204E430A 		.ascii	" NC\012\000"
 4965      00
 4966 03f6 0000     		.align	2
 4967              	.LC134:
 4968 03f8 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 4968      20506F73 
 4968      6974696F 
 4968      6E0A3120 
 4968      2D3E2050 
 4969 0422 6F736974 		.ascii	"osition and Current\012\000"
 4969      696F6E20 
 4969      616E6420 
 4969      43757272 
 4969      656E740A 
 4970 0437 00       		.align	2
 4971              	.LC135:
 4972 0438 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 4972      20446561 
 4972      63746976 
 4972      61746520 
 4972      5B4E4F5D 
 4973 0462 0000     		.align	2
 4974              	.LC136:
 4975 0464 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 4975      20526967 
 4975      68740A31 
 4975      202D3E20 
 4975      4C656674 
 4976 047a 0000     		.align	2
 4977              	.LC137:
 4978 047c 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 4978      204F4646 
 4978      0A31202D 
 4978      3E204F4E 
 4978      0A546865 
 4979 04a3 00       		.align	2
 4980              	.LC138:
 4981 04a4 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 4981      204E6F6E 
 4981      650A3120 
 4981      2D3E2053 
 4981      442F5254 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 124


 4982 04d1 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 4982      0A33202D 
 4982      3E204F74 
 4982      68657220 
 4982      5B4E2F41 
 4983 04fc 00       		.ascii	"\000"
 4984 04fd 000000   		.align	2
 4985              	.LC139:
 4986 0500 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> R01\012The "
 4986      2047656E 
 4986      65726963 
 4986      20757365 
 4986      720A3120 
 4987 052a 626F6172 		.ascii	"board will reset\012\000"
 4987      64207769 
 4987      6C6C2072 
 4987      65736574 
 4987      0A00
 4988              		.align	2
 4989              	.LC140:
 4990 053c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 4990      204D4333 
 4990      33383837 
 4990      20285374 
 4990      616E6461 
 4991 056c 290A3220 		.ascii	")\0122 -> ESC (Brushless)\012The board will reset\012"
 4991      2D3E2045 
 4991      53432028 
 4991      42727573 
 4991      686C6573 
 4992 0598 00       		.ascii	"\000"
 4993 0599 000000   		.align	2
 4994              	.LC141:
 4995 059c 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 4995      20534F46 
 4995      5448414E 
 4995      44205052 
 4995      4F0A3120 
 4996 05c9 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 4996      4348414D 
 4996      42455253 
 4996      0A33202D 
 4996      3E204F54 
 4997 05f6 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 4997      4D4F544F 
 4997      52530A54 
 4997      68652062 
 4997      6F617264 
 4998 0617 00       		.align	2
 4999              	.LC142:
 5000 0618 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 5000      20436C6F 
 5000      73653A43 
 5000      572C204F 
 5000      70656E3A 
 5001 0648 00       		.ascii	"\000"
 5002 0649 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 125


 5003              	.LC0:
 5004 064c 02       		.byte	2
 5005 064d 07       		.byte	7
 5006 064e 07       		.byte	7
 5007 064f 00       		.byte	0
 5008 0650 00       		.byte	0
 5009 0651 00       		.byte	0
 5010 0652 02       		.byte	2
 5011 0653 03       		.byte	3
 5012 0654 07       		.byte	7
 5013 0655 00       		.byte	0
 5014 0656 05       		.byte	5
 5015 0657 05       		.byte	5
 5016 0658 03       		.byte	3
 5017 0659 04       		.byte	4
 5018 065a 00       		.byte	0
 5019 065b 06       		.byte	6
 5020 065c 02       		.byte	2
 5021 065d 00       		.byte	0
 5022 065e 01       		.byte	1
 5023 065f 00       		.byte	0
 5024 0660 07       		.byte	7
 5025 0661 02       		.byte	2
 5026 0662 05       		.byte	5
 5027 0663 05       		.byte	5
 5028 0664 05       		.byte	5
 5029 0665 00       		.byte	0
 5030 0666 00       		.byte	0
 5031 0667 00       		.byte	0
 5032 0668 00       		.byte	0
 5033 0669 00       		.byte	0
 5034 066a 00       		.byte	0
 5035 066b 02       		.byte	2
 5036 066c 00       		.byte	0
 5037 066d 02       		.byte	2
 5038 066e 00       		.byte	0
 5039 066f 09       		.byte	9
 5040 0670 02       		.byte	2
 5041 0671 00       		.byte	0
 5042 0672 02       		.byte	2
 5043 0673 00       		.byte	0
 5044 0674 02       		.byte	2
 5045 0675 01       		.byte	1
 5046 0676 00       		.byte	0
 5047 0677 07       		.byte	7
 5048 0678 07       		.byte	7
 5049 0679 00       		.byte	0
 5050 067a 00       		.byte	0
 5051 067b 00       		.byte	0
 5052 067c 02       		.byte	2
 5053 067d 03       		.byte	3
 5054 067e 07       		.byte	7
 5055 067f 00       		.byte	0
 5056 0680 05       		.byte	5
 5057 0681 05       		.byte	5
 5058 0682 03       		.byte	3
 5059 0683 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 126


 5060 0684 01       		.byte	1
 5061 0685 00       		.byte	0
 5062 0686 07       		.byte	7
 5063 0687 02       		.byte	2
 5064 0688 00       		.byte	0
 5065 0689 02       		.byte	2
 5066 068a 00       		.byte	0
 5067 068b 02       		.byte	2
 5068 068c 01       		.byte	1
 5069 068d 02       		.byte	2
 5070 068e 02       		.byte	2
 5071 068f 00       		.byte	0
 5072 0690 02       		.byte	2
 5073 0691 02       		.byte	2
 5074 0692 00       		.byte	0
 5075 0693 04       		.byte	4
 5076 0694 03       		.byte	3
 5077 0695 04       		.byte	4
 5078 0696 00       		.byte	0
 5079 0697 00       		.byte	0
 5080 0698 04       		.byte	4
 5081 0699 00       		.byte	0
 5082 069a 00       		.byte	0
 5083 069b 02       		.byte	2
 5084 069c 05       		.byte	5
 5085 069d 07       		.byte	7
 5086 069e 07       		.byte	7
 5087 069f 00       		.align	2
 5088              	.LC1:
 5089 06a0 31202D20 		.ascii	"1 - Device ID:\000"
 5089      44657669 
 5089      63652049 
 5089      443A00
 5090 06af 00       		.align	2
 5091              	.LC2:
 5092 06b0 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 5092      506F7369 
 5092      74696F6E 
 5092      20504944 
 5092      205B502C 
 5093              		.align	2
 5094              	.LC3:
 5095 06cc 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 5095      43757272 
 5095      656E7420 
 5095      50494420 
 5095      5B502C20 
 5096 06e7 00       		.align	2
 5097              	.LC4:
 5098 06e8 34202D20 		.ascii	"4 - Startup Activation:\000"
 5098      53746172 
 5098      74757020 
 5098      41637469 
 5098      76617469 
 5099              		.align	2
 5100              	.LC5:
 5101 0700 35202D20 		.ascii	"5 - Input mode:\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 127


 5101      496E7075 
 5101      74206D6F 
 5101      64653A00 
 5102              		.align	2
 5103              	.LC6:
 5104 0710 36202D20 		.ascii	"6 - Control mode:\000"
 5104      436F6E74 
 5104      726F6C20 
 5104      6D6F6465 
 5104      3A00
 5105 0722 0000     		.align	2
 5106              	.LC7:
 5107 0724 37202D20 		.ascii	"7 - Resolutions:\000"
 5107      5265736F 
 5107      6C757469 
 5107      6F6E733A 
 5107      00
 5108 0735 000000   		.align	2
 5109              	.LC8:
 5110 0738 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 5110      4D656173 
 5110      7572656D 
 5110      656E7420 
 5110      4F666673 
 5111 0751 000000   		.align	2
 5112              	.LC9:
 5113 0754 39202D20 		.ascii	"9 - Multipliers:\000"
 5113      4D756C74 
 5113      69706C69 
 5113      6572733A 
 5113      00
 5114 0765 000000   		.align	2
 5115              	.LC10:
 5116 0768 3130202D 		.ascii	"10 - Pos. limit active:\000"
 5116      20506F73 
 5116      2E206C69 
 5116      6D697420 
 5116      61637469 
 5117              		.align	2
 5118              	.LC11:
 5119 0780 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 5119      20506F73 
 5119      2E206C69 
 5119      6D697473 
 5119      205B696E 
 5120 079d 000000   		.align	2
 5121              	.LC12:
 5122 07a0 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 5122      204D6178 
 5122      20737465 
 5122      7073205B 
 5122      6E65672C 
 5123 07bb 00       		.align	2
 5124              	.LC13:
 5125 07bc 3133202D 		.ascii	"13 - Current limit:\000"
 5125      20437572 
 5125      72656E74 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 128


 5125      206C696D 
 5125      69743A00 
 5126              		.align	2
 5127              	.LC14:
 5128 07d0 3134202D 		.ascii	"14 - EMG thresholds:\000"
 5128      20454D47 
 5128      20746872 
 5128      6573686F 
 5128      6C64733A 
 5129 07e5 000000   		.align	2
 5130              	.LC15:
 5131 07e8 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 5131      20454D47 
 5131      2063616C 
 5131      69627261 
 5131      74696F6E 
 5132 0809 000000   		.align	2
 5133              	.LC16:
 5134 080c 3136202D 		.ascii	"16 - EMG max values:\000"
 5134      20454D47 
 5134      206D6178 
 5134      2076616C 
 5134      7565733A 
 5135 0821 000000   		.align	2
 5136              	.LC17:
 5137 0824 3137202D 		.ascii	"17 - EMG max speeds:\000"
 5137      20454D47 
 5137      206D6178 
 5137      20737065 
 5137      6564733A 
 5138 0839 000000   		.align	2
 5139              	.LC18:
 5140 083c 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 5140      20416273 
 5140      6F6C7574 
 5140      6520656E 
 5140      636F6465 
 5141              		.align	2
 5142              	.LC19:
 5143 085c 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 5143      204D6F74 
 5143      6F722068 
 5143      616E646C 
 5143      65207261 
 5144 0875 000000   		.align	2
 5145              	.LC20:
 5146 0878 3230202D 		.ascii	"20 - PWM rescaling:\000"
 5146      2050574D 
 5146      20726573 
 5146      63616C69 
 5146      6E673A00 
 5147              		.align	2
 5148              	.LC21:
 5149 088c 3231202D 		.ascii	"21 - Current lookup:\000"
 5149      20437572 
 5149      72656E74 
 5149      206C6F6F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 129


 5149      6B75703A 
 5150 08a1 000000   		.align	2
 5151              	.LC22:
 5152 08a4 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 5152      20446174 
 5152      65206F66 
 5152      206D6169 
 5152      6E74656E 
 5153 08c6 0000     		.align	2
 5154              	.LC23:
 5155 08c8 3233202D 		.ascii	"23 - Rest position:\000"
 5155      20526573 
 5155      7420706F 
 5155      73697469 
 5155      6F6E3A00 
 5156              		.align	2
 5157              	.LC24:
 5158 08dc 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 5158      20526573 
 5158      7420706F 
 5158      73697469 
 5158      6F6E2074 
 5159              		.align	2
 5160              	.LC25:
 5161 0900 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 5161      20526573 
 5161      74207665 
 5161      6C20636C 
 5161      6F737572 
 5162 0923 00       		.align	2
 5163              	.LC26:
 5164 0924 3236202D 		.ascii	"26 - Rest position enabled:\000"
 5164      20526573 
 5164      7420706F 
 5164      73697469 
 5164      6F6E2065 
 5165              		.align	2
 5166              	.LC27:
 5167 0940 3237202D 		.ascii	"27 - EMG inversion:\000"
 5167      20454D47 
 5167      20696E76 
 5167      65727369 
 5167      6F6E3A00 
 5168              		.align	2
 5169              	.LC28:
 5170 0954 3238202D 		.ascii	"28 - Hand side:\000"
 5170      2048616E 
 5170      64207369 
 5170      64653A00 
 5171              		.align	2
 5172              	.LC29:
 5173 0964 3239202D 		.ascii	"29 - Enable IMUs:\000"
 5173      20456E61 
 5173      626C6520 
 5173      494D5573 
 5173      3A00
 5174 0976 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 130


 5175              	.LC30:
 5176 0978 3330202D 		.ascii	"30 - Read Expansion port:\000"
 5176      20526561 
 5176      64204578 
 5176      70616E73 
 5176      696F6E20 
 5177 0992 0000     		.align	2
 5178              	.LC31:
 5179 0994 3331202D 		.ascii	"31 - Reset counters:\000"
 5179      20526573 
 5179      65742063 
 5179      6F756E74 
 5179      6572733A 
 5180 09a9 000000   		.align	2
 5181              	.LC32:
 5182 09ac 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 5182      204C6173 
 5182      74206368 
 5182      65636B65 
 5182      64205469 
 5183 09d2 0000     		.align	2
 5184              	.LC33:
 5185 09d4 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 5185      20535049 
 5185      20726561 
 5185      64206465 
 5185      6C617920 
 5186 09ef 00       		.align	2
 5187              	.LC34:
 5188 09f0 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 5188      204F6E20 
 5188      626F6172 
 5188      6420494D 
 5188      5520636F 
 5189 0a15 000000   		.align	2
 5190              	.LC35:
 5191 0a18 3335202D 		.ascii	"35 - User ID:\000"
 5191      20557365 
 5191      72204944 
 5191      3A00
 5192 0a26 0000     		.align	2
 5193              	.LC36:
 5194 0a28 3336202D 		.ascii	"36 - User code:\000"
 5194      20557365 
 5194      7220636F 
 5194      64653A00 
 5195              		.align	2
 5196              	.LC37:
 5197 0a38 3337202D 		.ascii	"37 - Associated encoder line:\000"
 5197      20417373 
 5197      6F636961 
 5197      74656420 
 5197      656E636F 
 5198 0a56 0000     		.align	2
 5199              	.LC38:
 5200 0a58 3338202D 		.ascii	"38 - Driver type:\000"
 5200      20447269 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 131


 5200      76657220 
 5200      74797065 
 5200      3A00
 5201 0a6a 0000     		.align	2
 5202              	.LC39:
 5203 0a6c 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 5203      2050574D 
 5203      20726174 
 5203      65206C69 
 5203      6D697465 
 5204 0a83 00       		.align	2
 5205              	.LC40:
 5206 0a84 3430202D 		.ascii	"40 - Not reversible:\000"
 5206      204E6F74 
 5206      20726576 
 5206      65727369 
 5206      626C653A 
 5207 0a99 000000   		.align	2
 5208              	.LC41:
 5209 0a9c 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 5209      20456E63 
 5209      20696478 
 5209      20757365 
 5209      6420666F 
 5210 0abb 00       		.align	2
 5211              	.LC42:
 5212 0abc 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 5212      20476561 
 5212      72207061 
 5212      72616D73 
 5212      5B4E312C 
 5213 0ada 0000     		.align	2
 5214              	.LC43:
 5215 0adc 3433202D 		.ascii	"43 - Use second motor:\000"
 5215      20557365 
 5215      20736563 
 5215      6F6E6420 
 5215      6D6F746F 
 5216 0af3 00       		.align	2
 5217              	.LC44:
 5218 0af4 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 5218      20506F73 
 5218      6974696F 
 5218      6E205049 
 5218      44205B50 
 5219 0b11 000000   		.align	2
 5220              	.LC45:
 5221 0b14 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 5221      20437572 
 5221      72656E74 
 5221      20504944 
 5221      205B502C 
 5222              		.align	2
 5223              	.LC46:
 5224 0b30 3436202D 		.ascii	"46 - Startup Activation:\000"
 5224      20537461 
 5224      72747570 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 132


 5224      20416374 
 5224      69766174 
 5225 0b49 000000   		.align	2
 5226              	.LC47:
 5227 0b4c 3437202D 		.ascii	"47 - Input mode:\000"
 5227      20496E70 
 5227      7574206D 
 5227      6F64653A 
 5227      00
 5228 0b5d 000000   		.align	2
 5229              	.LC48:
 5230 0b60 3438202D 		.ascii	"48 - Control mode:\000"
 5230      20436F6E 
 5230      74726F6C 
 5230      206D6F64 
 5230      653A00
 5231 0b73 00       		.align	2
 5232              	.LC49:
 5233 0b74 3439202D 		.ascii	"49 - Resolutions:\000"
 5233      20526573 
 5233      6F6C7574 
 5233      696F6E73 
 5233      3A00
 5234 0b86 0000     		.align	2
 5235              	.LC50:
 5236 0b88 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 5236      204D6561 
 5236      73757265 
 5236      6D656E74 
 5236      204F6666 
 5237 0ba2 0000     		.align	2
 5238              	.LC51:
 5239 0ba4 3531202D 		.ascii	"51 - Multipliers:\000"
 5239      204D756C 
 5239      7469706C 
 5239      69657273 
 5239      3A00
 5240 0bb6 0000     		.align	2
 5241              	.LC52:
 5242 0bb8 3532202D 		.ascii	"52 - Pos. limit active:\000"
 5242      20506F73 
 5242      2E206C69 
 5242      6D697420 
 5242      61637469 
 5243              		.align	2
 5244              	.LC53:
 5245 0bd0 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 5245      20506F73 
 5245      2E206C69 
 5245      6D697473 
 5245      205B696E 
 5246 0bed 000000   		.align	2
 5247              	.LC54:
 5248 0bf0 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 5248      204D6178 
 5248      20737465 
 5248      7073205B 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 133


 5248      6E65672C 
 5249 0c0b 00       		.align	2
 5250              	.LC55:
 5251 0c0c 3535202D 		.ascii	"55 - Current limit:\000"
 5251      20437572 
 5251      72656E74 
 5251      206C696D 
 5251      69743A00 
 5252              		.align	2
 5253              	.LC56:
 5254 0c20 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 5254      20416273 
 5254      6F6C7574 
 5254      6520656E 
 5254      636F6465 
 5255              		.align	2
 5256              	.LC57:
 5257 0c40 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 5257      204D6F74 
 5257      6F722068 
 5257      616E646C 
 5257      65207261 
 5258 0c59 000000   		.align	2
 5259              	.LC58:
 5260 0c5c 3538202D 		.ascii	"58 - PWM rescaling:\000"
 5260      2050574D 
 5260      20726573 
 5260      63616C69 
 5260      6E673A00 
 5261              		.align	2
 5262              	.LC59:
 5263 0c70 3539202D 		.ascii	"59 - Current lookup:\000"
 5263      20437572 
 5263      72656E74 
 5263      206C6F6F 
 5263      6B75703A 
 5264 0c85 000000   		.align	2
 5265              	.LC60:
 5266 0c88 3630202D 		.ascii	"60 - Associated encoder line:\000"
 5266      20417373 
 5266      6F636961 
 5266      74656420 
 5266      656E636F 
 5267 0ca6 0000     		.align	2
 5268              	.LC61:
 5269 0ca8 3631202D 		.ascii	"61 - Driver type:\000"
 5269      20447269 
 5269      76657220 
 5269      74797065 
 5269      3A00
 5270 0cba 0000     		.align	2
 5271              	.LC62:
 5272 0cbc 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 5272      2050574D 
 5272      20726174 
 5272      65206C69 
 5272      6D697465 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 134


 5273 0cd3 00       		.align	2
 5274              	.LC63:
 5275 0cd4 3633202D 		.ascii	"63 - Not reversible:\000"
 5275      204E6F74 
 5275      20726576 
 5275      65727369 
 5275      626C653A 
 5276 0ce9 000000   		.align	2
 5277              	.LC64:
 5278 0cec 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 5278      20456E63 
 5278      20696478 
 5278      20757365 
 5278      6420666F 
 5279 0d0b 00       		.align	2
 5280              	.LC65:
 5281 0d0c 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 5281      20476561 
 5281      72207061 
 5281      72616D73 
 5281      5B4E312C 
 5282 0d2a 0000     		.align	2
 5283              	.LC66:
 5284 0d2c 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 5284      20526561 
 5284      6420656E 
 5284      63207261 
 5284      77206C69 
 5285 0d46 0000     		.align	2
 5286              	.LC67:
 5287 0d48 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 5287      20526561 
 5287      6420656E 
 5287      63207261 
 5287      77206C69 
 5288 0d62 0000     		.align	2
 5289              	.LC68:
 5290 0d64 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 5290      20526561 
 5290      64206164 
 5290      64697469 
 5290      6F6E616C 
 5291 0d83 00       		.align	2
 5292              	.LC69:
 5293 0d84 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 5293      20414443 
 5293      20636861 
 5293      6E6E656C 
 5293      205B312D 
 5294              		.align	2
 5295              	.LC70:
 5296 0d9c 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 5296      20414443 
 5296      20636861 
 5296      6E6E656C 
 5296      205B372D 
 5297 0db5 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 135


 5298              	.LC71:
 5299 0db8 3731202D 		.ascii	"71 - Record EMG on SD card:\000"
 5299      20526563 
 5299      6F726420 
 5299      454D4720 
 5299      6F6E2053 
 5300              		.align	2
 5301              	.LC72:
 5302 0dd4 3732202D 		.ascii	"72 - Joystick closure speed:\000"
 5302      204A6F79 
 5302      73746963 
 5302      6B20636C 
 5302      6F737572 
 5303 0df1 000000   		.align	2
 5304              	.LC73:
 5305 0df4 3733202D 		.ascii	"73 - Joystick threshold:\000"
 5305      204A6F79 
 5305      73746963 
 5305      6B207468 
 5305      72657368 
 5306 0e0d 000000   		.align	2
 5307              	.LC74:
 5308 0e10 3734202D 		.ascii	"74 - Joystick gains:\000"
 5308      204A6F79 
 5308      73746963 
 5308      6B206761 
 5308      696E733A 
 5309 0e25 000000   		.align	2
 5310              	.LC75:
 5311 0e28 3735202D 		.ascii	"75 - Device type:\000"
 5311      20446576 
 5311      69636520 
 5311      74797065 
 5311      3A00
 5312 0e3a 0000     		.align	2
 5313              	.LC76:
 5314 0e3c 3736202D 		.ascii	"76 - EMG FSM act.mode:\000"
 5314      20454D47 
 5314      2046534D 
 5314      20616374 
 5314      2E6D6F64 
 5315 0e53 00       		.align	2
 5316              	.LC77:
 5317 0e54 3737202D 		.ascii	"77 - Fast act.thresholds:\000"
 5317      20466173 
 5317      74206163 
 5317      742E7468 
 5317      72657368 
 5318 0e6e 0000     		.align	2
 5319              	.LC78:
 5320 0e70 3738202D 		.ascii	"78 - Wrist direction:\000"
 5320      20577269 
 5320      73742064 
 5320      69726563 
 5320      74696F6E 
 5321 0e86 0000     		.align	2
 5322              	.LC79:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 136


 5323 0e88 3739202D 		.ascii	"79 - Slave communication active:\000"
 5323      20536C61 
 5323      76652063 
 5323      6F6D6D75 
 5323      6E696361 
 5324 0ea9 000000   		.align	2
 5325              	.LC80:
 5326 0eac 3830202D 		.ascii	"80 - Slave ID:\000"
 5326      20536C61 
 5326      76652049 
 5326      443A00
 5327 0ebb 00       		.align	2
 5328              	.LC81:
 5329 0ebc 3831202D 		.ascii	"81 - Maximum slave residual current:\000"
 5329      204D6178 
 5329      696D756D 
 5329      20736C61 
 5329      76652072 
 5330 0ee1 000000   		.align	2
 5331              	.LC82:
 5332 0ee4 3832202D 		.ascii	"82 - Maximum pressure feedback (kPa):\000"
 5332      204D6178 
 5332      696D756D 
 5332      20707265 
 5332      73737572 
 5333 0f0a 0000     		.align	2
 5334              	.LC83:
 5335 0f0c 3833202D 		.ascii	"83 - Proportional pressure error gain:\000"
 5335      2050726F 
 5335      706F7274 
 5335      696F6E61 
 5335      6C207072 
 5336 0f33 00       		.align	2
 5337              	.LC129:
 5338 0f34 A0060000 		.word	.LC1
 5339 0f38 B0060000 		.word	.LC2
 5340 0f3c CC060000 		.word	.LC3
 5341 0f40 E8060000 		.word	.LC4
 5342 0f44 00070000 		.word	.LC5
 5343 0f48 10070000 		.word	.LC6
 5344 0f4c 24070000 		.word	.LC7
 5345 0f50 38070000 		.word	.LC8
 5346 0f54 54070000 		.word	.LC9
 5347 0f58 68070000 		.word	.LC10
 5348 0f5c 80070000 		.word	.LC11
 5349 0f60 A0070000 		.word	.LC12
 5350 0f64 BC070000 		.word	.LC13
 5351 0f68 D0070000 		.word	.LC14
 5352 0f6c E8070000 		.word	.LC15
 5353 0f70 0C080000 		.word	.LC16
 5354 0f74 24080000 		.word	.LC17
 5355 0f78 3C080000 		.word	.LC18
 5356 0f7c 5C080000 		.word	.LC19
 5357 0f80 78080000 		.word	.LC20
 5358 0f84 8C080000 		.word	.LC21
 5359 0f88 A4080000 		.word	.LC22
 5360 0f8c C8080000 		.word	.LC23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 137


 5361 0f90 DC080000 		.word	.LC24
 5362 0f94 00090000 		.word	.LC25
 5363 0f98 24090000 		.word	.LC26
 5364 0f9c 40090000 		.word	.LC27
 5365 0fa0 54090000 		.word	.LC28
 5366 0fa4 64090000 		.word	.LC29
 5367 0fa8 78090000 		.word	.LC30
 5368 0fac 94090000 		.word	.LC31
 5369 0fb0 AC090000 		.word	.LC32
 5370 0fb4 D4090000 		.word	.LC33
 5371 0fb8 F0090000 		.word	.LC34
 5372 0fbc 180A0000 		.word	.LC35
 5373 0fc0 280A0000 		.word	.LC36
 5374 0fc4 380A0000 		.word	.LC37
 5375 0fc8 580A0000 		.word	.LC38
 5376 0fcc 6C0A0000 		.word	.LC39
 5377 0fd0 840A0000 		.word	.LC40
 5378 0fd4 9C0A0000 		.word	.LC41
 5379 0fd8 BC0A0000 		.word	.LC42
 5380 0fdc DC0A0000 		.word	.LC43
 5381 0fe0 F40A0000 		.word	.LC44
 5382 0fe4 140B0000 		.word	.LC45
 5383 0fe8 300B0000 		.word	.LC46
 5384 0fec 4C0B0000 		.word	.LC47
 5385 0ff0 600B0000 		.word	.LC48
 5386 0ff4 740B0000 		.word	.LC49
 5387 0ff8 880B0000 		.word	.LC50
 5388 0ffc A40B0000 		.word	.LC51
 5389 1000 B80B0000 		.word	.LC52
 5390 1004 D00B0000 		.word	.LC53
 5391 1008 F00B0000 		.word	.LC54
 5392 100c 0C0C0000 		.word	.LC55
 5393 1010 200C0000 		.word	.LC56
 5394 1014 400C0000 		.word	.LC57
 5395 1018 5C0C0000 		.word	.LC58
 5396 101c 700C0000 		.word	.LC59
 5397 1020 880C0000 		.word	.LC60
 5398 1024 A80C0000 		.word	.LC61
 5399 1028 BC0C0000 		.word	.LC62
 5400 102c D40C0000 		.word	.LC63
 5401 1030 EC0C0000 		.word	.LC64
 5402 1034 0C0D0000 		.word	.LC65
 5403 1038 2C0D0000 		.word	.LC66
 5404 103c 480D0000 		.word	.LC67
 5405 1040 640D0000 		.word	.LC68
 5406 1044 840D0000 		.word	.LC69
 5407 1048 9C0D0000 		.word	.LC70
 5408 104c B80D0000 		.word	.LC71
 5409 1050 D40D0000 		.word	.LC72
 5410 1054 F40D0000 		.word	.LC73
 5411 1058 100E0000 		.word	.LC74
 5412 105c 280E0000 		.word	.LC75
 5413 1060 3C0E0000 		.word	.LC76
 5414 1064 540E0000 		.word	.LC77
 5415 1068 700E0000 		.word	.LC78
 5416 106c 880E0000 		.word	.LC79
 5417 1070 AC0E0000 		.word	.LC80
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 138


 5418 1074 BC0E0000 		.word	.LC81
 5419 1078 E40E0000 		.word	.LC82
 5420 107c 0C0F0000 		.word	.LC83
 5421              		.align	2
 5422              	.LC85:
 5423 1080 03       		.byte	3
 5424 1081 01       		.byte	1
 5425 1082 02       		.byte	2
 5426 1083 03       		.byte	3
 5427 1084 03       		.byte	3
 5428 1085 03       		.byte	3
 5429 1086 03       		.byte	3
 5430 1087 03       		.byte	3
 5431 1088 03       		.byte	3
 5432 1089 04       		.byte	4
 5433 108a 05       		.byte	5
 5434 108b 06       		.byte	6
 5435 108c 03       		.byte	3
 5436 108d 07       		.byte	7
 5437 108e 08       		.byte	8
 5438 108f 09       		.byte	9
 5439 1090 03       		.byte	3
 5440 1091 05       		.byte	5
 5441 1092 03       		.byte	3
 5442 1093 01       		.byte	1
 5443 1094 02       		.byte	2
 5444 1095 03       		.byte	3
 5445 1096 03       		.byte	3
 5446 1097 03       		.byte	3
 5447 1098 09       		.byte	9
 5448 1099 03       		.byte	3
 5449 109a 05       		.byte	5
 5450 109b 03       		.byte	3
 5451 109c 0A       		.byte	10
 5452 109d 0B       		.byte	11
 5453 109e 0C       		.byte	12
 5454 109f 03       		.byte	3
 5455              		.align	2
 5456              	.LC86:
 5457 10a0 02       		.byte	2
 5458 10a1 03       		.byte	3
 5459 10a2 08       		.byte	8
 5460 10a3 0B       		.byte	11
 5461 10a4 17       		.byte	23
 5462 10a5 2C       		.byte	44
 5463 10a6 2D       		.byte	45
 5464 10a7 32       		.byte	50
 5465 10a8 35       		.byte	53
 5466 10a9 000000   		.align	2
 5467              	.LC87:
 5468 10ac 02       		.byte	2
 5469 10ad 03       		.byte	3
 5470 10ae 05       		.byte	5
 5471 10af 08       		.byte	8
 5472 10b0 0B       		.byte	11
 5473 10b1 17       		.byte	23
 5474 10b2 18       		.byte	24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 139


 5475 10b3 1C       		.byte	28
 5476 10b4 1F       		.byte	31
 5477 10b5 20       		.byte	32
 5478 10b6 26       		.byte	38
 5479 10b7 2C       		.byte	44
 5480 10b8 2D       		.byte	45
 5481 10b9 2F       		.byte	47
 5482 10ba 32       		.byte	50
 5483 10bb 35       		.byte	53
 5484 10bc 3D       		.byte	61
 5485 10bd 4B       		.byte	75
 5486              		.section	.text.manage_param_list,"ax",%progbits
 5487              		.align	2
 5488              		.global	manage_param_list
 5489              		.thumb
 5490              		.thumb_func
 5491              		.type	manage_param_list, %function
 5492              	manage_param_list:
 5493              	.LFB68:
 887:..\src/command_processing.c **** 
 888:..\src/command_processing.c **** //==============================================================================
 889:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 890:..\src/command_processing.c **** //==============================================================================
 891:..\src/command_processing.c **** 
 892:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 5494              		.loc 1 892 0
 5495              		.cfi_startproc
 5496              		@ args = 0, pretend = 0, frame = 1416
 5497              		@ frame_needed = 1, uses_anonymous_args = 0
 5498 0000 B0B5     		push	{r4, r5, r7, lr}
 5499              		.cfi_def_cfa_offset 16
 5500              		.cfi_offset 4, -16
 5501              		.cfi_offset 5, -12
 5502              		.cfi_offset 7, -8
 5503              		.cfi_offset 14, -4
 5504 0002 ADF5B36D 		sub	sp, sp, #1432
 5505              		.cfi_def_cfa_offset 1448
 5506 0006 04AF     		add	r7, sp, #16
 5507              		.cfi_def_cfa 7, 1432
 5508 0008 0246     		mov	r2, r0
 5509 000a BB1D     		adds	r3, r7, #6
 5510 000c 1A80     		strh	r2, [r3]	@ movhi
 893:..\src/command_processing.c ****     uint8 CYDATA i, j;
 894:..\src/command_processing.c ****     uint8 CYDATA sod;
 895:..\src/command_processing.c ****     uint8 PARAM_IDX;
 896:..\src/command_processing.c ****     int16 aux_int16;
 897:..\src/command_processing.c ****     uint16 aux_uint16;
 898:..\src/command_processing.c ****     int32 aux_int32;
 899:..\src/command_processing.c ****     uint32 aux_uint32;
 900:..\src/command_processing.c ****     float aux_float;
 901:..\src/command_processing.c ****  
 902:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 5511              		.loc 1 902 0
 5512 000e 0023     		movs	r3, #0
 5513 0010 87F87D35 		strb	r3, [r7, #1405]
 903:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 5514              		.loc 1 903 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 140


 5515 0014 0123     		movs	r3, #1
 5516 0016 87F87C35 		strb	r3, [r7, #1404]
 904:..\src/command_processing.c ****     
 905:..\src/command_processing.c ****     // Arrays
 906:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 5517              		.loc 1 906 0
 5518 001a 054B     		ldr	r3, .L369
 5519 001c C7F88035 		str	r3, [r7, #1408]
 907:..\src/command_processing.c ****     
 908:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 5520              		.loc 1 908 0
 5521 0020 BB1D     		adds	r3, r7, #6
 5522 0022 1B88     		ldrh	r3, [r3]
 5523 0024 002B     		cmp	r3, #0
 5524 0026 07D0     		beq	.L306
 909:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 5525              		.loc 1 909 0
 5526 0028 024B     		ldr	r3, .L369+4
 5527 002a C7F88035 		str	r3, [r7, #1408]
 5528 002e 03E0     		b	.L370
 5529              	.L371:
 5530              		.align	2
 5531              	.L369:
 5532 0030 00000000 		.word	c_mem
 5533 0034 00000000 		.word	g_mem
 5534              	.L370:
 5535              	.L306:
 910:..\src/command_processing.c ****     }
 911:..\src/command_processing.c ****  
 912:..\src/command_processing.c ****     
 913:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 914:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 915:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5536              		.loc 1 915 0
 5537 0038 D7F88035 		ldr	r3, [r7, #1408]
 5538 003c 03F1A002 		add	r2, r3, #160
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5539              		.loc 1 914 0
 5540 0040 07F21C43 		addw	r3, r7, #1052
 5541 0044 1A60     		str	r2, [r3]
 916:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 5542              		.loc 1 916 0
 5543 0046 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5544 004a 1346     		mov	r3, r2
 5545 004c DB00     		lsls	r3, r3, #3
 5546 004e 9B1A     		subs	r3, r3, r2
 5547 0050 1B01     		lsls	r3, r3, #4
 5548 0052 B033     		adds	r3, r3, #176
 5549 0054 D7F88025 		ldr	r2, [r7, #1408]
 5550 0058 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5551              		.loc 1 914 0
 5552 005a 07F21C43 		addw	r3, r7, #1052
 5553 005e 5A60     		str	r2, [r3, #4]
 917:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 5554              		.loc 1 917 0
 5555 0060 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 141


 5556 0064 1346     		mov	r3, r2
 5557 0066 DB00     		lsls	r3, r3, #3
 5558 0068 9B1A     		subs	r3, r3, r2
 5559 006a 1B01     		lsls	r3, r3, #4
 5560 006c B833     		adds	r3, r3, #184
 5561 006e D7F88025 		ldr	r2, [r7, #1408]
 5562 0072 1344     		add	r3, r3, r2
 5563 0074 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5564              		.loc 1 914 0
 5565 0076 07F21C43 		addw	r3, r7, #1052
 5566 007a 9A60     		str	r2, [r3, #8]
 918:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 5567              		.loc 1 918 0
 5568 007c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5569 0080 1346     		mov	r3, r2
 5570 0082 DB00     		lsls	r3, r3, #3
 5571 0084 9B1A     		subs	r3, r3, r2
 5572 0086 1B01     		lsls	r3, r3, #4
 5573 0088 E033     		adds	r3, r3, #224
 5574 008a D7F88025 		ldr	r2, [r7, #1408]
 5575 008e 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5576              		.loc 1 914 0
 5577 0090 07F21C43 		addw	r3, r7, #1052
 5578 0094 DA60     		str	r2, [r3, #12]
 919:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 5579              		.loc 1 919 0
 5580 0096 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5581 009a 1346     		mov	r3, r2
 5582 009c DB00     		lsls	r3, r3, #3
 5583 009e 9B1A     		subs	r3, r3, r2
 5584 00a0 1B01     		lsls	r3, r3, #4
 5585 00a2 03F58473 		add	r3, r3, #264
 5586 00a6 D7F88025 		ldr	r2, [r7, #1408]
 5587 00aa 1344     		add	r3, r3, r2
 5588 00ac 9A1D     		adds	r2, r3, #6
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5589              		.loc 1 914 0
 5590 00ae 07F21C43 		addw	r3, r7, #1052
 5591 00b2 1A61     		str	r2, [r3, #16]
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 5592              		.loc 1 920 0
 5593 00b4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5594 00b8 1346     		mov	r3, r2
 5595 00ba DB00     		lsls	r3, r3, #3
 5596 00bc 9B1A     		subs	r3, r3, r2
 5597 00be 1B01     		lsls	r3, r3, #4
 5598 00c0 03F58473 		add	r3, r3, #264
 5599 00c4 D7F88025 		ldr	r2, [r7, #1408]
 5600 00c8 1344     		add	r3, r3, r2
 5601 00ca DA1D     		adds	r2, r3, #7
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5602              		.loc 1 914 0
 5603 00cc 07F21C43 		addw	r3, r7, #1052
 5604 00d0 5A61     		str	r2, [r3, #20]
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 142


 5605              		.loc 1 921 0
 5606 00d2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5607 00d6 D7F88015 		ldr	r1, [r7, #1408]
 5608 00da 1346     		mov	r3, r2
 5609 00dc DB00     		lsls	r3, r3, #3
 5610 00de 9B1A     		subs	r3, r3, r2
 5611 00e0 1B01     		lsls	r3, r3, #4
 5612 00e2 0B44     		add	r3, r3, r1
 5613 00e4 03F58873 		add	r3, r3, #272
 5614 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5615 00ea 1A46     		mov	r2, r3
 5616 00ec 1346     		mov	r3, r2
 5617 00ee 5B00     		lsls	r3, r3, #1
 5618 00f0 1344     		add	r3, r3, r2
 5619 00f2 1B01     		lsls	r3, r3, #4
 5620 00f4 03F5C873 		add	r3, r3, #400
 5621 00f8 D7F88025 		ldr	r2, [r7, #1408]
 5622 00fc 1344     		add	r3, r3, r2
 5623 00fe 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5624              		.loc 1 914 0
 5625 0100 07F21C43 		addw	r3, r7, #1052
 5626 0104 9A61     		str	r2, [r3, #24]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 5627              		.loc 1 922 0
 5628 0106 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5629 010a D7F88015 		ldr	r1, [r7, #1408]
 5630 010e 1346     		mov	r3, r2
 5631 0110 DB00     		lsls	r3, r3, #3
 5632 0112 9B1A     		subs	r3, r3, r2
 5633 0114 1B01     		lsls	r3, r3, #4
 5634 0116 0B44     		add	r3, r3, r1
 5635 0118 03F58873 		add	r3, r3, #272
 5636 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5637 011e 1A46     		mov	r2, r3
 5638 0120 1346     		mov	r3, r2
 5639 0122 5B00     		lsls	r3, r3, #1
 5640 0124 1344     		add	r3, r3, r2
 5641 0126 1B01     		lsls	r3, r3, #4
 5642 0128 03F5CC73 		add	r3, r3, #408
 5643 012c D7F88025 		ldr	r2, [r7, #1408]
 5644 0130 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5645              		.loc 1 914 0
 5646 0132 07F21C43 		addw	r3, r7, #1052
 5647 0136 DA61     		str	r2, [r3, #28]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 5648              		.loc 1 923 0
 5649 0138 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5650 013c D7F88015 		ldr	r1, [r7, #1408]
 5651 0140 1346     		mov	r3, r2
 5652 0142 DB00     		lsls	r3, r3, #3
 5653 0144 9B1A     		subs	r3, r3, r2
 5654 0146 1B01     		lsls	r3, r3, #4
 5655 0148 0B44     		add	r3, r3, r1
 5656 014a 03F58873 		add	r3, r3, #272
 5657 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 143


 5658 0150 1A46     		mov	r2, r3
 5659 0152 1346     		mov	r3, r2
 5660 0154 5B00     		lsls	r3, r3, #1
 5661 0156 1344     		add	r3, r3, r2
 5662 0158 1B01     		lsls	r3, r3, #4
 5663 015a 03F5D073 		add	r3, r3, #416
 5664 015e D7F88025 		ldr	r2, [r7, #1408]
 5665 0162 1344     		add	r3, r3, r2
 5666 0164 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5667              		.loc 1 914 0
 5668 0166 07F21C43 		addw	r3, r7, #1052
 5669 016a 1A62     		str	r2, [r3, #32]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 5670              		.loc 1 924 0
 5671 016c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5672 0170 1346     		mov	r3, r2
 5673 0172 DB00     		lsls	r3, r3, #3
 5674 0174 9B1A     		subs	r3, r3, r2
 5675 0176 1B01     		lsls	r3, r3, #4
 5676 0178 E033     		adds	r3, r3, #224
 5677 017a D7F88025 		ldr	r2, [r7, #1408]
 5678 017e 1344     		add	r3, r3, r2
 5679 0180 DA1C     		adds	r2, r3, #3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5680              		.loc 1 914 0
 5681 0182 07F21C43 		addw	r3, r7, #1052
 5682 0186 5A62     		str	r2, [r3, #36]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 5683              		.loc 1 925 0
 5684 0188 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5685 018c 1346     		mov	r3, r2
 5686 018e DB00     		lsls	r3, r3, #3
 5687 0190 9B1A     		subs	r3, r3, r2
 5688 0192 1B01     		lsls	r3, r3, #4
 5689 0194 E033     		adds	r3, r3, #224
 5690 0196 D7F88025 		ldr	r2, [r7, #1408]
 5691 019a 1344     		add	r3, r3, r2
 5692 019c 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5693              		.loc 1 914 0
 5694 019e 07F21C43 		addw	r3, r7, #1052
 5695 01a2 9A62     		str	r2, [r3, #40]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 5696              		.loc 1 926 0
 5697 01a4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5698 01a8 1346     		mov	r3, r2
 5699 01aa DB00     		lsls	r3, r3, #3
 5700 01ac 9B1A     		subs	r3, r3, r2
 5701 01ae 1B01     		lsls	r3, r3, #4
 5702 01b0 E833     		adds	r3, r3, #232
 5703 01b2 D7F88025 		ldr	r2, [r7, #1408]
 5704 01b6 1344     		add	r3, r3, r2
 5705 01b8 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5706              		.loc 1 914 0
 5707 01ba 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 144


 5708 01be DA62     		str	r2, [r3, #44]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 5709              		.loc 1 927 0
 5710 01c0 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5711 01c4 1346     		mov	r3, r2
 5712 01c6 DB00     		lsls	r3, r3, #3
 5713 01c8 9B1A     		subs	r3, r3, r2
 5714 01ca 1B01     		lsls	r3, r3, #4
 5715 01cc 03F58473 		add	r3, r3, #264
 5716 01d0 D7F88025 		ldr	r2, [r7, #1408]
 5717 01d4 1344     		add	r3, r3, r2
 5718 01d6 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5719              		.loc 1 914 0
 5720 01d8 07F21C43 		addw	r3, r7, #1052
 5721 01dc 1A63     		str	r2, [r3, #48]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 5722              		.loc 1 928 0
 5723 01de D7F88035 		ldr	r3, [r7, #1408]
 5724 01e2 03F5F872 		add	r2, r3, #496
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5725              		.loc 1 914 0
 5726 01e6 07F21C43 		addw	r3, r7, #1052
 5727 01ea 5A63     		str	r2, [r3, #52]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 5728              		.loc 1 929 0
 5729 01ec D7F88035 		ldr	r3, [r7, #1408]
 5730 01f0 03F5FF72 		add	r2, r3, #510
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5731              		.loc 1 914 0
 5732 01f4 07F21C43 		addw	r3, r7, #1052
 5733 01f8 9A63     		str	r2, [r3, #56]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 5734              		.loc 1 930 0
 5735 01fa D7F88035 		ldr	r3, [r7, #1408]
 5736 01fe 03F5FA72 		add	r2, r3, #500
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5737              		.loc 1 914 0
 5738 0202 07F21C43 		addw	r3, r7, #1052
 5739 0206 DA63     		str	r2, [r3, #60]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 5740              		.loc 1 931 0
 5741 0208 D7F88035 		ldr	r3, [r7, #1408]
 5742 020c 03F5FE72 		add	r2, r3, #508
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5743              		.loc 1 914 0
 5744 0210 07F21C43 		addw	r3, r7, #1052
 5745 0214 1A64     		str	r2, [r3, #64]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 5746              		.loc 1 932 0
 5747 0216 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5748 021a D7F88015 		ldr	r1, [r7, #1408]
 5749 021e 1346     		mov	r3, r2
 5750 0220 DB00     		lsls	r3, r3, #3
 5751 0222 9B1A     		subs	r3, r3, r2
 5752 0224 1B01     		lsls	r3, r3, #4
 5753 0226 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 145


 5754 0228 03F58873 		add	r3, r3, #272
 5755 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5756 022e 1A46     		mov	r2, r3
 5757 0230 1346     		mov	r3, r2
 5758 0232 5B00     		lsls	r3, r3, #1
 5759 0234 1344     		add	r3, r3, r2
 5760 0236 1B01     		lsls	r3, r3, #4
 5761 0238 03F5D873 		add	r3, r3, #432
 5762 023c D7F88025 		ldr	r2, [r7, #1408]
 5763 0240 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5764              		.loc 1 914 0
 5765 0242 07F21C43 		addw	r3, r7, #1052
 5766 0246 5A64     		str	r2, [r3, #68]
 933:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 5767              		.loc 1 933 0
 5768 0248 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5769 024c D7F88015 		ldr	r1, [r7, #1408]
 5770 0250 1346     		mov	r3, r2
 5771 0252 DB00     		lsls	r3, r3, #3
 5772 0254 9B1A     		subs	r3, r3, r2
 5773 0256 1B01     		lsls	r3, r3, #4
 5774 0258 0B44     		add	r3, r3, r1
 5775 025a 03F58873 		add	r3, r3, #272
 5776 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5777 0260 1A46     		mov	r2, r3
 5778 0262 1346     		mov	r3, r2
 5779 0264 5B00     		lsls	r3, r3, #1
 5780 0266 1344     		add	r3, r3, r2
 5781 0268 1B01     		lsls	r3, r3, #4
 5782 026a 03F5D873 		add	r3, r3, #432
 5783 026e D7F88025 		ldr	r2, [r7, #1408]
 5784 0272 1344     		add	r3, r3, r2
 5785 0274 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5786              		.loc 1 914 0
 5787 0276 07F21C43 		addw	r3, r7, #1052
 5788 027a 9A64     		str	r2, [r3, #72]
 934:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 5789              		.loc 1 934 0
 5790 027c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5791 0280 1346     		mov	r3, r2
 5792 0282 DB00     		lsls	r3, r3, #3
 5793 0284 9B1A     		subs	r3, r3, r2
 5794 0286 1B01     		lsls	r3, r3, #4
 5795 0288 E033     		adds	r3, r3, #224
 5796 028a D7F88025 		ldr	r2, [r7, #1408]
 5797 028e 1344     		add	r3, r3, r2
 5798 0290 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5799              		.loc 1 914 0
 5800 0292 07F21C43 		addw	r3, r7, #1052
 5801 0296 DA64     		str	r2, [r3, #76]
 935:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 5802              		.loc 1 935 0
 5803 0298 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5804 029c 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 146


 5805 029e DB00     		lsls	r3, r3, #3
 5806 02a0 9B1A     		subs	r3, r3, r2
 5807 02a2 1B01     		lsls	r3, r3, #4
 5808 02a4 F033     		adds	r3, r3, #240
 5809 02a6 D7F88025 		ldr	r2, [r7, #1408]
 5810 02aa 1344     		add	r3, r3, r2
 5811 02ac 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5812              		.loc 1 914 0
 5813 02ae 07F21C43 		addw	r3, r7, #1052
 5814 02b2 1A65     		str	r2, [r3, #80]
 936:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 5815              		.loc 1 936 0
 5816 02b4 D7F88035 		ldr	r3, [r7, #1408]
 5817 02b8 03F1A102 		add	r2, r3, #161
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5818              		.loc 1 914 0
 5819 02bc 07F21C43 		addw	r3, r7, #1052
 5820 02c0 5A65     		str	r2, [r3, #84]
 937:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 5821              		.loc 1 937 0
 5822 02c2 D7F88035 		ldr	r3, [r7, #1408]
 5823 02c6 03F52872 		add	r2, r3, #672
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5824              		.loc 1 914 0
 5825 02ca 07F21C43 		addw	r3, r7, #1052
 5826 02ce 9A65     		str	r2, [r3, #88]
 938:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 5827              		.loc 1 938 0
 5828 02d0 D7F88035 		ldr	r3, [r7, #1408]
 5829 02d4 03F52972 		add	r2, r3, #676
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5830              		.loc 1 914 0
 5831 02d8 07F21C43 		addw	r3, r7, #1052
 5832 02dc DA65     		str	r2, [r3, #92]
 939:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 5833              		.loc 1 939 0
 5834 02de D7F88035 		ldr	r3, [r7, #1408]
 5835 02e2 03F52A72 		add	r2, r3, #680
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5836              		.loc 1 914 0
 5837 02e6 07F21C43 		addw	r3, r7, #1052
 5838 02ea 1A66     		str	r2, [r3, #96]
 940:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 5839              		.loc 1 940 0
 5840 02ec D7F88035 		ldr	r3, [r7, #1408]
 5841 02f0 03F52B72 		add	r2, r3, #684
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5842              		.loc 1 914 0
 5843 02f4 07F21C43 		addw	r3, r7, #1052
 5844 02f8 5A66     		str	r2, [r3, #100]
 941:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 5845              		.loc 1 941 0
 5846 02fa D7F88035 		ldr	r3, [r7, #1408]
 5847 02fe 03F2FF12 		addw	r2, r3, #511
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5848              		.loc 1 914 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 147


 5849 0302 07F21C43 		addw	r3, r7, #1052
 5850 0306 9A66     		str	r2, [r3, #104]
 942:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 5851              		.loc 1 942 0
 5852 0308 D7F88035 		ldr	r3, [r7, #1408]
 5853 030c 03F1A702 		add	r2, r3, #167
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5854              		.loc 1 914 0
 5855 0310 07F21C43 		addw	r3, r7, #1052
 5856 0314 DA66     		str	r2, [r3, #108]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 5857              		.loc 1 943 0
 5858 0316 D7F88035 		ldr	r3, [r7, #1408]
 5859 031a 03F50072 		add	r2, r3, #512
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5860              		.loc 1 914 0
 5861 031e 07F21C43 		addw	r3, r7, #1052
 5862 0322 1A67     		str	r2, [r3, #112]
 944:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 5863              		.loc 1 944 0
 5864 0324 D7F88035 		ldr	r3, [r7, #1408]
 5865 0328 03F22622 		addw	r2, r3, #550
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5866              		.loc 1 914 0
 5867 032c 07F21C43 		addw	r3, r7, #1052
 5868 0330 5A67     		str	r2, [r3, #116]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 5869              		.loc 1 945 0
 5870 0332 D7F88035 		ldr	r3, [r7, #1408]
 5871 0336 03F1A802 		add	r2, r3, #168
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5872              		.loc 1 914 0
 5873 033a 07F21C43 		addw	r3, r7, #1052
 5874 033e 9A67     		str	r2, [r3, #120]
 946:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 5875              		.loc 1 946 0
 5876 0340 D7F88035 		ldr	r3, [r7, #1408]
 5877 0344 03F50872 		add	r2, r3, #544
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5878              		.loc 1 914 0
 5879 0348 07F21C43 		addw	r3, r7, #1052
 5880 034c DA67     		str	r2, [r3, #124]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 5881              		.loc 1 947 0
 5882 034e D7F88035 		ldr	r3, [r7, #1408]
 5883 0352 03F20122 		addw	r2, r3, #513
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5884              		.loc 1 914 0
 5885 0356 07F21C43 		addw	r3, r7, #1052
 5886 035a C3F88020 		str	r2, [r3, #128]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 5887              		.loc 1 948 0
 5888 035e D7F88035 		ldr	r3, [r7, #1408]
 5889 0362 03F20222 		addw	r2, r3, #514
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5890              		.loc 1 914 0
 5891 0366 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 148


 5892 036a C3F88420 		str	r2, [r3, #132]
 949:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 5893              		.loc 1 949 0
 5894 036e D7F88035 		ldr	r3, [r7, #1408]
 5895 0372 03F1AB02 		add	r2, r3, #171
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5896              		.loc 1 914 0
 5897 0376 07F21C43 		addw	r3, r7, #1052
 5898 037a C3F88820 		str	r2, [r3, #136]
 950:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 5899              		.loc 1 950 0
 5900 037e D7F88035 		ldr	r3, [r7, #1408]
 5901 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 5902 0386 1233     		adds	r3, r3, #18
 5903 0388 5B01     		lsls	r3, r3, #5
 5904 038a D7F88025 		ldr	r2, [r7, #1408]
 5905 038e 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5906              		.loc 1 914 0
 5907 0390 07F21C43 		addw	r3, r7, #1052
 5908 0394 C3F88C20 		str	r2, [r3, #140]
 951:..\src/command_processing.c ****         
 952:..\src/command_processing.c ****         // GENERIC PARAMS
 953:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 5909              		.loc 1 953 0
 5910 0398 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5911 039c 1346     		mov	r3, r2
 5912 039e DB00     		lsls	r3, r3, #3
 5913 03a0 9B1A     		subs	r3, r3, r2
 5914 03a2 1B01     		lsls	r3, r3, #4
 5915 03a4 03F58873 		add	r3, r3, #272
 5916 03a8 D7F88025 		ldr	r2, [r7, #1408]
 5917 03ac 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5918              		.loc 1 914 0
 5919 03ae 07F21C43 		addw	r3, r7, #1052
 5920 03b2 C3F89020 		str	r2, [r3, #144]
 954:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 5921              		.loc 1 954 0
 5922 03b6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5923 03ba 1346     		mov	r3, r2
 5924 03bc DB00     		lsls	r3, r3, #3
 5925 03be 9B1A     		subs	r3, r3, r2
 5926 03c0 1B01     		lsls	r3, r3, #4
 5927 03c2 E033     		adds	r3, r3, #224
 5928 03c4 D7F88025 		ldr	r2, [r7, #1408]
 5929 03c8 1344     		add	r3, r3, r2
 5930 03ca 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5931              		.loc 1 914 0
 5932 03cc 07F21C43 		addw	r3, r7, #1052
 5933 03d0 C3F89420 		str	r2, [r3, #148]
 955:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 5934              		.loc 1 955 0
 5935 03d4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5936 03d8 1346     		mov	r3, r2
 5937 03da DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 149


 5938 03dc 9B1A     		subs	r3, r3, r2
 5939 03de 1B01     		lsls	r3, r3, #4
 5940 03e0 03F58873 		add	r3, r3, #272
 5941 03e4 D7F88025 		ldr	r2, [r7, #1408]
 5942 03e8 1344     		add	r3, r3, r2
 5943 03ea 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5944              		.loc 1 914 0
 5945 03ec 07F21C43 		addw	r3, r7, #1052
 5946 03f0 C3F89820 		str	r2, [r3, #152]
 956:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 5947              		.loc 1 956 0
 5948 03f4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5949 03f8 1346     		mov	r3, r2
 5950 03fa DB00     		lsls	r3, r3, #3
 5951 03fc 9B1A     		subs	r3, r3, r2
 5952 03fe 1B01     		lsls	r3, r3, #4
 5953 0400 03F58873 		add	r3, r3, #272
 5954 0404 D7F88025 		ldr	r2, [r7, #1408]
 5955 0408 1344     		add	r3, r3, r2
 5956 040a 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5957              		.loc 1 914 0
 5958 040c 07F21C43 		addw	r3, r7, #1052
 5959 0410 C3F89C20 		str	r2, [r3, #156]
 957:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 5960              		.loc 1 957 0
 5961 0414 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5962 0418 D7F88015 		ldr	r1, [r7, #1408]
 5963 041c 1346     		mov	r3, r2
 5964 041e DB00     		lsls	r3, r3, #3
 5965 0420 9B1A     		subs	r3, r3, r2
 5966 0422 1B01     		lsls	r3, r3, #4
 5967 0424 0B44     		add	r3, r3, r1
 5968 0426 03F58873 		add	r3, r3, #272
 5969 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5970 042c 1A46     		mov	r2, r3
 5971 042e 1346     		mov	r3, r2
 5972 0430 5B00     		lsls	r3, r3, #1
 5973 0432 1344     		add	r3, r3, r2
 5974 0434 1B01     		lsls	r3, r3, #4
 5975 0436 03F5D873 		add	r3, r3, #432
 5976 043a D7F88025 		ldr	r2, [r7, #1408]
 5977 043e 1344     		add	r3, r3, r2
 5978 0440 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5979              		.loc 1 914 0
 5980 0442 07F21C43 		addw	r3, r7, #1052
 5981 0446 C3F8A020 		str	r2, [r3, #160]
 958:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 5982              		.loc 1 958 0
 5983 044a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 5984 044e D7F88015 		ldr	r1, [r7, #1408]
 5985 0452 1346     		mov	r3, r2
 5986 0454 DB00     		lsls	r3, r3, #3
 5987 0456 9B1A     		subs	r3, r3, r2
 5988 0458 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 150


 5989 045a 0B44     		add	r3, r3, r1
 5990 045c 03F58873 		add	r3, r3, #272
 5991 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5992 0462 1A46     		mov	r2, r3
 5993 0464 1346     		mov	r3, r2
 5994 0466 5B00     		lsls	r3, r3, #1
 5995 0468 1344     		add	r3, r3, r2
 5996 046a 1B01     		lsls	r3, r3, #4
 5997 046c 03F5D873 		add	r3, r3, #432
 5998 0470 D7F88025 		ldr	r2, [r7, #1408]
 5999 0474 1344     		add	r3, r3, r2
 6000 0476 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6001              		.loc 1 914 0
 6002 0478 07F21C43 		addw	r3, r7, #1052
 6003 047c C3F8A420 		str	r2, [r3, #164]
 959:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 6004              		.loc 1 959 0
 6005 0480 D7F88035 		ldr	r3, [r7, #1408]
 6006 0484 03F1A902 		add	r2, r3, #169
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6007              		.loc 1 914 0
 6008 0488 07F21C43 		addw	r3, r7, #1052
 6009 048c C3F8A820 		str	r2, [r3, #168]
 960:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 6010              		.loc 1 960 0
 6011 0490 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6012 0494 1346     		mov	r3, r2
 6013 0496 DB00     		lsls	r3, r3, #3
 6014 0498 9B1A     		subs	r3, r3, r2
 6015 049a 1B01     		lsls	r3, r3, #4
 6016 049c B033     		adds	r3, r3, #176
 6017 049e D7F88025 		ldr	r2, [r7, #1408]
 6018 04a2 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6019              		.loc 1 914 0
 6020 04a4 07F21C43 		addw	r3, r7, #1052
 6021 04a8 C3F8AC20 		str	r2, [r3, #172]
 961:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 6022              		.loc 1 961 0
 6023 04ac 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6024 04b0 1346     		mov	r3, r2
 6025 04b2 DB00     		lsls	r3, r3, #3
 6026 04b4 9B1A     		subs	r3, r3, r2
 6027 04b6 1B01     		lsls	r3, r3, #4
 6028 04b8 B833     		adds	r3, r3, #184
 6029 04ba D7F88025 		ldr	r2, [r7, #1408]
 6030 04be 1344     		add	r3, r3, r2
 6031 04c0 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6032              		.loc 1 914 0
 6033 04c2 07F21C43 		addw	r3, r7, #1052
 6034 04c6 C3F8B020 		str	r2, [r3, #176]
 962:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 6035              		.loc 1 962 0
 6036 04ca 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6037 04ce 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 151


 6038 04d0 DB00     		lsls	r3, r3, #3
 6039 04d2 9B1A     		subs	r3, r3, r2
 6040 04d4 1B01     		lsls	r3, r3, #4
 6041 04d6 E033     		adds	r3, r3, #224
 6042 04d8 D7F88025 		ldr	r2, [r7, #1408]
 6043 04dc 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6044              		.loc 1 914 0
 6045 04de 07F21C43 		addw	r3, r7, #1052
 6046 04e2 C3F8B420 		str	r2, [r3, #180]
 963:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 6047              		.loc 1 963 0
 6048 04e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6049 04ea 1346     		mov	r3, r2
 6050 04ec DB00     		lsls	r3, r3, #3
 6051 04ee 9B1A     		subs	r3, r3, r2
 6052 04f0 1B01     		lsls	r3, r3, #4
 6053 04f2 03F58473 		add	r3, r3, #264
 6054 04f6 D7F88025 		ldr	r2, [r7, #1408]
 6055 04fa 1344     		add	r3, r3, r2
 6056 04fc 9A1D     		adds	r2, r3, #6
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6057              		.loc 1 914 0
 6058 04fe 07F21C43 		addw	r3, r7, #1052
 6059 0502 C3F8B820 		str	r2, [r3, #184]
 964:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 6060              		.loc 1 964 0
 6061 0506 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6062 050a 1346     		mov	r3, r2
 6063 050c DB00     		lsls	r3, r3, #3
 6064 050e 9B1A     		subs	r3, r3, r2
 6065 0510 1B01     		lsls	r3, r3, #4
 6066 0512 03F58473 		add	r3, r3, #264
 6067 0516 D7F88025 		ldr	r2, [r7, #1408]
 6068 051a 1344     		add	r3, r3, r2
 6069 051c DA1D     		adds	r2, r3, #7
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6070              		.loc 1 914 0
 6071 051e 07F21C43 		addw	r3, r7, #1052
 6072 0522 C3F8BC20 		str	r2, [r3, #188]
 965:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 6073              		.loc 1 965 0
 6074 0526 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6075 052a D7F88015 		ldr	r1, [r7, #1408]
 6076 052e 1346     		mov	r3, r2
 6077 0530 DB00     		lsls	r3, r3, #3
 6078 0532 9B1A     		subs	r3, r3, r2
 6079 0534 1B01     		lsls	r3, r3, #4
 6080 0536 0B44     		add	r3, r3, r1
 6081 0538 03F58873 		add	r3, r3, #272
 6082 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6083 053e 1A46     		mov	r2, r3
 6084 0540 1346     		mov	r3, r2
 6085 0542 5B00     		lsls	r3, r3, #1
 6086 0544 1344     		add	r3, r3, r2
 6087 0546 1B01     		lsls	r3, r3, #4
 6088 0548 03F5C873 		add	r3, r3, #400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 152


 6089 054c D7F88025 		ldr	r2, [r7, #1408]
 6090 0550 1344     		add	r3, r3, r2
 6091 0552 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6092              		.loc 1 914 0
 6093 0554 07F21C43 		addw	r3, r7, #1052
 6094 0558 C3F8C020 		str	r2, [r3, #192]
 966:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 6095              		.loc 1 966 0
 6096 055c 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6097 0560 D7F88015 		ldr	r1, [r7, #1408]
 6098 0564 1346     		mov	r3, r2
 6099 0566 DB00     		lsls	r3, r3, #3
 6100 0568 9B1A     		subs	r3, r3, r2
 6101 056a 1B01     		lsls	r3, r3, #4
 6102 056c 0B44     		add	r3, r3, r1
 6103 056e 03F58873 		add	r3, r3, #272
 6104 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6105 0574 1A46     		mov	r2, r3
 6106 0576 1346     		mov	r3, r2
 6107 0578 5B00     		lsls	r3, r3, #1
 6108 057a 1344     		add	r3, r3, r2
 6109 057c 1B01     		lsls	r3, r3, #4
 6110 057e 03F5CC73 		add	r3, r3, #408
 6111 0582 D7F88025 		ldr	r2, [r7, #1408]
 6112 0586 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6113              		.loc 1 914 0
 6114 0588 07F21C43 		addw	r3, r7, #1052
 6115 058c C3F8C420 		str	r2, [r3, #196]
 967:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 6116              		.loc 1 967 0
 6117 0590 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6118 0594 D7F88015 		ldr	r1, [r7, #1408]
 6119 0598 1346     		mov	r3, r2
 6120 059a DB00     		lsls	r3, r3, #3
 6121 059c 9B1A     		subs	r3, r3, r2
 6122 059e 1B01     		lsls	r3, r3, #4
 6123 05a0 0B44     		add	r3, r3, r1
 6124 05a2 03F58873 		add	r3, r3, #272
 6125 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6126 05a8 1A46     		mov	r2, r3
 6127 05aa 1346     		mov	r3, r2
 6128 05ac 5B00     		lsls	r3, r3, #1
 6129 05ae 1344     		add	r3, r3, r2
 6130 05b0 1B01     		lsls	r3, r3, #4
 6131 05b2 03F5D073 		add	r3, r3, #416
 6132 05b6 D7F88025 		ldr	r2, [r7, #1408]
 6133 05ba 1344     		add	r3, r3, r2
 6134 05bc 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6135              		.loc 1 914 0
 6136 05be 07F21C43 		addw	r3, r7, #1052
 6137 05c2 C3F8C820 		str	r2, [r3, #200]
 968:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 6138              		.loc 1 968 0
 6139 05c6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 153


 6140 05ca 1346     		mov	r3, r2
 6141 05cc DB00     		lsls	r3, r3, #3
 6142 05ce 9B1A     		subs	r3, r3, r2
 6143 05d0 1B01     		lsls	r3, r3, #4
 6144 05d2 E033     		adds	r3, r3, #224
 6145 05d4 D7F88025 		ldr	r2, [r7, #1408]
 6146 05d8 1344     		add	r3, r3, r2
 6147 05da DA1C     		adds	r2, r3, #3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6148              		.loc 1 914 0
 6149 05dc 07F21C43 		addw	r3, r7, #1052
 6150 05e0 C3F8CC20 		str	r2, [r3, #204]
 969:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 6151              		.loc 1 969 0
 6152 05e4 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6153 05e8 1346     		mov	r3, r2
 6154 05ea DB00     		lsls	r3, r3, #3
 6155 05ec 9B1A     		subs	r3, r3, r2
 6156 05ee 1B01     		lsls	r3, r3, #4
 6157 05f0 E033     		adds	r3, r3, #224
 6158 05f2 D7F88025 		ldr	r2, [r7, #1408]
 6159 05f6 1344     		add	r3, r3, r2
 6160 05f8 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6161              		.loc 1 914 0
 6162 05fa 07F21C43 		addw	r3, r7, #1052
 6163 05fe C3F8D020 		str	r2, [r3, #208]
 970:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 6164              		.loc 1 970 0
 6165 0602 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6166 0606 1346     		mov	r3, r2
 6167 0608 DB00     		lsls	r3, r3, #3
 6168 060a 9B1A     		subs	r3, r3, r2
 6169 060c 1B01     		lsls	r3, r3, #4
 6170 060e E833     		adds	r3, r3, #232
 6171 0610 D7F88025 		ldr	r2, [r7, #1408]
 6172 0614 1344     		add	r3, r3, r2
 6173 0616 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6174              		.loc 1 914 0
 6175 0618 07F21C43 		addw	r3, r7, #1052
 6176 061c C3F8D420 		str	r2, [r3, #212]
 971:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 6177              		.loc 1 971 0
 6178 0620 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6179 0624 1346     		mov	r3, r2
 6180 0626 DB00     		lsls	r3, r3, #3
 6181 0628 9B1A     		subs	r3, r3, r2
 6182 062a 1B01     		lsls	r3, r3, #4
 6183 062c 03F58473 		add	r3, r3, #264
 6184 0630 D7F88025 		ldr	r2, [r7, #1408]
 6185 0634 1344     		add	r3, r3, r2
 6186 0636 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6187              		.loc 1 914 0
 6188 0638 07F21C43 		addw	r3, r7, #1052
 6189 063c C3F8D820 		str	r2, [r3, #216]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 154


 972:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 6190              		.loc 1 972 0
 6191 0640 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6192 0644 D7F88015 		ldr	r1, [r7, #1408]
 6193 0648 1346     		mov	r3, r2
 6194 064a DB00     		lsls	r3, r3, #3
 6195 064c 9B1A     		subs	r3, r3, r2
 6196 064e 1B01     		lsls	r3, r3, #4
 6197 0650 0B44     		add	r3, r3, r1
 6198 0652 03F58873 		add	r3, r3, #272
 6199 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6200 0658 1A46     		mov	r2, r3
 6201 065a 1346     		mov	r3, r2
 6202 065c 5B00     		lsls	r3, r3, #1
 6203 065e 1344     		add	r3, r3, r2
 6204 0660 1B01     		lsls	r3, r3, #4
 6205 0662 03F5D873 		add	r3, r3, #432
 6206 0666 D7F88025 		ldr	r2, [r7, #1408]
 6207 066a 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6208              		.loc 1 914 0
 6209 066c 07F21C43 		addw	r3, r7, #1052
 6210 0670 C3F8DC20 		str	r2, [r3, #220]
 973:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 6211              		.loc 1 973 0
 6212 0674 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6213 0678 D7F88015 		ldr	r1, [r7, #1408]
 6214 067c 1346     		mov	r3, r2
 6215 067e DB00     		lsls	r3, r3, #3
 6216 0680 9B1A     		subs	r3, r3, r2
 6217 0682 1B01     		lsls	r3, r3, #4
 6218 0684 0B44     		add	r3, r3, r1
 6219 0686 03F58873 		add	r3, r3, #272
 6220 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6221 068c 1A46     		mov	r2, r3
 6222 068e 1346     		mov	r3, r2
 6223 0690 5B00     		lsls	r3, r3, #1
 6224 0692 1344     		add	r3, r3, r2
 6225 0694 1B01     		lsls	r3, r3, #4
 6226 0696 03F5D873 		add	r3, r3, #432
 6227 069a D7F88025 		ldr	r2, [r7, #1408]
 6228 069e 1344     		add	r3, r3, r2
 6229 06a0 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6230              		.loc 1 914 0
 6231 06a2 07F21C43 		addw	r3, r7, #1052
 6232 06a6 C3F8E020 		str	r2, [r3, #224]
 974:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 6233              		.loc 1 974 0
 6234 06aa 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6235 06ae 1346     		mov	r3, r2
 6236 06b0 DB00     		lsls	r3, r3, #3
 6237 06b2 9B1A     		subs	r3, r3, r2
 6238 06b4 1B01     		lsls	r3, r3, #4
 6239 06b6 E033     		adds	r3, r3, #224
 6240 06b8 D7F88025 		ldr	r2, [r7, #1408]
 6241 06bc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 155


 6242 06be 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6243              		.loc 1 914 0
 6244 06c0 07F21C43 		addw	r3, r7, #1052
 6245 06c4 C3F8E420 		str	r2, [r3, #228]
 975:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 6246              		.loc 1 975 0
 6247 06c8 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6248 06cc 1346     		mov	r3, r2
 6249 06ce DB00     		lsls	r3, r3, #3
 6250 06d0 9B1A     		subs	r3, r3, r2
 6251 06d2 1B01     		lsls	r3, r3, #4
 6252 06d4 F033     		adds	r3, r3, #240
 6253 06d6 D7F88025 		ldr	r2, [r7, #1408]
 6254 06da 1344     		add	r3, r3, r2
 6255 06dc 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6256              		.loc 1 914 0
 6257 06de 07F21C43 		addw	r3, r7, #1052
 6258 06e2 C3F8E820 		str	r2, [r3, #232]
 976:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 6259              		.loc 1 976 0
 6260 06e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6261 06ea 1346     		mov	r3, r2
 6262 06ec DB00     		lsls	r3, r3, #3
 6263 06ee 9B1A     		subs	r3, r3, r2
 6264 06f0 1B01     		lsls	r3, r3, #4
 6265 06f2 03F58873 		add	r3, r3, #272
 6266 06f6 D7F88025 		ldr	r2, [r7, #1408]
 6267 06fa 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6268              		.loc 1 914 0
 6269 06fc 07F21C43 		addw	r3, r7, #1052
 6270 0700 C3F8EC20 		str	r2, [r3, #236]
 977:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 6271              		.loc 1 977 0
 6272 0704 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6273 0708 1346     		mov	r3, r2
 6274 070a DB00     		lsls	r3, r3, #3
 6275 070c 9B1A     		subs	r3, r3, r2
 6276 070e 1B01     		lsls	r3, r3, #4
 6277 0710 E033     		adds	r3, r3, #224
 6278 0712 D7F88025 		ldr	r2, [r7, #1408]
 6279 0716 1344     		add	r3, r3, r2
 6280 0718 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6281              		.loc 1 914 0
 6282 071a 07F21C43 		addw	r3, r7, #1052
 6283 071e C3F8F020 		str	r2, [r3, #240]
 978:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 6284              		.loc 1 978 0
 6285 0722 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6286 0726 1346     		mov	r3, r2
 6287 0728 DB00     		lsls	r3, r3, #3
 6288 072a 9B1A     		subs	r3, r3, r2
 6289 072c 1B01     		lsls	r3, r3, #4
 6290 072e 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 156


 6291 0732 D7F88025 		ldr	r2, [r7, #1408]
 6292 0736 1344     		add	r3, r3, r2
 6293 0738 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6294              		.loc 1 914 0
 6295 073a 07F21C43 		addw	r3, r7, #1052
 6296 073e C3F8F420 		str	r2, [r3, #244]
 979:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 6297              		.loc 1 979 0
 6298 0742 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6299 0746 1346     		mov	r3, r2
 6300 0748 DB00     		lsls	r3, r3, #3
 6301 074a 9B1A     		subs	r3, r3, r2
 6302 074c 1B01     		lsls	r3, r3, #4
 6303 074e 03F58873 		add	r3, r3, #272
 6304 0752 D7F88025 		ldr	r2, [r7, #1408]
 6305 0756 1344     		add	r3, r3, r2
 6306 0758 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6307              		.loc 1 914 0
 6308 075a 07F21C43 		addw	r3, r7, #1052
 6309 075e C3F8F820 		str	r2, [r3, #248]
 980:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 6310              		.loc 1 980 0
 6311 0762 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6312 0766 D7F88015 		ldr	r1, [r7, #1408]
 6313 076a 1346     		mov	r3, r2
 6314 076c DB00     		lsls	r3, r3, #3
 6315 076e 9B1A     		subs	r3, r3, r2
 6316 0770 1B01     		lsls	r3, r3, #4
 6317 0772 0B44     		add	r3, r3, r1
 6318 0774 03F58873 		add	r3, r3, #272
 6319 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6320 077a 1A46     		mov	r2, r3
 6321 077c 1346     		mov	r3, r2
 6322 077e 5B00     		lsls	r3, r3, #1
 6323 0780 1344     		add	r3, r3, r2
 6324 0782 1B01     		lsls	r3, r3, #4
 6325 0784 03F5D873 		add	r3, r3, #432
 6326 0788 D7F88025 		ldr	r2, [r7, #1408]
 6327 078c 1344     		add	r3, r3, r2
 6328 078e 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6329              		.loc 1 914 0
 6330 0790 07F21C43 		addw	r3, r7, #1052
 6331 0794 C3F8FC20 		str	r2, [r3, #252]
 981:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 6332              		.loc 1 981 0
 6333 0798 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 6334 079c D7F88015 		ldr	r1, [r7, #1408]
 6335 07a0 1346     		mov	r3, r2
 6336 07a2 DB00     		lsls	r3, r3, #3
 6337 07a4 9B1A     		subs	r3, r3, r2
 6338 07a6 1B01     		lsls	r3, r3, #4
 6339 07a8 0B44     		add	r3, r3, r1
 6340 07aa 03F58873 		add	r3, r3, #272
 6341 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 157


 6342 07b0 1A46     		mov	r2, r3
 6343 07b2 1346     		mov	r3, r2
 6344 07b4 5B00     		lsls	r3, r3, #1
 6345 07b6 1344     		add	r3, r3, r2
 6346 07b8 1B01     		lsls	r3, r3, #4
 6347 07ba 03F5D873 		add	r3, r3, #432
 6348 07be D7F88025 		ldr	r2, [r7, #1408]
 6349 07c2 1344     		add	r3, r3, r2
 6350 07c4 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6351              		.loc 1 914 0
 6352 07c6 07F21C43 		addw	r3, r7, #1052
 6353 07ca C3F80021 		str	r2, [r3, #256]
 982:..\src/command_processing.c ****         
 983:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 6354              		.loc 1 983 0
 6355 07ce D7F88035 		ldr	r3, [r7, #1408]
 6356 07d2 03F5C872 		add	r2, r3, #400
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6357              		.loc 1 914 0
 6358 07d6 07F21C43 		addw	r3, r7, #1052
 6359 07da C3F80421 		str	r2, [r3, #260]
 984:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 6360              		.loc 1 984 0
 6361 07de D7F88035 		ldr	r3, [r7, #1408]
 6362 07e2 03F5E072 		add	r2, r3, #448
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6363              		.loc 1 914 0
 6364 07e6 07F21C43 		addw	r3, r7, #1052
 6365 07ea C3F80821 		str	r2, [r3, #264]
 985:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 6366              		.loc 1 985 0
 6367 07ee D7F88035 		ldr	r3, [r7, #1408]
 6368 07f2 03F22722 		addw	r2, r3, #551
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6369              		.loc 1 914 0
 6370 07f6 07F21C43 		addw	r3, r7, #1052
 6371 07fa C3F80C21 		str	r2, [r3, #268]
 986:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 6372              		.loc 1 986 0
 6373 07fe D7F88035 		ldr	r3, [r7, #1408]
 6374 0802 03F50A72 		add	r2, r3, #552
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6375              		.loc 1 914 0
 6376 0806 07F21C43 		addw	r3, r7, #1052
 6377 080a C3F81021 		str	r2, [r3, #272]
 987:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 6378              		.loc 1 987 0
 6379 080e D7F88035 		ldr	r3, [r7, #1408]
 6380 0812 03F22E22 		addw	r2, r3, #558
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6381              		.loc 1 914 0
 6382 0816 07F21C43 		addw	r3, r7, #1052
 6383 081a C3F81421 		str	r2, [r3, #276]
 988:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.record_EMG_history_on_SD),
 6384              		.loc 1 988 0
 6385 081e D7F88035 		ldr	r3, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 158


 6386 0822 03F50D72 		add	r2, r3, #564
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6387              		.loc 1 914 0
 6388 0826 07F21C43 		addw	r3, r7, #1052
 6389 082a C3F81821 		str	r2, [r3, #280]
 989:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 6390              		.loc 1 989 0
 6391 082e D7F88035 		ldr	r3, [r7, #1408]
 6392 0832 03F52C72 		add	r2, r3, #688
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6393              		.loc 1 914 0
 6394 0836 07F21C43 		addw	r3, r7, #1052
 6395 083a C3F81C21 		str	r2, [r3, #284]
 990:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 6396              		.loc 1 990 0
 6397 083e D7F88035 		ldr	r3, [r7, #1408]
 6398 0842 03F2B222 		addw	r2, r3, #690
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6399              		.loc 1 914 0
 6400 0846 07F21C43 		addw	r3, r7, #1052
 6401 084a C3F82021 		str	r2, [r3, #288]
 991:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 6402              		.loc 1 991 0
 6403 084e D7F88035 		ldr	r3, [r7, #1408]
 6404 0852 03F52D72 		add	r2, r3, #692
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6405              		.loc 1 914 0
 6406 0856 07F21C43 		addw	r3, r7, #1052
 6407 085a C3F82421 		str	r2, [r3, #292]
 992:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 6408              		.loc 1 992 0
 6409 085e D7F88035 		ldr	r3, [r7, #1408]
 6410 0862 03F1AC02 		add	r2, r3, #172
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6411              		.loc 1 914 0
 6412 0866 07F21C43 		addw	r3, r7, #1052
 6413 086a C3F82821 		str	r2, [r3, #296]
 993:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 6414              		.loc 1 993 0
 6415 086e D7F88035 		ldr	r3, [r7, #1408]
 6416 0872 03F53872 		add	r2, r3, #736
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6417              		.loc 1 914 0
 6418 0876 07F21C43 		addw	r3, r7, #1052
 6419 087a C3F82C21 		str	r2, [r3, #300]
 994:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 6420              		.loc 1 994 0
 6421 087e D7F88035 		ldr	r3, [r7, #1408]
 6422 0882 03F2E222 		addw	r2, r3, #738
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6423              		.loc 1 914 0
 6424 0886 07F21C43 		addw	r3, r7, #1052
 6425 088a C3F83021 		str	r2, [r3, #304]
 995:..\src/command_processing.c ****         
 996:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 6426              		.loc 1 996 0
 6427 088e D7F88035 		ldr	r3, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 159


 6428 0892 03F2E622 		addw	r2, r3, #742
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6429              		.loc 1 914 0
 6430 0896 07F21C43 		addw	r3, r7, #1052
 6431 089a C3F83421 		str	r2, [r3, #308]
 997:..\src/command_processing.c ****         
 998:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 6432              		.loc 1 998 0
 6433 089e D7F88035 		ldr	r3, [r7, #1408]
 6434 08a2 03F53072 		add	r2, r3, #704
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6435              		.loc 1 914 0
 6436 08a6 07F21C43 		addw	r3, r7, #1052
 6437 08aa C3F83821 		str	r2, [r3, #312]
 999:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 6438              		.loc 1 999 0
 6439 08ae D7F88035 		ldr	r3, [r7, #1408]
 6440 08b2 03F2C122 		addw	r2, r3, #705
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6441              		.loc 1 914 0
 6442 08b6 07F21C43 		addw	r3, r7, #1052
 6443 08ba C3F83C21 		str	r2, [r3, #316]
1000:..\src/command_processing.c ****         
1001:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 6444              		.loc 1 1001 0
 6445 08be D7F88035 		ldr	r3, [r7, #1408]
 6446 08c2 03F53472 		add	r2, r3, #720
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6447              		.loc 1 914 0
 6448 08c6 07F21C43 		addw	r3, r7, #1052
 6449 08ca C3F84021 		str	r2, [r3, #320]
1002:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 6450              		.loc 1 1002 0
 6451 08ce D7F88035 		ldr	r3, [r7, #1408]
 6452 08d2 03F53572 		add	r2, r3, #724
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6453              		.loc 1 914 0
 6454 08d6 07F21C43 		addw	r3, r7, #1052
 6455 08da C3F84421 		str	r2, [r3, #324]
1003:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 6456              		.loc 1 1003 0
 6457 08de D7F88035 		ldr	r3, [r7, #1408]
 6458 08e2 03F53672 		add	r2, r3, #728
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6459              		.loc 1 914 0
 6460 08e6 07F21C43 		addw	r3, r7, #1052
 6461 08ea C3F84821 		str	r2, [r3, #328]
1004:..\src/command_processing.c ****         
1005:..\src/command_processing.c **** 
1006:..\src/command_processing.c ****     };
1007:..\src/command_processing.c ****     
1008:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 6462              		.loc 1 1008 0
 6463 08ee 07F57273 		add	r3, r7, #968
 6464 08f2 F64A     		ldr	r2, .L372
 6465 08f4 1846     		mov	r0, r3
 6466 08f6 1146     		mov	r1, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 160


 6467 08f8 5323     		movs	r3, #83
 6468 08fa 1A46     		mov	r2, r3
 6469 08fc FFF7FEFF 		bl	memcpy
1009:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
1010:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
1011:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
1012:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
1013:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
1014:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
1015:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
1016:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
1017:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
1018:..\src/command_processing.c ****         
1019:..\src/command_processing.c ****         // GENERIC PARAMS
1020:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1021:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1022:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1023:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1024:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1025:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1026:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1027:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1028:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_UINT16, 
1029:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_FLAG,
1030:..\src/command_processing.c ****         TYPE_UINT16,
1031:..\src/command_processing.c ****         
1032:..\src/command_processing.c ****                     TYPE_FLAG, TYPE_FLAG, TYPE_UINT8,
1033:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
1034:..\src/command_processing.c ****     };
1035:..\src/command_processing.c **** 
1036:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 6470              		.loc 1 1036 0
 6471 0900 07F55D73 		add	r3, r7, #884
 6472 0904 0122     		movs	r2, #1
 6473 0906 1A70     		strb	r2, [r3]
 6474 0908 07F55D73 		add	r3, r7, #884
 6475 090c 0322     		movs	r2, #3
 6476 090e 5A70     		strb	r2, [r3, #1]
 6477 0910 07F55D73 		add	r3, r7, #884
 6478 0914 0322     		movs	r2, #3
 6479 0916 9A70     		strb	r2, [r3, #2]
 6480 0918 07F55D73 		add	r3, r7, #884
 6481 091c 0122     		movs	r2, #1
 6482 091e DA70     		strb	r2, [r3, #3]
 6483 0920 07F55D73 		add	r3, r7, #884
 6484 0924 0122     		movs	r2, #1
 6485 0926 1A71     		strb	r2, [r3, #4]
 6486 0928 07F55D73 		add	r3, r7, #884
 6487 092c 0122     		movs	r2, #1
 6488 092e 5A71     		strb	r2, [r3, #5]
 6489 0930 07F55D73 		add	r3, r7, #884
 6490 0934 0322     		movs	r2, #3
 6491 0936 9A71     		strb	r2, [r3, #6]
 6492 0938 07F55D73 		add	r3, r7, #884
 6493 093c 0322     		movs	r2, #3
 6494 093e DA71     		strb	r2, [r3, #7]
 6495 0940 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 161


 6496 0944 0322     		movs	r2, #3
 6497 0946 1A72     		strb	r2, [r3, #8]
 6498 0948 07F55D73 		add	r3, r7, #884
 6499 094c 0122     		movs	r2, #1
 6500 094e 5A72     		strb	r2, [r3, #9]
 6501 0950 07F55D73 		add	r3, r7, #884
 6502 0954 0222     		movs	r2, #2
 6503 0956 9A72     		strb	r2, [r3, #10]
 6504 0958 07F55D73 		add	r3, r7, #884
 6505 095c 0222     		movs	r2, #2
 6506 095e DA72     		strb	r2, [r3, #11]
 6507 0960 07F55D73 		add	r3, r7, #884
 6508 0964 0122     		movs	r2, #1
 6509 0966 1A73     		strb	r2, [r3, #12]
 6510 0968 07F55D73 		add	r3, r7, #884
 6511 096c 0222     		movs	r2, #2
 6512 096e 5A73     		strb	r2, [r3, #13]
 6513 0970 07F55D73 		add	r3, r7, #884
 6514 0974 0122     		movs	r2, #1
 6515 0976 9A73     		strb	r2, [r3, #14]
 6516 0978 07F55D73 		add	r3, r7, #884
 6517 097c 0222     		movs	r2, #2
 6518 097e DA73     		strb	r2, [r3, #15]
 6519 0980 07F55D73 		add	r3, r7, #884
 6520 0984 0222     		movs	r2, #2
 6521 0986 1A74     		strb	r2, [r3, #16]
 6522 0988 07F55D73 		add	r3, r7, #884
 6523 098c 0122     		movs	r2, #1
 6524 098e 5A74     		strb	r2, [r3, #17]
 6525 0990 07F55D73 		add	r3, r7, #884
 6526 0994 0122     		movs	r2, #1
 6527 0996 9A74     		strb	r2, [r3, #18]
 6528 0998 07F55D73 		add	r3, r7, #884
 6529 099c 0122     		movs	r2, #1
 6530 099e DA74     		strb	r2, [r3, #19]
 6531 09a0 07F55D73 		add	r3, r7, #884
 6532 09a4 0622     		movs	r2, #6
 6533 09a6 1A75     		strb	r2, [r3, #20]
 6534 09a8 07F55D73 		add	r3, r7, #884
 6535 09ac 0322     		movs	r2, #3
 6536 09ae 5A75     		strb	r2, [r3, #21]
 6537 09b0 07F55D73 		add	r3, r7, #884
 6538 09b4 0122     		movs	r2, #1
 6539 09b6 9A75     		strb	r2, [r3, #22]
 6540 09b8 07F55D73 		add	r3, r7, #884
 6541 09bc 0122     		movs	r2, #1
 6542 09be DA75     		strb	r2, [r3, #23]
 6543 09c0 07F55D73 		add	r3, r7, #884
 6544 09c4 0122     		movs	r2, #1
 6545 09c6 1A76     		strb	r2, [r3, #24]
 6546 09c8 07F55D73 		add	r3, r7, #884
 6547 09cc 0122     		movs	r2, #1
 6548 09ce 5A76     		strb	r2, [r3, #25]
 6549 09d0 07F55D73 		add	r3, r7, #884
 6550 09d4 0122     		movs	r2, #1
 6551 09d6 9A76     		strb	r2, [r3, #26]
 6552 09d8 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 162


 6553 09dc 0122     		movs	r2, #1
 6554 09de DA76     		strb	r2, [r3, #27]
 6555 09e0 07F55D73 		add	r3, r7, #884
 6556 09e4 0122     		movs	r2, #1
 6557 09e6 1A77     		strb	r2, [r3, #28]
 6558 09e8 07F55D73 		add	r3, r7, #884
 6559 09ec 0122     		movs	r2, #1
 6560 09ee 5A77     		strb	r2, [r3, #29]
 6561 09f0 07F55D73 		add	r3, r7, #884
 6562 09f4 0122     		movs	r2, #1
 6563 09f6 9A77     		strb	r2, [r3, #30]
 6564 09f8 07F55D73 		add	r3, r7, #884
 6565 09fc 0622     		movs	r2, #6
 6566 09fe DA77     		strb	r2, [r3, #31]
 6567 0a00 07F55D73 		add	r3, r7, #884
 6568 0a04 0122     		movs	r2, #1
 6569 0a06 83F82020 		strb	r2, [r3, #32]
 6570 0a0a 07F55D73 		add	r3, r7, #884
 6571 0a0e 0522     		movs	r2, #5
 6572 0a10 83F82120 		strb	r2, [r3, #33]
 6573 0a14 07F55D73 		add	r3, r7, #884
 6574 0a18 0122     		movs	r2, #1
 6575 0a1a 83F82220 		strb	r2, [r3, #34]
 6576 0a1e 07F55D73 		add	r3, r7, #884
 6577 0a22 0622     		movs	r2, #6
 6578 0a24 83F82320 		strb	r2, [r3, #35]
 6579 0a28 07F55D73 		add	r3, r7, #884
 6580 0a2c 0122     		movs	r2, #1
 6581 0a2e 83F82420 		strb	r2, [r3, #36]
 6582 0a32 07F55D73 		add	r3, r7, #884
 6583 0a36 0122     		movs	r2, #1
 6584 0a38 83F82520 		strb	r2, [r3, #37]
 6585 0a3c 07F55D73 		add	r3, r7, #884
 6586 0a40 0122     		movs	r2, #1
 6587 0a42 83F82620 		strb	r2, [r3, #38]
 6588 0a46 07F55D73 		add	r3, r7, #884
 6589 0a4a 0122     		movs	r2, #1
 6590 0a4c 83F82720 		strb	r2, [r3, #39]
 6591 0a50 07F55D73 		add	r3, r7, #884
 6592 0a54 0322     		movs	r2, #3
 6593 0a56 83F82820 		strb	r2, [r3, #40]
 6594 0a5a 07F55D73 		add	r3, r7, #884
 6595 0a5e 0322     		movs	r2, #3
 6596 0a60 83F82920 		strb	r2, [r3, #41]
 6597 0a64 07F55D73 		add	r3, r7, #884
 6598 0a68 0122     		movs	r2, #1
 6599 0a6a 83F82A20 		strb	r2, [r3, #42]
 6600 0a6e 07F55D73 		add	r3, r7, #884
 6601 0a72 0322     		movs	r2, #3
 6602 0a74 83F82B20 		strb	r2, [r3, #43]
 6603 0a78 07F55D73 		add	r3, r7, #884
 6604 0a7c 0322     		movs	r2, #3
 6605 0a7e 83F82C20 		strb	r2, [r3, #44]
 6606 0a82 07F55D73 		add	r3, r7, #884
 6607 0a86 0122     		movs	r2, #1
 6608 0a88 83F82D20 		strb	r2, [r3, #45]
 6609 0a8c 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 163


 6610 0a90 0122     		movs	r2, #1
 6611 0a92 83F82E20 		strb	r2, [r3, #46]
 6612 0a96 07F55D73 		add	r3, r7, #884
 6613 0a9a 0122     		movs	r2, #1
 6614 0a9c 83F82F20 		strb	r2, [r3, #47]
 6615 0aa0 07F55D73 		add	r3, r7, #884
 6616 0aa4 0322     		movs	r2, #3
 6617 0aa6 83F83020 		strb	r2, [r3, #48]
 6618 0aaa 07F55D73 		add	r3, r7, #884
 6619 0aae 0322     		movs	r2, #3
 6620 0ab0 83F83120 		strb	r2, [r3, #49]
 6621 0ab4 07F55D73 		add	r3, r7, #884
 6622 0ab8 0322     		movs	r2, #3
 6623 0aba 83F83220 		strb	r2, [r3, #50]
 6624 0abe 07F55D73 		add	r3, r7, #884
 6625 0ac2 0122     		movs	r2, #1
 6626 0ac4 83F83320 		strb	r2, [r3, #51]
 6627 0ac8 07F55D73 		add	r3, r7, #884
 6628 0acc 0222     		movs	r2, #2
 6629 0ace 83F83420 		strb	r2, [r3, #52]
 6630 0ad2 07F55D73 		add	r3, r7, #884
 6631 0ad6 0222     		movs	r2, #2
 6632 0ad8 83F83520 		strb	r2, [r3, #53]
 6633 0adc 07F55D73 		add	r3, r7, #884
 6634 0ae0 0122     		movs	r2, #1
 6635 0ae2 83F83620 		strb	r2, [r3, #54]
 6636 0ae6 07F55D73 		add	r3, r7, #884
 6637 0aea 0122     		movs	r2, #1
 6638 0aec 83F83720 		strb	r2, [r3, #55]
 6639 0af0 07F55D73 		add	r3, r7, #884
 6640 0af4 0122     		movs	r2, #1
 6641 0af6 83F83820 		strb	r2, [r3, #56]
 6642 0afa 07F55D73 		add	r3, r7, #884
 6643 0afe 0122     		movs	r2, #1
 6644 0b00 83F83920 		strb	r2, [r3, #57]
 6645 0b04 07F55D73 		add	r3, r7, #884
 6646 0b08 0622     		movs	r2, #6
 6647 0b0a 83F83A20 		strb	r2, [r3, #58]
 6648 0b0e 07F55D73 		add	r3, r7, #884
 6649 0b12 0122     		movs	r2, #1
 6650 0b14 83F83B20 		strb	r2, [r3, #59]
 6651 0b18 07F55D73 		add	r3, r7, #884
 6652 0b1c 0122     		movs	r2, #1
 6653 0b1e 83F83C20 		strb	r2, [r3, #60]
 6654 0b22 07F55D73 		add	r3, r7, #884
 6655 0b26 0122     		movs	r2, #1
 6656 0b28 83F83D20 		strb	r2, [r3, #61]
 6657 0b2c 07F55D73 		add	r3, r7, #884
 6658 0b30 0122     		movs	r2, #1
 6659 0b32 83F83E20 		strb	r2, [r3, #62]
 6660 0b36 07F55D73 		add	r3, r7, #884
 6661 0b3a 0322     		movs	r2, #3
 6662 0b3c 83F83F20 		strb	r2, [r3, #63]
 6663 0b40 07F55D73 		add	r3, r7, #884
 6664 0b44 0322     		movs	r2, #3
 6665 0b46 83F84020 		strb	r2, [r3, #64]
1037:..\src/command_processing.c ****         1, 3, 3, 1, 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 164


1038:..\src/command_processing.c ****         1, 1, 3, 3,
1039:..\src/command_processing.c ****         3, 1, 2, 2, 
1040:..\src/command_processing.c ****         1, 2, 1, 2,
1041:..\src/command_processing.c ****         2, 1, 1, 1, 
1042:..\src/command_processing.c ****         6, 3, 1, 1,
1043:..\src/command_processing.c ****         1, 1, 1, 1, 
1044:..\src/command_processing.c ****         1, 1, 1, 6,
1045:..\src/command_processing.c ****         1, 5, 1, 6,
1046:..\src/command_processing.c ****         
1047:..\src/command_processing.c ****         // GENERIC PARAMS
1048:..\src/command_processing.c ****         1, 1, 1, 1,
1049:..\src/command_processing.c ****         3, 3, 1, 3,
1050:..\src/command_processing.c ****         3, 1, 1, 1,
1051:..\src/command_processing.c ****         3, 3, 3, 1,
1052:..\src/command_processing.c ****         2, 2, 1, 1,
1053:..\src/command_processing.c ****         1, 1, 6, 1,
1054:..\src/command_processing.c ****         1, 1, 1, 3, 
1055:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 6666              		.loc 1 1055 0
 6667 0b4a 614B     		ldr	r3, .L372+4
 6668 0b4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1036:..\src/command_processing.c ****         1, 3, 3, 1, 
 6669              		.loc 1 1036 0
 6670 0b4e 07F55D73 		add	r3, r7, #884
 6671 0b52 83F84120 		strb	r2, [r3, #65]
 6672              		.loc 1 1055 0
 6673 0b56 5E4B     		ldr	r3, .L372+4
 6674 0b58 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1036:..\src/command_processing.c ****         1, 3, 3, 1, 
 6675              		.loc 1 1036 0
 6676 0b5a 07F55D73 		add	r3, r7, #884
 6677 0b5e 83F84220 		strb	r2, [r3, #66]
 6678 0b62 07F55D73 		add	r3, r7, #884
 6679 0b66 0122     		movs	r2, #1
 6680 0b68 83F84320 		strb	r2, [r3, #67]
 6681 0b6c 07F55D73 		add	r3, r7, #884
 6682 0b70 0622     		movs	r2, #6
 6683 0b72 83F84420 		strb	r2, [r3, #68]
 6684 0b76 07F55D73 		add	r3, r7, #884
 6685 0b7a 0622     		movs	r2, #6
 6686 0b7c 83F84520 		strb	r2, [r3, #69]
 6687 0b80 07F55D73 		add	r3, r7, #884
 6688 0b84 0122     		movs	r2, #1
 6689 0b86 83F84620 		strb	r2, [r3, #70]
 6690 0b8a 07F55D73 		add	r3, r7, #884
 6691 0b8e 0122     		movs	r2, #1
 6692 0b90 83F84720 		strb	r2, [r3, #71]
 6693 0b94 07F55D73 		add	r3, r7, #884
 6694 0b98 0122     		movs	r2, #1
 6695 0b9a 83F84820 		strb	r2, [r3, #72]
 6696 0b9e 07F55D73 		add	r3, r7, #884
 6697 0ba2 0222     		movs	r2, #2
 6698 0ba4 83F84920 		strb	r2, [r3, #73]
 6699 0ba8 07F55D73 		add	r3, r7, #884
 6700 0bac 0122     		movs	r2, #1
 6701 0bae 83F84A20 		strb	r2, [r3, #74]
 6702 0bb2 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 165


 6703 0bb6 0122     		movs	r2, #1
 6704 0bb8 83F84B20 		strb	r2, [r3, #75]
 6705 0bbc 07F55D73 		add	r3, r7, #884
 6706 0bc0 0222     		movs	r2, #2
 6707 0bc2 83F84C20 		strb	r2, [r3, #76]
 6708 0bc6 07F55D73 		add	r3, r7, #884
 6709 0bca 0122     		movs	r2, #1
 6710 0bcc 83F84D20 		strb	r2, [r3, #77]
 6711 0bd0 07F55D73 		add	r3, r7, #884
 6712 0bd4 0122     		movs	r2, #1
 6713 0bd6 83F84E20 		strb	r2, [r3, #78]
 6714 0bda 07F55D73 		add	r3, r7, #884
 6715 0bde 0122     		movs	r2, #1
 6716 0be0 83F84F20 		strb	r2, [r3, #79]
 6717 0be4 07F55D73 		add	r3, r7, #884
 6718 0be8 0122     		movs	r2, #1
 6719 0bea 83F85020 		strb	r2, [r3, #80]
 6720 0bee 07F55D73 		add	r3, r7, #884
 6721 0bf2 0122     		movs	r2, #1
 6722 0bf4 83F85120 		strb	r2, [r3, #81]
 6723 0bf8 07F55D73 		add	r3, r7, #884
 6724 0bfc 0122     		movs	r2, #1
 6725 0bfe 83F85220 		strb	r2, [r3, #82]
1056:..\src/command_processing.c ****         6, 6, 1, 1,
1057:..\src/command_processing.c ****         1, 2, 1, 1,
1058:..\src/command_processing.c ****         2,
1059:..\src/command_processing.c ****         
1060:..\src/command_processing.c ****            1, 1, 1, 
1061:..\src/command_processing.c ****         1, 1, 1
1062:..\src/command_processing.c ****     };
1063:..\src/command_processing.c ****     
1064:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 6726              		.loc 1 1064 0
 6727 0c02 07F54873 		add	r3, r7, #800
 6728 0c06 0022     		movs	r2, #0
 6729 0c08 1A70     		strb	r2, [r3]
 6730 0c0a 97F87D35 		ldrb	r3, [r7, #1405]
 6731 0c0e 0A33     		adds	r3, r3, #10
 6732 0c10 DAB2     		uxtb	r2, r3
 6733 0c12 07F54873 		add	r3, r7, #800
 6734 0c16 5A70     		strb	r2, [r3, #1]
 6735 0c18 97F87D35 		ldrb	r3, [r7, #1405]
 6736 0c1c 0A33     		adds	r3, r3, #10
 6737 0c1e DAB2     		uxtb	r2, r3
 6738 0c20 07F54873 		add	r3, r7, #800
 6739 0c24 9A70     		strb	r2, [r3, #2]
 6740 0c26 97F87D35 		ldrb	r3, [r7, #1405]
 6741 0c2a 0A33     		adds	r3, r3, #10
 6742 0c2c DAB2     		uxtb	r2, r3
 6743 0c2e 07F54873 		add	r3, r7, #800
 6744 0c32 DA70     		strb	r2, [r3, #3]
 6745 0c34 97F87D35 		ldrb	r3, [r7, #1405]
 6746 0c38 0A33     		adds	r3, r3, #10
 6747 0c3a DAB2     		uxtb	r2, r3
 6748 0c3c 07F54873 		add	r3, r7, #800
 6749 0c40 1A71     		strb	r2, [r3, #4]
 6750 0c42 97F87D35 		ldrb	r3, [r7, #1405]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 166


 6751 0c46 0A33     		adds	r3, r3, #10
 6752 0c48 DAB2     		uxtb	r2, r3
 6753 0c4a 07F54873 		add	r3, r7, #800
 6754 0c4e 5A71     		strb	r2, [r3, #5]
1065:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1066:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 6755              		.loc 1 1066 0
 6756 0c50 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6757 0c54 D7F88015 		ldr	r1, [r7, #1408]
 6758 0c58 1346     		mov	r3, r2
 6759 0c5a DB00     		lsls	r3, r3, #3
 6760 0c5c 9B1A     		subs	r3, r3, r2
 6761 0c5e 1B01     		lsls	r3, r3, #4
 6762 0c60 0B44     		add	r3, r3, r1
 6763 0c62 03F58873 		add	r3, r3, #272
 6764 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6765              		.loc 1 1064 0
 6766 0c68 1433     		adds	r3, r3, #20
 6767 0c6a DAB2     		uxtb	r2, r3
 6768 0c6c 07F54873 		add	r3, r7, #800
 6769 0c70 9A71     		strb	r2, [r3, #6]
 6770              		.loc 1 1066 0
 6771 0c72 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6772 0c76 D7F88015 		ldr	r1, [r7, #1408]
 6773 0c7a 1346     		mov	r3, r2
 6774 0c7c DB00     		lsls	r3, r3, #3
 6775 0c7e 9B1A     		subs	r3, r3, r2
 6776 0c80 1B01     		lsls	r3, r3, #4
 6777 0c82 0B44     		add	r3, r3, r1
 6778 0c84 03F58873 		add	r3, r3, #272
 6779 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6780              		.loc 1 1064 0
 6781 0c8a 1433     		adds	r3, r3, #20
 6782 0c8c DAB2     		uxtb	r2, r3
 6783 0c8e 07F54873 		add	r3, r7, #800
 6784 0c92 DA71     		strb	r2, [r3, #7]
1067:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6785              		.loc 1 1067 0
 6786 0c94 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6787 0c98 D7F88015 		ldr	r1, [r7, #1408]
 6788 0c9c 1346     		mov	r3, r2
 6789 0c9e DB00     		lsls	r3, r3, #3
 6790 0ca0 9B1A     		subs	r3, r3, r2
 6791 0ca2 1B01     		lsls	r3, r3, #4
 6792 0ca4 0B44     		add	r3, r3, r1
 6793 0ca6 03F58873 		add	r3, r3, #272
 6794 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6795              		.loc 1 1064 0
 6796 0cac 1433     		adds	r3, r3, #20
 6797 0cae DAB2     		uxtb	r2, r3
 6798 0cb0 07F54873 		add	r3, r7, #800
 6799 0cb4 1A72     		strb	r2, [r3, #8]
 6800 0cb6 97F87D35 		ldrb	r3, [r7, #1405]
 6801 0cba 0A33     		adds	r3, r3, #10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 167


 6802 0cbc DAB2     		uxtb	r2, r3
 6803 0cbe 07F54873 		add	r3, r7, #800
 6804 0cc2 5A72     		strb	r2, [r3, #9]
 6805 0cc4 97F87D35 		ldrb	r3, [r7, #1405]
 6806 0cc8 04E0     		b	.L373
 6807              	.L374:
 6808 0cca 00BF     		.align	2
 6809              	.L372:
 6810 0ccc 4C060000 		.word	.LC0
 6811 0cd0 00000000 		.word	N_Encoder_Line_Connected
 6812              	.L373:
 6813 0cd4 0A33     		adds	r3, r3, #10
 6814 0cd6 DAB2     		uxtb	r2, r3
 6815 0cd8 07F54873 		add	r3, r7, #800
 6816 0cdc 9A72     		strb	r2, [r3, #10]
 6817 0cde 97F87D35 		ldrb	r3, [r7, #1405]
 6818 0ce2 0A33     		adds	r3, r3, #10
 6819 0ce4 DAB2     		uxtb	r2, r3
 6820 0ce6 07F54873 		add	r3, r7, #800
 6821 0cea DA72     		strb	r2, [r3, #11]
 6822 0cec 97F87D35 		ldrb	r3, [r7, #1405]
 6823 0cf0 0A33     		adds	r3, r3, #10
 6824 0cf2 DAB2     		uxtb	r2, r3
 6825 0cf4 07F54873 		add	r3, r7, #800
 6826 0cf8 1A73     		strb	r2, [r3, #12]
 6827 0cfa 07F54873 		add	r3, r7, #800
 6828 0cfe 1E22     		movs	r2, #30
 6829 0d00 5A73     		strb	r2, [r3, #13]
 6830 0d02 07F54873 		add	r3, r7, #800
 6831 0d06 1E22     		movs	r2, #30
 6832 0d08 9A73     		strb	r2, [r3, #14]
 6833 0d0a 07F54873 		add	r3, r7, #800
 6834 0d0e 1E22     		movs	r2, #30
 6835 0d10 DA73     		strb	r2, [r3, #15]
 6836 0d12 07F54873 		add	r3, r7, #800
 6837 0d16 1E22     		movs	r2, #30
 6838 0d18 1A74     		strb	r2, [r3, #16]
1068:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1069:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 6839              		.loc 1 1069 0
 6840 0d1a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6841 0d1e D7F88015 		ldr	r1, [r7, #1408]
 6842 0d22 1346     		mov	r3, r2
 6843 0d24 DB00     		lsls	r3, r3, #3
 6844 0d26 9B1A     		subs	r3, r3, r2
 6845 0d28 1B01     		lsls	r3, r3, #4
 6846 0d2a 0B44     		add	r3, r3, r1
 6847 0d2c 03F58873 		add	r3, r3, #272
 6848 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6849              		.loc 1 1064 0
 6850 0d32 1433     		adds	r3, r3, #20
 6851 0d34 DAB2     		uxtb	r2, r3
 6852 0d36 07F54873 		add	r3, r7, #800
 6853 0d3a 5A74     		strb	r2, [r3, #17]
 6854              		.loc 1 1069 0
 6855 0d3c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 168


 6856 0d40 D7F88015 		ldr	r1, [r7, #1408]
 6857 0d44 1346     		mov	r3, r2
 6858 0d46 DB00     		lsls	r3, r3, #3
 6859 0d48 9B1A     		subs	r3, r3, r2
 6860 0d4a 1B01     		lsls	r3, r3, #4
 6861 0d4c 0B44     		add	r3, r3, r1
 6862 0d4e 03F58873 		add	r3, r3, #272
 6863 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6864              		.loc 1 1064 0
 6865 0d54 1433     		adds	r3, r3, #20
 6866 0d56 DAB2     		uxtb	r2, r3
 6867 0d58 07F54873 		add	r3, r7, #800
 6868 0d5c 9A74     		strb	r2, [r3, #18]
 6869 0d5e 97F87D35 		ldrb	r3, [r7, #1405]
 6870 0d62 0A33     		adds	r3, r3, #10
 6871 0d64 DAB2     		uxtb	r2, r3
 6872 0d66 07F54873 		add	r3, r7, #800
 6873 0d6a DA74     		strb	r2, [r3, #19]
 6874 0d6c 97F87D35 		ldrb	r3, [r7, #1405]
 6875 0d70 0A33     		adds	r3, r3, #10
 6876 0d72 DAB2     		uxtb	r2, r3
 6877 0d74 07F54873 		add	r3, r7, #800
 6878 0d78 1A75     		strb	r2, [r3, #20]
 6879 0d7a 07F54873 		add	r3, r7, #800
 6880 0d7e 0022     		movs	r2, #0
 6881 0d80 5A75     		strb	r2, [r3, #21]
 6882 0d82 07F54873 		add	r3, r7, #800
 6883 0d86 4622     		movs	r2, #70
 6884 0d88 9A75     		strb	r2, [r3, #22]
 6885 0d8a 07F54873 		add	r3, r7, #800
 6886 0d8e 4622     		movs	r2, #70
 6887 0d90 DA75     		strb	r2, [r3, #23]
 6888 0d92 07F54873 		add	r3, r7, #800
 6889 0d96 4622     		movs	r2, #70
 6890 0d98 1A76     		strb	r2, [r3, #24]
 6891 0d9a 07F54873 		add	r3, r7, #800
 6892 0d9e 4622     		movs	r2, #70
 6893 0da0 5A76     		strb	r2, [r3, #25]
 6894 0da2 07F54873 		add	r3, r7, #800
 6895 0da6 1E22     		movs	r2, #30
 6896 0da8 9A76     		strb	r2, [r3, #26]
 6897 0daa 07F54873 		add	r3, r7, #800
 6898 0dae 0022     		movs	r2, #0
 6899 0db0 DA76     		strb	r2, [r3, #27]
 6900 0db2 07F54873 		add	r3, r7, #800
 6901 0db6 2822     		movs	r2, #40
 6902 0db8 1A77     		strb	r2, [r3, #28]
 6903 0dba 07F54873 		add	r3, r7, #800
 6904 0dbe 3222     		movs	r2, #50
 6905 0dc0 5A77     		strb	r2, [r3, #29]
 6906 0dc2 07F54873 		add	r3, r7, #800
 6907 0dc6 0022     		movs	r2, #0
 6908 0dc8 9A77     		strb	r2, [r3, #30]
 6909 0dca 07F54873 		add	r3, r7, #800
 6910 0dce 3222     		movs	r2, #50
 6911 0dd0 DA77     		strb	r2, [r3, #31]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 169


 6912 0dd2 07F54873 		add	r3, r7, #800
 6913 0dd6 2822     		movs	r2, #40
 6914 0dd8 83F82020 		strb	r2, [r3, #32]
 6915 0ddc 07F54873 		add	r3, r7, #800
 6916 0de0 2822     		movs	r2, #40
 6917 0de2 83F82120 		strb	r2, [r3, #33]
 6918 0de6 07F54873 		add	r3, r7, #800
 6919 0dea 0022     		movs	r2, #0
 6920 0dec 83F82220 		strb	r2, [r3, #34]
1070:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1071:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1072:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1073:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 6921              		.loc 1 1073 0
 6922 0df0 D7F88035 		ldr	r3, [r7, #1408]
 6923 0df4 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6924              		.loc 1 1064 0
 6925 0df8 3C33     		adds	r3, r3, #60
 6926 0dfa DAB2     		uxtb	r2, r3
 6927 0dfc 07F54873 		add	r3, r7, #800
 6928 0e00 83F82320 		strb	r2, [r3, #35]
 6929 0e04 97F87D35 		ldrb	r3, [r7, #1405]
 6930 0e08 0A33     		adds	r3, r3, #10
 6931 0e0a DAB2     		uxtb	r2, r3
 6932 0e0c 07F54873 		add	r3, r7, #800
 6933 0e10 83F82420 		strb	r2, [r3, #36]
 6934 0e14 97F87D35 		ldrb	r3, [r7, #1405]
 6935 0e18 0A33     		adds	r3, r3, #10
 6936 0e1a DAB2     		uxtb	r2, r3
 6937 0e1c 07F54873 		add	r3, r7, #800
 6938 0e20 83F82520 		strb	r2, [r3, #37]
 6939 0e24 97F87D35 		ldrb	r3, [r7, #1405]
 6940 0e28 0A33     		adds	r3, r3, #10
 6941 0e2a DAB2     		uxtb	r2, r3
 6942 0e2c 07F54873 		add	r3, r7, #800
 6943 0e30 83F82620 		strb	r2, [r3, #38]
 6944 0e34 97F87D35 		ldrb	r3, [r7, #1405]
 6945 0e38 0A33     		adds	r3, r3, #10
 6946 0e3a DAB2     		uxtb	r2, r3
 6947 0e3c 07F54873 		add	r3, r7, #800
 6948 0e40 83F82720 		strb	r2, [r3, #39]
1074:..\src/command_processing.c ****         
1075:..\src/command_processing.c ****         // GENERIC PARAMS
1076:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1077:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 6949              		.loc 1 1077 0
 6950 0e44 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6951 0e48 D7F88015 		ldr	r1, [r7, #1408]
 6952 0e4c 1346     		mov	r3, r2
 6953 0e4e DB00     		lsls	r3, r3, #3
 6954 0e50 9B1A     		subs	r3, r3, r2
 6955 0e52 1B01     		lsls	r3, r3, #4
 6956 0e54 0B44     		add	r3, r3, r1
 6957 0e56 03F58873 		add	r3, r3, #272
 6958 0e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 170


 6959              		.loc 1 1064 0
 6960 0e5c 1433     		adds	r3, r3, #20
 6961 0e5e DAB2     		uxtb	r2, r3
 6962 0e60 07F54873 		add	r3, r7, #800
 6963 0e64 83F82820 		strb	r2, [r3, #40]
 6964              		.loc 1 1077 0
 6965 0e68 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6966 0e6c D7F88015 		ldr	r1, [r7, #1408]
 6967 0e70 1346     		mov	r3, r2
 6968 0e72 DB00     		lsls	r3, r3, #3
 6969 0e74 9B1A     		subs	r3, r3, r2
 6970 0e76 1B01     		lsls	r3, r3, #4
 6971 0e78 0B44     		add	r3, r3, r1
 6972 0e7a 03F58873 		add	r3, r3, #272
 6973 0e7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6974              		.loc 1 1064 0
 6975 0e80 1433     		adds	r3, r3, #20
 6976 0e82 DAB2     		uxtb	r2, r3
 6977 0e84 07F54873 		add	r3, r7, #800
 6978 0e88 83F82920 		strb	r2, [r3, #41]
 6979 0e8c 07F54873 		add	r3, r7, #800
 6980 0e90 0022     		movs	r2, #0
 6981 0e92 83F82A20 		strb	r2, [r3, #42]
 6982 0e96 97F87C35 		ldrb	r3, [r7, #1404]
 6983 0e9a 0A33     		adds	r3, r3, #10
 6984 0e9c DAB2     		uxtb	r2, r3
 6985 0e9e 07F54873 		add	r3, r7, #800
 6986 0ea2 83F82B20 		strb	r2, [r3, #43]
 6987 0ea6 97F87C35 		ldrb	r3, [r7, #1404]
 6988 0eaa 0A33     		adds	r3, r3, #10
 6989 0eac DAB2     		uxtb	r2, r3
 6990 0eae 07F54873 		add	r3, r7, #800
 6991 0eb2 83F82C20 		strb	r2, [r3, #44]
 6992 0eb6 97F87C35 		ldrb	r3, [r7, #1404]
 6993 0eba 0A33     		adds	r3, r3, #10
 6994 0ebc DAB2     		uxtb	r2, r3
 6995 0ebe 07F54873 		add	r3, r7, #800
 6996 0ec2 83F82D20 		strb	r2, [r3, #45]
 6997 0ec6 97F87C35 		ldrb	r3, [r7, #1404]
 6998 0eca 0A33     		adds	r3, r3, #10
 6999 0ecc DAB2     		uxtb	r2, r3
 7000 0ece 07F54873 		add	r3, r7, #800
 7001 0ed2 83F82E20 		strb	r2, [r3, #46]
 7002 0ed6 97F87C35 		ldrb	r3, [r7, #1404]
 7003 0eda 0A33     		adds	r3, r3, #10
 7004 0edc DAB2     		uxtb	r2, r3
 7005 0ede 07F54873 		add	r3, r7, #800
 7006 0ee2 83F82F20 		strb	r2, [r3, #47]
1078:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1079:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 7007              		.loc 1 1079 0
 7008 0ee6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7009 0eea D7F88015 		ldr	r1, [r7, #1408]
 7010 0eee 1346     		mov	r3, r2
 7011 0ef0 DB00     		lsls	r3, r3, #3
 7012 0ef2 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 171


 7013 0ef4 1B01     		lsls	r3, r3, #4
 7014 0ef6 0B44     		add	r3, r3, r1
 7015 0ef8 03F58873 		add	r3, r3, #272
 7016 0efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7017              		.loc 1 1064 0
 7018 0efe 1433     		adds	r3, r3, #20
 7019 0f00 DAB2     		uxtb	r2, r3
 7020 0f02 07F54873 		add	r3, r7, #800
 7021 0f06 83F83020 		strb	r2, [r3, #48]
 7022              		.loc 1 1079 0
 7023 0f0a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7024 0f0e D7F88015 		ldr	r1, [r7, #1408]
 7025 0f12 1346     		mov	r3, r2
 7026 0f14 DB00     		lsls	r3, r3, #3
 7027 0f16 9B1A     		subs	r3, r3, r2
 7028 0f18 1B01     		lsls	r3, r3, #4
 7029 0f1a 0B44     		add	r3, r3, r1
 7030 0f1c 03F58873 		add	r3, r3, #272
 7031 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7032              		.loc 1 1064 0
 7033 0f22 1433     		adds	r3, r3, #20
 7034 0f24 DAB2     		uxtb	r2, r3
 7035 0f26 07F54873 		add	r3, r7, #800
 7036 0f2a 83F83120 		strb	r2, [r3, #49]
 7037              		.loc 1 1079 0
 7038 0f2e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7039 0f32 D7F88015 		ldr	r1, [r7, #1408]
 7040 0f36 1346     		mov	r3, r2
 7041 0f38 DB00     		lsls	r3, r3, #3
 7042 0f3a 9B1A     		subs	r3, r3, r2
 7043 0f3c 1B01     		lsls	r3, r3, #4
 7044 0f3e 0B44     		add	r3, r3, r1
 7045 0f40 03F58873 		add	r3, r3, #272
 7046 0f44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7047              		.loc 1 1064 0
 7048 0f46 1433     		adds	r3, r3, #20
 7049 0f48 DAB2     		uxtb	r2, r3
 7050 0f4a 07F54873 		add	r3, r7, #800
 7051 0f4e 83F83220 		strb	r2, [r3, #50]
 7052 0f52 97F87C35 		ldrb	r3, [r7, #1404]
 7053 0f56 0A33     		adds	r3, r3, #10
 7054 0f58 DAB2     		uxtb	r2, r3
 7055 0f5a 07F54873 		add	r3, r7, #800
 7056 0f5e 83F83320 		strb	r2, [r3, #51]
 7057 0f62 97F87C35 		ldrb	r3, [r7, #1404]
 7058 0f66 0A33     		adds	r3, r3, #10
 7059 0f68 DAB2     		uxtb	r2, r3
 7060 0f6a 07F54873 		add	r3, r7, #800
 7061 0f6e 83F83420 		strb	r2, [r3, #52]
 7062 0f72 97F87C35 		ldrb	r3, [r7, #1404]
 7063 0f76 0A33     		adds	r3, r3, #10
 7064 0f78 DAB2     		uxtb	r2, r3
 7065 0f7a 07F54873 		add	r3, r7, #800
 7066 0f7e 83F83520 		strb	r2, [r3, #53]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 172


 7067 0f82 97F87C35 		ldrb	r3, [r7, #1404]
 7068 0f86 0A33     		adds	r3, r3, #10
 7069 0f88 DAB2     		uxtb	r2, r3
 7070 0f8a 07F54873 		add	r3, r7, #800
 7071 0f8e 83F83620 		strb	r2, [r3, #54]
1080:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7072              		.loc 1 1080 0
 7073 0f92 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7074 0f96 D7F88015 		ldr	r1, [r7, #1408]
 7075 0f9a 1346     		mov	r3, r2
 7076 0f9c DB00     		lsls	r3, r3, #3
 7077 0f9e 9B1A     		subs	r3, r3, r2
 7078 0fa0 1B01     		lsls	r3, r3, #4
 7079 0fa2 0B44     		add	r3, r3, r1
 7080 0fa4 03F58873 		add	r3, r3, #272
 7081 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7082              		.loc 1 1064 0
 7083 0faa 1433     		adds	r3, r3, #20
 7084 0fac DAB2     		uxtb	r2, r3
 7085 0fae 07F54873 		add	r3, r7, #800
 7086 0fb2 83F83720 		strb	r2, [r3, #55]
1081:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 7087              		.loc 1 1081 0
 7088 0fb6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7089 0fba D7F88015 		ldr	r1, [r7, #1408]
 7090 0fbe 1346     		mov	r3, r2
 7091 0fc0 DB00     		lsls	r3, r3, #3
 7092 0fc2 9B1A     		subs	r3, r3, r2
 7093 0fc4 1B01     		lsls	r3, r3, #4
 7094 0fc6 0B44     		add	r3, r3, r1
 7095 0fc8 03F58873 		add	r3, r3, #272
 7096 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7097              		.loc 1 1064 0
 7098 0fce 1433     		adds	r3, r3, #20
 7099 0fd0 DAB2     		uxtb	r2, r3
 7100 0fd2 07F54873 		add	r3, r7, #800
 7101 0fd6 83F83820 		strb	r2, [r3, #56]
 7102 0fda 97F87C35 		ldrb	r3, [r7, #1404]
 7103 0fde 0A33     		adds	r3, r3, #10
 7104 0fe0 DAB2     		uxtb	r2, r3
 7105 0fe2 07F54873 		add	r3, r7, #800
 7106 0fe6 83F83920 		strb	r2, [r3, #57]
 7107 0fea 97F87C35 		ldrb	r3, [r7, #1404]
 7108 0fee 0A33     		adds	r3, r3, #10
 7109 0ff0 DAB2     		uxtb	r2, r3
 7110 0ff2 07F54873 		add	r3, r7, #800
 7111 0ff6 83F83A20 		strb	r2, [r3, #58]
 7112 0ffa 97F87C35 		ldrb	r3, [r7, #1404]
 7113 0ffe 0A33     		adds	r3, r3, #10
 7114 1000 DAB2     		uxtb	r2, r3
 7115 1002 07F54873 		add	r3, r7, #800
 7116 1006 83F83B20 		strb	r2, [r3, #59]
 7117 100a 97F87C35 		ldrb	r3, [r7, #1404]
 7118 100e 0A33     		adds	r3, r3, #10
 7119 1010 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 173


 7120 1012 07F54873 		add	r3, r7, #800
 7121 1016 83F83C20 		strb	r2, [r3, #60]
 7122 101a 97F87C35 		ldrb	r3, [r7, #1404]
 7123 101e 0A33     		adds	r3, r3, #10
 7124 1020 DAB2     		uxtb	r2, r3
 7125 1022 07F54873 		add	r3, r7, #800
 7126 1026 83F83D20 		strb	r2, [r3, #61]
 7127 102a 97F87C35 		ldrb	r3, [r7, #1404]
 7128 102e 0A33     		adds	r3, r3, #10
 7129 1030 DAB2     		uxtb	r2, r3
 7130 1032 07F54873 		add	r3, r7, #800
 7131 1036 83F83E20 		strb	r2, [r3, #62]
1082:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7132              		.loc 1 1082 0
 7133 103a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7134 103e D7F88015 		ldr	r1, [r7, #1408]
 7135 1042 1346     		mov	r3, r2
 7136 1044 DB00     		lsls	r3, r3, #3
 7137 1046 9B1A     		subs	r3, r3, r2
 7138 1048 1B01     		lsls	r3, r3, #4
 7139 104a 0B44     		add	r3, r3, r1
 7140 104c 03F58873 		add	r3, r3, #272
 7141 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7142              		.loc 1 1064 0
 7143 1052 1433     		adds	r3, r3, #20
 7144 1054 DAB2     		uxtb	r2, r3
 7145 1056 07F54873 		add	r3, r7, #800
 7146 105a 83F83F20 		strb	r2, [r3, #63]
1083:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 7147              		.loc 1 1083 0
 7148 105e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7149 1062 D7F88015 		ldr	r1, [r7, #1408]
 7150 1066 1346     		mov	r3, r2
 7151 1068 DB00     		lsls	r3, r3, #3
 7152 106a 9B1A     		subs	r3, r3, r2
 7153 106c 1B01     		lsls	r3, r3, #4
 7154 106e 0B44     		add	r3, r3, r1
 7155 1070 03F58873 		add	r3, r3, #272
 7156 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7157              		.loc 1 1064 0
 7158 1076 1433     		adds	r3, r3, #20
 7159 1078 DAB2     		uxtb	r2, r3
 7160 107a 07F54873 		add	r3, r7, #800
 7161 107e 83F84020 		strb	r2, [r3, #64]
 7162 1082 07F54873 		add	r3, r7, #800
 7163 1086 1422     		movs	r2, #20
 7164 1088 83F84120 		strb	r2, [r3, #65]
 7165 108c 07F54873 		add	r3, r7, #800
 7166 1090 1522     		movs	r2, #21
 7167 1092 83F84220 		strb	r2, [r3, #66]
 7168 1096 07F54873 		add	r3, r7, #800
 7169 109a 3222     		movs	r2, #50
 7170 109c 83F84320 		strb	r2, [r3, #67]
 7171 10a0 07F54873 		add	r3, r7, #800
 7172 10a4 3222     		movs	r2, #50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 174


 7173 10a6 83F84420 		strb	r2, [r3, #68]
 7174 10aa 07F54873 		add	r3, r7, #800
 7175 10ae 3222     		movs	r2, #50
 7176 10b0 83F84520 		strb	r2, [r3, #69]
 7177 10b4 07F54873 		add	r3, r7, #800
 7178 10b8 3222     		movs	r2, #50
 7179 10ba 83F84620 		strb	r2, [r3, #70]
 7180 10be 07F54873 		add	r3, r7, #800
 7181 10c2 6E22     		movs	r2, #110
 7182 10c4 83F84720 		strb	r2, [r3, #71]
 7183 10c8 07F54873 		add	r3, r7, #800
 7184 10cc 6E22     		movs	r2, #110
 7185 10ce 83F84820 		strb	r2, [r3, #72]
 7186 10d2 07F54873 		add	r3, r7, #800
 7187 10d6 6E22     		movs	r2, #110
 7188 10d8 83F84920 		strb	r2, [r3, #73]
 7189 10dc 07F54873 		add	r3, r7, #800
 7190 10e0 0022     		movs	r2, #0
 7191 10e2 83F84A20 		strb	r2, [r3, #74]
 7192 10e6 07F54873 		add	r3, r7, #800
 7193 10ea 6422     		movs	r2, #100
 7194 10ec 83F84B20 		strb	r2, [r3, #75]
 7195 10f0 07F54873 		add	r3, r7, #800
 7196 10f4 6422     		movs	r2, #100
 7197 10f6 83F84C20 		strb	r2, [r3, #76]
 7198 10fa 07F54873 		add	r3, r7, #800
 7199 10fe 6422     		movs	r2, #100
 7200 1100 83F84D20 		strb	r2, [r3, #77]
 7201 1104 07F54873 		add	r3, r7, #800
 7202 1108 5022     		movs	r2, #80
 7203 110a 83F84E20 		strb	r2, [r3, #78]
 7204 110e 07F54873 		add	r3, r7, #800
 7205 1112 5022     		movs	r2, #80
 7206 1114 83F84F20 		strb	r2, [r3, #79]
 7207 1118 07F54873 		add	r3, r7, #800
 7208 111c 5A22     		movs	r2, #90
 7209 111e 83F85020 		strb	r2, [r3, #80]
 7210 1122 07F54873 		add	r3, r7, #800
 7211 1126 5A22     		movs	r2, #90
 7212 1128 83F85120 		strb	r2, [r3, #81]
 7213 112c 07F54873 		add	r3, r7, #800
 7214 1130 5A22     		movs	r2, #90
 7215 1132 83F85220 		strb	r2, [r3, #82]
1084:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC,
1085:..\src/command_processing.c ****         ST_JOY_SPEC, ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, 
1086:..\src/command_processing.c ****         ST_WR_SPEC,
1087:..\src/command_processing.c ****         
1088:..\src/command_processing.c ****                     ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC,
1089:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
1090:..\src/command_processing.c ****         
1091:..\src/command_processing.c ****     };
1092:..\src/command_processing.c ****     
1093:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 7216              		.loc 1 1093 0
 7217 1136 07F5EA73 		add	r3, r7, #468
 7218 113a CD4A     		ldr	r2, .L375
 7219 113c 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 175


 7220 113e 1146     		mov	r1, r2
 7221 1140 4FF4A673 		mov	r3, #332
 7222 1144 1A46     		mov	r2, r3
 7223 1146 FFF7FEFF 		bl	memcpy
1094:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1095:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1096:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1097:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1098:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1099:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1100:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1101:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1102:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1103:..\src/command_processing.c ****         
1104:..\src/command_processing.c ****         // GENERIC PARAMS
1105:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1106:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1107:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1108:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1109:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1110:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1111:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1112:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1113:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Record EMG on SD card:", "72 -
1114:..\src/command_processing.c ****         "73 - Joystick threshold:", "74 - Joystick gains:", "75 - Device type:", "76 - EMG FSM act.
1115:..\src/command_processing.c ****         "77 - Fast act.thresholds:",
1116:..\src/command_processing.c ****         
1117:..\src/command_processing.c ****                                      "78 - Wrist direction:", "79 - Slave communication active:", "
1118:..\src/command_processing.c ****         "81 - Maximum slave residual current:", "82 - Maximum pressure feedback (kPa):", "83 - Prop
1119:..\src/command_processing.c ****     };
1120:..\src/command_processing.c **** 
1121:..\src/command_processing.c ****     //Parameters menu
1122:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 7224              		.loc 1 1122 0
 7225 114a 07F5AE73 		add	r3, r7, #348
 7226 114e 0022     		movs	r2, #0
 7227 1150 1A60     		str	r2, [r3]
 7228 1152 0433     		adds	r3, r3, #4
 7229 1154 7222     		movs	r2, #114
 7230 1156 0021     		movs	r1, #0
 7231 1158 1846     		mov	r0, r3
 7232 115a FFF7FEFF 		bl	memset
1123:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 7233              		.loc 1 1123 0
 7234 115e 07F5AE70 		add	r0, r7, #348
 7235 1162 6423     		movs	r3, #100
 7236 1164 0A22     		movs	r2, #10
 7237 1166 C349     		ldr	r1, .L375+4
 7238 1168 FFF7FEFF 		bl	sprintf
1124:..\src/command_processing.c **** 
1125:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 7239              		.loc 1 1125 0
 7240 116c 07F59273 		add	r3, r7, #292
 7241 1170 0022     		movs	r2, #0
 7242 1172 1A60     		str	r2, [r3]
 7243 1174 0433     		adds	r3, r3, #4
 7244 1176 3422     		movs	r2, #52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 176


 7245 1178 0021     		movs	r1, #0
 7246 117a 1846     		mov	r0, r3
 7247 117c FFF7FEFF 		bl	memset
1126:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 7248              		.loc 1 1126 0
 7249 1180 D7F88035 		ldr	r3, [r7, #1408]
 7250 1184 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 7251 1188 042B     		cmp	r3, #4
 7252 118a 10D1     		bne	.L307
1127:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 7253              		.loc 1 1127 0
 7254 118c 07F59273 		add	r3, r7, #292
 7255 1190 B94A     		ldr	r2, .L375+8
 7256 1192 1C46     		mov	r4, r3
 7257 1194 1546     		mov	r5, r2
 7258 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7259 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7260 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7261 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7262 119e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7263 11a0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7264 11a2 95E80300 		ldmia	r5, {r0, r1}
 7265 11a6 2060     		str	r0, [r4]
 7266 11a8 0434     		adds	r4, r4, #4
 7267 11aa 2170     		strb	r1, [r4]
 7268 11ac 0FE0     		b	.L308
 7269              	.L307:
1128:..\src/command_processing.c ****     }
1129:..\src/command_processing.c ****     else {
1130:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist,Slow:hand\n1 -> Slow:wrist,Fast:hand\n")
 7270              		.loc 1 1130 0
 7271 11ae 07F59273 		add	r3, r7, #292
 7272 11b2 B24A     		ldr	r2, .L375+12
 7273 11b4 1C46     		mov	r4, r3
 7274 11b6 1546     		mov	r5, r2
 7275 11b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7276 11ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7277 11bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7278 11be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7279 11c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7280 11c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7281 11c4 95E80300 		ldmia	r5, {r0, r1}
 7282 11c8 2060     		str	r0, [r4]
 7283 11ca 0434     		adds	r4, r4, #4
 7284 11cc 2170     		strb	r1, [r4]
 7285              	.L308:
1131:..\src/command_processing.c ****     }
1132:..\src/command_processing.c ****     
1133:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 7286              		.loc 1 1133 0
 7287 11ce 07F1F403 		add	r3, r7, #244
 7288 11d2 AB4A     		ldr	r2, .L375+16
 7289 11d4 1A60     		str	r2, [r3]
 7290 11d6 07F1F403 		add	r3, r7, #244
 7291 11da AA4A     		ldr	r2, .L375+20
 7292 11dc 5A60     		str	r2, [r3, #4]
 7293 11de 07F1F403 		add	r3, r7, #244
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 177


 7294 11e2 A94A     		ldr	r2, .L375+24
 7295 11e4 9A60     		str	r2, [r3, #8]
 7296 11e6 07F1F403 		add	r3, r7, #244
 7297 11ea A84A     		ldr	r2, .L375+28
 7298 11ec DA60     		str	r2, [r3, #12]
 7299 11ee 07F1F403 		add	r3, r7, #244
 7300 11f2 A74A     		ldr	r2, .L375+32
 7301 11f4 1A61     		str	r2, [r3, #16]
 7302 11f6 07F1F403 		add	r3, r7, #244
 7303 11fa A64A     		ldr	r2, .L375+36
 7304 11fc 5A61     		str	r2, [r3, #20]
 7305 11fe 07F1F403 		add	r3, r7, #244
 7306 1202 07F5AE72 		add	r2, r7, #348
 7307 1206 9A61     		str	r2, [r3, #24]
 7308 1208 07F1F403 		add	r3, r7, #244
 7309 120c A24A     		ldr	r2, .L375+40
 7310 120e DA61     		str	r2, [r3, #28]
 7311 1210 07F1F403 		add	r3, r7, #244
 7312 1214 A14A     		ldr	r2, .L375+44
 7313 1216 1A62     		str	r2, [r3, #32]
 7314 1218 07F1F403 		add	r3, r7, #244
 7315 121c A04A     		ldr	r2, .L375+48
 7316 121e 5A62     		str	r2, [r3, #36]
 7317 1220 07F1F403 		add	r3, r7, #244
 7318 1224 07F59272 		add	r2, r7, #292
 7319 1228 9A62     		str	r2, [r3, #40]
 7320 122a 07F1F403 		add	r3, r7, #244
 7321 122e 9D4A     		ldr	r2, .L375+52
 7322 1230 DA62     		str	r2, [r3, #44]
1134:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1135:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1136:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1137:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1138:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1139:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1140:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1141:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> R01\nThe board will reset\n",                         
1142:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\n2 -> ESC (Brushless)\nThe board will r
1143:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1144:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1145:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1146:..\src/command_processing.c ****     };   
1147:..\src/command_processing.c ****     
1148:..\src/command_processing.c ****     uint8 NUM_MENU[32] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 7323              		.loc 1 1148 0
 7324 1232 07F1D403 		add	r3, r7, #212
 7325 1236 9C4A     		ldr	r2, .L375+56
 7326 1238 1C46     		mov	r4, r3
 7327 123a 1546     		mov	r5, r2
 7328 123c 2868     		ldr	r0, [r5]	@ unaligned
 7329 123e 6968     		ldr	r1, [r5, #4]	@ unaligned
 7330 1240 AA68     		ldr	r2, [r5, #8]	@ unaligned
 7331 1242 EB68     		ldr	r3, [r5, #12]	@ unaligned
 7332 1244 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7333 1246 2869     		ldr	r0, [r5, #16]	@ unaligned
 7334 1248 6969     		ldr	r1, [r5, #20]	@ unaligned
 7335 124a AA69     		ldr	r2, [r5, #24]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 178


 7336 124c EB69     		ldr	r3, [r5, #28]	@ unaligned
 7337 124e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
1149:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 7338              		.loc 1 1149 0
 7339 1250 07F1C803 		add	r3, r7, #200
 7340 1254 954A     		ldr	r2, .L375+60
 7341 1256 1068     		ldr	r0, [r2]	@ unaligned
 7342 1258 5168     		ldr	r1, [r2, #4]	@ unaligned
 7343 125a 03C3     		stmia	r3!, {r0, r1}
 7344 125c 127A     		ldrb	r2, [r2, #8]
 7345 125e 1A70     		strb	r2, [r3]
1150:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 7346              		.loc 1 1150 0
 7347 1260 07F1B403 		add	r3, r7, #180
 7348 1264 924A     		ldr	r2, .L375+64
 7349 1266 1C46     		mov	r4, r3
 7350 1268 1546     		mov	r5, r2
 7351 126a 2868     		ldr	r0, [r5]	@ unaligned
 7352 126c 6968     		ldr	r1, [r5, #4]	@ unaligned
 7353 126e AA68     		ldr	r2, [r5, #8]	@ unaligned
 7354 1270 EB68     		ldr	r3, [r5, #12]	@ unaligned
 7355 1272 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7356 1274 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 7357 1276 2380     		strh	r3, [r4]	@ unaligned
1151:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 7358              		.loc 1 1151 0
 7359 1278 2323     		movs	r3, #35
 7360 127a 87F87B35 		strb	r3, [r7, #1403]
1152:..\src/command_processing.c **** 
1153:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1154:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1155:..\src/command_processing.c ****     
1156:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1157:..\src/command_processing.c **** 
1158:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1159:..\src/command_processing.c ****     
1160:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1161:..\src/command_processing.c ****     j = 0;
 7361              		.loc 1 1161 0
 7362 127e 0023     		movs	r3, #0
 7363 1280 87F88635 		strb	r3, [r7, #1414]
1162:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 7364              		.loc 1 1162 0
 7365 1284 0023     		movs	r3, #0
 7366 1286 87F88735 		strb	r3, [r7, #1415]
 7367 128a 21E0     		b	.L309
 7368              	.L312:
1163:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7369              		.loc 1 1163 0
 7370 128c 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7371 1290 07F1C802 		add	r2, r7, #200
 7372 1294 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7373 1296 1A46     		mov	r2, r3
 7374 1298 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7375 129c 0133     		adds	r3, r3, #1
 7376 129e 9A42     		cmp	r2, r3
 7377 12a0 0BD1     		bne	.L310
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 179


1164:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 7378              		.loc 1 1164 0
 7379 12a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7380 12a6 07F16002 		add	r2, r7, #96
 7381 12aa 0121     		movs	r1, #1
 7382 12ac D154     		strb	r1, [r2, r3]
1165:..\src/command_processing.c ****             j++;
 7383              		.loc 1 1165 0
 7384 12ae 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7385 12b2 0133     		adds	r3, r3, #1
 7386 12b4 87F88635 		strb	r3, [r7, #1414]
 7387 12b8 05E0     		b	.L311
 7388              	.L310:
1166:..\src/command_processing.c ****         }
1167:..\src/command_processing.c ****         else {
1168:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 7389              		.loc 1 1168 0
 7390 12ba 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7391 12be 07F16002 		add	r2, r7, #96
 7392 12c2 0021     		movs	r1, #0
 7393 12c4 D154     		strb	r1, [r2, r3]
 7394              	.L311:
1162:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7395              		.loc 1 1162 0 discriminator 2
 7396 12c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7397 12ca 0133     		adds	r3, r3, #1
 7398 12cc 87F88735 		strb	r3, [r7, #1415]
 7399              	.L309:
1162:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7400              		.loc 1 1162 0 is_stmt 0 discriminator 1
 7401 12d0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7402 12d4 522B     		cmp	r3, #82
 7403 12d6 D9D9     		bls	.L312
1169:..\src/command_processing.c ****         }
1170:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1171:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1172:..\src/command_processing.c ****     j = 0;
 7404              		.loc 1 1172 0 is_stmt 1
 7405 12d8 0023     		movs	r3, #0
 7406 12da 87F88635 		strb	r3, [r7, #1414]
1173:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 7407              		.loc 1 1173 0
 7408 12de 0023     		movs	r3, #0
 7409 12e0 87F88735 		strb	r3, [r7, #1415]
 7410 12e4 21E0     		b	.L313
 7411              	.L316:
1174:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7412              		.loc 1 1174 0
 7413 12e6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7414 12ea 07F1B402 		add	r2, r7, #180
 7415 12ee D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7416 12f0 1A46     		mov	r2, r3
 7417 12f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7418 12f6 0133     		adds	r3, r3, #1
 7419 12f8 9A42     		cmp	r2, r3
 7420 12fa 0BD1     		bne	.L314
1175:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 180


 7421              		.loc 1 1175 0
 7422 12fc 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7423 1300 07F10C02 		add	r2, r7, #12
 7424 1304 0121     		movs	r1, #1
 7425 1306 D154     		strb	r1, [r2, r3]
1176:..\src/command_processing.c ****             j++;
 7426              		.loc 1 1176 0
 7427 1308 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7428 130c 0133     		adds	r3, r3, #1
 7429 130e 87F88635 		strb	r3, [r7, #1414]
 7430 1312 05E0     		b	.L315
 7431              	.L314:
1177:..\src/command_processing.c ****         }
1178:..\src/command_processing.c ****         else {
1179:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 7432              		.loc 1 1179 0
 7433 1314 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7434 1318 07F10C02 		add	r2, r7, #12
 7435 131c 0021     		movs	r1, #0
 7436 131e D154     		strb	r1, [r2, r3]
 7437              	.L315:
1173:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7438              		.loc 1 1173 0 discriminator 2
 7439 1320 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7440 1324 0133     		adds	r3, r3, #1
 7441 1326 87F88735 		strb	r3, [r7, #1415]
 7442              	.L313:
1173:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7443              		.loc 1 1173 0 is_stmt 0 discriminator 1
 7444 132a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7445 132e 522B     		cmp	r3, #82
 7446 1330 D9D9     		bls	.L316
1180:..\src/command_processing.c ****         }
1181:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1182:..\src/command_processing.c ****         
1183:..\src/command_processing.c ****     if (!index) {
 7447              		.loc 1 1183 0 is_stmt 1
 7448 1332 BB1D     		adds	r3, r7, #6
 7449 1334 1B88     		ldrh	r3, [r3]
 7450 1336 002B     		cmp	r3, #0
 7451 1338 17D1     		bne	.L317
1184:..\src/command_processing.c ****         // Get parameters list with relative types
1185:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 7452              		.loc 1 1185 0
 7453 133a 07F54874 		add	r4, r7, #800
 7454 133e 07F55D72 		add	r2, r7, #884
 7455 1342 07F57271 		add	r1, r7, #968
 7456 1346 07F21C40 		addw	r0, r7, #1052
 7457 134a 07F1F403 		add	r3, r7, #244
 7458 134e 0393     		str	r3, [sp, #12]
 7459 1350 07F16003 		add	r3, r7, #96
 7460 1354 0293     		str	r3, [sp, #8]
 7461 1356 07F5EA73 		add	r3, r7, #468
 7462 135a 0193     		str	r3, [sp, #4]
 7463 135c 07F1D403 		add	r3, r7, #212
 7464 1360 0093     		str	r3, [sp]
 7465 1362 2346     		mov	r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 181


 7466 1364 FFF7FEFF 		bl	get_param_list
1186:..\src/command_processing.c ****     }
1187:..\src/command_processing.c ****     else {
1188:..\src/command_processing.c ****         // Set specific parameter        
1189:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1190:..\src/command_processing.c ****         
1191:..\src/command_processing.c ****         // Find size of data
1192:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1193:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1194:..\src/command_processing.c ****                 sod = 1; break;
1195:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1196:..\src/command_processing.c ****                 sod = 2; break;
1197:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1198:..\src/command_processing.c ****                 sod = 4; break;
1199:..\src/command_processing.c ****         }   
1200:..\src/command_processing.c ****             
1201:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1202:..\src/command_processing.c ****             // Use default specifications for param setting
1203:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1204:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1205:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1206:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1207:..\src/command_processing.c ****                     }
1208:..\src/command_processing.c ****                     break;                
1209:..\src/command_processing.c ****                 case TYPE_STRING:
1210:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1212:..\src/command_processing.c ****                     }
1213:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1214:..\src/command_processing.c ****                 break; 
1215:..\src/command_processing.c ****                 case TYPE_INT8:
1216:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1217:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1218:..\src/command_processing.c ****                     }
1219:..\src/command_processing.c ****                     break;                    
1220:..\src/command_processing.c ****                 case TYPE_INT16:
1221:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1222:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1223:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1224:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1225:..\src/command_processing.c ****                         }
1226:..\src/command_processing.c ****                     }                   
1227:..\src/command_processing.c ****                     break;
1228:..\src/command_processing.c ****                 case TYPE_UINT16:
1229:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1230:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1231:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1232:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1233:..\src/command_processing.c ****                         }
1234:..\src/command_processing.c ****                     }
1235:..\src/command_processing.c ****                     break;
1236:..\src/command_processing.c ****                 case TYPE_INT32:
1237:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1238:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1239:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1240:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1241:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 182


1242:..\src/command_processing.c ****                     }
1243:..\src/command_processing.c ****                     break;
1244:..\src/command_processing.c ****                 case TYPE_UINT32:
1245:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1246:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1247:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1248:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1249:..\src/command_processing.c ****                         }
1250:..\src/command_processing.c ****                     }
1251:..\src/command_processing.c ****                     break;
1252:..\src/command_processing.c ****                 case TYPE_FLOAT:
1253:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1254:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1255:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1256:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1257:..\src/command_processing.c ****                         }
1258:..\src/command_processing.c ****                     }
1259:..\src/command_processing.c ****                     break;
1260:..\src/command_processing.c ****                 default:
1261:..\src/command_processing.c ****                     break;
1262:..\src/command_processing.c ****             }
1263:..\src/command_processing.c ****         }
1264:..\src/command_processing.c ****         else {  
1265:..\src/command_processing.c ****             // Use custom specifications for param setting
1266:..\src/command_processing.c ****             set_custom_param(index);
1267:..\src/command_processing.c ****         }
1268:..\src/command_processing.c ****         
1269:..\src/command_processing.c ****         // Store param also in user_emg structure
1270:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1271:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1272:..\src/command_processing.c ****         }
1273:..\src/command_processing.c ****         
1274:..\src/command_processing.c ****         // Perform chip reset if needed
1275:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1276:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1277:..\src/command_processing.c ****             do {
1278:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1279:..\src/command_processing.c ****                 idx++;
1280:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1281:..\src/command_processing.c ****             
1282:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1283:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1284:..\src/command_processing.c ****             }   
1285:..\src/command_processing.c ****         }
1286:..\src/command_processing.c ****     }
1287:..\src/command_processing.c **** } 
 7467              		.loc 1 1287 0
 7468 1368 E0E2     		b	.L368
 7469              	.L317:
1189:..\src/command_processing.c ****         
 7470              		.loc 1 1189 0
 7471 136a BB1D     		adds	r3, r7, #6
 7472 136c 1B88     		ldrh	r3, [r3]	@ movhi
 7473 136e DBB2     		uxtb	r3, r3
 7474 1370 013B     		subs	r3, r3, #1
 7475 1372 87F87A35 		strb	r3, [r7, #1402]
1192:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 183


 7476              		.loc 1 1192 0
 7477 1376 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7478 137a 07F57272 		add	r2, r7, #968
 7479 137e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7480 1380 092B     		cmp	r3, #9
 7481 1382 23D8     		bhi	.L319
 7482 1384 01A2     		adr	r2, .L321
 7483 1386 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7484 138a 00BF     		.p2align 2
 7485              	.L321:
 7486 138c B5130000 		.word	.L320+1
 7487 1390 B5130000 		.word	.L320+1
 7488 1394 B5130000 		.word	.L320+1
 7489 1398 BD130000 		.word	.L322+1
 7490 139c BD130000 		.word	.L322+1
 7491 13a0 C5130000 		.word	.L323+1
 7492 13a4 C5130000 		.word	.L323+1
 7493 13a8 C5130000 		.word	.L323+1
 7494 13ac CD130000 		.word	.L319+1
 7495 13b0 B5130000 		.word	.L320+1
 7496              		.p2align 1
 7497              	.L320:
1194:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 7498              		.loc 1 1194 0
 7499 13b4 0123     		movs	r3, #1
 7500 13b6 87F88535 		strb	r3, [r7, #1413]
 7501 13ba 07E0     		b	.L319
 7502              	.L322:
1196:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 7503              		.loc 1 1196 0
 7504 13bc 0223     		movs	r3, #2
 7505 13be 87F88535 		strb	r3, [r7, #1413]
 7506 13c2 03E0     		b	.L319
 7507              	.L323:
1198:..\src/command_processing.c ****         }   
 7508              		.loc 1 1198 0
 7509 13c4 0423     		movs	r3, #4
 7510 13c6 87F88535 		strb	r3, [r7, #1413]
 7511 13ca 00BF     		nop
 7512              	.L319:
1201:..\src/command_processing.c ****             // Use default specifications for param setting
 7513              		.loc 1 1201 0
 7514 13cc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7515 13d0 07F10C02 		add	r2, r7, #12
 7516 13d4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7517 13d6 002B     		cmp	r3, #0
 7518 13d8 40F03B82 		bne	.L324
1203:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 7519              		.loc 1 1203 0
 7520 13dc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7521 13e0 07F57272 		add	r2, r7, #968
 7522 13e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7523 13e6 092B     		cmp	r3, #9
 7524 13e8 00F23C82 		bhi	.L367
 7525 13ec 01A2     		adr	r2, .L327
 7526 13ee 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7527 13f2 00BF     		.p2align 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 184


 7528              	.L327:
 7529 13f4 1D140000 		.word	.L326+1
 7530 13f8 1B150000 		.word	.L328+1
 7531 13fc 1D140000 		.word	.L326+1
 7532 1400 6D150000 		.word	.L329+1
 7533 1404 03160000 		.word	.L330+1
 7534 1408 97160000 		.word	.L331+1
 7535 140c 2B170000 		.word	.L332+1
 7536 1410 BF170000 		.word	.L333+1
 7537 1414 65180000 		.word	.L367+1
 7538 1418 69140000 		.word	.L334+1
 7539              		.p2align 1
 7540              	.L326:
1205:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7541              		.loc 1 1205 0
 7542 141c 0023     		movs	r3, #0
 7543 141e 87F88735 		strb	r3, [r7, #1415]
 7544 1422 17E0     		b	.L335
 7545              	.L336:
1206:..\src/command_processing.c ****                     }
 7546              		.loc 1 1206 0 discriminator 3
 7547 1424 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7548 1428 07F21C43 		addw	r3, r7, #1052
 7549 142c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7550 1430 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7551 1434 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7552 1438 01FB02F2 		mul	r2, r1, r2
 7553 143c 1344     		add	r3, r3, r2
 7554 143e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7555 1442 0332     		adds	r2, r2, #3
 7556 1444 1B49     		ldr	r1, .L375+68
 7557 1446 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7558 1448 1A70     		strb	r2, [r3]
1205:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7559              		.loc 1 1205 0 discriminator 3
 7560 144a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7561 144e 0133     		adds	r3, r3, #1
 7562 1450 87F88735 		strb	r3, [r7, #1415]
 7563              	.L335:
1205:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7564              		.loc 1 1205 0 is_stmt 0 discriminator 1
 7565 1454 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7566 1458 07F55D72 		add	r2, r7, #884
 7567 145c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7568 145e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7569 1462 9A42     		cmp	r2, r3
 7570 1464 DED3     		bcc	.L336
1208:..\src/command_processing.c ****                 case TYPE_STRING:
 7571              		.loc 1 1208 0 is_stmt 1
 7572 1466 FEE1     		b	.L362
 7573              	.L334:
1210:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7574              		.loc 1 1210 0
 7575 1468 0023     		movs	r3, #0
 7576 146a 87F88735 		strb	r3, [r7, #1415]
 7577 146e 3BE0     		b	.L338
 7578              	.L376:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 185


 7579              		.align	2
 7580              	.L375:
 7581 1470 340F0000 		.word	.LC129
 7582 1474 88020000 		.word	.LC130
 7583 1478 FC020000 		.word	.LC131
 7584 147c 34030000 		.word	.LC132
 7585 1480 6C030000 		.word	.LC133
 7586 1484 F8030000 		.word	.LC134
 7587 1488 38040000 		.word	.LC135
 7588 148c 64040000 		.word	.LC136
 7589 1490 7C040000 		.word	.LC137
 7590 1494 A4040000 		.word	.LC138
 7591 1498 00050000 		.word	.LC139
 7592 149c 3C050000 		.word	.LC140
 7593 14a0 9C050000 		.word	.LC141
 7594 14a4 18060000 		.word	.LC142
 7595 14a8 80100000 		.word	.LC85
 7596 14ac A0100000 		.word	.LC86
 7597 14b0 AC100000 		.word	.LC87
 7598 14b4 00000000 		.word	g_rx
 7599              	.L339:
1211:..\src/command_processing.c ****                     }
 7600              		.loc 1 1211 0 discriminator 3
 7601 14b8 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7602 14bc 07F21C43 		addw	r3, r7, #1052
 7603 14c0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7604 14c4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7605 14c8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7606 14cc 01FB02F2 		mul	r2, r1, r2
 7607 14d0 1344     		add	r3, r3, r2
 7608 14d2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7609 14d6 0332     		adds	r2, r2, #3
 7610 14d8 E149     		ldr	r1, .L377
 7611 14da 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7612 14dc 1A70     		strb	r2, [r3]
1210:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7613              		.loc 1 1210 0 discriminator 3
 7614 14de 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7615 14e2 0133     		adds	r3, r3, #1
 7616 14e4 87F88735 		strb	r3, [r7, #1415]
 7617              	.L338:
1210:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7618              		.loc 1 1210 0 is_stmt 0 discriminator 1
 7619 14e8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7620 14ec 07F55D72 		add	r2, r7, #884
 7621 14f0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7622 14f2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7623 14f6 9A42     		cmp	r2, r3
 7624 14f8 DED3     		bcc	.L339
1213:..\src/command_processing.c ****                 break; 
 7625              		.loc 1 1213 0 is_stmt 1
 7626 14fa 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7627 14fe 07F21C43 		addw	r3, r7, #1052
 7628 1502 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7629 1506 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7630 150a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7631 150e 01FB02F2 		mul	r2, r1, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 186


 7632 1512 1344     		add	r3, r3, r2
 7633 1514 0022     		movs	r2, #0
 7634 1516 1A70     		strb	r2, [r3]
1214:..\src/command_processing.c ****                 case TYPE_INT8:
 7635              		.loc 1 1214 0
 7636 1518 A5E1     		b	.L362
 7637              	.L328:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 7638              		.loc 1 1216 0
 7639 151a 0023     		movs	r3, #0
 7640 151c 87F88735 		strb	r3, [r7, #1415]
 7641 1520 1AE0     		b	.L340
 7642              	.L341:
1217:..\src/command_processing.c ****                     }
 7643              		.loc 1 1217 0 discriminator 3
 7644 1522 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7645 1526 07F21C43 		addw	r3, r7, #1052
 7646 152a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7647 152e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7648 1532 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7649 1536 01FB02F2 		mul	r2, r1, r2
 7650 153a 1344     		add	r3, r3, r2
 7651 153c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7652 1540 0332     		adds	r2, r2, #3
 7653 1542 C749     		ldr	r1, .L377
 7654 1544 0A44     		add	r2, r2, r1
 7655 1546 92F90020 		ldrsb	r2, [r2]
 7656 154a D2B2     		uxtb	r2, r2
 7657 154c 1A70     		strb	r2, [r3]
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 7658              		.loc 1 1216 0 discriminator 3
 7659 154e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7660 1552 0133     		adds	r3, r3, #1
 7661 1554 87F88735 		strb	r3, [r7, #1415]
 7662              	.L340:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 7663              		.loc 1 1216 0 is_stmt 0 discriminator 1
 7664 1558 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7665 155c 07F55D72 		add	r2, r7, #884
 7666 1560 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7667 1562 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7668 1566 9A42     		cmp	r2, r3
 7669 1568 DBD3     		bcc	.L341
1219:..\src/command_processing.c ****                 case TYPE_INT16:
 7670              		.loc 1 1219 0 is_stmt 1
 7671 156a 7CE1     		b	.L362
 7672              	.L329:
1221:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 7673              		.loc 1 1221 0
 7674 156c 0023     		movs	r3, #0
 7675 156e 87F88735 		strb	r3, [r7, #1415]
 7676 1572 3CE0     		b	.L342
 7677              	.L345:
1222:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7678              		.loc 1 1222 0
 7679 1574 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7680 1578 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 187


 7681 157c 02FB03F3 		mul	r3, r2, r3
 7682 1580 0333     		adds	r3, r3, #3
 7683 1582 B74A     		ldr	r2, .L377
 7684 1584 1344     		add	r3, r3, r2
 7685 1586 B3F90030 		ldrsh	r3, [r3]
 7686 158a A7F87835 		strh	r3, [r7, #1400]	@ movhi
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 7687              		.loc 1 1223 0
 7688 158e 0023     		movs	r3, #0
 7689 1590 87F88635 		strb	r3, [r7, #1414]
 7690 1594 20E0     		b	.L343
 7691              	.L344:
1224:..\src/command_processing.c ****                         }
 7692              		.loc 1 1224 0 discriminator 3
 7693 1596 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7694 159a 07F21C43 		addw	r3, r7, #1052
 7695 159e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7696 15a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7697 15a6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7698 15aa 01FB03F3 		mul	r3, r1, r3
 7699 15ae 1846     		mov	r0, r3
 7700 15b0 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7701 15b4 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7702 15b8 CB1A     		subs	r3, r1, r3
 7703 15ba 0344     		add	r3, r3, r0
 7704 15bc 013B     		subs	r3, r3, #1
 7705 15be 1344     		add	r3, r3, r2
 7706 15c0 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7707 15c4 07F5AF61 		add	r1, r7, #1400
 7708 15c8 0A44     		add	r2, r2, r1
 7709 15ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7710 15cc 1A70     		strb	r2, [r3]
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 7711              		.loc 1 1223 0 discriminator 3
 7712 15ce 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7713 15d2 0133     		adds	r3, r3, #1
 7714 15d4 87F88635 		strb	r3, [r7, #1414]
 7715              	.L343:
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 7716              		.loc 1 1223 0 is_stmt 0 discriminator 1
 7717 15d8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7718 15dc 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 7719 15e0 9A42     		cmp	r2, r3
 7720 15e2 D8D3     		bcc	.L344
1221:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 7721              		.loc 1 1221 0 is_stmt 1 discriminator 2
 7722 15e4 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7723 15e8 0133     		adds	r3, r3, #1
 7724 15ea 87F88735 		strb	r3, [r7, #1415]
 7725              	.L342:
1221:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 7726              		.loc 1 1221 0 is_stmt 0 discriminator 1
 7727 15ee 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7728 15f2 07F55D72 		add	r2, r7, #884
 7729 15f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7730 15f8 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7731 15fc 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 188


 7732 15fe B9D3     		bcc	.L345
1227:..\src/command_processing.c ****                 case TYPE_UINT16:
 7733              		.loc 1 1227 0 is_stmt 1
 7734 1600 31E1     		b	.L362
 7735              	.L330:
1229:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7736              		.loc 1 1229 0
 7737 1602 0023     		movs	r3, #0
 7738 1604 87F88735 		strb	r3, [r7, #1415]
 7739 1608 3BE0     		b	.L346
 7740              	.L349:
1230:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7741              		.loc 1 1230 0
 7742 160a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7743 160e 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 7744 1612 02FB03F3 		mul	r3, r2, r3
 7745 1616 0333     		adds	r3, r3, #3
 7746 1618 914A     		ldr	r2, .L377
 7747 161a 1344     		add	r3, r3, r2
 7748 161c 1B88     		ldrh	r3, [r3]
 7749 161e A7F87635 		strh	r3, [r7, #1398]	@ movhi
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7750              		.loc 1 1231 0
 7751 1622 0023     		movs	r3, #0
 7752 1624 87F88635 		strb	r3, [r7, #1414]
 7753 1628 20E0     		b	.L347
 7754              	.L348:
1232:..\src/command_processing.c ****                         }
 7755              		.loc 1 1232 0 discriminator 3
 7756 162a 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7757 162e 07F21C43 		addw	r3, r7, #1052
 7758 1632 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7759 1636 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7760 163a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7761 163e 01FB03F3 		mul	r3, r1, r3
 7762 1642 1846     		mov	r0, r3
 7763 1644 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7764 1648 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7765 164c CB1A     		subs	r3, r1, r3
 7766 164e 0344     		add	r3, r3, r0
 7767 1650 013B     		subs	r3, r3, #1
 7768 1652 1344     		add	r3, r3, r2
 7769 1654 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7770 1658 07F27651 		addw	r1, r7, #1398
 7771 165c 0A44     		add	r2, r2, r1
 7772 165e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7773 1660 1A70     		strb	r2, [r3]
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7774              		.loc 1 1231 0 discriminator 3
 7775 1662 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7776 1666 0133     		adds	r3, r3, #1
 7777 1668 87F88635 		strb	r3, [r7, #1414]
 7778              	.L347:
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7779              		.loc 1 1231 0 is_stmt 0 discriminator 1
 7780 166c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7781 1670 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 189


 7782 1674 9A42     		cmp	r2, r3
 7783 1676 D8D3     		bcc	.L348
1229:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7784              		.loc 1 1229 0 is_stmt 1 discriminator 2
 7785 1678 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7786 167c 0133     		adds	r3, r3, #1
 7787 167e 87F88735 		strb	r3, [r7, #1415]
 7788              	.L346:
1229:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7789              		.loc 1 1229 0 is_stmt 0 discriminator 1
 7790 1682 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7791 1686 07F55D72 		add	r2, r7, #884
 7792 168a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7793 168c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7794 1690 9A42     		cmp	r2, r3
 7795 1692 BAD3     		bcc	.L349
1235:..\src/command_processing.c ****                 case TYPE_INT32:
 7796              		.loc 1 1235 0 is_stmt 1
 7797 1694 E7E0     		b	.L362
 7798              	.L331:
1237:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7799              		.loc 1 1237 0
 7800 1696 0023     		movs	r3, #0
 7801 1698 87F88735 		strb	r3, [r7, #1415]
 7802 169c 3BE0     		b	.L350
 7803              	.L353:
1238:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7804              		.loc 1 1238 0
 7805 169e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7806 16a2 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 7807 16a6 02FB03F3 		mul	r3, r2, r3
 7808 16aa 0333     		adds	r3, r3, #3
 7809 16ac 6C4A     		ldr	r2, .L377
 7810 16ae 1344     		add	r3, r3, r2
 7811 16b0 1B68     		ldr	r3, [r3]
 7812 16b2 C7F87035 		str	r3, [r7, #1392]
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7813              		.loc 1 1239 0
 7814 16b6 0023     		movs	r3, #0
 7815 16b8 87F88635 		strb	r3, [r7, #1414]
 7816 16bc 20E0     		b	.L351
 7817              	.L352:
1240:..\src/command_processing.c ****                         }
 7818              		.loc 1 1240 0 discriminator 3
 7819 16be 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7820 16c2 07F21C43 		addw	r3, r7, #1052
 7821 16c6 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7822 16ca 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7823 16ce 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7824 16d2 01FB03F3 		mul	r3, r1, r3
 7825 16d6 1846     		mov	r0, r3
 7826 16d8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7827 16dc 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7828 16e0 CB1A     		subs	r3, r1, r3
 7829 16e2 0344     		add	r3, r3, r0
 7830 16e4 013B     		subs	r3, r3, #1
 7831 16e6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 190


 7832 16e8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7833 16ec 07F5AE61 		add	r1, r7, #1392
 7834 16f0 0A44     		add	r2, r2, r1
 7835 16f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7836 16f4 1A70     		strb	r2, [r3]
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7837              		.loc 1 1239 0 discriminator 3
 7838 16f6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7839 16fa 0133     		adds	r3, r3, #1
 7840 16fc 87F88635 		strb	r3, [r7, #1414]
 7841              	.L351:
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7842              		.loc 1 1239 0 is_stmt 0 discriminator 1
 7843 1700 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7844 1704 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 7845 1708 9A42     		cmp	r2, r3
 7846 170a D8D3     		bcc	.L352
1237:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7847              		.loc 1 1237 0 is_stmt 1 discriminator 2
 7848 170c 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7849 1710 0133     		adds	r3, r3, #1
 7850 1712 87F88735 		strb	r3, [r7, #1415]
 7851              	.L350:
1237:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7852              		.loc 1 1237 0 is_stmt 0 discriminator 1
 7853 1716 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7854 171a 07F55D72 		add	r2, r7, #884
 7855 171e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7856 1720 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7857 1724 9A42     		cmp	r2, r3
 7858 1726 BAD3     		bcc	.L353
1243:..\src/command_processing.c ****                 case TYPE_UINT32:
 7859              		.loc 1 1243 0 is_stmt 1
 7860 1728 9DE0     		b	.L362
 7861              	.L332:
1245:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7862              		.loc 1 1245 0
 7863 172a 0023     		movs	r3, #0
 7864 172c 87F88735 		strb	r3, [r7, #1415]
 7865 1730 3BE0     		b	.L354
 7866              	.L357:
1246:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7867              		.loc 1 1246 0
 7868 1732 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7869 1736 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 7870 173a 02FB03F3 		mul	r3, r2, r3
 7871 173e 0333     		adds	r3, r3, #3
 7872 1740 474A     		ldr	r2, .L377
 7873 1742 1344     		add	r3, r3, r2
 7874 1744 1B68     		ldr	r3, [r3]
 7875 1746 C7F86C35 		str	r3, [r7, #1388]
1247:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7876              		.loc 1 1247 0
 7877 174a 0023     		movs	r3, #0
 7878 174c 87F88635 		strb	r3, [r7, #1414]
 7879 1750 20E0     		b	.L355
 7880              	.L356:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 191


1248:..\src/command_processing.c ****                         }
 7881              		.loc 1 1248 0 discriminator 3
 7882 1752 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7883 1756 07F21C43 		addw	r3, r7, #1052
 7884 175a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7885 175e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7886 1762 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7887 1766 01FB03F3 		mul	r3, r1, r3
 7888 176a 1846     		mov	r0, r3
 7889 176c 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7890 1770 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7891 1774 CB1A     		subs	r3, r1, r3
 7892 1776 0344     		add	r3, r3, r0
 7893 1778 013B     		subs	r3, r3, #1
 7894 177a 1344     		add	r3, r3, r2
 7895 177c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7896 1780 07F26C51 		addw	r1, r7, #1388
 7897 1784 0A44     		add	r2, r2, r1
 7898 1786 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7899 1788 1A70     		strb	r2, [r3]
1247:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7900              		.loc 1 1247 0 discriminator 3
 7901 178a 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7902 178e 0133     		adds	r3, r3, #1
 7903 1790 87F88635 		strb	r3, [r7, #1414]
 7904              	.L355:
1247:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7905              		.loc 1 1247 0 is_stmt 0 discriminator 1
 7906 1794 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7907 1798 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 7908 179c 9A42     		cmp	r2, r3
 7909 179e D8D3     		bcc	.L356
1245:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7910              		.loc 1 1245 0 is_stmt 1 discriminator 2
 7911 17a0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7912 17a4 0133     		adds	r3, r3, #1
 7913 17a6 87F88735 		strb	r3, [r7, #1415]
 7914              	.L354:
1245:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7915              		.loc 1 1245 0 is_stmt 0 discriminator 1
 7916 17aa 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7917 17ae 07F55D72 		add	r2, r7, #884
 7918 17b2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7919 17b4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7920 17b8 9A42     		cmp	r2, r3
 7921 17ba BAD3     		bcc	.L357
1251:..\src/command_processing.c ****                 case TYPE_FLOAT:
 7922              		.loc 1 1251 0 is_stmt 1
 7923 17bc 53E0     		b	.L362
 7924              	.L333:
1253:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7925              		.loc 1 1253 0
 7926 17be 0023     		movs	r3, #0
 7927 17c0 87F88735 		strb	r3, [r7, #1415]
 7928 17c4 3BE0     		b	.L358
 7929              	.L361:
1254:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 192


 7930              		.loc 1 1254 0
 7931 17c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7932 17ca 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 7933 17ce 02FB03F3 		mul	r3, r2, r3
 7934 17d2 0333     		adds	r3, r3, #3
 7935 17d4 224A     		ldr	r2, .L377
 7936 17d6 1344     		add	r3, r3, r2
 7937 17d8 1B68     		ldr	r3, [r3]	@ float
 7938 17da C7F86835 		str	r3, [r7, #1384]	@ float
1255:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7939              		.loc 1 1255 0
 7940 17de 0023     		movs	r3, #0
 7941 17e0 87F88635 		strb	r3, [r7, #1414]
 7942 17e4 20E0     		b	.L359
 7943              	.L360:
1256:..\src/command_processing.c ****                         }
 7944              		.loc 1 1256 0 discriminator 3
 7945 17e6 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 7946 17ea 07F21C43 		addw	r3, r7, #1052
 7947 17ee 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7948 17f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7949 17f6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7950 17fa 01FB03F3 		mul	r3, r1, r3
 7951 17fe 1846     		mov	r0, r3
 7952 1800 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 7953 1804 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7954 1808 CB1A     		subs	r3, r1, r3
 7955 180a 0344     		add	r3, r3, r0
 7956 180c 013B     		subs	r3, r3, #1
 7957 180e 1344     		add	r3, r3, r2
 7958 1810 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7959 1814 07F5AD61 		add	r1, r7, #1384
 7960 1818 0A44     		add	r2, r2, r1
 7961 181a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7962 181c 1A70     		strb	r2, [r3]
1255:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7963              		.loc 1 1255 0 discriminator 3
 7964 181e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 7965 1822 0133     		adds	r3, r3, #1
 7966 1824 87F88635 		strb	r3, [r7, #1414]
 7967              	.L359:
1255:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7968              		.loc 1 1255 0 is_stmt 0 discriminator 1
 7969 1828 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 7970 182c 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 7971 1830 9A42     		cmp	r2, r3
 7972 1832 D8D3     		bcc	.L360
1253:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7973              		.loc 1 1253 0 is_stmt 1 discriminator 2
 7974 1834 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 7975 1838 0133     		adds	r3, r3, #1
 7976 183a 87F88735 		strb	r3, [r7, #1415]
 7977              	.L358:
1253:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7978              		.loc 1 1253 0 is_stmt 0 discriminator 1
 7979 183e 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 7980 1842 07F55D72 		add	r2, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 193


 7981 1846 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7982 1848 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 7983 184c 9A42     		cmp	r2, r3
 7984 184e BAD3     		bcc	.L361
1259:..\src/command_processing.c ****                 default:
 7985              		.loc 1 1259 0 is_stmt 1
 7986 1850 09E0     		b	.L362
 7987              	.L324:
1266:..\src/command_processing.c ****         }
 7988              		.loc 1 1266 0
 7989 1852 BB1D     		adds	r3, r7, #6
 7990 1854 1B88     		ldrh	r3, [r3]
 7991 1856 1846     		mov	r0, r3
 7992 1858 FFF7FEFF 		bl	set_custom_param
 7993 185c 03E0     		b	.L362
 7994              	.L378:
 7995 185e 00BF     		.align	2
 7996              	.L377:
 7997 1860 00000000 		.word	g_rx
 7998              	.L367:
1261:..\src/command_processing.c ****             }
 7999              		.loc 1 1261 0
 8000 1864 00BF     		nop
 8001              	.L362:
1270:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 8002              		.loc 1 1270 0
 8003 1866 97F87B35 		ldrb	r3, [r7, #1403]	@ zero_extendqisi2
 8004 186a 9BB2     		uxth	r3, r3
 8005 186c BA1D     		adds	r2, r7, #6
 8006 186e 1288     		ldrh	r2, [r2]
 8007 1870 9A42     		cmp	r2, r3
 8008 1872 11D0     		beq	.L363
1271:..\src/command_processing.c ****         }
 8009              		.loc 1 1271 0
 8010 1874 D7F88035 		ldr	r3, [r7, #1408]
 8011 1878 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 8012 187c 5B01     		lsls	r3, r3, #5
 8013 187e 03F51273 		add	r3, r3, #584
 8014 1882 D7F88025 		ldr	r2, [r7, #1408]
 8015 1886 D018     		adds	r0, r2, r3
 8016 1888 D7F88035 		ldr	r3, [r7, #1408]
 8017 188c 03F5F873 		add	r3, r3, #496
 8018 1890 1022     		movs	r2, #16
 8019 1892 1946     		mov	r1, r3
 8020 1894 FFF7FEFF 		bl	memcpy
 8021              	.L363:
1275:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 8022              		.loc 1 1275 0
 8023 1898 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8024 189c 07F57272 		add	r2, r7, #968
 8025 18a0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8026 18a2 002B     		cmp	r3, #0
 8027 18a4 42D1     		bne	.L368
 8028              	.LBB22:
1276:..\src/command_processing.c ****             do {
 8029              		.loc 1 1276 0
 8030 18a6 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 194


 8031 18a8 87F87F35 		strb	r3, [r7, #1407]
 8032 18ac FF23     		movs	r3, #255
 8033 18ae 87F87E35 		strb	r3, [r7, #1406]
 8034              	.L365:
1278:..\src/command_processing.c ****                 idx++;
 8035              		.loc 1 1278 0
 8036 18b2 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8037 18b6 07F57272 		add	r2, r7, #968
 8038 18ba D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8039 18bc 002B     		cmp	r3, #0
 8040 18be 04D1     		bne	.L364
1278:..\src/command_processing.c ****                 idx++;
 8041              		.loc 1 1278 0 is_stmt 0 discriminator 1
 8042 18c0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8043 18c4 0133     		adds	r3, r3, #1
 8044 18c6 87F87E35 		strb	r3, [r7, #1406]
 8045              	.L364:
1279:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 8046              		.loc 1 1279 0 is_stmt 1
 8047 18ca 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8048 18ce 0133     		adds	r3, r3, #1
 8049 18d0 87F87F35 		strb	r3, [r7, #1407]
1280:..\src/command_processing.c ****             
 8050              		.loc 1 1280 0
 8051 18d4 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8052 18d8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8053 18dc 9A42     		cmp	r2, r3
 8054 18de E8D9     		bls	.L365
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8055              		.loc 1 1282 0
 8056 18e0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8057 18e4 07F1D402 		add	r2, r7, #212
 8058 18e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8059 18ea 052B     		cmp	r3, #5
 8060 18ec 1BD0     		beq	.L366
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8061              		.loc 1 1282 0 is_stmt 0 discriminator 1
 8062 18ee 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8063 18f2 07F1D402 		add	r2, r7, #212
 8064 18f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8065 18f8 062B     		cmp	r3, #6
 8066 18fa 14D0     		beq	.L366
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8067              		.loc 1 1282 0 discriminator 2
 8068 18fc 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8069 1900 07F1D402 		add	r2, r7, #212
 8070 1904 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8071 1906 082B     		cmp	r3, #8
 8072 1908 0DD0     		beq	.L366
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8073              		.loc 1 1282 0 discriminator 3
 8074 190a 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8075 190e 07F1D402 		add	r2, r7, #212
 8076 1912 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8077 1914 092B     		cmp	r3, #9
 8078 1916 06D0     		beq	.L366
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 195


 8079              		.loc 1 1282 0 discriminator 4
 8080 1918 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8081 191c 07F1D402 		add	r2, r7, #212
 8082 1920 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8083 1922 0A2B     		cmp	r3, #10
 8084 1924 02D1     		bne	.L368
 8085              	.L366:
1283:..\src/command_processing.c ****             }   
 8086              		.loc 1 1283 0 is_stmt 1
 8087 1926 044B     		ldr	r3, .L379
 8088 1928 0122     		movs	r2, #1
 8089 192a 1A70     		strb	r2, [r3]
 8090              	.L368:
 8091              	.LBE22:
 8092              		.loc 1 1287 0
 8093 192c 00BF     		nop
 8094 192e 07F5B167 		add	r7, r7, #1416
 8095              		.cfi_def_cfa_offset 16
 8096 1932 BD46     		mov	sp, r7
 8097              		.cfi_def_cfa_register 13
 8098              		@ sp needed
 8099 1934 B0BD     		pop	{r4, r5, r7, pc}
 8100              	.L380:
 8101 1936 00BF     		.align	2
 8102              	.L379:
 8103 1938 00000000 		.word	reset_PSoC_flag
 8104              		.cfi_endproc
 8105              	.LFE68:
 8106              		.size	manage_param_list, .-manage_param_list
 8107              		.global	__aeabi_fmul
 8108              		.global	__aeabi_f2iz
 8109              		.section	.text.set_custom_param,"ax",%progbits
 8110              		.align	2
 8111              		.global	set_custom_param
 8112              		.thumb
 8113              		.thumb_func
 8114              		.type	set_custom_param, %function
 8115              	set_custom_param:
 8116              	.LFB69:
1288:..\src/command_processing.c **** 
1289:..\src/command_processing.c **** //==============================================================================
1290:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1291:..\src/command_processing.c **** //==============================================================================
1292:..\src/command_processing.c **** 
1293:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 8117              		.loc 1 1293 0
 8118              		.cfi_startproc
 8119              		@ args = 0, pretend = 0, frame = 24
 8120              		@ frame_needed = 1, uses_anonymous_args = 0
 8121 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8122              		.cfi_def_cfa_offset 20
 8123              		.cfi_offset 4, -20
 8124              		.cfi_offset 5, -16
 8125              		.cfi_offset 6, -12
 8126              		.cfi_offset 7, -8
 8127              		.cfi_offset 14, -4
 8128 0002 87B0     		sub	sp, sp, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 196


 8129              		.cfi_def_cfa_offset 48
 8130 0004 00AF     		add	r7, sp, #0
 8131              		.cfi_def_cfa_register 7
 8132 0006 0346     		mov	r3, r0
 8133 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1294:..\src/command_processing.c **** 
1295:..\src/command_processing.c ****     uint8 CYDATA i, j;
1296:..\src/command_processing.c ****     uint8 aux_uchar;
1297:..\src/command_processing.c ****     float aux_float, aux_float2;
1298:..\src/command_processing.c **** 
1299:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 8134              		.loc 1 1299 0
 8135 000a 0023     		movs	r3, #0
 8136 000c 3B75     		strb	r3, [r7, #20]
1300:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 8137              		.loc 1 1300 0
 8138 000e 0123     		movs	r3, #1
 8139 0010 FB74     		strb	r3, [r7, #19]
1301:..\src/command_processing.c ****     
1302:..\src/command_processing.c ****     switch(index){
 8140              		.loc 1 1302 0
 8141 0012 FB88     		ldrh	r3, [r7, #6]
 8142 0014 023B     		subs	r3, r3, #2
 8143 0016 492B     		cmp	r3, #73
 8144 0018 01F24C82 		bhi	.L476
 8145 001c 01A2     		adr	r2, .L384
 8146 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8147 0022 00BF     		.p2align 2
 8148              	.L384:
 8149 0024 4D010000 		.word	.L383+1
 8150 0028 7F030000 		.word	.L385+1
 8151 002c B5140000 		.word	.L476+1
 8152 0030 C5050000 		.word	.L386+1
 8153 0034 B5140000 		.word	.L476+1
 8154 0038 B5140000 		.word	.L476+1
 8155 003c 0F060000 		.word	.L387+1
 8156 0040 B5140000 		.word	.L476+1
 8157 0044 B5140000 		.word	.L476+1
 8158 0048 49070000 		.word	.L388+1
 8159 004c B5140000 		.word	.L476+1
 8160 0050 B5140000 		.word	.L476+1
 8161 0054 B5140000 		.word	.L476+1
 8162 0058 B5140000 		.word	.L476+1
 8163 005c B5140000 		.word	.L476+1
 8164 0060 B5140000 		.word	.L476+1
 8165 0064 B5140000 		.word	.L476+1
 8166 0068 B5140000 		.word	.L476+1
 8167 006c B5140000 		.word	.L476+1
 8168 0070 B5140000 		.word	.L476+1
 8169 0074 B5140000 		.word	.L476+1
 8170 0078 49080000 		.word	.L389+1
 8171 007c A7080000 		.word	.L390+1
 8172 0080 B5140000 		.word	.L476+1
 8173 0084 B5140000 		.word	.L476+1
 8174 0088 B5140000 		.word	.L476+1
 8175 008c E1080000 		.word	.L391+1
 8176 0090 B5140000 		.word	.L476+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 197


 8177 0094 B5140000 		.word	.L476+1
 8178 0098 5D0A0000 		.word	.L392+1
 8179 009c 090B0000 		.word	.L393+1
 8180 00a0 B5140000 		.word	.L476+1
 8181 00a4 B5140000 		.word	.L476+1
 8182 00a8 B5140000 		.word	.L476+1
 8183 00ac B5140000 		.word	.L476+1
 8184 00b0 B5140000 		.word	.L476+1
 8185 00b4 430B0000 		.word	.L394+1
 8186 00b8 B5140000 		.word	.L476+1
 8187 00bc B5140000 		.word	.L476+1
 8188 00c0 B5140000 		.word	.L476+1
 8189 00c4 B5140000 		.word	.L476+1
 8190 00c8 B5140000 		.word	.L476+1
 8191 00cc 630B0000 		.word	.L395+1
 8192 00d0 AB0D0000 		.word	.L396+1
 8193 00d4 B5140000 		.word	.L476+1
 8194 00d8 D90F0000 		.word	.L397+1
 8195 00dc B5140000 		.word	.L476+1
 8196 00e0 B5140000 		.word	.L476+1
 8197 00e4 21100000 		.word	.L398+1
 8198 00e8 B5140000 		.word	.L476+1
 8199 00ec B5140000 		.word	.L476+1
 8200 00f0 59110000 		.word	.L399+1
 8201 00f4 B5140000 		.word	.L476+1
 8202 00f8 B5140000 		.word	.L476+1
 8203 00fc B5140000 		.word	.L476+1
 8204 0100 B5140000 		.word	.L476+1
 8205 0104 B5140000 		.word	.L476+1
 8206 0108 B5140000 		.word	.L476+1
 8207 010c B5140000 		.word	.L476+1
 8208 0110 57120000 		.word	.L400+1
 8209 0114 B5140000 		.word	.L476+1
 8210 0118 B5140000 		.word	.L476+1
 8211 011c B5140000 		.word	.L476+1
 8212 0120 B5140000 		.word	.L476+1
 8213 0124 B5140000 		.word	.L476+1
 8214 0128 B5140000 		.word	.L476+1
 8215 012c B5140000 		.word	.L476+1
 8216 0130 B5140000 		.word	.L476+1
 8217 0134 B5140000 		.word	.L476+1
 8218 0138 B5140000 		.word	.L476+1
 8219 013c B5140000 		.word	.L476+1
 8220 0140 B5140000 		.word	.L476+1
 8221 0144 B5140000 		.word	.L476+1
 8222 0148 85120000 		.word	.L401+1
 8223              		.p2align 1
 8224              	.L383:
1303:..\src/command_processing.c ****         case 2:         // Position PID
1304:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 8225              		.loc 1 1304 0
 8226 014c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8227 014e AB49     		ldr	r1, .L482
 8228 0150 1346     		mov	r3, r2
 8229 0152 DB00     		lsls	r3, r3, #3
 8230 0154 9B1A     		subs	r3, r3, r2
 8231 0156 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 198


 8232 0158 0B44     		add	r3, r3, r1
 8233 015a 03F20F13 		addw	r3, r3, #271
 8234 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8235 0160 032B     		cmp	r3, #3
 8236 0162 00F08680 		beq	.L402
1305:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 8237              		.loc 1 1305 0
 8238 0166 A64B     		ldr	r3, .L482+4
 8239 0168 1B68     		ldr	r3, [r3]	@ float
 8240 016a FB60     		str	r3, [r7, #12]	@ float
1306:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8241              		.loc 1 1306 0
 8242 016c 0023     		movs	r3, #0
 8243 016e BB75     		strb	r3, [r7, #22]
 8244 0170 0EE0     		b	.L403
 8245              	.L404:
1307:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8246              		.loc 1 1307 0 discriminator 3
 8247 0172 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8248 0174 C3F10303 		rsb	r3, r3, #3
 8249 0178 07F10802 		add	r2, r7, #8
 8250 017c 1344     		add	r3, r3, r2
 8251 017e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8252 0180 07F10C01 		add	r1, r7, #12
 8253 0184 0A44     		add	r2, r2, r1
 8254 0186 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8255 0188 1A70     		strb	r2, [r3]
1306:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8256              		.loc 1 1306 0 discriminator 3
 8257 018a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8258 018c 0133     		adds	r3, r3, #1
 8259 018e BB75     		strb	r3, [r7, #22]
 8260              	.L403:
1306:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8261              		.loc 1 1306 0 is_stmt 0 discriminator 1
 8262 0190 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8263 0192 032B     		cmp	r3, #3
 8264 0194 EDD9     		bls	.L404
1308:..\src/command_processing.c ****                 }
1309:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 8265              		.loc 1 1309 0 is_stmt 1
 8266 0196 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8267 0198 BB68     		ldr	r3, [r7, #8]	@ float
 8268 019a 4FF08F41 		mov	r1, #1199570944
 8269 019e 1846     		mov	r0, r3
 8270 01a0 FFF7FEFF 		bl	__aeabi_fmul
 8271 01a4 0346     		mov	r3, r0
 8272 01a6 1846     		mov	r0, r3
 8273 01a8 FFF7FEFF 		bl	__aeabi_f2iz
 8274 01ac 0146     		mov	r1, r0
 8275 01ae 954A     		ldr	r2, .L482+8
 8276 01b0 2346     		mov	r3, r4
 8277 01b2 DB00     		lsls	r3, r3, #3
 8278 01b4 1B1B     		subs	r3, r3, r4
 8279 01b6 1B01     		lsls	r3, r3, #4
 8280 01b8 1344     		add	r3, r3, r2
 8281 01ba B033     		adds	r3, r3, #176
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 199


 8282 01bc 1960     		str	r1, [r3]
1310:..\src/command_processing.c ****                 
1311:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 8283              		.loc 1 1311 0
 8284 01be 924B     		ldr	r3, .L482+12
 8285 01c0 1B68     		ldr	r3, [r3]	@ float
 8286 01c2 FB60     		str	r3, [r7, #12]	@ float
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8287              		.loc 1 1312 0
 8288 01c4 0023     		movs	r3, #0
 8289 01c6 BB75     		strb	r3, [r7, #22]
 8290 01c8 0EE0     		b	.L405
 8291              	.L406:
1313:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8292              		.loc 1 1313 0 discriminator 3
 8293 01ca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8294 01cc C3F10303 		rsb	r3, r3, #3
 8295 01d0 07F10802 		add	r2, r7, #8
 8296 01d4 1344     		add	r3, r3, r2
 8297 01d6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8298 01d8 07F10C01 		add	r1, r7, #12
 8299 01dc 0A44     		add	r2, r2, r1
 8300 01de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8301 01e0 1A70     		strb	r2, [r3]
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8302              		.loc 1 1312 0 discriminator 3
 8303 01e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8304 01e4 0133     		adds	r3, r3, #1
 8305 01e6 BB75     		strb	r3, [r7, #22]
 8306              	.L405:
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8307              		.loc 1 1312 0 is_stmt 0 discriminator 1
 8308 01e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8309 01ea 032B     		cmp	r3, #3
 8310 01ec EDD9     		bls	.L406
1314:..\src/command_processing.c ****                 }
1315:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 8311              		.loc 1 1315 0 is_stmt 1
 8312 01ee 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8313 01f0 BB68     		ldr	r3, [r7, #8]	@ float
 8314 01f2 4FF08F41 		mov	r1, #1199570944
 8315 01f6 1846     		mov	r0, r3
 8316 01f8 FFF7FEFF 		bl	__aeabi_fmul
 8317 01fc 0346     		mov	r3, r0
 8318 01fe 1846     		mov	r0, r3
 8319 0200 FFF7FEFF 		bl	__aeabi_f2iz
 8320 0204 0146     		mov	r1, r0
 8321 0206 7F4A     		ldr	r2, .L482+8
 8322 0208 2346     		mov	r3, r4
 8323 020a DB00     		lsls	r3, r3, #3
 8324 020c 1B1B     		subs	r3, r3, r4
 8325 020e 1B01     		lsls	r3, r3, #4
 8326 0210 1344     		add	r3, r3, r2
 8327 0212 B433     		adds	r3, r3, #180
 8328 0214 1960     		str	r1, [r3]
1316:..\src/command_processing.c ****                 
1317:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 200


 8329              		.loc 1 1317 0
 8330 0216 7D4B     		ldr	r3, .L482+16
 8331 0218 1B68     		ldr	r3, [r3]	@ float
 8332 021a FB60     		str	r3, [r7, #12]	@ float
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8333              		.loc 1 1318 0
 8334 021c 0023     		movs	r3, #0
 8335 021e BB75     		strb	r3, [r7, #22]
 8336 0220 0EE0     		b	.L407
 8337              	.L408:
1319:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8338              		.loc 1 1319 0 discriminator 3
 8339 0222 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8340 0224 C3F10303 		rsb	r3, r3, #3
 8341 0228 07F10802 		add	r2, r7, #8
 8342 022c 1344     		add	r3, r3, r2
 8343 022e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8344 0230 07F10C01 		add	r1, r7, #12
 8345 0234 0A44     		add	r2, r2, r1
 8346 0236 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8347 0238 1A70     		strb	r2, [r3]
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8348              		.loc 1 1318 0 discriminator 3
 8349 023a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8350 023c 0133     		adds	r3, r3, #1
 8351 023e BB75     		strb	r3, [r7, #22]
 8352              	.L407:
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8353              		.loc 1 1318 0 is_stmt 0 discriminator 1
 8354 0240 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8355 0242 032B     		cmp	r3, #3
 8356 0244 EDD9     		bls	.L408
1320:..\src/command_processing.c ****                 }
1321:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 8357              		.loc 1 1321 0 is_stmt 1
 8358 0246 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8359 0248 BB68     		ldr	r3, [r7, #8]	@ float
 8360 024a 4FF08F41 		mov	r1, #1199570944
 8361 024e 1846     		mov	r0, r3
 8362 0250 FFF7FEFF 		bl	__aeabi_fmul
 8363 0254 0346     		mov	r3, r0
 8364 0256 1846     		mov	r0, r3
 8365 0258 FFF7FEFF 		bl	__aeabi_f2iz
 8366 025c 0146     		mov	r1, r0
 8367 025e 694A     		ldr	r2, .L482+8
 8368 0260 2346     		mov	r3, r4
 8369 0262 DB00     		lsls	r3, r3, #3
 8370 0264 1B1B     		subs	r3, r3, r4
 8371 0266 1B01     		lsls	r3, r3, #4
 8372 0268 1344     		add	r3, r3, r2
 8373 026a B833     		adds	r3, r3, #184
 8374 026c 1960     		str	r1, [r3]
1322:..\src/command_processing.c ****             }
1323:..\src/command_processing.c ****             else {
1324:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1325:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1326:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 201


1327:..\src/command_processing.c ****                 }
1328:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1329:..\src/command_processing.c ****                 
1330:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1332:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1333:..\src/command_processing.c ****                 }
1334:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1335:..\src/command_processing.c ****                 
1336:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1338:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1339:..\src/command_processing.c ****                 }
1340:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1341:..\src/command_processing.c ****             }
1342:..\src/command_processing.c ****             break;
 8375              		.loc 1 1342 0
 8376 026e 01F02CB9 		b	.L416
 8377              	.L402:
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8378              		.loc 1 1324 0
 8379 0272 634B     		ldr	r3, .L482+4
 8380 0274 1B68     		ldr	r3, [r3]	@ float
 8381 0276 FB60     		str	r3, [r7, #12]	@ float
1325:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8382              		.loc 1 1325 0
 8383 0278 0023     		movs	r3, #0
 8384 027a BB75     		strb	r3, [r7, #22]
 8385 027c 0EE0     		b	.L410
 8386              	.L411:
1326:..\src/command_processing.c ****                 }
 8387              		.loc 1 1326 0 discriminator 3
 8388 027e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8389 0280 C3F10303 		rsb	r3, r3, #3
 8390 0284 07F10802 		add	r2, r7, #8
 8391 0288 1344     		add	r3, r3, r2
 8392 028a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8393 028c 07F10C01 		add	r1, r7, #12
 8394 0290 0A44     		add	r2, r2, r1
 8395 0292 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8396 0294 1A70     		strb	r2, [r3]
1325:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8397              		.loc 1 1325 0 discriminator 3
 8398 0296 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8399 0298 0133     		adds	r3, r3, #1
 8400 029a BB75     		strb	r3, [r7, #22]
 8401              	.L410:
1325:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8402              		.loc 1 1325 0 is_stmt 0 discriminator 1
 8403 029c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8404 029e 032B     		cmp	r3, #3
 8405 02a0 EDD9     		bls	.L411
1328:..\src/command_processing.c ****                 
 8406              		.loc 1 1328 0 is_stmt 1
 8407 02a2 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8408 02a4 BB68     		ldr	r3, [r7, #8]	@ float
 8409 02a6 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 202


 8410 02aa 1846     		mov	r0, r3
 8411 02ac FFF7FEFF 		bl	__aeabi_fmul
 8412 02b0 0346     		mov	r3, r0
 8413 02b2 1846     		mov	r0, r3
 8414 02b4 FFF7FEFF 		bl	__aeabi_f2iz
 8415 02b8 0146     		mov	r1, r0
 8416 02ba 524A     		ldr	r2, .L482+8
 8417 02bc 2346     		mov	r3, r4
 8418 02be DB00     		lsls	r3, r3, #3
 8419 02c0 1B1B     		subs	r3, r3, r4
 8420 02c2 1B01     		lsls	r3, r3, #4
 8421 02c4 1344     		add	r3, r3, r2
 8422 02c6 C833     		adds	r3, r3, #200
 8423 02c8 1960     		str	r1, [r3]
1330:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8424              		.loc 1 1330 0
 8425 02ca 4F4B     		ldr	r3, .L482+12
 8426 02cc 1B68     		ldr	r3, [r3]	@ float
 8427 02ce FB60     		str	r3, [r7, #12]	@ float
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8428              		.loc 1 1331 0
 8429 02d0 0023     		movs	r3, #0
 8430 02d2 BB75     		strb	r3, [r7, #22]
 8431 02d4 0EE0     		b	.L412
 8432              	.L413:
1332:..\src/command_processing.c ****                 }
 8433              		.loc 1 1332 0 discriminator 3
 8434 02d6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8435 02d8 C3F10303 		rsb	r3, r3, #3
 8436 02dc 07F10802 		add	r2, r7, #8
 8437 02e0 1344     		add	r3, r3, r2
 8438 02e2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8439 02e4 07F10C01 		add	r1, r7, #12
 8440 02e8 0A44     		add	r2, r2, r1
 8441 02ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8442 02ec 1A70     		strb	r2, [r3]
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8443              		.loc 1 1331 0 discriminator 3
 8444 02ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8445 02f0 0133     		adds	r3, r3, #1
 8446 02f2 BB75     		strb	r3, [r7, #22]
 8447              	.L412:
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8448              		.loc 1 1331 0 is_stmt 0 discriminator 1
 8449 02f4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8450 02f6 032B     		cmp	r3, #3
 8451 02f8 EDD9     		bls	.L413
1334:..\src/command_processing.c ****                 
 8452              		.loc 1 1334 0 is_stmt 1
 8453 02fa 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8454 02fc BB68     		ldr	r3, [r7, #8]	@ float
 8455 02fe 4FF08F41 		mov	r1, #1199570944
 8456 0302 1846     		mov	r0, r3
 8457 0304 FFF7FEFF 		bl	__aeabi_fmul
 8458 0308 0346     		mov	r3, r0
 8459 030a 1846     		mov	r0, r3
 8460 030c FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 203


 8461 0310 0146     		mov	r1, r0
 8462 0312 3C4A     		ldr	r2, .L482+8
 8463 0314 2346     		mov	r3, r4
 8464 0316 DB00     		lsls	r3, r3, #3
 8465 0318 1B1B     		subs	r3, r3, r4
 8466 031a 1B01     		lsls	r3, r3, #4
 8467 031c 1344     		add	r3, r3, r2
 8468 031e CC33     		adds	r3, r3, #204
 8469 0320 1960     		str	r1, [r3]
1336:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8470              		.loc 1 1336 0
 8471 0322 3A4B     		ldr	r3, .L482+16
 8472 0324 1B68     		ldr	r3, [r3]	@ float
 8473 0326 FB60     		str	r3, [r7, #12]	@ float
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8474              		.loc 1 1337 0
 8475 0328 0023     		movs	r3, #0
 8476 032a BB75     		strb	r3, [r7, #22]
 8477 032c 0EE0     		b	.L414
 8478              	.L415:
1338:..\src/command_processing.c ****                 }
 8479              		.loc 1 1338 0 discriminator 3
 8480 032e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8481 0330 C3F10303 		rsb	r3, r3, #3
 8482 0334 07F10802 		add	r2, r7, #8
 8483 0338 1344     		add	r3, r3, r2
 8484 033a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8485 033c 07F10C01 		add	r1, r7, #12
 8486 0340 0A44     		add	r2, r2, r1
 8487 0342 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8488 0344 1A70     		strb	r2, [r3]
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8489              		.loc 1 1337 0 discriminator 3
 8490 0346 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8491 0348 0133     		adds	r3, r3, #1
 8492 034a BB75     		strb	r3, [r7, #22]
 8493              	.L414:
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8494              		.loc 1 1337 0 is_stmt 0 discriminator 1
 8495 034c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8496 034e 032B     		cmp	r3, #3
 8497 0350 EDD9     		bls	.L415
1340:..\src/command_processing.c ****             }
 8498              		.loc 1 1340 0 is_stmt 1
 8499 0352 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8500 0354 BB68     		ldr	r3, [r7, #8]	@ float
 8501 0356 4FF08F41 		mov	r1, #1199570944
 8502 035a 1846     		mov	r0, r3
 8503 035c FFF7FEFF 		bl	__aeabi_fmul
 8504 0360 0346     		mov	r3, r0
 8505 0362 1846     		mov	r0, r3
 8506 0364 FFF7FEFF 		bl	__aeabi_f2iz
 8507 0368 0146     		mov	r1, r0
 8508 036a 264A     		ldr	r2, .L482+8
 8509 036c 2346     		mov	r3, r4
 8510 036e DB00     		lsls	r3, r3, #3
 8511 0370 1B1B     		subs	r3, r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 204


 8512 0372 1B01     		lsls	r3, r3, #4
 8513 0374 1344     		add	r3, r3, r2
 8514 0376 D033     		adds	r3, r3, #208
 8515 0378 1960     		str	r1, [r3]
 8516              		.loc 1 1342 0
 8517 037a 01F0A6B8 		b	.L416
 8518              	.L385:
1343:..\src/command_processing.c ****             
1344:..\src/command_processing.c ****         case 3:         //Current PID
1345:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 8519              		.loc 1 1345 0
 8520 037e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8521 0380 1E49     		ldr	r1, .L482
 8522 0382 1346     		mov	r3, r2
 8523 0384 DB00     		lsls	r3, r3, #3
 8524 0386 9B1A     		subs	r3, r3, r2
 8525 0388 1B01     		lsls	r3, r3, #4
 8526 038a 0B44     		add	r3, r3, r1
 8527 038c 03F20F13 		addw	r3, r3, #271
 8528 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8529 0392 032B     		cmp	r3, #3
 8530 0394 00F09080 		beq	.L417
1346:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 8531              		.loc 1 1346 0
 8532 0398 194B     		ldr	r3, .L482+4
 8533 039a 1B68     		ldr	r3, [r3]	@ float
 8534 039c FB60     		str	r3, [r7, #12]	@ float
1347:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8535              		.loc 1 1347 0
 8536 039e 0023     		movs	r3, #0
 8537 03a0 BB75     		strb	r3, [r7, #22]
 8538 03a2 0EE0     		b	.L418
 8539              	.L419:
1348:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8540              		.loc 1 1348 0 discriminator 3
 8541 03a4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8542 03a6 C3F10303 		rsb	r3, r3, #3
 8543 03aa 07F10802 		add	r2, r7, #8
 8544 03ae 1344     		add	r3, r3, r2
 8545 03b0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8546 03b2 07F10C01 		add	r1, r7, #12
 8547 03b6 0A44     		add	r2, r2, r1
 8548 03b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8549 03ba 1A70     		strb	r2, [r3]
1347:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8550              		.loc 1 1347 0 discriminator 3
 8551 03bc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8552 03be 0133     		adds	r3, r3, #1
 8553 03c0 BB75     		strb	r3, [r7, #22]
 8554              	.L418:
1347:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8555              		.loc 1 1347 0 is_stmt 0 discriminator 1
 8556 03c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8557 03c4 032B     		cmp	r3, #3
 8558 03c6 EDD9     		bls	.L419
1349:..\src/command_processing.c ****                 }
1350:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 205


 8559              		.loc 1 1350 0 is_stmt 1
 8560 03c8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8561 03ca BB68     		ldr	r3, [r7, #8]	@ float
 8562 03cc 4FF08F41 		mov	r1, #1199570944
 8563 03d0 1846     		mov	r0, r3
 8564 03d2 FFF7FEFF 		bl	__aeabi_fmul
 8565 03d6 0346     		mov	r3, r0
 8566 03d8 1846     		mov	r0, r3
 8567 03da FFF7FEFF 		bl	__aeabi_f2iz
 8568 03de 0146     		mov	r1, r0
 8569 03e0 084A     		ldr	r2, .L482+8
 8570 03e2 2346     		mov	r3, r4
 8571 03e4 DB00     		lsls	r3, r3, #3
 8572 03e6 1B1B     		subs	r3, r3, r4
 8573 03e8 1B01     		lsls	r3, r3, #4
 8574 03ea 1344     		add	r3, r3, r2
 8575 03ec BC33     		adds	r3, r3, #188
 8576 03ee 1960     		str	r1, [r3]
1351:..\src/command_processing.c ****                 
1352:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 8577              		.loc 1 1352 0
 8578 03f0 054B     		ldr	r3, .L482+12
 8579 03f2 1B68     		ldr	r3, [r3]	@ float
 8580 03f4 FB60     		str	r3, [r7, #12]	@ float
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8581              		.loc 1 1353 0
 8582 03f6 0023     		movs	r3, #0
 8583 03f8 BB75     		strb	r3, [r7, #22]
 8584 03fa 18E0     		b	.L420
 8585              	.L483:
 8586              		.align	2
 8587              	.L482:
 8588 03fc 00000000 		.word	c_mem
 8589 0400 03000000 		.word	g_rx+3
 8590 0404 00000000 		.word	g_mem
 8591 0408 07000000 		.word	g_rx+7
 8592 040c 0B000000 		.word	g_rx+11
 8593              	.L421:
1354:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8594              		.loc 1 1354 0 discriminator 3
 8595 0410 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8596 0412 C3F10303 		rsb	r3, r3, #3
 8597 0416 07F10802 		add	r2, r7, #8
 8598 041a 1344     		add	r3, r3, r2
 8599 041c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8600 041e 07F10C01 		add	r1, r7, #12
 8601 0422 0A44     		add	r2, r2, r1
 8602 0424 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8603 0426 1A70     		strb	r2, [r3]
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8604              		.loc 1 1353 0 discriminator 3
 8605 0428 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8606 042a 0133     		adds	r3, r3, #1
 8607 042c BB75     		strb	r3, [r7, #22]
 8608              	.L420:
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8609              		.loc 1 1353 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 206


 8610 042e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8611 0430 032B     		cmp	r3, #3
 8612 0432 EDD9     		bls	.L421
1355:..\src/command_processing.c ****                 }
1356:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 8613              		.loc 1 1356 0 is_stmt 1
 8614 0434 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8615 0436 BB68     		ldr	r3, [r7, #8]	@ float
 8616 0438 4FF08F41 		mov	r1, #1199570944
 8617 043c 1846     		mov	r0, r3
 8618 043e FFF7FEFF 		bl	__aeabi_fmul
 8619 0442 0346     		mov	r3, r0
 8620 0444 1846     		mov	r0, r3
 8621 0446 FFF7FEFF 		bl	__aeabi_f2iz
 8622 044a 0146     		mov	r1, r0
 8623 044c B64A     		ldr	r2, .L484
 8624 044e 2346     		mov	r3, r4
 8625 0450 DB00     		lsls	r3, r3, #3
 8626 0452 1B1B     		subs	r3, r3, r4
 8627 0454 1B01     		lsls	r3, r3, #4
 8628 0456 1344     		add	r3, r3, r2
 8629 0458 C033     		adds	r3, r3, #192
 8630 045a 1960     		str	r1, [r3]
1357:..\src/command_processing.c ****                 
1358:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 8631              		.loc 1 1358 0
 8632 045c B34B     		ldr	r3, .L484+4
 8633 045e 1B68     		ldr	r3, [r3]	@ float
 8634 0460 FB60     		str	r3, [r7, #12]	@ float
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8635              		.loc 1 1359 0
 8636 0462 0023     		movs	r3, #0
 8637 0464 BB75     		strb	r3, [r7, #22]
 8638 0466 0EE0     		b	.L422
 8639              	.L423:
1360:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8640              		.loc 1 1360 0 discriminator 3
 8641 0468 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8642 046a C3F10303 		rsb	r3, r3, #3
 8643 046e 07F10802 		add	r2, r7, #8
 8644 0472 1344     		add	r3, r3, r2
 8645 0474 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8646 0476 07F10C01 		add	r1, r7, #12
 8647 047a 0A44     		add	r2, r2, r1
 8648 047c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8649 047e 1A70     		strb	r2, [r3]
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8650              		.loc 1 1359 0 discriminator 3
 8651 0480 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8652 0482 0133     		adds	r3, r3, #1
 8653 0484 BB75     		strb	r3, [r7, #22]
 8654              	.L422:
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8655              		.loc 1 1359 0 is_stmt 0 discriminator 1
 8656 0486 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8657 0488 032B     		cmp	r3, #3
 8658 048a EDD9     		bls	.L423
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 207


1361:..\src/command_processing.c ****                 }
1362:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 8659              		.loc 1 1362 0 is_stmt 1
 8660 048c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8661 048e BB68     		ldr	r3, [r7, #8]	@ float
 8662 0490 4FF08F41 		mov	r1, #1199570944
 8663 0494 1846     		mov	r0, r3
 8664 0496 FFF7FEFF 		bl	__aeabi_fmul
 8665 049a 0346     		mov	r3, r0
 8666 049c 1846     		mov	r0, r3
 8667 049e FFF7FEFF 		bl	__aeabi_f2iz
 8668 04a2 0146     		mov	r1, r0
 8669 04a4 A04A     		ldr	r2, .L484
 8670 04a6 2346     		mov	r3, r4
 8671 04a8 DB00     		lsls	r3, r3, #3
 8672 04aa 1B1B     		subs	r3, r3, r4
 8673 04ac 1B01     		lsls	r3, r3, #4
 8674 04ae 1344     		add	r3, r3, r2
 8675 04b0 C433     		adds	r3, r3, #196
 8676 04b2 1960     		str	r1, [r3]
1363:..\src/command_processing.c ****             }
1364:..\src/command_processing.c ****             else {
1365:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1366:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1367:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1368:..\src/command_processing.c ****                 }
1369:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1370:..\src/command_processing.c ****                 
1371:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1373:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1374:..\src/command_processing.c ****                 }
1375:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1376:..\src/command_processing.c ****                 
1377:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1379:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1380:..\src/command_processing.c ****                 }
1381:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1382:..\src/command_processing.c ****             }            
1383:..\src/command_processing.c ****             break;  
 8677              		.loc 1 1383 0
 8678 04b4 01F009B8 		b	.L416
 8679              	.L417:
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8680              		.loc 1 1365 0
 8681 04b8 9D4B     		ldr	r3, .L484+8
 8682 04ba 1B68     		ldr	r3, [r3]	@ float
 8683 04bc FB60     		str	r3, [r7, #12]	@ float
1366:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8684              		.loc 1 1366 0
 8685 04be 0023     		movs	r3, #0
 8686 04c0 BB75     		strb	r3, [r7, #22]
 8687 04c2 0EE0     		b	.L425
 8688              	.L426:
1367:..\src/command_processing.c ****                 }
 8689              		.loc 1 1367 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 208


 8690 04c4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8691 04c6 C3F10303 		rsb	r3, r3, #3
 8692 04ca 07F10802 		add	r2, r7, #8
 8693 04ce 1344     		add	r3, r3, r2
 8694 04d0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8695 04d2 07F10C01 		add	r1, r7, #12
 8696 04d6 0A44     		add	r2, r2, r1
 8697 04d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8698 04da 1A70     		strb	r2, [r3]
1366:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8699              		.loc 1 1366 0 discriminator 3
 8700 04dc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8701 04de 0133     		adds	r3, r3, #1
 8702 04e0 BB75     		strb	r3, [r7, #22]
 8703              	.L425:
1366:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8704              		.loc 1 1366 0 is_stmt 0 discriminator 1
 8705 04e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8706 04e4 032B     		cmp	r3, #3
 8707 04e6 EDD9     		bls	.L426
1369:..\src/command_processing.c ****                 
 8708              		.loc 1 1369 0 is_stmt 1
 8709 04e8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8710 04ea BB68     		ldr	r3, [r7, #8]	@ float
 8711 04ec 4FF08F41 		mov	r1, #1199570944
 8712 04f0 1846     		mov	r0, r3
 8713 04f2 FFF7FEFF 		bl	__aeabi_fmul
 8714 04f6 0346     		mov	r3, r0
 8715 04f8 1846     		mov	r0, r3
 8716 04fa FFF7FEFF 		bl	__aeabi_f2iz
 8717 04fe 0146     		mov	r1, r0
 8718 0500 894A     		ldr	r2, .L484
 8719 0502 2346     		mov	r3, r4
 8720 0504 DB00     		lsls	r3, r3, #3
 8721 0506 1B1B     		subs	r3, r3, r4
 8722 0508 1B01     		lsls	r3, r3, #4
 8723 050a 1344     		add	r3, r3, r2
 8724 050c D433     		adds	r3, r3, #212
 8725 050e 1960     		str	r1, [r3]
1371:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8726              		.loc 1 1371 0
 8727 0510 884B     		ldr	r3, .L484+12
 8728 0512 1B68     		ldr	r3, [r3]	@ float
 8729 0514 FB60     		str	r3, [r7, #12]	@ float
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8730              		.loc 1 1372 0
 8731 0516 0023     		movs	r3, #0
 8732 0518 BB75     		strb	r3, [r7, #22]
 8733 051a 0EE0     		b	.L427
 8734              	.L428:
1373:..\src/command_processing.c ****                 }
 8735              		.loc 1 1373 0 discriminator 3
 8736 051c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8737 051e C3F10303 		rsb	r3, r3, #3
 8738 0522 07F10802 		add	r2, r7, #8
 8739 0526 1344     		add	r3, r3, r2
 8740 0528 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 209


 8741 052a 07F10C01 		add	r1, r7, #12
 8742 052e 0A44     		add	r2, r2, r1
 8743 0530 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8744 0532 1A70     		strb	r2, [r3]
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8745              		.loc 1 1372 0 discriminator 3
 8746 0534 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8747 0536 0133     		adds	r3, r3, #1
 8748 0538 BB75     		strb	r3, [r7, #22]
 8749              	.L427:
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8750              		.loc 1 1372 0 is_stmt 0 discriminator 1
 8751 053a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8752 053c 032B     		cmp	r3, #3
 8753 053e EDD9     		bls	.L428
1375:..\src/command_processing.c ****                 
 8754              		.loc 1 1375 0 is_stmt 1
 8755 0540 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8756 0542 BB68     		ldr	r3, [r7, #8]	@ float
 8757 0544 4FF08F41 		mov	r1, #1199570944
 8758 0548 1846     		mov	r0, r3
 8759 054a FFF7FEFF 		bl	__aeabi_fmul
 8760 054e 0346     		mov	r3, r0
 8761 0550 1846     		mov	r0, r3
 8762 0552 FFF7FEFF 		bl	__aeabi_f2iz
 8763 0556 0146     		mov	r1, r0
 8764 0558 734A     		ldr	r2, .L484
 8765 055a 2346     		mov	r3, r4
 8766 055c DB00     		lsls	r3, r3, #3
 8767 055e 1B1B     		subs	r3, r3, r4
 8768 0560 1B01     		lsls	r3, r3, #4
 8769 0562 1344     		add	r3, r3, r2
 8770 0564 D833     		adds	r3, r3, #216
 8771 0566 1960     		str	r1, [r3]
1377:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8772              		.loc 1 1377 0
 8773 0568 704B     		ldr	r3, .L484+4
 8774 056a 1B68     		ldr	r3, [r3]	@ float
 8775 056c FB60     		str	r3, [r7, #12]	@ float
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8776              		.loc 1 1378 0
 8777 056e 0023     		movs	r3, #0
 8778 0570 BB75     		strb	r3, [r7, #22]
 8779 0572 0EE0     		b	.L429
 8780              	.L430:
1379:..\src/command_processing.c ****                 }
 8781              		.loc 1 1379 0 discriminator 3
 8782 0574 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8783 0576 C3F10303 		rsb	r3, r3, #3
 8784 057a 07F10802 		add	r2, r7, #8
 8785 057e 1344     		add	r3, r3, r2
 8786 0580 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8787 0582 07F10C01 		add	r1, r7, #12
 8788 0586 0A44     		add	r2, r2, r1
 8789 0588 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8790 058a 1A70     		strb	r2, [r3]
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 210


 8791              		.loc 1 1378 0 discriminator 3
 8792 058c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8793 058e 0133     		adds	r3, r3, #1
 8794 0590 BB75     		strb	r3, [r7, #22]
 8795              	.L429:
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8796              		.loc 1 1378 0 is_stmt 0 discriminator 1
 8797 0592 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8798 0594 032B     		cmp	r3, #3
 8799 0596 EDD9     		bls	.L430
1381:..\src/command_processing.c ****             }            
 8800              		.loc 1 1381 0 is_stmt 1
 8801 0598 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8802 059a BB68     		ldr	r3, [r7, #8]	@ float
 8803 059c 4FF08F41 		mov	r1, #1199570944
 8804 05a0 1846     		mov	r0, r3
 8805 05a2 FFF7FEFF 		bl	__aeabi_fmul
 8806 05a6 0346     		mov	r3, r0
 8807 05a8 1846     		mov	r0, r3
 8808 05aa FFF7FEFF 		bl	__aeabi_f2iz
 8809 05ae 0146     		mov	r1, r0
 8810 05b0 5D4A     		ldr	r2, .L484
 8811 05b2 2346     		mov	r3, r4
 8812 05b4 DB00     		lsls	r3, r3, #3
 8813 05b6 1B1B     		subs	r3, r3, r4
 8814 05b8 1B01     		lsls	r3, r3, #4
 8815 05ba 1344     		add	r3, r3, r2
 8816 05bc DC33     		adds	r3, r3, #220
 8817 05be 1960     		str	r1, [r3]
 8818              		.loc 1 1383 0
 8819 05c0 00F083BF 		b	.L416
 8820              	.L386:
1384:..\src/command_processing.c ****             
1385:..\src/command_processing.c ****         case 5:         //Input mode
1386:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 8821              		.loc 1 1386 0
 8822 05c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8823 05c6 5C4B     		ldr	r3, .L484+16
 8824 05c8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 8825 05ca 5749     		ldr	r1, .L484
 8826 05cc 1346     		mov	r3, r2
 8827 05ce DB00     		lsls	r3, r3, #3
 8828 05d0 9B1A     		subs	r3, r3, r2
 8829 05d2 1B01     		lsls	r3, r3, #4
 8830 05d4 0B44     		add	r3, r3, r1
 8831 05d6 03F58773 		add	r3, r3, #270
 8832 05da 0246     		mov	r2, r0
 8833 05dc 1A70     		strb	r2, [r3]
1387:..\src/command_processing.c ****             
1388:..\src/command_processing.c ****             // Hold the actual position
1389:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 8834              		.loc 1 1389 0
 8835 05de 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8836 05e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8837 05e2 5148     		ldr	r0, .L484
 8838 05e4 1346     		mov	r3, r2
 8839 05e6 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 211


 8840 05e8 9B1A     		subs	r3, r3, r2
 8841 05ea 1B01     		lsls	r3, r3, #4
 8842 05ec 0344     		add	r3, r3, r0
 8843 05ee 03F58873 		add	r3, r3, #272
 8844 05f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8845 05f4 1846     		mov	r0, r3
 8846 05f6 514A     		ldr	r2, .L484+20
 8847 05f8 3423     		movs	r3, #52
 8848 05fa 03FB00F3 		mul	r3, r3, r0
 8849 05fe 1344     		add	r3, r3, r2
 8850 0600 1A68     		ldr	r2, [r3]
 8851 0602 4F48     		ldr	r0, .L484+24
 8852 0604 0B01     		lsls	r3, r1, #4
 8853 0606 0344     		add	r3, r3, r0
 8854 0608 1A60     		str	r2, [r3]
1390:..\src/command_processing.c ****             break;   
 8855              		.loc 1 1390 0
 8856 060a 00F05EBF 		b	.L416
 8857              	.L387:
1391:..\src/command_processing.c **** 
1392:..\src/command_processing.c ****         case 8:         //Measurement Offset
1393:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 8858              		.loc 1 1393 0
 8859 060e 0023     		movs	r3, #0
 8860 0610 FB75     		strb	r3, [r7, #23]
 8861 0612 7EE0     		b	.L431
 8862              	.L432:
1394:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8863              		.loc 1 1394 0 discriminator 3
 8864 0614 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8865 0616 4449     		ldr	r1, .L484
 8866 0618 1346     		mov	r3, r2
 8867 061a DB00     		lsls	r3, r3, #3
 8868 061c 9B1A     		subs	r3, r3, r2
 8869 061e 1B01     		lsls	r3, r3, #4
 8870 0620 0B44     		add	r3, r3, r1
 8871 0622 03F58873 		add	r3, r3, #272
 8872 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8873 0628 1C46     		mov	r4, r3
 8874 062a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8875 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8876 062e 5B00     		lsls	r3, r3, #1
 8877 0630 0333     		adds	r3, r3, #3
 8878 0632 4149     		ldr	r1, .L484+16
 8879 0634 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8880 0636 1B02     		lsls	r3, r3, #8
 8881 0638 19B2     		sxth	r1, r3
 8882 063a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8883 063c 0233     		adds	r3, r3, #2
 8884 063e 5B00     		lsls	r3, r3, #1
 8885 0640 3D48     		ldr	r0, .L484+16
 8886 0642 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 8887 0644 1BB2     		sxth	r3, r3
 8888 0646 0B43     		orrs	r3, r3, r1
 8889 0648 1BB2     		sxth	r3, r3
 8890 064a 1846     		mov	r0, r3
 8891 064c 3649     		ldr	r1, .L484
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 212


 8892 064e 2346     		mov	r3, r4
 8893 0650 5B00     		lsls	r3, r3, #1
 8894 0652 2344     		add	r3, r3, r4
 8895 0654 9B00     		lsls	r3, r3, #2
 8896 0656 1344     		add	r3, r3, r2
 8897 0658 6633     		adds	r3, r3, #102
 8898 065a 41F82300 		str	r0, [r1, r3, lsl #2]
1395:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 8899              		.loc 1 1395 0 discriminator 3
 8900 065e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8901 0660 3149     		ldr	r1, .L484
 8902 0662 1346     		mov	r3, r2
 8903 0664 DB00     		lsls	r3, r3, #3
 8904 0666 9B1A     		subs	r3, r3, r2
 8905 0668 1B01     		lsls	r3, r3, #4
 8906 066a 0B44     		add	r3, r3, r1
 8907 066c 03F58873 		add	r3, r3, #272
 8908 0670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8909 0672 1D46     		mov	r5, r3
 8910 0674 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 8911 0676 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8912 0678 2B48     		ldr	r0, .L484
 8913 067a 1346     		mov	r3, r2
 8914 067c DB00     		lsls	r3, r3, #3
 8915 067e 9B1A     		subs	r3, r3, r2
 8916 0680 1B01     		lsls	r3, r3, #4
 8917 0682 0344     		add	r3, r3, r0
 8918 0684 03F58873 		add	r3, r3, #272
 8919 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8920 068a 1C46     		mov	r4, r3
 8921 068c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8922 068e 2648     		ldr	r0, .L484
 8923 0690 2346     		mov	r3, r4
 8924 0692 5B00     		lsls	r3, r3, #1
 8925 0694 2344     		add	r3, r3, r4
 8926 0696 9B00     		lsls	r3, r3, #2
 8927 0698 1344     		add	r3, r3, r2
 8928 069a 6633     		adds	r3, r3, #102
 8929 069c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 8930 06a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8931 06a2 214C     		ldr	r4, .L484
 8932 06a4 1346     		mov	r3, r2
 8933 06a6 DB00     		lsls	r3, r3, #3
 8934 06a8 9B1A     		subs	r3, r3, r2
 8935 06aa 1B01     		lsls	r3, r3, #4
 8936 06ac 2344     		add	r3, r3, r4
 8937 06ae 03F58873 		add	r3, r3, #272
 8938 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8939 06b4 1E46     		mov	r6, r3
 8940 06b6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8941 06b8 1B4C     		ldr	r4, .L484
 8942 06ba 3346     		mov	r3, r6
 8943 06bc 5B00     		lsls	r3, r3, #1
 8944 06be 3344     		add	r3, r3, r6
 8945 06c0 1B01     		lsls	r3, r3, #4
 8946 06c2 2344     		add	r3, r3, r4
 8947 06c4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 213


 8948 06c6 03F29513 		addw	r3, r3, #405
 8949 06ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8950 06cc 00FA03F2 		lsl	r2, r0, r3
 8951 06d0 1548     		ldr	r0, .L484
 8952 06d2 2B46     		mov	r3, r5
 8953 06d4 5B00     		lsls	r3, r3, #1
 8954 06d6 2B44     		add	r3, r3, r5
 8955 06d8 9B00     		lsls	r3, r3, #2
 8956 06da 0B44     		add	r3, r3, r1
 8957 06dc 6633     		adds	r3, r3, #102
 8958 06de 40F82320 		str	r2, [r0, r3, lsl #2]
1396:..\src/command_processing.c **** 
1397:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 8959              		.loc 1 1397 0 discriminator 3
 8960 06e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8961 06e4 1049     		ldr	r1, .L484
 8962 06e6 1346     		mov	r3, r2
 8963 06e8 DB00     		lsls	r3, r3, #3
 8964 06ea 9B1A     		subs	r3, r3, r2
 8965 06ec 1B01     		lsls	r3, r3, #4
 8966 06ee 0B44     		add	r3, r3, r1
 8967 06f0 03F58873 		add	r3, r3, #272
 8968 06f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8969 06f6 1846     		mov	r0, r3
 8970 06f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8971 06fa 1049     		ldr	r1, .L484+20
 8972 06fc 3422     		movs	r2, #52
 8973 06fe 02FB00F2 		mul	r2, r2, r0
 8974 0702 0A44     		add	r2, r2, r1
 8975 0704 1344     		add	r3, r3, r2
 8976 0706 1833     		adds	r3, r3, #24
 8977 0708 0022     		movs	r2, #0
 8978 070a 1A70     		strb	r2, [r3]
1393:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8979              		.loc 1 1393 0 discriminator 3
 8980 070c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8981 070e 0133     		adds	r3, r3, #1
 8982 0710 FB75     		strb	r3, [r7, #23]
 8983              	.L431:
1393:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8984              		.loc 1 1393 0 is_stmt 0 discriminator 1
 8985 0712 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8986 0714 022B     		cmp	r3, #2
 8987 0716 7FF67DAF 		bls	.L432
1398:..\src/command_processing.c ****             }
1399:..\src/command_processing.c ****             reset_last_value_flag[MOTOR_IDX] = 1;
 8988              		.loc 1 1399 0 is_stmt 1
 8989 071a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 8990 071c 094A     		ldr	r2, .L484+28
 8991 071e 0121     		movs	r1, #1
 8992 0720 D154     		strb	r1, [r2, r3]
1400:..\src/command_processing.c ****             break;
 8993              		.loc 1 1400 0
 8994 0722 00F0D2BE 		b	.L416
 8995              	.L485:
 8996 0726 00BF     		.align	2
 8997              	.L484:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 214


 8998 0728 00000000 		.word	g_mem
 8999 072c 0B000000 		.word	g_rx+11
 9000 0730 03000000 		.word	g_rx+3
 9001 0734 07000000 		.word	g_rx+7
 9002 0738 00000000 		.word	g_rx
 9003 073c 00000000 		.word	g_meas
 9004 0740 00000000 		.word	g_refNew
 9005 0744 00000000 		.word	reset_last_value_flag
 9006              	.L388:
1401:..\src/command_processing.c ****     
1402:..\src/command_processing.c ****         case 11:        //Position limits
1403:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 9007              		.loc 1 1403 0
 9008 0748 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9009 074a C14B     		ldr	r3, .L486
 9010 074c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9011 074e 1906     		lsls	r1, r3, #24
 9012 0750 BF4B     		ldr	r3, .L486
 9013 0752 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9014 0754 1B04     		lsls	r3, r3, #16
 9015 0756 1943     		orrs	r1, r1, r3
 9016 0758 BD4B     		ldr	r3, .L486
 9017 075a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9018 075c 1B02     		lsls	r3, r3, #8
 9019 075e 0B43     		orrs	r3, r3, r1
 9020 0760 BB49     		ldr	r1, .L486
 9021 0762 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 9022 0764 1943     		orrs	r1, r1, r3
 9023 0766 BB48     		ldr	r0, .L486+4
 9024 0768 1346     		mov	r3, r2
 9025 076a DB00     		lsls	r3, r3, #3
 9026 076c 9B1A     		subs	r3, r3, r2
 9027 076e 1B01     		lsls	r3, r3, #4
 9028 0770 0344     		add	r3, r3, r0
 9029 0772 E433     		adds	r3, r3, #228
 9030 0774 1960     		str	r1, [r3]
1404:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 9031              		.loc 1 1404 0
 9032 0776 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9033 0778 B54B     		ldr	r3, .L486
 9034 077a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 9035 077c 1906     		lsls	r1, r3, #24
 9036 077e B44B     		ldr	r3, .L486
 9037 0780 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 9038 0782 1B04     		lsls	r3, r3, #16
 9039 0784 1943     		orrs	r1, r1, r3
 9040 0786 B24B     		ldr	r3, .L486
 9041 0788 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 9042 078a 1B02     		lsls	r3, r3, #8
 9043 078c 0B43     		orrs	r3, r3, r1
 9044 078e B049     		ldr	r1, .L486
 9045 0790 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 9046 0792 1943     		orrs	r1, r1, r3
 9047 0794 AF48     		ldr	r0, .L486+4
 9048 0796 1346     		mov	r3, r2
 9049 0798 DB00     		lsls	r3, r3, #3
 9050 079a 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 215


 9051 079c 1B01     		lsls	r3, r3, #4
 9052 079e 0344     		add	r3, r3, r0
 9053 07a0 E833     		adds	r3, r3, #232
 9054 07a2 1960     		str	r1, [r3]
1405:..\src/command_processing.c **** 
1406:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 9055              		.loc 1 1406 0
 9056 07a4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9057 07a6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9058 07a8 AA48     		ldr	r0, .L486+4
 9059 07aa 0B46     		mov	r3, r1
 9060 07ac DB00     		lsls	r3, r3, #3
 9061 07ae 5B1A     		subs	r3, r3, r1
 9062 07b0 1B01     		lsls	r3, r3, #4
 9063 07b2 0344     		add	r3, r3, r0
 9064 07b4 E433     		adds	r3, r3, #228
 9065 07b6 1868     		ldr	r0, [r3]
 9066 07b8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9067 07ba A64C     		ldr	r4, .L486+4
 9068 07bc 0B46     		mov	r3, r1
 9069 07be DB00     		lsls	r3, r3, #3
 9070 07c0 5B1A     		subs	r3, r3, r1
 9071 07c2 1B01     		lsls	r3, r3, #4
 9072 07c4 2344     		add	r3, r3, r4
 9073 07c6 03F58873 		add	r3, r3, #272
 9074 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9075 07cc 1C46     		mov	r4, r3
 9076 07ce A149     		ldr	r1, .L486+4
 9077 07d0 2346     		mov	r3, r4
 9078 07d2 5B00     		lsls	r3, r3, #1
 9079 07d4 2344     		add	r3, r3, r4
 9080 07d6 1B01     		lsls	r3, r3, #4
 9081 07d8 0B44     		add	r3, r3, r1
 9082 07da 03F29513 		addw	r3, r3, #405
 9083 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9084 07e0 00FA03F1 		lsl	r1, r0, r3
 9085 07e4 9B48     		ldr	r0, .L486+4
 9086 07e6 1346     		mov	r3, r2
 9087 07e8 DB00     		lsls	r3, r3, #3
 9088 07ea 9B1A     		subs	r3, r3, r2
 9089 07ec 1B01     		lsls	r3, r3, #4
 9090 07ee 0344     		add	r3, r3, r0
 9091 07f0 E433     		adds	r3, r3, #228
 9092 07f2 1960     		str	r1, [r3]
1407:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 9093              		.loc 1 1407 0
 9094 07f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9095 07f6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9096 07f8 9648     		ldr	r0, .L486+4
 9097 07fa 0B46     		mov	r3, r1
 9098 07fc DB00     		lsls	r3, r3, #3
 9099 07fe 5B1A     		subs	r3, r3, r1
 9100 0800 1B01     		lsls	r3, r3, #4
 9101 0802 0344     		add	r3, r3, r0
 9102 0804 E833     		adds	r3, r3, #232
 9103 0806 1868     		ldr	r0, [r3]
 9104 0808 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 216


 9105 080a 924C     		ldr	r4, .L486+4
 9106 080c 0B46     		mov	r3, r1
 9107 080e DB00     		lsls	r3, r3, #3
 9108 0810 5B1A     		subs	r3, r3, r1
 9109 0812 1B01     		lsls	r3, r3, #4
 9110 0814 2344     		add	r3, r3, r4
 9111 0816 03F58873 		add	r3, r3, #272
 9112 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9113 081c 1C46     		mov	r4, r3
 9114 081e 8D49     		ldr	r1, .L486+4
 9115 0820 2346     		mov	r3, r4
 9116 0822 5B00     		lsls	r3, r3, #1
 9117 0824 2344     		add	r3, r3, r4
 9118 0826 1B01     		lsls	r3, r3, #4
 9119 0828 0B44     		add	r3, r3, r1
 9120 082a 03F29513 		addw	r3, r3, #405
 9121 082e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9122 0830 00FA03F1 		lsl	r1, r0, r3
 9123 0834 8748     		ldr	r0, .L486+4
 9124 0836 1346     		mov	r3, r2
 9125 0838 DB00     		lsls	r3, r3, #3
 9126 083a 9B1A     		subs	r3, r3, r2
 9127 083c 1B01     		lsls	r3, r3, #4
 9128 083e 0344     		add	r3, r3, r0
 9129 0840 E833     		adds	r3, r3, #232
 9130 0842 1960     		str	r1, [r3]
1408:..\src/command_processing.c ****             break;            
 9131              		.loc 1 1408 0
 9132 0844 00F041BE 		b	.L416
 9133              	.L389:
1409:..\src/command_processing.c **** 
1410:..\src/command_processing.c ****         case 23:        //Rest Position
1411:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 9134              		.loc 1 1411 0
 9135 0848 814B     		ldr	r3, .L486
 9136 084a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9137 084c 1A06     		lsls	r2, r3, #24
 9138 084e 804B     		ldr	r3, .L486
 9139 0850 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9140 0852 1B04     		lsls	r3, r3, #16
 9141 0854 1A43     		orrs	r2, r2, r3
 9142 0856 7E4B     		ldr	r3, .L486
 9143 0858 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9144 085a 1B02     		lsls	r3, r3, #8
 9145 085c 1343     		orrs	r3, r3, r2
 9146 085e 7C4A     		ldr	r2, .L486
 9147 0860 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 9148 0862 1343     		orrs	r3, r3, r2
 9149 0864 7B4A     		ldr	r2, .L486+4
 9150 0866 C2F8A032 		str	r3, [r2, #672]
1412:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 9151              		.loc 1 1412 0
 9152 086a 7A4B     		ldr	r3, .L486+4
 9153 086c D3F8A012 		ldr	r1, [r3, #672]
 9154 0870 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9155 0872 7848     		ldr	r0, .L486+4
 9156 0874 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 217


 9157 0876 DB00     		lsls	r3, r3, #3
 9158 0878 9B1A     		subs	r3, r3, r2
 9159 087a 1B01     		lsls	r3, r3, #4
 9160 087c 0344     		add	r3, r3, r0
 9161 087e 03F58873 		add	r3, r3, #272
 9162 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9163 0884 1846     		mov	r0, r3
 9164 0886 734A     		ldr	r2, .L486+4
 9165 0888 0346     		mov	r3, r0
 9166 088a 5B00     		lsls	r3, r3, #1
 9167 088c 0344     		add	r3, r3, r0
 9168 088e 1B01     		lsls	r3, r3, #4
 9169 0890 1344     		add	r3, r3, r2
 9170 0892 03F29513 		addw	r3, r3, #405
 9171 0896 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9172 0898 01FA03F3 		lsl	r3, r1, r3
 9173 089c 6D4A     		ldr	r2, .L486+4
 9174 089e C2F8A032 		str	r3, [r2, #672]
1413:..\src/command_processing.c ****             break; 
 9175              		.loc 1 1413 0
 9176 08a2 00F012BE 		b	.L416
 9177              	.L390:
1414:..\src/command_processing.c ****             
1415:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1416:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 9178              		.loc 1 1416 0
 9179 08a6 6A4B     		ldr	r3, .L486
 9180 08a8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9181 08aa 1A06     		lsls	r2, r3, #24
 9182 08ac 684B     		ldr	r3, .L486
 9183 08ae 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9184 08b0 1B04     		lsls	r3, r3, #16
 9185 08b2 1A43     		orrs	r2, r2, r3
 9186 08b4 664B     		ldr	r3, .L486
 9187 08b6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9188 08b8 1B02     		lsls	r3, r3, #8
 9189 08ba 1343     		orrs	r3, r3, r2
 9190 08bc 644A     		ldr	r2, .L486
 9191 08be 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 9192 08c0 1343     		orrs	r3, r3, r2
 9193 08c2 644A     		ldr	r2, .L486+4
 9194 08c4 C2F8A432 		str	r3, [r2, #676]
1417:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 9195              		.loc 1 1417 0
 9196 08c8 624B     		ldr	r3, .L486+4
 9197 08ca D3F8A432 		ldr	r3, [r3, #676]
 9198 08ce 092B     		cmp	r3, #9
 9199 08d0 00F3F285 		bgt	.L477
 9200              		.loc 1 1417 0 is_stmt 0 discriminator 1
 9201 08d4 5F4B     		ldr	r3, .L486+4
 9202 08d6 0A22     		movs	r2, #10
 9203 08d8 C3F8A422 		str	r2, [r3, #676]
1418:..\src/command_processing.c ****            break; 
 9204              		.loc 1 1418 0 is_stmt 1 discriminator 1
 9205 08dc 00F0ECBD 		b	.L477
 9206              	.L391:
1419:..\src/command_processing.c ****             
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 218


1420:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1421:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 9207              		.loc 1 1421 0
 9208 08e0 5B4B     		ldr	r3, .L486
 9209 08e2 DB78     		ldrb	r3, [r3, #3]
 9210 08e4 BB74     		strb	r3, [r7, #18]
1422:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 9211              		.loc 1 1422 0
 9212 08e6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9213 08e8 002B     		cmp	r3, #0
 9214 08ea 04D0     		beq	.L434
1423:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 9215              		.loc 1 1423 0
 9216 08ec 594B     		ldr	r3, .L486+4
 9217 08ee 0122     		movs	r2, #1
 9218 08f0 83F8A720 		strb	r2, [r3, #167]
 9219 08f4 03E0     		b	.L435
 9220              	.L434:
1424:..\src/command_processing.c ****             } else {            // 0
1425:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 9221              		.loc 1 1425 0
 9222 08f6 574B     		ldr	r3, .L486+4
 9223 08f8 0022     		movs	r2, #0
 9224 08fa 83F8A720 		strb	r2, [r3, #167]
 9225              	.L435:
1426:..\src/command_processing.c ****             }
1427:..\src/command_processing.c **** 			reset_last_value_flag[MOTOR_IDX] = 1;
 9226              		.loc 1 1427 0
 9227 08fe 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 9228 0900 554A     		ldr	r2, .L486+8
 9229 0902 0121     		movs	r1, #1
 9230 0904 D154     		strb	r1, [r2, r3]
1428:..\src/command_processing.c **** 
1429:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 9231              		.loc 1 1429 0
 9232 0906 534B     		ldr	r3, .L486+4
 9233 0908 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 9234 090c 002B     		cmp	r3, #0
 9235 090e 40F0D585 		bne	.L478
1430:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1431:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 9236              		.loc 1 1431 0
 9237 0912 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9238 0914 4F4B     		ldr	r3, .L486+4
 9239 0916 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 9240 091a 4E49     		ldr	r1, .L486+4
 9241 091c 1346     		mov	r3, r2
 9242 091e DB00     		lsls	r3, r3, #3
 9243 0920 9B1A     		subs	r3, r3, r2
 9244 0922 1B01     		lsls	r3, r3, #4
 9245 0924 0B44     		add	r3, r3, r1
 9246 0926 03F58873 		add	r3, r3, #272
 9247 092a 0246     		mov	r2, r0
 9248 092c 1A70     		strb	r2, [r3]
1432:..\src/command_processing.c ****                 
1433:..\src/command_processing.c ****                 // Change also gears parameters
1434:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 219


 9249              		.loc 1 1434 0
 9250 092e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9251 0930 4849     		ldr	r1, .L486+4
 9252 0932 1346     		mov	r3, r2
 9253 0934 DB00     		lsls	r3, r3, #3
 9254 0936 9B1A     		subs	r3, r3, r2
 9255 0938 1B01     		lsls	r3, r3, #4
 9256 093a 0B44     		add	r3, r3, r1
 9257 093c 03F58873 		add	r3, r3, #272
 9258 0940 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9259 0942 1946     		mov	r1, r3
 9260 0944 434A     		ldr	r2, .L486+4
 9261 0946 0B46     		mov	r3, r1
 9262 0948 5B00     		lsls	r3, r3, #1
 9263 094a 0B44     		add	r3, r3, r1
 9264 094c 1B01     		lsls	r3, r3, #4
 9265 094e 1344     		add	r3, r3, r2
 9266 0950 03F5D873 		add	r3, r3, #432
 9267 0954 0122     		movs	r2, #1
 9268 0956 1A70     		strb	r2, [r3]
1435:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 9269              		.loc 1 1435 0
 9270 0958 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9271 095a 3E49     		ldr	r1, .L486+4
 9272 095c 1346     		mov	r3, r2
 9273 095e DB00     		lsls	r3, r3, #3
 9274 0960 9B1A     		subs	r3, r3, r2
 9275 0962 1B01     		lsls	r3, r3, #4
 9276 0964 0B44     		add	r3, r3, r1
 9277 0966 03F58873 		add	r3, r3, #272
 9278 096a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9279 096c 1946     		mov	r1, r3
 9280 096e 394A     		ldr	r2, .L486+4
 9281 0970 0B46     		mov	r3, r1
 9282 0972 5B00     		lsls	r3, r3, #1
 9283 0974 0B44     		add	r3, r3, r1
 9284 0976 1B01     		lsls	r3, r3, #4
 9285 0978 1344     		add	r3, r3, r2
 9286 097a 03F2B513 		addw	r3, r3, #437
 9287 097e 2322     		movs	r2, #35
 9288 0980 1A70     		strb	r2, [r3]
1436:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 9289              		.loc 1 1436 0
 9290 0982 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9291 0984 3349     		ldr	r1, .L486+4
 9292 0986 1346     		mov	r3, r2
 9293 0988 DB00     		lsls	r3, r3, #3
 9294 098a 9B1A     		subs	r3, r3, r2
 9295 098c 1B01     		lsls	r3, r3, #4
 9296 098e 0B44     		add	r3, r3, r1
 9297 0990 03F58873 		add	r3, r3, #272
 9298 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9299 0996 1946     		mov	r1, r3
 9300 0998 2E4A     		ldr	r2, .L486+4
 9301 099a 0B46     		mov	r3, r1
 9302 099c 5B00     		lsls	r3, r3, #1
 9303 099e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 220


 9304 09a0 1B01     		lsls	r3, r3, #4
 9305 09a2 1344     		add	r3, r3, r2
 9306 09a4 03F5DB73 		add	r3, r3, #438
 9307 09a8 0322     		movs	r2, #3
 9308 09aa 1A70     		strb	r2, [r3]
1437:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 9309              		.loc 1 1437 0
 9310 09ac 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9311 09ae 2949     		ldr	r1, .L486+4
 9312 09b0 1346     		mov	r3, r2
 9313 09b2 DB00     		lsls	r3, r3, #3
 9314 09b4 9B1A     		subs	r3, r3, r2
 9315 09b6 1B01     		lsls	r3, r3, #4
 9316 09b8 0B44     		add	r3, r3, r1
 9317 09ba 03F58873 		add	r3, r3, #272
 9318 09be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9319 09c0 1946     		mov	r1, r3
 9320 09c2 244A     		ldr	r2, .L486+4
 9321 09c4 0B46     		mov	r3, r1
 9322 09c6 5B00     		lsls	r3, r3, #1
 9323 09c8 0B44     		add	r3, r3, r1
 9324 09ca 1B01     		lsls	r3, r3, #4
 9325 09cc 1344     		add	r3, r3, r2
 9326 09ce 03F2B713 		addw	r3, r3, #439
 9327 09d2 FF22     		movs	r2, #255
 9328 09d4 1A70     		strb	r2, [r3]
1438:..\src/command_processing.c ****                 
1439:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1440:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 9329              		.loc 1 1440 0
 9330 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9331 09d8 1E49     		ldr	r1, .L486+4
 9332 09da 1346     		mov	r3, r2
 9333 09dc DB00     		lsls	r3, r3, #3
 9334 09de 9B1A     		subs	r3, r3, r2
 9335 09e0 1B01     		lsls	r3, r3, #4
 9336 09e2 0B44     		add	r3, r3, r1
 9337 09e4 03F21113 		addw	r3, r3, #273
 9338 09e8 0122     		movs	r2, #1
 9339 09ea 1A70     		strb	r2, [r3]
1441:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 9340              		.loc 1 1441 0
 9341 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9342 09ee 1949     		ldr	r1, .L486+4
 9343 09f0 1346     		mov	r3, r2
 9344 09f2 DB00     		lsls	r3, r3, #3
 9345 09f4 9B1A     		subs	r3, r3, r2
 9346 09f6 1B01     		lsls	r3, r3, #4
 9347 09f8 0B44     		add	r3, r3, r1
 9348 09fa 03F58973 		add	r3, r3, #274
 9349 09fe 0122     		movs	r2, #1
 9350 0a00 1A70     		strb	r2, [r3]
1442:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 9351              		.loc 1 1442 0
 9352 0a02 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9353 0a04 1349     		ldr	r1, .L486+4
 9354 0a06 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 221


 9355 0a08 DB00     		lsls	r3, r3, #3
 9356 0a0a 9B1A     		subs	r3, r3, r2
 9357 0a0c 1B01     		lsls	r3, r3, #4
 9358 0a0e 0B44     		add	r3, r3, r1
 9359 0a10 E433     		adds	r3, r3, #228
 9360 0a12 0022     		movs	r2, #0
 9361 0a14 1A60     		str	r2, [r3]
1443:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 9362              		.loc 1 1443 0
 9363 0a16 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9364 0a18 0E4B     		ldr	r3, .L486+4
 9365 0a1a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9366 0a1e 1846     		mov	r0, r3
 9367 0a20 0C49     		ldr	r1, .L486+4
 9368 0a22 0346     		mov	r3, r0
 9369 0a24 5B00     		lsls	r3, r3, #1
 9370 0a26 0344     		add	r3, r3, r0
 9371 0a28 1B01     		lsls	r3, r3, #4
 9372 0a2a 0B44     		add	r3, r3, r1
 9373 0a2c 03F29513 		addw	r3, r3, #405
 9374 0a30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9375 0a32 1946     		mov	r1, r3
 9376 0a34 4FF47A53 		mov	r3, #16000
 9377 0a38 03FA01F1 		lsl	r1, r3, r1
 9378 0a3c 0548     		ldr	r0, .L486+4
 9379 0a3e 1346     		mov	r3, r2
 9380 0a40 DB00     		lsls	r3, r3, #3
 9381 0a42 9B1A     		subs	r3, r3, r2
 9382 0a44 1B01     		lsls	r3, r3, #4
 9383 0a46 0344     		add	r3, r3, r0
 9384 0a48 E833     		adds	r3, r3, #232
 9385 0a4a 1960     		str	r1, [r3]
1444:..\src/command_processing.c ****             }    
1445:..\src/command_processing.c **** 
1446:..\src/command_processing.c ****             break; 
 9386              		.loc 1 1446 0
 9387 0a4c 00F036BD 		b	.L478
 9388              	.L487:
 9389              		.align	2
 9390              	.L486:
 9391 0a50 00000000 		.word	g_rx
 9392 0a54 00000000 		.word	g_mem
 9393 0a58 00000000 		.word	reset_last_value_flag
 9394              	.L392:
1447:..\src/command_processing.c **** 
1448:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1449:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 9395              		.loc 1 1449 0
 9396 0a5c B94B     		ldr	r3, .L488
 9397 0a5e DB78     		ldrb	r3, [r3, #3]
 9398 0a60 BB74     		strb	r3, [r7, #18]
1450:..\src/command_processing.c ****             if (aux_uchar) {
 9399              		.loc 1 1450 0
 9400 0a62 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9401 0a64 002B     		cmp	r3, #0
 9402 0a66 05D0     		beq	.L437
1451:..\src/command_processing.c ****                 reset_counters();
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 222


 9403              		.loc 1 1451 0
 9404 0a68 FFF7FEFF 		bl	reset_counters
1452:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 9405              		.loc 1 1452 0
 9406 0a6c B64B     		ldr	r3, .L488+4
 9407 0a6e 0022     		movs	r2, #0
 9408 0a70 83F8A820 		strb	r2, [r3, #168]
 9409              	.L437:
1453:..\src/command_processing.c ****             }
1454:..\src/command_processing.c ****             
1455:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 9410              		.loc 1 1455 0
 9411 0a74 B54B     		ldr	r3, .L488+8
 9412 0a76 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 9413 0a7a 012B     		cmp	r3, #1
 9414 0a7c 40F02085 		bne	.L479
1456:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1457:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 9415              		.loc 1 1457 0
 9416 0a80 8720     		movs	r0, #135
 9417 0a82 FFF7FEFF 		bl	DS1302_read
 9418 0a86 0346     		mov	r3, r0
 9419 0a88 BB74     		strb	r3, [r7, #18]
1458:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 9420              		.loc 1 1458 0
 9421 0a8a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9422 0a8c 1B09     		lsrs	r3, r3, #4
 9423 0a8e DBB2     		uxtb	r3, r3
 9424 0a90 1A46     		mov	r2, r3
 9425 0a92 9200     		lsls	r2, r2, #2
 9426 0a94 1344     		add	r3, r3, r2
 9427 0a96 5B00     		lsls	r3, r3, #1
 9428 0a98 DAB2     		uxtb	r2, r3
 9429 0a9a BB7C     		ldrb	r3, [r7, #18]
 9430 0a9c 03F00F03 		and	r3, r3, #15
 9431 0aa0 DBB2     		uxtb	r3, r3
 9432 0aa2 1344     		add	r3, r3, r2
 9433 0aa4 DAB2     		uxtb	r2, r3
 9434 0aa6 A84B     		ldr	r3, .L488+4
 9435 0aa8 83F8A420 		strb	r2, [r3, #164]
1459:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 9436              		.loc 1 1459 0
 9437 0aac 8920     		movs	r0, #137
 9438 0aae FFF7FEFF 		bl	DS1302_read
 9439 0ab2 0346     		mov	r3, r0
 9440 0ab4 BB74     		strb	r3, [r7, #18]
1460:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 9441              		.loc 1 1460 0
 9442 0ab6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9443 0ab8 1B09     		lsrs	r3, r3, #4
 9444 0aba DBB2     		uxtb	r3, r3
 9445 0abc 1A46     		mov	r2, r3
 9446 0abe 9200     		lsls	r2, r2, #2
 9447 0ac0 1344     		add	r3, r3, r2
 9448 0ac2 5B00     		lsls	r3, r3, #1
 9449 0ac4 DAB2     		uxtb	r2, r3
 9450 0ac6 BB7C     		ldrb	r3, [r7, #18]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 223


 9451 0ac8 03F00F03 		and	r3, r3, #15
 9452 0acc DBB2     		uxtb	r3, r3
 9453 0ace 1344     		add	r3, r3, r2
 9454 0ad0 DAB2     		uxtb	r2, r3
 9455 0ad2 9D4B     		ldr	r3, .L488+4
 9456 0ad4 83F8A520 		strb	r2, [r3, #165]
1461:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 9457              		.loc 1 1461 0
 9458 0ad8 8D20     		movs	r0, #141
 9459 0ada FFF7FEFF 		bl	DS1302_read
 9460 0ade 0346     		mov	r3, r0
 9461 0ae0 BB74     		strb	r3, [r7, #18]
1462:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 9462              		.loc 1 1462 0
 9463 0ae2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9464 0ae4 1B09     		lsrs	r3, r3, #4
 9465 0ae6 DBB2     		uxtb	r3, r3
 9466 0ae8 1A46     		mov	r2, r3
 9467 0aea 9200     		lsls	r2, r2, #2
 9468 0aec 1344     		add	r3, r3, r2
 9469 0aee 5B00     		lsls	r3, r3, #1
 9470 0af0 DAB2     		uxtb	r2, r3
 9471 0af2 BB7C     		ldrb	r3, [r7, #18]
 9472 0af4 03F00F03 		and	r3, r3, #15
 9473 0af8 DBB2     		uxtb	r3, r3
 9474 0afa 1344     		add	r3, r3, r2
 9475 0afc DAB2     		uxtb	r2, r3
 9476 0afe 924B     		ldr	r3, .L488+4
 9477 0b00 83F8A620 		strb	r2, [r3, #166]
1463:..\src/command_processing.c ****             }
1464:..\src/command_processing.c ****             break;             
 9478              		.loc 1 1464 0
 9479 0b04 00F0DCBC 		b	.L479
 9480              	.L393:
 9481              	.LBB23:
1465:..\src/command_processing.c ****             
1466:..\src/command_processing.c ****         case 32:         //Current Time
1467:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 9482              		.loc 1 1467 0
 9483 0b08 0023     		movs	r3, #0
 9484 0b0a 7B75     		strb	r3, [r7, #21]
 9485 0b0c 0CE0     		b	.L439
 9486              	.L440:
1468:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 9487              		.loc 1 1468 0 discriminator 3
 9488 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 9489 0b10 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 9490 0b12 0332     		adds	r2, r2, #3
 9491 0b14 8B49     		ldr	r1, .L488
 9492 0b16 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9493 0b18 8B4A     		ldr	r2, .L488+4
 9494 0b1a 1344     		add	r3, r3, r2
 9495 0b1c 0A46     		mov	r2, r1
 9496 0b1e 83F82022 		strb	r2, [r3, #544]
1467:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 9497              		.loc 1 1467 0 discriminator 3
 9498 0b22 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 224


 9499 0b24 0133     		adds	r3, r3, #1
 9500 0b26 7B75     		strb	r3, [r7, #21]
 9501              	.L439:
1467:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 9502              		.loc 1 1467 0 is_stmt 0 discriminator 1
 9503 0b28 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 9504 0b2a 052B     		cmp	r3, #5
 9505 0b2c EFD9     		bls	.L440
 9506              	.LBE23:
1469:..\src/command_processing.c ****             }
1470:..\src/command_processing.c ****             
1471:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 9507              		.loc 1 1471 0 is_stmt 1
 9508 0b2e 864B     		ldr	r3, .L488+4
 9509 0b30 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 9510 0b34 012B     		cmp	r3, #1
 9511 0b36 40F0C584 		bne	.L480
1472:..\src/command_processing.c ****                 set_RTC_time();
 9512              		.loc 1 1472 0
 9513 0b3a FFF7FEFF 		bl	set_RTC_time
1473:..\src/command_processing.c ****             }
1474:..\src/command_processing.c ****             break;
 9514              		.loc 1 1474 0
 9515 0b3e 00F0C1BC 		b	.L480
 9516              	.L394:
1475:..\src/command_processing.c ****            
1476:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1477:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 9517              		.loc 1 1477 0
 9518 0b42 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9519 0b44 7F4B     		ldr	r3, .L488
 9520 0b46 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9521 0b48 7F49     		ldr	r1, .L488+4
 9522 0b4a 1346     		mov	r3, r2
 9523 0b4c DB00     		lsls	r3, r3, #3
 9524 0b4e 9B1A     		subs	r3, r3, r2
 9525 0b50 1B01     		lsls	r3, r3, #4
 9526 0b52 0B44     		add	r3, r3, r1
 9527 0b54 E233     		adds	r3, r3, #226
 9528 0b56 0246     		mov	r2, r0
 9529 0b58 1A70     		strb	r2, [r3]
1478:..\src/command_processing.c ****             set_motor_driver_type();            
 9530              		.loc 1 1478 0
 9531 0b5a FFF7FEFF 		bl	set_motor_driver_type
1479:..\src/command_processing.c ****             break;
 9532              		.loc 1 1479 0
 9533 0b5e 00F0B4BC 		b	.L416
 9534              	.L395:
1480:..\src/command_processing.c ****             
1481:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1482:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9535              		.loc 1 1482 0
 9536 0b62 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9537 0b64 7949     		ldr	r1, .L488+8
 9538 0b66 1346     		mov	r3, r2
 9539 0b68 DB00     		lsls	r3, r3, #3
 9540 0b6a 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 225


 9541 0b6c 1B01     		lsls	r3, r3, #4
 9542 0b6e 0B44     		add	r3, r3, r1
 9543 0b70 03F20F13 		addw	r3, r3, #271
 9544 0b74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9545 0b76 032B     		cmp	r3, #3
 9546 0b78 00F08680 		beq	.L442
1483:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9547              		.loc 1 1483 0
 9548 0b7c 744B     		ldr	r3, .L488+12
 9549 0b7e 1B68     		ldr	r3, [r3]	@ float
 9550 0b80 FB60     		str	r3, [r7, #12]	@ float
1484:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9551              		.loc 1 1484 0
 9552 0b82 0023     		movs	r3, #0
 9553 0b84 BB75     		strb	r3, [r7, #22]
 9554 0b86 0EE0     		b	.L443
 9555              	.L444:
1485:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9556              		.loc 1 1485 0 discriminator 3
 9557 0b88 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9558 0b8a C3F10303 		rsb	r3, r3, #3
 9559 0b8e 07F10802 		add	r2, r7, #8
 9560 0b92 1344     		add	r3, r3, r2
 9561 0b94 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9562 0b96 07F10C01 		add	r1, r7, #12
 9563 0b9a 0A44     		add	r2, r2, r1
 9564 0b9c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9565 0b9e 1A70     		strb	r2, [r3]
1484:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9566              		.loc 1 1484 0 discriminator 3
 9567 0ba0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9568 0ba2 0133     		adds	r3, r3, #1
 9569 0ba4 BB75     		strb	r3, [r7, #22]
 9570              	.L443:
1484:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9571              		.loc 1 1484 0 is_stmt 0 discriminator 1
 9572 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9573 0ba8 032B     		cmp	r3, #3
 9574 0baa EDD9     		bls	.L444
1486:..\src/command_processing.c ****                 }
1487:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 9575              		.loc 1 1487 0 is_stmt 1
 9576 0bac FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9577 0bae BB68     		ldr	r3, [r7, #8]	@ float
 9578 0bb0 4FF08F41 		mov	r1, #1199570944
 9579 0bb4 1846     		mov	r0, r3
 9580 0bb6 FFF7FEFF 		bl	__aeabi_fmul
 9581 0bba 0346     		mov	r3, r0
 9582 0bbc 1846     		mov	r0, r3
 9583 0bbe FFF7FEFF 		bl	__aeabi_f2iz
 9584 0bc2 0146     		mov	r1, r0
 9585 0bc4 604A     		ldr	r2, .L488+4
 9586 0bc6 2346     		mov	r3, r4
 9587 0bc8 DB00     		lsls	r3, r3, #3
 9588 0bca 1B1B     		subs	r3, r3, r4
 9589 0bcc 1B01     		lsls	r3, r3, #4
 9590 0bce 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 226


 9591 0bd0 B033     		adds	r3, r3, #176
 9592 0bd2 1960     		str	r1, [r3]
1488:..\src/command_processing.c ****                 
1489:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9593              		.loc 1 1489 0
 9594 0bd4 5F4B     		ldr	r3, .L488+16
 9595 0bd6 1B68     		ldr	r3, [r3]	@ float
 9596 0bd8 FB60     		str	r3, [r7, #12]	@ float
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9597              		.loc 1 1490 0
 9598 0bda 0023     		movs	r3, #0
 9599 0bdc BB75     		strb	r3, [r7, #22]
 9600 0bde 0EE0     		b	.L445
 9601              	.L446:
1491:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9602              		.loc 1 1491 0 discriminator 3
 9603 0be0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9604 0be2 C3F10303 		rsb	r3, r3, #3
 9605 0be6 07F10802 		add	r2, r7, #8
 9606 0bea 1344     		add	r3, r3, r2
 9607 0bec BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9608 0bee 07F10C01 		add	r1, r7, #12
 9609 0bf2 0A44     		add	r2, r2, r1
 9610 0bf4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9611 0bf6 1A70     		strb	r2, [r3]
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9612              		.loc 1 1490 0 discriminator 3
 9613 0bf8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9614 0bfa 0133     		adds	r3, r3, #1
 9615 0bfc BB75     		strb	r3, [r7, #22]
 9616              	.L445:
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9617              		.loc 1 1490 0 is_stmt 0 discriminator 1
 9618 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9619 0c00 032B     		cmp	r3, #3
 9620 0c02 EDD9     		bls	.L446
1492:..\src/command_processing.c ****                 }
1493:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 9621              		.loc 1 1493 0 is_stmt 1
 9622 0c04 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9623 0c06 BB68     		ldr	r3, [r7, #8]	@ float
 9624 0c08 4FF08F41 		mov	r1, #1199570944
 9625 0c0c 1846     		mov	r0, r3
 9626 0c0e FFF7FEFF 		bl	__aeabi_fmul
 9627 0c12 0346     		mov	r3, r0
 9628 0c14 1846     		mov	r0, r3
 9629 0c16 FFF7FEFF 		bl	__aeabi_f2iz
 9630 0c1a 0146     		mov	r1, r0
 9631 0c1c 4A4A     		ldr	r2, .L488+4
 9632 0c1e 2346     		mov	r3, r4
 9633 0c20 DB00     		lsls	r3, r3, #3
 9634 0c22 1B1B     		subs	r3, r3, r4
 9635 0c24 1B01     		lsls	r3, r3, #4
 9636 0c26 1344     		add	r3, r3, r2
 9637 0c28 B433     		adds	r3, r3, #180
 9638 0c2a 1960     		str	r1, [r3]
1494:..\src/command_processing.c ****                 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 227


1495:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9639              		.loc 1 1495 0
 9640 0c2c 4A4B     		ldr	r3, .L488+20
 9641 0c2e 1B68     		ldr	r3, [r3]	@ float
 9642 0c30 FB60     		str	r3, [r7, #12]	@ float
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9643              		.loc 1 1496 0
 9644 0c32 0023     		movs	r3, #0
 9645 0c34 BB75     		strb	r3, [r7, #22]
 9646 0c36 0EE0     		b	.L447
 9647              	.L448:
1497:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9648              		.loc 1 1497 0 discriminator 3
 9649 0c38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9650 0c3a C3F10303 		rsb	r3, r3, #3
 9651 0c3e 07F10802 		add	r2, r7, #8
 9652 0c42 1344     		add	r3, r3, r2
 9653 0c44 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9654 0c46 07F10C01 		add	r1, r7, #12
 9655 0c4a 0A44     		add	r2, r2, r1
 9656 0c4c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9657 0c4e 1A70     		strb	r2, [r3]
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9658              		.loc 1 1496 0 discriminator 3
 9659 0c50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9660 0c52 0133     		adds	r3, r3, #1
 9661 0c54 BB75     		strb	r3, [r7, #22]
 9662              	.L447:
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9663              		.loc 1 1496 0 is_stmt 0 discriminator 1
 9664 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9665 0c58 032B     		cmp	r3, #3
 9666 0c5a EDD9     		bls	.L448
1498:..\src/command_processing.c ****                 }
1499:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 9667              		.loc 1 1499 0 is_stmt 1
 9668 0c5c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9669 0c5e BB68     		ldr	r3, [r7, #8]	@ float
 9670 0c60 4FF08F41 		mov	r1, #1199570944
 9671 0c64 1846     		mov	r0, r3
 9672 0c66 FFF7FEFF 		bl	__aeabi_fmul
 9673 0c6a 0346     		mov	r3, r0
 9674 0c6c 1846     		mov	r0, r3
 9675 0c6e FFF7FEFF 		bl	__aeabi_f2iz
 9676 0c72 0146     		mov	r1, r0
 9677 0c74 344A     		ldr	r2, .L488+4
 9678 0c76 2346     		mov	r3, r4
 9679 0c78 DB00     		lsls	r3, r3, #3
 9680 0c7a 1B1B     		subs	r3, r3, r4
 9681 0c7c 1B01     		lsls	r3, r3, #4
 9682 0c7e 1344     		add	r3, r3, r2
 9683 0c80 B833     		adds	r3, r3, #184
 9684 0c82 1960     		str	r1, [r3]
1500:..\src/command_processing.c ****             }
1501:..\src/command_processing.c ****             else {
1502:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1503:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 228


1504:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1505:..\src/command_processing.c ****                 }
1506:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1507:..\src/command_processing.c ****                 
1508:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1510:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1511:..\src/command_processing.c ****                 }
1512:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1513:..\src/command_processing.c ****                 
1514:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1516:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1517:..\src/command_processing.c ****                 }
1518:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1519:..\src/command_processing.c ****             }
1520:..\src/command_processing.c ****             break;
 9685              		.loc 1 1520 0
 9686 0c84 00F021BC 		b	.L416
 9687              	.L442:
1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9688              		.loc 1 1502 0
 9689 0c88 314B     		ldr	r3, .L488+12
 9690 0c8a 1B68     		ldr	r3, [r3]	@ float
 9691 0c8c FB60     		str	r3, [r7, #12]	@ float
1503:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9692              		.loc 1 1503 0
 9693 0c8e 0023     		movs	r3, #0
 9694 0c90 BB75     		strb	r3, [r7, #22]
 9695 0c92 0EE0     		b	.L450
 9696              	.L451:
1504:..\src/command_processing.c ****                 }
 9697              		.loc 1 1504 0 discriminator 3
 9698 0c94 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9699 0c96 C3F10303 		rsb	r3, r3, #3
 9700 0c9a 07F10802 		add	r2, r7, #8
 9701 0c9e 1344     		add	r3, r3, r2
 9702 0ca0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9703 0ca2 07F10C01 		add	r1, r7, #12
 9704 0ca6 0A44     		add	r2, r2, r1
 9705 0ca8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9706 0caa 1A70     		strb	r2, [r3]
1503:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9707              		.loc 1 1503 0 discriminator 3
 9708 0cac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9709 0cae 0133     		adds	r3, r3, #1
 9710 0cb0 BB75     		strb	r3, [r7, #22]
 9711              	.L450:
1503:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9712              		.loc 1 1503 0 is_stmt 0 discriminator 1
 9713 0cb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9714 0cb4 032B     		cmp	r3, #3
 9715 0cb6 EDD9     		bls	.L451
1506:..\src/command_processing.c ****                 
 9716              		.loc 1 1506 0 is_stmt 1
 9717 0cb8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9718 0cba BB68     		ldr	r3, [r7, #8]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 229


 9719 0cbc 4FF08F41 		mov	r1, #1199570944
 9720 0cc0 1846     		mov	r0, r3
 9721 0cc2 FFF7FEFF 		bl	__aeabi_fmul
 9722 0cc6 0346     		mov	r3, r0
 9723 0cc8 1846     		mov	r0, r3
 9724 0cca FFF7FEFF 		bl	__aeabi_f2iz
 9725 0cce 0146     		mov	r1, r0
 9726 0cd0 1D4A     		ldr	r2, .L488+4
 9727 0cd2 2346     		mov	r3, r4
 9728 0cd4 DB00     		lsls	r3, r3, #3
 9729 0cd6 1B1B     		subs	r3, r3, r4
 9730 0cd8 1B01     		lsls	r3, r3, #4
 9731 0cda 1344     		add	r3, r3, r2
 9732 0cdc C833     		adds	r3, r3, #200
 9733 0cde 1960     		str	r1, [r3]
1508:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9734              		.loc 1 1508 0
 9735 0ce0 1C4B     		ldr	r3, .L488+16
 9736 0ce2 1B68     		ldr	r3, [r3]	@ float
 9737 0ce4 FB60     		str	r3, [r7, #12]	@ float
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9738              		.loc 1 1509 0
 9739 0ce6 0023     		movs	r3, #0
 9740 0ce8 BB75     		strb	r3, [r7, #22]
 9741 0cea 0EE0     		b	.L452
 9742              	.L453:
1510:..\src/command_processing.c ****                 }
 9743              		.loc 1 1510 0 discriminator 3
 9744 0cec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9745 0cee C3F10303 		rsb	r3, r3, #3
 9746 0cf2 07F10802 		add	r2, r7, #8
 9747 0cf6 1344     		add	r3, r3, r2
 9748 0cf8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9749 0cfa 07F10C01 		add	r1, r7, #12
 9750 0cfe 0A44     		add	r2, r2, r1
 9751 0d00 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9752 0d02 1A70     		strb	r2, [r3]
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9753              		.loc 1 1509 0 discriminator 3
 9754 0d04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9755 0d06 0133     		adds	r3, r3, #1
 9756 0d08 BB75     		strb	r3, [r7, #22]
 9757              	.L452:
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9758              		.loc 1 1509 0 is_stmt 0 discriminator 1
 9759 0d0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9760 0d0c 032B     		cmp	r3, #3
 9761 0d0e EDD9     		bls	.L453
1512:..\src/command_processing.c ****                 
 9762              		.loc 1 1512 0 is_stmt 1
 9763 0d10 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9764 0d12 BB68     		ldr	r3, [r7, #8]	@ float
 9765 0d14 4FF08F41 		mov	r1, #1199570944
 9766 0d18 1846     		mov	r0, r3
 9767 0d1a FFF7FEFF 		bl	__aeabi_fmul
 9768 0d1e 0346     		mov	r3, r0
 9769 0d20 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 230


 9770 0d22 FFF7FEFF 		bl	__aeabi_f2iz
 9771 0d26 0146     		mov	r1, r0
 9772 0d28 074A     		ldr	r2, .L488+4
 9773 0d2a 2346     		mov	r3, r4
 9774 0d2c DB00     		lsls	r3, r3, #3
 9775 0d2e 1B1B     		subs	r3, r3, r4
 9776 0d30 1B01     		lsls	r3, r3, #4
 9777 0d32 1344     		add	r3, r3, r2
 9778 0d34 CC33     		adds	r3, r3, #204
 9779 0d36 1960     		str	r1, [r3]
1514:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9780              		.loc 1 1514 0
 9781 0d38 074B     		ldr	r3, .L488+20
 9782 0d3a 1B68     		ldr	r3, [r3]	@ float
 9783 0d3c FB60     		str	r3, [r7, #12]	@ float
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9784              		.loc 1 1515 0
 9785 0d3e 0023     		movs	r3, #0
 9786 0d40 BB75     		strb	r3, [r7, #22]
 9787 0d42 1AE0     		b	.L454
 9788              	.L489:
 9789              		.align	2
 9790              	.L488:
 9791 0d44 00000000 		.word	g_rx
 9792 0d48 00000000 		.word	g_mem
 9793 0d4c 00000000 		.word	c_mem
 9794 0d50 03000000 		.word	g_rx+3
 9795 0d54 07000000 		.word	g_rx+7
 9796 0d58 0B000000 		.word	g_rx+11
 9797              	.L455:
1516:..\src/command_processing.c ****                 }
 9798              		.loc 1 1516 0 discriminator 3
 9799 0d5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9800 0d5e C3F10303 		rsb	r3, r3, #3
 9801 0d62 07F10802 		add	r2, r7, #8
 9802 0d66 1344     		add	r3, r3, r2
 9803 0d68 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9804 0d6a 07F10C01 		add	r1, r7, #12
 9805 0d6e 0A44     		add	r2, r2, r1
 9806 0d70 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9807 0d72 1A70     		strb	r2, [r3]
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9808              		.loc 1 1515 0 discriminator 3
 9809 0d74 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9810 0d76 0133     		adds	r3, r3, #1
 9811 0d78 BB75     		strb	r3, [r7, #22]
 9812              	.L454:
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9813              		.loc 1 1515 0 is_stmt 0 discriminator 1
 9814 0d7a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9815 0d7c 032B     		cmp	r3, #3
 9816 0d7e EDD9     		bls	.L455
1518:..\src/command_processing.c ****             }
 9817              		.loc 1 1518 0 is_stmt 1
 9818 0d80 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9819 0d82 BB68     		ldr	r3, [r7, #8]	@ float
 9820 0d84 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 231


 9821 0d88 1846     		mov	r0, r3
 9822 0d8a FFF7FEFF 		bl	__aeabi_fmul
 9823 0d8e 0346     		mov	r3, r0
 9824 0d90 1846     		mov	r0, r3
 9825 0d92 FFF7FEFF 		bl	__aeabi_f2iz
 9826 0d96 0146     		mov	r1, r0
 9827 0d98 A34A     		ldr	r2, .L490
 9828 0d9a 2346     		mov	r3, r4
 9829 0d9c DB00     		lsls	r3, r3, #3
 9830 0d9e 1B1B     		subs	r3, r3, r4
 9831 0da0 1B01     		lsls	r3, r3, #4
 9832 0da2 1344     		add	r3, r3, r2
 9833 0da4 D033     		adds	r3, r3, #208
 9834 0da6 1960     		str	r1, [r3]
 9835              		.loc 1 1520 0
 9836 0da8 8FE3     		b	.L416
 9837              	.L396:
1521:..\src/command_processing.c ****             
1522:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1523:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9838              		.loc 1 1523 0
 9839 0daa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9840 0dac 9F49     		ldr	r1, .L490+4
 9841 0dae 1346     		mov	r3, r2
 9842 0db0 DB00     		lsls	r3, r3, #3
 9843 0db2 9B1A     		subs	r3, r3, r2
 9844 0db4 1B01     		lsls	r3, r3, #4
 9845 0db6 0B44     		add	r3, r3, r1
 9846 0db8 03F20F13 		addw	r3, r3, #271
 9847 0dbc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9848 0dbe 032B     		cmp	r3, #3
 9849 0dc0 00F08580 		beq	.L456
1524:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9850              		.loc 1 1524 0
 9851 0dc4 9A4B     		ldr	r3, .L490+8
 9852 0dc6 1B68     		ldr	r3, [r3]	@ float
 9853 0dc8 FB60     		str	r3, [r7, #12]	@ float
1525:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9854              		.loc 1 1525 0
 9855 0dca 0023     		movs	r3, #0
 9856 0dcc BB75     		strb	r3, [r7, #22]
 9857 0dce 0EE0     		b	.L457
 9858              	.L458:
1526:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9859              		.loc 1 1526 0 discriminator 3
 9860 0dd0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9861 0dd2 C3F10303 		rsb	r3, r3, #3
 9862 0dd6 07F10802 		add	r2, r7, #8
 9863 0dda 1344     		add	r3, r3, r2
 9864 0ddc BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9865 0dde 07F10C01 		add	r1, r7, #12
 9866 0de2 0A44     		add	r2, r2, r1
 9867 0de4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9868 0de6 1A70     		strb	r2, [r3]
1525:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9869              		.loc 1 1525 0 discriminator 3
 9870 0de8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 232


 9871 0dea 0133     		adds	r3, r3, #1
 9872 0dec BB75     		strb	r3, [r7, #22]
 9873              	.L457:
1525:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9874              		.loc 1 1525 0 is_stmt 0 discriminator 1
 9875 0dee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9876 0df0 032B     		cmp	r3, #3
 9877 0df2 EDD9     		bls	.L458
1527:..\src/command_processing.c ****                 }
1528:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9878              		.loc 1 1528 0 is_stmt 1
 9879 0df4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9880 0df6 BB68     		ldr	r3, [r7, #8]	@ float
 9881 0df8 4FF08F41 		mov	r1, #1199570944
 9882 0dfc 1846     		mov	r0, r3
 9883 0dfe FFF7FEFF 		bl	__aeabi_fmul
 9884 0e02 0346     		mov	r3, r0
 9885 0e04 1846     		mov	r0, r3
 9886 0e06 FFF7FEFF 		bl	__aeabi_f2iz
 9887 0e0a 0146     		mov	r1, r0
 9888 0e0c 864A     		ldr	r2, .L490
 9889 0e0e 2346     		mov	r3, r4
 9890 0e10 DB00     		lsls	r3, r3, #3
 9891 0e12 1B1B     		subs	r3, r3, r4
 9892 0e14 1B01     		lsls	r3, r3, #4
 9893 0e16 1344     		add	r3, r3, r2
 9894 0e18 BC33     		adds	r3, r3, #188
 9895 0e1a 1960     		str	r1, [r3]
1529:..\src/command_processing.c ****                 
1530:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9896              		.loc 1 1530 0
 9897 0e1c 854B     		ldr	r3, .L490+12
 9898 0e1e 1B68     		ldr	r3, [r3]	@ float
 9899 0e20 FB60     		str	r3, [r7, #12]	@ float
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9900              		.loc 1 1531 0
 9901 0e22 0023     		movs	r3, #0
 9902 0e24 BB75     		strb	r3, [r7, #22]
 9903 0e26 0EE0     		b	.L459
 9904              	.L460:
1532:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9905              		.loc 1 1532 0 discriminator 3
 9906 0e28 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9907 0e2a C3F10303 		rsb	r3, r3, #3
 9908 0e2e 07F10802 		add	r2, r7, #8
 9909 0e32 1344     		add	r3, r3, r2
 9910 0e34 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9911 0e36 07F10C01 		add	r1, r7, #12
 9912 0e3a 0A44     		add	r2, r2, r1
 9913 0e3c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9914 0e3e 1A70     		strb	r2, [r3]
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9915              		.loc 1 1531 0 discriminator 3
 9916 0e40 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9917 0e42 0133     		adds	r3, r3, #1
 9918 0e44 BB75     		strb	r3, [r7, #22]
 9919              	.L459:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 233


1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9920              		.loc 1 1531 0 is_stmt 0 discriminator 1
 9921 0e46 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9922 0e48 032B     		cmp	r3, #3
 9923 0e4a EDD9     		bls	.L460
1533:..\src/command_processing.c ****                 }
1534:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9924              		.loc 1 1534 0 is_stmt 1
 9925 0e4c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9926 0e4e BB68     		ldr	r3, [r7, #8]	@ float
 9927 0e50 4FF08F41 		mov	r1, #1199570944
 9928 0e54 1846     		mov	r0, r3
 9929 0e56 FFF7FEFF 		bl	__aeabi_fmul
 9930 0e5a 0346     		mov	r3, r0
 9931 0e5c 1846     		mov	r0, r3
 9932 0e5e FFF7FEFF 		bl	__aeabi_f2iz
 9933 0e62 0146     		mov	r1, r0
 9934 0e64 704A     		ldr	r2, .L490
 9935 0e66 2346     		mov	r3, r4
 9936 0e68 DB00     		lsls	r3, r3, #3
 9937 0e6a 1B1B     		subs	r3, r3, r4
 9938 0e6c 1B01     		lsls	r3, r3, #4
 9939 0e6e 1344     		add	r3, r3, r2
 9940 0e70 C033     		adds	r3, r3, #192
 9941 0e72 1960     		str	r1, [r3]
1535:..\src/command_processing.c ****                 
1536:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9942              		.loc 1 1536 0
 9943 0e74 704B     		ldr	r3, .L490+16
 9944 0e76 1B68     		ldr	r3, [r3]	@ float
 9945 0e78 FB60     		str	r3, [r7, #12]	@ float
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9946              		.loc 1 1537 0
 9947 0e7a 0023     		movs	r3, #0
 9948 0e7c BB75     		strb	r3, [r7, #22]
 9949 0e7e 0EE0     		b	.L461
 9950              	.L462:
1538:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9951              		.loc 1 1538 0 discriminator 3
 9952 0e80 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9953 0e82 C3F10303 		rsb	r3, r3, #3
 9954 0e86 07F10802 		add	r2, r7, #8
 9955 0e8a 1344     		add	r3, r3, r2
 9956 0e8c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9957 0e8e 07F10C01 		add	r1, r7, #12
 9958 0e92 0A44     		add	r2, r2, r1
 9959 0e94 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9960 0e96 1A70     		strb	r2, [r3]
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9961              		.loc 1 1537 0 discriminator 3
 9962 0e98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9963 0e9a 0133     		adds	r3, r3, #1
 9964 0e9c BB75     		strb	r3, [r7, #22]
 9965              	.L461:
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9966              		.loc 1 1537 0 is_stmt 0 discriminator 1
 9967 0e9e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 234


 9968 0ea0 032B     		cmp	r3, #3
 9969 0ea2 EDD9     		bls	.L462
1539:..\src/command_processing.c ****                 }
1540:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9970              		.loc 1 1540 0 is_stmt 1
 9971 0ea4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9972 0ea6 BB68     		ldr	r3, [r7, #8]	@ float
 9973 0ea8 4FF08F41 		mov	r1, #1199570944
 9974 0eac 1846     		mov	r0, r3
 9975 0eae FFF7FEFF 		bl	__aeabi_fmul
 9976 0eb2 0346     		mov	r3, r0
 9977 0eb4 1846     		mov	r0, r3
 9978 0eb6 FFF7FEFF 		bl	__aeabi_f2iz
 9979 0eba 0146     		mov	r1, r0
 9980 0ebc 5A4A     		ldr	r2, .L490
 9981 0ebe 2346     		mov	r3, r4
 9982 0ec0 DB00     		lsls	r3, r3, #3
 9983 0ec2 1B1B     		subs	r3, r3, r4
 9984 0ec4 1B01     		lsls	r3, r3, #4
 9985 0ec6 1344     		add	r3, r3, r2
 9986 0ec8 C433     		adds	r3, r3, #196
 9987 0eca 1960     		str	r1, [r3]
1541:..\src/command_processing.c ****             }
1542:..\src/command_processing.c ****             else {
1543:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1544:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1545:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1546:..\src/command_processing.c ****                 }
1547:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1548:..\src/command_processing.c ****                 
1549:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1550:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1551:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1552:..\src/command_processing.c ****                 }
1553:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1554:..\src/command_processing.c ****                 
1555:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1556:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1557:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1558:..\src/command_processing.c ****                 }
1559:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1560:..\src/command_processing.c ****             }            
1561:..\src/command_processing.c ****             break;  
 9988              		.loc 1 1561 0
 9989 0ecc FDE2     		b	.L416
 9990              	.L456:
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9991              		.loc 1 1543 0
 9992 0ece 584B     		ldr	r3, .L490+8
 9993 0ed0 1B68     		ldr	r3, [r3]	@ float
 9994 0ed2 FB60     		str	r3, [r7, #12]	@ float
1544:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9995              		.loc 1 1544 0
 9996 0ed4 0023     		movs	r3, #0
 9997 0ed6 BB75     		strb	r3, [r7, #22]
 9998 0ed8 0EE0     		b	.L464
 9999              	.L465:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 235


1545:..\src/command_processing.c ****                 }
 10000              		.loc 1 1545 0 discriminator 3
 10001 0eda BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10002 0edc C3F10303 		rsb	r3, r3, #3
 10003 0ee0 07F10802 		add	r2, r7, #8
 10004 0ee4 1344     		add	r3, r3, r2
 10005 0ee6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10006 0ee8 07F10C01 		add	r1, r7, #12
 10007 0eec 0A44     		add	r2, r2, r1
 10008 0eee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10009 0ef0 1A70     		strb	r2, [r3]
1544:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10010              		.loc 1 1544 0 discriminator 3
 10011 0ef2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10012 0ef4 0133     		adds	r3, r3, #1
 10013 0ef6 BB75     		strb	r3, [r7, #22]
 10014              	.L464:
1544:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10015              		.loc 1 1544 0 is_stmt 0 discriminator 1
 10016 0ef8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10017 0efa 032B     		cmp	r3, #3
 10018 0efc EDD9     		bls	.L465
1547:..\src/command_processing.c ****                 
 10019              		.loc 1 1547 0 is_stmt 1
 10020 0efe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10021 0f00 BB68     		ldr	r3, [r7, #8]	@ float
 10022 0f02 4FF08F41 		mov	r1, #1199570944
 10023 0f06 1846     		mov	r0, r3
 10024 0f08 FFF7FEFF 		bl	__aeabi_fmul
 10025 0f0c 0346     		mov	r3, r0
 10026 0f0e 1846     		mov	r0, r3
 10027 0f10 FFF7FEFF 		bl	__aeabi_f2iz
 10028 0f14 0146     		mov	r1, r0
 10029 0f16 444A     		ldr	r2, .L490
 10030 0f18 2346     		mov	r3, r4
 10031 0f1a DB00     		lsls	r3, r3, #3
 10032 0f1c 1B1B     		subs	r3, r3, r4
 10033 0f1e 1B01     		lsls	r3, r3, #4
 10034 0f20 1344     		add	r3, r3, r2
 10035 0f22 D433     		adds	r3, r3, #212
 10036 0f24 1960     		str	r1, [r3]
1549:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10037              		.loc 1 1549 0
 10038 0f26 434B     		ldr	r3, .L490+12
 10039 0f28 1B68     		ldr	r3, [r3]	@ float
 10040 0f2a FB60     		str	r3, [r7, #12]	@ float
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10041              		.loc 1 1550 0
 10042 0f2c 0023     		movs	r3, #0
 10043 0f2e BB75     		strb	r3, [r7, #22]
 10044 0f30 0EE0     		b	.L466
 10045              	.L467:
1551:..\src/command_processing.c ****                 }
 10046              		.loc 1 1551 0 discriminator 3
 10047 0f32 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10048 0f34 C3F10303 		rsb	r3, r3, #3
 10049 0f38 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 236


 10050 0f3c 1344     		add	r3, r3, r2
 10051 0f3e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10052 0f40 07F10C01 		add	r1, r7, #12
 10053 0f44 0A44     		add	r2, r2, r1
 10054 0f46 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10055 0f48 1A70     		strb	r2, [r3]
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10056              		.loc 1 1550 0 discriminator 3
 10057 0f4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10058 0f4c 0133     		adds	r3, r3, #1
 10059 0f4e BB75     		strb	r3, [r7, #22]
 10060              	.L466:
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10061              		.loc 1 1550 0 is_stmt 0 discriminator 1
 10062 0f50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10063 0f52 032B     		cmp	r3, #3
 10064 0f54 EDD9     		bls	.L467
1553:..\src/command_processing.c ****                 
 10065              		.loc 1 1553 0 is_stmt 1
 10066 0f56 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10067 0f58 BB68     		ldr	r3, [r7, #8]	@ float
 10068 0f5a 4FF08F41 		mov	r1, #1199570944
 10069 0f5e 1846     		mov	r0, r3
 10070 0f60 FFF7FEFF 		bl	__aeabi_fmul
 10071 0f64 0346     		mov	r3, r0
 10072 0f66 1846     		mov	r0, r3
 10073 0f68 FFF7FEFF 		bl	__aeabi_f2iz
 10074 0f6c 0146     		mov	r1, r0
 10075 0f6e 2E4A     		ldr	r2, .L490
 10076 0f70 2346     		mov	r3, r4
 10077 0f72 DB00     		lsls	r3, r3, #3
 10078 0f74 1B1B     		subs	r3, r3, r4
 10079 0f76 1B01     		lsls	r3, r3, #4
 10080 0f78 1344     		add	r3, r3, r2
 10081 0f7a D833     		adds	r3, r3, #216
 10082 0f7c 1960     		str	r1, [r3]
1555:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10083              		.loc 1 1555 0
 10084 0f7e 2E4B     		ldr	r3, .L490+16
 10085 0f80 1B68     		ldr	r3, [r3]	@ float
 10086 0f82 FB60     		str	r3, [r7, #12]	@ float
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10087              		.loc 1 1556 0
 10088 0f84 0023     		movs	r3, #0
 10089 0f86 BB75     		strb	r3, [r7, #22]
 10090 0f88 0EE0     		b	.L468
 10091              	.L469:
1557:..\src/command_processing.c ****                 }
 10092              		.loc 1 1557 0 discriminator 3
 10093 0f8a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10094 0f8c C3F10303 		rsb	r3, r3, #3
 10095 0f90 07F10802 		add	r2, r7, #8
 10096 0f94 1344     		add	r3, r3, r2
 10097 0f96 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10098 0f98 07F10C01 		add	r1, r7, #12
 10099 0f9c 0A44     		add	r2, r2, r1
 10100 0f9e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 237


 10101 0fa0 1A70     		strb	r2, [r3]
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10102              		.loc 1 1556 0 discriminator 3
 10103 0fa2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10104 0fa4 0133     		adds	r3, r3, #1
 10105 0fa6 BB75     		strb	r3, [r7, #22]
 10106              	.L468:
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10107              		.loc 1 1556 0 is_stmt 0 discriminator 1
 10108 0fa8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10109 0faa 032B     		cmp	r3, #3
 10110 0fac EDD9     		bls	.L469
1559:..\src/command_processing.c ****             }            
 10111              		.loc 1 1559 0 is_stmt 1
 10112 0fae FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10113 0fb0 BB68     		ldr	r3, [r7, #8]	@ float
 10114 0fb2 4FF08F41 		mov	r1, #1199570944
 10115 0fb6 1846     		mov	r0, r3
 10116 0fb8 FFF7FEFF 		bl	__aeabi_fmul
 10117 0fbc 0346     		mov	r3, r0
 10118 0fbe 1846     		mov	r0, r3
 10119 0fc0 FFF7FEFF 		bl	__aeabi_f2iz
 10120 0fc4 0146     		mov	r1, r0
 10121 0fc6 184A     		ldr	r2, .L490
 10122 0fc8 2346     		mov	r3, r4
 10123 0fca DB00     		lsls	r3, r3, #3
 10124 0fcc 1B1B     		subs	r3, r3, r4
 10125 0fce 1B01     		lsls	r3, r3, #4
 10126 0fd0 1344     		add	r3, r3, r2
 10127 0fd2 DC33     		adds	r3, r3, #220
 10128 0fd4 1960     		str	r1, [r3]
 10129              		.loc 1 1561 0
 10130 0fd6 78E2     		b	.L416
 10131              	.L397:
1562:..\src/command_processing.c ****             
1563:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1564:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 10132              		.loc 1 1564 0
 10133 0fd8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10134 0fda 184B     		ldr	r3, .L490+20
 10135 0fdc D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10136 0fde 1249     		ldr	r1, .L490
 10137 0fe0 1346     		mov	r3, r2
 10138 0fe2 DB00     		lsls	r3, r3, #3
 10139 0fe4 9B1A     		subs	r3, r3, r2
 10140 0fe6 1B01     		lsls	r3, r3, #4
 10141 0fe8 0B44     		add	r3, r3, r1
 10142 0fea 03F58773 		add	r3, r3, #270
 10143 0fee 0246     		mov	r2, r0
 10144 0ff0 1A70     		strb	r2, [r3]
1565:..\src/command_processing.c ****             
1566:..\src/command_processing.c ****             // Hold the actual position
1567:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 10145              		.loc 1 1567 0
 10146 0ff2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10147 0ff4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10148 0ff6 0C48     		ldr	r0, .L490
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 238


 10149 0ff8 1346     		mov	r3, r2
 10150 0ffa DB00     		lsls	r3, r3, #3
 10151 0ffc 9B1A     		subs	r3, r3, r2
 10152 0ffe 1B01     		lsls	r3, r3, #4
 10153 1000 0344     		add	r3, r3, r0
 10154 1002 03F58873 		add	r3, r3, #272
 10155 1006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10156 1008 1846     		mov	r0, r3
 10157 100a 0D4A     		ldr	r2, .L490+24
 10158 100c 3423     		movs	r3, #52
 10159 100e 03FB00F3 		mul	r3, r3, r0
 10160 1012 1344     		add	r3, r3, r2
 10161 1014 1A68     		ldr	r2, [r3]
 10162 1016 0B48     		ldr	r0, .L490+28
 10163 1018 0B01     		lsls	r3, r1, #4
 10164 101a 0344     		add	r3, r3, r0
 10165 101c 1A60     		str	r2, [r3]
1568:..\src/command_processing.c ****             break;   
 10166              		.loc 1 1568 0
 10167 101e 54E2     		b	.L416
 10168              	.L398:
1569:..\src/command_processing.c **** 
1570:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1571:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10169              		.loc 1 1571 0
 10170 1020 0023     		movs	r3, #0
 10171 1022 FB75     		strb	r3, [r7, #23]
 10172 1024 8FE0     		b	.L470
 10173              	.L491:
 10174 1026 00BF     		.align	2
 10175              	.L490:
 10176 1028 00000000 		.word	g_mem
 10177 102c 00000000 		.word	c_mem
 10178 1030 03000000 		.word	g_rx+3
 10179 1034 07000000 		.word	g_rx+7
 10180 1038 0B000000 		.word	g_rx+11
 10181 103c 00000000 		.word	g_rx
 10182 1040 00000000 		.word	g_meas
 10183 1044 00000000 		.word	g_refNew
 10184              	.L471:
1572:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10185              		.loc 1 1572 0 discriminator 3
 10186 1048 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10187 104a 8A49     		ldr	r1, .L492
 10188 104c 1346     		mov	r3, r2
 10189 104e DB00     		lsls	r3, r3, #3
 10190 1050 9B1A     		subs	r3, r3, r2
 10191 1052 1B01     		lsls	r3, r3, #4
 10192 1054 0B44     		add	r3, r3, r1
 10193 1056 03F58873 		add	r3, r3, #272
 10194 105a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10195 105c 1C46     		mov	r4, r3
 10196 105e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10197 1060 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10198 1062 5B00     		lsls	r3, r3, #1
 10199 1064 0333     		adds	r3, r3, #3
 10200 1066 8449     		ldr	r1, .L492+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 239


 10201 1068 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10202 106a 1B02     		lsls	r3, r3, #8
 10203 106c 19B2     		sxth	r1, r3
 10204 106e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10205 1070 0233     		adds	r3, r3, #2
 10206 1072 5B00     		lsls	r3, r3, #1
 10207 1074 8048     		ldr	r0, .L492+4
 10208 1076 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10209 1078 1BB2     		sxth	r3, r3
 10210 107a 0B43     		orrs	r3, r3, r1
 10211 107c 1BB2     		sxth	r3, r3
 10212 107e 1846     		mov	r0, r3
 10213 1080 7C49     		ldr	r1, .L492
 10214 1082 2346     		mov	r3, r4
 10215 1084 5B00     		lsls	r3, r3, #1
 10216 1086 2344     		add	r3, r3, r4
 10217 1088 9B00     		lsls	r3, r3, #2
 10218 108a 1344     		add	r3, r3, r2
 10219 108c 6633     		adds	r3, r3, #102
 10220 108e 41F82300 		str	r0, [r1, r3, lsl #2]
1573:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 10221              		.loc 1 1573 0 discriminator 3
 10222 1092 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10223 1094 7749     		ldr	r1, .L492
 10224 1096 1346     		mov	r3, r2
 10225 1098 DB00     		lsls	r3, r3, #3
 10226 109a 9B1A     		subs	r3, r3, r2
 10227 109c 1B01     		lsls	r3, r3, #4
 10228 109e 0B44     		add	r3, r3, r1
 10229 10a0 03F58873 		add	r3, r3, #272
 10230 10a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10231 10a6 1D46     		mov	r5, r3
 10232 10a8 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10233 10aa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10234 10ac 7148     		ldr	r0, .L492
 10235 10ae 1346     		mov	r3, r2
 10236 10b0 DB00     		lsls	r3, r3, #3
 10237 10b2 9B1A     		subs	r3, r3, r2
 10238 10b4 1B01     		lsls	r3, r3, #4
 10239 10b6 0344     		add	r3, r3, r0
 10240 10b8 03F58873 		add	r3, r3, #272
 10241 10bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10242 10be 1C46     		mov	r4, r3
 10243 10c0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10244 10c2 6C48     		ldr	r0, .L492
 10245 10c4 2346     		mov	r3, r4
 10246 10c6 5B00     		lsls	r3, r3, #1
 10247 10c8 2344     		add	r3, r3, r4
 10248 10ca 9B00     		lsls	r3, r3, #2
 10249 10cc 1344     		add	r3, r3, r2
 10250 10ce 6633     		adds	r3, r3, #102
 10251 10d0 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10252 10d4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10253 10d6 674C     		ldr	r4, .L492
 10254 10d8 1346     		mov	r3, r2
 10255 10da DB00     		lsls	r3, r3, #3
 10256 10dc 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 240


 10257 10de 1B01     		lsls	r3, r3, #4
 10258 10e0 2344     		add	r3, r3, r4
 10259 10e2 03F58873 		add	r3, r3, #272
 10260 10e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10261 10e8 1E46     		mov	r6, r3
 10262 10ea FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10263 10ec 614C     		ldr	r4, .L492
 10264 10ee 3346     		mov	r3, r6
 10265 10f0 5B00     		lsls	r3, r3, #1
 10266 10f2 3344     		add	r3, r3, r6
 10267 10f4 1B01     		lsls	r3, r3, #4
 10268 10f6 2344     		add	r3, r3, r4
 10269 10f8 1344     		add	r3, r3, r2
 10270 10fa 03F29513 		addw	r3, r3, #405
 10271 10fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10272 1100 00FA03F2 		lsl	r2, r0, r3
 10273 1104 5B48     		ldr	r0, .L492
 10274 1106 2B46     		mov	r3, r5
 10275 1108 5B00     		lsls	r3, r3, #1
 10276 110a 2B44     		add	r3, r3, r5
 10277 110c 9B00     		lsls	r3, r3, #2
 10278 110e 0B44     		add	r3, r3, r1
 10279 1110 6633     		adds	r3, r3, #102
 10280 1112 40F82320 		str	r2, [r0, r3, lsl #2]
1574:..\src/command_processing.c **** 
1575:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 10281              		.loc 1 1575 0 discriminator 3
 10282 1116 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10283 1118 5649     		ldr	r1, .L492
 10284 111a 1346     		mov	r3, r2
 10285 111c DB00     		lsls	r3, r3, #3
 10286 111e 9B1A     		subs	r3, r3, r2
 10287 1120 1B01     		lsls	r3, r3, #4
 10288 1122 0B44     		add	r3, r3, r1
 10289 1124 03F58873 		add	r3, r3, #272
 10290 1128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10291 112a 1846     		mov	r0, r3
 10292 112c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10293 112e 5349     		ldr	r1, .L492+8
 10294 1130 3422     		movs	r2, #52
 10295 1132 02FB00F2 		mul	r2, r2, r0
 10296 1136 0A44     		add	r2, r2, r1
 10297 1138 1344     		add	r3, r3, r2
 10298 113a 1833     		adds	r3, r3, #24
 10299 113c 0022     		movs	r2, #0
 10300 113e 1A70     		strb	r2, [r3]
1571:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10301              		.loc 1 1571 0 discriminator 3
 10302 1140 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10303 1142 0133     		adds	r3, r3, #1
 10304 1144 FB75     		strb	r3, [r7, #23]
 10305              	.L470:
1571:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10306              		.loc 1 1571 0 is_stmt 0 discriminator 1
 10307 1146 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10308 1148 022B     		cmp	r3, #2
 10309 114a 7FF67DAF 		bls	.L471
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 241


1576:..\src/command_processing.c ****             }
1577:..\src/command_processing.c ****             reset_last_value_flag[SECOND_MOTOR_IDX] = 1;
 10310              		.loc 1 1577 0 is_stmt 1
 10311 114e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 10312 1150 4B4A     		ldr	r2, .L492+12
 10313 1152 0121     		movs	r1, #1
 10314 1154 D154     		strb	r1, [r2, r3]
1578:..\src/command_processing.c ****             break;
 10315              		.loc 1 1578 0
 10316 1156 B8E1     		b	.L416
 10317              	.L399:
1579:..\src/command_processing.c ****     
1580:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1581:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 10318              		.loc 1 1581 0
 10319 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10320 115a 474B     		ldr	r3, .L492+4
 10321 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10322 115e 1906     		lsls	r1, r3, #24
 10323 1160 454B     		ldr	r3, .L492+4
 10324 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10325 1164 1B04     		lsls	r3, r3, #16
 10326 1166 1943     		orrs	r1, r1, r3
 10327 1168 434B     		ldr	r3, .L492+4
 10328 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10329 116c 1B02     		lsls	r3, r3, #8
 10330 116e 0B43     		orrs	r3, r3, r1
 10331 1170 4149     		ldr	r1, .L492+4
 10332 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10333 1174 1943     		orrs	r1, r1, r3
 10334 1176 3F48     		ldr	r0, .L492
 10335 1178 1346     		mov	r3, r2
 10336 117a DB00     		lsls	r3, r3, #3
 10337 117c 9B1A     		subs	r3, r3, r2
 10338 117e 1B01     		lsls	r3, r3, #4
 10339 1180 0344     		add	r3, r3, r0
 10340 1182 E433     		adds	r3, r3, #228
 10341 1184 1960     		str	r1, [r3]
1582:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 10342              		.loc 1 1582 0
 10343 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10344 1188 3B4B     		ldr	r3, .L492+4
 10345 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10346 118c 1906     		lsls	r1, r3, #24
 10347 118e 3A4B     		ldr	r3, .L492+4
 10348 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10349 1192 1B04     		lsls	r3, r3, #16
 10350 1194 1943     		orrs	r1, r1, r3
 10351 1196 384B     		ldr	r3, .L492+4
 10352 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10353 119a 1B02     		lsls	r3, r3, #8
 10354 119c 0B43     		orrs	r3, r3, r1
 10355 119e 3649     		ldr	r1, .L492+4
 10356 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10357 11a2 1943     		orrs	r1, r1, r3
 10358 11a4 3348     		ldr	r0, .L492
 10359 11a6 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 242


 10360 11a8 DB00     		lsls	r3, r3, #3
 10361 11aa 9B1A     		subs	r3, r3, r2
 10362 11ac 1B01     		lsls	r3, r3, #4
 10363 11ae 0344     		add	r3, r3, r0
 10364 11b0 E833     		adds	r3, r3, #232
 10365 11b2 1960     		str	r1, [r3]
1583:..\src/command_processing.c **** 
1584:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 10366              		.loc 1 1584 0
 10367 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10368 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10369 11b8 2E48     		ldr	r0, .L492
 10370 11ba 0B46     		mov	r3, r1
 10371 11bc DB00     		lsls	r3, r3, #3
 10372 11be 5B1A     		subs	r3, r3, r1
 10373 11c0 1B01     		lsls	r3, r3, #4
 10374 11c2 0344     		add	r3, r3, r0
 10375 11c4 E433     		adds	r3, r3, #228
 10376 11c6 1868     		ldr	r0, [r3]
 10377 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10378 11ca 2A4C     		ldr	r4, .L492
 10379 11cc 0B46     		mov	r3, r1
 10380 11ce DB00     		lsls	r3, r3, #3
 10381 11d0 5B1A     		subs	r3, r3, r1
 10382 11d2 1B01     		lsls	r3, r3, #4
 10383 11d4 2344     		add	r3, r3, r4
 10384 11d6 03F58873 		add	r3, r3, #272
 10385 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10386 11dc 1C46     		mov	r4, r3
 10387 11de 2549     		ldr	r1, .L492
 10388 11e0 2346     		mov	r3, r4
 10389 11e2 5B00     		lsls	r3, r3, #1
 10390 11e4 2344     		add	r3, r3, r4
 10391 11e6 1B01     		lsls	r3, r3, #4
 10392 11e8 0B44     		add	r3, r3, r1
 10393 11ea 03F29513 		addw	r3, r3, #405
 10394 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10395 11f0 00FA03F1 		lsl	r1, r0, r3
 10396 11f4 1F48     		ldr	r0, .L492
 10397 11f6 1346     		mov	r3, r2
 10398 11f8 DB00     		lsls	r3, r3, #3
 10399 11fa 9B1A     		subs	r3, r3, r2
 10400 11fc 1B01     		lsls	r3, r3, #4
 10401 11fe 0344     		add	r3, r3, r0
 10402 1200 E433     		adds	r3, r3, #228
 10403 1202 1960     		str	r1, [r3]
1585:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 10404              		.loc 1 1585 0
 10405 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10406 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10407 1208 1A48     		ldr	r0, .L492
 10408 120a 0B46     		mov	r3, r1
 10409 120c DB00     		lsls	r3, r3, #3
 10410 120e 5B1A     		subs	r3, r3, r1
 10411 1210 1B01     		lsls	r3, r3, #4
 10412 1212 0344     		add	r3, r3, r0
 10413 1214 E833     		adds	r3, r3, #232
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 243


 10414 1216 1868     		ldr	r0, [r3]
 10415 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10416 121a 164C     		ldr	r4, .L492
 10417 121c 0B46     		mov	r3, r1
 10418 121e DB00     		lsls	r3, r3, #3
 10419 1220 5B1A     		subs	r3, r3, r1
 10420 1222 1B01     		lsls	r3, r3, #4
 10421 1224 2344     		add	r3, r3, r4
 10422 1226 03F58873 		add	r3, r3, #272
 10423 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10424 122c 1C46     		mov	r4, r3
 10425 122e 1149     		ldr	r1, .L492
 10426 1230 2346     		mov	r3, r4
 10427 1232 5B00     		lsls	r3, r3, #1
 10428 1234 2344     		add	r3, r3, r4
 10429 1236 1B01     		lsls	r3, r3, #4
 10430 1238 0B44     		add	r3, r3, r1
 10431 123a 03F29513 		addw	r3, r3, #405
 10432 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10433 1240 00FA03F1 		lsl	r1, r0, r3
 10434 1244 0B48     		ldr	r0, .L492
 10435 1246 1346     		mov	r3, r2
 10436 1248 DB00     		lsls	r3, r3, #3
 10437 124a 9B1A     		subs	r3, r3, r2
 10438 124c 1B01     		lsls	r3, r3, #4
 10439 124e 0344     		add	r3, r3, r0
 10440 1250 E833     		adds	r3, r3, #232
 10441 1252 1960     		str	r1, [r3]
1586:..\src/command_processing.c ****             break;
 10442              		.loc 1 1586 0
 10443 1254 39E1     		b	.L416
 10444              	.L400:
1587:..\src/command_processing.c ****             
1588:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1589:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10445              		.loc 1 1589 0
 10446 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10447 1258 074B     		ldr	r3, .L492+4
 10448 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10449 125c 0549     		ldr	r1, .L492
 10450 125e 1346     		mov	r3, r2
 10451 1260 DB00     		lsls	r3, r3, #3
 10452 1262 9B1A     		subs	r3, r3, r2
 10453 1264 1B01     		lsls	r3, r3, #4
 10454 1266 0B44     		add	r3, r3, r1
 10455 1268 E233     		adds	r3, r3, #226
 10456 126a 0246     		mov	r2, r0
 10457 126c 1A70     		strb	r2, [r3]
1590:..\src/command_processing.c ****             set_motor_driver_type();
 10458              		.loc 1 1590 0
 10459 126e FFF7FEFF 		bl	set_motor_driver_type
1591:..\src/command_processing.c ****             break;
 10460              		.loc 1 1591 0
 10461 1272 2AE1     		b	.L416
 10462              	.L493:
 10463              		.align	2
 10464              	.L492:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 244


 10465 1274 00000000 		.word	g_mem
 10466 1278 00000000 		.word	g_rx
 10467 127c 00000000 		.word	g_meas
 10468 1280 00000000 		.word	reset_last_value_flag
 10469              	.L401:
1592:..\src/command_processing.c **** 
1593:..\src/command_processing.c ****         case 75:        // Device type
1594:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 10470              		.loc 1 1594 0
 10471 1284 934B     		ldr	r3, .L494
 10472 1286 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 10473 1288 934B     		ldr	r3, .L494+4
 10474 128a 83F8AC20 		strb	r2, [r3, #172]
1595:..\src/command_processing.c ****             
1596:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 10475              		.loc 1 1596 0
 10476 128e 924B     		ldr	r3, .L494+4
 10477 1290 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10478 1294 002B     		cmp	r3, #0
 10479 1296 40F0A480 		bne	.L472
1597:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10480              		.loc 1 1597 0
 10481 129a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10482 129c 8E49     		ldr	r1, .L494+4
 10483 129e 1346     		mov	r3, r2
 10484 12a0 DB00     		lsls	r3, r3, #3
 10485 12a2 9B1A     		subs	r3, r3, r2
 10486 12a4 1B01     		lsls	r3, r3, #4
 10487 12a6 0B44     		add	r3, r3, r1
 10488 12a8 03F58873 		add	r3, r3, #272
 10489 12ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10490 12ae 1946     		mov	r1, r3
 10491 12b0 894A     		ldr	r2, .L494+4
 10492 12b2 0B46     		mov	r3, r1
 10493 12b4 5B00     		lsls	r3, r3, #1
 10494 12b6 0B44     		add	r3, r3, r1
 10495 12b8 1B01     		lsls	r3, r3, #4
 10496 12ba 1344     		add	r3, r3, r2
 10497 12bc 03F5D873 		add	r3, r3, #432
 10498 12c0 0122     		movs	r2, #1
 10499 12c2 1A70     		strb	r2, [r3]
1598:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10500              		.loc 1 1598 0
 10501 12c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10502 12c6 8449     		ldr	r1, .L494+4
 10503 12c8 1346     		mov	r3, r2
 10504 12ca DB00     		lsls	r3, r3, #3
 10505 12cc 9B1A     		subs	r3, r3, r2
 10506 12ce 1B01     		lsls	r3, r3, #4
 10507 12d0 0B44     		add	r3, r3, r1
 10508 12d2 03F58873 		add	r3, r3, #272
 10509 12d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10510 12d8 1946     		mov	r1, r3
 10511 12da 7F4A     		ldr	r2, .L494+4
 10512 12dc 0B46     		mov	r3, r1
 10513 12de 5B00     		lsls	r3, r3, #1
 10514 12e0 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 245


 10515 12e2 1B01     		lsls	r3, r3, #4
 10516 12e4 1344     		add	r3, r3, r2
 10517 12e6 03F2B513 		addw	r3, r3, #437
 10518 12ea 2322     		movs	r2, #35
 10519 12ec 1A70     		strb	r2, [r3]
1599:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10520              		.loc 1 1599 0
 10521 12ee 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10522 12f0 7949     		ldr	r1, .L494+4
 10523 12f2 1346     		mov	r3, r2
 10524 12f4 DB00     		lsls	r3, r3, #3
 10525 12f6 9B1A     		subs	r3, r3, r2
 10526 12f8 1B01     		lsls	r3, r3, #4
 10527 12fa 0B44     		add	r3, r3, r1
 10528 12fc 03F58873 		add	r3, r3, #272
 10529 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10530 1302 1946     		mov	r1, r3
 10531 1304 744A     		ldr	r2, .L494+4
 10532 1306 0B46     		mov	r3, r1
 10533 1308 5B00     		lsls	r3, r3, #1
 10534 130a 0B44     		add	r3, r3, r1
 10535 130c 1B01     		lsls	r3, r3, #4
 10536 130e 1344     		add	r3, r3, r2
 10537 1310 03F5DB73 		add	r3, r3, #438
 10538 1314 0322     		movs	r2, #3
 10539 1316 1A70     		strb	r2, [r3]
1600:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10540              		.loc 1 1600 0
 10541 1318 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10542 131a 6F49     		ldr	r1, .L494+4
 10543 131c 1346     		mov	r3, r2
 10544 131e DB00     		lsls	r3, r3, #3
 10545 1320 9B1A     		subs	r3, r3, r2
 10546 1322 1B01     		lsls	r3, r3, #4
 10547 1324 0B44     		add	r3, r3, r1
 10548 1326 03F58873 		add	r3, r3, #272
 10549 132a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10550 132c 1946     		mov	r1, r3
 10551 132e 6A4A     		ldr	r2, .L494+4
 10552 1330 0B46     		mov	r3, r1
 10553 1332 5B00     		lsls	r3, r3, #1
 10554 1334 0B44     		add	r3, r3, r1
 10555 1336 1B01     		lsls	r3, r3, #4
 10556 1338 1344     		add	r3, r3, r2
 10557 133a 03F2B713 		addw	r3, r3, #439
 10558 133e FF22     		movs	r2, #255
 10559 1340 1A70     		strb	r2, [r3]
1601:..\src/command_processing.c ****                 
1602:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1603:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 10560              		.loc 1 1603 0
 10561 1342 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10562 1344 644B     		ldr	r3, .L494+4
 10563 1346 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10564 134a 6349     		ldr	r1, .L494+4
 10565 134c 1346     		mov	r3, r2
 10566 134e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 246


 10567 1350 9B1A     		subs	r3, r3, r2
 10568 1352 1B01     		lsls	r3, r3, #4
 10569 1354 0B44     		add	r3, r3, r1
 10570 1356 03F58873 		add	r3, r3, #272
 10571 135a 0246     		mov	r2, r0
 10572 135c 1A70     		strb	r2, [r3]
1604:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10573              		.loc 1 1604 0
 10574 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10575 1360 5D49     		ldr	r1, .L494+4
 10576 1362 1346     		mov	r3, r2
 10577 1364 DB00     		lsls	r3, r3, #3
 10578 1366 9B1A     		subs	r3, r3, r2
 10579 1368 1B01     		lsls	r3, r3, #4
 10580 136a 0B44     		add	r3, r3, r1
 10581 136c 03F21113 		addw	r3, r3, #273
 10582 1370 0122     		movs	r2, #1
 10583 1372 1A70     		strb	r2, [r3]
1605:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10584              		.loc 1 1605 0
 10585 1374 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10586 1376 5849     		ldr	r1, .L494+4
 10587 1378 1346     		mov	r3, r2
 10588 137a DB00     		lsls	r3, r3, #3
 10589 137c 9B1A     		subs	r3, r3, r2
 10590 137e 1B01     		lsls	r3, r3, #4
 10591 1380 0B44     		add	r3, r3, r1
 10592 1382 03F58973 		add	r3, r3, #274
 10593 1386 0122     		movs	r2, #1
 10594 1388 1A70     		strb	r2, [r3]
1606:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10595              		.loc 1 1606 0
 10596 138a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10597 138c 5249     		ldr	r1, .L494+4
 10598 138e 1346     		mov	r3, r2
 10599 1390 DB00     		lsls	r3, r3, #3
 10600 1392 9B1A     		subs	r3, r3, r2
 10601 1394 1B01     		lsls	r3, r3, #4
 10602 1396 0B44     		add	r3, r3, r1
 10603 1398 E433     		adds	r3, r3, #228
 10604 139a 0022     		movs	r2, #0
 10605 139c 1A60     		str	r2, [r3]
1607:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_ID
 10606              		.loc 1 1607 0
 10607 139e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10608 13a0 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10609 13a2 4D48     		ldr	r0, .L494+4
 10610 13a4 0B46     		mov	r3, r1
 10611 13a6 DB00     		lsls	r3, r3, #3
 10612 13a8 5B1A     		subs	r3, r3, r1
 10613 13aa 1B01     		lsls	r3, r3, #4
 10614 13ac 0344     		add	r3, r3, r0
 10615 13ae 03F58873 		add	r3, r3, #272
 10616 13b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10617 13b4 1846     		mov	r0, r3
 10618 13b6 4849     		ldr	r1, .L494+4
 10619 13b8 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 247


 10620 13ba 5B00     		lsls	r3, r3, #1
 10621 13bc 0344     		add	r3, r3, r0
 10622 13be 1B01     		lsls	r3, r3, #4
 10623 13c0 0B44     		add	r3, r3, r1
 10624 13c2 03F29513 		addw	r3, r3, #405
 10625 13c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10626 13c8 1946     		mov	r1, r3
 10627 13ca 4FF47A53 		mov	r3, #16000
 10628 13ce 03FA01F1 		lsl	r1, r3, r1
 10629 13d2 4148     		ldr	r0, .L494+4
 10630 13d4 1346     		mov	r3, r2
 10631 13d6 DB00     		lsls	r3, r3, #3
 10632 13d8 9B1A     		subs	r3, r3, r2
 10633 13da 1B01     		lsls	r3, r3, #4
 10634 13dc 0344     		add	r3, r3, r0
 10635 13de E833     		adds	r3, r3, #232
 10636 13e0 1960     		str	r1, [r3]
 10637              	.L472:
1608:..\src/command_processing.c ****             }      
1609:..\src/command_processing.c ****             
1610:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 10638              		.loc 1 1610 0
 10639 13e2 3D4B     		ldr	r3, .L494+4
 10640 13e4 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10641 13e8 042B     		cmp	r3, #4
 10642 13ea 6DD1     		bne	.L481
1611:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 10643              		.loc 1 1611 0
 10644 13ec 3A4B     		ldr	r3, .L494+4
 10645 13ee 0122     		movs	r2, #1
 10646 13f0 83F8A920 		strb	r2, [r3, #169]
1612:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10647              		.loc 1 1612 0
 10648 13f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10649 13f6 3849     		ldr	r1, .L494+4
 10650 13f8 1346     		mov	r3, r2
 10651 13fa DB00     		lsls	r3, r3, #3
 10652 13fc 9B1A     		subs	r3, r3, r2
 10653 13fe 1B01     		lsls	r3, r3, #4
 10654 1400 0B44     		add	r3, r3, r1
 10655 1402 03F58873 		add	r3, r3, #272
 10656 1406 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10657 1408 1946     		mov	r1, r3
 10658 140a 334A     		ldr	r2, .L494+4
 10659 140c 0B46     		mov	r3, r1
 10660 140e 5B00     		lsls	r3, r3, #1
 10661 1410 0B44     		add	r3, r3, r1
 10662 1412 1B01     		lsls	r3, r3, #4
 10663 1414 1344     		add	r3, r3, r2
 10664 1416 03F5D873 		add	r3, r3, #432
 10665 141a 0122     		movs	r2, #1
 10666 141c 1A70     		strb	r2, [r3]
1613:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10667              		.loc 1 1613 0
 10668 141e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10669 1420 2D49     		ldr	r1, .L494+4
 10670 1422 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 248


 10671 1424 DB00     		lsls	r3, r3, #3
 10672 1426 9B1A     		subs	r3, r3, r2
 10673 1428 1B01     		lsls	r3, r3, #4
 10674 142a 0B44     		add	r3, r3, r1
 10675 142c 03F58873 		add	r3, r3, #272
 10676 1430 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10677 1432 1946     		mov	r1, r3
 10678 1434 284A     		ldr	r2, .L494+4
 10679 1436 0B46     		mov	r3, r1
 10680 1438 5B00     		lsls	r3, r3, #1
 10681 143a 0B44     		add	r3, r3, r1
 10682 143c 1B01     		lsls	r3, r3, #4
 10683 143e 1344     		add	r3, r3, r2
 10684 1440 03F5D873 		add	r3, r3, #432
 10685 1444 0122     		movs	r2, #1
 10686 1446 1A70     		strb	r2, [r3]
1614:..\src/command_processing.c ****             /*    
1615:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
1616:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)18000 << g_mem.enc[g_mem.motor[MOTOR_ID
1617:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = ((int32)(-25000)) << g_mem.enc[g_mem.mo
1618:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = 0;
1619:..\src/command_processing.c ****             */    
1620:..\src/command_processing.c ****                 for (i=0; i< NUM_OF_MOTORS; i++) {                     // Maxon DCX16S
 10687              		.loc 1 1620 0
 10688 1448 0023     		movs	r3, #0
 10689 144a FB75     		strb	r3, [r7, #23]
 10690 144c 2EE0     		b	.L474
 10691              	.L475:
1621:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 10692              		.loc 1 1621 0 discriminator 3
 10693 144e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10694 1450 2149     		ldr	r1, .L494+4
 10695 1452 1346     		mov	r3, r2
 10696 1454 DB00     		lsls	r3, r3, #3
 10697 1456 9B1A     		subs	r3, r3, r2
 10698 1458 1B01     		lsls	r3, r3, #4
 10699 145a 0B44     		add	r3, r3, r1
 10700 145c 03F58673 		add	r3, r3, #268
 10701 1460 4FF44872 		mov	r2, #800
 10702 1464 1A80     		strh	r2, [r3]	@ movhi
1622:..\src/command_processing.c ****                     g_mem.motor[i].k_p           = 0.12 * 65536;
 10703              		.loc 1 1622 0 discriminator 3
 10704 1466 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10705 1468 1B49     		ldr	r1, .L494+4
 10706 146a 1346     		mov	r3, r2
 10707 146c DB00     		lsls	r3, r3, #3
 10708 146e 9B1A     		subs	r3, r3, r2
 10709 1470 1B01     		lsls	r3, r3, #4
 10710 1472 0B44     		add	r3, r3, r1
 10711 1474 B033     		adds	r3, r3, #176
 10712 1476 41F6B862 		movw	r2, #7864
 10713 147a 1A60     		str	r2, [r3]
1623:..\src/command_processing.c ****                     g_mem.motor[i].k_i           =    0 * 65536;
 10714              		.loc 1 1623 0 discriminator 3
 10715 147c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10716 147e 1649     		ldr	r1, .L494+4
 10717 1480 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 249


 10718 1482 DB00     		lsls	r3, r3, #3
 10719 1484 9B1A     		subs	r3, r3, r2
 10720 1486 1B01     		lsls	r3, r3, #4
 10721 1488 0B44     		add	r3, r3, r1
 10722 148a B433     		adds	r3, r3, #180
 10723 148c 0022     		movs	r2, #0
 10724 148e 1A60     		str	r2, [r3]
1624:..\src/command_processing.c ****                     g_mem.motor[i].k_d           = 0.05 * 65536;
 10725              		.loc 1 1624 0 discriminator 3
 10726 1490 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10727 1492 1149     		ldr	r1, .L494+4
 10728 1494 1346     		mov	r3, r2
 10729 1496 DB00     		lsls	r3, r3, #3
 10730 1498 9B1A     		subs	r3, r3, r2
 10731 149a 1B01     		lsls	r3, r3, #4
 10732 149c 0B44     		add	r3, r3, r1
 10733 149e B833     		adds	r3, r3, #184
 10734 14a0 40F6CC42 		movw	r2, #3276
 10735 14a4 1A60     		str	r2, [r3]
1620:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 10736              		.loc 1 1620 0 discriminator 3
 10737 14a6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10738 14a8 0133     		adds	r3, r3, #1
 10739 14aa FB75     		strb	r3, [r7, #23]
 10740              	.L474:
1620:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 10741              		.loc 1 1620 0 is_stmt 0 discriminator 1
 10742 14ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10743 14ae 012B     		cmp	r3, #1
 10744 14b0 CDD9     		bls	.L475
1625:..\src/command_processing.c ****                 }
1626:..\src/command_processing.c ****             }      
1627:..\src/command_processing.c ****             
1628:..\src/command_processing.c ****             break;
 10745              		.loc 1 1628 0 is_stmt 1
 10746 14b2 09E0     		b	.L481
 10747              	.L476:
1629:..\src/command_processing.c ****             
1630:..\src/command_processing.c ****         default:
1631:..\src/command_processing.c ****             break;
 10748              		.loc 1 1631 0
 10749 14b4 00BF     		nop
 10750 14b6 08E0     		b	.L416
 10751              	.L477:
1418:..\src/command_processing.c ****             
 10752              		.loc 1 1418 0
 10753 14b8 00BF     		nop
 10754 14ba 06E0     		b	.L416
 10755              	.L478:
1446:..\src/command_processing.c **** 
 10756              		.loc 1 1446 0
 10757 14bc 00BF     		nop
 10758 14be 04E0     		b	.L416
 10759              	.L479:
1464:..\src/command_processing.c ****             
 10760              		.loc 1 1464 0
 10761 14c0 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 250


 10762 14c2 02E0     		b	.L416
 10763              	.L480:
1474:..\src/command_processing.c ****            
 10764              		.loc 1 1474 0
 10765 14c4 00BF     		nop
 10766 14c6 00E0     		b	.L416
 10767              	.L481:
1628:..\src/command_processing.c ****             
 10768              		.loc 1 1628 0
 10769 14c8 00BF     		nop
 10770              	.L416:
1632:..\src/command_processing.c ****     }
1633:..\src/command_processing.c **** }
 10771              		.loc 1 1633 0 discriminator 1
 10772 14ca 00BF     		nop
 10773 14cc 1C37     		adds	r7, r7, #28
 10774              		.cfi_def_cfa_offset 20
 10775 14ce BD46     		mov	sp, r7
 10776              		.cfi_def_cfa_register 13
 10777              		@ sp needed
 10778 14d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 10779              	.L495:
 10780 14d2 00BF     		.align	2
 10781              	.L494:
 10782 14d4 00000000 		.word	g_rx
 10783 14d8 00000000 		.word	g_mem
 10784              		.cfi_endproc
 10785              	.LFE69:
 10786              		.size	set_custom_param, .-set_custom_param
 10787              		.section	.rodata
 10788 10be 0000     		.align	2
 10789              	.LC145:
 10790 10c0 506F7274 		.ascii	"Port %u ID:\000"
 10790      20257520 
 10790      49443A00 
 10791              		.align	2
 10792              	.LC146:
 10793 10cc 2575202D 		.ascii	"%u - Device ID:\000"
 10793      20446576 
 10793      69636520 
 10793      49443A00 
 10794              		.align	2
 10795              	.LC147:
 10796 10dc 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 10796      20494D55 
 10796      20256420 
 10796      636F6E66 
 10796      69677572 
 10797 10f7 00       		.align	2
 10798              	.LC148:
 10799 10f8 2575202D 		.ascii	"%u - SPI read delay:\000"
 10799      20535049 
 10799      20726561 
 10799      64206465 
 10799      6C61793A 
 10800 110d 000000   		.align	2
 10801              	.LC149:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 251


 10802 1110 204E6F6E 		.ascii	" None\000"
 10802      6500
 10803 1116 0000     		.align	2
 10804              	.LC150:
 10805 1118 204C6F77 		.ascii	" Low\000"
 10805      00
 10806 111d 000000   		.align	2
 10807              	.LC151:
 10808 1120 20486967 		.ascii	" High\000"
 10808      6800
 10809 1126 0000     		.align	2
 10810              	.LC143:
 10811 1128 4E756D62 		.ascii	"Number of connected IMUs:\000"
 10811      6572206F 
 10811      6620636F 
 10811      6E6E6563 
 10811      74656420 
 10812 1142 0000     		.align	2
 10813              	.LC144:
 10814 1144 4D616720 		.ascii	"Mag cal parameters:\000"
 10814      63616C20 
 10814      70617261 
 10814      6D657465 
 10814      72733A00 
 10815              		.section	.text.get_IMU_param_list,"ax",%progbits
 10816              		.align	2
 10817              		.global	get_IMU_param_list
 10818              		.thumb
 10819              		.thumb_func
 10820              		.type	get_IMU_param_list, %function
 10821              	get_IMU_param_list:
 10822              	.LFB70:
1634:..\src/command_processing.c **** 
1635:..\src/command_processing.c **** //==============================================================================
1636:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1637:..\src/command_processing.c **** //==============================================================================
1638:..\src/command_processing.c **** 
1639:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1640:..\src/command_processing.c **** {
 10823              		.loc 1 1640 0
 10824              		.cfi_startproc
 10825              		@ args = 0, pretend = 0, frame = 1704
 10826              		@ frame_needed = 1, uses_anonymous_args = 0
 10827 0000 B0B5     		push	{r4, r5, r7, lr}
 10828              		.cfi_def_cfa_offset 16
 10829              		.cfi_offset 4, -16
 10830              		.cfi_offset 5, -12
 10831              		.cfi_offset 7, -8
 10832              		.cfi_offset 14, -4
 10833 0002 ADF5D56D 		sub	sp, sp, #1704
 10834              		.cfi_def_cfa_offset 1720
 10835 0006 00AF     		add	r7, sp, #0
 10836              		.cfi_def_cfa_register 7
 10837 0008 0246     		mov	r2, r0
 10838 000a BB1D     		adds	r3, r7, #6
 10839 000c 1A80     		strh	r2, [r3]	@ movhi
1641:..\src/command_processing.c ****     //Package to be sent variables
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 252


1642:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 10840              		.loc 1 1642 0
 10841 000e 07F58A73 		add	r3, r7, #276
 10842 0012 0022     		movs	r2, #0
 10843 0014 1A60     		str	r2, [r3]
 10844 0016 0433     		adds	r3, r3, #4
 10845 0018 40F27552 		movw	r2, #1397
 10846 001c 0021     		movs	r1, #0
 10847 001e 1846     		mov	r0, r3
 10848 0020 FFF7FEFF 		bl	memset
1643:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1644:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1645:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1646:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1647:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1648:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1649:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 10849              		.loc 1 1649 0
 10850 0024 0723     		movs	r3, #7
 10851 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1650:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 10852              		.loc 1 1650 0
 10853 002a 0023     		movs	r3, #0
 10854 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1651:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 10855              		.loc 1 1651 0
 10856 0030 0223     		movs	r3, #2
 10857 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1652:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 10858              		.loc 1 1652 0
 10859 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 10860 003a 5A1C     		adds	r2, r3, #1
1653:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 10861              		.loc 1 1653 0
 10862 003c B7F8A636 		ldrh	r3, [r7, #1702]
 10863 0040 1344     		add	r3, r3, r2
1654:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 10864              		.loc 1 1654 0
 10865 0042 0133     		adds	r3, r3, #1
1652:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 10866              		.loc 1 1652 0
 10867 0044 9AB2     		uxth	r2, r3
 10868 0046 D24B     		ldr	r3, .L542
 10869 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10870 004a 9BB2     		uxth	r3, r3
 10871 004c 1344     		add	r3, r3, r2
 10872 004e 9BB2     		uxth	r3, r3
 10873 0050 1A46     		mov	r2, r3	@ movhi
 10874 0052 9200     		lsls	r2, r2, #2
 10875 0054 1344     		add	r3, r3, r2
 10876 0056 1A46     		mov	r2, r3	@ movhi
 10877 0058 9100     		lsls	r1, r2, #2
 10878 005a 1A46     		mov	r2, r3	@ movhi
 10879 005c 0B46     		mov	r3, r1	@ movhi
 10880 005e 1344     		add	r3, r3, r2
 10881 0060 5B00     		lsls	r3, r3, #1
 10882 0062 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 253


 10883 0064 FB33     		adds	r3, r3, #251
 10884 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1655:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1656:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1657:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1658:..\src/command_processing.c **** 
1659:..\src/command_processing.c ****     //Auxiliary variables
1660:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1661:..\src/command_processing.c ****     uint16 start_byte = 0;
 10885              		.loc 1 1661 0
 10886 006a 0023     		movs	r3, #0
 10887 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1662:..\src/command_processing.c **** 
1663:..\src/command_processing.c ****     //Parameters menu string definitions
1664:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 10888              		.loc 1 1664 0
 10889 0070 07F1F803 		add	r3, r7, #248
 10890 0074 C74A     		ldr	r2, .L542+4
 10891 0076 1C46     		mov	r4, r3
 10892 0078 1546     		mov	r5, r2
 10893 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10894 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10895 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 10896 0082 03C4     		stmia	r4!, {r0, r1}
 10897 0084 2280     		strh	r2, [r4]	@ movhi
1665:..\src/command_processing.c ****     char ids_str[11]            = "";
 10898              		.loc 1 1665 0
 10899 0086 07F1EC03 		add	r3, r7, #236
 10900 008a 0022     		movs	r2, #0
 10901 008c 1A60     		str	r2, [r3]
 10902 008e 0433     		adds	r3, r3, #4
 10903 0090 0022     		movs	r2, #0
 10904 0092 1A60     		str	r2, [r3]
 10905 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1666:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 10906              		.loc 1 1666 0
 10907 0098 07F1D803 		add	r3, r7, #216
 10908 009c BE4A     		ldr	r2, .L542+8
 10909 009e 1C46     		mov	r4, r3
 10910 00a0 1546     		mov	r5, r2
 10911 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10912 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10913 00a6 2B68     		ldr	r3, [r5]
 10914 00a8 2360     		str	r3, [r4]
1667:..\src/command_processing.c ****     char id_str[16]             = "";
 10915              		.loc 1 1667 0
 10916 00aa 07F1C803 		add	r3, r7, #200
 10917 00ae 0022     		movs	r2, #0
 10918 00b0 1A60     		str	r2, [r3]
 10919 00b2 0433     		adds	r3, r3, #4
 10920 00b4 0022     		movs	r2, #0
 10921 00b6 1A60     		str	r2, [r3]
 10922 00b8 5A60     		str	r2, [r3, #4]
 10923 00ba 9A60     		str	r2, [r3, #8]
1668:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 10924              		.loc 1 1668 0
 10925 00bc 07F19C03 		add	r3, r7, #156
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 254


 10926 00c0 0022     		movs	r2, #0
 10927 00c2 1A60     		str	r2, [r3]
 10928 00c4 0433     		adds	r3, r3, #4
 10929 00c6 2622     		movs	r2, #38
 10930 00c8 0021     		movs	r1, #0
 10931 00ca 1846     		mov	r0, r3
 10932 00cc FFF7FEFF 		bl	memset
1669:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 10933              		.loc 1 1669 0
 10934 00d0 07F18003 		add	r3, r7, #128
 10935 00d4 0022     		movs	r2, #0
 10936 00d6 1A60     		str	r2, [r3]
 10937 00d8 0433     		adds	r3, r3, #4
 10938 00da 0022     		movs	r2, #0
 10939 00dc 1A60     		str	r2, [r3]
 10940 00de 5A60     		str	r2, [r3, #4]
 10941 00e0 9A60     		str	r2, [r3, #8]
 10942 00e2 DA60     		str	r2, [r3, #12]
 10943 00e4 1A61     		str	r2, [r3, #16]
 10944 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1670:..\src/command_processing.c ****     
1671:..\src/command_processing.c ****     //Strings lenghts
1672:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 10945              		.loc 1 1672 0
 10946 00e8 07F1C803 		add	r3, r7, #200
 10947 00ec 1846     		mov	r0, r3
 10948 00ee FFF7FEFF 		bl	strlen
 10949 00f2 0346     		mov	r3, r0
 10950 00f4 87F89336 		strb	r3, [r7, #1683]
1673:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 10951              		.loc 1 1673 0
 10952 00f8 07F1F803 		add	r3, r7, #248
 10953 00fc 1846     		mov	r0, r3
 10954 00fe FFF7FEFF 		bl	strlen
 10955 0102 0346     		mov	r3, r0
 10956 0104 87F89236 		strb	r3, [r7, #1682]
1674:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 10957              		.loc 1 1674 0
 10958 0108 07F1EC03 		add	r3, r7, #236
 10959 010c 1846     		mov	r0, r3
 10960 010e FFF7FEFF 		bl	strlen
 10961 0112 0346     		mov	r3, r0
 10962 0114 87F89136 		strb	r3, [r7, #1681]
1675:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 10963              		.loc 1 1675 0
 10964 0118 07F1D803 		add	r3, r7, #216
 10965 011c 1846     		mov	r0, r3
 10966 011e FFF7FEFF 		bl	strlen
 10967 0122 0346     		mov	r3, r0
 10968 0124 87F89036 		strb	r3, [r7, #1680]
1676:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 10969              		.loc 1 1676 0
 10970 0128 07F19C03 		add	r3, r7, #156
 10971 012c 1846     		mov	r0, r3
 10972 012e FFF7FEFF 		bl	strlen
 10973 0132 0346     		mov	r3, r0
 10974 0134 87F88F36 		strb	r3, [r7, #1679]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 255


1677:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 10975              		.loc 1 1677 0
 10976 0138 07F18003 		add	r3, r7, #128
 10977 013c 1846     		mov	r0, r3
 10978 013e FFF7FEFF 		bl	strlen
 10979 0142 0346     		mov	r3, r0
 10980 0144 87F89D36 		strb	r3, [r7, #1693]
1678:..\src/command_processing.c ****     
1679:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 10981              		.loc 1 1679 0
 10982 0148 07F10803 		add	r3, r7, #8
 10983 014c 0022     		movs	r2, #0
 10984 014e 1A60     		str	r2, [r3]
 10985 0150 0433     		adds	r3, r3, #4
 10986 0152 7222     		movs	r2, #114
 10987 0154 0021     		movs	r1, #0
 10988 0156 1846     		mov	r0, r3
 10989 0158 FFF7FEFF 		bl	memset
1680:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1681:..\src/command_processing.c ****  
1682:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 10990              		.loc 1 1682 0
 10991 015c 07F10800 		add	r0, r7, #8
 10992 0160 6423     		movs	r3, #100
 10993 0162 0A22     		movs	r2, #10
 10994 0164 8D49     		ldr	r1, .L542+12
 10995 0166 FFF7FEFF 		bl	sprintf
1683:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 10996              		.loc 1 1683 0
 10997 016a 07F10803 		add	r3, r7, #8
 10998 016e 1846     		mov	r0, r3
 10999 0170 FFF7FEFF 		bl	strlen
 11000 0174 0346     		mov	r3, r0
 11001 0176 87F88E36 		strb	r3, [r7, #1678]
1684:..\src/command_processing.c **** 
1685:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1686:..\src/command_processing.c ****     // update packet_length
1687:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 11002              		.loc 1 1687 0
 11003 017a 854B     		ldr	r3, .L542
 11004 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11005 017e 5B08     		lsrs	r3, r3, #1
 11006 0180 DBB2     		uxtb	r3, r3
 11007 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1688:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 11008              		.loc 1 1688 0
 11009 0186 824B     		ldr	r3, .L542
 11010 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11011 018a 1A46     		mov	r2, r3
 11012 018c B7F8A636 		ldrh	r3, [r7, #1702]
 11013 0190 5B00     		lsls	r3, r3, #1
 11014 0192 D31A     		subs	r3, r2, r3
 11015 0194 002B     		cmp	r3, #0
 11016 0196 04DD     		ble	.L497
 11017              		.loc 1 1688 0 is_stmt 0 discriminator 1
 11018 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 11019 019c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 256


 11020 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 11021              	.L497:
1689:..\src/command_processing.c ****     
1690:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 11022              		.loc 1 1690 0 is_stmt 1
 11023 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 11024 01a6 5A1C     		adds	r2, r3, #1
1691:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 11025              		.loc 1 1691 0
 11026 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 11027 01ac 1344     		add	r3, r3, r2
1692:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 11028              		.loc 1 1692 0
 11029 01ae 0133     		adds	r3, r3, #1
1690:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 11030              		.loc 1 1690 0
 11031 01b0 9AB2     		uxth	r2, r3
 11032 01b2 774B     		ldr	r3, .L542
 11033 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11034 01b6 9BB2     		uxth	r3, r3
 11035 01b8 1344     		add	r3, r3, r2
 11036 01ba 9BB2     		uxth	r3, r3
 11037 01bc 1A46     		mov	r2, r3	@ movhi
 11038 01be 9200     		lsls	r2, r2, #2
 11039 01c0 1344     		add	r3, r3, r2
 11040 01c2 1A46     		mov	r2, r3	@ movhi
 11041 01c4 9100     		lsls	r1, r2, #2
 11042 01c6 1A46     		mov	r2, r3	@ movhi
 11043 01c8 0B46     		mov	r3, r1	@ movhi
 11044 01ca 1344     		add	r3, r3, r2
 11045 01cc 5B00     		lsls	r3, r3, #1
 11046 01ce 9BB2     		uxth	r3, r3
 11047 01d0 C933     		adds	r3, r3, #201
 11048 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1693:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1694:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1695:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1696:..\src/command_processing.c **** 
1697:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 11049              		.loc 1 1697 0
 11050 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 11051 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11052 01de 1344     		add	r3, r3, r2
 11053 01e0 9BB2     		uxth	r3, r3
 11054 01e2 0333     		adds	r3, r3, #3
 11055 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1698:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 11056              		.loc 1 1698 0
 11057 01e8 07F58A73 		add	r3, r7, #276
 11058 01ec A222     		movs	r2, #162
 11059 01ee 1A70     		strb	r2, [r3]
1699:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 11060              		.loc 1 1699 0
 11061 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 11062 01f4 DAB2     		uxtb	r2, r3
 11063 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11064 01fa DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 257


 11065 01fc 1344     		add	r3, r3, r2
 11066 01fe DAB2     		uxtb	r2, r3
 11067 0200 634B     		ldr	r3, .L542
 11068 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11069 0204 1344     		add	r3, r3, r2
 11070 0206 DBB2     		uxtb	r3, r3
 11071 0208 0333     		adds	r3, r3, #3
 11072 020a DAB2     		uxtb	r2, r3
 11073 020c 07F58A73 		add	r3, r7, #276
 11074 0210 5A70     		strb	r2, [r3, #1]
1700:..\src/command_processing.c **** 
1701:..\src/command_processing.c ****     switch(index) {
 11075              		.loc 1 1701 0
 11076 0212 BB1D     		adds	r3, r7, #6
 11077 0214 1B88     		ldrh	r3, [r3]
 11078 0216 002B     		cmp	r3, #0
 11079 0218 40F0D084 		bne	.L540
1702:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1703:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1704:..\src/command_processing.c ****             start_byte = 0;
 11080              		.loc 1 1704 0
 11081 021c 0023     		movs	r3, #0
 11082 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1705:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 11083              		.loc 1 1705 0
 11084 0222 07F58A73 		add	r3, r7, #276
 11085 0226 0222     		movs	r2, #2
 11086 0228 9A70     		strb	r2, [r3, #2]
1706:..\src/command_processing.c ****             packet_data[3] = 1;
 11087              		.loc 1 1706 0
 11088 022a 07F58A73 		add	r3, r7, #276
 11089 022e 0122     		movs	r2, #1
 11090 0230 DA70     		strb	r2, [r3, #3]
1707:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 11091              		.loc 1 1707 0
 11092 0232 574B     		ldr	r3, .L542
 11093 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11094 0236 07F58A73 		add	r3, r7, #276
 11095 023a 1A71     		strb	r2, [r3, #4]
1708:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11096              		.loc 1 1708 0
 11097 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 11098 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11099 0244 15E0     		b	.L500
 11100              	.L501:
1709:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 11101              		.loc 1 1709 0 discriminator 3
 11102 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 11103 024a 5A1D     		adds	r2, r3, #5
 11104 024c B7F8A436 		ldrh	r3, [r7, #1700]
 11105 0250 D31A     		subs	r3, r2, r3
 11106 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 11107 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 11108 025a 8A1A     		subs	r2, r1, r2
 11109 025c 07F1F801 		add	r1, r7, #248
 11110 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11111 0262 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 258


 11112 0266 D154     		strb	r1, [r2, r3]
1708:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11113              		.loc 1 1708 0 discriminator 3
 11114 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 11115 026c 013B     		subs	r3, r3, #1
 11116 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11117              	.L500:
1708:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11118              		.loc 1 1708 0 is_stmt 0 discriminator 1
 11119 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 11120 0276 002B     		cmp	r3, #0
 11121 0278 E5D1     		bne	.L501
1710:..\src/command_processing.c ****                 
1711:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1712:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 11122              		.loc 1 1712 0 is_stmt 1
 11123 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11124 027e 3233     		adds	r3, r3, #50
 11125 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1713:..\src/command_processing.c ****             i = 0;
 11126              		.loc 1 1713 0
 11127 0284 0023     		movs	r3, #0
 11128 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1714:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 11129              		.loc 1 1714 0
 11130 028a 0023     		movs	r3, #0
 11131 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11132 0290 B2E0     		b	.L502
 11133              	.L509:
1715:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11134              		.loc 1 1715 0
 11135 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 11136 0296 07F1EC03 		add	r3, r7, #236
 11137 029a 4149     		ldr	r1, .L542+16
 11138 029c 1846     		mov	r0, r3
 11139 029e FFF7FEFF 		bl	sprintf
1716:..\src/command_processing.c ****                 h = 4;
 11140              		.loc 1 1716 0
 11141 02a2 0423     		movs	r3, #4
 11142 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1717:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 11143              		.loc 1 1717 0
 11144 02a8 07F1EC03 		add	r3, r7, #236
 11145 02ac 1846     		mov	r0, r3
 11146 02ae FFF7FEFF 		bl	strlen
 11147 02b2 0346     		mov	r3, r0
 11148 02b4 87F89136 		strb	r3, [r7, #1681]
1718:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11149              		.loc 1 1718 0
 11150 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 11151 02bc 9A1C     		adds	r2, r3, #2
 11152 02be B7F8A036 		ldrh	r3, [r7, #1696]
 11153 02c2 3221     		movs	r1, #50
 11154 02c4 01FB03F3 		mul	r3, r1, r3
 11155 02c8 1344     		add	r3, r3, r2
 11156 02ca 07F58A72 		add	r2, r7, #276
 11157 02ce 0221     		movs	r1, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 259


 11158 02d0 D154     		strb	r1, [r2, r3]
1719:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 11159              		.loc 1 1719 0
 11160 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 11161 02d6 DA1C     		adds	r2, r3, #3
 11162 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 11163 02dc 3221     		movs	r1, #50
 11164 02de 01FB03F3 		mul	r3, r1, r3
 11165 02e2 1344     		add	r3, r3, r2
 11166 02e4 07F58A72 		add	r2, r7, #276
 11167 02e8 0321     		movs	r1, #3
 11168 02ea D154     		strb	r1, [r2, r3]
1720:..\src/command_processing.c ****                 
1721:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 11169              		.loc 1 1721 0
 11170 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 11171 02f0 1A46     		mov	r2, r3	@ movhi
 11172 02f2 5200     		lsls	r2, r2, #1
 11173 02f4 1344     		add	r3, r3, r2
 11174 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11175 02fa 39E0     		b	.L503
 11176              	.L506:
1722:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11177              		.loc 1 1722 0
 11178 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 11179 0300 284A     		ldr	r2, .L542+20
 11180 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11181 0304 9BB2     		uxth	r3, r3
 11182 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 11183 030a 9A42     		cmp	r2, r3
 11184 030c 17D1     		bne	.L504
1723:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 11185              		.loc 1 1723 0
 11186 030e B7F89E26 		ldrh	r2, [r7, #1694]
 11187 0312 B7F89436 		ldrh	r3, [r7, #1684]
 11188 0316 1A44     		add	r2, r2, r3
 11189 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 11190 031c 3221     		movs	r1, #50
 11191 031e 01FB03F3 		mul	r3, r1, r3
 11192 0322 1344     		add	r3, r3, r2
 11193 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 11194 0328 1E49     		ldr	r1, .L542+20
 11195 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11196 032c 07F58A72 		add	r2, r7, #276
 11197 0330 D154     		strb	r1, [r2, r3]
1724:..\src/command_processing.c ****                         i++;
 11198              		.loc 1 1724 0
 11199 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 11200 0336 0133     		adds	r3, r3, #1
 11201 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11202 033c 0EE0     		b	.L505
 11203              	.L504:
1725:..\src/command_processing.c ****                     } 
1726:..\src/command_processing.c ****                     else {
1727:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 11204              		.loc 1 1727 0
 11205 033e B7F89E26 		ldrh	r2, [r7, #1694]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 260


 11206 0342 B7F89436 		ldrh	r3, [r7, #1684]
 11207 0346 1A44     		add	r2, r2, r3
 11208 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 11209 034c 3221     		movs	r1, #50
 11210 034e 01FB03F3 		mul	r3, r1, r3
 11211 0352 1344     		add	r3, r3, r2
 11212 0354 07F58A72 		add	r2, r7, #276
 11213 0358 FF21     		movs	r1, #255
 11214 035a D154     		strb	r1, [r2, r3]
 11215              	.L505:
1728:..\src/command_processing.c ****                     }
1729:..\src/command_processing.c ****                     h++;
 11216              		.loc 1 1729 0 discriminator 2
 11217 035c B7F89E36 		ldrh	r3, [r7, #1694]
 11218 0360 0133     		adds	r3, r3, #1
 11219 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1721:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11220              		.loc 1 1721 0 discriminator 2
 11221 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 11222 036a 0133     		adds	r3, r3, #1
 11223 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11224              	.L503:
1721:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11225              		.loc 1 1721 0 is_stmt 0 discriminator 1
 11226 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 11227 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 11228 0378 1346     		mov	r3, r2
 11229 037a 5B00     		lsls	r3, r3, #1
 11230 037c 1344     		add	r3, r3, r2
 11231 037e 0233     		adds	r3, r3, #2
 11232 0380 9942     		cmp	r1, r3
 11233 0382 BBDD     		ble	.L506
1730:..\src/command_processing.c ****                 }
1731:..\src/command_processing.c **** 
1732:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1733:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 11234              		.loc 1 1733 0 is_stmt 1
 11235 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 11236 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11237 038c 2BE0     		b	.L507
 11238              	.L543:
 11239 038e 00BF     		.align	2
 11240              	.L542:
 11241 0390 00000000 		.word	N_IMU_Connected
 11242 0394 28110000 		.word	.LC143
 11243 0398 44110000 		.word	.LC144
 11244 039c 88020000 		.word	.LC130
 11245 03a0 C0100000 		.word	.LC145
 11246 03a4 00000000 		.word	IMU_connected
 11247              	.L508:
1734:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11248              		.loc 1 1734 0 discriminator 3
 11249 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 11250 03ac DA1D     		adds	r2, r3, #7
 11251 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 11252 03b2 3221     		movs	r1, #50
 11253 03b4 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 261


 11254 03b8 1A44     		add	r2, r2, r3
 11255 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 11256 03be 1A44     		add	r2, r2, r3
 11257 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 11258 03c4 D31A     		subs	r3, r2, r3
 11259 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 11260 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 11261 03ce 8A1A     		subs	r2, r1, r2
 11262 03d0 07F1EC01 		add	r1, r7, #236
 11263 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11264 03d6 07F58A72 		add	r2, r7, #276
 11265 03da D154     		strb	r1, [r2, r3]
1733:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11266              		.loc 1 1733 0 discriminator 3
 11267 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 11268 03e0 013B     		subs	r3, r3, #1
 11269 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11270              	.L507:
1733:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11271              		.loc 1 1733 0 is_stmt 0 discriminator 1
 11272 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 11273 03ea 002B     		cmp	r3, #0
 11274 03ec DCD1     		bne	.L508
1714:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11275              		.loc 1 1714 0 is_stmt 1 discriminator 2
 11276 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 11277 03f2 0133     		adds	r3, r3, #1
 11278 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11279              	.L502:
1714:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11280              		.loc 1 1714 0 is_stmt 0 discriminator 1
 11281 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 11282 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 11283 0400 9A42     		cmp	r2, r3
 11284 0402 FFF446AF 		bcc	.L509
1735:..\src/command_processing.c ****             }
1736:..\src/command_processing.c ****             
1737:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1738:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 11285              		.loc 1 1738 0 is_stmt 1
 11286 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 11287 040a 1A46     		mov	r2, r3	@ movhi
 11288 040c 9200     		lsls	r2, r2, #2
 11289 040e 1344     		add	r3, r3, r2
 11290 0410 1A46     		mov	r2, r3	@ movhi
 11291 0412 9100     		lsls	r1, r2, #2
 11292 0414 1A46     		mov	r2, r3	@ movhi
 11293 0416 0B46     		mov	r3, r1	@ movhi
 11294 0418 1344     		add	r3, r3, r2
 11295 041a 5B00     		lsls	r3, r3, #1
 11296 041c 9AB2     		uxth	r2, r3
 11297 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11298 0422 1344     		add	r3, r3, r2
 11299 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1739:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 11300              		.loc 1 1739 0
 11301 0428 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 262


 11302 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11303 042e 1FE1     		b	.L510
 11304              	.L517:
1740:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11305              		.loc 1 1740 0
 11306 0430 B7F89436 		ldrh	r3, [r7, #1684]
 11307 0434 9A1C     		adds	r2, r3, #2
 11308 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 11309 043a 3221     		movs	r1, #50
 11310 043c 01FB03F3 		mul	r3, r1, r3
 11311 0440 1344     		add	r3, r3, r2
 11312 0442 07F58A72 		add	r2, r7, #276
 11313 0446 0221     		movs	r1, #2
 11314 0448 D154     		strb	r1, [r2, r3]
1741:..\src/command_processing.c ****                 
1742:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 11315              		.loc 1 1742 0
 11316 044a B7F89436 		ldrh	r3, [r7, #1684]
 11317 044e DA1C     		adds	r2, r3, #3
 11318 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 11319 0454 3221     		movs	r1, #50
 11320 0456 01FB03F3 		mul	r3, r1, r3
 11321 045a 1344     		add	r3, r3, r2
 11322 045c 07F58A72 		add	r2, r7, #276
 11323 0460 0321     		movs	r1, #3
 11324 0462 D154     		strb	r1, [r2, r3]
1743:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11325              		.loc 1 1743 0
 11326 0464 B7F89436 		ldrh	r3, [r7, #1684]
 11327 0468 1A1D     		adds	r2, r3, #4
 11328 046a B7F8A036 		ldrh	r3, [r7, #1696]
 11329 046e 3221     		movs	r1, #50
 11330 0470 01FB03F3 		mul	r3, r1, r3
 11331 0474 1A44     		add	r2, r2, r3
 11332 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 11333 047a 5B00     		lsls	r3, r3, #1
 11334 047c B249     		ldr	r1, .L544
 11335 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11336 0480 1846     		mov	r0, r3
 11337 0482 B249     		ldr	r1, .L544+4
 11338 0484 0346     		mov	r3, r0
 11339 0486 5B00     		lsls	r3, r3, #1
 11340 0488 0344     		add	r3, r3, r0
 11341 048a 0B44     		add	r3, r3, r1
 11342 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11343 048e 07F58A73 		add	r3, r7, #276
 11344 0492 9954     		strb	r1, [r3, r2]
1744:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11345              		.loc 1 1744 0
 11346 0494 B7F89436 		ldrh	r3, [r7, #1684]
 11347 0498 5A1D     		adds	r2, r3, #5
 11348 049a B7F8A036 		ldrh	r3, [r7, #1696]
 11349 049e 3221     		movs	r1, #50
 11350 04a0 01FB03F3 		mul	r3, r1, r3
 11351 04a4 1A44     		add	r2, r2, r3
 11352 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 11353 04aa 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 263


 11354 04ac A649     		ldr	r1, .L544
 11355 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11356 04b0 1846     		mov	r0, r3
 11357 04b2 A649     		ldr	r1, .L544+4
 11358 04b4 0346     		mov	r3, r0
 11359 04b6 5B00     		lsls	r3, r3, #1
 11360 04b8 0344     		add	r3, r3, r0
 11361 04ba 0B44     		add	r3, r3, r1
 11362 04bc 0133     		adds	r3, r3, #1
 11363 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11364 04c0 07F58A73 		add	r3, r7, #276
 11365 04c4 9954     		strb	r1, [r3, r2]
1745:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11366              		.loc 1 1745 0
 11367 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 11368 04ca 9A1D     		adds	r2, r3, #6
 11369 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 11370 04d0 3221     		movs	r1, #50
 11371 04d2 01FB03F3 		mul	r3, r1, r3
 11372 04d6 1A44     		add	r2, r2, r3
 11373 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 11374 04dc 5B00     		lsls	r3, r3, #1
 11375 04de 9A49     		ldr	r1, .L544
 11376 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11377 04e2 1846     		mov	r0, r3
 11378 04e4 9949     		ldr	r1, .L544+4
 11379 04e6 0346     		mov	r3, r0
 11380 04e8 5B00     		lsls	r3, r3, #1
 11381 04ea 0344     		add	r3, r3, r0
 11382 04ec 0B44     		add	r3, r3, r1
 11383 04ee 0233     		adds	r3, r3, #2
 11384 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11385 04f2 07F58A73 		add	r3, r7, #276
 11386 04f6 9954     		strb	r1, [r3, r2]
1746:..\src/command_processing.c ****                 
1747:..\src/command_processing.c ****                 // check if there is a second value
1748:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 11387              		.loc 1 1748 0
 11388 04f8 954B     		ldr	r3, .L544+8
 11389 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11390 04fc 1A46     		mov	r2, r3
 11391 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 11392 0502 0133     		adds	r3, r3, #1
 11393 0504 5B00     		lsls	r3, r3, #1
 11394 0506 9A42     		cmp	r2, r3
 11395 0508 28DA     		bge	.L511
1749:..\src/command_processing.c ****                     // there is only one value
1750:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 11396              		.loc 1 1750 0
 11397 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11398 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11399 0512 1EE0     		b	.L512
 11400              	.L513:
1751:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11401              		.loc 1 1751 0 discriminator 3
 11402 0514 B7F89436 		ldrh	r3, [r7, #1684]
 11403 0518 DA1D     		adds	r2, r3, #7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 264


 11404 051a B7F8A036 		ldrh	r3, [r7, #1696]
 11405 051e 3221     		movs	r1, #50
 11406 0520 01FB03F3 		mul	r3, r1, r3
 11407 0524 1A44     		add	r2, r2, r3
 11408 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11409 052a 1A44     		add	r2, r2, r3
 11410 052c B7F8A236 		ldrh	r3, [r7, #1698]
 11411 0530 D31A     		subs	r3, r2, r3
 11412 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 11413 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 11414 053a 8A1A     		subs	r2, r1, r2
 11415 053c 07F1D801 		add	r1, r7, #216
 11416 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11417 0542 07F58A72 		add	r2, r7, #276
 11418 0546 D154     		strb	r1, [r2, r3]
1750:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11419              		.loc 1 1750 0 discriminator 3
 11420 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 11421 054c 013B     		subs	r3, r3, #1
 11422 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11423              	.L512:
1750:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11424              		.loc 1 1750 0 is_stmt 0 discriminator 1
 11425 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 11426 0556 002B     		cmp	r3, #0
 11427 0558 DCD1     		bne	.L513
 11428 055a 84E0     		b	.L514
 11429              	.L511:
1752:..\src/command_processing.c ****                 }
1753:..\src/command_processing.c ****                 else {
1754:..\src/command_processing.c ****                     // fill the second value
1755:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 11430              		.loc 1 1755 0 is_stmt 1
 11431 055c B7F89436 		ldrh	r3, [r7, #1684]
 11432 0560 DA1C     		adds	r2, r3, #3
 11433 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 11434 0566 3221     		movs	r1, #50
 11435 0568 01FB03F3 		mul	r3, r1, r3
 11436 056c 1344     		add	r3, r3, r2
 11437 056e 07F58A72 		add	r2, r7, #276
 11438 0572 0621     		movs	r1, #6
 11439 0574 D154     		strb	r1, [r2, r3]
1756:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 11440              		.loc 1 1756 0
 11441 0576 B7F89436 		ldrh	r3, [r7, #1684]
 11442 057a DA1D     		adds	r2, r3, #7
 11443 057c B7F8A036 		ldrh	r3, [r7, #1696]
 11444 0580 3221     		movs	r1, #50
 11445 0582 01FB03F3 		mul	r3, r1, r3
 11446 0586 1A44     		add	r2, r2, r3
 11447 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 11448 058c 5B00     		lsls	r3, r3, #1
 11449 058e 0133     		adds	r3, r3, #1
 11450 0590 6D49     		ldr	r1, .L544
 11451 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11452 0594 1846     		mov	r0, r3
 11453 0596 6D49     		ldr	r1, .L544+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 265


 11454 0598 0346     		mov	r3, r0
 11455 059a 5B00     		lsls	r3, r3, #1
 11456 059c 0344     		add	r3, r3, r0
 11457 059e 0B44     		add	r3, r3, r1
 11458 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11459 05a2 07F58A73 		add	r3, r7, #276
 11460 05a6 9954     		strb	r1, [r3, r2]
1757:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 11461              		.loc 1 1757 0
 11462 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 11463 05ac 03F10802 		add	r2, r3, #8
 11464 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 11465 05b4 3221     		movs	r1, #50
 11466 05b6 01FB03F3 		mul	r3, r1, r3
 11467 05ba 1A44     		add	r2, r2, r3
 11468 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 11469 05c0 5B00     		lsls	r3, r3, #1
 11470 05c2 0133     		adds	r3, r3, #1
 11471 05c4 6049     		ldr	r1, .L544
 11472 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11473 05c8 1846     		mov	r0, r3
 11474 05ca 6049     		ldr	r1, .L544+4
 11475 05cc 0346     		mov	r3, r0
 11476 05ce 5B00     		lsls	r3, r3, #1
 11477 05d0 0344     		add	r3, r3, r0
 11478 05d2 0B44     		add	r3, r3, r1
 11479 05d4 0133     		adds	r3, r3, #1
 11480 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11481 05d8 07F58A73 		add	r3, r7, #276
 11482 05dc 9954     		strb	r1, [r3, r2]
1758:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 11483              		.loc 1 1758 0
 11484 05de B7F89436 		ldrh	r3, [r7, #1684]
 11485 05e2 03F10902 		add	r2, r3, #9
 11486 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 11487 05ea 3221     		movs	r1, #50
 11488 05ec 01FB03F3 		mul	r3, r1, r3
 11489 05f0 1A44     		add	r2, r2, r3
 11490 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 11491 05f6 5B00     		lsls	r3, r3, #1
 11492 05f8 0133     		adds	r3, r3, #1
 11493 05fa 5349     		ldr	r1, .L544
 11494 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11495 05fe 1846     		mov	r0, r3
 11496 0600 5249     		ldr	r1, .L544+4
 11497 0602 0346     		mov	r3, r0
 11498 0604 5B00     		lsls	r3, r3, #1
 11499 0606 0344     		add	r3, r3, r0
 11500 0608 0B44     		add	r3, r3, r1
 11501 060a 0233     		adds	r3, r3, #2
 11502 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11503 060e 07F58A73 		add	r3, r7, #276
 11504 0612 9954     		strb	r1, [r3, r2]
1759:..\src/command_processing.c ****                 
1760:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 11505              		.loc 1 1760 0
 11506 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 266


 11507 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11508 061c 1FE0     		b	.L515
 11509              	.L516:
1761:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 11510              		.loc 1 1761 0 discriminator 3
 11511 061e B7F89436 		ldrh	r3, [r7, #1684]
 11512 0622 03F10A02 		add	r2, r3, #10
 11513 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 11514 062a 3221     		movs	r1, #50
 11515 062c 01FB03F3 		mul	r3, r1, r3
 11516 0630 1A44     		add	r2, r2, r3
 11517 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11518 0636 1A44     		add	r2, r2, r3
 11519 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 11520 063c D31A     		subs	r3, r2, r3
 11521 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 11522 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 11523 0646 8A1A     		subs	r2, r1, r2
 11524 0648 07F1D801 		add	r1, r7, #216
 11525 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11526 064e 07F58A72 		add	r2, r7, #276
 11527 0652 D154     		strb	r1, [r2, r3]
1760:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 11528              		.loc 1 1760 0 discriminator 3
 11529 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 11530 0658 013B     		subs	r3, r3, #1
 11531 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11532              	.L515:
1760:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 11533              		.loc 1 1760 0 is_stmt 0 discriminator 1
 11534 065e B7F8A236 		ldrh	r3, [r7, #1698]
 11535 0662 002B     		cmp	r3, #0
 11536 0664 DBD1     		bne	.L516
 11537              	.L514:
1739:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11538              		.loc 1 1739 0 is_stmt 1 discriminator 2
 11539 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 11540 066a 0133     		adds	r3, r3, #1
 11541 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11542              	.L510:
1739:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11543              		.loc 1 1739 0 is_stmt 0 discriminator 1
 11544 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 11545 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 11546 0678 9A42     		cmp	r2, r3
 11547 067a FFF4D9AE 		bcc	.L517
1762:..\src/command_processing.c ****                 }
1763:..\src/command_processing.c ****             }
1764:..\src/command_processing.c ****             
1765:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1766:..\src/command_processing.c ****             
1767:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 11548              		.loc 1 1767 0 is_stmt 1
 11549 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11550 0682 1A46     		mov	r2, r3	@ movhi
 11551 0684 9200     		lsls	r2, r2, #2
 11552 0686 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 267


 11553 0688 1A46     		mov	r2, r3	@ movhi
 11554 068a 9100     		lsls	r1, r2, #2
 11555 068c 1A46     		mov	r2, r3	@ movhi
 11556 068e 0B46     		mov	r3, r1	@ movhi
 11557 0690 1344     		add	r3, r3, r2
 11558 0692 5B00     		lsls	r3, r3, #1
 11559 0694 9AB2     		uxth	r2, r3
 11560 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11561 069a 1344     		add	r3, r3, r2
 11562 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1768:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 11563              		.loc 1 1768 0
 11564 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 11565 06a4 5A1E     		subs	r2, r3, #1
 11566 06a6 07F1C803 		add	r3, r7, #200
 11567 06aa 2A49     		ldr	r1, .L544+12
 11568 06ac 1846     		mov	r0, r3
 11569 06ae FFF7FEFF 		bl	sprintf
1769:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 11570              		.loc 1 1769 0
 11571 06b2 07F1C803 		add	r3, r7, #200
 11572 06b6 1846     		mov	r0, r3
 11573 06b8 FFF7FEFF 		bl	strlen
 11574 06bc 0346     		mov	r3, r0
 11575 06be 87F89336 		strb	r3, [r7, #1683]
1770:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 11576              		.loc 1 1770 0
 11577 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 11578 06c6 0233     		adds	r3, r3, #2
 11579 06c8 07F58A72 		add	r2, r7, #276
 11580 06cc 0221     		movs	r1, #2
 11581 06ce D154     		strb	r1, [r2, r3]
1771:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 11582              		.loc 1 1771 0
 11583 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 11584 06d4 0333     		adds	r3, r3, #3
 11585 06d6 07F58A72 		add	r2, r7, #276
 11586 06da 0121     		movs	r1, #1
 11587 06dc D154     		strb	r1, [r2, r3]
1772:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 11588              		.loc 1 1772 0
 11589 06de B7F89436 		ldrh	r3, [r7, #1684]
 11590 06e2 0433     		adds	r3, r3, #4
 11591 06e4 1C4A     		ldr	r2, .L544+16
 11592 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 11593 06ea 07F58A72 		add	r2, r7, #276
 11594 06ee D154     		strb	r1, [r2, r3]
1773:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 11595              		.loc 1 1773 0
 11596 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 11597 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11598 06f8 18E0     		b	.L518
 11599              	.L519:
1774:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 11600              		.loc 1 1774 0 discriminator 3
 11601 06fa B7F89436 		ldrh	r3, [r7, #1684]
 11602 06fe 5A1D     		adds	r2, r3, #5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 268


 11603 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 11604 0704 1A44     		add	r2, r2, r3
 11605 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 11606 070a D31A     		subs	r3, r2, r3
 11607 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 11608 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 11609 0714 8A1A     		subs	r2, r1, r2
 11610 0716 07F1C801 		add	r1, r7, #200
 11611 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11612 071c 07F58A72 		add	r2, r7, #276
 11613 0720 D154     		strb	r1, [r2, r3]
1773:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 11614              		.loc 1 1773 0 discriminator 3
 11615 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 11616 0726 013B     		subs	r3, r3, #1
 11617 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11618              	.L518:
1773:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 11619              		.loc 1 1773 0 is_stmt 0 discriminator 1
 11620 072c B7F8A436 		ldrh	r3, [r7, #1700]
 11621 0730 002B     		cmp	r3, #0
 11622 0732 E2D1     		bne	.L519
1775:..\src/command_processing.c ****                 
1776:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1777:..\src/command_processing.c ****             
1778:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 11623              		.loc 1 1778 0 is_stmt 1
 11624 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11625 0738 3233     		adds	r3, r3, #50
 11626 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1779:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 11627              		.loc 1 1779 0
 11628 073e 0023     		movs	r3, #0
 11629 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11630 0744 38E1     		b	.L520
 11631              	.L545:
 11632 0746 00BF     		.align	2
 11633              	.L544:
 11634 0748 00000000 		.word	IMU_connected
 11635 074c 00000000 		.word	MagCal
 11636 0750 00000000 		.word	N_IMU_Connected
 11637 0754 CC100000 		.word	.LC146
 11638 0758 00000000 		.word	c_mem
 11639              	.L523:
1780:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 11640              		.loc 1 1780 0
 11641 075c B7F89826 		ldrh	r2, [r7, #1688]
 11642 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 11643 0764 D118     		adds	r1, r2, r3
 11644 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 11645 076a D54A     		ldr	r2, .L546
 11646 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11647 076e 07F19C00 		add	r0, r7, #156
 11648 0772 0A46     		mov	r2, r1
 11649 0774 D349     		ldr	r1, .L546+4
 11650 0776 FFF7FEFF 		bl	sprintf
1781:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 269


 11651              		.loc 1 1781 0
 11652 077a 07F19C03 		add	r3, r7, #156
 11653 077e 1846     		mov	r0, r3
 11654 0780 FFF7FEFF 		bl	strlen
 11655 0784 0346     		mov	r3, r0
 11656 0786 87F88F36 		strb	r3, [r7, #1679]
1782:..\src/command_processing.c ****             
1783:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 11657              		.loc 1 1783 0
 11658 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11659 078e 1A46     		mov	r2, r3	@ movhi
 11660 0790 9200     		lsls	r2, r2, #2
 11661 0792 1344     		add	r3, r3, r2
 11662 0794 1A46     		mov	r2, r3	@ movhi
 11663 0796 9100     		lsls	r1, r2, #2
 11664 0798 1A46     		mov	r2, r3	@ movhi
 11665 079a 0B46     		mov	r3, r1	@ movhi
 11666 079c 1344     		add	r3, r3, r2
 11667 079e 5B00     		lsls	r3, r3, #1
 11668 07a0 9AB2     		uxth	r2, r3
 11669 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11670 07a6 1344     		add	r3, r3, r2
 11671 07a8 9BB2     		uxth	r3, r3
 11672 07aa 0233     		adds	r3, r3, #2
 11673 07ac 9BB2     		uxth	r3, r3
 11674 07ae 1A46     		mov	r2, r3
 11675 07b0 07F58A73 		add	r3, r7, #276
 11676 07b4 0221     		movs	r1, #2
 11677 07b6 9954     		strb	r1, [r3, r2]
1784:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 11678              		.loc 1 1784 0
 11679 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11680 07bc 1A46     		mov	r2, r3	@ movhi
 11681 07be 9200     		lsls	r2, r2, #2
 11682 07c0 1344     		add	r3, r3, r2
 11683 07c2 1A46     		mov	r2, r3	@ movhi
 11684 07c4 9100     		lsls	r1, r2, #2
 11685 07c6 1A46     		mov	r2, r3	@ movhi
 11686 07c8 0B46     		mov	r3, r1	@ movhi
 11687 07ca 1344     		add	r3, r3, r2
 11688 07cc 5B00     		lsls	r3, r3, #1
 11689 07ce 9AB2     		uxth	r2, r3
 11690 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11691 07d4 1344     		add	r3, r3, r2
 11692 07d6 9BB2     		uxth	r3, r3
 11693 07d8 0333     		adds	r3, r3, #3
 11694 07da 9BB2     		uxth	r3, r3
 11695 07dc 1A46     		mov	r2, r3
 11696 07de 07F58A73 		add	r3, r7, #276
 11697 07e2 0521     		movs	r1, #5
 11698 07e4 9954     		strb	r1, [r3, r2]
1785:..\src/command_processing.c ****                 
1786:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11699              		.loc 1 1786 0
 11700 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11701 07ea 1A46     		mov	r2, r3	@ movhi
 11702 07ec 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 270


 11703 07ee 1344     		add	r3, r3, r2
 11704 07f0 1A46     		mov	r2, r3	@ movhi
 11705 07f2 9100     		lsls	r1, r2, #2
 11706 07f4 1A46     		mov	r2, r3	@ movhi
 11707 07f6 0B46     		mov	r3, r1	@ movhi
 11708 07f8 1344     		add	r3, r3, r2
 11709 07fa 5B00     		lsls	r3, r3, #1
 11710 07fc 9AB2     		uxth	r2, r3
 11711 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11712 0802 1344     		add	r3, r3, r2
 11713 0804 9BB2     		uxth	r3, r3
 11714 0806 0433     		adds	r3, r3, #4
 11715 0808 9BB2     		uxth	r3, r3
 11716 080a 1846     		mov	r0, r3
 11717 080c B7F8A436 		ldrh	r3, [r7, #1700]
 11718 0810 AB4A     		ldr	r2, .L546
 11719 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11720 0814 1946     		mov	r1, r3
 11721 0816 AC4A     		ldr	r2, .L546+8
 11722 0818 0B46     		mov	r3, r1
 11723 081a 9B00     		lsls	r3, r3, #2
 11724 081c 0B44     		add	r3, r3, r1
 11725 081e 1344     		add	r3, r3, r2
 11726 0820 03F20223 		addw	r3, r3, #514
 11727 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11728 0826 07F58A73 		add	r3, r7, #276
 11729 082a 1A54     		strb	r2, [r3, r0]
1787:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11730              		.loc 1 1787 0
 11731 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11732 0830 1A46     		mov	r2, r3	@ movhi
 11733 0832 9200     		lsls	r2, r2, #2
 11734 0834 1344     		add	r3, r3, r2
 11735 0836 1A46     		mov	r2, r3	@ movhi
 11736 0838 9100     		lsls	r1, r2, #2
 11737 083a 1A46     		mov	r2, r3	@ movhi
 11738 083c 0B46     		mov	r3, r1	@ movhi
 11739 083e 1344     		add	r3, r3, r2
 11740 0840 5B00     		lsls	r3, r3, #1
 11741 0842 9AB2     		uxth	r2, r3
 11742 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11743 0848 1344     		add	r3, r3, r2
 11744 084a 9BB2     		uxth	r3, r3
 11745 084c 0533     		adds	r3, r3, #5
 11746 084e 9BB2     		uxth	r3, r3
 11747 0850 1846     		mov	r0, r3
 11748 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 11749 0856 9A4A     		ldr	r2, .L546
 11750 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11751 085a 1946     		mov	r1, r3
 11752 085c 9A4A     		ldr	r2, .L546+8
 11753 085e 0B46     		mov	r3, r1
 11754 0860 9B00     		lsls	r3, r3, #2
 11755 0862 0B44     		add	r3, r3, r1
 11756 0864 1344     		add	r3, r3, r2
 11757 0866 03F20323 		addw	r3, r3, #515
 11758 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 271


 11759 086c 07F58A73 		add	r3, r7, #276
 11760 0870 1A54     		strb	r2, [r3, r0]
1788:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11761              		.loc 1 1788 0
 11762 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11763 0876 1A46     		mov	r2, r3	@ movhi
 11764 0878 9200     		lsls	r2, r2, #2
 11765 087a 1344     		add	r3, r3, r2
 11766 087c 1A46     		mov	r2, r3	@ movhi
 11767 087e 9100     		lsls	r1, r2, #2
 11768 0880 1A46     		mov	r2, r3	@ movhi
 11769 0882 0B46     		mov	r3, r1	@ movhi
 11770 0884 1344     		add	r3, r3, r2
 11771 0886 5B00     		lsls	r3, r3, #1
 11772 0888 9AB2     		uxth	r2, r3
 11773 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11774 088e 1344     		add	r3, r3, r2
 11775 0890 9BB2     		uxth	r3, r3
 11776 0892 0633     		adds	r3, r3, #6
 11777 0894 9BB2     		uxth	r3, r3
 11778 0896 1846     		mov	r0, r3
 11779 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 11780 089c 884A     		ldr	r2, .L546
 11781 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11782 08a0 1946     		mov	r1, r3
 11783 08a2 894A     		ldr	r2, .L546+8
 11784 08a4 0B46     		mov	r3, r1
 11785 08a6 9B00     		lsls	r3, r3, #2
 11786 08a8 0B44     		add	r3, r3, r1
 11787 08aa 1344     		add	r3, r3, r2
 11788 08ac 03F50173 		add	r3, r3, #516
 11789 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11790 08b2 07F58A73 		add	r3, r7, #276
 11791 08b6 1A54     		strb	r2, [r3, r0]
1789:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11792              		.loc 1 1789 0
 11793 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11794 08bc 1A46     		mov	r2, r3	@ movhi
 11795 08be 9200     		lsls	r2, r2, #2
 11796 08c0 1344     		add	r3, r3, r2
 11797 08c2 1A46     		mov	r2, r3	@ movhi
 11798 08c4 9100     		lsls	r1, r2, #2
 11799 08c6 1A46     		mov	r2, r3	@ movhi
 11800 08c8 0B46     		mov	r3, r1	@ movhi
 11801 08ca 1344     		add	r3, r3, r2
 11802 08cc 5B00     		lsls	r3, r3, #1
 11803 08ce 9AB2     		uxth	r2, r3
 11804 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11805 08d4 1344     		add	r3, r3, r2
 11806 08d6 9BB2     		uxth	r3, r3
 11807 08d8 0733     		adds	r3, r3, #7
 11808 08da 9BB2     		uxth	r3, r3
 11809 08dc 1846     		mov	r0, r3
 11810 08de B7F8A436 		ldrh	r3, [r7, #1700]
 11811 08e2 774A     		ldr	r2, .L546
 11812 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11813 08e6 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 272


 11814 08e8 774A     		ldr	r2, .L546+8
 11815 08ea 0B46     		mov	r3, r1
 11816 08ec 9B00     		lsls	r3, r3, #2
 11817 08ee 0B44     		add	r3, r3, r1
 11818 08f0 1344     		add	r3, r3, r2
 11819 08f2 03F20523 		addw	r3, r3, #517
 11820 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11821 08f8 07F58A73 		add	r3, r7, #276
 11822 08fc 1A54     		strb	r2, [r3, r0]
1790:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11823              		.loc 1 1790 0
 11824 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11825 0902 1A46     		mov	r2, r3	@ movhi
 11826 0904 9200     		lsls	r2, r2, #2
 11827 0906 1344     		add	r3, r3, r2
 11828 0908 1A46     		mov	r2, r3	@ movhi
 11829 090a 9100     		lsls	r1, r2, #2
 11830 090c 1A46     		mov	r2, r3	@ movhi
 11831 090e 0B46     		mov	r3, r1	@ movhi
 11832 0910 1344     		add	r3, r3, r2
 11833 0912 5B00     		lsls	r3, r3, #1
 11834 0914 9AB2     		uxth	r2, r3
 11835 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11836 091a 1344     		add	r3, r3, r2
 11837 091c 9BB2     		uxth	r3, r3
 11838 091e 0833     		adds	r3, r3, #8
 11839 0920 9BB2     		uxth	r3, r3
 11840 0922 1846     		mov	r0, r3
 11841 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 11842 0928 654A     		ldr	r2, .L546
 11843 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11844 092c 1946     		mov	r1, r3
 11845 092e 664A     		ldr	r2, .L546+8
 11846 0930 0B46     		mov	r3, r1
 11847 0932 9B00     		lsls	r3, r3, #2
 11848 0934 0B44     		add	r3, r3, r1
 11849 0936 1344     		add	r3, r3, r2
 11850 0938 03F20623 		addw	r3, r3, #518
 11851 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11852 093e 07F58A73 		add	r3, r7, #276
 11853 0942 1A54     		strb	r2, [r3, r0]
1791:..\src/command_processing.c **** 
1792:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 11854              		.loc 1 1792 0
 11855 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 11856 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11857 094c 2BE0     		b	.L521
 11858              	.L522:
1793:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11859              		.loc 1 1793 0 discriminator 3
 11860 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11861 0952 1A46     		mov	r2, r3	@ movhi
 11862 0954 9200     		lsls	r2, r2, #2
 11863 0956 1344     		add	r3, r3, r2
 11864 0958 1A46     		mov	r2, r3	@ movhi
 11865 095a 9100     		lsls	r1, r2, #2
 11866 095c 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 273


 11867 095e 0B46     		mov	r3, r1	@ movhi
 11868 0960 1344     		add	r3, r3, r2
 11869 0962 5B00     		lsls	r3, r3, #1
 11870 0964 9AB2     		uxth	r2, r3
 11871 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11872 096a 1344     		add	r3, r3, r2
 11873 096c 9AB2     		uxth	r2, r3
 11874 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 11875 0972 9BB2     		uxth	r3, r3
 11876 0974 1344     		add	r3, r3, r2
 11877 0976 9AB2     		uxth	r2, r3
 11878 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 11879 097c D31A     		subs	r3, r2, r3
 11880 097e 9BB2     		uxth	r3, r3
 11881 0980 0933     		adds	r3, r3, #9
 11882 0982 9BB2     		uxth	r3, r3
 11883 0984 1946     		mov	r1, r3
 11884 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 11885 098a B7F8A236 		ldrh	r3, [r7, #1698]
 11886 098e D31A     		subs	r3, r2, r3
 11887 0990 07F19C02 		add	r2, r7, #156
 11888 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11889 0996 07F58A73 		add	r3, r7, #276
 11890 099a 5A54     		strb	r2, [r3, r1]
1792:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11891              		.loc 1 1792 0 discriminator 3
 11892 099c B7F8A236 		ldrh	r3, [r7, #1698]
 11893 09a0 013B     		subs	r3, r3, #1
 11894 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11895              	.L521:
1792:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11896              		.loc 1 1792 0 is_stmt 0 discriminator 1
 11897 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 11898 09aa 002B     		cmp	r3, #0
 11899 09ac CFD1     		bne	.L522
1779:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 11900              		.loc 1 1779 0 is_stmt 1 discriminator 2
 11901 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 11902 09b2 0133     		adds	r3, r3, #1
 11903 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11904              	.L520:
1779:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 11905              		.loc 1 1779 0 is_stmt 0 discriminator 1
 11906 09b8 444B     		ldr	r3, .L546+12
 11907 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11908 09bc 9BB2     		uxth	r3, r3
 11909 09be B7F8A426 		ldrh	r2, [r7, #1700]
 11910 09c2 9A42     		cmp	r2, r3
 11911 09c4 FFF4CAAE 		bcc	.L523
1794:..\src/command_processing.c ****             }  
1795:..\src/command_processing.c ****           
1796:..\src/command_processing.c **** 
1797:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1798:..\src/command_processing.c ****             
1799:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 11912              		.loc 1 1799 0 is_stmt 1
 11913 09c8 404B     		ldr	r3, .L546+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 274


 11914 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11915 09cc 9BB2     		uxth	r3, r3
 11916 09ce 1A46     		mov	r2, r3	@ movhi
 11917 09d0 9200     		lsls	r2, r2, #2
 11918 09d2 1344     		add	r3, r3, r2
 11919 09d4 1A46     		mov	r2, r3	@ movhi
 11920 09d6 9100     		lsls	r1, r2, #2
 11921 09d8 1A46     		mov	r2, r3	@ movhi
 11922 09da 0B46     		mov	r3, r1	@ movhi
 11923 09dc 1344     		add	r3, r3, r2
 11924 09de 5B00     		lsls	r3, r3, #1
 11925 09e0 9AB2     		uxth	r2, r3
 11926 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11927 09e6 1344     		add	r3, r3, r2
 11928 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1800:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 11929              		.loc 1 1800 0
 11930 09ec B7F89836 		ldrh	r3, [r7, #1688]
 11931 09f0 364A     		ldr	r2, .L546+12
 11932 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11933 09f4 1A44     		add	r2, r2, r3
 11934 09f6 07F18003 		add	r3, r7, #128
 11935 09fa 3549     		ldr	r1, .L546+16
 11936 09fc 1846     		mov	r0, r3
 11937 09fe FFF7FEFF 		bl	sprintf
1801:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 11938              		.loc 1 1801 0
 11939 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 11940 0a06 0233     		adds	r3, r3, #2
 11941 0a08 07F58A72 		add	r2, r7, #276
 11942 0a0c 0021     		movs	r1, #0
 11943 0a0e D154     		strb	r1, [r2, r3]
1802:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 11944              		.loc 1 1802 0
 11945 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 11946 0a14 0333     		adds	r3, r3, #3
 11947 0a16 07F58A72 		add	r2, r7, #276
 11948 0a1a 0121     		movs	r1, #1
 11949 0a1c D154     		strb	r1, [r2, r3]
1803:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 11950              		.loc 1 1803 0
 11951 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 11952 0a22 0433     		adds	r3, r3, #4
 11953 0a24 284A     		ldr	r2, .L546+8
 11954 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 11955 0a2a 07F58A72 		add	r2, r7, #276
 11956 0a2e D154     		strb	r1, [r2, r3]
1804:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 11957              		.loc 1 1804 0
 11958 0a30 254B     		ldr	r3, .L546+8
 11959 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 11960 0a36 012B     		cmp	r3, #1
 11961 0a38 17D0     		beq	.L525
 11962 0a3a 022B     		cmp	r3, #2
 11963 0a3c 28D0     		beq	.L526
 11964 0a3e 002B     		cmp	r3, #0
 11965 0a40 00D0     		beq	.L527
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 275


1805:..\src/command_processing.c ****                 case 0: 
1806:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1807:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1808:..\src/command_processing.c ****                     break;
1809:..\src/command_processing.c ****                 case 1: 
1810:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1811:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1812:..\src/command_processing.c ****                     break;
1813:..\src/command_processing.c ****                 case 2: 
1814:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1815:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1816:..\src/command_processing.c ****                     break;
1817:..\src/command_processing.c ****                 default:
1818:..\src/command_processing.c ****                     break;
 11966              		.loc 1 1818 0
 11967 0a42 38E0     		b	.L528
 11968              	.L527:
1806:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 11969              		.loc 1 1806 0
 11970 0a44 07F18003 		add	r3, r7, #128
 11971 0a48 1846     		mov	r0, r3
 11972 0a4a FFF7FEFF 		bl	strlen
 11973 0a4e 0346     		mov	r3, r0
 11974 0a50 1A46     		mov	r2, r3
 11975 0a52 07F18003 		add	r3, r7, #128
 11976 0a56 1344     		add	r3, r3, r2
 11977 0a58 1E4A     		ldr	r2, .L546+20
 11978 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 11979 0a5c 1860     		str	r0, [r3]	@ unaligned
 11980 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 11981 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1807:..\src/command_processing.c ****                     break;
 11982              		.loc 1 1807 0
 11983 0a62 1A23     		movs	r3, #26
 11984 0a64 87F89D36 		strb	r3, [r7, #1693]
1808:..\src/command_processing.c ****                 case 1: 
 11985              		.loc 1 1808 0
 11986 0a68 25E0     		b	.L528
 11987              	.L525:
1810:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 11988              		.loc 1 1810 0
 11989 0a6a 07F18003 		add	r3, r7, #128
 11990 0a6e 1846     		mov	r0, r3
 11991 0a70 FFF7FEFF 		bl	strlen
 11992 0a74 0346     		mov	r3, r0
 11993 0a76 1A46     		mov	r2, r3
 11994 0a78 07F18003 		add	r3, r7, #128
 11995 0a7c 1344     		add	r3, r3, r2
 11996 0a7e 164A     		ldr	r2, .L546+24
 11997 0a80 1068     		ldr	r0, [r2]	@ unaligned
 11998 0a82 1860     		str	r0, [r3]	@ unaligned
 11999 0a84 1279     		ldrb	r2, [r2, #4]
 12000 0a86 1A71     		strb	r2, [r3, #4]
1811:..\src/command_processing.c ****                     break;
 12001              		.loc 1 1811 0
 12002 0a88 1923     		movs	r3, #25
 12003 0a8a 87F89D36 		strb	r3, [r7, #1693]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 276


1812:..\src/command_processing.c ****                 case 2: 
 12004              		.loc 1 1812 0
 12005 0a8e 12E0     		b	.L528
 12006              	.L526:
1814:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 12007              		.loc 1 1814 0
 12008 0a90 07F18003 		add	r3, r7, #128
 12009 0a94 1846     		mov	r0, r3
 12010 0a96 FFF7FEFF 		bl	strlen
 12011 0a9a 0346     		mov	r3, r0
 12012 0a9c 1A46     		mov	r2, r3
 12013 0a9e 07F18003 		add	r3, r7, #128
 12014 0aa2 1344     		add	r3, r3, r2
 12015 0aa4 0D4A     		ldr	r2, .L546+28
 12016 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 12017 0aa8 1860     		str	r0, [r3]	@ unaligned
 12018 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12019 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1815:..\src/command_processing.c ****                     break;
 12020              		.loc 1 1815 0
 12021 0aae 1A23     		movs	r3, #26
 12022 0ab0 87F89D36 		strb	r3, [r7, #1693]
1816:..\src/command_processing.c ****                 default:
 12023              		.loc 1 1816 0
 12024 0ab4 00BF     		nop
 12025              	.L528:
1819:..\src/command_processing.c ****             }            
1820:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 12026              		.loc 1 1820 0
 12027 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12028 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12029 0abe 28E0     		b	.L529
 12030              	.L547:
 12031              		.align	2
 12032              	.L546:
 12033 0ac0 00000000 		.word	IMU_connected
 12034 0ac4 DC100000 		.word	.LC147
 12035 0ac8 00000000 		.word	c_mem
 12036 0acc 00000000 		.word	N_IMU_Connected
 12037 0ad0 F8100000 		.word	.LC148
 12038 0ad4 10110000 		.word	.LC149
 12039 0ad8 18110000 		.word	.LC150
 12040 0adc 20110000 		.word	.LC151
 12041              	.L530:
1821:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12042              		.loc 1 1821 0 discriminator 3
 12043 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 12044 0ae4 5A1D     		adds	r2, r3, #5
 12045 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12046 0aea 1A44     		add	r2, r2, r3
 12047 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 12048 0af0 D31A     		subs	r3, r2, r3
 12049 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 12050 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 12051 0afa 8A1A     		subs	r2, r1, r2
 12052 0afc 07F18001 		add	r1, r7, #128
 12053 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 277


 12054 0b02 07F58A72 		add	r2, r7, #276
 12055 0b06 D154     		strb	r1, [r2, r3]
1820:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12056              		.loc 1 1820 0 discriminator 3
 12057 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 12058 0b0c 013B     		subs	r3, r3, #1
 12059 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12060              	.L529:
1820:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12061              		.loc 1 1820 0 is_stmt 0 discriminator 1
 12062 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 12063 0b16 002B     		cmp	r3, #0
 12064 0b18 E2D1     		bne	.L530
1822:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1823:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 12065              		.loc 1 1823 0 is_stmt 1
 12066 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 12067 0b1e 5A1D     		adds	r2, r3, #5
 12068 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12069 0b24 1344     		add	r3, r3, r2
 12070 0b26 07F58A72 		add	r2, r7, #276
 12071 0b2a 0121     		movs	r1, #1
 12072 0b2c D154     		strb	r1, [r2, r3]
1824:..\src/command_processing.c ****                   
1825:..\src/command_processing.c ****             
1826:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1827:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12073              		.loc 1 1827 0
 12074 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12075 0b32 3233     		adds	r3, r3, #50
 12076 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1828:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12077              		.loc 1 1828 0
 12078 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 12079 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12080 0b40 1AE0     		b	.L531
 12081              	.L532:
1829:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 12082              		.loc 1 1829 0 discriminator 3
 12083 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12084 0b46 0233     		adds	r3, r3, #2
 12085 0b48 9BB2     		uxth	r3, r3
 12086 0b4a 1A46     		mov	r2, r3
 12087 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 12088 0b50 1A44     		add	r2, r2, r3
 12089 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 12090 0b56 D31A     		subs	r3, r2, r3
 12091 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 12092 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 12093 0b60 8A1A     		subs	r2, r1, r2
 12094 0b62 07F10801 		add	r1, r7, #8
 12095 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12096 0b68 07F58A72 		add	r2, r7, #276
 12097 0b6c D154     		strb	r1, [r2, r3]
1828:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12098              		.loc 1 1828 0 discriminator 3
 12099 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 278


 12100 0b72 013B     		subs	r3, r3, #1
 12101 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12102              	.L531:
1828:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12103              		.loc 1 1828 0 is_stmt 0 discriminator 1
 12104 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 12105 0b7c 002B     		cmp	r3, #0
 12106 0b7e E0D1     		bne	.L532
1830:..\src/command_processing.c **** 
1831:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 12107              		.loc 1 1831 0 is_stmt 1
 12108 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 12109 0b84 5C1E     		subs	r4, r3, #1
 12110 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 12111 0b8a DBB2     		uxtb	r3, r3
 12112 0b8c 013B     		subs	r3, r3, #1
 12113 0b8e DAB2     		uxtb	r2, r3
 12114 0b90 07F58A73 		add	r3, r7, #276
 12115 0b94 1146     		mov	r1, r2
 12116 0b96 1846     		mov	r0, r3
 12117 0b98 FFF7FEFF 		bl	LCRChecksum
 12118 0b9c 0346     		mov	r3, r0
 12119 0b9e 1A46     		mov	r2, r3
 12120 0ba0 07F58A73 		add	r3, r7, #276
 12121 0ba4 1A55     		strb	r2, [r3, r4]
1832:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 12122              		.loc 1 1832 0
 12123 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 12124 0baa 07F58A73 		add	r3, r7, #276
 12125 0bae 1146     		mov	r1, r2
 12126 0bb0 1846     		mov	r0, r3
 12127 0bb2 FFF7FEFF 		bl	commWrite
1833:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 12128              		.loc 1 1833 0
 12129 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1834:..\src/command_processing.c ****         break;
 12130              		.loc 1 1834 0
 12131 0bba 09E1     		b	.L533
 12132              	.L540:
1835:..\src/command_processing.c **** 
1836:..\src/command_processing.c **** //=========================================================     other_params
1837:..\src/command_processing.c ****         default: 
1838:..\src/command_processing.c ****             
1839:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 12133              		.loc 1 1839 0
 12134 0bbc BB1D     		adds	r3, r7, #6
 12135 0bbe 1A88     		ldrh	r2, [r3]
 12136 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 12137 0bc4 013B     		subs	r3, r3, #1
 12138 0bc6 9A42     		cmp	r2, r3
 12139 0bc8 C0F20181 		blt	.L541
1840:..\src/command_processing.c ****                 break;
1841:..\src/command_processing.c ****             
1842:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 12140              		.loc 1 1842 0
 12141 0bcc BB1D     		adds	r3, r7, #6
 12142 0bce 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 279


 12143 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 12144 0bd4 8149     		ldr	r1, .L548
 12145 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 12146 0bd8 0B44     		add	r3, r3, r1
 12147 0bda 9A42     		cmp	r2, r3
 12148 0bdc 05D1     		bne	.L535
1843:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 12149              		.loc 1 1843 0
 12150 0bde 804B     		ldr	r3, .L548+4
 12151 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 12152 0be2 804B     		ldr	r3, .L548+8
 12153 0be4 83F80122 		strb	r2, [r3, #513]
1844:..\src/command_processing.c ****                 break;
 12154              		.loc 1 1844 0
 12155 0be8 F2E0     		b	.L533
 12156              	.L535:
1845:..\src/command_processing.c ****             }
1846:..\src/command_processing.c ****             
1847:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 12157              		.loc 1 1847 0
 12158 0bea BB1D     		adds	r3, r7, #6
 12159 0bec 1A88     		ldrh	r2, [r3]
 12160 0bee B7F89836 		ldrh	r3, [r7, #1688]
 12161 0bf2 013B     		subs	r3, r3, #1
 12162 0bf4 9A42     		cmp	r2, r3
 12163 0bf6 05D1     		bne	.L536
1848:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 12164              		.loc 1 1848 0
 12165 0bf8 794B     		ldr	r3, .L548+4
 12166 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 12167 0bfc 794B     		ldr	r3, .L548+8
 12168 0bfe 83F8A020 		strb	r2, [r3, #160]
1849:..\src/command_processing.c ****             }
1850:..\src/command_processing.c ****             else {
1851:..\src/command_processing.c ****             
1852:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1853:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1854:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1855:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1856:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1857:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1858:..\src/command_processing.c ****                 
1859:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1860:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1861:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1862:..\src/command_processing.c ****                 {
1863:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1864:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1865:..\src/command_processing.c ****                 }
1866:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1867:..\src/command_processing.c ****             
1868:..\src/command_processing.c ****             }
1869:..\src/command_processing.c ****             
1870:..\src/command_processing.c ****         break;
 12169              		.loc 1 1870 0
 12170 0c02 E5E0     		b	.L533
 12171              	.L536:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 280


1853:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 12172              		.loc 1 1853 0
 12173 0c04 BB1D     		adds	r3, r7, #6
 12174 0c06 1A88     		ldrh	r2, [r3]
 12175 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 12176 0c0c D31A     		subs	r3, r2, r3
 12177 0c0e 764A     		ldr	r2, .L548+12
 12178 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12179 0c12 1946     		mov	r1, r3
 12180 0c14 724B     		ldr	r3, .L548+4
 12181 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 12182 0c18 724A     		ldr	r2, .L548+8
 12183 0c1a 0B46     		mov	r3, r1
 12184 0c1c 9B00     		lsls	r3, r3, #2
 12185 0c1e 0B44     		add	r3, r3, r1
 12186 0c20 1344     		add	r3, r3, r2
 12187 0c22 03F20223 		addw	r3, r3, #514
 12188 0c26 0246     		mov	r2, r0
 12189 0c28 1A70     		strb	r2, [r3]
1854:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 12190              		.loc 1 1854 0
 12191 0c2a BB1D     		adds	r3, r7, #6
 12192 0c2c 1A88     		ldrh	r2, [r3]
 12193 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 12194 0c32 D31A     		subs	r3, r2, r3
 12195 0c34 6C4A     		ldr	r2, .L548+12
 12196 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12197 0c38 1946     		mov	r1, r3
 12198 0c3a 694B     		ldr	r3, .L548+4
 12199 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 12200 0c3e 694A     		ldr	r2, .L548+8
 12201 0c40 0B46     		mov	r3, r1
 12202 0c42 9B00     		lsls	r3, r3, #2
 12203 0c44 0B44     		add	r3, r3, r1
 12204 0c46 1344     		add	r3, r3, r2
 12205 0c48 03F20323 		addw	r3, r3, #515
 12206 0c4c 0246     		mov	r2, r0
 12207 0c4e 1A70     		strb	r2, [r3]
1855:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 12208              		.loc 1 1855 0
 12209 0c50 BB1D     		adds	r3, r7, #6
 12210 0c52 1A88     		ldrh	r2, [r3]
 12211 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 12212 0c58 D31A     		subs	r3, r2, r3
 12213 0c5a 634A     		ldr	r2, .L548+12
 12214 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12215 0c5e 1946     		mov	r1, r3
 12216 0c60 5F4B     		ldr	r3, .L548+4
 12217 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 12218 0c64 5F4A     		ldr	r2, .L548+8
 12219 0c66 0B46     		mov	r3, r1
 12220 0c68 9B00     		lsls	r3, r3, #2
 12221 0c6a 0B44     		add	r3, r3, r1
 12222 0c6c 1344     		add	r3, r3, r2
 12223 0c6e 03F50173 		add	r3, r3, #516
 12224 0c72 0246     		mov	r2, r0
 12225 0c74 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 281


1856:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 12226              		.loc 1 1856 0
 12227 0c76 BB1D     		adds	r3, r7, #6
 12228 0c78 1A88     		ldrh	r2, [r3]
 12229 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 12230 0c7e D31A     		subs	r3, r2, r3
 12231 0c80 594A     		ldr	r2, .L548+12
 12232 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12233 0c84 1946     		mov	r1, r3
 12234 0c86 564B     		ldr	r3, .L548+4
 12235 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 12236 0c8a 564A     		ldr	r2, .L548+8
 12237 0c8c 0B46     		mov	r3, r1
 12238 0c8e 9B00     		lsls	r3, r3, #2
 12239 0c90 0B44     		add	r3, r3, r1
 12240 0c92 1344     		add	r3, r3, r2
 12241 0c94 03F20523 		addw	r3, r3, #517
 12242 0c98 0246     		mov	r2, r0
 12243 0c9a 1A70     		strb	r2, [r3]
1857:..\src/command_processing.c ****                 
 12244              		.loc 1 1857 0
 12245 0c9c BB1D     		adds	r3, r7, #6
 12246 0c9e 1A88     		ldrh	r2, [r3]
 12247 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 12248 0ca4 D31A     		subs	r3, r2, r3
 12249 0ca6 504A     		ldr	r2, .L548+12
 12250 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12251 0caa 1946     		mov	r1, r3
 12252 0cac 4C4B     		ldr	r3, .L548+4
 12253 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 12254 0cb0 4C4A     		ldr	r2, .L548+8
 12255 0cb2 0B46     		mov	r3, r1
 12256 0cb4 9B00     		lsls	r3, r3, #2
 12257 0cb6 0B44     		add	r3, r3, r1
 12258 0cb8 1344     		add	r3, r3, r2
 12259 0cba 03F20623 		addw	r3, r3, #518
 12260 0cbe 0246     		mov	r2, r0
 12261 0cc0 1A70     		strb	r2, [r3]
1860:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 12262              		.loc 1 1860 0
 12263 0cc2 4A4B     		ldr	r3, .L548+16
 12264 0cc4 0122     		movs	r2, #1
 12265 0cc6 1A60     		str	r2, [r3]
1861:..\src/command_processing.c ****                 {
 12266              		.loc 1 1861 0
 12267 0cc8 0023     		movs	r3, #0
 12268 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12269 0cce 71E0     		b	.L538
 12270              	.L539:
1863:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 12271              		.loc 1 1863 0 discriminator 3
 12272 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 12273 0cd4 444A     		ldr	r2, .L548+12
 12274 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12275 0cd8 1C46     		mov	r4, r3
 12276 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 12277 0cde 424A     		ldr	r2, .L548+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 282


 12278 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12279 0ce2 1946     		mov	r1, r3
 12280 0ce4 3F4A     		ldr	r2, .L548+8
 12281 0ce6 0B46     		mov	r3, r1
 12282 0ce8 9B00     		lsls	r3, r3, #2
 12283 0cea 0B44     		add	r3, r3, r1
 12284 0cec 1344     		add	r3, r3, r2
 12285 0cee 03F20223 		addw	r3, r3, #514
 12286 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12287 0cf4 1A46     		mov	r2, r3
 12288 0cf6 1346     		mov	r3, r2
 12289 0cf8 5B00     		lsls	r3, r3, #1
 12290 0cfa 1344     		add	r3, r3, r2
 12291 0cfc 5B00     		lsls	r3, r3, #1
 12292 0cfe 5A1C     		adds	r2, r3, #1
 12293 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 12294 0d04 3849     		ldr	r1, .L548+12
 12295 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12296 0d08 1846     		mov	r0, r3
 12297 0d0a 3649     		ldr	r1, .L548+8
 12298 0d0c 0346     		mov	r3, r0
 12299 0d0e 9B00     		lsls	r3, r3, #2
 12300 0d10 0344     		add	r3, r3, r0
 12301 0d12 0B44     		add	r3, r3, r1
 12302 0d14 03F20323 		addw	r3, r3, #515
 12303 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12304 0d1a 1946     		mov	r1, r3
 12305 0d1c 0B46     		mov	r3, r1
 12306 0d1e 5B00     		lsls	r3, r3, #1
 12307 0d20 0B44     		add	r3, r3, r1
 12308 0d22 5B00     		lsls	r3, r3, #1
 12309 0d24 1A44     		add	r2, r2, r3
 12310 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 12311 0d2a 2F49     		ldr	r1, .L548+12
 12312 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12313 0d2e 1846     		mov	r0, r3
 12314 0d30 2C49     		ldr	r1, .L548+8
 12315 0d32 0346     		mov	r3, r0
 12316 0d34 9B00     		lsls	r3, r3, #2
 12317 0d36 0344     		add	r3, r3, r0
 12318 0d38 0B44     		add	r3, r3, r1
 12319 0d3a 03F50173 		add	r3, r3, #516
 12320 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12321 0d40 1946     		mov	r1, r3
 12322 0d42 0B46     		mov	r3, r1
 12323 0d44 5B00     		lsls	r3, r3, #1
 12324 0d46 0B44     		add	r3, r3, r1
 12325 0d48 5B00     		lsls	r3, r3, #1
 12326 0d4a 1A44     		add	r2, r2, r3
 12327 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 12328 0d50 2549     		ldr	r1, .L548+12
 12329 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12330 0d54 1846     		mov	r0, r3
 12331 0d56 2349     		ldr	r1, .L548+8
 12332 0d58 0346     		mov	r3, r0
 12333 0d5a 9B00     		lsls	r3, r3, #2
 12334 0d5c 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 283


 12335 0d5e 0B44     		add	r3, r3, r1
 12336 0d60 03F20523 		addw	r3, r3, #517
 12337 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12338 0d66 1B01     		lsls	r3, r3, #4
 12339 0d68 1A44     		add	r2, r2, r3
 12340 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 12341 0d6e 1E49     		ldr	r1, .L548+12
 12342 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12343 0d72 1846     		mov	r0, r3
 12344 0d74 1B49     		ldr	r1, .L548+8
 12345 0d76 0346     		mov	r3, r0
 12346 0d78 9B00     		lsls	r3, r3, #2
 12347 0d7a 0344     		add	r3, r3, r0
 12348 0d7c 0B44     		add	r3, r3, r1
 12349 0d7e 03F20623 		addw	r3, r3, #518
 12350 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12351 0d84 5B00     		lsls	r3, r3, #1
 12352 0d86 1344     		add	r3, r3, r2
 12353 0d88 0133     		adds	r3, r3, #1
 12354 0d8a 194A     		ldr	r2, .L548+20
 12355 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1864:..\src/command_processing.c ****                 }
 12356              		.loc 1 1864 0 discriminator 3
 12357 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 12358 0d94 144A     		ldr	r2, .L548+12
 12359 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12360 0d98 1A46     		mov	r2, r3
 12361 0d9a 154B     		ldr	r3, .L548+20
 12362 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 12363 0da0 124B     		ldr	r3, .L548+16
 12364 0da2 1B68     		ldr	r3, [r3]
 12365 0da4 1344     		add	r3, r3, r2
 12366 0da6 114A     		ldr	r2, .L548+16
 12367 0da8 1360     		str	r3, [r2]
1861:..\src/command_processing.c ****                 {
 12368              		.loc 1 1861 0 discriminator 3
 12369 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 12370 0dae 0133     		adds	r3, r3, #1
 12371 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12372              	.L538:
1861:..\src/command_processing.c ****                 {
 12373              		.loc 1 1861 0 is_stmt 0 discriminator 1
 12374 0db4 094B     		ldr	r3, .L548
 12375 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12376 0db8 9BB2     		uxth	r3, r3
 12377 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 12378 0dbe 9A42     		cmp	r2, r3
 12379 0dc0 86D3     		bcc	.L539
1866:..\src/command_processing.c ****             
 12380              		.loc 1 1866 0 is_stmt 1
 12381 0dc2 0A4B     		ldr	r3, .L548+16
 12382 0dc4 1B68     		ldr	r3, [r3]
 12383 0dc6 0133     		adds	r3, r3, #1
 12384 0dc8 084A     		ldr	r2, .L548+16
 12385 0dca 1360     		str	r3, [r2]
 12386              		.loc 1 1870 0
 12387 0dcc 00E0     		b	.L533
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 284


 12388              	.L541:
1840:..\src/command_processing.c ****             
 12389              		.loc 1 1840 0
 12390 0dce 00BF     		nop
 12391              	.L533:
1871:..\src/command_processing.c ****     }
1872:..\src/command_processing.c **** }
 12392              		.loc 1 1872 0 discriminator 1
 12393 0dd0 00BF     		nop
 12394 0dd2 07F5D567 		add	r7, r7, #1704
 12395              		.cfi_def_cfa_offset 16
 12396 0dd6 BD46     		mov	sp, r7
 12397              		.cfi_def_cfa_register 13
 12398              		@ sp needed
 12399 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 12400              	.L549:
 12401 0dda 00BF     		.align	2
 12402              	.L548:
 12403 0ddc 00000000 		.word	N_IMU_Connected
 12404 0de0 00000000 		.word	g_rx
 12405 0de4 00000000 		.word	g_mem
 12406 0de8 00000000 		.word	IMU_connected
 12407 0dec 00000000 		.word	imus_data_size
 12408 0df0 00000000 		.word	single_imu_size
 12409              		.cfi_endproc
 12410              	.LFE70:
 12411              		.size	get_IMU_param_list, .-get_IMU_param_list
 12412              		.section	.text.setZeros,"ax",%progbits
 12413              		.align	2
 12414              		.global	setZeros
 12415              		.thumb
 12416              		.thumb_func
 12417              		.type	setZeros, %function
 12418              	setZeros:
 12419              	.LFB71:
1873:..\src/command_processing.c **** 
1874:..\src/command_processing.c **** //==============================================================================
1875:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1876:..\src/command_processing.c **** //==============================================================================
1877:..\src/command_processing.c **** 
1878:..\src/command_processing.c **** void setZeros()
1879:..\src/command_processing.c **** {
 12420              		.loc 1 1879 0
 12421              		.cfi_startproc
 12422              		@ args = 0, pretend = 0, frame = 8
 12423              		@ frame_needed = 1, uses_anonymous_args = 0
 12424 0000 B0B5     		push	{r4, r5, r7, lr}
 12425              		.cfi_def_cfa_offset 16
 12426              		.cfi_offset 4, -16
 12427              		.cfi_offset 5, -12
 12428              		.cfi_offset 7, -8
 12429              		.cfi_offset 14, -4
 12430 0002 82B0     		sub	sp, sp, #8
 12431              		.cfi_def_cfa_offset 24
 12432 0004 00AF     		add	r7, sp, #0
 12433              		.cfi_def_cfa_register 7
1880:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 285


1881:..\src/command_processing.c ****     
1882:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 12434              		.loc 1 1882 0
 12435 0006 0023     		movs	r3, #0
 12436 0008 BB71     		strb	r3, [r7, #6]
 12437 000a 2FE0     		b	.L551
 12438              	.L554:
1883:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 12439              		.loc 1 1883 0
 12440 000c 0023     		movs	r3, #0
 12441 000e FB71     		strb	r3, [r7, #7]
 12442 0010 22E0     		b	.L552
 12443              	.L553:
1884:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = (int32)(data_encoder_raw[j][i]);
 12444              		.loc 1 1884 0 discriminator 3
 12445 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 12446 0014 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 12447 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 12448 0018 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 12449 001a 194D     		ldr	r5, .L555
 12450 001c 0B46     		mov	r3, r1
 12451 001e 9B00     		lsls	r3, r3, #2
 12452 0020 0B44     		add	r3, r3, r1
 12453 0022 2344     		add	r3, r3, r4
 12454 0024 55F82330 		ldr	r3, [r5, r3, lsl #2]
 12455 0028 1C46     		mov	r4, r3
 12456 002a 1649     		ldr	r1, .L555+4
 12457 002c 1346     		mov	r3, r2
 12458 002e 5B00     		lsls	r3, r3, #1
 12459 0030 1344     		add	r3, r3, r2
 12460 0032 9B00     		lsls	r3, r3, #2
 12461 0034 0344     		add	r3, r3, r0
 12462 0036 6633     		adds	r3, r3, #102
 12463 0038 41F82340 		str	r4, [r1, r3, lsl #2]
1885:..\src/command_processing.c ****             g_meas[j].rot[i] = (int8)0;
 12464              		.loc 1 1885 0 discriminator 3
 12465 003c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 12466 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 12467 0040 1149     		ldr	r1, .L555+8
 12468 0042 3420     		movs	r0, #52
 12469 0044 00FB02F2 		mul	r2, r0, r2
 12470 0048 0A44     		add	r2, r2, r1
 12471 004a 1344     		add	r3, r3, r2
 12472 004c 1833     		adds	r3, r3, #24
 12473 004e 0022     		movs	r2, #0
 12474 0050 1A70     		strb	r2, [r3]
1883:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 12475              		.loc 1 1883 0 discriminator 3
 12476 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 12477 0054 0133     		adds	r3, r3, #1
 12478 0056 FB71     		strb	r3, [r7, #7]
 12479              	.L552:
1883:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 12480              		.loc 1 1883 0 is_stmt 0 discriminator 1
 12481 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 12482 005a 022B     		cmp	r3, #2
 12483 005c D9D9     		bls	.L553
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 286


1886:..\src/command_processing.c ****         }
1887:..\src/command_processing.c ****         reset_last_value_flag[j] = 1;
 12484              		.loc 1 1887 0 is_stmt 1 discriminator 2
 12485 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 12486 0060 0A4A     		ldr	r2, .L555+12
 12487 0062 0121     		movs	r1, #1
 12488 0064 D154     		strb	r1, [r2, r3]
1882:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 12489              		.loc 1 1882 0 discriminator 2
 12490 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 12491 0068 0133     		adds	r3, r3, #1
 12492 006a BB71     		strb	r3, [r7, #6]
 12493              	.L551:
1882:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 12494              		.loc 1 1882 0 is_stmt 0 discriminator 1
 12495 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 12496 006e 012B     		cmp	r3, #1
 12497 0070 CCD9     		bls	.L554
1888:..\src/command_processing.c ****     }
1889:..\src/command_processing.c **** 
1890:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 12498              		.loc 1 1890 0 is_stmt 1
 12499 0072 0120     		movs	r0, #1
 12500 0074 FFF7FEFF 		bl	sendAcknowledgment
1891:..\src/command_processing.c **** }
 12501              		.loc 1 1891 0
 12502 0078 00BF     		nop
 12503 007a 0837     		adds	r7, r7, #8
 12504              		.cfi_def_cfa_offset 16
 12505 007c BD46     		mov	sp, r7
 12506              		.cfi_def_cfa_register 13
 12507              		@ sp needed
 12508 007e B0BD     		pop	{r4, r5, r7, pc}
 12509              	.L556:
 12510              		.align	2
 12511              	.L555:
 12512 0080 00000000 		.word	data_encoder_raw
 12513 0084 00000000 		.word	g_mem
 12514 0088 00000000 		.word	g_meas
 12515 008c 00000000 		.word	reset_last_value_flag
 12516              		.cfi_endproc
 12517              	.LFE71:
 12518              		.size	setZeros, .-setZeros
 12519              		.section	.rodata
 12520              		.align	2
 12521              	.LC152:
 12522 1158 0D0A00   		.ascii	"\015\012\000"
 12523 115b 00       		.align	2
 12524              	.LC153:
 12525 115c 4669726D 		.ascii	"Firmware version: \000"
 12525      77617265 
 12525      20766572 
 12525      73696F6E 
 12525      3A2000
 12526 116f 00       		.align	2
 12527              	.LC154:
 12528 1170 536F6674 		.ascii	"SoftHand PRO firmware v. 1.10.1 (PSoC5)\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 287


 12528      48616E64 
 12528      2050524F 
 12528      20666972 
 12528      6D776172 
 12529              		.align	2
 12530              	.LC155:
 12531 1198 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 12531      0A00
 12532 119e 0000     		.align	2
 12533              	.LC156:
 12534 11a0 44455649 		.ascii	"DEVICE INFO\015\012\000"
 12534      43452049 
 12534      4E464F0D 
 12534      0A00
 12535 11ae 0000     		.align	2
 12536              	.LC157:
 12537 11b0 49443A20 		.ascii	"ID: %d\015\012\000"
 12537      25640D0A 
 12537      00
 12538 11b9 000000   		.align	2
 12539              	.LC158:
 12540 11bc 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 12540      63653A20 
 12540      534F4654 
 12540      48414E44 
 12540      2050524F 
 12541 11d3 00       		.align	2
 12542              	.LC159:
 12543 11d4 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 12543      63653A20 
 12543      47454E45 
 12543      52494320 
 12543      32204D4F 
 12544 11ef 00       		.align	2
 12545              	.LC160:
 12546 11f0 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 12546      63653A20 
 12546      41495220 
 12546      4348414D 
 12546      42455253 
 12547 1217 00       		.align	2
 12548              	.LC161:
 12549 1218 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 12549      63653A20 
 12549      4F54544F 
 12549      424F434B 
 12549      20367620 
 12550 1242 0000     		.align	2
 12551              	.LC162:
 12552 1244 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 12552      63653A20 
 12552      534F4654 
 12552      48414E44 
 12552      2032204D 
 12553              		.align	2
 12554              	.LC163:
 12555 1260 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 288


 12555      20736964 
 12555      653A2052 
 12555      49474854 
 12555      0D0A00
 12556 1273 00       		.align	2
 12557              	.LC164:
 12558 1274 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 12558      20736964 
 12558      653A204C 
 12558      4546540D 
 12558      0A00
 12559 1286 0000     		.align	2
 12560              	.LC165:
 12561 1288 55736572 		.ascii	"User: MARIA\015\012\000"
 12561      3A204D41 
 12561      5249410D 
 12561      0A00
 12562 1296 0000     		.align	2
 12563              	.LC166:
 12564 1298 55736572 		.ascii	"User: R01\015\012\000"
 12564      3A205230 
 12564      310D0A00 
 12565              		.align	2
 12566              	.LC167:
 12567 12a4 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 12567      3A204745 
 12567      4E455249 
 12567      43205553 
 12567      45520D0A 
 12568 12b9 000000   		.align	2
 12569              	.LC168:
 12570 12bc 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 12570      52202564 
 12570      20494E46 
 12570      4F0D0A00 
 12571              		.align	2
 12572              	.LC169:
 12573 12cc 4D6F746F 		.ascii	"Motor reference\000"
 12573      72207265 
 12573      66657265 
 12573      6E636500 
 12574              		.align	2
 12575              	.LC170:
 12576 12dc 202D2043 		.ascii	" - Currents: \000"
 12576      75727265 
 12576      6E74733A 
 12576      2000
 12577 12ea 0000     		.align	2
 12578              	.LC171:
 12579 12ec 202D2050 		.ascii	" - Pwm: \000"
 12579      776D3A20 
 12579      00
 12580 12f5 000000   		.align	2
 12581              	.LC172:
 12582 12f8 202D2050 		.ascii	" - Position: \000"
 12582      6F736974 
 12582      696F6E3A 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 289


 12582      2000
 12583 1306 0000     		.align	2
 12584              	.LC173:
 12585 1308 25642000 		.ascii	"%d \000"
 12586              		.align	2
 12587              	.LC174:
 12588 130c 4D6F746F 		.ascii	"Motor enabled: \000"
 12588      7220656E 
 12588      61626C65 
 12588      643A2000 
 12589              		.align	2
 12590              	.LC175:
 12591 131c 5945530D 		.ascii	"YES\015\012\000"
 12591      0A00
 12592 1322 0000     		.align	2
 12593              	.LC176:
 12594 1324 4E4F0D0A 		.ascii	"NO\015\012\000"
 12594      00
 12595 1329 000000   		.align	2
 12596              	.LC177:
 12597 132c 50574D20 		.ascii	"PWM rescaling activation: \000"
 12597      72657363 
 12597      616C696E 
 12597      67206163 
 12597      74697661 
 12598 1347 00       		.align	2
 12599              	.LC178:
 12600 1348 5945530A 		.ascii	"YES\012\000"
 12600      00
 12601 134d 000000   		.align	2
 12602              	.LC179:
 12603 1350 4E4F0A00 		.ascii	"NO\012\000"
 12604              		.align	2
 12605              	.LC180:
 12606 1354 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 12606      4C696D69 
 12606      743A2025 
 12606      640D0A00 
 12607              		.align	2
 12608              	.LC181:
 12609 1364 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 12609      41535552 
 12609      454D454E 
 12609      54532049 
 12609      4E464F0D 
 12610 137a 0000     		.align	2
 12611              	.LC182:
 12612 137c 53656E73 		.ascii	"Sensor value: \000"
 12612      6F722076 
 12612      616C7565 
 12612      3A2000
 12613 138b 00       		.align	2
 12614              	.LC183:
 12615 138c 256400   		.ascii	"%d\000"
 12616 138f 00       		.align	2
 12617              	.LC184:
 12618 1390 2C2000   		.ascii	", \000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 290


 12619 1393 00       		.align	2
 12620              	.LC185:
 12621 1394 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 12621      7469636B 
 12621      206D6561 
 12621      73757265 
 12621      6D656E74 
 12622 13b2 0000     		.align	2
 12623              	.LC186:
 12624 13b4 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 12624      65727920 
 12624      25642056 
 12624      6F6C7461 
 12624      67652028 
 12625 13d1 000000   		.align	2
 12626              	.LC187:
 12627 13d4 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 12627      20636861 
 12627      72676520 
 12627      706F7765 
 12627      72207465 
 12628 13fb 00       		.align	2
 12629              	.LC188:
 12630 13fc 43757272 		.ascii	"Current %d (mA): %ld\000"
 12630      656E7420 
 12630      25642028 
 12630      6D41293A 
 12630      20256C64 
 12631 1411 000000   		.align	2
 12632              	.LC189:
 12633 1414 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 12633      20477261 
 12633      73702048 
 12633      6F6C6420 
 12633      43757272 
 12634 1439 000000   		.align	2
 12635              	.LC190:
 12636 143c 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 12636      544F5220 
 12636      25642043 
 12636      4F4E4649 
 12636      47555241 
 12637 1457 00       		.align	2
 12638              	.LC191:
 12639 1458 50494420 		.ascii	"PID Controller: \000"
 12639      436F6E74 
 12639      726F6C6C 
 12639      65723A20 
 12639      00
 12640              		.global	__aeabi_i2d
 12641              		.global	__aeabi_ddiv
 12642 1469 000000   		.align	2
 12643              	.LC192:
 12644 146c 50202D3E 		.ascii	"P -> %f  \000"
 12644      20256620 
 12644      2000
 12645 1476 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 291


 12646              	.LC193:
 12647 1478 49202D3E 		.ascii	"I -> %f  \000"
 12647      20256620 
 12647      2000
 12648 1482 0000     		.align	2
 12649              	.LC194:
 12650 1484 44202D3E 		.ascii	"D -> %f\015\012\000"
 12650      2025660D 
 12650      0A00
 12651 148e 0000     		.align	2
 12652              	.LC195:
 12653 1490 43757272 		.ascii	"Current PID Controller: \000"
 12653      656E7420 
 12653      50494420 
 12653      436F6E74 
 12653      726F6C6C 
 12654 14a9 000000   		.align	2
 12655              	.LC196:
 12656 14ac 53746172 		.ascii	"Startup activation: YES\015\012\000"
 12656      74757020 
 12656      61637469 
 12656      76617469 
 12656      6F6E3A20 
 12657 14c6 0000     		.align	2
 12658              	.LC197:
 12659 14c8 53746172 		.ascii	"Startup activation: NO\015\012\000"
 12659      74757020 
 12659      61637469 
 12659      76617469 
 12659      6F6E3A20 
 12660 14e1 000000   		.align	2
 12661              	.LC198:
 12662 14e4 496E7075 		.ascii	"Input mode: USB\015\012\000"
 12662      74206D6F 
 12662      64653A20 
 12662      5553420D 
 12662      0A00
 12663 14f6 0000     		.align	2
 12664              	.LC199:
 12665 14f8 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 12665      74206D6F 
 12665      64653A20 
 12665      48616E64 
 12665      6C650D0A 
 12666 150d 000000   		.align	2
 12667              	.LC200:
 12668 1510 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 12668      74206D6F 
 12668      64653A20 
 12668      454D4720 
 12668      70726F70 
 12669 152f 00       		.align	2
 12670              	.LC201:
 12671 1530 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 12671      74206D6F 
 12671      64653A20 
 12671      454D4720 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 292


 12671      696E7465 
 12672 154b 00       		.align	2
 12673              	.LC202:
 12674 154c 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 12674      74206D6F 
 12674      64653A20 
 12674      454D4720 
 12674      46434653 
 12675 1563 00       		.align	2
 12676              	.LC203:
 12677 1564 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 12677      74206D6F 
 12677      64653A20 
 12677      454D4720 
 12677      46434653 
 12678 157f 00       		.align	2
 12679              	.LC204:
 12680 1580 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 12680      74206D6F 
 12680      64653A20 
 12680      4A6F7973 
 12680      7469636B 
 12681 1597 00       		.align	2
 12682              	.LC205:
 12683 1598 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 12683      74206D6F 
 12683      64653A20 
 12683      454D4720 
 12683      70726F70 
 12684 15c6 00       		.ascii	"\000"
 12685 15c7 00       		.align	2
 12686              	.LC206:
 12687 15c8 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 12687      726F6C20 
 12687      6D6F6465 
 12687      3A20506F 
 12687      73697469 
 12688 15e1 000000   		.align	2
 12689              	.LC207:
 12690 15e4 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 12690      726F6C20 
 12690      6D6F6465 
 12690      3A205057 
 12690      4D0D0A00 
 12691              		.align	2
 12692              	.LC208:
 12693 15f8 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 12693      726F6C20 
 12693      6D6F6465 
 12693      3A204375 
 12693      7272656E 
 12694              		.align	2
 12695              	.LC209:
 12696 1610 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 12696      726F6C20 
 12696      6D6F6465 
 12696      3A20506F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 293


 12696      73697469 
 12697 1635 000000   		.align	2
 12698              	.LC210:
 12699 1638 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 12699      6C757465 
 12699      20656E63 
 12699      6F646572 
 12699      20706F73 
 12700 1659 000000   		.align	2
 12701              	.LC211:
 12702 165c 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 12702      6C757465 
 12702      20656E63 
 12702      6F646572 
 12702      20706F73 
 12703              		.align	2
 12704              	.LC212:
 12705 167c 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 12705      722D4861 
 12705      6E646C65 
 12705      20526174 
 12705      696F3A20 
 12706 1695 000000   		.align	2
 12707              	.LC213:
 12708 1698 53656E73 		.ascii	"Sensor resolution: \000"
 12708      6F722072 
 12708      65736F6C 
 12708      7574696F 
 12708      6E3A2000 
 12709              		.align	2
 12710              	.LC214:
 12711 16ac 4D656173 		.ascii	"Measurement Offset: \000"
 12711      7572656D 
 12711      656E7420 
 12711      4F666673 
 12711      65743A20 
 12712 16c1 000000   		.align	2
 12713              	.LC215:
 12714 16c4 256C6400 		.ascii	"%ld\000"
 12715              		.align	2
 12716              	.LC216:
 12717 16c8 4D656173 		.ascii	"Measurement Multiplier: \000"
 12717      7572656D 
 12717      656E7420 
 12717      4D756C74 
 12717      69706C69 
 12718              		.global	__aeabi_f2d
 12719 16e1 000000   		.align	2
 12720              	.LC217:
 12721 16e4 256600   		.ascii	"%f\000"
 12722 16e7 00       		.align	2
 12723              	.LC218:
 12724 16e8 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 12724      656E7420 
 12724      6C6F6F6B 
 12724      75702074 
 12724      61626C65 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 294


 12725 1716 00       		.ascii	"\000"
 12726 1717 00       		.align	2
 12727              	.LC219:
 12728 1718 506F7369 		.ascii	"Position limit active: %d\000"
 12728      74696F6E 
 12728      206C696D 
 12728      69742061 
 12728      63746976 
 12729 1732 0000     		.align	2
 12730              	.LC220:
 12731 1734 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 12731      74696F6E 
 12731      206C696D 
 12731      6974206D 
 12731      6F746F72 
 12732 1757 00       		.align	2
 12733              	.LC221:
 12734 1758 73757020 		.ascii	"sup -> %ld\015\012\000"
 12734      2D3E2025 
 12734      6C640D0A 
 12734      00
 12735 1765 000000   		.align	2
 12736              	.LC222:
 12737 1768 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 12737      73746570 
 12737      20706F73 
 12737      20616E64 
 12737      206E6567 
 12738              		.align	2
 12739              	.LC223:
 12740 1784 43757272 		.ascii	"Current limit: %d\015\012\000"
 12740      656E7420 
 12740      6C696D69 
 12740      743A2025 
 12740      640D0A00 
 12741              		.align	2
 12742              	.LC224:
 12743 1798 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 12743      434F4E46 
 12743      49475552 
 12743      4154494F 
 12743      4E0D0A00 
 12744              		.align	2
 12745              	.LC225:
 12746 17ac 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 12746      74687265 
 12746      73686F6C 
 12746      6473205B 
 12746      30202D20 
 12747 17ce 0000     		.align	2
 12748              	.LC226:
 12749 17d0 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 12749      6D617820 
 12749      76616C75 
 12749      6573205B 
 12749      30202D20 
 12750              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 295


 12751              	.LC227:
 12752 17f4 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 12752      696E7665 
 12752      7273696F 
 12752      6E3A2059 
 12752      45530D0A 
 12753 1809 000000   		.align	2
 12754              	.LC228:
 12755 180c 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 12755      696E7665 
 12755      7273696F 
 12755      6E3A204E 
 12755      4F0D0A00 
 12756              		.align	2
 12757              	.LC229:
 12758 1820 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 12758      62726174 
 12758      696F6E20 
 12758      656E6162 
 12758      6C65643A 
 12759 183b 00       		.align	2
 12760              	.LC230:
 12761 183c 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 12761      62726174 
 12761      696F6E20 
 12761      656E6162 
 12761      6C65643A 
 12762 1856 0000     		.align	2
 12763              	.LC231:
 12764 1858 454D4720 		.ascii	"EMG max speed: %d %d\000"
 12764      6D617820 
 12764      73706565 
 12764      643A2025 
 12764      64202564 
 12765 186d 000000   		.align	2
 12766              	.LC232:
 12767 1870 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 12767      74696F6E 
 12767      616C2041 
 12767      44432073 
 12767      656E736F 
 12768              		.align	2
 12769              	.LC233:
 12770 1890 41444320 		.ascii	"ADC %d -> %d\000"
 12770      2564202D 
 12770      3E202564 
 12770      00
 12771 189d 000000   		.align	2
 12772              	.LC234:
 12773 18a0 454D4720 		.ascii	"EMG input %d -> %d\000"
 12773      696E7075 
 12773      74202564 
 12773      202D3E20 
 12773      256400
 12774 18b3 00       		.align	2
 12775              	.LC235:
 12776 18b4 52657374 		.ascii	"Rest time delay (ms): %d\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 296


 12776      2074696D 
 12776      65206465 
 12776      6C617920 
 12776      286D7329 
 12777 18cd 000000   		.align	2
 12778              	.LC236:
 12779 18d0 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 12779      2076656C 
 12779      6F636974 
 12779      7920636C 
 12779      6F737572 
 12780 18f6 0000     		.align	2
 12781              	.LC237:
 12782 18f8 52657374 		.ascii	"Rest position: %d\000"
 12782      20706F73 
 12782      6974696F 
 12782      6E3A2025 
 12782      6400
 12783 190a 0000     		.align	2
 12784              	.LC238:
 12785 190c 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 12785      436F6E6E 
 12785      65637465 
 12785      643A2025 
 12785      640D0A00 
 12786              		.align	2
 12787              	.LC239:
 12788 1920 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 12788      20434F4E 
 12788      46494755 
 12788      52415449 
 12788      4F4E0D0A 
 12789 1935 000000   		.align	2
 12790              	.LC240:
 12791 1938 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 12791      2564200D 
 12791      0A094944 
 12791      3A202564 
 12791      0D0A00
 12792 194b 00       		.align	2
 12793              	.LC241:
 12794 194c 09416363 		.ascii	"\011Accelerometers: \000"
 12794      656C6572 
 12794      6F6D6574 
 12794      6572733A 
 12794      2000
 12795 195e 0000     		.align	2
 12796              	.LC242:
 12797 1960 09477972 		.ascii	"\011Gyroscopes: \000"
 12797      6F73636F 
 12797      7065733A 
 12797      2000
 12798 196e 0000     		.align	2
 12799              	.LC243:
 12800 1970 094D6167 		.ascii	"\011Magnetometers: \000"
 12800      6E65746F 
 12800      6D657465 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 297


 12800      72733A20 
 12800      00
 12801 1981 000000   		.align	2
 12802              	.LC244:
 12803 1984 09517561 		.ascii	"\011Quaternion: \000"
 12803      7465726E 
 12803      696F6E3A 
 12803      2000
 12804 1992 0000     		.align	2
 12805              	.LC245:
 12806 1994 0954656D 		.ascii	"\011Temperature: \000"
 12806      70657261 
 12806      74757265 
 12806      3A2000
 12807 19a3 00       		.align	2
 12808              	.LC246:
 12809 19a4 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 12809      20465720 
 12809      6379636C 
 12809      65207469 
 12809      6D653A20 
 12810              		.align	2
 12811              	.LC247:
 12812 19c0 0D0A0000 		.ascii	"\015\012\000\000"
 12813              		.section	.text.prepare_generic_info,"ax",%progbits
 12814              		.align	2
 12815              		.global	prepare_generic_info
 12816              		.thumb
 12817              		.thumb_func
 12818              		.type	prepare_generic_info, %function
 12819              	prepare_generic_info:
 12820              	.LFB72:
1892:..\src/command_processing.c **** 
1893:..\src/command_processing.c **** //==============================================================================
1894:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1895:..\src/command_processing.c **** //==============================================================================
1896:..\src/command_processing.c **** 
1897:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1898:..\src/command_processing.c **** {
 12821              		.loc 1 1898 0
 12822              		.cfi_startproc
 12823              		@ args = 0, pretend = 0, frame = 152
 12824              		@ frame_needed = 1, uses_anonymous_args = 0
 12825 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 12826              		.cfi_def_cfa_offset 36
 12827              		.cfi_offset 4, -36
 12828              		.cfi_offset 5, -32
 12829              		.cfi_offset 6, -28
 12830              		.cfi_offset 7, -24
 12831              		.cfi_offset 8, -20
 12832              		.cfi_offset 9, -16
 12833              		.cfi_offset 10, -12
 12834              		.cfi_offset 11, -8
 12835              		.cfi_offset 14, -4
 12836 0004 B1B0     		sub	sp, sp, #196
 12837              		.cfi_def_cfa_offset 232
 12838 0006 0AAF     		add	r7, sp, #40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 298


 12839              		.cfi_def_cfa 7, 192
 12840 0008 7861     		str	r0, [r7, #20]
1899:..\src/command_processing.c ****     int i;
1900:..\src/command_processing.c **** 
1901:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 12841              		.loc 1 1901 0
 12842 000a C74B     		ldr	r3, .L658
 12843 000c C7F88C30 		str	r3, [r7, #140]
1902:..\src/command_processing.c ****     
1903:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 12844              		.loc 1 1903 0
 12845 0010 C54B     		ldr	r3, .L658
 12846 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 12847 0016 FA2B     		cmp	r3, #250
 12848 0018 01F0C285 		beq	.L655
 12849              	.LBB24:
1904:..\src/command_processing.c ****         char str[100];
1905:..\src/command_processing.c ****         strcpy(info_string, "");
 12850              		.loc 1 1905 0
 12851 001c 7B69     		ldr	r3, [r7, #20]
 12852 001e 0022     		movs	r2, #0
 12853 0020 1A70     		strb	r2, [r3]
1906:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 12854              		.loc 1 1906 0
 12855 0022 7869     		ldr	r0, [r7, #20]
 12856 0024 FFF7FEFF 		bl	strlen
 12857 0028 0346     		mov	r3, r0
 12858 002a 1A46     		mov	r2, r3
 12859 002c 7B69     		ldr	r3, [r7, #20]
 12860 002e 1344     		add	r3, r3, r2
 12861 0030 BE4A     		ldr	r2, .L658+4
 12862 0032 1188     		ldrh	r1, [r2]	@ unaligned
 12863 0034 9278     		ldrb	r2, [r2, #2]
 12864 0036 1980     		strh	r1, [r3]	@ unaligned
 12865 0038 9A70     		strb	r2, [r3, #2]
1907:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 12866              		.loc 1 1907 0
 12867 003a 7869     		ldr	r0, [r7, #20]
 12868 003c FFF7FEFF 		bl	strlen
 12869 0040 0346     		mov	r3, r0
 12870 0042 1A46     		mov	r2, r3
 12871 0044 7B69     		ldr	r3, [r7, #20]
 12872 0046 1344     		add	r3, r3, r2
 12873 0048 B94A     		ldr	r2, .L658+8
 12874 004a 1D46     		mov	r5, r3
 12875 004c 1446     		mov	r4, r2
 12876 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12877 0050 2860     		str	r0, [r5]	@ unaligned
 12878 0052 6960     		str	r1, [r5, #4]	@ unaligned
 12879 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 12880 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 12881 0058 2388     		ldrh	r3, [r4]	@ unaligned
 12882 005a A278     		ldrb	r2, [r4, #2]
 12883 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 12884 005e 1346     		mov	r3, r2
 12885 0060 AB74     		strb	r3, [r5, #18]
1908:..\src/command_processing.c ****         strcat(info_string, VERSION);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 299


 12886              		.loc 1 1908 0
 12887 0062 7869     		ldr	r0, [r7, #20]
 12888 0064 FFF7FEFF 		bl	strlen
 12889 0068 0346     		mov	r3, r0
 12890 006a 1A46     		mov	r2, r3
 12891 006c 7B69     		ldr	r3, [r7, #20]
 12892 006e 1344     		add	r3, r3, r2
 12893 0070 B04A     		ldr	r2, .L658+12
 12894 0072 1446     		mov	r4, r2
 12895 0074 9E46     		mov	lr, r3
 12896 0076 04F1200C 		add	ip, r4, #32
 12897              	.L559:
 12898 007a 7546     		mov	r5, lr
 12899 007c 2646     		mov	r6, r4
 12900 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 12901 0080 2860     		str	r0, [r5]	@ unaligned
 12902 0082 6960     		str	r1, [r5, #4]	@ unaligned
 12903 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 12904 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 12905 0088 1034     		adds	r4, r4, #16
 12906 008a 0EF1100E 		add	lr, lr, #16
 12907 008e 6445     		cmp	r4, ip
 12908 0090 F3D1     		bne	.L559
 12909 0092 7246     		mov	r2, lr
 12910 0094 2346     		mov	r3, r4
 12911 0096 03CB     		ldmia	r3!, {r0, r1}
 12912 0098 1060     		str	r0, [r2]	@ unaligned
 12913 009a 5160     		str	r1, [r2, #4]	@ unaligned
1909:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 12914              		.loc 1 1909 0
 12915 009c 7869     		ldr	r0, [r7, #20]
 12916 009e FFF7FEFF 		bl	strlen
 12917 00a2 0346     		mov	r3, r0
 12918 00a4 1A46     		mov	r2, r3
 12919 00a6 7B69     		ldr	r3, [r7, #20]
 12920 00a8 1344     		add	r3, r3, r2
 12921 00aa A34A     		ldr	r2, .L658+16
 12922 00ac 1068     		ldr	r0, [r2]	@ unaligned
 12923 00ae 1860     		str	r0, [r3]	@ unaligned
 12924 00b0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12925 00b2 9A80     		strh	r2, [r3, #4]	@ unaligned
1910:..\src/command_processing.c **** 
1911:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 12926              		.loc 1 1911 0
 12927 00b4 7869     		ldr	r0, [r7, #20]
 12928 00b6 FFF7FEFF 		bl	strlen
 12929 00ba 0346     		mov	r3, r0
 12930 00bc 1A46     		mov	r2, r3
 12931 00be 7B69     		ldr	r3, [r7, #20]
 12932 00c0 1344     		add	r3, r3, r2
 12933 00c2 9E4A     		ldr	r2, .L658+20
 12934 00c4 1C46     		mov	r4, r3
 12935 00c6 1346     		mov	r3, r2
 12936 00c8 07CB     		ldmia	r3!, {r0, r1, r2}
 12937 00ca 2060     		str	r0, [r4]	@ unaligned
 12938 00cc 6160     		str	r1, [r4, #4]	@ unaligned
 12939 00ce A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 300


 12940 00d0 1B88     		ldrh	r3, [r3]	@ unaligned
 12941 00d2 A381     		strh	r3, [r4, #12]	@ unaligned
1912:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 12942              		.loc 1 1912 0
 12943 00d4 D7F88C30 		ldr	r3, [r7, #140]
 12944 00d8 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 12945 00dc 1A46     		mov	r2, r3
 12946 00de 07F11C03 		add	r3, r7, #28
 12947 00e2 9749     		ldr	r1, .L658+24
 12948 00e4 1846     		mov	r0, r3
 12949 00e6 FFF7FEFF 		bl	sprintf
1913:..\src/command_processing.c ****         strcat(info_string, str);
 12950              		.loc 1 1913 0
 12951 00ea 07F11C03 		add	r3, r7, #28
 12952 00ee 1946     		mov	r1, r3
 12953 00f0 7869     		ldr	r0, [r7, #20]
 12954 00f2 FFF7FEFF 		bl	strcat
1914:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 12955              		.loc 1 1914 0
 12956 00f6 D7F88C30 		ldr	r3, [r7, #140]
 12957 00fa 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 12958 00fe 042B     		cmp	r3, #4
 12959 0100 00F29280 		bhi	.L656
 12960 0104 01A2     		adr	r2, .L562
 12961 0106 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 12962 010a 00BF     		.p2align 2
 12963              	.L562:
 12964 010c 21010000 		.word	.L561+1
 12965 0110 4F010000 		.word	.L563+1
 12966 0114 7F010000 		.word	.L564+1
 12967 0118 C1010000 		.word	.L565+1
 12968 011c 01020000 		.word	.L566+1
 12969              		.p2align 1
 12970              	.L561:
1915:..\src/command_processing.c ****             case SOFTHAND_PRO:
1916:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 12971              		.loc 1 1916 0
 12972 0120 7869     		ldr	r0, [r7, #20]
 12973 0122 FFF7FEFF 		bl	strlen
 12974 0126 0346     		mov	r3, r0
 12975 0128 1A46     		mov	r2, r3
 12976 012a 7B69     		ldr	r3, [r7, #20]
 12977 012c 1344     		add	r3, r3, r2
 12978 012e 854A     		ldr	r2, .L658+28
 12979 0130 1C46     		mov	r4, r3
 12980 0132 1546     		mov	r5, r2
 12981 0134 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12982 0136 2060     		str	r0, [r4]	@ unaligned
 12983 0138 6160     		str	r1, [r4, #4]	@ unaligned
 12984 013a A260     		str	r2, [r4, #8]	@ unaligned
 12985 013c E360     		str	r3, [r4, #12]	@ unaligned
 12986 013e 2868     		ldr	r0, [r5]	@ unaligned
 12987 0140 2061     		str	r0, [r4, #16]	@ unaligned
 12988 0142 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 12989 0144 AA79     		ldrb	r2, [r5, #6]
 12990 0146 A382     		strh	r3, [r4, #20]	@ unaligned
 12991 0148 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 301


 12992 014a A375     		strb	r3, [r4, #22]
1917:..\src/command_processing.c ****                 break;
 12993              		.loc 1 1917 0
 12994 014c 6DE0     		b	.L567
 12995              	.L563:
1918:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1919:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 12996              		.loc 1 1919 0
 12997 014e 7869     		ldr	r0, [r7, #20]
 12998 0150 FFF7FEFF 		bl	strlen
 12999 0154 0346     		mov	r3, r0
 13000 0156 1A46     		mov	r2, r3
 13001 0158 7B69     		ldr	r3, [r7, #20]
 13002 015a 1344     		add	r3, r3, r2
 13003 015c 7A4A     		ldr	r2, .L658+32
 13004 015e 1D46     		mov	r5, r3
 13005 0160 1446     		mov	r4, r2
 13006 0162 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13007 0164 2860     		str	r0, [r5]	@ unaligned
 13008 0166 6960     		str	r1, [r5, #4]	@ unaligned
 13009 0168 AA60     		str	r2, [r5, #8]	@ unaligned
 13010 016a EB60     		str	r3, [r5, #12]	@ unaligned
 13011 016c 03CC     		ldmia	r4!, {r0, r1}
 13012 016e 2861     		str	r0, [r5, #16]	@ unaligned
 13013 0170 6961     		str	r1, [r5, #20]	@ unaligned
 13014 0172 2388     		ldrh	r3, [r4]	@ unaligned
 13015 0174 A278     		ldrb	r2, [r4, #2]
 13016 0176 2B83     		strh	r3, [r5, #24]	@ unaligned
 13017 0178 1346     		mov	r3, r2
 13018 017a AB76     		strb	r3, [r5, #26]
1920:..\src/command_processing.c ****                 break;
 13019              		.loc 1 1920 0
 13020 017c 55E0     		b	.L567
 13021              	.L564:
1921:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1922:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 13022              		.loc 1 1922 0
 13023 017e 7869     		ldr	r0, [r7, #20]
 13024 0180 FFF7FEFF 		bl	strlen
 13025 0184 0346     		mov	r3, r0
 13026 0186 1A46     		mov	r2, r3
 13027 0188 7B69     		ldr	r3, [r7, #20]
 13028 018a 1344     		add	r3, r3, r2
 13029 018c 6F4A     		ldr	r2, .L658+36
 13030 018e 1446     		mov	r4, r2
 13031 0190 9E46     		mov	lr, r3
 13032 0192 04F1200C 		add	ip, r4, #32
 13033              	.L568:
 13034 0196 7546     		mov	r5, lr
 13035 0198 2646     		mov	r6, r4
 13036 019a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13037 019c 2860     		str	r0, [r5]	@ unaligned
 13038 019e 6960     		str	r1, [r5, #4]	@ unaligned
 13039 01a0 AA60     		str	r2, [r5, #8]	@ unaligned
 13040 01a2 EB60     		str	r3, [r5, #12]	@ unaligned
 13041 01a4 1034     		adds	r4, r4, #16
 13042 01a6 0EF1100E 		add	lr, lr, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 302


 13043 01aa 6445     		cmp	r4, ip
 13044 01ac F3D1     		bne	.L568
 13045 01ae 7346     		mov	r3, lr
 13046 01b0 2246     		mov	r2, r4
 13047 01b2 1068     		ldr	r0, [r2]	@ unaligned
 13048 01b4 1860     		str	r0, [r3]	@ unaligned
 13049 01b6 9188     		ldrh	r1, [r2, #4]	@ unaligned
 13050 01b8 9279     		ldrb	r2, [r2, #6]
 13051 01ba 9980     		strh	r1, [r3, #4]	@ unaligned
 13052 01bc 9A71     		strb	r2, [r3, #6]
1923:..\src/command_processing.c ****                 break;
 13053              		.loc 1 1923 0
 13054 01be 34E0     		b	.L567
 13055              	.L565:
1924:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1925:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 13056              		.loc 1 1925 0
 13057 01c0 7869     		ldr	r0, [r7, #20]
 13058 01c2 FFF7FEFF 		bl	strlen
 13059 01c6 0346     		mov	r3, r0
 13060 01c8 1A46     		mov	r2, r3
 13061 01ca 7B69     		ldr	r3, [r7, #20]
 13062 01cc 1344     		add	r3, r3, r2
 13063 01ce 604A     		ldr	r2, .L658+40
 13064 01d0 1446     		mov	r4, r2
 13065 01d2 9E46     		mov	lr, r3
 13066 01d4 04F1200C 		add	ip, r4, #32
 13067              	.L569:
 13068 01d8 7546     		mov	r5, lr
 13069 01da 2646     		mov	r6, r4
 13070 01dc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13071 01de 2860     		str	r0, [r5]	@ unaligned
 13072 01e0 6960     		str	r1, [r5, #4]	@ unaligned
 13073 01e2 AA60     		str	r2, [r5, #8]	@ unaligned
 13074 01e4 EB60     		str	r3, [r5, #12]	@ unaligned
 13075 01e6 1034     		adds	r4, r4, #16
 13076 01e8 0EF1100E 		add	lr, lr, #16
 13077 01ec 6445     		cmp	r4, ip
 13078 01ee F3D1     		bne	.L569
 13079 01f0 7246     		mov	r2, lr
 13080 01f2 2346     		mov	r3, r4
 13081 01f4 03CB     		ldmia	r3!, {r0, r1}
 13082 01f6 1060     		str	r0, [r2]	@ unaligned
 13083 01f8 5160     		str	r1, [r2, #4]	@ unaligned
 13084 01fa 1B88     		ldrh	r3, [r3]	@ unaligned
 13085 01fc 1381     		strh	r3, [r2, #8]	@ unaligned
1926:..\src/command_processing.c ****                 break;
 13086              		.loc 1 1926 0
 13087 01fe 14E0     		b	.L567
 13088              	.L566:
1927:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1928:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 13089              		.loc 1 1928 0
 13090 0200 7869     		ldr	r0, [r7, #20]
 13091 0202 FFF7FEFF 		bl	strlen
 13092 0206 0346     		mov	r3, r0
 13093 0208 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 303


 13094 020a 7B69     		ldr	r3, [r7, #20]
 13095 020c 1344     		add	r3, r3, r2
 13096 020e 514A     		ldr	r2, .L658+44
 13097 0210 1D46     		mov	r5, r3
 13098 0212 1446     		mov	r4, r2
 13099 0214 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13100 0216 2860     		str	r0, [r5]	@ unaligned
 13101 0218 6960     		str	r1, [r5, #4]	@ unaligned
 13102 021a AA60     		str	r2, [r5, #8]	@ unaligned
 13103 021c EB60     		str	r3, [r5, #12]	@ unaligned
 13104 021e 07CC     		ldmia	r4!, {r0, r1, r2}
 13105 0220 2861     		str	r0, [r5, #16]	@ unaligned
 13106 0222 6961     		str	r1, [r5, #20]	@ unaligned
 13107 0224 AA61     		str	r2, [r5, #24]	@ unaligned
1929:..\src/command_processing.c ****                 break;
 13108              		.loc 1 1929 0
 13109 0226 00E0     		b	.L567
 13110              	.L656:
1930:..\src/command_processing.c ****             default:
1931:..\src/command_processing.c ****                 break;
 13111              		.loc 1 1931 0
 13112 0228 00BF     		nop
 13113              	.L567:
1932:..\src/command_processing.c ****         }
1933:..\src/command_processing.c ****         
1934:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 13114              		.loc 1 1934 0
 13115 022a D7F88C30 		ldr	r3, [r7, #140]
 13116 022e 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 13117 0232 002B     		cmp	r3, #0
 13118 0234 02D0     		beq	.L571
 13119 0236 012B     		cmp	r3, #1
 13120 0238 15D0     		beq	.L572
 13121 023a 26E0     		b	.L570
 13122              	.L571:
1935:..\src/command_processing.c ****             case RIGHT_HAND:
1936:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 13123              		.loc 1 1936 0
 13124 023c 7869     		ldr	r0, [r7, #20]
 13125 023e FFF7FEFF 		bl	strlen
 13126 0242 0346     		mov	r3, r0
 13127 0244 1A46     		mov	r2, r3
 13128 0246 7B69     		ldr	r3, [r7, #20]
 13129 0248 1344     		add	r3, r3, r2
 13130 024a 434A     		ldr	r2, .L658+48
 13131 024c 1D46     		mov	r5, r3
 13132 024e 1446     		mov	r4, r2
 13133 0250 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13134 0252 2860     		str	r0, [r5]	@ unaligned
 13135 0254 6960     		str	r1, [r5, #4]	@ unaligned
 13136 0256 AA60     		str	r2, [r5, #8]	@ unaligned
 13137 0258 EB60     		str	r3, [r5, #12]	@ unaligned
 13138 025a 2388     		ldrh	r3, [r4]	@ unaligned
 13139 025c A278     		ldrb	r2, [r4, #2]
 13140 025e 2B82     		strh	r3, [r5, #16]	@ unaligned
 13141 0260 1346     		mov	r3, r2
 13142 0262 AB74     		strb	r3, [r5, #18]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 304


1937:..\src/command_processing.c ****                 break;
 13143              		.loc 1 1937 0
 13144 0264 11E0     		b	.L570
 13145              	.L572:
1938:..\src/command_processing.c ****             case LEFT_HAND:
1939:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 13146              		.loc 1 1939 0
 13147 0266 7869     		ldr	r0, [r7, #20]
 13148 0268 FFF7FEFF 		bl	strlen
 13149 026c 0346     		mov	r3, r0
 13150 026e 1A46     		mov	r2, r3
 13151 0270 7B69     		ldr	r3, [r7, #20]
 13152 0272 1344     		add	r3, r3, r2
 13153 0274 394A     		ldr	r2, .L658+52
 13154 0276 1D46     		mov	r5, r3
 13155 0278 1446     		mov	r4, r2
 13156 027a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13157 027c 2860     		str	r0, [r5]	@ unaligned
 13158 027e 6960     		str	r1, [r5, #4]	@ unaligned
 13159 0280 AA60     		str	r2, [r5, #8]	@ unaligned
 13160 0282 EB60     		str	r3, [r5, #12]	@ unaligned
 13161 0284 2388     		ldrh	r3, [r4]	@ unaligned
 13162 0286 2B82     		strh	r3, [r5, #16]	@ unaligned
1940:..\src/command_processing.c ****                 break;
 13163              		.loc 1 1940 0
 13164 0288 00BF     		nop
 13165              	.L570:
1941:..\src/command_processing.c ****         }
1942:..\src/command_processing.c **** 
1943:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 13166              		.loc 1 1943 0
 13167 028a D7F88C30 		ldr	r3, [r7, #140]
 13168 028e 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 13169 0292 012B     		cmp	r3, #1
 13170 0294 02D0     		beq	.L574
 13171 0296 022B     		cmp	r3, #2
 13172 0298 11D0     		beq	.L575
 13173 029a 1FE0     		b	.L654
 13174              	.L574:
1944:..\src/command_processing.c ****             case MARIA:
1945:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 13175              		.loc 1 1945 0
 13176 029c 7869     		ldr	r0, [r7, #20]
 13177 029e FFF7FEFF 		bl	strlen
 13178 02a2 0346     		mov	r3, r0
 13179 02a4 1A46     		mov	r2, r3
 13180 02a6 7B69     		ldr	r3, [r7, #20]
 13181 02a8 1344     		add	r3, r3, r2
 13182 02aa 2D4A     		ldr	r2, .L658+56
 13183 02ac 1C46     		mov	r4, r3
 13184 02ae 1346     		mov	r3, r2
 13185 02b0 07CB     		ldmia	r3!, {r0, r1, r2}
 13186 02b2 2060     		str	r0, [r4]	@ unaligned
 13187 02b4 6160     		str	r1, [r4, #4]	@ unaligned
 13188 02b6 A260     		str	r2, [r4, #8]	@ unaligned
 13189 02b8 1B88     		ldrh	r3, [r3]	@ unaligned
 13190 02ba A381     		strh	r3, [r4, #12]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 305


1946:..\src/command_processing.c ****                 break;
 13191              		.loc 1 1946 0
 13192 02bc 22E0     		b	.L576
 13193              	.L575:
1947:..\src/command_processing.c ****             case R01:
1948:..\src/command_processing.c ****                 strcat(info_string, "User: R01\r\n");
 13194              		.loc 1 1948 0
 13195 02be 7869     		ldr	r0, [r7, #20]
 13196 02c0 FFF7FEFF 		bl	strlen
 13197 02c4 0346     		mov	r3, r0
 13198 02c6 1A46     		mov	r2, r3
 13199 02c8 7B69     		ldr	r3, [r7, #20]
 13200 02ca 1344     		add	r3, r3, r2
 13201 02cc 254A     		ldr	r2, .L658+60
 13202 02ce 1C46     		mov	r4, r3
 13203 02d0 1346     		mov	r3, r2
 13204 02d2 07CB     		ldmia	r3!, {r0, r1, r2}
 13205 02d4 2060     		str	r0, [r4]	@ unaligned
 13206 02d6 6160     		str	r1, [r4, #4]	@ unaligned
 13207 02d8 A260     		str	r2, [r4, #8]	@ unaligned
1949:..\src/command_processing.c ****                 break;
 13208              		.loc 1 1949 0
 13209 02da 13E0     		b	.L576
 13210              	.L654:
1950:..\src/command_processing.c ****             default:
1951:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 13211              		.loc 1 1951 0
 13212 02dc 7869     		ldr	r0, [r7, #20]
 13213 02de FFF7FEFF 		bl	strlen
 13214 02e2 0346     		mov	r3, r0
 13215 02e4 1A46     		mov	r2, r3
 13216 02e6 7B69     		ldr	r3, [r7, #20]
 13217 02e8 1344     		add	r3, r3, r2
 13218 02ea 1F4A     		ldr	r2, .L658+64
 13219 02ec 1D46     		mov	r5, r3
 13220 02ee 1446     		mov	r4, r2
 13221 02f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13222 02f2 2860     		str	r0, [r5]	@ unaligned
 13223 02f4 6960     		str	r1, [r5, #4]	@ unaligned
 13224 02f6 AA60     		str	r2, [r5, #8]	@ unaligned
 13225 02f8 EB60     		str	r3, [r5, #12]	@ unaligned
 13226 02fa 2068     		ldr	r0, [r4]	@ unaligned
 13227 02fc 2861     		str	r0, [r5, #16]	@ unaligned
 13228 02fe 2379     		ldrb	r3, [r4, #4]
 13229 0300 2B75     		strb	r3, [r5, #20]
1952:..\src/command_processing.c ****                 break;
 13230              		.loc 1 1952 0
 13231 0302 00BF     		nop
 13232              	.L576:
1953:..\src/command_processing.c ****         }
1954:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 13233              		.loc 1 1954 0
 13234 0304 7869     		ldr	r0, [r7, #20]
 13235 0306 FFF7FEFF 		bl	strlen
 13236 030a 0346     		mov	r3, r0
 13237 030c 1A46     		mov	r2, r3
 13238 030e 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 306


 13239 0310 1344     		add	r3, r3, r2
 13240 0312 064A     		ldr	r2, .L658+4
 13241 0314 1188     		ldrh	r1, [r2]	@ unaligned
 13242 0316 9278     		ldrb	r2, [r2, #2]
 13243 0318 1980     		strh	r1, [r3]	@ unaligned
 13244 031a 9A70     		strb	r2, [r3, #2]
 13245              	.LBB25:
1955:..\src/command_processing.c ****         
1956:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 13246              		.loc 1 1956 0
 13247 031c 0023     		movs	r3, #0
 13248 031e 87F89330 		strb	r3, [r7, #147]
 13249 0322 01F070B8 		b	.L577
 13250              	.L659:
 13251 0326 00BF     		.align	2
 13252              	.L658:
 13253 0328 00000000 		.word	c_mem
 13254 032c 58110000 		.word	.LC152
 13255 0330 5C110000 		.word	.LC153
 13256 0334 70110000 		.word	.LC154
 13257 0338 98110000 		.word	.LC155
 13258 033c A0110000 		.word	.LC156
 13259 0340 B0110000 		.word	.LC157
 13260 0344 BC110000 		.word	.LC158
 13261 0348 D4110000 		.word	.LC159
 13262 034c F0110000 		.word	.LC160
 13263 0350 18120000 		.word	.LC161
 13264 0354 44120000 		.word	.LC162
 13265 0358 60120000 		.word	.LC163
 13266 035c 74120000 		.word	.LC164
 13267 0360 88120000 		.word	.LC165
 13268 0364 98120000 		.word	.LC166
 13269 0368 A4120000 		.word	.LC167
 13270              	.L630:
 13271              	.LBB26:
1957:..\src/command_processing.c ****             
1958:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 13272              		.loc 1 1958 0
 13273 036c 97F89330 		ldrb	r3, [r7, #147]
 13274 0370 87F88B30 		strb	r3, [r7, #139]
1959:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 13275              		.loc 1 1959 0
 13276 0374 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 13277 0378 1346     		mov	r3, r2
 13278 037a DB00     		lsls	r3, r3, #3
 13279 037c 9B1A     		subs	r3, r3, r2
 13280 037e 1B01     		lsls	r3, r3, #4
 13281 0380 B033     		adds	r3, r3, #176
 13282 0382 D7F88C20 		ldr	r2, [r7, #140]
 13283 0386 1344     		add	r3, r3, r2
 13284 0388 C7F88430 		str	r3, [r7, #132]
1960:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 13285              		.loc 1 1960 0
 13286 038c D7F88430 		ldr	r3, [r7, #132]
 13287 0390 93F86030 		ldrb	r3, [r3, #96]
 13288 0394 87F88330 		strb	r3, [r7, #131]
1961:..\src/command_processing.c ****                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 307


1962:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 13289              		.loc 1 1962 0
 13290 0398 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13291 039c 5A1C     		adds	r2, r3, #1
 13292 039e 07F11C03 		add	r3, r7, #28
 13293 03a2 AE49     		ldr	r1, .L660
 13294 03a4 1846     		mov	r0, r3
 13295 03a6 FFF7FEFF 		bl	sprintf
1963:..\src/command_processing.c ****             strcat(info_string, str);
 13296              		.loc 1 1963 0
 13297 03aa 07F11C03 		add	r3, r7, #28
 13298 03ae 1946     		mov	r1, r3
 13299 03b0 7869     		ldr	r0, [r7, #20]
 13300 03b2 FFF7FEFF 		bl	strcat
1964:..\src/command_processing.c ****                         
1965:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 13301              		.loc 1 1965 0
 13302 03b6 7869     		ldr	r0, [r7, #20]
 13303 03b8 FFF7FEFF 		bl	strlen
 13304 03bc 0346     		mov	r3, r0
 13305 03be 1A46     		mov	r2, r3
 13306 03c0 7B69     		ldr	r3, [r7, #20]
 13307 03c2 1344     		add	r3, r3, r2
 13308 03c4 A64A     		ldr	r2, .L660+4
 13309 03c6 1C46     		mov	r4, r3
 13310 03c8 1546     		mov	r5, r2
 13311 03ca 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13312 03cc 2060     		str	r0, [r4]	@ unaligned
 13313 03ce 6160     		str	r1, [r4, #4]	@ unaligned
 13314 03d0 A260     		str	r2, [r4, #8]	@ unaligned
 13315 03d2 E360     		str	r3, [r4, #12]	@ unaligned
1966:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 13316              		.loc 1 1966 0
 13317 03d4 D7F88430 		ldr	r3, [r7, #132]
 13318 03d8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13319 03dc 022B     		cmp	r3, #2
 13320 03de 10D1     		bne	.L578
1967:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 13321              		.loc 1 1967 0
 13322 03e0 7869     		ldr	r0, [r7, #20]
 13323 03e2 FFF7FEFF 		bl	strlen
 13324 03e6 0346     		mov	r3, r0
 13325 03e8 1A46     		mov	r2, r3
 13326 03ea 7B69     		ldr	r3, [r7, #20]
 13327 03ec 1344     		add	r3, r3, r2
 13328 03ee 9D4A     		ldr	r2, .L660+8
 13329 03f0 1C46     		mov	r4, r3
 13330 03f2 1346     		mov	r3, r2
 13331 03f4 07CB     		ldmia	r3!, {r0, r1, r2}
 13332 03f6 2060     		str	r0, [r4]	@ unaligned
 13333 03f8 6160     		str	r1, [r4, #4]	@ unaligned
 13334 03fa A260     		str	r2, [r4, #8]	@ unaligned
 13335 03fc 1B88     		ldrh	r3, [r3]	@ unaligned
 13336 03fe A381     		strh	r3, [r4, #12]	@ unaligned
 13337 0400 25E0     		b	.L579
 13338              	.L578:
1968:..\src/command_processing.c ****             else {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 308


1969:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 13339              		.loc 1 1969 0
 13340 0402 D7F88430 		ldr	r3, [r7, #132]
 13341 0406 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13342 040a 012B     		cmp	r3, #1
 13343 040c 0FD1     		bne	.L580
1970:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 13344              		.loc 1 1970 0
 13345 040e 7869     		ldr	r0, [r7, #20]
 13346 0410 FFF7FEFF 		bl	strlen
 13347 0414 0346     		mov	r3, r0
 13348 0416 1A46     		mov	r2, r3
 13349 0418 7B69     		ldr	r3, [r7, #20]
 13350 041a 1344     		add	r3, r3, r2
 13351 041c 9249     		ldr	r1, .L660+12
 13352 041e 1A46     		mov	r2, r3
 13353 0420 0B46     		mov	r3, r1
 13354 0422 03CB     		ldmia	r3!, {r0, r1}
 13355 0424 1060     		str	r0, [r2]	@ unaligned
 13356 0426 5160     		str	r1, [r2, #4]	@ unaligned
 13357 0428 1B78     		ldrb	r3, [r3]
 13358 042a 1372     		strb	r3, [r2, #8]
 13359 042c 0FE0     		b	.L579
 13360              	.L580:
1971:..\src/command_processing.c ****                 else
1972:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 13361              		.loc 1 1972 0
 13362 042e 7869     		ldr	r0, [r7, #20]
 13363 0430 FFF7FEFF 		bl	strlen
 13364 0434 0346     		mov	r3, r0
 13365 0436 1A46     		mov	r2, r3
 13366 0438 7B69     		ldr	r3, [r7, #20]
 13367 043a 1344     		add	r3, r3, r2
 13368 043c 8B4A     		ldr	r2, .L660+16
 13369 043e 1C46     		mov	r4, r3
 13370 0440 1346     		mov	r3, r2
 13371 0442 07CB     		ldmia	r3!, {r0, r1, r2}
 13372 0444 2060     		str	r0, [r4]	@ unaligned
 13373 0446 6160     		str	r1, [r4, #4]	@ unaligned
 13374 0448 A260     		str	r2, [r4, #8]	@ unaligned
 13375 044a 1B88     		ldrh	r3, [r3]	@ unaligned
 13376 044c A381     		strh	r3, [r4, #12]	@ unaligned
 13377              	.L579:
1973:..\src/command_processing.c ****             }
1974:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 13378              		.loc 1 1974 0
 13379 044e D7F88430 		ldr	r3, [r7, #132]
 13380 0452 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13381 0456 022B     		cmp	r3, #2
 13382 0458 13D1     		bne	.L581
1975:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 13383              		.loc 1 1975 0
 13384 045a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13385 045e 844A     		ldr	r2, .L660+20
 13386 0460 1B01     		lsls	r3, r3, #4
 13387 0462 1344     		add	r3, r3, r2
 13388 0464 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 309


 13389 0466 1A68     		ldr	r2, [r3]
 13390 0468 07F11C03 		add	r3, r7, #28
 13391 046c 8149     		ldr	r1, .L660+24
 13392 046e 1846     		mov	r0, r3
 13393 0470 FFF7FEFF 		bl	sprintf
1976:..\src/command_processing.c ****                 strcat(info_string,str);
 13394              		.loc 1 1976 0
 13395 0474 07F11C03 		add	r3, r7, #28
 13396 0478 1946     		mov	r1, r3
 13397 047a 7869     		ldr	r0, [r7, #20]
 13398 047c FFF7FEFF 		bl	strcat
 13399 0480 39E0     		b	.L582
 13400              	.L581:
1977:..\src/command_processing.c ****             }
1978:..\src/command_processing.c ****             else {
1979:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 13401              		.loc 1 1979 0
 13402 0482 D7F88430 		ldr	r3, [r7, #132]
 13403 0486 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13404 048a 012B     		cmp	r3, #1
 13405 048c 13D1     		bne	.L583
1980:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 13406              		.loc 1 1980 0
 13407 048e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13408 0492 774A     		ldr	r2, .L660+20
 13409 0494 1B01     		lsls	r3, r3, #4
 13410 0496 1344     		add	r3, r3, r2
 13411 0498 0833     		adds	r3, r3, #8
 13412 049a 1A68     		ldr	r2, [r3]
 13413 049c 07F11C03 		add	r3, r7, #28
 13414 04a0 7449     		ldr	r1, .L660+24
 13415 04a2 1846     		mov	r0, r3
 13416 04a4 FFF7FEFF 		bl	sprintf
1981:..\src/command_processing.c ****                     strcat(info_string,str);
 13417              		.loc 1 1981 0
 13418 04a8 07F11C03 		add	r3, r7, #28
 13419 04ac 1946     		mov	r1, r3
 13420 04ae 7869     		ldr	r0, [r7, #20]
 13421 04b0 FFF7FEFF 		bl	strcat
 13422 04b4 1FE0     		b	.L582
 13423              	.L583:
1982:..\src/command_processing.c ****                 }
1983:..\src/command_processing.c ****                 else {
1984:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 13424              		.loc 1 1984 0
 13425 04b6 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13426 04ba 6D4A     		ldr	r2, .L660+20
 13427 04bc 1B01     		lsls	r3, r3, #4
 13428 04be 1344     		add	r3, r3, r2
 13429 04c0 1968     		ldr	r1, [r3]
 13430 04c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13431 04c6 D7F88C00 		ldr	r0, [r7, #140]
 13432 04ca 1346     		mov	r3, r2
 13433 04cc 5B00     		lsls	r3, r3, #1
 13434 04ce 1344     		add	r3, r3, r2
 13435 04d0 1B01     		lsls	r3, r3, #4
 13436 04d2 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 310


 13437 04d4 03F29513 		addw	r3, r3, #405
 13438 04d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13439 04da 41FA03F2 		asr	r2, r1, r3
 13440 04de 07F11C03 		add	r3, r7, #28
 13441 04e2 6449     		ldr	r1, .L660+24
 13442 04e4 1846     		mov	r0, r3
 13443 04e6 FFF7FEFF 		bl	sprintf
1985:..\src/command_processing.c ****                     strcat(info_string,str);
 13444              		.loc 1 1985 0
 13445 04ea 07F11C03 		add	r3, r7, #28
 13446 04ee 1946     		mov	r1, r3
 13447 04f0 7869     		ldr	r0, [r7, #20]
 13448 04f2 FFF7FEFF 		bl	strcat
 13449              	.L582:
1986:..\src/command_processing.c ****                 }
1987:..\src/command_processing.c ****             }
1988:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 13450              		.loc 1 1988 0
 13451 04f6 7869     		ldr	r0, [r7, #20]
 13452 04f8 FFF7FEFF 		bl	strlen
 13453 04fc 0346     		mov	r3, r0
 13454 04fe 1A46     		mov	r2, r3
 13455 0500 7B69     		ldr	r3, [r7, #20]
 13456 0502 1344     		add	r3, r3, r2
 13457 0504 5C4A     		ldr	r2, .L660+28
 13458 0506 1188     		ldrh	r1, [r2]	@ unaligned
 13459 0508 9278     		ldrb	r2, [r2, #2]
 13460 050a 1980     		strh	r1, [r3]	@ unaligned
 13461 050c 9A70     		strb	r2, [r3, #2]
1989:..\src/command_processing.c **** 
1990:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 13462              		.loc 1 1990 0
 13463 050e 07F11C03 		add	r3, r7, #28
 13464 0512 5A4A     		ldr	r2, .L660+32
 13465 0514 1C46     		mov	r4, r3
 13466 0516 1346     		mov	r3, r2
 13467 0518 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 13468 051a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1991:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 13469              		.loc 1 1991 0
 13470 051e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13471 0522 574A     		ldr	r2, .L660+36
 13472 0524 1B01     		lsls	r3, r3, #4
 13473 0526 1344     		add	r3, r3, r2
 13474 0528 0C33     		adds	r3, r3, #12
 13475 052a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13476 052c 03F00103 		and	r3, r3, #1
 13477 0530 002B     		cmp	r3, #0
 13478 0532 0FD0     		beq	.L584
1992:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 13479              		.loc 1 1992 0
 13480 0534 07F11C03 		add	r3, r7, #28
 13481 0538 1846     		mov	r0, r3
 13482 053a FFF7FEFF 		bl	strlen
 13483 053e 0346     		mov	r3, r0
 13484 0540 1A46     		mov	r2, r3
 13485 0542 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 311


 13486 0546 1344     		add	r3, r3, r2
 13487 0548 4E4A     		ldr	r2, .L660+40
 13488 054a 1068     		ldr	r0, [r2]	@ unaligned
 13489 054c 1860     		str	r0, [r3]	@ unaligned
 13490 054e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13491 0550 9A80     		strh	r2, [r3, #4]	@ unaligned
 13492 0552 0EE0     		b	.L585
 13493              	.L584:
1993:..\src/command_processing.c ****             } else {
1994:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 13494              		.loc 1 1994 0
 13495 0554 07F11C03 		add	r3, r7, #28
 13496 0558 1846     		mov	r0, r3
 13497 055a FFF7FEFF 		bl	strlen
 13498 055e 0346     		mov	r3, r0
 13499 0560 1A46     		mov	r2, r3
 13500 0562 07F11C03 		add	r3, r7, #28
 13501 0566 1344     		add	r3, r3, r2
 13502 0568 474A     		ldr	r2, .L660+44
 13503 056a 1068     		ldr	r0, [r2]	@ unaligned
 13504 056c 1860     		str	r0, [r3]	@ unaligned
 13505 056e 1279     		ldrb	r2, [r2, #4]
 13506 0570 1A71     		strb	r2, [r3, #4]
 13507              	.L585:
1995:..\src/command_processing.c ****             }
1996:..\src/command_processing.c ****             strcat(info_string, str);
 13508              		.loc 1 1996 0
 13509 0572 07F11C03 		add	r3, r7, #28
 13510 0576 1946     		mov	r1, r3
 13511 0578 7869     		ldr	r0, [r7, #20]
 13512 057a FFF7FEFF 		bl	strcat
1997:..\src/command_processing.c ****                         
1998:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 13513              		.loc 1 1998 0
 13514 057e 7869     		ldr	r0, [r7, #20]
 13515 0580 FFF7FEFF 		bl	strlen
 13516 0584 0346     		mov	r3, r0
 13517 0586 1A46     		mov	r2, r3
 13518 0588 7B69     		ldr	r3, [r7, #20]
 13519 058a 1344     		add	r3, r3, r2
 13520 058c 3F4A     		ldr	r2, .L660+48
 13521 058e 1D46     		mov	r5, r3
 13522 0590 1446     		mov	r4, r2
 13523 0592 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13524 0594 2860     		str	r0, [r5]	@ unaligned
 13525 0596 6960     		str	r1, [r5, #4]	@ unaligned
 13526 0598 AA60     		str	r2, [r5, #8]	@ unaligned
 13527 059a EB60     		str	r3, [r5, #12]	@ unaligned
 13528 059c 03CC     		ldmia	r4!, {r0, r1}
 13529 059e 2861     		str	r0, [r5, #16]	@ unaligned
 13530 05a0 6961     		str	r1, [r5, #20]	@ unaligned
 13531 05a2 2388     		ldrh	r3, [r4]	@ unaligned
 13532 05a4 A278     		ldrb	r2, [r4, #2]
 13533 05a6 2B83     		strh	r3, [r5, #24]	@ unaligned
 13534 05a8 1346     		mov	r3, r2
 13535 05aa AB76     		strb	r3, [r5, #26]
1999:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 312


 13536              		.loc 1 1999 0
 13537 05ac D7F88430 		ldr	r3, [r7, #132]
 13538 05b0 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 13539 05b4 012B     		cmp	r3, #1
 13540 05b6 0CD1     		bne	.L586
2000:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 13541              		.loc 1 2000 0
 13542 05b8 7869     		ldr	r0, [r7, #20]
 13543 05ba FFF7FEFF 		bl	strlen
 13544 05be 0346     		mov	r3, r0
 13545 05c0 1A46     		mov	r2, r3
 13546 05c2 7B69     		ldr	r3, [r7, #20]
 13547 05c4 1344     		add	r3, r3, r2
 13548 05c6 324A     		ldr	r2, .L660+52
 13549 05c8 1068     		ldr	r0, [r2]	@ unaligned
 13550 05ca 1860     		str	r0, [r3]	@ unaligned
 13551 05cc 1279     		ldrb	r2, [r2, #4]
 13552 05ce 1A71     		strb	r2, [r3, #4]
 13553 05d0 09E0     		b	.L587
 13554              	.L586:
2001:..\src/command_processing.c ****             else
2002:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 13555              		.loc 1 2002 0
 13556 05d2 7869     		ldr	r0, [r7, #20]
 13557 05d4 FFF7FEFF 		bl	strlen
 13558 05d8 0346     		mov	r3, r0
 13559 05da 1A46     		mov	r2, r3
 13560 05dc 7B69     		ldr	r3, [r7, #20]
 13561 05de 1344     		add	r3, r3, r2
 13562 05e0 2C4A     		ldr	r2, .L660+56
 13563 05e2 1068     		ldr	r0, [r2]	@ unaligned
 13564 05e4 1860     		str	r0, [r3]	@ unaligned
 13565              	.L587:
2003:..\src/command_processing.c ****             
2004:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 13566              		.loc 1 2004 0
 13567 05e6 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13568 05ea 2B4A     		ldr	r2, .L660+60
 13569 05ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 13570 05f0 1A46     		mov	r2, r3
 13571 05f2 07F11C03 		add	r3, r7, #28
 13572 05f6 2949     		ldr	r1, .L660+64
 13573 05f8 1846     		mov	r0, r3
 13574 05fa FFF7FEFF 		bl	sprintf
2005:..\src/command_processing.c ****             strcat(info_string, str);
 13575              		.loc 1 2005 0
 13576 05fe 07F11C03 		add	r3, r7, #28
 13577 0602 1946     		mov	r1, r3
 13578 0604 7869     		ldr	r0, [r7, #20]
 13579 0606 FFF7FEFF 		bl	strcat
2006:..\src/command_processing.c **** 
2007:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 13580              		.loc 1 2007 0
 13581 060a 7869     		ldr	r0, [r7, #20]
 13582 060c FFF7FEFF 		bl	strlen
 13583 0610 0346     		mov	r3, r0
 13584 0612 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 313


 13585 0614 7B69     		ldr	r3, [r7, #20]
 13586 0616 1344     		add	r3, r3, r2
 13587 0618 214A     		ldr	r2, .L660+68
 13588 061a 1D46     		mov	r5, r3
 13589 061c 1446     		mov	r4, r2
 13590 061e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13591 0620 2860     		str	r0, [r5]	@ unaligned
 13592 0622 6960     		str	r1, [r5, #4]	@ unaligned
 13593 0624 AA60     		str	r2, [r5, #8]	@ unaligned
 13594 0626 EB60     		str	r3, [r5, #12]	@ unaligned
 13595 0628 2068     		ldr	r0, [r4]	@ unaligned
 13596 062a 2861     		str	r0, [r5, #16]	@ unaligned
 13597 062c A388     		ldrh	r3, [r4, #4]	@ unaligned
 13598 062e AB82     		strh	r3, [r5, #20]	@ unaligned
2008:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 13599              		.loc 1 2008 0
 13600 0630 7869     		ldr	r0, [r7, #20]
 13601 0632 FFF7FEFF 		bl	strlen
 13602 0636 0346     		mov	r3, r0
 13603 0638 1A46     		mov	r2, r3
 13604 063a 7B69     		ldr	r3, [r7, #20]
 13605 063c 1344     		add	r3, r3, r2
 13606 063e 194A     		ldr	r2, .L660+72
 13607 0640 1C46     		mov	r4, r3
 13608 0642 1346     		mov	r3, r2
 13609 0644 07CB     		ldmia	r3!, {r0, r1, r2}
 13610 0646 2060     		str	r0, [r4]	@ unaligned
 13611 0648 6160     		str	r1, [r4, #4]	@ unaligned
 13612 064a A260     		str	r2, [r4, #8]	@ unaligned
 13613 064c 1A88     		ldrh	r2, [r3]	@ unaligned
 13614 064e 9B78     		ldrb	r3, [r3, #2]
 13615 0650 A281     		strh	r2, [r4, #12]	@ unaligned
 13616 0652 A373     		strb	r3, [r4, #14]
2009:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 13617              		.loc 1 2009 0
 13618 0654 0023     		movs	r3, #0
 13619 0656 C7F89430 		str	r3, [r7, #148]
 13620 065a 64E0     		b	.L588
 13621              	.L661:
 13622              		.align	2
 13623              	.L660:
 13624 065c BC120000 		.word	.LC168
 13625 0660 CC120000 		.word	.LC169
 13626 0664 DC120000 		.word	.LC170
 13627 0668 EC120000 		.word	.LC171
 13628 066c F8120000 		.word	.LC172
 13629 0670 00000000 		.word	g_refOld
 13630 0674 08130000 		.word	.LC173
 13631 0678 58110000 		.word	.LC152
 13632 067c 0C130000 		.word	.LC174
 13633 0680 00000000 		.word	g_ref
 13634 0684 1C130000 		.word	.LC175
 13635 0688 24130000 		.word	.LC176
 13636 068c 2C130000 		.word	.LC177
 13637 0690 48130000 		.word	.LC178
 13638 0694 50130000 		.word	.LC179
 13639 0698 00000000 		.word	dev_pwm_limit
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 314


 13640 069c 54130000 		.word	.LC180
 13641 06a0 64130000 		.word	.LC181
 13642 06a4 7C130000 		.word	.LC182
 13643              	.L590:
2010:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 13644              		.loc 1 2010 0
 13645 06a8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13646 06ac B849     		ldr	r1, .L662
 13647 06ae 1346     		mov	r3, r2
 13648 06b0 5B00     		lsls	r3, r3, #1
 13649 06b2 1344     		add	r3, r3, r2
 13650 06b4 9B00     		lsls	r3, r3, #2
 13651 06b6 1344     		add	r3, r3, r2
 13652 06b8 D7F89420 		ldr	r2, [r7, #148]
 13653 06bc 1344     		add	r3, r3, r2
 13654 06be 51F82310 		ldr	r1, [r1, r3, lsl #2]
 13655 06c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13656 06c6 D7F88C00 		ldr	r0, [r7, #140]
 13657 06ca 1346     		mov	r3, r2
 13658 06cc 5B00     		lsls	r3, r3, #1
 13659 06ce 1344     		add	r3, r3, r2
 13660 06d0 1B01     		lsls	r3, r3, #4
 13661 06d2 C218     		adds	r2, r0, r3
 13662 06d4 D7F89430 		ldr	r3, [r7, #148]
 13663 06d8 1344     		add	r3, r3, r2
 13664 06da 03F29513 		addw	r3, r3, #405
 13665 06de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13666 06e0 41FA03F2 		asr	r2, r1, r3
 13667 06e4 07F11C03 		add	r3, r7, #28
 13668 06e8 AA49     		ldr	r1, .L662+4
 13669 06ea 1846     		mov	r0, r3
 13670 06ec FFF7FEFF 		bl	sprintf
2011:..\src/command_processing.c ****                 strcat(info_string, str);
 13671              		.loc 1 2011 0
 13672 06f0 07F11C03 		add	r3, r7, #28
 13673 06f4 1946     		mov	r1, r3
 13674 06f6 7869     		ldr	r0, [r7, #20]
 13675 06f8 FFF7FEFF 		bl	strcat
2012:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 13676              		.loc 1 2012 0
 13677 06fc D7F89430 		ldr	r3, [r7, #148]
 13678 0700 022B     		cmp	r3, #2
 13679 0702 0BD0     		beq	.L589
2013:..\src/command_processing.c ****                     strcat(info_string, ", ");
 13680              		.loc 1 2013 0
 13681 0704 7869     		ldr	r0, [r7, #20]
 13682 0706 FFF7FEFF 		bl	strlen
 13683 070a 0346     		mov	r3, r0
 13684 070c 1A46     		mov	r2, r3
 13685 070e 7B69     		ldr	r3, [r7, #20]
 13686 0710 1344     		add	r3, r3, r2
 13687 0712 A14A     		ldr	r2, .L662+8
 13688 0714 1188     		ldrh	r1, [r2]	@ unaligned
 13689 0716 9278     		ldrb	r2, [r2, #2]
 13690 0718 1980     		strh	r1, [r3]	@ unaligned
 13691 071a 9A70     		strb	r2, [r3, #2]
 13692              	.L589:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 315


2009:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 13693              		.loc 1 2009 0 discriminator 2
 13694 071c D7F89430 		ldr	r3, [r7, #148]
 13695 0720 0133     		adds	r3, r3, #1
 13696 0722 C7F89430 		str	r3, [r7, #148]
 13697              	.L588:
2009:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 13698              		.loc 1 2009 0 is_stmt 0 discriminator 1
 13699 0726 D7F89430 		ldr	r3, [r7, #148]
 13700 072a 022B     		cmp	r3, #2
 13701 072c BCDD     		ble	.L590
2014:..\src/command_processing.c ****                 }                
2015:..\src/command_processing.c ****             }
2016:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13702              		.loc 1 2016 0 is_stmt 1
 13703 072e 7869     		ldr	r0, [r7, #20]
 13704 0730 FFF7FEFF 		bl	strlen
 13705 0734 0346     		mov	r3, r0
 13706 0736 1A46     		mov	r2, r3
 13707 0738 7B69     		ldr	r3, [r7, #20]
 13708 073a 1344     		add	r3, r3, r2
 13709 073c 974A     		ldr	r2, .L662+12
 13710 073e 1188     		ldrh	r1, [r2]	@ unaligned
 13711 0740 9278     		ldrb	r2, [r2, #2]
 13712 0742 1980     		strh	r1, [r3]	@ unaligned
 13713 0744 9A70     		strb	r2, [r3, #2]
2017:..\src/command_processing.c ****             
2018:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 13714              		.loc 1 2018 0
 13715 0746 D7F88430 		ldr	r3, [r7, #132]
 13716 074a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 13717 074e 062B     		cmp	r3, #6
 13718 0750 1AD1     		bne	.L591
2019:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 13719              		.loc 1 2019 0
 13720 0752 934B     		ldr	r3, .L662+16
 13721 0754 1A6A     		ldr	r2, [r3, #32]
 13722 0756 924B     		ldr	r3, .L662+16
 13723 0758 5B6A     		ldr	r3, [r3, #36]
 13724 075a 07F11C00 		add	r0, r7, #28
 13725 075e 9149     		ldr	r1, .L662+20
 13726 0760 FFF7FEFF 		bl	sprintf
2020:..\src/command_processing.c ****                 strcat(info_string, str);
 13727              		.loc 1 2020 0
 13728 0764 07F11C03 		add	r3, r7, #28
 13729 0768 1946     		mov	r1, r3
 13730 076a 7869     		ldr	r0, [r7, #20]
 13731 076c FFF7FEFF 		bl	strcat
2021:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 13732              		.loc 1 2021 0
 13733 0770 7869     		ldr	r0, [r7, #20]
 13734 0772 FFF7FEFF 		bl	strlen
 13735 0776 0346     		mov	r3, r0
 13736 0778 1A46     		mov	r2, r3
 13737 077a 7B69     		ldr	r3, [r7, #20]
 13738 077c 1344     		add	r3, r3, r2
 13739 077e 874A     		ldr	r2, .L662+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 316


 13740 0780 1188     		ldrh	r1, [r2]	@ unaligned
 13741 0782 9278     		ldrb	r2, [r2, #2]
 13742 0784 1980     		strh	r1, [r3]	@ unaligned
 13743 0786 9A70     		strb	r2, [r3, #2]
 13744              	.L591:
2022:..\src/command_processing.c ****             }
2023:..\src/command_processing.c **** 
2024:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 13745              		.loc 1 2024 0
 13746 0788 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13747 078c 591C     		adds	r1, r3, #1
 13748 078e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13749 0792 854A     		ldr	r2, .L662+24
 13750 0794 52F82330 		ldr	r3, [r2, r3, lsl #2]
 13751 0798 07F11C00 		add	r0, r7, #28
 13752 079c 0A46     		mov	r2, r1
 13753 079e 8349     		ldr	r1, .L662+28
 13754 07a0 FFF7FEFF 		bl	sprintf
2025:..\src/command_processing.c ****             strcat(info_string, str);
 13755              		.loc 1 2025 0
 13756 07a4 07F11C03 		add	r3, r7, #28
 13757 07a8 1946     		mov	r1, r3
 13758 07aa 7869     		ldr	r0, [r7, #20]
 13759 07ac FFF7FEFF 		bl	strcat
2026:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13760              		.loc 1 2026 0
 13761 07b0 7869     		ldr	r0, [r7, #20]
 13762 07b2 FFF7FEFF 		bl	strlen
 13763 07b6 0346     		mov	r3, r0
 13764 07b8 1A46     		mov	r2, r3
 13765 07ba 7B69     		ldr	r3, [r7, #20]
 13766 07bc 1344     		add	r3, r3, r2
 13767 07be 774A     		ldr	r2, .L662+12
 13768 07c0 1188     		ldrh	r1, [r2]	@ unaligned
 13769 07c2 9278     		ldrb	r2, [r2, #2]
 13770 07c4 1980     		strh	r1, [r3]	@ unaligned
 13771 07c6 9A70     		strb	r2, [r3, #2]
2027:..\src/command_processing.c ****             
2028:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 13772              		.loc 1 2028 0
 13773 07c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13774 07cc 591C     		adds	r1, r3, #1
 13775 07ce 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13776 07d2 774A     		ldr	r2, .L662+32
 13777 07d4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 13778 07d8 07F11C00 		add	r0, r7, #28
 13779 07dc 0A46     		mov	r2, r1
 13780 07de 7549     		ldr	r1, .L662+36
 13781 07e0 FFF7FEFF 		bl	sprintf
2029:..\src/command_processing.c ****             strcat(info_string, str);
 13782              		.loc 1 2029 0
 13783 07e4 07F11C03 		add	r3, r7, #28
 13784 07e8 1946     		mov	r1, r3
 13785 07ea 7869     		ldr	r0, [r7, #20]
 13786 07ec FFF7FEFF 		bl	strcat
2030:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13787              		.loc 1 2030 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 317


 13788 07f0 7869     		ldr	r0, [r7, #20]
 13789 07f2 FFF7FEFF 		bl	strlen
 13790 07f6 0346     		mov	r3, r0
 13791 07f8 1A46     		mov	r2, r3
 13792 07fa 7B69     		ldr	r3, [r7, #20]
 13793 07fc 1344     		add	r3, r3, r2
 13794 07fe 674A     		ldr	r2, .L662+12
 13795 0800 1188     		ldrh	r1, [r2]	@ unaligned
 13796 0802 9278     		ldrb	r2, [r2, #2]
 13797 0804 1980     		strh	r1, [r3]	@ unaligned
 13798 0806 9A70     		strb	r2, [r3, #2]
2031:..\src/command_processing.c **** 
2032:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 13799              		.loc 1 2032 0
 13800 0808 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13801 080c 5C1C     		adds	r4, r3, #1
 13802 080e 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 13803 0812 5F4A     		ldr	r2, .L662
 13804 0814 3421     		movs	r1, #52
 13805 0816 01FB03F3 		mul	r3, r1, r3
 13806 081a 1344     		add	r3, r3, r2
 13807 081c 0C33     		adds	r3, r3, #12
 13808 081e 1B68     		ldr	r3, [r3]
 13809 0820 07F11C00 		add	r0, r7, #28
 13810 0824 2246     		mov	r2, r4
 13811 0826 6449     		ldr	r1, .L662+40
 13812 0828 FFF7FEFF 		bl	sprintf
2033:..\src/command_processing.c ****             strcat(info_string, str);
 13813              		.loc 1 2033 0
 13814 082c 07F11C03 		add	r3, r7, #28
 13815 0830 1946     		mov	r1, r3
 13816 0832 7869     		ldr	r0, [r7, #20]
 13817 0834 FFF7FEFF 		bl	strcat
2034:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13818              		.loc 1 2034 0
 13819 0838 7869     		ldr	r0, [r7, #20]
 13820 083a FFF7FEFF 		bl	strlen
 13821 083e 0346     		mov	r3, r0
 13822 0840 1A46     		mov	r2, r3
 13823 0842 7B69     		ldr	r3, [r7, #20]
 13824 0844 1344     		add	r3, r3, r2
 13825 0846 554A     		ldr	r2, .L662+12
 13826 0848 1188     		ldrh	r1, [r2]	@ unaligned
 13827 084a 9278     		ldrb	r2, [r2, #2]
 13828 084c 1980     		strh	r1, [r3]	@ unaligned
 13829 084e 9A70     		strb	r2, [r3, #2]
2035:..\src/command_processing.c ****             
2036:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 13830              		.loc 1 2036 0
 13831 0850 D7F88430 		ldr	r3, [r7, #132]
 13832 0854 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 13833 0858 012B     		cmp	r3, #1
 13834 085a 23D1     		bne	.L592
2037:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 13835              		.loc 1 2037 0
 13836 085c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13837 0860 5C1C     		adds	r4, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 318


 13838 0862 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 13839 0866 4A4A     		ldr	r2, .L662
 13840 0868 3421     		movs	r1, #52
 13841 086a 01FB03F3 		mul	r3, r1, r3
 13842 086e 1344     		add	r3, r3, r2
 13843 0870 1433     		adds	r3, r3, #20
 13844 0872 1B68     		ldr	r3, [r3]
 13845 0874 07F11C00 		add	r0, r7, #28
 13846 0878 2246     		mov	r2, r4
 13847 087a 5049     		ldr	r1, .L662+44
 13848 087c FFF7FEFF 		bl	sprintf
2038:..\src/command_processing.c ****                 strcat(info_string, str);
 13849              		.loc 1 2038 0
 13850 0880 07F11C03 		add	r3, r7, #28
 13851 0884 1946     		mov	r1, r3
 13852 0886 7869     		ldr	r0, [r7, #20]
 13853 0888 FFF7FEFF 		bl	strcat
2039:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 13854              		.loc 1 2039 0
 13855 088c 7869     		ldr	r0, [r7, #20]
 13856 088e FFF7FEFF 		bl	strlen
 13857 0892 0346     		mov	r3, r0
 13858 0894 1A46     		mov	r2, r3
 13859 0896 7B69     		ldr	r3, [r7, #20]
 13860 0898 1344     		add	r3, r3, r2
 13861 089a 404A     		ldr	r2, .L662+12
 13862 089c 1188     		ldrh	r1, [r2]	@ unaligned
 13863 089e 9278     		ldrb	r2, [r2, #2]
 13864 08a0 1980     		strh	r1, [r3]	@ unaligned
 13865 08a2 9A70     		strb	r2, [r3, #2]
 13866              	.L592:
2040:..\src/command_processing.c ****             }
2041:..\src/command_processing.c ****             
2042:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 13867              		.loc 1 2042 0
 13868 08a4 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13869 08a8 5A1C     		adds	r2, r3, #1
 13870 08aa 07F11C03 		add	r3, r7, #28
 13871 08ae 4449     		ldr	r1, .L662+48
 13872 08b0 1846     		mov	r0, r3
 13873 08b2 FFF7FEFF 		bl	sprintf
2043:..\src/command_processing.c ****             strcat(info_string, str);
 13874              		.loc 1 2043 0
 13875 08b6 07F11C03 		add	r3, r7, #28
 13876 08ba 1946     		mov	r1, r3
 13877 08bc 7869     		ldr	r0, [r7, #20]
 13878 08be FFF7FEFF 		bl	strcat
2044:..\src/command_processing.c **** 
2045:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 13879              		.loc 1 2045 0
 13880 08c2 7869     		ldr	r0, [r7, #20]
 13881 08c4 FFF7FEFF 		bl	strlen
 13882 08c8 0346     		mov	r3, r0
 13883 08ca 1A46     		mov	r2, r3
 13884 08cc 7B69     		ldr	r3, [r7, #20]
 13885 08ce 1344     		add	r3, r3, r2
 13886 08d0 3C4A     		ldr	r2, .L662+52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 319


 13887 08d2 1D46     		mov	r5, r3
 13888 08d4 1446     		mov	r4, r2
 13889 08d6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13890 08d8 2860     		str	r0, [r5]	@ unaligned
 13891 08da 6960     		str	r1, [r5, #4]	@ unaligned
 13892 08dc AA60     		str	r2, [r5, #8]	@ unaligned
 13893 08de EB60     		str	r3, [r5, #12]	@ unaligned
 13894 08e0 2378     		ldrb	r3, [r4]
 13895 08e2 2B74     		strb	r3, [r5, #16]
2046:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 13896              		.loc 1 2046 0
 13897 08e4 D7F88430 		ldr	r3, [r7, #132]
 13898 08e8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13899 08ec 032B     		cmp	r3, #3
 13900 08ee 73D0     		beq	.L593
2047:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 13901              		.loc 1 2047 0
 13902 08f0 D7F88430 		ldr	r3, [r7, #132]
 13903 08f4 1B68     		ldr	r3, [r3]
 13904 08f6 1846     		mov	r0, r3
 13905 08f8 FFF7FEFF 		bl	__aeabi_i2d
 13906 08fc 4FF00002 		mov	r2, #0
 13907 0900 314B     		ldr	r3, .L662+56
 13908 0902 FFF7FEFF 		bl	__aeabi_ddiv
 13909 0906 0346     		mov	r3, r0
 13910 0908 0C46     		mov	r4, r1
 13911 090a 07F11C00 		add	r0, r7, #28
 13912 090e 1A46     		mov	r2, r3
 13913 0910 2346     		mov	r3, r4
 13914 0912 2E49     		ldr	r1, .L662+60
 13915 0914 FFF7FEFF 		bl	sprintf
2048:..\src/command_processing.c ****                 strcat(info_string, str);
 13916              		.loc 1 2048 0
 13917 0918 07F11C03 		add	r3, r7, #28
 13918 091c 1946     		mov	r1, r3
 13919 091e 7869     		ldr	r0, [r7, #20]
 13920 0920 FFF7FEFF 		bl	strcat
2049:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 13921              		.loc 1 2049 0
 13922 0924 D7F88430 		ldr	r3, [r7, #132]
 13923 0928 5B68     		ldr	r3, [r3, #4]
 13924 092a 1846     		mov	r0, r3
 13925 092c FFF7FEFF 		bl	__aeabi_i2d
 13926 0930 4FF00002 		mov	r2, #0
 13927 0934 244B     		ldr	r3, .L662+56
 13928 0936 FFF7FEFF 		bl	__aeabi_ddiv
 13929 093a 0346     		mov	r3, r0
 13930 093c 0C46     		mov	r4, r1
 13931 093e 07F11C00 		add	r0, r7, #28
 13932 0942 1A46     		mov	r2, r3
 13933 0944 2346     		mov	r3, r4
 13934 0946 2249     		ldr	r1, .L662+64
 13935 0948 FFF7FEFF 		bl	sprintf
2050:..\src/command_processing.c ****                 strcat(info_string, str);
 13936              		.loc 1 2050 0
 13937 094c 07F11C03 		add	r3, r7, #28
 13938 0950 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 320


 13939 0952 7869     		ldr	r0, [r7, #20]
 13940 0954 FFF7FEFF 		bl	strcat
2051:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 13941              		.loc 1 2051 0
 13942 0958 D7F88430 		ldr	r3, [r7, #132]
 13943 095c 9B68     		ldr	r3, [r3, #8]
 13944 095e 1846     		mov	r0, r3
 13945 0960 FFF7FEFF 		bl	__aeabi_i2d
 13946 0964 4FF00002 		mov	r2, #0
 13947 0968 174B     		ldr	r3, .L662+56
 13948 096a FFF7FEFF 		bl	__aeabi_ddiv
 13949 096e 0346     		mov	r3, r0
 13950 0970 0C46     		mov	r4, r1
 13951 0972 07F11C00 		add	r0, r7, #28
 13952 0976 1A46     		mov	r2, r3
 13953 0978 2346     		mov	r3, r4
 13954 097a 1649     		ldr	r1, .L662+68
 13955 097c FFF7FEFF 		bl	sprintf
2052:..\src/command_processing.c ****                 strcat(info_string, str);
 13956              		.loc 1 2052 0
 13957 0980 07F11C03 		add	r3, r7, #28
 13958 0984 1946     		mov	r1, r3
 13959 0986 7869     		ldr	r0, [r7, #20]
 13960 0988 FFF7FEFF 		bl	strcat
 13961 098c 72E0     		b	.L594
 13962              	.L663:
 13963 098e 00BF     		.align	2
 13964              	.L662:
 13965 0990 00000000 		.word	g_meas
 13966 0994 8C130000 		.word	.LC183
 13967 0998 90130000 		.word	.LC184
 13968 099c 58110000 		.word	.LC152
 13969 09a0 00000000 		.word	g_adc_measOld
 13970 09a4 94130000 		.word	.LC185
 13971 09a8 00000000 		.word	dev_tension
 13972 09ac B4130000 		.word	.LC186
 13973 09b0 00000000 		.word	pow_tension
 13974 09b4 D4130000 		.word	.LC187
 13975 09b8 FC130000 		.word	.LC188
 13976 09bc 14140000 		.word	.LC189
 13977 09c0 3C140000 		.word	.LC190
 13978 09c4 58140000 		.word	.LC191
 13979 09c8 0000F040 		.word	1089470464
 13980 09cc 6C140000 		.word	.LC192
 13981 09d0 78140000 		.word	.LC193
 13982 09d4 84140000 		.word	.LC194
 13983              	.L593:
2053:..\src/command_processing.c ****             }
2054:..\src/command_processing.c ****             else { 
2055:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 13984              		.loc 1 2055 0
 13985 09d8 D7F88430 		ldr	r3, [r7, #132]
 13986 09dc 9B69     		ldr	r3, [r3, #24]
 13987 09de 1846     		mov	r0, r3
 13988 09e0 FFF7FEFF 		bl	__aeabi_i2d
 13989 09e4 4FF00002 		mov	r2, #0
 13990 09e8 CE4B     		ldr	r3, .L664
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 321


 13991 09ea FFF7FEFF 		bl	__aeabi_ddiv
 13992 09ee 0346     		mov	r3, r0
 13993 09f0 0C46     		mov	r4, r1
 13994 09f2 07F11C00 		add	r0, r7, #28
 13995 09f6 1A46     		mov	r2, r3
 13996 09f8 2346     		mov	r3, r4
 13997 09fa CB49     		ldr	r1, .L664+4
 13998 09fc FFF7FEFF 		bl	sprintf
2056:..\src/command_processing.c ****                 strcat(info_string, str);
 13999              		.loc 1 2056 0
 14000 0a00 07F11C03 		add	r3, r7, #28
 14001 0a04 1946     		mov	r1, r3
 14002 0a06 7869     		ldr	r0, [r7, #20]
 14003 0a08 FFF7FEFF 		bl	strcat
2057:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 14004              		.loc 1 2057 0
 14005 0a0c D7F88430 		ldr	r3, [r7, #132]
 14006 0a10 DB69     		ldr	r3, [r3, #28]
 14007 0a12 1846     		mov	r0, r3
 14008 0a14 FFF7FEFF 		bl	__aeabi_i2d
 14009 0a18 4FF00002 		mov	r2, #0
 14010 0a1c C14B     		ldr	r3, .L664
 14011 0a1e FFF7FEFF 		bl	__aeabi_ddiv
 14012 0a22 0346     		mov	r3, r0
 14013 0a24 0C46     		mov	r4, r1
 14014 0a26 07F11C00 		add	r0, r7, #28
 14015 0a2a 1A46     		mov	r2, r3
 14016 0a2c 2346     		mov	r3, r4
 14017 0a2e BF49     		ldr	r1, .L664+8
 14018 0a30 FFF7FEFF 		bl	sprintf
2058:..\src/command_processing.c ****                 strcat(info_string, str);
 14019              		.loc 1 2058 0
 14020 0a34 07F11C03 		add	r3, r7, #28
 14021 0a38 1946     		mov	r1, r3
 14022 0a3a 7869     		ldr	r0, [r7, #20]
 14023 0a3c FFF7FEFF 		bl	strcat
2059:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 14024              		.loc 1 2059 0
 14025 0a40 D7F88430 		ldr	r3, [r7, #132]
 14026 0a44 1B6A     		ldr	r3, [r3, #32]
 14027 0a46 1846     		mov	r0, r3
 14028 0a48 FFF7FEFF 		bl	__aeabi_i2d
 14029 0a4c 4FF00002 		mov	r2, #0
 14030 0a50 B44B     		ldr	r3, .L664
 14031 0a52 FFF7FEFF 		bl	__aeabi_ddiv
 14032 0a56 0346     		mov	r3, r0
 14033 0a58 0C46     		mov	r4, r1
 14034 0a5a 07F11C00 		add	r0, r7, #28
 14035 0a5e 1A46     		mov	r2, r3
 14036 0a60 2346     		mov	r3, r4
 14037 0a62 B349     		ldr	r1, .L664+12
 14038 0a64 FFF7FEFF 		bl	sprintf
2060:..\src/command_processing.c ****                 strcat(info_string, str);
 14039              		.loc 1 2060 0
 14040 0a68 07F11C03 		add	r3, r7, #28
 14041 0a6c 1946     		mov	r1, r3
 14042 0a6e 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 322


 14043 0a70 FFF7FEFF 		bl	strcat
 14044              	.L594:
2061:..\src/command_processing.c ****             }
2062:..\src/command_processing.c **** 
2063:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 14045              		.loc 1 2063 0
 14046 0a74 7869     		ldr	r0, [r7, #20]
 14047 0a76 FFF7FEFF 		bl	strlen
 14048 0a7a 0346     		mov	r3, r0
 14049 0a7c 1A46     		mov	r2, r3
 14050 0a7e 7B69     		ldr	r3, [r7, #20]
 14051 0a80 1344     		add	r3, r3, r2
 14052 0a82 AC4A     		ldr	r2, .L664+16
 14053 0a84 1D46     		mov	r5, r3
 14054 0a86 1446     		mov	r4, r2
 14055 0a88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14056 0a8a 2860     		str	r0, [r5]	@ unaligned
 14057 0a8c 6960     		str	r1, [r5, #4]	@ unaligned
 14058 0a8e AA60     		str	r2, [r5, #8]	@ unaligned
 14059 0a90 EB60     		str	r3, [r5, #12]	@ unaligned
 14060 0a92 03CC     		ldmia	r4!, {r0, r1}
 14061 0a94 2861     		str	r0, [r5, #16]	@ unaligned
 14062 0a96 6961     		str	r1, [r5, #20]	@ unaligned
 14063 0a98 2378     		ldrb	r3, [r4]
 14064 0a9a 2B76     		strb	r3, [r5, #24]
2064:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14065              		.loc 1 2064 0
 14066 0a9c D7F88430 		ldr	r3, [r7, #132]
 14067 0aa0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14068 0aa4 032B     		cmp	r3, #3
 14069 0aa6 4ED0     		beq	.L595
2065:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 14070              		.loc 1 2065 0
 14071 0aa8 D7F88430 		ldr	r3, [r7, #132]
 14072 0aac DB68     		ldr	r3, [r3, #12]
 14073 0aae 1846     		mov	r0, r3
 14074 0ab0 FFF7FEFF 		bl	__aeabi_i2d
 14075 0ab4 4FF00002 		mov	r2, #0
 14076 0ab8 9A4B     		ldr	r3, .L664
 14077 0aba FFF7FEFF 		bl	__aeabi_ddiv
 14078 0abe 0346     		mov	r3, r0
 14079 0ac0 0C46     		mov	r4, r1
 14080 0ac2 07F11C00 		add	r0, r7, #28
 14081 0ac6 1A46     		mov	r2, r3
 14082 0ac8 2346     		mov	r3, r4
 14083 0aca 9749     		ldr	r1, .L664+4
 14084 0acc FFF7FEFF 		bl	sprintf
2066:..\src/command_processing.c ****                 strcat(info_string, str);
 14085              		.loc 1 2066 0
 14086 0ad0 07F11C03 		add	r3, r7, #28
 14087 0ad4 1946     		mov	r1, r3
 14088 0ad6 7869     		ldr	r0, [r7, #20]
 14089 0ad8 FFF7FEFF 		bl	strcat
2067:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 14090              		.loc 1 2067 0
 14091 0adc D7F88430 		ldr	r3, [r7, #132]
 14092 0ae0 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 323


 14093 0ae2 1846     		mov	r0, r3
 14094 0ae4 FFF7FEFF 		bl	__aeabi_i2d
 14095 0ae8 4FF00002 		mov	r2, #0
 14096 0aec 8D4B     		ldr	r3, .L664
 14097 0aee FFF7FEFF 		bl	__aeabi_ddiv
 14098 0af2 0346     		mov	r3, r0
 14099 0af4 0C46     		mov	r4, r1
 14100 0af6 07F11C00 		add	r0, r7, #28
 14101 0afa 1A46     		mov	r2, r3
 14102 0afc 2346     		mov	r3, r4
 14103 0afe 8B49     		ldr	r1, .L664+8
 14104 0b00 FFF7FEFF 		bl	sprintf
2068:..\src/command_processing.c ****                 strcat(info_string, str);
 14105              		.loc 1 2068 0
 14106 0b04 07F11C03 		add	r3, r7, #28
 14107 0b08 1946     		mov	r1, r3
 14108 0b0a 7869     		ldr	r0, [r7, #20]
 14109 0b0c FFF7FEFF 		bl	strcat
2069:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 14110              		.loc 1 2069 0
 14111 0b10 D7F88430 		ldr	r3, [r7, #132]
 14112 0b14 5B69     		ldr	r3, [r3, #20]
 14113 0b16 1846     		mov	r0, r3
 14114 0b18 FFF7FEFF 		bl	__aeabi_i2d
 14115 0b1c 4FF00002 		mov	r2, #0
 14116 0b20 804B     		ldr	r3, .L664
 14117 0b22 FFF7FEFF 		bl	__aeabi_ddiv
 14118 0b26 0346     		mov	r3, r0
 14119 0b28 0C46     		mov	r4, r1
 14120 0b2a 07F11C00 		add	r0, r7, #28
 14121 0b2e 1A46     		mov	r2, r3
 14122 0b30 2346     		mov	r3, r4
 14123 0b32 7F49     		ldr	r1, .L664+12
 14124 0b34 FFF7FEFF 		bl	sprintf
2070:..\src/command_processing.c ****                 strcat(info_string, str);
 14125              		.loc 1 2070 0
 14126 0b38 07F11C03 		add	r3, r7, #28
 14127 0b3c 1946     		mov	r1, r3
 14128 0b3e 7869     		ldr	r0, [r7, #20]
 14129 0b40 FFF7FEFF 		bl	strcat
 14130 0b44 4DE0     		b	.L596
 14131              	.L595:
2071:..\src/command_processing.c **** 
2072:..\src/command_processing.c ****             }
2073:..\src/command_processing.c ****             else {
2074:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 14132              		.loc 1 2074 0
 14133 0b46 D7F88430 		ldr	r3, [r7, #132]
 14134 0b4a 5B6A     		ldr	r3, [r3, #36]
 14135 0b4c 1846     		mov	r0, r3
 14136 0b4e FFF7FEFF 		bl	__aeabi_i2d
 14137 0b52 4FF00002 		mov	r2, #0
 14138 0b56 734B     		ldr	r3, .L664
 14139 0b58 FFF7FEFF 		bl	__aeabi_ddiv
 14140 0b5c 0346     		mov	r3, r0
 14141 0b5e 0C46     		mov	r4, r1
 14142 0b60 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 324


 14143 0b64 1A46     		mov	r2, r3
 14144 0b66 2346     		mov	r3, r4
 14145 0b68 6F49     		ldr	r1, .L664+4
 14146 0b6a FFF7FEFF 		bl	sprintf
2075:..\src/command_processing.c ****                 strcat(info_string, str);
 14147              		.loc 1 2075 0
 14148 0b6e 07F11C03 		add	r3, r7, #28
 14149 0b72 1946     		mov	r1, r3
 14150 0b74 7869     		ldr	r0, [r7, #20]
 14151 0b76 FFF7FEFF 		bl	strcat
2076:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 14152              		.loc 1 2076 0
 14153 0b7a D7F88430 		ldr	r3, [r7, #132]
 14154 0b7e 9B6A     		ldr	r3, [r3, #40]
 14155 0b80 1846     		mov	r0, r3
 14156 0b82 FFF7FEFF 		bl	__aeabi_i2d
 14157 0b86 4FF00002 		mov	r2, #0
 14158 0b8a 664B     		ldr	r3, .L664
 14159 0b8c FFF7FEFF 		bl	__aeabi_ddiv
 14160 0b90 0346     		mov	r3, r0
 14161 0b92 0C46     		mov	r4, r1
 14162 0b94 07F11C00 		add	r0, r7, #28
 14163 0b98 1A46     		mov	r2, r3
 14164 0b9a 2346     		mov	r3, r4
 14165 0b9c 6349     		ldr	r1, .L664+8
 14166 0b9e FFF7FEFF 		bl	sprintf
2077:..\src/command_processing.c ****                 strcat(info_string, str);
 14167              		.loc 1 2077 0
 14168 0ba2 07F11C03 		add	r3, r7, #28
 14169 0ba6 1946     		mov	r1, r3
 14170 0ba8 7869     		ldr	r0, [r7, #20]
 14171 0baa FFF7FEFF 		bl	strcat
2078:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 14172              		.loc 1 2078 0
 14173 0bae D7F88430 		ldr	r3, [r7, #132]
 14174 0bb2 DB6A     		ldr	r3, [r3, #44]
 14175 0bb4 1846     		mov	r0, r3
 14176 0bb6 FFF7FEFF 		bl	__aeabi_i2d
 14177 0bba 4FF00002 		mov	r2, #0
 14178 0bbe 594B     		ldr	r3, .L664
 14179 0bc0 FFF7FEFF 		bl	__aeabi_ddiv
 14180 0bc4 0346     		mov	r3, r0
 14181 0bc6 0C46     		mov	r4, r1
 14182 0bc8 07F11C00 		add	r0, r7, #28
 14183 0bcc 1A46     		mov	r2, r3
 14184 0bce 2346     		mov	r3, r4
 14185 0bd0 5749     		ldr	r1, .L664+12
 14186 0bd2 FFF7FEFF 		bl	sprintf
2079:..\src/command_processing.c ****                 strcat(info_string, str);
 14187              		.loc 1 2079 0
 14188 0bd6 07F11C03 		add	r3, r7, #28
 14189 0bda 1946     		mov	r1, r3
 14190 0bdc 7869     		ldr	r0, [r7, #20]
 14191 0bde FFF7FEFF 		bl	strcat
 14192              	.L596:
2080:..\src/command_processing.c ****             }
2081:..\src/command_processing.c ****             if (MOT->activ == 0x01)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 325


 14193              		.loc 1 2081 0
 14194 0be2 D7F88430 		ldr	r3, [r7, #132]
 14195 0be6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 14196 0bea 012B     		cmp	r3, #1
 14197 0bec 14D1     		bne	.L597
2082:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 14198              		.loc 1 2082 0
 14199 0bee 7869     		ldr	r0, [r7, #20]
 14200 0bf0 FFF7FEFF 		bl	strlen
 14201 0bf4 0346     		mov	r3, r0
 14202 0bf6 1A46     		mov	r2, r3
 14203 0bf8 7B69     		ldr	r3, [r7, #20]
 14204 0bfa 1344     		add	r3, r3, r2
 14205 0bfc 4E4A     		ldr	r2, .L664+20
 14206 0bfe 1D46     		mov	r5, r3
 14207 0c00 1446     		mov	r4, r2
 14208 0c02 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14209 0c04 2860     		str	r0, [r5]	@ unaligned
 14210 0c06 6960     		str	r1, [r5, #4]	@ unaligned
 14211 0c08 AA60     		str	r2, [r5, #8]	@ unaligned
 14212 0c0a EB60     		str	r3, [r5, #12]	@ unaligned
 14213 0c0c 03CC     		ldmia	r4!, {r0, r1}
 14214 0c0e 2861     		str	r0, [r5, #16]	@ unaligned
 14215 0c10 6961     		str	r1, [r5, #20]	@ unaligned
 14216 0c12 2388     		ldrh	r3, [r4]	@ unaligned
 14217 0c14 2B83     		strh	r3, [r5, #24]	@ unaligned
 14218 0c16 13E0     		b	.L598
 14219              	.L597:
2083:..\src/command_processing.c ****             else
2084:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 14220              		.loc 1 2084 0
 14221 0c18 7869     		ldr	r0, [r7, #20]
 14222 0c1a FFF7FEFF 		bl	strlen
 14223 0c1e 0346     		mov	r3, r0
 14224 0c20 1A46     		mov	r2, r3
 14225 0c22 7B69     		ldr	r3, [r7, #20]
 14226 0c24 1344     		add	r3, r3, r2
 14227 0c26 454A     		ldr	r2, .L664+24
 14228 0c28 1D46     		mov	r5, r3
 14229 0c2a 1446     		mov	r4, r2
 14230 0c2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14231 0c2e 2860     		str	r0, [r5]	@ unaligned
 14232 0c30 6960     		str	r1, [r5, #4]	@ unaligned
 14233 0c32 AA60     		str	r2, [r5, #8]	@ unaligned
 14234 0c34 EB60     		str	r3, [r5, #12]	@ unaligned
 14235 0c36 03CC     		ldmia	r4!, {r0, r1}
 14236 0c38 2861     		str	r0, [r5, #16]	@ unaligned
 14237 0c3a 6961     		str	r1, [r5, #20]	@ unaligned
 14238 0c3c 2378     		ldrb	r3, [r4]
 14239 0c3e 2B76     		strb	r3, [r5, #24]
 14240              	.L598:
2085:..\src/command_processing.c **** 
2086:..\src/command_processing.c ****             switch(MOT->input_mode) {
 14241              		.loc 1 2086 0
 14242 0c40 D7F88430 		ldr	r3, [r7, #132]
 14243 0c44 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 14244 0c48 072B     		cmp	r3, #7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 326


 14245 0c4a 00F2EA80 		bhi	.L599
 14246 0c4e 01A2     		adr	r2, .L601
 14247 0c50 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14248              		.p2align 2
 14249              	.L601:
 14250 0c54 750C0000 		.word	.L600+1
 14251 0c58 990C0000 		.word	.L602+1
 14252 0c5c C10C0000 		.word	.L603+1
 14253 0c60 F30C0000 		.word	.L604+1
 14254 0c64 510D0000 		.word	.L605+1
 14255 0c68 7F0D0000 		.word	.L606+1
 14256 0c6c AF0D0000 		.word	.L607+1
 14257 0c70 DD0D0000 		.word	.L608+1
 14258              		.p2align 1
 14259              	.L600:
2087:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2088:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 14260              		.loc 1 2088 0
 14261 0c74 7869     		ldr	r0, [r7, #20]
 14262 0c76 FFF7FEFF 		bl	strlen
 14263 0c7a 0346     		mov	r3, r0
 14264 0c7c 1A46     		mov	r2, r3
 14265 0c7e 7B69     		ldr	r3, [r7, #20]
 14266 0c80 1344     		add	r3, r3, r2
 14267 0c82 2F4A     		ldr	r2, .L664+28
 14268 0c84 1D46     		mov	r5, r3
 14269 0c86 1446     		mov	r4, r2
 14270 0c88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14271 0c8a 2860     		str	r0, [r5]	@ unaligned
 14272 0c8c 6960     		str	r1, [r5, #4]	@ unaligned
 14273 0c8e AA60     		str	r2, [r5, #8]	@ unaligned
 14274 0c90 EB60     		str	r3, [r5, #12]	@ unaligned
 14275 0c92 2388     		ldrh	r3, [r4]	@ unaligned
 14276 0c94 2B82     		strh	r3, [r5, #16]	@ unaligned
2089:..\src/command_processing.c ****                     break;
 14277              		.loc 1 2089 0
 14278 0c96 C4E0     		b	.L599
 14279              	.L602:
2090:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2091:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 14280              		.loc 1 2091 0
 14281 0c98 7869     		ldr	r0, [r7, #20]
 14282 0c9a FFF7FEFF 		bl	strlen
 14283 0c9e 0346     		mov	r3, r0
 14284 0ca0 1A46     		mov	r2, r3
 14285 0ca2 7B69     		ldr	r3, [r7, #20]
 14286 0ca4 1344     		add	r3, r3, r2
 14287 0ca6 274A     		ldr	r2, .L664+32
 14288 0ca8 1D46     		mov	r5, r3
 14289 0caa 1446     		mov	r4, r2
 14290 0cac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14291 0cae 2860     		str	r0, [r5]	@ unaligned
 14292 0cb0 6960     		str	r1, [r5, #4]	@ unaligned
 14293 0cb2 AA60     		str	r2, [r5, #8]	@ unaligned
 14294 0cb4 EB60     		str	r3, [r5, #12]	@ unaligned
 14295 0cb6 2068     		ldr	r0, [r4]	@ unaligned
 14296 0cb8 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 327


 14297 0cba 2379     		ldrb	r3, [r4, #4]
 14298 0cbc 2B75     		strb	r3, [r5, #20]
2092:..\src/command_processing.c ****                     break;
 14299              		.loc 1 2092 0
 14300 0cbe B0E0     		b	.L599
 14301              	.L603:
2093:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2094:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 14302              		.loc 1 2094 0
 14303 0cc0 7869     		ldr	r0, [r7, #20]
 14304 0cc2 FFF7FEFF 		bl	strlen
 14305 0cc6 0346     		mov	r3, r0
 14306 0cc8 1A46     		mov	r2, r3
 14307 0cca 7B69     		ldr	r3, [r7, #20]
 14308 0ccc 1344     		add	r3, r3, r2
 14309 0cce 1E4A     		ldr	r2, .L664+36
 14310 0cd0 1D46     		mov	r5, r3
 14311 0cd2 1446     		mov	r4, r2
 14312 0cd4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14313 0cd6 2860     		str	r0, [r5]	@ unaligned
 14314 0cd8 6960     		str	r1, [r5, #4]	@ unaligned
 14315 0cda AA60     		str	r2, [r5, #8]	@ unaligned
 14316 0cdc EB60     		str	r3, [r5, #12]	@ unaligned
 14317 0cde 07CC     		ldmia	r4!, {r0, r1, r2}
 14318 0ce0 2861     		str	r0, [r5, #16]	@ unaligned
 14319 0ce2 6961     		str	r1, [r5, #20]	@ unaligned
 14320 0ce4 AA61     		str	r2, [r5, #24]	@ unaligned
 14321 0ce6 2388     		ldrh	r3, [r4]	@ unaligned
 14322 0ce8 A278     		ldrb	r2, [r4, #2]
 14323 0cea AB83     		strh	r3, [r5, #28]	@ unaligned
 14324 0cec 1346     		mov	r3, r2
 14325 0cee AB77     		strb	r3, [r5, #30]
2095:..\src/command_processing.c ****                     break;
 14326              		.loc 1 2095 0
 14327 0cf0 97E0     		b	.L599
 14328              	.L604:
2096:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2097:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 14329              		.loc 1 2097 0
 14330 0cf2 7869     		ldr	r0, [r7, #20]
 14331 0cf4 FFF7FEFF 		bl	strlen
 14332 0cf8 0346     		mov	r3, r0
 14333 0cfa 1A46     		mov	r2, r3
 14334 0cfc 7B69     		ldr	r3, [r7, #20]
 14335 0cfe 1344     		add	r3, r3, r2
 14336 0d00 124A     		ldr	r2, .L664+40
 14337 0d02 1D46     		mov	r5, r3
 14338 0d04 1446     		mov	r4, r2
 14339 0d06 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14340 0d08 2860     		str	r0, [r5]	@ unaligned
 14341 0d0a 6960     		str	r1, [r5, #4]	@ unaligned
 14342 0d0c AA60     		str	r2, [r5, #8]	@ unaligned
 14343 0d0e EB60     		str	r3, [r5, #12]	@ unaligned
 14344 0d10 03CC     		ldmia	r4!, {r0, r1}
 14345 0d12 2861     		str	r0, [r5, #16]	@ unaligned
 14346 0d14 6961     		str	r1, [r5, #20]	@ unaligned
 14347 0d16 2388     		ldrh	r3, [r4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 328


 14348 0d18 A278     		ldrb	r2, [r4, #2]
 14349 0d1a 2B83     		strh	r3, [r5, #24]	@ unaligned
 14350 0d1c 1346     		mov	r3, r2
 14351 0d1e AB76     		strb	r3, [r5, #26]
2098:..\src/command_processing.c ****                     break;
 14352              		.loc 1 2098 0
 14353 0d20 7FE0     		b	.L599
 14354              	.L665:
 14355 0d22 00BF     		.align	2
 14356              	.L664:
 14357 0d24 0000F040 		.word	1089470464
 14358 0d28 6C140000 		.word	.LC192
 14359 0d2c 78140000 		.word	.LC193
 14360 0d30 84140000 		.word	.LC194
 14361 0d34 90140000 		.word	.LC195
 14362 0d38 AC140000 		.word	.LC196
 14363 0d3c C8140000 		.word	.LC197
 14364 0d40 E4140000 		.word	.LC198
 14365 0d44 F8140000 		.word	.LC199
 14366 0d48 10150000 		.word	.LC200
 14367 0d4c 30150000 		.word	.LC201
 14368              	.L605:
2099:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2100:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 14369              		.loc 1 2100 0
 14370 0d50 7869     		ldr	r0, [r7, #20]
 14371 0d52 FFF7FEFF 		bl	strlen
 14372 0d56 0346     		mov	r3, r0
 14373 0d58 1A46     		mov	r2, r3
 14374 0d5a 7B69     		ldr	r3, [r7, #20]
 14375 0d5c 1344     		add	r3, r3, r2
 14376 0d5e CF4A     		ldr	r2, .L666
 14377 0d60 1C46     		mov	r4, r3
 14378 0d62 1546     		mov	r5, r2
 14379 0d64 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14380 0d66 2060     		str	r0, [r4]	@ unaligned
 14381 0d68 6160     		str	r1, [r4, #4]	@ unaligned
 14382 0d6a A260     		str	r2, [r4, #8]	@ unaligned
 14383 0d6c E360     		str	r3, [r4, #12]	@ unaligned
 14384 0d6e 2868     		ldr	r0, [r5]	@ unaligned
 14385 0d70 2061     		str	r0, [r4, #16]	@ unaligned
 14386 0d72 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14387 0d74 AA79     		ldrb	r2, [r5, #6]
 14388 0d76 A382     		strh	r3, [r4, #20]	@ unaligned
 14389 0d78 1346     		mov	r3, r2
 14390 0d7a A375     		strb	r3, [r4, #22]
2101:..\src/command_processing.c ****                     break;
 14391              		.loc 1 2101 0
 14392 0d7c 51E0     		b	.L599
 14393              	.L606:
2102:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2103:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 14394              		.loc 1 2103 0
 14395 0d7e 7869     		ldr	r0, [r7, #20]
 14396 0d80 FFF7FEFF 		bl	strlen
 14397 0d84 0346     		mov	r3, r0
 14398 0d86 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 329


 14399 0d88 7B69     		ldr	r3, [r7, #20]
 14400 0d8a 1344     		add	r3, r3, r2
 14401 0d8c C44A     		ldr	r2, .L666+4
 14402 0d8e 1D46     		mov	r5, r3
 14403 0d90 1446     		mov	r4, r2
 14404 0d92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14405 0d94 2860     		str	r0, [r5]	@ unaligned
 14406 0d96 6960     		str	r1, [r5, #4]	@ unaligned
 14407 0d98 AA60     		str	r2, [r5, #8]	@ unaligned
 14408 0d9a EB60     		str	r3, [r5, #12]	@ unaligned
 14409 0d9c 03CC     		ldmia	r4!, {r0, r1}
 14410 0d9e 2861     		str	r0, [r5, #16]	@ unaligned
 14411 0da0 6961     		str	r1, [r5, #20]	@ unaligned
 14412 0da2 2388     		ldrh	r3, [r4]	@ unaligned
 14413 0da4 A278     		ldrb	r2, [r4, #2]
 14414 0da6 2B83     		strh	r3, [r5, #24]	@ unaligned
 14415 0da8 1346     		mov	r3, r2
 14416 0daa AB76     		strb	r3, [r5, #26]
2104:..\src/command_processing.c ****                     break;
 14417              		.loc 1 2104 0
 14418 0dac 39E0     		b	.L599
 14419              	.L607:
2105:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2106:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 14420              		.loc 1 2106 0
 14421 0dae 7869     		ldr	r0, [r7, #20]
 14422 0db0 FFF7FEFF 		bl	strlen
 14423 0db4 0346     		mov	r3, r0
 14424 0db6 1A46     		mov	r2, r3
 14425 0db8 7B69     		ldr	r3, [r7, #20]
 14426 0dba 1344     		add	r3, r3, r2
 14427 0dbc B94A     		ldr	r2, .L666+8
 14428 0dbe 1C46     		mov	r4, r3
 14429 0dc0 1546     		mov	r5, r2
 14430 0dc2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14431 0dc4 2060     		str	r0, [r4]	@ unaligned
 14432 0dc6 6160     		str	r1, [r4, #4]	@ unaligned
 14433 0dc8 A260     		str	r2, [r4, #8]	@ unaligned
 14434 0dca E360     		str	r3, [r4, #12]	@ unaligned
 14435 0dcc 2868     		ldr	r0, [r5]	@ unaligned
 14436 0dce 2061     		str	r0, [r4, #16]	@ unaligned
 14437 0dd0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14438 0dd2 AA79     		ldrb	r2, [r5, #6]
 14439 0dd4 A382     		strh	r3, [r4, #20]	@ unaligned
 14440 0dd6 1346     		mov	r3, r2
 14441 0dd8 A375     		strb	r3, [r4, #22]
2107:..\src/command_processing.c ****                     break;
 14442              		.loc 1 2107 0
 14443 0dda 22E0     		b	.L599
 14444              	.L608:
2108:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2109:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 14445              		.loc 1 2109 0
 14446 0ddc 7869     		ldr	r0, [r7, #20]
 14447 0dde FFF7FEFF 		bl	strlen
 14448 0de2 0346     		mov	r3, r0
 14449 0de4 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 330


 14450 0de6 7B69     		ldr	r3, [r7, #20]
 14451 0de8 1344     		add	r3, r3, r2
 14452 0dea AF4A     		ldr	r2, .L666+12
 14453 0dec 1546     		mov	r5, r2
 14454 0dee 9E46     		mov	lr, r3
 14455 0df0 05F1200C 		add	ip, r5, #32
 14456              	.L609:
 14457 0df4 7446     		mov	r4, lr
 14458 0df6 2E46     		mov	r6, r5
 14459 0df8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14460 0dfa 2060     		str	r0, [r4]	@ unaligned
 14461 0dfc 6160     		str	r1, [r4, #4]	@ unaligned
 14462 0dfe A260     		str	r2, [r4, #8]	@ unaligned
 14463 0e00 E360     		str	r3, [r4, #12]	@ unaligned
 14464 0e02 1035     		adds	r5, r5, #16
 14465 0e04 0EF1100E 		add	lr, lr, #16
 14466 0e08 6545     		cmp	r5, ip
 14467 0e0a F3D1     		bne	.L609
 14468 0e0c 7446     		mov	r4, lr
 14469 0e0e 2B46     		mov	r3, r5
 14470 0e10 07CB     		ldmia	r3!, {r0, r1, r2}
 14471 0e12 2060     		str	r0, [r4]	@ unaligned
 14472 0e14 6160     		str	r1, [r4, #4]	@ unaligned
 14473 0e16 A260     		str	r2, [r4, #8]	@ unaligned
 14474 0e18 1A88     		ldrh	r2, [r3]	@ unaligned
 14475 0e1a 9B78     		ldrb	r3, [r3, #2]
 14476 0e1c A281     		strh	r2, [r4, #12]	@ unaligned
 14477 0e1e A373     		strb	r3, [r4, #14]
2110:..\src/command_processing.c ****                     break;
 14478              		.loc 1 2110 0
 14479 0e20 00BF     		nop
 14480              	.L599:
2111:..\src/command_processing.c ****             }
2112:..\src/command_processing.c **** 
2113:..\src/command_processing.c ****             switch(MOT->control_mode) {
 14481              		.loc 1 2113 0
 14482 0e22 D7F88430 		ldr	r3, [r7, #132]
 14483 0e26 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14484 0e2a 032B     		cmp	r3, #3
 14485 0e2c 63D8     		bhi	.L657
 14486 0e2e 01A2     		adr	r2, .L612
 14487 0e30 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14488              		.p2align 2
 14489              	.L612:
 14490 0e34 450E0000 		.word	.L611+1
 14491 0e38 6F0E0000 		.word	.L613+1
 14492 0e3c 930E0000 		.word	.L614+1
 14493 0e40 B90E0000 		.word	.L615+1
 14494              		.p2align 1
 14495              	.L611:
2114:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2115:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 14496              		.loc 1 2115 0
 14497 0e44 7869     		ldr	r0, [r7, #20]
 14498 0e46 FFF7FEFF 		bl	strlen
 14499 0e4a 0346     		mov	r3, r0
 14500 0e4c 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 331


 14501 0e4e 7B69     		ldr	r3, [r7, #20]
 14502 0e50 1344     		add	r3, r3, r2
 14503 0e52 964A     		ldr	r2, .L666+16
 14504 0e54 1D46     		mov	r5, r3
 14505 0e56 1446     		mov	r4, r2
 14506 0e58 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14507 0e5a 2860     		str	r0, [r5]	@ unaligned
 14508 0e5c 6960     		str	r1, [r5, #4]	@ unaligned
 14509 0e5e AA60     		str	r2, [r5, #8]	@ unaligned
 14510 0e60 EB60     		str	r3, [r5, #12]	@ unaligned
 14511 0e62 03CC     		ldmia	r4!, {r0, r1}
 14512 0e64 2861     		str	r0, [r5, #16]	@ unaligned
 14513 0e66 6961     		str	r1, [r5, #20]	@ unaligned
 14514 0e68 2378     		ldrb	r3, [r4]
 14515 0e6a 2B76     		strb	r3, [r5, #24]
2116:..\src/command_processing.c ****                     break;
 14516              		.loc 1 2116 0
 14517 0e6c 44E0     		b	.L616
 14518              	.L613:
2117:..\src/command_processing.c ****                 case CONTROL_PWM:
2118:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 14519              		.loc 1 2118 0
 14520 0e6e 7869     		ldr	r0, [r7, #20]
 14521 0e70 FFF7FEFF 		bl	strlen
 14522 0e74 0346     		mov	r3, r0
 14523 0e76 1A46     		mov	r2, r3
 14524 0e78 7B69     		ldr	r3, [r7, #20]
 14525 0e7a 1344     		add	r3, r3, r2
 14526 0e7c 8C4A     		ldr	r2, .L666+20
 14527 0e7e 1D46     		mov	r5, r3
 14528 0e80 1446     		mov	r4, r2
 14529 0e82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14530 0e84 2860     		str	r0, [r5]	@ unaligned
 14531 0e86 6960     		str	r1, [r5, #4]	@ unaligned
 14532 0e88 AA60     		str	r2, [r5, #8]	@ unaligned
 14533 0e8a EB60     		str	r3, [r5, #12]	@ unaligned
 14534 0e8c 2068     		ldr	r0, [r4]	@ unaligned
 14535 0e8e 2861     		str	r0, [r5, #16]	@ unaligned
2119:..\src/command_processing.c ****                     break;
 14536              		.loc 1 2119 0
 14537 0e90 32E0     		b	.L616
 14538              	.L614:
2120:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2121:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 14539              		.loc 1 2121 0
 14540 0e92 7869     		ldr	r0, [r7, #20]
 14541 0e94 FFF7FEFF 		bl	strlen
 14542 0e98 0346     		mov	r3, r0
 14543 0e9a 1A46     		mov	r2, r3
 14544 0e9c 7B69     		ldr	r3, [r7, #20]
 14545 0e9e 1344     		add	r3, r3, r2
 14546 0ea0 844A     		ldr	r2, .L666+24
 14547 0ea2 1D46     		mov	r5, r3
 14548 0ea4 1446     		mov	r4, r2
 14549 0ea6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14550 0ea8 2860     		str	r0, [r5]	@ unaligned
 14551 0eaa 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 332


 14552 0eac AA60     		str	r2, [r5, #8]	@ unaligned
 14553 0eae EB60     		str	r3, [r5, #12]	@ unaligned
 14554 0eb0 03CC     		ldmia	r4!, {r0, r1}
 14555 0eb2 2861     		str	r0, [r5, #16]	@ unaligned
 14556 0eb4 6961     		str	r1, [r5, #20]	@ unaligned
2122:..\src/command_processing.c ****                     break;
 14557              		.loc 1 2122 0
 14558 0eb6 1FE0     		b	.L616
 14559              	.L615:
2123:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2124:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 14560              		.loc 1 2124 0
 14561 0eb8 7869     		ldr	r0, [r7, #20]
 14562 0eba FFF7FEFF 		bl	strlen
 14563 0ebe 0346     		mov	r3, r0
 14564 0ec0 1A46     		mov	r2, r3
 14565 0ec2 7B69     		ldr	r3, [r7, #20]
 14566 0ec4 1344     		add	r3, r3, r2
 14567 0ec6 7C4A     		ldr	r2, .L666+28
 14568 0ec8 1446     		mov	r4, r2
 14569 0eca 9E46     		mov	lr, r3
 14570 0ecc 04F1200C 		add	ip, r4, #32
 14571              	.L617:
 14572 0ed0 7546     		mov	r5, lr
 14573 0ed2 2646     		mov	r6, r4
 14574 0ed4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14575 0ed6 2860     		str	r0, [r5]	@ unaligned
 14576 0ed8 6960     		str	r1, [r5, #4]	@ unaligned
 14577 0eda AA60     		str	r2, [r5, #8]	@ unaligned
 14578 0edc EB60     		str	r3, [r5, #12]	@ unaligned
 14579 0ede 1034     		adds	r4, r4, #16
 14580 0ee0 0EF1100E 		add	lr, lr, #16
 14581 0ee4 6445     		cmp	r4, ip
 14582 0ee6 F3D1     		bne	.L617
 14583 0ee8 7346     		mov	r3, lr
 14584 0eea 2246     		mov	r2, r4
 14585 0eec 1068     		ldr	r0, [r2]	@ unaligned
 14586 0eee 1860     		str	r0, [r3]	@ unaligned
 14587 0ef0 1279     		ldrb	r2, [r2, #4]
 14588 0ef2 1A71     		strb	r2, [r3, #4]
2125:..\src/command_processing.c ****                     break;
 14589              		.loc 1 2125 0
 14590 0ef4 00E0     		b	.L616
 14591              	.L657:
2126:..\src/command_processing.c ****                 default:
2127:..\src/command_processing.c ****                     break;
 14592              		.loc 1 2127 0
 14593 0ef6 00BF     		nop
 14594              	.L616:
2128:..\src/command_processing.c ****             }
2129:..\src/command_processing.c **** 
2130:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 14595              		.loc 1 2130 0
 14596 0ef8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14597 0efc D7F88C10 		ldr	r1, [r7, #140]
 14598 0f00 1346     		mov	r3, r2
 14599 0f02 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 333


 14600 0f04 1344     		add	r3, r3, r2
 14601 0f06 1B01     		lsls	r3, r3, #4
 14602 0f08 0B44     		add	r3, r3, r1
 14603 0f0a 03F5D873 		add	r3, r3, #432
 14604 0f0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14605 0f10 002B     		cmp	r3, #0
 14606 0f12 1CD0     		beq	.L618
2131:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 14607              		.loc 1 2131 0
 14608 0f14 7869     		ldr	r0, [r7, #20]
 14609 0f16 FFF7FEFF 		bl	strlen
 14610 0f1a 0346     		mov	r3, r0
 14611 0f1c 1A46     		mov	r2, r3
 14612 0f1e 7B69     		ldr	r3, [r7, #20]
 14613 0f20 1344     		add	r3, r3, r2
 14614 0f22 664A     		ldr	r2, .L666+32
 14615 0f24 1446     		mov	r4, r2
 14616 0f26 9E46     		mov	lr, r3
 14617 0f28 04F1200C 		add	ip, r4, #32
 14618              	.L619:
 14619 0f2c 7546     		mov	r5, lr
 14620 0f2e 2646     		mov	r6, r4
 14621 0f30 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14622 0f32 2860     		str	r0, [r5]	@ unaligned
 14623 0f34 6960     		str	r1, [r5, #4]	@ unaligned
 14624 0f36 AA60     		str	r2, [r5, #8]	@ unaligned
 14625 0f38 EB60     		str	r3, [r5, #12]	@ unaligned
 14626 0f3a 1034     		adds	r4, r4, #16
 14627 0f3c 0EF1100E 		add	lr, lr, #16
 14628 0f40 6445     		cmp	r4, ip
 14629 0f42 F3D1     		bne	.L619
 14630 0f44 7346     		mov	r3, lr
 14631 0f46 2246     		mov	r2, r4
 14632 0f48 1278     		ldrb	r2, [r2]
 14633 0f4a 1A70     		strb	r2, [r3]
 14634 0f4c 13E0     		b	.L620
 14635              	.L618:
2132:..\src/command_processing.c ****             else
2133:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 14636              		.loc 1 2133 0
 14637 0f4e 7869     		ldr	r0, [r7, #20]
 14638 0f50 FFF7FEFF 		bl	strlen
 14639 0f54 0346     		mov	r3, r0
 14640 0f56 1A46     		mov	r2, r3
 14641 0f58 7B69     		ldr	r3, [r7, #20]
 14642 0f5a 1344     		add	r3, r3, r2
 14643 0f5c 584A     		ldr	r2, .L666+36
 14644 0f5e 1C46     		mov	r4, r3
 14645 0f60 1546     		mov	r5, r2
 14646 0f62 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14647 0f64 2060     		str	r0, [r4]	@ unaligned
 14648 0f66 6160     		str	r1, [r4, #4]	@ unaligned
 14649 0f68 A260     		str	r2, [r4, #8]	@ unaligned
 14650 0f6a E360     		str	r3, [r4, #12]	@ unaligned
 14651 0f6c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14652 0f6e 2061     		str	r0, [r4, #16]	@ unaligned
 14653 0f70 6161     		str	r1, [r4, #20]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 334


 14654 0f72 A261     		str	r2, [r4, #24]	@ unaligned
 14655 0f74 E361     		str	r3, [r4, #28]	@ unaligned
 14656              	.L620:
2134:..\src/command_processing.c **** 
2135:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 14657              		.loc 1 2135 0
 14658 0f76 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14659 0f7a D7F88C10 		ldr	r1, [r7, #140]
 14660 0f7e 1346     		mov	r3, r2
 14661 0f80 5B00     		lsls	r3, r3, #1
 14662 0f82 1344     		add	r3, r3, r2
 14663 0f84 1B01     		lsls	r3, r3, #4
 14664 0f86 0B44     		add	r3, r3, r1
 14665 0f88 03F5DA73 		add	r3, r3, #436
 14666 0f8c 93F90030 		ldrsb	r3, [r3]
 14667 0f90 1A46     		mov	r2, r3
 14668 0f92 07F11C03 		add	r3, r7, #28
 14669 0f96 4B49     		ldr	r1, .L666+40
 14670 0f98 1846     		mov	r0, r3
 14671 0f9a FFF7FEFF 		bl	sprintf
2136:..\src/command_processing.c ****             strcat(info_string, str);
 14672              		.loc 1 2136 0
 14673 0f9e 07F11C03 		add	r3, r7, #28
 14674 0fa2 1946     		mov	r1, r3
 14675 0fa4 7869     		ldr	r0, [r7, #20]
 14676 0fa6 FFF7FEFF 		bl	strcat
2137:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2138:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
2139:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
2140:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
2141:..\src/command_processing.c ****                 strcat(info_string, str);
2142:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
2143:..\src/command_processing.c ****                     strcat(info_string, ", ");
2144:..\src/command_processing.c ****                 }                
2145:..\src/command_processing.c ****             }
2146:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2147:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
2148:..\src/command_processing.c ****             strcat(info_string, str);
2149:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
2150:..\src/command_processing.c ****             strcat(info_string, str);
2151:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
2152:..\src/command_processing.c ****             strcat(info_string, str);
2153:..\src/command_processing.c **** #endif            
2154:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14677              		.loc 1 2154 0
 14678 0faa 7869     		ldr	r0, [r7, #20]
 14679 0fac FFF7FEFF 		bl	strlen
 14680 0fb0 0346     		mov	r3, r0
 14681 0fb2 1A46     		mov	r2, r3
 14682 0fb4 7B69     		ldr	r3, [r7, #20]
 14683 0fb6 1344     		add	r3, r3, r2
 14684 0fb8 434A     		ldr	r2, .L666+44
 14685 0fba 1188     		ldrh	r1, [r2]	@ unaligned
 14686 0fbc 9278     		ldrb	r2, [r2, #2]
 14687 0fbe 1980     		strh	r1, [r3]	@ unaligned
 14688 0fc0 9A70     		strb	r2, [r3, #2]
2155:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 335


2156:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 14689              		.loc 1 2156 0
 14690 0fc2 7869     		ldr	r0, [r7, #20]
 14691 0fc4 FFF7FEFF 		bl	strlen
 14692 0fc8 0346     		mov	r3, r0
 14693 0fca 1A46     		mov	r2, r3
 14694 0fcc 7B69     		ldr	r3, [r7, #20]
 14695 0fce 1344     		add	r3, r3, r2
 14696 0fd0 3E4A     		ldr	r2, .L666+48
 14697 0fd2 1D46     		mov	r5, r3
 14698 0fd4 1446     		mov	r4, r2
 14699 0fd6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14700 0fd8 2860     		str	r0, [r5]	@ unaligned
 14701 0fda 6960     		str	r1, [r5, #4]	@ unaligned
 14702 0fdc AA60     		str	r2, [r5, #8]	@ unaligned
 14703 0fde EB60     		str	r3, [r5, #12]	@ unaligned
 14704 0fe0 2068     		ldr	r0, [r4]	@ unaligned
 14705 0fe2 2861     		str	r0, [r5, #16]	@ unaligned
2157:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 14706              		.loc 1 2157 0
 14707 0fe4 0023     		movs	r3, #0
 14708 0fe6 C7F89430 		str	r3, [r7, #148]
 14709 0fea 30E0     		b	.L621
 14710              	.L623:
2158:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 14711              		.loc 1 2158 0
 14712 0fec 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14713 0ff0 D7F88C10 		ldr	r1, [r7, #140]
 14714 0ff4 1346     		mov	r3, r2
 14715 0ff6 5B00     		lsls	r3, r3, #1
 14716 0ff8 1344     		add	r3, r3, r2
 14717 0ffa 1B01     		lsls	r3, r3, #4
 14718 0ffc CA18     		adds	r2, r1, r3
 14719 0ffe D7F89430 		ldr	r3, [r7, #148]
 14720 1002 1344     		add	r3, r3, r2
 14721 1004 03F29513 		addw	r3, r3, #405
 14722 1008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14723 100a 1A46     		mov	r2, r3
 14724 100c 07F11C03 		add	r3, r7, #28
 14725 1010 2F49     		ldr	r1, .L666+52
 14726 1012 1846     		mov	r0, r3
 14727 1014 FFF7FEFF 		bl	sprintf
2159:..\src/command_processing.c ****                 strcat(info_string, str);
 14728              		.loc 1 2159 0
 14729 1018 07F11C03 		add	r3, r7, #28
 14730 101c 1946     		mov	r1, r3
 14731 101e 7869     		ldr	r0, [r7, #20]
 14732 1020 FFF7FEFF 		bl	strcat
2160:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14733              		.loc 1 2160 0
 14734 1024 D7F89430 		ldr	r3, [r7, #148]
 14735 1028 022B     		cmp	r3, #2
 14736 102a 0BD0     		beq	.L622
2161:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14737              		.loc 1 2161 0
 14738 102c 7869     		ldr	r0, [r7, #20]
 14739 102e FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 336


 14740 1032 0346     		mov	r3, r0
 14741 1034 1A46     		mov	r2, r3
 14742 1036 7B69     		ldr	r3, [r7, #20]
 14743 1038 1344     		add	r3, r3, r2
 14744 103a 264A     		ldr	r2, .L666+56
 14745 103c 1188     		ldrh	r1, [r2]	@ unaligned
 14746 103e 9278     		ldrb	r2, [r2, #2]
 14747 1040 1980     		strh	r1, [r3]	@ unaligned
 14748 1042 9A70     		strb	r2, [r3, #2]
 14749              	.L622:
2157:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 14750              		.loc 1 2157 0 discriminator 2
 14751 1044 D7F89430 		ldr	r3, [r7, #148]
 14752 1048 0133     		adds	r3, r3, #1
 14753 104a C7F89430 		str	r3, [r7, #148]
 14754              	.L621:
2157:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 14755              		.loc 1 2157 0 is_stmt 0 discriminator 1
 14756 104e D7F89430 		ldr	r3, [r7, #148]
 14757 1052 022B     		cmp	r3, #2
 14758 1054 CADD     		ble	.L623
2162:..\src/command_processing.c ****                 }                
2163:..\src/command_processing.c ****             }
2164:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14759              		.loc 1 2164 0 is_stmt 1
 14760 1056 7869     		ldr	r0, [r7, #20]
 14761 1058 FFF7FEFF 		bl	strlen
 14762 105c 0346     		mov	r3, r0
 14763 105e 1A46     		mov	r2, r3
 14764 1060 7B69     		ldr	r3, [r7, #20]
 14765 1062 1344     		add	r3, r3, r2
 14766 1064 184A     		ldr	r2, .L666+44
 14767 1066 1188     		ldrh	r1, [r2]	@ unaligned
 14768 1068 9278     		ldrb	r2, [r2, #2]
 14769 106a 1980     		strh	r1, [r3]	@ unaligned
 14770 106c 9A70     		strb	r2, [r3, #2]
2165:..\src/command_processing.c **** 
2166:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 14771              		.loc 1 2166 0
 14772 106e 7869     		ldr	r0, [r7, #20]
 14773 1070 FFF7FEFF 		bl	strlen
 14774 1074 0346     		mov	r3, r0
 14775 1076 1A46     		mov	r2, r3
 14776 1078 7B69     		ldr	r3, [r7, #20]
 14777 107a 1344     		add	r3, r3, r2
 14778 107c 164A     		ldr	r2, .L666+60
 14779 107e 1D46     		mov	r5, r3
 14780 1080 1446     		mov	r4, r2
 14781 1082 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14782 1084 2860     		str	r0, [r5]	@ unaligned
 14783 1086 6960     		str	r1, [r5, #4]	@ unaligned
 14784 1088 AA60     		str	r2, [r5, #8]	@ unaligned
 14785 108a EB60     		str	r3, [r5, #12]	@ unaligned
 14786 108c 2068     		ldr	r0, [r4]	@ unaligned
 14787 108e 2861     		str	r0, [r5, #16]	@ unaligned
 14788 1090 2379     		ldrb	r3, [r4, #4]
 14789 1092 2B75     		strb	r3, [r5, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 337


2167:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 14790              		.loc 1 2167 0
 14791 1094 0023     		movs	r3, #0
 14792 1096 C7F89430 		str	r3, [r7, #148]
 14793 109a 5FE0     		b	.L624
 14794              	.L667:
 14795              		.align	2
 14796              	.L666:
 14797 109c 4C150000 		.word	.LC202
 14798 10a0 64150000 		.word	.LC203
 14799 10a4 80150000 		.word	.LC204
 14800 10a8 98150000 		.word	.LC205
 14801 10ac C8150000 		.word	.LC206
 14802 10b0 E4150000 		.word	.LC207
 14803 10b4 F8150000 		.word	.LC208
 14804 10b8 10160000 		.word	.LC209
 14805 10bc 38160000 		.word	.LC210
 14806 10c0 5C160000 		.word	.LC211
 14807 10c4 7C160000 		.word	.LC212
 14808 10c8 58110000 		.word	.LC152
 14809 10cc 98160000 		.word	.LC213
 14810 10d0 8C130000 		.word	.LC183
 14811 10d4 90130000 		.word	.LC184
 14812 10d8 AC160000 		.word	.LC214
 14813              	.L626:
2168:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 14814              		.loc 1 2168 0
 14815 10dc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14816 10e0 D7F88C10 		ldr	r1, [r7, #140]
 14817 10e4 1346     		mov	r3, r2
 14818 10e6 5B00     		lsls	r3, r3, #1
 14819 10e8 1344     		add	r3, r3, r2
 14820 10ea 9B00     		lsls	r3, r3, #2
 14821 10ec D7F89420 		ldr	r2, [r7, #148]
 14822 10f0 1344     		add	r3, r3, r2
 14823 10f2 6633     		adds	r3, r3, #102
 14824 10f4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 14825 10f8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14826 10fc D7F88C00 		ldr	r0, [r7, #140]
 14827 1100 1346     		mov	r3, r2
 14828 1102 5B00     		lsls	r3, r3, #1
 14829 1104 1344     		add	r3, r3, r2
 14830 1106 1B01     		lsls	r3, r3, #4
 14831 1108 C218     		adds	r2, r0, r3
 14832 110a D7F89430 		ldr	r3, [r7, #148]
 14833 110e 1344     		add	r3, r3, r2
 14834 1110 03F29513 		addw	r3, r3, #405
 14835 1114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14836 1116 41FA03F2 		asr	r2, r1, r3
 14837 111a 07F11C03 		add	r3, r7, #28
 14838 111e 2349     		ldr	r1, .L668
 14839 1120 1846     		mov	r0, r3
 14840 1122 FFF7FEFF 		bl	sprintf
2169:..\src/command_processing.c ****                 strcat(info_string, str);
 14841              		.loc 1 2169 0
 14842 1126 07F11C03 		add	r3, r7, #28
 14843 112a 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 338


 14844 112c 7869     		ldr	r0, [r7, #20]
 14845 112e FFF7FEFF 		bl	strcat
2170:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14846              		.loc 1 2170 0
 14847 1132 D7F89430 		ldr	r3, [r7, #148]
 14848 1136 022B     		cmp	r3, #2
 14849 1138 0BD0     		beq	.L625
2171:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14850              		.loc 1 2171 0
 14851 113a 7869     		ldr	r0, [r7, #20]
 14852 113c FFF7FEFF 		bl	strlen
 14853 1140 0346     		mov	r3, r0
 14854 1142 1A46     		mov	r2, r3
 14855 1144 7B69     		ldr	r3, [r7, #20]
 14856 1146 1344     		add	r3, r3, r2
 14857 1148 194A     		ldr	r2, .L668+4
 14858 114a 1188     		ldrh	r1, [r2]	@ unaligned
 14859 114c 9278     		ldrb	r2, [r2, #2]
 14860 114e 1980     		strh	r1, [r3]	@ unaligned
 14861 1150 9A70     		strb	r2, [r3, #2]
 14862              	.L625:
2167:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 14863              		.loc 1 2167 0 discriminator 2
 14864 1152 D7F89430 		ldr	r3, [r7, #148]
 14865 1156 0133     		adds	r3, r3, #1
 14866 1158 C7F89430 		str	r3, [r7, #148]
 14867              	.L624:
2167:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 14868              		.loc 1 2167 0 is_stmt 0 discriminator 1
 14869 115c D7F89430 		ldr	r3, [r7, #148]
 14870 1160 022B     		cmp	r3, #2
 14871 1162 BBDD     		ble	.L626
2172:..\src/command_processing.c ****                 }
2173:..\src/command_processing.c ****             }
2174:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14872              		.loc 1 2174 0 is_stmt 1
 14873 1164 7869     		ldr	r0, [r7, #20]
 14874 1166 FFF7FEFF 		bl	strlen
 14875 116a 0346     		mov	r3, r0
 14876 116c 1A46     		mov	r2, r3
 14877 116e 7B69     		ldr	r3, [r7, #20]
 14878 1170 1344     		add	r3, r3, r2
 14879 1172 104A     		ldr	r2, .L668+8
 14880 1174 1188     		ldrh	r1, [r2]	@ unaligned
 14881 1176 9278     		ldrb	r2, [r2, #2]
 14882 1178 1980     		strh	r1, [r3]	@ unaligned
 14883 117a 9A70     		strb	r2, [r3, #2]
2175:..\src/command_processing.c ****                 
2176:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 14884              		.loc 1 2176 0
 14885 117c 7869     		ldr	r0, [r7, #20]
 14886 117e FFF7FEFF 		bl	strlen
 14887 1182 0346     		mov	r3, r0
 14888 1184 1A46     		mov	r2, r3
 14889 1186 7B69     		ldr	r3, [r7, #20]
 14890 1188 1344     		add	r3, r3, r2
 14891 118a 0B4A     		ldr	r2, .L668+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 339


 14892 118c 1D46     		mov	r5, r3
 14893 118e 1446     		mov	r4, r2
 14894 1190 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14895 1192 2860     		str	r0, [r5]	@ unaligned
 14896 1194 6960     		str	r1, [r5, #4]	@ unaligned
 14897 1196 AA60     		str	r2, [r5, #8]	@ unaligned
 14898 1198 EB60     		str	r3, [r5, #12]	@ unaligned
 14899 119a 03CC     		ldmia	r4!, {r0, r1}
 14900 119c 2861     		str	r0, [r5, #16]	@ unaligned
 14901 119e 6961     		str	r1, [r5, #20]	@ unaligned
 14902 11a0 2378     		ldrb	r3, [r4]
 14903 11a2 2B76     		strb	r3, [r5, #24]
2177:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 14904              		.loc 1 2177 0
 14905 11a4 0023     		movs	r3, #0
 14906 11a6 C7F89430 		str	r3, [r7, #148]
 14907 11aa 3DE0     		b	.L627
 14908              	.L669:
 14909              		.align	2
 14910              	.L668:
 14911 11ac C4160000 		.word	.LC215
 14912 11b0 90130000 		.word	.LC184
 14913 11b4 58110000 		.word	.LC152
 14914 11b8 C8160000 		.word	.LC216
 14915              	.L629:
2178:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 14916              		.loc 1 2178 0
 14917 11bc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14918 11c0 D7F88C10 		ldr	r1, [r7, #140]
 14919 11c4 1346     		mov	r3, r2
 14920 11c6 5B00     		lsls	r3, r3, #1
 14921 11c8 1344     		add	r3, r3, r2
 14922 11ca 9B00     		lsls	r3, r3, #2
 14923 11cc D7F89420 		ldr	r2, [r7, #148]
 14924 11d0 1344     		add	r3, r3, r2
 14925 11d2 6833     		adds	r3, r3, #104
 14926 11d4 9B00     		lsls	r3, r3, #2
 14927 11d6 0B44     		add	r3, r3, r1
 14928 11d8 5B68     		ldr	r3, [r3, #4]	@ float
 14929 11da 1846     		mov	r0, r3
 14930 11dc FFF7FEFF 		bl	__aeabi_f2d
 14931 11e0 0346     		mov	r3, r0
 14932 11e2 0C46     		mov	r4, r1
 14933 11e4 07F11C00 		add	r0, r7, #28
 14934 11e8 1A46     		mov	r2, r3
 14935 11ea 2346     		mov	r3, r4
 14936 11ec BF49     		ldr	r1, .L670
 14937 11ee FFF7FEFF 		bl	sprintf
2179:..\src/command_processing.c ****                 strcat(info_string, str);
 14938              		.loc 1 2179 0
 14939 11f2 07F11C03 		add	r3, r7, #28
 14940 11f6 1946     		mov	r1, r3
 14941 11f8 7869     		ldr	r0, [r7, #20]
 14942 11fa FFF7FEFF 		bl	strcat
2180:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14943              		.loc 1 2180 0
 14944 11fe D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 340


 14945 1202 022B     		cmp	r3, #2
 14946 1204 0BD0     		beq	.L628
2181:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14947              		.loc 1 2181 0
 14948 1206 7869     		ldr	r0, [r7, #20]
 14949 1208 FFF7FEFF 		bl	strlen
 14950 120c 0346     		mov	r3, r0
 14951 120e 1A46     		mov	r2, r3
 14952 1210 7B69     		ldr	r3, [r7, #20]
 14953 1212 1344     		add	r3, r3, r2
 14954 1214 B64A     		ldr	r2, .L670+4
 14955 1216 1188     		ldrh	r1, [r2]	@ unaligned
 14956 1218 9278     		ldrb	r2, [r2, #2]
 14957 121a 1980     		strh	r1, [r3]	@ unaligned
 14958 121c 9A70     		strb	r2, [r3, #2]
 14959              	.L628:
2177:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 14960              		.loc 1 2177 0 discriminator 2
 14961 121e D7F89430 		ldr	r3, [r7, #148]
 14962 1222 0133     		adds	r3, r3, #1
 14963 1224 C7F89430 		str	r3, [r7, #148]
 14964              	.L627:
2177:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 14965              		.loc 1 2177 0 is_stmt 0 discriminator 1
 14966 1228 D7F89430 		ldr	r3, [r7, #148]
 14967 122c 022B     		cmp	r3, #2
 14968 122e C5DD     		ble	.L629
2182:..\src/command_processing.c ****                 }
2183:..\src/command_processing.c ****             }
2184:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14969              		.loc 1 2184 0 is_stmt 1 discriminator 2
 14970 1230 7869     		ldr	r0, [r7, #20]
 14971 1232 FFF7FEFF 		bl	strlen
 14972 1236 0346     		mov	r3, r0
 14973 1238 1A46     		mov	r2, r3
 14974 123a 7B69     		ldr	r3, [r7, #20]
 14975 123c 1344     		add	r3, r3, r2
 14976 123e AD4A     		ldr	r2, .L670+8
 14977 1240 1188     		ldrh	r1, [r2]	@ unaligned
 14978 1242 9278     		ldrb	r2, [r2, #2]
 14979 1244 1980     		strh	r1, [r3]	@ unaligned
 14980 1246 9A70     		strb	r2, [r3, #2]
2185:..\src/command_processing.c ****             
2186:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2187:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14981              		.loc 1 2187 0 discriminator 2
 14982 1248 D7F88430 		ldr	r3, [r7, #132]
 14983 124c 5B6C     		ldr	r3, [r3, #68]	@ float
2186:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14984              		.loc 1 2186 0 discriminator 2
 14985 124e 1846     		mov	r0, r3
 14986 1250 FFF7FEFF 		bl	__aeabi_f2d
 14987 1254 C7E90201 		strd	r0, [r7, #8]
 14988              		.loc 1 2187 0 discriminator 2
 14989 1258 D7F88430 		ldr	r3, [r7, #132]
 14990 125c 9B6C     		ldr	r3, [r3, #72]	@ float
2186:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 341


 14991              		.loc 1 2186 0 discriminator 2
 14992 125e 1846     		mov	r0, r3
 14993 1260 FFF7FEFF 		bl	__aeabi_f2d
 14994 1264 0446     		mov	r4, r0
 14995 1266 0D46     		mov	r5, r1
 14996              		.loc 1 2187 0 discriminator 2
 14997 1268 D7F88430 		ldr	r3, [r7, #132]
 14998 126c DB6C     		ldr	r3, [r3, #76]	@ float
2186:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14999              		.loc 1 2186 0 discriminator 2
 15000 126e 1846     		mov	r0, r3
 15001 1270 FFF7FEFF 		bl	__aeabi_f2d
 15002 1274 8046     		mov	r8, r0
 15003 1276 8946     		mov	r9, r1
2188:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 15004              		.loc 1 2188 0 discriminator 2
 15005 1278 D7F88430 		ldr	r3, [r7, #132]
 15006 127c 1B6D     		ldr	r3, [r3, #80]	@ float
2186:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15007              		.loc 1 2186 0 discriminator 2
 15008 127e 1846     		mov	r0, r3
 15009 1280 FFF7FEFF 		bl	__aeabi_f2d
 15010 1284 8246     		mov	r10, r0
 15011 1286 8B46     		mov	fp, r1
 15012              		.loc 1 2188 0 discriminator 2
 15013 1288 D7F88430 		ldr	r3, [r7, #132]
 15014 128c 5B6D     		ldr	r3, [r3, #84]	@ float
2186:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15015              		.loc 1 2186 0 discriminator 2
 15016 128e 1846     		mov	r0, r3
 15017 1290 FFF7FEFF 		bl	__aeabi_f2d
 15018 1294 C7E90001 		strd	r0, [r7]
 15019              		.loc 1 2188 0 discriminator 2
 15020 1298 D7F88430 		ldr	r3, [r7, #132]
 15021 129c 9B6D     		ldr	r3, [r3, #88]	@ float
2186:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15022              		.loc 1 2186 0 discriminator 2
 15023 129e 1846     		mov	r0, r3
 15024 12a0 FFF7FEFF 		bl	__aeabi_f2d
 15025 12a4 0246     		mov	r2, r0
 15026 12a6 0B46     		mov	r3, r1
 15027 12a8 07F11C00 		add	r0, r7, #28
 15028 12ac CDE90823 		strd	r2, [sp, #32]
 15029 12b0 D7E90012 		ldrd	r1, [r7]
 15030 12b4 CDE90612 		strd	r1, [sp, #24]
 15031 12b8 CDE904AB 		strd	r10, [sp, #16]
 15032 12bc CDE90289 		strd	r8, [sp, #8]
 15033 12c0 CDE90045 		strd	r4, [sp]
 15034 12c4 D7E90223 		ldrd	r2, [r7, #8]
 15035 12c8 8B49     		ldr	r1, .L670+12
 15036 12ca FFF7FEFF 		bl	sprintf
2189:..\src/command_processing.c **** 		    strcat(info_string, str);       
 15037              		.loc 1 2189 0 discriminator 2
 15038 12ce 07F11C03 		add	r3, r7, #28
 15039 12d2 1946     		mov	r1, r3
 15040 12d4 7869     		ldr	r0, [r7, #20]
 15041 12d6 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 342


2190:..\src/command_processing.c **** 
2191:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 15042              		.loc 1 2191 0 discriminator 2
 15043 12da D7F88430 		ldr	r3, [r7, #132]
 15044 12de 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 15045 12e2 1A46     		mov	r2, r3
 15046 12e4 07F11C03 		add	r3, r7, #28
 15047 12e8 8449     		ldr	r1, .L670+16
 15048 12ea 1846     		mov	r0, r3
 15049 12ec FFF7FEFF 		bl	sprintf
2192:..\src/command_processing.c ****             strcat(info_string, str);
 15050              		.loc 1 2192 0 discriminator 2
 15051 12f0 07F11C03 		add	r3, r7, #28
 15052 12f4 1946     		mov	r1, r3
 15053 12f6 7869     		ldr	r0, [r7, #20]
 15054 12f8 FFF7FEFF 		bl	strcat
2193:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15055              		.loc 1 2193 0 discriminator 2
 15056 12fc 7869     		ldr	r0, [r7, #20]
 15057 12fe FFF7FEFF 		bl	strlen
 15058 1302 0346     		mov	r3, r0
 15059 1304 1A46     		mov	r2, r3
 15060 1306 7B69     		ldr	r3, [r7, #20]
 15061 1308 1344     		add	r3, r3, r2
 15062 130a 7A4A     		ldr	r2, .L670+8
 15063 130c 1188     		ldrh	r1, [r2]	@ unaligned
 15064 130e 9278     		ldrb	r2, [r2, #2]
 15065 1310 1980     		strh	r1, [r3]	@ unaligned
 15066 1312 9A70     		strb	r2, [r3, #2]
2194:..\src/command_processing.c **** 
2195:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 15067              		.loc 1 2195 0 discriminator 2
 15068 1314 D7F88430 		ldr	r3, [r7, #132]
 15069 1318 596B     		ldr	r1, [r3, #52]
 15070 131a 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15071 131e D7F88C00 		ldr	r0, [r7, #140]
 15072 1322 1346     		mov	r3, r2
 15073 1324 5B00     		lsls	r3, r3, #1
 15074 1326 1344     		add	r3, r3, r2
 15075 1328 1B01     		lsls	r3, r3, #4
 15076 132a 0344     		add	r3, r3, r0
 15077 132c 03F29513 		addw	r3, r3, #405
 15078 1330 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15079 1332 41FA03F2 		asr	r2, r1, r3
 15080 1336 07F11C03 		add	r3, r7, #28
 15081 133a 7149     		ldr	r1, .L670+20
 15082 133c 1846     		mov	r0, r3
 15083 133e FFF7FEFF 		bl	sprintf
2196:..\src/command_processing.c ****             strcat(info_string, str);
 15084              		.loc 1 2196 0 discriminator 2
 15085 1342 07F11C03 		add	r3, r7, #28
 15086 1346 1946     		mov	r1, r3
 15087 1348 7869     		ldr	r0, [r7, #20]
 15088 134a FFF7FEFF 		bl	strcat
2197:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 15089              		.loc 1 2197 0 discriminator 2
 15090 134e D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 343


 15091 1352 996B     		ldr	r1, [r3, #56]
 15092 1354 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15093 1358 D7F88C00 		ldr	r0, [r7, #140]
 15094 135c 1346     		mov	r3, r2
 15095 135e 5B00     		lsls	r3, r3, #1
 15096 1360 1344     		add	r3, r3, r2
 15097 1362 1B01     		lsls	r3, r3, #4
 15098 1364 0344     		add	r3, r3, r0
 15099 1366 03F29513 		addw	r3, r3, #405
 15100 136a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15101 136c 41FA03F2 		asr	r2, r1, r3
 15102 1370 07F11C03 		add	r3, r7, #28
 15103 1374 6349     		ldr	r1, .L670+24
 15104 1376 1846     		mov	r0, r3
 15105 1378 FFF7FEFF 		bl	sprintf
2198:..\src/command_processing.c ****             strcat(info_string, str);
 15106              		.loc 1 2198 0 discriminator 2
 15107 137c 07F11C03 		add	r3, r7, #28
 15108 1380 1946     		mov	r1, r3
 15109 1382 7869     		ldr	r0, [r7, #20]
 15110 1384 FFF7FEFF 		bl	strcat
2199:..\src/command_processing.c **** 
2200:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 15111              		.loc 1 2200 0 discriminator 2
 15112 1388 D7F88430 		ldr	r3, [r7, #132]
 15113 138c 1A6C     		ldr	r2, [r3, #64]
 15114 138e D7F88430 		ldr	r3, [r7, #132]
 15115 1392 DB6B     		ldr	r3, [r3, #60]
 15116 1394 07F11C00 		add	r0, r7, #28
 15117 1398 5B49     		ldr	r1, .L670+28
 15118 139a FFF7FEFF 		bl	sprintf
2201:..\src/command_processing.c ****             strcat(info_string, str);
 15119              		.loc 1 2201 0 discriminator 2
 15120 139e 07F11C03 		add	r3, r7, #28
 15121 13a2 1946     		mov	r1, r3
 15122 13a4 7869     		ldr	r0, [r7, #20]
 15123 13a6 FFF7FEFF 		bl	strcat
2202:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15124              		.loc 1 2202 0 discriminator 2
 15125 13aa 7869     		ldr	r0, [r7, #20]
 15126 13ac FFF7FEFF 		bl	strlen
 15127 13b0 0346     		mov	r3, r0
 15128 13b2 1A46     		mov	r2, r3
 15129 13b4 7B69     		ldr	r3, [r7, #20]
 15130 13b6 1344     		add	r3, r3, r2
 15131 13b8 4E4A     		ldr	r2, .L670+8
 15132 13ba 1188     		ldrh	r1, [r2]	@ unaligned
 15133 13bc 9278     		ldrb	r2, [r2, #2]
 15134 13be 1980     		strh	r1, [r3]	@ unaligned
 15135 13c0 9A70     		strb	r2, [r3, #2]
2203:..\src/command_processing.c **** 
2204:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 15136              		.loc 1 2204 0 discriminator 2
 15137 13c2 D7F88430 		ldr	r3, [r7, #132]
 15138 13c6 B3F95C30 		ldrsh	r3, [r3, #92]
 15139 13ca 1A46     		mov	r2, r3
 15140 13cc 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 344


 15141 13d0 4E49     		ldr	r1, .L670+32
 15142 13d2 1846     		mov	r0, r3
 15143 13d4 FFF7FEFF 		bl	sprintf
2205:..\src/command_processing.c ****             strcat(info_string, str);
 15144              		.loc 1 2205 0 discriminator 2
 15145 13d8 07F11C03 		add	r3, r7, #28
 15146 13dc 1946     		mov	r1, r3
 15147 13de 7869     		ldr	r0, [r7, #20]
 15148 13e0 FFF7FEFF 		bl	strcat
2206:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2207:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
2208:..\src/command_processing.c ****             strcat(info_string, str);
2209:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
2210:..\src/command_processing.c ****                 case DRIVER_MC33887:
2211:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2212:..\src/command_processing.c ****                     break;
2213:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2214:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2215:..\src/command_processing.c ****                     break;
2216:..\src/command_processing.c ****                 case DRIVER_BRUSHLESS:
2217:..\src/command_processing.c ****                     strcat(info_string, "Driver type: ESC (Brushless)\r\n");
2218:..\src/command_processing.c ****                     break;
2219:..\src/command_processing.c ****                 default:
2220:..\src/command_processing.c ****                     break;
2221:..\src/command_processing.c ****             }
2222:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
2223:..\src/command_processing.c ****             strcat(info_string, str);
2224:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
2225:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
2226:..\src/command_processing.c ****             else
2227:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
2228:..\src/command_processing.c **** #endif                
2229:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15149              		.loc 1 2229 0 discriminator 2
 15150 13e4 7869     		ldr	r0, [r7, #20]
 15151 13e6 FFF7FEFF 		bl	strlen
 15152 13ea 0346     		mov	r3, r0
 15153 13ec 1A46     		mov	r2, r3
 15154 13ee 7B69     		ldr	r3, [r7, #20]
 15155 13f0 1344     		add	r3, r3, r2
 15156 13f2 404A     		ldr	r2, .L670+8
 15157 13f4 1188     		ldrh	r1, [r2]	@ unaligned
 15158 13f6 9278     		ldrb	r2, [r2, #2]
 15159 13f8 1980     		strh	r1, [r3]	@ unaligned
 15160 13fa 9A70     		strb	r2, [r3, #2]
 15161              	.LBE26:
1956:..\src/command_processing.c ****             
 15162              		.loc 1 1956 0 discriminator 2
 15163 13fc 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 15164 1400 0133     		adds	r3, r3, #1
 15165 1402 87F89330 		strb	r3, [r7, #147]
 15166              	.L577:
1956:..\src/command_processing.c ****             
 15167              		.loc 1 1956 0 is_stmt 0 discriminator 1
 15168 1406 D7F88C30 		ldr	r3, [r7, #140]
 15169 140a 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 15170 140e 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 345


 15171 1412 9A42     		cmp	r2, r3
 15172 1414 7EF6AAAF 		bls	.L630
 15173              	.LBE25:
2230:..\src/command_processing.c ****         }
2231:..\src/command_processing.c ****       
2232:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 15174              		.loc 1 2232 0 is_stmt 1
 15175 1418 7869     		ldr	r0, [r7, #20]
 15176 141a FFF7FEFF 		bl	strlen
 15177 141e 0346     		mov	r3, r0
 15178 1420 1A46     		mov	r2, r3
 15179 1422 7B69     		ldr	r3, [r7, #20]
 15180 1424 1344     		add	r3, r3, r2
 15181 1426 3A4A     		ldr	r2, .L670+36
 15182 1428 1D46     		mov	r5, r3
 15183 142a 1446     		mov	r4, r2
 15184 142c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15185 142e 2860     		str	r0, [r5]	@ unaligned
 15186 1430 6960     		str	r1, [r5, #4]	@ unaligned
 15187 1432 AA60     		str	r2, [r5, #8]	@ unaligned
 15188 1434 EB60     		str	r3, [r5, #12]	@ unaligned
 15189 1436 2068     		ldr	r0, [r4]	@ unaligned
 15190 1438 2861     		str	r0, [r5, #16]	@ unaligned
2233:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 15191              		.loc 1 2233 0
 15192 143a D7F88C30 		ldr	r3, [r7, #140]
 15193 143e B3F8F031 		ldrh	r3, [r3, #496]
 15194 1442 1A46     		mov	r2, r3
 15195 1444 D7F88C30 		ldr	r3, [r7, #140]
 15196 1448 B3F8F231 		ldrh	r3, [r3, #498]
 15197 144c 07F11C00 		add	r0, r7, #28
 15198 1450 3049     		ldr	r1, .L670+40
 15199 1452 FFF7FEFF 		bl	sprintf
2234:..\src/command_processing.c ****         strcat(info_string, str);
 15200              		.loc 1 2234 0
 15201 1456 07F11C03 		add	r3, r7, #28
 15202 145a 1946     		mov	r1, r3
 15203 145c 7869     		ldr	r0, [r7, #20]
 15204 145e FFF7FEFF 		bl	strcat
2235:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15205              		.loc 1 2235 0
 15206 1462 7869     		ldr	r0, [r7, #20]
 15207 1464 FFF7FEFF 		bl	strlen
 15208 1468 0346     		mov	r3, r0
 15209 146a 1A46     		mov	r2, r3
 15210 146c 7B69     		ldr	r3, [r7, #20]
 15211 146e 1344     		add	r3, r3, r2
 15212 1470 204A     		ldr	r2, .L670+8
 15213 1472 1188     		ldrh	r1, [r2]	@ unaligned
 15214 1474 9278     		ldrb	r2, [r2, #2]
 15215 1476 1980     		strh	r1, [r3]	@ unaligned
 15216 1478 9A70     		strb	r2, [r3, #2]
2236:..\src/command_processing.c **** 
2237:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 15217              		.loc 1 2237 0
 15218 147a D7F88C30 		ldr	r3, [r7, #140]
 15219 147e D3F8F421 		ldr	r2, [r3, #500]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 346


 15220 1482 D7F88C30 		ldr	r3, [r7, #140]
 15221 1486 D3F8F831 		ldr	r3, [r3, #504]
 15222 148a 07F11C00 		add	r0, r7, #28
 15223 148e 2249     		ldr	r1, .L670+44
 15224 1490 FFF7FEFF 		bl	sprintf
2238:..\src/command_processing.c ****         strcat(info_string, str);
 15225              		.loc 1 2238 0
 15226 1494 07F11C03 		add	r3, r7, #28
 15227 1498 1946     		mov	r1, r3
 15228 149a 7869     		ldr	r0, [r7, #20]
 15229 149c FFF7FEFF 		bl	strcat
2239:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15230              		.loc 1 2239 0
 15231 14a0 7869     		ldr	r0, [r7, #20]
 15232 14a2 FFF7FEFF 		bl	strlen
 15233 14a6 0346     		mov	r3, r0
 15234 14a8 1A46     		mov	r2, r3
 15235 14aa 7B69     		ldr	r3, [r7, #20]
 15236 14ac 1344     		add	r3, r3, r2
 15237 14ae 114A     		ldr	r2, .L670+8
 15238 14b0 1188     		ldrh	r1, [r2]	@ unaligned
 15239 14b2 9278     		ldrb	r2, [r2, #2]
 15240 14b4 1980     		strh	r1, [r3]	@ unaligned
 15241 14b6 9A70     		strb	r2, [r3, #2]
2240:..\src/command_processing.c **** 
2241:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 15242              		.loc 1 2241 0
 15243 14b8 D7F88C30 		ldr	r3, [r7, #140]
 15244 14bc 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 15245 14c0 002B     		cmp	r3, #0
 15246 14c2 2DD0     		beq	.L631
2242:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 15247              		.loc 1 2242 0
 15248 14c4 7869     		ldr	r0, [r7, #20]
 15249 14c6 FFF7FEFF 		bl	strlen
 15250 14ca 0346     		mov	r3, r0
 15251 14cc 1A46     		mov	r2, r3
 15252 14ce 7B69     		ldr	r3, [r7, #20]
 15253 14d0 1344     		add	r3, r3, r2
 15254 14d2 124A     		ldr	r2, .L670+48
 15255 14d4 1D46     		mov	r5, r3
 15256 14d6 1446     		mov	r4, r2
 15257 14d8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15258 14da 2860     		str	r0, [r5]	@ unaligned
 15259 14dc 6960     		str	r1, [r5, #4]	@ unaligned
 15260 14de AA60     		str	r2, [r5, #8]	@ unaligned
 15261 14e0 EB60     		str	r3, [r5, #12]	@ unaligned
 15262 14e2 2068     		ldr	r0, [r4]	@ unaligned
 15263 14e4 2861     		str	r0, [r5, #16]	@ unaligned
 15264 14e6 2379     		ldrb	r3, [r4, #4]
 15265 14e8 2B75     		strb	r3, [r5, #20]
 15266 14ea 2AE0     		b	.L632
 15267              	.L671:
 15268              		.align	2
 15269              	.L670:
 15270 14ec E4160000 		.word	.LC217
 15271 14f0 90130000 		.word	.LC184
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 347


 15272 14f4 58110000 		.word	.LC152
 15273 14f8 E8160000 		.word	.LC218
 15274 14fc 18170000 		.word	.LC219
 15275 1500 34170000 		.word	.LC220
 15276 1504 58170000 		.word	.LC221
 15277 1508 68170000 		.word	.LC222
 15278 150c 84170000 		.word	.LC223
 15279 1510 98170000 		.word	.LC224
 15280 1514 AC170000 		.word	.LC225
 15281 1518 D0170000 		.word	.LC226
 15282 151c F4170000 		.word	.LC227
 15283              	.L631:
2243:..\src/command_processing.c ****         else
2244:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 15284              		.loc 1 2244 0
 15285 1520 7869     		ldr	r0, [r7, #20]
 15286 1522 FFF7FEFF 		bl	strlen
 15287 1526 0346     		mov	r3, r0
 15288 1528 1A46     		mov	r2, r3
 15289 152a 7B69     		ldr	r3, [r7, #20]
 15290 152c 1344     		add	r3, r3, r2
 15291 152e BA4A     		ldr	r2, .L672
 15292 1530 1D46     		mov	r5, r3
 15293 1532 1446     		mov	r4, r2
 15294 1534 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15295 1536 2860     		str	r0, [r5]	@ unaligned
 15296 1538 6960     		str	r1, [r5, #4]	@ unaligned
 15297 153a AA60     		str	r2, [r5, #8]	@ unaligned
 15298 153c EB60     		str	r3, [r5, #12]	@ unaligned
 15299 153e 2068     		ldr	r0, [r4]	@ unaligned
 15300 1540 2861     		str	r0, [r5, #16]	@ unaligned
 15301              	.L632:
2245:..\src/command_processing.c ****             
2246:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 15302              		.loc 1 2246 0
 15303 1542 D7F88C30 		ldr	r3, [r7, #140]
 15304 1546 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 15305 154a 002B     		cmp	r3, #0
 15306 154c 17D0     		beq	.L633
2247:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 15307              		.loc 1 2247 0
 15308 154e 7869     		ldr	r0, [r7, #20]
 15309 1550 FFF7FEFF 		bl	strlen
 15310 1554 0346     		mov	r3, r0
 15311 1556 1A46     		mov	r2, r3
 15312 1558 7B69     		ldr	r3, [r7, #20]
 15313 155a 1344     		add	r3, r3, r2
 15314 155c AF4A     		ldr	r2, .L672+4
 15315 155e 1D46     		mov	r5, r3
 15316 1560 1446     		mov	r4, r2
 15317 1562 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15318 1564 2860     		str	r0, [r5]	@ unaligned
 15319 1566 6960     		str	r1, [r5, #4]	@ unaligned
 15320 1568 AA60     		str	r2, [r5, #8]	@ unaligned
 15321 156a EB60     		str	r3, [r5, #12]	@ unaligned
 15322 156c 03CC     		ldmia	r4!, {r0, r1}
 15323 156e 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 348


 15324 1570 6961     		str	r1, [r5, #20]	@ unaligned
 15325 1572 2388     		ldrh	r3, [r4]	@ unaligned
 15326 1574 A278     		ldrb	r2, [r4, #2]
 15327 1576 2B83     		strh	r3, [r5, #24]	@ unaligned
 15328 1578 1346     		mov	r3, r2
 15329 157a AB76     		strb	r3, [r5, #26]
 15330 157c 13E0     		b	.L634
 15331              	.L633:
2248:..\src/command_processing.c ****         else
2249:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 15332              		.loc 1 2249 0
 15333 157e 7869     		ldr	r0, [r7, #20]
 15334 1580 FFF7FEFF 		bl	strlen
 15335 1584 0346     		mov	r3, r0
 15336 1586 1A46     		mov	r2, r3
 15337 1588 7B69     		ldr	r3, [r7, #20]
 15338 158a 1344     		add	r3, r3, r2
 15339 158c A44A     		ldr	r2, .L672+8
 15340 158e 1D46     		mov	r5, r3
 15341 1590 1446     		mov	r4, r2
 15342 1592 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15343 1594 2860     		str	r0, [r5]	@ unaligned
 15344 1596 6960     		str	r1, [r5, #4]	@ unaligned
 15345 1598 AA60     		str	r2, [r5, #8]	@ unaligned
 15346 159a EB60     		str	r3, [r5, #12]	@ unaligned
 15347 159c 03CC     		ldmia	r4!, {r0, r1}
 15348 159e 2861     		str	r0, [r5, #16]	@ unaligned
 15349 15a0 6961     		str	r1, [r5, #20]	@ unaligned
 15350 15a2 2388     		ldrh	r3, [r4]	@ unaligned
 15351 15a4 2B83     		strh	r3, [r5, #24]	@ unaligned
 15352              	.L634:
2250:..\src/command_processing.c **** 
2251:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 15353              		.loc 1 2251 0
 15354 15a6 D7F88C30 		ldr	r3, [r7, #140]
 15355 15aa 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 15356 15ae 1A46     		mov	r2, r3
 15357 15b0 D7F88C30 		ldr	r3, [r7, #140]
 15358 15b4 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 15359 15b8 07F11C00 		add	r0, r7, #28
 15360 15bc 9949     		ldr	r1, .L672+12
 15361 15be FFF7FEFF 		bl	sprintf
2252:..\src/command_processing.c ****         strcat(info_string, str);
 15362              		.loc 1 2252 0
 15363 15c2 07F11C03 		add	r3, r7, #28
 15364 15c6 1946     		mov	r1, r3
 15365 15c8 7869     		ldr	r0, [r7, #20]
 15366 15ca FFF7FEFF 		bl	strcat
2253:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15367              		.loc 1 2253 0
 15368 15ce 7869     		ldr	r0, [r7, #20]
 15369 15d0 FFF7FEFF 		bl	strlen
 15370 15d4 0346     		mov	r3, r0
 15371 15d6 1A46     		mov	r2, r3
 15372 15d8 7B69     		ldr	r3, [r7, #20]
 15373 15da 1344     		add	r3, r3, r2
 15374 15dc 924A     		ldr	r2, .L672+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 349


 15375 15de 1188     		ldrh	r1, [r2]	@ unaligned
 15376 15e0 9278     		ldrb	r2, [r2, #2]
 15377 15e2 1980     		strh	r1, [r3]	@ unaligned
 15378 15e4 9A70     		strb	r2, [r3, #2]
2254:..\src/command_processing.c **** 
2255:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 15379              		.loc 1 2255 0
 15380 15e6 D7F88C30 		ldr	r3, [r7, #140]
 15381 15ea 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 15382 15ee 012B     		cmp	r3, #1
 15383 15f0 6ED1     		bne	.L635
2256:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 15384              		.loc 1 2256 0
 15385 15f2 7869     		ldr	r0, [r7, #20]
 15386 15f4 FFF7FEFF 		bl	strlen
 15387 15f8 0346     		mov	r3, r0
 15388 15fa 1A46     		mov	r2, r3
 15389 15fc 7B69     		ldr	r3, [r7, #20]
 15390 15fe 1344     		add	r3, r3, r2
 15391 1600 8A4A     		ldr	r2, .L672+20
 15392 1602 1C46     		mov	r4, r3
 15393 1604 1546     		mov	r5, r2
 15394 1606 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15395 1608 2060     		str	r0, [r4]	@ unaligned
 15396 160a 6160     		str	r1, [r4, #4]	@ unaligned
 15397 160c A260     		str	r2, [r4, #8]	@ unaligned
 15398 160e E360     		str	r3, [r4, #12]	@ unaligned
 15399 1610 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15400 1612 2061     		str	r0, [r4, #16]	@ unaligned
 15401 1614 6161     		str	r1, [r4, #20]	@ unaligned
 15402 1616 A261     		str	r2, [r4, #24]	@ unaligned
 15403 1618 E361     		str	r3, [r4, #28]	@ unaligned
2257:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 15404              		.loc 1 2257 0
 15405 161a 0023     		movs	r3, #0
 15406 161c C7F89430 		str	r3, [r7, #148]
 15407 1620 25E0     		b	.L636
 15408              	.L637:
2258:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 15409              		.loc 1 2258 0 discriminator 3
 15410 1622 D7F89430 		ldr	r3, [r7, #148]
 15411 1626 591C     		adds	r1, r3, #1
 15412 1628 814A     		ldr	r2, .L672+24
 15413 162a D7F89430 		ldr	r3, [r7, #148]
 15414 162e 0233     		adds	r3, r3, #2
 15415 1630 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15416 1634 07F11C00 		add	r0, r7, #28
 15417 1638 0A46     		mov	r2, r1
 15418 163a 7E49     		ldr	r1, .L672+28
 15419 163c FFF7FEFF 		bl	sprintf
2259:..\src/command_processing.c ****                 strcat(info_string, str);
 15420              		.loc 1 2259 0 discriminator 3
 15421 1640 07F11C03 		add	r3, r7, #28
 15422 1644 1946     		mov	r1, r3
 15423 1646 7869     		ldr	r0, [r7, #20]
 15424 1648 FFF7FEFF 		bl	strcat
2260:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 350


 15425              		.loc 1 2260 0 discriminator 3
 15426 164c 7869     		ldr	r0, [r7, #20]
 15427 164e FFF7FEFF 		bl	strlen
 15428 1652 0346     		mov	r3, r0
 15429 1654 1A46     		mov	r2, r3
 15430 1656 7B69     		ldr	r3, [r7, #20]
 15431 1658 1344     		add	r3, r3, r2
 15432 165a 734A     		ldr	r2, .L672+16
 15433 165c 1188     		ldrh	r1, [r2]	@ unaligned
 15434 165e 9278     		ldrb	r2, [r2, #2]
 15435 1660 1980     		strh	r1, [r3]	@ unaligned
 15436 1662 9A70     		strb	r2, [r3, #2]
2257:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 15437              		.loc 1 2257 0 discriminator 3
 15438 1664 D7F89430 		ldr	r3, [r7, #148]
 15439 1668 0133     		adds	r3, r3, #1
 15440 166a C7F89430 		str	r3, [r7, #148]
 15441              	.L636:
2257:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 15442              		.loc 1 2257 0 is_stmt 0 discriminator 1
 15443 166e D7F89430 		ldr	r3, [r7, #148]
 15444 1672 052B     		cmp	r3, #5
 15445 1674 D5DD     		ble	.L637
2261:..\src/command_processing.c ****             }
2262:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 15446              		.loc 1 2262 0 is_stmt 1
 15447 1676 0023     		movs	r3, #0
 15448 1678 C7F89430 		str	r3, [r7, #148]
 15449 167c 24E0     		b	.L638
 15450              	.L639:
2263:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 15451              		.loc 1 2263 0 discriminator 3
 15452 167e D7F89430 		ldr	r3, [r7, #148]
 15453 1682 591C     		adds	r1, r3, #1
 15454 1684 6A4A     		ldr	r2, .L672+24
 15455 1686 D7F89430 		ldr	r3, [r7, #148]
 15456 168a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15457 168e 07F11C00 		add	r0, r7, #28
 15458 1692 0A46     		mov	r2, r1
 15459 1694 6849     		ldr	r1, .L672+32
 15460 1696 FFF7FEFF 		bl	sprintf
2264:..\src/command_processing.c ****                 strcat(info_string, str);
 15461              		.loc 1 2264 0 discriminator 3
 15462 169a 07F11C03 		add	r3, r7, #28
 15463 169e 1946     		mov	r1, r3
 15464 16a0 7869     		ldr	r0, [r7, #20]
 15465 16a2 FFF7FEFF 		bl	strcat
2265:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 15466              		.loc 1 2265 0 discriminator 3
 15467 16a6 7869     		ldr	r0, [r7, #20]
 15468 16a8 FFF7FEFF 		bl	strlen
 15469 16ac 0346     		mov	r3, r0
 15470 16ae 1A46     		mov	r2, r3
 15471 16b0 7B69     		ldr	r3, [r7, #20]
 15472 16b2 1344     		add	r3, r3, r2
 15473 16b4 5C4A     		ldr	r2, .L672+16
 15474 16b6 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 351


 15475 16b8 9278     		ldrb	r2, [r2, #2]
 15476 16ba 1980     		strh	r1, [r3]	@ unaligned
 15477 16bc 9A70     		strb	r2, [r3, #2]
2262:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 15478              		.loc 1 2262 0 discriminator 3
 15479 16be D7F89430 		ldr	r3, [r7, #148]
 15480 16c2 0133     		adds	r3, r3, #1
 15481 16c4 C7F89430 		str	r3, [r7, #148]
 15482              	.L638:
2262:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 15483              		.loc 1 2262 0 is_stmt 0 discriminator 1
 15484 16c8 D7F89430 		ldr	r3, [r7, #148]
 15485 16cc 012B     		cmp	r3, #1
 15486 16ce D6DD     		ble	.L639
 15487              	.L635:
2266:..\src/command_processing.c ****             }
2267:..\src/command_processing.c ****         }
2268:..\src/command_processing.c **** 
2269:..\src/command_processing.c **** #ifdef GENERIC_FW
2270:..\src/command_processing.c ****     
2271:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2272:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
2273:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
2274:..\src/command_processing.c ****         strcat(info_string, str);
2275:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2276:..\src/command_processing.c **** 
2277:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
2278:..\src/command_processing.c ****         strcat(info_string, str);
2279:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2280:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
2281:..\src/command_processing.c ****         strcat(info_string, str);
2282:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2283:..\src/command_processing.c **** 
2284:..\src/command_processing.c **** #endif
2285:..\src/command_processing.c ****         
2286:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 15488              		.loc 1 2286 0 is_stmt 1
 15489 16d0 D7F88C30 		ldr	r3, [r7, #140]
 15490 16d4 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 15491 16d8 002B     		cmp	r3, #0
 15492 16da 63D0     		beq	.L640
2287:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 15493              		.loc 1 2287 0
 15494 16dc D7F88C30 		ldr	r3, [r7, #140]
 15495 16e0 D3F8A422 		ldr	r2, [r3, #676]
 15496 16e4 07F11C03 		add	r3, r7, #28
 15497 16e8 5449     		ldr	r1, .L672+36
 15498 16ea 1846     		mov	r0, r3
 15499 16ec FFF7FEFF 		bl	sprintf
2288:..\src/command_processing.c ****             strcat(info_string, str);
 15500              		.loc 1 2288 0
 15501 16f0 07F11C03 		add	r3, r7, #28
 15502 16f4 1946     		mov	r1, r3
 15503 16f6 7869     		ldr	r0, [r7, #20]
 15504 16f8 FFF7FEFF 		bl	strcat
2289:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15505              		.loc 1 2289 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 352


 15506 16fc 7869     		ldr	r0, [r7, #20]
 15507 16fe FFF7FEFF 		bl	strlen
 15508 1702 0346     		mov	r3, r0
 15509 1704 1A46     		mov	r2, r3
 15510 1706 7B69     		ldr	r3, [r7, #20]
 15511 1708 1344     		add	r3, r3, r2
 15512 170a 474A     		ldr	r2, .L672+16
 15513 170c 1188     		ldrh	r1, [r2]	@ unaligned
 15514 170e 9278     		ldrb	r2, [r2, #2]
 15515 1710 1980     		strh	r1, [r3]	@ unaligned
 15516 1712 9A70     		strb	r2, [r3, #2]
2290:..\src/command_processing.c ****             
2291:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 15517              		.loc 1 2291 0
 15518 1714 D7F88C30 		ldr	r3, [r7, #140]
 15519 1718 D3F8A822 		ldr	r2, [r3, #680]
 15520 171c 07F11C03 		add	r3, r7, #28
 15521 1720 4749     		ldr	r1, .L672+40
 15522 1722 1846     		mov	r0, r3
 15523 1724 FFF7FEFF 		bl	sprintf
2292:..\src/command_processing.c ****             strcat(info_string, str);
 15524              		.loc 1 2292 0
 15525 1728 07F11C03 		add	r3, r7, #28
 15526 172c 1946     		mov	r1, r3
 15527 172e 7869     		ldr	r0, [r7, #20]
 15528 1730 FFF7FEFF 		bl	strcat
2293:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15529              		.loc 1 2293 0
 15530 1734 7869     		ldr	r0, [r7, #20]
 15531 1736 FFF7FEFF 		bl	strlen
 15532 173a 0346     		mov	r3, r0
 15533 173c 1A46     		mov	r2, r3
 15534 173e 7B69     		ldr	r3, [r7, #20]
 15535 1740 1344     		add	r3, r3, r2
 15536 1742 394A     		ldr	r2, .L672+16
 15537 1744 1188     		ldrh	r1, [r2]	@ unaligned
 15538 1746 9278     		ldrb	r2, [r2, #2]
 15539 1748 1980     		strh	r1, [r3]	@ unaligned
 15540 174a 9A70     		strb	r2, [r3, #2]
2294:..\src/command_processing.c ****             
2295:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 15541              		.loc 1 2295 0
 15542 174c D7F88C30 		ldr	r3, [r7, #140]
 15543 1750 D3F8A022 		ldr	r2, [r3, #672]
 15544 1754 D7F88C30 		ldr	r3, [r7, #140]
 15545 1758 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 15546 175c 1846     		mov	r0, r3
 15547 175e D7F88C10 		ldr	r1, [r7, #140]
 15548 1762 0346     		mov	r3, r0
 15549 1764 5B00     		lsls	r3, r3, #1
 15550 1766 0344     		add	r3, r3, r0
 15551 1768 1B01     		lsls	r3, r3, #4
 15552 176a 0B44     		add	r3, r3, r1
 15553 176c 03F29513 		addw	r3, r3, #405
 15554 1770 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15555 1772 1A41     		asrs	r2, r2, r3
 15556 1774 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 353


 15557 1778 3249     		ldr	r1, .L672+44
 15558 177a 1846     		mov	r0, r3
 15559 177c FFF7FEFF 		bl	sprintf
2296:..\src/command_processing.c ****             strcat(info_string, str);
 15560              		.loc 1 2296 0
 15561 1780 07F11C03 		add	r3, r7, #28
 15562 1784 1946     		mov	r1, r3
 15563 1786 7869     		ldr	r0, [r7, #20]
 15564 1788 FFF7FEFF 		bl	strcat
2297:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 15565              		.loc 1 2297 0
 15566 178c 7869     		ldr	r0, [r7, #20]
 15567 178e FFF7FEFF 		bl	strlen
 15568 1792 0346     		mov	r3, r0
 15569 1794 1A46     		mov	r2, r3
 15570 1796 7B69     		ldr	r3, [r7, #20]
 15571 1798 1344     		add	r3, r3, r2
 15572 179a 234A     		ldr	r2, .L672+16
 15573 179c 1188     		ldrh	r1, [r2]	@ unaligned
 15574 179e 9278     		ldrb	r2, [r2, #2]
 15575 17a0 1980     		strh	r1, [r3]	@ unaligned
 15576 17a2 9A70     		strb	r2, [r3, #2]
 15577              	.L640:
2298:..\src/command_processing.c ****         }
2299:..\src/command_processing.c **** 
2300:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 15578              		.loc 1 2300 0
 15579 17a4 D7F88C30 		ldr	r3, [r7, #140]
 15580 17a8 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 15581 17ac 002B     		cmp	r3, #0
 15582 17ae 00F0CD81 		beq	.L641
2301:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 15583              		.loc 1 2301 0
 15584 17b2 254B     		ldr	r3, .L672+48
 15585 17b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15586 17b6 1A46     		mov	r2, r3
 15587 17b8 07F11C03 		add	r3, r7, #28
 15588 17bc 2349     		ldr	r1, .L672+52
 15589 17be 1846     		mov	r0, r3
 15590 17c0 FFF7FEFF 		bl	sprintf
2302:..\src/command_processing.c ****             strcat(info_string, str);
 15591              		.loc 1 2302 0
 15592 17c4 07F11C03 		add	r3, r7, #28
 15593 17c8 1946     		mov	r1, r3
 15594 17ca 7869     		ldr	r0, [r7, #20]
 15595 17cc FFF7FEFF 		bl	strcat
2303:..\src/command_processing.c ****             
2304:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15596              		.loc 1 2304 0
 15597 17d0 7869     		ldr	r0, [r7, #20]
 15598 17d2 FFF7FEFF 		bl	strlen
 15599 17d6 0346     		mov	r3, r0
 15600 17d8 1A46     		mov	r2, r3
 15601 17da 7B69     		ldr	r3, [r7, #20]
 15602 17dc 1344     		add	r3, r3, r2
 15603 17de 124A     		ldr	r2, .L672+16
 15604 17e0 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 354


 15605 17e2 9278     		ldrb	r2, [r2, #2]
 15606 17e4 1980     		strh	r1, [r3]	@ unaligned
 15607 17e6 9A70     		strb	r2, [r3, #2]
2305:..\src/command_processing.c ****             
2306:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 15608              		.loc 1 2306 0
 15609 17e8 7869     		ldr	r0, [r7, #20]
 15610 17ea FFF7FEFF 		bl	strlen
 15611 17ee 0346     		mov	r3, r0
 15612 17f0 1A46     		mov	r2, r3
 15613 17f2 7B69     		ldr	r3, [r7, #20]
 15614 17f4 1344     		add	r3, r3, r2
 15615 17f6 164A     		ldr	r2, .L672+56
 15616 17f8 1D46     		mov	r5, r3
 15617 17fa 1446     		mov	r4, r2
 15618 17fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15619 17fe 2860     		str	r0, [r5]	@ unaligned
 15620 1800 6960     		str	r1, [r5, #4]	@ unaligned
 15621 1802 AA60     		str	r2, [r5, #8]	@ unaligned
 15622 1804 EB60     		str	r3, [r5, #12]	@ unaligned
 15623 1806 2068     		ldr	r0, [r4]	@ unaligned
 15624 1808 2861     		str	r0, [r5, #16]	@ unaligned
 15625 180a 2379     		ldrb	r3, [r4, #4]
 15626 180c 2B75     		strb	r3, [r5, #20]
2307:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 15627              		.loc 1 2307 0
 15628 180e 0023     		movs	r3, #0
 15629 1810 C7F89430 		str	r3, [r7, #148]
 15630 1814 83E1     		b	.L642
 15631              	.L673:
 15632 1816 00BF     		.align	2
 15633              	.L672:
 15634 1818 0C180000 		.word	.LC228
 15635 181c 20180000 		.word	.LC229
 15636 1820 3C180000 		.word	.LC230
 15637 1824 58180000 		.word	.LC231
 15638 1828 58110000 		.word	.LC152
 15639 182c 70180000 		.word	.LC232
 15640 1830 00000000 		.word	g_adc_meas
 15641 1834 90180000 		.word	.LC233
 15642 1838 A0180000 		.word	.LC234
 15643 183c B4180000 		.word	.LC235
 15644 1840 D0180000 		.word	.LC236
 15645 1844 F8180000 		.word	.LC237
 15646 1848 00000000 		.word	N_IMU_Connected
 15647 184c 0C190000 		.word	.LC238
 15648 1850 20190000 		.word	.LC239
 15649              	.L653:
2308:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 15650              		.loc 1 2308 0
 15651 1854 D54A     		ldr	r2, .L674
 15652 1856 D7F89430 		ldr	r3, [r7, #148]
 15653 185a 1344     		add	r3, r3, r2
 15654 185c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15655 185e 07F11C00 		add	r0, r7, #28
 15656 1862 D7F89420 		ldr	r2, [r7, #148]
 15657 1866 D249     		ldr	r1, .L674+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 355


 15658 1868 FFF7FEFF 		bl	sprintf
2309:..\src/command_processing.c ****                 strcat(info_string, str);
 15659              		.loc 1 2309 0
 15660 186c 07F11C03 		add	r3, r7, #28
 15661 1870 1946     		mov	r1, r3
 15662 1872 7869     		ldr	r0, [r7, #20]
 15663 1874 FFF7FEFF 		bl	strcat
2310:..\src/command_processing.c ****                 
2311:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 15664              		.loc 1 2311 0
 15665 1878 07F11C03 		add	r3, r7, #28
 15666 187c CD4A     		ldr	r2, .L674+8
 15667 187e 1C46     		mov	r4, r3
 15668 1880 1546     		mov	r5, r2
 15669 1882 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15670 1884 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 15671 1886 2B68     		ldr	r3, [r5]
 15672 1888 2380     		strh	r3, [r4]	@ movhi
2312:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 15673              		.loc 1 2312 0
 15674 188a C84A     		ldr	r2, .L674
 15675 188c D7F89430 		ldr	r3, [r7, #148]
 15676 1890 1344     		add	r3, r3, r2
 15677 1892 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15678 1894 1946     		mov	r1, r3
 15679 1896 D7F88C20 		ldr	r2, [r7, #140]
 15680 189a 0B46     		mov	r3, r1
 15681 189c 9B00     		lsls	r3, r3, #2
 15682 189e 0B44     		add	r3, r3, r1
 15683 18a0 1344     		add	r3, r3, r2
 15684 18a2 03F20223 		addw	r3, r3, #514
 15685 18a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15686 18a8 002B     		cmp	r3, #0
 15687 18aa 0FD0     		beq	.L643
2313:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 15688              		.loc 1 2313 0
 15689 18ac 07F11C03 		add	r3, r7, #28
 15690 18b0 1846     		mov	r0, r3
 15691 18b2 FFF7FEFF 		bl	strlen
 15692 18b6 0346     		mov	r3, r0
 15693 18b8 1A46     		mov	r2, r3
 15694 18ba 07F11C03 		add	r3, r7, #28
 15695 18be 1344     		add	r3, r3, r2
 15696 18c0 BD4A     		ldr	r2, .L674+12
 15697 18c2 1068     		ldr	r0, [r2]	@ unaligned
 15698 18c4 1860     		str	r0, [r3]	@ unaligned
 15699 18c6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15700 18c8 9A80     		strh	r2, [r3, #4]	@ unaligned
 15701 18ca 0EE0     		b	.L644
 15702              	.L643:
2314:..\src/command_processing.c ****                 else
2315:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 15703              		.loc 1 2315 0
 15704 18cc 07F11C03 		add	r3, r7, #28
 15705 18d0 1846     		mov	r0, r3
 15706 18d2 FFF7FEFF 		bl	strlen
 15707 18d6 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 356


 15708 18d8 1A46     		mov	r2, r3
 15709 18da 07F11C03 		add	r3, r7, #28
 15710 18de 1344     		add	r3, r3, r2
 15711 18e0 B64A     		ldr	r2, .L674+16
 15712 18e2 1068     		ldr	r0, [r2]	@ unaligned
 15713 18e4 1860     		str	r0, [r3]	@ unaligned
 15714 18e6 1279     		ldrb	r2, [r2, #4]
 15715 18e8 1A71     		strb	r2, [r3, #4]
 15716              	.L644:
2316:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 15717              		.loc 1 2316 0
 15718 18ea 07F11C03 		add	r3, r7, #28
 15719 18ee 1846     		mov	r0, r3
 15720 18f0 FFF7FEFF 		bl	strlen
 15721 18f4 0346     		mov	r3, r0
 15722 18f6 1A46     		mov	r2, r3
 15723 18f8 07F11C03 		add	r3, r7, #28
 15724 18fc 1344     		add	r3, r3, r2
 15725 18fe B04A     		ldr	r2, .L674+20
 15726 1900 1C46     		mov	r4, r3
 15727 1902 1346     		mov	r3, r2
 15728 1904 07CB     		ldmia	r3!, {r0, r1, r2}
 15729 1906 2060     		str	r0, [r4]	@ unaligned
 15730 1908 6160     		str	r1, [r4, #4]	@ unaligned
 15731 190a A260     		str	r2, [r4, #8]	@ unaligned
 15732 190c 1B88     		ldrh	r3, [r3]	@ unaligned
 15733 190e A381     		strh	r3, [r4, #12]	@ unaligned
2317:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 15734              		.loc 1 2317 0
 15735 1910 A64A     		ldr	r2, .L674
 15736 1912 D7F89430 		ldr	r3, [r7, #148]
 15737 1916 1344     		add	r3, r3, r2
 15738 1918 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15739 191a 1946     		mov	r1, r3
 15740 191c D7F88C20 		ldr	r2, [r7, #140]
 15741 1920 0B46     		mov	r3, r1
 15742 1922 9B00     		lsls	r3, r3, #2
 15743 1924 0B44     		add	r3, r3, r1
 15744 1926 1344     		add	r3, r3, r2
 15745 1928 03F20323 		addw	r3, r3, #515
 15746 192c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15747 192e 002B     		cmp	r3, #0
 15748 1930 0FD0     		beq	.L645
2318:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 15749              		.loc 1 2318 0
 15750 1932 07F11C03 		add	r3, r7, #28
 15751 1936 1846     		mov	r0, r3
 15752 1938 FFF7FEFF 		bl	strlen
 15753 193c 0346     		mov	r3, r0
 15754 193e 1A46     		mov	r2, r3
 15755 1940 07F11C03 		add	r3, r7, #28
 15756 1944 1344     		add	r3, r3, r2
 15757 1946 9C4A     		ldr	r2, .L674+12
 15758 1948 1068     		ldr	r0, [r2]	@ unaligned
 15759 194a 1860     		str	r0, [r3]	@ unaligned
 15760 194c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15761 194e 9A80     		strh	r2, [r3, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 357


 15762 1950 0EE0     		b	.L646
 15763              	.L645:
2319:..\src/command_processing.c ****                 else
2320:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 15764              		.loc 1 2320 0
 15765 1952 07F11C03 		add	r3, r7, #28
 15766 1956 1846     		mov	r0, r3
 15767 1958 FFF7FEFF 		bl	strlen
 15768 195c 0346     		mov	r3, r0
 15769 195e 1A46     		mov	r2, r3
 15770 1960 07F11C03 		add	r3, r7, #28
 15771 1964 1344     		add	r3, r3, r2
 15772 1966 954A     		ldr	r2, .L674+16
 15773 1968 1068     		ldr	r0, [r2]	@ unaligned
 15774 196a 1860     		str	r0, [r3]	@ unaligned
 15775 196c 1279     		ldrb	r2, [r2, #4]
 15776 196e 1A71     		strb	r2, [r3, #4]
 15777              	.L646:
2321:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 15778              		.loc 1 2321 0
 15779 1970 07F11C03 		add	r3, r7, #28
 15780 1974 1846     		mov	r0, r3
 15781 1976 FFF7FEFF 		bl	strlen
 15782 197a 0346     		mov	r3, r0
 15783 197c 1A46     		mov	r2, r3
 15784 197e 07F11C03 		add	r3, r7, #28
 15785 1982 1344     		add	r3, r3, r2
 15786 1984 8F4A     		ldr	r2, .L674+24
 15787 1986 1D46     		mov	r5, r3
 15788 1988 1446     		mov	r4, r2
 15789 198a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15790 198c 2860     		str	r0, [r5]	@ unaligned
 15791 198e 6960     		str	r1, [r5, #4]	@ unaligned
 15792 1990 AA60     		str	r2, [r5, #8]	@ unaligned
 15793 1992 EB60     		str	r3, [r5, #12]	@ unaligned
 15794 1994 2378     		ldrb	r3, [r4]
 15795 1996 2B74     		strb	r3, [r5, #16]
2322:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 15796              		.loc 1 2322 0
 15797 1998 844A     		ldr	r2, .L674
 15798 199a D7F89430 		ldr	r3, [r7, #148]
 15799 199e 1344     		add	r3, r3, r2
 15800 19a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15801 19a2 1946     		mov	r1, r3
 15802 19a4 D7F88C20 		ldr	r2, [r7, #140]
 15803 19a8 0B46     		mov	r3, r1
 15804 19aa 9B00     		lsls	r3, r3, #2
 15805 19ac 0B44     		add	r3, r3, r1
 15806 19ae 1344     		add	r3, r3, r2
 15807 19b0 03F50173 		add	r3, r3, #516
 15808 19b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15809 19b6 002B     		cmp	r3, #0
 15810 19b8 0FD0     		beq	.L647
2323:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 15811              		.loc 1 2323 0
 15812 19ba 07F11C03 		add	r3, r7, #28
 15813 19be 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 358


 15814 19c0 FFF7FEFF 		bl	strlen
 15815 19c4 0346     		mov	r3, r0
 15816 19c6 1A46     		mov	r2, r3
 15817 19c8 07F11C03 		add	r3, r7, #28
 15818 19cc 1344     		add	r3, r3, r2
 15819 19ce 7A4A     		ldr	r2, .L674+12
 15820 19d0 1068     		ldr	r0, [r2]	@ unaligned
 15821 19d2 1860     		str	r0, [r3]	@ unaligned
 15822 19d4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15823 19d6 9A80     		strh	r2, [r3, #4]	@ unaligned
 15824 19d8 0EE0     		b	.L648
 15825              	.L647:
2324:..\src/command_processing.c ****                 else
2325:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 15826              		.loc 1 2325 0
 15827 19da 07F11C03 		add	r3, r7, #28
 15828 19de 1846     		mov	r0, r3
 15829 19e0 FFF7FEFF 		bl	strlen
 15830 19e4 0346     		mov	r3, r0
 15831 19e6 1A46     		mov	r2, r3
 15832 19e8 07F11C03 		add	r3, r7, #28
 15833 19ec 1344     		add	r3, r3, r2
 15834 19ee 734A     		ldr	r2, .L674+16
 15835 19f0 1068     		ldr	r0, [r2]	@ unaligned
 15836 19f2 1860     		str	r0, [r3]	@ unaligned
 15837 19f4 1279     		ldrb	r2, [r2, #4]
 15838 19f6 1A71     		strb	r2, [r3, #4]
 15839              	.L648:
2326:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 15840              		.loc 1 2326 0
 15841 19f8 07F11C03 		add	r3, r7, #28
 15842 19fc 1846     		mov	r0, r3
 15843 19fe FFF7FEFF 		bl	strlen
 15844 1a02 0346     		mov	r3, r0
 15845 1a04 1A46     		mov	r2, r3
 15846 1a06 07F11C03 		add	r3, r7, #28
 15847 1a0a 1344     		add	r3, r3, r2
 15848 1a0c 6E4A     		ldr	r2, .L674+28
 15849 1a0e 1C46     		mov	r4, r3
 15850 1a10 1346     		mov	r3, r2
 15851 1a12 07CB     		ldmia	r3!, {r0, r1, r2}
 15852 1a14 2060     		str	r0, [r4]	@ unaligned
 15853 1a16 6160     		str	r1, [r4, #4]	@ unaligned
 15854 1a18 A260     		str	r2, [r4, #8]	@ unaligned
 15855 1a1a 1B88     		ldrh	r3, [r3]	@ unaligned
 15856 1a1c A381     		strh	r3, [r4, #12]	@ unaligned
2327:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 15857              		.loc 1 2327 0
 15858 1a1e 634A     		ldr	r2, .L674
 15859 1a20 D7F89430 		ldr	r3, [r7, #148]
 15860 1a24 1344     		add	r3, r3, r2
 15861 1a26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15862 1a28 1946     		mov	r1, r3
 15863 1a2a D7F88C20 		ldr	r2, [r7, #140]
 15864 1a2e 0B46     		mov	r3, r1
 15865 1a30 9B00     		lsls	r3, r3, #2
 15866 1a32 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 359


 15867 1a34 1344     		add	r3, r3, r2
 15868 1a36 03F20523 		addw	r3, r3, #517
 15869 1a3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15870 1a3c 002B     		cmp	r3, #0
 15871 1a3e 0FD0     		beq	.L649
2328:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 15872              		.loc 1 2328 0
 15873 1a40 07F11C03 		add	r3, r7, #28
 15874 1a44 1846     		mov	r0, r3
 15875 1a46 FFF7FEFF 		bl	strlen
 15876 1a4a 0346     		mov	r3, r0
 15877 1a4c 1A46     		mov	r2, r3
 15878 1a4e 07F11C03 		add	r3, r7, #28
 15879 1a52 1344     		add	r3, r3, r2
 15880 1a54 584A     		ldr	r2, .L674+12
 15881 1a56 1068     		ldr	r0, [r2]	@ unaligned
 15882 1a58 1860     		str	r0, [r3]	@ unaligned
 15883 1a5a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15884 1a5c 9A80     		strh	r2, [r3, #4]	@ unaligned
 15885 1a5e 0EE0     		b	.L650
 15886              	.L649:
2329:..\src/command_processing.c ****                 else
2330:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 15887              		.loc 1 2330 0
 15888 1a60 07F11C03 		add	r3, r7, #28
 15889 1a64 1846     		mov	r0, r3
 15890 1a66 FFF7FEFF 		bl	strlen
 15891 1a6a 0346     		mov	r3, r0
 15892 1a6c 1A46     		mov	r2, r3
 15893 1a6e 07F11C03 		add	r3, r7, #28
 15894 1a72 1344     		add	r3, r3, r2
 15895 1a74 514A     		ldr	r2, .L674+16
 15896 1a76 1068     		ldr	r0, [r2]	@ unaligned
 15897 1a78 1860     		str	r0, [r3]	@ unaligned
 15898 1a7a 1279     		ldrb	r2, [r2, #4]
 15899 1a7c 1A71     		strb	r2, [r3, #4]
 15900              	.L650:
2331:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 15901              		.loc 1 2331 0
 15902 1a7e 07F11C03 		add	r3, r7, #28
 15903 1a82 1846     		mov	r0, r3
 15904 1a84 FFF7FEFF 		bl	strlen
 15905 1a88 0346     		mov	r3, r0
 15906 1a8a 1A46     		mov	r2, r3
 15907 1a8c 07F11C03 		add	r3, r7, #28
 15908 1a90 1344     		add	r3, r3, r2
 15909 1a92 4E4A     		ldr	r2, .L674+32
 15910 1a94 1C46     		mov	r4, r3
 15911 1a96 1346     		mov	r3, r2
 15912 1a98 07CB     		ldmia	r3!, {r0, r1, r2}
 15913 1a9a 2060     		str	r0, [r4]	@ unaligned
 15914 1a9c 6160     		str	r1, [r4, #4]	@ unaligned
 15915 1a9e A260     		str	r2, [r4, #8]	@ unaligned
 15916 1aa0 1A88     		ldrh	r2, [r3]	@ unaligned
 15917 1aa2 9B78     		ldrb	r3, [r3, #2]
 15918 1aa4 A281     		strh	r2, [r4, #12]	@ unaligned
 15919 1aa6 A373     		strb	r3, [r4, #14]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 360


2332:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 15920              		.loc 1 2332 0
 15921 1aa8 404A     		ldr	r2, .L674
 15922 1aaa D7F89430 		ldr	r3, [r7, #148]
 15923 1aae 1344     		add	r3, r3, r2
 15924 1ab0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15925 1ab2 1946     		mov	r1, r3
 15926 1ab4 D7F88C20 		ldr	r2, [r7, #140]
 15927 1ab8 0B46     		mov	r3, r1
 15928 1aba 9B00     		lsls	r3, r3, #2
 15929 1abc 0B44     		add	r3, r3, r1
 15930 1abe 1344     		add	r3, r3, r2
 15931 1ac0 03F20623 		addw	r3, r3, #518
 15932 1ac4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15933 1ac6 002B     		cmp	r3, #0
 15934 1ac8 0FD0     		beq	.L651
2333:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 15935              		.loc 1 2333 0
 15936 1aca 07F11C03 		add	r3, r7, #28
 15937 1ace 1846     		mov	r0, r3
 15938 1ad0 FFF7FEFF 		bl	strlen
 15939 1ad4 0346     		mov	r3, r0
 15940 1ad6 1A46     		mov	r2, r3
 15941 1ad8 07F11C03 		add	r3, r7, #28
 15942 1adc 1344     		add	r3, r3, r2
 15943 1ade 364A     		ldr	r2, .L674+12
 15944 1ae0 1068     		ldr	r0, [r2]	@ unaligned
 15945 1ae2 1860     		str	r0, [r3]	@ unaligned
 15946 1ae4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15947 1ae6 9A80     		strh	r2, [r3, #4]	@ unaligned
 15948 1ae8 0EE0     		b	.L652
 15949              	.L651:
2334:..\src/command_processing.c ****                 else
2335:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 15950              		.loc 1 2335 0
 15951 1aea 07F11C03 		add	r3, r7, #28
 15952 1aee 1846     		mov	r0, r3
 15953 1af0 FFF7FEFF 		bl	strlen
 15954 1af4 0346     		mov	r3, r0
 15955 1af6 1A46     		mov	r2, r3
 15956 1af8 07F11C03 		add	r3, r7, #28
 15957 1afc 1344     		add	r3, r3, r2
 15958 1afe 2F4A     		ldr	r2, .L674+16
 15959 1b00 1068     		ldr	r0, [r2]	@ unaligned
 15960 1b02 1860     		str	r0, [r3]	@ unaligned
 15961 1b04 1279     		ldrb	r2, [r2, #4]
 15962 1b06 1A71     		strb	r2, [r3, #4]
 15963              	.L652:
2336:..\src/command_processing.c ****                      
2337:..\src/command_processing.c ****                 strcat(info_string, str);
 15964              		.loc 1 2337 0 discriminator 2
 15965 1b08 07F11C03 		add	r3, r7, #28
 15966 1b0c 1946     		mov	r1, r3
 15967 1b0e 7869     		ldr	r0, [r7, #20]
 15968 1b10 FFF7FEFF 		bl	strcat
2307:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 15969              		.loc 1 2307 0 discriminator 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 361


 15970 1b14 D7F89430 		ldr	r3, [r7, #148]
 15971 1b18 0133     		adds	r3, r3, #1
 15972 1b1a C7F89430 		str	r3, [r7, #148]
 15973              	.L642:
2307:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 15974              		.loc 1 2307 0 is_stmt 0 discriminator 1
 15975 1b1e 2C4B     		ldr	r3, .L674+36
 15976 1b20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15977 1b22 1A46     		mov	r2, r3
 15978 1b24 D7F89430 		ldr	r3, [r7, #148]
 15979 1b28 9A42     		cmp	r2, r3
 15980 1b2a 3FF793AE 		bgt	.L653
2338:..\src/command_processing.c ****             }       
2339:..\src/command_processing.c ****             
2340:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15981              		.loc 1 2340 0 is_stmt 1
 15982 1b2e 7869     		ldr	r0, [r7, #20]
 15983 1b30 FFF7FEFF 		bl	strlen
 15984 1b34 0346     		mov	r3, r0
 15985 1b36 1A46     		mov	r2, r3
 15986 1b38 7B69     		ldr	r3, [r7, #20]
 15987 1b3a 1344     		add	r3, r3, r2
 15988 1b3c 254A     		ldr	r2, .L674+40
 15989 1b3e 1188     		ldrh	r1, [r2]	@ unaligned
 15990 1b40 9278     		ldrb	r2, [r2, #2]
 15991 1b42 1980     		strh	r1, [r3]	@ unaligned
 15992 1b44 9A70     		strb	r2, [r3, #2]
2341:..\src/command_processing.c ****           
2342:..\src/command_processing.c ****             IMU_reading_info(info_string);
 15993              		.loc 1 2342 0
 15994 1b46 7869     		ldr	r0, [r7, #20]
 15995 1b48 FFF7FEFF 		bl	IMU_reading_info
 15996              	.L641:
2343:..\src/command_processing.c ****         }
2344:..\src/command_processing.c ****         
2345:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15997              		.loc 1 2345 0
 15998 1b4c 7869     		ldr	r0, [r7, #20]
 15999 1b4e FFF7FEFF 		bl	strlen
 16000 1b52 0346     		mov	r3, r0
 16001 1b54 1A46     		mov	r2, r3
 16002 1b56 7B69     		ldr	r3, [r7, #20]
 16003 1b58 1344     		add	r3, r3, r2
 16004 1b5a 1E4A     		ldr	r2, .L674+40
 16005 1b5c 1188     		ldrh	r1, [r2]	@ unaligned
 16006 1b5e 9278     		ldrb	r2, [r2, #2]
 16007 1b60 1980     		strh	r1, [r3]	@ unaligned
 16008 1b62 9A70     		strb	r2, [r3, #2]
2346:..\src/command_processing.c **** 
2347:..\src/command_processing.c **** #ifdef GENERIC_FW   
2348:..\src/command_processing.c ****         int j;
2349:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
2350:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
2351:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
2352:..\src/command_processing.c ****             strcat(info_string, str);
2353:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
2354:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 362


2355:..\src/command_processing.c ****                 strcat(info_string, str);
2356:..\src/command_processing.c ****             }
2357:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2358:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
2359:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
2360:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
2361:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
2362:..\src/command_processing.c ****                     strcat(info_string, str);
2363:..\src/command_processing.c ****                 }
2364:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
2365:..\src/command_processing.c ****             }
2366:..\src/command_processing.c ****         }
2367:..\src/command_processing.c **** #endif   
2368:..\src/command_processing.c ****         
2369:..\src/command_processing.c **** #ifdef MASTER_FW
2370:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2371:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2372:..\src/command_processing.c ****         else
2373:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2374:..\src/command_processing.c **** 
2375:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2376:..\src/command_processing.c ****         strcat(info_string, str);
2377:..\src/command_processing.c **** #endif
2378:..\src/command_processing.c **** 
2379:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 16009              		.loc 1 2379 0
 16010 1b64 1C4B     		ldr	r3, .L674+44
 16011 1b66 1B88     		ldrh	r3, [r3]
 16012 1b68 1A46     		mov	r2, r3
 16013 1b6a 1C4B     		ldr	r3, .L674+48
 16014 1b6c 1B88     		ldrh	r3, [r3]
 16015 1b6e D21A     		subs	r2, r2, r3
 16016 1b70 07F11C03 		add	r3, r7, #28
 16017 1b74 1A49     		ldr	r1, .L674+52
 16018 1b76 1846     		mov	r0, r3
 16019 1b78 FFF7FEFF 		bl	sprintf
2380:..\src/command_processing.c ****         strcat(info_string, str);
 16020              		.loc 1 2380 0
 16021 1b7c 07F11C03 		add	r3, r7, #28
 16022 1b80 1946     		mov	r1, r3
 16023 1b82 7869     		ldr	r0, [r7, #20]
 16024 1b84 FFF7FEFF 		bl	strcat
2381:..\src/command_processing.c ****   
2382:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 16025              		.loc 1 2382 0
 16026 1b88 7869     		ldr	r0, [r7, #20]
 16027 1b8a FFF7FEFF 		bl	strlen
 16028 1b8e 0346     		mov	r3, r0
 16029 1b90 1A46     		mov	r2, r3
 16030 1b92 7B69     		ldr	r3, [r7, #20]
 16031 1b94 1344     		add	r3, r3, r2
 16032 1b96 134A     		ldr	r2, .L674+56
 16033 1b98 1188     		ldrh	r1, [r2]	@ unaligned
 16034 1b9a 9278     		ldrb	r2, [r2, #2]
 16035 1b9c 1980     		strh	r1, [r3]	@ unaligned
 16036 1b9e 9A70     		strb	r2, [r3, #2]
 16037              	.L655:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 363


 16038              	.LBE24:
2383:..\src/command_processing.c ****     }
2384:..\src/command_processing.c **** }
 16039              		.loc 1 2384 0
 16040 1ba0 00BF     		nop
 16041 1ba2 9C37     		adds	r7, r7, #156
 16042              		.cfi_def_cfa_offset 36
 16043 1ba4 BD46     		mov	sp, r7
 16044              		.cfi_def_cfa_register 13
 16045              		@ sp needed
 16046 1ba6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16047              	.L675:
 16048 1baa 00BF     		.align	2
 16049              	.L674:
 16050 1bac 00000000 		.word	IMU_connected
 16051 1bb0 38190000 		.word	.LC240
 16052 1bb4 4C190000 		.word	.LC241
 16053 1bb8 1C130000 		.word	.LC175
 16054 1bbc 24130000 		.word	.LC176
 16055 1bc0 60190000 		.word	.LC242
 16056 1bc4 70190000 		.word	.LC243
 16057 1bc8 84190000 		.word	.LC244
 16058 1bcc 94190000 		.word	.LC245
 16059 1bd0 00000000 		.word	N_IMU_Connected
 16060 1bd4 58110000 		.word	.LC152
 16061 1bd8 00000000 		.word	timer_value0
 16062 1bdc 00000000 		.word	timer_value
 16063 1be0 A4190000 		.word	.LC246
 16064 1be4 C0190000 		.word	.LC247
 16065              		.cfi_endproc
 16066              	.LFE72:
 16067              		.size	prepare_generic_info, .-prepare_generic_info
 16068              		.section	.rodata
 16069              		.align	2
 16070              	.LC248:
 16071 19c4 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 16071      41474520 
 16071      53544154 
 16071      49535449 
 16071      43530D0A 
 16072 19d9 000000   		.align	2
 16073              	.LC249:
 16074 19dc 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 16074      206F6620 
 16074      4857206D 
 16074      61696E74 
 16074      656E616E 
 16075 1a07 00       		.align	2
 16076              	.LC250:
 16077 1a08 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 16077      206F6620 
 16077      75736167 
 16077      65207374 
 16077      61747320 
 16078 1a3b 0A00     		.ascii	"\012\000"
 16079 1a3d 000000   		.align	2
 16080              	.LC251:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 364


 16081 1a40 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 16081      20636865 
 16081      636B6564 
 16081      2054696D 
 16081      653A2025 
 16082 1a73 0A00     		.ascii	"\012\000"
 16083 1a75 000000   		.align	2
 16084              	.LC252:
 16085 1a78 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 16085      74696F6E 
 16085      73206869 
 16085      73746F67 
 16085      72616D20 
 16086 1a97 00       		.align	2
 16087              	.LC253:
 16088 1a98 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 16088      2564205B 
 16088      25642D25 
 16088      645D3A20 
 16088      256C750D 
 16089 1aae 0000     		.align	2
 16090              	.LC254:
 16091 1ab0 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 16091      656E7420 
 16091      68697374 
 16091      6F677261 
 16091      6D20286D 
 16092 1aca 0000     		.align	2
 16093              	.LC255:
 16094 1acc 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 16094      73686F6C 
 16094      64202564 
 16094      205B2564 
 16094      2D25645D 
 16095              		.align	2
 16096              	.LC256:
 16097 1ae8 4D6F7469 		.ascii	"Motions through EMG counter: %lu, %lu\000"
 16097      6F6E7320 
 16097      7468726F 
 16097      75676820 
 16097      454D4720 
 16098 1b0e 0000     		.align	2
 16099              	.LC257:
 16100 1b10 52657374 		.ascii	"Rest position occurrences: %lu\000"
 16100      20706F73 
 16100      6974696F 
 16100      6E206F63 
 16100      63757272 
 16101 1b2f 00       		.align	2
 16102              	.LC258:
 16103 1b30 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 16103      6520746F 
 16103      74616C20 
 16103      64697370 
 16103      6C616365 
 16104 1b56 0000     		.align	2
 16105              	.LC259:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 365


 16106 1b58 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 16106      6C20706F 
 16106      77657220 
 16106      6F6E2074 
 16106      696D6520 
 16107 1b77 00       		.align	2
 16108              	.LC260:
 16109 1b78 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 16109      6C207265 
 16109      73742070 
 16109      6F736974 
 16109      696F6E20 
 16110              		.section	.text.prepare_counter_info,"ax",%progbits
 16111              		.align	2
 16112              		.global	prepare_counter_info
 16113              		.thumb
 16114              		.thumb_func
 16115              		.type	prepare_counter_info, %function
 16116              	prepare_counter_info:
 16117              	.LFB73:
2385:..\src/command_processing.c **** 
2386:..\src/command_processing.c **** //==============================================================================
2387:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2388:..\src/command_processing.c **** //==============================================================================
2389:..\src/command_processing.c **** 
2390:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2391:..\src/command_processing.c **** {
 16118              		.loc 1 2391 0
 16119              		.cfi_startproc
 16120              		@ args = 0, pretend = 0, frame = 432
 16121              		@ frame_needed = 1, uses_anonymous_args = 0
 16122 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 16123              		.cfi_def_cfa_offset 20
 16124              		.cfi_offset 4, -20
 16125              		.cfi_offset 5, -16
 16126              		.cfi_offset 6, -12
 16127              		.cfi_offset 7, -8
 16128              		.cfi_offset 14, -4
 16129 0002 F1B0     		sub	sp, sp, #452
 16130              		.cfi_def_cfa_offset 472
 16131 0004 04AF     		add	r7, sp, #16
 16132              		.cfi_def_cfa 7, 456
 16133 0006 3B1D     		adds	r3, r7, #4
 16134 0008 1860     		str	r0, [r3]
2392:..\src/command_processing.c ****     char str[100];  
2393:..\src/command_processing.c ****     int i;
2394:..\src/command_processing.c ****     int step;
2395:..\src/command_processing.c **** 
2396:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 16135              		.loc 1 2396 0
 16136 000a 964B     		ldr	r3, .L682
 16137 000c C7F8A831 		str	r3, [r7, #424]
2397:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 16138              		.loc 1 2397 0
 16139 0010 D7F8A831 		ldr	r3, [r7, #424]
 16140 0014 B033     		adds	r3, r3, #176
 16141 0016 C7F8A431 		str	r3, [r7, #420]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 366


2398:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 16142              		.loc 1 2398 0
 16143 001a D7F8A431 		ldr	r3, [r7, #420]
 16144 001e 93F86030 		ldrb	r3, [r3, #96]
 16145 0022 87F8A331 		strb	r3, [r7, #419]
2399:..\src/command_processing.c ****     
2400:..\src/command_processing.c ****     strcpy(info_string, "");
 16146              		.loc 1 2400 0
 16147 0026 3B1D     		adds	r3, r7, #4
 16148 0028 1B68     		ldr	r3, [r3]
 16149 002a 0022     		movs	r2, #0
 16150 002c 1A70     		strb	r2, [r3]
2401:..\src/command_processing.c ****     
2402:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 16151              		.loc 1 2402 0
 16152 002e 3B1D     		adds	r3, r7, #4
 16153 0030 1868     		ldr	r0, [r3]
 16154 0032 FFF7FEFF 		bl	strlen
 16155 0036 0346     		mov	r3, r0
 16156 0038 1A46     		mov	r2, r3
 16157 003a 3B1D     		adds	r3, r7, #4
 16158 003c 1B68     		ldr	r3, [r3]
 16159 003e 1344     		add	r3, r3, r2
 16160 0040 894A     		ldr	r2, .L682+4
 16161 0042 1D46     		mov	r5, r3
 16162 0044 1446     		mov	r4, r2
 16163 0046 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16164 0048 2860     		str	r0, [r5]	@ unaligned
 16165 004a 6960     		str	r1, [r5, #4]	@ unaligned
 16166 004c AA60     		str	r2, [r5, #8]	@ unaligned
 16167 004e EB60     		str	r3, [r5, #12]	@ unaligned
 16168 0050 2068     		ldr	r0, [r4]	@ unaligned
 16169 0052 2861     		str	r0, [r5, #16]	@ unaligned
 16170 0054 2379     		ldrb	r3, [r4, #4]
 16171 0056 2B75     		strb	r3, [r5, #20]
2403:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16172              		.loc 1 2403 0
 16173 0058 3B1D     		adds	r3, r7, #4
 16174 005a 1868     		ldr	r0, [r3]
 16175 005c FFF7FEFF 		bl	strlen
 16176 0060 0346     		mov	r3, r0
 16177 0062 1A46     		mov	r2, r3
 16178 0064 3B1D     		adds	r3, r7, #4
 16179 0066 1B68     		ldr	r3, [r3]
 16180 0068 1344     		add	r3, r3, r2
 16181 006a 804A     		ldr	r2, .L682+8
 16182 006c 1188     		ldrh	r1, [r2]	@ unaligned
 16183 006e 9278     		ldrb	r2, [r2, #2]
 16184 0070 1980     		strh	r1, [r3]	@ unaligned
 16185 0072 9A70     		strb	r2, [r3, #2]
2404:..\src/command_processing.c ****     
2405:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 16186              		.loc 1 2405 0
 16187 0074 D7F8A831 		ldr	r3, [r7, #424]
 16188 0078 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 16189 007c 1A46     		mov	r2, r3
 16190 007e D7F8A831 		ldr	r3, [r7, #424]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 367


 16191 0082 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 16192 0086 1946     		mov	r1, r3
 16193 0088 D7F8A831 		ldr	r3, [r7, #424]
 16194 008c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 16195 0090 07F59C70 		add	r0, r7, #312
 16196 0094 0093     		str	r3, [sp]
 16197 0096 0B46     		mov	r3, r1
 16198 0098 7549     		ldr	r1, .L682+12
 16199 009a FFF7FEFF 		bl	sprintf
2406:..\src/command_processing.c ****     strcat(info_string, str);
 16200              		.loc 1 2406 0
 16201 009e 07F59C72 		add	r2, r7, #312
 16202 00a2 3B1D     		adds	r3, r7, #4
 16203 00a4 1146     		mov	r1, r2
 16204 00a6 1868     		ldr	r0, [r3]
 16205 00a8 FFF7FEFF 		bl	strcat
2407:..\src/command_processing.c ****     
2408:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 16206              		.loc 1 2408 0
 16207 00ac D7F8A831 		ldr	r3, [r7, #424]
 16208 00b0 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 16209 00b4 1A46     		mov	r2, r3
 16210 00b6 D7F8A831 		ldr	r3, [r7, #424]
 16211 00ba 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 16212 00be 1946     		mov	r1, r3
 16213 00c0 D7F8A831 		ldr	r3, [r7, #424]
 16214 00c4 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 16215 00c8 07F59C70 		add	r0, r7, #312
 16216 00cc 0093     		str	r3, [sp]
 16217 00ce 0B46     		mov	r3, r1
 16218 00d0 6849     		ldr	r1, .L682+16
 16219 00d2 FFF7FEFF 		bl	sprintf
2409:..\src/command_processing.c ****     strcat(info_string, str);
 16220              		.loc 1 2409 0
 16221 00d6 07F59C72 		add	r2, r7, #312
 16222 00da 3B1D     		adds	r3, r7, #4
 16223 00dc 1146     		mov	r1, r2
 16224 00de 1868     		ldr	r0, [r3]
 16225 00e0 FFF7FEFF 		bl	strcat
2410:..\src/command_processing.c ****             
2411:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 16226              		.loc 1 2411 0
 16227 00e4 D7F8A831 		ldr	r3, [r7, #424]
 16228 00e8 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 16229 00ec 1D46     		mov	r5, r3
 16230 00ee D7F8A831 		ldr	r3, [r7, #424]
 16231 00f2 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 16232 00f6 1E46     		mov	r6, r3
 16233 00f8 D7F8A831 		ldr	r3, [r7, #424]
 16234 00fc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 16235 0100 1A46     		mov	r2, r3
 16236 0102 D7F8A831 		ldr	r3, [r7, #424]
 16237 0106 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 16238 010a 1946     		mov	r1, r3
 16239 010c D7F8A831 		ldr	r3, [r7, #424]
 16240 0110 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 16241 0114 1C46     		mov	r4, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 368


 16242 0116 D7F8A831 		ldr	r3, [r7, #424]
 16243 011a 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 16244 011e 07F59C70 		add	r0, r7, #312
 16245 0122 0393     		str	r3, [sp, #12]
 16246 0124 0294     		str	r4, [sp, #8]
 16247 0126 0191     		str	r1, [sp, #4]
 16248 0128 0092     		str	r2, [sp]
 16249 012a 3346     		mov	r3, r6
 16250 012c 2A46     		mov	r2, r5
 16251 012e 5249     		ldr	r1, .L682+20
 16252 0130 FFF7FEFF 		bl	sprintf
2412:..\src/command_processing.c ****     strcat(info_string, str);
 16253              		.loc 1 2412 0
 16254 0134 07F59C72 		add	r2, r7, #312
 16255 0138 3B1D     		adds	r3, r7, #4
 16256 013a 1146     		mov	r1, r2
 16257 013c 1868     		ldr	r0, [r3]
 16258 013e FFF7FEFF 		bl	strcat
2413:..\src/command_processing.c ****     
2414:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 16259              		.loc 1 2414 0
 16260 0142 07F59C73 		add	r3, r7, #312
 16261 0146 4D4A     		ldr	r2, .L682+24
 16262 0148 1C46     		mov	r4, r3
 16263 014a 1546     		mov	r5, r2
 16264 014c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16265 014e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16266 0150 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 16267 0154 07C4     		stmia	r4!, {r0, r1, r2}
 16268 0156 2380     		strh	r3, [r4]	@ movhi
 16269 0158 0234     		adds	r4, r4, #2
 16270 015a 1B0C     		lsrs	r3, r3, #16
 16271 015c 2370     		strb	r3, [r4]
2415:..\src/command_processing.c ****     strcat(info_string, str);
 16272              		.loc 1 2415 0
 16273 015e 07F59C72 		add	r2, r7, #312
 16274 0162 3B1D     		adds	r3, r7, #4
 16275 0164 1146     		mov	r1, r2
 16276 0166 1868     		ldr	r0, [r3]
 16277 0168 FFF7FEFF 		bl	strcat
2416:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 16278              		.loc 1 2416 0
 16279 016c D7F8A431 		ldr	r3, [r7, #420]
 16280 0170 996B     		ldr	r1, [r3, #56]
 16281 0172 97F8A321 		ldrb	r2, [r7, #419]	@ zero_extendqisi2
 16282 0176 D7F8A801 		ldr	r0, [r7, #424]
 16283 017a 1346     		mov	r3, r2
 16284 017c 5B00     		lsls	r3, r3, #1
 16285 017e 1344     		add	r3, r3, r2
 16286 0180 1B01     		lsls	r3, r3, #4
 16287 0182 0344     		add	r3, r3, r0
 16288 0184 03F29513 		addw	r3, r3, #405
 16289 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16290 018a 41FA03F3 		asr	r3, r1, r3
 16291 018e 3C4A     		ldr	r2, .L682+28
 16292 0190 82FB0312 		smull	r1, r2, r2, r3
 16293 0194 9210     		asrs	r2, r2, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 369


 16294 0196 DB17     		asrs	r3, r3, #31
 16295 0198 D31A     		subs	r3, r2, r3
 16296 019a C7F89C31 		str	r3, [r7, #412]
2417:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 16297              		.loc 1 2417 0
 16298 019e 0123     		movs	r3, #1
 16299 01a0 C7F8AC31 		str	r3, [r7, #428]
 16300 01a4 2BE0     		b	.L677
 16301              	.L678:
2418:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 16302              		.loc 1 2418 0 discriminator 3
 16303 01a6 D7F8AC31 		ldr	r3, [r7, #428]
 16304 01aa 013B     		subs	r3, r3, #1
 16305 01ac D7F89C21 		ldr	r2, [r7, #412]
 16306 01b0 02FB03F3 		mul	r3, r2, r3
 16307 01b4 5C1C     		adds	r4, r3, #1
 16308 01b6 D7F89C31 		ldr	r3, [r7, #412]
 16309 01ba D7F8AC21 		ldr	r2, [r7, #428]
 16310 01be 02FB03F3 		mul	r3, r2, r3
 16311 01c2 D7F8AC21 		ldr	r2, [r7, #428]
 16312 01c6 511E     		subs	r1, r2, #1
 16313 01c8 D7F8A821 		ldr	r2, [r7, #424]
 16314 01cc 0631     		adds	r1, r1, #6
 16315 01ce 52F82120 		ldr	r2, [r2, r1, lsl #2]
 16316 01d2 07F59C70 		add	r0, r7, #312
 16317 01d6 0192     		str	r2, [sp, #4]
 16318 01d8 0093     		str	r3, [sp]
 16319 01da 2346     		mov	r3, r4
 16320 01dc D7F8AC21 		ldr	r2, [r7, #428]
 16321 01e0 2849     		ldr	r1, .L682+32
 16322 01e2 FFF7FEFF 		bl	sprintf
2419:..\src/command_processing.c ****         strcat(info_string, str);
 16323              		.loc 1 2419 0 discriminator 3
 16324 01e6 07F59C72 		add	r2, r7, #312
 16325 01ea 3B1D     		adds	r3, r7, #4
 16326 01ec 1146     		mov	r1, r2
 16327 01ee 1868     		ldr	r0, [r3]
 16328 01f0 FFF7FEFF 		bl	strcat
2417:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 16329              		.loc 1 2417 0 discriminator 3
 16330 01f4 D7F8AC31 		ldr	r3, [r7, #428]
 16331 01f8 0133     		adds	r3, r3, #1
 16332 01fa C7F8AC31 		str	r3, [r7, #428]
 16333              	.L677:
2417:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 16334              		.loc 1 2417 0 is_stmt 0 discriminator 1
 16335 01fe D7F8AC31 		ldr	r3, [r7, #428]
 16336 0202 0A2B     		cmp	r3, #10
 16337 0204 CFDD     		ble	.L678
2420:..\src/command_processing.c ****     }
2421:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16338              		.loc 1 2421 0 is_stmt 1
 16339 0206 3B1D     		adds	r3, r7, #4
 16340 0208 1868     		ldr	r0, [r3]
 16341 020a FFF7FEFF 		bl	strlen
 16342 020e 0346     		mov	r3, r0
 16343 0210 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 370


 16344 0212 3B1D     		adds	r3, r7, #4
 16345 0214 1B68     		ldr	r3, [r3]
 16346 0216 1344     		add	r3, r3, r2
 16347 0218 144A     		ldr	r2, .L682+8
 16348 021a 1188     		ldrh	r1, [r2]	@ unaligned
 16349 021c 9278     		ldrb	r2, [r2, #2]
 16350 021e 1980     		strh	r1, [r3]	@ unaligned
 16351 0220 9A70     		strb	r2, [r3, #2]
2422:..\src/command_processing.c ****     
2423:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 16352              		.loc 1 2423 0
 16353 0222 07F59C73 		add	r3, r7, #312
 16354 0226 184A     		ldr	r2, .L682+36
 16355 0228 1C46     		mov	r4, r3
 16356 022a 1546     		mov	r5, r2
 16357 022c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16358 022e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16359 0230 95E80700 		ldmia	r5, {r0, r1, r2}
 16360 0234 03C4     		stmia	r4!, {r0, r1}
 16361 0236 2280     		strh	r2, [r4]	@ movhi
2424:..\src/command_processing.c ****     strcat(info_string, str);
 16362              		.loc 1 2424 0
 16363 0238 07F59C72 		add	r2, r7, #312
 16364 023c 3B1D     		adds	r3, r7, #4
 16365 023e 1146     		mov	r1, r2
 16366 0240 1868     		ldr	r0, [r3]
 16367 0242 FFF7FEFF 		bl	strcat
2425:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 16368              		.loc 1 2425 0
 16369 0246 D7F8A431 		ldr	r3, [r7, #420]
 16370 024a B3F95C30 		ldrsh	r3, [r3, #92]
 16371 024e 002B     		cmp	r3, #0
 16372 0250 00DA     		bge	.L679
 16373 0252 0333     		adds	r3, r3, #3
 16374              	.L679:
 16375 0254 9B10     		asrs	r3, r3, #2
 16376 0256 1BB2     		sxth	r3, r3
 16377 0258 C7F89C31 		str	r3, [r7, #412]
2426:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 16378              		.loc 1 2426 0
 16379 025c 0123     		movs	r3, #1
 16380 025e C7F8AC31 		str	r3, [r7, #428]
 16381 0262 3EE0     		b	.L680
 16382              	.L683:
 16383              		.align	2
 16384              	.L682:
 16385 0264 00000000 		.word	g_mem
 16386 0268 C4190000 		.word	.LC248
 16387 026c 58110000 		.word	.LC152
 16388 0270 DC190000 		.word	.LC249
 16389 0274 081A0000 		.word	.LC250
 16390 0278 401A0000 		.word	.LC251
 16391 027c 781A0000 		.word	.LC252
 16392 0280 67666666 		.word	1717986919
 16393 0284 981A0000 		.word	.LC253
 16394 0288 B01A0000 		.word	.LC254
 16395              	.L681:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 371


2427:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 16396              		.loc 1 2427 0 discriminator 3
 16397 028c D7F8AC31 		ldr	r3, [r7, #428]
 16398 0290 013B     		subs	r3, r3, #1
 16399 0292 D7F89C21 		ldr	r2, [r7, #412]
 16400 0296 02FB03F4 		mul	r4, r2, r3
 16401 029a D7F89C31 		ldr	r3, [r7, #412]
 16402 029e D7F8AC21 		ldr	r2, [r7, #428]
 16403 02a2 02FB03F3 		mul	r3, r2, r3
 16404 02a6 D7F8AC21 		ldr	r2, [r7, #428]
 16405 02aa 511E     		subs	r1, r2, #1
 16406 02ac D7F8A821 		ldr	r2, [r7, #424]
 16407 02b0 1031     		adds	r1, r1, #16
 16408 02b2 52F82120 		ldr	r2, [r2, r1, lsl #2]
 16409 02b6 07F59C70 		add	r0, r7, #312
 16410 02ba 0192     		str	r2, [sp, #4]
 16411 02bc 0093     		str	r3, [sp]
 16412 02be 2346     		mov	r3, r4
 16413 02c0 D7F8AC21 		ldr	r2, [r7, #428]
 16414 02c4 6B49     		ldr	r1, .L684
 16415 02c6 FFF7FEFF 		bl	sprintf
2428:..\src/command_processing.c ****         strcat(info_string, str);
 16416              		.loc 1 2428 0 discriminator 3
 16417 02ca 07F59C72 		add	r2, r7, #312
 16418 02ce 3B1D     		adds	r3, r7, #4
 16419 02d0 1146     		mov	r1, r2
 16420 02d2 1868     		ldr	r0, [r3]
 16421 02d4 FFF7FEFF 		bl	strcat
2426:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 16422              		.loc 1 2426 0 discriminator 3
 16423 02d8 D7F8AC31 		ldr	r3, [r7, #428]
 16424 02dc 0133     		adds	r3, r3, #1
 16425 02de C7F8AC31 		str	r3, [r7, #428]
 16426              	.L680:
2426:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 16427              		.loc 1 2426 0 is_stmt 0 discriminator 1
 16428 02e2 D7F8AC31 		ldr	r3, [r7, #428]
 16429 02e6 042B     		cmp	r3, #4
 16430 02e8 D0DD     		ble	.L681
2429:..\src/command_processing.c ****     }
2430:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16431              		.loc 1 2430 0 is_stmt 1
 16432 02ea 3B1D     		adds	r3, r7, #4
 16433 02ec 1868     		ldr	r0, [r3]
 16434 02ee FFF7FEFF 		bl	strlen
 16435 02f2 0346     		mov	r3, r0
 16436 02f4 1A46     		mov	r2, r3
 16437 02f6 3B1D     		adds	r3, r7, #4
 16438 02f8 1B68     		ldr	r3, [r3]
 16439 02fa 1344     		add	r3, r3, r2
 16440 02fc 5E4A     		ldr	r2, .L684+4
 16441 02fe 1188     		ldrh	r1, [r2]	@ unaligned
 16442 0300 9278     		ldrb	r2, [r2, #2]
 16443 0302 1980     		strh	r1, [r3]	@ unaligned
 16444 0304 9A70     		strb	r2, [r3, #2]
2431:..\src/command_processing.c ****             
2432:..\src/command_processing.c ****     sprintf(str, "Motions through EMG counter: %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->cnt.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 372


 16445              		.loc 1 2432 0
 16446 0306 D7F8A831 		ldr	r3, [r7, #424]
 16447 030a DA6E     		ldr	r2, [r3, #108]
 16448 030c D7F8A831 		ldr	r3, [r7, #424]
 16449 0310 1B6F     		ldr	r3, [r3, #112]
 16450 0312 07F59C70 		add	r0, r7, #312
 16451 0316 5949     		ldr	r1, .L684+8
 16452 0318 FFF7FEFF 		bl	sprintf
2433:..\src/command_processing.c ****     strcat(info_string, str);
 16453              		.loc 1 2433 0
 16454 031c 07F59C72 		add	r2, r7, #312
 16455 0320 3B1D     		adds	r3, r7, #4
 16456 0322 1146     		mov	r1, r2
 16457 0324 1868     		ldr	r0, [r3]
 16458 0326 FFF7FEFF 		bl	strcat
2434:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16459              		.loc 1 2434 0
 16460 032a 3B1D     		adds	r3, r7, #4
 16461 032c 1868     		ldr	r0, [r3]
 16462 032e FFF7FEFF 		bl	strlen
 16463 0332 0346     		mov	r3, r0
 16464 0334 1A46     		mov	r2, r3
 16465 0336 3B1D     		adds	r3, r7, #4
 16466 0338 1B68     		ldr	r3, [r3]
 16467 033a 1344     		add	r3, r3, r2
 16468 033c 4E4A     		ldr	r2, .L684+4
 16469 033e 1188     		ldrh	r1, [r2]	@ unaligned
 16470 0340 9278     		ldrb	r2, [r2, #2]
 16471 0342 1980     		strh	r1, [r3]	@ unaligned
 16472 0344 9A70     		strb	r2, [r3, #2]
2435:..\src/command_processing.c ****     
2436:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 16473              		.loc 1 2436 0
 16474 0346 D7F8A831 		ldr	r3, [r7, #424]
 16475 034a 1A6D     		ldr	r2, [r3, #80]
 16476 034c 07F59C73 		add	r3, r7, #312
 16477 0350 4B49     		ldr	r1, .L684+12
 16478 0352 1846     		mov	r0, r3
 16479 0354 FFF7FEFF 		bl	sprintf
2437:..\src/command_processing.c ****     strcat(info_string, str);
 16480              		.loc 1 2437 0
 16481 0358 07F59C72 		add	r2, r7, #312
 16482 035c 3B1D     		adds	r3, r7, #4
 16483 035e 1146     		mov	r1, r2
 16484 0360 1868     		ldr	r0, [r3]
 16485 0362 FFF7FEFF 		bl	strcat
2438:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16486              		.loc 1 2438 0
 16487 0366 3B1D     		adds	r3, r7, #4
 16488 0368 1868     		ldr	r0, [r3]
 16489 036a FFF7FEFF 		bl	strlen
 16490 036e 0346     		mov	r3, r0
 16491 0370 1A46     		mov	r2, r3
 16492 0372 3B1D     		adds	r3, r7, #4
 16493 0374 1B68     		ldr	r3, [r3]
 16494 0376 1344     		add	r3, r3, r2
 16495 0378 3F4A     		ldr	r2, .L684+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 373


 16496 037a 1188     		ldrh	r1, [r2]	@ unaligned
 16497 037c 9278     		ldrb	r2, [r2, #2]
 16498 037e 1980     		strh	r1, [r3]	@ unaligned
 16499 0380 9A70     		strb	r2, [r3, #2]
2439:..\src/command_processing.c ****     
2440:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 16500              		.loc 1 2440 0
 16501 0382 D7F8A831 		ldr	r3, [r7, #424]
 16502 0386 5A6D     		ldr	r2, [r3, #84]
 16503 0388 07F59C73 		add	r3, r7, #312
 16504 038c 3D49     		ldr	r1, .L684+16
 16505 038e 1846     		mov	r0, r3
 16506 0390 FFF7FEFF 		bl	sprintf
2441:..\src/command_processing.c ****     strcat(info_string, str);
 16507              		.loc 1 2441 0
 16508 0394 07F59C72 		add	r2, r7, #312
 16509 0398 3B1D     		adds	r3, r7, #4
 16510 039a 1146     		mov	r1, r2
 16511 039c 1868     		ldr	r0, [r3]
 16512 039e FFF7FEFF 		bl	strcat
2442:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16513              		.loc 1 2442 0
 16514 03a2 3B1D     		adds	r3, r7, #4
 16515 03a4 1868     		ldr	r0, [r3]
 16516 03a6 FFF7FEFF 		bl	strlen
 16517 03aa 0346     		mov	r3, r0
 16518 03ac 1A46     		mov	r2, r3
 16519 03ae 3B1D     		adds	r3, r7, #4
 16520 03b0 1B68     		ldr	r3, [r3]
 16521 03b2 1344     		add	r3, r3, r2
 16522 03b4 304A     		ldr	r2, .L684+4
 16523 03b6 1188     		ldrh	r1, [r2]	@ unaligned
 16524 03b8 9278     		ldrb	r2, [r2, #2]
 16525 03ba 1980     		strh	r1, [r3]	@ unaligned
 16526 03bc 9A70     		strb	r2, [r3, #2]
2443:..\src/command_processing.c ****     
2444:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_runtime);
 16527              		.loc 1 2444 0
 16528 03be D7F8A831 		ldr	r3, [r7, #424]
 16529 03c2 9A6D     		ldr	r2, [r3, #88]
 16530 03c4 07F59C73 		add	r3, r7, #312
 16531 03c8 2F49     		ldr	r1, .L684+20
 16532 03ca 1846     		mov	r0, r3
 16533 03cc FFF7FEFF 		bl	sprintf
2445:..\src/command_processing.c ****     strcat(info_string, str);
 16534              		.loc 1 2445 0
 16535 03d0 07F59C72 		add	r2, r7, #312
 16536 03d4 3B1D     		adds	r3, r7, #4
 16537 03d6 1146     		mov	r1, r2
 16538 03d8 1868     		ldr	r0, [r3]
 16539 03da FFF7FEFF 		bl	strcat
2446:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16540              		.loc 1 2446 0
 16541 03de 3B1D     		adds	r3, r7, #4
 16542 03e0 1868     		ldr	r0, [r3]
 16543 03e2 FFF7FEFF 		bl	strlen
 16544 03e6 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 374


 16545 03e8 1A46     		mov	r2, r3
 16546 03ea 3B1D     		adds	r3, r7, #4
 16547 03ec 1B68     		ldr	r3, [r3]
 16548 03ee 1344     		add	r3, r3, r2
 16549 03f0 214A     		ldr	r2, .L684+4
 16550 03f2 1188     		ldrh	r1, [r2]	@ unaligned
 16551 03f4 9278     		ldrb	r2, [r2, #2]
 16552 03f6 1980     		strh	r1, [r3]	@ unaligned
 16553 03f8 9A70     		strb	r2, [r3, #2]
2447:..\src/command_processing.c ****     
2448:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 16554              		.loc 1 2448 0
 16555 03fa D7F8A831 		ldr	r3, [r7, #424]
 16556 03fe DA6D     		ldr	r2, [r3, #92]
 16557 0400 07F59C73 		add	r3, r7, #312
 16558 0404 2149     		ldr	r1, .L684+24
 16559 0406 1846     		mov	r0, r3
 16560 0408 FFF7FEFF 		bl	sprintf
2449:..\src/command_processing.c ****     strcat(info_string, str);
 16561              		.loc 1 2449 0
 16562 040c 07F59C72 		add	r2, r7, #312
 16563 0410 3B1D     		adds	r3, r7, #4
 16564 0412 1146     		mov	r1, r2
 16565 0414 1868     		ldr	r0, [r3]
 16566 0416 FFF7FEFF 		bl	strcat
2450:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16567              		.loc 1 2450 0
 16568 041a 3B1D     		adds	r3, r7, #4
 16569 041c 1868     		ldr	r0, [r3]
 16570 041e FFF7FEFF 		bl	strlen
 16571 0422 0346     		mov	r3, r0
 16572 0424 1A46     		mov	r2, r3
 16573 0426 3B1D     		adds	r3, r7, #4
 16574 0428 1B68     		ldr	r3, [r3]
 16575 042a 1344     		add	r3, r3, r2
 16576 042c 124A     		ldr	r2, .L684+4
 16577 042e 1188     		ldrh	r1, [r2]	@ unaligned
 16578 0430 9278     		ldrb	r2, [r2, #2]
 16579 0432 1980     		strh	r1, [r3]	@ unaligned
 16580 0434 9A70     		strb	r2, [r3, #2]
2451:..\src/command_processing.c ****     
2452:..\src/command_processing.c ****     
2453:..\src/command_processing.c ****     // R01 Project statistics (some are duplicated)
2454:..\src/command_processing.c ****     char CYDATA R01_str[300];
2455:..\src/command_processing.c ****     prepare_R01_info(R01_str);
 16581              		.loc 1 2455 0
 16582 0436 07F10C03 		add	r3, r7, #12
 16583 043a 1846     		mov	r0, r3
 16584 043c FFF7FEFF 		bl	prepare_R01_info
2456:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16585              		.loc 1 2456 0
 16586 0440 3B1D     		adds	r3, r7, #4
 16587 0442 1868     		ldr	r0, [r3]
 16588 0444 FFF7FEFF 		bl	strlen
 16589 0448 0346     		mov	r3, r0
 16590 044a 1A46     		mov	r2, r3
 16591 044c 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 375


 16592 044e 1B68     		ldr	r3, [r3]
 16593 0450 1344     		add	r3, r3, r2
 16594 0452 094A     		ldr	r2, .L684+4
 16595 0454 1188     		ldrh	r1, [r2]	@ unaligned
 16596 0456 9278     		ldrb	r2, [r2, #2]
 16597 0458 1980     		strh	r1, [r3]	@ unaligned
 16598 045a 9A70     		strb	r2, [r3, #2]
2457:..\src/command_processing.c ****     strcat(info_string, R01_str);
 16599              		.loc 1 2457 0
 16600 045c 07F10C02 		add	r2, r7, #12
 16601 0460 3B1D     		adds	r3, r7, #4
 16602 0462 1146     		mov	r1, r2
 16603 0464 1868     		ldr	r0, [r3]
 16604 0466 FFF7FEFF 		bl	strcat
2458:..\src/command_processing.c **** }
 16605              		.loc 1 2458 0
 16606 046a 00BF     		nop
 16607 046c 07F5DA77 		add	r7, r7, #436
 16608              		.cfi_def_cfa_offset 20
 16609 0470 BD46     		mov	sp, r7
 16610              		.cfi_def_cfa_register 13
 16611              		@ sp needed
 16612 0472 F0BD     		pop	{r4, r5, r6, r7, pc}
 16613              	.L685:
 16614              		.align	2
 16615              	.L684:
 16616 0474 CC1A0000 		.word	.LC255
 16617 0478 58110000 		.word	.LC152
 16618 047c E81A0000 		.word	.LC256
 16619 0480 101B0000 		.word	.LC257
 16620 0484 301B0000 		.word	.LC258
 16621 0488 581B0000 		.word	.LC259
 16622 048c 781B0000 		.word	.LC260
 16623              		.cfi_endproc
 16624              	.LFE73:
 16625              		.size	prepare_counter_info, .-prepare_counter_info
 16626              		.section	.rodata
 16627              		.align	2
 16628              	.LC261:
 16629 1b9c 52303120 		.ascii	"R01 PROJECT STATISTICS\015\012\000"
 16629      50524F4A 
 16629      45435420 
 16629      53544154 
 16629      49535449 
 16630 1bb5 000000   		.align	2
 16631              	.LC262:
 16632 1bb8 506F7765 		.ascii	"Power cycles: %lu\000"
 16632      72206379 
 16632      636C6573 
 16632      3A20256C 
 16632      7500
 16633 1bca 0000     		.align	2
 16634              	.LC263:
 16635 1bcc 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 16635      61637469 
 16635      76617469 
 16635      6F6E7320 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 376


 16635      636F756E 
 16636 1bee 0000     		.align	2
 16637              	.LC264:
 16638 1bf0 4E756D62 		.ascii	"Number of motions (close/open): %lu, %lu\000"
 16638      6572206F 
 16638      66206D6F 
 16638      74696F6E 
 16638      73202863 
 16639 1c19 000000   		.align	2
 16640              	.LC265:
 16641 1c1c 45786365 		.ascii	"Excessive signal activity (close/open): %lu, %lu\000"
 16641      73736976 
 16641      65207369 
 16641      676E616C 
 16641      20616374 
 16642 1c4d 000000   		.align	2
 16643              	.LC266:
 16644 1c50 546F7461 		.ascii	"Total runtime (sec): %lu\000"
 16644      6C207275 
 16644      6E74696D 
 16644      65202873 
 16644      6563293A 
 16645              		.global	__aeabi_ui2f
 16646 1c69 000000   		.align	2
 16647              	.LC267:
 16648 1c6c 41766572 		.ascii	"Average duration of a powered-on session (sec): %.4"
 16648      61676520 
 16648      64757261 
 16648      74696F6E 
 16648      206F6620 
 16649 1c9f 6600     		.ascii	"f\000"
 16650 1ca1 000000   		.align	2
 16651              	.LC268:
 16652 1ca4 46726571 		.ascii	"Frequency of motions: %.4f\000"
 16652      75656E63 
 16652      79206F66 
 16652      206D6F74 
 16652      696F6E73 
 16653              		.section	.text.prepare_R01_info,"ax",%progbits
 16654              		.align	2
 16655              		.global	prepare_R01_info
 16656              		.thumb
 16657              		.thumb_func
 16658              		.type	prepare_R01_info, %function
 16659              	prepare_R01_info:
 16660              	.LFB74:
2459:..\src/command_processing.c **** 
2460:..\src/command_processing.c **** //==============================================================================
2461:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2462:..\src/command_processing.c **** //==============================================================================
2463:..\src/command_processing.c **** 
2464:..\src/command_processing.c **** void prepare_R01_info(char *info_string)
2465:..\src/command_processing.c **** {
 16661              		.loc 1 2465 0
 16662              		.cfi_startproc
 16663              		@ args = 0, pretend = 0, frame = 168
 16664              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 377


 16665 0000 B0B5     		push	{r4, r5, r7, lr}
 16666              		.cfi_def_cfa_offset 16
 16667              		.cfi_offset 4, -16
 16668              		.cfi_offset 5, -12
 16669              		.cfi_offset 7, -8
 16670              		.cfi_offset 14, -4
 16671 0002 AAB0     		sub	sp, sp, #168
 16672              		.cfi_def_cfa_offset 184
 16673 0004 00AF     		add	r7, sp, #0
 16674              		.cfi_def_cfa_register 7
 16675 0006 7860     		str	r0, [r7, #4]
2466:..\src/command_processing.c ****     char str[150];  
2467:..\src/command_processing.c **** 
2468:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 16676              		.loc 1 2468 0
 16677 0008 8A4B     		ldr	r3, .L687
 16678 000a C7F8A430 		str	r3, [r7, #164]
2469:..\src/command_processing.c **** 
2470:..\src/command_processing.c ****     strcpy(info_string, "");
 16679              		.loc 1 2470 0
 16680 000e 7B68     		ldr	r3, [r7, #4]
 16681 0010 0022     		movs	r2, #0
 16682 0012 1A70     		strb	r2, [r3]
2471:..\src/command_processing.c ****     
2472:..\src/command_processing.c ****     strcat(info_string, "R01 PROJECT STATISTICS\r\n");
 16683              		.loc 1 2472 0
 16684 0014 7868     		ldr	r0, [r7, #4]
 16685 0016 FFF7FEFF 		bl	strlen
 16686 001a 0346     		mov	r3, r0
 16687 001c 1A46     		mov	r2, r3
 16688 001e 7B68     		ldr	r3, [r7, #4]
 16689 0020 1344     		add	r3, r3, r2
 16690 0022 854A     		ldr	r2, .L687+4
 16691 0024 1D46     		mov	r5, r3
 16692 0026 1446     		mov	r4, r2
 16693 0028 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16694 002a 2860     		str	r0, [r5]	@ unaligned
 16695 002c 6960     		str	r1, [r5, #4]	@ unaligned
 16696 002e AA60     		str	r2, [r5, #8]	@ unaligned
 16697 0030 EB60     		str	r3, [r5, #12]	@ unaligned
 16698 0032 03CC     		ldmia	r4!, {r0, r1}
 16699 0034 2861     		str	r0, [r5, #16]	@ unaligned
 16700 0036 6961     		str	r1, [r5, #20]	@ unaligned
 16701 0038 2378     		ldrb	r3, [r4]
 16702 003a 2B76     		strb	r3, [r5, #24]
2473:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16703              		.loc 1 2473 0
 16704 003c 7868     		ldr	r0, [r7, #4]
 16705 003e FFF7FEFF 		bl	strlen
 16706 0042 0346     		mov	r3, r0
 16707 0044 1A46     		mov	r2, r3
 16708 0046 7B68     		ldr	r3, [r7, #4]
 16709 0048 1344     		add	r3, r3, r2
 16710 004a 7C4A     		ldr	r2, .L687+8
 16711 004c 1188     		ldrh	r1, [r2]	@ unaligned
 16712 004e 9278     		ldrb	r2, [r2, #2]
 16713 0050 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 378


 16714 0052 9A70     		strb	r2, [r3, #2]
2474:..\src/command_processing.c ****     
2475:..\src/command_processing.c ****     sprintf(str, "Power cycles: %lu", MEM_P->cnt.power_cycles);
 16715              		.loc 1 2475 0
 16716 0054 D7F8A430 		ldr	r3, [r7, #164]
 16717 0058 1A6E     		ldr	r2, [r3, #96]
 16718 005a 07F10C03 		add	r3, r7, #12
 16719 005e 7849     		ldr	r1, .L687+12
 16720 0060 1846     		mov	r0, r3
 16721 0062 FFF7FEFF 		bl	sprintf
2476:..\src/command_processing.c ****     strcat(info_string, str);
 16722              		.loc 1 2476 0
 16723 0066 07F10C03 		add	r3, r7, #12
 16724 006a 1946     		mov	r1, r3
 16725 006c 7868     		ldr	r0, [r7, #4]
 16726 006e FFF7FEFF 		bl	strcat
2477:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16727              		.loc 1 2477 0
 16728 0072 7868     		ldr	r0, [r7, #4]
 16729 0074 FFF7FEFF 		bl	strlen
 16730 0078 0346     		mov	r3, r0
 16731 007a 1A46     		mov	r2, r3
 16732 007c 7B68     		ldr	r3, [r7, #4]
 16733 007e 1344     		add	r3, r3, r2
 16734 0080 6E4A     		ldr	r2, .L687+8
 16735 0082 1188     		ldrh	r1, [r2]	@ unaligned
 16736 0084 9278     		ldrb	r2, [r2, #2]
 16737 0086 1980     		strh	r1, [r3]	@ unaligned
 16738 0088 9A70     		strb	r2, [r3, #2]
2478:..\src/command_processing.c ****     
2479:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_act_counter[0], MEM_P->cnt.emg
 16739              		.loc 1 2479 0
 16740 008a D7F8A430 		ldr	r3, [r7, #164]
 16741 008e 1A69     		ldr	r2, [r3, #16]
 16742 0090 D7F8A430 		ldr	r3, [r7, #164]
 16743 0094 5B69     		ldr	r3, [r3, #20]
 16744 0096 07F10C00 		add	r0, r7, #12
 16745 009a 6A49     		ldr	r1, .L687+16
 16746 009c FFF7FEFF 		bl	sprintf
2480:..\src/command_processing.c ****     strcat(info_string, str);
 16747              		.loc 1 2480 0
 16748 00a0 07F10C03 		add	r3, r7, #12
 16749 00a4 1946     		mov	r1, r3
 16750 00a6 7868     		ldr	r0, [r7, #4]
 16751 00a8 FFF7FEFF 		bl	strcat
2481:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16752              		.loc 1 2481 0
 16753 00ac 7868     		ldr	r0, [r7, #4]
 16754 00ae FFF7FEFF 		bl	strlen
 16755 00b2 0346     		mov	r3, r0
 16756 00b4 1A46     		mov	r2, r3
 16757 00b6 7B68     		ldr	r3, [r7, #4]
 16758 00b8 1344     		add	r3, r3, r2
 16759 00ba 604A     		ldr	r2, .L687+8
 16760 00bc 1188     		ldrh	r1, [r2]	@ unaligned
 16761 00be 9278     		ldrb	r2, [r2, #2]
 16762 00c0 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 379


 16763 00c2 9A70     		strb	r2, [r3, #2]
2482:..\src/command_processing.c ****     
2483:..\src/command_processing.c ****     sprintf(str, "Number of motions (close/open): %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->c
 16764              		.loc 1 2483 0
 16765 00c4 D7F8A430 		ldr	r3, [r7, #164]
 16766 00c8 DA6E     		ldr	r2, [r3, #108]
 16767 00ca D7F8A430 		ldr	r3, [r7, #164]
 16768 00ce 1B6F     		ldr	r3, [r3, #112]
 16769 00d0 07F10C00 		add	r0, r7, #12
 16770 00d4 5C49     		ldr	r1, .L687+20
 16771 00d6 FFF7FEFF 		bl	sprintf
2484:..\src/command_processing.c ****     strcat(info_string, str);
 16772              		.loc 1 2484 0
 16773 00da 07F10C03 		add	r3, r7, #12
 16774 00de 1946     		mov	r1, r3
 16775 00e0 7868     		ldr	r0, [r7, #4]
 16776 00e2 FFF7FEFF 		bl	strcat
2485:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16777              		.loc 1 2485 0
 16778 00e6 7868     		ldr	r0, [r7, #4]
 16779 00e8 FFF7FEFF 		bl	strlen
 16780 00ec 0346     		mov	r3, r0
 16781 00ee 1A46     		mov	r2, r3
 16782 00f0 7B68     		ldr	r3, [r7, #4]
 16783 00f2 1344     		add	r3, r3, r2
 16784 00f4 514A     		ldr	r2, .L687+8
 16785 00f6 1188     		ldrh	r1, [r2]	@ unaligned
 16786 00f8 9278     		ldrb	r2, [r2, #2]
 16787 00fa 1980     		strh	r1, [r3]	@ unaligned
 16788 00fc 9A70     		strb	r2, [r3, #2]
2486:..\src/command_processing.c ****     
2487:..\src/command_processing.c ****     sprintf(str, "Excessive signal activity (close/open): %lu, %lu", MEM_P->cnt.excessive_signal_ac
 16789              		.loc 1 2487 0
 16790 00fe D7F8A430 		ldr	r3, [r7, #164]
 16791 0102 5A6E     		ldr	r2, [r3, #100]
 16792 0104 D7F8A430 		ldr	r3, [r7, #164]
 16793 0108 9B6E     		ldr	r3, [r3, #104]
 16794 010a 07F10C00 		add	r0, r7, #12
 16795 010e 4F49     		ldr	r1, .L687+24
 16796 0110 FFF7FEFF 		bl	sprintf
2488:..\src/command_processing.c ****     strcat(info_string, str);
 16797              		.loc 1 2488 0
 16798 0114 07F10C03 		add	r3, r7, #12
 16799 0118 1946     		mov	r1, r3
 16800 011a 7868     		ldr	r0, [r7, #4]
 16801 011c FFF7FEFF 		bl	strcat
2489:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16802              		.loc 1 2489 0
 16803 0120 7868     		ldr	r0, [r7, #4]
 16804 0122 FFF7FEFF 		bl	strlen
 16805 0126 0346     		mov	r3, r0
 16806 0128 1A46     		mov	r2, r3
 16807 012a 7B68     		ldr	r3, [r7, #4]
 16808 012c 1344     		add	r3, r3, r2
 16809 012e 434A     		ldr	r2, .L687+8
 16810 0130 1188     		ldrh	r1, [r2]	@ unaligned
 16811 0132 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 380


 16812 0134 1980     		strh	r1, [r3]	@ unaligned
 16813 0136 9A70     		strb	r2, [r3, #2]
2490:..\src/command_processing.c ****     
2491:..\src/command_processing.c ****     sprintf(str, "Total runtime (sec): %lu", MEM_P->cnt.total_runtime);
 16814              		.loc 1 2491 0
 16815 0138 D7F8A430 		ldr	r3, [r7, #164]
 16816 013c 9A6D     		ldr	r2, [r3, #88]
 16817 013e 07F10C03 		add	r3, r7, #12
 16818 0142 4349     		ldr	r1, .L687+28
 16819 0144 1846     		mov	r0, r3
 16820 0146 FFF7FEFF 		bl	sprintf
2492:..\src/command_processing.c ****     strcat(info_string, str);
 16821              		.loc 1 2492 0
 16822 014a 07F10C03 		add	r3, r7, #12
 16823 014e 1946     		mov	r1, r3
 16824 0150 7868     		ldr	r0, [r7, #4]
 16825 0152 FFF7FEFF 		bl	strcat
2493:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16826              		.loc 1 2493 0
 16827 0156 7868     		ldr	r0, [r7, #4]
 16828 0158 FFF7FEFF 		bl	strlen
 16829 015c 0346     		mov	r3, r0
 16830 015e 1A46     		mov	r2, r3
 16831 0160 7B68     		ldr	r3, [r7, #4]
 16832 0162 1344     		add	r3, r3, r2
 16833 0164 354A     		ldr	r2, .L687+8
 16834 0166 1188     		ldrh	r1, [r2]	@ unaligned
 16835 0168 9278     		ldrb	r2, [r2, #2]
 16836 016a 1980     		strh	r1, [r3]	@ unaligned
 16837 016c 9A70     		strb	r2, [r3, #2]
2494:..\src/command_processing.c ****     
2495:..\src/command_processing.c ****     sprintf(str, "Average duration of a powered-on session (sec): %.4f", (float)(MEM_P->cnt.total_r
 16838              		.loc 1 2495 0
 16839 016e D7F8A430 		ldr	r3, [r7, #164]
 16840 0172 9A6D     		ldr	r2, [r3, #88]
 16841 0174 D7F8A430 		ldr	r3, [r7, #164]
 16842 0178 1B6E     		ldr	r3, [r3, #96]
 16843 017a B2FBF3F3 		udiv	r3, r2, r3
 16844 017e 1846     		mov	r0, r3
 16845 0180 FFF7FEFF 		bl	__aeabi_ui2f
 16846 0184 0346     		mov	r3, r0
 16847 0186 1846     		mov	r0, r3
 16848 0188 FFF7FEFF 		bl	__aeabi_f2d
 16849 018c 0346     		mov	r3, r0
 16850 018e 0C46     		mov	r4, r1
 16851 0190 07F10C00 		add	r0, r7, #12
 16852 0194 1A46     		mov	r2, r3
 16853 0196 2346     		mov	r3, r4
 16854 0198 2E49     		ldr	r1, .L687+32
 16855 019a FFF7FEFF 		bl	sprintf
2496:..\src/command_processing.c ****     strcat(info_string, str);
 16856              		.loc 1 2496 0
 16857 019e 07F10C03 		add	r3, r7, #12
 16858 01a2 1946     		mov	r1, r3
 16859 01a4 7868     		ldr	r0, [r7, #4]
 16860 01a6 FFF7FEFF 		bl	strcat
2497:..\src/command_processing.c ****     strcat(info_string, "\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 381


 16861              		.loc 1 2497 0
 16862 01aa 7868     		ldr	r0, [r7, #4]
 16863 01ac FFF7FEFF 		bl	strlen
 16864 01b0 0346     		mov	r3, r0
 16865 01b2 1A46     		mov	r2, r3
 16866 01b4 7B68     		ldr	r3, [r7, #4]
 16867 01b6 1344     		add	r3, r3, r2
 16868 01b8 204A     		ldr	r2, .L687+8
 16869 01ba 1188     		ldrh	r1, [r2]	@ unaligned
 16870 01bc 9278     		ldrb	r2, [r2, #2]
 16871 01be 1980     		strh	r1, [r3]	@ unaligned
 16872 01c0 9A70     		strb	r2, [r3, #2]
2498:..\src/command_processing.c ****     
2499:..\src/command_processing.c ****     sprintf(str, "Frequency of motions: %.4f", (float)((MEM_P->cnt.emg_act_counter[0] + MEM_P->cnt.
 16873              		.loc 1 2499 0
 16874 01c2 D7F8A430 		ldr	r3, [r7, #164]
 16875 01c6 1A69     		ldr	r2, [r3, #16]
 16876 01c8 D7F8A430 		ldr	r3, [r7, #164]
 16877 01cc 5B69     		ldr	r3, [r3, #20]
 16878 01ce 1344     		add	r3, r3, r2
 16879 01d0 1846     		mov	r0, r3
 16880 01d2 FFF7FEFF 		bl	__aeabi_ui2f
 16881 01d6 0446     		mov	r4, r0
 16882 01d8 D7F8A430 		ldr	r3, [r7, #164]
 16883 01dc 9B6D     		ldr	r3, [r3, #88]
 16884 01de 1846     		mov	r0, r3
 16885 01e0 FFF7FEFF 		bl	__aeabi_ui2f
 16886 01e4 0346     		mov	r3, r0
 16887 01e6 1946     		mov	r1, r3
 16888 01e8 2046     		mov	r0, r4
 16889 01ea FFF7FEFF 		bl	__aeabi_fdiv
 16890 01ee 0346     		mov	r3, r0
 16891 01f0 1846     		mov	r0, r3
 16892 01f2 FFF7FEFF 		bl	__aeabi_f2d
 16893 01f6 0346     		mov	r3, r0
 16894 01f8 0C46     		mov	r4, r1
 16895 01fa 07F10C00 		add	r0, r7, #12
 16896 01fe 1A46     		mov	r2, r3
 16897 0200 2346     		mov	r3, r4
 16898 0202 1549     		ldr	r1, .L687+36
 16899 0204 FFF7FEFF 		bl	sprintf
2500:..\src/command_processing.c ****     strcat(info_string, str);
 16900              		.loc 1 2500 0
 16901 0208 07F10C03 		add	r3, r7, #12
 16902 020c 1946     		mov	r1, r3
 16903 020e 7868     		ldr	r0, [r7, #4]
 16904 0210 FFF7FEFF 		bl	strcat
2501:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16905              		.loc 1 2501 0
 16906 0214 7868     		ldr	r0, [r7, #4]
 16907 0216 FFF7FEFF 		bl	strlen
 16908 021a 0346     		mov	r3, r0
 16909 021c 1A46     		mov	r2, r3
 16910 021e 7B68     		ldr	r3, [r7, #4]
 16911 0220 1344     		add	r3, r3, r2
 16912 0222 064A     		ldr	r2, .L687+8
 16913 0224 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 382


 16914 0226 9278     		ldrb	r2, [r2, #2]
 16915 0228 1980     		strh	r1, [r3]	@ unaligned
 16916 022a 9A70     		strb	r2, [r3, #2]
2502:..\src/command_processing.c **** 
2503:..\src/command_processing.c **** }
 16917              		.loc 1 2503 0
 16918 022c 00BF     		nop
 16919 022e A837     		adds	r7, r7, #168
 16920              		.cfi_def_cfa_offset 16
 16921 0230 BD46     		mov	sp, r7
 16922              		.cfi_def_cfa_register 13
 16923              		@ sp needed
 16924 0232 B0BD     		pop	{r4, r5, r7, pc}
 16925              	.L688:
 16926              		.align	2
 16927              	.L687:
 16928 0234 00000000 		.word	g_mem
 16929 0238 9C1B0000 		.word	.LC261
 16930 023c 58110000 		.word	.LC152
 16931 0240 B81B0000 		.word	.LC262
 16932 0244 CC1B0000 		.word	.LC263
 16933 0248 F01B0000 		.word	.LC264
 16934 024c 1C1C0000 		.word	.LC265
 16935 0250 501C0000 		.word	.LC266
 16936 0254 6C1C0000 		.word	.LC267
 16937 0258 A41C0000 		.word	.LC268
 16938              		.cfi_endproc
 16939              	.LFE74:
 16940              		.size	prepare_R01_info, .-prepare_R01_info
 16941              		.section	.rodata
 16942 1cbf 00       		.align	2
 16943              	.LC269:
 16944 1cc0 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 16944      77617265 
 16944      20766572 
 16944      73696F6E 
 16944      3A202573 
 16945 1cd7 00       		.align	2
 16946              	.LC270:
 16947 1cd8 506F7369 		.ascii	"Position PID: \000"
 16947      74696F6E 
 16947      20504944 
 16947      3A2000
 16948 1ce7 00       		.align	2
 16949              	.LC271:
 16950 1ce8 43757272 		.ascii	"Current PID: \000"
 16950      656E7420 
 16950      5049443A 
 16950      2000
 16951 1cf6 0000     		.align	2
 16952              	.LC272:
 16953 1cf8 5265736F 		.ascii	"Resolutions: \000"
 16953      6C757469 
 16953      6F6E733A 
 16953      2000
 16954 1d06 0000     		.align	2
 16955              	.LC273:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 383


 16956 1d08 4F666673 		.ascii	"Offsets: \000"
 16956      6574733A 
 16956      2000
 16957 1d12 0000     		.align	2
 16958              	.LC274:
 16959 1d14 4D756C74 		.ascii	"Multipliers: \000"
 16959      69706C69 
 16959      6572733A 
 16959      2000
 16960 1d22 0000     		.align	2
 16961              	.LC275:
 16962 1d24 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 16962      656E7420 
 16962      6C6F6F6B 
 16962      75702074 
 16962      61626C65 
 16963 1d57 662C2025 		.ascii	"f, %f\015\012\000"
 16963      660D0A00 
 16964 1d5f 00       		.align	2
 16965              	.LC276:
 16966 1d60 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 16966      74696F6E 
 16966      206C696D 
 16966      69742061 
 16966      63746976 
 16967              		.align	2
 16968              	.LC277:
 16969 1d7c 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 16969      74696F6E 
 16969      206C696D 
 16969      6974733A 
 16969      20696E66 
 16970              		.section	.text.prepare_SD_param_info,"ax",%progbits
 16971              		.align	2
 16972              		.global	prepare_SD_param_info
 16973              		.thumb
 16974              		.thumb_func
 16975              		.type	prepare_SD_param_info, %function
 16976              	prepare_SD_param_info:
 16977              	.LFB75:
2504:..\src/command_processing.c **** 
2505:..\src/command_processing.c **** //==============================================================================
2506:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2507:..\src/command_processing.c **** //==============================================================================
2508:..\src/command_processing.c **** 
2509:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2510:..\src/command_processing.c **** {
 16978              		.loc 1 2510 0
 16979              		.cfi_startproc
 16980              		@ args = 0, pretend = 0, frame = 152
 16981              		@ frame_needed = 1, uses_anonymous_args = 0
 16982 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 16983              		.cfi_def_cfa_offset 36
 16984              		.cfi_offset 4, -36
 16985              		.cfi_offset 5, -32
 16986              		.cfi_offset 6, -28
 16987              		.cfi_offset 7, -24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 384


 16988              		.cfi_offset 8, -20
 16989              		.cfi_offset 9, -16
 16990              		.cfi_offset 10, -12
 16991              		.cfi_offset 11, -8
 16992              		.cfi_offset 14, -4
 16993 0004 B1B0     		sub	sp, sp, #196
 16994              		.cfi_def_cfa_offset 232
 16995 0006 0AAF     		add	r7, sp, #40
 16996              		.cfi_def_cfa 7, 192
 16997 0008 7861     		str	r0, [r7, #20]
2511:..\src/command_processing.c ****     char str[100];  
2512:..\src/command_processing.c ****     int i;
2513:..\src/command_processing.c ****            
2514:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2515:..\src/command_processing.c ****     
2516:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 16998              		.loc 1 2516 0
 16999 000a AC4B     		ldr	r3, .L754
 17000 000c C7F88C30 		str	r3, [r7, #140]
2517:..\src/command_processing.c ****         
2518:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 17001              		.loc 1 2518 0
 17002 0010 AB4A     		ldr	r2, .L754+4
 17003 0012 AC49     		ldr	r1, .L754+8
 17004 0014 7869     		ldr	r0, [r7, #20]
 17005 0016 FFF7FEFF 		bl	sprintf
2519:..\src/command_processing.c ****     
2520:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 17006              		.loc 1 2520 0
 17007 001a D7F88C30 		ldr	r3, [r7, #140]
 17008 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 17009 0022 1A46     		mov	r2, r3
 17010 0024 07F11C03 		add	r3, r7, #28
 17011 0028 A749     		ldr	r1, .L754+12
 17012 002a 1846     		mov	r0, r3
 17013 002c FFF7FEFF 		bl	sprintf
2521:..\src/command_processing.c ****     strcat(info_string, str);
 17014              		.loc 1 2521 0
 17015 0030 07F11C03 		add	r3, r7, #28
 17016 0034 1946     		mov	r1, r3
 17017 0036 7869     		ldr	r0, [r7, #20]
 17018 0038 FFF7FEFF 		bl	strcat
2522:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 17019              		.loc 1 2522 0
 17020 003c D7F88C30 		ldr	r3, [r7, #140]
 17021 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17022 0044 002B     		cmp	r3, #0
 17023 0046 02D0     		beq	.L691
 17024 0048 012B     		cmp	r3, #1
 17025 004a 15D0     		beq	.L692
 17026 004c 26E0     		b	.L690
 17027              	.L691:
2523:..\src/command_processing.c ****         case RIGHT_HAND:
2524:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 17028              		.loc 1 2524 0
 17029 004e 7869     		ldr	r0, [r7, #20]
 17030 0050 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 385


 17031 0054 0346     		mov	r3, r0
 17032 0056 1A46     		mov	r2, r3
 17033 0058 7B69     		ldr	r3, [r7, #20]
 17034 005a 1344     		add	r3, r3, r2
 17035 005c 9B4A     		ldr	r2, .L754+16
 17036 005e 1D46     		mov	r5, r3
 17037 0060 1446     		mov	r4, r2
 17038 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17039 0064 2860     		str	r0, [r5]	@ unaligned
 17040 0066 6960     		str	r1, [r5, #4]	@ unaligned
 17041 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 17042 006a EB60     		str	r3, [r5, #12]	@ unaligned
 17043 006c 2388     		ldrh	r3, [r4]	@ unaligned
 17044 006e A278     		ldrb	r2, [r4, #2]
 17045 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 17046 0072 1346     		mov	r3, r2
 17047 0074 AB74     		strb	r3, [r5, #18]
2525:..\src/command_processing.c ****             break;
 17048              		.loc 1 2525 0
 17049 0076 11E0     		b	.L690
 17050              	.L692:
2526:..\src/command_processing.c ****         case LEFT_HAND:
2527:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 17051              		.loc 1 2527 0
 17052 0078 7869     		ldr	r0, [r7, #20]
 17053 007a FFF7FEFF 		bl	strlen
 17054 007e 0346     		mov	r3, r0
 17055 0080 1A46     		mov	r2, r3
 17056 0082 7B69     		ldr	r3, [r7, #20]
 17057 0084 1344     		add	r3, r3, r2
 17058 0086 924A     		ldr	r2, .L754+20
 17059 0088 1D46     		mov	r5, r3
 17060 008a 1446     		mov	r4, r2
 17061 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17062 008e 2860     		str	r0, [r5]	@ unaligned
 17063 0090 6960     		str	r1, [r5, #4]	@ unaligned
 17064 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 17065 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 17066 0096 2388     		ldrh	r3, [r4]	@ unaligned
 17067 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2528:..\src/command_processing.c ****             break;
 17068              		.loc 1 2528 0
 17069 009a 00BF     		nop
 17070              	.L690:
2529:..\src/command_processing.c ****     }
2530:..\src/command_processing.c **** 
2531:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17071              		.loc 1 2531 0
 17072 009c D7F88C30 		ldr	r3, [r7, #140]
 17073 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17074 00a4 1A46     		mov	r2, r3
 17075 00a6 D7F88C30 		ldr	r3, [r7, #140]
 17076 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17077 00ae 1946     		mov	r1, r3
 17078 00b0 D7F88C30 		ldr	r3, [r7, #140]
 17079 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17080 00b8 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 386


 17081 00bc 0093     		str	r3, [sp]
 17082 00be 0B46     		mov	r3, r1
 17083 00c0 8449     		ldr	r1, .L754+24
 17084 00c2 FFF7FEFF 		bl	sprintf
2532:..\src/command_processing.c ****     strcat(info_string, str);
 17085              		.loc 1 2532 0
 17086 00c6 07F11C03 		add	r3, r7, #28
 17087 00ca 1946     		mov	r1, r3
 17088 00cc 7869     		ldr	r0, [r7, #20]
 17089 00ce FFF7FEFF 		bl	strcat
2533:..\src/command_processing.c ****     
2534:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17090              		.loc 1 2534 0
 17091 00d2 D7F88C30 		ldr	r3, [r7, #140]
 17092 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17093 00da 1A46     		mov	r2, r3
 17094 00dc D7F88C30 		ldr	r3, [r7, #140]
 17095 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17096 00e4 1946     		mov	r1, r3
 17097 00e6 D7F88C30 		ldr	r3, [r7, #140]
 17098 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17099 00ee 07F11C00 		add	r0, r7, #28
 17100 00f2 0093     		str	r3, [sp]
 17101 00f4 0B46     		mov	r3, r1
 17102 00f6 7849     		ldr	r1, .L754+28
 17103 00f8 FFF7FEFF 		bl	sprintf
2535:..\src/command_processing.c ****     strcat(info_string, str);
 17104              		.loc 1 2535 0
 17105 00fc 07F11C03 		add	r3, r7, #28
 17106 0100 1946     		mov	r1, r3
 17107 0102 7869     		ldr	r0, [r7, #20]
 17108 0104 FFF7FEFF 		bl	strcat
 17109              	.LBB27:
2536:..\src/command_processing.c ****     
2537:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 17110              		.loc 1 2537 0
 17111 0108 0023     		movs	r3, #0
 17112 010a 87F89330 		strb	r3, [r7, #147]
 17113 010e 00F05EBE 		b	.L693
 17114              	.L737:
 17115              	.LBB28:
2538:..\src/command_processing.c ****             
2539:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 17116              		.loc 1 2539 0
 17117 0112 97F89330 		ldrb	r3, [r7, #147]
 17118 0116 87F88B30 		strb	r3, [r7, #139]
2540:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 17119              		.loc 1 2540 0
 17120 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 17121 011e 1346     		mov	r3, r2
 17122 0120 DB00     		lsls	r3, r3, #3
 17123 0122 9B1A     		subs	r3, r3, r2
 17124 0124 1B01     		lsls	r3, r3, #4
 17125 0126 B033     		adds	r3, r3, #176
 17126 0128 D7F88C20 		ldr	r2, [r7, #140]
 17127 012c 1344     		add	r3, r3, r2
 17128 012e C7F88430 		str	r3, [r7, #132]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 387


2541:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 17129              		.loc 1 2541 0
 17130 0132 D7F88430 		ldr	r3, [r7, #132]
 17131 0136 93F86030 		ldrb	r3, [r3, #96]
 17132 013a 87F88330 		strb	r3, [r7, #131]
2542:..\src/command_processing.c ****               
2543:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 17133              		.loc 1 2543 0
 17134 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17135 0142 5A1C     		adds	r2, r3, #1
 17136 0144 07F11C03 		add	r3, r7, #28
 17137 0148 6449     		ldr	r1, .L754+32
 17138 014a 1846     		mov	r0, r3
 17139 014c FFF7FEFF 		bl	sprintf
2544:..\src/command_processing.c ****         strcat(info_string, str);
 17140              		.loc 1 2544 0
 17141 0150 07F11C03 		add	r3, r7, #28
 17142 0154 1946     		mov	r1, r3
 17143 0156 7869     		ldr	r0, [r7, #20]
 17144 0158 FFF7FEFF 		bl	strcat
2545:..\src/command_processing.c ****                     
2546:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 17145              		.loc 1 2546 0
 17146 015c 7869     		ldr	r0, [r7, #20]
 17147 015e FFF7FEFF 		bl	strlen
 17148 0162 0346     		mov	r3, r0
 17149 0164 1A46     		mov	r2, r3
 17150 0166 7B69     		ldr	r3, [r7, #20]
 17151 0168 1344     		add	r3, r3, r2
 17152 016a 5D4A     		ldr	r2, .L754+36
 17153 016c 1D46     		mov	r5, r3
 17154 016e 1446     		mov	r4, r2
 17155 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17156 0172 2860     		str	r0, [r5]	@ unaligned
 17157 0174 6960     		str	r1, [r5, #4]	@ unaligned
 17158 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 17159 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 17160 017a 03CC     		ldmia	r4!, {r0, r1}
 17161 017c 2861     		str	r0, [r5, #16]	@ unaligned
 17162 017e 6961     		str	r1, [r5, #20]	@ unaligned
 17163 0180 2388     		ldrh	r3, [r4]	@ unaligned
 17164 0182 A278     		ldrb	r2, [r4, #2]
 17165 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 17166 0186 1346     		mov	r3, r2
 17167 0188 AB76     		strb	r3, [r5, #26]
2547:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 17168              		.loc 1 2547 0
 17169 018a D7F88430 		ldr	r3, [r7, #132]
 17170 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 17171 0192 012B     		cmp	r3, #1
 17172 0194 0CD1     		bne	.L694
2548:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 17173              		.loc 1 2548 0
 17174 0196 7869     		ldr	r0, [r7, #20]
 17175 0198 FFF7FEFF 		bl	strlen
 17176 019c 0346     		mov	r3, r0
 17177 019e 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 388


 17178 01a0 7B69     		ldr	r3, [r7, #20]
 17179 01a2 1344     		add	r3, r3, r2
 17180 01a4 4F4A     		ldr	r2, .L754+40
 17181 01a6 1068     		ldr	r0, [r2]	@ unaligned
 17182 01a8 1860     		str	r0, [r3]	@ unaligned
 17183 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17184 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 17185 01ae 0BE0     		b	.L695
 17186              	.L694:
2549:..\src/command_processing.c ****         else
2550:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 17187              		.loc 1 2550 0
 17188 01b0 7869     		ldr	r0, [r7, #20]
 17189 01b2 FFF7FEFF 		bl	strlen
 17190 01b6 0346     		mov	r3, r0
 17191 01b8 1A46     		mov	r2, r3
 17192 01ba 7B69     		ldr	r3, [r7, #20]
 17193 01bc 1344     		add	r3, r3, r2
 17194 01be 4A4A     		ldr	r2, .L754+44
 17195 01c0 1068     		ldr	r0, [r2]	@ unaligned
 17196 01c2 1860     		str	r0, [r3]	@ unaligned
 17197 01c4 1279     		ldrb	r2, [r2, #4]
 17198 01c6 1A71     		strb	r2, [r3, #4]
 17199              	.L695:
2551:..\src/command_processing.c ****         
2552:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 17200              		.loc 1 2552 0
 17201 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17202 01cc 474A     		ldr	r2, .L754+48
 17203 01ce 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 17204 01d2 1A46     		mov	r2, r3
 17205 01d4 07F11C03 		add	r3, r7, #28
 17206 01d8 4549     		ldr	r1, .L754+52
 17207 01da 1846     		mov	r0, r3
 17208 01dc FFF7FEFF 		bl	sprintf
2553:..\src/command_processing.c ****         strcat(info_string, str);
 17209              		.loc 1 2553 0
 17210 01e0 07F11C03 		add	r3, r7, #28
 17211 01e4 1946     		mov	r1, r3
 17212 01e6 7869     		ldr	r0, [r7, #20]
 17213 01e8 FFF7FEFF 		bl	strcat
2554:..\src/command_processing.c **** 
2555:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 17214              		.loc 1 2555 0
 17215 01ec 7869     		ldr	r0, [r7, #20]
 17216 01ee FFF7FEFF 		bl	strlen
 17217 01f2 0346     		mov	r3, r0
 17218 01f4 1A46     		mov	r2, r3
 17219 01f6 7B69     		ldr	r3, [r7, #20]
 17220 01f8 1344     		add	r3, r3, r2
 17221 01fa 3E4A     		ldr	r2, .L754+56
 17222 01fc 1C46     		mov	r4, r3
 17223 01fe 1346     		mov	r3, r2
 17224 0200 07CB     		ldmia	r3!, {r0, r1, r2}
 17225 0202 2060     		str	r0, [r4]	@ unaligned
 17226 0204 6160     		str	r1, [r4, #4]	@ unaligned
 17227 0206 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 389


 17228 0208 1A88     		ldrh	r2, [r3]	@ unaligned
 17229 020a 9B78     		ldrb	r3, [r3, #2]
 17230 020c A281     		strh	r2, [r4, #12]	@ unaligned
 17231 020e A373     		strb	r3, [r4, #14]
2556:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 17232              		.loc 1 2556 0
 17233 0210 D7F88430 		ldr	r3, [r7, #132]
 17234 0214 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17235 0218 032B     		cmp	r3, #3
 17236 021a 75D0     		beq	.L696
2557:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 17237              		.loc 1 2557 0
 17238 021c D7F88430 		ldr	r3, [r7, #132]
 17239 0220 1B68     		ldr	r3, [r3]
 17240 0222 1846     		mov	r0, r3
 17241 0224 FFF7FEFF 		bl	__aeabi_i2d
 17242 0228 4FF00002 		mov	r2, #0
 17243 022c 324B     		ldr	r3, .L754+60
 17244 022e FFF7FEFF 		bl	__aeabi_ddiv
 17245 0232 0346     		mov	r3, r0
 17246 0234 0C46     		mov	r4, r1
 17247 0236 07F11C00 		add	r0, r7, #28
 17248 023a 1A46     		mov	r2, r3
 17249 023c 2346     		mov	r3, r4
 17250 023e 2F49     		ldr	r1, .L754+64
 17251 0240 FFF7FEFF 		bl	sprintf
2558:..\src/command_processing.c ****             strcat(info_string, str);
 17252              		.loc 1 2558 0
 17253 0244 07F11C03 		add	r3, r7, #28
 17254 0248 1946     		mov	r1, r3
 17255 024a 7869     		ldr	r0, [r7, #20]
 17256 024c FFF7FEFF 		bl	strcat
2559:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 17257              		.loc 1 2559 0
 17258 0250 D7F88430 		ldr	r3, [r7, #132]
 17259 0254 5B68     		ldr	r3, [r3, #4]
 17260 0256 1846     		mov	r0, r3
 17261 0258 FFF7FEFF 		bl	__aeabi_i2d
 17262 025c 4FF00002 		mov	r2, #0
 17263 0260 254B     		ldr	r3, .L754+60
 17264 0262 FFF7FEFF 		bl	__aeabi_ddiv
 17265 0266 0346     		mov	r3, r0
 17266 0268 0C46     		mov	r4, r1
 17267 026a 07F11C00 		add	r0, r7, #28
 17268 026e 1A46     		mov	r2, r3
 17269 0270 2346     		mov	r3, r4
 17270 0272 2349     		ldr	r1, .L754+68
 17271 0274 FFF7FEFF 		bl	sprintf
2560:..\src/command_processing.c ****             strcat(info_string, str);
 17272              		.loc 1 2560 0
 17273 0278 07F11C03 		add	r3, r7, #28
 17274 027c 1946     		mov	r1, r3
 17275 027e 7869     		ldr	r0, [r7, #20]
 17276 0280 FFF7FEFF 		bl	strcat
2561:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 17277              		.loc 1 2561 0
 17278 0284 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 390


 17279 0288 9B68     		ldr	r3, [r3, #8]
 17280 028a 1846     		mov	r0, r3
 17281 028c FFF7FEFF 		bl	__aeabi_i2d
 17282 0290 4FF00002 		mov	r2, #0
 17283 0294 184B     		ldr	r3, .L754+60
 17284 0296 FFF7FEFF 		bl	__aeabi_ddiv
 17285 029a 0346     		mov	r3, r0
 17286 029c 0C46     		mov	r4, r1
 17287 029e 07F11C00 		add	r0, r7, #28
 17288 02a2 1A46     		mov	r2, r3
 17289 02a4 2346     		mov	r3, r4
 17290 02a6 1749     		ldr	r1, .L754+72
 17291 02a8 FFF7FEFF 		bl	sprintf
2562:..\src/command_processing.c ****             strcat(info_string, str);
 17292              		.loc 1 2562 0
 17293 02ac 07F11C03 		add	r3, r7, #28
 17294 02b0 1946     		mov	r1, r3
 17295 02b2 7869     		ldr	r0, [r7, #20]
 17296 02b4 FFF7FEFF 		bl	strcat
 17297 02b8 74E0     		b	.L697
 17298              	.L755:
 17299 02ba 00BF     		.align	2
 17300              	.L754:
 17301 02bc 00000000 		.word	g_mem
 17302 02c0 70110000 		.word	.LC154
 17303 02c4 C01C0000 		.word	.LC269
 17304 02c8 B0110000 		.word	.LC157
 17305 02cc 60120000 		.word	.LC163
 17306 02d0 74120000 		.word	.LC164
 17307 02d4 DC190000 		.word	.LC249
 17308 02d8 081A0000 		.word	.LC250
 17309 02dc BC120000 		.word	.LC168
 17310 02e0 2C130000 		.word	.LC177
 17311 02e4 1C130000 		.word	.LC175
 17312 02e8 24130000 		.word	.LC176
 17313 02ec 00000000 		.word	dev_pwm_limit
 17314 02f0 54130000 		.word	.LC180
 17315 02f4 D81C0000 		.word	.LC270
 17316 02f8 0000F040 		.word	1089470464
 17317 02fc 6C140000 		.word	.LC192
 17318 0300 78140000 		.word	.LC193
 17319 0304 84140000 		.word	.LC194
 17320              	.L696:
2563:..\src/command_processing.c ****         }
2564:..\src/command_processing.c ****         else { 
2565:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 17321              		.loc 1 2565 0
 17322 0308 D7F88430 		ldr	r3, [r7, #132]
 17323 030c 9B69     		ldr	r3, [r3, #24]
 17324 030e 1846     		mov	r0, r3
 17325 0310 FFF7FEFF 		bl	__aeabi_i2d
 17326 0314 4FF00002 		mov	r2, #0
 17327 0318 CC4B     		ldr	r3, .L756
 17328 031a FFF7FEFF 		bl	__aeabi_ddiv
 17329 031e 0346     		mov	r3, r0
 17330 0320 0C46     		mov	r4, r1
 17331 0322 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 391


 17332 0326 1A46     		mov	r2, r3
 17333 0328 2346     		mov	r3, r4
 17334 032a C949     		ldr	r1, .L756+4
 17335 032c FFF7FEFF 		bl	sprintf
2566:..\src/command_processing.c ****             strcat(info_string, str);
 17336              		.loc 1 2566 0
 17337 0330 07F11C03 		add	r3, r7, #28
 17338 0334 1946     		mov	r1, r3
 17339 0336 7869     		ldr	r0, [r7, #20]
 17340 0338 FFF7FEFF 		bl	strcat
2567:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 17341              		.loc 1 2567 0
 17342 033c D7F88430 		ldr	r3, [r7, #132]
 17343 0340 DB69     		ldr	r3, [r3, #28]
 17344 0342 1846     		mov	r0, r3
 17345 0344 FFF7FEFF 		bl	__aeabi_i2d
 17346 0348 4FF00002 		mov	r2, #0
 17347 034c BF4B     		ldr	r3, .L756
 17348 034e FFF7FEFF 		bl	__aeabi_ddiv
 17349 0352 0346     		mov	r3, r0
 17350 0354 0C46     		mov	r4, r1
 17351 0356 07F11C00 		add	r0, r7, #28
 17352 035a 1A46     		mov	r2, r3
 17353 035c 2346     		mov	r3, r4
 17354 035e BD49     		ldr	r1, .L756+8
 17355 0360 FFF7FEFF 		bl	sprintf
2568:..\src/command_processing.c ****             strcat(info_string, str);
 17356              		.loc 1 2568 0
 17357 0364 07F11C03 		add	r3, r7, #28
 17358 0368 1946     		mov	r1, r3
 17359 036a 7869     		ldr	r0, [r7, #20]
 17360 036c FFF7FEFF 		bl	strcat
2569:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 17361              		.loc 1 2569 0
 17362 0370 D7F88430 		ldr	r3, [r7, #132]
 17363 0374 1B6A     		ldr	r3, [r3, #32]
 17364 0376 1846     		mov	r0, r3
 17365 0378 FFF7FEFF 		bl	__aeabi_i2d
 17366 037c 4FF00002 		mov	r2, #0
 17367 0380 B24B     		ldr	r3, .L756
 17368 0382 FFF7FEFF 		bl	__aeabi_ddiv
 17369 0386 0346     		mov	r3, r0
 17370 0388 0C46     		mov	r4, r1
 17371 038a 07F11C00 		add	r0, r7, #28
 17372 038e 1A46     		mov	r2, r3
 17373 0390 2346     		mov	r3, r4
 17374 0392 B149     		ldr	r1, .L756+12
 17375 0394 FFF7FEFF 		bl	sprintf
2570:..\src/command_processing.c ****             strcat(info_string, str);
 17376              		.loc 1 2570 0
 17377 0398 07F11C03 		add	r3, r7, #28
 17378 039c 1946     		mov	r1, r3
 17379 039e 7869     		ldr	r0, [r7, #20]
 17380 03a0 FFF7FEFF 		bl	strcat
 17381              	.L697:
2571:..\src/command_processing.c ****         }
2572:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 392


2573:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 17382              		.loc 1 2573 0
 17383 03a4 7869     		ldr	r0, [r7, #20]
 17384 03a6 FFF7FEFF 		bl	strlen
 17385 03aa 0346     		mov	r3, r0
 17386 03ac 1A46     		mov	r2, r3
 17387 03ae 7B69     		ldr	r3, [r7, #20]
 17388 03b0 1344     		add	r3, r3, r2
 17389 03b2 AA4A     		ldr	r2, .L756+16
 17390 03b4 1C46     		mov	r4, r3
 17391 03b6 1346     		mov	r3, r2
 17392 03b8 07CB     		ldmia	r3!, {r0, r1, r2}
 17393 03ba 2060     		str	r0, [r4]	@ unaligned
 17394 03bc 6160     		str	r1, [r4, #4]	@ unaligned
 17395 03be A260     		str	r2, [r4, #8]	@ unaligned
 17396 03c0 1B88     		ldrh	r3, [r3]	@ unaligned
 17397 03c2 A381     		strh	r3, [r4, #12]	@ unaligned
2574:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 17398              		.loc 1 2574 0
 17399 03c4 D7F88430 		ldr	r3, [r7, #132]
 17400 03c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17401 03cc 032B     		cmp	r3, #3
 17402 03ce 4ED0     		beq	.L698
2575:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 17403              		.loc 1 2575 0
 17404 03d0 D7F88430 		ldr	r3, [r7, #132]
 17405 03d4 DB68     		ldr	r3, [r3, #12]
 17406 03d6 1846     		mov	r0, r3
 17407 03d8 FFF7FEFF 		bl	__aeabi_i2d
 17408 03dc 4FF00002 		mov	r2, #0
 17409 03e0 9A4B     		ldr	r3, .L756
 17410 03e2 FFF7FEFF 		bl	__aeabi_ddiv
 17411 03e6 0346     		mov	r3, r0
 17412 03e8 0C46     		mov	r4, r1
 17413 03ea 07F11C00 		add	r0, r7, #28
 17414 03ee 1A46     		mov	r2, r3
 17415 03f0 2346     		mov	r3, r4
 17416 03f2 9749     		ldr	r1, .L756+4
 17417 03f4 FFF7FEFF 		bl	sprintf
2576:..\src/command_processing.c ****             strcat(info_string, str);
 17418              		.loc 1 2576 0
 17419 03f8 07F11C03 		add	r3, r7, #28
 17420 03fc 1946     		mov	r1, r3
 17421 03fe 7869     		ldr	r0, [r7, #20]
 17422 0400 FFF7FEFF 		bl	strcat
2577:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 17423              		.loc 1 2577 0
 17424 0404 D7F88430 		ldr	r3, [r7, #132]
 17425 0408 1B69     		ldr	r3, [r3, #16]
 17426 040a 1846     		mov	r0, r3
 17427 040c FFF7FEFF 		bl	__aeabi_i2d
 17428 0410 4FF00002 		mov	r2, #0
 17429 0414 8D4B     		ldr	r3, .L756
 17430 0416 FFF7FEFF 		bl	__aeabi_ddiv
 17431 041a 0346     		mov	r3, r0
 17432 041c 0C46     		mov	r4, r1
 17433 041e 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 393


 17434 0422 1A46     		mov	r2, r3
 17435 0424 2346     		mov	r3, r4
 17436 0426 8B49     		ldr	r1, .L756+8
 17437 0428 FFF7FEFF 		bl	sprintf
2578:..\src/command_processing.c ****             strcat(info_string, str);
 17438              		.loc 1 2578 0
 17439 042c 07F11C03 		add	r3, r7, #28
 17440 0430 1946     		mov	r1, r3
 17441 0432 7869     		ldr	r0, [r7, #20]
 17442 0434 FFF7FEFF 		bl	strcat
2579:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 17443              		.loc 1 2579 0
 17444 0438 D7F88430 		ldr	r3, [r7, #132]
 17445 043c 5B69     		ldr	r3, [r3, #20]
 17446 043e 1846     		mov	r0, r3
 17447 0440 FFF7FEFF 		bl	__aeabi_i2d
 17448 0444 4FF00002 		mov	r2, #0
 17449 0448 804B     		ldr	r3, .L756
 17450 044a FFF7FEFF 		bl	__aeabi_ddiv
 17451 044e 0346     		mov	r3, r0
 17452 0450 0C46     		mov	r4, r1
 17453 0452 07F11C00 		add	r0, r7, #28
 17454 0456 1A46     		mov	r2, r3
 17455 0458 2346     		mov	r3, r4
 17456 045a 7F49     		ldr	r1, .L756+12
 17457 045c FFF7FEFF 		bl	sprintf
2580:..\src/command_processing.c ****             strcat(info_string, str);
 17458              		.loc 1 2580 0
 17459 0460 07F11C03 		add	r3, r7, #28
 17460 0464 1946     		mov	r1, r3
 17461 0466 7869     		ldr	r0, [r7, #20]
 17462 0468 FFF7FEFF 		bl	strcat
 17463 046c 4DE0     		b	.L699
 17464              	.L698:
2581:..\src/command_processing.c **** 
2582:..\src/command_processing.c ****         }
2583:..\src/command_processing.c ****         else {
2584:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 17465              		.loc 1 2584 0
 17466 046e D7F88430 		ldr	r3, [r7, #132]
 17467 0472 5B6A     		ldr	r3, [r3, #36]
 17468 0474 1846     		mov	r0, r3
 17469 0476 FFF7FEFF 		bl	__aeabi_i2d
 17470 047a 4FF00002 		mov	r2, #0
 17471 047e 734B     		ldr	r3, .L756
 17472 0480 FFF7FEFF 		bl	__aeabi_ddiv
 17473 0484 0346     		mov	r3, r0
 17474 0486 0C46     		mov	r4, r1
 17475 0488 07F11C00 		add	r0, r7, #28
 17476 048c 1A46     		mov	r2, r3
 17477 048e 2346     		mov	r3, r4
 17478 0490 6F49     		ldr	r1, .L756+4
 17479 0492 FFF7FEFF 		bl	sprintf
2585:..\src/command_processing.c ****             strcat(info_string, str);
 17480              		.loc 1 2585 0
 17481 0496 07F11C03 		add	r3, r7, #28
 17482 049a 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 394


 17483 049c 7869     		ldr	r0, [r7, #20]
 17484 049e FFF7FEFF 		bl	strcat
2586:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 17485              		.loc 1 2586 0
 17486 04a2 D7F88430 		ldr	r3, [r7, #132]
 17487 04a6 9B6A     		ldr	r3, [r3, #40]
 17488 04a8 1846     		mov	r0, r3
 17489 04aa FFF7FEFF 		bl	__aeabi_i2d
 17490 04ae 4FF00002 		mov	r2, #0
 17491 04b2 664B     		ldr	r3, .L756
 17492 04b4 FFF7FEFF 		bl	__aeabi_ddiv
 17493 04b8 0346     		mov	r3, r0
 17494 04ba 0C46     		mov	r4, r1
 17495 04bc 07F11C00 		add	r0, r7, #28
 17496 04c0 1A46     		mov	r2, r3
 17497 04c2 2346     		mov	r3, r4
 17498 04c4 6349     		ldr	r1, .L756+8
 17499 04c6 FFF7FEFF 		bl	sprintf
2587:..\src/command_processing.c ****             strcat(info_string, str);
 17500              		.loc 1 2587 0
 17501 04ca 07F11C03 		add	r3, r7, #28
 17502 04ce 1946     		mov	r1, r3
 17503 04d0 7869     		ldr	r0, [r7, #20]
 17504 04d2 FFF7FEFF 		bl	strcat
2588:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 17505              		.loc 1 2588 0
 17506 04d6 D7F88430 		ldr	r3, [r7, #132]
 17507 04da DB6A     		ldr	r3, [r3, #44]
 17508 04dc 1846     		mov	r0, r3
 17509 04de FFF7FEFF 		bl	__aeabi_i2d
 17510 04e2 4FF00002 		mov	r2, #0
 17511 04e6 594B     		ldr	r3, .L756
 17512 04e8 FFF7FEFF 		bl	__aeabi_ddiv
 17513 04ec 0346     		mov	r3, r0
 17514 04ee 0C46     		mov	r4, r1
 17515 04f0 07F11C00 		add	r0, r7, #28
 17516 04f4 1A46     		mov	r2, r3
 17517 04f6 2346     		mov	r3, r4
 17518 04f8 5749     		ldr	r1, .L756+12
 17519 04fa FFF7FEFF 		bl	sprintf
2589:..\src/command_processing.c ****             strcat(info_string, str);
 17520              		.loc 1 2589 0
 17521 04fe 07F11C03 		add	r3, r7, #28
 17522 0502 1946     		mov	r1, r3
 17523 0504 7869     		ldr	r0, [r7, #20]
 17524 0506 FFF7FEFF 		bl	strcat
 17525              	.L699:
2590:..\src/command_processing.c ****         }
2591:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 17526              		.loc 1 2591 0
 17527 050a D7F88430 		ldr	r3, [r7, #132]
 17528 050e 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 17529 0512 012B     		cmp	r3, #1
 17530 0514 14D1     		bne	.L700
2592:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 17531              		.loc 1 2592 0
 17532 0516 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 395


 17533 0518 FFF7FEFF 		bl	strlen
 17534 051c 0346     		mov	r3, r0
 17535 051e 1A46     		mov	r2, r3
 17536 0520 7B69     		ldr	r3, [r7, #20]
 17537 0522 1344     		add	r3, r3, r2
 17538 0524 4E4A     		ldr	r2, .L756+20
 17539 0526 1D46     		mov	r5, r3
 17540 0528 1446     		mov	r4, r2
 17541 052a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17542 052c 2860     		str	r0, [r5]	@ unaligned
 17543 052e 6960     		str	r1, [r5, #4]	@ unaligned
 17544 0530 AA60     		str	r2, [r5, #8]	@ unaligned
 17545 0532 EB60     		str	r3, [r5, #12]	@ unaligned
 17546 0534 03CC     		ldmia	r4!, {r0, r1}
 17547 0536 2861     		str	r0, [r5, #16]	@ unaligned
 17548 0538 6961     		str	r1, [r5, #20]	@ unaligned
 17549 053a 2388     		ldrh	r3, [r4]	@ unaligned
 17550 053c 2B83     		strh	r3, [r5, #24]	@ unaligned
 17551 053e 13E0     		b	.L701
 17552              	.L700:
2593:..\src/command_processing.c ****         else
2594:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 17553              		.loc 1 2594 0
 17554 0540 7869     		ldr	r0, [r7, #20]
 17555 0542 FFF7FEFF 		bl	strlen
 17556 0546 0346     		mov	r3, r0
 17557 0548 1A46     		mov	r2, r3
 17558 054a 7B69     		ldr	r3, [r7, #20]
 17559 054c 1344     		add	r3, r3, r2
 17560 054e 454A     		ldr	r2, .L756+24
 17561 0550 1D46     		mov	r5, r3
 17562 0552 1446     		mov	r4, r2
 17563 0554 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17564 0556 2860     		str	r0, [r5]	@ unaligned
 17565 0558 6960     		str	r1, [r5, #4]	@ unaligned
 17566 055a AA60     		str	r2, [r5, #8]	@ unaligned
 17567 055c EB60     		str	r3, [r5, #12]	@ unaligned
 17568 055e 03CC     		ldmia	r4!, {r0, r1}
 17569 0560 2861     		str	r0, [r5, #16]	@ unaligned
 17570 0562 6961     		str	r1, [r5, #20]	@ unaligned
 17571 0564 2378     		ldrb	r3, [r4]
 17572 0566 2B76     		strb	r3, [r5, #24]
 17573              	.L701:
2595:..\src/command_processing.c **** 
2596:..\src/command_processing.c ****         switch(MOT->input_mode) {
 17574              		.loc 1 2596 0
 17575 0568 D7F88430 		ldr	r3, [r7, #132]
 17576 056c 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 17577 0570 072B     		cmp	r3, #7
 17578 0572 00F2EA80 		bhi	.L702
 17579 0576 01A2     		adr	r2, .L704
 17580 0578 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 17581              		.p2align 2
 17582              	.L704:
 17583 057c 9D050000 		.word	.L703+1
 17584 0580 C1050000 		.word	.L705+1
 17585 0584 E9050000 		.word	.L706+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 396


 17586 0588 1B060000 		.word	.L707+1
 17587 058c 79060000 		.word	.L708+1
 17588 0590 A7060000 		.word	.L709+1
 17589 0594 D7060000 		.word	.L710+1
 17590 0598 05070000 		.word	.L711+1
 17591              		.p2align 1
 17592              	.L703:
2597:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2598:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 17593              		.loc 1 2598 0
 17594 059c 7869     		ldr	r0, [r7, #20]
 17595 059e FFF7FEFF 		bl	strlen
 17596 05a2 0346     		mov	r3, r0
 17597 05a4 1A46     		mov	r2, r3
 17598 05a6 7B69     		ldr	r3, [r7, #20]
 17599 05a8 1344     		add	r3, r3, r2
 17600 05aa 2F4A     		ldr	r2, .L756+28
 17601 05ac 1D46     		mov	r5, r3
 17602 05ae 1446     		mov	r4, r2
 17603 05b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17604 05b2 2860     		str	r0, [r5]	@ unaligned
 17605 05b4 6960     		str	r1, [r5, #4]	@ unaligned
 17606 05b6 AA60     		str	r2, [r5, #8]	@ unaligned
 17607 05b8 EB60     		str	r3, [r5, #12]	@ unaligned
 17608 05ba 2388     		ldrh	r3, [r4]	@ unaligned
 17609 05bc 2B82     		strh	r3, [r5, #16]	@ unaligned
2599:..\src/command_processing.c ****                 break;
 17610              		.loc 1 2599 0
 17611 05be C4E0     		b	.L702
 17612              	.L705:
2600:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2601:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 17613              		.loc 1 2601 0
 17614 05c0 7869     		ldr	r0, [r7, #20]
 17615 05c2 FFF7FEFF 		bl	strlen
 17616 05c6 0346     		mov	r3, r0
 17617 05c8 1A46     		mov	r2, r3
 17618 05ca 7B69     		ldr	r3, [r7, #20]
 17619 05cc 1344     		add	r3, r3, r2
 17620 05ce 274A     		ldr	r2, .L756+32
 17621 05d0 1D46     		mov	r5, r3
 17622 05d2 1446     		mov	r4, r2
 17623 05d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17624 05d6 2860     		str	r0, [r5]	@ unaligned
 17625 05d8 6960     		str	r1, [r5, #4]	@ unaligned
 17626 05da AA60     		str	r2, [r5, #8]	@ unaligned
 17627 05dc EB60     		str	r3, [r5, #12]	@ unaligned
 17628 05de 2068     		ldr	r0, [r4]	@ unaligned
 17629 05e0 2861     		str	r0, [r5, #16]	@ unaligned
 17630 05e2 2379     		ldrb	r3, [r4, #4]
 17631 05e4 2B75     		strb	r3, [r5, #20]
2602:..\src/command_processing.c ****                 break;
 17632              		.loc 1 2602 0
 17633 05e6 B0E0     		b	.L702
 17634              	.L706:
2603:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2604:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 397


 17635              		.loc 1 2604 0
 17636 05e8 7869     		ldr	r0, [r7, #20]
 17637 05ea FFF7FEFF 		bl	strlen
 17638 05ee 0346     		mov	r3, r0
 17639 05f0 1A46     		mov	r2, r3
 17640 05f2 7B69     		ldr	r3, [r7, #20]
 17641 05f4 1344     		add	r3, r3, r2
 17642 05f6 1E4A     		ldr	r2, .L756+36
 17643 05f8 1D46     		mov	r5, r3
 17644 05fa 1446     		mov	r4, r2
 17645 05fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17646 05fe 2860     		str	r0, [r5]	@ unaligned
 17647 0600 6960     		str	r1, [r5, #4]	@ unaligned
 17648 0602 AA60     		str	r2, [r5, #8]	@ unaligned
 17649 0604 EB60     		str	r3, [r5, #12]	@ unaligned
 17650 0606 07CC     		ldmia	r4!, {r0, r1, r2}
 17651 0608 2861     		str	r0, [r5, #16]	@ unaligned
 17652 060a 6961     		str	r1, [r5, #20]	@ unaligned
 17653 060c AA61     		str	r2, [r5, #24]	@ unaligned
 17654 060e 2388     		ldrh	r3, [r4]	@ unaligned
 17655 0610 A278     		ldrb	r2, [r4, #2]
 17656 0612 AB83     		strh	r3, [r5, #28]	@ unaligned
 17657 0614 1346     		mov	r3, r2
 17658 0616 AB77     		strb	r3, [r5, #30]
2605:..\src/command_processing.c ****                 break;
 17659              		.loc 1 2605 0
 17660 0618 97E0     		b	.L702
 17661              	.L707:
2606:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2607:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 17662              		.loc 1 2607 0
 17663 061a 7869     		ldr	r0, [r7, #20]
 17664 061c FFF7FEFF 		bl	strlen
 17665 0620 0346     		mov	r3, r0
 17666 0622 1A46     		mov	r2, r3
 17667 0624 7B69     		ldr	r3, [r7, #20]
 17668 0626 1344     		add	r3, r3, r2
 17669 0628 124A     		ldr	r2, .L756+40
 17670 062a 1D46     		mov	r5, r3
 17671 062c 1446     		mov	r4, r2
 17672 062e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17673 0630 2860     		str	r0, [r5]	@ unaligned
 17674 0632 6960     		str	r1, [r5, #4]	@ unaligned
 17675 0634 AA60     		str	r2, [r5, #8]	@ unaligned
 17676 0636 EB60     		str	r3, [r5, #12]	@ unaligned
 17677 0638 03CC     		ldmia	r4!, {r0, r1}
 17678 063a 2861     		str	r0, [r5, #16]	@ unaligned
 17679 063c 6961     		str	r1, [r5, #20]	@ unaligned
 17680 063e 2388     		ldrh	r3, [r4]	@ unaligned
 17681 0640 A278     		ldrb	r2, [r4, #2]
 17682 0642 2B83     		strh	r3, [r5, #24]	@ unaligned
 17683 0644 1346     		mov	r3, r2
 17684 0646 AB76     		strb	r3, [r5, #26]
2608:..\src/command_processing.c ****                 break;
 17685              		.loc 1 2608 0
 17686 0648 7FE0     		b	.L702
 17687              	.L757:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 398


 17688 064a 00BF     		.align	2
 17689              	.L756:
 17690 064c 0000F040 		.word	1089470464
 17691 0650 6C140000 		.word	.LC192
 17692 0654 78140000 		.word	.LC193
 17693 0658 84140000 		.word	.LC194
 17694 065c E81C0000 		.word	.LC271
 17695 0660 AC140000 		.word	.LC196
 17696 0664 C8140000 		.word	.LC197
 17697 0668 E4140000 		.word	.LC198
 17698 066c F8140000 		.word	.LC199
 17699 0670 10150000 		.word	.LC200
 17700 0674 30150000 		.word	.LC201
 17701              	.L708:
2609:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2610:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 17702              		.loc 1 2610 0
 17703 0678 7869     		ldr	r0, [r7, #20]
 17704 067a FFF7FEFF 		bl	strlen
 17705 067e 0346     		mov	r3, r0
 17706 0680 1A46     		mov	r2, r3
 17707 0682 7B69     		ldr	r3, [r7, #20]
 17708 0684 1344     		add	r3, r3, r2
 17709 0686 BA4A     		ldr	r2, .L758
 17710 0688 1C46     		mov	r4, r3
 17711 068a 1546     		mov	r5, r2
 17712 068c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17713 068e 2060     		str	r0, [r4]	@ unaligned
 17714 0690 6160     		str	r1, [r4, #4]	@ unaligned
 17715 0692 A260     		str	r2, [r4, #8]	@ unaligned
 17716 0694 E360     		str	r3, [r4, #12]	@ unaligned
 17717 0696 2868     		ldr	r0, [r5]	@ unaligned
 17718 0698 2061     		str	r0, [r4, #16]	@ unaligned
 17719 069a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 17720 069c AA79     		ldrb	r2, [r5, #6]
 17721 069e A382     		strh	r3, [r4, #20]	@ unaligned
 17722 06a0 1346     		mov	r3, r2
 17723 06a2 A375     		strb	r3, [r4, #22]
2611:..\src/command_processing.c ****                 break;
 17724              		.loc 1 2611 0
 17725 06a4 51E0     		b	.L702
 17726              	.L709:
2612:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2613:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 17727              		.loc 1 2613 0
 17728 06a6 7869     		ldr	r0, [r7, #20]
 17729 06a8 FFF7FEFF 		bl	strlen
 17730 06ac 0346     		mov	r3, r0
 17731 06ae 1A46     		mov	r2, r3
 17732 06b0 7B69     		ldr	r3, [r7, #20]
 17733 06b2 1344     		add	r3, r3, r2
 17734 06b4 AF4A     		ldr	r2, .L758+4
 17735 06b6 1D46     		mov	r5, r3
 17736 06b8 1446     		mov	r4, r2
 17737 06ba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17738 06bc 2860     		str	r0, [r5]	@ unaligned
 17739 06be 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 399


 17740 06c0 AA60     		str	r2, [r5, #8]	@ unaligned
 17741 06c2 EB60     		str	r3, [r5, #12]	@ unaligned
 17742 06c4 03CC     		ldmia	r4!, {r0, r1}
 17743 06c6 2861     		str	r0, [r5, #16]	@ unaligned
 17744 06c8 6961     		str	r1, [r5, #20]	@ unaligned
 17745 06ca 2388     		ldrh	r3, [r4]	@ unaligned
 17746 06cc A278     		ldrb	r2, [r4, #2]
 17747 06ce 2B83     		strh	r3, [r5, #24]	@ unaligned
 17748 06d0 1346     		mov	r3, r2
 17749 06d2 AB76     		strb	r3, [r5, #26]
2614:..\src/command_processing.c ****                 break;
 17750              		.loc 1 2614 0
 17751 06d4 39E0     		b	.L702
 17752              	.L710:
2615:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2616:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 17753              		.loc 1 2616 0
 17754 06d6 7869     		ldr	r0, [r7, #20]
 17755 06d8 FFF7FEFF 		bl	strlen
 17756 06dc 0346     		mov	r3, r0
 17757 06de 1A46     		mov	r2, r3
 17758 06e0 7B69     		ldr	r3, [r7, #20]
 17759 06e2 1344     		add	r3, r3, r2
 17760 06e4 A44A     		ldr	r2, .L758+8
 17761 06e6 1C46     		mov	r4, r3
 17762 06e8 1546     		mov	r5, r2
 17763 06ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17764 06ec 2060     		str	r0, [r4]	@ unaligned
 17765 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 17766 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 17767 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 17768 06f4 2868     		ldr	r0, [r5]	@ unaligned
 17769 06f6 2061     		str	r0, [r4, #16]	@ unaligned
 17770 06f8 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 17771 06fa AA79     		ldrb	r2, [r5, #6]
 17772 06fc A382     		strh	r3, [r4, #20]	@ unaligned
 17773 06fe 1346     		mov	r3, r2
 17774 0700 A375     		strb	r3, [r4, #22]
2617:..\src/command_processing.c ****                 break;
 17775              		.loc 1 2617 0
 17776 0702 22E0     		b	.L702
 17777              	.L711:
2618:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2619:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 17778              		.loc 1 2619 0
 17779 0704 7869     		ldr	r0, [r7, #20]
 17780 0706 FFF7FEFF 		bl	strlen
 17781 070a 0346     		mov	r3, r0
 17782 070c 1A46     		mov	r2, r3
 17783 070e 7B69     		ldr	r3, [r7, #20]
 17784 0710 1344     		add	r3, r3, r2
 17785 0712 9A4A     		ldr	r2, .L758+12
 17786 0714 1546     		mov	r5, r2
 17787 0716 9E46     		mov	lr, r3
 17788 0718 05F1200C 		add	ip, r5, #32
 17789              	.L712:
 17790 071c 7446     		mov	r4, lr
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 400


 17791 071e 2E46     		mov	r6, r5
 17792 0720 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 17793 0722 2060     		str	r0, [r4]	@ unaligned
 17794 0724 6160     		str	r1, [r4, #4]	@ unaligned
 17795 0726 A260     		str	r2, [r4, #8]	@ unaligned
 17796 0728 E360     		str	r3, [r4, #12]	@ unaligned
 17797 072a 1035     		adds	r5, r5, #16
 17798 072c 0EF1100E 		add	lr, lr, #16
 17799 0730 6545     		cmp	r5, ip
 17800 0732 F3D1     		bne	.L712
 17801 0734 7446     		mov	r4, lr
 17802 0736 2B46     		mov	r3, r5
 17803 0738 07CB     		ldmia	r3!, {r0, r1, r2}
 17804 073a 2060     		str	r0, [r4]	@ unaligned
 17805 073c 6160     		str	r1, [r4, #4]	@ unaligned
 17806 073e A260     		str	r2, [r4, #8]	@ unaligned
 17807 0740 1A88     		ldrh	r2, [r3]	@ unaligned
 17808 0742 9B78     		ldrb	r3, [r3, #2]
 17809 0744 A281     		strh	r2, [r4, #12]	@ unaligned
 17810 0746 A373     		strb	r3, [r4, #14]
2620:..\src/command_processing.c ****                 break;
 17811              		.loc 1 2620 0
 17812 0748 00BF     		nop
 17813              	.L702:
2621:..\src/command_processing.c ****         }
2622:..\src/command_processing.c **** 
2623:..\src/command_processing.c ****         switch(MOT->control_mode) {
 17814              		.loc 1 2623 0
 17815 074a D7F88430 		ldr	r3, [r7, #132]
 17816 074e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17817 0752 032B     		cmp	r3, #3
 17818 0754 63D8     		bhi	.L752
 17819 0756 01A2     		adr	r2, .L715
 17820 0758 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 17821              		.p2align 2
 17822              	.L715:
 17823 075c 6D070000 		.word	.L714+1
 17824 0760 97070000 		.word	.L716+1
 17825 0764 BB070000 		.word	.L717+1
 17826 0768 E1070000 		.word	.L718+1
 17827              		.p2align 1
 17828              	.L714:
2624:..\src/command_processing.c ****             case CONTROL_ANGLE:
2625:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 17829              		.loc 1 2625 0
 17830 076c 7869     		ldr	r0, [r7, #20]
 17831 076e FFF7FEFF 		bl	strlen
 17832 0772 0346     		mov	r3, r0
 17833 0774 1A46     		mov	r2, r3
 17834 0776 7B69     		ldr	r3, [r7, #20]
 17835 0778 1344     		add	r3, r3, r2
 17836 077a 814A     		ldr	r2, .L758+16
 17837 077c 1D46     		mov	r5, r3
 17838 077e 1446     		mov	r4, r2
 17839 0780 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17840 0782 2860     		str	r0, [r5]	@ unaligned
 17841 0784 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 401


 17842 0786 AA60     		str	r2, [r5, #8]	@ unaligned
 17843 0788 EB60     		str	r3, [r5, #12]	@ unaligned
 17844 078a 03CC     		ldmia	r4!, {r0, r1}
 17845 078c 2861     		str	r0, [r5, #16]	@ unaligned
 17846 078e 6961     		str	r1, [r5, #20]	@ unaligned
 17847 0790 2378     		ldrb	r3, [r4]
 17848 0792 2B76     		strb	r3, [r5, #24]
2626:..\src/command_processing.c ****                 break;
 17849              		.loc 1 2626 0
 17850 0794 44E0     		b	.L719
 17851              	.L716:
2627:..\src/command_processing.c ****             case CONTROL_PWM:
2628:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 17852              		.loc 1 2628 0
 17853 0796 7869     		ldr	r0, [r7, #20]
 17854 0798 FFF7FEFF 		bl	strlen
 17855 079c 0346     		mov	r3, r0
 17856 079e 1A46     		mov	r2, r3
 17857 07a0 7B69     		ldr	r3, [r7, #20]
 17858 07a2 1344     		add	r3, r3, r2
 17859 07a4 774A     		ldr	r2, .L758+20
 17860 07a6 1D46     		mov	r5, r3
 17861 07a8 1446     		mov	r4, r2
 17862 07aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17863 07ac 2860     		str	r0, [r5]	@ unaligned
 17864 07ae 6960     		str	r1, [r5, #4]	@ unaligned
 17865 07b0 AA60     		str	r2, [r5, #8]	@ unaligned
 17866 07b2 EB60     		str	r3, [r5, #12]	@ unaligned
 17867 07b4 2068     		ldr	r0, [r4]	@ unaligned
 17868 07b6 2861     		str	r0, [r5, #16]	@ unaligned
2629:..\src/command_processing.c ****                 break;
 17869              		.loc 1 2629 0
 17870 07b8 32E0     		b	.L719
 17871              	.L717:
2630:..\src/command_processing.c ****             case CONTROL_CURRENT:
2631:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 17872              		.loc 1 2631 0
 17873 07ba 7869     		ldr	r0, [r7, #20]
 17874 07bc FFF7FEFF 		bl	strlen
 17875 07c0 0346     		mov	r3, r0
 17876 07c2 1A46     		mov	r2, r3
 17877 07c4 7B69     		ldr	r3, [r7, #20]
 17878 07c6 1344     		add	r3, r3, r2
 17879 07c8 6F4A     		ldr	r2, .L758+24
 17880 07ca 1D46     		mov	r5, r3
 17881 07cc 1446     		mov	r4, r2
 17882 07ce 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17883 07d0 2860     		str	r0, [r5]	@ unaligned
 17884 07d2 6960     		str	r1, [r5, #4]	@ unaligned
 17885 07d4 AA60     		str	r2, [r5, #8]	@ unaligned
 17886 07d6 EB60     		str	r3, [r5, #12]	@ unaligned
 17887 07d8 03CC     		ldmia	r4!, {r0, r1}
 17888 07da 2861     		str	r0, [r5, #16]	@ unaligned
 17889 07dc 6961     		str	r1, [r5, #20]	@ unaligned
2632:..\src/command_processing.c ****                 break;
 17890              		.loc 1 2632 0
 17891 07de 1FE0     		b	.L719
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 402


 17892              	.L718:
2633:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2634:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 17893              		.loc 1 2634 0
 17894 07e0 7869     		ldr	r0, [r7, #20]
 17895 07e2 FFF7FEFF 		bl	strlen
 17896 07e6 0346     		mov	r3, r0
 17897 07e8 1A46     		mov	r2, r3
 17898 07ea 7B69     		ldr	r3, [r7, #20]
 17899 07ec 1344     		add	r3, r3, r2
 17900 07ee 674A     		ldr	r2, .L758+28
 17901 07f0 1446     		mov	r4, r2
 17902 07f2 9E46     		mov	lr, r3
 17903 07f4 04F1200C 		add	ip, r4, #32
 17904              	.L720:
 17905 07f8 7546     		mov	r5, lr
 17906 07fa 2646     		mov	r6, r4
 17907 07fc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 17908 07fe 2860     		str	r0, [r5]	@ unaligned
 17909 0800 6960     		str	r1, [r5, #4]	@ unaligned
 17910 0802 AA60     		str	r2, [r5, #8]	@ unaligned
 17911 0804 EB60     		str	r3, [r5, #12]	@ unaligned
 17912 0806 1034     		adds	r4, r4, #16
 17913 0808 0EF1100E 		add	lr, lr, #16
 17914 080c 6445     		cmp	r4, ip
 17915 080e F3D1     		bne	.L720
 17916 0810 7346     		mov	r3, lr
 17917 0812 2246     		mov	r2, r4
 17918 0814 1068     		ldr	r0, [r2]	@ unaligned
 17919 0816 1860     		str	r0, [r3]	@ unaligned
 17920 0818 1279     		ldrb	r2, [r2, #4]
 17921 081a 1A71     		strb	r2, [r3, #4]
2635:..\src/command_processing.c ****                 break;
 17922              		.loc 1 2635 0
 17923 081c 00E0     		b	.L719
 17924              	.L752:
2636:..\src/command_processing.c ****             default:
2637:..\src/command_processing.c ****                 break;
 17925              		.loc 1 2637 0
 17926 081e 00BF     		nop
 17927              	.L719:
2638:..\src/command_processing.c ****         }
2639:..\src/command_processing.c **** 
2640:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 17928              		.loc 1 2640 0
 17929 0820 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 17930 0824 D7F88C10 		ldr	r1, [r7, #140]
 17931 0828 1346     		mov	r3, r2
 17932 082a 5B00     		lsls	r3, r3, #1
 17933 082c 1344     		add	r3, r3, r2
 17934 082e 1B01     		lsls	r3, r3, #4
 17935 0830 0B44     		add	r3, r3, r1
 17936 0832 03F5D873 		add	r3, r3, #432
 17937 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17938 0838 002B     		cmp	r3, #0
 17939 083a 1CD0     		beq	.L721
2641:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 403


 17940              		.loc 1 2641 0
 17941 083c 7869     		ldr	r0, [r7, #20]
 17942 083e FFF7FEFF 		bl	strlen
 17943 0842 0346     		mov	r3, r0
 17944 0844 1A46     		mov	r2, r3
 17945 0846 7B69     		ldr	r3, [r7, #20]
 17946 0848 1344     		add	r3, r3, r2
 17947 084a 514A     		ldr	r2, .L758+32
 17948 084c 1446     		mov	r4, r2
 17949 084e 9E46     		mov	lr, r3
 17950 0850 04F1200C 		add	ip, r4, #32
 17951              	.L722:
 17952 0854 7546     		mov	r5, lr
 17953 0856 2646     		mov	r6, r4
 17954 0858 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 17955 085a 2860     		str	r0, [r5]	@ unaligned
 17956 085c 6960     		str	r1, [r5, #4]	@ unaligned
 17957 085e AA60     		str	r2, [r5, #8]	@ unaligned
 17958 0860 EB60     		str	r3, [r5, #12]	@ unaligned
 17959 0862 1034     		adds	r4, r4, #16
 17960 0864 0EF1100E 		add	lr, lr, #16
 17961 0868 6445     		cmp	r4, ip
 17962 086a F3D1     		bne	.L722
 17963 086c 7346     		mov	r3, lr
 17964 086e 2246     		mov	r2, r4
 17965 0870 1278     		ldrb	r2, [r2]
 17966 0872 1A70     		strb	r2, [r3]
 17967 0874 13E0     		b	.L723
 17968              	.L721:
2642:..\src/command_processing.c ****         else
2643:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 17969              		.loc 1 2643 0
 17970 0876 7869     		ldr	r0, [r7, #20]
 17971 0878 FFF7FEFF 		bl	strlen
 17972 087c 0346     		mov	r3, r0
 17973 087e 1A46     		mov	r2, r3
 17974 0880 7B69     		ldr	r3, [r7, #20]
 17975 0882 1344     		add	r3, r3, r2
 17976 0884 434A     		ldr	r2, .L758+36
 17977 0886 1C46     		mov	r4, r3
 17978 0888 1546     		mov	r5, r2
 17979 088a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17980 088c 2060     		str	r0, [r4]	@ unaligned
 17981 088e 6160     		str	r1, [r4, #4]	@ unaligned
 17982 0890 A260     		str	r2, [r4, #8]	@ unaligned
 17983 0892 E360     		str	r3, [r4, #12]	@ unaligned
 17984 0894 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17985 0896 2061     		str	r0, [r4, #16]	@ unaligned
 17986 0898 6161     		str	r1, [r4, #20]	@ unaligned
 17987 089a A261     		str	r2, [r4, #24]	@ unaligned
 17988 089c E361     		str	r3, [r4, #28]	@ unaligned
 17989              	.L723:
2644:..\src/command_processing.c **** 
2645:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 17990              		.loc 1 2645 0
 17991 089e 7869     		ldr	r0, [r7, #20]
 17992 08a0 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 404


 17993 08a4 0346     		mov	r3, r0
 17994 08a6 1A46     		mov	r2, r3
 17995 08a8 7B69     		ldr	r3, [r7, #20]
 17996 08aa 1344     		add	r3, r3, r2
 17997 08ac 3A4A     		ldr	r2, .L758+40
 17998 08ae 1C46     		mov	r4, r3
 17999 08b0 1346     		mov	r3, r2
 18000 08b2 07CB     		ldmia	r3!, {r0, r1, r2}
 18001 08b4 2060     		str	r0, [r4]	@ unaligned
 18002 08b6 6160     		str	r1, [r4, #4]	@ unaligned
 18003 08b8 A260     		str	r2, [r4, #8]	@ unaligned
 18004 08ba 1B88     		ldrh	r3, [r3]	@ unaligned
 18005 08bc A381     		strh	r3, [r4, #12]	@ unaligned
2646:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18006              		.loc 1 2646 0
 18007 08be 0023     		movs	r3, #0
 18008 08c0 C7F89430 		str	r3, [r7, #148]
 18009 08c4 30E0     		b	.L724
 18010              	.L726:
2647:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18011              		.loc 1 2647 0
 18012 08c6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18013 08ca D7F88C10 		ldr	r1, [r7, #140]
 18014 08ce 1346     		mov	r3, r2
 18015 08d0 5B00     		lsls	r3, r3, #1
 18016 08d2 1344     		add	r3, r3, r2
 18017 08d4 1B01     		lsls	r3, r3, #4
 18018 08d6 CA18     		adds	r2, r1, r3
 18019 08d8 D7F89430 		ldr	r3, [r7, #148]
 18020 08dc 1344     		add	r3, r3, r2
 18021 08de 03F29513 		addw	r3, r3, #405
 18022 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18023 08e4 1A46     		mov	r2, r3
 18024 08e6 07F11C03 		add	r3, r7, #28
 18025 08ea 2C49     		ldr	r1, .L758+44
 18026 08ec 1846     		mov	r0, r3
 18027 08ee FFF7FEFF 		bl	sprintf
2648:..\src/command_processing.c ****             strcat(info_string, str);
 18028              		.loc 1 2648 0
 18029 08f2 07F11C03 		add	r3, r7, #28
 18030 08f6 1946     		mov	r1, r3
 18031 08f8 7869     		ldr	r0, [r7, #20]
 18032 08fa FFF7FEFF 		bl	strcat
2649:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18033              		.loc 1 2649 0
 18034 08fe D7F89430 		ldr	r3, [r7, #148]
 18035 0902 022B     		cmp	r3, #2
 18036 0904 0BD0     		beq	.L725
2650:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18037              		.loc 1 2650 0
 18038 0906 7869     		ldr	r0, [r7, #20]
 18039 0908 FFF7FEFF 		bl	strlen
 18040 090c 0346     		mov	r3, r0
 18041 090e 1A46     		mov	r2, r3
 18042 0910 7B69     		ldr	r3, [r7, #20]
 18043 0912 1344     		add	r3, r3, r2
 18044 0914 224A     		ldr	r2, .L758+48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 405


 18045 0916 1188     		ldrh	r1, [r2]	@ unaligned
 18046 0918 9278     		ldrb	r2, [r2, #2]
 18047 091a 1980     		strh	r1, [r3]	@ unaligned
 18048 091c 9A70     		strb	r2, [r3, #2]
 18049              	.L725:
2646:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18050              		.loc 1 2646 0 discriminator 2
 18051 091e D7F89430 		ldr	r3, [r7, #148]
 18052 0922 0133     		adds	r3, r3, #1
 18053 0924 C7F89430 		str	r3, [r7, #148]
 18054              	.L724:
2646:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18055              		.loc 1 2646 0 is_stmt 0 discriminator 1
 18056 0928 D7F89430 		ldr	r3, [r7, #148]
 18057 092c 022B     		cmp	r3, #2
 18058 092e CADD     		ble	.L726
2651:..\src/command_processing.c ****             }                
2652:..\src/command_processing.c ****         }
2653:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18059              		.loc 1 2653 0 is_stmt 1
 18060 0930 7869     		ldr	r0, [r7, #20]
 18061 0932 FFF7FEFF 		bl	strlen
 18062 0936 0346     		mov	r3, r0
 18063 0938 1A46     		mov	r2, r3
 18064 093a 7B69     		ldr	r3, [r7, #20]
 18065 093c 1344     		add	r3, r3, r2
 18066 093e 194A     		ldr	r2, .L758+52
 18067 0940 1188     		ldrh	r1, [r2]	@ unaligned
 18068 0942 9278     		ldrb	r2, [r2, #2]
 18069 0944 1980     		strh	r1, [r3]	@ unaligned
 18070 0946 9A70     		strb	r2, [r3, #2]
2654:..\src/command_processing.c **** 
2655:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 18071              		.loc 1 2655 0
 18072 0948 7869     		ldr	r0, [r7, #20]
 18073 094a FFF7FEFF 		bl	strlen
 18074 094e 0346     		mov	r3, r0
 18075 0950 1A46     		mov	r2, r3
 18076 0952 7B69     		ldr	r3, [r7, #20]
 18077 0954 1344     		add	r3, r3, r2
 18078 0956 1449     		ldr	r1, .L758+56
 18079 0958 1A46     		mov	r2, r3
 18080 095a 0B46     		mov	r3, r1
 18081 095c 03CB     		ldmia	r3!, {r0, r1}
 18082 095e 1060     		str	r0, [r2]	@ unaligned
 18083 0960 5160     		str	r1, [r2, #4]	@ unaligned
 18084 0962 1B88     		ldrh	r3, [r3]	@ unaligned
 18085 0964 1381     		strh	r3, [r2, #8]	@ unaligned
2656:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18086              		.loc 1 2656 0
 18087 0966 0023     		movs	r3, #0
 18088 0968 C7F89430 		str	r3, [r7, #148]
 18089 096c 5EE0     		b	.L727
 18090              	.L759:
 18091 096e 00BF     		.align	2
 18092              	.L758:
 18093 0970 4C150000 		.word	.LC202
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 406


 18094 0974 64150000 		.word	.LC203
 18095 0978 80150000 		.word	.LC204
 18096 097c 98150000 		.word	.LC205
 18097 0980 C8150000 		.word	.LC206
 18098 0984 E4150000 		.word	.LC207
 18099 0988 F8150000 		.word	.LC208
 18100 098c 10160000 		.word	.LC209
 18101 0990 38160000 		.word	.LC210
 18102 0994 5C160000 		.word	.LC211
 18103 0998 F81C0000 		.word	.LC272
 18104 099c 8C130000 		.word	.LC183
 18105 09a0 90130000 		.word	.LC184
 18106 09a4 58110000 		.word	.LC152
 18107 09a8 081D0000 		.word	.LC273
 18108              	.L729:
2657:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18109              		.loc 1 2657 0
 18110 09ac 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18111 09b0 D7F88C10 		ldr	r1, [r7, #140]
 18112 09b4 1346     		mov	r3, r2
 18113 09b6 5B00     		lsls	r3, r3, #1
 18114 09b8 1344     		add	r3, r3, r2
 18115 09ba 9B00     		lsls	r3, r3, #2
 18116 09bc D7F89420 		ldr	r2, [r7, #148]
 18117 09c0 1344     		add	r3, r3, r2
 18118 09c2 6633     		adds	r3, r3, #102
 18119 09c4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 18120 09c8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18121 09cc D7F88C00 		ldr	r0, [r7, #140]
 18122 09d0 1346     		mov	r3, r2
 18123 09d2 5B00     		lsls	r3, r3, #1
 18124 09d4 1344     		add	r3, r3, r2
 18125 09d6 1B01     		lsls	r3, r3, #4
 18126 09d8 C218     		adds	r2, r0, r3
 18127 09da D7F89430 		ldr	r3, [r7, #148]
 18128 09de 1344     		add	r3, r3, r2
 18129 09e0 03F29513 		addw	r3, r3, #405
 18130 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18131 09e6 41FA03F2 		asr	r2, r1, r3
 18132 09ea 07F11C03 		add	r3, r7, #28
 18133 09ee CF49     		ldr	r1, .L760
 18134 09f0 1846     		mov	r0, r3
 18135 09f2 FFF7FEFF 		bl	sprintf
2658:..\src/command_processing.c ****             strcat(info_string, str);
 18136              		.loc 1 2658 0
 18137 09f6 07F11C03 		add	r3, r7, #28
 18138 09fa 1946     		mov	r1, r3
 18139 09fc 7869     		ldr	r0, [r7, #20]
 18140 09fe FFF7FEFF 		bl	strcat
2659:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18141              		.loc 1 2659 0
 18142 0a02 D7F89430 		ldr	r3, [r7, #148]
 18143 0a06 022B     		cmp	r3, #2
 18144 0a08 0BD0     		beq	.L728
2660:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18145              		.loc 1 2660 0
 18146 0a0a 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 407


 18147 0a0c FFF7FEFF 		bl	strlen
 18148 0a10 0346     		mov	r3, r0
 18149 0a12 1A46     		mov	r2, r3
 18150 0a14 7B69     		ldr	r3, [r7, #20]
 18151 0a16 1344     		add	r3, r3, r2
 18152 0a18 C54A     		ldr	r2, .L760+4
 18153 0a1a 1188     		ldrh	r1, [r2]	@ unaligned
 18154 0a1c 9278     		ldrb	r2, [r2, #2]
 18155 0a1e 1980     		strh	r1, [r3]	@ unaligned
 18156 0a20 9A70     		strb	r2, [r3, #2]
 18157              	.L728:
2656:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18158              		.loc 1 2656 0 discriminator 2
 18159 0a22 D7F89430 		ldr	r3, [r7, #148]
 18160 0a26 0133     		adds	r3, r3, #1
 18161 0a28 C7F89430 		str	r3, [r7, #148]
 18162              	.L727:
2656:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18163              		.loc 1 2656 0 is_stmt 0 discriminator 1
 18164 0a2c D7F89430 		ldr	r3, [r7, #148]
 18165 0a30 022B     		cmp	r3, #2
 18166 0a32 BBDD     		ble	.L729
2661:..\src/command_processing.c ****             }
2662:..\src/command_processing.c ****         }
2663:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18167              		.loc 1 2663 0 is_stmt 1
 18168 0a34 7869     		ldr	r0, [r7, #20]
 18169 0a36 FFF7FEFF 		bl	strlen
 18170 0a3a 0346     		mov	r3, r0
 18171 0a3c 1A46     		mov	r2, r3
 18172 0a3e 7B69     		ldr	r3, [r7, #20]
 18173 0a40 1344     		add	r3, r3, r2
 18174 0a42 BC4A     		ldr	r2, .L760+8
 18175 0a44 1188     		ldrh	r1, [r2]	@ unaligned
 18176 0a46 9278     		ldrb	r2, [r2, #2]
 18177 0a48 1980     		strh	r1, [r3]	@ unaligned
 18178 0a4a 9A70     		strb	r2, [r3, #2]
2664:..\src/command_processing.c ****             
2665:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 18179              		.loc 1 2665 0
 18180 0a4c 7869     		ldr	r0, [r7, #20]
 18181 0a4e FFF7FEFF 		bl	strlen
 18182 0a52 0346     		mov	r3, r0
 18183 0a54 1A46     		mov	r2, r3
 18184 0a56 7B69     		ldr	r3, [r7, #20]
 18185 0a58 1344     		add	r3, r3, r2
 18186 0a5a B74A     		ldr	r2, .L760+12
 18187 0a5c 1C46     		mov	r4, r3
 18188 0a5e 1346     		mov	r3, r2
 18189 0a60 07CB     		ldmia	r3!, {r0, r1, r2}
 18190 0a62 2060     		str	r0, [r4]	@ unaligned
 18191 0a64 6160     		str	r1, [r4, #4]	@ unaligned
 18192 0a66 A260     		str	r2, [r4, #8]	@ unaligned
 18193 0a68 1B88     		ldrh	r3, [r3]	@ unaligned
 18194 0a6a A381     		strh	r3, [r4, #12]	@ unaligned
2666:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18195              		.loc 1 2666 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 408


 18196 0a6c 0023     		movs	r3, #0
 18197 0a6e C7F89430 		str	r3, [r7, #148]
 18198 0a72 35E0     		b	.L730
 18199              	.L732:
2667:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18200              		.loc 1 2667 0
 18201 0a74 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18202 0a78 D7F88C10 		ldr	r1, [r7, #140]
 18203 0a7c 1346     		mov	r3, r2
 18204 0a7e 5B00     		lsls	r3, r3, #1
 18205 0a80 1344     		add	r3, r3, r2
 18206 0a82 9B00     		lsls	r3, r3, #2
 18207 0a84 D7F89420 		ldr	r2, [r7, #148]
 18208 0a88 1344     		add	r3, r3, r2
 18209 0a8a 6833     		adds	r3, r3, #104
 18210 0a8c 9B00     		lsls	r3, r3, #2
 18211 0a8e 0B44     		add	r3, r3, r1
 18212 0a90 5B68     		ldr	r3, [r3, #4]	@ float
 18213 0a92 1846     		mov	r0, r3
 18214 0a94 FFF7FEFF 		bl	__aeabi_f2d
 18215 0a98 0346     		mov	r3, r0
 18216 0a9a 0C46     		mov	r4, r1
 18217 0a9c 07F11C00 		add	r0, r7, #28
 18218 0aa0 1A46     		mov	r2, r3
 18219 0aa2 2346     		mov	r3, r4
 18220 0aa4 A549     		ldr	r1, .L760+16
 18221 0aa6 FFF7FEFF 		bl	sprintf
2668:..\src/command_processing.c ****             strcat(info_string, str);
 18222              		.loc 1 2668 0
 18223 0aaa 07F11C03 		add	r3, r7, #28
 18224 0aae 1946     		mov	r1, r3
 18225 0ab0 7869     		ldr	r0, [r7, #20]
 18226 0ab2 FFF7FEFF 		bl	strcat
2669:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18227              		.loc 1 2669 0
 18228 0ab6 D7F89430 		ldr	r3, [r7, #148]
 18229 0aba 022B     		cmp	r3, #2
 18230 0abc 0BD0     		beq	.L731
2670:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18231              		.loc 1 2670 0
 18232 0abe 7869     		ldr	r0, [r7, #20]
 18233 0ac0 FFF7FEFF 		bl	strlen
 18234 0ac4 0346     		mov	r3, r0
 18235 0ac6 1A46     		mov	r2, r3
 18236 0ac8 7B69     		ldr	r3, [r7, #20]
 18237 0aca 1344     		add	r3, r3, r2
 18238 0acc 984A     		ldr	r2, .L760+4
 18239 0ace 1188     		ldrh	r1, [r2]	@ unaligned
 18240 0ad0 9278     		ldrb	r2, [r2, #2]
 18241 0ad2 1980     		strh	r1, [r3]	@ unaligned
 18242 0ad4 9A70     		strb	r2, [r3, #2]
 18243              	.L731:
2666:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18244              		.loc 1 2666 0 discriminator 2
 18245 0ad6 D7F89430 		ldr	r3, [r7, #148]
 18246 0ada 0133     		adds	r3, r3, #1
 18247 0adc C7F89430 		str	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 409


 18248              	.L730:
2666:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18249              		.loc 1 2666 0 is_stmt 0 discriminator 1
 18250 0ae0 D7F89430 		ldr	r3, [r7, #148]
 18251 0ae4 022B     		cmp	r3, #2
 18252 0ae6 C5DD     		ble	.L732
2671:..\src/command_processing.c ****             }
2672:..\src/command_processing.c ****         }
2673:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 18253              		.loc 1 2673 0 is_stmt 1
 18254 0ae8 7869     		ldr	r0, [r7, #20]
 18255 0aea FFF7FEFF 		bl	strlen
 18256 0aee 0346     		mov	r3, r0
 18257 0af0 1A46     		mov	r2, r3
 18258 0af2 7B69     		ldr	r3, [r7, #20]
 18259 0af4 1344     		add	r3, r3, r2
 18260 0af6 8F4A     		ldr	r2, .L760+8
 18261 0af8 1188     		ldrh	r1, [r2]	@ unaligned
 18262 0afa 9278     		ldrb	r2, [r2, #2]
 18263 0afc 1980     		strh	r1, [r3]	@ unaligned
 18264 0afe 9A70     		strb	r2, [r3, #2]
2674:..\src/command_processing.c **** 
2675:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 18265              		.loc 1 2675 0
 18266 0b00 D7F88430 		ldr	r3, [r7, #132]
 18267 0b04 5B6C     		ldr	r3, [r3, #68]	@ float
 18268 0b06 1846     		mov	r0, r3
 18269 0b08 FFF7FEFF 		bl	__aeabi_f2d
 18270 0b0c C7E90201 		strd	r0, [r7, #8]
 18271 0b10 D7F88430 		ldr	r3, [r7, #132]
 18272 0b14 9B6C     		ldr	r3, [r3, #72]	@ float
 18273 0b16 1846     		mov	r0, r3
 18274 0b18 FFF7FEFF 		bl	__aeabi_f2d
 18275 0b1c 0446     		mov	r4, r0
 18276 0b1e 0D46     		mov	r5, r1
 18277 0b20 D7F88430 		ldr	r3, [r7, #132]
 18278 0b24 DB6C     		ldr	r3, [r3, #76]	@ float
 18279 0b26 1846     		mov	r0, r3
 18280 0b28 FFF7FEFF 		bl	__aeabi_f2d
 18281 0b2c 8046     		mov	r8, r0
 18282 0b2e 8946     		mov	r9, r1
 18283 0b30 D7F88430 		ldr	r3, [r7, #132]
 18284 0b34 1B6D     		ldr	r3, [r3, #80]	@ float
 18285 0b36 1846     		mov	r0, r3
 18286 0b38 FFF7FEFF 		bl	__aeabi_f2d
 18287 0b3c 8246     		mov	r10, r0
 18288 0b3e 8B46     		mov	fp, r1
 18289 0b40 D7F88430 		ldr	r3, [r7, #132]
 18290 0b44 5B6D     		ldr	r3, [r3, #84]	@ float
 18291 0b46 1846     		mov	r0, r3
 18292 0b48 FFF7FEFF 		bl	__aeabi_f2d
 18293 0b4c C7E90001 		strd	r0, [r7]
 18294 0b50 D7F88430 		ldr	r3, [r7, #132]
 18295 0b54 9B6D     		ldr	r3, [r3, #88]	@ float
 18296 0b56 1846     		mov	r0, r3
 18297 0b58 FFF7FEFF 		bl	__aeabi_f2d
 18298 0b5c 0246     		mov	r2, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 410


 18299 0b5e 0B46     		mov	r3, r1
 18300 0b60 07F11C00 		add	r0, r7, #28
 18301 0b64 CDE90823 		strd	r2, [sp, #32]
 18302 0b68 D7E90012 		ldrd	r1, [r7]
 18303 0b6c CDE90612 		strd	r1, [sp, #24]
 18304 0b70 CDE904AB 		strd	r10, [sp, #16]
 18305 0b74 CDE90289 		strd	r8, [sp, #8]
 18306 0b78 CDE90045 		strd	r4, [sp]
 18307 0b7c D7E90223 		ldrd	r2, [r7, #8]
 18308 0b80 6F49     		ldr	r1, .L760+20
 18309 0b82 FFF7FEFF 		bl	sprintf
2676:..\src/command_processing.c **** 		strcat(info_string, str);
 18310              		.loc 1 2676 0
 18311 0b86 07F11C03 		add	r3, r7, #28
 18312 0b8a 1946     		mov	r1, r3
 18313 0b8c 7869     		ldr	r0, [r7, #20]
 18314 0b8e FFF7FEFF 		bl	strcat
2677:..\src/command_processing.c **** 
2678:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 18315              		.loc 1 2678 0
 18316 0b92 D7F88430 		ldr	r3, [r7, #132]
 18317 0b96 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 18318 0b9a 1A46     		mov	r2, r3
 18319 0b9c 07F11C03 		add	r3, r7, #28
 18320 0ba0 6849     		ldr	r1, .L760+24
 18321 0ba2 1846     		mov	r0, r3
 18322 0ba4 FFF7FEFF 		bl	sprintf
2679:..\src/command_processing.c **** 		strcat(info_string, str);
 18323              		.loc 1 2679 0
 18324 0ba8 07F11C03 		add	r3, r7, #28
 18325 0bac 1946     		mov	r1, r3
 18326 0bae 7869     		ldr	r0, [r7, #20]
 18327 0bb0 FFF7FEFF 		bl	strcat
2680:..\src/command_processing.c **** 
2681:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 18328              		.loc 1 2681 0
 18329 0bb4 D7F88430 		ldr	r3, [r7, #132]
 18330 0bb8 596B     		ldr	r1, [r3, #52]
 18331 0bba 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18332 0bbe D7F88C00 		ldr	r0, [r7, #140]
 18333 0bc2 1346     		mov	r3, r2
 18334 0bc4 5B00     		lsls	r3, r3, #1
 18335 0bc6 1344     		add	r3, r3, r2
 18336 0bc8 1B01     		lsls	r3, r3, #4
 18337 0bca 0344     		add	r3, r3, r0
 18338 0bcc 03F29513 		addw	r3, r3, #405
 18339 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18340 0bd2 41FA03F4 		asr	r4, r1, r3
 18341 0bd6 D7F88430 		ldr	r3, [r7, #132]
 18342 0bda 996B     		ldr	r1, [r3, #56]
 18343 0bdc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18344 0be0 D7F88C00 		ldr	r0, [r7, #140]
 18345 0be4 1346     		mov	r3, r2
 18346 0be6 5B00     		lsls	r3, r3, #1
 18347 0be8 1344     		add	r3, r3, r2
 18348 0bea 1B01     		lsls	r3, r3, #4
 18349 0bec 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 411


 18350 0bee 03F29513 		addw	r3, r3, #405
 18351 0bf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18352 0bf4 41FA03F3 		asr	r3, r1, r3
 18353 0bf8 07F11C00 		add	r0, r7, #28
 18354 0bfc 2246     		mov	r2, r4
 18355 0bfe 5249     		ldr	r1, .L760+28
 18356 0c00 FFF7FEFF 		bl	sprintf
2682:..\src/command_processing.c **** 		strcat(info_string, str);
 18357              		.loc 1 2682 0
 18358 0c04 07F11C03 		add	r3, r7, #28
 18359 0c08 1946     		mov	r1, r3
 18360 0c0a 7869     		ldr	r0, [r7, #20]
 18361 0c0c FFF7FEFF 		bl	strcat
2683:..\src/command_processing.c **** 
2684:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 18362              		.loc 1 2684 0
 18363 0c10 D7F88430 		ldr	r3, [r7, #132]
 18364 0c14 B3F95C30 		ldrsh	r3, [r3, #92]
 18365 0c18 1A46     		mov	r2, r3
 18366 0c1a 07F11C03 		add	r3, r7, #28
 18367 0c1e 4B49     		ldr	r1, .L760+32
 18368 0c20 1846     		mov	r0, r3
 18369 0c22 FFF7FEFF 		bl	sprintf
2685:..\src/command_processing.c **** 		strcat(info_string, str);
 18370              		.loc 1 2685 0
 18371 0c26 07F11C03 		add	r3, r7, #28
 18372 0c2a 1946     		mov	r1, r3
 18373 0c2c 7869     		ldr	r0, [r7, #20]
 18374 0c2e FFF7FEFF 		bl	strcat
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 18375              		.loc 1 2687 0
 18376 0c32 D7F88430 		ldr	r3, [r7, #132]
 18377 0c36 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 18378 0c3a 022B     		cmp	r3, #2
 18379 0c3c 18D0     		beq	.L733
2688:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18380              		.loc 1 2688 0 discriminator 1
 18381 0c3e D7F88430 		ldr	r3, [r7, #132]
 18382 0c42 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2687:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18383              		.loc 1 2687 0 discriminator 1
 18384 0c46 032B     		cmp	r3, #3
 18385 0c48 12D0     		beq	.L733
2689:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 18386              		.loc 1 2689 0
 18387 0c4a D7F88430 		ldr	r3, [r7, #132]
 18388 0c4e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2688:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18389              		.loc 1 2688 0
 18390 0c52 042B     		cmp	r3, #4
 18391 0c54 0CD0     		beq	.L733
2690:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 18392              		.loc 1 2690 0
 18393 0c56 D7F88430 		ldr	r3, [r7, #132]
 18394 0c5a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2689:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 412


 18395              		.loc 1 2689 0
 18396 0c5e 052B     		cmp	r3, #5
 18397 0c60 06D0     		beq	.L733
2691:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 18398              		.loc 1 2691 0
 18399 0c62 D7F88430 		ldr	r3, [r7, #132]
 18400 0c66 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2690:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 18401              		.loc 1 2690 0
 18402 0c6a 072B     		cmp	r3, #7
 18403 0c6c 40F0AA80 		bne	.L734
 18404              	.L733:
2692:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 18405              		.loc 1 2692 0
 18406 0c70 D7F88C30 		ldr	r3, [r7, #140]
 18407 0c74 B3F8F031 		ldrh	r3, [r3, #496]
 18408 0c78 1A46     		mov	r2, r3
 18409 0c7a D7F88C30 		ldr	r3, [r7, #140]
 18410 0c7e B3F8F231 		ldrh	r3, [r3, #498]
 18411 0c82 07F11C00 		add	r0, r7, #28
 18412 0c86 3249     		ldr	r1, .L760+36
 18413 0c88 FFF7FEFF 		bl	sprintf
2693:..\src/command_processing.c **** 			strcat(info_string, str);
 18414              		.loc 1 2693 0
 18415 0c8c 07F11C03 		add	r3, r7, #28
 18416 0c90 1946     		mov	r1, r3
 18417 0c92 7869     		ldr	r0, [r7, #20]
 18418 0c94 FFF7FEFF 		bl	strcat
2694:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 18419              		.loc 1 2694 0
 18420 0c98 7869     		ldr	r0, [r7, #20]
 18421 0c9a FFF7FEFF 		bl	strlen
 18422 0c9e 0346     		mov	r3, r0
 18423 0ca0 1A46     		mov	r2, r3
 18424 0ca2 7B69     		ldr	r3, [r7, #20]
 18425 0ca4 1344     		add	r3, r3, r2
 18426 0ca6 234A     		ldr	r2, .L760+8
 18427 0ca8 1188     		ldrh	r1, [r2]	@ unaligned
 18428 0caa 9278     		ldrb	r2, [r2, #2]
 18429 0cac 1980     		strh	r1, [r3]	@ unaligned
 18430 0cae 9A70     		strb	r2, [r3, #2]
2695:..\src/command_processing.c **** 
2696:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 18431              		.loc 1 2696 0
 18432 0cb0 D7F88C30 		ldr	r3, [r7, #140]
 18433 0cb4 D3F8F421 		ldr	r2, [r3, #500]
 18434 0cb8 D7F88C30 		ldr	r3, [r7, #140]
 18435 0cbc D3F8F831 		ldr	r3, [r3, #504]
 18436 0cc0 07F11C00 		add	r0, r7, #28
 18437 0cc4 2349     		ldr	r1, .L760+40
 18438 0cc6 FFF7FEFF 		bl	sprintf
2697:..\src/command_processing.c **** 			strcat(info_string, str);
 18439              		.loc 1 2697 0
 18440 0cca 07F11C03 		add	r3, r7, #28
 18441 0cce 1946     		mov	r1, r3
 18442 0cd0 7869     		ldr	r0, [r7, #20]
 18443 0cd2 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 413


2698:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 18444              		.loc 1 2698 0
 18445 0cd6 7869     		ldr	r0, [r7, #20]
 18446 0cd8 FFF7FEFF 		bl	strlen
 18447 0cdc 0346     		mov	r3, r0
 18448 0cde 1A46     		mov	r2, r3
 18449 0ce0 7B69     		ldr	r3, [r7, #20]
 18450 0ce2 1344     		add	r3, r3, r2
 18451 0ce4 134A     		ldr	r2, .L760+8
 18452 0ce6 1188     		ldrh	r1, [r2]	@ unaligned
 18453 0ce8 9278     		ldrb	r2, [r2, #2]
 18454 0cea 1980     		strh	r1, [r3]	@ unaligned
 18455 0cec 9A70     		strb	r2, [r3, #2]
2699:..\src/command_processing.c **** 
2700:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 18456              		.loc 1 2700 0
 18457 0cee D7F88C30 		ldr	r3, [r7, #140]
 18458 0cf2 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 18459 0cf6 002B     		cmp	r3, #0
 18460 0cf8 30D0     		beq	.L735
2701:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 18461              		.loc 1 2701 0
 18462 0cfa 7869     		ldr	r0, [r7, #20]
 18463 0cfc FFF7FEFF 		bl	strlen
 18464 0d00 0346     		mov	r3, r0
 18465 0d02 1A46     		mov	r2, r3
 18466 0d04 7B69     		ldr	r3, [r7, #20]
 18467 0d06 1344     		add	r3, r3, r2
 18468 0d08 134A     		ldr	r2, .L760+44
 18469 0d0a 1D46     		mov	r5, r3
 18470 0d0c 1446     		mov	r4, r2
 18471 0d0e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18472 0d10 2860     		str	r0, [r5]	@ unaligned
 18473 0d12 6960     		str	r1, [r5, #4]	@ unaligned
 18474 0d14 AA60     		str	r2, [r5, #8]	@ unaligned
 18475 0d16 EB60     		str	r3, [r5, #12]	@ unaligned
 18476 0d18 03CC     		ldmia	r4!, {r0, r1}
 18477 0d1a 2861     		str	r0, [r5, #16]	@ unaligned
 18478 0d1c 6961     		str	r1, [r5, #20]	@ unaligned
 18479 0d1e 2388     		ldrh	r3, [r4]	@ unaligned
 18480 0d20 A278     		ldrb	r2, [r4, #2]
 18481 0d22 2B83     		strh	r3, [r5, #24]	@ unaligned
 18482 0d24 1346     		mov	r3, r2
 18483 0d26 AB76     		strb	r3, [r5, #26]
 18484 0d28 2CE0     		b	.L736
 18485              	.L761:
 18486 0d2a 00BF     		.align	2
 18487              	.L760:
 18488 0d2c C4160000 		.word	.LC215
 18489 0d30 90130000 		.word	.LC184
 18490 0d34 58110000 		.word	.LC152
 18491 0d38 141D0000 		.word	.LC274
 18492 0d3c E4160000 		.word	.LC217
 18493 0d40 241D0000 		.word	.LC275
 18494 0d44 601D0000 		.word	.LC276
 18495 0d48 7C1D0000 		.word	.LC277
 18496 0d4c 84170000 		.word	.LC223
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 414


 18497 0d50 AC170000 		.word	.LC225
 18498 0d54 D0170000 		.word	.LC226
 18499 0d58 20180000 		.word	.LC229
 18500              	.L735:
2702:..\src/command_processing.c **** 			else
2703:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 18501              		.loc 1 2703 0
 18502 0d5c 7869     		ldr	r0, [r7, #20]
 18503 0d5e FFF7FEFF 		bl	strlen
 18504 0d62 0346     		mov	r3, r0
 18505 0d64 1A46     		mov	r2, r3
 18506 0d66 7B69     		ldr	r3, [r7, #20]
 18507 0d68 1344     		add	r3, r3, r2
 18508 0d6a D04A     		ldr	r2, .L762
 18509 0d6c 1D46     		mov	r5, r3
 18510 0d6e 1446     		mov	r4, r2
 18511 0d70 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18512 0d72 2860     		str	r0, [r5]	@ unaligned
 18513 0d74 6960     		str	r1, [r5, #4]	@ unaligned
 18514 0d76 AA60     		str	r2, [r5, #8]	@ unaligned
 18515 0d78 EB60     		str	r3, [r5, #12]	@ unaligned
 18516 0d7a 03CC     		ldmia	r4!, {r0, r1}
 18517 0d7c 2861     		str	r0, [r5, #16]	@ unaligned
 18518 0d7e 6961     		str	r1, [r5, #20]	@ unaligned
 18519 0d80 2388     		ldrh	r3, [r4]	@ unaligned
 18520 0d82 2B83     		strh	r3, [r5, #24]	@ unaligned
 18521              	.L736:
2704:..\src/command_processing.c **** 
2705:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 18522              		.loc 1 2705 0
 18523 0d84 D7F88C30 		ldr	r3, [r7, #140]
 18524 0d88 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 18525 0d8c 1A46     		mov	r2, r3
 18526 0d8e D7F88C30 		ldr	r3, [r7, #140]
 18527 0d92 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 18528 0d96 07F11C00 		add	r0, r7, #28
 18529 0d9a C549     		ldr	r1, .L762+4
 18530 0d9c FFF7FEFF 		bl	sprintf
2706:..\src/command_processing.c **** 			strcat(info_string, str);
 18531              		.loc 1 2706 0
 18532 0da0 07F11C03 		add	r3, r7, #28
 18533 0da4 1946     		mov	r1, r3
 18534 0da6 7869     		ldr	r0, [r7, #20]
 18535 0da8 FFF7FEFF 		bl	strcat
2707:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 18536              		.loc 1 2707 0
 18537 0dac 7869     		ldr	r0, [r7, #20]
 18538 0dae FFF7FEFF 		bl	strlen
 18539 0db2 0346     		mov	r3, r0
 18540 0db4 1A46     		mov	r2, r3
 18541 0db6 7B69     		ldr	r3, [r7, #20]
 18542 0db8 1344     		add	r3, r3, r2
 18543 0dba BE4A     		ldr	r2, .L762+8
 18544 0dbc 1188     		ldrh	r1, [r2]	@ unaligned
 18545 0dbe 9278     		ldrb	r2, [r2, #2]
 18546 0dc0 1980     		strh	r1, [r3]	@ unaligned
 18547 0dc2 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 415


 18548              	.L734:
 18549              	.LBE28:
2537:..\src/command_processing.c ****             
 18550              		.loc 1 2537 0 discriminator 2
 18551 0dc4 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 18552 0dc8 0133     		adds	r3, r3, #1
 18553 0dca 87F89330 		strb	r3, [r7, #147]
 18554              	.L693:
2537:..\src/command_processing.c ****             
 18555              		.loc 1 2537 0 is_stmt 0 discriminator 1
 18556 0dce D7F88C30 		ldr	r3, [r7, #140]
 18557 0dd2 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 18558 0dd6 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 18559 0dda 9A42     		cmp	r2, r3
 18560 0ddc 7FF699A9 		bls	.L737
 18561              	.LBE27:
2708:..\src/command_processing.c **** 		}
2709:..\src/command_processing.c **** 	}
2710:..\src/command_processing.c **** 	 
2711:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 18562              		.loc 1 2711 0 is_stmt 1
 18563 0de0 D7F88C30 		ldr	r3, [r7, #140]
 18564 0de4 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 18565 0de8 002B     		cmp	r3, #0
 18566 0dea 63D0     		beq	.L738
2712:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 18567              		.loc 1 2712 0
 18568 0dec D7F88C30 		ldr	r3, [r7, #140]
 18569 0df0 D3F8A422 		ldr	r2, [r3, #676]
 18570 0df4 07F11C03 		add	r3, r7, #28
 18571 0df8 AF49     		ldr	r1, .L762+12
 18572 0dfa 1846     		mov	r0, r3
 18573 0dfc FFF7FEFF 		bl	sprintf
2713:..\src/command_processing.c ****         strcat(info_string, str);
 18574              		.loc 1 2713 0
 18575 0e00 07F11C03 		add	r3, r7, #28
 18576 0e04 1946     		mov	r1, r3
 18577 0e06 7869     		ldr	r0, [r7, #20]
 18578 0e08 FFF7FEFF 		bl	strcat
2714:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18579              		.loc 1 2714 0
 18580 0e0c 7869     		ldr	r0, [r7, #20]
 18581 0e0e FFF7FEFF 		bl	strlen
 18582 0e12 0346     		mov	r3, r0
 18583 0e14 1A46     		mov	r2, r3
 18584 0e16 7B69     		ldr	r3, [r7, #20]
 18585 0e18 1344     		add	r3, r3, r2
 18586 0e1a A64A     		ldr	r2, .L762+8
 18587 0e1c 1188     		ldrh	r1, [r2]	@ unaligned
 18588 0e1e 9278     		ldrb	r2, [r2, #2]
 18589 0e20 1980     		strh	r1, [r3]	@ unaligned
 18590 0e22 9A70     		strb	r2, [r3, #2]
2715:..\src/command_processing.c ****         
2716:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 18591              		.loc 1 2716 0
 18592 0e24 D7F88C30 		ldr	r3, [r7, #140]
 18593 0e28 D3F8A822 		ldr	r2, [r3, #680]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 416


 18594 0e2c 07F11C03 		add	r3, r7, #28
 18595 0e30 A249     		ldr	r1, .L762+16
 18596 0e32 1846     		mov	r0, r3
 18597 0e34 FFF7FEFF 		bl	sprintf
2717:..\src/command_processing.c ****         strcat(info_string, str);
 18598              		.loc 1 2717 0
 18599 0e38 07F11C03 		add	r3, r7, #28
 18600 0e3c 1946     		mov	r1, r3
 18601 0e3e 7869     		ldr	r0, [r7, #20]
 18602 0e40 FFF7FEFF 		bl	strcat
2718:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18603              		.loc 1 2718 0
 18604 0e44 7869     		ldr	r0, [r7, #20]
 18605 0e46 FFF7FEFF 		bl	strlen
 18606 0e4a 0346     		mov	r3, r0
 18607 0e4c 1A46     		mov	r2, r3
 18608 0e4e 7B69     		ldr	r3, [r7, #20]
 18609 0e50 1344     		add	r3, r3, r2
 18610 0e52 984A     		ldr	r2, .L762+8
 18611 0e54 1188     		ldrh	r1, [r2]	@ unaligned
 18612 0e56 9278     		ldrb	r2, [r2, #2]
 18613 0e58 1980     		strh	r1, [r3]	@ unaligned
 18614 0e5a 9A70     		strb	r2, [r3, #2]
2719:..\src/command_processing.c ****         
2720:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 18615              		.loc 1 2720 0
 18616 0e5c D7F88C30 		ldr	r3, [r7, #140]
 18617 0e60 D3F8A022 		ldr	r2, [r3, #672]
 18618 0e64 D7F88C30 		ldr	r3, [r7, #140]
 18619 0e68 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 18620 0e6c 1846     		mov	r0, r3
 18621 0e6e D7F88C10 		ldr	r1, [r7, #140]
 18622 0e72 0346     		mov	r3, r0
 18623 0e74 5B00     		lsls	r3, r3, #1
 18624 0e76 0344     		add	r3, r3, r0
 18625 0e78 1B01     		lsls	r3, r3, #4
 18626 0e7a 0B44     		add	r3, r3, r1
 18627 0e7c 03F29513 		addw	r3, r3, #405
 18628 0e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18629 0e82 1A41     		asrs	r2, r2, r3
 18630 0e84 07F11C03 		add	r3, r7, #28
 18631 0e88 8D49     		ldr	r1, .L762+20
 18632 0e8a 1846     		mov	r0, r3
 18633 0e8c FFF7FEFF 		bl	sprintf
2721:..\src/command_processing.c ****         strcat(info_string, str);
 18634              		.loc 1 2721 0
 18635 0e90 07F11C03 		add	r3, r7, #28
 18636 0e94 1946     		mov	r1, r3
 18637 0e96 7869     		ldr	r0, [r7, #20]
 18638 0e98 FFF7FEFF 		bl	strcat
2722:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 18639              		.loc 1 2722 0
 18640 0e9c 7869     		ldr	r0, [r7, #20]
 18641 0e9e FFF7FEFF 		bl	strlen
 18642 0ea2 0346     		mov	r3, r0
 18643 0ea4 1A46     		mov	r2, r3
 18644 0ea6 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 417


 18645 0ea8 1344     		add	r3, r3, r2
 18646 0eaa 824A     		ldr	r2, .L762+8
 18647 0eac 1188     		ldrh	r1, [r2]	@ unaligned
 18648 0eae 9278     		ldrb	r2, [r2, #2]
 18649 0eb0 1980     		strh	r1, [r3]	@ unaligned
 18650 0eb2 9A70     		strb	r2, [r3, #2]
 18651              	.L738:
2723:..\src/command_processing.c ****     }
2724:..\src/command_processing.c **** 	
2725:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 18652              		.loc 1 2725 0
 18653 0eb4 D7F88C30 		ldr	r3, [r7, #140]
 18654 0eb8 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 18655 0ebc 002B     		cmp	r3, #0
 18656 0ebe 00F0CB81 		beq	.L753
2726:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 18657              		.loc 1 2726 0
 18658 0ec2 804B     		ldr	r3, .L762+24
 18659 0ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18660 0ec6 1A46     		mov	r2, r3
 18661 0ec8 07F11C03 		add	r3, r7, #28
 18662 0ecc 7E49     		ldr	r1, .L762+28
 18663 0ece 1846     		mov	r0, r3
 18664 0ed0 FFF7FEFF 		bl	sprintf
2727:..\src/command_processing.c **** 		strcat(info_string, str);
 18665              		.loc 1 2727 0
 18666 0ed4 07F11C03 		add	r3, r7, #28
 18667 0ed8 1946     		mov	r1, r3
 18668 0eda 7869     		ldr	r0, [r7, #20]
 18669 0edc FFF7FEFF 		bl	strcat
2728:..\src/command_processing.c **** 		
2729:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 18670              		.loc 1 2729 0
 18671 0ee0 7869     		ldr	r0, [r7, #20]
 18672 0ee2 FFF7FEFF 		bl	strlen
 18673 0ee6 0346     		mov	r3, r0
 18674 0ee8 1A46     		mov	r2, r3
 18675 0eea 7B69     		ldr	r3, [r7, #20]
 18676 0eec 1344     		add	r3, r3, r2
 18677 0eee 714A     		ldr	r2, .L762+8
 18678 0ef0 1188     		ldrh	r1, [r2]	@ unaligned
 18679 0ef2 9278     		ldrb	r2, [r2, #2]
 18680 0ef4 1980     		strh	r1, [r3]	@ unaligned
 18681 0ef6 9A70     		strb	r2, [r3, #2]
2730:..\src/command_processing.c **** 		
2731:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 18682              		.loc 1 2731 0
 18683 0ef8 7869     		ldr	r0, [r7, #20]
 18684 0efa FFF7FEFF 		bl	strlen
 18685 0efe 0346     		mov	r3, r0
 18686 0f00 1A46     		mov	r2, r3
 18687 0f02 7B69     		ldr	r3, [r7, #20]
 18688 0f04 1344     		add	r3, r3, r2
 18689 0f06 714A     		ldr	r2, .L762+32
 18690 0f08 1D46     		mov	r5, r3
 18691 0f0a 1446     		mov	r4, r2
 18692 0f0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 418


 18693 0f0e 2860     		str	r0, [r5]	@ unaligned
 18694 0f10 6960     		str	r1, [r5, #4]	@ unaligned
 18695 0f12 AA60     		str	r2, [r5, #8]	@ unaligned
 18696 0f14 EB60     		str	r3, [r5, #12]	@ unaligned
 18697 0f16 2068     		ldr	r0, [r4]	@ unaligned
 18698 0f18 2861     		str	r0, [r5, #16]	@ unaligned
 18699 0f1a 2379     		ldrb	r3, [r4, #4]
 18700 0f1c 2B75     		strb	r3, [r5, #20]
2732:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 18701              		.loc 1 2732 0
 18702 0f1e 0023     		movs	r3, #0
 18703 0f20 C7F89430 		str	r3, [r7, #148]
 18704 0f24 84E1     		b	.L740
 18705              	.L751:
2733:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18706              		.loc 1 2733 0
 18707 0f26 6A4A     		ldr	r2, .L762+36
 18708 0f28 D7F89430 		ldr	r3, [r7, #148]
 18709 0f2c 1344     		add	r3, r3, r2
 18710 0f2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18711 0f30 07F11C00 		add	r0, r7, #28
 18712 0f34 D7F89420 		ldr	r2, [r7, #148]
 18713 0f38 6649     		ldr	r1, .L762+40
 18714 0f3a FFF7FEFF 		bl	sprintf
2734:..\src/command_processing.c **** 			strcat(info_string, str);
 18715              		.loc 1 2734 0
 18716 0f3e 07F11C03 		add	r3, r7, #28
 18717 0f42 1946     		mov	r1, r3
 18718 0f44 7869     		ldr	r0, [r7, #20]
 18719 0f46 FFF7FEFF 		bl	strcat
2735:..\src/command_processing.c **** 			
2736:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 18720              		.loc 1 2736 0
 18721 0f4a 07F11C03 		add	r3, r7, #28
 18722 0f4e 624A     		ldr	r2, .L762+44
 18723 0f50 1C46     		mov	r4, r3
 18724 0f52 1546     		mov	r5, r2
 18725 0f54 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18726 0f56 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18727 0f58 2B68     		ldr	r3, [r5]
 18728 0f5a 2380     		strh	r3, [r4]	@ movhi
2737:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 18729              		.loc 1 2737 0
 18730 0f5c 5C4A     		ldr	r2, .L762+36
 18731 0f5e D7F89430 		ldr	r3, [r7, #148]
 18732 0f62 1344     		add	r3, r3, r2
 18733 0f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18734 0f66 1946     		mov	r1, r3
 18735 0f68 D7F88C20 		ldr	r2, [r7, #140]
 18736 0f6c 0B46     		mov	r3, r1
 18737 0f6e 9B00     		lsls	r3, r3, #2
 18738 0f70 0B44     		add	r3, r3, r1
 18739 0f72 1344     		add	r3, r3, r2
 18740 0f74 03F20223 		addw	r3, r3, #514
 18741 0f78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18742 0f7a 002B     		cmp	r3, #0
 18743 0f7c 0FD0     		beq	.L741
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 419


2738:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 18744              		.loc 1 2738 0
 18745 0f7e 07F11C03 		add	r3, r7, #28
 18746 0f82 1846     		mov	r0, r3
 18747 0f84 FFF7FEFF 		bl	strlen
 18748 0f88 0346     		mov	r3, r0
 18749 0f8a 1A46     		mov	r2, r3
 18750 0f8c 07F11C03 		add	r3, r7, #28
 18751 0f90 1344     		add	r3, r3, r2
 18752 0f92 524A     		ldr	r2, .L762+48
 18753 0f94 1068     		ldr	r0, [r2]	@ unaligned
 18754 0f96 1860     		str	r0, [r3]	@ unaligned
 18755 0f98 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18756 0f9a 9A80     		strh	r2, [r3, #4]	@ unaligned
 18757 0f9c 0EE0     		b	.L742
 18758              	.L741:
2739:..\src/command_processing.c **** 			else
2740:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 18759              		.loc 1 2740 0
 18760 0f9e 07F11C03 		add	r3, r7, #28
 18761 0fa2 1846     		mov	r0, r3
 18762 0fa4 FFF7FEFF 		bl	strlen
 18763 0fa8 0346     		mov	r3, r0
 18764 0faa 1A46     		mov	r2, r3
 18765 0fac 07F11C03 		add	r3, r7, #28
 18766 0fb0 1344     		add	r3, r3, r2
 18767 0fb2 4B4A     		ldr	r2, .L762+52
 18768 0fb4 1068     		ldr	r0, [r2]	@ unaligned
 18769 0fb6 1860     		str	r0, [r3]	@ unaligned
 18770 0fb8 1279     		ldrb	r2, [r2, #4]
 18771 0fba 1A71     		strb	r2, [r3, #4]
 18772              	.L742:
2741:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 18773              		.loc 1 2741 0
 18774 0fbc 07F11C03 		add	r3, r7, #28
 18775 0fc0 1846     		mov	r0, r3
 18776 0fc2 FFF7FEFF 		bl	strlen
 18777 0fc6 0346     		mov	r3, r0
 18778 0fc8 1A46     		mov	r2, r3
 18779 0fca 07F11C03 		add	r3, r7, #28
 18780 0fce 1344     		add	r3, r3, r2
 18781 0fd0 444A     		ldr	r2, .L762+56
 18782 0fd2 1C46     		mov	r4, r3
 18783 0fd4 1346     		mov	r3, r2
 18784 0fd6 07CB     		ldmia	r3!, {r0, r1, r2}
 18785 0fd8 2060     		str	r0, [r4]	@ unaligned
 18786 0fda 6160     		str	r1, [r4, #4]	@ unaligned
 18787 0fdc A260     		str	r2, [r4, #8]	@ unaligned
 18788 0fde 1B88     		ldrh	r3, [r3]	@ unaligned
 18789 0fe0 A381     		strh	r3, [r4, #12]	@ unaligned
2742:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 18790              		.loc 1 2742 0
 18791 0fe2 3B4A     		ldr	r2, .L762+36
 18792 0fe4 D7F89430 		ldr	r3, [r7, #148]
 18793 0fe8 1344     		add	r3, r3, r2
 18794 0fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18795 0fec 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 420


 18796 0fee D7F88C20 		ldr	r2, [r7, #140]
 18797 0ff2 0B46     		mov	r3, r1
 18798 0ff4 9B00     		lsls	r3, r3, #2
 18799 0ff6 0B44     		add	r3, r3, r1
 18800 0ff8 1344     		add	r3, r3, r2
 18801 0ffa 03F20323 		addw	r3, r3, #515
 18802 0ffe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18803 1000 002B     		cmp	r3, #0
 18804 1002 0FD0     		beq	.L743
2743:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 18805              		.loc 1 2743 0
 18806 1004 07F11C03 		add	r3, r7, #28
 18807 1008 1846     		mov	r0, r3
 18808 100a FFF7FEFF 		bl	strlen
 18809 100e 0346     		mov	r3, r0
 18810 1010 1A46     		mov	r2, r3
 18811 1012 07F11C03 		add	r3, r7, #28
 18812 1016 1344     		add	r3, r3, r2
 18813 1018 304A     		ldr	r2, .L762+48
 18814 101a 1068     		ldr	r0, [r2]	@ unaligned
 18815 101c 1860     		str	r0, [r3]	@ unaligned
 18816 101e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18817 1020 9A80     		strh	r2, [r3, #4]	@ unaligned
 18818 1022 0EE0     		b	.L744
 18819              	.L743:
2744:..\src/command_processing.c **** 			else
2745:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 18820              		.loc 1 2745 0
 18821 1024 07F11C03 		add	r3, r7, #28
 18822 1028 1846     		mov	r0, r3
 18823 102a FFF7FEFF 		bl	strlen
 18824 102e 0346     		mov	r3, r0
 18825 1030 1A46     		mov	r2, r3
 18826 1032 07F11C03 		add	r3, r7, #28
 18827 1036 1344     		add	r3, r3, r2
 18828 1038 294A     		ldr	r2, .L762+52
 18829 103a 1068     		ldr	r0, [r2]	@ unaligned
 18830 103c 1860     		str	r0, [r3]	@ unaligned
 18831 103e 1279     		ldrb	r2, [r2, #4]
 18832 1040 1A71     		strb	r2, [r3, #4]
 18833              	.L744:
2746:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 18834              		.loc 1 2746 0
 18835 1042 07F11C03 		add	r3, r7, #28
 18836 1046 1846     		mov	r0, r3
 18837 1048 FFF7FEFF 		bl	strlen
 18838 104c 0346     		mov	r3, r0
 18839 104e 1A46     		mov	r2, r3
 18840 1050 07F11C03 		add	r3, r7, #28
 18841 1054 1344     		add	r3, r3, r2
 18842 1056 244A     		ldr	r2, .L762+60
 18843 1058 1D46     		mov	r5, r3
 18844 105a 1446     		mov	r4, r2
 18845 105c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18846 105e 2860     		str	r0, [r5]	@ unaligned
 18847 1060 6960     		str	r1, [r5, #4]	@ unaligned
 18848 1062 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 421


 18849 1064 EB60     		str	r3, [r5, #12]	@ unaligned
 18850 1066 2378     		ldrb	r3, [r4]
 18851 1068 2B74     		strb	r3, [r5, #16]
2747:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 18852              		.loc 1 2747 0
 18853 106a 194A     		ldr	r2, .L762+36
 18854 106c D7F89430 		ldr	r3, [r7, #148]
 18855 1070 1344     		add	r3, r3, r2
 18856 1072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18857 1074 1946     		mov	r1, r3
 18858 1076 D7F88C20 		ldr	r2, [r7, #140]
 18859 107a 0B46     		mov	r3, r1
 18860 107c 9B00     		lsls	r3, r3, #2
 18861 107e 0B44     		add	r3, r3, r1
 18862 1080 1344     		add	r3, r3, r2
 18863 1082 03F50173 		add	r3, r3, #516
 18864 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18865 1088 002B     		cmp	r3, #0
 18866 108a 2FD0     		beq	.L745
2748:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 18867              		.loc 1 2748 0
 18868 108c 07F11C03 		add	r3, r7, #28
 18869 1090 1846     		mov	r0, r3
 18870 1092 FFF7FEFF 		bl	strlen
 18871 1096 0346     		mov	r3, r0
 18872 1098 1A46     		mov	r2, r3
 18873 109a 07F11C03 		add	r3, r7, #28
 18874 109e 1344     		add	r3, r3, r2
 18875 10a0 0E4A     		ldr	r2, .L762+48
 18876 10a2 1068     		ldr	r0, [r2]	@ unaligned
 18877 10a4 1860     		str	r0, [r3]	@ unaligned
 18878 10a6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18879 10a8 9A80     		strh	r2, [r3, #4]	@ unaligned
 18880 10aa 2EE0     		b	.L746
 18881              	.L763:
 18882              		.align	2
 18883              	.L762:
 18884 10ac 3C180000 		.word	.LC230
 18885 10b0 58180000 		.word	.LC231
 18886 10b4 58110000 		.word	.LC152
 18887 10b8 B4180000 		.word	.LC235
 18888 10bc D0180000 		.word	.LC236
 18889 10c0 F8180000 		.word	.LC237
 18890 10c4 00000000 		.word	N_IMU_Connected
 18891 10c8 0C190000 		.word	.LC238
 18892 10cc 20190000 		.word	.LC239
 18893 10d0 00000000 		.word	IMU_connected
 18894 10d4 38190000 		.word	.LC240
 18895 10d8 4C190000 		.word	.LC241
 18896 10dc 1C130000 		.word	.LC175
 18897 10e0 24130000 		.word	.LC176
 18898 10e4 60190000 		.word	.LC242
 18899 10e8 70190000 		.word	.LC243
 18900              	.L745:
2749:..\src/command_processing.c **** 			else
2750:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 18901              		.loc 1 2750 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 422


 18902 10ec 07F11C03 		add	r3, r7, #28
 18903 10f0 1846     		mov	r0, r3
 18904 10f2 FFF7FEFF 		bl	strlen
 18905 10f6 0346     		mov	r3, r0
 18906 10f8 1A46     		mov	r2, r3
 18907 10fa 07F11C03 		add	r3, r7, #28
 18908 10fe 1344     		add	r3, r3, r2
 18909 1100 584A     		ldr	r2, .L764
 18910 1102 1068     		ldr	r0, [r2]	@ unaligned
 18911 1104 1860     		str	r0, [r3]	@ unaligned
 18912 1106 1279     		ldrb	r2, [r2, #4]
 18913 1108 1A71     		strb	r2, [r3, #4]
 18914              	.L746:
2751:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 18915              		.loc 1 2751 0
 18916 110a 07F11C03 		add	r3, r7, #28
 18917 110e 1846     		mov	r0, r3
 18918 1110 FFF7FEFF 		bl	strlen
 18919 1114 0346     		mov	r3, r0
 18920 1116 1A46     		mov	r2, r3
 18921 1118 07F11C03 		add	r3, r7, #28
 18922 111c 1344     		add	r3, r3, r2
 18923 111e 524A     		ldr	r2, .L764+4
 18924 1120 1C46     		mov	r4, r3
 18925 1122 1346     		mov	r3, r2
 18926 1124 07CB     		ldmia	r3!, {r0, r1, r2}
 18927 1126 2060     		str	r0, [r4]	@ unaligned
 18928 1128 6160     		str	r1, [r4, #4]	@ unaligned
 18929 112a A260     		str	r2, [r4, #8]	@ unaligned
 18930 112c 1B88     		ldrh	r3, [r3]	@ unaligned
 18931 112e A381     		strh	r3, [r4, #12]	@ unaligned
2752:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 18932              		.loc 1 2752 0
 18933 1130 4E4A     		ldr	r2, .L764+8
 18934 1132 D7F89430 		ldr	r3, [r7, #148]
 18935 1136 1344     		add	r3, r3, r2
 18936 1138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18937 113a 1946     		mov	r1, r3
 18938 113c D7F88C20 		ldr	r2, [r7, #140]
 18939 1140 0B46     		mov	r3, r1
 18940 1142 9B00     		lsls	r3, r3, #2
 18941 1144 0B44     		add	r3, r3, r1
 18942 1146 1344     		add	r3, r3, r2
 18943 1148 03F20523 		addw	r3, r3, #517
 18944 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18945 114e 002B     		cmp	r3, #0
 18946 1150 0FD0     		beq	.L747
2753:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 18947              		.loc 1 2753 0
 18948 1152 07F11C03 		add	r3, r7, #28
 18949 1156 1846     		mov	r0, r3
 18950 1158 FFF7FEFF 		bl	strlen
 18951 115c 0346     		mov	r3, r0
 18952 115e 1A46     		mov	r2, r3
 18953 1160 07F11C03 		add	r3, r7, #28
 18954 1164 1344     		add	r3, r3, r2
 18955 1166 424A     		ldr	r2, .L764+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 423


 18956 1168 1068     		ldr	r0, [r2]	@ unaligned
 18957 116a 1860     		str	r0, [r3]	@ unaligned
 18958 116c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18959 116e 9A80     		strh	r2, [r3, #4]	@ unaligned
 18960 1170 0EE0     		b	.L748
 18961              	.L747:
2754:..\src/command_processing.c **** 			else
2755:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 18962              		.loc 1 2755 0
 18963 1172 07F11C03 		add	r3, r7, #28
 18964 1176 1846     		mov	r0, r3
 18965 1178 FFF7FEFF 		bl	strlen
 18966 117c 0346     		mov	r3, r0
 18967 117e 1A46     		mov	r2, r3
 18968 1180 07F11C03 		add	r3, r7, #28
 18969 1184 1344     		add	r3, r3, r2
 18970 1186 374A     		ldr	r2, .L764
 18971 1188 1068     		ldr	r0, [r2]	@ unaligned
 18972 118a 1860     		str	r0, [r3]	@ unaligned
 18973 118c 1279     		ldrb	r2, [r2, #4]
 18974 118e 1A71     		strb	r2, [r3, #4]
 18975              	.L748:
2756:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 18976              		.loc 1 2756 0
 18977 1190 07F11C03 		add	r3, r7, #28
 18978 1194 1846     		mov	r0, r3
 18979 1196 FFF7FEFF 		bl	strlen
 18980 119a 0346     		mov	r3, r0
 18981 119c 1A46     		mov	r2, r3
 18982 119e 07F11C03 		add	r3, r7, #28
 18983 11a2 1344     		add	r3, r3, r2
 18984 11a4 334A     		ldr	r2, .L764+16
 18985 11a6 1C46     		mov	r4, r3
 18986 11a8 1346     		mov	r3, r2
 18987 11aa 07CB     		ldmia	r3!, {r0, r1, r2}
 18988 11ac 2060     		str	r0, [r4]	@ unaligned
 18989 11ae 6160     		str	r1, [r4, #4]	@ unaligned
 18990 11b0 A260     		str	r2, [r4, #8]	@ unaligned
 18991 11b2 1A88     		ldrh	r2, [r3]	@ unaligned
 18992 11b4 9B78     		ldrb	r3, [r3, #2]
 18993 11b6 A281     		strh	r2, [r4, #12]	@ unaligned
 18994 11b8 A373     		strb	r3, [r4, #14]
2757:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 18995              		.loc 1 2757 0
 18996 11ba 2C4A     		ldr	r2, .L764+8
 18997 11bc D7F89430 		ldr	r3, [r7, #148]
 18998 11c0 1344     		add	r3, r3, r2
 18999 11c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19000 11c4 1946     		mov	r1, r3
 19001 11c6 D7F88C20 		ldr	r2, [r7, #140]
 19002 11ca 0B46     		mov	r3, r1
 19003 11cc 9B00     		lsls	r3, r3, #2
 19004 11ce 0B44     		add	r3, r3, r1
 19005 11d0 1344     		add	r3, r3, r2
 19006 11d2 03F20623 		addw	r3, r3, #518
 19007 11d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19008 11d8 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 424


 19009 11da 0FD0     		beq	.L749
2758:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19010              		.loc 1 2758 0
 19011 11dc 07F11C03 		add	r3, r7, #28
 19012 11e0 1846     		mov	r0, r3
 19013 11e2 FFF7FEFF 		bl	strlen
 19014 11e6 0346     		mov	r3, r0
 19015 11e8 1A46     		mov	r2, r3
 19016 11ea 07F11C03 		add	r3, r7, #28
 19017 11ee 1344     		add	r3, r3, r2
 19018 11f0 1F4A     		ldr	r2, .L764+12
 19019 11f2 1068     		ldr	r0, [r2]	@ unaligned
 19020 11f4 1860     		str	r0, [r3]	@ unaligned
 19021 11f6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19022 11f8 9A80     		strh	r2, [r3, #4]	@ unaligned
 19023 11fa 0EE0     		b	.L750
 19024              	.L749:
2759:..\src/command_processing.c **** 			else
2760:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19025              		.loc 1 2760 0
 19026 11fc 07F11C03 		add	r3, r7, #28
 19027 1200 1846     		mov	r0, r3
 19028 1202 FFF7FEFF 		bl	strlen
 19029 1206 0346     		mov	r3, r0
 19030 1208 1A46     		mov	r2, r3
 19031 120a 07F11C03 		add	r3, r7, #28
 19032 120e 1344     		add	r3, r3, r2
 19033 1210 144A     		ldr	r2, .L764
 19034 1212 1068     		ldr	r0, [r2]	@ unaligned
 19035 1214 1860     		str	r0, [r3]	@ unaligned
 19036 1216 1279     		ldrb	r2, [r2, #4]
 19037 1218 1A71     		strb	r2, [r3, #4]
 19038              	.L750:
2761:..\src/command_processing.c **** 				 
2762:..\src/command_processing.c **** 			strcat(info_string, str);
 19039              		.loc 1 2762 0 discriminator 2
 19040 121a 07F11C03 		add	r3, r7, #28
 19041 121e 1946     		mov	r1, r3
 19042 1220 7869     		ldr	r0, [r7, #20]
 19043 1222 FFF7FEFF 		bl	strcat
2732:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19044              		.loc 1 2732 0 discriminator 2
 19045 1226 D7F89430 		ldr	r3, [r7, #148]
 19046 122a 0133     		adds	r3, r3, #1
 19047 122c C7F89430 		str	r3, [r7, #148]
 19048              	.L740:
2732:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19049              		.loc 1 2732 0 is_stmt 0 discriminator 1
 19050 1230 114B     		ldr	r3, .L764+20
 19051 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19052 1234 1A46     		mov	r2, r3
 19053 1236 D7F89430 		ldr	r3, [r7, #148]
 19054 123a 9A42     		cmp	r2, r3
 19055 123c 3FF773AE 		bgt	.L751
2763:..\src/command_processing.c **** 		}       
2764:..\src/command_processing.c **** 		
2765:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 425


 19056              		.loc 1 2765 0 is_stmt 1
 19057 1240 7869     		ldr	r0, [r7, #20]
 19058 1242 FFF7FEFF 		bl	strlen
 19059 1246 0346     		mov	r3, r0
 19060 1248 1A46     		mov	r2, r3
 19061 124a 7B69     		ldr	r3, [r7, #20]
 19062 124c 1344     		add	r3, r3, r2
 19063 124e 0B4A     		ldr	r2, .L764+24
 19064 1250 1188     		ldrh	r1, [r2]	@ unaligned
 19065 1252 9278     		ldrb	r2, [r2, #2]
 19066 1254 1980     		strh	r1, [r3]	@ unaligned
 19067 1256 9A70     		strb	r2, [r3, #2]
 19068              	.L753:
2766:..\src/command_processing.c **** 	}
2767:..\src/command_processing.c **** }
 19069              		.loc 1 2767 0
 19070 1258 00BF     		nop
 19071 125a 9C37     		adds	r7, r7, #156
 19072              		.cfi_def_cfa_offset 36
 19073 125c BD46     		mov	sp, r7
 19074              		.cfi_def_cfa_register 13
 19075              		@ sp needed
 19076 125e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 19077              	.L765:
 19078 1262 00BF     		.align	2
 19079              	.L764:
 19080 1264 24130000 		.word	.LC176
 19081 1268 84190000 		.word	.LC244
 19082 126c 00000000 		.word	IMU_connected
 19083 1270 1C130000 		.word	.LC175
 19084 1274 94190000 		.word	.LC245
 19085 1278 00000000 		.word	N_IMU_Connected
 19086 127c 58110000 		.word	.LC152
 19087              		.cfi_endproc
 19088              	.LFE75:
 19089              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 19090              		.section	.rodata
 19091 1da6 0000     		.align	2
 19092              	.LC278:
 19093 1da8 486F7572 		.ascii	"Hour,Min,Sec,\000"
 19093      2C4D696E 
 19093      2C536563 
 19093      2C00
 19094 1db6 0000     		.align	2
 19095              	.LC279:
 19096 1db8 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 19096      25645F50 
 19096      6F732C00 
 19097              		.align	2
 19098              	.LC280:
 19099 1dc4 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 19099      25645F43 
 19099      7572722C 
 19099      00
 19100 1dd1 000000   		.align	2
 19101              	.LC281:
 19102 1dd4 52657374 		.ascii	"Rest_times,Wire_disp,Total_rest_time,Power_cycles,E"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 426


 19102      5F74696D 
 19102      65732C57 
 19102      6972655F 
 19102      64697370 
 19103 1e07 4D475F31 		.ascii	"MG_1_act,EMG_2_act,EMG_1_excess,EMG_2_excess,Motion"
 19103      5F616374 
 19103      2C454D47 
 19103      5F325F61 
 19103      63742C45 
 19104 1e3a 5F312C4D 		.ascii	"_1,Motion_2,Total_runtime\000"
 19104      6F74696F 
 19104      6E5F322C 
 19104      546F7461 
 19104      6C5F7275 
 19105              		.section	.text.prepare_SD_legend,"ax",%progbits
 19106              		.align	2
 19107              		.global	prepare_SD_legend
 19108              		.thumb
 19109              		.thumb_func
 19110              		.type	prepare_SD_legend, %function
 19111              	prepare_SD_legend:
 19112              	.LFB76:
2768:..\src/command_processing.c **** 
2769:..\src/command_processing.c **** 
2770:..\src/command_processing.c **** //==============================================================================
2771:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2772:..\src/command_processing.c **** //==============================================================================
2773:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2774:..\src/command_processing.c **** {
 19113              		.loc 1 2774 0
 19114              		.cfi_startproc
 19115              		@ args = 0, pretend = 0, frame = 152
 19116              		@ frame_needed = 1, uses_anonymous_args = 0
 19117 0000 90B5     		push	{r4, r7, lr}
 19118              		.cfi_def_cfa_offset 12
 19119              		.cfi_offset 4, -12
 19120              		.cfi_offset 7, -8
 19121              		.cfi_offset 14, -4
 19122 0002 A7B0     		sub	sp, sp, #156
 19123              		.cfi_def_cfa_offset 168
 19124 0004 00AF     		add	r7, sp, #0
 19125              		.cfi_def_cfa_register 7
 19126 0006 7860     		str	r0, [r7, #4]
2775:..\src/command_processing.c ****     char str[140];  
2776:..\src/command_processing.c ****     int i;
2777:..\src/command_processing.c ****         
2778:..\src/command_processing.c ****     // Legend
2779:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 19127              		.loc 1 2779 0
 19128 0008 7B68     		ldr	r3, [r7, #4]
 19129 000a 2F4A     		ldr	r2, .L771
 19130 000c 1C46     		mov	r4, r3
 19131 000e 1346     		mov	r3, r2
 19132 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 19133 0012 2060     		str	r0, [r4]	@ unaligned
 19134 0014 6160     		str	r1, [r4, #4]	@ unaligned
 19135 0016 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 427


 19136 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 19137 001a A381     		strh	r3, [r4, #12]	@ unaligned
2780:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19138              		.loc 1 2780 0
 19139 001c 0123     		movs	r3, #1
 19140 001e C7F89430 		str	r3, [r7, #148]
 19141 0022 12E0     		b	.L767
 19142              	.L768:
2781:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 19143              		.loc 1 2781 0 discriminator 3
 19144 0024 07F10803 		add	r3, r7, #8
 19145 0028 D7F89420 		ldr	r2, [r7, #148]
 19146 002c 2749     		ldr	r1, .L771+4
 19147 002e 1846     		mov	r0, r3
 19148 0030 FFF7FEFF 		bl	sprintf
2782:..\src/command_processing.c ****         strcat(info_string, str);
 19149              		.loc 1 2782 0 discriminator 3
 19150 0034 07F10803 		add	r3, r7, #8
 19151 0038 1946     		mov	r1, r3
 19152 003a 7868     		ldr	r0, [r7, #4]
 19153 003c FFF7FEFF 		bl	strcat
2780:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19154              		.loc 1 2780 0 discriminator 3
 19155 0040 D7F89430 		ldr	r3, [r7, #148]
 19156 0044 0133     		adds	r3, r3, #1
 19157 0046 C7F89430 		str	r3, [r7, #148]
 19158              	.L767:
2780:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19159              		.loc 1 2780 0 is_stmt 0 discriminator 1
 19160 004a D7F89430 		ldr	r3, [r7, #148]
 19161 004e 0A2B     		cmp	r3, #10
 19162 0050 E8DD     		ble	.L768
2783:..\src/command_processing.c ****     }
2784:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 19163              		.loc 1 2784 0 is_stmt 1
 19164 0052 0123     		movs	r3, #1
 19165 0054 C7F89430 		str	r3, [r7, #148]
 19166 0058 12E0     		b	.L769
 19167              	.L770:
2785:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19168              		.loc 1 2785 0 discriminator 3
 19169 005a 07F10803 		add	r3, r7, #8
 19170 005e D7F89420 		ldr	r2, [r7, #148]
 19171 0062 1B49     		ldr	r1, .L771+8
 19172 0064 1846     		mov	r0, r3
 19173 0066 FFF7FEFF 		bl	sprintf
2786:..\src/command_processing.c ****         strcat(info_string, str);
 19174              		.loc 1 2786 0 discriminator 3
 19175 006a 07F10803 		add	r3, r7, #8
 19176 006e 1946     		mov	r1, r3
 19177 0070 7868     		ldr	r0, [r7, #4]
 19178 0072 FFF7FEFF 		bl	strcat
2784:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19179              		.loc 1 2784 0 discriminator 3
 19180 0076 D7F89430 		ldr	r3, [r7, #148]
 19181 007a 0133     		adds	r3, r3, #1
 19182 007c C7F89430 		str	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 428


 19183              	.L769:
2784:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19184              		.loc 1 2784 0 is_stmt 0 discriminator 1
 19185 0080 D7F89430 		ldr	r3, [r7, #148]
 19186 0084 042B     		cmp	r3, #4
 19187 0086 E8DD     		ble	.L770
2787:..\src/command_processing.c ****     }
2788:..\src/command_processing.c ****     sprintf(str, "Rest_times,Wire_disp,Total_rest_time,Power_cycles,EMG_1_act,EMG_2_act,EMG_1_exces
 19188              		.loc 1 2788 0 is_stmt 1
 19189 0088 07F10803 		add	r3, r7, #8
 19190 008c 114A     		ldr	r2, .L771+12
 19191 008e 1846     		mov	r0, r3
 19192 0090 1146     		mov	r1, r2
 19193 0092 8023     		movs	r3, #128
 19194 0094 1A46     		mov	r2, r3
 19195 0096 FFF7FEFF 		bl	memcpy
2789:..\src/command_processing.c ****     strcat(info_string, str);
 19196              		.loc 1 2789 0
 19197 009a 07F10803 		add	r3, r7, #8
 19198 009e 1946     		mov	r1, r3
 19199 00a0 7868     		ldr	r0, [r7, #4]
 19200 00a2 FFF7FEFF 		bl	strcat
2790:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19201              		.loc 1 2790 0
 19202 00a6 7868     		ldr	r0, [r7, #4]
 19203 00a8 FFF7FEFF 		bl	strlen
 19204 00ac 0346     		mov	r3, r0
 19205 00ae 1A46     		mov	r2, r3
 19206 00b0 7B68     		ldr	r3, [r7, #4]
 19207 00b2 1344     		add	r3, r3, r2
 19208 00b4 084A     		ldr	r2, .L771+16
 19209 00b6 1188     		ldrh	r1, [r2]	@ unaligned
 19210 00b8 9278     		ldrb	r2, [r2, #2]
 19211 00ba 1980     		strh	r1, [r3]	@ unaligned
 19212 00bc 9A70     		strb	r2, [r3, #2]
2791:..\src/command_processing.c **** }
 19213              		.loc 1 2791 0
 19214 00be 00BF     		nop
 19215 00c0 9C37     		adds	r7, r7, #156
 19216              		.cfi_def_cfa_offset 12
 19217 00c2 BD46     		mov	sp, r7
 19218              		.cfi_def_cfa_register 13
 19219              		@ sp needed
 19220 00c4 90BD     		pop	{r4, r7, pc}
 19221              	.L772:
 19222 00c6 00BF     		.align	2
 19223              	.L771:
 19224 00c8 A81D0000 		.word	.LC278
 19225 00cc B81D0000 		.word	.LC279
 19226 00d0 C41D0000 		.word	.LC280
 19227 00d4 D41D0000 		.word	.LC281
 19228 00d8 58110000 		.word	.LC152
 19229              		.cfi_endproc
 19230              	.LFE76:
 19231              		.size	prepare_SD_legend, .-prepare_SD_legend
 19232              		.section	.rodata
 19233              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 429


 19234              	.LC282:
 19235 1e54 25303264 		.ascii	"%02d,%02d,%02d,\000"
 19235      2C253032 
 19235      642C2530 
 19235      32642C00 
 19236              		.align	2
 19237              	.LC283:
 19238 1e64 256C752C 		.ascii	"%lu,\000"
 19238      00
 19239 1e69 000000   		.align	2
 19240              	.LC284:
 19241 1e6c 256C752C 		.ascii	"%lu,%lu,%lu,%lu,\000"
 19241      256C752C 
 19241      256C752C 
 19241      256C752C 
 19241      00
 19242 1e7d 000000   		.align	2
 19243              	.LC285:
 19244 1e80 256C752C 		.ascii	"%lu,%lu,%lu,%lu,%lu,%lu,\000"
 19244      256C752C 
 19244      256C752C 
 19244      256C752C 
 19244      256C752C 
 19245 1e99 000000   		.align	2
 19246              	.LC286:
 19247 1e9c 256C7500 		.ascii	"%lu\000"
 19248              		.section	.text.prepare_SD_info,"ax",%progbits
 19249              		.align	2
 19250              		.global	prepare_SD_info
 19251              		.thumb
 19252              		.thumb_func
 19253              		.type	prepare_SD_info, %function
 19254              	prepare_SD_info:
 19255              	.LFB77:
2792:..\src/command_processing.c **** 
2793:..\src/command_processing.c **** 
2794:..\src/command_processing.c **** //==============================================================================
2795:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2796:..\src/command_processing.c **** //==============================================================================
2797:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2798:..\src/command_processing.c **** {
 19256              		.loc 1 2798 0
 19257              		.cfi_startproc
 19258              		@ args = 0, pretend = 0, frame = 136
 19259              		@ frame_needed = 1, uses_anonymous_args = 0
 19260 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 19261              		.cfi_def_cfa_offset 20
 19262              		.cfi_offset 4, -20
 19263              		.cfi_offset 5, -16
 19264              		.cfi_offset 6, -12
 19265              		.cfi_offset 7, -8
 19266              		.cfi_offset 14, -4
 19267 0002 A7B0     		sub	sp, sp, #156
 19268              		.cfi_def_cfa_offset 176
 19269 0004 04AF     		add	r7, sp, #16
 19270              		.cfi_def_cfa 7, 160
 19271 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 430


2799:..\src/command_processing.c ****     char str[120];  
2800:..\src/command_processing.c ****     int i;
2801:..\src/command_processing.c ****             
2802:..\src/command_processing.c ****     strcpy(info_string, "");
 19272              		.loc 1 2802 0
 19273 0008 7B68     		ldr	r3, [r7, #4]
 19274 000a 0022     		movs	r2, #0
 19275 000c 1A70     		strb	r2, [r3]
2803:..\src/command_processing.c ****     
2804:..\src/command_processing.c ****     // Time
2805:..\src/command_processing.c ****     strcat(info_string, "");
2806:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 19276              		.loc 1 2806 0
 19277 000e 554B     		ldr	r3, .L778
 19278 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 19279 0014 1A46     		mov	r2, r3
 19280 0016 534B     		ldr	r3, .L778
 19281 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 19282 001c 1946     		mov	r1, r3
 19283 001e 514B     		ldr	r3, .L778
 19284 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 19285 0024 07F10C00 		add	r0, r7, #12
 19286 0028 0093     		str	r3, [sp]
 19287 002a 0B46     		mov	r3, r1
 19288 002c 4E49     		ldr	r1, .L778+4
 19289 002e FFF7FEFF 		bl	sprintf
2807:..\src/command_processing.c ****     strcat(info_string, str);
 19290              		.loc 1 2807 0
 19291 0032 07F10C03 		add	r3, r7, #12
 19292 0036 1946     		mov	r1, r3
 19293 0038 7868     		ldr	r0, [r7, #4]
 19294 003a FFF7FEFF 		bl	strcat
2808:..\src/command_processing.c **** 
2809:..\src/command_processing.c ****     // Pos_Bin
2810:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 19295              		.loc 1 2810 0
 19296 003e 0123     		movs	r3, #1
 19297 0040 C7F88430 		str	r3, [r7, #132]
 19298 0044 17E0     		b	.L774
 19299              	.L775:
2811:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19300              		.loc 1 2811 0 discriminator 3
 19301 0046 D7F88430 		ldr	r3, [r7, #132]
 19302 004a 013B     		subs	r3, r3, #1
 19303 004c 454A     		ldr	r2, .L778
 19304 004e 0633     		adds	r3, r3, #6
 19305 0050 52F82320 		ldr	r2, [r2, r3, lsl #2]
 19306 0054 07F10C03 		add	r3, r7, #12
 19307 0058 4449     		ldr	r1, .L778+8
 19308 005a 1846     		mov	r0, r3
 19309 005c FFF7FEFF 		bl	sprintf
2812:..\src/command_processing.c ****         strcat(info_string, str);
 19310              		.loc 1 2812 0 discriminator 3
 19311 0060 07F10C03 		add	r3, r7, #12
 19312 0064 1946     		mov	r1, r3
 19313 0066 7868     		ldr	r0, [r7, #4]
 19314 0068 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 431


2810:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19315              		.loc 1 2810 0 discriminator 3
 19316 006c D7F88430 		ldr	r3, [r7, #132]
 19317 0070 0133     		adds	r3, r3, #1
 19318 0072 C7F88430 		str	r3, [r7, #132]
 19319              	.L774:
2810:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19320              		.loc 1 2810 0 is_stmt 0 discriminator 1
 19321 0076 D7F88430 		ldr	r3, [r7, #132]
 19322 007a 0A2B     		cmp	r3, #10
 19323 007c E3DD     		ble	.L775
2813:..\src/command_processing.c ****     }
2814:..\src/command_processing.c ****     
2815:..\src/command_processing.c ****     // Curr_Bin
2816:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 19324              		.loc 1 2816 0 is_stmt 1
 19325 007e 0123     		movs	r3, #1
 19326 0080 C7F88430 		str	r3, [r7, #132]
 19327 0084 17E0     		b	.L776
 19328              	.L777:
2817:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19329              		.loc 1 2817 0 discriminator 3
 19330 0086 D7F88430 		ldr	r3, [r7, #132]
 19331 008a 013B     		subs	r3, r3, #1
 19332 008c 354A     		ldr	r2, .L778
 19333 008e 1033     		adds	r3, r3, #16
 19334 0090 52F82320 		ldr	r2, [r2, r3, lsl #2]
 19335 0094 07F10C03 		add	r3, r7, #12
 19336 0098 3449     		ldr	r1, .L778+8
 19337 009a 1846     		mov	r0, r3
 19338 009c FFF7FEFF 		bl	sprintf
2818:..\src/command_processing.c ****         strcat(info_string, str);
 19339              		.loc 1 2818 0 discriminator 3
 19340 00a0 07F10C03 		add	r3, r7, #12
 19341 00a4 1946     		mov	r1, r3
 19342 00a6 7868     		ldr	r0, [r7, #4]
 19343 00a8 FFF7FEFF 		bl	strcat
2816:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19344              		.loc 1 2816 0 discriminator 3
 19345 00ac D7F88430 		ldr	r3, [r7, #132]
 19346 00b0 0133     		adds	r3, r3, #1
 19347 00b2 C7F88430 		str	r3, [r7, #132]
 19348              	.L776:
2816:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19349              		.loc 1 2816 0 is_stmt 0 discriminator 1
 19350 00b6 D7F88430 		ldr	r3, [r7, #132]
 19351 00ba 042B     		cmp	r3, #4
 19352 00bc E3DD     		ble	.L777
2819:..\src/command_processing.c ****     }
2820:..\src/command_processing.c **** 
2821:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_time_rest, Power_cycles
2822:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_t
 19353              		.loc 1 2822 0 is_stmt 1
 19354 00be 294B     		ldr	r3, .L778
 19355 00c0 196D     		ldr	r1, [r3, #80]
 19356 00c2 284B     		ldr	r3, .L778
 19357 00c4 5C6D     		ldr	r4, [r3, #84]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 432


 19358 00c6 274B     		ldr	r3, .L778
 19359 00c8 DB6D     		ldr	r3, [r3, #92]
 19360 00ca 264A     		ldr	r2, .L778
 19361 00cc 126E     		ldr	r2, [r2, #96]
 19362 00ce 07F10C00 		add	r0, r7, #12
 19363 00d2 0192     		str	r2, [sp, #4]
 19364 00d4 0093     		str	r3, [sp]
 19365 00d6 2346     		mov	r3, r4
 19366 00d8 0A46     		mov	r2, r1
 19367 00da 2549     		ldr	r1, .L778+12
 19368 00dc FFF7FEFF 		bl	sprintf
2823:..\src/command_processing.c ****     strcat(info_string, str);
 19369              		.loc 1 2823 0
 19370 00e0 07F10C03 		add	r3, r7, #12
 19371 00e4 1946     		mov	r1, r3
 19372 00e6 7868     		ldr	r0, [r7, #4]
 19373 00e8 FFF7FEFF 		bl	strcat
2824:..\src/command_processing.c ****     
2825:..\src/command_processing.c ****     // EMG_1_act, EMG_2_act, EMG_1_excess, EMG_2_excess, Motion_1, Motion_2
2826:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,%lu,%lu,", g_mem.cnt.emg_act_counter[0], g_mem.cnt.emg_act_counte
 19374              		.loc 1 2826 0
 19375 00ec 1D4B     		ldr	r3, .L778
 19376 00ee 1D69     		ldr	r5, [r3, #16]
 19377 00f0 1C4B     		ldr	r3, .L778
 19378 00f2 5E69     		ldr	r6, [r3, #20]
 19379 00f4 1B4B     		ldr	r3, .L778
 19380 00f6 5B6E     		ldr	r3, [r3, #100]
 19381 00f8 1A4A     		ldr	r2, .L778
 19382 00fa 926E     		ldr	r2, [r2, #104]
 19383 00fc 1949     		ldr	r1, .L778
 19384 00fe C96E     		ldr	r1, [r1, #108]
 19385 0100 1848     		ldr	r0, .L778
 19386 0102 006F     		ldr	r0, [r0, #112]
 19387 0104 07F10C04 		add	r4, r7, #12
 19388 0108 0390     		str	r0, [sp, #12]
 19389 010a 0291     		str	r1, [sp, #8]
 19390 010c 0192     		str	r2, [sp, #4]
 19391 010e 0093     		str	r3, [sp]
 19392 0110 3346     		mov	r3, r6
 19393 0112 2A46     		mov	r2, r5
 19394 0114 1749     		ldr	r1, .L778+16
 19395 0116 2046     		mov	r0, r4
 19396 0118 FFF7FEFF 		bl	sprintf
2827:..\src/command_processing.c ****                                     g_mem.cnt.excessive_signal_activity[0], g_mem.cnt.excessive_sig
2828:..\src/command_processing.c ****                                     g_mem.cnt.motion_counter[0], g_mem.cnt.motion_counter[1]);
2829:..\src/command_processing.c ****     strcat(info_string, str);
 19397              		.loc 1 2829 0
 19398 011c 07F10C03 		add	r3, r7, #12
 19399 0120 1946     		mov	r1, r3
 19400 0122 7868     		ldr	r0, [r7, #4]
 19401 0124 FFF7FEFF 		bl	strcat
2830:..\src/command_processing.c ****     
2831:..\src/command_processing.c ****     // Total_runtime
2832:..\src/command_processing.c ****     sprintf(str, "%lu", g_mem.cnt.total_runtime);
 19402              		.loc 1 2832 0
 19403 0128 0E4B     		ldr	r3, .L778
 19404 012a 9A6D     		ldr	r2, [r3, #88]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 433


 19405 012c 07F10C03 		add	r3, r7, #12
 19406 0130 1149     		ldr	r1, .L778+20
 19407 0132 1846     		mov	r0, r3
 19408 0134 FFF7FEFF 		bl	sprintf
2833:..\src/command_processing.c ****     strcat(info_string, str);
 19409              		.loc 1 2833 0
 19410 0138 07F10C03 		add	r3, r7, #12
 19411 013c 1946     		mov	r1, r3
 19412 013e 7868     		ldr	r0, [r7, #4]
 19413 0140 FFF7FEFF 		bl	strcat
2834:..\src/command_processing.c ****     
2835:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19414              		.loc 1 2835 0
 19415 0144 7868     		ldr	r0, [r7, #4]
 19416 0146 FFF7FEFF 		bl	strlen
 19417 014a 0346     		mov	r3, r0
 19418 014c 1A46     		mov	r2, r3
 19419 014e 7B68     		ldr	r3, [r7, #4]
 19420 0150 1344     		add	r3, r3, r2
 19421 0152 0A4A     		ldr	r2, .L778+24
 19422 0154 1188     		ldrh	r1, [r2]	@ unaligned
 19423 0156 9278     		ldrb	r2, [r2, #2]
 19424 0158 1980     		strh	r1, [r3]	@ unaligned
 19425 015a 9A70     		strb	r2, [r3, #2]
2836:..\src/command_processing.c **** }
 19426              		.loc 1 2836 0
 19427 015c 00BF     		nop
 19428 015e 8C37     		adds	r7, r7, #140
 19429              		.cfi_def_cfa_offset 20
 19430 0160 BD46     		mov	sp, r7
 19431              		.cfi_def_cfa_register 13
 19432              		@ sp needed
 19433 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 19434              	.L779:
 19435              		.align	2
 19436              	.L778:
 19437 0164 00000000 		.word	g_mem
 19438 0168 541E0000 		.word	.LC282
 19439 016c 641E0000 		.word	.LC283
 19440 0170 6C1E0000 		.word	.LC284
 19441 0174 801E0000 		.word	.LC285
 19442 0178 9C1E0000 		.word	.LC286
 19443 017c 58110000 		.word	.LC152
 19444              		.cfi_endproc
 19445              	.LFE77:
 19446              		.size	prepare_SD_info, .-prepare_SD_info
 19447              		.section	.rodata
 19448              		.align	2
 19449              	.LC287:
 19450 1ea0 54696D65 		.ascii	"Time,EMG1,EMG2\012\000"
 19450      2C454D47 
 19450      312C454D 
 19450      47320A00 
 19451              		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 19452              		.align	2
 19453              		.global	prepare_SD_EMG_History_legend
 19454              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 434


 19455              		.thumb_func
 19456              		.type	prepare_SD_EMG_History_legend, %function
 19457              	prepare_SD_EMG_History_legend:
 19458              	.LFB78:
2837:..\src/command_processing.c **** 
2838:..\src/command_processing.c **** //==============================================================================
2839:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
2840:..\src/command_processing.c **** //==============================================================================
2841:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
2842:..\src/command_processing.c **** {
 19459              		.loc 1 2842 0
 19460              		.cfi_startproc
 19461              		@ args = 0, pretend = 0, frame = 8
 19462              		@ frame_needed = 1, uses_anonymous_args = 0
 19463              		@ link register save eliminated.
 19464 0000 B0B4     		push	{r4, r5, r7}
 19465              		.cfi_def_cfa_offset 12
 19466              		.cfi_offset 4, -12
 19467              		.cfi_offset 5, -8
 19468              		.cfi_offset 7, -4
 19469 0002 83B0     		sub	sp, sp, #12
 19470              		.cfi_def_cfa_offset 24
 19471 0004 00AF     		add	r7, sp, #0
 19472              		.cfi_def_cfa_register 7
 19473 0006 7860     		str	r0, [r7, #4]
2843:..\src/command_processing.c ****         
2844:..\src/command_processing.c ****     // Legend
2845:..\src/command_processing.c ****     strcpy(info_string, "Time,EMG1,EMG2\n");
 19474              		.loc 1 2845 0
 19475 0008 7B68     		ldr	r3, [r7, #4]
 19476 000a 064A     		ldr	r2, .L781
 19477 000c 1C46     		mov	r4, r3
 19478 000e 1546     		mov	r5, r2
 19479 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19480 0012 2060     		str	r0, [r4]	@ unaligned
 19481 0014 6160     		str	r1, [r4, #4]	@ unaligned
 19482 0016 A260     		str	r2, [r4, #8]	@ unaligned
 19483 0018 E360     		str	r3, [r4, #12]	@ unaligned
2846:..\src/command_processing.c ****     
2847:..\src/command_processing.c **** }
 19484              		.loc 1 2847 0
 19485 001a 00BF     		nop
 19486 001c 0C37     		adds	r7, r7, #12
 19487              		.cfi_def_cfa_offset 12
 19488 001e BD46     		mov	sp, r7
 19489              		.cfi_def_cfa_register 13
 19490              		@ sp needed
 19491 0020 B0BC     		pop	{r4, r5, r7}
 19492              		.cfi_restore 7
 19493              		.cfi_restore 5
 19494              		.cfi_restore 4
 19495              		.cfi_def_cfa_offset 0
 19496 0022 7047     		bx	lr
 19497              	.L782:
 19498              		.align	2
 19499              	.L781:
 19500 0024 A01E0000 		.word	.LC287
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 435


 19501              		.cfi_endproc
 19502              	.LFE78:
 19503              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 19504              		.section	.rodata
 19505              		.align	2
 19506              	.LC288:
 19507 1eb0 252E3166 		.ascii	"%.1f,%u,%u\012\000"
 19507      2C25752C 
 19507      25750A00 
 19508              		.global	__aeabi_dadd
 19509              		.global	__aeabi_d2f
 19510              		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 19511              		.align	2
 19512              		.global	prepare_SD_EMG_history
 19513              		.thumb
 19514              		.thumb_func
 19515              		.type	prepare_SD_EMG_history, %function
 19516              	prepare_SD_EMG_history:
 19517              	.LFB79:
2848:..\src/command_processing.c **** 
2849:..\src/command_processing.c **** //==============================================================================
2850:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
2851:..\src/command_processing.c **** //==============================================================================
2852:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
2853:..\src/command_processing.c **** {
 19518              		.loc 1 2853 0
 19519              		.cfi_startproc
 19520              		@ args = 0, pretend = 0, frame = 120
 19521              		@ frame_needed = 1, uses_anonymous_args = 0
 19522 0000 B0B5     		push	{r4, r5, r7, lr}
 19523              		.cfi_def_cfa_offset 16
 19524              		.cfi_offset 4, -16
 19525              		.cfi_offset 5, -12
 19526              		.cfi_offset 7, -8
 19527              		.cfi_offset 14, -4
 19528 0002 A0B0     		sub	sp, sp, #128
 19529              		.cfi_def_cfa_offset 144
 19530 0004 02AF     		add	r7, sp, #8
 19531              		.cfi_def_cfa 7, 136
 19532 0006 7860     		str	r0, [r7, #4]
2854:..\src/command_processing.c ****     char str_data[100] = "";
 19533              		.loc 1 2854 0
 19534 0008 0023     		movs	r3, #0
 19535 000a FB60     		str	r3, [r7, #12]
 19536 000c 07F11003 		add	r3, r7, #16
 19537 0010 6022     		movs	r2, #96
 19538 0012 0021     		movs	r1, #0
 19539 0014 1846     		mov	r0, r3
 19540 0016 FFF7FEFF 		bl	memset
2855:..\src/command_processing.c ****     uint16 v_idx = 0;
 19541              		.loc 1 2855 0
 19542 001a 0023     		movs	r3, #0
 19543 001c A7F87630 		strh	r3, [r7, #118]	@ movhi
2856:..\src/command_processing.c ****     static float h_time = 0.0;
2857:..\src/command_processing.c ****                 
2858:..\src/command_processing.c ****     strcpy(info_string, "");
 19544              		.loc 1 2858 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 436


 19545 0020 7B68     		ldr	r3, [r7, #4]
 19546 0022 0022     		movs	r2, #0
 19547 0024 1A70     		strb	r2, [r3]
 19548              	.LBB29:
2859:..\src/command_processing.c ****     
2860:..\src/command_processing.c ****     // Oldest samples of the vector
2861:..\src/command_processing.c ****     for (int i = 0; i < SAMPLES_FOR_EMG_HISTORY; i++){
 19549              		.loc 1 2861 0
 19550 0026 0023     		movs	r3, #0
 19551 0028 3B67     		str	r3, [r7, #112]
 19552 002a 4AE0     		b	.L784
 19553              	.L786:
2862:..\src/command_processing.c ****               
2863:..\src/command_processing.c ****         // Send line per line all the history vector
2864:..\src/command_processing.c ****         // First line (oldest) is made by values of emg_history_next_idx index (they will be the ne
2865:..\src/command_processing.c ****         v_idx = emg_history_next_idx + i;
 19554              		.loc 1 2865 0
 19555 002c 2C4B     		ldr	r3, .L787+8
 19556 002e 1B68     		ldr	r3, [r3]
 19557 0030 9AB2     		uxth	r2, r3
 19558 0032 3B6F     		ldr	r3, [r7, #112]
 19559 0034 9BB2     		uxth	r3, r3
 19560 0036 1344     		add	r3, r3, r2
 19561 0038 A7F87630 		strh	r3, [r7, #118]	@ movhi
2866:..\src/command_processing.c ****         if (v_idx > SAMPLES_FOR_EMG_HISTORY){
 19562              		.loc 1 2866 0
 19563 003c B7F87630 		ldrh	r3, [r7, #118]
 19564 0040 B3F5167F 		cmp	r3, #600
 19565 0044 05D9     		bls	.L785
2867:..\src/command_processing.c ****             v_idx -= SAMPLES_FOR_EMG_HISTORY;
 19566              		.loc 1 2867 0
 19567 0046 B7F87630 		ldrh	r3, [r7, #118]	@ movhi
 19568 004a A3F51673 		sub	r3, r3, #600
 19569 004e A7F87630 		strh	r3, [r7, #118]	@ movhi
 19570              	.L785:
2868:..\src/command_processing.c ****         }
2869:..\src/command_processing.c ****         
2870:..\src/command_processing.c ****         // Time vector is reconstructed setting oldest samples as t=0.0s
2871:..\src/command_processing.c ****         sprintf(str_data, "%.1f,%u,%u\n", h_time, emg_history[v_idx][0], emg_history[v_idx][1]);
 19571              		.loc 1 2871 0 discriminator 2
 19572 0052 244B     		ldr	r3, .L787+12
 19573 0054 1B68     		ldr	r3, [r3]	@ float
 19574 0056 1846     		mov	r0, r3
 19575 0058 FFF7FEFF 		bl	__aeabi_f2d
 19576 005c 0446     		mov	r4, r0
 19577 005e 0D46     		mov	r5, r1
 19578 0060 B7F87630 		ldrh	r3, [r7, #118]
 19579 0064 204A     		ldr	r2, .L787+16
 19580 0066 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 19581 006a 1946     		mov	r1, r3
 19582 006c B7F87630 		ldrh	r3, [r7, #118]
 19583 0070 1D4A     		ldr	r2, .L787+16
 19584 0072 9B00     		lsls	r3, r3, #2
 19585 0074 1344     		add	r3, r3, r2
 19586 0076 5B88     		ldrh	r3, [r3, #2]
 19587 0078 07F10C00 		add	r0, r7, #12
 19588 007c 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 437


 19589 007e 0091     		str	r1, [sp]
 19590 0080 2246     		mov	r2, r4
 19591 0082 2B46     		mov	r3, r5
 19592 0084 1949     		ldr	r1, .L787+20
 19593 0086 FFF7FEFF 		bl	sprintf
2872:..\src/command_processing.c ****         
2873:..\src/command_processing.c ****         strcat(info_string, str_data);
 19594              		.loc 1 2873 0 discriminator 2
 19595 008a 07F10C03 		add	r3, r7, #12
 19596 008e 1946     		mov	r1, r3
 19597 0090 7868     		ldr	r0, [r7, #4]
 19598 0092 FFF7FEFF 		bl	strcat
2874:..\src/command_processing.c ****         
2875:..\src/command_processing.c ****         h_time += 0.2;      // Row time interval is 200ms (5Hz)
 19599              		.loc 1 2875 0 discriminator 2
 19600 0096 134B     		ldr	r3, .L787+12
 19601 0098 1B68     		ldr	r3, [r3]	@ float
 19602 009a 1846     		mov	r0, r3
 19603 009c FFF7FEFF 		bl	__aeabi_f2d
 19604 00a0 0DA3     		adr	r3, .L787
 19605 00a2 D3E90023 		ldrd	r2, [r3]
 19606 00a6 FFF7FEFF 		bl	__aeabi_dadd
 19607 00aa 0346     		mov	r3, r0
 19608 00ac 0C46     		mov	r4, r1
 19609 00ae 1846     		mov	r0, r3
 19610 00b0 2146     		mov	r1, r4
 19611 00b2 FFF7FEFF 		bl	__aeabi_d2f
 19612 00b6 0246     		mov	r2, r0
 19613 00b8 0A4B     		ldr	r3, .L787+12
 19614 00ba 1A60     		str	r2, [r3]	@ float
2861:..\src/command_processing.c ****               
 19615              		.loc 1 2861 0 discriminator 2
 19616 00bc 3B6F     		ldr	r3, [r7, #112]
 19617 00be 0133     		adds	r3, r3, #1
 19618 00c0 3B67     		str	r3, [r7, #112]
 19619              	.L784:
2861:..\src/command_processing.c ****               
 19620              		.loc 1 2861 0 is_stmt 0 discriminator 1
 19621 00c2 3B6F     		ldr	r3, [r7, #112]
 19622 00c4 B3F5167F 		cmp	r3, #600
 19623 00c8 B0DB     		blt	.L786
 19624              	.LBE29:
2876:..\src/command_processing.c **** 
2877:..\src/command_processing.c ****     }
2878:..\src/command_processing.c ****     
2879:..\src/command_processing.c **** }
 19625              		.loc 1 2879 0 is_stmt 1
 19626 00ca 00BF     		nop
 19627 00cc 7837     		adds	r7, r7, #120
 19628              		.cfi_def_cfa_offset 16
 19629 00ce BD46     		mov	sp, r7
 19630              		.cfi_def_cfa_register 13
 19631              		@ sp needed
 19632 00d0 B0BD     		pop	{r4, r5, r7, pc}
 19633              	.L788:
 19634 00d2 00BFAFF3 		.align	3
 19634      0080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 438


 19635              	.L787:
 19636 00d8 9A999999 		.word	-1717986918
 19637 00dc 9999C93F 		.word	1070176665
 19638 00e0 00000000 		.word	emg_history_next_idx
 19639 00e4 00000000 		.word	h_time.11231
 19640 00e8 00000000 		.word	emg_history
 19641 00ec B01E0000 		.word	.LC288
 19642              		.cfi_endproc
 19643              	.LFE79:
 19644              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 19645              		.section	.rodata
 19646              		.align	2
 19647              	.LC289:
 19648 1ebc 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 19648      4F525320 
 19648      494E464F 
 19648      0D0A00
 19649 1ecb 00       		.align	2
 19650              	.LC290:
 19651 1ecc 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 19651      3A202564 
 19651      09256409 
 19651      25640D0A 
 19651      00
 19652 1edd 000000   		.align	2
 19653              	.LC291:
 19654 1ee0 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 19654      6F3A2025 
 19654      64092564 
 19654      0925640D 
 19654      0A00
 19655 1ef2 0000     		.align	2
 19656              	.LC292:
 19657 1ef4 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 19657      3A202564 
 19657      09256409 
 19657      25640D0A 
 19657      00
 19658 1f05 000000   		.align	2
 19659              	.LC293:
 19660 1f08 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 19660      743A2025 
 19660      2E336609 
 19660      252E3366 
 19660      09252E33 
 19661 1f25 000000   		.align	2
 19662              	.LC294:
 19663 1f28 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 19663      70657261 
 19663      74757265 
 19663      3A202564 
 19663      0D0A00
 19664              		.section	.text.IMU_reading_info,"ax",%progbits
 19665              		.align	2
 19666              		.global	IMU_reading_info
 19667              		.thumb
 19668              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 439


 19669              		.type	IMU_reading_info, %function
 19670              	IMU_reading_info:
 19671              	.LFB80:
2880:..\src/command_processing.c **** 
2881:..\src/command_processing.c **** //==============================================================================
2882:..\src/command_processing.c **** //                                                              IMU READING INFO
2883:..\src/command_processing.c **** //==============================================================================
2884:..\src/command_processing.c **** 
2885:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2886:..\src/command_processing.c **** {
 19672              		.loc 1 2886 0
 19673              		.cfi_startproc
 19674              		@ args = 0, pretend = 0, frame = 312
 19675              		@ frame_needed = 1, uses_anonymous_args = 0
 19676 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 19677              		.cfi_def_cfa_offset 32
 19678              		.cfi_offset 4, -32
 19679              		.cfi_offset 5, -28
 19680              		.cfi_offset 7, -24
 19681              		.cfi_offset 8, -20
 19682              		.cfi_offset 9, -16
 19683              		.cfi_offset 10, -12
 19684              		.cfi_offset 11, -8
 19685              		.cfi_offset 14, -4
 19686 0004 D4B0     		sub	sp, sp, #336
 19687              		.cfi_def_cfa_offset 368
 19688 0006 06AF     		add	r7, sp, #24
 19689              		.cfi_def_cfa 7, 344
 19690 0008 3B1D     		adds	r3, r7, #4
 19691 000a 1860     		str	r0, [r3]
2887:..\src/command_processing.c ****     char str[300];  
2888:..\src/command_processing.c ****     int i;
2889:..\src/command_processing.c ****                  
2890:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 19692              		.loc 1 2890 0
 19693 000c 3B1D     		adds	r3, r7, #4
 19694 000e 1868     		ldr	r0, [r3]
 19695 0010 FFF7FEFF 		bl	strlen
 19696 0014 0346     		mov	r3, r0
 19697 0016 1A46     		mov	r2, r3
 19698 0018 3B1D     		adds	r3, r7, #4
 19699 001a 1B68     		ldr	r3, [r3]
 19700 001c 1344     		add	r3, r3, r2
 19701 001e C94A     		ldr	r2, .L797
 19702 0020 1C46     		mov	r4, r3
 19703 0022 1346     		mov	r3, r2
 19704 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 19705 0026 2060     		str	r0, [r4]	@ unaligned
 19706 0028 6160     		str	r1, [r4, #4]	@ unaligned
 19707 002a A260     		str	r2, [r4, #8]	@ unaligned
 19708 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 19709 002e 9B78     		ldrb	r3, [r3, #2]
 19710 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 19711 0032 A373     		strb	r3, [r4, #14]
2891:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 19712              		.loc 1 2891 0
 19713 0034 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 440


 19714 0036 C7F83431 		str	r3, [r7, #308]
 19715 003a 66E1     		b	.L790
 19716              	.L796:
2892:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19717              		.loc 1 2892 0
 19718 003c C24A     		ldr	r2, .L797+4
 19719 003e D7F83431 		ldr	r3, [r7, #308]
 19720 0042 1344     		add	r3, r3, r2
 19721 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19722 0046 07F10800 		add	r0, r7, #8
 19723 004a D7F83421 		ldr	r2, [r7, #308]
 19724 004e BF49     		ldr	r1, .L797+8
 19725 0050 FFF7FEFF 		bl	sprintf
2893:..\src/command_processing.c ****         strcat(info_string, str);
 19726              		.loc 1 2893 0
 19727 0054 07F10802 		add	r2, r7, #8
 19728 0058 3B1D     		adds	r3, r7, #4
 19729 005a 1146     		mov	r1, r2
 19730 005c 1868     		ldr	r0, [r3]
 19731 005e FFF7FEFF 		bl	strcat
2894:..\src/command_processing.c ****         
2895:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 19732              		.loc 1 2895 0
 19733 0062 B94A     		ldr	r2, .L797+4
 19734 0064 D7F83431 		ldr	r3, [r7, #308]
 19735 0068 1344     		add	r3, r3, r2
 19736 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19737 006c 1946     		mov	r1, r3
 19738 006e B84A     		ldr	r2, .L797+12
 19739 0070 0B46     		mov	r3, r1
 19740 0072 9B00     		lsls	r3, r3, #2
 19741 0074 0B44     		add	r3, r3, r1
 19742 0076 1344     		add	r3, r3, r2
 19743 0078 03F20223 		addw	r3, r3, #514
 19744 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19745 007e 002B     		cmp	r3, #0
 19746 0080 31D0     		beq	.L791
2896:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 19747              		.loc 1 2896 0
 19748 0082 B449     		ldr	r1, .L797+16
 19749 0084 D7F83421 		ldr	r2, [r7, #308]
 19750 0088 1346     		mov	r3, r2
 19751 008a 9B00     		lsls	r3, r3, #2
 19752 008c 1344     		add	r3, r3, r2
 19753 008e DB00     		lsls	r3, r3, #3
 19754 0090 0B44     		add	r3, r3, r1
 19755 0092 0233     		adds	r3, r3, #2
 19756 0094 B3F90030 		ldrsh	r3, [r3]
 19757 0098 1C46     		mov	r4, r3
 19758 009a AE49     		ldr	r1, .L797+16
 19759 009c D7F83421 		ldr	r2, [r7, #308]
 19760 00a0 1346     		mov	r3, r2
 19761 00a2 9B00     		lsls	r3, r3, #2
 19762 00a4 1344     		add	r3, r3, r2
 19763 00a6 DB00     		lsls	r3, r3, #3
 19764 00a8 0B44     		add	r3, r3, r1
 19765 00aa 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 441


 19766 00ac B3F90030 		ldrsh	r3, [r3]
 19767 00b0 1D46     		mov	r5, r3
 19768 00b2 A849     		ldr	r1, .L797+16
 19769 00b4 D7F83421 		ldr	r2, [r7, #308]
 19770 00b8 1346     		mov	r3, r2
 19771 00ba 9B00     		lsls	r3, r3, #2
 19772 00bc 1344     		add	r3, r3, r2
 19773 00be DB00     		lsls	r3, r3, #3
 19774 00c0 0B44     		add	r3, r3, r1
 19775 00c2 0633     		adds	r3, r3, #6
 19776 00c4 B3F90030 		ldrsh	r3, [r3]
 19777 00c8 07F10800 		add	r0, r7, #8
 19778 00cc 0093     		str	r3, [sp]
 19779 00ce 2B46     		mov	r3, r5
 19780 00d0 2246     		mov	r2, r4
 19781 00d2 A149     		ldr	r1, .L797+20
 19782 00d4 FFF7FEFF 		bl	sprintf
2897:..\src/command_processing.c ****             strcat(info_string, str);
 19783              		.loc 1 2897 0
 19784 00d8 07F10802 		add	r2, r7, #8
 19785 00dc 3B1D     		adds	r3, r7, #4
 19786 00de 1146     		mov	r1, r2
 19787 00e0 1868     		ldr	r0, [r3]
 19788 00e2 FFF7FEFF 		bl	strcat
 19789              	.L791:
2898:..\src/command_processing.c ****         }
2899:..\src/command_processing.c **** 
2900:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 19790              		.loc 1 2900 0
 19791 00e6 984A     		ldr	r2, .L797+4
 19792 00e8 D7F83431 		ldr	r3, [r7, #308]
 19793 00ec 1344     		add	r3, r3, r2
 19794 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19795 00f0 1946     		mov	r1, r3
 19796 00f2 974A     		ldr	r2, .L797+12
 19797 00f4 0B46     		mov	r3, r1
 19798 00f6 9B00     		lsls	r3, r3, #2
 19799 00f8 0B44     		add	r3, r3, r1
 19800 00fa 1344     		add	r3, r3, r2
 19801 00fc 03F20323 		addw	r3, r3, #515
 19802 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19803 0102 002B     		cmp	r3, #0
 19804 0104 31D0     		beq	.L792
2901:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 19805              		.loc 1 2901 0
 19806 0106 9349     		ldr	r1, .L797+16
 19807 0108 D7F83421 		ldr	r2, [r7, #308]
 19808 010c 1346     		mov	r3, r2
 19809 010e 9B00     		lsls	r3, r3, #2
 19810 0110 1344     		add	r3, r3, r2
 19811 0112 DB00     		lsls	r3, r3, #3
 19812 0114 0B44     		add	r3, r3, r1
 19813 0116 0833     		adds	r3, r3, #8
 19814 0118 B3F90030 		ldrsh	r3, [r3]
 19815 011c 1C46     		mov	r4, r3
 19816 011e 8D49     		ldr	r1, .L797+16
 19817 0120 D7F83421 		ldr	r2, [r7, #308]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 442


 19818 0124 1346     		mov	r3, r2
 19819 0126 9B00     		lsls	r3, r3, #2
 19820 0128 1344     		add	r3, r3, r2
 19821 012a DB00     		lsls	r3, r3, #3
 19822 012c 0B44     		add	r3, r3, r1
 19823 012e 0A33     		adds	r3, r3, #10
 19824 0130 B3F90030 		ldrsh	r3, [r3]
 19825 0134 1D46     		mov	r5, r3
 19826 0136 8749     		ldr	r1, .L797+16
 19827 0138 D7F83421 		ldr	r2, [r7, #308]
 19828 013c 1346     		mov	r3, r2
 19829 013e 9B00     		lsls	r3, r3, #2
 19830 0140 1344     		add	r3, r3, r2
 19831 0142 DB00     		lsls	r3, r3, #3
 19832 0144 0B44     		add	r3, r3, r1
 19833 0146 0C33     		adds	r3, r3, #12
 19834 0148 B3F90030 		ldrsh	r3, [r3]
 19835 014c 07F10800 		add	r0, r7, #8
 19836 0150 0093     		str	r3, [sp]
 19837 0152 2B46     		mov	r3, r5
 19838 0154 2246     		mov	r2, r4
 19839 0156 8149     		ldr	r1, .L797+24
 19840 0158 FFF7FEFF 		bl	sprintf
2902:..\src/command_processing.c ****             strcat(info_string, str);
 19841              		.loc 1 2902 0
 19842 015c 07F10802 		add	r2, r7, #8
 19843 0160 3B1D     		adds	r3, r7, #4
 19844 0162 1146     		mov	r1, r2
 19845 0164 1868     		ldr	r0, [r3]
 19846 0166 FFF7FEFF 		bl	strcat
 19847              	.L792:
2903:..\src/command_processing.c ****         }
2904:..\src/command_processing.c **** 
2905:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 19848              		.loc 1 2905 0
 19849 016a 774A     		ldr	r2, .L797+4
 19850 016c D7F83431 		ldr	r3, [r7, #308]
 19851 0170 1344     		add	r3, r3, r2
 19852 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19853 0174 1946     		mov	r1, r3
 19854 0176 764A     		ldr	r2, .L797+12
 19855 0178 0B46     		mov	r3, r1
 19856 017a 9B00     		lsls	r3, r3, #2
 19857 017c 0B44     		add	r3, r3, r1
 19858 017e 1344     		add	r3, r3, r2
 19859 0180 03F50173 		add	r3, r3, #516
 19860 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19861 0186 002B     		cmp	r3, #0
 19862 0188 31D0     		beq	.L793
2906:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 19863              		.loc 1 2906 0
 19864 018a 7249     		ldr	r1, .L797+16
 19865 018c D7F83421 		ldr	r2, [r7, #308]
 19866 0190 1346     		mov	r3, r2
 19867 0192 9B00     		lsls	r3, r3, #2
 19868 0194 1344     		add	r3, r3, r2
 19869 0196 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 443


 19870 0198 0B44     		add	r3, r3, r1
 19871 019a 0E33     		adds	r3, r3, #14
 19872 019c B3F90030 		ldrsh	r3, [r3]
 19873 01a0 1C46     		mov	r4, r3
 19874 01a2 6C49     		ldr	r1, .L797+16
 19875 01a4 D7F83421 		ldr	r2, [r7, #308]
 19876 01a8 1346     		mov	r3, r2
 19877 01aa 9B00     		lsls	r3, r3, #2
 19878 01ac 1344     		add	r3, r3, r2
 19879 01ae DB00     		lsls	r3, r3, #3
 19880 01b0 0B44     		add	r3, r3, r1
 19881 01b2 1033     		adds	r3, r3, #16
 19882 01b4 B3F90030 		ldrsh	r3, [r3]
 19883 01b8 1D46     		mov	r5, r3
 19884 01ba 6649     		ldr	r1, .L797+16
 19885 01bc D7F83421 		ldr	r2, [r7, #308]
 19886 01c0 1346     		mov	r3, r2
 19887 01c2 9B00     		lsls	r3, r3, #2
 19888 01c4 1344     		add	r3, r3, r2
 19889 01c6 DB00     		lsls	r3, r3, #3
 19890 01c8 0B44     		add	r3, r3, r1
 19891 01ca 1233     		adds	r3, r3, #18
 19892 01cc B3F90030 		ldrsh	r3, [r3]
 19893 01d0 07F10800 		add	r0, r7, #8
 19894 01d4 0093     		str	r3, [sp]
 19895 01d6 2B46     		mov	r3, r5
 19896 01d8 2246     		mov	r2, r4
 19897 01da 6149     		ldr	r1, .L797+28
 19898 01dc FFF7FEFF 		bl	sprintf
2907:..\src/command_processing.c ****             strcat(info_string, str);
 19899              		.loc 1 2907 0
 19900 01e0 07F10802 		add	r2, r7, #8
 19901 01e4 3B1D     		adds	r3, r7, #4
 19902 01e6 1146     		mov	r1, r2
 19903 01e8 1868     		ldr	r0, [r3]
 19904 01ea FFF7FEFF 		bl	strcat
 19905              	.L793:
2908:..\src/command_processing.c ****         }
2909:..\src/command_processing.c ****         
2910:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 19906              		.loc 1 2910 0
 19907 01ee 564A     		ldr	r2, .L797+4
 19908 01f0 D7F83431 		ldr	r3, [r7, #308]
 19909 01f4 1344     		add	r3, r3, r2
 19910 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19911 01f8 1946     		mov	r1, r3
 19912 01fa 554A     		ldr	r2, .L797+12
 19913 01fc 0B46     		mov	r3, r1
 19914 01fe 9B00     		lsls	r3, r3, #2
 19915 0200 0B44     		add	r3, r3, r1
 19916 0202 1344     		add	r3, r3, r2
 19917 0204 03F20523 		addw	r3, r3, #517
 19918 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19919 020a 002B     		cmp	r3, #0
 19920 020c 4FD0     		beq	.L794
2911:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 19921              		.loc 1 2911 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 444


 19922 020e 5149     		ldr	r1, .L797+16
 19923 0210 D7F83421 		ldr	r2, [r7, #308]
 19924 0214 1346     		mov	r3, r2
 19925 0216 9B00     		lsls	r3, r3, #2
 19926 0218 1344     		add	r3, r3, r2
 19927 021a DB00     		lsls	r3, r3, #3
 19928 021c 0B44     		add	r3, r3, r1
 19929 021e 1433     		adds	r3, r3, #20
 19930 0220 1B68     		ldr	r3, [r3]	@ float
 19931 0222 1846     		mov	r0, r3
 19932 0224 FFF7FEFF 		bl	__aeabi_f2d
 19933 0228 8246     		mov	r10, r0
 19934 022a 8B46     		mov	fp, r1
 19935 022c 4949     		ldr	r1, .L797+16
 19936 022e D7F83421 		ldr	r2, [r7, #308]
 19937 0232 1346     		mov	r3, r2
 19938 0234 9B00     		lsls	r3, r3, #2
 19939 0236 1344     		add	r3, r3, r2
 19940 0238 DB00     		lsls	r3, r3, #3
 19941 023a 0B44     		add	r3, r3, r1
 19942 023c 1833     		adds	r3, r3, #24
 19943 023e 1B68     		ldr	r3, [r3]	@ float
 19944 0240 1846     		mov	r0, r3
 19945 0242 FFF7FEFF 		bl	__aeabi_f2d
 19946 0246 0446     		mov	r4, r0
 19947 0248 0D46     		mov	r5, r1
 19948 024a 4249     		ldr	r1, .L797+16
 19949 024c D7F83421 		ldr	r2, [r7, #308]
 19950 0250 1346     		mov	r3, r2
 19951 0252 9B00     		lsls	r3, r3, #2
 19952 0254 1344     		add	r3, r3, r2
 19953 0256 DB00     		lsls	r3, r3, #3
 19954 0258 0B44     		add	r3, r3, r1
 19955 025a 1C33     		adds	r3, r3, #28
 19956 025c 1B68     		ldr	r3, [r3]	@ float
 19957 025e 1846     		mov	r0, r3
 19958 0260 FFF7FEFF 		bl	__aeabi_f2d
 19959 0264 8046     		mov	r8, r0
 19960 0266 8946     		mov	r9, r1
 19961 0268 3A49     		ldr	r1, .L797+16
 19962 026a D7F83421 		ldr	r2, [r7, #308]
 19963 026e 1346     		mov	r3, r2
 19964 0270 9B00     		lsls	r3, r3, #2
 19965 0272 1344     		add	r3, r3, r2
 19966 0274 DB00     		lsls	r3, r3, #3
 19967 0276 0B44     		add	r3, r3, r1
 19968 0278 2033     		adds	r3, r3, #32
 19969 027a 1B68     		ldr	r3, [r3]	@ float
 19970 027c 1846     		mov	r0, r3
 19971 027e FFF7FEFF 		bl	__aeabi_f2d
 19972 0282 0246     		mov	r2, r0
 19973 0284 0B46     		mov	r3, r1
 19974 0286 07F10800 		add	r0, r7, #8
 19975 028a CDE90423 		strd	r2, [sp, #16]
 19976 028e CDE90289 		strd	r8, [sp, #8]
 19977 0292 CDE90045 		strd	r4, [sp]
 19978 0296 5246     		mov	r2, r10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 445


 19979 0298 5B46     		mov	r3, fp
 19980 029a 3249     		ldr	r1, .L797+32
 19981 029c FFF7FEFF 		bl	sprintf
2912:..\src/command_processing.c ****             strcat(info_string, str);
 19982              		.loc 1 2912 0
 19983 02a0 07F10802 		add	r2, r7, #8
 19984 02a4 3B1D     		adds	r3, r7, #4
 19985 02a6 1146     		mov	r1, r2
 19986 02a8 1868     		ldr	r0, [r3]
 19987 02aa FFF7FEFF 		bl	strcat
 19988              	.L794:
2913:..\src/command_processing.c ****         }
2914:..\src/command_processing.c ****         
2915:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 19989              		.loc 1 2915 0
 19990 02ae 264A     		ldr	r2, .L797+4
 19991 02b0 D7F83431 		ldr	r3, [r7, #308]
 19992 02b4 1344     		add	r3, r3, r2
 19993 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19994 02b8 1946     		mov	r1, r3
 19995 02ba 254A     		ldr	r2, .L797+12
 19996 02bc 0B46     		mov	r3, r1
 19997 02be 9B00     		lsls	r3, r3, #2
 19998 02c0 0B44     		add	r3, r3, r1
 19999 02c2 1344     		add	r3, r3, r2
 20000 02c4 03F20623 		addw	r3, r3, #518
 20001 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20002 02ca 002B     		cmp	r3, #0
 20003 02cc 18D0     		beq	.L795
2916:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 20004              		.loc 1 2916 0
 20005 02ce 2149     		ldr	r1, .L797+16
 20006 02d0 D7F83421 		ldr	r2, [r7, #308]
 20007 02d4 1346     		mov	r3, r2
 20008 02d6 9B00     		lsls	r3, r3, #2
 20009 02d8 1344     		add	r3, r3, r2
 20010 02da DB00     		lsls	r3, r3, #3
 20011 02dc 0B44     		add	r3, r3, r1
 20012 02de 2433     		adds	r3, r3, #36
 20013 02e0 B3F90030 		ldrsh	r3, [r3]
 20014 02e4 1A46     		mov	r2, r3
 20015 02e6 07F10803 		add	r3, r7, #8
 20016 02ea 1F49     		ldr	r1, .L797+36
 20017 02ec 1846     		mov	r0, r3
 20018 02ee FFF7FEFF 		bl	sprintf
2917:..\src/command_processing.c ****             strcat(info_string, str);
 20019              		.loc 1 2917 0
 20020 02f2 07F10802 		add	r2, r7, #8
 20021 02f6 3B1D     		adds	r3, r7, #4
 20022 02f8 1146     		mov	r1, r2
 20023 02fa 1868     		ldr	r0, [r3]
 20024 02fc FFF7FEFF 		bl	strcat
 20025              	.L795:
2891:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20026              		.loc 1 2891 0 discriminator 2
 20027 0300 D7F83431 		ldr	r3, [r7, #308]
 20028 0304 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 446


 20029 0306 C7F83431 		str	r3, [r7, #308]
 20030              	.L790:
2891:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20031              		.loc 1 2891 0 is_stmt 0 discriminator 1
 20032 030a 184B     		ldr	r3, .L797+40
 20033 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20034 030e 1A46     		mov	r2, r3
 20035 0310 D7F83431 		ldr	r3, [r7, #308]
 20036 0314 9A42     		cmp	r2, r3
 20037 0316 3FF791AE 		bgt	.L796
2918:..\src/command_processing.c ****         }
2919:..\src/command_processing.c ****         
2920:..\src/command_processing.c ****     }
2921:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20038              		.loc 1 2921 0 is_stmt 1
 20039 031a 3B1D     		adds	r3, r7, #4
 20040 031c 1868     		ldr	r0, [r3]
 20041 031e FFF7FEFF 		bl	strlen
 20042 0322 0346     		mov	r3, r0
 20043 0324 1A46     		mov	r2, r3
 20044 0326 3B1D     		adds	r3, r7, #4
 20045 0328 1B68     		ldr	r3, [r3]
 20046 032a 1344     		add	r3, r3, r2
 20047 032c 104A     		ldr	r2, .L797+44
 20048 032e 1188     		ldrh	r1, [r2]	@ unaligned
 20049 0330 9278     		ldrb	r2, [r2, #2]
 20050 0332 1980     		strh	r1, [r3]	@ unaligned
 20051 0334 9A70     		strb	r2, [r3, #2]
2922:..\src/command_processing.c **** }
 20052              		.loc 1 2922 0
 20053 0336 00BF     		nop
 20054 0338 07F59C77 		add	r7, r7, #312
 20055              		.cfi_def_cfa_offset 32
 20056 033c BD46     		mov	sp, r7
 20057              		.cfi_def_cfa_register 13
 20058              		@ sp needed
 20059 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 20060              	.L798:
 20061 0342 00BF     		.align	2
 20062              	.L797:
 20063 0344 BC1E0000 		.word	.LC289
 20064 0348 00000000 		.word	IMU_connected
 20065 034c 38190000 		.word	.LC240
 20066 0350 00000000 		.word	c_mem
 20067 0354 00000000 		.word	g_imu
 20068 0358 CC1E0000 		.word	.LC290
 20069 035c E01E0000 		.word	.LC291
 20070 0360 F41E0000 		.word	.LC292
 20071 0364 081F0000 		.word	.LC293
 20072 0368 281F0000 		.word	.LC294
 20073 036c 00000000 		.word	N_IMU_Connected
 20074 0370 58110000 		.word	.LC152
 20075              		.cfi_endproc
 20076              	.LFE80:
 20077              		.size	IMU_reading_info, .-IMU_reading_info
 20078              		.section	.text.commWrite_old_id,"ax",%progbits
 20079              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 447


 20080              		.global	commWrite_old_id
 20081              		.thumb
 20082              		.thumb_func
 20083              		.type	commWrite_old_id, %function
 20084              	commWrite_old_id:
 20085              	.LFB81:
2923:..\src/command_processing.c **** 
2924:..\src/command_processing.c **** //==============================================================================
2925:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2926:..\src/command_processing.c **** //==============================================================================
2927:..\src/command_processing.c **** 
2928:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2929:..\src/command_processing.c **** {
 20086              		.loc 1 2929 0
 20087              		.cfi_startproc
 20088              		@ args = 0, pretend = 0, frame = 16
 20089              		@ frame_needed = 1, uses_anonymous_args = 0
 20090 0000 80B5     		push	{r7, lr}
 20091              		.cfi_def_cfa_offset 8
 20092              		.cfi_offset 7, -8
 20093              		.cfi_offset 14, -4
 20094 0002 84B0     		sub	sp, sp, #16
 20095              		.cfi_def_cfa_offset 24
 20096 0004 00AF     		add	r7, sp, #0
 20097              		.cfi_def_cfa_register 7
 20098 0006 7860     		str	r0, [r7, #4]
 20099 0008 0B46     		mov	r3, r1
 20100 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 20101 000c 1346     		mov	r3, r2
 20102 000e 7B70     		strb	r3, [r7, #1]
2930:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2931:..\src/command_processing.c **** 
2932:..\src/command_processing.c ****     // frame - start
2933:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20103              		.loc 1 2933 0
 20104 0010 3A20     		movs	r0, #58
 20105 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2934:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20106              		.loc 1 2934 0
 20107 0016 3A20     		movs	r0, #58
 20108 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2935:..\src/command_processing.c ****     // frame - ID
2936:..\src/command_processing.c ****     //if(old_id)
2937:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 20109              		.loc 1 2937 0
 20110 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20111 001e 1846     		mov	r0, r3
 20112 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2938:..\src/command_processing.c ****     //else
2939:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2940:..\src/command_processing.c ****         
2941:..\src/command_processing.c ****     // frame - length
2942:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20113              		.loc 1 2942 0
 20114 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20115 0026 DBB2     		uxtb	r3, r3
 20116 0028 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 448


 20117 002a FFF7FEFF 		bl	UART_RS485_PutChar
2943:..\src/command_processing.c ****     // frame - packet data
2944:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20118              		.loc 1 2944 0
 20119 002e 0023     		movs	r3, #0
 20120 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20121 0032 09E0     		b	.L800
 20122              	.L801:
2945:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20123              		.loc 1 2945 0 discriminator 3
 20124 0034 FB89     		ldrh	r3, [r7, #14]
 20125 0036 7A68     		ldr	r2, [r7, #4]
 20126 0038 1344     		add	r3, r3, r2
 20127 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20128 003c 1846     		mov	r0, r3
 20129 003e FFF7FEFF 		bl	UART_RS485_PutChar
2944:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20130              		.loc 1 2944 0 discriminator 3
 20131 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20132 0044 0133     		adds	r3, r3, #1
 20133 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20134              	.L800:
2944:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20135              		.loc 1 2944 0 is_stmt 0 discriminator 1
 20136 0048 FA89     		ldrh	r2, [r7, #14]
 20137 004a 7B88     		ldrh	r3, [r7, #2]
 20138 004c 9A42     		cmp	r2, r3
 20139 004e F1D3     		bcc	.L801
2946:..\src/command_processing.c ****     }
2947:..\src/command_processing.c **** 
2948:..\src/command_processing.c ****     index = 0;
 20140              		.loc 1 2948 0 is_stmt 1
 20141 0050 0023     		movs	r3, #0
 20142 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2949:..\src/command_processing.c **** 
2950:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20143              		.loc 1 2950 0
 20144 0054 00BF     		nop
 20145              	.L803:
 20146              		.loc 1 2950 0 is_stmt 0 discriminator 2
 20147 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20148 005a 0346     		mov	r3, r0
 20149 005c 03F00103 		and	r3, r3, #1
 20150 0060 002B     		cmp	r3, #0
 20151 0062 05D1     		bne	.L802
 20152              		.loc 1 2950 0 discriminator 1
 20153 0064 FB89     		ldrh	r3, [r7, #14]
 20154 0066 5A1C     		adds	r2, r3, #1
 20155 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20156 006a B3F57A7F 		cmp	r3, #1000
 20157 006e F2D9     		bls	.L803
 20158              	.L802:
2951:..\src/command_processing.c **** 
2952:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20159              		.loc 1 2952 0 is_stmt 1
 20160 0070 0120     		movs	r0, #1
 20161 0072 FFF7FEFF 		bl	RS485_CTS_Write
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 449


2953:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20162              		.loc 1 2953 0
 20163 0076 0020     		movs	r0, #0
 20164 0078 FFF7FEFF 		bl	RS485_CTS_Write
2954:..\src/command_processing.c **** }
 20165              		.loc 1 2954 0
 20166 007c 00BF     		nop
 20167 007e 1037     		adds	r7, r7, #16
 20168              		.cfi_def_cfa_offset 8
 20169 0080 BD46     		mov	sp, r7
 20170              		.cfi_def_cfa_register 13
 20171              		@ sp needed
 20172 0082 80BD     		pop	{r7, pc}
 20173              		.cfi_endproc
 20174              	.LFE81:
 20175              		.size	commWrite_old_id, .-commWrite_old_id
 20176              		.section	.text.commWrite,"ax",%progbits
 20177              		.align	2
 20178              		.global	commWrite
 20179              		.thumb
 20180              		.thumb_func
 20181              		.type	commWrite, %function
 20182              	commWrite:
 20183              	.LFB82:
2955:..\src/command_processing.c **** 
2956:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2957:..\src/command_processing.c **** {
 20184              		.loc 1 2957 0
 20185              		.cfi_startproc
 20186              		@ args = 0, pretend = 0, frame = 16
 20187              		@ frame_needed = 1, uses_anonymous_args = 0
 20188 0000 80B5     		push	{r7, lr}
 20189              		.cfi_def_cfa_offset 8
 20190              		.cfi_offset 7, -8
 20191              		.cfi_offset 14, -4
 20192 0002 84B0     		sub	sp, sp, #16
 20193              		.cfi_def_cfa_offset 24
 20194 0004 00AF     		add	r7, sp, #0
 20195              		.cfi_def_cfa_register 7
 20196 0006 7860     		str	r0, [r7, #4]
 20197 0008 0B46     		mov	r3, r1
 20198 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2958:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2959:..\src/command_processing.c **** 
2960:..\src/command_processing.c ****     // frame - start
2961:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20199              		.loc 1 2961 0
 20200 000c 3A20     		movs	r0, #58
 20201 000e FFF7FEFF 		bl	UART_RS485_PutChar
2962:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20202              		.loc 1 2962 0
 20203 0012 3A20     		movs	r0, #58
 20204 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2963:..\src/command_processing.c ****     // frame - ID
2964:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 20205              		.loc 1 2964 0
 20206 0018 1A4B     		ldr	r3, .L809
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 450


 20207 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 20208 001e 1846     		mov	r0, r3
 20209 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2965:..\src/command_processing.c ****     // frame - length
2966:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20210              		.loc 1 2966 0
 20211 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20212 0026 DBB2     		uxtb	r3, r3
 20213 0028 1846     		mov	r0, r3
 20214 002a FFF7FEFF 		bl	UART_RS485_PutChar
2967:..\src/command_processing.c ****     // frame - packet data
2968:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20215              		.loc 1 2968 0
 20216 002e 0023     		movs	r3, #0
 20217 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20218 0032 09E0     		b	.L805
 20219              	.L806:
2969:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20220              		.loc 1 2969 0 discriminator 3
 20221 0034 FB89     		ldrh	r3, [r7, #14]
 20222 0036 7A68     		ldr	r2, [r7, #4]
 20223 0038 1344     		add	r3, r3, r2
 20224 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20225 003c 1846     		mov	r0, r3
 20226 003e FFF7FEFF 		bl	UART_RS485_PutChar
2968:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20227              		.loc 1 2968 0 discriminator 3
 20228 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20229 0044 0133     		adds	r3, r3, #1
 20230 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20231              	.L805:
2968:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20232              		.loc 1 2968 0 is_stmt 0 discriminator 1
 20233 0048 FA89     		ldrh	r2, [r7, #14]
 20234 004a 7B88     		ldrh	r3, [r7, #2]
 20235 004c 9A42     		cmp	r2, r3
 20236 004e F1D3     		bcc	.L806
2970:..\src/command_processing.c ****     }
2971:..\src/command_processing.c **** 
2972:..\src/command_processing.c ****     index = 0;
 20237              		.loc 1 2972 0 is_stmt 1
 20238 0050 0023     		movs	r3, #0
 20239 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2973:..\src/command_processing.c **** 
2974:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20240              		.loc 1 2974 0
 20241 0054 00BF     		nop
 20242              	.L808:
 20243              		.loc 1 2974 0 is_stmt 0 discriminator 2
 20244 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20245 005a 0346     		mov	r3, r0
 20246 005c 03F00103 		and	r3, r3, #1
 20247 0060 002B     		cmp	r3, #0
 20248 0062 05D1     		bne	.L807
 20249              		.loc 1 2974 0 discriminator 1
 20250 0064 FB89     		ldrh	r3, [r7, #14]
 20251 0066 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 451


 20252 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20253 006a B3F57A7F 		cmp	r3, #1000
 20254 006e F2D9     		bls	.L808
 20255              	.L807:
2975:..\src/command_processing.c **** 
2976:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20256              		.loc 1 2976 0 is_stmt 1
 20257 0070 0120     		movs	r0, #1
 20258 0072 FFF7FEFF 		bl	RS485_CTS_Write
2977:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20259              		.loc 1 2977 0
 20260 0076 0020     		movs	r0, #0
 20261 0078 FFF7FEFF 		bl	RS485_CTS_Write
2978:..\src/command_processing.c **** }
 20262              		.loc 1 2978 0
 20263 007c 00BF     		nop
 20264 007e 1037     		adds	r7, r7, #16
 20265              		.cfi_def_cfa_offset 8
 20266 0080 BD46     		mov	sp, r7
 20267              		.cfi_def_cfa_register 13
 20268              		@ sp needed
 20269 0082 80BD     		pop	{r7, pc}
 20270              	.L810:
 20271              		.align	2
 20272              	.L809:
 20273 0084 00000000 		.word	g_mem
 20274              		.cfi_endproc
 20275              	.LFE82:
 20276              		.size	commWrite, .-commWrite
 20277              		.section	.text.commWriteID,"ax",%progbits
 20278              		.align	2
 20279              		.global	commWriteID
 20280              		.thumb
 20281              		.thumb_func
 20282              		.type	commWriteID, %function
 20283              	commWriteID:
 20284              	.LFB83:
2979:..\src/command_processing.c **** 
2980:..\src/command_processing.c **** //==============================================================================
2981:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2982:..\src/command_processing.c **** //==============================================================================
2983:..\src/command_processing.c **** 
2984:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2985:..\src/command_processing.c **** {
 20285              		.loc 1 2985 0
 20286              		.cfi_startproc
 20287              		@ args = 0, pretend = 0, frame = 8
 20288              		@ frame_needed = 1, uses_anonymous_args = 0
 20289 0000 80B5     		push	{r7, lr}
 20290              		.cfi_def_cfa_offset 8
 20291              		.cfi_offset 7, -8
 20292              		.cfi_offset 14, -4
 20293 0002 82B0     		sub	sp, sp, #8
 20294              		.cfi_def_cfa_offset 16
 20295 0004 00AF     		add	r7, sp, #0
 20296              		.cfi_def_cfa_register 7
 20297 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 452


 20298 0008 0B46     		mov	r3, r1
 20299 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 20300 000c 1346     		mov	r3, r2
 20301 000e 7B70     		strb	r3, [r7, #1]
2986:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2987:..\src/command_processing.c **** 
2988:..\src/command_processing.c ****     // frame - start
2989:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20302              		.loc 1 2989 0
 20303 0010 3A20     		movs	r0, #58
 20304 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2990:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20305              		.loc 1 2990 0
 20306 0016 3A20     		movs	r0, #58
 20307 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2991:..\src/command_processing.c ****     // frame - ID
2992:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 20308              		.loc 1 2992 0
 20309 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20310 001e 1846     		mov	r0, r3
 20311 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2993:..\src/command_processing.c ****     // frame - length
2994:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20312              		.loc 1 2994 0
 20313 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20314 0026 DBB2     		uxtb	r3, r3
 20315 0028 1846     		mov	r0, r3
 20316 002a FFF7FEFF 		bl	UART_RS485_PutChar
2995:..\src/command_processing.c ****     // frame - packet data
2996:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 20317              		.loc 1 2996 0
 20318 002e 1B4B     		ldr	r3, .L816
 20319 0030 0022     		movs	r2, #0
 20320 0032 1A80     		strh	r2, [r3]	@ movhi
 20321 0034 0EE0     		b	.L812
 20322              	.L813:
2997:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20323              		.loc 1 2997 0 discriminator 3
 20324 0036 194B     		ldr	r3, .L816
 20325 0038 1B88     		ldrh	r3, [r3]
 20326 003a 1A46     		mov	r2, r3
 20327 003c 7B68     		ldr	r3, [r7, #4]
 20328 003e 1344     		add	r3, r3, r2
 20329 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20330 0042 1846     		mov	r0, r3
 20331 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2996:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20332              		.loc 1 2996 0 discriminator 3
 20333 0048 144B     		ldr	r3, .L816
 20334 004a 1B88     		ldrh	r3, [r3]
 20335 004c 0133     		adds	r3, r3, #1
 20336 004e 9AB2     		uxth	r2, r3
 20337 0050 124B     		ldr	r3, .L816
 20338 0052 1A80     		strh	r2, [r3]	@ movhi
 20339              	.L812:
2996:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20340              		.loc 1 2996 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 453


 20341 0054 114B     		ldr	r3, .L816
 20342 0056 1B88     		ldrh	r3, [r3]
 20343 0058 7A88     		ldrh	r2, [r7, #2]
 20344 005a 9A42     		cmp	r2, r3
 20345 005c EBD8     		bhi	.L813
2998:..\src/command_processing.c ****     }
2999:..\src/command_processing.c **** 
3000:..\src/command_processing.c ****     i = 0;
 20346              		.loc 1 3000 0 is_stmt 1
 20347 005e 0F4B     		ldr	r3, .L816
 20348 0060 0022     		movs	r2, #0
 20349 0062 1A80     		strh	r2, [r3]	@ movhi
3001:..\src/command_processing.c **** 
3002:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 20350              		.loc 1 3002 0
 20351 0064 00BF     		nop
 20352              	.L815:
 20353              		.loc 1 3002 0 is_stmt 0 discriminator 2
 20354 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20355 006a 0346     		mov	r3, r0
 20356 006c 03F00103 		and	r3, r3, #1
 20357 0070 002B     		cmp	r3, #0
 20358 0072 08D1     		bne	.L814
 20359              		.loc 1 3002 0 discriminator 1
 20360 0074 094B     		ldr	r3, .L816
 20361 0076 1B88     		ldrh	r3, [r3]
 20362 0078 5A1C     		adds	r2, r3, #1
 20363 007a 91B2     		uxth	r1, r2
 20364 007c 074A     		ldr	r2, .L816
 20365 007e 1180     		strh	r1, [r2]	@ movhi
 20366 0080 B3F57A7F 		cmp	r3, #1000
 20367 0084 EFD9     		bls	.L815
 20368              	.L814:
3003:..\src/command_processing.c ****     
3004:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20369              		.loc 1 3004 0 is_stmt 1
 20370 0086 0120     		movs	r0, #1
 20371 0088 FFF7FEFF 		bl	RS485_CTS_Write
3005:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20372              		.loc 1 3005 0
 20373 008c 0020     		movs	r0, #0
 20374 008e FFF7FEFF 		bl	RS485_CTS_Write
3006:..\src/command_processing.c **** }
 20375              		.loc 1 3006 0
 20376 0092 00BF     		nop
 20377 0094 0837     		adds	r7, r7, #8
 20378              		.cfi_def_cfa_offset 8
 20379 0096 BD46     		mov	sp, r7
 20380              		.cfi_def_cfa_register 13
 20381              		@ sp needed
 20382 0098 80BD     		pop	{r7, pc}
 20383              	.L817:
 20384 009a 00BF     		.align	2
 20385              	.L816:
 20386 009c 04000000 		.word	i.11272
 20387              		.cfi_endproc
 20388              	.LFE83:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 454


 20389              		.size	commWriteID, .-commWriteID
 20390              		.section	.text.LCRChecksum,"ax",%progbits
 20391              		.align	2
 20392              		.global	LCRChecksum
 20393              		.thumb
 20394              		.thumb_func
 20395              		.type	LCRChecksum, %function
 20396              	LCRChecksum:
 20397              	.LFB84:
3007:..\src/command_processing.c **** 
3008:..\src/command_processing.c **** //==============================================================================
3009:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
3010:..\src/command_processing.c **** //==============================================================================
3011:..\src/command_processing.c **** 
3012:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
3013:..\src/command_processing.c **** 
3014:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 20398              		.loc 1 3014 0
 20399              		.cfi_startproc
 20400              		@ args = 0, pretend = 0, frame = 16
 20401              		@ frame_needed = 1, uses_anonymous_args = 0
 20402              		@ link register save eliminated.
 20403 0000 80B4     		push	{r7}
 20404              		.cfi_def_cfa_offset 4
 20405              		.cfi_offset 7, -4
 20406 0002 85B0     		sub	sp, sp, #20
 20407              		.cfi_def_cfa_offset 24
 20408 0004 00AF     		add	r7, sp, #0
 20409              		.cfi_def_cfa_register 7
 20410 0006 7860     		str	r0, [r7, #4]
 20411 0008 0B46     		mov	r3, r1
 20412 000a FB70     		strb	r3, [r7, #3]
3015:..\src/command_processing.c ****     
3016:..\src/command_processing.c ****     uint8 CYDATA i;
3017:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 20413              		.loc 1 3017 0
 20414 000c 0023     		movs	r3, #0
 20415 000e BB73     		strb	r3, [r7, #14]
3018:..\src/command_processing.c ****     
3019:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 20416              		.loc 1 3019 0
 20417 0010 0023     		movs	r3, #0
 20418 0012 FB73     		strb	r3, [r7, #15]
 20419 0014 09E0     		b	.L819
 20420              	.L820:
3020:..\src/command_processing.c ****        checksum ^= data_array[i];
 20421              		.loc 1 3020 0 discriminator 3
 20422 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20423 0018 7A68     		ldr	r2, [r7, #4]
 20424 001a 1344     		add	r3, r3, r2
 20425 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 20426 001e BB7B     		ldrb	r3, [r7, #14]
 20427 0020 5340     		eors	r3, r3, r2
 20428 0022 BB73     		strb	r3, [r7, #14]
3019:..\src/command_processing.c ****        checksum ^= data_array[i];
 20429              		.loc 1 3019 0 discriminator 3
 20430 0024 FB7B     		ldrb	r3, [r7, #15]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 455


 20431 0026 0133     		adds	r3, r3, #1
 20432 0028 FB73     		strb	r3, [r7, #15]
 20433              	.L819:
3019:..\src/command_processing.c ****        checksum ^= data_array[i];
 20434              		.loc 1 3019 0 is_stmt 0 discriminator 1
 20435 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 20436 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20437 002e 9A42     		cmp	r2, r3
 20438 0030 F1D3     		bcc	.L820
3021:..\src/command_processing.c ****   
3022:..\src/command_processing.c ****     return checksum;
 20439              		.loc 1 3022 0 is_stmt 1
 20440 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
3023:..\src/command_processing.c **** }
 20441              		.loc 1 3023 0
 20442 0034 1846     		mov	r0, r3
 20443 0036 1437     		adds	r7, r7, #20
 20444              		.cfi_def_cfa_offset 4
 20445 0038 BD46     		mov	sp, r7
 20446              		.cfi_def_cfa_register 13
 20447              		@ sp needed
 20448 003a 80BC     		pop	{r7}
 20449              		.cfi_restore 7
 20450              		.cfi_def_cfa_offset 0
 20451 003c 7047     		bx	lr
 20452              		.cfi_endproc
 20453              	.LFE84:
 20454              		.size	LCRChecksum, .-LCRChecksum
 20455 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 20456              		.align	2
 20457              		.global	sendAcknowledgment
 20458              		.thumb
 20459              		.thumb_func
 20460              		.type	sendAcknowledgment, %function
 20461              	sendAcknowledgment:
 20462              	.LFB85:
3024:..\src/command_processing.c **** 
3025:..\src/command_processing.c **** 
3026:..\src/command_processing.c **** //==============================================================================
3027:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
3028:..\src/command_processing.c **** //==============================================================================
3029:..\src/command_processing.c **** 
3030:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 20463              		.loc 1 3030 0
 20464              		.cfi_startproc
 20465              		@ args = 0, pretend = 0, frame = 16
 20466              		@ frame_needed = 1, uses_anonymous_args = 0
 20467 0000 80B5     		push	{r7, lr}
 20468              		.cfi_def_cfa_offset 8
 20469              		.cfi_offset 7, -8
 20470              		.cfi_offset 14, -4
 20471 0002 84B0     		sub	sp, sp, #16
 20472              		.cfi_def_cfa_offset 24
 20473 0004 00AF     		add	r7, sp, #0
 20474              		.cfi_def_cfa_register 7
 20475 0006 0346     		mov	r3, r0
 20476 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 456


3031:..\src/command_processing.c ****     int packet_lenght = 2;
 20477              		.loc 1 3031 0
 20478 000a 0223     		movs	r3, #2
 20479 000c FB60     		str	r3, [r7, #12]
3032:..\src/command_processing.c ****     uint8 packet_data[2];
3033:..\src/command_processing.c **** 
3034:..\src/command_processing.c ****     packet_data[0] = value;
 20480              		.loc 1 3034 0
 20481 000e FB79     		ldrb	r3, [r7, #7]
 20482 0010 3B72     		strb	r3, [r7, #8]
3035:..\src/command_processing.c ****     packet_data[1] = value;
 20483              		.loc 1 3035 0
 20484 0012 FB79     		ldrb	r3, [r7, #7]
 20485 0014 7B72     		strb	r3, [r7, #9]
3036:..\src/command_processing.c **** 
3037:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 20486              		.loc 1 3037 0
 20487 0016 FB68     		ldr	r3, [r7, #12]
 20488 0018 9AB2     		uxth	r2, r3
 20489 001a 07F10803 		add	r3, r7, #8
 20490 001e 1146     		mov	r1, r2
 20491 0020 1846     		mov	r0, r3
 20492 0022 FFF7FEFF 		bl	commWrite
3038:..\src/command_processing.c **** }
 20493              		.loc 1 3038 0
 20494 0026 00BF     		nop
 20495 0028 1037     		adds	r7, r7, #16
 20496              		.cfi_def_cfa_offset 8
 20497 002a BD46     		mov	sp, r7
 20498              		.cfi_def_cfa_register 13
 20499              		@ sp needed
 20500 002c 80BD     		pop	{r7, pc}
 20501              		.cfi_endproc
 20502              	.LFE85:
 20503              		.size	sendAcknowledgment, .-sendAcknowledgment
 20504 002e 00BF     		.section	.text.memStore,"ax",%progbits
 20505              		.align	2
 20506              		.global	memStore
 20507              		.thumb
 20508              		.thumb_func
 20509              		.type	memStore, %function
 20510              	memStore:
 20511              	.LFB86:
3039:..\src/command_processing.c **** 
3040:..\src/command_processing.c **** //==============================================================================
3041:..\src/command_processing.c **** //                                                                  STORE MEMORY
3042:..\src/command_processing.c **** //==============================================================================
3043:..\src/command_processing.c **** 
3044:..\src/command_processing.c **** 
3045:..\src/command_processing.c **** uint8 memStore(int displacement)
3046:..\src/command_processing.c **** {
 20512              		.loc 1 3046 0
 20513              		.cfi_startproc
 20514              		@ args = 0, pretend = 0, frame = 24
 20515              		@ frame_needed = 1, uses_anonymous_args = 0
 20516 0000 80B5     		push	{r7, lr}
 20517              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 457


 20518              		.cfi_offset 7, -8
 20519              		.cfi_offset 14, -4
 20520 0002 86B0     		sub	sp, sp, #24
 20521              		.cfi_def_cfa_offset 32
 20522 0004 00AF     		add	r7, sp, #0
 20523              		.cfi_def_cfa_register 7
 20524 0006 7860     		str	r0, [r7, #4]
3047:..\src/command_processing.c ****     int i;  // iterator
3048:..\src/command_processing.c ****     uint8 writeStatus;
3049:..\src/command_processing.c ****     int pages;
3050:..\src/command_processing.c ****     uint8 ret_val = 1;
 20525              		.loc 1 3050 0
 20526 0008 0123     		movs	r3, #1
 20527 000a FB74     		strb	r3, [r7, #19]
3051:..\src/command_processing.c **** 
3052:..\src/command_processing.c ****     // Disable Interrupt
3053:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 20528              		.loc 1 3053 0
 20529 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
3054:..\src/command_processing.c **** 
3055:..\src/command_processing.c ****     // Stop motor
3056:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 20530              		.loc 1 3056 0
 20531 0010 0020     		movs	r0, #0
 20532 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
3057:..\src/command_processing.c **** 
3058:..\src/command_processing.c ****     // Update temperature information for better writing performance
3059:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 20533              		.loc 1 3059 0
 20534 0016 FFF7FEFF 		bl	EEPROM_UpdateTemperature
3060:..\src/command_processing.c **** 
3061:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 20535              		.loc 1 3061 0
 20536 001a 1D4A     		ldr	r2, .L829
 20537 001c 1D4B     		ldr	r3, .L829+4
 20538 001e 1046     		mov	r0, r2
 20539 0020 1946     		mov	r1, r3
 20540 0022 4FF43D73 		mov	r3, #756
 20541 0026 1A46     		mov	r2, r3
 20542 0028 FFF7FEFF 		bl	memcpy
3062:..\src/command_processing.c **** 
3063:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 20543              		.loc 1 3063 0
 20544 002c 3023     		movs	r3, #48
 20545 002e FB60     		str	r3, [r7, #12]
3064:..\src/command_processing.c **** 
3065:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 20546              		.loc 1 3065 0
 20547 0030 0023     		movs	r3, #0
 20548 0032 7B61     		str	r3, [r7, #20]
 20549 0034 18E0     		b	.L824
 20550              	.L827:
3066:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20551              		.loc 1 3066 0
 20552 0036 7B69     		ldr	r3, [r7, #20]
 20553 0038 1B01     		lsls	r3, r3, #4
 20554 003a 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 458


 20555 003c 154B     		ldr	r3, .L829+4
 20556 003e D018     		adds	r0, r2, r3
 20557 0040 7B69     		ldr	r3, [r7, #20]
 20558 0042 DAB2     		uxtb	r2, r3
 20559 0044 7B68     		ldr	r3, [r7, #4]
 20560 0046 DBB2     		uxtb	r3, r3
 20561 0048 1344     		add	r3, r3, r2
 20562 004a DBB2     		uxtb	r3, r3
 20563 004c 1946     		mov	r1, r3
 20564 004e FFF7FEFF 		bl	EEPROM_Write
 20565 0052 0346     		mov	r3, r0
 20566 0054 FB72     		strb	r3, [r7, #11]
3067:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 20567              		.loc 1 3067 0
 20568 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20569 0058 002B     		cmp	r3, #0
 20570 005a 02D0     		beq	.L825
3068:..\src/command_processing.c ****             ret_val = 0;
 20571              		.loc 1 3068 0
 20572 005c 0023     		movs	r3, #0
 20573 005e FB74     		strb	r3, [r7, #19]
3069:..\src/command_processing.c ****             break;
 20574              		.loc 1 3069 0
 20575 0060 06E0     		b	.L826
 20576              	.L825:
3065:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20577              		.loc 1 3065 0 discriminator 2
 20578 0062 7B69     		ldr	r3, [r7, #20]
 20579 0064 0133     		adds	r3, r3, #1
 20580 0066 7B61     		str	r3, [r7, #20]
 20581              	.L824:
3065:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20582              		.loc 1 3065 0 is_stmt 0 discriminator 1
 20583 0068 7A69     		ldr	r2, [r7, #20]
 20584 006a FB68     		ldr	r3, [r7, #12]
 20585 006c 9A42     		cmp	r2, r3
 20586 006e E2DB     		blt	.L827
 20587              	.L826:
3070:..\src/command_processing.c ****         }
3071:..\src/command_processing.c ****     }
3072:..\src/command_processing.c **** 
3073:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 20588              		.loc 1 3073 0 is_stmt 1
 20589 0070 084A     		ldr	r2, .L829+4
 20590 0072 074B     		ldr	r3, .L829
 20591 0074 1046     		mov	r0, r2
 20592 0076 1946     		mov	r1, r3
 20593 0078 4FF43D73 		mov	r3, #756
 20594 007c 1A46     		mov	r2, r3
 20595 007e FFF7FEFF 		bl	memcpy
3074:..\src/command_processing.c **** 
3075:..\src/command_processing.c ****     // Re-Enable Interrupt
3076:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 20596              		.loc 1 3076 0
 20597 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
3077:..\src/command_processing.c **** 
3078:..\src/command_processing.c ****     return ret_val;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 459


 20598              		.loc 1 3078 0
 20599 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
3079:..\src/command_processing.c **** }
 20600              		.loc 1 3079 0
 20601 0088 1846     		mov	r0, r3
 20602 008a 1837     		adds	r7, r7, #24
 20603              		.cfi_def_cfa_offset 8
 20604 008c BD46     		mov	sp, r7
 20605              		.cfi_def_cfa_register 13
 20606              		@ sp needed
 20607 008e 80BD     		pop	{r7, pc}
 20608              	.L830:
 20609              		.align	2
 20610              	.L829:
 20611 0090 00000000 		.word	c_mem
 20612 0094 00000000 		.word	g_mem
 20613              		.cfi_endproc
 20614              	.LFE86:
 20615              		.size	memStore, .-memStore
 20616              		.section	.text.memRecall,"ax",%progbits
 20617              		.align	2
 20618              		.global	memRecall
 20619              		.thumb
 20620              		.thumb_func
 20621              		.type	memRecall, %function
 20622              	memRecall:
 20623              	.LFB87:
3080:..\src/command_processing.c **** 
3081:..\src/command_processing.c **** 
3082:..\src/command_processing.c **** //==============================================================================
3083:..\src/command_processing.c **** //                                                                 RECALL MEMORY
3084:..\src/command_processing.c **** //==============================================================================
3085:..\src/command_processing.c **** 
3086:..\src/command_processing.c **** 
3087:..\src/command_processing.c **** void memRecall(void)
3088:..\src/command_processing.c **** {
 20624              		.loc 1 3088 0
 20625              		.cfi_startproc
 20626              		@ args = 0, pretend = 0, frame = 8
 20627              		@ frame_needed = 1, uses_anonymous_args = 0
 20628 0000 80B5     		push	{r7, lr}
 20629              		.cfi_def_cfa_offset 8
 20630              		.cfi_offset 7, -8
 20631              		.cfi_offset 14, -4
 20632 0002 82B0     		sub	sp, sp, #8
 20633              		.cfi_def_cfa_offset 16
 20634 0004 00AF     		add	r7, sp, #0
 20635              		.cfi_def_cfa_register 7
3089:..\src/command_processing.c ****     uint16 i;
3090:..\src/command_processing.c **** 
3091:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 20636              		.loc 1 3091 0
 20637 0006 0023     		movs	r3, #0
 20638 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 20639 000a 0CE0     		b	.L832
 20640              	.L833:
3092:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 460


 20641              		.loc 1 3092 0 discriminator 3
 20642 000c FB88     		ldrh	r3, [r7, #6]
 20643 000e 184A     		ldr	r2, .L837
 20644 0010 1344     		add	r3, r3, r2
 20645 0012 184A     		ldr	r2, .L837+4
 20646 0014 1168     		ldr	r1, [r2]
 20647 0016 FA88     		ldrh	r2, [r7, #6]
 20648 0018 0A44     		add	r2, r2, r1
 20649 001a 1278     		ldrb	r2, [r2]
 20650 001c D2B2     		uxtb	r2, r2
 20651 001e 1A70     		strb	r2, [r3]
3091:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 20652              		.loc 1 3091 0 discriminator 3
 20653 0020 FB88     		ldrh	r3, [r7, #6]
 20654 0022 0133     		adds	r3, r3, #1
 20655 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 20656              	.L832:
3091:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 20657              		.loc 1 3091 0 is_stmt 0 discriminator 1
 20658 0026 FB88     		ldrh	r3, [r7, #6]
 20659 0028 B3F53D7F 		cmp	r3, #756
 20660 002c EED3     		bcc	.L833
3093:..\src/command_processing.c ****     }
3094:..\src/command_processing.c ****     
3095:..\src/command_processing.c ****     // Recall saved user_emg structure
3096:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 20661              		.loc 1 3096 0 is_stmt 1
 20662 002e 104B     		ldr	r3, .L837
 20663 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 20664 0034 5B01     		lsls	r3, r3, #5
 20665 0036 03F51273 		add	r3, r3, #584
 20666 003a 0D4A     		ldr	r2, .L837
 20667 003c 1344     		add	r3, r3, r2
 20668 003e 1022     		movs	r2, #16
 20669 0040 1946     		mov	r1, r3
 20670 0042 0D48     		ldr	r0, .L837+8
 20671 0044 FFF7FEFF 		bl	memcpy
3097:..\src/command_processing.c **** 
3098:..\src/command_processing.c ****     //check for initialization
3099:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 20672              		.loc 1 3099 0
 20673 0048 094B     		ldr	r3, .L837
 20674 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20675 004c 002B     		cmp	r3, #0
 20676 004e 02D1     		bne	.L834
3100:..\src/command_processing.c ****         memRestore();
 20677              		.loc 1 3100 0
 20678 0050 FFF7FEFF 		bl	memRestore
3101:..\src/command_processing.c ****     } else {
3102:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
3103:..\src/command_processing.c ****     }        
3104:..\src/command_processing.c **** }
 20679              		.loc 1 3104 0
 20680 0054 08E0     		b	.L836
 20681              	.L834:
3102:..\src/command_processing.c ****     }        
 20682              		.loc 1 3102 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 461


 20683 0056 094A     		ldr	r2, .L837+12
 20684 0058 054B     		ldr	r3, .L837
 20685 005a 1046     		mov	r0, r2
 20686 005c 1946     		mov	r1, r3
 20687 005e 4FF43D73 		mov	r3, #756
 20688 0062 1A46     		mov	r2, r3
 20689 0064 FFF7FEFF 		bl	memcpy
 20690              	.L836:
 20691              		.loc 1 3104 0
 20692 0068 00BF     		nop
 20693 006a 0837     		adds	r7, r7, #8
 20694              		.cfi_def_cfa_offset 8
 20695 006c BD46     		mov	sp, r7
 20696              		.cfi_def_cfa_register 13
 20697              		@ sp needed
 20698 006e 80BD     		pop	{r7, pc}
 20699              	.L838:
 20700              		.align	2
 20701              	.L837:
 20702 0070 00000000 		.word	g_mem
 20703 0074 00000000 		.word	EEPROM_ADDR
 20704 0078 F0010000 		.word	g_mem+496
 20705 007c 00000000 		.word	c_mem
 20706              		.cfi_endproc
 20707              	.LFE87:
 20708              		.size	memRecall, .-memRecall
 20709              		.section	.text.memRestore,"ax",%progbits
 20710              		.align	2
 20711              		.global	memRestore
 20712              		.thumb
 20713              		.thumb_func
 20714              		.type	memRestore, %function
 20715              	memRestore:
 20716              	.LFB88:
3105:..\src/command_processing.c **** 
3106:..\src/command_processing.c **** 
3107:..\src/command_processing.c **** //==============================================================================
3108:..\src/command_processing.c **** //                                                                RESTORE MEMORY
3109:..\src/command_processing.c **** //==============================================================================
3110:..\src/command_processing.c **** 
3111:..\src/command_processing.c **** 
3112:..\src/command_processing.c **** uint8 memRestore(void) {
 20717              		.loc 1 3112 0
 20718              		.cfi_startproc
 20719              		@ args = 0, pretend = 0, frame = 8
 20720              		@ frame_needed = 1, uses_anonymous_args = 0
 20721 0000 80B5     		push	{r7, lr}
 20722              		.cfi_def_cfa_offset 8
 20723              		.cfi_offset 7, -8
 20724              		.cfi_offset 14, -4
 20725 0002 82B0     		sub	sp, sp, #8
 20726              		.cfi_def_cfa_offset 16
 20727 0004 00AF     		add	r7, sp, #0
 20728              		.cfi_def_cfa_register 7
3113:..\src/command_processing.c ****     uint16 i;
3114:..\src/command_processing.c **** 
3115:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 462


 20729              		.loc 1 3115 0
 20730 0006 0023     		movs	r3, #0
 20731 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 20732 000a 0EE0     		b	.L840
 20733              	.L841:
3116:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 20734              		.loc 1 3116 0 discriminator 3
 20735 000c FB88     		ldrh	r3, [r7, #6]
 20736 000e 114A     		ldr	r2, .L844
 20737 0010 1344     		add	r3, r3, r2
 20738 0012 114A     		ldr	r2, .L844+4
 20739 0014 1168     		ldr	r1, [r2]
 20740 0016 FA88     		ldrh	r2, [r7, #6]
 20741 0018 02F54872 		add	r2, r2, #800
 20742 001c 0A44     		add	r2, r2, r1
 20743 001e 1278     		ldrb	r2, [r2]
 20744 0020 D2B2     		uxtb	r2, r2
 20745 0022 1A70     		strb	r2, [r3]
3115:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 20746              		.loc 1 3115 0 discriminator 3
 20747 0024 FB88     		ldrh	r3, [r7, #6]
 20748 0026 0133     		adds	r3, r3, #1
 20749 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 20750              	.L840:
3115:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 20751              		.loc 1 3115 0 is_stmt 0 discriminator 1
 20752 002a FB88     		ldrh	r3, [r7, #6]
 20753 002c B3F53D7F 		cmp	r3, #756
 20754 0030 ECD3     		bcc	.L841
3117:..\src/command_processing.c ****     }
3118:..\src/command_processing.c **** 
3119:..\src/command_processing.c ****     //check for initialization
3120:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 20755              		.loc 1 3120 0 is_stmt 1
 20756 0032 084B     		ldr	r3, .L844
 20757 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20758 0036 002B     		cmp	r3, #0
 20759 0038 03D1     		bne	.L842
3121:..\src/command_processing.c ****         return memInit();
 20760              		.loc 1 3121 0
 20761 003a FFF7FEFF 		bl	memInit
 20762 003e 0346     		mov	r3, r0
 20763 0040 03E0     		b	.L843
 20764              	.L842:
3122:..\src/command_processing.c ****     } else {
3123:..\src/command_processing.c ****         return memStore(0);
 20765              		.loc 1 3123 0
 20766 0042 0020     		movs	r0, #0
 20767 0044 FFF7FEFF 		bl	memStore
 20768 0048 0346     		mov	r3, r0
 20769              	.L843:
3124:..\src/command_processing.c ****     }  
3125:..\src/command_processing.c **** }
 20770              		.loc 1 3125 0
 20771 004a 1846     		mov	r0, r3
 20772 004c 0837     		adds	r7, r7, #8
 20773              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 463


 20774 004e BD46     		mov	sp, r7
 20775              		.cfi_def_cfa_register 13
 20776              		@ sp needed
 20777 0050 80BD     		pop	{r7, pc}
 20778              	.L845:
 20779 0052 00BF     		.align	2
 20780              	.L844:
 20781 0054 00000000 		.word	g_mem
 20782 0058 00000000 		.word	EEPROM_ADDR
 20783              		.cfi_endproc
 20784              	.LFE88:
 20785              		.size	memRestore, .-memRestore
 20786              		.section	.rodata
 20787 1f3b 00       		.align	2
 20788              	.LC295:
 20789 1f3c 47454E30 		.ascii	"GEN001\000"
 20789      303100
 20790              		.section	.text.memInit,"ax",%progbits
 20791              		.align	2
 20792              		.global	memInit
 20793              		.thumb
 20794              		.thumb_func
 20795              		.type	memInit, %function
 20796              	memInit:
 20797              	.LFB89:
3126:..\src/command_processing.c **** 
3127:..\src/command_processing.c **** //==============================================================================
3128:..\src/command_processing.c **** //                                                                   MEMORY INIT
3129:..\src/command_processing.c **** //==============================================================================
3130:..\src/command_processing.c **** 
3131:..\src/command_processing.c **** uint8 memInit(void)
3132:..\src/command_processing.c **** {
 20798              		.loc 1 3132 0
 20799              		.cfi_startproc
 20800              		@ args = 0, pretend = 0, frame = 8
 20801              		@ frame_needed = 1, uses_anonymous_args = 0
 20802 0000 80B5     		push	{r7, lr}
 20803              		.cfi_def_cfa_offset 8
 20804              		.cfi_offset 7, -8
 20805              		.cfi_offset 14, -4
 20806 0002 82B0     		sub	sp, sp, #8
 20807              		.cfi_def_cfa_offset 16
 20808 0004 00AF     		add	r7, sp, #0
 20809              		.cfi_def_cfa_register 7
3133:..\src/command_processing.c ****     uint8 i, j;
3134:..\src/command_processing.c **** 
3135:..\src/command_processing.c ****     //initialize memory settings
3136:..\src/command_processing.c ****     for (i=0; i<15; i++){
 20810              		.loc 1 3136 0
 20811 0006 0023     		movs	r3, #0
 20812 0008 FB71     		strb	r3, [r7, #7]
 20813 000a 07E0     		b	.L847
 20814              	.L848:
3137:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 20815              		.loc 1 3137 0 discriminator 3
 20816 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20817 000e B44A     		ldr	r2, .L873
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 464


 20818 0010 1344     		add	r3, r3, r2
 20819 0012 0022     		movs	r2, #0
 20820 0014 5A70     		strb	r2, [r3, #1]
3136:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 20821              		.loc 1 3136 0 discriminator 3
 20822 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20823 0018 0133     		adds	r3, r3, #1
 20824 001a FB71     		strb	r3, [r7, #7]
 20825              	.L847:
3136:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 20826              		.loc 1 3136 0 is_stmt 0 discriminator 1
 20827 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20828 001e 0E2B     		cmp	r3, #14
 20829 0020 F4D9     		bls	.L848
3138:..\src/command_processing.c ****     }
3139:..\src/command_processing.c ****         
3140:..\src/command_processing.c ****     // DEV STRUCT
3141:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 20830              		.loc 1 3141 0 is_stmt 1
 20831 0022 AF4B     		ldr	r3, .L873
 20832 0024 0122     		movs	r2, #1
 20833 0026 83F8A020 		strb	r2, [r3, #160]
3142:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 20834              		.loc 1 3142 0
 20835 002a AD4B     		ldr	r3, .L873
 20836 002c 0022     		movs	r2, #0
 20837 002e 83F8A720 		strb	r2, [r3, #167]
3143:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 20838              		.loc 1 3143 0
 20839 0032 AB4B     		ldr	r3, .L873
 20840 0034 0122     		movs	r2, #1
 20841 0036 83F8AC20 		strb	r2, [r3, #172]
3144:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 20842              		.loc 1 3144 0
 20843 003a A94B     		ldr	r3, .L873
 20844 003c 0022     		movs	r2, #0
 20845 003e 83F8A820 		strb	r2, [r3, #168]
3145:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 20846              		.loc 1 3145 0
 20847 0042 FFF7FEFF 		bl	reset_counters
3146:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 20848              		.loc 1 3146 0
 20849 0046 0023     		movs	r3, #0
 20850 0048 FB71     		strb	r3, [r7, #7]
 20851 004a 08E0     		b	.L849
 20852              	.L850:
3147:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 20853              		.loc 1 3147 0 discriminator 3
 20854 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20855 004e A44A     		ldr	r2, .L873
 20856 0050 1344     		add	r3, r3, r2
 20857 0052 0022     		movs	r2, #0
 20858 0054 83F88020 		strb	r2, [r3, #128]
3146:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 20859              		.loc 1 3146 0 discriminator 3
 20860 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20861 005a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 465


 20862 005c FB71     		strb	r3, [r7, #7]
 20863              	.L849:
3146:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 20864              		.loc 1 3146 0 is_stmt 0 discriminator 1
 20865 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20866 0060 1F2B     		cmp	r3, #31
 20867 0062 F3D9     		bls	.L850
3148:..\src/command_processing.c ****     }
3149:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 20868              		.loc 1 3149 0 is_stmt 1
 20869 0064 9E4B     		ldr	r3, .L873
 20870 0066 0022     		movs	r2, #0
 20871 0068 83F8A920 		strb	r2, [r3, #169]
3150:..\src/command_processing.c **** 
3151:..\src/command_processing.c ****     // MOTOR STRUCT
3152:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 20872              		.loc 1 3152 0
 20873 006c 0023     		movs	r3, #0
 20874 006e FB71     		strb	r3, [r7, #7]
 20875 0070 15E1     		b	.L851
 20876              	.L854:
3153:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 20877              		.loc 1 3153 0
 20878 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20879 0074 9A49     		ldr	r1, .L873
 20880 0076 1346     		mov	r3, r2
 20881 0078 DB00     		lsls	r3, r3, #3
 20882 007a 9B1A     		subs	r3, r3, r2
 20883 007c 1B01     		lsls	r3, r3, #4
 20884 007e 0B44     		add	r3, r3, r1
 20885 0080 B033     		adds	r3, r3, #176
 20886 0082 40F23942 		movw	r2, #1081
 20887 0086 1A60     		str	r2, [r3]
3154:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 20888              		.loc 1 3154 0
 20889 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20890 008a 9549     		ldr	r1, .L873
 20891 008c 1346     		mov	r3, r2
 20892 008e DB00     		lsls	r3, r3, #3
 20893 0090 9B1A     		subs	r3, r3, r2
 20894 0092 1B01     		lsls	r3, r3, #4
 20895 0094 0B44     		add	r3, r3, r1
 20896 0096 B433     		adds	r3, r3, #180
 20897 0098 0022     		movs	r2, #0
 20898 009a 1A60     		str	r2, [r3]
3155:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 20899              		.loc 1 3155 0
 20900 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20901 009e 9049     		ldr	r1, .L873
 20902 00a0 1346     		mov	r3, r2
 20903 00a2 DB00     		lsls	r3, r3, #3
 20904 00a4 9B1A     		subs	r3, r3, r2
 20905 00a6 1B01     		lsls	r3, r3, #4
 20906 00a8 0B44     		add	r3, r3, r1
 20907 00aa B833     		adds	r3, r3, #184
 20908 00ac 4FF4E572 		mov	r2, #458
 20909 00b0 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 466


3156:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 20910              		.loc 1 3156 0
 20911 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20912 00b4 8A49     		ldr	r1, .L873
 20913 00b6 1346     		mov	r3, r2
 20914 00b8 DB00     		lsls	r3, r3, #3
 20915 00ba 9B1A     		subs	r3, r3, r2
 20916 00bc 1B01     		lsls	r3, r3, #4
 20917 00be 0B44     		add	r3, r3, r1
 20918 00c0 BC33     		adds	r3, r3, #188
 20919 00c2 4FF48032 		mov	r2, #65536
 20920 00c6 1A60     		str	r2, [r3]
3157:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 20921              		.loc 1 3157 0
 20922 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20923 00ca 8549     		ldr	r1, .L873
 20924 00cc 1346     		mov	r3, r2
 20925 00ce DB00     		lsls	r3, r3, #3
 20926 00d0 9B1A     		subs	r3, r3, r2
 20927 00d2 1B01     		lsls	r3, r3, #4
 20928 00d4 0B44     		add	r3, r3, r1
 20929 00d6 C033     		adds	r3, r3, #192
 20930 00d8 4122     		movs	r2, #65
 20931 00da 1A60     		str	r2, [r3]
3158:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 20932              		.loc 1 3158 0
 20933 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20934 00de 8049     		ldr	r1, .L873
 20935 00e0 1346     		mov	r3, r2
 20936 00e2 DB00     		lsls	r3, r3, #3
 20937 00e4 9B1A     		subs	r3, r3, r2
 20938 00e6 1B01     		lsls	r3, r3, #4
 20939 00e8 0B44     		add	r3, r3, r1
 20940 00ea C433     		adds	r3, r3, #196
 20941 00ec 0022     		movs	r2, #0
 20942 00ee 1A60     		str	r2, [r3]
3159:..\src/command_processing.c **** 
3160:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 20943              		.loc 1 3160 0
 20944 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20945 00f2 7B49     		ldr	r1, .L873
 20946 00f4 1346     		mov	r3, r2
 20947 00f6 DB00     		lsls	r3, r3, #3
 20948 00f8 9B1A     		subs	r3, r3, r2
 20949 00fa 1B01     		lsls	r3, r3, #4
 20950 00fc 0B44     		add	r3, r3, r1
 20951 00fe C833     		adds	r3, r3, #200
 20952 0100 41F69912 		movw	r2, #6553
 20953 0104 1A60     		str	r2, [r3]
3161:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 20954              		.loc 1 3161 0
 20955 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20956 0108 7549     		ldr	r1, .L873
 20957 010a 1346     		mov	r3, r2
 20958 010c DB00     		lsls	r3, r3, #3
 20959 010e 9B1A     		subs	r3, r3, r2
 20960 0110 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 467


 20961 0112 0B44     		add	r3, r3, r1
 20962 0114 CC33     		adds	r3, r3, #204
 20963 0116 0022     		movs	r2, #0
 20964 0118 1A60     		str	r2, [r3]
3162:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 20965              		.loc 1 3162 0
 20966 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20967 011c 7049     		ldr	r1, .L873
 20968 011e 1346     		mov	r3, r2
 20969 0120 DB00     		lsls	r3, r3, #3
 20970 0122 9B1A     		subs	r3, r3, r2
 20971 0124 1B01     		lsls	r3, r3, #4
 20972 0126 0B44     		add	r3, r3, r1
 20973 0128 D033     		adds	r3, r3, #208
 20974 012a 0022     		movs	r2, #0
 20975 012c 1A60     		str	r2, [r3]
3163:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 20976              		.loc 1 3163 0
 20977 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20978 0130 6B49     		ldr	r1, .L873
 20979 0132 1346     		mov	r3, r2
 20980 0134 DB00     		lsls	r3, r3, #3
 20981 0136 9B1A     		subs	r3, r3, r2
 20982 0138 1B01     		lsls	r3, r3, #4
 20983 013a 0B44     		add	r3, r3, r1
 20984 013c D433     		adds	r3, r3, #212
 20985 013e 44F6CC42 		movw	r2, #19660
 20986 0142 1A60     		str	r2, [r3]
3164:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 20987              		.loc 1 3164 0
 20988 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20989 0146 6649     		ldr	r1, .L873
 20990 0148 1346     		mov	r3, r2
 20991 014a DB00     		lsls	r3, r3, #3
 20992 014c 9B1A     		subs	r3, r3, r2
 20993 014e 1B01     		lsls	r3, r3, #4
 20994 0150 0B44     		add	r3, r3, r1
 20995 0152 D833     		adds	r3, r3, #216
 20996 0154 0D22     		movs	r2, #13
 20997 0156 1A60     		str	r2, [r3]
3165:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 20998              		.loc 1 3165 0
 20999 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21000 015a 6149     		ldr	r1, .L873
 21001 015c 1346     		mov	r3, r2
 21002 015e DB00     		lsls	r3, r3, #3
 21003 0160 9B1A     		subs	r3, r3, r2
 21004 0162 1B01     		lsls	r3, r3, #4
 21005 0164 0B44     		add	r3, r3, r1
 21006 0166 DC33     		adds	r3, r3, #220
 21007 0168 0022     		movs	r2, #0
 21008 016a 1A60     		str	r2, [r3]
3166:..\src/command_processing.c **** 
3167:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 21009              		.loc 1 3167 0
 21010 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21011 016e 5C49     		ldr	r1, .L873
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 468


 21012 0170 1346     		mov	r3, r2
 21013 0172 DB00     		lsls	r3, r3, #3
 21014 0174 9B1A     		subs	r3, r3, r2
 21015 0176 1B01     		lsls	r3, r3, #4
 21016 0178 0B44     		add	r3, r3, r1
 21017 017a E033     		adds	r3, r3, #224
 21018 017c 0122     		movs	r2, #1
 21019 017e 1A70     		strb	r2, [r3]
3168:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 21020              		.loc 1 3168 0
 21021 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21022 0182 5749     		ldr	r1, .L873
 21023 0184 1346     		mov	r3, r2
 21024 0186 DB00     		lsls	r3, r3, #3
 21025 0188 9B1A     		subs	r3, r3, r2
 21026 018a 1B01     		lsls	r3, r3, #4
 21027 018c 0B44     		add	r3, r3, r1
 21028 018e E133     		adds	r3, r3, #225
 21029 0190 0022     		movs	r2, #0
 21030 0192 1A70     		strb	r2, [r3]
3169:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 21031              		.loc 1 3169 0
 21032 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21033 0196 5249     		ldr	r1, .L873
 21034 0198 1346     		mov	r3, r2
 21035 019a DB00     		lsls	r3, r3, #3
 21036 019c 9B1A     		subs	r3, r3, r2
 21037 019e 1B01     		lsls	r3, r3, #4
 21038 01a0 0B44     		add	r3, r3, r1
 21039 01a2 E233     		adds	r3, r3, #226
 21040 01a4 0022     		movs	r2, #0
 21041 01a6 1A70     		strb	r2, [r3]
3170:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 21042              		.loc 1 3170 0
 21043 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21044 01aa 4D49     		ldr	r1, .L873
 21045 01ac 1346     		mov	r3, r2
 21046 01ae DB00     		lsls	r3, r3, #3
 21047 01b0 9B1A     		subs	r3, r3, r2
 21048 01b2 1B01     		lsls	r3, r3, #4
 21049 01b4 0B44     		add	r3, r3, r1
 21050 01b6 03F58773 		add	r3, r3, #270
 21051 01ba 0022     		movs	r2, #0
 21052 01bc 1A70     		strb	r2, [r3]
3171:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 21053              		.loc 1 3171 0
 21054 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21055 01c0 4749     		ldr	r1, .L873
 21056 01c2 1346     		mov	r3, r2
 21057 01c4 DB00     		lsls	r3, r3, #3
 21058 01c6 9B1A     		subs	r3, r3, r2
 21059 01c8 1B01     		lsls	r3, r3, #4
 21060 01ca 0B44     		add	r3, r3, r1
 21061 01cc 03F20F13 		addw	r3, r3, #271
 21062 01d0 0022     		movs	r2, #0
 21063 01d2 1A70     		strb	r2, [r3]
3172:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 469


 21064              		.loc 1 3172 0
 21065 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21066 01d6 4249     		ldr	r1, .L873
 21067 01d8 1346     		mov	r3, r2
 21068 01da DB00     		lsls	r3, r3, #3
 21069 01dc 9B1A     		subs	r3, r3, r2
 21070 01de 1B01     		lsls	r3, r3, #4
 21071 01e0 0B44     		add	r3, r3, r1
 21072 01e2 F033     		adds	r3, r3, #240
 21073 01e4 0022     		movs	r2, #0
 21074 01e6 1A60     		str	r2, [r3]
3173:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 21075              		.loc 1 3173 0
 21076 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21077 01ea 3D49     		ldr	r1, .L873
 21078 01ec 1346     		mov	r3, r2
 21079 01ee DB00     		lsls	r3, r3, #3
 21080 01f0 9B1A     		subs	r3, r3, r2
 21081 01f2 1B01     		lsls	r3, r3, #4
 21082 01f4 0B44     		add	r3, r3, r1
 21083 01f6 EC33     		adds	r3, r3, #236
 21084 01f8 0022     		movs	r2, #0
 21085 01fa 1A60     		str	r2, [r3]
3174:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21086              		.loc 1 3174 0
 21087 01fc 0023     		movs	r3, #0
 21088 01fe BB71     		strb	r3, [r7, #6]
 21089 0200 10E0     		b	.L852
 21090              	.L853:
3175:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 21091              		.loc 1 3175 0 discriminator 3
 21092 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21093 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21094 0206 3648     		ldr	r0, .L873
 21095 0208 1346     		mov	r3, r2
 21096 020a DB00     		lsls	r3, r3, #3
 21097 020c 9B1A     		subs	r3, r3, r2
 21098 020e 9B00     		lsls	r3, r3, #2
 21099 0210 0B44     		add	r3, r3, r1
 21100 0212 3C33     		adds	r3, r3, #60
 21101 0214 9B00     		lsls	r3, r3, #2
 21102 0216 0344     		add	r3, r3, r0
 21103 0218 4FF00002 		mov	r2, #0
 21104 021c 5A60     		str	r2, [r3, #4]	@ float
3174:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21105              		.loc 1 3174 0 discriminator 3
 21106 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21107 0220 0133     		adds	r3, r3, #1
 21108 0222 BB71     		strb	r3, [r7, #6]
 21109              	.L852:
3174:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21110              		.loc 1 3174 0 is_stmt 0 discriminator 1
 21111 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21112 0226 052B     		cmp	r3, #5
 21113 0228 EBD9     		bls	.L853
3176:..\src/command_processing.c ****         }
3177:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 470


 21114              		.loc 1 3177 0 is_stmt 1 discriminator 2
 21115 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21116 022c 2C49     		ldr	r1, .L873
 21117 022e 1346     		mov	r3, r2
 21118 0230 DB00     		lsls	r3, r3, #3
 21119 0232 9B1A     		subs	r3, r3, r2
 21120 0234 1B01     		lsls	r3, r3, #4
 21121 0236 0B44     		add	r3, r3, r1
 21122 0238 03F58673 		add	r3, r3, #268
 21123 023c 40F2DC52 		movw	r2, #1500
 21124 0240 1A80     		strh	r2, [r3]	@ movhi
3178:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 21125              		.loc 1 3178 0 discriminator 2
 21126 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21127 0244 2649     		ldr	r1, .L873
 21128 0246 1346     		mov	r3, r2
 21129 0248 DB00     		lsls	r3, r3, #3
 21130 024a 9B1A     		subs	r3, r3, r2
 21131 024c 1B01     		lsls	r3, r3, #4
 21132 024e 0B44     		add	r3, r3, r1
 21133 0250 03F58873 		add	r3, r3, #272
 21134 0254 FA79     		ldrb	r2, [r7, #7]
 21135 0256 1A70     		strb	r2, [r3]
3179:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 21136              		.loc 1 3179 0 discriminator 2
 21137 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21138 025a 2149     		ldr	r1, .L873
 21139 025c 1346     		mov	r3, r2
 21140 025e DB00     		lsls	r3, r3, #3
 21141 0260 9B1A     		subs	r3, r3, r2
 21142 0262 1B01     		lsls	r3, r3, #4
 21143 0264 0B44     		add	r3, r3, r1
 21144 0266 E333     		adds	r3, r3, #227
 21145 0268 0122     		movs	r2, #1
 21146 026a 1A70     		strb	r2, [r3]
3180:..\src/command_processing.c ****         
3181:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 21147              		.loc 1 3181 0 discriminator 2
 21148 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21149 026e 1C49     		ldr	r1, .L873
 21150 0270 1346     		mov	r3, r2
 21151 0272 DB00     		lsls	r3, r3, #3
 21152 0274 9B1A     		subs	r3, r3, r2
 21153 0276 1B01     		lsls	r3, r3, #4
 21154 0278 0B44     		add	r3, r3, r1
 21155 027a 03F21113 		addw	r3, r3, #273
 21156 027e 0122     		movs	r2, #1
 21157 0280 1A70     		strb	r2, [r3]
3182:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 21158              		.loc 1 3182 0 discriminator 2
 21159 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21160 0284 1649     		ldr	r1, .L873
 21161 0286 1346     		mov	r3, r2
 21162 0288 DB00     		lsls	r3, r3, #3
 21163 028a 9B1A     		subs	r3, r3, r2
 21164 028c 1B01     		lsls	r3, r3, #4
 21165 028e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 471


 21166 0290 03F58973 		add	r3, r3, #274
 21167 0294 0022     		movs	r2, #0
 21168 0296 1A70     		strb	r2, [r3]
3152:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21169              		.loc 1 3152 0 discriminator 2
 21170 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21171 029a 0133     		adds	r3, r3, #1
 21172 029c FB71     		strb	r3, [r7, #7]
 21173              	.L851:
3152:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21174              		.loc 1 3152 0 is_stmt 0 discriminator 1
 21175 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21176 02a0 012B     		cmp	r3, #1
 21177 02a2 7FF6E6AE 		bls	.L854
3183:..\src/command_processing.c ****     }
3184:..\src/command_processing.c ****     
3185:..\src/command_processing.c ****     // ENC STRUCT
3186:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 21178              		.loc 1 3186 0 is_stmt 1
 21179 02a6 0023     		movs	r3, #0
 21180 02a8 FB71     		strb	r3, [r7, #7]
 21181 02aa 98E0     		b	.L855
 21182              	.L862:
3187:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21183              		.loc 1 3187 0
 21184 02ac 0023     		movs	r3, #0
 21185 02ae BB71     		strb	r3, [r7, #6]
 21186 02b0 0FE0     		b	.L856
 21187              	.L857:
3188:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 21188              		.loc 1 3188 0 discriminator 3
 21189 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21190 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21191 02b6 0A48     		ldr	r0, .L873
 21192 02b8 1346     		mov	r3, r2
 21193 02ba 5B00     		lsls	r3, r3, #1
 21194 02bc 1344     		add	r3, r3, r2
 21195 02be 1B01     		lsls	r3, r3, #4
 21196 02c0 0344     		add	r3, r3, r0
 21197 02c2 0B44     		add	r3, r3, r1
 21198 02c4 03F5C873 		add	r3, r3, #400
 21199 02c8 0022     		movs	r2, #0
 21200 02ca 1A70     		strb	r2, [r3]
3187:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21201              		.loc 1 3187 0 discriminator 3
 21202 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21203 02ce 0133     		adds	r3, r3, #1
 21204 02d0 BB71     		strb	r3, [r7, #6]
 21205              	.L856:
3187:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21206              		.loc 1 3187 0 is_stmt 0 discriminator 1
 21207 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21208 02d4 042B     		cmp	r3, #4
 21209 02d6 ECD9     		bls	.L857
3189:..\src/command_processing.c ****         }
3190:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21210              		.loc 1 3190 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 472


 21211 02d8 0023     		movs	r3, #0
 21212 02da BB71     		strb	r3, [r7, #6]
 21213 02dc 2CE0     		b	.L858
 21214              	.L874:
 21215 02de 00BF     		.align	2
 21216              	.L873:
 21217 02e0 00000000 		.word	g_mem
 21218              	.L859:
3191:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21219              		.loc 1 3191 0 discriminator 3
 21220 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21221 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21222 02e8 CA48     		ldr	r0, .L875
 21223 02ea 1346     		mov	r3, r2
 21224 02ec 5B00     		lsls	r3, r3, #1
 21225 02ee 1344     		add	r3, r3, r2
 21226 02f0 1B01     		lsls	r3, r3, #4
 21227 02f2 0344     		add	r3, r3, r0
 21228 02f4 0B44     		add	r3, r3, r1
 21229 02f6 03F29513 		addw	r3, r3, #405
 21230 02fa 0322     		movs	r2, #3
 21231 02fc 1A70     		strb	r2, [r3]
3192:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 21232              		.loc 1 3192 0 discriminator 3
 21233 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21234 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21235 0302 C448     		ldr	r0, .L875
 21236 0304 1346     		mov	r3, r2
 21237 0306 5B00     		lsls	r3, r3, #1
 21238 0308 1344     		add	r3, r3, r2
 21239 030a 9B00     		lsls	r3, r3, #2
 21240 030c 0B44     		add	r3, r3, r1
 21241 030e 6833     		adds	r3, r3, #104
 21242 0310 9B00     		lsls	r3, r3, #2
 21243 0312 0344     		add	r3, r3, r0
 21244 0314 4FF07E52 		mov	r2, #1065353216
 21245 0318 5A60     		str	r2, [r3, #4]	@ float
3193:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 21246              		.loc 1 3193 0 discriminator 3
 21247 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21248 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21249 031e BD48     		ldr	r0, .L875
 21250 0320 1346     		mov	r3, r2
 21251 0322 5B00     		lsls	r3, r3, #1
 21252 0324 1344     		add	r3, r3, r2
 21253 0326 9B00     		lsls	r3, r3, #2
 21254 0328 0B44     		add	r3, r3, r1
 21255 032a 6633     		adds	r3, r3, #102
 21256 032c 0022     		movs	r2, #0
 21257 032e 40F82320 		str	r2, [r0, r3, lsl #2]
3190:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21258              		.loc 1 3190 0 discriminator 3
 21259 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21260 0334 0133     		adds	r3, r3, #1
 21261 0336 BB71     		strb	r3, [r7, #6]
 21262              	.L858:
3190:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 473


 21263              		.loc 1 3190 0 is_stmt 0 discriminator 1
 21264 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21265 033a 022B     		cmp	r3, #2
 21266 033c D2D9     		bls	.L859
3194:..\src/command_processing.c ****         }
3195:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 21267              		.loc 1 3195 0 is_stmt 1
 21268 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21269 0340 B449     		ldr	r1, .L875
 21270 0342 1346     		mov	r3, r2
 21271 0344 5B00     		lsls	r3, r3, #1
 21272 0346 1344     		add	r3, r3, r2
 21273 0348 1B01     		lsls	r3, r3, #4
 21274 034a 0B44     		add	r3, r3, r1
 21275 034c 03F5D873 		add	r3, r3, #432
 21276 0350 0022     		movs	r2, #0
 21277 0352 1A70     		strb	r2, [r3]
3196:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 21278              		.loc 1 3196 0
 21279 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21280 0356 AF49     		ldr	r1, .L875
 21281 0358 1346     		mov	r3, r2
 21282 035a 5B00     		lsls	r3, r3, #1
 21283 035c 1344     		add	r3, r3, r2
 21284 035e 1B01     		lsls	r3, r3, #4
 21285 0360 0B44     		add	r3, r3, r1
 21286 0362 03F5DA73 		add	r3, r3, #436
 21287 0366 1622     		movs	r2, #22
 21288 0368 1A70     		strb	r2, [r3]
3197:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21289              		.loc 1 3197 0
 21290 036a 0023     		movs	r3, #0
 21291 036c BB71     		strb	r3, [r7, #6]
 21292 036e 0FE0     		b	.L860
 21293              	.L861:
3198:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 21294              		.loc 1 3198 0 discriminator 3
 21295 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21296 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21297 0374 A748     		ldr	r0, .L875
 21298 0376 1346     		mov	r3, r2
 21299 0378 5B00     		lsls	r3, r3, #1
 21300 037a 1344     		add	r3, r3, r2
 21301 037c 1B01     		lsls	r3, r3, #4
 21302 037e 0344     		add	r3, r3, r0
 21303 0380 0B44     		add	r3, r3, r1
 21304 0382 03F2B113 		addw	r3, r3, #433
 21305 0386 BA79     		ldrb	r2, [r7, #6]
 21306 0388 1A70     		strb	r2, [r3]
3197:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21307              		.loc 1 3197 0 discriminator 3
 21308 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21309 038c 0133     		adds	r3, r3, #1
 21310 038e BB71     		strb	r3, [r7, #6]
 21311              	.L860:
3197:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21312              		.loc 1 3197 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 474


 21313 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21314 0392 022B     		cmp	r3, #2
 21315 0394 ECD9     		bls	.L861
3199:..\src/command_processing.c ****         }
3200:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 21316              		.loc 1 3200 0 is_stmt 1 discriminator 2
 21317 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21318 0398 9E49     		ldr	r1, .L875
 21319 039a 1346     		mov	r3, r2
 21320 039c 5B00     		lsls	r3, r3, #1
 21321 039e 1344     		add	r3, r3, r2
 21322 03a0 1B01     		lsls	r3, r3, #4
 21323 03a2 0B44     		add	r3, r3, r1
 21324 03a4 03F2B513 		addw	r3, r3, #437
 21325 03a8 0F22     		movs	r2, #15
 21326 03aa 1A70     		strb	r2, [r3]
3201:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 21327              		.loc 1 3201 0 discriminator 2
 21328 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21329 03ae 9949     		ldr	r1, .L875
 21330 03b0 1346     		mov	r3, r2
 21331 03b2 5B00     		lsls	r3, r3, #1
 21332 03b4 1344     		add	r3, r3, r2
 21333 03b6 1B01     		lsls	r3, r3, #4
 21334 03b8 0B44     		add	r3, r3, r1
 21335 03ba 03F5DB73 		add	r3, r3, #438
 21336 03be 0E22     		movs	r2, #14
 21337 03c0 1A70     		strb	r2, [r3]
3202:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 21338              		.loc 1 3202 0 discriminator 2
 21339 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21340 03c4 9349     		ldr	r1, .L875
 21341 03c6 1346     		mov	r3, r2
 21342 03c8 5B00     		lsls	r3, r3, #1
 21343 03ca 1344     		add	r3, r3, r2
 21344 03cc 1B01     		lsls	r3, r3, #4
 21345 03ce 0B44     		add	r3, r3, r1
 21346 03d0 03F2B713 		addw	r3, r3, #439
 21347 03d4 0122     		movs	r2, #1
 21348 03d6 1A70     		strb	r2, [r3]
3186:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21349              		.loc 1 3186 0 discriminator 2
 21350 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21351 03da 0133     		adds	r3, r3, #1
 21352 03dc FB71     		strb	r3, [r7, #7]
 21353              	.L855:
3186:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21354              		.loc 1 3186 0 is_stmt 0 discriminator 1
 21355 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21356 03e0 012B     		cmp	r3, #1
 21357 03e2 7FF663AF 		bls	.L862
3203:..\src/command_processing.c ****     }
3204:..\src/command_processing.c ****     
3205:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 21358              		.loc 1 3205 0 is_stmt 1
 21359 03e6 0023     		movs	r3, #0
 21360 03e8 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 475


 21361 03ea 2EE0     		b	.L863
 21362              	.L864:
3206:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21363              		.loc 1 3206 0 discriminator 3
 21364 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21365 03ee 8949     		ldr	r1, .L875
 21366 03f0 1346     		mov	r3, r2
 21367 03f2 DB00     		lsls	r3, r3, #3
 21368 03f4 9B1A     		subs	r3, r3, r2
 21369 03f6 1B01     		lsls	r3, r3, #4
 21370 03f8 0B44     		add	r3, r3, r1
 21371 03fa E433     		adds	r3, r3, #228
 21372 03fc 0022     		movs	r2, #0
 21373 03fe 1A60     		str	r2, [r3]
3207:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 21374              		.loc 1 3207 0 discriminator 3
 21375 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21376 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 21377 0404 8348     		ldr	r0, .L875
 21378 0406 0B46     		mov	r3, r1
 21379 0408 DB00     		lsls	r3, r3, #3
 21380 040a 5B1A     		subs	r3, r3, r1
 21381 040c 1B01     		lsls	r3, r3, #4
 21382 040e 0344     		add	r3, r3, r0
 21383 0410 03F58873 		add	r3, r3, #272
 21384 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21385 0416 1846     		mov	r0, r3
 21386 0418 7E49     		ldr	r1, .L875
 21387 041a 0346     		mov	r3, r0
 21388 041c 5B00     		lsls	r3, r3, #1
 21389 041e 0344     		add	r3, r3, r0
 21390 0420 1B01     		lsls	r3, r3, #4
 21391 0422 0B44     		add	r3, r3, r1
 21392 0424 03F29513 		addw	r3, r3, #405
 21393 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21394 042a 1946     		mov	r1, r3
 21395 042c 44F63823 		movw	r3, #19000
 21396 0430 03FA01F1 		lsl	r1, r3, r1
 21397 0434 7748     		ldr	r0, .L875
 21398 0436 1346     		mov	r3, r2
 21399 0438 DB00     		lsls	r3, r3, #3
 21400 043a 9B1A     		subs	r3, r3, r2
 21401 043c 1B01     		lsls	r3, r3, #4
 21402 043e 0344     		add	r3, r3, r0
 21403 0440 E833     		adds	r3, r3, #232
 21404 0442 1960     		str	r1, [r3]
3205:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21405              		.loc 1 3205 0 discriminator 3
 21406 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21407 0446 0133     		adds	r3, r3, #1
 21408 0448 FB71     		strb	r3, [r7, #7]
 21409              	.L863:
3205:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21410              		.loc 1 3205 0 is_stmt 0 discriminator 1
 21411 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21412 044c 012B     		cmp	r3, #1
 21413 044e CDD9     		bls	.L864
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 476


3208:..\src/command_processing.c ****     }
3209:..\src/command_processing.c ****     
3210:..\src/command_processing.c ****     // EMG STRUCT     
3211:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 21414              		.loc 1 3211 0 is_stmt 1
 21415 0450 704B     		ldr	r3, .L875
 21416 0452 C822     		movs	r2, #200
 21417 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3212:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 21418              		.loc 1 3212 0
 21419 0458 6E4B     		ldr	r3, .L875
 21420 045a C822     		movs	r2, #200
 21421 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3213:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 21422              		.loc 1 3213 0
 21423 0460 6C4B     		ldr	r3, .L875
 21424 0462 4FF48062 		mov	r2, #1024
 21425 0466 C3F8F421 		str	r2, [r3, #500]
3214:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 21426              		.loc 1 3214 0
 21427 046a 6A4B     		ldr	r3, .L875
 21428 046c 4FF48062 		mov	r2, #1024
 21429 0470 C3F8F821 		str	r2, [r3, #504]
3215:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 21430              		.loc 1 3215 0
 21431 0474 674B     		ldr	r3, .L875
 21432 0476 6422     		movs	r2, #100
 21433 0478 83F8FC21 		strb	r2, [r3, #508]
3216:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 21434              		.loc 1 3216 0
 21435 047c 654B     		ldr	r3, .L875
 21436 047e 6422     		movs	r2, #100
 21437 0480 83F8FD21 		strb	r2, [r3, #509]
3217:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 21438              		.loc 1 3217 0
 21439 0484 634B     		ldr	r3, .L875
 21440 0486 0022     		movs	r2, #0
 21441 0488 83F8FE21 		strb	r2, [r3, #510]
3218:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 21442              		.loc 1 3218 0
 21443 048c 614B     		ldr	r3, .L875
 21444 048e 0022     		movs	r2, #0
 21445 0490 83F8FF21 		strb	r2, [r3, #511]
3219:..\src/command_processing.c **** 
3220:..\src/command_processing.c ****     // IMU STRUCT
3221:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 21446              		.loc 1 3221 0
 21447 0494 5F4B     		ldr	r3, .L875
 21448 0496 0022     		movs	r2, #0
 21449 0498 83F80022 		strb	r2, [r3, #512]
3222:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 21450              		.loc 1 3222 0
 21451 049c 5D4B     		ldr	r3, .L875
 21452 049e 0022     		movs	r2, #0
 21453 04a0 83F80122 		strb	r2, [r3, #513]
3223:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 21454              		.loc 1 3223 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 477


 21455 04a4 0023     		movs	r3, #0
 21456 04a6 FB71     		strb	r3, [r7, #7]
 21457 04a8 34E0     		b	.L865
 21458              	.L866:
3224:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21459              		.loc 1 3224 0 discriminator 3
 21460 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21461 04ac 5949     		ldr	r1, .L875
 21462 04ae 1346     		mov	r3, r2
 21463 04b0 9B00     		lsls	r3, r3, #2
 21464 04b2 1344     		add	r3, r3, r2
 21465 04b4 0B44     		add	r3, r3, r1
 21466 04b6 03F20223 		addw	r3, r3, #514
 21467 04ba 0122     		movs	r2, #1
 21468 04bc 1A70     		strb	r2, [r3]
3225:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 21469              		.loc 1 3225 0 discriminator 3
 21470 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21471 04c0 5449     		ldr	r1, .L875
 21472 04c2 1346     		mov	r3, r2
 21473 04c4 9B00     		lsls	r3, r3, #2
 21474 04c6 1344     		add	r3, r3, r2
 21475 04c8 0B44     		add	r3, r3, r1
 21476 04ca 03F20323 		addw	r3, r3, #515
 21477 04ce 0122     		movs	r2, #1
 21478 04d0 1A70     		strb	r2, [r3]
3226:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 21479              		.loc 1 3226 0 discriminator 3
 21480 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21481 04d4 4F49     		ldr	r1, .L875
 21482 04d6 1346     		mov	r3, r2
 21483 04d8 9B00     		lsls	r3, r3, #2
 21484 04da 1344     		add	r3, r3, r2
 21485 04dc 0B44     		add	r3, r3, r1
 21486 04de 03F50173 		add	r3, r3, #516
 21487 04e2 0022     		movs	r2, #0
 21488 04e4 1A70     		strb	r2, [r3]
3227:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 21489              		.loc 1 3227 0 discriminator 3
 21490 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21491 04e8 4A49     		ldr	r1, .L875
 21492 04ea 1346     		mov	r3, r2
 21493 04ec 9B00     		lsls	r3, r3, #2
 21494 04ee 1344     		add	r3, r3, r2
 21495 04f0 0B44     		add	r3, r3, r1
 21496 04f2 03F20523 		addw	r3, r3, #517
 21497 04f6 0022     		movs	r2, #0
 21498 04f8 1A70     		strb	r2, [r3]
3228:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 21499              		.loc 1 3228 0 discriminator 3
 21500 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21501 04fc 4549     		ldr	r1, .L875
 21502 04fe 1346     		mov	r3, r2
 21503 0500 9B00     		lsls	r3, r3, #2
 21504 0502 1344     		add	r3, r3, r2
 21505 0504 0B44     		add	r3, r3, r1
 21506 0506 03F20623 		addw	r3, r3, #518
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 478


 21507 050a 0022     		movs	r2, #0
 21508 050c 1A70     		strb	r2, [r3]
3223:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21509              		.loc 1 3223 0 discriminator 3
 21510 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21511 0510 0133     		adds	r3, r3, #1
 21512 0512 FB71     		strb	r3, [r7, #7]
 21513              	.L865:
3223:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21514              		.loc 1 3223 0 is_stmt 0 discriminator 1
 21515 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21516 0516 042B     		cmp	r3, #4
 21517 0518 C7D9     		bls	.L866
3229:..\src/command_processing.c ****     }
3230:..\src/command_processing.c ****      
3231:..\src/command_processing.c ****     // EXP STRUCT
3232:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 21518              		.loc 1 3232 0 is_stmt 1
 21519 051a 3E4B     		ldr	r3, .L875
 21520 051c 0022     		movs	r2, #0
 21521 051e 83F82622 		strb	r2, [r3, #550]
3233:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 21522              		.loc 1 3233 0
 21523 0522 3C4B     		ldr	r3, .L875
 21524 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21525 0528 1233     		adds	r3, r3, #18
 21526 052a 5B01     		lsls	r3, r3, #5
 21527 052c 394A     		ldr	r2, .L875
 21528 052e 1344     		add	r3, r3, r2
 21529 0530 394A     		ldr	r2, .L875+4
 21530 0532 1068     		ldr	r0, [r2]	@ unaligned
 21531 0534 1860     		str	r0, [r3]	@ unaligned
 21532 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 21533 0538 9279     		ldrb	r2, [r2, #6]
 21534 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 21535 053c 9A71     		strb	r2, [r3, #6]
3234:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 21536              		.loc 1 3234 0
 21537 053e 354B     		ldr	r3, .L875
 21538 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 21539 0544 012B     		cmp	r3, #1
 21540 0546 13D1     		bne	.L867
3235:..\src/command_processing.c ****         // Set date of maintenance from RTC
3236:..\src/command_processing.c ****         store_RTC_current_time();
 21541              		.loc 1 3236 0
 21542 0548 FFF7FEFF 		bl	store_RTC_current_time
3237:..\src/command_processing.c ****         
3238:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 21543              		.loc 1 3238 0
 21544 054c 314B     		ldr	r3, .L875
 21545 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 21546 0552 304B     		ldr	r3, .L875
 21547 0554 83F8A420 		strb	r2, [r3, #164]
3239:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 21548              		.loc 1 3239 0
 21549 0558 2E4B     		ldr	r3, .L875
 21550 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 479


 21551 055e 2D4B     		ldr	r3, .L875
 21552 0560 83F8A520 		strb	r2, [r3, #165]
3240:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 21553              		.loc 1 3240 0
 21554 0564 2B4B     		ldr	r3, .L875
 21555 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 21556 056a 2A4B     		ldr	r3, .L875
 21557 056c 83F8A620 		strb	r2, [r3, #166]
 21558              	.L867:
3241:..\src/command_processing.c ****     }
3242:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 21559              		.loc 1 3242 0
 21560 0570 284B     		ldr	r3, .L875
 21561 0572 0022     		movs	r2, #0
 21562 0574 83F82722 		strb	r2, [r3, #551]
3243:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21563              		.loc 1 3243 0
 21564 0578 0023     		movs	r3, #0
 21565 057a FB71     		strb	r3, [r7, #7]
 21566 057c 08E0     		b	.L868
 21567              	.L869:
3244:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 21568              		.loc 1 3244 0 discriminator 3
 21569 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21570 0580 244A     		ldr	r2, .L875
 21571 0582 1344     		add	r3, r3, r2
 21572 0584 0022     		movs	r2, #0
 21573 0586 83F82822 		strb	r2, [r3, #552]
3243:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21574              		.loc 1 3243 0 discriminator 3
 21575 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21576 058c 0133     		adds	r3, r3, #1
 21577 058e FB71     		strb	r3, [r7, #7]
 21578              	.L868:
3243:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21579              		.loc 1 3243 0 is_stmt 0 discriminator 1
 21580 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21581 0592 0B2B     		cmp	r3, #11
 21582 0594 F3D9     		bls	.L869
3245:..\src/command_processing.c ****     }
3246:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3247:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 21583              		.loc 1 3247 0 is_stmt 1
 21584 0596 1F4B     		ldr	r3, .L875
 21585 0598 0122     		movs	r2, #1
 21586 059a 83F82A22 		strb	r2, [r3, #554]
3248:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 21587              		.loc 1 3248 0
 21588 059e 1D4B     		ldr	r3, .L875
 21589 05a0 0122     		movs	r2, #1
 21590 05a2 83F82B22 		strb	r2, [r3, #555]
3249:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 21591              		.loc 1 3249 0
 21592 05a6 1B4B     		ldr	r3, .L875
 21593 05a8 0022     		movs	r2, #0
 21594 05aa 83F83422 		strb	r2, [r3, #564]
3250:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 480


3251:..\src/command_processing.c ****     // WR STRUCT (default in generic fw)
3252:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 21595              		.loc 1 3252 0
 21596 05ae 194B     		ldr	r3, .L875
 21597 05b0 0022     		movs	r2, #0
 21598 05b2 83F8E022 		strb	r2, [r3, #736]
3253:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 21599              		.loc 1 3253 0
 21600 05b6 174B     		ldr	r3, .L875
 21601 05b8 4FF44872 		mov	r2, #800
 21602 05bc A3F8E222 		strh	r2, [r3, #738]	@ movhi
3254:..\src/command_processing.c **** 
3255:..\src/command_processing.c **** #ifdef SOFTHAND_FW
3256:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
3257:..\src/command_processing.c ****     memInit_SoftHandPro();
 21603              		.loc 1 3257 0
 21604 05c0 FFF7FEFF 		bl	memInit_SoftHandPro
3258:..\src/command_processing.c **** #endif 
3259:..\src/command_processing.c **** 
3260:..\src/command_processing.c **** #ifdef MASTER_FW
3261:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3262:..\src/command_processing.c ****     memInit_Master();
3263:..\src/command_processing.c **** #endif 
3264:..\src/command_processing.c **** 
3265:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3266:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3267:..\src/command_processing.c ****     memInit_AirChambersFb();
3268:..\src/command_processing.c **** #endif 
3269:..\src/command_processing.c **** 
3270:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3271:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
3272:..\src/command_processing.c ****     memInit_OtbkActWristMs();
3273:..\src/command_processing.c **** #endif
3274:..\src/command_processing.c **** 
3275:..\src/command_processing.c ****     // JOYSTICK STRUCT
3276:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 21605              		.loc 1 3276 0
 21606 05c4 134B     		ldr	r3, .L875
 21607 05c6 9622     		movs	r2, #150
 21608 05c8 A3F8B022 		strh	r2, [r3, #688]	@ movhi
3277:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 21609              		.loc 1 3277 0
 21610 05cc 114B     		ldr	r3, .L875
 21611 05ce 6422     		movs	r2, #100
 21612 05d0 A3F8B222 		strh	r2, [r3, #690]	@ movhi
3278:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 21613              		.loc 1 3278 0
 21614 05d4 0F4B     		ldr	r3, .L875
 21615 05d6 4FF48062 		mov	r2, #1024
 21616 05da A3F8B422 		strh	r2, [r3, #692]	@ movhi
3279:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 21617              		.loc 1 3279 0
 21618 05de 0D4B     		ldr	r3, .L875
 21619 05e0 4FF48062 		mov	r2, #1024
 21620 05e4 A3F8B622 		strh	r2, [r3, #694]	@ movhi
3280:..\src/command_processing.c **** 
3281:..\src/command_processing.c ****     // Default generic user_id
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 481


3282:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 21621              		.loc 1 3282 0
 21622 05e8 0A4B     		ldr	r3, .L875
 21623 05ea 0022     		movs	r2, #0
 21624 05ec 83F8AB20 		strb	r2, [r3, #171]
3283:..\src/command_processing.c **** 
3284:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3285:..\src/command_processing.c ****     g_mem.flag = TRUE;
 21625              		.loc 1 3285 0
 21626 05f0 084B     		ldr	r3, .L875
 21627 05f2 0122     		movs	r2, #1
 21628 05f4 1A70     		strb	r2, [r3]
3286:..\src/command_processing.c ****     
3287:..\src/command_processing.c ****     //write that configuration to EEPROM
3288:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 21629              		.loc 1 3288 0
 21630 05f6 0020     		movs	r0, #0
 21631 05f8 FFF7FEFF 		bl	memStore
 21632 05fc 0346     		mov	r3, r0
 21633 05fe 002B     		cmp	r3, #0
 21634 0600 0CD0     		beq	.L870
 21635              		.loc 1 3288 0 is_stmt 0 discriminator 1
 21636 0602 3220     		movs	r0, #50
 21637 0604 FFF7FEFF 		bl	memStore
 21638 0608 0346     		mov	r3, r0
 21639 060a 002B     		cmp	r3, #0
 21640 060c 06D0     		beq	.L870
 21641              		.loc 1 3288 0 discriminator 3
 21642 060e 0123     		movs	r3, #1
 21643 0610 05E0     		b	.L871
 21644              	.L876:
 21645 0612 00BF     		.align	2
 21646              	.L875:
 21647 0614 00000000 		.word	g_mem
 21648 0618 3C1F0000 		.word	.LC295
 21649              	.L870:
 21650              		.loc 1 3288 0 discriminator 4
 21651 061c 0023     		movs	r3, #0
 21652              	.L871:
 21653              		.loc 1 3288 0 discriminator 6
 21654 061e DBB2     		uxtb	r3, r3
3289:..\src/command_processing.c **** }
 21655              		.loc 1 3289 0 is_stmt 1 discriminator 6
 21656 0620 1846     		mov	r0, r3
 21657 0622 0837     		adds	r7, r7, #8
 21658              		.cfi_def_cfa_offset 8
 21659 0624 BD46     		mov	sp, r7
 21660              		.cfi_def_cfa_register 13
 21661              		@ sp needed
 21662 0626 80BD     		pop	{r7, pc}
 21663              		.cfi_endproc
 21664              	.LFE89:
 21665              		.size	memInit, .-memInit
 21666              		.section	.rodata
 21667 1f43 00       		.align	2
 21668              	.LC296:
 21669 1f44 55535230 		.ascii	"USR001\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 482


 21669      303100
 21670              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 21671              		.align	2
 21672              		.global	memInit_SoftHandPro
 21673              		.thumb
 21674              		.thumb_func
 21675              		.type	memInit_SoftHandPro, %function
 21676              	memInit_SoftHandPro:
 21677              	.LFB90:
3290:..\src/command_processing.c **** 
3291:..\src/command_processing.c **** //==============================================================================
3292:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3293:..\src/command_processing.c **** //==============================================================================
3294:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3295:..\src/command_processing.c **** {
 21678              		.loc 1 3295 0
 21679              		.cfi_startproc
 21680              		@ args = 0, pretend = 0, frame = 8
 21681              		@ frame_needed = 1, uses_anonymous_args = 0
 21682              		@ link register save eliminated.
 21683 0000 80B4     		push	{r7}
 21684              		.cfi_def_cfa_offset 4
 21685              		.cfi_offset 7, -4
 21686 0002 83B0     		sub	sp, sp, #12
 21687              		.cfi_def_cfa_offset 16
 21688 0004 00AF     		add	r7, sp, #0
 21689              		.cfi_def_cfa_register 7
3296:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 21690              		.loc 1 3296 0
 21691 0006 0023     		movs	r3, #0
 21692 0008 FB70     		strb	r3, [r7, #3]
3297:..\src/command_processing.c ****     
3298:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3299:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 21693              		.loc 1 3299 0
 21694 000a 8B4B     		ldr	r3, .L880
 21695 000c 0122     		movs	r2, #1
 21696 000e 83F8A720 		strb	r2, [r3, #167]
3300:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 21697              		.loc 1 3300 0
 21698 0012 894B     		ldr	r3, .L880
 21699 0014 0022     		movs	r2, #0
 21700 0016 83F8AC20 		strb	r2, [r3, #172]
3301:..\src/command_processing.c ****     
3302:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 21701              		.loc 1 3302 0
 21702 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21703 001c 8649     		ldr	r1, .L880
 21704 001e 1346     		mov	r3, r2
 21705 0020 DB00     		lsls	r3, r3, #3
 21706 0022 9B1A     		subs	r3, r3, r2
 21707 0024 1B01     		lsls	r3, r3, #4
 21708 0026 0B44     		add	r3, r3, r1
 21709 0028 E033     		adds	r3, r3, #224
 21710 002a 0122     		movs	r2, #1
 21711 002c 1A70     		strb	r2, [r3]
3303:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 483


 21712              		.loc 1 3303 0
 21713 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21714 0030 8149     		ldr	r1, .L880
 21715 0032 1346     		mov	r3, r2
 21716 0034 DB00     		lsls	r3, r3, #3
 21717 0036 9B1A     		subs	r3, r3, r2
 21718 0038 1B01     		lsls	r3, r3, #4
 21719 003a 0B44     		add	r3, r3, r1
 21720 003c 03F58773 		add	r3, r3, #270
 21721 0040 0022     		movs	r2, #0
 21722 0042 1A70     		strb	r2, [r3]
3304:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 21723              		.loc 1 3304 0
 21724 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21725 0046 7C49     		ldr	r1, .L880
 21726 0048 1346     		mov	r3, r2
 21727 004a DB00     		lsls	r3, r3, #3
 21728 004c 9B1A     		subs	r3, r3, r2
 21729 004e 1B01     		lsls	r3, r3, #4
 21730 0050 0B44     		add	r3, r3, r1
 21731 0052 03F20F13 		addw	r3, r3, #271
 21732 0056 0022     		movs	r2, #0
 21733 0058 1A70     		strb	r2, [r3]
3305:..\src/command_processing.c ****     
3306:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3307:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 21734              		.loc 1 3307 0
 21735 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21736 005c 764B     		ldr	r3, .L880
 21737 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 21738 0062 7549     		ldr	r1, .L880
 21739 0064 1346     		mov	r3, r2
 21740 0066 DB00     		lsls	r3, r3, #3
 21741 0068 9B1A     		subs	r3, r3, r2
 21742 006a 1B01     		lsls	r3, r3, #4
 21743 006c 0B44     		add	r3, r3, r1
 21744 006e 03F58873 		add	r3, r3, #272
 21745 0072 0246     		mov	r2, r0
 21746 0074 1A70     		strb	r2, [r3]
3308:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 21747              		.loc 1 3308 0
 21748 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21749 0078 6F49     		ldr	r1, .L880
 21750 007a 1346     		mov	r3, r2
 21751 007c DB00     		lsls	r3, r3, #3
 21752 007e 9B1A     		subs	r3, r3, r2
 21753 0080 1B01     		lsls	r3, r3, #4
 21754 0082 0B44     		add	r3, r3, r1
 21755 0084 03F21113 		addw	r3, r3, #273
 21756 0088 0122     		movs	r2, #1
 21757 008a 1A70     		strb	r2, [r3]
3309:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 21758              		.loc 1 3309 0
 21759 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21760 008e 6A49     		ldr	r1, .L880
 21761 0090 1346     		mov	r3, r2
 21762 0092 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 484


 21763 0094 9B1A     		subs	r3, r3, r2
 21764 0096 1B01     		lsls	r3, r3, #4
 21765 0098 0B44     		add	r3, r3, r1
 21766 009a 03F58973 		add	r3, r3, #274
 21767 009e 0122     		movs	r2, #1
 21768 00a0 1A70     		strb	r2, [r3]
3310:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 21769              		.loc 1 3310 0
 21770 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21771 00a4 6449     		ldr	r1, .L880
 21772 00a6 1346     		mov	r3, r2
 21773 00a8 DB00     		lsls	r3, r3, #3
 21774 00aa 9B1A     		subs	r3, r3, r2
 21775 00ac 1B01     		lsls	r3, r3, #4
 21776 00ae 0B44     		add	r3, r3, r1
 21777 00b0 E433     		adds	r3, r3, #228
 21778 00b2 0022     		movs	r2, #0
 21779 00b4 1A60     		str	r2, [r3]
3311:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 21780              		.loc 1 3311 0
 21781 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21782 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 21783 00ba 5F48     		ldr	r0, .L880
 21784 00bc 0B46     		mov	r3, r1
 21785 00be DB00     		lsls	r3, r3, #3
 21786 00c0 5B1A     		subs	r3, r3, r1
 21787 00c2 1B01     		lsls	r3, r3, #4
 21788 00c4 0344     		add	r3, r3, r0
 21789 00c6 03F58873 		add	r3, r3, #272
 21790 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21791 00cc 1846     		mov	r0, r3
 21792 00ce 5A49     		ldr	r1, .L880
 21793 00d0 0346     		mov	r3, r0
 21794 00d2 5B00     		lsls	r3, r3, #1
 21795 00d4 0344     		add	r3, r3, r0
 21796 00d6 1B01     		lsls	r3, r3, #4
 21797 00d8 0B44     		add	r3, r3, r1
 21798 00da 03F29513 		addw	r3, r3, #405
 21799 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21800 00e0 1946     		mov	r1, r3
 21801 00e2 4FF47A53 		mov	r3, #16000
 21802 00e6 03FA01F1 		lsl	r1, r3, r1
 21803 00ea 5348     		ldr	r0, .L880
 21804 00ec 1346     		mov	r3, r2
 21805 00ee DB00     		lsls	r3, r3, #3
 21806 00f0 9B1A     		subs	r3, r3, r2
 21807 00f2 1B01     		lsls	r3, r3, #4
 21808 00f4 0344     		add	r3, r3, r0
 21809 00f6 E833     		adds	r3, r3, #232
 21810 00f8 1960     		str	r1, [r3]
 21811              	.LBB30:
3312:..\src/command_processing.c ****     
3313:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 21812              		.loc 1 3313 0
 21813 00fa 0023     		movs	r3, #0
 21814 00fc 7B60     		str	r3, [r7, #4]
 21815 00fe 2EE0     		b	.L878
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 485


 21816              	.L879:
3314:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3315:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 21817              		.loc 1 3315 0 discriminator 3
 21818 0100 4D49     		ldr	r1, .L880
 21819 0102 7A68     		ldr	r2, [r7, #4]
 21820 0104 1346     		mov	r3, r2
 21821 0106 5B00     		lsls	r3, r3, #1
 21822 0108 1344     		add	r3, r3, r2
 21823 010a 1B01     		lsls	r3, r3, #4
 21824 010c 0B44     		add	r3, r3, r1
 21825 010e 03F5D873 		add	r3, r3, #432
 21826 0112 0122     		movs	r2, #1
 21827 0114 1A70     		strb	r2, [r3]
3316:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 21828              		.loc 1 3316 0 discriminator 3
 21829 0116 4849     		ldr	r1, .L880
 21830 0118 7A68     		ldr	r2, [r7, #4]
 21831 011a 1346     		mov	r3, r2
 21832 011c 5B00     		lsls	r3, r3, #1
 21833 011e 1344     		add	r3, r3, r2
 21834 0120 1B01     		lsls	r3, r3, #4
 21835 0122 0B44     		add	r3, r3, r1
 21836 0124 03F2B513 		addw	r3, r3, #437
 21837 0128 2322     		movs	r2, #35
 21838 012a 1A70     		strb	r2, [r3]
3317:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 21839              		.loc 1 3317 0 discriminator 3
 21840 012c 4249     		ldr	r1, .L880
 21841 012e 7A68     		ldr	r2, [r7, #4]
 21842 0130 1346     		mov	r3, r2
 21843 0132 5B00     		lsls	r3, r3, #1
 21844 0134 1344     		add	r3, r3, r2
 21845 0136 1B01     		lsls	r3, r3, #4
 21846 0138 0B44     		add	r3, r3, r1
 21847 013a 03F5DB73 		add	r3, r3, #438
 21848 013e 0322     		movs	r2, #3
 21849 0140 1A70     		strb	r2, [r3]
3318:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 21850              		.loc 1 3318 0 discriminator 3
 21851 0142 3D49     		ldr	r1, .L880
 21852 0144 7A68     		ldr	r2, [r7, #4]
 21853 0146 1346     		mov	r3, r2
 21854 0148 5B00     		lsls	r3, r3, #1
 21855 014a 1344     		add	r3, r3, r2
 21856 014c 1B01     		lsls	r3, r3, #4
 21857 014e 0B44     		add	r3, r3, r1
 21858 0150 03F2B713 		addw	r3, r3, #439
 21859 0154 FF22     		movs	r2, #255
 21860 0156 1A70     		strb	r2, [r3]
3313:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 21861              		.loc 1 3313 0 discriminator 3
 21862 0158 7B68     		ldr	r3, [r7, #4]
 21863 015a 0133     		adds	r3, r3, #1
 21864 015c 7B60     		str	r3, [r7, #4]
 21865              	.L878:
3313:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 486


 21866              		.loc 1 3313 0 is_stmt 0 discriminator 1
 21867 015e 7B68     		ldr	r3, [r7, #4]
 21868 0160 012B     		cmp	r3, #1
 21869 0162 CDDD     		ble	.L879
 21870              	.LBE30:
3319:..\src/command_processing.c ****     }
3320:..\src/command_processing.c ****     
3321:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 21871              		.loc 1 3321 0 is_stmt 1
 21872 0164 344B     		ldr	r3, .L880
 21873 0166 4FF48062 		mov	r2, #1024
 21874 016a C3F8F421 		str	r2, [r3, #500]
3322:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 21875              		.loc 1 3322 0
 21876 016e 324B     		ldr	r3, .L880
 21877 0170 4FF48062 		mov	r2, #1024
 21878 0174 C3F8F821 		str	r2, [r3, #504]
3323:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 21879              		.loc 1 3323 0
 21880 0178 2F4B     		ldr	r3, .L880
 21881 017a C822     		movs	r2, #200
 21882 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3324:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 21883              		.loc 1 3324 0
 21884 0180 2D4B     		ldr	r3, .L880
 21885 0182 C822     		movs	r2, #200
 21886 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3325:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 21887              		.loc 1 3325 0
 21888 0188 2B4B     		ldr	r3, .L880
 21889 018a 6422     		movs	r2, #100
 21890 018c 83F8FC21 		strb	r2, [r3, #508]
3326:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 21891              		.loc 1 3326 0
 21892 0190 294B     		ldr	r3, .L880
 21893 0192 6422     		movs	r2, #100
 21894 0194 83F8FD21 		strb	r2, [r3, #509]
3327:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 21895              		.loc 1 3327 0
 21896 0198 274B     		ldr	r3, .L880
 21897 019a 0022     		movs	r2, #0
 21898 019c 83F8FE21 		strb	r2, [r3, #510]
3328:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 21899              		.loc 1 3328 0
 21900 01a0 254B     		ldr	r3, .L880
 21901 01a2 0022     		movs	r2, #0
 21902 01a4 83F8FF21 		strb	r2, [r3, #511]
3329:..\src/command_processing.c ****     
3330:..\src/command_processing.c ****     //Initialize rest position parameters  
3331:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 21903              		.loc 1 3331 0
 21904 01a8 234B     		ldr	r3, .L880
 21905 01aa 0022     		movs	r2, #0
 21906 01ac 83F8AC22 		strb	r2, [r3, #684]
3332:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 21907              		.loc 1 3332 0
 21908 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 487


 21909 01b2 2149     		ldr	r1, .L880
 21910 01b4 1346     		mov	r3, r2
 21911 01b6 DB00     		lsls	r3, r3, #3
 21912 01b8 9B1A     		subs	r3, r3, r2
 21913 01ba 1B01     		lsls	r3, r3, #4
 21914 01bc 0B44     		add	r3, r3, r1
 21915 01be 03F58873 		add	r3, r3, #272
 21916 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21917 01c4 1946     		mov	r1, r3
 21918 01c6 1C4A     		ldr	r2, .L880
 21919 01c8 0B46     		mov	r3, r1
 21920 01ca 5B00     		lsls	r3, r3, #1
 21921 01cc 0B44     		add	r3, r3, r1
 21922 01ce 1B01     		lsls	r3, r3, #4
 21923 01d0 1344     		add	r3, r3, r2
 21924 01d2 03F29513 		addw	r3, r3, #405
 21925 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21926 01d8 1A46     		mov	r2, r3
 21927 01da 41F65833 		movw	r3, #7000
 21928 01de 9340     		lsls	r3, r3, r2
 21929 01e0 154A     		ldr	r2, .L880
 21930 01e2 C2F8A032 		str	r3, [r2, #672]
3333:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 21931              		.loc 1 3333 0
 21932 01e6 144B     		ldr	r3, .L880
 21933 01e8 0A22     		movs	r2, #10
 21934 01ea C3F8A422 		str	r2, [r3, #676]
3334:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 21935              		.loc 1 3334 0
 21936 01ee 124B     		ldr	r3, .L880
 21937 01f0 42F21072 		movw	r2, #10000
 21938 01f4 C3F8A822 		str	r2, [r3, #680]
3335:..\src/command_processing.c **** 	
3336:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 21939              		.loc 1 3336 0
 21940 01f8 0F4B     		ldr	r3, .L880
 21941 01fa 0022     		movs	r2, #0
 21942 01fc 83F80022 		strb	r2, [r3, #512]
3337:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 21943              		.loc 1 3337 0
 21944 0200 0D4B     		ldr	r3, .L880
 21945 0202 0022     		movs	r2, #0
 21946 0204 83F82622 		strb	r2, [r3, #550]
3338:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 21947              		.loc 1 3338 0
 21948 0208 0B4B     		ldr	r3, .L880
 21949 020a 0022     		movs	r2, #0
 21950 020c 83F83422 		strb	r2, [r3, #564]
3339:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 21951              		.loc 1 3339 0
 21952 0210 094B     		ldr	r3, .L880
 21953 0212 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21954 0216 1233     		adds	r3, r3, #18
 21955 0218 5B01     		lsls	r3, r3, #5
 21956 021a 074A     		ldr	r2, .L880
 21957 021c 1344     		add	r3, r3, r2
 21958 021e 074A     		ldr	r2, .L880+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 488


 21959 0220 1068     		ldr	r0, [r2]	@ unaligned
 21960 0222 1860     		str	r0, [r3]	@ unaligned
 21961 0224 9188     		ldrh	r1, [r2, #4]	@ unaligned
 21962 0226 9279     		ldrb	r2, [r2, #6]
 21963 0228 9980     		strh	r1, [r3, #4]	@ unaligned
 21964 022a 9A71     		strb	r2, [r3, #6]
3340:..\src/command_processing.c **** }
 21965              		.loc 1 3340 0
 21966 022c 00BF     		nop
 21967 022e 0C37     		adds	r7, r7, #12
 21968              		.cfi_def_cfa_offset 4
 21969 0230 BD46     		mov	sp, r7
 21970              		.cfi_def_cfa_register 13
 21971              		@ sp needed
 21972 0232 80BC     		pop	{r7}
 21973              		.cfi_restore 7
 21974              		.cfi_def_cfa_offset 0
 21975 0234 7047     		bx	lr
 21976              	.L881:
 21977 0236 00BF     		.align	2
 21978              	.L880:
 21979 0238 00000000 		.word	g_mem
 21980 023c 441F0000 		.word	.LC296
 21981              		.cfi_endproc
 21982              	.LFE90:
 21983              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 21984              		.section	.text.memInit_Master,"ax",%progbits
 21985              		.align	2
 21986              		.global	memInit_Master
 21987              		.thumb
 21988              		.thumb_func
 21989              		.type	memInit_Master, %function
 21990              	memInit_Master:
 21991              	.LFB91:
3341:..\src/command_processing.c **** 
3342:..\src/command_processing.c **** //==============================================================================
3343:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3344:..\src/command_processing.c **** //==============================================================================
3345:..\src/command_processing.c **** void memInit_Master(void)
3346:..\src/command_processing.c **** {
 21992              		.loc 1 3346 0
 21993              		.cfi_startproc
 21994              		@ args = 0, pretend = 0, frame = 0
 21995              		@ frame_needed = 1, uses_anonymous_args = 0
 21996              		@ link register save eliminated.
 21997 0000 80B4     		push	{r7}
 21998              		.cfi_def_cfa_offset 4
 21999              		.cfi_offset 7, -4
 22000 0002 00AF     		add	r7, sp, #0
 22001              		.cfi_def_cfa_register 7
3347:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 22002              		.loc 1 3347 0
 22003 0004 074B     		ldr	r3, .L883
 22004 0006 0222     		movs	r2, #2
 22005 0008 83F8A020 		strb	r2, [r3, #160]
3348:..\src/command_processing.c ****     
3349:..\src/command_processing.c ****     // MS STRUCT
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 489


3350:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 22006              		.loc 1 3350 0
 22007 000c 054B     		ldr	r3, .L883
 22008 000e 0122     		movs	r2, #1
 22009 0010 83F8C122 		strb	r2, [r3, #705]
3351:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 22010              		.loc 1 3351 0
 22011 0014 034B     		ldr	r3, .L883
 22012 0016 0022     		movs	r2, #0
 22013 0018 83F8C022 		strb	r2, [r3, #704]
3352:..\src/command_processing.c **** }
 22014              		.loc 1 3352 0
 22015 001c 00BF     		nop
 22016 001e BD46     		mov	sp, r7
 22017              		.cfi_def_cfa_register 13
 22018              		@ sp needed
 22019 0020 80BC     		pop	{r7}
 22020              		.cfi_restore 7
 22021              		.cfi_def_cfa_offset 0
 22022 0022 7047     		bx	lr
 22023              	.L884:
 22024              		.align	2
 22025              	.L883:
 22026 0024 00000000 		.word	g_mem
 22027              		.cfi_endproc
 22028              	.LFE91:
 22029              		.size	memInit_Master, .-memInit_Master
 22030              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 22031              		.align	2
 22032              		.global	memInit_AirChambersFb
 22033              		.thumb
 22034              		.thumb_func
 22035              		.type	memInit_AirChambersFb, %function
 22036              	memInit_AirChambersFb:
 22037              	.LFB92:
3353:..\src/command_processing.c **** 
3354:..\src/command_processing.c **** //==============================================================================
3355:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3356:..\src/command_processing.c **** //==============================================================================
3357:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3358:..\src/command_processing.c **** {
 22038              		.loc 1 3358 0
 22039              		.cfi_startproc
 22040              		@ args = 0, pretend = 0, frame = 0
 22041              		@ frame_needed = 1, uses_anonymous_args = 0
 22042              		@ link register save eliminated.
 22043 0000 80B4     		push	{r7}
 22044              		.cfi_def_cfa_offset 4
 22045              		.cfi_offset 7, -4
 22046 0002 00AF     		add	r7, sp, #0
 22047              		.cfi_def_cfa_register 7
3359:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3360:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 22048              		.loc 1 3360 0
 22049 0004 1A4B     		ldr	r3, .L886
 22050 0006 0222     		movs	r2, #2
 22051 0008 83F8AC20 		strb	r2, [r3, #172]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 490


3361:..\src/command_processing.c ****     
3362:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 22052              		.loc 1 3362 0
 22053 000c 184B     		ldr	r3, .L886
 22054 000e 0122     		movs	r2, #1
 22055 0010 83F80F21 		strb	r2, [r3, #271]
3363:..\src/command_processing.c ****     
3364:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3365:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3366:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 22056              		.loc 1 3366 0
 22057 0014 164B     		ldr	r3, .L886
 22058 0016 0422     		movs	r2, #4
 22059 0018 83F87E21 		strb	r2, [r3, #382]
3367:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 22060              		.loc 1 3367 0
 22061 001c 144B     		ldr	r3, .L886
 22062 001e 0022     		movs	r2, #0
 22063 0020 C3F85421 		str	r2, [r3, #340]
3368:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 22064              		.loc 1 3368 0
 22065 0024 124B     		ldr	r3, .L886
 22066 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22067 002a 1946     		mov	r1, r3
 22068 002c 104A     		ldr	r2, .L886
 22069 002e 0B46     		mov	r3, r1
 22070 0030 5B00     		lsls	r3, r3, #1
 22071 0032 0B44     		add	r3, r3, r1
 22072 0034 1B01     		lsls	r3, r3, #4
 22073 0036 1344     		add	r3, r3, r2
 22074 0038 03F29513 		addw	r3, r3, #405
 22075 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22076 003e 1A46     		mov	r2, r3
 22077 0040 45F2F053 		movw	r3, #22000
 22078 0044 9340     		lsls	r3, r3, r2
 22079 0046 0A4A     		ldr	r2, .L886
 22080 0048 C2F85831 		str	r3, [r2, #344]
3369:..\src/command_processing.c ****     
3370:..\src/command_processing.c ****     // FB STRUCT
3371:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 22081              		.loc 1 3371 0
 22082 004c 084B     		ldr	r3, .L886
 22083 004e 4FF4E172 		mov	r2, #450
 22084 0052 C3F8D022 		str	r2, [r3, #720]
3372:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 22085              		.loc 1 3372 0
 22086 0056 064B     		ldr	r3, .L886
 22087 0058 064A     		ldr	r2, .L886+4
 22088 005a C3F8D422 		str	r2, [r3, #724]	@ float
3373:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 22089              		.loc 1 3373 0
 22090 005e 044B     		ldr	r3, .L886
 22091 0060 4FF07E52 		mov	r2, #1065353216
 22092 0064 C3F8D822 		str	r2, [r3, #728]	@ float
3374:..\src/command_processing.c **** }
 22093              		.loc 1 3374 0
 22094 0068 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 491


 22095 006a BD46     		mov	sp, r7
 22096              		.cfi_def_cfa_register 13
 22097              		@ sp needed
 22098 006c 80BC     		pop	{r7}
 22099              		.cfi_restore 7
 22100              		.cfi_def_cfa_offset 0
 22101 006e 7047     		bx	lr
 22102              	.L887:
 22103              		.align	2
 22104              	.L886:
 22105 0070 00000000 		.word	g_mem
 22106 0074 0000C841 		.word	1103626240
 22107              		.cfi_endproc
 22108              	.LFE92:
 22109              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 22110              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 22111              		.align	2
 22112              		.global	memInit_OtbkActWristMs
 22113              		.thumb
 22114              		.thumb_func
 22115              		.type	memInit_OtbkActWristMs, %function
 22116              	memInit_OtbkActWristMs:
 22117              	.LFB93:
3375:..\src/command_processing.c **** 
3376:..\src/command_processing.c **** //==============================================================================
3377:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3378:..\src/command_processing.c **** //==============================================================================
3379:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3380:..\src/command_processing.c **** {
 22118              		.loc 1 3380 0
 22119              		.cfi_startproc
 22120              		@ args = 0, pretend = 0, frame = 0
 22121              		@ frame_needed = 1, uses_anonymous_args = 0
 22122              		@ link register save eliminated.
 22123 0000 80B4     		push	{r7}
 22124              		.cfi_def_cfa_offset 4
 22125              		.cfi_offset 7, -4
 22126 0002 00AF     		add	r7, sp, #0
 22127              		.cfi_def_cfa_register 7
3381:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3382:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 22128              		.loc 1 3382 0
 22129 0004 294B     		ldr	r3, .L889
 22130 0006 0322     		movs	r2, #3
 22131 0008 83F8AC20 		strb	r2, [r3, #172]
3383:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 22132              		.loc 1 3383 0
 22133 000c 274B     		ldr	r3, .L889
 22134 000e 0122     		movs	r2, #1
 22135 0010 83F8A720 		strb	r2, [r3, #167]
3384:..\src/command_processing.c ****     
3385:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 22136              		.loc 1 3385 0
 22137 0014 254B     		ldr	r3, .L889
 22138 0016 0122     		movs	r2, #1
 22139 0018 83F80F21 		strb	r2, [r3, #271]
3386:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 492


 22140              		.loc 1 3386 0
 22141 001c 234B     		ldr	r3, .L889
 22142 001e 6422     		movs	r2, #100
 22143 0020 83F81121 		strb	r2, [r3, #273]
3387:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 22144              		.loc 1 3387 0
 22145 0024 214B     		ldr	r3, .L889
 22146 0026 0022     		movs	r2, #0
 22147 0028 83F81221 		strb	r2, [r3, #274]
3388:..\src/command_processing.c ****     
3389:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3390:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3391:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 22148              		.loc 1 3391 0
 22149 002c 1F4B     		ldr	r3, .L889
 22150 002e 0422     		movs	r2, #4
 22151 0030 83F87E21 		strb	r2, [r3, #382]
3392:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 22152              		.loc 1 3392 0
 22153 0034 1D4B     		ldr	r3, .L889
 22154 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 22155 003a 1C4B     		ldr	r3, .L889
 22156 003c 83F88021 		strb	r2, [r3, #384]
3393:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22157              		.loc 1 3393 0
 22158 0040 1A4B     		ldr	r3, .L889
 22159 0042 0122     		movs	r2, #1
 22160 0044 83F88121 		strb	r2, [r3, #385]
3394:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 22161              		.loc 1 3394 0
 22162 0048 184B     		ldr	r3, .L889
 22163 004a 0022     		movs	r2, #0
 22164 004c 83F88221 		strb	r2, [r3, #386]
3395:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 22165              		.loc 1 3395 0
 22166 0050 164B     		ldr	r3, .L889
 22167 0052 0022     		movs	r2, #0
 22168 0054 C3F85421 		str	r2, [r3, #340]
3396:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 22169              		.loc 1 3396 0
 22170 0058 144B     		ldr	r3, .L889
 22171 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22172 005e 1946     		mov	r1, r3
 22173 0060 124A     		ldr	r2, .L889
 22174 0062 0B46     		mov	r3, r1
 22175 0064 5B00     		lsls	r3, r3, #1
 22176 0066 0B44     		add	r3, r3, r1
 22177 0068 1B01     		lsls	r3, r3, #4
 22178 006a 1344     		add	r3, r3, r2
 22179 006c 03F29513 		addw	r3, r3, #405
 22180 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22181 0072 1A46     		mov	r2, r3
 22182 0074 4FF47A53 		mov	r3, #16000
 22183 0078 9340     		lsls	r3, r3, r2
 22184 007a 0C4A     		ldr	r2, .L889
 22185 007c C2F85831 		str	r3, [r2, #344]
3397:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 493


3398:..\src/command_processing.c ****     // WR STRUCT
3399:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 22186              		.loc 1 3399 0
 22187 0080 0A4B     		ldr	r3, .L889
 22188 0082 0022     		movs	r2, #0
 22189 0084 83F8E022 		strb	r2, [r3, #736]
3400:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 22190              		.loc 1 3400 0
 22191 0088 084B     		ldr	r3, .L889
 22192 008a 4FF44872 		mov	r2, #800
 22193 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
3401:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 22194              		.loc 1 3401 0
 22195 0092 064B     		ldr	r3, .L889
 22196 0094 4FF44872 		mov	r2, #800
 22197 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3402:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 22198              		.loc 1 3402 0
 22199 009c 034B     		ldr	r3, .L889
 22200 009e 0022     		movs	r2, #0
 22201 00a0 83F8E622 		strb	r2, [r3, #742]
3403:..\src/command_processing.c **** }
 22202              		.loc 1 3403 0
 22203 00a4 00BF     		nop
 22204 00a6 BD46     		mov	sp, r7
 22205              		.cfi_def_cfa_register 13
 22206              		@ sp needed
 22207 00a8 80BC     		pop	{r7}
 22208              		.cfi_restore 7
 22209              		.cfi_def_cfa_offset 0
 22210 00aa 7047     		bx	lr
 22211              	.L890:
 22212              		.align	2
 22213              	.L889:
 22214 00ac 00000000 		.word	g_mem
 22215              		.cfi_endproc
 22216              	.LFE93:
 22217              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 22218              		.section	.text.cmd_get_measurements,"ax",%progbits
 22219              		.align	2
 22220              		.global	cmd_get_measurements
 22221              		.thumb
 22222              		.thumb_func
 22223              		.type	cmd_get_measurements, %function
 22224              	cmd_get_measurements:
 22225              	.LFB94:
3404:..\src/command_processing.c **** 
3405:..\src/command_processing.c **** //==============================================================================
3406:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3407:..\src/command_processing.c **** //==============================================================================
3408:..\src/command_processing.c **** /**
3409:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3410:..\src/command_processing.c **** **/
3411:..\src/command_processing.c **** 
3412:..\src/command_processing.c **** void cmd_get_measurements(){
 22226              		.loc 1 3412 0
 22227              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 494


 22228              		@ args = 0, pretend = 0, frame = 16
 22229              		@ frame_needed = 1, uses_anonymous_args = 0
 22230 0000 90B5     		push	{r4, r7, lr}
 22231              		.cfi_def_cfa_offset 12
 22232              		.cfi_offset 4, -12
 22233              		.cfi_offset 7, -8
 22234              		.cfi_offset 14, -4
 22235 0002 85B0     		sub	sp, sp, #20
 22236              		.cfi_def_cfa_offset 32
 22237 0004 00AF     		add	r7, sp, #0
 22238              		.cfi_def_cfa_register 7
3413:..\src/command_processing.c ****  
3414:..\src/command_processing.c ****     uint8 CYDATA index;
3415:..\src/command_processing.c ****     int16 aux_int16;
3416:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3417:..\src/command_processing.c ****     
3418:..\src/command_processing.c ****     uint8 packet_data[8]; 
3419:..\src/command_processing.c ****     
3420:..\src/command_processing.c ****     //Header package
3421:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 22239              		.loc 1 3421 0
 22240 0006 8423     		movs	r3, #132
 22241 0008 3B71     		strb	r3, [r7, #4]
3422:..\src/command_processing.c ****     
3423:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22242              		.loc 1 3423 0
 22243 000a 0323     		movs	r3, #3
 22244 000c FB73     		strb	r3, [r7, #15]
 22245 000e 38E0     		b	.L892
 22246              	.L893:
3424:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22247              		.loc 1 3424 0
 22248 0010 434B     		ldr	r3, .L895
 22249 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22250 0016 1A46     		mov	r2, r3
 22251 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22252 001a 4248     		ldr	r0, .L895+4
 22253 001c 1346     		mov	r3, r2
 22254 001e 5B00     		lsls	r3, r3, #1
 22255 0020 1344     		add	r3, r3, r2
 22256 0022 9B00     		lsls	r3, r3, #2
 22257 0024 1344     		add	r3, r3, r2
 22258 0026 0B44     		add	r3, r3, r1
 22259 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 22260 002c 3C4B     		ldr	r3, .L895
 22261 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22262 0032 1C46     		mov	r4, r3
 22263 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22264 0036 3A48     		ldr	r0, .L895
 22265 0038 2346     		mov	r3, r4
 22266 003a 5B00     		lsls	r3, r3, #1
 22267 003c 2344     		add	r3, r3, r4
 22268 003e 1B01     		lsls	r3, r3, #4
 22269 0040 0344     		add	r3, r3, r0
 22270 0042 0B44     		add	r3, r3, r1
 22271 0044 03F29513 		addw	r3, r3, #405
 22272 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 495


 22273 004a 42FA03F3 		asr	r3, r2, r3
 22274 004e 1BB2     		sxth	r3, r3
 22275 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3425:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22276              		.loc 1 3425 0
 22277 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22278 0054 5B00     		lsls	r3, r3, #1
 22279 0056 0233     		adds	r3, r3, #2
 22280 0058 07F10C02 		add	r2, r7, #12
 22281 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22282 005e 07F11001 		add	r1, r7, #16
 22283 0062 0B44     		add	r3, r3, r1
 22284 0064 03F80C2C 		strb	r2, [r3, #-12]
3426:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22285              		.loc 1 3426 0
 22286 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22287 006a 5B00     		lsls	r3, r3, #1
 22288 006c 5A1C     		adds	r2, r3, #1
 22289 006e 07F10C03 		add	r3, r7, #12
 22290 0072 0133     		adds	r3, r3, #1
 22291 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22292 0076 07F11003 		add	r3, r7, #16
 22293 007a 1344     		add	r3, r3, r2
 22294 007c 0A46     		mov	r2, r1
 22295 007e 03F80C2C 		strb	r2, [r3, #-12]
 22296              	.L892:
3423:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22297              		.loc 1 3423 0 discriminator 1
 22298 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22299 0084 5A1E     		subs	r2, r3, #1
 22300 0086 FA73     		strb	r2, [r7, #15]
 22301 0088 002B     		cmp	r3, #0
 22302 008a C1D1     		bne	.L893
3427:..\src/command_processing.c ****     }
3428:..\src/command_processing.c **** 
3429:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE){
 22303              		.loc 1 3429 0
 22304 008c 244B     		ldr	r3, .L895
 22305 008e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22306 0092 012B     		cmp	r3, #1
 22307 0094 34D1     		bne	.L894
3430:..\src/command_processing.c ****         //Overwrite only second measure with first encoder on second motor line (just to have a mea
3431:..\src/command_processing.c ****         index = 1;
 22308              		.loc 1 3431 0
 22309 0096 0123     		movs	r3, #1
 22310 0098 FB73     		strb	r3, [r7, #15]
3432:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[1].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[
 22311              		.loc 1 3432 0
 22312 009a 214B     		ldr	r3, .L895
 22313 009c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22314 00a0 1946     		mov	r1, r3
 22315 00a2 204A     		ldr	r2, .L895+4
 22316 00a4 3423     		movs	r3, #52
 22317 00a6 03FB01F3 		mul	r3, r3, r1
 22318 00aa 1344     		add	r3, r3, r2
 22319 00ac 1A68     		ldr	r2, [r3]
 22320 00ae 1C4B     		ldr	r3, .L895
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 496


 22321 00b0 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22322 00b4 1846     		mov	r0, r3
 22323 00b6 1A49     		ldr	r1, .L895
 22324 00b8 0346     		mov	r3, r0
 22325 00ba 5B00     		lsls	r3, r3, #1
 22326 00bc 0344     		add	r3, r3, r0
 22327 00be 1B01     		lsls	r3, r3, #4
 22328 00c0 0B44     		add	r3, r3, r1
 22329 00c2 03F29513 		addw	r3, r3, #405
 22330 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22331 00c8 42FA03F3 		asr	r3, r2, r3
 22332 00cc 1BB2     		sxth	r3, r3
 22333 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3433:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22334              		.loc 1 3433 0
 22335 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22336 00d2 5B00     		lsls	r3, r3, #1
 22337 00d4 0233     		adds	r3, r3, #2
 22338 00d6 07F10C02 		add	r2, r7, #12
 22339 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22340 00dc 07F11001 		add	r1, r7, #16
 22341 00e0 0B44     		add	r3, r3, r1
 22342 00e2 03F80C2C 		strb	r2, [r3, #-12]
3434:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22343              		.loc 1 3434 0
 22344 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22345 00e8 5B00     		lsls	r3, r3, #1
 22346 00ea 5A1C     		adds	r2, r3, #1
 22347 00ec 07F10C03 		add	r3, r7, #12
 22348 00f0 0133     		adds	r3, r3, #1
 22349 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22350 00f4 07F11003 		add	r3, r7, #16
 22351 00f8 1344     		add	r3, r3, r2
 22352 00fa 0A46     		mov	r2, r1
 22353 00fc 03F80C2C 		strb	r2, [r3, #-12]
 22354              	.L894:
3435:..\src/command_processing.c ****     }
3436:..\src/command_processing.c ****     
3437:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3438:..\src/command_processing.c **** 
3439:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22355              		.loc 1 3439 0
 22356 0100 3B1D     		adds	r3, r7, #4
 22357 0102 0721     		movs	r1, #7
 22358 0104 1846     		mov	r0, r3
 22359 0106 FFF7FEFF 		bl	LCRChecksum
 22360 010a 0346     		mov	r3, r0
 22361 010c FB72     		strb	r3, [r7, #11]
3440:..\src/command_processing.c **** 
3441:..\src/command_processing.c ****     commWrite(packet_data, 8);
 22362              		.loc 1 3441 0
 22363 010e 3B1D     		adds	r3, r7, #4
 22364 0110 0821     		movs	r1, #8
 22365 0112 1846     		mov	r0, r3
 22366 0114 FFF7FEFF 		bl	commWrite
3442:..\src/command_processing.c ****    
3443:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 497


 22367              		.loc 1 3443 0
 22368 0118 00BF     		nop
 22369 011a 1437     		adds	r7, r7, #20
 22370              		.cfi_def_cfa_offset 12
 22371 011c BD46     		mov	sp, r7
 22372              		.cfi_def_cfa_register 13
 22373              		@ sp needed
 22374 011e 90BD     		pop	{r4, r7, pc}
 22375              	.L896:
 22376              		.align	2
 22377              	.L895:
 22378 0120 00000000 		.word	g_mem
 22379 0124 00000000 		.word	g_measOld
 22380              		.cfi_endproc
 22381              	.LFE94:
 22382              		.size	cmd_get_measurements, .-cmd_get_measurements
 22383              		.section	.text.cmd_get_velocities,"ax",%progbits
 22384              		.align	2
 22385              		.global	cmd_get_velocities
 22386              		.thumb
 22387              		.thumb_func
 22388              		.type	cmd_get_velocities, %function
 22389              	cmd_get_velocities:
 22390              	.LFB95:
3444:..\src/command_processing.c **** 
3445:..\src/command_processing.c **** void cmd_get_velocities(){
 22391              		.loc 1 3445 0
 22392              		.cfi_startproc
 22393              		@ args = 0, pretend = 0, frame = 16
 22394              		@ frame_needed = 1, uses_anonymous_args = 0
 22395 0000 90B5     		push	{r4, r7, lr}
 22396              		.cfi_def_cfa_offset 12
 22397              		.cfi_offset 4, -12
 22398              		.cfi_offset 7, -8
 22399              		.cfi_offset 14, -4
 22400 0002 85B0     		sub	sp, sp, #20
 22401              		.cfi_def_cfa_offset 32
 22402 0004 00AF     		add	r7, sp, #0
 22403              		.cfi_def_cfa_register 7
3446:..\src/command_processing.c ****  
3447:..\src/command_processing.c ****     uint8 CYDATA index;
3448:..\src/command_processing.c ****     int16 aux_int16;
3449:..\src/command_processing.c ****    
3450:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3451:..\src/command_processing.c ****     
3452:..\src/command_processing.c ****     uint8 packet_data[8]; 
3453:..\src/command_processing.c ****     
3454:..\src/command_processing.c ****     //Header package
3455:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 22404              		.loc 1 3455 0
 22405 0006 8923     		movs	r3, #137
 22406 0008 3B71     		strb	r3, [r7, #4]
3456:..\src/command_processing.c ****     
3457:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22407              		.loc 1 3457 0
 22408 000a 0323     		movs	r3, #3
 22409 000c FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 498


 22410 000e 3AE0     		b	.L898
 22411              	.L899:
3458:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22412              		.loc 1 3458 0
 22413 0010 274B     		ldr	r3, .L900
 22414 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22415 0016 1A46     		mov	r2, r3
 22416 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22417 001a 2648     		ldr	r0, .L900+4
 22418 001c 1346     		mov	r3, r2
 22419 001e 5B00     		lsls	r3, r3, #1
 22420 0020 1344     		add	r3, r3, r2
 22421 0022 9B00     		lsls	r3, r3, #2
 22422 0024 1344     		add	r3, r3, r2
 22423 0026 0B44     		add	r3, r3, r1
 22424 0028 0633     		adds	r3, r3, #6
 22425 002a 9B00     		lsls	r3, r3, #2
 22426 002c 0344     		add	r3, r3, r0
 22427 002e 5A68     		ldr	r2, [r3, #4]
 22428 0030 1F4B     		ldr	r3, .L900
 22429 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22430 0036 1C46     		mov	r4, r3
 22431 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22432 003a 1D48     		ldr	r0, .L900
 22433 003c 2346     		mov	r3, r4
 22434 003e 5B00     		lsls	r3, r3, #1
 22435 0040 2344     		add	r3, r3, r4
 22436 0042 1B01     		lsls	r3, r3, #4
 22437 0044 0344     		add	r3, r3, r0
 22438 0046 0B44     		add	r3, r3, r1
 22439 0048 03F29513 		addw	r3, r3, #405
 22440 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22441 004e 42FA03F3 		asr	r3, r2, r3
 22442 0052 1BB2     		sxth	r3, r3
 22443 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3459:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22444              		.loc 1 3459 0
 22445 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22446 0058 5B00     		lsls	r3, r3, #1
 22447 005a 0233     		adds	r3, r3, #2
 22448 005c 07F10C02 		add	r2, r7, #12
 22449 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22450 0062 07F11001 		add	r1, r7, #16
 22451 0066 0B44     		add	r3, r3, r1
 22452 0068 03F80C2C 		strb	r2, [r3, #-12]
3460:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22453              		.loc 1 3460 0
 22454 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22455 006e 5B00     		lsls	r3, r3, #1
 22456 0070 5A1C     		adds	r2, r3, #1
 22457 0072 07F10C03 		add	r3, r7, #12
 22458 0076 0133     		adds	r3, r3, #1
 22459 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22460 007a 07F11003 		add	r3, r7, #16
 22461 007e 1344     		add	r3, r3, r2
 22462 0080 0A46     		mov	r2, r1
 22463 0082 03F80C2C 		strb	r2, [r3, #-12]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 499


 22464              	.L898:
3457:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22465              		.loc 1 3457 0 discriminator 1
 22466 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22467 0088 5A1E     		subs	r2, r3, #1
 22468 008a FA73     		strb	r2, [r7, #15]
 22469 008c 002B     		cmp	r3, #0
 22470 008e BFD1     		bne	.L899
3461:..\src/command_processing.c ****     }
3462:..\src/command_processing.c ****             
3463:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3464:..\src/command_processing.c **** 
3465:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22471              		.loc 1 3465 0
 22472 0090 3B1D     		adds	r3, r7, #4
 22473 0092 0721     		movs	r1, #7
 22474 0094 1846     		mov	r0, r3
 22475 0096 FFF7FEFF 		bl	LCRChecksum
 22476 009a 0346     		mov	r3, r0
 22477 009c FB72     		strb	r3, [r7, #11]
3466:..\src/command_processing.c **** 
3467:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 22478              		.loc 1 3467 0
 22479 009e 3B1D     		adds	r3, r7, #4
 22480 00a0 0821     		movs	r1, #8
 22481 00a2 1846     		mov	r0, r3
 22482 00a4 FFF7FEFF 		bl	commWrite
3468:..\src/command_processing.c **** }
 22483              		.loc 1 3468 0
 22484 00a8 00BF     		nop
 22485 00aa 1437     		adds	r7, r7, #20
 22486              		.cfi_def_cfa_offset 12
 22487 00ac BD46     		mov	sp, r7
 22488              		.cfi_def_cfa_register 13
 22489              		@ sp needed
 22490 00ae 90BD     		pop	{r4, r7, pc}
 22491              	.L901:
 22492              		.align	2
 22493              	.L900:
 22494 00b0 00000000 		.word	g_mem
 22495 00b4 00000000 		.word	g_measOld
 22496              		.cfi_endproc
 22497              	.LFE95:
 22498              		.size	cmd_get_velocities, .-cmd_get_velocities
 22499              		.section	.text.cmd_get_accelerations,"ax",%progbits
 22500              		.align	2
 22501              		.global	cmd_get_accelerations
 22502              		.thumb
 22503              		.thumb_func
 22504              		.type	cmd_get_accelerations, %function
 22505              	cmd_get_accelerations:
 22506              	.LFB96:
3469:..\src/command_processing.c **** 
3470:..\src/command_processing.c **** void cmd_get_accelerations(){
 22507              		.loc 1 3470 0
 22508              		.cfi_startproc
 22509              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 500


 22510              		@ frame_needed = 1, uses_anonymous_args = 0
 22511 0000 90B5     		push	{r4, r7, lr}
 22512              		.cfi_def_cfa_offset 12
 22513              		.cfi_offset 4, -12
 22514              		.cfi_offset 7, -8
 22515              		.cfi_offset 14, -4
 22516 0002 85B0     		sub	sp, sp, #20
 22517              		.cfi_def_cfa_offset 32
 22518 0004 00AF     		add	r7, sp, #0
 22519              		.cfi_def_cfa_register 7
3471:..\src/command_processing.c ****  
3472:..\src/command_processing.c ****     uint8 CYDATA index;
3473:..\src/command_processing.c ****     int16 aux_int16;
3474:..\src/command_processing.c ****     
3475:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3476:..\src/command_processing.c ****     
3477:..\src/command_processing.c ****     uint8 packet_data[8]; 
3478:..\src/command_processing.c ****     
3479:..\src/command_processing.c ****     //Header package
3480:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 22520              		.loc 1 3480 0
 22521 0006 8B23     		movs	r3, #139
 22522 0008 3B71     		strb	r3, [r7, #4]
3481:..\src/command_processing.c ****     
3482:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22523              		.loc 1 3482 0
 22524 000a 0323     		movs	r3, #3
 22525 000c FB73     		strb	r3, [r7, #15]
 22526 000e 39E0     		b	.L903
 22527              	.L904:
3483:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22528              		.loc 1 3483 0
 22529 0010 274B     		ldr	r3, .L905
 22530 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22531 0016 1A46     		mov	r2, r3
 22532 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22533 001a 2648     		ldr	r0, .L905+4
 22534 001c 1346     		mov	r3, r2
 22535 001e 5B00     		lsls	r3, r3, #1
 22536 0020 1344     		add	r3, r3, r2
 22537 0022 9B00     		lsls	r3, r3, #2
 22538 0024 1344     		add	r3, r3, r2
 22539 0026 0B44     		add	r3, r3, r1
 22540 0028 0A33     		adds	r3, r3, #10
 22541 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 22542 002e 204B     		ldr	r3, .L905
 22543 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22544 0034 1C46     		mov	r4, r3
 22545 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22546 0038 1D48     		ldr	r0, .L905
 22547 003a 2346     		mov	r3, r4
 22548 003c 5B00     		lsls	r3, r3, #1
 22549 003e 2344     		add	r3, r3, r4
 22550 0040 1B01     		lsls	r3, r3, #4
 22551 0042 0344     		add	r3, r3, r0
 22552 0044 0B44     		add	r3, r3, r1
 22553 0046 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 501


 22554 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22555 004c 42FA03F3 		asr	r3, r2, r3
 22556 0050 1BB2     		sxth	r3, r3
 22557 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3484:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22558              		.loc 1 3484 0
 22559 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22560 0056 5B00     		lsls	r3, r3, #1
 22561 0058 0233     		adds	r3, r3, #2
 22562 005a 07F10C02 		add	r2, r7, #12
 22563 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22564 0060 07F11001 		add	r1, r7, #16
 22565 0064 0B44     		add	r3, r3, r1
 22566 0066 03F80C2C 		strb	r2, [r3, #-12]
3485:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22567              		.loc 1 3485 0
 22568 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22569 006c 5B00     		lsls	r3, r3, #1
 22570 006e 5A1C     		adds	r2, r3, #1
 22571 0070 07F10C03 		add	r3, r7, #12
 22572 0074 0133     		adds	r3, r3, #1
 22573 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22574 0078 07F11003 		add	r3, r7, #16
 22575 007c 1344     		add	r3, r3, r2
 22576 007e 0A46     		mov	r2, r1
 22577 0080 03F80C2C 		strb	r2, [r3, #-12]
 22578              	.L903:
3482:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22579              		.loc 1 3482 0 discriminator 1
 22580 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22581 0086 5A1E     		subs	r2, r3, #1
 22582 0088 FA73     		strb	r2, [r7, #15]
 22583 008a 002B     		cmp	r3, #0
 22584 008c C0D1     		bne	.L904
3486:..\src/command_processing.c ****     }
3487:..\src/command_processing.c ****     
3488:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3489:..\src/command_processing.c **** 
3490:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22585              		.loc 1 3490 0
 22586 008e 3B1D     		adds	r3, r7, #4
 22587 0090 0721     		movs	r1, #7
 22588 0092 1846     		mov	r0, r3
 22589 0094 FFF7FEFF 		bl	LCRChecksum
 22590 0098 0346     		mov	r3, r0
 22591 009a FB72     		strb	r3, [r7, #11]
3491:..\src/command_processing.c **** 
3492:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 22592              		.loc 1 3492 0
 22593 009c 3B1D     		adds	r3, r7, #4
 22594 009e 0821     		movs	r1, #8
 22595 00a0 1846     		mov	r0, r3
 22596 00a2 FFF7FEFF 		bl	commWrite
3493:..\src/command_processing.c **** }
 22597              		.loc 1 3493 0
 22598 00a6 00BF     		nop
 22599 00a8 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 502


 22600              		.cfi_def_cfa_offset 12
 22601 00aa BD46     		mov	sp, r7
 22602              		.cfi_def_cfa_register 13
 22603              		@ sp needed
 22604 00ac 90BD     		pop	{r4, r7, pc}
 22605              	.L906:
 22606 00ae 00BF     		.align	2
 22607              	.L905:
 22608 00b0 00000000 		.word	g_mem
 22609 00b4 00000000 		.word	g_measOld
 22610              		.cfi_endproc
 22611              	.LFE96:
 22612              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 22613              		.section	.text.cmd_get_joystick,"ax",%progbits
 22614              		.align	2
 22615              		.global	cmd_get_joystick
 22616              		.thumb
 22617              		.thumb_func
 22618              		.type	cmd_get_joystick, %function
 22619              	cmd_get_joystick:
 22620              	.LFB97:
3494:..\src/command_processing.c **** 
3495:..\src/command_processing.c **** void cmd_get_joystick() {
 22621              		.loc 1 3495 0
 22622              		.cfi_startproc
 22623              		@ args = 0, pretend = 0, frame = 8
 22624              		@ frame_needed = 1, uses_anonymous_args = 0
 22625 0000 80B5     		push	{r7, lr}
 22626              		.cfi_def_cfa_offset 8
 22627              		.cfi_offset 7, -8
 22628              		.cfi_offset 14, -4
 22629 0002 82B0     		sub	sp, sp, #8
 22630              		.cfi_def_cfa_offset 16
 22631 0004 00AF     		add	r7, sp, #0
 22632              		.cfi_def_cfa_register 7
3496:..\src/command_processing.c ****  
3497:..\src/command_processing.c ****     int16 aux_int16;
3498:..\src/command_processing.c ****     
3499:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3500:..\src/command_processing.c ****     
3501:..\src/command_processing.c ****     uint8 packet_data[6];
3502:..\src/command_processing.c ****     
3503:..\src/command_processing.c ****     // Header        
3504:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 22633              		.loc 1 3504 0
 22634 0006 9223     		movs	r3, #146
 22635 0008 3B70     		strb	r3, [r7]
3505:..\src/command_processing.c ****     
3506:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 22636              		.loc 1 3506 0
 22637 000a 134B     		ldr	r3, .L908
 22638 000c 1B6A     		ldr	r3, [r3, #32]
 22639 000e 1BB2     		sxth	r3, r3
 22640 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3507:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 22641              		.loc 1 3507 0
 22642 0012 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 503


 22643 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22644 0016 BB70     		strb	r3, [r7, #2]
3508:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 22645              		.loc 1 3508 0
 22646 0018 BB1D     		adds	r3, r7, #6
 22647 001a 0133     		adds	r3, r3, #1
 22648 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22649 001e 7B70     		strb	r3, [r7, #1]
3509:..\src/command_processing.c ****     
3510:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 22650              		.loc 1 3510 0
 22651 0020 0D4B     		ldr	r3, .L908
 22652 0022 5B6A     		ldr	r3, [r3, #36]
 22653 0024 1BB2     		sxth	r3, r3
 22654 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3511:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 22655              		.loc 1 3511 0
 22656 0028 BB1D     		adds	r3, r7, #6
 22657 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22658 002c 3B71     		strb	r3, [r7, #4]
3512:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 22659              		.loc 1 3512 0
 22660 002e BB1D     		adds	r3, r7, #6
 22661 0030 0133     		adds	r3, r3, #1
 22662 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22663 0034 FB70     		strb	r3, [r7, #3]
3513:..\src/command_processing.c **** 
3514:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 22664              		.loc 1 3514 0
 22665 0036 3B46     		mov	r3, r7
 22666 0038 0521     		movs	r1, #5
 22667 003a 1846     		mov	r0, r3
 22668 003c FFF7FEFF 		bl	LCRChecksum
 22669 0040 0346     		mov	r3, r0
 22670 0042 7B71     		strb	r3, [r7, #5]
3515:..\src/command_processing.c **** 
3516:..\src/command_processing.c ****     commWrite(packet_data, 6);
 22671              		.loc 1 3516 0
 22672 0044 3B46     		mov	r3, r7
 22673 0046 0621     		movs	r1, #6
 22674 0048 1846     		mov	r0, r3
 22675 004a FFF7FEFF 		bl	commWrite
3517:..\src/command_processing.c **** }
 22676              		.loc 1 3517 0
 22677 004e 00BF     		nop
 22678 0050 0837     		adds	r7, r7, #8
 22679              		.cfi_def_cfa_offset 8
 22680 0052 BD46     		mov	sp, r7
 22681              		.cfi_def_cfa_register 13
 22682              		@ sp needed
 22683 0054 80BD     		pop	{r7, pc}
 22684              	.L909:
 22685 0056 00BF     		.align	2
 22686              	.L908:
 22687 0058 00000000 		.word	g_adc_measOld
 22688              		.cfi_endproc
 22689              	.LFE97:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 504


 22690              		.size	cmd_get_joystick, .-cmd_get_joystick
 22691              		.section	.text.cmd_set_inputs,"ax",%progbits
 22692              		.align	2
 22693              		.global	cmd_set_inputs
 22694              		.thumb
 22695              		.thumb_func
 22696              		.type	cmd_set_inputs, %function
 22697              	cmd_set_inputs:
 22698              	.LFB98:
3518:..\src/command_processing.c **** 
3519:..\src/command_processing.c **** void cmd_set_inputs(){
 22699              		.loc 1 3519 0
 22700              		.cfi_startproc
 22701              		@ args = 0, pretend = 0, frame = 8
 22702              		@ frame_needed = 1, uses_anonymous_args = 0
 22703              		@ link register save eliminated.
 22704 0000 90B4     		push	{r4, r7}
 22705              		.cfi_def_cfa_offset 8
 22706              		.cfi_offset 4, -8
 22707              		.cfi_offset 7, -4
 22708 0002 82B0     		sub	sp, sp, #8
 22709              		.cfi_def_cfa_offset 16
 22710 0004 00AF     		add	r7, sp, #0
 22711              		.cfi_def_cfa_register 7
3520:..\src/command_processing.c ****     
3521:..\src/command_processing.c ****     // Store position setted in right variables
3522:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3523:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3524:..\src/command_processing.c ****     
3525:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 22712              		.loc 1 3525 0
 22713 0006 894B     		ldr	r3, .L924
 22714 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 22715 000a 1B02     		lsls	r3, r3, #8
 22716 000c 1AB2     		sxth	r2, r3
 22717 000e 874B     		ldr	r3, .L924
 22718 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 22719 0012 1BB2     		sxth	r3, r3
 22720 0014 1343     		orrs	r3, r3, r2
 22721 0016 1BB2     		sxth	r3, r3
 22722 0018 3B80     		strh	r3, [r7]	@ movhi
3526:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 22723              		.loc 1 3526 0
 22724 001a 844B     		ldr	r3, .L924
 22725 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 22726 001e 1B02     		lsls	r3, r3, #8
 22727 0020 1AB2     		sxth	r2, r3
 22728 0022 824B     		ldr	r3, .L924
 22729 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22730 0026 1BB2     		sxth	r3, r3
 22731 0028 1343     		orrs	r3, r3, r2
 22732 002a 1BB2     		sxth	r3, r3
 22733 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 22734              	.LBB31:
3527:..\src/command_processing.c ****     
3528:..\src/command_processing.c ****     // Check if last command received was the same as this 
3529:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 505


3530:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 22735              		.loc 1 3530 0
 22736 002e 0023     		movs	r3, #0
 22737 0030 FB71     		strb	r3, [r7, #7]
 22738 0032 1DE0     		b	.L911
 22739              	.L913:
3531:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 22740              		.loc 1 3531 0
 22741 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22742 0036 7E4A     		ldr	r2, .L924+4
 22743 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 22744 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22745 003e 5B00     		lsls	r3, r3, #1
 22746 0040 07F10801 		add	r1, r7, #8
 22747 0044 0B44     		add	r3, r3, r1
 22748 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 22749 004a 9A42     		cmp	r2, r3
 22750 004c 02D0     		beq	.L912
3532:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 22751              		.loc 1 3532 0
 22752 004e 794B     		ldr	r3, .L924+8
 22753 0050 0122     		movs	r2, #1
 22754 0052 1A70     		strb	r2, [r3]
 22755              	.L912:
3533:..\src/command_processing.c ****        }
3534:..\src/command_processing.c ****         // Update last command
3535:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 22756              		.loc 1 3535 0 discriminator 2
 22757 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22758 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22759 0058 5B00     		lsls	r3, r3, #1
 22760 005a 07F10801 		add	r1, r7, #8
 22761 005e 0B44     		add	r3, r3, r1
 22762 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 22763 0064 724B     		ldr	r3, .L924+4
 22764 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3530:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 22765              		.loc 1 3530 0 discriminator 2
 22766 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22767 006c 0133     		adds	r3, r3, #1
 22768 006e FB71     		strb	r3, [r7, #7]
 22769              	.L911:
3530:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 22770              		.loc 1 3530 0 is_stmt 0 discriminator 1
 22771 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22772 0072 714B     		ldr	r3, .L924+12
 22773 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22774 0078 0133     		adds	r3, r3, #1
 22775 007a 9A42     		cmp	r2, r3
 22776 007c DADB     		blt	.L913
 22777              	.LBE31:
3536:..\src/command_processing.c ****     }
3537:..\src/command_processing.c ****     
3538:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3539:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 22778              		.loc 1 3539 0 is_stmt 1
 22779 007e 6D4B     		ldr	r3, .L924+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 506


 22780 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22781 0082 002B     		cmp	r3, #0
 22782 0084 00F0CC80 		beq	.L923
 22783              	.LBB32:
3540:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 22784              		.loc 1 3540 0
 22785 0088 0023     		movs	r3, #0
 22786 008a BB71     		strb	r3, [r7, #6]
 22787 008c C4E0     		b	.L915
 22788              	.L922:
3541:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22789              		.loc 1 3541 0
 22790 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22791 0090 6A49     		ldr	r1, .L924+16
 22792 0092 1346     		mov	r3, r2
 22793 0094 DB00     		lsls	r3, r3, #3
 22794 0096 9B1A     		subs	r3, r3, r2
 22795 0098 1B01     		lsls	r3, r3, #4
 22796 009a 0B44     		add	r3, r3, r1
 22797 009c 03F20F13 		addw	r3, r3, #271
 22798 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22799 00a2 022B     		cmp	r3, #2
 22800 00a4 0ED1     		bne	.L916
3542:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 22801              		.loc 1 3542 0
 22802 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22803 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22804 00aa 5B00     		lsls	r3, r3, #1
 22805 00ac 07F10801 		add	r1, r7, #8
 22806 00b0 0B44     		add	r3, r3, r1
 22807 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 22808 00b6 1846     		mov	r0, r3
 22809 00b8 6149     		ldr	r1, .L924+20
 22810 00ba 1301     		lsls	r3, r2, #4
 22811 00bc 0B44     		add	r3, r3, r1
 22812 00be 0433     		adds	r3, r3, #4
 22813 00c0 1860     		str	r0, [r3]
 22814 00c2 47E0     		b	.L917
 22815              	.L916:
3543:..\src/command_processing.c ****             }
3544:..\src/command_processing.c ****             else {
3545:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 22816              		.loc 1 3545 0
 22817 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22818 00c6 5D49     		ldr	r1, .L924+16
 22819 00c8 1346     		mov	r3, r2
 22820 00ca DB00     		lsls	r3, r3, #3
 22821 00cc 9B1A     		subs	r3, r3, r2
 22822 00ce 1B01     		lsls	r3, r3, #4
 22823 00d0 0B44     		add	r3, r3, r1
 22824 00d2 03F20F13 		addw	r3, r3, #271
 22825 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22826 00d8 012B     		cmp	r3, #1
 22827 00da 0ED1     		bne	.L918
3546:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 22828              		.loc 1 3546 0
 22829 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 507


 22830 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22831 00e0 5B00     		lsls	r3, r3, #1
 22832 00e2 07F10801 		add	r1, r7, #8
 22833 00e6 0B44     		add	r3, r3, r1
 22834 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 22835 00ec 1846     		mov	r0, r3
 22836 00ee 5449     		ldr	r1, .L924+20
 22837 00f0 1301     		lsls	r3, r2, #4
 22838 00f2 0B44     		add	r3, r3, r1
 22839 00f4 0833     		adds	r3, r3, #8
 22840 00f6 1860     		str	r0, [r3]
 22841 00f8 2CE0     		b	.L917
 22842              	.L918:
3547:..\src/command_processing.c ****                 }
3548:..\src/command_processing.c ****                 else {
3549:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 22843              		.loc 1 3549 0
 22844 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22845 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22846 00fe 5B00     		lsls	r3, r3, #1
 22847 0100 07F10801 		add	r1, r7, #8
 22848 0104 0B44     		add	r3, r3, r1
 22849 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 22850 010a 1846     		mov	r0, r3
 22851 010c 4C49     		ldr	r1, .L924+20
 22852 010e 1301     		lsls	r3, r2, #4
 22853 0110 0B44     		add	r3, r3, r1
 22854 0112 1860     		str	r0, [r3]
3550:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 22855              		.loc 1 3550 0
 22856 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22857 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22858 0118 494A     		ldr	r2, .L924+20
 22859 011a 1B01     		lsls	r3, r3, #4
 22860 011c 1344     		add	r3, r3, r2
 22861 011e 1868     		ldr	r0, [r3]
 22862 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22863 0122 454C     		ldr	r4, .L924+12
 22864 0124 1346     		mov	r3, r2
 22865 0126 DB00     		lsls	r3, r3, #3
 22866 0128 9B1A     		subs	r3, r3, r2
 22867 012a 1B01     		lsls	r3, r3, #4
 22868 012c 2344     		add	r3, r3, r4
 22869 012e 03F58873 		add	r3, r3, #272
 22870 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22871 0134 1C46     		mov	r4, r3
 22872 0136 414A     		ldr	r2, .L924+16
 22873 0138 2346     		mov	r3, r4
 22874 013a 5B00     		lsls	r3, r3, #1
 22875 013c 2344     		add	r3, r3, r4
 22876 013e 1B01     		lsls	r3, r3, #4
 22877 0140 1344     		add	r3, r3, r2
 22878 0142 03F29513 		addw	r3, r3, #405
 22879 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22880 0148 00FA03F2 		lsl	r2, r0, r3
 22881 014c 3C48     		ldr	r0, .L924+20
 22882 014e 0B01     		lsls	r3, r1, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 508


 22883 0150 0344     		add	r3, r3, r0
 22884 0152 1A60     		str	r2, [r3]
 22885              	.L917:
3551:..\src/command_processing.c ****                 }
3552:..\src/command_processing.c ****             }  
3553:..\src/command_processing.c ****                
3554:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3555:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 22886              		.loc 1 3555 0
 22887 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22888 0156 3849     		ldr	r1, .L924+12
 22889 0158 1346     		mov	r3, r2
 22890 015a DB00     		lsls	r3, r3, #3
 22891 015c 9B1A     		subs	r3, r3, r2
 22892 015e 1B01     		lsls	r3, r3, #4
 22893 0160 0B44     		add	r3, r3, r1
 22894 0162 E333     		adds	r3, r3, #227
 22895 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22896 0166 002B     		cmp	r3, #0
 22897 0168 53D0     		beq	.L919
 22898              		.loc 1 3555 0 is_stmt 0 discriminator 1
 22899 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22900 016c 3349     		ldr	r1, .L924+16
 22901 016e 1346     		mov	r3, r2
 22902 0170 DB00     		lsls	r3, r3, #3
 22903 0172 9B1A     		subs	r3, r3, r2
 22904 0174 1B01     		lsls	r3, r3, #4
 22905 0176 0B44     		add	r3, r3, r1
 22906 0178 03F20F13 		addw	r3, r3, #271
 22907 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22908 017e 032B     		cmp	r3, #3
 22909 0180 0BD0     		beq	.L920
 22910              		.loc 1 3555 0 discriminator 2
 22911 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22912 0184 2D49     		ldr	r1, .L924+16
 22913 0186 1346     		mov	r3, r2
 22914 0188 DB00     		lsls	r3, r3, #3
 22915 018a 9B1A     		subs	r3, r3, r2
 22916 018c 1B01     		lsls	r3, r3, #4
 22917 018e 0B44     		add	r3, r3, r1
 22918 0190 03F20F13 		addw	r3, r3, #271
 22919 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22920 0196 002B     		cmp	r3, #0
 22921 0198 3BD1     		bne	.L919
 22922              	.L920:
3556:..\src/command_processing.c ****                 
3557:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 22923              		.loc 1 3557 0 is_stmt 1
 22924 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22925 019c 284A     		ldr	r2, .L924+20
 22926 019e 1B01     		lsls	r3, r3, #4
 22927 01a0 1344     		add	r3, r3, r2
 22928 01a2 1968     		ldr	r1, [r3]
 22929 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22930 01a6 2448     		ldr	r0, .L924+12
 22931 01a8 1346     		mov	r3, r2
 22932 01aa DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 509


 22933 01ac 9B1A     		subs	r3, r3, r2
 22934 01ae 1B01     		lsls	r3, r3, #4
 22935 01b0 0344     		add	r3, r3, r0
 22936 01b2 E433     		adds	r3, r3, #228
 22937 01b4 1B68     		ldr	r3, [r3]
 22938 01b6 9942     		cmp	r1, r3
 22939 01b8 0DDA     		bge	.L921
3558:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 22940              		.loc 1 3558 0
 22941 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22942 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22943 01be 1E48     		ldr	r0, .L924+12
 22944 01c0 1346     		mov	r3, r2
 22945 01c2 DB00     		lsls	r3, r3, #3
 22946 01c4 9B1A     		subs	r3, r3, r2
 22947 01c6 1B01     		lsls	r3, r3, #4
 22948 01c8 0344     		add	r3, r3, r0
 22949 01ca E433     		adds	r3, r3, #228
 22950 01cc 1A68     		ldr	r2, [r3]
 22951 01ce 1C48     		ldr	r0, .L924+20
 22952 01d0 0B01     		lsls	r3, r1, #4
 22953 01d2 0344     		add	r3, r3, r0
 22954 01d4 1A60     		str	r2, [r3]
 22955              	.L921:
3559:..\src/command_processing.c **** 
3560:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 22956              		.loc 1 3560 0
 22957 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22958 01d8 194A     		ldr	r2, .L924+20
 22959 01da 1B01     		lsls	r3, r3, #4
 22960 01dc 1344     		add	r3, r3, r2
 22961 01de 1968     		ldr	r1, [r3]
 22962 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22963 01e2 1548     		ldr	r0, .L924+12
 22964 01e4 1346     		mov	r3, r2
 22965 01e6 DB00     		lsls	r3, r3, #3
 22966 01e8 9B1A     		subs	r3, r3, r2
 22967 01ea 1B01     		lsls	r3, r3, #4
 22968 01ec 0344     		add	r3, r3, r0
 22969 01ee E833     		adds	r3, r3, #232
 22970 01f0 1B68     		ldr	r3, [r3]
 22971 01f2 9942     		cmp	r1, r3
 22972 01f4 0DDD     		ble	.L919
3561:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 22973              		.loc 1 3561 0
 22974 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22975 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22976 01fa 0F48     		ldr	r0, .L924+12
 22977 01fc 1346     		mov	r3, r2
 22978 01fe DB00     		lsls	r3, r3, #3
 22979 0200 9B1A     		subs	r3, r3, r2
 22980 0202 1B01     		lsls	r3, r3, #4
 22981 0204 0344     		add	r3, r3, r0
 22982 0206 E833     		adds	r3, r3, #232
 22983 0208 1A68     		ldr	r2, [r3]
 22984 020a 0D48     		ldr	r0, .L924+20
 22985 020c 0B01     		lsls	r3, r1, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 510


 22986 020e 0344     		add	r3, r3, r0
 22987 0210 1A60     		str	r2, [r3]
 22988              	.L919:
3540:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22989              		.loc 1 3540 0 discriminator 2
 22990 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22991 0214 0133     		adds	r3, r3, #1
 22992 0216 BB71     		strb	r3, [r7, #6]
 22993              	.L915:
3540:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22994              		.loc 1 3540 0 is_stmt 0 discriminator 1
 22995 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22996 021a 012B     		cmp	r3, #1
 22997 021c 7FF637AF 		bls	.L922
 22998              	.L923:
 22999              	.LBE32:
3562:..\src/command_processing.c ****             }
3563:..\src/command_processing.c ****         }  
3564:..\src/command_processing.c ****     }
3565:..\src/command_processing.c **** }
 23000              		.loc 1 3565 0 is_stmt 1
 23001 0220 00BF     		nop
 23002 0222 0837     		adds	r7, r7, #8
 23003              		.cfi_def_cfa_offset 8
 23004 0224 BD46     		mov	sp, r7
 23005              		.cfi_def_cfa_register 13
 23006              		@ sp needed
 23007 0226 90BC     		pop	{r4, r7}
 23008              		.cfi_restore 7
 23009              		.cfi_restore 4
 23010              		.cfi_def_cfa_offset 0
 23011 0228 7047     		bx	lr
 23012              	.L925:
 23013 022a 00BF     		.align	2
 23014              	.L924:
 23015 022c 00000000 		.word	g_rx
 23016 0230 08000000 		.word	last_aux_int16.11403
 23017 0234 00000000 		.word	change_ext_ref_flag
 23018 0238 00000000 		.word	c_mem
 23019 023c 00000000 		.word	g_mem
 23020 0240 00000000 		.word	g_refNew
 23021              		.cfi_endproc
 23022              	.LFE98:
 23023              		.size	cmd_set_inputs, .-cmd_set_inputs
 23024              		.section	.text.cmd_activate,"ax",%progbits
 23025              		.align	2
 23026              		.global	cmd_activate
 23027              		.thumb
 23028              		.thumb_func
 23029              		.type	cmd_activate, %function
 23030              	cmd_activate:
 23031              	.LFB99:
3566:..\src/command_processing.c **** 
3567:..\src/command_processing.c **** void cmd_activate(){
 23032              		.loc 1 3567 0
 23033              		.cfi_startproc
 23034              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 511


 23035              		@ frame_needed = 1, uses_anonymous_args = 0
 23036 0000 80B5     		push	{r7, lr}
 23037              		.cfi_def_cfa_offset 8
 23038              		.cfi_offset 7, -8
 23039              		.cfi_offset 14, -4
 23040 0002 82B0     		sub	sp, sp, #8
 23041              		.cfi_def_cfa_offset 16
 23042 0004 00AF     		add	r7, sp, #0
 23043              		.cfi_def_cfa_register 7
3568:..\src/command_processing.c ****     
3569:..\src/command_processing.c ****     // Store new value reads
3570:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 23044              		.loc 1 3570 0
 23045 0006 294B     		ldr	r3, .L933
 23046 0008 5B78     		ldrb	r3, [r3, #1]
 23047 000a FB71     		strb	r3, [r7, #7]
3571:..\src/command_processing.c ****     
3572:..\src/command_processing.c ****     // Check type of control mode enabled
3573:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 23048              		.loc 1 3573 0
 23049 000c 284B     		ldr	r3, .L933+4
 23050 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 23051 0012 002B     		cmp	r3, #0
 23052 0014 04D0     		beq	.L927
 23053              		.loc 1 3573 0 is_stmt 0 discriminator 1
 23054 0016 264B     		ldr	r3, .L933+4
 23055 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 23056 001c 032B     		cmp	r3, #3
 23057 001e 0BD1     		bne	.L928
 23058              	.L927:
3574:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 23059              		.loc 1 3574 0 is_stmt 1
 23060 0020 234B     		ldr	r3, .L933+4
 23061 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23062 0026 1946     		mov	r1, r3
 23063 0028 224A     		ldr	r2, .L933+8
 23064 002a 3423     		movs	r3, #52
 23065 002c 03FB01F3 		mul	r3, r3, r1
 23066 0030 1344     		add	r3, r3, r2
 23067 0032 1B68     		ldr	r3, [r3]
 23068 0034 204A     		ldr	r2, .L933+12
 23069 0036 1360     		str	r3, [r2]
 23070              	.L928:
3575:..\src/command_processing.c ****     }
3576:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 23071              		.loc 1 3576 0
 23072 0038 FB79     		ldrb	r3, [r7, #7]
 23073 003a 03F00103 		and	r3, r3, #1
 23074 003e DAB2     		uxtb	r2, r3
 23075 0040 1D4B     		ldr	r3, .L933+12
 23076 0042 1A73     		strb	r2, [r3, #12]
3577:..\src/command_processing.c ****     
3578:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3579:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3580:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3581:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3582:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 512


3583:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3584:..\src/command_processing.c ****         }
3585:..\src/command_processing.c ****         
3586:..\src/command_processing.c ****         // Activate or deactivate the valve
3587:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3588:..\src/command_processing.c ****     }
3589:..\src/command_processing.c **** #endif
3590:..\src/command_processing.c ****     
3591:..\src/command_processing.c ****     // Activate/Deactivate motor
3592:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 23077              		.loc 1 3592 0
 23078 0044 1C4B     		ldr	r3, .L933+12
 23079 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23080 0048 1946     		mov	r1, r3
 23081 004a 0020     		movs	r0, #0
 23082 004c FFF7FEFF 		bl	enable_motor
3593:..\src/command_processing.c ****     
3594:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 23083              		.loc 1 3594 0
 23084 0050 174B     		ldr	r3, .L933+4
 23085 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23086 0056 012B     		cmp	r3, #1
 23087 0058 23D1     		bne	.L932
3595:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 23088              		.loc 1 3595 0
 23089 005a 154B     		ldr	r3, .L933+4
 23090 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 23091 0060 002B     		cmp	r3, #0
 23092 0062 04D0     		beq	.L930
 23093              		.loc 1 3595 0 is_stmt 0 discriminator 1
 23094 0064 124B     		ldr	r3, .L933+4
 23095 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 23096 006a 032B     		cmp	r3, #3
 23097 006c 0BD1     		bne	.L931
 23098              	.L930:
3596:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 23099              		.loc 1 3596 0 is_stmt 1
 23100 006e 104B     		ldr	r3, .L933+4
 23101 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23102 0074 1946     		mov	r1, r3
 23103 0076 0F4A     		ldr	r2, .L933+8
 23104 0078 3423     		movs	r3, #52
 23105 007a 03FB01F3 		mul	r3, r3, r1
 23106 007e 1344     		add	r3, r3, r2
 23107 0080 1B68     		ldr	r3, [r3]
 23108 0082 0D4A     		ldr	r2, .L933+12
 23109 0084 1361     		str	r3, [r2, #16]
 23110              	.L931:
3597:..\src/command_processing.c ****         }
3598:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 23111              		.loc 1 3598 0
 23112 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23113 0088 5B08     		lsrs	r3, r3, #1
 23114 008a DBB2     		uxtb	r3, r3
 23115 008c 03F00103 		and	r3, r3, #1
 23116 0090 DAB2     		uxtb	r2, r3
 23117 0092 094B     		ldr	r3, .L933+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 513


 23118 0094 1A77     		strb	r2, [r3, #28]
3599:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 23119              		.loc 1 3599 0
 23120 0096 084B     		ldr	r3, .L933+12
 23121 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 23122 009a 1946     		mov	r1, r3
 23123 009c 0120     		movs	r0, #1
 23124 009e FFF7FEFF 		bl	enable_motor
 23125              	.L932:
3600:..\src/command_processing.c ****     }
3601:..\src/command_processing.c ****     
3602:..\src/command_processing.c **** }
 23126              		.loc 1 3602 0
 23127 00a2 00BF     		nop
 23128 00a4 0837     		adds	r7, r7, #8
 23129              		.cfi_def_cfa_offset 8
 23130 00a6 BD46     		mov	sp, r7
 23131              		.cfi_def_cfa_register 13
 23132              		@ sp needed
 23133 00a8 80BD     		pop	{r7, pc}
 23134              	.L934:
 23135 00aa 00BF     		.align	2
 23136              	.L933:
 23137 00ac 00000000 		.word	g_rx
 23138 00b0 00000000 		.word	g_mem
 23139 00b4 00000000 		.word	g_meas
 23140 00b8 00000000 		.word	g_refNew
 23141              		.cfi_endproc
 23142              	.LFE99:
 23143              		.size	cmd_activate, .-cmd_activate
 23144              		.section	.text.cmd_get_activate,"ax",%progbits
 23145              		.align	2
 23146              		.global	cmd_get_activate
 23147              		.thumb
 23148              		.thumb_func
 23149              		.type	cmd_get_activate, %function
 23150              	cmd_get_activate:
 23151              	.LFB100:
3603:..\src/command_processing.c **** 
3604:..\src/command_processing.c **** void cmd_get_activate(){
 23152              		.loc 1 3604 0
 23153              		.cfi_startproc
 23154              		@ args = 0, pretend = 0, frame = 8
 23155              		@ frame_needed = 1, uses_anonymous_args = 0
 23156 0000 80B5     		push	{r7, lr}
 23157              		.cfi_def_cfa_offset 8
 23158              		.cfi_offset 7, -8
 23159              		.cfi_offset 14, -4
 23160 0002 82B0     		sub	sp, sp, #8
 23161              		.cfi_def_cfa_offset 16
 23162 0004 00AF     		add	r7, sp, #0
 23163              		.cfi_def_cfa_register 7
3605:..\src/command_processing.c ****     
3606:..\src/command_processing.c ****     uint8 packet_data[3];
3607:..\src/command_processing.c **** 
3608:..\src/command_processing.c ****     // Header        
3609:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 514


 23164              		.loc 1 3609 0
 23165 0006 8123     		movs	r3, #129
 23166 0008 3B71     		strb	r3, [r7, #4]
3610:..\src/command_processing.c ****     
3611:..\src/command_processing.c ****     // Fill payload
3612:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 23167              		.loc 1 3612 0
 23168 000a 124B     		ldr	r3, .L938
 23169 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23170 0010 012B     		cmp	r3, #1
 23171 0012 0BD1     		bne	.L936
3613:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 23172              		.loc 1 3613 0
 23173 0014 104B     		ldr	r3, .L938+4
 23174 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 23175 0018 5B00     		lsls	r3, r3, #1
 23176 001a 5AB2     		sxtb	r2, r3
 23177 001c 0E4B     		ldr	r3, .L938+4
 23178 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23179 0020 5BB2     		sxtb	r3, r3
 23180 0022 1343     		orrs	r3, r3, r2
 23181 0024 5BB2     		sxtb	r3, r3
 23182 0026 DBB2     		uxtb	r3, r3
 23183 0028 7B71     		strb	r3, [r7, #5]
 23184 002a 02E0     		b	.L937
 23185              	.L936:
3614:..\src/command_processing.c ****     } 
3615:..\src/command_processing.c ****     else {
3616:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 23186              		.loc 1 3616 0
 23187 002c 0A4B     		ldr	r3, .L938+4
 23188 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23189 0030 7B71     		strb	r3, [r7, #5]
 23190              	.L937:
3617:..\src/command_processing.c ****     }
3618:..\src/command_processing.c ****     
3619:..\src/command_processing.c ****     // Calculate checksum
3620:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 23191              		.loc 1 3620 0
 23192 0032 3B1D     		adds	r3, r7, #4
 23193 0034 0221     		movs	r1, #2
 23194 0036 1846     		mov	r0, r3
 23195 0038 FFF7FEFF 		bl	LCRChecksum
 23196 003c 0346     		mov	r3, r0
 23197 003e BB71     		strb	r3, [r7, #6]
3621:..\src/command_processing.c ****     
3622:..\src/command_processing.c ****     // Send package to UART
3623:..\src/command_processing.c ****     commWrite(packet_data, 3);
 23198              		.loc 1 3623 0
 23199 0040 3B1D     		adds	r3, r7, #4
 23200 0042 0321     		movs	r1, #3
 23201 0044 1846     		mov	r0, r3
 23202 0046 FFF7FEFF 		bl	commWrite
3624:..\src/command_processing.c **** 
3625:..\src/command_processing.c **** }
 23203              		.loc 1 3625 0
 23204 004a 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 515


 23205 004c 0837     		adds	r7, r7, #8
 23206              		.cfi_def_cfa_offset 8
 23207 004e BD46     		mov	sp, r7
 23208              		.cfi_def_cfa_register 13
 23209              		@ sp needed
 23210 0050 80BD     		pop	{r7, pc}
 23211              	.L939:
 23212 0052 00BF     		.align	2
 23213              	.L938:
 23214 0054 00000000 		.word	g_mem
 23215 0058 00000000 		.word	g_ref
 23216              		.cfi_endproc
 23217              	.LFE100:
 23218              		.size	cmd_get_activate, .-cmd_get_activate
 23219              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 23220              		.align	2
 23221              		.global	cmd_get_curr_and_meas
 23222              		.thumb
 23223              		.thumb_func
 23224              		.type	cmd_get_curr_and_meas, %function
 23225              	cmd_get_curr_and_meas:
 23226              	.LFB101:
3626:..\src/command_processing.c **** 
3627:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 23227              		.loc 1 3627 0
 23228              		.cfi_startproc
 23229              		@ args = 0, pretend = 0, frame = 16
 23230              		@ frame_needed = 1, uses_anonymous_args = 0
 23231 0000 90B5     		push	{r4, r7, lr}
 23232              		.cfi_def_cfa_offset 12
 23233              		.cfi_offset 4, -12
 23234              		.cfi_offset 7, -8
 23235              		.cfi_offset 14, -4
 23236 0002 85B0     		sub	sp, sp, #20
 23237              		.cfi_def_cfa_offset 32
 23238 0004 00AF     		add	r7, sp, #0
 23239              		.cfi_def_cfa_register 7
3628:..\src/command_processing.c ****     
3629:..\src/command_processing.c ****     uint8 CYDATA index;
3630:..\src/command_processing.c ****     int16 aux_int16;
3631:..\src/command_processing.c ****    
3632:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3633:..\src/command_processing.c ****     
3634:..\src/command_processing.c ****     uint8 packet_data[12]; 
3635:..\src/command_processing.c **** 
3636:..\src/command_processing.c ****     //Header package
3637:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 23240              		.loc 1 3637 0
 23241 0006 8623     		movs	r3, #134
 23242 0008 3B70     		strb	r3, [r7]
3638:..\src/command_processing.c **** 
3639:..\src/command_processing.c ****     // Currents
3640:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 23243              		.loc 1 3640 0
 23244 000a 484B     		ldr	r3, .L945
 23245 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23246 0010 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 516


 23247 0012 474A     		ldr	r2, .L945+4
 23248 0014 3423     		movs	r3, #52
 23249 0016 03FB01F3 		mul	r3, r3, r1
 23250 001a 1344     		add	r3, r3, r2
 23251 001c 0C33     		adds	r3, r3, #12
 23252 001e 1B68     		ldr	r3, [r3]
 23253 0020 1BB2     		sxth	r3, r3
 23254 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3641:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23255              		.loc 1 3641 0
 23256 0024 07F10C03 		add	r3, r7, #12
 23257 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23258 002a BB70     		strb	r3, [r7, #2]
3642:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23259              		.loc 1 3642 0
 23260 002c 07F10C03 		add	r3, r7, #12
 23261 0030 0133     		adds	r3, r3, #1
 23262 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23263 0034 7B70     		strb	r3, [r7, #1]
3643:..\src/command_processing.c ****     
3644:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 23264              		.loc 1 3644 0
 23265 0036 3F4B     		ldr	r3, .L945+8
 23266 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23267 003c 012B     		cmp	r3, #1
 23268 003e 0DD1     		bne	.L941
3645:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 23269              		.loc 1 3645 0
 23270 0040 3A4B     		ldr	r3, .L945
 23271 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23272 0046 1946     		mov	r1, r3
 23273 0048 394A     		ldr	r2, .L945+4
 23274 004a 3423     		movs	r3, #52
 23275 004c 03FB01F3 		mul	r3, r3, r1
 23276 0050 1344     		add	r3, r3, r2
 23277 0052 0C33     		adds	r3, r3, #12
 23278 0054 1B68     		ldr	r3, [r3]
 23279 0056 1BB2     		sxth	r3, r3
 23280 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 23281 005a 0CE0     		b	.L942
 23282              	.L941:
3646:..\src/command_processing.c ****     }
3647:..\src/command_processing.c ****     else {
3648:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 23283              		.loc 1 3648 0
 23284 005c 334B     		ldr	r3, .L945
 23285 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23286 0062 1946     		mov	r1, r3
 23287 0064 324A     		ldr	r2, .L945+4
 23288 0066 3423     		movs	r3, #52
 23289 0068 03FB01F3 		mul	r3, r3, r1
 23290 006c 1344     		add	r3, r3, r2
 23291 006e 1033     		adds	r3, r3, #16
 23292 0070 1B68     		ldr	r3, [r3]
 23293 0072 1BB2     		sxth	r3, r3
 23294 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 23295              	.L942:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 517


3649:..\src/command_processing.c ****     }
3650:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23296              		.loc 1 3650 0
 23297 0076 07F10C03 		add	r3, r7, #12
 23298 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23299 007c 3B71     		strb	r3, [r7, #4]
3651:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23300              		.loc 1 3651 0
 23301 007e 07F10C03 		add	r3, r7, #12
 23302 0082 0133     		adds	r3, r3, #1
 23303 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23304 0086 FB70     		strb	r3, [r7, #3]
3652:..\src/command_processing.c **** 
3653:..\src/command_processing.c ****     // Positions
3654:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23305              		.loc 1 3654 0
 23306 0088 0323     		movs	r3, #3
 23307 008a FB73     		strb	r3, [r7, #15]
 23308 008c 38E0     		b	.L943
 23309              	.L944:
3655:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23310              		.loc 1 3655 0
 23311 008e 274B     		ldr	r3, .L945
 23312 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23313 0094 1A46     		mov	r2, r3
 23314 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23315 0098 2548     		ldr	r0, .L945+4
 23316 009a 1346     		mov	r3, r2
 23317 009c 5B00     		lsls	r3, r3, #1
 23318 009e 1344     		add	r3, r3, r2
 23319 00a0 9B00     		lsls	r3, r3, #2
 23320 00a2 1344     		add	r3, r3, r2
 23321 00a4 0B44     		add	r3, r3, r1
 23322 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23323 00aa 204B     		ldr	r3, .L945
 23324 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23325 00b0 1C46     		mov	r4, r3
 23326 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23327 00b4 1D48     		ldr	r0, .L945
 23328 00b6 2346     		mov	r3, r4
 23329 00b8 5B00     		lsls	r3, r3, #1
 23330 00ba 2344     		add	r3, r3, r4
 23331 00bc 1B01     		lsls	r3, r3, #4
 23332 00be 0344     		add	r3, r3, r0
 23333 00c0 0B44     		add	r3, r3, r1
 23334 00c2 03F29513 		addw	r3, r3, #405
 23335 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23336 00c8 42FA03F3 		asr	r3, r2, r3
 23337 00cc 1BB2     		sxth	r3, r3
 23338 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3656:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 23339              		.loc 1 3656 0
 23340 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23341 00d2 5B00     		lsls	r3, r3, #1
 23342 00d4 0633     		adds	r3, r3, #6
 23343 00d6 07F10C02 		add	r2, r7, #12
 23344 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 518


 23345 00dc 07F11001 		add	r1, r7, #16
 23346 00e0 0B44     		add	r3, r3, r1
 23347 00e2 03F8102C 		strb	r2, [r3, #-16]
3657:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 23348              		.loc 1 3657 0
 23349 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23350 00e8 5B00     		lsls	r3, r3, #1
 23351 00ea 5A1D     		adds	r2, r3, #5
 23352 00ec 07F10C03 		add	r3, r7, #12
 23353 00f0 0133     		adds	r3, r3, #1
 23354 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23355 00f4 07F11003 		add	r3, r7, #16
 23356 00f8 1344     		add	r3, r3, r2
 23357 00fa 0A46     		mov	r2, r1
 23358 00fc 03F8102C 		strb	r2, [r3, #-16]
 23359              	.L943:
3654:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23360              		.loc 1 3654 0 discriminator 1
 23361 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23362 0102 5A1E     		subs	r2, r3, #1
 23363 0104 FA73     		strb	r2, [r7, #15]
 23364 0106 002B     		cmp	r3, #0
 23365 0108 C1D1     		bne	.L944
3658:..\src/command_processing.c ****     }
3659:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3660:..\src/command_processing.c ****         
3661:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 23366              		.loc 1 3661 0
 23367 010a 3B46     		mov	r3, r7
 23368 010c 0B21     		movs	r1, #11
 23369 010e 1846     		mov	r0, r3
 23370 0110 FFF7FEFF 		bl	LCRChecksum
 23371 0114 0346     		mov	r3, r0
 23372 0116 FB72     		strb	r3, [r7, #11]
3662:..\src/command_processing.c ****     commWrite(packet_data, 12);
 23373              		.loc 1 3662 0
 23374 0118 3B46     		mov	r3, r7
 23375 011a 0C21     		movs	r1, #12
 23376 011c 1846     		mov	r0, r3
 23377 011e FFF7FEFF 		bl	commWrite
3663:..\src/command_processing.c ****    
3664:..\src/command_processing.c **** }
 23378              		.loc 1 3664 0
 23379 0122 00BF     		nop
 23380 0124 1437     		adds	r7, r7, #20
 23381              		.cfi_def_cfa_offset 12
 23382 0126 BD46     		mov	sp, r7
 23383              		.cfi_def_cfa_register 13
 23384              		@ sp needed
 23385 0128 90BD     		pop	{r4, r7, pc}
 23386              	.L946:
 23387 012a 00BF     		.align	2
 23388              	.L945:
 23389 012c 00000000 		.word	g_mem
 23390 0130 00000000 		.word	g_measOld
 23391 0134 00000000 		.word	c_mem
 23392              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 519


 23393              	.LFE101:
 23394              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 23395              		.global	__aeabi_dmul
 23396              		.global	__aeabi_d2iz
 23397              		.section	.text.cmd_get_currents,"ax",%progbits
 23398              		.align	2
 23399              		.global	cmd_get_currents
 23400              		.thumb
 23401              		.thumb_func
 23402              		.type	cmd_get_currents, %function
 23403              	cmd_get_currents:
 23404              	.LFB102:
3665:..\src/command_processing.c **** 
3666:..\src/command_processing.c **** void cmd_get_currents(){
 23405              		.loc 1 3666 0
 23406              		.cfi_startproc
 23407              		@ args = 0, pretend = 0, frame = 16
 23408              		@ frame_needed = 1, uses_anonymous_args = 0
 23409 0000 90B5     		push	{r4, r7, lr}
 23410              		.cfi_def_cfa_offset 12
 23411              		.cfi_offset 4, -12
 23412              		.cfi_offset 7, -8
 23413              		.cfi_offset 14, -4
 23414 0002 85B0     		sub	sp, sp, #20
 23415              		.cfi_def_cfa_offset 32
 23416 0004 00AF     		add	r7, sp, #0
 23417              		.cfi_def_cfa_register 7
3667:..\src/command_processing.c ****     
3668:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3669:..\src/command_processing.c ****     
3670:..\src/command_processing.c ****     uint8 packet_data[6]; 
3671:..\src/command_processing.c ****     int16 aux_int16;
3672:..\src/command_processing.c ****     
3673:..\src/command_processing.c ****     //Header package
3674:..\src/command_processing.c **** 
3675:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 23418              		.loc 1 3675 0
 23419 0006 8523     		movs	r3, #133
 23420 0008 3B72     		strb	r3, [r7, #8]
3676:..\src/command_processing.c **** 
3677:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 23421              		.loc 1 3677 0
 23422 000a 334B     		ldr	r3, .L952
 23423 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 23424 0010 022B     		cmp	r3, #2
 23425 0012 0DD0     		beq	.L948
3678:..\src/command_processing.c ****         // Currents
3679:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 23426              		.loc 1 3679 0
 23427 0014 314B     		ldr	r3, .L952+4
 23428 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23429 001a 1946     		mov	r1, r3
 23430 001c 304A     		ldr	r2, .L952+8
 23431 001e 3423     		movs	r3, #52
 23432 0020 03FB01F3 		mul	r3, r3, r1
 23433 0024 1344     		add	r3, r3, r2
 23434 0026 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 520


 23435 0028 1B68     		ldr	r3, [r3]
 23436 002a 1BB2     		sxth	r3, r3
 23437 002c FB80     		strh	r3, [r7, #6]	@ movhi
 23438 002e 12E0     		b	.L949
 23439              	.L948:
3680:..\src/command_processing.c ****     }
3681:..\src/command_processing.c ****     else {
3682:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3683:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 23440              		.loc 1 3683 0
 23441 0030 2C4B     		ldr	r3, .L952+12
 23442 0032 1B68     		ldr	r3, [r3]	@ float
 23443 0034 1846     		mov	r0, r3
 23444 0036 FFF7FEFF 		bl	__aeabi_f2d
 23445 003a 4FF00002 		mov	r2, #0
 23446 003e 2A4B     		ldr	r3, .L952+16
 23447 0040 FFF7FEFF 		bl	__aeabi_dmul
 23448 0044 0346     		mov	r3, r0
 23449 0046 0C46     		mov	r4, r1
 23450 0048 1846     		mov	r0, r3
 23451 004a 2146     		mov	r1, r4
 23452 004c FFF7FEFF 		bl	__aeabi_d2iz
 23453 0050 0346     		mov	r3, r0
 23454 0052 1BB2     		sxth	r3, r3
 23455 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 23456              	.L949:
3684:..\src/command_processing.c ****     }
3685:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23457              		.loc 1 3685 0
 23458 0056 BB1D     		adds	r3, r7, #6
 23459 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23460 005a BB72     		strb	r3, [r7, #10]
3686:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23461              		.loc 1 3686 0
 23462 005c BB1D     		adds	r3, r7, #6
 23463 005e 0133     		adds	r3, r3, #1
 23464 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23465 0062 7B72     		strb	r3, [r7, #9]
3687:..\src/command_processing.c ****     
3688:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 23466              		.loc 1 3688 0
 23467 0064 1C4B     		ldr	r3, .L952
 23468 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23469 006a 012B     		cmp	r3, #1
 23470 006c 0DD1     		bne	.L950
3689:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 23471              		.loc 1 3689 0
 23472 006e 1B4B     		ldr	r3, .L952+4
 23473 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23474 0074 1946     		mov	r1, r3
 23475 0076 1A4A     		ldr	r2, .L952+8
 23476 0078 3423     		movs	r3, #52
 23477 007a 03FB01F3 		mul	r3, r3, r1
 23478 007e 1344     		add	r3, r3, r2
 23479 0080 0C33     		adds	r3, r3, #12
 23480 0082 1B68     		ldr	r3, [r3]
 23481 0084 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 521


 23482 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 23483 0088 0CE0     		b	.L951
 23484              	.L950:
3690:..\src/command_processing.c ****     }
3691:..\src/command_processing.c ****     else {
3692:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 23485              		.loc 1 3692 0
 23486 008a 144B     		ldr	r3, .L952+4
 23487 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23488 0090 1946     		mov	r1, r3
 23489 0092 134A     		ldr	r2, .L952+8
 23490 0094 3423     		movs	r3, #52
 23491 0096 03FB01F3 		mul	r3, r3, r1
 23492 009a 1344     		add	r3, r3, r2
 23493 009c 1033     		adds	r3, r3, #16
 23494 009e 1B68     		ldr	r3, [r3]
 23495 00a0 1BB2     		sxth	r3, r3
 23496 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 23497              	.L951:
3693:..\src/command_processing.c ****     }
3694:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23498              		.loc 1 3694 0
 23499 00a4 BB1D     		adds	r3, r7, #6
 23500 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23501 00a8 3B73     		strb	r3, [r7, #12]
3695:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23502              		.loc 1 3695 0
 23503 00aa BB1D     		adds	r3, r7, #6
 23504 00ac 0133     		adds	r3, r3, #1
 23505 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23506 00b0 FB72     		strb	r3, [r7, #11]
3696:..\src/command_processing.c **** 
3697:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3698:..\src/command_processing.c **** 
3699:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23507              		.loc 1 3699 0
 23508 00b2 07F10803 		add	r3, r7, #8
 23509 00b6 0521     		movs	r1, #5
 23510 00b8 1846     		mov	r0, r3
 23511 00ba FFF7FEFF 		bl	LCRChecksum
 23512 00be 0346     		mov	r3, r0
 23513 00c0 7B73     		strb	r3, [r7, #13]
3700:..\src/command_processing.c ****     
3701:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23514              		.loc 1 3701 0
 23515 00c2 07F10803 		add	r3, r7, #8
 23516 00c6 0621     		movs	r1, #6
 23517 00c8 1846     		mov	r0, r3
 23518 00ca FFF7FEFF 		bl	commWrite
3702:..\src/command_processing.c **** }
 23519              		.loc 1 3702 0
 23520 00ce 00BF     		nop
 23521 00d0 1437     		adds	r7, r7, #20
 23522              		.cfi_def_cfa_offset 12
 23523 00d2 BD46     		mov	sp, r7
 23524              		.cfi_def_cfa_register 13
 23525              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 522


 23526 00d4 90BD     		pop	{r4, r7, pc}
 23527              	.L953:
 23528 00d6 00BF     		.align	2
 23529              	.L952:
 23530 00d8 00000000 		.word	c_mem
 23531 00dc 00000000 		.word	g_mem
 23532 00e0 00000000 		.word	g_measOld
 23533 00e4 00000000 		.word	g_fb_meas
 23534 00e8 00005940 		.word	1079574528
 23535              		.cfi_endproc
 23536              	.LFE102:
 23537              		.size	cmd_get_currents, .-cmd_get_currents
 23538              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 23539              		.align	2
 23540              		.global	cmd_get_currents_for_cuff
 23541              		.thumb
 23542              		.thumb_func
 23543              		.type	cmd_get_currents_for_cuff, %function
 23544              	cmd_get_currents_for_cuff:
 23545              	.LFB103:
3703:..\src/command_processing.c **** 
3704:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 23546              		.loc 1 3704 0
 23547              		.cfi_startproc
 23548              		@ args = 0, pretend = 0, frame = 8
 23549              		@ frame_needed = 1, uses_anonymous_args = 0
 23550 0000 80B5     		push	{r7, lr}
 23551              		.cfi_def_cfa_offset 8
 23552              		.cfi_offset 7, -8
 23553              		.cfi_offset 14, -4
 23554 0002 82B0     		sub	sp, sp, #8
 23555              		.cfi_def_cfa_offset 16
 23556 0004 00AF     		add	r7, sp, #0
 23557              		.cfi_def_cfa_register 7
3705:..\src/command_processing.c ****     
3706:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3707:..\src/command_processing.c ****     
3708:..\src/command_processing.c ****     uint8 packet_data[4]; 
3709:..\src/command_processing.c ****     int16 aux_int16;
3710:..\src/command_processing.c ****     
3711:..\src/command_processing.c ****     //Header package
3712:..\src/command_processing.c **** 
3713:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 23558              		.loc 1 3713 0
 23559 0006 8E23     		movs	r3, #142
 23560 0008 3B71     		strb	r3, [r7, #4]
3714:..\src/command_processing.c **** 
3715:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 23561              		.loc 1 3715 0
 23562 000a 144B     		ldr	r3, .L955
 23563 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23564 0010 1946     		mov	r1, r3
 23565 0012 134A     		ldr	r2, .L955+4
 23566 0014 3423     		movs	r3, #52
 23567 0016 03FB01F3 		mul	r3, r3, r1
 23568 001a 1344     		add	r3, r3, r2
 23569 001c 1033     		adds	r3, r3, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 523


 23570 001e 1B68     		ldr	r3, [r3]
 23571 0020 1BB2     		sxth	r3, r3
 23572 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3716:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23573              		.loc 1 3716 0
 23574 0024 BB1C     		adds	r3, r7, #2
 23575 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23576 0028 BB71     		strb	r3, [r7, #6]
3717:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23577              		.loc 1 3717 0
 23578 002a BB1C     		adds	r3, r7, #2
 23579 002c 0133     		adds	r3, r3, #1
 23580 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23581 0030 7B71     		strb	r3, [r7, #5]
3718:..\src/command_processing.c **** 
3719:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3720:..\src/command_processing.c **** 
3721:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 23582              		.loc 1 3721 0
 23583 0032 3B1D     		adds	r3, r7, #4
 23584 0034 0321     		movs	r1, #3
 23585 0036 1846     		mov	r0, r3
 23586 0038 FFF7FEFF 		bl	LCRChecksum
 23587 003c 0346     		mov	r3, r0
 23588 003e FB71     		strb	r3, [r7, #7]
3722:..\src/command_processing.c ****     
3723:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 23589              		.loc 1 3723 0
 23590 0040 064B     		ldr	r3, .L955
 23591 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 23592 0046 013B     		subs	r3, r3, #1
 23593 0048 DAB2     		uxtb	r2, r3
 23594 004a 3B1D     		adds	r3, r7, #4
 23595 004c 0421     		movs	r1, #4
 23596 004e 1846     		mov	r0, r3
 23597 0050 FFF7FEFF 		bl	commWriteID
3724:..\src/command_processing.c **** }
 23598              		.loc 1 3724 0
 23599 0054 00BF     		nop
 23600 0056 0837     		adds	r7, r7, #8
 23601              		.cfi_def_cfa_offset 8
 23602 0058 BD46     		mov	sp, r7
 23603              		.cfi_def_cfa_register 13
 23604              		@ sp needed
 23605 005a 80BD     		pop	{r7, pc}
 23606              	.L956:
 23607              		.align	2
 23608              	.L955:
 23609 005c 00000000 		.word	g_mem
 23610 0060 00000000 		.word	g_measOld
 23611              		.cfi_endproc
 23612              	.LFE103:
 23613              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 23614              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 23615              		.align	2
 23616              		.global	commReadResCurrFromSH
 23617              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 524


 23618              		.thumb_func
 23619              		.type	commReadResCurrFromSH, %function
 23620              	commReadResCurrFromSH:
 23621              	.LFB104:
3725:..\src/command_processing.c **** 
3726:..\src/command_processing.c **** //==============================================================================
3727:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3728:..\src/command_processing.c **** //==============================================================================
3729:..\src/command_processing.c **** 
3730:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3731:..\src/command_processing.c **** {
 23622              		.loc 1 3731 0
 23623              		.cfi_startproc
 23624              		@ args = 0, pretend = 0, frame = 32
 23625              		@ frame_needed = 1, uses_anonymous_args = 0
 23626 0000 80B5     		push	{r7, lr}
 23627              		.cfi_def_cfa_offset 8
 23628              		.cfi_offset 7, -8
 23629              		.cfi_offset 14, -4
 23630 0002 88B0     		sub	sp, sp, #32
 23631              		.cfi_def_cfa_offset 40
 23632 0004 00AF     		add	r7, sp, #0
 23633              		.cfi_def_cfa_register 7
3732:..\src/command_processing.c ****     uint8 packet_data[16];
3733:..\src/command_processing.c ****     uint8 packet_lenght;
3734:..\src/command_processing.c ****     int16 curr_diff = 0;
 23634              		.loc 1 3734 0
 23635 0006 0023     		movs	r3, #0
 23636 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3735:..\src/command_processing.c ****     uint32 t_start, t_end;
3736:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 23637              		.loc 1 3736 0
 23638 000a 0123     		movs	r3, #1
 23639 000c 7B77     		strb	r3, [r7, #29]
3737:..\src/command_processing.c **** 
3738:..\src/command_processing.c ****     packet_lenght = 2;
 23640              		.loc 1 3738 0
 23641 000e 0223     		movs	r3, #2
 23642 0010 3B77     		strb	r3, [r7, #28]
3739:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 23643              		.loc 1 3739 0
 23644 0012 8C23     		movs	r3, #140
 23645 0014 3B71     		strb	r3, [r7, #4]
3740:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 23646              		.loc 1 3740 0
 23647 0016 8C23     		movs	r3, #140
 23648 0018 7B71     		strb	r3, [r7, #5]
3741:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 23649              		.loc 1 3741 0
 23650 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 23651 001c 99B2     		uxth	r1, r3
 23652 001e 1D4B     		ldr	r3, .L964
 23653 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 23654 0024 3B1D     		adds	r3, r7, #4
 23655 0026 1846     		mov	r0, r3
 23656 0028 FFF7FEFF 		bl	commWriteID
3742:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 525


3743:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 23657              		.loc 1 3743 0
 23658 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 23659 0030 0346     		mov	r3, r0
 23660 0032 BB61     		str	r3, [r7, #24]
3744:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 23661              		.loc 1 3744 0
 23662 0034 18E0     		b	.L958
 23663              	.L961:
3745:..\src/command_processing.c ****         if (interrupt_flag){
 23664              		.loc 1 3745 0
 23665 0036 184B     		ldr	r3, .L964+4
 23666 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23667 003a 002B     		cmp	r3, #0
 23668 003c 04D0     		beq	.L959
3746:..\src/command_processing.c ****             interrupt_flag = FALSE;
 23669              		.loc 1 3746 0
 23670 003e 164B     		ldr	r3, .L964+4
 23671 0040 0022     		movs	r2, #0
 23672 0042 1A70     		strb	r2, [r3]
3747:..\src/command_processing.c ****             interrupt_manager();
 23673              		.loc 1 3747 0
 23674 0044 FFF7FEFF 		bl	interrupt_manager
 23675              	.L959:
3748:..\src/command_processing.c ****         }
3749:..\src/command_processing.c **** 
3750:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 23676              		.loc 1 3750 0
 23677 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 23678 004c 0346     		mov	r3, r0
 23679 004e 7B61     		str	r3, [r7, #20]
3751:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 23680              		.loc 1 3751 0
 23681 0050 BA69     		ldr	r2, [r7, #24]
 23682 0052 7B69     		ldr	r3, [r7, #20]
 23683 0054 D31A     		subs	r3, r2, r3
 23684 0056 114A     		ldr	r2, .L964+8
 23685 0058 9342     		cmp	r3, r2
 23686 005a 05D9     		bls	.L958
3752:..\src/command_processing.c ****             read_flag = FALSE;
 23687              		.loc 1 3752 0
 23688 005c 0023     		movs	r3, #0
 23689 005e 7B77     		strb	r3, [r7, #29]
3753:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 23690              		.loc 1 3753 0
 23691 0060 0F4B     		ldr	r3, .L964+12
 23692 0062 0022     		movs	r2, #0
 23693 0064 1A70     		strb	r2, [r3]
3754:..\src/command_processing.c ****             break;
 23694              		.loc 1 3754 0
 23695 0066 03E0     		b	.L960
 23696              	.L958:
3744:..\src/command_processing.c ****         if (interrupt_flag){
 23697              		.loc 1 3744 0
 23698 0068 0E4B     		ldr	r3, .L964+16
 23699 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23700 006c 8E2B     		cmp	r3, #142
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 526


 23701 006e E2D1     		bne	.L961
 23702              	.L960:
3755:..\src/command_processing.c ****         }
3756:..\src/command_processing.c ****     }
3757:..\src/command_processing.c **** 
3758:..\src/command_processing.c ****     if (read_flag) {
 23703              		.loc 1 3758 0
 23704 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23705 0072 002B     		cmp	r3, #0
 23706 0074 08D0     		beq	.L962
3759:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 23707              		.loc 1 3759 0
 23708 0076 0B4B     		ldr	r3, .L964+16
 23709 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 23710 007a 1B02     		lsls	r3, r3, #8
 23711 007c 1AB2     		sxth	r2, r3
 23712 007e 094B     		ldr	r3, .L964+16
 23713 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 23714 0082 1BB2     		sxth	r3, r3
 23715 0084 1343     		orrs	r3, r3, r2
 23716 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 23717              	.L962:
3760:..\src/command_processing.c ****     }
3761:..\src/command_processing.c ****     
3762:..\src/command_processing.c ****     return curr_diff;
 23718              		.loc 1 3762 0
 23719 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3763:..\src/command_processing.c **** }
 23720              		.loc 1 3763 0
 23721 008c 1846     		mov	r0, r3
 23722 008e 2037     		adds	r7, r7, #32
 23723              		.cfi_def_cfa_offset 8
 23724 0090 BD46     		mov	sp, r7
 23725              		.cfi_def_cfa_register 13
 23726              		@ sp needed
 23727 0092 80BD     		pop	{r7, pc}
 23728              	.L965:
 23729              		.align	2
 23730              	.L964:
 23731 0094 00000000 		.word	c_mem
 23732 0098 00000000 		.word	interrupt_flag
 23733 009c 20AA4400 		.word	4500000
 23734 00a0 00000000 		.word	master_mode
 23735 00a4 00000000 		.word	g_rx
 23736              		.cfi_endproc
 23737              	.LFE104:
 23738              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 23739              		.section	.text.cmd_set_baudrate,"ax",%progbits
 23740              		.align	2
 23741              		.global	cmd_set_baudrate
 23742              		.thumb
 23743              		.thumb_func
 23744              		.type	cmd_set_baudrate, %function
 23745              	cmd_set_baudrate:
 23746              	.LFB105:
3764:..\src/command_processing.c **** 
3765:..\src/command_processing.c **** void cmd_set_baudrate(){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 527


 23747              		.loc 1 3765 0
 23748              		.cfi_startproc
 23749              		@ args = 0, pretend = 0, frame = 0
 23750              		@ frame_needed = 1, uses_anonymous_args = 0
 23751 0000 80B5     		push	{r7, lr}
 23752              		.cfi_def_cfa_offset 8
 23753              		.cfi_offset 7, -8
 23754              		.cfi_offset 14, -4
 23755 0002 00AF     		add	r7, sp, #0
 23756              		.cfi_def_cfa_register 7
3766:..\src/command_processing.c ****     
3767:..\src/command_processing.c ****     // Set BaudRate
3768:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 23757              		.loc 1 3768 0
 23758 0004 094B     		ldr	r3, .L971
 23759 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 23760 0008 094B     		ldr	r3, .L971+4
 23761 000a 83F8AA20 		strb	r2, [r3, #170]
3769:..\src/command_processing.c ****     
3770:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 23762              		.loc 1 3770 0
 23763 000e 074B     		ldr	r3, .L971
 23764 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 23765 0012 0D2B     		cmp	r3, #13
 23766 0014 04D1     		bne	.L970
3771:..\src/command_processing.c ****         case 13:
3772:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 23767              		.loc 1 3772 0
 23768 0016 0121     		movs	r1, #1
 23769 0018 0C20     		movs	r0, #12
 23770 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3773:..\src/command_processing.c ****             break;
 23771              		.loc 1 3773 0
 23772 001e 03E0     		b	.L969
 23773              	.L970:
3774:..\src/command_processing.c ****         default:
3775:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 23774              		.loc 1 3775 0
 23775 0020 0121     		movs	r1, #1
 23776 0022 0220     		movs	r0, #2
 23777 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 23778              	.L969:
3776:..\src/command_processing.c ****     }
3777:..\src/command_processing.c **** }
 23779              		.loc 1 3777 0
 23780 0028 00BF     		nop
 23781 002a 80BD     		pop	{r7, pc}
 23782              	.L972:
 23783              		.align	2
 23784              	.L971:
 23785 002c 00000000 		.word	g_rx
 23786 0030 00000000 		.word	c_mem
 23787              		.cfi_endproc
 23788              	.LFE105:
 23789              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 23790              		.section	.text.cmd_ping,"ax",%progbits
 23791              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 528


 23792              		.global	cmd_ping
 23793              		.thumb
 23794              		.thumb_func
 23795              		.type	cmd_ping, %function
 23796              	cmd_ping:
 23797              	.LFB106:
3778:..\src/command_processing.c **** 
3779:..\src/command_processing.c **** void cmd_ping(){
 23798              		.loc 1 3779 0
 23799              		.cfi_startproc
 23800              		@ args = 0, pretend = 0, frame = 8
 23801              		@ frame_needed = 1, uses_anonymous_args = 0
 23802 0000 80B5     		push	{r7, lr}
 23803              		.cfi_def_cfa_offset 8
 23804              		.cfi_offset 7, -8
 23805              		.cfi_offset 14, -4
 23806 0002 82B0     		sub	sp, sp, #8
 23807              		.cfi_def_cfa_offset 16
 23808 0004 00AF     		add	r7, sp, #0
 23809              		.cfi_def_cfa_register 7
3780:..\src/command_processing.c **** 
3781:..\src/command_processing.c ****     uint8 packet_data[2];
3782:..\src/command_processing.c **** 
3783:..\src/command_processing.c ****     // Header
3784:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 23810              		.loc 1 3784 0
 23811 0006 0023     		movs	r3, #0
 23812 0008 3B71     		strb	r3, [r7, #4]
3785:..\src/command_processing.c ****     
3786:..\src/command_processing.c ****     // Load Payload
3787:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 23813              		.loc 1 3787 0
 23814 000a 0023     		movs	r3, #0
 23815 000c 7B71     		strb	r3, [r7, #5]
3788:..\src/command_processing.c **** 
3789:..\src/command_processing.c ****     // Send Package to uart
3790:..\src/command_processing.c ****     commWrite(packet_data, 2);
 23816              		.loc 1 3790 0
 23817 000e 3B1D     		adds	r3, r7, #4
 23818 0010 0221     		movs	r1, #2
 23819 0012 1846     		mov	r0, r3
 23820 0014 FFF7FEFF 		bl	commWrite
3791:..\src/command_processing.c **** }
 23821              		.loc 1 3791 0
 23822 0018 00BF     		nop
 23823 001a 0837     		adds	r7, r7, #8
 23824              		.cfi_def_cfa_offset 8
 23825 001c BD46     		mov	sp, r7
 23826              		.cfi_def_cfa_register 13
 23827              		@ sp needed
 23828 001e 80BD     		pop	{r7, pc}
 23829              		.cfi_endproc
 23830              	.LFE106:
 23831              		.size	cmd_ping, .-cmd_ping
 23832              		.section	.text.cmd_get_inputs,"ax",%progbits
 23833              		.align	2
 23834              		.global	cmd_get_inputs
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 529


 23835              		.thumb
 23836              		.thumb_func
 23837              		.type	cmd_get_inputs, %function
 23838              	cmd_get_inputs:
 23839              	.LFB107:
3792:..\src/command_processing.c **** 
3793:..\src/command_processing.c **** void cmd_get_inputs(){
 23840              		.loc 1 3793 0
 23841              		.cfi_startproc
 23842              		@ args = 0, pretend = 0, frame = 16
 23843              		@ frame_needed = 1, uses_anonymous_args = 0
 23844 0000 80B5     		push	{r7, lr}
 23845              		.cfi_def_cfa_offset 8
 23846              		.cfi_offset 7, -8
 23847              		.cfi_offset 14, -4
 23848 0002 84B0     		sub	sp, sp, #16
 23849              		.cfi_def_cfa_offset 24
 23850 0004 00AF     		add	r7, sp, #0
 23851              		.cfi_def_cfa_register 7
3794:..\src/command_processing.c **** 
3795:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3796:..\src/command_processing.c **** 
3797:..\src/command_processing.c ****     uint8 packet_data[6]; 
3798:..\src/command_processing.c ****     int16 aux_int16;
3799:..\src/command_processing.c ****     
3800:..\src/command_processing.c ****     //Header package
3801:..\src/command_processing.c **** 
3802:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 23852              		.loc 1 3802 0
 23853 0006 8323     		movs	r3, #131
 23854 0008 3B72     		strb	r3, [r7, #8]
3803:..\src/command_processing.c ****         
3804:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 23855              		.loc 1 3804 0
 23856 000a 234B     		ldr	r3, .L975
 23857 000c 1A68     		ldr	r2, [r3]
 23858 000e 234B     		ldr	r3, .L975+4
 23859 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23860 0014 1846     		mov	r0, r3
 23861 0016 2149     		ldr	r1, .L975+4
 23862 0018 0346     		mov	r3, r0
 23863 001a 5B00     		lsls	r3, r3, #1
 23864 001c 0344     		add	r3, r3, r0
 23865 001e 1B01     		lsls	r3, r3, #4
 23866 0020 0B44     		add	r3, r3, r1
 23867 0022 03F29513 		addw	r3, r3, #405
 23868 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23869 0028 42FA03F3 		asr	r3, r2, r3
 23870 002c 1BB2     		sxth	r3, r3
 23871 002e FB80     		strh	r3, [r7, #6]	@ movhi
3805:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23872              		.loc 1 3805 0
 23873 0030 BB1D     		adds	r3, r7, #6
 23874 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23875 0034 BB72     		strb	r3, [r7, #10]
3806:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23876              		.loc 1 3806 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 530


 23877 0036 BB1D     		adds	r3, r7, #6
 23878 0038 0133     		adds	r3, r3, #1
 23879 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23880 003c 7B72     		strb	r3, [r7, #9]
3807:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 23881              		.loc 1 3807 0
 23882 003e 164B     		ldr	r3, .L975
 23883 0040 1A69     		ldr	r2, [r3, #16]
 23884 0042 164B     		ldr	r3, .L975+4
 23885 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23886 0048 1846     		mov	r0, r3
 23887 004a 1449     		ldr	r1, .L975+4
 23888 004c 0346     		mov	r3, r0
 23889 004e 5B00     		lsls	r3, r3, #1
 23890 0050 0344     		add	r3, r3, r0
 23891 0052 1B01     		lsls	r3, r3, #4
 23892 0054 0B44     		add	r3, r3, r1
 23893 0056 03F29513 		addw	r3, r3, #405
 23894 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23895 005c 42FA03F3 		asr	r3, r2, r3
 23896 0060 1BB2     		sxth	r3, r3
 23897 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3808:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23898              		.loc 1 3808 0
 23899 0064 BB1D     		adds	r3, r7, #6
 23900 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23901 0068 3B73     		strb	r3, [r7, #12]
3809:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23902              		.loc 1 3809 0
 23903 006a BB1D     		adds	r3, r7, #6
 23904 006c 0133     		adds	r3, r3, #1
 23905 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23906 0070 FB72     		strb	r3, [r7, #11]
3810:..\src/command_processing.c ****     
3811:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3812:..\src/command_processing.c **** 
3813:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 23907              		.loc 1 3813 0
 23908 0072 07F10803 		add	r3, r7, #8
 23909 0076 0521     		movs	r1, #5
 23910 0078 1846     		mov	r0, r3
 23911 007a FFF7FEFF 		bl	LCRChecksum
 23912 007e 0346     		mov	r3, r0
 23913 0080 7B73     		strb	r3, [r7, #13]
3814:..\src/command_processing.c **** 
3815:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23914              		.loc 1 3815 0
 23915 0082 07F10803 		add	r3, r7, #8
 23916 0086 0621     		movs	r1, #6
 23917 0088 1846     		mov	r0, r3
 23918 008a FFF7FEFF 		bl	commWrite
3816:..\src/command_processing.c **** }
 23919              		.loc 1 3816 0
 23920 008e 00BF     		nop
 23921 0090 1037     		adds	r7, r7, #16
 23922              		.cfi_def_cfa_offset 8
 23923 0092 BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 531


 23924              		.cfi_def_cfa_register 13
 23925              		@ sp needed
 23926 0094 80BD     		pop	{r7, pc}
 23927              	.L976:
 23928 0096 00BF     		.align	2
 23929              	.L975:
 23930 0098 00000000 		.word	g_refOld
 23931 009c 00000000 		.word	g_mem
 23932              		.cfi_endproc
 23933              	.LFE107:
 23934              		.size	cmd_get_inputs, .-cmd_get_inputs
 23935              		.section	.text.cmd_store_params,"ax",%progbits
 23936              		.align	2
 23937              		.global	cmd_store_params
 23938              		.thumb
 23939              		.thumb_func
 23940              		.type	cmd_store_params, %function
 23941              	cmd_store_params:
 23942              	.LFB108:
3817:..\src/command_processing.c **** 
3818:..\src/command_processing.c **** void cmd_store_params(){
 23943              		.loc 1 3818 0
 23944              		.cfi_startproc
 23945              		@ args = 0, pretend = 0, frame = 16
 23946              		@ frame_needed = 1, uses_anonymous_args = 0
 23947 0000 80B5     		push	{r7, lr}
 23948              		.cfi_def_cfa_offset 8
 23949              		.cfi_offset 7, -8
 23950              		.cfi_offset 14, -4
 23951 0002 84B0     		sub	sp, sp, #16
 23952              		.cfi_def_cfa_offset 24
 23953 0004 00AF     		add	r7, sp, #0
 23954              		.cfi_def_cfa_register 7
3819:..\src/command_processing.c ****     
3820:..\src/command_processing.c ****     // Check input mode enabled
3821:..\src/command_processing.c ****     uint32 off_1;
3822:..\src/command_processing.c ****     float mult_1;
3823:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 23955              		.loc 1 3823 0
 23956 0006 0223     		movs	r3, #2
 23957 0008 FB73     		strb	r3, [r7, #15]
3824:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3825:..\src/command_processing.c ****     uint8 CYDATA old_id;
3826:..\src/command_processing.c ****     
3827:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 23958              		.loc 1 3827 0
 23959 000a 674B     		ldr	r3, .L988
 23960 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 23961 0010 002B     		cmp	r3, #0
 23962 0012 7CD1     		bne	.L978
3828:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 23963              		.loc 1 3828 0
 23964 0014 644B     		ldr	r3, .L988
 23965 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23966 001a 1946     		mov	r1, r3
 23967 001c 624A     		ldr	r2, .L988
 23968 001e 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 532


 23969 0020 5B00     		lsls	r3, r3, #1
 23970 0022 0B44     		add	r3, r3, r1
 23971 0024 1B01     		lsls	r3, r3, #4
 23972 0026 1344     		add	r3, r3, r2
 23973 0028 03F5CC73 		add	r3, r3, #408
 23974 002c 1B68     		ldr	r3, [r3]
 23975 002e BB60     		str	r3, [r7, #8]
3829:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 23976              		.loc 1 3829 0
 23977 0030 5D4B     		ldr	r3, .L988
 23978 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23979 0036 1946     		mov	r1, r3
 23980 0038 5B4A     		ldr	r2, .L988
 23981 003a 0B46     		mov	r3, r1
 23982 003c 5B00     		lsls	r3, r3, #1
 23983 003e 0B44     		add	r3, r3, r1
 23984 0040 1B01     		lsls	r3, r3, #4
 23985 0042 1344     		add	r3, r3, r2
 23986 0044 03F5D273 		add	r3, r3, #420
 23987 0048 1B68     		ldr	r3, [r3]	@ float
 23988 004a 7B60     		str	r3, [r7, #4]	@ float
3830:..\src/command_processing.c **** 
3831:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 23989              		.loc 1 3831 0
 23990 004c 574B     		ldr	r3, .L988+4
 23991 004e 1B68     		ldr	r3, [r3]
 23992 0050 1846     		mov	r0, r3
 23993 0052 FFF7FEFF 		bl	__aeabi_i2f
 23994 0056 0346     		mov	r3, r0
 23995 0058 7968     		ldr	r1, [r7, #4]	@ float
 23996 005a 1846     		mov	r0, r3
 23997 005c FFF7FEFF 		bl	__aeabi_fdiv
 23998 0060 0346     		mov	r3, r0
 23999 0062 1846     		mov	r0, r3
 24000 0064 FFF7FEFF 		bl	__aeabi_f2iz
 24001 0068 0246     		mov	r2, r0
 24002 006a 504B     		ldr	r3, .L988+4
 24003 006c 1A60     		str	r2, [r3]
3832:..\src/command_processing.c **** 
3833:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 24004              		.loc 1 3833 0
 24005 006e 4F4B     		ldr	r3, .L988+4
 24006 0070 1B68     		ldr	r3, [r3]
 24007 0072 1846     		mov	r0, r3
 24008 0074 FFF7FEFF 		bl	__aeabi_i2f
 24009 0078 4B4B     		ldr	r3, .L988
 24010 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24011 007e 1946     		mov	r1, r3
 24012 0080 4B4A     		ldr	r2, .L988+8
 24013 0082 0B46     		mov	r3, r1
 24014 0084 5B00     		lsls	r3, r3, #1
 24015 0086 0B44     		add	r3, r3, r1
 24016 0088 1B01     		lsls	r3, r3, #4
 24017 008a 1344     		add	r3, r3, r2
 24018 008c 03F5D273 		add	r3, r3, #420
 24019 0090 1B68     		ldr	r3, [r3]	@ float
 24020 0092 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 533


 24021 0094 FFF7FEFF 		bl	__aeabi_fmul
 24022 0098 0346     		mov	r3, r0
 24023 009a 1846     		mov	r0, r3
 24024 009c FFF7FEFF 		bl	__aeabi_f2iz
 24025 00a0 0246     		mov	r2, r0
 24026 00a2 424B     		ldr	r3, .L988+4
 24027 00a4 1A60     		str	r2, [r3]
3834:..\src/command_processing.c **** 
3835:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 24028              		.loc 1 3835 0
 24029 00a6 414B     		ldr	r3, .L988+4
 24030 00a8 1B68     		ldr	r3, [r3]
 24031 00aa 1846     		mov	r0, r3
 24032 00ac 3E4B     		ldr	r3, .L988
 24033 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24034 00b2 1946     		mov	r1, r3
 24035 00b4 3E4A     		ldr	r2, .L988+8
 24036 00b6 0B46     		mov	r3, r1
 24037 00b8 5B00     		lsls	r3, r3, #1
 24038 00ba 0B44     		add	r3, r3, r1
 24039 00bc 1B01     		lsls	r3, r3, #4
 24040 00be 1344     		add	r3, r3, r2
 24041 00c0 03F5CC73 		add	r3, r3, #408
 24042 00c4 1B68     		ldr	r3, [r3]
 24043 00c6 1A46     		mov	r2, r3
 24044 00c8 BB68     		ldr	r3, [r7, #8]
 24045 00ca D31A     		subs	r3, r2, r3
 24046 00cc 0344     		add	r3, r3, r0
 24047 00ce 1A46     		mov	r2, r3
 24048 00d0 364B     		ldr	r3, .L988+4
 24049 00d2 1A60     		str	r2, [r3]
3836:..\src/command_processing.c ****         
3837:..\src/command_processing.c ****         // Check position Limits
3838:..\src/command_processing.c **** 
3839:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 24050              		.loc 1 3839 0
 24051 00d4 344B     		ldr	r3, .L988
 24052 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 24053 00da 002B     		cmp	r3, #0
 24054 00dc 17D0     		beq	.L978
3840:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 24055              		.loc 1 3840 0
 24056 00de 334B     		ldr	r3, .L988+4
 24057 00e0 1A68     		ldr	r2, [r3]
 24058 00e2 314B     		ldr	r3, .L988
 24059 00e4 D3F8E430 		ldr	r3, [r3, #228]
 24060 00e8 9A42     		cmp	r2, r3
 24061 00ea 04DA     		bge	.L979
3841:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 24062              		.loc 1 3841 0
 24063 00ec 2E4B     		ldr	r3, .L988
 24064 00ee D3F8E430 		ldr	r3, [r3, #228]
 24065 00f2 2E4A     		ldr	r2, .L988+4
 24066 00f4 1360     		str	r3, [r2]
 24067              	.L979:
3842:..\src/command_processing.c **** 
3843:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 534


 24068              		.loc 1 3843 0
 24069 00f6 2D4B     		ldr	r3, .L988+4
 24070 00f8 1A68     		ldr	r2, [r3]
 24071 00fa 2B4B     		ldr	r3, .L988
 24072 00fc D3F8E830 		ldr	r3, [r3, #232]
 24073 0100 9A42     		cmp	r2, r3
 24074 0102 04DD     		ble	.L978
3844:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 24075              		.loc 1 3844 0
 24076 0104 284B     		ldr	r3, .L988
 24077 0106 D3F8E830 		ldr	r3, [r3, #232]
 24078 010a 284A     		ldr	r2, .L988+4
 24079 010c 1360     		str	r3, [r2]
 24080              	.L978:
3845:..\src/command_processing.c ****         }
3846:..\src/command_processing.c ****     }
3847:..\src/command_processing.c ****     
3848:..\src/command_processing.c ****     // If SD is used, create new param and data file
3849:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 24081              		.loc 1 3849 0
 24082 010e 264B     		ldr	r3, .L988
 24083 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 24084 0114 012B     		cmp	r3, #1
 24085 0116 06D1     		bne	.L980
3850:..\src/command_processing.c ****         FS_FClose(pFile);
 24086              		.loc 1 3850 0
 24087 0118 264B     		ldr	r3, .L988+12
 24088 011a 1B68     		ldr	r3, [r3]
 24089 011c 1846     		mov	r0, r3
 24090 011e FFF7FEFF 		bl	FS_FClose
3851:..\src/command_processing.c ****         
3852:..\src/command_processing.c ****         InitSD_FS();
 24091              		.loc 1 3852 0
 24092 0122 FFF7FEFF 		bl	InitSD_FS
 24093              	.L980:
3853:..\src/command_processing.c ****     }
3854:..\src/command_processing.c ****    
3855:..\src/command_processing.c ****     // Store params 
3856:..\src/command_processing.c **** 
3857:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 24094              		.loc 1 3857 0
 24095 0126 204B     		ldr	r3, .L988
 24096 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 24097 012c 204B     		ldr	r3, .L988+8
 24098 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 24099 0132 9A42     		cmp	r2, r3
 24100 0134 21D0     		beq	.L981
3858:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 24101              		.loc 1 3858 0
 24102 0136 1C4B     		ldr	r3, .L988
 24103 0138 93F8A030 		ldrb	r3, [r3, #160]
 24104 013c FB70     		strb	r3, [r7, #3]
3859:..\src/command_processing.c ****         if(memStore(0)) {
 24105              		.loc 1 3859 0
 24106 013e 0020     		movs	r0, #0
 24107 0140 FFF7FEFF 		bl	memStore
 24108 0144 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 535


 24109 0146 002B     		cmp	r3, #0
 24110 0148 0BD0     		beq	.L982
3860:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 24111              		.loc 1 3860 0
 24112 014a 0123     		movs	r3, #1
 24113 014c 3B70     		strb	r3, [r7]
3861:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 24114              		.loc 1 3861 0
 24115 014e 0123     		movs	r3, #1
 24116 0150 7B70     		strb	r3, [r7, #1]
3862:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 24117              		.loc 1 3862 0
 24118 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24119 0154 99B2     		uxth	r1, r3
 24120 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 24121 0158 3B46     		mov	r3, r7
 24122 015a 1846     		mov	r0, r3
 24123 015c FFF7FEFF 		bl	commWrite_old_id
 24124 0160 18E0     		b	.L984
 24125              	.L982:
3863:..\src/command_processing.c ****         }    
3864:..\src/command_processing.c ****         else{
3865:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 24126              		.loc 1 3865 0
 24127 0162 0023     		movs	r3, #0
 24128 0164 3B70     		strb	r3, [r7]
3866:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 24129              		.loc 1 3866 0
 24130 0166 0023     		movs	r3, #0
 24131 0168 7B70     		strb	r3, [r7, #1]
3867:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 24132              		.loc 1 3867 0
 24133 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24134 016c 99B2     		uxth	r1, r3
 24135 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 24136 0170 3B46     		mov	r3, r7
 24137 0172 1846     		mov	r0, r3
 24138 0174 FFF7FEFF 		bl	commWrite_old_id
 24139 0178 0CE0     		b	.L984
 24140              	.L981:
3868:..\src/command_processing.c ****         }
3869:..\src/command_processing.c ****     }    
3870:..\src/command_processing.c ****     else {
3871:..\src/command_processing.c ****         if(memStore(0))
 24141              		.loc 1 3871 0
 24142 017a 0020     		movs	r0, #0
 24143 017c FFF7FEFF 		bl	memStore
 24144 0180 0346     		mov	r3, r0
 24145 0182 002B     		cmp	r3, #0
 24146 0184 03D0     		beq	.L985
3872:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 24147              		.loc 1 3872 0
 24148 0186 0120     		movs	r0, #1
 24149 0188 FFF7FEFF 		bl	sendAcknowledgment
 24150 018c 02E0     		b	.L984
 24151              	.L985:
3873:..\src/command_processing.c ****         else
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 536


3874:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 24152              		.loc 1 3874 0
 24153 018e 0020     		movs	r0, #0
 24154 0190 FFF7FEFF 		bl	sendAcknowledgment
 24155              	.L984:
3875:..\src/command_processing.c ****     }
3876:..\src/command_processing.c ****     
3877:..\src/command_processing.c ****     // FW reset (if necessary)
3878:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 24156              		.loc 1 3878 0
 24157 0194 084B     		ldr	r3, .L988+16
 24158 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24159 0198 012B     		cmp	r3, #1
 24160 019a 01D1     		bne	.L987
3879:..\src/command_processing.c ****         CySoftwareReset();
 24161              		.loc 1 3879 0
 24162 019c FFF7FEFF 		bl	CySoftwareReset
 24163              	.L987:
3880:..\src/command_processing.c ****     }
3881:..\src/command_processing.c **** }
 24164              		.loc 1 3881 0
 24165 01a0 00BF     		nop
 24166 01a2 1037     		adds	r7, r7, #16
 24167              		.cfi_def_cfa_offset 8
 24168 01a4 BD46     		mov	sp, r7
 24169              		.cfi_def_cfa_register 13
 24170              		@ sp needed
 24171 01a6 80BD     		pop	{r7, pc}
 24172              	.L989:
 24173              		.align	2
 24174              	.L988:
 24175 01a8 00000000 		.word	c_mem
 24176 01ac 00000000 		.word	g_refNew
 24177 01b0 00000000 		.word	g_mem
 24178 01b4 00000000 		.word	pFile
 24179 01b8 00000000 		.word	reset_PSoC_flag
 24180              		.cfi_endproc
 24181              	.LFE108:
 24182              		.size	cmd_store_params, .-cmd_store_params
 24183              		.section	.text.cmd_get_emg,"ax",%progbits
 24184              		.align	2
 24185              		.global	cmd_get_emg
 24186              		.thumb
 24187              		.thumb_func
 24188              		.type	cmd_get_emg, %function
 24189              	cmd_get_emg:
 24190              	.LFB109:
3882:..\src/command_processing.c **** 
3883:..\src/command_processing.c **** void cmd_get_emg(){
 24191              		.loc 1 3883 0
 24192              		.cfi_startproc
 24193              		@ args = 0, pretend = 0, frame = 16
 24194              		@ frame_needed = 1, uses_anonymous_args = 0
 24195 0000 80B5     		push	{r7, lr}
 24196              		.cfi_def_cfa_offset 8
 24197              		.cfi_offset 7, -8
 24198              		.cfi_offset 14, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 537


 24199 0002 84B0     		sub	sp, sp, #16
 24200              		.cfi_def_cfa_offset 24
 24201 0004 00AF     		add	r7, sp, #0
 24202              		.cfi_def_cfa_register 7
3884:..\src/command_processing.c ****     
3885:..\src/command_processing.c ****     uint8 packet_data[6];
3886:..\src/command_processing.c ****     int16 aux_int16;
3887:..\src/command_processing.c ****     
3888:..\src/command_processing.c ****     // Header        
3889:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 24203              		.loc 1 3889 0
 24204 0006 8823     		movs	r3, #136
 24205 0008 3B72     		strb	r3, [r7, #8]
3890:..\src/command_processing.c ****     
3891:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 24206              		.loc 1 3891 0
 24207 000a 144B     		ldr	r3, .L991
 24208 000c 1B68     		ldr	r3, [r3]
 24209 000e 1BB2     		sxth	r3, r3
 24210 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3892:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24211              		.loc 1 3892 0
 24212 0012 BB1D     		adds	r3, r7, #6
 24213 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24214 0016 BB72     		strb	r3, [r7, #10]
3893:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24215              		.loc 1 3893 0
 24216 0018 BB1D     		adds	r3, r7, #6
 24217 001a 0133     		adds	r3, r3, #1
 24218 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24219 001e 7B72     		strb	r3, [r7, #9]
3894:..\src/command_processing.c ****     
3895:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 24220              		.loc 1 3895 0
 24221 0020 0E4B     		ldr	r3, .L991
 24222 0022 5B68     		ldr	r3, [r3, #4]
 24223 0024 1BB2     		sxth	r3, r3
 24224 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3896:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24225              		.loc 1 3896 0
 24226 0028 BB1D     		adds	r3, r7, #6
 24227 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24228 002c 3B73     		strb	r3, [r7, #12]
3897:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24229              		.loc 1 3897 0
 24230 002e BB1D     		adds	r3, r7, #6
 24231 0030 0133     		adds	r3, r3, #1
 24232 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24233 0034 FB72     		strb	r3, [r7, #11]
3898:..\src/command_processing.c **** 
3899:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24234              		.loc 1 3899 0
 24235 0036 07F10803 		add	r3, r7, #8
 24236 003a 0521     		movs	r1, #5
 24237 003c 1846     		mov	r0, r3
 24238 003e FFF7FEFF 		bl	LCRChecksum
 24239 0042 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 538


 24240 0044 7B73     		strb	r3, [r7, #13]
3900:..\src/command_processing.c **** 
3901:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24241              		.loc 1 3901 0
 24242 0046 07F10803 		add	r3, r7, #8
 24243 004a 0621     		movs	r1, #6
 24244 004c 1846     		mov	r0, r3
 24245 004e FFF7FEFF 		bl	commWrite
3902:..\src/command_processing.c **** 
3903:..\src/command_processing.c **** }
 24246              		.loc 1 3903 0
 24247 0052 00BF     		nop
 24248 0054 1037     		adds	r7, r7, #16
 24249              		.cfi_def_cfa_offset 8
 24250 0056 BD46     		mov	sp, r7
 24251              		.cfi_def_cfa_register 13
 24252              		@ sp needed
 24253 0058 80BD     		pop	{r7, pc}
 24254              	.L992:
 24255 005a 00BF     		.align	2
 24256              	.L991:
 24257 005c 00000000 		.word	g_adc_measOld
 24258              		.cfi_endproc
 24259              	.LFE109:
 24260              		.size	cmd_get_emg, .-cmd_get_emg
 24261              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 24262              		.align	2
 24263              		.global	cmd_get_imu_readings
 24264              		.thumb
 24265              		.thumb_func
 24266              		.type	cmd_get_imu_readings, %function
 24267              	cmd_get_imu_readings:
 24268              	.LFB110:
3904:..\src/command_processing.c **** 
3905:..\src/command_processing.c **** void cmd_get_imu_readings(){
 24269              		.loc 1 3905 0
 24270              		.cfi_startproc
 24271              		@ args = 0, pretend = 0, frame = 400
 24272              		@ frame_needed = 1, uses_anonymous_args = 0
 24273 0000 90B5     		push	{r4, r7, lr}
 24274              		.cfi_def_cfa_offset 12
 24275              		.cfi_offset 4, -12
 24276              		.cfi_offset 7, -8
 24277              		.cfi_offset 14, -4
 24278 0002 E5B0     		sub	sp, sp, #404
 24279              		.cfi_def_cfa_offset 416
 24280 0004 00AF     		add	r7, sp, #0
 24281              		.cfi_def_cfa_register 7
3906:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3907:..\src/command_processing.c ****     
3908:..\src/command_processing.c ****     uint8 k_imu;
3909:..\src/command_processing.c ****     uint16 c = 1;
 24282              		.loc 1 3909 0
 24283 0006 0123     		movs	r3, #1
 24284 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3910:..\src/command_processing.c ****     uint8 k = 0;
 24285              		.loc 1 3910 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 539


 24286 000c 0023     		movs	r3, #0
 24287 000e 87F88B31 		strb	r3, [r7, #395]
3911:..\src/command_processing.c ****     uint16 gl_c = 1;
 24288              		.loc 1 3911 0
 24289 0012 0123     		movs	r3, #1
 24290 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3912:..\src/command_processing.c ****     int16 aux_int16;
3913:..\src/command_processing.c ****     float aux_float;
3914:..\src/command_processing.c ****     
3915:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3916:..\src/command_processing.c ****     uint8 packet_data[350];
3917:..\src/command_processing.c ****     uint8 single_packet[32];
3918:..\src/command_processing.c ****     
3919:..\src/command_processing.c ****     //Header package 
3920:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 24291              		.loc 1 3920 0
 24292 0018 07F12003 		add	r3, r7, #32
 24293 001c A122     		movs	r2, #161
 24294 001e 1A70     		strb	r2, [r3]
3921:..\src/command_processing.c ****  
3922:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 24295              		.loc 1 3922 0
 24296 0020 0023     		movs	r3, #0
 24297 0022 87F88F31 		strb	r3, [r7, #399]
 24298 0026 82E2     		b	.L994
 24299              	.L1010:
3923:..\src/command_processing.c ****     {	
3924:..\src/command_processing.c ****             
3925:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 24300              		.loc 1 3925 0
 24301 0028 3B46     		mov	r3, r7
 24302 002a 3A22     		movs	r2, #58
 24303 002c 1A70     		strb	r2, [r3]
3926:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 24304              		.loc 1 3926 0
 24305 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24306 0032 DB4A     		ldr	r2, .L1011
 24307 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24308 0036 1946     		mov	r1, r3
 24309 0038 DA4A     		ldr	r2, .L1011+4
 24310 003a 0B46     		mov	r3, r1
 24311 003c 9B00     		lsls	r3, r3, #2
 24312 003e 0B44     		add	r3, r3, r1
 24313 0040 1344     		add	r3, r3, r2
 24314 0042 03F20223 		addw	r3, r3, #514
 24315 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24316 0048 002B     		cmp	r3, #0
 24317 004a 5DD0     		beq	.L995
3927:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 24318              		.loc 1 3927 0
 24319 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24320 0050 D549     		ldr	r1, .L1011+8
 24321 0052 1346     		mov	r3, r2
 24322 0054 9B00     		lsls	r3, r3, #2
 24323 0056 1344     		add	r3, r3, r2
 24324 0058 DB00     		lsls	r3, r3, #3
 24325 005a 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 540


 24326 005c 0233     		adds	r3, r3, #2
 24327 005e B3F90030 		ldrsh	r3, [r3]
 24328 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3928:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24329              		.loc 1 3928 0
 24330 0066 B7F88C31 		ldrh	r3, [r7, #396]
 24331 006a 0133     		adds	r3, r3, #1
 24332 006c 07F5C372 		add	r2, r7, #390
 24333 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24334 0072 3A46     		mov	r2, r7
 24335 0074 D154     		strb	r1, [r2, r3]
3929:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24336              		.loc 1 3929 0
 24337 0076 B7F88C21 		ldrh	r2, [r7, #396]
 24338 007a 07F5C373 		add	r3, r7, #390
 24339 007e 0133     		adds	r3, r3, #1
 24340 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24341 0082 3B46     		mov	r3, r7
 24342 0084 9954     		strb	r1, [r3, r2]
3930:..\src/command_processing.c **** 
3931:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 24343              		.loc 1 3931 0
 24344 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24345 008a C749     		ldr	r1, .L1011+8
 24346 008c 1346     		mov	r3, r2
 24347 008e 9B00     		lsls	r3, r3, #2
 24348 0090 1344     		add	r3, r3, r2
 24349 0092 DB00     		lsls	r3, r3, #3
 24350 0094 0B44     		add	r3, r3, r1
 24351 0096 0433     		adds	r3, r3, #4
 24352 0098 B3F90030 		ldrsh	r3, [r3]
 24353 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3932:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24354              		.loc 1 3932 0
 24355 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 24356 00a4 0333     		adds	r3, r3, #3
 24357 00a6 07F5C372 		add	r2, r7, #390
 24358 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24359 00ac 3A46     		mov	r2, r7
 24360 00ae D154     		strb	r1, [r2, r3]
3933:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24361              		.loc 1 3933 0
 24362 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 24363 00b4 9A1C     		adds	r2, r3, #2
 24364 00b6 07F5C373 		add	r3, r7, #390
 24365 00ba 0133     		adds	r3, r3, #1
 24366 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24367 00be 3B46     		mov	r3, r7
 24368 00c0 9954     		strb	r1, [r3, r2]
3934:..\src/command_processing.c **** 
3935:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 24369              		.loc 1 3935 0
 24370 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24371 00c6 B849     		ldr	r1, .L1011+8
 24372 00c8 1346     		mov	r3, r2
 24373 00ca 9B00     		lsls	r3, r3, #2
 24374 00cc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 541


 24375 00ce DB00     		lsls	r3, r3, #3
 24376 00d0 0B44     		add	r3, r3, r1
 24377 00d2 0633     		adds	r3, r3, #6
 24378 00d4 B3F90030 		ldrsh	r3, [r3]
 24379 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3936:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24380              		.loc 1 3936 0
 24381 00dc B7F88C31 		ldrh	r3, [r7, #396]
 24382 00e0 0533     		adds	r3, r3, #5
 24383 00e2 07F5C372 		add	r2, r7, #390
 24384 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24385 00e8 3A46     		mov	r2, r7
 24386 00ea D154     		strb	r1, [r2, r3]
3937:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24387              		.loc 1 3937 0
 24388 00ec B7F88C31 		ldrh	r3, [r7, #396]
 24389 00f0 1A1D     		adds	r2, r3, #4
 24390 00f2 07F5C373 		add	r3, r7, #390
 24391 00f6 0133     		adds	r3, r3, #1
 24392 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24393 00fa 3B46     		mov	r3, r7
 24394 00fc 9954     		strb	r1, [r3, r2]
3938:..\src/command_processing.c **** 
3939:..\src/command_processing.c ****             c = c + 6;
 24395              		.loc 1 3939 0
 24396 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24397 0102 0633     		adds	r3, r3, #6
 24398 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24399              	.L995:
3940:..\src/command_processing.c ****         }
3941:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 24400              		.loc 1 3941 0
 24401 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24402 010c A44A     		ldr	r2, .L1011
 24403 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24404 0110 1946     		mov	r1, r3
 24405 0112 A44A     		ldr	r2, .L1011+4
 24406 0114 0B46     		mov	r3, r1
 24407 0116 9B00     		lsls	r3, r3, #2
 24408 0118 0B44     		add	r3, r3, r1
 24409 011a 1344     		add	r3, r3, r2
 24410 011c 03F20323 		addw	r3, r3, #515
 24411 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24412 0122 002B     		cmp	r3, #0
 24413 0124 5DD0     		beq	.L996
3942:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 24414              		.loc 1 3942 0
 24415 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24416 012a 9F49     		ldr	r1, .L1011+8
 24417 012c 1346     		mov	r3, r2
 24418 012e 9B00     		lsls	r3, r3, #2
 24419 0130 1344     		add	r3, r3, r2
 24420 0132 DB00     		lsls	r3, r3, #3
 24421 0134 0B44     		add	r3, r3, r1
 24422 0136 0833     		adds	r3, r3, #8
 24423 0138 B3F90030 		ldrsh	r3, [r3]
 24424 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 542


3943:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24425              		.loc 1 3943 0
 24426 0140 B7F88C31 		ldrh	r3, [r7, #396]
 24427 0144 0133     		adds	r3, r3, #1
 24428 0146 07F5C372 		add	r2, r7, #390
 24429 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24430 014c 3A46     		mov	r2, r7
 24431 014e D154     		strb	r1, [r2, r3]
3944:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24432              		.loc 1 3944 0
 24433 0150 B7F88C21 		ldrh	r2, [r7, #396]
 24434 0154 07F5C373 		add	r3, r7, #390
 24435 0158 0133     		adds	r3, r3, #1
 24436 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24437 015c 3B46     		mov	r3, r7
 24438 015e 9954     		strb	r1, [r3, r2]
3945:..\src/command_processing.c **** 
3946:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 24439              		.loc 1 3946 0
 24440 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24441 0164 9049     		ldr	r1, .L1011+8
 24442 0166 1346     		mov	r3, r2
 24443 0168 9B00     		lsls	r3, r3, #2
 24444 016a 1344     		add	r3, r3, r2
 24445 016c DB00     		lsls	r3, r3, #3
 24446 016e 0B44     		add	r3, r3, r1
 24447 0170 0A33     		adds	r3, r3, #10
 24448 0172 B3F90030 		ldrsh	r3, [r3]
 24449 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3947:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24450              		.loc 1 3947 0
 24451 017a B7F88C31 		ldrh	r3, [r7, #396]
 24452 017e 0333     		adds	r3, r3, #3
 24453 0180 07F5C372 		add	r2, r7, #390
 24454 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24455 0186 3A46     		mov	r2, r7
 24456 0188 D154     		strb	r1, [r2, r3]
3948:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24457              		.loc 1 3948 0
 24458 018a B7F88C31 		ldrh	r3, [r7, #396]
 24459 018e 9A1C     		adds	r2, r3, #2
 24460 0190 07F5C373 		add	r3, r7, #390
 24461 0194 0133     		adds	r3, r3, #1
 24462 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24463 0198 3B46     		mov	r3, r7
 24464 019a 9954     		strb	r1, [r3, r2]
3949:..\src/command_processing.c **** 
3950:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 24465              		.loc 1 3950 0
 24466 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24467 01a0 8149     		ldr	r1, .L1011+8
 24468 01a2 1346     		mov	r3, r2
 24469 01a4 9B00     		lsls	r3, r3, #2
 24470 01a6 1344     		add	r3, r3, r2
 24471 01a8 DB00     		lsls	r3, r3, #3
 24472 01aa 0B44     		add	r3, r3, r1
 24473 01ac 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 543


 24474 01ae B3F90030 		ldrsh	r3, [r3]
 24475 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3951:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24476              		.loc 1 3951 0
 24477 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 24478 01ba 0533     		adds	r3, r3, #5
 24479 01bc 07F5C372 		add	r2, r7, #390
 24480 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24481 01c2 3A46     		mov	r2, r7
 24482 01c4 D154     		strb	r1, [r2, r3]
3952:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24483              		.loc 1 3952 0
 24484 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 24485 01ca 1A1D     		adds	r2, r3, #4
 24486 01cc 07F5C373 		add	r3, r7, #390
 24487 01d0 0133     		adds	r3, r3, #1
 24488 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24489 01d4 3B46     		mov	r3, r7
 24490 01d6 9954     		strb	r1, [r3, r2]
3953:..\src/command_processing.c **** 
3954:..\src/command_processing.c ****             c = c + 6;
 24491              		.loc 1 3954 0
 24492 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24493 01dc 0633     		adds	r3, r3, #6
 24494 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24495              	.L996:
3955:..\src/command_processing.c ****         }
3956:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 24496              		.loc 1 3956 0
 24497 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24498 01e6 6E4A     		ldr	r2, .L1011
 24499 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24500 01ea 1946     		mov	r1, r3
 24501 01ec 6D4A     		ldr	r2, .L1011+4
 24502 01ee 0B46     		mov	r3, r1
 24503 01f0 9B00     		lsls	r3, r3, #2
 24504 01f2 0B44     		add	r3, r3, r1
 24505 01f4 1344     		add	r3, r3, r2
 24506 01f6 03F50173 		add	r3, r3, #516
 24507 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24508 01fc 002B     		cmp	r3, #0
 24509 01fe 5DD0     		beq	.L997
3957:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 24510              		.loc 1 3957 0
 24511 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24512 0204 6849     		ldr	r1, .L1011+8
 24513 0206 1346     		mov	r3, r2
 24514 0208 9B00     		lsls	r3, r3, #2
 24515 020a 1344     		add	r3, r3, r2
 24516 020c DB00     		lsls	r3, r3, #3
 24517 020e 0B44     		add	r3, r3, r1
 24518 0210 0E33     		adds	r3, r3, #14
 24519 0212 B3F90030 		ldrsh	r3, [r3]
 24520 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3958:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24521              		.loc 1 3958 0
 24522 021a B7F88C31 		ldrh	r3, [r7, #396]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 544


 24523 021e 0133     		adds	r3, r3, #1
 24524 0220 07F5C372 		add	r2, r7, #390
 24525 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24526 0226 3A46     		mov	r2, r7
 24527 0228 D154     		strb	r1, [r2, r3]
3959:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24528              		.loc 1 3959 0
 24529 022a B7F88C21 		ldrh	r2, [r7, #396]
 24530 022e 07F5C373 		add	r3, r7, #390
 24531 0232 0133     		adds	r3, r3, #1
 24532 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24533 0236 3B46     		mov	r3, r7
 24534 0238 9954     		strb	r1, [r3, r2]
3960:..\src/command_processing.c **** 
3961:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 24535              		.loc 1 3961 0
 24536 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24537 023e 5A49     		ldr	r1, .L1011+8
 24538 0240 1346     		mov	r3, r2
 24539 0242 9B00     		lsls	r3, r3, #2
 24540 0244 1344     		add	r3, r3, r2
 24541 0246 DB00     		lsls	r3, r3, #3
 24542 0248 0B44     		add	r3, r3, r1
 24543 024a 1033     		adds	r3, r3, #16
 24544 024c B3F90030 		ldrsh	r3, [r3]
 24545 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3962:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24546              		.loc 1 3962 0
 24547 0254 B7F88C31 		ldrh	r3, [r7, #396]
 24548 0258 0333     		adds	r3, r3, #3
 24549 025a 07F5C372 		add	r2, r7, #390
 24550 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24551 0260 3A46     		mov	r2, r7
 24552 0262 D154     		strb	r1, [r2, r3]
3963:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24553              		.loc 1 3963 0
 24554 0264 B7F88C31 		ldrh	r3, [r7, #396]
 24555 0268 9A1C     		adds	r2, r3, #2
 24556 026a 07F5C373 		add	r3, r7, #390
 24557 026e 0133     		adds	r3, r3, #1
 24558 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24559 0272 3B46     		mov	r3, r7
 24560 0274 9954     		strb	r1, [r3, r2]
3964:..\src/command_processing.c **** 
3965:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 24561              		.loc 1 3965 0
 24562 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24563 027a 4B49     		ldr	r1, .L1011+8
 24564 027c 1346     		mov	r3, r2
 24565 027e 9B00     		lsls	r3, r3, #2
 24566 0280 1344     		add	r3, r3, r2
 24567 0282 DB00     		lsls	r3, r3, #3
 24568 0284 0B44     		add	r3, r3, r1
 24569 0286 1233     		adds	r3, r3, #18
 24570 0288 B3F90030 		ldrsh	r3, [r3]
 24571 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3966:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 545


 24572              		.loc 1 3966 0
 24573 0290 B7F88C31 		ldrh	r3, [r7, #396]
 24574 0294 0533     		adds	r3, r3, #5
 24575 0296 07F5C372 		add	r2, r7, #390
 24576 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24577 029c 3A46     		mov	r2, r7
 24578 029e D154     		strb	r1, [r2, r3]
3967:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24579              		.loc 1 3967 0
 24580 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 24581 02a4 1A1D     		adds	r2, r3, #4
 24582 02a6 07F5C373 		add	r3, r7, #390
 24583 02aa 0133     		adds	r3, r3, #1
 24584 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24585 02ae 3B46     		mov	r3, r7
 24586 02b0 9954     		strb	r1, [r3, r2]
3968:..\src/command_processing.c **** 
3969:..\src/command_processing.c ****             c = c + 6;
 24587              		.loc 1 3969 0
 24588 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24589 02b6 0633     		adds	r3, r3, #6
 24590 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24591              	.L997:
3970:..\src/command_processing.c ****         }
3971:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 24592              		.loc 1 3971 0
 24593 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24594 02c0 374A     		ldr	r2, .L1011
 24595 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24596 02c4 1946     		mov	r1, r3
 24597 02c6 374A     		ldr	r2, .L1011+4
 24598 02c8 0B46     		mov	r3, r1
 24599 02ca 9B00     		lsls	r3, r3, #2
 24600 02cc 0B44     		add	r3, r3, r1
 24601 02ce 1344     		add	r3, r3, r2
 24602 02d0 03F20523 		addw	r3, r3, #517
 24603 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24604 02d6 002B     		cmp	r3, #0
 24605 02d8 00F0AF80 		beq	.L998
3972:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 24606              		.loc 1 3972 0
 24607 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24608 02e0 3149     		ldr	r1, .L1011+8
 24609 02e2 1346     		mov	r3, r2
 24610 02e4 9B00     		lsls	r3, r3, #2
 24611 02e6 1344     		add	r3, r3, r2
 24612 02e8 DB00     		lsls	r3, r3, #3
 24613 02ea 0B44     		add	r3, r3, r1
 24614 02ec 1433     		adds	r3, r3, #20
 24615 02ee 1B68     		ldr	r3, [r3]	@ float
 24616 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3973:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24617              		.loc 1 3973 0
 24618 02f4 0023     		movs	r3, #0
 24619 02f6 87F88B31 		strb	r3, [r7, #395]
 24620 02fa 13E0     		b	.L999
 24621              	.L1000:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 546


3974:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 24622              		.loc 1 3974 0 discriminator 3
 24623 02fc B7F88C31 		ldrh	r3, [r7, #396]
 24624 0300 1A1D     		adds	r2, r3, #4
 24625 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24626 0306 D31A     		subs	r3, r2, r3
 24627 0308 013B     		subs	r3, r3, #1
 24628 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24629 030e 07F5C071 		add	r1, r7, #384
 24630 0312 0A44     		add	r2, r2, r1
 24631 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24632 0316 3A46     		mov	r2, r7
 24633 0318 D154     		strb	r1, [r2, r3]
3973:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24634              		.loc 1 3973 0 discriminator 3
 24635 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24636 031e 0133     		adds	r3, r3, #1
 24637 0320 87F88B31 		strb	r3, [r7, #395]
 24638              	.L999:
3973:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24639              		.loc 1 3973 0 is_stmt 0 discriminator 1
 24640 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24641 0328 032B     		cmp	r3, #3
 24642 032a E7D9     		bls	.L1000
3975:..\src/command_processing.c ****             }
3976:..\src/command_processing.c **** 
3977:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 24643              		.loc 1 3977 0 is_stmt 1
 24644 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24645 0330 1D49     		ldr	r1, .L1011+8
 24646 0332 1346     		mov	r3, r2
 24647 0334 9B00     		lsls	r3, r3, #2
 24648 0336 1344     		add	r3, r3, r2
 24649 0338 DB00     		lsls	r3, r3, #3
 24650 033a 0B44     		add	r3, r3, r1
 24651 033c 1833     		adds	r3, r3, #24
 24652 033e 1B68     		ldr	r3, [r3]	@ float
 24653 0340 C7F88031 		str	r3, [r7, #384]	@ float
3978:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24654              		.loc 1 3978 0
 24655 0344 0023     		movs	r3, #0
 24656 0346 87F88B31 		strb	r3, [r7, #395]
 24657 034a 14E0     		b	.L1001
 24658              	.L1002:
3979:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 24659              		.loc 1 3979 0 discriminator 3
 24660 034c B7F88C31 		ldrh	r3, [r7, #396]
 24661 0350 03F10802 		add	r2, r3, #8
 24662 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24663 0358 D31A     		subs	r3, r2, r3
 24664 035a 013B     		subs	r3, r3, #1
 24665 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24666 0360 07F5C071 		add	r1, r7, #384
 24667 0364 0A44     		add	r2, r2, r1
 24668 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24669 0368 3A46     		mov	r2, r7
 24670 036a D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 547


3978:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24671              		.loc 1 3978 0 discriminator 3
 24672 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24673 0370 0133     		adds	r3, r3, #1
 24674 0372 87F88B31 		strb	r3, [r7, #395]
 24675              	.L1001:
3978:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24676              		.loc 1 3978 0 is_stmt 0 discriminator 1
 24677 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24678 037a 032B     		cmp	r3, #3
 24679 037c E6D9     		bls	.L1002
3980:..\src/command_processing.c ****             }
3981:..\src/command_processing.c **** 
3982:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 24680              		.loc 1 3982 0 is_stmt 1
 24681 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24682 0382 0949     		ldr	r1, .L1011+8
 24683 0384 1346     		mov	r3, r2
 24684 0386 9B00     		lsls	r3, r3, #2
 24685 0388 1344     		add	r3, r3, r2
 24686 038a DB00     		lsls	r3, r3, #3
 24687 038c 0B44     		add	r3, r3, r1
 24688 038e 1C33     		adds	r3, r3, #28
 24689 0390 1B68     		ldr	r3, [r3]	@ float
 24690 0392 C7F88031 		str	r3, [r7, #384]	@ float
3983:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24691              		.loc 1 3983 0
 24692 0396 0023     		movs	r3, #0
 24693 0398 87F88B31 		strb	r3, [r7, #395]
 24694 039c 1BE0     		b	.L1003
 24695              	.L1012:
 24696 039e 00BF     		.align	2
 24697              	.L1011:
 24698 03a0 00000000 		.word	IMU_connected
 24699 03a4 00000000 		.word	c_mem
 24700 03a8 00000000 		.word	g_imu
 24701              	.L1004:
3984:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 24702              		.loc 1 3984 0 discriminator 3
 24703 03ac B7F88C31 		ldrh	r3, [r7, #396]
 24704 03b0 03F10C02 		add	r2, r3, #12
 24705 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24706 03b8 D31A     		subs	r3, r2, r3
 24707 03ba 013B     		subs	r3, r3, #1
 24708 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24709 03c0 07F5C071 		add	r1, r7, #384
 24710 03c4 0A44     		add	r2, r2, r1
 24711 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24712 03c8 3A46     		mov	r2, r7
 24713 03ca D154     		strb	r1, [r2, r3]
3983:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24714              		.loc 1 3983 0 discriminator 3
 24715 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24716 03d0 0133     		adds	r3, r3, #1
 24717 03d2 87F88B31 		strb	r3, [r7, #395]
 24718              	.L1003:
3983:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 548


 24719              		.loc 1 3983 0 is_stmt 0 discriminator 1
 24720 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24721 03da 032B     		cmp	r3, #3
 24722 03dc E6D9     		bls	.L1004
3985:..\src/command_processing.c ****             }
3986:..\src/command_processing.c **** 
3987:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 24723              		.loc 1 3987 0 is_stmt 1
 24724 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24725 03e2 6749     		ldr	r1, .L1013
 24726 03e4 1346     		mov	r3, r2
 24727 03e6 9B00     		lsls	r3, r3, #2
 24728 03e8 1344     		add	r3, r3, r2
 24729 03ea DB00     		lsls	r3, r3, #3
 24730 03ec 0B44     		add	r3, r3, r1
 24731 03ee 2033     		adds	r3, r3, #32
 24732 03f0 1B68     		ldr	r3, [r3]	@ float
 24733 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3988:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24734              		.loc 1 3988 0
 24735 03f6 0023     		movs	r3, #0
 24736 03f8 87F88B31 		strb	r3, [r7, #395]
 24737 03fc 14E0     		b	.L1005
 24738              	.L1006:
3989:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 24739              		.loc 1 3989 0 discriminator 3
 24740 03fe B7F88C31 		ldrh	r3, [r7, #396]
 24741 0402 03F11002 		add	r2, r3, #16
 24742 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24743 040a D31A     		subs	r3, r2, r3
 24744 040c 013B     		subs	r3, r3, #1
 24745 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24746 0412 07F5C071 		add	r1, r7, #384
 24747 0416 0A44     		add	r2, r2, r1
 24748 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24749 041a 3A46     		mov	r2, r7
 24750 041c D154     		strb	r1, [r2, r3]
3988:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24751              		.loc 1 3988 0 discriminator 3
 24752 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24753 0422 0133     		adds	r3, r3, #1
 24754 0424 87F88B31 		strb	r3, [r7, #395]
 24755              	.L1005:
3988:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24756              		.loc 1 3988 0 is_stmt 0 discriminator 1
 24757 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24758 042c 032B     		cmp	r3, #3
 24759 042e E6D9     		bls	.L1006
3990:..\src/command_processing.c ****             }
3991:..\src/command_processing.c ****             c = c + 16;
 24760              		.loc 1 3991 0 is_stmt 1
 24761 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24762 0434 1033     		adds	r3, r3, #16
 24763 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24764              	.L998:
3992:..\src/command_processing.c ****         }
3993:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 549


 24765              		.loc 1 3993 0
 24766 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24767 043e 514A     		ldr	r2, .L1013+4
 24768 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24769 0442 1946     		mov	r1, r3
 24770 0444 504A     		ldr	r2, .L1013+8
 24771 0446 0B46     		mov	r3, r1
 24772 0448 9B00     		lsls	r3, r3, #2
 24773 044a 0B44     		add	r3, r3, r1
 24774 044c 1344     		add	r3, r3, r2
 24775 044e 03F20623 		addw	r3, r3, #518
 24776 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24777 0454 002B     		cmp	r3, #0
 24778 0456 21D0     		beq	.L1007
3994:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 24779              		.loc 1 3994 0
 24780 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24781 045c 4849     		ldr	r1, .L1013
 24782 045e 1346     		mov	r3, r2
 24783 0460 9B00     		lsls	r3, r3, #2
 24784 0462 1344     		add	r3, r3, r2
 24785 0464 DB00     		lsls	r3, r3, #3
 24786 0466 0B44     		add	r3, r3, r1
 24787 0468 2433     		adds	r3, r3, #36
 24788 046a B3F90030 		ldrsh	r3, [r3]
 24789 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3995:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24790              		.loc 1 3995 0
 24791 0472 B7F88C31 		ldrh	r3, [r7, #396]
 24792 0476 0133     		adds	r3, r3, #1
 24793 0478 07F5C372 		add	r2, r7, #390
 24794 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24795 047e 3A46     		mov	r2, r7
 24796 0480 D154     		strb	r1, [r2, r3]
3996:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24797              		.loc 1 3996 0
 24798 0482 B7F88C21 		ldrh	r2, [r7, #396]
 24799 0486 07F5C373 		add	r3, r7, #390
 24800 048a 0133     		adds	r3, r3, #1
 24801 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24802 048e 3B46     		mov	r3, r7
 24803 0490 9954     		strb	r1, [r3, r2]
3997:..\src/command_processing.c ****             c = c + 2;
 24804              		.loc 1 3997 0
 24805 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24806 0496 0233     		adds	r3, r3, #2
 24807 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24808              	.L1007:
3998:..\src/command_processing.c ****         }
3999:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 24809              		.loc 1 3999 0
 24810 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24811 04a0 384A     		ldr	r2, .L1013+4
 24812 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24813 04a4 1A46     		mov	r2, r3
 24814 04a6 394B     		ldr	r3, .L1013+12
 24815 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 550


 24816 04ac 013B     		subs	r3, r3, #1
 24817 04ae 3A46     		mov	r2, r7
 24818 04b0 3A21     		movs	r1, #58
 24819 04b2 D154     		strb	r1, [r2, r3]
4000:..\src/command_processing.c ****         c = 1;
 24820              		.loc 1 4000 0
 24821 04b4 0123     		movs	r3, #1
 24822 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
4001:..\src/command_processing.c ****                
4002:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 24823              		.loc 1 4002 0
 24824 04ba 0023     		movs	r3, #0
 24825 04bc 87F88B31 		strb	r3, [r7, #395]
 24826 04c0 10E0     		b	.L1008
 24827              	.L1009:
4003:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24828              		.loc 1 4003 0 discriminator 3
 24829 04c2 B7F88821 		ldrh	r2, [r7, #392]
 24830 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24831 04ca 1344     		add	r3, r3, r2
 24832 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24833 04d0 3946     		mov	r1, r7
 24834 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 24835 04d4 07F12002 		add	r2, r7, #32
 24836 04d8 D154     		strb	r1, [r2, r3]
4002:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24837              		.loc 1 4002 0 discriminator 3
 24838 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24839 04de 0133     		adds	r3, r3, #1
 24840 04e0 87F88B31 		strb	r3, [r7, #395]
 24841              	.L1008:
4002:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24842              		.loc 1 4002 0 is_stmt 0 discriminator 1
 24843 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24844 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24845 04ec 2549     		ldr	r1, .L1013+4
 24846 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 24847 04f0 1946     		mov	r1, r3
 24848 04f2 264B     		ldr	r3, .L1013+12
 24849 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 24850 04f8 9A42     		cmp	r2, r3
 24851 04fa E2DB     		blt	.L1009
4004:..\src/command_processing.c ****         }
4005:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 24852              		.loc 1 4005 0 is_stmt 1 discriminator 2
 24853 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24854 0500 204A     		ldr	r2, .L1013+4
 24855 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24856 0504 1A46     		mov	r2, r3
 24857 0506 214B     		ldr	r3, .L1013+12
 24858 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 24859 050c 9AB2     		uxth	r2, r3
 24860 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 24861 0512 1344     		add	r3, r3, r2
 24862 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
4006:..\src/command_processing.c ****         
4007:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 551


 24863              		.loc 1 4007 0 discriminator 2
 24864 0518 3B46     		mov	r3, r7
 24865 051a 2022     		movs	r2, #32
 24866 051c 0021     		movs	r1, #0
 24867 051e 1846     		mov	r0, r3
 24868 0520 FFF7FEFF 		bl	memset
3922:..\src/command_processing.c ****     {	
 24869              		.loc 1 3922 0 discriminator 2
 24870 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24871 0528 0133     		adds	r3, r3, #1
 24872 052a 87F88F31 		strb	r3, [r7, #399]
 24873              	.L994:
3922:..\src/command_processing.c ****     {	
 24874              		.loc 1 3922 0 is_stmt 0 discriminator 1
 24875 052e 184B     		ldr	r3, .L1013+16
 24876 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24877 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24878 0536 9A42     		cmp	r2, r3
 24879 0538 FFF476AD 		bcc	.L1010
4008:..\src/command_processing.c ****         
4009:..\src/command_processing.c ****     }
4010:..\src/command_processing.c **** 
4011:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4012:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 24880              		.loc 1 4012 0 is_stmt 1
 24881 053c 154B     		ldr	r3, .L1013+20
 24882 053e 1B68     		ldr	r3, [r3]
 24883 0540 5C1E     		subs	r4, r3, #1
 24884 0542 144B     		ldr	r3, .L1013+20
 24885 0544 1B68     		ldr	r3, [r3]
 24886 0546 DBB2     		uxtb	r3, r3
 24887 0548 013B     		subs	r3, r3, #1
 24888 054a DAB2     		uxtb	r2, r3
 24889 054c 07F12003 		add	r3, r7, #32
 24890 0550 1146     		mov	r1, r2
 24891 0552 1846     		mov	r0, r3
 24892 0554 FFF7FEFF 		bl	LCRChecksum
 24893 0558 0346     		mov	r3, r0
 24894 055a 1A46     		mov	r2, r3
 24895 055c 07F12003 		add	r3, r7, #32
 24896 0560 1A55     		strb	r2, [r3, r4]
4013:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 24897              		.loc 1 4013 0
 24898 0562 0C4B     		ldr	r3, .L1013+20
 24899 0564 1B68     		ldr	r3, [r3]
 24900 0566 9AB2     		uxth	r2, r3
 24901 0568 07F12003 		add	r3, r7, #32
 24902 056c 1146     		mov	r1, r2
 24903 056e 1846     		mov	r0, r3
 24904 0570 FFF7FEFF 		bl	commWrite
4014:..\src/command_processing.c **** }
 24905              		.loc 1 4014 0
 24906 0574 00BF     		nop
 24907 0576 07F5CA77 		add	r7, r7, #404
 24908              		.cfi_def_cfa_offset 12
 24909 057a BD46     		mov	sp, r7
 24910              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 552


 24911              		@ sp needed
 24912 057c 90BD     		pop	{r4, r7, pc}
 24913              	.L1014:
 24914 057e 00BF     		.align	2
 24915              	.L1013:
 24916 0580 00000000 		.word	g_imu
 24917 0584 00000000 		.word	IMU_connected
 24918 0588 00000000 		.word	c_mem
 24919 058c 00000000 		.word	single_imu_size
 24920 0590 00000000 		.word	N_IMU_Connected
 24921 0594 00000000 		.word	imus_data_size
 24922              		.cfi_endproc
 24923              	.LFE110:
 24924              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 24925              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 24926              		.align	2
 24927              		.global	cmd_get_encoder_map
 24928              		.thumb
 24929              		.thumb_func
 24930              		.type	cmd_get_encoder_map, %function
 24931              	cmd_get_encoder_map:
 24932              	.LFB111:
4015:..\src/command_processing.c **** 
4016:..\src/command_processing.c **** void cmd_get_encoder_map(){
 24933              		.loc 1 4016 0
 24934              		.cfi_startproc
 24935              		@ args = 0, pretend = 0, frame = 16
 24936              		@ frame_needed = 1, uses_anonymous_args = 0
 24937 0000 90B5     		push	{r4, r7, lr}
 24938              		.cfi_def_cfa_offset 12
 24939              		.cfi_offset 4, -12
 24940              		.cfi_offset 7, -8
 24941              		.cfi_offset 14, -4
 24942 0002 85B0     		sub	sp, sp, #20
 24943              		.cfi_def_cfa_offset 32
 24944 0004 00AF     		add	r7, sp, #0
 24945              		.cfi_def_cfa_register 7
4017:..\src/command_processing.c ****     //Retrieve Encoder map
4018:..\src/command_processing.c ****     
4019:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
4020:..\src/command_processing.c ****     uint8 CYDATA i, j;
4021:..\src/command_processing.c ****     
4022:..\src/command_processing.c ****     // Header        
4023:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 24946              		.loc 1 4023 0
 24947 0006 A323     		movs	r3, #163
 24948 0008 3B70     		strb	r3, [r7]
4024:..\src/command_processing.c ****     
4025:..\src/command_processing.c ****     // Fill payload
4026:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 24949              		.loc 1 4026 0
 24950 000a 0223     		movs	r3, #2
 24951 000c 7B70     		strb	r3, [r7, #1]
4027:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 24952              		.loc 1 4027 0
 24953 000e 0523     		movs	r3, #5
 24954 0010 BB70     		strb	r3, [r7, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 553


4028:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24955              		.loc 1 4028 0
 24956 0012 0023     		movs	r3, #0
 24957 0014 FB73     		strb	r3, [r7, #15]
 24958 0016 23E0     		b	.L1016
 24959              	.L1019:
4029:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 24960              		.loc 1 4029 0
 24961 0018 0023     		movs	r3, #0
 24962 001a BB73     		strb	r3, [r7, #14]
 24963 001c 1AE0     		b	.L1017
 24964              	.L1018:
4030:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 24965              		.loc 1 4030 0 discriminator 3
 24966 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24967 0020 1346     		mov	r3, r2
 24968 0022 9B00     		lsls	r3, r3, #2
 24969 0024 1344     		add	r3, r3, r2
 24970 0026 DA1C     		adds	r2, r3, #3
 24971 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24972 002a D118     		adds	r1, r2, r3
 24973 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24974 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 24975 0030 154C     		ldr	r4, .L1020
 24976 0032 1346     		mov	r3, r2
 24977 0034 5B00     		lsls	r3, r3, #1
 24978 0036 1344     		add	r3, r3, r2
 24979 0038 1B01     		lsls	r3, r3, #4
 24980 003a 2344     		add	r3, r3, r4
 24981 003c 0344     		add	r3, r3, r0
 24982 003e 03F5C873 		add	r3, r3, #400
 24983 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 24984 0044 07F11003 		add	r3, r7, #16
 24985 0048 0B44     		add	r3, r3, r1
 24986 004a 03F8102C 		strb	r2, [r3, #-16]
4029:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 24987              		.loc 1 4029 0 discriminator 3
 24988 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24989 0050 0133     		adds	r3, r3, #1
 24990 0052 BB73     		strb	r3, [r7, #14]
 24991              	.L1017:
4029:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 24992              		.loc 1 4029 0 is_stmt 0 discriminator 1
 24993 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24994 0056 042B     		cmp	r3, #4
 24995 0058 E1D9     		bls	.L1018
4028:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24996              		.loc 1 4028 0 is_stmt 1 discriminator 2
 24997 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24998 005c 0133     		adds	r3, r3, #1
 24999 005e FB73     		strb	r3, [r7, #15]
 25000              	.L1016:
4028:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25001              		.loc 1 4028 0 is_stmt 0 discriminator 1
 25002 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25003 0062 012B     		cmp	r3, #1
 25004 0064 D8D9     		bls	.L1019
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 554


4031:..\src/command_processing.c ****         }
4032:..\src/command_processing.c ****     }
4033:..\src/command_processing.c ****     
4034:..\src/command_processing.c ****     // Calculate checksum
4035:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 25005              		.loc 1 4035 0 is_stmt 1
 25006 0066 3B46     		mov	r3, r7
 25007 0068 0D21     		movs	r1, #13
 25008 006a 1846     		mov	r0, r3
 25009 006c FFF7FEFF 		bl	LCRChecksum
 25010 0070 0346     		mov	r3, r0
 25011 0072 7B73     		strb	r3, [r7, #13]
4036:..\src/command_processing.c ****     
4037:..\src/command_processing.c ****     // Send package to UART
4038:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 25012              		.loc 1 4038 0
 25013 0074 3B46     		mov	r3, r7
 25014 0076 0E21     		movs	r1, #14
 25015 0078 1846     		mov	r0, r3
 25016 007a FFF7FEFF 		bl	commWrite
4039:..\src/command_processing.c **** }
 25017              		.loc 1 4039 0
 25018 007e 00BF     		nop
 25019 0080 1437     		adds	r7, r7, #20
 25020              		.cfi_def_cfa_offset 12
 25021 0082 BD46     		mov	sp, r7
 25022              		.cfi_def_cfa_register 13
 25023              		@ sp needed
 25024 0084 90BD     		pop	{r4, r7, pc}
 25025              	.L1021:
 25026 0086 00BF     		.align	2
 25027              	.L1020:
 25028 0088 00000000 		.word	c_mem
 25029              		.cfi_endproc
 25030              	.LFE111:
 25031              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 25032              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 25033              		.align	2
 25034              		.global	cmd_get_encoder_raw
 25035              		.thumb
 25036              		.thumb_func
 25037              		.type	cmd_get_encoder_raw, %function
 25038              	cmd_get_encoder_raw:
 25039              	.LFB112:
4040:..\src/command_processing.c **** 
4041:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 25040              		.loc 1 4041 0
 25041              		.cfi_startproc
 25042              		@ args = 0, pretend = 0, frame = 32
 25043              		@ frame_needed = 1, uses_anonymous_args = 0
 25044 0000 90B5     		push	{r4, r7, lr}
 25045              		.cfi_def_cfa_offset 12
 25046              		.cfi_offset 4, -12
 25047              		.cfi_offset 7, -8
 25048              		.cfi_offset 14, -4
 25049 0002 89B0     		sub	sp, sp, #36
 25050              		.cfi_def_cfa_offset 48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 555


 25051 0004 00AF     		add	r7, sp, #0
 25052              		.cfi_def_cfa_register 7
4042:..\src/command_processing.c ****     //Retrieve all Encoders raw values
4043:..\src/command_processing.c ****     
4044:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
4045:..\src/command_processing.c ****     uint8 i, j, idx;
4046:..\src/command_processing.c ****     uint16 aux_uint16;
4047:..\src/command_processing.c ****     
4048:..\src/command_processing.c ****     //Header package 
4049:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 25053              		.loc 1 4049 0
 25054 0006 A423     		movs	r3, #164
 25055 0008 3B71     		strb	r3, [r7, #4]
4050:..\src/command_processing.c ****  
4051:..\src/command_processing.c ****     // Fill payload
4052:..\src/command_processing.c ****     idx = 0;
 25056              		.loc 1 4052 0
 25057 000a 0023     		movs	r3, #0
 25058 000c 7B77     		strb	r3, [r7, #29]
4053:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25059              		.loc 1 4053 0
 25060 000e 0023     		movs	r3, #0
 25061 0010 FB77     		strb	r3, [r7, #31]
 25062 0012 3FE0     		b	.L1023
 25063              	.L1027:
4054:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 25064              		.loc 1 4054 0
 25065 0014 0023     		movs	r3, #0
 25066 0016 BB77     		strb	r3, [r7, #30]
 25067 0018 33E0     		b	.L1024
 25068              	.L1026:
4055:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 25069              		.loc 1 4055 0
 25070 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 25071 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 25072 001e 3048     		ldr	r0, .L1028
 25073 0020 1346     		mov	r3, r2
 25074 0022 5B00     		lsls	r3, r3, #1
 25075 0024 1344     		add	r3, r3, r2
 25076 0026 1B01     		lsls	r3, r3, #4
 25077 0028 0344     		add	r3, r3, r0
 25078 002a 0B44     		add	r3, r3, r1
 25079 002c 03F5C873 		add	r3, r3, #400
 25080 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25081 0032 012B     		cmp	r3, #1
 25082 0034 22D1     		bne	.L1025
4056:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 25083              		.loc 1 4056 0
 25084 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 25085 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 25086 003a 2A48     		ldr	r0, .L1028+4
 25087 003c 1346     		mov	r3, r2
 25088 003e 9B00     		lsls	r3, r3, #2
 25089 0040 1344     		add	r3, r3, r2
 25090 0042 0B44     		add	r3, r3, r1
 25091 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 25092 0048 7B80     		strh	r3, [r7, #2]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 556


4057:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 25093              		.loc 1 4057 0
 25094 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25095 004c 5B00     		lsls	r3, r3, #1
 25096 004e 0233     		adds	r3, r3, #2
 25097 0050 BA1C     		adds	r2, r7, #2
 25098 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25099 0054 07F12001 		add	r1, r7, #32
 25100 0058 0B44     		add	r3, r3, r1
 25101 005a 03F81C2C 		strb	r2, [r3, #-28]
4058:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 25102              		.loc 1 4058 0
 25103 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25104 0060 5B00     		lsls	r3, r3, #1
 25105 0062 5A1C     		adds	r2, r3, #1
 25106 0064 BB1C     		adds	r3, r7, #2
 25107 0066 0133     		adds	r3, r3, #1
 25108 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25109 006a 07F12003 		add	r3, r7, #32
 25110 006e 1344     		add	r3, r3, r2
 25111 0070 0A46     		mov	r2, r1
 25112 0072 03F81C2C 		strb	r2, [r3, #-28]
4059:..\src/command_processing.c ****                 idx++;
 25113              		.loc 1 4059 0
 25114 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25115 0078 0133     		adds	r3, r3, #1
 25116 007a 7B77     		strb	r3, [r7, #29]
 25117              	.L1025:
4054:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 25118              		.loc 1 4054 0 discriminator 2
 25119 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25120 007e 0133     		adds	r3, r3, #1
 25121 0080 BB77     		strb	r3, [r7, #30]
 25122              	.L1024:
4054:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 25123              		.loc 1 4054 0 is_stmt 0 discriminator 1
 25124 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25125 0084 184A     		ldr	r2, .L1028+8
 25126 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25127 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 25128 008a 9A42     		cmp	r2, r3
 25129 008c C5D3     		bcc	.L1026
4053:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 25130              		.loc 1 4053 0 is_stmt 1 discriminator 2
 25131 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25132 0090 0133     		adds	r3, r3, #1
 25133 0092 FB77     		strb	r3, [r7, #31]
 25134              	.L1023:
4053:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 25135              		.loc 1 4053 0 is_stmt 0 discriminator 1
 25136 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25137 0096 012B     		cmp	r3, #1
 25138 0098 BCD9     		bls	.L1027
4060:..\src/command_processing.c ****             }
4061:..\src/command_processing.c ****         }
4062:..\src/command_processing.c ****     }
4063:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 557


4064:..\src/command_processing.c ****     // Calculate checksum
4065:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 25139              		.loc 1 4065 0 is_stmt 1
 25140 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25141 009c 5B00     		lsls	r3, r3, #1
 25142 009e 5C1C     		adds	r4, r3, #1
 25143 00a0 7B7F     		ldrb	r3, [r7, #29]
 25144 00a2 5B00     		lsls	r3, r3, #1
 25145 00a4 DBB2     		uxtb	r3, r3
 25146 00a6 0133     		adds	r3, r3, #1
 25147 00a8 DAB2     		uxtb	r2, r3
 25148 00aa 3B1D     		adds	r3, r7, #4
 25149 00ac 1146     		mov	r1, r2
 25150 00ae 1846     		mov	r0, r3
 25151 00b0 FFF7FEFF 		bl	LCRChecksum
 25152 00b4 0346     		mov	r3, r0
 25153 00b6 1A46     		mov	r2, r3
 25154 00b8 07F12003 		add	r3, r7, #32
 25155 00bc 2344     		add	r3, r3, r4
 25156 00be 03F81C2C 		strb	r2, [r3, #-28]
4066:..\src/command_processing.c ****     
4067:..\src/command_processing.c ****     // Send package to UART
4068:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 25157              		.loc 1 4068 0
 25158 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25159 00c4 0133     		adds	r3, r3, #1
 25160 00c6 9BB2     		uxth	r3, r3
 25161 00c8 5B00     		lsls	r3, r3, #1
 25162 00ca 9AB2     		uxth	r2, r3
 25163 00cc 3B1D     		adds	r3, r7, #4
 25164 00ce 1146     		mov	r1, r2
 25165 00d0 1846     		mov	r0, r3
 25166 00d2 FFF7FEFF 		bl	commWrite
4069:..\src/command_processing.c **** }
 25167              		.loc 1 4069 0
 25168 00d6 00BF     		nop
 25169 00d8 2437     		adds	r7, r7, #36
 25170              		.cfi_def_cfa_offset 12
 25171 00da BD46     		mov	sp, r7
 25172              		.cfi_def_cfa_register 13
 25173              		@ sp needed
 25174 00dc 90BD     		pop	{r4, r7, pc}
 25175              	.L1029:
 25176 00de 00BF     		.align	2
 25177              	.L1028:
 25178 00e0 00000000 		.word	c_mem
 25179 00e4 00000000 		.word	Encoder_Value
 25180 00e8 00000000 		.word	N_Encoder_Line_Connected
 25181              		.cfi_endproc
 25182              	.LFE112:
 25183              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 25184              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 25185              		.align	2
 25186              		.global	cmd_get_ADC_map
 25187              		.thumb
 25188              		.thumb_func
 25189              		.type	cmd_get_ADC_map, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 558


 25190              	cmd_get_ADC_map:
 25191              	.LFB113:
4070:..\src/command_processing.c **** 
4071:..\src/command_processing.c **** void cmd_get_ADC_map(){
 25192              		.loc 1 4071 0
 25193              		.cfi_startproc
 25194              		@ args = 0, pretend = 0, frame = 16
 25195              		@ frame_needed = 1, uses_anonymous_args = 0
 25196 0000 80B5     		push	{r7, lr}
 25197              		.cfi_def_cfa_offset 8
 25198              		.cfi_offset 7, -8
 25199              		.cfi_offset 14, -4
 25200 0002 84B0     		sub	sp, sp, #16
 25201              		.cfi_def_cfa_offset 24
 25202 0004 00AF     		add	r7, sp, #0
 25203              		.cfi_def_cfa_register 7
4072:..\src/command_processing.c ****     //Retrieve Encoder map
4073:..\src/command_processing.c ****     
4074:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
4075:..\src/command_processing.c ****     uint8 CYDATA i;
4076:..\src/command_processing.c ****     
4077:..\src/command_processing.c ****     // Header        
4078:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 25204              		.loc 1 4078 0
 25205 0006 A523     		movs	r3, #165
 25206 0008 3B70     		strb	r3, [r7]
4079:..\src/command_processing.c ****     
4080:..\src/command_processing.c ****     // Fill payload
4081:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 25207              		.loc 1 4081 0
 25208 000a 0C23     		movs	r3, #12
 25209 000c 7B70     		strb	r3, [r7, #1]
4082:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 25210              		.loc 1 4082 0
 25211 000e 0023     		movs	r3, #0
 25212 0010 FB73     		strb	r3, [r7, #15]
 25213 0012 0EE0     		b	.L1031
 25214              	.L1032:
4083:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 25215              		.loc 1 4083 0 discriminator 3
 25216 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25217 0016 0233     		adds	r3, r3, #2
 25218 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25219 001a 0F49     		ldr	r1, .L1033
 25220 001c 0A44     		add	r2, r2, r1
 25221 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 25222 0022 07F11001 		add	r1, r7, #16
 25223 0026 0B44     		add	r3, r3, r1
 25224 0028 03F8102C 		strb	r2, [r3, #-16]
4082:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 25225              		.loc 1 4082 0 discriminator 3
 25226 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25227 002e 0133     		adds	r3, r3, #1
 25228 0030 FB73     		strb	r3, [r7, #15]
 25229              	.L1031:
4082:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 25230              		.loc 1 4082 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 559


 25231 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25232 0034 0B2B     		cmp	r3, #11
 25233 0036 EDD9     		bls	.L1032
4084:..\src/command_processing.c ****     }
4085:..\src/command_processing.c ****     
4086:..\src/command_processing.c ****     // Calculate checksum
4087:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 25234              		.loc 1 4087 0 is_stmt 1
 25235 0038 3B46     		mov	r3, r7
 25236 003a 0E21     		movs	r1, #14
 25237 003c 1846     		mov	r0, r3
 25238 003e FFF7FEFF 		bl	LCRChecksum
 25239 0042 0346     		mov	r3, r0
 25240 0044 BB73     		strb	r3, [r7, #14]
4088:..\src/command_processing.c ****     
4089:..\src/command_processing.c ****     // Send package to UART
4090:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 25241              		.loc 1 4090 0
 25242 0046 3B46     		mov	r3, r7
 25243 0048 0F21     		movs	r1, #15
 25244 004a 1846     		mov	r0, r3
 25245 004c FFF7FEFF 		bl	commWrite
4091:..\src/command_processing.c ****     
4092:..\src/command_processing.c **** }
 25246              		.loc 1 4092 0
 25247 0050 00BF     		nop
 25248 0052 1037     		adds	r7, r7, #16
 25249              		.cfi_def_cfa_offset 8
 25250 0054 BD46     		mov	sp, r7
 25251              		.cfi_def_cfa_register 13
 25252              		@ sp needed
 25253 0056 80BD     		pop	{r7, pc}
 25254              	.L1034:
 25255              		.align	2
 25256              	.L1033:
 25257 0058 00000000 		.word	c_mem
 25258              		.cfi_endproc
 25259              	.LFE113:
 25260              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 25261              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 25262              		.align	2
 25263              		.global	cmd_get_ADC_raw
 25264              		.thumb
 25265              		.thumb_func
 25266              		.type	cmd_get_ADC_raw, %function
 25267              	cmd_get_ADC_raw:
 25268              	.LFB114:
4093:..\src/command_processing.c **** 
4094:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 25269              		.loc 1 4094 0
 25270              		.cfi_startproc
 25271              		@ args = 0, pretend = 0, frame = 32
 25272              		@ frame_needed = 1, uses_anonymous_args = 0
 25273 0000 90B5     		push	{r4, r7, lr}
 25274              		.cfi_def_cfa_offset 12
 25275              		.cfi_offset 4, -12
 25276              		.cfi_offset 7, -8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 560


 25277              		.cfi_offset 14, -4
 25278 0002 89B0     		sub	sp, sp, #36
 25279              		.cfi_def_cfa_offset 48
 25280 0004 00AF     		add	r7, sp, #0
 25281              		.cfi_def_cfa_register 7
4095:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
4096:..\src/command_processing.c ****     
4097:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
4098:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 25282              		.loc 1 4098 0
 25283 0006 0023     		movs	r3, #0
 25284 0008 BB77     		strb	r3, [r7, #30]
4099:..\src/command_processing.c ****     int16 aux_int16;
4100:..\src/command_processing.c ****     
4101:..\src/command_processing.c ****     // Header        
4102:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 25285              		.loc 1 4102 0
 25286 000a A623     		movs	r3, #166
 25287 000c 3B71     		strb	r3, [r7, #4]
4103:..\src/command_processing.c ****     
4104:..\src/command_processing.c ****     // Fill payload
4105:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 25288              		.loc 1 4105 0
 25289 000e 0023     		movs	r3, #0
 25290 0010 FB77     		strb	r3, [r7, #31]
 25291 0012 27E0     		b	.L1036
 25292              	.L1038:
4106:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 25293              		.loc 1 4106 0
 25294 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25295 0016 274A     		ldr	r2, .L1039
 25296 0018 1344     		add	r3, r3, r2
 25297 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 25298 001e 012B     		cmp	r3, #1
 25299 0020 1DD1     		bne	.L1037
4107:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 25300              		.loc 1 4107 0
 25301 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25302 0024 244A     		ldr	r2, .L1039+4
 25303 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 25304 002a 7B80     		strh	r3, [r7, #2]	@ movhi
4108:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 25305              		.loc 1 4108 0
 25306 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25307 002e 5B00     		lsls	r3, r3, #1
 25308 0030 0233     		adds	r3, r3, #2
 25309 0032 BA1C     		adds	r2, r7, #2
 25310 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25311 0036 07F12001 		add	r1, r7, #32
 25312 003a 0B44     		add	r3, r3, r1
 25313 003c 03F81C2C 		strb	r2, [r3, #-28]
4109:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 25314              		.loc 1 4109 0
 25315 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25316 0042 5B00     		lsls	r3, r3, #1
 25317 0044 5A1C     		adds	r2, r3, #1
 25318 0046 BB1C     		adds	r3, r7, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 561


 25319 0048 0133     		adds	r3, r3, #1
 25320 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25321 004c 07F12003 		add	r3, r7, #32
 25322 0050 1344     		add	r3, r3, r2
 25323 0052 0A46     		mov	r2, r1
 25324 0054 03F81C2C 		strb	r2, [r3, #-28]
4110:..\src/command_processing.c ****             idx++;
 25325              		.loc 1 4110 0
 25326 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25327 005a 0133     		adds	r3, r3, #1
 25328 005c BB77     		strb	r3, [r7, #30]
 25329              	.L1037:
4105:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 25330              		.loc 1 4105 0 discriminator 2
 25331 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25332 0060 0133     		adds	r3, r3, #1
 25333 0062 FB77     		strb	r3, [r7, #31]
 25334              	.L1036:
4105:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 25335              		.loc 1 4105 0 is_stmt 0 discriminator 1
 25336 0064 154B     		ldr	r3, .L1039+8
 25337 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25338 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 25339 006a 9A42     		cmp	r2, r3
 25340 006c D2D3     		bcc	.L1038
4111:..\src/command_processing.c ****         }
4112:..\src/command_processing.c ****     }
4113:..\src/command_processing.c **** 
4114:..\src/command_processing.c ****     // Calculate checksum
4115:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 25341              		.loc 1 4115 0 is_stmt 1
 25342 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25343 0070 5B00     		lsls	r3, r3, #1
 25344 0072 5C1C     		adds	r4, r3, #1
 25345 0074 BB7F     		ldrb	r3, [r7, #30]
 25346 0076 5B00     		lsls	r3, r3, #1
 25347 0078 DBB2     		uxtb	r3, r3
 25348 007a 0133     		adds	r3, r3, #1
 25349 007c DAB2     		uxtb	r2, r3
 25350 007e 3B1D     		adds	r3, r7, #4
 25351 0080 1146     		mov	r1, r2
 25352 0082 1846     		mov	r0, r3
 25353 0084 FFF7FEFF 		bl	LCRChecksum
 25354 0088 0346     		mov	r3, r0
 25355 008a 1A46     		mov	r2, r3
 25356 008c 07F12003 		add	r3, r7, #32
 25357 0090 2344     		add	r3, r3, r4
 25358 0092 03F81C2C 		strb	r2, [r3, #-28]
4116:..\src/command_processing.c ****     
4117:..\src/command_processing.c ****     // Send package to UART
4118:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 25359              		.loc 1 4118 0
 25360 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25361 0098 0133     		adds	r3, r3, #1
 25362 009a 9BB2     		uxth	r3, r3
 25363 009c 5B00     		lsls	r3, r3, #1
 25364 009e 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 562


 25365 00a0 3B1D     		adds	r3, r7, #4
 25366 00a2 1146     		mov	r1, r2
 25367 00a4 1846     		mov	r0, r3
 25368 00a6 FFF7FEFF 		bl	commWrite
4119:..\src/command_processing.c **** }
 25369              		.loc 1 4119 0
 25370 00aa 00BF     		nop
 25371 00ac 2437     		adds	r7, r7, #36
 25372              		.cfi_def_cfa_offset 12
 25373 00ae BD46     		mov	sp, r7
 25374              		.cfi_def_cfa_register 13
 25375              		@ sp needed
 25376 00b0 90BD     		pop	{r4, r7, pc}
 25377              	.L1040:
 25378 00b2 00BF     		.align	2
 25379              	.L1039:
 25380 00b4 00000000 		.word	c_mem
 25381 00b8 00000000 		.word	ADC_buf
 25382 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 25383              		.cfi_endproc
 25384              	.LFE114:
 25385              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 25386              		.section	.rodata
 25387 1f4b 00       		.align	2
 25388              	.LC297:
 25389 1f4c 00       		.ascii	"\000"
 25390              		.section	.text.cmd_get_SD_file,"ax",%progbits
 25391              		.align	2
 25392              		.global	cmd_get_SD_file
 25393              		.thumb
 25394              		.thumb_func
 25395              		.type	cmd_get_SD_file, %function
 25396              	cmd_get_SD_file:
 25397              	.LFB115:
4120:..\src/command_processing.c **** 
4121:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 25398              		.loc 1 4121 0
 25399              		.cfi_startproc
 25400              		@ args = 0, pretend = 0, frame = 20064
 25401              		@ frame_needed = 1, uses_anonymous_args = 0
 25402 0000 80B5     		push	{r7, lr}
 25403              		.cfi_def_cfa_offset 8
 25404              		.cfi_offset 7, -8
 25405              		.cfi_offset 14, -4
 25406 0002 ADF59C4D 		sub	sp, sp, #19968
 25407              		.cfi_def_cfa_offset 19976
 25408 0006 98B0     		sub	sp, sp, #96
 25409              		.cfi_def_cfa_offset 20072
 25410 0008 00AF     		add	r7, sp, #0
 25411              		.cfi_def_cfa_register 7
 25412 000a 0246     		mov	r2, r0
 25413 000c 07F16003 		add	r3, r7, #96
 25414 0010 5A3B     		subs	r3, r3, #90
 25415 0012 1A80     		strh	r2, [r3]	@ movhi
4122:..\src/command_processing.c ****     
4123:..\src/command_processing.c ****     uint8 i = 0;
 25416              		.loc 1 4123 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 563


 25417 0014 0023     		movs	r3, #0
 25418 0016 07F59C42 		add	r2, r7, #19968
 25419 001a 02F15F02 		add	r2, r2, #95
 25420 001e 1370     		strb	r3, [r2]
4124:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 25421              		.loc 1 4124 0
 25422 0020 0023     		movs	r3, #0
 25423 0022 07F59C42 		add	r2, r7, #19968
 25424 0026 02F12C02 		add	r2, r2, #44
 25425 002a 1360     		str	r3, [r2]
 25426 002c 07F59C43 		add	r3, r7, #19968
 25427 0030 03F13003 		add	r3, r3, #48
 25428 0034 2E22     		movs	r2, #46
 25429 0036 0021     		movs	r1, #0
 25430 0038 1846     		mov	r0, r3
 25431 003a FFF7FEFF 		bl	memset
4125:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 25432              		.loc 1 4125 0
 25433 003e 07F16003 		add	r3, r7, #96
 25434 0042 543B     		subs	r3, r3, #84
 25435 0044 0022     		movs	r2, #0
 25436 0046 1A60     		str	r2, [r3]
 25437 0048 0433     		adds	r3, r3, #4
 25438 004a 44F61C62 		movw	r2, #19996
 25439 004e 0021     		movs	r1, #0
 25440 0050 1846     		mov	r0, r3
 25441 0052 FFF7FEFF 		bl	memset
4126:..\src/command_processing.c ****     strcpy(filename, "");
 25442              		.loc 1 4126 0
 25443 0056 3C4B     		ldr	r3, .L1046
 25444 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25445 005a 07F59C42 		add	r2, r7, #19968
 25446 005e 02F12C02 		add	r2, r2, #44
 25447 0062 1370     		strb	r3, [r2]
4127:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 25448              		.loc 1 4127 0
 25449 0064 384B     		ldr	r3, .L1046
 25450 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 25451 0068 07F16003 		add	r3, r7, #96
 25452 006c 543B     		subs	r3, r3, #84
 25453 006e 1A70     		strb	r2, [r3]
4128:..\src/command_processing.c ****     
4129:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 25454              		.loc 1 4129 0
 25455 0070 0023     		movs	r3, #0
 25456 0072 07F59C42 		add	r2, r7, #19968
 25457 0076 02F15F02 		add	r2, r2, #95
 25458 007a 1370     		strb	r3, [r2]
 25459 007c 1DE0     		b	.L1042
 25460              	.L1043:
4130:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 25461              		.loc 1 4130 0 discriminator 3
 25462 007e 07F59C43 		add	r3, r7, #19968
 25463 0082 03F15F03 		add	r3, r3, #95
 25464 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25465 0088 07F59C42 		add	r2, r7, #19968
 25466 008c 02F12C02 		add	r2, r2, #44
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 564


 25467 0090 1344     		add	r3, r3, r2
 25468 0092 07F59C42 		add	r2, r7, #19968
 25469 0096 02F15F02 		add	r2, r2, #95
 25470 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25471 009c 0332     		adds	r2, r2, #3
 25472 009e 2B49     		ldr	r1, .L1046+4
 25473 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 25474 00a2 1A70     		strb	r2, [r3]
4129:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 25475              		.loc 1 4129 0 discriminator 3
 25476 00a4 07F59C43 		add	r3, r7, #19968
 25477 00a8 03F15F03 		add	r3, r3, #95
 25478 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25479 00ae 0133     		adds	r3, r3, #1
 25480 00b0 07F59C42 		add	r2, r7, #19968
 25481 00b4 02F15F02 		add	r2, r2, #95
 25482 00b8 1370     		strb	r3, [r2]
 25483              	.L1042:
4129:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 25484              		.loc 1 4129 0 is_stmt 0 discriminator 1
 25485 00ba 07F59C43 		add	r3, r7, #19968
 25486 00be 03F15F03 		add	r3, r3, #95
 25487 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25488 00c4 9AB2     		uxth	r2, r3
 25489 00c6 07F16003 		add	r3, r7, #96
 25490 00ca 5A3B     		subs	r3, r3, #90
 25491 00cc 1B88     		ldrh	r3, [r3]
 25492 00ce 9342     		cmp	r3, r2
 25493 00d0 D5D8     		bhi	.L1043
4131:..\src/command_processing.c ****     }
4132:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 25494              		.loc 1 4132 0 is_stmt 1
 25495 00d2 07F59C43 		add	r3, r7, #19968
 25496 00d6 03F15F03 		add	r3, r3, #95
 25497 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25498 00dc 07F59C42 		add	r2, r7, #19968
 25499 00e0 02F12C02 		add	r2, r2, #44
 25500 00e4 1344     		add	r3, r3, r2
 25501 00e6 0022     		movs	r2, #0
 25502 00e8 1A70     		strb	r2, [r3]
4133:..\src/command_processing.c ****      
4134:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4135:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 25503              		.loc 1 4135 0
 25504 00ea 07F59C43 		add	r3, r7, #19968
 25505 00ee 03F12C03 		add	r3, r3, #44
 25506 00f2 1749     		ldr	r1, .L1046+8
 25507 00f4 1846     		mov	r0, r3
 25508 00f6 FFF7FEFF 		bl	strcmp
 25509 00fa 0346     		mov	r3, r0
 25510 00fc 002B     		cmp	r3, #0
 25511 00fe 0CD0     		beq	.L1044
4136:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 25512              		.loc 1 4136 0
 25513 0100 07F16003 		add	r3, r7, #96
 25514 0104 543B     		subs	r3, r3, #84
 25515 0106 07F59C40 		add	r0, r7, #19968
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 565


 25516 010a 00F12C00 		add	r0, r0, #44
 25517 010e 44F62062 		movw	r2, #20000
 25518 0112 1946     		mov	r1, r3
 25519 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 25520 0118 07E0     		b	.L1045
 25521              	.L1044:
4137:..\src/command_processing.c ****     }
4138:..\src/command_processing.c ****     else {
4139:..\src/command_processing.c ****         //It is the currently open working file
4140:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 25522              		.loc 1 4140 0
 25523 011a 07F16003 		add	r3, r7, #96
 25524 011e 543B     		subs	r3, r3, #84
 25525 0120 44F62061 		movw	r1, #20000
 25526 0124 1846     		mov	r0, r3
 25527 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 25528              	.L1045:
4141:..\src/command_processing.c ****     }
4142:..\src/command_processing.c **** 
4143:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
4144:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
4145:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 25529              		.loc 1 4145 0
 25530 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
4146:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 25531              		.loc 1 4146 0
 25532 012e 07F16003 		add	r3, r7, #96
 25533 0132 543B     		subs	r3, r3, #84
 25534 0134 1846     		mov	r0, r3
 25535 0136 FFF7FEFF 		bl	UART_RS485_PutString
4147:..\src/command_processing.c **** }
 25536              		.loc 1 4147 0
 25537 013a 00BF     		nop
 25538 013c 07F59C47 		add	r7, r7, #19968
 25539 0140 6037     		adds	r7, r7, #96
 25540              		.cfi_def_cfa_offset 8
 25541 0142 BD46     		mov	sp, r7
 25542              		.cfi_def_cfa_register 13
 25543              		@ sp needed
 25544 0144 80BD     		pop	{r7, pc}
 25545              	.L1047:
 25546 0146 00BF     		.align	2
 25547              	.L1046:
 25548 0148 4C1F0000 		.word	.LC297
 25549 014c 00000000 		.word	g_rx
 25550 0150 00000000 		.word	sdFile
 25551              		.cfi_endproc
 25552              	.LFE115:
 25553              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 25554              		.section	.text.cmd_remove_SD_file,"ax",%progbits
 25555              		.align	2
 25556              		.global	cmd_remove_SD_file
 25557              		.thumb
 25558              		.thumb_func
 25559              		.type	cmd_remove_SD_file, %function
 25560              	cmd_remove_SD_file:
 25561              	.LFB116:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 566


4148:..\src/command_processing.c **** 
4149:..\src/command_processing.c **** void cmd_remove_SD_file( uint16 filename_length ){
 25562              		.loc 1 4149 0
 25563              		.cfi_startproc
 25564              		@ args = 0, pretend = 0, frame = 64
 25565              		@ frame_needed = 1, uses_anonymous_args = 0
 25566 0000 80B5     		push	{r7, lr}
 25567              		.cfi_def_cfa_offset 8
 25568              		.cfi_offset 7, -8
 25569              		.cfi_offset 14, -4
 25570 0002 90B0     		sub	sp, sp, #64
 25571              		.cfi_def_cfa_offset 72
 25572 0004 00AF     		add	r7, sp, #0
 25573              		.cfi_def_cfa_register 7
 25574 0006 0346     		mov	r3, r0
 25575 0008 FB80     		strh	r3, [r7, #6]	@ movhi
4150:..\src/command_processing.c ****     
4151:..\src/command_processing.c ****     uint8 i = 0;
 25576              		.loc 1 4151 0
 25577 000a 0023     		movs	r3, #0
 25578 000c 87F83F30 		strb	r3, [r7, #63]
4152:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 25579              		.loc 1 4152 0
 25580 0010 0023     		movs	r3, #0
 25581 0012 FB60     		str	r3, [r7, #12]
 25582 0014 07F11003 		add	r3, r7, #16
 25583 0018 2E22     		movs	r2, #46
 25584 001a 0021     		movs	r1, #0
 25585 001c 1846     		mov	r0, r3
 25586 001e FFF7FEFF 		bl	memset
4153:..\src/command_processing.c ****     strcpy(filename, "");
 25587              		.loc 1 4153 0
 25588 0022 214B     		ldr	r3, .L1051
 25589 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25590 0026 3B73     		strb	r3, [r7, #12]
4154:..\src/command_processing.c ****     
4155:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 25591              		.loc 1 4155 0
 25592 0028 0023     		movs	r3, #0
 25593 002a 87F83F30 		strb	r3, [r7, #63]
 25594 002e 0FE0     		b	.L1049
 25595              	.L1050:
4156:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 25596              		.loc 1 4156 0 discriminator 3
 25597 0030 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 25598 0034 07F10C02 		add	r2, r7, #12
 25599 0038 1344     		add	r3, r3, r2
 25600 003a 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 25601 003e 0332     		adds	r2, r2, #3
 25602 0040 1A49     		ldr	r1, .L1051+4
 25603 0042 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 25604 0044 1A70     		strb	r2, [r3]
4155:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 25605              		.loc 1 4155 0 discriminator 3
 25606 0046 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 25607 004a 0133     		adds	r3, r3, #1
 25608 004c 87F83F30 		strb	r3, [r7, #63]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 567


 25609              	.L1049:
4155:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 25610              		.loc 1 4155 0 is_stmt 0 discriminator 1
 25611 0050 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 25612 0054 9BB2     		uxth	r3, r3
 25613 0056 FA88     		ldrh	r2, [r7, #6]
 25614 0058 9A42     		cmp	r2, r3
 25615 005a E9D8     		bhi	.L1050
4157:..\src/command_processing.c ****     }
4158:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 25616              		.loc 1 4158 0 is_stmt 1
 25617 005c 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 25618 0060 07F10C02 		add	r2, r7, #12
 25619 0064 1344     		add	r3, r3, r2
 25620 0066 0022     		movs	r2, #0
 25621 0068 1A70     		strb	r2, [r3]
4159:..\src/command_processing.c ****      
4160:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4161:..\src/command_processing.c ****     uint8 res = Remove_SD_File(filename);
 25622              		.loc 1 4161 0
 25623 006a 07F10C03 		add	r3, r7, #12
 25624 006e 1846     		mov	r0, r3
 25625 0070 FFF7FEFF 		bl	Remove_SD_File
 25626 0074 0346     		mov	r3, r0
 25627 0076 87F83E30 		strb	r3, [r7, #62]
4162:..\src/command_processing.c ****   
4163:..\src/command_processing.c ****     
4164:..\src/command_processing.c ****     uint8 packet_data[3]; 
4165:..\src/command_processing.c ****     
4166:..\src/command_processing.c ****     //Header package
4167:..\src/command_processing.c **** 
4168:..\src/command_processing.c ****     packet_data[0] = CMD_REMOVE_SD_SINGLE_FILE;
 25628              		.loc 1 4168 0
 25629 007a A823     		movs	r3, #168
 25630 007c 3B72     		strb	r3, [r7, #8]
4169:..\src/command_processing.c ****     packet_data[1] = res;
 25631              		.loc 1 4169 0
 25632 007e 97F83E30 		ldrb	r3, [r7, #62]
 25633 0082 7B72     		strb	r3, [r7, #9]
4170:..\src/command_processing.c **** 
4171:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4172:..\src/command_processing.c ****     packet_data[2] = LCRChecksum (packet_data, 2);
 25634              		.loc 1 4172 0
 25635 0084 07F10803 		add	r3, r7, #8
 25636 0088 0221     		movs	r1, #2
 25637 008a 1846     		mov	r0, r3
 25638 008c FFF7FEFF 		bl	LCRChecksum
 25639 0090 0346     		mov	r3, r0
 25640 0092 BB72     		strb	r3, [r7, #10]
4173:..\src/command_processing.c ****     
4174:..\src/command_processing.c ****     commWrite(packet_data, 3);
 25641              		.loc 1 4174 0
 25642 0094 07F10803 		add	r3, r7, #8
 25643 0098 0321     		movs	r1, #3
 25644 009a 1846     		mov	r0, r3
 25645 009c FFF7FEFF 		bl	commWrite
4175:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 568


 25646              		.loc 1 4175 0
 25647 00a0 00BF     		nop
 25648 00a2 4037     		adds	r7, r7, #64
 25649              		.cfi_def_cfa_offset 8
 25650 00a4 BD46     		mov	sp, r7
 25651              		.cfi_def_cfa_register 13
 25652              		@ sp needed
 25653 00a6 80BD     		pop	{r7, pc}
 25654              	.L1052:
 25655              		.align	2
 25656              	.L1051:
 25657 00a8 4C1F0000 		.word	.LC297
 25658 00ac 00000000 		.word	g_rx
 25659              		.cfi_endproc
 25660              	.LFE116:
 25661              		.size	cmd_remove_SD_file, .-cmd_remove_SD_file
 25662              		.section	.text.air_chambers_control,"ax",%progbits
 25663              		.align	2
 25664              		.global	air_chambers_control
 25665              		.thumb
 25666              		.thumb_func
 25667              		.type	air_chambers_control, %function
 25668              	air_chambers_control:
 25669              	.LFB117:
4176:..\src/command_processing.c **** 
4177:..\src/command_processing.c **** //==============================================================================
4178:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
4179:..\src/command_processing.c **** //==============================================================================
4180:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
4181:..\src/command_processing.c **** 
4182:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
 25670              		.loc 1 4182 0
 25671              		.cfi_startproc
 25672              		@ args = 0, pretend = 0, frame = 8
 25673              		@ frame_needed = 1, uses_anonymous_args = 0
 25674              		@ link register save eliminated.
 25675 0000 80B4     		push	{r7}
 25676              		.cfi_def_cfa_offset 4
 25677              		.cfi_offset 7, -4
 25678 0002 83B0     		sub	sp, sp, #12
 25679              		.cfi_def_cfa_offset 16
 25680 0004 00AF     		add	r7, sp, #0
 25681              		.cfi_def_cfa_register 7
 25682 0006 7860     		str	r0, [r7, #4]
4183:..\src/command_processing.c ****     
4184:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4185:..\src/command_processing.c ****     
4186:..\src/command_processing.c ****     int16 curr_diff;
4187:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
4188:..\src/command_processing.c ****     int32 valve_command;
4189:..\src/command_processing.c ****     int16 x_value;
4190:..\src/command_processing.c **** 
4191:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
4192:..\src/command_processing.c ****     
4193:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
4194:..\src/command_processing.c ****     
4195:..\src/command_processing.c ****     // Current difference saturation old mapping
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 569


4196:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
4197:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
4198:..\src/command_processing.c **** //    }
4199:..\src/command_processing.c **** //    if(curr_diff < 0) {
4200:..\src/command_processing.c **** //        curr_diff = 0;
4201:..\src/command_processing.c **** //    }
4202:..\src/command_processing.c **** 
4203:..\src/command_processing.c ****     // Compute pressure reference
4204:..\src/command_processing.c **** 
4205:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
4206:..\src/command_processing.c ****     if (x_value < 0)
4207:..\src/command_processing.c ****         x_value = 0;
4208:..\src/command_processing.c ****     
4209:..\src/command_processing.c ****     // old mapping --- linear mapping
4210:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
4211:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
4212:..\src/command_processing.c ****     if (pressure_reference < 0)
4213:..\src/command_processing.c ****         pressure_reference = 0;
4214:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
4215:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
4216:..\src/command_processing.c ****     
4217:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
4218:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
4219:..\src/command_processing.c **** //    if (err_pressure < 0){
4220:..\src/command_processing.c **** //        err_pressure = 0;
4221:..\src/command_processing.c **** //    }
4222:..\src/command_processing.c ****     
4223:..\src/command_processing.c ****     if (x_value <= 0){
4224:..\src/command_processing.c ****         //i.e the hand is opening
4225:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
4226:..\src/command_processing.c ****     }
4227:..\src/command_processing.c ****     else {
4228:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4229:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4230:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4231:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
4232:..\src/command_processing.c ****     }
4233:..\src/command_processing.c ****     
4234:..\src/command_processing.c ****     // Pump control
4235:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
4236:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4237:..\src/command_processing.c ****     
4238:..\src/command_processing.c ****     // Limit output voltage
4239:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
4240:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
4241:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
4242:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4243:..\src/command_processing.c ****         
4244:..\src/command_processing.c ****     VALVE_Write(valve_command);
4245:..\src/command_processing.c ****     
4246:..\src/command_processing.c ****     
4247:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4248:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4249:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4250:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
4251:..\src/command_processing.c **** #endif
4252:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 570


 25683              		.loc 1 4252 0
 25684 0008 00BF     		nop
 25685 000a 0C37     		adds	r7, r7, #12
 25686              		.cfi_def_cfa_offset 4
 25687 000c BD46     		mov	sp, r7
 25688              		.cfi_def_cfa_register 13
 25689              		@ sp needed
 25690 000e 80BC     		pop	{r7}
 25691              		.cfi_restore 7
 25692              		.cfi_def_cfa_offset 0
 25693 0010 7047     		bx	lr
 25694              		.cfi_endproc
 25695              	.LFE117:
 25696              		.size	air_chambers_control, .-air_chambers_control
 25697 0012 00BF     		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 25698              		.align	2
 25699              		.global	emg_activation_velocity_fsm
 25700              		.thumb
 25701              		.thumb_func
 25702              		.type	emg_activation_velocity_fsm, %function
 25703              	emg_activation_velocity_fsm:
 25704              	.LFB118:
4253:..\src/command_processing.c **** 
4254:..\src/command_processing.c **** 
4255:..\src/command_processing.c **** //==============================================================================
4256:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4257:..\src/command_processing.c **** //==============================================================================
4258:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4259:..\src/command_processing.c **** 
4260:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 25705              		.loc 1 4260 0
 25706              		.cfi_startproc
 25707              		@ args = 0, pretend = 0, frame = 16
 25708              		@ frame_needed = 1, uses_anonymous_args = 0
 25709              		@ link register save eliminated.
 25710 0000 80B4     		push	{r7}
 25711              		.cfi_def_cfa_offset 4
 25712              		.cfi_offset 7, -4
 25713 0002 85B0     		sub	sp, sp, #20
 25714              		.cfi_def_cfa_offset 24
 25715 0004 00AF     		add	r7, sp, #0
 25716              		.cfi_def_cfa_register 7
4261:..\src/command_processing.c ****       
4262:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4263:..\src/command_processing.c ****     static int32 cnt = 0;
4264:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4265:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4266:..\src/command_processing.c ****     
4267:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 25717              		.loc 1 4267 0
 25718 0006 534B     		ldr	r3, .L1083
 25719 0008 1B68     		ldr	r3, [r3]
 25720 000a 534A     		ldr	r2, .L1083+4
 25721 000c B2F8F021 		ldrh	r2, [r2, #496]
 25722 0010 9B1A     		subs	r3, r3, r2
 25723 0012 FB60     		str	r3, [r7, #12]
4268:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 571


 25724              		.loc 1 4268 0
 25725 0014 4F4B     		ldr	r3, .L1083
 25726 0016 5B68     		ldr	r3, [r3, #4]
 25727 0018 4F4A     		ldr	r2, .L1083+4
 25728 001a B2F8F221 		ldrh	r2, [r2, #498]
 25729 001e 9B1A     		subs	r3, r3, r2
 25730 0020 BB60     		str	r3, [r7, #8]
4269:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 25731              		.loc 1 4269 0
 25732 0022 4C4B     		ldr	r3, .L1083
 25733 0024 1B68     		ldr	r3, [r3]
 25734 0026 4C4A     		ldr	r2, .L1083+4
 25735 0028 B2F8E222 		ldrh	r2, [r2, #738]
 25736 002c 9B1A     		subs	r3, r3, r2
 25737 002e 7B60     		str	r3, [r7, #4]
4270:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 25738              		.loc 1 4270 0
 25739 0030 484B     		ldr	r3, .L1083
 25740 0032 5B68     		ldr	r3, [r3, #4]
 25741 0034 484A     		ldr	r2, .L1083+4
 25742 0036 B2F8E422 		ldrh	r2, [r2, #740]
 25743 003a 9B1A     		subs	r3, r3, r2
 25744 003c 3B60     		str	r3, [r7]
4271:..\src/command_processing.c ****     
4272:..\src/command_processing.c **** 
4273:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4274:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4275:..\src/command_processing.c ****     switch (fsm_state){
 25745              		.loc 1 4275 0
 25746 003e 474B     		ldr	r3, .L1083+8
 25747 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25748 0042 032B     		cmp	r3, #3
 25749 0044 7FD8     		bhi	.L1055
 25750 0046 01A2     		adr	r2, .L1057
 25751 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 25752              		.p2align 2
 25753              	.L1057:
 25754 004c 5D000000 		.word	.L1056+1
 25755 0050 71000000 		.word	.L1058+1
 25756 0054 11010000 		.word	.L1059+1
 25757 0058 25010000 		.word	.L1060+1
 25758              		.p2align 1
 25759              	.L1056:
4276:..\src/command_processing.c ****         case RELAX_STATE:
4277:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 25760              		.loc 1 4277 0
 25761 005c FB68     		ldr	r3, [r7, #12]
 25762 005e 002B     		cmp	r3, #0
 25763 0060 02DC     		bgt	.L1061
 25764              		.loc 1 4277 0 is_stmt 0 discriminator 1
 25765 0062 BB68     		ldr	r3, [r7, #8]
 25766 0064 002B     		cmp	r3, #0
 25767 0066 67DD     		ble	.L1079
 25768              	.L1061:
4278:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 25769              		.loc 1 4278 0 is_stmt 1
 25770 0068 3C4B     		ldr	r3, .L1083+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 572


 25771 006a 0122     		movs	r2, #1
 25772 006c 1A70     		strb	r2, [r3]
4279:..\src/command_processing.c ****             }
4280:..\src/command_processing.c ****             
4281:..\src/command_processing.c ****             break;
 25773              		.loc 1 4281 0
 25774 006e 63E0     		b	.L1079
 25775              	.L1058:
4282:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4283:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 25776              		.loc 1 4283 0
 25777 0070 FB68     		ldr	r3, [r7, #12]
 25778 0072 002B     		cmp	r3, #0
 25779 0074 02DC     		bgt	.L1063
 25780              		.loc 1 4283 0 is_stmt 0 discriminator 1
 25781 0076 BB68     		ldr	r3, [r7, #8]
 25782 0078 002B     		cmp	r3, #0
 25783 007a 05DD     		ble	.L1064
 25784              	.L1063:
4284:..\src/command_processing.c ****                 cnt = cnt +1;
 25785              		.loc 1 4284 0 is_stmt 1
 25786 007c 384B     		ldr	r3, .L1083+12
 25787 007e 1B68     		ldr	r3, [r3]
 25788 0080 0133     		adds	r3, r3, #1
 25789 0082 374A     		ldr	r2, .L1083+12
 25790 0084 1360     		str	r3, [r2]
 25791 0086 02E0     		b	.L1065
 25792              	.L1064:
4285:..\src/command_processing.c ****             }
4286:..\src/command_processing.c ****             else {
4287:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 25793              		.loc 1 4287 0
 25794 0088 344B     		ldr	r3, .L1083+8
 25795 008a 0022     		movs	r2, #0
 25796 008c 1A70     		strb	r2, [r3]
 25797              	.L1065:
4288:..\src/command_processing.c ****             }
4289:..\src/command_processing.c ****             
4290:..\src/command_processing.c ****             if (cnt > 100){
 25798              		.loc 1 4290 0
 25799 008e 344B     		ldr	r3, .L1083+12
 25800 0090 1B68     		ldr	r3, [r3]
 25801 0092 642B     		cmp	r3, #100
 25802 0094 52DD     		ble	.L1080
4291:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 25803              		.loc 1 4291 0
 25804 0096 FB68     		ldr	r3, [r7, #12]
 25805 0098 002B     		cmp	r3, #0
 25806 009a 02DD     		ble	.L1067
 25807              		.loc 1 4291 0 is_stmt 0 discriminator 1
 25808 009c 7B68     		ldr	r3, [r7, #4]
 25809 009e 002B     		cmp	r3, #0
 25810 00a0 05DC     		bgt	.L1068
 25811              	.L1067:
 25812              		.loc 1 4291 0 discriminator 3
 25813 00a2 BB68     		ldr	r3, [r7, #8]
 25814 00a4 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 573


 25815 00a6 0EDD     		ble	.L1069
 25816              		.loc 1 4291 0 discriminator 4
 25817 00a8 3B68     		ldr	r3, [r7]
 25818 00aa 002B     		cmp	r3, #0
 25819 00ac 0BDD     		ble	.L1069
 25820              	.L1068:
4292:..\src/command_processing.c ****                     // Fast activation
4293:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 25821              		.loc 1 4293 0 is_stmt 1
 25822 00ae 2A4B     		ldr	r3, .L1083+4
 25823 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 25824 00b4 002B     		cmp	r3, #0
 25825 00b6 03D1     		bne	.L1070
4294:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 25826              		.loc 1 4294 0
 25827 00b8 284B     		ldr	r3, .L1083+8
 25828 00ba 0222     		movs	r2, #2
 25829 00bc 1A70     		strb	r2, [r3]
 25830 00be 02E0     		b	.L1069
 25831              	.L1070:
4295:..\src/command_processing.c ****                     }
4296:..\src/command_processing.c ****                     else{
4297:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 25832              		.loc 1 4297 0
 25833 00c0 264B     		ldr	r3, .L1083+8
 25834 00c2 0322     		movs	r2, #3
 25835 00c4 1A70     		strb	r2, [r3]
 25836              	.L1069:
4298:..\src/command_processing.c ****                     }
4299:..\src/command_processing.c ****                 }
4300:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 25837              		.loc 1 4300 0
 25838 00c6 FB68     		ldr	r3, [r7, #12]
 25839 00c8 002B     		cmp	r3, #0
 25840 00ca 02DD     		ble	.L1071
 25841              		.loc 1 4300 0 is_stmt 0 discriminator 1
 25842 00cc 7B68     		ldr	r3, [r7, #4]
 25843 00ce 002B     		cmp	r3, #0
 25844 00d0 05DB     		blt	.L1072
 25845              	.L1071:
 25846              		.loc 1 4300 0 discriminator 3
 25847 00d2 BB68     		ldr	r3, [r7, #8]
 25848 00d4 002B     		cmp	r3, #0
 25849 00d6 0EDD     		ble	.L1073
 25850              		.loc 1 4300 0 discriminator 4
 25851 00d8 3B68     		ldr	r3, [r7]
 25852 00da 002B     		cmp	r3, #0
 25853 00dc 0BDA     		bge	.L1073
 25854              	.L1072:
4301:..\src/command_processing.c ****                     // Slow activation
4302:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 25855              		.loc 1 4302 0 is_stmt 1
 25856 00de 1E4B     		ldr	r3, .L1083+4
 25857 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 25858 00e4 002B     		cmp	r3, #0
 25859 00e6 03D1     		bne	.L1074
4303:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 574


 25860              		.loc 1 4303 0
 25861 00e8 1C4B     		ldr	r3, .L1083+8
 25862 00ea 0322     		movs	r2, #3
 25863 00ec 1A70     		strb	r2, [r3]
 25864 00ee 02E0     		b	.L1073
 25865              	.L1074:
4304:..\src/command_processing.c ****                     }
4305:..\src/command_processing.c ****                     else{
4306:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 25866              		.loc 1 4306 0
 25867 00f0 1A4B     		ldr	r3, .L1083+8
 25868 00f2 0222     		movs	r2, #2
 25869 00f4 1A70     		strb	r2, [r3]
 25870              	.L1073:
4307:..\src/command_processing.c ****                     }
4308:..\src/command_processing.c ****                 }
4309:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 25871              		.loc 1 4309 0
 25872 00f6 FB68     		ldr	r3, [r7, #12]
 25873 00f8 002B     		cmp	r3, #0
 25874 00fa 05DA     		bge	.L1075
 25875              		.loc 1 4309 0 is_stmt 0 discriminator 1
 25876 00fc BB68     		ldr	r3, [r7, #8]
 25877 00fe 002B     		cmp	r3, #0
 25878 0100 02DA     		bge	.L1075
4310:..\src/command_processing.c ****                     // Involuntary activation
4311:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 25879              		.loc 1 4311 0 is_stmt 1
 25880 0102 164B     		ldr	r3, .L1083+8
 25881 0104 0022     		movs	r2, #0
 25882 0106 1A70     		strb	r2, [r3]
 25883              	.L1075:
4312:..\src/command_processing.c ****                 }
4313:..\src/command_processing.c ****                 cnt = 0;
 25884              		.loc 1 4313 0
 25885 0108 154B     		ldr	r3, .L1083+12
 25886 010a 0022     		movs	r2, #0
 25887 010c 1A60     		str	r2, [r3]
4314:..\src/command_processing.c ****             }
4315:..\src/command_processing.c ****     
4316:..\src/command_processing.c ****             break;
 25888              		.loc 1 4316 0
 25889 010e 15E0     		b	.L1080
 25890              	.L1059:
4317:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4318:..\src/command_processing.c ****             
4319:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 25891              		.loc 1 4319 0
 25892 0110 FB68     		ldr	r3, [r7, #12]
 25893 0112 002B     		cmp	r3, #0
 25894 0114 14DA     		bge	.L1081
 25895              		.loc 1 4319 0 is_stmt 0 discriminator 1
 25896 0116 BB68     		ldr	r3, [r7, #8]
 25897 0118 002B     		cmp	r3, #0
 25898 011a 11DA     		bge	.L1081
4320:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 25899              		.loc 1 4320 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 575


 25900 011c 0F4B     		ldr	r3, .L1083+8
 25901 011e 0022     		movs	r2, #0
 25902 0120 1A70     		strb	r2, [r3]
4321:..\src/command_processing.c ****             }
4322:..\src/command_processing.c ****         
4323:..\src/command_processing.c ****             break;
 25903              		.loc 1 4323 0
 25904 0122 0DE0     		b	.L1081
 25905              	.L1060:
4324:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4325:..\src/command_processing.c ****           
4326:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 25906              		.loc 1 4326 0
 25907 0124 FB68     		ldr	r3, [r7, #12]
 25908 0126 002B     		cmp	r3, #0
 25909 0128 0CDA     		bge	.L1082
 25910              		.loc 1 4326 0 is_stmt 0 discriminator 1
 25911 012a BB68     		ldr	r3, [r7, #8]
 25912 012c 002B     		cmp	r3, #0
 25913 012e 09DA     		bge	.L1082
4327:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 25914              		.loc 1 4327 0 is_stmt 1
 25915 0130 0A4B     		ldr	r3, .L1083+8
 25916 0132 0022     		movs	r2, #0
 25917 0134 1A70     		strb	r2, [r3]
4328:..\src/command_processing.c ****             }
4329:..\src/command_processing.c ****             
4330:..\src/command_processing.c ****             break;
 25918              		.loc 1 4330 0
 25919 0136 05E0     		b	.L1082
 25920              	.L1079:
4281:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 25921              		.loc 1 4281 0
 25922 0138 00BF     		nop
 25923 013a 04E0     		b	.L1055
 25924              	.L1080:
4316:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 25925              		.loc 1 4316 0
 25926 013c 00BF     		nop
 25927 013e 02E0     		b	.L1055
 25928              	.L1081:
4323:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
 25929              		.loc 1 4323 0
 25930 0140 00BF     		nop
 25931 0142 00E0     		b	.L1055
 25932              	.L1082:
 25933              		.loc 1 4330 0
 25934 0144 00BF     		nop
 25935              	.L1055:
4331:..\src/command_processing.c ****     }
4332:..\src/command_processing.c ****     
4333:..\src/command_processing.c ****     return fsm_state;
 25936              		.loc 1 4333 0
 25937 0146 054B     		ldr	r3, .L1083+8
 25938 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4334:..\src/command_processing.c **** 
4335:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 576


 25939              		.loc 1 4335 0
 25940 014a 1846     		mov	r0, r3
 25941 014c 1437     		adds	r7, r7, #20
 25942              		.cfi_def_cfa_offset 4
 25943 014e BD46     		mov	sp, r7
 25944              		.cfi_def_cfa_register 13
 25945              		@ sp needed
 25946 0150 80BC     		pop	{r7}
 25947              		.cfi_restore 7
 25948              		.cfi_def_cfa_offset 0
 25949 0152 7047     		bx	lr
 25950              	.L1084:
 25951              		.align	2
 25952              	.L1083:
 25953 0154 00000000 		.word	g_adc_meas
 25954 0158 00000000 		.word	c_mem
 25955 015c 0C000000 		.word	fsm_state.11560
 25956 0160 10000000 		.word	cnt.11561
 25957              		.cfi_endproc
 25958              	.LFE118:
 25959              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 25960              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 25961              		.align	2
 25962              		.global	otbk_act_wrist_control
 25963              		.thumb
 25964              		.thumb_func
 25965              		.type	otbk_act_wrist_control, %function
 25966              	otbk_act_wrist_control:
 25967              	.LFB119:
4336:..\src/command_processing.c **** 
4337:..\src/command_processing.c **** //==============================================================================
4338:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4339:..\src/command_processing.c **** //==============================================================================
4340:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4341:..\src/command_processing.c **** 
4342:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 25968              		.loc 1 4342 0
 25969              		.cfi_startproc
 25970              		@ args = 0, pretend = 0, frame = 8
 25971              		@ frame_needed = 1, uses_anonymous_args = 0
 25972              		@ link register save eliminated.
 25973 0000 80B4     		push	{r7}
 25974              		.cfi_def_cfa_offset 4
 25975              		.cfi_offset 7, -4
 25976 0002 83B0     		sub	sp, sp, #12
 25977              		.cfi_def_cfa_offset 16
 25978 0004 00AF     		add	r7, sp, #0
 25979              		.cfi_def_cfa_register 7
 25980 0006 7860     		str	r0, [r7, #4]
4343:..\src/command_processing.c ****     
4344:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4345:..\src/command_processing.c ****     
4346:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4347:..\src/command_processing.c ****         
4348:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4349:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4350:..\src/command_processing.c ****     switch (fsm_state){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 577


4351:..\src/command_processing.c ****         case RELAX_STATE:
4352:..\src/command_processing.c ****             
4353:..\src/command_processing.c ****             // Wrist stop
4354:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4355:..\src/command_processing.c ****             
4356:..\src/command_processing.c ****             // Softhand stop
4357:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4358:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4359:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4360:..\src/command_processing.c ****             
4361:..\src/command_processing.c ****             break;
4362:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4363:..\src/command_processing.c ****                 
4364:..\src/command_processing.c ****             break;
4365:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4366:..\src/command_processing.c ****             
4367:..\src/command_processing.c ****             // Wrist movement
4368:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4369:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4370:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4371:..\src/command_processing.c ****                 }
4372:..\src/command_processing.c ****                 else {
4373:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4374:..\src/command_processing.c ****                 }
4375:..\src/command_processing.c ****             }
4376:..\src/command_processing.c ****             else {
4377:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4378:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4379:..\src/command_processing.c ****                 }
4380:..\src/command_processing.c ****                 else {
4381:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4382:..\src/command_processing.c ****                 }
4383:..\src/command_processing.c ****             }
4384:..\src/command_processing.c ****             
4385:..\src/command_processing.c ****             // Softhand stop
4386:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4387:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4388:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4389:..\src/command_processing.c ****             
4390:..\src/command_processing.c ****             break;
4391:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4392:..\src/command_processing.c ****             
4393:..\src/command_processing.c ****             // Wrist stop
4394:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4395:..\src/command_processing.c ****             
4396:..\src/command_processing.c ****             // SoftHand movement
4397:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4398:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4399:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4400:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4401:..\src/command_processing.c ****             
4402:..\src/command_processing.c ****             break;
4403:..\src/command_processing.c ****     }
4404:..\src/command_processing.c ****         
4405:..\src/command_processing.c ****     // Limit output voltage
4406:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4407:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 578


4408:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4409:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4410:..\src/command_processing.c ****     
4411:..\src/command_processing.c **** #endif
4412:..\src/command_processing.c **** }
 25981              		.loc 1 4412 0
 25982 0008 00BF     		nop
 25983 000a 0C37     		adds	r7, r7, #12
 25984              		.cfi_def_cfa_offset 4
 25985 000c BD46     		mov	sp, r7
 25986              		.cfi_def_cfa_register 13
 25987              		@ sp needed
 25988 000e 80BC     		pop	{r7}
 25989              		.cfi_restore 7
 25990              		.cfi_def_cfa_offset 0
 25991 0010 7047     		bx	lr
 25992              		.cfi_endproc
 25993              	.LFE119:
 25994              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 25995 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 25996              		.align	2
 25997              		.global	drive_slave
 25998              		.thumb
 25999              		.thumb_func
 26000              		.type	drive_slave, %function
 26001              	drive_slave:
 26002              	.LFB120:
4413:..\src/command_processing.c **** 
4414:..\src/command_processing.c **** //==============================================================================
4415:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4416:..\src/command_processing.c **** //==============================================================================
4417:..\src/command_processing.c ****  
4418:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 26003              		.loc 1 4418 0
 26004              		.cfi_startproc
 26005              		@ args = 0, pretend = 0, frame = 8
 26006              		@ frame_needed = 1, uses_anonymous_args = 0
 26007              		@ link register save eliminated.
 26008 0000 80B4     		push	{r7}
 26009              		.cfi_def_cfa_offset 4
 26010              		.cfi_offset 7, -4
 26011 0002 83B0     		sub	sp, sp, #12
 26012              		.cfi_def_cfa_offset 16
 26013 0004 00AF     		add	r7, sp, #0
 26014              		.cfi_def_cfa_register 7
 26015 0006 0346     		mov	r3, r0
 26016 0008 0A46     		mov	r2, r1
 26017 000a FB71     		strb	r3, [r7, #7]
 26018 000c 1346     		mov	r3, r2
 26019 000e BB71     		strb	r3, [r7, #6]
4419:..\src/command_processing.c **** 
4420:..\src/command_processing.c **** #ifdef MASTER_FW
4421:..\src/command_processing.c ****     uint8 packet_data[6];
4422:..\src/command_processing.c ****     uint8 packet_lenght;
4423:..\src/command_processing.c ****     int16 aux_int16;
4424:..\src/command_processing.c **** 
4425:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 579


4426:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
4427:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4428:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
4429:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
4430:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
4431:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4432:..\src/command_processing.c ****         master_mode = 0;
4433:..\src/command_processing.c ****         return;
4434:..\src/command_processing.c ****     }
4435:..\src/command_processing.c ****         
4436:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
4437:..\src/command_processing.c ****         master_mode = 0;
4438:..\src/command_processing.c ****         return;
4439:..\src/command_processing.c ****     }
4440:..\src/command_processing.c ****     
4441:..\src/command_processing.c ****        
4442:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4443:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
4444:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
4445:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
4446:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
4447:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
4448:..\src/command_processing.c ****     
4449:..\src/command_processing.c ****     packet_lenght = 6;
4450:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4451:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
4452:..\src/command_processing.c **** 
4453:..\src/command_processing.c **** #endif
4454:..\src/command_processing.c **** }
 26020              		.loc 1 4454 0
 26021 0010 00BF     		nop
 26022 0012 0C37     		adds	r7, r7, #12
 26023              		.cfi_def_cfa_offset 4
 26024 0014 BD46     		mov	sp, r7
 26025              		.cfi_def_cfa_register 13
 26026              		@ sp needed
 26027 0016 80BC     		pop	{r7}
 26028              		.cfi_restore 7
 26029              		.cfi_def_cfa_offset 0
 26030 0018 7047     		bx	lr
 26031              		.cfi_endproc
 26032              	.LFE120:
 26033              		.size	drive_slave, .-drive_slave
 26034 001a 00BF     		.section	.text.stop_master_device,"ax",%progbits
 26035              		.align	2
 26036              		.global	stop_master_device
 26037              		.thumb
 26038              		.thumb_func
 26039              		.type	stop_master_device, %function
 26040              	stop_master_device:
 26041              	.LFB121:
4455:..\src/command_processing.c **** 
4456:..\src/command_processing.c **** //==============================================================================
4457:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4458:..\src/command_processing.c **** //==============================================================================
4459:..\src/command_processing.c ****  
4460:..\src/command_processing.c **** void stop_master_device() {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 580


 26042              		.loc 1 4460 0
 26043              		.cfi_startproc
 26044              		@ args = 0, pretend = 0, frame = 0
 26045              		@ frame_needed = 1, uses_anonymous_args = 0
 26046              		@ link register save eliminated.
 26047 0000 80B4     		push	{r7}
 26048              		.cfi_def_cfa_offset 4
 26049              		.cfi_offset 7, -4
 26050 0002 00AF     		add	r7, sp, #0
 26051              		.cfi_def_cfa_register 7
4461:..\src/command_processing.c ****     
4462:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4463:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
4464:..\src/command_processing.c ****         // Stop pump and open valve
4465:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
4466:..\src/command_processing.c ****         VALVE_Write(0);
4467:..\src/command_processing.c ****     }
4468:..\src/command_processing.c **** #endif
4469:..\src/command_processing.c **** 
4470:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4471:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
4472:..\src/command_processing.c ****         //Stop wrist motor
4473:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4474:..\src/command_processing.c ****     }
4475:..\src/command_processing.c **** #endif    
4476:..\src/command_processing.c **** }
 26052              		.loc 1 4476 0
 26053 0004 00BF     		nop
 26054 0006 BD46     		mov	sp, r7
 26055              		.cfi_def_cfa_register 13
 26056              		@ sp needed
 26057 0008 80BC     		pop	{r7}
 26058              		.cfi_restore 7
 26059              		.cfi_def_cfa_offset 0
 26060 000a 7047     		bx	lr
 26061              		.cfi_endproc
 26062              	.LFE121:
 26063              		.size	stop_master_device, .-stop_master_device
 26064              		.section	.text.deactivate_slaves,"ax",%progbits
 26065              		.align	2
 26066              		.global	deactivate_slaves
 26067              		.thumb
 26068              		.thumb_func
 26069              		.type	deactivate_slaves, %function
 26070              	deactivate_slaves:
 26071              	.LFB122:
4477:..\src/command_processing.c **** 
4478:..\src/command_processing.c **** //==============================================================================
4479:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4480:..\src/command_processing.c **** //==============================================================================
4481:..\src/command_processing.c ****  
4482:..\src/command_processing.c **** void deactivate_slaves() {
 26072              		.loc 1 4482 0
 26073              		.cfi_startproc
 26074              		@ args = 0, pretend = 0, frame = 0
 26075              		@ frame_needed = 1, uses_anonymous_args = 0
 26076              		@ link register save eliminated.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 581


 26077 0000 80B4     		push	{r7}
 26078              		.cfi_def_cfa_offset 4
 26079              		.cfi_offset 7, -4
 26080 0002 00AF     		add	r7, sp, #0
 26081              		.cfi_def_cfa_register 7
4483:..\src/command_processing.c ****     
4484:..\src/command_processing.c **** #ifdef MASTER_FW
4485:..\src/command_processing.c ****     
4486:..\src/command_processing.c ****     uint8 packet_data[10];
4487:..\src/command_processing.c ****     uint8 packet_lenght;
4488:..\src/command_processing.c ****     
4489:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4490:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4491:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
4492:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
4493:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
4494:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4495:..\src/command_processing.c ****         master_mode = 0;
4496:..\src/command_processing.c ****         return;
4497:..\src/command_processing.c ****     }
4498:..\src/command_processing.c ****    
4499:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4500:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
4501:..\src/command_processing.c **** 
4502:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
4503:..\src/command_processing.c ****     packet_lenght = 3;
4504:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4505:..\src/command_processing.c ****     
4506:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
4507:..\src/command_processing.c ****     
4508:..\src/command_processing.c **** #endif    
4509:..\src/command_processing.c **** }
 26082              		.loc 1 4509 0
 26083 0004 00BF     		nop
 26084 0006 BD46     		mov	sp, r7
 26085              		.cfi_def_cfa_register 13
 26086              		@ sp needed
 26087 0008 80BC     		pop	{r7}
 26088              		.cfi_restore 7
 26089              		.cfi_def_cfa_offset 0
 26090 000a 7047     		bx	lr
 26091              		.cfi_endproc
 26092              	.LFE122:
 26093              		.size	deactivate_slaves, .-deactivate_slaves
 26094              		.bss
 26095              		.align	2
 26096              	h_time.11231:
 26097 0000 00000000 		.space	4
 26098              		.align	1
 26099              	i.11272:
 26100 0004 0000     		.space	2
 26101 0006 0000     		.align	2
 26102              	last_aux_int16.11403:
 26103 0008 00000000 		.space	4
 26104              	fsm_state.11560:
 26105 000c 00       		.space	1
 26106 000d 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 582


 26107              	cnt.11561:
 26108 0010 00000000 		.space	4
 26109              		.text
 26110              	.Letext0:
 26111              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 26112              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 26113              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 26114              		.file 6 "..\\src\\commands.h"
 26115              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 26116              		.file 8 "..\\src\\globals.h"
 26117              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 26118              		.section	.debug_info,"",%progbits
 26119              	.Ldebug_info0:
 26120 0000 21270000 		.4byte	0x2721
 26121 0004 0400     		.2byte	0x4
 26122 0006 00000000 		.4byte	.Ldebug_abbrev0
 26123 000a 04       		.byte	0x4
 26124 000b 01       		.uleb128 0x1
 26125 000c B6090000 		.4byte	.LASF408
 26126 0010 0C       		.byte	0xc
 26127 0011 54150000 		.4byte	.LASF409
 26128 0015 DA150000 		.4byte	.LASF410
 26129 0019 00000000 		.4byte	.Ldebug_ranges0+0
 26130 001d 00000000 		.4byte	0
 26131 0021 00000000 		.4byte	.Ldebug_line0
 26132 0025 02       		.uleb128 0x2
 26133 0026 01       		.byte	0x1
 26134 0027 06       		.byte	0x6
 26135 0028 8E040000 		.4byte	.LASF0
 26136 002c 02       		.uleb128 0x2
 26137 002d 01       		.byte	0x1
 26138 002e 08       		.byte	0x8
 26139 002f 08050000 		.4byte	.LASF1
 26140 0033 02       		.uleb128 0x2
 26141 0034 02       		.byte	0x2
 26142 0035 05       		.byte	0x5
 26143 0036 BD110000 		.4byte	.LASF2
 26144 003a 02       		.uleb128 0x2
 26145 003b 02       		.byte	0x2
 26146 003c 07       		.byte	0x7
 26147 003d 46140000 		.4byte	.LASF3
 26148 0041 03       		.uleb128 0x3
 26149 0042 12150000 		.4byte	.LASF5
 26150 0046 03       		.byte	0x3
 26151 0047 3F       		.byte	0x3f
 26152 0048 4C000000 		.4byte	0x4c
 26153 004c 02       		.uleb128 0x2
 26154 004d 04       		.byte	0x4
 26155 004e 05       		.byte	0x5
 26156 004f 4D030000 		.4byte	.LASF4
 26157 0053 03       		.uleb128 0x3
 26158 0054 810A0000 		.4byte	.LASF6
 26159 0058 03       		.byte	0x3
 26160 0059 41       		.byte	0x41
 26161 005a 5E000000 		.4byte	0x5e
 26162 005e 02       		.uleb128 0x2
 26163 005f 04       		.byte	0x4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 583


 26164 0060 07       		.byte	0x7
 26165 0061 70080000 		.4byte	.LASF7
 26166 0065 02       		.uleb128 0x2
 26167 0066 08       		.byte	0x8
 26168 0067 05       		.byte	0x5
 26169 0068 8C0A0000 		.4byte	.LASF8
 26170 006c 02       		.uleb128 0x2
 26171 006d 08       		.byte	0x8
 26172 006e 07       		.byte	0x7
 26173 006f B70E0000 		.4byte	.LASF9
 26174 0073 04       		.uleb128 0x4
 26175 0074 04       		.byte	0x4
 26176 0075 05       		.byte	0x5
 26177 0076 696E7400 		.ascii	"int\000"
 26178 007a 02       		.uleb128 0x2
 26179 007b 04       		.byte	0x4
 26180 007c 07       		.byte	0x7
 26181 007d C90B0000 		.4byte	.LASF10
 26182 0081 03       		.uleb128 0x3
 26183 0082 D2000000 		.4byte	.LASF11
 26184 0086 04       		.byte	0x4
 26185 0087 2C       		.byte	0x2c
 26186 0088 41000000 		.4byte	0x41
 26187 008c 03       		.uleb128 0x3
 26188 008d B4130000 		.4byte	.LASF12
 26189 0091 04       		.byte	0x4
 26190 0092 30       		.byte	0x30
 26191 0093 53000000 		.4byte	0x53
 26192 0097 05       		.uleb128 0x5
 26193 0098 9F110000 		.4byte	.LASF13
 26194 009c 05       		.byte	0x5
 26195 009d E401     		.2byte	0x1e4
 26196 009f 2C000000 		.4byte	0x2c
 26197 00a3 05       		.uleb128 0x5
 26198 00a4 B7150000 		.4byte	.LASF14
 26199 00a8 05       		.byte	0x5
 26200 00a9 E501     		.2byte	0x1e5
 26201 00ab 3A000000 		.4byte	0x3a
 26202 00af 05       		.uleb128 0x5
 26203 00b0 08010000 		.4byte	.LASF15
 26204 00b4 05       		.byte	0x5
 26205 00b5 E601     		.2byte	0x1e6
 26206 00b7 5E000000 		.4byte	0x5e
 26207 00bb 05       		.uleb128 0x5
 26208 00bc 16020000 		.4byte	.LASF16
 26209 00c0 05       		.byte	0x5
 26210 00c1 E701     		.2byte	0x1e7
 26211 00c3 25000000 		.4byte	0x25
 26212 00c7 05       		.uleb128 0x5
 26213 00c8 14130000 		.4byte	.LASF17
 26214 00cc 05       		.byte	0x5
 26215 00cd E801     		.2byte	0x1e8
 26216 00cf 33000000 		.4byte	0x33
 26217 00d3 05       		.uleb128 0x5
 26218 00d4 A0140000 		.4byte	.LASF18
 26219 00d8 05       		.byte	0x5
 26220 00d9 E901     		.2byte	0x1e9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 584


 26221 00db 4C000000 		.4byte	0x4c
 26222 00df 05       		.uleb128 0x5
 26223 00e0 D4030000 		.4byte	.LASF19
 26224 00e4 05       		.byte	0x5
 26225 00e5 EA01     		.2byte	0x1ea
 26226 00e7 EB000000 		.4byte	0xeb
 26227 00eb 02       		.uleb128 0x2
 26228 00ec 04       		.byte	0x4
 26229 00ed 04       		.byte	0x4
 26230 00ee 720B0000 		.4byte	.LASF20
 26231 00f2 02       		.uleb128 0x2
 26232 00f3 08       		.byte	0x8
 26233 00f4 04       		.byte	0x4
 26234 00f5 E40A0000 		.4byte	.LASF21
 26235 00f9 02       		.uleb128 0x2
 26236 00fa 01       		.byte	0x1
 26237 00fb 08       		.byte	0x8
 26238 00fc AC050000 		.4byte	.LASF22
 26239 0100 05       		.uleb128 0x5
 26240 0101 AC0F0000 		.4byte	.LASF23
 26241 0105 05       		.byte	0x5
 26242 0106 8E02     		.2byte	0x28e
 26243 0108 0C010000 		.4byte	0x10c
 26244 010c 06       		.uleb128 0x6
 26245 010d 97000000 		.4byte	0x97
 26246 0111 02       		.uleb128 0x2
 26247 0112 08       		.byte	0x8
 26248 0113 04       		.byte	0x4
 26249 0114 A30D0000 		.4byte	.LASF24
 26250 0118 02       		.uleb128 0x2
 26251 0119 04       		.byte	0x4
 26252 011a 07       		.byte	0x7
 26253 011b 39000000 		.4byte	.LASF25
 26254 011f 07       		.uleb128 0x7
 26255 0120 04       		.byte	0x4
 26256 0121 F9000000 		.4byte	0xf9
 26257 0125 07       		.uleb128 0x7
 26258 0126 04       		.byte	0x4
 26259 0127 2B010000 		.4byte	0x12b
 26260 012b 08       		.uleb128 0x8
 26261 012c F9000000 		.4byte	0xf9
 26262 0130 09       		.uleb128 0x9
 26263 0131 F9000000 		.4byte	0xf9
 26264 0135 40010000 		.4byte	0x140
 26265 0139 0A       		.uleb128 0xa
 26266 013a 18010000 		.4byte	0x118
 26267 013e 19       		.byte	0x19
 26268 013f 00       		.byte	0
 26269 0140 09       		.uleb128 0x9
 26270 0141 F9000000 		.4byte	0xf9
 26271 0145 50010000 		.4byte	0x150
 26272 0149 0A       		.uleb128 0xa
 26273 014a 18010000 		.4byte	0x118
 26274 014e 07       		.byte	0x7
 26275 014f 00       		.byte	0
 26276 0150 0B       		.uleb128 0xb
 26277 0151 290C0000 		.4byte	.LASF58
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 585


 26278 0155 01       		.byte	0x1
 26279 0156 2C000000 		.4byte	0x2c
 26280 015a 06       		.byte	0x6
 26281 015b 42       		.byte	0x42
 26282 015c 21020000 		.4byte	0x221
 26283 0160 0C       		.uleb128 0xc
 26284 0161 D1150000 		.4byte	.LASF26
 26285 0165 00       		.byte	0
 26286 0166 0C       		.uleb128 0xc
 26287 0167 4E120000 		.4byte	.LASF27
 26288 016b 01       		.byte	0x1
 26289 016c 0C       		.uleb128 0xc
 26290 016d 4C080000 		.4byte	.LASF28
 26291 0171 03       		.byte	0x3
 26292 0172 0C       		.uleb128 0xc
 26293 0173 40050000 		.4byte	.LASF29
 26294 0177 04       		.byte	0x4
 26295 0178 0C       		.uleb128 0xc
 26296 0179 E50F0000 		.4byte	.LASF30
 26297 017d 05       		.byte	0x5
 26298 017e 0C       		.uleb128 0xc
 26299 017f 5E090000 		.4byte	.LASF31
 26300 0183 06       		.byte	0x6
 26301 0184 0C       		.uleb128 0xc
 26302 0185 82080000 		.4byte	.LASF32
 26303 0189 09       		.byte	0x9
 26304 018a 0C       		.uleb128 0xc
 26305 018b 4F000000 		.4byte	.LASF33
 26306 018f 0A       		.byte	0xa
 26307 0190 0C       		.uleb128 0xc
 26308 0191 F6120000 		.4byte	.LASF34
 26309 0195 0C       		.byte	0xc
 26310 0196 0C       		.uleb128 0xc
 26311 0197 030E0000 		.4byte	.LASF35
 26312 019b 0D       		.byte	0xd
 26313 019c 0C       		.uleb128 0xc
 26314 019d 95000000 		.4byte	.LASF36
 26315 01a1 80       		.byte	0x80
 26316 01a2 0C       		.uleb128 0xc
 26317 01a3 9B050000 		.4byte	.LASF37
 26318 01a7 81       		.byte	0x81
 26319 01a8 0C       		.uleb128 0xc
 26320 01a9 C6060000 		.4byte	.LASF38
 26321 01ad 82       		.byte	0x82
 26322 01ae 0C       		.uleb128 0xc
 26323 01af 18120000 		.4byte	.LASF39
 26324 01b3 83       		.byte	0x83
 26325 01b4 0C       		.uleb128 0xc
 26326 01b5 68110000 		.4byte	.LASF40
 26327 01b9 84       		.byte	0x84
 26328 01ba 0C       		.uleb128 0xc
 26329 01bb EC030000 		.4byte	.LASF41
 26330 01bf 85       		.byte	0x85
 26331 01c0 0C       		.uleb128 0xc
 26332 01c1 A0090000 		.4byte	.LASF42
 26333 01c5 86       		.byte	0x86
 26334 01c6 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 586


 26335 01c7 3E090000 		.4byte	.LASF43
 26336 01cb 88       		.byte	0x88
 26337 01cc 0C       		.uleb128 0xc
 26338 01cd D7120000 		.4byte	.LASF44
 26339 01d1 89       		.byte	0x89
 26340 01d2 0C       		.uleb128 0xc
 26341 01d3 150F0000 		.4byte	.LASF45
 26342 01d7 8B       		.byte	0x8b
 26343 01d8 0C       		.uleb128 0xc
 26344 01d9 610D0000 		.4byte	.LASF46
 26345 01dd 8C       		.byte	0x8c
 26346 01de 0C       		.uleb128 0xc
 26347 01df 5C0A0000 		.4byte	.LASF47
 26348 01e3 8E       		.byte	0x8e
 26349 01e4 0C       		.uleb128 0xc
 26350 01e5 4D0F0000 		.4byte	.LASF48
 26351 01e9 90       		.byte	0x90
 26352 01ea 0C       		.uleb128 0xc
 26353 01eb B8020000 		.4byte	.LASF49
 26354 01ef 92       		.byte	0x92
 26355 01f0 0C       		.uleb128 0xc
 26356 01f1 15140000 		.4byte	.LASF50
 26357 01f5 A1       		.byte	0xa1
 26358 01f6 0C       		.uleb128 0xc
 26359 01f7 21110000 		.4byte	.LASF51
 26360 01fb A2       		.byte	0xa2
 26361 01fc 0C       		.uleb128 0xc
 26362 01fd 870C0000 		.4byte	.LASF52
 26363 0201 A3       		.byte	0xa3
 26364 0202 0C       		.uleb128 0xc
 26365 0203 3D110000 		.4byte	.LASF53
 26366 0207 A4       		.byte	0xa4
 26367 0208 0C       		.uleb128 0xc
 26368 0209 3D120000 		.4byte	.LASF54
 26369 020d A5       		.byte	0xa5
 26370 020e 0C       		.uleb128 0xc
 26371 020f D5100000 		.4byte	.LASF55
 26372 0213 A6       		.byte	0xa6
 26373 0214 0C       		.uleb128 0xc
 26374 0215 EB0A0000 		.4byte	.LASF56
 26375 0219 A7       		.byte	0xa7
 26376 021a 0C       		.uleb128 0xc
 26377 021b 810B0000 		.4byte	.LASF57
 26378 021f A8       		.byte	0xa8
 26379 0220 00       		.byte	0
 26380 0221 0B       		.uleb128 0xb
 26381 0222 7E150000 		.4byte	.LASF59
 26382 0226 01       		.byte	0x1
 26383 0227 2C000000 		.4byte	0x2c
 26384 022b 06       		.byte	0x6
 26385 022c 8F       		.byte	0x8f
 26386 022d 62020000 		.4byte	0x262
 26387 0231 0C       		.uleb128 0xc
 26388 0232 54070000 		.4byte	.LASF60
 26389 0236 00       		.byte	0
 26390 0237 0C       		.uleb128 0xc
 26391 0238 670C0000 		.4byte	.LASF61
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 587


 26392 023c 01       		.byte	0x1
 26393 023d 0C       		.uleb128 0xc
 26394 023e C9020000 		.4byte	.LASF62
 26395 0242 02       		.byte	0x2
 26396 0243 0C       		.uleb128 0xc
 26397 0244 F2010000 		.4byte	.LASF63
 26398 0248 03       		.byte	0x3
 26399 0249 0C       		.uleb128 0xc
 26400 024a 96010000 		.4byte	.LASF64
 26401 024e 04       		.byte	0x4
 26402 024f 0C       		.uleb128 0xc
 26403 0250 7D000000 		.4byte	.LASF65
 26404 0254 05       		.byte	0x5
 26405 0255 0C       		.uleb128 0xc
 26406 0256 AA080000 		.4byte	.LASF66
 26407 025a 06       		.byte	0x6
 26408 025b 0C       		.uleb128 0xc
 26409 025c 02110000 		.4byte	.LASF67
 26410 0260 07       		.byte	0x7
 26411 0261 00       		.byte	0
 26412 0262 0B       		.uleb128 0xb
 26413 0263 9A0A0000 		.4byte	.LASF68
 26414 0267 01       		.byte	0x1
 26415 0268 2C000000 		.4byte	0x2c
 26416 026c 06       		.byte	0x6
 26417 026d A3       		.byte	0xa3
 26418 026e 8B020000 		.4byte	0x28b
 26419 0272 0C       		.uleb128 0xc
 26420 0273 F7140000 		.4byte	.LASF69
 26421 0277 00       		.byte	0
 26422 0278 0C       		.uleb128 0xc
 26423 0279 32090000 		.4byte	.LASF70
 26424 027d 01       		.byte	0x1
 26425 027e 0C       		.uleb128 0xc
 26426 027f 930D0000 		.4byte	.LASF71
 26427 0283 02       		.byte	0x2
 26428 0284 0C       		.uleb128 0xc
 26429 0285 37080000 		.4byte	.LASF72
 26430 0289 03       		.byte	0x3
 26431 028a 00       		.byte	0
 26432 028b 0B       		.uleb128 0xb
 26433 028c D0040000 		.4byte	.LASF73
 26434 0290 01       		.byte	0x1
 26435 0291 2C000000 		.4byte	0x2c
 26436 0295 06       		.byte	0x6
 26437 0296 AD       		.byte	0xad
 26438 0297 A8020000 		.4byte	0x2a8
 26439 029b 0C       		.uleb128 0xc
 26440 029c F8100000 		.4byte	.LASF74
 26441 02a0 00       		.byte	0
 26442 02a1 0C       		.uleb128 0xc
 26443 02a2 C60A0000 		.4byte	.LASF75
 26444 02a6 01       		.byte	0x1
 26445 02a7 00       		.byte	0
 26446 02a8 0B       		.uleb128 0xb
 26447 02a9 5C0E0000 		.4byte	.LASF76
 26448 02ad 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 588


 26449 02ae 2C000000 		.4byte	0x2c
 26450 02b2 06       		.byte	0x6
 26451 02b3 B2       		.byte	0xb2
 26452 02b4 C5020000 		.4byte	0x2c5
 26453 02b8 0C       		.uleb128 0xc
 26454 02b9 39070000 		.4byte	.LASF77
 26455 02bd 00       		.byte	0
 26456 02be 0C       		.uleb128 0xc
 26457 02bf EF080000 		.4byte	.LASF78
 26458 02c3 01       		.byte	0x1
 26459 02c4 00       		.byte	0
 26460 02c5 0B       		.uleb128 0xb
 26461 02c6 09130000 		.4byte	.LASF79
 26462 02ca 01       		.byte	0x1
 26463 02cb 2C000000 		.4byte	0x2c
 26464 02cf 06       		.byte	0x6
 26465 02d0 BA       		.byte	0xba
 26466 02d1 12030000 		.4byte	0x312
 26467 02d5 0C       		.uleb128 0xc
 26468 02d6 F6080000 		.4byte	.LASF80
 26469 02da 00       		.byte	0
 26470 02db 0C       		.uleb128 0xc
 26471 02dc 8C150000 		.4byte	.LASF81
 26472 02e0 01       		.byte	0x1
 26473 02e1 0C       		.uleb128 0xc
 26474 02e2 AA0A0000 		.4byte	.LASF82
 26475 02e6 02       		.byte	0x2
 26476 02e7 0C       		.uleb128 0xc
 26477 02e8 3D0D0000 		.4byte	.LASF83
 26478 02ec 03       		.byte	0x3
 26479 02ed 0C       		.uleb128 0xc
 26480 02ee 340C0000 		.4byte	.LASF84
 26481 02f2 04       		.byte	0x4
 26482 02f3 0C       		.uleb128 0xc
 26483 02f4 CE0E0000 		.4byte	.LASF85
 26484 02f8 05       		.byte	0x5
 26485 02f9 0C       		.uleb128 0xc
 26486 02fa AF0D0000 		.4byte	.LASF86
 26487 02fe 06       		.byte	0x6
 26488 02ff 0C       		.uleb128 0xc
 26489 0300 DE0C0000 		.4byte	.LASF87
 26490 0304 07       		.byte	0x7
 26491 0305 0C       		.uleb128 0xc
 26492 0306 07070000 		.4byte	.LASF88
 26493 030a 08       		.byte	0x8
 26494 030b 0C       		.uleb128 0xc
 26495 030c 2B080000 		.4byte	.LASF89
 26496 0310 09       		.byte	0x9
 26497 0311 00       		.byte	0
 26498 0312 03       		.uleb128 0x3
 26499 0313 D8140000 		.4byte	.LASF90
 26500 0317 07       		.byte	0x7
 26501 0318 7E       		.byte	0x7e
 26502 0319 1D030000 		.4byte	0x31d
 26503 031d 0D       		.uleb128 0xd
 26504 031e D8140000 		.4byte	.LASF90
 26505 0322 07       		.uleb128 0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 589


 26506 0323 04       		.byte	0x4
 26507 0324 12030000 		.4byte	0x312
 26508 0328 0E       		.uleb128 0xe
 26509 0329 440A0000 		.4byte	.LASF93
 26510 032d 10       		.byte	0x10
 26511 032e 08       		.byte	0x8
 26512 032f E5       		.byte	0xe5
 26513 0330 65030000 		.4byte	0x365
 26514 0334 0F       		.uleb128 0xf
 26515 0335 706F7300 		.ascii	"pos\000"
 26516 0339 08       		.byte	0x8
 26517 033a E6       		.byte	0xe6
 26518 033b D3000000 		.4byte	0xd3
 26519 033f 00       		.byte	0
 26520 0340 10       		.uleb128 0x10
 26521 0341 22090000 		.4byte	.LASF91
 26522 0345 08       		.byte	0x8
 26523 0346 E7       		.byte	0xe7
 26524 0347 D3000000 		.4byte	0xd3
 26525 034b 04       		.byte	0x4
 26526 034c 0F       		.uleb128 0xf
 26527 034d 70776D00 		.ascii	"pwm\000"
 26528 0351 08       		.byte	0x8
 26529 0352 E8       		.byte	0xe8
 26530 0353 D3000000 		.4byte	0xd3
 26531 0357 08       		.byte	0x8
 26532 0358 10       		.uleb128 0x10
 26533 0359 0F0F0000 		.4byte	.LASF92
 26534 035d 08       		.byte	0x8
 26535 035e E9       		.byte	0xe9
 26536 035f 97000000 		.4byte	0x97
 26537 0363 0C       		.byte	0xc
 26538 0364 00       		.byte	0
 26539 0365 0E       		.uleb128 0xe
 26540 0366 CD100000 		.4byte	.LASF94
 26541 036a 34       		.byte	0x34
 26542 036b 08       		.byte	0x8
 26543 036c F0       		.byte	0xf0
 26544 036d C6030000 		.4byte	0x3c6
 26545 0371 0F       		.uleb128 0xf
 26546 0372 706F7300 		.ascii	"pos\000"
 26547 0376 08       		.byte	0x8
 26548 0377 F1       		.byte	0xf1
 26549 0378 C6030000 		.4byte	0x3c6
 26550 037c 00       		.byte	0
 26551 037d 10       		.uleb128 0x10
 26552 037e 22090000 		.4byte	.LASF91
 26553 0382 08       		.byte	0x8
 26554 0383 F2       		.byte	0xf2
 26555 0384 D3000000 		.4byte	0xd3
 26556 0388 0C       		.byte	0xc
 26557 0389 10       		.uleb128 0x10
 26558 038a 56130000 		.4byte	.LASF95
 26559 038e 08       		.byte	0x8
 26560 038f F3       		.byte	0xf3
 26561 0390 D3000000 		.4byte	0xd3
 26562 0394 10       		.byte	0x10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 590


 26563 0395 10       		.uleb128 0x10
 26564 0396 A0080000 		.4byte	.LASF96
 26565 039a 08       		.byte	0x8
 26566 039b F4       		.byte	0xf4
 26567 039c D3000000 		.4byte	0xd3
 26568 03a0 14       		.byte	0x14
 26569 03a1 0F       		.uleb128 0xf
 26570 03a2 726F7400 		.ascii	"rot\000"
 26571 03a6 08       		.byte	0x8
 26572 03a7 F5       		.byte	0xf5
 26573 03a8 D6030000 		.4byte	0x3d6
 26574 03ac 18       		.byte	0x18
 26575 03ad 0F       		.uleb128 0xf
 26576 03ae 76656C00 		.ascii	"vel\000"
 26577 03b2 08       		.byte	0x8
 26578 03b3 F6       		.byte	0xf6
 26579 03b4 C6030000 		.4byte	0x3c6
 26580 03b8 1C       		.byte	0x1c
 26581 03b9 0F       		.uleb128 0xf
 26582 03ba 61636300 		.ascii	"acc\000"
 26583 03be 08       		.byte	0x8
 26584 03bf F7       		.byte	0xf7
 26585 03c0 C6030000 		.4byte	0x3c6
 26586 03c4 28       		.byte	0x28
 26587 03c5 00       		.byte	0
 26588 03c6 09       		.uleb128 0x9
 26589 03c7 D3000000 		.4byte	0xd3
 26590 03cb D6030000 		.4byte	0x3d6
 26591 03cf 0A       		.uleb128 0xa
 26592 03d0 18010000 		.4byte	0x118
 26593 03d4 02       		.byte	0x2
 26594 03d5 00       		.byte	0
 26595 03d6 09       		.uleb128 0x9
 26596 03d7 BB000000 		.4byte	0xbb
 26597 03db E6030000 		.4byte	0x3e6
 26598 03df 0A       		.uleb128 0xa
 26599 03e0 18010000 		.4byte	0x118
 26600 03e4 02       		.byte	0x2
 26601 03e5 00       		.byte	0
 26602 03e6 0E       		.uleb128 0xe
 26603 03e7 A50B0000 		.4byte	.LASF97
 26604 03eb 28       		.byte	0x28
 26605 03ec 08       		.byte	0x8
 26606 03ed FA       		.byte	0xfa
 26607 03ee 17040000 		.4byte	0x417
 26608 03f2 0F       		.uleb128 0xf
 26609 03f3 656D6700 		.ascii	"emg\000"
 26610 03f7 08       		.byte	0x8
 26611 03f8 FB       		.byte	0xfb
 26612 03f9 17040000 		.4byte	0x417
 26613 03fd 00       		.byte	0
 26614 03fe 10       		.uleb128 0x10
 26615 03ff 350D0000 		.4byte	.LASF98
 26616 0403 08       		.byte	0x8
 26617 0404 FC       		.byte	0xfc
 26618 0405 27040000 		.4byte	0x427
 26619 0409 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 591


 26620 040a 10       		.uleb128 0x10
 26621 040b F9110000 		.4byte	.LASF99
 26622 040f 08       		.byte	0x8
 26623 0410 FD       		.byte	0xfd
 26624 0411 17040000 		.4byte	0x417
 26625 0415 20       		.byte	0x20
 26626 0416 00       		.byte	0
 26627 0417 09       		.uleb128 0x9
 26628 0418 D3000000 		.4byte	0xd3
 26629 041c 27040000 		.4byte	0x427
 26630 0420 0A       		.uleb128 0xa
 26631 0421 18010000 		.4byte	0x118
 26632 0425 01       		.byte	0x1
 26633 0426 00       		.byte	0
 26634 0427 09       		.uleb128 0x9
 26635 0428 D3000000 		.4byte	0xd3
 26636 042c 37040000 		.4byte	0x437
 26637 0430 0A       		.uleb128 0xa
 26638 0431 18010000 		.4byte	0x118
 26639 0435 05       		.byte	0x5
 26640 0436 00       		.byte	0
 26641 0437 11       		.uleb128 0x11
 26642 0438 0A060000 		.4byte	.LASF100
 26643 043c 04       		.byte	0x4
 26644 043d 08       		.byte	0x8
 26645 043e 0001     		.2byte	0x100
 26646 0440 52040000 		.4byte	0x452
 26647 0444 12       		.uleb128 0x12
 26648 0445 92050000 		.4byte	.LASF101
 26649 0449 08       		.byte	0x8
 26650 044a 0101     		.2byte	0x101
 26651 044c EB000000 		.4byte	0xeb
 26652 0450 00       		.byte	0
 26653 0451 00       		.byte	0
 26654 0452 11       		.uleb128 0x11
 26655 0453 DF000000 		.4byte	.LASF102
 26656 0457 86       		.byte	0x86
 26657 0458 08       		.byte	0x8
 26658 0459 0801     		.2byte	0x108
 26659 045b 94040000 		.4byte	0x494
 26660 045f 12       		.uleb128 0x12
 26661 0460 D5060000 		.4byte	.LASF103
 26662 0464 08       		.byte	0x8
 26663 0465 0901     		.2byte	0x109
 26664 0467 94040000 		.4byte	0x494
 26665 046b 00       		.byte	0
 26666 046c 12       		.uleb128 0x12
 26667 046d E40E0000 		.4byte	.LASF104
 26668 0471 08       		.byte	0x8
 26669 0472 0A01     		.2byte	0x10a
 26670 0474 C7000000 		.4byte	0xc7
 26671 0478 80       		.byte	0x80
 26672 0479 13       		.uleb128 0x13
 26673 047a 696E6400 		.ascii	"ind\000"
 26674 047e 08       		.byte	0x8
 26675 047f 0B01     		.2byte	0x10b
 26676 0481 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 592


 26677 0485 82       		.byte	0x82
 26678 0486 12       		.uleb128 0x12
 26679 0487 9A020000 		.4byte	.LASF105
 26680 048b 08       		.byte	0x8
 26681 048c 0C01     		.2byte	0x10c
 26682 048e 97000000 		.4byte	0x97
 26683 0492 84       		.byte	0x84
 26684 0493 00       		.byte	0
 26685 0494 09       		.uleb128 0x9
 26686 0495 97000000 		.4byte	0x97
 26687 0499 A4040000 		.4byte	0x4a4
 26688 049d 0A       		.uleb128 0xa
 26689 049e 18010000 		.4byte	0x118
 26690 04a2 7F       		.byte	0x7f
 26691 04a3 00       		.byte	0
 26692 04a4 11       		.uleb128 0x11
 26693 04a5 C2030000 		.4byte	.LASF106
 26694 04a9 70       		.byte	0x70
 26695 04aa 08       		.byte	0x8
 26696 04ab 1501     		.2byte	0x115
 26697 04ad 41050000 		.4byte	0x541
 26698 04b1 12       		.uleb128 0x12
 26699 04b2 09000000 		.4byte	.LASF107
 26700 04b6 08       		.byte	0x8
 26701 04b7 1601     		.2byte	0x116
 26702 04b9 41050000 		.4byte	0x541
 26703 04bd 00       		.byte	0
 26704 04be 12       		.uleb128 0x12
 26705 04bf 53020000 		.4byte	.LASF108
 26706 04c3 08       		.byte	0x8
 26707 04c4 1701     		.2byte	0x117
 26708 04c6 51050000 		.4byte	0x551
 26709 04ca 08       		.byte	0x8
 26710 04cb 12       		.uleb128 0x12
 26711 04cc 860D0000 		.4byte	.LASF109
 26712 04d0 08       		.byte	0x8
 26713 04d1 1801     		.2byte	0x118
 26714 04d3 61050000 		.4byte	0x561
 26715 04d7 30       		.byte	0x30
 26716 04d8 12       		.uleb128 0x12
 26717 04d9 B6010000 		.4byte	.LASF110
 26718 04dd 08       		.byte	0x8
 26719 04de 1901     		.2byte	0x119
 26720 04e0 AF000000 		.4byte	0xaf
 26721 04e4 40       		.byte	0x40
 26722 04e5 12       		.uleb128 0x12
 26723 04e6 2B150000 		.4byte	.LASF111
 26724 04ea 08       		.byte	0x8
 26725 04eb 1A01     		.2byte	0x11a
 26726 04ed AF000000 		.4byte	0xaf
 26727 04f1 44       		.byte	0x44
 26728 04f2 12       		.uleb128 0x12
 26729 04f3 FA000000 		.4byte	.LASF112
 26730 04f7 08       		.byte	0x8
 26731 04f8 1B01     		.2byte	0x11b
 26732 04fa AF000000 		.4byte	0xaf
 26733 04fe 48       		.byte	0x48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 593


 26734 04ff 12       		.uleb128 0x12
 26735 0500 BE080000 		.4byte	.LASF113
 26736 0504 08       		.byte	0x8
 26737 0505 1C01     		.2byte	0x11c
 26738 0507 AF000000 		.4byte	0xaf
 26739 050b 4C       		.byte	0x4c
 26740 050c 12       		.uleb128 0x12
 26741 050d 42000000 		.4byte	.LASF114
 26742 0511 08       		.byte	0x8
 26743 0512 1D01     		.2byte	0x11d
 26744 0514 AF000000 		.4byte	0xaf
 26745 0518 50       		.byte	0x50
 26746 0519 12       		.uleb128 0x12
 26747 051a 00030000 		.4byte	.LASF115
 26748 051e 08       		.byte	0x8
 26749 051f 1E01     		.2byte	0x11e
 26750 0521 41050000 		.4byte	0x541
 26751 0525 54       		.byte	0x54
 26752 0526 12       		.uleb128 0x12
 26753 0527 E20D0000 		.4byte	.LASF116
 26754 052b 08       		.byte	0x8
 26755 052c 1F01     		.2byte	0x11f
 26756 052e 41050000 		.4byte	0x541
 26757 0532 5C       		.byte	0x5c
 26758 0533 12       		.uleb128 0x12
 26759 0534 9F030000 		.4byte	.LASF117
 26760 0538 08       		.byte	0x8
 26761 0539 2001     		.2byte	0x120
 26762 053b 71050000 		.4byte	0x571
 26763 053f 64       		.byte	0x64
 26764 0540 00       		.byte	0
 26765 0541 09       		.uleb128 0x9
 26766 0542 AF000000 		.4byte	0xaf
 26767 0546 51050000 		.4byte	0x551
 26768 054a 0A       		.uleb128 0xa
 26769 054b 18010000 		.4byte	0x118
 26770 054f 01       		.byte	0x1
 26771 0550 00       		.byte	0
 26772 0551 09       		.uleb128 0x9
 26773 0552 AF000000 		.4byte	0xaf
 26774 0556 61050000 		.4byte	0x561
 26775 055a 0A       		.uleb128 0xa
 26776 055b 18010000 		.4byte	0x118
 26777 055f 09       		.byte	0x9
 26778 0560 00       		.byte	0
 26779 0561 09       		.uleb128 0x9
 26780 0562 AF000000 		.4byte	0xaf
 26781 0566 71050000 		.4byte	0x571
 26782 056a 0A       		.uleb128 0xa
 26783 056b 18010000 		.4byte	0x118
 26784 056f 03       		.byte	0x3
 26785 0570 00       		.byte	0
 26786 0571 09       		.uleb128 0x9
 26787 0572 97000000 		.4byte	0x97
 26788 0576 81050000 		.4byte	0x581
 26789 057a 0A       		.uleb128 0xa
 26790 057b 18010000 		.4byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 594


 26791 057f 0B       		.byte	0xb
 26792 0580 00       		.byte	0
 26793 0581 11       		.uleb128 0x11
 26794 0582 7C060000 		.4byte	.LASF118
 26795 0586 10       		.byte	0x10
 26796 0587 08       		.byte	0x8
 26797 0588 2701     		.2byte	0x127
 26798 058a 10060000 		.4byte	0x610
 26799 058e 13       		.uleb128 0x13
 26800 058f 696400   		.ascii	"id\000"
 26801 0592 08       		.byte	0x8
 26802 0593 2801     		.2byte	0x128
 26803 0595 97000000 		.4byte	0x97
 26804 0599 00       		.byte	0
 26805 059a 12       		.uleb128 0x12
 26806 059b 27120000 		.4byte	.LASF119
 26807 059f 08       		.byte	0x8
 26808 05a0 2901     		.2byte	0x129
 26809 05a2 10060000 		.4byte	0x610
 26810 05a6 01       		.byte	0x1
 26811 05a7 12       		.uleb128 0x12
 26812 05a8 A3120000 		.4byte	.LASF120
 26813 05ac 08       		.byte	0x8
 26814 05ad 2A01     		.2byte	0x12a
 26815 05af 10060000 		.4byte	0x610
 26816 05b3 04       		.byte	0x4
 26817 05b4 12       		.uleb128 0x12
 26818 05b5 35050000 		.4byte	.LASF121
 26819 05b9 08       		.byte	0x8
 26820 05ba 2B01     		.2byte	0x12b
 26821 05bc 97000000 		.4byte	0x97
 26822 05c0 07       		.byte	0x7
 26823 05c1 12       		.uleb128 0x12
 26824 05c2 6E030000 		.4byte	.LASF122
 26825 05c6 08       		.byte	0x8
 26826 05c7 2C01     		.2byte	0x12c
 26827 05c9 97000000 		.4byte	0x97
 26828 05cd 08       		.byte	0x8
 26829 05ce 12       		.uleb128 0x12
 26830 05cf E5020000 		.4byte	.LASF123
 26831 05d3 08       		.byte	0x8
 26832 05d4 2D01     		.2byte	0x12d
 26833 05d6 97000000 		.4byte	0x97
 26834 05da 09       		.byte	0x9
 26835 05db 12       		.uleb128 0x12
 26836 05dc E8130000 		.4byte	.LASF124
 26837 05e0 08       		.byte	0x8
 26838 05e1 2E01     		.2byte	0x12e
 26839 05e3 97000000 		.4byte	0x97
 26840 05e7 0A       		.byte	0xa
 26841 05e8 12       		.uleb128 0x12
 26842 05e9 AC130000 		.4byte	.LASF125
 26843 05ed 08       		.byte	0x8
 26844 05ee 2F01     		.2byte	0x12f
 26845 05f0 97000000 		.4byte	0x97
 26846 05f4 0B       		.byte	0xb
 26847 05f5 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 595


 26848 05f6 77100000 		.4byte	.LASF126
 26849 05fa 08       		.byte	0x8
 26850 05fb 3001     		.2byte	0x130
 26851 05fd 97000000 		.4byte	0x97
 26852 0601 0C       		.byte	0xc
 26853 0602 12       		.uleb128 0x12
 26854 0603 9F030000 		.4byte	.LASF117
 26855 0607 08       		.byte	0x8
 26856 0608 3101     		.2byte	0x131
 26857 060a 10060000 		.4byte	0x610
 26858 060e 0D       		.byte	0xd
 26859 060f 00       		.byte	0
 26860 0610 09       		.uleb128 0x9
 26861 0611 97000000 		.4byte	0x97
 26862 0615 20060000 		.4byte	0x620
 26863 0619 0A       		.uleb128 0xa
 26864 061a 18010000 		.4byte	0x118
 26865 061e 02       		.byte	0x2
 26866 061f 00       		.byte	0
 26867 0620 11       		.uleb128 0x11
 26868 0621 C3140000 		.4byte	.LASF127
 26869 0625 70       		.byte	0x70
 26870 0626 08       		.byte	0x8
 26871 0627 3801     		.2byte	0x138
 26872 0629 9A070000 		.4byte	0x79a
 26873 062d 13       		.uleb128 0x13
 26874 062e 6B5F7000 		.ascii	"k_p\000"
 26875 0632 08       		.byte	0x8
 26876 0633 3901     		.2byte	0x139
 26877 0635 D3000000 		.4byte	0xd3
 26878 0639 00       		.byte	0
 26879 063a 13       		.uleb128 0x13
 26880 063b 6B5F6900 		.ascii	"k_i\000"
 26881 063f 08       		.byte	0x8
 26882 0640 3A01     		.2byte	0x13a
 26883 0642 D3000000 		.4byte	0xd3
 26884 0646 04       		.byte	0x4
 26885 0647 13       		.uleb128 0x13
 26886 0648 6B5F6400 		.ascii	"k_d\000"
 26887 064c 08       		.byte	0x8
 26888 064d 3B01     		.2byte	0x13b
 26889 064f D3000000 		.4byte	0xd3
 26890 0653 08       		.byte	0x8
 26891 0654 12       		.uleb128 0x12
 26892 0655 5E0F0000 		.4byte	.LASF128
 26893 0659 08       		.byte	0x8
 26894 065a 3C01     		.2byte	0x13c
 26895 065c D3000000 		.4byte	0xd3
 26896 0660 0C       		.byte	0xc
 26897 0661 12       		.uleb128 0x12
 26898 0662 2A060000 		.4byte	.LASF129
 26899 0666 08       		.byte	0x8
 26900 0667 3D01     		.2byte	0x13d
 26901 0669 D3000000 		.4byte	0xd3
 26902 066d 10       		.byte	0x10
 26903 066e 12       		.uleb128 0x12
 26904 066f 04060000 		.4byte	.LASF130
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 596


 26905 0673 08       		.byte	0x8
 26906 0674 3E01     		.2byte	0x13e
 26907 0676 D3000000 		.4byte	0xd3
 26908 067a 14       		.byte	0x14
 26909 067b 12       		.uleb128 0x12
 26910 067c 4F130000 		.4byte	.LASF131
 26911 0680 08       		.byte	0x8
 26912 0681 3F01     		.2byte	0x13f
 26913 0683 D3000000 		.4byte	0xd3
 26914 0687 18       		.byte	0x18
 26915 0688 12       		.uleb128 0x12
 26916 0689 BF060000 		.4byte	.LASF132
 26917 068d 08       		.byte	0x8
 26918 068e 4001     		.2byte	0x140
 26919 0690 D3000000 		.4byte	0xd3
 26920 0694 1C       		.byte	0x1c
 26921 0695 12       		.uleb128 0x12
 26922 0696 E9110000 		.4byte	.LASF133
 26923 069a 08       		.byte	0x8
 26924 069b 4101     		.2byte	0x141
 26925 069d D3000000 		.4byte	0xd3
 26926 06a1 20       		.byte	0x20
 26927 06a2 12       		.uleb128 0x12
 26928 06a3 DC060000 		.4byte	.LASF134
 26929 06a7 08       		.byte	0x8
 26930 06a8 4201     		.2byte	0x142
 26931 06aa D3000000 		.4byte	0xd3
 26932 06ae 24       		.byte	0x24
 26933 06af 12       		.uleb128 0x12
 26934 06b0 BD070000 		.4byte	.LASF135
 26935 06b4 08       		.byte	0x8
 26936 06b5 4301     		.2byte	0x143
 26937 06b7 D3000000 		.4byte	0xd3
 26938 06bb 28       		.byte	0x28
 26939 06bc 12       		.uleb128 0x12
 26940 06bd 68160000 		.4byte	.LASF136
 26941 06c1 08       		.byte	0x8
 26942 06c2 4401     		.2byte	0x144
 26943 06c4 D3000000 		.4byte	0xd3
 26944 06c8 2C       		.byte	0x2c
 26945 06c9 12       		.uleb128 0x12
 26946 06ca DA080000 		.4byte	.LASF137
 26947 06ce 08       		.byte	0x8
 26948 06cf 4501     		.2byte	0x145
 26949 06d1 97000000 		.4byte	0x97
 26950 06d5 30       		.byte	0x30
 26951 06d6 12       		.uleb128 0x12
 26952 06d7 38130000 		.4byte	.LASF138
 26953 06db 08       		.byte	0x8
 26954 06dc 4601     		.2byte	0x146
 26955 06de 97000000 		.4byte	0x97
 26956 06e2 31       		.byte	0x31
 26957 06e3 12       		.uleb128 0x12
 26958 06e4 7E0F0000 		.4byte	.LASF139
 26959 06e8 08       		.byte	0x8
 26960 06e9 4701     		.2byte	0x147
 26961 06eb 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 597


 26962 06ef 32       		.byte	0x32
 26963 06f0 12       		.uleb128 0x12
 26964 06f1 E0140000 		.4byte	.LASF140
 26965 06f5 08       		.byte	0x8
 26966 06f6 4801     		.2byte	0x148
 26967 06f8 97000000 		.4byte	0x97
 26968 06fc 33       		.byte	0x33
 26969 06fd 12       		.uleb128 0x12
 26970 06fe 6A010000 		.4byte	.LASF141
 26971 0702 08       		.byte	0x8
 26972 0703 4901     		.2byte	0x149
 26973 0705 D3000000 		.4byte	0xd3
 26974 0709 34       		.byte	0x34
 26975 070a 12       		.uleb128 0x12
 26976 070b 49060000 		.4byte	.LASF142
 26977 070f 08       		.byte	0x8
 26978 0710 4A01     		.2byte	0x14a
 26979 0712 D3000000 		.4byte	0xd3
 26980 0716 38       		.byte	0x38
 26981 0717 12       		.uleb128 0x12
 26982 0718 200B0000 		.4byte	.LASF143
 26983 071c 08       		.byte	0x8
 26984 071d 4B01     		.2byte	0x14b
 26985 071f D3000000 		.4byte	0xd3
 26986 0723 3C       		.byte	0x3c
 26987 0724 12       		.uleb128 0x12
 26988 0725 B1050000 		.4byte	.LASF144
 26989 0729 08       		.byte	0x8
 26990 072a 4C01     		.2byte	0x14c
 26991 072c D3000000 		.4byte	0xd3
 26992 0730 40       		.byte	0x40
 26993 0731 12       		.uleb128 0x12
 26994 0732 AA010000 		.4byte	.LASF145
 26995 0736 08       		.byte	0x8
 26996 0737 4D01     		.2byte	0x14d
 26997 0739 9A070000 		.4byte	0x79a
 26998 073d 44       		.byte	0x44
 26999 073e 12       		.uleb128 0x12
 27000 073f 70150000 		.4byte	.LASF146
 27001 0743 08       		.byte	0x8
 27002 0744 4E01     		.2byte	0x14e
 27003 0746 C7000000 		.4byte	0xc7
 27004 074a 5C       		.byte	0x5c
 27005 074b 12       		.uleb128 0x12
 27006 074c 27090000 		.4byte	.LASF147
 27007 0750 08       		.byte	0x8
 27008 0751 4F01     		.2byte	0x14f
 27009 0753 97000000 		.4byte	0x97
 27010 0757 5E       		.byte	0x5e
 27011 0758 12       		.uleb128 0x12
 27012 0759 540C0000 		.4byte	.LASF148
 27013 075d 08       		.byte	0x8
 27014 075e 5001     		.2byte	0x150
 27015 0760 97000000 		.4byte	0x97
 27016 0764 5F       		.byte	0x5f
 27017 0765 12       		.uleb128 0x12
 27018 0766 59050000 		.4byte	.LASF149
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 598


 27019 076a 08       		.byte	0x8
 27020 076b 5101     		.2byte	0x151
 27021 076d 97000000 		.4byte	0x97
 27022 0771 60       		.byte	0x60
 27023 0772 12       		.uleb128 0x12
 27024 0773 F3050000 		.4byte	.LASF150
 27025 0777 08       		.byte	0x8
 27026 0778 5201     		.2byte	0x152
 27027 077a 97000000 		.4byte	0x97
 27028 077e 61       		.byte	0x61
 27029 077f 12       		.uleb128 0x12
 27030 0780 16050000 		.4byte	.LASF151
 27031 0784 08       		.byte	0x8
 27032 0785 5301     		.2byte	0x153
 27033 0787 97000000 		.4byte	0x97
 27034 078b 62       		.byte	0x62
 27035 078c 12       		.uleb128 0x12
 27036 078d 9F030000 		.4byte	.LASF117
 27037 0791 08       		.byte	0x8
 27038 0792 5401     		.2byte	0x154
 27039 0794 AA070000 		.4byte	0x7aa
 27040 0798 63       		.byte	0x63
 27041 0799 00       		.byte	0
 27042 079a 09       		.uleb128 0x9
 27043 079b EB000000 		.4byte	0xeb
 27044 079f AA070000 		.4byte	0x7aa
 27045 07a3 0A       		.uleb128 0xa
 27046 07a4 18010000 		.4byte	0x118
 27047 07a8 05       		.byte	0x5
 27048 07a9 00       		.byte	0
 27049 07aa 09       		.uleb128 0x9
 27050 07ab 97000000 		.4byte	0x97
 27051 07af BA070000 		.4byte	0x7ba
 27052 07b3 0A       		.uleb128 0xa
 27053 07b4 18010000 		.4byte	0x118
 27054 07b8 0C       		.byte	0xc
 27055 07b9 00       		.byte	0
 27056 07ba 11       		.uleb128 0x11
 27057 07bb 59140000 		.4byte	.LASF152
 27058 07bf 30       		.byte	0x30
 27059 07c0 08       		.byte	0x8
 27060 07c1 5B01     		.2byte	0x15b
 27061 07c3 3D080000 		.4byte	0x83d
 27062 07c7 12       		.uleb128 0x12
 27063 07c8 020B0000 		.4byte	.LASF153
 27064 07cc 08       		.byte	0x8
 27065 07cd 5C01     		.2byte	0x15c
 27066 07cf 3D080000 		.4byte	0x83d
 27067 07d3 00       		.byte	0
 27068 07d4 13       		.uleb128 0x13
 27069 07d5 72657300 		.ascii	"res\000"
 27070 07d9 08       		.byte	0x8
 27071 07da 5D01     		.2byte	0x15d
 27072 07dc 10060000 		.4byte	0x610
 27073 07e0 05       		.byte	0x5
 27074 07e1 12       		.uleb128 0x12
 27075 07e2 E9080000 		.4byte	.LASF154
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 599


 27076 07e6 08       		.byte	0x8
 27077 07e7 5E01     		.2byte	0x15e
 27078 07e9 C6030000 		.4byte	0x3c6
 27079 07ed 08       		.byte	0x8
 27080 07ee 12       		.uleb128 0x12
 27081 07ef 23060000 		.4byte	.LASF155
 27082 07f3 08       		.byte	0x8
 27083 07f4 5F01     		.2byte	0x15f
 27084 07f6 4D080000 		.4byte	0x84d
 27085 07fa 14       		.byte	0x14
 27086 07fb 12       		.uleb128 0x12
 27087 07fc 2B0E0000 		.4byte	.LASF156
 27088 0800 08       		.byte	0x8
 27089 0801 6001     		.2byte	0x160
 27090 0803 97000000 		.4byte	0x97
 27091 0807 20       		.byte	0x20
 27092 0808 12       		.uleb128 0x12
 27093 0809 A0020000 		.4byte	.LASF157
 27094 080d 08       		.byte	0x8
 27095 080e 6101     		.2byte	0x161
 27096 0810 10060000 		.4byte	0x610
 27097 0814 21       		.byte	0x21
 27098 0815 12       		.uleb128 0x12
 27099 0816 730D0000 		.4byte	.LASF158
 27100 081a 08       		.byte	0x8
 27101 081b 6201     		.2byte	0x162
 27102 081d BB000000 		.4byte	0xbb
 27103 0821 24       		.byte	0x24
 27104 0822 12       		.uleb128 0x12
 27105 0823 9E100000 		.4byte	.LASF159
 27106 0827 08       		.byte	0x8
 27107 0828 6301     		.2byte	0x163
 27108 082a D6030000 		.4byte	0x3d6
 27109 082e 25       		.byte	0x25
 27110 082f 12       		.uleb128 0x12
 27111 0830 9F030000 		.4byte	.LASF117
 27112 0834 08       		.byte	0x8
 27113 0835 6401     		.2byte	0x164
 27114 0837 5D080000 		.4byte	0x85d
 27115 083b 28       		.byte	0x28
 27116 083c 00       		.byte	0
 27117 083d 09       		.uleb128 0x9
 27118 083e 97000000 		.4byte	0x97
 27119 0842 4D080000 		.4byte	0x84d
 27120 0846 0A       		.uleb128 0xa
 27121 0847 18010000 		.4byte	0x118
 27122 084b 04       		.byte	0x4
 27123 084c 00       		.byte	0
 27124 084d 09       		.uleb128 0x9
 27125 084e DF000000 		.4byte	0xdf
 27126 0852 5D080000 		.4byte	0x85d
 27127 0856 0A       		.uleb128 0xa
 27128 0857 18010000 		.4byte	0x118
 27129 085b 02       		.byte	0x2
 27130 085c 00       		.byte	0
 27131 085d 09       		.uleb128 0x9
 27132 085e 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 600


 27133 0862 6D080000 		.4byte	0x86d
 27134 0866 0A       		.uleb128 0xa
 27135 0867 18010000 		.4byte	0x118
 27136 086b 07       		.byte	0x7
 27137 086c 00       		.byte	0
 27138 086d 11       		.uleb128 0x11
 27139 086e 4C020000 		.4byte	.LASF160
 27140 0872 10       		.byte	0x10
 27141 0873 08       		.byte	0x8
 27142 0874 6B01     		.2byte	0x16b
 27143 0876 BC080000 		.4byte	0x8bc
 27144 087a 12       		.uleb128 0x12
 27145 087b 530D0000 		.4byte	.LASF161
 27146 087f 08       		.byte	0x8
 27147 0880 6C01     		.2byte	0x16c
 27148 0882 BC080000 		.4byte	0x8bc
 27149 0886 00       		.byte	0
 27150 0887 12       		.uleb128 0x12
 27151 0888 35150000 		.4byte	.LASF162
 27152 088c 08       		.byte	0x8
 27153 088d 6D01     		.2byte	0x16d
 27154 088f 41050000 		.4byte	0x541
 27155 0893 04       		.byte	0x4
 27156 0894 12       		.uleb128 0x12
 27157 0895 5D060000 		.4byte	.LASF163
 27158 0899 08       		.byte	0x8
 27159 089a 6E01     		.2byte	0x16e
 27160 089c CC080000 		.4byte	0x8cc
 27161 08a0 0C       		.byte	0xc
 27162 08a1 12       		.uleb128 0x12
 27163 08a2 B8100000 		.4byte	.LASF164
 27164 08a6 08       		.byte	0x8
 27165 08a7 6F01     		.2byte	0x16f
 27166 08a9 97000000 		.4byte	0x97
 27167 08ad 0E       		.byte	0xe
 27168 08ae 12       		.uleb128 0x12
 27169 08af 2D130000 		.4byte	.LASF165
 27170 08b3 08       		.byte	0x8
 27171 08b4 7001     		.2byte	0x170
 27172 08b6 97000000 		.4byte	0x97
 27173 08ba 0F       		.byte	0xf
 27174 08bb 00       		.byte	0
 27175 08bc 09       		.uleb128 0x9
 27176 08bd A3000000 		.4byte	0xa3
 27177 08c1 CC080000 		.4byte	0x8cc
 27178 08c5 0A       		.uleb128 0xa
 27179 08c6 18010000 		.4byte	0x118
 27180 08ca 01       		.byte	0x1
 27181 08cb 00       		.byte	0
 27182 08cc 09       		.uleb128 0x9
 27183 08cd 97000000 		.4byte	0x97
 27184 08d1 DC080000 		.4byte	0x8dc
 27185 08d5 0A       		.uleb128 0xa
 27186 08d6 18010000 		.4byte	0x118
 27187 08da 01       		.byte	0x1
 27188 08db 00       		.byte	0
 27189 08dc 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 601


 27190 08dd 9C0C0000 		.4byte	.LASF166
 27191 08e1 20       		.byte	0x20
 27192 08e2 08       		.byte	0x8
 27193 08e3 7701     		.2byte	0x177
 27194 08e5 1E090000 		.4byte	0x91e
 27195 08e9 12       		.uleb128 0x12
 27196 08ea 1A030000 		.4byte	.LASF167
 27197 08ee 08       		.byte	0x8
 27198 08ef 7801     		.2byte	0x178
 27199 08f1 97000000 		.4byte	0x97
 27200 08f5 00       		.byte	0
 27201 08f6 12       		.uleb128 0x12
 27202 08f7 4D0E0000 		.4byte	.LASF168
 27203 08fb 08       		.byte	0x8
 27204 08fc 7901     		.2byte	0x179
 27205 08fe 97000000 		.4byte	0x97
 27206 0902 01       		.byte	0x1
 27207 0903 12       		.uleb128 0x12
 27208 0904 780B0000 		.4byte	.LASF169
 27209 0908 08       		.byte	0x8
 27210 0909 7A01     		.2byte	0x17a
 27211 090b 1E090000 		.4byte	0x91e
 27212 090f 02       		.byte	0x2
 27213 0910 12       		.uleb128 0x12
 27214 0911 9F030000 		.4byte	.LASF117
 27215 0915 08       		.byte	0x8
 27216 0916 7B01     		.2byte	0x17b
 27217 0918 3D080000 		.4byte	0x83d
 27218 091c 1B       		.byte	0x1b
 27219 091d 00       		.byte	0
 27220 091e 09       		.uleb128 0x9
 27221 091f 97000000 		.4byte	0x97
 27222 0923 34090000 		.4byte	0x934
 27223 0927 0A       		.uleb128 0xa
 27224 0928 18010000 		.4byte	0x118
 27225 092c 04       		.byte	0x4
 27226 092d 0A       		.uleb128 0xa
 27227 092e 18010000 		.4byte	0x118
 27228 0932 04       		.byte	0x4
 27229 0933 00       		.byte	0
 27230 0934 11       		.uleb128 0x11
 27231 0935 AB100000 		.4byte	.LASF170
 27232 0939 20       		.byte	0x20
 27233 093a 08       		.byte	0x8
 27234 093b 8201     		.2byte	0x182
 27235 093d 90090000 		.4byte	0x990
 27236 0941 12       		.uleb128 0x12
 27237 0942 210E0000 		.4byte	.LASF171
 27238 0946 08       		.byte	0x8
 27239 0947 8301     		.2byte	0x183
 27240 0949 90090000 		.4byte	0x990
 27241 094d 00       		.byte	0
 27242 094e 12       		.uleb128 0x12
 27243 094f 1A130000 		.4byte	.LASF172
 27244 0953 08       		.byte	0x8
 27245 0954 8401     		.2byte	0x184
 27246 0956 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 602


 27247 095a 06       		.byte	0x6
 27248 095b 12       		.uleb128 0x12
 27249 095c 6F130000 		.4byte	.LASF173
 27250 0960 08       		.byte	0x8
 27251 0961 8501     		.2byte	0x185
 27252 0963 97000000 		.4byte	0x97
 27253 0967 07       		.byte	0x7
 27254 0968 12       		.uleb128 0x12
 27255 0969 8C060000 		.4byte	.LASF174
 27256 096d 08       		.byte	0x8
 27257 096e 8601     		.2byte	0x186
 27258 0970 71050000 		.4byte	0x571
 27259 0974 08       		.byte	0x8
 27260 0975 12       		.uleb128 0x12
 27261 0976 28030000 		.4byte	.LASF175
 27262 097a 08       		.byte	0x8
 27263 097b 8701     		.2byte	0x187
 27264 097d 97000000 		.4byte	0x97
 27265 0981 14       		.byte	0x14
 27266 0982 12       		.uleb128 0x12
 27267 0983 9F030000 		.4byte	.LASF117
 27268 0987 08       		.byte	0x8
 27269 0988 8801     		.2byte	0x188
 27270 098a A0090000 		.4byte	0x9a0
 27271 098e 15       		.byte	0x15
 27272 098f 00       		.byte	0
 27273 0990 09       		.uleb128 0x9
 27274 0991 97000000 		.4byte	0x97
 27275 0995 A0090000 		.4byte	0x9a0
 27276 0999 0A       		.uleb128 0xa
 27277 099a 18010000 		.4byte	0x118
 27278 099e 05       		.byte	0x5
 27279 099f 00       		.byte	0
 27280 09a0 09       		.uleb128 0x9
 27281 09a1 97000000 		.4byte	0x97
 27282 09a5 B0090000 		.4byte	0x9b0
 27283 09a9 0A       		.uleb128 0xa
 27284 09aa 18010000 		.4byte	0x118
 27285 09ae 0A       		.byte	0xa
 27286 09af 00       		.byte	0
 27287 09b0 11       		.uleb128 0x11
 27288 09b1 80100000 		.4byte	.LASF176
 27289 09b5 20       		.byte	0x20
 27290 09b6 08       		.byte	0x8
 27291 09b7 8F01     		.2byte	0x18f
 27292 09b9 E5090000 		.4byte	0x9e5
 27293 09bd 12       		.uleb128 0x12
 27294 09be 9A040000 		.4byte	.LASF177
 27295 09c2 08       		.byte	0x8
 27296 09c3 9001     		.2byte	0x190
 27297 09c5 40010000 		.4byte	0x140
 27298 09c9 00       		.byte	0
 27299 09ca 12       		.uleb128 0x12
 27300 09cb 7D030000 		.4byte	.LASF178
 27301 09cf 08       		.byte	0x8
 27302 09d0 9101     		.2byte	0x191
 27303 09d2 6D080000 		.4byte	0x86d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 603


 27304 09d6 08       		.byte	0x8
 27305 09d7 12       		.uleb128 0x12
 27306 09d8 9F030000 		.4byte	.LASF117
 27307 09dc 08       		.byte	0x8
 27308 09dd 9201     		.2byte	0x192
 27309 09df 5D080000 		.4byte	0x85d
 27310 09e3 18       		.byte	0x18
 27311 09e4 00       		.byte	0
 27312 09e5 11       		.uleb128 0x11
 27313 09e6 700A0000 		.4byte	.LASF179
 27314 09ea 10       		.byte	0x10
 27315 09eb 08       		.byte	0x8
 27316 09ec 9901     		.2byte	0x199
 27317 09ee 340A0000 		.4byte	0xa34
 27318 09f2 12       		.uleb128 0x12
 27319 09f3 19090000 		.4byte	.LASF180
 27320 09f7 08       		.byte	0x8
 27321 09f8 9A01     		.2byte	0x19a
 27322 09fa D3000000 		.4byte	0xd3
 27323 09fe 00       		.byte	0
 27324 09ff 12       		.uleb128 0x12
 27325 0a00 BE150000 		.4byte	.LASF181
 27326 0a04 08       		.byte	0x8
 27327 0a05 9B01     		.2byte	0x19b
 27328 0a07 D3000000 		.4byte	0xd3
 27329 0a0b 04       		.byte	0x4
 27330 0a0c 12       		.uleb128 0x12
 27331 0a0d 67060000 		.4byte	.LASF182
 27332 0a11 08       		.byte	0x8
 27333 0a12 9C01     		.2byte	0x19c
 27334 0a14 D3000000 		.4byte	0xd3
 27335 0a18 08       		.byte	0x8
 27336 0a19 12       		.uleb128 0x12
 27337 0a1a 83070000 		.4byte	.LASF183
 27338 0a1e 08       		.byte	0x8
 27339 0a1f 9D01     		.2byte	0x19d
 27340 0a21 97000000 		.4byte	0x97
 27341 0a25 0C       		.byte	0xc
 27342 0a26 12       		.uleb128 0x12
 27343 0a27 9F030000 		.4byte	.LASF117
 27344 0a2b 08       		.byte	0x8
 27345 0a2c 9E01     		.2byte	0x19e
 27346 0a2e 10060000 		.4byte	0x610
 27347 0a32 0D       		.byte	0xd
 27348 0a33 00       		.byte	0
 27349 0a34 11       		.uleb128 0x11
 27350 0a35 B1110000 		.4byte	.LASF184
 27351 0a39 10       		.byte	0x10
 27352 0a3a 08       		.byte	0x8
 27353 0a3b A501     		.2byte	0x1a5
 27354 0a3d 760A0000 		.4byte	0xa76
 27355 0a41 12       		.uleb128 0x12
 27356 0a42 96070000 		.4byte	.LASF185
 27357 0a46 08       		.byte	0x8
 27358 0a47 A601     		.2byte	0x1a6
 27359 0a49 A3000000 		.4byte	0xa3
 27360 0a4d 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 604


 27361 0a4e 12       		.uleb128 0x12
 27362 0a4f E5100000 		.4byte	.LASF186
 27363 0a53 08       		.byte	0x8
 27364 0a54 A701     		.2byte	0x1a7
 27365 0a56 C7000000 		.4byte	0xc7
 27366 0a5a 02       		.byte	0x2
 27367 0a5b 12       		.uleb128 0x12
 27368 0a5c 91080000 		.4byte	.LASF187
 27369 0a60 08       		.byte	0x8
 27370 0a61 A801     		.2byte	0x1a8
 27371 0a63 BC080000 		.4byte	0x8bc
 27372 0a67 04       		.byte	0x4
 27373 0a68 12       		.uleb128 0x12
 27374 0a69 9F030000 		.4byte	.LASF117
 27375 0a6d 08       		.byte	0x8
 27376 0a6e A901     		.2byte	0x1a9
 27377 0a70 5D080000 		.4byte	0x85d
 27378 0a74 08       		.byte	0x8
 27379 0a75 00       		.byte	0
 27380 0a76 11       		.uleb128 0x11
 27381 0a77 D8010000 		.4byte	.LASF188
 27382 0a7b 10       		.byte	0x10
 27383 0a7c 08       		.byte	0x8
 27384 0a7d B001     		.2byte	0x1b0
 27385 0a7f AB0A0000 		.4byte	0xaab
 27386 0a83 12       		.uleb128 0x12
 27387 0a84 1F100000 		.4byte	.LASF189
 27388 0a88 08       		.byte	0x8
 27389 0a89 B101     		.2byte	0x1b1
 27390 0a8b 97000000 		.4byte	0x97
 27391 0a8f 00       		.byte	0
 27392 0a90 12       		.uleb128 0x12
 27393 0a91 420B0000 		.4byte	.LASF190
 27394 0a95 08       		.byte	0x8
 27395 0a96 B201     		.2byte	0x1b2
 27396 0a98 97000000 		.4byte	0x97
 27397 0a9c 01       		.byte	0x1
 27398 0a9d 12       		.uleb128 0x12
 27399 0a9e 9F030000 		.4byte	.LASF117
 27400 0aa2 08       		.byte	0x8
 27401 0aa3 B301     		.2byte	0x1b3
 27402 0aa5 AB0A0000 		.4byte	0xaab
 27403 0aa9 02       		.byte	0x2
 27404 0aaa 00       		.byte	0
 27405 0aab 09       		.uleb128 0x9
 27406 0aac 97000000 		.4byte	0x97
 27407 0ab0 BB0A0000 		.4byte	0xabb
 27408 0ab4 0A       		.uleb128 0xa
 27409 0ab5 18010000 		.4byte	0x118
 27410 0ab9 0D       		.byte	0xd
 27411 0aba 00       		.byte	0
 27412 0abb 11       		.uleb128 0x11
 27413 0abc BB0D0000 		.4byte	.LASF191
 27414 0ac0 10       		.byte	0x10
 27415 0ac1 08       		.byte	0x8
 27416 0ac2 BA01     		.2byte	0x1ba
 27417 0ac4 FD0A0000 		.4byte	0xafd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 605


 27418 0ac8 12       		.uleb128 0x12
 27419 0ac9 6F140000 		.4byte	.LASF192
 27420 0acd 08       		.byte	0x8
 27421 0ace BB01     		.2byte	0x1bb
 27422 0ad0 D3000000 		.4byte	0xd3
 27423 0ad4 00       		.byte	0
 27424 0ad5 12       		.uleb128 0x12
 27425 0ad6 6E070000 		.4byte	.LASF193
 27426 0ada 08       		.byte	0x8
 27427 0adb BC01     		.2byte	0x1bc
 27428 0add EB000000 		.4byte	0xeb
 27429 0ae1 04       		.byte	0x4
 27430 0ae2 12       		.uleb128 0x12
 27431 0ae3 B10F0000 		.4byte	.LASF194
 27432 0ae7 08       		.byte	0x8
 27433 0ae8 BD01     		.2byte	0x1bd
 27434 0aea EB000000 		.4byte	0xeb
 27435 0aee 08       		.byte	0x8
 27436 0aef 12       		.uleb128 0x12
 27437 0af0 9F030000 		.4byte	.LASF117
 27438 0af4 08       		.byte	0x8
 27439 0af5 BE01     		.2byte	0x1be
 27440 0af7 FD0A0000 		.4byte	0xafd
 27441 0afb 0C       		.byte	0xc
 27442 0afc 00       		.byte	0
 27443 0afd 09       		.uleb128 0x9
 27444 0afe 97000000 		.4byte	0x97
 27445 0b02 0D0B0000 		.4byte	0xb0d
 27446 0b06 0A       		.uleb128 0xa
 27447 0b07 18010000 		.4byte	0x118
 27448 0b0b 03       		.byte	0x3
 27449 0b0c 00       		.byte	0
 27450 0b0d 11       		.uleb128 0x11
 27451 0b0e 8F020000 		.4byte	.LASF195
 27452 0b12 12       		.byte	0x12
 27453 0b13 08       		.byte	0x8
 27454 0b14 C501     		.2byte	0x1c5
 27455 0b16 4F0B0000 		.4byte	0xb4f
 27456 0b1a 12       		.uleb128 0x12
 27457 0b1b 96150000 		.4byte	.LASF196
 27458 0b1f 08       		.byte	0x8
 27459 0b20 C601     		.2byte	0x1c6
 27460 0b22 97000000 		.4byte	0x97
 27461 0b26 00       		.byte	0
 27462 0b27 12       		.uleb128 0x12
 27463 0b28 F8130000 		.4byte	.LASF197
 27464 0b2c 08       		.byte	0x8
 27465 0b2d C701     		.2byte	0x1c7
 27466 0b2f BC080000 		.4byte	0x8bc
 27467 0b33 02       		.byte	0x2
 27468 0b34 12       		.uleb128 0x12
 27469 0b35 61000000 		.4byte	.LASF198
 27470 0b39 08       		.byte	0x8
 27471 0b3a C801     		.2byte	0x1c8
 27472 0b3c 97000000 		.4byte	0x97
 27473 0b40 06       		.byte	0x6
 27474 0b41 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 606


 27475 0b42 9F030000 		.4byte	.LASF117
 27476 0b46 08       		.byte	0x8
 27477 0b47 C901     		.2byte	0x1c9
 27478 0b49 4F0B0000 		.4byte	0xb4f
 27479 0b4d 07       		.byte	0x7
 27480 0b4e 00       		.byte	0
 27481 0b4f 09       		.uleb128 0x9
 27482 0b50 97000000 		.4byte	0x97
 27483 0b54 5F0B0000 		.4byte	0xb5f
 27484 0b58 0A       		.uleb128 0xa
 27485 0b59 18010000 		.4byte	0x118
 27486 0b5d 09       		.byte	0x9
 27487 0b5e 00       		.byte	0
 27488 0b5f 14       		.uleb128 0x14
 27489 0b60 8A140000 		.4byte	.LASF199
 27490 0b64 F402     		.2byte	0x2f4
 27491 0b66 08       		.byte	0x8
 27492 0b67 D201     		.2byte	0x1d2
 27493 0b69 440C0000 		.4byte	0xc44
 27494 0b6d 12       		.uleb128 0x12
 27495 0b6e 400C0000 		.4byte	.LASF200
 27496 0b72 08       		.byte	0x8
 27497 0b73 D401     		.2byte	0x1d4
 27498 0b75 97000000 		.4byte	0x97
 27499 0b79 00       		.byte	0
 27500 0b7a 12       		.uleb128 0x12
 27501 0b7b 9F030000 		.4byte	.LASF117
 27502 0b7f 08       		.byte	0x8
 27503 0b80 D501     		.2byte	0x1d5
 27504 0b82 440C0000 		.4byte	0xc44
 27505 0b86 01       		.byte	0x1
 27506 0b87 13       		.uleb128 0x13
 27507 0b88 636E7400 		.ascii	"cnt\000"
 27508 0b8c 08       		.byte	0x8
 27509 0b8d D601     		.2byte	0x1d6
 27510 0b8f A4040000 		.4byte	0x4a4
 27511 0b93 10       		.byte	0x10
 27512 0b94 12       		.uleb128 0x12
 27513 0b95 56030000 		.4byte	.LASF201
 27514 0b99 08       		.byte	0x8
 27515 0b9a D701     		.2byte	0x1d7
 27516 0b9c 540C0000 		.4byte	0xc54
 27517 0ba0 80       		.byte	0x80
 27518 0ba1 13       		.uleb128 0x13
 27519 0ba2 64657600 		.ascii	"dev\000"
 27520 0ba6 08       		.byte	0x8
 27521 0ba7 D801     		.2byte	0x1d8
 27522 0ba9 81050000 		.4byte	0x581
 27523 0bad A0       		.byte	0xa0
 27524 0bae 12       		.uleb128 0x12
 27525 0baf 02120000 		.4byte	.LASF202
 27526 0bb3 08       		.byte	0x8
 27527 0bb4 D901     		.2byte	0x1d9
 27528 0bb6 640C0000 		.4byte	0xc64
 27529 0bba B0       		.byte	0xb0
 27530 0bbb 15       		.uleb128 0x15
 27531 0bbc 656E6300 		.ascii	"enc\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 607


 27532 0bc0 08       		.byte	0x8
 27533 0bc1 DA01     		.2byte	0x1da
 27534 0bc3 740C0000 		.4byte	0xc74
 27535 0bc7 9001     		.2byte	0x190
 27536 0bc9 15       		.uleb128 0x15
 27537 0bca 656D6700 		.ascii	"emg\000"
 27538 0bce 08       		.byte	0x8
 27539 0bcf DB01     		.2byte	0x1db
 27540 0bd1 6D080000 		.4byte	0x86d
 27541 0bd5 F001     		.2byte	0x1f0
 27542 0bd7 15       		.uleb128 0x15
 27543 0bd8 696D7500 		.ascii	"imu\000"
 27544 0bdc 08       		.byte	0x8
 27545 0bdd DC01     		.2byte	0x1dc
 27546 0bdf DC080000 		.4byte	0x8dc
 27547 0be3 0002     		.2byte	0x200
 27548 0be5 15       		.uleb128 0x15
 27549 0be6 65787000 		.ascii	"exp\000"
 27550 0bea 08       		.byte	0x8
 27551 0beb DD01     		.2byte	0x1dd
 27552 0bed 34090000 		.4byte	0x934
 27553 0bf1 2002     		.2byte	0x220
 27554 0bf3 16       		.uleb128 0x16
 27555 0bf4 A2000000 		.4byte	.LASF203
 27556 0bf8 08       		.byte	0x8
 27557 0bf9 DE01     		.2byte	0x1de
 27558 0bfb 840C0000 		.4byte	0xc84
 27559 0bff 4002     		.2byte	0x240
 27560 0c01 15       		.uleb128 0x15
 27561 0c02 534800   		.ascii	"SH\000"
 27562 0c05 08       		.byte	0x8
 27563 0c06 E001     		.2byte	0x1e0
 27564 0c08 E5090000 		.4byte	0x9e5
 27565 0c0c A002     		.2byte	0x2a0
 27566 0c0e 16       		.uleb128 0x16
 27567 0c0f 4C010000 		.4byte	.LASF204
 27568 0c13 08       		.byte	0x8
 27569 0c14 E101     		.2byte	0x1e1
 27570 0c16 340A0000 		.4byte	0xa34
 27571 0c1a B002     		.2byte	0x2b0
 27572 0c1c 15       		.uleb128 0x15
 27573 0c1d 4D5300   		.ascii	"MS\000"
 27574 0c20 08       		.byte	0x8
 27575 0c21 E201     		.2byte	0x1e2
 27576 0c23 760A0000 		.4byte	0xa76
 27577 0c27 C002     		.2byte	0x2c0
 27578 0c29 15       		.uleb128 0x15
 27579 0c2a 464200   		.ascii	"FB\000"
 27580 0c2d 08       		.byte	0x8
 27581 0c2e E301     		.2byte	0x1e3
 27582 0c30 BB0A0000 		.4byte	0xabb
 27583 0c34 D002     		.2byte	0x2d0
 27584 0c36 15       		.uleb128 0x15
 27585 0c37 575200   		.ascii	"WR\000"
 27586 0c3a 08       		.byte	0x8
 27587 0c3b E401     		.2byte	0x1e4
 27588 0c3d 0D0B0000 		.4byte	0xb0d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 608


 27589 0c41 E002     		.2byte	0x2e0
 27590 0c43 00       		.byte	0
 27591 0c44 09       		.uleb128 0x9
 27592 0c45 97000000 		.4byte	0x97
 27593 0c49 540C0000 		.4byte	0xc54
 27594 0c4d 0A       		.uleb128 0xa
 27595 0c4e 18010000 		.4byte	0x118
 27596 0c52 0E       		.byte	0xe
 27597 0c53 00       		.byte	0
 27598 0c54 09       		.uleb128 0x9
 27599 0c55 97000000 		.4byte	0x97
 27600 0c59 640C0000 		.4byte	0xc64
 27601 0c5d 0A       		.uleb128 0xa
 27602 0c5e 18010000 		.4byte	0x118
 27603 0c62 1F       		.byte	0x1f
 27604 0c63 00       		.byte	0
 27605 0c64 09       		.uleb128 0x9
 27606 0c65 20060000 		.4byte	0x620
 27607 0c69 740C0000 		.4byte	0xc74
 27608 0c6d 0A       		.uleb128 0xa
 27609 0c6e 18010000 		.4byte	0x118
 27610 0c72 01       		.byte	0x1
 27611 0c73 00       		.byte	0
 27612 0c74 09       		.uleb128 0x9
 27613 0c75 BA070000 		.4byte	0x7ba
 27614 0c79 840C0000 		.4byte	0xc84
 27615 0c7d 0A       		.uleb128 0xa
 27616 0c7e 18010000 		.4byte	0x118
 27617 0c82 01       		.byte	0x1
 27618 0c83 00       		.byte	0
 27619 0c84 09       		.uleb128 0x9
 27620 0c85 B0090000 		.4byte	0x9b0
 27621 0c89 940C0000 		.4byte	0xc94
 27622 0c8d 0A       		.uleb128 0xa
 27623 0c8e 18010000 		.4byte	0x118
 27624 0c92 02       		.byte	0x2
 27625 0c93 00       		.byte	0
 27626 0c94 11       		.uleb128 0x11
 27627 0c95 F90E0000 		.4byte	.LASF205
 27628 0c99 28       		.byte	0x28
 27629 0c9a 08       		.byte	0x8
 27630 0c9b EF01     		.2byte	0x1ef
 27631 0c9d F00C0000 		.4byte	0xcf0
 27632 0ca1 12       		.uleb128 0x12
 27633 0ca2 8C050000 		.4byte	.LASF206
 27634 0ca6 08       		.byte	0x8
 27635 0ca7 F001     		.2byte	0x1f0
 27636 0ca9 97000000 		.4byte	0x97
 27637 0cad 00       		.byte	0
 27638 0cae 12       		.uleb128 0x12
 27639 0caf AC030000 		.4byte	.LASF207
 27640 0cb3 08       		.byte	0x8
 27641 0cb4 F101     		.2byte	0x1f1
 27642 0cb6 F00C0000 		.4byte	0xcf0
 27643 0cba 02       		.byte	0x2
 27644 0cbb 12       		.uleb128 0x12
 27645 0cbc 160E0000 		.4byte	.LASF208
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 609


 27646 0cc0 08       		.byte	0x8
 27647 0cc1 F201     		.2byte	0x1f2
 27648 0cc3 F00C0000 		.4byte	0xcf0
 27649 0cc7 08       		.byte	0x8
 27650 0cc8 12       		.uleb128 0x12
 27651 0cc9 050F0000 		.4byte	.LASF209
 27652 0ccd 08       		.byte	0x8
 27653 0cce F301     		.2byte	0x1f3
 27654 0cd0 F00C0000 		.4byte	0xcf0
 27655 0cd4 0E       		.byte	0xe
 27656 0cd5 12       		.uleb128 0x12
 27657 0cd6 00090000 		.4byte	.LASF210
 27658 0cda 08       		.byte	0x8
 27659 0cdb F401     		.2byte	0x1f4
 27660 0cdd 000D0000 		.4byte	0xd00
 27661 0ce1 14       		.byte	0x14
 27662 0ce2 12       		.uleb128 0x12
 27663 0ce3 61020000 		.4byte	.LASF211
 27664 0ce7 08       		.byte	0x8
 27665 0ce8 F501     		.2byte	0x1f5
 27666 0cea C7000000 		.4byte	0xc7
 27667 0cee 24       		.byte	0x24
 27668 0cef 00       		.byte	0
 27669 0cf0 09       		.uleb128 0x9
 27670 0cf1 C7000000 		.4byte	0xc7
 27671 0cf5 000D0000 		.4byte	0xd00
 27672 0cf9 0A       		.uleb128 0xa
 27673 0cfa 18010000 		.4byte	0x118
 27674 0cfe 02       		.byte	0x2
 27675 0cff 00       		.byte	0
 27676 0d00 09       		.uleb128 0x9
 27677 0d01 EB000000 		.4byte	0xeb
 27678 0d05 100D0000 		.4byte	0xd10
 27679 0d09 0A       		.uleb128 0xa
 27680 0d0a 18010000 		.4byte	0x118
 27681 0d0e 03       		.byte	0x3
 27682 0d0f 00       		.byte	0
 27683 0d10 11       		.uleb128 0x11
 27684 0d11 AB040000 		.4byte	.LASF212
 27685 0d15 06       		.byte	0x6
 27686 0d16 08       		.byte	0x8
 27687 0d17 0502     		.2byte	0x205
 27688 0d19 520D0000 		.4byte	0xd52
 27689 0d1d 12       		.uleb128 0x12
 27690 0d1e 68080000 		.4byte	.LASF213
 27691 0d22 08       		.byte	0x8
 27692 0d23 0602     		.2byte	0x206
 27693 0d25 97000000 		.4byte	0x97
 27694 0d29 00       		.byte	0
 27695 0d2a 12       		.uleb128 0x12
 27696 0d2b 71160000 		.4byte	.LASF214
 27697 0d2f 08       		.byte	0x8
 27698 0d30 0702     		.2byte	0x207
 27699 0d32 97000000 		.4byte	0x97
 27700 0d36 01       		.byte	0x1
 27701 0d37 12       		.uleb128 0x12
 27702 0d38 FA060000 		.4byte	.LASF215
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 610


 27703 0d3c 08       		.byte	0x8
 27704 0d3d 0802     		.2byte	0x208
 27705 0d3f C7000000 		.4byte	0xc7
 27706 0d43 02       		.byte	0x2
 27707 0d44 12       		.uleb128 0x12
 27708 0d45 140B0000 		.4byte	.LASF216
 27709 0d49 08       		.byte	0x8
 27710 0d4a 0902     		.2byte	0x209
 27711 0d4c C7000000 		.4byte	0xc7
 27712 0d50 04       		.byte	0x4
 27713 0d51 00       		.byte	0
 27714 0d52 17       		.uleb128 0x17
 27715 0d53 56100000 		.4byte	.LASF411
 27716 0d57 02       		.byte	0x2
 27717 0d58 1403     		.2byte	0x314
 27718 0d5a 8C000000 		.4byte	0x8c
 27719 0d5e 03       		.byte	0x3
 27720 0d5f 7C0D0000 		.4byte	0xd7c
 27721 0d63 18       		.uleb128 0x18
 27722 0d64 86050000 		.4byte	.LASF304
 27723 0d68 02       		.byte	0x2
 27724 0d69 1403     		.2byte	0x314
 27725 0d6b 8C000000 		.4byte	0x8c
 27726 0d6f 19       		.uleb128 0x19
 27727 0d70 75020000 		.4byte	.LASF412
 27728 0d74 02       		.byte	0x2
 27729 0d75 1603     		.2byte	0x316
 27730 0d77 8C000000 		.4byte	0x8c
 27731 0d7b 00       		.byte	0
 27732 0d7c 1A       		.uleb128 0x1a
 27733 0d7d A5110000 		.4byte	.LASF217
 27734 0d81 01       		.byte	0x1
 27735 0d82 3D       		.byte	0x3d
 27736 0d83 00000000 		.4byte	.LFB64
 27737 0d87 1C050000 		.4byte	.LFE64-.LFB64
 27738 0d8b 01       		.uleb128 0x1
 27739 0d8c 9C       		.byte	0x9c
 27740 0d8d 850E0000 		.4byte	0xe85
 27741 0d91 1B       		.uleb128 0x1b
 27742 0d92 00070000 		.4byte	.LASF219
 27743 0d96 01       		.byte	0x1
 27744 0d97 3F       		.byte	0x3f
 27745 0d98 97000000 		.4byte	0x97
 27746 0d9c 02       		.uleb128 0x2
 27747 0d9d 91       		.byte	0x91
 27748 0d9e 77       		.sleb128 -9
 27749 0d9f 1C       		.uleb128 0x1c
 27750 0da0 520D0000 		.4byte	0xd52
 27751 0da4 48030000 		.4byte	.LBB12
 27752 0da8 08000000 		.4byte	.LBE12-.LBB12
 27753 0dac 01       		.byte	0x1
 27754 0dad 9C       		.byte	0x9c
 27755 0dae CD0D0000 		.4byte	0xdcd
 27756 0db2 1D       		.uleb128 0x1d
 27757 0db3 630D0000 		.4byte	0xd63
 27758 0db7 02       		.uleb128 0x2
 27759 0db8 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 611


 27760 0db9 60       		.sleb128 -32
 27761 0dba 1E       		.uleb128 0x1e
 27762 0dbb 48030000 		.4byte	.LBB13
 27763 0dbf 08000000 		.4byte	.LBE13-.LBB13
 27764 0dc3 1F       		.uleb128 0x1f
 27765 0dc4 6F0D0000 		.4byte	0xd6f
 27766 0dc8 02       		.uleb128 0x2
 27767 0dc9 91       		.byte	0x91
 27768 0dca 5C       		.sleb128 -36
 27769 0dcb 00       		.byte	0
 27770 0dcc 00       		.byte	0
 27771 0dcd 1C       		.uleb128 0x1c
 27772 0dce 520D0000 		.4byte	0xd52
 27773 0dd2 66030000 		.4byte	.LBB14
 27774 0dd6 08000000 		.4byte	.LBE14-.LBB14
 27775 0dda 01       		.byte	0x1
 27776 0ddb A8       		.byte	0xa8
 27777 0ddc FB0D0000 		.4byte	0xdfb
 27778 0de0 1D       		.uleb128 0x1d
 27779 0de1 630D0000 		.4byte	0xd63
 27780 0de5 02       		.uleb128 0x2
 27781 0de6 91       		.byte	0x91
 27782 0de7 70       		.sleb128 -16
 27783 0de8 1E       		.uleb128 0x1e
 27784 0de9 66030000 		.4byte	.LBB15
 27785 0ded 08000000 		.4byte	.LBE15-.LBB15
 27786 0df1 1F       		.uleb128 0x1f
 27787 0df2 6F0D0000 		.4byte	0xd6f
 27788 0df6 02       		.uleb128 0x2
 27789 0df7 91       		.byte	0x91
 27790 0df8 58       		.sleb128 -40
 27791 0df9 00       		.byte	0
 27792 0dfa 00       		.byte	0
 27793 0dfb 20       		.uleb128 0x20
 27794 0dfc 520D0000 		.4byte	0xd52
 27795 0e00 A8040000 		.4byte	.LBB16
 27796 0e04 08000000 		.4byte	.LBE16-.LBB16
 27797 0e08 01       		.byte	0x1
 27798 0e09 0401     		.2byte	0x104
 27799 0e0b 2A0E0000 		.4byte	0xe2a
 27800 0e0f 1D       		.uleb128 0x1d
 27801 0e10 630D0000 		.4byte	0xd63
 27802 0e14 02       		.uleb128 0x2
 27803 0e15 91       		.byte	0x91
 27804 0e16 6C       		.sleb128 -20
 27805 0e17 1E       		.uleb128 0x1e
 27806 0e18 A8040000 		.4byte	.LBB17
 27807 0e1c 08000000 		.4byte	.LBE17-.LBB17
 27808 0e20 1F       		.uleb128 0x1f
 27809 0e21 6F0D0000 		.4byte	0xd6f
 27810 0e25 02       		.uleb128 0x2
 27811 0e26 91       		.byte	0x91
 27812 0e27 54       		.sleb128 -44
 27813 0e28 00       		.byte	0
 27814 0e29 00       		.byte	0
 27815 0e2a 20       		.uleb128 0x20
 27816 0e2b 520D0000 		.4byte	0xd52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 612


 27817 0e2f D8040000 		.4byte	.LBB18
 27818 0e33 08000000 		.4byte	.LBE18-.LBB18
 27819 0e37 01       		.byte	0x1
 27820 0e38 2201     		.2byte	0x122
 27821 0e3a 590E0000 		.4byte	0xe59
 27822 0e3e 1D       		.uleb128 0x1d
 27823 0e3f 630D0000 		.4byte	0xd63
 27824 0e43 02       		.uleb128 0x2
 27825 0e44 91       		.byte	0x91
 27826 0e45 68       		.sleb128 -24
 27827 0e46 1E       		.uleb128 0x1e
 27828 0e47 D8040000 		.4byte	.LBB19
 27829 0e4b 08000000 		.4byte	.LBE19-.LBB19
 27830 0e4f 1F       		.uleb128 0x1f
 27831 0e50 6F0D0000 		.4byte	0xd6f
 27832 0e54 02       		.uleb128 0x2
 27833 0e55 91       		.byte	0x91
 27834 0e56 50       		.sleb128 -48
 27835 0e57 00       		.byte	0
 27836 0e58 00       		.byte	0
 27837 0e59 21       		.uleb128 0x21
 27838 0e5a 520D0000 		.4byte	0xd52
 27839 0e5e F0040000 		.4byte	.LBB20
 27840 0e62 08000000 		.4byte	.LBE20-.LBB20
 27841 0e66 01       		.byte	0x1
 27842 0e67 2801     		.2byte	0x128
 27843 0e69 1D       		.uleb128 0x1d
 27844 0e6a 630D0000 		.4byte	0xd63
 27845 0e6e 02       		.uleb128 0x2
 27846 0e6f 91       		.byte	0x91
 27847 0e70 64       		.sleb128 -28
 27848 0e71 1E       		.uleb128 0x1e
 27849 0e72 F0040000 		.4byte	.LBB21
 27850 0e76 08000000 		.4byte	.LBE21-.LBB21
 27851 0e7a 1F       		.uleb128 0x1f
 27852 0e7b 6F0D0000 		.4byte	0xd6f
 27853 0e7f 02       		.uleb128 0x2
 27854 0e80 91       		.byte	0x91
 27855 0e81 4C       		.sleb128 -52
 27856 0e82 00       		.byte	0
 27857 0e83 00       		.byte	0
 27858 0e84 00       		.byte	0
 27859 0e85 22       		.uleb128 0x22
 27860 0e86 00000000 		.4byte	.LASF218
 27861 0e8a 01       		.byte	0x1
 27862 0e8b 3601     		.2byte	0x136
 27863 0e8d 00000000 		.4byte	.LFB65
 27864 0e91 22000000 		.4byte	.LFE65-.LFB65
 27865 0e95 01       		.uleb128 0x1
 27866 0e96 9C       		.byte	0x9c
 27867 0e97 AC0E0000 		.4byte	0xeac
 27868 0e9b 23       		.uleb128 0x23
 27869 0e9c 15060000 		.4byte	.LASF220
 27870 0ea0 01       		.byte	0x1
 27871 0ea1 3701     		.2byte	0x137
 27872 0ea3 AC0E0000 		.4byte	0xeac
 27873 0ea7 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 613


 27874 0ea8 91       		.byte	0x91
 27875 0ea9 9C74     		.sleb128 -1508
 27876 0eab 00       		.byte	0
 27877 0eac 09       		.uleb128 0x9
 27878 0ead F9000000 		.4byte	0xf9
 27879 0eb1 BD0E0000 		.4byte	0xebd
 27880 0eb5 24       		.uleb128 0x24
 27881 0eb6 18010000 		.4byte	0x118
 27882 0eba DB05     		.2byte	0x5db
 27883 0ebc 00       		.byte	0
 27884 0ebd 22       		.uleb128 0x22
 27885 0ebe BB140000 		.4byte	.LASF221
 27886 0ec2 01       		.byte	0x1
 27887 0ec3 4201     		.2byte	0x142
 27888 0ec5 00000000 		.4byte	.LFB66
 27889 0ec9 64010000 		.4byte	.LFE66-.LFB66
 27890 0ecd 01       		.uleb128 0x1
 27891 0ece 9C       		.byte	0x9c
 27892 0ecf 060F0000 		.4byte	0xf06
 27893 0ed3 25       		.uleb128 0x25
 27894 0ed4 0B140000 		.4byte	.LASF224
 27895 0ed8 01       		.byte	0x1
 27896 0ed9 4201     		.2byte	0x142
 27897 0edb A3000000 		.4byte	0xa3
 27898 0edf 04       		.uleb128 0x4
 27899 0ee0 91       		.byte	0x91
 27900 0ee1 B6C47E   		.sleb128 -24010
 27901 0ee4 23       		.uleb128 0x23
 27902 0ee5 15060000 		.4byte	.LASF220
 27903 0ee9 01       		.byte	0x1
 27904 0eea 4301     		.2byte	0x143
 27905 0eec 060F0000 		.4byte	0xf06
 27906 0ef0 03       		.uleb128 0x3
 27907 0ef1 91       		.byte	0x91
 27908 0ef2 D860     		.sleb128 -4008
 27909 0ef4 23       		.uleb128 0x23
 27910 0ef5 CE080000 		.4byte	.LASF222
 27911 0ef9 01       		.byte	0x1
 27912 0efa 4401     		.2byte	0x144
 27913 0efc 170F0000 		.4byte	0xf17
 27914 0f00 04       		.uleb128 0x4
 27915 0f01 91       		.byte	0x91
 27916 0f02 B8C47E   		.sleb128 -24008
 27917 0f05 00       		.byte	0
 27918 0f06 09       		.uleb128 0x9
 27919 0f07 F9000000 		.4byte	0xf9
 27920 0f0b 170F0000 		.4byte	0xf17
 27921 0f0f 24       		.uleb128 0x24
 27922 0f10 18010000 		.4byte	0x118
 27923 0f14 9F0F     		.2byte	0xf9f
 27924 0f16 00       		.byte	0
 27925 0f17 09       		.uleb128 0x9
 27926 0f18 F9000000 		.4byte	0xf9
 27927 0f1c 280F0000 		.4byte	0xf28
 27928 0f20 24       		.uleb128 0x24
 27929 0f21 18010000 		.4byte	0x118
 27930 0f25 1F4E     		.2byte	0x4e1f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 614


 27931 0f27 00       		.byte	0
 27932 0f28 22       		.uleb128 0x22
 27933 0f29 1B020000 		.4byte	.LASF223
 27934 0f2d 01       		.byte	0x1
 27935 0f2e 7401     		.2byte	0x174
 27936 0f30 00000000 		.4byte	.LFB67
 27937 0f34 E4220000 		.4byte	.LFE67-.LFB67
 27938 0f38 01       		.uleb128 0x1
 27939 0f39 9C       		.byte	0x9c
 27940 0f3a CC100000 		.4byte	0x10cc
 27941 0f3e 25       		.uleb128 0x25
 27942 0f3f C60D0000 		.4byte	.LASF225
 27943 0f43 01       		.byte	0x1
 27944 0f44 7401     		.2byte	0x174
 27945 0f46 CC100000 		.4byte	0x10cc
 27946 0f4a 03       		.uleb128 0x3
 27947 0f4b 91       		.byte	0x91
 27948 0f4c 9C67     		.sleb128 -3172
 27949 0f4e 25       		.uleb128 0x25
 27950 0f4f 94140000 		.4byte	.LASF226
 27951 0f53 01       		.byte	0x1
 27952 0f54 7401     		.2byte	0x174
 27953 0f56 D2100000 		.4byte	0x10d2
 27954 0f5a 03       		.uleb128 0x3
 27955 0f5b 91       		.byte	0x91
 27956 0f5c 9867     		.sleb128 -3176
 27957 0f5e 25       		.uleb128 0x25
 27958 0f5f B8030000 		.4byte	.LASF227
 27959 0f63 01       		.byte	0x1
 27960 0f64 7501     		.2byte	0x175
 27961 0f66 D2100000 		.4byte	0x10d2
 27962 0f6a 03       		.uleb128 0x3
 27963 0f6b 91       		.byte	0x91
 27964 0f6c 9467     		.sleb128 -3180
 27965 0f6e 25       		.uleb128 0x25
 27966 0f6f FF0C0000 		.4byte	.LASF228
 27967 0f73 01       		.byte	0x1
 27968 0f74 7501     		.2byte	0x175
 27969 0f76 D2100000 		.4byte	0x10d2
 27970 0f7a 03       		.uleb128 0x3
 27971 0f7b 91       		.byte	0x91
 27972 0f7c 9067     		.sleb128 -3184
 27973 0f7e 25       		.uleb128 0x25
 27974 0f7f D5130000 		.4byte	.LASF229
 27975 0f83 01       		.byte	0x1
 27976 0f84 7601     		.2byte	0x176
 27977 0f86 D2100000 		.4byte	0x10d2
 27978 0f8a 02       		.uleb128 0x2
 27979 0f8b 91       		.byte	0x91
 27980 0f8c 00       		.sleb128 0
 27981 0f8d 25       		.uleb128 0x25
 27982 0f8e 5D080000 		.4byte	.LASF230
 27983 0f92 01       		.byte	0x1
 27984 0f93 7601     		.2byte	0x176
 27985 0f95 D8100000 		.4byte	0x10d8
 27986 0f99 02       		.uleb128 0x2
 27987 0f9a 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 615


 27988 0f9b 04       		.sleb128 4
 27989 0f9c 25       		.uleb128 0x25
 27990 0f9d 610B0000 		.4byte	.LASF231
 27991 0fa1 01       		.byte	0x1
 27992 0fa2 7701     		.2byte	0x177
 27993 0fa4 D2100000 		.4byte	0x10d2
 27994 0fa8 02       		.uleb128 0x2
 27995 0fa9 91       		.byte	0x91
 27996 0faa 08       		.sleb128 8
 27997 0fab 25       		.uleb128 0x25
 27998 0fac E0080000 		.4byte	.LASF232
 27999 0fb0 01       		.byte	0x1
 28000 0fb1 7701     		.2byte	0x177
 28001 0fb3 D8100000 		.4byte	0x10d8
 28002 0fb7 02       		.uleb128 0x2
 28003 0fb8 91       		.byte	0x91
 28004 0fb9 0C       		.sleb128 12
 28005 0fba 23       		.uleb128 0x23
 28006 0fbb 70060000 		.4byte	.LASF233
 28007 0fbf 01       		.byte	0x1
 28008 0fc0 7A01     		.2byte	0x17a
 28009 0fc2 DE100000 		.4byte	0x10de
 28010 0fc6 03       		.uleb128 0x3
 28011 0fc7 91       		.byte	0x91
 28012 0fc8 E867     		.sleb128 -3096
 28013 0fca 23       		.uleb128 0x23
 28014 0fcb EF0B0000 		.4byte	.LASF234
 28015 0fcf 01       		.byte	0x1
 28016 0fd0 7B01     		.2byte	0x17b
 28017 0fd2 A3000000 		.4byte	0xa3
 28018 0fd6 02       		.uleb128 0x2
 28019 0fd7 91       		.byte	0x91
 28020 0fd8 60       		.sleb128 -32
 28021 0fd9 26       		.uleb128 0x26
 28022 0fda 6900     		.ascii	"i\000"
 28023 0fdc 01       		.byte	0x1
 28024 0fdd 7E01     		.2byte	0x17e
 28025 0fdf 97000000 		.4byte	0x97
 28026 0fe3 02       		.uleb128 0x2
 28027 0fe4 91       		.byte	0x91
 28028 0fe5 67       		.sleb128 -25
 28029 0fe6 26       		.uleb128 0x26
 28030 0fe7 6A00     		.ascii	"j\000"
 28031 0fe9 01       		.byte	0x1
 28032 0fea 7E01     		.2byte	0x17e
 28033 0fec 97000000 		.4byte	0x97
 28034 0ff0 02       		.uleb128 0x2
 28035 0ff1 91       		.byte	0x91
 28036 0ff2 66       		.sleb128 -26
 28037 0ff3 26       		.uleb128 0x26
 28038 0ff4 69647800 		.ascii	"idx\000"
 28039 0ff8 01       		.byte	0x1
 28040 0ff9 7F01     		.2byte	0x17f
 28041 0ffb 97000000 		.4byte	0x97
 28042 0fff 02       		.uleb128 0x2
 28043 1000 91       		.byte	0x91
 28044 1001 65       		.sleb128 -27
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 616


 28045 1002 23       		.uleb128 0x23
 28046 1003 F0110000 		.4byte	.LASF235
 28047 1007 01       		.byte	0x1
 28048 1008 8001     		.2byte	0x180
 28049 100a 97000000 		.4byte	0x97
 28050 100e 02       		.uleb128 0x2
 28051 100f 91       		.byte	0x91
 28052 1010 64       		.sleb128 -28
 28053 1011 26       		.uleb128 0x26
 28054 1012 736F6400 		.ascii	"sod\000"
 28055 1016 01       		.byte	0x1
 28056 1017 8101     		.2byte	0x181
 28057 1019 97000000 		.4byte	0x97
 28058 101d 02       		.uleb128 0x2
 28059 101e 91       		.byte	0x91
 28060 101f 63       		.sleb128 -29
 28061 1020 23       		.uleb128 0x23
 28062 1021 D00C0000 		.4byte	.LASF236
 28063 1025 01       		.byte	0x1
 28064 1026 8201     		.2byte	0x182
 28065 1028 97000000 		.4byte	0x97
 28066 102c 02       		.uleb128 0x2
 28067 102d 91       		.byte	0x91
 28068 102e 62       		.sleb128 -30
 28069 102f 23       		.uleb128 0x23
 28070 1030 C9150000 		.4byte	.LASF237
 28071 1034 01       		.byte	0x1
 28072 1035 8301     		.2byte	0x183
 28073 1037 EF100000 		.4byte	0x10ef
 28074 103b 03       		.uleb128 0x3
 28075 103c 91       		.byte	0x91
 28076 103d B467     		.sleb128 -3148
 28077 103f 23       		.uleb128 0x23
 28078 1040 BD130000 		.4byte	.LASF238
 28079 1044 01       		.byte	0x1
 28080 1045 8401     		.2byte	0x184
 28081 1047 EB000000 		.4byte	0xeb
 28082 104b 03       		.uleb128 0x3
 28083 104c 91       		.byte	0x91
 28084 104d B067     		.sleb128 -3152
 28085 104f 23       		.uleb128 0x23
 28086 1050 81120000 		.4byte	.LASF239
 28087 1054 01       		.byte	0x1
 28088 1055 8501     		.2byte	0x185
 28089 1057 C7000000 		.4byte	0xc7
 28090 105b 03       		.uleb128 0x3
 28091 105c 91       		.byte	0x91
 28092 105d AE67     		.sleb128 -3154
 28093 105f 23       		.uleb128 0x23
 28094 1060 480D0000 		.4byte	.LASF240
 28095 1064 01       		.byte	0x1
 28096 1065 8601     		.2byte	0x186
 28097 1067 A3000000 		.4byte	0xa3
 28098 106b 03       		.uleb128 0x3
 28099 106c 91       		.byte	0x91
 28100 106d AC67     		.sleb128 -3156
 28101 106f 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 617


 28102 1070 DE130000 		.4byte	.LASF241
 28103 1074 01       		.byte	0x1
 28104 1075 8701     		.2byte	0x187
 28105 1077 D3000000 		.4byte	0xd3
 28106 107b 03       		.uleb128 0x3
 28107 107c 91       		.byte	0x91
 28108 107d A867     		.sleb128 -3160
 28109 107f 23       		.uleb128 0x23
 28110 1080 D90E0000 		.4byte	.LASF242
 28111 1084 01       		.byte	0x1
 28112 1085 8801     		.2byte	0x188
 28113 1087 AF000000 		.4byte	0xaf
 28114 108b 03       		.uleb128 0x3
 28115 108c 91       		.byte	0x91
 28116 108d A467     		.sleb128 -3164
 28117 108f 23       		.uleb128 0x23
 28118 1090 720E0000 		.4byte	.LASF243
 28119 1094 01       		.byte	0x1
 28120 1095 8A01     		.2byte	0x18a
 28121 1097 97000000 		.4byte	0x97
 28122 109b 02       		.uleb128 0x2
 28123 109c 91       		.byte	0x91
 28124 109d 5F       		.sleb128 -33
 28125 109e 23       		.uleb128 0x23
 28126 109f 76010000 		.4byte	.LASF244
 28127 10a3 01       		.byte	0x1
 28128 10a4 8B01     		.2byte	0x18b
 28129 10a6 97000000 		.4byte	0x97
 28130 10aa 02       		.uleb128 0x2
 28131 10ab 91       		.byte	0x91
 28132 10ac 5E       		.sleb128 -34
 28133 10ad 23       		.uleb128 0x23
 28134 10ae B10B0000 		.4byte	.LASF245
 28135 10b2 01       		.byte	0x1
 28136 10b3 8D01     		.2byte	0x18d
 28137 10b5 D2100000 		.4byte	0x10d2
 28138 10b9 02       		.uleb128 0x2
 28139 10ba 91       		.byte	0x91
 28140 10bb 58       		.sleb128 -40
 28141 10bc 23       		.uleb128 0x23
 28142 10bd 0A020000 		.4byte	.LASF246
 28143 10c1 01       		.byte	0x1
 28144 10c2 8E01     		.2byte	0x18e
 28145 10c4 D2100000 		.4byte	0x10d2
 28146 10c8 02       		.uleb128 0x2
 28147 10c9 91       		.byte	0x91
 28148 10ca 54       		.sleb128 -44
 28149 10cb 00       		.byte	0
 28150 10cc 07       		.uleb128 0x7
 28151 10cd 04       		.byte	0x4
 28152 10ce D2100000 		.4byte	0x10d2
 28153 10d2 07       		.uleb128 0x7
 28154 10d3 04       		.byte	0x4
 28155 10d4 97000000 		.4byte	0x97
 28156 10d8 07       		.uleb128 0x7
 28157 10d9 04       		.byte	0x4
 28158 10da 25010000 		.4byte	0x125
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 618


 28159 10de 09       		.uleb128 0x9
 28160 10df 97000000 		.4byte	0x97
 28161 10e3 EF100000 		.4byte	0x10ef
 28162 10e7 24       		.uleb128 0x24
 28163 10e8 18010000 		.4byte	0x118
 28164 10ec E90B     		.2byte	0xbe9
 28165 10ee 00       		.byte	0
 28166 10ef 09       		.uleb128 0x9
 28167 10f0 F9000000 		.4byte	0xf9
 28168 10f4 FF100000 		.4byte	0x10ff
 28169 10f8 0A       		.uleb128 0xa
 28170 10f9 18010000 		.4byte	0x118
 28171 10fd 31       		.byte	0x31
 28172 10fe 00       		.byte	0
 28173 10ff 22       		.uleb128 0x22
 28174 1100 D30F0000 		.4byte	.LASF247
 28175 1104 01       		.byte	0x1
 28176 1105 7C03     		.2byte	0x37c
 28177 1107 00000000 		.4byte	.LFB68
 28178 110b 3C190000 		.4byte	.LFE68-.LFB68
 28179 110f 01       		.uleb128 0x1
 28180 1110 9C       		.byte	0x9c
 28181 1111 DD120000 		.4byte	0x12dd
 28182 1115 25       		.uleb128 0x25
 28183 1116 68070000 		.4byte	.LASF248
 28184 111a 01       		.byte	0x1
 28185 111b 7C03     		.2byte	0x37c
 28186 111d A3000000 		.4byte	0xa3
 28187 1121 03       		.uleb128 0x3
 28188 1122 91       		.byte	0x91
 28189 1123 EE74     		.sleb128 -1426
 28190 1125 26       		.uleb128 0x26
 28191 1126 6900     		.ascii	"i\000"
 28192 1128 01       		.byte	0x1
 28193 1129 7D03     		.2byte	0x37d
 28194 112b 97000000 		.4byte	0x97
 28195 112f 02       		.uleb128 0x2
 28196 1130 91       		.byte	0x91
 28197 1131 6F       		.sleb128 -17
 28198 1132 26       		.uleb128 0x26
 28199 1133 6A00     		.ascii	"j\000"
 28200 1135 01       		.byte	0x1
 28201 1136 7D03     		.2byte	0x37d
 28202 1138 97000000 		.4byte	0x97
 28203 113c 02       		.uleb128 0x2
 28204 113d 91       		.byte	0x91
 28205 113e 6E       		.sleb128 -18
 28206 113f 26       		.uleb128 0x26
 28207 1140 736F6400 		.ascii	"sod\000"
 28208 1144 01       		.byte	0x1
 28209 1145 7E03     		.2byte	0x37e
 28210 1147 97000000 		.4byte	0x97
 28211 114b 02       		.uleb128 0x2
 28212 114c 91       		.byte	0x91
 28213 114d 6D       		.sleb128 -19
 28214 114e 23       		.uleb128 0x23
 28215 114f 9B0B0000 		.4byte	.LASF249
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 619


 28216 1153 01       		.byte	0x1
 28217 1154 7F03     		.2byte	0x37f
 28218 1156 97000000 		.4byte	0x97
 28219 115a 02       		.uleb128 0x2
 28220 115b 91       		.byte	0x91
 28221 115c 62       		.sleb128 -30
 28222 115d 23       		.uleb128 0x23
 28223 115e 81120000 		.4byte	.LASF239
 28224 1162 01       		.byte	0x1
 28225 1163 8003     		.2byte	0x380
 28226 1165 C7000000 		.4byte	0xc7
 28227 1169 02       		.uleb128 0x2
 28228 116a 91       		.byte	0x91
 28229 116b 60       		.sleb128 -32
 28230 116c 23       		.uleb128 0x23
 28231 116d 480D0000 		.4byte	.LASF240
 28232 1171 01       		.byte	0x1
 28233 1172 8103     		.2byte	0x381
 28234 1174 A3000000 		.4byte	0xa3
 28235 1178 02       		.uleb128 0x2
 28236 1179 91       		.byte	0x91
 28237 117a 5E       		.sleb128 -34
 28238 117b 23       		.uleb128 0x23
 28239 117c DE130000 		.4byte	.LASF241
 28240 1180 01       		.byte	0x1
 28241 1181 8203     		.2byte	0x382
 28242 1183 D3000000 		.4byte	0xd3
 28243 1187 02       		.uleb128 0x2
 28244 1188 91       		.byte	0x91
 28245 1189 58       		.sleb128 -40
 28246 118a 23       		.uleb128 0x23
 28247 118b D90E0000 		.4byte	.LASF242
 28248 118f 01       		.byte	0x1
 28249 1190 8303     		.2byte	0x383
 28250 1192 AF000000 		.4byte	0xaf
 28251 1196 02       		.uleb128 0x2
 28252 1197 91       		.byte	0x91
 28253 1198 54       		.sleb128 -44
 28254 1199 23       		.uleb128 0x23
 28255 119a BD130000 		.4byte	.LASF238
 28256 119e 01       		.byte	0x1
 28257 119f 8403     		.2byte	0x384
 28258 11a1 EB000000 		.4byte	0xeb
 28259 11a5 02       		.uleb128 0x2
 28260 11a6 91       		.byte	0x91
 28261 11a7 50       		.sleb128 -48
 28262 11a8 23       		.uleb128 0x23
 28263 11a9 720E0000 		.4byte	.LASF243
 28264 11ad 01       		.byte	0x1
 28265 11ae 8603     		.2byte	0x386
 28266 11b0 97000000 		.4byte	0x97
 28267 11b4 02       		.uleb128 0x2
 28268 11b5 91       		.byte	0x91
 28269 11b6 65       		.sleb128 -27
 28270 11b7 23       		.uleb128 0x23
 28271 11b8 76010000 		.4byte	.LASF244
 28272 11bc 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 620


 28273 11bd 8703     		.2byte	0x387
 28274 11bf 97000000 		.4byte	0x97
 28275 11c3 02       		.uleb128 0x2
 28276 11c4 91       		.byte	0x91
 28277 11c5 64       		.sleb128 -28
 28278 11c6 23       		.uleb128 0x23
 28279 11c7 CE030000 		.4byte	.LASF250
 28280 11cb 01       		.byte	0x1
 28281 11cc 8A03     		.2byte	0x38a
 28282 11ce DD120000 		.4byte	0x12dd
 28283 11d2 02       		.uleb128 0x2
 28284 11d3 91       		.byte	0x91
 28285 11d4 68       		.sleb128 -24
 28286 11d5 23       		.uleb128 0x23
 28287 11d6 C60D0000 		.4byte	.LASF225
 28288 11da 01       		.byte	0x1
 28289 11db 9203     		.2byte	0x392
 28290 11dd E3120000 		.4byte	0x12e3
 28291 11e1 03       		.uleb128 0x3
 28292 11e2 91       		.byte	0x91
 28293 11e3 847D     		.sleb128 -380
 28294 11e5 23       		.uleb128 0x23
 28295 11e6 94140000 		.4byte	.LASF226
 28296 11ea 01       		.byte	0x1
 28297 11eb F003     		.2byte	0x3f0
 28298 11ed F3120000 		.4byte	0x12f3
 28299 11f1 03       		.uleb128 0x3
 28300 11f2 91       		.byte	0x91
 28301 11f3 B07C     		.sleb128 -464
 28302 11f5 23       		.uleb128 0x23
 28303 11f6 B8030000 		.4byte	.LASF227
 28304 11fa 01       		.byte	0x1
 28305 11fb 0C04     		.2byte	0x40c
 28306 11fd F3120000 		.4byte	0x12f3
 28307 1201 03       		.uleb128 0x3
 28308 1202 91       		.byte	0x91
 28309 1203 DC7B     		.sleb128 -548
 28310 1205 23       		.uleb128 0x23
 28311 1206 FF0C0000 		.4byte	.LASF228
 28312 120a 01       		.byte	0x1
 28313 120b 2804     		.2byte	0x428
 28314 120d F3120000 		.4byte	0x12f3
 28315 1211 03       		.uleb128 0x3
 28316 1212 91       		.byte	0x91
 28317 1213 887B     		.sleb128 -632
 28318 1215 23       		.uleb128 0x23
 28319 1216 5D080000 		.4byte	.LASF230
 28320 121a 01       		.byte	0x1
 28321 121b 4504     		.2byte	0x445
 28322 121d 03130000 		.4byte	0x1303
 28323 1221 03       		.uleb128 0x3
 28324 1222 91       		.byte	0x91
 28325 1223 BC78     		.sleb128 -964
 28326 1225 23       		.uleb128 0x23
 28327 1226 1C150000 		.4byte	.LASF251
 28328 122a 01       		.byte	0x1
 28329 122b 6204     		.2byte	0x462
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 621


 28330 122d 13130000 		.4byte	0x1313
 28331 1231 03       		.uleb128 0x3
 28332 1232 91       		.byte	0x91
 28333 1233 C477     		.sleb128 -1084
 28334 1235 23       		.uleb128 0x23
 28335 1236 20000000 		.4byte	.LASF252
 28336 123a 01       		.byte	0x1
 28337 123b 6504     		.2byte	0x465
 28338 123d 23130000 		.4byte	0x1323
 28339 1241 03       		.uleb128 0x3
 28340 1242 91       		.byte	0x91
 28341 1243 8C77     		.sleb128 -1140
 28342 1245 23       		.uleb128 0x23
 28343 1246 E0080000 		.4byte	.LASF232
 28344 124a 01       		.byte	0x1
 28345 124b 6D04     		.2byte	0x46d
 28346 124d 33130000 		.4byte	0x1333
 28347 1251 03       		.uleb128 0x3
 28348 1252 91       		.byte	0x91
 28349 1253 DC76     		.sleb128 -1188
 28350 1255 23       		.uleb128 0x23
 28351 1256 D5130000 		.4byte	.LASF229
 28352 125a 01       		.byte	0x1
 28353 125b 7C04     		.2byte	0x47c
 28354 125d 540C0000 		.4byte	0xc54
 28355 1261 03       		.uleb128 0x3
 28356 1262 91       		.byte	0x91
 28357 1263 BC76     		.sleb128 -1220
 28358 1265 23       		.uleb128 0x23
 28359 1266 CC0D0000 		.4byte	.LASF253
 28360 126a 01       		.byte	0x1
 28361 126b 7D04     		.2byte	0x47d
 28362 126d 43130000 		.4byte	0x1343
 28363 1271 03       		.uleb128 0x3
 28364 1272 91       		.byte	0x91
 28365 1273 B076     		.sleb128 -1232
 28366 1275 23       		.uleb128 0x23
 28367 1276 E90C0000 		.4byte	.LASF254
 28368 127a 01       		.byte	0x1
 28369 127b 7E04     		.2byte	0x47e
 28370 127d 53130000 		.4byte	0x1353
 28371 1281 03       		.uleb128 0x3
 28372 1282 91       		.byte	0x91
 28373 1283 9C76     		.sleb128 -1252
 28374 1285 23       		.uleb128 0x23
 28375 1286 EB0E0000 		.4byte	.LASF255
 28376 128a 01       		.byte	0x1
 28377 128b 7F04     		.2byte	0x47f
 28378 128d 97000000 		.4byte	0x97
 28379 1291 02       		.uleb128 0x2
 28380 1292 91       		.byte	0x91
 28381 1293 63       		.sleb128 -29
 28382 1294 23       		.uleb128 0x23
 28383 1295 610B0000 		.4byte	.LASF231
 28384 1299 01       		.byte	0x1
 28385 129a 8804     		.2byte	0x488
 28386 129c F3120000 		.4byte	0x12f3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 622


 28387 12a0 03       		.uleb128 0x3
 28388 12a1 91       		.byte	0x91
 28389 12a2 C875     		.sleb128 -1336
 28390 12a4 23       		.uleb128 0x23
 28391 12a5 43150000 		.4byte	.LASF256
 28392 12a9 01       		.byte	0x1
 28393 12aa 9304     		.2byte	0x493
 28394 12ac F3120000 		.4byte	0x12f3
 28395 12b0 03       		.uleb128 0x3
 28396 12b1 91       		.byte	0x91
 28397 12b2 F474     		.sleb128 -1420
 28398 12b4 1E       		.uleb128 0x1e
 28399 12b5 A6180000 		.4byte	.LBB22
 28400 12b9 86000000 		.4byte	.LBE22-.LBB22
 28401 12bd 26       		.uleb128 0x26
 28402 12be 69647800 		.ascii	"idx\000"
 28403 12c2 01       		.byte	0x1
 28404 12c3 FC04     		.2byte	0x4fc
 28405 12c5 97000000 		.4byte	0x97
 28406 12c9 02       		.uleb128 0x2
 28407 12ca 91       		.byte	0x91
 28408 12cb 67       		.sleb128 -25
 28409 12cc 23       		.uleb128 0x23
 28410 12cd CC050000 		.4byte	.LASF257
 28411 12d1 01       		.byte	0x1
 28412 12d2 FC04     		.2byte	0x4fc
 28413 12d4 97000000 		.4byte	0x97
 28414 12d8 02       		.uleb128 0x2
 28415 12d9 91       		.byte	0x91
 28416 12da 66       		.sleb128 -26
 28417 12db 00       		.byte	0
 28418 12dc 00       		.byte	0
 28419 12dd 07       		.uleb128 0x7
 28420 12de 04       		.byte	0x4
 28421 12df 5F0B0000 		.4byte	0xb5f
 28422 12e3 09       		.uleb128 0x9
 28423 12e4 D2100000 		.4byte	0x10d2
 28424 12e8 F3120000 		.4byte	0x12f3
 28425 12ec 0A       		.uleb128 0xa
 28426 12ed 18010000 		.4byte	0x118
 28427 12f1 52       		.byte	0x52
 28428 12f2 00       		.byte	0
 28429 12f3 09       		.uleb128 0x9
 28430 12f4 97000000 		.4byte	0x97
 28431 12f8 03130000 		.4byte	0x1303
 28432 12fc 0A       		.uleb128 0xa
 28433 12fd 18010000 		.4byte	0x118
 28434 1301 52       		.byte	0x52
 28435 1302 00       		.byte	0
 28436 1303 09       		.uleb128 0x9
 28437 1304 25010000 		.4byte	0x125
 28438 1308 13130000 		.4byte	0x1313
 28439 130c 0A       		.uleb128 0xa
 28440 130d 18010000 		.4byte	0x118
 28441 1311 52       		.byte	0x52
 28442 1312 00       		.byte	0
 28443 1313 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 623


 28444 1314 F9000000 		.4byte	0xf9
 28445 1318 23130000 		.4byte	0x1323
 28446 131c 0A       		.uleb128 0xa
 28447 131d 18010000 		.4byte	0x118
 28448 1321 75       		.byte	0x75
 28449 1322 00       		.byte	0
 28450 1323 09       		.uleb128 0x9
 28451 1324 F9000000 		.4byte	0xf9
 28452 1328 33130000 		.4byte	0x1333
 28453 132c 0A       		.uleb128 0xa
 28454 132d 18010000 		.4byte	0x118
 28455 1331 37       		.byte	0x37
 28456 1332 00       		.byte	0
 28457 1333 09       		.uleb128 0x9
 28458 1334 25010000 		.4byte	0x125
 28459 1338 43130000 		.4byte	0x1343
 28460 133c 0A       		.uleb128 0xa
 28461 133d 18010000 		.4byte	0x118
 28462 1341 0B       		.byte	0xb
 28463 1342 00       		.byte	0
 28464 1343 09       		.uleb128 0x9
 28465 1344 97000000 		.4byte	0x97
 28466 1348 53130000 		.4byte	0x1353
 28467 134c 0A       		.uleb128 0xa
 28468 134d 18010000 		.4byte	0x118
 28469 1351 08       		.byte	0x8
 28470 1352 00       		.byte	0
 28471 1353 09       		.uleb128 0x9
 28472 1354 97000000 		.4byte	0x97
 28473 1358 63130000 		.4byte	0x1363
 28474 135c 0A       		.uleb128 0xa
 28475 135d 18010000 		.4byte	0x118
 28476 1361 11       		.byte	0x11
 28477 1362 00       		.byte	0
 28478 1363 22       		.uleb128 0x22
 28479 1364 53040000 		.4byte	.LASF258
 28480 1368 01       		.byte	0x1
 28481 1369 0D05     		.2byte	0x50d
 28482 136b 00000000 		.4byte	.LFB69
 28483 136f DC140000 		.4byte	.LFE69-.LFB69
 28484 1373 01       		.uleb128 0x1
 28485 1374 9C       		.byte	0x9c
 28486 1375 05140000 		.4byte	0x1405
 28487 1379 25       		.uleb128 0x25
 28488 137a 68070000 		.4byte	.LASF248
 28489 137e 01       		.byte	0x1
 28490 137f 0D05     		.2byte	0x50d
 28491 1381 A3000000 		.4byte	0xa3
 28492 1385 02       		.uleb128 0x2
 28493 1386 91       		.byte	0x91
 28494 1387 56       		.sleb128 -42
 28495 1388 26       		.uleb128 0x26
 28496 1389 6900     		.ascii	"i\000"
 28497 138b 01       		.byte	0x1
 28498 138c 0F05     		.2byte	0x50f
 28499 138e 97000000 		.4byte	0x97
 28500 1392 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 624


 28501 1393 91       		.byte	0x91
 28502 1394 67       		.sleb128 -25
 28503 1395 26       		.uleb128 0x26
 28504 1396 6A00     		.ascii	"j\000"
 28505 1398 01       		.byte	0x1
 28506 1399 0F05     		.2byte	0x50f
 28507 139b 97000000 		.4byte	0x97
 28508 139f 02       		.uleb128 0x2
 28509 13a0 91       		.byte	0x91
 28510 13a1 66       		.sleb128 -26
 28511 13a2 23       		.uleb128 0x23
 28512 13a3 1A0D0000 		.4byte	.LASF259
 28513 13a7 01       		.byte	0x1
 28514 13a8 1005     		.2byte	0x510
 28515 13aa 97000000 		.4byte	0x97
 28516 13ae 02       		.uleb128 0x2
 28517 13af 91       		.byte	0x91
 28518 13b0 62       		.sleb128 -30
 28519 13b1 23       		.uleb128 0x23
 28520 13b2 BD130000 		.4byte	.LASF238
 28521 13b6 01       		.byte	0x1
 28522 13b7 1105     		.2byte	0x511
 28523 13b9 EB000000 		.4byte	0xeb
 28524 13bd 02       		.uleb128 0x2
 28525 13be 91       		.byte	0x91
 28526 13bf 5C       		.sleb128 -36
 28527 13c0 23       		.uleb128 0x23
 28528 13c1 2C040000 		.4byte	.LASF260
 28529 13c5 01       		.byte	0x1
 28530 13c6 1105     		.2byte	0x511
 28531 13c8 EB000000 		.4byte	0xeb
 28532 13cc 02       		.uleb128 0x2
 28533 13cd 91       		.byte	0x91
 28534 13ce 58       		.sleb128 -40
 28535 13cf 23       		.uleb128 0x23
 28536 13d0 720E0000 		.4byte	.LASF243
 28537 13d4 01       		.byte	0x1
 28538 13d5 1305     		.2byte	0x513
 28539 13d7 97000000 		.4byte	0x97
 28540 13db 02       		.uleb128 0x2
 28541 13dc 91       		.byte	0x91
 28542 13dd 64       		.sleb128 -28
 28543 13de 23       		.uleb128 0x23
 28544 13df 76010000 		.4byte	.LASF244
 28545 13e3 01       		.byte	0x1
 28546 13e4 1405     		.2byte	0x514
 28547 13e6 97000000 		.4byte	0x97
 28548 13ea 02       		.uleb128 0x2
 28549 13eb 91       		.byte	0x91
 28550 13ec 63       		.sleb128 -29
 28551 13ed 1E       		.uleb128 0x1e
 28552 13ee 080B0000 		.4byte	.LBB23
 28553 13f2 26000000 		.4byte	.LBE23-.LBB23
 28554 13f6 26       		.uleb128 0x26
 28555 13f7 6900     		.ascii	"i\000"
 28556 13f9 01       		.byte	0x1
 28557 13fa BB05     		.2byte	0x5bb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 625


 28558 13fc 97000000 		.4byte	0x97
 28559 1400 02       		.uleb128 0x2
 28560 1401 91       		.byte	0x91
 28561 1402 65       		.sleb128 -27
 28562 1403 00       		.byte	0
 28563 1404 00       		.byte	0
 28564 1405 22       		.uleb128 0x22
 28565 1406 6B090000 		.4byte	.LASF261
 28566 140a 01       		.byte	0x1
 28567 140b 6706     		.2byte	0x667
 28568 140d 00000000 		.4byte	.LFB70
 28569 1411 F40D0000 		.4byte	.LFE70-.LFB70
 28570 1415 01       		.uleb128 0x1
 28571 1416 9C       		.byte	0x9c
 28572 1417 94150000 		.4byte	0x1594
 28573 141b 25       		.uleb128 0x25
 28574 141c 68070000 		.4byte	.LASF248
 28575 1420 01       		.byte	0x1
 28576 1421 6706     		.2byte	0x667
 28577 1423 A3000000 		.4byte	0xa3
 28578 1427 03       		.uleb128 0x3
 28579 1428 91       		.byte	0x91
 28580 1429 CE72     		.sleb128 -1714
 28581 142b 23       		.uleb128 0x23
 28582 142c 70060000 		.4byte	.LASF233
 28583 1430 01       		.byte	0x1
 28584 1431 6A06     		.2byte	0x66a
 28585 1433 94150000 		.4byte	0x1594
 28586 1437 03       		.uleb128 0x3
 28587 1438 91       		.byte	0x91
 28588 1439 DC74     		.sleb128 -1444
 28589 143b 23       		.uleb128 0x23
 28590 143c 6E120000 		.4byte	.LASF262
 28591 1440 01       		.byte	0x1
 28592 1441 7106     		.2byte	0x671
 28593 1443 A3000000 		.4byte	0xa3
 28594 1447 02       		.uleb128 0x2
 28595 1448 91       		.byte	0x91
 28596 1449 62       		.sleb128 -30
 28597 144a 23       		.uleb128 0x23
 28598 144b E0050000 		.4byte	.LASF263
 28599 144f 01       		.byte	0x1
 28600 1450 7206     		.2byte	0x672
 28601 1452 A3000000 		.4byte	0xa3
 28602 1456 02       		.uleb128 0x2
 28603 1457 91       		.byte	0x91
 28604 1458 6E       		.sleb128 -18
 28605 1459 23       		.uleb128 0x23
 28606 145a 8C090000 		.4byte	.LASF264
 28607 145e 01       		.byte	0x1
 28608 145f 7306     		.2byte	0x673
 28609 1461 A3000000 		.4byte	0xa3
 28610 1465 02       		.uleb128 0x2
 28611 1466 91       		.byte	0x91
 28612 1467 60       		.sleb128 -32
 28613 1468 23       		.uleb128 0x23
 28614 1469 0B090000 		.4byte	.LASF265
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 626


 28615 146d 01       		.byte	0x1
 28616 146e 7406     		.2byte	0x674
 28617 1470 A3000000 		.4byte	0xa3
 28618 1474 02       		.uleb128 0x2
 28619 1475 91       		.byte	0x91
 28620 1476 5E       		.sleb128 -34
 28621 1477 26       		.uleb128 0x26
 28622 1478 6900     		.ascii	"i\000"
 28623 147a 01       		.byte	0x1
 28624 147b 7C06     		.2byte	0x67c
 28625 147d A3000000 		.4byte	0xa3
 28626 1481 02       		.uleb128 0x2
 28627 1482 91       		.byte	0x91
 28628 1483 6C       		.sleb128 -20
 28629 1484 26       		.uleb128 0x26
 28630 1485 6A00     		.ascii	"j\000"
 28631 1487 01       		.byte	0x1
 28632 1488 7C06     		.2byte	0x67c
 28633 148a A3000000 		.4byte	0xa3
 28634 148e 02       		.uleb128 0x2
 28635 148f 91       		.byte	0x91
 28636 1490 6A       		.sleb128 -22
 28637 1491 26       		.uleb128 0x26
 28638 1492 6B00     		.ascii	"k\000"
 28639 1494 01       		.byte	0x1
 28640 1495 7C06     		.2byte	0x67c
 28641 1497 A3000000 		.4byte	0xa3
 28642 149b 02       		.uleb128 0x2
 28643 149c 91       		.byte	0x91
 28644 149d 68       		.sleb128 -24
 28645 149e 26       		.uleb128 0x26
 28646 149f 6800     		.ascii	"h\000"
 28647 14a1 01       		.byte	0x1
 28648 14a2 7C06     		.2byte	0x67c
 28649 14a4 A3000000 		.4byte	0xa3
 28650 14a8 02       		.uleb128 0x2
 28651 14a9 91       		.byte	0x91
 28652 14aa 66       		.sleb128 -26
 28653 14ab 23       		.uleb128 0x23
 28654 14ac D5050000 		.4byte	.LASF266
 28655 14b0 01       		.byte	0x1
 28656 14b1 7D06     		.2byte	0x67d
 28657 14b3 A3000000 		.4byte	0xa3
 28658 14b7 02       		.uleb128 0x2
 28659 14b8 91       		.byte	0x91
 28660 14b9 5C       		.sleb128 -36
 28661 14ba 23       		.uleb128 0x23
 28662 14bb 870E0000 		.4byte	.LASF267
 28663 14bf 01       		.byte	0x1
 28664 14c0 8006     		.2byte	0x680
 28665 14c2 30010000 		.4byte	0x130
 28666 14c6 03       		.uleb128 0x3
 28667 14c7 91       		.byte	0x91
 28668 14c8 C074     		.sleb128 -1472
 28669 14ca 23       		.uleb128 0x23
 28670 14cb 35120000 		.4byte	.LASF268
 28671 14cf 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 627


 28672 14d0 8106     		.2byte	0x681
 28673 14d2 A5150000 		.4byte	0x15a5
 28674 14d6 03       		.uleb128 0x3
 28675 14d7 91       		.byte	0x91
 28676 14d8 B474     		.sleb128 -1484
 28677 14da 23       		.uleb128 0x23
 28678 14db F6070000 		.4byte	.LASF269
 28679 14df 01       		.byte	0x1
 28680 14e0 8206     		.2byte	0x682
 28681 14e2 B5150000 		.4byte	0x15b5
 28682 14e6 03       		.uleb128 0x3
 28683 14e7 91       		.byte	0x91
 28684 14e8 A074     		.sleb128 -1504
 28685 14ea 23       		.uleb128 0x23
 28686 14eb 19000000 		.4byte	.LASF270
 28687 14ef 01       		.byte	0x1
 28688 14f0 8306     		.2byte	0x683
 28689 14f2 C5150000 		.4byte	0x15c5
 28690 14f6 03       		.uleb128 0x3
 28691 14f7 91       		.byte	0x91
 28692 14f8 9074     		.sleb128 -1520
 28693 14fa 23       		.uleb128 0x23
 28694 14fb 640F0000 		.4byte	.LASF271
 28695 14ff 01       		.byte	0x1
 28696 1500 8406     		.2byte	0x684
 28697 1502 D5150000 		.4byte	0x15d5
 28698 1506 03       		.uleb128 0x3
 28699 1507 91       		.byte	0x91
 28700 1508 E473     		.sleb128 -1564
 28701 150a 23       		.uleb128 0x23
 28702 150b 7C020000 		.4byte	.LASF272
 28703 150f 01       		.byte	0x1
 28704 1510 8506     		.2byte	0x685
 28705 1512 30010000 		.4byte	0x130
 28706 1516 03       		.uleb128 0x3
 28707 1517 91       		.byte	0x91
 28708 1518 C873     		.sleb128 -1592
 28709 151a 23       		.uleb128 0x23
 28710 151b E7010000 		.4byte	.LASF273
 28711 151f 01       		.byte	0x1
 28712 1520 8806     		.2byte	0x688
 28713 1522 97000000 		.4byte	0x97
 28714 1526 02       		.uleb128 0x2
 28715 1527 91       		.byte	0x91
 28716 1528 5B       		.sleb128 -37
 28717 1529 23       		.uleb128 0x23
 28718 152a 66050000 		.4byte	.LASF274
 28719 152e 01       		.byte	0x1
 28720 152f 8906     		.2byte	0x689
 28721 1531 97000000 		.4byte	0x97
 28722 1535 02       		.uleb128 0x2
 28723 1536 91       		.byte	0x91
 28724 1537 5A       		.sleb128 -38
 28725 1538 23       		.uleb128 0x23
 28726 1539 DD110000 		.4byte	.LASF275
 28727 153d 01       		.byte	0x1
 28728 153e 8A06     		.2byte	0x68a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 628


 28729 1540 97000000 		.4byte	0x97
 28730 1544 02       		.uleb128 0x2
 28731 1545 91       		.byte	0x91
 28732 1546 59       		.sleb128 -39
 28733 1547 23       		.uleb128 0x23
 28734 1548 5C120000 		.4byte	.LASF276
 28735 154c 01       		.byte	0x1
 28736 154d 8B06     		.2byte	0x68b
 28737 154f 97000000 		.4byte	0x97
 28738 1553 02       		.uleb128 0x2
 28739 1554 91       		.byte	0x91
 28740 1555 58       		.sleb128 -40
 28741 1556 23       		.uleb128 0x23
 28742 1557 74050000 		.4byte	.LASF277
 28743 155b 01       		.byte	0x1
 28744 155c 8C06     		.2byte	0x68c
 28745 155e 97000000 		.4byte	0x97
 28746 1562 02       		.uleb128 0x2
 28747 1563 91       		.byte	0x91
 28748 1564 57       		.sleb128 -41
 28749 1565 23       		.uleb128 0x23
 28750 1566 35010000 		.4byte	.LASF278
 28751 156a 01       		.byte	0x1
 28752 156b 8D06     		.2byte	0x68d
 28753 156d 97000000 		.4byte	0x97
 28754 1571 02       		.uleb128 0x2
 28755 1572 91       		.byte	0x91
 28756 1573 65       		.sleb128 -27
 28757 1574 23       		.uleb128 0x23
 28758 1575 1C150000 		.4byte	.LASF251
 28759 1579 01       		.byte	0x1
 28760 157a 8F06     		.2byte	0x68f
 28761 157c 13130000 		.4byte	0x1313
 28762 1580 03       		.uleb128 0x3
 28763 1581 91       		.byte	0x91
 28764 1582 D072     		.sleb128 -1712
 28765 1584 23       		.uleb128 0x23
 28766 1585 40040000 		.4byte	.LASF279
 28767 1589 01       		.byte	0x1
 28768 158a 9006     		.2byte	0x690
 28769 158c 97000000 		.4byte	0x97
 28770 1590 02       		.uleb128 0x2
 28771 1591 91       		.byte	0x91
 28772 1592 56       		.sleb128 -42
 28773 1593 00       		.byte	0
 28774 1594 09       		.uleb128 0x9
 28775 1595 97000000 		.4byte	0x97
 28776 1599 A5150000 		.4byte	0x15a5
 28777 159d 24       		.uleb128 0x24
 28778 159e 18010000 		.4byte	0x118
 28779 15a2 7805     		.2byte	0x578
 28780 15a4 00       		.byte	0
 28781 15a5 09       		.uleb128 0x9
 28782 15a6 F9000000 		.4byte	0xf9
 28783 15aa B5150000 		.4byte	0x15b5
 28784 15ae 0A       		.uleb128 0xa
 28785 15af 18010000 		.4byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 629


 28786 15b3 0A       		.byte	0xa
 28787 15b4 00       		.byte	0
 28788 15b5 09       		.uleb128 0x9
 28789 15b6 F9000000 		.4byte	0xf9
 28790 15ba C5150000 		.4byte	0x15c5
 28791 15be 0A       		.uleb128 0xa
 28792 15bf 18010000 		.4byte	0x118
 28793 15c3 13       		.byte	0x13
 28794 15c4 00       		.byte	0
 28795 15c5 09       		.uleb128 0x9
 28796 15c6 F9000000 		.4byte	0xf9
 28797 15ca D5150000 		.4byte	0x15d5
 28798 15ce 0A       		.uleb128 0xa
 28799 15cf 18010000 		.4byte	0x118
 28800 15d3 0F       		.byte	0xf
 28801 15d4 00       		.byte	0
 28802 15d5 09       		.uleb128 0x9
 28803 15d6 F9000000 		.4byte	0xf9
 28804 15da E5150000 		.4byte	0x15e5
 28805 15de 0A       		.uleb128 0xa
 28806 15df 18010000 		.4byte	0x118
 28807 15e3 29       		.byte	0x29
 28808 15e4 00       		.byte	0
 28809 15e5 27       		.uleb128 0x27
 28810 15e6 96030000 		.4byte	.LASF318
 28811 15ea 01       		.byte	0x1
 28812 15eb 5607     		.2byte	0x756
 28813 15ed 00000000 		.4byte	.LFB71
 28814 15f1 90000000 		.4byte	.LFE71-.LFB71
 28815 15f5 01       		.uleb128 0x1
 28816 15f6 9C       		.byte	0x9c
 28817 15f7 16160000 		.4byte	0x1616
 28818 15fb 26       		.uleb128 0x26
 28819 15fc 6900     		.ascii	"i\000"
 28820 15fe 01       		.byte	0x1
 28821 15ff 5807     		.2byte	0x758
 28822 1601 97000000 		.4byte	0x97
 28823 1605 02       		.uleb128 0x2
 28824 1606 91       		.byte	0x91
 28825 1607 6F       		.sleb128 -17
 28826 1608 26       		.uleb128 0x26
 28827 1609 6A00     		.ascii	"j\000"
 28828 160b 01       		.byte	0x1
 28829 160c 5807     		.2byte	0x758
 28830 160e 97000000 		.4byte	0x97
 28831 1612 02       		.uleb128 0x2
 28832 1613 91       		.byte	0x91
 28833 1614 6E       		.sleb128 -18
 28834 1615 00       		.byte	0
 28835 1616 22       		.uleb128 0x22
 28836 1617 55010000 		.4byte	.LASF280
 28837 161b 01       		.byte	0x1
 28838 161c 6907     		.2byte	0x769
 28839 161e 00000000 		.4byte	.LFB72
 28840 1622 E81B0000 		.4byte	.LFE72-.LFB72
 28841 1626 01       		.uleb128 0x1
 28842 1627 9C       		.byte	0x9c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 630


 28843 1628 C1160000 		.4byte	0x16c1
 28844 162c 25       		.uleb128 0x25
 28845 162d 910E0000 		.4byte	.LASF281
 28846 1631 01       		.byte	0x1
 28847 1632 6907     		.2byte	0x769
 28848 1634 1F010000 		.4byte	0x11f
 28849 1638 03       		.uleb128 0x3
 28850 1639 91       		.byte	0x91
 28851 163a D47E     		.sleb128 -172
 28852 163c 26       		.uleb128 0x26
 28853 163d 6900     		.ascii	"i\000"
 28854 163f 01       		.byte	0x1
 28855 1640 6B07     		.2byte	0x76b
 28856 1642 73000000 		.4byte	0x73
 28857 1646 02       		.uleb128 0x2
 28858 1647 91       		.byte	0x91
 28859 1648 54       		.sleb128 -44
 28860 1649 23       		.uleb128 0x23
 28861 164a CE030000 		.4byte	.LASF250
 28862 164e 01       		.byte	0x1
 28863 164f 6D07     		.2byte	0x76d
 28864 1651 DD120000 		.4byte	0x12dd
 28865 1655 02       		.uleb128 0x2
 28866 1656 91       		.byte	0x91
 28867 1657 4C       		.sleb128 -52
 28868 1658 1E       		.uleb128 0x1e
 28869 1659 1C000000 		.4byte	.LBB24
 28870 165d 841B0000 		.4byte	.LBE24-.LBB24
 28871 1661 26       		.uleb128 0x26
 28872 1662 73747200 		.ascii	"str\000"
 28873 1666 01       		.byte	0x1
 28874 1667 7007     		.2byte	0x770
 28875 1669 C1160000 		.4byte	0x16c1
 28876 166d 03       		.uleb128 0x3
 28877 166e 91       		.byte	0x91
 28878 166f DC7E     		.sleb128 -164
 28879 1671 1E       		.uleb128 0x1e
 28880 1672 1C030000 		.4byte	.LBB25
 28881 1676 FC100000 		.4byte	.LBE25-.LBB25
 28882 167a 26       		.uleb128 0x26
 28883 167b 6B00     		.ascii	"k\000"
 28884 167d 01       		.byte	0x1
 28885 167e A407     		.2byte	0x7a4
 28886 1680 97000000 		.4byte	0x97
 28887 1684 02       		.uleb128 0x2
 28888 1685 91       		.byte	0x91
 28889 1686 53       		.sleb128 -45
 28890 1687 1E       		.uleb128 0x1e
 28891 1688 6C030000 		.4byte	.LBB26
 28892 168c 90100000 		.4byte	.LBE26-.LBB26
 28893 1690 23       		.uleb128 0x23
 28894 1691 720E0000 		.4byte	.LASF243
 28895 1695 01       		.byte	0x1
 28896 1696 A607     		.2byte	0x7a6
 28897 1698 97000000 		.4byte	0x97
 28898 169c 02       		.uleb128 0x2
 28899 169d 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 631


 28900 169e 4B       		.sleb128 -53
 28901 169f 26       		.uleb128 0x26
 28902 16a0 4D4F5400 		.ascii	"MOT\000"
 28903 16a4 01       		.byte	0x1
 28904 16a5 A707     		.2byte	0x7a7
 28905 16a7 D1160000 		.4byte	0x16d1
 28906 16ab 02       		.uleb128 0x2
 28907 16ac 91       		.byte	0x91
 28908 16ad 44       		.sleb128 -60
 28909 16ae 23       		.uleb128 0x23
 28910 16af 84140000 		.4byte	.LASF282
 28911 16b3 01       		.byte	0x1
 28912 16b4 A807     		.2byte	0x7a8
 28913 16b6 97000000 		.4byte	0x97
 28914 16ba 02       		.uleb128 0x2
 28915 16bb 91       		.byte	0x91
 28916 16bc 43       		.sleb128 -61
 28917 16bd 00       		.byte	0
 28918 16be 00       		.byte	0
 28919 16bf 00       		.byte	0
 28920 16c0 00       		.byte	0
 28921 16c1 09       		.uleb128 0x9
 28922 16c2 F9000000 		.4byte	0xf9
 28923 16c6 D1160000 		.4byte	0x16d1
 28924 16ca 0A       		.uleb128 0xa
 28925 16cb 18010000 		.4byte	0x118
 28926 16cf 63       		.byte	0x63
 28927 16d0 00       		.byte	0
 28928 16d1 07       		.uleb128 0x7
 28929 16d2 04       		.byte	0x4
 28930 16d3 20060000 		.4byte	0x620
 28931 16d7 22       		.uleb128 0x22
 28932 16d8 970F0000 		.4byte	.LASF283
 28933 16dc 01       		.byte	0x1
 28934 16dd 5609     		.2byte	0x956
 28935 16df 00000000 		.4byte	.LFB73
 28936 16e3 90040000 		.4byte	.LFE73-.LFB73
 28937 16e7 01       		.uleb128 0x1
 28938 16e8 9C       		.byte	0x9c
 28939 16e9 67170000 		.4byte	0x1767
 28940 16ed 25       		.uleb128 0x25
 28941 16ee 910E0000 		.4byte	.LASF281
 28942 16f2 01       		.byte	0x1
 28943 16f3 5609     		.2byte	0x956
 28944 16f5 1F010000 		.4byte	0x11f
 28945 16f9 03       		.uleb128 0x3
 28946 16fa 91       		.byte	0x91
 28947 16fb BC7C     		.sleb128 -452
 28948 16fd 26       		.uleb128 0x26
 28949 16fe 73747200 		.ascii	"str\000"
 28950 1702 01       		.byte	0x1
 28951 1703 5809     		.2byte	0x958
 28952 1705 C1160000 		.4byte	0x16c1
 28953 1709 03       		.uleb128 0x3
 28954 170a 91       		.byte	0x91
 28955 170b F07E     		.sleb128 -144
 28956 170d 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 632


 28957 170e 6900     		.ascii	"i\000"
 28958 1710 01       		.byte	0x1
 28959 1711 5909     		.2byte	0x959
 28960 1713 73000000 		.4byte	0x73
 28961 1717 02       		.uleb128 0x2
 28962 1718 91       		.byte	0x91
 28963 1719 64       		.sleb128 -28
 28964 171a 23       		.uleb128 0x23
 28965 171b 03050000 		.4byte	.LASF284
 28966 171f 01       		.byte	0x1
 28967 1720 5A09     		.2byte	0x95a
 28968 1722 73000000 		.4byte	0x73
 28969 1726 02       		.uleb128 0x2
 28970 1727 91       		.byte	0x91
 28971 1728 54       		.sleb128 -44
 28972 1729 23       		.uleb128 0x23
 28973 172a CE030000 		.4byte	.LASF250
 28974 172e 01       		.byte	0x1
 28975 172f 5C09     		.2byte	0x95c
 28976 1731 DD120000 		.4byte	0x12dd
 28977 1735 02       		.uleb128 0x2
 28978 1736 91       		.byte	0x91
 28979 1737 60       		.sleb128 -32
 28980 1738 26       		.uleb128 0x26
 28981 1739 4D4F5400 		.ascii	"MOT\000"
 28982 173d 01       		.byte	0x1
 28983 173e 5D09     		.2byte	0x95d
 28984 1740 D1160000 		.4byte	0x16d1
 28985 1744 02       		.uleb128 0x2
 28986 1745 91       		.byte	0x91
 28987 1746 5C       		.sleb128 -36
 28988 1747 23       		.uleb128 0x23
 28989 1748 84140000 		.4byte	.LASF282
 28990 174c 01       		.byte	0x1
 28991 174d 5E09     		.2byte	0x95e
 28992 174f 97000000 		.4byte	0x97
 28993 1753 02       		.uleb128 0x2
 28994 1754 91       		.byte	0x91
 28995 1755 5B       		.sleb128 -37
 28996 1756 23       		.uleb128 0x23
 28997 1757 55060000 		.4byte	.LASF285
 28998 175b 01       		.byte	0x1
 28999 175c 9609     		.2byte	0x996
 29000 175e 67170000 		.4byte	0x1767
 29001 1762 03       		.uleb128 0x3
 29002 1763 91       		.byte	0x91
 29003 1764 C47C     		.sleb128 -444
 29004 1766 00       		.byte	0
 29005 1767 09       		.uleb128 0x9
 29006 1768 F9000000 		.4byte	0xf9
 29007 176c 78170000 		.4byte	0x1778
 29008 1770 24       		.uleb128 0x24
 29009 1771 18010000 		.4byte	0x118
 29010 1775 2B01     		.2byte	0x12b
 29011 1777 00       		.byte	0
 29012 1778 22       		.uleb128 0x22
 29013 1779 240D0000 		.4byte	.LASF286
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 633


 29014 177d 01       		.byte	0x1
 29015 177e A009     		.2byte	0x9a0
 29016 1780 00000000 		.4byte	.LFB74
 29017 1784 5C020000 		.4byte	.LFE74-.LFB74
 29018 1788 01       		.uleb128 0x1
 29019 1789 9C       		.byte	0x9c
 29020 178a BE170000 		.4byte	0x17be
 29021 178e 25       		.uleb128 0x25
 29022 178f 910E0000 		.4byte	.LASF281
 29023 1793 01       		.byte	0x1
 29024 1794 A009     		.2byte	0x9a0
 29025 1796 1F010000 		.4byte	0x11f
 29026 179a 03       		.uleb128 0x3
 29027 179b 91       		.byte	0x91
 29028 179c CC7E     		.sleb128 -180
 29029 179e 26       		.uleb128 0x26
 29030 179f 73747200 		.ascii	"str\000"
 29031 17a3 01       		.byte	0x1
 29032 17a4 A209     		.2byte	0x9a2
 29033 17a6 BE170000 		.4byte	0x17be
 29034 17aa 03       		.uleb128 0x3
 29035 17ab 91       		.byte	0x91
 29036 17ac D47E     		.sleb128 -172
 29037 17ae 23       		.uleb128 0x23
 29038 17af CE030000 		.4byte	.LASF250
 29039 17b3 01       		.byte	0x1
 29040 17b4 A409     		.2byte	0x9a4
 29041 17b6 DD120000 		.4byte	0x12dd
 29042 17ba 02       		.uleb128 0x2
 29043 17bb 91       		.byte	0x91
 29044 17bc 6C       		.sleb128 -20
 29045 17bd 00       		.byte	0
 29046 17be 09       		.uleb128 0x9
 29047 17bf F9000000 		.4byte	0xf9
 29048 17c3 CE170000 		.4byte	0x17ce
 29049 17c7 0A       		.uleb128 0xa
 29050 17c8 18010000 		.4byte	0x118
 29051 17cc 95       		.byte	0x95
 29052 17cd 00       		.byte	0
 29053 17ce 22       		.uleb128 0x22
 29054 17cf FF0F0000 		.4byte	.LASF287
 29055 17d3 01       		.byte	0x1
 29056 17d4 CD09     		.2byte	0x9cd
 29057 17d6 00000000 		.4byte	.LFB75
 29058 17da 80120000 		.4byte	.LFE75-.LFB75
 29059 17de 01       		.uleb128 0x1
 29060 17df 9C       		.byte	0x9c
 29061 17e0 6F180000 		.4byte	0x186f
 29062 17e4 25       		.uleb128 0x25
 29063 17e5 910E0000 		.4byte	.LASF281
 29064 17e9 01       		.byte	0x1
 29065 17ea CD09     		.2byte	0x9cd
 29066 17ec 1F010000 		.4byte	0x11f
 29067 17f0 03       		.uleb128 0x3
 29068 17f1 91       		.byte	0x91
 29069 17f2 D47E     		.sleb128 -172
 29070 17f4 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 634


 29071 17f5 73747200 		.ascii	"str\000"
 29072 17f9 01       		.byte	0x1
 29073 17fa CF09     		.2byte	0x9cf
 29074 17fc C1160000 		.4byte	0x16c1
 29075 1800 03       		.uleb128 0x3
 29076 1801 91       		.byte	0x91
 29077 1802 DC7E     		.sleb128 -164
 29078 1804 26       		.uleb128 0x26
 29079 1805 6900     		.ascii	"i\000"
 29080 1807 01       		.byte	0x1
 29081 1808 D009     		.2byte	0x9d0
 29082 180a 73000000 		.4byte	0x73
 29083 180e 02       		.uleb128 0x2
 29084 180f 91       		.byte	0x91
 29085 1810 54       		.sleb128 -44
 29086 1811 23       		.uleb128 0x23
 29087 1812 CE030000 		.4byte	.LASF250
 29088 1816 01       		.byte	0x1
 29089 1817 D409     		.2byte	0x9d4
 29090 1819 DD120000 		.4byte	0x12dd
 29091 181d 02       		.uleb128 0x2
 29092 181e 91       		.byte	0x91
 29093 181f 4C       		.sleb128 -52
 29094 1820 1E       		.uleb128 0x1e
 29095 1821 08010000 		.4byte	.LBB27
 29096 1825 D80C0000 		.4byte	.LBE27-.LBB27
 29097 1829 26       		.uleb128 0x26
 29098 182a 6B00     		.ascii	"k\000"
 29099 182c 01       		.byte	0x1
 29100 182d E909     		.2byte	0x9e9
 29101 182f 97000000 		.4byte	0x97
 29102 1833 02       		.uleb128 0x2
 29103 1834 91       		.byte	0x91
 29104 1835 53       		.sleb128 -45
 29105 1836 1E       		.uleb128 0x1e
 29106 1837 12010000 		.4byte	.LBB28
 29107 183b B20C0000 		.4byte	.LBE28-.LBB28
 29108 183f 23       		.uleb128 0x23
 29109 1840 720E0000 		.4byte	.LASF243
 29110 1844 01       		.byte	0x1
 29111 1845 EB09     		.2byte	0x9eb
 29112 1847 97000000 		.4byte	0x97
 29113 184b 02       		.uleb128 0x2
 29114 184c 91       		.byte	0x91
 29115 184d 4B       		.sleb128 -53
 29116 184e 26       		.uleb128 0x26
 29117 184f 4D4F5400 		.ascii	"MOT\000"
 29118 1853 01       		.byte	0x1
 29119 1854 EC09     		.2byte	0x9ec
 29120 1856 D1160000 		.4byte	0x16d1
 29121 185a 02       		.uleb128 0x2
 29122 185b 91       		.byte	0x91
 29123 185c 44       		.sleb128 -60
 29124 185d 23       		.uleb128 0x23
 29125 185e 84140000 		.4byte	.LASF282
 29126 1862 01       		.byte	0x1
 29127 1863 ED09     		.2byte	0x9ed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 635


 29128 1865 97000000 		.4byte	0x97
 29129 1869 02       		.uleb128 0x2
 29130 186a 91       		.byte	0x91
 29131 186b 43       		.sleb128 -61
 29132 186c 00       		.byte	0
 29133 186d 00       		.byte	0
 29134 186e 00       		.byte	0
 29135 186f 22       		.uleb128 0x22
 29136 1870 100C0000 		.4byte	.LASF288
 29137 1874 01       		.byte	0x1
 29138 1875 D50A     		.2byte	0xad5
 29139 1877 00000000 		.4byte	.LFB76
 29140 187b DC000000 		.4byte	.LFE76-.LFB76
 29141 187f 01       		.uleb128 0x1
 29142 1880 9C       		.byte	0x9c
 29143 1881 B3180000 		.4byte	0x18b3
 29144 1885 25       		.uleb128 0x25
 29145 1886 910E0000 		.4byte	.LASF281
 29146 188a 01       		.byte	0x1
 29147 188b D50A     		.2byte	0xad5
 29148 188d 1F010000 		.4byte	0x11f
 29149 1891 03       		.uleb128 0x3
 29150 1892 91       		.byte	0x91
 29151 1893 DC7E     		.sleb128 -164
 29152 1895 26       		.uleb128 0x26
 29153 1896 73747200 		.ascii	"str\000"
 29154 189a 01       		.byte	0x1
 29155 189b D70A     		.2byte	0xad7
 29156 189d B3180000 		.4byte	0x18b3
 29157 18a1 03       		.uleb128 0x3
 29158 18a2 91       		.byte	0x91
 29159 18a3 E07E     		.sleb128 -160
 29160 18a5 26       		.uleb128 0x26
 29161 18a6 6900     		.ascii	"i\000"
 29162 18a8 01       		.byte	0x1
 29163 18a9 D80A     		.2byte	0xad8
 29164 18ab 73000000 		.4byte	0x73
 29165 18af 02       		.uleb128 0x2
 29166 18b0 91       		.byte	0x91
 29167 18b1 6C       		.sleb128 -20
 29168 18b2 00       		.byte	0
 29169 18b3 09       		.uleb128 0x9
 29170 18b4 F9000000 		.4byte	0xf9
 29171 18b8 C3180000 		.4byte	0x18c3
 29172 18bc 0A       		.uleb128 0xa
 29173 18bd 18010000 		.4byte	0x118
 29174 18c1 8B       		.byte	0x8b
 29175 18c2 00       		.byte	0
 29176 18c3 22       		.uleb128 0x22
 29177 18c4 9D0E0000 		.4byte	.LASF289
 29178 18c8 01       		.byte	0x1
 29179 18c9 ED0A     		.2byte	0xaed
 29180 18cb 00000000 		.4byte	.LFB77
 29181 18cf 80010000 		.4byte	.LFE77-.LFB77
 29182 18d3 01       		.uleb128 0x1
 29183 18d4 9C       		.byte	0x9c
 29184 18d5 07190000 		.4byte	0x1907
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 636


 29185 18d9 25       		.uleb128 0x25
 29186 18da 910E0000 		.4byte	.LASF281
 29187 18de 01       		.byte	0x1
 29188 18df ED0A     		.2byte	0xaed
 29189 18e1 1F010000 		.4byte	0x11f
 29190 18e5 03       		.uleb128 0x3
 29191 18e6 91       		.byte	0x91
 29192 18e7 E47E     		.sleb128 -156
 29193 18e9 26       		.uleb128 0x26
 29194 18ea 73747200 		.ascii	"str\000"
 29195 18ee 01       		.byte	0x1
 29196 18ef EF0A     		.2byte	0xaef
 29197 18f1 07190000 		.4byte	0x1907
 29198 18f5 03       		.uleb128 0x3
 29199 18f6 91       		.byte	0x91
 29200 18f7 EC7E     		.sleb128 -148
 29201 18f9 26       		.uleb128 0x26
 29202 18fa 6900     		.ascii	"i\000"
 29203 18fc 01       		.byte	0x1
 29204 18fd F00A     		.2byte	0xaf0
 29205 18ff 73000000 		.4byte	0x73
 29206 1903 02       		.uleb128 0x2
 29207 1904 91       		.byte	0x91
 29208 1905 64       		.sleb128 -28
 29209 1906 00       		.byte	0
 29210 1907 09       		.uleb128 0x9
 29211 1908 F9000000 		.4byte	0xf9
 29212 190c 17190000 		.4byte	0x1917
 29213 1910 0A       		.uleb128 0xa
 29214 1911 18010000 		.4byte	0x118
 29215 1915 77       		.byte	0x77
 29216 1916 00       		.byte	0
 29217 1917 28       		.uleb128 0x28
 29218 1918 31100000 		.4byte	.LASF290
 29219 191c 01       		.byte	0x1
 29220 191d 190B     		.2byte	0xb19
 29221 191f 00000000 		.4byte	.LFB78
 29222 1923 28000000 		.4byte	.LFE78-.LFB78
 29223 1927 01       		.uleb128 0x1
 29224 1928 9C       		.byte	0x9c
 29225 1929 3D190000 		.4byte	0x193d
 29226 192d 25       		.uleb128 0x25
 29227 192e 910E0000 		.4byte	.LASF281
 29228 1932 01       		.byte	0x1
 29229 1933 190B     		.2byte	0xb19
 29230 1935 1F010000 		.4byte	0x11f
 29231 1939 02       		.uleb128 0x2
 29232 193a 91       		.byte	0x91
 29233 193b 6C       		.sleb128 -20
 29234 193c 00       		.byte	0
 29235 193d 22       		.uleb128 0x22
 29236 193e FD030000 		.4byte	.LASF291
 29237 1942 01       		.byte	0x1
 29238 1943 240B     		.2byte	0xb24
 29239 1945 00000000 		.4byte	.LFB79
 29240 1949 F0000000 		.4byte	.LFE79-.LFB79
 29241 194d 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 637


 29242 194e 9C       		.byte	0x9c
 29243 194f AC190000 		.4byte	0x19ac
 29244 1953 25       		.uleb128 0x25
 29245 1954 910E0000 		.4byte	.LASF281
 29246 1958 01       		.byte	0x1
 29247 1959 240B     		.2byte	0xb24
 29248 195b 1F010000 		.4byte	0x11f
 29249 195f 03       		.uleb128 0x3
 29250 1960 91       		.byte	0x91
 29251 1961 FC7E     		.sleb128 -132
 29252 1963 23       		.uleb128 0x23
 29253 1964 6C020000 		.4byte	.LASF292
 29254 1968 01       		.byte	0x1
 29255 1969 260B     		.2byte	0xb26
 29256 196b C1160000 		.4byte	0x16c1
 29257 196f 03       		.uleb128 0x3
 29258 1970 91       		.byte	0x91
 29259 1971 847F     		.sleb128 -124
 29260 1973 23       		.uleb128 0x23
 29261 1974 10020000 		.4byte	.LASF293
 29262 1978 01       		.byte	0x1
 29263 1979 270B     		.2byte	0xb27
 29264 197b A3000000 		.4byte	0xa3
 29265 197f 02       		.uleb128 0x2
 29266 1980 91       		.byte	0x91
 29267 1981 6E       		.sleb128 -18
 29268 1982 23       		.uleb128 0x23
 29269 1983 E7000000 		.4byte	.LASF294
 29270 1987 01       		.byte	0x1
 29271 1988 280B     		.2byte	0xb28
 29272 198a EB000000 		.4byte	0xeb
 29273 198e 05       		.uleb128 0x5
 29274 198f 03       		.byte	0x3
 29275 1990 00000000 		.4byte	h_time.11231
 29276 1994 1E       		.uleb128 0x1e
 29277 1995 26000000 		.4byte	.LBB29
 29278 1999 A4000000 		.4byte	.LBE29-.LBB29
 29279 199d 26       		.uleb128 0x26
 29280 199e 6900     		.ascii	"i\000"
 29281 19a0 01       		.byte	0x1
 29282 19a1 2D0B     		.2byte	0xb2d
 29283 19a3 73000000 		.4byte	0x73
 29284 19a7 02       		.uleb128 0x2
 29285 19a8 91       		.byte	0x91
 29286 19a9 68       		.sleb128 -24
 29287 19aa 00       		.byte	0
 29288 19ab 00       		.byte	0
 29289 19ac 22       		.uleb128 0x22
 29290 19ad A6150000 		.4byte	.LASF295
 29291 19b1 01       		.byte	0x1
 29292 19b2 450B     		.2byte	0xb45
 29293 19b4 00000000 		.4byte	.LFB80
 29294 19b8 74030000 		.4byte	.LFE80-.LFB80
 29295 19bc 01       		.uleb128 0x1
 29296 19bd 9C       		.byte	0x9c
 29297 19be F0190000 		.4byte	0x19f0
 29298 19c2 25       		.uleb128 0x25
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 638


 29299 19c3 910E0000 		.4byte	.LASF281
 29300 19c7 01       		.byte	0x1
 29301 19c8 450B     		.2byte	0xb45
 29302 19ca 1F010000 		.4byte	0x11f
 29303 19ce 03       		.uleb128 0x3
 29304 19cf 91       		.byte	0x91
 29305 19d0 AC7D     		.sleb128 -340
 29306 19d2 26       		.uleb128 0x26
 29307 19d3 73747200 		.ascii	"str\000"
 29308 19d7 01       		.byte	0x1
 29309 19d8 470B     		.2byte	0xb47
 29310 19da 67170000 		.4byte	0x1767
 29311 19de 03       		.uleb128 0x3
 29312 19df 91       		.byte	0x91
 29313 19e0 B07D     		.sleb128 -336
 29314 19e2 26       		.uleb128 0x26
 29315 19e3 6900     		.ascii	"i\000"
 29316 19e5 01       		.byte	0x1
 29317 19e6 480B     		.2byte	0xb48
 29318 19e8 73000000 		.4byte	0x73
 29319 19ec 02       		.uleb128 0x2
 29320 19ed 91       		.byte	0x91
 29321 19ee 5C       		.sleb128 -36
 29322 19ef 00       		.byte	0
 29323 19f0 22       		.uleb128 0x22
 29324 19f1 C20F0000 		.4byte	.LASF296
 29325 19f5 01       		.byte	0x1
 29326 19f6 700B     		.2byte	0xb70
 29327 19f8 00000000 		.4byte	.LFB81
 29328 19fc 84000000 		.4byte	.LFE81-.LFB81
 29329 1a00 01       		.uleb128 0x1
 29330 1a01 9C       		.byte	0x9c
 29331 1a02 431A0000 		.4byte	0x1a43
 29332 1a06 25       		.uleb128 0x25
 29333 1a07 70060000 		.4byte	.LASF233
 29334 1a0b 01       		.byte	0x1
 29335 1a0c 700B     		.2byte	0xb70
 29336 1a0e D2100000 		.4byte	0x10d2
 29337 1a12 02       		.uleb128 0x2
 29338 1a13 91       		.byte	0x91
 29339 1a14 6C       		.sleb128 -20
 29340 1a15 25       		.uleb128 0x25
 29341 1a16 EF0B0000 		.4byte	.LASF234
 29342 1a1a 01       		.byte	0x1
 29343 1a1b 700B     		.2byte	0xb70
 29344 1a1d A3000000 		.4byte	0xa3
 29345 1a21 02       		.uleb128 0x2
 29346 1a22 91       		.byte	0x91
 29347 1a23 6A       		.sleb128 -22
 29348 1a24 25       		.uleb128 0x25
 29349 1a25 4F100000 		.4byte	.LASF297
 29350 1a29 01       		.byte	0x1
 29351 1a2a 700B     		.2byte	0xb70
 29352 1a2c 97000000 		.4byte	0x97
 29353 1a30 02       		.uleb128 0x2
 29354 1a31 91       		.byte	0x91
 29355 1a32 69       		.sleb128 -23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 639


 29356 1a33 23       		.uleb128 0x23
 29357 1a34 68070000 		.4byte	.LASF248
 29358 1a38 01       		.byte	0x1
 29359 1a39 720B     		.2byte	0xb72
 29360 1a3b A3000000 		.4byte	0xa3
 29361 1a3f 02       		.uleb128 0x2
 29362 1a40 91       		.byte	0x91
 29363 1a41 76       		.sleb128 -10
 29364 1a42 00       		.byte	0
 29365 1a43 22       		.uleb128 0x22
 29366 1a44 95060000 		.4byte	.LASF298
 29367 1a48 01       		.byte	0x1
 29368 1a49 8C0B     		.2byte	0xb8c
 29369 1a4b 00000000 		.4byte	.LFB82
 29370 1a4f 88000000 		.4byte	.LFE82-.LFB82
 29371 1a53 01       		.uleb128 0x1
 29372 1a54 9C       		.byte	0x9c
 29373 1a55 871A0000 		.4byte	0x1a87
 29374 1a59 25       		.uleb128 0x25
 29375 1a5a 70060000 		.4byte	.LASF233
 29376 1a5e 01       		.byte	0x1
 29377 1a5f 8C0B     		.2byte	0xb8c
 29378 1a61 D2100000 		.4byte	0x10d2
 29379 1a65 02       		.uleb128 0x2
 29380 1a66 91       		.byte	0x91
 29381 1a67 6C       		.sleb128 -20
 29382 1a68 25       		.uleb128 0x25
 29383 1a69 EF0B0000 		.4byte	.LASF234
 29384 1a6d 01       		.byte	0x1
 29385 1a6e 8C0B     		.2byte	0xb8c
 29386 1a70 A3000000 		.4byte	0xa3
 29387 1a74 02       		.uleb128 0x2
 29388 1a75 91       		.byte	0x91
 29389 1a76 6A       		.sleb128 -22
 29390 1a77 23       		.uleb128 0x23
 29391 1a78 68070000 		.4byte	.LASF248
 29392 1a7c 01       		.byte	0x1
 29393 1a7d 8E0B     		.2byte	0xb8e
 29394 1a7f A3000000 		.4byte	0xa3
 29395 1a83 02       		.uleb128 0x2
 29396 1a84 91       		.byte	0x91
 29397 1a85 76       		.sleb128 -10
 29398 1a86 00       		.byte	0
 29399 1a87 22       		.uleb128 0x22
 29400 1a88 7B0C0000 		.4byte	.LASF299
 29401 1a8c 01       		.byte	0x1
 29402 1a8d A80B     		.2byte	0xba8
 29403 1a8f 00000000 		.4byte	.LFB83
 29404 1a93 A0000000 		.4byte	.LFE83-.LFB83
 29405 1a97 01       		.uleb128 0x1
 29406 1a98 9C       		.byte	0x9c
 29407 1a99 DA1A0000 		.4byte	0x1ada
 29408 1a9d 25       		.uleb128 0x25
 29409 1a9e 70060000 		.4byte	.LASF233
 29410 1aa2 01       		.byte	0x1
 29411 1aa3 A80B     		.2byte	0xba8
 29412 1aa5 D2100000 		.4byte	0x10d2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 640


 29413 1aa9 02       		.uleb128 0x2
 29414 1aaa 91       		.byte	0x91
 29415 1aab 74       		.sleb128 -12
 29416 1aac 25       		.uleb128 0x25
 29417 1aad EF0B0000 		.4byte	.LASF234
 29418 1ab1 01       		.byte	0x1
 29419 1ab2 A80B     		.2byte	0xba8
 29420 1ab4 A3000000 		.4byte	0xa3
 29421 1ab8 02       		.uleb128 0x2
 29422 1ab9 91       		.byte	0x91
 29423 1aba 72       		.sleb128 -14
 29424 1abb 29       		.uleb128 0x29
 29425 1abc 696400   		.ascii	"id\000"
 29426 1abf 01       		.byte	0x1
 29427 1ac0 A80B     		.2byte	0xba8
 29428 1ac2 97000000 		.4byte	0x97
 29429 1ac6 02       		.uleb128 0x2
 29430 1ac7 91       		.byte	0x91
 29431 1ac8 71       		.sleb128 -15
 29432 1ac9 26       		.uleb128 0x26
 29433 1aca 6900     		.ascii	"i\000"
 29434 1acc 01       		.byte	0x1
 29435 1acd AA0B     		.2byte	0xbaa
 29436 1acf A3000000 		.4byte	0xa3
 29437 1ad3 05       		.uleb128 0x5
 29438 1ad4 03       		.byte	0x3
 29439 1ad5 04000000 		.4byte	i.11272
 29440 1ad9 00       		.byte	0
 29441 1ada 2A       		.uleb128 0x2a
 29442 1adb 34140000 		.4byte	.LASF305
 29443 1adf 01       		.byte	0x1
 29444 1ae0 C60B     		.2byte	0xbc6
 29445 1ae2 97000000 		.4byte	0x97
 29446 1ae6 00000000 		.4byte	.LFB84
 29447 1aea 3E000000 		.4byte	.LFE84-.LFB84
 29448 1aee 01       		.uleb128 0x1
 29449 1aef 9C       		.byte	0x9c
 29450 1af0 2F1B0000 		.4byte	0x1b2f
 29451 1af4 25       		.uleb128 0x25
 29452 1af5 BE0B0000 		.4byte	.LASF300
 29453 1af9 01       		.byte	0x1
 29454 1afa C60B     		.2byte	0xbc6
 29455 1afc D2100000 		.4byte	0x10d2
 29456 1b00 02       		.uleb128 0x2
 29457 1b01 91       		.byte	0x91
 29458 1b02 6C       		.sleb128 -20
 29459 1b03 25       		.uleb128 0x25
 29460 1b04 3D060000 		.4byte	.LASF301
 29461 1b08 01       		.byte	0x1
 29462 1b09 C60B     		.2byte	0xbc6
 29463 1b0b 97000000 		.4byte	0x97
 29464 1b0f 02       		.uleb128 0x2
 29465 1b10 91       		.byte	0x91
 29466 1b11 6B       		.sleb128 -21
 29467 1b12 26       		.uleb128 0x26
 29468 1b13 6900     		.ascii	"i\000"
 29469 1b15 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 641


 29470 1b16 C80B     		.2byte	0xbc8
 29471 1b18 97000000 		.4byte	0x97
 29472 1b1c 02       		.uleb128 0x2
 29473 1b1d 91       		.byte	0x91
 29474 1b1e 77       		.sleb128 -9
 29475 1b1f 23       		.uleb128 0x23
 29476 1b20 F10D0000 		.4byte	.LASF302
 29477 1b24 01       		.byte	0x1
 29478 1b25 C90B     		.2byte	0xbc9
 29479 1b27 97000000 		.4byte	0x97
 29480 1b2b 02       		.uleb128 0x2
 29481 1b2c 91       		.byte	0x91
 29482 1b2d 76       		.sleb128 -10
 29483 1b2e 00       		.byte	0
 29484 1b2f 22       		.uleb128 0x22
 29485 1b30 FD0B0000 		.4byte	.LASF303
 29486 1b34 01       		.byte	0x1
 29487 1b35 D60B     		.2byte	0xbd6
 29488 1b37 00000000 		.4byte	.LFB85
 29489 1b3b 2E000000 		.4byte	.LFE85-.LFB85
 29490 1b3f 01       		.uleb128 0x1
 29491 1b40 9C       		.byte	0x9c
 29492 1b41 731B0000 		.4byte	0x1b73
 29493 1b45 25       		.uleb128 0x25
 29494 1b46 86050000 		.4byte	.LASF304
 29495 1b4a 01       		.byte	0x1
 29496 1b4b D60B     		.2byte	0xbd6
 29497 1b4d 97000000 		.4byte	0x97
 29498 1b51 02       		.uleb128 0x2
 29499 1b52 91       		.byte	0x91
 29500 1b53 6F       		.sleb128 -17
 29501 1b54 23       		.uleb128 0x23
 29502 1b55 EF0B0000 		.4byte	.LASF234
 29503 1b59 01       		.byte	0x1
 29504 1b5a D70B     		.2byte	0xbd7
 29505 1b5c 73000000 		.4byte	0x73
 29506 1b60 02       		.uleb128 0x2
 29507 1b61 91       		.byte	0x91
 29508 1b62 74       		.sleb128 -12
 29509 1b63 23       		.uleb128 0x23
 29510 1b64 70060000 		.4byte	.LASF233
 29511 1b68 01       		.byte	0x1
 29512 1b69 D80B     		.2byte	0xbd8
 29513 1b6b CC080000 		.4byte	0x8cc
 29514 1b6f 02       		.uleb128 0x2
 29515 1b70 91       		.byte	0x91
 29516 1b71 70       		.sleb128 -16
 29517 1b72 00       		.byte	0
 29518 1b73 2B       		.uleb128 0x2b
 29519 1b74 BE040000 		.4byte	.LASF306
 29520 1b78 01       		.byte	0x1
 29521 1b79 E50B     		.2byte	0xbe5
 29522 1b7b 97000000 		.4byte	0x97
 29523 1b7f 00000000 		.4byte	.LFB86
 29524 1b83 98000000 		.4byte	.LFE86-.LFB86
 29525 1b87 01       		.uleb128 0x1
 29526 1b88 9C       		.byte	0x9c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 642


 29527 1b89 D71B0000 		.4byte	0x1bd7
 29528 1b8d 25       		.uleb128 0x25
 29529 1b8e 30060000 		.4byte	.LASF307
 29530 1b92 01       		.byte	0x1
 29531 1b93 E50B     		.2byte	0xbe5
 29532 1b95 73000000 		.4byte	0x73
 29533 1b99 02       		.uleb128 0x2
 29534 1b9a 91       		.byte	0x91
 29535 1b9b 64       		.sleb128 -28
 29536 1b9c 26       		.uleb128 0x26
 29537 1b9d 6900     		.ascii	"i\000"
 29538 1b9f 01       		.byte	0x1
 29539 1ba0 E70B     		.2byte	0xbe7
 29540 1ba2 73000000 		.4byte	0x73
 29541 1ba6 02       		.uleb128 0x2
 29542 1ba7 91       		.byte	0x91
 29543 1ba8 74       		.sleb128 -12
 29544 1ba9 23       		.uleb128 0x23
 29545 1baa EE000000 		.4byte	.LASF308
 29546 1bae 01       		.byte	0x1
 29547 1baf E80B     		.2byte	0xbe8
 29548 1bb1 97000000 		.4byte	0x97
 29549 1bb5 02       		.uleb128 0x2
 29550 1bb6 91       		.byte	0x91
 29551 1bb7 6B       		.sleb128 -21
 29552 1bb8 23       		.uleb128 0x23
 29553 1bb9 B1060000 		.4byte	.LASF309
 29554 1bbd 01       		.byte	0x1
 29555 1bbe E90B     		.2byte	0xbe9
 29556 1bc0 73000000 		.4byte	0x73
 29557 1bc4 02       		.uleb128 0x2
 29558 1bc5 91       		.byte	0x91
 29559 1bc6 6C       		.sleb128 -20
 29560 1bc7 23       		.uleb128 0x23
 29561 1bc8 C4050000 		.4byte	.LASF310
 29562 1bcc 01       		.byte	0x1
 29563 1bcd EA0B     		.2byte	0xbea
 29564 1bcf 97000000 		.4byte	0x97
 29565 1bd3 02       		.uleb128 0x2
 29566 1bd4 91       		.byte	0x91
 29567 1bd5 73       		.sleb128 -13
 29568 1bd6 00       		.byte	0
 29569 1bd7 22       		.uleb128 0x22
 29570 1bd8 360F0000 		.4byte	.LASF311
 29571 1bdc 01       		.byte	0x1
 29572 1bdd 0F0C     		.2byte	0xc0f
 29573 1bdf 00000000 		.4byte	.LFB87
 29574 1be3 80000000 		.4byte	.LFE87-.LFB87
 29575 1be7 01       		.uleb128 0x1
 29576 1be8 9C       		.byte	0x9c
 29577 1be9 FB1B0000 		.4byte	0x1bfb
 29578 1bed 26       		.uleb128 0x26
 29579 1bee 6900     		.ascii	"i\000"
 29580 1bf0 01       		.byte	0x1
 29581 1bf1 110C     		.2byte	0xc11
 29582 1bf3 A3000000 		.4byte	0xa3
 29583 1bf7 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 643


 29584 1bf8 91       		.byte	0x91
 29585 1bf9 76       		.sleb128 -10
 29586 1bfa 00       		.byte	0
 29587 1bfb 2B       		.uleb128 0x2b
 29588 1bfc 7C0E0000 		.4byte	.LASF312
 29589 1c00 01       		.byte	0x1
 29590 1c01 280C     		.2byte	0xc28
 29591 1c03 97000000 		.4byte	0x97
 29592 1c07 00000000 		.4byte	.LFB88
 29593 1c0b 5C000000 		.4byte	.LFE88-.LFB88
 29594 1c0f 01       		.uleb128 0x1
 29595 1c10 9C       		.byte	0x9c
 29596 1c11 231C0000 		.4byte	0x1c23
 29597 1c15 26       		.uleb128 0x26
 29598 1c16 6900     		.ascii	"i\000"
 29599 1c18 01       		.byte	0x1
 29600 1c19 290C     		.2byte	0xc29
 29601 1c1b A3000000 		.4byte	0xa3
 29602 1c1f 02       		.uleb128 0x2
 29603 1c20 91       		.byte	0x91
 29604 1c21 76       		.sleb128 -10
 29605 1c22 00       		.byte	0
 29606 1c23 2B       		.uleb128 0x2b
 29607 1c24 B7060000 		.4byte	.LASF313
 29608 1c28 01       		.byte	0x1
 29609 1c29 3B0C     		.2byte	0xc3b
 29610 1c2b 97000000 		.4byte	0x97
 29611 1c2f 00000000 		.4byte	.LFB89
 29612 1c33 28060000 		.4byte	.LFE89-.LFB89
 29613 1c37 01       		.uleb128 0x1
 29614 1c38 9C       		.byte	0x9c
 29615 1c39 581C0000 		.4byte	0x1c58
 29616 1c3d 26       		.uleb128 0x26
 29617 1c3e 6900     		.ascii	"i\000"
 29618 1c40 01       		.byte	0x1
 29619 1c41 3D0C     		.2byte	0xc3d
 29620 1c43 97000000 		.4byte	0x97
 29621 1c47 02       		.uleb128 0x2
 29622 1c48 91       		.byte	0x91
 29623 1c49 77       		.sleb128 -9
 29624 1c4a 26       		.uleb128 0x26
 29625 1c4b 6A00     		.ascii	"j\000"
 29626 1c4d 01       		.byte	0x1
 29627 1c4e 3D0C     		.2byte	0xc3d
 29628 1c50 97000000 		.4byte	0x97
 29629 1c54 02       		.uleb128 0x2
 29630 1c55 91       		.byte	0x91
 29631 1c56 76       		.sleb128 -10
 29632 1c57 00       		.byte	0
 29633 1c58 28       		.uleb128 0x28
 29634 1c59 4A090000 		.4byte	.LASF314
 29635 1c5d 01       		.byte	0x1
 29636 1c5e DE0C     		.2byte	0xcde
 29637 1c60 00000000 		.4byte	.LFB90
 29638 1c64 40020000 		.4byte	.LFE90-.LFB90
 29639 1c68 01       		.uleb128 0x1
 29640 1c69 9C       		.byte	0x9c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 644


 29641 1c6a 951C0000 		.4byte	0x1c95
 29642 1c6e 23       		.uleb128 0x23
 29643 1c6f 720E0000 		.4byte	.LASF243
 29644 1c73 01       		.byte	0x1
 29645 1c74 E00C     		.2byte	0xce0
 29646 1c76 97000000 		.4byte	0x97
 29647 1c7a 02       		.uleb128 0x2
 29648 1c7b 91       		.byte	0x91
 29649 1c7c 73       		.sleb128 -13
 29650 1c7d 1E       		.uleb128 0x1e
 29651 1c7e FA000000 		.4byte	.LBB30
 29652 1c82 6A000000 		.4byte	.LBE30-.LBB30
 29653 1c86 26       		.uleb128 0x26
 29654 1c87 6900     		.ascii	"i\000"
 29655 1c89 01       		.byte	0x1
 29656 1c8a F10C     		.2byte	0xcf1
 29657 1c8c 73000000 		.4byte	0x73
 29658 1c90 02       		.uleb128 0x2
 29659 1c91 91       		.byte	0x91
 29660 1c92 74       		.sleb128 -12
 29661 1c93 00       		.byte	0
 29662 1c94 00       		.byte	0
 29663 1c95 2C       		.uleb128 0x2c
 29664 1c96 E00B0000 		.4byte	.LASF315
 29665 1c9a 01       		.byte	0x1
 29666 1c9b 110D     		.2byte	0xd11
 29667 1c9d 00000000 		.4byte	.LFB91
 29668 1ca1 28000000 		.4byte	.LFE91-.LFB91
 29669 1ca5 01       		.uleb128 0x1
 29670 1ca6 9C       		.byte	0x9c
 29671 1ca7 2C       		.uleb128 0x2c
 29672 1ca8 C7110000 		.4byte	.LASF316
 29673 1cac 01       		.byte	0x1
 29674 1cad 1D0D     		.2byte	0xd1d
 29675 1caf 00000000 		.4byte	.LFB92
 29676 1cb3 78000000 		.4byte	.LFE92-.LFB92
 29677 1cb7 01       		.uleb128 0x1
 29678 1cb8 9C       		.byte	0x9c
 29679 1cb9 2C       		.uleb128 0x2c
 29680 1cba 77040000 		.4byte	.LASF317
 29681 1cbe 01       		.byte	0x1
 29682 1cbf 330D     		.2byte	0xd33
 29683 1cc1 00000000 		.4byte	.LFB93
 29684 1cc5 B0000000 		.4byte	.LFE93-.LFB93
 29685 1cc9 01       		.uleb128 0x1
 29686 1cca 9C       		.byte	0x9c
 29687 1ccb 27       		.uleb128 0x27
 29688 1ccc E5060000 		.4byte	.LASF319
 29689 1cd0 01       		.byte	0x1
 29690 1cd1 540D     		.2byte	0xd54
 29691 1cd3 00000000 		.4byte	.LFB94
 29692 1cd7 28010000 		.4byte	.LFE94-.LFB94
 29693 1cdb 01       		.uleb128 0x1
 29694 1cdc 9C       		.byte	0x9c
 29695 1cdd 0F1D0000 		.4byte	0x1d0f
 29696 1ce1 23       		.uleb128 0x23
 29697 1ce2 68070000 		.4byte	.LASF248
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 645


 29698 1ce6 01       		.byte	0x1
 29699 1ce7 560D     		.2byte	0xd56
 29700 1ce9 97000000 		.4byte	0x97
 29701 1ced 02       		.uleb128 0x2
 29702 1cee 91       		.byte	0x91
 29703 1cef 6F       		.sleb128 -17
 29704 1cf0 23       		.uleb128 0x23
 29705 1cf1 81120000 		.4byte	.LASF239
 29706 1cf5 01       		.byte	0x1
 29707 1cf6 570D     		.2byte	0xd57
 29708 1cf8 C7000000 		.4byte	0xc7
 29709 1cfc 02       		.uleb128 0x2
 29710 1cfd 91       		.byte	0x91
 29711 1cfe 6C       		.sleb128 -20
 29712 1cff 23       		.uleb128 0x23
 29713 1d00 70060000 		.4byte	.LASF233
 29714 1d04 01       		.byte	0x1
 29715 1d05 5A0D     		.2byte	0xd5a
 29716 1d07 5D080000 		.4byte	0x85d
 29717 1d0b 02       		.uleb128 0x2
 29718 1d0c 91       		.byte	0x91
 29719 1d0d 64       		.sleb128 -28
 29720 1d0e 00       		.byte	0
 29721 1d0f 27       		.uleb128 0x27
 29722 1d10 230F0000 		.4byte	.LASF320
 29723 1d14 01       		.byte	0x1
 29724 1d15 750D     		.2byte	0xd75
 29725 1d17 00000000 		.4byte	.LFB95
 29726 1d1b B8000000 		.4byte	.LFE95-.LFB95
 29727 1d1f 01       		.uleb128 0x1
 29728 1d20 9C       		.byte	0x9c
 29729 1d21 531D0000 		.4byte	0x1d53
 29730 1d25 23       		.uleb128 0x23
 29731 1d26 68070000 		.4byte	.LASF248
 29732 1d2a 01       		.byte	0x1
 29733 1d2b 770D     		.2byte	0xd77
 29734 1d2d 97000000 		.4byte	0x97
 29735 1d31 02       		.uleb128 0x2
 29736 1d32 91       		.byte	0x91
 29737 1d33 6F       		.sleb128 -17
 29738 1d34 23       		.uleb128 0x23
 29739 1d35 81120000 		.4byte	.LASF239
 29740 1d39 01       		.byte	0x1
 29741 1d3a 780D     		.2byte	0xd78
 29742 1d3c C7000000 		.4byte	0xc7
 29743 1d40 02       		.uleb128 0x2
 29744 1d41 91       		.byte	0x91
 29745 1d42 6C       		.sleb128 -20
 29746 1d43 23       		.uleb128 0x23
 29747 1d44 70060000 		.4byte	.LASF233
 29748 1d48 01       		.byte	0x1
 29749 1d49 7C0D     		.2byte	0xd7c
 29750 1d4b 5D080000 		.4byte	0x85d
 29751 1d4f 02       		.uleb128 0x2
 29752 1d50 91       		.byte	0x91
 29753 1d51 64       		.sleb128 -28
 29754 1d52 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 646


 29755 1d53 27       		.uleb128 0x27
 29756 1d54 2A020000 		.4byte	.LASF321
 29757 1d58 01       		.byte	0x1
 29758 1d59 8E0D     		.2byte	0xd8e
 29759 1d5b 00000000 		.4byte	.LFB96
 29760 1d5f B8000000 		.4byte	.LFE96-.LFB96
 29761 1d63 01       		.uleb128 0x1
 29762 1d64 9C       		.byte	0x9c
 29763 1d65 971D0000 		.4byte	0x1d97
 29764 1d69 23       		.uleb128 0x23
 29765 1d6a 68070000 		.4byte	.LASF248
 29766 1d6e 01       		.byte	0x1
 29767 1d6f 900D     		.2byte	0xd90
 29768 1d71 97000000 		.4byte	0x97
 29769 1d75 02       		.uleb128 0x2
 29770 1d76 91       		.byte	0x91
 29771 1d77 6F       		.sleb128 -17
 29772 1d78 23       		.uleb128 0x23
 29773 1d79 81120000 		.4byte	.LASF239
 29774 1d7d 01       		.byte	0x1
 29775 1d7e 910D     		.2byte	0xd91
 29776 1d80 C7000000 		.4byte	0xc7
 29777 1d84 02       		.uleb128 0x2
 29778 1d85 91       		.byte	0x91
 29779 1d86 6C       		.sleb128 -20
 29780 1d87 23       		.uleb128 0x23
 29781 1d88 70060000 		.4byte	.LASF233
 29782 1d8c 01       		.byte	0x1
 29783 1d8d 950D     		.2byte	0xd95
 29784 1d8f 5D080000 		.4byte	0x85d
 29785 1d93 02       		.uleb128 0x2
 29786 1d94 91       		.byte	0x91
 29787 1d95 64       		.sleb128 -28
 29788 1d96 00       		.byte	0
 29789 1d97 27       		.uleb128 0x27
 29790 1d98 4B0A0000 		.4byte	.LASF322
 29791 1d9c 01       		.byte	0x1
 29792 1d9d A70D     		.2byte	0xda7
 29793 1d9f 00000000 		.4byte	.LFB97
 29794 1da3 5C000000 		.4byte	.LFE97-.LFB97
 29795 1da7 01       		.uleb128 0x1
 29796 1da8 9C       		.byte	0x9c
 29797 1da9 CC1D0000 		.4byte	0x1dcc
 29798 1dad 23       		.uleb128 0x23
 29799 1dae 81120000 		.4byte	.LASF239
 29800 1db2 01       		.byte	0x1
 29801 1db3 A90D     		.2byte	0xda9
 29802 1db5 C7000000 		.4byte	0xc7
 29803 1db9 02       		.uleb128 0x2
 29804 1dba 91       		.byte	0x91
 29805 1dbb 76       		.sleb128 -10
 29806 1dbc 23       		.uleb128 0x23
 29807 1dbd 70060000 		.4byte	.LASF233
 29808 1dc1 01       		.byte	0x1
 29809 1dc2 AD0D     		.2byte	0xdad
 29810 1dc4 90090000 		.4byte	0x990
 29811 1dc8 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 647


 29812 1dc9 91       		.byte	0x91
 29813 1dca 70       		.sleb128 -16
 29814 1dcb 00       		.byte	0
 29815 1dcc 2D       		.uleb128 0x2d
 29816 1dcd 450C0000 		.4byte	.LASF323
 29817 1dd1 01       		.byte	0x1
 29818 1dd2 BF0D     		.2byte	0xdbf
 29819 1dd4 00000000 		.4byte	.LFB98
 29820 1dd8 44020000 		.4byte	.LFE98-.LFB98
 29821 1ddc 01       		.uleb128 0x1
 29822 1ddd 9C       		.byte	0x9c
 29823 1dde 361E0000 		.4byte	0x1e36
 29824 1de2 23       		.uleb128 0x23
 29825 1de3 81120000 		.4byte	.LASF239
 29826 1de7 01       		.byte	0x1
 29827 1de8 C20D     		.2byte	0xdc2
 29828 1dea 361E0000 		.4byte	0x1e36
 29829 1dee 02       		.uleb128 0x2
 29830 1def 91       		.byte	0x91
 29831 1df0 70       		.sleb128 -16
 29832 1df1 23       		.uleb128 0x23
 29833 1df2 2A070000 		.4byte	.LASF324
 29834 1df6 01       		.byte	0x1
 29835 1df7 C30D     		.2byte	0xdc3
 29836 1df9 361E0000 		.4byte	0x1e36
 29837 1dfd 05       		.uleb128 0x5
 29838 1dfe 03       		.byte	0x3
 29839 1dff 08000000 		.4byte	last_aux_int16.11403
 29840 1e03 2E       		.uleb128 0x2e
 29841 1e04 2E000000 		.4byte	.LBB31
 29842 1e08 50000000 		.4byte	.LBE31-.LBB31
 29843 1e0c 1E1E0000 		.4byte	0x1e1e
 29844 1e10 26       		.uleb128 0x26
 29845 1e11 6900     		.ascii	"i\000"
 29846 1e13 01       		.byte	0x1
 29847 1e14 CA0D     		.2byte	0xdca
 29848 1e16 97000000 		.4byte	0x97
 29849 1e1a 02       		.uleb128 0x2
 29850 1e1b 91       		.byte	0x91
 29851 1e1c 77       		.sleb128 -9
 29852 1e1d 00       		.byte	0
 29853 1e1e 1E       		.uleb128 0x1e
 29854 1e1f 88000000 		.4byte	.LBB32
 29855 1e23 98010000 		.4byte	.LBE32-.LBB32
 29856 1e27 26       		.uleb128 0x26
 29857 1e28 6900     		.ascii	"i\000"
 29858 1e2a 01       		.byte	0x1
 29859 1e2b D40D     		.2byte	0xdd4
 29860 1e2d 97000000 		.4byte	0x97
 29861 1e31 02       		.uleb128 0x2
 29862 1e32 91       		.byte	0x91
 29863 1e33 76       		.sleb128 -10
 29864 1e34 00       		.byte	0
 29865 1e35 00       		.byte	0
 29866 1e36 09       		.uleb128 0x9
 29867 1e37 C7000000 		.4byte	0xc7
 29868 1e3b 461E0000 		.4byte	0x1e46
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 648


 29869 1e3f 0A       		.uleb128 0xa
 29870 1e40 18010000 		.4byte	0x118
 29871 1e44 01       		.byte	0x1
 29872 1e45 00       		.byte	0
 29873 1e46 27       		.uleb128 0x27
 29874 1e47 05150000 		.4byte	.LASF325
 29875 1e4b 01       		.byte	0x1
 29876 1e4c EF0D     		.2byte	0xdef
 29877 1e4e 00000000 		.4byte	.LFB99
 29878 1e52 BC000000 		.4byte	.LFE99-.LFB99
 29879 1e56 01       		.uleb128 0x1
 29880 1e57 9C       		.byte	0x9c
 29881 1e58 6C1E0000 		.4byte	0x1e6c
 29882 1e5c 26       		.uleb128 0x26
 29883 1e5d 61757800 		.ascii	"aux\000"
 29884 1e61 01       		.byte	0x1
 29885 1e62 F20D     		.2byte	0xdf2
 29886 1e64 97000000 		.4byte	0x97
 29887 1e68 02       		.uleb128 0x2
 29888 1e69 91       		.byte	0x91
 29889 1e6a 77       		.sleb128 -9
 29890 1e6b 00       		.byte	0
 29891 1e6c 27       		.uleb128 0x27
 29892 1e6d A30C0000 		.4byte	.LASF326
 29893 1e71 01       		.byte	0x1
 29894 1e72 140E     		.2byte	0xe14
 29895 1e74 00000000 		.4byte	.LFB100
 29896 1e78 5C000000 		.4byte	.LFE100-.LFB100
 29897 1e7c 01       		.uleb128 0x1
 29898 1e7d 9C       		.byte	0x9c
 29899 1e7e 921E0000 		.4byte	0x1e92
 29900 1e82 23       		.uleb128 0x23
 29901 1e83 70060000 		.4byte	.LASF233
 29902 1e87 01       		.byte	0x1
 29903 1e88 160E     		.2byte	0xe16
 29904 1e8a 10060000 		.4byte	0x610
 29905 1e8e 02       		.uleb128 0x2
 29906 1e8f 91       		.byte	0x91
 29907 1e90 74       		.sleb128 -12
 29908 1e91 00       		.byte	0
 29909 1e92 27       		.uleb128 0x27
 29910 1e93 88100000 		.4byte	.LASF327
 29911 1e97 01       		.byte	0x1
 29912 1e98 2B0E     		.2byte	0xe2b
 29913 1e9a 00000000 		.4byte	.LFB101
 29914 1e9e 38010000 		.4byte	.LFE101-.LFB101
 29915 1ea2 01       		.uleb128 0x1
 29916 1ea3 9C       		.byte	0x9c
 29917 1ea4 D61E0000 		.4byte	0x1ed6
 29918 1ea8 23       		.uleb128 0x23
 29919 1ea9 68070000 		.4byte	.LASF248
 29920 1ead 01       		.byte	0x1
 29921 1eae 2D0E     		.2byte	0xe2d
 29922 1eb0 97000000 		.4byte	0x97
 29923 1eb4 02       		.uleb128 0x2
 29924 1eb5 91       		.byte	0x91
 29925 1eb6 6F       		.sleb128 -17
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 649


 29926 1eb7 23       		.uleb128 0x23
 29927 1eb8 81120000 		.4byte	.LASF239
 29928 1ebc 01       		.byte	0x1
 29929 1ebd 2E0E     		.2byte	0xe2e
 29930 1ebf C7000000 		.4byte	0xc7
 29931 1ec3 02       		.uleb128 0x2
 29932 1ec4 91       		.byte	0x91
 29933 1ec5 6C       		.sleb128 -20
 29934 1ec6 23       		.uleb128 0x23
 29935 1ec7 70060000 		.4byte	.LASF233
 29936 1ecb 01       		.byte	0x1
 29937 1ecc 320E     		.2byte	0xe32
 29938 1ece 71050000 		.4byte	0x571
 29939 1ed2 02       		.uleb128 0x2
 29940 1ed3 91       		.byte	0x91
 29941 1ed4 60       		.sleb128 -32
 29942 1ed5 00       		.byte	0
 29943 1ed6 27       		.uleb128 0x27
 29944 1ed7 B50A0000 		.4byte	.LASF328
 29945 1edb 01       		.byte	0x1
 29946 1edc 520E     		.2byte	0xe52
 29947 1ede 00000000 		.4byte	.LFB102
 29948 1ee2 EC000000 		.4byte	.LFE102-.LFB102
 29949 1ee6 01       		.uleb128 0x1
 29950 1ee7 9C       		.byte	0x9c
 29951 1ee8 0B1F0000 		.4byte	0x1f0b
 29952 1eec 23       		.uleb128 0x23
 29953 1eed 70060000 		.4byte	.LASF233
 29954 1ef1 01       		.byte	0x1
 29955 1ef2 560E     		.2byte	0xe56
 29956 1ef4 90090000 		.4byte	0x990
 29957 1ef8 02       		.uleb128 0x2
 29958 1ef9 91       		.byte	0x91
 29959 1efa 68       		.sleb128 -24
 29960 1efb 23       		.uleb128 0x23
 29961 1efc 81120000 		.4byte	.LASF239
 29962 1f00 01       		.byte	0x1
 29963 1f01 570E     		.2byte	0xe57
 29964 1f03 C7000000 		.4byte	0xc7
 29965 1f07 02       		.uleb128 0x2
 29966 1f08 91       		.byte	0x91
 29967 1f09 66       		.sleb128 -26
 29968 1f0a 00       		.byte	0
 29969 1f0b 27       		.uleb128 0x27
 29970 1f0c DC070000 		.4byte	.LASF329
 29971 1f10 01       		.byte	0x1
 29972 1f11 780E     		.2byte	0xe78
 29973 1f13 00000000 		.4byte	.LFB103
 29974 1f17 64000000 		.4byte	.LFE103-.LFB103
 29975 1f1b 01       		.uleb128 0x1
 29976 1f1c 9C       		.byte	0x9c
 29977 1f1d 401F0000 		.4byte	0x1f40
 29978 1f21 23       		.uleb128 0x23
 29979 1f22 70060000 		.4byte	.LASF233
 29980 1f26 01       		.byte	0x1
 29981 1f27 7C0E     		.2byte	0xe7c
 29982 1f29 FD0A0000 		.4byte	0xafd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 650


 29983 1f2d 02       		.uleb128 0x2
 29984 1f2e 91       		.byte	0x91
 29985 1f2f 74       		.sleb128 -12
 29986 1f30 23       		.uleb128 0x23
 29987 1f31 81120000 		.4byte	.LASF239
 29988 1f35 01       		.byte	0x1
 29989 1f36 7D0E     		.2byte	0xe7d
 29990 1f38 C7000000 		.4byte	0xc7
 29991 1f3c 02       		.uleb128 0x2
 29992 1f3d 91       		.byte	0x91
 29993 1f3e 72       		.sleb128 -14
 29994 1f3f 00       		.byte	0
 29995 1f40 2F       		.uleb128 0x2f
 29996 1f41 C6070000 		.4byte	.LASF330
 29997 1f45 01       		.byte	0x1
 29998 1f46 920E     		.2byte	0xe92
 29999 1f48 C7000000 		.4byte	0xc7
 30000 1f4c 00000000 		.4byte	.LFB104
 30001 1f50 A8000000 		.4byte	.LFE104-.LFB104
 30002 1f54 01       		.uleb128 0x1
 30003 1f55 9C       		.byte	0x9c
 30004 1f56 B51F0000 		.4byte	0x1fb5
 30005 1f5a 23       		.uleb128 0x23
 30006 1f5b 70060000 		.4byte	.LASF233
 30007 1f5f 01       		.byte	0x1
 30008 1f60 940E     		.2byte	0xe94
 30009 1f62 B51F0000 		.4byte	0x1fb5
 30010 1f66 02       		.uleb128 0x2
 30011 1f67 91       		.byte	0x91
 30012 1f68 5C       		.sleb128 -36
 30013 1f69 23       		.uleb128 0x23
 30014 1f6a EF0B0000 		.4byte	.LASF234
 30015 1f6e 01       		.byte	0x1
 30016 1f6f 950E     		.2byte	0xe95
 30017 1f71 97000000 		.4byte	0x97
 30018 1f75 02       		.uleb128 0x2
 30019 1f76 91       		.byte	0x91
 30020 1f77 74       		.sleb128 -12
 30021 1f78 23       		.uleb128 0x23
 30022 1f79 15100000 		.4byte	.LASF331
 30023 1f7d 01       		.byte	0x1
 30024 1f7e 960E     		.2byte	0xe96
 30025 1f80 C7000000 		.4byte	0xc7
 30026 1f84 02       		.uleb128 0x2
 30027 1f85 91       		.byte	0x91
 30028 1f86 76       		.sleb128 -10
 30029 1f87 23       		.uleb128 0x23
 30030 1f88 F8020000 		.4byte	.LASF332
 30031 1f8c 01       		.byte	0x1
 30032 1f8d 970E     		.2byte	0xe97
 30033 1f8f AF000000 		.4byte	0xaf
 30034 1f93 02       		.uleb128 0x2
 30035 1f94 91       		.byte	0x91
 30036 1f95 70       		.sleb128 -16
 30037 1f96 23       		.uleb128 0x23
 30038 1f97 F2130000 		.4byte	.LASF333
 30039 1f9b 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 651


 30040 1f9c 970E     		.2byte	0xe97
 30041 1f9e AF000000 		.4byte	0xaf
 30042 1fa2 02       		.uleb128 0x2
 30043 1fa3 91       		.byte	0x91
 30044 1fa4 6C       		.sleb128 -20
 30045 1fa5 23       		.uleb128 0x23
 30046 1fa6 E2040000 		.4byte	.LASF334
 30047 1faa 01       		.byte	0x1
 30048 1fab 980E     		.2byte	0xe98
 30049 1fad 97000000 		.4byte	0x97
 30050 1fb1 02       		.uleb128 0x2
 30051 1fb2 91       		.byte	0x91
 30052 1fb3 75       		.sleb128 -11
 30053 1fb4 00       		.byte	0
 30054 1fb5 09       		.uleb128 0x9
 30055 1fb6 97000000 		.4byte	0x97
 30056 1fba C51F0000 		.4byte	0x1fc5
 30057 1fbe 0A       		.uleb128 0xa
 30058 1fbf 18010000 		.4byte	0x118
 30059 1fc3 0F       		.byte	0xf
 30060 1fc4 00       		.byte	0
 30061 1fc5 30       		.uleb128 0x30
 30062 1fc6 0F010000 		.4byte	.LASF364
 30063 1fca 01       		.byte	0x1
 30064 1fcb B50E     		.2byte	0xeb5
 30065 1fcd 00000000 		.4byte	.LFB105
 30066 1fd1 34000000 		.4byte	.LFE105-.LFB105
 30067 1fd5 01       		.uleb128 0x1
 30068 1fd6 9C       		.byte	0x9c
 30069 1fd7 27       		.uleb128 0x27
 30070 1fd8 37040000 		.4byte	.LASF335
 30071 1fdc 01       		.byte	0x1
 30072 1fdd C30E     		.2byte	0xec3
 30073 1fdf 00000000 		.4byte	.LFB106
 30074 1fe3 20000000 		.4byte	.LFE106-.LFB106
 30075 1fe7 01       		.uleb128 0x1
 30076 1fe8 9C       		.byte	0x9c
 30077 1fe9 FD1F0000 		.4byte	0x1ffd
 30078 1fed 23       		.uleb128 0x23
 30079 1fee 70060000 		.4byte	.LASF233
 30080 1ff2 01       		.byte	0x1
 30081 1ff3 C50E     		.2byte	0xec5
 30082 1ff5 CC080000 		.4byte	0x8cc
 30083 1ff9 02       		.uleb128 0x2
 30084 1ffa 91       		.byte	0x91
 30085 1ffb 74       		.sleb128 -12
 30086 1ffc 00       		.byte	0
 30087 1ffd 27       		.uleb128 0x27
 30088 1ffe 87010000 		.4byte	.LASF336
 30089 2002 01       		.byte	0x1
 30090 2003 D10E     		.2byte	0xed1
 30091 2005 00000000 		.4byte	.LFB107
 30092 2009 A0000000 		.4byte	.LFE107-.LFB107
 30093 200d 01       		.uleb128 0x1
 30094 200e 9C       		.byte	0x9c
 30095 200f 32200000 		.4byte	0x2032
 30096 2013 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 652


 30097 2014 70060000 		.4byte	.LASF233
 30098 2018 01       		.byte	0x1
 30099 2019 D50E     		.2byte	0xed5
 30100 201b 90090000 		.4byte	0x990
 30101 201f 02       		.uleb128 0x2
 30102 2020 91       		.byte	0x91
 30103 2021 70       		.sleb128 -16
 30104 2022 23       		.uleb128 0x23
 30105 2023 81120000 		.4byte	.LASF239
 30106 2027 01       		.byte	0x1
 30107 2028 D60E     		.2byte	0xed6
 30108 202a C7000000 		.4byte	0xc7
 30109 202e 02       		.uleb128 0x2
 30110 202f 91       		.byte	0x91
 30111 2030 6E       		.sleb128 -18
 30112 2031 00       		.byte	0
 30113 2032 27       		.uleb128 0x27
 30114 2033 51110000 		.4byte	.LASF337
 30115 2037 01       		.byte	0x1
 30116 2038 EA0E     		.2byte	0xeea
 30117 203a 00000000 		.4byte	.LFB108
 30118 203e BC010000 		.4byte	.LFE108-.LFB108
 30119 2042 01       		.uleb128 0x1
 30120 2043 9C       		.byte	0x9c
 30121 2044 94200000 		.4byte	0x2094
 30122 2048 23       		.uleb128 0x23
 30123 2049 610C0000 		.4byte	.LASF338
 30124 204d 01       		.byte	0x1
 30125 204e ED0E     		.2byte	0xeed
 30126 2050 AF000000 		.4byte	0xaf
 30127 2054 02       		.uleb128 0x2
 30128 2055 91       		.byte	0x91
 30129 2056 70       		.sleb128 -16
 30130 2057 23       		.uleb128 0x23
 30131 2058 900F0000 		.4byte	.LASF339
 30132 205c 01       		.byte	0x1
 30133 205d EE0E     		.2byte	0xeee
 30134 205f EB000000 		.4byte	0xeb
 30135 2063 02       		.uleb128 0x2
 30136 2064 91       		.byte	0x91
 30137 2065 6C       		.sleb128 -20
 30138 2066 23       		.uleb128 0x23
 30139 2067 EF0B0000 		.4byte	.LASF234
 30140 206b 01       		.byte	0x1
 30141 206c EF0E     		.2byte	0xeef
 30142 206e 97000000 		.4byte	0x97
 30143 2072 02       		.uleb128 0x2
 30144 2073 91       		.byte	0x91
 30145 2074 77       		.sleb128 -9
 30146 2075 23       		.uleb128 0x23
 30147 2076 70060000 		.4byte	.LASF233
 30148 207a 01       		.byte	0x1
 30149 207b F00E     		.2byte	0xef0
 30150 207d CC080000 		.4byte	0x8cc
 30151 2081 02       		.uleb128 0x2
 30152 2082 91       		.byte	0x91
 30153 2083 68       		.sleb128 -24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 653


 30154 2084 23       		.uleb128 0x23
 30155 2085 4F100000 		.4byte	.LASF297
 30156 2089 01       		.byte	0x1
 30157 208a F10E     		.2byte	0xef1
 30158 208c 97000000 		.4byte	0x97
 30159 2090 02       		.uleb128 0x2
 30160 2091 91       		.byte	0x91
 30161 2092 6B       		.sleb128 -21
 30162 2093 00       		.byte	0
 30163 2094 27       		.uleb128 0x27
 30164 2095 40020000 		.4byte	.LASF340
 30165 2099 01       		.byte	0x1
 30166 209a 2B0F     		.2byte	0xf2b
 30167 209c 00000000 		.4byte	.LFB109
 30168 20a0 60000000 		.4byte	.LFE109-.LFB109
 30169 20a4 01       		.uleb128 0x1
 30170 20a5 9C       		.byte	0x9c
 30171 20a6 C9200000 		.4byte	0x20c9
 30172 20aa 23       		.uleb128 0x23
 30173 20ab 70060000 		.4byte	.LASF233
 30174 20af 01       		.byte	0x1
 30175 20b0 2D0F     		.2byte	0xf2d
 30176 20b2 90090000 		.4byte	0x990
 30177 20b6 02       		.uleb128 0x2
 30178 20b7 91       		.byte	0x91
 30179 20b8 70       		.sleb128 -16
 30180 20b9 23       		.uleb128 0x23
 30181 20ba 81120000 		.4byte	.LASF239
 30182 20be 01       		.byte	0x1
 30183 20bf 2E0F     		.2byte	0xf2e
 30184 20c1 C7000000 		.4byte	0xc7
 30185 20c5 02       		.uleb128 0x2
 30186 20c6 91       		.byte	0x91
 30187 20c7 6E       		.sleb128 -18
 30188 20c8 00       		.byte	0
 30189 20c9 27       		.uleb128 0x27
 30190 20ca C3010000 		.4byte	.LASF341
 30191 20ce 01       		.byte	0x1
 30192 20cf 410F     		.2byte	0xf41
 30193 20d1 00000000 		.4byte	.LFB110
 30194 20d5 98050000 		.4byte	.LFE110-.LFB110
 30195 20d9 01       		.uleb128 0x1
 30196 20da 9C       		.byte	0x9c
 30197 20db 56210000 		.4byte	0x2156
 30198 20df 23       		.uleb128 0x23
 30199 20e0 40140000 		.4byte	.LASF342
 30200 20e4 01       		.byte	0x1
 30201 20e5 440F     		.2byte	0xf44
 30202 20e7 97000000 		.4byte	0x97
 30203 20eb 02       		.uleb128 0x2
 30204 20ec 91       		.byte	0x91
 30205 20ed 6F       		.sleb128 -17
 30206 20ee 26       		.uleb128 0x26
 30207 20ef 6300     		.ascii	"c\000"
 30208 20f1 01       		.byte	0x1
 30209 20f2 450F     		.2byte	0xf45
 30210 20f4 A3000000 		.4byte	0xa3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 654


 30211 20f8 02       		.uleb128 0x2
 30212 20f9 91       		.byte	0x91
 30213 20fa 6C       		.sleb128 -20
 30214 20fb 26       		.uleb128 0x26
 30215 20fc 6B00     		.ascii	"k\000"
 30216 20fe 01       		.byte	0x1
 30217 20ff 460F     		.2byte	0xf46
 30218 2101 97000000 		.4byte	0x97
 30219 2105 02       		.uleb128 0x2
 30220 2106 91       		.byte	0x91
 30221 2107 6B       		.sleb128 -21
 30222 2108 23       		.uleb128 0x23
 30223 2109 5C000000 		.4byte	.LASF343
 30224 210d 01       		.byte	0x1
 30225 210e 470F     		.2byte	0xf47
 30226 2110 A3000000 		.4byte	0xa3
 30227 2114 02       		.uleb128 0x2
 30228 2115 91       		.byte	0x91
 30229 2116 68       		.sleb128 -24
 30230 2117 23       		.uleb128 0x23
 30231 2118 81120000 		.4byte	.LASF239
 30232 211c 01       		.byte	0x1
 30233 211d 480F     		.2byte	0xf48
 30234 211f C7000000 		.4byte	0xc7
 30235 2123 02       		.uleb128 0x2
 30236 2124 91       		.byte	0x91
 30237 2125 66       		.sleb128 -26
 30238 2126 23       		.uleb128 0x23
 30239 2127 BD130000 		.4byte	.LASF238
 30240 212b 01       		.byte	0x1
 30241 212c 490F     		.2byte	0xf49
 30242 212e EB000000 		.4byte	0xeb
 30243 2132 02       		.uleb128 0x2
 30244 2133 91       		.byte	0x91
 30245 2134 60       		.sleb128 -32
 30246 2135 23       		.uleb128 0x23
 30247 2136 70060000 		.4byte	.LASF233
 30248 213a 01       		.byte	0x1
 30249 213b 4C0F     		.2byte	0xf4c
 30250 213d 56210000 		.4byte	0x2156
 30251 2141 03       		.uleb128 0x3
 30252 2142 91       		.byte	0x91
 30253 2143 807D     		.sleb128 -384
 30254 2145 23       		.uleb128 0x23
 30255 2146 7E090000 		.4byte	.LASF344
 30256 214a 01       		.byte	0x1
 30257 214b 4D0F     		.2byte	0xf4d
 30258 214d 540C0000 		.4byte	0xc54
 30259 2151 03       		.uleb128 0x3
 30260 2152 91       		.byte	0x91
 30261 2153 E07C     		.sleb128 -416
 30262 2155 00       		.byte	0
 30263 2156 09       		.uleb128 0x9
 30264 2157 97000000 		.4byte	0x97
 30265 215b 67210000 		.4byte	0x2167
 30266 215f 24       		.uleb128 0x24
 30267 2160 18010000 		.4byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 655


 30268 2164 5D01     		.2byte	0x15d
 30269 2166 00       		.byte	0
 30270 2167 27       		.uleb128 0x27
 30271 2168 98130000 		.4byte	.LASF345
 30272 216c 01       		.byte	0x1
 30273 216d B00F     		.2byte	0xfb0
 30274 216f 00000000 		.4byte	.LFB111
 30275 2173 8C000000 		.4byte	.LFE111-.LFB111
 30276 2177 01       		.uleb128 0x1
 30277 2178 9C       		.byte	0x9c
 30278 2179 A7210000 		.4byte	0x21a7
 30279 217d 23       		.uleb128 0x23
 30280 217e 70060000 		.4byte	.LASF233
 30281 2182 01       		.byte	0x1
 30282 2183 B30F     		.2byte	0xfb3
 30283 2185 AB0A0000 		.4byte	0xaab
 30284 2189 02       		.uleb128 0x2
 30285 218a 91       		.byte	0x91
 30286 218b 60       		.sleb128 -32
 30287 218c 26       		.uleb128 0x26
 30288 218d 6900     		.ascii	"i\000"
 30289 218f 01       		.byte	0x1
 30290 2190 B40F     		.2byte	0xfb4
 30291 2192 97000000 		.4byte	0x97
 30292 2196 02       		.uleb128 0x2
 30293 2197 91       		.byte	0x91
 30294 2198 6F       		.sleb128 -17
 30295 2199 26       		.uleb128 0x26
 30296 219a 6A00     		.ascii	"j\000"
 30297 219c 01       		.byte	0x1
 30298 219d B40F     		.2byte	0xfb4
 30299 219f 97000000 		.4byte	0x97
 30300 21a3 02       		.uleb128 0x2
 30301 21a4 91       		.byte	0x91
 30302 21a5 6E       		.sleb128 -18
 30303 21a6 00       		.byte	0
 30304 21a7 27       		.uleb128 0x27
 30305 21a8 8B110000 		.4byte	.LASF346
 30306 21ac 01       		.byte	0x1
 30307 21ad C90F     		.2byte	0xfc9
 30308 21af 00000000 		.4byte	.LFB112
 30309 21b3 EC000000 		.4byte	.LFE112-.LFB112
 30310 21b7 01       		.uleb128 0x1
 30311 21b8 9C       		.byte	0x9c
 30312 21b9 05220000 		.4byte	0x2205
 30313 21bd 23       		.uleb128 0x23
 30314 21be 70060000 		.4byte	.LASF233
 30315 21c2 01       		.byte	0x1
 30316 21c3 CC0F     		.2byte	0xfcc
 30317 21c5 05220000 		.4byte	0x2205
 30318 21c9 02       		.uleb128 0x2
 30319 21ca 91       		.byte	0x91
 30320 21cb 54       		.sleb128 -44
 30321 21cc 26       		.uleb128 0x26
 30322 21cd 6900     		.ascii	"i\000"
 30323 21cf 01       		.byte	0x1
 30324 21d0 CD0F     		.2byte	0xfcd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 656


 30325 21d2 97000000 		.4byte	0x97
 30326 21d6 02       		.uleb128 0x2
 30327 21d7 91       		.byte	0x91
 30328 21d8 6F       		.sleb128 -17
 30329 21d9 26       		.uleb128 0x26
 30330 21da 6A00     		.ascii	"j\000"
 30331 21dc 01       		.byte	0x1
 30332 21dd CD0F     		.2byte	0xfcd
 30333 21df 97000000 		.4byte	0x97
 30334 21e3 02       		.uleb128 0x2
 30335 21e4 91       		.byte	0x91
 30336 21e5 6E       		.sleb128 -18
 30337 21e6 26       		.uleb128 0x26
 30338 21e7 69647800 		.ascii	"idx\000"
 30339 21eb 01       		.byte	0x1
 30340 21ec CD0F     		.2byte	0xfcd
 30341 21ee 97000000 		.4byte	0x97
 30342 21f2 02       		.uleb128 0x2
 30343 21f3 91       		.byte	0x91
 30344 21f4 6D       		.sleb128 -19
 30345 21f5 23       		.uleb128 0x23
 30346 21f6 480D0000 		.4byte	.LASF240
 30347 21fa 01       		.byte	0x1
 30348 21fb CE0F     		.2byte	0xfce
 30349 21fd A3000000 		.4byte	0xa3
 30350 2201 02       		.uleb128 0x2
 30351 2202 91       		.byte	0x91
 30352 2203 52       		.sleb128 -46
 30353 2204 00       		.byte	0
 30354 2205 09       		.uleb128 0x9
 30355 2206 97000000 		.4byte	0x97
 30356 220a 15220000 		.4byte	0x2215
 30357 220e 0A       		.uleb128 0xa
 30358 220f 18010000 		.4byte	0x118
 30359 2213 15       		.byte	0x15
 30360 2214 00       		.byte	0
 30361 2215 27       		.uleb128 0x27
 30362 2216 DC030000 		.4byte	.LASF347
 30363 221a 01       		.byte	0x1
 30364 221b E70F     		.2byte	0xfe7
 30365 221d 00000000 		.4byte	.LFB113
 30366 2221 5C000000 		.4byte	.LFE113-.LFB113
 30367 2225 01       		.uleb128 0x1
 30368 2226 9C       		.byte	0x9c
 30369 2227 48220000 		.4byte	0x2248
 30370 222b 23       		.uleb128 0x23
 30371 222c 70060000 		.4byte	.LASF233
 30372 2230 01       		.byte	0x1
 30373 2231 EA0F     		.2byte	0xfea
 30374 2233 440C0000 		.4byte	0xc44
 30375 2237 02       		.uleb128 0x2
 30376 2238 91       		.byte	0x91
 30377 2239 68       		.sleb128 -24
 30378 223a 26       		.uleb128 0x26
 30379 223b 6900     		.ascii	"i\000"
 30380 223d 01       		.byte	0x1
 30381 223e EB0F     		.2byte	0xfeb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 657


 30382 2240 97000000 		.4byte	0x97
 30383 2244 02       		.uleb128 0x2
 30384 2245 91       		.byte	0x91
 30385 2246 77       		.sleb128 -9
 30386 2247 00       		.byte	0
 30387 2248 27       		.uleb128 0x27
 30388 2249 14040000 		.4byte	.LASF348
 30389 224d 01       		.byte	0x1
 30390 224e FE0F     		.2byte	0xffe
 30391 2250 00000000 		.4byte	.LFB114
 30392 2254 C0000000 		.4byte	.LFE114-.LFB114
 30393 2258 01       		.uleb128 0x1
 30394 2259 9C       		.byte	0x9c
 30395 225a 99220000 		.4byte	0x2299
 30396 225e 23       		.uleb128 0x23
 30397 225f 70060000 		.4byte	.LASF233
 30398 2263 01       		.byte	0x1
 30399 2264 0110     		.2byte	0x1001
 30400 2266 99220000 		.4byte	0x2299
 30401 226a 02       		.uleb128 0x2
 30402 226b 91       		.byte	0x91
 30403 226c 54       		.sleb128 -44
 30404 226d 26       		.uleb128 0x26
 30405 226e 6900     		.ascii	"i\000"
 30406 2270 01       		.byte	0x1
 30407 2271 0210     		.2byte	0x1002
 30408 2273 97000000 		.4byte	0x97
 30409 2277 02       		.uleb128 0x2
 30410 2278 91       		.byte	0x91
 30411 2279 6F       		.sleb128 -17
 30412 227a 26       		.uleb128 0x26
 30413 227b 69647800 		.ascii	"idx\000"
 30414 227f 01       		.byte	0x1
 30415 2280 0210     		.2byte	0x1002
 30416 2282 97000000 		.4byte	0x97
 30417 2286 02       		.uleb128 0x2
 30418 2287 91       		.byte	0x91
 30419 2288 6E       		.sleb128 -18
 30420 2289 23       		.uleb128 0x23
 30421 228a 81120000 		.4byte	.LASF239
 30422 228e 01       		.byte	0x1
 30423 228f 0310     		.2byte	0x1003
 30424 2291 C7000000 		.4byte	0xc7
 30425 2295 02       		.uleb128 0x2
 30426 2296 91       		.byte	0x91
 30427 2297 52       		.sleb128 -46
 30428 2298 00       		.byte	0
 30429 2299 09       		.uleb128 0x9
 30430 229a 97000000 		.4byte	0x97
 30431 229e A9220000 		.4byte	0x22a9
 30432 22a2 0A       		.uleb128 0xa
 30433 22a3 18010000 		.4byte	0x118
 30434 22a7 19       		.byte	0x19
 30435 22a8 00       		.byte	0
 30436 22a9 22       		.uleb128 0x22
 30437 22aa 86030000 		.4byte	.LASF349
 30438 22ae 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 658


 30439 22af 1910     		.2byte	0x1019
 30440 22b1 00000000 		.4byte	.LFB115
 30441 22b5 54010000 		.4byte	.LFE115-.LFB115
 30442 22b9 01       		.uleb128 0x1
 30443 22ba 9C       		.byte	0x9c
 30444 22bb FE220000 		.4byte	0x22fe
 30445 22bf 25       		.uleb128 0x25
 30446 22c0 AD070000 		.4byte	.LASF350
 30447 22c4 01       		.byte	0x1
 30448 22c5 1910     		.2byte	0x1019
 30449 22c7 A3000000 		.4byte	0xa3
 30450 22cb 04       		.uleb128 0x4
 30451 22cc 91       		.byte	0x91
 30452 22cd 9EE37E   		.sleb128 -20066
 30453 22d0 26       		.uleb128 0x26
 30454 22d1 6900     		.ascii	"i\000"
 30455 22d3 01       		.byte	0x1
 30456 22d4 1B10     		.2byte	0x101b
 30457 22d6 97000000 		.4byte	0x97
 30458 22da 02       		.uleb128 0x2
 30459 22db 91       		.byte	0x91
 30460 22dc 77       		.sleb128 -9
 30461 22dd 23       		.uleb128 0x23
 30462 22de C7040000 		.4byte	.LASF351
 30463 22e2 01       		.byte	0x1
 30464 22e3 1C10     		.2byte	0x101c
 30465 22e5 EF100000 		.4byte	0x10ef
 30466 22e9 02       		.uleb128 0x2
 30467 22ea 91       		.byte	0x91
 30468 22eb 44       		.sleb128 -60
 30469 22ec 23       		.uleb128 0x23
 30470 22ed CE080000 		.4byte	.LASF222
 30471 22f1 01       		.byte	0x1
 30472 22f2 1D10     		.2byte	0x101d
 30473 22f4 170F0000 		.4byte	0xf17
 30474 22f8 04       		.uleb128 0x4
 30475 22f9 91       		.byte	0x91
 30476 22fa A4E37E   		.sleb128 -20060
 30477 22fd 00       		.byte	0
 30478 22fe 22       		.uleb128 0x22
 30479 22ff 64040000 		.4byte	.LASF352
 30480 2303 01       		.byte	0x1
 30481 2304 3510     		.2byte	0x1035
 30482 2306 00000000 		.4byte	.LFB116
 30483 230a B0000000 		.4byte	.LFE116-.LFB116
 30484 230e 01       		.uleb128 0x1
 30485 230f 9C       		.byte	0x9c
 30486 2310 5F230000 		.4byte	0x235f
 30487 2314 25       		.uleb128 0x25
 30488 2315 AD070000 		.4byte	.LASF350
 30489 2319 01       		.byte	0x1
 30490 231a 3510     		.2byte	0x1035
 30491 231c A3000000 		.4byte	0xa3
 30492 2320 03       		.uleb128 0x3
 30493 2321 91       		.byte	0x91
 30494 2322 BE7F     		.sleb128 -66
 30495 2324 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 659


 30496 2325 6900     		.ascii	"i\000"
 30497 2327 01       		.byte	0x1
 30498 2328 3710     		.2byte	0x1037
 30499 232a 97000000 		.4byte	0x97
 30500 232e 02       		.uleb128 0x2
 30501 232f 91       		.byte	0x91
 30502 2330 77       		.sleb128 -9
 30503 2331 23       		.uleb128 0x23
 30504 2332 C7040000 		.4byte	.LASF351
 30505 2336 01       		.byte	0x1
 30506 2337 3810     		.2byte	0x1038
 30507 2339 EF100000 		.4byte	0x10ef
 30508 233d 02       		.uleb128 0x2
 30509 233e 91       		.byte	0x91
 30510 233f 44       		.sleb128 -60
 30511 2340 26       		.uleb128 0x26
 30512 2341 72657300 		.ascii	"res\000"
 30513 2345 01       		.byte	0x1
 30514 2346 4110     		.2byte	0x1041
 30515 2348 97000000 		.4byte	0x97
 30516 234c 02       		.uleb128 0x2
 30517 234d 91       		.byte	0x91
 30518 234e 76       		.sleb128 -10
 30519 234f 23       		.uleb128 0x23
 30520 2350 70060000 		.4byte	.LASF233
 30521 2354 01       		.byte	0x1
 30522 2355 4410     		.2byte	0x1044
 30523 2357 10060000 		.4byte	0x610
 30524 235b 02       		.uleb128 0x2
 30525 235c 91       		.byte	0x91
 30526 235d 40       		.sleb128 -64
 30527 235e 00       		.byte	0
 30528 235f 28       		.uleb128 0x28
 30529 2360 20010000 		.4byte	.LASF353
 30530 2364 01       		.byte	0x1
 30531 2365 5610     		.2byte	0x1056
 30532 2367 00000000 		.4byte	.LFB117
 30533 236b 12000000 		.4byte	.LFE117-.LFB117
 30534 236f 01       		.uleb128 0x1
 30535 2370 9C       		.byte	0x9c
 30536 2371 85230000 		.4byte	0x2385
 30537 2375 25       		.uleb128 0x25
 30538 2376 13070000 		.4byte	.LASF354
 30539 237a 01       		.byte	0x1
 30540 237b 5610     		.2byte	0x1056
 30541 237d 73000000 		.4byte	0x73
 30542 2381 02       		.uleb128 0x2
 30543 2382 91       		.byte	0x91
 30544 2383 74       		.sleb128 -12
 30545 2384 00       		.byte	0
 30546 2385 31       		.uleb128 0x31
 30547 2386 B40C0000 		.4byte	.LASF355
 30548 238a 01       		.byte	0x1
 30549 238b A410     		.2byte	0x10a4
 30550 238d 97000000 		.4byte	0x97
 30551 2391 00000000 		.4byte	.LFB118
 30552 2395 64010000 		.4byte	.LFE118-.LFB118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 660


 30553 2399 01       		.uleb128 0x1
 30554 239a 9C       		.byte	0x9c
 30555 239b 00240000 		.4byte	0x2400
 30556 239f 23       		.uleb128 0x23
 30557 23a0 AD0E0000 		.4byte	.LASF356
 30558 23a4 01       		.byte	0x1
 30559 23a5 A610     		.2byte	0x10a6
 30560 23a7 97000000 		.4byte	0x97
 30561 23ab 05       		.uleb128 0x5
 30562 23ac 03       		.byte	0x3
 30563 23ad 0C000000 		.4byte	fsm_state.11560
 30564 23b1 26       		.uleb128 0x26
 30565 23b2 636E7400 		.ascii	"cnt\000"
 30566 23b6 01       		.byte	0x1
 30567 23b7 A710     		.2byte	0x10a7
 30568 23b9 D3000000 		.4byte	0xd3
 30569 23bd 05       		.uleb128 0x5
 30570 23be 03       		.byte	0x3
 30571 23bf 10000000 		.4byte	cnt.11561
 30572 23c3 23       		.uleb128 0x23
 30573 23c4 B4040000 		.4byte	.LASF357
 30574 23c8 01       		.byte	0x1
 30575 23c9 A810     		.2byte	0x10a8
 30576 23cb D3000000 		.4byte	0xd3
 30577 23cf 02       		.uleb128 0x2
 30578 23d0 91       		.byte	0x91
 30579 23d1 74       		.sleb128 -12
 30580 23d2 23       		.uleb128 0x23
 30581 23d3 D60B0000 		.4byte	.LASF358
 30582 23d7 01       		.byte	0x1
 30583 23d8 A810     		.2byte	0x10a8
 30584 23da D3000000 		.4byte	0xd3
 30585 23de 02       		.uleb128 0x2
 30586 23df 91       		.byte	0x91
 30587 23e0 70       		.sleb128 -16
 30588 23e1 23       		.uleb128 0x23
 30589 23e2 A7000000 		.4byte	.LASF359
 30590 23e6 01       		.byte	0x1
 30591 23e7 A910     		.2byte	0x10a9
 30592 23e9 D3000000 		.4byte	0xd3
 30593 23ed 02       		.uleb128 0x2
 30594 23ee 91       		.byte	0x91
 30595 23ef 6C       		.sleb128 -20
 30596 23f0 23       		.uleb128 0x23
 30597 23f1 B3000000 		.4byte	.LASF360
 30598 23f5 01       		.byte	0x1
 30599 23f6 A910     		.2byte	0x10a9
 30600 23f8 D3000000 		.4byte	0xd3
 30601 23fc 02       		.uleb128 0x2
 30602 23fd 91       		.byte	0x91
 30603 23fe 68       		.sleb128 -24
 30604 23ff 00       		.byte	0
 30605 2400 28       		.uleb128 0x28
 30606 2401 14080000 		.4byte	.LASF361
 30607 2405 01       		.byte	0x1
 30608 2406 F610     		.2byte	0x10f6
 30609 2408 00000000 		.4byte	.LFB119
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 661


 30610 240c 12000000 		.4byte	.LFE119-.LFB119
 30611 2410 01       		.uleb128 0x1
 30612 2411 9C       		.byte	0x9c
 30613 2412 26240000 		.4byte	0x2426
 30614 2416 25       		.uleb128 0x25
 30615 2417 13070000 		.4byte	.LASF354
 30616 241b 01       		.byte	0x1
 30617 241c F610     		.2byte	0x10f6
 30618 241e 73000000 		.4byte	0x73
 30619 2422 02       		.uleb128 0x2
 30620 2423 91       		.byte	0x91
 30621 2424 74       		.sleb128 -12
 30622 2425 00       		.byte	0
 30623 2426 28       		.uleb128 0x28
 30624 2427 410E0000 		.4byte	.LASF362
 30625 242b 01       		.byte	0x1
 30626 242c 4211     		.2byte	0x1142
 30627 242e 00000000 		.4byte	.LFB120
 30628 2432 1A000000 		.4byte	.LFE120-.LFB120
 30629 2436 01       		.uleb128 0x1
 30630 2437 9C       		.byte	0x9c
 30631 2438 5B240000 		.4byte	0x245b
 30632 243c 25       		.uleb128 0x25
 30633 243d 64030000 		.4byte	.LASF363
 30634 2441 01       		.byte	0x1
 30635 2442 4211     		.2byte	0x1142
 30636 2444 97000000 		.4byte	0x97
 30637 2448 02       		.uleb128 0x2
 30638 2449 91       		.byte	0x91
 30639 244a 77       		.sleb128 -9
 30640 244b 25       		.uleb128 0x25
 30641 244c 420B0000 		.4byte	.LASF190
 30642 2450 01       		.byte	0x1
 30643 2451 4211     		.2byte	0x1142
 30644 2453 97000000 		.4byte	0x97
 30645 2457 02       		.uleb128 0x2
 30646 2458 91       		.byte	0x91
 30647 2459 76       		.sleb128 -10
 30648 245a 00       		.byte	0
 30649 245b 32       		.uleb128 0x32
 30650 245c BF000000 		.4byte	.LASF365
 30651 2460 01       		.byte	0x1
 30652 2461 6C11     		.2byte	0x116c
 30653 2463 00000000 		.4byte	.LFB121
 30654 2467 0C000000 		.4byte	.LFE121-.LFB121
 30655 246b 01       		.uleb128 0x1
 30656 246c 9C       		.byte	0x9c
 30657 246d 32       		.uleb128 0x32
 30658 246e 9F060000 		.4byte	.LASF366
 30659 2472 01       		.byte	0x1
 30660 2473 8211     		.2byte	0x1182
 30661 2475 00000000 		.4byte	.LFB122
 30662 2479 0C000000 		.4byte	.LFE122-.LFB122
 30663 247d 01       		.uleb128 0x1
 30664 247e 9C       		.byte	0x9c
 30665 247f 33       		.uleb128 0x33
 30666 2480 CA120000 		.4byte	.LASF367
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 662


 30667 2484 09       		.byte	0x9
 30668 2485 1207     		.2byte	0x712
 30669 2487 8B240000 		.4byte	0x248b
 30670 248b 06       		.uleb128 0x6
 30671 248c 81000000 		.4byte	0x81
 30672 2490 09       		.uleb128 0x9
 30673 2491 28030000 		.4byte	0x328
 30674 2495 A0240000 		.4byte	0x24a0
 30675 2499 0A       		.uleb128 0xa
 30676 249a 18010000 		.4byte	0x118
 30677 249e 01       		.byte	0x1
 30678 249f 00       		.byte	0
 30679 24a0 33       		.uleb128 0x33
 30680 24a1 9A140000 		.4byte	.LASF368
 30681 24a5 08       		.byte	0x8
 30682 24a6 2202     		.2byte	0x222
 30683 24a8 90240000 		.4byte	0x2490
 30684 24ac 33       		.uleb128 0x33
 30685 24ad 2C050000 		.4byte	.LASF369
 30686 24b1 08       		.byte	0x8
 30687 24b2 2202     		.2byte	0x222
 30688 24b4 90240000 		.4byte	0x2490
 30689 24b8 33       		.uleb128 0x33
 30690 24b9 FA0D0000 		.4byte	.LASF370
 30691 24bd 08       		.byte	0x8
 30692 24be 2202     		.2byte	0x222
 30693 24c0 90240000 		.4byte	0x2490
 30694 24c4 09       		.uleb128 0x9
 30695 24c5 65030000 		.4byte	0x365
 30696 24c9 D4240000 		.4byte	0x24d4
 30697 24cd 0A       		.uleb128 0xa
 30698 24ce 18010000 		.4byte	0x118
 30699 24d2 01       		.byte	0x1
 30700 24d3 00       		.byte	0
 30701 24d4 33       		.uleb128 0x33
 30702 24d5 23070000 		.4byte	.LASF371
 30703 24d9 08       		.byte	0x8
 30704 24da 2302     		.2byte	0x223
 30705 24dc C4240000 		.4byte	0x24c4
 30706 24e0 33       		.uleb128 0x33
 30707 24e1 ED140000 		.4byte	.LASF372
 30708 24e5 08       		.byte	0x8
 30709 24e6 2302     		.2byte	0x223
 30710 24e8 C4240000 		.4byte	0x24c4
 30711 24ec 33       		.uleb128 0x33
 30712 24ed 64140000 		.4byte	.LASF373
 30713 24f1 08       		.byte	0x8
 30714 24f2 2402     		.2byte	0x224
 30715 24f4 E6030000 		.4byte	0x3e6
 30716 24f8 33       		.uleb128 0x33
 30717 24f9 7D110000 		.4byte	.LASF374
 30718 24fd 08       		.byte	0x8
 30719 24fe 2402     		.2byte	0x224
 30720 2500 E6030000 		.4byte	0x3e6
 30721 2504 33       		.uleb128 0x33
 30722 2505 33110000 		.4byte	.LASF375
 30723 2509 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 663


 30724 250a 2502     		.2byte	0x225
 30725 250c 37040000 		.4byte	0x437
 30726 2510 33       		.uleb128 0x33
 30727 2511 DA000000 		.4byte	.LASF376
 30728 2515 08       		.byte	0x8
 30729 2516 2602     		.2byte	0x226
 30730 2518 52040000 		.4byte	0x452
 30731 251c 33       		.uleb128 0x33
 30732 251d 62110000 		.4byte	.LASF377
 30733 2521 08       		.byte	0x8
 30734 2522 2702     		.2byte	0x227
 30735 2524 5F0B0000 		.4byte	0xb5f
 30736 2528 33       		.uleb128 0x33
 30737 2529 B80B0000 		.4byte	.LASF378
 30738 252d 08       		.byte	0x8
 30739 252e 2702     		.2byte	0x227
 30740 2530 5F0B0000 		.4byte	0xb5f
 30741 2534 33       		.uleb128 0x33
 30742 2535 7B0A0000 		.4byte	.LASF379
 30743 2539 08       		.byte	0x8
 30744 253a 2802     		.2byte	0x228
 30745 253c 100D0000 		.4byte	0xd10
 30746 2540 33       		.uleb128 0x33
 30747 2541 41030000 		.4byte	.LASF380
 30748 2545 08       		.byte	0x8
 30749 2546 2E02     		.2byte	0x22e
 30750 2548 A3000000 		.4byte	0xa3
 30751 254c 33       		.uleb128 0x33
 30752 254d 400F0000 		.4byte	.LASF381
 30753 2551 08       		.byte	0x8
 30754 2552 2F02     		.2byte	0x22f
 30755 2554 A3000000 		.4byte	0xa3
 30756 2558 33       		.uleb128 0x33
 30757 2559 720F0000 		.4byte	.LASF382
 30758 255d 08       		.byte	0x8
 30759 255e 3202     		.2byte	0x232
 30760 2560 17040000 		.4byte	0x417
 30761 2564 33       		.uleb128 0x33
 30762 2565 61130000 		.4byte	.LASF383
 30763 2569 08       		.byte	0x8
 30764 256a 3302     		.2byte	0x233
 30765 256c BC080000 		.4byte	0x8bc
 30766 2570 33       		.uleb128 0x33
 30767 2571 EA120000 		.4byte	.LASF384
 30768 2575 08       		.byte	0x8
 30769 2576 3602     		.2byte	0x236
 30770 2578 17040000 		.4byte	0x417
 30771 257c 33       		.uleb128 0x33
 30772 257d 4B0B0000 		.4byte	.LASF385
 30773 2581 08       		.byte	0x8
 30774 2582 4002     		.2byte	0x240
 30775 2584 CC080000 		.4byte	0x8cc
 30776 2588 33       		.uleb128 0x33
 30777 2589 F4040000 		.4byte	.LASF386
 30778 258d 08       		.byte	0x8
 30779 258e 4202     		.2byte	0x242
 30780 2590 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 664


 30781 2594 33       		.uleb128 0x33
 30782 2595 D00A0000 		.4byte	.LASF387
 30783 2599 08       		.byte	0x8
 30784 259a 4902     		.2byte	0x249
 30785 259c 97000000 		.4byte	0x97
 30786 25a0 33       		.uleb128 0x33
 30787 25a1 04080000 		.4byte	.LASF388
 30788 25a5 08       		.byte	0x8
 30789 25a6 4A02     		.2byte	0x24a
 30790 25a8 97000000 		.4byte	0x97
 30791 25ac 09       		.uleb128 0x9
 30792 25ad C7000000 		.4byte	0xc7
 30793 25b1 BC250000 		.4byte	0x25bc
 30794 25b5 0A       		.uleb128 0xa
 30795 25b6 18010000 		.4byte	0x118
 30796 25ba 0B       		.byte	0xb
 30797 25bb 00       		.byte	0
 30798 25bc 33       		.uleb128 0x33
 30799 25bd EC040000 		.4byte	.LASF389
 30800 25c1 08       		.byte	0x8
 30801 25c2 4D02     		.2byte	0x24d
 30802 25c4 AC250000 		.4byte	0x25ac
 30803 25c8 33       		.uleb128 0x33
 30804 25c9 A6140000 		.4byte	.LASF390
 30805 25cd 08       		.byte	0x8
 30806 25ce 4E02     		.2byte	0x24e
 30807 25d0 97000000 		.4byte	0x97
 30808 25d4 09       		.uleb128 0x9
 30809 25d5 AF000000 		.4byte	0xaf
 30810 25d9 EA250000 		.4byte	0x25ea
 30811 25dd 0A       		.uleb128 0xa
 30812 25de 18010000 		.4byte	0x118
 30813 25e2 01       		.byte	0x1
 30814 25e3 0A       		.uleb128 0xa
 30815 25e4 18010000 		.4byte	0x118
 30816 25e8 04       		.byte	0x4
 30817 25e9 00       		.byte	0
 30818 25ea 33       		.uleb128 0x33
 30819 25eb 43070000 		.4byte	.LASF391
 30820 25ef 08       		.byte	0x8
 30821 25f0 5402     		.2byte	0x254
 30822 25f2 D4250000 		.4byte	0x25d4
 30823 25f6 33       		.uleb128 0x33
 30824 25f7 5E100000 		.4byte	.LASF392
 30825 25fb 08       		.byte	0x8
 30826 25fc 5502     		.2byte	0x255
 30827 25fe CC080000 		.4byte	0x8cc
 30828 2602 09       		.uleb128 0x9
 30829 2603 A3000000 		.4byte	0xa3
 30830 2607 18260000 		.4byte	0x2618
 30831 260b 0A       		.uleb128 0xa
 30832 260c 18010000 		.4byte	0x118
 30833 2610 01       		.byte	0x1
 30834 2611 0A       		.uleb128 0xa
 30835 2612 18010000 		.4byte	0x118
 30836 2616 04       		.byte	0x4
 30837 2617 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 665


 30838 2618 33       		.uleb128 0x33
 30839 2619 8A130000 		.4byte	.LASF393
 30840 261d 08       		.byte	0x8
 30841 261e 5602     		.2byte	0x256
 30842 2620 02260000 		.4byte	0x2602
 30843 2624 33       		.uleb128 0x33
 30844 2625 86060000 		.4byte	.LASF394
 30845 2629 08       		.byte	0x8
 30846 262a 5E02     		.2byte	0x25e
 30847 262c 22030000 		.4byte	0x322
 30848 2630 33       		.uleb128 0x33
 30849 2631 F80F0000 		.4byte	.LASF395
 30850 2635 08       		.byte	0x8
 30851 2636 5F02     		.2byte	0x25f
 30852 2638 C1160000 		.4byte	0x16c1
 30853 263c 33       		.uleb128 0x33
 30854 263d 24040000 		.4byte	.LASF396
 30855 2641 08       		.byte	0x8
 30856 2642 6002     		.2byte	0x260
 30857 2644 C1160000 		.4byte	0x16c1
 30858 2648 33       		.uleb128 0x33
 30859 2649 2A140000 		.4byte	.LASF397
 30860 264d 08       		.byte	0x8
 30861 264e 6302     		.2byte	0x263
 30862 2650 C1160000 		.4byte	0x16c1
 30863 2654 33       		.uleb128 0x33
 30864 2655 08120000 		.4byte	.LASF398
 30865 2659 08       		.byte	0x8
 30866 265a 6602     		.2byte	0x266
 30867 265c 97000000 		.4byte	0x97
 30868 2660 33       		.uleb128 0x33
 30869 2661 C7130000 		.4byte	.LASF399
 30870 2665 08       		.byte	0x8
 30871 2666 6702     		.2byte	0x267
 30872 2668 3D080000 		.4byte	0x83d
 30873 266c 33       		.uleb128 0x33
 30874 266d BB120000 		.4byte	.LASF400
 30875 2671 08       		.byte	0x8
 30876 2672 6802     		.2byte	0x268
 30877 2674 73000000 		.4byte	0x73
 30878 2678 09       		.uleb128 0x9
 30879 2679 73000000 		.4byte	0x73
 30880 267d 88260000 		.4byte	0x2688
 30881 2681 0A       		.uleb128 0xa
 30882 2682 18010000 		.4byte	0x118
 30883 2686 04       		.byte	0x4
 30884 2687 00       		.byte	0
 30885 2688 33       		.uleb128 0x33
 30886 2689 0A0D0000 		.4byte	.LASF401
 30887 268d 08       		.byte	0x8
 30888 268e 6902     		.2byte	0x269
 30889 2690 78260000 		.4byte	0x2678
 30890 2694 09       		.uleb128 0x9
 30891 2695 940C0000 		.4byte	0xc94
 30892 2699 A4260000 		.4byte	0x26a4
 30893 269d 0A       		.uleb128 0xa
 30894 269e 18010000 		.4byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 666


 30895 26a2 04       		.byte	0x4
 30896 26a3 00       		.byte	0
 30897 26a4 33       		.uleb128 0x33
 30898 26a5 BE050000 		.4byte	.LASF402
 30899 26a9 08       		.byte	0x8
 30900 26aa 6A02     		.2byte	0x26a
 30901 26ac 94260000 		.4byte	0x2694
 30902 26b0 09       		.uleb128 0x9
 30903 26b1 97000000 		.4byte	0x97
 30904 26b5 C6260000 		.4byte	0x26c6
 30905 26b9 0A       		.uleb128 0xa
 30906 26ba 18010000 		.4byte	0x118
 30907 26be 04       		.byte	0x4
 30908 26bf 0A       		.uleb128 0xa
 30909 26c0 18010000 		.4byte	0x118
 30910 26c4 02       		.byte	0x2
 30911 26c5 00       		.byte	0
 30912 26c6 33       		.uleb128 0x33
 30913 26c7 220C0000 		.4byte	.LASF403
 30914 26cb 08       		.byte	0x8
 30915 26cc 6E02     		.2byte	0x26e
 30916 26ce B0260000 		.4byte	0x26b0
 30917 26d2 33       		.uleb128 0x33
 30918 26d3 CC140000 		.4byte	.LASF404
 30919 26d7 08       		.byte	0x8
 30920 26d8 7302     		.2byte	0x273
 30921 26da 97000000 		.4byte	0x97
 30922 26de 09       		.uleb128 0x9
 30923 26df A3000000 		.4byte	0xa3
 30924 26e3 F5260000 		.4byte	0x26f5
 30925 26e7 24       		.uleb128 0x24
 30926 26e8 18010000 		.4byte	0x118
 30927 26ec 5702     		.2byte	0x257
 30928 26ee 0A       		.uleb128 0xa
 30929 26ef 18010000 		.4byte	0x118
 30930 26f3 01       		.byte	0x1
 30931 26f4 00       		.byte	0
 30932 26f5 33       		.uleb128 0x33
 30933 26f6 8B120000 		.4byte	.LASF405
 30934 26fa 08       		.byte	0x8
 30935 26fb 7602     		.2byte	0x276
 30936 26fd DE260000 		.4byte	0x26de
 30937 2701 33       		.uleb128 0x33
 30938 2702 2D0B0000 		.4byte	.LASF406
 30939 2706 08       		.byte	0x8
 30940 2707 7702     		.2byte	0x277
 30941 2709 AF000000 		.4byte	0xaf
 30942 270d 34       		.uleb128 0x34
 30943 270e 97120000 		.4byte	.LASF407
 30944 2712 01       		.byte	0x1
 30945 2713 33       		.byte	0x33
 30946 2714 1E270000 		.4byte	0x271e
 30947 2718 05       		.uleb128 0x5
 30948 2719 03       		.byte	0x3
 30949 271a 00000000 		.4byte	EEPROM_ADDR
 30950 271e 07       		.uleb128 0x7
 30951 271f 04       		.byte	0x4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 667


 30952 2720 00010000 		.4byte	0x100
 30953 2724 00       		.byte	0
 30954              		.section	.debug_abbrev,"",%progbits
 30955              	.Ldebug_abbrev0:
 30956 0000 01       		.uleb128 0x1
 30957 0001 11       		.uleb128 0x11
 30958 0002 01       		.byte	0x1
 30959 0003 25       		.uleb128 0x25
 30960 0004 0E       		.uleb128 0xe
 30961 0005 13       		.uleb128 0x13
 30962 0006 0B       		.uleb128 0xb
 30963 0007 03       		.uleb128 0x3
 30964 0008 0E       		.uleb128 0xe
 30965 0009 1B       		.uleb128 0x1b
 30966 000a 0E       		.uleb128 0xe
 30967 000b 55       		.uleb128 0x55
 30968 000c 17       		.uleb128 0x17
 30969 000d 11       		.uleb128 0x11
 30970 000e 01       		.uleb128 0x1
 30971 000f 10       		.uleb128 0x10
 30972 0010 17       		.uleb128 0x17
 30973 0011 00       		.byte	0
 30974 0012 00       		.byte	0
 30975 0013 02       		.uleb128 0x2
 30976 0014 24       		.uleb128 0x24
 30977 0015 00       		.byte	0
 30978 0016 0B       		.uleb128 0xb
 30979 0017 0B       		.uleb128 0xb
 30980 0018 3E       		.uleb128 0x3e
 30981 0019 0B       		.uleb128 0xb
 30982 001a 03       		.uleb128 0x3
 30983 001b 0E       		.uleb128 0xe
 30984 001c 00       		.byte	0
 30985 001d 00       		.byte	0
 30986 001e 03       		.uleb128 0x3
 30987 001f 16       		.uleb128 0x16
 30988 0020 00       		.byte	0
 30989 0021 03       		.uleb128 0x3
 30990 0022 0E       		.uleb128 0xe
 30991 0023 3A       		.uleb128 0x3a
 30992 0024 0B       		.uleb128 0xb
 30993 0025 3B       		.uleb128 0x3b
 30994 0026 0B       		.uleb128 0xb
 30995 0027 49       		.uleb128 0x49
 30996 0028 13       		.uleb128 0x13
 30997 0029 00       		.byte	0
 30998 002a 00       		.byte	0
 30999 002b 04       		.uleb128 0x4
 31000 002c 24       		.uleb128 0x24
 31001 002d 00       		.byte	0
 31002 002e 0B       		.uleb128 0xb
 31003 002f 0B       		.uleb128 0xb
 31004 0030 3E       		.uleb128 0x3e
 31005 0031 0B       		.uleb128 0xb
 31006 0032 03       		.uleb128 0x3
 31007 0033 08       		.uleb128 0x8
 31008 0034 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 668


 31009 0035 00       		.byte	0
 31010 0036 05       		.uleb128 0x5
 31011 0037 16       		.uleb128 0x16
 31012 0038 00       		.byte	0
 31013 0039 03       		.uleb128 0x3
 31014 003a 0E       		.uleb128 0xe
 31015 003b 3A       		.uleb128 0x3a
 31016 003c 0B       		.uleb128 0xb
 31017 003d 3B       		.uleb128 0x3b
 31018 003e 05       		.uleb128 0x5
 31019 003f 49       		.uleb128 0x49
 31020 0040 13       		.uleb128 0x13
 31021 0041 00       		.byte	0
 31022 0042 00       		.byte	0
 31023 0043 06       		.uleb128 0x6
 31024 0044 35       		.uleb128 0x35
 31025 0045 00       		.byte	0
 31026 0046 49       		.uleb128 0x49
 31027 0047 13       		.uleb128 0x13
 31028 0048 00       		.byte	0
 31029 0049 00       		.byte	0
 31030 004a 07       		.uleb128 0x7
 31031 004b 0F       		.uleb128 0xf
 31032 004c 00       		.byte	0
 31033 004d 0B       		.uleb128 0xb
 31034 004e 0B       		.uleb128 0xb
 31035 004f 49       		.uleb128 0x49
 31036 0050 13       		.uleb128 0x13
 31037 0051 00       		.byte	0
 31038 0052 00       		.byte	0
 31039 0053 08       		.uleb128 0x8
 31040 0054 26       		.uleb128 0x26
 31041 0055 00       		.byte	0
 31042 0056 49       		.uleb128 0x49
 31043 0057 13       		.uleb128 0x13
 31044 0058 00       		.byte	0
 31045 0059 00       		.byte	0
 31046 005a 09       		.uleb128 0x9
 31047 005b 01       		.uleb128 0x1
 31048 005c 01       		.byte	0x1
 31049 005d 49       		.uleb128 0x49
 31050 005e 13       		.uleb128 0x13
 31051 005f 01       		.uleb128 0x1
 31052 0060 13       		.uleb128 0x13
 31053 0061 00       		.byte	0
 31054 0062 00       		.byte	0
 31055 0063 0A       		.uleb128 0xa
 31056 0064 21       		.uleb128 0x21
 31057 0065 00       		.byte	0
 31058 0066 49       		.uleb128 0x49
 31059 0067 13       		.uleb128 0x13
 31060 0068 2F       		.uleb128 0x2f
 31061 0069 0B       		.uleb128 0xb
 31062 006a 00       		.byte	0
 31063 006b 00       		.byte	0
 31064 006c 0B       		.uleb128 0xb
 31065 006d 04       		.uleb128 0x4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 669


 31066 006e 01       		.byte	0x1
 31067 006f 03       		.uleb128 0x3
 31068 0070 0E       		.uleb128 0xe
 31069 0071 0B       		.uleb128 0xb
 31070 0072 0B       		.uleb128 0xb
 31071 0073 49       		.uleb128 0x49
 31072 0074 13       		.uleb128 0x13
 31073 0075 3A       		.uleb128 0x3a
 31074 0076 0B       		.uleb128 0xb
 31075 0077 3B       		.uleb128 0x3b
 31076 0078 0B       		.uleb128 0xb
 31077 0079 01       		.uleb128 0x1
 31078 007a 13       		.uleb128 0x13
 31079 007b 00       		.byte	0
 31080 007c 00       		.byte	0
 31081 007d 0C       		.uleb128 0xc
 31082 007e 28       		.uleb128 0x28
 31083 007f 00       		.byte	0
 31084 0080 03       		.uleb128 0x3
 31085 0081 0E       		.uleb128 0xe
 31086 0082 1C       		.uleb128 0x1c
 31087 0083 0B       		.uleb128 0xb
 31088 0084 00       		.byte	0
 31089 0085 00       		.byte	0
 31090 0086 0D       		.uleb128 0xd
 31091 0087 13       		.uleb128 0x13
 31092 0088 00       		.byte	0
 31093 0089 03       		.uleb128 0x3
 31094 008a 0E       		.uleb128 0xe
 31095 008b 3C       		.uleb128 0x3c
 31096 008c 19       		.uleb128 0x19
 31097 008d 00       		.byte	0
 31098 008e 00       		.byte	0
 31099 008f 0E       		.uleb128 0xe
 31100 0090 13       		.uleb128 0x13
 31101 0091 01       		.byte	0x1
 31102 0092 03       		.uleb128 0x3
 31103 0093 0E       		.uleb128 0xe
 31104 0094 0B       		.uleb128 0xb
 31105 0095 0B       		.uleb128 0xb
 31106 0096 3A       		.uleb128 0x3a
 31107 0097 0B       		.uleb128 0xb
 31108 0098 3B       		.uleb128 0x3b
 31109 0099 0B       		.uleb128 0xb
 31110 009a 01       		.uleb128 0x1
 31111 009b 13       		.uleb128 0x13
 31112 009c 00       		.byte	0
 31113 009d 00       		.byte	0
 31114 009e 0F       		.uleb128 0xf
 31115 009f 0D       		.uleb128 0xd
 31116 00a0 00       		.byte	0
 31117 00a1 03       		.uleb128 0x3
 31118 00a2 08       		.uleb128 0x8
 31119 00a3 3A       		.uleb128 0x3a
 31120 00a4 0B       		.uleb128 0xb
 31121 00a5 3B       		.uleb128 0x3b
 31122 00a6 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 670


 31123 00a7 49       		.uleb128 0x49
 31124 00a8 13       		.uleb128 0x13
 31125 00a9 38       		.uleb128 0x38
 31126 00aa 0B       		.uleb128 0xb
 31127 00ab 00       		.byte	0
 31128 00ac 00       		.byte	0
 31129 00ad 10       		.uleb128 0x10
 31130 00ae 0D       		.uleb128 0xd
 31131 00af 00       		.byte	0
 31132 00b0 03       		.uleb128 0x3
 31133 00b1 0E       		.uleb128 0xe
 31134 00b2 3A       		.uleb128 0x3a
 31135 00b3 0B       		.uleb128 0xb
 31136 00b4 3B       		.uleb128 0x3b
 31137 00b5 0B       		.uleb128 0xb
 31138 00b6 49       		.uleb128 0x49
 31139 00b7 13       		.uleb128 0x13
 31140 00b8 38       		.uleb128 0x38
 31141 00b9 0B       		.uleb128 0xb
 31142 00ba 00       		.byte	0
 31143 00bb 00       		.byte	0
 31144 00bc 11       		.uleb128 0x11
 31145 00bd 13       		.uleb128 0x13
 31146 00be 01       		.byte	0x1
 31147 00bf 03       		.uleb128 0x3
 31148 00c0 0E       		.uleb128 0xe
 31149 00c1 0B       		.uleb128 0xb
 31150 00c2 0B       		.uleb128 0xb
 31151 00c3 3A       		.uleb128 0x3a
 31152 00c4 0B       		.uleb128 0xb
 31153 00c5 3B       		.uleb128 0x3b
 31154 00c6 05       		.uleb128 0x5
 31155 00c7 01       		.uleb128 0x1
 31156 00c8 13       		.uleb128 0x13
 31157 00c9 00       		.byte	0
 31158 00ca 00       		.byte	0
 31159 00cb 12       		.uleb128 0x12
 31160 00cc 0D       		.uleb128 0xd
 31161 00cd 00       		.byte	0
 31162 00ce 03       		.uleb128 0x3
 31163 00cf 0E       		.uleb128 0xe
 31164 00d0 3A       		.uleb128 0x3a
 31165 00d1 0B       		.uleb128 0xb
 31166 00d2 3B       		.uleb128 0x3b
 31167 00d3 05       		.uleb128 0x5
 31168 00d4 49       		.uleb128 0x49
 31169 00d5 13       		.uleb128 0x13
 31170 00d6 38       		.uleb128 0x38
 31171 00d7 0B       		.uleb128 0xb
 31172 00d8 00       		.byte	0
 31173 00d9 00       		.byte	0
 31174 00da 13       		.uleb128 0x13
 31175 00db 0D       		.uleb128 0xd
 31176 00dc 00       		.byte	0
 31177 00dd 03       		.uleb128 0x3
 31178 00de 08       		.uleb128 0x8
 31179 00df 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 671


 31180 00e0 0B       		.uleb128 0xb
 31181 00e1 3B       		.uleb128 0x3b
 31182 00e2 05       		.uleb128 0x5
 31183 00e3 49       		.uleb128 0x49
 31184 00e4 13       		.uleb128 0x13
 31185 00e5 38       		.uleb128 0x38
 31186 00e6 0B       		.uleb128 0xb
 31187 00e7 00       		.byte	0
 31188 00e8 00       		.byte	0
 31189 00e9 14       		.uleb128 0x14
 31190 00ea 13       		.uleb128 0x13
 31191 00eb 01       		.byte	0x1
 31192 00ec 03       		.uleb128 0x3
 31193 00ed 0E       		.uleb128 0xe
 31194 00ee 0B       		.uleb128 0xb
 31195 00ef 05       		.uleb128 0x5
 31196 00f0 3A       		.uleb128 0x3a
 31197 00f1 0B       		.uleb128 0xb
 31198 00f2 3B       		.uleb128 0x3b
 31199 00f3 05       		.uleb128 0x5
 31200 00f4 01       		.uleb128 0x1
 31201 00f5 13       		.uleb128 0x13
 31202 00f6 00       		.byte	0
 31203 00f7 00       		.byte	0
 31204 00f8 15       		.uleb128 0x15
 31205 00f9 0D       		.uleb128 0xd
 31206 00fa 00       		.byte	0
 31207 00fb 03       		.uleb128 0x3
 31208 00fc 08       		.uleb128 0x8
 31209 00fd 3A       		.uleb128 0x3a
 31210 00fe 0B       		.uleb128 0xb
 31211 00ff 3B       		.uleb128 0x3b
 31212 0100 05       		.uleb128 0x5
 31213 0101 49       		.uleb128 0x49
 31214 0102 13       		.uleb128 0x13
 31215 0103 38       		.uleb128 0x38
 31216 0104 05       		.uleb128 0x5
 31217 0105 00       		.byte	0
 31218 0106 00       		.byte	0
 31219 0107 16       		.uleb128 0x16
 31220 0108 0D       		.uleb128 0xd
 31221 0109 00       		.byte	0
 31222 010a 03       		.uleb128 0x3
 31223 010b 0E       		.uleb128 0xe
 31224 010c 3A       		.uleb128 0x3a
 31225 010d 0B       		.uleb128 0xb
 31226 010e 3B       		.uleb128 0x3b
 31227 010f 05       		.uleb128 0x5
 31228 0110 49       		.uleb128 0x49
 31229 0111 13       		.uleb128 0x13
 31230 0112 38       		.uleb128 0x38
 31231 0113 05       		.uleb128 0x5
 31232 0114 00       		.byte	0
 31233 0115 00       		.byte	0
 31234 0116 17       		.uleb128 0x17
 31235 0117 2E       		.uleb128 0x2e
 31236 0118 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 672


 31237 0119 03       		.uleb128 0x3
 31238 011a 0E       		.uleb128 0xe
 31239 011b 3A       		.uleb128 0x3a
 31240 011c 0B       		.uleb128 0xb
 31241 011d 3B       		.uleb128 0x3b
 31242 011e 05       		.uleb128 0x5
 31243 011f 27       		.uleb128 0x27
 31244 0120 19       		.uleb128 0x19
 31245 0121 49       		.uleb128 0x49
 31246 0122 13       		.uleb128 0x13
 31247 0123 20       		.uleb128 0x20
 31248 0124 0B       		.uleb128 0xb
 31249 0125 01       		.uleb128 0x1
 31250 0126 13       		.uleb128 0x13
 31251 0127 00       		.byte	0
 31252 0128 00       		.byte	0
 31253 0129 18       		.uleb128 0x18
 31254 012a 05       		.uleb128 0x5
 31255 012b 00       		.byte	0
 31256 012c 03       		.uleb128 0x3
 31257 012d 0E       		.uleb128 0xe
 31258 012e 3A       		.uleb128 0x3a
 31259 012f 0B       		.uleb128 0xb
 31260 0130 3B       		.uleb128 0x3b
 31261 0131 05       		.uleb128 0x5
 31262 0132 49       		.uleb128 0x49
 31263 0133 13       		.uleb128 0x13
 31264 0134 00       		.byte	0
 31265 0135 00       		.byte	0
 31266 0136 19       		.uleb128 0x19
 31267 0137 34       		.uleb128 0x34
 31268 0138 00       		.byte	0
 31269 0139 03       		.uleb128 0x3
 31270 013a 0E       		.uleb128 0xe
 31271 013b 3A       		.uleb128 0x3a
 31272 013c 0B       		.uleb128 0xb
 31273 013d 3B       		.uleb128 0x3b
 31274 013e 05       		.uleb128 0x5
 31275 013f 49       		.uleb128 0x49
 31276 0140 13       		.uleb128 0x13
 31277 0141 00       		.byte	0
 31278 0142 00       		.byte	0
 31279 0143 1A       		.uleb128 0x1a
 31280 0144 2E       		.uleb128 0x2e
 31281 0145 01       		.byte	0x1
 31282 0146 3F       		.uleb128 0x3f
 31283 0147 19       		.uleb128 0x19
 31284 0148 03       		.uleb128 0x3
 31285 0149 0E       		.uleb128 0xe
 31286 014a 3A       		.uleb128 0x3a
 31287 014b 0B       		.uleb128 0xb
 31288 014c 3B       		.uleb128 0x3b
 31289 014d 0B       		.uleb128 0xb
 31290 014e 27       		.uleb128 0x27
 31291 014f 19       		.uleb128 0x19
 31292 0150 11       		.uleb128 0x11
 31293 0151 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 673


 31294 0152 12       		.uleb128 0x12
 31295 0153 06       		.uleb128 0x6
 31296 0154 40       		.uleb128 0x40
 31297 0155 18       		.uleb128 0x18
 31298 0156 9642     		.uleb128 0x2116
 31299 0158 19       		.uleb128 0x19
 31300 0159 01       		.uleb128 0x1
 31301 015a 13       		.uleb128 0x13
 31302 015b 00       		.byte	0
 31303 015c 00       		.byte	0
 31304 015d 1B       		.uleb128 0x1b
 31305 015e 34       		.uleb128 0x34
 31306 015f 00       		.byte	0
 31307 0160 03       		.uleb128 0x3
 31308 0161 0E       		.uleb128 0xe
 31309 0162 3A       		.uleb128 0x3a
 31310 0163 0B       		.uleb128 0xb
 31311 0164 3B       		.uleb128 0x3b
 31312 0165 0B       		.uleb128 0xb
 31313 0166 49       		.uleb128 0x49
 31314 0167 13       		.uleb128 0x13
 31315 0168 02       		.uleb128 0x2
 31316 0169 18       		.uleb128 0x18
 31317 016a 00       		.byte	0
 31318 016b 00       		.byte	0
 31319 016c 1C       		.uleb128 0x1c
 31320 016d 1D       		.uleb128 0x1d
 31321 016e 01       		.byte	0x1
 31322 016f 31       		.uleb128 0x31
 31323 0170 13       		.uleb128 0x13
 31324 0171 11       		.uleb128 0x11
 31325 0172 01       		.uleb128 0x1
 31326 0173 12       		.uleb128 0x12
 31327 0174 06       		.uleb128 0x6
 31328 0175 58       		.uleb128 0x58
 31329 0176 0B       		.uleb128 0xb
 31330 0177 59       		.uleb128 0x59
 31331 0178 0B       		.uleb128 0xb
 31332 0179 01       		.uleb128 0x1
 31333 017a 13       		.uleb128 0x13
 31334 017b 00       		.byte	0
 31335 017c 00       		.byte	0
 31336 017d 1D       		.uleb128 0x1d
 31337 017e 05       		.uleb128 0x5
 31338 017f 00       		.byte	0
 31339 0180 31       		.uleb128 0x31
 31340 0181 13       		.uleb128 0x13
 31341 0182 02       		.uleb128 0x2
 31342 0183 18       		.uleb128 0x18
 31343 0184 00       		.byte	0
 31344 0185 00       		.byte	0
 31345 0186 1E       		.uleb128 0x1e
 31346 0187 0B       		.uleb128 0xb
 31347 0188 01       		.byte	0x1
 31348 0189 11       		.uleb128 0x11
 31349 018a 01       		.uleb128 0x1
 31350 018b 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 674


 31351 018c 06       		.uleb128 0x6
 31352 018d 00       		.byte	0
 31353 018e 00       		.byte	0
 31354 018f 1F       		.uleb128 0x1f
 31355 0190 34       		.uleb128 0x34
 31356 0191 00       		.byte	0
 31357 0192 31       		.uleb128 0x31
 31358 0193 13       		.uleb128 0x13
 31359 0194 02       		.uleb128 0x2
 31360 0195 18       		.uleb128 0x18
 31361 0196 00       		.byte	0
 31362 0197 00       		.byte	0
 31363 0198 20       		.uleb128 0x20
 31364 0199 1D       		.uleb128 0x1d
 31365 019a 01       		.byte	0x1
 31366 019b 31       		.uleb128 0x31
 31367 019c 13       		.uleb128 0x13
 31368 019d 11       		.uleb128 0x11
 31369 019e 01       		.uleb128 0x1
 31370 019f 12       		.uleb128 0x12
 31371 01a0 06       		.uleb128 0x6
 31372 01a1 58       		.uleb128 0x58
 31373 01a2 0B       		.uleb128 0xb
 31374 01a3 59       		.uleb128 0x59
 31375 01a4 05       		.uleb128 0x5
 31376 01a5 01       		.uleb128 0x1
 31377 01a6 13       		.uleb128 0x13
 31378 01a7 00       		.byte	0
 31379 01a8 00       		.byte	0
 31380 01a9 21       		.uleb128 0x21
 31381 01aa 1D       		.uleb128 0x1d
 31382 01ab 01       		.byte	0x1
 31383 01ac 31       		.uleb128 0x31
 31384 01ad 13       		.uleb128 0x13
 31385 01ae 11       		.uleb128 0x11
 31386 01af 01       		.uleb128 0x1
 31387 01b0 12       		.uleb128 0x12
 31388 01b1 06       		.uleb128 0x6
 31389 01b2 58       		.uleb128 0x58
 31390 01b3 0B       		.uleb128 0xb
 31391 01b4 59       		.uleb128 0x59
 31392 01b5 05       		.uleb128 0x5
 31393 01b6 00       		.byte	0
 31394 01b7 00       		.byte	0
 31395 01b8 22       		.uleb128 0x22
 31396 01b9 2E       		.uleb128 0x2e
 31397 01ba 01       		.byte	0x1
 31398 01bb 3F       		.uleb128 0x3f
 31399 01bc 19       		.uleb128 0x19
 31400 01bd 03       		.uleb128 0x3
 31401 01be 0E       		.uleb128 0xe
 31402 01bf 3A       		.uleb128 0x3a
 31403 01c0 0B       		.uleb128 0xb
 31404 01c1 3B       		.uleb128 0x3b
 31405 01c2 05       		.uleb128 0x5
 31406 01c3 27       		.uleb128 0x27
 31407 01c4 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 675


 31408 01c5 11       		.uleb128 0x11
 31409 01c6 01       		.uleb128 0x1
 31410 01c7 12       		.uleb128 0x12
 31411 01c8 06       		.uleb128 0x6
 31412 01c9 40       		.uleb128 0x40
 31413 01ca 18       		.uleb128 0x18
 31414 01cb 9642     		.uleb128 0x2116
 31415 01cd 19       		.uleb128 0x19
 31416 01ce 01       		.uleb128 0x1
 31417 01cf 13       		.uleb128 0x13
 31418 01d0 00       		.byte	0
 31419 01d1 00       		.byte	0
 31420 01d2 23       		.uleb128 0x23
 31421 01d3 34       		.uleb128 0x34
 31422 01d4 00       		.byte	0
 31423 01d5 03       		.uleb128 0x3
 31424 01d6 0E       		.uleb128 0xe
 31425 01d7 3A       		.uleb128 0x3a
 31426 01d8 0B       		.uleb128 0xb
 31427 01d9 3B       		.uleb128 0x3b
 31428 01da 05       		.uleb128 0x5
 31429 01db 49       		.uleb128 0x49
 31430 01dc 13       		.uleb128 0x13
 31431 01dd 02       		.uleb128 0x2
 31432 01de 18       		.uleb128 0x18
 31433 01df 00       		.byte	0
 31434 01e0 00       		.byte	0
 31435 01e1 24       		.uleb128 0x24
 31436 01e2 21       		.uleb128 0x21
 31437 01e3 00       		.byte	0
 31438 01e4 49       		.uleb128 0x49
 31439 01e5 13       		.uleb128 0x13
 31440 01e6 2F       		.uleb128 0x2f
 31441 01e7 05       		.uleb128 0x5
 31442 01e8 00       		.byte	0
 31443 01e9 00       		.byte	0
 31444 01ea 25       		.uleb128 0x25
 31445 01eb 05       		.uleb128 0x5
 31446 01ec 00       		.byte	0
 31447 01ed 03       		.uleb128 0x3
 31448 01ee 0E       		.uleb128 0xe
 31449 01ef 3A       		.uleb128 0x3a
 31450 01f0 0B       		.uleb128 0xb
 31451 01f1 3B       		.uleb128 0x3b
 31452 01f2 05       		.uleb128 0x5
 31453 01f3 49       		.uleb128 0x49
 31454 01f4 13       		.uleb128 0x13
 31455 01f5 02       		.uleb128 0x2
 31456 01f6 18       		.uleb128 0x18
 31457 01f7 00       		.byte	0
 31458 01f8 00       		.byte	0
 31459 01f9 26       		.uleb128 0x26
 31460 01fa 34       		.uleb128 0x34
 31461 01fb 00       		.byte	0
 31462 01fc 03       		.uleb128 0x3
 31463 01fd 08       		.uleb128 0x8
 31464 01fe 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 676


 31465 01ff 0B       		.uleb128 0xb
 31466 0200 3B       		.uleb128 0x3b
 31467 0201 05       		.uleb128 0x5
 31468 0202 49       		.uleb128 0x49
 31469 0203 13       		.uleb128 0x13
 31470 0204 02       		.uleb128 0x2
 31471 0205 18       		.uleb128 0x18
 31472 0206 00       		.byte	0
 31473 0207 00       		.byte	0
 31474 0208 27       		.uleb128 0x27
 31475 0209 2E       		.uleb128 0x2e
 31476 020a 01       		.byte	0x1
 31477 020b 3F       		.uleb128 0x3f
 31478 020c 19       		.uleb128 0x19
 31479 020d 03       		.uleb128 0x3
 31480 020e 0E       		.uleb128 0xe
 31481 020f 3A       		.uleb128 0x3a
 31482 0210 0B       		.uleb128 0xb
 31483 0211 3B       		.uleb128 0x3b
 31484 0212 05       		.uleb128 0x5
 31485 0213 11       		.uleb128 0x11
 31486 0214 01       		.uleb128 0x1
 31487 0215 12       		.uleb128 0x12
 31488 0216 06       		.uleb128 0x6
 31489 0217 40       		.uleb128 0x40
 31490 0218 18       		.uleb128 0x18
 31491 0219 9642     		.uleb128 0x2116
 31492 021b 19       		.uleb128 0x19
 31493 021c 01       		.uleb128 0x1
 31494 021d 13       		.uleb128 0x13
 31495 021e 00       		.byte	0
 31496 021f 00       		.byte	0
 31497 0220 28       		.uleb128 0x28
 31498 0221 2E       		.uleb128 0x2e
 31499 0222 01       		.byte	0x1
 31500 0223 3F       		.uleb128 0x3f
 31501 0224 19       		.uleb128 0x19
 31502 0225 03       		.uleb128 0x3
 31503 0226 0E       		.uleb128 0xe
 31504 0227 3A       		.uleb128 0x3a
 31505 0228 0B       		.uleb128 0xb
 31506 0229 3B       		.uleb128 0x3b
 31507 022a 05       		.uleb128 0x5
 31508 022b 27       		.uleb128 0x27
 31509 022c 19       		.uleb128 0x19
 31510 022d 11       		.uleb128 0x11
 31511 022e 01       		.uleb128 0x1
 31512 022f 12       		.uleb128 0x12
 31513 0230 06       		.uleb128 0x6
 31514 0231 40       		.uleb128 0x40
 31515 0232 18       		.uleb128 0x18
 31516 0233 9742     		.uleb128 0x2117
 31517 0235 19       		.uleb128 0x19
 31518 0236 01       		.uleb128 0x1
 31519 0237 13       		.uleb128 0x13
 31520 0238 00       		.byte	0
 31521 0239 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 677


 31522 023a 29       		.uleb128 0x29
 31523 023b 05       		.uleb128 0x5
 31524 023c 00       		.byte	0
 31525 023d 03       		.uleb128 0x3
 31526 023e 08       		.uleb128 0x8
 31527 023f 3A       		.uleb128 0x3a
 31528 0240 0B       		.uleb128 0xb
 31529 0241 3B       		.uleb128 0x3b
 31530 0242 05       		.uleb128 0x5
 31531 0243 49       		.uleb128 0x49
 31532 0244 13       		.uleb128 0x13
 31533 0245 02       		.uleb128 0x2
 31534 0246 18       		.uleb128 0x18
 31535 0247 00       		.byte	0
 31536 0248 00       		.byte	0
 31537 0249 2A       		.uleb128 0x2a
 31538 024a 2E       		.uleb128 0x2e
 31539 024b 01       		.byte	0x1
 31540 024c 3F       		.uleb128 0x3f
 31541 024d 19       		.uleb128 0x19
 31542 024e 03       		.uleb128 0x3
 31543 024f 0E       		.uleb128 0xe
 31544 0250 3A       		.uleb128 0x3a
 31545 0251 0B       		.uleb128 0xb
 31546 0252 3B       		.uleb128 0x3b
 31547 0253 05       		.uleb128 0x5
 31548 0254 27       		.uleb128 0x27
 31549 0255 19       		.uleb128 0x19
 31550 0256 49       		.uleb128 0x49
 31551 0257 13       		.uleb128 0x13
 31552 0258 11       		.uleb128 0x11
 31553 0259 01       		.uleb128 0x1
 31554 025a 12       		.uleb128 0x12
 31555 025b 06       		.uleb128 0x6
 31556 025c 40       		.uleb128 0x40
 31557 025d 18       		.uleb128 0x18
 31558 025e 9742     		.uleb128 0x2117
 31559 0260 19       		.uleb128 0x19
 31560 0261 01       		.uleb128 0x1
 31561 0262 13       		.uleb128 0x13
 31562 0263 00       		.byte	0
 31563 0264 00       		.byte	0
 31564 0265 2B       		.uleb128 0x2b
 31565 0266 2E       		.uleb128 0x2e
 31566 0267 01       		.byte	0x1
 31567 0268 3F       		.uleb128 0x3f
 31568 0269 19       		.uleb128 0x19
 31569 026a 03       		.uleb128 0x3
 31570 026b 0E       		.uleb128 0xe
 31571 026c 3A       		.uleb128 0x3a
 31572 026d 0B       		.uleb128 0xb
 31573 026e 3B       		.uleb128 0x3b
 31574 026f 05       		.uleb128 0x5
 31575 0270 27       		.uleb128 0x27
 31576 0271 19       		.uleb128 0x19
 31577 0272 49       		.uleb128 0x49
 31578 0273 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 678


 31579 0274 11       		.uleb128 0x11
 31580 0275 01       		.uleb128 0x1
 31581 0276 12       		.uleb128 0x12
 31582 0277 06       		.uleb128 0x6
 31583 0278 40       		.uleb128 0x40
 31584 0279 18       		.uleb128 0x18
 31585 027a 9642     		.uleb128 0x2116
 31586 027c 19       		.uleb128 0x19
 31587 027d 01       		.uleb128 0x1
 31588 027e 13       		.uleb128 0x13
 31589 027f 00       		.byte	0
 31590 0280 00       		.byte	0
 31591 0281 2C       		.uleb128 0x2c
 31592 0282 2E       		.uleb128 0x2e
 31593 0283 00       		.byte	0
 31594 0284 3F       		.uleb128 0x3f
 31595 0285 19       		.uleb128 0x19
 31596 0286 03       		.uleb128 0x3
 31597 0287 0E       		.uleb128 0xe
 31598 0288 3A       		.uleb128 0x3a
 31599 0289 0B       		.uleb128 0xb
 31600 028a 3B       		.uleb128 0x3b
 31601 028b 05       		.uleb128 0x5
 31602 028c 27       		.uleb128 0x27
 31603 028d 19       		.uleb128 0x19
 31604 028e 11       		.uleb128 0x11
 31605 028f 01       		.uleb128 0x1
 31606 0290 12       		.uleb128 0x12
 31607 0291 06       		.uleb128 0x6
 31608 0292 40       		.uleb128 0x40
 31609 0293 18       		.uleb128 0x18
 31610 0294 9742     		.uleb128 0x2117
 31611 0296 19       		.uleb128 0x19
 31612 0297 00       		.byte	0
 31613 0298 00       		.byte	0
 31614 0299 2D       		.uleb128 0x2d
 31615 029a 2E       		.uleb128 0x2e
 31616 029b 01       		.byte	0x1
 31617 029c 3F       		.uleb128 0x3f
 31618 029d 19       		.uleb128 0x19
 31619 029e 03       		.uleb128 0x3
 31620 029f 0E       		.uleb128 0xe
 31621 02a0 3A       		.uleb128 0x3a
 31622 02a1 0B       		.uleb128 0xb
 31623 02a2 3B       		.uleb128 0x3b
 31624 02a3 05       		.uleb128 0x5
 31625 02a4 11       		.uleb128 0x11
 31626 02a5 01       		.uleb128 0x1
 31627 02a6 12       		.uleb128 0x12
 31628 02a7 06       		.uleb128 0x6
 31629 02a8 40       		.uleb128 0x40
 31630 02a9 18       		.uleb128 0x18
 31631 02aa 9742     		.uleb128 0x2117
 31632 02ac 19       		.uleb128 0x19
 31633 02ad 01       		.uleb128 0x1
 31634 02ae 13       		.uleb128 0x13
 31635 02af 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 679


 31636 02b0 00       		.byte	0
 31637 02b1 2E       		.uleb128 0x2e
 31638 02b2 0B       		.uleb128 0xb
 31639 02b3 01       		.byte	0x1
 31640 02b4 11       		.uleb128 0x11
 31641 02b5 01       		.uleb128 0x1
 31642 02b6 12       		.uleb128 0x12
 31643 02b7 06       		.uleb128 0x6
 31644 02b8 01       		.uleb128 0x1
 31645 02b9 13       		.uleb128 0x13
 31646 02ba 00       		.byte	0
 31647 02bb 00       		.byte	0
 31648 02bc 2F       		.uleb128 0x2f
 31649 02bd 2E       		.uleb128 0x2e
 31650 02be 01       		.byte	0x1
 31651 02bf 3F       		.uleb128 0x3f
 31652 02c0 19       		.uleb128 0x19
 31653 02c1 03       		.uleb128 0x3
 31654 02c2 0E       		.uleb128 0xe
 31655 02c3 3A       		.uleb128 0x3a
 31656 02c4 0B       		.uleb128 0xb
 31657 02c5 3B       		.uleb128 0x3b
 31658 02c6 05       		.uleb128 0x5
 31659 02c7 49       		.uleb128 0x49
 31660 02c8 13       		.uleb128 0x13
 31661 02c9 11       		.uleb128 0x11
 31662 02ca 01       		.uleb128 0x1
 31663 02cb 12       		.uleb128 0x12
 31664 02cc 06       		.uleb128 0x6
 31665 02cd 40       		.uleb128 0x40
 31666 02ce 18       		.uleb128 0x18
 31667 02cf 9642     		.uleb128 0x2116
 31668 02d1 19       		.uleb128 0x19
 31669 02d2 01       		.uleb128 0x1
 31670 02d3 13       		.uleb128 0x13
 31671 02d4 00       		.byte	0
 31672 02d5 00       		.byte	0
 31673 02d6 30       		.uleb128 0x30
 31674 02d7 2E       		.uleb128 0x2e
 31675 02d8 00       		.byte	0
 31676 02d9 3F       		.uleb128 0x3f
 31677 02da 19       		.uleb128 0x19
 31678 02db 03       		.uleb128 0x3
 31679 02dc 0E       		.uleb128 0xe
 31680 02dd 3A       		.uleb128 0x3a
 31681 02de 0B       		.uleb128 0xb
 31682 02df 3B       		.uleb128 0x3b
 31683 02e0 05       		.uleb128 0x5
 31684 02e1 11       		.uleb128 0x11
 31685 02e2 01       		.uleb128 0x1
 31686 02e3 12       		.uleb128 0x12
 31687 02e4 06       		.uleb128 0x6
 31688 02e5 40       		.uleb128 0x40
 31689 02e6 18       		.uleb128 0x18
 31690 02e7 9642     		.uleb128 0x2116
 31691 02e9 19       		.uleb128 0x19
 31692 02ea 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 680


 31693 02eb 00       		.byte	0
 31694 02ec 31       		.uleb128 0x31
 31695 02ed 2E       		.uleb128 0x2e
 31696 02ee 01       		.byte	0x1
 31697 02ef 3F       		.uleb128 0x3f
 31698 02f0 19       		.uleb128 0x19
 31699 02f1 03       		.uleb128 0x3
 31700 02f2 0E       		.uleb128 0xe
 31701 02f3 3A       		.uleb128 0x3a
 31702 02f4 0B       		.uleb128 0xb
 31703 02f5 3B       		.uleb128 0x3b
 31704 02f6 05       		.uleb128 0x5
 31705 02f7 49       		.uleb128 0x49
 31706 02f8 13       		.uleb128 0x13
 31707 02f9 11       		.uleb128 0x11
 31708 02fa 01       		.uleb128 0x1
 31709 02fb 12       		.uleb128 0x12
 31710 02fc 06       		.uleb128 0x6
 31711 02fd 40       		.uleb128 0x40
 31712 02fe 18       		.uleb128 0x18
 31713 02ff 9742     		.uleb128 0x2117
 31714 0301 19       		.uleb128 0x19
 31715 0302 01       		.uleb128 0x1
 31716 0303 13       		.uleb128 0x13
 31717 0304 00       		.byte	0
 31718 0305 00       		.byte	0
 31719 0306 32       		.uleb128 0x32
 31720 0307 2E       		.uleb128 0x2e
 31721 0308 00       		.byte	0
 31722 0309 3F       		.uleb128 0x3f
 31723 030a 19       		.uleb128 0x19
 31724 030b 03       		.uleb128 0x3
 31725 030c 0E       		.uleb128 0xe
 31726 030d 3A       		.uleb128 0x3a
 31727 030e 0B       		.uleb128 0xb
 31728 030f 3B       		.uleb128 0x3b
 31729 0310 05       		.uleb128 0x5
 31730 0311 11       		.uleb128 0x11
 31731 0312 01       		.uleb128 0x1
 31732 0313 12       		.uleb128 0x12
 31733 0314 06       		.uleb128 0x6
 31734 0315 40       		.uleb128 0x40
 31735 0316 18       		.uleb128 0x18
 31736 0317 9742     		.uleb128 0x2117
 31737 0319 19       		.uleb128 0x19
 31738 031a 00       		.byte	0
 31739 031b 00       		.byte	0
 31740 031c 33       		.uleb128 0x33
 31741 031d 34       		.uleb128 0x34
 31742 031e 00       		.byte	0
 31743 031f 03       		.uleb128 0x3
 31744 0320 0E       		.uleb128 0xe
 31745 0321 3A       		.uleb128 0x3a
 31746 0322 0B       		.uleb128 0xb
 31747 0323 3B       		.uleb128 0x3b
 31748 0324 05       		.uleb128 0x5
 31749 0325 49       		.uleb128 0x49
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 681


 31750 0326 13       		.uleb128 0x13
 31751 0327 3F       		.uleb128 0x3f
 31752 0328 19       		.uleb128 0x19
 31753 0329 3C       		.uleb128 0x3c
 31754 032a 19       		.uleb128 0x19
 31755 032b 00       		.byte	0
 31756 032c 00       		.byte	0
 31757 032d 34       		.uleb128 0x34
 31758 032e 34       		.uleb128 0x34
 31759 032f 00       		.byte	0
 31760 0330 03       		.uleb128 0x3
 31761 0331 0E       		.uleb128 0xe
 31762 0332 3A       		.uleb128 0x3a
 31763 0333 0B       		.uleb128 0xb
 31764 0334 3B       		.uleb128 0x3b
 31765 0335 0B       		.uleb128 0xb
 31766 0336 49       		.uleb128 0x49
 31767 0337 13       		.uleb128 0x13
 31768 0338 3F       		.uleb128 0x3f
 31769 0339 19       		.uleb128 0x19
 31770 033a 02       		.uleb128 0x2
 31771 033b 18       		.uleb128 0x18
 31772 033c 00       		.byte	0
 31773 033d 00       		.byte	0
 31774 033e 00       		.byte	0
 31775              		.section	.debug_aranges,"",%progbits
 31776 0000 EC010000 		.4byte	0x1ec
 31777 0004 0200     		.2byte	0x2
 31778 0006 00000000 		.4byte	.Ldebug_info0
 31779 000a 04       		.byte	0x4
 31780 000b 00       		.byte	0
 31781 000c 0000     		.2byte	0
 31782 000e 0000     		.2byte	0
 31783 0010 00000000 		.4byte	.LFB64
 31784 0014 1C050000 		.4byte	.LFE64-.LFB64
 31785 0018 00000000 		.4byte	.LFB65
 31786 001c 22000000 		.4byte	.LFE65-.LFB65
 31787 0020 00000000 		.4byte	.LFB66
 31788 0024 64010000 		.4byte	.LFE66-.LFB66
 31789 0028 00000000 		.4byte	.LFB67
 31790 002c E4220000 		.4byte	.LFE67-.LFB67
 31791 0030 00000000 		.4byte	.LFB68
 31792 0034 3C190000 		.4byte	.LFE68-.LFB68
 31793 0038 00000000 		.4byte	.LFB69
 31794 003c DC140000 		.4byte	.LFE69-.LFB69
 31795 0040 00000000 		.4byte	.LFB70
 31796 0044 F40D0000 		.4byte	.LFE70-.LFB70
 31797 0048 00000000 		.4byte	.LFB71
 31798 004c 90000000 		.4byte	.LFE71-.LFB71
 31799 0050 00000000 		.4byte	.LFB72
 31800 0054 E81B0000 		.4byte	.LFE72-.LFB72
 31801 0058 00000000 		.4byte	.LFB73
 31802 005c 90040000 		.4byte	.LFE73-.LFB73
 31803 0060 00000000 		.4byte	.LFB74
 31804 0064 5C020000 		.4byte	.LFE74-.LFB74
 31805 0068 00000000 		.4byte	.LFB75
 31806 006c 80120000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 682


 31807 0070 00000000 		.4byte	.LFB76
 31808 0074 DC000000 		.4byte	.LFE76-.LFB76
 31809 0078 00000000 		.4byte	.LFB77
 31810 007c 80010000 		.4byte	.LFE77-.LFB77
 31811 0080 00000000 		.4byte	.LFB78
 31812 0084 28000000 		.4byte	.LFE78-.LFB78
 31813 0088 00000000 		.4byte	.LFB79
 31814 008c F0000000 		.4byte	.LFE79-.LFB79
 31815 0090 00000000 		.4byte	.LFB80
 31816 0094 74030000 		.4byte	.LFE80-.LFB80
 31817 0098 00000000 		.4byte	.LFB81
 31818 009c 84000000 		.4byte	.LFE81-.LFB81
 31819 00a0 00000000 		.4byte	.LFB82
 31820 00a4 88000000 		.4byte	.LFE82-.LFB82
 31821 00a8 00000000 		.4byte	.LFB83
 31822 00ac A0000000 		.4byte	.LFE83-.LFB83
 31823 00b0 00000000 		.4byte	.LFB84
 31824 00b4 3E000000 		.4byte	.LFE84-.LFB84
 31825 00b8 00000000 		.4byte	.LFB85
 31826 00bc 2E000000 		.4byte	.LFE85-.LFB85
 31827 00c0 00000000 		.4byte	.LFB86
 31828 00c4 98000000 		.4byte	.LFE86-.LFB86
 31829 00c8 00000000 		.4byte	.LFB87
 31830 00cc 80000000 		.4byte	.LFE87-.LFB87
 31831 00d0 00000000 		.4byte	.LFB88
 31832 00d4 5C000000 		.4byte	.LFE88-.LFB88
 31833 00d8 00000000 		.4byte	.LFB89
 31834 00dc 28060000 		.4byte	.LFE89-.LFB89
 31835 00e0 00000000 		.4byte	.LFB90
 31836 00e4 40020000 		.4byte	.LFE90-.LFB90
 31837 00e8 00000000 		.4byte	.LFB91
 31838 00ec 28000000 		.4byte	.LFE91-.LFB91
 31839 00f0 00000000 		.4byte	.LFB92
 31840 00f4 78000000 		.4byte	.LFE92-.LFB92
 31841 00f8 00000000 		.4byte	.LFB93
 31842 00fc B0000000 		.4byte	.LFE93-.LFB93
 31843 0100 00000000 		.4byte	.LFB94
 31844 0104 28010000 		.4byte	.LFE94-.LFB94
 31845 0108 00000000 		.4byte	.LFB95
 31846 010c B8000000 		.4byte	.LFE95-.LFB95
 31847 0110 00000000 		.4byte	.LFB96
 31848 0114 B8000000 		.4byte	.LFE96-.LFB96
 31849 0118 00000000 		.4byte	.LFB97
 31850 011c 5C000000 		.4byte	.LFE97-.LFB97
 31851 0120 00000000 		.4byte	.LFB98
 31852 0124 44020000 		.4byte	.LFE98-.LFB98
 31853 0128 00000000 		.4byte	.LFB99
 31854 012c BC000000 		.4byte	.LFE99-.LFB99
 31855 0130 00000000 		.4byte	.LFB100
 31856 0134 5C000000 		.4byte	.LFE100-.LFB100
 31857 0138 00000000 		.4byte	.LFB101
 31858 013c 38010000 		.4byte	.LFE101-.LFB101
 31859 0140 00000000 		.4byte	.LFB102
 31860 0144 EC000000 		.4byte	.LFE102-.LFB102
 31861 0148 00000000 		.4byte	.LFB103
 31862 014c 64000000 		.4byte	.LFE103-.LFB103
 31863 0150 00000000 		.4byte	.LFB104
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 683


 31864 0154 A8000000 		.4byte	.LFE104-.LFB104
 31865 0158 00000000 		.4byte	.LFB105
 31866 015c 34000000 		.4byte	.LFE105-.LFB105
 31867 0160 00000000 		.4byte	.LFB106
 31868 0164 20000000 		.4byte	.LFE106-.LFB106
 31869 0168 00000000 		.4byte	.LFB107
 31870 016c A0000000 		.4byte	.LFE107-.LFB107
 31871 0170 00000000 		.4byte	.LFB108
 31872 0174 BC010000 		.4byte	.LFE108-.LFB108
 31873 0178 00000000 		.4byte	.LFB109
 31874 017c 60000000 		.4byte	.LFE109-.LFB109
 31875 0180 00000000 		.4byte	.LFB110
 31876 0184 98050000 		.4byte	.LFE110-.LFB110
 31877 0188 00000000 		.4byte	.LFB111
 31878 018c 8C000000 		.4byte	.LFE111-.LFB111
 31879 0190 00000000 		.4byte	.LFB112
 31880 0194 EC000000 		.4byte	.LFE112-.LFB112
 31881 0198 00000000 		.4byte	.LFB113
 31882 019c 5C000000 		.4byte	.LFE113-.LFB113
 31883 01a0 00000000 		.4byte	.LFB114
 31884 01a4 C0000000 		.4byte	.LFE114-.LFB114
 31885 01a8 00000000 		.4byte	.LFB115
 31886 01ac 54010000 		.4byte	.LFE115-.LFB115
 31887 01b0 00000000 		.4byte	.LFB116
 31888 01b4 B0000000 		.4byte	.LFE116-.LFB116
 31889 01b8 00000000 		.4byte	.LFB117
 31890 01bc 12000000 		.4byte	.LFE117-.LFB117
 31891 01c0 00000000 		.4byte	.LFB118
 31892 01c4 64010000 		.4byte	.LFE118-.LFB118
 31893 01c8 00000000 		.4byte	.LFB119
 31894 01cc 12000000 		.4byte	.LFE119-.LFB119
 31895 01d0 00000000 		.4byte	.LFB120
 31896 01d4 1A000000 		.4byte	.LFE120-.LFB120
 31897 01d8 00000000 		.4byte	.LFB121
 31898 01dc 0C000000 		.4byte	.LFE121-.LFB121
 31899 01e0 00000000 		.4byte	.LFB122
 31900 01e4 0C000000 		.4byte	.LFE122-.LFB122
 31901 01e8 00000000 		.4byte	0
 31902 01ec 00000000 		.4byte	0
 31903              		.section	.debug_ranges,"",%progbits
 31904              	.Ldebug_ranges0:
 31905 0000 00000000 		.4byte	.LFB64
 31906 0004 1C050000 		.4byte	.LFE64
 31907 0008 00000000 		.4byte	.LFB65
 31908 000c 22000000 		.4byte	.LFE65
 31909 0010 00000000 		.4byte	.LFB66
 31910 0014 64010000 		.4byte	.LFE66
 31911 0018 00000000 		.4byte	.LFB67
 31912 001c E4220000 		.4byte	.LFE67
 31913 0020 00000000 		.4byte	.LFB68
 31914 0024 3C190000 		.4byte	.LFE68
 31915 0028 00000000 		.4byte	.LFB69
 31916 002c DC140000 		.4byte	.LFE69
 31917 0030 00000000 		.4byte	.LFB70
 31918 0034 F40D0000 		.4byte	.LFE70
 31919 0038 00000000 		.4byte	.LFB71
 31920 003c 90000000 		.4byte	.LFE71
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 684


 31921 0040 00000000 		.4byte	.LFB72
 31922 0044 E81B0000 		.4byte	.LFE72
 31923 0048 00000000 		.4byte	.LFB73
 31924 004c 90040000 		.4byte	.LFE73
 31925 0050 00000000 		.4byte	.LFB74
 31926 0054 5C020000 		.4byte	.LFE74
 31927 0058 00000000 		.4byte	.LFB75
 31928 005c 80120000 		.4byte	.LFE75
 31929 0060 00000000 		.4byte	.LFB76
 31930 0064 DC000000 		.4byte	.LFE76
 31931 0068 00000000 		.4byte	.LFB77
 31932 006c 80010000 		.4byte	.LFE77
 31933 0070 00000000 		.4byte	.LFB78
 31934 0074 28000000 		.4byte	.LFE78
 31935 0078 00000000 		.4byte	.LFB79
 31936 007c F0000000 		.4byte	.LFE79
 31937 0080 00000000 		.4byte	.LFB80
 31938 0084 74030000 		.4byte	.LFE80
 31939 0088 00000000 		.4byte	.LFB81
 31940 008c 84000000 		.4byte	.LFE81
 31941 0090 00000000 		.4byte	.LFB82
 31942 0094 88000000 		.4byte	.LFE82
 31943 0098 00000000 		.4byte	.LFB83
 31944 009c A0000000 		.4byte	.LFE83
 31945 00a0 00000000 		.4byte	.LFB84
 31946 00a4 3E000000 		.4byte	.LFE84
 31947 00a8 00000000 		.4byte	.LFB85
 31948 00ac 2E000000 		.4byte	.LFE85
 31949 00b0 00000000 		.4byte	.LFB86
 31950 00b4 98000000 		.4byte	.LFE86
 31951 00b8 00000000 		.4byte	.LFB87
 31952 00bc 80000000 		.4byte	.LFE87
 31953 00c0 00000000 		.4byte	.LFB88
 31954 00c4 5C000000 		.4byte	.LFE88
 31955 00c8 00000000 		.4byte	.LFB89
 31956 00cc 28060000 		.4byte	.LFE89
 31957 00d0 00000000 		.4byte	.LFB90
 31958 00d4 40020000 		.4byte	.LFE90
 31959 00d8 00000000 		.4byte	.LFB91
 31960 00dc 28000000 		.4byte	.LFE91
 31961 00e0 00000000 		.4byte	.LFB92
 31962 00e4 78000000 		.4byte	.LFE92
 31963 00e8 00000000 		.4byte	.LFB93
 31964 00ec B0000000 		.4byte	.LFE93
 31965 00f0 00000000 		.4byte	.LFB94
 31966 00f4 28010000 		.4byte	.LFE94
 31967 00f8 00000000 		.4byte	.LFB95
 31968 00fc B8000000 		.4byte	.LFE95
 31969 0100 00000000 		.4byte	.LFB96
 31970 0104 B8000000 		.4byte	.LFE96
 31971 0108 00000000 		.4byte	.LFB97
 31972 010c 5C000000 		.4byte	.LFE97
 31973 0110 00000000 		.4byte	.LFB98
 31974 0114 44020000 		.4byte	.LFE98
 31975 0118 00000000 		.4byte	.LFB99
 31976 011c BC000000 		.4byte	.LFE99
 31977 0120 00000000 		.4byte	.LFB100
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 685


 31978 0124 5C000000 		.4byte	.LFE100
 31979 0128 00000000 		.4byte	.LFB101
 31980 012c 38010000 		.4byte	.LFE101
 31981 0130 00000000 		.4byte	.LFB102
 31982 0134 EC000000 		.4byte	.LFE102
 31983 0138 00000000 		.4byte	.LFB103
 31984 013c 64000000 		.4byte	.LFE103
 31985 0140 00000000 		.4byte	.LFB104
 31986 0144 A8000000 		.4byte	.LFE104
 31987 0148 00000000 		.4byte	.LFB105
 31988 014c 34000000 		.4byte	.LFE105
 31989 0150 00000000 		.4byte	.LFB106
 31990 0154 20000000 		.4byte	.LFE106
 31991 0158 00000000 		.4byte	.LFB107
 31992 015c A0000000 		.4byte	.LFE107
 31993 0160 00000000 		.4byte	.LFB108
 31994 0164 BC010000 		.4byte	.LFE108
 31995 0168 00000000 		.4byte	.LFB109
 31996 016c 60000000 		.4byte	.LFE109
 31997 0170 00000000 		.4byte	.LFB110
 31998 0174 98050000 		.4byte	.LFE110
 31999 0178 00000000 		.4byte	.LFB111
 32000 017c 8C000000 		.4byte	.LFE111
 32001 0180 00000000 		.4byte	.LFB112
 32002 0184 EC000000 		.4byte	.LFE112
 32003 0188 00000000 		.4byte	.LFB113
 32004 018c 5C000000 		.4byte	.LFE113
 32005 0190 00000000 		.4byte	.LFB114
 32006 0194 C0000000 		.4byte	.LFE114
 32007 0198 00000000 		.4byte	.LFB115
 32008 019c 54010000 		.4byte	.LFE115
 32009 01a0 00000000 		.4byte	.LFB116
 32010 01a4 B0000000 		.4byte	.LFE116
 32011 01a8 00000000 		.4byte	.LFB117
 32012 01ac 12000000 		.4byte	.LFE117
 32013 01b0 00000000 		.4byte	.LFB118
 32014 01b4 64010000 		.4byte	.LFE118
 32015 01b8 00000000 		.4byte	.LFB119
 32016 01bc 12000000 		.4byte	.LFE119
 32017 01c0 00000000 		.4byte	.LFB120
 32018 01c4 1A000000 		.4byte	.LFE120
 32019 01c8 00000000 		.4byte	.LFB121
 32020 01cc 0C000000 		.4byte	.LFE121
 32021 01d0 00000000 		.4byte	.LFB122
 32022 01d4 0C000000 		.4byte	.LFE122
 32023 01d8 00000000 		.4byte	0
 32024 01dc 00000000 		.4byte	0
 32025              		.section	.debug_line,"",%progbits
 32026              	.Ldebug_line0:
 32027 0000 C71E0000 		.section	.debug_str,"MS",%progbits,1
 32027      0200C001 
 32027      00000201 
 32027      FB0E0D00 
 32027      01010101 
 32028              	.LASF218:
 32029 0000 696E666F 		.ascii	"infoSend\000"
 32029      53656E64 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 686


 32029      00
 32030              	.LASF107:
 32031 0009 656D675F 		.ascii	"emg_act_counter\000"
 32031      6163745F 
 32031      636F756E 
 32031      74657200 
 32032              	.LASF270:
 32033 0019 69645F73 		.ascii	"id_str\000"
 32033      747200
 32034              	.LASF252:
 32035 0020 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 32035      61637469 
 32035      76617469 
 32035      6F6E5F6D 
 32035      6F64655F 
 32036              	.LASF25:
 32037 0039 73697A65 		.ascii	"sizetype\000"
 32037      74797065 
 32037      00
 32038              	.LASF114:
 32039 0042 706F7765 		.ascii	"power_cycles\000"
 32039      725F6379 
 32039      636C6573 
 32039      00
 32040              	.LASF33:
 32041 004f 434D445F 		.ascii	"CMD_INIT_MEM\000"
 32041      494E4954 
 32041      5F4D454D 
 32041      00
 32042              	.LASF343:
 32043 005c 676C5F63 		.ascii	"gl_c\000"
 32043      00
 32044              	.LASF198:
 32045 0061 77726973 		.ascii	"wrist_direction_association\000"
 32045      745F6469 
 32045      72656374 
 32045      696F6E5F 
 32045      6173736F 
 32046              	.LASF65:
 32047 007d 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 32047      545F4D4F 
 32047      44455F45 
 32047      4D475F46 
 32047      4346535F 
 32048              	.LASF36:
 32049 0095 434D445F 		.ascii	"CMD_ACTIVATE\000"
 32049      41435449 
 32049      56415445 
 32049      00
 32050              	.LASF203:
 32051 00a2 75736572 		.ascii	"user\000"
 32051      00
 32052              	.LASF359:
 32053 00a7 665F6572 		.ascii	"f_err_emg_1\000"
 32053      725F656D 
 32053      675F3100 
 32054              	.LASF360:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 687


 32055 00b3 665F6572 		.ascii	"f_err_emg_2\000"
 32055      725F656D 
 32055      675F3200 
 32056              	.LASF365:
 32057 00bf 73746F70 		.ascii	"stop_master_device\000"
 32057      5F6D6173 
 32057      7465725F 
 32057      64657669 
 32057      636500
 32058              	.LASF11:
 32059 00d2 696E7433 		.ascii	"int32_t\000"
 32059      325F7400 
 32060              	.LASF376:
 32061 00da 675F7278 		.ascii	"g_rx\000"
 32061      00
 32062              	.LASF102:
 32063 00df 73745F64 		.ascii	"st_data\000"
 32063      61746100 
 32064              	.LASF294:
 32065 00e7 685F7469 		.ascii	"h_time\000"
 32065      6D6500
 32066              	.LASF308:
 32067 00ee 77726974 		.ascii	"writeStatus\000"
 32067      65537461 
 32067      74757300 
 32068              	.LASF112:
 32069 00fa 746F7461 		.ascii	"total_runtime\000"
 32069      6C5F7275 
 32069      6E74696D 
 32069      6500
 32070              	.LASF15:
 32071 0108 75696E74 		.ascii	"uint32\000"
 32071      333200
 32072              	.LASF364:
 32073 010f 636D645F 		.ascii	"cmd_set_baudrate\000"
 32073      7365745F 
 32073      62617564 
 32073      72617465 
 32073      00
 32074              	.LASF353:
 32075 0120 6169725F 		.ascii	"air_chambers_control\000"
 32075      6368616D 
 32075      62657273 
 32075      5F636F6E 
 32075      74726F6C 
 32076              	.LASF278:
 32077 0135 7370695F 		.ascii	"spi_read_delay_str_len\000"
 32077      72656164 
 32077      5F64656C 
 32077      61795F73 
 32077      74725F6C 
 32078              	.LASF204:
 32079 014c 4A4F595F 		.ascii	"JOY_spec\000"
 32079      73706563 
 32079      00
 32080              	.LASF280:
 32081 0155 70726570 		.ascii	"prepare_generic_info\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 688


 32081      6172655F 
 32081      67656E65 
 32081      7269635F 
 32081      696E666F 
 32082              	.LASF141:
 32083 016a 706F735F 		.ascii	"pos_lim_inf\000"
 32083      6C696D5F 
 32083      696E6600 
 32084              	.LASF244:
 32085 0176 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 32085      4E445F4D 
 32085      4F544F52 
 32085      5F494458 
 32085      00
 32086              	.LASF336:
 32087 0187 636D645F 		.ascii	"cmd_get_inputs\000"
 32087      6765745F 
 32087      696E7075 
 32087      747300
 32088              	.LASF64:
 32089 0196 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 32089      545F4D4F 
 32089      44455F45 
 32089      4D475F46 
 32089      43465300 
 32090              	.LASF145:
 32091 01aa 63757272 		.ascii	"curr_lookup\000"
 32091      5F6C6F6F 
 32091      6B757000 
 32092              	.LASF110:
 32093 01b6 72657374 		.ascii	"rest_counter\000"
 32093      5F636F75 
 32093      6E746572 
 32093      00
 32094              	.LASF341:
 32095 01c3 636D645F 		.ascii	"cmd_get_imu_readings\000"
 32095      6765745F 
 32095      696D755F 
 32095      72656164 
 32095      696E6773 
 32096              	.LASF188:
 32097 01d8 73745F4D 		.ascii	"st_MASTER_spec\000"
 32097      41535445 
 32097      525F7370 
 32097      656300
 32098              	.LASF273:
 32099 01e7 69645F73 		.ascii	"id_str_len\000"
 32099      74725F6C 
 32099      656E00
 32100              	.LASF63:
 32101 01f2 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 32101      545F4D4F 
 32101      44455F45 
 32101      4D475F49 
 32101      4E544547 
 32102              	.LASF246:
 32103 020a 6D5F746D 		.ascii	"m_tmp\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 689


 32103      7000
 32104              	.LASF293:
 32105 0210 765F6964 		.ascii	"v_idx\000"
 32105      7800
 32106              	.LASF16:
 32107 0216 696E7438 		.ascii	"int8\000"
 32107      00
 32108              	.LASF223:
 32109 021b 6765745F 		.ascii	"get_param_list\000"
 32109      70617261 
 32109      6D5F6C69 
 32109      737400
 32110              	.LASF321:
 32111 022a 636D645F 		.ascii	"cmd_get_accelerations\000"
 32111      6765745F 
 32111      61636365 
 32111      6C657261 
 32111      74696F6E 
 32112              	.LASF340:
 32113 0240 636D645F 		.ascii	"cmd_get_emg\000"
 32113      6765745F 
 32113      656D6700 
 32114              	.LASF160:
 32115 024c 73745F65 		.ascii	"st_emg\000"
 32115      6D6700
 32116              	.LASF108:
 32117 0253 706F7369 		.ascii	"position_hist\000"
 32117      74696F6E 
 32117      5F686973 
 32117      7400
 32118              	.LASF211:
 32119 0261 74656D70 		.ascii	"temp_value\000"
 32119      5F76616C 
 32119      756500
 32120              	.LASF292:
 32121 026c 7374725F 		.ascii	"str_data\000"
 32121      64617461 
 32121      00
 32122              	.LASF412:
 32123 0275 72657375 		.ascii	"result\000"
 32123      6C7400
 32124              	.LASF272:
 32125 027c 7370695F 		.ascii	"spi_read_delay_str\000"
 32125      72656164 
 32125      5F64656C 
 32125      61795F73 
 32125      747200
 32126              	.LASF195:
 32127 028f 73745F57 		.ascii	"st_WR_spec\000"
 32127      525F7370 
 32127      656300
 32128              	.LASF105:
 32129 029a 72656164 		.ascii	"ready\000"
 32129      7900
 32130              	.LASF157:
 32131 02a0 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 32131      6964785F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 690


 32131      7573655F 
 32131      666F725F 
 32131      636F6E74 
 32132              	.LASF49:
 32133 02b8 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 32133      4745545F 
 32133      4A4F5953 
 32133      5449434B 
 32133      00
 32134              	.LASF62:
 32135 02c9 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 32135      545F4D4F 
 32135      44455F45 
 32135      4D475F50 
 32135      524F504F 
 32136              	.LASF123:
 32137 02e5 7573655F 		.ascii	"use_2nd_motor_flag\000"
 32137      326E645F 
 32137      6D6F746F 
 32137      725F666C 
 32137      616700
 32138              	.LASF332:
 32139 02f8 745F7374 		.ascii	"t_start\000"
 32139      61727400 
 32140              	.LASF115:
 32141 0300 65786365 		.ascii	"excessive_signal_activity\000"
 32141      73736976 
 32141      655F7369 
 32141      676E616C 
 32141      5F616374 
 32142              	.LASF167:
 32143 031a 72656164 		.ascii	"read_imu_flag\000"
 32143      5F696D75 
 32143      5F666C61 
 32143      6700
 32144              	.LASF175:
 32145 0328 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 32145      72645F45 
 32145      4D475F68 
 32145      6973746F 
 32145      72795F6F 
 32146              	.LASF380:
 32147 0341 74696D65 		.ascii	"timer_value\000"
 32147      725F7661 
 32147      6C756500 
 32148              	.LASF4:
 32149 034d 6C6F6E67 		.ascii	"long int\000"
 32149      20696E74 
 32149      00
 32150              	.LASF201:
 32151 0356 756E7573 		.ascii	"unused_bytes1\000"
 32151      65645F62 
 32151      79746573 
 32151      3100
 32152              	.LASF363:
 32153 0364 6D6F746F 		.ascii	"motor_idx\000"
 32153      725F6964 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 691


 32153      7800
 32154              	.LASF122:
 32155 036e 72657365 		.ascii	"reset_counters\000"
 32155      745F636F 
 32155      756E7465 
 32155      727300
 32156              	.LASF178:
 32157 037d 75736572 		.ascii	"user_emg\000"
 32157      5F656D67 
 32157      00
 32158              	.LASF349:
 32159 0386 636D645F 		.ascii	"cmd_get_SD_file\000"
 32159      6765745F 
 32159      53445F66 
 32159      696C6500 
 32160              	.LASF318:
 32161 0396 7365745A 		.ascii	"setZeros\000"
 32161      65726F73 
 32161      00
 32162              	.LASF117:
 32163 039f 756E7573 		.ascii	"unused_bytes\000"
 32163      65645F62 
 32163      79746573 
 32163      00
 32164              	.LASF207:
 32165 03ac 61636365 		.ascii	"accel_value\000"
 32165      6C5F7661 
 32165      6C756500 
 32166              	.LASF227:
 32167 03b8 4E554D5F 		.ascii	"NUM_ITEMS\000"
 32167      4954454D 
 32167      5300
 32168              	.LASF106:
 32169 03c2 73745F63 		.ascii	"st_counters\000"
 32169      6F756E74 
 32169      65727300 
 32170              	.LASF250:
 32171 03ce 4D454D5F 		.ascii	"MEM_P\000"
 32171      5000
 32172              	.LASF19:
 32173 03d4 666C6F61 		.ascii	"float32\000"
 32173      74333200 
 32174              	.LASF347:
 32175 03dc 636D645F 		.ascii	"cmd_get_ADC_map\000"
 32175      6765745F 
 32175      4144435F 
 32175      6D617000 
 32176              	.LASF41:
 32177 03ec 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 32177      4745545F 
 32177      43555252 
 32177      454E5453 
 32177      00
 32178              	.LASF291:
 32179 03fd 70726570 		.ascii	"prepare_SD_EMG_history\000"
 32179      6172655F 
 32179      53445F45 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 692


 32179      4D475F68 
 32179      6973746F 
 32180              	.LASF348:
 32181 0414 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 32181      6765745F 
 32181      4144435F 
 32181      72617700 
 32182              	.LASF396:
 32183 0424 73645061 		.ascii	"sdParam\000"
 32183      72616D00 
 32184              	.LASF260:
 32185 042c 6175785F 		.ascii	"aux_float2\000"
 32185      666C6F61 
 32185      743200
 32186              	.LASF335:
 32187 0437 636D645F 		.ascii	"cmd_ping\000"
 32187      70696E67 
 32187      00
 32188              	.LASF279:
 32189 0440 7370695F 		.ascii	"spi_delay_menu_len\000"
 32189      64656C61 
 32189      795F6D65 
 32189      6E755F6C 
 32189      656E00
 32190              	.LASF258:
 32191 0453 7365745F 		.ascii	"set_custom_param\000"
 32191      63757374 
 32191      6F6D5F70 
 32191      6172616D 
 32191      00
 32192              	.LASF352:
 32193 0464 636D645F 		.ascii	"cmd_remove_SD_file\000"
 32193      72656D6F 
 32193      76655F53 
 32193      445F6669 
 32193      6C6500
 32194              	.LASF317:
 32195 0477 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 32195      6E69745F 
 32195      4F74626B 
 32195      41637457 
 32195      72697374 
 32196              	.LASF0:
 32197 048e 7369676E 		.ascii	"signed char\000"
 32197      65642063 
 32197      68617200 
 32198              	.LASF177:
 32199 049a 75736572 		.ascii	"user_code_string\000"
 32199      5F636F64 
 32199      655F7374 
 32199      72696E67 
 32199      00
 32200              	.LASF212:
 32201 04ab 73745F63 		.ascii	"st_calib\000"
 32201      616C6962 
 32201      00
 32202              	.LASF357:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 693


 32203 04b4 6572725F 		.ascii	"err_emg_1\000"
 32203      656D675F 
 32203      3100
 32204              	.LASF306:
 32205 04be 6D656D53 		.ascii	"memStore\000"
 32205      746F7265 
 32205      00
 32206              	.LASF351:
 32207 04c7 66696C65 		.ascii	"filename\000"
 32207      6E616D65 
 32207      00
 32208              	.LASF73:
 32209 04d0 6D6F746F 		.ascii	"motor_supply_type\000"
 32209      725F7375 
 32209      70706C79 
 32209      5F747970 
 32209      6500
 32210              	.LASF334:
 32211 04e2 72656164 		.ascii	"read_flag\000"
 32211      5F666C61 
 32211      6700
 32212              	.LASF389:
 32213 04ec 4144435F 		.ascii	"ADC_buf\000"
 32213      62756600 
 32214              	.LASF386:
 32215 04f4 696E7465 		.ascii	"interrupt_flag\000"
 32215      72727570 
 32215      745F666C 
 32215      616700
 32216              	.LASF284:
 32217 0503 73746570 		.ascii	"step\000"
 32217      00
 32218              	.LASF1:
 32219 0508 756E7369 		.ascii	"unsigned char\000"
 32219      676E6564 
 32219      20636861 
 32219      7200
 32220              	.LASF151:
 32221 0516 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 32221      72657665 
 32221      72735F6D 
 32221      6F746F72 
 32221      5F666C61 
 32222              	.LASF369:
 32223 052c 675F7265 		.ascii	"g_refNew\000"
 32223      664E6577 
 32223      00
 32224              	.LASF121:
 32225 0535 72696768 		.ascii	"right_left\000"
 32225      745F6C65 
 32225      667400
 32226              	.LASF29:
 32227 0540 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 32227      53544F52 
 32227      455F4445 
 32227      4641554C 
 32227      545F5041 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 694


 32228              	.LASF149:
 32229 0559 656E636F 		.ascii	"encoder_line\000"
 32229      6465725F 
 32229      6C696E65 
 32229      00
 32230              	.LASF274:
 32231 0566 6E5F696D 		.ascii	"n_imu_str_len\000"
 32231      755F7374 
 32231      725F6C65 
 32231      6E00
 32232              	.LASF277:
 32233 0574 696D755F 		.ascii	"imu_table_str_len\000"
 32233      7461626C 
 32233      655F7374 
 32233      725F6C65 
 32233      6E00
 32234              	.LASF304:
 32235 0586 76616C75 		.ascii	"value\000"
 32235      6500
 32236              	.LASF206:
 32237 058c 666C6167 		.ascii	"flags\000"
 32237      7300
 32238              	.LASF101:
 32239 0592 70726573 		.ascii	"pressure\000"
 32239      73757265 
 32239      00
 32240              	.LASF37:
 32241 059b 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 32241      4745545F 
 32241      41435449 
 32241      56415445 
 32241      00
 32242              	.LASF22:
 32243 05ac 63686172 		.ascii	"char\000"
 32243      00
 32244              	.LASF144:
 32245 05b1 6D61785F 		.ascii	"max_step_pos\000"
 32245      73746570 
 32245      5F706F73 
 32245      00
 32246              	.LASF402:
 32247 05be 675F696D 		.ascii	"g_imu\000"
 32247      7500
 32248              	.LASF310:
 32249 05c4 7265745F 		.ascii	"ret_val\000"
 32249      76616C00 
 32250              	.LASF257:
 32251 05cc 6D656E75 		.ascii	"menu_idx\000"
 32251      5F696478 
 32251      00
 32252              	.LASF266:
 32253 05d5 73746172 		.ascii	"start_byte\000"
 32253      745F6279 
 32253      746500
 32254              	.LASF263:
 32255 05e0 6E756D5F 		.ascii	"num_mag_cal_params\000"
 32255      6D61675F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 695


 32255      63616C5F 
 32255      70617261 
 32255      6D7300
 32256              	.LASF150:
 32257 05f3 70776D5F 		.ascii	"pwm_rate_limiter\000"
 32257      72617465 
 32257      5F6C696D 
 32257      69746572 
 32257      00
 32258              	.LASF130:
 32259 0604 6B5F645F 		.ascii	"k_d_c\000"
 32259      6300
 32260              	.LASF100:
 32261 060a 73745F66 		.ascii	"st_fb_meas\000"
 32261      625F6D65 
 32261      617300
 32262              	.LASF220:
 32263 0615 7061636B 		.ascii	"packet_string\000"
 32263      65745F73 
 32263      7472696E 
 32263      6700
 32264              	.LASF155:
 32265 0623 6D5F6D75 		.ascii	"m_mult\000"
 32265      6C7400
 32266              	.LASF129:
 32267 062a 6B5F695F 		.ascii	"k_i_c\000"
 32267      6300
 32268              	.LASF307:
 32269 0630 64697370 		.ascii	"displacement\000"
 32269      6C616365 
 32269      6D656E74 
 32269      00
 32270              	.LASF301:
 32271 063d 64617461 		.ascii	"data_length\000"
 32271      5F6C656E 
 32271      67746800 
 32272              	.LASF142:
 32273 0649 706F735F 		.ascii	"pos_lim_sup\000"
 32273      6C696D5F 
 32273      73757000 
 32274              	.LASF285:
 32275 0655 5230315F 		.ascii	"R01_str\000"
 32275      73747200 
 32276              	.LASF163:
 32277 065d 656D675F 		.ascii	"emg_speed\000"
 32277      73706565 
 32277      6400
 32278              	.LASF182:
 32279 0667 72657374 		.ascii	"rest_vel\000"
 32279      5F76656C 
 32279      00
 32280              	.LASF233:
 32281 0670 7061636B 		.ascii	"packet_data\000"
 32281      65745F64 
 32281      61746100 
 32282              	.LASF118:
 32283 067c 73745F64 		.ascii	"st_device\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 696


 32283      65766963 
 32283      6500
 32284              	.LASF394:
 32285 0686 7046696C 		.ascii	"pFile\000"
 32285      6500
 32286              	.LASF174:
 32287 068c 4144435F 		.ascii	"ADC_conf\000"
 32287      636F6E66 
 32287      00
 32288              	.LASF298:
 32289 0695 636F6D6D 		.ascii	"commWrite\000"
 32289      57726974 
 32289      6500
 32290              	.LASF366:
 32291 069f 64656163 		.ascii	"deactivate_slaves\000"
 32291      74697661 
 32291      74655F73 
 32291      6C617665 
 32291      7300
 32292              	.LASF309:
 32293 06b1 70616765 		.ascii	"pages\000"
 32293      7300
 32294              	.LASF313:
 32295 06b7 6D656D49 		.ascii	"memInit\000"
 32295      6E697400 
 32296              	.LASF132:
 32297 06bf 6B5F695F 		.ascii	"k_i_dl\000"
 32297      646C00
 32298              	.LASF38:
 32299 06c6 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 32299      5345545F 
 32299      494E5055 
 32299      545300
 32300              	.LASF103:
 32301 06d5 62756666 		.ascii	"buffer\000"
 32301      657200
 32302              	.LASF134:
 32303 06dc 6B5F705F 		.ascii	"k_p_c_dl\000"
 32303      635F646C 
 32303      00
 32304              	.LASF319:
 32305 06e5 636D645F 		.ascii	"cmd_get_measurements\000"
 32305      6765745F 
 32305      6D656173 
 32305      7572656D 
 32305      656E7473 
 32306              	.LASF215:
 32307 06fa 73706565 		.ascii	"speed\000"
 32307      6400
 32308              	.LASF219:
 32309 0700 72785F63 		.ascii	"rx_cmd\000"
 32309      6D6400
 32310              	.LASF88:
 32311 0707 54595045 		.ascii	"TYPE_DOUBLE\000"
 32311      5F444F55 
 32311      424C4500 
 32312              	.LASF354:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 697


 32313 0713 736C6176 		.ascii	"slave_motor_idx\000"
 32313      655F6D6F 
 32313      746F725F 
 32313      69647800 
 32314              	.LASF371:
 32315 0723 675F6D65 		.ascii	"g_meas\000"
 32315      617300
 32316              	.LASF324:
 32317 072a 6C617374 		.ascii	"last_aux_int16\000"
 32317      5F617578 
 32317      5F696E74 
 32317      313600
 32318              	.LASF77:
 32319 0739 41434B5F 		.ascii	"ACK_ERROR\000"
 32319      4552524F 
 32319      5200
 32320              	.LASF391:
 32321 0743 64617461 		.ascii	"data_encoder_raw\000"
 32321      5F656E63 
 32321      6F646572 
 32321      5F726177 
 32321      00
 32322              	.LASF60:
 32323 0754 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 32323      545F4D4F 
 32323      44455F45 
 32323      58544552 
 32323      4E414C00 
 32324              	.LASF248:
 32325 0768 696E6465 		.ascii	"index\000"
 32325      7800
 32326              	.LASF193:
 32327 076e 6D617869 		.ascii	"maximum_pressure_kPa\000"
 32327      6D756D5F 
 32327      70726573 
 32327      73757265 
 32327      5F6B5061 
 32328              	.LASF183:
 32329 0783 72657374 		.ascii	"rest_position_flag\000"
 32329      5F706F73 
 32329      6974696F 
 32329      6E5F666C 
 32329      616700
 32330              	.LASF185:
 32331 0796 6A6F7973 		.ascii	"joystick_closure_speed\000"
 32331      7469636B 
 32331      5F636C6F 
 32331      73757265 
 32331      5F737065 
 32332              	.LASF350:
 32333 07ad 66696C65 		.ascii	"filename_length\000"
 32333      6E616D65 
 32333      5F6C656E 
 32333      67746800 
 32334              	.LASF135:
 32335 07bd 6B5F695F 		.ascii	"k_i_c_dl\000"
 32335      635F646C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 698


 32335      00
 32336              	.LASF330:
 32337 07c6 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 32337      52656164 
 32337      52657343 
 32337      75727246 
 32337      726F6D53 
 32338              	.LASF329:
 32339 07dc 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 32339      6765745F 
 32339      63757272 
 32339      656E7473 
 32339      5F666F72 
 32340              	.LASF269:
 32341 07f6 6D61675F 		.ascii	"mag_param_str\000"
 32341      70617261 
 32341      6D5F7374 
 32341      7200
 32342              	.LASF388:
 32343 0804 72657365 		.ascii	"reset_PSoC_flag\000"
 32343      745F5053 
 32343      6F435F66 
 32343      6C616700 
 32344              	.LASF361:
 32345 0814 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 32345      5F616374 
 32345      5F777269 
 32345      73745F63 
 32345      6F6E7472 
 32346              	.LASF89:
 32347 082b 54595045 		.ascii	"TYPE_STRING\000"
 32347      5F535452 
 32347      494E4700 
 32348              	.LASF72:
 32349 0837 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 32349      5F414E44 
 32349      5F504F53 
 32349      5F434F4E 
 32349      54524F4C 
 32350              	.LASF28:
 32351 084c 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 32351      53544F52 
 32351      455F5041 
 32351      52414D53 
 32351      00
 32352              	.LASF230:
 32353 085d 50415241 		.ascii	"PARAMS_STR\000"
 32353      4D535F53 
 32353      545200
 32354              	.LASF213:
 32355 0868 656E6162 		.ascii	"enabled\000"
 32355      6C656400 
 32356              	.LASF7:
 32357 0870 6C6F6E67 		.ascii	"long unsigned int\000"
 32357      20756E73 
 32357      69676E65 
 32357      6420696E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 699


 32357      7400
 32358              	.LASF32:
 32359 0882 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 32359      424F4F54 
 32359      4C4F4144 
 32359      455200
 32360              	.LASF187:
 32361 0891 6A6F7973 		.ascii	"joystick_gains\000"
 32361      7469636B 
 32361      5F676169 
 32361      6E7300
 32362              	.LASF96:
 32363 08a0 686F6C64 		.ascii	"hold_curr\000"
 32363      5F637572 
 32363      7200
 32364              	.LASF66:
 32365 08aa 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 32365      545F4D4F 
 32365      44455F4A 
 32365      4F595354 
 32365      49434B00 
 32366              	.LASF113:
 32367 08be 746F7461 		.ascii	"total_time_rest\000"
 32367      6C5F7469 
 32367      6D655F72 
 32367      65737400 
 32368              	.LASF222:
 32369 08ce 7374725F 		.ascii	"str_sd_data\000"
 32369      73645F64 
 32369      61746100 
 32370              	.LASF137:
 32371 08da 61637469 		.ascii	"activ\000"
 32371      7600
 32372              	.LASF232:
 32373 08e0 4D454E55 		.ascii	"MENU_STR\000"
 32373      5F535452 
 32373      00
 32374              	.LASF154:
 32375 08e9 6D5F6F66 		.ascii	"m_off\000"
 32375      6600
 32376              	.LASF78:
 32377 08ef 41434B5F 		.ascii	"ACK_OK\000"
 32377      4F4B00
 32378              	.LASF80:
 32379 08f6 54595045 		.ascii	"TYPE_FLAG\000"
 32379      5F464C41 
 32379      4700
 32380              	.LASF210:
 32381 0900 71756174 		.ascii	"quat_value\000"
 32381      5F76616C 
 32381      756500
 32382              	.LASF265:
 32383 090b 7061636B 		.ascii	"packet_length\000"
 32383      65745F6C 
 32383      656E6774 
 32383      6800
 32384              	.LASF180:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 700


 32385 0919 72657374 		.ascii	"rest_pos\000"
 32385      5F706F73 
 32385      00
 32386              	.LASF91:
 32387 0922 63757272 		.ascii	"curr\000"
 32387      00
 32388              	.LASF147:
 32389 0927 696E7075 		.ascii	"input_mode\000"
 32389      745F6D6F 
 32389      646500
 32390              	.LASF70:
 32391 0932 434F4E54 		.ascii	"CONTROL_PWM\000"
 32391      524F4C5F 
 32391      50574D00 
 32392              	.LASF43:
 32393 093e 434D445F 		.ascii	"CMD_GET_EMG\000"
 32393      4745545F 
 32393      454D4700 
 32394              	.LASF314:
 32395 094a 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 32395      6E69745F 
 32395      536F6674 
 32395      48616E64 
 32395      50726F00 
 32396              	.LASF31:
 32397 095e 434D445F 		.ascii	"CMD_GET_INFO\000"
 32397      4745545F 
 32397      494E464F 
 32397      00
 32398              	.LASF261:
 32399 096b 6765745F 		.ascii	"get_IMU_param_list\000"
 32399      494D555F 
 32399      70617261 
 32399      6D5F6C69 
 32399      737400
 32400              	.LASF344:
 32401 097e 73696E67 		.ascii	"single_packet\000"
 32401      6C655F70 
 32401      61636B65 
 32401      7400
 32402              	.LASF264:
 32403 098c 66697273 		.ascii	"first_imu_parameter\000"
 32403      745F696D 
 32403      755F7061 
 32403      72616D65 
 32403      74657200 
 32404              	.LASF42:
 32405 09a0 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 32405      4745545F 
 32405      43555252 
 32405      5F414E44 
 32405      5F4D4541 
 32406              	.LASF408:
 32407 09b6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 32407      43313120 
 32407      352E342E 
 32407      31203230 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 701


 32407      31363036 
 32408 09e9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 32408      20726576 
 32408      6973696F 
 32408      6E203233 
 32408      37373135 
 32409 0a1c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 32409      66756E63 
 32409      74696F6E 
 32409      2D736563 
 32409      74696F6E 
 32410              	.LASF93:
 32411 0a44 73745F72 		.ascii	"st_ref\000"
 32411      656600
 32412              	.LASF322:
 32413 0a4b 636D645F 		.ascii	"cmd_get_joystick\000"
 32413      6765745F 
 32413      6A6F7973 
 32413      7469636B 
 32413      00
 32414              	.LASF47:
 32415 0a5c 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 32415      5345545F 
 32415      43554646 
 32415      5F494E50 
 32415      55545300 
 32416              	.LASF179:
 32417 0a70 73745F53 		.ascii	"st_SH_spec\000"
 32417      485F7370 
 32417      656300
 32418              	.LASF379:
 32419 0a7b 63616C69 		.ascii	"calib\000"
 32419      6200
 32420              	.LASF6:
 32421 0a81 5F5F7569 		.ascii	"__uint32_t\000"
 32421      6E743332 
 32421      5F7400
 32422              	.LASF8:
 32423 0a8c 6C6F6E67 		.ascii	"long long int\000"
 32423      206C6F6E 
 32423      6720696E 
 32423      7400
 32424              	.LASF68:
 32425 0a9a 53485F63 		.ascii	"SH_control_mode\000"
 32425      6F6E7472 
 32425      6F6C5F6D 
 32425      6F646500 
 32426              	.LASF82:
 32427 0aaa 54595045 		.ascii	"TYPE_UINT8\000"
 32427      5F55494E 
 32427      543800
 32428              	.LASF328:
 32429 0ab5 636D645F 		.ascii	"cmd_get_currents\000"
 32429      6765745F 
 32429      63757272 
 32429      656E7473 
 32429      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 702


 32430              	.LASF75:
 32431 0ac6 4D41584F 		.ascii	"MAXON_12V\000"
 32431      4E5F3132 
 32431      5600
 32432              	.LASF387:
 32433 0ad0 6368616E 		.ascii	"change_ext_ref_flag\000"
 32433      67655F65 
 32433      78745F72 
 32433      65665F66 
 32433      6C616700 
 32434              	.LASF21:
 32435 0ae4 646F7562 		.ascii	"double\000"
 32435      6C6500
 32436              	.LASF56:
 32437 0aeb 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 32437      4745545F 
 32437      53445F53 
 32437      494E474C 
 32437      455F4649 
 32438              	.LASF153:
 32439 0b02 456E635F 		.ascii	"Enc_raw_read_conf\000"
 32439      7261775F 
 32439      72656164 
 32439      5F636F6E 
 32439      6600
 32440              	.LASF216:
 32441 0b14 72657065 		.ascii	"repetitions\000"
 32441      74697469 
 32441      6F6E7300 
 32442              	.LASF143:
 32443 0b20 6D61785F 		.ascii	"max_step_neg\000"
 32443      73746570 
 32443      5F6E6567 
 32443      00
 32444              	.LASF406:
 32445 0b2d 656D675F 		.ascii	"emg_history_next_idx\000"
 32445      68697374 
 32445      6F72795F 
 32445      6E657874 
 32445      5F696478 
 32446              	.LASF190:
 32447 0b42 736C6176 		.ascii	"slave_ID\000"
 32447      655F4944 
 32447      00
 32448              	.LASF385:
 32449 0b4b 72657365 		.ascii	"reset_last_value_flag\000"
 32449      745F6C61 
 32449      73745F76 
 32449      616C7565 
 32449      5F666C61 
 32450              	.LASF231:
 32451 0b61 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 32451      4F4D5F50 
 32451      4152414D 
 32451      5F474554 
 32451      00
 32452              	.LASF20:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 703


 32453 0b72 666C6F61 		.ascii	"float\000"
 32453      7400
 32454              	.LASF169:
 32455 0b78 494D555F 		.ascii	"IMU_conf\000"
 32455      636F6E66 
 32455      00
 32456              	.LASF57:
 32457 0b81 434D445F 		.ascii	"CMD_REMOVE_SD_SINGLE_FILE\000"
 32457      52454D4F 
 32457      56455F53 
 32457      445F5349 
 32457      4E474C45 
 32458              	.LASF249:
 32459 0b9b 50415241 		.ascii	"PARAM_IDX\000"
 32459      4D5F4944 
 32459      5800
 32460              	.LASF97:
 32461 0ba5 73745F61 		.ascii	"st_adc_meas\000"
 32461      64635F6D 
 32461      65617300 
 32462              	.LASF245:
 32463 0bb1 6D5F6164 		.ascii	"m_addr\000"
 32463      647200
 32464              	.LASF378:
 32465 0bb8 635F6D65 		.ascii	"c_mem\000"
 32465      6D00
 32466              	.LASF300:
 32467 0bbe 64617461 		.ascii	"data_array\000"
 32467      5F617272 
 32467      617900
 32468              	.LASF10:
 32469 0bc9 756E7369 		.ascii	"unsigned int\000"
 32469      676E6564 
 32469      20696E74 
 32469      00
 32470              	.LASF358:
 32471 0bd6 6572725F 		.ascii	"err_emg_2\000"
 32471      656D675F 
 32471      3200
 32472              	.LASF315:
 32473 0be0 6D656D49 		.ascii	"memInit_Master\000"
 32473      6E69745F 
 32473      4D617374 
 32473      657200
 32474              	.LASF234:
 32475 0bef 7061636B 		.ascii	"packet_lenght\000"
 32475      65745F6C 
 32475      656E6768 
 32475      7400
 32476              	.LASF303:
 32477 0bfd 73656E64 		.ascii	"sendAcknowledgment\000"
 32477      41636B6E 
 32477      6F776C65 
 32477      64676D65 
 32477      6E7400
 32478              	.LASF288:
 32479 0c10 70726570 		.ascii	"prepare_SD_legend\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 704


 32479      6172655F 
 32479      53445F6C 
 32479      6567656E 
 32479      6400
 32480              	.LASF403:
 32481 0c22 4D616743 		.ascii	"MagCal\000"
 32481      616C00
 32482              	.LASF58:
 32483 0c29 53485F63 		.ascii	"SH_command\000"
 32483      6F6D6D61 
 32483      6E6400
 32484              	.LASF84:
 32485 0c34 54595045 		.ascii	"TYPE_UINT16\000"
 32485      5F55494E 
 32485      54313600 
 32486              	.LASF200:
 32487 0c40 666C6167 		.ascii	"flag\000"
 32487      00
 32488              	.LASF323:
 32489 0c45 636D645F 		.ascii	"cmd_set_inputs\000"
 32489      7365745F 
 32489      696E7075 
 32489      747300
 32490              	.LASF148:
 32491 0c54 636F6E74 		.ascii	"control_mode\000"
 32491      726F6C5F 
 32491      6D6F6465 
 32491      00
 32492              	.LASF338:
 32493 0c61 6F66665F 		.ascii	"off_1\000"
 32493      3100
 32494              	.LASF61:
 32495 0c67 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 32495      545F4D4F 
 32495      44455F45 
 32495      4E434F44 
 32495      45523300 
 32496              	.LASF299:
 32497 0c7b 636F6D6D 		.ascii	"commWriteID\000"
 32497      57726974 
 32497      65494400 
 32498              	.LASF52:
 32499 0c87 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 32499      4745545F 
 32499      454E434F 
 32499      4445525F 
 32499      434F4E46 
 32500              	.LASF166:
 32501 0c9c 73745F69 		.ascii	"st_imu\000"
 32501      6D7500
 32502              	.LASF326:
 32503 0ca3 636D645F 		.ascii	"cmd_get_activate\000"
 32503      6765745F 
 32503      61637469 
 32503      76617465 
 32503      00
 32504              	.LASF355:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 705


 32505 0cb4 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 32505      61637469 
 32505      76617469 
 32505      6F6E5F76 
 32505      656C6F63 
 32506              	.LASF236:
 32507 0cd0 73747269 		.ascii	"string_lenght\000"
 32507      6E675F6C 
 32507      656E6768 
 32507      7400
 32508              	.LASF87:
 32509 0cde 54595045 		.ascii	"TYPE_FLOAT\000"
 32509      5F464C4F 
 32509      415400
 32510              	.LASF254:
 32511 0ce9 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 32511      4F4D5F50 
 32511      4152414D 
 32511      5F534554 
 32511      5F4C4953 
 32512              	.LASF228:
 32513 0cff 4E554D5F 		.ascii	"NUM_STRUCT\000"
 32513      53545255 
 32513      435400
 32514              	.LASF401:
 32515 0d0a 73696E67 		.ascii	"single_imu_size\000"
 32515      6C655F69 
 32515      6D755F73 
 32515      697A6500 
 32516              	.LASF259:
 32517 0d1a 6175785F 		.ascii	"aux_uchar\000"
 32517      75636861 
 32517      7200
 32518              	.LASF286:
 32519 0d24 70726570 		.ascii	"prepare_R01_info\000"
 32519      6172655F 
 32519      5230315F 
 32519      696E666F 
 32519      00
 32520              	.LASF98:
 32521 0d35 6164645F 		.ascii	"add_emg\000"
 32521      656D6700 
 32522              	.LASF83:
 32523 0d3d 54595045 		.ascii	"TYPE_INT16\000"
 32523      5F494E54 
 32523      313600
 32524              	.LASF240:
 32525 0d48 6175785F 		.ascii	"aux_uint16\000"
 32525      75696E74 
 32525      313600
 32526              	.LASF161:
 32527 0d53 656D675F 		.ascii	"emg_threshold\000"
 32527      74687265 
 32527      73686F6C 
 32527      6400
 32528              	.LASF46:
 32529 0d61 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 706


 32529      4745545F 
 32529      43555252 
 32529      5F444946 
 32529      4600
 32530              	.LASF158:
 32531 0d73 6D6F746F 		.ascii	"motor_handle_ratio\000"
 32531      725F6861 
 32531      6E646C65 
 32531      5F726174 
 32531      696F00
 32532              	.LASF109:
 32533 0d86 63757272 		.ascii	"current_hist\000"
 32533      656E745F 
 32533      68697374 
 32533      00
 32534              	.LASF71:
 32535 0d93 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 32535      524F4C5F 
 32535      43555252 
 32535      454E5400 
 32536              	.LASF24:
 32537 0da3 6C6F6E67 		.ascii	"long double\000"
 32537      20646F75 
 32537      626C6500 
 32538              	.LASF86:
 32539 0daf 54595045 		.ascii	"TYPE_UINT32\000"
 32539      5F55494E 
 32539      54333200 
 32540              	.LASF191:
 32541 0dbb 73745F46 		.ascii	"st_FB_spec\000"
 32541      425F7370 
 32541      656300
 32542              	.LASF225:
 32543 0dc6 5641525F 		.ascii	"VAR_P\000"
 32543      5000
 32544              	.LASF253:
 32545 0dcc 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 32545      4F4D5F50 
 32545      4152414D 
 32545      5F474554 
 32545      5F4C4953 
 32546              	.LASF116:
 32547 0de2 6D6F7469 		.ascii	"motion_counter\000"
 32547      6F6E5F63 
 32547      6F756E74 
 32547      657200
 32548              	.LASF302:
 32549 0df1 63686563 		.ascii	"checksum\000"
 32549      6B73756D 
 32549      00
 32550              	.LASF370:
 32551 0dfa 675F7265 		.ascii	"g_refOld\000"
 32551      664F6C64 
 32551      00
 32552              	.LASF35:
 32553 0e03 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 32553      48414E44 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 707


 32553      5F43414C 
 32553      49425241 
 32553      544500
 32554              	.LASF208:
 32555 0e16 6779726F 		.ascii	"gyro_value\000"
 32555      5F76616C 
 32555      756500
 32556              	.LASF171:
 32557 0e21 63757272 		.ascii	"curr_time\000"
 32557      5F74696D 
 32557      6500
 32558              	.LASF156:
 32559 0e2b 646F7562 		.ascii	"double_encoder_on_off\000"
 32559      6C655F65 
 32559      6E636F64 
 32559      65725F6F 
 32559      6E5F6F66 
 32560              	.LASF362:
 32561 0e41 64726976 		.ascii	"drive_slave\000"
 32561      655F736C 
 32561      61766500 
 32562              	.LASF168:
 32563 0e4d 5350495F 		.ascii	"SPI_read_delay\000"
 32563      72656164 
 32563      5F64656C 
 32563      617900
 32564              	.LASF76:
 32565 0e5c 61636B6E 		.ascii	"acknowledgment_values\000"
 32565      6F776C65 
 32565      64676D65 
 32565      6E745F76 
 32565      616C7565 
 32566              	.LASF243:
 32567 0e72 4D4F544F 		.ascii	"MOTOR_IDX\000"
 32567      525F4944 
 32567      5800
 32568              	.LASF312:
 32569 0e7c 6D656D52 		.ascii	"memRestore\000"
 32569      6573746F 
 32569      726500
 32570              	.LASF267:
 32571 0e87 6E5F696D 		.ascii	"n_imu_str\000"
 32571      755F7374 
 32571      7200
 32572              	.LASF281:
 32573 0e91 696E666F 		.ascii	"info_string\000"
 32573      5F737472 
 32573      696E6700 
 32574              	.LASF289:
 32575 0e9d 70726570 		.ascii	"prepare_SD_info\000"
 32575      6172655F 
 32575      53445F69 
 32575      6E666F00 
 32576              	.LASF356:
 32577 0ead 66736D5F 		.ascii	"fsm_state\000"
 32577      73746174 
 32577      6500
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 708


 32578              	.LASF9:
 32579 0eb7 6C6F6E67 		.ascii	"long long unsigned int\000"
 32579      206C6F6E 
 32579      6720756E 
 32579      7369676E 
 32579      65642069 
 32580              	.LASF85:
 32581 0ece 54595045 		.ascii	"TYPE_INT32\000"
 32581      5F494E54 
 32581      333200
 32582              	.LASF242:
 32583 0ed9 6175785F 		.ascii	"aux_uint32\000"
 32583      75696E74 
 32583      333200
 32584              	.LASF104:
 32585 0ee4 6C656E67 		.ascii	"length\000"
 32585      746800
 32586              	.LASF255:
 32587 0eeb 55534552 		.ascii	"USER_ID_PARAM\000"
 32587      5F49445F 
 32587      50415241 
 32587      4D00
 32588              	.LASF205:
 32589 0ef9 73745F69 		.ascii	"st_imu_data\000"
 32589      6D755F64 
 32589      61746100 
 32590              	.LASF209:
 32591 0f05 6D61675F 		.ascii	"mag_value\000"
 32591      76616C75 
 32591      6500
 32592              	.LASF92:
 32593 0f0f 6F6E6F66 		.ascii	"onoff\000"
 32593      6600
 32594              	.LASF45:
 32595 0f15 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 32595      4745545F 
 32595      41434345 
 32595      4C00
 32596              	.LASF320:
 32597 0f23 636D645F 		.ascii	"cmd_get_velocities\000"
 32597      6765745F 
 32597      76656C6F 
 32597      63697469 
 32597      657300
 32598              	.LASF311:
 32599 0f36 6D656D52 		.ascii	"memRecall\000"
 32599      6563616C 
 32599      6C00
 32600              	.LASF381:
 32601 0f40 74696D65 		.ascii	"timer_value0\000"
 32601      725F7661 
 32601      6C756530 
 32601      00
 32602              	.LASF48:
 32603 0f4d 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 32603      5345545F 
 32603      42415544 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 709


 32603      52415445 
 32603      00
 32604              	.LASF128:
 32605 0f5e 6B5F705F 		.ascii	"k_p_c\000"
 32605      6300
 32606              	.LASF271:
 32607 0f64 696D755F 		.ascii	"imu_table_str\000"
 32607      7461626C 
 32607      655F7374 
 32607      7200
 32608              	.LASF382:
 32609 0f72 6465765F 		.ascii	"dev_tension\000"
 32609      74656E73 
 32609      696F6E00 
 32610              	.LASF139:
 32611 0f7e 6D6F746F 		.ascii	"motor_driver_type\000"
 32611      725F6472 
 32611      69766572 
 32611      5F747970 
 32611      6500
 32612              	.LASF339:
 32613 0f90 6D756C74 		.ascii	"mult_1\000"
 32613      5F3100
 32614              	.LASF283:
 32615 0f97 70726570 		.ascii	"prepare_counter_info\000"
 32615      6172655F 
 32615      636F756E 
 32615      7465725F 
 32615      696E666F 
 32616              	.LASF23:
 32617 0fac 72656738 		.ascii	"reg8\000"
 32617      00
 32618              	.LASF194:
 32619 0fb1 70726F70 		.ascii	"prop_err_fb_gain\000"
 32619      5F657272 
 32619      5F66625F 
 32619      6761696E 
 32619      00
 32620              	.LASF296:
 32621 0fc2 636F6D6D 		.ascii	"commWrite_old_id\000"
 32621      57726974 
 32621      655F6F6C 
 32621      645F6964 
 32621      00
 32622              	.LASF247:
 32623 0fd3 6D616E61 		.ascii	"manage_param_list\000"
 32623      67655F70 
 32623      6172616D 
 32623      5F6C6973 
 32623      7400
 32624              	.LASF30:
 32625 0fe5 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 32625      52455354 
 32625      4F52455F 
 32625      50415241 
 32625      4D5300
 32626              	.LASF395:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 710


 32627 0ff8 73644669 		.ascii	"sdFile\000"
 32627      6C6500
 32628              	.LASF287:
 32629 0fff 70726570 		.ascii	"prepare_SD_param_info\000"
 32629      6172655F 
 32629      53445F70 
 32629      6172616D 
 32629      5F696E66 
 32630              	.LASF331:
 32631 1015 63757272 		.ascii	"curr_diff\000"
 32631      5F646966 
 32631      6600
 32632              	.LASF189:
 32633 101f 736C6176 		.ascii	"slave_comm_active\000"
 32633      655F636F 
 32633      6D6D5F61 
 32633      63746976 
 32633      6500
 32634              	.LASF290:
 32635 1031 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 32635      6172655F 
 32635      53445F45 
 32635      4D475F48 
 32635      6973746F 
 32636              	.LASF297:
 32637 104f 6F6C645F 		.ascii	"old_id\000"
 32637      696400
 32638              	.LASF411:
 32639 1056 5F5F5245 		.ascii	"__REV16\000"
 32639      56313600 
 32640              	.LASF392:
 32641 105e 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 32641      636F6465 
 32641      725F4C69 
 32641      6E655F43 
 32641      6F6E6E65 
 32642              	.LASF126:
 32643 1077 6465765F 		.ascii	"dev_type\000"
 32643      74797065 
 32643      00
 32644              	.LASF176:
 32645 1080 73745F75 		.ascii	"st_user\000"
 32645      73657200 
 32646              	.LASF327:
 32647 1088 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 32647      6765745F 
 32647      63757272 
 32647      5F616E64 
 32647      5F6D6561 
 32648              	.LASF159:
 32649 109e 67656172 		.ascii	"gears_params\000"
 32649      735F7061 
 32649      72616D73 
 32649      00
 32650              	.LASF170:
 32651 10ab 73745F65 		.ascii	"st_expansion\000"
 32651      7870616E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 711


 32651      73696F6E 
 32651      00
 32652              	.LASF164:
 32653 10b8 656D675F 		.ascii	"emg_calibration_flag\000"
 32653      63616C69 
 32653      62726174 
 32653      696F6E5F 
 32653      666C6167 
 32654              	.LASF94:
 32655 10cd 73745F6D 		.ascii	"st_meas\000"
 32655      65617300 
 32656              	.LASF55:
 32657 10d5 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 32657      4745545F 
 32657      4144435F 
 32657      52415700 
 32658              	.LASF186:
 32659 10e5 6A6F7973 		.ascii	"joystick_threshold\000"
 32659      7469636B 
 32659      5F746872 
 32659      6573686F 
 32659      6C6400
 32660              	.LASF74:
 32661 10f8 4D41584F 		.ascii	"MAXON_24V\000"
 32661      4E5F3234 
 32661      5600
 32662              	.LASF67:
 32663 1102 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 32663      545F4D4F 
 32663      44455F45 
 32663      4D475F50 
 32663      524F504F 
 32664              	.LASF51:
 32665 1121 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 32665      4745545F 
 32665      494D555F 
 32665      50415241 
 32665      4D00
 32666              	.LASF375:
 32667 1133 675F6662 		.ascii	"g_fb_meas\000"
 32667      5F6D6561 
 32667      7300
 32668              	.LASF53:
 32669 113d 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 32669      4745545F 
 32669      454E434F 
 32669      4445525F 
 32669      52415700 
 32670              	.LASF337:
 32671 1151 636D645F 		.ascii	"cmd_store_params\000"
 32671      73746F72 
 32671      655F7061 
 32671      72616D73 
 32671      00
 32672              	.LASF377:
 32673 1162 675F6D65 		.ascii	"g_mem\000"
 32673      6D00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 712


 32674              	.LASF40:
 32675 1168 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 32675      4745545F 
 32675      4D454153 
 32675      5552454D 
 32675      454E5453 
 32676              	.LASF374:
 32677 117d 675F6164 		.ascii	"g_adc_measOld\000"
 32677      635F6D65 
 32677      61734F6C 
 32677      6400
 32678              	.LASF346:
 32679 118b 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 32679      6765745F 
 32679      656E636F 
 32679      6465725F 
 32679      72617700 
 32680              	.LASF13:
 32681 119f 75696E74 		.ascii	"uint8\000"
 32681      3800
 32682              	.LASF217:
 32683 11a5 636F6D6D 		.ascii	"commProcess\000"
 32683      50726F63 
 32683      65737300 
 32684              	.LASF184:
 32685 11b1 73745F4A 		.ascii	"st_JOY_spec\000"
 32685      4F595F73 
 32685      70656300 
 32686              	.LASF2:
 32687 11bd 73686F72 		.ascii	"short int\000"
 32687      7420696E 
 32687      7400
 32688              	.LASF316:
 32689 11c7 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 32689      6E69745F 
 32689      41697243 
 32689      68616D62 
 32689      65727346 
 32690              	.LASF275:
 32691 11dd 6964735F 		.ascii	"ids_str_len\000"
 32691      7374725F 
 32691      6C656E00 
 32692              	.LASF133:
 32693 11e9 6B5F645F 		.ascii	"k_d_dl\000"
 32693      646C00
 32694              	.LASF235:
 32695 11f0 6964785F 		.ascii	"idx_menu\000"
 32695      6D656E75 
 32695      00
 32696              	.LASF99:
 32697 11f9 6A6F7973 		.ascii	"joystick\000"
 32697      7469636B 
 32697      00
 32698              	.LASF202:
 32699 1202 6D6F746F 		.ascii	"motor\000"
 32699      7200
 32700              	.LASF398:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 713


 32701 1208 4E5F494D 		.ascii	"N_IMU_Connected\000"
 32701      555F436F 
 32701      6E6E6563 
 32701      74656400 
 32702              	.LASF39:
 32703 1218 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 32703      4745545F 
 32703      494E5055 
 32703      545300
 32704              	.LASF119:
 32705 1227 68775F6D 		.ascii	"hw_maint_date\000"
 32705      61696E74 
 32705      5F646174 
 32705      6500
 32706              	.LASF268:
 32707 1235 6964735F 		.ascii	"ids_str\000"
 32707      73747200 
 32708              	.LASF54:
 32709 123d 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 32709      4745545F 
 32709      4144435F 
 32709      434F4E46 
 32709      00
 32710              	.LASF27:
 32711 124e 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 32711      5345545F 
 32711      5A45524F 
 32711      5300
 32712              	.LASF276:
 32713 125c 6D61675F 		.ascii	"mag_param_str_len\000"
 32713      70617261 
 32713      6D5F7374 
 32713      725F6C65 
 32713      6E00
 32714              	.LASF262:
 32715 126e 6E756D5F 		.ascii	"num_imus_id_params\000"
 32715      696D7573 
 32715      5F69645F 
 32715      70617261 
 32715      6D7300
 32716              	.LASF239:
 32717 1281 6175785F 		.ascii	"aux_int16\000"
 32717      696E7431 
 32717      3600
 32718              	.LASF405:
 32719 128b 656D675F 		.ascii	"emg_history\000"
 32719      68697374 
 32719      6F727900 
 32720              	.LASF407:
 32721 1297 45455052 		.ascii	"EEPROM_ADDR\000"
 32721      4F4D5F41 
 32721      44445200 
 32722              	.LASF120:
 32723 12a3 73746174 		.ascii	"stats_period_begin_date\000"
 32723      735F7065 
 32723      72696F64 
 32723      5F626567 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 714


 32723      696E5F64 
 32724              	.LASF400:
 32725 12bb 696D7573 		.ascii	"imus_data_size\000"
 32725      5F646174 
 32725      615F7369 
 32725      7A6500
 32726              	.LASF367:
 32727 12ca 49544D5F 		.ascii	"ITM_RxBuffer\000"
 32727      52784275 
 32727      66666572 
 32727      00
 32728              	.LASF44:
 32729 12d7 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 32729      4745545F 
 32729      56454C4F 
 32729      43495449 
 32729      455300
 32730              	.LASF384:
 32731 12ea 706F775F 		.ascii	"pow_tension\000"
 32731      74656E73 
 32731      696F6E00 
 32732              	.LASF34:
 32733 12f6 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 32733      4745545F 
 32733      50415241 
 32733      4D5F4C49 
 32733      535400
 32734              	.LASF79:
 32735 1309 64617461 		.ascii	"data_types\000"
 32735      5F747970 
 32735      657300
 32736              	.LASF17:
 32737 1314 696E7431 		.ascii	"int16\000"
 32737      3600
 32738              	.LASF172:
 32739 131a 72656164 		.ascii	"read_exp_port_flag\000"
 32739      5F657870 
 32739      5F706F72 
 32739      745F666C 
 32739      616700
 32740              	.LASF165:
 32741 132d 73776974 		.ascii	"switch_emg\000"
 32741      63685F65 
 32741      6D6700
 32742              	.LASF138:
 32743 1338 61637469 		.ascii	"activate_pwm_rescaling\000"
 32743      76617465 
 32743      5F70776D 
 32743      5F726573 
 32743      63616C69 
 32744              	.LASF131:
 32745 134f 6B5F705F 		.ascii	"k_p_dl\000"
 32745      646C00
 32746              	.LASF95:
 32747 1356 65737469 		.ascii	"estim_curr\000"
 32747      6D5F6375 
 32747      727200
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 715


 32748              	.LASF383:
 32749 1361 6465765F 		.ascii	"dev_pwm_limit\000"
 32749      70776D5F 
 32749      6C696D69 
 32749      7400
 32750              	.LASF173:
 32751 136f 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 32751      5F414443 
 32751      5F73656E 
 32751      736F7273 
 32751      5F706F72 
 32752              	.LASF393:
 32753 138a 456E636F 		.ascii	"Encoder_Value\000"
 32753      6465725F 
 32753      56616C75 
 32753      6500
 32754              	.LASF345:
 32755 1398 636D645F 		.ascii	"cmd_get_encoder_map\000"
 32755      6765745F 
 32755      656E636F 
 32755      6465725F 
 32755      6D617000 
 32756              	.LASF125:
 32757 13ac 75736572 		.ascii	"user_id\000"
 32757      5F696400 
 32758              	.LASF12:
 32759 13b4 75696E74 		.ascii	"uint32_t\000"
 32759      33325F74 
 32759      00
 32760              	.LASF238:
 32761 13bd 6175785F 		.ascii	"aux_float\000"
 32761      666C6F61 
 32761      7400
 32762              	.LASF399:
 32763 13c7 494D555F 		.ascii	"IMU_connected\000"
 32763      636F6E6E 
 32763      65637465 
 32763      6400
 32764              	.LASF229:
 32765 13d5 4E554D5F 		.ascii	"NUM_MENU\000"
 32765      4D454E55 
 32765      00
 32766              	.LASF241:
 32767 13de 6175785F 		.ascii	"aux_int32\000"
 32767      696E7433 
 32767      3200
 32768              	.LASF124:
 32769 13e8 62617564 		.ascii	"baud_rate\000"
 32769      5F726174 
 32769      6500
 32770              	.LASF333:
 32771 13f2 745F656E 		.ascii	"t_end\000"
 32771      6400
 32772              	.LASF197:
 32773 13f8 66617374 		.ascii	"fast_act_threshold\000"
 32773      5F616374 
 32773      5F746872 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 716


 32773      6573686F 
 32773      6C6400
 32774              	.LASF224:
 32775 140b 696E666F 		.ascii	"info_type\000"
 32775      5F747970 
 32775      6500
 32776              	.LASF50:
 32777 1415 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 32777      4745545F 
 32777      494D555F 
 32777      52454144 
 32777      494E4753 
 32778              	.LASF397:
 32779 142a 73645230 		.ascii	"sdR01File\000"
 32779      3146696C 
 32779      6500
 32780              	.LASF305:
 32781 1434 4C435243 		.ascii	"LCRChecksum\000"
 32781      6865636B 
 32781      73756D00 
 32782              	.LASF342:
 32783 1440 6B5F696D 		.ascii	"k_imu\000"
 32783      7500
 32784              	.LASF3:
 32785 1446 73686F72 		.ascii	"short unsigned int\000"
 32785      7420756E 
 32785      7369676E 
 32785      65642069 
 32785      6E7400
 32786              	.LASF152:
 32787 1459 73745F65 		.ascii	"st_encoder\000"
 32787      6E636F64 
 32787      657200
 32788              	.LASF373:
 32789 1464 675F6164 		.ascii	"g_adc_meas\000"
 32789      635F6D65 
 32789      617300
 32790              	.LASF192:
 32791 146f 6D61785F 		.ascii	"max_residual_current\000"
 32791      72657369 
 32791      6475616C 
 32791      5F637572 
 32791      72656E74 
 32792              	.LASF282:
 32793 1484 454E435F 		.ascii	"ENC_L\000"
 32793      4C00
 32794              	.LASF199:
 32795 148a 73745F65 		.ascii	"st_eeprom\000"
 32795      6570726F 
 32795      6D00
 32796              	.LASF226:
 32797 1494 54595045 		.ascii	"TYPES\000"
 32797      5300
 32798              	.LASF368:
 32799 149a 675F7265 		.ascii	"g_ref\000"
 32799      6600
 32800              	.LASF18:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 717


 32801 14a0 696E7433 		.ascii	"int32\000"
 32801      3200
 32802              	.LASF390:
 32803 14a6 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 32803      4F465F41 
 32803      4E414C4F 
 32803      475F494E 
 32803      50555453 
 32804              	.LASF221:
 32805 14bb 696E666F 		.ascii	"infoGet\000"
 32805      47657400 
 32806              	.LASF127:
 32807 14c3 73745F6D 		.ascii	"st_motor\000"
 32807      6F746F72 
 32807      00
 32808              	.LASF404:
 32809 14cc 6D617374 		.ascii	"master_mode\000"
 32809      65725F6D 
 32809      6F646500 
 32810              	.LASF90:
 32811 14d8 46535F46 		.ascii	"FS_FILE\000"
 32811      494C4500 
 32812              	.LASF140:
 32813 14e0 706F735F 		.ascii	"pos_lim_flag\000"
 32813      6C696D5F 
 32813      666C6167 
 32813      00
 32814              	.LASF372:
 32815 14ed 675F6D65 		.ascii	"g_measOld\000"
 32815      61734F6C 
 32815      6400
 32816              	.LASF69:
 32817 14f7 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 32817      524F4C5F 
 32817      414E474C 
 32817      4500
 32818              	.LASF325:
 32819 1505 636D645F 		.ascii	"cmd_activate\000"
 32819      61637469 
 32819      76617465 
 32819      00
 32820              	.LASF5:
 32821 1512 5F5F696E 		.ascii	"__int32_t\000"
 32821      7433325F 
 32821      7400
 32822              	.LASF251:
 32823 151c 7370695F 		.ascii	"spi_delay_menu\000"
 32823      64656C61 
 32823      795F6D65 
 32823      6E7500
 32824              	.LASF111:
 32825 152b 77697265 		.ascii	"wire_disp\000"
 32825      5F646973 
 32825      7000
 32826              	.LASF162:
 32827 1535 656D675F 		.ascii	"emg_max_value\000"
 32827      6D61785F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 718


 32827      76616C75 
 32827      6500
 32828              	.LASF256:
 32829 1543 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 32829      4F4D5F50 
 32829      4152414D 
 32829      5F534554 
 32829      00
 32830              	.LASF409:
 32831 1554 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 32831      72635C63 
 32831      6F6D6D61 
 32831      6E645F70 
 32831      726F6365 
 32832              	.LASF146:
 32833 1570 63757272 		.ascii	"current_limit\000"
 32833      656E745F 
 32833      6C696D69 
 32833      7400
 32834              	.LASF59:
 32835 157e 53485F69 		.ascii	"SH_input_mode\000"
 32835      6E707574 
 32835      5F6D6F64 
 32835      6500
 32836              	.LASF81:
 32837 158c 54595045 		.ascii	"TYPE_INT8\000"
 32837      5F494E54 
 32837      3800
 32838              	.LASF196:
 32839 1596 61637469 		.ascii	"activation_mode\000"
 32839      76617469 
 32839      6F6E5F6D 
 32839      6F646500 
 32840              	.LASF295:
 32841 15a6 494D555F 		.ascii	"IMU_reading_info\000"
 32841      72656164 
 32841      696E675F 
 32841      696E666F 
 32841      00
 32842              	.LASF14:
 32843 15b7 75696E74 		.ascii	"uint16\000"
 32843      313600
 32844              	.LASF181:
 32845 15be 72657374 		.ascii	"rest_delay\000"
 32845      5F64656C 
 32845      617900
 32846              	.LASF237:
 32847 15c9 6175785F 		.ascii	"aux_str\000"
 32847      73747200 
 32848              	.LASF26:
 32849 15d1 434D445F 		.ascii	"CMD_PING\000"
 32849      50494E47 
 32849      00
 32850              	.LASF410:
 32851 15da 433A5C55 		.ascii	"C:\\Users\\mgnocco\\OneDrive - Fondazione Istituto "
 32851      73657273 
 32851      5C6D676E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccCmVvPs.s 			page 719


 32851      6F63636F 
 32851      5C4F6E65 
 32852 160a 4974616C 		.ascii	"Italiano Tecnologia\\Firmware\\Psoc5\\SoftHandPRO-a"
 32852      69616E6F 
 32852      20546563 
 32852      6E6F6C6F 
 32852      6769615C 
 32853 163a 6E642D47 		.ascii	"nd-Generic-FW-PSoC5-master\\SoftHand_Pro.cydsn\000"
 32853      656E6572 
 32853      69632D46 
 32853      572D5053 
 32853      6F43352D 
 32854              	.LASF136:
 32855 1668 6B5F645F 		.ascii	"k_d_c_dl\000"
 32855      635F646C 
 32855      00
 32856              	.LASF214:
 32857 1671 64697265 		.ascii	"direction\000"
 32857      6374696F 
 32857      6E00
 32858              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
