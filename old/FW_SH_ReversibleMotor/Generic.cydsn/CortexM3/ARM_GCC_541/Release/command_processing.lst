ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** #include "vibrotactile_control.h"
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8CB0     		sub	sp, sp, #48
  44              		.cfi_def_cfa_offset 56
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 0E4B     		ldr	r3, .L54
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e 0C4B     		ldr	r3, .L54
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c 0848     		ldr	r0, .L54
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 064B     		ldr	r3, .L54
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e 044A     		ldr	r2, .L54
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 06D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 024B     		ldr	r3, .L54
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 09E3     		b	.L1
  75              	.L55:
  76              		.align	2
  77              	.L54:
  78 0040 00000000 		.word	g_rx
  79              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  80              		.loc 1 74 0
  81 0044 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  82 0048 FA2B     		cmp	r3, #250
  83 004a 00F20283 		bhi	.L53
  84 004e 01A2     		adr	r2, .L6
  85 0050 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  86              		.p2align 2
  87              	.L6:
  88 0054 D1040000 		.word	.L5+1
  89 0058 B3040000 		.word	.L7+1
  90 005c 53060000 		.word	.L53+1
  91 0060 D7040000 		.word	.L8+1
  92 0064 DD040000 		.word	.L9+1
  93 0068 F9040000 		.word	.L10+1
  94 006c 9B040000 		.word	.L11+1
  95 0070 53060000 		.word	.L53+1
  96 0074 53060000 		.word	.L53+1
  97 0078 2D050000 		.word	.L12+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 4


  98 007c 13050000 		.word	.L13+1
  99 0080 53060000 		.word	.L53+1
 100 0084 B9040000 		.word	.L14+1
 101 0088 4F050000 		.word	.L15+1
 102 008c 53060000 		.word	.L53+1
 103 0090 53060000 		.word	.L53+1
 104 0094 53060000 		.word	.L53+1
 105 0098 53060000 		.word	.L53+1
 106 009c 53060000 		.word	.L53+1
 107 00a0 53060000 		.word	.L53+1
 108 00a4 53060000 		.word	.L53+1
 109 00a8 53060000 		.word	.L53+1
 110 00ac 53060000 		.word	.L53+1
 111 00b0 53060000 		.word	.L53+1
 112 00b4 53060000 		.word	.L53+1
 113 00b8 53060000 		.word	.L53+1
 114 00bc 53060000 		.word	.L53+1
 115 00c0 53060000 		.word	.L53+1
 116 00c4 53060000 		.word	.L53+1
 117 00c8 53060000 		.word	.L53+1
 118 00cc 53060000 		.word	.L53+1
 119 00d0 53060000 		.word	.L53+1
 120 00d4 53060000 		.word	.L53+1
 121 00d8 53060000 		.word	.L53+1
 122 00dc 53060000 		.word	.L53+1
 123 00e0 53060000 		.word	.L53+1
 124 00e4 53060000 		.word	.L53+1
 125 00e8 53060000 		.word	.L53+1
 126 00ec 53060000 		.word	.L53+1
 127 00f0 53060000 		.word	.L53+1
 128 00f4 53060000 		.word	.L53+1
 129 00f8 53060000 		.word	.L53+1
 130 00fc 53060000 		.word	.L53+1
 131 0100 53060000 		.word	.L53+1
 132 0104 53060000 		.word	.L53+1
 133 0108 53060000 		.word	.L53+1
 134 010c 53060000 		.word	.L53+1
 135 0110 53060000 		.word	.L53+1
 136 0114 53060000 		.word	.L53+1
 137 0118 53060000 		.word	.L53+1
 138 011c 53060000 		.word	.L53+1
 139 0120 53060000 		.word	.L53+1
 140 0124 53060000 		.word	.L53+1
 141 0128 53060000 		.word	.L53+1
 142 012c 53060000 		.word	.L53+1
 143 0130 53060000 		.word	.L53+1
 144 0134 53060000 		.word	.L53+1
 145 0138 53060000 		.word	.L53+1
 146 013c 53060000 		.word	.L53+1
 147 0140 53060000 		.word	.L53+1
 148 0144 53060000 		.word	.L53+1
 149 0148 53060000 		.word	.L53+1
 150 014c 53060000 		.word	.L53+1
 151 0150 53060000 		.word	.L53+1
 152 0154 53060000 		.word	.L53+1
 153 0158 53060000 		.word	.L53+1
 154 015c 53060000 		.word	.L53+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 5


 155 0160 53060000 		.word	.L53+1
 156 0164 53060000 		.word	.L53+1
 157 0168 53060000 		.word	.L53+1
 158 016c 53060000 		.word	.L53+1
 159 0170 53060000 		.word	.L53+1
 160 0174 53060000 		.word	.L53+1
 161 0178 53060000 		.word	.L53+1
 162 017c 53060000 		.word	.L53+1
 163 0180 53060000 		.word	.L53+1
 164 0184 53060000 		.word	.L53+1
 165 0188 53060000 		.word	.L53+1
 166 018c 53060000 		.word	.L53+1
 167 0190 53060000 		.word	.L53+1
 168 0194 53060000 		.word	.L53+1
 169 0198 53060000 		.word	.L53+1
 170 019c 53060000 		.word	.L53+1
 171 01a0 53060000 		.word	.L53+1
 172 01a4 53060000 		.word	.L53+1
 173 01a8 53060000 		.word	.L53+1
 174 01ac 53060000 		.word	.L53+1
 175 01b0 53060000 		.word	.L53+1
 176 01b4 53060000 		.word	.L53+1
 177 01b8 53060000 		.word	.L53+1
 178 01bc 53060000 		.word	.L53+1
 179 01c0 53060000 		.word	.L53+1
 180 01c4 53060000 		.word	.L53+1
 181 01c8 53060000 		.word	.L53+1
 182 01cc 53060000 		.word	.L53+1
 183 01d0 53060000 		.word	.L53+1
 184 01d4 53060000 		.word	.L53+1
 185 01d8 53060000 		.word	.L53+1
 186 01dc 53060000 		.word	.L53+1
 187 01e0 53060000 		.word	.L53+1
 188 01e4 53060000 		.word	.L53+1
 189 01e8 53060000 		.word	.L53+1
 190 01ec 53060000 		.word	.L53+1
 191 01f0 53060000 		.word	.L53+1
 192 01f4 53060000 		.word	.L53+1
 193 01f8 53060000 		.word	.L53+1
 194 01fc 53060000 		.word	.L53+1
 195 0200 53060000 		.word	.L53+1
 196 0204 53060000 		.word	.L53+1
 197 0208 53060000 		.word	.L53+1
 198 020c 53060000 		.word	.L53+1
 199 0210 53060000 		.word	.L53+1
 200 0214 53060000 		.word	.L53+1
 201 0218 53060000 		.word	.L53+1
 202 021c 53060000 		.word	.L53+1
 203 0220 53060000 		.word	.L53+1
 204 0224 53060000 		.word	.L53+1
 205 0228 53060000 		.word	.L53+1
 206 022c 53060000 		.word	.L53+1
 207 0230 53060000 		.word	.L53+1
 208 0234 53060000 		.word	.L53+1
 209 0238 53060000 		.word	.L53+1
 210 023c 53060000 		.word	.L53+1
 211 0240 53060000 		.word	.L53+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 6


 212 0244 53060000 		.word	.L53+1
 213 0248 53060000 		.word	.L53+1
 214 024c 53060000 		.word	.L53+1
 215 0250 53060000 		.word	.L53+1
 216 0254 41040000 		.word	.L16+1
 217 0258 89040000 		.word	.L17+1
 218 025c 47040000 		.word	.L18+1
 219 0260 95040000 		.word	.L19+1
 220 0264 4D040000 		.word	.L20+1
 221 0268 59040000 		.word	.L21+1
 222 026c 53040000 		.word	.L22+1
 223 0270 53060000 		.word	.L53+1
 224 0274 83040000 		.word	.L23+1
 225 0278 71040000 		.word	.L24+1
 226 027c 53060000 		.word	.L53+1
 227 0280 77040000 		.word	.L25+1
 228 0284 5F040000 		.word	.L26+1
 229 0288 53060000 		.word	.L53+1
 230 028c 53060000 		.word	.L53+1
 231 0290 53060000 		.word	.L53+1
 232 0294 8F040000 		.word	.L27+1
 233 0298 53060000 		.word	.L53+1
 234 029c 7D040000 		.word	.L28+1
 235 02a0 53060000 		.word	.L53+1
 236 02a4 53060000 		.word	.L53+1
 237 02a8 53060000 		.word	.L53+1
 238 02ac 53060000 		.word	.L53+1
 239 02b0 53060000 		.word	.L53+1
 240 02b4 53060000 		.word	.L53+1
 241 02b8 53060000 		.word	.L53+1
 242 02bc 53060000 		.word	.L53+1
 243 02c0 53060000 		.word	.L53+1
 244 02c4 53060000 		.word	.L53+1
 245 02c8 53060000 		.word	.L53+1
 246 02cc 53060000 		.word	.L53+1
 247 02d0 53060000 		.word	.L53+1
 248 02d4 53060000 		.word	.L53+1
 249 02d8 ED050000 		.word	.L29+1
 250 02dc F3050000 		.word	.L30+1
 251 02e0 0B060000 		.word	.L31+1
 252 02e4 11060000 		.word	.L32+1
 253 02e8 17060000 		.word	.L33+1
 254 02ec 1D060000 		.word	.L34+1
 255 02f0 23060000 		.word	.L35+1
 256 02f4 3B060000 		.word	.L36+1
 257 02f8 53060000 		.word	.L53+1
 258 02fc 53060000 		.word	.L53+1
 259 0300 53060000 		.word	.L53+1
 260 0304 53060000 		.word	.L53+1
 261 0308 53060000 		.word	.L53+1
 262 030c 53060000 		.word	.L53+1
 263 0310 53060000 		.word	.L53+1
 264 0314 53060000 		.word	.L53+1
 265 0318 53060000 		.word	.L53+1
 266 031c 53060000 		.word	.L53+1
 267 0320 53060000 		.word	.L53+1
 268 0324 53060000 		.word	.L53+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 7


 269 0328 53060000 		.word	.L53+1
 270 032c 53060000 		.word	.L53+1
 271 0330 53060000 		.word	.L53+1
 272 0334 53060000 		.word	.L53+1
 273 0338 53060000 		.word	.L53+1
 274 033c 53060000 		.word	.L53+1
 275 0340 53060000 		.word	.L53+1
 276 0344 53060000 		.word	.L53+1
 277 0348 53060000 		.word	.L53+1
 278 034c 53060000 		.word	.L53+1
 279 0350 53060000 		.word	.L53+1
 280 0354 53060000 		.word	.L53+1
 281 0358 53060000 		.word	.L53+1
 282 035c 53060000 		.word	.L53+1
 283 0360 53060000 		.word	.L53+1
 284 0364 53060000 		.word	.L53+1
 285 0368 53060000 		.word	.L53+1
 286 036c 53060000 		.word	.L53+1
 287 0370 53060000 		.word	.L53+1
 288 0374 53060000 		.word	.L53+1
 289 0378 53060000 		.word	.L53+1
 290 037c 53060000 		.word	.L53+1
 291 0380 53060000 		.word	.L53+1
 292 0384 53060000 		.word	.L53+1
 293 0388 53060000 		.word	.L53+1
 294 038c 53060000 		.word	.L53+1
 295 0390 53060000 		.word	.L53+1
 296 0394 53060000 		.word	.L53+1
 297 0398 53060000 		.word	.L53+1
 298 039c 53060000 		.word	.L53+1
 299 03a0 53060000 		.word	.L53+1
 300 03a4 53060000 		.word	.L53+1
 301 03a8 53060000 		.word	.L53+1
 302 03ac 53060000 		.word	.L53+1
 303 03b0 53060000 		.word	.L53+1
 304 03b4 53060000 		.word	.L53+1
 305 03b8 53060000 		.word	.L53+1
 306 03bc 53060000 		.word	.L53+1
 307 03c0 53060000 		.word	.L53+1
 308 03c4 53060000 		.word	.L53+1
 309 03c8 53060000 		.word	.L53+1
 310 03cc 53060000 		.word	.L53+1
 311 03d0 53060000 		.word	.L53+1
 312 03d4 53060000 		.word	.L53+1
 313 03d8 53060000 		.word	.L53+1
 314 03dc 53060000 		.word	.L53+1
 315 03e0 53060000 		.word	.L53+1
 316 03e4 53060000 		.word	.L53+1
 317 03e8 53060000 		.word	.L53+1
 318 03ec 53060000 		.word	.L53+1
 319 03f0 53060000 		.word	.L53+1
 320 03f4 53060000 		.word	.L53+1
 321 03f8 53060000 		.word	.L53+1
 322 03fc 53060000 		.word	.L53+1
 323 0400 53060000 		.word	.L53+1
 324 0404 53060000 		.word	.L53+1
 325 0408 53060000 		.word	.L53+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 8


 326 040c 53060000 		.word	.L53+1
 327 0410 53060000 		.word	.L53+1
 328 0414 53060000 		.word	.L53+1
 329 0418 53060000 		.word	.L53+1
 330 041c 53060000 		.word	.L53+1
 331 0420 53060000 		.word	.L53+1
 332 0424 53060000 		.word	.L53+1
 333 0428 53060000 		.word	.L53+1
 334 042c 53060000 		.word	.L53+1
 335 0430 53060000 		.word	.L53+1
 336 0434 53060000 		.word	.L53+1
 337 0438 53060000 		.word	.L53+1
 338 043c 65040000 		.word	.L37+1
 339              		.p2align 1
 340              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 341              		.loc 1 78 0
 342 0440 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 343              		.loc 1 79 0
 344 0444 06E1     		b	.L1
 345              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 346              		.loc 1 84 0
 347 0446 FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 348              		.loc 1 85 0
 349 044a 03E1     		b	.L1
 350              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 351              		.loc 1 90 0
 352 044c FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 353              		.loc 1 91 0
 354 0450 00E1     		b	.L1
 355              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 356              		.loc 1 96 0
 357 0452 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 358              		.loc 1 97 0
 359 0456 FDE0     		b	.L1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 9


 360              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 361              		.loc 1 102 0
 362 0458 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 363              		.loc 1 103 0
 364 045c FAE0     		b	.L1
 365              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 366              		.loc 1 108 0
 367 045e FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 368              		.loc 1 109 0
 369 0462 F7E0     		b	.L1
 370              	.L37:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****          
 113:..\src/command_processing.c ****         case CMD_GET_VIBROTACTILE_INPUTS:
 114:..\src/command_processing.c ****             flag_vibrotactile = 1;
 371              		.loc 1 114 0
 372 0464 7D4B     		ldr	r3, .L56
 373 0466 0122     		movs	r2, #1
 374 0468 1A70     		strb	r2, [r3]
 115:..\src/command_processing.c ****             cmd_get_vibrotactile_inputs();
 375              		.loc 1 115 0
 376 046a FFF7FEFF 		bl	cmd_get_vibrotactile_inputs
 116:..\src/command_processing.c ****             break;
 377              		.loc 1 116 0
 378 046e F1E0     		b	.L1
 379              	.L24:
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c ****         
 119:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 120:..\src/command_processing.c ****             cmd_get_velocities();
 380              		.loc 1 120 0
 381 0470 FFF7FEFF 		bl	cmd_get_velocities
 121:..\src/command_processing.c ****             break;
 382              		.loc 1 121 0
 383 0474 EEE0     		b	.L1
 384              	.L25:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 126:..\src/command_processing.c ****             cmd_get_accelerations();
 385              		.loc 1 126 0
 386 0476 FFF7FEFF 		bl	cmd_get_accelerations
 127:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 10


 387              		.loc 1 127 0
 388 047a EBE0     		b	.L1
 389              	.L28:
 128:..\src/command_processing.c **** 
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 132:..\src/command_processing.c ****             cmd_get_joystick();
 390              		.loc 1 132 0
 391 047c FFF7FEFF 		bl	cmd_get_joystick
 133:..\src/command_processing.c ****         break;
 392              		.loc 1 133 0
 393 0480 E8E0     		b	.L1
 394              	.L23:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 136:..\src/command_processing.c **** 
 137:..\src/command_processing.c ****         case CMD_GET_EMG:
 138:..\src/command_processing.c ****             cmd_get_emg();
 395              		.loc 1 138 0
 396 0482 FFF7FEFF 		bl	cmd_get_emg
 139:..\src/command_processing.c ****             break;
 397              		.loc 1 139 0
 398 0486 E5E0     		b	.L1
 399              	.L17:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 144:..\src/command_processing.c ****             cmd_get_activate();
 400              		.loc 1 144 0
 401 0488 FFF7FEFF 		bl	cmd_get_activate
 145:..\src/command_processing.c ****             break;
 402              		.loc 1 145 0
 403 048c E2E0     		b	.L1
 404              	.L27:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 148:..\src/command_processing.c ****             
 149:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 150:..\src/command_processing.c ****             cmd_set_baudrate();
 405              		.loc 1 150 0
 406 048e FFF7FEFF 		bl	cmd_set_baudrate
 151:..\src/command_processing.c ****             break;  
 407              		.loc 1 151 0
 408 0492 DFE0     		b	.L1
 409              	.L19:
 152:..\src/command_processing.c ****             
 153:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 156:..\src/command_processing.c ****             cmd_get_inputs();
 410              		.loc 1 156 0
 411 0494 FFF7FEFF 		bl	cmd_get_inputs
 157:..\src/command_processing.c ****             break;
 412              		.loc 1 157 0
 413 0498 DCE0     		b	.L1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 11


 414              	.L11:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_GET_INFO:
 162:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 415              		.loc 1 162 0
 416 049a 714B     		ldr	r3, .L56+4
 417 049c 1B88     		ldrh	r3, [r3]
 418 049e BB61     		str	r3, [r7, #24]
 419              	.LBB12:
 420              	.LBB13:
 421              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 12


  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 13


 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 14


 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 15


 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 16


 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 17


 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 18


 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 19


 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 20


 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 21


 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 22


 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 23


 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 24


 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 25


 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 422              		.loc 2 792 0
 423 04a0 BB69     		ldr	r3, [r7, #24]
 424              		.syntax unified
 425              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 426 04a2 5BBA     		rev16 r3, r3
 427              	@ 0 "" 2
 428              		.thumb
 429              		.syntax unified
 430 04a4 7B61     		str	r3, [r7, #20]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 431              		.loc 2 793 0
 432 04a6 7B69     		ldr	r3, [r7, #20]
 433              	.LBE13:
 434              	.LBE12:
 435              		.loc 1 162 0
 436 04a8 9BB2     		uxth	r3, r3
 437 04aa 1846     		mov	r0, r3
 438 04ac FFF7FEFF 		bl	infoGet
 163:..\src/command_processing.c ****             break;
 439              		.loc 1 163 0
 440 04b0 D0E0     		b	.L1
 441              	.L7:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 168:..\src/command_processing.c ****             setZeros();
 442              		.loc 1 168 0
 443 04b2 FFF7FEFF 		bl	setZeros
 169:..\src/command_processing.c ****             break;
 444              		.loc 1 169 0
 445 04b6 CDE0     		b	.L1
 446              	.L14:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 172:..\src/command_processing.c **** 
 173:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 174:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 447              		.loc 1 174 0
 448 04b8 694B     		ldr	r3, .L56+4
 449 04ba 1B88     		ldrh	r3, [r3]
 450 04bc BB62     		str	r3, [r7, #40]
 451              	.LBB14:
 452              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453              		.loc 2 792 0
 454 04be BB6A     		ldr	r3, [r7, #40]
 455              		.syntax unified
 456              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 457 04c0 5BBA     		rev16 r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 26


 458              	@ 0 "" 2
 459              		.thumb
 460              		.syntax unified
 461 04c2 3B61     		str	r3, [r7, #16]
 462              		.loc 2 793 0
 463 04c4 3B69     		ldr	r3, [r7, #16]
 464              	.LBE15:
 465              	.LBE14:
 466              		.loc 1 174 0
 467 04c6 9BB2     		uxth	r3, r3
 468 04c8 1846     		mov	r0, r3
 469 04ca FFF7FEFF 		bl	manage_param_list
 175:..\src/command_processing.c ****             break;
 470              		.loc 1 175 0
 471 04ce C1E0     		b	.L1
 472              	.L5:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================================     CMD_PING
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_PING:
 180:..\src/command_processing.c ****             cmd_ping();
 473              		.loc 1 180 0
 474 04d0 FFF7FEFF 		bl	cmd_ping
 181:..\src/command_processing.c ****             break;
 475              		.loc 1 181 0
 476 04d4 BEE0     		b	.L1
 477              	.L8:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 184:..\src/command_processing.c ****             
 185:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 186:..\src/command_processing.c ****             cmd_store_params();
 478              		.loc 1 186 0
 479 04d6 FFF7FEFF 		bl	cmd_store_params
 187:..\src/command_processing.c ****             break;
 480              		.loc 1 187 0
 481 04da BBE0     		b	.L1
 482              	.L9:
 188:..\src/command_processing.c **** 
 189:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 190:..\src/command_processing.c **** 
 191:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 192:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 483              		.loc 1 192 0
 484 04dc 3220     		movs	r0, #50
 485 04de FFF7FEFF 		bl	memStore
 486 04e2 0346     		mov	r3, r0
 487 04e4 002B     		cmp	r3, #0
 488 04e6 03D0     		beq	.L40
 193:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 489              		.loc 1 193 0
 490 04e8 0120     		movs	r0, #1
 491 04ea FFF7FEFF 		bl	sendAcknowledgment
 194:..\src/command_processing.c ****             else
 195:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 196:..\src/command_processing.c ****             break;
 492              		.loc 1 196 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 27


 493 04ee B1E0     		b	.L1
 494              	.L40:
 195:..\src/command_processing.c ****             break;
 495              		.loc 1 195 0
 496 04f0 0020     		movs	r0, #0
 497 04f2 FFF7FEFF 		bl	sendAcknowledgment
 498              		.loc 1 196 0
 499 04f6 ADE0     		b	.L1
 500              	.L10:
 197:..\src/command_processing.c **** 
 198:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 199:..\src/command_processing.c **** 
 200:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 201:..\src/command_processing.c ****             if(memRestore())
 501              		.loc 1 201 0
 502 04f8 FFF7FEFF 		bl	memRestore
 503 04fc 0346     		mov	r3, r0
 504 04fe 002B     		cmp	r3, #0
 505 0500 03D0     		beq	.L42
 202:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 506              		.loc 1 202 0
 507 0502 0120     		movs	r0, #1
 508 0504 FFF7FEFF 		bl	sendAcknowledgment
 203:..\src/command_processing.c ****             else
 204:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 205:..\src/command_processing.c ****             break;
 509              		.loc 1 205 0
 510 0508 A4E0     		b	.L1
 511              	.L42:
 204:..\src/command_processing.c ****             break;
 512              		.loc 1 204 0
 513 050a 0020     		movs	r0, #0
 514 050c FFF7FEFF 		bl	sendAcknowledgment
 515              		.loc 1 205 0
 516 0510 A0E0     		b	.L1
 517              	.L13:
 206:..\src/command_processing.c **** 
 207:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 208:..\src/command_processing.c **** 
 209:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 210:..\src/command_processing.c ****             if(memInit())
 518              		.loc 1 210 0
 519 0512 FFF7FEFF 		bl	memInit
 520 0516 0346     		mov	r3, r0
 521 0518 002B     		cmp	r3, #0
 522 051a 03D0     		beq	.L44
 211:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 523              		.loc 1 211 0
 524 051c 0120     		movs	r0, #1
 525 051e FFF7FEFF 		bl	sendAcknowledgment
 212:..\src/command_processing.c ****             else
 213:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 214:..\src/command_processing.c ****             break;
 526              		.loc 1 214 0
 527 0522 97E0     		b	.L1
 528              	.L44:
 213:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 28


 529              		.loc 1 213 0
 530 0524 0020     		movs	r0, #0
 531 0526 FFF7FEFF 		bl	sendAcknowledgment
 532              		.loc 1 214 0
 533 052a 93E0     		b	.L1
 534              	.L12:
 215:..\src/command_processing.c **** 
 216:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 217:..\src/command_processing.c **** 
 218:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 219:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 220:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 535              		.loc 1 220 0
 536 052c 0120     		movs	r0, #1
 537 052e FFF7FEFF 		bl	sendAcknowledgment
 221:..\src/command_processing.c ****             CyDelay(1000);
 538              		.loc 1 221 0
 539 0532 4FF47A70 		mov	r0, #1000
 540 0536 FFF7FEFF 		bl	CyDelay
 222:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 541              		.loc 1 222 0
 542 053a 0020     		movs	r0, #0
 543 053c FFF7FEFF 		bl	FTDI_ENABLE_Write
 223:..\src/command_processing.c ****             CyDelay(1000);
 544              		.loc 1 223 0
 545 0540 4FF47A70 		mov	r0, #1000
 546 0544 FFF7FEFF 		bl	CyDelay
 224:..\src/command_processing.c ****             Bootloadable_Load();
 547              		.loc 1 224 0
 548 0548 FFF7FEFF 		bl	Bootloadable_Load
 225:..\src/command_processing.c ****             break;
 549              		.loc 1 225 0
 550 054c 82E0     		b	.L1
 551              	.L15:
 226:..\src/command_processing.c **** 
 227:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 228:..\src/command_processing.c **** 
 229:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 230:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 552              		.loc 1 230 0
 553 054e 454B     		ldr	r3, .L56+8
 554 0550 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 555 0552 1B02     		lsls	r3, r3, #8
 556 0554 1AB2     		sxth	r2, r3
 557 0556 434B     		ldr	r3, .L56+8
 558 0558 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 559 055a 1BB2     		sxth	r3, r3
 560 055c 1343     		orrs	r3, r3, r2
 561 055e 1AB2     		sxth	r2, r3
 562 0560 414B     		ldr	r3, .L56+12
 563 0562 5A80     		strh	r2, [r3, #2]	@ movhi
 231:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 564              		.loc 1 231 0
 565 0564 3F4B     		ldr	r3, .L56+8
 566 0566 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 567 0568 1B02     		lsls	r3, r3, #8
 568 056a 1AB2     		sxth	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 29


 569 056c 3D4B     		ldr	r3, .L56+8
 570 056e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 571 0570 1BB2     		sxth	r3, r3
 572 0572 1343     		orrs	r3, r3, r2
 573 0574 1AB2     		sxth	r2, r3
 574 0576 3C4B     		ldr	r3, .L56+12
 575 0578 9A80     		strh	r2, [r3, #4]	@ movhi
 232:..\src/command_processing.c ****             
 233:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 576              		.loc 1 233 0
 577 057a 3B4B     		ldr	r3, .L56+12
 578 057c B3F90230 		ldrsh	r3, [r3, #2]
 579 0580 B3F1FF3F 		cmp	r3, #-1
 580 0584 0FD1     		bne	.L46
 581              		.loc 1 233 0 is_stmt 0 discriminator 1
 582 0586 384B     		ldr	r3, .L56+12
 583 0588 B3F90430 		ldrsh	r3, [r3, #4]
 584 058c B3F1FF3F 		cmp	r3, #-1
 585 0590 09D1     		bne	.L46
 234:..\src/command_processing.c ****                 calib.enabled = FALSE;
 586              		.loc 1 234 0 is_stmt 1
 587 0592 354B     		ldr	r3, .L56+12
 588 0594 0022     		movs	r2, #0
 589 0596 1A70     		strb	r2, [r3]
 235:..\src/command_processing.c ****                 calib.speed = 0;
 590              		.loc 1 235 0
 591 0598 334B     		ldr	r3, .L56+12
 592 059a 0022     		movs	r2, #0
 593 059c 5A80     		strh	r2, [r3, #2]	@ movhi
 236:..\src/command_processing.c ****                 calib.repetitions = 0;
 594              		.loc 1 236 0
 595 059e 324B     		ldr	r3, .L56+12
 596 05a0 0022     		movs	r2, #0
 597 05a2 9A80     		strh	r2, [r3, #4]	@ movhi
 237:..\src/command_processing.c ****                 break;
 598              		.loc 1 237 0
 599 05a4 56E0     		b	.L1
 600              	.L46:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             // Speed & repetitions saturations
 240:..\src/command_processing.c ****             if (calib.speed < 0) {
 601              		.loc 1 240 0
 602 05a6 304B     		ldr	r3, .L56+12
 603 05a8 B3F90230 		ldrsh	r3, [r3, #2]
 604 05ac 002B     		cmp	r3, #0
 605 05ae 03DA     		bge	.L47
 241:..\src/command_processing.c ****                 calib.speed = 0;
 606              		.loc 1 241 0
 607 05b0 2D4B     		ldr	r3, .L56+12
 608 05b2 0022     		movs	r2, #0
 609 05b4 5A80     		strh	r2, [r3, #2]	@ movhi
 610 05b6 07E0     		b	.L48
 611              	.L47:
 242:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 612              		.loc 1 242 0
 613 05b8 2B4B     		ldr	r3, .L56+12
 614 05ba B3F90230 		ldrsh	r3, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 30


 615 05be C82B     		cmp	r3, #200
 616 05c0 02DD     		ble	.L48
 243:..\src/command_processing.c ****                 calib.speed = 200;
 617              		.loc 1 243 0
 618 05c2 294B     		ldr	r3, .L56+12
 619 05c4 C822     		movs	r2, #200
 620 05c6 5A80     		strh	r2, [r3, #2]	@ movhi
 621              	.L48:
 244:..\src/command_processing.c ****             }
 245:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 622              		.loc 1 245 0
 623 05c8 274B     		ldr	r3, .L56+12
 624 05ca B3F90430 		ldrsh	r3, [r3, #4]
 625 05ce 002B     		cmp	r3, #0
 626 05d0 02DA     		bge	.L49
 246:..\src/command_processing.c ****                 calib.repetitions = 0;
 627              		.loc 1 246 0
 628 05d2 254B     		ldr	r3, .L56+12
 629 05d4 0022     		movs	r2, #0
 630 05d6 9A80     		strh	r2, [r3, #4]	@ movhi
 631              	.L49:
 247:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 248:..\src/command_processing.c ****                 calib.repetitions = 32767;
 249:..\src/command_processing.c ****             }
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 632              		.loc 1 251 0
 633 05d8 244B     		ldr	r3, .L56+16
 634 05da 0022     		movs	r2, #0
 635 05dc 1A60     		str	r2, [r3]
 252:..\src/command_processing.c ****             calib.enabled = TRUE;
 636              		.loc 1 252 0
 637 05de 224B     		ldr	r3, .L56+12
 638 05e0 0122     		movs	r2, #1
 639 05e2 1A70     		strb	r2, [r3]
 253:..\src/command_processing.c ****          
 254:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 640              		.loc 1 254 0
 641 05e4 0120     		movs	r0, #1
 642 05e6 FFF7FEFF 		bl	sendAcknowledgment
 255:..\src/command_processing.c ****             break;
 643              		.loc 1 255 0
 644 05ea 33E0     		b	.L1
 645              	.L29:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 260:..\src/command_processing.c ****             cmd_get_imu_readings();
 646              		.loc 1 260 0
 647 05ec FFF7FEFF 		bl	cmd_get_imu_readings
 261:..\src/command_processing.c ****             break; 
 648              		.loc 1 261 0
 649 05f0 30E0     		b	.L1
 650              	.L30:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 31


 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 266:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 651              		.loc 1 266 0
 652 05f2 1B4B     		ldr	r3, .L56+4
 653 05f4 1B88     		ldrh	r3, [r3]
 654 05f6 7B62     		str	r3, [r7, #36]
 655              	.LBB16:
 656              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 657              		.loc 2 792 0
 658 05f8 7B6A     		ldr	r3, [r7, #36]
 659              		.syntax unified
 660              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 661 05fa 5BBA     		rev16 r3, r3
 662              	@ 0 "" 2
 663              		.thumb
 664              		.syntax unified
 665 05fc FB60     		str	r3, [r7, #12]
 666              		.loc 2 793 0
 667 05fe FB68     		ldr	r3, [r7, #12]
 668              	.LBE17:
 669              	.LBE16:
 670              		.loc 1 266 0
 671 0600 9BB2     		uxth	r3, r3
 672 0602 1846     		mov	r0, r3
 673 0604 FFF7FEFF 		bl	get_IMU_param_list
 267:..\src/command_processing.c ****             break;             
 674              		.loc 1 267 0
 675 0608 24E0     		b	.L1
 676              	.L31:
 268:..\src/command_processing.c ****             
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 272:..\src/command_processing.c ****             cmd_get_encoder_map();
 677              		.loc 1 272 0
 678 060a FFF7FEFF 		bl	cmd_get_encoder_map
 273:..\src/command_processing.c ****             break; 
 679              		.loc 1 273 0
 680 060e 21E0     		b	.L1
 681              	.L32:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 278:..\src/command_processing.c ****             cmd_get_encoder_raw();
 682              		.loc 1 278 0
 683 0610 FFF7FEFF 		bl	cmd_get_encoder_raw
 279:..\src/command_processing.c ****             break; 
 684              		.loc 1 279 0
 685 0614 1EE0     		b	.L1
 686              	.L33:
 280:..\src/command_processing.c **** 
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 32


 284:..\src/command_processing.c ****             cmd_get_ADC_map();
 687              		.loc 1 284 0
 688 0616 FFF7FEFF 		bl	cmd_get_ADC_map
 285:..\src/command_processing.c ****             break; 
 689              		.loc 1 285 0
 690 061a 1BE0     		b	.L1
 691              	.L34:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 290:..\src/command_processing.c ****             cmd_get_ADC_raw();
 692              		.loc 1 290 0
 693 061c FFF7FEFF 		bl	cmd_get_ADC_raw
 291:..\src/command_processing.c ****             break; 
 694              		.loc 1 291 0
 695 0620 18E0     		b	.L1
 696              	.L35:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_SINGLE_FILE
 294:..\src/command_processing.c **** 
 295:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 296:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 697              		.loc 1 296 0
 698 0622 0F4B     		ldr	r3, .L56+4
 699 0624 1B88     		ldrh	r3, [r3]
 700 0626 3B62     		str	r3, [r7, #32]
 701              	.LBB18:
 702              	.LBB19:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 703              		.loc 2 792 0
 704 0628 3B6A     		ldr	r3, [r7, #32]
 705              		.syntax unified
 706              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 707 062a 5BBA     		rev16 r3, r3
 708              	@ 0 "" 2
 709              		.thumb
 710              		.syntax unified
 711 062c BB60     		str	r3, [r7, #8]
 712              		.loc 2 793 0
 713 062e BB68     		ldr	r3, [r7, #8]
 714              	.LBE19:
 715              	.LBE18:
 716              		.loc 1 296 0
 717 0630 9BB2     		uxth	r3, r3
 718 0632 1846     		mov	r0, r3
 719 0634 FFF7FEFF 		bl	cmd_get_SD_file
 297:..\src/command_processing.c ****             break;   
 720              		.loc 1 297 0
 721 0638 0CE0     		b	.L1
 722              	.L36:
 298:..\src/command_processing.c ****             
 299:..\src/command_processing.c **** //=====================================================     CMD_REMOVE_SD_SINGLE_FILE
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c ****         case CMD_REMOVE_SD_SINGLE_FILE:
 302:..\src/command_processing.c ****             cmd_remove_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 723              		.loc 1 302 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 33


 724 063a 094B     		ldr	r3, .L56+4
 725 063c 1B88     		ldrh	r3, [r3]
 726 063e FB61     		str	r3, [r7, #28]
 727              	.LBB20:
 728              	.LBB21:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 729              		.loc 2 792 0
 730 0640 FB69     		ldr	r3, [r7, #28]
 731              		.syntax unified
 732              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 733 0642 5BBA     		rev16 r3, r3
 734              	@ 0 "" 2
 735              		.thumb
 736              		.syntax unified
 737 0644 7B60     		str	r3, [r7, #4]
 738              		.loc 2 793 0
 739 0646 7B68     		ldr	r3, [r7, #4]
 740              	.LBE21:
 741              	.LBE20:
 742              		.loc 1 302 0
 743 0648 9BB2     		uxth	r3, r3
 744 064a 1846     		mov	r0, r3
 745 064c FFF7FEFF 		bl	cmd_remove_SD_file
 303:..\src/command_processing.c ****             break;               
 746              		.loc 1 303 0
 747 0650 00E0     		b	.L1
 748              	.L53:
 304:..\src/command_processing.c ****             
 305:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 306:..\src/command_processing.c ****         default:
 307:..\src/command_processing.c ****             break;
 749              		.loc 1 307 0
 750 0652 00BF     		nop
 751              	.L1:
 308:..\src/command_processing.c **** 
 309:..\src/command_processing.c ****     }
 310:..\src/command_processing.c **** }  
 752              		.loc 1 310 0
 753 0654 3037     		adds	r7, r7, #48
 754              		.cfi_def_cfa_offset 8
 755 0656 BD46     		mov	sp, r7
 756              		.cfi_def_cfa_register 13
 757              		@ sp needed
 758 0658 80BD     		pop	{r7, pc}
 759              	.L57:
 760 065a 00BF     		.align	2
 761              	.L56:
 762 065c 00000000 		.word	flag_vibrotactile
 763 0660 01000000 		.word	g_rx+1
 764 0664 00000000 		.word	g_rx
 765 0668 00000000 		.word	calib
 766 066c 00000000 		.word	g_refNew
 767              		.cfi_endproc
 768              	.LFE64:
 769              		.size	commProcess, .-commProcess
 770              		.section	.text.infoSend,"ax",%progbits
 771              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 34


 772              		.global	infoSend
 773              		.thumb
 774              		.thumb_func
 775              		.type	infoSend, %function
 776              	infoSend:
 777              	.LFB65:
 311:..\src/command_processing.c **** 
 312:..\src/command_processing.c **** //==============================================================================
 313:..\src/command_processing.c **** //                                                                     INFO SEND
 314:..\src/command_processing.c **** //==============================================================================
 315:..\src/command_processing.c **** 
 316:..\src/command_processing.c **** void infoSend(void){
 778              		.loc 1 316 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 1504
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782 0000 80B5     		push	{r7, lr}
 783              		.cfi_def_cfa_offset 8
 784              		.cfi_offset 7, -8
 785              		.cfi_offset 14, -4
 786 0002 ADF5BC6D 		sub	sp, sp, #1504
 787              		.cfi_def_cfa_offset 1512
 788 0006 00AF     		add	r7, sp, #0
 789              		.cfi_def_cfa_register 7
 317:..\src/command_processing.c ****     char packet_string[1500];
 318:..\src/command_processing.c ****     
 319:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 790              		.loc 1 319 0
 791 0008 3B1D     		adds	r3, r7, #4
 792 000a 1846     		mov	r0, r3
 793 000c FFF7FEFF 		bl	prepare_generic_info
 320:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 794              		.loc 1 320 0
 795 0010 3B1D     		adds	r3, r7, #4
 796 0012 1846     		mov	r0, r3
 797 0014 FFF7FEFF 		bl	UART_RS485_PutString
 321:..\src/command_processing.c **** }
 798              		.loc 1 321 0
 799 0018 00BF     		nop
 800 001a 07F5BC67 		add	r7, r7, #1504
 801              		.cfi_def_cfa_offset 8
 802 001e BD46     		mov	sp, r7
 803              		.cfi_def_cfa_register 13
 804              		@ sp needed
 805 0020 80BD     		pop	{r7, pc}
 806              		.cfi_endproc
 807              	.LFE65:
 808              		.size	infoSend, .-infoSend
 809 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 810              		.align	2
 811              		.global	infoGet
 812              		.thumb
 813              		.thumb_func
 814              		.type	infoGet, %function
 815              	infoGet:
 816              	.LFB66:
 322:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 35


 323:..\src/command_processing.c **** 
 324:..\src/command_processing.c **** //==============================================================================
 325:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 326:..\src/command_processing.c **** //==============================================================================
 327:..\src/command_processing.c **** 
 328:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 817              		.loc 1 328 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 24008
 820              		@ frame_needed = 1, uses_anonymous_args = 0
 821 0000 80B5     		push	{r7, lr}
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 7, -8
 824              		.cfi_offset 14, -4
 825 0002 ADF5BB4D 		sub	sp, sp, #23936
 826              		.cfi_def_cfa_offset 23944
 827 0006 92B0     		sub	sp, sp, #72
 828              		.cfi_def_cfa_offset 24016
 829 0008 00AF     		add	r7, sp, #0
 830              		.cfi_def_cfa_register 7
 831 000a 0246     		mov	r2, r0
 832 000c 07F14803 		add	r3, r7, #72
 833 0010 423B     		subs	r3, r3, #66
 834 0012 1A80     		strh	r2, [r3]	@ movhi
 329:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 835              		.loc 1 329 0
 836 0014 07F59C43 		add	r3, r7, #19968
 837 0018 03F12803 		add	r3, r3, #40
 838 001c 0022     		movs	r2, #0
 839 001e 1A60     		str	r2, [r3]
 840 0020 0433     		adds	r3, r3, #4
 841 0022 40F69C72 		movw	r2, #3996
 842 0026 0021     		movs	r1, #0
 843 0028 1846     		mov	r0, r3
 844 002a FFF7FEFF 		bl	memset
 330:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 845              		.loc 1 330 0
 846 002e 07F14803 		add	r3, r7, #72
 847 0032 403B     		subs	r3, r3, #64
 848 0034 0022     		movs	r2, #0
 849 0036 1A60     		str	r2, [r3]
 850 0038 0433     		adds	r3, r3, #4
 851 003a 44F61C62 		movw	r2, #19996
 852 003e 0021     		movs	r1, #0
 853 0040 1846     		mov	r0, r3
 854 0042 FFF7FEFF 		bl	memset
 331:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 332:..\src/command_processing.c **** 
 333:..\src/command_processing.c ****     switch (info_type) {
 855              		.loc 1 333 0
 856 0046 07F14803 		add	r3, r7, #72
 857 004a 423B     		subs	r3, r3, #66
 858 004c 1B88     		ldrh	r3, [r3]
 859 004e 062B     		cmp	r3, #6
 860 0050 7DD8     		bhi	.L70
 861 0052 01A2     		adr	r2, .L62
 862 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 36


 863              		.p2align 2
 864              	.L62:
 865 0058 75000000 		.word	.L61+1
 866 005c 97000000 		.word	.L63+1
 867 0060 B9000000 		.word	.L64+1
 868 0064 E1000000 		.word	.L65+1
 869 0068 03010000 		.word	.L66+1
 870 006c 21010000 		.word	.L67+1
 871 0070 27010000 		.word	.L68+1
 872              		.p2align 1
 873              	.L61:
 334:..\src/command_processing.c ****         case INFO_ALL:
 335:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 874              		.loc 1 335 0
 875 0074 07F59C43 		add	r3, r7, #19968
 876 0078 03F12803 		add	r3, r3, #40
 877 007c 1846     		mov	r0, r3
 878 007e FFF7FEFF 		bl	prepare_generic_info
 336:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 879              		.loc 1 336 0
 880 0082 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 337:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 881              		.loc 1 337 0
 882 0086 07F59C43 		add	r3, r7, #19968
 883 008a 03F12803 		add	r3, r3, #40
 884 008e 1846     		mov	r0, r3
 885 0090 FFF7FEFF 		bl	UART_RS485_PutString
 338:..\src/command_processing.c ****             break;
 886              		.loc 1 338 0
 887 0094 5CE0     		b	.L69
 888              	.L63:
 339:..\src/command_processing.c ****         case CYCLES_INFO:
 340:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 889              		.loc 1 340 0
 890 0096 07F59C43 		add	r3, r7, #19968
 891 009a 03F12803 		add	r3, r3, #40
 892 009e 1846     		mov	r0, r3
 893 00a0 FFF7FEFF 		bl	prepare_counter_info
 341:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 894              		.loc 1 341 0
 895 00a4 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 342:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 896              		.loc 1 342 0
 897 00a8 07F59C43 		add	r3, r7, #19968
 898 00ac 03F12803 		add	r3, r3, #40
 899 00b0 1846     		mov	r0, r3
 900 00b2 FFF7FEFF 		bl	UART_RS485_PutString
 343:..\src/command_processing.c ****             break;
 901              		.loc 1 343 0
 902 00b6 4BE0     		b	.L69
 903              	.L64:
 344:..\src/command_processing.c ****         case GET_SD_PARAM:
 345:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 904              		.loc 1 345 0
 905 00b8 07F59C43 		add	r3, r7, #19968
 906 00bc 03F12803 		add	r3, r3, #40
 907 00c0 4FF47A62 		mov	r2, #4000
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 37


 908 00c4 1946     		mov	r1, r3
 909 00c6 2548     		ldr	r0, .L71
 910 00c8 FFF7FEFF 		bl	Read_SD_Closed_File
 346:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 911              		.loc 1 346 0
 912 00cc FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 347:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 913              		.loc 1 347 0
 914 00d0 07F59C43 		add	r3, r7, #19968
 915 00d4 03F12803 		add	r3, r3, #40
 916 00d8 1846     		mov	r0, r3
 917 00da FFF7FEFF 		bl	UART_RS485_PutString
 348:..\src/command_processing.c ****             break;
 918              		.loc 1 348 0
 919 00de 37E0     		b	.L69
 920              	.L65:
 349:..\src/command_processing.c ****         case GET_SD_DATA:
 350:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 921              		.loc 1 350 0
 922 00e0 07F14803 		add	r3, r7, #72
 923 00e4 403B     		subs	r3, r3, #64
 924 00e6 44F62061 		movw	r1, #20000
 925 00ea 1846     		mov	r0, r3
 926 00ec FFF7FEFF 		bl	Read_SD_Current_Data
 351:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 927              		.loc 1 351 0
 928 00f0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 352:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 929              		.loc 1 352 0
 930 00f4 07F14803 		add	r3, r7, #72
 931 00f8 403B     		subs	r3, r3, #64
 932 00fa 1846     		mov	r0, r3
 933 00fc FFF7FEFF 		bl	UART_RS485_PutString
 353:..\src/command_processing.c ****             break;
 934              		.loc 1 353 0
 935 0100 26E0     		b	.L69
 936              	.L66:
 354:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 355:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 937              		.loc 1 355 0
 938 0102 07F14803 		add	r3, r7, #72
 939 0106 403B     		subs	r3, r3, #64
 940 0108 1846     		mov	r0, r3
 941 010a FFF7FEFF 		bl	Get_SD_FS
 356:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 942              		.loc 1 356 0
 943 010e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 357:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 944              		.loc 1 357 0
 945 0112 07F14803 		add	r3, r7, #72
 946 0116 403B     		subs	r3, r3, #64
 947 0118 1846     		mov	r0, r3
 948 011a FFF7FEFF 		bl	UART_RS485_PutString
 358:..\src/command_processing.c ****             break;
 949              		.loc 1 358 0
 950 011e 17E0     		b	.L69
 951              	.L67:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 38


 359:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 360:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 361:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 952              		.loc 1 361 0
 953 0120 FFF7FEFF 		bl	Read_SD_EMG_History_Data
 362:..\src/command_processing.c ****             break;
 954              		.loc 1 362 0
 955 0124 14E0     		b	.L69
 956              	.L68:
 363:..\src/command_processing.c ****         case GET_SD_R01_SUMM:
 364:..\src/command_processing.c ****             Read_SD_Closed_File(sdR01File, packet_string, sizeof(packet_string));
 957              		.loc 1 364 0
 958 0126 07F59C43 		add	r3, r7, #19968
 959 012a 03F12803 		add	r3, r3, #40
 960 012e 4FF47A62 		mov	r2, #4000
 961 0132 1946     		mov	r1, r3
 962 0134 0A48     		ldr	r0, .L71+4
 963 0136 FFF7FEFF 		bl	Read_SD_Closed_File
 365:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 964              		.loc 1 365 0
 965 013a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 366:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 966              		.loc 1 366 0
 967 013e 07F59C43 		add	r3, r7, #19968
 968 0142 03F12803 		add	r3, r3, #40
 969 0146 1846     		mov	r0, r3
 970 0148 FFF7FEFF 		bl	UART_RS485_PutString
 367:..\src/command_processing.c ****             break;            
 971              		.loc 1 367 0
 972 014c 00E0     		b	.L69
 973              	.L70:
 368:..\src/command_processing.c ****         default:
 369:..\src/command_processing.c ****             break;
 974              		.loc 1 369 0
 975 014e 00BF     		nop
 976              	.L69:
 370:..\src/command_processing.c ****     }
 371:..\src/command_processing.c **** }
 977              		.loc 1 371 0 discriminator 1
 978 0150 00BF     		nop
 979 0152 07F5BB47 		add	r7, r7, #23936
 980 0156 4837     		adds	r7, r7, #72
 981              		.cfi_def_cfa_offset 8
 982 0158 BD46     		mov	sp, r7
 983              		.cfi_def_cfa_register 13
 984              		@ sp needed
 985 015a 80BD     		pop	{r7, pc}
 986              	.L72:
 987              		.align	2
 988              	.L71:
 989 015c 00000000 		.word	sdParam
 990 0160 00000000 		.word	sdR01File
 991              		.cfi_endproc
 992              	.LFE66:
 993              		.size	infoGet, .-infoGet
 994              		.global	__aeabi_i2f
 995              		.global	__aeabi_fdiv
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 39


 996              		.section	.rodata
 997              		.align	2
 998              	.LC88:
 999 0000 20557362 		.ascii	" Usb\000"
 999      00
 1000 0005 000000   		.align	2
 1001              	.LC89:
 1002 0008 2048616E 		.ascii	" Handle\000"
 1002      646C6500 
 1003              		.align	2
 1004              	.LC90:
 1005 0010 20454D47 		.ascii	" EMG proportional\000"
 1005      2070726F 
 1005      706F7274 
 1005      696F6E61 
 1005      6C00
 1006 0022 0000     		.align	2
 1007              	.LC91:
 1008 0024 20454D47 		.ascii	" EMG integral\000"
 1008      20696E74 
 1008      65677261 
 1008      6C00
 1009 0032 0000     		.align	2
 1010              	.LC92:
 1011 0034 20454D47 		.ascii	" EMG FCFS\000"
 1011      20464346 
 1011      5300
 1012 003e 0000     		.align	2
 1013              	.LC93:
 1014 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 1014      20464346 
 1014      53204164 
 1014      76616E63 
 1014      656400
 1015 0053 00       		.align	2
 1016              	.LC94:
 1017 0054 204A6F79 		.ascii	" Joystick\000"
 1017      73746963 
 1017      6B00
 1018 005e 0000     		.align	2
 1019              	.LC95:
 1020 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 1020      2070726F 
 1020      706F7274 
 1020      696F6E61 
 1020      6C204E6F 
 1021 0082 0000     		.align	2
 1022              	.LC96:
 1023 0084 20506F73 		.ascii	" Position\000"
 1023      6974696F 
 1023      6E00
 1024 008e 0000     		.align	2
 1025              	.LC97:
 1026 0090 2050574D 		.ascii	" PWM\000"
 1026      00
 1027 0095 000000   		.align	2
 1028              	.LC98:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 40


 1029 0098 20437572 		.ascii	" Current\000"
 1029      72656E74 
 1029      00
 1030 00a1 000000   		.align	2
 1031              	.LC99:
 1032 00a4 20506F73 		.ascii	" Position and Current\000"
 1032      6974696F 
 1032      6E20616E 
 1032      64204375 
 1032      7272656E 
 1033 00ba 0000     		.align	2
 1034              	.LC100:
 1035 00bc 20594553 		.ascii	" YES\000\000"
 1035      0000
 1036 00c2 0000     		.align	2
 1037              	.LC101:
 1038 00c4 204E4F00 		.ascii	" NO\000\000"
 1038      00
 1039 00c9 000000   		.align	2
 1040              	.LC102:
 1041 00cc 20526967 		.ascii	" Right\000\000"
 1041      68740000 
 1042              		.align	2
 1043              	.LC103:
 1044 00d4 204C6566 		.ascii	" Left\000\000"
 1044      740000
 1045 00db 00       		.align	2
 1046              	.LC104:
 1047 00dc 204F4646 		.ascii	" OFF\000\000"
 1047      0000
 1048 00e2 0000     		.align	2
 1049              	.LC105:
 1050 00e4 204F4E00 		.ascii	" ON\000\000"
 1050      00
 1051 00e9 000000   		.align	2
 1052              	.LC106:
 1053 00ec 204E6F6E 		.ascii	" None\000\000"
 1053      650000
 1054 00f3 00       		.align	2
 1055              	.LC107:
 1056 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 1056      52544320 
 1056      626F6172 
 1056      640000
 1057 0103 00       		.align	2
 1058              	.LC108:
 1059 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 1059      6920626F 
 1059      61726420 
 1059      5B4E2F41 
 1059      5D0000
 1060 0117 00       		.align	2
 1061              	.LC109:
 1062 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 1062      6572205B 
 1062      4E2F415D 
 1062      0000
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 41


 1063 0126 0000     		.align	2
 1064              	.LC110:
 1065 0128 204C6F77 		.ascii	" Low\000\000"
 1065      0000
 1066 012e 0000     		.align	2
 1067              	.LC111:
 1068 0130 20486967 		.ascii	" High\000\000"
 1068      680000
 1069 0137 00       		.align	2
 1070              	.LC112:
 1071 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 1071      45524943 
 1071      20555345 
 1071      520000
 1072 0147 00       		.align	2
 1073              	.LC113:
 1074 0148 204D4152 		.ascii	" MARIA\000\000"
 1074      49410000 
 1075              		.align	2
 1076              	.LC114:
 1077 0150 20523031 		.ascii	" R01\000\000"
 1077      0000
 1078 0156 0000     		.align	2
 1079              	.LC115:
 1080 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 1080      33383837 
 1080      20285374 
 1080      616E6461 
 1080      72642900 
 1081 016d 000000   		.align	2
 1082              	.LC116:
 1083 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 1083      35303139 
 1083      20284869 
 1083      67682070 
 1083      6F776572 
 1084 0187 00       		.align	2
 1085              	.LC117:
 1086 0188 20455343 		.ascii	" ESC (Brushless)\000\000"
 1086      20284272 
 1086      7573686C 
 1086      65737329 
 1086      0000
 1087 019a 0000     		.align	2
 1088              	.LC118:
 1089 019c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 1089      5448414E 
 1089      44205052 
 1089      4F0000
 1090 01ab 00       		.align	2
 1091              	.LC119:
 1092 01ac 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 1092      45524943 
 1092      2032204D 
 1092      4F544F52 
 1092      530000
 1093 01bf 00       		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 42


 1094              	.LC120:
 1095 01c0 20414952 		.ascii	" AIR CHAMBERS\000\000"
 1095      20434841 
 1095      4D424552 
 1095      530000
 1096 01cf 00       		.align	2
 1097              	.LC121:
 1098 01d0 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 1098      4F424F43 
 1098      4B205752 
 1098      49535400 
 1098      00
 1099 01e1 000000   		.align	2
 1100              	.LC122:
 1101 01e4 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 1101      5448414E 
 1101      44203220 
 1101      4D4F544F 
 1101      52530000 
 1102              		.align	2
 1103              	.LC123:
 1104 01f8 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 1104      743A7379 
 1104      6E322C20 
 1104      536C6F77 
 1104      3A73796E 
 1105 020f 00       		.align	2
 1106              	.LC124:
 1107 0210 20466173 		.ascii	" Fast:wrist,Slow:hand\000\000"
 1107      743A7772 
 1107      6973742C 
 1107      536C6F77 
 1107      3A68616E 
 1108 0227 00       		.align	2
 1109              	.LC125:
 1110 0228 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 1110      773A7379 
 1110      6E322C20 
 1110      46617374 
 1110      3A73796E 
 1111 023f 00       		.align	2
 1112              	.LC126:
 1113 0240 20536C6F 		.ascii	" Slow:wrist,Fast:hand\000\000"
 1113      773A7772 
 1113      6973742C 
 1113      46617374 
 1113      3A68616E 
 1114 0257 00       		.align	2
 1115              	.LC127:
 1116 0258 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 1116      73653A43 
 1116      572C204F 
 1116      70656E3A 
 1116      43435700 
 1117 026d 000000   		.align	2
 1118              	.LC128:
 1119 0270 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 43


 1119      73653A43 
 1119      43572C20 
 1119      4F70656E 
 1119      3A435700 
 1120              		.section	.text.get_param_list,"ax",%progbits
 1121              		.align	2
 1122              		.global	get_param_list
 1123              		.thumb
 1124              		.thumb_func
 1125              		.type	get_param_list, %function
 1126              	get_param_list:
 1127              	.LFB67:
 372:..\src/command_processing.c **** 
 373:..\src/command_processing.c **** 
 374:..\src/command_processing.c **** //==============================================================================
 375:..\src/command_processing.c **** //                                                                GET PARAM LIST
 376:..\src/command_processing.c **** //==============================================================================
 377:..\src/command_processing.c **** 
 378:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 379:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 380:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 381:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 1128              		.loc 1 381 0
 1129              		.cfi_startproc
 1130              		@ args = 16, pretend = 0, frame = 5656
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1133              		.cfi_def_cfa_offset 20
 1134              		.cfi_offset 4, -20
 1135              		.cfi_offset 5, -16
 1136              		.cfi_offset 6, -12
 1137              		.cfi_offset 7, -8
 1138              		.cfi_offset 14, -4
 1139 0002 ADF5B05D 		sub	sp, sp, #5632
 1140              		.cfi_def_cfa_offset 5652
 1141 0006 87B0     		sub	sp, sp, #28
 1142              		.cfi_def_cfa_offset 5680
 1143 0008 00AF     		add	r7, sp, #0
 1144              		.cfi_def_cfa_register 7
 1145 000a 07F11804 		add	r4, r7, #24
 1146 000e 0C3C     		subs	r4, r4, #12
 1147 0010 2060     		str	r0, [r4]
 1148 0012 07F11800 		add	r0, r7, #24
 1149 0016 1038     		subs	r0, r0, #16
 1150 0018 0160     		str	r1, [r0]
 1151 001a 07F11801 		add	r1, r7, #24
 1152 001e 1439     		subs	r1, r1, #20
 1153 0020 0A60     		str	r2, [r1]
 1154 0022 07F11802 		add	r2, r7, #24
 1155 0026 183A     		subs	r2, r2, #24
 1156 0028 1360     		str	r3, [r2]
 382:..\src/command_processing.c ****     
 383:..\src/command_processing.c ****     //Package to be sent variables
 384:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1157              		.loc 1 384 0
 1158 002a 07F15803 		add	r3, r7, #88
 1159 002e 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 44


 1160 0030 0022     		movs	r2, #0
 1161 0032 1A60     		str	r2, [r3]
 1162 0034 0433     		adds	r3, r3, #4
 1163 0036 41F2AA52 		movw	r2, #5546
 1164 003a 0021     		movs	r1, #0
 1165 003c 1846     		mov	r0, r3
 1166 003e FFF7FEFF 		bl	memset
 385:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1167              		.loc 1 385 0
 1168 0042 41F2AE53 		movw	r3, #5550
 1169 0046 07F5B052 		add	r2, r7, #5632
 1170 004a 02F11002 		add	r2, r2, #16
 1171 004e 1380     		strh	r3, [r2]	@ movhi
 386:..\src/command_processing.c **** 
 387:..\src/command_processing.c ****     //Auxiliary variables
 388:..\src/command_processing.c ****     uint8 CYDATA i, j;
 389:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1172              		.loc 1 389 0
 1173 0050 0023     		movs	r3, #0
 1174 0052 07F5B052 		add	r2, r7, #5632
 1175 0056 02F11502 		add	r2, r2, #21
 1176 005a 1370     		strb	r3, [r2]
 390:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1177              		.loc 1 390 0
 1178 005c 0023     		movs	r3, #0
 1179 005e 07F5B052 		add	r2, r7, #5632
 1180 0062 02F11402 		add	r2, r2, #20
 1181 0066 1370     		strb	r3, [r2]
 391:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1182              		.loc 1 391 0
 1183 0068 0023     		movs	r3, #0
 1184 006a 07F5B052 		add	r2, r7, #5632
 1185 006e 02F11302 		add	r2, r2, #19
 1186 0072 1370     		strb	r3, [r2]
 392:..\src/command_processing.c ****     uint8 CYDATA string_length;
 393:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1187              		.loc 1 393 0
 1188 0074 07F13803 		add	r3, r7, #56
 1189 0078 183B     		subs	r3, r3, #24
 1190 007a 0022     		movs	r2, #0
 1191 007c 1A60     		str	r2, [r3]
 1192 007e 0433     		adds	r3, r3, #4
 1193 0080 2E22     		movs	r2, #46
 1194 0082 0021     		movs	r1, #0
 1195 0084 1846     		mov	r0, r3
 1196 0086 FFF7FEFF 		bl	memset
 394:..\src/command_processing.c ****     float aux_float;
 395:..\src/command_processing.c ****     int16 aux_int16;
 396:..\src/command_processing.c ****     uint16 aux_uint16;
 397:..\src/command_processing.c ****     int32 aux_int32;
 398:..\src/command_processing.c ****     uint32 aux_uint32;
 399:..\src/command_processing.c **** 
 400:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1197              		.loc 1 400 0
 1198 008a 0023     		movs	r3, #0
 1199 008c 07F5B052 		add	r2, r7, #5632
 1200 0090 02F10F02 		add	r2, r2, #15
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 45


 1201 0094 1370     		strb	r3, [r2]
 401:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1202              		.loc 1 401 0
 1203 0096 0123     		movs	r3, #1
 1204 0098 07F5B052 		add	r2, r7, #5632
 1205 009c 02F10E02 		add	r2, r2, #14
 1206 00a0 1370     		strb	r3, [r2]
 402:..\src/command_processing.c ****   
 403:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1207              		.loc 1 403 0
 1208 00a2 07F11803 		add	r3, r7, #24
 1209 00a6 0C3B     		subs	r3, r3, #12
 1210 00a8 1B68     		ldr	r3, [r3]
 1211 00aa 1B68     		ldr	r3, [r3]
 1212 00ac 07F5B052 		add	r2, r7, #5632
 1213 00b0 02F10802 		add	r2, r2, #8
 1214 00b4 1360     		str	r3, [r2]
 404:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1215              		.loc 1 404 0
 1216 00b6 07F5B053 		add	r3, r7, #5632
 1217 00ba 03F10803 		add	r3, r3, #8
 1218 00be 1B68     		ldr	r3, [r3]
 1219 00c0 07F5B052 		add	r2, r7, #5632
 1220 00c4 02F10402 		add	r2, r2, #4
 1221 00c8 1360     		str	r3, [r2]
 405:..\src/command_processing.c ****         
 406:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1222              		.loc 1 406 0
 1223 00ca 07F15803 		add	r3, r7, #88
 1224 00ce 043B     		subs	r3, r3, #4
 1225 00d0 0C22     		movs	r2, #12
 1226 00d2 1A70     		strb	r2, [r3]
 407:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1227              		.loc 1 407 0
 1228 00d4 07F15803 		add	r3, r7, #88
 1229 00d8 043B     		subs	r3, r3, #4
 1230 00da 4D22     		movs	r2, #77
 1231 00dc 5A70     		strb	r2, [r3, #1]
 408:..\src/command_processing.c ****     
 409:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1232              		.loc 1 409 0
 1233 00de 0023     		movs	r3, #0
 1234 00e0 07F5B052 		add	r2, r7, #5632
 1235 00e4 02F11502 		add	r2, r2, #21
 1236 00e8 1370     		strb	r3, [r2]
 1237 00ea 03F025B8 		b	.L74
 1238              	.L279:
 410:..\src/command_processing.c ****         
 411:..\src/command_processing.c ****         // Assign m_addr memory address
 412:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1239              		.loc 1 412 0
 1240 00ee 07F5B053 		add	r3, r7, #5632
 1241 00f2 03F11503 		add	r3, r3, #21
 1242 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1243 00f8 9A00     		lsls	r2, r3, #2
 1244 00fa 07F11803 		add	r3, r7, #24
 1245 00fe 0C3B     		subs	r3, r3, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 46


 1246 0100 1B68     		ldr	r3, [r3]
 1247 0102 1344     		add	r3, r3, r2
 1248 0104 1B68     		ldr	r3, [r3]
 1249 0106 07F5B052 		add	r2, r7, #5632
 1250 010a 02F10802 		add	r2, r2, #8
 1251 010e 1360     		str	r3, [r2]
 413:..\src/command_processing.c ****         
 414:..\src/command_processing.c ****         // Add parameter type and size to packet
 415:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1252              		.loc 1 415 0
 1253 0110 07F5B053 		add	r3, r7, #5632
 1254 0114 03F11503 		add	r3, r3, #21
 1255 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 011a 3222     		movs	r2, #50
 1257 011c 02FB03F3 		mul	r3, r2, r3
 1258 0120 9A1C     		adds	r2, r3, #2
 1259 0122 07F5B053 		add	r3, r7, #5632
 1260 0126 03F11503 		add	r3, r3, #21
 1261 012a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1262 012c 07F11803 		add	r3, r7, #24
 1263 0130 103B     		subs	r3, r3, #16
 1264 0132 1B68     		ldr	r3, [r3]
 1265 0134 0B44     		add	r3, r3, r1
 1266 0136 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1267 0138 07F15803 		add	r3, r7, #88
 1268 013c 043B     		subs	r3, r3, #4
 1269 013e 9954     		strb	r1, [r3, r2]
 416:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1270              		.loc 1 416 0
 1271 0140 07F5B053 		add	r3, r7, #5632
 1272 0144 03F11503 		add	r3, r3, #21
 1273 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1274 014a 3222     		movs	r2, #50
 1275 014c 02FB03F3 		mul	r3, r2, r3
 1276 0150 DA1C     		adds	r2, r3, #3
 1277 0152 07F5B053 		add	r3, r7, #5632
 1278 0156 03F11503 		add	r3, r3, #21
 1279 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1280 015c 07F11803 		add	r3, r7, #24
 1281 0160 143B     		subs	r3, r3, #20
 1282 0162 1B68     		ldr	r3, [r3]
 1283 0164 0B44     		add	r3, r3, r1
 1284 0166 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1285 0168 07F15803 		add	r3, r7, #88
 1286 016c 043B     		subs	r3, r3, #4
 1287 016e 9954     		strb	r1, [r3, r2]
 417:..\src/command_processing.c ****         
 418:..\src/command_processing.c ****         // Find size of data
 419:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1288              		.loc 1 419 0
 1289 0170 07F5B053 		add	r3, r7, #5632
 1290 0174 03F11503 		add	r3, r3, #21
 1291 0178 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1292 017a 07F11803 		add	r3, r7, #24
 1293 017e 103B     		subs	r3, r3, #16
 1294 0180 1B68     		ldr	r3, [r3]
 1295 0182 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 47


 1296 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1297 0186 092B     		cmp	r3, #9
 1298 0188 2BD8     		bhi	.L75
 1299 018a 01A2     		adr	r2, .L77
 1300 018c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1301              		.p2align 2
 1302              	.L77:
 1303 0190 B9010000 		.word	.L76+1
 1304 0194 B9010000 		.word	.L76+1
 1305 0198 B9010000 		.word	.L76+1
 1306 019c C7010000 		.word	.L78+1
 1307 01a0 C7010000 		.word	.L78+1
 1308 01a4 D5010000 		.word	.L79+1
 1309 01a8 D5010000 		.word	.L79+1
 1310 01ac D5010000 		.word	.L79+1
 1311 01b0 E3010000 		.word	.L75+1
 1312 01b4 B9010000 		.word	.L76+1
 1313              		.p2align 1
 1314              	.L76:
 420:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 421:..\src/command_processing.c ****                 sod = 1; break;
 1315              		.loc 1 421 0
 1316 01b8 0123     		movs	r3, #1
 1317 01ba 07F5B052 		add	r2, r7, #5632
 1318 01be 02F11302 		add	r2, r2, #19
 1319 01c2 1370     		strb	r3, [r2]
 1320 01c4 0DE0     		b	.L75
 1321              	.L78:
 422:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 423:..\src/command_processing.c ****                 sod = 2; break;
 1322              		.loc 1 423 0
 1323 01c6 0223     		movs	r3, #2
 1324 01c8 07F5B052 		add	r2, r7, #5632
 1325 01cc 02F11302 		add	r2, r2, #19
 1326 01d0 1370     		strb	r3, [r2]
 1327 01d2 06E0     		b	.L75
 1328              	.L79:
 424:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 425:..\src/command_processing.c ****                 sod = 4; break;
 1329              		.loc 1 425 0
 1330 01d4 0423     		movs	r3, #4
 1331 01d6 07F5B052 		add	r2, r7, #5632
 1332 01da 02F11302 		add	r2, r2, #19
 1333 01de 1370     		strb	r3, [r2]
 1334 01e0 00BF     		nop
 1335              	.L75:
 426:..\src/command_processing.c ****         }
 427:..\src/command_processing.c ****             
 428:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1336              		.loc 1 428 0
 1337 01e2 07F5B053 		add	r3, r7, #5632
 1338 01e6 03F11503 		add	r3, r3, #21
 1339 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1340 01ec 07F5B152 		add	r2, r7, #5664
 1341 01f0 02F11802 		add	r2, r2, #24
 1342 01f4 1268     		ldr	r2, [r2]
 1343 01f6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 48


 1344 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1345 01fa 002B     		cmp	r3, #0
 1346 01fc 40F0DA83 		bne	.L80
 429:..\src/command_processing.c ****             
 430:..\src/command_processing.c ****             // Add parameter data to packet
 431:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1347              		.loc 1 431 0
 1348 0200 07F5B053 		add	r3, r7, #5632
 1349 0204 03F11503 		add	r3, r3, #21
 1350 0208 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1351 020a 07F11803 		add	r3, r7, #24
 1352 020e 103B     		subs	r3, r3, #16
 1353 0210 1B68     		ldr	r3, [r3]
 1354 0212 1344     		add	r3, r3, r2
 1355 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1356 0216 092B     		cmp	r3, #9
 1357 0218 02F25781 		bhi	.L114
 1358 021c 01A2     		adr	r2, .L83
 1359 021e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1360 0222 00BF     		.p2align 2
 1361              	.L83:
 1362 0224 4D020000 		.word	.L82+1
 1363 0228 09030000 		.word	.L84+1
 1364 022c 4D020000 		.word	.L82+1
 1365 0230 C5030000 		.word	.L85+1
 1366 0234 F7040000 		.word	.L86+1
 1367 0238 23060000 		.word	.L87+1
 1368 023c 53070000 		.word	.L88+1
 1369 0240 83080000 		.word	.L89+1
 1370 0244 CB240000 		.word	.L114+1
 1371 0248 4D020000 		.word	.L82+1
 1372              		.p2align 1
 1373              	.L82:
 432:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 433:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1374              		.loc 1 433 0
 1375 024c 0023     		movs	r3, #0
 1376 024e 07F5B052 		add	r2, r7, #5632
 1377 0252 02F11702 		add	r2, r2, #23
 1378 0256 1370     		strb	r3, [r2]
 1379 0258 42E0     		b	.L90
 1380              	.L91:
 434:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1381              		.loc 1 434 0 discriminator 3
 1382 025a 07F5B053 		add	r3, r7, #5632
 1383 025e 03F11703 		add	r3, r3, #23
 1384 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1385 0264 07F5B052 		add	r2, r7, #5632
 1386 0268 02F11302 		add	r2, r2, #19
 1387 026c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1388 026e 02FB03F3 		mul	r3, r2, r3
 1389 0272 1A46     		mov	r2, r3
 1390 0274 07F5B053 		add	r3, r7, #5632
 1391 0278 03F10803 		add	r3, r3, #8
 1392 027c 1B68     		ldr	r3, [r3]
 1393 027e 1344     		add	r3, r3, r2
 1394 0280 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 49


 1395 0284 02F10402 		add	r2, r2, #4
 1396 0288 1360     		str	r3, [r2]
 435:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1397              		.loc 1 435 0 discriminator 3
 1398 028a 07F5B053 		add	r3, r7, #5632
 1399 028e 03F11503 		add	r3, r3, #21
 1400 0292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1401 0294 3222     		movs	r2, #50
 1402 0296 02FB03F3 		mul	r3, r2, r3
 1403 029a 1A1D     		adds	r2, r3, #4
 1404 029c 07F5B053 		add	r3, r7, #5632
 1405 02a0 03F11703 		add	r3, r3, #23
 1406 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1407 02a6 07F5B051 		add	r1, r7, #5632
 1408 02aa 01F11301 		add	r1, r1, #19
 1409 02ae 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1410 02b0 01FB03F3 		mul	r3, r1, r3
 1411 02b4 1A44     		add	r2, r2, r3
 1412 02b6 07F5B053 		add	r3, r7, #5632
 1413 02ba 03F10403 		add	r3, r3, #4
 1414 02be 1B68     		ldr	r3, [r3]
 1415 02c0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1416 02c2 07F15803 		add	r3, r7, #88
 1417 02c6 043B     		subs	r3, r3, #4
 1418 02c8 9954     		strb	r1, [r3, r2]
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1419              		.loc 1 433 0 discriminator 3
 1420 02ca 07F5B053 		add	r3, r7, #5632
 1421 02ce 03F11703 		add	r3, r3, #23
 1422 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1423 02d4 0133     		adds	r3, r3, #1
 1424 02d6 07F5B052 		add	r2, r7, #5632
 1425 02da 02F11702 		add	r2, r2, #23
 1426 02de 1370     		strb	r3, [r2]
 1427              	.L90:
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1428              		.loc 1 433 0 is_stmt 0 discriminator 1
 1429 02e0 07F5B053 		add	r3, r7, #5632
 1430 02e4 03F11503 		add	r3, r3, #21
 1431 02e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1432 02ea 07F11803 		add	r3, r7, #24
 1433 02ee 143B     		subs	r3, r3, #20
 1434 02f0 1B68     		ldr	r3, [r3]
 1435 02f2 1344     		add	r3, r3, r2
 1436 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1437 02f6 07F5B052 		add	r2, r7, #5632
 1438 02fa 02F11702 		add	r2, r2, #23
 1439 02fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1440 0300 9A42     		cmp	r2, r3
 1441 0302 AAD3     		bcc	.L91
 436:..\src/command_processing.c ****                     }
 437:..\src/command_processing.c ****                     break;                
 1442              		.loc 1 437 0 is_stmt 1
 1443 0304 02F0E1B8 		b	.L114
 1444              	.L84:
 438:..\src/command_processing.c ****                 case TYPE_INT8:
 439:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 50


 1445              		.loc 1 439 0
 1446 0308 0023     		movs	r3, #0
 1447 030a 07F5B052 		add	r2, r7, #5632
 1448 030e 02F11702 		add	r2, r2, #23
 1449 0312 1370     		strb	r3, [r2]
 1450 0314 42E0     		b	.L92
 1451              	.L93:
 440:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1452              		.loc 1 440 0 discriminator 3
 1453 0316 07F5B053 		add	r3, r7, #5632
 1454 031a 03F11703 		add	r3, r3, #23
 1455 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1456 0320 07F5B052 		add	r2, r7, #5632
 1457 0324 02F11302 		add	r2, r2, #19
 1458 0328 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1459 032a 02FB03F3 		mul	r3, r2, r3
 1460 032e 1A46     		mov	r2, r3
 1461 0330 07F5B053 		add	r3, r7, #5632
 1462 0334 03F10803 		add	r3, r3, #8
 1463 0338 1B68     		ldr	r3, [r3]
 1464 033a 1344     		add	r3, r3, r2
 1465 033c 07F5B052 		add	r2, r7, #5632
 1466 0340 02F10402 		add	r2, r2, #4
 1467 0344 1360     		str	r3, [r2]
 441:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1468              		.loc 1 441 0 discriminator 3
 1469 0346 07F5B053 		add	r3, r7, #5632
 1470 034a 03F11503 		add	r3, r3, #21
 1471 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1472 0350 3222     		movs	r2, #50
 1473 0352 02FB03F3 		mul	r3, r2, r3
 1474 0356 1A1D     		adds	r2, r3, #4
 1475 0358 07F5B053 		add	r3, r7, #5632
 1476 035c 03F11703 		add	r3, r3, #23
 1477 0360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1478 0362 07F5B051 		add	r1, r7, #5632
 1479 0366 01F11301 		add	r1, r1, #19
 1480 036a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1481 036c 01FB03F3 		mul	r3, r1, r3
 1482 0370 1A44     		add	r2, r2, r3
 1483 0372 07F5B053 		add	r3, r7, #5632
 1484 0376 03F10403 		add	r3, r3, #4
 1485 037a 1B68     		ldr	r3, [r3]
 1486 037c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1487 037e 07F15803 		add	r3, r7, #88
 1488 0382 043B     		subs	r3, r3, #4
 1489 0384 9954     		strb	r1, [r3, r2]
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1490              		.loc 1 439 0 discriminator 3
 1491 0386 07F5B053 		add	r3, r7, #5632
 1492 038a 03F11703 		add	r3, r3, #23
 1493 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1494 0390 0133     		adds	r3, r3, #1
 1495 0392 07F5B052 		add	r2, r7, #5632
 1496 0396 02F11702 		add	r2, r2, #23
 1497 039a 1370     		strb	r3, [r2]
 1498              	.L92:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 51


 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1499              		.loc 1 439 0 is_stmt 0 discriminator 1
 1500 039c 07F5B053 		add	r3, r7, #5632
 1501 03a0 03F11503 		add	r3, r3, #21
 1502 03a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1503 03a6 07F11803 		add	r3, r7, #24
 1504 03aa 143B     		subs	r3, r3, #20
 1505 03ac 1B68     		ldr	r3, [r3]
 1506 03ae 1344     		add	r3, r3, r2
 1507 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1508 03b2 07F5B052 		add	r2, r7, #5632
 1509 03b6 02F11702 		add	r2, r2, #23
 1510 03ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1511 03bc 9A42     		cmp	r2, r3
 1512 03be AAD3     		bcc	.L93
 442:..\src/command_processing.c ****                     }
 443:..\src/command_processing.c ****                     break;
 1513              		.loc 1 443 0 is_stmt 1
 1514 03c0 02F083B8 		b	.L114
 1515              	.L85:
 444:..\src/command_processing.c ****                 case TYPE_INT16:
 445:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1516              		.loc 1 445 0
 1517 03c4 0023     		movs	r3, #0
 1518 03c6 07F5B052 		add	r2, r7, #5632
 1519 03ca 02F11702 		add	r2, r2, #23
 1520 03ce 1370     		strb	r3, [r2]
 1521 03d0 7CE0     		b	.L94
 1522              	.L97:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1523              		.loc 1 446 0
 1524 03d2 07F5B053 		add	r3, r7, #5632
 1525 03d6 03F11703 		add	r3, r3, #23
 1526 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1527 03dc 07F5B052 		add	r2, r7, #5632
 1528 03e0 02F11302 		add	r2, r2, #19
 1529 03e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1530 03e6 02FB03F3 		mul	r3, r2, r3
 1531 03ea 1A46     		mov	r2, r3
 1532 03ec 07F5B053 		add	r3, r7, #5632
 1533 03f0 03F10803 		add	r3, r3, #8
 1534 03f4 1B68     		ldr	r3, [r3]
 1535 03f6 1344     		add	r3, r3, r2
 1536 03f8 07F5B052 		add	r2, r7, #5632
 1537 03fc 02F10402 		add	r2, r2, #4
 1538 0400 1360     		str	r3, [r2]
 447:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1539              		.loc 1 447 0
 1540 0402 07F5B053 		add	r3, r7, #5632
 1541 0406 03F10403 		add	r3, r3, #4
 1542 040a 1B68     		ldr	r3, [r3]
 1543 040c B3F90020 		ldrsh	r2, [r3]
 1544 0410 07F13803 		add	r3, r7, #56
 1545 0414 1E3B     		subs	r3, r3, #30
 1546 0416 1A80     		strh	r2, [r3]	@ movhi
 448:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1547              		.loc 1 448 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 52


 1548 0418 0023     		movs	r3, #0
 1549 041a 07F5B052 		add	r2, r7, #5632
 1550 041e 02F11602 		add	r2, r2, #22
 1551 0422 1370     		strb	r3, [r2]
 1552 0424 3BE0     		b	.L95
 1553              	.L96:
 449:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1554              		.loc 1 449 0 discriminator 3
 1555 0426 07F5B053 		add	r3, r7, #5632
 1556 042a 03F11503 		add	r3, r3, #21
 1557 042e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1558 0430 3222     		movs	r2, #50
 1559 0432 02FB03F3 		mul	r3, r2, r3
 1560 0436 1A1D     		adds	r2, r3, #4
 1561 0438 07F5B053 		add	r3, r7, #5632
 1562 043c 03F11703 		add	r3, r3, #23
 1563 0440 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1564 0442 07F5B051 		add	r1, r7, #5632
 1565 0446 01F11301 		add	r1, r1, #19
 1566 044a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1567 044c 01FB03F3 		mul	r3, r1, r3
 1568 0450 1A44     		add	r2, r2, r3
 1569 0452 07F5B053 		add	r3, r7, #5632
 1570 0456 03F11303 		add	r3, r3, #19
 1571 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1572 045c 1A44     		add	r2, r2, r3
 1573 045e 07F5B053 		add	r3, r7, #5632
 1574 0462 03F11603 		add	r3, r3, #22
 1575 0466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1576 0468 D31A     		subs	r3, r2, r3
 1577 046a 5A1E     		subs	r2, r3, #1
 1578 046c 07F5B053 		add	r3, r7, #5632
 1579 0470 03F11603 		add	r3, r3, #22
 1580 0474 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1581 0476 07F13803 		add	r3, r7, #56
 1582 047a 1E3B     		subs	r3, r3, #30
 1583 047c 0B44     		add	r3, r3, r1
 1584 047e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1585 0480 07F15803 		add	r3, r7, #88
 1586 0484 043B     		subs	r3, r3, #4
 1587 0486 9954     		strb	r1, [r3, r2]
 448:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1588              		.loc 1 448 0 discriminator 3
 1589 0488 07F5B053 		add	r3, r7, #5632
 1590 048c 03F11603 		add	r3, r3, #22
 1591 0490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1592 0492 0133     		adds	r3, r3, #1
 1593 0494 07F5B052 		add	r2, r7, #5632
 1594 0498 02F11602 		add	r2, r2, #22
 1595 049c 1370     		strb	r3, [r2]
 1596              	.L95:
 448:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1597              		.loc 1 448 0 is_stmt 0 discriminator 1
 1598 049e 07F5B053 		add	r3, r7, #5632
 1599 04a2 03F11603 		add	r3, r3, #22
 1600 04a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1601 04a8 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 53


 1602 04ac 03F11303 		add	r3, r3, #19
 1603 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1604 04b2 9A42     		cmp	r2, r3
 1605 04b4 B7D3     		bcc	.L96
 445:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1606              		.loc 1 445 0 is_stmt 1 discriminator 2
 1607 04b6 07F5B053 		add	r3, r7, #5632
 1608 04ba 03F11703 		add	r3, r3, #23
 1609 04be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1610 04c0 0133     		adds	r3, r3, #1
 1611 04c2 07F5B052 		add	r2, r7, #5632
 1612 04c6 02F11702 		add	r2, r2, #23
 1613 04ca 1370     		strb	r3, [r2]
 1614              	.L94:
 445:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1615              		.loc 1 445 0 is_stmt 0 discriminator 1
 1616 04cc 07F5B053 		add	r3, r7, #5632
 1617 04d0 03F11503 		add	r3, r3, #21
 1618 04d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1619 04d6 07F11803 		add	r3, r7, #24
 1620 04da 143B     		subs	r3, r3, #20
 1621 04dc 1B68     		ldr	r3, [r3]
 1622 04de 1344     		add	r3, r3, r2
 1623 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1624 04e2 07F5B052 		add	r2, r7, #5632
 1625 04e6 02F11702 		add	r2, r2, #23
 1626 04ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1627 04ec 9A42     		cmp	r2, r3
 1628 04ee FFF470AF 		bcc	.L97
 450:..\src/command_processing.c ****                         }
 451:..\src/command_processing.c ****                     }
 452:..\src/command_processing.c ****                     break;
 1629              		.loc 1 452 0 is_stmt 1
 1630 04f2 01F0EABF 		b	.L114
 1631              	.L86:
 453:..\src/command_processing.c ****                 case TYPE_UINT16:
 454:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1632              		.loc 1 454 0
 1633 04f6 0023     		movs	r3, #0
 1634 04f8 07F5B052 		add	r2, r7, #5632
 1635 04fc 02F11702 		add	r2, r2, #23
 1636 0500 1370     		strb	r3, [r2]
 1637 0502 79E0     		b	.L98
 1638              	.L101:
 455:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1639              		.loc 1 455 0
 1640 0504 07F5B053 		add	r3, r7, #5632
 1641 0508 03F11703 		add	r3, r3, #23
 1642 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1643 050e 07F5B052 		add	r2, r7, #5632
 1644 0512 02F11302 		add	r2, r2, #19
 1645 0516 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1646 0518 02FB03F3 		mul	r3, r2, r3
 1647 051c 1A46     		mov	r2, r3
 1648 051e 07F5B053 		add	r3, r7, #5632
 1649 0522 03F10803 		add	r3, r3, #8
 1650 0526 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 54


 1651 0528 1344     		add	r3, r3, r2
 1652 052a 07F5B052 		add	r2, r7, #5632
 1653 052e 02F10402 		add	r2, r2, #4
 1654 0532 1360     		str	r3, [r2]
 456:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1655              		.loc 1 456 0
 1656 0534 07F5B053 		add	r3, r7, #5632
 1657 0538 03F10403 		add	r3, r3, #4
 1658 053c 1B68     		ldr	r3, [r3]
 1659 053e 1A88     		ldrh	r2, [r3]
 1660 0540 07F11803 		add	r3, r7, #24
 1661 0544 1A80     		strh	r2, [r3]	@ movhi
 457:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1662              		.loc 1 457 0
 1663 0546 0023     		movs	r3, #0
 1664 0548 07F5B052 		add	r2, r7, #5632
 1665 054c 02F11602 		add	r2, r2, #22
 1666 0550 1370     		strb	r3, [r2]
 1667 0552 3AE0     		b	.L99
 1668              	.L100:
 458:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1669              		.loc 1 458 0 discriminator 3
 1670 0554 07F5B053 		add	r3, r7, #5632
 1671 0558 03F11503 		add	r3, r3, #21
 1672 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1673 055e 3222     		movs	r2, #50
 1674 0560 02FB03F3 		mul	r3, r2, r3
 1675 0564 1A1D     		adds	r2, r3, #4
 1676 0566 07F5B053 		add	r3, r7, #5632
 1677 056a 03F11703 		add	r3, r3, #23
 1678 056e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1679 0570 07F5B051 		add	r1, r7, #5632
 1680 0574 01F11301 		add	r1, r1, #19
 1681 0578 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1682 057a 01FB03F3 		mul	r3, r1, r3
 1683 057e 1A44     		add	r2, r2, r3
 1684 0580 07F5B053 		add	r3, r7, #5632
 1685 0584 03F11303 		add	r3, r3, #19
 1686 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1687 058a 1A44     		add	r2, r2, r3
 1688 058c 07F5B053 		add	r3, r7, #5632
 1689 0590 03F11603 		add	r3, r3, #22
 1690 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1691 0596 D31A     		subs	r3, r2, r3
 1692 0598 5A1E     		subs	r2, r3, #1
 1693 059a 07F5B053 		add	r3, r7, #5632
 1694 059e 03F11603 		add	r3, r3, #22
 1695 05a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1696 05a4 07F11801 		add	r1, r7, #24
 1697 05a8 0B44     		add	r3, r3, r1
 1698 05aa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1699 05ac 07F15803 		add	r3, r7, #88
 1700 05b0 043B     		subs	r3, r3, #4
 1701 05b2 9954     		strb	r1, [r3, r2]
 457:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1702              		.loc 1 457 0 discriminator 3
 1703 05b4 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 55


 1704 05b8 03F11603 		add	r3, r3, #22
 1705 05bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1706 05be 0133     		adds	r3, r3, #1
 1707 05c0 07F5B052 		add	r2, r7, #5632
 1708 05c4 02F11602 		add	r2, r2, #22
 1709 05c8 1370     		strb	r3, [r2]
 1710              	.L99:
 457:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1711              		.loc 1 457 0 is_stmt 0 discriminator 1
 1712 05ca 07F5B053 		add	r3, r7, #5632
 1713 05ce 03F11603 		add	r3, r3, #22
 1714 05d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1715 05d4 07F5B053 		add	r3, r7, #5632
 1716 05d8 03F11303 		add	r3, r3, #19
 1717 05dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1718 05de 9A42     		cmp	r2, r3
 1719 05e0 B8D3     		bcc	.L100
 454:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1720              		.loc 1 454 0 is_stmt 1 discriminator 2
 1721 05e2 07F5B053 		add	r3, r7, #5632
 1722 05e6 03F11703 		add	r3, r3, #23
 1723 05ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1724 05ec 0133     		adds	r3, r3, #1
 1725 05ee 07F5B052 		add	r2, r7, #5632
 1726 05f2 02F11702 		add	r2, r2, #23
 1727 05f6 1370     		strb	r3, [r2]
 1728              	.L98:
 454:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1729              		.loc 1 454 0 is_stmt 0 discriminator 1
 1730 05f8 07F5B053 		add	r3, r7, #5632
 1731 05fc 03F11503 		add	r3, r3, #21
 1732 0600 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1733 0602 07F11803 		add	r3, r7, #24
 1734 0606 143B     		subs	r3, r3, #20
 1735 0608 1B68     		ldr	r3, [r3]
 1736 060a 1344     		add	r3, r3, r2
 1737 060c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1738 060e 07F5B052 		add	r2, r7, #5632
 1739 0612 02F11702 		add	r2, r2, #23
 1740 0616 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1741 0618 9A42     		cmp	r2, r3
 1742 061a FFF473AF 		bcc	.L101
 459:..\src/command_processing.c ****                         }
 460:..\src/command_processing.c ****                     }
 461:..\src/command_processing.c ****                     break;
 1743              		.loc 1 461 0 is_stmt 1
 1744 061e 01F054BF 		b	.L114
 1745              	.L87:
 462:..\src/command_processing.c ****                 case TYPE_INT32: 
 463:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1746              		.loc 1 463 0
 1747 0622 0023     		movs	r3, #0
 1748 0624 07F5B052 		add	r2, r7, #5632
 1749 0628 02F11702 		add	r2, r2, #23
 1750 062c 1370     		strb	r3, [r2]
 1751 062e 7BE0     		b	.L102
 1752              	.L105:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 56


 464:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1753              		.loc 1 464 0
 1754 0630 07F5B053 		add	r3, r7, #5632
 1755 0634 03F11703 		add	r3, r3, #23
 1756 0638 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1757 063a 07F5B052 		add	r2, r7, #5632
 1758 063e 02F11302 		add	r2, r2, #19
 1759 0642 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1760 0644 02FB03F3 		mul	r3, r2, r3
 1761 0648 1A46     		mov	r2, r3
 1762 064a 07F5B053 		add	r3, r7, #5632
 1763 064e 03F10803 		add	r3, r3, #8
 1764 0652 1B68     		ldr	r3, [r3]
 1765 0654 1344     		add	r3, r3, r2
 1766 0656 07F5B052 		add	r2, r7, #5632
 1767 065a 02F10402 		add	r2, r2, #4
 1768 065e 1360     		str	r3, [r2]
 465:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1769              		.loc 1 465 0
 1770 0660 07F5B053 		add	r3, r7, #5632
 1771 0664 03F10403 		add	r3, r3, #4
 1772 0668 1B68     		ldr	r3, [r3]
 1773 066a 1A68     		ldr	r2, [r3]
 1774 066c 07F11803 		add	r3, r7, #24
 1775 0670 043B     		subs	r3, r3, #4
 1776 0672 1A60     		str	r2, [r3]
 466:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1777              		.loc 1 466 0
 1778 0674 0023     		movs	r3, #0
 1779 0676 07F5B052 		add	r2, r7, #5632
 1780 067a 02F11602 		add	r2, r2, #22
 1781 067e 1370     		strb	r3, [r2]
 1782 0680 3BE0     		b	.L103
 1783              	.L104:
 467:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1784              		.loc 1 467 0 discriminator 3
 1785 0682 07F5B053 		add	r3, r7, #5632
 1786 0686 03F11503 		add	r3, r3, #21
 1787 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1788 068c 3222     		movs	r2, #50
 1789 068e 02FB03F3 		mul	r3, r2, r3
 1790 0692 1A1D     		adds	r2, r3, #4
 1791 0694 07F5B053 		add	r3, r7, #5632
 1792 0698 03F11703 		add	r3, r3, #23
 1793 069c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1794 069e 07F5B051 		add	r1, r7, #5632
 1795 06a2 01F11301 		add	r1, r1, #19
 1796 06a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1797 06a8 01FB03F3 		mul	r3, r1, r3
 1798 06ac 1A44     		add	r2, r2, r3
 1799 06ae 07F5B053 		add	r3, r7, #5632
 1800 06b2 03F11303 		add	r3, r3, #19
 1801 06b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1802 06b8 1A44     		add	r2, r2, r3
 1803 06ba 07F5B053 		add	r3, r7, #5632
 1804 06be 03F11603 		add	r3, r3, #22
 1805 06c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 57


 1806 06c4 D31A     		subs	r3, r2, r3
 1807 06c6 5A1E     		subs	r2, r3, #1
 1808 06c8 07F5B053 		add	r3, r7, #5632
 1809 06cc 03F11603 		add	r3, r3, #22
 1810 06d0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1811 06d2 07F11803 		add	r3, r7, #24
 1812 06d6 043B     		subs	r3, r3, #4
 1813 06d8 0B44     		add	r3, r3, r1
 1814 06da 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1815 06dc 07F15803 		add	r3, r7, #88
 1816 06e0 043B     		subs	r3, r3, #4
 1817 06e2 9954     		strb	r1, [r3, r2]
 466:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1818              		.loc 1 466 0 discriminator 3
 1819 06e4 07F5B053 		add	r3, r7, #5632
 1820 06e8 03F11603 		add	r3, r3, #22
 1821 06ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1822 06ee 0133     		adds	r3, r3, #1
 1823 06f0 07F5B052 		add	r2, r7, #5632
 1824 06f4 02F11602 		add	r2, r2, #22
 1825 06f8 1370     		strb	r3, [r2]
 1826              	.L103:
 466:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1827              		.loc 1 466 0 is_stmt 0 discriminator 1
 1828 06fa 07F5B053 		add	r3, r7, #5632
 1829 06fe 03F11603 		add	r3, r3, #22
 1830 0702 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1831 0704 07F5B053 		add	r3, r7, #5632
 1832 0708 03F11303 		add	r3, r3, #19
 1833 070c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1834 070e 9A42     		cmp	r2, r3
 1835 0710 B7D3     		bcc	.L104
 463:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1836              		.loc 1 463 0 is_stmt 1 discriminator 2
 1837 0712 07F5B053 		add	r3, r7, #5632
 1838 0716 03F11703 		add	r3, r3, #23
 1839 071a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1840 071c 0133     		adds	r3, r3, #1
 1841 071e 07F5B052 		add	r2, r7, #5632
 1842 0722 02F11702 		add	r2, r2, #23
 1843 0726 1370     		strb	r3, [r2]
 1844              	.L102:
 463:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1845              		.loc 1 463 0 is_stmt 0 discriminator 1
 1846 0728 07F5B053 		add	r3, r7, #5632
 1847 072c 03F11503 		add	r3, r3, #21
 1848 0730 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1849 0732 07F11803 		add	r3, r7, #24
 1850 0736 143B     		subs	r3, r3, #20
 1851 0738 1B68     		ldr	r3, [r3]
 1852 073a 1344     		add	r3, r3, r2
 1853 073c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1854 073e 07F5B052 		add	r2, r7, #5632
 1855 0742 02F11702 		add	r2, r2, #23
 1856 0746 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1857 0748 9A42     		cmp	r2, r3
 1858 074a FFF471AF 		bcc	.L105
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 58


 468:..\src/command_processing.c ****                         }
 469:..\src/command_processing.c ****                     }
 470:..\src/command_processing.c ****                     break;
 1859              		.loc 1 470 0 is_stmt 1
 1860 074e 01F0BCBE 		b	.L114
 1861              	.L88:
 471:..\src/command_processing.c ****                 case TYPE_UINT32: 
 472:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1862              		.loc 1 472 0
 1863 0752 0023     		movs	r3, #0
 1864 0754 07F5B052 		add	r2, r7, #5632
 1865 0758 02F11702 		add	r2, r2, #23
 1866 075c 1370     		strb	r3, [r2]
 1867 075e 7BE0     		b	.L106
 1868              	.L109:
 473:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1869              		.loc 1 473 0
 1870 0760 07F5B053 		add	r3, r7, #5632
 1871 0764 03F11703 		add	r3, r3, #23
 1872 0768 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1873 076a 07F5B052 		add	r2, r7, #5632
 1874 076e 02F11302 		add	r2, r2, #19
 1875 0772 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1876 0774 02FB03F3 		mul	r3, r2, r3
 1877 0778 1A46     		mov	r2, r3
 1878 077a 07F5B053 		add	r3, r7, #5632
 1879 077e 03F10803 		add	r3, r3, #8
 1880 0782 1B68     		ldr	r3, [r3]
 1881 0784 1344     		add	r3, r3, r2
 1882 0786 07F5B052 		add	r2, r7, #5632
 1883 078a 02F10402 		add	r2, r2, #4
 1884 078e 1360     		str	r3, [r2]
 474:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1885              		.loc 1 474 0
 1886 0790 07F5B053 		add	r3, r7, #5632
 1887 0794 03F10403 		add	r3, r3, #4
 1888 0798 1B68     		ldr	r3, [r3]
 1889 079a 1A68     		ldr	r2, [r3]
 1890 079c 07F11803 		add	r3, r7, #24
 1891 07a0 083B     		subs	r3, r3, #8
 1892 07a2 1A60     		str	r2, [r3]
 475:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1893              		.loc 1 475 0
 1894 07a4 0023     		movs	r3, #0
 1895 07a6 07F5B052 		add	r2, r7, #5632
 1896 07aa 02F11602 		add	r2, r2, #22
 1897 07ae 1370     		strb	r3, [r2]
 1898 07b0 3BE0     		b	.L107
 1899              	.L108:
 476:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1900              		.loc 1 476 0 discriminator 3
 1901 07b2 07F5B053 		add	r3, r7, #5632
 1902 07b6 03F11503 		add	r3, r3, #21
 1903 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1904 07bc 3222     		movs	r2, #50
 1905 07be 02FB03F3 		mul	r3, r2, r3
 1906 07c2 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 59


 1907 07c4 07F5B053 		add	r3, r7, #5632
 1908 07c8 03F11703 		add	r3, r3, #23
 1909 07cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1910 07ce 07F5B051 		add	r1, r7, #5632
 1911 07d2 01F11301 		add	r1, r1, #19
 1912 07d6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1913 07d8 01FB03F3 		mul	r3, r1, r3
 1914 07dc 1A44     		add	r2, r2, r3
 1915 07de 07F5B053 		add	r3, r7, #5632
 1916 07e2 03F11303 		add	r3, r3, #19
 1917 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1918 07e8 1A44     		add	r2, r2, r3
 1919 07ea 07F5B053 		add	r3, r7, #5632
 1920 07ee 03F11603 		add	r3, r3, #22
 1921 07f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1922 07f4 D31A     		subs	r3, r2, r3
 1923 07f6 5A1E     		subs	r2, r3, #1
 1924 07f8 07F5B053 		add	r3, r7, #5632
 1925 07fc 03F11603 		add	r3, r3, #22
 1926 0800 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1927 0802 07F11803 		add	r3, r7, #24
 1928 0806 083B     		subs	r3, r3, #8
 1929 0808 0B44     		add	r3, r3, r1
 1930 080a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1931 080c 07F15803 		add	r3, r7, #88
 1932 0810 043B     		subs	r3, r3, #4
 1933 0812 9954     		strb	r1, [r3, r2]
 475:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1934              		.loc 1 475 0 discriminator 3
 1935 0814 07F5B053 		add	r3, r7, #5632
 1936 0818 03F11603 		add	r3, r3, #22
 1937 081c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1938 081e 0133     		adds	r3, r3, #1
 1939 0820 07F5B052 		add	r2, r7, #5632
 1940 0824 02F11602 		add	r2, r2, #22
 1941 0828 1370     		strb	r3, [r2]
 1942              	.L107:
 475:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1943              		.loc 1 475 0 is_stmt 0 discriminator 1
 1944 082a 07F5B053 		add	r3, r7, #5632
 1945 082e 03F11603 		add	r3, r3, #22
 1946 0832 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1947 0834 07F5B053 		add	r3, r7, #5632
 1948 0838 03F11303 		add	r3, r3, #19
 1949 083c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1950 083e 9A42     		cmp	r2, r3
 1951 0840 B7D3     		bcc	.L108
 472:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1952              		.loc 1 472 0 is_stmt 1 discriminator 2
 1953 0842 07F5B053 		add	r3, r7, #5632
 1954 0846 03F11703 		add	r3, r3, #23
 1955 084a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1956 084c 0133     		adds	r3, r3, #1
 1957 084e 07F5B052 		add	r2, r7, #5632
 1958 0852 02F11702 		add	r2, r2, #23
 1959 0856 1370     		strb	r3, [r2]
 1960              	.L106:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 60


 472:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1961              		.loc 1 472 0 is_stmt 0 discriminator 1
 1962 0858 07F5B053 		add	r3, r7, #5632
 1963 085c 03F11503 		add	r3, r3, #21
 1964 0860 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1965 0862 07F11803 		add	r3, r7, #24
 1966 0866 143B     		subs	r3, r3, #20
 1967 0868 1B68     		ldr	r3, [r3]
 1968 086a 1344     		add	r3, r3, r2
 1969 086c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1970 086e 07F5B052 		add	r2, r7, #5632
 1971 0872 02F11702 		add	r2, r2, #23
 1972 0876 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1973 0878 9A42     		cmp	r2, r3
 1974 087a FFF471AF 		bcc	.L109
 477:..\src/command_processing.c ****                         }
 478:..\src/command_processing.c ****                     }
 479:..\src/command_processing.c ****                     break;
 1975              		.loc 1 479 0 is_stmt 1
 1976 087e 01F024BE 		b	.L114
 1977              	.L89:
 480:..\src/command_processing.c ****                     
 481:..\src/command_processing.c ****                 case TYPE_FLOAT:
 482:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1978              		.loc 1 482 0
 1979 0882 0023     		movs	r3, #0
 1980 0884 07F5B052 		add	r2, r7, #5632
 1981 0888 02F11702 		add	r2, r2, #23
 1982 088c 1370     		strb	r3, [r2]
 1983 088e 7BE0     		b	.L110
 1984              	.L113:
 483:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1985              		.loc 1 483 0
 1986 0890 07F5B053 		add	r3, r7, #5632
 1987 0894 03F11703 		add	r3, r3, #23
 1988 0898 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1989 089a 07F5B052 		add	r2, r7, #5632
 1990 089e 02F11302 		add	r2, r2, #19
 1991 08a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1992 08a4 02FB03F3 		mul	r3, r2, r3
 1993 08a8 1A46     		mov	r2, r3
 1994 08aa 07F5B053 		add	r3, r7, #5632
 1995 08ae 03F10803 		add	r3, r3, #8
 1996 08b2 1B68     		ldr	r3, [r3]
 1997 08b4 1344     		add	r3, r3, r2
 1998 08b6 07F5B052 		add	r2, r7, #5632
 1999 08ba 02F10402 		add	r2, r2, #4
 2000 08be 1360     		str	r3, [r2]
 484:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 2001              		.loc 1 484 0
 2002 08c0 07F5B053 		add	r3, r7, #5632
 2003 08c4 03F10403 		add	r3, r3, #4
 2004 08c8 1B68     		ldr	r3, [r3]
 2005 08ca 1A68     		ldr	r2, [r3]	@ float
 2006 08cc 07F13803 		add	r3, r7, #56
 2007 08d0 1C3B     		subs	r3, r3, #28
 2008 08d2 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 61


 485:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2009              		.loc 1 485 0
 2010 08d4 0023     		movs	r3, #0
 2011 08d6 07F5B052 		add	r2, r7, #5632
 2012 08da 02F11602 		add	r2, r2, #22
 2013 08de 1370     		strb	r3, [r2]
 2014 08e0 3BE0     		b	.L111
 2015              	.L112:
 486:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2016              		.loc 1 486 0 discriminator 3
 2017 08e2 07F5B053 		add	r3, r7, #5632
 2018 08e6 03F11503 		add	r3, r3, #21
 2019 08ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2020 08ec 3222     		movs	r2, #50
 2021 08ee 02FB03F3 		mul	r3, r2, r3
 2022 08f2 1A1D     		adds	r2, r3, #4
 2023 08f4 07F5B053 		add	r3, r7, #5632
 2024 08f8 03F11703 		add	r3, r3, #23
 2025 08fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2026 08fe 07F5B051 		add	r1, r7, #5632
 2027 0902 01F11301 		add	r1, r1, #19
 2028 0906 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 2029 0908 01FB03F3 		mul	r3, r1, r3
 2030 090c 1A44     		add	r2, r2, r3
 2031 090e 07F5B053 		add	r3, r7, #5632
 2032 0912 03F11303 		add	r3, r3, #19
 2033 0916 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2034 0918 1A44     		add	r2, r2, r3
 2035 091a 07F5B053 		add	r3, r7, #5632
 2036 091e 03F11603 		add	r3, r3, #22
 2037 0922 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2038 0924 D31A     		subs	r3, r2, r3
 2039 0926 5A1E     		subs	r2, r3, #1
 2040 0928 07F5B053 		add	r3, r7, #5632
 2041 092c 03F11603 		add	r3, r3, #22
 2042 0930 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2043 0932 07F13803 		add	r3, r7, #56
 2044 0936 1C3B     		subs	r3, r3, #28
 2045 0938 0B44     		add	r3, r3, r1
 2046 093a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2047 093c 07F15803 		add	r3, r7, #88
 2048 0940 043B     		subs	r3, r3, #4
 2049 0942 9954     		strb	r1, [r3, r2]
 485:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2050              		.loc 1 485 0 discriminator 3
 2051 0944 07F5B053 		add	r3, r7, #5632
 2052 0948 03F11603 		add	r3, r3, #22
 2053 094c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2054 094e 0133     		adds	r3, r3, #1
 2055 0950 07F5B052 		add	r2, r7, #5632
 2056 0954 02F11602 		add	r2, r2, #22
 2057 0958 1370     		strb	r3, [r2]
 2058              	.L111:
 485:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2059              		.loc 1 485 0 is_stmt 0 discriminator 1
 2060 095a 07F5B053 		add	r3, r7, #5632
 2061 095e 03F11603 		add	r3, r3, #22
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 62


 2062 0962 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2063 0964 07F5B053 		add	r3, r7, #5632
 2064 0968 03F11303 		add	r3, r3, #19
 2065 096c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2066 096e 9A42     		cmp	r2, r3
 2067 0970 B7D3     		bcc	.L112
 482:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2068              		.loc 1 482 0 is_stmt 1 discriminator 2
 2069 0972 07F5B053 		add	r3, r7, #5632
 2070 0976 03F11703 		add	r3, r3, #23
 2071 097a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2072 097c 0133     		adds	r3, r3, #1
 2073 097e 07F5B052 		add	r2, r7, #5632
 2074 0982 02F11702 		add	r2, r2, #23
 2075 0986 1370     		strb	r3, [r2]
 2076              	.L110:
 482:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2077              		.loc 1 482 0 is_stmt 0 discriminator 1
 2078 0988 07F5B053 		add	r3, r7, #5632
 2079 098c 03F11503 		add	r3, r3, #21
 2080 0990 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2081 0992 07F11803 		add	r3, r7, #24
 2082 0996 143B     		subs	r3, r3, #20
 2083 0998 1B68     		ldr	r3, [r3]
 2084 099a 1344     		add	r3, r3, r2
 2085 099c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2086 099e 07F5B052 		add	r2, r7, #5632
 2087 09a2 02F11702 		add	r2, r2, #23
 2088 09a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2089 09a8 9A42     		cmp	r2, r3
 2090 09aa FFF471AF 		bcc	.L113
 487:..\src/command_processing.c ****                         }
 488:..\src/command_processing.c ****                     }
 489:..\src/command_processing.c ****                     break;   
 2091              		.loc 1 489 0 is_stmt 1 discriminator 7
 2092 09ae 00BF     		nop
 2093 09b0 01F08BBD 		b	.L114
 2094              	.L80:
 490:..\src/command_processing.c ****             }
 491:..\src/command_processing.c ****         }
 492:..\src/command_processing.c ****         else {
 493:..\src/command_processing.c ****             
 494:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 495:..\src/command_processing.c ****             
 496:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 497:..\src/command_processing.c ****                 switch(idx+1){
 2095              		.loc 1 497 0
 2096 09b4 07F5B053 		add	r3, r7, #5632
 2097 09b8 03F11503 		add	r3, r3, #21
 2098 09bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2099 09be 0133     		adds	r3, r3, #1
 2100 09c0 023B     		subs	r3, r3, #2
 2101 09c2 332B     		cmp	r3, #51
 2102 09c4 01F28085 		bhi	.L284
 2103 09c8 01A2     		adr	r2, .L117
 2104 09ca 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2105 09ce 00BF     		.p2align 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 63


 2106              	.L117:
 2107 09d0 A10A0000 		.word	.L116+1
 2108 09d4 6D0F0000 		.word	.L118+1
 2109 09d8 C9240000 		.word	.L284+1
 2110 09dc C9240000 		.word	.L284+1
 2111 09e0 C9240000 		.word	.L284+1
 2112 09e4 C9240000 		.word	.L284+1
 2113 09e8 37140000 		.word	.L119+1
 2114 09ec C9240000 		.word	.L284+1
 2115 09f0 C9240000 		.word	.L284+1
 2116 09f4 AB150000 		.word	.L120+1
 2117 09f8 C9240000 		.word	.L284+1
 2118 09fc C9240000 		.word	.L284+1
 2119 0a00 C9240000 		.word	.L284+1
 2120 0a04 C9240000 		.word	.L284+1
 2121 0a08 C9240000 		.word	.L284+1
 2122 0a0c C9240000 		.word	.L284+1
 2123 0a10 C9240000 		.word	.L284+1
 2124 0a14 C9240000 		.word	.L284+1
 2125 0a18 C9240000 		.word	.L284+1
 2126 0a1c C9240000 		.word	.L284+1
 2127 0a20 C9240000 		.word	.L284+1
 2128 0a24 79170000 		.word	.L121+1
 2129 0a28 C9240000 		.word	.L284+1
 2130 0a2c C9240000 		.word	.L284+1
 2131 0a30 C9240000 		.word	.L284+1
 2132 0a34 C9240000 		.word	.L284+1
 2133 0a38 C9240000 		.word	.L284+1
 2134 0a3c C9240000 		.word	.L284+1
 2135 0a40 C9240000 		.word	.L284+1
 2136 0a44 C9240000 		.word	.L284+1
 2137 0a48 C9240000 		.word	.L284+1
 2138 0a4c C9240000 		.word	.L284+1
 2139 0a50 C9240000 		.word	.L284+1
 2140 0a54 C9240000 		.word	.L284+1
 2141 0a58 C9240000 		.word	.L284+1
 2142 0a5c C9240000 		.word	.L284+1
 2143 0a60 C9240000 		.word	.L284+1
 2144 0a64 C9240000 		.word	.L284+1
 2145 0a68 C9240000 		.word	.L284+1
 2146 0a6c C9240000 		.word	.L284+1
 2147 0a70 C9240000 		.word	.L284+1
 2148 0a74 C9240000 		.word	.L284+1
 2149 0a78 43180000 		.word	.L122+1
 2150 0a7c 111D0000 		.word	.L123+1
 2151 0a80 C9240000 		.word	.L284+1
 2152 0a84 C9240000 		.word	.L284+1
 2153 0a88 C9240000 		.word	.L284+1
 2154 0a8c C9240000 		.word	.L284+1
 2155 0a90 DB210000 		.word	.L124+1
 2156 0a94 C9240000 		.word	.L284+1
 2157 0a98 C9240000 		.word	.L284+1
 2158 0a9c FF220000 		.word	.L125+1
 2159              		.p2align 1
 2160              	.L116:
 498:..\src/command_processing.c ****                     case 2:         // Position PID
 499:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 64


 2161              		.loc 1 499 0
 2162 0aa0 07F5B053 		add	r3, r7, #5632
 2163 0aa4 03F10F03 		add	r3, r3, #15
 2164 0aa8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2165 0aaa AC49     		ldr	r1, .L290
 2166 0aac 1346     		mov	r3, r2
 2167 0aae DB00     		lsls	r3, r3, #3
 2168 0ab0 9B1A     		subs	r3, r3, r2
 2169 0ab2 1B01     		lsls	r3, r3, #4
 2170 0ab4 0B44     		add	r3, r3, r1
 2171 0ab6 03F20F13 		addw	r3, r3, #271
 2172 0aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2173 0abc 032B     		cmp	r3, #3
 2174 0abe 00F02981 		beq	.L126
 500:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 2175              		.loc 1 500 0
 2176 0ac2 07F5B053 		add	r3, r7, #5632
 2177 0ac6 03F10F03 		add	r3, r3, #15
 2178 0aca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2179 0acc A349     		ldr	r1, .L290
 2180 0ace 1346     		mov	r3, r2
 2181 0ad0 DB00     		lsls	r3, r3, #3
 2182 0ad2 9B1A     		subs	r3, r3, r2
 2183 0ad4 1B01     		lsls	r3, r3, #4
 2184 0ad6 0B44     		add	r3, r3, r1
 2185 0ad8 B033     		adds	r3, r3, #176
 2186 0ada 1B68     		ldr	r3, [r3]
 2187 0adc 1846     		mov	r0, r3
 2188 0ade FFF7FEFF 		bl	__aeabi_i2f
 2189 0ae2 0346     		mov	r3, r0
 2190 0ae4 4FF08F41 		mov	r1, #1199570944
 2191 0ae8 1846     		mov	r0, r3
 2192 0aea FFF7FEFF 		bl	__aeabi_fdiv
 2193 0aee 0346     		mov	r3, r0
 2194 0af0 1A46     		mov	r2, r3
 2195 0af2 07F13803 		add	r3, r7, #56
 2196 0af6 1C3B     		subs	r3, r3, #28
 2197 0af8 1A60     		str	r2, [r3]	@ float
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2198              		.loc 1 501 0
 2199 0afa 0023     		movs	r3, #0
 2200 0afc 07F5B052 		add	r2, r7, #5632
 2201 0b00 02F11702 		add	r2, r2, #23
 2202 0b04 1370     		strb	r3, [r2]
 2203 0b06 2EE0     		b	.L127
 2204              	.L128:
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2205              		.loc 1 502 0 discriminator 3
 2206 0b08 07F5B053 		add	r3, r7, #5632
 2207 0b0c 03F11503 		add	r3, r3, #21
 2208 0b10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 0b12 3222     		movs	r2, #50
 2210 0b14 02FB03F3 		mul	r3, r2, r3
 2211 0b18 1A1D     		adds	r2, r3, #4
 2212 0b1a 07F5B053 		add	r3, r7, #5632
 2213 0b1e 03F11303 		add	r3, r3, #19
 2214 0b22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 65


 2215 0b24 1A44     		add	r2, r2, r3
 2216 0b26 07F5B053 		add	r3, r7, #5632
 2217 0b2a 03F11703 		add	r3, r3, #23
 2218 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2219 0b30 D31A     		subs	r3, r2, r3
 2220 0b32 5A1E     		subs	r2, r3, #1
 2221 0b34 07F5B053 		add	r3, r7, #5632
 2222 0b38 03F11703 		add	r3, r3, #23
 2223 0b3c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2224 0b3e 07F13803 		add	r3, r7, #56
 2225 0b42 1C3B     		subs	r3, r3, #28
 2226 0b44 0B44     		add	r3, r3, r1
 2227 0b46 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2228 0b48 07F15803 		add	r3, r7, #88
 2229 0b4c 043B     		subs	r3, r3, #4
 2230 0b4e 9954     		strb	r1, [r3, r2]
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2231              		.loc 1 501 0 discriminator 3
 2232 0b50 07F5B053 		add	r3, r7, #5632
 2233 0b54 03F11703 		add	r3, r3, #23
 2234 0b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2235 0b5a 0133     		adds	r3, r3, #1
 2236 0b5c 07F5B052 		add	r2, r7, #5632
 2237 0b60 02F11702 		add	r2, r2, #23
 2238 0b64 1370     		strb	r3, [r2]
 2239              	.L127:
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2240              		.loc 1 501 0 is_stmt 0 discriminator 1
 2241 0b66 07F5B053 		add	r3, r7, #5632
 2242 0b6a 03F11703 		add	r3, r3, #23
 2243 0b6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2244 0b70 07F5B053 		add	r3, r7, #5632
 2245 0b74 03F11303 		add	r3, r3, #19
 2246 0b78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2247 0b7a 9A42     		cmp	r2, r3
 2248 0b7c C4D3     		bcc	.L128
 503:..\src/command_processing.c ****                             }
 504:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2249              		.loc 1 504 0 is_stmt 1
 2250 0b7e 07F5B053 		add	r3, r7, #5632
 2251 0b82 03F10F03 		add	r3, r3, #15
 2252 0b86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2253 0b88 7449     		ldr	r1, .L290
 2254 0b8a 1346     		mov	r3, r2
 2255 0b8c DB00     		lsls	r3, r3, #3
 2256 0b8e 9B1A     		subs	r3, r3, r2
 2257 0b90 1B01     		lsls	r3, r3, #4
 2258 0b92 0B44     		add	r3, r3, r1
 2259 0b94 B433     		adds	r3, r3, #180
 2260 0b96 1B68     		ldr	r3, [r3]
 2261 0b98 1846     		mov	r0, r3
 2262 0b9a FFF7FEFF 		bl	__aeabi_i2f
 2263 0b9e 0346     		mov	r3, r0
 2264 0ba0 4FF08F41 		mov	r1, #1199570944
 2265 0ba4 1846     		mov	r0, r3
 2266 0ba6 FFF7FEFF 		bl	__aeabi_fdiv
 2267 0baa 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 66


 2268 0bac 1A46     		mov	r2, r3
 2269 0bae 07F13803 		add	r3, r7, #56
 2270 0bb2 1C3B     		subs	r3, r3, #28
 2271 0bb4 1A60     		str	r2, [r3]	@ float
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2272              		.loc 1 505 0
 2273 0bb6 0023     		movs	r3, #0
 2274 0bb8 07F5B052 		add	r2, r7, #5632
 2275 0bbc 02F11702 		add	r2, r2, #23
 2276 0bc0 1370     		strb	r3, [r2]
 2277 0bc2 34E0     		b	.L129
 2278              	.L130:
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2279              		.loc 1 506 0 discriminator 3
 2280 0bc4 07F5B053 		add	r3, r7, #5632
 2281 0bc8 03F11503 		add	r3, r3, #21
 2282 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2283 0bce 3222     		movs	r2, #50
 2284 0bd0 02FB03F3 		mul	r3, r2, r3
 2285 0bd4 1A1D     		adds	r2, r3, #4
 2286 0bd6 07F5B053 		add	r3, r7, #5632
 2287 0bda 03F11303 		add	r3, r3, #19
 2288 0bde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2289 0be0 1A44     		add	r2, r2, r3
 2290 0be2 07F5B053 		add	r3, r7, #5632
 2291 0be6 03F11303 		add	r3, r3, #19
 2292 0bea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2293 0bec 1A44     		add	r2, r2, r3
 2294 0bee 07F5B053 		add	r3, r7, #5632
 2295 0bf2 03F11703 		add	r3, r3, #23
 2296 0bf6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2297 0bf8 D31A     		subs	r3, r2, r3
 2298 0bfa 5A1E     		subs	r2, r3, #1
 2299 0bfc 07F5B053 		add	r3, r7, #5632
 2300 0c00 03F11703 		add	r3, r3, #23
 2301 0c04 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2302 0c06 07F13803 		add	r3, r7, #56
 2303 0c0a 1C3B     		subs	r3, r3, #28
 2304 0c0c 0B44     		add	r3, r3, r1
 2305 0c0e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2306 0c10 07F15803 		add	r3, r7, #88
 2307 0c14 043B     		subs	r3, r3, #4
 2308 0c16 9954     		strb	r1, [r3, r2]
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2309              		.loc 1 505 0 discriminator 3
 2310 0c18 07F5B053 		add	r3, r7, #5632
 2311 0c1c 03F11703 		add	r3, r3, #23
 2312 0c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2313 0c22 0133     		adds	r3, r3, #1
 2314 0c24 07F5B052 		add	r2, r7, #5632
 2315 0c28 02F11702 		add	r2, r2, #23
 2316 0c2c 1370     		strb	r3, [r2]
 2317              	.L129:
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2318              		.loc 1 505 0 is_stmt 0 discriminator 1
 2319 0c2e 07F5B053 		add	r3, r7, #5632
 2320 0c32 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 67


 2321 0c36 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2322 0c38 07F5B053 		add	r3, r7, #5632
 2323 0c3c 03F11303 		add	r3, r3, #19
 2324 0c40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2325 0c42 9A42     		cmp	r2, r3
 2326 0c44 BED3     		bcc	.L130
 507:..\src/command_processing.c ****                             }
 508:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2327              		.loc 1 508 0 is_stmt 1
 2328 0c46 07F5B053 		add	r3, r7, #5632
 2329 0c4a 03F10F03 		add	r3, r3, #15
 2330 0c4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2331 0c50 4249     		ldr	r1, .L290
 2332 0c52 1346     		mov	r3, r2
 2333 0c54 DB00     		lsls	r3, r3, #3
 2334 0c56 9B1A     		subs	r3, r3, r2
 2335 0c58 1B01     		lsls	r3, r3, #4
 2336 0c5a 0B44     		add	r3, r3, r1
 2337 0c5c B833     		adds	r3, r3, #184
 2338 0c5e 1B68     		ldr	r3, [r3]
 2339 0c60 1846     		mov	r0, r3
 2340 0c62 FFF7FEFF 		bl	__aeabi_i2f
 2341 0c66 0346     		mov	r3, r0
 2342 0c68 4FF08F41 		mov	r1, #1199570944
 2343 0c6c 1846     		mov	r0, r3
 2344 0c6e FFF7FEFF 		bl	__aeabi_fdiv
 2345 0c72 0346     		mov	r3, r0
 2346 0c74 1A46     		mov	r2, r3
 2347 0c76 07F13803 		add	r3, r7, #56
 2348 0c7a 1C3B     		subs	r3, r3, #28
 2349 0c7c 1A60     		str	r2, [r3]	@ float
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2350              		.loc 1 509 0
 2351 0c7e 0023     		movs	r3, #0
 2352 0c80 07F5B052 		add	r2, r7, #5632
 2353 0c84 02F11702 		add	r2, r2, #23
 2354 0c88 1370     		strb	r3, [r2]
 2355 0c8a 35E0     		b	.L131
 2356              	.L132:
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2357              		.loc 1 510 0 discriminator 3
 2358 0c8c 07F5B053 		add	r3, r7, #5632
 2359 0c90 03F11503 		add	r3, r3, #21
 2360 0c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2361 0c96 3222     		movs	r2, #50
 2362 0c98 02FB03F3 		mul	r3, r2, r3
 2363 0c9c 1A1D     		adds	r2, r3, #4
 2364 0c9e 07F5B053 		add	r3, r7, #5632
 2365 0ca2 03F11303 		add	r3, r3, #19
 2366 0ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2367 0ca8 5B00     		lsls	r3, r3, #1
 2368 0caa 1A44     		add	r2, r2, r3
 2369 0cac 07F5B053 		add	r3, r7, #5632
 2370 0cb0 03F11303 		add	r3, r3, #19
 2371 0cb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2372 0cb6 1A44     		add	r2, r2, r3
 2373 0cb8 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 68


 2374 0cbc 03F11703 		add	r3, r3, #23
 2375 0cc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2376 0cc2 D31A     		subs	r3, r2, r3
 2377 0cc4 5A1E     		subs	r2, r3, #1
 2378 0cc6 07F5B053 		add	r3, r7, #5632
 2379 0cca 03F11703 		add	r3, r3, #23
 2380 0cce 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2381 0cd0 07F13803 		add	r3, r7, #56
 2382 0cd4 1C3B     		subs	r3, r3, #28
 2383 0cd6 0B44     		add	r3, r3, r1
 2384 0cd8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2385 0cda 07F15803 		add	r3, r7, #88
 2386 0cde 043B     		subs	r3, r3, #4
 2387 0ce0 9954     		strb	r1, [r3, r2]
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2388              		.loc 1 509 0 discriminator 3
 2389 0ce2 07F5B053 		add	r3, r7, #5632
 2390 0ce6 03F11703 		add	r3, r3, #23
 2391 0cea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2392 0cec 0133     		adds	r3, r3, #1
 2393 0cee 07F5B052 		add	r2, r7, #5632
 2394 0cf2 02F11702 		add	r2, r2, #23
 2395 0cf6 1370     		strb	r3, [r2]
 2396              	.L131:
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2397              		.loc 1 509 0 is_stmt 0 discriminator 1
 2398 0cf8 07F5B053 		add	r3, r7, #5632
 2399 0cfc 03F11703 		add	r3, r3, #23
 2400 0d00 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2401 0d02 07F5B053 		add	r3, r7, #5632
 2402 0d06 03F11303 		add	r3, r3, #19
 2403 0d0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2404 0d0c 9A42     		cmp	r2, r3
 2405 0d0e BDD3     		bcc	.L132
 511:..\src/command_processing.c ****                             } 
 512:..\src/command_processing.c ****                         }
 513:..\src/command_processing.c ****                         else {
 514:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 517:..\src/command_processing.c ****                             }
 518:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 521:..\src/command_processing.c ****                             }
 522:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 525:..\src/command_processing.c ****                             }
 526:..\src/command_processing.c ****                         }
 527:..\src/command_processing.c ****                         break;
 2406              		.loc 1 527 0 is_stmt 1
 2407 0d10 01F0DBBB 		b	.L114
 2408              	.L126:
 514:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2409              		.loc 1 514 0
 2410 0d14 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 69


 2411 0d18 03F10F03 		add	r3, r3, #15
 2412 0d1c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2413 0d1e 0F49     		ldr	r1, .L290
 2414 0d20 1346     		mov	r3, r2
 2415 0d22 DB00     		lsls	r3, r3, #3
 2416 0d24 9B1A     		subs	r3, r3, r2
 2417 0d26 1B01     		lsls	r3, r3, #4
 2418 0d28 0B44     		add	r3, r3, r1
 2419 0d2a C833     		adds	r3, r3, #200
 2420 0d2c 1B68     		ldr	r3, [r3]
 2421 0d2e 1846     		mov	r0, r3
 2422 0d30 FFF7FEFF 		bl	__aeabi_i2f
 2423 0d34 0346     		mov	r3, r0
 2424 0d36 4FF08F41 		mov	r1, #1199570944
 2425 0d3a 1846     		mov	r0, r3
 2426 0d3c FFF7FEFF 		bl	__aeabi_fdiv
 2427 0d40 0346     		mov	r3, r0
 2428 0d42 1A46     		mov	r2, r3
 2429 0d44 07F13803 		add	r3, r7, #56
 2430 0d48 1C3B     		subs	r3, r3, #28
 2431 0d4a 1A60     		str	r2, [r3]	@ float
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2432              		.loc 1 515 0
 2433 0d4c 0023     		movs	r3, #0
 2434 0d4e 07F5B052 		add	r2, r7, #5632
 2435 0d52 02F11702 		add	r2, r2, #23
 2436 0d56 1370     		strb	r3, [r2]
 2437 0d58 31E0     		b	.L134
 2438              	.L291:
 2439 0d5a 00BF     		.align	2
 2440              	.L290:
 2441 0d5c 00000000 		.word	c_mem
 2442              	.L135:
 516:..\src/command_processing.c ****                             }
 2443              		.loc 1 516 0 discriminator 3
 2444 0d60 07F5B053 		add	r3, r7, #5632
 2445 0d64 03F11503 		add	r3, r3, #21
 2446 0d68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2447 0d6a 3222     		movs	r2, #50
 2448 0d6c 02FB03F3 		mul	r3, r2, r3
 2449 0d70 1A1D     		adds	r2, r3, #4
 2450 0d72 07F5B053 		add	r3, r7, #5632
 2451 0d76 03F11303 		add	r3, r3, #19
 2452 0d7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2453 0d7c 1A44     		add	r2, r2, r3
 2454 0d7e 07F5B053 		add	r3, r7, #5632
 2455 0d82 03F11703 		add	r3, r3, #23
 2456 0d86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2457 0d88 D31A     		subs	r3, r2, r3
 2458 0d8a 5A1E     		subs	r2, r3, #1
 2459 0d8c 07F5B053 		add	r3, r7, #5632
 2460 0d90 03F11703 		add	r3, r3, #23
 2461 0d94 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2462 0d96 07F13803 		add	r3, r7, #56
 2463 0d9a 1C3B     		subs	r3, r3, #28
 2464 0d9c 0B44     		add	r3, r3, r1
 2465 0d9e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 70


 2466 0da0 07F15803 		add	r3, r7, #88
 2467 0da4 043B     		subs	r3, r3, #4
 2468 0da6 9954     		strb	r1, [r3, r2]
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2469              		.loc 1 515 0 discriminator 3
 2470 0da8 07F5B053 		add	r3, r7, #5632
 2471 0dac 03F11703 		add	r3, r3, #23
 2472 0db0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2473 0db2 0133     		adds	r3, r3, #1
 2474 0db4 07F5B052 		add	r2, r7, #5632
 2475 0db8 02F11702 		add	r2, r2, #23
 2476 0dbc 1370     		strb	r3, [r2]
 2477              	.L134:
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2478              		.loc 1 515 0 is_stmt 0 discriminator 1
 2479 0dbe 07F5B053 		add	r3, r7, #5632
 2480 0dc2 03F11703 		add	r3, r3, #23
 2481 0dc6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2482 0dc8 07F5B053 		add	r3, r7, #5632
 2483 0dcc 03F11303 		add	r3, r3, #19
 2484 0dd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2485 0dd2 9A42     		cmp	r2, r3
 2486 0dd4 C4D3     		bcc	.L135
 518:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2487              		.loc 1 518 0 is_stmt 1
 2488 0dd6 07F5B053 		add	r3, r7, #5632
 2489 0dda 03F10F03 		add	r3, r3, #15
 2490 0dde 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2491 0de0 AB49     		ldr	r1, .L292
 2492 0de2 1346     		mov	r3, r2
 2493 0de4 DB00     		lsls	r3, r3, #3
 2494 0de6 9B1A     		subs	r3, r3, r2
 2495 0de8 1B01     		lsls	r3, r3, #4
 2496 0dea 0B44     		add	r3, r3, r1
 2497 0dec CC33     		adds	r3, r3, #204
 2498 0dee 1B68     		ldr	r3, [r3]
 2499 0df0 1846     		mov	r0, r3
 2500 0df2 FFF7FEFF 		bl	__aeabi_i2f
 2501 0df6 0346     		mov	r3, r0
 2502 0df8 4FF08F41 		mov	r1, #1199570944
 2503 0dfc 1846     		mov	r0, r3
 2504 0dfe FFF7FEFF 		bl	__aeabi_fdiv
 2505 0e02 0346     		mov	r3, r0
 2506 0e04 1A46     		mov	r2, r3
 2507 0e06 07F13803 		add	r3, r7, #56
 2508 0e0a 1C3B     		subs	r3, r3, #28
 2509 0e0c 1A60     		str	r2, [r3]	@ float
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2510              		.loc 1 519 0
 2511 0e0e 0023     		movs	r3, #0
 2512 0e10 07F5B052 		add	r2, r7, #5632
 2513 0e14 02F11702 		add	r2, r2, #23
 2514 0e18 1370     		strb	r3, [r2]
 2515 0e1a 34E0     		b	.L136
 2516              	.L137:
 520:..\src/command_processing.c ****                             }
 2517              		.loc 1 520 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 71


 2518 0e1c 07F5B053 		add	r3, r7, #5632
 2519 0e20 03F11503 		add	r3, r3, #21
 2520 0e24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2521 0e26 3222     		movs	r2, #50
 2522 0e28 02FB03F3 		mul	r3, r2, r3
 2523 0e2c 1A1D     		adds	r2, r3, #4
 2524 0e2e 07F5B053 		add	r3, r7, #5632
 2525 0e32 03F11303 		add	r3, r3, #19
 2526 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2527 0e38 1A44     		add	r2, r2, r3
 2528 0e3a 07F5B053 		add	r3, r7, #5632
 2529 0e3e 03F11303 		add	r3, r3, #19
 2530 0e42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2531 0e44 1A44     		add	r2, r2, r3
 2532 0e46 07F5B053 		add	r3, r7, #5632
 2533 0e4a 03F11703 		add	r3, r3, #23
 2534 0e4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2535 0e50 D31A     		subs	r3, r2, r3
 2536 0e52 5A1E     		subs	r2, r3, #1
 2537 0e54 07F5B053 		add	r3, r7, #5632
 2538 0e58 03F11703 		add	r3, r3, #23
 2539 0e5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2540 0e5e 07F13803 		add	r3, r7, #56
 2541 0e62 1C3B     		subs	r3, r3, #28
 2542 0e64 0B44     		add	r3, r3, r1
 2543 0e66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2544 0e68 07F15803 		add	r3, r7, #88
 2545 0e6c 043B     		subs	r3, r3, #4
 2546 0e6e 9954     		strb	r1, [r3, r2]
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2547              		.loc 1 519 0 discriminator 3
 2548 0e70 07F5B053 		add	r3, r7, #5632
 2549 0e74 03F11703 		add	r3, r3, #23
 2550 0e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2551 0e7a 0133     		adds	r3, r3, #1
 2552 0e7c 07F5B052 		add	r2, r7, #5632
 2553 0e80 02F11702 		add	r2, r2, #23
 2554 0e84 1370     		strb	r3, [r2]
 2555              	.L136:
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2556              		.loc 1 519 0 is_stmt 0 discriminator 1
 2557 0e86 07F5B053 		add	r3, r7, #5632
 2558 0e8a 03F11703 		add	r3, r3, #23
 2559 0e8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2560 0e90 07F5B053 		add	r3, r7, #5632
 2561 0e94 03F11303 		add	r3, r3, #19
 2562 0e98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2563 0e9a 9A42     		cmp	r2, r3
 2564 0e9c BED3     		bcc	.L137
 522:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2565              		.loc 1 522 0 is_stmt 1
 2566 0e9e 07F5B053 		add	r3, r7, #5632
 2567 0ea2 03F10F03 		add	r3, r3, #15
 2568 0ea6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2569 0ea8 7949     		ldr	r1, .L292
 2570 0eaa 1346     		mov	r3, r2
 2571 0eac DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 72


 2572 0eae 9B1A     		subs	r3, r3, r2
 2573 0eb0 1B01     		lsls	r3, r3, #4
 2574 0eb2 0B44     		add	r3, r3, r1
 2575 0eb4 D033     		adds	r3, r3, #208
 2576 0eb6 1B68     		ldr	r3, [r3]
 2577 0eb8 1846     		mov	r0, r3
 2578 0eba FFF7FEFF 		bl	__aeabi_i2f
 2579 0ebe 0346     		mov	r3, r0
 2580 0ec0 4FF08F41 		mov	r1, #1199570944
 2581 0ec4 1846     		mov	r0, r3
 2582 0ec6 FFF7FEFF 		bl	__aeabi_fdiv
 2583 0eca 0346     		mov	r3, r0
 2584 0ecc 1A46     		mov	r2, r3
 2585 0ece 07F13803 		add	r3, r7, #56
 2586 0ed2 1C3B     		subs	r3, r3, #28
 2587 0ed4 1A60     		str	r2, [r3]	@ float
 523:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2588              		.loc 1 523 0
 2589 0ed6 0023     		movs	r3, #0
 2590 0ed8 07F5B052 		add	r2, r7, #5632
 2591 0edc 02F11702 		add	r2, r2, #23
 2592 0ee0 1370     		strb	r3, [r2]
 2593 0ee2 35E0     		b	.L138
 2594              	.L139:
 524:..\src/command_processing.c ****                             }
 2595              		.loc 1 524 0 discriminator 3
 2596 0ee4 07F5B053 		add	r3, r7, #5632
 2597 0ee8 03F11503 		add	r3, r3, #21
 2598 0eec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2599 0eee 3222     		movs	r2, #50
 2600 0ef0 02FB03F3 		mul	r3, r2, r3
 2601 0ef4 1A1D     		adds	r2, r3, #4
 2602 0ef6 07F5B053 		add	r3, r7, #5632
 2603 0efa 03F11303 		add	r3, r3, #19
 2604 0efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2605 0f00 5B00     		lsls	r3, r3, #1
 2606 0f02 1A44     		add	r2, r2, r3
 2607 0f04 07F5B053 		add	r3, r7, #5632
 2608 0f08 03F11303 		add	r3, r3, #19
 2609 0f0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2610 0f0e 1A44     		add	r2, r2, r3
 2611 0f10 07F5B053 		add	r3, r7, #5632
 2612 0f14 03F11703 		add	r3, r3, #23
 2613 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2614 0f1a D31A     		subs	r3, r2, r3
 2615 0f1c 5A1E     		subs	r2, r3, #1
 2616 0f1e 07F5B053 		add	r3, r7, #5632
 2617 0f22 03F11703 		add	r3, r3, #23
 2618 0f26 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2619 0f28 07F13803 		add	r3, r7, #56
 2620 0f2c 1C3B     		subs	r3, r3, #28
 2621 0f2e 0B44     		add	r3, r3, r1
 2622 0f30 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2623 0f32 07F15803 		add	r3, r7, #88
 2624 0f36 043B     		subs	r3, r3, #4
 2625 0f38 9954     		strb	r1, [r3, r2]
 523:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 73


 2626              		.loc 1 523 0 discriminator 3
 2627 0f3a 07F5B053 		add	r3, r7, #5632
 2628 0f3e 03F11703 		add	r3, r3, #23
 2629 0f42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2630 0f44 0133     		adds	r3, r3, #1
 2631 0f46 07F5B052 		add	r2, r7, #5632
 2632 0f4a 02F11702 		add	r2, r2, #23
 2633 0f4e 1370     		strb	r3, [r2]
 2634              	.L138:
 523:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2635              		.loc 1 523 0 is_stmt 0 discriminator 1
 2636 0f50 07F5B053 		add	r3, r7, #5632
 2637 0f54 03F11703 		add	r3, r3, #23
 2638 0f58 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2639 0f5a 07F5B053 		add	r3, r7, #5632
 2640 0f5e 03F11303 		add	r3, r3, #19
 2641 0f62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2642 0f64 9A42     		cmp	r2, r3
 2643 0f66 BDD3     		bcc	.L139
 2644              		.loc 1 527 0 is_stmt 1
 2645 0f68 01F0AFBA 		b	.L114
 2646              	.L118:
 528:..\src/command_processing.c ****                         
 529:..\src/command_processing.c ****                     case 3:         //Current PID
 530:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2647              		.loc 1 530 0
 2648 0f6c 07F5B053 		add	r3, r7, #5632
 2649 0f70 03F10F03 		add	r3, r3, #15
 2650 0f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2651 0f76 4649     		ldr	r1, .L292
 2652 0f78 1346     		mov	r3, r2
 2653 0f7a DB00     		lsls	r3, r3, #3
 2654 0f7c 9B1A     		subs	r3, r3, r2
 2655 0f7e 1B01     		lsls	r3, r3, #4
 2656 0f80 0B44     		add	r3, r3, r1
 2657 0f82 03F20F13 		addw	r3, r3, #271
 2658 0f86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2659 0f88 032B     		cmp	r3, #3
 2660 0f8a 00F02B81 		beq	.L140
 531:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2661              		.loc 1 531 0
 2662 0f8e 07F5B053 		add	r3, r7, #5632
 2663 0f92 03F10F03 		add	r3, r3, #15
 2664 0f96 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2665 0f98 3D49     		ldr	r1, .L292
 2666 0f9a 1346     		mov	r3, r2
 2667 0f9c DB00     		lsls	r3, r3, #3
 2668 0f9e 9B1A     		subs	r3, r3, r2
 2669 0fa0 1B01     		lsls	r3, r3, #4
 2670 0fa2 0B44     		add	r3, r3, r1
 2671 0fa4 BC33     		adds	r3, r3, #188
 2672 0fa6 1B68     		ldr	r3, [r3]
 2673 0fa8 1846     		mov	r0, r3
 2674 0faa FFF7FEFF 		bl	__aeabi_i2f
 2675 0fae 0346     		mov	r3, r0
 2676 0fb0 4FF08F41 		mov	r1, #1199570944
 2677 0fb4 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 74


 2678 0fb6 FFF7FEFF 		bl	__aeabi_fdiv
 2679 0fba 0346     		mov	r3, r0
 2680 0fbc 1A46     		mov	r2, r3
 2681 0fbe 07F13803 		add	r3, r7, #56
 2682 0fc2 1C3B     		subs	r3, r3, #28
 2683 0fc4 1A60     		str	r2, [r3]	@ float
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2684              		.loc 1 532 0
 2685 0fc6 0023     		movs	r3, #0
 2686 0fc8 07F5B052 		add	r2, r7, #5632
 2687 0fcc 02F11702 		add	r2, r2, #23
 2688 0fd0 1370     		strb	r3, [r2]
 2689 0fd2 2EE0     		b	.L141
 2690              	.L142:
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2691              		.loc 1 533 0 discriminator 3
 2692 0fd4 07F5B053 		add	r3, r7, #5632
 2693 0fd8 03F11503 		add	r3, r3, #21
 2694 0fdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2695 0fde 3222     		movs	r2, #50
 2696 0fe0 02FB03F3 		mul	r3, r2, r3
 2697 0fe4 1A1D     		adds	r2, r3, #4
 2698 0fe6 07F5B053 		add	r3, r7, #5632
 2699 0fea 03F11303 		add	r3, r3, #19
 2700 0fee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2701 0ff0 1A44     		add	r2, r2, r3
 2702 0ff2 07F5B053 		add	r3, r7, #5632
 2703 0ff6 03F11703 		add	r3, r3, #23
 2704 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2705 0ffc D31A     		subs	r3, r2, r3
 2706 0ffe 5A1E     		subs	r2, r3, #1
 2707 1000 07F5B053 		add	r3, r7, #5632
 2708 1004 03F11703 		add	r3, r3, #23
 2709 1008 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2710 100a 07F13803 		add	r3, r7, #56
 2711 100e 1C3B     		subs	r3, r3, #28
 2712 1010 0B44     		add	r3, r3, r1
 2713 1012 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2714 1014 07F15803 		add	r3, r7, #88
 2715 1018 043B     		subs	r3, r3, #4
 2716 101a 9954     		strb	r1, [r3, r2]
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2717              		.loc 1 532 0 discriminator 3
 2718 101c 07F5B053 		add	r3, r7, #5632
 2719 1020 03F11703 		add	r3, r3, #23
 2720 1024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2721 1026 0133     		adds	r3, r3, #1
 2722 1028 07F5B052 		add	r2, r7, #5632
 2723 102c 02F11702 		add	r2, r2, #23
 2724 1030 1370     		strb	r3, [r2]
 2725              	.L141:
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2726              		.loc 1 532 0 is_stmt 0 discriminator 1
 2727 1032 07F5B053 		add	r3, r7, #5632
 2728 1036 03F11703 		add	r3, r3, #23
 2729 103a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2730 103c 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 75


 2731 1040 03F11303 		add	r3, r3, #19
 2732 1044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2733 1046 9A42     		cmp	r2, r3
 2734 1048 C4D3     		bcc	.L142
 534:..\src/command_processing.c ****                             }
 535:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2735              		.loc 1 535 0 is_stmt 1
 2736 104a 07F5B053 		add	r3, r7, #5632
 2737 104e 03F10F03 		add	r3, r3, #15
 2738 1052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2739 1054 0E49     		ldr	r1, .L292
 2740 1056 1346     		mov	r3, r2
 2741 1058 DB00     		lsls	r3, r3, #3
 2742 105a 9B1A     		subs	r3, r3, r2
 2743 105c 1B01     		lsls	r3, r3, #4
 2744 105e 0B44     		add	r3, r3, r1
 2745 1060 C033     		adds	r3, r3, #192
 2746 1062 1B68     		ldr	r3, [r3]
 2747 1064 1846     		mov	r0, r3
 2748 1066 FFF7FEFF 		bl	__aeabi_i2f
 2749 106a 0346     		mov	r3, r0
 2750 106c 4FF08F41 		mov	r1, #1199570944
 2751 1070 1846     		mov	r0, r3
 2752 1072 FFF7FEFF 		bl	__aeabi_fdiv
 2753 1076 0346     		mov	r3, r0
 2754 1078 1A46     		mov	r2, r3
 2755 107a 07F13803 		add	r3, r7, #56
 2756 107e 1C3B     		subs	r3, r3, #28
 2757 1080 1A60     		str	r2, [r3]	@ float
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2758              		.loc 1 536 0
 2759 1082 0023     		movs	r3, #0
 2760 1084 07F5B052 		add	r2, r7, #5632
 2761 1088 02F11702 		add	r2, r2, #23
 2762 108c 1370     		strb	r3, [r2]
 2763 108e 36E0     		b	.L143
 2764              	.L293:
 2765              		.align	2
 2766              	.L292:
 2767 1090 00000000 		.word	c_mem
 2768              	.L144:
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2769              		.loc 1 537 0 discriminator 3
 2770 1094 07F5B053 		add	r3, r7, #5632
 2771 1098 03F11503 		add	r3, r3, #21
 2772 109c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2773 109e 3222     		movs	r2, #50
 2774 10a0 02FB03F3 		mul	r3, r2, r3
 2775 10a4 1A1D     		adds	r2, r3, #4
 2776 10a6 07F5B053 		add	r3, r7, #5632
 2777 10aa 03F11303 		add	r3, r3, #19
 2778 10ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2779 10b0 1A44     		add	r2, r2, r3
 2780 10b2 07F5B053 		add	r3, r7, #5632
 2781 10b6 03F11303 		add	r3, r3, #19
 2782 10ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2783 10bc 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 76


 2784 10be 07F5B053 		add	r3, r7, #5632
 2785 10c2 03F11703 		add	r3, r3, #23
 2786 10c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2787 10c8 D31A     		subs	r3, r2, r3
 2788 10ca 5A1E     		subs	r2, r3, #1
 2789 10cc 07F5B053 		add	r3, r7, #5632
 2790 10d0 03F11703 		add	r3, r3, #23
 2791 10d4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2792 10d6 07F13803 		add	r3, r7, #56
 2793 10da 1C3B     		subs	r3, r3, #28
 2794 10dc 0B44     		add	r3, r3, r1
 2795 10de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2796 10e0 07F15803 		add	r3, r7, #88
 2797 10e4 043B     		subs	r3, r3, #4
 2798 10e6 9954     		strb	r1, [r3, r2]
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2799              		.loc 1 536 0 discriminator 3
 2800 10e8 07F5B053 		add	r3, r7, #5632
 2801 10ec 03F11703 		add	r3, r3, #23
 2802 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2803 10f2 0133     		adds	r3, r3, #1
 2804 10f4 07F5B052 		add	r2, r7, #5632
 2805 10f8 02F11702 		add	r2, r2, #23
 2806 10fc 1370     		strb	r3, [r2]
 2807              	.L143:
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2808              		.loc 1 536 0 is_stmt 0 discriminator 1
 2809 10fe 07F5B053 		add	r3, r7, #5632
 2810 1102 03F11703 		add	r3, r3, #23
 2811 1106 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2812 1108 07F5B053 		add	r3, r7, #5632
 2813 110c 03F11303 		add	r3, r3, #19
 2814 1110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2815 1112 9A42     		cmp	r2, r3
 2816 1114 BED3     		bcc	.L144
 538:..\src/command_processing.c ****                             }
 539:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2817              		.loc 1 539 0 is_stmt 1
 2818 1116 07F5B053 		add	r3, r7, #5632
 2819 111a 03F10F03 		add	r3, r3, #15
 2820 111e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2821 1120 C849     		ldr	r1, .L294
 2822 1122 1346     		mov	r3, r2
 2823 1124 DB00     		lsls	r3, r3, #3
 2824 1126 9B1A     		subs	r3, r3, r2
 2825 1128 1B01     		lsls	r3, r3, #4
 2826 112a 0B44     		add	r3, r3, r1
 2827 112c C433     		adds	r3, r3, #196
 2828 112e 1B68     		ldr	r3, [r3]
 2829 1130 1846     		mov	r0, r3
 2830 1132 FFF7FEFF 		bl	__aeabi_i2f
 2831 1136 0346     		mov	r3, r0
 2832 1138 4FF08F41 		mov	r1, #1199570944
 2833 113c 1846     		mov	r0, r3
 2834 113e FFF7FEFF 		bl	__aeabi_fdiv
 2835 1142 0346     		mov	r3, r0
 2836 1144 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 77


 2837 1146 07F13803 		add	r3, r7, #56
 2838 114a 1C3B     		subs	r3, r3, #28
 2839 114c 1A60     		str	r2, [r3]	@ float
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2840              		.loc 1 540 0
 2841 114e 0023     		movs	r3, #0
 2842 1150 07F5B052 		add	r2, r7, #5632
 2843 1154 02F11702 		add	r2, r2, #23
 2844 1158 1370     		strb	r3, [r2]
 2845 115a 35E0     		b	.L145
 2846              	.L146:
 541:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2847              		.loc 1 541 0 discriminator 3
 2848 115c 07F5B053 		add	r3, r7, #5632
 2849 1160 03F11503 		add	r3, r3, #21
 2850 1164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2851 1166 3222     		movs	r2, #50
 2852 1168 02FB03F3 		mul	r3, r2, r3
 2853 116c 1A1D     		adds	r2, r3, #4
 2854 116e 07F5B053 		add	r3, r7, #5632
 2855 1172 03F11303 		add	r3, r3, #19
 2856 1176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2857 1178 5B00     		lsls	r3, r3, #1
 2858 117a 1A44     		add	r2, r2, r3
 2859 117c 07F5B053 		add	r3, r7, #5632
 2860 1180 03F11303 		add	r3, r3, #19
 2861 1184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2862 1186 1A44     		add	r2, r2, r3
 2863 1188 07F5B053 		add	r3, r7, #5632
 2864 118c 03F11703 		add	r3, r3, #23
 2865 1190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2866 1192 D31A     		subs	r3, r2, r3
 2867 1194 5A1E     		subs	r2, r3, #1
 2868 1196 07F5B053 		add	r3, r7, #5632
 2869 119a 03F11703 		add	r3, r3, #23
 2870 119e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2871 11a0 07F13803 		add	r3, r7, #56
 2872 11a4 1C3B     		subs	r3, r3, #28
 2873 11a6 0B44     		add	r3, r3, r1
 2874 11a8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2875 11aa 07F15803 		add	r3, r7, #88
 2876 11ae 043B     		subs	r3, r3, #4
 2877 11b0 9954     		strb	r1, [r3, r2]
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2878              		.loc 1 540 0 discriminator 3
 2879 11b2 07F5B053 		add	r3, r7, #5632
 2880 11b6 03F11703 		add	r3, r3, #23
 2881 11ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2882 11bc 0133     		adds	r3, r3, #1
 2883 11be 07F5B052 		add	r2, r7, #5632
 2884 11c2 02F11702 		add	r2, r2, #23
 2885 11c6 1370     		strb	r3, [r2]
 2886              	.L145:
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2887              		.loc 1 540 0 is_stmt 0 discriminator 1
 2888 11c8 07F5B053 		add	r3, r7, #5632
 2889 11cc 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 78


 2890 11d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2891 11d2 07F5B053 		add	r3, r7, #5632
 2892 11d6 03F11303 		add	r3, r3, #19
 2893 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2894 11dc 9A42     		cmp	r2, r3
 2895 11de BDD3     		bcc	.L146
 542:..\src/command_processing.c ****                             }
 543:..\src/command_processing.c ****                         }
 544:..\src/command_processing.c ****                         else {
 545:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 546:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 547:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 548:..\src/command_processing.c ****                             }
 549:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 550:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 551:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 552:..\src/command_processing.c ****                             }
 553:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 554:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 555:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 556:..\src/command_processing.c ****                             }
 557:..\src/command_processing.c ****                         }            
 558:..\src/command_processing.c ****                         break;  
 2896              		.loc 1 558 0 is_stmt 1
 2897 11e0 01F073B9 		b	.L114
 2898              	.L140:
 545:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2899              		.loc 1 545 0
 2900 11e4 07F5B053 		add	r3, r7, #5632
 2901 11e8 03F10F03 		add	r3, r3, #15
 2902 11ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2903 11ee 9549     		ldr	r1, .L294
 2904 11f0 1346     		mov	r3, r2
 2905 11f2 DB00     		lsls	r3, r3, #3
 2906 11f4 9B1A     		subs	r3, r3, r2
 2907 11f6 1B01     		lsls	r3, r3, #4
 2908 11f8 0B44     		add	r3, r3, r1
 2909 11fa D433     		adds	r3, r3, #212
 2910 11fc 1B68     		ldr	r3, [r3]
 2911 11fe 1846     		mov	r0, r3
 2912 1200 FFF7FEFF 		bl	__aeabi_i2f
 2913 1204 0346     		mov	r3, r0
 2914 1206 4FF08F41 		mov	r1, #1199570944
 2915 120a 1846     		mov	r0, r3
 2916 120c FFF7FEFF 		bl	__aeabi_fdiv
 2917 1210 0346     		mov	r3, r0
 2918 1212 1A46     		mov	r2, r3
 2919 1214 07F13803 		add	r3, r7, #56
 2920 1218 1C3B     		subs	r3, r3, #28
 2921 121a 1A60     		str	r2, [r3]	@ float
 546:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2922              		.loc 1 546 0
 2923 121c 0023     		movs	r3, #0
 2924 121e 07F5B052 		add	r2, r7, #5632
 2925 1222 02F11702 		add	r2, r2, #23
 2926 1226 1370     		strb	r3, [r2]
 2927 1228 2EE0     		b	.L148
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 79


 2928              	.L149:
 547:..\src/command_processing.c ****                             }
 2929              		.loc 1 547 0 discriminator 3
 2930 122a 07F5B053 		add	r3, r7, #5632
 2931 122e 03F11503 		add	r3, r3, #21
 2932 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2933 1234 3222     		movs	r2, #50
 2934 1236 02FB03F3 		mul	r3, r2, r3
 2935 123a 1A1D     		adds	r2, r3, #4
 2936 123c 07F5B053 		add	r3, r7, #5632
 2937 1240 03F11303 		add	r3, r3, #19
 2938 1244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2939 1246 1A44     		add	r2, r2, r3
 2940 1248 07F5B053 		add	r3, r7, #5632
 2941 124c 03F11703 		add	r3, r3, #23
 2942 1250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2943 1252 D31A     		subs	r3, r2, r3
 2944 1254 5A1E     		subs	r2, r3, #1
 2945 1256 07F5B053 		add	r3, r7, #5632
 2946 125a 03F11703 		add	r3, r3, #23
 2947 125e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2948 1260 07F13803 		add	r3, r7, #56
 2949 1264 1C3B     		subs	r3, r3, #28
 2950 1266 0B44     		add	r3, r3, r1
 2951 1268 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2952 126a 07F15803 		add	r3, r7, #88
 2953 126e 043B     		subs	r3, r3, #4
 2954 1270 9954     		strb	r1, [r3, r2]
 546:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2955              		.loc 1 546 0 discriminator 3
 2956 1272 07F5B053 		add	r3, r7, #5632
 2957 1276 03F11703 		add	r3, r3, #23
 2958 127a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2959 127c 0133     		adds	r3, r3, #1
 2960 127e 07F5B052 		add	r2, r7, #5632
 2961 1282 02F11702 		add	r2, r2, #23
 2962 1286 1370     		strb	r3, [r2]
 2963              	.L148:
 546:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2964              		.loc 1 546 0 is_stmt 0 discriminator 1
 2965 1288 07F5B053 		add	r3, r7, #5632
 2966 128c 03F11703 		add	r3, r3, #23
 2967 1290 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2968 1292 07F5B053 		add	r3, r7, #5632
 2969 1296 03F11303 		add	r3, r3, #19
 2970 129a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2971 129c 9A42     		cmp	r2, r3
 2972 129e C4D3     		bcc	.L149
 549:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2973              		.loc 1 549 0 is_stmt 1
 2974 12a0 07F5B053 		add	r3, r7, #5632
 2975 12a4 03F10F03 		add	r3, r3, #15
 2976 12a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2977 12aa 6649     		ldr	r1, .L294
 2978 12ac 1346     		mov	r3, r2
 2979 12ae DB00     		lsls	r3, r3, #3
 2980 12b0 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 80


 2981 12b2 1B01     		lsls	r3, r3, #4
 2982 12b4 0B44     		add	r3, r3, r1
 2983 12b6 D833     		adds	r3, r3, #216
 2984 12b8 1B68     		ldr	r3, [r3]
 2985 12ba 1846     		mov	r0, r3
 2986 12bc FFF7FEFF 		bl	__aeabi_i2f
 2987 12c0 0346     		mov	r3, r0
 2988 12c2 4FF08F41 		mov	r1, #1199570944
 2989 12c6 1846     		mov	r0, r3
 2990 12c8 FFF7FEFF 		bl	__aeabi_fdiv
 2991 12cc 0346     		mov	r3, r0
 2992 12ce 1A46     		mov	r2, r3
 2993 12d0 07F13803 		add	r3, r7, #56
 2994 12d4 1C3B     		subs	r3, r3, #28
 2995 12d6 1A60     		str	r2, [r3]	@ float
 550:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2996              		.loc 1 550 0
 2997 12d8 0023     		movs	r3, #0
 2998 12da 07F5B052 		add	r2, r7, #5632
 2999 12de 02F11702 		add	r2, r2, #23
 3000 12e2 1370     		strb	r3, [r2]
 3001 12e4 34E0     		b	.L150
 3002              	.L151:
 551:..\src/command_processing.c ****                             }
 3003              		.loc 1 551 0 discriminator 3
 3004 12e6 07F5B053 		add	r3, r7, #5632
 3005 12ea 03F11503 		add	r3, r3, #21
 3006 12ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3007 12f0 3222     		movs	r2, #50
 3008 12f2 02FB03F3 		mul	r3, r2, r3
 3009 12f6 1A1D     		adds	r2, r3, #4
 3010 12f8 07F5B053 		add	r3, r7, #5632
 3011 12fc 03F11303 		add	r3, r3, #19
 3012 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3013 1302 1A44     		add	r2, r2, r3
 3014 1304 07F5B053 		add	r3, r7, #5632
 3015 1308 03F11303 		add	r3, r3, #19
 3016 130c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3017 130e 1A44     		add	r2, r2, r3
 3018 1310 07F5B053 		add	r3, r7, #5632
 3019 1314 03F11703 		add	r3, r3, #23
 3020 1318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3021 131a D31A     		subs	r3, r2, r3
 3022 131c 5A1E     		subs	r2, r3, #1
 3023 131e 07F5B053 		add	r3, r7, #5632
 3024 1322 03F11703 		add	r3, r3, #23
 3025 1326 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3026 1328 07F13803 		add	r3, r7, #56
 3027 132c 1C3B     		subs	r3, r3, #28
 3028 132e 0B44     		add	r3, r3, r1
 3029 1330 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3030 1332 07F15803 		add	r3, r7, #88
 3031 1336 043B     		subs	r3, r3, #4
 3032 1338 9954     		strb	r1, [r3, r2]
 550:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3033              		.loc 1 550 0 discriminator 3
 3034 133a 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 81


 3035 133e 03F11703 		add	r3, r3, #23
 3036 1342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3037 1344 0133     		adds	r3, r3, #1
 3038 1346 07F5B052 		add	r2, r7, #5632
 3039 134a 02F11702 		add	r2, r2, #23
 3040 134e 1370     		strb	r3, [r2]
 3041              	.L150:
 550:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3042              		.loc 1 550 0 is_stmt 0 discriminator 1
 3043 1350 07F5B053 		add	r3, r7, #5632
 3044 1354 03F11703 		add	r3, r3, #23
 3045 1358 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3046 135a 07F5B053 		add	r3, r7, #5632
 3047 135e 03F11303 		add	r3, r3, #19
 3048 1362 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3049 1364 9A42     		cmp	r2, r3
 3050 1366 BED3     		bcc	.L151
 553:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3051              		.loc 1 553 0 is_stmt 1
 3052 1368 07F5B053 		add	r3, r7, #5632
 3053 136c 03F10F03 		add	r3, r3, #15
 3054 1370 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3055 1372 3449     		ldr	r1, .L294
 3056 1374 1346     		mov	r3, r2
 3057 1376 DB00     		lsls	r3, r3, #3
 3058 1378 9B1A     		subs	r3, r3, r2
 3059 137a 1B01     		lsls	r3, r3, #4
 3060 137c 0B44     		add	r3, r3, r1
 3061 137e DC33     		adds	r3, r3, #220
 3062 1380 1B68     		ldr	r3, [r3]
 3063 1382 1846     		mov	r0, r3
 3064 1384 FFF7FEFF 		bl	__aeabi_i2f
 3065 1388 0346     		mov	r3, r0
 3066 138a 4FF08F41 		mov	r1, #1199570944
 3067 138e 1846     		mov	r0, r3
 3068 1390 FFF7FEFF 		bl	__aeabi_fdiv
 3069 1394 0346     		mov	r3, r0
 3070 1396 1A46     		mov	r2, r3
 3071 1398 07F13803 		add	r3, r7, #56
 3072 139c 1C3B     		subs	r3, r3, #28
 3073 139e 1A60     		str	r2, [r3]	@ float
 554:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3074              		.loc 1 554 0
 3075 13a0 0023     		movs	r3, #0
 3076 13a2 07F5B052 		add	r2, r7, #5632
 3077 13a6 02F11702 		add	r2, r2, #23
 3078 13aa 1370     		strb	r3, [r2]
 3079 13ac 35E0     		b	.L152
 3080              	.L153:
 555:..\src/command_processing.c ****                             }
 3081              		.loc 1 555 0 discriminator 3
 3082 13ae 07F5B053 		add	r3, r7, #5632
 3083 13b2 03F11503 		add	r3, r3, #21
 3084 13b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3085 13b8 3222     		movs	r2, #50
 3086 13ba 02FB03F3 		mul	r3, r2, r3
 3087 13be 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 82


 3088 13c0 07F5B053 		add	r3, r7, #5632
 3089 13c4 03F11303 		add	r3, r3, #19
 3090 13c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3091 13ca 5B00     		lsls	r3, r3, #1
 3092 13cc 1A44     		add	r2, r2, r3
 3093 13ce 07F5B053 		add	r3, r7, #5632
 3094 13d2 03F11303 		add	r3, r3, #19
 3095 13d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3096 13d8 1A44     		add	r2, r2, r3
 3097 13da 07F5B053 		add	r3, r7, #5632
 3098 13de 03F11703 		add	r3, r3, #23
 3099 13e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3100 13e4 D31A     		subs	r3, r2, r3
 3101 13e6 5A1E     		subs	r2, r3, #1
 3102 13e8 07F5B053 		add	r3, r7, #5632
 3103 13ec 03F11703 		add	r3, r3, #23
 3104 13f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3105 13f2 07F13803 		add	r3, r7, #56
 3106 13f6 1C3B     		subs	r3, r3, #28
 3107 13f8 0B44     		add	r3, r3, r1
 3108 13fa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3109 13fc 07F15803 		add	r3, r7, #88
 3110 1400 043B     		subs	r3, r3, #4
 3111 1402 9954     		strb	r1, [r3, r2]
 554:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3112              		.loc 1 554 0 discriminator 3
 3113 1404 07F5B053 		add	r3, r7, #5632
 3114 1408 03F11703 		add	r3, r3, #23
 3115 140c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3116 140e 0133     		adds	r3, r3, #1
 3117 1410 07F5B052 		add	r2, r7, #5632
 3118 1414 02F11702 		add	r2, r2, #23
 3119 1418 1370     		strb	r3, [r2]
 3120              	.L152:
 554:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3121              		.loc 1 554 0 is_stmt 0 discriminator 1
 3122 141a 07F5B053 		add	r3, r7, #5632
 3123 141e 03F11703 		add	r3, r3, #23
 3124 1422 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3125 1424 07F5B053 		add	r3, r7, #5632
 3126 1428 03F11303 		add	r3, r3, #19
 3127 142c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3128 142e 9A42     		cmp	r2, r3
 3129 1430 BDD3     		bcc	.L153
 3130              		.loc 1 558 0 is_stmt 1
 3131 1432 01F04AB8 		b	.L114
 3132              	.L119:
 559:..\src/command_processing.c **** 
 560:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 561:..\src/command_processing.c ****                         for (i=0; i<NUM_ITEMS[idx]; i++){
 3133              		.loc 1 561 0
 3134 1436 0023     		movs	r3, #0
 3135 1438 07F5B052 		add	r2, r7, #5632
 3136 143c 02F11702 		add	r2, r2, #23
 3137 1440 1370     		strb	r3, [r2]
 3138 1442 9DE0     		b	.L154
 3139              	.L295:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 83


 3140              		.align	2
 3141              	.L294:
 3142 1444 00000000 		.word	c_mem
 3143              	.L157:
 562:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3144              		.loc 1 562 0
 3145 1448 07F5B053 		add	r3, r7, #5632
 3146 144c 03F10F03 		add	r3, r3, #15
 3147 1450 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3148 1452 C749     		ldr	r1, .L296
 3149 1454 1346     		mov	r3, r2
 3150 1456 DB00     		lsls	r3, r3, #3
 3151 1458 9B1A     		subs	r3, r3, r2
 3152 145a 1B01     		lsls	r3, r3, #4
 3153 145c 0B44     		add	r3, r3, r1
 3154 145e 03F58873 		add	r3, r3, #272
 3155 1462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3156 1464 1846     		mov	r0, r3
 3157 1466 07F5B053 		add	r3, r7, #5632
 3158 146a 03F11703 		add	r3, r3, #23
 3159 146e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3160 1470 C049     		ldr	r1, .L296+4
 3161 1472 0346     		mov	r3, r0
 3162 1474 5B00     		lsls	r3, r3, #1
 3163 1476 0344     		add	r3, r3, r0
 3164 1478 9B00     		lsls	r3, r3, #2
 3165 147a 1344     		add	r3, r3, r2
 3166 147c 6633     		adds	r3, r3, #102
 3167 147e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3168 1482 07F5B053 		add	r3, r7, #5632
 3169 1486 03F10F03 		add	r3, r3, #15
 3170 148a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3171 148c B848     		ldr	r0, .L296
 3172 148e 1346     		mov	r3, r2
 3173 1490 DB00     		lsls	r3, r3, #3
 3174 1492 9B1A     		subs	r3, r3, r2
 3175 1494 1B01     		lsls	r3, r3, #4
 3176 1496 0344     		add	r3, r3, r0
 3177 1498 03F58873 		add	r3, r3, #272
 3178 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3179 149e 1C46     		mov	r4, r3
 3180 14a0 07F5B053 		add	r3, r7, #5632
 3181 14a4 03F11703 		add	r3, r3, #23
 3182 14a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3183 14aa B248     		ldr	r0, .L296+4
 3184 14ac 2346     		mov	r3, r4
 3185 14ae 5B00     		lsls	r3, r3, #1
 3186 14b0 2344     		add	r3, r3, r4
 3187 14b2 1B01     		lsls	r3, r3, #4
 3188 14b4 0344     		add	r3, r3, r0
 3189 14b6 1344     		add	r3, r3, r2
 3190 14b8 03F29513 		addw	r3, r3, #405
 3191 14bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3192 14be 41FA03F3 		asr	r3, r1, r3
 3193 14c2 1AB2     		sxth	r2, r3
 3194 14c4 07F13803 		add	r3, r7, #56
 3195 14c8 1E3B     		subs	r3, r3, #30
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 84


 3196 14ca 1A80     		strh	r2, [r3]	@ movhi
 563:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3197              		.loc 1 563 0
 3198 14cc 0023     		movs	r3, #0
 3199 14ce 07F5B052 		add	r2, r7, #5632
 3200 14d2 02F11602 		add	r2, r2, #22
 3201 14d6 1370     		strb	r3, [r2]
 3202 14d8 3BE0     		b	.L155
 3203              	.L156:
 564:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 3204              		.loc 1 564 0 discriminator 3
 3205 14da 07F5B053 		add	r3, r7, #5632
 3206 14de 03F11503 		add	r3, r3, #21
 3207 14e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3208 14e4 3222     		movs	r2, #50
 3209 14e6 02FB03F3 		mul	r3, r2, r3
 3210 14ea 1A1D     		adds	r2, r3, #4
 3211 14ec 07F5B053 		add	r3, r7, #5632
 3212 14f0 03F11703 		add	r3, r3, #23
 3213 14f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3214 14f6 07F5B051 		add	r1, r7, #5632
 3215 14fa 01F11301 		add	r1, r1, #19
 3216 14fe 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3217 1500 01FB03F3 		mul	r3, r1, r3
 3218 1504 1A44     		add	r2, r2, r3
 3219 1506 07F5B053 		add	r3, r7, #5632
 3220 150a 03F11303 		add	r3, r3, #19
 3221 150e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3222 1510 1A44     		add	r2, r2, r3
 3223 1512 07F5B053 		add	r3, r7, #5632
 3224 1516 03F11603 		add	r3, r3, #22
 3225 151a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3226 151c D31A     		subs	r3, r2, r3
 3227 151e 5A1E     		subs	r2, r3, #1
 3228 1520 07F5B053 		add	r3, r7, #5632
 3229 1524 03F11603 		add	r3, r3, #22
 3230 1528 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3231 152a 07F13803 		add	r3, r7, #56
 3232 152e 1E3B     		subs	r3, r3, #30
 3233 1530 0B44     		add	r3, r3, r1
 3234 1532 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3235 1534 07F15803 		add	r3, r7, #88
 3236 1538 043B     		subs	r3, r3, #4
 3237 153a 9954     		strb	r1, [r3, r2]
 563:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3238              		.loc 1 563 0 discriminator 3
 3239 153c 07F5B053 		add	r3, r7, #5632
 3240 1540 03F11603 		add	r3, r3, #22
 3241 1544 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3242 1546 0133     		adds	r3, r3, #1
 3243 1548 07F5B052 		add	r2, r7, #5632
 3244 154c 02F11602 		add	r2, r2, #22
 3245 1550 1370     		strb	r3, [r2]
 3246              	.L155:
 563:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3247              		.loc 1 563 0 is_stmt 0 discriminator 1
 3248 1552 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 85


 3249 1556 03F11603 		add	r3, r3, #22
 3250 155a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3251 155c 07F5B053 		add	r3, r7, #5632
 3252 1560 03F11303 		add	r3, r3, #19
 3253 1564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3254 1566 9A42     		cmp	r2, r3
 3255 1568 B7D3     		bcc	.L156
 561:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3256              		.loc 1 561 0 is_stmt 1 discriminator 2
 3257 156a 07F5B053 		add	r3, r7, #5632
 3258 156e 03F11703 		add	r3, r3, #23
 3259 1572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3260 1574 0133     		adds	r3, r3, #1
 3261 1576 07F5B052 		add	r2, r7, #5632
 3262 157a 02F11702 		add	r2, r2, #23
 3263 157e 1370     		strb	r3, [r2]
 3264              	.L154:
 561:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3265              		.loc 1 561 0 is_stmt 0 discriminator 1
 3266 1580 07F5B053 		add	r3, r7, #5632
 3267 1584 03F11503 		add	r3, r3, #21
 3268 1588 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3269 158a 07F11803 		add	r3, r7, #24
 3270 158e 143B     		subs	r3, r3, #20
 3271 1590 1B68     		ldr	r3, [r3]
 3272 1592 1344     		add	r3, r3, r2
 3273 1594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3274 1596 07F5B052 		add	r2, r7, #5632
 3275 159a 02F11702 		add	r2, r2, #23
 3276 159e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3277 15a0 9A42     		cmp	r2, r3
 3278 15a2 FFF451AF 		bcc	.L157
 565:..\src/command_processing.c ****                             }
 566:..\src/command_processing.c ****                         }
 567:..\src/command_processing.c ****                         break;
 3279              		.loc 1 567 0 is_stmt 1
 3280 15a6 00F090BF 		b	.L114
 3281              	.L120:
 568:..\src/command_processing.c ****                 
 569:..\src/command_processing.c ****                     case 11:        //Position limits
 570:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3282              		.loc 1 570 0
 3283 15aa 07F5B053 		add	r3, r7, #5632
 3284 15ae 03F10F03 		add	r3, r3, #15
 3285 15b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3286 15b4 6F49     		ldr	r1, .L296+4
 3287 15b6 1346     		mov	r3, r2
 3288 15b8 DB00     		lsls	r3, r3, #3
 3289 15ba 9B1A     		subs	r3, r3, r2
 3290 15bc 1B01     		lsls	r3, r3, #4
 3291 15be 0B44     		add	r3, r3, r1
 3292 15c0 E433     		adds	r3, r3, #228
 3293 15c2 1968     		ldr	r1, [r3]
 3294 15c4 07F5B053 		add	r3, r7, #5632
 3295 15c8 03F10F03 		add	r3, r3, #15
 3296 15cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3297 15ce 6848     		ldr	r0, .L296
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 86


 3298 15d0 1346     		mov	r3, r2
 3299 15d2 DB00     		lsls	r3, r3, #3
 3300 15d4 9B1A     		subs	r3, r3, r2
 3301 15d6 1B01     		lsls	r3, r3, #4
 3302 15d8 0344     		add	r3, r3, r0
 3303 15da 03F58873 		add	r3, r3, #272
 3304 15de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3305 15e0 1846     		mov	r0, r3
 3306 15e2 644A     		ldr	r2, .L296+4
 3307 15e4 0346     		mov	r3, r0
 3308 15e6 5B00     		lsls	r3, r3, #1
 3309 15e8 0344     		add	r3, r3, r0
 3310 15ea 1B01     		lsls	r3, r3, #4
 3311 15ec 1344     		add	r3, r3, r2
 3312 15ee 03F29513 		addw	r3, r3, #405
 3313 15f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3314 15f4 41FA03F2 		asr	r2, r1, r3
 3315 15f8 07F11803 		add	r3, r7, #24
 3316 15fc 043B     		subs	r3, r3, #4
 3317 15fe 1A60     		str	r2, [r3]
 571:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3318              		.loc 1 571 0
 3319 1600 0023     		movs	r3, #0
 3320 1602 07F5B052 		add	r2, r7, #5632
 3321 1606 02F11602 		add	r2, r2, #22
 3322 160a 1370     		strb	r3, [r2]
 3323 160c 2EE0     		b	.L158
 3324              	.L159:
 572:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3325              		.loc 1 572 0 discriminator 3
 3326 160e 07F5B053 		add	r3, r7, #5632
 3327 1612 03F11503 		add	r3, r3, #21
 3328 1616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3329 1618 3222     		movs	r2, #50
 3330 161a 02FB03F3 		mul	r3, r2, r3
 3331 161e 1A1D     		adds	r2, r3, #4
 3332 1620 07F5B053 		add	r3, r7, #5632
 3333 1624 03F11303 		add	r3, r3, #19
 3334 1628 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3335 162a 1A44     		add	r2, r2, r3
 3336 162c 07F5B053 		add	r3, r7, #5632
 3337 1630 03F11603 		add	r3, r3, #22
 3338 1634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3339 1636 D31A     		subs	r3, r2, r3
 3340 1638 5A1E     		subs	r2, r3, #1
 3341 163a 07F5B053 		add	r3, r7, #5632
 3342 163e 03F11603 		add	r3, r3, #22
 3343 1642 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3344 1644 07F11803 		add	r3, r7, #24
 3345 1648 043B     		subs	r3, r3, #4
 3346 164a 0B44     		add	r3, r3, r1
 3347 164c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3348 164e 07F15803 		add	r3, r7, #88
 3349 1652 043B     		subs	r3, r3, #4
 3350 1654 9954     		strb	r1, [r3, r2]
 571:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3351              		.loc 1 571 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 87


 3352 1656 07F5B053 		add	r3, r7, #5632
 3353 165a 03F11603 		add	r3, r3, #22
 3354 165e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3355 1660 0133     		adds	r3, r3, #1
 3356 1662 07F5B052 		add	r2, r7, #5632
 3357 1666 02F11602 		add	r2, r2, #22
 3358 166a 1370     		strb	r3, [r2]
 3359              	.L158:
 571:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3360              		.loc 1 571 0 is_stmt 0 discriminator 1
 3361 166c 07F5B053 		add	r3, r7, #5632
 3362 1670 03F11603 		add	r3, r3, #22
 3363 1674 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3364 1676 07F5B053 		add	r3, r7, #5632
 3365 167a 03F11303 		add	r3, r3, #19
 3366 167e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3367 1680 9A42     		cmp	r2, r3
 3368 1682 C4D3     		bcc	.L159
 573:..\src/command_processing.c ****                         }
 574:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3369              		.loc 1 574 0 is_stmt 1
 3370 1684 07F5B053 		add	r3, r7, #5632
 3371 1688 03F10F03 		add	r3, r3, #15
 3372 168c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3373 168e 3949     		ldr	r1, .L296+4
 3374 1690 1346     		mov	r3, r2
 3375 1692 DB00     		lsls	r3, r3, #3
 3376 1694 9B1A     		subs	r3, r3, r2
 3377 1696 1B01     		lsls	r3, r3, #4
 3378 1698 0B44     		add	r3, r3, r1
 3379 169a E833     		adds	r3, r3, #232
 3380 169c 1968     		ldr	r1, [r3]
 3381 169e 07F5B053 		add	r3, r7, #5632
 3382 16a2 03F10F03 		add	r3, r3, #15
 3383 16a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3384 16a8 3148     		ldr	r0, .L296
 3385 16aa 1346     		mov	r3, r2
 3386 16ac DB00     		lsls	r3, r3, #3
 3387 16ae 9B1A     		subs	r3, r3, r2
 3388 16b0 1B01     		lsls	r3, r3, #4
 3389 16b2 0344     		add	r3, r3, r0
 3390 16b4 03F58873 		add	r3, r3, #272
 3391 16b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3392 16ba 1846     		mov	r0, r3
 3393 16bc 2D4A     		ldr	r2, .L296+4
 3394 16be 0346     		mov	r3, r0
 3395 16c0 5B00     		lsls	r3, r3, #1
 3396 16c2 0344     		add	r3, r3, r0
 3397 16c4 1B01     		lsls	r3, r3, #4
 3398 16c6 1344     		add	r3, r3, r2
 3399 16c8 03F29513 		addw	r3, r3, #405
 3400 16cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3401 16ce 41FA03F2 		asr	r2, r1, r3
 3402 16d2 07F11803 		add	r3, r7, #24
 3403 16d6 043B     		subs	r3, r3, #4
 3404 16d8 1A60     		str	r2, [r3]
 575:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 88


 3405              		.loc 1 575 0
 3406 16da 0023     		movs	r3, #0
 3407 16dc 07F5B052 		add	r2, r7, #5632
 3408 16e0 02F11602 		add	r2, r2, #22
 3409 16e4 1370     		strb	r3, [r2]
 3410 16e6 34E0     		b	.L160
 3411              	.L161:
 576:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3412              		.loc 1 576 0 discriminator 3
 3413 16e8 07F5B053 		add	r3, r7, #5632
 3414 16ec 03F11503 		add	r3, r3, #21
 3415 16f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3416 16f2 3222     		movs	r2, #50
 3417 16f4 02FB03F3 		mul	r3, r2, r3
 3418 16f8 1A1D     		adds	r2, r3, #4
 3419 16fa 07F5B053 		add	r3, r7, #5632
 3420 16fe 03F11303 		add	r3, r3, #19
 3421 1702 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3422 1704 1A44     		add	r2, r2, r3
 3423 1706 07F5B053 		add	r3, r7, #5632
 3424 170a 03F11303 		add	r3, r3, #19
 3425 170e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3426 1710 1A44     		add	r2, r2, r3
 3427 1712 07F5B053 		add	r3, r7, #5632
 3428 1716 03F11603 		add	r3, r3, #22
 3429 171a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3430 171c D31A     		subs	r3, r2, r3
 3431 171e 5A1E     		subs	r2, r3, #1
 3432 1720 07F5B053 		add	r3, r7, #5632
 3433 1724 03F11603 		add	r3, r3, #22
 3434 1728 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3435 172a 07F11803 		add	r3, r7, #24
 3436 172e 043B     		subs	r3, r3, #4
 3437 1730 0B44     		add	r3, r3, r1
 3438 1732 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3439 1734 07F15803 		add	r3, r7, #88
 3440 1738 043B     		subs	r3, r3, #4
 3441 173a 9954     		strb	r1, [r3, r2]
 575:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3442              		.loc 1 575 0 discriminator 3
 3443 173c 07F5B053 		add	r3, r7, #5632
 3444 1740 03F11603 		add	r3, r3, #22
 3445 1744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3446 1746 0133     		adds	r3, r3, #1
 3447 1748 07F5B052 		add	r2, r7, #5632
 3448 174c 02F11602 		add	r2, r2, #22
 3449 1750 1370     		strb	r3, [r2]
 3450              	.L160:
 575:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3451              		.loc 1 575 0 is_stmt 0 discriminator 1
 3452 1752 07F5B053 		add	r3, r7, #5632
 3453 1756 03F11603 		add	r3, r3, #22
 3454 175a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3455 175c 07F5B053 		add	r3, r7, #5632
 3456 1760 03F11303 		add	r3, r3, #19
 3457 1764 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3458 1766 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 89


 3459 1768 BED3     		bcc	.L161
 577:..\src/command_processing.c ****                         }
 578:..\src/command_processing.c ****                         break;            
 3460              		.loc 1 578 0 is_stmt 1
 3461 176a 00F0AEBE 		b	.L114
 3462              	.L297:
 3463 176e 00BF     		.align	2
 3464              	.L296:
 3465 1770 00000000 		.word	g_mem
 3466 1774 00000000 		.word	c_mem
 3467              	.L121:
 579:..\src/command_processing.c **** 
 580:..\src/command_processing.c ****                     case 23:        //Rest Position
 581:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3468              		.loc 1 581 0
 3469 1778 CF4B     		ldr	r3, .L298
 3470 177a D3F8A012 		ldr	r1, [r3, #672]
 3471 177e 07F5B053 		add	r3, r7, #5632
 3472 1782 03F10F03 		add	r3, r3, #15
 3473 1786 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3474 1788 CC48     		ldr	r0, .L298+4
 3475 178a 1346     		mov	r3, r2
 3476 178c DB00     		lsls	r3, r3, #3
 3477 178e 9B1A     		subs	r3, r3, r2
 3478 1790 1B01     		lsls	r3, r3, #4
 3479 1792 0344     		add	r3, r3, r0
 3480 1794 03F58873 		add	r3, r3, #272
 3481 1798 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3482 179a 1846     		mov	r0, r3
 3483 179c C64A     		ldr	r2, .L298
 3484 179e 0346     		mov	r3, r0
 3485 17a0 5B00     		lsls	r3, r3, #1
 3486 17a2 0344     		add	r3, r3, r0
 3487 17a4 1B01     		lsls	r3, r3, #4
 3488 17a6 1344     		add	r3, r3, r2
 3489 17a8 03F29513 		addw	r3, r3, #405
 3490 17ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3491 17ae 41FA03F2 		asr	r2, r1, r3
 3492 17b2 07F11803 		add	r3, r7, #24
 3493 17b6 043B     		subs	r3, r3, #4
 3494 17b8 1A60     		str	r2, [r3]
 582:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3495              		.loc 1 582 0
 3496 17ba 0023     		movs	r3, #0
 3497 17bc 07F5B052 		add	r2, r7, #5632
 3498 17c0 02F11602 		add	r2, r2, #22
 3499 17c4 1370     		strb	r3, [r2]
 3500 17c6 2EE0     		b	.L162
 3501              	.L163:
 583:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3502              		.loc 1 583 0 discriminator 3
 3503 17c8 07F5B053 		add	r3, r7, #5632
 3504 17cc 03F11503 		add	r3, r3, #21
 3505 17d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3506 17d2 3222     		movs	r2, #50
 3507 17d4 02FB03F3 		mul	r3, r2, r3
 3508 17d8 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 90


 3509 17da 07F5B053 		add	r3, r7, #5632
 3510 17de 03F11303 		add	r3, r3, #19
 3511 17e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3512 17e4 1A44     		add	r2, r2, r3
 3513 17e6 07F5B053 		add	r3, r7, #5632
 3514 17ea 03F11603 		add	r3, r3, #22
 3515 17ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3516 17f0 D31A     		subs	r3, r2, r3
 3517 17f2 5A1E     		subs	r2, r3, #1
 3518 17f4 07F5B053 		add	r3, r7, #5632
 3519 17f8 03F11603 		add	r3, r3, #22
 3520 17fc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3521 17fe 07F11803 		add	r3, r7, #24
 3522 1802 043B     		subs	r3, r3, #4
 3523 1804 0B44     		add	r3, r3, r1
 3524 1806 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3525 1808 07F15803 		add	r3, r7, #88
 3526 180c 043B     		subs	r3, r3, #4
 3527 180e 9954     		strb	r1, [r3, r2]
 582:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3528              		.loc 1 582 0 discriminator 3
 3529 1810 07F5B053 		add	r3, r7, #5632
 3530 1814 03F11603 		add	r3, r3, #22
 3531 1818 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3532 181a 0133     		adds	r3, r3, #1
 3533 181c 07F5B052 		add	r2, r7, #5632
 3534 1820 02F11602 		add	r2, r2, #22
 3535 1824 1370     		strb	r3, [r2]
 3536              	.L162:
 582:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3537              		.loc 1 582 0 is_stmt 0 discriminator 1
 3538 1826 07F5B053 		add	r3, r7, #5632
 3539 182a 03F11603 		add	r3, r3, #22
 3540 182e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3541 1830 07F5B053 		add	r3, r7, #5632
 3542 1834 03F11303 		add	r3, r3, #19
 3543 1838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3544 183a 9A42     		cmp	r2, r3
 3545 183c C4D3     		bcc	.L163
 584:..\src/command_processing.c ****                         }
 585:..\src/command_processing.c ****                         break; 
 3546              		.loc 1 585 0 is_stmt 1
 3547 183e 00F044BE 		b	.L114
 3548              	.L122:
 586:..\src/command_processing.c ****                         
 587:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 588:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3549              		.loc 1 588 0
 3550 1842 07F5B053 		add	r3, r7, #5632
 3551 1846 03F10E03 		add	r3, r3, #14
 3552 184a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3553 184c 9A49     		ldr	r1, .L298
 3554 184e 1346     		mov	r3, r2
 3555 1850 DB00     		lsls	r3, r3, #3
 3556 1852 9B1A     		subs	r3, r3, r2
 3557 1854 1B01     		lsls	r3, r3, #4
 3558 1856 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 91


 3559 1858 03F20F13 		addw	r3, r3, #271
 3560 185c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3561 185e 032B     		cmp	r3, #3
 3562 1860 00F02E81 		beq	.L164
 589:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3563              		.loc 1 589 0
 3564 1864 07F5B053 		add	r3, r7, #5632
 3565 1868 03F10E03 		add	r3, r3, #14
 3566 186c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3567 186e 9249     		ldr	r1, .L298
 3568 1870 1346     		mov	r3, r2
 3569 1872 DB00     		lsls	r3, r3, #3
 3570 1874 9B1A     		subs	r3, r3, r2
 3571 1876 1B01     		lsls	r3, r3, #4
 3572 1878 0B44     		add	r3, r3, r1
 3573 187a B033     		adds	r3, r3, #176
 3574 187c 1B68     		ldr	r3, [r3]
 3575 187e 1846     		mov	r0, r3
 3576 1880 FFF7FEFF 		bl	__aeabi_i2f
 3577 1884 0346     		mov	r3, r0
 3578 1886 4FF08F41 		mov	r1, #1199570944
 3579 188a 1846     		mov	r0, r3
 3580 188c FFF7FEFF 		bl	__aeabi_fdiv
 3581 1890 0346     		mov	r3, r0
 3582 1892 1A46     		mov	r2, r3
 3583 1894 07F13803 		add	r3, r7, #56
 3584 1898 1C3B     		subs	r3, r3, #28
 3585 189a 1A60     		str	r2, [r3]	@ float
 590:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3586              		.loc 1 590 0
 3587 189c 0023     		movs	r3, #0
 3588 189e 07F5B052 		add	r2, r7, #5632
 3589 18a2 02F11702 		add	r2, r2, #23
 3590 18a6 1370     		strb	r3, [r2]
 3591 18a8 2EE0     		b	.L165
 3592              	.L166:
 591:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3593              		.loc 1 591 0 discriminator 3
 3594 18aa 07F5B053 		add	r3, r7, #5632
 3595 18ae 03F11503 		add	r3, r3, #21
 3596 18b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3597 18b4 3222     		movs	r2, #50
 3598 18b6 02FB03F3 		mul	r3, r2, r3
 3599 18ba 1A1D     		adds	r2, r3, #4
 3600 18bc 07F5B053 		add	r3, r7, #5632
 3601 18c0 03F11303 		add	r3, r3, #19
 3602 18c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3603 18c6 1A44     		add	r2, r2, r3
 3604 18c8 07F5B053 		add	r3, r7, #5632
 3605 18cc 03F11703 		add	r3, r3, #23
 3606 18d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3607 18d2 D31A     		subs	r3, r2, r3
 3608 18d4 5A1E     		subs	r2, r3, #1
 3609 18d6 07F5B053 		add	r3, r7, #5632
 3610 18da 03F11703 		add	r3, r3, #23
 3611 18de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3612 18e0 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 92


 3613 18e4 1C3B     		subs	r3, r3, #28
 3614 18e6 0B44     		add	r3, r3, r1
 3615 18e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3616 18ea 07F15803 		add	r3, r7, #88
 3617 18ee 043B     		subs	r3, r3, #4
 3618 18f0 9954     		strb	r1, [r3, r2]
 590:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3619              		.loc 1 590 0 discriminator 3
 3620 18f2 07F5B053 		add	r3, r7, #5632
 3621 18f6 03F11703 		add	r3, r3, #23
 3622 18fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3623 18fc 0133     		adds	r3, r3, #1
 3624 18fe 07F5B052 		add	r2, r7, #5632
 3625 1902 02F11702 		add	r2, r2, #23
 3626 1906 1370     		strb	r3, [r2]
 3627              	.L165:
 590:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3628              		.loc 1 590 0 is_stmt 0 discriminator 1
 3629 1908 07F5B053 		add	r3, r7, #5632
 3630 190c 03F11703 		add	r3, r3, #23
 3631 1910 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3632 1912 07F5B053 		add	r3, r7, #5632
 3633 1916 03F11303 		add	r3, r3, #19
 3634 191a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3635 191c 9A42     		cmp	r2, r3
 3636 191e C4D3     		bcc	.L166
 592:..\src/command_processing.c ****                             }
 593:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3637              		.loc 1 593 0 is_stmt 1
 3638 1920 07F5B053 		add	r3, r7, #5632
 3639 1924 03F10E03 		add	r3, r3, #14
 3640 1928 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3641 192a 6349     		ldr	r1, .L298
 3642 192c 1346     		mov	r3, r2
 3643 192e DB00     		lsls	r3, r3, #3
 3644 1930 9B1A     		subs	r3, r3, r2
 3645 1932 1B01     		lsls	r3, r3, #4
 3646 1934 0B44     		add	r3, r3, r1
 3647 1936 B433     		adds	r3, r3, #180
 3648 1938 1B68     		ldr	r3, [r3]
 3649 193a 1846     		mov	r0, r3
 3650 193c FFF7FEFF 		bl	__aeabi_i2f
 3651 1940 0346     		mov	r3, r0
 3652 1942 4FF08F41 		mov	r1, #1199570944
 3653 1946 1846     		mov	r0, r3
 3654 1948 FFF7FEFF 		bl	__aeabi_fdiv
 3655 194c 0346     		mov	r3, r0
 3656 194e 1A46     		mov	r2, r3
 3657 1950 07F13803 		add	r3, r7, #56
 3658 1954 1C3B     		subs	r3, r3, #28
 3659 1956 1A60     		str	r2, [r3]	@ float
 594:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3660              		.loc 1 594 0
 3661 1958 0023     		movs	r3, #0
 3662 195a 07F5B052 		add	r2, r7, #5632
 3663 195e 02F11702 		add	r2, r2, #23
 3664 1962 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 93


 3665 1964 34E0     		b	.L167
 3666              	.L168:
 595:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3667              		.loc 1 595 0 discriminator 3
 3668 1966 07F5B053 		add	r3, r7, #5632
 3669 196a 03F11503 		add	r3, r3, #21
 3670 196e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3671 1970 3222     		movs	r2, #50
 3672 1972 02FB03F3 		mul	r3, r2, r3
 3673 1976 1A1D     		adds	r2, r3, #4
 3674 1978 07F5B053 		add	r3, r7, #5632
 3675 197c 03F11303 		add	r3, r3, #19
 3676 1980 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3677 1982 1A44     		add	r2, r2, r3
 3678 1984 07F5B053 		add	r3, r7, #5632
 3679 1988 03F11303 		add	r3, r3, #19
 3680 198c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3681 198e 1A44     		add	r2, r2, r3
 3682 1990 07F5B053 		add	r3, r7, #5632
 3683 1994 03F11703 		add	r3, r3, #23
 3684 1998 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3685 199a D31A     		subs	r3, r2, r3
 3686 199c 5A1E     		subs	r2, r3, #1
 3687 199e 07F5B053 		add	r3, r7, #5632
 3688 19a2 03F11703 		add	r3, r3, #23
 3689 19a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3690 19a8 07F13803 		add	r3, r7, #56
 3691 19ac 1C3B     		subs	r3, r3, #28
 3692 19ae 0B44     		add	r3, r3, r1
 3693 19b0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3694 19b2 07F15803 		add	r3, r7, #88
 3695 19b6 043B     		subs	r3, r3, #4
 3696 19b8 9954     		strb	r1, [r3, r2]
 594:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3697              		.loc 1 594 0 discriminator 3
 3698 19ba 07F5B053 		add	r3, r7, #5632
 3699 19be 03F11703 		add	r3, r3, #23
 3700 19c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3701 19c4 0133     		adds	r3, r3, #1
 3702 19c6 07F5B052 		add	r2, r7, #5632
 3703 19ca 02F11702 		add	r2, r2, #23
 3704 19ce 1370     		strb	r3, [r2]
 3705              	.L167:
 594:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3706              		.loc 1 594 0 is_stmt 0 discriminator 1
 3707 19d0 07F5B053 		add	r3, r7, #5632
 3708 19d4 03F11703 		add	r3, r3, #23
 3709 19d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3710 19da 07F5B053 		add	r3, r7, #5632
 3711 19de 03F11303 		add	r3, r3, #19
 3712 19e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3713 19e4 9A42     		cmp	r2, r3
 3714 19e6 BED3     		bcc	.L168
 596:..\src/command_processing.c ****                             }
 597:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3715              		.loc 1 597 0 is_stmt 1
 3716 19e8 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 94


 3717 19ec 03F10E03 		add	r3, r3, #14
 3718 19f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3719 19f2 3149     		ldr	r1, .L298
 3720 19f4 1346     		mov	r3, r2
 3721 19f6 DB00     		lsls	r3, r3, #3
 3722 19f8 9B1A     		subs	r3, r3, r2
 3723 19fa 1B01     		lsls	r3, r3, #4
 3724 19fc 0B44     		add	r3, r3, r1
 3725 19fe B833     		adds	r3, r3, #184
 3726 1a00 1B68     		ldr	r3, [r3]
 3727 1a02 1846     		mov	r0, r3
 3728 1a04 FFF7FEFF 		bl	__aeabi_i2f
 3729 1a08 0346     		mov	r3, r0
 3730 1a0a 4FF08F41 		mov	r1, #1199570944
 3731 1a0e 1846     		mov	r0, r3
 3732 1a10 FFF7FEFF 		bl	__aeabi_fdiv
 3733 1a14 0346     		mov	r3, r0
 3734 1a16 1A46     		mov	r2, r3
 3735 1a18 07F13803 		add	r3, r7, #56
 3736 1a1c 1C3B     		subs	r3, r3, #28
 3737 1a1e 1A60     		str	r2, [r3]	@ float
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3738              		.loc 1 598 0
 3739 1a20 0023     		movs	r3, #0
 3740 1a22 07F5B052 		add	r2, r7, #5632
 3741 1a26 02F11702 		add	r2, r2, #23
 3742 1a2a 1370     		strb	r3, [r2]
 3743 1a2c 35E0     		b	.L169
 3744              	.L170:
 599:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3745              		.loc 1 599 0 discriminator 3
 3746 1a2e 07F5B053 		add	r3, r7, #5632
 3747 1a32 03F11503 		add	r3, r3, #21
 3748 1a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3749 1a38 3222     		movs	r2, #50
 3750 1a3a 02FB03F3 		mul	r3, r2, r3
 3751 1a3e 1A1D     		adds	r2, r3, #4
 3752 1a40 07F5B053 		add	r3, r7, #5632
 3753 1a44 03F11303 		add	r3, r3, #19
 3754 1a48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3755 1a4a 5B00     		lsls	r3, r3, #1
 3756 1a4c 1A44     		add	r2, r2, r3
 3757 1a4e 07F5B053 		add	r3, r7, #5632
 3758 1a52 03F11303 		add	r3, r3, #19
 3759 1a56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3760 1a58 1A44     		add	r2, r2, r3
 3761 1a5a 07F5B053 		add	r3, r7, #5632
 3762 1a5e 03F11703 		add	r3, r3, #23
 3763 1a62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3764 1a64 D31A     		subs	r3, r2, r3
 3765 1a66 5A1E     		subs	r2, r3, #1
 3766 1a68 07F5B053 		add	r3, r7, #5632
 3767 1a6c 03F11703 		add	r3, r3, #23
 3768 1a70 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3769 1a72 07F13803 		add	r3, r7, #56
 3770 1a76 1C3B     		subs	r3, r3, #28
 3771 1a78 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 95


 3772 1a7a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3773 1a7c 07F15803 		add	r3, r7, #88
 3774 1a80 043B     		subs	r3, r3, #4
 3775 1a82 9954     		strb	r1, [r3, r2]
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3776              		.loc 1 598 0 discriminator 3
 3777 1a84 07F5B053 		add	r3, r7, #5632
 3778 1a88 03F11703 		add	r3, r3, #23
 3779 1a8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3780 1a8e 0133     		adds	r3, r3, #1
 3781 1a90 07F5B052 		add	r2, r7, #5632
 3782 1a94 02F11702 		add	r2, r2, #23
 3783 1a98 1370     		strb	r3, [r2]
 3784              	.L169:
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3785              		.loc 1 598 0 is_stmt 0 discriminator 1
 3786 1a9a 07F5B053 		add	r3, r7, #5632
 3787 1a9e 03F11703 		add	r3, r3, #23
 3788 1aa2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3789 1aa4 07F5B053 		add	r3, r7, #5632
 3790 1aa8 03F11303 		add	r3, r3, #19
 3791 1aac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3792 1aae 9A42     		cmp	r2, r3
 3793 1ab0 BDD3     		bcc	.L170
 600:..\src/command_processing.c ****                             } 
 601:..\src/command_processing.c ****                         }
 602:..\src/command_processing.c ****                         else {
 603:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 606:..\src/command_processing.c ****                             }
 607:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 608:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 609:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 610:..\src/command_processing.c ****                             }
 611:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 612:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 613:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 614:..\src/command_processing.c ****                             }
 615:..\src/command_processing.c ****                         }
 616:..\src/command_processing.c ****                         break;
 3794              		.loc 1 616 0 is_stmt 1
 3795 1ab2 00F00ABD 		b	.L114
 3796              	.L299:
 3797 1ab6 00BF     		.align	2
 3798              	.L298:
 3799 1ab8 00000000 		.word	c_mem
 3800 1abc 00000000 		.word	g_mem
 3801              	.L164:
 603:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3802              		.loc 1 603 0
 3803 1ac0 07F5B053 		add	r3, r7, #5632
 3804 1ac4 03F10E03 		add	r3, r3, #14
 3805 1ac8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3806 1aca AB49     		ldr	r1, .L300
 3807 1acc 1346     		mov	r3, r2
 3808 1ace DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 96


 3809 1ad0 9B1A     		subs	r3, r3, r2
 3810 1ad2 1B01     		lsls	r3, r3, #4
 3811 1ad4 0B44     		add	r3, r3, r1
 3812 1ad6 C833     		adds	r3, r3, #200
 3813 1ad8 1B68     		ldr	r3, [r3]
 3814 1ada 1846     		mov	r0, r3
 3815 1adc FFF7FEFF 		bl	__aeabi_i2f
 3816 1ae0 0346     		mov	r3, r0
 3817 1ae2 4FF08F41 		mov	r1, #1199570944
 3818 1ae6 1846     		mov	r0, r3
 3819 1ae8 FFF7FEFF 		bl	__aeabi_fdiv
 3820 1aec 0346     		mov	r3, r0
 3821 1aee 1A46     		mov	r2, r3
 3822 1af0 07F13803 		add	r3, r7, #56
 3823 1af4 1C3B     		subs	r3, r3, #28
 3824 1af6 1A60     		str	r2, [r3]	@ float
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3825              		.loc 1 604 0
 3826 1af8 0023     		movs	r3, #0
 3827 1afa 07F5B052 		add	r2, r7, #5632
 3828 1afe 02F11702 		add	r2, r2, #23
 3829 1b02 1370     		strb	r3, [r2]
 3830 1b04 2EE0     		b	.L172
 3831              	.L173:
 605:..\src/command_processing.c ****                             }
 3832              		.loc 1 605 0 discriminator 3
 3833 1b06 07F5B053 		add	r3, r7, #5632
 3834 1b0a 03F11503 		add	r3, r3, #21
 3835 1b0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3836 1b10 3222     		movs	r2, #50
 3837 1b12 02FB03F3 		mul	r3, r2, r3
 3838 1b16 1A1D     		adds	r2, r3, #4
 3839 1b18 07F5B053 		add	r3, r7, #5632
 3840 1b1c 03F11303 		add	r3, r3, #19
 3841 1b20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3842 1b22 1A44     		add	r2, r2, r3
 3843 1b24 07F5B053 		add	r3, r7, #5632
 3844 1b28 03F11703 		add	r3, r3, #23
 3845 1b2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3846 1b2e D31A     		subs	r3, r2, r3
 3847 1b30 5A1E     		subs	r2, r3, #1
 3848 1b32 07F5B053 		add	r3, r7, #5632
 3849 1b36 03F11703 		add	r3, r3, #23
 3850 1b3a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3851 1b3c 07F13803 		add	r3, r7, #56
 3852 1b40 1C3B     		subs	r3, r3, #28
 3853 1b42 0B44     		add	r3, r3, r1
 3854 1b44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3855 1b46 07F15803 		add	r3, r7, #88
 3856 1b4a 043B     		subs	r3, r3, #4
 3857 1b4c 9954     		strb	r1, [r3, r2]
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3858              		.loc 1 604 0 discriminator 3
 3859 1b4e 07F5B053 		add	r3, r7, #5632
 3860 1b52 03F11703 		add	r3, r3, #23
 3861 1b56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3862 1b58 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 97


 3863 1b5a 07F5B052 		add	r2, r7, #5632
 3864 1b5e 02F11702 		add	r2, r2, #23
 3865 1b62 1370     		strb	r3, [r2]
 3866              	.L172:
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3867              		.loc 1 604 0 is_stmt 0 discriminator 1
 3868 1b64 07F5B053 		add	r3, r7, #5632
 3869 1b68 03F11703 		add	r3, r3, #23
 3870 1b6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3871 1b6e 07F5B053 		add	r3, r7, #5632
 3872 1b72 03F11303 		add	r3, r3, #19
 3873 1b76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3874 1b78 9A42     		cmp	r2, r3
 3875 1b7a C4D3     		bcc	.L173
 607:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3876              		.loc 1 607 0 is_stmt 1
 3877 1b7c 07F5B053 		add	r3, r7, #5632
 3878 1b80 03F10E03 		add	r3, r3, #14
 3879 1b84 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3880 1b86 7C49     		ldr	r1, .L300
 3881 1b88 1346     		mov	r3, r2
 3882 1b8a DB00     		lsls	r3, r3, #3
 3883 1b8c 9B1A     		subs	r3, r3, r2
 3884 1b8e 1B01     		lsls	r3, r3, #4
 3885 1b90 0B44     		add	r3, r3, r1
 3886 1b92 CC33     		adds	r3, r3, #204
 3887 1b94 1B68     		ldr	r3, [r3]
 3888 1b96 1846     		mov	r0, r3
 3889 1b98 FFF7FEFF 		bl	__aeabi_i2f
 3890 1b9c 0346     		mov	r3, r0
 3891 1b9e 4FF08F41 		mov	r1, #1199570944
 3892 1ba2 1846     		mov	r0, r3
 3893 1ba4 FFF7FEFF 		bl	__aeabi_fdiv
 3894 1ba8 0346     		mov	r3, r0
 3895 1baa 1A46     		mov	r2, r3
 3896 1bac 07F13803 		add	r3, r7, #56
 3897 1bb0 1C3B     		subs	r3, r3, #28
 3898 1bb2 1A60     		str	r2, [r3]	@ float
 608:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3899              		.loc 1 608 0
 3900 1bb4 0023     		movs	r3, #0
 3901 1bb6 07F5B052 		add	r2, r7, #5632
 3902 1bba 02F11702 		add	r2, r2, #23
 3903 1bbe 1370     		strb	r3, [r2]
 3904 1bc0 34E0     		b	.L174
 3905              	.L175:
 609:..\src/command_processing.c ****                             }
 3906              		.loc 1 609 0 discriminator 3
 3907 1bc2 07F5B053 		add	r3, r7, #5632
 3908 1bc6 03F11503 		add	r3, r3, #21
 3909 1bca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3910 1bcc 3222     		movs	r2, #50
 3911 1bce 02FB03F3 		mul	r3, r2, r3
 3912 1bd2 1A1D     		adds	r2, r3, #4
 3913 1bd4 07F5B053 		add	r3, r7, #5632
 3914 1bd8 03F11303 		add	r3, r3, #19
 3915 1bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 98


 3916 1bde 1A44     		add	r2, r2, r3
 3917 1be0 07F5B053 		add	r3, r7, #5632
 3918 1be4 03F11303 		add	r3, r3, #19
 3919 1be8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3920 1bea 1A44     		add	r2, r2, r3
 3921 1bec 07F5B053 		add	r3, r7, #5632
 3922 1bf0 03F11703 		add	r3, r3, #23
 3923 1bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3924 1bf6 D31A     		subs	r3, r2, r3
 3925 1bf8 5A1E     		subs	r2, r3, #1
 3926 1bfa 07F5B053 		add	r3, r7, #5632
 3927 1bfe 03F11703 		add	r3, r3, #23
 3928 1c02 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3929 1c04 07F13803 		add	r3, r7, #56
 3930 1c08 1C3B     		subs	r3, r3, #28
 3931 1c0a 0B44     		add	r3, r3, r1
 3932 1c0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3933 1c0e 07F15803 		add	r3, r7, #88
 3934 1c12 043B     		subs	r3, r3, #4
 3935 1c14 9954     		strb	r1, [r3, r2]
 608:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3936              		.loc 1 608 0 discriminator 3
 3937 1c16 07F5B053 		add	r3, r7, #5632
 3938 1c1a 03F11703 		add	r3, r3, #23
 3939 1c1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3940 1c20 0133     		adds	r3, r3, #1
 3941 1c22 07F5B052 		add	r2, r7, #5632
 3942 1c26 02F11702 		add	r2, r2, #23
 3943 1c2a 1370     		strb	r3, [r2]
 3944              	.L174:
 608:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3945              		.loc 1 608 0 is_stmt 0 discriminator 1
 3946 1c2c 07F5B053 		add	r3, r7, #5632
 3947 1c30 03F11703 		add	r3, r3, #23
 3948 1c34 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3949 1c36 07F5B053 		add	r3, r7, #5632
 3950 1c3a 03F11303 		add	r3, r3, #19
 3951 1c3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3952 1c40 9A42     		cmp	r2, r3
 3953 1c42 BED3     		bcc	.L175
 611:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3954              		.loc 1 611 0 is_stmt 1
 3955 1c44 07F5B053 		add	r3, r7, #5632
 3956 1c48 03F10E03 		add	r3, r3, #14
 3957 1c4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3958 1c4e 4A49     		ldr	r1, .L300
 3959 1c50 1346     		mov	r3, r2
 3960 1c52 DB00     		lsls	r3, r3, #3
 3961 1c54 9B1A     		subs	r3, r3, r2
 3962 1c56 1B01     		lsls	r3, r3, #4
 3963 1c58 0B44     		add	r3, r3, r1
 3964 1c5a D033     		adds	r3, r3, #208
 3965 1c5c 1B68     		ldr	r3, [r3]
 3966 1c5e 1846     		mov	r0, r3
 3967 1c60 FFF7FEFF 		bl	__aeabi_i2f
 3968 1c64 0346     		mov	r3, r0
 3969 1c66 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 99


 3970 1c6a 1846     		mov	r0, r3
 3971 1c6c FFF7FEFF 		bl	__aeabi_fdiv
 3972 1c70 0346     		mov	r3, r0
 3973 1c72 1A46     		mov	r2, r3
 3974 1c74 07F13803 		add	r3, r7, #56
 3975 1c78 1C3B     		subs	r3, r3, #28
 3976 1c7a 1A60     		str	r2, [r3]	@ float
 612:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3977              		.loc 1 612 0
 3978 1c7c 0023     		movs	r3, #0
 3979 1c7e 07F5B052 		add	r2, r7, #5632
 3980 1c82 02F11702 		add	r2, r2, #23
 3981 1c86 1370     		strb	r3, [r2]
 3982 1c88 35E0     		b	.L176
 3983              	.L177:
 613:..\src/command_processing.c ****                             }
 3984              		.loc 1 613 0 discriminator 3
 3985 1c8a 07F5B053 		add	r3, r7, #5632
 3986 1c8e 03F11503 		add	r3, r3, #21
 3987 1c92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3988 1c94 3222     		movs	r2, #50
 3989 1c96 02FB03F3 		mul	r3, r2, r3
 3990 1c9a 1A1D     		adds	r2, r3, #4
 3991 1c9c 07F5B053 		add	r3, r7, #5632
 3992 1ca0 03F11303 		add	r3, r3, #19
 3993 1ca4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3994 1ca6 5B00     		lsls	r3, r3, #1
 3995 1ca8 1A44     		add	r2, r2, r3
 3996 1caa 07F5B053 		add	r3, r7, #5632
 3997 1cae 03F11303 		add	r3, r3, #19
 3998 1cb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3999 1cb4 1A44     		add	r2, r2, r3
 4000 1cb6 07F5B053 		add	r3, r7, #5632
 4001 1cba 03F11703 		add	r3, r3, #23
 4002 1cbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4003 1cc0 D31A     		subs	r3, r2, r3
 4004 1cc2 5A1E     		subs	r2, r3, #1
 4005 1cc4 07F5B053 		add	r3, r7, #5632
 4006 1cc8 03F11703 		add	r3, r3, #23
 4007 1ccc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4008 1cce 07F13803 		add	r3, r7, #56
 4009 1cd2 1C3B     		subs	r3, r3, #28
 4010 1cd4 0B44     		add	r3, r3, r1
 4011 1cd6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4012 1cd8 07F15803 		add	r3, r7, #88
 4013 1cdc 043B     		subs	r3, r3, #4
 4014 1cde 9954     		strb	r1, [r3, r2]
 612:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4015              		.loc 1 612 0 discriminator 3
 4016 1ce0 07F5B053 		add	r3, r7, #5632
 4017 1ce4 03F11703 		add	r3, r3, #23
 4018 1ce8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4019 1cea 0133     		adds	r3, r3, #1
 4020 1cec 07F5B052 		add	r2, r7, #5632
 4021 1cf0 02F11702 		add	r2, r2, #23
 4022 1cf4 1370     		strb	r3, [r2]
 4023              	.L176:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 100


 612:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4024              		.loc 1 612 0 is_stmt 0 discriminator 1
 4025 1cf6 07F5B053 		add	r3, r7, #5632
 4026 1cfa 03F11703 		add	r3, r3, #23
 4027 1cfe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4028 1d00 07F5B053 		add	r3, r7, #5632
 4029 1d04 03F11303 		add	r3, r3, #19
 4030 1d08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4031 1d0a 9A42     		cmp	r2, r3
 4032 1d0c BDD3     		bcc	.L177
 4033              		.loc 1 616 0 is_stmt 1
 4034 1d0e DCE3     		b	.L114
 4035              	.L123:
 617:..\src/command_processing.c ****                         
 618:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 619:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 4036              		.loc 1 619 0
 4037 1d10 07F5B053 		add	r3, r7, #5632
 4038 1d14 03F10E03 		add	r3, r3, #14
 4039 1d18 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4040 1d1a 1749     		ldr	r1, .L300
 4041 1d1c 1346     		mov	r3, r2
 4042 1d1e DB00     		lsls	r3, r3, #3
 4043 1d20 9B1A     		subs	r3, r3, r2
 4044 1d22 1B01     		lsls	r3, r3, #4
 4045 1d24 0B44     		add	r3, r3, r1
 4046 1d26 03F20F13 		addw	r3, r3, #271
 4047 1d2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4048 1d2c 032B     		cmp	r3, #3
 4049 1d2e 00F02A81 		beq	.L178
 620:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 4050              		.loc 1 620 0
 4051 1d32 07F5B053 		add	r3, r7, #5632
 4052 1d36 03F10E03 		add	r3, r3, #14
 4053 1d3a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4054 1d3c 0E49     		ldr	r1, .L300
 4055 1d3e 1346     		mov	r3, r2
 4056 1d40 DB00     		lsls	r3, r3, #3
 4057 1d42 9B1A     		subs	r3, r3, r2
 4058 1d44 1B01     		lsls	r3, r3, #4
 4059 1d46 0B44     		add	r3, r3, r1
 4060 1d48 BC33     		adds	r3, r3, #188
 4061 1d4a 1B68     		ldr	r3, [r3]
 4062 1d4c 1846     		mov	r0, r3
 4063 1d4e FFF7FEFF 		bl	__aeabi_i2f
 4064 1d52 0346     		mov	r3, r0
 4065 1d54 4FF08F41 		mov	r1, #1199570944
 4066 1d58 1846     		mov	r0, r3
 4067 1d5a FFF7FEFF 		bl	__aeabi_fdiv
 4068 1d5e 0346     		mov	r3, r0
 4069 1d60 1A46     		mov	r2, r3
 4070 1d62 07F13803 		add	r3, r7, #56
 4071 1d66 1C3B     		subs	r3, r3, #28
 4072 1d68 1A60     		str	r2, [r3]	@ float
 621:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4073              		.loc 1 621 0
 4074 1d6a 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 101


 4075 1d6c 07F5B052 		add	r2, r7, #5632
 4076 1d70 02F11702 		add	r2, r2, #23
 4077 1d74 1370     		strb	r3, [r2]
 4078 1d76 30E0     		b	.L179
 4079              	.L301:
 4080              		.align	2
 4081              	.L300:
 4082 1d78 00000000 		.word	c_mem
 4083              	.L180:
 622:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4084              		.loc 1 622 0 discriminator 3
 4085 1d7c 07F5B053 		add	r3, r7, #5632
 4086 1d80 03F11503 		add	r3, r3, #21
 4087 1d84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4088 1d86 3222     		movs	r2, #50
 4089 1d88 02FB03F3 		mul	r3, r2, r3
 4090 1d8c 1A1D     		adds	r2, r3, #4
 4091 1d8e 07F5B053 		add	r3, r7, #5632
 4092 1d92 03F11303 		add	r3, r3, #19
 4093 1d96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4094 1d98 1A44     		add	r2, r2, r3
 4095 1d9a 07F5B053 		add	r3, r7, #5632
 4096 1d9e 03F11703 		add	r3, r3, #23
 4097 1da2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4098 1da4 D31A     		subs	r3, r2, r3
 4099 1da6 5A1E     		subs	r2, r3, #1
 4100 1da8 07F5B053 		add	r3, r7, #5632
 4101 1dac 03F11703 		add	r3, r3, #23
 4102 1db0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4103 1db2 07F13803 		add	r3, r7, #56
 4104 1db6 1C3B     		subs	r3, r3, #28
 4105 1db8 0B44     		add	r3, r3, r1
 4106 1dba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4107 1dbc 07F15803 		add	r3, r7, #88
 4108 1dc0 043B     		subs	r3, r3, #4
 4109 1dc2 9954     		strb	r1, [r3, r2]
 621:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4110              		.loc 1 621 0 discriminator 3
 4111 1dc4 07F5B053 		add	r3, r7, #5632
 4112 1dc8 03F11703 		add	r3, r3, #23
 4113 1dcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4114 1dce 0133     		adds	r3, r3, #1
 4115 1dd0 07F5B052 		add	r2, r7, #5632
 4116 1dd4 02F11702 		add	r2, r2, #23
 4117 1dd8 1370     		strb	r3, [r2]
 4118              	.L179:
 621:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4119              		.loc 1 621 0 is_stmt 0 discriminator 1
 4120 1dda 07F5B053 		add	r3, r7, #5632
 4121 1dde 03F11703 		add	r3, r3, #23
 4122 1de2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4123 1de4 07F5B053 		add	r3, r7, #5632
 4124 1de8 03F11303 		add	r3, r3, #19
 4125 1dec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4126 1dee 9A42     		cmp	r2, r3
 4127 1df0 C4D3     		bcc	.L180
 623:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 102


 624:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 4128              		.loc 1 624 0 is_stmt 1
 4129 1df2 07F5B053 		add	r3, r7, #5632
 4130 1df6 03F10E03 		add	r3, r3, #14
 4131 1dfa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4132 1dfc A249     		ldr	r1, .L302
 4133 1dfe 1346     		mov	r3, r2
 4134 1e00 DB00     		lsls	r3, r3, #3
 4135 1e02 9B1A     		subs	r3, r3, r2
 4136 1e04 1B01     		lsls	r3, r3, #4
 4137 1e06 0B44     		add	r3, r3, r1
 4138 1e08 C033     		adds	r3, r3, #192
 4139 1e0a 1B68     		ldr	r3, [r3]
 4140 1e0c 1846     		mov	r0, r3
 4141 1e0e FFF7FEFF 		bl	__aeabi_i2f
 4142 1e12 0346     		mov	r3, r0
 4143 1e14 4FF08F41 		mov	r1, #1199570944
 4144 1e18 1846     		mov	r0, r3
 4145 1e1a FFF7FEFF 		bl	__aeabi_fdiv
 4146 1e1e 0346     		mov	r3, r0
 4147 1e20 1A46     		mov	r2, r3
 4148 1e22 07F13803 		add	r3, r7, #56
 4149 1e26 1C3B     		subs	r3, r3, #28
 4150 1e28 1A60     		str	r2, [r3]	@ float
 625:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4151              		.loc 1 625 0
 4152 1e2a 0023     		movs	r3, #0
 4153 1e2c 07F5B052 		add	r2, r7, #5632
 4154 1e30 02F11702 		add	r2, r2, #23
 4155 1e34 1370     		strb	r3, [r2]
 4156 1e36 34E0     		b	.L181
 4157              	.L182:
 626:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4158              		.loc 1 626 0 discriminator 3
 4159 1e38 07F5B053 		add	r3, r7, #5632
 4160 1e3c 03F11503 		add	r3, r3, #21
 4161 1e40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4162 1e42 3222     		movs	r2, #50
 4163 1e44 02FB03F3 		mul	r3, r2, r3
 4164 1e48 1A1D     		adds	r2, r3, #4
 4165 1e4a 07F5B053 		add	r3, r7, #5632
 4166 1e4e 03F11303 		add	r3, r3, #19
 4167 1e52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4168 1e54 1A44     		add	r2, r2, r3
 4169 1e56 07F5B053 		add	r3, r7, #5632
 4170 1e5a 03F11303 		add	r3, r3, #19
 4171 1e5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4172 1e60 1A44     		add	r2, r2, r3
 4173 1e62 07F5B053 		add	r3, r7, #5632
 4174 1e66 03F11703 		add	r3, r3, #23
 4175 1e6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4176 1e6c D31A     		subs	r3, r2, r3
 4177 1e6e 5A1E     		subs	r2, r3, #1
 4178 1e70 07F5B053 		add	r3, r7, #5632
 4179 1e74 03F11703 		add	r3, r3, #23
 4180 1e78 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4181 1e7a 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 103


 4182 1e7e 1C3B     		subs	r3, r3, #28
 4183 1e80 0B44     		add	r3, r3, r1
 4184 1e82 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4185 1e84 07F15803 		add	r3, r7, #88
 4186 1e88 043B     		subs	r3, r3, #4
 4187 1e8a 9954     		strb	r1, [r3, r2]
 625:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4188              		.loc 1 625 0 discriminator 3
 4189 1e8c 07F5B053 		add	r3, r7, #5632
 4190 1e90 03F11703 		add	r3, r3, #23
 4191 1e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4192 1e96 0133     		adds	r3, r3, #1
 4193 1e98 07F5B052 		add	r2, r7, #5632
 4194 1e9c 02F11702 		add	r2, r2, #23
 4195 1ea0 1370     		strb	r3, [r2]
 4196              	.L181:
 625:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4197              		.loc 1 625 0 is_stmt 0 discriminator 1
 4198 1ea2 07F5B053 		add	r3, r7, #5632
 4199 1ea6 03F11703 		add	r3, r3, #23
 4200 1eaa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4201 1eac 07F5B053 		add	r3, r7, #5632
 4202 1eb0 03F11303 		add	r3, r3, #19
 4203 1eb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4204 1eb6 9A42     		cmp	r2, r3
 4205 1eb8 BED3     		bcc	.L182
 627:..\src/command_processing.c ****                             }
 628:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 4206              		.loc 1 628 0 is_stmt 1
 4207 1eba 07F5B053 		add	r3, r7, #5632
 4208 1ebe 03F10E03 		add	r3, r3, #14
 4209 1ec2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4210 1ec4 7049     		ldr	r1, .L302
 4211 1ec6 1346     		mov	r3, r2
 4212 1ec8 DB00     		lsls	r3, r3, #3
 4213 1eca 9B1A     		subs	r3, r3, r2
 4214 1ecc 1B01     		lsls	r3, r3, #4
 4215 1ece 0B44     		add	r3, r3, r1
 4216 1ed0 C433     		adds	r3, r3, #196
 4217 1ed2 1B68     		ldr	r3, [r3]
 4218 1ed4 1846     		mov	r0, r3
 4219 1ed6 FFF7FEFF 		bl	__aeabi_i2f
 4220 1eda 0346     		mov	r3, r0
 4221 1edc 4FF08F41 		mov	r1, #1199570944
 4222 1ee0 1846     		mov	r0, r3
 4223 1ee2 FFF7FEFF 		bl	__aeabi_fdiv
 4224 1ee6 0346     		mov	r3, r0
 4225 1ee8 1A46     		mov	r2, r3
 4226 1eea 07F13803 		add	r3, r7, #56
 4227 1eee 1C3B     		subs	r3, r3, #28
 4228 1ef0 1A60     		str	r2, [r3]	@ float
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4229              		.loc 1 629 0
 4230 1ef2 0023     		movs	r3, #0
 4231 1ef4 07F5B052 		add	r2, r7, #5632
 4232 1ef8 02F11702 		add	r2, r2, #23
 4233 1efc 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 104


 4234 1efe 35E0     		b	.L183
 4235              	.L184:
 630:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4236              		.loc 1 630 0 discriminator 3
 4237 1f00 07F5B053 		add	r3, r7, #5632
 4238 1f04 03F11503 		add	r3, r3, #21
 4239 1f08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4240 1f0a 3222     		movs	r2, #50
 4241 1f0c 02FB03F3 		mul	r3, r2, r3
 4242 1f10 1A1D     		adds	r2, r3, #4
 4243 1f12 07F5B053 		add	r3, r7, #5632
 4244 1f16 03F11303 		add	r3, r3, #19
 4245 1f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4246 1f1c 5B00     		lsls	r3, r3, #1
 4247 1f1e 1A44     		add	r2, r2, r3
 4248 1f20 07F5B053 		add	r3, r7, #5632
 4249 1f24 03F11303 		add	r3, r3, #19
 4250 1f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4251 1f2a 1A44     		add	r2, r2, r3
 4252 1f2c 07F5B053 		add	r3, r7, #5632
 4253 1f30 03F11703 		add	r3, r3, #23
 4254 1f34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4255 1f36 D31A     		subs	r3, r2, r3
 4256 1f38 5A1E     		subs	r2, r3, #1
 4257 1f3a 07F5B053 		add	r3, r7, #5632
 4258 1f3e 03F11703 		add	r3, r3, #23
 4259 1f42 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4260 1f44 07F13803 		add	r3, r7, #56
 4261 1f48 1C3B     		subs	r3, r3, #28
 4262 1f4a 0B44     		add	r3, r3, r1
 4263 1f4c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4264 1f4e 07F15803 		add	r3, r7, #88
 4265 1f52 043B     		subs	r3, r3, #4
 4266 1f54 9954     		strb	r1, [r3, r2]
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4267              		.loc 1 629 0 discriminator 3
 4268 1f56 07F5B053 		add	r3, r7, #5632
 4269 1f5a 03F11703 		add	r3, r3, #23
 4270 1f5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4271 1f60 0133     		adds	r3, r3, #1
 4272 1f62 07F5B052 		add	r2, r7, #5632
 4273 1f66 02F11702 		add	r2, r2, #23
 4274 1f6a 1370     		strb	r3, [r2]
 4275              	.L183:
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4276              		.loc 1 629 0 is_stmt 0 discriminator 1
 4277 1f6c 07F5B053 		add	r3, r7, #5632
 4278 1f70 03F11703 		add	r3, r3, #23
 4279 1f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4280 1f76 07F5B053 		add	r3, r7, #5632
 4281 1f7a 03F11303 		add	r3, r3, #19
 4282 1f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4283 1f80 9A42     		cmp	r2, r3
 4284 1f82 BDD3     		bcc	.L184
 631:..\src/command_processing.c ****                             }
 632:..\src/command_processing.c ****                         }
 633:..\src/command_processing.c ****                         else {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 105


 634:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 635:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 636:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 637:..\src/command_processing.c ****                             }
 638:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 639:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 640:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 641:..\src/command_processing.c ****                             }
 642:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 643:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 644:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 645:..\src/command_processing.c ****                             }
 646:..\src/command_processing.c ****                         }            
 647:..\src/command_processing.c ****                         break;  
 4285              		.loc 1 647 0 is_stmt 1
 4286 1f84 A1E2     		b	.L114
 4287              	.L178:
 634:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4288              		.loc 1 634 0
 4289 1f86 07F5B053 		add	r3, r7, #5632
 4290 1f8a 03F10E03 		add	r3, r3, #14
 4291 1f8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4292 1f90 3D49     		ldr	r1, .L302
 4293 1f92 1346     		mov	r3, r2
 4294 1f94 DB00     		lsls	r3, r3, #3
 4295 1f96 9B1A     		subs	r3, r3, r2
 4296 1f98 1B01     		lsls	r3, r3, #4
 4297 1f9a 0B44     		add	r3, r3, r1
 4298 1f9c D433     		adds	r3, r3, #212
 4299 1f9e 1B68     		ldr	r3, [r3]
 4300 1fa0 1846     		mov	r0, r3
 4301 1fa2 FFF7FEFF 		bl	__aeabi_i2f
 4302 1fa6 0346     		mov	r3, r0
 4303 1fa8 4FF08F41 		mov	r1, #1199570944
 4304 1fac 1846     		mov	r0, r3
 4305 1fae FFF7FEFF 		bl	__aeabi_fdiv
 4306 1fb2 0346     		mov	r3, r0
 4307 1fb4 1A46     		mov	r2, r3
 4308 1fb6 07F13803 		add	r3, r7, #56
 4309 1fba 1C3B     		subs	r3, r3, #28
 4310 1fbc 1A60     		str	r2, [r3]	@ float
 635:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4311              		.loc 1 635 0
 4312 1fbe 0023     		movs	r3, #0
 4313 1fc0 07F5B052 		add	r2, r7, #5632
 4314 1fc4 02F11702 		add	r2, r2, #23
 4315 1fc8 1370     		strb	r3, [r2]
 4316 1fca 2EE0     		b	.L186
 4317              	.L187:
 636:..\src/command_processing.c ****                             }
 4318              		.loc 1 636 0 discriminator 3
 4319 1fcc 07F5B053 		add	r3, r7, #5632
 4320 1fd0 03F11503 		add	r3, r3, #21
 4321 1fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4322 1fd6 3222     		movs	r2, #50
 4323 1fd8 02FB03F3 		mul	r3, r2, r3
 4324 1fdc 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 106


 4325 1fde 07F5B053 		add	r3, r7, #5632
 4326 1fe2 03F11303 		add	r3, r3, #19
 4327 1fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4328 1fe8 1A44     		add	r2, r2, r3
 4329 1fea 07F5B053 		add	r3, r7, #5632
 4330 1fee 03F11703 		add	r3, r3, #23
 4331 1ff2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4332 1ff4 D31A     		subs	r3, r2, r3
 4333 1ff6 5A1E     		subs	r2, r3, #1
 4334 1ff8 07F5B053 		add	r3, r7, #5632
 4335 1ffc 03F11703 		add	r3, r3, #23
 4336 2000 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4337 2002 07F13803 		add	r3, r7, #56
 4338 2006 1C3B     		subs	r3, r3, #28
 4339 2008 0B44     		add	r3, r3, r1
 4340 200a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4341 200c 07F15803 		add	r3, r7, #88
 4342 2010 043B     		subs	r3, r3, #4
 4343 2012 9954     		strb	r1, [r3, r2]
 635:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4344              		.loc 1 635 0 discriminator 3
 4345 2014 07F5B053 		add	r3, r7, #5632
 4346 2018 03F11703 		add	r3, r3, #23
 4347 201c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4348 201e 0133     		adds	r3, r3, #1
 4349 2020 07F5B052 		add	r2, r7, #5632
 4350 2024 02F11702 		add	r2, r2, #23
 4351 2028 1370     		strb	r3, [r2]
 4352              	.L186:
 635:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4353              		.loc 1 635 0 is_stmt 0 discriminator 1
 4354 202a 07F5B053 		add	r3, r7, #5632
 4355 202e 03F11703 		add	r3, r3, #23
 4356 2032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4357 2034 07F5B053 		add	r3, r7, #5632
 4358 2038 03F11303 		add	r3, r3, #19
 4359 203c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4360 203e 9A42     		cmp	r2, r3
 4361 2040 C4D3     		bcc	.L187
 638:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4362              		.loc 1 638 0 is_stmt 1
 4363 2042 07F5B053 		add	r3, r7, #5632
 4364 2046 03F10E03 		add	r3, r3, #14
 4365 204a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4366 204c 0E49     		ldr	r1, .L302
 4367 204e 1346     		mov	r3, r2
 4368 2050 DB00     		lsls	r3, r3, #3
 4369 2052 9B1A     		subs	r3, r3, r2
 4370 2054 1B01     		lsls	r3, r3, #4
 4371 2056 0B44     		add	r3, r3, r1
 4372 2058 D833     		adds	r3, r3, #216
 4373 205a 1B68     		ldr	r3, [r3]
 4374 205c 1846     		mov	r0, r3
 4375 205e FFF7FEFF 		bl	__aeabi_i2f
 4376 2062 0346     		mov	r3, r0
 4377 2064 4FF08F41 		mov	r1, #1199570944
 4378 2068 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 107


 4379 206a FFF7FEFF 		bl	__aeabi_fdiv
 4380 206e 0346     		mov	r3, r0
 4381 2070 1A46     		mov	r2, r3
 4382 2072 07F13803 		add	r3, r7, #56
 4383 2076 1C3B     		subs	r3, r3, #28
 4384 2078 1A60     		str	r2, [r3]	@ float
 639:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4385              		.loc 1 639 0
 4386 207a 0023     		movs	r3, #0
 4387 207c 07F5B052 		add	r2, r7, #5632
 4388 2080 02F11702 		add	r2, r2, #23
 4389 2084 1370     		strb	r3, [r2]
 4390 2086 36E0     		b	.L188
 4391              	.L303:
 4392              		.align	2
 4393              	.L302:
 4394 2088 00000000 		.word	c_mem
 4395              	.L189:
 640:..\src/command_processing.c ****                             }
 4396              		.loc 1 640 0 discriminator 3
 4397 208c 07F5B053 		add	r3, r7, #5632
 4398 2090 03F11503 		add	r3, r3, #21
 4399 2094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4400 2096 3222     		movs	r2, #50
 4401 2098 02FB03F3 		mul	r3, r2, r3
 4402 209c 1A1D     		adds	r2, r3, #4
 4403 209e 07F5B053 		add	r3, r7, #5632
 4404 20a2 03F11303 		add	r3, r3, #19
 4405 20a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4406 20a8 1A44     		add	r2, r2, r3
 4407 20aa 07F5B053 		add	r3, r7, #5632
 4408 20ae 03F11303 		add	r3, r3, #19
 4409 20b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4410 20b4 1A44     		add	r2, r2, r3
 4411 20b6 07F5B053 		add	r3, r7, #5632
 4412 20ba 03F11703 		add	r3, r3, #23
 4413 20be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4414 20c0 D31A     		subs	r3, r2, r3
 4415 20c2 5A1E     		subs	r2, r3, #1
 4416 20c4 07F5B053 		add	r3, r7, #5632
 4417 20c8 03F11703 		add	r3, r3, #23
 4418 20cc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4419 20ce 07F13803 		add	r3, r7, #56
 4420 20d2 1C3B     		subs	r3, r3, #28
 4421 20d4 0B44     		add	r3, r3, r1
 4422 20d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4423 20d8 07F15803 		add	r3, r7, #88
 4424 20dc 043B     		subs	r3, r3, #4
 4425 20de 9954     		strb	r1, [r3, r2]
 639:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4426              		.loc 1 639 0 discriminator 3
 4427 20e0 07F5B053 		add	r3, r7, #5632
 4428 20e4 03F11703 		add	r3, r3, #23
 4429 20e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4430 20ea 0133     		adds	r3, r3, #1
 4431 20ec 07F5B052 		add	r2, r7, #5632
 4432 20f0 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 108


 4433 20f4 1370     		strb	r3, [r2]
 4434              	.L188:
 639:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4435              		.loc 1 639 0 is_stmt 0 discriminator 1
 4436 20f6 07F5B053 		add	r3, r7, #5632
 4437 20fa 03F11703 		add	r3, r3, #23
 4438 20fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4439 2100 07F5B053 		add	r3, r7, #5632
 4440 2104 03F11303 		add	r3, r3, #19
 4441 2108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4442 210a 9A42     		cmp	r2, r3
 4443 210c BED3     		bcc	.L189
 642:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4444              		.loc 1 642 0 is_stmt 1
 4445 210e 07F5B053 		add	r3, r7, #5632
 4446 2112 03F10E03 		add	r3, r3, #14
 4447 2116 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4448 2118 C849     		ldr	r1, .L304
 4449 211a 1346     		mov	r3, r2
 4450 211c DB00     		lsls	r3, r3, #3
 4451 211e 9B1A     		subs	r3, r3, r2
 4452 2120 1B01     		lsls	r3, r3, #4
 4453 2122 0B44     		add	r3, r3, r1
 4454 2124 DC33     		adds	r3, r3, #220
 4455 2126 1B68     		ldr	r3, [r3]
 4456 2128 1846     		mov	r0, r3
 4457 212a FFF7FEFF 		bl	__aeabi_i2f
 4458 212e 0346     		mov	r3, r0
 4459 2130 4FF08F41 		mov	r1, #1199570944
 4460 2134 1846     		mov	r0, r3
 4461 2136 FFF7FEFF 		bl	__aeabi_fdiv
 4462 213a 0346     		mov	r3, r0
 4463 213c 1A46     		mov	r2, r3
 4464 213e 07F13803 		add	r3, r7, #56
 4465 2142 1C3B     		subs	r3, r3, #28
 4466 2144 1A60     		str	r2, [r3]	@ float
 643:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4467              		.loc 1 643 0
 4468 2146 0023     		movs	r3, #0
 4469 2148 07F5B052 		add	r2, r7, #5632
 4470 214c 02F11702 		add	r2, r2, #23
 4471 2150 1370     		strb	r3, [r2]
 4472 2152 35E0     		b	.L190
 4473              	.L191:
 644:..\src/command_processing.c ****                             }
 4474              		.loc 1 644 0 discriminator 3
 4475 2154 07F5B053 		add	r3, r7, #5632
 4476 2158 03F11503 		add	r3, r3, #21
 4477 215c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4478 215e 3222     		movs	r2, #50
 4479 2160 02FB03F3 		mul	r3, r2, r3
 4480 2164 1A1D     		adds	r2, r3, #4
 4481 2166 07F5B053 		add	r3, r7, #5632
 4482 216a 03F11303 		add	r3, r3, #19
 4483 216e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4484 2170 5B00     		lsls	r3, r3, #1
 4485 2172 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 109


 4486 2174 07F5B053 		add	r3, r7, #5632
 4487 2178 03F11303 		add	r3, r3, #19
 4488 217c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4489 217e 1A44     		add	r2, r2, r3
 4490 2180 07F5B053 		add	r3, r7, #5632
 4491 2184 03F11703 		add	r3, r3, #23
 4492 2188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4493 218a D31A     		subs	r3, r2, r3
 4494 218c 5A1E     		subs	r2, r3, #1
 4495 218e 07F5B053 		add	r3, r7, #5632
 4496 2192 03F11703 		add	r3, r3, #23
 4497 2196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4498 2198 07F13803 		add	r3, r7, #56
 4499 219c 1C3B     		subs	r3, r3, #28
 4500 219e 0B44     		add	r3, r3, r1
 4501 21a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4502 21a2 07F15803 		add	r3, r7, #88
 4503 21a6 043B     		subs	r3, r3, #4
 4504 21a8 9954     		strb	r1, [r3, r2]
 643:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4505              		.loc 1 643 0 discriminator 3
 4506 21aa 07F5B053 		add	r3, r7, #5632
 4507 21ae 03F11703 		add	r3, r3, #23
 4508 21b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4509 21b4 0133     		adds	r3, r3, #1
 4510 21b6 07F5B052 		add	r2, r7, #5632
 4511 21ba 02F11702 		add	r2, r2, #23
 4512 21be 1370     		strb	r3, [r2]
 4513              	.L190:
 643:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4514              		.loc 1 643 0 is_stmt 0 discriminator 1
 4515 21c0 07F5B053 		add	r3, r7, #5632
 4516 21c4 03F11703 		add	r3, r3, #23
 4517 21c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4518 21ca 07F5B053 		add	r3, r7, #5632
 4519 21ce 03F11303 		add	r3, r3, #19
 4520 21d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4521 21d4 9A42     		cmp	r2, r3
 4522 21d6 BDD3     		bcc	.L191
 4523              		.loc 1 647 0 is_stmt 1
 4524 21d8 77E1     		b	.L114
 4525              	.L124:
 648:..\src/command_processing.c **** 
 649:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 650:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4526              		.loc 1 650 0
 4527 21da 07F5B053 		add	r3, r7, #5632
 4528 21de 03F10E03 		add	r3, r3, #14
 4529 21e2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4530 21e4 9649     		ldr	r1, .L304+4
 4531 21e6 1346     		mov	r3, r2
 4532 21e8 DB00     		lsls	r3, r3, #3
 4533 21ea 9B1A     		subs	r3, r3, r2
 4534 21ec 1B01     		lsls	r3, r3, #4
 4535 21ee 0B44     		add	r3, r3, r1
 4536 21f0 03F58873 		add	r3, r3, #272
 4537 21f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 110


 4538 21f6 1846     		mov	r0, r3
 4539 21f8 07F5B053 		add	r3, r7, #5632
 4540 21fc 03F11703 		add	r3, r3, #23
 4541 2200 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4542 2202 8E49     		ldr	r1, .L304
 4543 2204 0346     		mov	r3, r0
 4544 2206 5B00     		lsls	r3, r3, #1
 4545 2208 0344     		add	r3, r3, r0
 4546 220a 9B00     		lsls	r3, r3, #2
 4547 220c 1344     		add	r3, r3, r2
 4548 220e 6633     		adds	r3, r3, #102
 4549 2210 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4550 2214 07F5B053 		add	r3, r7, #5632
 4551 2218 03F10E03 		add	r3, r3, #14
 4552 221c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4553 221e 8848     		ldr	r0, .L304+4
 4554 2220 1346     		mov	r3, r2
 4555 2222 DB00     		lsls	r3, r3, #3
 4556 2224 9B1A     		subs	r3, r3, r2
 4557 2226 1B01     		lsls	r3, r3, #4
 4558 2228 0344     		add	r3, r3, r0
 4559 222a 03F58873 		add	r3, r3, #272
 4560 222e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4561 2230 1C46     		mov	r4, r3
 4562 2232 07F5B053 		add	r3, r7, #5632
 4563 2236 03F11703 		add	r3, r3, #23
 4564 223a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4565 223c 7F48     		ldr	r0, .L304
 4566 223e 2346     		mov	r3, r4
 4567 2240 5B00     		lsls	r3, r3, #1
 4568 2242 2344     		add	r3, r3, r4
 4569 2244 1B01     		lsls	r3, r3, #4
 4570 2246 0344     		add	r3, r3, r0
 4571 2248 1344     		add	r3, r3, r2
 4572 224a 03F29513 		addw	r3, r3, #405
 4573 224e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4574 2250 41FA03F3 		asr	r3, r1, r3
 4575 2254 1AB2     		sxth	r2, r3
 4576 2256 07F13803 		add	r3, r7, #56
 4577 225a 1E3B     		subs	r3, r3, #30
 4578 225c 1A80     		strh	r2, [r3]	@ movhi
 651:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4579              		.loc 1 651 0
 4580 225e 0023     		movs	r3, #0
 4581 2260 07F5B052 		add	r2, r7, #5632
 4582 2264 02F11602 		add	r2, r2, #22
 4583 2268 1370     		strb	r3, [r2]
 4584 226a 3BE0     		b	.L192
 4585              	.L193:
 652:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4586              		.loc 1 652 0 discriminator 3
 4587 226c 07F5B053 		add	r3, r7, #5632
 4588 2270 03F11503 		add	r3, r3, #21
 4589 2274 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4590 2276 3222     		movs	r2, #50
 4591 2278 02FB03F3 		mul	r3, r2, r3
 4592 227c 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 111


 4593 227e 07F5B053 		add	r3, r7, #5632
 4594 2282 03F11703 		add	r3, r3, #23
 4595 2286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4596 2288 07F5B051 		add	r1, r7, #5632
 4597 228c 01F11301 		add	r1, r1, #19
 4598 2290 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4599 2292 01FB03F3 		mul	r3, r1, r3
 4600 2296 1A44     		add	r2, r2, r3
 4601 2298 07F5B053 		add	r3, r7, #5632
 4602 229c 03F11303 		add	r3, r3, #19
 4603 22a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4604 22a2 1A44     		add	r2, r2, r3
 4605 22a4 07F5B053 		add	r3, r7, #5632
 4606 22a8 03F11603 		add	r3, r3, #22
 4607 22ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4608 22ae D31A     		subs	r3, r2, r3
 4609 22b0 5A1E     		subs	r2, r3, #1
 4610 22b2 07F5B053 		add	r3, r7, #5632
 4611 22b6 03F11603 		add	r3, r3, #22
 4612 22ba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4613 22bc 07F13803 		add	r3, r7, #56
 4614 22c0 1E3B     		subs	r3, r3, #30
 4615 22c2 0B44     		add	r3, r3, r1
 4616 22c4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4617 22c6 07F15803 		add	r3, r7, #88
 4618 22ca 043B     		subs	r3, r3, #4
 4619 22cc 9954     		strb	r1, [r3, r2]
 651:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4620              		.loc 1 651 0 discriminator 3
 4621 22ce 07F5B053 		add	r3, r7, #5632
 4622 22d2 03F11603 		add	r3, r3, #22
 4623 22d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4624 22d8 0133     		adds	r3, r3, #1
 4625 22da 07F5B052 		add	r2, r7, #5632
 4626 22de 02F11602 		add	r2, r2, #22
 4627 22e2 1370     		strb	r3, [r2]
 4628              	.L192:
 651:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4629              		.loc 1 651 0 is_stmt 0 discriminator 1
 4630 22e4 07F5B053 		add	r3, r7, #5632
 4631 22e8 03F11603 		add	r3, r3, #22
 4632 22ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4633 22ee 07F5B053 		add	r3, r7, #5632
 4634 22f2 03F11303 		add	r3, r3, #19
 4635 22f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4636 22f8 9A42     		cmp	r2, r3
 4637 22fa B7D3     		bcc	.L193
 653:..\src/command_processing.c ****                         }
 654:..\src/command_processing.c ****                         break;
 4638              		.loc 1 654 0 is_stmt 1
 4639 22fc E5E0     		b	.L114
 4640              	.L125:
 655:..\src/command_processing.c ****                 
 656:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 657:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4641              		.loc 1 657 0
 4642 22fe 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 112


 4643 2302 03F10E03 		add	r3, r3, #14
 4644 2306 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4645 2308 4C49     		ldr	r1, .L304
 4646 230a 1346     		mov	r3, r2
 4647 230c DB00     		lsls	r3, r3, #3
 4648 230e 9B1A     		subs	r3, r3, r2
 4649 2310 1B01     		lsls	r3, r3, #4
 4650 2312 0B44     		add	r3, r3, r1
 4651 2314 E433     		adds	r3, r3, #228
 4652 2316 1968     		ldr	r1, [r3]
 4653 2318 07F5B053 		add	r3, r7, #5632
 4654 231c 03F10E03 		add	r3, r3, #14
 4655 2320 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4656 2322 4748     		ldr	r0, .L304+4
 4657 2324 1346     		mov	r3, r2
 4658 2326 DB00     		lsls	r3, r3, #3
 4659 2328 9B1A     		subs	r3, r3, r2
 4660 232a 1B01     		lsls	r3, r3, #4
 4661 232c 0344     		add	r3, r3, r0
 4662 232e 03F58873 		add	r3, r3, #272
 4663 2332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4664 2334 1846     		mov	r0, r3
 4665 2336 414A     		ldr	r2, .L304
 4666 2338 0346     		mov	r3, r0
 4667 233a 5B00     		lsls	r3, r3, #1
 4668 233c 0344     		add	r3, r3, r0
 4669 233e 1B01     		lsls	r3, r3, #4
 4670 2340 1344     		add	r3, r3, r2
 4671 2342 03F29513 		addw	r3, r3, #405
 4672 2346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4673 2348 41FA03F2 		asr	r2, r1, r3
 4674 234c 07F11803 		add	r3, r7, #24
 4675 2350 043B     		subs	r3, r3, #4
 4676 2352 1A60     		str	r2, [r3]
 658:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4677              		.loc 1 658 0
 4678 2354 0023     		movs	r3, #0
 4679 2356 07F5B052 		add	r2, r7, #5632
 4680 235a 02F11602 		add	r2, r2, #22
 4681 235e 1370     		strb	r3, [r2]
 4682 2360 2EE0     		b	.L194
 4683              	.L195:
 659:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4684              		.loc 1 659 0 discriminator 3
 4685 2362 07F5B053 		add	r3, r7, #5632
 4686 2366 03F11503 		add	r3, r3, #21
 4687 236a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4688 236c 3222     		movs	r2, #50
 4689 236e 02FB03F3 		mul	r3, r2, r3
 4690 2372 1A1D     		adds	r2, r3, #4
 4691 2374 07F5B053 		add	r3, r7, #5632
 4692 2378 03F11303 		add	r3, r3, #19
 4693 237c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4694 237e 1A44     		add	r2, r2, r3
 4695 2380 07F5B053 		add	r3, r7, #5632
 4696 2384 03F11603 		add	r3, r3, #22
 4697 2388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 113


 4698 238a D31A     		subs	r3, r2, r3
 4699 238c 5A1E     		subs	r2, r3, #1
 4700 238e 07F5B053 		add	r3, r7, #5632
 4701 2392 03F11603 		add	r3, r3, #22
 4702 2396 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4703 2398 07F11803 		add	r3, r7, #24
 4704 239c 043B     		subs	r3, r3, #4
 4705 239e 0B44     		add	r3, r3, r1
 4706 23a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4707 23a2 07F15803 		add	r3, r7, #88
 4708 23a6 043B     		subs	r3, r3, #4
 4709 23a8 9954     		strb	r1, [r3, r2]
 658:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4710              		.loc 1 658 0 discriminator 3
 4711 23aa 07F5B053 		add	r3, r7, #5632
 4712 23ae 03F11603 		add	r3, r3, #22
 4713 23b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4714 23b4 0133     		adds	r3, r3, #1
 4715 23b6 07F5B052 		add	r2, r7, #5632
 4716 23ba 02F11602 		add	r2, r2, #22
 4717 23be 1370     		strb	r3, [r2]
 4718              	.L194:
 658:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4719              		.loc 1 658 0 is_stmt 0 discriminator 1
 4720 23c0 07F5B053 		add	r3, r7, #5632
 4721 23c4 03F11603 		add	r3, r3, #22
 4722 23c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4723 23ca 07F5B053 		add	r3, r7, #5632
 4724 23ce 03F11303 		add	r3, r3, #19
 4725 23d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4726 23d4 9A42     		cmp	r2, r3
 4727 23d6 C4D3     		bcc	.L195
 660:..\src/command_processing.c ****                         }
 661:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4728              		.loc 1 661 0 is_stmt 1
 4729 23d8 07F5B053 		add	r3, r7, #5632
 4730 23dc 03F10E03 		add	r3, r3, #14
 4731 23e0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4732 23e2 1649     		ldr	r1, .L304
 4733 23e4 1346     		mov	r3, r2
 4734 23e6 DB00     		lsls	r3, r3, #3
 4735 23e8 9B1A     		subs	r3, r3, r2
 4736 23ea 1B01     		lsls	r3, r3, #4
 4737 23ec 0B44     		add	r3, r3, r1
 4738 23ee E833     		adds	r3, r3, #232
 4739 23f0 1968     		ldr	r1, [r3]
 4740 23f2 07F5B053 		add	r3, r7, #5632
 4741 23f6 03F10E03 		add	r3, r3, #14
 4742 23fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4743 23fc 1048     		ldr	r0, .L304+4
 4744 23fe 1346     		mov	r3, r2
 4745 2400 DB00     		lsls	r3, r3, #3
 4746 2402 9B1A     		subs	r3, r3, r2
 4747 2404 1B01     		lsls	r3, r3, #4
 4748 2406 0344     		add	r3, r3, r0
 4749 2408 03F58873 		add	r3, r3, #272
 4750 240c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 114


 4751 240e 1846     		mov	r0, r3
 4752 2410 0A4A     		ldr	r2, .L304
 4753 2412 0346     		mov	r3, r0
 4754 2414 5B00     		lsls	r3, r3, #1
 4755 2416 0344     		add	r3, r3, r0
 4756 2418 1B01     		lsls	r3, r3, #4
 4757 241a 1344     		add	r3, r3, r2
 4758 241c 03F29513 		addw	r3, r3, #405
 4759 2420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4760 2422 41FA03F2 		asr	r2, r1, r3
 4761 2426 07F11803 		add	r3, r7, #24
 4762 242a 043B     		subs	r3, r3, #4
 4763 242c 1A60     		str	r2, [r3]
 662:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4764              		.loc 1 662 0
 4765 242e 0023     		movs	r3, #0
 4766 2430 07F5B052 		add	r2, r7, #5632
 4767 2434 02F11602 		add	r2, r2, #22
 4768 2438 1370     		strb	r3, [r2]
 4769 243a 38E0     		b	.L196
 4770              	.L305:
 4771              		.align	2
 4772              	.L304:
 4773 243c 00000000 		.word	c_mem
 4774 2440 00000000 		.word	g_mem
 4775              	.L197:
 663:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4776              		.loc 1 663 0 discriminator 3
 4777 2444 07F5B053 		add	r3, r7, #5632
 4778 2448 03F11503 		add	r3, r3, #21
 4779 244c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4780 244e 3222     		movs	r2, #50
 4781 2450 02FB03F3 		mul	r3, r2, r3
 4782 2454 1A1D     		adds	r2, r3, #4
 4783 2456 07F5B053 		add	r3, r7, #5632
 4784 245a 03F11303 		add	r3, r3, #19
 4785 245e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4786 2460 1A44     		add	r2, r2, r3
 4787 2462 07F5B053 		add	r3, r7, #5632
 4788 2466 03F11303 		add	r3, r3, #19
 4789 246a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4790 246c 1A44     		add	r2, r2, r3
 4791 246e 07F5B053 		add	r3, r7, #5632
 4792 2472 03F11603 		add	r3, r3, #22
 4793 2476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4794 2478 D31A     		subs	r3, r2, r3
 4795 247a 5A1E     		subs	r2, r3, #1
 4796 247c 07F5B053 		add	r3, r7, #5632
 4797 2480 03F11603 		add	r3, r3, #22
 4798 2484 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4799 2486 07F11803 		add	r3, r7, #24
 4800 248a 043B     		subs	r3, r3, #4
 4801 248c 0B44     		add	r3, r3, r1
 4802 248e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4803 2490 07F15803 		add	r3, r7, #88
 4804 2494 043B     		subs	r3, r3, #4
 4805 2496 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 115


 662:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4806              		.loc 1 662 0 discriminator 3
 4807 2498 07F5B053 		add	r3, r7, #5632
 4808 249c 03F11603 		add	r3, r3, #22
 4809 24a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4810 24a2 0133     		adds	r3, r3, #1
 4811 24a4 07F5B052 		add	r2, r7, #5632
 4812 24a8 02F11602 		add	r2, r2, #22
 4813 24ac 1370     		strb	r3, [r2]
 4814              	.L196:
 662:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4815              		.loc 1 662 0 is_stmt 0 discriminator 1
 4816 24ae 07F5B053 		add	r3, r7, #5632
 4817 24b2 03F11603 		add	r3, r3, #22
 4818 24b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4819 24b8 07F5B053 		add	r3, r7, #5632
 4820 24bc 03F11303 		add	r3, r3, #19
 4821 24c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4822 24c2 9A42     		cmp	r2, r3
 4823 24c4 BED3     		bcc	.L197
 664:..\src/command_processing.c ****                         }
 665:..\src/command_processing.c ****                         break;
 4824              		.loc 1 665 0 is_stmt 1
 4825 24c6 00E0     		b	.L114
 4826              	.L284:
 666:..\src/command_processing.c ****                         
 667:..\src/command_processing.c ****                     default:
 668:..\src/command_processing.c ****                         break;
 4827              		.loc 1 668 0
 4828 24c8 00BF     		nop
 4829              	.L114:
 669:..\src/command_processing.c ****                 }
 670:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 671:..\src/command_processing.c ****                         
 672:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 673:..\src/command_processing.c ****         }
 674:..\src/command_processing.c ****         
 675:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4830              		.loc 1 675 0
 4831 24ca 07F5B053 		add	r3, r7, #5632
 4832 24ce 03F11503 		add	r3, r3, #21
 4833 24d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4834 24d4 9B00     		lsls	r3, r3, #2
 4835 24d6 07F5B152 		add	r2, r7, #5664
 4836 24da 02F11402 		add	r2, r2, #20
 4837 24de 1268     		ldr	r2, [r2]
 4838 24e0 1344     		add	r3, r3, r2
 4839 24e2 1A68     		ldr	r2, [r3]
 4840 24e4 07F13803 		add	r3, r7, #56
 4841 24e8 183B     		subs	r3, r3, #24
 4842 24ea 1146     		mov	r1, r2
 4843 24ec 1846     		mov	r0, r3
 4844 24ee FFF7FEFF 		bl	sprintf
 676:..\src/command_processing.c ****         string_length = strlen(aux_str);
 4845              		.loc 1 676 0
 4846 24f2 07F13803 		add	r3, r7, #56
 4847 24f6 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 116


 4848 24f8 1846     		mov	r0, r3
 4849 24fa FFF7FEFF 		bl	strlen
 4850 24fe 0346     		mov	r3, r0
 4851 2500 07F5B052 		add	r2, r7, #5632
 4852 2504 02F11202 		add	r2, r2, #18
 4853 2508 1370     		strb	r3, [r2]
 677:..\src/command_processing.c ****         
 678:..\src/command_processing.c ****         // Parameters with a menu
 679:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4854              		.loc 1 679 0
 4855 250a 07F5B053 		add	r3, r7, #5632
 4856 250e 03F11503 		add	r3, r3, #21
 4857 2512 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4858 2514 07F11803 		add	r3, r7, #24
 4859 2518 103B     		subs	r3, r3, #16
 4860 251a 1B68     		ldr	r3, [r3]
 4861 251c 1344     		add	r3, r3, r2
 4862 251e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4863 2520 002B     		cmp	r3, #0
 4864 2522 40F0D984 		bne	.L198
 680:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4865              		.loc 1 680 0
 4866 2526 07F5B053 		add	r3, r7, #5632
 4867 252a 03F11403 		add	r3, r3, #20
 4868 252e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4869 2530 07F5B152 		add	r2, r7, #5664
 4870 2534 02F11002 		add	r2, r2, #16
 4871 2538 1268     		ldr	r2, [r2]
 4872 253a 1344     		add	r3, r3, r2
 4873 253c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4874 253e 013B     		subs	r3, r3, #1
 4875 2540 0B2B     		cmp	r3, #11
 4876 2542 00F2BB84 		bhi	.L199
 4877 2546 01A2     		adr	r2, .L201
 4878 2548 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4879              		.p2align 2
 4880              	.L201:
 4881 254c 7D250000 		.word	.L200+1
 4882 2550 27270000 		.word	.L202+1
 4883 2554 FD270000 		.word	.L203+1
 4884 2558 51280000 		.word	.L204+1
 4885 255c B5280000 		.word	.L205+1
 4886 2560 11290000 		.word	.L206+1
 4887 2564 2D2A0000 		.word	.L207+1
 4888 2568 B52A0000 		.word	.L208+1
 4889 256c 492B0000 		.word	.L209+1
 4890 2570 F32B0000 		.word	.L210+1
 4891 2574 472D0000 		.word	.L211+1
 4892 2578 3B2E0000 		.word	.L212+1
 4893              		.p2align 1
 4894              	.L200:
 681:..\src/command_processing.c ****                 case 1:     // input mode menu
 682:..\src/command_processing.c ****                     switch(*m_addr) {
 4895              		.loc 1 682 0
 4896 257c 07F5B053 		add	r3, r7, #5632
 4897 2580 03F10803 		add	r3, r3, #8
 4898 2584 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 117


 4899 2586 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4900 2588 072B     		cmp	r3, #7
 4901 258a 00F29084 		bhi	.L285
 4902 258e 01A2     		adr	r2, .L215
 4903 2590 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4904              		.p2align 2
 4905              	.L215:
 4906 2594 B5250000 		.word	.L214+1
 4907 2598 D9250000 		.word	.L216+1
 4908 259c FF250000 		.word	.L217+1
 4909 25a0 2D260000 		.word	.L218+1
 4910 25a4 59260000 		.word	.L219+1
 4911 25a8 83260000 		.word	.L220+1
 4912 25ac B7260000 		.word	.L221+1
 4913 25b0 E1260000 		.word	.L222+1
 4914              		.p2align 1
 4915              	.L214:
 683:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 684:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4916              		.loc 1 684 0
 4917 25b4 07F13803 		add	r3, r7, #56
 4918 25b8 183B     		subs	r3, r3, #24
 4919 25ba 1846     		mov	r0, r3
 4920 25bc FFF7FEFF 		bl	strlen
 4921 25c0 0346     		mov	r3, r0
 4922 25c2 1A46     		mov	r2, r3
 4923 25c4 07F13803 		add	r3, r7, #56
 4924 25c8 183B     		subs	r3, r3, #24
 4925 25ca 1344     		add	r3, r3, r2
 4926 25cc DA4A     		ldr	r2, .L306
 4927 25ce 1068     		ldr	r0, [r2]	@ unaligned
 4928 25d0 1860     		str	r0, [r3]	@ unaligned
 4929 25d2 1279     		ldrb	r2, [r2, #4]
 4930 25d4 1A71     		strb	r2, [r3, #4]
 685:..\src/command_processing.c ****                         break;
 4931              		.loc 1 685 0
 4932 25d6 A5E0     		b	.L213
 4933              	.L216:
 686:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 687:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4934              		.loc 1 687 0
 4935 25d8 07F13803 		add	r3, r7, #56
 4936 25dc 183B     		subs	r3, r3, #24
 4937 25de 1846     		mov	r0, r3
 4938 25e0 FFF7FEFF 		bl	strlen
 4939 25e4 0346     		mov	r3, r0
 4940 25e6 1A46     		mov	r2, r3
 4941 25e8 07F13803 		add	r3, r7, #56
 4942 25ec 183B     		subs	r3, r3, #24
 4943 25ee 1344     		add	r3, r3, r2
 4944 25f0 D249     		ldr	r1, .L306+4
 4945 25f2 1A46     		mov	r2, r3
 4946 25f4 0B46     		mov	r3, r1
 4947 25f6 03CB     		ldmia	r3!, {r0, r1}
 4948 25f8 1060     		str	r0, [r2]	@ unaligned
 4949 25fa 5160     		str	r1, [r2, #4]	@ unaligned
 688:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 118


 4950              		.loc 1 688 0
 4951 25fc 92E0     		b	.L213
 4952              	.L217:
 689:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 690:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4953              		.loc 1 690 0
 4954 25fe 07F13803 		add	r3, r7, #56
 4955 2602 183B     		subs	r3, r3, #24
 4956 2604 1846     		mov	r0, r3
 4957 2606 FFF7FEFF 		bl	strlen
 4958 260a 0346     		mov	r3, r0
 4959 260c 1A46     		mov	r2, r3
 4960 260e 07F13803 		add	r3, r7, #56
 4961 2612 183B     		subs	r3, r3, #24
 4962 2614 1344     		add	r3, r3, r2
 4963 2616 CA4A     		ldr	r2, .L306+8
 4964 2618 1D46     		mov	r5, r3
 4965 261a 1446     		mov	r4, r2
 4966 261c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4967 261e 2860     		str	r0, [r5]	@ unaligned
 4968 2620 6960     		str	r1, [r5, #4]	@ unaligned
 4969 2622 AA60     		str	r2, [r5, #8]	@ unaligned
 4970 2624 EB60     		str	r3, [r5, #12]	@ unaligned
 4971 2626 2388     		ldrh	r3, [r4]	@ unaligned
 4972 2628 2B82     		strh	r3, [r5, #16]	@ unaligned
 691:..\src/command_processing.c ****                         break;
 4973              		.loc 1 691 0
 4974 262a 7BE0     		b	.L213
 4975              	.L218:
 692:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 693:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4976              		.loc 1 693 0
 4977 262c 07F13803 		add	r3, r7, #56
 4978 2630 183B     		subs	r3, r3, #24
 4979 2632 1846     		mov	r0, r3
 4980 2634 FFF7FEFF 		bl	strlen
 4981 2638 0346     		mov	r3, r0
 4982 263a 1A46     		mov	r2, r3
 4983 263c 07F13803 		add	r3, r7, #56
 4984 2640 183B     		subs	r3, r3, #24
 4985 2642 1344     		add	r3, r3, r2
 4986 2644 BF4A     		ldr	r2, .L306+12
 4987 2646 1C46     		mov	r4, r3
 4988 2648 1346     		mov	r3, r2
 4989 264a 07CB     		ldmia	r3!, {r0, r1, r2}
 4990 264c 2060     		str	r0, [r4]	@ unaligned
 4991 264e 6160     		str	r1, [r4, #4]	@ unaligned
 4992 2650 A260     		str	r2, [r4, #8]	@ unaligned
 4993 2652 1B88     		ldrh	r3, [r3]	@ unaligned
 4994 2654 A381     		strh	r3, [r4, #12]	@ unaligned
 694:..\src/command_processing.c ****                         break;
 4995              		.loc 1 694 0
 4996 2656 65E0     		b	.L213
 4997              	.L219:
 695:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 696:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4998              		.loc 1 696 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 119


 4999 2658 07F13803 		add	r3, r7, #56
 5000 265c 183B     		subs	r3, r3, #24
 5001 265e 1846     		mov	r0, r3
 5002 2660 FFF7FEFF 		bl	strlen
 5003 2664 0346     		mov	r3, r0
 5004 2666 1A46     		mov	r2, r3
 5005 2668 07F13803 		add	r3, r7, #56
 5006 266c 183B     		subs	r3, r3, #24
 5007 266e 1344     		add	r3, r3, r2
 5008 2670 B549     		ldr	r1, .L306+16
 5009 2672 1A46     		mov	r2, r3
 5010 2674 0B46     		mov	r3, r1
 5011 2676 03CB     		ldmia	r3!, {r0, r1}
 5012 2678 1060     		str	r0, [r2]	@ unaligned
 5013 267a 5160     		str	r1, [r2, #4]	@ unaligned
 5014 267c 1B88     		ldrh	r3, [r3]	@ unaligned
 5015 267e 1381     		strh	r3, [r2, #8]	@ unaligned
 697:..\src/command_processing.c ****                         break;
 5016              		.loc 1 697 0
 5017 2680 50E0     		b	.L213
 5018              	.L220:
 698:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 699:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 5019              		.loc 1 699 0
 5020 2682 07F13803 		add	r3, r7, #56
 5021 2686 183B     		subs	r3, r3, #24
 5022 2688 1846     		mov	r0, r3
 5023 268a FFF7FEFF 		bl	strlen
 5024 268e 0346     		mov	r3, r0
 5025 2690 1A46     		mov	r2, r3
 5026 2692 07F13803 		add	r3, r7, #56
 5027 2696 183B     		subs	r3, r3, #24
 5028 2698 1344     		add	r3, r3, r2
 5029 269a AC4A     		ldr	r2, .L306+20
 5030 269c 1D46     		mov	r5, r3
 5031 269e 1446     		mov	r4, r2
 5032 26a0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5033 26a2 2860     		str	r0, [r5]	@ unaligned
 5034 26a4 6960     		str	r1, [r5, #4]	@ unaligned
 5035 26a6 AA60     		str	r2, [r5, #8]	@ unaligned
 5036 26a8 EB60     		str	r3, [r5, #12]	@ unaligned
 5037 26aa 2388     		ldrh	r3, [r4]	@ unaligned
 5038 26ac A278     		ldrb	r2, [r4, #2]
 5039 26ae 2B82     		strh	r3, [r5, #16]	@ unaligned
 5040 26b0 1346     		mov	r3, r2
 5041 26b2 AB74     		strb	r3, [r5, #18]
 700:..\src/command_processing.c ****                         break;
 5042              		.loc 1 700 0
 5043 26b4 36E0     		b	.L213
 5044              	.L221:
 701:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 702:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 5045              		.loc 1 702 0
 5046 26b6 07F13803 		add	r3, r7, #56
 5047 26ba 183B     		subs	r3, r3, #24
 5048 26bc 1846     		mov	r0, r3
 5049 26be FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 120


 5050 26c2 0346     		mov	r3, r0
 5051 26c4 1A46     		mov	r2, r3
 5052 26c6 07F13803 		add	r3, r7, #56
 5053 26ca 183B     		subs	r3, r3, #24
 5054 26cc 1344     		add	r3, r3, r2
 5055 26ce A049     		ldr	r1, .L306+24
 5056 26d0 1A46     		mov	r2, r3
 5057 26d2 0B46     		mov	r3, r1
 5058 26d4 03CB     		ldmia	r3!, {r0, r1}
 5059 26d6 1060     		str	r0, [r2]	@ unaligned
 5060 26d8 5160     		str	r1, [r2, #4]	@ unaligned
 5061 26da 1B88     		ldrh	r3, [r3]	@ unaligned
 5062 26dc 1381     		strh	r3, [r2, #8]	@ unaligned
 703:..\src/command_processing.c ****                         break;
 5063              		.loc 1 703 0
 5064 26de 21E0     		b	.L213
 5065              	.L222:
 704:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 705:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 5066              		.loc 1 705 0
 5067 26e0 07F13803 		add	r3, r7, #56
 5068 26e4 183B     		subs	r3, r3, #24
 5069 26e6 1846     		mov	r0, r3
 5070 26e8 FFF7FEFF 		bl	strlen
 5071 26ec 0346     		mov	r3, r0
 5072 26ee 1A46     		mov	r2, r3
 5073 26f0 07F13803 		add	r3, r7, #56
 5074 26f4 183B     		subs	r3, r3, #24
 5075 26f6 1344     		add	r3, r3, r2
 5076 26f8 964A     		ldr	r2, .L306+28
 5077 26fa 1446     		mov	r4, r2
 5078 26fc 9E46     		mov	lr, r3
 5079 26fe 04F1200C 		add	ip, r4, #32
 5080              	.L223:
 5081 2702 7546     		mov	r5, lr
 5082 2704 2646     		mov	r6, r4
 5083 2706 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 5084 2708 2860     		str	r0, [r5]	@ unaligned
 5085 270a 6960     		str	r1, [r5, #4]	@ unaligned
 5086 270c AA60     		str	r2, [r5, #8]	@ unaligned
 5087 270e EB60     		str	r3, [r5, #12]	@ unaligned
 5088 2710 1034     		adds	r4, r4, #16
 5089 2712 0EF1100E 		add	lr, lr, #16
 5090 2716 6445     		cmp	r4, ip
 5091 2718 F3D1     		bne	.L223
 5092 271a 7246     		mov	r2, lr
 5093 271c 2346     		mov	r3, r4
 5094 271e 1B88     		ldrh	r3, [r3]	@ unaligned
 5095 2720 1380     		strh	r3, [r2]	@ unaligned
 706:..\src/command_processing.c ****                         break;
 5096              		.loc 1 706 0
 5097 2722 00BF     		nop
 5098              	.L213:
 707:..\src/command_processing.c ****                     }
 708:..\src/command_processing.c ****                     break;
 5099              		.loc 1 708 0
 5100 2724 C3E3     		b	.L285
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 121


 5101              	.L202:
 709:..\src/command_processing.c ****                 case 2:     // control mode menu
 710:..\src/command_processing.c ****                     switch(*m_addr){
 5102              		.loc 1 710 0
 5103 2726 07F5B053 		add	r3, r7, #5632
 5104 272a 03F10803 		add	r3, r3, #8
 5105 272e 1B68     		ldr	r3, [r3]
 5106 2730 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5107 2732 032B     		cmp	r3, #3
 5108 2734 00F2BD83 		bhi	.L286
 5109 2738 01A2     		adr	r2, .L226
 5110 273a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5111 273e 00BF     		.p2align 2
 5112              	.L226:
 5113 2740 51270000 		.word	.L225+1
 5114 2744 7B270000 		.word	.L227+1
 5115 2748 9F270000 		.word	.L228+1
 5116 274c C9270000 		.word	.L229+1
 5117              		.p2align 1
 5118              	.L225:
 711:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 712:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 5119              		.loc 1 712 0
 5120 2750 07F13803 		add	r3, r7, #56
 5121 2754 183B     		subs	r3, r3, #24
 5122 2756 1846     		mov	r0, r3
 5123 2758 FFF7FEFF 		bl	strlen
 5124 275c 0346     		mov	r3, r0
 5125 275e 1A46     		mov	r2, r3
 5126 2760 07F13803 		add	r3, r7, #56
 5127 2764 183B     		subs	r3, r3, #24
 5128 2766 1344     		add	r3, r3, r2
 5129 2768 7B49     		ldr	r1, .L306+32
 5130 276a 1A46     		mov	r2, r3
 5131 276c 0B46     		mov	r3, r1
 5132 276e 03CB     		ldmia	r3!, {r0, r1}
 5133 2770 1060     		str	r0, [r2]	@ unaligned
 5134 2772 5160     		str	r1, [r2, #4]	@ unaligned
 5135 2774 1B88     		ldrh	r3, [r3]	@ unaligned
 5136 2776 1381     		strh	r3, [r2, #8]	@ unaligned
 713:..\src/command_processing.c ****                         break;
 5137              		.loc 1 713 0
 5138 2778 3FE0     		b	.L224
 5139              	.L227:
 714:..\src/command_processing.c ****                         case CONTROL_PWM:
 715:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 5140              		.loc 1 715 0
 5141 277a 07F13803 		add	r3, r7, #56
 5142 277e 183B     		subs	r3, r3, #24
 5143 2780 1846     		mov	r0, r3
 5144 2782 FFF7FEFF 		bl	strlen
 5145 2786 0346     		mov	r3, r0
 5146 2788 1A46     		mov	r2, r3
 5147 278a 07F13803 		add	r3, r7, #56
 5148 278e 183B     		subs	r3, r3, #24
 5149 2790 1344     		add	r3, r3, r2
 5150 2792 724A     		ldr	r2, .L306+36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 122


 5151 2794 1068     		ldr	r0, [r2]	@ unaligned
 5152 2796 1860     		str	r0, [r3]	@ unaligned
 5153 2798 1279     		ldrb	r2, [r2, #4]
 5154 279a 1A71     		strb	r2, [r3, #4]
 716:..\src/command_processing.c ****                         break;
 5155              		.loc 1 716 0
 5156 279c 2DE0     		b	.L224
 5157              	.L228:
 717:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 718:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 5158              		.loc 1 718 0
 5159 279e 07F13803 		add	r3, r7, #56
 5160 27a2 183B     		subs	r3, r3, #24
 5161 27a4 1846     		mov	r0, r3
 5162 27a6 FFF7FEFF 		bl	strlen
 5163 27aa 0346     		mov	r3, r0
 5164 27ac 1A46     		mov	r2, r3
 5165 27ae 07F13803 		add	r3, r7, #56
 5166 27b2 183B     		subs	r3, r3, #24
 5167 27b4 1344     		add	r3, r3, r2
 5168 27b6 6A49     		ldr	r1, .L306+40
 5169 27b8 1A46     		mov	r2, r3
 5170 27ba 0B46     		mov	r3, r1
 5171 27bc 03CB     		ldmia	r3!, {r0, r1}
 5172 27be 1060     		str	r0, [r2]	@ unaligned
 5173 27c0 5160     		str	r1, [r2, #4]	@ unaligned
 5174 27c2 1B78     		ldrb	r3, [r3]
 5175 27c4 1372     		strb	r3, [r2, #8]
 719:..\src/command_processing.c ****                         break;
 5176              		.loc 1 719 0
 5177 27c6 18E0     		b	.L224
 5178              	.L229:
 720:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 721:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 5179              		.loc 1 721 0
 5180 27c8 07F13803 		add	r3, r7, #56
 5181 27cc 183B     		subs	r3, r3, #24
 5182 27ce 1846     		mov	r0, r3
 5183 27d0 FFF7FEFF 		bl	strlen
 5184 27d4 0346     		mov	r3, r0
 5185 27d6 1A46     		mov	r2, r3
 5186 27d8 07F13803 		add	r3, r7, #56
 5187 27dc 183B     		subs	r3, r3, #24
 5188 27de 1344     		add	r3, r3, r2
 5189 27e0 604A     		ldr	r2, .L306+44
 5190 27e2 1D46     		mov	r5, r3
 5191 27e4 1446     		mov	r4, r2
 5192 27e6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5193 27e8 2860     		str	r0, [r5]	@ unaligned
 5194 27ea 6960     		str	r1, [r5, #4]	@ unaligned
 5195 27ec AA60     		str	r2, [r5, #8]	@ unaligned
 5196 27ee EB60     		str	r3, [r5, #12]	@ unaligned
 5197 27f0 2068     		ldr	r0, [r4]	@ unaligned
 5198 27f2 2861     		str	r0, [r5, #16]	@ unaligned
 5199 27f4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5200 27f6 AB82     		strh	r3, [r5, #20]	@ unaligned
 722:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 123


 5201              		.loc 1 722 0
 5202 27f8 00BF     		nop
 5203              	.L224:
 723:..\src/command_processing.c ****                     }
 724:..\src/command_processing.c ****                     break;
 5204              		.loc 1 724 0
 5205 27fa 5AE3     		b	.L286
 5206              	.L203:
 725:..\src/command_processing.c ****                 case 3:     // yes/no menu
 726:..\src/command_processing.c ****                     if(*m_addr){
 5207              		.loc 1 726 0
 5208 27fc 07F5B053 		add	r3, r7, #5632
 5209 2800 03F10803 		add	r3, r3, #8
 5210 2804 1B68     		ldr	r3, [r3]
 5211 2806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5212 2808 002B     		cmp	r3, #0
 5213 280a 11D0     		beq	.L230
 727:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 5214              		.loc 1 727 0
 5215 280c 07F13803 		add	r3, r7, #56
 5216 2810 183B     		subs	r3, r3, #24
 5217 2812 1846     		mov	r0, r3
 5218 2814 FFF7FEFF 		bl	strlen
 5219 2818 0346     		mov	r3, r0
 5220 281a 1A46     		mov	r2, r3
 5221 281c 07F13803 		add	r3, r7, #56
 5222 2820 183B     		subs	r3, r3, #24
 5223 2822 1344     		add	r3, r3, r2
 5224 2824 504A     		ldr	r2, .L306+48
 5225 2826 1068     		ldr	r0, [r2]	@ unaligned
 5226 2828 1860     		str	r0, [r3]	@ unaligned
 5227 282a 1279     		ldrb	r2, [r2, #4]
 5228 282c 1A71     		strb	r2, [r3, #4]
 728:..\src/command_processing.c ****                     }
 729:..\src/command_processing.c ****                     else {
 730:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 731:..\src/command_processing.c ****                     }
 732:..\src/command_processing.c ****                     break;    
 5229              		.loc 1 732 0
 5230 282e 45E3     		b	.L199
 5231              	.L230:
 730:..\src/command_processing.c ****                     }
 5232              		.loc 1 730 0
 5233 2830 07F13803 		add	r3, r7, #56
 5234 2834 183B     		subs	r3, r3, #24
 5235 2836 1846     		mov	r0, r3
 5236 2838 FFF7FEFF 		bl	strlen
 5237 283c 0346     		mov	r3, r0
 5238 283e 1A46     		mov	r2, r3
 5239 2840 07F13803 		add	r3, r7, #56
 5240 2844 183B     		subs	r3, r3, #24
 5241 2846 1344     		add	r3, r3, r2
 5242 2848 484A     		ldr	r2, .L306+52
 5243 284a 1068     		ldr	r0, [r2]	@ unaligned
 5244 284c 1860     		str	r0, [r3]	@ unaligned
 5245              		.loc 1 732 0
 5246 284e 35E3     		b	.L199
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 124


 5247              	.L204:
 733:..\src/command_processing.c ****                 case 4:     // right/lef menu
 734:..\src/command_processing.c ****                     switch(*m_addr){
 5248              		.loc 1 734 0
 5249 2850 07F5B053 		add	r3, r7, #5632
 5250 2854 03F10803 		add	r3, r3, #8
 5251 2858 1B68     		ldr	r3, [r3]
 5252 285a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5253 285c 002B     		cmp	r3, #0
 5254 285e 02D0     		beq	.L233
 5255 2860 012B     		cmp	r3, #1
 5256 2862 14D0     		beq	.L234
 735:..\src/command_processing.c ****                         case RIGHT_HAND:
 736:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 737:..\src/command_processing.c ****                         break;
 738:..\src/command_processing.c ****                         case LEFT_HAND:
 739:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 740:..\src/command_processing.c ****                         break;
 741:..\src/command_processing.c ****                     }
 742:..\src/command_processing.c ****                     break;
 5257              		.loc 1 742 0
 5258 2864 2AE3     		b	.L199
 5259              	.L233:
 736:..\src/command_processing.c ****                         break;
 5260              		.loc 1 736 0
 5261 2866 07F13803 		add	r3, r7, #56
 5262 286a 183B     		subs	r3, r3, #24
 5263 286c 1846     		mov	r0, r3
 5264 286e FFF7FEFF 		bl	strlen
 5265 2872 0346     		mov	r3, r0
 5266 2874 1A46     		mov	r2, r3
 5267 2876 07F13803 		add	r3, r7, #56
 5268 287a 183B     		subs	r3, r3, #24
 5269 287c 1344     		add	r3, r3, r2
 5270 287e 3C4A     		ldr	r2, .L306+56
 5271 2880 1068     		ldr	r0, [r2]	@ unaligned
 5272 2882 1860     		str	r0, [r3]	@ unaligned
 5273 2884 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5274 2886 9279     		ldrb	r2, [r2, #6]
 5275 2888 9980     		strh	r1, [r3, #4]	@ unaligned
 5276 288a 9A71     		strb	r2, [r3, #6]
 737:..\src/command_processing.c ****                         case LEFT_HAND:
 5277              		.loc 1 737 0
 5278 288c 11E0     		b	.L232
 5279              	.L234:
 739:..\src/command_processing.c ****                         break;
 5280              		.loc 1 739 0
 5281 288e 07F13803 		add	r3, r7, #56
 5282 2892 183B     		subs	r3, r3, #24
 5283 2894 1846     		mov	r0, r3
 5284 2896 FFF7FEFF 		bl	strlen
 5285 289a 0346     		mov	r3, r0
 5286 289c 1A46     		mov	r2, r3
 5287 289e 07F13803 		add	r3, r7, #56
 5288 28a2 183B     		subs	r3, r3, #24
 5289 28a4 1344     		add	r3, r3, r2
 5290 28a6 334A     		ldr	r2, .L306+60
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 125


 5291 28a8 1068     		ldr	r0, [r2]	@ unaligned
 5292 28aa 1860     		str	r0, [r3]	@ unaligned
 5293 28ac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5294 28ae 9A80     		strh	r2, [r3, #4]	@ unaligned
 740:..\src/command_processing.c ****                     }
 5295              		.loc 1 740 0
 5296 28b0 00BF     		nop
 5297              	.L232:
 5298              		.loc 1 742 0
 5299 28b2 03E3     		b	.L199
 5300              	.L205:
 743:..\src/command_processing.c ****                 case 5:     // on/off menu
 744:..\src/command_processing.c ****                     switch(*m_addr){
 5301              		.loc 1 744 0
 5302 28b4 07F5B053 		add	r3, r7, #5632
 5303 28b8 03F10803 		add	r3, r3, #8
 5304 28bc 1B68     		ldr	r3, [r3]
 5305 28be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5306 28c0 002B     		cmp	r3, #0
 5307 28c2 02D0     		beq	.L236
 5308 28c4 012B     		cmp	r3, #1
 5309 28c6 12D0     		beq	.L237
 745:..\src/command_processing.c ****                         case 0:
 746:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 747:..\src/command_processing.c ****                         break;
 748:..\src/command_processing.c ****                         case 1:
 749:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 750:..\src/command_processing.c ****                         break;
 751:..\src/command_processing.c ****                     }
 752:..\src/command_processing.c ****                     break;
 5310              		.loc 1 752 0
 5311 28c8 F8E2     		b	.L199
 5312              	.L236:
 746:..\src/command_processing.c ****                         break;
 5313              		.loc 1 746 0
 5314 28ca 07F13803 		add	r3, r7, #56
 5315 28ce 183B     		subs	r3, r3, #24
 5316 28d0 1846     		mov	r0, r3
 5317 28d2 FFF7FEFF 		bl	strlen
 5318 28d6 0346     		mov	r3, r0
 5319 28d8 1A46     		mov	r2, r3
 5320 28da 07F13803 		add	r3, r7, #56
 5321 28de 183B     		subs	r3, r3, #24
 5322 28e0 1344     		add	r3, r3, r2
 5323 28e2 254A     		ldr	r2, .L306+64
 5324 28e4 1068     		ldr	r0, [r2]	@ unaligned
 5325 28e6 1860     		str	r0, [r3]	@ unaligned
 5326 28e8 1279     		ldrb	r2, [r2, #4]
 5327 28ea 1A71     		strb	r2, [r3, #4]
 747:..\src/command_processing.c ****                         case 1:
 5328              		.loc 1 747 0
 5329 28ec 0FE0     		b	.L235
 5330              	.L237:
 749:..\src/command_processing.c ****                         break;
 5331              		.loc 1 749 0
 5332 28ee 07F13803 		add	r3, r7, #56
 5333 28f2 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 126


 5334 28f4 1846     		mov	r0, r3
 5335 28f6 FFF7FEFF 		bl	strlen
 5336 28fa 0346     		mov	r3, r0
 5337 28fc 1A46     		mov	r2, r3
 5338 28fe 07F13803 		add	r3, r7, #56
 5339 2902 183B     		subs	r3, r3, #24
 5340 2904 1344     		add	r3, r3, r2
 5341 2906 1D4A     		ldr	r2, .L306+68
 5342 2908 1068     		ldr	r0, [r2]	@ unaligned
 5343 290a 1860     		str	r0, [r3]	@ unaligned
 750:..\src/command_processing.c ****                     }
 5344              		.loc 1 750 0
 5345 290c 00BF     		nop
 5346              	.L235:
 5347              		.loc 1 752 0
 5348 290e D5E2     		b	.L199
 5349              	.L206:
 753:..\src/command_processing.c ****                 case 6:     // expansion port menu
 754:..\src/command_processing.c ****                     switch(*m_addr){
 5350              		.loc 1 754 0
 5351 2910 07F5B053 		add	r3, r7, #5632
 5352 2914 03F10803 		add	r3, r3, #8
 5353 2918 1B68     		ldr	r3, [r3]
 5354 291a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5355 291c 032B     		cmp	r3, #3
 5356 291e 00F2CA82 		bhi	.L287
 5357 2922 01A2     		adr	r2, .L240
 5358 2924 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5359              		.p2align 2
 5360              	.L240:
 5361 2928 81290000 		.word	.L239+1
 5362 292c A5290000 		.word	.L241+1
 5363 2930 D1290000 		.word	.L242+1
 5364 2934 FF290000 		.word	.L243+1
 5365              		.p2align 1
 5366              	.L307:
 5367              		.align	2
 5368              	.L306:
 5369 2938 00000000 		.word	.LC88
 5370 293c 08000000 		.word	.LC89
 5371 2940 10000000 		.word	.LC90
 5372 2944 24000000 		.word	.LC91
 5373 2948 34000000 		.word	.LC92
 5374 294c 40000000 		.word	.LC93
 5375 2950 54000000 		.word	.LC94
 5376 2954 60000000 		.word	.LC95
 5377 2958 84000000 		.word	.LC96
 5378 295c 90000000 		.word	.LC97
 5379 2960 98000000 		.word	.LC98
 5380 2964 A4000000 		.word	.LC99
 5381 2968 BC000000 		.word	.LC100
 5382 296c C4000000 		.word	.LC101
 5383 2970 CC000000 		.word	.LC102
 5384 2974 D4000000 		.word	.LC103
 5385 2978 DC000000 		.word	.LC104
 5386 297c E4000000 		.word	.LC105
 5387              	.L239:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 127


 755:..\src/command_processing.c ****                         case EXP_NONE:
 756:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5388              		.loc 1 756 0
 5389 2980 07F13803 		add	r3, r7, #56
 5390 2984 183B     		subs	r3, r3, #24
 5391 2986 1846     		mov	r0, r3
 5392 2988 FFF7FEFF 		bl	strlen
 5393 298c 0346     		mov	r3, r0
 5394 298e 1A46     		mov	r2, r3
 5395 2990 07F13803 		add	r3, r7, #56
 5396 2994 183B     		subs	r3, r3, #24
 5397 2996 1344     		add	r3, r3, r2
 5398 2998 CD4A     		ldr	r2, .L308
 5399 299a 1068     		ldr	r0, [r2]	@ unaligned
 5400 299c 1860     		str	r0, [r3]	@ unaligned
 5401 299e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5402 29a0 9A80     		strh	r2, [r3, #4]	@ unaligned
 757:..\src/command_processing.c ****                             break;
 5403              		.loc 1 757 0
 5404 29a2 42E0     		b	.L238
 5405              	.L241:
 758:..\src/command_processing.c ****                         case EXP_SD_RTC:
 759:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5406              		.loc 1 759 0
 5407 29a4 07F13803 		add	r3, r7, #56
 5408 29a8 183B     		subs	r3, r3, #24
 5409 29aa 1846     		mov	r0, r3
 5410 29ac FFF7FEFF 		bl	strlen
 5411 29b0 0346     		mov	r3, r0
 5412 29b2 1A46     		mov	r2, r3
 5413 29b4 07F13803 		add	r3, r7, #56
 5414 29b8 183B     		subs	r3, r3, #24
 5415 29ba 1344     		add	r3, r3, r2
 5416 29bc C54A     		ldr	r2, .L308+4
 5417 29be 1C46     		mov	r4, r3
 5418 29c0 1346     		mov	r3, r2
 5419 29c2 07CB     		ldmia	r3!, {r0, r1, r2}
 5420 29c4 2060     		str	r0, [r4]	@ unaligned
 5421 29c6 6160     		str	r1, [r4, #4]	@ unaligned
 5422 29c8 A260     		str	r2, [r4, #8]	@ unaligned
 5423 29ca 1B88     		ldrh	r3, [r3]	@ unaligned
 5424 29cc A381     		strh	r3, [r4, #12]	@ unaligned
 760:..\src/command_processing.c ****                             break;
 5425              		.loc 1 760 0
 5426 29ce 2CE0     		b	.L238
 5427              	.L242:
 761:..\src/command_processing.c ****                         case EXP_WIFI:
 762:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5428              		.loc 1 762 0
 5429 29d0 07F13803 		add	r3, r7, #56
 5430 29d4 183B     		subs	r3, r3, #24
 5431 29d6 1846     		mov	r0, r3
 5432 29d8 FFF7FEFF 		bl	strlen
 5433 29dc 0346     		mov	r3, r0
 5434 29de 1A46     		mov	r2, r3
 5435 29e0 07F13803 		add	r3, r7, #56
 5436 29e4 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 128


 5437 29e6 1344     		add	r3, r3, r2
 5438 29e8 BB4A     		ldr	r2, .L308+8
 5439 29ea 1D46     		mov	r5, r3
 5440 29ec 1446     		mov	r4, r2
 5441 29ee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5442 29f0 2860     		str	r0, [r5]	@ unaligned
 5443 29f2 6960     		str	r1, [r5, #4]	@ unaligned
 5444 29f4 AA60     		str	r2, [r5, #8]	@ unaligned
 5445 29f6 EB60     		str	r3, [r5, #12]	@ unaligned
 5446 29f8 2388     		ldrh	r3, [r4]	@ unaligned
 5447 29fa 2B82     		strh	r3, [r5, #16]	@ unaligned
 763:..\src/command_processing.c ****         					break;
 5448              		.loc 1 763 0
 5449 29fc 15E0     		b	.L238
 5450              	.L243:
 764:..\src/command_processing.c ****                         case EXP_OTHER:
 765:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5451              		.loc 1 765 0
 5452 29fe 07F13803 		add	r3, r7, #56
 5453 2a02 183B     		subs	r3, r3, #24
 5454 2a04 1846     		mov	r0, r3
 5455 2a06 FFF7FEFF 		bl	strlen
 5456 2a0a 0346     		mov	r3, r0
 5457 2a0c 1A46     		mov	r2, r3
 5458 2a0e 07F13803 		add	r3, r7, #56
 5459 2a12 183B     		subs	r3, r3, #24
 5460 2a14 1344     		add	r3, r3, r2
 5461 2a16 B14A     		ldr	r2, .L308+12
 5462 2a18 1C46     		mov	r4, r3
 5463 2a1a 1346     		mov	r3, r2
 5464 2a1c 07CB     		ldmia	r3!, {r0, r1, r2}
 5465 2a1e 2060     		str	r0, [r4]	@ unaligned
 5466 2a20 6160     		str	r1, [r4, #4]	@ unaligned
 5467 2a22 A260     		str	r2, [r4, #8]	@ unaligned
 5468 2a24 1B78     		ldrb	r3, [r3]
 5469 2a26 2373     		strb	r3, [r4, #12]
 766:..\src/command_processing.c ****         					break;
 5470              		.loc 1 766 0
 5471 2a28 00BF     		nop
 5472              	.L238:
 767:..\src/command_processing.c ****                     }
 768:..\src/command_processing.c ****                     break;
 5473              		.loc 1 768 0
 5474 2a2a 44E2     		b	.L287
 5475              	.L207:
 769:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 770:..\src/command_processing.c ****                     switch(*m_addr){
 5476              		.loc 1 770 0
 5477 2a2c 07F5B053 		add	r3, r7, #5632
 5478 2a30 03F10803 		add	r3, r3, #8
 5479 2a34 1B68     		ldr	r3, [r3]
 5480 2a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5481 2a38 012B     		cmp	r3, #1
 5482 2a3a 16D0     		beq	.L245
 5483 2a3c 022B     		cmp	r3, #2
 5484 2a3e 26D0     		beq	.L246
 5485 2a40 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 129


 5486 2a42 00D0     		beq	.L247
 771:..\src/command_processing.c ****                         case 0: 
 772:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 773:..\src/command_processing.c ****                             break;
 774:..\src/command_processing.c ****                         case 1: 
 775:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 776:..\src/command_processing.c ****                             break;
 777:..\src/command_processing.c ****                         case 2: 
 778:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 779:..\src/command_processing.c ****                             break;
 780:..\src/command_processing.c ****                         default:
 781:..\src/command_processing.c ****                             break;
 5487              		.loc 1 781 0
 5488 2a44 35E0     		b	.L248
 5489              	.L247:
 772:..\src/command_processing.c ****                             break;
 5490              		.loc 1 772 0
 5491 2a46 07F13803 		add	r3, r7, #56
 5492 2a4a 183B     		subs	r3, r3, #24
 5493 2a4c 1846     		mov	r0, r3
 5494 2a4e FFF7FEFF 		bl	strlen
 5495 2a52 0346     		mov	r3, r0
 5496 2a54 1A46     		mov	r2, r3
 5497 2a56 07F13803 		add	r3, r7, #56
 5498 2a5a 183B     		subs	r3, r3, #24
 5499 2a5c 1344     		add	r3, r3, r2
 5500 2a5e 9C4A     		ldr	r2, .L308
 5501 2a60 1068     		ldr	r0, [r2]	@ unaligned
 5502 2a62 1860     		str	r0, [r3]	@ unaligned
 5503 2a64 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5504 2a66 9A80     		strh	r2, [r3, #4]	@ unaligned
 773:..\src/command_processing.c ****                         case 1: 
 5505              		.loc 1 773 0
 5506 2a68 23E0     		b	.L248
 5507              	.L245:
 775:..\src/command_processing.c ****                             break;
 5508              		.loc 1 775 0
 5509 2a6a 07F13803 		add	r3, r7, #56
 5510 2a6e 183B     		subs	r3, r3, #24
 5511 2a70 1846     		mov	r0, r3
 5512 2a72 FFF7FEFF 		bl	strlen
 5513 2a76 0346     		mov	r3, r0
 5514 2a78 1A46     		mov	r2, r3
 5515 2a7a 07F13803 		add	r3, r7, #56
 5516 2a7e 183B     		subs	r3, r3, #24
 5517 2a80 1344     		add	r3, r3, r2
 5518 2a82 974A     		ldr	r2, .L308+16
 5519 2a84 1068     		ldr	r0, [r2]	@ unaligned
 5520 2a86 1860     		str	r0, [r3]	@ unaligned
 5521 2a88 1279     		ldrb	r2, [r2, #4]
 5522 2a8a 1A71     		strb	r2, [r3, #4]
 776:..\src/command_processing.c ****                         case 2: 
 5523              		.loc 1 776 0
 5524 2a8c 11E0     		b	.L248
 5525              	.L246:
 778:..\src/command_processing.c ****                             break;
 5526              		.loc 1 778 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 130


 5527 2a8e 07F13803 		add	r3, r7, #56
 5528 2a92 183B     		subs	r3, r3, #24
 5529 2a94 1846     		mov	r0, r3
 5530 2a96 FFF7FEFF 		bl	strlen
 5531 2a9a 0346     		mov	r3, r0
 5532 2a9c 1A46     		mov	r2, r3
 5533 2a9e 07F13803 		add	r3, r7, #56
 5534 2aa2 183B     		subs	r3, r3, #24
 5535 2aa4 1344     		add	r3, r3, r2
 5536 2aa6 8F4A     		ldr	r2, .L308+20
 5537 2aa8 1068     		ldr	r0, [r2]	@ unaligned
 5538 2aaa 1860     		str	r0, [r3]	@ unaligned
 5539 2aac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5540 2aae 9A80     		strh	r2, [r3, #4]	@ unaligned
 779:..\src/command_processing.c ****                         default:
 5541              		.loc 1 779 0
 5542 2ab0 00BF     		nop
 5543              	.L248:
 782:..\src/command_processing.c ****                     } 
 783:..\src/command_processing.c ****                     break;
 5544              		.loc 1 783 0 discriminator 12
 5545 2ab2 03E2     		b	.L199
 5546              	.L208:
 784:..\src/command_processing.c ****                 case 8:     // user menu          
 785:..\src/command_processing.c ****                     switch(*m_addr){
 5547              		.loc 1 785 0
 5548 2ab4 07F5B053 		add	r3, r7, #5632
 5549 2ab8 03F10803 		add	r3, r3, #8
 5550 2abc 1B68     		ldr	r3, [r3]
 5551 2abe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5552 2ac0 012B     		cmp	r3, #1
 5553 2ac2 1AD0     		beq	.L250
 5554 2ac4 022B     		cmp	r3, #2
 5555 2ac6 2CD0     		beq	.L251
 5556 2ac8 002B     		cmp	r3, #0
 5557 2aca 00D0     		beq	.L252
 786:..\src/command_processing.c ****                         case GENERIC_USER:
 787:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 788:..\src/command_processing.c ****                         break;
 789:..\src/command_processing.c ****                         case MARIA:
 790:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 791:..\src/command_processing.c ****                         break;
 792:..\src/command_processing.c ****                         case R01:
 793:..\src/command_processing.c ****                             strcat(aux_str, " R01\0");
 794:..\src/command_processing.c ****                         break;
 795:..\src/command_processing.c ****                     }   
 796:..\src/command_processing.c ****                     break;                    
 5558              		.loc 1 796 0
 5559 2acc F6E1     		b	.L199
 5560              	.L252:
 787:..\src/command_processing.c ****                         break;
 5561              		.loc 1 787 0
 5562 2ace 07F13803 		add	r3, r7, #56
 5563 2ad2 183B     		subs	r3, r3, #24
 5564 2ad4 1846     		mov	r0, r3
 5565 2ad6 FFF7FEFF 		bl	strlen
 5566 2ada 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 131


 5567 2adc 1A46     		mov	r2, r3
 5568 2ade 07F13803 		add	r3, r7, #56
 5569 2ae2 183B     		subs	r3, r3, #24
 5570 2ae4 1344     		add	r3, r3, r2
 5571 2ae6 804A     		ldr	r2, .L308+24
 5572 2ae8 1C46     		mov	r4, r3
 5573 2aea 1346     		mov	r3, r2
 5574 2aec 07CB     		ldmia	r3!, {r0, r1, r2}
 5575 2aee 2060     		str	r0, [r4]	@ unaligned
 5576 2af0 6160     		str	r1, [r4, #4]	@ unaligned
 5577 2af2 A260     		str	r2, [r4, #8]	@ unaligned
 5578 2af4 1B88     		ldrh	r3, [r3]	@ unaligned
 5579 2af6 A381     		strh	r3, [r4, #12]	@ unaligned
 788:..\src/command_processing.c ****                         case MARIA:
 5580              		.loc 1 788 0
 5581 2af8 25E0     		b	.L249
 5582              	.L250:
 790:..\src/command_processing.c ****                         break;
 5583              		.loc 1 790 0
 5584 2afa 07F13803 		add	r3, r7, #56
 5585 2afe 183B     		subs	r3, r3, #24
 5586 2b00 1846     		mov	r0, r3
 5587 2b02 FFF7FEFF 		bl	strlen
 5588 2b06 0346     		mov	r3, r0
 5589 2b08 1A46     		mov	r2, r3
 5590 2b0a 07F13803 		add	r3, r7, #56
 5591 2b0e 183B     		subs	r3, r3, #24
 5592 2b10 1344     		add	r3, r3, r2
 5593 2b12 764A     		ldr	r2, .L308+28
 5594 2b14 1068     		ldr	r0, [r2]	@ unaligned
 5595 2b16 1860     		str	r0, [r3]	@ unaligned
 5596 2b18 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5597 2b1a 9279     		ldrb	r2, [r2, #6]
 5598 2b1c 9980     		strh	r1, [r3, #4]	@ unaligned
 5599 2b1e 9A71     		strb	r2, [r3, #6]
 791:..\src/command_processing.c ****                         case R01:
 5600              		.loc 1 791 0
 5601 2b20 11E0     		b	.L249
 5602              	.L251:
 793:..\src/command_processing.c ****                         break;
 5603              		.loc 1 793 0
 5604 2b22 07F13803 		add	r3, r7, #56
 5605 2b26 183B     		subs	r3, r3, #24
 5606 2b28 1846     		mov	r0, r3
 5607 2b2a FFF7FEFF 		bl	strlen
 5608 2b2e 0346     		mov	r3, r0
 5609 2b30 1A46     		mov	r2, r3
 5610 2b32 07F13803 		add	r3, r7, #56
 5611 2b36 183B     		subs	r3, r3, #24
 5612 2b38 1344     		add	r3, r3, r2
 5613 2b3a 6D4A     		ldr	r2, .L308+32
 5614 2b3c 1068     		ldr	r0, [r2]	@ unaligned
 5615 2b3e 1860     		str	r0, [r3]	@ unaligned
 5616 2b40 1279     		ldrb	r2, [r2, #4]
 5617 2b42 1A71     		strb	r2, [r3, #4]
 794:..\src/command_processing.c ****                     }   
 5618              		.loc 1 794 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 132


 5619 2b44 00BF     		nop
 5620              	.L249:
 5621              		.loc 1 796 0
 5622 2b46 B9E1     		b	.L199
 5623              	.L209:
 797:..\src/command_processing.c ****                 case 9:     // driver type menu
 798:..\src/command_processing.c ****                     switch(*m_addr){
 5624              		.loc 1 798 0
 5625 2b48 07F5B053 		add	r3, r7, #5632
 5626 2b4c 03F10803 		add	r3, r3, #8
 5627 2b50 1B68     		ldr	r3, [r3]
 5628 2b52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5629 2b54 012B     		cmp	r3, #1
 5630 2b56 1BD0     		beq	.L254
 5631 2b58 022B     		cmp	r3, #2
 5632 2b5a 32D0     		beq	.L255
 5633 2b5c 002B     		cmp	r3, #0
 5634 2b5e 00D0     		beq	.L256
 799:..\src/command_processing.c ****                         case 0:
 800:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 801:..\src/command_processing.c ****                         break;
 802:..\src/command_processing.c ****                         case 1:
 803:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 804:..\src/command_processing.c ****                         break;
 805:..\src/command_processing.c ****                         case 2:
 806:..\src/command_processing.c ****                             strcat(aux_str, " ESC (Brushless)\0");
 807:..\src/command_processing.c ****                         break;
 808:..\src/command_processing.c ****                     }
 809:..\src/command_processing.c ****                     break;
 5635              		.loc 1 809 0
 5636 2b60 ACE1     		b	.L199
 5637              	.L256:
 800:..\src/command_processing.c ****                         break;
 5638              		.loc 1 800 0
 5639 2b62 07F13803 		add	r3, r7, #56
 5640 2b66 183B     		subs	r3, r3, #24
 5641 2b68 1846     		mov	r0, r3
 5642 2b6a FFF7FEFF 		bl	strlen
 5643 2b6e 0346     		mov	r3, r0
 5644 2b70 1A46     		mov	r2, r3
 5645 2b72 07F13803 		add	r3, r7, #56
 5646 2b76 183B     		subs	r3, r3, #24
 5647 2b78 1344     		add	r3, r3, r2
 5648 2b7a 5E4A     		ldr	r2, .L308+36
 5649 2b7c 1D46     		mov	r5, r3
 5650 2b7e 1446     		mov	r4, r2
 5651 2b80 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5652 2b82 2860     		str	r0, [r5]	@ unaligned
 5653 2b84 6960     		str	r1, [r5, #4]	@ unaligned
 5654 2b86 AA60     		str	r2, [r5, #8]	@ unaligned
 5655 2b88 EB60     		str	r3, [r5, #12]	@ unaligned
 5656 2b8a 2068     		ldr	r0, [r4]	@ unaligned
 5657 2b8c 2861     		str	r0, [r5, #16]	@ unaligned
 801:..\src/command_processing.c ****                         case 1:
 5658              		.loc 1 801 0
 5659 2b8e 2FE0     		b	.L253
 5660              	.L254:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 133


 803:..\src/command_processing.c ****                         break;
 5661              		.loc 1 803 0
 5662 2b90 07F13803 		add	r3, r7, #56
 5663 2b94 183B     		subs	r3, r3, #24
 5664 2b96 1846     		mov	r0, r3
 5665 2b98 FFF7FEFF 		bl	strlen
 5666 2b9c 0346     		mov	r3, r0
 5667 2b9e 1A46     		mov	r2, r3
 5668 2ba0 07F13803 		add	r3, r7, #56
 5669 2ba4 183B     		subs	r3, r3, #24
 5670 2ba6 1344     		add	r3, r3, r2
 5671 2ba8 534A     		ldr	r2, .L308+40
 5672 2baa 1D46     		mov	r5, r3
 5673 2bac 1446     		mov	r4, r2
 5674 2bae 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5675 2bb0 2860     		str	r0, [r5]	@ unaligned
 5676 2bb2 6960     		str	r1, [r5, #4]	@ unaligned
 5677 2bb4 AA60     		str	r2, [r5, #8]	@ unaligned
 5678 2bb6 EB60     		str	r3, [r5, #12]	@ unaligned
 5679 2bb8 2068     		ldr	r0, [r4]	@ unaligned
 5680 2bba 2861     		str	r0, [r5, #16]	@ unaligned
 5681 2bbc A388     		ldrh	r3, [r4, #4]	@ unaligned
 5682 2bbe AB82     		strh	r3, [r5, #20]	@ unaligned
 804:..\src/command_processing.c ****                         case 2:
 5683              		.loc 1 804 0
 5684 2bc0 16E0     		b	.L253
 5685              	.L255:
 806:..\src/command_processing.c ****                         break;
 5686              		.loc 1 806 0
 5687 2bc2 07F13803 		add	r3, r7, #56
 5688 2bc6 183B     		subs	r3, r3, #24
 5689 2bc8 1846     		mov	r0, r3
 5690 2bca FFF7FEFF 		bl	strlen
 5691 2bce 0346     		mov	r3, r0
 5692 2bd0 1A46     		mov	r2, r3
 5693 2bd2 07F13803 		add	r3, r7, #56
 5694 2bd6 183B     		subs	r3, r3, #24
 5695 2bd8 1344     		add	r3, r3, r2
 5696 2bda 484A     		ldr	r2, .L308+44
 5697 2bdc 1D46     		mov	r5, r3
 5698 2bde 1446     		mov	r4, r2
 5699 2be0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5700 2be2 2860     		str	r0, [r5]	@ unaligned
 5701 2be4 6960     		str	r1, [r5, #4]	@ unaligned
 5702 2be6 AA60     		str	r2, [r5, #8]	@ unaligned
 5703 2be8 EB60     		str	r3, [r5, #12]	@ unaligned
 5704 2bea 2378     		ldrb	r3, [r4]
 5705 2bec 2B74     		strb	r3, [r5, #16]
 807:..\src/command_processing.c ****                     }
 5706              		.loc 1 807 0
 5707 2bee 00BF     		nop
 5708              	.L253:
 5709              		.loc 1 809 0
 5710 2bf0 64E1     		b	.L199
 5711              	.L210:
 810:..\src/command_processing.c ****                 case 10:    // device type menu
 811:..\src/command_processing.c ****                     switch(*m_addr){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 134


 5712              		.loc 1 811 0
 5713 2bf2 07F5B053 		add	r3, r7, #5632
 5714 2bf6 03F10803 		add	r3, r3, #8
 5715 2bfa 1B68     		ldr	r3, [r3]
 5716 2bfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5717 2bfe 042B     		cmp	r3, #4
 5718 2c00 00F25B81 		bhi	.L288
 5719 2c04 01A2     		adr	r2, .L259
 5720 2c06 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5721 2c0a 00BF     		.p2align 2
 5722              	.L259:
 5723 2c0c 212C0000 		.word	.L258+1
 5724 2c10 4D2C0000 		.word	.L260+1
 5725 2c14 7B2C0000 		.word	.L261+1
 5726 2c18 A72C0000 		.word	.L262+1
 5727 2c1c 112D0000 		.word	.L263+1
 5728              		.p2align 1
 5729              	.L258:
 812:..\src/command_processing.c ****                         case 0:
 813:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5730              		.loc 1 813 0
 5731 2c20 07F13803 		add	r3, r7, #56
 5732 2c24 183B     		subs	r3, r3, #24
 5733 2c26 1846     		mov	r0, r3
 5734 2c28 FFF7FEFF 		bl	strlen
 5735 2c2c 0346     		mov	r3, r0
 5736 2c2e 1A46     		mov	r2, r3
 5737 2c30 07F13803 		add	r3, r7, #56
 5738 2c34 183B     		subs	r3, r3, #24
 5739 2c36 1344     		add	r3, r3, r2
 5740 2c38 314A     		ldr	r2, .L308+48
 5741 2c3a 1C46     		mov	r4, r3
 5742 2c3c 1346     		mov	r3, r2
 5743 2c3e 07CB     		ldmia	r3!, {r0, r1, r2}
 5744 2c40 2060     		str	r0, [r4]	@ unaligned
 5745 2c42 6160     		str	r1, [r4, #4]	@ unaligned
 5746 2c44 A260     		str	r2, [r4, #8]	@ unaligned
 5747 2c46 1B88     		ldrh	r3, [r3]	@ unaligned
 5748 2c48 A381     		strh	r3, [r4, #12]	@ unaligned
 814:..\src/command_processing.c ****                         break;
 5749              		.loc 1 814 0
 5750 2c4a 7BE0     		b	.L257
 5751              	.L260:
 815:..\src/command_processing.c ****                         case 1:
 816:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5752              		.loc 1 816 0
 5753 2c4c 07F13803 		add	r3, r7, #56
 5754 2c50 183B     		subs	r3, r3, #24
 5755 2c52 1846     		mov	r0, r3
 5756 2c54 FFF7FEFF 		bl	strlen
 5757 2c58 0346     		mov	r3, r0
 5758 2c5a 1A46     		mov	r2, r3
 5759 2c5c 07F13803 		add	r3, r7, #56
 5760 2c60 183B     		subs	r3, r3, #24
 5761 2c62 1344     		add	r3, r3, r2
 5762 2c64 274A     		ldr	r2, .L308+52
 5763 2c66 1D46     		mov	r5, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 135


 5764 2c68 1446     		mov	r4, r2
 5765 2c6a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5766 2c6c 2860     		str	r0, [r5]	@ unaligned
 5767 2c6e 6960     		str	r1, [r5, #4]	@ unaligned
 5768 2c70 AA60     		str	r2, [r5, #8]	@ unaligned
 5769 2c72 EB60     		str	r3, [r5, #12]	@ unaligned
 5770 2c74 2388     		ldrh	r3, [r4]	@ unaligned
 5771 2c76 2B82     		strh	r3, [r5, #16]	@ unaligned
 817:..\src/command_processing.c ****                         break;
 5772              		.loc 1 817 0
 5773 2c78 64E0     		b	.L257
 5774              	.L261:
 818:..\src/command_processing.c ****                         case 2:
 819:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5775              		.loc 1 819 0
 5776 2c7a 07F13803 		add	r3, r7, #56
 5777 2c7e 183B     		subs	r3, r3, #24
 5778 2c80 1846     		mov	r0, r3
 5779 2c82 FFF7FEFF 		bl	strlen
 5780 2c86 0346     		mov	r3, r0
 5781 2c88 1A46     		mov	r2, r3
 5782 2c8a 07F13803 		add	r3, r7, #56
 5783 2c8e 183B     		subs	r3, r3, #24
 5784 2c90 1344     		add	r3, r3, r2
 5785 2c92 1D4A     		ldr	r2, .L308+56
 5786 2c94 1C46     		mov	r4, r3
 5787 2c96 1346     		mov	r3, r2
 5788 2c98 07CB     		ldmia	r3!, {r0, r1, r2}
 5789 2c9a 2060     		str	r0, [r4]	@ unaligned
 5790 2c9c 6160     		str	r1, [r4, #4]	@ unaligned
 5791 2c9e A260     		str	r2, [r4, #8]	@ unaligned
 5792 2ca0 1B88     		ldrh	r3, [r3]	@ unaligned
 5793 2ca2 A381     		strh	r3, [r4, #12]	@ unaligned
 820:..\src/command_processing.c ****                         break;
 5794              		.loc 1 820 0
 5795 2ca4 4EE0     		b	.L257
 5796              	.L262:
 821:..\src/command_processing.c ****                         case 3:
 822:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5797              		.loc 1 822 0
 5798 2ca6 07F13803 		add	r3, r7, #56
 5799 2caa 183B     		subs	r3, r3, #24
 5800 2cac 1846     		mov	r0, r3
 5801 2cae FFF7FEFF 		bl	strlen
 5802 2cb2 0346     		mov	r3, r0
 5803 2cb4 1A46     		mov	r2, r3
 5804 2cb6 07F13803 		add	r3, r7, #56
 5805 2cba 183B     		subs	r3, r3, #24
 5806 2cbc 1344     		add	r3, r3, r2
 5807 2cbe 134A     		ldr	r2, .L308+60
 5808 2cc0 1C46     		mov	r4, r3
 5809 2cc2 1546     		mov	r5, r2
 5810 2cc4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5811 2cc6 2060     		str	r0, [r4]	@ unaligned
 5812 2cc8 6160     		str	r1, [r4, #4]	@ unaligned
 5813 2cca A260     		str	r2, [r4, #8]	@ unaligned
 5814 2ccc E360     		str	r3, [r4, #12]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 136


 823:..\src/command_processing.c ****                         break;
 5815              		.loc 1 823 0
 5816 2cce 39E0     		b	.L257
 5817              	.L309:
 5818              		.align	2
 5819              	.L308:
 5820 2cd0 EC000000 		.word	.LC106
 5821 2cd4 F4000000 		.word	.LC107
 5822 2cd8 04010000 		.word	.LC108
 5823 2cdc 18010000 		.word	.LC109
 5824 2ce0 28010000 		.word	.LC110
 5825 2ce4 30010000 		.word	.LC111
 5826 2ce8 38010000 		.word	.LC112
 5827 2cec 48010000 		.word	.LC113
 5828 2cf0 50010000 		.word	.LC114
 5829 2cf4 58010000 		.word	.LC115
 5830 2cf8 70010000 		.word	.LC116
 5831 2cfc 88010000 		.word	.LC117
 5832 2d00 9C010000 		.word	.LC118
 5833 2d04 AC010000 		.word	.LC119
 5834 2d08 C0010000 		.word	.LC120
 5835 2d0c D0010000 		.word	.LC121
 5836              	.L263:
 824:..\src/command_processing.c ****                         case 4:
 825:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5837              		.loc 1 825 0
 5838 2d10 07F13803 		add	r3, r7, #56
 5839 2d14 183B     		subs	r3, r3, #24
 5840 2d16 1846     		mov	r0, r3
 5841 2d18 FFF7FEFF 		bl	strlen
 5842 2d1c 0346     		mov	r3, r0
 5843 2d1e 1A46     		mov	r2, r3
 5844 2d20 07F13803 		add	r3, r7, #56
 5845 2d24 183B     		subs	r3, r3, #24
 5846 2d26 1344     		add	r3, r3, r2
 5847 2d28 714A     		ldr	r2, .L310
 5848 2d2a 1D46     		mov	r5, r3
 5849 2d2c 1446     		mov	r4, r2
 5850 2d2e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5851 2d30 2860     		str	r0, [r5]	@ unaligned
 5852 2d32 6960     		str	r1, [r5, #4]	@ unaligned
 5853 2d34 AA60     		str	r2, [r5, #8]	@ unaligned
 5854 2d36 EB60     		str	r3, [r5, #12]	@ unaligned
 5855 2d38 2388     		ldrh	r3, [r4]	@ unaligned
 5856 2d3a A278     		ldrb	r2, [r4, #2]
 5857 2d3c 2B82     		strh	r3, [r5, #16]	@ unaligned
 5858 2d3e 1346     		mov	r3, r2
 5859 2d40 AB74     		strb	r3, [r5, #18]
 826:..\src/command_processing.c ****                         break;
 5860              		.loc 1 826 0
 5861 2d42 00BF     		nop
 5862              	.L257:
 827:..\src/command_processing.c ****                     }
 828:..\src/command_processing.c ****                     break;
 5863              		.loc 1 828 0
 5864 2d44 B9E0     		b	.L288
 5865              	.L211:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 137


 829:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 830:..\src/command_processing.c ****                     switch(*m_addr){
 5866              		.loc 1 830 0
 5867 2d46 07F5B053 		add	r3, r7, #5632
 5868 2d4a 03F10803 		add	r3, r3, #8
 5869 2d4e 1B68     		ldr	r3, [r3]
 5870 2d50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5871 2d52 002B     		cmp	r3, #0
 5872 2d54 02D0     		beq	.L265
 5873 2d56 012B     		cmp	r3, #1
 5874 2d58 37D0     		beq	.L266
 831:..\src/command_processing.c ****                         case 0:
 832:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 833:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 834:..\src/command_processing.c ****                             }
 835:..\src/command_processing.c ****                             else {
 836:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist,Slow:hand\0");
 837:..\src/command_processing.c ****                             }                            
 838:..\src/command_processing.c ****                         break;
 839:..\src/command_processing.c ****                         case 1:
 840:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 841:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 842:..\src/command_processing.c ****                             }
 843:..\src/command_processing.c ****                             else {
 844:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist,Fast:hand\0");
 845:..\src/command_processing.c ****                             }
 846:..\src/command_processing.c ****                         break;
 847:..\src/command_processing.c ****                     }
 848:..\src/command_processing.c ****                     break;
 5875              		.loc 1 848 0
 5876 2d5a AFE0     		b	.L199
 5877              	.L265:
 832:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 5878              		.loc 1 832 0
 5879 2d5c 654B     		ldr	r3, .L310+4
 5880 2d5e 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5881 2d62 042B     		cmp	r3, #4
 5882 2d64 18D1     		bne	.L267
 833:..\src/command_processing.c ****                             }
 5883              		.loc 1 833 0
 5884 2d66 07F13803 		add	r3, r7, #56
 5885 2d6a 183B     		subs	r3, r3, #24
 5886 2d6c 1846     		mov	r0, r3
 5887 2d6e FFF7FEFF 		bl	strlen
 5888 2d72 0346     		mov	r3, r0
 5889 2d74 1A46     		mov	r2, r3
 5890 2d76 07F13803 		add	r3, r7, #56
 5891 2d7a 183B     		subs	r3, r3, #24
 5892 2d7c 1344     		add	r3, r3, r2
 5893 2d7e 5E4A     		ldr	r2, .L310+8
 5894 2d80 1D46     		mov	r5, r3
 5895 2d82 1446     		mov	r4, r2
 5896 2d84 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5897 2d86 2860     		str	r0, [r5]	@ unaligned
 5898 2d88 6960     		str	r1, [r5, #4]	@ unaligned
 5899 2d8a AA60     		str	r2, [r5, #8]	@ unaligned
 5900 2d8c EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 138


 5901 2d8e 2068     		ldr	r0, [r4]	@ unaligned
 5902 2d90 2861     		str	r0, [r5, #16]	@ unaligned
 5903 2d92 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5904 2d94 AB82     		strh	r3, [r5, #20]	@ unaligned
 838:..\src/command_processing.c ****                         case 1:
 5905              		.loc 1 838 0
 5906 2d96 4FE0     		b	.L264
 5907              	.L267:
 836:..\src/command_processing.c ****                             }                            
 5908              		.loc 1 836 0
 5909 2d98 07F13803 		add	r3, r7, #56
 5910 2d9c 183B     		subs	r3, r3, #24
 5911 2d9e 1846     		mov	r0, r3
 5912 2da0 FFF7FEFF 		bl	strlen
 5913 2da4 0346     		mov	r3, r0
 5914 2da6 1A46     		mov	r2, r3
 5915 2da8 07F13803 		add	r3, r7, #56
 5916 2dac 183B     		subs	r3, r3, #24
 5917 2dae 1344     		add	r3, r3, r2
 5918 2db0 524A     		ldr	r2, .L310+12
 5919 2db2 1D46     		mov	r5, r3
 5920 2db4 1446     		mov	r4, r2
 5921 2db6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5922 2db8 2860     		str	r0, [r5]	@ unaligned
 5923 2dba 6960     		str	r1, [r5, #4]	@ unaligned
 5924 2dbc AA60     		str	r2, [r5, #8]	@ unaligned
 5925 2dbe EB60     		str	r3, [r5, #12]	@ unaligned
 5926 2dc0 2068     		ldr	r0, [r4]	@ unaligned
 5927 2dc2 2861     		str	r0, [r5, #16]	@ unaligned
 5928 2dc4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5929 2dc6 AB82     		strh	r3, [r5, #20]	@ unaligned
 838:..\src/command_processing.c ****                         case 1:
 5930              		.loc 1 838 0
 5931 2dc8 36E0     		b	.L264
 5932              	.L266:
 840:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 5933              		.loc 1 840 0
 5934 2dca 4A4B     		ldr	r3, .L310+4
 5935 2dcc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5936 2dd0 042B     		cmp	r3, #4
 5937 2dd2 18D1     		bne	.L269
 841:..\src/command_processing.c ****                             }
 5938              		.loc 1 841 0
 5939 2dd4 07F13803 		add	r3, r7, #56
 5940 2dd8 183B     		subs	r3, r3, #24
 5941 2dda 1846     		mov	r0, r3
 5942 2ddc FFF7FEFF 		bl	strlen
 5943 2de0 0346     		mov	r3, r0
 5944 2de2 1A46     		mov	r2, r3
 5945 2de4 07F13803 		add	r3, r7, #56
 5946 2de8 183B     		subs	r3, r3, #24
 5947 2dea 1344     		add	r3, r3, r2
 5948 2dec 444A     		ldr	r2, .L310+16
 5949 2dee 1D46     		mov	r5, r3
 5950 2df0 1446     		mov	r4, r2
 5951 2df2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5952 2df4 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 139


 5953 2df6 6960     		str	r1, [r5, #4]	@ unaligned
 5954 2df8 AA60     		str	r2, [r5, #8]	@ unaligned
 5955 2dfa EB60     		str	r3, [r5, #12]	@ unaligned
 5956 2dfc 2068     		ldr	r0, [r4]	@ unaligned
 5957 2dfe 2861     		str	r0, [r5, #16]	@ unaligned
 5958 2e00 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5959 2e02 AB82     		strh	r3, [r5, #20]	@ unaligned
 846:..\src/command_processing.c ****                     }
 5960              		.loc 1 846 0
 5961 2e04 17E0     		b	.L289
 5962              	.L269:
 844:..\src/command_processing.c ****                             }
 5963              		.loc 1 844 0
 5964 2e06 07F13803 		add	r3, r7, #56
 5965 2e0a 183B     		subs	r3, r3, #24
 5966 2e0c 1846     		mov	r0, r3
 5967 2e0e FFF7FEFF 		bl	strlen
 5968 2e12 0346     		mov	r3, r0
 5969 2e14 1A46     		mov	r2, r3
 5970 2e16 07F13803 		add	r3, r7, #56
 5971 2e1a 183B     		subs	r3, r3, #24
 5972 2e1c 1344     		add	r3, r3, r2
 5973 2e1e 394A     		ldr	r2, .L310+20
 5974 2e20 1D46     		mov	r5, r3
 5975 2e22 1446     		mov	r4, r2
 5976 2e24 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5977 2e26 2860     		str	r0, [r5]	@ unaligned
 5978 2e28 6960     		str	r1, [r5, #4]	@ unaligned
 5979 2e2a AA60     		str	r2, [r5, #8]	@ unaligned
 5980 2e2c EB60     		str	r3, [r5, #12]	@ unaligned
 5981 2e2e 2068     		ldr	r0, [r4]	@ unaligned
 5982 2e30 2861     		str	r0, [r5, #16]	@ unaligned
 5983 2e32 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5984 2e34 AB82     		strh	r3, [r5, #20]	@ unaligned
 5985              	.L289:
 846:..\src/command_processing.c ****                     }
 5986              		.loc 1 846 0
 5987 2e36 00BF     		nop
 5988              	.L264:
 5989              		.loc 1 848 0 discriminator 13
 5990 2e38 40E0     		b	.L199
 5991              	.L212:
 849:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 850:..\src/command_processing.c ****                     switch(*m_addr){
 5992              		.loc 1 850 0
 5993 2e3a 07F5B053 		add	r3, r7, #5632
 5994 2e3e 03F10803 		add	r3, r3, #8
 5995 2e42 1B68     		ldr	r3, [r3]
 5996 2e44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5997 2e46 002B     		cmp	r3, #0
 5998 2e48 02D0     		beq	.L272
 5999 2e4a 012B     		cmp	r3, #1
 6000 2e4c 17D0     		beq	.L273
 851:..\src/command_processing.c ****                         case 0:
 852:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 853:..\src/command_processing.c ****                         break;
 854:..\src/command_processing.c ****                         case 1:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 140


 855:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 856:..\src/command_processing.c ****                         break;
 857:..\src/command_processing.c ****                     }
 858:..\src/command_processing.c ****                     break;
 6001              		.loc 1 858 0
 6002 2e4e 35E0     		b	.L199
 6003              	.L272:
 852:..\src/command_processing.c ****                         break;
 6004              		.loc 1 852 0
 6005 2e50 07F13803 		add	r3, r7, #56
 6006 2e54 183B     		subs	r3, r3, #24
 6007 2e56 1846     		mov	r0, r3
 6008 2e58 FFF7FEFF 		bl	strlen
 6009 2e5c 0346     		mov	r3, r0
 6010 2e5e 1A46     		mov	r2, r3
 6011 2e60 07F13803 		add	r3, r7, #56
 6012 2e64 183B     		subs	r3, r3, #24
 6013 2e66 1344     		add	r3, r3, r2
 6014 2e68 274A     		ldr	r2, .L310+24
 6015 2e6a 1D46     		mov	r5, r3
 6016 2e6c 1446     		mov	r4, r2
 6017 2e6e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 6018 2e70 2860     		str	r0, [r5]	@ unaligned
 6019 2e72 6960     		str	r1, [r5, #4]	@ unaligned
 6020 2e74 AA60     		str	r2, [r5, #8]	@ unaligned
 6021 2e76 EB60     		str	r3, [r5, #12]	@ unaligned
 6022 2e78 2068     		ldr	r0, [r4]	@ unaligned
 6023 2e7a 2861     		str	r0, [r5, #16]	@ unaligned
 853:..\src/command_processing.c ****                         case 1:
 6024              		.loc 1 853 0
 6025 2e7c 16E0     		b	.L271
 6026              	.L273:
 855:..\src/command_processing.c ****                         break;
 6027              		.loc 1 855 0
 6028 2e7e 07F13803 		add	r3, r7, #56
 6029 2e82 183B     		subs	r3, r3, #24
 6030 2e84 1846     		mov	r0, r3
 6031 2e86 FFF7FEFF 		bl	strlen
 6032 2e8a 0346     		mov	r3, r0
 6033 2e8c 1A46     		mov	r2, r3
 6034 2e8e 07F13803 		add	r3, r7, #56
 6035 2e92 183B     		subs	r3, r3, #24
 6036 2e94 1344     		add	r3, r3, r2
 6037 2e96 1D4A     		ldr	r2, .L310+28
 6038 2e98 1D46     		mov	r5, r3
 6039 2e9a 1446     		mov	r4, r2
 6040 2e9c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 6041 2e9e 2860     		str	r0, [r5]	@ unaligned
 6042 2ea0 6960     		str	r1, [r5, #4]	@ unaligned
 6043 2ea2 AA60     		str	r2, [r5, #8]	@ unaligned
 6044 2ea4 EB60     		str	r3, [r5, #12]	@ unaligned
 6045 2ea6 2068     		ldr	r0, [r4]	@ unaligned
 6046 2ea8 2861     		str	r0, [r5, #16]	@ unaligned
 856:..\src/command_processing.c ****                     }
 6047              		.loc 1 856 0
 6048 2eaa 00BF     		nop
 6049              	.L271:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 141


 6050              		.loc 1 858 0
 6051 2eac 06E0     		b	.L199
 6052              	.L285:
 708:..\src/command_processing.c ****                 case 2:     // control mode menu
 6053              		.loc 1 708 0
 6054 2eae 00BF     		nop
 6055 2eb0 04E0     		b	.L199
 6056              	.L286:
 724:..\src/command_processing.c ****                 case 3:     // yes/no menu
 6057              		.loc 1 724 0
 6058 2eb2 00BF     		nop
 6059 2eb4 02E0     		b	.L199
 6060              	.L287:
 768:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 6061              		.loc 1 768 0
 6062 2eb6 00BF     		nop
 6063 2eb8 00E0     		b	.L199
 6064              	.L288:
 828:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 6065              		.loc 1 828 0
 6066 2eba 00BF     		nop
 6067              	.L199:
 859:..\src/command_processing.c ****             }
 860:..\src/command_processing.c ****             //Recomputes string length
 861:..\src/command_processing.c ****             string_length = strlen(aux_str)+1;
 6068              		.loc 1 861 0
 6069 2ebc 07F13803 		add	r3, r7, #56
 6070 2ec0 183B     		subs	r3, r3, #24
 6071 2ec2 1846     		mov	r0, r3
 6072 2ec4 FFF7FEFF 		bl	strlen
 6073 2ec8 0346     		mov	r3, r0
 6074 2eca DBB2     		uxtb	r3, r3
 6075 2ecc 0133     		adds	r3, r3, #1
 6076 2ece 07F5B052 		add	r2, r7, #5632
 6077 2ed2 02F11202 		add	r2, r2, #18
 6078 2ed6 1370     		strb	r3, [r2]
 6079              	.L198:
 862:..\src/command_processing.c ****         }
 863:..\src/command_processing.c **** 
 864:..\src/command_processing.c ****         // Add parameter string to packet
 865:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 6080              		.loc 1 865 0
 6081 2ed8 07F5B053 		add	r3, r7, #5632
 6082 2edc 03F11203 		add	r3, r3, #18
 6083 2ee0 1B78     		ldrb	r3, [r3]
 6084 2ee2 07F5B052 		add	r2, r7, #5632
 6085 2ee6 02F11702 		add	r2, r2, #23
 6086 2eea 1370     		strb	r3, [r2]
 6087 2eec 56E0     		b	.L274
 6088              	.L311:
 6089 2eee 00BF     		.align	2
 6090              	.L310:
 6091 2ef0 E4010000 		.word	.LC122
 6092 2ef4 00000000 		.word	c_mem
 6093 2ef8 F8010000 		.word	.LC123
 6094 2efc 10020000 		.word	.LC124
 6095 2f00 28020000 		.word	.LC125
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 142


 6096 2f04 40020000 		.word	.LC126
 6097 2f08 58020000 		.word	.LC127
 6098 2f0c 70020000 		.word	.LC128
 6099              	.L275:
 866:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length - i] = aux
 6100              		.loc 1 866 0 discriminator 3
 6101 2f10 07F5B053 		add	r3, r7, #5632
 6102 2f14 03F11503 		add	r3, r3, #21
 6103 2f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6104 2f1a 3222     		movs	r2, #50
 6105 2f1c 02FB03F3 		mul	r3, r2, r3
 6106 2f20 1A1D     		adds	r2, r3, #4
 6107 2f22 07F5B053 		add	r3, r7, #5632
 6108 2f26 03F11303 		add	r3, r3, #19
 6109 2f2a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6110 2f2c 07F5B053 		add	r3, r7, #5632
 6111 2f30 03F11503 		add	r3, r3, #21
 6112 2f34 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6113 2f36 07F11803 		add	r3, r7, #24
 6114 2f3a 143B     		subs	r3, r3, #20
 6115 2f3c 1B68     		ldr	r3, [r3]
 6116 2f3e 0344     		add	r3, r3, r0
 6117 2f40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6118 2f42 03FB01F3 		mul	r3, r3, r1
 6119 2f46 1A44     		add	r2, r2, r3
 6120 2f48 07F5B053 		add	r3, r7, #5632
 6121 2f4c 03F11203 		add	r3, r3, #18
 6122 2f50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6123 2f52 1A44     		add	r2, r2, r3
 6124 2f54 07F5B053 		add	r3, r7, #5632
 6125 2f58 03F11703 		add	r3, r3, #23
 6126 2f5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6127 2f5e D21A     		subs	r2, r2, r3
 6128 2f60 07F5B053 		add	r3, r7, #5632
 6129 2f64 03F11203 		add	r3, r3, #18
 6130 2f68 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6131 2f6a 07F5B053 		add	r3, r7, #5632
 6132 2f6e 03F11703 		add	r3, r3, #23
 6133 2f72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6134 2f74 C91A     		subs	r1, r1, r3
 6135 2f76 07F13803 		add	r3, r7, #56
 6136 2f7a 183B     		subs	r3, r3, #24
 6137 2f7c 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 6138 2f7e 07F15803 		add	r3, r7, #88
 6139 2f82 043B     		subs	r3, r3, #4
 6140 2f84 9954     		strb	r1, [r3, r2]
 865:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length - i] = aux
 6141              		.loc 1 865 0 discriminator 3
 6142 2f86 07F5B053 		add	r3, r7, #5632
 6143 2f8a 03F11703 		add	r3, r3, #23
 6144 2f8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6145 2f90 013B     		subs	r3, r3, #1
 6146 2f92 07F5B052 		add	r2, r7, #5632
 6147 2f96 02F11702 		add	r2, r2, #23
 6148 2f9a 1370     		strb	r3, [r2]
 6149              	.L274:
 865:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length - i] = aux
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 143


 6150              		.loc 1 865 0 is_stmt 0 discriminator 1
 6151 2f9c 07F5B053 		add	r3, r7, #5632
 6152 2fa0 03F11703 		add	r3, r3, #23
 6153 2fa4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6154 2fa6 002B     		cmp	r3, #0
 6155 2fa8 B2D1     		bne	.L275
 867:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 868:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6156              		.loc 1 868 0 is_stmt 1
 6157 2faa 07F5B053 		add	r3, r7, #5632
 6158 2fae 03F11503 		add	r3, r3, #21
 6159 2fb2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6160 2fb4 07F11803 		add	r3, r7, #24
 6161 2fb8 103B     		subs	r3, r3, #16
 6162 2fba 1B68     		ldr	r3, [r3]
 6163 2fbc 1344     		add	r3, r3, r2
 6164 2fbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6165 2fc0 002B     		cmp	r3, #0
 6166 2fc2 3CD1     		bne	.L276
 869:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length] = NUM_MEN
 6167              		.loc 1 869 0
 6168 2fc4 07F5B053 		add	r3, r7, #5632
 6169 2fc8 03F11503 		add	r3, r3, #21
 6170 2fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6171 2fce 3222     		movs	r2, #50
 6172 2fd0 02FB03F3 		mul	r3, r2, r3
 6173 2fd4 1A1D     		adds	r2, r3, #4
 6174 2fd6 07F5B053 		add	r3, r7, #5632
 6175 2fda 03F11303 		add	r3, r3, #19
 6176 2fde 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6177 2fe0 07F5B053 		add	r3, r7, #5632
 6178 2fe4 03F11503 		add	r3, r3, #21
 6179 2fe8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6180 2fea 07F11803 		add	r3, r7, #24
 6181 2fee 143B     		subs	r3, r3, #20
 6182 2ff0 1B68     		ldr	r3, [r3]
 6183 2ff2 0344     		add	r3, r3, r0
 6184 2ff4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6185 2ff6 03FB01F3 		mul	r3, r3, r1
 6186 2ffa 1A44     		add	r2, r2, r3
 6187 2ffc 07F5B053 		add	r3, r7, #5632
 6188 3000 03F11203 		add	r3, r3, #18
 6189 3004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6190 3006 1A44     		add	r2, r2, r3
 6191 3008 07F5B053 		add	r3, r7, #5632
 6192 300c 03F11403 		add	r3, r3, #20
 6193 3010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6194 3012 07F5B151 		add	r1, r7, #5664
 6195 3016 01F11001 		add	r1, r1, #16
 6196 301a 0968     		ldr	r1, [r1]
 6197 301c 0B44     		add	r3, r3, r1
 6198 301e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6199 3020 07F15803 		add	r3, r7, #88
 6200 3024 043B     		subs	r3, r3, #4
 6201 3026 9954     		strb	r1, [r3, r2]
 870:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 6202              		.loc 1 870 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 144


 6203 3028 07F5B053 		add	r3, r7, #5632
 6204 302c 03F11403 		add	r3, r3, #20
 6205 3030 1B78     		ldrb	r3, [r3]
 6206 3032 0133     		adds	r3, r3, #1
 6207 3034 07F5B052 		add	r2, r7, #5632
 6208 3038 02F11402 		add	r2, r2, #20
 6209 303c 1370     		strb	r3, [r2]
 6210              	.L276:
 871:..\src/command_processing.c ****         }      
 872:..\src/command_processing.c ****         
 873:..\src/command_processing.c ****         // Add struct index after an empty bit
 874:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 875:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6211              		.loc 1 875 0
 6212 303e 07F5B053 		add	r3, r7, #5632
 6213 3042 03F11503 		add	r3, r3, #21
 6214 3046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6215 3048 07F11803 		add	r3, r7, #24
 6216 304c 103B     		subs	r3, r3, #16
 6217 304e 1B68     		ldr	r3, [r3]
 6218 3050 1344     		add	r3, r3, r2
 6219 3052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6220 3054 002B     		cmp	r3, #0
 6221 3056 32D1     		bne	.L277
 876:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length + 2] = NUM
 6222              		.loc 1 876 0
 6223 3058 07F5B053 		add	r3, r7, #5632
 6224 305c 03F11503 		add	r3, r3, #21
 6225 3060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6226 3062 3222     		movs	r2, #50
 6227 3064 02FB03F3 		mul	r3, r2, r3
 6228 3068 1A1D     		adds	r2, r3, #4
 6229 306a 07F5B053 		add	r3, r7, #5632
 6230 306e 03F11303 		add	r3, r3, #19
 6231 3072 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6232 3074 07F5B053 		add	r3, r7, #5632
 6233 3078 03F11503 		add	r3, r3, #21
 6234 307c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6235 307e 07F11803 		add	r3, r7, #24
 6236 3082 143B     		subs	r3, r3, #20
 6237 3084 1B68     		ldr	r3, [r3]
 6238 3086 0344     		add	r3, r3, r0
 6239 3088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6240 308a 03FB01F3 		mul	r3, r3, r1
 6241 308e 1A44     		add	r2, r2, r3
 6242 3090 07F5B053 		add	r3, r7, #5632
 6243 3094 03F11203 		add	r3, r3, #18
 6244 3098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6245 309a 1344     		add	r3, r3, r2
 6246 309c 9A1C     		adds	r2, r3, #2
 6247 309e 07F5B053 		add	r3, r7, #5632
 6248 30a2 03F11503 		add	r3, r3, #21
 6249 30a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6250 30a8 07F11803 		add	r3, r7, #24
 6251 30ac 183B     		subs	r3, r3, #24
 6252 30ae 1B68     		ldr	r3, [r3]
 6253 30b0 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 145


 6254 30b2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6255 30b4 07F15803 		add	r3, r7, #88
 6256 30b8 043B     		subs	r3, r3, #4
 6257 30ba 9954     		strb	r1, [r3, r2]
 6258 30bc 31E0     		b	.L278
 6259              	.L277:
 877:..\src/command_processing.c ****         }
 878:..\src/command_processing.c ****         else {
 879:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length + 1] = NUM
 6260              		.loc 1 879 0
 6261 30be 07F5B053 		add	r3, r7, #5632
 6262 30c2 03F11503 		add	r3, r3, #21
 6263 30c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6264 30c8 3222     		movs	r2, #50
 6265 30ca 02FB03F3 		mul	r3, r2, r3
 6266 30ce 1A1D     		adds	r2, r3, #4
 6267 30d0 07F5B053 		add	r3, r7, #5632
 6268 30d4 03F11303 		add	r3, r3, #19
 6269 30d8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6270 30da 07F5B053 		add	r3, r7, #5632
 6271 30de 03F11503 		add	r3, r3, #21
 6272 30e2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6273 30e4 07F11803 		add	r3, r7, #24
 6274 30e8 143B     		subs	r3, r3, #20
 6275 30ea 1B68     		ldr	r3, [r3]
 6276 30ec 0344     		add	r3, r3, r0
 6277 30ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6278 30f0 03FB01F3 		mul	r3, r3, r1
 6279 30f4 1A44     		add	r2, r2, r3
 6280 30f6 07F5B053 		add	r3, r7, #5632
 6281 30fa 03F11203 		add	r3, r3, #18
 6282 30fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6283 3100 1344     		add	r3, r3, r2
 6284 3102 5A1C     		adds	r2, r3, #1
 6285 3104 07F5B053 		add	r3, r7, #5632
 6286 3108 03F11503 		add	r3, r3, #21
 6287 310c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6288 310e 07F11803 		add	r3, r7, #24
 6289 3112 183B     		subs	r3, r3, #24
 6290 3114 1B68     		ldr	r3, [r3]
 6291 3116 0B44     		add	r3, r3, r1
 6292 3118 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6293 311a 07F15803 		add	r3, r7, #88
 6294 311e 043B     		subs	r3, r3, #4
 6295 3120 9954     		strb	r1, [r3, r2]
 6296              	.L278:
 409:..\src/command_processing.c ****         
 6297              		.loc 1 409 0 discriminator 2
 6298 3122 07F5B053 		add	r3, r7, #5632
 6299 3126 03F11503 		add	r3, r3, #21
 6300 312a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6301 312c 0133     		adds	r3, r3, #1
 6302 312e 07F5B052 		add	r2, r7, #5632
 6303 3132 02F11502 		add	r2, r2, #21
 6304 3136 1370     		strb	r3, [r2]
 6305              	.L74:
 409:..\src/command_processing.c ****         
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 146


 6306              		.loc 1 409 0 is_stmt 0 discriminator 1
 6307 3138 07F5B053 		add	r3, r7, #5632
 6308 313c 03F11503 		add	r3, r3, #21
 6309 3140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6310 3142 4C2B     		cmp	r3, #76
 6311 3144 7CF6D3AF 		bls	.L279
 880:..\src/command_processing.c ****         }
 881:..\src/command_processing.c ****     }
 882:..\src/command_processing.c **** 
 883:..\src/command_processing.c ****     // Add menu
 884:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 6312              		.loc 1 884 0 is_stmt 1
 6313 3148 0023     		movs	r3, #0
 6314 314a 07F5B052 		add	r2, r7, #5632
 6315 314e 02F11602 		add	r2, r2, #22
 6316 3152 1370     		strb	r3, [r2]
 6317 3154 71E0     		b	.L280
 6318              	.L283:
 885:..\src/command_processing.c ****         string_length = strlen((char*)MENU_STR[j]);
 6319              		.loc 1 885 0
 6320 3156 07F5B053 		add	r3, r7, #5632
 6321 315a 03F11603 		add	r3, r3, #22
 6322 315e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6323 3160 9B00     		lsls	r3, r3, #2
 6324 3162 07F5B152 		add	r2, r7, #5664
 6325 3166 02F11C02 		add	r2, r2, #28
 6326 316a 1268     		ldr	r2, [r2]
 6327 316c 1344     		add	r3, r3, r2
 6328 316e 1B68     		ldr	r3, [r3]
 6329 3170 1846     		mov	r0, r3
 6330 3172 FFF7FEFF 		bl	strlen
 6331 3176 0346     		mov	r3, r0
 6332 3178 07F5B052 		add	r2, r7, #5632
 6333 317c 02F11202 		add	r2, r2, #18
 6334 3180 1370     		strb	r3, [r2]
 886:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 6335              		.loc 1 886 0
 6336 3182 07F5B053 		add	r3, r7, #5632
 6337 3186 03F11203 		add	r3, r3, #18
 6338 318a 1B78     		ldrb	r3, [r3]
 6339 318c 07F5B052 		add	r2, r7, #5632
 6340 3190 02F11702 		add	r2, r2, #23
 6341 3194 1370     		strb	r3, [r2]
 6342 3196 3EE0     		b	.L281
 6343              	.L282:
 887:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_length -
 6344              		.loc 1 887 0 discriminator 3
 6345 3198 07F5B053 		add	r3, r7, #5632
 6346 319c 03F11603 		add	r3, r3, #22
 6347 31a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6348 31a2 9622     		movs	r2, #150
 6349 31a4 02FB03F3 		mul	r3, r2, r3
 6350 31a8 03F60C72 		addw	r2, r3, #3852
 6351 31ac 07F5B053 		add	r3, r7, #5632
 6352 31b0 03F11203 		add	r3, r3, #18
 6353 31b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6354 31b6 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 147


 6355 31b8 07F5B053 		add	r3, r7, #5632
 6356 31bc 03F11703 		add	r3, r3, #23
 6357 31c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6358 31c2 D21A     		subs	r2, r2, r3
 6359 31c4 07F5B053 		add	r3, r7, #5632
 6360 31c8 03F11603 		add	r3, r3, #22
 6361 31cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6362 31ce 9B00     		lsls	r3, r3, #2
 6363 31d0 07F5B151 		add	r1, r7, #5664
 6364 31d4 01F11C01 		add	r1, r1, #28
 6365 31d8 0968     		ldr	r1, [r1]
 6366 31da 0B44     		add	r3, r3, r1
 6367 31dc 1B68     		ldr	r3, [r3]
 6368 31de 07F5B051 		add	r1, r7, #5632
 6369 31e2 01F11201 		add	r1, r1, #18
 6370 31e6 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6371 31e8 07F5B051 		add	r1, r7, #5632
 6372 31ec 01F11701 		add	r1, r1, #23
 6373 31f0 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6374 31f2 411A     		subs	r1, r0, r1
 6375 31f4 0B44     		add	r3, r3, r1
 6376 31f6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6377 31f8 07F15803 		add	r3, r7, #88
 6378 31fc 043B     		subs	r3, r3, #4
 6379 31fe 9954     		strb	r1, [r3, r2]
 886:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 6380              		.loc 1 886 0 discriminator 3
 6381 3200 07F5B053 		add	r3, r7, #5632
 6382 3204 03F11703 		add	r3, r3, #23
 6383 3208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6384 320a 013B     		subs	r3, r3, #1
 6385 320c 07F5B052 		add	r2, r7, #5632
 6386 3210 02F11702 		add	r2, r2, #23
 6387 3214 1370     		strb	r3, [r2]
 6388              	.L281:
 886:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 6389              		.loc 1 886 0 is_stmt 0 discriminator 1
 6390 3216 07F5B053 		add	r3, r7, #5632
 6391 321a 03F11703 		add	r3, r3, #23
 6392 321e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6393 3220 002B     		cmp	r3, #0
 6394 3222 B9D1     		bne	.L282
 884:..\src/command_processing.c ****         string_length = strlen((char*)MENU_STR[j]);
 6395              		.loc 1 884 0 is_stmt 1 discriminator 2
 6396 3224 07F5B053 		add	r3, r7, #5632
 6397 3228 03F11603 		add	r3, r3, #22
 6398 322c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6399 322e 0133     		adds	r3, r3, #1
 6400 3230 07F5B052 		add	r2, r7, #5632
 6401 3234 02F11602 		add	r2, r2, #22
 6402 3238 1370     		strb	r3, [r2]
 6403              	.L280:
 884:..\src/command_processing.c ****         string_length = strlen((char*)MENU_STR[j]);
 6404              		.loc 1 884 0 is_stmt 0 discriminator 1
 6405 323a 07F5B053 		add	r3, r7, #5632
 6406 323e 03F11603 		add	r3, r3, #22
 6407 3242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 148


 6408 3244 0A2B     		cmp	r3, #10
 6409 3246 86D9     		bls	.L283
 888:..\src/command_processing.c ****     }
 889:..\src/command_processing.c ****     
 890:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 6410              		.loc 1 890 0 is_stmt 1
 6411 3248 07F5B053 		add	r3, r7, #5632
 6412 324c 03F11003 		add	r3, r3, #16
 6413 3250 1B88     		ldrh	r3, [r3]
 6414 3252 5C1E     		subs	r4, r3, #1
 6415 3254 07F5B053 		add	r3, r7, #5632
 6416 3258 03F11003 		add	r3, r3, #16
 6417 325c 1B88     		ldrh	r3, [r3]	@ movhi
 6418 325e DBB2     		uxtb	r3, r3
 6419 3260 013B     		subs	r3, r3, #1
 6420 3262 DAB2     		uxtb	r2, r3
 6421 3264 07F15803 		add	r3, r7, #88
 6422 3268 043B     		subs	r3, r3, #4
 6423 326a 1146     		mov	r1, r2
 6424 326c 1846     		mov	r0, r3
 6425 326e FFF7FEFF 		bl	LCRChecksum
 6426 3272 0346     		mov	r3, r0
 6427 3274 1A46     		mov	r2, r3
 6428 3276 07F15803 		add	r3, r7, #88
 6429 327a 043B     		subs	r3, r3, #4
 6430 327c 1A55     		strb	r2, [r3, r4]
 891:..\src/command_processing.c ****     commWrite(packet_data, packet_length);
 6431              		.loc 1 891 0
 6432 327e 07F5B053 		add	r3, r7, #5632
 6433 3282 03F11003 		add	r3, r3, #16
 6434 3286 1A88     		ldrh	r2, [r3]
 6435 3288 07F15803 		add	r3, r7, #88
 6436 328c 043B     		subs	r3, r3, #4
 6437 328e 1146     		mov	r1, r2
 6438 3290 1846     		mov	r0, r3
 6439 3292 FFF7FEFF 		bl	commWrite
 892:..\src/command_processing.c **** }
 6440              		.loc 1 892 0
 6441 3296 00BF     		nop
 6442 3298 07F5B057 		add	r7, r7, #5632
 6443 329c 1C37     		adds	r7, r7, #28
 6444              		.cfi_def_cfa_offset 20
 6445 329e BD46     		mov	sp, r7
 6446              		.cfi_def_cfa_register 13
 6447              		@ sp needed
 6448 32a0 F0BD     		pop	{r4, r5, r6, r7, pc}
 6449              		.cfi_endproc
 6450              	.LFE67:
 6451              		.size	get_param_list, .-get_param_list
 6452 32a2 00BF     		.section	.rodata
 6453 0285 000000   		.align	2
 6454              	.LC130:
 6455 0288 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 6455      204E6F6E 
 6455      650A3120 
 6455      2D3E204C 
 6455      6F772028 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 149


 6456 02b8 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6456      74657220 
 6456      72656164 
 6456      290A3220 
 6456      2D3E2048 
 6457 02e8 62697420 		.ascii	"bit register read)\012\000"
 6457      72656769 
 6457      73746572 
 6457      20726561 
 6457      64290A00 
 6458              		.align	2
 6459              	.LC131:
 6460 02fc 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 6460      20466173 
 6460      743A7379 
 6460      6E322C20 
 6460      536C6F77 
 6461 032c 796E310A 		.ascii	"yn1\012\000"
 6461      00
 6462 0331 000000   		.align	2
 6463              	.LC132:
 6464 0334 30202D3E 		.ascii	"0 -> Fast:wrist,Slow:hand\0121 -> Slow:wrist,Fast:h"
 6464      20466173 
 6464      743A7772 
 6464      6973742C 
 6464      536C6F77 
 6465 0364 616E640A 		.ascii	"and\012\000"
 6465      00
 6466 0369 000000   		.align	2
 6467              	.LC133:
 6468 036c 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6468      20557362 
 6468      0A31202D 
 6468      3E204861 
 6468      6E646C65 
 6469 0397 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6469      20454D47 
 6469      20496E74 
 6469      65677261 
 6469      6C0A3420 
 6470 03c4 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6470      616E6365 
 6470      640A3620 
 6470      2D3E204A 
 6470      6F797374 
 6471 03f1 204E430A 		.ascii	" NC\012\000"
 6471      00
 6472 03f6 0000     		.align	2
 6473              	.LC134:
 6474 03f8 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6474      20506F73 
 6474      6974696F 
 6474      6E0A3120 
 6474      2D3E2050 
 6475 0422 6F736974 		.ascii	"osition and Current\012\000"
 6475      696F6E20 
 6475      616E6420 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 150


 6475      43757272 
 6475      656E740A 
 6476 0437 00       		.align	2
 6477              	.LC135:
 6478 0438 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6478      20446561 
 6478      63746976 
 6478      61746520 
 6478      5B4E4F5D 
 6479 0462 0000     		.align	2
 6480              	.LC136:
 6481 0464 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 6481      20526967 
 6481      68740A31 
 6481      202D3E20 
 6481      4C656674 
 6482 047a 0000     		.align	2
 6483              	.LC137:
 6484 047c 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6484      204F4646 
 6484      0A31202D 
 6484      3E204F4E 
 6484      0A546865 
 6485 04a3 00       		.align	2
 6486              	.LC138:
 6487 04a4 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6487      204E6F6E 
 6487      650A3120 
 6487      2D3E2053 
 6487      442F5254 
 6488 04d1 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6488      0A33202D 
 6488      3E204F74 
 6488      68657220 
 6488      5B4E2F41 
 6489 04fc 00       		.ascii	"\000"
 6490 04fd 000000   		.align	2
 6491              	.LC139:
 6492 0500 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> R01\012The "
 6492      2047656E 
 6492      65726963 
 6492      20757365 
 6492      720A3120 
 6493 052a 626F6172 		.ascii	"board will reset\012\000"
 6493      64207769 
 6493      6C6C2072 
 6493      65736574 
 6493      0A00
 6494              		.align	2
 6495              	.LC140:
 6496 053c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 6496      204D4333 
 6496      33383837 
 6496      20285374 
 6496      616E6461 
 6497 056c 290A3220 		.ascii	")\0122 -> ESC (Brushless)\012The board will reset\012"
 6497      2D3E2045 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 151


 6497      53432028 
 6497      42727573 
 6497      686C6573 
 6498 0598 00       		.ascii	"\000"
 6499 0599 000000   		.align	2
 6500              	.LC141:
 6501 059c 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6501      20534F46 
 6501      5448414E 
 6501      44205052 
 6501      4F0A3120 
 6502 05c9 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6502      4348414D 
 6502      42455253 
 6502      0A33202D 
 6502      3E204F54 
 6503 05f6 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6503      4D4F544F 
 6503      52530A54 
 6503      68652062 
 6503      6F617264 
 6504 0617 00       		.align	2
 6505              	.LC142:
 6506 0618 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6506      20436C6F 
 6506      73653A43 
 6506      572C204F 
 6506      70656E3A 
 6507 0648 00       		.ascii	"\000"
 6508 0649 000000   		.align	2
 6509              	.LC0:
 6510 064c 02       		.byte	2
 6511 064d 07       		.byte	7
 6512 064e 07       		.byte	7
 6513 064f 00       		.byte	0
 6514 0650 00       		.byte	0
 6515 0651 00       		.byte	0
 6516 0652 02       		.byte	2
 6517 0653 03       		.byte	3
 6518 0654 07       		.byte	7
 6519 0655 00       		.byte	0
 6520 0656 05       		.byte	5
 6521 0657 05       		.byte	5
 6522 0658 03       		.byte	3
 6523 0659 04       		.byte	4
 6524 065a 00       		.byte	0
 6525 065b 06       		.byte	6
 6526 065c 02       		.byte	2
 6527 065d 00       		.byte	0
 6528 065e 01       		.byte	1
 6529 065f 00       		.byte	0
 6530 0660 07       		.byte	7
 6531 0661 02       		.byte	2
 6532 0662 05       		.byte	5
 6533 0663 05       		.byte	5
 6534 0664 05       		.byte	5
 6535 0665 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 152


 6536 0666 00       		.byte	0
 6537 0667 00       		.byte	0
 6538 0668 00       		.byte	0
 6539 0669 00       		.byte	0
 6540 066a 00       		.byte	0
 6541 066b 02       		.byte	2
 6542 066c 00       		.byte	0
 6543 066d 02       		.byte	2
 6544 066e 00       		.byte	0
 6545 066f 09       		.byte	9
 6546 0670 02       		.byte	2
 6547 0671 00       		.byte	0
 6548 0672 02       		.byte	2
 6549 0673 00       		.byte	0
 6550 0674 02       		.byte	2
 6551 0675 01       		.byte	1
 6552 0676 00       		.byte	0
 6553 0677 07       		.byte	7
 6554 0678 07       		.byte	7
 6555 0679 00       		.byte	0
 6556 067a 00       		.byte	0
 6557 067b 00       		.byte	0
 6558 067c 02       		.byte	2
 6559 067d 03       		.byte	3
 6560 067e 07       		.byte	7
 6561 067f 00       		.byte	0
 6562 0680 05       		.byte	5
 6563 0681 05       		.byte	5
 6564 0682 03       		.byte	3
 6565 0683 00       		.byte	0
 6566 0684 01       		.byte	1
 6567 0685 00       		.byte	0
 6568 0686 07       		.byte	7
 6569 0687 02       		.byte	2
 6570 0688 00       		.byte	0
 6571 0689 02       		.byte	2
 6572 068a 00       		.byte	0
 6573 068b 02       		.byte	2
 6574 068c 01       		.byte	1
 6575 068d 02       		.byte	2
 6576 068e 02       		.byte	2
 6577 068f 00       		.byte	0
 6578 0690 02       		.byte	2
 6579 0691 02       		.byte	2
 6580 0692 00       		.byte	0
 6581 0693 04       		.byte	4
 6582 0694 03       		.byte	3
 6583 0695 04       		.byte	4
 6584 0696 00       		.byte	0
 6585 0697 00       		.byte	0
 6586 0698 04       		.byte	4
 6587 0699 00       		.byte	0
 6588 069a 00       		.byte	0
 6589 069b 02       		.byte	2
 6590 069c 05       		.byte	5
 6591 069d 07       		.byte	7
 6592 069e 07       		.byte	7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 153


 6593 069f 00       		.align	2
 6594              	.LC1:
 6595 06a0 31202D20 		.ascii	"1 - Device ID:\000"
 6595      44657669 
 6595      63652049 
 6595      443A00
 6596 06af 00       		.align	2
 6597              	.LC2:
 6598 06b0 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6598      506F7369 
 6598      74696F6E 
 6598      20504944 
 6598      205B502C 
 6599              		.align	2
 6600              	.LC3:
 6601 06cc 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 6601      43757272 
 6601      656E7420 
 6601      50494420 
 6601      5B502C20 
 6602 06e7 00       		.align	2
 6603              	.LC4:
 6604 06e8 34202D20 		.ascii	"4 - Startup Activation:\000"
 6604      53746172 
 6604      74757020 
 6604      41637469 
 6604      76617469 
 6605              		.align	2
 6606              	.LC5:
 6607 0700 35202D20 		.ascii	"5 - Input mode:\000"
 6607      496E7075 
 6607      74206D6F 
 6607      64653A00 
 6608              		.align	2
 6609              	.LC6:
 6610 0710 36202D20 		.ascii	"6 - Control mode:\000"
 6610      436F6E74 
 6610      726F6C20 
 6610      6D6F6465 
 6610      3A00
 6611 0722 0000     		.align	2
 6612              	.LC7:
 6613 0724 37202D20 		.ascii	"7 - Resolutions:\000"
 6613      5265736F 
 6613      6C757469 
 6613      6F6E733A 
 6613      00
 6614 0735 000000   		.align	2
 6615              	.LC8:
 6616 0738 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6616      4D656173 
 6616      7572656D 
 6616      656E7420 
 6616      4F666673 
 6617 0751 000000   		.align	2
 6618              	.LC9:
 6619 0754 39202D20 		.ascii	"9 - Multipliers:\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 154


 6619      4D756C74 
 6619      69706C69 
 6619      6572733A 
 6619      00
 6620 0765 000000   		.align	2
 6621              	.LC10:
 6622 0768 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6622      20506F73 
 6622      2E206C69 
 6622      6D697420 
 6622      61637469 
 6623              		.align	2
 6624              	.LC11:
 6625 0780 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6625      20506F73 
 6625      2E206C69 
 6625      6D697473 
 6625      205B696E 
 6626 079d 000000   		.align	2
 6627              	.LC12:
 6628 07a0 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6628      204D6178 
 6628      20737465 
 6628      7073205B 
 6628      6E65672C 
 6629 07bb 00       		.align	2
 6630              	.LC13:
 6631 07bc 3133202D 		.ascii	"13 - Current limit:\000"
 6631      20437572 
 6631      72656E74 
 6631      206C696D 
 6631      69743A00 
 6632              		.align	2
 6633              	.LC14:
 6634 07d0 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6634      20454D47 
 6634      20746872 
 6634      6573686F 
 6634      6C64733A 
 6635 07e5 000000   		.align	2
 6636              	.LC15:
 6637 07e8 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6637      20454D47 
 6637      2063616C 
 6637      69627261 
 6637      74696F6E 
 6638 0809 000000   		.align	2
 6639              	.LC16:
 6640 080c 3136202D 		.ascii	"16 - EMG max values:\000"
 6640      20454D47 
 6640      206D6178 
 6640      2076616C 
 6640      7565733A 
 6641 0821 000000   		.align	2
 6642              	.LC17:
 6643 0824 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6643      20454D47 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 155


 6643      206D6178 
 6643      20737065 
 6643      6564733A 
 6644 0839 000000   		.align	2
 6645              	.LC18:
 6646 083c 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6646      20416273 
 6646      6F6C7574 
 6646      6520656E 
 6646      636F6465 
 6647              		.align	2
 6648              	.LC19:
 6649 085c 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6649      204D6F74 
 6649      6F722068 
 6649      616E646C 
 6649      65207261 
 6650 0875 000000   		.align	2
 6651              	.LC20:
 6652 0878 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6652      2050574D 
 6652      20726573 
 6652      63616C69 
 6652      6E673A00 
 6653              		.align	2
 6654              	.LC21:
 6655 088c 3231202D 		.ascii	"21 - Current lookup:\000"
 6655      20437572 
 6655      72656E74 
 6655      206C6F6F 
 6655      6B75703A 
 6656 08a1 000000   		.align	2
 6657              	.LC22:
 6658 08a4 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6658      20446174 
 6658      65206F66 
 6658      206D6169 
 6658      6E74656E 
 6659 08c6 0000     		.align	2
 6660              	.LC23:
 6661 08c8 3233202D 		.ascii	"23 - Rest position:\000"
 6661      20526573 
 6661      7420706F 
 6661      73697469 
 6661      6F6E3A00 
 6662              		.align	2
 6663              	.LC24:
 6664 08dc 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6664      20526573 
 6664      7420706F 
 6664      73697469 
 6664      6F6E2074 
 6665              		.align	2
 6666              	.LC25:
 6667 0900 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6667      20526573 
 6667      74207665 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 156


 6667      6C20636C 
 6667      6F737572 
 6668 0923 00       		.align	2
 6669              	.LC26:
 6670 0924 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6670      20526573 
 6670      7420706F 
 6670      73697469 
 6670      6F6E2065 
 6671              		.align	2
 6672              	.LC27:
 6673 0940 3237202D 		.ascii	"27 - EMG inversion:\000"
 6673      20454D47 
 6673      20696E76 
 6673      65727369 
 6673      6F6E3A00 
 6674              		.align	2
 6675              	.LC28:
 6676 0954 3238202D 		.ascii	"28 - Hand side:\000"
 6676      2048616E 
 6676      64207369 
 6676      64653A00 
 6677              		.align	2
 6678              	.LC29:
 6679 0964 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6679      20456E61 
 6679      626C6520 
 6679      494D5573 
 6679      3A00
 6680 0976 0000     		.align	2
 6681              	.LC30:
 6682 0978 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6682      20526561 
 6682      64204578 
 6682      70616E73 
 6682      696F6E20 
 6683 0992 0000     		.align	2
 6684              	.LC31:
 6685 0994 3331202D 		.ascii	"31 - Reset counters:\000"
 6685      20526573 
 6685      65742063 
 6685      6F756E74 
 6685      6572733A 
 6686 09a9 000000   		.align	2
 6687              	.LC32:
 6688 09ac 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6688      204C6173 
 6688      74206368 
 6688      65636B65 
 6688      64205469 
 6689 09d2 0000     		.align	2
 6690              	.LC33:
 6691 09d4 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6691      20535049 
 6691      20726561 
 6691      64206465 
 6691      6C617920 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 157


 6692 09ef 00       		.align	2
 6693              	.LC34:
 6694 09f0 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6694      204F6E20 
 6694      626F6172 
 6694      6420494D 
 6694      5520636F 
 6695 0a15 000000   		.align	2
 6696              	.LC35:
 6697 0a18 3335202D 		.ascii	"35 - User ID:\000"
 6697      20557365 
 6697      72204944 
 6697      3A00
 6698 0a26 0000     		.align	2
 6699              	.LC36:
 6700 0a28 3336202D 		.ascii	"36 - User code:\000"
 6700      20557365 
 6700      7220636F 
 6700      64653A00 
 6701              		.align	2
 6702              	.LC37:
 6703 0a38 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6703      20417373 
 6703      6F636961 
 6703      74656420 
 6703      656E636F 
 6704 0a56 0000     		.align	2
 6705              	.LC38:
 6706 0a58 3338202D 		.ascii	"38 - Driver type:\000"
 6706      20447269 
 6706      76657220 
 6706      74797065 
 6706      3A00
 6707 0a6a 0000     		.align	2
 6708              	.LC39:
 6709 0a6c 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6709      2050574D 
 6709      20726174 
 6709      65206C69 
 6709      6D697465 
 6710 0a83 00       		.align	2
 6711              	.LC40:
 6712 0a84 3430202D 		.ascii	"40 - Not reversible:\000"
 6712      204E6F74 
 6712      20726576 
 6712      65727369 
 6712      626C653A 
 6713 0a99 000000   		.align	2
 6714              	.LC41:
 6715 0a9c 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6715      20456E63 
 6715      20696478 
 6715      20757365 
 6715      6420666F 
 6716 0abb 00       		.align	2
 6717              	.LC42:
 6718 0abc 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 158


 6718      20476561 
 6718      72207061 
 6718      72616D73 
 6718      5B4E312C 
 6719 0ada 0000     		.align	2
 6720              	.LC43:
 6721 0adc 3433202D 		.ascii	"43 - Use second motor:\000"
 6721      20557365 
 6721      20736563 
 6721      6F6E6420 
 6721      6D6F746F 
 6722 0af3 00       		.align	2
 6723              	.LC44:
 6724 0af4 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6724      20506F73 
 6724      6974696F 
 6724      6E205049 
 6724      44205B50 
 6725 0b11 000000   		.align	2
 6726              	.LC45:
 6727 0b14 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6727      20437572 
 6727      72656E74 
 6727      20504944 
 6727      205B502C 
 6728              		.align	2
 6729              	.LC46:
 6730 0b30 3436202D 		.ascii	"46 - Startup Activation:\000"
 6730      20537461 
 6730      72747570 
 6730      20416374 
 6730      69766174 
 6731 0b49 000000   		.align	2
 6732              	.LC47:
 6733 0b4c 3437202D 		.ascii	"47 - Input mode:\000"
 6733      20496E70 
 6733      7574206D 
 6733      6F64653A 
 6733      00
 6734 0b5d 000000   		.align	2
 6735              	.LC48:
 6736 0b60 3438202D 		.ascii	"48 - Control mode:\000"
 6736      20436F6E 
 6736      74726F6C 
 6736      206D6F64 
 6736      653A00
 6737 0b73 00       		.align	2
 6738              	.LC49:
 6739 0b74 3439202D 		.ascii	"49 - Resolutions:\000"
 6739      20526573 
 6739      6F6C7574 
 6739      696F6E73 
 6739      3A00
 6740 0b86 0000     		.align	2
 6741              	.LC50:
 6742 0b88 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6742      204D6561 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 159


 6742      73757265 
 6742      6D656E74 
 6742      204F6666 
 6743 0ba2 0000     		.align	2
 6744              	.LC51:
 6745 0ba4 3531202D 		.ascii	"51 - Multipliers:\000"
 6745      204D756C 
 6745      7469706C 
 6745      69657273 
 6745      3A00
 6746 0bb6 0000     		.align	2
 6747              	.LC52:
 6748 0bb8 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6748      20506F73 
 6748      2E206C69 
 6748      6D697420 
 6748      61637469 
 6749              		.align	2
 6750              	.LC53:
 6751 0bd0 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6751      20506F73 
 6751      2E206C69 
 6751      6D697473 
 6751      205B696E 
 6752 0bed 000000   		.align	2
 6753              	.LC54:
 6754 0bf0 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6754      204D6178 
 6754      20737465 
 6754      7073205B 
 6754      6E65672C 
 6755 0c0b 00       		.align	2
 6756              	.LC55:
 6757 0c0c 3535202D 		.ascii	"55 - Current limit:\000"
 6757      20437572 
 6757      72656E74 
 6757      206C696D 
 6757      69743A00 
 6758              		.align	2
 6759              	.LC56:
 6760 0c20 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6760      20416273 
 6760      6F6C7574 
 6760      6520656E 
 6760      636F6465 
 6761              		.align	2
 6762              	.LC57:
 6763 0c40 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6763      204D6F74 
 6763      6F722068 
 6763      616E646C 
 6763      65207261 
 6764 0c59 000000   		.align	2
 6765              	.LC58:
 6766 0c5c 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6766      2050574D 
 6766      20726573 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 160


 6766      63616C69 
 6766      6E673A00 
 6767              		.align	2
 6768              	.LC59:
 6769 0c70 3539202D 		.ascii	"59 - Current lookup:\000"
 6769      20437572 
 6769      72656E74 
 6769      206C6F6F 
 6769      6B75703A 
 6770 0c85 000000   		.align	2
 6771              	.LC60:
 6772 0c88 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6772      20417373 
 6772      6F636961 
 6772      74656420 
 6772      656E636F 
 6773 0ca6 0000     		.align	2
 6774              	.LC61:
 6775 0ca8 3631202D 		.ascii	"61 - Driver type:\000"
 6775      20447269 
 6775      76657220 
 6775      74797065 
 6775      3A00
 6776 0cba 0000     		.align	2
 6777              	.LC62:
 6778 0cbc 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6778      2050574D 
 6778      20726174 
 6778      65206C69 
 6778      6D697465 
 6779 0cd3 00       		.align	2
 6780              	.LC63:
 6781 0cd4 3633202D 		.ascii	"63 - Not reversible:\000"
 6781      204E6F74 
 6781      20726576 
 6781      65727369 
 6781      626C653A 
 6782 0ce9 000000   		.align	2
 6783              	.LC64:
 6784 0cec 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6784      20456E63 
 6784      20696478 
 6784      20757365 
 6784      6420666F 
 6785 0d0b 00       		.align	2
 6786              	.LC65:
 6787 0d0c 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6787      20476561 
 6787      72207061 
 6787      72616D73 
 6787      5B4E312C 
 6788 0d2a 0000     		.align	2
 6789              	.LC66:
 6790 0d2c 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6790      20526561 
 6790      6420656E 
 6790      63207261 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 161


 6790      77206C69 
 6791 0d46 0000     		.align	2
 6792              	.LC67:
 6793 0d48 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6793      20526561 
 6793      6420656E 
 6793      63207261 
 6793      77206C69 
 6794 0d62 0000     		.align	2
 6795              	.LC68:
 6796 0d64 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6796      20526561 
 6796      64206164 
 6796      64697469 
 6796      6F6E616C 
 6797 0d83 00       		.align	2
 6798              	.LC69:
 6799 0d84 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6799      20414443 
 6799      20636861 
 6799      6E6E656C 
 6799      205B312D 
 6800              		.align	2
 6801              	.LC70:
 6802 0d9c 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6802      20414443 
 6802      20636861 
 6802      6E6E656C 
 6802      205B372D 
 6803 0db5 000000   		.align	2
 6804              	.LC71:
 6805 0db8 3731202D 		.ascii	"71 - Record EMG on SD card:\000"
 6805      20526563 
 6805      6F726420 
 6805      454D4720 
 6805      6F6E2053 
 6806              		.align	2
 6807              	.LC72:
 6808 0dd4 3732202D 		.ascii	"72 - Joystick closure speed:\000"
 6808      204A6F79 
 6808      73746963 
 6808      6B20636C 
 6808      6F737572 
 6809 0df1 000000   		.align	2
 6810              	.LC73:
 6811 0df4 3733202D 		.ascii	"73 - Joystick threshold:\000"
 6811      204A6F79 
 6811      73746963 
 6811      6B207468 
 6811      72657368 
 6812 0e0d 000000   		.align	2
 6813              	.LC74:
 6814 0e10 3734202D 		.ascii	"74 - Joystick gains:\000"
 6814      204A6F79 
 6814      73746963 
 6814      6B206761 
 6814      696E733A 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 162


 6815 0e25 000000   		.align	2
 6816              	.LC75:
 6817 0e28 3735202D 		.ascii	"75 - Device type:\000"
 6817      20446576 
 6817      69636520 
 6817      74797065 
 6817      3A00
 6818 0e3a 0000     		.align	2
 6819              	.LC76:
 6820 0e3c 3736202D 		.ascii	"76 - EMG FSM act.mode:\000"
 6820      20454D47 
 6820      2046534D 
 6820      20616374 
 6820      2E6D6F64 
 6821 0e53 00       		.align	2
 6822              	.LC77:
 6823 0e54 3737202D 		.ascii	"77 - Fast act.thresholds:\000"
 6823      20466173 
 6823      74206163 
 6823      742E7468 
 6823      72657368 
 6824 0e6e 0000     		.align	2
 6825              	.LC78:
 6826 0e70 3738202D 		.ascii	"78 - Wrist direction:\000"
 6826      20577269 
 6826      73742064 
 6826      69726563 
 6826      74696F6E 
 6827 0e86 0000     		.align	2
 6828              	.LC79:
 6829 0e88 3739202D 		.ascii	"79 - Slave communication active:\000"
 6829      20536C61 
 6829      76652063 
 6829      6F6D6D75 
 6829      6E696361 
 6830 0ea9 000000   		.align	2
 6831              	.LC80:
 6832 0eac 3830202D 		.ascii	"80 - Slave ID:\000"
 6832      20536C61 
 6832      76652049 
 6832      443A00
 6833 0ebb 00       		.align	2
 6834              	.LC81:
 6835 0ebc 3831202D 		.ascii	"81 - Maximum slave residual current:\000"
 6835      204D6178 
 6835      696D756D 
 6835      20736C61 
 6835      76652072 
 6836 0ee1 000000   		.align	2
 6837              	.LC82:
 6838 0ee4 3832202D 		.ascii	"82 - Maximum pressure feedback (kPa):\000"
 6838      204D6178 
 6838      696D756D 
 6838      20707265 
 6838      73737572 
 6839 0f0a 0000     		.align	2
 6840              	.LC83:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 163


 6841 0f0c 3833202D 		.ascii	"83 - Proportional pressure error gain:\000"
 6841      2050726F 
 6841      706F7274 
 6841      696F6E61 
 6841      6C207072 
 6842 0f33 00       		.align	2
 6843              	.LC129:
 6844 0f34 A0060000 		.word	.LC1
 6845 0f38 B0060000 		.word	.LC2
 6846 0f3c CC060000 		.word	.LC3
 6847 0f40 E8060000 		.word	.LC4
 6848 0f44 00070000 		.word	.LC5
 6849 0f48 10070000 		.word	.LC6
 6850 0f4c 24070000 		.word	.LC7
 6851 0f50 38070000 		.word	.LC8
 6852 0f54 54070000 		.word	.LC9
 6853 0f58 68070000 		.word	.LC10
 6854 0f5c 80070000 		.word	.LC11
 6855 0f60 A0070000 		.word	.LC12
 6856 0f64 BC070000 		.word	.LC13
 6857 0f68 D0070000 		.word	.LC14
 6858 0f6c E8070000 		.word	.LC15
 6859 0f70 0C080000 		.word	.LC16
 6860 0f74 24080000 		.word	.LC17
 6861 0f78 3C080000 		.word	.LC18
 6862 0f7c 5C080000 		.word	.LC19
 6863 0f80 78080000 		.word	.LC20
 6864 0f84 8C080000 		.word	.LC21
 6865 0f88 A4080000 		.word	.LC22
 6866 0f8c C8080000 		.word	.LC23
 6867 0f90 DC080000 		.word	.LC24
 6868 0f94 00090000 		.word	.LC25
 6869 0f98 24090000 		.word	.LC26
 6870 0f9c 40090000 		.word	.LC27
 6871 0fa0 54090000 		.word	.LC28
 6872 0fa4 64090000 		.word	.LC29
 6873 0fa8 78090000 		.word	.LC30
 6874 0fac 94090000 		.word	.LC31
 6875 0fb0 AC090000 		.word	.LC32
 6876 0fb4 D4090000 		.word	.LC33
 6877 0fb8 F0090000 		.word	.LC34
 6878 0fbc 180A0000 		.word	.LC35
 6879 0fc0 280A0000 		.word	.LC36
 6880 0fc4 380A0000 		.word	.LC37
 6881 0fc8 580A0000 		.word	.LC38
 6882 0fcc 6C0A0000 		.word	.LC39
 6883 0fd0 840A0000 		.word	.LC40
 6884 0fd4 9C0A0000 		.word	.LC41
 6885 0fd8 BC0A0000 		.word	.LC42
 6886 0fdc DC0A0000 		.word	.LC43
 6887 0fe0 F40A0000 		.word	.LC44
 6888 0fe4 140B0000 		.word	.LC45
 6889 0fe8 300B0000 		.word	.LC46
 6890 0fec 4C0B0000 		.word	.LC47
 6891 0ff0 600B0000 		.word	.LC48
 6892 0ff4 740B0000 		.word	.LC49
 6893 0ff8 880B0000 		.word	.LC50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 164


 6894 0ffc A40B0000 		.word	.LC51
 6895 1000 B80B0000 		.word	.LC52
 6896 1004 D00B0000 		.word	.LC53
 6897 1008 F00B0000 		.word	.LC54
 6898 100c 0C0C0000 		.word	.LC55
 6899 1010 200C0000 		.word	.LC56
 6900 1014 400C0000 		.word	.LC57
 6901 1018 5C0C0000 		.word	.LC58
 6902 101c 700C0000 		.word	.LC59
 6903 1020 880C0000 		.word	.LC60
 6904 1024 A80C0000 		.word	.LC61
 6905 1028 BC0C0000 		.word	.LC62
 6906 102c D40C0000 		.word	.LC63
 6907 1030 EC0C0000 		.word	.LC64
 6908 1034 0C0D0000 		.word	.LC65
 6909 1038 2C0D0000 		.word	.LC66
 6910 103c 480D0000 		.word	.LC67
 6911 1040 640D0000 		.word	.LC68
 6912 1044 840D0000 		.word	.LC69
 6913 1048 9C0D0000 		.word	.LC70
 6914 104c B80D0000 		.word	.LC71
 6915 1050 D40D0000 		.word	.LC72
 6916 1054 F40D0000 		.word	.LC73
 6917 1058 100E0000 		.word	.LC74
 6918 105c 280E0000 		.word	.LC75
 6919 1060 3C0E0000 		.word	.LC76
 6920 1064 540E0000 		.word	.LC77
 6921 1068 700E0000 		.word	.LC78
 6922 106c 880E0000 		.word	.LC79
 6923 1070 AC0E0000 		.word	.LC80
 6924 1074 BC0E0000 		.word	.LC81
 6925 1078 E40E0000 		.word	.LC82
 6926 107c 0C0F0000 		.word	.LC83
 6927              		.align	2
 6928              	.LC85:
 6929 1080 03       		.byte	3
 6930 1081 01       		.byte	1
 6931 1082 02       		.byte	2
 6932 1083 03       		.byte	3
 6933 1084 03       		.byte	3
 6934 1085 03       		.byte	3
 6935 1086 03       		.byte	3
 6936 1087 03       		.byte	3
 6937 1088 03       		.byte	3
 6938 1089 04       		.byte	4
 6939 108a 05       		.byte	5
 6940 108b 06       		.byte	6
 6941 108c 03       		.byte	3
 6942 108d 07       		.byte	7
 6943 108e 08       		.byte	8
 6944 108f 09       		.byte	9
 6945 1090 03       		.byte	3
 6946 1091 05       		.byte	5
 6947 1092 03       		.byte	3
 6948 1093 01       		.byte	1
 6949 1094 02       		.byte	2
 6950 1095 03       		.byte	3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 165


 6951 1096 03       		.byte	3
 6952 1097 03       		.byte	3
 6953 1098 09       		.byte	9
 6954 1099 03       		.byte	3
 6955 109a 05       		.byte	5
 6956 109b 03       		.byte	3
 6957 109c 0A       		.byte	10
 6958 109d 0B       		.byte	11
 6959 109e 0C       		.byte	12
 6960 109f 03       		.byte	3
 6961              		.align	2
 6962              	.LC86:
 6963 10a0 02       		.byte	2
 6964 10a1 03       		.byte	3
 6965 10a2 08       		.byte	8
 6966 10a3 0B       		.byte	11
 6967 10a4 17       		.byte	23
 6968 10a5 2C       		.byte	44
 6969 10a6 2D       		.byte	45
 6970 10a7 32       		.byte	50
 6971 10a8 35       		.byte	53
 6972 10a9 000000   		.align	2
 6973              	.LC87:
 6974 10ac 02       		.byte	2
 6975 10ad 03       		.byte	3
 6976 10ae 05       		.byte	5
 6977 10af 08       		.byte	8
 6978 10b0 0B       		.byte	11
 6979 10b1 17       		.byte	23
 6980 10b2 18       		.byte	24
 6981 10b3 1C       		.byte	28
 6982 10b4 1F       		.byte	31
 6983 10b5 20       		.byte	32
 6984 10b6 26       		.byte	38
 6985 10b7 2C       		.byte	44
 6986 10b8 2D       		.byte	45
 6987 10b9 2F       		.byte	47
 6988 10ba 32       		.byte	50
 6989 10bb 35       		.byte	53
 6990 10bc 3D       		.byte	61
 6991 10bd 4B       		.byte	75
 6992              		.section	.text.manage_param_list,"ax",%progbits
 6993              		.align	2
 6994              		.global	manage_param_list
 6995              		.thumb
 6996              		.thumb_func
 6997              		.type	manage_param_list, %function
 6998              	manage_param_list:
 6999              	.LFB68:
 893:..\src/command_processing.c **** 
 894:..\src/command_processing.c **** //==============================================================================
 895:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 896:..\src/command_processing.c **** //==============================================================================
 897:..\src/command_processing.c **** 
 898:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 7000              		.loc 1 898 0
 7001              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 166


 7002              		@ args = 0, pretend = 0, frame = 1416
 7003              		@ frame_needed = 1, uses_anonymous_args = 0
 7004 0000 B0B5     		push	{r4, r5, r7, lr}
 7005              		.cfi_def_cfa_offset 16
 7006              		.cfi_offset 4, -16
 7007              		.cfi_offset 5, -12
 7008              		.cfi_offset 7, -8
 7009              		.cfi_offset 14, -4
 7010 0002 ADF5B36D 		sub	sp, sp, #1432
 7011              		.cfi_def_cfa_offset 1448
 7012 0006 04AF     		add	r7, sp, #16
 7013              		.cfi_def_cfa 7, 1432
 7014 0008 0246     		mov	r2, r0
 7015 000a BB1D     		adds	r3, r7, #6
 7016 000c 1A80     		strh	r2, [r3]	@ movhi
 899:..\src/command_processing.c ****     uint8 CYDATA i, j;
 900:..\src/command_processing.c ****     uint8 CYDATA sod;
 901:..\src/command_processing.c ****     uint8 PARAM_IDX;
 902:..\src/command_processing.c ****     int16 aux_int16;
 903:..\src/command_processing.c ****     uint16 aux_uint16;
 904:..\src/command_processing.c ****     int32 aux_int32;
 905:..\src/command_processing.c ****     uint32 aux_uint32;
 906:..\src/command_processing.c ****     float aux_float;
 907:..\src/command_processing.c ****  
 908:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 7017              		.loc 1 908 0
 7018 000e 0023     		movs	r3, #0
 7019 0010 87F87D35 		strb	r3, [r7, #1405]
 909:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 7020              		.loc 1 909 0
 7021 0014 0123     		movs	r3, #1
 7022 0016 87F87C35 		strb	r3, [r7, #1404]
 910:..\src/command_processing.c ****     
 911:..\src/command_processing.c ****     // Arrays
 912:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 7023              		.loc 1 912 0
 7024 001a 054B     		ldr	r3, .L376
 7025 001c C7F88035 		str	r3, [r7, #1408]
 913:..\src/command_processing.c ****     
 914:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 7026              		.loc 1 914 0
 7027 0020 BB1D     		adds	r3, r7, #6
 7028 0022 1B88     		ldrh	r3, [r3]
 7029 0024 002B     		cmp	r3, #0
 7030 0026 07D0     		beq	.L313
 915:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 7031              		.loc 1 915 0
 7032 0028 024B     		ldr	r3, .L376+4
 7033 002a C7F88035 		str	r3, [r7, #1408]
 7034 002e 03E0     		b	.L377
 7035              	.L378:
 7036              		.align	2
 7037              	.L376:
 7038 0030 00000000 		.word	c_mem
 7039 0034 00000000 		.word	g_mem
 7040              	.L377:
 7041              	.L313:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 167


 916:..\src/command_processing.c ****     }
 917:..\src/command_processing.c ****  
 918:..\src/command_processing.c ****     
 919:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 920:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7042              		.loc 1 921 0
 7043 0038 D7F88035 		ldr	r3, [r7, #1408]
 7044 003c 03F1A002 		add	r2, r3, #160
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7045              		.loc 1 920 0
 7046 0040 07F21C43 		addw	r3, r7, #1052
 7047 0044 1A60     		str	r2, [r3]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 7048              		.loc 1 922 0
 7049 0046 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7050 004a 1346     		mov	r3, r2
 7051 004c DB00     		lsls	r3, r3, #3
 7052 004e 9B1A     		subs	r3, r3, r2
 7053 0050 1B01     		lsls	r3, r3, #4
 7054 0052 B033     		adds	r3, r3, #176
 7055 0054 D7F88025 		ldr	r2, [r7, #1408]
 7056 0058 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7057              		.loc 1 920 0
 7058 005a 07F21C43 		addw	r3, r7, #1052
 7059 005e 5A60     		str	r2, [r3, #4]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 7060              		.loc 1 923 0
 7061 0060 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7062 0064 1346     		mov	r3, r2
 7063 0066 DB00     		lsls	r3, r3, #3
 7064 0068 9B1A     		subs	r3, r3, r2
 7065 006a 1B01     		lsls	r3, r3, #4
 7066 006c B833     		adds	r3, r3, #184
 7067 006e D7F88025 		ldr	r2, [r7, #1408]
 7068 0072 1344     		add	r3, r3, r2
 7069 0074 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7070              		.loc 1 920 0
 7071 0076 07F21C43 		addw	r3, r7, #1052
 7072 007a 9A60     		str	r2, [r3, #8]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 7073              		.loc 1 924 0
 7074 007c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7075 0080 1346     		mov	r3, r2
 7076 0082 DB00     		lsls	r3, r3, #3
 7077 0084 9B1A     		subs	r3, r3, r2
 7078 0086 1B01     		lsls	r3, r3, #4
 7079 0088 E033     		adds	r3, r3, #224
 7080 008a D7F88025 		ldr	r2, [r7, #1408]
 7081 008e 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7082              		.loc 1 920 0
 7083 0090 07F21C43 		addw	r3, r7, #1052
 7084 0094 DA60     		str	r2, [r3, #12]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 168


 7085              		.loc 1 925 0
 7086 0096 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7087 009a 1346     		mov	r3, r2
 7088 009c DB00     		lsls	r3, r3, #3
 7089 009e 9B1A     		subs	r3, r3, r2
 7090 00a0 1B01     		lsls	r3, r3, #4
 7091 00a2 03F58473 		add	r3, r3, #264
 7092 00a6 D7F88025 		ldr	r2, [r7, #1408]
 7093 00aa 1344     		add	r3, r3, r2
 7094 00ac 9A1D     		adds	r2, r3, #6
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7095              		.loc 1 920 0
 7096 00ae 07F21C43 		addw	r3, r7, #1052
 7097 00b2 1A61     		str	r2, [r3, #16]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 7098              		.loc 1 926 0
 7099 00b4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7100 00b8 1346     		mov	r3, r2
 7101 00ba DB00     		lsls	r3, r3, #3
 7102 00bc 9B1A     		subs	r3, r3, r2
 7103 00be 1B01     		lsls	r3, r3, #4
 7104 00c0 03F58473 		add	r3, r3, #264
 7105 00c4 D7F88025 		ldr	r2, [r7, #1408]
 7106 00c8 1344     		add	r3, r3, r2
 7107 00ca DA1D     		adds	r2, r3, #7
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7108              		.loc 1 920 0
 7109 00cc 07F21C43 		addw	r3, r7, #1052
 7110 00d0 5A61     		str	r2, [r3, #20]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 7111              		.loc 1 927 0
 7112 00d2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7113 00d6 D7F88015 		ldr	r1, [r7, #1408]
 7114 00da 1346     		mov	r3, r2
 7115 00dc DB00     		lsls	r3, r3, #3
 7116 00de 9B1A     		subs	r3, r3, r2
 7117 00e0 1B01     		lsls	r3, r3, #4
 7118 00e2 0B44     		add	r3, r3, r1
 7119 00e4 03F58873 		add	r3, r3, #272
 7120 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7121 00ea 1A46     		mov	r2, r3
 7122 00ec 1346     		mov	r3, r2
 7123 00ee 5B00     		lsls	r3, r3, #1
 7124 00f0 1344     		add	r3, r3, r2
 7125 00f2 1B01     		lsls	r3, r3, #4
 7126 00f4 03F5C873 		add	r3, r3, #400
 7127 00f8 D7F88025 		ldr	r2, [r7, #1408]
 7128 00fc 1344     		add	r3, r3, r2
 7129 00fe 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7130              		.loc 1 920 0
 7131 0100 07F21C43 		addw	r3, r7, #1052
 7132 0104 9A61     		str	r2, [r3, #24]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 7133              		.loc 1 928 0
 7134 0106 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7135 010a D7F88015 		ldr	r1, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 169


 7136 010e 1346     		mov	r3, r2
 7137 0110 DB00     		lsls	r3, r3, #3
 7138 0112 9B1A     		subs	r3, r3, r2
 7139 0114 1B01     		lsls	r3, r3, #4
 7140 0116 0B44     		add	r3, r3, r1
 7141 0118 03F58873 		add	r3, r3, #272
 7142 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7143 011e 1A46     		mov	r2, r3
 7144 0120 1346     		mov	r3, r2
 7145 0122 5B00     		lsls	r3, r3, #1
 7146 0124 1344     		add	r3, r3, r2
 7147 0126 1B01     		lsls	r3, r3, #4
 7148 0128 03F5CC73 		add	r3, r3, #408
 7149 012c D7F88025 		ldr	r2, [r7, #1408]
 7150 0130 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7151              		.loc 1 920 0
 7152 0132 07F21C43 		addw	r3, r7, #1052
 7153 0136 DA61     		str	r2, [r3, #28]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 7154              		.loc 1 929 0
 7155 0138 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7156 013c D7F88015 		ldr	r1, [r7, #1408]
 7157 0140 1346     		mov	r3, r2
 7158 0142 DB00     		lsls	r3, r3, #3
 7159 0144 9B1A     		subs	r3, r3, r2
 7160 0146 1B01     		lsls	r3, r3, #4
 7161 0148 0B44     		add	r3, r3, r1
 7162 014a 03F58873 		add	r3, r3, #272
 7163 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7164 0150 1A46     		mov	r2, r3
 7165 0152 1346     		mov	r3, r2
 7166 0154 5B00     		lsls	r3, r3, #1
 7167 0156 1344     		add	r3, r3, r2
 7168 0158 1B01     		lsls	r3, r3, #4
 7169 015a 03F5D073 		add	r3, r3, #416
 7170 015e D7F88025 		ldr	r2, [r7, #1408]
 7171 0162 1344     		add	r3, r3, r2
 7172 0164 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7173              		.loc 1 920 0
 7174 0166 07F21C43 		addw	r3, r7, #1052
 7175 016a 1A62     		str	r2, [r3, #32]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 7176              		.loc 1 930 0
 7177 016c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7178 0170 1346     		mov	r3, r2
 7179 0172 DB00     		lsls	r3, r3, #3
 7180 0174 9B1A     		subs	r3, r3, r2
 7181 0176 1B01     		lsls	r3, r3, #4
 7182 0178 E033     		adds	r3, r3, #224
 7183 017a D7F88025 		ldr	r2, [r7, #1408]
 7184 017e 1344     		add	r3, r3, r2
 7185 0180 DA1C     		adds	r2, r3, #3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7186              		.loc 1 920 0
 7187 0182 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 170


 7188 0186 5A62     		str	r2, [r3, #36]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 7189              		.loc 1 931 0
 7190 0188 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7191 018c 1346     		mov	r3, r2
 7192 018e DB00     		lsls	r3, r3, #3
 7193 0190 9B1A     		subs	r3, r3, r2
 7194 0192 1B01     		lsls	r3, r3, #4
 7195 0194 E033     		adds	r3, r3, #224
 7196 0196 D7F88025 		ldr	r2, [r7, #1408]
 7197 019a 1344     		add	r3, r3, r2
 7198 019c 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7199              		.loc 1 920 0
 7200 019e 07F21C43 		addw	r3, r7, #1052
 7201 01a2 9A62     		str	r2, [r3, #40]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 7202              		.loc 1 932 0
 7203 01a4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7204 01a8 1346     		mov	r3, r2
 7205 01aa DB00     		lsls	r3, r3, #3
 7206 01ac 9B1A     		subs	r3, r3, r2
 7207 01ae 1B01     		lsls	r3, r3, #4
 7208 01b0 E833     		adds	r3, r3, #232
 7209 01b2 D7F88025 		ldr	r2, [r7, #1408]
 7210 01b6 1344     		add	r3, r3, r2
 7211 01b8 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7212              		.loc 1 920 0
 7213 01ba 07F21C43 		addw	r3, r7, #1052
 7214 01be DA62     		str	r2, [r3, #44]
 933:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 7215              		.loc 1 933 0
 7216 01c0 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7217 01c4 1346     		mov	r3, r2
 7218 01c6 DB00     		lsls	r3, r3, #3
 7219 01c8 9B1A     		subs	r3, r3, r2
 7220 01ca 1B01     		lsls	r3, r3, #4
 7221 01cc 03F58473 		add	r3, r3, #264
 7222 01d0 D7F88025 		ldr	r2, [r7, #1408]
 7223 01d4 1344     		add	r3, r3, r2
 7224 01d6 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7225              		.loc 1 920 0
 7226 01d8 07F21C43 		addw	r3, r7, #1052
 7227 01dc 1A63     		str	r2, [r3, #48]
 934:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 7228              		.loc 1 934 0
 7229 01de D7F88035 		ldr	r3, [r7, #1408]
 7230 01e2 03F5F872 		add	r2, r3, #496
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7231              		.loc 1 920 0
 7232 01e6 07F21C43 		addw	r3, r7, #1052
 7233 01ea 5A63     		str	r2, [r3, #52]
 935:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 7234              		.loc 1 935 0
 7235 01ec D7F88035 		ldr	r3, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 171


 7236 01f0 03F5FF72 		add	r2, r3, #510
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7237              		.loc 1 920 0
 7238 01f4 07F21C43 		addw	r3, r7, #1052
 7239 01f8 9A63     		str	r2, [r3, #56]
 936:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 7240              		.loc 1 936 0
 7241 01fa D7F88035 		ldr	r3, [r7, #1408]
 7242 01fe 03F5FA72 		add	r2, r3, #500
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7243              		.loc 1 920 0
 7244 0202 07F21C43 		addw	r3, r7, #1052
 7245 0206 DA63     		str	r2, [r3, #60]
 937:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 7246              		.loc 1 937 0
 7247 0208 D7F88035 		ldr	r3, [r7, #1408]
 7248 020c 03F5FE72 		add	r2, r3, #508
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7249              		.loc 1 920 0
 7250 0210 07F21C43 		addw	r3, r7, #1052
 7251 0214 1A64     		str	r2, [r3, #64]
 938:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 7252              		.loc 1 938 0
 7253 0216 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7254 021a D7F88015 		ldr	r1, [r7, #1408]
 7255 021e 1346     		mov	r3, r2
 7256 0220 DB00     		lsls	r3, r3, #3
 7257 0222 9B1A     		subs	r3, r3, r2
 7258 0224 1B01     		lsls	r3, r3, #4
 7259 0226 0B44     		add	r3, r3, r1
 7260 0228 03F58873 		add	r3, r3, #272
 7261 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7262 022e 1A46     		mov	r2, r3
 7263 0230 1346     		mov	r3, r2
 7264 0232 5B00     		lsls	r3, r3, #1
 7265 0234 1344     		add	r3, r3, r2
 7266 0236 1B01     		lsls	r3, r3, #4
 7267 0238 03F5D873 		add	r3, r3, #432
 7268 023c D7F88025 		ldr	r2, [r7, #1408]
 7269 0240 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7270              		.loc 1 920 0
 7271 0242 07F21C43 		addw	r3, r7, #1052
 7272 0246 5A64     		str	r2, [r3, #68]
 939:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 7273              		.loc 1 939 0
 7274 0248 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7275 024c D7F88015 		ldr	r1, [r7, #1408]
 7276 0250 1346     		mov	r3, r2
 7277 0252 DB00     		lsls	r3, r3, #3
 7278 0254 9B1A     		subs	r3, r3, r2
 7279 0256 1B01     		lsls	r3, r3, #4
 7280 0258 0B44     		add	r3, r3, r1
 7281 025a 03F58873 		add	r3, r3, #272
 7282 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7283 0260 1A46     		mov	r2, r3
 7284 0262 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 172


 7285 0264 5B00     		lsls	r3, r3, #1
 7286 0266 1344     		add	r3, r3, r2
 7287 0268 1B01     		lsls	r3, r3, #4
 7288 026a 03F5D873 		add	r3, r3, #432
 7289 026e D7F88025 		ldr	r2, [r7, #1408]
 7290 0272 1344     		add	r3, r3, r2
 7291 0274 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7292              		.loc 1 920 0
 7293 0276 07F21C43 		addw	r3, r7, #1052
 7294 027a 9A64     		str	r2, [r3, #72]
 940:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 7295              		.loc 1 940 0
 7296 027c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7297 0280 1346     		mov	r3, r2
 7298 0282 DB00     		lsls	r3, r3, #3
 7299 0284 9B1A     		subs	r3, r3, r2
 7300 0286 1B01     		lsls	r3, r3, #4
 7301 0288 E033     		adds	r3, r3, #224
 7302 028a D7F88025 		ldr	r2, [r7, #1408]
 7303 028e 1344     		add	r3, r3, r2
 7304 0290 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7305              		.loc 1 920 0
 7306 0292 07F21C43 		addw	r3, r7, #1052
 7307 0296 DA64     		str	r2, [r3, #76]
 941:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 7308              		.loc 1 941 0
 7309 0298 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7310 029c 1346     		mov	r3, r2
 7311 029e DB00     		lsls	r3, r3, #3
 7312 02a0 9B1A     		subs	r3, r3, r2
 7313 02a2 1B01     		lsls	r3, r3, #4
 7314 02a4 F033     		adds	r3, r3, #240
 7315 02a6 D7F88025 		ldr	r2, [r7, #1408]
 7316 02aa 1344     		add	r3, r3, r2
 7317 02ac 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7318              		.loc 1 920 0
 7319 02ae 07F21C43 		addw	r3, r7, #1052
 7320 02b2 1A65     		str	r2, [r3, #80]
 942:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 7321              		.loc 1 942 0
 7322 02b4 D7F88035 		ldr	r3, [r7, #1408]
 7323 02b8 03F1A102 		add	r2, r3, #161
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7324              		.loc 1 920 0
 7325 02bc 07F21C43 		addw	r3, r7, #1052
 7326 02c0 5A65     		str	r2, [r3, #84]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 7327              		.loc 1 943 0
 7328 02c2 D7F88035 		ldr	r3, [r7, #1408]
 7329 02c6 03F52872 		add	r2, r3, #672
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7330              		.loc 1 920 0
 7331 02ca 07F21C43 		addw	r3, r7, #1052
 7332 02ce 9A65     		str	r2, [r3, #88]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 173


 944:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 7333              		.loc 1 944 0
 7334 02d0 D7F88035 		ldr	r3, [r7, #1408]
 7335 02d4 03F52972 		add	r2, r3, #676
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7336              		.loc 1 920 0
 7337 02d8 07F21C43 		addw	r3, r7, #1052
 7338 02dc DA65     		str	r2, [r3, #92]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 7339              		.loc 1 945 0
 7340 02de D7F88035 		ldr	r3, [r7, #1408]
 7341 02e2 03F52A72 		add	r2, r3, #680
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7342              		.loc 1 920 0
 7343 02e6 07F21C43 		addw	r3, r7, #1052
 7344 02ea 1A66     		str	r2, [r3, #96]
 946:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 7345              		.loc 1 946 0
 7346 02ec D7F88035 		ldr	r3, [r7, #1408]
 7347 02f0 03F52B72 		add	r2, r3, #684
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7348              		.loc 1 920 0
 7349 02f4 07F21C43 		addw	r3, r7, #1052
 7350 02f8 5A66     		str	r2, [r3, #100]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 7351              		.loc 1 947 0
 7352 02fa D7F88035 		ldr	r3, [r7, #1408]
 7353 02fe 03F2FF12 		addw	r2, r3, #511
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7354              		.loc 1 920 0
 7355 0302 07F21C43 		addw	r3, r7, #1052
 7356 0306 9A66     		str	r2, [r3, #104]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7357              		.loc 1 948 0
 7358 0308 D7F88035 		ldr	r3, [r7, #1408]
 7359 030c 03F1A702 		add	r2, r3, #167
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7360              		.loc 1 920 0
 7361 0310 07F21C43 		addw	r3, r7, #1052
 7362 0314 DA66     		str	r2, [r3, #108]
 949:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 7363              		.loc 1 949 0
 7364 0316 D7F88035 		ldr	r3, [r7, #1408]
 7365 031a 03F50072 		add	r2, r3, #512
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7366              		.loc 1 920 0
 7367 031e 07F21C43 		addw	r3, r7, #1052
 7368 0322 1A67     		str	r2, [r3, #112]
 950:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 7369              		.loc 1 950 0
 7370 0324 D7F88035 		ldr	r3, [r7, #1408]
 7371 0328 03F22622 		addw	r2, r3, #550
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7372              		.loc 1 920 0
 7373 032c 07F21C43 		addw	r3, r7, #1052
 7374 0330 5A67     		str	r2, [r3, #116]
 951:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 174


 7375              		.loc 1 951 0
 7376 0332 D7F88035 		ldr	r3, [r7, #1408]
 7377 0336 03F1A802 		add	r2, r3, #168
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7378              		.loc 1 920 0
 7379 033a 07F21C43 		addw	r3, r7, #1052
 7380 033e 9A67     		str	r2, [r3, #120]
 952:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7381              		.loc 1 952 0
 7382 0340 D7F88035 		ldr	r3, [r7, #1408]
 7383 0344 03F50872 		add	r2, r3, #544
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7384              		.loc 1 920 0
 7385 0348 07F21C43 		addw	r3, r7, #1052
 7386 034c DA67     		str	r2, [r3, #124]
 953:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7387              		.loc 1 953 0
 7388 034e D7F88035 		ldr	r3, [r7, #1408]
 7389 0352 03F20122 		addw	r2, r3, #513
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7390              		.loc 1 920 0
 7391 0356 07F21C43 		addw	r3, r7, #1052
 7392 035a C3F88020 		str	r2, [r3, #128]
 954:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7393              		.loc 1 954 0
 7394 035e D7F88035 		ldr	r3, [r7, #1408]
 7395 0362 03F20222 		addw	r2, r3, #514
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7396              		.loc 1 920 0
 7397 0366 07F21C43 		addw	r3, r7, #1052
 7398 036a C3F88420 		str	r2, [r3, #132]
 955:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7399              		.loc 1 955 0
 7400 036e D7F88035 		ldr	r3, [r7, #1408]
 7401 0372 03F1AB02 		add	r2, r3, #171
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7402              		.loc 1 920 0
 7403 0376 07F21C43 		addw	r3, r7, #1052
 7404 037a C3F88820 		str	r2, [r3, #136]
 956:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7405              		.loc 1 956 0
 7406 037e D7F88035 		ldr	r3, [r7, #1408]
 7407 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7408 0386 1233     		adds	r3, r3, #18
 7409 0388 5B01     		lsls	r3, r3, #5
 7410 038a D7F88025 		ldr	r2, [r7, #1408]
 7411 038e 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7412              		.loc 1 920 0
 7413 0390 07F21C43 		addw	r3, r7, #1052
 7414 0394 C3F88C20 		str	r2, [r3, #140]
 957:..\src/command_processing.c ****         
 958:..\src/command_processing.c ****         // GENERIC PARAMS
 959:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 7415              		.loc 1 959 0
 7416 0398 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7417 039c 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 175


 7418 039e DB00     		lsls	r3, r3, #3
 7419 03a0 9B1A     		subs	r3, r3, r2
 7420 03a2 1B01     		lsls	r3, r3, #4
 7421 03a4 03F58873 		add	r3, r3, #272
 7422 03a8 D7F88025 		ldr	r2, [r7, #1408]
 7423 03ac 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7424              		.loc 1 920 0
 7425 03ae 07F21C43 		addw	r3, r7, #1052
 7426 03b2 C3F89020 		str	r2, [r3, #144]
 960:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 7427              		.loc 1 960 0
 7428 03b6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7429 03ba 1346     		mov	r3, r2
 7430 03bc DB00     		lsls	r3, r3, #3
 7431 03be 9B1A     		subs	r3, r3, r2
 7432 03c0 1B01     		lsls	r3, r3, #4
 7433 03c2 E033     		adds	r3, r3, #224
 7434 03c4 D7F88025 		ldr	r2, [r7, #1408]
 7435 03c8 1344     		add	r3, r3, r2
 7436 03ca 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7437              		.loc 1 920 0
 7438 03cc 07F21C43 		addw	r3, r7, #1052
 7439 03d0 C3F89420 		str	r2, [r3, #148]
 961:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 7440              		.loc 1 961 0
 7441 03d4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7442 03d8 1346     		mov	r3, r2
 7443 03da DB00     		lsls	r3, r3, #3
 7444 03dc 9B1A     		subs	r3, r3, r2
 7445 03de 1B01     		lsls	r3, r3, #4
 7446 03e0 03F58873 		add	r3, r3, #272
 7447 03e4 D7F88025 		ldr	r2, [r7, #1408]
 7448 03e8 1344     		add	r3, r3, r2
 7449 03ea 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7450              		.loc 1 920 0
 7451 03ec 07F21C43 		addw	r3, r7, #1052
 7452 03f0 C3F89820 		str	r2, [r3, #152]
 962:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 7453              		.loc 1 962 0
 7454 03f4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7455 03f8 1346     		mov	r3, r2
 7456 03fa DB00     		lsls	r3, r3, #3
 7457 03fc 9B1A     		subs	r3, r3, r2
 7458 03fe 1B01     		lsls	r3, r3, #4
 7459 0400 03F58873 		add	r3, r3, #272
 7460 0404 D7F88025 		ldr	r2, [r7, #1408]
 7461 0408 1344     		add	r3, r3, r2
 7462 040a 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7463              		.loc 1 920 0
 7464 040c 07F21C43 		addw	r3, r7, #1052
 7465 0410 C3F89C20 		str	r2, [r3, #156]
 963:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7466              		.loc 1 963 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 176


 7467 0414 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7468 0418 D7F88015 		ldr	r1, [r7, #1408]
 7469 041c 1346     		mov	r3, r2
 7470 041e DB00     		lsls	r3, r3, #3
 7471 0420 9B1A     		subs	r3, r3, r2
 7472 0422 1B01     		lsls	r3, r3, #4
 7473 0424 0B44     		add	r3, r3, r1
 7474 0426 03F58873 		add	r3, r3, #272
 7475 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7476 042c 1A46     		mov	r2, r3
 7477 042e 1346     		mov	r3, r2
 7478 0430 5B00     		lsls	r3, r3, #1
 7479 0432 1344     		add	r3, r3, r2
 7480 0434 1B01     		lsls	r3, r3, #4
 7481 0436 03F5D873 		add	r3, r3, #432
 7482 043a D7F88025 		ldr	r2, [r7, #1408]
 7483 043e 1344     		add	r3, r3, r2
 7484 0440 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7485              		.loc 1 920 0
 7486 0442 07F21C43 		addw	r3, r7, #1052
 7487 0446 C3F8A020 		str	r2, [r3, #160]
 964:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7488              		.loc 1 964 0
 7489 044a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7490 044e D7F88015 		ldr	r1, [r7, #1408]
 7491 0452 1346     		mov	r3, r2
 7492 0454 DB00     		lsls	r3, r3, #3
 7493 0456 9B1A     		subs	r3, r3, r2
 7494 0458 1B01     		lsls	r3, r3, #4
 7495 045a 0B44     		add	r3, r3, r1
 7496 045c 03F58873 		add	r3, r3, #272
 7497 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7498 0462 1A46     		mov	r2, r3
 7499 0464 1346     		mov	r3, r2
 7500 0466 5B00     		lsls	r3, r3, #1
 7501 0468 1344     		add	r3, r3, r2
 7502 046a 1B01     		lsls	r3, r3, #4
 7503 046c 03F5D873 		add	r3, r3, #432
 7504 0470 D7F88025 		ldr	r2, [r7, #1408]
 7505 0474 1344     		add	r3, r3, r2
 7506 0476 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7507              		.loc 1 920 0
 7508 0478 07F21C43 		addw	r3, r7, #1052
 7509 047c C3F8A420 		str	r2, [r3, #164]
 965:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7510              		.loc 1 965 0
 7511 0480 D7F88035 		ldr	r3, [r7, #1408]
 7512 0484 03F1A902 		add	r2, r3, #169
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7513              		.loc 1 920 0
 7514 0488 07F21C43 		addw	r3, r7, #1052
 7515 048c C3F8A820 		str	r2, [r3, #168]
 966:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7516              		.loc 1 966 0
 7517 0490 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 177


 7518 0494 1346     		mov	r3, r2
 7519 0496 DB00     		lsls	r3, r3, #3
 7520 0498 9B1A     		subs	r3, r3, r2
 7521 049a 1B01     		lsls	r3, r3, #4
 7522 049c B033     		adds	r3, r3, #176
 7523 049e D7F88025 		ldr	r2, [r7, #1408]
 7524 04a2 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7525              		.loc 1 920 0
 7526 04a4 07F21C43 		addw	r3, r7, #1052
 7527 04a8 C3F8AC20 		str	r2, [r3, #172]
 967:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7528              		.loc 1 967 0
 7529 04ac 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7530 04b0 1346     		mov	r3, r2
 7531 04b2 DB00     		lsls	r3, r3, #3
 7532 04b4 9B1A     		subs	r3, r3, r2
 7533 04b6 1B01     		lsls	r3, r3, #4
 7534 04b8 B833     		adds	r3, r3, #184
 7535 04ba D7F88025 		ldr	r2, [r7, #1408]
 7536 04be 1344     		add	r3, r3, r2
 7537 04c0 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7538              		.loc 1 920 0
 7539 04c2 07F21C43 		addw	r3, r7, #1052
 7540 04c6 C3F8B020 		str	r2, [r3, #176]
 968:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 7541              		.loc 1 968 0
 7542 04ca 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7543 04ce 1346     		mov	r3, r2
 7544 04d0 DB00     		lsls	r3, r3, #3
 7545 04d2 9B1A     		subs	r3, r3, r2
 7546 04d4 1B01     		lsls	r3, r3, #4
 7547 04d6 E033     		adds	r3, r3, #224
 7548 04d8 D7F88025 		ldr	r2, [r7, #1408]
 7549 04dc 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7550              		.loc 1 920 0
 7551 04de 07F21C43 		addw	r3, r7, #1052
 7552 04e2 C3F8B420 		str	r2, [r3, #180]
 969:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7553              		.loc 1 969 0
 7554 04e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7555 04ea 1346     		mov	r3, r2
 7556 04ec DB00     		lsls	r3, r3, #3
 7557 04ee 9B1A     		subs	r3, r3, r2
 7558 04f0 1B01     		lsls	r3, r3, #4
 7559 04f2 03F58473 		add	r3, r3, #264
 7560 04f6 D7F88025 		ldr	r2, [r7, #1408]
 7561 04fa 1344     		add	r3, r3, r2
 7562 04fc 9A1D     		adds	r2, r3, #6
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7563              		.loc 1 920 0
 7564 04fe 07F21C43 		addw	r3, r7, #1052
 7565 0502 C3F8B820 		str	r2, [r3, #184]
 970:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7566              		.loc 1 970 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 178


 7567 0506 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7568 050a 1346     		mov	r3, r2
 7569 050c DB00     		lsls	r3, r3, #3
 7570 050e 9B1A     		subs	r3, r3, r2
 7571 0510 1B01     		lsls	r3, r3, #4
 7572 0512 03F58473 		add	r3, r3, #264
 7573 0516 D7F88025 		ldr	r2, [r7, #1408]
 7574 051a 1344     		add	r3, r3, r2
 7575 051c DA1D     		adds	r2, r3, #7
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7576              		.loc 1 920 0
 7577 051e 07F21C43 		addw	r3, r7, #1052
 7578 0522 C3F8BC20 		str	r2, [r3, #188]
 971:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 7579              		.loc 1 971 0
 7580 0526 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7581 052a D7F88015 		ldr	r1, [r7, #1408]
 7582 052e 1346     		mov	r3, r2
 7583 0530 DB00     		lsls	r3, r3, #3
 7584 0532 9B1A     		subs	r3, r3, r2
 7585 0534 1B01     		lsls	r3, r3, #4
 7586 0536 0B44     		add	r3, r3, r1
 7587 0538 03F58873 		add	r3, r3, #272
 7588 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7589 053e 1A46     		mov	r2, r3
 7590 0540 1346     		mov	r3, r2
 7591 0542 5B00     		lsls	r3, r3, #1
 7592 0544 1344     		add	r3, r3, r2
 7593 0546 1B01     		lsls	r3, r3, #4
 7594 0548 03F5C873 		add	r3, r3, #400
 7595 054c D7F88025 		ldr	r2, [r7, #1408]
 7596 0550 1344     		add	r3, r3, r2
 7597 0552 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7598              		.loc 1 920 0
 7599 0554 07F21C43 		addw	r3, r7, #1052
 7600 0558 C3F8C020 		str	r2, [r3, #192]
 972:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 7601              		.loc 1 972 0
 7602 055c 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7603 0560 D7F88015 		ldr	r1, [r7, #1408]
 7604 0564 1346     		mov	r3, r2
 7605 0566 DB00     		lsls	r3, r3, #3
 7606 0568 9B1A     		subs	r3, r3, r2
 7607 056a 1B01     		lsls	r3, r3, #4
 7608 056c 0B44     		add	r3, r3, r1
 7609 056e 03F58873 		add	r3, r3, #272
 7610 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7611 0574 1A46     		mov	r2, r3
 7612 0576 1346     		mov	r3, r2
 7613 0578 5B00     		lsls	r3, r3, #1
 7614 057a 1344     		add	r3, r3, r2
 7615 057c 1B01     		lsls	r3, r3, #4
 7616 057e 03F5CC73 		add	r3, r3, #408
 7617 0582 D7F88025 		ldr	r2, [r7, #1408]
 7618 0586 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 179


 7619              		.loc 1 920 0
 7620 0588 07F21C43 		addw	r3, r7, #1052
 7621 058c C3F8C420 		str	r2, [r3, #196]
 973:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7622              		.loc 1 973 0
 7623 0590 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7624 0594 D7F88015 		ldr	r1, [r7, #1408]
 7625 0598 1346     		mov	r3, r2
 7626 059a DB00     		lsls	r3, r3, #3
 7627 059c 9B1A     		subs	r3, r3, r2
 7628 059e 1B01     		lsls	r3, r3, #4
 7629 05a0 0B44     		add	r3, r3, r1
 7630 05a2 03F58873 		add	r3, r3, #272
 7631 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7632 05a8 1A46     		mov	r2, r3
 7633 05aa 1346     		mov	r3, r2
 7634 05ac 5B00     		lsls	r3, r3, #1
 7635 05ae 1344     		add	r3, r3, r2
 7636 05b0 1B01     		lsls	r3, r3, #4
 7637 05b2 03F5D073 		add	r3, r3, #416
 7638 05b6 D7F88025 		ldr	r2, [r7, #1408]
 7639 05ba 1344     		add	r3, r3, r2
 7640 05bc 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7641              		.loc 1 920 0
 7642 05be 07F21C43 		addw	r3, r7, #1052
 7643 05c2 C3F8C820 		str	r2, [r3, #200]
 974:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7644              		.loc 1 974 0
 7645 05c6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7646 05ca 1346     		mov	r3, r2
 7647 05cc DB00     		lsls	r3, r3, #3
 7648 05ce 9B1A     		subs	r3, r3, r2
 7649 05d0 1B01     		lsls	r3, r3, #4
 7650 05d2 E033     		adds	r3, r3, #224
 7651 05d4 D7F88025 		ldr	r2, [r7, #1408]
 7652 05d8 1344     		add	r3, r3, r2
 7653 05da DA1C     		adds	r2, r3, #3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7654              		.loc 1 920 0
 7655 05dc 07F21C43 		addw	r3, r7, #1052
 7656 05e0 C3F8CC20 		str	r2, [r3, #204]
 975:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7657              		.loc 1 975 0
 7658 05e4 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7659 05e8 1346     		mov	r3, r2
 7660 05ea DB00     		lsls	r3, r3, #3
 7661 05ec 9B1A     		subs	r3, r3, r2
 7662 05ee 1B01     		lsls	r3, r3, #4
 7663 05f0 E033     		adds	r3, r3, #224
 7664 05f2 D7F88025 		ldr	r2, [r7, #1408]
 7665 05f6 1344     		add	r3, r3, r2
 7666 05f8 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7667              		.loc 1 920 0
 7668 05fa 07F21C43 		addw	r3, r7, #1052
 7669 05fe C3F8D020 		str	r2, [r3, #208]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 180


 976:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7670              		.loc 1 976 0
 7671 0602 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7672 0606 1346     		mov	r3, r2
 7673 0608 DB00     		lsls	r3, r3, #3
 7674 060a 9B1A     		subs	r3, r3, r2
 7675 060c 1B01     		lsls	r3, r3, #4
 7676 060e E833     		adds	r3, r3, #232
 7677 0610 D7F88025 		ldr	r2, [r7, #1408]
 7678 0614 1344     		add	r3, r3, r2
 7679 0616 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7680              		.loc 1 920 0
 7681 0618 07F21C43 		addw	r3, r7, #1052
 7682 061c C3F8D420 		str	r2, [r3, #212]
 977:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7683              		.loc 1 977 0
 7684 0620 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7685 0624 1346     		mov	r3, r2
 7686 0626 DB00     		lsls	r3, r3, #3
 7687 0628 9B1A     		subs	r3, r3, r2
 7688 062a 1B01     		lsls	r3, r3, #4
 7689 062c 03F58473 		add	r3, r3, #264
 7690 0630 D7F88025 		ldr	r2, [r7, #1408]
 7691 0634 1344     		add	r3, r3, r2
 7692 0636 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7693              		.loc 1 920 0
 7694 0638 07F21C43 		addw	r3, r7, #1052
 7695 063c C3F8D820 		str	r2, [r3, #216]
 978:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7696              		.loc 1 978 0
 7697 0640 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7698 0644 D7F88015 		ldr	r1, [r7, #1408]
 7699 0648 1346     		mov	r3, r2
 7700 064a DB00     		lsls	r3, r3, #3
 7701 064c 9B1A     		subs	r3, r3, r2
 7702 064e 1B01     		lsls	r3, r3, #4
 7703 0650 0B44     		add	r3, r3, r1
 7704 0652 03F58873 		add	r3, r3, #272
 7705 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7706 0658 1A46     		mov	r2, r3
 7707 065a 1346     		mov	r3, r2
 7708 065c 5B00     		lsls	r3, r3, #1
 7709 065e 1344     		add	r3, r3, r2
 7710 0660 1B01     		lsls	r3, r3, #4
 7711 0662 03F5D873 		add	r3, r3, #432
 7712 0666 D7F88025 		ldr	r2, [r7, #1408]
 7713 066a 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7714              		.loc 1 920 0
 7715 066c 07F21C43 		addw	r3, r7, #1052
 7716 0670 C3F8DC20 		str	r2, [r3, #220]
 979:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7717              		.loc 1 979 0
 7718 0674 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7719 0678 D7F88015 		ldr	r1, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 181


 7720 067c 1346     		mov	r3, r2
 7721 067e DB00     		lsls	r3, r3, #3
 7722 0680 9B1A     		subs	r3, r3, r2
 7723 0682 1B01     		lsls	r3, r3, #4
 7724 0684 0B44     		add	r3, r3, r1
 7725 0686 03F58873 		add	r3, r3, #272
 7726 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7727 068c 1A46     		mov	r2, r3
 7728 068e 1346     		mov	r3, r2
 7729 0690 5B00     		lsls	r3, r3, #1
 7730 0692 1344     		add	r3, r3, r2
 7731 0694 1B01     		lsls	r3, r3, #4
 7732 0696 03F5D873 		add	r3, r3, #432
 7733 069a D7F88025 		ldr	r2, [r7, #1408]
 7734 069e 1344     		add	r3, r3, r2
 7735 06a0 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7736              		.loc 1 920 0
 7737 06a2 07F21C43 		addw	r3, r7, #1052
 7738 06a6 C3F8E020 		str	r2, [r3, #224]
 980:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7739              		.loc 1 980 0
 7740 06aa 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7741 06ae 1346     		mov	r3, r2
 7742 06b0 DB00     		lsls	r3, r3, #3
 7743 06b2 9B1A     		subs	r3, r3, r2
 7744 06b4 1B01     		lsls	r3, r3, #4
 7745 06b6 E033     		adds	r3, r3, #224
 7746 06b8 D7F88025 		ldr	r2, [r7, #1408]
 7747 06bc 1344     		add	r3, r3, r2
 7748 06be 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7749              		.loc 1 920 0
 7750 06c0 07F21C43 		addw	r3, r7, #1052
 7751 06c4 C3F8E420 		str	r2, [r3, #228]
 981:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7752              		.loc 1 981 0
 7753 06c8 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7754 06cc 1346     		mov	r3, r2
 7755 06ce DB00     		lsls	r3, r3, #3
 7756 06d0 9B1A     		subs	r3, r3, r2
 7757 06d2 1B01     		lsls	r3, r3, #4
 7758 06d4 F033     		adds	r3, r3, #240
 7759 06d6 D7F88025 		ldr	r2, [r7, #1408]
 7760 06da 1344     		add	r3, r3, r2
 7761 06dc 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7762              		.loc 1 920 0
 7763 06de 07F21C43 		addw	r3, r7, #1052
 7764 06e2 C3F8E820 		str	r2, [r3, #232]
 982:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7765              		.loc 1 982 0
 7766 06e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7767 06ea 1346     		mov	r3, r2
 7768 06ec DB00     		lsls	r3, r3, #3
 7769 06ee 9B1A     		subs	r3, r3, r2
 7770 06f0 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 182


 7771 06f2 03F58873 		add	r3, r3, #272
 7772 06f6 D7F88025 		ldr	r2, [r7, #1408]
 7773 06fa 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7774              		.loc 1 920 0
 7775 06fc 07F21C43 		addw	r3, r7, #1052
 7776 0700 C3F8EC20 		str	r2, [r3, #236]
 983:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7777              		.loc 1 983 0
 7778 0704 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7779 0708 1346     		mov	r3, r2
 7780 070a DB00     		lsls	r3, r3, #3
 7781 070c 9B1A     		subs	r3, r3, r2
 7782 070e 1B01     		lsls	r3, r3, #4
 7783 0710 E033     		adds	r3, r3, #224
 7784 0712 D7F88025 		ldr	r2, [r7, #1408]
 7785 0716 1344     		add	r3, r3, r2
 7786 0718 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7787              		.loc 1 920 0
 7788 071a 07F21C43 		addw	r3, r7, #1052
 7789 071e C3F8F020 		str	r2, [r3, #240]
 984:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7790              		.loc 1 984 0
 7791 0722 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7792 0726 1346     		mov	r3, r2
 7793 0728 DB00     		lsls	r3, r3, #3
 7794 072a 9B1A     		subs	r3, r3, r2
 7795 072c 1B01     		lsls	r3, r3, #4
 7796 072e 03F58873 		add	r3, r3, #272
 7797 0732 D7F88025 		ldr	r2, [r7, #1408]
 7798 0736 1344     		add	r3, r3, r2
 7799 0738 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7800              		.loc 1 920 0
 7801 073a 07F21C43 		addw	r3, r7, #1052
 7802 073e C3F8F420 		str	r2, [r3, #244]
 985:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7803              		.loc 1 985 0
 7804 0742 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7805 0746 1346     		mov	r3, r2
 7806 0748 DB00     		lsls	r3, r3, #3
 7807 074a 9B1A     		subs	r3, r3, r2
 7808 074c 1B01     		lsls	r3, r3, #4
 7809 074e 03F58873 		add	r3, r3, #272
 7810 0752 D7F88025 		ldr	r2, [r7, #1408]
 7811 0756 1344     		add	r3, r3, r2
 7812 0758 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7813              		.loc 1 920 0
 7814 075a 07F21C43 		addw	r3, r7, #1052
 7815 075e C3F8F820 		str	r2, [r3, #248]
 986:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7816              		.loc 1 986 0
 7817 0762 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7818 0766 D7F88015 		ldr	r1, [r7, #1408]
 7819 076a 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 183


 7820 076c DB00     		lsls	r3, r3, #3
 7821 076e 9B1A     		subs	r3, r3, r2
 7822 0770 1B01     		lsls	r3, r3, #4
 7823 0772 0B44     		add	r3, r3, r1
 7824 0774 03F58873 		add	r3, r3, #272
 7825 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7826 077a 1A46     		mov	r2, r3
 7827 077c 1346     		mov	r3, r2
 7828 077e 5B00     		lsls	r3, r3, #1
 7829 0780 1344     		add	r3, r3, r2
 7830 0782 1B01     		lsls	r3, r3, #4
 7831 0784 03F5D873 		add	r3, r3, #432
 7832 0788 D7F88025 		ldr	r2, [r7, #1408]
 7833 078c 1344     		add	r3, r3, r2
 7834 078e 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7835              		.loc 1 920 0
 7836 0790 07F21C43 		addw	r3, r7, #1052
 7837 0794 C3F8FC20 		str	r2, [r3, #252]
 987:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7838              		.loc 1 987 0
 7839 0798 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7840 079c D7F88015 		ldr	r1, [r7, #1408]
 7841 07a0 1346     		mov	r3, r2
 7842 07a2 DB00     		lsls	r3, r3, #3
 7843 07a4 9B1A     		subs	r3, r3, r2
 7844 07a6 1B01     		lsls	r3, r3, #4
 7845 07a8 0B44     		add	r3, r3, r1
 7846 07aa 03F58873 		add	r3, r3, #272
 7847 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7848 07b0 1A46     		mov	r2, r3
 7849 07b2 1346     		mov	r3, r2
 7850 07b4 5B00     		lsls	r3, r3, #1
 7851 07b6 1344     		add	r3, r3, r2
 7852 07b8 1B01     		lsls	r3, r3, #4
 7853 07ba 03F5D873 		add	r3, r3, #432
 7854 07be D7F88025 		ldr	r2, [r7, #1408]
 7855 07c2 1344     		add	r3, r3, r2
 7856 07c4 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7857              		.loc 1 920 0
 7858 07c6 07F21C43 		addw	r3, r7, #1052
 7859 07ca C3F80021 		str	r2, [r3, #256]
 988:..\src/command_processing.c ****         
 989:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7860              		.loc 1 989 0
 7861 07ce D7F88035 		ldr	r3, [r7, #1408]
 7862 07d2 03F5C872 		add	r2, r3, #400
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7863              		.loc 1 920 0
 7864 07d6 07F21C43 		addw	r3, r7, #1052
 7865 07da C3F80421 		str	r2, [r3, #260]
 990:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7866              		.loc 1 990 0
 7867 07de D7F88035 		ldr	r3, [r7, #1408]
 7868 07e2 03F5E072 		add	r2, r3, #448
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 184


 7869              		.loc 1 920 0
 7870 07e6 07F21C43 		addw	r3, r7, #1052
 7871 07ea C3F80821 		str	r2, [r3, #264]
 991:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7872              		.loc 1 991 0
 7873 07ee D7F88035 		ldr	r3, [r7, #1408]
 7874 07f2 03F22722 		addw	r2, r3, #551
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7875              		.loc 1 920 0
 7876 07f6 07F21C43 		addw	r3, r7, #1052
 7877 07fa C3F80C21 		str	r2, [r3, #268]
 992:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7878              		.loc 1 992 0
 7879 07fe D7F88035 		ldr	r3, [r7, #1408]
 7880 0802 03F50A72 		add	r2, r3, #552
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7881              		.loc 1 920 0
 7882 0806 07F21C43 		addw	r3, r7, #1052
 7883 080a C3F81021 		str	r2, [r3, #272]
 993:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 7884              		.loc 1 993 0
 7885 080e D7F88035 		ldr	r3, [r7, #1408]
 7886 0812 03F22E22 		addw	r2, r3, #558
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7887              		.loc 1 920 0
 7888 0816 07F21C43 		addw	r3, r7, #1052
 7889 081a C3F81421 		str	r2, [r3, #276]
 994:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.record_EMG_history_on_SD),
 7890              		.loc 1 994 0
 7891 081e D7F88035 		ldr	r3, [r7, #1408]
 7892 0822 03F50D72 		add	r2, r3, #564
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7893              		.loc 1 920 0
 7894 0826 07F21C43 		addw	r3, r7, #1052
 7895 082a C3F81821 		str	r2, [r3, #280]
 995:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7896              		.loc 1 995 0
 7897 082e D7F88035 		ldr	r3, [r7, #1408]
 7898 0832 03F52C72 		add	r2, r3, #688
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7899              		.loc 1 920 0
 7900 0836 07F21C43 		addw	r3, r7, #1052
 7901 083a C3F81C21 		str	r2, [r3, #284]
 996:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7902              		.loc 1 996 0
 7903 083e D7F88035 		ldr	r3, [r7, #1408]
 7904 0842 03F2B222 		addw	r2, r3, #690
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7905              		.loc 1 920 0
 7906 0846 07F21C43 		addw	r3, r7, #1052
 7907 084a C3F82021 		str	r2, [r3, #288]
 997:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7908              		.loc 1 997 0
 7909 084e D7F88035 		ldr	r3, [r7, #1408]
 7910 0852 03F52D72 		add	r2, r3, #692
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7911              		.loc 1 920 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 185


 7912 0856 07F21C43 		addw	r3, r7, #1052
 7913 085a C3F82421 		str	r2, [r3, #292]
 998:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7914              		.loc 1 998 0
 7915 085e D7F88035 		ldr	r3, [r7, #1408]
 7916 0862 03F1AC02 		add	r2, r3, #172
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7917              		.loc 1 920 0
 7918 0866 07F21C43 		addw	r3, r7, #1052
 7919 086a C3F82821 		str	r2, [r3, #296]
 999:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7920              		.loc 1 999 0
 7921 086e D7F88035 		ldr	r3, [r7, #1408]
 7922 0872 03F53872 		add	r2, r3, #736
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7923              		.loc 1 920 0
 7924 0876 07F21C43 		addw	r3, r7, #1052
 7925 087a C3F82C21 		str	r2, [r3, #300]
1000:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 7926              		.loc 1 1000 0
 7927 087e D7F88035 		ldr	r3, [r7, #1408]
 7928 0882 03F2E222 		addw	r2, r3, #738
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7929              		.loc 1 920 0
 7930 0886 07F21C43 		addw	r3, r7, #1052
 7931 088a C3F83021 		str	r2, [r3, #304]
1001:..\src/command_processing.c ****         
1002:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 7932              		.loc 1 1002 0
 7933 088e D7F88035 		ldr	r3, [r7, #1408]
 7934 0892 03F2E622 		addw	r2, r3, #742
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7935              		.loc 1 920 0
 7936 0896 07F21C43 		addw	r3, r7, #1052
 7937 089a C3F83421 		str	r2, [r3, #308]
1003:..\src/command_processing.c ****         
1004:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7938              		.loc 1 1004 0
 7939 089e D7F88035 		ldr	r3, [r7, #1408]
 7940 08a2 03F53072 		add	r2, r3, #704
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7941              		.loc 1 920 0
 7942 08a6 07F21C43 		addw	r3, r7, #1052
 7943 08aa C3F83821 		str	r2, [r3, #312]
1005:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7944              		.loc 1 1005 0
 7945 08ae D7F88035 		ldr	r3, [r7, #1408]
 7946 08b2 03F2C122 		addw	r2, r3, #705
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7947              		.loc 1 920 0
 7948 08b6 07F21C43 		addw	r3, r7, #1052
 7949 08ba C3F83C21 		str	r2, [r3, #316]
1006:..\src/command_processing.c ****         
1007:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7950              		.loc 1 1007 0
 7951 08be D7F88035 		ldr	r3, [r7, #1408]
 7952 08c2 03F53472 		add	r2, r3, #720
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 186


 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7953              		.loc 1 920 0
 7954 08c6 07F21C43 		addw	r3, r7, #1052
 7955 08ca C3F84021 		str	r2, [r3, #320]
1008:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7956              		.loc 1 1008 0
 7957 08ce D7F88035 		ldr	r3, [r7, #1408]
 7958 08d2 03F53572 		add	r2, r3, #724
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7959              		.loc 1 920 0
 7960 08d6 07F21C43 		addw	r3, r7, #1052
 7961 08da C3F84421 		str	r2, [r3, #324]
1009:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7962              		.loc 1 1009 0
 7963 08de D7F88035 		ldr	r3, [r7, #1408]
 7964 08e2 03F53672 		add	r2, r3, #728
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7965              		.loc 1 920 0
 7966 08e6 07F21C43 		addw	r3, r7, #1052
 7967 08ea C3F84821 		str	r2, [r3, #328]
1010:..\src/command_processing.c ****         
1011:..\src/command_processing.c **** 
1012:..\src/command_processing.c ****     };
1013:..\src/command_processing.c ****     
1014:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7968              		.loc 1 1014 0
 7969 08ee 07F57273 		add	r3, r7, #968
 7970 08f2 F64A     		ldr	r2, .L379
 7971 08f4 1846     		mov	r0, r3
 7972 08f6 1146     		mov	r1, r2
 7973 08f8 5323     		movs	r3, #83
 7974 08fa 1A46     		mov	r2, r3
 7975 08fc FFF7FEFF 		bl	memcpy
1015:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
1016:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
1017:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
1018:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
1019:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
1020:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
1021:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
1022:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
1023:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
1024:..\src/command_processing.c ****         
1025:..\src/command_processing.c ****         // GENERIC PARAMS
1026:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1027:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1028:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1029:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1030:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1031:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1032:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1033:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1034:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_UINT16, 
1035:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_FLAG,
1036:..\src/command_processing.c ****         TYPE_UINT16,
1037:..\src/command_processing.c ****         
1038:..\src/command_processing.c ****                     TYPE_FLAG, TYPE_FLAG, TYPE_UINT8,
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 187


1039:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
1040:..\src/command_processing.c ****     };
1041:..\src/command_processing.c **** 
1042:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7976              		.loc 1 1042 0
 7977 0900 07F55D73 		add	r3, r7, #884
 7978 0904 0122     		movs	r2, #1
 7979 0906 1A70     		strb	r2, [r3]
 7980 0908 07F55D73 		add	r3, r7, #884
 7981 090c 0322     		movs	r2, #3
 7982 090e 5A70     		strb	r2, [r3, #1]
 7983 0910 07F55D73 		add	r3, r7, #884
 7984 0914 0322     		movs	r2, #3
 7985 0916 9A70     		strb	r2, [r3, #2]
 7986 0918 07F55D73 		add	r3, r7, #884
 7987 091c 0122     		movs	r2, #1
 7988 091e DA70     		strb	r2, [r3, #3]
 7989 0920 07F55D73 		add	r3, r7, #884
 7990 0924 0122     		movs	r2, #1
 7991 0926 1A71     		strb	r2, [r3, #4]
 7992 0928 07F55D73 		add	r3, r7, #884
 7993 092c 0122     		movs	r2, #1
 7994 092e 5A71     		strb	r2, [r3, #5]
 7995 0930 07F55D73 		add	r3, r7, #884
 7996 0934 0322     		movs	r2, #3
 7997 0936 9A71     		strb	r2, [r3, #6]
 7998 0938 07F55D73 		add	r3, r7, #884
 7999 093c 0322     		movs	r2, #3
 8000 093e DA71     		strb	r2, [r3, #7]
 8001 0940 07F55D73 		add	r3, r7, #884
 8002 0944 0322     		movs	r2, #3
 8003 0946 1A72     		strb	r2, [r3, #8]
 8004 0948 07F55D73 		add	r3, r7, #884
 8005 094c 0122     		movs	r2, #1
 8006 094e 5A72     		strb	r2, [r3, #9]
 8007 0950 07F55D73 		add	r3, r7, #884
 8008 0954 0222     		movs	r2, #2
 8009 0956 9A72     		strb	r2, [r3, #10]
 8010 0958 07F55D73 		add	r3, r7, #884
 8011 095c 0222     		movs	r2, #2
 8012 095e DA72     		strb	r2, [r3, #11]
 8013 0960 07F55D73 		add	r3, r7, #884
 8014 0964 0122     		movs	r2, #1
 8015 0966 1A73     		strb	r2, [r3, #12]
 8016 0968 07F55D73 		add	r3, r7, #884
 8017 096c 0222     		movs	r2, #2
 8018 096e 5A73     		strb	r2, [r3, #13]
 8019 0970 07F55D73 		add	r3, r7, #884
 8020 0974 0122     		movs	r2, #1
 8021 0976 9A73     		strb	r2, [r3, #14]
 8022 0978 07F55D73 		add	r3, r7, #884
 8023 097c 0222     		movs	r2, #2
 8024 097e DA73     		strb	r2, [r3, #15]
 8025 0980 07F55D73 		add	r3, r7, #884
 8026 0984 0222     		movs	r2, #2
 8027 0986 1A74     		strb	r2, [r3, #16]
 8028 0988 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 188


 8029 098c 0122     		movs	r2, #1
 8030 098e 5A74     		strb	r2, [r3, #17]
 8031 0990 07F55D73 		add	r3, r7, #884
 8032 0994 0122     		movs	r2, #1
 8033 0996 9A74     		strb	r2, [r3, #18]
 8034 0998 07F55D73 		add	r3, r7, #884
 8035 099c 0122     		movs	r2, #1
 8036 099e DA74     		strb	r2, [r3, #19]
 8037 09a0 07F55D73 		add	r3, r7, #884
 8038 09a4 0622     		movs	r2, #6
 8039 09a6 1A75     		strb	r2, [r3, #20]
 8040 09a8 07F55D73 		add	r3, r7, #884
 8041 09ac 0322     		movs	r2, #3
 8042 09ae 5A75     		strb	r2, [r3, #21]
 8043 09b0 07F55D73 		add	r3, r7, #884
 8044 09b4 0122     		movs	r2, #1
 8045 09b6 9A75     		strb	r2, [r3, #22]
 8046 09b8 07F55D73 		add	r3, r7, #884
 8047 09bc 0122     		movs	r2, #1
 8048 09be DA75     		strb	r2, [r3, #23]
 8049 09c0 07F55D73 		add	r3, r7, #884
 8050 09c4 0122     		movs	r2, #1
 8051 09c6 1A76     		strb	r2, [r3, #24]
 8052 09c8 07F55D73 		add	r3, r7, #884
 8053 09cc 0122     		movs	r2, #1
 8054 09ce 5A76     		strb	r2, [r3, #25]
 8055 09d0 07F55D73 		add	r3, r7, #884
 8056 09d4 0122     		movs	r2, #1
 8057 09d6 9A76     		strb	r2, [r3, #26]
 8058 09d8 07F55D73 		add	r3, r7, #884
 8059 09dc 0122     		movs	r2, #1
 8060 09de DA76     		strb	r2, [r3, #27]
 8061 09e0 07F55D73 		add	r3, r7, #884
 8062 09e4 0122     		movs	r2, #1
 8063 09e6 1A77     		strb	r2, [r3, #28]
 8064 09e8 07F55D73 		add	r3, r7, #884
 8065 09ec 0122     		movs	r2, #1
 8066 09ee 5A77     		strb	r2, [r3, #29]
 8067 09f0 07F55D73 		add	r3, r7, #884
 8068 09f4 0122     		movs	r2, #1
 8069 09f6 9A77     		strb	r2, [r3, #30]
 8070 09f8 07F55D73 		add	r3, r7, #884
 8071 09fc 0622     		movs	r2, #6
 8072 09fe DA77     		strb	r2, [r3, #31]
 8073 0a00 07F55D73 		add	r3, r7, #884
 8074 0a04 0122     		movs	r2, #1
 8075 0a06 83F82020 		strb	r2, [r3, #32]
 8076 0a0a 07F55D73 		add	r3, r7, #884
 8077 0a0e 0522     		movs	r2, #5
 8078 0a10 83F82120 		strb	r2, [r3, #33]
 8079 0a14 07F55D73 		add	r3, r7, #884
 8080 0a18 0122     		movs	r2, #1
 8081 0a1a 83F82220 		strb	r2, [r3, #34]
 8082 0a1e 07F55D73 		add	r3, r7, #884
 8083 0a22 0622     		movs	r2, #6
 8084 0a24 83F82320 		strb	r2, [r3, #35]
 8085 0a28 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 189


 8086 0a2c 0122     		movs	r2, #1
 8087 0a2e 83F82420 		strb	r2, [r3, #36]
 8088 0a32 07F55D73 		add	r3, r7, #884
 8089 0a36 0122     		movs	r2, #1
 8090 0a38 83F82520 		strb	r2, [r3, #37]
 8091 0a3c 07F55D73 		add	r3, r7, #884
 8092 0a40 0122     		movs	r2, #1
 8093 0a42 83F82620 		strb	r2, [r3, #38]
 8094 0a46 07F55D73 		add	r3, r7, #884
 8095 0a4a 0122     		movs	r2, #1
 8096 0a4c 83F82720 		strb	r2, [r3, #39]
 8097 0a50 07F55D73 		add	r3, r7, #884
 8098 0a54 0322     		movs	r2, #3
 8099 0a56 83F82820 		strb	r2, [r3, #40]
 8100 0a5a 07F55D73 		add	r3, r7, #884
 8101 0a5e 0322     		movs	r2, #3
 8102 0a60 83F82920 		strb	r2, [r3, #41]
 8103 0a64 07F55D73 		add	r3, r7, #884
 8104 0a68 0122     		movs	r2, #1
 8105 0a6a 83F82A20 		strb	r2, [r3, #42]
 8106 0a6e 07F55D73 		add	r3, r7, #884
 8107 0a72 0322     		movs	r2, #3
 8108 0a74 83F82B20 		strb	r2, [r3, #43]
 8109 0a78 07F55D73 		add	r3, r7, #884
 8110 0a7c 0322     		movs	r2, #3
 8111 0a7e 83F82C20 		strb	r2, [r3, #44]
 8112 0a82 07F55D73 		add	r3, r7, #884
 8113 0a86 0122     		movs	r2, #1
 8114 0a88 83F82D20 		strb	r2, [r3, #45]
 8115 0a8c 07F55D73 		add	r3, r7, #884
 8116 0a90 0122     		movs	r2, #1
 8117 0a92 83F82E20 		strb	r2, [r3, #46]
 8118 0a96 07F55D73 		add	r3, r7, #884
 8119 0a9a 0122     		movs	r2, #1
 8120 0a9c 83F82F20 		strb	r2, [r3, #47]
 8121 0aa0 07F55D73 		add	r3, r7, #884
 8122 0aa4 0322     		movs	r2, #3
 8123 0aa6 83F83020 		strb	r2, [r3, #48]
 8124 0aaa 07F55D73 		add	r3, r7, #884
 8125 0aae 0322     		movs	r2, #3
 8126 0ab0 83F83120 		strb	r2, [r3, #49]
 8127 0ab4 07F55D73 		add	r3, r7, #884
 8128 0ab8 0322     		movs	r2, #3
 8129 0aba 83F83220 		strb	r2, [r3, #50]
 8130 0abe 07F55D73 		add	r3, r7, #884
 8131 0ac2 0122     		movs	r2, #1
 8132 0ac4 83F83320 		strb	r2, [r3, #51]
 8133 0ac8 07F55D73 		add	r3, r7, #884
 8134 0acc 0222     		movs	r2, #2
 8135 0ace 83F83420 		strb	r2, [r3, #52]
 8136 0ad2 07F55D73 		add	r3, r7, #884
 8137 0ad6 0222     		movs	r2, #2
 8138 0ad8 83F83520 		strb	r2, [r3, #53]
 8139 0adc 07F55D73 		add	r3, r7, #884
 8140 0ae0 0122     		movs	r2, #1
 8141 0ae2 83F83620 		strb	r2, [r3, #54]
 8142 0ae6 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 190


 8143 0aea 0122     		movs	r2, #1
 8144 0aec 83F83720 		strb	r2, [r3, #55]
 8145 0af0 07F55D73 		add	r3, r7, #884
 8146 0af4 0122     		movs	r2, #1
 8147 0af6 83F83820 		strb	r2, [r3, #56]
 8148 0afa 07F55D73 		add	r3, r7, #884
 8149 0afe 0122     		movs	r2, #1
 8150 0b00 83F83920 		strb	r2, [r3, #57]
 8151 0b04 07F55D73 		add	r3, r7, #884
 8152 0b08 0622     		movs	r2, #6
 8153 0b0a 83F83A20 		strb	r2, [r3, #58]
 8154 0b0e 07F55D73 		add	r3, r7, #884
 8155 0b12 0122     		movs	r2, #1
 8156 0b14 83F83B20 		strb	r2, [r3, #59]
 8157 0b18 07F55D73 		add	r3, r7, #884
 8158 0b1c 0122     		movs	r2, #1
 8159 0b1e 83F83C20 		strb	r2, [r3, #60]
 8160 0b22 07F55D73 		add	r3, r7, #884
 8161 0b26 0122     		movs	r2, #1
 8162 0b28 83F83D20 		strb	r2, [r3, #61]
 8163 0b2c 07F55D73 		add	r3, r7, #884
 8164 0b30 0122     		movs	r2, #1
 8165 0b32 83F83E20 		strb	r2, [r3, #62]
 8166 0b36 07F55D73 		add	r3, r7, #884
 8167 0b3a 0322     		movs	r2, #3
 8168 0b3c 83F83F20 		strb	r2, [r3, #63]
 8169 0b40 07F55D73 		add	r3, r7, #884
 8170 0b44 0322     		movs	r2, #3
 8171 0b46 83F84020 		strb	r2, [r3, #64]
1043:..\src/command_processing.c ****         1, 3, 3, 1, 
1044:..\src/command_processing.c ****         1, 1, 3, 3,
1045:..\src/command_processing.c ****         3, 1, 2, 2, 
1046:..\src/command_processing.c ****         1, 2, 1, 2,
1047:..\src/command_processing.c ****         2, 1, 1, 1, 
1048:..\src/command_processing.c ****         6, 3, 1, 1,
1049:..\src/command_processing.c ****         1, 1, 1, 1, 
1050:..\src/command_processing.c ****         1, 1, 1, 6,
1051:..\src/command_processing.c ****         1, 5, 1, 6,
1052:..\src/command_processing.c ****         
1053:..\src/command_processing.c ****         // GENERIC PARAMS
1054:..\src/command_processing.c ****         1, 1, 1, 1,
1055:..\src/command_processing.c ****         3, 3, 1, 3,
1056:..\src/command_processing.c ****         3, 1, 1, 1,
1057:..\src/command_processing.c ****         3, 3, 3, 1,
1058:..\src/command_processing.c ****         2, 2, 1, 1,
1059:..\src/command_processing.c ****         1, 1, 6, 1,
1060:..\src/command_processing.c ****         1, 1, 1, 3, 
1061:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 8172              		.loc 1 1061 0
 8173 0b4a 614B     		ldr	r3, .L379+4
 8174 0b4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         1, 3, 3, 1, 
 8175              		.loc 1 1042 0
 8176 0b4e 07F55D73 		add	r3, r7, #884
 8177 0b52 83F84120 		strb	r2, [r3, #65]
 8178              		.loc 1 1061 0
 8179 0b56 5E4B     		ldr	r3, .L379+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 191


 8180 0b58 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         1, 3, 3, 1, 
 8181              		.loc 1 1042 0
 8182 0b5a 07F55D73 		add	r3, r7, #884
 8183 0b5e 83F84220 		strb	r2, [r3, #66]
 8184 0b62 07F55D73 		add	r3, r7, #884
 8185 0b66 0122     		movs	r2, #1
 8186 0b68 83F84320 		strb	r2, [r3, #67]
 8187 0b6c 07F55D73 		add	r3, r7, #884
 8188 0b70 0622     		movs	r2, #6
 8189 0b72 83F84420 		strb	r2, [r3, #68]
 8190 0b76 07F55D73 		add	r3, r7, #884
 8191 0b7a 0622     		movs	r2, #6
 8192 0b7c 83F84520 		strb	r2, [r3, #69]
 8193 0b80 07F55D73 		add	r3, r7, #884
 8194 0b84 0122     		movs	r2, #1
 8195 0b86 83F84620 		strb	r2, [r3, #70]
 8196 0b8a 07F55D73 		add	r3, r7, #884
 8197 0b8e 0122     		movs	r2, #1
 8198 0b90 83F84720 		strb	r2, [r3, #71]
 8199 0b94 07F55D73 		add	r3, r7, #884
 8200 0b98 0122     		movs	r2, #1
 8201 0b9a 83F84820 		strb	r2, [r3, #72]
 8202 0b9e 07F55D73 		add	r3, r7, #884
 8203 0ba2 0222     		movs	r2, #2
 8204 0ba4 83F84920 		strb	r2, [r3, #73]
 8205 0ba8 07F55D73 		add	r3, r7, #884
 8206 0bac 0122     		movs	r2, #1
 8207 0bae 83F84A20 		strb	r2, [r3, #74]
 8208 0bb2 07F55D73 		add	r3, r7, #884
 8209 0bb6 0122     		movs	r2, #1
 8210 0bb8 83F84B20 		strb	r2, [r3, #75]
 8211 0bbc 07F55D73 		add	r3, r7, #884
 8212 0bc0 0222     		movs	r2, #2
 8213 0bc2 83F84C20 		strb	r2, [r3, #76]
 8214 0bc6 07F55D73 		add	r3, r7, #884
 8215 0bca 0122     		movs	r2, #1
 8216 0bcc 83F84D20 		strb	r2, [r3, #77]
 8217 0bd0 07F55D73 		add	r3, r7, #884
 8218 0bd4 0122     		movs	r2, #1
 8219 0bd6 83F84E20 		strb	r2, [r3, #78]
 8220 0bda 07F55D73 		add	r3, r7, #884
 8221 0bde 0122     		movs	r2, #1
 8222 0be0 83F84F20 		strb	r2, [r3, #79]
 8223 0be4 07F55D73 		add	r3, r7, #884
 8224 0be8 0122     		movs	r2, #1
 8225 0bea 83F85020 		strb	r2, [r3, #80]
 8226 0bee 07F55D73 		add	r3, r7, #884
 8227 0bf2 0122     		movs	r2, #1
 8228 0bf4 83F85120 		strb	r2, [r3, #81]
 8229 0bf8 07F55D73 		add	r3, r7, #884
 8230 0bfc 0122     		movs	r2, #1
 8231 0bfe 83F85220 		strb	r2, [r3, #82]
1062:..\src/command_processing.c ****         6, 6, 1, 1,
1063:..\src/command_processing.c ****         1, 2, 1, 1,
1064:..\src/command_processing.c ****         2,
1065:..\src/command_processing.c ****         
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 192


1066:..\src/command_processing.c ****            1, 1, 1, 
1067:..\src/command_processing.c ****         1, 1, 1
1068:..\src/command_processing.c ****     };
1069:..\src/command_processing.c ****     
1070:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 8232              		.loc 1 1070 0
 8233 0c02 07F54873 		add	r3, r7, #800
 8234 0c06 0022     		movs	r2, #0
 8235 0c08 1A70     		strb	r2, [r3]
 8236 0c0a 97F87D35 		ldrb	r3, [r7, #1405]
 8237 0c0e 0A33     		adds	r3, r3, #10
 8238 0c10 DAB2     		uxtb	r2, r3
 8239 0c12 07F54873 		add	r3, r7, #800
 8240 0c16 5A70     		strb	r2, [r3, #1]
 8241 0c18 97F87D35 		ldrb	r3, [r7, #1405]
 8242 0c1c 0A33     		adds	r3, r3, #10
 8243 0c1e DAB2     		uxtb	r2, r3
 8244 0c20 07F54873 		add	r3, r7, #800
 8245 0c24 9A70     		strb	r2, [r3, #2]
 8246 0c26 97F87D35 		ldrb	r3, [r7, #1405]
 8247 0c2a 0A33     		adds	r3, r3, #10
 8248 0c2c DAB2     		uxtb	r2, r3
 8249 0c2e 07F54873 		add	r3, r7, #800
 8250 0c32 DA70     		strb	r2, [r3, #3]
 8251 0c34 97F87D35 		ldrb	r3, [r7, #1405]
 8252 0c38 0A33     		adds	r3, r3, #10
 8253 0c3a DAB2     		uxtb	r2, r3
 8254 0c3c 07F54873 		add	r3, r7, #800
 8255 0c40 1A71     		strb	r2, [r3, #4]
 8256 0c42 97F87D35 		ldrb	r3, [r7, #1405]
 8257 0c46 0A33     		adds	r3, r3, #10
 8258 0c48 DAB2     		uxtb	r2, r3
 8259 0c4a 07F54873 		add	r3, r7, #800
 8260 0c4e 5A71     		strb	r2, [r3, #5]
1071:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1072:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 8261              		.loc 1 1072 0
 8262 0c50 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8263 0c54 D7F88015 		ldr	r1, [r7, #1408]
 8264 0c58 1346     		mov	r3, r2
 8265 0c5a DB00     		lsls	r3, r3, #3
 8266 0c5c 9B1A     		subs	r3, r3, r2
 8267 0c5e 1B01     		lsls	r3, r3, #4
 8268 0c60 0B44     		add	r3, r3, r1
 8269 0c62 03F58873 		add	r3, r3, #272
 8270 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8271              		.loc 1 1070 0
 8272 0c68 1433     		adds	r3, r3, #20
 8273 0c6a DAB2     		uxtb	r2, r3
 8274 0c6c 07F54873 		add	r3, r7, #800
 8275 0c70 9A71     		strb	r2, [r3, #6]
 8276              		.loc 1 1072 0
 8277 0c72 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8278 0c76 D7F88015 		ldr	r1, [r7, #1408]
 8279 0c7a 1346     		mov	r3, r2
 8280 0c7c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 193


 8281 0c7e 9B1A     		subs	r3, r3, r2
 8282 0c80 1B01     		lsls	r3, r3, #4
 8283 0c82 0B44     		add	r3, r3, r1
 8284 0c84 03F58873 		add	r3, r3, #272
 8285 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8286              		.loc 1 1070 0
 8287 0c8a 1433     		adds	r3, r3, #20
 8288 0c8c DAB2     		uxtb	r2, r3
 8289 0c8e 07F54873 		add	r3, r7, #800
 8290 0c92 DA71     		strb	r2, [r3, #7]
1073:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8291              		.loc 1 1073 0
 8292 0c94 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8293 0c98 D7F88015 		ldr	r1, [r7, #1408]
 8294 0c9c 1346     		mov	r3, r2
 8295 0c9e DB00     		lsls	r3, r3, #3
 8296 0ca0 9B1A     		subs	r3, r3, r2
 8297 0ca2 1B01     		lsls	r3, r3, #4
 8298 0ca4 0B44     		add	r3, r3, r1
 8299 0ca6 03F58873 		add	r3, r3, #272
 8300 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8301              		.loc 1 1070 0
 8302 0cac 1433     		adds	r3, r3, #20
 8303 0cae DAB2     		uxtb	r2, r3
 8304 0cb0 07F54873 		add	r3, r7, #800
 8305 0cb4 1A72     		strb	r2, [r3, #8]
 8306 0cb6 97F87D35 		ldrb	r3, [r7, #1405]
 8307 0cba 0A33     		adds	r3, r3, #10
 8308 0cbc DAB2     		uxtb	r2, r3
 8309 0cbe 07F54873 		add	r3, r7, #800
 8310 0cc2 5A72     		strb	r2, [r3, #9]
 8311 0cc4 97F87D35 		ldrb	r3, [r7, #1405]
 8312 0cc8 04E0     		b	.L380
 8313              	.L381:
 8314 0cca 00BF     		.align	2
 8315              	.L379:
 8316 0ccc 4C060000 		.word	.LC0
 8317 0cd0 00000000 		.word	N_Encoder_Line_Connected
 8318              	.L380:
 8319 0cd4 0A33     		adds	r3, r3, #10
 8320 0cd6 DAB2     		uxtb	r2, r3
 8321 0cd8 07F54873 		add	r3, r7, #800
 8322 0cdc 9A72     		strb	r2, [r3, #10]
 8323 0cde 97F87D35 		ldrb	r3, [r7, #1405]
 8324 0ce2 0A33     		adds	r3, r3, #10
 8325 0ce4 DAB2     		uxtb	r2, r3
 8326 0ce6 07F54873 		add	r3, r7, #800
 8327 0cea DA72     		strb	r2, [r3, #11]
 8328 0cec 97F87D35 		ldrb	r3, [r7, #1405]
 8329 0cf0 0A33     		adds	r3, r3, #10
 8330 0cf2 DAB2     		uxtb	r2, r3
 8331 0cf4 07F54873 		add	r3, r7, #800
 8332 0cf8 1A73     		strb	r2, [r3, #12]
 8333 0cfa 07F54873 		add	r3, r7, #800
 8334 0cfe 1E22     		movs	r2, #30
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 194


 8335 0d00 5A73     		strb	r2, [r3, #13]
 8336 0d02 07F54873 		add	r3, r7, #800
 8337 0d06 1E22     		movs	r2, #30
 8338 0d08 9A73     		strb	r2, [r3, #14]
 8339 0d0a 07F54873 		add	r3, r7, #800
 8340 0d0e 1E22     		movs	r2, #30
 8341 0d10 DA73     		strb	r2, [r3, #15]
 8342 0d12 07F54873 		add	r3, r7, #800
 8343 0d16 1E22     		movs	r2, #30
 8344 0d18 1A74     		strb	r2, [r3, #16]
1074:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1075:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 8345              		.loc 1 1075 0
 8346 0d1a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8347 0d1e D7F88015 		ldr	r1, [r7, #1408]
 8348 0d22 1346     		mov	r3, r2
 8349 0d24 DB00     		lsls	r3, r3, #3
 8350 0d26 9B1A     		subs	r3, r3, r2
 8351 0d28 1B01     		lsls	r3, r3, #4
 8352 0d2a 0B44     		add	r3, r3, r1
 8353 0d2c 03F58873 		add	r3, r3, #272
 8354 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8355              		.loc 1 1070 0
 8356 0d32 1433     		adds	r3, r3, #20
 8357 0d34 DAB2     		uxtb	r2, r3
 8358 0d36 07F54873 		add	r3, r7, #800
 8359 0d3a 5A74     		strb	r2, [r3, #17]
 8360              		.loc 1 1075 0
 8361 0d3c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8362 0d40 D7F88015 		ldr	r1, [r7, #1408]
 8363 0d44 1346     		mov	r3, r2
 8364 0d46 DB00     		lsls	r3, r3, #3
 8365 0d48 9B1A     		subs	r3, r3, r2
 8366 0d4a 1B01     		lsls	r3, r3, #4
 8367 0d4c 0B44     		add	r3, r3, r1
 8368 0d4e 03F58873 		add	r3, r3, #272
 8369 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8370              		.loc 1 1070 0
 8371 0d54 1433     		adds	r3, r3, #20
 8372 0d56 DAB2     		uxtb	r2, r3
 8373 0d58 07F54873 		add	r3, r7, #800
 8374 0d5c 9A74     		strb	r2, [r3, #18]
 8375 0d5e 97F87D35 		ldrb	r3, [r7, #1405]
 8376 0d62 0A33     		adds	r3, r3, #10
 8377 0d64 DAB2     		uxtb	r2, r3
 8378 0d66 07F54873 		add	r3, r7, #800
 8379 0d6a DA74     		strb	r2, [r3, #19]
 8380 0d6c 97F87D35 		ldrb	r3, [r7, #1405]
 8381 0d70 0A33     		adds	r3, r3, #10
 8382 0d72 DAB2     		uxtb	r2, r3
 8383 0d74 07F54873 		add	r3, r7, #800
 8384 0d78 1A75     		strb	r2, [r3, #20]
 8385 0d7a 07F54873 		add	r3, r7, #800
 8386 0d7e 0022     		movs	r2, #0
 8387 0d80 5A75     		strb	r2, [r3, #21]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 195


 8388 0d82 07F54873 		add	r3, r7, #800
 8389 0d86 4622     		movs	r2, #70
 8390 0d88 9A75     		strb	r2, [r3, #22]
 8391 0d8a 07F54873 		add	r3, r7, #800
 8392 0d8e 4622     		movs	r2, #70
 8393 0d90 DA75     		strb	r2, [r3, #23]
 8394 0d92 07F54873 		add	r3, r7, #800
 8395 0d96 4622     		movs	r2, #70
 8396 0d98 1A76     		strb	r2, [r3, #24]
 8397 0d9a 07F54873 		add	r3, r7, #800
 8398 0d9e 4622     		movs	r2, #70
 8399 0da0 5A76     		strb	r2, [r3, #25]
 8400 0da2 07F54873 		add	r3, r7, #800
 8401 0da6 1E22     		movs	r2, #30
 8402 0da8 9A76     		strb	r2, [r3, #26]
 8403 0daa 07F54873 		add	r3, r7, #800
 8404 0dae 0022     		movs	r2, #0
 8405 0db0 DA76     		strb	r2, [r3, #27]
 8406 0db2 07F54873 		add	r3, r7, #800
 8407 0db6 2822     		movs	r2, #40
 8408 0db8 1A77     		strb	r2, [r3, #28]
 8409 0dba 07F54873 		add	r3, r7, #800
 8410 0dbe 3222     		movs	r2, #50
 8411 0dc0 5A77     		strb	r2, [r3, #29]
 8412 0dc2 07F54873 		add	r3, r7, #800
 8413 0dc6 0022     		movs	r2, #0
 8414 0dc8 9A77     		strb	r2, [r3, #30]
 8415 0dca 07F54873 		add	r3, r7, #800
 8416 0dce 3222     		movs	r2, #50
 8417 0dd0 DA77     		strb	r2, [r3, #31]
 8418 0dd2 07F54873 		add	r3, r7, #800
 8419 0dd6 2822     		movs	r2, #40
 8420 0dd8 83F82020 		strb	r2, [r3, #32]
 8421 0ddc 07F54873 		add	r3, r7, #800
 8422 0de0 2822     		movs	r2, #40
 8423 0de2 83F82120 		strb	r2, [r3, #33]
 8424 0de6 07F54873 		add	r3, r7, #800
 8425 0dea 0022     		movs	r2, #0
 8426 0dec 83F82220 		strb	r2, [r3, #34]
1076:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1077:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1078:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1079:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 8427              		.loc 1 1079 0
 8428 0df0 D7F88035 		ldr	r3, [r7, #1408]
 8429 0df4 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8430              		.loc 1 1070 0
 8431 0df8 3C33     		adds	r3, r3, #60
 8432 0dfa DAB2     		uxtb	r2, r3
 8433 0dfc 07F54873 		add	r3, r7, #800
 8434 0e00 83F82320 		strb	r2, [r3, #35]
 8435 0e04 97F87D35 		ldrb	r3, [r7, #1405]
 8436 0e08 0A33     		adds	r3, r3, #10
 8437 0e0a DAB2     		uxtb	r2, r3
 8438 0e0c 07F54873 		add	r3, r7, #800
 8439 0e10 83F82420 		strb	r2, [r3, #36]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 196


 8440 0e14 97F87D35 		ldrb	r3, [r7, #1405]
 8441 0e18 0A33     		adds	r3, r3, #10
 8442 0e1a DAB2     		uxtb	r2, r3
 8443 0e1c 07F54873 		add	r3, r7, #800
 8444 0e20 83F82520 		strb	r2, [r3, #37]
 8445 0e24 97F87D35 		ldrb	r3, [r7, #1405]
 8446 0e28 0A33     		adds	r3, r3, #10
 8447 0e2a DAB2     		uxtb	r2, r3
 8448 0e2c 07F54873 		add	r3, r7, #800
 8449 0e30 83F82620 		strb	r2, [r3, #38]
 8450 0e34 97F87D35 		ldrb	r3, [r7, #1405]
 8451 0e38 0A33     		adds	r3, r3, #10
 8452 0e3a DAB2     		uxtb	r2, r3
 8453 0e3c 07F54873 		add	r3, r7, #800
 8454 0e40 83F82720 		strb	r2, [r3, #39]
1080:..\src/command_processing.c ****         
1081:..\src/command_processing.c ****         // GENERIC PARAMS
1082:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1083:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8455              		.loc 1 1083 0
 8456 0e44 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8457 0e48 D7F88015 		ldr	r1, [r7, #1408]
 8458 0e4c 1346     		mov	r3, r2
 8459 0e4e DB00     		lsls	r3, r3, #3
 8460 0e50 9B1A     		subs	r3, r3, r2
 8461 0e52 1B01     		lsls	r3, r3, #4
 8462 0e54 0B44     		add	r3, r3, r1
 8463 0e56 03F58873 		add	r3, r3, #272
 8464 0e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8465              		.loc 1 1070 0
 8466 0e5c 1433     		adds	r3, r3, #20
 8467 0e5e DAB2     		uxtb	r2, r3
 8468 0e60 07F54873 		add	r3, r7, #800
 8469 0e64 83F82820 		strb	r2, [r3, #40]
 8470              		.loc 1 1083 0
 8471 0e68 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8472 0e6c D7F88015 		ldr	r1, [r7, #1408]
 8473 0e70 1346     		mov	r3, r2
 8474 0e72 DB00     		lsls	r3, r3, #3
 8475 0e74 9B1A     		subs	r3, r3, r2
 8476 0e76 1B01     		lsls	r3, r3, #4
 8477 0e78 0B44     		add	r3, r3, r1
 8478 0e7a 03F58873 		add	r3, r3, #272
 8479 0e7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8480              		.loc 1 1070 0
 8481 0e80 1433     		adds	r3, r3, #20
 8482 0e82 DAB2     		uxtb	r2, r3
 8483 0e84 07F54873 		add	r3, r7, #800
 8484 0e88 83F82920 		strb	r2, [r3, #41]
 8485 0e8c 07F54873 		add	r3, r7, #800
 8486 0e90 0022     		movs	r2, #0
 8487 0e92 83F82A20 		strb	r2, [r3, #42]
 8488 0e96 97F87C35 		ldrb	r3, [r7, #1404]
 8489 0e9a 0A33     		adds	r3, r3, #10
 8490 0e9c DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 197


 8491 0e9e 07F54873 		add	r3, r7, #800
 8492 0ea2 83F82B20 		strb	r2, [r3, #43]
 8493 0ea6 97F87C35 		ldrb	r3, [r7, #1404]
 8494 0eaa 0A33     		adds	r3, r3, #10
 8495 0eac DAB2     		uxtb	r2, r3
 8496 0eae 07F54873 		add	r3, r7, #800
 8497 0eb2 83F82C20 		strb	r2, [r3, #44]
 8498 0eb6 97F87C35 		ldrb	r3, [r7, #1404]
 8499 0eba 0A33     		adds	r3, r3, #10
 8500 0ebc DAB2     		uxtb	r2, r3
 8501 0ebe 07F54873 		add	r3, r7, #800
 8502 0ec2 83F82D20 		strb	r2, [r3, #45]
 8503 0ec6 97F87C35 		ldrb	r3, [r7, #1404]
 8504 0eca 0A33     		adds	r3, r3, #10
 8505 0ecc DAB2     		uxtb	r2, r3
 8506 0ece 07F54873 		add	r3, r7, #800
 8507 0ed2 83F82E20 		strb	r2, [r3, #46]
 8508 0ed6 97F87C35 		ldrb	r3, [r7, #1404]
 8509 0eda 0A33     		adds	r3, r3, #10
 8510 0edc DAB2     		uxtb	r2, r3
 8511 0ede 07F54873 		add	r3, r7, #800
 8512 0ee2 83F82F20 		strb	r2, [r3, #47]
1084:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1085:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8513              		.loc 1 1085 0
 8514 0ee6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8515 0eea D7F88015 		ldr	r1, [r7, #1408]
 8516 0eee 1346     		mov	r3, r2
 8517 0ef0 DB00     		lsls	r3, r3, #3
 8518 0ef2 9B1A     		subs	r3, r3, r2
 8519 0ef4 1B01     		lsls	r3, r3, #4
 8520 0ef6 0B44     		add	r3, r3, r1
 8521 0ef8 03F58873 		add	r3, r3, #272
 8522 0efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8523              		.loc 1 1070 0
 8524 0efe 1433     		adds	r3, r3, #20
 8525 0f00 DAB2     		uxtb	r2, r3
 8526 0f02 07F54873 		add	r3, r7, #800
 8527 0f06 83F83020 		strb	r2, [r3, #48]
 8528              		.loc 1 1085 0
 8529 0f0a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8530 0f0e D7F88015 		ldr	r1, [r7, #1408]
 8531 0f12 1346     		mov	r3, r2
 8532 0f14 DB00     		lsls	r3, r3, #3
 8533 0f16 9B1A     		subs	r3, r3, r2
 8534 0f18 1B01     		lsls	r3, r3, #4
 8535 0f1a 0B44     		add	r3, r3, r1
 8536 0f1c 03F58873 		add	r3, r3, #272
 8537 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8538              		.loc 1 1070 0
 8539 0f22 1433     		adds	r3, r3, #20
 8540 0f24 DAB2     		uxtb	r2, r3
 8541 0f26 07F54873 		add	r3, r7, #800
 8542 0f2a 83F83120 		strb	r2, [r3, #49]
 8543              		.loc 1 1085 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 198


 8544 0f2e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8545 0f32 D7F88015 		ldr	r1, [r7, #1408]
 8546 0f36 1346     		mov	r3, r2
 8547 0f38 DB00     		lsls	r3, r3, #3
 8548 0f3a 9B1A     		subs	r3, r3, r2
 8549 0f3c 1B01     		lsls	r3, r3, #4
 8550 0f3e 0B44     		add	r3, r3, r1
 8551 0f40 03F58873 		add	r3, r3, #272
 8552 0f44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8553              		.loc 1 1070 0
 8554 0f46 1433     		adds	r3, r3, #20
 8555 0f48 DAB2     		uxtb	r2, r3
 8556 0f4a 07F54873 		add	r3, r7, #800
 8557 0f4e 83F83220 		strb	r2, [r3, #50]
 8558 0f52 97F87C35 		ldrb	r3, [r7, #1404]
 8559 0f56 0A33     		adds	r3, r3, #10
 8560 0f58 DAB2     		uxtb	r2, r3
 8561 0f5a 07F54873 		add	r3, r7, #800
 8562 0f5e 83F83320 		strb	r2, [r3, #51]
 8563 0f62 97F87C35 		ldrb	r3, [r7, #1404]
 8564 0f66 0A33     		adds	r3, r3, #10
 8565 0f68 DAB2     		uxtb	r2, r3
 8566 0f6a 07F54873 		add	r3, r7, #800
 8567 0f6e 83F83420 		strb	r2, [r3, #52]
 8568 0f72 97F87C35 		ldrb	r3, [r7, #1404]
 8569 0f76 0A33     		adds	r3, r3, #10
 8570 0f78 DAB2     		uxtb	r2, r3
 8571 0f7a 07F54873 		add	r3, r7, #800
 8572 0f7e 83F83520 		strb	r2, [r3, #53]
 8573 0f82 97F87C35 		ldrb	r3, [r7, #1404]
 8574 0f86 0A33     		adds	r3, r3, #10
 8575 0f88 DAB2     		uxtb	r2, r3
 8576 0f8a 07F54873 		add	r3, r7, #800
 8577 0f8e 83F83620 		strb	r2, [r3, #54]
1086:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8578              		.loc 1 1086 0
 8579 0f92 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8580 0f96 D7F88015 		ldr	r1, [r7, #1408]
 8581 0f9a 1346     		mov	r3, r2
 8582 0f9c DB00     		lsls	r3, r3, #3
 8583 0f9e 9B1A     		subs	r3, r3, r2
 8584 0fa0 1B01     		lsls	r3, r3, #4
 8585 0fa2 0B44     		add	r3, r3, r1
 8586 0fa4 03F58873 		add	r3, r3, #272
 8587 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8588              		.loc 1 1070 0
 8589 0faa 1433     		adds	r3, r3, #20
 8590 0fac DAB2     		uxtb	r2, r3
 8591 0fae 07F54873 		add	r3, r7, #800
 8592 0fb2 83F83720 		strb	r2, [r3, #55]
1087:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8593              		.loc 1 1087 0
 8594 0fb6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8595 0fba D7F88015 		ldr	r1, [r7, #1408]
 8596 0fbe 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 199


 8597 0fc0 DB00     		lsls	r3, r3, #3
 8598 0fc2 9B1A     		subs	r3, r3, r2
 8599 0fc4 1B01     		lsls	r3, r3, #4
 8600 0fc6 0B44     		add	r3, r3, r1
 8601 0fc8 03F58873 		add	r3, r3, #272
 8602 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8603              		.loc 1 1070 0
 8604 0fce 1433     		adds	r3, r3, #20
 8605 0fd0 DAB2     		uxtb	r2, r3
 8606 0fd2 07F54873 		add	r3, r7, #800
 8607 0fd6 83F83820 		strb	r2, [r3, #56]
 8608 0fda 97F87C35 		ldrb	r3, [r7, #1404]
 8609 0fde 0A33     		adds	r3, r3, #10
 8610 0fe0 DAB2     		uxtb	r2, r3
 8611 0fe2 07F54873 		add	r3, r7, #800
 8612 0fe6 83F83920 		strb	r2, [r3, #57]
 8613 0fea 97F87C35 		ldrb	r3, [r7, #1404]
 8614 0fee 0A33     		adds	r3, r3, #10
 8615 0ff0 DAB2     		uxtb	r2, r3
 8616 0ff2 07F54873 		add	r3, r7, #800
 8617 0ff6 83F83A20 		strb	r2, [r3, #58]
 8618 0ffa 97F87C35 		ldrb	r3, [r7, #1404]
 8619 0ffe 0A33     		adds	r3, r3, #10
 8620 1000 DAB2     		uxtb	r2, r3
 8621 1002 07F54873 		add	r3, r7, #800
 8622 1006 83F83B20 		strb	r2, [r3, #59]
 8623 100a 97F87C35 		ldrb	r3, [r7, #1404]
 8624 100e 0A33     		adds	r3, r3, #10
 8625 1010 DAB2     		uxtb	r2, r3
 8626 1012 07F54873 		add	r3, r7, #800
 8627 1016 83F83C20 		strb	r2, [r3, #60]
 8628 101a 97F87C35 		ldrb	r3, [r7, #1404]
 8629 101e 0A33     		adds	r3, r3, #10
 8630 1020 DAB2     		uxtb	r2, r3
 8631 1022 07F54873 		add	r3, r7, #800
 8632 1026 83F83D20 		strb	r2, [r3, #61]
 8633 102a 97F87C35 		ldrb	r3, [r7, #1404]
 8634 102e 0A33     		adds	r3, r3, #10
 8635 1030 DAB2     		uxtb	r2, r3
 8636 1032 07F54873 		add	r3, r7, #800
 8637 1036 83F83E20 		strb	r2, [r3, #62]
1088:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8638              		.loc 1 1088 0
 8639 103a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8640 103e D7F88015 		ldr	r1, [r7, #1408]
 8641 1042 1346     		mov	r3, r2
 8642 1044 DB00     		lsls	r3, r3, #3
 8643 1046 9B1A     		subs	r3, r3, r2
 8644 1048 1B01     		lsls	r3, r3, #4
 8645 104a 0B44     		add	r3, r3, r1
 8646 104c 03F58873 		add	r3, r3, #272
 8647 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8648              		.loc 1 1070 0
 8649 1052 1433     		adds	r3, r3, #20
 8650 1054 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 200


 8651 1056 07F54873 		add	r3, r7, #800
 8652 105a 83F83F20 		strb	r2, [r3, #63]
1089:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8653              		.loc 1 1089 0
 8654 105e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8655 1062 D7F88015 		ldr	r1, [r7, #1408]
 8656 1066 1346     		mov	r3, r2
 8657 1068 DB00     		lsls	r3, r3, #3
 8658 106a 9B1A     		subs	r3, r3, r2
 8659 106c 1B01     		lsls	r3, r3, #4
 8660 106e 0B44     		add	r3, r3, r1
 8661 1070 03F58873 		add	r3, r3, #272
 8662 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8663              		.loc 1 1070 0
 8664 1076 1433     		adds	r3, r3, #20
 8665 1078 DAB2     		uxtb	r2, r3
 8666 107a 07F54873 		add	r3, r7, #800
 8667 107e 83F84020 		strb	r2, [r3, #64]
 8668 1082 07F54873 		add	r3, r7, #800
 8669 1086 1422     		movs	r2, #20
 8670 1088 83F84120 		strb	r2, [r3, #65]
 8671 108c 07F54873 		add	r3, r7, #800
 8672 1090 1522     		movs	r2, #21
 8673 1092 83F84220 		strb	r2, [r3, #66]
 8674 1096 07F54873 		add	r3, r7, #800
 8675 109a 3222     		movs	r2, #50
 8676 109c 83F84320 		strb	r2, [r3, #67]
 8677 10a0 07F54873 		add	r3, r7, #800
 8678 10a4 3222     		movs	r2, #50
 8679 10a6 83F84420 		strb	r2, [r3, #68]
 8680 10aa 07F54873 		add	r3, r7, #800
 8681 10ae 3222     		movs	r2, #50
 8682 10b0 83F84520 		strb	r2, [r3, #69]
 8683 10b4 07F54873 		add	r3, r7, #800
 8684 10b8 3222     		movs	r2, #50
 8685 10ba 83F84620 		strb	r2, [r3, #70]
 8686 10be 07F54873 		add	r3, r7, #800
 8687 10c2 6E22     		movs	r2, #110
 8688 10c4 83F84720 		strb	r2, [r3, #71]
 8689 10c8 07F54873 		add	r3, r7, #800
 8690 10cc 6E22     		movs	r2, #110
 8691 10ce 83F84820 		strb	r2, [r3, #72]
 8692 10d2 07F54873 		add	r3, r7, #800
 8693 10d6 6E22     		movs	r2, #110
 8694 10d8 83F84920 		strb	r2, [r3, #73]
 8695 10dc 07F54873 		add	r3, r7, #800
 8696 10e0 0022     		movs	r2, #0
 8697 10e2 83F84A20 		strb	r2, [r3, #74]
 8698 10e6 07F54873 		add	r3, r7, #800
 8699 10ea 6422     		movs	r2, #100
 8700 10ec 83F84B20 		strb	r2, [r3, #75]
 8701 10f0 07F54873 		add	r3, r7, #800
 8702 10f4 6422     		movs	r2, #100
 8703 10f6 83F84C20 		strb	r2, [r3, #76]
 8704 10fa 07F54873 		add	r3, r7, #800
 8705 10fe 6422     		movs	r2, #100
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 201


 8706 1100 83F84D20 		strb	r2, [r3, #77]
 8707 1104 07F54873 		add	r3, r7, #800
 8708 1108 5022     		movs	r2, #80
 8709 110a 83F84E20 		strb	r2, [r3, #78]
 8710 110e 07F54873 		add	r3, r7, #800
 8711 1112 5022     		movs	r2, #80
 8712 1114 83F84F20 		strb	r2, [r3, #79]
 8713 1118 07F54873 		add	r3, r7, #800
 8714 111c 5A22     		movs	r2, #90
 8715 111e 83F85020 		strb	r2, [r3, #80]
 8716 1122 07F54873 		add	r3, r7, #800
 8717 1126 5A22     		movs	r2, #90
 8718 1128 83F85120 		strb	r2, [r3, #81]
 8719 112c 07F54873 		add	r3, r7, #800
 8720 1130 5A22     		movs	r2, #90
 8721 1132 83F85220 		strb	r2, [r3, #82]
1090:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC,
1091:..\src/command_processing.c ****         ST_JOY_SPEC, ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, 
1092:..\src/command_processing.c ****         ST_WR_SPEC,
1093:..\src/command_processing.c ****         
1094:..\src/command_processing.c ****                     ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC,
1095:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
1096:..\src/command_processing.c ****         
1097:..\src/command_processing.c ****     };
1098:..\src/command_processing.c ****     
1099:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8722              		.loc 1 1099 0
 8723 1136 07F5EA73 		add	r3, r7, #468
 8724 113a CD4A     		ldr	r2, .L382
 8725 113c 1846     		mov	r0, r3
 8726 113e 1146     		mov	r1, r2
 8727 1140 4FF4A673 		mov	r3, #332
 8728 1144 1A46     		mov	r2, r3
 8729 1146 FFF7FEFF 		bl	memcpy
1100:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1101:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1102:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1103:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1104:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1105:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1106:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1107:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1108:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1109:..\src/command_processing.c ****         
1110:..\src/command_processing.c ****         // GENERIC PARAMS
1111:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1112:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1113:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1114:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1115:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1116:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1117:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1118:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1119:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Record EMG on SD card:", "72 -
1120:..\src/command_processing.c ****         "73 - Joystick threshold:", "74 - Joystick gains:", "75 - Device type:", "76 - EMG FSM act.
1121:..\src/command_processing.c ****         "77 - Fast act.thresholds:",
1122:..\src/command_processing.c ****         
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 202


1123:..\src/command_processing.c ****                                      "78 - Wrist direction:", "79 - Slave communication active:", "
1124:..\src/command_processing.c ****         "81 - Maximum slave residual current:", "82 - Maximum pressure feedback (kPa):", "83 - Prop
1125:..\src/command_processing.c ****     };
1126:..\src/command_processing.c **** 
1127:..\src/command_processing.c ****     //Parameters menu
1128:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8730              		.loc 1 1128 0
 8731 114a 07F5AE73 		add	r3, r7, #348
 8732 114e 0022     		movs	r2, #0
 8733 1150 1A60     		str	r2, [r3]
 8734 1152 0433     		adds	r3, r3, #4
 8735 1154 7222     		movs	r2, #114
 8736 1156 0021     		movs	r1, #0
 8737 1158 1846     		mov	r0, r3
 8738 115a FFF7FEFF 		bl	memset
1129:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8739              		.loc 1 1129 0
 8740 115e 07F5AE70 		add	r0, r7, #348
 8741 1162 6423     		movs	r3, #100
 8742 1164 0A22     		movs	r2, #10
 8743 1166 C349     		ldr	r1, .L382+4
 8744 1168 FFF7FEFF 		bl	sprintf
1130:..\src/command_processing.c **** 
1131:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 8745              		.loc 1 1131 0
 8746 116c 07F59273 		add	r3, r7, #292
 8747 1170 0022     		movs	r2, #0
 8748 1172 1A60     		str	r2, [r3]
 8749 1174 0433     		adds	r3, r3, #4
 8750 1176 3422     		movs	r2, #52
 8751 1178 0021     		movs	r1, #0
 8752 117a 1846     		mov	r0, r3
 8753 117c FFF7FEFF 		bl	memset
1132:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 8754              		.loc 1 1132 0
 8755 1180 D7F88035 		ldr	r3, [r7, #1408]
 8756 1184 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8757 1188 042B     		cmp	r3, #4
 8758 118a 10D1     		bne	.L314
1133:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 8759              		.loc 1 1133 0
 8760 118c 07F59273 		add	r3, r7, #292
 8761 1190 B94A     		ldr	r2, .L382+8
 8762 1192 1C46     		mov	r4, r3
 8763 1194 1546     		mov	r5, r2
 8764 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8765 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8766 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8767 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8768 119e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8769 11a0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8770 11a2 95E80300 		ldmia	r5, {r0, r1}
 8771 11a6 2060     		str	r0, [r4]
 8772 11a8 0434     		adds	r4, r4, #4
 8773 11aa 2170     		strb	r1, [r4]
 8774 11ac 0FE0     		b	.L315
 8775              	.L314:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 203


1134:..\src/command_processing.c ****     }
1135:..\src/command_processing.c ****     else {
1136:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist,Slow:hand\n1 -> Slow:wrist,Fast:hand\n")
 8776              		.loc 1 1136 0
 8777 11ae 07F59273 		add	r3, r7, #292
 8778 11b2 B24A     		ldr	r2, .L382+12
 8779 11b4 1C46     		mov	r4, r3
 8780 11b6 1546     		mov	r5, r2
 8781 11b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8782 11ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8783 11bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8784 11be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8785 11c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8786 11c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8787 11c4 95E80300 		ldmia	r5, {r0, r1}
 8788 11c8 2060     		str	r0, [r4]
 8789 11ca 0434     		adds	r4, r4, #4
 8790 11cc 2170     		strb	r1, [r4]
 8791              	.L315:
1137:..\src/command_processing.c ****     }
1138:..\src/command_processing.c ****     
1139:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8792              		.loc 1 1139 0
 8793 11ce 07F1F403 		add	r3, r7, #244
 8794 11d2 AB4A     		ldr	r2, .L382+16
 8795 11d4 1A60     		str	r2, [r3]
 8796 11d6 07F1F403 		add	r3, r7, #244
 8797 11da AA4A     		ldr	r2, .L382+20
 8798 11dc 5A60     		str	r2, [r3, #4]
 8799 11de 07F1F403 		add	r3, r7, #244
 8800 11e2 A94A     		ldr	r2, .L382+24
 8801 11e4 9A60     		str	r2, [r3, #8]
 8802 11e6 07F1F403 		add	r3, r7, #244
 8803 11ea A84A     		ldr	r2, .L382+28
 8804 11ec DA60     		str	r2, [r3, #12]
 8805 11ee 07F1F403 		add	r3, r7, #244
 8806 11f2 A74A     		ldr	r2, .L382+32
 8807 11f4 1A61     		str	r2, [r3, #16]
 8808 11f6 07F1F403 		add	r3, r7, #244
 8809 11fa A64A     		ldr	r2, .L382+36
 8810 11fc 5A61     		str	r2, [r3, #20]
 8811 11fe 07F1F403 		add	r3, r7, #244
 8812 1202 07F5AE72 		add	r2, r7, #348
 8813 1206 9A61     		str	r2, [r3, #24]
 8814 1208 07F1F403 		add	r3, r7, #244
 8815 120c A24A     		ldr	r2, .L382+40
 8816 120e DA61     		str	r2, [r3, #28]
 8817 1210 07F1F403 		add	r3, r7, #244
 8818 1214 A14A     		ldr	r2, .L382+44
 8819 1216 1A62     		str	r2, [r3, #32]
 8820 1218 07F1F403 		add	r3, r7, #244
 8821 121c A04A     		ldr	r2, .L382+48
 8822 121e 5A62     		str	r2, [r3, #36]
 8823 1220 07F1F403 		add	r3, r7, #244
 8824 1224 07F59272 		add	r2, r7, #292
 8825 1228 9A62     		str	r2, [r3, #40]
 8826 122a 07F1F403 		add	r3, r7, #244
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 204


 8827 122e 9D4A     		ldr	r2, .L382+52
 8828 1230 DA62     		str	r2, [r3, #44]
1140:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1141:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1142:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1143:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1144:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1145:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1146:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1147:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> R01\nThe board will reset\n",                         
1148:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\n2 -> ESC (Brushless)\nThe board will r
1149:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1150:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1151:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1152:..\src/command_processing.c ****     };   
1153:..\src/command_processing.c ****     
1154:..\src/command_processing.c ****     uint8 NUM_MENU[32] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8829              		.loc 1 1154 0
 8830 1232 07F1D403 		add	r3, r7, #212
 8831 1236 9C4A     		ldr	r2, .L382+56
 8832 1238 1C46     		mov	r4, r3
 8833 123a 1546     		mov	r5, r2
 8834 123c 2868     		ldr	r0, [r5]	@ unaligned
 8835 123e 6968     		ldr	r1, [r5, #4]	@ unaligned
 8836 1240 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8837 1242 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8838 1244 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8839 1246 2869     		ldr	r0, [r5, #16]	@ unaligned
 8840 1248 6969     		ldr	r1, [r5, #20]	@ unaligned
 8841 124a AA69     		ldr	r2, [r5, #24]	@ unaligned
 8842 124c EB69     		ldr	r3, [r5, #28]	@ unaligned
 8843 124e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
1155:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8844              		.loc 1 1155 0
 8845 1250 07F1C803 		add	r3, r7, #200
 8846 1254 954A     		ldr	r2, .L382+60
 8847 1256 1068     		ldr	r0, [r2]	@ unaligned
 8848 1258 5168     		ldr	r1, [r2, #4]	@ unaligned
 8849 125a 03C3     		stmia	r3!, {r0, r1}
 8850 125c 127A     		ldrb	r2, [r2, #8]
 8851 125e 1A70     		strb	r2, [r3]
1156:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8852              		.loc 1 1156 0
 8853 1260 07F1B403 		add	r3, r7, #180
 8854 1264 924A     		ldr	r2, .L382+64
 8855 1266 1C46     		mov	r4, r3
 8856 1268 1546     		mov	r5, r2
 8857 126a 2868     		ldr	r0, [r5]	@ unaligned
 8858 126c 6968     		ldr	r1, [r5, #4]	@ unaligned
 8859 126e AA68     		ldr	r2, [r5, #8]	@ unaligned
 8860 1270 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8861 1272 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8862 1274 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8863 1276 2380     		strh	r3, [r4]	@ unaligned
1157:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8864              		.loc 1 1157 0
 8865 1278 2323     		movs	r3, #35
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 205


 8866 127a 87F87B35 		strb	r3, [r7, #1403]
1158:..\src/command_processing.c **** 
1159:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1160:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1161:..\src/command_processing.c ****     
1162:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1163:..\src/command_processing.c **** 
1164:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1165:..\src/command_processing.c ****     
1166:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1167:..\src/command_processing.c ****     j = 0;
 8867              		.loc 1 1167 0
 8868 127e 0023     		movs	r3, #0
 8869 1280 87F88635 		strb	r3, [r7, #1414]
1168:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8870              		.loc 1 1168 0
 8871 1284 0023     		movs	r3, #0
 8872 1286 87F88735 		strb	r3, [r7, #1415]
 8873 128a 21E0     		b	.L316
 8874              	.L319:
1169:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8875              		.loc 1 1169 0
 8876 128c 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8877 1290 07F1C802 		add	r2, r7, #200
 8878 1294 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8879 1296 1A46     		mov	r2, r3
 8880 1298 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8881 129c 0133     		adds	r3, r3, #1
 8882 129e 9A42     		cmp	r2, r3
 8883 12a0 0BD1     		bne	.L317
1170:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8884              		.loc 1 1170 0
 8885 12a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8886 12a6 07F16002 		add	r2, r7, #96
 8887 12aa 0121     		movs	r1, #1
 8888 12ac D154     		strb	r1, [r2, r3]
1171:..\src/command_processing.c ****             j++;
 8889              		.loc 1 1171 0
 8890 12ae 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8891 12b2 0133     		adds	r3, r3, #1
 8892 12b4 87F88635 		strb	r3, [r7, #1414]
 8893 12b8 05E0     		b	.L318
 8894              	.L317:
1172:..\src/command_processing.c ****         }
1173:..\src/command_processing.c ****         else {
1174:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8895              		.loc 1 1174 0
 8896 12ba 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8897 12be 07F16002 		add	r2, r7, #96
 8898 12c2 0021     		movs	r1, #0
 8899 12c4 D154     		strb	r1, [r2, r3]
 8900              	.L318:
1168:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8901              		.loc 1 1168 0 discriminator 2
 8902 12c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8903 12ca 0133     		adds	r3, r3, #1
 8904 12cc 87F88735 		strb	r3, [r7, #1415]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 206


 8905              	.L316:
1168:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8906              		.loc 1 1168 0 is_stmt 0 discriminator 1
 8907 12d0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8908 12d4 522B     		cmp	r3, #82
 8909 12d6 D9D9     		bls	.L319
1175:..\src/command_processing.c ****         }
1176:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1177:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1178:..\src/command_processing.c ****     j = 0;
 8910              		.loc 1 1178 0 is_stmt 1
 8911 12d8 0023     		movs	r3, #0
 8912 12da 87F88635 		strb	r3, [r7, #1414]
1179:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8913              		.loc 1 1179 0
 8914 12de 0023     		movs	r3, #0
 8915 12e0 87F88735 		strb	r3, [r7, #1415]
 8916 12e4 21E0     		b	.L320
 8917              	.L323:
1180:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8918              		.loc 1 1180 0
 8919 12e6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8920 12ea 07F1B402 		add	r2, r7, #180
 8921 12ee D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8922 12f0 1A46     		mov	r2, r3
 8923 12f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8924 12f6 0133     		adds	r3, r3, #1
 8925 12f8 9A42     		cmp	r2, r3
 8926 12fa 0BD1     		bne	.L321
1181:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8927              		.loc 1 1181 0
 8928 12fc 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8929 1300 07F10C02 		add	r2, r7, #12
 8930 1304 0121     		movs	r1, #1
 8931 1306 D154     		strb	r1, [r2, r3]
1182:..\src/command_processing.c ****             j++;
 8932              		.loc 1 1182 0
 8933 1308 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8934 130c 0133     		adds	r3, r3, #1
 8935 130e 87F88635 		strb	r3, [r7, #1414]
 8936 1312 05E0     		b	.L322
 8937              	.L321:
1183:..\src/command_processing.c ****         }
1184:..\src/command_processing.c ****         else {
1185:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8938              		.loc 1 1185 0
 8939 1314 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8940 1318 07F10C02 		add	r2, r7, #12
 8941 131c 0021     		movs	r1, #0
 8942 131e D154     		strb	r1, [r2, r3]
 8943              	.L322:
1179:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8944              		.loc 1 1179 0 discriminator 2
 8945 1320 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8946 1324 0133     		adds	r3, r3, #1
 8947 1326 87F88735 		strb	r3, [r7, #1415]
 8948              	.L320:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 207


1179:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8949              		.loc 1 1179 0 is_stmt 0 discriminator 1
 8950 132a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8951 132e 522B     		cmp	r3, #82
 8952 1330 D9D9     		bls	.L323
1186:..\src/command_processing.c ****         }
1187:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1188:..\src/command_processing.c ****         
1189:..\src/command_processing.c ****     if (!index) {
 8953              		.loc 1 1189 0 is_stmt 1
 8954 1332 BB1D     		adds	r3, r7, #6
 8955 1334 1B88     		ldrh	r3, [r3]
 8956 1336 002B     		cmp	r3, #0
 8957 1338 17D1     		bne	.L324
1190:..\src/command_processing.c ****         // Get parameters list with relative types
1191:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8958              		.loc 1 1191 0
 8959 133a 07F54874 		add	r4, r7, #800
 8960 133e 07F55D72 		add	r2, r7, #884
 8961 1342 07F57271 		add	r1, r7, #968
 8962 1346 07F21C40 		addw	r0, r7, #1052
 8963 134a 07F1F403 		add	r3, r7, #244
 8964 134e 0393     		str	r3, [sp, #12]
 8965 1350 07F16003 		add	r3, r7, #96
 8966 1354 0293     		str	r3, [sp, #8]
 8967 1356 07F5EA73 		add	r3, r7, #468
 8968 135a 0193     		str	r3, [sp, #4]
 8969 135c 07F1D403 		add	r3, r7, #212
 8970 1360 0093     		str	r3, [sp]
 8971 1362 2346     		mov	r3, r4
 8972 1364 FFF7FEFF 		bl	get_param_list
1192:..\src/command_processing.c ****     }
1193:..\src/command_processing.c ****     else {
1194:..\src/command_processing.c ****         // Set specific parameter        
1195:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1196:..\src/command_processing.c ****         
1197:..\src/command_processing.c ****         // Find size of data
1198:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1199:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1200:..\src/command_processing.c ****                 sod = 1; break;
1201:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1202:..\src/command_processing.c ****                 sod = 2; break;
1203:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1204:..\src/command_processing.c ****                 sod = 4; break;
1205:..\src/command_processing.c ****         }   
1206:..\src/command_processing.c ****             
1207:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1208:..\src/command_processing.c ****             // Use default specifications for param setting
1209:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1210:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1211:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1212:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1213:..\src/command_processing.c ****                     }
1214:..\src/command_processing.c ****                     break;                
1215:..\src/command_processing.c ****                 case TYPE_STRING:
1216:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1217:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 208


1218:..\src/command_processing.c ****                     }
1219:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1220:..\src/command_processing.c ****                 break; 
1221:..\src/command_processing.c ****                 case TYPE_INT8:
1222:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1223:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1224:..\src/command_processing.c ****                     }
1225:..\src/command_processing.c ****                     break;                    
1226:..\src/command_processing.c ****                 case TYPE_INT16:
1227:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1228:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1229:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1230:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1231:..\src/command_processing.c ****                         }
1232:..\src/command_processing.c ****                     }                   
1233:..\src/command_processing.c ****                     break;
1234:..\src/command_processing.c ****                 case TYPE_UINT16:
1235:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1236:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1237:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1238:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1239:..\src/command_processing.c ****                         }
1240:..\src/command_processing.c ****                     }
1241:..\src/command_processing.c ****                     break;
1242:..\src/command_processing.c ****                 case TYPE_INT32:
1243:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1244:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1245:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1246:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1247:..\src/command_processing.c ****                         }
1248:..\src/command_processing.c ****                     }
1249:..\src/command_processing.c ****                     break;
1250:..\src/command_processing.c ****                 case TYPE_UINT32:
1251:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1252:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1253:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1254:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1255:..\src/command_processing.c ****                         }
1256:..\src/command_processing.c ****                     }
1257:..\src/command_processing.c ****                     break;
1258:..\src/command_processing.c ****                 case TYPE_FLOAT:
1259:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1260:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1261:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1262:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1263:..\src/command_processing.c ****                         }
1264:..\src/command_processing.c ****                     }
1265:..\src/command_processing.c ****                     break;
1266:..\src/command_processing.c ****                 default:
1267:..\src/command_processing.c ****                     break;
1268:..\src/command_processing.c ****             }
1269:..\src/command_processing.c ****         }
1270:..\src/command_processing.c ****         else {  
1271:..\src/command_processing.c ****             // Use custom specifications for param setting
1272:..\src/command_processing.c ****             set_custom_param(index);
1273:..\src/command_processing.c ****         }
1274:..\src/command_processing.c ****         
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 209


1275:..\src/command_processing.c ****         // Store param also in user_emg structure
1276:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1277:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1278:..\src/command_processing.c ****         }
1279:..\src/command_processing.c ****         
1280:..\src/command_processing.c ****         // Perform chip reset if needed
1281:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1282:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1283:..\src/command_processing.c ****             do {
1284:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1285:..\src/command_processing.c ****                 idx++;
1286:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1287:..\src/command_processing.c ****             
1288:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1289:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1290:..\src/command_processing.c ****             }   
1291:..\src/command_processing.c ****         }
1292:..\src/command_processing.c ****     }
1293:..\src/command_processing.c **** } 
 8973              		.loc 1 1293 0
 8974 1368 E0E2     		b	.L375
 8975              	.L324:
1195:..\src/command_processing.c ****         
 8976              		.loc 1 1195 0
 8977 136a BB1D     		adds	r3, r7, #6
 8978 136c 1B88     		ldrh	r3, [r3]	@ movhi
 8979 136e DBB2     		uxtb	r3, r3
 8980 1370 013B     		subs	r3, r3, #1
 8981 1372 87F87A35 		strb	r3, [r7, #1402]
1198:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8982              		.loc 1 1198 0
 8983 1376 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8984 137a 07F57272 		add	r2, r7, #968
 8985 137e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8986 1380 092B     		cmp	r3, #9
 8987 1382 23D8     		bhi	.L326
 8988 1384 01A2     		adr	r2, .L328
 8989 1386 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8990 138a 00BF     		.p2align 2
 8991              	.L328:
 8992 138c B5130000 		.word	.L327+1
 8993 1390 B5130000 		.word	.L327+1
 8994 1394 B5130000 		.word	.L327+1
 8995 1398 BD130000 		.word	.L329+1
 8996 139c BD130000 		.word	.L329+1
 8997 13a0 C5130000 		.word	.L330+1
 8998 13a4 C5130000 		.word	.L330+1
 8999 13a8 C5130000 		.word	.L330+1
 9000 13ac CD130000 		.word	.L326+1
 9001 13b0 B5130000 		.word	.L327+1
 9002              		.p2align 1
 9003              	.L327:
1200:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 9004              		.loc 1 1200 0
 9005 13b4 0123     		movs	r3, #1
 9006 13b6 87F88535 		strb	r3, [r7, #1413]
 9007 13ba 07E0     		b	.L326
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 210


 9008              	.L329:
1202:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 9009              		.loc 1 1202 0
 9010 13bc 0223     		movs	r3, #2
 9011 13be 87F88535 		strb	r3, [r7, #1413]
 9012 13c2 03E0     		b	.L326
 9013              	.L330:
1204:..\src/command_processing.c ****         }   
 9014              		.loc 1 1204 0
 9015 13c4 0423     		movs	r3, #4
 9016 13c6 87F88535 		strb	r3, [r7, #1413]
 9017 13ca 00BF     		nop
 9018              	.L326:
1207:..\src/command_processing.c ****             // Use default specifications for param setting
 9019              		.loc 1 1207 0
 9020 13cc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9021 13d0 07F10C02 		add	r2, r7, #12
 9022 13d4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9023 13d6 002B     		cmp	r3, #0
 9024 13d8 40F03B82 		bne	.L331
1209:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 9025              		.loc 1 1209 0
 9026 13dc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9027 13e0 07F57272 		add	r2, r7, #968
 9028 13e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9029 13e6 092B     		cmp	r3, #9
 9030 13e8 00F23C82 		bhi	.L374
 9031 13ec 01A2     		adr	r2, .L334
 9032 13ee 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9033 13f2 00BF     		.p2align 2
 9034              	.L334:
 9035 13f4 1D140000 		.word	.L333+1
 9036 13f8 1B150000 		.word	.L335+1
 9037 13fc 1D140000 		.word	.L333+1
 9038 1400 6D150000 		.word	.L336+1
 9039 1404 03160000 		.word	.L337+1
 9040 1408 97160000 		.word	.L338+1
 9041 140c 2B170000 		.word	.L339+1
 9042 1410 BF170000 		.word	.L340+1
 9043 1414 65180000 		.word	.L374+1
 9044 1418 69140000 		.word	.L341+1
 9045              		.p2align 1
 9046              	.L333:
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9047              		.loc 1 1211 0
 9048 141c 0023     		movs	r3, #0
 9049 141e 87F88735 		strb	r3, [r7, #1415]
 9050 1422 17E0     		b	.L342
 9051              	.L343:
1212:..\src/command_processing.c ****                     }
 9052              		.loc 1 1212 0 discriminator 3
 9053 1424 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9054 1428 07F21C43 		addw	r3, r7, #1052
 9055 142c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9056 1430 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9057 1434 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9058 1438 01FB02F2 		mul	r2, r1, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 211


 9059 143c 1344     		add	r3, r3, r2
 9060 143e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9061 1442 0332     		adds	r2, r2, #3
 9062 1444 1B49     		ldr	r1, .L382+68
 9063 1446 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9064 1448 1A70     		strb	r2, [r3]
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9065              		.loc 1 1211 0 discriminator 3
 9066 144a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9067 144e 0133     		adds	r3, r3, #1
 9068 1450 87F88735 		strb	r3, [r7, #1415]
 9069              	.L342:
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9070              		.loc 1 1211 0 is_stmt 0 discriminator 1
 9071 1454 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9072 1458 07F55D72 		add	r2, r7, #884
 9073 145c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9074 145e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9075 1462 9A42     		cmp	r2, r3
 9076 1464 DED3     		bcc	.L343
1214:..\src/command_processing.c ****                 case TYPE_STRING:
 9077              		.loc 1 1214 0 is_stmt 1
 9078 1466 FEE1     		b	.L369
 9079              	.L341:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9080              		.loc 1 1216 0
 9081 1468 0023     		movs	r3, #0
 9082 146a 87F88735 		strb	r3, [r7, #1415]
 9083 146e 3BE0     		b	.L345
 9084              	.L383:
 9085              		.align	2
 9086              	.L382:
 9087 1470 340F0000 		.word	.LC129
 9088 1474 88020000 		.word	.LC130
 9089 1478 FC020000 		.word	.LC131
 9090 147c 34030000 		.word	.LC132
 9091 1480 6C030000 		.word	.LC133
 9092 1484 F8030000 		.word	.LC134
 9093 1488 38040000 		.word	.LC135
 9094 148c 64040000 		.word	.LC136
 9095 1490 7C040000 		.word	.LC137
 9096 1494 A4040000 		.word	.LC138
 9097 1498 00050000 		.word	.LC139
 9098 149c 3C050000 		.word	.LC140
 9099 14a0 9C050000 		.word	.LC141
 9100 14a4 18060000 		.word	.LC142
 9101 14a8 80100000 		.word	.LC85
 9102 14ac A0100000 		.word	.LC86
 9103 14b0 AC100000 		.word	.LC87
 9104 14b4 00000000 		.word	g_rx
 9105              	.L346:
1217:..\src/command_processing.c ****                     }
 9106              		.loc 1 1217 0 discriminator 3
 9107 14b8 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9108 14bc 07F21C43 		addw	r3, r7, #1052
 9109 14c0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9110 14c4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 212


 9111 14c8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9112 14cc 01FB02F2 		mul	r2, r1, r2
 9113 14d0 1344     		add	r3, r3, r2
 9114 14d2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9115 14d6 0332     		adds	r2, r2, #3
 9116 14d8 E149     		ldr	r1, .L384
 9117 14da 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9118 14dc 1A70     		strb	r2, [r3]
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9119              		.loc 1 1216 0 discriminator 3
 9120 14de 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9121 14e2 0133     		adds	r3, r3, #1
 9122 14e4 87F88735 		strb	r3, [r7, #1415]
 9123              	.L345:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9124              		.loc 1 1216 0 is_stmt 0 discriminator 1
 9125 14e8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9126 14ec 07F55D72 		add	r2, r7, #884
 9127 14f0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9128 14f2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9129 14f6 9A42     		cmp	r2, r3
 9130 14f8 DED3     		bcc	.L346
1219:..\src/command_processing.c ****                 break; 
 9131              		.loc 1 1219 0 is_stmt 1
 9132 14fa 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9133 14fe 07F21C43 		addw	r3, r7, #1052
 9134 1502 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9135 1506 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9136 150a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9137 150e 01FB02F2 		mul	r2, r1, r2
 9138 1512 1344     		add	r3, r3, r2
 9139 1514 0022     		movs	r2, #0
 9140 1516 1A70     		strb	r2, [r3]
1220:..\src/command_processing.c ****                 case TYPE_INT8:
 9141              		.loc 1 1220 0
 9142 1518 A5E1     		b	.L369
 9143              	.L335:
1222:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9144              		.loc 1 1222 0
 9145 151a 0023     		movs	r3, #0
 9146 151c 87F88735 		strb	r3, [r7, #1415]
 9147 1520 1AE0     		b	.L347
 9148              	.L348:
1223:..\src/command_processing.c ****                     }
 9149              		.loc 1 1223 0 discriminator 3
 9150 1522 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9151 1526 07F21C43 		addw	r3, r7, #1052
 9152 152a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9153 152e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9154 1532 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9155 1536 01FB02F2 		mul	r2, r1, r2
 9156 153a 1344     		add	r3, r3, r2
 9157 153c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9158 1540 0332     		adds	r2, r2, #3
 9159 1542 C749     		ldr	r1, .L384
 9160 1544 0A44     		add	r2, r2, r1
 9161 1546 92F90020 		ldrsb	r2, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 213


 9162 154a D2B2     		uxtb	r2, r2
 9163 154c 1A70     		strb	r2, [r3]
1222:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9164              		.loc 1 1222 0 discriminator 3
 9165 154e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9166 1552 0133     		adds	r3, r3, #1
 9167 1554 87F88735 		strb	r3, [r7, #1415]
 9168              	.L347:
1222:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9169              		.loc 1 1222 0 is_stmt 0 discriminator 1
 9170 1558 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9171 155c 07F55D72 		add	r2, r7, #884
 9172 1560 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9173 1562 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9174 1566 9A42     		cmp	r2, r3
 9175 1568 DBD3     		bcc	.L348
1225:..\src/command_processing.c ****                 case TYPE_INT16:
 9176              		.loc 1 1225 0 is_stmt 1
 9177 156a 7CE1     		b	.L369
 9178              	.L336:
1227:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9179              		.loc 1 1227 0
 9180 156c 0023     		movs	r3, #0
 9181 156e 87F88735 		strb	r3, [r7, #1415]
 9182 1572 3CE0     		b	.L349
 9183              	.L352:
1228:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9184              		.loc 1 1228 0
 9185 1574 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9186 1578 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9187 157c 02FB03F3 		mul	r3, r2, r3
 9188 1580 0333     		adds	r3, r3, #3
 9189 1582 B74A     		ldr	r2, .L384
 9190 1584 1344     		add	r3, r3, r2
 9191 1586 B3F90030 		ldrsh	r3, [r3]
 9192 158a A7F87835 		strh	r3, [r7, #1400]	@ movhi
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9193              		.loc 1 1229 0
 9194 158e 0023     		movs	r3, #0
 9195 1590 87F88635 		strb	r3, [r7, #1414]
 9196 1594 20E0     		b	.L350
 9197              	.L351:
1230:..\src/command_processing.c ****                         }
 9198              		.loc 1 1230 0 discriminator 3
 9199 1596 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9200 159a 07F21C43 		addw	r3, r7, #1052
 9201 159e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9202 15a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9203 15a6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9204 15aa 01FB03F3 		mul	r3, r1, r3
 9205 15ae 1846     		mov	r0, r3
 9206 15b0 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9207 15b4 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9208 15b8 CB1A     		subs	r3, r1, r3
 9209 15ba 0344     		add	r3, r3, r0
 9210 15bc 013B     		subs	r3, r3, #1
 9211 15be 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 214


 9212 15c0 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9213 15c4 07F5AF61 		add	r1, r7, #1400
 9214 15c8 0A44     		add	r2, r2, r1
 9215 15ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9216 15cc 1A70     		strb	r2, [r3]
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9217              		.loc 1 1229 0 discriminator 3
 9218 15ce 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9219 15d2 0133     		adds	r3, r3, #1
 9220 15d4 87F88635 		strb	r3, [r7, #1414]
 9221              	.L350:
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9222              		.loc 1 1229 0 is_stmt 0 discriminator 1
 9223 15d8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9224 15dc 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9225 15e0 9A42     		cmp	r2, r3
 9226 15e2 D8D3     		bcc	.L351
1227:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9227              		.loc 1 1227 0 is_stmt 1 discriminator 2
 9228 15e4 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9229 15e8 0133     		adds	r3, r3, #1
 9230 15ea 87F88735 		strb	r3, [r7, #1415]
 9231              	.L349:
1227:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9232              		.loc 1 1227 0 is_stmt 0 discriminator 1
 9233 15ee 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9234 15f2 07F55D72 		add	r2, r7, #884
 9235 15f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9236 15f8 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9237 15fc 9A42     		cmp	r2, r3
 9238 15fe B9D3     		bcc	.L352
1233:..\src/command_processing.c ****                 case TYPE_UINT16:
 9239              		.loc 1 1233 0 is_stmt 1
 9240 1600 31E1     		b	.L369
 9241              	.L337:
1235:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9242              		.loc 1 1235 0
 9243 1602 0023     		movs	r3, #0
 9244 1604 87F88735 		strb	r3, [r7, #1415]
 9245 1608 3BE0     		b	.L353
 9246              	.L356:
1236:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9247              		.loc 1 1236 0
 9248 160a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9249 160e 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9250 1612 02FB03F3 		mul	r3, r2, r3
 9251 1616 0333     		adds	r3, r3, #3
 9252 1618 914A     		ldr	r2, .L384
 9253 161a 1344     		add	r3, r3, r2
 9254 161c 1B88     		ldrh	r3, [r3]
 9255 161e A7F87635 		strh	r3, [r7, #1398]	@ movhi
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9256              		.loc 1 1237 0
 9257 1622 0023     		movs	r3, #0
 9258 1624 87F88635 		strb	r3, [r7, #1414]
 9259 1628 20E0     		b	.L354
 9260              	.L355:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 215


1238:..\src/command_processing.c ****                         }
 9261              		.loc 1 1238 0 discriminator 3
 9262 162a 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9263 162e 07F21C43 		addw	r3, r7, #1052
 9264 1632 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9265 1636 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9266 163a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9267 163e 01FB03F3 		mul	r3, r1, r3
 9268 1642 1846     		mov	r0, r3
 9269 1644 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9270 1648 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9271 164c CB1A     		subs	r3, r1, r3
 9272 164e 0344     		add	r3, r3, r0
 9273 1650 013B     		subs	r3, r3, #1
 9274 1652 1344     		add	r3, r3, r2
 9275 1654 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9276 1658 07F27651 		addw	r1, r7, #1398
 9277 165c 0A44     		add	r2, r2, r1
 9278 165e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9279 1660 1A70     		strb	r2, [r3]
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9280              		.loc 1 1237 0 discriminator 3
 9281 1662 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9282 1666 0133     		adds	r3, r3, #1
 9283 1668 87F88635 		strb	r3, [r7, #1414]
 9284              	.L354:
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9285              		.loc 1 1237 0 is_stmt 0 discriminator 1
 9286 166c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9287 1670 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9288 1674 9A42     		cmp	r2, r3
 9289 1676 D8D3     		bcc	.L355
1235:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9290              		.loc 1 1235 0 is_stmt 1 discriminator 2
 9291 1678 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9292 167c 0133     		adds	r3, r3, #1
 9293 167e 87F88735 		strb	r3, [r7, #1415]
 9294              	.L353:
1235:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9295              		.loc 1 1235 0 is_stmt 0 discriminator 1
 9296 1682 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9297 1686 07F55D72 		add	r2, r7, #884
 9298 168a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9299 168c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9300 1690 9A42     		cmp	r2, r3
 9301 1692 BAD3     		bcc	.L356
1241:..\src/command_processing.c ****                 case TYPE_INT32:
 9302              		.loc 1 1241 0 is_stmt 1
 9303 1694 E7E0     		b	.L369
 9304              	.L338:
1243:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9305              		.loc 1 1243 0
 9306 1696 0023     		movs	r3, #0
 9307 1698 87F88735 		strb	r3, [r7, #1415]
 9308 169c 3BE0     		b	.L357
 9309              	.L360:
1244:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 216


 9310              		.loc 1 1244 0
 9311 169e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9312 16a2 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9313 16a6 02FB03F3 		mul	r3, r2, r3
 9314 16aa 0333     		adds	r3, r3, #3
 9315 16ac 6C4A     		ldr	r2, .L384
 9316 16ae 1344     		add	r3, r3, r2
 9317 16b0 1B68     		ldr	r3, [r3]
 9318 16b2 C7F87035 		str	r3, [r7, #1392]
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9319              		.loc 1 1245 0
 9320 16b6 0023     		movs	r3, #0
 9321 16b8 87F88635 		strb	r3, [r7, #1414]
 9322 16bc 20E0     		b	.L358
 9323              	.L359:
1246:..\src/command_processing.c ****                         }
 9324              		.loc 1 1246 0 discriminator 3
 9325 16be 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9326 16c2 07F21C43 		addw	r3, r7, #1052
 9327 16c6 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9328 16ca 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9329 16ce 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9330 16d2 01FB03F3 		mul	r3, r1, r3
 9331 16d6 1846     		mov	r0, r3
 9332 16d8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9333 16dc 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9334 16e0 CB1A     		subs	r3, r1, r3
 9335 16e2 0344     		add	r3, r3, r0
 9336 16e4 013B     		subs	r3, r3, #1
 9337 16e6 1344     		add	r3, r3, r2
 9338 16e8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9339 16ec 07F5AE61 		add	r1, r7, #1392
 9340 16f0 0A44     		add	r2, r2, r1
 9341 16f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9342 16f4 1A70     		strb	r2, [r3]
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9343              		.loc 1 1245 0 discriminator 3
 9344 16f6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9345 16fa 0133     		adds	r3, r3, #1
 9346 16fc 87F88635 		strb	r3, [r7, #1414]
 9347              	.L358:
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9348              		.loc 1 1245 0 is_stmt 0 discriminator 1
 9349 1700 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9350 1704 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9351 1708 9A42     		cmp	r2, r3
 9352 170a D8D3     		bcc	.L359
1243:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9353              		.loc 1 1243 0 is_stmt 1 discriminator 2
 9354 170c 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9355 1710 0133     		adds	r3, r3, #1
 9356 1712 87F88735 		strb	r3, [r7, #1415]
 9357              	.L357:
1243:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9358              		.loc 1 1243 0 is_stmt 0 discriminator 1
 9359 1716 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9360 171a 07F55D72 		add	r2, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 217


 9361 171e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9362 1720 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9363 1724 9A42     		cmp	r2, r3
 9364 1726 BAD3     		bcc	.L360
1249:..\src/command_processing.c ****                 case TYPE_UINT32:
 9365              		.loc 1 1249 0 is_stmt 1
 9366 1728 9DE0     		b	.L369
 9367              	.L339:
1251:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9368              		.loc 1 1251 0
 9369 172a 0023     		movs	r3, #0
 9370 172c 87F88735 		strb	r3, [r7, #1415]
 9371 1730 3BE0     		b	.L361
 9372              	.L364:
1252:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9373              		.loc 1 1252 0
 9374 1732 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9375 1736 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9376 173a 02FB03F3 		mul	r3, r2, r3
 9377 173e 0333     		adds	r3, r3, #3
 9378 1740 474A     		ldr	r2, .L384
 9379 1742 1344     		add	r3, r3, r2
 9380 1744 1B68     		ldr	r3, [r3]
 9381 1746 C7F86C35 		str	r3, [r7, #1388]
1253:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9382              		.loc 1 1253 0
 9383 174a 0023     		movs	r3, #0
 9384 174c 87F88635 		strb	r3, [r7, #1414]
 9385 1750 20E0     		b	.L362
 9386              	.L363:
1254:..\src/command_processing.c ****                         }
 9387              		.loc 1 1254 0 discriminator 3
 9388 1752 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9389 1756 07F21C43 		addw	r3, r7, #1052
 9390 175a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9391 175e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9392 1762 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9393 1766 01FB03F3 		mul	r3, r1, r3
 9394 176a 1846     		mov	r0, r3
 9395 176c 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9396 1770 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9397 1774 CB1A     		subs	r3, r1, r3
 9398 1776 0344     		add	r3, r3, r0
 9399 1778 013B     		subs	r3, r3, #1
 9400 177a 1344     		add	r3, r3, r2
 9401 177c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9402 1780 07F26C51 		addw	r1, r7, #1388
 9403 1784 0A44     		add	r2, r2, r1
 9404 1786 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9405 1788 1A70     		strb	r2, [r3]
1253:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9406              		.loc 1 1253 0 discriminator 3
 9407 178a 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9408 178e 0133     		adds	r3, r3, #1
 9409 1790 87F88635 		strb	r3, [r7, #1414]
 9410              	.L362:
1253:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 218


 9411              		.loc 1 1253 0 is_stmt 0 discriminator 1
 9412 1794 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9413 1798 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9414 179c 9A42     		cmp	r2, r3
 9415 179e D8D3     		bcc	.L363
1251:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9416              		.loc 1 1251 0 is_stmt 1 discriminator 2
 9417 17a0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9418 17a4 0133     		adds	r3, r3, #1
 9419 17a6 87F88735 		strb	r3, [r7, #1415]
 9420              	.L361:
1251:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9421              		.loc 1 1251 0 is_stmt 0 discriminator 1
 9422 17aa 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9423 17ae 07F55D72 		add	r2, r7, #884
 9424 17b2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9425 17b4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9426 17b8 9A42     		cmp	r2, r3
 9427 17ba BAD3     		bcc	.L364
1257:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9428              		.loc 1 1257 0 is_stmt 1
 9429 17bc 53E0     		b	.L369
 9430              	.L340:
1259:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9431              		.loc 1 1259 0
 9432 17be 0023     		movs	r3, #0
 9433 17c0 87F88735 		strb	r3, [r7, #1415]
 9434 17c4 3BE0     		b	.L365
 9435              	.L368:
1260:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9436              		.loc 1 1260 0
 9437 17c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9438 17ca 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9439 17ce 02FB03F3 		mul	r3, r2, r3
 9440 17d2 0333     		adds	r3, r3, #3
 9441 17d4 224A     		ldr	r2, .L384
 9442 17d6 1344     		add	r3, r3, r2
 9443 17d8 1B68     		ldr	r3, [r3]	@ float
 9444 17da C7F86835 		str	r3, [r7, #1384]	@ float
1261:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9445              		.loc 1 1261 0
 9446 17de 0023     		movs	r3, #0
 9447 17e0 87F88635 		strb	r3, [r7, #1414]
 9448 17e4 20E0     		b	.L366
 9449              	.L367:
1262:..\src/command_processing.c ****                         }
 9450              		.loc 1 1262 0 discriminator 3
 9451 17e6 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9452 17ea 07F21C43 		addw	r3, r7, #1052
 9453 17ee 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9454 17f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9455 17f6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9456 17fa 01FB03F3 		mul	r3, r1, r3
 9457 17fe 1846     		mov	r0, r3
 9458 1800 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9459 1804 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9460 1808 CB1A     		subs	r3, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 219


 9461 180a 0344     		add	r3, r3, r0
 9462 180c 013B     		subs	r3, r3, #1
 9463 180e 1344     		add	r3, r3, r2
 9464 1810 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9465 1814 07F5AD61 		add	r1, r7, #1384
 9466 1818 0A44     		add	r2, r2, r1
 9467 181a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9468 181c 1A70     		strb	r2, [r3]
1261:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9469              		.loc 1 1261 0 discriminator 3
 9470 181e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9471 1822 0133     		adds	r3, r3, #1
 9472 1824 87F88635 		strb	r3, [r7, #1414]
 9473              	.L366:
1261:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9474              		.loc 1 1261 0 is_stmt 0 discriminator 1
 9475 1828 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9476 182c 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9477 1830 9A42     		cmp	r2, r3
 9478 1832 D8D3     		bcc	.L367
1259:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9479              		.loc 1 1259 0 is_stmt 1 discriminator 2
 9480 1834 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9481 1838 0133     		adds	r3, r3, #1
 9482 183a 87F88735 		strb	r3, [r7, #1415]
 9483              	.L365:
1259:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9484              		.loc 1 1259 0 is_stmt 0 discriminator 1
 9485 183e 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9486 1842 07F55D72 		add	r2, r7, #884
 9487 1846 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9488 1848 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9489 184c 9A42     		cmp	r2, r3
 9490 184e BAD3     		bcc	.L368
1265:..\src/command_processing.c ****                 default:
 9491              		.loc 1 1265 0 is_stmt 1
 9492 1850 09E0     		b	.L369
 9493              	.L331:
1272:..\src/command_processing.c ****         }
 9494              		.loc 1 1272 0
 9495 1852 BB1D     		adds	r3, r7, #6
 9496 1854 1B88     		ldrh	r3, [r3]
 9497 1856 1846     		mov	r0, r3
 9498 1858 FFF7FEFF 		bl	set_custom_param
 9499 185c 03E0     		b	.L369
 9500              	.L385:
 9501 185e 00BF     		.align	2
 9502              	.L384:
 9503 1860 00000000 		.word	g_rx
 9504              	.L374:
1267:..\src/command_processing.c ****             }
 9505              		.loc 1 1267 0
 9506 1864 00BF     		nop
 9507              	.L369:
1276:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9508              		.loc 1 1276 0
 9509 1866 97F87B35 		ldrb	r3, [r7, #1403]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 220


 9510 186a 9BB2     		uxth	r3, r3
 9511 186c BA1D     		adds	r2, r7, #6
 9512 186e 1288     		ldrh	r2, [r2]
 9513 1870 9A42     		cmp	r2, r3
 9514 1872 11D0     		beq	.L370
1277:..\src/command_processing.c ****         }
 9515              		.loc 1 1277 0
 9516 1874 D7F88035 		ldr	r3, [r7, #1408]
 9517 1878 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9518 187c 5B01     		lsls	r3, r3, #5
 9519 187e 03F51273 		add	r3, r3, #584
 9520 1882 D7F88025 		ldr	r2, [r7, #1408]
 9521 1886 D018     		adds	r0, r2, r3
 9522 1888 D7F88035 		ldr	r3, [r7, #1408]
 9523 188c 03F5F873 		add	r3, r3, #496
 9524 1890 1022     		movs	r2, #16
 9525 1892 1946     		mov	r1, r3
 9526 1894 FFF7FEFF 		bl	memcpy
 9527              	.L370:
1281:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9528              		.loc 1 1281 0
 9529 1898 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9530 189c 07F57272 		add	r2, r7, #968
 9531 18a0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9532 18a2 002B     		cmp	r3, #0
 9533 18a4 42D1     		bne	.L375
 9534              	.LBB22:
1282:..\src/command_processing.c ****             do {
 9535              		.loc 1 1282 0
 9536 18a6 0023     		movs	r3, #0
 9537 18a8 87F87F35 		strb	r3, [r7, #1407]
 9538 18ac FF23     		movs	r3, #255
 9539 18ae 87F87E35 		strb	r3, [r7, #1406]
 9540              	.L372:
1284:..\src/command_processing.c ****                 idx++;
 9541              		.loc 1 1284 0
 9542 18b2 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9543 18b6 07F57272 		add	r2, r7, #968
 9544 18ba D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9545 18bc 002B     		cmp	r3, #0
 9546 18be 04D1     		bne	.L371
1284:..\src/command_processing.c ****                 idx++;
 9547              		.loc 1 1284 0 is_stmt 0 discriminator 1
 9548 18c0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9549 18c4 0133     		adds	r3, r3, #1
 9550 18c6 87F87E35 		strb	r3, [r7, #1406]
 9551              	.L371:
1285:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9552              		.loc 1 1285 0 is_stmt 1
 9553 18ca 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9554 18ce 0133     		adds	r3, r3, #1
 9555 18d0 87F87F35 		strb	r3, [r7, #1407]
1286:..\src/command_processing.c ****             
 9556              		.loc 1 1286 0
 9557 18d4 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9558 18d8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9559 18dc 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 221


 9560 18de E8D9     		bls	.L372
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9561              		.loc 1 1288 0
 9562 18e0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9563 18e4 07F1D402 		add	r2, r7, #212
 9564 18e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9565 18ea 052B     		cmp	r3, #5
 9566 18ec 1BD0     		beq	.L373
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9567              		.loc 1 1288 0 is_stmt 0 discriminator 1
 9568 18ee 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9569 18f2 07F1D402 		add	r2, r7, #212
 9570 18f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9571 18f8 062B     		cmp	r3, #6
 9572 18fa 14D0     		beq	.L373
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9573              		.loc 1 1288 0 discriminator 2
 9574 18fc 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9575 1900 07F1D402 		add	r2, r7, #212
 9576 1904 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9577 1906 082B     		cmp	r3, #8
 9578 1908 0DD0     		beq	.L373
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9579              		.loc 1 1288 0 discriminator 3
 9580 190a 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9581 190e 07F1D402 		add	r2, r7, #212
 9582 1912 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9583 1914 092B     		cmp	r3, #9
 9584 1916 06D0     		beq	.L373
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9585              		.loc 1 1288 0 discriminator 4
 9586 1918 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9587 191c 07F1D402 		add	r2, r7, #212
 9588 1920 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9589 1922 0A2B     		cmp	r3, #10
 9590 1924 02D1     		bne	.L375
 9591              	.L373:
1289:..\src/command_processing.c ****             }   
 9592              		.loc 1 1289 0 is_stmt 1
 9593 1926 044B     		ldr	r3, .L386
 9594 1928 0122     		movs	r2, #1
 9595 192a 1A70     		strb	r2, [r3]
 9596              	.L375:
 9597              	.LBE22:
 9598              		.loc 1 1293 0
 9599 192c 00BF     		nop
 9600 192e 07F5B167 		add	r7, r7, #1416
 9601              		.cfi_def_cfa_offset 16
 9602 1932 BD46     		mov	sp, r7
 9603              		.cfi_def_cfa_register 13
 9604              		@ sp needed
 9605 1934 B0BD     		pop	{r4, r5, r7, pc}
 9606              	.L387:
 9607 1936 00BF     		.align	2
 9608              	.L386:
 9609 1938 00000000 		.word	reset_PSoC_flag
 9610              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 222


 9611              	.LFE68:
 9612              		.size	manage_param_list, .-manage_param_list
 9613              		.global	__aeabi_fmul
 9614              		.global	__aeabi_f2iz
 9615              		.section	.text.set_custom_param,"ax",%progbits
 9616              		.align	2
 9617              		.global	set_custom_param
 9618              		.thumb
 9619              		.thumb_func
 9620              		.type	set_custom_param, %function
 9621              	set_custom_param:
 9622              	.LFB69:
1294:..\src/command_processing.c **** 
1295:..\src/command_processing.c **** //==============================================================================
1296:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1297:..\src/command_processing.c **** //==============================================================================
1298:..\src/command_processing.c **** 
1299:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9623              		.loc 1 1299 0
 9624              		.cfi_startproc
 9625              		@ args = 0, pretend = 0, frame = 24
 9626              		@ frame_needed = 1, uses_anonymous_args = 0
 9627 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9628              		.cfi_def_cfa_offset 20
 9629              		.cfi_offset 4, -20
 9630              		.cfi_offset 5, -16
 9631              		.cfi_offset 6, -12
 9632              		.cfi_offset 7, -8
 9633              		.cfi_offset 14, -4
 9634 0002 87B0     		sub	sp, sp, #28
 9635              		.cfi_def_cfa_offset 48
 9636 0004 00AF     		add	r7, sp, #0
 9637              		.cfi_def_cfa_register 7
 9638 0006 0346     		mov	r3, r0
 9639 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1300:..\src/command_processing.c **** 
1301:..\src/command_processing.c ****     uint8 CYDATA i, j;
1302:..\src/command_processing.c ****     uint8 aux_uchar;
1303:..\src/command_processing.c ****     float aux_float, aux_float2;
1304:..\src/command_processing.c **** 
1305:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9640              		.loc 1 1305 0
 9641 000a 0023     		movs	r3, #0
 9642 000c 3B75     		strb	r3, [r7, #20]
1306:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9643              		.loc 1 1306 0
 9644 000e 0123     		movs	r3, #1
 9645 0010 FB74     		strb	r3, [r7, #19]
1307:..\src/command_processing.c ****     
1308:..\src/command_processing.c ****     switch(index){
 9646              		.loc 1 1308 0
 9647 0012 FB88     		ldrh	r3, [r7, #6]
 9648 0014 023B     		subs	r3, r3, #2
 9649 0016 492B     		cmp	r3, #73
 9650 0018 01F24C82 		bhi	.L483
 9651 001c 01A2     		adr	r2, .L391
 9652 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 223


 9653 0022 00BF     		.p2align 2
 9654              	.L391:
 9655 0024 4D010000 		.word	.L390+1
 9656 0028 7F030000 		.word	.L392+1
 9657 002c B5140000 		.word	.L483+1
 9658 0030 C5050000 		.word	.L393+1
 9659 0034 B5140000 		.word	.L483+1
 9660 0038 B5140000 		.word	.L483+1
 9661 003c 0F060000 		.word	.L394+1
 9662 0040 B5140000 		.word	.L483+1
 9663 0044 B5140000 		.word	.L483+1
 9664 0048 49070000 		.word	.L395+1
 9665 004c B5140000 		.word	.L483+1
 9666 0050 B5140000 		.word	.L483+1
 9667 0054 B5140000 		.word	.L483+1
 9668 0058 B5140000 		.word	.L483+1
 9669 005c B5140000 		.word	.L483+1
 9670 0060 B5140000 		.word	.L483+1
 9671 0064 B5140000 		.word	.L483+1
 9672 0068 B5140000 		.word	.L483+1
 9673 006c B5140000 		.word	.L483+1
 9674 0070 B5140000 		.word	.L483+1
 9675 0074 B5140000 		.word	.L483+1
 9676 0078 49080000 		.word	.L396+1
 9677 007c A7080000 		.word	.L397+1
 9678 0080 B5140000 		.word	.L483+1
 9679 0084 B5140000 		.word	.L483+1
 9680 0088 B5140000 		.word	.L483+1
 9681 008c E1080000 		.word	.L398+1
 9682 0090 B5140000 		.word	.L483+1
 9683 0094 B5140000 		.word	.L483+1
 9684 0098 5D0A0000 		.word	.L399+1
 9685 009c 090B0000 		.word	.L400+1
 9686 00a0 B5140000 		.word	.L483+1
 9687 00a4 B5140000 		.word	.L483+1
 9688 00a8 B5140000 		.word	.L483+1
 9689 00ac B5140000 		.word	.L483+1
 9690 00b0 B5140000 		.word	.L483+1
 9691 00b4 430B0000 		.word	.L401+1
 9692 00b8 B5140000 		.word	.L483+1
 9693 00bc B5140000 		.word	.L483+1
 9694 00c0 B5140000 		.word	.L483+1
 9695 00c4 B5140000 		.word	.L483+1
 9696 00c8 B5140000 		.word	.L483+1
 9697 00cc 630B0000 		.word	.L402+1
 9698 00d0 AB0D0000 		.word	.L403+1
 9699 00d4 B5140000 		.word	.L483+1
 9700 00d8 D90F0000 		.word	.L404+1
 9701 00dc B5140000 		.word	.L483+1
 9702 00e0 B5140000 		.word	.L483+1
 9703 00e4 21100000 		.word	.L405+1
 9704 00e8 B5140000 		.word	.L483+1
 9705 00ec B5140000 		.word	.L483+1
 9706 00f0 59110000 		.word	.L406+1
 9707 00f4 B5140000 		.word	.L483+1
 9708 00f8 B5140000 		.word	.L483+1
 9709 00fc B5140000 		.word	.L483+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 224


 9710 0100 B5140000 		.word	.L483+1
 9711 0104 B5140000 		.word	.L483+1
 9712 0108 B5140000 		.word	.L483+1
 9713 010c B5140000 		.word	.L483+1
 9714 0110 57120000 		.word	.L407+1
 9715 0114 B5140000 		.word	.L483+1
 9716 0118 B5140000 		.word	.L483+1
 9717 011c B5140000 		.word	.L483+1
 9718 0120 B5140000 		.word	.L483+1
 9719 0124 B5140000 		.word	.L483+1
 9720 0128 B5140000 		.word	.L483+1
 9721 012c B5140000 		.word	.L483+1
 9722 0130 B5140000 		.word	.L483+1
 9723 0134 B5140000 		.word	.L483+1
 9724 0138 B5140000 		.word	.L483+1
 9725 013c B5140000 		.word	.L483+1
 9726 0140 B5140000 		.word	.L483+1
 9727 0144 B5140000 		.word	.L483+1
 9728 0148 85120000 		.word	.L408+1
 9729              		.p2align 1
 9730              	.L390:
1309:..\src/command_processing.c ****         case 2:         // Position PID
1310:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9731              		.loc 1 1310 0
 9732 014c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9733 014e AB49     		ldr	r1, .L489
 9734 0150 1346     		mov	r3, r2
 9735 0152 DB00     		lsls	r3, r3, #3
 9736 0154 9B1A     		subs	r3, r3, r2
 9737 0156 1B01     		lsls	r3, r3, #4
 9738 0158 0B44     		add	r3, r3, r1
 9739 015a 03F20F13 		addw	r3, r3, #271
 9740 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9741 0160 032B     		cmp	r3, #3
 9742 0162 00F08680 		beq	.L409
1311:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9743              		.loc 1 1311 0
 9744 0166 A64B     		ldr	r3, .L489+4
 9745 0168 1B68     		ldr	r3, [r3]	@ float
 9746 016a FB60     		str	r3, [r7, #12]	@ float
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9747              		.loc 1 1312 0
 9748 016c 0023     		movs	r3, #0
 9749 016e BB75     		strb	r3, [r7, #22]
 9750 0170 0EE0     		b	.L410
 9751              	.L411:
1313:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9752              		.loc 1 1313 0 discriminator 3
 9753 0172 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9754 0174 C3F10303 		rsb	r3, r3, #3
 9755 0178 07F10802 		add	r2, r7, #8
 9756 017c 1344     		add	r3, r3, r2
 9757 017e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9758 0180 07F10C01 		add	r1, r7, #12
 9759 0184 0A44     		add	r2, r2, r1
 9760 0186 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9761 0188 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 225


1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9762              		.loc 1 1312 0 discriminator 3
 9763 018a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9764 018c 0133     		adds	r3, r3, #1
 9765 018e BB75     		strb	r3, [r7, #22]
 9766              	.L410:
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9767              		.loc 1 1312 0 is_stmt 0 discriminator 1
 9768 0190 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9769 0192 032B     		cmp	r3, #3
 9770 0194 EDD9     		bls	.L411
1314:..\src/command_processing.c ****                 }
1315:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 9771              		.loc 1 1315 0 is_stmt 1
 9772 0196 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9773 0198 BB68     		ldr	r3, [r7, #8]	@ float
 9774 019a 4FF08F41 		mov	r1, #1199570944
 9775 019e 1846     		mov	r0, r3
 9776 01a0 FFF7FEFF 		bl	__aeabi_fmul
 9777 01a4 0346     		mov	r3, r0
 9778 01a6 1846     		mov	r0, r3
 9779 01a8 FFF7FEFF 		bl	__aeabi_f2iz
 9780 01ac 0146     		mov	r1, r0
 9781 01ae 954A     		ldr	r2, .L489+8
 9782 01b0 2346     		mov	r3, r4
 9783 01b2 DB00     		lsls	r3, r3, #3
 9784 01b4 1B1B     		subs	r3, r3, r4
 9785 01b6 1B01     		lsls	r3, r3, #4
 9786 01b8 1344     		add	r3, r3, r2
 9787 01ba B033     		adds	r3, r3, #176
 9788 01bc 1960     		str	r1, [r3]
1316:..\src/command_processing.c ****                 
1317:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9789              		.loc 1 1317 0
 9790 01be 924B     		ldr	r3, .L489+12
 9791 01c0 1B68     		ldr	r3, [r3]	@ float
 9792 01c2 FB60     		str	r3, [r7, #12]	@ float
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9793              		.loc 1 1318 0
 9794 01c4 0023     		movs	r3, #0
 9795 01c6 BB75     		strb	r3, [r7, #22]
 9796 01c8 0EE0     		b	.L412
 9797              	.L413:
1319:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9798              		.loc 1 1319 0 discriminator 3
 9799 01ca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9800 01cc C3F10303 		rsb	r3, r3, #3
 9801 01d0 07F10802 		add	r2, r7, #8
 9802 01d4 1344     		add	r3, r3, r2
 9803 01d6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9804 01d8 07F10C01 		add	r1, r7, #12
 9805 01dc 0A44     		add	r2, r2, r1
 9806 01de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9807 01e0 1A70     		strb	r2, [r3]
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9808              		.loc 1 1318 0 discriminator 3
 9809 01e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 226


 9810 01e4 0133     		adds	r3, r3, #1
 9811 01e6 BB75     		strb	r3, [r7, #22]
 9812              	.L412:
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9813              		.loc 1 1318 0 is_stmt 0 discriminator 1
 9814 01e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9815 01ea 032B     		cmp	r3, #3
 9816 01ec EDD9     		bls	.L413
1320:..\src/command_processing.c ****                 }
1321:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9817              		.loc 1 1321 0 is_stmt 1
 9818 01ee 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9819 01f0 BB68     		ldr	r3, [r7, #8]	@ float
 9820 01f2 4FF08F41 		mov	r1, #1199570944
 9821 01f6 1846     		mov	r0, r3
 9822 01f8 FFF7FEFF 		bl	__aeabi_fmul
 9823 01fc 0346     		mov	r3, r0
 9824 01fe 1846     		mov	r0, r3
 9825 0200 FFF7FEFF 		bl	__aeabi_f2iz
 9826 0204 0146     		mov	r1, r0
 9827 0206 7F4A     		ldr	r2, .L489+8
 9828 0208 2346     		mov	r3, r4
 9829 020a DB00     		lsls	r3, r3, #3
 9830 020c 1B1B     		subs	r3, r3, r4
 9831 020e 1B01     		lsls	r3, r3, #4
 9832 0210 1344     		add	r3, r3, r2
 9833 0212 B433     		adds	r3, r3, #180
 9834 0214 1960     		str	r1, [r3]
1322:..\src/command_processing.c ****                 
1323:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9835              		.loc 1 1323 0
 9836 0216 7D4B     		ldr	r3, .L489+16
 9837 0218 1B68     		ldr	r3, [r3]	@ float
 9838 021a FB60     		str	r3, [r7, #12]	@ float
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9839              		.loc 1 1324 0
 9840 021c 0023     		movs	r3, #0
 9841 021e BB75     		strb	r3, [r7, #22]
 9842 0220 0EE0     		b	.L414
 9843              	.L415:
1325:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9844              		.loc 1 1325 0 discriminator 3
 9845 0222 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9846 0224 C3F10303 		rsb	r3, r3, #3
 9847 0228 07F10802 		add	r2, r7, #8
 9848 022c 1344     		add	r3, r3, r2
 9849 022e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9850 0230 07F10C01 		add	r1, r7, #12
 9851 0234 0A44     		add	r2, r2, r1
 9852 0236 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9853 0238 1A70     		strb	r2, [r3]
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9854              		.loc 1 1324 0 discriminator 3
 9855 023a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9856 023c 0133     		adds	r3, r3, #1
 9857 023e BB75     		strb	r3, [r7, #22]
 9858              	.L414:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 227


1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9859              		.loc 1 1324 0 is_stmt 0 discriminator 1
 9860 0240 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9861 0242 032B     		cmp	r3, #3
 9862 0244 EDD9     		bls	.L415
1326:..\src/command_processing.c ****                 }
1327:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9863              		.loc 1 1327 0 is_stmt 1
 9864 0246 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9865 0248 BB68     		ldr	r3, [r7, #8]	@ float
 9866 024a 4FF08F41 		mov	r1, #1199570944
 9867 024e 1846     		mov	r0, r3
 9868 0250 FFF7FEFF 		bl	__aeabi_fmul
 9869 0254 0346     		mov	r3, r0
 9870 0256 1846     		mov	r0, r3
 9871 0258 FFF7FEFF 		bl	__aeabi_f2iz
 9872 025c 0146     		mov	r1, r0
 9873 025e 694A     		ldr	r2, .L489+8
 9874 0260 2346     		mov	r3, r4
 9875 0262 DB00     		lsls	r3, r3, #3
 9876 0264 1B1B     		subs	r3, r3, r4
 9877 0266 1B01     		lsls	r3, r3, #4
 9878 0268 1344     		add	r3, r3, r2
 9879 026a B833     		adds	r3, r3, #184
 9880 026c 1960     		str	r1, [r3]
1328:..\src/command_processing.c ****             }
1329:..\src/command_processing.c ****             else {
1330:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1332:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1333:..\src/command_processing.c ****                 }
1334:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1335:..\src/command_processing.c ****                 
1336:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1338:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1339:..\src/command_processing.c ****                 }
1340:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1341:..\src/command_processing.c ****                 
1342:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1343:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1344:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1345:..\src/command_processing.c ****                 }
1346:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1347:..\src/command_processing.c ****             }
1348:..\src/command_processing.c ****             break;
 9881              		.loc 1 1348 0
 9882 026e 01F02CB9 		b	.L423
 9883              	.L409:
1330:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9884              		.loc 1 1330 0
 9885 0272 634B     		ldr	r3, .L489+4
 9886 0274 1B68     		ldr	r3, [r3]	@ float
 9887 0276 FB60     		str	r3, [r7, #12]	@ float
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9888              		.loc 1 1331 0
 9889 0278 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 228


 9890 027a BB75     		strb	r3, [r7, #22]
 9891 027c 0EE0     		b	.L417
 9892              	.L418:
1332:..\src/command_processing.c ****                 }
 9893              		.loc 1 1332 0 discriminator 3
 9894 027e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9895 0280 C3F10303 		rsb	r3, r3, #3
 9896 0284 07F10802 		add	r2, r7, #8
 9897 0288 1344     		add	r3, r3, r2
 9898 028a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9899 028c 07F10C01 		add	r1, r7, #12
 9900 0290 0A44     		add	r2, r2, r1
 9901 0292 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9902 0294 1A70     		strb	r2, [r3]
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9903              		.loc 1 1331 0 discriminator 3
 9904 0296 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9905 0298 0133     		adds	r3, r3, #1
 9906 029a BB75     		strb	r3, [r7, #22]
 9907              	.L417:
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9908              		.loc 1 1331 0 is_stmt 0 discriminator 1
 9909 029c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9910 029e 032B     		cmp	r3, #3
 9911 02a0 EDD9     		bls	.L418
1334:..\src/command_processing.c ****                 
 9912              		.loc 1 1334 0 is_stmt 1
 9913 02a2 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9914 02a4 BB68     		ldr	r3, [r7, #8]	@ float
 9915 02a6 4FF08F41 		mov	r1, #1199570944
 9916 02aa 1846     		mov	r0, r3
 9917 02ac FFF7FEFF 		bl	__aeabi_fmul
 9918 02b0 0346     		mov	r3, r0
 9919 02b2 1846     		mov	r0, r3
 9920 02b4 FFF7FEFF 		bl	__aeabi_f2iz
 9921 02b8 0146     		mov	r1, r0
 9922 02ba 524A     		ldr	r2, .L489+8
 9923 02bc 2346     		mov	r3, r4
 9924 02be DB00     		lsls	r3, r3, #3
 9925 02c0 1B1B     		subs	r3, r3, r4
 9926 02c2 1B01     		lsls	r3, r3, #4
 9927 02c4 1344     		add	r3, r3, r2
 9928 02c6 C833     		adds	r3, r3, #200
 9929 02c8 1960     		str	r1, [r3]
1336:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9930              		.loc 1 1336 0
 9931 02ca 4F4B     		ldr	r3, .L489+12
 9932 02cc 1B68     		ldr	r3, [r3]	@ float
 9933 02ce FB60     		str	r3, [r7, #12]	@ float
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9934              		.loc 1 1337 0
 9935 02d0 0023     		movs	r3, #0
 9936 02d2 BB75     		strb	r3, [r7, #22]
 9937 02d4 0EE0     		b	.L419
 9938              	.L420:
1338:..\src/command_processing.c ****                 }
 9939              		.loc 1 1338 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 229


 9940 02d6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9941 02d8 C3F10303 		rsb	r3, r3, #3
 9942 02dc 07F10802 		add	r2, r7, #8
 9943 02e0 1344     		add	r3, r3, r2
 9944 02e2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9945 02e4 07F10C01 		add	r1, r7, #12
 9946 02e8 0A44     		add	r2, r2, r1
 9947 02ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9948 02ec 1A70     		strb	r2, [r3]
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9949              		.loc 1 1337 0 discriminator 3
 9950 02ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9951 02f0 0133     		adds	r3, r3, #1
 9952 02f2 BB75     		strb	r3, [r7, #22]
 9953              	.L419:
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9954              		.loc 1 1337 0 is_stmt 0 discriminator 1
 9955 02f4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9956 02f6 032B     		cmp	r3, #3
 9957 02f8 EDD9     		bls	.L420
1340:..\src/command_processing.c ****                 
 9958              		.loc 1 1340 0 is_stmt 1
 9959 02fa 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9960 02fc BB68     		ldr	r3, [r7, #8]	@ float
 9961 02fe 4FF08F41 		mov	r1, #1199570944
 9962 0302 1846     		mov	r0, r3
 9963 0304 FFF7FEFF 		bl	__aeabi_fmul
 9964 0308 0346     		mov	r3, r0
 9965 030a 1846     		mov	r0, r3
 9966 030c FFF7FEFF 		bl	__aeabi_f2iz
 9967 0310 0146     		mov	r1, r0
 9968 0312 3C4A     		ldr	r2, .L489+8
 9969 0314 2346     		mov	r3, r4
 9970 0316 DB00     		lsls	r3, r3, #3
 9971 0318 1B1B     		subs	r3, r3, r4
 9972 031a 1B01     		lsls	r3, r3, #4
 9973 031c 1344     		add	r3, r3, r2
 9974 031e CC33     		adds	r3, r3, #204
 9975 0320 1960     		str	r1, [r3]
1342:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9976              		.loc 1 1342 0
 9977 0322 3A4B     		ldr	r3, .L489+16
 9978 0324 1B68     		ldr	r3, [r3]	@ float
 9979 0326 FB60     		str	r3, [r7, #12]	@ float
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9980              		.loc 1 1343 0
 9981 0328 0023     		movs	r3, #0
 9982 032a BB75     		strb	r3, [r7, #22]
 9983 032c 0EE0     		b	.L421
 9984              	.L422:
1344:..\src/command_processing.c ****                 }
 9985              		.loc 1 1344 0 discriminator 3
 9986 032e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9987 0330 C3F10303 		rsb	r3, r3, #3
 9988 0334 07F10802 		add	r2, r7, #8
 9989 0338 1344     		add	r3, r3, r2
 9990 033a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 230


 9991 033c 07F10C01 		add	r1, r7, #12
 9992 0340 0A44     		add	r2, r2, r1
 9993 0342 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9994 0344 1A70     		strb	r2, [r3]
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9995              		.loc 1 1343 0 discriminator 3
 9996 0346 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9997 0348 0133     		adds	r3, r3, #1
 9998 034a BB75     		strb	r3, [r7, #22]
 9999              	.L421:
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10000              		.loc 1 1343 0 is_stmt 0 discriminator 1
 10001 034c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10002 034e 032B     		cmp	r3, #3
 10003 0350 EDD9     		bls	.L422
1346:..\src/command_processing.c ****             }
 10004              		.loc 1 1346 0 is_stmt 1
 10005 0352 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10006 0354 BB68     		ldr	r3, [r7, #8]	@ float
 10007 0356 4FF08F41 		mov	r1, #1199570944
 10008 035a 1846     		mov	r0, r3
 10009 035c FFF7FEFF 		bl	__aeabi_fmul
 10010 0360 0346     		mov	r3, r0
 10011 0362 1846     		mov	r0, r3
 10012 0364 FFF7FEFF 		bl	__aeabi_f2iz
 10013 0368 0146     		mov	r1, r0
 10014 036a 264A     		ldr	r2, .L489+8
 10015 036c 2346     		mov	r3, r4
 10016 036e DB00     		lsls	r3, r3, #3
 10017 0370 1B1B     		subs	r3, r3, r4
 10018 0372 1B01     		lsls	r3, r3, #4
 10019 0374 1344     		add	r3, r3, r2
 10020 0376 D033     		adds	r3, r3, #208
 10021 0378 1960     		str	r1, [r3]
 10022              		.loc 1 1348 0
 10023 037a 01F0A6B8 		b	.L423
 10024              	.L392:
1349:..\src/command_processing.c ****             
1350:..\src/command_processing.c ****         case 3:         //Current PID
1351:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10025              		.loc 1 1351 0
 10026 037e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10027 0380 1E49     		ldr	r1, .L489
 10028 0382 1346     		mov	r3, r2
 10029 0384 DB00     		lsls	r3, r3, #3
 10030 0386 9B1A     		subs	r3, r3, r2
 10031 0388 1B01     		lsls	r3, r3, #4
 10032 038a 0B44     		add	r3, r3, r1
 10033 038c 03F20F13 		addw	r3, r3, #271
 10034 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10035 0392 032B     		cmp	r3, #3
 10036 0394 00F09080 		beq	.L424
1352:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10037              		.loc 1 1352 0
 10038 0398 194B     		ldr	r3, .L489+4
 10039 039a 1B68     		ldr	r3, [r3]	@ float
 10040 039c FB60     		str	r3, [r7, #12]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 231


1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10041              		.loc 1 1353 0
 10042 039e 0023     		movs	r3, #0
 10043 03a0 BB75     		strb	r3, [r7, #22]
 10044 03a2 0EE0     		b	.L425
 10045              	.L426:
1354:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10046              		.loc 1 1354 0 discriminator 3
 10047 03a4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10048 03a6 C3F10303 		rsb	r3, r3, #3
 10049 03aa 07F10802 		add	r2, r7, #8
 10050 03ae 1344     		add	r3, r3, r2
 10051 03b0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10052 03b2 07F10C01 		add	r1, r7, #12
 10053 03b6 0A44     		add	r2, r2, r1
 10054 03b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10055 03ba 1A70     		strb	r2, [r3]
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10056              		.loc 1 1353 0 discriminator 3
 10057 03bc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10058 03be 0133     		adds	r3, r3, #1
 10059 03c0 BB75     		strb	r3, [r7, #22]
 10060              	.L425:
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10061              		.loc 1 1353 0 is_stmt 0 discriminator 1
 10062 03c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10063 03c4 032B     		cmp	r3, #3
 10064 03c6 EDD9     		bls	.L426
1355:..\src/command_processing.c ****                 }
1356:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 10065              		.loc 1 1356 0 is_stmt 1
 10066 03c8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10067 03ca BB68     		ldr	r3, [r7, #8]	@ float
 10068 03cc 4FF08F41 		mov	r1, #1199570944
 10069 03d0 1846     		mov	r0, r3
 10070 03d2 FFF7FEFF 		bl	__aeabi_fmul
 10071 03d6 0346     		mov	r3, r0
 10072 03d8 1846     		mov	r0, r3
 10073 03da FFF7FEFF 		bl	__aeabi_f2iz
 10074 03de 0146     		mov	r1, r0
 10075 03e0 084A     		ldr	r2, .L489+8
 10076 03e2 2346     		mov	r3, r4
 10077 03e4 DB00     		lsls	r3, r3, #3
 10078 03e6 1B1B     		subs	r3, r3, r4
 10079 03e8 1B01     		lsls	r3, r3, #4
 10080 03ea 1344     		add	r3, r3, r2
 10081 03ec BC33     		adds	r3, r3, #188
 10082 03ee 1960     		str	r1, [r3]
1357:..\src/command_processing.c ****                 
1358:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10083              		.loc 1 1358 0
 10084 03f0 054B     		ldr	r3, .L489+12
 10085 03f2 1B68     		ldr	r3, [r3]	@ float
 10086 03f4 FB60     		str	r3, [r7, #12]	@ float
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10087              		.loc 1 1359 0
 10088 03f6 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 232


 10089 03f8 BB75     		strb	r3, [r7, #22]
 10090 03fa 18E0     		b	.L427
 10091              	.L490:
 10092              		.align	2
 10093              	.L489:
 10094 03fc 00000000 		.word	c_mem
 10095 0400 03000000 		.word	g_rx+3
 10096 0404 00000000 		.word	g_mem
 10097 0408 07000000 		.word	g_rx+7
 10098 040c 0B000000 		.word	g_rx+11
 10099              	.L428:
1360:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10100              		.loc 1 1360 0 discriminator 3
 10101 0410 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10102 0412 C3F10303 		rsb	r3, r3, #3
 10103 0416 07F10802 		add	r2, r7, #8
 10104 041a 1344     		add	r3, r3, r2
 10105 041c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10106 041e 07F10C01 		add	r1, r7, #12
 10107 0422 0A44     		add	r2, r2, r1
 10108 0424 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10109 0426 1A70     		strb	r2, [r3]
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10110              		.loc 1 1359 0 discriminator 3
 10111 0428 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10112 042a 0133     		adds	r3, r3, #1
 10113 042c BB75     		strb	r3, [r7, #22]
 10114              	.L427:
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10115              		.loc 1 1359 0 is_stmt 0 discriminator 1
 10116 042e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10117 0430 032B     		cmp	r3, #3
 10118 0432 EDD9     		bls	.L428
1361:..\src/command_processing.c ****                 }
1362:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 10119              		.loc 1 1362 0 is_stmt 1
 10120 0434 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10121 0436 BB68     		ldr	r3, [r7, #8]	@ float
 10122 0438 4FF08F41 		mov	r1, #1199570944
 10123 043c 1846     		mov	r0, r3
 10124 043e FFF7FEFF 		bl	__aeabi_fmul
 10125 0442 0346     		mov	r3, r0
 10126 0444 1846     		mov	r0, r3
 10127 0446 FFF7FEFF 		bl	__aeabi_f2iz
 10128 044a 0146     		mov	r1, r0
 10129 044c B64A     		ldr	r2, .L491
 10130 044e 2346     		mov	r3, r4
 10131 0450 DB00     		lsls	r3, r3, #3
 10132 0452 1B1B     		subs	r3, r3, r4
 10133 0454 1B01     		lsls	r3, r3, #4
 10134 0456 1344     		add	r3, r3, r2
 10135 0458 C033     		adds	r3, r3, #192
 10136 045a 1960     		str	r1, [r3]
1363:..\src/command_processing.c ****                 
1364:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10137              		.loc 1 1364 0
 10138 045c B34B     		ldr	r3, .L491+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 233


 10139 045e 1B68     		ldr	r3, [r3]	@ float
 10140 0460 FB60     		str	r3, [r7, #12]	@ float
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10141              		.loc 1 1365 0
 10142 0462 0023     		movs	r3, #0
 10143 0464 BB75     		strb	r3, [r7, #22]
 10144 0466 0EE0     		b	.L429
 10145              	.L430:
1366:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10146              		.loc 1 1366 0 discriminator 3
 10147 0468 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10148 046a C3F10303 		rsb	r3, r3, #3
 10149 046e 07F10802 		add	r2, r7, #8
 10150 0472 1344     		add	r3, r3, r2
 10151 0474 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10152 0476 07F10C01 		add	r1, r7, #12
 10153 047a 0A44     		add	r2, r2, r1
 10154 047c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10155 047e 1A70     		strb	r2, [r3]
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10156              		.loc 1 1365 0 discriminator 3
 10157 0480 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10158 0482 0133     		adds	r3, r3, #1
 10159 0484 BB75     		strb	r3, [r7, #22]
 10160              	.L429:
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10161              		.loc 1 1365 0 is_stmt 0 discriminator 1
 10162 0486 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10163 0488 032B     		cmp	r3, #3
 10164 048a EDD9     		bls	.L430
1367:..\src/command_processing.c ****                 }
1368:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 10165              		.loc 1 1368 0 is_stmt 1
 10166 048c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10167 048e BB68     		ldr	r3, [r7, #8]	@ float
 10168 0490 4FF08F41 		mov	r1, #1199570944
 10169 0494 1846     		mov	r0, r3
 10170 0496 FFF7FEFF 		bl	__aeabi_fmul
 10171 049a 0346     		mov	r3, r0
 10172 049c 1846     		mov	r0, r3
 10173 049e FFF7FEFF 		bl	__aeabi_f2iz
 10174 04a2 0146     		mov	r1, r0
 10175 04a4 A04A     		ldr	r2, .L491
 10176 04a6 2346     		mov	r3, r4
 10177 04a8 DB00     		lsls	r3, r3, #3
 10178 04aa 1B1B     		subs	r3, r3, r4
 10179 04ac 1B01     		lsls	r3, r3, #4
 10180 04ae 1344     		add	r3, r3, r2
 10181 04b0 C433     		adds	r3, r3, #196
 10182 04b2 1960     		str	r1, [r3]
1369:..\src/command_processing.c ****             }
1370:..\src/command_processing.c ****             else {
1371:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1373:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1374:..\src/command_processing.c ****                 }
1375:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 234


1376:..\src/command_processing.c ****                 
1377:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1379:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1380:..\src/command_processing.c ****                 }
1381:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1382:..\src/command_processing.c ****                 
1383:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1385:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1386:..\src/command_processing.c ****                 }
1387:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1388:..\src/command_processing.c ****             }            
1389:..\src/command_processing.c ****             break;  
 10183              		.loc 1 1389 0
 10184 04b4 01F009B8 		b	.L423
 10185              	.L424:
1371:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10186              		.loc 1 1371 0
 10187 04b8 9D4B     		ldr	r3, .L491+8
 10188 04ba 1B68     		ldr	r3, [r3]	@ float
 10189 04bc FB60     		str	r3, [r7, #12]	@ float
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10190              		.loc 1 1372 0
 10191 04be 0023     		movs	r3, #0
 10192 04c0 BB75     		strb	r3, [r7, #22]
 10193 04c2 0EE0     		b	.L432
 10194              	.L433:
1373:..\src/command_processing.c ****                 }
 10195              		.loc 1 1373 0 discriminator 3
 10196 04c4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10197 04c6 C3F10303 		rsb	r3, r3, #3
 10198 04ca 07F10802 		add	r2, r7, #8
 10199 04ce 1344     		add	r3, r3, r2
 10200 04d0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10201 04d2 07F10C01 		add	r1, r7, #12
 10202 04d6 0A44     		add	r2, r2, r1
 10203 04d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10204 04da 1A70     		strb	r2, [r3]
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10205              		.loc 1 1372 0 discriminator 3
 10206 04dc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10207 04de 0133     		adds	r3, r3, #1
 10208 04e0 BB75     		strb	r3, [r7, #22]
 10209              	.L432:
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10210              		.loc 1 1372 0 is_stmt 0 discriminator 1
 10211 04e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10212 04e4 032B     		cmp	r3, #3
 10213 04e6 EDD9     		bls	.L433
1375:..\src/command_processing.c ****                 
 10214              		.loc 1 1375 0 is_stmt 1
 10215 04e8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10216 04ea BB68     		ldr	r3, [r7, #8]	@ float
 10217 04ec 4FF08F41 		mov	r1, #1199570944
 10218 04f0 1846     		mov	r0, r3
 10219 04f2 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 235


 10220 04f6 0346     		mov	r3, r0
 10221 04f8 1846     		mov	r0, r3
 10222 04fa FFF7FEFF 		bl	__aeabi_f2iz
 10223 04fe 0146     		mov	r1, r0
 10224 0500 894A     		ldr	r2, .L491
 10225 0502 2346     		mov	r3, r4
 10226 0504 DB00     		lsls	r3, r3, #3
 10227 0506 1B1B     		subs	r3, r3, r4
 10228 0508 1B01     		lsls	r3, r3, #4
 10229 050a 1344     		add	r3, r3, r2
 10230 050c D433     		adds	r3, r3, #212
 10231 050e 1960     		str	r1, [r3]
1377:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10232              		.loc 1 1377 0
 10233 0510 884B     		ldr	r3, .L491+12
 10234 0512 1B68     		ldr	r3, [r3]	@ float
 10235 0514 FB60     		str	r3, [r7, #12]	@ float
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10236              		.loc 1 1378 0
 10237 0516 0023     		movs	r3, #0
 10238 0518 BB75     		strb	r3, [r7, #22]
 10239 051a 0EE0     		b	.L434
 10240              	.L435:
1379:..\src/command_processing.c ****                 }
 10241              		.loc 1 1379 0 discriminator 3
 10242 051c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10243 051e C3F10303 		rsb	r3, r3, #3
 10244 0522 07F10802 		add	r2, r7, #8
 10245 0526 1344     		add	r3, r3, r2
 10246 0528 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10247 052a 07F10C01 		add	r1, r7, #12
 10248 052e 0A44     		add	r2, r2, r1
 10249 0530 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10250 0532 1A70     		strb	r2, [r3]
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10251              		.loc 1 1378 0 discriminator 3
 10252 0534 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10253 0536 0133     		adds	r3, r3, #1
 10254 0538 BB75     		strb	r3, [r7, #22]
 10255              	.L434:
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10256              		.loc 1 1378 0 is_stmt 0 discriminator 1
 10257 053a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10258 053c 032B     		cmp	r3, #3
 10259 053e EDD9     		bls	.L435
1381:..\src/command_processing.c ****                 
 10260              		.loc 1 1381 0 is_stmt 1
 10261 0540 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10262 0542 BB68     		ldr	r3, [r7, #8]	@ float
 10263 0544 4FF08F41 		mov	r1, #1199570944
 10264 0548 1846     		mov	r0, r3
 10265 054a FFF7FEFF 		bl	__aeabi_fmul
 10266 054e 0346     		mov	r3, r0
 10267 0550 1846     		mov	r0, r3
 10268 0552 FFF7FEFF 		bl	__aeabi_f2iz
 10269 0556 0146     		mov	r1, r0
 10270 0558 734A     		ldr	r2, .L491
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 236


 10271 055a 2346     		mov	r3, r4
 10272 055c DB00     		lsls	r3, r3, #3
 10273 055e 1B1B     		subs	r3, r3, r4
 10274 0560 1B01     		lsls	r3, r3, #4
 10275 0562 1344     		add	r3, r3, r2
 10276 0564 D833     		adds	r3, r3, #216
 10277 0566 1960     		str	r1, [r3]
1383:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10278              		.loc 1 1383 0
 10279 0568 704B     		ldr	r3, .L491+4
 10280 056a 1B68     		ldr	r3, [r3]	@ float
 10281 056c FB60     		str	r3, [r7, #12]	@ float
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10282              		.loc 1 1384 0
 10283 056e 0023     		movs	r3, #0
 10284 0570 BB75     		strb	r3, [r7, #22]
 10285 0572 0EE0     		b	.L436
 10286              	.L437:
1385:..\src/command_processing.c ****                 }
 10287              		.loc 1 1385 0 discriminator 3
 10288 0574 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10289 0576 C3F10303 		rsb	r3, r3, #3
 10290 057a 07F10802 		add	r2, r7, #8
 10291 057e 1344     		add	r3, r3, r2
 10292 0580 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10293 0582 07F10C01 		add	r1, r7, #12
 10294 0586 0A44     		add	r2, r2, r1
 10295 0588 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10296 058a 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10297              		.loc 1 1384 0 discriminator 3
 10298 058c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10299 058e 0133     		adds	r3, r3, #1
 10300 0590 BB75     		strb	r3, [r7, #22]
 10301              	.L436:
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10302              		.loc 1 1384 0 is_stmt 0 discriminator 1
 10303 0592 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10304 0594 032B     		cmp	r3, #3
 10305 0596 EDD9     		bls	.L437
1387:..\src/command_processing.c ****             }            
 10306              		.loc 1 1387 0 is_stmt 1
 10307 0598 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10308 059a BB68     		ldr	r3, [r7, #8]	@ float
 10309 059c 4FF08F41 		mov	r1, #1199570944
 10310 05a0 1846     		mov	r0, r3
 10311 05a2 FFF7FEFF 		bl	__aeabi_fmul
 10312 05a6 0346     		mov	r3, r0
 10313 05a8 1846     		mov	r0, r3
 10314 05aa FFF7FEFF 		bl	__aeabi_f2iz
 10315 05ae 0146     		mov	r1, r0
 10316 05b0 5D4A     		ldr	r2, .L491
 10317 05b2 2346     		mov	r3, r4
 10318 05b4 DB00     		lsls	r3, r3, #3
 10319 05b6 1B1B     		subs	r3, r3, r4
 10320 05b8 1B01     		lsls	r3, r3, #4
 10321 05ba 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 237


 10322 05bc DC33     		adds	r3, r3, #220
 10323 05be 1960     		str	r1, [r3]
 10324              		.loc 1 1389 0
 10325 05c0 00F083BF 		b	.L423
 10326              	.L393:
1390:..\src/command_processing.c ****             
1391:..\src/command_processing.c ****         case 5:         //Input mode
1392:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 10327              		.loc 1 1392 0
 10328 05c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10329 05c6 5C4B     		ldr	r3, .L491+16
 10330 05c8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10331 05ca 5749     		ldr	r1, .L491
 10332 05cc 1346     		mov	r3, r2
 10333 05ce DB00     		lsls	r3, r3, #3
 10334 05d0 9B1A     		subs	r3, r3, r2
 10335 05d2 1B01     		lsls	r3, r3, #4
 10336 05d4 0B44     		add	r3, r3, r1
 10337 05d6 03F58773 		add	r3, r3, #270
 10338 05da 0246     		mov	r2, r0
 10339 05dc 1A70     		strb	r2, [r3]
1393:..\src/command_processing.c ****             
1394:..\src/command_processing.c ****             // Hold the actual position
1395:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 10340              		.loc 1 1395 0
 10341 05de 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10342 05e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10343 05e2 5148     		ldr	r0, .L491
 10344 05e4 1346     		mov	r3, r2
 10345 05e6 DB00     		lsls	r3, r3, #3
 10346 05e8 9B1A     		subs	r3, r3, r2
 10347 05ea 1B01     		lsls	r3, r3, #4
 10348 05ec 0344     		add	r3, r3, r0
 10349 05ee 03F58873 		add	r3, r3, #272
 10350 05f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10351 05f4 1846     		mov	r0, r3
 10352 05f6 514A     		ldr	r2, .L491+20
 10353 05f8 3423     		movs	r3, #52
 10354 05fa 03FB00F3 		mul	r3, r3, r0
 10355 05fe 1344     		add	r3, r3, r2
 10356 0600 1A68     		ldr	r2, [r3]
 10357 0602 4F48     		ldr	r0, .L491+24
 10358 0604 0B01     		lsls	r3, r1, #4
 10359 0606 0344     		add	r3, r3, r0
 10360 0608 1A60     		str	r2, [r3]
1396:..\src/command_processing.c ****             break;   
 10361              		.loc 1 1396 0
 10362 060a 00F05EBF 		b	.L423
 10363              	.L394:
1397:..\src/command_processing.c **** 
1398:..\src/command_processing.c ****         case 8:         //Measurement Offset
1399:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10364              		.loc 1 1399 0
 10365 060e 0023     		movs	r3, #0
 10366 0610 FB75     		strb	r3, [r7, #23]
 10367 0612 7EE0     		b	.L438
 10368              	.L439:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 238


1400:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10369              		.loc 1 1400 0 discriminator 3
 10370 0614 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10371 0616 4449     		ldr	r1, .L491
 10372 0618 1346     		mov	r3, r2
 10373 061a DB00     		lsls	r3, r3, #3
 10374 061c 9B1A     		subs	r3, r3, r2
 10375 061e 1B01     		lsls	r3, r3, #4
 10376 0620 0B44     		add	r3, r3, r1
 10377 0622 03F58873 		add	r3, r3, #272
 10378 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10379 0628 1C46     		mov	r4, r3
 10380 062a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10381 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10382 062e 5B00     		lsls	r3, r3, #1
 10383 0630 0333     		adds	r3, r3, #3
 10384 0632 4149     		ldr	r1, .L491+16
 10385 0634 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10386 0636 1B02     		lsls	r3, r3, #8
 10387 0638 19B2     		sxth	r1, r3
 10388 063a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10389 063c 0233     		adds	r3, r3, #2
 10390 063e 5B00     		lsls	r3, r3, #1
 10391 0640 3D48     		ldr	r0, .L491+16
 10392 0642 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10393 0644 1BB2     		sxth	r3, r3
 10394 0646 0B43     		orrs	r3, r3, r1
 10395 0648 1BB2     		sxth	r3, r3
 10396 064a 1846     		mov	r0, r3
 10397 064c 3649     		ldr	r1, .L491
 10398 064e 2346     		mov	r3, r4
 10399 0650 5B00     		lsls	r3, r3, #1
 10400 0652 2344     		add	r3, r3, r4
 10401 0654 9B00     		lsls	r3, r3, #2
 10402 0656 1344     		add	r3, r3, r2
 10403 0658 6633     		adds	r3, r3, #102
 10404 065a 41F82300 		str	r0, [r1, r3, lsl #2]
1401:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10405              		.loc 1 1401 0 discriminator 3
 10406 065e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10407 0660 3149     		ldr	r1, .L491
 10408 0662 1346     		mov	r3, r2
 10409 0664 DB00     		lsls	r3, r3, #3
 10410 0666 9B1A     		subs	r3, r3, r2
 10411 0668 1B01     		lsls	r3, r3, #4
 10412 066a 0B44     		add	r3, r3, r1
 10413 066c 03F58873 		add	r3, r3, #272
 10414 0670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10415 0672 1D46     		mov	r5, r3
 10416 0674 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10417 0676 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10418 0678 2B48     		ldr	r0, .L491
 10419 067a 1346     		mov	r3, r2
 10420 067c DB00     		lsls	r3, r3, #3
 10421 067e 9B1A     		subs	r3, r3, r2
 10422 0680 1B01     		lsls	r3, r3, #4
 10423 0682 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 239


 10424 0684 03F58873 		add	r3, r3, #272
 10425 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10426 068a 1C46     		mov	r4, r3
 10427 068c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10428 068e 2648     		ldr	r0, .L491
 10429 0690 2346     		mov	r3, r4
 10430 0692 5B00     		lsls	r3, r3, #1
 10431 0694 2344     		add	r3, r3, r4
 10432 0696 9B00     		lsls	r3, r3, #2
 10433 0698 1344     		add	r3, r3, r2
 10434 069a 6633     		adds	r3, r3, #102
 10435 069c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10436 06a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10437 06a2 214C     		ldr	r4, .L491
 10438 06a4 1346     		mov	r3, r2
 10439 06a6 DB00     		lsls	r3, r3, #3
 10440 06a8 9B1A     		subs	r3, r3, r2
 10441 06aa 1B01     		lsls	r3, r3, #4
 10442 06ac 2344     		add	r3, r3, r4
 10443 06ae 03F58873 		add	r3, r3, #272
 10444 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10445 06b4 1E46     		mov	r6, r3
 10446 06b6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10447 06b8 1B4C     		ldr	r4, .L491
 10448 06ba 3346     		mov	r3, r6
 10449 06bc 5B00     		lsls	r3, r3, #1
 10450 06be 3344     		add	r3, r3, r6
 10451 06c0 1B01     		lsls	r3, r3, #4
 10452 06c2 2344     		add	r3, r3, r4
 10453 06c4 1344     		add	r3, r3, r2
 10454 06c6 03F29513 		addw	r3, r3, #405
 10455 06ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10456 06cc 00FA03F2 		lsl	r2, r0, r3
 10457 06d0 1548     		ldr	r0, .L491
 10458 06d2 2B46     		mov	r3, r5
 10459 06d4 5B00     		lsls	r3, r3, #1
 10460 06d6 2B44     		add	r3, r3, r5
 10461 06d8 9B00     		lsls	r3, r3, #2
 10462 06da 0B44     		add	r3, r3, r1
 10463 06dc 6633     		adds	r3, r3, #102
 10464 06de 40F82320 		str	r2, [r0, r3, lsl #2]
1402:..\src/command_processing.c **** 
1403:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 10465              		.loc 1 1403 0 discriminator 3
 10466 06e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10467 06e4 1049     		ldr	r1, .L491
 10468 06e6 1346     		mov	r3, r2
 10469 06e8 DB00     		lsls	r3, r3, #3
 10470 06ea 9B1A     		subs	r3, r3, r2
 10471 06ec 1B01     		lsls	r3, r3, #4
 10472 06ee 0B44     		add	r3, r3, r1
 10473 06f0 03F58873 		add	r3, r3, #272
 10474 06f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10475 06f6 1846     		mov	r0, r3
 10476 06f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10477 06fa 1049     		ldr	r1, .L491+20
 10478 06fc 3422     		movs	r2, #52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 240


 10479 06fe 02FB00F2 		mul	r2, r2, r0
 10480 0702 0A44     		add	r2, r2, r1
 10481 0704 1344     		add	r3, r3, r2
 10482 0706 1833     		adds	r3, r3, #24
 10483 0708 0022     		movs	r2, #0
 10484 070a 1A70     		strb	r2, [r3]
1399:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10485              		.loc 1 1399 0 discriminator 3
 10486 070c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10487 070e 0133     		adds	r3, r3, #1
 10488 0710 FB75     		strb	r3, [r7, #23]
 10489              	.L438:
1399:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10490              		.loc 1 1399 0 is_stmt 0 discriminator 1
 10491 0712 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10492 0714 022B     		cmp	r3, #2
 10493 0716 7FF67DAF 		bls	.L439
1404:..\src/command_processing.c ****             }
1405:..\src/command_processing.c ****             reset_last_value_flag[MOTOR_IDX] = 1;
 10494              		.loc 1 1405 0 is_stmt 1
 10495 071a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10496 071c 094A     		ldr	r2, .L491+28
 10497 071e 0121     		movs	r1, #1
 10498 0720 D154     		strb	r1, [r2, r3]
1406:..\src/command_processing.c ****             break;
 10499              		.loc 1 1406 0
 10500 0722 00F0D2BE 		b	.L423
 10501              	.L492:
 10502 0726 00BF     		.align	2
 10503              	.L491:
 10504 0728 00000000 		.word	g_mem
 10505 072c 0B000000 		.word	g_rx+11
 10506 0730 03000000 		.word	g_rx+3
 10507 0734 07000000 		.word	g_rx+7
 10508 0738 00000000 		.word	g_rx
 10509 073c 00000000 		.word	g_meas
 10510 0740 00000000 		.word	g_refNew
 10511 0744 00000000 		.word	reset_last_value_flag
 10512              	.L395:
1407:..\src/command_processing.c ****     
1408:..\src/command_processing.c ****         case 11:        //Position limits
1409:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 10513              		.loc 1 1409 0
 10514 0748 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10515 074a C14B     		ldr	r3, .L493
 10516 074c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10517 074e 1906     		lsls	r1, r3, #24
 10518 0750 BF4B     		ldr	r3, .L493
 10519 0752 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10520 0754 1B04     		lsls	r3, r3, #16
 10521 0756 1943     		orrs	r1, r1, r3
 10522 0758 BD4B     		ldr	r3, .L493
 10523 075a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10524 075c 1B02     		lsls	r3, r3, #8
 10525 075e 0B43     		orrs	r3, r3, r1
 10526 0760 BB49     		ldr	r1, .L493
 10527 0762 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 241


 10528 0764 1943     		orrs	r1, r1, r3
 10529 0766 BB48     		ldr	r0, .L493+4
 10530 0768 1346     		mov	r3, r2
 10531 076a DB00     		lsls	r3, r3, #3
 10532 076c 9B1A     		subs	r3, r3, r2
 10533 076e 1B01     		lsls	r3, r3, #4
 10534 0770 0344     		add	r3, r3, r0
 10535 0772 E433     		adds	r3, r3, #228
 10536 0774 1960     		str	r1, [r3]
1410:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10537              		.loc 1 1410 0
 10538 0776 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10539 0778 B54B     		ldr	r3, .L493
 10540 077a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10541 077c 1906     		lsls	r1, r3, #24
 10542 077e B44B     		ldr	r3, .L493
 10543 0780 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10544 0782 1B04     		lsls	r3, r3, #16
 10545 0784 1943     		orrs	r1, r1, r3
 10546 0786 B24B     		ldr	r3, .L493
 10547 0788 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10548 078a 1B02     		lsls	r3, r3, #8
 10549 078c 0B43     		orrs	r3, r3, r1
 10550 078e B049     		ldr	r1, .L493
 10551 0790 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10552 0792 1943     		orrs	r1, r1, r3
 10553 0794 AF48     		ldr	r0, .L493+4
 10554 0796 1346     		mov	r3, r2
 10555 0798 DB00     		lsls	r3, r3, #3
 10556 079a 9B1A     		subs	r3, r3, r2
 10557 079c 1B01     		lsls	r3, r3, #4
 10558 079e 0344     		add	r3, r3, r0
 10559 07a0 E833     		adds	r3, r3, #232
 10560 07a2 1960     		str	r1, [r3]
1411:..\src/command_processing.c **** 
1412:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10561              		.loc 1 1412 0
 10562 07a4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10563 07a6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10564 07a8 AA48     		ldr	r0, .L493+4
 10565 07aa 0B46     		mov	r3, r1
 10566 07ac DB00     		lsls	r3, r3, #3
 10567 07ae 5B1A     		subs	r3, r3, r1
 10568 07b0 1B01     		lsls	r3, r3, #4
 10569 07b2 0344     		add	r3, r3, r0
 10570 07b4 E433     		adds	r3, r3, #228
 10571 07b6 1868     		ldr	r0, [r3]
 10572 07b8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10573 07ba A64C     		ldr	r4, .L493+4
 10574 07bc 0B46     		mov	r3, r1
 10575 07be DB00     		lsls	r3, r3, #3
 10576 07c0 5B1A     		subs	r3, r3, r1
 10577 07c2 1B01     		lsls	r3, r3, #4
 10578 07c4 2344     		add	r3, r3, r4
 10579 07c6 03F58873 		add	r3, r3, #272
 10580 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10581 07cc 1C46     		mov	r4, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 242


 10582 07ce A149     		ldr	r1, .L493+4
 10583 07d0 2346     		mov	r3, r4
 10584 07d2 5B00     		lsls	r3, r3, #1
 10585 07d4 2344     		add	r3, r3, r4
 10586 07d6 1B01     		lsls	r3, r3, #4
 10587 07d8 0B44     		add	r3, r3, r1
 10588 07da 03F29513 		addw	r3, r3, #405
 10589 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10590 07e0 00FA03F1 		lsl	r1, r0, r3
 10591 07e4 9B48     		ldr	r0, .L493+4
 10592 07e6 1346     		mov	r3, r2
 10593 07e8 DB00     		lsls	r3, r3, #3
 10594 07ea 9B1A     		subs	r3, r3, r2
 10595 07ec 1B01     		lsls	r3, r3, #4
 10596 07ee 0344     		add	r3, r3, r0
 10597 07f0 E433     		adds	r3, r3, #228
 10598 07f2 1960     		str	r1, [r3]
1413:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10599              		.loc 1 1413 0
 10600 07f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10601 07f6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10602 07f8 9648     		ldr	r0, .L493+4
 10603 07fa 0B46     		mov	r3, r1
 10604 07fc DB00     		lsls	r3, r3, #3
 10605 07fe 5B1A     		subs	r3, r3, r1
 10606 0800 1B01     		lsls	r3, r3, #4
 10607 0802 0344     		add	r3, r3, r0
 10608 0804 E833     		adds	r3, r3, #232
 10609 0806 1868     		ldr	r0, [r3]
 10610 0808 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10611 080a 924C     		ldr	r4, .L493+4
 10612 080c 0B46     		mov	r3, r1
 10613 080e DB00     		lsls	r3, r3, #3
 10614 0810 5B1A     		subs	r3, r3, r1
 10615 0812 1B01     		lsls	r3, r3, #4
 10616 0814 2344     		add	r3, r3, r4
 10617 0816 03F58873 		add	r3, r3, #272
 10618 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10619 081c 1C46     		mov	r4, r3
 10620 081e 8D49     		ldr	r1, .L493+4
 10621 0820 2346     		mov	r3, r4
 10622 0822 5B00     		lsls	r3, r3, #1
 10623 0824 2344     		add	r3, r3, r4
 10624 0826 1B01     		lsls	r3, r3, #4
 10625 0828 0B44     		add	r3, r3, r1
 10626 082a 03F29513 		addw	r3, r3, #405
 10627 082e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10628 0830 00FA03F1 		lsl	r1, r0, r3
 10629 0834 8748     		ldr	r0, .L493+4
 10630 0836 1346     		mov	r3, r2
 10631 0838 DB00     		lsls	r3, r3, #3
 10632 083a 9B1A     		subs	r3, r3, r2
 10633 083c 1B01     		lsls	r3, r3, #4
 10634 083e 0344     		add	r3, r3, r0
 10635 0840 E833     		adds	r3, r3, #232
 10636 0842 1960     		str	r1, [r3]
1414:..\src/command_processing.c ****             break;            
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 243


 10637              		.loc 1 1414 0
 10638 0844 00F041BE 		b	.L423
 10639              	.L396:
1415:..\src/command_processing.c **** 
1416:..\src/command_processing.c ****         case 23:        //Rest Position
1417:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10640              		.loc 1 1417 0
 10641 0848 814B     		ldr	r3, .L493
 10642 084a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10643 084c 1A06     		lsls	r2, r3, #24
 10644 084e 804B     		ldr	r3, .L493
 10645 0850 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10646 0852 1B04     		lsls	r3, r3, #16
 10647 0854 1A43     		orrs	r2, r2, r3
 10648 0856 7E4B     		ldr	r3, .L493
 10649 0858 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10650 085a 1B02     		lsls	r3, r3, #8
 10651 085c 1343     		orrs	r3, r3, r2
 10652 085e 7C4A     		ldr	r2, .L493
 10653 0860 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10654 0862 1343     		orrs	r3, r3, r2
 10655 0864 7B4A     		ldr	r2, .L493+4
 10656 0866 C2F8A032 		str	r3, [r2, #672]
1418:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10657              		.loc 1 1418 0
 10658 086a 7A4B     		ldr	r3, .L493+4
 10659 086c D3F8A012 		ldr	r1, [r3, #672]
 10660 0870 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10661 0872 7848     		ldr	r0, .L493+4
 10662 0874 1346     		mov	r3, r2
 10663 0876 DB00     		lsls	r3, r3, #3
 10664 0878 9B1A     		subs	r3, r3, r2
 10665 087a 1B01     		lsls	r3, r3, #4
 10666 087c 0344     		add	r3, r3, r0
 10667 087e 03F58873 		add	r3, r3, #272
 10668 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10669 0884 1846     		mov	r0, r3
 10670 0886 734A     		ldr	r2, .L493+4
 10671 0888 0346     		mov	r3, r0
 10672 088a 5B00     		lsls	r3, r3, #1
 10673 088c 0344     		add	r3, r3, r0
 10674 088e 1B01     		lsls	r3, r3, #4
 10675 0890 1344     		add	r3, r3, r2
 10676 0892 03F29513 		addw	r3, r3, #405
 10677 0896 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10678 0898 01FA03F3 		lsl	r3, r1, r3
 10679 089c 6D4A     		ldr	r2, .L493+4
 10680 089e C2F8A032 		str	r3, [r2, #672]
1419:..\src/command_processing.c ****             break; 
 10681              		.loc 1 1419 0
 10682 08a2 00F012BE 		b	.L423
 10683              	.L397:
1420:..\src/command_processing.c ****             
1421:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1422:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10684              		.loc 1 1422 0
 10685 08a6 6A4B     		ldr	r3, .L493
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 244


 10686 08a8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10687 08aa 1A06     		lsls	r2, r3, #24
 10688 08ac 684B     		ldr	r3, .L493
 10689 08ae 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10690 08b0 1B04     		lsls	r3, r3, #16
 10691 08b2 1A43     		orrs	r2, r2, r3
 10692 08b4 664B     		ldr	r3, .L493
 10693 08b6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10694 08b8 1B02     		lsls	r3, r3, #8
 10695 08ba 1343     		orrs	r3, r3, r2
 10696 08bc 644A     		ldr	r2, .L493
 10697 08be 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10698 08c0 1343     		orrs	r3, r3, r2
 10699 08c2 644A     		ldr	r2, .L493+4
 10700 08c4 C2F8A432 		str	r3, [r2, #676]
1423:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10701              		.loc 1 1423 0
 10702 08c8 624B     		ldr	r3, .L493+4
 10703 08ca D3F8A432 		ldr	r3, [r3, #676]
 10704 08ce 092B     		cmp	r3, #9
 10705 08d0 00F3F285 		bgt	.L484
 10706              		.loc 1 1423 0 is_stmt 0 discriminator 1
 10707 08d4 5F4B     		ldr	r3, .L493+4
 10708 08d6 0A22     		movs	r2, #10
 10709 08d8 C3F8A422 		str	r2, [r3, #676]
1424:..\src/command_processing.c ****            break; 
 10710              		.loc 1 1424 0 is_stmt 1 discriminator 1
 10711 08dc 00F0ECBD 		b	.L484
 10712              	.L398:
1425:..\src/command_processing.c ****             
1426:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1427:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10713              		.loc 1 1427 0
 10714 08e0 5B4B     		ldr	r3, .L493
 10715 08e2 DB78     		ldrb	r3, [r3, #3]
 10716 08e4 BB74     		strb	r3, [r7, #18]
1428:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10717              		.loc 1 1428 0
 10718 08e6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10719 08e8 002B     		cmp	r3, #0
 10720 08ea 04D0     		beq	.L441
1429:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 10721              		.loc 1 1429 0
 10722 08ec 594B     		ldr	r3, .L493+4
 10723 08ee 0122     		movs	r2, #1
 10724 08f0 83F8A720 		strb	r2, [r3, #167]
 10725 08f4 03E0     		b	.L442
 10726              	.L441:
1430:..\src/command_processing.c ****             } else {            // 0
1431:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10727              		.loc 1 1431 0
 10728 08f6 574B     		ldr	r3, .L493+4
 10729 08f8 0022     		movs	r2, #0
 10730 08fa 83F8A720 		strb	r2, [r3, #167]
 10731              	.L442:
1432:..\src/command_processing.c ****             }
1433:..\src/command_processing.c **** 			reset_last_value_flag[MOTOR_IDX] = 1;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 245


 10732              		.loc 1 1433 0
 10733 08fe 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10734 0900 554A     		ldr	r2, .L493+8
 10735 0902 0121     		movs	r1, #1
 10736 0904 D154     		strb	r1, [r2, r3]
1434:..\src/command_processing.c **** 
1435:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10737              		.loc 1 1435 0
 10738 0906 534B     		ldr	r3, .L493+4
 10739 0908 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10740 090c 002B     		cmp	r3, #0
 10741 090e 40F0D585 		bne	.L485
1436:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1437:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10742              		.loc 1 1437 0
 10743 0912 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10744 0914 4F4B     		ldr	r3, .L493+4
 10745 0916 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10746 091a 4E49     		ldr	r1, .L493+4
 10747 091c 1346     		mov	r3, r2
 10748 091e DB00     		lsls	r3, r3, #3
 10749 0920 9B1A     		subs	r3, r3, r2
 10750 0922 1B01     		lsls	r3, r3, #4
 10751 0924 0B44     		add	r3, r3, r1
 10752 0926 03F58873 		add	r3, r3, #272
 10753 092a 0246     		mov	r2, r0
 10754 092c 1A70     		strb	r2, [r3]
1438:..\src/command_processing.c ****                 
1439:..\src/command_processing.c ****                 // Change also gears parameters
1440:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10755              		.loc 1 1440 0
 10756 092e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10757 0930 4849     		ldr	r1, .L493+4
 10758 0932 1346     		mov	r3, r2
 10759 0934 DB00     		lsls	r3, r3, #3
 10760 0936 9B1A     		subs	r3, r3, r2
 10761 0938 1B01     		lsls	r3, r3, #4
 10762 093a 0B44     		add	r3, r3, r1
 10763 093c 03F58873 		add	r3, r3, #272
 10764 0940 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10765 0942 1946     		mov	r1, r3
 10766 0944 434A     		ldr	r2, .L493+4
 10767 0946 0B46     		mov	r3, r1
 10768 0948 5B00     		lsls	r3, r3, #1
 10769 094a 0B44     		add	r3, r3, r1
 10770 094c 1B01     		lsls	r3, r3, #4
 10771 094e 1344     		add	r3, r3, r2
 10772 0950 03F5D873 		add	r3, r3, #432
 10773 0954 0122     		movs	r2, #1
 10774 0956 1A70     		strb	r2, [r3]
1441:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10775              		.loc 1 1441 0
 10776 0958 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10777 095a 3E49     		ldr	r1, .L493+4
 10778 095c 1346     		mov	r3, r2
 10779 095e DB00     		lsls	r3, r3, #3
 10780 0960 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 246


 10781 0962 1B01     		lsls	r3, r3, #4
 10782 0964 0B44     		add	r3, r3, r1
 10783 0966 03F58873 		add	r3, r3, #272
 10784 096a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10785 096c 1946     		mov	r1, r3
 10786 096e 394A     		ldr	r2, .L493+4
 10787 0970 0B46     		mov	r3, r1
 10788 0972 5B00     		lsls	r3, r3, #1
 10789 0974 0B44     		add	r3, r3, r1
 10790 0976 1B01     		lsls	r3, r3, #4
 10791 0978 1344     		add	r3, r3, r2
 10792 097a 03F2B513 		addw	r3, r3, #437
 10793 097e 2322     		movs	r2, #35
 10794 0980 1A70     		strb	r2, [r3]
1442:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10795              		.loc 1 1442 0
 10796 0982 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10797 0984 3349     		ldr	r1, .L493+4
 10798 0986 1346     		mov	r3, r2
 10799 0988 DB00     		lsls	r3, r3, #3
 10800 098a 9B1A     		subs	r3, r3, r2
 10801 098c 1B01     		lsls	r3, r3, #4
 10802 098e 0B44     		add	r3, r3, r1
 10803 0990 03F58873 		add	r3, r3, #272
 10804 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10805 0996 1946     		mov	r1, r3
 10806 0998 2E4A     		ldr	r2, .L493+4
 10807 099a 0B46     		mov	r3, r1
 10808 099c 5B00     		lsls	r3, r3, #1
 10809 099e 0B44     		add	r3, r3, r1
 10810 09a0 1B01     		lsls	r3, r3, #4
 10811 09a2 1344     		add	r3, r3, r2
 10812 09a4 03F5DB73 		add	r3, r3, #438
 10813 09a8 0322     		movs	r2, #3
 10814 09aa 1A70     		strb	r2, [r3]
1443:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10815              		.loc 1 1443 0
 10816 09ac 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10817 09ae 2949     		ldr	r1, .L493+4
 10818 09b0 1346     		mov	r3, r2
 10819 09b2 DB00     		lsls	r3, r3, #3
 10820 09b4 9B1A     		subs	r3, r3, r2
 10821 09b6 1B01     		lsls	r3, r3, #4
 10822 09b8 0B44     		add	r3, r3, r1
 10823 09ba 03F58873 		add	r3, r3, #272
 10824 09be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10825 09c0 1946     		mov	r1, r3
 10826 09c2 244A     		ldr	r2, .L493+4
 10827 09c4 0B46     		mov	r3, r1
 10828 09c6 5B00     		lsls	r3, r3, #1
 10829 09c8 0B44     		add	r3, r3, r1
 10830 09ca 1B01     		lsls	r3, r3, #4
 10831 09cc 1344     		add	r3, r3, r2
 10832 09ce 03F2B713 		addw	r3, r3, #439
 10833 09d2 FF22     		movs	r2, #255
 10834 09d4 1A70     		strb	r2, [r3]
1444:..\src/command_processing.c ****                 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 247


1445:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1446:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10835              		.loc 1 1446 0
 10836 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10837 09d8 1E49     		ldr	r1, .L493+4
 10838 09da 1346     		mov	r3, r2
 10839 09dc DB00     		lsls	r3, r3, #3
 10840 09de 9B1A     		subs	r3, r3, r2
 10841 09e0 1B01     		lsls	r3, r3, #4
 10842 09e2 0B44     		add	r3, r3, r1
 10843 09e4 03F21113 		addw	r3, r3, #273
 10844 09e8 0122     		movs	r2, #1
 10845 09ea 1A70     		strb	r2, [r3]
1447:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10846              		.loc 1 1447 0
 10847 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10848 09ee 1949     		ldr	r1, .L493+4
 10849 09f0 1346     		mov	r3, r2
 10850 09f2 DB00     		lsls	r3, r3, #3
 10851 09f4 9B1A     		subs	r3, r3, r2
 10852 09f6 1B01     		lsls	r3, r3, #4
 10853 09f8 0B44     		add	r3, r3, r1
 10854 09fa 03F58973 		add	r3, r3, #274
 10855 09fe 0122     		movs	r2, #1
 10856 0a00 1A70     		strb	r2, [r3]
1448:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10857              		.loc 1 1448 0
 10858 0a02 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10859 0a04 1349     		ldr	r1, .L493+4
 10860 0a06 1346     		mov	r3, r2
 10861 0a08 DB00     		lsls	r3, r3, #3
 10862 0a0a 9B1A     		subs	r3, r3, r2
 10863 0a0c 1B01     		lsls	r3, r3, #4
 10864 0a0e 0B44     		add	r3, r3, r1
 10865 0a10 E433     		adds	r3, r3, #228
 10866 0a12 0022     		movs	r2, #0
 10867 0a14 1A60     		str	r2, [r3]
1449:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10868              		.loc 1 1449 0
 10869 0a16 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10870 0a18 0E4B     		ldr	r3, .L493+4
 10871 0a1a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10872 0a1e 1846     		mov	r0, r3
 10873 0a20 0C49     		ldr	r1, .L493+4
 10874 0a22 0346     		mov	r3, r0
 10875 0a24 5B00     		lsls	r3, r3, #1
 10876 0a26 0344     		add	r3, r3, r0
 10877 0a28 1B01     		lsls	r3, r3, #4
 10878 0a2a 0B44     		add	r3, r3, r1
 10879 0a2c 03F29513 		addw	r3, r3, #405
 10880 0a30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10881 0a32 1946     		mov	r1, r3
 10882 0a34 4FF47A53 		mov	r3, #16000
 10883 0a38 03FA01F1 		lsl	r1, r3, r1
 10884 0a3c 0548     		ldr	r0, .L493+4
 10885 0a3e 1346     		mov	r3, r2
 10886 0a40 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 248


 10887 0a42 9B1A     		subs	r3, r3, r2
 10888 0a44 1B01     		lsls	r3, r3, #4
 10889 0a46 0344     		add	r3, r3, r0
 10890 0a48 E833     		adds	r3, r3, #232
 10891 0a4a 1960     		str	r1, [r3]
1450:..\src/command_processing.c ****             }    
1451:..\src/command_processing.c **** 
1452:..\src/command_processing.c ****             break; 
 10892              		.loc 1 1452 0
 10893 0a4c 00F036BD 		b	.L485
 10894              	.L494:
 10895              		.align	2
 10896              	.L493:
 10897 0a50 00000000 		.word	g_rx
 10898 0a54 00000000 		.word	g_mem
 10899 0a58 00000000 		.word	reset_last_value_flag
 10900              	.L399:
1453:..\src/command_processing.c **** 
1454:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1455:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10901              		.loc 1 1455 0
 10902 0a5c B94B     		ldr	r3, .L495
 10903 0a5e DB78     		ldrb	r3, [r3, #3]
 10904 0a60 BB74     		strb	r3, [r7, #18]
1456:..\src/command_processing.c ****             if (aux_uchar) {
 10905              		.loc 1 1456 0
 10906 0a62 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10907 0a64 002B     		cmp	r3, #0
 10908 0a66 05D0     		beq	.L444
1457:..\src/command_processing.c ****                 reset_counters();
 10909              		.loc 1 1457 0
 10910 0a68 FFF7FEFF 		bl	reset_counters
1458:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10911              		.loc 1 1458 0
 10912 0a6c B64B     		ldr	r3, .L495+4
 10913 0a6e 0022     		movs	r2, #0
 10914 0a70 83F8A820 		strb	r2, [r3, #168]
 10915              	.L444:
1459:..\src/command_processing.c ****             }
1460:..\src/command_processing.c ****             
1461:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10916              		.loc 1 1461 0
 10917 0a74 B54B     		ldr	r3, .L495+8
 10918 0a76 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10919 0a7a 012B     		cmp	r3, #1
 10920 0a7c 40F02085 		bne	.L486
1462:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1463:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10921              		.loc 1 1463 0
 10922 0a80 8720     		movs	r0, #135
 10923 0a82 FFF7FEFF 		bl	DS1302_read
 10924 0a86 0346     		mov	r3, r0
 10925 0a88 BB74     		strb	r3, [r7, #18]
1464:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10926              		.loc 1 1464 0
 10927 0a8a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10928 0a8c 1B09     		lsrs	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 249


 10929 0a8e DBB2     		uxtb	r3, r3
 10930 0a90 1A46     		mov	r2, r3
 10931 0a92 9200     		lsls	r2, r2, #2
 10932 0a94 1344     		add	r3, r3, r2
 10933 0a96 5B00     		lsls	r3, r3, #1
 10934 0a98 DAB2     		uxtb	r2, r3
 10935 0a9a BB7C     		ldrb	r3, [r7, #18]
 10936 0a9c 03F00F03 		and	r3, r3, #15
 10937 0aa0 DBB2     		uxtb	r3, r3
 10938 0aa2 1344     		add	r3, r3, r2
 10939 0aa4 DAB2     		uxtb	r2, r3
 10940 0aa6 A84B     		ldr	r3, .L495+4
 10941 0aa8 83F8A420 		strb	r2, [r3, #164]
1465:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10942              		.loc 1 1465 0
 10943 0aac 8920     		movs	r0, #137
 10944 0aae FFF7FEFF 		bl	DS1302_read
 10945 0ab2 0346     		mov	r3, r0
 10946 0ab4 BB74     		strb	r3, [r7, #18]
1466:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10947              		.loc 1 1466 0
 10948 0ab6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10949 0ab8 1B09     		lsrs	r3, r3, #4
 10950 0aba DBB2     		uxtb	r3, r3
 10951 0abc 1A46     		mov	r2, r3
 10952 0abe 9200     		lsls	r2, r2, #2
 10953 0ac0 1344     		add	r3, r3, r2
 10954 0ac2 5B00     		lsls	r3, r3, #1
 10955 0ac4 DAB2     		uxtb	r2, r3
 10956 0ac6 BB7C     		ldrb	r3, [r7, #18]
 10957 0ac8 03F00F03 		and	r3, r3, #15
 10958 0acc DBB2     		uxtb	r3, r3
 10959 0ace 1344     		add	r3, r3, r2
 10960 0ad0 DAB2     		uxtb	r2, r3
 10961 0ad2 9D4B     		ldr	r3, .L495+4
 10962 0ad4 83F8A520 		strb	r2, [r3, #165]
1467:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10963              		.loc 1 1467 0
 10964 0ad8 8D20     		movs	r0, #141
 10965 0ada FFF7FEFF 		bl	DS1302_read
 10966 0ade 0346     		mov	r3, r0
 10967 0ae0 BB74     		strb	r3, [r7, #18]
1468:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10968              		.loc 1 1468 0
 10969 0ae2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10970 0ae4 1B09     		lsrs	r3, r3, #4
 10971 0ae6 DBB2     		uxtb	r3, r3
 10972 0ae8 1A46     		mov	r2, r3
 10973 0aea 9200     		lsls	r2, r2, #2
 10974 0aec 1344     		add	r3, r3, r2
 10975 0aee 5B00     		lsls	r3, r3, #1
 10976 0af0 DAB2     		uxtb	r2, r3
 10977 0af2 BB7C     		ldrb	r3, [r7, #18]
 10978 0af4 03F00F03 		and	r3, r3, #15
 10979 0af8 DBB2     		uxtb	r3, r3
 10980 0afa 1344     		add	r3, r3, r2
 10981 0afc DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 250


 10982 0afe 924B     		ldr	r3, .L495+4
 10983 0b00 83F8A620 		strb	r2, [r3, #166]
1469:..\src/command_processing.c ****             }
1470:..\src/command_processing.c ****             break;             
 10984              		.loc 1 1470 0
 10985 0b04 00F0DCBC 		b	.L486
 10986              	.L400:
 10987              	.LBB23:
1471:..\src/command_processing.c ****             
1472:..\src/command_processing.c ****         case 32:         //Current Time
1473:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10988              		.loc 1 1473 0
 10989 0b08 0023     		movs	r3, #0
 10990 0b0a 7B75     		strb	r3, [r7, #21]
 10991 0b0c 0CE0     		b	.L446
 10992              	.L447:
1474:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10993              		.loc 1 1474 0 discriminator 3
 10994 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10995 0b10 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10996 0b12 0332     		adds	r2, r2, #3
 10997 0b14 8B49     		ldr	r1, .L495
 10998 0b16 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10999 0b18 8B4A     		ldr	r2, .L495+4
 11000 0b1a 1344     		add	r3, r3, r2
 11001 0b1c 0A46     		mov	r2, r1
 11002 0b1e 83F82022 		strb	r2, [r3, #544]
1473:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 11003              		.loc 1 1473 0 discriminator 3
 11004 0b22 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 11005 0b24 0133     		adds	r3, r3, #1
 11006 0b26 7B75     		strb	r3, [r7, #21]
 11007              	.L446:
1473:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 11008              		.loc 1 1473 0 is_stmt 0 discriminator 1
 11009 0b28 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 11010 0b2a 052B     		cmp	r3, #5
 11011 0b2c EFD9     		bls	.L447
 11012              	.LBE23:
1475:..\src/command_processing.c ****             }
1476:..\src/command_processing.c ****             
1477:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 11013              		.loc 1 1477 0 is_stmt 1
 11014 0b2e 864B     		ldr	r3, .L495+4
 11015 0b30 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 11016 0b34 012B     		cmp	r3, #1
 11017 0b36 40F0C584 		bne	.L487
1478:..\src/command_processing.c ****                 set_RTC_time();
 11018              		.loc 1 1478 0
 11019 0b3a FFF7FEFF 		bl	set_RTC_time
1479:..\src/command_processing.c ****             }
1480:..\src/command_processing.c ****             break;
 11020              		.loc 1 1480 0
 11021 0b3e 00F0C1BC 		b	.L487
 11022              	.L401:
1481:..\src/command_processing.c ****            
1482:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 251


1483:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11023              		.loc 1 1483 0
 11024 0b42 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11025 0b44 7F4B     		ldr	r3, .L495
 11026 0b46 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11027 0b48 7F49     		ldr	r1, .L495+4
 11028 0b4a 1346     		mov	r3, r2
 11029 0b4c DB00     		lsls	r3, r3, #3
 11030 0b4e 9B1A     		subs	r3, r3, r2
 11031 0b50 1B01     		lsls	r3, r3, #4
 11032 0b52 0B44     		add	r3, r3, r1
 11033 0b54 E233     		adds	r3, r3, #226
 11034 0b56 0246     		mov	r2, r0
 11035 0b58 1A70     		strb	r2, [r3]
1484:..\src/command_processing.c ****             set_motor_driver_type();            
 11036              		.loc 1 1484 0
 11037 0b5a FFF7FEFF 		bl	set_motor_driver_type
1485:..\src/command_processing.c ****             break;
 11038              		.loc 1 1485 0
 11039 0b5e 00F0B4BC 		b	.L423
 11040              	.L402:
1486:..\src/command_processing.c ****             
1487:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1488:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11041              		.loc 1 1488 0
 11042 0b62 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11043 0b64 7949     		ldr	r1, .L495+8
 11044 0b66 1346     		mov	r3, r2
 11045 0b68 DB00     		lsls	r3, r3, #3
 11046 0b6a 9B1A     		subs	r3, r3, r2
 11047 0b6c 1B01     		lsls	r3, r3, #4
 11048 0b6e 0B44     		add	r3, r3, r1
 11049 0b70 03F20F13 		addw	r3, r3, #271
 11050 0b74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11051 0b76 032B     		cmp	r3, #3
 11052 0b78 00F08680 		beq	.L449
1489:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11053              		.loc 1 1489 0
 11054 0b7c 744B     		ldr	r3, .L495+12
 11055 0b7e 1B68     		ldr	r3, [r3]	@ float
 11056 0b80 FB60     		str	r3, [r7, #12]	@ float
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11057              		.loc 1 1490 0
 11058 0b82 0023     		movs	r3, #0
 11059 0b84 BB75     		strb	r3, [r7, #22]
 11060 0b86 0EE0     		b	.L450
 11061              	.L451:
1491:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11062              		.loc 1 1491 0 discriminator 3
 11063 0b88 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11064 0b8a C3F10303 		rsb	r3, r3, #3
 11065 0b8e 07F10802 		add	r2, r7, #8
 11066 0b92 1344     		add	r3, r3, r2
 11067 0b94 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11068 0b96 07F10C01 		add	r1, r7, #12
 11069 0b9a 0A44     		add	r2, r2, r1
 11070 0b9c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 252


 11071 0b9e 1A70     		strb	r2, [r3]
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11072              		.loc 1 1490 0 discriminator 3
 11073 0ba0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11074 0ba2 0133     		adds	r3, r3, #1
 11075 0ba4 BB75     		strb	r3, [r7, #22]
 11076              	.L450:
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11077              		.loc 1 1490 0 is_stmt 0 discriminator 1
 11078 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11079 0ba8 032B     		cmp	r3, #3
 11080 0baa EDD9     		bls	.L451
1492:..\src/command_processing.c ****                 }
1493:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 11081              		.loc 1 1493 0 is_stmt 1
 11082 0bac FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11083 0bae BB68     		ldr	r3, [r7, #8]	@ float
 11084 0bb0 4FF08F41 		mov	r1, #1199570944
 11085 0bb4 1846     		mov	r0, r3
 11086 0bb6 FFF7FEFF 		bl	__aeabi_fmul
 11087 0bba 0346     		mov	r3, r0
 11088 0bbc 1846     		mov	r0, r3
 11089 0bbe FFF7FEFF 		bl	__aeabi_f2iz
 11090 0bc2 0146     		mov	r1, r0
 11091 0bc4 604A     		ldr	r2, .L495+4
 11092 0bc6 2346     		mov	r3, r4
 11093 0bc8 DB00     		lsls	r3, r3, #3
 11094 0bca 1B1B     		subs	r3, r3, r4
 11095 0bcc 1B01     		lsls	r3, r3, #4
 11096 0bce 1344     		add	r3, r3, r2
 11097 0bd0 B033     		adds	r3, r3, #176
 11098 0bd2 1960     		str	r1, [r3]
1494:..\src/command_processing.c ****                 
1495:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11099              		.loc 1 1495 0
 11100 0bd4 5F4B     		ldr	r3, .L495+16
 11101 0bd6 1B68     		ldr	r3, [r3]	@ float
 11102 0bd8 FB60     		str	r3, [r7, #12]	@ float
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11103              		.loc 1 1496 0
 11104 0bda 0023     		movs	r3, #0
 11105 0bdc BB75     		strb	r3, [r7, #22]
 11106 0bde 0EE0     		b	.L452
 11107              	.L453:
1497:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11108              		.loc 1 1497 0 discriminator 3
 11109 0be0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11110 0be2 C3F10303 		rsb	r3, r3, #3
 11111 0be6 07F10802 		add	r2, r7, #8
 11112 0bea 1344     		add	r3, r3, r2
 11113 0bec BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11114 0bee 07F10C01 		add	r1, r7, #12
 11115 0bf2 0A44     		add	r2, r2, r1
 11116 0bf4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11117 0bf6 1A70     		strb	r2, [r3]
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11118              		.loc 1 1496 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 253


 11119 0bf8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11120 0bfa 0133     		adds	r3, r3, #1
 11121 0bfc BB75     		strb	r3, [r7, #22]
 11122              	.L452:
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11123              		.loc 1 1496 0 is_stmt 0 discriminator 1
 11124 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11125 0c00 032B     		cmp	r3, #3
 11126 0c02 EDD9     		bls	.L453
1498:..\src/command_processing.c ****                 }
1499:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 11127              		.loc 1 1499 0 is_stmt 1
 11128 0c04 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11129 0c06 BB68     		ldr	r3, [r7, #8]	@ float
 11130 0c08 4FF08F41 		mov	r1, #1199570944
 11131 0c0c 1846     		mov	r0, r3
 11132 0c0e FFF7FEFF 		bl	__aeabi_fmul
 11133 0c12 0346     		mov	r3, r0
 11134 0c14 1846     		mov	r0, r3
 11135 0c16 FFF7FEFF 		bl	__aeabi_f2iz
 11136 0c1a 0146     		mov	r1, r0
 11137 0c1c 4A4A     		ldr	r2, .L495+4
 11138 0c1e 2346     		mov	r3, r4
 11139 0c20 DB00     		lsls	r3, r3, #3
 11140 0c22 1B1B     		subs	r3, r3, r4
 11141 0c24 1B01     		lsls	r3, r3, #4
 11142 0c26 1344     		add	r3, r3, r2
 11143 0c28 B433     		adds	r3, r3, #180
 11144 0c2a 1960     		str	r1, [r3]
1500:..\src/command_processing.c ****                 
1501:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11145              		.loc 1 1501 0
 11146 0c2c 4A4B     		ldr	r3, .L495+20
 11147 0c2e 1B68     		ldr	r3, [r3]	@ float
 11148 0c30 FB60     		str	r3, [r7, #12]	@ float
1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11149              		.loc 1 1502 0
 11150 0c32 0023     		movs	r3, #0
 11151 0c34 BB75     		strb	r3, [r7, #22]
 11152 0c36 0EE0     		b	.L454
 11153              	.L455:
1503:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11154              		.loc 1 1503 0 discriminator 3
 11155 0c38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11156 0c3a C3F10303 		rsb	r3, r3, #3
 11157 0c3e 07F10802 		add	r2, r7, #8
 11158 0c42 1344     		add	r3, r3, r2
 11159 0c44 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11160 0c46 07F10C01 		add	r1, r7, #12
 11161 0c4a 0A44     		add	r2, r2, r1
 11162 0c4c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11163 0c4e 1A70     		strb	r2, [r3]
1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11164              		.loc 1 1502 0 discriminator 3
 11165 0c50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11166 0c52 0133     		adds	r3, r3, #1
 11167 0c54 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 254


 11168              	.L454:
1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11169              		.loc 1 1502 0 is_stmt 0 discriminator 1
 11170 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11171 0c58 032B     		cmp	r3, #3
 11172 0c5a EDD9     		bls	.L455
1504:..\src/command_processing.c ****                 }
1505:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 11173              		.loc 1 1505 0 is_stmt 1
 11174 0c5c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11175 0c5e BB68     		ldr	r3, [r7, #8]	@ float
 11176 0c60 4FF08F41 		mov	r1, #1199570944
 11177 0c64 1846     		mov	r0, r3
 11178 0c66 FFF7FEFF 		bl	__aeabi_fmul
 11179 0c6a 0346     		mov	r3, r0
 11180 0c6c 1846     		mov	r0, r3
 11181 0c6e FFF7FEFF 		bl	__aeabi_f2iz
 11182 0c72 0146     		mov	r1, r0
 11183 0c74 344A     		ldr	r2, .L495+4
 11184 0c76 2346     		mov	r3, r4
 11185 0c78 DB00     		lsls	r3, r3, #3
 11186 0c7a 1B1B     		subs	r3, r3, r4
 11187 0c7c 1B01     		lsls	r3, r3, #4
 11188 0c7e 1344     		add	r3, r3, r2
 11189 0c80 B833     		adds	r3, r3, #184
 11190 0c82 1960     		str	r1, [r3]
1506:..\src/command_processing.c ****             }
1507:..\src/command_processing.c ****             else {
1508:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1510:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1511:..\src/command_processing.c ****                 }
1512:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1513:..\src/command_processing.c ****                 
1514:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1516:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1517:..\src/command_processing.c ****                 }
1518:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1519:..\src/command_processing.c ****                 
1520:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1521:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1522:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1523:..\src/command_processing.c ****                 }
1524:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1525:..\src/command_processing.c ****             }
1526:..\src/command_processing.c ****             break;
 11191              		.loc 1 1526 0
 11192 0c84 00F021BC 		b	.L423
 11193              	.L449:
1508:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11194              		.loc 1 1508 0
 11195 0c88 314B     		ldr	r3, .L495+12
 11196 0c8a 1B68     		ldr	r3, [r3]	@ float
 11197 0c8c FB60     		str	r3, [r7, #12]	@ float
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11198              		.loc 1 1509 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 255


 11199 0c8e 0023     		movs	r3, #0
 11200 0c90 BB75     		strb	r3, [r7, #22]
 11201 0c92 0EE0     		b	.L457
 11202              	.L458:
1510:..\src/command_processing.c ****                 }
 11203              		.loc 1 1510 0 discriminator 3
 11204 0c94 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11205 0c96 C3F10303 		rsb	r3, r3, #3
 11206 0c9a 07F10802 		add	r2, r7, #8
 11207 0c9e 1344     		add	r3, r3, r2
 11208 0ca0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11209 0ca2 07F10C01 		add	r1, r7, #12
 11210 0ca6 0A44     		add	r2, r2, r1
 11211 0ca8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11212 0caa 1A70     		strb	r2, [r3]
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11213              		.loc 1 1509 0 discriminator 3
 11214 0cac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11215 0cae 0133     		adds	r3, r3, #1
 11216 0cb0 BB75     		strb	r3, [r7, #22]
 11217              	.L457:
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11218              		.loc 1 1509 0 is_stmt 0 discriminator 1
 11219 0cb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11220 0cb4 032B     		cmp	r3, #3
 11221 0cb6 EDD9     		bls	.L458
1512:..\src/command_processing.c ****                 
 11222              		.loc 1 1512 0 is_stmt 1
 11223 0cb8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11224 0cba BB68     		ldr	r3, [r7, #8]	@ float
 11225 0cbc 4FF08F41 		mov	r1, #1199570944
 11226 0cc0 1846     		mov	r0, r3
 11227 0cc2 FFF7FEFF 		bl	__aeabi_fmul
 11228 0cc6 0346     		mov	r3, r0
 11229 0cc8 1846     		mov	r0, r3
 11230 0cca FFF7FEFF 		bl	__aeabi_f2iz
 11231 0cce 0146     		mov	r1, r0
 11232 0cd0 1D4A     		ldr	r2, .L495+4
 11233 0cd2 2346     		mov	r3, r4
 11234 0cd4 DB00     		lsls	r3, r3, #3
 11235 0cd6 1B1B     		subs	r3, r3, r4
 11236 0cd8 1B01     		lsls	r3, r3, #4
 11237 0cda 1344     		add	r3, r3, r2
 11238 0cdc C833     		adds	r3, r3, #200
 11239 0cde 1960     		str	r1, [r3]
1514:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11240              		.loc 1 1514 0
 11241 0ce0 1C4B     		ldr	r3, .L495+16
 11242 0ce2 1B68     		ldr	r3, [r3]	@ float
 11243 0ce4 FB60     		str	r3, [r7, #12]	@ float
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11244              		.loc 1 1515 0
 11245 0ce6 0023     		movs	r3, #0
 11246 0ce8 BB75     		strb	r3, [r7, #22]
 11247 0cea 0EE0     		b	.L459
 11248              	.L460:
1516:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 256


 11249              		.loc 1 1516 0 discriminator 3
 11250 0cec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11251 0cee C3F10303 		rsb	r3, r3, #3
 11252 0cf2 07F10802 		add	r2, r7, #8
 11253 0cf6 1344     		add	r3, r3, r2
 11254 0cf8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11255 0cfa 07F10C01 		add	r1, r7, #12
 11256 0cfe 0A44     		add	r2, r2, r1
 11257 0d00 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11258 0d02 1A70     		strb	r2, [r3]
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11259              		.loc 1 1515 0 discriminator 3
 11260 0d04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11261 0d06 0133     		adds	r3, r3, #1
 11262 0d08 BB75     		strb	r3, [r7, #22]
 11263              	.L459:
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11264              		.loc 1 1515 0 is_stmt 0 discriminator 1
 11265 0d0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11266 0d0c 032B     		cmp	r3, #3
 11267 0d0e EDD9     		bls	.L460
1518:..\src/command_processing.c ****                 
 11268              		.loc 1 1518 0 is_stmt 1
 11269 0d10 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11270 0d12 BB68     		ldr	r3, [r7, #8]	@ float
 11271 0d14 4FF08F41 		mov	r1, #1199570944
 11272 0d18 1846     		mov	r0, r3
 11273 0d1a FFF7FEFF 		bl	__aeabi_fmul
 11274 0d1e 0346     		mov	r3, r0
 11275 0d20 1846     		mov	r0, r3
 11276 0d22 FFF7FEFF 		bl	__aeabi_f2iz
 11277 0d26 0146     		mov	r1, r0
 11278 0d28 074A     		ldr	r2, .L495+4
 11279 0d2a 2346     		mov	r3, r4
 11280 0d2c DB00     		lsls	r3, r3, #3
 11281 0d2e 1B1B     		subs	r3, r3, r4
 11282 0d30 1B01     		lsls	r3, r3, #4
 11283 0d32 1344     		add	r3, r3, r2
 11284 0d34 CC33     		adds	r3, r3, #204
 11285 0d36 1960     		str	r1, [r3]
1520:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11286              		.loc 1 1520 0
 11287 0d38 074B     		ldr	r3, .L495+20
 11288 0d3a 1B68     		ldr	r3, [r3]	@ float
 11289 0d3c FB60     		str	r3, [r7, #12]	@ float
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11290              		.loc 1 1521 0
 11291 0d3e 0023     		movs	r3, #0
 11292 0d40 BB75     		strb	r3, [r7, #22]
 11293 0d42 1AE0     		b	.L461
 11294              	.L496:
 11295              		.align	2
 11296              	.L495:
 11297 0d44 00000000 		.word	g_rx
 11298 0d48 00000000 		.word	g_mem
 11299 0d4c 00000000 		.word	c_mem
 11300 0d50 03000000 		.word	g_rx+3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 257


 11301 0d54 07000000 		.word	g_rx+7
 11302 0d58 0B000000 		.word	g_rx+11
 11303              	.L462:
1522:..\src/command_processing.c ****                 }
 11304              		.loc 1 1522 0 discriminator 3
 11305 0d5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11306 0d5e C3F10303 		rsb	r3, r3, #3
 11307 0d62 07F10802 		add	r2, r7, #8
 11308 0d66 1344     		add	r3, r3, r2
 11309 0d68 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11310 0d6a 07F10C01 		add	r1, r7, #12
 11311 0d6e 0A44     		add	r2, r2, r1
 11312 0d70 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11313 0d72 1A70     		strb	r2, [r3]
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11314              		.loc 1 1521 0 discriminator 3
 11315 0d74 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11316 0d76 0133     		adds	r3, r3, #1
 11317 0d78 BB75     		strb	r3, [r7, #22]
 11318              	.L461:
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11319              		.loc 1 1521 0 is_stmt 0 discriminator 1
 11320 0d7a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11321 0d7c 032B     		cmp	r3, #3
 11322 0d7e EDD9     		bls	.L462
1524:..\src/command_processing.c ****             }
 11323              		.loc 1 1524 0 is_stmt 1
 11324 0d80 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11325 0d82 BB68     		ldr	r3, [r7, #8]	@ float
 11326 0d84 4FF08F41 		mov	r1, #1199570944
 11327 0d88 1846     		mov	r0, r3
 11328 0d8a FFF7FEFF 		bl	__aeabi_fmul
 11329 0d8e 0346     		mov	r3, r0
 11330 0d90 1846     		mov	r0, r3
 11331 0d92 FFF7FEFF 		bl	__aeabi_f2iz
 11332 0d96 0146     		mov	r1, r0
 11333 0d98 A34A     		ldr	r2, .L497
 11334 0d9a 2346     		mov	r3, r4
 11335 0d9c DB00     		lsls	r3, r3, #3
 11336 0d9e 1B1B     		subs	r3, r3, r4
 11337 0da0 1B01     		lsls	r3, r3, #4
 11338 0da2 1344     		add	r3, r3, r2
 11339 0da4 D033     		adds	r3, r3, #208
 11340 0da6 1960     		str	r1, [r3]
 11341              		.loc 1 1526 0
 11342 0da8 8FE3     		b	.L423
 11343              	.L403:
1527:..\src/command_processing.c ****             
1528:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1529:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11344              		.loc 1 1529 0
 11345 0daa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11346 0dac 9F49     		ldr	r1, .L497+4
 11347 0dae 1346     		mov	r3, r2
 11348 0db0 DB00     		lsls	r3, r3, #3
 11349 0db2 9B1A     		subs	r3, r3, r2
 11350 0db4 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 258


 11351 0db6 0B44     		add	r3, r3, r1
 11352 0db8 03F20F13 		addw	r3, r3, #271
 11353 0dbc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11354 0dbe 032B     		cmp	r3, #3
 11355 0dc0 00F08580 		beq	.L463
1530:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11356              		.loc 1 1530 0
 11357 0dc4 9A4B     		ldr	r3, .L497+8
 11358 0dc6 1B68     		ldr	r3, [r3]	@ float
 11359 0dc8 FB60     		str	r3, [r7, #12]	@ float
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11360              		.loc 1 1531 0
 11361 0dca 0023     		movs	r3, #0
 11362 0dcc BB75     		strb	r3, [r7, #22]
 11363 0dce 0EE0     		b	.L464
 11364              	.L465:
1532:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11365              		.loc 1 1532 0 discriminator 3
 11366 0dd0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11367 0dd2 C3F10303 		rsb	r3, r3, #3
 11368 0dd6 07F10802 		add	r2, r7, #8
 11369 0dda 1344     		add	r3, r3, r2
 11370 0ddc BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11371 0dde 07F10C01 		add	r1, r7, #12
 11372 0de2 0A44     		add	r2, r2, r1
 11373 0de4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11374 0de6 1A70     		strb	r2, [r3]
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11375              		.loc 1 1531 0 discriminator 3
 11376 0de8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11377 0dea 0133     		adds	r3, r3, #1
 11378 0dec BB75     		strb	r3, [r7, #22]
 11379              	.L464:
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11380              		.loc 1 1531 0 is_stmt 0 discriminator 1
 11381 0dee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11382 0df0 032B     		cmp	r3, #3
 11383 0df2 EDD9     		bls	.L465
1533:..\src/command_processing.c ****                 }
1534:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 11384              		.loc 1 1534 0 is_stmt 1
 11385 0df4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11386 0df6 BB68     		ldr	r3, [r7, #8]	@ float
 11387 0df8 4FF08F41 		mov	r1, #1199570944
 11388 0dfc 1846     		mov	r0, r3
 11389 0dfe FFF7FEFF 		bl	__aeabi_fmul
 11390 0e02 0346     		mov	r3, r0
 11391 0e04 1846     		mov	r0, r3
 11392 0e06 FFF7FEFF 		bl	__aeabi_f2iz
 11393 0e0a 0146     		mov	r1, r0
 11394 0e0c 864A     		ldr	r2, .L497
 11395 0e0e 2346     		mov	r3, r4
 11396 0e10 DB00     		lsls	r3, r3, #3
 11397 0e12 1B1B     		subs	r3, r3, r4
 11398 0e14 1B01     		lsls	r3, r3, #4
 11399 0e16 1344     		add	r3, r3, r2
 11400 0e18 BC33     		adds	r3, r3, #188
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 259


 11401 0e1a 1960     		str	r1, [r3]
1535:..\src/command_processing.c ****                 
1536:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11402              		.loc 1 1536 0
 11403 0e1c 854B     		ldr	r3, .L497+12
 11404 0e1e 1B68     		ldr	r3, [r3]	@ float
 11405 0e20 FB60     		str	r3, [r7, #12]	@ float
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11406              		.loc 1 1537 0
 11407 0e22 0023     		movs	r3, #0
 11408 0e24 BB75     		strb	r3, [r7, #22]
 11409 0e26 0EE0     		b	.L466
 11410              	.L467:
1538:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11411              		.loc 1 1538 0 discriminator 3
 11412 0e28 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11413 0e2a C3F10303 		rsb	r3, r3, #3
 11414 0e2e 07F10802 		add	r2, r7, #8
 11415 0e32 1344     		add	r3, r3, r2
 11416 0e34 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11417 0e36 07F10C01 		add	r1, r7, #12
 11418 0e3a 0A44     		add	r2, r2, r1
 11419 0e3c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11420 0e3e 1A70     		strb	r2, [r3]
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11421              		.loc 1 1537 0 discriminator 3
 11422 0e40 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11423 0e42 0133     		adds	r3, r3, #1
 11424 0e44 BB75     		strb	r3, [r7, #22]
 11425              	.L466:
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11426              		.loc 1 1537 0 is_stmt 0 discriminator 1
 11427 0e46 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11428 0e48 032B     		cmp	r3, #3
 11429 0e4a EDD9     		bls	.L467
1539:..\src/command_processing.c ****                 }
1540:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11430              		.loc 1 1540 0 is_stmt 1
 11431 0e4c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11432 0e4e BB68     		ldr	r3, [r7, #8]	@ float
 11433 0e50 4FF08F41 		mov	r1, #1199570944
 11434 0e54 1846     		mov	r0, r3
 11435 0e56 FFF7FEFF 		bl	__aeabi_fmul
 11436 0e5a 0346     		mov	r3, r0
 11437 0e5c 1846     		mov	r0, r3
 11438 0e5e FFF7FEFF 		bl	__aeabi_f2iz
 11439 0e62 0146     		mov	r1, r0
 11440 0e64 704A     		ldr	r2, .L497
 11441 0e66 2346     		mov	r3, r4
 11442 0e68 DB00     		lsls	r3, r3, #3
 11443 0e6a 1B1B     		subs	r3, r3, r4
 11444 0e6c 1B01     		lsls	r3, r3, #4
 11445 0e6e 1344     		add	r3, r3, r2
 11446 0e70 C033     		adds	r3, r3, #192
 11447 0e72 1960     		str	r1, [r3]
1541:..\src/command_processing.c ****                 
1542:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 260


 11448              		.loc 1 1542 0
 11449 0e74 704B     		ldr	r3, .L497+16
 11450 0e76 1B68     		ldr	r3, [r3]	@ float
 11451 0e78 FB60     		str	r3, [r7, #12]	@ float
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11452              		.loc 1 1543 0
 11453 0e7a 0023     		movs	r3, #0
 11454 0e7c BB75     		strb	r3, [r7, #22]
 11455 0e7e 0EE0     		b	.L468
 11456              	.L469:
1544:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11457              		.loc 1 1544 0 discriminator 3
 11458 0e80 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11459 0e82 C3F10303 		rsb	r3, r3, #3
 11460 0e86 07F10802 		add	r2, r7, #8
 11461 0e8a 1344     		add	r3, r3, r2
 11462 0e8c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11463 0e8e 07F10C01 		add	r1, r7, #12
 11464 0e92 0A44     		add	r2, r2, r1
 11465 0e94 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11466 0e96 1A70     		strb	r2, [r3]
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11467              		.loc 1 1543 0 discriminator 3
 11468 0e98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11469 0e9a 0133     		adds	r3, r3, #1
 11470 0e9c BB75     		strb	r3, [r7, #22]
 11471              	.L468:
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11472              		.loc 1 1543 0 is_stmt 0 discriminator 1
 11473 0e9e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11474 0ea0 032B     		cmp	r3, #3
 11475 0ea2 EDD9     		bls	.L469
1545:..\src/command_processing.c ****                 }
1546:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11476              		.loc 1 1546 0 is_stmt 1
 11477 0ea4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11478 0ea6 BB68     		ldr	r3, [r7, #8]	@ float
 11479 0ea8 4FF08F41 		mov	r1, #1199570944
 11480 0eac 1846     		mov	r0, r3
 11481 0eae FFF7FEFF 		bl	__aeabi_fmul
 11482 0eb2 0346     		mov	r3, r0
 11483 0eb4 1846     		mov	r0, r3
 11484 0eb6 FFF7FEFF 		bl	__aeabi_f2iz
 11485 0eba 0146     		mov	r1, r0
 11486 0ebc 5A4A     		ldr	r2, .L497
 11487 0ebe 2346     		mov	r3, r4
 11488 0ec0 DB00     		lsls	r3, r3, #3
 11489 0ec2 1B1B     		subs	r3, r3, r4
 11490 0ec4 1B01     		lsls	r3, r3, #4
 11491 0ec6 1344     		add	r3, r3, r2
 11492 0ec8 C433     		adds	r3, r3, #196
 11493 0eca 1960     		str	r1, [r3]
1547:..\src/command_processing.c ****             }
1548:..\src/command_processing.c ****             else {
1549:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1550:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1551:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 261


1552:..\src/command_processing.c ****                 }
1553:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1554:..\src/command_processing.c ****                 
1555:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1556:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1557:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1558:..\src/command_processing.c ****                 }
1559:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1560:..\src/command_processing.c ****                 
1561:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1562:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1563:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1564:..\src/command_processing.c ****                 }
1565:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1566:..\src/command_processing.c ****             }            
1567:..\src/command_processing.c ****             break;  
 11494              		.loc 1 1567 0
 11495 0ecc FDE2     		b	.L423
 11496              	.L463:
1549:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11497              		.loc 1 1549 0
 11498 0ece 584B     		ldr	r3, .L497+8
 11499 0ed0 1B68     		ldr	r3, [r3]	@ float
 11500 0ed2 FB60     		str	r3, [r7, #12]	@ float
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11501              		.loc 1 1550 0
 11502 0ed4 0023     		movs	r3, #0
 11503 0ed6 BB75     		strb	r3, [r7, #22]
 11504 0ed8 0EE0     		b	.L471
 11505              	.L472:
1551:..\src/command_processing.c ****                 }
 11506              		.loc 1 1551 0 discriminator 3
 11507 0eda BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11508 0edc C3F10303 		rsb	r3, r3, #3
 11509 0ee0 07F10802 		add	r2, r7, #8
 11510 0ee4 1344     		add	r3, r3, r2
 11511 0ee6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11512 0ee8 07F10C01 		add	r1, r7, #12
 11513 0eec 0A44     		add	r2, r2, r1
 11514 0eee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11515 0ef0 1A70     		strb	r2, [r3]
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11516              		.loc 1 1550 0 discriminator 3
 11517 0ef2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11518 0ef4 0133     		adds	r3, r3, #1
 11519 0ef6 BB75     		strb	r3, [r7, #22]
 11520              	.L471:
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11521              		.loc 1 1550 0 is_stmt 0 discriminator 1
 11522 0ef8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11523 0efa 032B     		cmp	r3, #3
 11524 0efc EDD9     		bls	.L472
1553:..\src/command_processing.c ****                 
 11525              		.loc 1 1553 0 is_stmt 1
 11526 0efe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11527 0f00 BB68     		ldr	r3, [r7, #8]	@ float
 11528 0f02 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 262


 11529 0f06 1846     		mov	r0, r3
 11530 0f08 FFF7FEFF 		bl	__aeabi_fmul
 11531 0f0c 0346     		mov	r3, r0
 11532 0f0e 1846     		mov	r0, r3
 11533 0f10 FFF7FEFF 		bl	__aeabi_f2iz
 11534 0f14 0146     		mov	r1, r0
 11535 0f16 444A     		ldr	r2, .L497
 11536 0f18 2346     		mov	r3, r4
 11537 0f1a DB00     		lsls	r3, r3, #3
 11538 0f1c 1B1B     		subs	r3, r3, r4
 11539 0f1e 1B01     		lsls	r3, r3, #4
 11540 0f20 1344     		add	r3, r3, r2
 11541 0f22 D433     		adds	r3, r3, #212
 11542 0f24 1960     		str	r1, [r3]
1555:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11543              		.loc 1 1555 0
 11544 0f26 434B     		ldr	r3, .L497+12
 11545 0f28 1B68     		ldr	r3, [r3]	@ float
 11546 0f2a FB60     		str	r3, [r7, #12]	@ float
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11547              		.loc 1 1556 0
 11548 0f2c 0023     		movs	r3, #0
 11549 0f2e BB75     		strb	r3, [r7, #22]
 11550 0f30 0EE0     		b	.L473
 11551              	.L474:
1557:..\src/command_processing.c ****                 }
 11552              		.loc 1 1557 0 discriminator 3
 11553 0f32 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11554 0f34 C3F10303 		rsb	r3, r3, #3
 11555 0f38 07F10802 		add	r2, r7, #8
 11556 0f3c 1344     		add	r3, r3, r2
 11557 0f3e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11558 0f40 07F10C01 		add	r1, r7, #12
 11559 0f44 0A44     		add	r2, r2, r1
 11560 0f46 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11561 0f48 1A70     		strb	r2, [r3]
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11562              		.loc 1 1556 0 discriminator 3
 11563 0f4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11564 0f4c 0133     		adds	r3, r3, #1
 11565 0f4e BB75     		strb	r3, [r7, #22]
 11566              	.L473:
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11567              		.loc 1 1556 0 is_stmt 0 discriminator 1
 11568 0f50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11569 0f52 032B     		cmp	r3, #3
 11570 0f54 EDD9     		bls	.L474
1559:..\src/command_processing.c ****                 
 11571              		.loc 1 1559 0 is_stmt 1
 11572 0f56 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11573 0f58 BB68     		ldr	r3, [r7, #8]	@ float
 11574 0f5a 4FF08F41 		mov	r1, #1199570944
 11575 0f5e 1846     		mov	r0, r3
 11576 0f60 FFF7FEFF 		bl	__aeabi_fmul
 11577 0f64 0346     		mov	r3, r0
 11578 0f66 1846     		mov	r0, r3
 11579 0f68 FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 263


 11580 0f6c 0146     		mov	r1, r0
 11581 0f6e 2E4A     		ldr	r2, .L497
 11582 0f70 2346     		mov	r3, r4
 11583 0f72 DB00     		lsls	r3, r3, #3
 11584 0f74 1B1B     		subs	r3, r3, r4
 11585 0f76 1B01     		lsls	r3, r3, #4
 11586 0f78 1344     		add	r3, r3, r2
 11587 0f7a D833     		adds	r3, r3, #216
 11588 0f7c 1960     		str	r1, [r3]
1561:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11589              		.loc 1 1561 0
 11590 0f7e 2E4B     		ldr	r3, .L497+16
 11591 0f80 1B68     		ldr	r3, [r3]	@ float
 11592 0f82 FB60     		str	r3, [r7, #12]	@ float
1562:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11593              		.loc 1 1562 0
 11594 0f84 0023     		movs	r3, #0
 11595 0f86 BB75     		strb	r3, [r7, #22]
 11596 0f88 0EE0     		b	.L475
 11597              	.L476:
1563:..\src/command_processing.c ****                 }
 11598              		.loc 1 1563 0 discriminator 3
 11599 0f8a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11600 0f8c C3F10303 		rsb	r3, r3, #3
 11601 0f90 07F10802 		add	r2, r7, #8
 11602 0f94 1344     		add	r3, r3, r2
 11603 0f96 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11604 0f98 07F10C01 		add	r1, r7, #12
 11605 0f9c 0A44     		add	r2, r2, r1
 11606 0f9e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11607 0fa0 1A70     		strb	r2, [r3]
1562:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11608              		.loc 1 1562 0 discriminator 3
 11609 0fa2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11610 0fa4 0133     		adds	r3, r3, #1
 11611 0fa6 BB75     		strb	r3, [r7, #22]
 11612              	.L475:
1562:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11613              		.loc 1 1562 0 is_stmt 0 discriminator 1
 11614 0fa8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11615 0faa 032B     		cmp	r3, #3
 11616 0fac EDD9     		bls	.L476
1565:..\src/command_processing.c ****             }            
 11617              		.loc 1 1565 0 is_stmt 1
 11618 0fae FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11619 0fb0 BB68     		ldr	r3, [r7, #8]	@ float
 11620 0fb2 4FF08F41 		mov	r1, #1199570944
 11621 0fb6 1846     		mov	r0, r3
 11622 0fb8 FFF7FEFF 		bl	__aeabi_fmul
 11623 0fbc 0346     		mov	r3, r0
 11624 0fbe 1846     		mov	r0, r3
 11625 0fc0 FFF7FEFF 		bl	__aeabi_f2iz
 11626 0fc4 0146     		mov	r1, r0
 11627 0fc6 184A     		ldr	r2, .L497
 11628 0fc8 2346     		mov	r3, r4
 11629 0fca DB00     		lsls	r3, r3, #3
 11630 0fcc 1B1B     		subs	r3, r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 264


 11631 0fce 1B01     		lsls	r3, r3, #4
 11632 0fd0 1344     		add	r3, r3, r2
 11633 0fd2 DC33     		adds	r3, r3, #220
 11634 0fd4 1960     		str	r1, [r3]
 11635              		.loc 1 1567 0
 11636 0fd6 78E2     		b	.L423
 11637              	.L404:
1568:..\src/command_processing.c ****             
1569:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1570:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11638              		.loc 1 1570 0
 11639 0fd8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11640 0fda 184B     		ldr	r3, .L497+20
 11641 0fdc D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11642 0fde 1249     		ldr	r1, .L497
 11643 0fe0 1346     		mov	r3, r2
 11644 0fe2 DB00     		lsls	r3, r3, #3
 11645 0fe4 9B1A     		subs	r3, r3, r2
 11646 0fe6 1B01     		lsls	r3, r3, #4
 11647 0fe8 0B44     		add	r3, r3, r1
 11648 0fea 03F58773 		add	r3, r3, #270
 11649 0fee 0246     		mov	r2, r0
 11650 0ff0 1A70     		strb	r2, [r3]
1571:..\src/command_processing.c ****             
1572:..\src/command_processing.c ****             // Hold the actual position
1573:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11651              		.loc 1 1573 0
 11652 0ff2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11653 0ff4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11654 0ff6 0C48     		ldr	r0, .L497
 11655 0ff8 1346     		mov	r3, r2
 11656 0ffa DB00     		lsls	r3, r3, #3
 11657 0ffc 9B1A     		subs	r3, r3, r2
 11658 0ffe 1B01     		lsls	r3, r3, #4
 11659 1000 0344     		add	r3, r3, r0
 11660 1002 03F58873 		add	r3, r3, #272
 11661 1006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11662 1008 1846     		mov	r0, r3
 11663 100a 0D4A     		ldr	r2, .L497+24
 11664 100c 3423     		movs	r3, #52
 11665 100e 03FB00F3 		mul	r3, r3, r0
 11666 1012 1344     		add	r3, r3, r2
 11667 1014 1A68     		ldr	r2, [r3]
 11668 1016 0B48     		ldr	r0, .L497+28
 11669 1018 0B01     		lsls	r3, r1, #4
 11670 101a 0344     		add	r3, r3, r0
 11671 101c 1A60     		str	r2, [r3]
1574:..\src/command_processing.c ****             break;   
 11672              		.loc 1 1574 0
 11673 101e 54E2     		b	.L423
 11674              	.L405:
1575:..\src/command_processing.c **** 
1576:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1577:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11675              		.loc 1 1577 0
 11676 1020 0023     		movs	r3, #0
 11677 1022 FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 265


 11678 1024 8FE0     		b	.L477
 11679              	.L498:
 11680 1026 00BF     		.align	2
 11681              	.L497:
 11682 1028 00000000 		.word	g_mem
 11683 102c 00000000 		.word	c_mem
 11684 1030 03000000 		.word	g_rx+3
 11685 1034 07000000 		.word	g_rx+7
 11686 1038 0B000000 		.word	g_rx+11
 11687 103c 00000000 		.word	g_rx
 11688 1040 00000000 		.word	g_meas
 11689 1044 00000000 		.word	g_refNew
 11690              	.L478:
1578:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11691              		.loc 1 1578 0 discriminator 3
 11692 1048 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11693 104a 8A49     		ldr	r1, .L499
 11694 104c 1346     		mov	r3, r2
 11695 104e DB00     		lsls	r3, r3, #3
 11696 1050 9B1A     		subs	r3, r3, r2
 11697 1052 1B01     		lsls	r3, r3, #4
 11698 1054 0B44     		add	r3, r3, r1
 11699 1056 03F58873 		add	r3, r3, #272
 11700 105a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11701 105c 1C46     		mov	r4, r3
 11702 105e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11703 1060 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11704 1062 5B00     		lsls	r3, r3, #1
 11705 1064 0333     		adds	r3, r3, #3
 11706 1066 8449     		ldr	r1, .L499+4
 11707 1068 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11708 106a 1B02     		lsls	r3, r3, #8
 11709 106c 19B2     		sxth	r1, r3
 11710 106e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11711 1070 0233     		adds	r3, r3, #2
 11712 1072 5B00     		lsls	r3, r3, #1
 11713 1074 8048     		ldr	r0, .L499+4
 11714 1076 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11715 1078 1BB2     		sxth	r3, r3
 11716 107a 0B43     		orrs	r3, r3, r1
 11717 107c 1BB2     		sxth	r3, r3
 11718 107e 1846     		mov	r0, r3
 11719 1080 7C49     		ldr	r1, .L499
 11720 1082 2346     		mov	r3, r4
 11721 1084 5B00     		lsls	r3, r3, #1
 11722 1086 2344     		add	r3, r3, r4
 11723 1088 9B00     		lsls	r3, r3, #2
 11724 108a 1344     		add	r3, r3, r2
 11725 108c 6633     		adds	r3, r3, #102
 11726 108e 41F82300 		str	r0, [r1, r3, lsl #2]
1579:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11727              		.loc 1 1579 0 discriminator 3
 11728 1092 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11729 1094 7749     		ldr	r1, .L499
 11730 1096 1346     		mov	r3, r2
 11731 1098 DB00     		lsls	r3, r3, #3
 11732 109a 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 266


 11733 109c 1B01     		lsls	r3, r3, #4
 11734 109e 0B44     		add	r3, r3, r1
 11735 10a0 03F58873 		add	r3, r3, #272
 11736 10a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11737 10a6 1D46     		mov	r5, r3
 11738 10a8 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11739 10aa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11740 10ac 7148     		ldr	r0, .L499
 11741 10ae 1346     		mov	r3, r2
 11742 10b0 DB00     		lsls	r3, r3, #3
 11743 10b2 9B1A     		subs	r3, r3, r2
 11744 10b4 1B01     		lsls	r3, r3, #4
 11745 10b6 0344     		add	r3, r3, r0
 11746 10b8 03F58873 		add	r3, r3, #272
 11747 10bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11748 10be 1C46     		mov	r4, r3
 11749 10c0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11750 10c2 6C48     		ldr	r0, .L499
 11751 10c4 2346     		mov	r3, r4
 11752 10c6 5B00     		lsls	r3, r3, #1
 11753 10c8 2344     		add	r3, r3, r4
 11754 10ca 9B00     		lsls	r3, r3, #2
 11755 10cc 1344     		add	r3, r3, r2
 11756 10ce 6633     		adds	r3, r3, #102
 11757 10d0 50F82300 		ldr	r0, [r0, r3, lsl #2]
 11758 10d4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11759 10d6 674C     		ldr	r4, .L499
 11760 10d8 1346     		mov	r3, r2
 11761 10da DB00     		lsls	r3, r3, #3
 11762 10dc 9B1A     		subs	r3, r3, r2
 11763 10de 1B01     		lsls	r3, r3, #4
 11764 10e0 2344     		add	r3, r3, r4
 11765 10e2 03F58873 		add	r3, r3, #272
 11766 10e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11767 10e8 1E46     		mov	r6, r3
 11768 10ea FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11769 10ec 614C     		ldr	r4, .L499
 11770 10ee 3346     		mov	r3, r6
 11771 10f0 5B00     		lsls	r3, r3, #1
 11772 10f2 3344     		add	r3, r3, r6
 11773 10f4 1B01     		lsls	r3, r3, #4
 11774 10f6 2344     		add	r3, r3, r4
 11775 10f8 1344     		add	r3, r3, r2
 11776 10fa 03F29513 		addw	r3, r3, #405
 11777 10fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11778 1100 00FA03F2 		lsl	r2, r0, r3
 11779 1104 5B48     		ldr	r0, .L499
 11780 1106 2B46     		mov	r3, r5
 11781 1108 5B00     		lsls	r3, r3, #1
 11782 110a 2B44     		add	r3, r3, r5
 11783 110c 9B00     		lsls	r3, r3, #2
 11784 110e 0B44     		add	r3, r3, r1
 11785 1110 6633     		adds	r3, r3, #102
 11786 1112 40F82320 		str	r2, [r0, r3, lsl #2]
1580:..\src/command_processing.c **** 
1581:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11787              		.loc 1 1581 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 267


 11788 1116 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11789 1118 5649     		ldr	r1, .L499
 11790 111a 1346     		mov	r3, r2
 11791 111c DB00     		lsls	r3, r3, #3
 11792 111e 9B1A     		subs	r3, r3, r2
 11793 1120 1B01     		lsls	r3, r3, #4
 11794 1122 0B44     		add	r3, r3, r1
 11795 1124 03F58873 		add	r3, r3, #272
 11796 1128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11797 112a 1846     		mov	r0, r3
 11798 112c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11799 112e 5349     		ldr	r1, .L499+8
 11800 1130 3422     		movs	r2, #52
 11801 1132 02FB00F2 		mul	r2, r2, r0
 11802 1136 0A44     		add	r2, r2, r1
 11803 1138 1344     		add	r3, r3, r2
 11804 113a 1833     		adds	r3, r3, #24
 11805 113c 0022     		movs	r2, #0
 11806 113e 1A70     		strb	r2, [r3]
1577:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11807              		.loc 1 1577 0 discriminator 3
 11808 1140 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11809 1142 0133     		adds	r3, r3, #1
 11810 1144 FB75     		strb	r3, [r7, #23]
 11811              	.L477:
1577:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11812              		.loc 1 1577 0 is_stmt 0 discriminator 1
 11813 1146 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11814 1148 022B     		cmp	r3, #2
 11815 114a 7FF67DAF 		bls	.L478
1582:..\src/command_processing.c ****             }
1583:..\src/command_processing.c ****             reset_last_value_flag[SECOND_MOTOR_IDX] = 1;
 11816              		.loc 1 1583 0 is_stmt 1
 11817 114e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11818 1150 4B4A     		ldr	r2, .L499+12
 11819 1152 0121     		movs	r1, #1
 11820 1154 D154     		strb	r1, [r2, r3]
1584:..\src/command_processing.c ****             break;
 11821              		.loc 1 1584 0
 11822 1156 B8E1     		b	.L423
 11823              	.L406:
1585:..\src/command_processing.c ****     
1586:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1587:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11824              		.loc 1 1587 0
 11825 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11826 115a 474B     		ldr	r3, .L499+4
 11827 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11828 115e 1906     		lsls	r1, r3, #24
 11829 1160 454B     		ldr	r3, .L499+4
 11830 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11831 1164 1B04     		lsls	r3, r3, #16
 11832 1166 1943     		orrs	r1, r1, r3
 11833 1168 434B     		ldr	r3, .L499+4
 11834 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11835 116c 1B02     		lsls	r3, r3, #8
 11836 116e 0B43     		orrs	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 268


 11837 1170 4149     		ldr	r1, .L499+4
 11838 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11839 1174 1943     		orrs	r1, r1, r3
 11840 1176 3F48     		ldr	r0, .L499
 11841 1178 1346     		mov	r3, r2
 11842 117a DB00     		lsls	r3, r3, #3
 11843 117c 9B1A     		subs	r3, r3, r2
 11844 117e 1B01     		lsls	r3, r3, #4
 11845 1180 0344     		add	r3, r3, r0
 11846 1182 E433     		adds	r3, r3, #228
 11847 1184 1960     		str	r1, [r3]
1588:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11848              		.loc 1 1588 0
 11849 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11850 1188 3B4B     		ldr	r3, .L499+4
 11851 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11852 118c 1906     		lsls	r1, r3, #24
 11853 118e 3A4B     		ldr	r3, .L499+4
 11854 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11855 1192 1B04     		lsls	r3, r3, #16
 11856 1194 1943     		orrs	r1, r1, r3
 11857 1196 384B     		ldr	r3, .L499+4
 11858 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11859 119a 1B02     		lsls	r3, r3, #8
 11860 119c 0B43     		orrs	r3, r3, r1
 11861 119e 3649     		ldr	r1, .L499+4
 11862 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11863 11a2 1943     		orrs	r1, r1, r3
 11864 11a4 3348     		ldr	r0, .L499
 11865 11a6 1346     		mov	r3, r2
 11866 11a8 DB00     		lsls	r3, r3, #3
 11867 11aa 9B1A     		subs	r3, r3, r2
 11868 11ac 1B01     		lsls	r3, r3, #4
 11869 11ae 0344     		add	r3, r3, r0
 11870 11b0 E833     		adds	r3, r3, #232
 11871 11b2 1960     		str	r1, [r3]
1589:..\src/command_processing.c **** 
1590:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11872              		.loc 1 1590 0
 11873 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11874 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11875 11b8 2E48     		ldr	r0, .L499
 11876 11ba 0B46     		mov	r3, r1
 11877 11bc DB00     		lsls	r3, r3, #3
 11878 11be 5B1A     		subs	r3, r3, r1
 11879 11c0 1B01     		lsls	r3, r3, #4
 11880 11c2 0344     		add	r3, r3, r0
 11881 11c4 E433     		adds	r3, r3, #228
 11882 11c6 1868     		ldr	r0, [r3]
 11883 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11884 11ca 2A4C     		ldr	r4, .L499
 11885 11cc 0B46     		mov	r3, r1
 11886 11ce DB00     		lsls	r3, r3, #3
 11887 11d0 5B1A     		subs	r3, r3, r1
 11888 11d2 1B01     		lsls	r3, r3, #4
 11889 11d4 2344     		add	r3, r3, r4
 11890 11d6 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 269


 11891 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11892 11dc 1C46     		mov	r4, r3
 11893 11de 2549     		ldr	r1, .L499
 11894 11e0 2346     		mov	r3, r4
 11895 11e2 5B00     		lsls	r3, r3, #1
 11896 11e4 2344     		add	r3, r3, r4
 11897 11e6 1B01     		lsls	r3, r3, #4
 11898 11e8 0B44     		add	r3, r3, r1
 11899 11ea 03F29513 		addw	r3, r3, #405
 11900 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11901 11f0 00FA03F1 		lsl	r1, r0, r3
 11902 11f4 1F48     		ldr	r0, .L499
 11903 11f6 1346     		mov	r3, r2
 11904 11f8 DB00     		lsls	r3, r3, #3
 11905 11fa 9B1A     		subs	r3, r3, r2
 11906 11fc 1B01     		lsls	r3, r3, #4
 11907 11fe 0344     		add	r3, r3, r0
 11908 1200 E433     		adds	r3, r3, #228
 11909 1202 1960     		str	r1, [r3]
1591:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11910              		.loc 1 1591 0
 11911 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11912 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11913 1208 1A48     		ldr	r0, .L499
 11914 120a 0B46     		mov	r3, r1
 11915 120c DB00     		lsls	r3, r3, #3
 11916 120e 5B1A     		subs	r3, r3, r1
 11917 1210 1B01     		lsls	r3, r3, #4
 11918 1212 0344     		add	r3, r3, r0
 11919 1214 E833     		adds	r3, r3, #232
 11920 1216 1868     		ldr	r0, [r3]
 11921 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11922 121a 164C     		ldr	r4, .L499
 11923 121c 0B46     		mov	r3, r1
 11924 121e DB00     		lsls	r3, r3, #3
 11925 1220 5B1A     		subs	r3, r3, r1
 11926 1222 1B01     		lsls	r3, r3, #4
 11927 1224 2344     		add	r3, r3, r4
 11928 1226 03F58873 		add	r3, r3, #272
 11929 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11930 122c 1C46     		mov	r4, r3
 11931 122e 1149     		ldr	r1, .L499
 11932 1230 2346     		mov	r3, r4
 11933 1232 5B00     		lsls	r3, r3, #1
 11934 1234 2344     		add	r3, r3, r4
 11935 1236 1B01     		lsls	r3, r3, #4
 11936 1238 0B44     		add	r3, r3, r1
 11937 123a 03F29513 		addw	r3, r3, #405
 11938 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11939 1240 00FA03F1 		lsl	r1, r0, r3
 11940 1244 0B48     		ldr	r0, .L499
 11941 1246 1346     		mov	r3, r2
 11942 1248 DB00     		lsls	r3, r3, #3
 11943 124a 9B1A     		subs	r3, r3, r2
 11944 124c 1B01     		lsls	r3, r3, #4
 11945 124e 0344     		add	r3, r3, r0
 11946 1250 E833     		adds	r3, r3, #232
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 270


 11947 1252 1960     		str	r1, [r3]
1592:..\src/command_processing.c ****             break;
 11948              		.loc 1 1592 0
 11949 1254 39E1     		b	.L423
 11950              	.L407:
1593:..\src/command_processing.c ****             
1594:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1595:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11951              		.loc 1 1595 0
 11952 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11953 1258 074B     		ldr	r3, .L499+4
 11954 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11955 125c 0549     		ldr	r1, .L499
 11956 125e 1346     		mov	r3, r2
 11957 1260 DB00     		lsls	r3, r3, #3
 11958 1262 9B1A     		subs	r3, r3, r2
 11959 1264 1B01     		lsls	r3, r3, #4
 11960 1266 0B44     		add	r3, r3, r1
 11961 1268 E233     		adds	r3, r3, #226
 11962 126a 0246     		mov	r2, r0
 11963 126c 1A70     		strb	r2, [r3]
1596:..\src/command_processing.c ****             set_motor_driver_type();
 11964              		.loc 1 1596 0
 11965 126e FFF7FEFF 		bl	set_motor_driver_type
1597:..\src/command_processing.c ****             break;
 11966              		.loc 1 1597 0
 11967 1272 2AE1     		b	.L423
 11968              	.L500:
 11969              		.align	2
 11970              	.L499:
 11971 1274 00000000 		.word	g_mem
 11972 1278 00000000 		.word	g_rx
 11973 127c 00000000 		.word	g_meas
 11974 1280 00000000 		.word	reset_last_value_flag
 11975              	.L408:
1598:..\src/command_processing.c **** 
1599:..\src/command_processing.c ****         case 75:        // Device type
1600:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11976              		.loc 1 1600 0
 11977 1284 934B     		ldr	r3, .L501
 11978 1286 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11979 1288 934B     		ldr	r3, .L501+4
 11980 128a 83F8AC20 		strb	r2, [r3, #172]
1601:..\src/command_processing.c ****             
1602:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11981              		.loc 1 1602 0
 11982 128e 924B     		ldr	r3, .L501+4
 11983 1290 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11984 1294 002B     		cmp	r3, #0
 11985 1296 40F0A480 		bne	.L479
1603:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11986              		.loc 1 1603 0
 11987 129a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11988 129c 8E49     		ldr	r1, .L501+4
 11989 129e 1346     		mov	r3, r2
 11990 12a0 DB00     		lsls	r3, r3, #3
 11991 12a2 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 271


 11992 12a4 1B01     		lsls	r3, r3, #4
 11993 12a6 0B44     		add	r3, r3, r1
 11994 12a8 03F58873 		add	r3, r3, #272
 11995 12ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11996 12ae 1946     		mov	r1, r3
 11997 12b0 894A     		ldr	r2, .L501+4
 11998 12b2 0B46     		mov	r3, r1
 11999 12b4 5B00     		lsls	r3, r3, #1
 12000 12b6 0B44     		add	r3, r3, r1
 12001 12b8 1B01     		lsls	r3, r3, #4
 12002 12ba 1344     		add	r3, r3, r2
 12003 12bc 03F5D873 		add	r3, r3, #432
 12004 12c0 0122     		movs	r2, #1
 12005 12c2 1A70     		strb	r2, [r3]
1604:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 12006              		.loc 1 1604 0
 12007 12c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12008 12c6 8449     		ldr	r1, .L501+4
 12009 12c8 1346     		mov	r3, r2
 12010 12ca DB00     		lsls	r3, r3, #3
 12011 12cc 9B1A     		subs	r3, r3, r2
 12012 12ce 1B01     		lsls	r3, r3, #4
 12013 12d0 0B44     		add	r3, r3, r1
 12014 12d2 03F58873 		add	r3, r3, #272
 12015 12d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12016 12d8 1946     		mov	r1, r3
 12017 12da 7F4A     		ldr	r2, .L501+4
 12018 12dc 0B46     		mov	r3, r1
 12019 12de 5B00     		lsls	r3, r3, #1
 12020 12e0 0B44     		add	r3, r3, r1
 12021 12e2 1B01     		lsls	r3, r3, #4
 12022 12e4 1344     		add	r3, r3, r2
 12023 12e6 03F2B513 		addw	r3, r3, #437
 12024 12ea 2322     		movs	r2, #35
 12025 12ec 1A70     		strb	r2, [r3]
1605:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 12026              		.loc 1 1605 0
 12027 12ee 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12028 12f0 7949     		ldr	r1, .L501+4
 12029 12f2 1346     		mov	r3, r2
 12030 12f4 DB00     		lsls	r3, r3, #3
 12031 12f6 9B1A     		subs	r3, r3, r2
 12032 12f8 1B01     		lsls	r3, r3, #4
 12033 12fa 0B44     		add	r3, r3, r1
 12034 12fc 03F58873 		add	r3, r3, #272
 12035 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12036 1302 1946     		mov	r1, r3
 12037 1304 744A     		ldr	r2, .L501+4
 12038 1306 0B46     		mov	r3, r1
 12039 1308 5B00     		lsls	r3, r3, #1
 12040 130a 0B44     		add	r3, r3, r1
 12041 130c 1B01     		lsls	r3, r3, #4
 12042 130e 1344     		add	r3, r3, r2
 12043 1310 03F5DB73 		add	r3, r3, #438
 12044 1314 0322     		movs	r2, #3
 12045 1316 1A70     		strb	r2, [r3]
1606:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 272


 12046              		.loc 1 1606 0
 12047 1318 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12048 131a 6F49     		ldr	r1, .L501+4
 12049 131c 1346     		mov	r3, r2
 12050 131e DB00     		lsls	r3, r3, #3
 12051 1320 9B1A     		subs	r3, r3, r2
 12052 1322 1B01     		lsls	r3, r3, #4
 12053 1324 0B44     		add	r3, r3, r1
 12054 1326 03F58873 		add	r3, r3, #272
 12055 132a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12056 132c 1946     		mov	r1, r3
 12057 132e 6A4A     		ldr	r2, .L501+4
 12058 1330 0B46     		mov	r3, r1
 12059 1332 5B00     		lsls	r3, r3, #1
 12060 1334 0B44     		add	r3, r3, r1
 12061 1336 1B01     		lsls	r3, r3, #4
 12062 1338 1344     		add	r3, r3, r2
 12063 133a 03F2B713 		addw	r3, r3, #439
 12064 133e FF22     		movs	r2, #255
 12065 1340 1A70     		strb	r2, [r3]
1607:..\src/command_processing.c ****                 
1608:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1609:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 12066              		.loc 1 1609 0
 12067 1342 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12068 1344 644B     		ldr	r3, .L501+4
 12069 1346 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 12070 134a 6349     		ldr	r1, .L501+4
 12071 134c 1346     		mov	r3, r2
 12072 134e DB00     		lsls	r3, r3, #3
 12073 1350 9B1A     		subs	r3, r3, r2
 12074 1352 1B01     		lsls	r3, r3, #4
 12075 1354 0B44     		add	r3, r3, r1
 12076 1356 03F58873 		add	r3, r3, #272
 12077 135a 0246     		mov	r2, r0
 12078 135c 1A70     		strb	r2, [r3]
1610:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 12079              		.loc 1 1610 0
 12080 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12081 1360 5D49     		ldr	r1, .L501+4
 12082 1362 1346     		mov	r3, r2
 12083 1364 DB00     		lsls	r3, r3, #3
 12084 1366 9B1A     		subs	r3, r3, r2
 12085 1368 1B01     		lsls	r3, r3, #4
 12086 136a 0B44     		add	r3, r3, r1
 12087 136c 03F21113 		addw	r3, r3, #273
 12088 1370 0122     		movs	r2, #1
 12089 1372 1A70     		strb	r2, [r3]
1611:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 12090              		.loc 1 1611 0
 12091 1374 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12092 1376 5849     		ldr	r1, .L501+4
 12093 1378 1346     		mov	r3, r2
 12094 137a DB00     		lsls	r3, r3, #3
 12095 137c 9B1A     		subs	r3, r3, r2
 12096 137e 1B01     		lsls	r3, r3, #4
 12097 1380 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 273


 12098 1382 03F58973 		add	r3, r3, #274
 12099 1386 0122     		movs	r2, #1
 12100 1388 1A70     		strb	r2, [r3]
1612:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 12101              		.loc 1 1612 0
 12102 138a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12103 138c 5249     		ldr	r1, .L501+4
 12104 138e 1346     		mov	r3, r2
 12105 1390 DB00     		lsls	r3, r3, #3
 12106 1392 9B1A     		subs	r3, r3, r2
 12107 1394 1B01     		lsls	r3, r3, #4
 12108 1396 0B44     		add	r3, r3, r1
 12109 1398 E433     		adds	r3, r3, #228
 12110 139a 0022     		movs	r2, #0
 12111 139c 1A60     		str	r2, [r3]
1613:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_ID
 12112              		.loc 1 1613 0
 12113 139e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12114 13a0 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 12115 13a2 4D48     		ldr	r0, .L501+4
 12116 13a4 0B46     		mov	r3, r1
 12117 13a6 DB00     		lsls	r3, r3, #3
 12118 13a8 5B1A     		subs	r3, r3, r1
 12119 13aa 1B01     		lsls	r3, r3, #4
 12120 13ac 0344     		add	r3, r3, r0
 12121 13ae 03F58873 		add	r3, r3, #272
 12122 13b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12123 13b4 1846     		mov	r0, r3
 12124 13b6 4849     		ldr	r1, .L501+4
 12125 13b8 0346     		mov	r3, r0
 12126 13ba 5B00     		lsls	r3, r3, #1
 12127 13bc 0344     		add	r3, r3, r0
 12128 13be 1B01     		lsls	r3, r3, #4
 12129 13c0 0B44     		add	r3, r3, r1
 12130 13c2 03F29513 		addw	r3, r3, #405
 12131 13c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12132 13c8 1946     		mov	r1, r3
 12133 13ca 4FF47A53 		mov	r3, #16000
 12134 13ce 03FA01F1 		lsl	r1, r3, r1
 12135 13d2 4148     		ldr	r0, .L501+4
 12136 13d4 1346     		mov	r3, r2
 12137 13d6 DB00     		lsls	r3, r3, #3
 12138 13d8 9B1A     		subs	r3, r3, r2
 12139 13da 1B01     		lsls	r3, r3, #4
 12140 13dc 0344     		add	r3, r3, r0
 12141 13de E833     		adds	r3, r3, #232
 12142 13e0 1960     		str	r1, [r3]
 12143              	.L479:
1614:..\src/command_processing.c ****             }      
1615:..\src/command_processing.c ****             
1616:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 12144              		.loc 1 1616 0
 12145 13e2 3D4B     		ldr	r3, .L501+4
 12146 13e4 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 12147 13e8 042B     		cmp	r3, #4
 12148 13ea 6DD1     		bne	.L488
1617:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 274


 12149              		.loc 1 1617 0
 12150 13ec 3A4B     		ldr	r3, .L501+4
 12151 13ee 0122     		movs	r2, #1
 12152 13f0 83F8A920 		strb	r2, [r3, #169]
1618:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12153              		.loc 1 1618 0
 12154 13f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12155 13f6 3849     		ldr	r1, .L501+4
 12156 13f8 1346     		mov	r3, r2
 12157 13fa DB00     		lsls	r3, r3, #3
 12158 13fc 9B1A     		subs	r3, r3, r2
 12159 13fe 1B01     		lsls	r3, r3, #4
 12160 1400 0B44     		add	r3, r3, r1
 12161 1402 03F58873 		add	r3, r3, #272
 12162 1406 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12163 1408 1946     		mov	r1, r3
 12164 140a 334A     		ldr	r2, .L501+4
 12165 140c 0B46     		mov	r3, r1
 12166 140e 5B00     		lsls	r3, r3, #1
 12167 1410 0B44     		add	r3, r3, r1
 12168 1412 1B01     		lsls	r3, r3, #4
 12169 1414 1344     		add	r3, r3, r2
 12170 1416 03F5D873 		add	r3, r3, #432
 12171 141a 0122     		movs	r2, #1
 12172 141c 1A70     		strb	r2, [r3]
1619:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12173              		.loc 1 1619 0
 12174 141e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 12175 1420 2D49     		ldr	r1, .L501+4
 12176 1422 1346     		mov	r3, r2
 12177 1424 DB00     		lsls	r3, r3, #3
 12178 1426 9B1A     		subs	r3, r3, r2
 12179 1428 1B01     		lsls	r3, r3, #4
 12180 142a 0B44     		add	r3, r3, r1
 12181 142c 03F58873 		add	r3, r3, #272
 12182 1430 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12183 1432 1946     		mov	r1, r3
 12184 1434 284A     		ldr	r2, .L501+4
 12185 1436 0B46     		mov	r3, r1
 12186 1438 5B00     		lsls	r3, r3, #1
 12187 143a 0B44     		add	r3, r3, r1
 12188 143c 1B01     		lsls	r3, r3, #4
 12189 143e 1344     		add	r3, r3, r2
 12190 1440 03F5D873 		add	r3, r3, #432
 12191 1444 0122     		movs	r2, #1
 12192 1446 1A70     		strb	r2, [r3]
1620:..\src/command_processing.c ****             /*    
1621:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
1622:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)18000 << g_mem.enc[g_mem.motor[MOTOR_ID
1623:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = ((int32)(-25000)) << g_mem.enc[g_mem.mo
1624:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = 0;
1625:..\src/command_processing.c ****             */    
1626:..\src/command_processing.c ****                 for (i=0; i< NUM_OF_MOTORS; i++) {                     // Maxon DCX16S
 12193              		.loc 1 1626 0
 12194 1448 0023     		movs	r3, #0
 12195 144a FB75     		strb	r3, [r7, #23]
 12196 144c 2EE0     		b	.L481
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 275


 12197              	.L482:
1627:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12198              		.loc 1 1627 0 discriminator 3
 12199 144e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12200 1450 2149     		ldr	r1, .L501+4
 12201 1452 1346     		mov	r3, r2
 12202 1454 DB00     		lsls	r3, r3, #3
 12203 1456 9B1A     		subs	r3, r3, r2
 12204 1458 1B01     		lsls	r3, r3, #4
 12205 145a 0B44     		add	r3, r3, r1
 12206 145c 03F58673 		add	r3, r3, #268
 12207 1460 4FF44872 		mov	r2, #800
 12208 1464 1A80     		strh	r2, [r3]	@ movhi
1628:..\src/command_processing.c ****                     g_mem.motor[i].k_p           = 0.12 * 65536;
 12209              		.loc 1 1628 0 discriminator 3
 12210 1466 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12211 1468 1B49     		ldr	r1, .L501+4
 12212 146a 1346     		mov	r3, r2
 12213 146c DB00     		lsls	r3, r3, #3
 12214 146e 9B1A     		subs	r3, r3, r2
 12215 1470 1B01     		lsls	r3, r3, #4
 12216 1472 0B44     		add	r3, r3, r1
 12217 1474 B033     		adds	r3, r3, #176
 12218 1476 41F6B862 		movw	r2, #7864
 12219 147a 1A60     		str	r2, [r3]
1629:..\src/command_processing.c ****                     g_mem.motor[i].k_i           =    0 * 65536;
 12220              		.loc 1 1629 0 discriminator 3
 12221 147c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12222 147e 1649     		ldr	r1, .L501+4
 12223 1480 1346     		mov	r3, r2
 12224 1482 DB00     		lsls	r3, r3, #3
 12225 1484 9B1A     		subs	r3, r3, r2
 12226 1486 1B01     		lsls	r3, r3, #4
 12227 1488 0B44     		add	r3, r3, r1
 12228 148a B433     		adds	r3, r3, #180
 12229 148c 0022     		movs	r2, #0
 12230 148e 1A60     		str	r2, [r3]
1630:..\src/command_processing.c ****                     g_mem.motor[i].k_d           = 0.05 * 65536;
 12231              		.loc 1 1630 0 discriminator 3
 12232 1490 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12233 1492 1149     		ldr	r1, .L501+4
 12234 1494 1346     		mov	r3, r2
 12235 1496 DB00     		lsls	r3, r3, #3
 12236 1498 9B1A     		subs	r3, r3, r2
 12237 149a 1B01     		lsls	r3, r3, #4
 12238 149c 0B44     		add	r3, r3, r1
 12239 149e B833     		adds	r3, r3, #184
 12240 14a0 40F6CC42 		movw	r2, #3276
 12241 14a4 1A60     		str	r2, [r3]
1626:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12242              		.loc 1 1626 0 discriminator 3
 12243 14a6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12244 14a8 0133     		adds	r3, r3, #1
 12245 14aa FB75     		strb	r3, [r7, #23]
 12246              	.L481:
1626:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12247              		.loc 1 1626 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 276


 12248 14ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12249 14ae 012B     		cmp	r3, #1
 12250 14b0 CDD9     		bls	.L482
1631:..\src/command_processing.c ****                 }
1632:..\src/command_processing.c ****             }      
1633:..\src/command_processing.c ****             
1634:..\src/command_processing.c ****             break;
 12251              		.loc 1 1634 0 is_stmt 1
 12252 14b2 09E0     		b	.L488
 12253              	.L483:
1635:..\src/command_processing.c ****             
1636:..\src/command_processing.c ****         default:
1637:..\src/command_processing.c ****             break;
 12254              		.loc 1 1637 0
 12255 14b4 00BF     		nop
 12256 14b6 08E0     		b	.L423
 12257              	.L484:
1424:..\src/command_processing.c ****             
 12258              		.loc 1 1424 0
 12259 14b8 00BF     		nop
 12260 14ba 06E0     		b	.L423
 12261              	.L485:
1452:..\src/command_processing.c **** 
 12262              		.loc 1 1452 0
 12263 14bc 00BF     		nop
 12264 14be 04E0     		b	.L423
 12265              	.L486:
1470:..\src/command_processing.c ****             
 12266              		.loc 1 1470 0
 12267 14c0 00BF     		nop
 12268 14c2 02E0     		b	.L423
 12269              	.L487:
1480:..\src/command_processing.c ****            
 12270              		.loc 1 1480 0
 12271 14c4 00BF     		nop
 12272 14c6 00E0     		b	.L423
 12273              	.L488:
1634:..\src/command_processing.c ****             
 12274              		.loc 1 1634 0
 12275 14c8 00BF     		nop
 12276              	.L423:
1638:..\src/command_processing.c ****     }
1639:..\src/command_processing.c **** }
 12277              		.loc 1 1639 0 discriminator 1
 12278 14ca 00BF     		nop
 12279 14cc 1C37     		adds	r7, r7, #28
 12280              		.cfi_def_cfa_offset 20
 12281 14ce BD46     		mov	sp, r7
 12282              		.cfi_def_cfa_register 13
 12283              		@ sp needed
 12284 14d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 12285              	.L502:
 12286 14d2 00BF     		.align	2
 12287              	.L501:
 12288 14d4 00000000 		.word	g_rx
 12289 14d8 00000000 		.word	g_mem
 12290              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 277


 12291              	.LFE69:
 12292              		.size	set_custom_param, .-set_custom_param
 12293              		.section	.rodata
 12294 10be 0000     		.align	2
 12295              	.LC145:
 12296 10c0 506F7274 		.ascii	"Port %u ID:\000"
 12296      20257520 
 12296      49443A00 
 12297              		.align	2
 12298              	.LC146:
 12299 10cc 2575202D 		.ascii	"%u - Device ID:\000"
 12299      20446576 
 12299      69636520 
 12299      49443A00 
 12300              		.align	2
 12301              	.LC147:
 12302 10dc 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 12302      20494D55 
 12302      20256420 
 12302      636F6E66 
 12302      69677572 
 12303 10f7 00       		.align	2
 12304              	.LC148:
 12305 10f8 2575202D 		.ascii	"%u - SPI read delay:\000"
 12305      20535049 
 12305      20726561 
 12305      64206465 
 12305      6C61793A 
 12306 110d 000000   		.align	2
 12307              	.LC149:
 12308 1110 204E6F6E 		.ascii	" None\000"
 12308      6500
 12309 1116 0000     		.align	2
 12310              	.LC150:
 12311 1118 204C6F77 		.ascii	" Low\000"
 12311      00
 12312 111d 000000   		.align	2
 12313              	.LC151:
 12314 1120 20486967 		.ascii	" High\000"
 12314      6800
 12315 1126 0000     		.align	2
 12316              	.LC143:
 12317 1128 4E756D62 		.ascii	"Number of connected IMUs:\000"
 12317      6572206F 
 12317      6620636F 
 12317      6E6E6563 
 12317      74656420 
 12318 1142 0000     		.align	2
 12319              	.LC144:
 12320 1144 4D616720 		.ascii	"Mag cal parameters:\000"
 12320      63616C20 
 12320      70617261 
 12320      6D657465 
 12320      72733A00 
 12321              		.section	.text.get_IMU_param_list,"ax",%progbits
 12322              		.align	2
 12323              		.global	get_IMU_param_list
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 278


 12324              		.thumb
 12325              		.thumb_func
 12326              		.type	get_IMU_param_list, %function
 12327              	get_IMU_param_list:
 12328              	.LFB70:
1640:..\src/command_processing.c **** 
1641:..\src/command_processing.c **** //==============================================================================
1642:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1643:..\src/command_processing.c **** //==============================================================================
1644:..\src/command_processing.c **** 
1645:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1646:..\src/command_processing.c **** {
 12329              		.loc 1 1646 0
 12330              		.cfi_startproc
 12331              		@ args = 0, pretend = 0, frame = 1704
 12332              		@ frame_needed = 1, uses_anonymous_args = 0
 12333 0000 B0B5     		push	{r4, r5, r7, lr}
 12334              		.cfi_def_cfa_offset 16
 12335              		.cfi_offset 4, -16
 12336              		.cfi_offset 5, -12
 12337              		.cfi_offset 7, -8
 12338              		.cfi_offset 14, -4
 12339 0002 ADF5D56D 		sub	sp, sp, #1704
 12340              		.cfi_def_cfa_offset 1720
 12341 0006 00AF     		add	r7, sp, #0
 12342              		.cfi_def_cfa_register 7
 12343 0008 0246     		mov	r2, r0
 12344 000a BB1D     		adds	r3, r7, #6
 12345 000c 1A80     		strh	r2, [r3]	@ movhi
1647:..\src/command_processing.c ****     //Package to be sent variables
1648:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 12346              		.loc 1 1648 0
 12347 000e 07F58A73 		add	r3, r7, #276
 12348 0012 0022     		movs	r2, #0
 12349 0014 1A60     		str	r2, [r3]
 12350 0016 0433     		adds	r3, r3, #4
 12351 0018 40F27552 		movw	r2, #1397
 12352 001c 0021     		movs	r1, #0
 12353 001e 1846     		mov	r0, r3
 12354 0020 FFF7FEFF 		bl	memset
1649:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1650:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1651:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1652:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1653:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1654:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1655:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 12355              		.loc 1 1655 0
 12356 0024 0723     		movs	r3, #7
 12357 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1656:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 12358              		.loc 1 1656 0
 12359 002a 0023     		movs	r3, #0
 12360 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1657:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 12361              		.loc 1 1657 0
 12362 0030 0223     		movs	r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 279


 12363 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1658:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12364              		.loc 1 1658 0
 12365 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 12366 003a 5A1C     		adds	r2, r3, #1
1659:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 12367              		.loc 1 1659 0
 12368 003c B7F8A636 		ldrh	r3, [r7, #1702]
 12369 0040 1344     		add	r3, r3, r2
1660:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 12370              		.loc 1 1660 0
 12371 0042 0133     		adds	r3, r3, #1
1658:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12372              		.loc 1 1658 0
 12373 0044 9AB2     		uxth	r2, r3
 12374 0046 D24B     		ldr	r3, .L549
 12375 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12376 004a 9BB2     		uxth	r3, r3
 12377 004c 1344     		add	r3, r3, r2
 12378 004e 9BB2     		uxth	r3, r3
 12379 0050 1A46     		mov	r2, r3	@ movhi
 12380 0052 9200     		lsls	r2, r2, #2
 12381 0054 1344     		add	r3, r3, r2
 12382 0056 1A46     		mov	r2, r3	@ movhi
 12383 0058 9100     		lsls	r1, r2, #2
 12384 005a 1A46     		mov	r2, r3	@ movhi
 12385 005c 0B46     		mov	r3, r1	@ movhi
 12386 005e 1344     		add	r3, r3, r2
 12387 0060 5B00     		lsls	r3, r3, #1
 12388 0062 9BB2     		uxth	r3, r3
 12389 0064 FB33     		adds	r3, r3, #251
 12390 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1661:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1662:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1663:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1664:..\src/command_processing.c **** 
1665:..\src/command_processing.c ****     //Auxiliary variables
1666:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1667:..\src/command_processing.c ****     uint16 start_byte = 0;
 12391              		.loc 1 1667 0
 12392 006a 0023     		movs	r3, #0
 12393 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1668:..\src/command_processing.c **** 
1669:..\src/command_processing.c ****     //Parameters menu string definitions
1670:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 12394              		.loc 1 1670 0
 12395 0070 07F1F803 		add	r3, r7, #248
 12396 0074 C74A     		ldr	r2, .L549+4
 12397 0076 1C46     		mov	r4, r3
 12398 0078 1546     		mov	r5, r2
 12399 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12400 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12401 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 12402 0082 03C4     		stmia	r4!, {r0, r1}
 12403 0084 2280     		strh	r2, [r4]	@ movhi
1671:..\src/command_processing.c ****     char ids_str[11]            = "";
 12404              		.loc 1 1671 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 280


 12405 0086 07F1EC03 		add	r3, r7, #236
 12406 008a 0022     		movs	r2, #0
 12407 008c 1A60     		str	r2, [r3]
 12408 008e 0433     		adds	r3, r3, #4
 12409 0090 0022     		movs	r2, #0
 12410 0092 1A60     		str	r2, [r3]
 12411 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1672:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 12412              		.loc 1 1672 0
 12413 0098 07F1D803 		add	r3, r7, #216
 12414 009c BE4A     		ldr	r2, .L549+8
 12415 009e 1C46     		mov	r4, r3
 12416 00a0 1546     		mov	r5, r2
 12417 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12418 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12419 00a6 2B68     		ldr	r3, [r5]
 12420 00a8 2360     		str	r3, [r4]
1673:..\src/command_processing.c ****     char id_str[16]             = "";
 12421              		.loc 1 1673 0
 12422 00aa 07F1C803 		add	r3, r7, #200
 12423 00ae 0022     		movs	r2, #0
 12424 00b0 1A60     		str	r2, [r3]
 12425 00b2 0433     		adds	r3, r3, #4
 12426 00b4 0022     		movs	r2, #0
 12427 00b6 1A60     		str	r2, [r3]
 12428 00b8 5A60     		str	r2, [r3, #4]
 12429 00ba 9A60     		str	r2, [r3, #8]
1674:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 12430              		.loc 1 1674 0
 12431 00bc 07F19C03 		add	r3, r7, #156
 12432 00c0 0022     		movs	r2, #0
 12433 00c2 1A60     		str	r2, [r3]
 12434 00c4 0433     		adds	r3, r3, #4
 12435 00c6 2622     		movs	r2, #38
 12436 00c8 0021     		movs	r1, #0
 12437 00ca 1846     		mov	r0, r3
 12438 00cc FFF7FEFF 		bl	memset
1675:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 12439              		.loc 1 1675 0
 12440 00d0 07F18003 		add	r3, r7, #128
 12441 00d4 0022     		movs	r2, #0
 12442 00d6 1A60     		str	r2, [r3]
 12443 00d8 0433     		adds	r3, r3, #4
 12444 00da 0022     		movs	r2, #0
 12445 00dc 1A60     		str	r2, [r3]
 12446 00de 5A60     		str	r2, [r3, #4]
 12447 00e0 9A60     		str	r2, [r3, #8]
 12448 00e2 DA60     		str	r2, [r3, #12]
 12449 00e4 1A61     		str	r2, [r3, #16]
 12450 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1676:..\src/command_processing.c ****     
1677:..\src/command_processing.c ****     //Strings lengths
1678:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 12451              		.loc 1 1678 0
 12452 00e8 07F1C803 		add	r3, r7, #200
 12453 00ec 1846     		mov	r0, r3
 12454 00ee FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 281


 12455 00f2 0346     		mov	r3, r0
 12456 00f4 87F89336 		strb	r3, [r7, #1683]
1679:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 12457              		.loc 1 1679 0
 12458 00f8 07F1F803 		add	r3, r7, #248
 12459 00fc 1846     		mov	r0, r3
 12460 00fe FFF7FEFF 		bl	strlen
 12461 0102 0346     		mov	r3, r0
 12462 0104 87F89236 		strb	r3, [r7, #1682]
1680:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 12463              		.loc 1 1680 0
 12464 0108 07F1EC03 		add	r3, r7, #236
 12465 010c 1846     		mov	r0, r3
 12466 010e FFF7FEFF 		bl	strlen
 12467 0112 0346     		mov	r3, r0
 12468 0114 87F89136 		strb	r3, [r7, #1681]
1681:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12469              		.loc 1 1681 0
 12470 0118 07F1D803 		add	r3, r7, #216
 12471 011c 1846     		mov	r0, r3
 12472 011e FFF7FEFF 		bl	strlen
 12473 0122 0346     		mov	r3, r0
 12474 0124 87F89036 		strb	r3, [r7, #1680]
1682:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12475              		.loc 1 1682 0
 12476 0128 07F19C03 		add	r3, r7, #156
 12477 012c 1846     		mov	r0, r3
 12478 012e FFF7FEFF 		bl	strlen
 12479 0132 0346     		mov	r3, r0
 12480 0134 87F88F36 		strb	r3, [r7, #1679]
1683:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12481              		.loc 1 1683 0
 12482 0138 07F18003 		add	r3, r7, #128
 12483 013c 1846     		mov	r0, r3
 12484 013e FFF7FEFF 		bl	strlen
 12485 0142 0346     		mov	r3, r0
 12486 0144 87F89D36 		strb	r3, [r7, #1693]
1684:..\src/command_processing.c ****     
1685:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 12487              		.loc 1 1685 0
 12488 0148 07F10803 		add	r3, r7, #8
 12489 014c 0022     		movs	r2, #0
 12490 014e 1A60     		str	r2, [r3]
 12491 0150 0433     		adds	r3, r3, #4
 12492 0152 7222     		movs	r2, #114
 12493 0154 0021     		movs	r1, #0
 12494 0156 1846     		mov	r0, r3
 12495 0158 FFF7FEFF 		bl	memset
1686:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1687:..\src/command_processing.c ****  
1688:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12496              		.loc 1 1688 0
 12497 015c 07F10800 		add	r0, r7, #8
 12498 0160 6423     		movs	r3, #100
 12499 0162 0A22     		movs	r2, #10
 12500 0164 8D49     		ldr	r1, .L549+12
 12501 0166 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 282


1689:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12502              		.loc 1 1689 0
 12503 016a 07F10803 		add	r3, r7, #8
 12504 016e 1846     		mov	r0, r3
 12505 0170 FFF7FEFF 		bl	strlen
 12506 0174 0346     		mov	r3, r0
 12507 0176 87F88E36 		strb	r3, [r7, #1678]
1690:..\src/command_processing.c **** 
1691:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1692:..\src/command_processing.c ****     // update packet_length
1693:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12508              		.loc 1 1693 0
 12509 017a 854B     		ldr	r3, .L549
 12510 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12511 017e 5B08     		lsrs	r3, r3, #1
 12512 0180 DBB2     		uxtb	r3, r3
 12513 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1694:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12514              		.loc 1 1694 0
 12515 0186 824B     		ldr	r3, .L549
 12516 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12517 018a 1A46     		mov	r2, r3
 12518 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12519 0190 5B00     		lsls	r3, r3, #1
 12520 0192 D31A     		subs	r3, r2, r3
 12521 0194 002B     		cmp	r3, #0
 12522 0196 04DD     		ble	.L504
 12523              		.loc 1 1694 0 is_stmt 0 discriminator 1
 12524 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12525 019c 0133     		adds	r3, r3, #1
 12526 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12527              	.L504:
1695:..\src/command_processing.c ****     
1696:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12528              		.loc 1 1696 0 is_stmt 1
 12529 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12530 01a6 5A1C     		adds	r2, r3, #1
1697:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12531              		.loc 1 1697 0
 12532 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 12533 01ac 1344     		add	r3, r3, r2
1698:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12534              		.loc 1 1698 0
 12535 01ae 0133     		adds	r3, r3, #1
1696:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12536              		.loc 1 1696 0
 12537 01b0 9AB2     		uxth	r2, r3
 12538 01b2 774B     		ldr	r3, .L549
 12539 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12540 01b6 9BB2     		uxth	r3, r3
 12541 01b8 1344     		add	r3, r3, r2
 12542 01ba 9BB2     		uxth	r3, r3
 12543 01bc 1A46     		mov	r2, r3	@ movhi
 12544 01be 9200     		lsls	r2, r2, #2
 12545 01c0 1344     		add	r3, r3, r2
 12546 01c2 1A46     		mov	r2, r3	@ movhi
 12547 01c4 9100     		lsls	r1, r2, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 283


 12548 01c6 1A46     		mov	r2, r3	@ movhi
 12549 01c8 0B46     		mov	r3, r1	@ movhi
 12550 01ca 1344     		add	r3, r3, r2
 12551 01cc 5B00     		lsls	r3, r3, #1
 12552 01ce 9BB2     		uxth	r3, r3
 12553 01d0 C933     		adds	r3, r3, #201
 12554 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1699:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1700:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1701:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1702:..\src/command_processing.c **** 
1703:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12555              		.loc 1 1703 0
 12556 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12557 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12558 01de 1344     		add	r3, r3, r2
 12559 01e0 9BB2     		uxth	r3, r3
 12560 01e2 0333     		adds	r3, r3, #3
 12561 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1704:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12562              		.loc 1 1704 0
 12563 01e8 07F58A73 		add	r3, r7, #276
 12564 01ec A222     		movs	r2, #162
 12565 01ee 1A70     		strb	r2, [r3]
1705:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12566              		.loc 1 1705 0
 12567 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12568 01f4 DAB2     		uxtb	r2, r3
 12569 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12570 01fa DBB2     		uxtb	r3, r3
 12571 01fc 1344     		add	r3, r3, r2
 12572 01fe DAB2     		uxtb	r2, r3
 12573 0200 634B     		ldr	r3, .L549
 12574 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12575 0204 1344     		add	r3, r3, r2
 12576 0206 DBB2     		uxtb	r3, r3
 12577 0208 0333     		adds	r3, r3, #3
 12578 020a DAB2     		uxtb	r2, r3
 12579 020c 07F58A73 		add	r3, r7, #276
 12580 0210 5A70     		strb	r2, [r3, #1]
1706:..\src/command_processing.c **** 
1707:..\src/command_processing.c ****     switch(index) {
 12581              		.loc 1 1707 0
 12582 0212 BB1D     		adds	r3, r7, #6
 12583 0214 1B88     		ldrh	r3, [r3]
 12584 0216 002B     		cmp	r3, #0
 12585 0218 40F0D084 		bne	.L547
1708:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1709:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1710:..\src/command_processing.c ****             start_byte = 0;
 12586              		.loc 1 1710 0
 12587 021c 0023     		movs	r3, #0
 12588 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1711:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 12589              		.loc 1 1711 0
 12590 0222 07F58A73 		add	r3, r7, #276
 12591 0226 0222     		movs	r2, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 284


 12592 0228 9A70     		strb	r2, [r3, #2]
1712:..\src/command_processing.c ****             packet_data[3] = 1;
 12593              		.loc 1 1712 0
 12594 022a 07F58A73 		add	r3, r7, #276
 12595 022e 0122     		movs	r2, #1
 12596 0230 DA70     		strb	r2, [r3, #3]
1713:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12597              		.loc 1 1713 0
 12598 0232 574B     		ldr	r3, .L549
 12599 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12600 0236 07F58A73 		add	r3, r7, #276
 12601 023a 1A71     		strb	r2, [r3, #4]
1714:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12602              		.loc 1 1714 0
 12603 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12604 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12605 0244 15E0     		b	.L507
 12606              	.L508:
1715:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12607              		.loc 1 1715 0 discriminator 3
 12608 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12609 024a 5A1D     		adds	r2, r3, #5
 12610 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12611 0250 D31A     		subs	r3, r2, r3
 12612 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12613 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12614 025a 8A1A     		subs	r2, r1, r2
 12615 025c 07F1F801 		add	r1, r7, #248
 12616 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12617 0262 07F58A72 		add	r2, r7, #276
 12618 0266 D154     		strb	r1, [r2, r3]
1714:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12619              		.loc 1 1714 0 discriminator 3
 12620 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12621 026c 013B     		subs	r3, r3, #1
 12622 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12623              	.L507:
1714:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12624              		.loc 1 1714 0 is_stmt 0 discriminator 1
 12625 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 12626 0276 002B     		cmp	r3, #0
 12627 0278 E5D1     		bne	.L508
1716:..\src/command_processing.c ****                 
1717:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1718:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12628              		.loc 1 1718 0 is_stmt 1
 12629 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12630 027e 3233     		adds	r3, r3, #50
 12631 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1719:..\src/command_processing.c ****             i = 0;
 12632              		.loc 1 1719 0
 12633 0284 0023     		movs	r3, #0
 12634 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1720:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 12635              		.loc 1 1720 0
 12636 028a 0023     		movs	r3, #0
 12637 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 285


 12638 0290 B2E0     		b	.L509
 12639              	.L516:
1721:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12640              		.loc 1 1721 0
 12641 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12642 0296 07F1EC03 		add	r3, r7, #236
 12643 029a 4149     		ldr	r1, .L549+16
 12644 029c 1846     		mov	r0, r3
 12645 029e FFF7FEFF 		bl	sprintf
1722:..\src/command_processing.c ****                 h = 4;
 12646              		.loc 1 1722 0
 12647 02a2 0423     		movs	r3, #4
 12648 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1723:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12649              		.loc 1 1723 0
 12650 02a8 07F1EC03 		add	r3, r7, #236
 12651 02ac 1846     		mov	r0, r3
 12652 02ae FFF7FEFF 		bl	strlen
 12653 02b2 0346     		mov	r3, r0
 12654 02b4 87F89136 		strb	r3, [r7, #1681]
1724:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12655              		.loc 1 1724 0
 12656 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12657 02bc 9A1C     		adds	r2, r3, #2
 12658 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12659 02c2 3221     		movs	r1, #50
 12660 02c4 01FB03F3 		mul	r3, r1, r3
 12661 02c8 1344     		add	r3, r3, r2
 12662 02ca 07F58A72 		add	r2, r7, #276
 12663 02ce 0221     		movs	r1, #2
 12664 02d0 D154     		strb	r1, [r2, r3]
1725:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12665              		.loc 1 1725 0
 12666 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12667 02d6 DA1C     		adds	r2, r3, #3
 12668 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12669 02dc 3221     		movs	r1, #50
 12670 02de 01FB03F3 		mul	r3, r1, r3
 12671 02e2 1344     		add	r3, r3, r2
 12672 02e4 07F58A72 		add	r2, r7, #276
 12673 02e8 0321     		movs	r1, #3
 12674 02ea D154     		strb	r1, [r2, r3]
1726:..\src/command_processing.c ****                 
1727:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 12675              		.loc 1 1727 0
 12676 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12677 02f0 1A46     		mov	r2, r3	@ movhi
 12678 02f2 5200     		lsls	r2, r2, #1
 12679 02f4 1344     		add	r3, r3, r2
 12680 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12681 02fa 39E0     		b	.L510
 12682              	.L513:
1728:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12683              		.loc 1 1728 0
 12684 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12685 0300 284A     		ldr	r2, .L549+20
 12686 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 286


 12687 0304 9BB2     		uxth	r3, r3
 12688 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12689 030a 9A42     		cmp	r2, r3
 12690 030c 17D1     		bne	.L511
1729:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12691              		.loc 1 1729 0
 12692 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12693 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12694 0316 1A44     		add	r2, r2, r3
 12695 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12696 031c 3221     		movs	r1, #50
 12697 031e 01FB03F3 		mul	r3, r1, r3
 12698 0322 1344     		add	r3, r3, r2
 12699 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12700 0328 1E49     		ldr	r1, .L549+20
 12701 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12702 032c 07F58A72 		add	r2, r7, #276
 12703 0330 D154     		strb	r1, [r2, r3]
1730:..\src/command_processing.c ****                         i++;
 12704              		.loc 1 1730 0
 12705 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12706 0336 0133     		adds	r3, r3, #1
 12707 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12708 033c 0EE0     		b	.L512
 12709              	.L511:
1731:..\src/command_processing.c ****                     } 
1732:..\src/command_processing.c ****                     else {
1733:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12710              		.loc 1 1733 0
 12711 033e B7F89E26 		ldrh	r2, [r7, #1694]
 12712 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12713 0346 1A44     		add	r2, r2, r3
 12714 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12715 034c 3221     		movs	r1, #50
 12716 034e 01FB03F3 		mul	r3, r1, r3
 12717 0352 1344     		add	r3, r3, r2
 12718 0354 07F58A72 		add	r2, r7, #276
 12719 0358 FF21     		movs	r1, #255
 12720 035a D154     		strb	r1, [r2, r3]
 12721              	.L512:
1734:..\src/command_processing.c ****                     }
1735:..\src/command_processing.c ****                     h++;
 12722              		.loc 1 1735 0 discriminator 2
 12723 035c B7F89E36 		ldrh	r3, [r7, #1694]
 12724 0360 0133     		adds	r3, r3, #1
 12725 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1727:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12726              		.loc 1 1727 0 discriminator 2
 12727 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12728 036a 0133     		adds	r3, r3, #1
 12729 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12730              	.L510:
1727:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12731              		.loc 1 1727 0 is_stmt 0 discriminator 1
 12732 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12733 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12734 0378 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 287


 12735 037a 5B00     		lsls	r3, r3, #1
 12736 037c 1344     		add	r3, r3, r2
 12737 037e 0233     		adds	r3, r3, #2
 12738 0380 9942     		cmp	r1, r3
 12739 0382 BBDD     		ble	.L513
1736:..\src/command_processing.c ****                 }
1737:..\src/command_processing.c **** 
1738:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1739:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12740              		.loc 1 1739 0 is_stmt 1
 12741 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12742 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12743 038c 2BE0     		b	.L514
 12744              	.L550:
 12745 038e 00BF     		.align	2
 12746              	.L549:
 12747 0390 00000000 		.word	N_IMU_Connected
 12748 0394 28110000 		.word	.LC143
 12749 0398 44110000 		.word	.LC144
 12750 039c 88020000 		.word	.LC130
 12751 03a0 C0100000 		.word	.LC145
 12752 03a4 00000000 		.word	IMU_connected
 12753              	.L515:
1740:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12754              		.loc 1 1740 0 discriminator 3
 12755 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12756 03ac DA1D     		adds	r2, r3, #7
 12757 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12758 03b2 3221     		movs	r1, #50
 12759 03b4 01FB03F3 		mul	r3, r1, r3
 12760 03b8 1A44     		add	r2, r2, r3
 12761 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12762 03be 1A44     		add	r2, r2, r3
 12763 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12764 03c4 D31A     		subs	r3, r2, r3
 12765 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12766 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12767 03ce 8A1A     		subs	r2, r1, r2
 12768 03d0 07F1EC01 		add	r1, r7, #236
 12769 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12770 03d6 07F58A72 		add	r2, r7, #276
 12771 03da D154     		strb	r1, [r2, r3]
1739:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12772              		.loc 1 1739 0 discriminator 3
 12773 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12774 03e0 013B     		subs	r3, r3, #1
 12775 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12776              	.L514:
1739:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12777              		.loc 1 1739 0 is_stmt 0 discriminator 1
 12778 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12779 03ea 002B     		cmp	r3, #0
 12780 03ec DCD1     		bne	.L515
1720:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12781              		.loc 1 1720 0 is_stmt 1 discriminator 2
 12782 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12783 03f2 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 288


 12784 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12785              	.L509:
1720:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12786              		.loc 1 1720 0 is_stmt 0 discriminator 1
 12787 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12788 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12789 0400 9A42     		cmp	r2, r3
 12790 0402 FFF446AF 		bcc	.L516
1741:..\src/command_processing.c ****             }
1742:..\src/command_processing.c ****             
1743:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1744:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12791              		.loc 1 1744 0 is_stmt 1
 12792 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12793 040a 1A46     		mov	r2, r3	@ movhi
 12794 040c 9200     		lsls	r2, r2, #2
 12795 040e 1344     		add	r3, r3, r2
 12796 0410 1A46     		mov	r2, r3	@ movhi
 12797 0412 9100     		lsls	r1, r2, #2
 12798 0414 1A46     		mov	r2, r3	@ movhi
 12799 0416 0B46     		mov	r3, r1	@ movhi
 12800 0418 1344     		add	r3, r3, r2
 12801 041a 5B00     		lsls	r3, r3, #1
 12802 041c 9AB2     		uxth	r2, r3
 12803 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12804 0422 1344     		add	r3, r3, r2
 12805 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1745:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12806              		.loc 1 1745 0
 12807 0428 0023     		movs	r3, #0
 12808 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12809 042e 1FE1     		b	.L517
 12810              	.L524:
1746:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12811              		.loc 1 1746 0
 12812 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12813 0434 9A1C     		adds	r2, r3, #2
 12814 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12815 043a 3221     		movs	r1, #50
 12816 043c 01FB03F3 		mul	r3, r1, r3
 12817 0440 1344     		add	r3, r3, r2
 12818 0442 07F58A72 		add	r2, r7, #276
 12819 0446 0221     		movs	r1, #2
 12820 0448 D154     		strb	r1, [r2, r3]
1747:..\src/command_processing.c ****                 
1748:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12821              		.loc 1 1748 0
 12822 044a B7F89436 		ldrh	r3, [r7, #1684]
 12823 044e DA1C     		adds	r2, r3, #3
 12824 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12825 0454 3221     		movs	r1, #50
 12826 0456 01FB03F3 		mul	r3, r1, r3
 12827 045a 1344     		add	r3, r3, r2
 12828 045c 07F58A72 		add	r2, r7, #276
 12829 0460 0321     		movs	r1, #3
 12830 0462 D154     		strb	r1, [r2, r3]
1749:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 289


 12831              		.loc 1 1749 0
 12832 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12833 0468 1A1D     		adds	r2, r3, #4
 12834 046a B7F8A036 		ldrh	r3, [r7, #1696]
 12835 046e 3221     		movs	r1, #50
 12836 0470 01FB03F3 		mul	r3, r1, r3
 12837 0474 1A44     		add	r2, r2, r3
 12838 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12839 047a 5B00     		lsls	r3, r3, #1
 12840 047c B249     		ldr	r1, .L551
 12841 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12842 0480 1846     		mov	r0, r3
 12843 0482 B249     		ldr	r1, .L551+4
 12844 0484 0346     		mov	r3, r0
 12845 0486 5B00     		lsls	r3, r3, #1
 12846 0488 0344     		add	r3, r3, r0
 12847 048a 0B44     		add	r3, r3, r1
 12848 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12849 048e 07F58A73 		add	r3, r7, #276
 12850 0492 9954     		strb	r1, [r3, r2]
1750:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12851              		.loc 1 1750 0
 12852 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12853 0498 5A1D     		adds	r2, r3, #5
 12854 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12855 049e 3221     		movs	r1, #50
 12856 04a0 01FB03F3 		mul	r3, r1, r3
 12857 04a4 1A44     		add	r2, r2, r3
 12858 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12859 04aa 5B00     		lsls	r3, r3, #1
 12860 04ac A649     		ldr	r1, .L551
 12861 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12862 04b0 1846     		mov	r0, r3
 12863 04b2 A649     		ldr	r1, .L551+4
 12864 04b4 0346     		mov	r3, r0
 12865 04b6 5B00     		lsls	r3, r3, #1
 12866 04b8 0344     		add	r3, r3, r0
 12867 04ba 0B44     		add	r3, r3, r1
 12868 04bc 0133     		adds	r3, r3, #1
 12869 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12870 04c0 07F58A73 		add	r3, r7, #276
 12871 04c4 9954     		strb	r1, [r3, r2]
1751:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12872              		.loc 1 1751 0
 12873 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12874 04ca 9A1D     		adds	r2, r3, #6
 12875 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12876 04d0 3221     		movs	r1, #50
 12877 04d2 01FB03F3 		mul	r3, r1, r3
 12878 04d6 1A44     		add	r2, r2, r3
 12879 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12880 04dc 5B00     		lsls	r3, r3, #1
 12881 04de 9A49     		ldr	r1, .L551
 12882 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12883 04e2 1846     		mov	r0, r3
 12884 04e4 9949     		ldr	r1, .L551+4
 12885 04e6 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 290


 12886 04e8 5B00     		lsls	r3, r3, #1
 12887 04ea 0344     		add	r3, r3, r0
 12888 04ec 0B44     		add	r3, r3, r1
 12889 04ee 0233     		adds	r3, r3, #2
 12890 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12891 04f2 07F58A73 		add	r3, r7, #276
 12892 04f6 9954     		strb	r1, [r3, r2]
1752:..\src/command_processing.c ****                 
1753:..\src/command_processing.c ****                 // check if there is a second value
1754:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12893              		.loc 1 1754 0
 12894 04f8 954B     		ldr	r3, .L551+8
 12895 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12896 04fc 1A46     		mov	r2, r3
 12897 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12898 0502 0133     		adds	r3, r3, #1
 12899 0504 5B00     		lsls	r3, r3, #1
 12900 0506 9A42     		cmp	r2, r3
 12901 0508 28DA     		bge	.L518
1755:..\src/command_processing.c ****                     // there is only one value
1756:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12902              		.loc 1 1756 0
 12903 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12904 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12905 0512 1EE0     		b	.L519
 12906              	.L520:
1757:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12907              		.loc 1 1757 0 discriminator 3
 12908 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12909 0518 DA1D     		adds	r2, r3, #7
 12910 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12911 051e 3221     		movs	r1, #50
 12912 0520 01FB03F3 		mul	r3, r1, r3
 12913 0524 1A44     		add	r2, r2, r3
 12914 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12915 052a 1A44     		add	r2, r2, r3
 12916 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12917 0530 D31A     		subs	r3, r2, r3
 12918 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12919 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12920 053a 8A1A     		subs	r2, r1, r2
 12921 053c 07F1D801 		add	r1, r7, #216
 12922 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12923 0542 07F58A72 		add	r2, r7, #276
 12924 0546 D154     		strb	r1, [r2, r3]
1756:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12925              		.loc 1 1756 0 discriminator 3
 12926 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12927 054c 013B     		subs	r3, r3, #1
 12928 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12929              	.L519:
1756:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12930              		.loc 1 1756 0 is_stmt 0 discriminator 1
 12931 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12932 0556 002B     		cmp	r3, #0
 12933 0558 DCD1     		bne	.L520
 12934 055a 84E0     		b	.L521
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 291


 12935              	.L518:
1758:..\src/command_processing.c ****                 }
1759:..\src/command_processing.c ****                 else {
1760:..\src/command_processing.c ****                     // fill the second value
1761:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12936              		.loc 1 1761 0 is_stmt 1
 12937 055c B7F89436 		ldrh	r3, [r7, #1684]
 12938 0560 DA1C     		adds	r2, r3, #3
 12939 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12940 0566 3221     		movs	r1, #50
 12941 0568 01FB03F3 		mul	r3, r1, r3
 12942 056c 1344     		add	r3, r3, r2
 12943 056e 07F58A72 		add	r2, r7, #276
 12944 0572 0621     		movs	r1, #6
 12945 0574 D154     		strb	r1, [r2, r3]
1762:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12946              		.loc 1 1762 0
 12947 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12948 057a DA1D     		adds	r2, r3, #7
 12949 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12950 0580 3221     		movs	r1, #50
 12951 0582 01FB03F3 		mul	r3, r1, r3
 12952 0586 1A44     		add	r2, r2, r3
 12953 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12954 058c 5B00     		lsls	r3, r3, #1
 12955 058e 0133     		adds	r3, r3, #1
 12956 0590 6D49     		ldr	r1, .L551
 12957 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12958 0594 1846     		mov	r0, r3
 12959 0596 6D49     		ldr	r1, .L551+4
 12960 0598 0346     		mov	r3, r0
 12961 059a 5B00     		lsls	r3, r3, #1
 12962 059c 0344     		add	r3, r3, r0
 12963 059e 0B44     		add	r3, r3, r1
 12964 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12965 05a2 07F58A73 		add	r3, r7, #276
 12966 05a6 9954     		strb	r1, [r3, r2]
1763:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12967              		.loc 1 1763 0
 12968 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12969 05ac 03F10802 		add	r2, r3, #8
 12970 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12971 05b4 3221     		movs	r1, #50
 12972 05b6 01FB03F3 		mul	r3, r1, r3
 12973 05ba 1A44     		add	r2, r2, r3
 12974 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12975 05c0 5B00     		lsls	r3, r3, #1
 12976 05c2 0133     		adds	r3, r3, #1
 12977 05c4 6049     		ldr	r1, .L551
 12978 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12979 05c8 1846     		mov	r0, r3
 12980 05ca 6049     		ldr	r1, .L551+4
 12981 05cc 0346     		mov	r3, r0
 12982 05ce 5B00     		lsls	r3, r3, #1
 12983 05d0 0344     		add	r3, r3, r0
 12984 05d2 0B44     		add	r3, r3, r1
 12985 05d4 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 292


 12986 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12987 05d8 07F58A73 		add	r3, r7, #276
 12988 05dc 9954     		strb	r1, [r3, r2]
1764:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12989              		.loc 1 1764 0
 12990 05de B7F89436 		ldrh	r3, [r7, #1684]
 12991 05e2 03F10902 		add	r2, r3, #9
 12992 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12993 05ea 3221     		movs	r1, #50
 12994 05ec 01FB03F3 		mul	r3, r1, r3
 12995 05f0 1A44     		add	r2, r2, r3
 12996 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12997 05f6 5B00     		lsls	r3, r3, #1
 12998 05f8 0133     		adds	r3, r3, #1
 12999 05fa 5349     		ldr	r1, .L551
 13000 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13001 05fe 1846     		mov	r0, r3
 13002 0600 5249     		ldr	r1, .L551+4
 13003 0602 0346     		mov	r3, r0
 13004 0604 5B00     		lsls	r3, r3, #1
 13005 0606 0344     		add	r3, r3, r0
 13006 0608 0B44     		add	r3, r3, r1
 13007 060a 0233     		adds	r3, r3, #2
 13008 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 13009 060e 07F58A73 		add	r3, r7, #276
 13010 0612 9954     		strb	r1, [r3, r2]
1765:..\src/command_processing.c ****                 
1766:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 13011              		.loc 1 1766 0
 13012 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 13013 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13014 061c 1FE0     		b	.L522
 13015              	.L523:
1767:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 13016              		.loc 1 1767 0 discriminator 3
 13017 061e B7F89436 		ldrh	r3, [r7, #1684]
 13018 0622 03F10A02 		add	r2, r3, #10
 13019 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 13020 062a 3221     		movs	r1, #50
 13021 062c 01FB03F3 		mul	r3, r1, r3
 13022 0630 1A44     		add	r2, r2, r3
 13023 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 13024 0636 1A44     		add	r2, r2, r3
 13025 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 13026 063c D31A     		subs	r3, r2, r3
 13027 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 13028 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 13029 0646 8A1A     		subs	r2, r1, r2
 13030 0648 07F1D801 		add	r1, r7, #216
 13031 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13032 064e 07F58A72 		add	r2, r7, #276
 13033 0652 D154     		strb	r1, [r2, r3]
1766:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 13034              		.loc 1 1766 0 discriminator 3
 13035 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 13036 0658 013B     		subs	r3, r3, #1
 13037 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 293


 13038              	.L522:
1766:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 13039              		.loc 1 1766 0 is_stmt 0 discriminator 1
 13040 065e B7F8A236 		ldrh	r3, [r7, #1698]
 13041 0662 002B     		cmp	r3, #0
 13042 0664 DBD1     		bne	.L523
 13043              	.L521:
1745:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 13044              		.loc 1 1745 0 is_stmt 1 discriminator 2
 13045 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 13046 066a 0133     		adds	r3, r3, #1
 13047 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 13048              	.L517:
1745:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 13049              		.loc 1 1745 0 is_stmt 0 discriminator 1
 13050 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 13051 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 13052 0678 9A42     		cmp	r2, r3
 13053 067a FFF4D9AE 		bcc	.L524
1768:..\src/command_processing.c ****                 }
1769:..\src/command_processing.c ****             }
1770:..\src/command_processing.c ****             
1771:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1772:..\src/command_processing.c ****             
1773:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 13054              		.loc 1 1773 0 is_stmt 1
 13055 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 13056 0682 1A46     		mov	r2, r3	@ movhi
 13057 0684 9200     		lsls	r2, r2, #2
 13058 0686 1344     		add	r3, r3, r2
 13059 0688 1A46     		mov	r2, r3	@ movhi
 13060 068a 9100     		lsls	r1, r2, #2
 13061 068c 1A46     		mov	r2, r3	@ movhi
 13062 068e 0B46     		mov	r3, r1	@ movhi
 13063 0690 1344     		add	r3, r3, r2
 13064 0692 5B00     		lsls	r3, r3, #1
 13065 0694 9AB2     		uxth	r2, r3
 13066 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13067 069a 1344     		add	r3, r3, r2
 13068 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1774:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 13069              		.loc 1 1774 0
 13070 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 13071 06a4 5A1E     		subs	r2, r3, #1
 13072 06a6 07F1C803 		add	r3, r7, #200
 13073 06aa 2A49     		ldr	r1, .L551+12
 13074 06ac 1846     		mov	r0, r3
 13075 06ae FFF7FEFF 		bl	sprintf
1775:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 13076              		.loc 1 1775 0
 13077 06b2 07F1C803 		add	r3, r7, #200
 13078 06b6 1846     		mov	r0, r3
 13079 06b8 FFF7FEFF 		bl	strlen
 13080 06bc 0346     		mov	r3, r0
 13081 06be 87F89336 		strb	r3, [r7, #1683]
1776:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 13082              		.loc 1 1776 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 294


 13083 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 13084 06c6 0233     		adds	r3, r3, #2
 13085 06c8 07F58A72 		add	r2, r7, #276
 13086 06cc 0221     		movs	r1, #2
 13087 06ce D154     		strb	r1, [r2, r3]
1777:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13088              		.loc 1 1777 0
 13089 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 13090 06d4 0333     		adds	r3, r3, #3
 13091 06d6 07F58A72 		add	r2, r7, #276
 13092 06da 0121     		movs	r1, #1
 13093 06dc D154     		strb	r1, [r2, r3]
1778:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 13094              		.loc 1 1778 0
 13095 06de B7F89436 		ldrh	r3, [r7, #1684]
 13096 06e2 0433     		adds	r3, r3, #4
 13097 06e4 1C4A     		ldr	r2, .L551+16
 13098 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 13099 06ea 07F58A72 		add	r2, r7, #276
 13100 06ee D154     		strb	r1, [r2, r3]
1779:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13101              		.loc 1 1779 0
 13102 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 13103 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13104 06f8 18E0     		b	.L525
 13105              	.L526:
1780:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 13106              		.loc 1 1780 0 discriminator 3
 13107 06fa B7F89436 		ldrh	r3, [r7, #1684]
 13108 06fe 5A1D     		adds	r2, r3, #5
 13109 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 13110 0704 1A44     		add	r2, r2, r3
 13111 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 13112 070a D31A     		subs	r3, r2, r3
 13113 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 13114 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 13115 0714 8A1A     		subs	r2, r1, r2
 13116 0716 07F1C801 		add	r1, r7, #200
 13117 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13118 071c 07F58A72 		add	r2, r7, #276
 13119 0720 D154     		strb	r1, [r2, r3]
1779:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13120              		.loc 1 1779 0 discriminator 3
 13121 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 13122 0726 013B     		subs	r3, r3, #1
 13123 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13124              	.L525:
1779:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13125              		.loc 1 1779 0 is_stmt 0 discriminator 1
 13126 072c B7F8A436 		ldrh	r3, [r7, #1700]
 13127 0730 002B     		cmp	r3, #0
 13128 0732 E2D1     		bne	.L526
1781:..\src/command_processing.c ****                 
1782:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1783:..\src/command_processing.c ****             
1784:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13129              		.loc 1 1784 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 295


 13130 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13131 0738 3233     		adds	r3, r3, #50
 13132 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1785:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 13133              		.loc 1 1785 0
 13134 073e 0023     		movs	r3, #0
 13135 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13136 0744 38E1     		b	.L527
 13137              	.L552:
 13138 0746 00BF     		.align	2
 13139              	.L551:
 13140 0748 00000000 		.word	IMU_connected
 13141 074c 00000000 		.word	MagCal
 13142 0750 00000000 		.word	N_IMU_Connected
 13143 0754 CC100000 		.word	.LC146
 13144 0758 00000000 		.word	c_mem
 13145              	.L530:
1786:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13146              		.loc 1 1786 0
 13147 075c B7F89826 		ldrh	r2, [r7, #1688]
 13148 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 13149 0764 D118     		adds	r1, r2, r3
 13150 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 13151 076a D54A     		ldr	r2, .L553
 13152 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13153 076e 07F19C00 		add	r0, r7, #156
 13154 0772 0A46     		mov	r2, r1
 13155 0774 D349     		ldr	r1, .L553+4
 13156 0776 FFF7FEFF 		bl	sprintf
1787:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 13157              		.loc 1 1787 0
 13158 077a 07F19C03 		add	r3, r7, #156
 13159 077e 1846     		mov	r0, r3
 13160 0780 FFF7FEFF 		bl	strlen
 13161 0784 0346     		mov	r3, r0
 13162 0786 87F88F36 		strb	r3, [r7, #1679]
1788:..\src/command_processing.c ****             
1789:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 13163              		.loc 1 1789 0
 13164 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13165 078e 1A46     		mov	r2, r3	@ movhi
 13166 0790 9200     		lsls	r2, r2, #2
 13167 0792 1344     		add	r3, r3, r2
 13168 0794 1A46     		mov	r2, r3	@ movhi
 13169 0796 9100     		lsls	r1, r2, #2
 13170 0798 1A46     		mov	r2, r3	@ movhi
 13171 079a 0B46     		mov	r3, r1	@ movhi
 13172 079c 1344     		add	r3, r3, r2
 13173 079e 5B00     		lsls	r3, r3, #1
 13174 07a0 9AB2     		uxth	r2, r3
 13175 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13176 07a6 1344     		add	r3, r3, r2
 13177 07a8 9BB2     		uxth	r3, r3
 13178 07aa 0233     		adds	r3, r3, #2
 13179 07ac 9BB2     		uxth	r3, r3
 13180 07ae 1A46     		mov	r2, r3
 13181 07b0 07F58A73 		add	r3, r7, #276
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 296


 13182 07b4 0221     		movs	r1, #2
 13183 07b6 9954     		strb	r1, [r3, r2]
1790:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 13184              		.loc 1 1790 0
 13185 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13186 07bc 1A46     		mov	r2, r3	@ movhi
 13187 07be 9200     		lsls	r2, r2, #2
 13188 07c0 1344     		add	r3, r3, r2
 13189 07c2 1A46     		mov	r2, r3	@ movhi
 13190 07c4 9100     		lsls	r1, r2, #2
 13191 07c6 1A46     		mov	r2, r3	@ movhi
 13192 07c8 0B46     		mov	r3, r1	@ movhi
 13193 07ca 1344     		add	r3, r3, r2
 13194 07cc 5B00     		lsls	r3, r3, #1
 13195 07ce 9AB2     		uxth	r2, r3
 13196 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13197 07d4 1344     		add	r3, r3, r2
 13198 07d6 9BB2     		uxth	r3, r3
 13199 07d8 0333     		adds	r3, r3, #3
 13200 07da 9BB2     		uxth	r3, r3
 13201 07dc 1A46     		mov	r2, r3
 13202 07de 07F58A73 		add	r3, r7, #276
 13203 07e2 0521     		movs	r1, #5
 13204 07e4 9954     		strb	r1, [r3, r2]
1791:..\src/command_processing.c ****                 
1792:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13205              		.loc 1 1792 0
 13206 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13207 07ea 1A46     		mov	r2, r3	@ movhi
 13208 07ec 9200     		lsls	r2, r2, #2
 13209 07ee 1344     		add	r3, r3, r2
 13210 07f0 1A46     		mov	r2, r3	@ movhi
 13211 07f2 9100     		lsls	r1, r2, #2
 13212 07f4 1A46     		mov	r2, r3	@ movhi
 13213 07f6 0B46     		mov	r3, r1	@ movhi
 13214 07f8 1344     		add	r3, r3, r2
 13215 07fa 5B00     		lsls	r3, r3, #1
 13216 07fc 9AB2     		uxth	r2, r3
 13217 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13218 0802 1344     		add	r3, r3, r2
 13219 0804 9BB2     		uxth	r3, r3
 13220 0806 0433     		adds	r3, r3, #4
 13221 0808 9BB2     		uxth	r3, r3
 13222 080a 1846     		mov	r0, r3
 13223 080c B7F8A436 		ldrh	r3, [r7, #1700]
 13224 0810 AB4A     		ldr	r2, .L553
 13225 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13226 0814 1946     		mov	r1, r3
 13227 0816 AC4A     		ldr	r2, .L553+8
 13228 0818 0B46     		mov	r3, r1
 13229 081a 9B00     		lsls	r3, r3, #2
 13230 081c 0B44     		add	r3, r3, r1
 13231 081e 1344     		add	r3, r3, r2
 13232 0820 03F20223 		addw	r3, r3, #514
 13233 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13234 0826 07F58A73 		add	r3, r7, #276
 13235 082a 1A54     		strb	r2, [r3, r0]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 297


1793:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13236              		.loc 1 1793 0
 13237 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13238 0830 1A46     		mov	r2, r3	@ movhi
 13239 0832 9200     		lsls	r2, r2, #2
 13240 0834 1344     		add	r3, r3, r2
 13241 0836 1A46     		mov	r2, r3	@ movhi
 13242 0838 9100     		lsls	r1, r2, #2
 13243 083a 1A46     		mov	r2, r3	@ movhi
 13244 083c 0B46     		mov	r3, r1	@ movhi
 13245 083e 1344     		add	r3, r3, r2
 13246 0840 5B00     		lsls	r3, r3, #1
 13247 0842 9AB2     		uxth	r2, r3
 13248 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13249 0848 1344     		add	r3, r3, r2
 13250 084a 9BB2     		uxth	r3, r3
 13251 084c 0533     		adds	r3, r3, #5
 13252 084e 9BB2     		uxth	r3, r3
 13253 0850 1846     		mov	r0, r3
 13254 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 13255 0856 9A4A     		ldr	r2, .L553
 13256 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13257 085a 1946     		mov	r1, r3
 13258 085c 9A4A     		ldr	r2, .L553+8
 13259 085e 0B46     		mov	r3, r1
 13260 0860 9B00     		lsls	r3, r3, #2
 13261 0862 0B44     		add	r3, r3, r1
 13262 0864 1344     		add	r3, r3, r2
 13263 0866 03F20323 		addw	r3, r3, #515
 13264 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13265 086c 07F58A73 		add	r3, r7, #276
 13266 0870 1A54     		strb	r2, [r3, r0]
1794:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13267              		.loc 1 1794 0
 13268 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13269 0876 1A46     		mov	r2, r3	@ movhi
 13270 0878 9200     		lsls	r2, r2, #2
 13271 087a 1344     		add	r3, r3, r2
 13272 087c 1A46     		mov	r2, r3	@ movhi
 13273 087e 9100     		lsls	r1, r2, #2
 13274 0880 1A46     		mov	r2, r3	@ movhi
 13275 0882 0B46     		mov	r3, r1	@ movhi
 13276 0884 1344     		add	r3, r3, r2
 13277 0886 5B00     		lsls	r3, r3, #1
 13278 0888 9AB2     		uxth	r2, r3
 13279 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13280 088e 1344     		add	r3, r3, r2
 13281 0890 9BB2     		uxth	r3, r3
 13282 0892 0633     		adds	r3, r3, #6
 13283 0894 9BB2     		uxth	r3, r3
 13284 0896 1846     		mov	r0, r3
 13285 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 13286 089c 884A     		ldr	r2, .L553
 13287 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13288 08a0 1946     		mov	r1, r3
 13289 08a2 894A     		ldr	r2, .L553+8
 13290 08a4 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 298


 13291 08a6 9B00     		lsls	r3, r3, #2
 13292 08a8 0B44     		add	r3, r3, r1
 13293 08aa 1344     		add	r3, r3, r2
 13294 08ac 03F50173 		add	r3, r3, #516
 13295 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13296 08b2 07F58A73 		add	r3, r7, #276
 13297 08b6 1A54     		strb	r2, [r3, r0]
1795:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13298              		.loc 1 1795 0
 13299 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13300 08bc 1A46     		mov	r2, r3	@ movhi
 13301 08be 9200     		lsls	r2, r2, #2
 13302 08c0 1344     		add	r3, r3, r2
 13303 08c2 1A46     		mov	r2, r3	@ movhi
 13304 08c4 9100     		lsls	r1, r2, #2
 13305 08c6 1A46     		mov	r2, r3	@ movhi
 13306 08c8 0B46     		mov	r3, r1	@ movhi
 13307 08ca 1344     		add	r3, r3, r2
 13308 08cc 5B00     		lsls	r3, r3, #1
 13309 08ce 9AB2     		uxth	r2, r3
 13310 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13311 08d4 1344     		add	r3, r3, r2
 13312 08d6 9BB2     		uxth	r3, r3
 13313 08d8 0733     		adds	r3, r3, #7
 13314 08da 9BB2     		uxth	r3, r3
 13315 08dc 1846     		mov	r0, r3
 13316 08de B7F8A436 		ldrh	r3, [r7, #1700]
 13317 08e2 774A     		ldr	r2, .L553
 13318 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13319 08e6 1946     		mov	r1, r3
 13320 08e8 774A     		ldr	r2, .L553+8
 13321 08ea 0B46     		mov	r3, r1
 13322 08ec 9B00     		lsls	r3, r3, #2
 13323 08ee 0B44     		add	r3, r3, r1
 13324 08f0 1344     		add	r3, r3, r2
 13325 08f2 03F20523 		addw	r3, r3, #517
 13326 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13327 08f8 07F58A73 		add	r3, r7, #276
 13328 08fc 1A54     		strb	r2, [r3, r0]
1796:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13329              		.loc 1 1796 0
 13330 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13331 0902 1A46     		mov	r2, r3	@ movhi
 13332 0904 9200     		lsls	r2, r2, #2
 13333 0906 1344     		add	r3, r3, r2
 13334 0908 1A46     		mov	r2, r3	@ movhi
 13335 090a 9100     		lsls	r1, r2, #2
 13336 090c 1A46     		mov	r2, r3	@ movhi
 13337 090e 0B46     		mov	r3, r1	@ movhi
 13338 0910 1344     		add	r3, r3, r2
 13339 0912 5B00     		lsls	r3, r3, #1
 13340 0914 9AB2     		uxth	r2, r3
 13341 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13342 091a 1344     		add	r3, r3, r2
 13343 091c 9BB2     		uxth	r3, r3
 13344 091e 0833     		adds	r3, r3, #8
 13345 0920 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 299


 13346 0922 1846     		mov	r0, r3
 13347 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 13348 0928 654A     		ldr	r2, .L553
 13349 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13350 092c 1946     		mov	r1, r3
 13351 092e 664A     		ldr	r2, .L553+8
 13352 0930 0B46     		mov	r3, r1
 13353 0932 9B00     		lsls	r3, r3, #2
 13354 0934 0B44     		add	r3, r3, r1
 13355 0936 1344     		add	r3, r3, r2
 13356 0938 03F20623 		addw	r3, r3, #518
 13357 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13358 093e 07F58A73 		add	r3, r7, #276
 13359 0942 1A54     		strb	r2, [r3, r0]
1797:..\src/command_processing.c **** 
1798:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 13360              		.loc 1 1798 0
 13361 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13362 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13363 094c 2BE0     		b	.L528
 13364              	.L529:
1799:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13365              		.loc 1 1799 0 discriminator 3
 13366 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13367 0952 1A46     		mov	r2, r3	@ movhi
 13368 0954 9200     		lsls	r2, r2, #2
 13369 0956 1344     		add	r3, r3, r2
 13370 0958 1A46     		mov	r2, r3	@ movhi
 13371 095a 9100     		lsls	r1, r2, #2
 13372 095c 1A46     		mov	r2, r3	@ movhi
 13373 095e 0B46     		mov	r3, r1	@ movhi
 13374 0960 1344     		add	r3, r3, r2
 13375 0962 5B00     		lsls	r3, r3, #1
 13376 0964 9AB2     		uxth	r2, r3
 13377 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13378 096a 1344     		add	r3, r3, r2
 13379 096c 9AB2     		uxth	r2, r3
 13380 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13381 0972 9BB2     		uxth	r3, r3
 13382 0974 1344     		add	r3, r3, r2
 13383 0976 9AB2     		uxth	r2, r3
 13384 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 13385 097c D31A     		subs	r3, r2, r3
 13386 097e 9BB2     		uxth	r3, r3
 13387 0980 0933     		adds	r3, r3, #9
 13388 0982 9BB2     		uxth	r3, r3
 13389 0984 1946     		mov	r1, r3
 13390 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 13391 098a B7F8A236 		ldrh	r3, [r7, #1698]
 13392 098e D31A     		subs	r3, r2, r3
 13393 0990 07F19C02 		add	r2, r7, #156
 13394 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 13395 0996 07F58A73 		add	r3, r7, #276
 13396 099a 5A54     		strb	r2, [r3, r1]
1798:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13397              		.loc 1 1798 0 discriminator 3
 13398 099c B7F8A236 		ldrh	r3, [r7, #1698]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 300


 13399 09a0 013B     		subs	r3, r3, #1
 13400 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13401              	.L528:
1798:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13402              		.loc 1 1798 0 is_stmt 0 discriminator 1
 13403 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 13404 09aa 002B     		cmp	r3, #0
 13405 09ac CFD1     		bne	.L529
1785:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13406              		.loc 1 1785 0 is_stmt 1 discriminator 2
 13407 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 13408 09b2 0133     		adds	r3, r3, #1
 13409 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13410              	.L527:
1785:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13411              		.loc 1 1785 0 is_stmt 0 discriminator 1
 13412 09b8 444B     		ldr	r3, .L553+12
 13413 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13414 09bc 9BB2     		uxth	r3, r3
 13415 09be B7F8A426 		ldrh	r2, [r7, #1700]
 13416 09c2 9A42     		cmp	r2, r3
 13417 09c4 FFF4CAAE 		bcc	.L530
1800:..\src/command_processing.c ****             }  
1801:..\src/command_processing.c ****           
1802:..\src/command_processing.c **** 
1803:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1804:..\src/command_processing.c ****             
1805:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 13418              		.loc 1 1805 0 is_stmt 1
 13419 09c8 404B     		ldr	r3, .L553+12
 13420 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13421 09cc 9BB2     		uxth	r3, r3
 13422 09ce 1A46     		mov	r2, r3	@ movhi
 13423 09d0 9200     		lsls	r2, r2, #2
 13424 09d2 1344     		add	r3, r3, r2
 13425 09d4 1A46     		mov	r2, r3	@ movhi
 13426 09d6 9100     		lsls	r1, r2, #2
 13427 09d8 1A46     		mov	r2, r3	@ movhi
 13428 09da 0B46     		mov	r3, r1	@ movhi
 13429 09dc 1344     		add	r3, r3, r2
 13430 09de 5B00     		lsls	r3, r3, #1
 13431 09e0 9AB2     		uxth	r2, r3
 13432 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13433 09e6 1344     		add	r3, r3, r2
 13434 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1806:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 13435              		.loc 1 1806 0
 13436 09ec B7F89836 		ldrh	r3, [r7, #1688]
 13437 09f0 364A     		ldr	r2, .L553+12
 13438 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13439 09f4 1A44     		add	r2, r2, r3
 13440 09f6 07F18003 		add	r3, r7, #128
 13441 09fa 3549     		ldr	r1, .L553+16
 13442 09fc 1846     		mov	r0, r3
 13443 09fe FFF7FEFF 		bl	sprintf
1807:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 13444              		.loc 1 1807 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 301


 13445 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 13446 0a06 0233     		adds	r3, r3, #2
 13447 0a08 07F58A72 		add	r2, r7, #276
 13448 0a0c 0021     		movs	r1, #0
 13449 0a0e D154     		strb	r1, [r2, r3]
1808:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13450              		.loc 1 1808 0
 13451 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 13452 0a14 0333     		adds	r3, r3, #3
 13453 0a16 07F58A72 		add	r2, r7, #276
 13454 0a1a 0121     		movs	r1, #1
 13455 0a1c D154     		strb	r1, [r2, r3]
1809:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 13456              		.loc 1 1809 0
 13457 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 13458 0a22 0433     		adds	r3, r3, #4
 13459 0a24 284A     		ldr	r2, .L553+8
 13460 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 13461 0a2a 07F58A72 		add	r2, r7, #276
 13462 0a2e D154     		strb	r1, [r2, r3]
1810:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 13463              		.loc 1 1810 0
 13464 0a30 254B     		ldr	r3, .L553+8
 13465 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 13466 0a36 012B     		cmp	r3, #1
 13467 0a38 17D0     		beq	.L532
 13468 0a3a 022B     		cmp	r3, #2
 13469 0a3c 28D0     		beq	.L533
 13470 0a3e 002B     		cmp	r3, #0
 13471 0a40 00D0     		beq	.L534
1811:..\src/command_processing.c ****                 case 0: 
1812:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1813:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1814:..\src/command_processing.c ****                     break;
1815:..\src/command_processing.c ****                 case 1: 
1816:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1817:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1818:..\src/command_processing.c ****                     break;
1819:..\src/command_processing.c ****                 case 2: 
1820:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1821:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1822:..\src/command_processing.c ****                     break;
1823:..\src/command_processing.c ****                 default:
1824:..\src/command_processing.c ****                     break;
 13472              		.loc 1 1824 0
 13473 0a42 38E0     		b	.L535
 13474              	.L534:
1812:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13475              		.loc 1 1812 0
 13476 0a44 07F18003 		add	r3, r7, #128
 13477 0a48 1846     		mov	r0, r3
 13478 0a4a FFF7FEFF 		bl	strlen
 13479 0a4e 0346     		mov	r3, r0
 13480 0a50 1A46     		mov	r2, r3
 13481 0a52 07F18003 		add	r3, r7, #128
 13482 0a56 1344     		add	r3, r3, r2
 13483 0a58 1E4A     		ldr	r2, .L553+20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 302


 13484 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13485 0a5c 1860     		str	r0, [r3]	@ unaligned
 13486 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13487 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1813:..\src/command_processing.c ****                     break;
 13488              		.loc 1 1813 0
 13489 0a62 1A23     		movs	r3, #26
 13490 0a64 87F89D36 		strb	r3, [r7, #1693]
1814:..\src/command_processing.c ****                 case 1: 
 13491              		.loc 1 1814 0
 13492 0a68 25E0     		b	.L535
 13493              	.L532:
1816:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 13494              		.loc 1 1816 0
 13495 0a6a 07F18003 		add	r3, r7, #128
 13496 0a6e 1846     		mov	r0, r3
 13497 0a70 FFF7FEFF 		bl	strlen
 13498 0a74 0346     		mov	r3, r0
 13499 0a76 1A46     		mov	r2, r3
 13500 0a78 07F18003 		add	r3, r7, #128
 13501 0a7c 1344     		add	r3, r3, r2
 13502 0a7e 164A     		ldr	r2, .L553+24
 13503 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13504 0a82 1860     		str	r0, [r3]	@ unaligned
 13505 0a84 1279     		ldrb	r2, [r2, #4]
 13506 0a86 1A71     		strb	r2, [r3, #4]
1817:..\src/command_processing.c ****                     break;
 13507              		.loc 1 1817 0
 13508 0a88 1923     		movs	r3, #25
 13509 0a8a 87F89D36 		strb	r3, [r7, #1693]
1818:..\src/command_processing.c ****                 case 2: 
 13510              		.loc 1 1818 0
 13511 0a8e 12E0     		b	.L535
 13512              	.L533:
1820:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13513              		.loc 1 1820 0
 13514 0a90 07F18003 		add	r3, r7, #128
 13515 0a94 1846     		mov	r0, r3
 13516 0a96 FFF7FEFF 		bl	strlen
 13517 0a9a 0346     		mov	r3, r0
 13518 0a9c 1A46     		mov	r2, r3
 13519 0a9e 07F18003 		add	r3, r7, #128
 13520 0aa2 1344     		add	r3, r3, r2
 13521 0aa4 0D4A     		ldr	r2, .L553+28
 13522 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13523 0aa8 1860     		str	r0, [r3]	@ unaligned
 13524 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13525 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1821:..\src/command_processing.c ****                     break;
 13526              		.loc 1 1821 0
 13527 0aae 1A23     		movs	r3, #26
 13528 0ab0 87F89D36 		strb	r3, [r7, #1693]
1822:..\src/command_processing.c ****                 default:
 13529              		.loc 1 1822 0
 13530 0ab4 00BF     		nop
 13531              	.L535:
1825:..\src/command_processing.c ****             }            
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 303


1826:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13532              		.loc 1 1826 0
 13533 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13534 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13535 0abe 28E0     		b	.L536
 13536              	.L554:
 13537              		.align	2
 13538              	.L553:
 13539 0ac0 00000000 		.word	IMU_connected
 13540 0ac4 DC100000 		.word	.LC147
 13541 0ac8 00000000 		.word	c_mem
 13542 0acc 00000000 		.word	N_IMU_Connected
 13543 0ad0 F8100000 		.word	.LC148
 13544 0ad4 10110000 		.word	.LC149
 13545 0ad8 18110000 		.word	.LC150
 13546 0adc 20110000 		.word	.LC151
 13547              	.L537:
1827:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13548              		.loc 1 1827 0 discriminator 3
 13549 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13550 0ae4 5A1D     		adds	r2, r3, #5
 13551 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13552 0aea 1A44     		add	r2, r2, r3
 13553 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13554 0af0 D31A     		subs	r3, r2, r3
 13555 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13556 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13557 0afa 8A1A     		subs	r2, r1, r2
 13558 0afc 07F18001 		add	r1, r7, #128
 13559 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13560 0b02 07F58A72 		add	r2, r7, #276
 13561 0b06 D154     		strb	r1, [r2, r3]
1826:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13562              		.loc 1 1826 0 discriminator 3
 13563 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13564 0b0c 013B     		subs	r3, r3, #1
 13565 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13566              	.L536:
1826:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13567              		.loc 1 1826 0 is_stmt 0 discriminator 1
 13568 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13569 0b16 002B     		cmp	r3, #0
 13570 0b18 E2D1     		bne	.L537
1828:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1829:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13571              		.loc 1 1829 0 is_stmt 1
 13572 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13573 0b1e 5A1D     		adds	r2, r3, #5
 13574 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13575 0b24 1344     		add	r3, r3, r2
 13576 0b26 07F58A72 		add	r2, r7, #276
 13577 0b2a 0121     		movs	r1, #1
 13578 0b2c D154     		strb	r1, [r2, r3]
1830:..\src/command_processing.c ****                   
1831:..\src/command_processing.c ****             
1832:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1833:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 304


 13579              		.loc 1 1833 0
 13580 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13581 0b32 3233     		adds	r3, r3, #50
 13582 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1834:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13583              		.loc 1 1834 0
 13584 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13585 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13586 0b40 1AE0     		b	.L538
 13587              	.L539:
1835:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13588              		.loc 1 1835 0 discriminator 3
 13589 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13590 0b46 0233     		adds	r3, r3, #2
 13591 0b48 9BB2     		uxth	r3, r3
 13592 0b4a 1A46     		mov	r2, r3
 13593 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13594 0b50 1A44     		add	r2, r2, r3
 13595 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13596 0b56 D31A     		subs	r3, r2, r3
 13597 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13598 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13599 0b60 8A1A     		subs	r2, r1, r2
 13600 0b62 07F10801 		add	r1, r7, #8
 13601 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13602 0b68 07F58A72 		add	r2, r7, #276
 13603 0b6c D154     		strb	r1, [r2, r3]
1834:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13604              		.loc 1 1834 0 discriminator 3
 13605 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 13606 0b72 013B     		subs	r3, r3, #1
 13607 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13608              	.L538:
1834:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13609              		.loc 1 1834 0 is_stmt 0 discriminator 1
 13610 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13611 0b7c 002B     		cmp	r3, #0
 13612 0b7e E0D1     		bne	.L539
1836:..\src/command_processing.c **** 
1837:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 13613              		.loc 1 1837 0 is_stmt 1
 13614 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13615 0b84 5C1E     		subs	r4, r3, #1
 13616 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 13617 0b8a DBB2     		uxtb	r3, r3
 13618 0b8c 013B     		subs	r3, r3, #1
 13619 0b8e DAB2     		uxtb	r2, r3
 13620 0b90 07F58A73 		add	r3, r7, #276
 13621 0b94 1146     		mov	r1, r2
 13622 0b96 1846     		mov	r0, r3
 13623 0b98 FFF7FEFF 		bl	LCRChecksum
 13624 0b9c 0346     		mov	r3, r0
 13625 0b9e 1A46     		mov	r2, r3
 13626 0ba0 07F58A73 		add	r3, r7, #276
 13627 0ba4 1A55     		strb	r2, [r3, r4]
1838:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13628              		.loc 1 1838 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 305


 13629 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13630 0baa 07F58A73 		add	r3, r7, #276
 13631 0bae 1146     		mov	r1, r2
 13632 0bb0 1846     		mov	r0, r3
 13633 0bb2 FFF7FEFF 		bl	commWrite
1839:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13634              		.loc 1 1839 0
 13635 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1840:..\src/command_processing.c ****         break;
 13636              		.loc 1 1840 0
 13637 0bba 09E1     		b	.L540
 13638              	.L547:
1841:..\src/command_processing.c **** 
1842:..\src/command_processing.c **** //=========================================================     other_params
1843:..\src/command_processing.c ****         default: 
1844:..\src/command_processing.c ****             
1845:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13639              		.loc 1 1845 0
 13640 0bbc BB1D     		adds	r3, r7, #6
 13641 0bbe 1A88     		ldrh	r2, [r3]
 13642 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13643 0bc4 013B     		subs	r3, r3, #1
 13644 0bc6 9A42     		cmp	r2, r3
 13645 0bc8 C0F20181 		blt	.L548
1846:..\src/command_processing.c ****                 break;
1847:..\src/command_processing.c ****             
1848:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13646              		.loc 1 1848 0
 13647 0bcc BB1D     		adds	r3, r7, #6
 13648 0bce 1A88     		ldrh	r2, [r3]
 13649 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13650 0bd4 8149     		ldr	r1, .L555
 13651 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13652 0bd8 0B44     		add	r3, r3, r1
 13653 0bda 9A42     		cmp	r2, r3
 13654 0bdc 05D1     		bne	.L542
1849:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13655              		.loc 1 1849 0
 13656 0bde 804B     		ldr	r3, .L555+4
 13657 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13658 0be2 804B     		ldr	r3, .L555+8
 13659 0be4 83F80122 		strb	r2, [r3, #513]
1850:..\src/command_processing.c ****                 break;
 13660              		.loc 1 1850 0
 13661 0be8 F2E0     		b	.L540
 13662              	.L542:
1851:..\src/command_processing.c ****             }
1852:..\src/command_processing.c ****             
1853:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13663              		.loc 1 1853 0
 13664 0bea BB1D     		adds	r3, r7, #6
 13665 0bec 1A88     		ldrh	r2, [r3]
 13666 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13667 0bf2 013B     		subs	r3, r3, #1
 13668 0bf4 9A42     		cmp	r2, r3
 13669 0bf6 05D1     		bne	.L543
1854:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 306


 13670              		.loc 1 1854 0
 13671 0bf8 794B     		ldr	r3, .L555+4
 13672 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13673 0bfc 794B     		ldr	r3, .L555+8
 13674 0bfe 83F8A020 		strb	r2, [r3, #160]
1855:..\src/command_processing.c ****             }
1856:..\src/command_processing.c ****             else {
1857:..\src/command_processing.c ****             
1858:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1859:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1860:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1861:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1862:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1863:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1864:..\src/command_processing.c ****                 
1865:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1866:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1867:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1868:..\src/command_processing.c ****                 {
1869:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1870:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1871:..\src/command_processing.c ****                 }
1872:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1873:..\src/command_processing.c ****             
1874:..\src/command_processing.c ****             }
1875:..\src/command_processing.c ****             
1876:..\src/command_processing.c ****         break;
 13675              		.loc 1 1876 0
 13676 0c02 E5E0     		b	.L540
 13677              	.L543:
1859:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13678              		.loc 1 1859 0
 13679 0c04 BB1D     		adds	r3, r7, #6
 13680 0c06 1A88     		ldrh	r2, [r3]
 13681 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13682 0c0c D31A     		subs	r3, r2, r3
 13683 0c0e 764A     		ldr	r2, .L555+12
 13684 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13685 0c12 1946     		mov	r1, r3
 13686 0c14 724B     		ldr	r3, .L555+4
 13687 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13688 0c18 724A     		ldr	r2, .L555+8
 13689 0c1a 0B46     		mov	r3, r1
 13690 0c1c 9B00     		lsls	r3, r3, #2
 13691 0c1e 0B44     		add	r3, r3, r1
 13692 0c20 1344     		add	r3, r3, r2
 13693 0c22 03F20223 		addw	r3, r3, #514
 13694 0c26 0246     		mov	r2, r0
 13695 0c28 1A70     		strb	r2, [r3]
1860:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13696              		.loc 1 1860 0
 13697 0c2a BB1D     		adds	r3, r7, #6
 13698 0c2c 1A88     		ldrh	r2, [r3]
 13699 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 13700 0c32 D31A     		subs	r3, r2, r3
 13701 0c34 6C4A     		ldr	r2, .L555+12
 13702 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 307


 13703 0c38 1946     		mov	r1, r3
 13704 0c3a 694B     		ldr	r3, .L555+4
 13705 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 13706 0c3e 694A     		ldr	r2, .L555+8
 13707 0c40 0B46     		mov	r3, r1
 13708 0c42 9B00     		lsls	r3, r3, #2
 13709 0c44 0B44     		add	r3, r3, r1
 13710 0c46 1344     		add	r3, r3, r2
 13711 0c48 03F20323 		addw	r3, r3, #515
 13712 0c4c 0246     		mov	r2, r0
 13713 0c4e 1A70     		strb	r2, [r3]
1861:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13714              		.loc 1 1861 0
 13715 0c50 BB1D     		adds	r3, r7, #6
 13716 0c52 1A88     		ldrh	r2, [r3]
 13717 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13718 0c58 D31A     		subs	r3, r2, r3
 13719 0c5a 634A     		ldr	r2, .L555+12
 13720 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13721 0c5e 1946     		mov	r1, r3
 13722 0c60 5F4B     		ldr	r3, .L555+4
 13723 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13724 0c64 5F4A     		ldr	r2, .L555+8
 13725 0c66 0B46     		mov	r3, r1
 13726 0c68 9B00     		lsls	r3, r3, #2
 13727 0c6a 0B44     		add	r3, r3, r1
 13728 0c6c 1344     		add	r3, r3, r2
 13729 0c6e 03F50173 		add	r3, r3, #516
 13730 0c72 0246     		mov	r2, r0
 13731 0c74 1A70     		strb	r2, [r3]
1862:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13732              		.loc 1 1862 0
 13733 0c76 BB1D     		adds	r3, r7, #6
 13734 0c78 1A88     		ldrh	r2, [r3]
 13735 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13736 0c7e D31A     		subs	r3, r2, r3
 13737 0c80 594A     		ldr	r2, .L555+12
 13738 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13739 0c84 1946     		mov	r1, r3
 13740 0c86 564B     		ldr	r3, .L555+4
 13741 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13742 0c8a 564A     		ldr	r2, .L555+8
 13743 0c8c 0B46     		mov	r3, r1
 13744 0c8e 9B00     		lsls	r3, r3, #2
 13745 0c90 0B44     		add	r3, r3, r1
 13746 0c92 1344     		add	r3, r3, r2
 13747 0c94 03F20523 		addw	r3, r3, #517
 13748 0c98 0246     		mov	r2, r0
 13749 0c9a 1A70     		strb	r2, [r3]
1863:..\src/command_processing.c ****                 
 13750              		.loc 1 1863 0
 13751 0c9c BB1D     		adds	r3, r7, #6
 13752 0c9e 1A88     		ldrh	r2, [r3]
 13753 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 13754 0ca4 D31A     		subs	r3, r2, r3
 13755 0ca6 504A     		ldr	r2, .L555+12
 13756 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 308


 13757 0caa 1946     		mov	r1, r3
 13758 0cac 4C4B     		ldr	r3, .L555+4
 13759 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 13760 0cb0 4C4A     		ldr	r2, .L555+8
 13761 0cb2 0B46     		mov	r3, r1
 13762 0cb4 9B00     		lsls	r3, r3, #2
 13763 0cb6 0B44     		add	r3, r3, r1
 13764 0cb8 1344     		add	r3, r3, r2
 13765 0cba 03F20623 		addw	r3, r3, #518
 13766 0cbe 0246     		mov	r2, r0
 13767 0cc0 1A70     		strb	r2, [r3]
1866:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13768              		.loc 1 1866 0
 13769 0cc2 4A4B     		ldr	r3, .L555+16
 13770 0cc4 0122     		movs	r2, #1
 13771 0cc6 1A60     		str	r2, [r3]
1867:..\src/command_processing.c ****                 {
 13772              		.loc 1 1867 0
 13773 0cc8 0023     		movs	r3, #0
 13774 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13775 0cce 71E0     		b	.L545
 13776              	.L546:
1869:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13777              		.loc 1 1869 0 discriminator 3
 13778 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13779 0cd4 444A     		ldr	r2, .L555+12
 13780 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13781 0cd8 1C46     		mov	r4, r3
 13782 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13783 0cde 424A     		ldr	r2, .L555+12
 13784 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13785 0ce2 1946     		mov	r1, r3
 13786 0ce4 3F4A     		ldr	r2, .L555+8
 13787 0ce6 0B46     		mov	r3, r1
 13788 0ce8 9B00     		lsls	r3, r3, #2
 13789 0cea 0B44     		add	r3, r3, r1
 13790 0cec 1344     		add	r3, r3, r2
 13791 0cee 03F20223 		addw	r3, r3, #514
 13792 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13793 0cf4 1A46     		mov	r2, r3
 13794 0cf6 1346     		mov	r3, r2
 13795 0cf8 5B00     		lsls	r3, r3, #1
 13796 0cfa 1344     		add	r3, r3, r2
 13797 0cfc 5B00     		lsls	r3, r3, #1
 13798 0cfe 5A1C     		adds	r2, r3, #1
 13799 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13800 0d04 3849     		ldr	r1, .L555+12
 13801 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13802 0d08 1846     		mov	r0, r3
 13803 0d0a 3649     		ldr	r1, .L555+8
 13804 0d0c 0346     		mov	r3, r0
 13805 0d0e 9B00     		lsls	r3, r3, #2
 13806 0d10 0344     		add	r3, r3, r0
 13807 0d12 0B44     		add	r3, r3, r1
 13808 0d14 03F20323 		addw	r3, r3, #515
 13809 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13810 0d1a 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 309


 13811 0d1c 0B46     		mov	r3, r1
 13812 0d1e 5B00     		lsls	r3, r3, #1
 13813 0d20 0B44     		add	r3, r3, r1
 13814 0d22 5B00     		lsls	r3, r3, #1
 13815 0d24 1A44     		add	r2, r2, r3
 13816 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13817 0d2a 2F49     		ldr	r1, .L555+12
 13818 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13819 0d2e 1846     		mov	r0, r3
 13820 0d30 2C49     		ldr	r1, .L555+8
 13821 0d32 0346     		mov	r3, r0
 13822 0d34 9B00     		lsls	r3, r3, #2
 13823 0d36 0344     		add	r3, r3, r0
 13824 0d38 0B44     		add	r3, r3, r1
 13825 0d3a 03F50173 		add	r3, r3, #516
 13826 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13827 0d40 1946     		mov	r1, r3
 13828 0d42 0B46     		mov	r3, r1
 13829 0d44 5B00     		lsls	r3, r3, #1
 13830 0d46 0B44     		add	r3, r3, r1
 13831 0d48 5B00     		lsls	r3, r3, #1
 13832 0d4a 1A44     		add	r2, r2, r3
 13833 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13834 0d50 2549     		ldr	r1, .L555+12
 13835 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13836 0d54 1846     		mov	r0, r3
 13837 0d56 2349     		ldr	r1, .L555+8
 13838 0d58 0346     		mov	r3, r0
 13839 0d5a 9B00     		lsls	r3, r3, #2
 13840 0d5c 0344     		add	r3, r3, r0
 13841 0d5e 0B44     		add	r3, r3, r1
 13842 0d60 03F20523 		addw	r3, r3, #517
 13843 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13844 0d66 1B01     		lsls	r3, r3, #4
 13845 0d68 1A44     		add	r2, r2, r3
 13846 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13847 0d6e 1E49     		ldr	r1, .L555+12
 13848 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13849 0d72 1846     		mov	r0, r3
 13850 0d74 1B49     		ldr	r1, .L555+8
 13851 0d76 0346     		mov	r3, r0
 13852 0d78 9B00     		lsls	r3, r3, #2
 13853 0d7a 0344     		add	r3, r3, r0
 13854 0d7c 0B44     		add	r3, r3, r1
 13855 0d7e 03F20623 		addw	r3, r3, #518
 13856 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13857 0d84 5B00     		lsls	r3, r3, #1
 13858 0d86 1344     		add	r3, r3, r2
 13859 0d88 0133     		adds	r3, r3, #1
 13860 0d8a 194A     		ldr	r2, .L555+20
 13861 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1870:..\src/command_processing.c ****                 }
 13862              		.loc 1 1870 0 discriminator 3
 13863 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 13864 0d94 144A     		ldr	r2, .L555+12
 13865 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13866 0d98 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 310


 13867 0d9a 154B     		ldr	r3, .L555+20
 13868 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13869 0da0 124B     		ldr	r3, .L555+16
 13870 0da2 1B68     		ldr	r3, [r3]
 13871 0da4 1344     		add	r3, r3, r2
 13872 0da6 114A     		ldr	r2, .L555+16
 13873 0da8 1360     		str	r3, [r2]
1867:..\src/command_processing.c ****                 {
 13874              		.loc 1 1867 0 discriminator 3
 13875 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13876 0dae 0133     		adds	r3, r3, #1
 13877 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13878              	.L545:
1867:..\src/command_processing.c ****                 {
 13879              		.loc 1 1867 0 is_stmt 0 discriminator 1
 13880 0db4 094B     		ldr	r3, .L555
 13881 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13882 0db8 9BB2     		uxth	r3, r3
 13883 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13884 0dbe 9A42     		cmp	r2, r3
 13885 0dc0 86D3     		bcc	.L546
1872:..\src/command_processing.c ****             
 13886              		.loc 1 1872 0 is_stmt 1
 13887 0dc2 0A4B     		ldr	r3, .L555+16
 13888 0dc4 1B68     		ldr	r3, [r3]
 13889 0dc6 0133     		adds	r3, r3, #1
 13890 0dc8 084A     		ldr	r2, .L555+16
 13891 0dca 1360     		str	r3, [r2]
 13892              		.loc 1 1876 0
 13893 0dcc 00E0     		b	.L540
 13894              	.L548:
1846:..\src/command_processing.c ****             
 13895              		.loc 1 1846 0
 13896 0dce 00BF     		nop
 13897              	.L540:
1877:..\src/command_processing.c ****     }
1878:..\src/command_processing.c **** }
 13898              		.loc 1 1878 0 discriminator 1
 13899 0dd0 00BF     		nop
 13900 0dd2 07F5D567 		add	r7, r7, #1704
 13901              		.cfi_def_cfa_offset 16
 13902 0dd6 BD46     		mov	sp, r7
 13903              		.cfi_def_cfa_register 13
 13904              		@ sp needed
 13905 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13906              	.L556:
 13907 0dda 00BF     		.align	2
 13908              	.L555:
 13909 0ddc 00000000 		.word	N_IMU_Connected
 13910 0de0 00000000 		.word	g_rx
 13911 0de4 00000000 		.word	g_mem
 13912 0de8 00000000 		.word	IMU_connected
 13913 0dec 00000000 		.word	imus_data_size
 13914 0df0 00000000 		.word	single_imu_size
 13915              		.cfi_endproc
 13916              	.LFE70:
 13917              		.size	get_IMU_param_list, .-get_IMU_param_list
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 311


 13918              		.section	.text.setZeros,"ax",%progbits
 13919              		.align	2
 13920              		.global	setZeros
 13921              		.thumb
 13922              		.thumb_func
 13923              		.type	setZeros, %function
 13924              	setZeros:
 13925              	.LFB71:
1879:..\src/command_processing.c **** 
1880:..\src/command_processing.c **** //==============================================================================
1881:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1882:..\src/command_processing.c **** //==============================================================================
1883:..\src/command_processing.c **** 
1884:..\src/command_processing.c **** void setZeros()
1885:..\src/command_processing.c **** {
 13926              		.loc 1 1885 0
 13927              		.cfi_startproc
 13928              		@ args = 0, pretend = 0, frame = 8
 13929              		@ frame_needed = 1, uses_anonymous_args = 0
 13930 0000 B0B5     		push	{r4, r5, r7, lr}
 13931              		.cfi_def_cfa_offset 16
 13932              		.cfi_offset 4, -16
 13933              		.cfi_offset 5, -12
 13934              		.cfi_offset 7, -8
 13935              		.cfi_offset 14, -4
 13936 0002 82B0     		sub	sp, sp, #8
 13937              		.cfi_def_cfa_offset 24
 13938 0004 00AF     		add	r7, sp, #0
 13939              		.cfi_def_cfa_register 7
1886:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1887:..\src/command_processing.c ****     
1888:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13940              		.loc 1 1888 0
 13941 0006 0023     		movs	r3, #0
 13942 0008 BB71     		strb	r3, [r7, #6]
 13943 000a 2FE0     		b	.L558
 13944              	.L561:
1889:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13945              		.loc 1 1889 0
 13946 000c 0023     		movs	r3, #0
 13947 000e FB71     		strb	r3, [r7, #7]
 13948 0010 22E0     		b	.L559
 13949              	.L560:
1890:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = (int32)(data_encoder_raw[j][i]);
 13950              		.loc 1 1890 0 discriminator 3
 13951 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13952 0014 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 13953 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 13954 0018 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 13955 001a 194D     		ldr	r5, .L562
 13956 001c 0B46     		mov	r3, r1
 13957 001e 9B00     		lsls	r3, r3, #2
 13958 0020 0B44     		add	r3, r3, r1
 13959 0022 2344     		add	r3, r3, r4
 13960 0024 55F82330 		ldr	r3, [r5, r3, lsl #2]
 13961 0028 1C46     		mov	r4, r3
 13962 002a 1649     		ldr	r1, .L562+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 312


 13963 002c 1346     		mov	r3, r2
 13964 002e 5B00     		lsls	r3, r3, #1
 13965 0030 1344     		add	r3, r3, r2
 13966 0032 9B00     		lsls	r3, r3, #2
 13967 0034 0344     		add	r3, r3, r0
 13968 0036 6633     		adds	r3, r3, #102
 13969 0038 41F82340 		str	r4, [r1, r3, lsl #2]
1891:..\src/command_processing.c ****             g_meas[j].rot[i] = (int8)0;
 13970              		.loc 1 1891 0 discriminator 3
 13971 003c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13972 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13973 0040 1149     		ldr	r1, .L562+8
 13974 0042 3420     		movs	r0, #52
 13975 0044 00FB02F2 		mul	r2, r0, r2
 13976 0048 0A44     		add	r2, r2, r1
 13977 004a 1344     		add	r3, r3, r2
 13978 004c 1833     		adds	r3, r3, #24
 13979 004e 0022     		movs	r2, #0
 13980 0050 1A70     		strb	r2, [r3]
1889:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13981              		.loc 1 1889 0 discriminator 3
 13982 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13983 0054 0133     		adds	r3, r3, #1
 13984 0056 FB71     		strb	r3, [r7, #7]
 13985              	.L559:
1889:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13986              		.loc 1 1889 0 is_stmt 0 discriminator 1
 13987 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13988 005a 022B     		cmp	r3, #2
 13989 005c D9D9     		bls	.L560
1892:..\src/command_processing.c ****         }
1893:..\src/command_processing.c ****         reset_last_value_flag[j] = 1;
 13990              		.loc 1 1893 0 is_stmt 1 discriminator 2
 13991 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13992 0060 0A4A     		ldr	r2, .L562+12
 13993 0062 0121     		movs	r1, #1
 13994 0064 D154     		strb	r1, [r2, r3]
1888:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13995              		.loc 1 1888 0 discriminator 2
 13996 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13997 0068 0133     		adds	r3, r3, #1
 13998 006a BB71     		strb	r3, [r7, #6]
 13999              	.L558:
1888:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 14000              		.loc 1 1888 0 is_stmt 0 discriminator 1
 14001 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 14002 006e 012B     		cmp	r3, #1
 14003 0070 CCD9     		bls	.L561
1894:..\src/command_processing.c ****     }
1895:..\src/command_processing.c **** 
1896:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 14004              		.loc 1 1896 0 is_stmt 1
 14005 0072 0120     		movs	r0, #1
 14006 0074 FFF7FEFF 		bl	sendAcknowledgment
1897:..\src/command_processing.c **** }
 14007              		.loc 1 1897 0
 14008 0078 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 313


 14009 007a 0837     		adds	r7, r7, #8
 14010              		.cfi_def_cfa_offset 16
 14011 007c BD46     		mov	sp, r7
 14012              		.cfi_def_cfa_register 13
 14013              		@ sp needed
 14014 007e B0BD     		pop	{r4, r5, r7, pc}
 14015              	.L563:
 14016              		.align	2
 14017              	.L562:
 14018 0080 00000000 		.word	data_encoder_raw
 14019 0084 00000000 		.word	g_mem
 14020 0088 00000000 		.word	g_meas
 14021 008c 00000000 		.word	reset_last_value_flag
 14022              		.cfi_endproc
 14023              	.LFE71:
 14024              		.size	setZeros, .-setZeros
 14025              		.section	.rodata
 14026              		.align	2
 14027              	.LC152:
 14028 1158 0D0A00   		.ascii	"\015\012\000"
 14029 115b 00       		.align	2
 14030              	.LC153:
 14031 115c 4669726D 		.ascii	"Firmware version: \000"
 14031      77617265 
 14031      20766572 
 14031      73696F6E 
 14031      3A2000
 14032 116f 00       		.align	2
 14033              	.LC154:
 14034 1170 4669726D 		.ascii	"Firmware SH reversibile per aptica wish + vibes (PS"
 14034      77617265 
 14034      20534820 
 14034      72657665 
 14034      72736962 
 14035 11a3 6F433529 		.ascii	"oC5)\000"
 14035      00
 14036              		.align	2
 14037              	.LC155:
 14038 11a8 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 14038      0A00
 14039 11ae 0000     		.align	2
 14040              	.LC156:
 14041 11b0 44455649 		.ascii	"DEVICE INFO\015\012\000"
 14041      43452049 
 14041      4E464F0D 
 14041      0A00
 14042 11be 0000     		.align	2
 14043              	.LC157:
 14044 11c0 49443A20 		.ascii	"ID: %d\015\012\000"
 14044      25640D0A 
 14044      00
 14045 11c9 000000   		.align	2
 14046              	.LC158:
 14047 11cc 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 14047      63653A20 
 14047      534F4654 
 14047      48414E44 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 314


 14047      2050524F 
 14048 11e3 00       		.align	2
 14049              	.LC159:
 14050 11e4 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 14050      63653A20 
 14050      47454E45 
 14050      52494320 
 14050      32204D4F 
 14051 11ff 00       		.align	2
 14052              	.LC160:
 14053 1200 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 14053      63653A20 
 14053      41495220 
 14053      4348414D 
 14053      42455253 
 14054 1227 00       		.align	2
 14055              	.LC161:
 14056 1228 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 14056      63653A20 
 14056      4F54544F 
 14056      424F434B 
 14056      20367620 
 14057 1252 0000     		.align	2
 14058              	.LC162:
 14059 1254 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 14059      63653A20 
 14059      534F4654 
 14059      48414E44 
 14059      2032204D 
 14060              		.align	2
 14061              	.LC163:
 14062 1270 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 14062      20736964 
 14062      653A2052 
 14062      49474854 
 14062      0D0A00
 14063 1283 00       		.align	2
 14064              	.LC164:
 14065 1284 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 14065      20736964 
 14065      653A204C 
 14065      4546540D 
 14065      0A00
 14066 1296 0000     		.align	2
 14067              	.LC165:
 14068 1298 55736572 		.ascii	"User: MARIA\015\012\000"
 14068      3A204D41 
 14068      5249410D 
 14068      0A00
 14069 12a6 0000     		.align	2
 14070              	.LC166:
 14071 12a8 55736572 		.ascii	"User: R01\015\012\000"
 14071      3A205230 
 14071      310D0A00 
 14072              		.align	2
 14073              	.LC167:
 14074 12b4 55736572 		.ascii	"User: GENERIC USER\015\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 315


 14074      3A204745 
 14074      4E455249 
 14074      43205553 
 14074      45520D0A 
 14075 12c9 000000   		.align	2
 14076              	.LC168:
 14077 12cc 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 14077      52202564 
 14077      20494E46 
 14077      4F0D0A00 
 14078              		.align	2
 14079              	.LC169:
 14080 12dc 4D6F746F 		.ascii	"Motor reference\000"
 14080      72207265 
 14080      66657265 
 14080      6E636500 
 14081              		.align	2
 14082              	.LC170:
 14083 12ec 202D2043 		.ascii	" - Currents: \000"
 14083      75727265 
 14083      6E74733A 
 14083      2000
 14084 12fa 0000     		.align	2
 14085              	.LC171:
 14086 12fc 202D2050 		.ascii	" - Pwm: \000"
 14086      776D3A20 
 14086      00
 14087 1305 000000   		.align	2
 14088              	.LC172:
 14089 1308 202D2050 		.ascii	" - Position: \000"
 14089      6F736974 
 14089      696F6E3A 
 14089      2000
 14090 1316 0000     		.align	2
 14091              	.LC173:
 14092 1318 25642000 		.ascii	"%d \000"
 14093              		.align	2
 14094              	.LC174:
 14095 131c 4D6F746F 		.ascii	"Motor enabled: \000"
 14095      7220656E 
 14095      61626C65 
 14095      643A2000 
 14096              		.align	2
 14097              	.LC175:
 14098 132c 5945530D 		.ascii	"YES\015\012\000"
 14098      0A00
 14099 1332 0000     		.align	2
 14100              	.LC176:
 14101 1334 4E4F0D0A 		.ascii	"NO\015\012\000"
 14101      00
 14102 1339 000000   		.align	2
 14103              	.LC177:
 14104 133c 50574D20 		.ascii	"PWM rescaling activation: \000"
 14104      72657363 
 14104      616C696E 
 14104      67206163 
 14104      74697661 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 316


 14105 1357 00       		.align	2
 14106              	.LC178:
 14107 1358 5945530A 		.ascii	"YES\012\000"
 14107      00
 14108 135d 000000   		.align	2
 14109              	.LC179:
 14110 1360 4E4F0A00 		.ascii	"NO\012\000"
 14111              		.align	2
 14112              	.LC180:
 14113 1364 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 14113      4C696D69 
 14113      743A2025 
 14113      640D0A00 
 14114              		.align	2
 14115              	.LC181:
 14116 1374 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 14116      41535552 
 14116      454D454E 
 14116      54532049 
 14116      4E464F0D 
 14117 138a 0000     		.align	2
 14118              	.LC182:
 14119 138c 53656E73 		.ascii	"Sensor value: \000"
 14119      6F722076 
 14119      616C7565 
 14119      3A2000
 14120 139b 00       		.align	2
 14121              	.LC183:
 14122 139c 256400   		.ascii	"%d\000"
 14123 139f 00       		.align	2
 14124              	.LC184:
 14125 13a0 2C2000   		.ascii	", \000"
 14126 13a3 00       		.align	2
 14127              	.LC185:
 14128 13a4 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 14128      7469636B 
 14128      206D6561 
 14128      73757265 
 14128      6D656E74 
 14129 13c2 0000     		.align	2
 14130              	.LC186:
 14131 13c4 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 14131      65727920 
 14131      25642056 
 14131      6F6C7461 
 14131      67652028 
 14132 13e1 000000   		.align	2
 14133              	.LC187:
 14134 13e4 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 14134      20636861 
 14134      72676520 
 14134      706F7765 
 14134      72207465 
 14135 140b 00       		.align	2
 14136              	.LC188:
 14137 140c 43757272 		.ascii	"Current %d (mA): %ld\000"
 14137      656E7420 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 317


 14137      25642028 
 14137      6D41293A 
 14137      20256C64 
 14138 1421 000000   		.align	2
 14139              	.LC189:
 14140 1424 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 14140      20477261 
 14140      73702048 
 14140      6F6C6420 
 14140      43757272 
 14141 1449 000000   		.align	2
 14142              	.LC190:
 14143 144c 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 14143      544F5220 
 14143      25642043 
 14143      4F4E4649 
 14143      47555241 
 14144 1467 00       		.align	2
 14145              	.LC191:
 14146 1468 50494420 		.ascii	"PID Controller: \000"
 14146      436F6E74 
 14146      726F6C6C 
 14146      65723A20 
 14146      00
 14147              		.global	__aeabi_i2d
 14148              		.global	__aeabi_ddiv
 14149 1479 000000   		.align	2
 14150              	.LC192:
 14151 147c 50202D3E 		.ascii	"P -> %f  \000"
 14151      20256620 
 14151      2000
 14152 1486 0000     		.align	2
 14153              	.LC193:
 14154 1488 49202D3E 		.ascii	"I -> %f  \000"
 14154      20256620 
 14154      2000
 14155 1492 0000     		.align	2
 14156              	.LC194:
 14157 1494 44202D3E 		.ascii	"D -> %f\015\012\000"
 14157      2025660D 
 14157      0A00
 14158 149e 0000     		.align	2
 14159              	.LC195:
 14160 14a0 43757272 		.ascii	"Current PID Controller: \000"
 14160      656E7420 
 14160      50494420 
 14160      436F6E74 
 14160      726F6C6C 
 14161 14b9 000000   		.align	2
 14162              	.LC196:
 14163 14bc 53746172 		.ascii	"Startup activation: YES\015\012\000"
 14163      74757020 
 14163      61637469 
 14163      76617469 
 14163      6F6E3A20 
 14164 14d6 0000     		.align	2
 14165              	.LC197:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 318


 14166 14d8 53746172 		.ascii	"Startup activation: NO\015\012\000"
 14166      74757020 
 14166      61637469 
 14166      76617469 
 14166      6F6E3A20 
 14167 14f1 000000   		.align	2
 14168              	.LC198:
 14169 14f4 496E7075 		.ascii	"Input mode: USB\015\012\000"
 14169      74206D6F 
 14169      64653A20 
 14169      5553420D 
 14169      0A00
 14170 1506 0000     		.align	2
 14171              	.LC199:
 14172 1508 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 14172      74206D6F 
 14172      64653A20 
 14172      48616E64 
 14172      6C650D0A 
 14173 151d 000000   		.align	2
 14174              	.LC200:
 14175 1520 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 14175      74206D6F 
 14175      64653A20 
 14175      454D4720 
 14175      70726F70 
 14176 153f 00       		.align	2
 14177              	.LC201:
 14178 1540 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 14178      74206D6F 
 14178      64653A20 
 14178      454D4720 
 14178      696E7465 
 14179 155b 00       		.align	2
 14180              	.LC202:
 14181 155c 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 14181      74206D6F 
 14181      64653A20 
 14181      454D4720 
 14181      46434653 
 14182 1573 00       		.align	2
 14183              	.LC203:
 14184 1574 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 14184      74206D6F 
 14184      64653A20 
 14184      454D4720 
 14184      46434653 
 14185 158f 00       		.align	2
 14186              	.LC204:
 14187 1590 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 14187      74206D6F 
 14187      64653A20 
 14187      4A6F7973 
 14187      7469636B 
 14188 15a7 00       		.align	2
 14189              	.LC205:
 14190 15a8 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 319


 14190      74206D6F 
 14190      64653A20 
 14190      454D4720 
 14190      70726F70 
 14191 15d6 00       		.ascii	"\000"
 14192 15d7 00       		.align	2
 14193              	.LC206:
 14194 15d8 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 14194      726F6C20 
 14194      6D6F6465 
 14194      3A20506F 
 14194      73697469 
 14195 15f1 000000   		.align	2
 14196              	.LC207:
 14197 15f4 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 14197      726F6C20 
 14197      6D6F6465 
 14197      3A205057 
 14197      4D0D0A00 
 14198              		.align	2
 14199              	.LC208:
 14200 1608 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 14200      726F6C20 
 14200      6D6F6465 
 14200      3A204375 
 14200      7272656E 
 14201              		.align	2
 14202              	.LC209:
 14203 1620 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 14203      726F6C20 
 14203      6D6F6465 
 14203      3A20506F 
 14203      73697469 
 14204 1645 000000   		.align	2
 14205              	.LC210:
 14206 1648 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 14206      6C757465 
 14206      20656E63 
 14206      6F646572 
 14206      20706F73 
 14207 1669 000000   		.align	2
 14208              	.LC211:
 14209 166c 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 14209      6C757465 
 14209      20656E63 
 14209      6F646572 
 14209      20706F73 
 14210              		.align	2
 14211              	.LC212:
 14212 168c 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 14212      722D4861 
 14212      6E646C65 
 14212      20526174 
 14212      696F3A20 
 14213 16a5 000000   		.align	2
 14214              	.LC213:
 14215 16a8 456E636F 		.ascii	"Encoder indices used for motor control: \000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 320


 14215      64657220 
 14215      696E6469 
 14215      63657320 
 14215      75736564 
 14216 16d1 000000   		.align	2
 14217              	.LC214:
 14218 16d4 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 14218      74204765 
 14218      61723A20 
 14218      25642074 
 14218      65657468 
 14219 16eb 00       		.align	2
 14220              	.LC215:
 14221 16ec 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 14221      6E642047 
 14221      6561723A 
 14221      20256420 
 14221      74656574 
 14222              		.align	2
 14223              	.LC216:
 14224 1704 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 14224      20696E76 
 14224      61726961 
 14224      6E743A20 
 14224      25640D0A 
 14225 1719 000000   		.align	2
 14226              	.LC217:
 14227 171c 53656E73 		.ascii	"Sensor resolution: \000"
 14227      6F722072 
 14227      65736F6C 
 14227      7574696F 
 14227      6E3A2000 
 14228              		.align	2
 14229              	.LC218:
 14230 1730 4D656173 		.ascii	"Measurement Offset: \000"
 14230      7572656D 
 14230      656E7420 
 14230      4F666673 
 14230      65743A20 
 14231 1745 000000   		.align	2
 14232              	.LC219:
 14233 1748 256C6400 		.ascii	"%ld\000"
 14234              		.align	2
 14235              	.LC220:
 14236 174c 4D656173 		.ascii	"Measurement Multiplier: \000"
 14236      7572656D 
 14236      656E7420 
 14236      4D756C74 
 14236      69706C69 
 14237              		.global	__aeabi_f2d
 14238 1765 000000   		.align	2
 14239              	.LC221:
 14240 1768 256600   		.ascii	"%f\000"
 14241 176b 00       		.align	2
 14242              	.LC222:
 14243 176c 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 14243      656E7420 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 321


 14243      6C6F6F6B 
 14243      75702074 
 14243      61626C65 
 14244 179a 00       		.ascii	"\000"
 14245 179b 00       		.align	2
 14246              	.LC223:
 14247 179c 506F7369 		.ascii	"Position limit active: %d\000"
 14247      74696F6E 
 14247      206C696D 
 14247      69742061 
 14247      63746976 
 14248 17b6 0000     		.align	2
 14249              	.LC224:
 14250 17b8 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 14250      74696F6E 
 14250      206C696D 
 14250      6974206D 
 14250      6F746F72 
 14251 17db 00       		.align	2
 14252              	.LC225:
 14253 17dc 73757020 		.ascii	"sup -> %ld\015\012\000"
 14253      2D3E2025 
 14253      6C640D0A 
 14253      00
 14254 17e9 000000   		.align	2
 14255              	.LC226:
 14256 17ec 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 14256      73746570 
 14256      20706F73 
 14256      20616E64 
 14256      206E6567 
 14257              		.align	2
 14258              	.LC227:
 14259 1808 43757272 		.ascii	"Current limit: %d\015\012\000"
 14259      656E7420 
 14259      6C696D69 
 14259      743A2025 
 14259      640D0A00 
 14260              		.align	2
 14261              	.LC228:
 14262 181c 4D6F746F 		.ascii	"Motor board associated encoder line: %d\015\012\000"
 14262      7220626F 
 14262      61726420 
 14262      6173736F 
 14262      63696174 
 14263 1846 0000     		.align	2
 14264              	.LC229:
 14265 1848 44726976 		.ascii	"Driver type: MC33887 (Standard)\015\012\000"
 14265      65722074 
 14265      7970653A 
 14265      204D4333 
 14265      33383837 
 14266 186a 0000     		.align	2
 14267              	.LC230:
 14268 186c 44726976 		.ascii	"Driver type: VNH5019 (High power)\015\012\000"
 14268      65722074 
 14268      7970653A 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 322


 14268      20564E48 
 14268      35303139 
 14269              		.align	2
 14270              	.LC231:
 14271 1890 44726976 		.ascii	"Driver type: ESC (Brushless)\015\012\000"
 14271      65722074 
 14271      7970653A 
 14271      20455343 
 14271      20284272 
 14272 18af 00       		.align	2
 14273              	.LC232:
 14274 18b0 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 14274      72617465 
 14274      206C696D 
 14274      69746572 
 14274      2076616C 
 14275 18cd 000000   		.align	2
 14276              	.LC233:
 14277 18d0 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 14277      72657665 
 14277      72736962 
 14277      6C65206D 
 14277      6F746F72 
 14278              		.align	2
 14279              	.LC234:
 14280 18ec 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 14280      72657665 
 14280      72736962 
 14280      6C65206D 
 14280      6F746F72 
 14281 1907 00       		.align	2
 14282              	.LC235:
 14283 1908 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 14283      434F4E46 
 14283      49475552 
 14283      4154494F 
 14283      4E0D0A00 
 14284              		.align	2
 14285              	.LC236:
 14286 191c 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 14286      74687265 
 14286      73686F6C 
 14286      6473205B 
 14286      30202D20 
 14287 193e 0000     		.align	2
 14288              	.LC237:
 14289 1940 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 14289      6D617820 
 14289      76616C75 
 14289      6573205B 
 14289      30202D20 
 14290              		.align	2
 14291              	.LC238:
 14292 1964 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 14292      696E7665 
 14292      7273696F 
 14292      6E3A2059 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 323


 14292      45530D0A 
 14293 1979 000000   		.align	2
 14294              	.LC239:
 14295 197c 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 14295      696E7665 
 14295      7273696F 
 14295      6E3A204E 
 14295      4F0D0A00 
 14296              		.align	2
 14297              	.LC240:
 14298 1990 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 14298      62726174 
 14298      696F6E20 
 14298      656E6162 
 14298      6C65643A 
 14299 19ab 00       		.align	2
 14300              	.LC241:
 14301 19ac 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 14301      62726174 
 14301      696F6E20 
 14301      656E6162 
 14301      6C65643A 
 14302 19c6 0000     		.align	2
 14303              	.LC242:
 14304 19c8 454D4720 		.ascii	"EMG max speed: %d %d\000"
 14304      6D617820 
 14304      73706565 
 14304      643A2025 
 14304      64202564 
 14305 19dd 000000   		.align	2
 14306              	.LC243:
 14307 19e0 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 14307      74696F6E 
 14307      616C2041 
 14307      44432073 
 14307      656E736F 
 14308              		.align	2
 14309              	.LC244:
 14310 1a00 41444320 		.ascii	"ADC %d -> %d\000"
 14310      2564202D 
 14310      3E202564 
 14310      00
 14311 1a0d 000000   		.align	2
 14312              	.LC245:
 14313 1a10 454D4720 		.ascii	"EMG input %d -> %d\000"
 14313      696E7075 
 14313      74202564 
 14313      202D3E20 
 14313      256400
 14314 1a23 00       		.align	2
 14315              	.LC246:
 14316 1a24 4A4F5953 		.ascii	"JOYSTICK CONFIGURATION\015\012\000"
 14316      5449434B 
 14316      20434F4E 
 14316      46494755 
 14316      52415449 
 14317 1a3d 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 324


 14318              	.LC247:
 14319 1a40 436C6F73 		.ascii	"Closure speed: %d\000"
 14319      75726520 
 14319      73706565 
 14319      643A2025 
 14319      6400
 14320 1a52 0000     		.align	2
 14321              	.LC248:
 14322 1a54 4A6F7973 		.ascii	"Joystick Threshold: %d\000"
 14322      7469636B 
 14322      20546872 
 14322      6573686F 
 14322      6C643A20 
 14323 1a6b 00       		.align	2
 14324              	.LC249:
 14325 1a6c 4A6F7973 		.ascii	"Joystick Gains - X:%hu  Y:%hu\000"
 14325      7469636B 
 14325      20476169 
 14325      6E73202D 
 14325      20583A25 
 14326 1a8a 0000     		.align	2
 14327              	.LC250:
 14328 1a8c 52657374 		.ascii	"Rest time delay (ms): %d\000"
 14328      2074696D 
 14328      65206465 
 14328      6C617920 
 14328      286D7329 
 14329 1aa5 000000   		.align	2
 14330              	.LC251:
 14331 1aa8 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 14331      2076656C 
 14331      6F636974 
 14331      7920636C 
 14331      6F737572 
 14332 1ace 0000     		.align	2
 14333              	.LC252:
 14334 1ad0 52657374 		.ascii	"Rest position: %d\000"
 14334      20706F73 
 14334      6974696F 
 14334      6E3A2025 
 14334      6400
 14335 1ae2 0000     		.align	2
 14336              	.LC253:
 14337 1ae4 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 14337      436F6E6E 
 14337      65637465 
 14337      643A2025 
 14337      640D0A00 
 14338              		.align	2
 14339              	.LC254:
 14340 1af8 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 14340      20434F4E 
 14340      46494755 
 14340      52415449 
 14340      4F4E0D0A 
 14341 1b0d 000000   		.align	2
 14342              	.LC255:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 325


 14343 1b10 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 14343      2564200D 
 14343      0A094944 
 14343      3A202564 
 14343      0D0A00
 14344 1b23 00       		.align	2
 14345              	.LC256:
 14346 1b24 09416363 		.ascii	"\011Accelerometers: \000"
 14346      656C6572 
 14346      6F6D6574 
 14346      6572733A 
 14346      2000
 14347 1b36 0000     		.align	2
 14348              	.LC257:
 14349 1b38 09477972 		.ascii	"\011Gyroscopes: \000"
 14349      6F73636F 
 14349      7065733A 
 14349      2000
 14350 1b46 0000     		.align	2
 14351              	.LC258:
 14352 1b48 094D6167 		.ascii	"\011Magnetometers: \000"
 14352      6E65746F 
 14352      6D657465 
 14352      72733A20 
 14352      00
 14353 1b59 000000   		.align	2
 14354              	.LC259:
 14355 1b5c 09517561 		.ascii	"\011Quaternion: \000"
 14355      7465726E 
 14355      696F6E3A 
 14355      2000
 14356 1b6a 0000     		.align	2
 14357              	.LC260:
 14358 1b6c 0954656D 		.ascii	"\011Temperature: \000"
 14358      70657261 
 14358      74757265 
 14358      3A2000
 14359 1b7b 00       		.align	2
 14360              	.LC261:
 14361 1b7c 454E434F 		.ascii	"ENCODER CONFIGURATION\015\012\000"
 14361      44455220 
 14361      434F4E46 
 14361      49475552 
 14361      4154494F 
 14362              		.align	2
 14363              	.LC262:
 14364 1b94 456E636F 		.ascii	"Encoder Connected Line %d: %d\000"
 14364      64657220 
 14364      436F6E6E 
 14364      65637465 
 14364      64204C69 
 14365 1bb2 0000     		.align	2
 14366              	.LC263:
 14367 1bb4 4C454654 		.ascii	"LEFT\000"
 14367      00
 14368 1bb9 000000   		.align	2
 14369              	.LC264:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 326


 14370 1bbc 52494748 		.ascii	"RIGHT\000"
 14370      5400
 14371 1bc2 0000     		.align	2
 14372              	.LC265:
 14373 1bc4 205B2573 		.ascii	" [%s HAND main encoder line]\000"
 14373      2048414E 
 14373      44206D61 
 14373      696E2065 
 14373      6E636F64 
 14374 1be1 000000   		.align	2
 14375              	.LC266:
 14376 1be4 52617720 		.ascii	"Raw value [status]:\015\012\000"
 14376      76616C75 
 14376      65205B73 
 14376      74617475 
 14376      735D3A0D 
 14377 1bfa 0000     		.align	2
 14378              	.LC267:
 14379 1bfc 4F4B00   		.ascii	"OK\000"
 14380 1bff 00       		.align	2
 14381              	.LC268:
 14382 1c00 5800     		.ascii	"X\000"
 14383 1c02 0000     		.align	2
 14384              	.LC269:
 14385 1c04 2564095B 		.ascii	"%d\011[%s]\015\012\000"
 14385      25735D0D 
 14385      0A00
 14386 1c0e 0000     		.align	2
 14387              	.LC270:
 14388 1c10 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 14388      20465720 
 14388      6379636C 
 14388      65207469 
 14388      6D653A20 
 14389              		.align	2
 14390              	.LC271:
 14391 1c2c 0D0A0000 		.ascii	"\015\012\000\000"
 14392              		.section	.text.prepare_generic_info,"ax",%progbits
 14393              		.align	2
 14394              		.global	prepare_generic_info
 14395              		.thumb
 14396              		.thumb_func
 14397              		.type	prepare_generic_info, %function
 14398              	prepare_generic_info:
 14399              	.LFB72:
1898:..\src/command_processing.c **** 
1899:..\src/command_processing.c **** //==============================================================================
1900:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1901:..\src/command_processing.c **** //==============================================================================
1902:..\src/command_processing.c **** 
1903:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1904:..\src/command_processing.c **** {
 14400              		.loc 1 1904 0
 14401              		.cfi_startproc
 14402              		@ args = 0, pretend = 0, frame = 152
 14403              		@ frame_needed = 1, uses_anonymous_args = 0
 14404 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 327


 14405              		.cfi_def_cfa_offset 36
 14406              		.cfi_offset 4, -36
 14407              		.cfi_offset 5, -32
 14408              		.cfi_offset 6, -28
 14409              		.cfi_offset 7, -24
 14410              		.cfi_offset 8, -20
 14411              		.cfi_offset 9, -16
 14412              		.cfi_offset 10, -12
 14413              		.cfi_offset 11, -8
 14414              		.cfi_offset 14, -4
 14415 0004 B1B0     		sub	sp, sp, #196
 14416              		.cfi_def_cfa_offset 232
 14417 0006 0AAF     		add	r7, sp, #40
 14418              		.cfi_def_cfa 7, 192
 14419 0008 7861     		str	r0, [r7, #20]
1905:..\src/command_processing.c ****     int i;
1906:..\src/command_processing.c **** 
1907:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 14420              		.loc 1 1907 0
 14421 000a C74B     		ldr	r3, .L688
 14422 000c C7F88830 		str	r3, [r7, #136]
1908:..\src/command_processing.c ****     
1909:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 14423              		.loc 1 1909 0
 14424 0010 C54B     		ldr	r3, .L688
 14425 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14426 0016 FA2B     		cmp	r3, #250
 14427 0018 02F09C80 		beq	.L685
 14428              	.LBB24:
1910:..\src/command_processing.c ****         char str[100];
1911:..\src/command_processing.c ****         strcpy(info_string, "");
 14429              		.loc 1 1911 0
 14430 001c 7B69     		ldr	r3, [r7, #20]
 14431 001e 0022     		movs	r2, #0
 14432 0020 1A70     		strb	r2, [r3]
1912:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14433              		.loc 1 1912 0
 14434 0022 7869     		ldr	r0, [r7, #20]
 14435 0024 FFF7FEFF 		bl	strlen
 14436 0028 0346     		mov	r3, r0
 14437 002a 1A46     		mov	r2, r3
 14438 002c 7B69     		ldr	r3, [r7, #20]
 14439 002e 1344     		add	r3, r3, r2
 14440 0030 BE4A     		ldr	r2, .L688+4
 14441 0032 1188     		ldrh	r1, [r2]	@ unaligned
 14442 0034 9278     		ldrb	r2, [r2, #2]
 14443 0036 1980     		strh	r1, [r3]	@ unaligned
 14444 0038 9A70     		strb	r2, [r3, #2]
1913:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 14445              		.loc 1 1913 0
 14446 003a 7869     		ldr	r0, [r7, #20]
 14447 003c FFF7FEFF 		bl	strlen
 14448 0040 0346     		mov	r3, r0
 14449 0042 1A46     		mov	r2, r3
 14450 0044 7B69     		ldr	r3, [r7, #20]
 14451 0046 1344     		add	r3, r3, r2
 14452 0048 B94A     		ldr	r2, .L688+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 328


 14453 004a 1D46     		mov	r5, r3
 14454 004c 1446     		mov	r4, r2
 14455 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14456 0050 2860     		str	r0, [r5]	@ unaligned
 14457 0052 6960     		str	r1, [r5, #4]	@ unaligned
 14458 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 14459 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 14460 0058 2388     		ldrh	r3, [r4]	@ unaligned
 14461 005a A278     		ldrb	r2, [r4, #2]
 14462 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 14463 005e 1346     		mov	r3, r2
 14464 0060 AB74     		strb	r3, [r5, #18]
1914:..\src/command_processing.c ****         strcat(info_string, VERSION);
 14465              		.loc 1 1914 0
 14466 0062 7869     		ldr	r0, [r7, #20]
 14467 0064 FFF7FEFF 		bl	strlen
 14468 0068 0346     		mov	r3, r0
 14469 006a 1A46     		mov	r2, r3
 14470 006c 7B69     		ldr	r3, [r7, #20]
 14471 006e 1344     		add	r3, r3, r2
 14472 0070 B04A     		ldr	r2, .L688+12
 14473 0072 1446     		mov	r4, r2
 14474 0074 9E46     		mov	lr, r3
 14475 0076 04F1300C 		add	ip, r4, #48
 14476              	.L566:
 14477 007a 7546     		mov	r5, lr
 14478 007c 2646     		mov	r6, r4
 14479 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14480 0080 2860     		str	r0, [r5]	@ unaligned
 14481 0082 6960     		str	r1, [r5, #4]	@ unaligned
 14482 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 14483 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 14484 0088 1034     		adds	r4, r4, #16
 14485 008a 0EF1100E 		add	lr, lr, #16
 14486 008e 6445     		cmp	r4, ip
 14487 0090 F3D1     		bne	.L566
 14488 0092 7246     		mov	r2, lr
 14489 0094 2346     		mov	r3, r4
 14490 0096 03CB     		ldmia	r3!, {r0, r1}
 14491 0098 1060     		str	r0, [r2]	@ unaligned
 14492 009a 5160     		str	r1, [r2, #4]	@ unaligned
1915:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 14493              		.loc 1 1915 0
 14494 009c 7869     		ldr	r0, [r7, #20]
 14495 009e FFF7FEFF 		bl	strlen
 14496 00a2 0346     		mov	r3, r0
 14497 00a4 1A46     		mov	r2, r3
 14498 00a6 7B69     		ldr	r3, [r7, #20]
 14499 00a8 1344     		add	r3, r3, r2
 14500 00aa A34A     		ldr	r2, .L688+16
 14501 00ac 1068     		ldr	r0, [r2]	@ unaligned
 14502 00ae 1860     		str	r0, [r3]	@ unaligned
 14503 00b0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14504 00b2 9A80     		strh	r2, [r3, #4]	@ unaligned
1916:..\src/command_processing.c **** 
1917:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 14505              		.loc 1 1917 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 329


 14506 00b4 7869     		ldr	r0, [r7, #20]
 14507 00b6 FFF7FEFF 		bl	strlen
 14508 00ba 0346     		mov	r3, r0
 14509 00bc 1A46     		mov	r2, r3
 14510 00be 7B69     		ldr	r3, [r7, #20]
 14511 00c0 1344     		add	r3, r3, r2
 14512 00c2 9E4A     		ldr	r2, .L688+20
 14513 00c4 1C46     		mov	r4, r3
 14514 00c6 1346     		mov	r3, r2
 14515 00c8 07CB     		ldmia	r3!, {r0, r1, r2}
 14516 00ca 2060     		str	r0, [r4]	@ unaligned
 14517 00cc 6160     		str	r1, [r4, #4]	@ unaligned
 14518 00ce A260     		str	r2, [r4, #8]	@ unaligned
 14519 00d0 1B88     		ldrh	r3, [r3]	@ unaligned
 14520 00d2 A381     		strh	r3, [r4, #12]	@ unaligned
1918:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 14521              		.loc 1 1918 0
 14522 00d4 D7F88830 		ldr	r3, [r7, #136]
 14523 00d8 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14524 00dc 1A46     		mov	r2, r3
 14525 00de 07F11803 		add	r3, r7, #24
 14526 00e2 9749     		ldr	r1, .L688+24
 14527 00e4 1846     		mov	r0, r3
 14528 00e6 FFF7FEFF 		bl	sprintf
1919:..\src/command_processing.c ****         strcat(info_string, str);
 14529              		.loc 1 1919 0
 14530 00ea 07F11803 		add	r3, r7, #24
 14531 00ee 1946     		mov	r1, r3
 14532 00f0 7869     		ldr	r0, [r7, #20]
 14533 00f2 FFF7FEFF 		bl	strcat
1920:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 14534              		.loc 1 1920 0
 14535 00f6 D7F88830 		ldr	r3, [r7, #136]
 14536 00fa 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14537 00fe 042B     		cmp	r3, #4
 14538 0100 00F29280 		bhi	.L686
 14539 0104 01A2     		adr	r2, .L569
 14540 0106 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14541 010a 00BF     		.p2align 2
 14542              	.L569:
 14543 010c 21010000 		.word	.L568+1
 14544 0110 4F010000 		.word	.L570+1
 14545 0114 7F010000 		.word	.L571+1
 14546 0118 C1010000 		.word	.L572+1
 14547 011c 01020000 		.word	.L573+1
 14548              		.p2align 1
 14549              	.L568:
1921:..\src/command_processing.c ****             case SOFTHAND_PRO:
1922:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14550              		.loc 1 1922 0
 14551 0120 7869     		ldr	r0, [r7, #20]
 14552 0122 FFF7FEFF 		bl	strlen
 14553 0126 0346     		mov	r3, r0
 14554 0128 1A46     		mov	r2, r3
 14555 012a 7B69     		ldr	r3, [r7, #20]
 14556 012c 1344     		add	r3, r3, r2
 14557 012e 854A     		ldr	r2, .L688+28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 330


 14558 0130 1C46     		mov	r4, r3
 14559 0132 1546     		mov	r5, r2
 14560 0134 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14561 0136 2060     		str	r0, [r4]	@ unaligned
 14562 0138 6160     		str	r1, [r4, #4]	@ unaligned
 14563 013a A260     		str	r2, [r4, #8]	@ unaligned
 14564 013c E360     		str	r3, [r4, #12]	@ unaligned
 14565 013e 2868     		ldr	r0, [r5]	@ unaligned
 14566 0140 2061     		str	r0, [r4, #16]	@ unaligned
 14567 0142 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14568 0144 AA79     		ldrb	r2, [r5, #6]
 14569 0146 A382     		strh	r3, [r4, #20]	@ unaligned
 14570 0148 1346     		mov	r3, r2
 14571 014a A375     		strb	r3, [r4, #22]
1923:..\src/command_processing.c ****                 break;
 14572              		.loc 1 1923 0
 14573 014c 6DE0     		b	.L574
 14574              	.L570:
1924:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1925:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14575              		.loc 1 1925 0
 14576 014e 7869     		ldr	r0, [r7, #20]
 14577 0150 FFF7FEFF 		bl	strlen
 14578 0154 0346     		mov	r3, r0
 14579 0156 1A46     		mov	r2, r3
 14580 0158 7B69     		ldr	r3, [r7, #20]
 14581 015a 1344     		add	r3, r3, r2
 14582 015c 7A4A     		ldr	r2, .L688+32
 14583 015e 1D46     		mov	r5, r3
 14584 0160 1446     		mov	r4, r2
 14585 0162 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14586 0164 2860     		str	r0, [r5]	@ unaligned
 14587 0166 6960     		str	r1, [r5, #4]	@ unaligned
 14588 0168 AA60     		str	r2, [r5, #8]	@ unaligned
 14589 016a EB60     		str	r3, [r5, #12]	@ unaligned
 14590 016c 03CC     		ldmia	r4!, {r0, r1}
 14591 016e 2861     		str	r0, [r5, #16]	@ unaligned
 14592 0170 6961     		str	r1, [r5, #20]	@ unaligned
 14593 0172 2388     		ldrh	r3, [r4]	@ unaligned
 14594 0174 A278     		ldrb	r2, [r4, #2]
 14595 0176 2B83     		strh	r3, [r5, #24]	@ unaligned
 14596 0178 1346     		mov	r3, r2
 14597 017a AB76     		strb	r3, [r5, #26]
1926:..\src/command_processing.c ****                 break;
 14598              		.loc 1 1926 0
 14599 017c 55E0     		b	.L574
 14600              	.L571:
1927:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1928:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14601              		.loc 1 1928 0
 14602 017e 7869     		ldr	r0, [r7, #20]
 14603 0180 FFF7FEFF 		bl	strlen
 14604 0184 0346     		mov	r3, r0
 14605 0186 1A46     		mov	r2, r3
 14606 0188 7B69     		ldr	r3, [r7, #20]
 14607 018a 1344     		add	r3, r3, r2
 14608 018c 6F4A     		ldr	r2, .L688+36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 331


 14609 018e 1446     		mov	r4, r2
 14610 0190 9E46     		mov	lr, r3
 14611 0192 04F1200C 		add	ip, r4, #32
 14612              	.L575:
 14613 0196 7546     		mov	r5, lr
 14614 0198 2646     		mov	r6, r4
 14615 019a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14616 019c 2860     		str	r0, [r5]	@ unaligned
 14617 019e 6960     		str	r1, [r5, #4]	@ unaligned
 14618 01a0 AA60     		str	r2, [r5, #8]	@ unaligned
 14619 01a2 EB60     		str	r3, [r5, #12]	@ unaligned
 14620 01a4 1034     		adds	r4, r4, #16
 14621 01a6 0EF1100E 		add	lr, lr, #16
 14622 01aa 6445     		cmp	r4, ip
 14623 01ac F3D1     		bne	.L575
 14624 01ae 7346     		mov	r3, lr
 14625 01b0 2246     		mov	r2, r4
 14626 01b2 1068     		ldr	r0, [r2]	@ unaligned
 14627 01b4 1860     		str	r0, [r3]	@ unaligned
 14628 01b6 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14629 01b8 9279     		ldrb	r2, [r2, #6]
 14630 01ba 9980     		strh	r1, [r3, #4]	@ unaligned
 14631 01bc 9A71     		strb	r2, [r3, #6]
1929:..\src/command_processing.c ****                 break;
 14632              		.loc 1 1929 0
 14633 01be 34E0     		b	.L574
 14634              	.L572:
1930:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1931:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14635              		.loc 1 1931 0
 14636 01c0 7869     		ldr	r0, [r7, #20]
 14637 01c2 FFF7FEFF 		bl	strlen
 14638 01c6 0346     		mov	r3, r0
 14639 01c8 1A46     		mov	r2, r3
 14640 01ca 7B69     		ldr	r3, [r7, #20]
 14641 01cc 1344     		add	r3, r3, r2
 14642 01ce 604A     		ldr	r2, .L688+40
 14643 01d0 1446     		mov	r4, r2
 14644 01d2 9E46     		mov	lr, r3
 14645 01d4 04F1200C 		add	ip, r4, #32
 14646              	.L576:
 14647 01d8 7546     		mov	r5, lr
 14648 01da 2646     		mov	r6, r4
 14649 01dc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14650 01de 2860     		str	r0, [r5]	@ unaligned
 14651 01e0 6960     		str	r1, [r5, #4]	@ unaligned
 14652 01e2 AA60     		str	r2, [r5, #8]	@ unaligned
 14653 01e4 EB60     		str	r3, [r5, #12]	@ unaligned
 14654 01e6 1034     		adds	r4, r4, #16
 14655 01e8 0EF1100E 		add	lr, lr, #16
 14656 01ec 6445     		cmp	r4, ip
 14657 01ee F3D1     		bne	.L576
 14658 01f0 7246     		mov	r2, lr
 14659 01f2 2346     		mov	r3, r4
 14660 01f4 03CB     		ldmia	r3!, {r0, r1}
 14661 01f6 1060     		str	r0, [r2]	@ unaligned
 14662 01f8 5160     		str	r1, [r2, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 332


 14663 01fa 1B88     		ldrh	r3, [r3]	@ unaligned
 14664 01fc 1381     		strh	r3, [r2, #8]	@ unaligned
1932:..\src/command_processing.c ****                 break;
 14665              		.loc 1 1932 0
 14666 01fe 14E0     		b	.L574
 14667              	.L573:
1933:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1934:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14668              		.loc 1 1934 0
 14669 0200 7869     		ldr	r0, [r7, #20]
 14670 0202 FFF7FEFF 		bl	strlen
 14671 0206 0346     		mov	r3, r0
 14672 0208 1A46     		mov	r2, r3
 14673 020a 7B69     		ldr	r3, [r7, #20]
 14674 020c 1344     		add	r3, r3, r2
 14675 020e 514A     		ldr	r2, .L688+44
 14676 0210 1D46     		mov	r5, r3
 14677 0212 1446     		mov	r4, r2
 14678 0214 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14679 0216 2860     		str	r0, [r5]	@ unaligned
 14680 0218 6960     		str	r1, [r5, #4]	@ unaligned
 14681 021a AA60     		str	r2, [r5, #8]	@ unaligned
 14682 021c EB60     		str	r3, [r5, #12]	@ unaligned
 14683 021e 07CC     		ldmia	r4!, {r0, r1, r2}
 14684 0220 2861     		str	r0, [r5, #16]	@ unaligned
 14685 0222 6961     		str	r1, [r5, #20]	@ unaligned
 14686 0224 AA61     		str	r2, [r5, #24]	@ unaligned
1935:..\src/command_processing.c ****                 break;
 14687              		.loc 1 1935 0
 14688 0226 00E0     		b	.L574
 14689              	.L686:
1936:..\src/command_processing.c ****             default:
1937:..\src/command_processing.c ****                 break;
 14690              		.loc 1 1937 0
 14691 0228 00BF     		nop
 14692              	.L574:
1938:..\src/command_processing.c ****         }
1939:..\src/command_processing.c ****         
1940:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14693              		.loc 1 1940 0
 14694 022a D7F88830 		ldr	r3, [r7, #136]
 14695 022e 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14696 0232 002B     		cmp	r3, #0
 14697 0234 02D0     		beq	.L578
 14698 0236 012B     		cmp	r3, #1
 14699 0238 15D0     		beq	.L579
 14700 023a 26E0     		b	.L577
 14701              	.L578:
1941:..\src/command_processing.c ****             case RIGHT_HAND:
1942:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14702              		.loc 1 1942 0
 14703 023c 7869     		ldr	r0, [r7, #20]
 14704 023e FFF7FEFF 		bl	strlen
 14705 0242 0346     		mov	r3, r0
 14706 0244 1A46     		mov	r2, r3
 14707 0246 7B69     		ldr	r3, [r7, #20]
 14708 0248 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 333


 14709 024a 434A     		ldr	r2, .L688+48
 14710 024c 1D46     		mov	r5, r3
 14711 024e 1446     		mov	r4, r2
 14712 0250 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14713 0252 2860     		str	r0, [r5]	@ unaligned
 14714 0254 6960     		str	r1, [r5, #4]	@ unaligned
 14715 0256 AA60     		str	r2, [r5, #8]	@ unaligned
 14716 0258 EB60     		str	r3, [r5, #12]	@ unaligned
 14717 025a 2388     		ldrh	r3, [r4]	@ unaligned
 14718 025c A278     		ldrb	r2, [r4, #2]
 14719 025e 2B82     		strh	r3, [r5, #16]	@ unaligned
 14720 0260 1346     		mov	r3, r2
 14721 0262 AB74     		strb	r3, [r5, #18]
1943:..\src/command_processing.c ****                 break;
 14722              		.loc 1 1943 0
 14723 0264 11E0     		b	.L577
 14724              	.L579:
1944:..\src/command_processing.c ****             case LEFT_HAND:
1945:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 14725              		.loc 1 1945 0
 14726 0266 7869     		ldr	r0, [r7, #20]
 14727 0268 FFF7FEFF 		bl	strlen
 14728 026c 0346     		mov	r3, r0
 14729 026e 1A46     		mov	r2, r3
 14730 0270 7B69     		ldr	r3, [r7, #20]
 14731 0272 1344     		add	r3, r3, r2
 14732 0274 394A     		ldr	r2, .L688+52
 14733 0276 1D46     		mov	r5, r3
 14734 0278 1446     		mov	r4, r2
 14735 027a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14736 027c 2860     		str	r0, [r5]	@ unaligned
 14737 027e 6960     		str	r1, [r5, #4]	@ unaligned
 14738 0280 AA60     		str	r2, [r5, #8]	@ unaligned
 14739 0282 EB60     		str	r3, [r5, #12]	@ unaligned
 14740 0284 2388     		ldrh	r3, [r4]	@ unaligned
 14741 0286 2B82     		strh	r3, [r5, #16]	@ unaligned
1946:..\src/command_processing.c ****                 break;
 14742              		.loc 1 1946 0
 14743 0288 00BF     		nop
 14744              	.L577:
1947:..\src/command_processing.c ****         }
1948:..\src/command_processing.c **** 
1949:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14745              		.loc 1 1949 0
 14746 028a D7F88830 		ldr	r3, [r7, #136]
 14747 028e 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14748 0292 012B     		cmp	r3, #1
 14749 0294 02D0     		beq	.L581
 14750 0296 022B     		cmp	r3, #2
 14751 0298 11D0     		beq	.L582
 14752 029a 1FE0     		b	.L684
 14753              	.L581:
1950:..\src/command_processing.c ****             case MARIA:
1951:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14754              		.loc 1 1951 0
 14755 029c 7869     		ldr	r0, [r7, #20]
 14756 029e FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 334


 14757 02a2 0346     		mov	r3, r0
 14758 02a4 1A46     		mov	r2, r3
 14759 02a6 7B69     		ldr	r3, [r7, #20]
 14760 02a8 1344     		add	r3, r3, r2
 14761 02aa 2D4A     		ldr	r2, .L688+56
 14762 02ac 1C46     		mov	r4, r3
 14763 02ae 1346     		mov	r3, r2
 14764 02b0 07CB     		ldmia	r3!, {r0, r1, r2}
 14765 02b2 2060     		str	r0, [r4]	@ unaligned
 14766 02b4 6160     		str	r1, [r4, #4]	@ unaligned
 14767 02b6 A260     		str	r2, [r4, #8]	@ unaligned
 14768 02b8 1B88     		ldrh	r3, [r3]	@ unaligned
 14769 02ba A381     		strh	r3, [r4, #12]	@ unaligned
1952:..\src/command_processing.c ****                 break;
 14770              		.loc 1 1952 0
 14771 02bc 22E0     		b	.L583
 14772              	.L582:
1953:..\src/command_processing.c ****             case R01:
1954:..\src/command_processing.c ****                 strcat(info_string, "User: R01\r\n");
 14773              		.loc 1 1954 0
 14774 02be 7869     		ldr	r0, [r7, #20]
 14775 02c0 FFF7FEFF 		bl	strlen
 14776 02c4 0346     		mov	r3, r0
 14777 02c6 1A46     		mov	r2, r3
 14778 02c8 7B69     		ldr	r3, [r7, #20]
 14779 02ca 1344     		add	r3, r3, r2
 14780 02cc 254A     		ldr	r2, .L688+60
 14781 02ce 1C46     		mov	r4, r3
 14782 02d0 1346     		mov	r3, r2
 14783 02d2 07CB     		ldmia	r3!, {r0, r1, r2}
 14784 02d4 2060     		str	r0, [r4]	@ unaligned
 14785 02d6 6160     		str	r1, [r4, #4]	@ unaligned
 14786 02d8 A260     		str	r2, [r4, #8]	@ unaligned
1955:..\src/command_processing.c ****                 break;
 14787              		.loc 1 1955 0
 14788 02da 13E0     		b	.L583
 14789              	.L684:
1956:..\src/command_processing.c ****             default:
1957:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14790              		.loc 1 1957 0
 14791 02dc 7869     		ldr	r0, [r7, #20]
 14792 02de FFF7FEFF 		bl	strlen
 14793 02e2 0346     		mov	r3, r0
 14794 02e4 1A46     		mov	r2, r3
 14795 02e6 7B69     		ldr	r3, [r7, #20]
 14796 02e8 1344     		add	r3, r3, r2
 14797 02ea 1F4A     		ldr	r2, .L688+64
 14798 02ec 1D46     		mov	r5, r3
 14799 02ee 1446     		mov	r4, r2
 14800 02f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14801 02f2 2860     		str	r0, [r5]	@ unaligned
 14802 02f4 6960     		str	r1, [r5, #4]	@ unaligned
 14803 02f6 AA60     		str	r2, [r5, #8]	@ unaligned
 14804 02f8 EB60     		str	r3, [r5, #12]	@ unaligned
 14805 02fa 2068     		ldr	r0, [r4]	@ unaligned
 14806 02fc 2861     		str	r0, [r5, #16]	@ unaligned
 14807 02fe 2379     		ldrb	r3, [r4, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 335


 14808 0300 2B75     		strb	r3, [r5, #20]
1958:..\src/command_processing.c ****                 break;
 14809              		.loc 1 1958 0
 14810 0302 00BF     		nop
 14811              	.L583:
1959:..\src/command_processing.c ****         }
1960:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14812              		.loc 1 1960 0
 14813 0304 7869     		ldr	r0, [r7, #20]
 14814 0306 FFF7FEFF 		bl	strlen
 14815 030a 0346     		mov	r3, r0
 14816 030c 1A46     		mov	r2, r3
 14817 030e 7B69     		ldr	r3, [r7, #20]
 14818 0310 1344     		add	r3, r3, r2
 14819 0312 064A     		ldr	r2, .L688+4
 14820 0314 1188     		ldrh	r1, [r2]	@ unaligned
 14821 0316 9278     		ldrb	r2, [r2, #2]
 14822 0318 1980     		strh	r1, [r3]	@ unaligned
 14823 031a 9A70     		strb	r2, [r3, #2]
 14824              	.LBB25:
1961:..\src/command_processing.c ****         
1962:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14825              		.loc 1 1962 0
 14826 031c 0023     		movs	r3, #0
 14827 031e 87F89330 		strb	r3, [r7, #147]
 14828 0322 01F0F5B9 		b	.L584
 14829              	.L689:
 14830 0326 00BF     		.align	2
 14831              	.L688:
 14832 0328 00000000 		.word	c_mem
 14833 032c 58110000 		.word	.LC152
 14834 0330 5C110000 		.word	.LC153
 14835 0334 70110000 		.word	.LC154
 14836 0338 A8110000 		.word	.LC155
 14837 033c B0110000 		.word	.LC156
 14838 0340 C0110000 		.word	.LC157
 14839 0344 CC110000 		.word	.LC158
 14840 0348 E4110000 		.word	.LC159
 14841 034c 00120000 		.word	.LC160
 14842 0350 28120000 		.word	.LC161
 14843 0354 54120000 		.word	.LC162
 14844 0358 70120000 		.word	.LC163
 14845 035c 84120000 		.word	.LC164
 14846 0360 98120000 		.word	.LC165
 14847 0364 A8120000 		.word	.LC166
 14848 0368 B4120000 		.word	.LC167
 14849              	.L650:
 14850              	.LBB26:
1963:..\src/command_processing.c ****             
1964:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14851              		.loc 1 1964 0
 14852 036c 97F89330 		ldrb	r3, [r7, #147]
 14853 0370 87F88730 		strb	r3, [r7, #135]
1965:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14854              		.loc 1 1965 0
 14855 0374 97F88720 		ldrb	r2, [r7, #135]	@ zero_extendqisi2
 14856 0378 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 336


 14857 037a DB00     		lsls	r3, r3, #3
 14858 037c 9B1A     		subs	r3, r3, r2
 14859 037e 1B01     		lsls	r3, r3, #4
 14860 0380 B033     		adds	r3, r3, #176
 14861 0382 D7F88820 		ldr	r2, [r7, #136]
 14862 0386 1344     		add	r3, r3, r2
 14863 0388 C7F88030 		str	r3, [r7, #128]
1966:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14864              		.loc 1 1966 0
 14865 038c D7F88030 		ldr	r3, [r7, #128]
 14866 0390 93F86030 		ldrb	r3, [r3, #96]
 14867 0394 87F87F30 		strb	r3, [r7, #127]
1967:..\src/command_processing.c ****                   
1968:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14868              		.loc 1 1968 0
 14869 0398 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14870 039c 5A1C     		adds	r2, r3, #1
 14871 039e 07F11803 		add	r3, r7, #24
 14872 03a2 AE49     		ldr	r1, .L690
 14873 03a4 1846     		mov	r0, r3
 14874 03a6 FFF7FEFF 		bl	sprintf
1969:..\src/command_processing.c ****             strcat(info_string, str);
 14875              		.loc 1 1969 0
 14876 03aa 07F11803 		add	r3, r7, #24
 14877 03ae 1946     		mov	r1, r3
 14878 03b0 7869     		ldr	r0, [r7, #20]
 14879 03b2 FFF7FEFF 		bl	strcat
1970:..\src/command_processing.c ****                         
1971:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14880              		.loc 1 1971 0
 14881 03b6 7869     		ldr	r0, [r7, #20]
 14882 03b8 FFF7FEFF 		bl	strlen
 14883 03bc 0346     		mov	r3, r0
 14884 03be 1A46     		mov	r2, r3
 14885 03c0 7B69     		ldr	r3, [r7, #20]
 14886 03c2 1344     		add	r3, r3, r2
 14887 03c4 A64A     		ldr	r2, .L690+4
 14888 03c6 1C46     		mov	r4, r3
 14889 03c8 1546     		mov	r5, r2
 14890 03ca 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14891 03cc 2060     		str	r0, [r4]	@ unaligned
 14892 03ce 6160     		str	r1, [r4, #4]	@ unaligned
 14893 03d0 A260     		str	r2, [r4, #8]	@ unaligned
 14894 03d2 E360     		str	r3, [r4, #12]	@ unaligned
1972:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14895              		.loc 1 1972 0
 14896 03d4 D7F88030 		ldr	r3, [r7, #128]
 14897 03d8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14898 03dc 022B     		cmp	r3, #2
 14899 03de 10D1     		bne	.L585
1973:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 14900              		.loc 1 1973 0
 14901 03e0 7869     		ldr	r0, [r7, #20]
 14902 03e2 FFF7FEFF 		bl	strlen
 14903 03e6 0346     		mov	r3, r0
 14904 03e8 1A46     		mov	r2, r3
 14905 03ea 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 337


 14906 03ec 1344     		add	r3, r3, r2
 14907 03ee 9D4A     		ldr	r2, .L690+8
 14908 03f0 1C46     		mov	r4, r3
 14909 03f2 1346     		mov	r3, r2
 14910 03f4 07CB     		ldmia	r3!, {r0, r1, r2}
 14911 03f6 2060     		str	r0, [r4]	@ unaligned
 14912 03f8 6160     		str	r1, [r4, #4]	@ unaligned
 14913 03fa A260     		str	r2, [r4, #8]	@ unaligned
 14914 03fc 1B88     		ldrh	r3, [r3]	@ unaligned
 14915 03fe A381     		strh	r3, [r4, #12]	@ unaligned
 14916 0400 25E0     		b	.L586
 14917              	.L585:
1974:..\src/command_processing.c ****             else {
1975:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14918              		.loc 1 1975 0
 14919 0402 D7F88030 		ldr	r3, [r7, #128]
 14920 0406 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14921 040a 012B     		cmp	r3, #1
 14922 040c 0FD1     		bne	.L587
1976:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14923              		.loc 1 1976 0
 14924 040e 7869     		ldr	r0, [r7, #20]
 14925 0410 FFF7FEFF 		bl	strlen
 14926 0414 0346     		mov	r3, r0
 14927 0416 1A46     		mov	r2, r3
 14928 0418 7B69     		ldr	r3, [r7, #20]
 14929 041a 1344     		add	r3, r3, r2
 14930 041c 9249     		ldr	r1, .L690+12
 14931 041e 1A46     		mov	r2, r3
 14932 0420 0B46     		mov	r3, r1
 14933 0422 03CB     		ldmia	r3!, {r0, r1}
 14934 0424 1060     		str	r0, [r2]	@ unaligned
 14935 0426 5160     		str	r1, [r2, #4]	@ unaligned
 14936 0428 1B78     		ldrb	r3, [r3]
 14937 042a 1372     		strb	r3, [r2, #8]
 14938 042c 0FE0     		b	.L586
 14939              	.L587:
1977:..\src/command_processing.c ****                 else
1978:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14940              		.loc 1 1978 0
 14941 042e 7869     		ldr	r0, [r7, #20]
 14942 0430 FFF7FEFF 		bl	strlen
 14943 0434 0346     		mov	r3, r0
 14944 0436 1A46     		mov	r2, r3
 14945 0438 7B69     		ldr	r3, [r7, #20]
 14946 043a 1344     		add	r3, r3, r2
 14947 043c 8B4A     		ldr	r2, .L690+16
 14948 043e 1C46     		mov	r4, r3
 14949 0440 1346     		mov	r3, r2
 14950 0442 07CB     		ldmia	r3!, {r0, r1, r2}
 14951 0444 2060     		str	r0, [r4]	@ unaligned
 14952 0446 6160     		str	r1, [r4, #4]	@ unaligned
 14953 0448 A260     		str	r2, [r4, #8]	@ unaligned
 14954 044a 1B88     		ldrh	r3, [r3]	@ unaligned
 14955 044c A381     		strh	r3, [r4, #12]	@ unaligned
 14956              	.L586:
1979:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 338


1980:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14957              		.loc 1 1980 0
 14958 044e D7F88030 		ldr	r3, [r7, #128]
 14959 0452 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14960 0456 022B     		cmp	r3, #2
 14961 0458 13D1     		bne	.L588
1981:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14962              		.loc 1 1981 0
 14963 045a 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14964 045e 844A     		ldr	r2, .L690+20
 14965 0460 1B01     		lsls	r3, r3, #4
 14966 0462 1344     		add	r3, r3, r2
 14967 0464 0433     		adds	r3, r3, #4
 14968 0466 1A68     		ldr	r2, [r3]
 14969 0468 07F11803 		add	r3, r7, #24
 14970 046c 8149     		ldr	r1, .L690+24
 14971 046e 1846     		mov	r0, r3
 14972 0470 FFF7FEFF 		bl	sprintf
1982:..\src/command_processing.c ****                 strcat(info_string,str);
 14973              		.loc 1 1982 0
 14974 0474 07F11803 		add	r3, r7, #24
 14975 0478 1946     		mov	r1, r3
 14976 047a 7869     		ldr	r0, [r7, #20]
 14977 047c FFF7FEFF 		bl	strcat
 14978 0480 39E0     		b	.L589
 14979              	.L588:
1983:..\src/command_processing.c ****             }
1984:..\src/command_processing.c ****             else {
1985:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14980              		.loc 1 1985 0
 14981 0482 D7F88030 		ldr	r3, [r7, #128]
 14982 0486 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14983 048a 012B     		cmp	r3, #1
 14984 048c 13D1     		bne	.L590
1986:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14985              		.loc 1 1986 0
 14986 048e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14987 0492 774A     		ldr	r2, .L690+20
 14988 0494 1B01     		lsls	r3, r3, #4
 14989 0496 1344     		add	r3, r3, r2
 14990 0498 0833     		adds	r3, r3, #8
 14991 049a 1A68     		ldr	r2, [r3]
 14992 049c 07F11803 		add	r3, r7, #24
 14993 04a0 7449     		ldr	r1, .L690+24
 14994 04a2 1846     		mov	r0, r3
 14995 04a4 FFF7FEFF 		bl	sprintf
1987:..\src/command_processing.c ****                     strcat(info_string,str);
 14996              		.loc 1 1987 0
 14997 04a8 07F11803 		add	r3, r7, #24
 14998 04ac 1946     		mov	r1, r3
 14999 04ae 7869     		ldr	r0, [r7, #20]
 15000 04b0 FFF7FEFF 		bl	strcat
 15001 04b4 1FE0     		b	.L589
 15002              	.L590:
1988:..\src/command_processing.c ****                 }
1989:..\src/command_processing.c ****                 else {
1990:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 339


 15003              		.loc 1 1990 0
 15004 04b6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15005 04ba 6D4A     		ldr	r2, .L690+20
 15006 04bc 1B01     		lsls	r3, r3, #4
 15007 04be 1344     		add	r3, r3, r2
 15008 04c0 1968     		ldr	r1, [r3]
 15009 04c2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15010 04c6 D7F88800 		ldr	r0, [r7, #136]
 15011 04ca 1346     		mov	r3, r2
 15012 04cc 5B00     		lsls	r3, r3, #1
 15013 04ce 1344     		add	r3, r3, r2
 15014 04d0 1B01     		lsls	r3, r3, #4
 15015 04d2 0344     		add	r3, r3, r0
 15016 04d4 03F29513 		addw	r3, r3, #405
 15017 04d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15018 04da 41FA03F2 		asr	r2, r1, r3
 15019 04de 07F11803 		add	r3, r7, #24
 15020 04e2 6449     		ldr	r1, .L690+24
 15021 04e4 1846     		mov	r0, r3
 15022 04e6 FFF7FEFF 		bl	sprintf
1991:..\src/command_processing.c ****                     strcat(info_string,str);
 15023              		.loc 1 1991 0
 15024 04ea 07F11803 		add	r3, r7, #24
 15025 04ee 1946     		mov	r1, r3
 15026 04f0 7869     		ldr	r0, [r7, #20]
 15027 04f2 FFF7FEFF 		bl	strcat
 15028              	.L589:
1992:..\src/command_processing.c ****                 }
1993:..\src/command_processing.c ****             }
1994:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 15029              		.loc 1 1994 0
 15030 04f6 7869     		ldr	r0, [r7, #20]
 15031 04f8 FFF7FEFF 		bl	strlen
 15032 04fc 0346     		mov	r3, r0
 15033 04fe 1A46     		mov	r2, r3
 15034 0500 7B69     		ldr	r3, [r7, #20]
 15035 0502 1344     		add	r3, r3, r2
 15036 0504 5C4A     		ldr	r2, .L690+28
 15037 0506 1188     		ldrh	r1, [r2]	@ unaligned
 15038 0508 9278     		ldrb	r2, [r2, #2]
 15039 050a 1980     		strh	r1, [r3]	@ unaligned
 15040 050c 9A70     		strb	r2, [r3, #2]
1995:..\src/command_processing.c **** 
1996:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 15041              		.loc 1 1996 0
 15042 050e 07F11803 		add	r3, r7, #24
 15043 0512 5A4A     		ldr	r2, .L690+32
 15044 0514 1C46     		mov	r4, r3
 15045 0516 1346     		mov	r3, r2
 15046 0518 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 15047 051a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1997:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 15048              		.loc 1 1997 0
 15049 051e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15050 0522 574A     		ldr	r2, .L690+36
 15051 0524 1B01     		lsls	r3, r3, #4
 15052 0526 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 340


 15053 0528 0C33     		adds	r3, r3, #12
 15054 052a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15055 052c 03F00103 		and	r3, r3, #1
 15056 0530 002B     		cmp	r3, #0
 15057 0532 0FD0     		beq	.L591
1998:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 15058              		.loc 1 1998 0
 15059 0534 07F11803 		add	r3, r7, #24
 15060 0538 1846     		mov	r0, r3
 15061 053a FFF7FEFF 		bl	strlen
 15062 053e 0346     		mov	r3, r0
 15063 0540 1A46     		mov	r2, r3
 15064 0542 07F11803 		add	r3, r7, #24
 15065 0546 1344     		add	r3, r3, r2
 15066 0548 4E4A     		ldr	r2, .L690+40
 15067 054a 1068     		ldr	r0, [r2]	@ unaligned
 15068 054c 1860     		str	r0, [r3]	@ unaligned
 15069 054e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15070 0550 9A80     		strh	r2, [r3, #4]	@ unaligned
 15071 0552 0EE0     		b	.L592
 15072              	.L591:
1999:..\src/command_processing.c ****             } else {
2000:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 15073              		.loc 1 2000 0
 15074 0554 07F11803 		add	r3, r7, #24
 15075 0558 1846     		mov	r0, r3
 15076 055a FFF7FEFF 		bl	strlen
 15077 055e 0346     		mov	r3, r0
 15078 0560 1A46     		mov	r2, r3
 15079 0562 07F11803 		add	r3, r7, #24
 15080 0566 1344     		add	r3, r3, r2
 15081 0568 474A     		ldr	r2, .L690+44
 15082 056a 1068     		ldr	r0, [r2]	@ unaligned
 15083 056c 1860     		str	r0, [r3]	@ unaligned
 15084 056e 1279     		ldrb	r2, [r2, #4]
 15085 0570 1A71     		strb	r2, [r3, #4]
 15086              	.L592:
2001:..\src/command_processing.c ****             }
2002:..\src/command_processing.c ****             strcat(info_string, str);
 15087              		.loc 1 2002 0
 15088 0572 07F11803 		add	r3, r7, #24
 15089 0576 1946     		mov	r1, r3
 15090 0578 7869     		ldr	r0, [r7, #20]
 15091 057a FFF7FEFF 		bl	strcat
2003:..\src/command_processing.c ****                         
2004:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 15092              		.loc 1 2004 0
 15093 057e 7869     		ldr	r0, [r7, #20]
 15094 0580 FFF7FEFF 		bl	strlen
 15095 0584 0346     		mov	r3, r0
 15096 0586 1A46     		mov	r2, r3
 15097 0588 7B69     		ldr	r3, [r7, #20]
 15098 058a 1344     		add	r3, r3, r2
 15099 058c 3F4A     		ldr	r2, .L690+48
 15100 058e 1D46     		mov	r5, r3
 15101 0590 1446     		mov	r4, r2
 15102 0592 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 341


 15103 0594 2860     		str	r0, [r5]	@ unaligned
 15104 0596 6960     		str	r1, [r5, #4]	@ unaligned
 15105 0598 AA60     		str	r2, [r5, #8]	@ unaligned
 15106 059a EB60     		str	r3, [r5, #12]	@ unaligned
 15107 059c 03CC     		ldmia	r4!, {r0, r1}
 15108 059e 2861     		str	r0, [r5, #16]	@ unaligned
 15109 05a0 6961     		str	r1, [r5, #20]	@ unaligned
 15110 05a2 2388     		ldrh	r3, [r4]	@ unaligned
 15111 05a4 A278     		ldrb	r2, [r4, #2]
 15112 05a6 2B83     		strh	r3, [r5, #24]	@ unaligned
 15113 05a8 1346     		mov	r3, r2
 15114 05aa AB76     		strb	r3, [r5, #26]
2005:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 15115              		.loc 1 2005 0
 15116 05ac D7F88030 		ldr	r3, [r7, #128]
 15117 05b0 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 15118 05b4 012B     		cmp	r3, #1
 15119 05b6 0CD1     		bne	.L593
2006:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 15120              		.loc 1 2006 0
 15121 05b8 7869     		ldr	r0, [r7, #20]
 15122 05ba FFF7FEFF 		bl	strlen
 15123 05be 0346     		mov	r3, r0
 15124 05c0 1A46     		mov	r2, r3
 15125 05c2 7B69     		ldr	r3, [r7, #20]
 15126 05c4 1344     		add	r3, r3, r2
 15127 05c6 324A     		ldr	r2, .L690+52
 15128 05c8 1068     		ldr	r0, [r2]	@ unaligned
 15129 05ca 1860     		str	r0, [r3]	@ unaligned
 15130 05cc 1279     		ldrb	r2, [r2, #4]
 15131 05ce 1A71     		strb	r2, [r3, #4]
 15132 05d0 09E0     		b	.L594
 15133              	.L593:
2007:..\src/command_processing.c ****             else
2008:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 15134              		.loc 1 2008 0
 15135 05d2 7869     		ldr	r0, [r7, #20]
 15136 05d4 FFF7FEFF 		bl	strlen
 15137 05d8 0346     		mov	r3, r0
 15138 05da 1A46     		mov	r2, r3
 15139 05dc 7B69     		ldr	r3, [r7, #20]
 15140 05de 1344     		add	r3, r3, r2
 15141 05e0 2C4A     		ldr	r2, .L690+56
 15142 05e2 1068     		ldr	r0, [r2]	@ unaligned
 15143 05e4 1860     		str	r0, [r3]	@ unaligned
 15144              	.L594:
2009:..\src/command_processing.c ****             
2010:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 15145              		.loc 1 2010 0
 15146 05e6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15147 05ea 2B4A     		ldr	r2, .L690+60
 15148 05ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 15149 05f0 1A46     		mov	r2, r3
 15150 05f2 07F11803 		add	r3, r7, #24
 15151 05f6 2949     		ldr	r1, .L690+64
 15152 05f8 1846     		mov	r0, r3
 15153 05fa FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 342


2011:..\src/command_processing.c ****             strcat(info_string, str);
 15154              		.loc 1 2011 0
 15155 05fe 07F11803 		add	r3, r7, #24
 15156 0602 1946     		mov	r1, r3
 15157 0604 7869     		ldr	r0, [r7, #20]
 15158 0606 FFF7FEFF 		bl	strcat
2012:..\src/command_processing.c **** 
2013:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 15159              		.loc 1 2013 0
 15160 060a 7869     		ldr	r0, [r7, #20]
 15161 060c FFF7FEFF 		bl	strlen
 15162 0610 0346     		mov	r3, r0
 15163 0612 1A46     		mov	r2, r3
 15164 0614 7B69     		ldr	r3, [r7, #20]
 15165 0616 1344     		add	r3, r3, r2
 15166 0618 214A     		ldr	r2, .L690+68
 15167 061a 1D46     		mov	r5, r3
 15168 061c 1446     		mov	r4, r2
 15169 061e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15170 0620 2860     		str	r0, [r5]	@ unaligned
 15171 0622 6960     		str	r1, [r5, #4]	@ unaligned
 15172 0624 AA60     		str	r2, [r5, #8]	@ unaligned
 15173 0626 EB60     		str	r3, [r5, #12]	@ unaligned
 15174 0628 2068     		ldr	r0, [r4]	@ unaligned
 15175 062a 2861     		str	r0, [r5, #16]	@ unaligned
 15176 062c A388     		ldrh	r3, [r4, #4]	@ unaligned
 15177 062e AB82     		strh	r3, [r5, #20]	@ unaligned
2014:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 15178              		.loc 1 2014 0
 15179 0630 7869     		ldr	r0, [r7, #20]
 15180 0632 FFF7FEFF 		bl	strlen
 15181 0636 0346     		mov	r3, r0
 15182 0638 1A46     		mov	r2, r3
 15183 063a 7B69     		ldr	r3, [r7, #20]
 15184 063c 1344     		add	r3, r3, r2
 15185 063e 194A     		ldr	r2, .L690+72
 15186 0640 1C46     		mov	r4, r3
 15187 0642 1346     		mov	r3, r2
 15188 0644 07CB     		ldmia	r3!, {r0, r1, r2}
 15189 0646 2060     		str	r0, [r4]	@ unaligned
 15190 0648 6160     		str	r1, [r4, #4]	@ unaligned
 15191 064a A260     		str	r2, [r4, #8]	@ unaligned
 15192 064c 1A88     		ldrh	r2, [r3]	@ unaligned
 15193 064e 9B78     		ldrb	r3, [r3, #2]
 15194 0650 A281     		strh	r2, [r4, #12]	@ unaligned
 15195 0652 A373     		strb	r3, [r4, #14]
2015:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 15196              		.loc 1 2015 0
 15197 0654 0023     		movs	r3, #0
 15198 0656 C7F89430 		str	r3, [r7, #148]
 15199 065a 64E0     		b	.L595
 15200              	.L691:
 15201              		.align	2
 15202              	.L690:
 15203 065c CC120000 		.word	.LC168
 15204 0660 DC120000 		.word	.LC169
 15205 0664 EC120000 		.word	.LC170
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 343


 15206 0668 FC120000 		.word	.LC171
 15207 066c 08130000 		.word	.LC172
 15208 0670 00000000 		.word	g_refOld
 15209 0674 18130000 		.word	.LC173
 15210 0678 58110000 		.word	.LC152
 15211 067c 1C130000 		.word	.LC174
 15212 0680 00000000 		.word	g_ref
 15213 0684 2C130000 		.word	.LC175
 15214 0688 34130000 		.word	.LC176
 15215 068c 3C130000 		.word	.LC177
 15216 0690 58130000 		.word	.LC178
 15217 0694 60130000 		.word	.LC179
 15218 0698 00000000 		.word	dev_pwm_limit
 15219 069c 64130000 		.word	.LC180
 15220 06a0 74130000 		.word	.LC181
 15221 06a4 8C130000 		.word	.LC182
 15222              	.L597:
2016:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15223              		.loc 1 2016 0
 15224 06a8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15225 06ac B849     		ldr	r1, .L692
 15226 06ae 1346     		mov	r3, r2
 15227 06b0 5B00     		lsls	r3, r3, #1
 15228 06b2 1344     		add	r3, r3, r2
 15229 06b4 9B00     		lsls	r3, r3, #2
 15230 06b6 1344     		add	r3, r3, r2
 15231 06b8 D7F89420 		ldr	r2, [r7, #148]
 15232 06bc 1344     		add	r3, r3, r2
 15233 06be 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15234 06c2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15235 06c6 D7F88800 		ldr	r0, [r7, #136]
 15236 06ca 1346     		mov	r3, r2
 15237 06cc 5B00     		lsls	r3, r3, #1
 15238 06ce 1344     		add	r3, r3, r2
 15239 06d0 1B01     		lsls	r3, r3, #4
 15240 06d2 C218     		adds	r2, r0, r3
 15241 06d4 D7F89430 		ldr	r3, [r7, #148]
 15242 06d8 1344     		add	r3, r3, r2
 15243 06da 03F29513 		addw	r3, r3, #405
 15244 06de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15245 06e0 41FA03F2 		asr	r2, r1, r3
 15246 06e4 07F11803 		add	r3, r7, #24
 15247 06e8 AA49     		ldr	r1, .L692+4
 15248 06ea 1846     		mov	r0, r3
 15249 06ec FFF7FEFF 		bl	sprintf
2017:..\src/command_processing.c ****                 strcat(info_string, str);
 15250              		.loc 1 2017 0
 15251 06f0 07F11803 		add	r3, r7, #24
 15252 06f4 1946     		mov	r1, r3
 15253 06f6 7869     		ldr	r0, [r7, #20]
 15254 06f8 FFF7FEFF 		bl	strcat
2018:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15255              		.loc 1 2018 0
 15256 06fc D7F89430 		ldr	r3, [r7, #148]
 15257 0700 022B     		cmp	r3, #2
 15258 0702 0BD0     		beq	.L596
2019:..\src/command_processing.c ****                     strcat(info_string, ", ");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 344


 15259              		.loc 1 2019 0
 15260 0704 7869     		ldr	r0, [r7, #20]
 15261 0706 FFF7FEFF 		bl	strlen
 15262 070a 0346     		mov	r3, r0
 15263 070c 1A46     		mov	r2, r3
 15264 070e 7B69     		ldr	r3, [r7, #20]
 15265 0710 1344     		add	r3, r3, r2
 15266 0712 A14A     		ldr	r2, .L692+8
 15267 0714 1188     		ldrh	r1, [r2]	@ unaligned
 15268 0716 9278     		ldrb	r2, [r2, #2]
 15269 0718 1980     		strh	r1, [r3]	@ unaligned
 15270 071a 9A70     		strb	r2, [r3, #2]
 15271              	.L596:
2015:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15272              		.loc 1 2015 0 discriminator 2
 15273 071c D7F89430 		ldr	r3, [r7, #148]
 15274 0720 0133     		adds	r3, r3, #1
 15275 0722 C7F89430 		str	r3, [r7, #148]
 15276              	.L595:
2015:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15277              		.loc 1 2015 0 is_stmt 0 discriminator 1
 15278 0726 D7F89430 		ldr	r3, [r7, #148]
 15279 072a 022B     		cmp	r3, #2
 15280 072c BCDD     		ble	.L597
2020:..\src/command_processing.c ****                 }                
2021:..\src/command_processing.c ****             }
2022:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15281              		.loc 1 2022 0 is_stmt 1
 15282 072e 7869     		ldr	r0, [r7, #20]
 15283 0730 FFF7FEFF 		bl	strlen
 15284 0734 0346     		mov	r3, r0
 15285 0736 1A46     		mov	r2, r3
 15286 0738 7B69     		ldr	r3, [r7, #20]
 15287 073a 1344     		add	r3, r3, r2
 15288 073c 974A     		ldr	r2, .L692+12
 15289 073e 1188     		ldrh	r1, [r2]	@ unaligned
 15290 0740 9278     		ldrb	r2, [r2, #2]
 15291 0742 1980     		strh	r1, [r3]	@ unaligned
 15292 0744 9A70     		strb	r2, [r3, #2]
2023:..\src/command_processing.c ****             
2024:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 15293              		.loc 1 2024 0
 15294 0746 D7F88030 		ldr	r3, [r7, #128]
 15295 074a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15296 074e 062B     		cmp	r3, #6
 15297 0750 1AD1     		bne	.L598
2025:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 15298              		.loc 1 2025 0
 15299 0752 934B     		ldr	r3, .L692+16
 15300 0754 1A6A     		ldr	r2, [r3, #32]
 15301 0756 924B     		ldr	r3, .L692+16
 15302 0758 5B6A     		ldr	r3, [r3, #36]
 15303 075a 07F11800 		add	r0, r7, #24
 15304 075e 9149     		ldr	r1, .L692+20
 15305 0760 FFF7FEFF 		bl	sprintf
2026:..\src/command_processing.c ****                 strcat(info_string, str);
 15306              		.loc 1 2026 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 345


 15307 0764 07F11803 		add	r3, r7, #24
 15308 0768 1946     		mov	r1, r3
 15309 076a 7869     		ldr	r0, [r7, #20]
 15310 076c FFF7FEFF 		bl	strcat
2027:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15311              		.loc 1 2027 0
 15312 0770 7869     		ldr	r0, [r7, #20]
 15313 0772 FFF7FEFF 		bl	strlen
 15314 0776 0346     		mov	r3, r0
 15315 0778 1A46     		mov	r2, r3
 15316 077a 7B69     		ldr	r3, [r7, #20]
 15317 077c 1344     		add	r3, r3, r2
 15318 077e 874A     		ldr	r2, .L692+12
 15319 0780 1188     		ldrh	r1, [r2]	@ unaligned
 15320 0782 9278     		ldrb	r2, [r2, #2]
 15321 0784 1980     		strh	r1, [r3]	@ unaligned
 15322 0786 9A70     		strb	r2, [r3, #2]
 15323              	.L598:
2028:..\src/command_processing.c ****             }
2029:..\src/command_processing.c **** 
2030:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 15324              		.loc 1 2030 0
 15325 0788 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15326 078c 591C     		adds	r1, r3, #1
 15327 078e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15328 0792 854A     		ldr	r2, .L692+24
 15329 0794 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15330 0798 07F11800 		add	r0, r7, #24
 15331 079c 0A46     		mov	r2, r1
 15332 079e 8349     		ldr	r1, .L692+28
 15333 07a0 FFF7FEFF 		bl	sprintf
2031:..\src/command_processing.c ****             strcat(info_string, str);
 15334              		.loc 1 2031 0
 15335 07a4 07F11803 		add	r3, r7, #24
 15336 07a8 1946     		mov	r1, r3
 15337 07aa 7869     		ldr	r0, [r7, #20]
 15338 07ac FFF7FEFF 		bl	strcat
2032:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15339              		.loc 1 2032 0
 15340 07b0 7869     		ldr	r0, [r7, #20]
 15341 07b2 FFF7FEFF 		bl	strlen
 15342 07b6 0346     		mov	r3, r0
 15343 07b8 1A46     		mov	r2, r3
 15344 07ba 7B69     		ldr	r3, [r7, #20]
 15345 07bc 1344     		add	r3, r3, r2
 15346 07be 774A     		ldr	r2, .L692+12
 15347 07c0 1188     		ldrh	r1, [r2]	@ unaligned
 15348 07c2 9278     		ldrb	r2, [r2, #2]
 15349 07c4 1980     		strh	r1, [r3]	@ unaligned
 15350 07c6 9A70     		strb	r2, [r3, #2]
2033:..\src/command_processing.c ****             
2034:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 15351              		.loc 1 2034 0
 15352 07c8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15353 07cc 591C     		adds	r1, r3, #1
 15354 07ce 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15355 07d2 774A     		ldr	r2, .L692+32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 346


 15356 07d4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15357 07d8 07F11800 		add	r0, r7, #24
 15358 07dc 0A46     		mov	r2, r1
 15359 07de 7549     		ldr	r1, .L692+36
 15360 07e0 FFF7FEFF 		bl	sprintf
2035:..\src/command_processing.c ****             strcat(info_string, str);
 15361              		.loc 1 2035 0
 15362 07e4 07F11803 		add	r3, r7, #24
 15363 07e8 1946     		mov	r1, r3
 15364 07ea 7869     		ldr	r0, [r7, #20]
 15365 07ec FFF7FEFF 		bl	strcat
2036:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15366              		.loc 1 2036 0
 15367 07f0 7869     		ldr	r0, [r7, #20]
 15368 07f2 FFF7FEFF 		bl	strlen
 15369 07f6 0346     		mov	r3, r0
 15370 07f8 1A46     		mov	r2, r3
 15371 07fa 7B69     		ldr	r3, [r7, #20]
 15372 07fc 1344     		add	r3, r3, r2
 15373 07fe 674A     		ldr	r2, .L692+12
 15374 0800 1188     		ldrh	r1, [r2]	@ unaligned
 15375 0802 9278     		ldrb	r2, [r2, #2]
 15376 0804 1980     		strh	r1, [r3]	@ unaligned
 15377 0806 9A70     		strb	r2, [r3, #2]
2037:..\src/command_processing.c **** 
2038:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 15378              		.loc 1 2038 0
 15379 0808 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15380 080c 5C1C     		adds	r4, r3, #1
 15381 080e 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15382 0812 5F4A     		ldr	r2, .L692
 15383 0814 3421     		movs	r1, #52
 15384 0816 01FB03F3 		mul	r3, r1, r3
 15385 081a 1344     		add	r3, r3, r2
 15386 081c 0C33     		adds	r3, r3, #12
 15387 081e 1B68     		ldr	r3, [r3]
 15388 0820 07F11800 		add	r0, r7, #24
 15389 0824 2246     		mov	r2, r4
 15390 0826 6449     		ldr	r1, .L692+40
 15391 0828 FFF7FEFF 		bl	sprintf
2039:..\src/command_processing.c ****             strcat(info_string, str);
 15392              		.loc 1 2039 0
 15393 082c 07F11803 		add	r3, r7, #24
 15394 0830 1946     		mov	r1, r3
 15395 0832 7869     		ldr	r0, [r7, #20]
 15396 0834 FFF7FEFF 		bl	strcat
2040:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15397              		.loc 1 2040 0
 15398 0838 7869     		ldr	r0, [r7, #20]
 15399 083a FFF7FEFF 		bl	strlen
 15400 083e 0346     		mov	r3, r0
 15401 0840 1A46     		mov	r2, r3
 15402 0842 7B69     		ldr	r3, [r7, #20]
 15403 0844 1344     		add	r3, r3, r2
 15404 0846 554A     		ldr	r2, .L692+12
 15405 0848 1188     		ldrh	r1, [r2]	@ unaligned
 15406 084a 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 347


 15407 084c 1980     		strh	r1, [r3]	@ unaligned
 15408 084e 9A70     		strb	r2, [r3, #2]
2041:..\src/command_processing.c ****             
2042:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 15409              		.loc 1 2042 0
 15410 0850 D7F88030 		ldr	r3, [r7, #128]
 15411 0854 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15412 0858 012B     		cmp	r3, #1
 15413 085a 23D1     		bne	.L599
2043:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 15414              		.loc 1 2043 0
 15415 085c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15416 0860 5C1C     		adds	r4, r3, #1
 15417 0862 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15418 0866 4A4A     		ldr	r2, .L692
 15419 0868 3421     		movs	r1, #52
 15420 086a 01FB03F3 		mul	r3, r1, r3
 15421 086e 1344     		add	r3, r3, r2
 15422 0870 1433     		adds	r3, r3, #20
 15423 0872 1B68     		ldr	r3, [r3]
 15424 0874 07F11800 		add	r0, r7, #24
 15425 0878 2246     		mov	r2, r4
 15426 087a 5049     		ldr	r1, .L692+44
 15427 087c FFF7FEFF 		bl	sprintf
2044:..\src/command_processing.c ****                 strcat(info_string, str);
 15428              		.loc 1 2044 0
 15429 0880 07F11803 		add	r3, r7, #24
 15430 0884 1946     		mov	r1, r3
 15431 0886 7869     		ldr	r0, [r7, #20]
 15432 0888 FFF7FEFF 		bl	strcat
2045:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15433              		.loc 1 2045 0
 15434 088c 7869     		ldr	r0, [r7, #20]
 15435 088e FFF7FEFF 		bl	strlen
 15436 0892 0346     		mov	r3, r0
 15437 0894 1A46     		mov	r2, r3
 15438 0896 7B69     		ldr	r3, [r7, #20]
 15439 0898 1344     		add	r3, r3, r2
 15440 089a 404A     		ldr	r2, .L692+12
 15441 089c 1188     		ldrh	r1, [r2]	@ unaligned
 15442 089e 9278     		ldrb	r2, [r2, #2]
 15443 08a0 1980     		strh	r1, [r3]	@ unaligned
 15444 08a2 9A70     		strb	r2, [r3, #2]
 15445              	.L599:
2046:..\src/command_processing.c ****             }
2047:..\src/command_processing.c ****             
2048:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 15446              		.loc 1 2048 0
 15447 08a4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15448 08a8 5A1C     		adds	r2, r3, #1
 15449 08aa 07F11803 		add	r3, r7, #24
 15450 08ae 4449     		ldr	r1, .L692+48
 15451 08b0 1846     		mov	r0, r3
 15452 08b2 FFF7FEFF 		bl	sprintf
2049:..\src/command_processing.c ****             strcat(info_string, str);
 15453              		.loc 1 2049 0
 15454 08b6 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 348


 15455 08ba 1946     		mov	r1, r3
 15456 08bc 7869     		ldr	r0, [r7, #20]
 15457 08be FFF7FEFF 		bl	strcat
2050:..\src/command_processing.c **** 
2051:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 15458              		.loc 1 2051 0
 15459 08c2 7869     		ldr	r0, [r7, #20]
 15460 08c4 FFF7FEFF 		bl	strlen
 15461 08c8 0346     		mov	r3, r0
 15462 08ca 1A46     		mov	r2, r3
 15463 08cc 7B69     		ldr	r3, [r7, #20]
 15464 08ce 1344     		add	r3, r3, r2
 15465 08d0 3C4A     		ldr	r2, .L692+52
 15466 08d2 1D46     		mov	r5, r3
 15467 08d4 1446     		mov	r4, r2
 15468 08d6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15469 08d8 2860     		str	r0, [r5]	@ unaligned
 15470 08da 6960     		str	r1, [r5, #4]	@ unaligned
 15471 08dc AA60     		str	r2, [r5, #8]	@ unaligned
 15472 08de EB60     		str	r3, [r5, #12]	@ unaligned
 15473 08e0 2378     		ldrb	r3, [r4]
 15474 08e2 2B74     		strb	r3, [r5, #16]
2052:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15475              		.loc 1 2052 0
 15476 08e4 D7F88030 		ldr	r3, [r7, #128]
 15477 08e8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15478 08ec 032B     		cmp	r3, #3
 15479 08ee 73D0     		beq	.L600
2053:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15480              		.loc 1 2053 0
 15481 08f0 D7F88030 		ldr	r3, [r7, #128]
 15482 08f4 1B68     		ldr	r3, [r3]
 15483 08f6 1846     		mov	r0, r3
 15484 08f8 FFF7FEFF 		bl	__aeabi_i2d
 15485 08fc 4FF00002 		mov	r2, #0
 15486 0900 314B     		ldr	r3, .L692+56
 15487 0902 FFF7FEFF 		bl	__aeabi_ddiv
 15488 0906 0346     		mov	r3, r0
 15489 0908 0C46     		mov	r4, r1
 15490 090a 07F11800 		add	r0, r7, #24
 15491 090e 1A46     		mov	r2, r3
 15492 0910 2346     		mov	r3, r4
 15493 0912 2E49     		ldr	r1, .L692+60
 15494 0914 FFF7FEFF 		bl	sprintf
2054:..\src/command_processing.c ****                 strcat(info_string, str);
 15495              		.loc 1 2054 0
 15496 0918 07F11803 		add	r3, r7, #24
 15497 091c 1946     		mov	r1, r3
 15498 091e 7869     		ldr	r0, [r7, #20]
 15499 0920 FFF7FEFF 		bl	strcat
2055:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15500              		.loc 1 2055 0
 15501 0924 D7F88030 		ldr	r3, [r7, #128]
 15502 0928 5B68     		ldr	r3, [r3, #4]
 15503 092a 1846     		mov	r0, r3
 15504 092c FFF7FEFF 		bl	__aeabi_i2d
 15505 0930 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 349


 15506 0934 244B     		ldr	r3, .L692+56
 15507 0936 FFF7FEFF 		bl	__aeabi_ddiv
 15508 093a 0346     		mov	r3, r0
 15509 093c 0C46     		mov	r4, r1
 15510 093e 07F11800 		add	r0, r7, #24
 15511 0942 1A46     		mov	r2, r3
 15512 0944 2346     		mov	r3, r4
 15513 0946 2249     		ldr	r1, .L692+64
 15514 0948 FFF7FEFF 		bl	sprintf
2056:..\src/command_processing.c ****                 strcat(info_string, str);
 15515              		.loc 1 2056 0
 15516 094c 07F11803 		add	r3, r7, #24
 15517 0950 1946     		mov	r1, r3
 15518 0952 7869     		ldr	r0, [r7, #20]
 15519 0954 FFF7FEFF 		bl	strcat
2057:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15520              		.loc 1 2057 0
 15521 0958 D7F88030 		ldr	r3, [r7, #128]
 15522 095c 9B68     		ldr	r3, [r3, #8]
 15523 095e 1846     		mov	r0, r3
 15524 0960 FFF7FEFF 		bl	__aeabi_i2d
 15525 0964 4FF00002 		mov	r2, #0
 15526 0968 174B     		ldr	r3, .L692+56
 15527 096a FFF7FEFF 		bl	__aeabi_ddiv
 15528 096e 0346     		mov	r3, r0
 15529 0970 0C46     		mov	r4, r1
 15530 0972 07F11800 		add	r0, r7, #24
 15531 0976 1A46     		mov	r2, r3
 15532 0978 2346     		mov	r3, r4
 15533 097a 1649     		ldr	r1, .L692+68
 15534 097c FFF7FEFF 		bl	sprintf
2058:..\src/command_processing.c ****                 strcat(info_string, str);
 15535              		.loc 1 2058 0
 15536 0980 07F11803 		add	r3, r7, #24
 15537 0984 1946     		mov	r1, r3
 15538 0986 7869     		ldr	r0, [r7, #20]
 15539 0988 FFF7FEFF 		bl	strcat
 15540 098c 72E0     		b	.L601
 15541              	.L693:
 15542 098e 00BF     		.align	2
 15543              	.L692:
 15544 0990 00000000 		.word	g_meas
 15545 0994 9C130000 		.word	.LC183
 15546 0998 A0130000 		.word	.LC184
 15547 099c 58110000 		.word	.LC152
 15548 09a0 00000000 		.word	g_adc_measOld
 15549 09a4 A4130000 		.word	.LC185
 15550 09a8 00000000 		.word	dev_tension
 15551 09ac C4130000 		.word	.LC186
 15552 09b0 00000000 		.word	pow_tension
 15553 09b4 E4130000 		.word	.LC187
 15554 09b8 0C140000 		.word	.LC188
 15555 09bc 24140000 		.word	.LC189
 15556 09c0 4C140000 		.word	.LC190
 15557 09c4 68140000 		.word	.LC191
 15558 09c8 0000F040 		.word	1089470464
 15559 09cc 7C140000 		.word	.LC192
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 350


 15560 09d0 88140000 		.word	.LC193
 15561 09d4 94140000 		.word	.LC194
 15562              	.L600:
2059:..\src/command_processing.c ****             }
2060:..\src/command_processing.c ****             else { 
2061:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15563              		.loc 1 2061 0
 15564 09d8 D7F88030 		ldr	r3, [r7, #128]
 15565 09dc 9B69     		ldr	r3, [r3, #24]
 15566 09de 1846     		mov	r0, r3
 15567 09e0 FFF7FEFF 		bl	__aeabi_i2d
 15568 09e4 4FF00002 		mov	r2, #0
 15569 09e8 CE4B     		ldr	r3, .L694
 15570 09ea FFF7FEFF 		bl	__aeabi_ddiv
 15571 09ee 0346     		mov	r3, r0
 15572 09f0 0C46     		mov	r4, r1
 15573 09f2 07F11800 		add	r0, r7, #24
 15574 09f6 1A46     		mov	r2, r3
 15575 09f8 2346     		mov	r3, r4
 15576 09fa CB49     		ldr	r1, .L694+4
 15577 09fc FFF7FEFF 		bl	sprintf
2062:..\src/command_processing.c ****                 strcat(info_string, str);
 15578              		.loc 1 2062 0
 15579 0a00 07F11803 		add	r3, r7, #24
 15580 0a04 1946     		mov	r1, r3
 15581 0a06 7869     		ldr	r0, [r7, #20]
 15582 0a08 FFF7FEFF 		bl	strcat
2063:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15583              		.loc 1 2063 0
 15584 0a0c D7F88030 		ldr	r3, [r7, #128]
 15585 0a10 DB69     		ldr	r3, [r3, #28]
 15586 0a12 1846     		mov	r0, r3
 15587 0a14 FFF7FEFF 		bl	__aeabi_i2d
 15588 0a18 4FF00002 		mov	r2, #0
 15589 0a1c C14B     		ldr	r3, .L694
 15590 0a1e FFF7FEFF 		bl	__aeabi_ddiv
 15591 0a22 0346     		mov	r3, r0
 15592 0a24 0C46     		mov	r4, r1
 15593 0a26 07F11800 		add	r0, r7, #24
 15594 0a2a 1A46     		mov	r2, r3
 15595 0a2c 2346     		mov	r3, r4
 15596 0a2e BF49     		ldr	r1, .L694+8
 15597 0a30 FFF7FEFF 		bl	sprintf
2064:..\src/command_processing.c ****                 strcat(info_string, str);
 15598              		.loc 1 2064 0
 15599 0a34 07F11803 		add	r3, r7, #24
 15600 0a38 1946     		mov	r1, r3
 15601 0a3a 7869     		ldr	r0, [r7, #20]
 15602 0a3c FFF7FEFF 		bl	strcat
2065:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15603              		.loc 1 2065 0
 15604 0a40 D7F88030 		ldr	r3, [r7, #128]
 15605 0a44 1B6A     		ldr	r3, [r3, #32]
 15606 0a46 1846     		mov	r0, r3
 15607 0a48 FFF7FEFF 		bl	__aeabi_i2d
 15608 0a4c 4FF00002 		mov	r2, #0
 15609 0a50 B44B     		ldr	r3, .L694
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 351


 15610 0a52 FFF7FEFF 		bl	__aeabi_ddiv
 15611 0a56 0346     		mov	r3, r0
 15612 0a58 0C46     		mov	r4, r1
 15613 0a5a 07F11800 		add	r0, r7, #24
 15614 0a5e 1A46     		mov	r2, r3
 15615 0a60 2346     		mov	r3, r4
 15616 0a62 B349     		ldr	r1, .L694+12
 15617 0a64 FFF7FEFF 		bl	sprintf
2066:..\src/command_processing.c ****                 strcat(info_string, str);
 15618              		.loc 1 2066 0
 15619 0a68 07F11803 		add	r3, r7, #24
 15620 0a6c 1946     		mov	r1, r3
 15621 0a6e 7869     		ldr	r0, [r7, #20]
 15622 0a70 FFF7FEFF 		bl	strcat
 15623              	.L601:
2067:..\src/command_processing.c ****             }
2068:..\src/command_processing.c **** 
2069:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15624              		.loc 1 2069 0
 15625 0a74 7869     		ldr	r0, [r7, #20]
 15626 0a76 FFF7FEFF 		bl	strlen
 15627 0a7a 0346     		mov	r3, r0
 15628 0a7c 1A46     		mov	r2, r3
 15629 0a7e 7B69     		ldr	r3, [r7, #20]
 15630 0a80 1344     		add	r3, r3, r2
 15631 0a82 AC4A     		ldr	r2, .L694+16
 15632 0a84 1D46     		mov	r5, r3
 15633 0a86 1446     		mov	r4, r2
 15634 0a88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15635 0a8a 2860     		str	r0, [r5]	@ unaligned
 15636 0a8c 6960     		str	r1, [r5, #4]	@ unaligned
 15637 0a8e AA60     		str	r2, [r5, #8]	@ unaligned
 15638 0a90 EB60     		str	r3, [r5, #12]	@ unaligned
 15639 0a92 03CC     		ldmia	r4!, {r0, r1}
 15640 0a94 2861     		str	r0, [r5, #16]	@ unaligned
 15641 0a96 6961     		str	r1, [r5, #20]	@ unaligned
 15642 0a98 2378     		ldrb	r3, [r4]
 15643 0a9a 2B76     		strb	r3, [r5, #24]
2070:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15644              		.loc 1 2070 0
 15645 0a9c D7F88030 		ldr	r3, [r7, #128]
 15646 0aa0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15647 0aa4 032B     		cmp	r3, #3
 15648 0aa6 4ED0     		beq	.L602
2071:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15649              		.loc 1 2071 0
 15650 0aa8 D7F88030 		ldr	r3, [r7, #128]
 15651 0aac DB68     		ldr	r3, [r3, #12]
 15652 0aae 1846     		mov	r0, r3
 15653 0ab0 FFF7FEFF 		bl	__aeabi_i2d
 15654 0ab4 4FF00002 		mov	r2, #0
 15655 0ab8 9A4B     		ldr	r3, .L694
 15656 0aba FFF7FEFF 		bl	__aeabi_ddiv
 15657 0abe 0346     		mov	r3, r0
 15658 0ac0 0C46     		mov	r4, r1
 15659 0ac2 07F11800 		add	r0, r7, #24
 15660 0ac6 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 352


 15661 0ac8 2346     		mov	r3, r4
 15662 0aca 9749     		ldr	r1, .L694+4
 15663 0acc FFF7FEFF 		bl	sprintf
2072:..\src/command_processing.c ****                 strcat(info_string, str);
 15664              		.loc 1 2072 0
 15665 0ad0 07F11803 		add	r3, r7, #24
 15666 0ad4 1946     		mov	r1, r3
 15667 0ad6 7869     		ldr	r0, [r7, #20]
 15668 0ad8 FFF7FEFF 		bl	strcat
2073:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 15669              		.loc 1 2073 0
 15670 0adc D7F88030 		ldr	r3, [r7, #128]
 15671 0ae0 1B69     		ldr	r3, [r3, #16]
 15672 0ae2 1846     		mov	r0, r3
 15673 0ae4 FFF7FEFF 		bl	__aeabi_i2d
 15674 0ae8 4FF00002 		mov	r2, #0
 15675 0aec 8D4B     		ldr	r3, .L694
 15676 0aee FFF7FEFF 		bl	__aeabi_ddiv
 15677 0af2 0346     		mov	r3, r0
 15678 0af4 0C46     		mov	r4, r1
 15679 0af6 07F11800 		add	r0, r7, #24
 15680 0afa 1A46     		mov	r2, r3
 15681 0afc 2346     		mov	r3, r4
 15682 0afe 8B49     		ldr	r1, .L694+8
 15683 0b00 FFF7FEFF 		bl	sprintf
2074:..\src/command_processing.c ****                 strcat(info_string, str);
 15684              		.loc 1 2074 0
 15685 0b04 07F11803 		add	r3, r7, #24
 15686 0b08 1946     		mov	r1, r3
 15687 0b0a 7869     		ldr	r0, [r7, #20]
 15688 0b0c FFF7FEFF 		bl	strcat
2075:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15689              		.loc 1 2075 0
 15690 0b10 D7F88030 		ldr	r3, [r7, #128]
 15691 0b14 5B69     		ldr	r3, [r3, #20]
 15692 0b16 1846     		mov	r0, r3
 15693 0b18 FFF7FEFF 		bl	__aeabi_i2d
 15694 0b1c 4FF00002 		mov	r2, #0
 15695 0b20 804B     		ldr	r3, .L694
 15696 0b22 FFF7FEFF 		bl	__aeabi_ddiv
 15697 0b26 0346     		mov	r3, r0
 15698 0b28 0C46     		mov	r4, r1
 15699 0b2a 07F11800 		add	r0, r7, #24
 15700 0b2e 1A46     		mov	r2, r3
 15701 0b30 2346     		mov	r3, r4
 15702 0b32 7F49     		ldr	r1, .L694+12
 15703 0b34 FFF7FEFF 		bl	sprintf
2076:..\src/command_processing.c ****                 strcat(info_string, str);
 15704              		.loc 1 2076 0
 15705 0b38 07F11803 		add	r3, r7, #24
 15706 0b3c 1946     		mov	r1, r3
 15707 0b3e 7869     		ldr	r0, [r7, #20]
 15708 0b40 FFF7FEFF 		bl	strcat
 15709 0b44 4DE0     		b	.L603
 15710              	.L602:
2077:..\src/command_processing.c **** 
2078:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 353


2079:..\src/command_processing.c ****             else {
2080:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15711              		.loc 1 2080 0
 15712 0b46 D7F88030 		ldr	r3, [r7, #128]
 15713 0b4a 5B6A     		ldr	r3, [r3, #36]
 15714 0b4c 1846     		mov	r0, r3
 15715 0b4e FFF7FEFF 		bl	__aeabi_i2d
 15716 0b52 4FF00002 		mov	r2, #0
 15717 0b56 734B     		ldr	r3, .L694
 15718 0b58 FFF7FEFF 		bl	__aeabi_ddiv
 15719 0b5c 0346     		mov	r3, r0
 15720 0b5e 0C46     		mov	r4, r1
 15721 0b60 07F11800 		add	r0, r7, #24
 15722 0b64 1A46     		mov	r2, r3
 15723 0b66 2346     		mov	r3, r4
 15724 0b68 6F49     		ldr	r1, .L694+4
 15725 0b6a FFF7FEFF 		bl	sprintf
2081:..\src/command_processing.c ****                 strcat(info_string, str);
 15726              		.loc 1 2081 0
 15727 0b6e 07F11803 		add	r3, r7, #24
 15728 0b72 1946     		mov	r1, r3
 15729 0b74 7869     		ldr	r0, [r7, #20]
 15730 0b76 FFF7FEFF 		bl	strcat
2082:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15731              		.loc 1 2082 0
 15732 0b7a D7F88030 		ldr	r3, [r7, #128]
 15733 0b7e 9B6A     		ldr	r3, [r3, #40]
 15734 0b80 1846     		mov	r0, r3
 15735 0b82 FFF7FEFF 		bl	__aeabi_i2d
 15736 0b86 4FF00002 		mov	r2, #0
 15737 0b8a 664B     		ldr	r3, .L694
 15738 0b8c FFF7FEFF 		bl	__aeabi_ddiv
 15739 0b90 0346     		mov	r3, r0
 15740 0b92 0C46     		mov	r4, r1
 15741 0b94 07F11800 		add	r0, r7, #24
 15742 0b98 1A46     		mov	r2, r3
 15743 0b9a 2346     		mov	r3, r4
 15744 0b9c 6349     		ldr	r1, .L694+8
 15745 0b9e FFF7FEFF 		bl	sprintf
2083:..\src/command_processing.c ****                 strcat(info_string, str);
 15746              		.loc 1 2083 0
 15747 0ba2 07F11803 		add	r3, r7, #24
 15748 0ba6 1946     		mov	r1, r3
 15749 0ba8 7869     		ldr	r0, [r7, #20]
 15750 0baa FFF7FEFF 		bl	strcat
2084:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15751              		.loc 1 2084 0
 15752 0bae D7F88030 		ldr	r3, [r7, #128]
 15753 0bb2 DB6A     		ldr	r3, [r3, #44]
 15754 0bb4 1846     		mov	r0, r3
 15755 0bb6 FFF7FEFF 		bl	__aeabi_i2d
 15756 0bba 4FF00002 		mov	r2, #0
 15757 0bbe 594B     		ldr	r3, .L694
 15758 0bc0 FFF7FEFF 		bl	__aeabi_ddiv
 15759 0bc4 0346     		mov	r3, r0
 15760 0bc6 0C46     		mov	r4, r1
 15761 0bc8 07F11800 		add	r0, r7, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 354


 15762 0bcc 1A46     		mov	r2, r3
 15763 0bce 2346     		mov	r3, r4
 15764 0bd0 5749     		ldr	r1, .L694+12
 15765 0bd2 FFF7FEFF 		bl	sprintf
2085:..\src/command_processing.c ****                 strcat(info_string, str);
 15766              		.loc 1 2085 0
 15767 0bd6 07F11803 		add	r3, r7, #24
 15768 0bda 1946     		mov	r1, r3
 15769 0bdc 7869     		ldr	r0, [r7, #20]
 15770 0bde FFF7FEFF 		bl	strcat
 15771              	.L603:
2086:..\src/command_processing.c ****             }
2087:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15772              		.loc 1 2087 0
 15773 0be2 D7F88030 		ldr	r3, [r7, #128]
 15774 0be6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 15775 0bea 012B     		cmp	r3, #1
 15776 0bec 14D1     		bne	.L604
2088:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 15777              		.loc 1 2088 0
 15778 0bee 7869     		ldr	r0, [r7, #20]
 15779 0bf0 FFF7FEFF 		bl	strlen
 15780 0bf4 0346     		mov	r3, r0
 15781 0bf6 1A46     		mov	r2, r3
 15782 0bf8 7B69     		ldr	r3, [r7, #20]
 15783 0bfa 1344     		add	r3, r3, r2
 15784 0bfc 4E4A     		ldr	r2, .L694+20
 15785 0bfe 1D46     		mov	r5, r3
 15786 0c00 1446     		mov	r4, r2
 15787 0c02 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15788 0c04 2860     		str	r0, [r5]	@ unaligned
 15789 0c06 6960     		str	r1, [r5, #4]	@ unaligned
 15790 0c08 AA60     		str	r2, [r5, #8]	@ unaligned
 15791 0c0a EB60     		str	r3, [r5, #12]	@ unaligned
 15792 0c0c 03CC     		ldmia	r4!, {r0, r1}
 15793 0c0e 2861     		str	r0, [r5, #16]	@ unaligned
 15794 0c10 6961     		str	r1, [r5, #20]	@ unaligned
 15795 0c12 2388     		ldrh	r3, [r4]	@ unaligned
 15796 0c14 2B83     		strh	r3, [r5, #24]	@ unaligned
 15797 0c16 13E0     		b	.L605
 15798              	.L604:
2089:..\src/command_processing.c ****             else
2090:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 15799              		.loc 1 2090 0
 15800 0c18 7869     		ldr	r0, [r7, #20]
 15801 0c1a FFF7FEFF 		bl	strlen
 15802 0c1e 0346     		mov	r3, r0
 15803 0c20 1A46     		mov	r2, r3
 15804 0c22 7B69     		ldr	r3, [r7, #20]
 15805 0c24 1344     		add	r3, r3, r2
 15806 0c26 454A     		ldr	r2, .L694+24
 15807 0c28 1D46     		mov	r5, r3
 15808 0c2a 1446     		mov	r4, r2
 15809 0c2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15810 0c2e 2860     		str	r0, [r5]	@ unaligned
 15811 0c30 6960     		str	r1, [r5, #4]	@ unaligned
 15812 0c32 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 355


 15813 0c34 EB60     		str	r3, [r5, #12]	@ unaligned
 15814 0c36 03CC     		ldmia	r4!, {r0, r1}
 15815 0c38 2861     		str	r0, [r5, #16]	@ unaligned
 15816 0c3a 6961     		str	r1, [r5, #20]	@ unaligned
 15817 0c3c 2378     		ldrb	r3, [r4]
 15818 0c3e 2B76     		strb	r3, [r5, #24]
 15819              	.L605:
2091:..\src/command_processing.c **** 
2092:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15820              		.loc 1 2092 0
 15821 0c40 D7F88030 		ldr	r3, [r7, #128]
 15822 0c44 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15823 0c48 072B     		cmp	r3, #7
 15824 0c4a 00F2EA80 		bhi	.L606
 15825 0c4e 01A2     		adr	r2, .L608
 15826 0c50 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15827              		.p2align 2
 15828              	.L608:
 15829 0c54 750C0000 		.word	.L607+1
 15830 0c58 990C0000 		.word	.L609+1
 15831 0c5c C10C0000 		.word	.L610+1
 15832 0c60 F30C0000 		.word	.L611+1
 15833 0c64 510D0000 		.word	.L612+1
 15834 0c68 7F0D0000 		.word	.L613+1
 15835 0c6c AF0D0000 		.word	.L614+1
 15836 0c70 DD0D0000 		.word	.L615+1
 15837              		.p2align 1
 15838              	.L607:
2093:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2094:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15839              		.loc 1 2094 0
 15840 0c74 7869     		ldr	r0, [r7, #20]
 15841 0c76 FFF7FEFF 		bl	strlen
 15842 0c7a 0346     		mov	r3, r0
 15843 0c7c 1A46     		mov	r2, r3
 15844 0c7e 7B69     		ldr	r3, [r7, #20]
 15845 0c80 1344     		add	r3, r3, r2
 15846 0c82 2F4A     		ldr	r2, .L694+28
 15847 0c84 1D46     		mov	r5, r3
 15848 0c86 1446     		mov	r4, r2
 15849 0c88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15850 0c8a 2860     		str	r0, [r5]	@ unaligned
 15851 0c8c 6960     		str	r1, [r5, #4]	@ unaligned
 15852 0c8e AA60     		str	r2, [r5, #8]	@ unaligned
 15853 0c90 EB60     		str	r3, [r5, #12]	@ unaligned
 15854 0c92 2388     		ldrh	r3, [r4]	@ unaligned
 15855 0c94 2B82     		strh	r3, [r5, #16]	@ unaligned
2095:..\src/command_processing.c ****                     break;
 15856              		.loc 1 2095 0
 15857 0c96 C4E0     		b	.L606
 15858              	.L609:
2096:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2097:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15859              		.loc 1 2097 0
 15860 0c98 7869     		ldr	r0, [r7, #20]
 15861 0c9a FFF7FEFF 		bl	strlen
 15862 0c9e 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 356


 15863 0ca0 1A46     		mov	r2, r3
 15864 0ca2 7B69     		ldr	r3, [r7, #20]
 15865 0ca4 1344     		add	r3, r3, r2
 15866 0ca6 274A     		ldr	r2, .L694+32
 15867 0ca8 1D46     		mov	r5, r3
 15868 0caa 1446     		mov	r4, r2
 15869 0cac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15870 0cae 2860     		str	r0, [r5]	@ unaligned
 15871 0cb0 6960     		str	r1, [r5, #4]	@ unaligned
 15872 0cb2 AA60     		str	r2, [r5, #8]	@ unaligned
 15873 0cb4 EB60     		str	r3, [r5, #12]	@ unaligned
 15874 0cb6 2068     		ldr	r0, [r4]	@ unaligned
 15875 0cb8 2861     		str	r0, [r5, #16]	@ unaligned
 15876 0cba 2379     		ldrb	r3, [r4, #4]
 15877 0cbc 2B75     		strb	r3, [r5, #20]
2098:..\src/command_processing.c ****                     break;
 15878              		.loc 1 2098 0
 15879 0cbe B0E0     		b	.L606
 15880              	.L610:
2099:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2100:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 15881              		.loc 1 2100 0
 15882 0cc0 7869     		ldr	r0, [r7, #20]
 15883 0cc2 FFF7FEFF 		bl	strlen
 15884 0cc6 0346     		mov	r3, r0
 15885 0cc8 1A46     		mov	r2, r3
 15886 0cca 7B69     		ldr	r3, [r7, #20]
 15887 0ccc 1344     		add	r3, r3, r2
 15888 0cce 1E4A     		ldr	r2, .L694+36
 15889 0cd0 1D46     		mov	r5, r3
 15890 0cd2 1446     		mov	r4, r2
 15891 0cd4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15892 0cd6 2860     		str	r0, [r5]	@ unaligned
 15893 0cd8 6960     		str	r1, [r5, #4]	@ unaligned
 15894 0cda AA60     		str	r2, [r5, #8]	@ unaligned
 15895 0cdc EB60     		str	r3, [r5, #12]	@ unaligned
 15896 0cde 07CC     		ldmia	r4!, {r0, r1, r2}
 15897 0ce0 2861     		str	r0, [r5, #16]	@ unaligned
 15898 0ce2 6961     		str	r1, [r5, #20]	@ unaligned
 15899 0ce4 AA61     		str	r2, [r5, #24]	@ unaligned
 15900 0ce6 2388     		ldrh	r3, [r4]	@ unaligned
 15901 0ce8 A278     		ldrb	r2, [r4, #2]
 15902 0cea AB83     		strh	r3, [r5, #28]	@ unaligned
 15903 0cec 1346     		mov	r3, r2
 15904 0cee AB77     		strb	r3, [r5, #30]
2101:..\src/command_processing.c ****                     break;
 15905              		.loc 1 2101 0
 15906 0cf0 97E0     		b	.L606
 15907              	.L611:
2102:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2103:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 15908              		.loc 1 2103 0
 15909 0cf2 7869     		ldr	r0, [r7, #20]
 15910 0cf4 FFF7FEFF 		bl	strlen
 15911 0cf8 0346     		mov	r3, r0
 15912 0cfa 1A46     		mov	r2, r3
 15913 0cfc 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 357


 15914 0cfe 1344     		add	r3, r3, r2
 15915 0d00 124A     		ldr	r2, .L694+40
 15916 0d02 1D46     		mov	r5, r3
 15917 0d04 1446     		mov	r4, r2
 15918 0d06 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15919 0d08 2860     		str	r0, [r5]	@ unaligned
 15920 0d0a 6960     		str	r1, [r5, #4]	@ unaligned
 15921 0d0c AA60     		str	r2, [r5, #8]	@ unaligned
 15922 0d0e EB60     		str	r3, [r5, #12]	@ unaligned
 15923 0d10 03CC     		ldmia	r4!, {r0, r1}
 15924 0d12 2861     		str	r0, [r5, #16]	@ unaligned
 15925 0d14 6961     		str	r1, [r5, #20]	@ unaligned
 15926 0d16 2388     		ldrh	r3, [r4]	@ unaligned
 15927 0d18 A278     		ldrb	r2, [r4, #2]
 15928 0d1a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15929 0d1c 1346     		mov	r3, r2
 15930 0d1e AB76     		strb	r3, [r5, #26]
2104:..\src/command_processing.c ****                     break;
 15931              		.loc 1 2104 0
 15932 0d20 7FE0     		b	.L606
 15933              	.L695:
 15934 0d22 00BF     		.align	2
 15935              	.L694:
 15936 0d24 0000F040 		.word	1089470464
 15937 0d28 7C140000 		.word	.LC192
 15938 0d2c 88140000 		.word	.LC193
 15939 0d30 94140000 		.word	.LC194
 15940 0d34 A0140000 		.word	.LC195
 15941 0d38 BC140000 		.word	.LC196
 15942 0d3c D8140000 		.word	.LC197
 15943 0d40 F4140000 		.word	.LC198
 15944 0d44 08150000 		.word	.LC199
 15945 0d48 20150000 		.word	.LC200
 15946 0d4c 40150000 		.word	.LC201
 15947              	.L612:
2105:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2106:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15948              		.loc 1 2106 0
 15949 0d50 7869     		ldr	r0, [r7, #20]
 15950 0d52 FFF7FEFF 		bl	strlen
 15951 0d56 0346     		mov	r3, r0
 15952 0d58 1A46     		mov	r2, r3
 15953 0d5a 7B69     		ldr	r3, [r7, #20]
 15954 0d5c 1344     		add	r3, r3, r2
 15955 0d5e A44A     		ldr	r2, .L696
 15956 0d60 1C46     		mov	r4, r3
 15957 0d62 1546     		mov	r5, r2
 15958 0d64 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15959 0d66 2060     		str	r0, [r4]	@ unaligned
 15960 0d68 6160     		str	r1, [r4, #4]	@ unaligned
 15961 0d6a A260     		str	r2, [r4, #8]	@ unaligned
 15962 0d6c E360     		str	r3, [r4, #12]	@ unaligned
 15963 0d6e 2868     		ldr	r0, [r5]	@ unaligned
 15964 0d70 2061     		str	r0, [r4, #16]	@ unaligned
 15965 0d72 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15966 0d74 AA79     		ldrb	r2, [r5, #6]
 15967 0d76 A382     		strh	r3, [r4, #20]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 358


 15968 0d78 1346     		mov	r3, r2
 15969 0d7a A375     		strb	r3, [r4, #22]
2107:..\src/command_processing.c ****                     break;
 15970              		.loc 1 2107 0
 15971 0d7c 51E0     		b	.L606
 15972              	.L613:
2108:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2109:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15973              		.loc 1 2109 0
 15974 0d7e 7869     		ldr	r0, [r7, #20]
 15975 0d80 FFF7FEFF 		bl	strlen
 15976 0d84 0346     		mov	r3, r0
 15977 0d86 1A46     		mov	r2, r3
 15978 0d88 7B69     		ldr	r3, [r7, #20]
 15979 0d8a 1344     		add	r3, r3, r2
 15980 0d8c 994A     		ldr	r2, .L696+4
 15981 0d8e 1D46     		mov	r5, r3
 15982 0d90 1446     		mov	r4, r2
 15983 0d92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15984 0d94 2860     		str	r0, [r5]	@ unaligned
 15985 0d96 6960     		str	r1, [r5, #4]	@ unaligned
 15986 0d98 AA60     		str	r2, [r5, #8]	@ unaligned
 15987 0d9a EB60     		str	r3, [r5, #12]	@ unaligned
 15988 0d9c 03CC     		ldmia	r4!, {r0, r1}
 15989 0d9e 2861     		str	r0, [r5, #16]	@ unaligned
 15990 0da0 6961     		str	r1, [r5, #20]	@ unaligned
 15991 0da2 2388     		ldrh	r3, [r4]	@ unaligned
 15992 0da4 A278     		ldrb	r2, [r4, #2]
 15993 0da6 2B83     		strh	r3, [r5, #24]	@ unaligned
 15994 0da8 1346     		mov	r3, r2
 15995 0daa AB76     		strb	r3, [r5, #26]
2110:..\src/command_processing.c ****                     break;
 15996              		.loc 1 2110 0
 15997 0dac 39E0     		b	.L606
 15998              	.L614:
2111:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2112:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15999              		.loc 1 2112 0
 16000 0dae 7869     		ldr	r0, [r7, #20]
 16001 0db0 FFF7FEFF 		bl	strlen
 16002 0db4 0346     		mov	r3, r0
 16003 0db6 1A46     		mov	r2, r3
 16004 0db8 7B69     		ldr	r3, [r7, #20]
 16005 0dba 1344     		add	r3, r3, r2
 16006 0dbc 8E4A     		ldr	r2, .L696+8
 16007 0dbe 1C46     		mov	r4, r3
 16008 0dc0 1546     		mov	r5, r2
 16009 0dc2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16010 0dc4 2060     		str	r0, [r4]	@ unaligned
 16011 0dc6 6160     		str	r1, [r4, #4]	@ unaligned
 16012 0dc8 A260     		str	r2, [r4, #8]	@ unaligned
 16013 0dca E360     		str	r3, [r4, #12]	@ unaligned
 16014 0dcc 2868     		ldr	r0, [r5]	@ unaligned
 16015 0dce 2061     		str	r0, [r4, #16]	@ unaligned
 16016 0dd0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 16017 0dd2 AA79     		ldrb	r2, [r5, #6]
 16018 0dd4 A382     		strh	r3, [r4, #20]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 359


 16019 0dd6 1346     		mov	r3, r2
 16020 0dd8 A375     		strb	r3, [r4, #22]
2113:..\src/command_processing.c ****                     break;
 16021              		.loc 1 2113 0
 16022 0dda 22E0     		b	.L606
 16023              	.L615:
2114:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2115:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 16024              		.loc 1 2115 0
 16025 0ddc 7869     		ldr	r0, [r7, #20]
 16026 0dde FFF7FEFF 		bl	strlen
 16027 0de2 0346     		mov	r3, r0
 16028 0de4 1A46     		mov	r2, r3
 16029 0de6 7B69     		ldr	r3, [r7, #20]
 16030 0de8 1344     		add	r3, r3, r2
 16031 0dea 844A     		ldr	r2, .L696+12
 16032 0dec 1546     		mov	r5, r2
 16033 0dee 9E46     		mov	lr, r3
 16034 0df0 05F1200C 		add	ip, r5, #32
 16035              	.L616:
 16036 0df4 7446     		mov	r4, lr
 16037 0df6 2E46     		mov	r6, r5
 16038 0df8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16039 0dfa 2060     		str	r0, [r4]	@ unaligned
 16040 0dfc 6160     		str	r1, [r4, #4]	@ unaligned
 16041 0dfe A260     		str	r2, [r4, #8]	@ unaligned
 16042 0e00 E360     		str	r3, [r4, #12]	@ unaligned
 16043 0e02 1035     		adds	r5, r5, #16
 16044 0e04 0EF1100E 		add	lr, lr, #16
 16045 0e08 6545     		cmp	r5, ip
 16046 0e0a F3D1     		bne	.L616
 16047 0e0c 7446     		mov	r4, lr
 16048 0e0e 2B46     		mov	r3, r5
 16049 0e10 07CB     		ldmia	r3!, {r0, r1, r2}
 16050 0e12 2060     		str	r0, [r4]	@ unaligned
 16051 0e14 6160     		str	r1, [r4, #4]	@ unaligned
 16052 0e16 A260     		str	r2, [r4, #8]	@ unaligned
 16053 0e18 1A88     		ldrh	r2, [r3]	@ unaligned
 16054 0e1a 9B78     		ldrb	r3, [r3, #2]
 16055 0e1c A281     		strh	r2, [r4, #12]	@ unaligned
 16056 0e1e A373     		strb	r3, [r4, #14]
2116:..\src/command_processing.c ****                     break;
 16057              		.loc 1 2116 0
 16058 0e20 00BF     		nop
 16059              	.L606:
2117:..\src/command_processing.c ****             }
2118:..\src/command_processing.c **** 
2119:..\src/command_processing.c ****             switch(MOT->control_mode) {
 16060              		.loc 1 2119 0
 16061 0e22 D7F88030 		ldr	r3, [r7, #128]
 16062 0e26 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 16063 0e2a 032B     		cmp	r3, #3
 16064 0e2c 63D8     		bhi	.L687
 16065 0e2e 01A2     		adr	r2, .L619
 16066 0e30 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 16067              		.p2align 2
 16068              	.L619:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 360


 16069 0e34 450E0000 		.word	.L618+1
 16070 0e38 6F0E0000 		.word	.L620+1
 16071 0e3c 930E0000 		.word	.L621+1
 16072 0e40 B90E0000 		.word	.L622+1
 16073              		.p2align 1
 16074              	.L618:
2120:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2121:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 16075              		.loc 1 2121 0
 16076 0e44 7869     		ldr	r0, [r7, #20]
 16077 0e46 FFF7FEFF 		bl	strlen
 16078 0e4a 0346     		mov	r3, r0
 16079 0e4c 1A46     		mov	r2, r3
 16080 0e4e 7B69     		ldr	r3, [r7, #20]
 16081 0e50 1344     		add	r3, r3, r2
 16082 0e52 6B4A     		ldr	r2, .L696+16
 16083 0e54 1D46     		mov	r5, r3
 16084 0e56 1446     		mov	r4, r2
 16085 0e58 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16086 0e5a 2860     		str	r0, [r5]	@ unaligned
 16087 0e5c 6960     		str	r1, [r5, #4]	@ unaligned
 16088 0e5e AA60     		str	r2, [r5, #8]	@ unaligned
 16089 0e60 EB60     		str	r3, [r5, #12]	@ unaligned
 16090 0e62 03CC     		ldmia	r4!, {r0, r1}
 16091 0e64 2861     		str	r0, [r5, #16]	@ unaligned
 16092 0e66 6961     		str	r1, [r5, #20]	@ unaligned
 16093 0e68 2378     		ldrb	r3, [r4]
 16094 0e6a 2B76     		strb	r3, [r5, #24]
2122:..\src/command_processing.c ****                     break;
 16095              		.loc 1 2122 0
 16096 0e6c 44E0     		b	.L623
 16097              	.L620:
2123:..\src/command_processing.c ****                 case CONTROL_PWM:
2124:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 16098              		.loc 1 2124 0
 16099 0e6e 7869     		ldr	r0, [r7, #20]
 16100 0e70 FFF7FEFF 		bl	strlen
 16101 0e74 0346     		mov	r3, r0
 16102 0e76 1A46     		mov	r2, r3
 16103 0e78 7B69     		ldr	r3, [r7, #20]
 16104 0e7a 1344     		add	r3, r3, r2
 16105 0e7c 614A     		ldr	r2, .L696+20
 16106 0e7e 1D46     		mov	r5, r3
 16107 0e80 1446     		mov	r4, r2
 16108 0e82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16109 0e84 2860     		str	r0, [r5]	@ unaligned
 16110 0e86 6960     		str	r1, [r5, #4]	@ unaligned
 16111 0e88 AA60     		str	r2, [r5, #8]	@ unaligned
 16112 0e8a EB60     		str	r3, [r5, #12]	@ unaligned
 16113 0e8c 2068     		ldr	r0, [r4]	@ unaligned
 16114 0e8e 2861     		str	r0, [r5, #16]	@ unaligned
2125:..\src/command_processing.c ****                     break;
 16115              		.loc 1 2125 0
 16116 0e90 32E0     		b	.L623
 16117              	.L621:
2126:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2127:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 361


 16118              		.loc 1 2127 0
 16119 0e92 7869     		ldr	r0, [r7, #20]
 16120 0e94 FFF7FEFF 		bl	strlen
 16121 0e98 0346     		mov	r3, r0
 16122 0e9a 1A46     		mov	r2, r3
 16123 0e9c 7B69     		ldr	r3, [r7, #20]
 16124 0e9e 1344     		add	r3, r3, r2
 16125 0ea0 594A     		ldr	r2, .L696+24
 16126 0ea2 1D46     		mov	r5, r3
 16127 0ea4 1446     		mov	r4, r2
 16128 0ea6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16129 0ea8 2860     		str	r0, [r5]	@ unaligned
 16130 0eaa 6960     		str	r1, [r5, #4]	@ unaligned
 16131 0eac AA60     		str	r2, [r5, #8]	@ unaligned
 16132 0eae EB60     		str	r3, [r5, #12]	@ unaligned
 16133 0eb0 03CC     		ldmia	r4!, {r0, r1}
 16134 0eb2 2861     		str	r0, [r5, #16]	@ unaligned
 16135 0eb4 6961     		str	r1, [r5, #20]	@ unaligned
2128:..\src/command_processing.c ****                     break;
 16136              		.loc 1 2128 0
 16137 0eb6 1FE0     		b	.L623
 16138              	.L622:
2129:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2130:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 16139              		.loc 1 2130 0
 16140 0eb8 7869     		ldr	r0, [r7, #20]
 16141 0eba FFF7FEFF 		bl	strlen
 16142 0ebe 0346     		mov	r3, r0
 16143 0ec0 1A46     		mov	r2, r3
 16144 0ec2 7B69     		ldr	r3, [r7, #20]
 16145 0ec4 1344     		add	r3, r3, r2
 16146 0ec6 514A     		ldr	r2, .L696+28
 16147 0ec8 1446     		mov	r4, r2
 16148 0eca 9E46     		mov	lr, r3
 16149 0ecc 04F1200C 		add	ip, r4, #32
 16150              	.L624:
 16151 0ed0 7546     		mov	r5, lr
 16152 0ed2 2646     		mov	r6, r4
 16153 0ed4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16154 0ed6 2860     		str	r0, [r5]	@ unaligned
 16155 0ed8 6960     		str	r1, [r5, #4]	@ unaligned
 16156 0eda AA60     		str	r2, [r5, #8]	@ unaligned
 16157 0edc EB60     		str	r3, [r5, #12]	@ unaligned
 16158 0ede 1034     		adds	r4, r4, #16
 16159 0ee0 0EF1100E 		add	lr, lr, #16
 16160 0ee4 6445     		cmp	r4, ip
 16161 0ee6 F3D1     		bne	.L624
 16162 0ee8 7346     		mov	r3, lr
 16163 0eea 2246     		mov	r2, r4
 16164 0eec 1068     		ldr	r0, [r2]	@ unaligned
 16165 0eee 1860     		str	r0, [r3]	@ unaligned
 16166 0ef0 1279     		ldrb	r2, [r2, #4]
 16167 0ef2 1A71     		strb	r2, [r3, #4]
2131:..\src/command_processing.c ****                     break;
 16168              		.loc 1 2131 0
 16169 0ef4 00E0     		b	.L623
 16170              	.L687:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 362


2132:..\src/command_processing.c ****                 default:
2133:..\src/command_processing.c ****                     break;
 16171              		.loc 1 2133 0
 16172 0ef6 00BF     		nop
 16173              	.L623:
2134:..\src/command_processing.c ****             }
2135:..\src/command_processing.c **** 
2136:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 16174              		.loc 1 2136 0
 16175 0ef8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16176 0efc D7F88810 		ldr	r1, [r7, #136]
 16177 0f00 1346     		mov	r3, r2
 16178 0f02 5B00     		lsls	r3, r3, #1
 16179 0f04 1344     		add	r3, r3, r2
 16180 0f06 1B01     		lsls	r3, r3, #4
 16181 0f08 0B44     		add	r3, r3, r1
 16182 0f0a 03F5D873 		add	r3, r3, #432
 16183 0f0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16184 0f10 002B     		cmp	r3, #0
 16185 0f12 1CD0     		beq	.L625
2137:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 16186              		.loc 1 2137 0
 16187 0f14 7869     		ldr	r0, [r7, #20]
 16188 0f16 FFF7FEFF 		bl	strlen
 16189 0f1a 0346     		mov	r3, r0
 16190 0f1c 1A46     		mov	r2, r3
 16191 0f1e 7B69     		ldr	r3, [r7, #20]
 16192 0f20 1344     		add	r3, r3, r2
 16193 0f22 3B4A     		ldr	r2, .L696+32
 16194 0f24 1446     		mov	r4, r2
 16195 0f26 9E46     		mov	lr, r3
 16196 0f28 04F1200C 		add	ip, r4, #32
 16197              	.L626:
 16198 0f2c 7546     		mov	r5, lr
 16199 0f2e 2646     		mov	r6, r4
 16200 0f30 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16201 0f32 2860     		str	r0, [r5]	@ unaligned
 16202 0f34 6960     		str	r1, [r5, #4]	@ unaligned
 16203 0f36 AA60     		str	r2, [r5, #8]	@ unaligned
 16204 0f38 EB60     		str	r3, [r5, #12]	@ unaligned
 16205 0f3a 1034     		adds	r4, r4, #16
 16206 0f3c 0EF1100E 		add	lr, lr, #16
 16207 0f40 6445     		cmp	r4, ip
 16208 0f42 F3D1     		bne	.L626
 16209 0f44 7346     		mov	r3, lr
 16210 0f46 2246     		mov	r2, r4
 16211 0f48 1278     		ldrb	r2, [r2]
 16212 0f4a 1A70     		strb	r2, [r3]
 16213 0f4c 13E0     		b	.L627
 16214              	.L625:
2138:..\src/command_processing.c ****             else
2139:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 16215              		.loc 1 2139 0
 16216 0f4e 7869     		ldr	r0, [r7, #20]
 16217 0f50 FFF7FEFF 		bl	strlen
 16218 0f54 0346     		mov	r3, r0
 16219 0f56 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 363


 16220 0f58 7B69     		ldr	r3, [r7, #20]
 16221 0f5a 1344     		add	r3, r3, r2
 16222 0f5c 2D4A     		ldr	r2, .L696+36
 16223 0f5e 1C46     		mov	r4, r3
 16224 0f60 1546     		mov	r5, r2
 16225 0f62 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16226 0f64 2060     		str	r0, [r4]	@ unaligned
 16227 0f66 6160     		str	r1, [r4, #4]	@ unaligned
 16228 0f68 A260     		str	r2, [r4, #8]	@ unaligned
 16229 0f6a E360     		str	r3, [r4, #12]	@ unaligned
 16230 0f6c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16231 0f6e 2061     		str	r0, [r4, #16]	@ unaligned
 16232 0f70 6161     		str	r1, [r4, #20]	@ unaligned
 16233 0f72 A261     		str	r2, [r4, #24]	@ unaligned
 16234 0f74 E361     		str	r3, [r4, #28]	@ unaligned
 16235              	.L627:
2140:..\src/command_processing.c **** 
2141:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 16236              		.loc 1 2141 0
 16237 0f76 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16238 0f7a D7F88810 		ldr	r1, [r7, #136]
 16239 0f7e 1346     		mov	r3, r2
 16240 0f80 5B00     		lsls	r3, r3, #1
 16241 0f82 1344     		add	r3, r3, r2
 16242 0f84 1B01     		lsls	r3, r3, #4
 16243 0f86 0B44     		add	r3, r3, r1
 16244 0f88 03F5DA73 		add	r3, r3, #436
 16245 0f8c 93F90030 		ldrsb	r3, [r3]
 16246 0f90 1A46     		mov	r2, r3
 16247 0f92 07F11803 		add	r3, r7, #24
 16248 0f96 2049     		ldr	r1, .L696+40
 16249 0f98 1846     		mov	r0, r3
 16250 0f9a FFF7FEFF 		bl	sprintf
2142:..\src/command_processing.c ****             strcat(info_string, str);
 16251              		.loc 1 2142 0
 16252 0f9e 07F11803 		add	r3, r7, #24
 16253 0fa2 1946     		mov	r1, r3
 16254 0fa4 7869     		ldr	r0, [r7, #20]
 16255 0fa6 FFF7FEFF 		bl	strcat
2143:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2144:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 16256              		.loc 1 2144 0
 16257 0faa 7869     		ldr	r0, [r7, #20]
 16258 0fac FFF7FEFF 		bl	strlen
 16259 0fb0 0346     		mov	r3, r0
 16260 0fb2 1A46     		mov	r2, r3
 16261 0fb4 7B69     		ldr	r3, [r7, #20]
 16262 0fb6 1344     		add	r3, r3, r2
 16263 0fb8 184A     		ldr	r2, .L696+44
 16264 0fba 1446     		mov	r4, r2
 16265 0fbc 9E46     		mov	lr, r3
 16266 0fbe 04F1200C 		add	ip, r4, #32
 16267              	.L628:
 16268 0fc2 7546     		mov	r5, lr
 16269 0fc4 2646     		mov	r6, r4
 16270 0fc6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16271 0fc8 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 364


 16272 0fca 6960     		str	r1, [r5, #4]	@ unaligned
 16273 0fcc AA60     		str	r2, [r5, #8]	@ unaligned
 16274 0fce EB60     		str	r3, [r5, #12]	@ unaligned
 16275 0fd0 1034     		adds	r4, r4, #16
 16276 0fd2 0EF1100E 		add	lr, lr, #16
 16277 0fd6 6445     		cmp	r4, ip
 16278 0fd8 F3D1     		bne	.L628
 16279 0fda 7246     		mov	r2, lr
 16280 0fdc 2346     		mov	r3, r4
 16281 0fde 03CB     		ldmia	r3!, {r0, r1}
 16282 0fe0 1060     		str	r0, [r2]	@ unaligned
 16283 0fe2 5160     		str	r1, [r2, #4]	@ unaligned
 16284 0fe4 1B78     		ldrb	r3, [r3]
 16285 0fe6 1372     		strb	r3, [r2, #8]
2145:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16286              		.loc 1 2145 0
 16287 0fe8 0023     		movs	r3, #0
 16288 0fea C7F89430 		str	r3, [r7, #148]
 16289 0fee 48E0     		b	.L629
 16290              	.L697:
 16291              		.align	2
 16292              	.L696:
 16293 0ff0 5C150000 		.word	.LC202
 16294 0ff4 74150000 		.word	.LC203
 16295 0ff8 90150000 		.word	.LC204
 16296 0ffc A8150000 		.word	.LC205
 16297 1000 D8150000 		.word	.LC206
 16298 1004 F4150000 		.word	.LC207
 16299 1008 08160000 		.word	.LC208
 16300 100c 20160000 		.word	.LC209
 16301 1010 48160000 		.word	.LC210
 16302 1014 6C160000 		.word	.LC211
 16303 1018 8C160000 		.word	.LC212
 16304 101c A8160000 		.word	.LC213
 16305              	.L631:
2146:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16306              		.loc 1 2146 0
 16307 1020 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16308 1024 D7F88810 		ldr	r1, [r7, #136]
 16309 1028 1346     		mov	r3, r2
 16310 102a 5B00     		lsls	r3, r3, #1
 16311 102c 1344     		add	r3, r3, r2
 16312 102e 1B01     		lsls	r3, r3, #4
 16313 1030 CA18     		adds	r2, r1, r3
 16314 1032 D7F89430 		ldr	r3, [r7, #148]
 16315 1036 1344     		add	r3, r3, r2
 16316 1038 03F2B113 		addw	r3, r3, #433
 16317 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16318 103e 1A46     		mov	r2, r3
 16319 1040 07F11803 		add	r3, r7, #24
 16320 1044 AE49     		ldr	r1, .L698
 16321 1046 1846     		mov	r0, r3
 16322 1048 FFF7FEFF 		bl	sprintf
2147:..\src/command_processing.c ****                 strcat(info_string, str);
 16323              		.loc 1 2147 0
 16324 104c 07F11803 		add	r3, r7, #24
 16325 1050 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 365


 16326 1052 7869     		ldr	r0, [r7, #20]
 16327 1054 FFF7FEFF 		bl	strcat
2148:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16328              		.loc 1 2148 0
 16329 1058 D7F89430 		ldr	r3, [r7, #148]
 16330 105c 022B     		cmp	r3, #2
 16331 105e 0BD0     		beq	.L630
2149:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16332              		.loc 1 2149 0
 16333 1060 7869     		ldr	r0, [r7, #20]
 16334 1062 FFF7FEFF 		bl	strlen
 16335 1066 0346     		mov	r3, r0
 16336 1068 1A46     		mov	r2, r3
 16337 106a 7B69     		ldr	r3, [r7, #20]
 16338 106c 1344     		add	r3, r3, r2
 16339 106e A54A     		ldr	r2, .L698+4
 16340 1070 1188     		ldrh	r1, [r2]	@ unaligned
 16341 1072 9278     		ldrb	r2, [r2, #2]
 16342 1074 1980     		strh	r1, [r3]	@ unaligned
 16343 1076 9A70     		strb	r2, [r3, #2]
 16344              	.L630:
2145:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16345              		.loc 1 2145 0 discriminator 2
 16346 1078 D7F89430 		ldr	r3, [r7, #148]
 16347 107c 0133     		adds	r3, r3, #1
 16348 107e C7F89430 		str	r3, [r7, #148]
 16349              	.L629:
2145:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16350              		.loc 1 2145 0 is_stmt 0 discriminator 1
 16351 1082 D7F89430 		ldr	r3, [r7, #148]
 16352 1086 022B     		cmp	r3, #2
 16353 1088 CADD     		ble	.L631
2150:..\src/command_processing.c ****                 }                
2151:..\src/command_processing.c ****             }
2152:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16354              		.loc 1 2152 0 is_stmt 1
 16355 108a 7869     		ldr	r0, [r7, #20]
 16356 108c FFF7FEFF 		bl	strlen
 16357 1090 0346     		mov	r3, r0
 16358 1092 1A46     		mov	r2, r3
 16359 1094 7B69     		ldr	r3, [r7, #20]
 16360 1096 1344     		add	r3, r3, r2
 16361 1098 9B4A     		ldr	r2, .L698+8
 16362 109a 1188     		ldrh	r1, [r2]	@ unaligned
 16363 109c 9278     		ldrb	r2, [r2, #2]
 16364 109e 1980     		strh	r1, [r3]	@ unaligned
 16365 10a0 9A70     		strb	r2, [r3, #2]
2153:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 16366              		.loc 1 2153 0
 16367 10a2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16368 10a6 D7F88810 		ldr	r1, [r7, #136]
 16369 10aa 1346     		mov	r3, r2
 16370 10ac 5B00     		lsls	r3, r3, #1
 16371 10ae 1344     		add	r3, r3, r2
 16372 10b0 1B01     		lsls	r3, r3, #4
 16373 10b2 0B44     		add	r3, r3, r1
 16374 10b4 03F2B513 		addw	r3, r3, #437
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 366


 16375 10b8 93F90030 		ldrsb	r3, [r3]
 16376 10bc 1A46     		mov	r2, r3
 16377 10be 07F11803 		add	r3, r7, #24
 16378 10c2 9249     		ldr	r1, .L698+12
 16379 10c4 1846     		mov	r0, r3
 16380 10c6 FFF7FEFF 		bl	sprintf
2154:..\src/command_processing.c ****             strcat(info_string, str);
 16381              		.loc 1 2154 0
 16382 10ca 07F11803 		add	r3, r7, #24
 16383 10ce 1946     		mov	r1, r3
 16384 10d0 7869     		ldr	r0, [r7, #20]
 16385 10d2 FFF7FEFF 		bl	strcat
2155:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 16386              		.loc 1 2155 0
 16387 10d6 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16388 10da D7F88810 		ldr	r1, [r7, #136]
 16389 10de 1346     		mov	r3, r2
 16390 10e0 5B00     		lsls	r3, r3, #1
 16391 10e2 1344     		add	r3, r3, r2
 16392 10e4 1B01     		lsls	r3, r3, #4
 16393 10e6 0B44     		add	r3, r3, r1
 16394 10e8 03F5DB73 		add	r3, r3, #438
 16395 10ec 93F90030 		ldrsb	r3, [r3]
 16396 10f0 1A46     		mov	r2, r3
 16397 10f2 07F11803 		add	r3, r7, #24
 16398 10f6 8649     		ldr	r1, .L698+16
 16399 10f8 1846     		mov	r0, r3
 16400 10fa FFF7FEFF 		bl	sprintf
2156:..\src/command_processing.c ****             strcat(info_string, str);
 16401              		.loc 1 2156 0
 16402 10fe 07F11803 		add	r3, r7, #24
 16403 1102 1946     		mov	r1, r3
 16404 1104 7869     		ldr	r0, [r7, #20]
 16405 1106 FFF7FEFF 		bl	strcat
2157:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 16406              		.loc 1 2157 0
 16407 110a 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16408 110e D7F88810 		ldr	r1, [r7, #136]
 16409 1112 1346     		mov	r3, r2
 16410 1114 5B00     		lsls	r3, r3, #1
 16411 1116 1344     		add	r3, r3, r2
 16412 1118 1B01     		lsls	r3, r3, #4
 16413 111a 0B44     		add	r3, r3, r1
 16414 111c 03F2B713 		addw	r3, r3, #439
 16415 1120 93F90030 		ldrsb	r3, [r3]
 16416 1124 1A46     		mov	r2, r3
 16417 1126 07F11803 		add	r3, r7, #24
 16418 112a 7A49     		ldr	r1, .L698+20
 16419 112c 1846     		mov	r0, r3
 16420 112e FFF7FEFF 		bl	sprintf
2158:..\src/command_processing.c ****             strcat(info_string, str);
 16421              		.loc 1 2158 0
 16422 1132 07F11803 		add	r3, r7, #24
 16423 1136 1946     		mov	r1, r3
 16424 1138 7869     		ldr	r0, [r7, #20]
 16425 113a FFF7FEFF 		bl	strcat
2159:..\src/command_processing.c **** #endif            
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 367


2160:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16426              		.loc 1 2160 0
 16427 113e 7869     		ldr	r0, [r7, #20]
 16428 1140 FFF7FEFF 		bl	strlen
 16429 1144 0346     		mov	r3, r0
 16430 1146 1A46     		mov	r2, r3
 16431 1148 7B69     		ldr	r3, [r7, #20]
 16432 114a 1344     		add	r3, r3, r2
 16433 114c 6E4A     		ldr	r2, .L698+8
 16434 114e 1188     		ldrh	r1, [r2]	@ unaligned
 16435 1150 9278     		ldrb	r2, [r2, #2]
 16436 1152 1980     		strh	r1, [r3]	@ unaligned
 16437 1154 9A70     		strb	r2, [r3, #2]
2161:..\src/command_processing.c **** 
2162:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 16438              		.loc 1 2162 0
 16439 1156 7869     		ldr	r0, [r7, #20]
 16440 1158 FFF7FEFF 		bl	strlen
 16441 115c 0346     		mov	r3, r0
 16442 115e 1A46     		mov	r2, r3
 16443 1160 7B69     		ldr	r3, [r7, #20]
 16444 1162 1344     		add	r3, r3, r2
 16445 1164 6C4A     		ldr	r2, .L698+24
 16446 1166 1D46     		mov	r5, r3
 16447 1168 1446     		mov	r4, r2
 16448 116a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16449 116c 2860     		str	r0, [r5]	@ unaligned
 16450 116e 6960     		str	r1, [r5, #4]	@ unaligned
 16451 1170 AA60     		str	r2, [r5, #8]	@ unaligned
 16452 1172 EB60     		str	r3, [r5, #12]	@ unaligned
 16453 1174 2068     		ldr	r0, [r4]	@ unaligned
 16454 1176 2861     		str	r0, [r5, #16]	@ unaligned
2163:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16455              		.loc 1 2163 0
 16456 1178 0023     		movs	r3, #0
 16457 117a C7F89430 		str	r3, [r7, #148]
 16458 117e 30E0     		b	.L632
 16459              	.L634:
2164:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16460              		.loc 1 2164 0
 16461 1180 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16462 1184 D7F88810 		ldr	r1, [r7, #136]
 16463 1188 1346     		mov	r3, r2
 16464 118a 5B00     		lsls	r3, r3, #1
 16465 118c 1344     		add	r3, r3, r2
 16466 118e 1B01     		lsls	r3, r3, #4
 16467 1190 CA18     		adds	r2, r1, r3
 16468 1192 D7F89430 		ldr	r3, [r7, #148]
 16469 1196 1344     		add	r3, r3, r2
 16470 1198 03F29513 		addw	r3, r3, #405
 16471 119c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16472 119e 1A46     		mov	r2, r3
 16473 11a0 07F11803 		add	r3, r7, #24
 16474 11a4 5649     		ldr	r1, .L698
 16475 11a6 1846     		mov	r0, r3
 16476 11a8 FFF7FEFF 		bl	sprintf
2165:..\src/command_processing.c ****                 strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 368


 16477              		.loc 1 2165 0
 16478 11ac 07F11803 		add	r3, r7, #24
 16479 11b0 1946     		mov	r1, r3
 16480 11b2 7869     		ldr	r0, [r7, #20]
 16481 11b4 FFF7FEFF 		bl	strcat
2166:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16482              		.loc 1 2166 0
 16483 11b8 D7F89430 		ldr	r3, [r7, #148]
 16484 11bc 022B     		cmp	r3, #2
 16485 11be 0BD0     		beq	.L633
2167:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16486              		.loc 1 2167 0
 16487 11c0 7869     		ldr	r0, [r7, #20]
 16488 11c2 FFF7FEFF 		bl	strlen
 16489 11c6 0346     		mov	r3, r0
 16490 11c8 1A46     		mov	r2, r3
 16491 11ca 7B69     		ldr	r3, [r7, #20]
 16492 11cc 1344     		add	r3, r3, r2
 16493 11ce 4D4A     		ldr	r2, .L698+4
 16494 11d0 1188     		ldrh	r1, [r2]	@ unaligned
 16495 11d2 9278     		ldrb	r2, [r2, #2]
 16496 11d4 1980     		strh	r1, [r3]	@ unaligned
 16497 11d6 9A70     		strb	r2, [r3, #2]
 16498              	.L633:
2163:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16499              		.loc 1 2163 0 discriminator 2
 16500 11d8 D7F89430 		ldr	r3, [r7, #148]
 16501 11dc 0133     		adds	r3, r3, #1
 16502 11de C7F89430 		str	r3, [r7, #148]
 16503              	.L632:
2163:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16504              		.loc 1 2163 0 is_stmt 0 discriminator 1
 16505 11e2 D7F89430 		ldr	r3, [r7, #148]
 16506 11e6 022B     		cmp	r3, #2
 16507 11e8 CADD     		ble	.L634
2168:..\src/command_processing.c ****                 }                
2169:..\src/command_processing.c ****             }
2170:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16508              		.loc 1 2170 0 is_stmt 1
 16509 11ea 7869     		ldr	r0, [r7, #20]
 16510 11ec FFF7FEFF 		bl	strlen
 16511 11f0 0346     		mov	r3, r0
 16512 11f2 1A46     		mov	r2, r3
 16513 11f4 7B69     		ldr	r3, [r7, #20]
 16514 11f6 1344     		add	r3, r3, r2
 16515 11f8 434A     		ldr	r2, .L698+8
 16516 11fa 1188     		ldrh	r1, [r2]	@ unaligned
 16517 11fc 9278     		ldrb	r2, [r2, #2]
 16518 11fe 1980     		strh	r1, [r3]	@ unaligned
 16519 1200 9A70     		strb	r2, [r3, #2]
2171:..\src/command_processing.c **** 
2172:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 16520              		.loc 1 2172 0
 16521 1202 7869     		ldr	r0, [r7, #20]
 16522 1204 FFF7FEFF 		bl	strlen
 16523 1208 0346     		mov	r3, r0
 16524 120a 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 369


 16525 120c 7B69     		ldr	r3, [r7, #20]
 16526 120e 1344     		add	r3, r3, r2
 16527 1210 424A     		ldr	r2, .L698+28
 16528 1212 1D46     		mov	r5, r3
 16529 1214 1446     		mov	r4, r2
 16530 1216 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16531 1218 2860     		str	r0, [r5]	@ unaligned
 16532 121a 6960     		str	r1, [r5, #4]	@ unaligned
 16533 121c AA60     		str	r2, [r5, #8]	@ unaligned
 16534 121e EB60     		str	r3, [r5, #12]	@ unaligned
 16535 1220 2068     		ldr	r0, [r4]	@ unaligned
 16536 1222 2861     		str	r0, [r5, #16]	@ unaligned
 16537 1224 2379     		ldrb	r3, [r4, #4]
 16538 1226 2B75     		strb	r3, [r5, #20]
2173:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16539              		.loc 1 2173 0
 16540 1228 0023     		movs	r3, #0
 16541 122a C7F89430 		str	r3, [r7, #148]
 16542 122e 3FE0     		b	.L635
 16543              	.L637:
2174:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16544              		.loc 1 2174 0
 16545 1230 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16546 1234 D7F88810 		ldr	r1, [r7, #136]
 16547 1238 1346     		mov	r3, r2
 16548 123a 5B00     		lsls	r3, r3, #1
 16549 123c 1344     		add	r3, r3, r2
 16550 123e 9B00     		lsls	r3, r3, #2
 16551 1240 D7F89420 		ldr	r2, [r7, #148]
 16552 1244 1344     		add	r3, r3, r2
 16553 1246 6633     		adds	r3, r3, #102
 16554 1248 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16555 124c 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16556 1250 D7F88800 		ldr	r0, [r7, #136]
 16557 1254 1346     		mov	r3, r2
 16558 1256 5B00     		lsls	r3, r3, #1
 16559 1258 1344     		add	r3, r3, r2
 16560 125a 1B01     		lsls	r3, r3, #4
 16561 125c C218     		adds	r2, r0, r3
 16562 125e D7F89430 		ldr	r3, [r7, #148]
 16563 1262 1344     		add	r3, r3, r2
 16564 1264 03F29513 		addw	r3, r3, #405
 16565 1268 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16566 126a 41FA03F2 		asr	r2, r1, r3
 16567 126e 07F11803 		add	r3, r7, #24
 16568 1272 2B49     		ldr	r1, .L698+32
 16569 1274 1846     		mov	r0, r3
 16570 1276 FFF7FEFF 		bl	sprintf
2175:..\src/command_processing.c ****                 strcat(info_string, str);
 16571              		.loc 1 2175 0
 16572 127a 07F11803 		add	r3, r7, #24
 16573 127e 1946     		mov	r1, r3
 16574 1280 7869     		ldr	r0, [r7, #20]
 16575 1282 FFF7FEFF 		bl	strcat
2176:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16576              		.loc 1 2176 0
 16577 1286 D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 370


 16578 128a 022B     		cmp	r3, #2
 16579 128c 0BD0     		beq	.L636
2177:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16580              		.loc 1 2177 0
 16581 128e 7869     		ldr	r0, [r7, #20]
 16582 1290 FFF7FEFF 		bl	strlen
 16583 1294 0346     		mov	r3, r0
 16584 1296 1A46     		mov	r2, r3
 16585 1298 7B69     		ldr	r3, [r7, #20]
 16586 129a 1344     		add	r3, r3, r2
 16587 129c 194A     		ldr	r2, .L698+4
 16588 129e 1188     		ldrh	r1, [r2]	@ unaligned
 16589 12a0 9278     		ldrb	r2, [r2, #2]
 16590 12a2 1980     		strh	r1, [r3]	@ unaligned
 16591 12a4 9A70     		strb	r2, [r3, #2]
 16592              	.L636:
2173:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16593              		.loc 1 2173 0 discriminator 2
 16594 12a6 D7F89430 		ldr	r3, [r7, #148]
 16595 12aa 0133     		adds	r3, r3, #1
 16596 12ac C7F89430 		str	r3, [r7, #148]
 16597              	.L635:
2173:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16598              		.loc 1 2173 0 is_stmt 0 discriminator 1
 16599 12b0 D7F89430 		ldr	r3, [r7, #148]
 16600 12b4 022B     		cmp	r3, #2
 16601 12b6 BBDD     		ble	.L637
2178:..\src/command_processing.c ****                 }
2179:..\src/command_processing.c ****             }
2180:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16602              		.loc 1 2180 0 is_stmt 1
 16603 12b8 7869     		ldr	r0, [r7, #20]
 16604 12ba FFF7FEFF 		bl	strlen
 16605 12be 0346     		mov	r3, r0
 16606 12c0 1A46     		mov	r2, r3
 16607 12c2 7B69     		ldr	r3, [r7, #20]
 16608 12c4 1344     		add	r3, r3, r2
 16609 12c6 104A     		ldr	r2, .L698+8
 16610 12c8 1188     		ldrh	r1, [r2]	@ unaligned
 16611 12ca 9278     		ldrb	r2, [r2, #2]
 16612 12cc 1980     		strh	r1, [r3]	@ unaligned
 16613 12ce 9A70     		strb	r2, [r3, #2]
2181:..\src/command_processing.c ****                 
2182:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 16614              		.loc 1 2182 0
 16615 12d0 7869     		ldr	r0, [r7, #20]
 16616 12d2 FFF7FEFF 		bl	strlen
 16617 12d6 0346     		mov	r3, r0
 16618 12d8 1A46     		mov	r2, r3
 16619 12da 7B69     		ldr	r3, [r7, #20]
 16620 12dc 1344     		add	r3, r3, r2
 16621 12de 114A     		ldr	r2, .L698+36
 16622 12e0 1D46     		mov	r5, r3
 16623 12e2 1446     		mov	r4, r2
 16624 12e4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16625 12e6 2860     		str	r0, [r5]	@ unaligned
 16626 12e8 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 371


 16627 12ea AA60     		str	r2, [r5, #8]	@ unaligned
 16628 12ec EB60     		str	r3, [r5, #12]	@ unaligned
 16629 12ee 03CC     		ldmia	r4!, {r0, r1}
 16630 12f0 2861     		str	r0, [r5, #16]	@ unaligned
 16631 12f2 6961     		str	r1, [r5, #20]	@ unaligned
 16632 12f4 2378     		ldrb	r3, [r4]
 16633 12f6 2B76     		strb	r3, [r5, #24]
2183:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16634              		.loc 1 2183 0
 16635 12f8 0023     		movs	r3, #0
 16636 12fa C7F89430 		str	r3, [r7, #148]
 16637 12fe 49E0     		b	.L638
 16638              	.L699:
 16639              		.align	2
 16640              	.L698:
 16641 1300 9C130000 		.word	.LC183
 16642 1304 A0130000 		.word	.LC184
 16643 1308 58110000 		.word	.LC152
 16644 130c D4160000 		.word	.LC214
 16645 1310 EC160000 		.word	.LC215
 16646 1314 04170000 		.word	.LC216
 16647 1318 1C170000 		.word	.LC217
 16648 131c 30170000 		.word	.LC218
 16649 1320 48170000 		.word	.LC219
 16650 1324 4C170000 		.word	.LC220
 16651              	.L640:
2184:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16652              		.loc 1 2184 0
 16653 1328 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16654 132c D7F88810 		ldr	r1, [r7, #136]
 16655 1330 1346     		mov	r3, r2
 16656 1332 5B00     		lsls	r3, r3, #1
 16657 1334 1344     		add	r3, r3, r2
 16658 1336 9B00     		lsls	r3, r3, #2
 16659 1338 D7F89420 		ldr	r2, [r7, #148]
 16660 133c 1344     		add	r3, r3, r2
 16661 133e 6833     		adds	r3, r3, #104
 16662 1340 9B00     		lsls	r3, r3, #2
 16663 1342 0B44     		add	r3, r3, r1
 16664 1344 5B68     		ldr	r3, [r3, #4]	@ float
 16665 1346 1846     		mov	r0, r3
 16666 1348 FFF7FEFF 		bl	__aeabi_f2d
 16667 134c 0346     		mov	r3, r0
 16668 134e 0C46     		mov	r4, r1
 16669 1350 07F11800 		add	r0, r7, #24
 16670 1354 1A46     		mov	r2, r3
 16671 1356 2346     		mov	r3, r4
 16672 1358 CA49     		ldr	r1, .L700
 16673 135a FFF7FEFF 		bl	sprintf
2185:..\src/command_processing.c ****                 strcat(info_string, str);
 16674              		.loc 1 2185 0
 16675 135e 07F11803 		add	r3, r7, #24
 16676 1362 1946     		mov	r1, r3
 16677 1364 7869     		ldr	r0, [r7, #20]
 16678 1366 FFF7FEFF 		bl	strcat
2186:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16679              		.loc 1 2186 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 372


 16680 136a D7F89430 		ldr	r3, [r7, #148]
 16681 136e 022B     		cmp	r3, #2
 16682 1370 0BD0     		beq	.L639
2187:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16683              		.loc 1 2187 0
 16684 1372 7869     		ldr	r0, [r7, #20]
 16685 1374 FFF7FEFF 		bl	strlen
 16686 1378 0346     		mov	r3, r0
 16687 137a 1A46     		mov	r2, r3
 16688 137c 7B69     		ldr	r3, [r7, #20]
 16689 137e 1344     		add	r3, r3, r2
 16690 1380 C14A     		ldr	r2, .L700+4
 16691 1382 1188     		ldrh	r1, [r2]	@ unaligned
 16692 1384 9278     		ldrb	r2, [r2, #2]
 16693 1386 1980     		strh	r1, [r3]	@ unaligned
 16694 1388 9A70     		strb	r2, [r3, #2]
 16695              	.L639:
2183:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16696              		.loc 1 2183 0 discriminator 2
 16697 138a D7F89430 		ldr	r3, [r7, #148]
 16698 138e 0133     		adds	r3, r3, #1
 16699 1390 C7F89430 		str	r3, [r7, #148]
 16700              	.L638:
2183:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16701              		.loc 1 2183 0 is_stmt 0 discriminator 1
 16702 1394 D7F89430 		ldr	r3, [r7, #148]
 16703 1398 022B     		cmp	r3, #2
 16704 139a C5DD     		ble	.L640
2188:..\src/command_processing.c ****                 }
2189:..\src/command_processing.c ****             }
2190:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16705              		.loc 1 2190 0 is_stmt 1
 16706 139c 7869     		ldr	r0, [r7, #20]
 16707 139e FFF7FEFF 		bl	strlen
 16708 13a2 0346     		mov	r3, r0
 16709 13a4 1A46     		mov	r2, r3
 16710 13a6 7B69     		ldr	r3, [r7, #20]
 16711 13a8 1344     		add	r3, r3, r2
 16712 13aa B84A     		ldr	r2, .L700+8
 16713 13ac 1188     		ldrh	r1, [r2]	@ unaligned
 16714 13ae 9278     		ldrb	r2, [r2, #2]
 16715 13b0 1980     		strh	r1, [r3]	@ unaligned
 16716 13b2 9A70     		strb	r2, [r3, #2]
2191:..\src/command_processing.c ****             
2192:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2193:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16717              		.loc 1 2193 0
 16718 13b4 D7F88030 		ldr	r3, [r7, #128]
 16719 13b8 5B6C     		ldr	r3, [r3, #68]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16720              		.loc 1 2192 0
 16721 13ba 1846     		mov	r0, r3
 16722 13bc FFF7FEFF 		bl	__aeabi_f2d
 16723 13c0 C7E90201 		strd	r0, [r7, #8]
 16724              		.loc 1 2193 0
 16725 13c4 D7F88030 		ldr	r3, [r7, #128]
 16726 13c8 9B6C     		ldr	r3, [r3, #72]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 373


2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16727              		.loc 1 2192 0
 16728 13ca 1846     		mov	r0, r3
 16729 13cc FFF7FEFF 		bl	__aeabi_f2d
 16730 13d0 0446     		mov	r4, r0
 16731 13d2 0D46     		mov	r5, r1
 16732              		.loc 1 2193 0
 16733 13d4 D7F88030 		ldr	r3, [r7, #128]
 16734 13d8 DB6C     		ldr	r3, [r3, #76]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16735              		.loc 1 2192 0
 16736 13da 1846     		mov	r0, r3
 16737 13dc FFF7FEFF 		bl	__aeabi_f2d
 16738 13e0 8046     		mov	r8, r0
 16739 13e2 8946     		mov	r9, r1
2194:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16740              		.loc 1 2194 0
 16741 13e4 D7F88030 		ldr	r3, [r7, #128]
 16742 13e8 1B6D     		ldr	r3, [r3, #80]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16743              		.loc 1 2192 0
 16744 13ea 1846     		mov	r0, r3
 16745 13ec FFF7FEFF 		bl	__aeabi_f2d
 16746 13f0 8246     		mov	r10, r0
 16747 13f2 8B46     		mov	fp, r1
 16748              		.loc 1 2194 0
 16749 13f4 D7F88030 		ldr	r3, [r7, #128]
 16750 13f8 5B6D     		ldr	r3, [r3, #84]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16751              		.loc 1 2192 0
 16752 13fa 1846     		mov	r0, r3
 16753 13fc FFF7FEFF 		bl	__aeabi_f2d
 16754 1400 C7E90001 		strd	r0, [r7]
 16755              		.loc 1 2194 0
 16756 1404 D7F88030 		ldr	r3, [r7, #128]
 16757 1408 9B6D     		ldr	r3, [r3, #88]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16758              		.loc 1 2192 0
 16759 140a 1846     		mov	r0, r3
 16760 140c FFF7FEFF 		bl	__aeabi_f2d
 16761 1410 0246     		mov	r2, r0
 16762 1412 0B46     		mov	r3, r1
 16763 1414 07F11800 		add	r0, r7, #24
 16764 1418 CDE90823 		strd	r2, [sp, #32]
 16765 141c D7E90012 		ldrd	r1, [r7]
 16766 1420 CDE90612 		strd	r1, [sp, #24]
 16767 1424 CDE904AB 		strd	r10, [sp, #16]
 16768 1428 CDE90289 		strd	r8, [sp, #8]
 16769 142c CDE90045 		strd	r4, [sp]
 16770 1430 D7E90223 		ldrd	r2, [r7, #8]
 16771 1434 9649     		ldr	r1, .L700+12
 16772 1436 FFF7FEFF 		bl	sprintf
2195:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16773              		.loc 1 2195 0
 16774 143a 07F11803 		add	r3, r7, #24
 16775 143e 1946     		mov	r1, r3
 16776 1440 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 374


 16777 1442 FFF7FEFF 		bl	strcat
2196:..\src/command_processing.c **** 
2197:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16778              		.loc 1 2197 0
 16779 1446 D7F88030 		ldr	r3, [r7, #128]
 16780 144a 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16781 144e 1A46     		mov	r2, r3
 16782 1450 07F11803 		add	r3, r7, #24
 16783 1454 8F49     		ldr	r1, .L700+16
 16784 1456 1846     		mov	r0, r3
 16785 1458 FFF7FEFF 		bl	sprintf
2198:..\src/command_processing.c ****             strcat(info_string, str);
 16786              		.loc 1 2198 0
 16787 145c 07F11803 		add	r3, r7, #24
 16788 1460 1946     		mov	r1, r3
 16789 1462 7869     		ldr	r0, [r7, #20]
 16790 1464 FFF7FEFF 		bl	strcat
2199:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16791              		.loc 1 2199 0
 16792 1468 7869     		ldr	r0, [r7, #20]
 16793 146a FFF7FEFF 		bl	strlen
 16794 146e 0346     		mov	r3, r0
 16795 1470 1A46     		mov	r2, r3
 16796 1472 7B69     		ldr	r3, [r7, #20]
 16797 1474 1344     		add	r3, r3, r2
 16798 1476 854A     		ldr	r2, .L700+8
 16799 1478 1188     		ldrh	r1, [r2]	@ unaligned
 16800 147a 9278     		ldrb	r2, [r2, #2]
 16801 147c 1980     		strh	r1, [r3]	@ unaligned
 16802 147e 9A70     		strb	r2, [r3, #2]
2200:..\src/command_processing.c **** 
2201:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16803              		.loc 1 2201 0
 16804 1480 D7F88030 		ldr	r3, [r7, #128]
 16805 1484 596B     		ldr	r1, [r3, #52]
 16806 1486 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16807 148a D7F88800 		ldr	r0, [r7, #136]
 16808 148e 1346     		mov	r3, r2
 16809 1490 5B00     		lsls	r3, r3, #1
 16810 1492 1344     		add	r3, r3, r2
 16811 1494 1B01     		lsls	r3, r3, #4
 16812 1496 0344     		add	r3, r3, r0
 16813 1498 03F29513 		addw	r3, r3, #405
 16814 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16815 149e 41FA03F2 		asr	r2, r1, r3
 16816 14a2 07F11803 		add	r3, r7, #24
 16817 14a6 7C49     		ldr	r1, .L700+20
 16818 14a8 1846     		mov	r0, r3
 16819 14aa FFF7FEFF 		bl	sprintf
2202:..\src/command_processing.c ****             strcat(info_string, str);
 16820              		.loc 1 2202 0
 16821 14ae 07F11803 		add	r3, r7, #24
 16822 14b2 1946     		mov	r1, r3
 16823 14b4 7869     		ldr	r0, [r7, #20]
 16824 14b6 FFF7FEFF 		bl	strcat
2203:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16825              		.loc 1 2203 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 375


 16826 14ba D7F88030 		ldr	r3, [r7, #128]
 16827 14be 996B     		ldr	r1, [r3, #56]
 16828 14c0 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16829 14c4 D7F88800 		ldr	r0, [r7, #136]
 16830 14c8 1346     		mov	r3, r2
 16831 14ca 5B00     		lsls	r3, r3, #1
 16832 14cc 1344     		add	r3, r3, r2
 16833 14ce 1B01     		lsls	r3, r3, #4
 16834 14d0 0344     		add	r3, r3, r0
 16835 14d2 03F29513 		addw	r3, r3, #405
 16836 14d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16837 14d8 41FA03F2 		asr	r2, r1, r3
 16838 14dc 07F11803 		add	r3, r7, #24
 16839 14e0 6E49     		ldr	r1, .L700+24
 16840 14e2 1846     		mov	r0, r3
 16841 14e4 FFF7FEFF 		bl	sprintf
2204:..\src/command_processing.c ****             strcat(info_string, str);
 16842              		.loc 1 2204 0
 16843 14e8 07F11803 		add	r3, r7, #24
 16844 14ec 1946     		mov	r1, r3
 16845 14ee 7869     		ldr	r0, [r7, #20]
 16846 14f0 FFF7FEFF 		bl	strcat
2205:..\src/command_processing.c **** 
2206:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16847              		.loc 1 2206 0
 16848 14f4 D7F88030 		ldr	r3, [r7, #128]
 16849 14f8 1A6C     		ldr	r2, [r3, #64]
 16850 14fa D7F88030 		ldr	r3, [r7, #128]
 16851 14fe DB6B     		ldr	r3, [r3, #60]
 16852 1500 07F11800 		add	r0, r7, #24
 16853 1504 6649     		ldr	r1, .L700+28
 16854 1506 FFF7FEFF 		bl	sprintf
2207:..\src/command_processing.c ****             strcat(info_string, str);
 16855              		.loc 1 2207 0
 16856 150a 07F11803 		add	r3, r7, #24
 16857 150e 1946     		mov	r1, r3
 16858 1510 7869     		ldr	r0, [r7, #20]
 16859 1512 FFF7FEFF 		bl	strcat
2208:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16860              		.loc 1 2208 0
 16861 1516 7869     		ldr	r0, [r7, #20]
 16862 1518 FFF7FEFF 		bl	strlen
 16863 151c 0346     		mov	r3, r0
 16864 151e 1A46     		mov	r2, r3
 16865 1520 7B69     		ldr	r3, [r7, #20]
 16866 1522 1344     		add	r3, r3, r2
 16867 1524 594A     		ldr	r2, .L700+8
 16868 1526 1188     		ldrh	r1, [r2]	@ unaligned
 16869 1528 9278     		ldrb	r2, [r2, #2]
 16870 152a 1980     		strh	r1, [r3]	@ unaligned
 16871 152c 9A70     		strb	r2, [r3, #2]
2209:..\src/command_processing.c **** 
2210:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16872              		.loc 1 2210 0
 16873 152e D7F88030 		ldr	r3, [r7, #128]
 16874 1532 B3F95C30 		ldrsh	r3, [r3, #92]
 16875 1536 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 376


 16876 1538 07F11803 		add	r3, r7, #24
 16877 153c 5949     		ldr	r1, .L700+32
 16878 153e 1846     		mov	r0, r3
 16879 1540 FFF7FEFF 		bl	sprintf
2211:..\src/command_processing.c ****             strcat(info_string, str);
 16880              		.loc 1 2211 0
 16881 1544 07F11803 		add	r3, r7, #24
 16882 1548 1946     		mov	r1, r3
 16883 154a 7869     		ldr	r0, [r7, #20]
 16884 154c FFF7FEFF 		bl	strcat
2212:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2213:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
 16885              		.loc 1 2213 0
 16886 1550 D7F88030 		ldr	r3, [r7, #128]
 16887 1554 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 16888 1558 1A46     		mov	r2, r3
 16889 155a 07F11803 		add	r3, r7, #24
 16890 155e 5249     		ldr	r1, .L700+36
 16891 1560 1846     		mov	r0, r3
 16892 1562 FFF7FEFF 		bl	sprintf
2214:..\src/command_processing.c ****             strcat(info_string, str);
 16893              		.loc 1 2214 0
 16894 1566 07F11803 		add	r3, r7, #24
 16895 156a 1946     		mov	r1, r3
 16896 156c 7869     		ldr	r0, [r7, #20]
 16897 156e FFF7FEFF 		bl	strcat
2215:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
 16898              		.loc 1 2215 0
 16899 1572 D7F88030 		ldr	r3, [r7, #128]
 16900 1576 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 16901 157a 012B     		cmp	r3, #1
 16902 157c 21D0     		beq	.L642
 16903 157e 022B     		cmp	r3, #2
 16904 1580 3CD0     		beq	.L643
 16905 1582 002B     		cmp	r3, #0
 16906 1584 00D0     		beq	.L644
2216:..\src/command_processing.c ****                 case DRIVER_MC33887:
2217:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2218:..\src/command_processing.c ****                     break;
2219:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2220:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2221:..\src/command_processing.c ****                     break;
2222:..\src/command_processing.c ****                 case DRIVER_BRUSHLESS:
2223:..\src/command_processing.c ****                     strcat(info_string, "Driver type: ESC (Brushless)\r\n");
2224:..\src/command_processing.c ****                     break;
2225:..\src/command_processing.c ****                 default:
2226:..\src/command_processing.c ****                     break;
 16907              		.loc 1 2226 0
 16908 1586 52E0     		b	.L646
 16909              	.L644:
2217:..\src/command_processing.c ****                     break;
 16910              		.loc 1 2217 0
 16911 1588 7869     		ldr	r0, [r7, #20]
 16912 158a FFF7FEFF 		bl	strlen
 16913 158e 0346     		mov	r3, r0
 16914 1590 1A46     		mov	r2, r3
 16915 1592 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 377


 16916 1594 1344     		add	r3, r3, r2
 16917 1596 454A     		ldr	r2, .L700+40
 16918 1598 1446     		mov	r4, r2
 16919 159a 9E46     		mov	lr, r3
 16920 159c 04F1200C 		add	ip, r4, #32
 16921              	.L645:
 16922 15a0 7546     		mov	r5, lr
 16923 15a2 2646     		mov	r6, r4
 16924 15a4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16925 15a6 2860     		str	r0, [r5]	@ unaligned
 16926 15a8 6960     		str	r1, [r5, #4]	@ unaligned
 16927 15aa AA60     		str	r2, [r5, #8]	@ unaligned
 16928 15ac EB60     		str	r3, [r5, #12]	@ unaligned
 16929 15ae 1034     		adds	r4, r4, #16
 16930 15b0 0EF1100E 		add	lr, lr, #16
 16931 15b4 6445     		cmp	r4, ip
 16932 15b6 F3D1     		bne	.L645
 16933 15b8 7246     		mov	r2, lr
 16934 15ba 2346     		mov	r3, r4
 16935 15bc 1B88     		ldrh	r3, [r3]	@ unaligned
 16936 15be 1380     		strh	r3, [r2]	@ unaligned
2218:..\src/command_processing.c ****                 case DRIVER_VNH5019:
 16937              		.loc 1 2218 0
 16938 15c0 35E0     		b	.L646
 16939              	.L642:
2220:..\src/command_processing.c ****                     break;
 16940              		.loc 1 2220 0
 16941 15c2 7869     		ldr	r0, [r7, #20]
 16942 15c4 FFF7FEFF 		bl	strlen
 16943 15c8 0346     		mov	r3, r0
 16944 15ca 1A46     		mov	r2, r3
 16945 15cc 7B69     		ldr	r3, [r7, #20]
 16946 15ce 1344     		add	r3, r3, r2
 16947 15d0 374A     		ldr	r2, .L700+44
 16948 15d2 1446     		mov	r4, r2
 16949 15d4 9E46     		mov	lr, r3
 16950 15d6 04F1200C 		add	ip, r4, #32
 16951              	.L647:
 16952 15da 7546     		mov	r5, lr
 16953 15dc 2646     		mov	r6, r4
 16954 15de 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16955 15e0 2860     		str	r0, [r5]	@ unaligned
 16956 15e2 6960     		str	r1, [r5, #4]	@ unaligned
 16957 15e4 AA60     		str	r2, [r5, #8]	@ unaligned
 16958 15e6 EB60     		str	r3, [r5, #12]	@ unaligned
 16959 15e8 1034     		adds	r4, r4, #16
 16960 15ea 0EF1100E 		add	lr, lr, #16
 16961 15ee 6445     		cmp	r4, ip
 16962 15f0 F3D1     		bne	.L647
 16963 15f2 7346     		mov	r3, lr
 16964 15f4 2246     		mov	r2, r4
 16965 15f6 1068     		ldr	r0, [r2]	@ unaligned
 16966 15f8 1860     		str	r0, [r3]	@ unaligned
2221:..\src/command_processing.c ****                 case DRIVER_BRUSHLESS:
 16967              		.loc 1 2221 0
 16968 15fa 18E0     		b	.L646
 16969              	.L643:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 378


2223:..\src/command_processing.c ****                     break;
 16970              		.loc 1 2223 0
 16971 15fc 7869     		ldr	r0, [r7, #20]
 16972 15fe FFF7FEFF 		bl	strlen
 16973 1602 0346     		mov	r3, r0
 16974 1604 1A46     		mov	r2, r3
 16975 1606 7B69     		ldr	r3, [r7, #20]
 16976 1608 1344     		add	r3, r3, r2
 16977 160a 2A4A     		ldr	r2, .L700+48
 16978 160c 1D46     		mov	r5, r3
 16979 160e 1446     		mov	r4, r2
 16980 1610 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16981 1612 2860     		str	r0, [r5]	@ unaligned
 16982 1614 6960     		str	r1, [r5, #4]	@ unaligned
 16983 1616 AA60     		str	r2, [r5, #8]	@ unaligned
 16984 1618 EB60     		str	r3, [r5, #12]	@ unaligned
 16985 161a 07CC     		ldmia	r4!, {r0, r1, r2}
 16986 161c 2861     		str	r0, [r5, #16]	@ unaligned
 16987 161e 6961     		str	r1, [r5, #20]	@ unaligned
 16988 1620 AA61     		str	r2, [r5, #24]	@ unaligned
 16989 1622 2388     		ldrh	r3, [r4]	@ unaligned
 16990 1624 A278     		ldrb	r2, [r4, #2]
 16991 1626 AB83     		strh	r3, [r5, #28]	@ unaligned
 16992 1628 1346     		mov	r3, r2
 16993 162a AB77     		strb	r3, [r5, #30]
2224:..\src/command_processing.c ****                 default:
 16994              		.loc 1 2224 0
 16995 162c 00BF     		nop
 16996              	.L646:
2227:..\src/command_processing.c ****             }
2228:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 16997              		.loc 1 2228 0
 16998 162e D7F88030 		ldr	r3, [r7, #128]
 16999 1632 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 17000 1636 1A46     		mov	r2, r3
 17001 1638 07F11803 		add	r3, r7, #24
 17002 163c 1E49     		ldr	r1, .L700+52
 17003 163e 1846     		mov	r0, r3
 17004 1640 FFF7FEFF 		bl	sprintf
2229:..\src/command_processing.c ****             strcat(info_string, str);
 17005              		.loc 1 2229 0
 17006 1644 07F11803 		add	r3, r7, #24
 17007 1648 1946     		mov	r1, r3
 17008 164a 7869     		ldr	r0, [r7, #20]
 17009 164c FFF7FEFF 		bl	strcat
2230:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
 17010              		.loc 1 2230 0
 17011 1650 D7F88030 		ldr	r3, [r7, #128]
 17012 1654 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 17013 1658 002B     		cmp	r3, #0
 17014 165a 31D0     		beq	.L648
2231:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 17015              		.loc 1 2231 0
 17016 165c 7869     		ldr	r0, [r7, #20]
 17017 165e FFF7FEFF 		bl	strlen
 17018 1662 0346     		mov	r3, r0
 17019 1664 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 379


 17020 1666 7B69     		ldr	r3, [r7, #20]
 17021 1668 1344     		add	r3, r3, r2
 17022 166a 144A     		ldr	r2, .L700+56
 17023 166c 1D46     		mov	r5, r3
 17024 166e 1446     		mov	r4, r2
 17025 1670 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17026 1672 2860     		str	r0, [r5]	@ unaligned
 17027 1674 6960     		str	r1, [r5, #4]	@ unaligned
 17028 1676 AA60     		str	r2, [r5, #8]	@ unaligned
 17029 1678 EB60     		str	r3, [r5, #12]	@ unaligned
 17030 167a 07CC     		ldmia	r4!, {r0, r1, r2}
 17031 167c 2861     		str	r0, [r5, #16]	@ unaligned
 17032 167e 6961     		str	r1, [r5, #20]	@ unaligned
 17033 1680 AA61     		str	r2, [r5, #24]	@ unaligned
 17034 1682 34E0     		b	.L649
 17035              	.L701:
 17036              		.align	2
 17037              	.L700:
 17038 1684 68170000 		.word	.LC221
 17039 1688 A0130000 		.word	.LC184
 17040 168c 58110000 		.word	.LC152
 17041 1690 6C170000 		.word	.LC222
 17042 1694 9C170000 		.word	.LC223
 17043 1698 B8170000 		.word	.LC224
 17044 169c DC170000 		.word	.LC225
 17045 16a0 EC170000 		.word	.LC226
 17046 16a4 08180000 		.word	.LC227
 17047 16a8 1C180000 		.word	.LC228
 17048 16ac 48180000 		.word	.LC229
 17049 16b0 6C180000 		.word	.LC230
 17050 16b4 90180000 		.word	.LC231
 17051 16b8 B0180000 		.word	.LC232
 17052 16bc D0180000 		.word	.LC233
 17053              	.L648:
2232:..\src/command_processing.c ****             else
2233:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 17054              		.loc 1 2233 0
 17055 16c0 7869     		ldr	r0, [r7, #20]
 17056 16c2 FFF7FEFF 		bl	strlen
 17057 16c6 0346     		mov	r3, r0
 17058 16c8 1A46     		mov	r2, r3
 17059 16ca 7B69     		ldr	r3, [r7, #20]
 17060 16cc 1344     		add	r3, r3, r2
 17061 16ce A24A     		ldr	r2, .L702
 17062 16d0 1D46     		mov	r5, r3
 17063 16d2 1446     		mov	r4, r2
 17064 16d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17065 16d6 2860     		str	r0, [r5]	@ unaligned
 17066 16d8 6960     		str	r1, [r5, #4]	@ unaligned
 17067 16da AA60     		str	r2, [r5, #8]	@ unaligned
 17068 16dc EB60     		str	r3, [r5, #12]	@ unaligned
 17069 16de 03CC     		ldmia	r4!, {r0, r1}
 17070 16e0 2861     		str	r0, [r5, #16]	@ unaligned
 17071 16e2 6961     		str	r1, [r5, #20]	@ unaligned
 17072 16e4 2388     		ldrh	r3, [r4]	@ unaligned
 17073 16e6 A278     		ldrb	r2, [r4, #2]
 17074 16e8 2B83     		strh	r3, [r5, #24]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 380


 17075 16ea 1346     		mov	r3, r2
 17076 16ec AB76     		strb	r3, [r5, #26]
 17077              	.L649:
2234:..\src/command_processing.c **** #endif                
2235:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17078              		.loc 1 2235 0 discriminator 2
 17079 16ee 7869     		ldr	r0, [r7, #20]
 17080 16f0 FFF7FEFF 		bl	strlen
 17081 16f4 0346     		mov	r3, r0
 17082 16f6 1A46     		mov	r2, r3
 17083 16f8 7B69     		ldr	r3, [r7, #20]
 17084 16fa 1344     		add	r3, r3, r2
 17085 16fc 974A     		ldr	r2, .L702+4
 17086 16fe 1188     		ldrh	r1, [r2]	@ unaligned
 17087 1700 9278     		ldrb	r2, [r2, #2]
 17088 1702 1980     		strh	r1, [r3]	@ unaligned
 17089 1704 9A70     		strb	r2, [r3, #2]
 17090              	.LBE26:
1962:..\src/command_processing.c ****             
 17091              		.loc 1 1962 0 discriminator 2
 17092 1706 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 17093 170a 0133     		adds	r3, r3, #1
 17094 170c 87F89330 		strb	r3, [r7, #147]
 17095              	.L584:
1962:..\src/command_processing.c ****             
 17096              		.loc 1 1962 0 is_stmt 0 discriminator 1
 17097 1710 D7F88830 		ldr	r3, [r7, #136]
 17098 1714 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 17099 1718 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 17100 171c 9A42     		cmp	r2, r3
 17101 171e 7EF625AE 		bls	.L650
 17102              	.LBE25:
2236:..\src/command_processing.c ****         }
2237:..\src/command_processing.c ****       
2238:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 17103              		.loc 1 2238 0 is_stmt 1
 17104 1722 7869     		ldr	r0, [r7, #20]
 17105 1724 FFF7FEFF 		bl	strlen
 17106 1728 0346     		mov	r3, r0
 17107 172a 1A46     		mov	r2, r3
 17108 172c 7B69     		ldr	r3, [r7, #20]
 17109 172e 1344     		add	r3, r3, r2
 17110 1730 8B4A     		ldr	r2, .L702+8
 17111 1732 1D46     		mov	r5, r3
 17112 1734 1446     		mov	r4, r2
 17113 1736 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17114 1738 2860     		str	r0, [r5]	@ unaligned
 17115 173a 6960     		str	r1, [r5, #4]	@ unaligned
 17116 173c AA60     		str	r2, [r5, #8]	@ unaligned
 17117 173e EB60     		str	r3, [r5, #12]	@ unaligned
 17118 1740 2068     		ldr	r0, [r4]	@ unaligned
 17119 1742 2861     		str	r0, [r5, #16]	@ unaligned
2239:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 17120              		.loc 1 2239 0
 17121 1744 D7F88830 		ldr	r3, [r7, #136]
 17122 1748 B3F8F031 		ldrh	r3, [r3, #496]
 17123 174c 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 381


 17124 174e D7F88830 		ldr	r3, [r7, #136]
 17125 1752 B3F8F231 		ldrh	r3, [r3, #498]
 17126 1756 07F11800 		add	r0, r7, #24
 17127 175a 8249     		ldr	r1, .L702+12
 17128 175c FFF7FEFF 		bl	sprintf
2240:..\src/command_processing.c ****         strcat(info_string, str);
 17129              		.loc 1 2240 0
 17130 1760 07F11803 		add	r3, r7, #24
 17131 1764 1946     		mov	r1, r3
 17132 1766 7869     		ldr	r0, [r7, #20]
 17133 1768 FFF7FEFF 		bl	strcat
2241:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17134              		.loc 1 2241 0
 17135 176c 7869     		ldr	r0, [r7, #20]
 17136 176e FFF7FEFF 		bl	strlen
 17137 1772 0346     		mov	r3, r0
 17138 1774 1A46     		mov	r2, r3
 17139 1776 7B69     		ldr	r3, [r7, #20]
 17140 1778 1344     		add	r3, r3, r2
 17141 177a 784A     		ldr	r2, .L702+4
 17142 177c 1188     		ldrh	r1, [r2]	@ unaligned
 17143 177e 9278     		ldrb	r2, [r2, #2]
 17144 1780 1980     		strh	r1, [r3]	@ unaligned
 17145 1782 9A70     		strb	r2, [r3, #2]
2242:..\src/command_processing.c **** 
2243:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 17146              		.loc 1 2243 0
 17147 1784 D7F88830 		ldr	r3, [r7, #136]
 17148 1788 D3F8F421 		ldr	r2, [r3, #500]
 17149 178c D7F88830 		ldr	r3, [r7, #136]
 17150 1790 D3F8F831 		ldr	r3, [r3, #504]
 17151 1794 07F11800 		add	r0, r7, #24
 17152 1798 7349     		ldr	r1, .L702+16
 17153 179a FFF7FEFF 		bl	sprintf
2244:..\src/command_processing.c ****         strcat(info_string, str);
 17154              		.loc 1 2244 0
 17155 179e 07F11803 		add	r3, r7, #24
 17156 17a2 1946     		mov	r1, r3
 17157 17a4 7869     		ldr	r0, [r7, #20]
 17158 17a6 FFF7FEFF 		bl	strcat
2245:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17159              		.loc 1 2245 0
 17160 17aa 7869     		ldr	r0, [r7, #20]
 17161 17ac FFF7FEFF 		bl	strlen
 17162 17b0 0346     		mov	r3, r0
 17163 17b2 1A46     		mov	r2, r3
 17164 17b4 7B69     		ldr	r3, [r7, #20]
 17165 17b6 1344     		add	r3, r3, r2
 17166 17b8 684A     		ldr	r2, .L702+4
 17167 17ba 1188     		ldrh	r1, [r2]	@ unaligned
 17168 17bc 9278     		ldrb	r2, [r2, #2]
 17169 17be 1980     		strh	r1, [r3]	@ unaligned
 17170 17c0 9A70     		strb	r2, [r3, #2]
2246:..\src/command_processing.c **** 
2247:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 17171              		.loc 1 2247 0
 17172 17c2 D7F88830 		ldr	r3, [r7, #136]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 382


 17173 17c6 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 17174 17ca 002B     		cmp	r3, #0
 17175 17cc 13D0     		beq	.L651
2248:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 17176              		.loc 1 2248 0
 17177 17ce 7869     		ldr	r0, [r7, #20]
 17178 17d0 FFF7FEFF 		bl	strlen
 17179 17d4 0346     		mov	r3, r0
 17180 17d6 1A46     		mov	r2, r3
 17181 17d8 7B69     		ldr	r3, [r7, #20]
 17182 17da 1344     		add	r3, r3, r2
 17183 17dc 634A     		ldr	r2, .L702+20
 17184 17de 1D46     		mov	r5, r3
 17185 17e0 1446     		mov	r4, r2
 17186 17e2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17187 17e4 2860     		str	r0, [r5]	@ unaligned
 17188 17e6 6960     		str	r1, [r5, #4]	@ unaligned
 17189 17e8 AA60     		str	r2, [r5, #8]	@ unaligned
 17190 17ea EB60     		str	r3, [r5, #12]	@ unaligned
 17191 17ec 2068     		ldr	r0, [r4]	@ unaligned
 17192 17ee 2861     		str	r0, [r5, #16]	@ unaligned
 17193 17f0 2379     		ldrb	r3, [r4, #4]
 17194 17f2 2B75     		strb	r3, [r5, #20]
 17195 17f4 10E0     		b	.L652
 17196              	.L651:
2249:..\src/command_processing.c ****         else
2250:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 17197              		.loc 1 2250 0
 17198 17f6 7869     		ldr	r0, [r7, #20]
 17199 17f8 FFF7FEFF 		bl	strlen
 17200 17fc 0346     		mov	r3, r0
 17201 17fe 1A46     		mov	r2, r3
 17202 1800 7B69     		ldr	r3, [r7, #20]
 17203 1802 1344     		add	r3, r3, r2
 17204 1804 5A4A     		ldr	r2, .L702+24
 17205 1806 1D46     		mov	r5, r3
 17206 1808 1446     		mov	r4, r2
 17207 180a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17208 180c 2860     		str	r0, [r5]	@ unaligned
 17209 180e 6960     		str	r1, [r5, #4]	@ unaligned
 17210 1810 AA60     		str	r2, [r5, #8]	@ unaligned
 17211 1812 EB60     		str	r3, [r5, #12]	@ unaligned
 17212 1814 2068     		ldr	r0, [r4]	@ unaligned
 17213 1816 2861     		str	r0, [r5, #16]	@ unaligned
 17214              	.L652:
2251:..\src/command_processing.c ****             
2252:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 17215              		.loc 1 2252 0
 17216 1818 D7F88830 		ldr	r3, [r7, #136]
 17217 181c 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 17218 1820 002B     		cmp	r3, #0
 17219 1822 17D0     		beq	.L653
2253:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 17220              		.loc 1 2253 0
 17221 1824 7869     		ldr	r0, [r7, #20]
 17222 1826 FFF7FEFF 		bl	strlen
 17223 182a 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 383


 17224 182c 1A46     		mov	r2, r3
 17225 182e 7B69     		ldr	r3, [r7, #20]
 17226 1830 1344     		add	r3, r3, r2
 17227 1832 504A     		ldr	r2, .L702+28
 17228 1834 1D46     		mov	r5, r3
 17229 1836 1446     		mov	r4, r2
 17230 1838 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17231 183a 2860     		str	r0, [r5]	@ unaligned
 17232 183c 6960     		str	r1, [r5, #4]	@ unaligned
 17233 183e AA60     		str	r2, [r5, #8]	@ unaligned
 17234 1840 EB60     		str	r3, [r5, #12]	@ unaligned
 17235 1842 03CC     		ldmia	r4!, {r0, r1}
 17236 1844 2861     		str	r0, [r5, #16]	@ unaligned
 17237 1846 6961     		str	r1, [r5, #20]	@ unaligned
 17238 1848 2388     		ldrh	r3, [r4]	@ unaligned
 17239 184a A278     		ldrb	r2, [r4, #2]
 17240 184c 2B83     		strh	r3, [r5, #24]	@ unaligned
 17241 184e 1346     		mov	r3, r2
 17242 1850 AB76     		strb	r3, [r5, #26]
 17243 1852 13E0     		b	.L654
 17244              	.L653:
2254:..\src/command_processing.c ****         else
2255:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 17245              		.loc 1 2255 0
 17246 1854 7869     		ldr	r0, [r7, #20]
 17247 1856 FFF7FEFF 		bl	strlen
 17248 185a 0346     		mov	r3, r0
 17249 185c 1A46     		mov	r2, r3
 17250 185e 7B69     		ldr	r3, [r7, #20]
 17251 1860 1344     		add	r3, r3, r2
 17252 1862 454A     		ldr	r2, .L702+32
 17253 1864 1D46     		mov	r5, r3
 17254 1866 1446     		mov	r4, r2
 17255 1868 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17256 186a 2860     		str	r0, [r5]	@ unaligned
 17257 186c 6960     		str	r1, [r5, #4]	@ unaligned
 17258 186e AA60     		str	r2, [r5, #8]	@ unaligned
 17259 1870 EB60     		str	r3, [r5, #12]	@ unaligned
 17260 1872 03CC     		ldmia	r4!, {r0, r1}
 17261 1874 2861     		str	r0, [r5, #16]	@ unaligned
 17262 1876 6961     		str	r1, [r5, #20]	@ unaligned
 17263 1878 2388     		ldrh	r3, [r4]	@ unaligned
 17264 187a 2B83     		strh	r3, [r5, #24]	@ unaligned
 17265              	.L654:
2256:..\src/command_processing.c **** 
2257:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 17266              		.loc 1 2257 0
 17267 187c D7F88830 		ldr	r3, [r7, #136]
 17268 1880 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 17269 1884 1A46     		mov	r2, r3
 17270 1886 D7F88830 		ldr	r3, [r7, #136]
 17271 188a 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 17272 188e 07F11800 		add	r0, r7, #24
 17273 1892 3A49     		ldr	r1, .L702+36
 17274 1894 FFF7FEFF 		bl	sprintf
2258:..\src/command_processing.c ****         strcat(info_string, str);
 17275              		.loc 1 2258 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 384


 17276 1898 07F11803 		add	r3, r7, #24
 17277 189c 1946     		mov	r1, r3
 17278 189e 7869     		ldr	r0, [r7, #20]
 17279 18a0 FFF7FEFF 		bl	strcat
2259:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17280              		.loc 1 2259 0
 17281 18a4 7869     		ldr	r0, [r7, #20]
 17282 18a6 FFF7FEFF 		bl	strlen
 17283 18aa 0346     		mov	r3, r0
 17284 18ac 1A46     		mov	r2, r3
 17285 18ae 7B69     		ldr	r3, [r7, #20]
 17286 18b0 1344     		add	r3, r3, r2
 17287 18b2 2A4A     		ldr	r2, .L702+4
 17288 18b4 1188     		ldrh	r1, [r2]	@ unaligned
 17289 18b6 9278     		ldrb	r2, [r2, #2]
 17290 18b8 1980     		strh	r1, [r3]	@ unaligned
 17291 18ba 9A70     		strb	r2, [r3, #2]
2260:..\src/command_processing.c **** 
2261:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 17292              		.loc 1 2261 0
 17293 18bc D7F88830 		ldr	r3, [r7, #136]
 17294 18c0 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 17295 18c4 012B     		cmp	r3, #1
 17296 18c6 40F08A80 		bne	.L655
2262:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 17297              		.loc 1 2262 0
 17298 18ca 7869     		ldr	r0, [r7, #20]
 17299 18cc FFF7FEFF 		bl	strlen
 17300 18d0 0346     		mov	r3, r0
 17301 18d2 1A46     		mov	r2, r3
 17302 18d4 7B69     		ldr	r3, [r7, #20]
 17303 18d6 1344     		add	r3, r3, r2
 17304 18d8 294A     		ldr	r2, .L702+40
 17305 18da 1C46     		mov	r4, r3
 17306 18dc 1546     		mov	r5, r2
 17307 18de 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17308 18e0 2060     		str	r0, [r4]	@ unaligned
 17309 18e2 6160     		str	r1, [r4, #4]	@ unaligned
 17310 18e4 A260     		str	r2, [r4, #8]	@ unaligned
 17311 18e6 E360     		str	r3, [r4, #12]	@ unaligned
 17312 18e8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17313 18ea 2061     		str	r0, [r4, #16]	@ unaligned
 17314 18ec 6161     		str	r1, [r4, #20]	@ unaligned
 17315 18ee A261     		str	r2, [r4, #24]	@ unaligned
 17316 18f0 E361     		str	r3, [r4, #28]	@ unaligned
2263:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 17317              		.loc 1 2263 0
 17318 18f2 0023     		movs	r3, #0
 17319 18f4 C7F89430 		str	r3, [r7, #148]
 17320 18f8 25E0     		b	.L656
 17321              	.L657:
2264:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17322              		.loc 1 2264 0 discriminator 3
 17323 18fa D7F89430 		ldr	r3, [r7, #148]
 17324 18fe 591C     		adds	r1, r3, #1
 17325 1900 204A     		ldr	r2, .L702+44
 17326 1902 D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 385


 17327 1906 0233     		adds	r3, r3, #2
 17328 1908 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17329 190c 07F11800 		add	r0, r7, #24
 17330 1910 0A46     		mov	r2, r1
 17331 1912 1D49     		ldr	r1, .L702+48
 17332 1914 FFF7FEFF 		bl	sprintf
2265:..\src/command_processing.c ****                 strcat(info_string, str);
 17333              		.loc 1 2265 0 discriminator 3
 17334 1918 07F11803 		add	r3, r7, #24
 17335 191c 1946     		mov	r1, r3
 17336 191e 7869     		ldr	r0, [r7, #20]
 17337 1920 FFF7FEFF 		bl	strcat
2266:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17338              		.loc 1 2266 0 discriminator 3
 17339 1924 7869     		ldr	r0, [r7, #20]
 17340 1926 FFF7FEFF 		bl	strlen
 17341 192a 0346     		mov	r3, r0
 17342 192c 1A46     		mov	r2, r3
 17343 192e 7B69     		ldr	r3, [r7, #20]
 17344 1930 1344     		add	r3, r3, r2
 17345 1932 0A4A     		ldr	r2, .L702+4
 17346 1934 1188     		ldrh	r1, [r2]	@ unaligned
 17347 1936 9278     		ldrb	r2, [r2, #2]
 17348 1938 1980     		strh	r1, [r3]	@ unaligned
 17349 193a 9A70     		strb	r2, [r3, #2]
2263:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17350              		.loc 1 2263 0 discriminator 3
 17351 193c D7F89430 		ldr	r3, [r7, #148]
 17352 1940 0133     		adds	r3, r3, #1
 17353 1942 C7F89430 		str	r3, [r7, #148]
 17354              	.L656:
2263:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17355              		.loc 1 2263 0 is_stmt 0 discriminator 1
 17356 1946 D7F89430 		ldr	r3, [r7, #148]
 17357 194a 052B     		cmp	r3, #5
 17358 194c D5DD     		ble	.L657
2267:..\src/command_processing.c ****             }
2268:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 17359              		.loc 1 2268 0 is_stmt 1
 17360 194e 0023     		movs	r3, #0
 17361 1950 C7F89430 		str	r3, [r7, #148]
 17362 1954 3FE0     		b	.L658
 17363              	.L703:
 17364 1956 00BF     		.align	2
 17365              	.L702:
 17366 1958 EC180000 		.word	.LC234
 17367 195c 58110000 		.word	.LC152
 17368 1960 08190000 		.word	.LC235
 17369 1964 1C190000 		.word	.LC236
 17370 1968 40190000 		.word	.LC237
 17371 196c 64190000 		.word	.LC238
 17372 1970 7C190000 		.word	.LC239
 17373 1974 90190000 		.word	.LC240
 17374 1978 AC190000 		.word	.LC241
 17375 197c C8190000 		.word	.LC242
 17376 1980 E0190000 		.word	.LC243
 17377 1984 00000000 		.word	g_adc_meas
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 386


 17378 1988 001A0000 		.word	.LC244
 17379              	.L659:
2269:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17380              		.loc 1 2269 0 discriminator 3
 17381 198c D7F89430 		ldr	r3, [r7, #148]
 17382 1990 591C     		adds	r1, r3, #1
 17383 1992 BD4A     		ldr	r2, .L704
 17384 1994 D7F89430 		ldr	r3, [r7, #148]
 17385 1998 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17386 199c 07F11800 		add	r0, r7, #24
 17387 19a0 0A46     		mov	r2, r1
 17388 19a2 BA49     		ldr	r1, .L704+4
 17389 19a4 FFF7FEFF 		bl	sprintf
2270:..\src/command_processing.c ****                 strcat(info_string, str);
 17390              		.loc 1 2270 0 discriminator 3
 17391 19a8 07F11803 		add	r3, r7, #24
 17392 19ac 1946     		mov	r1, r3
 17393 19ae 7869     		ldr	r0, [r7, #20]
 17394 19b0 FFF7FEFF 		bl	strcat
2271:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17395              		.loc 1 2271 0 discriminator 3
 17396 19b4 7869     		ldr	r0, [r7, #20]
 17397 19b6 FFF7FEFF 		bl	strlen
 17398 19ba 0346     		mov	r3, r0
 17399 19bc 1A46     		mov	r2, r3
 17400 19be 7B69     		ldr	r3, [r7, #20]
 17401 19c0 1344     		add	r3, r3, r2
 17402 19c2 B34A     		ldr	r2, .L704+8
 17403 19c4 1188     		ldrh	r1, [r2]	@ unaligned
 17404 19c6 9278     		ldrb	r2, [r2, #2]
 17405 19c8 1980     		strh	r1, [r3]	@ unaligned
 17406 19ca 9A70     		strb	r2, [r3, #2]
2268:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17407              		.loc 1 2268 0 discriminator 3
 17408 19cc D7F89430 		ldr	r3, [r7, #148]
 17409 19d0 0133     		adds	r3, r3, #1
 17410 19d2 C7F89430 		str	r3, [r7, #148]
 17411              	.L658:
2268:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17412              		.loc 1 2268 0 is_stmt 0 discriminator 1
 17413 19d6 D7F89430 		ldr	r3, [r7, #148]
 17414 19da 012B     		cmp	r3, #1
 17415 19dc D6DD     		ble	.L659
 17416              	.L655:
2272:..\src/command_processing.c ****             }
2273:..\src/command_processing.c ****         }
2274:..\src/command_processing.c **** 
2275:..\src/command_processing.c **** #ifdef GENERIC_FW
2276:..\src/command_processing.c ****     
2277:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17417              		.loc 1 2277 0 is_stmt 1
 17418 19de 7869     		ldr	r0, [r7, #20]
 17419 19e0 FFF7FEFF 		bl	strlen
 17420 19e4 0346     		mov	r3, r0
 17421 19e6 1A46     		mov	r2, r3
 17422 19e8 7B69     		ldr	r3, [r7, #20]
 17423 19ea 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 387


 17424 19ec A84A     		ldr	r2, .L704+8
 17425 19ee 1188     		ldrh	r1, [r2]	@ unaligned
 17426 19f0 9278     		ldrb	r2, [r2, #2]
 17427 19f2 1980     		strh	r1, [r3]	@ unaligned
 17428 19f4 9A70     		strb	r2, [r3, #2]
2278:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
 17429              		.loc 1 2278 0
 17430 19f6 7869     		ldr	r0, [r7, #20]
 17431 19f8 FFF7FEFF 		bl	strlen
 17432 19fc 0346     		mov	r3, r0
 17433 19fe 1A46     		mov	r2, r3
 17434 1a00 7B69     		ldr	r3, [r7, #20]
 17435 1a02 1344     		add	r3, r3, r2
 17436 1a04 A34A     		ldr	r2, .L704+12
 17437 1a06 1D46     		mov	r5, r3
 17438 1a08 1446     		mov	r4, r2
 17439 1a0a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17440 1a0c 2860     		str	r0, [r5]	@ unaligned
 17441 1a0e 6960     		str	r1, [r5, #4]	@ unaligned
 17442 1a10 AA60     		str	r2, [r5, #8]	@ unaligned
 17443 1a12 EB60     		str	r3, [r5, #12]	@ unaligned
 17444 1a14 03CC     		ldmia	r4!, {r0, r1}
 17445 1a16 2861     		str	r0, [r5, #16]	@ unaligned
 17446 1a18 6961     		str	r1, [r5, #20]	@ unaligned
 17447 1a1a 2378     		ldrb	r3, [r4]
 17448 1a1c 2B76     		strb	r3, [r5, #24]
2279:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
 17449              		.loc 1 2279 0
 17450 1a1e 9E4B     		ldr	r3, .L704+16
 17451 1a20 B3F8B032 		ldrh	r3, [r3, #688]
 17452 1a24 1A46     		mov	r2, r3
 17453 1a26 07F11803 		add	r3, r7, #24
 17454 1a2a 9C49     		ldr	r1, .L704+20
 17455 1a2c 1846     		mov	r0, r3
 17456 1a2e FFF7FEFF 		bl	sprintf
2280:..\src/command_processing.c ****         strcat(info_string, str);
 17457              		.loc 1 2280 0
 17458 1a32 07F11803 		add	r3, r7, #24
 17459 1a36 1946     		mov	r1, r3
 17460 1a38 7869     		ldr	r0, [r7, #20]
 17461 1a3a FFF7FEFF 		bl	strcat
2281:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17462              		.loc 1 2281 0
 17463 1a3e 7869     		ldr	r0, [r7, #20]
 17464 1a40 FFF7FEFF 		bl	strlen
 17465 1a44 0346     		mov	r3, r0
 17466 1a46 1A46     		mov	r2, r3
 17467 1a48 7B69     		ldr	r3, [r7, #20]
 17468 1a4a 1344     		add	r3, r3, r2
 17469 1a4c 904A     		ldr	r2, .L704+8
 17470 1a4e 1188     		ldrh	r1, [r2]	@ unaligned
 17471 1a50 9278     		ldrb	r2, [r2, #2]
 17472 1a52 1980     		strh	r1, [r3]	@ unaligned
 17473 1a54 9A70     		strb	r2, [r3, #2]
2282:..\src/command_processing.c **** 
2283:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
 17474              		.loc 1 2283 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 388


 17475 1a56 904B     		ldr	r3, .L704+16
 17476 1a58 B3F9B232 		ldrsh	r3, [r3, #690]
 17477 1a5c 1A46     		mov	r2, r3
 17478 1a5e 07F11803 		add	r3, r7, #24
 17479 1a62 8F49     		ldr	r1, .L704+24
 17480 1a64 1846     		mov	r0, r3
 17481 1a66 FFF7FEFF 		bl	sprintf
2284:..\src/command_processing.c ****         strcat(info_string, str);
 17482              		.loc 1 2284 0
 17483 1a6a 07F11803 		add	r3, r7, #24
 17484 1a6e 1946     		mov	r1, r3
 17485 1a70 7869     		ldr	r0, [r7, #20]
 17486 1a72 FFF7FEFF 		bl	strcat
2285:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17487              		.loc 1 2285 0
 17488 1a76 7869     		ldr	r0, [r7, #20]
 17489 1a78 FFF7FEFF 		bl	strlen
 17490 1a7c 0346     		mov	r3, r0
 17491 1a7e 1A46     		mov	r2, r3
 17492 1a80 7B69     		ldr	r3, [r7, #20]
 17493 1a82 1344     		add	r3, r3, r2
 17494 1a84 824A     		ldr	r2, .L704+8
 17495 1a86 1188     		ldrh	r1, [r2]	@ unaligned
 17496 1a88 9278     		ldrb	r2, [r2, #2]
 17497 1a8a 1980     		strh	r1, [r3]	@ unaligned
 17498 1a8c 9A70     		strb	r2, [r3, #2]
2286:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
 17499              		.loc 1 2286 0
 17500 1a8e 824B     		ldr	r3, .L704+16
 17501 1a90 B3F8B432 		ldrh	r3, [r3, #692]
 17502 1a94 1A46     		mov	r2, r3
 17503 1a96 804B     		ldr	r3, .L704+16
 17504 1a98 B3F8B632 		ldrh	r3, [r3, #694]
 17505 1a9c 07F11800 		add	r0, r7, #24
 17506 1aa0 8049     		ldr	r1, .L704+28
 17507 1aa2 FFF7FEFF 		bl	sprintf
2287:..\src/command_processing.c ****         strcat(info_string, str);
 17508              		.loc 1 2287 0
 17509 1aa6 07F11803 		add	r3, r7, #24
 17510 1aaa 1946     		mov	r1, r3
 17511 1aac 7869     		ldr	r0, [r7, #20]
 17512 1aae FFF7FEFF 		bl	strcat
2288:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17513              		.loc 1 2288 0
 17514 1ab2 7869     		ldr	r0, [r7, #20]
 17515 1ab4 FFF7FEFF 		bl	strlen
 17516 1ab8 0346     		mov	r3, r0
 17517 1aba 1A46     		mov	r2, r3
 17518 1abc 7B69     		ldr	r3, [r7, #20]
 17519 1abe 1344     		add	r3, r3, r2
 17520 1ac0 734A     		ldr	r2, .L704+8
 17521 1ac2 1188     		ldrh	r1, [r2]	@ unaligned
 17522 1ac4 9278     		ldrb	r2, [r2, #2]
 17523 1ac6 1980     		strh	r1, [r3]	@ unaligned
 17524 1ac8 9A70     		strb	r2, [r3, #2]
2289:..\src/command_processing.c **** 
2290:..\src/command_processing.c **** #endif
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 389


2291:..\src/command_processing.c ****         
2292:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 17525              		.loc 1 2292 0
 17526 1aca D7F88830 		ldr	r3, [r7, #136]
 17527 1ace 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17528 1ad2 002B     		cmp	r3, #0
 17529 1ad4 63D0     		beq	.L660
2293:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17530              		.loc 1 2293 0
 17531 1ad6 D7F88830 		ldr	r3, [r7, #136]
 17532 1ada D3F8A422 		ldr	r2, [r3, #676]
 17533 1ade 07F11803 		add	r3, r7, #24
 17534 1ae2 7149     		ldr	r1, .L704+32
 17535 1ae4 1846     		mov	r0, r3
 17536 1ae6 FFF7FEFF 		bl	sprintf
2294:..\src/command_processing.c ****             strcat(info_string, str);
 17537              		.loc 1 2294 0
 17538 1aea 07F11803 		add	r3, r7, #24
 17539 1aee 1946     		mov	r1, r3
 17540 1af0 7869     		ldr	r0, [r7, #20]
 17541 1af2 FFF7FEFF 		bl	strcat
2295:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17542              		.loc 1 2295 0
 17543 1af6 7869     		ldr	r0, [r7, #20]
 17544 1af8 FFF7FEFF 		bl	strlen
 17545 1afc 0346     		mov	r3, r0
 17546 1afe 1A46     		mov	r2, r3
 17547 1b00 7B69     		ldr	r3, [r7, #20]
 17548 1b02 1344     		add	r3, r3, r2
 17549 1b04 624A     		ldr	r2, .L704+8
 17550 1b06 1188     		ldrh	r1, [r2]	@ unaligned
 17551 1b08 9278     		ldrb	r2, [r2, #2]
 17552 1b0a 1980     		strh	r1, [r3]	@ unaligned
 17553 1b0c 9A70     		strb	r2, [r3, #2]
2296:..\src/command_processing.c ****             
2297:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17554              		.loc 1 2297 0
 17555 1b0e D7F88830 		ldr	r3, [r7, #136]
 17556 1b12 D3F8A822 		ldr	r2, [r3, #680]
 17557 1b16 07F11803 		add	r3, r7, #24
 17558 1b1a 6449     		ldr	r1, .L704+36
 17559 1b1c 1846     		mov	r0, r3
 17560 1b1e FFF7FEFF 		bl	sprintf
2298:..\src/command_processing.c ****             strcat(info_string, str);
 17561              		.loc 1 2298 0
 17562 1b22 07F11803 		add	r3, r7, #24
 17563 1b26 1946     		mov	r1, r3
 17564 1b28 7869     		ldr	r0, [r7, #20]
 17565 1b2a FFF7FEFF 		bl	strcat
2299:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17566              		.loc 1 2299 0
 17567 1b2e 7869     		ldr	r0, [r7, #20]
 17568 1b30 FFF7FEFF 		bl	strlen
 17569 1b34 0346     		mov	r3, r0
 17570 1b36 1A46     		mov	r2, r3
 17571 1b38 7B69     		ldr	r3, [r7, #20]
 17572 1b3a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 390


 17573 1b3c 544A     		ldr	r2, .L704+8
 17574 1b3e 1188     		ldrh	r1, [r2]	@ unaligned
 17575 1b40 9278     		ldrb	r2, [r2, #2]
 17576 1b42 1980     		strh	r1, [r3]	@ unaligned
 17577 1b44 9A70     		strb	r2, [r3, #2]
2300:..\src/command_processing.c ****             
2301:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 17578              		.loc 1 2301 0
 17579 1b46 D7F88830 		ldr	r3, [r7, #136]
 17580 1b4a D3F8A022 		ldr	r2, [r3, #672]
 17581 1b4e D7F88830 		ldr	r3, [r7, #136]
 17582 1b52 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17583 1b56 1846     		mov	r0, r3
 17584 1b58 D7F88810 		ldr	r1, [r7, #136]
 17585 1b5c 0346     		mov	r3, r0
 17586 1b5e 5B00     		lsls	r3, r3, #1
 17587 1b60 0344     		add	r3, r3, r0
 17588 1b62 1B01     		lsls	r3, r3, #4
 17589 1b64 0B44     		add	r3, r3, r1
 17590 1b66 03F29513 		addw	r3, r3, #405
 17591 1b6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17592 1b6c 1A41     		asrs	r2, r2, r3
 17593 1b6e 07F11803 		add	r3, r7, #24
 17594 1b72 4F49     		ldr	r1, .L704+40
 17595 1b74 1846     		mov	r0, r3
 17596 1b76 FFF7FEFF 		bl	sprintf
2302:..\src/command_processing.c ****             strcat(info_string, str);
 17597              		.loc 1 2302 0
 17598 1b7a 07F11803 		add	r3, r7, #24
 17599 1b7e 1946     		mov	r1, r3
 17600 1b80 7869     		ldr	r0, [r7, #20]
 17601 1b82 FFF7FEFF 		bl	strcat
2303:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 17602              		.loc 1 2303 0
 17603 1b86 7869     		ldr	r0, [r7, #20]
 17604 1b88 FFF7FEFF 		bl	strlen
 17605 1b8c 0346     		mov	r3, r0
 17606 1b8e 1A46     		mov	r2, r3
 17607 1b90 7B69     		ldr	r3, [r7, #20]
 17608 1b92 1344     		add	r3, r3, r2
 17609 1b94 3E4A     		ldr	r2, .L704+8
 17610 1b96 1188     		ldrh	r1, [r2]	@ unaligned
 17611 1b98 9278     		ldrb	r2, [r2, #2]
 17612 1b9a 1980     		strh	r1, [r3]	@ unaligned
 17613 1b9c 9A70     		strb	r2, [r3, #2]
 17614              	.L660:
2304:..\src/command_processing.c ****         }
2305:..\src/command_processing.c **** 
2306:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 17615              		.loc 1 2306 0
 17616 1b9e D7F88830 		ldr	r3, [r7, #136]
 17617 1ba2 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17618 1ba6 002B     		cmp	r3, #0
 17619 1ba8 00F0D281 		beq	.L661
2307:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17620              		.loc 1 2307 0
 17621 1bac 414B     		ldr	r3, .L704+44
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 391


 17622 1bae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17623 1bb0 1A46     		mov	r2, r3
 17624 1bb2 07F11803 		add	r3, r7, #24
 17625 1bb6 4049     		ldr	r1, .L704+48
 17626 1bb8 1846     		mov	r0, r3
 17627 1bba FFF7FEFF 		bl	sprintf
2308:..\src/command_processing.c ****             strcat(info_string, str);
 17628              		.loc 1 2308 0
 17629 1bbe 07F11803 		add	r3, r7, #24
 17630 1bc2 1946     		mov	r1, r3
 17631 1bc4 7869     		ldr	r0, [r7, #20]
 17632 1bc6 FFF7FEFF 		bl	strcat
2309:..\src/command_processing.c ****             
2310:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17633              		.loc 1 2310 0
 17634 1bca 7869     		ldr	r0, [r7, #20]
 17635 1bcc FFF7FEFF 		bl	strlen
 17636 1bd0 0346     		mov	r3, r0
 17637 1bd2 1A46     		mov	r2, r3
 17638 1bd4 7B69     		ldr	r3, [r7, #20]
 17639 1bd6 1344     		add	r3, r3, r2
 17640 1bd8 2D4A     		ldr	r2, .L704+8
 17641 1bda 1188     		ldrh	r1, [r2]	@ unaligned
 17642 1bdc 9278     		ldrb	r2, [r2, #2]
 17643 1bde 1980     		strh	r1, [r3]	@ unaligned
 17644 1be0 9A70     		strb	r2, [r3, #2]
2311:..\src/command_processing.c ****             
2312:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 17645              		.loc 1 2312 0
 17646 1be2 7869     		ldr	r0, [r7, #20]
 17647 1be4 FFF7FEFF 		bl	strlen
 17648 1be8 0346     		mov	r3, r0
 17649 1bea 1A46     		mov	r2, r3
 17650 1bec 7B69     		ldr	r3, [r7, #20]
 17651 1bee 1344     		add	r3, r3, r2
 17652 1bf0 324A     		ldr	r2, .L704+52
 17653 1bf2 1D46     		mov	r5, r3
 17654 1bf4 1446     		mov	r4, r2
 17655 1bf6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17656 1bf8 2860     		str	r0, [r5]	@ unaligned
 17657 1bfa 6960     		str	r1, [r5, #4]	@ unaligned
 17658 1bfc AA60     		str	r2, [r5, #8]	@ unaligned
 17659 1bfe EB60     		str	r3, [r5, #12]	@ unaligned
 17660 1c00 2068     		ldr	r0, [r4]	@ unaligned
 17661 1c02 2861     		str	r0, [r5, #16]	@ unaligned
 17662 1c04 2379     		ldrb	r3, [r4, #4]
 17663 1c06 2B75     		strb	r3, [r5, #20]
2313:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 17664              		.loc 1 2313 0
 17665 1c08 0023     		movs	r3, #0
 17666 1c0a C7F89430 		str	r3, [r7, #148]
 17667 1c0e 88E1     		b	.L662
 17668              	.L673:
2314:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17669              		.loc 1 2314 0
 17670 1c10 2B4A     		ldr	r2, .L704+56
 17671 1c12 D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 392


 17672 1c16 1344     		add	r3, r3, r2
 17673 1c18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17674 1c1a 07F11800 		add	r0, r7, #24
 17675 1c1e D7F89420 		ldr	r2, [r7, #148]
 17676 1c22 2849     		ldr	r1, .L704+60
 17677 1c24 FFF7FEFF 		bl	sprintf
2315:..\src/command_processing.c ****                 strcat(info_string, str);
 17678              		.loc 1 2315 0
 17679 1c28 07F11803 		add	r3, r7, #24
 17680 1c2c 1946     		mov	r1, r3
 17681 1c2e 7869     		ldr	r0, [r7, #20]
 17682 1c30 FFF7FEFF 		bl	strcat
2316:..\src/command_processing.c ****                 
2317:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 17683              		.loc 1 2317 0
 17684 1c34 07F11803 		add	r3, r7, #24
 17685 1c38 234A     		ldr	r2, .L704+64
 17686 1c3a 1C46     		mov	r4, r3
 17687 1c3c 1546     		mov	r5, r2
 17688 1c3e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17689 1c40 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17690 1c42 2B68     		ldr	r3, [r5]
 17691 1c44 2380     		strh	r3, [r4]	@ movhi
2318:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17692              		.loc 1 2318 0
 17693 1c46 1E4A     		ldr	r2, .L704+56
 17694 1c48 D7F89430 		ldr	r3, [r7, #148]
 17695 1c4c 1344     		add	r3, r3, r2
 17696 1c4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17697 1c50 1946     		mov	r1, r3
 17698 1c52 D7F88820 		ldr	r2, [r7, #136]
 17699 1c56 0B46     		mov	r3, r1
 17700 1c58 9B00     		lsls	r3, r3, #2
 17701 1c5a 0B44     		add	r3, r3, r1
 17702 1c5c 1344     		add	r3, r3, r2
 17703 1c5e 03F20223 		addw	r3, r3, #514
 17704 1c62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17705 1c64 002B     		cmp	r3, #0
 17706 1c66 33D0     		beq	.L663
2319:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17707              		.loc 1 2319 0
 17708 1c68 07F11803 		add	r3, r7, #24
 17709 1c6c 1846     		mov	r0, r3
 17710 1c6e FFF7FEFF 		bl	strlen
 17711 1c72 0346     		mov	r3, r0
 17712 1c74 1A46     		mov	r2, r3
 17713 1c76 07F11803 		add	r3, r7, #24
 17714 1c7a 1344     		add	r3, r3, r2
 17715 1c7c 134A     		ldr	r2, .L704+68
 17716 1c7e 1068     		ldr	r0, [r2]	@ unaligned
 17717 1c80 1860     		str	r0, [r3]	@ unaligned
 17718 1c82 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17719 1c84 9A80     		strh	r2, [r3, #4]	@ unaligned
 17720 1c86 32E0     		b	.L664
 17721              	.L705:
 17722              		.align	2
 17723              	.L704:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 393


 17724 1c88 00000000 		.word	g_adc_meas
 17725 1c8c 101A0000 		.word	.LC245
 17726 1c90 58110000 		.word	.LC152
 17727 1c94 241A0000 		.word	.LC246
 17728 1c98 00000000 		.word	c_mem
 17729 1c9c 401A0000 		.word	.LC247
 17730 1ca0 541A0000 		.word	.LC248
 17731 1ca4 6C1A0000 		.word	.LC249
 17732 1ca8 8C1A0000 		.word	.LC250
 17733 1cac A81A0000 		.word	.LC251
 17734 1cb0 D01A0000 		.word	.LC252
 17735 1cb4 00000000 		.word	N_IMU_Connected
 17736 1cb8 E41A0000 		.word	.LC253
 17737 1cbc F81A0000 		.word	.LC254
 17738 1cc0 00000000 		.word	IMU_connected
 17739 1cc4 101B0000 		.word	.LC255
 17740 1cc8 241B0000 		.word	.LC256
 17741 1ccc 2C130000 		.word	.LC175
 17742              	.L663:
2320:..\src/command_processing.c ****                 else
2321:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17743              		.loc 1 2321 0
 17744 1cd0 07F11803 		add	r3, r7, #24
 17745 1cd4 1846     		mov	r0, r3
 17746 1cd6 FFF7FEFF 		bl	strlen
 17747 1cda 0346     		mov	r3, r0
 17748 1cdc 1A46     		mov	r2, r3
 17749 1cde 07F11803 		add	r3, r7, #24
 17750 1ce2 1344     		add	r3, r3, r2
 17751 1ce4 BD4A     		ldr	r2, .L706
 17752 1ce6 1068     		ldr	r0, [r2]	@ unaligned
 17753 1ce8 1860     		str	r0, [r3]	@ unaligned
 17754 1cea 1279     		ldrb	r2, [r2, #4]
 17755 1cec 1A71     		strb	r2, [r3, #4]
 17756              	.L664:
2322:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 17757              		.loc 1 2322 0
 17758 1cee 07F11803 		add	r3, r7, #24
 17759 1cf2 1846     		mov	r0, r3
 17760 1cf4 FFF7FEFF 		bl	strlen
 17761 1cf8 0346     		mov	r3, r0
 17762 1cfa 1A46     		mov	r2, r3
 17763 1cfc 07F11803 		add	r3, r7, #24
 17764 1d00 1344     		add	r3, r3, r2
 17765 1d02 B74A     		ldr	r2, .L706+4
 17766 1d04 1C46     		mov	r4, r3
 17767 1d06 1346     		mov	r3, r2
 17768 1d08 07CB     		ldmia	r3!, {r0, r1, r2}
 17769 1d0a 2060     		str	r0, [r4]	@ unaligned
 17770 1d0c 6160     		str	r1, [r4, #4]	@ unaligned
 17771 1d0e A260     		str	r2, [r4, #8]	@ unaligned
 17772 1d10 1B88     		ldrh	r3, [r3]	@ unaligned
 17773 1d12 A381     		strh	r3, [r4, #12]	@ unaligned
2323:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17774              		.loc 1 2323 0
 17775 1d14 B34A     		ldr	r2, .L706+8
 17776 1d16 D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 394


 17777 1d1a 1344     		add	r3, r3, r2
 17778 1d1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17779 1d1e 1946     		mov	r1, r3
 17780 1d20 D7F88820 		ldr	r2, [r7, #136]
 17781 1d24 0B46     		mov	r3, r1
 17782 1d26 9B00     		lsls	r3, r3, #2
 17783 1d28 0B44     		add	r3, r3, r1
 17784 1d2a 1344     		add	r3, r3, r2
 17785 1d2c 03F20323 		addw	r3, r3, #515
 17786 1d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17787 1d32 002B     		cmp	r3, #0
 17788 1d34 0FD0     		beq	.L665
2324:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17789              		.loc 1 2324 0
 17790 1d36 07F11803 		add	r3, r7, #24
 17791 1d3a 1846     		mov	r0, r3
 17792 1d3c FFF7FEFF 		bl	strlen
 17793 1d40 0346     		mov	r3, r0
 17794 1d42 1A46     		mov	r2, r3
 17795 1d44 07F11803 		add	r3, r7, #24
 17796 1d48 1344     		add	r3, r3, r2
 17797 1d4a A74A     		ldr	r2, .L706+12
 17798 1d4c 1068     		ldr	r0, [r2]	@ unaligned
 17799 1d4e 1860     		str	r0, [r3]	@ unaligned
 17800 1d50 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17801 1d52 9A80     		strh	r2, [r3, #4]	@ unaligned
 17802 1d54 0EE0     		b	.L666
 17803              	.L665:
2325:..\src/command_processing.c ****                 else
2326:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17804              		.loc 1 2326 0
 17805 1d56 07F11803 		add	r3, r7, #24
 17806 1d5a 1846     		mov	r0, r3
 17807 1d5c FFF7FEFF 		bl	strlen
 17808 1d60 0346     		mov	r3, r0
 17809 1d62 1A46     		mov	r2, r3
 17810 1d64 07F11803 		add	r3, r7, #24
 17811 1d68 1344     		add	r3, r3, r2
 17812 1d6a 9C4A     		ldr	r2, .L706
 17813 1d6c 1068     		ldr	r0, [r2]	@ unaligned
 17814 1d6e 1860     		str	r0, [r3]	@ unaligned
 17815 1d70 1279     		ldrb	r2, [r2, #4]
 17816 1d72 1A71     		strb	r2, [r3, #4]
 17817              	.L666:
2327:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 17818              		.loc 1 2327 0
 17819 1d74 07F11803 		add	r3, r7, #24
 17820 1d78 1846     		mov	r0, r3
 17821 1d7a FFF7FEFF 		bl	strlen
 17822 1d7e 0346     		mov	r3, r0
 17823 1d80 1A46     		mov	r2, r3
 17824 1d82 07F11803 		add	r3, r7, #24
 17825 1d86 1344     		add	r3, r3, r2
 17826 1d88 984A     		ldr	r2, .L706+16
 17827 1d8a 1D46     		mov	r5, r3
 17828 1d8c 1446     		mov	r4, r2
 17829 1d8e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 395


 17830 1d90 2860     		str	r0, [r5]	@ unaligned
 17831 1d92 6960     		str	r1, [r5, #4]	@ unaligned
 17832 1d94 AA60     		str	r2, [r5, #8]	@ unaligned
 17833 1d96 EB60     		str	r3, [r5, #12]	@ unaligned
 17834 1d98 2378     		ldrb	r3, [r4]
 17835 1d9a 2B74     		strb	r3, [r5, #16]
2328:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17836              		.loc 1 2328 0
 17837 1d9c 914A     		ldr	r2, .L706+8
 17838 1d9e D7F89430 		ldr	r3, [r7, #148]
 17839 1da2 1344     		add	r3, r3, r2
 17840 1da4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17841 1da6 1946     		mov	r1, r3
 17842 1da8 D7F88820 		ldr	r2, [r7, #136]
 17843 1dac 0B46     		mov	r3, r1
 17844 1dae 9B00     		lsls	r3, r3, #2
 17845 1db0 0B44     		add	r3, r3, r1
 17846 1db2 1344     		add	r3, r3, r2
 17847 1db4 03F50173 		add	r3, r3, #516
 17848 1db8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17849 1dba 002B     		cmp	r3, #0
 17850 1dbc 0FD0     		beq	.L667
2329:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17851              		.loc 1 2329 0
 17852 1dbe 07F11803 		add	r3, r7, #24
 17853 1dc2 1846     		mov	r0, r3
 17854 1dc4 FFF7FEFF 		bl	strlen
 17855 1dc8 0346     		mov	r3, r0
 17856 1dca 1A46     		mov	r2, r3
 17857 1dcc 07F11803 		add	r3, r7, #24
 17858 1dd0 1344     		add	r3, r3, r2
 17859 1dd2 854A     		ldr	r2, .L706+12
 17860 1dd4 1068     		ldr	r0, [r2]	@ unaligned
 17861 1dd6 1860     		str	r0, [r3]	@ unaligned
 17862 1dd8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17863 1dda 9A80     		strh	r2, [r3, #4]	@ unaligned
 17864 1ddc 0EE0     		b	.L668
 17865              	.L667:
2330:..\src/command_processing.c ****                 else
2331:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17866              		.loc 1 2331 0
 17867 1dde 07F11803 		add	r3, r7, #24
 17868 1de2 1846     		mov	r0, r3
 17869 1de4 FFF7FEFF 		bl	strlen
 17870 1de8 0346     		mov	r3, r0
 17871 1dea 1A46     		mov	r2, r3
 17872 1dec 07F11803 		add	r3, r7, #24
 17873 1df0 1344     		add	r3, r3, r2
 17874 1df2 7A4A     		ldr	r2, .L706
 17875 1df4 1068     		ldr	r0, [r2]	@ unaligned
 17876 1df6 1860     		str	r0, [r3]	@ unaligned
 17877 1df8 1279     		ldrb	r2, [r2, #4]
 17878 1dfa 1A71     		strb	r2, [r3, #4]
 17879              	.L668:
2332:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 17880              		.loc 1 2332 0
 17881 1dfc 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 396


 17882 1e00 1846     		mov	r0, r3
 17883 1e02 FFF7FEFF 		bl	strlen
 17884 1e06 0346     		mov	r3, r0
 17885 1e08 1A46     		mov	r2, r3
 17886 1e0a 07F11803 		add	r3, r7, #24
 17887 1e0e 1344     		add	r3, r3, r2
 17888 1e10 774A     		ldr	r2, .L706+20
 17889 1e12 1C46     		mov	r4, r3
 17890 1e14 1346     		mov	r3, r2
 17891 1e16 07CB     		ldmia	r3!, {r0, r1, r2}
 17892 1e18 2060     		str	r0, [r4]	@ unaligned
 17893 1e1a 6160     		str	r1, [r4, #4]	@ unaligned
 17894 1e1c A260     		str	r2, [r4, #8]	@ unaligned
 17895 1e1e 1B88     		ldrh	r3, [r3]	@ unaligned
 17896 1e20 A381     		strh	r3, [r4, #12]	@ unaligned
2333:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17897              		.loc 1 2333 0
 17898 1e22 704A     		ldr	r2, .L706+8
 17899 1e24 D7F89430 		ldr	r3, [r7, #148]
 17900 1e28 1344     		add	r3, r3, r2
 17901 1e2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17902 1e2c 1946     		mov	r1, r3
 17903 1e2e D7F88820 		ldr	r2, [r7, #136]
 17904 1e32 0B46     		mov	r3, r1
 17905 1e34 9B00     		lsls	r3, r3, #2
 17906 1e36 0B44     		add	r3, r3, r1
 17907 1e38 1344     		add	r3, r3, r2
 17908 1e3a 03F20523 		addw	r3, r3, #517
 17909 1e3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17910 1e40 002B     		cmp	r3, #0
 17911 1e42 0FD0     		beq	.L669
2334:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17912              		.loc 1 2334 0
 17913 1e44 07F11803 		add	r3, r7, #24
 17914 1e48 1846     		mov	r0, r3
 17915 1e4a FFF7FEFF 		bl	strlen
 17916 1e4e 0346     		mov	r3, r0
 17917 1e50 1A46     		mov	r2, r3
 17918 1e52 07F11803 		add	r3, r7, #24
 17919 1e56 1344     		add	r3, r3, r2
 17920 1e58 634A     		ldr	r2, .L706+12
 17921 1e5a 1068     		ldr	r0, [r2]	@ unaligned
 17922 1e5c 1860     		str	r0, [r3]	@ unaligned
 17923 1e5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17924 1e60 9A80     		strh	r2, [r3, #4]	@ unaligned
 17925 1e62 0EE0     		b	.L670
 17926              	.L669:
2335:..\src/command_processing.c ****                 else
2336:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17927              		.loc 1 2336 0
 17928 1e64 07F11803 		add	r3, r7, #24
 17929 1e68 1846     		mov	r0, r3
 17930 1e6a FFF7FEFF 		bl	strlen
 17931 1e6e 0346     		mov	r3, r0
 17932 1e70 1A46     		mov	r2, r3
 17933 1e72 07F11803 		add	r3, r7, #24
 17934 1e76 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 397


 17935 1e78 584A     		ldr	r2, .L706
 17936 1e7a 1068     		ldr	r0, [r2]	@ unaligned
 17937 1e7c 1860     		str	r0, [r3]	@ unaligned
 17938 1e7e 1279     		ldrb	r2, [r2, #4]
 17939 1e80 1A71     		strb	r2, [r3, #4]
 17940              	.L670:
2337:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 17941              		.loc 1 2337 0
 17942 1e82 07F11803 		add	r3, r7, #24
 17943 1e86 1846     		mov	r0, r3
 17944 1e88 FFF7FEFF 		bl	strlen
 17945 1e8c 0346     		mov	r3, r0
 17946 1e8e 1A46     		mov	r2, r3
 17947 1e90 07F11803 		add	r3, r7, #24
 17948 1e94 1344     		add	r3, r3, r2
 17949 1e96 574A     		ldr	r2, .L706+24
 17950 1e98 1C46     		mov	r4, r3
 17951 1e9a 1346     		mov	r3, r2
 17952 1e9c 07CB     		ldmia	r3!, {r0, r1, r2}
 17953 1e9e 2060     		str	r0, [r4]	@ unaligned
 17954 1ea0 6160     		str	r1, [r4, #4]	@ unaligned
 17955 1ea2 A260     		str	r2, [r4, #8]	@ unaligned
 17956 1ea4 1A88     		ldrh	r2, [r3]	@ unaligned
 17957 1ea6 9B78     		ldrb	r3, [r3, #2]
 17958 1ea8 A281     		strh	r2, [r4, #12]	@ unaligned
 17959 1eaa A373     		strb	r3, [r4, #14]
2338:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17960              		.loc 1 2338 0
 17961 1eac 4D4A     		ldr	r2, .L706+8
 17962 1eae D7F89430 		ldr	r3, [r7, #148]
 17963 1eb2 1344     		add	r3, r3, r2
 17964 1eb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17965 1eb6 1946     		mov	r1, r3
 17966 1eb8 D7F88820 		ldr	r2, [r7, #136]
 17967 1ebc 0B46     		mov	r3, r1
 17968 1ebe 9B00     		lsls	r3, r3, #2
 17969 1ec0 0B44     		add	r3, r3, r1
 17970 1ec2 1344     		add	r3, r3, r2
 17971 1ec4 03F20623 		addw	r3, r3, #518
 17972 1ec8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17973 1eca 002B     		cmp	r3, #0
 17974 1ecc 0FD0     		beq	.L671
2339:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17975              		.loc 1 2339 0
 17976 1ece 07F11803 		add	r3, r7, #24
 17977 1ed2 1846     		mov	r0, r3
 17978 1ed4 FFF7FEFF 		bl	strlen
 17979 1ed8 0346     		mov	r3, r0
 17980 1eda 1A46     		mov	r2, r3
 17981 1edc 07F11803 		add	r3, r7, #24
 17982 1ee0 1344     		add	r3, r3, r2
 17983 1ee2 414A     		ldr	r2, .L706+12
 17984 1ee4 1068     		ldr	r0, [r2]	@ unaligned
 17985 1ee6 1860     		str	r0, [r3]	@ unaligned
 17986 1ee8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17987 1eea 9A80     		strh	r2, [r3, #4]	@ unaligned
 17988 1eec 0EE0     		b	.L672
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 398


 17989              	.L671:
2340:..\src/command_processing.c ****                 else
2341:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17990              		.loc 1 2341 0
 17991 1eee 07F11803 		add	r3, r7, #24
 17992 1ef2 1846     		mov	r0, r3
 17993 1ef4 FFF7FEFF 		bl	strlen
 17994 1ef8 0346     		mov	r3, r0
 17995 1efa 1A46     		mov	r2, r3
 17996 1efc 07F11803 		add	r3, r7, #24
 17997 1f00 1344     		add	r3, r3, r2
 17998 1f02 364A     		ldr	r2, .L706
 17999 1f04 1068     		ldr	r0, [r2]	@ unaligned
 18000 1f06 1860     		str	r0, [r3]	@ unaligned
 18001 1f08 1279     		ldrb	r2, [r2, #4]
 18002 1f0a 1A71     		strb	r2, [r3, #4]
 18003              	.L672:
2342:..\src/command_processing.c ****                      
2343:..\src/command_processing.c ****                 strcat(info_string, str);
 18004              		.loc 1 2343 0 discriminator 2
 18005 1f0c 07F11803 		add	r3, r7, #24
 18006 1f10 1946     		mov	r1, r3
 18007 1f12 7869     		ldr	r0, [r7, #20]
 18008 1f14 FFF7FEFF 		bl	strcat
2313:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18009              		.loc 1 2313 0 discriminator 2
 18010 1f18 D7F89430 		ldr	r3, [r7, #148]
 18011 1f1c 0133     		adds	r3, r3, #1
 18012 1f1e C7F89430 		str	r3, [r7, #148]
 18013              	.L662:
2313:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18014              		.loc 1 2313 0 is_stmt 0 discriminator 1
 18015 1f22 354B     		ldr	r3, .L706+28
 18016 1f24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18017 1f26 1A46     		mov	r2, r3
 18018 1f28 D7F89430 		ldr	r3, [r7, #148]
 18019 1f2c 9A42     		cmp	r2, r3
 18020 1f2e 3FF76FAE 		bgt	.L673
2344:..\src/command_processing.c ****             }       
2345:..\src/command_processing.c ****             
2346:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 18021              		.loc 1 2346 0 is_stmt 1
 18022 1f32 7869     		ldr	r0, [r7, #20]
 18023 1f34 FFF7FEFF 		bl	strlen
 18024 1f38 0346     		mov	r3, r0
 18025 1f3a 1A46     		mov	r2, r3
 18026 1f3c 7B69     		ldr	r3, [r7, #20]
 18027 1f3e 1344     		add	r3, r3, r2
 18028 1f40 2E4A     		ldr	r2, .L706+32
 18029 1f42 1188     		ldrh	r1, [r2]	@ unaligned
 18030 1f44 9278     		ldrb	r2, [r2, #2]
 18031 1f46 1980     		strh	r1, [r3]	@ unaligned
 18032 1f48 9A70     		strb	r2, [r3, #2]
2347:..\src/command_processing.c ****           
2348:..\src/command_processing.c ****             IMU_reading_info(info_string);
 18033              		.loc 1 2348 0
 18034 1f4a 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 399


 18035 1f4c FFF7FEFF 		bl	IMU_reading_info
 18036              	.L661:
2349:..\src/command_processing.c ****         }
2350:..\src/command_processing.c ****         
2351:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18037              		.loc 1 2351 0
 18038 1f50 7869     		ldr	r0, [r7, #20]
 18039 1f52 FFF7FEFF 		bl	strlen
 18040 1f56 0346     		mov	r3, r0
 18041 1f58 1A46     		mov	r2, r3
 18042 1f5a 7B69     		ldr	r3, [r7, #20]
 18043 1f5c 1344     		add	r3, r3, r2
 18044 1f5e 274A     		ldr	r2, .L706+32
 18045 1f60 1188     		ldrh	r1, [r2]	@ unaligned
 18046 1f62 9278     		ldrb	r2, [r2, #2]
 18047 1f64 1980     		strh	r1, [r3]	@ unaligned
 18048 1f66 9A70     		strb	r2, [r3, #2]
2352:..\src/command_processing.c **** 
2353:..\src/command_processing.c **** #ifdef GENERIC_FW   
2354:..\src/command_processing.c ****         int j;
2355:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
 18049              		.loc 1 2355 0
 18050 1f68 7869     		ldr	r0, [r7, #20]
 18051 1f6a FFF7FEFF 		bl	strlen
 18052 1f6e 0346     		mov	r3, r0
 18053 1f70 1A46     		mov	r2, r3
 18054 1f72 7B69     		ldr	r3, [r7, #20]
 18055 1f74 1344     		add	r3, r3, r2
 18056 1f76 224A     		ldr	r2, .L706+36
 18057 1f78 1D46     		mov	r5, r3
 18058 1f7a 1446     		mov	r4, r2
 18059 1f7c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18060 1f7e 2860     		str	r0, [r5]	@ unaligned
 18061 1f80 6960     		str	r1, [r5, #4]	@ unaligned
 18062 1f82 AA60     		str	r2, [r5, #8]	@ unaligned
 18063 1f84 EB60     		str	r3, [r5, #12]	@ unaligned
 18064 1f86 03CC     		ldmia	r4!, {r0, r1}
 18065 1f88 2861     		str	r0, [r5, #16]	@ unaligned
 18066 1f8a 6961     		str	r1, [r5, #20]	@ unaligned
2356:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
 18067              		.loc 1 2356 0
 18068 1f8c 0023     		movs	r3, #0
 18069 1f8e C7F89430 		str	r3, [r7, #148]
 18070 1f92 BCE0     		b	.L674
 18071              	.L683:
2357:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 18072              		.loc 1 2357 0
 18073 1f94 1B4A     		ldr	r2, .L706+40
 18074 1f96 D7F89430 		ldr	r3, [r7, #148]
 18075 1f9a 1344     		add	r3, r3, r2
 18076 1f9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18077 1f9e 07F11800 		add	r0, r7, #24
 18078 1fa2 D7F89420 		ldr	r2, [r7, #148]
 18079 1fa6 1849     		ldr	r1, .L706+44
 18080 1fa8 FFF7FEFF 		bl	sprintf
2358:..\src/command_processing.c ****             strcat(info_string, str);
 18081              		.loc 1 2358 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 400


 18082 1fac 07F11803 		add	r3, r7, #24
 18083 1fb0 1946     		mov	r1, r3
 18084 1fb2 7869     		ldr	r0, [r7, #20]
 18085 1fb4 FFF7FEFF 		bl	strcat
2359:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
 18086              		.loc 1 2359 0
 18087 1fb8 D7F88830 		ldr	r3, [r7, #136]
 18088 1fbc 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18089 1fc0 1A46     		mov	r2, r3
 18090 1fc2 D7F89430 		ldr	r3, [r7, #148]
 18091 1fc6 9A42     		cmp	r2, r3
 18092 1fc8 2FD1     		bne	.L675
2360:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
 18093              		.loc 1 2360 0
 18094 1fca D7F88830 		ldr	r3, [r7, #136]
 18095 1fce 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18096 1fd2 002B     		cmp	r3, #0
 18097 1fd4 1CD0     		beq	.L676
 18098              		.loc 1 2360 0 is_stmt 0 discriminator 1
 18099 1fd6 0D4A     		ldr	r2, .L706+48
 18100 1fd8 1BE0     		b	.L677
 18101              	.L707:
 18102 1fda 00BF     		.align	2
 18103              	.L706:
 18104 1fdc 34130000 		.word	.LC176
 18105 1fe0 381B0000 		.word	.LC257
 18106 1fe4 00000000 		.word	IMU_connected
 18107 1fe8 2C130000 		.word	.LC175
 18108 1fec 481B0000 		.word	.LC258
 18109 1ff0 5C1B0000 		.word	.LC259
 18110 1ff4 6C1B0000 		.word	.LC260
 18111 1ff8 00000000 		.word	N_IMU_Connected
 18112 1ffc 58110000 		.word	.LC152
 18113 2000 7C1B0000 		.word	.LC261
 18114 2004 00000000 		.word	N_Encoder_Line_Connected
 18115 2008 941B0000 		.word	.LC262
 18116 200c B41B0000 		.word	.LC263
 18117              	.L676:
 18118              		.loc 1 2360 0 discriminator 2
 18119 2010 534A     		ldr	r2, .L708
 18120              	.L677:
 18121              		.loc 1 2360 0 discriminator 4
 18122 2012 07F11803 		add	r3, r7, #24
 18123 2016 5349     		ldr	r1, .L708+4
 18124 2018 1846     		mov	r0, r3
 18125 201a FFF7FEFF 		bl	sprintf
2361:..\src/command_processing.c ****                 strcat(info_string, str);
 18126              		.loc 1 2361 0 is_stmt 1 discriminator 4
 18127 201e 07F11803 		add	r3, r7, #24
 18128 2022 1946     		mov	r1, r3
 18129 2024 7869     		ldr	r0, [r7, #20]
 18130 2026 FFF7FEFF 		bl	strcat
 18131              	.L675:
2362:..\src/command_processing.c ****             }
2363:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 18132              		.loc 1 2363 0
 18133 202a 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 401


 18134 202c FFF7FEFF 		bl	strlen
 18135 2030 0346     		mov	r3, r0
 18136 2032 1A46     		mov	r2, r3
 18137 2034 7B69     		ldr	r3, [r7, #20]
 18138 2036 1344     		add	r3, r3, r2
 18139 2038 4B4A     		ldr	r2, .L708+8
 18140 203a 1188     		ldrh	r1, [r2]	@ unaligned
 18141 203c 9278     		ldrb	r2, [r2, #2]
 18142 203e 1980     		strh	r1, [r3]	@ unaligned
 18143 2040 9A70     		strb	r2, [r3, #2]
2364:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 18144              		.loc 1 2364 0
 18145 2042 4A4A     		ldr	r2, .L708+12
 18146 2044 D7F89430 		ldr	r3, [r7, #148]
 18147 2048 1344     		add	r3, r3, r2
 18148 204a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18149 204c 002B     		cmp	r3, #0
 18150 204e 59D0     		beq	.L678
2365:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
 18151              		.loc 1 2365 0
 18152 2050 7869     		ldr	r0, [r7, #20]
 18153 2052 FFF7FEFF 		bl	strlen
 18154 2056 0346     		mov	r3, r0
 18155 2058 1A46     		mov	r2, r3
 18156 205a 7B69     		ldr	r3, [r7, #20]
 18157 205c 1344     		add	r3, r3, r2
 18158 205e 444A     		ldr	r2, .L708+16
 18159 2060 1D46     		mov	r5, r3
 18160 2062 1446     		mov	r4, r2
 18161 2064 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18162 2066 2860     		str	r0, [r5]	@ unaligned
 18163 2068 6960     		str	r1, [r5, #4]	@ unaligned
 18164 206a AA60     		str	r2, [r5, #8]	@ unaligned
 18165 206c EB60     		str	r3, [r5, #12]	@ unaligned
 18166 206e 2068     		ldr	r0, [r4]	@ unaligned
 18167 2070 2861     		str	r0, [r5, #16]	@ unaligned
 18168 2072 A388     		ldrh	r3, [r4, #4]	@ unaligned
 18169 2074 AB82     		strh	r3, [r5, #20]	@ unaligned
2366:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 18170              		.loc 1 2366 0
 18171 2076 0023     		movs	r3, #0
 18172 2078 C7F88C30 		str	r3, [r7, #140]
 18173 207c 2CE0     		b	.L679
 18174              	.L682:
2367:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
 18175              		.loc 1 2367 0
 18176 207e 3D49     		ldr	r1, .L708+20
 18177 2080 D7F89420 		ldr	r2, [r7, #148]
 18178 2084 1346     		mov	r3, r2
 18179 2086 9B00     		lsls	r3, r3, #2
 18180 2088 1344     		add	r3, r3, r2
 18181 208a D7F88C20 		ldr	r2, [r7, #140]
 18182 208e 1344     		add	r3, r3, r2
 18183 2090 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 18184 2094 1C46     		mov	r4, r3
 18185 2096 3849     		ldr	r1, .L708+24
 18186 2098 D7F89420 		ldr	r2, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 402


 18187 209c 1346     		mov	r3, r2
 18188 209e 9B00     		lsls	r3, r3, #2
 18189 20a0 1344     		add	r3, r3, r2
 18190 20a2 CA18     		adds	r2, r1, r3
 18191 20a4 D7F88C30 		ldr	r3, [r7, #140]
 18192 20a8 1344     		add	r3, r3, r2
 18193 20aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18194 20ac 102B     		cmp	r3, #16
 18195 20ae 01D1     		bne	.L680
 18196              		.loc 1 2367 0 is_stmt 0 discriminator 1
 18197 20b0 324B     		ldr	r3, .L708+28
 18198 20b2 00E0     		b	.L681
 18199              	.L680:
 18200              		.loc 1 2367 0 discriminator 2
 18201 20b4 324B     		ldr	r3, .L708+32
 18202              	.L681:
 18203              		.loc 1 2367 0 discriminator 4
 18204 20b6 07F11800 		add	r0, r7, #24
 18205 20ba 2246     		mov	r2, r4
 18206 20bc 3149     		ldr	r1, .L708+36
 18207 20be FFF7FEFF 		bl	sprintf
2368:..\src/command_processing.c ****                     strcat(info_string, str);
 18208              		.loc 1 2368 0 is_stmt 1 discriminator 4
 18209 20c2 07F11803 		add	r3, r7, #24
 18210 20c6 1946     		mov	r1, r3
 18211 20c8 7869     		ldr	r0, [r7, #20]
 18212 20ca FFF7FEFF 		bl	strcat
2366:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 18213              		.loc 1 2366 0 discriminator 4
 18214 20ce D7F88C30 		ldr	r3, [r7, #140]
 18215 20d2 0133     		adds	r3, r3, #1
 18216 20d4 C7F88C30 		str	r3, [r7, #140]
 18217              	.L679:
2366:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 18218              		.loc 1 2366 0 is_stmt 0 discriminator 2
 18219 20d8 244A     		ldr	r2, .L708+12
 18220 20da D7F89430 		ldr	r3, [r7, #148]
 18221 20de 1344     		add	r3, r3, r2
 18222 20e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18223 20e2 1A46     		mov	r2, r3
 18224 20e4 D7F88C30 		ldr	r3, [r7, #140]
 18225 20e8 9A42     		cmp	r2, r3
 18226 20ea C8DC     		bgt	.L682
2369:..\src/command_processing.c ****                 }
2370:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 18227              		.loc 1 2370 0 is_stmt 1
 18228 20ec 7869     		ldr	r0, [r7, #20]
 18229 20ee FFF7FEFF 		bl	strlen
 18230 20f2 0346     		mov	r3, r0
 18231 20f4 1A46     		mov	r2, r3
 18232 20f6 7B69     		ldr	r3, [r7, #20]
 18233 20f8 1344     		add	r3, r3, r2
 18234 20fa 1B4A     		ldr	r2, .L708+8
 18235 20fc 1188     		ldrh	r1, [r2]	@ unaligned
 18236 20fe 9278     		ldrb	r2, [r2, #2]
 18237 2100 1980     		strh	r1, [r3]	@ unaligned
 18238 2102 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 403


 18239              	.L678:
2356:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 18240              		.loc 1 2356 0 discriminator 2
 18241 2104 D7F89430 		ldr	r3, [r7, #148]
 18242 2108 0133     		adds	r3, r3, #1
 18243 210a C7F89430 		str	r3, [r7, #148]
 18244              	.L674:
2356:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 18245              		.loc 1 2356 0 is_stmt 0 discriminator 1
 18246 210e D7F89430 		ldr	r3, [r7, #148]
 18247 2112 012B     		cmp	r3, #1
 18248 2114 7FF73EAF 		ble	.L683
2371:..\src/command_processing.c ****             }
2372:..\src/command_processing.c ****         }
2373:..\src/command_processing.c **** #endif   
2374:..\src/command_processing.c ****         
2375:..\src/command_processing.c **** #ifdef MASTER_FW
2376:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2377:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2378:..\src/command_processing.c ****         else
2379:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2380:..\src/command_processing.c **** 
2381:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2382:..\src/command_processing.c ****         strcat(info_string, str);
2383:..\src/command_processing.c **** #endif
2384:..\src/command_processing.c **** 
2385:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 18249              		.loc 1 2385 0 is_stmt 1
 18250 2118 1B4B     		ldr	r3, .L708+40
 18251 211a 1B88     		ldrh	r3, [r3]
 18252 211c 1A46     		mov	r2, r3
 18253 211e 1B4B     		ldr	r3, .L708+44
 18254 2120 1B88     		ldrh	r3, [r3]
 18255 2122 D21A     		subs	r2, r2, r3
 18256 2124 07F11803 		add	r3, r7, #24
 18257 2128 1949     		ldr	r1, .L708+48
 18258 212a 1846     		mov	r0, r3
 18259 212c FFF7FEFF 		bl	sprintf
2386:..\src/command_processing.c ****         strcat(info_string, str);
 18260              		.loc 1 2386 0
 18261 2130 07F11803 		add	r3, r7, #24
 18262 2134 1946     		mov	r1, r3
 18263 2136 7869     		ldr	r0, [r7, #20]
 18264 2138 FFF7FEFF 		bl	strcat
2387:..\src/command_processing.c ****   
2388:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 18265              		.loc 1 2388 0
 18266 213c 7869     		ldr	r0, [r7, #20]
 18267 213e FFF7FEFF 		bl	strlen
 18268 2142 0346     		mov	r3, r0
 18269 2144 1A46     		mov	r2, r3
 18270 2146 7B69     		ldr	r3, [r7, #20]
 18271 2148 1344     		add	r3, r3, r2
 18272 214a 124A     		ldr	r2, .L708+52
 18273 214c 1188     		ldrh	r1, [r2]	@ unaligned
 18274 214e 9278     		ldrb	r2, [r2, #2]
 18275 2150 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 404


 18276 2152 9A70     		strb	r2, [r3, #2]
 18277              	.L685:
 18278              	.LBE24:
2389:..\src/command_processing.c ****     }
2390:..\src/command_processing.c **** }
 18279              		.loc 1 2390 0
 18280 2154 00BF     		nop
 18281 2156 9C37     		adds	r7, r7, #156
 18282              		.cfi_def_cfa_offset 36
 18283 2158 BD46     		mov	sp, r7
 18284              		.cfi_def_cfa_register 13
 18285              		@ sp needed
 18286 215a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 18287              	.L709:
 18288 215e 00BF     		.align	2
 18289              	.L708:
 18290 2160 BC1B0000 		.word	.LC264
 18291 2164 C41B0000 		.word	.LC265
 18292 2168 58110000 		.word	.LC152
 18293 216c 00000000 		.word	N_Encoder_Line_Connected
 18294 2170 E41B0000 		.word	.LC266
 18295 2174 00000000 		.word	Encoder_Value
 18296 2178 00000000 		.word	Encoder_Check
 18297 217c FC1B0000 		.word	.LC267
 18298 2180 001C0000 		.word	.LC268
 18299 2184 041C0000 		.word	.LC269
 18300 2188 00000000 		.word	timer_value0
 18301 218c 00000000 		.word	timer_value
 18302 2190 101C0000 		.word	.LC270
 18303 2194 2C1C0000 		.word	.LC271
 18304              		.cfi_endproc
 18305              	.LFE72:
 18306              		.size	prepare_generic_info, .-prepare_generic_info
 18307              		.section	.rodata
 18308              		.align	2
 18309              	.LC272:
 18310 1c30 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 18310      41474520 
 18310      53544154 
 18310      49535449 
 18310      43530D0A 
 18311 1c45 000000   		.align	2
 18312              	.LC273:
 18313 1c48 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 18313      206F6620 
 18313      4857206D 
 18313      61696E74 
 18313      656E616E 
 18314 1c73 00       		.align	2
 18315              	.LC274:
 18316 1c74 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 18316      206F6620 
 18316      75736167 
 18316      65207374 
 18316      61747320 
 18317 1ca7 0A00     		.ascii	"\012\000"
 18318 1ca9 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 405


 18319              	.LC275:
 18320 1cac 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 18320      20636865 
 18320      636B6564 
 18320      2054696D 
 18320      653A2025 
 18321 1cdf 0A00     		.ascii	"\012\000"
 18322 1ce1 000000   		.align	2
 18323              	.LC276:
 18324 1ce4 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 18324      74696F6E 
 18324      73206869 
 18324      73746F67 
 18324      72616D20 
 18325 1d03 00       		.align	2
 18326              	.LC277:
 18327 1d04 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 18327      2564205B 
 18327      25642D25 
 18327      645D3A20 
 18327      256C750D 
 18328 1d1a 0000     		.align	2
 18329              	.LC278:
 18330 1d1c 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 18330      656E7420 
 18330      68697374 
 18330      6F677261 
 18330      6D20286D 
 18331 1d36 0000     		.align	2
 18332              	.LC279:
 18333 1d38 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 18333      73686F6C 
 18333      64202564 
 18333      205B2564 
 18333      2D25645D 
 18334              		.align	2
 18335              	.LC280:
 18336 1d54 4D6F7469 		.ascii	"Motions through EMG counter: %lu, %lu\000"
 18336      6F6E7320 
 18336      7468726F 
 18336      75676820 
 18336      454D4720 
 18337 1d7a 0000     		.align	2
 18338              	.LC281:
 18339 1d7c 52657374 		.ascii	"Rest position occurrences: %lu\000"
 18339      20706F73 
 18339      6974696F 
 18339      6E206F63 
 18339      63757272 
 18340 1d9b 00       		.align	2
 18341              	.LC282:
 18342 1d9c 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 18342      6520746F 
 18342      74616C20 
 18342      64697370 
 18342      6C616365 
 18343 1dc2 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 406


 18344              	.LC283:
 18345 1dc4 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 18345      6C20706F 
 18345      77657220 
 18345      6F6E2074 
 18345      696D6520 
 18346 1de3 00       		.align	2
 18347              	.LC284:
 18348 1de4 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 18348      6C207265 
 18348      73742070 
 18348      6F736974 
 18348      696F6E20 
 18349              		.section	.text.prepare_counter_info,"ax",%progbits
 18350              		.align	2
 18351              		.global	prepare_counter_info
 18352              		.thumb
 18353              		.thumb_func
 18354              		.type	prepare_counter_info, %function
 18355              	prepare_counter_info:
 18356              	.LFB73:
2391:..\src/command_processing.c **** 
2392:..\src/command_processing.c **** //==============================================================================
2393:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2394:..\src/command_processing.c **** //==============================================================================
2395:..\src/command_processing.c **** 
2396:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2397:..\src/command_processing.c **** {
 18357              		.loc 1 2397 0
 18358              		.cfi_startproc
 18359              		@ args = 0, pretend = 0, frame = 432
 18360              		@ frame_needed = 1, uses_anonymous_args = 0
 18361 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 18362              		.cfi_def_cfa_offset 20
 18363              		.cfi_offset 4, -20
 18364              		.cfi_offset 5, -16
 18365              		.cfi_offset 6, -12
 18366              		.cfi_offset 7, -8
 18367              		.cfi_offset 14, -4
 18368 0002 F1B0     		sub	sp, sp, #452
 18369              		.cfi_def_cfa_offset 472
 18370 0004 04AF     		add	r7, sp, #16
 18371              		.cfi_def_cfa 7, 456
 18372 0006 3B1D     		adds	r3, r7, #4
 18373 0008 1860     		str	r0, [r3]
2398:..\src/command_processing.c ****     char str[100];  
2399:..\src/command_processing.c ****     int i;
2400:..\src/command_processing.c ****     int step;
2401:..\src/command_processing.c **** 
2402:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18374              		.loc 1 2402 0
 18375 000a 964B     		ldr	r3, .L716
 18376 000c C7F8A831 		str	r3, [r7, #424]
2403:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 18377              		.loc 1 2403 0
 18378 0010 D7F8A831 		ldr	r3, [r7, #424]
 18379 0014 B033     		adds	r3, r3, #176
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 407


 18380 0016 C7F8A431 		str	r3, [r7, #420]
2404:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 18381              		.loc 1 2404 0
 18382 001a D7F8A431 		ldr	r3, [r7, #420]
 18383 001e 93F86030 		ldrb	r3, [r3, #96]
 18384 0022 87F8A331 		strb	r3, [r7, #419]
2405:..\src/command_processing.c ****     
2406:..\src/command_processing.c ****     strcpy(info_string, "");
 18385              		.loc 1 2406 0
 18386 0026 3B1D     		adds	r3, r7, #4
 18387 0028 1B68     		ldr	r3, [r3]
 18388 002a 0022     		movs	r2, #0
 18389 002c 1A70     		strb	r2, [r3]
2407:..\src/command_processing.c ****     
2408:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 18390              		.loc 1 2408 0
 18391 002e 3B1D     		adds	r3, r7, #4
 18392 0030 1868     		ldr	r0, [r3]
 18393 0032 FFF7FEFF 		bl	strlen
 18394 0036 0346     		mov	r3, r0
 18395 0038 1A46     		mov	r2, r3
 18396 003a 3B1D     		adds	r3, r7, #4
 18397 003c 1B68     		ldr	r3, [r3]
 18398 003e 1344     		add	r3, r3, r2
 18399 0040 894A     		ldr	r2, .L716+4
 18400 0042 1D46     		mov	r5, r3
 18401 0044 1446     		mov	r4, r2
 18402 0046 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18403 0048 2860     		str	r0, [r5]	@ unaligned
 18404 004a 6960     		str	r1, [r5, #4]	@ unaligned
 18405 004c AA60     		str	r2, [r5, #8]	@ unaligned
 18406 004e EB60     		str	r3, [r5, #12]	@ unaligned
 18407 0050 2068     		ldr	r0, [r4]	@ unaligned
 18408 0052 2861     		str	r0, [r5, #16]	@ unaligned
 18409 0054 2379     		ldrb	r3, [r4, #4]
 18410 0056 2B75     		strb	r3, [r5, #20]
2409:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18411              		.loc 1 2409 0
 18412 0058 3B1D     		adds	r3, r7, #4
 18413 005a 1868     		ldr	r0, [r3]
 18414 005c FFF7FEFF 		bl	strlen
 18415 0060 0346     		mov	r3, r0
 18416 0062 1A46     		mov	r2, r3
 18417 0064 3B1D     		adds	r3, r7, #4
 18418 0066 1B68     		ldr	r3, [r3]
 18419 0068 1344     		add	r3, r3, r2
 18420 006a 804A     		ldr	r2, .L716+8
 18421 006c 1188     		ldrh	r1, [r2]	@ unaligned
 18422 006e 9278     		ldrb	r2, [r2, #2]
 18423 0070 1980     		strh	r1, [r3]	@ unaligned
 18424 0072 9A70     		strb	r2, [r3, #2]
2410:..\src/command_processing.c ****     
2411:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18425              		.loc 1 2411 0
 18426 0074 D7F8A831 		ldr	r3, [r7, #424]
 18427 0078 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18428 007c 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 408


 18429 007e D7F8A831 		ldr	r3, [r7, #424]
 18430 0082 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18431 0086 1946     		mov	r1, r3
 18432 0088 D7F8A831 		ldr	r3, [r7, #424]
 18433 008c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18434 0090 07F59C70 		add	r0, r7, #312
 18435 0094 0093     		str	r3, [sp]
 18436 0096 0B46     		mov	r3, r1
 18437 0098 7549     		ldr	r1, .L716+12
 18438 009a FFF7FEFF 		bl	sprintf
2412:..\src/command_processing.c ****     strcat(info_string, str);
 18439              		.loc 1 2412 0
 18440 009e 07F59C72 		add	r2, r7, #312
 18441 00a2 3B1D     		adds	r3, r7, #4
 18442 00a4 1146     		mov	r1, r2
 18443 00a6 1868     		ldr	r0, [r3]
 18444 00a8 FFF7FEFF 		bl	strcat
2413:..\src/command_processing.c ****     
2414:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18445              		.loc 1 2414 0
 18446 00ac D7F8A831 		ldr	r3, [r7, #424]
 18447 00b0 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18448 00b4 1A46     		mov	r2, r3
 18449 00b6 D7F8A831 		ldr	r3, [r7, #424]
 18450 00ba 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18451 00be 1946     		mov	r1, r3
 18452 00c0 D7F8A831 		ldr	r3, [r7, #424]
 18453 00c4 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18454 00c8 07F59C70 		add	r0, r7, #312
 18455 00cc 0093     		str	r3, [sp]
 18456 00ce 0B46     		mov	r3, r1
 18457 00d0 6849     		ldr	r1, .L716+16
 18458 00d2 FFF7FEFF 		bl	sprintf
2415:..\src/command_processing.c ****     strcat(info_string, str);
 18459              		.loc 1 2415 0
 18460 00d6 07F59C72 		add	r2, r7, #312
 18461 00da 3B1D     		adds	r3, r7, #4
 18462 00dc 1146     		mov	r1, r2
 18463 00de 1868     		ldr	r0, [r3]
 18464 00e0 FFF7FEFF 		bl	strcat
2416:..\src/command_processing.c ****             
2417:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 18465              		.loc 1 2417 0
 18466 00e4 D7F8A831 		ldr	r3, [r7, #424]
 18467 00e8 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 18468 00ec 1D46     		mov	r5, r3
 18469 00ee D7F8A831 		ldr	r3, [r7, #424]
 18470 00f2 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 18471 00f6 1E46     		mov	r6, r3
 18472 00f8 D7F8A831 		ldr	r3, [r7, #424]
 18473 00fc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 18474 0100 1A46     		mov	r2, r3
 18475 0102 D7F8A831 		ldr	r3, [r7, #424]
 18476 0106 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 18477 010a 1946     		mov	r1, r3
 18478 010c D7F8A831 		ldr	r3, [r7, #424]
 18479 0110 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 409


 18480 0114 1C46     		mov	r4, r3
 18481 0116 D7F8A831 		ldr	r3, [r7, #424]
 18482 011a 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 18483 011e 07F59C70 		add	r0, r7, #312
 18484 0122 0393     		str	r3, [sp, #12]
 18485 0124 0294     		str	r4, [sp, #8]
 18486 0126 0191     		str	r1, [sp, #4]
 18487 0128 0092     		str	r2, [sp]
 18488 012a 3346     		mov	r3, r6
 18489 012c 2A46     		mov	r2, r5
 18490 012e 5249     		ldr	r1, .L716+20
 18491 0130 FFF7FEFF 		bl	sprintf
2418:..\src/command_processing.c ****     strcat(info_string, str);
 18492              		.loc 1 2418 0
 18493 0134 07F59C72 		add	r2, r7, #312
 18494 0138 3B1D     		adds	r3, r7, #4
 18495 013a 1146     		mov	r1, r2
 18496 013c 1868     		ldr	r0, [r3]
 18497 013e FFF7FEFF 		bl	strcat
2419:..\src/command_processing.c ****     
2420:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 18498              		.loc 1 2420 0
 18499 0142 07F59C73 		add	r3, r7, #312
 18500 0146 4D4A     		ldr	r2, .L716+24
 18501 0148 1C46     		mov	r4, r3
 18502 014a 1546     		mov	r5, r2
 18503 014c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18504 014e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18505 0150 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 18506 0154 07C4     		stmia	r4!, {r0, r1, r2}
 18507 0156 2380     		strh	r3, [r4]	@ movhi
 18508 0158 0234     		adds	r4, r4, #2
 18509 015a 1B0C     		lsrs	r3, r3, #16
 18510 015c 2370     		strb	r3, [r4]
2421:..\src/command_processing.c ****     strcat(info_string, str);
 18511              		.loc 1 2421 0
 18512 015e 07F59C72 		add	r2, r7, #312
 18513 0162 3B1D     		adds	r3, r7, #4
 18514 0164 1146     		mov	r1, r2
 18515 0166 1868     		ldr	r0, [r3]
 18516 0168 FFF7FEFF 		bl	strcat
2422:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 18517              		.loc 1 2422 0
 18518 016c D7F8A431 		ldr	r3, [r7, #420]
 18519 0170 996B     		ldr	r1, [r3, #56]
 18520 0172 97F8A321 		ldrb	r2, [r7, #419]	@ zero_extendqisi2
 18521 0176 D7F8A801 		ldr	r0, [r7, #424]
 18522 017a 1346     		mov	r3, r2
 18523 017c 5B00     		lsls	r3, r3, #1
 18524 017e 1344     		add	r3, r3, r2
 18525 0180 1B01     		lsls	r3, r3, #4
 18526 0182 0344     		add	r3, r3, r0
 18527 0184 03F29513 		addw	r3, r3, #405
 18528 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18529 018a 41FA03F3 		asr	r3, r1, r3
 18530 018e 3C4A     		ldr	r2, .L716+28
 18531 0190 82FB0312 		smull	r1, r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 410


 18532 0194 9210     		asrs	r2, r2, #2
 18533 0196 DB17     		asrs	r3, r3, #31
 18534 0198 D31A     		subs	r3, r2, r3
 18535 019a C7F89C31 		str	r3, [r7, #412]
2423:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18536              		.loc 1 2423 0
 18537 019e 0123     		movs	r3, #1
 18538 01a0 C7F8AC31 		str	r3, [r7, #428]
 18539 01a4 2BE0     		b	.L711
 18540              	.L712:
2424:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 18541              		.loc 1 2424 0 discriminator 3
 18542 01a6 D7F8AC31 		ldr	r3, [r7, #428]
 18543 01aa 013B     		subs	r3, r3, #1
 18544 01ac D7F89C21 		ldr	r2, [r7, #412]
 18545 01b0 02FB03F3 		mul	r3, r2, r3
 18546 01b4 5C1C     		adds	r4, r3, #1
 18547 01b6 D7F89C31 		ldr	r3, [r7, #412]
 18548 01ba D7F8AC21 		ldr	r2, [r7, #428]
 18549 01be 02FB03F3 		mul	r3, r2, r3
 18550 01c2 D7F8AC21 		ldr	r2, [r7, #428]
 18551 01c6 511E     		subs	r1, r2, #1
 18552 01c8 D7F8A821 		ldr	r2, [r7, #424]
 18553 01cc 0631     		adds	r1, r1, #6
 18554 01ce 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18555 01d2 07F59C70 		add	r0, r7, #312
 18556 01d6 0192     		str	r2, [sp, #4]
 18557 01d8 0093     		str	r3, [sp]
 18558 01da 2346     		mov	r3, r4
 18559 01dc D7F8AC21 		ldr	r2, [r7, #428]
 18560 01e0 2849     		ldr	r1, .L716+32
 18561 01e2 FFF7FEFF 		bl	sprintf
2425:..\src/command_processing.c ****         strcat(info_string, str);
 18562              		.loc 1 2425 0 discriminator 3
 18563 01e6 07F59C72 		add	r2, r7, #312
 18564 01ea 3B1D     		adds	r3, r7, #4
 18565 01ec 1146     		mov	r1, r2
 18566 01ee 1868     		ldr	r0, [r3]
 18567 01f0 FFF7FEFF 		bl	strcat
2423:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18568              		.loc 1 2423 0 discriminator 3
 18569 01f4 D7F8AC31 		ldr	r3, [r7, #428]
 18570 01f8 0133     		adds	r3, r3, #1
 18571 01fa C7F8AC31 		str	r3, [r7, #428]
 18572              	.L711:
2423:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18573              		.loc 1 2423 0 is_stmt 0 discriminator 1
 18574 01fe D7F8AC31 		ldr	r3, [r7, #428]
 18575 0202 0A2B     		cmp	r3, #10
 18576 0204 CFDD     		ble	.L712
2426:..\src/command_processing.c ****     }
2427:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18577              		.loc 1 2427 0 is_stmt 1
 18578 0206 3B1D     		adds	r3, r7, #4
 18579 0208 1868     		ldr	r0, [r3]
 18580 020a FFF7FEFF 		bl	strlen
 18581 020e 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 411


 18582 0210 1A46     		mov	r2, r3
 18583 0212 3B1D     		adds	r3, r7, #4
 18584 0214 1B68     		ldr	r3, [r3]
 18585 0216 1344     		add	r3, r3, r2
 18586 0218 144A     		ldr	r2, .L716+8
 18587 021a 1188     		ldrh	r1, [r2]	@ unaligned
 18588 021c 9278     		ldrb	r2, [r2, #2]
 18589 021e 1980     		strh	r1, [r3]	@ unaligned
 18590 0220 9A70     		strb	r2, [r3, #2]
2428:..\src/command_processing.c ****     
2429:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 18591              		.loc 1 2429 0
 18592 0222 07F59C73 		add	r3, r7, #312
 18593 0226 184A     		ldr	r2, .L716+36
 18594 0228 1C46     		mov	r4, r3
 18595 022a 1546     		mov	r5, r2
 18596 022c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18597 022e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18598 0230 95E80700 		ldmia	r5, {r0, r1, r2}
 18599 0234 03C4     		stmia	r4!, {r0, r1}
 18600 0236 2280     		strh	r2, [r4]	@ movhi
2430:..\src/command_processing.c ****     strcat(info_string, str);
 18601              		.loc 1 2430 0
 18602 0238 07F59C72 		add	r2, r7, #312
 18603 023c 3B1D     		adds	r3, r7, #4
 18604 023e 1146     		mov	r1, r2
 18605 0240 1868     		ldr	r0, [r3]
 18606 0242 FFF7FEFF 		bl	strcat
2431:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 18607              		.loc 1 2431 0
 18608 0246 D7F8A431 		ldr	r3, [r7, #420]
 18609 024a B3F95C30 		ldrsh	r3, [r3, #92]
 18610 024e 002B     		cmp	r3, #0
 18611 0250 00DA     		bge	.L713
 18612 0252 0333     		adds	r3, r3, #3
 18613              	.L713:
 18614 0254 9B10     		asrs	r3, r3, #2
 18615 0256 1BB2     		sxth	r3, r3
 18616 0258 C7F89C31 		str	r3, [r7, #412]
2432:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18617              		.loc 1 2432 0
 18618 025c 0123     		movs	r3, #1
 18619 025e C7F8AC31 		str	r3, [r7, #428]
 18620 0262 3EE0     		b	.L714
 18621              	.L717:
 18622              		.align	2
 18623              	.L716:
 18624 0264 00000000 		.word	g_mem
 18625 0268 301C0000 		.word	.LC272
 18626 026c 58110000 		.word	.LC152
 18627 0270 481C0000 		.word	.LC273
 18628 0274 741C0000 		.word	.LC274
 18629 0278 AC1C0000 		.word	.LC275
 18630 027c E41C0000 		.word	.LC276
 18631 0280 67666666 		.word	1717986919
 18632 0284 041D0000 		.word	.LC277
 18633 0288 1C1D0000 		.word	.LC278
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 412


 18634              	.L715:
2433:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 18635              		.loc 1 2433 0 discriminator 3
 18636 028c D7F8AC31 		ldr	r3, [r7, #428]
 18637 0290 013B     		subs	r3, r3, #1
 18638 0292 D7F89C21 		ldr	r2, [r7, #412]
 18639 0296 02FB03F4 		mul	r4, r2, r3
 18640 029a D7F89C31 		ldr	r3, [r7, #412]
 18641 029e D7F8AC21 		ldr	r2, [r7, #428]
 18642 02a2 02FB03F3 		mul	r3, r2, r3
 18643 02a6 D7F8AC21 		ldr	r2, [r7, #428]
 18644 02aa 511E     		subs	r1, r2, #1
 18645 02ac D7F8A821 		ldr	r2, [r7, #424]
 18646 02b0 1031     		adds	r1, r1, #16
 18647 02b2 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18648 02b6 07F59C70 		add	r0, r7, #312
 18649 02ba 0192     		str	r2, [sp, #4]
 18650 02bc 0093     		str	r3, [sp]
 18651 02be 2346     		mov	r3, r4
 18652 02c0 D7F8AC21 		ldr	r2, [r7, #428]
 18653 02c4 6B49     		ldr	r1, .L718
 18654 02c6 FFF7FEFF 		bl	sprintf
2434:..\src/command_processing.c ****         strcat(info_string, str);
 18655              		.loc 1 2434 0 discriminator 3
 18656 02ca 07F59C72 		add	r2, r7, #312
 18657 02ce 3B1D     		adds	r3, r7, #4
 18658 02d0 1146     		mov	r1, r2
 18659 02d2 1868     		ldr	r0, [r3]
 18660 02d4 FFF7FEFF 		bl	strcat
2432:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18661              		.loc 1 2432 0 discriminator 3
 18662 02d8 D7F8AC31 		ldr	r3, [r7, #428]
 18663 02dc 0133     		adds	r3, r3, #1
 18664 02de C7F8AC31 		str	r3, [r7, #428]
 18665              	.L714:
2432:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18666              		.loc 1 2432 0 is_stmt 0 discriminator 1
 18667 02e2 D7F8AC31 		ldr	r3, [r7, #428]
 18668 02e6 042B     		cmp	r3, #4
 18669 02e8 D0DD     		ble	.L715
2435:..\src/command_processing.c ****     }
2436:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18670              		.loc 1 2436 0 is_stmt 1
 18671 02ea 3B1D     		adds	r3, r7, #4
 18672 02ec 1868     		ldr	r0, [r3]
 18673 02ee FFF7FEFF 		bl	strlen
 18674 02f2 0346     		mov	r3, r0
 18675 02f4 1A46     		mov	r2, r3
 18676 02f6 3B1D     		adds	r3, r7, #4
 18677 02f8 1B68     		ldr	r3, [r3]
 18678 02fa 1344     		add	r3, r3, r2
 18679 02fc 5E4A     		ldr	r2, .L718+4
 18680 02fe 1188     		ldrh	r1, [r2]	@ unaligned
 18681 0300 9278     		ldrb	r2, [r2, #2]
 18682 0302 1980     		strh	r1, [r3]	@ unaligned
 18683 0304 9A70     		strb	r2, [r3, #2]
2437:..\src/command_processing.c ****             
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 413


2438:..\src/command_processing.c ****     sprintf(str, "Motions through EMG counter: %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->cnt.
 18684              		.loc 1 2438 0
 18685 0306 D7F8A831 		ldr	r3, [r7, #424]
 18686 030a DA6E     		ldr	r2, [r3, #108]
 18687 030c D7F8A831 		ldr	r3, [r7, #424]
 18688 0310 1B6F     		ldr	r3, [r3, #112]
 18689 0312 07F59C70 		add	r0, r7, #312
 18690 0316 5949     		ldr	r1, .L718+8
 18691 0318 FFF7FEFF 		bl	sprintf
2439:..\src/command_processing.c ****     strcat(info_string, str);
 18692              		.loc 1 2439 0
 18693 031c 07F59C72 		add	r2, r7, #312
 18694 0320 3B1D     		adds	r3, r7, #4
 18695 0322 1146     		mov	r1, r2
 18696 0324 1868     		ldr	r0, [r3]
 18697 0326 FFF7FEFF 		bl	strcat
2440:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18698              		.loc 1 2440 0
 18699 032a 3B1D     		adds	r3, r7, #4
 18700 032c 1868     		ldr	r0, [r3]
 18701 032e FFF7FEFF 		bl	strlen
 18702 0332 0346     		mov	r3, r0
 18703 0334 1A46     		mov	r2, r3
 18704 0336 3B1D     		adds	r3, r7, #4
 18705 0338 1B68     		ldr	r3, [r3]
 18706 033a 1344     		add	r3, r3, r2
 18707 033c 4E4A     		ldr	r2, .L718+4
 18708 033e 1188     		ldrh	r1, [r2]	@ unaligned
 18709 0340 9278     		ldrb	r2, [r2, #2]
 18710 0342 1980     		strh	r1, [r3]	@ unaligned
 18711 0344 9A70     		strb	r2, [r3, #2]
2441:..\src/command_processing.c ****     
2442:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 18712              		.loc 1 2442 0
 18713 0346 D7F8A831 		ldr	r3, [r7, #424]
 18714 034a 1A6D     		ldr	r2, [r3, #80]
 18715 034c 07F59C73 		add	r3, r7, #312
 18716 0350 4B49     		ldr	r1, .L718+12
 18717 0352 1846     		mov	r0, r3
 18718 0354 FFF7FEFF 		bl	sprintf
2443:..\src/command_processing.c ****     strcat(info_string, str);
 18719              		.loc 1 2443 0
 18720 0358 07F59C72 		add	r2, r7, #312
 18721 035c 3B1D     		adds	r3, r7, #4
 18722 035e 1146     		mov	r1, r2
 18723 0360 1868     		ldr	r0, [r3]
 18724 0362 FFF7FEFF 		bl	strcat
2444:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18725              		.loc 1 2444 0
 18726 0366 3B1D     		adds	r3, r7, #4
 18727 0368 1868     		ldr	r0, [r3]
 18728 036a FFF7FEFF 		bl	strlen
 18729 036e 0346     		mov	r3, r0
 18730 0370 1A46     		mov	r2, r3
 18731 0372 3B1D     		adds	r3, r7, #4
 18732 0374 1B68     		ldr	r3, [r3]
 18733 0376 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 414


 18734 0378 3F4A     		ldr	r2, .L718+4
 18735 037a 1188     		ldrh	r1, [r2]	@ unaligned
 18736 037c 9278     		ldrb	r2, [r2, #2]
 18737 037e 1980     		strh	r1, [r3]	@ unaligned
 18738 0380 9A70     		strb	r2, [r3, #2]
2445:..\src/command_processing.c ****     
2446:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 18739              		.loc 1 2446 0
 18740 0382 D7F8A831 		ldr	r3, [r7, #424]
 18741 0386 5A6D     		ldr	r2, [r3, #84]
 18742 0388 07F59C73 		add	r3, r7, #312
 18743 038c 3D49     		ldr	r1, .L718+16
 18744 038e 1846     		mov	r0, r3
 18745 0390 FFF7FEFF 		bl	sprintf
2447:..\src/command_processing.c ****     strcat(info_string, str);
 18746              		.loc 1 2447 0
 18747 0394 07F59C72 		add	r2, r7, #312
 18748 0398 3B1D     		adds	r3, r7, #4
 18749 039a 1146     		mov	r1, r2
 18750 039c 1868     		ldr	r0, [r3]
 18751 039e FFF7FEFF 		bl	strcat
2448:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18752              		.loc 1 2448 0
 18753 03a2 3B1D     		adds	r3, r7, #4
 18754 03a4 1868     		ldr	r0, [r3]
 18755 03a6 FFF7FEFF 		bl	strlen
 18756 03aa 0346     		mov	r3, r0
 18757 03ac 1A46     		mov	r2, r3
 18758 03ae 3B1D     		adds	r3, r7, #4
 18759 03b0 1B68     		ldr	r3, [r3]
 18760 03b2 1344     		add	r3, r3, r2
 18761 03b4 304A     		ldr	r2, .L718+4
 18762 03b6 1188     		ldrh	r1, [r2]	@ unaligned
 18763 03b8 9278     		ldrb	r2, [r2, #2]
 18764 03ba 1980     		strh	r1, [r3]	@ unaligned
 18765 03bc 9A70     		strb	r2, [r3, #2]
2449:..\src/command_processing.c ****     
2450:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_runtime);
 18766              		.loc 1 2450 0
 18767 03be D7F8A831 		ldr	r3, [r7, #424]
 18768 03c2 9A6D     		ldr	r2, [r3, #88]
 18769 03c4 07F59C73 		add	r3, r7, #312
 18770 03c8 2F49     		ldr	r1, .L718+20
 18771 03ca 1846     		mov	r0, r3
 18772 03cc FFF7FEFF 		bl	sprintf
2451:..\src/command_processing.c ****     strcat(info_string, str);
 18773              		.loc 1 2451 0
 18774 03d0 07F59C72 		add	r2, r7, #312
 18775 03d4 3B1D     		adds	r3, r7, #4
 18776 03d6 1146     		mov	r1, r2
 18777 03d8 1868     		ldr	r0, [r3]
 18778 03da FFF7FEFF 		bl	strcat
2452:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18779              		.loc 1 2452 0
 18780 03de 3B1D     		adds	r3, r7, #4
 18781 03e0 1868     		ldr	r0, [r3]
 18782 03e2 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 415


 18783 03e6 0346     		mov	r3, r0
 18784 03e8 1A46     		mov	r2, r3
 18785 03ea 3B1D     		adds	r3, r7, #4
 18786 03ec 1B68     		ldr	r3, [r3]
 18787 03ee 1344     		add	r3, r3, r2
 18788 03f0 214A     		ldr	r2, .L718+4
 18789 03f2 1188     		ldrh	r1, [r2]	@ unaligned
 18790 03f4 9278     		ldrb	r2, [r2, #2]
 18791 03f6 1980     		strh	r1, [r3]	@ unaligned
 18792 03f8 9A70     		strb	r2, [r3, #2]
2453:..\src/command_processing.c ****     
2454:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 18793              		.loc 1 2454 0
 18794 03fa D7F8A831 		ldr	r3, [r7, #424]
 18795 03fe DA6D     		ldr	r2, [r3, #92]
 18796 0400 07F59C73 		add	r3, r7, #312
 18797 0404 2149     		ldr	r1, .L718+24
 18798 0406 1846     		mov	r0, r3
 18799 0408 FFF7FEFF 		bl	sprintf
2455:..\src/command_processing.c ****     strcat(info_string, str);
 18800              		.loc 1 2455 0
 18801 040c 07F59C72 		add	r2, r7, #312
 18802 0410 3B1D     		adds	r3, r7, #4
 18803 0412 1146     		mov	r1, r2
 18804 0414 1868     		ldr	r0, [r3]
 18805 0416 FFF7FEFF 		bl	strcat
2456:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18806              		.loc 1 2456 0
 18807 041a 3B1D     		adds	r3, r7, #4
 18808 041c 1868     		ldr	r0, [r3]
 18809 041e FFF7FEFF 		bl	strlen
 18810 0422 0346     		mov	r3, r0
 18811 0424 1A46     		mov	r2, r3
 18812 0426 3B1D     		adds	r3, r7, #4
 18813 0428 1B68     		ldr	r3, [r3]
 18814 042a 1344     		add	r3, r3, r2
 18815 042c 124A     		ldr	r2, .L718+4
 18816 042e 1188     		ldrh	r1, [r2]	@ unaligned
 18817 0430 9278     		ldrb	r2, [r2, #2]
 18818 0432 1980     		strh	r1, [r3]	@ unaligned
 18819 0434 9A70     		strb	r2, [r3, #2]
2457:..\src/command_processing.c ****     
2458:..\src/command_processing.c ****     
2459:..\src/command_processing.c ****     // R01 Project statistics (some are duplicated)
2460:..\src/command_processing.c ****     char CYDATA R01_str[300];
2461:..\src/command_processing.c ****     prepare_R01_info(R01_str);
 18820              		.loc 1 2461 0
 18821 0436 07F10C03 		add	r3, r7, #12
 18822 043a 1846     		mov	r0, r3
 18823 043c FFF7FEFF 		bl	prepare_R01_info
2462:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18824              		.loc 1 2462 0
 18825 0440 3B1D     		adds	r3, r7, #4
 18826 0442 1868     		ldr	r0, [r3]
 18827 0444 FFF7FEFF 		bl	strlen
 18828 0448 0346     		mov	r3, r0
 18829 044a 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 416


 18830 044c 3B1D     		adds	r3, r7, #4
 18831 044e 1B68     		ldr	r3, [r3]
 18832 0450 1344     		add	r3, r3, r2
 18833 0452 094A     		ldr	r2, .L718+4
 18834 0454 1188     		ldrh	r1, [r2]	@ unaligned
 18835 0456 9278     		ldrb	r2, [r2, #2]
 18836 0458 1980     		strh	r1, [r3]	@ unaligned
 18837 045a 9A70     		strb	r2, [r3, #2]
2463:..\src/command_processing.c ****     strcat(info_string, R01_str);
 18838              		.loc 1 2463 0
 18839 045c 07F10C02 		add	r2, r7, #12
 18840 0460 3B1D     		adds	r3, r7, #4
 18841 0462 1146     		mov	r1, r2
 18842 0464 1868     		ldr	r0, [r3]
 18843 0466 FFF7FEFF 		bl	strcat
2464:..\src/command_processing.c **** }
 18844              		.loc 1 2464 0
 18845 046a 00BF     		nop
 18846 046c 07F5DA77 		add	r7, r7, #436
 18847              		.cfi_def_cfa_offset 20
 18848 0470 BD46     		mov	sp, r7
 18849              		.cfi_def_cfa_register 13
 18850              		@ sp needed
 18851 0472 F0BD     		pop	{r4, r5, r6, r7, pc}
 18852              	.L719:
 18853              		.align	2
 18854              	.L718:
 18855 0474 381D0000 		.word	.LC279
 18856 0478 58110000 		.word	.LC152
 18857 047c 541D0000 		.word	.LC280
 18858 0480 7C1D0000 		.word	.LC281
 18859 0484 9C1D0000 		.word	.LC282
 18860 0488 C41D0000 		.word	.LC283
 18861 048c E41D0000 		.word	.LC284
 18862              		.cfi_endproc
 18863              	.LFE73:
 18864              		.size	prepare_counter_info, .-prepare_counter_info
 18865              		.section	.rodata
 18866              		.align	2
 18867              	.LC285:
 18868 1e08 52303120 		.ascii	"R01 PROJECT STATISTICS\015\012\000"
 18868      50524F4A 
 18868      45435420 
 18868      53544154 
 18868      49535449 
 18869 1e21 000000   		.align	2
 18870              	.LC286:
 18871 1e24 506F7765 		.ascii	"Power cycles: %lu\000"
 18871      72206379 
 18871      636C6573 
 18871      3A20256C 
 18871      7500
 18872 1e36 0000     		.align	2
 18873              	.LC287:
 18874 1e38 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 18874      61637469 
 18874      76617469 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 417


 18874      6F6E7320 
 18874      636F756E 
 18875 1e5a 0000     		.align	2
 18876              	.LC288:
 18877 1e5c 4E756D62 		.ascii	"Number of motions (close/open): %lu, %lu\000"
 18877      6572206F 
 18877      66206D6F 
 18877      74696F6E 
 18877      73202863 
 18878 1e85 000000   		.align	2
 18879              	.LC289:
 18880 1e88 45786365 		.ascii	"Excessive signal activity (close/open): %lu, %lu\000"
 18880      73736976 
 18880      65207369 
 18880      676E616C 
 18880      20616374 
 18881 1eb9 000000   		.align	2
 18882              	.LC290:
 18883 1ebc 546F7461 		.ascii	"Total runtime (sec): %lu\000"
 18883      6C207275 
 18883      6E74696D 
 18883      65202873 
 18883      6563293A 
 18884              		.global	__aeabi_ui2f
 18885 1ed5 000000   		.align	2
 18886              	.LC291:
 18887 1ed8 41766572 		.ascii	"Average duration of a powered-on session (sec): %.4"
 18887      61676520 
 18887      64757261 
 18887      74696F6E 
 18887      206F6620 
 18888 1f0b 6600     		.ascii	"f\000"
 18889 1f0d 000000   		.align	2
 18890              	.LC292:
 18891 1f10 46726571 		.ascii	"Frequency of motions: %.4f\000"
 18891      75656E63 
 18891      79206F66 
 18891      206D6F74 
 18891      696F6E73 
 18892              		.section	.text.prepare_R01_info,"ax",%progbits
 18893              		.align	2
 18894              		.global	prepare_R01_info
 18895              		.thumb
 18896              		.thumb_func
 18897              		.type	prepare_R01_info, %function
 18898              	prepare_R01_info:
 18899              	.LFB74:
2465:..\src/command_processing.c **** 
2466:..\src/command_processing.c **** //==============================================================================
2467:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2468:..\src/command_processing.c **** //==============================================================================
2469:..\src/command_processing.c **** 
2470:..\src/command_processing.c **** void prepare_R01_info(char *info_string)
2471:..\src/command_processing.c **** {
 18900              		.loc 1 2471 0
 18901              		.cfi_startproc
 18902              		@ args = 0, pretend = 0, frame = 168
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 418


 18903              		@ frame_needed = 1, uses_anonymous_args = 0
 18904 0000 B0B5     		push	{r4, r5, r7, lr}
 18905              		.cfi_def_cfa_offset 16
 18906              		.cfi_offset 4, -16
 18907              		.cfi_offset 5, -12
 18908              		.cfi_offset 7, -8
 18909              		.cfi_offset 14, -4
 18910 0002 AAB0     		sub	sp, sp, #168
 18911              		.cfi_def_cfa_offset 184
 18912 0004 00AF     		add	r7, sp, #0
 18913              		.cfi_def_cfa_register 7
 18914 0006 7860     		str	r0, [r7, #4]
2472:..\src/command_processing.c ****     char str[150];  
2473:..\src/command_processing.c **** 
2474:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18915              		.loc 1 2474 0
 18916 0008 8A4B     		ldr	r3, .L721
 18917 000a C7F8A430 		str	r3, [r7, #164]
2475:..\src/command_processing.c **** 
2476:..\src/command_processing.c ****     strcpy(info_string, "");
 18918              		.loc 1 2476 0
 18919 000e 7B68     		ldr	r3, [r7, #4]
 18920 0010 0022     		movs	r2, #0
 18921 0012 1A70     		strb	r2, [r3]
2477:..\src/command_processing.c ****     
2478:..\src/command_processing.c ****     strcat(info_string, "R01 PROJECT STATISTICS\r\n");
 18922              		.loc 1 2478 0
 18923 0014 7868     		ldr	r0, [r7, #4]
 18924 0016 FFF7FEFF 		bl	strlen
 18925 001a 0346     		mov	r3, r0
 18926 001c 1A46     		mov	r2, r3
 18927 001e 7B68     		ldr	r3, [r7, #4]
 18928 0020 1344     		add	r3, r3, r2
 18929 0022 854A     		ldr	r2, .L721+4
 18930 0024 1D46     		mov	r5, r3
 18931 0026 1446     		mov	r4, r2
 18932 0028 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18933 002a 2860     		str	r0, [r5]	@ unaligned
 18934 002c 6960     		str	r1, [r5, #4]	@ unaligned
 18935 002e AA60     		str	r2, [r5, #8]	@ unaligned
 18936 0030 EB60     		str	r3, [r5, #12]	@ unaligned
 18937 0032 03CC     		ldmia	r4!, {r0, r1}
 18938 0034 2861     		str	r0, [r5, #16]	@ unaligned
 18939 0036 6961     		str	r1, [r5, #20]	@ unaligned
 18940 0038 2378     		ldrb	r3, [r4]
 18941 003a 2B76     		strb	r3, [r5, #24]
2479:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18942              		.loc 1 2479 0
 18943 003c 7868     		ldr	r0, [r7, #4]
 18944 003e FFF7FEFF 		bl	strlen
 18945 0042 0346     		mov	r3, r0
 18946 0044 1A46     		mov	r2, r3
 18947 0046 7B68     		ldr	r3, [r7, #4]
 18948 0048 1344     		add	r3, r3, r2
 18949 004a 7C4A     		ldr	r2, .L721+8
 18950 004c 1188     		ldrh	r1, [r2]	@ unaligned
 18951 004e 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 419


 18952 0050 1980     		strh	r1, [r3]	@ unaligned
 18953 0052 9A70     		strb	r2, [r3, #2]
2480:..\src/command_processing.c ****     
2481:..\src/command_processing.c ****     sprintf(str, "Power cycles: %lu", MEM_P->cnt.power_cycles);
 18954              		.loc 1 2481 0
 18955 0054 D7F8A430 		ldr	r3, [r7, #164]
 18956 0058 1A6E     		ldr	r2, [r3, #96]
 18957 005a 07F10C03 		add	r3, r7, #12
 18958 005e 7849     		ldr	r1, .L721+12
 18959 0060 1846     		mov	r0, r3
 18960 0062 FFF7FEFF 		bl	sprintf
2482:..\src/command_processing.c ****     strcat(info_string, str);
 18961              		.loc 1 2482 0
 18962 0066 07F10C03 		add	r3, r7, #12
 18963 006a 1946     		mov	r1, r3
 18964 006c 7868     		ldr	r0, [r7, #4]
 18965 006e FFF7FEFF 		bl	strcat
2483:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18966              		.loc 1 2483 0
 18967 0072 7868     		ldr	r0, [r7, #4]
 18968 0074 FFF7FEFF 		bl	strlen
 18969 0078 0346     		mov	r3, r0
 18970 007a 1A46     		mov	r2, r3
 18971 007c 7B68     		ldr	r3, [r7, #4]
 18972 007e 1344     		add	r3, r3, r2
 18973 0080 6E4A     		ldr	r2, .L721+8
 18974 0082 1188     		ldrh	r1, [r2]	@ unaligned
 18975 0084 9278     		ldrb	r2, [r2, #2]
 18976 0086 1980     		strh	r1, [r3]	@ unaligned
 18977 0088 9A70     		strb	r2, [r3, #2]
2484:..\src/command_processing.c ****     
2485:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_act_counter[0], MEM_P->cnt.emg
 18978              		.loc 1 2485 0
 18979 008a D7F8A430 		ldr	r3, [r7, #164]
 18980 008e 1A69     		ldr	r2, [r3, #16]
 18981 0090 D7F8A430 		ldr	r3, [r7, #164]
 18982 0094 5B69     		ldr	r3, [r3, #20]
 18983 0096 07F10C00 		add	r0, r7, #12
 18984 009a 6A49     		ldr	r1, .L721+16
 18985 009c FFF7FEFF 		bl	sprintf
2486:..\src/command_processing.c ****     strcat(info_string, str);
 18986              		.loc 1 2486 0
 18987 00a0 07F10C03 		add	r3, r7, #12
 18988 00a4 1946     		mov	r1, r3
 18989 00a6 7868     		ldr	r0, [r7, #4]
 18990 00a8 FFF7FEFF 		bl	strcat
2487:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18991              		.loc 1 2487 0
 18992 00ac 7868     		ldr	r0, [r7, #4]
 18993 00ae FFF7FEFF 		bl	strlen
 18994 00b2 0346     		mov	r3, r0
 18995 00b4 1A46     		mov	r2, r3
 18996 00b6 7B68     		ldr	r3, [r7, #4]
 18997 00b8 1344     		add	r3, r3, r2
 18998 00ba 604A     		ldr	r2, .L721+8
 18999 00bc 1188     		ldrh	r1, [r2]	@ unaligned
 19000 00be 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 420


 19001 00c0 1980     		strh	r1, [r3]	@ unaligned
 19002 00c2 9A70     		strb	r2, [r3, #2]
2488:..\src/command_processing.c ****     
2489:..\src/command_processing.c ****     sprintf(str, "Number of motions (close/open): %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->c
 19003              		.loc 1 2489 0
 19004 00c4 D7F8A430 		ldr	r3, [r7, #164]
 19005 00c8 DA6E     		ldr	r2, [r3, #108]
 19006 00ca D7F8A430 		ldr	r3, [r7, #164]
 19007 00ce 1B6F     		ldr	r3, [r3, #112]
 19008 00d0 07F10C00 		add	r0, r7, #12
 19009 00d4 5C49     		ldr	r1, .L721+20
 19010 00d6 FFF7FEFF 		bl	sprintf
2490:..\src/command_processing.c ****     strcat(info_string, str);
 19011              		.loc 1 2490 0
 19012 00da 07F10C03 		add	r3, r7, #12
 19013 00de 1946     		mov	r1, r3
 19014 00e0 7868     		ldr	r0, [r7, #4]
 19015 00e2 FFF7FEFF 		bl	strcat
2491:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19016              		.loc 1 2491 0
 19017 00e6 7868     		ldr	r0, [r7, #4]
 19018 00e8 FFF7FEFF 		bl	strlen
 19019 00ec 0346     		mov	r3, r0
 19020 00ee 1A46     		mov	r2, r3
 19021 00f0 7B68     		ldr	r3, [r7, #4]
 19022 00f2 1344     		add	r3, r3, r2
 19023 00f4 514A     		ldr	r2, .L721+8
 19024 00f6 1188     		ldrh	r1, [r2]	@ unaligned
 19025 00f8 9278     		ldrb	r2, [r2, #2]
 19026 00fa 1980     		strh	r1, [r3]	@ unaligned
 19027 00fc 9A70     		strb	r2, [r3, #2]
2492:..\src/command_processing.c ****     
2493:..\src/command_processing.c ****     sprintf(str, "Excessive signal activity (close/open): %lu, %lu", MEM_P->cnt.excessive_signal_ac
 19028              		.loc 1 2493 0
 19029 00fe D7F8A430 		ldr	r3, [r7, #164]
 19030 0102 5A6E     		ldr	r2, [r3, #100]
 19031 0104 D7F8A430 		ldr	r3, [r7, #164]
 19032 0108 9B6E     		ldr	r3, [r3, #104]
 19033 010a 07F10C00 		add	r0, r7, #12
 19034 010e 4F49     		ldr	r1, .L721+24
 19035 0110 FFF7FEFF 		bl	sprintf
2494:..\src/command_processing.c ****     strcat(info_string, str);
 19036              		.loc 1 2494 0
 19037 0114 07F10C03 		add	r3, r7, #12
 19038 0118 1946     		mov	r1, r3
 19039 011a 7868     		ldr	r0, [r7, #4]
 19040 011c FFF7FEFF 		bl	strcat
2495:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19041              		.loc 1 2495 0
 19042 0120 7868     		ldr	r0, [r7, #4]
 19043 0122 FFF7FEFF 		bl	strlen
 19044 0126 0346     		mov	r3, r0
 19045 0128 1A46     		mov	r2, r3
 19046 012a 7B68     		ldr	r3, [r7, #4]
 19047 012c 1344     		add	r3, r3, r2
 19048 012e 434A     		ldr	r2, .L721+8
 19049 0130 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 421


 19050 0132 9278     		ldrb	r2, [r2, #2]
 19051 0134 1980     		strh	r1, [r3]	@ unaligned
 19052 0136 9A70     		strb	r2, [r3, #2]
2496:..\src/command_processing.c ****     
2497:..\src/command_processing.c ****     sprintf(str, "Total runtime (sec): %lu", MEM_P->cnt.total_runtime);
 19053              		.loc 1 2497 0
 19054 0138 D7F8A430 		ldr	r3, [r7, #164]
 19055 013c 9A6D     		ldr	r2, [r3, #88]
 19056 013e 07F10C03 		add	r3, r7, #12
 19057 0142 4349     		ldr	r1, .L721+28
 19058 0144 1846     		mov	r0, r3
 19059 0146 FFF7FEFF 		bl	sprintf
2498:..\src/command_processing.c ****     strcat(info_string, str);
 19060              		.loc 1 2498 0
 19061 014a 07F10C03 		add	r3, r7, #12
 19062 014e 1946     		mov	r1, r3
 19063 0150 7868     		ldr	r0, [r7, #4]
 19064 0152 FFF7FEFF 		bl	strcat
2499:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19065              		.loc 1 2499 0
 19066 0156 7868     		ldr	r0, [r7, #4]
 19067 0158 FFF7FEFF 		bl	strlen
 19068 015c 0346     		mov	r3, r0
 19069 015e 1A46     		mov	r2, r3
 19070 0160 7B68     		ldr	r3, [r7, #4]
 19071 0162 1344     		add	r3, r3, r2
 19072 0164 354A     		ldr	r2, .L721+8
 19073 0166 1188     		ldrh	r1, [r2]	@ unaligned
 19074 0168 9278     		ldrb	r2, [r2, #2]
 19075 016a 1980     		strh	r1, [r3]	@ unaligned
 19076 016c 9A70     		strb	r2, [r3, #2]
2500:..\src/command_processing.c ****     
2501:..\src/command_processing.c ****     sprintf(str, "Average duration of a powered-on session (sec): %.4f", (float)(MEM_P->cnt.total_r
 19077              		.loc 1 2501 0
 19078 016e D7F8A430 		ldr	r3, [r7, #164]
 19079 0172 9A6D     		ldr	r2, [r3, #88]
 19080 0174 D7F8A430 		ldr	r3, [r7, #164]
 19081 0178 1B6E     		ldr	r3, [r3, #96]
 19082 017a B2FBF3F3 		udiv	r3, r2, r3
 19083 017e 1846     		mov	r0, r3
 19084 0180 FFF7FEFF 		bl	__aeabi_ui2f
 19085 0184 0346     		mov	r3, r0
 19086 0186 1846     		mov	r0, r3
 19087 0188 FFF7FEFF 		bl	__aeabi_f2d
 19088 018c 0346     		mov	r3, r0
 19089 018e 0C46     		mov	r4, r1
 19090 0190 07F10C00 		add	r0, r7, #12
 19091 0194 1A46     		mov	r2, r3
 19092 0196 2346     		mov	r3, r4
 19093 0198 2E49     		ldr	r1, .L721+32
 19094 019a FFF7FEFF 		bl	sprintf
2502:..\src/command_processing.c ****     strcat(info_string, str);
 19095              		.loc 1 2502 0
 19096 019e 07F10C03 		add	r3, r7, #12
 19097 01a2 1946     		mov	r1, r3
 19098 01a4 7868     		ldr	r0, [r7, #4]
 19099 01a6 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 422


2503:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19100              		.loc 1 2503 0
 19101 01aa 7868     		ldr	r0, [r7, #4]
 19102 01ac FFF7FEFF 		bl	strlen
 19103 01b0 0346     		mov	r3, r0
 19104 01b2 1A46     		mov	r2, r3
 19105 01b4 7B68     		ldr	r3, [r7, #4]
 19106 01b6 1344     		add	r3, r3, r2
 19107 01b8 204A     		ldr	r2, .L721+8
 19108 01ba 1188     		ldrh	r1, [r2]	@ unaligned
 19109 01bc 9278     		ldrb	r2, [r2, #2]
 19110 01be 1980     		strh	r1, [r3]	@ unaligned
 19111 01c0 9A70     		strb	r2, [r3, #2]
2504:..\src/command_processing.c ****     
2505:..\src/command_processing.c ****     sprintf(str, "Frequency of motions: %.4f", (float)((MEM_P->cnt.emg_act_counter[0] + MEM_P->cnt.
 19112              		.loc 1 2505 0
 19113 01c2 D7F8A430 		ldr	r3, [r7, #164]
 19114 01c6 1A69     		ldr	r2, [r3, #16]
 19115 01c8 D7F8A430 		ldr	r3, [r7, #164]
 19116 01cc 5B69     		ldr	r3, [r3, #20]
 19117 01ce 1344     		add	r3, r3, r2
 19118 01d0 1846     		mov	r0, r3
 19119 01d2 FFF7FEFF 		bl	__aeabi_ui2f
 19120 01d6 0446     		mov	r4, r0
 19121 01d8 D7F8A430 		ldr	r3, [r7, #164]
 19122 01dc 9B6D     		ldr	r3, [r3, #88]
 19123 01de 1846     		mov	r0, r3
 19124 01e0 FFF7FEFF 		bl	__aeabi_ui2f
 19125 01e4 0346     		mov	r3, r0
 19126 01e6 1946     		mov	r1, r3
 19127 01e8 2046     		mov	r0, r4
 19128 01ea FFF7FEFF 		bl	__aeabi_fdiv
 19129 01ee 0346     		mov	r3, r0
 19130 01f0 1846     		mov	r0, r3
 19131 01f2 FFF7FEFF 		bl	__aeabi_f2d
 19132 01f6 0346     		mov	r3, r0
 19133 01f8 0C46     		mov	r4, r1
 19134 01fa 07F10C00 		add	r0, r7, #12
 19135 01fe 1A46     		mov	r2, r3
 19136 0200 2346     		mov	r3, r4
 19137 0202 1549     		ldr	r1, .L721+36
 19138 0204 FFF7FEFF 		bl	sprintf
2506:..\src/command_processing.c ****     strcat(info_string, str);
 19139              		.loc 1 2506 0
 19140 0208 07F10C03 		add	r3, r7, #12
 19141 020c 1946     		mov	r1, r3
 19142 020e 7868     		ldr	r0, [r7, #4]
 19143 0210 FFF7FEFF 		bl	strcat
2507:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19144              		.loc 1 2507 0
 19145 0214 7868     		ldr	r0, [r7, #4]
 19146 0216 FFF7FEFF 		bl	strlen
 19147 021a 0346     		mov	r3, r0
 19148 021c 1A46     		mov	r2, r3
 19149 021e 7B68     		ldr	r3, [r7, #4]
 19150 0220 1344     		add	r3, r3, r2
 19151 0222 064A     		ldr	r2, .L721+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 423


 19152 0224 1188     		ldrh	r1, [r2]	@ unaligned
 19153 0226 9278     		ldrb	r2, [r2, #2]
 19154 0228 1980     		strh	r1, [r3]	@ unaligned
 19155 022a 9A70     		strb	r2, [r3, #2]
2508:..\src/command_processing.c **** 
2509:..\src/command_processing.c **** }
 19156              		.loc 1 2509 0
 19157 022c 00BF     		nop
 19158 022e A837     		adds	r7, r7, #168
 19159              		.cfi_def_cfa_offset 16
 19160 0230 BD46     		mov	sp, r7
 19161              		.cfi_def_cfa_register 13
 19162              		@ sp needed
 19163 0232 B0BD     		pop	{r4, r5, r7, pc}
 19164              	.L722:
 19165              		.align	2
 19166              	.L721:
 19167 0234 00000000 		.word	g_mem
 19168 0238 081E0000 		.word	.LC285
 19169 023c 58110000 		.word	.LC152
 19170 0240 241E0000 		.word	.LC286
 19171 0244 381E0000 		.word	.LC287
 19172 0248 5C1E0000 		.word	.LC288
 19173 024c 881E0000 		.word	.LC289
 19174 0250 BC1E0000 		.word	.LC290
 19175 0254 D81E0000 		.word	.LC291
 19176 0258 101F0000 		.word	.LC292
 19177              		.cfi_endproc
 19178              	.LFE74:
 19179              		.size	prepare_R01_info, .-prepare_R01_info
 19180              		.section	.rodata
 19181 1f2b 00       		.align	2
 19182              	.LC293:
 19183 1f2c 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 19183      77617265 
 19183      20766572 
 19183      73696F6E 
 19183      3A202573 
 19184 1f43 00       		.align	2
 19185              	.LC294:
 19186 1f44 506F7369 		.ascii	"Position PID: \000"
 19186      74696F6E 
 19186      20504944 
 19186      3A2000
 19187 1f53 00       		.align	2
 19188              	.LC295:
 19189 1f54 43757272 		.ascii	"Current PID: \000"
 19189      656E7420 
 19189      5049443A 
 19189      2000
 19190 1f62 0000     		.align	2
 19191              	.LC296:
 19192 1f64 5265736F 		.ascii	"Resolutions: \000"
 19192      6C757469 
 19192      6F6E733A 
 19192      2000
 19193 1f72 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 424


 19194              	.LC297:
 19195 1f74 4F666673 		.ascii	"Offsets: \000"
 19195      6574733A 
 19195      2000
 19196 1f7e 0000     		.align	2
 19197              	.LC298:
 19198 1f80 4D756C74 		.ascii	"Multipliers: \000"
 19198      69706C69 
 19198      6572733A 
 19198      2000
 19199 1f8e 0000     		.align	2
 19200              	.LC299:
 19201 1f90 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 19201      656E7420 
 19201      6C6F6F6B 
 19201      75702074 
 19201      61626C65 
 19202 1fc3 662C2025 		.ascii	"f, %f\015\012\000"
 19202      660D0A00 
 19203 1fcb 00       		.align	2
 19204              	.LC300:
 19205 1fcc 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 19205      74696F6E 
 19205      206C696D 
 19205      69742061 
 19205      63746976 
 19206              		.align	2
 19207              	.LC301:
 19208 1fe8 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 19208      74696F6E 
 19208      206C696D 
 19208      6974733A 
 19208      20696E66 
 19209              		.section	.text.prepare_SD_param_info,"ax",%progbits
 19210              		.align	2
 19211              		.global	prepare_SD_param_info
 19212              		.thumb
 19213              		.thumb_func
 19214              		.type	prepare_SD_param_info, %function
 19215              	prepare_SD_param_info:
 19216              	.LFB75:
2510:..\src/command_processing.c **** 
2511:..\src/command_processing.c **** //==============================================================================
2512:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2513:..\src/command_processing.c **** //==============================================================================
2514:..\src/command_processing.c **** 
2515:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2516:..\src/command_processing.c **** {
 19217              		.loc 1 2516 0
 19218              		.cfi_startproc
 19219              		@ args = 0, pretend = 0, frame = 152
 19220              		@ frame_needed = 1, uses_anonymous_args = 0
 19221 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 19222              		.cfi_def_cfa_offset 36
 19223              		.cfi_offset 4, -36
 19224              		.cfi_offset 5, -32
 19225              		.cfi_offset 6, -28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 425


 19226              		.cfi_offset 7, -24
 19227              		.cfi_offset 8, -20
 19228              		.cfi_offset 9, -16
 19229              		.cfi_offset 10, -12
 19230              		.cfi_offset 11, -8
 19231              		.cfi_offset 14, -4
 19232 0004 B1B0     		sub	sp, sp, #196
 19233              		.cfi_def_cfa_offset 232
 19234 0006 0AAF     		add	r7, sp, #40
 19235              		.cfi_def_cfa 7, 192
 19236 0008 7861     		str	r0, [r7, #20]
2517:..\src/command_processing.c ****     char str[100];  
2518:..\src/command_processing.c ****     int i;
2519:..\src/command_processing.c ****            
2520:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2521:..\src/command_processing.c ****     
2522:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 19237              		.loc 1 2522 0
 19238 000a AC4B     		ldr	r3, .L788
 19239 000c C7F88C30 		str	r3, [r7, #140]
2523:..\src/command_processing.c ****         
2524:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 19240              		.loc 1 2524 0
 19241 0010 AB4A     		ldr	r2, .L788+4
 19242 0012 AC49     		ldr	r1, .L788+8
 19243 0014 7869     		ldr	r0, [r7, #20]
 19244 0016 FFF7FEFF 		bl	sprintf
2525:..\src/command_processing.c ****     
2526:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 19245              		.loc 1 2526 0
 19246 001a D7F88C30 		ldr	r3, [r7, #140]
 19247 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 19248 0022 1A46     		mov	r2, r3
 19249 0024 07F11C03 		add	r3, r7, #28
 19250 0028 A749     		ldr	r1, .L788+12
 19251 002a 1846     		mov	r0, r3
 19252 002c FFF7FEFF 		bl	sprintf
2527:..\src/command_processing.c ****     strcat(info_string, str);
 19253              		.loc 1 2527 0
 19254 0030 07F11C03 		add	r3, r7, #28
 19255 0034 1946     		mov	r1, r3
 19256 0036 7869     		ldr	r0, [r7, #20]
 19257 0038 FFF7FEFF 		bl	strcat
2528:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 19258              		.loc 1 2528 0
 19259 003c D7F88C30 		ldr	r3, [r7, #140]
 19260 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 19261 0044 002B     		cmp	r3, #0
 19262 0046 02D0     		beq	.L725
 19263 0048 012B     		cmp	r3, #1
 19264 004a 15D0     		beq	.L726
 19265 004c 26E0     		b	.L724
 19266              	.L725:
2529:..\src/command_processing.c ****         case RIGHT_HAND:
2530:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 19267              		.loc 1 2530 0
 19268 004e 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 426


 19269 0050 FFF7FEFF 		bl	strlen
 19270 0054 0346     		mov	r3, r0
 19271 0056 1A46     		mov	r2, r3
 19272 0058 7B69     		ldr	r3, [r7, #20]
 19273 005a 1344     		add	r3, r3, r2
 19274 005c 9B4A     		ldr	r2, .L788+16
 19275 005e 1D46     		mov	r5, r3
 19276 0060 1446     		mov	r4, r2
 19277 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19278 0064 2860     		str	r0, [r5]	@ unaligned
 19279 0066 6960     		str	r1, [r5, #4]	@ unaligned
 19280 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 19281 006a EB60     		str	r3, [r5, #12]	@ unaligned
 19282 006c 2388     		ldrh	r3, [r4]	@ unaligned
 19283 006e A278     		ldrb	r2, [r4, #2]
 19284 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 19285 0072 1346     		mov	r3, r2
 19286 0074 AB74     		strb	r3, [r5, #18]
2531:..\src/command_processing.c ****             break;
 19287              		.loc 1 2531 0
 19288 0076 11E0     		b	.L724
 19289              	.L726:
2532:..\src/command_processing.c ****         case LEFT_HAND:
2533:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 19290              		.loc 1 2533 0
 19291 0078 7869     		ldr	r0, [r7, #20]
 19292 007a FFF7FEFF 		bl	strlen
 19293 007e 0346     		mov	r3, r0
 19294 0080 1A46     		mov	r2, r3
 19295 0082 7B69     		ldr	r3, [r7, #20]
 19296 0084 1344     		add	r3, r3, r2
 19297 0086 924A     		ldr	r2, .L788+20
 19298 0088 1D46     		mov	r5, r3
 19299 008a 1446     		mov	r4, r2
 19300 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19301 008e 2860     		str	r0, [r5]	@ unaligned
 19302 0090 6960     		str	r1, [r5, #4]	@ unaligned
 19303 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 19304 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 19305 0096 2388     		ldrh	r3, [r4]	@ unaligned
 19306 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2534:..\src/command_processing.c ****             break;
 19307              		.loc 1 2534 0
 19308 009a 00BF     		nop
 19309              	.L724:
2535:..\src/command_processing.c ****     }
2536:..\src/command_processing.c **** 
2537:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 19310              		.loc 1 2537 0
 19311 009c D7F88C30 		ldr	r3, [r7, #140]
 19312 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 19313 00a4 1A46     		mov	r2, r3
 19314 00a6 D7F88C30 		ldr	r3, [r7, #140]
 19315 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 19316 00ae 1946     		mov	r1, r3
 19317 00b0 D7F88C30 		ldr	r3, [r7, #140]
 19318 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 427


 19319 00b8 07F11C00 		add	r0, r7, #28
 19320 00bc 0093     		str	r3, [sp]
 19321 00be 0B46     		mov	r3, r1
 19322 00c0 8449     		ldr	r1, .L788+24
 19323 00c2 FFF7FEFF 		bl	sprintf
2538:..\src/command_processing.c ****     strcat(info_string, str);
 19324              		.loc 1 2538 0
 19325 00c6 07F11C03 		add	r3, r7, #28
 19326 00ca 1946     		mov	r1, r3
 19327 00cc 7869     		ldr	r0, [r7, #20]
 19328 00ce FFF7FEFF 		bl	strcat
2539:..\src/command_processing.c ****     
2540:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 19329              		.loc 1 2540 0
 19330 00d2 D7F88C30 		ldr	r3, [r7, #140]
 19331 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 19332 00da 1A46     		mov	r2, r3
 19333 00dc D7F88C30 		ldr	r3, [r7, #140]
 19334 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 19335 00e4 1946     		mov	r1, r3
 19336 00e6 D7F88C30 		ldr	r3, [r7, #140]
 19337 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 19338 00ee 07F11C00 		add	r0, r7, #28
 19339 00f2 0093     		str	r3, [sp]
 19340 00f4 0B46     		mov	r3, r1
 19341 00f6 7849     		ldr	r1, .L788+28
 19342 00f8 FFF7FEFF 		bl	sprintf
2541:..\src/command_processing.c ****     strcat(info_string, str);
 19343              		.loc 1 2541 0
 19344 00fc 07F11C03 		add	r3, r7, #28
 19345 0100 1946     		mov	r1, r3
 19346 0102 7869     		ldr	r0, [r7, #20]
 19347 0104 FFF7FEFF 		bl	strcat
 19348              	.LBB27:
2542:..\src/command_processing.c ****     
2543:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 19349              		.loc 1 2543 0
 19350 0108 0023     		movs	r3, #0
 19351 010a 87F89330 		strb	r3, [r7, #147]
 19352 010e 00F05EBE 		b	.L727
 19353              	.L771:
 19354              	.LBB28:
2544:..\src/command_processing.c ****             
2545:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 19355              		.loc 1 2545 0
 19356 0112 97F89330 		ldrb	r3, [r7, #147]
 19357 0116 87F88B30 		strb	r3, [r7, #139]
2546:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 19358              		.loc 1 2546 0
 19359 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 19360 011e 1346     		mov	r3, r2
 19361 0120 DB00     		lsls	r3, r3, #3
 19362 0122 9B1A     		subs	r3, r3, r2
 19363 0124 1B01     		lsls	r3, r3, #4
 19364 0126 B033     		adds	r3, r3, #176
 19365 0128 D7F88C20 		ldr	r2, [r7, #140]
 19366 012c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 428


 19367 012e C7F88430 		str	r3, [r7, #132]
2547:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 19368              		.loc 1 2547 0
 19369 0132 D7F88430 		ldr	r3, [r7, #132]
 19370 0136 93F86030 		ldrb	r3, [r3, #96]
 19371 013a 87F88330 		strb	r3, [r7, #131]
2548:..\src/command_processing.c ****               
2549:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 19372              		.loc 1 2549 0
 19373 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 19374 0142 5A1C     		adds	r2, r3, #1
 19375 0144 07F11C03 		add	r3, r7, #28
 19376 0148 6449     		ldr	r1, .L788+32
 19377 014a 1846     		mov	r0, r3
 19378 014c FFF7FEFF 		bl	sprintf
2550:..\src/command_processing.c ****         strcat(info_string, str);
 19379              		.loc 1 2550 0
 19380 0150 07F11C03 		add	r3, r7, #28
 19381 0154 1946     		mov	r1, r3
 19382 0156 7869     		ldr	r0, [r7, #20]
 19383 0158 FFF7FEFF 		bl	strcat
2551:..\src/command_processing.c ****                     
2552:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 19384              		.loc 1 2552 0
 19385 015c 7869     		ldr	r0, [r7, #20]
 19386 015e FFF7FEFF 		bl	strlen
 19387 0162 0346     		mov	r3, r0
 19388 0164 1A46     		mov	r2, r3
 19389 0166 7B69     		ldr	r3, [r7, #20]
 19390 0168 1344     		add	r3, r3, r2
 19391 016a 5D4A     		ldr	r2, .L788+36
 19392 016c 1D46     		mov	r5, r3
 19393 016e 1446     		mov	r4, r2
 19394 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19395 0172 2860     		str	r0, [r5]	@ unaligned
 19396 0174 6960     		str	r1, [r5, #4]	@ unaligned
 19397 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 19398 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 19399 017a 03CC     		ldmia	r4!, {r0, r1}
 19400 017c 2861     		str	r0, [r5, #16]	@ unaligned
 19401 017e 6961     		str	r1, [r5, #20]	@ unaligned
 19402 0180 2388     		ldrh	r3, [r4]	@ unaligned
 19403 0182 A278     		ldrb	r2, [r4, #2]
 19404 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 19405 0186 1346     		mov	r3, r2
 19406 0188 AB76     		strb	r3, [r5, #26]
2553:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 19407              		.loc 1 2553 0
 19408 018a D7F88430 		ldr	r3, [r7, #132]
 19409 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 19410 0192 012B     		cmp	r3, #1
 19411 0194 0CD1     		bne	.L728
2554:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 19412              		.loc 1 2554 0
 19413 0196 7869     		ldr	r0, [r7, #20]
 19414 0198 FFF7FEFF 		bl	strlen
 19415 019c 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 429


 19416 019e 1A46     		mov	r2, r3
 19417 01a0 7B69     		ldr	r3, [r7, #20]
 19418 01a2 1344     		add	r3, r3, r2
 19419 01a4 4F4A     		ldr	r2, .L788+40
 19420 01a6 1068     		ldr	r0, [r2]	@ unaligned
 19421 01a8 1860     		str	r0, [r3]	@ unaligned
 19422 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19423 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 19424 01ae 0BE0     		b	.L729
 19425              	.L728:
2555:..\src/command_processing.c ****         else
2556:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 19426              		.loc 1 2556 0
 19427 01b0 7869     		ldr	r0, [r7, #20]
 19428 01b2 FFF7FEFF 		bl	strlen
 19429 01b6 0346     		mov	r3, r0
 19430 01b8 1A46     		mov	r2, r3
 19431 01ba 7B69     		ldr	r3, [r7, #20]
 19432 01bc 1344     		add	r3, r3, r2
 19433 01be 4A4A     		ldr	r2, .L788+44
 19434 01c0 1068     		ldr	r0, [r2]	@ unaligned
 19435 01c2 1860     		str	r0, [r3]	@ unaligned
 19436 01c4 1279     		ldrb	r2, [r2, #4]
 19437 01c6 1A71     		strb	r2, [r3, #4]
 19438              	.L729:
2557:..\src/command_processing.c ****         
2558:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 19439              		.loc 1 2558 0
 19440 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 19441 01cc 474A     		ldr	r2, .L788+48
 19442 01ce 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 19443 01d2 1A46     		mov	r2, r3
 19444 01d4 07F11C03 		add	r3, r7, #28
 19445 01d8 4549     		ldr	r1, .L788+52
 19446 01da 1846     		mov	r0, r3
 19447 01dc FFF7FEFF 		bl	sprintf
2559:..\src/command_processing.c ****         strcat(info_string, str);
 19448              		.loc 1 2559 0
 19449 01e0 07F11C03 		add	r3, r7, #28
 19450 01e4 1946     		mov	r1, r3
 19451 01e6 7869     		ldr	r0, [r7, #20]
 19452 01e8 FFF7FEFF 		bl	strcat
2560:..\src/command_processing.c **** 
2561:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 19453              		.loc 1 2561 0
 19454 01ec 7869     		ldr	r0, [r7, #20]
 19455 01ee FFF7FEFF 		bl	strlen
 19456 01f2 0346     		mov	r3, r0
 19457 01f4 1A46     		mov	r2, r3
 19458 01f6 7B69     		ldr	r3, [r7, #20]
 19459 01f8 1344     		add	r3, r3, r2
 19460 01fa 3E4A     		ldr	r2, .L788+56
 19461 01fc 1C46     		mov	r4, r3
 19462 01fe 1346     		mov	r3, r2
 19463 0200 07CB     		ldmia	r3!, {r0, r1, r2}
 19464 0202 2060     		str	r0, [r4]	@ unaligned
 19465 0204 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 430


 19466 0206 A260     		str	r2, [r4, #8]	@ unaligned
 19467 0208 1A88     		ldrh	r2, [r3]	@ unaligned
 19468 020a 9B78     		ldrb	r3, [r3, #2]
 19469 020c A281     		strh	r2, [r4, #12]	@ unaligned
 19470 020e A373     		strb	r3, [r4, #14]
2562:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 19471              		.loc 1 2562 0
 19472 0210 D7F88430 		ldr	r3, [r7, #132]
 19473 0214 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19474 0218 032B     		cmp	r3, #3
 19475 021a 75D0     		beq	.L730
2563:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 19476              		.loc 1 2563 0
 19477 021c D7F88430 		ldr	r3, [r7, #132]
 19478 0220 1B68     		ldr	r3, [r3]
 19479 0222 1846     		mov	r0, r3
 19480 0224 FFF7FEFF 		bl	__aeabi_i2d
 19481 0228 4FF00002 		mov	r2, #0
 19482 022c 324B     		ldr	r3, .L788+60
 19483 022e FFF7FEFF 		bl	__aeabi_ddiv
 19484 0232 0346     		mov	r3, r0
 19485 0234 0C46     		mov	r4, r1
 19486 0236 07F11C00 		add	r0, r7, #28
 19487 023a 1A46     		mov	r2, r3
 19488 023c 2346     		mov	r3, r4
 19489 023e 2F49     		ldr	r1, .L788+64
 19490 0240 FFF7FEFF 		bl	sprintf
2564:..\src/command_processing.c ****             strcat(info_string, str);
 19491              		.loc 1 2564 0
 19492 0244 07F11C03 		add	r3, r7, #28
 19493 0248 1946     		mov	r1, r3
 19494 024a 7869     		ldr	r0, [r7, #20]
 19495 024c FFF7FEFF 		bl	strcat
2565:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 19496              		.loc 1 2565 0
 19497 0250 D7F88430 		ldr	r3, [r7, #132]
 19498 0254 5B68     		ldr	r3, [r3, #4]
 19499 0256 1846     		mov	r0, r3
 19500 0258 FFF7FEFF 		bl	__aeabi_i2d
 19501 025c 4FF00002 		mov	r2, #0
 19502 0260 254B     		ldr	r3, .L788+60
 19503 0262 FFF7FEFF 		bl	__aeabi_ddiv
 19504 0266 0346     		mov	r3, r0
 19505 0268 0C46     		mov	r4, r1
 19506 026a 07F11C00 		add	r0, r7, #28
 19507 026e 1A46     		mov	r2, r3
 19508 0270 2346     		mov	r3, r4
 19509 0272 2349     		ldr	r1, .L788+68
 19510 0274 FFF7FEFF 		bl	sprintf
2566:..\src/command_processing.c ****             strcat(info_string, str);
 19511              		.loc 1 2566 0
 19512 0278 07F11C03 		add	r3, r7, #28
 19513 027c 1946     		mov	r1, r3
 19514 027e 7869     		ldr	r0, [r7, #20]
 19515 0280 FFF7FEFF 		bl	strcat
2567:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 19516              		.loc 1 2567 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 431


 19517 0284 D7F88430 		ldr	r3, [r7, #132]
 19518 0288 9B68     		ldr	r3, [r3, #8]
 19519 028a 1846     		mov	r0, r3
 19520 028c FFF7FEFF 		bl	__aeabi_i2d
 19521 0290 4FF00002 		mov	r2, #0
 19522 0294 184B     		ldr	r3, .L788+60
 19523 0296 FFF7FEFF 		bl	__aeabi_ddiv
 19524 029a 0346     		mov	r3, r0
 19525 029c 0C46     		mov	r4, r1
 19526 029e 07F11C00 		add	r0, r7, #28
 19527 02a2 1A46     		mov	r2, r3
 19528 02a4 2346     		mov	r3, r4
 19529 02a6 1749     		ldr	r1, .L788+72
 19530 02a8 FFF7FEFF 		bl	sprintf
2568:..\src/command_processing.c ****             strcat(info_string, str);
 19531              		.loc 1 2568 0
 19532 02ac 07F11C03 		add	r3, r7, #28
 19533 02b0 1946     		mov	r1, r3
 19534 02b2 7869     		ldr	r0, [r7, #20]
 19535 02b4 FFF7FEFF 		bl	strcat
 19536 02b8 74E0     		b	.L731
 19537              	.L789:
 19538 02ba 00BF     		.align	2
 19539              	.L788:
 19540 02bc 00000000 		.word	g_mem
 19541 02c0 70110000 		.word	.LC154
 19542 02c4 2C1F0000 		.word	.LC293
 19543 02c8 C0110000 		.word	.LC157
 19544 02cc 70120000 		.word	.LC163
 19545 02d0 84120000 		.word	.LC164
 19546 02d4 481C0000 		.word	.LC273
 19547 02d8 741C0000 		.word	.LC274
 19548 02dc CC120000 		.word	.LC168
 19549 02e0 3C130000 		.word	.LC177
 19550 02e4 2C130000 		.word	.LC175
 19551 02e8 34130000 		.word	.LC176
 19552 02ec 00000000 		.word	dev_pwm_limit
 19553 02f0 64130000 		.word	.LC180
 19554 02f4 441F0000 		.word	.LC294
 19555 02f8 0000F040 		.word	1089470464
 19556 02fc 7C140000 		.word	.LC192
 19557 0300 88140000 		.word	.LC193
 19558 0304 94140000 		.word	.LC194
 19559              	.L730:
2569:..\src/command_processing.c ****         }
2570:..\src/command_processing.c ****         else { 
2571:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 19560              		.loc 1 2571 0
 19561 0308 D7F88430 		ldr	r3, [r7, #132]
 19562 030c 9B69     		ldr	r3, [r3, #24]
 19563 030e 1846     		mov	r0, r3
 19564 0310 FFF7FEFF 		bl	__aeabi_i2d
 19565 0314 4FF00002 		mov	r2, #0
 19566 0318 CC4B     		ldr	r3, .L790
 19567 031a FFF7FEFF 		bl	__aeabi_ddiv
 19568 031e 0346     		mov	r3, r0
 19569 0320 0C46     		mov	r4, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 432


 19570 0322 07F11C00 		add	r0, r7, #28
 19571 0326 1A46     		mov	r2, r3
 19572 0328 2346     		mov	r3, r4
 19573 032a C949     		ldr	r1, .L790+4
 19574 032c FFF7FEFF 		bl	sprintf
2572:..\src/command_processing.c ****             strcat(info_string, str);
 19575              		.loc 1 2572 0
 19576 0330 07F11C03 		add	r3, r7, #28
 19577 0334 1946     		mov	r1, r3
 19578 0336 7869     		ldr	r0, [r7, #20]
 19579 0338 FFF7FEFF 		bl	strcat
2573:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 19580              		.loc 1 2573 0
 19581 033c D7F88430 		ldr	r3, [r7, #132]
 19582 0340 DB69     		ldr	r3, [r3, #28]
 19583 0342 1846     		mov	r0, r3
 19584 0344 FFF7FEFF 		bl	__aeabi_i2d
 19585 0348 4FF00002 		mov	r2, #0
 19586 034c BF4B     		ldr	r3, .L790
 19587 034e FFF7FEFF 		bl	__aeabi_ddiv
 19588 0352 0346     		mov	r3, r0
 19589 0354 0C46     		mov	r4, r1
 19590 0356 07F11C00 		add	r0, r7, #28
 19591 035a 1A46     		mov	r2, r3
 19592 035c 2346     		mov	r3, r4
 19593 035e BD49     		ldr	r1, .L790+8
 19594 0360 FFF7FEFF 		bl	sprintf
2574:..\src/command_processing.c ****             strcat(info_string, str);
 19595              		.loc 1 2574 0
 19596 0364 07F11C03 		add	r3, r7, #28
 19597 0368 1946     		mov	r1, r3
 19598 036a 7869     		ldr	r0, [r7, #20]
 19599 036c FFF7FEFF 		bl	strcat
2575:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 19600              		.loc 1 2575 0
 19601 0370 D7F88430 		ldr	r3, [r7, #132]
 19602 0374 1B6A     		ldr	r3, [r3, #32]
 19603 0376 1846     		mov	r0, r3
 19604 0378 FFF7FEFF 		bl	__aeabi_i2d
 19605 037c 4FF00002 		mov	r2, #0
 19606 0380 B24B     		ldr	r3, .L790
 19607 0382 FFF7FEFF 		bl	__aeabi_ddiv
 19608 0386 0346     		mov	r3, r0
 19609 0388 0C46     		mov	r4, r1
 19610 038a 07F11C00 		add	r0, r7, #28
 19611 038e 1A46     		mov	r2, r3
 19612 0390 2346     		mov	r3, r4
 19613 0392 B149     		ldr	r1, .L790+12
 19614 0394 FFF7FEFF 		bl	sprintf
2576:..\src/command_processing.c ****             strcat(info_string, str);
 19615              		.loc 1 2576 0
 19616 0398 07F11C03 		add	r3, r7, #28
 19617 039c 1946     		mov	r1, r3
 19618 039e 7869     		ldr	r0, [r7, #20]
 19619 03a0 FFF7FEFF 		bl	strcat
 19620              	.L731:
2577:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 433


2578:..\src/command_processing.c **** 
2579:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 19621              		.loc 1 2579 0
 19622 03a4 7869     		ldr	r0, [r7, #20]
 19623 03a6 FFF7FEFF 		bl	strlen
 19624 03aa 0346     		mov	r3, r0
 19625 03ac 1A46     		mov	r2, r3
 19626 03ae 7B69     		ldr	r3, [r7, #20]
 19627 03b0 1344     		add	r3, r3, r2
 19628 03b2 AA4A     		ldr	r2, .L790+16
 19629 03b4 1C46     		mov	r4, r3
 19630 03b6 1346     		mov	r3, r2
 19631 03b8 07CB     		ldmia	r3!, {r0, r1, r2}
 19632 03ba 2060     		str	r0, [r4]	@ unaligned
 19633 03bc 6160     		str	r1, [r4, #4]	@ unaligned
 19634 03be A260     		str	r2, [r4, #8]	@ unaligned
 19635 03c0 1B88     		ldrh	r3, [r3]	@ unaligned
 19636 03c2 A381     		strh	r3, [r4, #12]	@ unaligned
2580:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 19637              		.loc 1 2580 0
 19638 03c4 D7F88430 		ldr	r3, [r7, #132]
 19639 03c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19640 03cc 032B     		cmp	r3, #3
 19641 03ce 4ED0     		beq	.L732
2581:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 19642              		.loc 1 2581 0
 19643 03d0 D7F88430 		ldr	r3, [r7, #132]
 19644 03d4 DB68     		ldr	r3, [r3, #12]
 19645 03d6 1846     		mov	r0, r3
 19646 03d8 FFF7FEFF 		bl	__aeabi_i2d
 19647 03dc 4FF00002 		mov	r2, #0
 19648 03e0 9A4B     		ldr	r3, .L790
 19649 03e2 FFF7FEFF 		bl	__aeabi_ddiv
 19650 03e6 0346     		mov	r3, r0
 19651 03e8 0C46     		mov	r4, r1
 19652 03ea 07F11C00 		add	r0, r7, #28
 19653 03ee 1A46     		mov	r2, r3
 19654 03f0 2346     		mov	r3, r4
 19655 03f2 9749     		ldr	r1, .L790+4
 19656 03f4 FFF7FEFF 		bl	sprintf
2582:..\src/command_processing.c ****             strcat(info_string, str);
 19657              		.loc 1 2582 0
 19658 03f8 07F11C03 		add	r3, r7, #28
 19659 03fc 1946     		mov	r1, r3
 19660 03fe 7869     		ldr	r0, [r7, #20]
 19661 0400 FFF7FEFF 		bl	strcat
2583:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 19662              		.loc 1 2583 0
 19663 0404 D7F88430 		ldr	r3, [r7, #132]
 19664 0408 1B69     		ldr	r3, [r3, #16]
 19665 040a 1846     		mov	r0, r3
 19666 040c FFF7FEFF 		bl	__aeabi_i2d
 19667 0410 4FF00002 		mov	r2, #0
 19668 0414 8D4B     		ldr	r3, .L790
 19669 0416 FFF7FEFF 		bl	__aeabi_ddiv
 19670 041a 0346     		mov	r3, r0
 19671 041c 0C46     		mov	r4, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 434


 19672 041e 07F11C00 		add	r0, r7, #28
 19673 0422 1A46     		mov	r2, r3
 19674 0424 2346     		mov	r3, r4
 19675 0426 8B49     		ldr	r1, .L790+8
 19676 0428 FFF7FEFF 		bl	sprintf
2584:..\src/command_processing.c ****             strcat(info_string, str);
 19677              		.loc 1 2584 0
 19678 042c 07F11C03 		add	r3, r7, #28
 19679 0430 1946     		mov	r1, r3
 19680 0432 7869     		ldr	r0, [r7, #20]
 19681 0434 FFF7FEFF 		bl	strcat
2585:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 19682              		.loc 1 2585 0
 19683 0438 D7F88430 		ldr	r3, [r7, #132]
 19684 043c 5B69     		ldr	r3, [r3, #20]
 19685 043e 1846     		mov	r0, r3
 19686 0440 FFF7FEFF 		bl	__aeabi_i2d
 19687 0444 4FF00002 		mov	r2, #0
 19688 0448 804B     		ldr	r3, .L790
 19689 044a FFF7FEFF 		bl	__aeabi_ddiv
 19690 044e 0346     		mov	r3, r0
 19691 0450 0C46     		mov	r4, r1
 19692 0452 07F11C00 		add	r0, r7, #28
 19693 0456 1A46     		mov	r2, r3
 19694 0458 2346     		mov	r3, r4
 19695 045a 7F49     		ldr	r1, .L790+12
 19696 045c FFF7FEFF 		bl	sprintf
2586:..\src/command_processing.c ****             strcat(info_string, str);
 19697              		.loc 1 2586 0
 19698 0460 07F11C03 		add	r3, r7, #28
 19699 0464 1946     		mov	r1, r3
 19700 0466 7869     		ldr	r0, [r7, #20]
 19701 0468 FFF7FEFF 		bl	strcat
 19702 046c 4DE0     		b	.L733
 19703              	.L732:
2587:..\src/command_processing.c **** 
2588:..\src/command_processing.c ****         }
2589:..\src/command_processing.c ****         else {
2590:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 19704              		.loc 1 2590 0
 19705 046e D7F88430 		ldr	r3, [r7, #132]
 19706 0472 5B6A     		ldr	r3, [r3, #36]
 19707 0474 1846     		mov	r0, r3
 19708 0476 FFF7FEFF 		bl	__aeabi_i2d
 19709 047a 4FF00002 		mov	r2, #0
 19710 047e 734B     		ldr	r3, .L790
 19711 0480 FFF7FEFF 		bl	__aeabi_ddiv
 19712 0484 0346     		mov	r3, r0
 19713 0486 0C46     		mov	r4, r1
 19714 0488 07F11C00 		add	r0, r7, #28
 19715 048c 1A46     		mov	r2, r3
 19716 048e 2346     		mov	r3, r4
 19717 0490 6F49     		ldr	r1, .L790+4
 19718 0492 FFF7FEFF 		bl	sprintf
2591:..\src/command_processing.c ****             strcat(info_string, str);
 19719              		.loc 1 2591 0
 19720 0496 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 435


 19721 049a 1946     		mov	r1, r3
 19722 049c 7869     		ldr	r0, [r7, #20]
 19723 049e FFF7FEFF 		bl	strcat
2592:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 19724              		.loc 1 2592 0
 19725 04a2 D7F88430 		ldr	r3, [r7, #132]
 19726 04a6 9B6A     		ldr	r3, [r3, #40]
 19727 04a8 1846     		mov	r0, r3
 19728 04aa FFF7FEFF 		bl	__aeabi_i2d
 19729 04ae 4FF00002 		mov	r2, #0
 19730 04b2 664B     		ldr	r3, .L790
 19731 04b4 FFF7FEFF 		bl	__aeabi_ddiv
 19732 04b8 0346     		mov	r3, r0
 19733 04ba 0C46     		mov	r4, r1
 19734 04bc 07F11C00 		add	r0, r7, #28
 19735 04c0 1A46     		mov	r2, r3
 19736 04c2 2346     		mov	r3, r4
 19737 04c4 6349     		ldr	r1, .L790+8
 19738 04c6 FFF7FEFF 		bl	sprintf
2593:..\src/command_processing.c ****             strcat(info_string, str);
 19739              		.loc 1 2593 0
 19740 04ca 07F11C03 		add	r3, r7, #28
 19741 04ce 1946     		mov	r1, r3
 19742 04d0 7869     		ldr	r0, [r7, #20]
 19743 04d2 FFF7FEFF 		bl	strcat
2594:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 19744              		.loc 1 2594 0
 19745 04d6 D7F88430 		ldr	r3, [r7, #132]
 19746 04da DB6A     		ldr	r3, [r3, #44]
 19747 04dc 1846     		mov	r0, r3
 19748 04de FFF7FEFF 		bl	__aeabi_i2d
 19749 04e2 4FF00002 		mov	r2, #0
 19750 04e6 594B     		ldr	r3, .L790
 19751 04e8 FFF7FEFF 		bl	__aeabi_ddiv
 19752 04ec 0346     		mov	r3, r0
 19753 04ee 0C46     		mov	r4, r1
 19754 04f0 07F11C00 		add	r0, r7, #28
 19755 04f4 1A46     		mov	r2, r3
 19756 04f6 2346     		mov	r3, r4
 19757 04f8 5749     		ldr	r1, .L790+12
 19758 04fa FFF7FEFF 		bl	sprintf
2595:..\src/command_processing.c ****             strcat(info_string, str);
 19759              		.loc 1 2595 0
 19760 04fe 07F11C03 		add	r3, r7, #28
 19761 0502 1946     		mov	r1, r3
 19762 0504 7869     		ldr	r0, [r7, #20]
 19763 0506 FFF7FEFF 		bl	strcat
 19764              	.L733:
2596:..\src/command_processing.c ****         }
2597:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 19765              		.loc 1 2597 0
 19766 050a D7F88430 		ldr	r3, [r7, #132]
 19767 050e 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 19768 0512 012B     		cmp	r3, #1
 19769 0514 14D1     		bne	.L734
2598:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 19770              		.loc 1 2598 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 436


 19771 0516 7869     		ldr	r0, [r7, #20]
 19772 0518 FFF7FEFF 		bl	strlen
 19773 051c 0346     		mov	r3, r0
 19774 051e 1A46     		mov	r2, r3
 19775 0520 7B69     		ldr	r3, [r7, #20]
 19776 0522 1344     		add	r3, r3, r2
 19777 0524 4E4A     		ldr	r2, .L790+20
 19778 0526 1D46     		mov	r5, r3
 19779 0528 1446     		mov	r4, r2
 19780 052a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19781 052c 2860     		str	r0, [r5]	@ unaligned
 19782 052e 6960     		str	r1, [r5, #4]	@ unaligned
 19783 0530 AA60     		str	r2, [r5, #8]	@ unaligned
 19784 0532 EB60     		str	r3, [r5, #12]	@ unaligned
 19785 0534 03CC     		ldmia	r4!, {r0, r1}
 19786 0536 2861     		str	r0, [r5, #16]	@ unaligned
 19787 0538 6961     		str	r1, [r5, #20]	@ unaligned
 19788 053a 2388     		ldrh	r3, [r4]	@ unaligned
 19789 053c 2B83     		strh	r3, [r5, #24]	@ unaligned
 19790 053e 13E0     		b	.L735
 19791              	.L734:
2599:..\src/command_processing.c ****         else
2600:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 19792              		.loc 1 2600 0
 19793 0540 7869     		ldr	r0, [r7, #20]
 19794 0542 FFF7FEFF 		bl	strlen
 19795 0546 0346     		mov	r3, r0
 19796 0548 1A46     		mov	r2, r3
 19797 054a 7B69     		ldr	r3, [r7, #20]
 19798 054c 1344     		add	r3, r3, r2
 19799 054e 454A     		ldr	r2, .L790+24
 19800 0550 1D46     		mov	r5, r3
 19801 0552 1446     		mov	r4, r2
 19802 0554 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19803 0556 2860     		str	r0, [r5]	@ unaligned
 19804 0558 6960     		str	r1, [r5, #4]	@ unaligned
 19805 055a AA60     		str	r2, [r5, #8]	@ unaligned
 19806 055c EB60     		str	r3, [r5, #12]	@ unaligned
 19807 055e 03CC     		ldmia	r4!, {r0, r1}
 19808 0560 2861     		str	r0, [r5, #16]	@ unaligned
 19809 0562 6961     		str	r1, [r5, #20]	@ unaligned
 19810 0564 2378     		ldrb	r3, [r4]
 19811 0566 2B76     		strb	r3, [r5, #24]
 19812              	.L735:
2601:..\src/command_processing.c **** 
2602:..\src/command_processing.c ****         switch(MOT->input_mode) {
 19813              		.loc 1 2602 0
 19814 0568 D7F88430 		ldr	r3, [r7, #132]
 19815 056c 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19816 0570 072B     		cmp	r3, #7
 19817 0572 00F2EA80 		bhi	.L736
 19818 0576 01A2     		adr	r2, .L738
 19819 0578 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19820              		.p2align 2
 19821              	.L738:
 19822 057c 9D050000 		.word	.L737+1
 19823 0580 C1050000 		.word	.L739+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 437


 19824 0584 E9050000 		.word	.L740+1
 19825 0588 1B060000 		.word	.L741+1
 19826 058c 79060000 		.word	.L742+1
 19827 0590 A7060000 		.word	.L743+1
 19828 0594 D7060000 		.word	.L744+1
 19829 0598 05070000 		.word	.L745+1
 19830              		.p2align 1
 19831              	.L737:
2603:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2604:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 19832              		.loc 1 2604 0
 19833 059c 7869     		ldr	r0, [r7, #20]
 19834 059e FFF7FEFF 		bl	strlen
 19835 05a2 0346     		mov	r3, r0
 19836 05a4 1A46     		mov	r2, r3
 19837 05a6 7B69     		ldr	r3, [r7, #20]
 19838 05a8 1344     		add	r3, r3, r2
 19839 05aa 2F4A     		ldr	r2, .L790+28
 19840 05ac 1D46     		mov	r5, r3
 19841 05ae 1446     		mov	r4, r2
 19842 05b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19843 05b2 2860     		str	r0, [r5]	@ unaligned
 19844 05b4 6960     		str	r1, [r5, #4]	@ unaligned
 19845 05b6 AA60     		str	r2, [r5, #8]	@ unaligned
 19846 05b8 EB60     		str	r3, [r5, #12]	@ unaligned
 19847 05ba 2388     		ldrh	r3, [r4]	@ unaligned
 19848 05bc 2B82     		strh	r3, [r5, #16]	@ unaligned
2605:..\src/command_processing.c ****                 break;
 19849              		.loc 1 2605 0
 19850 05be C4E0     		b	.L736
 19851              	.L739:
2606:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2607:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 19852              		.loc 1 2607 0
 19853 05c0 7869     		ldr	r0, [r7, #20]
 19854 05c2 FFF7FEFF 		bl	strlen
 19855 05c6 0346     		mov	r3, r0
 19856 05c8 1A46     		mov	r2, r3
 19857 05ca 7B69     		ldr	r3, [r7, #20]
 19858 05cc 1344     		add	r3, r3, r2
 19859 05ce 274A     		ldr	r2, .L790+32
 19860 05d0 1D46     		mov	r5, r3
 19861 05d2 1446     		mov	r4, r2
 19862 05d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19863 05d6 2860     		str	r0, [r5]	@ unaligned
 19864 05d8 6960     		str	r1, [r5, #4]	@ unaligned
 19865 05da AA60     		str	r2, [r5, #8]	@ unaligned
 19866 05dc EB60     		str	r3, [r5, #12]	@ unaligned
 19867 05de 2068     		ldr	r0, [r4]	@ unaligned
 19868 05e0 2861     		str	r0, [r5, #16]	@ unaligned
 19869 05e2 2379     		ldrb	r3, [r4, #4]
 19870 05e4 2B75     		strb	r3, [r5, #20]
2608:..\src/command_processing.c ****                 break;
 19871              		.loc 1 2608 0
 19872 05e6 B0E0     		b	.L736
 19873              	.L740:
2609:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 438


2610:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 19874              		.loc 1 2610 0
 19875 05e8 7869     		ldr	r0, [r7, #20]
 19876 05ea FFF7FEFF 		bl	strlen
 19877 05ee 0346     		mov	r3, r0
 19878 05f0 1A46     		mov	r2, r3
 19879 05f2 7B69     		ldr	r3, [r7, #20]
 19880 05f4 1344     		add	r3, r3, r2
 19881 05f6 1E4A     		ldr	r2, .L790+36
 19882 05f8 1D46     		mov	r5, r3
 19883 05fa 1446     		mov	r4, r2
 19884 05fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19885 05fe 2860     		str	r0, [r5]	@ unaligned
 19886 0600 6960     		str	r1, [r5, #4]	@ unaligned
 19887 0602 AA60     		str	r2, [r5, #8]	@ unaligned
 19888 0604 EB60     		str	r3, [r5, #12]	@ unaligned
 19889 0606 07CC     		ldmia	r4!, {r0, r1, r2}
 19890 0608 2861     		str	r0, [r5, #16]	@ unaligned
 19891 060a 6961     		str	r1, [r5, #20]	@ unaligned
 19892 060c AA61     		str	r2, [r5, #24]	@ unaligned
 19893 060e 2388     		ldrh	r3, [r4]	@ unaligned
 19894 0610 A278     		ldrb	r2, [r4, #2]
 19895 0612 AB83     		strh	r3, [r5, #28]	@ unaligned
 19896 0614 1346     		mov	r3, r2
 19897 0616 AB77     		strb	r3, [r5, #30]
2611:..\src/command_processing.c ****                 break;
 19898              		.loc 1 2611 0
 19899 0618 97E0     		b	.L736
 19900              	.L741:
2612:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2613:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 19901              		.loc 1 2613 0
 19902 061a 7869     		ldr	r0, [r7, #20]
 19903 061c FFF7FEFF 		bl	strlen
 19904 0620 0346     		mov	r3, r0
 19905 0622 1A46     		mov	r2, r3
 19906 0624 7B69     		ldr	r3, [r7, #20]
 19907 0626 1344     		add	r3, r3, r2
 19908 0628 124A     		ldr	r2, .L790+40
 19909 062a 1D46     		mov	r5, r3
 19910 062c 1446     		mov	r4, r2
 19911 062e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19912 0630 2860     		str	r0, [r5]	@ unaligned
 19913 0632 6960     		str	r1, [r5, #4]	@ unaligned
 19914 0634 AA60     		str	r2, [r5, #8]	@ unaligned
 19915 0636 EB60     		str	r3, [r5, #12]	@ unaligned
 19916 0638 03CC     		ldmia	r4!, {r0, r1}
 19917 063a 2861     		str	r0, [r5, #16]	@ unaligned
 19918 063c 6961     		str	r1, [r5, #20]	@ unaligned
 19919 063e 2388     		ldrh	r3, [r4]	@ unaligned
 19920 0640 A278     		ldrb	r2, [r4, #2]
 19921 0642 2B83     		strh	r3, [r5, #24]	@ unaligned
 19922 0644 1346     		mov	r3, r2
 19923 0646 AB76     		strb	r3, [r5, #26]
2614:..\src/command_processing.c ****                 break;
 19924              		.loc 1 2614 0
 19925 0648 7FE0     		b	.L736
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 439


 19926              	.L791:
 19927 064a 00BF     		.align	2
 19928              	.L790:
 19929 064c 0000F040 		.word	1089470464
 19930 0650 7C140000 		.word	.LC192
 19931 0654 88140000 		.word	.LC193
 19932 0658 94140000 		.word	.LC194
 19933 065c 541F0000 		.word	.LC295
 19934 0660 BC140000 		.word	.LC196
 19935 0664 D8140000 		.word	.LC197
 19936 0668 F4140000 		.word	.LC198
 19937 066c 08150000 		.word	.LC199
 19938 0670 20150000 		.word	.LC200
 19939 0674 40150000 		.word	.LC201
 19940              	.L742:
2615:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2616:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 19941              		.loc 1 2616 0
 19942 0678 7869     		ldr	r0, [r7, #20]
 19943 067a FFF7FEFF 		bl	strlen
 19944 067e 0346     		mov	r3, r0
 19945 0680 1A46     		mov	r2, r3
 19946 0682 7B69     		ldr	r3, [r7, #20]
 19947 0684 1344     		add	r3, r3, r2
 19948 0686 BA4A     		ldr	r2, .L792
 19949 0688 1C46     		mov	r4, r3
 19950 068a 1546     		mov	r5, r2
 19951 068c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19952 068e 2060     		str	r0, [r4]	@ unaligned
 19953 0690 6160     		str	r1, [r4, #4]	@ unaligned
 19954 0692 A260     		str	r2, [r4, #8]	@ unaligned
 19955 0694 E360     		str	r3, [r4, #12]	@ unaligned
 19956 0696 2868     		ldr	r0, [r5]	@ unaligned
 19957 0698 2061     		str	r0, [r4, #16]	@ unaligned
 19958 069a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19959 069c AA79     		ldrb	r2, [r5, #6]
 19960 069e A382     		strh	r3, [r4, #20]	@ unaligned
 19961 06a0 1346     		mov	r3, r2
 19962 06a2 A375     		strb	r3, [r4, #22]
2617:..\src/command_processing.c ****                 break;
 19963              		.loc 1 2617 0
 19964 06a4 51E0     		b	.L736
 19965              	.L743:
2618:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2619:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 19966              		.loc 1 2619 0
 19967 06a6 7869     		ldr	r0, [r7, #20]
 19968 06a8 FFF7FEFF 		bl	strlen
 19969 06ac 0346     		mov	r3, r0
 19970 06ae 1A46     		mov	r2, r3
 19971 06b0 7B69     		ldr	r3, [r7, #20]
 19972 06b2 1344     		add	r3, r3, r2
 19973 06b4 AF4A     		ldr	r2, .L792+4
 19974 06b6 1D46     		mov	r5, r3
 19975 06b8 1446     		mov	r4, r2
 19976 06ba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19977 06bc 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 440


 19978 06be 6960     		str	r1, [r5, #4]	@ unaligned
 19979 06c0 AA60     		str	r2, [r5, #8]	@ unaligned
 19980 06c2 EB60     		str	r3, [r5, #12]	@ unaligned
 19981 06c4 03CC     		ldmia	r4!, {r0, r1}
 19982 06c6 2861     		str	r0, [r5, #16]	@ unaligned
 19983 06c8 6961     		str	r1, [r5, #20]	@ unaligned
 19984 06ca 2388     		ldrh	r3, [r4]	@ unaligned
 19985 06cc A278     		ldrb	r2, [r4, #2]
 19986 06ce 2B83     		strh	r3, [r5, #24]	@ unaligned
 19987 06d0 1346     		mov	r3, r2
 19988 06d2 AB76     		strb	r3, [r5, #26]
2620:..\src/command_processing.c ****                 break;
 19989              		.loc 1 2620 0
 19990 06d4 39E0     		b	.L736
 19991              	.L744:
2621:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2622:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 19992              		.loc 1 2622 0
 19993 06d6 7869     		ldr	r0, [r7, #20]
 19994 06d8 FFF7FEFF 		bl	strlen
 19995 06dc 0346     		mov	r3, r0
 19996 06de 1A46     		mov	r2, r3
 19997 06e0 7B69     		ldr	r3, [r7, #20]
 19998 06e2 1344     		add	r3, r3, r2
 19999 06e4 A44A     		ldr	r2, .L792+8
 20000 06e6 1C46     		mov	r4, r3
 20001 06e8 1546     		mov	r5, r2
 20002 06ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20003 06ec 2060     		str	r0, [r4]	@ unaligned
 20004 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 20005 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 20006 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 20007 06f4 2868     		ldr	r0, [r5]	@ unaligned
 20008 06f6 2061     		str	r0, [r4, #16]	@ unaligned
 20009 06f8 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 20010 06fa AA79     		ldrb	r2, [r5, #6]
 20011 06fc A382     		strh	r3, [r4, #20]	@ unaligned
 20012 06fe 1346     		mov	r3, r2
 20013 0700 A375     		strb	r3, [r4, #22]
2623:..\src/command_processing.c ****                 break;
 20014              		.loc 1 2623 0
 20015 0702 22E0     		b	.L736
 20016              	.L745:
2624:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2625:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 20017              		.loc 1 2625 0
 20018 0704 7869     		ldr	r0, [r7, #20]
 20019 0706 FFF7FEFF 		bl	strlen
 20020 070a 0346     		mov	r3, r0
 20021 070c 1A46     		mov	r2, r3
 20022 070e 7B69     		ldr	r3, [r7, #20]
 20023 0710 1344     		add	r3, r3, r2
 20024 0712 9A4A     		ldr	r2, .L792+12
 20025 0714 1546     		mov	r5, r2
 20026 0716 9E46     		mov	lr, r3
 20027 0718 05F1200C 		add	ip, r5, #32
 20028              	.L746:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 441


 20029 071c 7446     		mov	r4, lr
 20030 071e 2E46     		mov	r6, r5
 20031 0720 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 20032 0722 2060     		str	r0, [r4]	@ unaligned
 20033 0724 6160     		str	r1, [r4, #4]	@ unaligned
 20034 0726 A260     		str	r2, [r4, #8]	@ unaligned
 20035 0728 E360     		str	r3, [r4, #12]	@ unaligned
 20036 072a 1035     		adds	r5, r5, #16
 20037 072c 0EF1100E 		add	lr, lr, #16
 20038 0730 6545     		cmp	r5, ip
 20039 0732 F3D1     		bne	.L746
 20040 0734 7446     		mov	r4, lr
 20041 0736 2B46     		mov	r3, r5
 20042 0738 07CB     		ldmia	r3!, {r0, r1, r2}
 20043 073a 2060     		str	r0, [r4]	@ unaligned
 20044 073c 6160     		str	r1, [r4, #4]	@ unaligned
 20045 073e A260     		str	r2, [r4, #8]	@ unaligned
 20046 0740 1A88     		ldrh	r2, [r3]	@ unaligned
 20047 0742 9B78     		ldrb	r3, [r3, #2]
 20048 0744 A281     		strh	r2, [r4, #12]	@ unaligned
 20049 0746 A373     		strb	r3, [r4, #14]
2626:..\src/command_processing.c ****                 break;
 20050              		.loc 1 2626 0
 20051 0748 00BF     		nop
 20052              	.L736:
2627:..\src/command_processing.c ****         }
2628:..\src/command_processing.c **** 
2629:..\src/command_processing.c ****         switch(MOT->control_mode) {
 20053              		.loc 1 2629 0
 20054 074a D7F88430 		ldr	r3, [r7, #132]
 20055 074e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 20056 0752 032B     		cmp	r3, #3
 20057 0754 63D8     		bhi	.L786
 20058 0756 01A2     		adr	r2, .L749
 20059 0758 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 20060              		.p2align 2
 20061              	.L749:
 20062 075c 6D070000 		.word	.L748+1
 20063 0760 97070000 		.word	.L750+1
 20064 0764 BB070000 		.word	.L751+1
 20065 0768 E1070000 		.word	.L752+1
 20066              		.p2align 1
 20067              	.L748:
2630:..\src/command_processing.c ****             case CONTROL_ANGLE:
2631:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 20068              		.loc 1 2631 0
 20069 076c 7869     		ldr	r0, [r7, #20]
 20070 076e FFF7FEFF 		bl	strlen
 20071 0772 0346     		mov	r3, r0
 20072 0774 1A46     		mov	r2, r3
 20073 0776 7B69     		ldr	r3, [r7, #20]
 20074 0778 1344     		add	r3, r3, r2
 20075 077a 814A     		ldr	r2, .L792+16
 20076 077c 1D46     		mov	r5, r3
 20077 077e 1446     		mov	r4, r2
 20078 0780 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20079 0782 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 442


 20080 0784 6960     		str	r1, [r5, #4]	@ unaligned
 20081 0786 AA60     		str	r2, [r5, #8]	@ unaligned
 20082 0788 EB60     		str	r3, [r5, #12]	@ unaligned
 20083 078a 03CC     		ldmia	r4!, {r0, r1}
 20084 078c 2861     		str	r0, [r5, #16]	@ unaligned
 20085 078e 6961     		str	r1, [r5, #20]	@ unaligned
 20086 0790 2378     		ldrb	r3, [r4]
 20087 0792 2B76     		strb	r3, [r5, #24]
2632:..\src/command_processing.c ****                 break;
 20088              		.loc 1 2632 0
 20089 0794 44E0     		b	.L753
 20090              	.L750:
2633:..\src/command_processing.c ****             case CONTROL_PWM:
2634:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 20091              		.loc 1 2634 0
 20092 0796 7869     		ldr	r0, [r7, #20]
 20093 0798 FFF7FEFF 		bl	strlen
 20094 079c 0346     		mov	r3, r0
 20095 079e 1A46     		mov	r2, r3
 20096 07a0 7B69     		ldr	r3, [r7, #20]
 20097 07a2 1344     		add	r3, r3, r2
 20098 07a4 774A     		ldr	r2, .L792+20
 20099 07a6 1D46     		mov	r5, r3
 20100 07a8 1446     		mov	r4, r2
 20101 07aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20102 07ac 2860     		str	r0, [r5]	@ unaligned
 20103 07ae 6960     		str	r1, [r5, #4]	@ unaligned
 20104 07b0 AA60     		str	r2, [r5, #8]	@ unaligned
 20105 07b2 EB60     		str	r3, [r5, #12]	@ unaligned
 20106 07b4 2068     		ldr	r0, [r4]	@ unaligned
 20107 07b6 2861     		str	r0, [r5, #16]	@ unaligned
2635:..\src/command_processing.c ****                 break;
 20108              		.loc 1 2635 0
 20109 07b8 32E0     		b	.L753
 20110              	.L751:
2636:..\src/command_processing.c ****             case CONTROL_CURRENT:
2637:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 20111              		.loc 1 2637 0
 20112 07ba 7869     		ldr	r0, [r7, #20]
 20113 07bc FFF7FEFF 		bl	strlen
 20114 07c0 0346     		mov	r3, r0
 20115 07c2 1A46     		mov	r2, r3
 20116 07c4 7B69     		ldr	r3, [r7, #20]
 20117 07c6 1344     		add	r3, r3, r2
 20118 07c8 6F4A     		ldr	r2, .L792+24
 20119 07ca 1D46     		mov	r5, r3
 20120 07cc 1446     		mov	r4, r2
 20121 07ce 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20122 07d0 2860     		str	r0, [r5]	@ unaligned
 20123 07d2 6960     		str	r1, [r5, #4]	@ unaligned
 20124 07d4 AA60     		str	r2, [r5, #8]	@ unaligned
 20125 07d6 EB60     		str	r3, [r5, #12]	@ unaligned
 20126 07d8 03CC     		ldmia	r4!, {r0, r1}
 20127 07da 2861     		str	r0, [r5, #16]	@ unaligned
 20128 07dc 6961     		str	r1, [r5, #20]	@ unaligned
2638:..\src/command_processing.c ****                 break;
 20129              		.loc 1 2638 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 443


 20130 07de 1FE0     		b	.L753
 20131              	.L752:
2639:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2640:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 20132              		.loc 1 2640 0
 20133 07e0 7869     		ldr	r0, [r7, #20]
 20134 07e2 FFF7FEFF 		bl	strlen
 20135 07e6 0346     		mov	r3, r0
 20136 07e8 1A46     		mov	r2, r3
 20137 07ea 7B69     		ldr	r3, [r7, #20]
 20138 07ec 1344     		add	r3, r3, r2
 20139 07ee 674A     		ldr	r2, .L792+28
 20140 07f0 1446     		mov	r4, r2
 20141 07f2 9E46     		mov	lr, r3
 20142 07f4 04F1200C 		add	ip, r4, #32
 20143              	.L754:
 20144 07f8 7546     		mov	r5, lr
 20145 07fa 2646     		mov	r6, r4
 20146 07fc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 20147 07fe 2860     		str	r0, [r5]	@ unaligned
 20148 0800 6960     		str	r1, [r5, #4]	@ unaligned
 20149 0802 AA60     		str	r2, [r5, #8]	@ unaligned
 20150 0804 EB60     		str	r3, [r5, #12]	@ unaligned
 20151 0806 1034     		adds	r4, r4, #16
 20152 0808 0EF1100E 		add	lr, lr, #16
 20153 080c 6445     		cmp	r4, ip
 20154 080e F3D1     		bne	.L754
 20155 0810 7346     		mov	r3, lr
 20156 0812 2246     		mov	r2, r4
 20157 0814 1068     		ldr	r0, [r2]	@ unaligned
 20158 0816 1860     		str	r0, [r3]	@ unaligned
 20159 0818 1279     		ldrb	r2, [r2, #4]
 20160 081a 1A71     		strb	r2, [r3, #4]
2641:..\src/command_processing.c ****                 break;
 20161              		.loc 1 2641 0
 20162 081c 00E0     		b	.L753
 20163              	.L786:
2642:..\src/command_processing.c ****             default:
2643:..\src/command_processing.c ****                 break;
 20164              		.loc 1 2643 0
 20165 081e 00BF     		nop
 20166              	.L753:
2644:..\src/command_processing.c ****         }
2645:..\src/command_processing.c **** 
2646:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 20167              		.loc 1 2646 0
 20168 0820 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20169 0824 D7F88C10 		ldr	r1, [r7, #140]
 20170 0828 1346     		mov	r3, r2
 20171 082a 5B00     		lsls	r3, r3, #1
 20172 082c 1344     		add	r3, r3, r2
 20173 082e 1B01     		lsls	r3, r3, #4
 20174 0830 0B44     		add	r3, r3, r1
 20175 0832 03F5D873 		add	r3, r3, #432
 20176 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20177 0838 002B     		cmp	r3, #0
 20178 083a 1CD0     		beq	.L755
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 444


2647:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 20179              		.loc 1 2647 0
 20180 083c 7869     		ldr	r0, [r7, #20]
 20181 083e FFF7FEFF 		bl	strlen
 20182 0842 0346     		mov	r3, r0
 20183 0844 1A46     		mov	r2, r3
 20184 0846 7B69     		ldr	r3, [r7, #20]
 20185 0848 1344     		add	r3, r3, r2
 20186 084a 514A     		ldr	r2, .L792+32
 20187 084c 1446     		mov	r4, r2
 20188 084e 9E46     		mov	lr, r3
 20189 0850 04F1200C 		add	ip, r4, #32
 20190              	.L756:
 20191 0854 7546     		mov	r5, lr
 20192 0856 2646     		mov	r6, r4
 20193 0858 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 20194 085a 2860     		str	r0, [r5]	@ unaligned
 20195 085c 6960     		str	r1, [r5, #4]	@ unaligned
 20196 085e AA60     		str	r2, [r5, #8]	@ unaligned
 20197 0860 EB60     		str	r3, [r5, #12]	@ unaligned
 20198 0862 1034     		adds	r4, r4, #16
 20199 0864 0EF1100E 		add	lr, lr, #16
 20200 0868 6445     		cmp	r4, ip
 20201 086a F3D1     		bne	.L756
 20202 086c 7346     		mov	r3, lr
 20203 086e 2246     		mov	r2, r4
 20204 0870 1278     		ldrb	r2, [r2]
 20205 0872 1A70     		strb	r2, [r3]
 20206 0874 13E0     		b	.L757
 20207              	.L755:
2648:..\src/command_processing.c ****         else
2649:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 20208              		.loc 1 2649 0
 20209 0876 7869     		ldr	r0, [r7, #20]
 20210 0878 FFF7FEFF 		bl	strlen
 20211 087c 0346     		mov	r3, r0
 20212 087e 1A46     		mov	r2, r3
 20213 0880 7B69     		ldr	r3, [r7, #20]
 20214 0882 1344     		add	r3, r3, r2
 20215 0884 434A     		ldr	r2, .L792+36
 20216 0886 1C46     		mov	r4, r3
 20217 0888 1546     		mov	r5, r2
 20218 088a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20219 088c 2060     		str	r0, [r4]	@ unaligned
 20220 088e 6160     		str	r1, [r4, #4]	@ unaligned
 20221 0890 A260     		str	r2, [r4, #8]	@ unaligned
 20222 0892 E360     		str	r3, [r4, #12]	@ unaligned
 20223 0894 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20224 0896 2061     		str	r0, [r4, #16]	@ unaligned
 20225 0898 6161     		str	r1, [r4, #20]	@ unaligned
 20226 089a A261     		str	r2, [r4, #24]	@ unaligned
 20227 089c E361     		str	r3, [r4, #28]	@ unaligned
 20228              	.L757:
2650:..\src/command_processing.c **** 
2651:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 20229              		.loc 1 2651 0
 20230 089e 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 445


 20231 08a0 FFF7FEFF 		bl	strlen
 20232 08a4 0346     		mov	r3, r0
 20233 08a6 1A46     		mov	r2, r3
 20234 08a8 7B69     		ldr	r3, [r7, #20]
 20235 08aa 1344     		add	r3, r3, r2
 20236 08ac 3A4A     		ldr	r2, .L792+40
 20237 08ae 1C46     		mov	r4, r3
 20238 08b0 1346     		mov	r3, r2
 20239 08b2 07CB     		ldmia	r3!, {r0, r1, r2}
 20240 08b4 2060     		str	r0, [r4]	@ unaligned
 20241 08b6 6160     		str	r1, [r4, #4]	@ unaligned
 20242 08b8 A260     		str	r2, [r4, #8]	@ unaligned
 20243 08ba 1B88     		ldrh	r3, [r3]	@ unaligned
 20244 08bc A381     		strh	r3, [r4, #12]	@ unaligned
2652:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 20245              		.loc 1 2652 0
 20246 08be 0023     		movs	r3, #0
 20247 08c0 C7F89430 		str	r3, [r7, #148]
 20248 08c4 30E0     		b	.L758
 20249              	.L760:
2653:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 20250              		.loc 1 2653 0
 20251 08c6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20252 08ca D7F88C10 		ldr	r1, [r7, #140]
 20253 08ce 1346     		mov	r3, r2
 20254 08d0 5B00     		lsls	r3, r3, #1
 20255 08d2 1344     		add	r3, r3, r2
 20256 08d4 1B01     		lsls	r3, r3, #4
 20257 08d6 CA18     		adds	r2, r1, r3
 20258 08d8 D7F89430 		ldr	r3, [r7, #148]
 20259 08dc 1344     		add	r3, r3, r2
 20260 08de 03F29513 		addw	r3, r3, #405
 20261 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20262 08e4 1A46     		mov	r2, r3
 20263 08e6 07F11C03 		add	r3, r7, #28
 20264 08ea 2C49     		ldr	r1, .L792+44
 20265 08ec 1846     		mov	r0, r3
 20266 08ee FFF7FEFF 		bl	sprintf
2654:..\src/command_processing.c ****             strcat(info_string, str);
 20267              		.loc 1 2654 0
 20268 08f2 07F11C03 		add	r3, r7, #28
 20269 08f6 1946     		mov	r1, r3
 20270 08f8 7869     		ldr	r0, [r7, #20]
 20271 08fa FFF7FEFF 		bl	strcat
2655:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 20272              		.loc 1 2655 0
 20273 08fe D7F89430 		ldr	r3, [r7, #148]
 20274 0902 022B     		cmp	r3, #2
 20275 0904 0BD0     		beq	.L759
2656:..\src/command_processing.c ****                 strcat(info_string, ", ");
 20276              		.loc 1 2656 0
 20277 0906 7869     		ldr	r0, [r7, #20]
 20278 0908 FFF7FEFF 		bl	strlen
 20279 090c 0346     		mov	r3, r0
 20280 090e 1A46     		mov	r2, r3
 20281 0910 7B69     		ldr	r3, [r7, #20]
 20282 0912 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 446


 20283 0914 224A     		ldr	r2, .L792+48
 20284 0916 1188     		ldrh	r1, [r2]	@ unaligned
 20285 0918 9278     		ldrb	r2, [r2, #2]
 20286 091a 1980     		strh	r1, [r3]	@ unaligned
 20287 091c 9A70     		strb	r2, [r3, #2]
 20288              	.L759:
2652:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 20289              		.loc 1 2652 0 discriminator 2
 20290 091e D7F89430 		ldr	r3, [r7, #148]
 20291 0922 0133     		adds	r3, r3, #1
 20292 0924 C7F89430 		str	r3, [r7, #148]
 20293              	.L758:
2652:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 20294              		.loc 1 2652 0 is_stmt 0 discriminator 1
 20295 0928 D7F89430 		ldr	r3, [r7, #148]
 20296 092c 022B     		cmp	r3, #2
 20297 092e CADD     		ble	.L760
2657:..\src/command_processing.c ****             }                
2658:..\src/command_processing.c ****         }
2659:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20298              		.loc 1 2659 0 is_stmt 1
 20299 0930 7869     		ldr	r0, [r7, #20]
 20300 0932 FFF7FEFF 		bl	strlen
 20301 0936 0346     		mov	r3, r0
 20302 0938 1A46     		mov	r2, r3
 20303 093a 7B69     		ldr	r3, [r7, #20]
 20304 093c 1344     		add	r3, r3, r2
 20305 093e 194A     		ldr	r2, .L792+52
 20306 0940 1188     		ldrh	r1, [r2]	@ unaligned
 20307 0942 9278     		ldrb	r2, [r2, #2]
 20308 0944 1980     		strh	r1, [r3]	@ unaligned
 20309 0946 9A70     		strb	r2, [r3, #2]
2660:..\src/command_processing.c **** 
2661:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 20310              		.loc 1 2661 0
 20311 0948 7869     		ldr	r0, [r7, #20]
 20312 094a FFF7FEFF 		bl	strlen
 20313 094e 0346     		mov	r3, r0
 20314 0950 1A46     		mov	r2, r3
 20315 0952 7B69     		ldr	r3, [r7, #20]
 20316 0954 1344     		add	r3, r3, r2
 20317 0956 1449     		ldr	r1, .L792+56
 20318 0958 1A46     		mov	r2, r3
 20319 095a 0B46     		mov	r3, r1
 20320 095c 03CB     		ldmia	r3!, {r0, r1}
 20321 095e 1060     		str	r0, [r2]	@ unaligned
 20322 0960 5160     		str	r1, [r2, #4]	@ unaligned
 20323 0962 1B88     		ldrh	r3, [r3]	@ unaligned
 20324 0964 1381     		strh	r3, [r2, #8]	@ unaligned
2662:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 20325              		.loc 1 2662 0
 20326 0966 0023     		movs	r3, #0
 20327 0968 C7F89430 		str	r3, [r7, #148]
 20328 096c 5EE0     		b	.L761
 20329              	.L793:
 20330 096e 00BF     		.align	2
 20331              	.L792:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 447


 20332 0970 5C150000 		.word	.LC202
 20333 0974 74150000 		.word	.LC203
 20334 0978 90150000 		.word	.LC204
 20335 097c A8150000 		.word	.LC205
 20336 0980 D8150000 		.word	.LC206
 20337 0984 F4150000 		.word	.LC207
 20338 0988 08160000 		.word	.LC208
 20339 098c 20160000 		.word	.LC209
 20340 0990 48160000 		.word	.LC210
 20341 0994 6C160000 		.word	.LC211
 20342 0998 641F0000 		.word	.LC296
 20343 099c 9C130000 		.word	.LC183
 20344 09a0 A0130000 		.word	.LC184
 20345 09a4 58110000 		.word	.LC152
 20346 09a8 741F0000 		.word	.LC297
 20347              	.L763:
2663:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 20348              		.loc 1 2663 0
 20349 09ac 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20350 09b0 D7F88C10 		ldr	r1, [r7, #140]
 20351 09b4 1346     		mov	r3, r2
 20352 09b6 5B00     		lsls	r3, r3, #1
 20353 09b8 1344     		add	r3, r3, r2
 20354 09ba 9B00     		lsls	r3, r3, #2
 20355 09bc D7F89420 		ldr	r2, [r7, #148]
 20356 09c0 1344     		add	r3, r3, r2
 20357 09c2 6633     		adds	r3, r3, #102
 20358 09c4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 20359 09c8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20360 09cc D7F88C00 		ldr	r0, [r7, #140]
 20361 09d0 1346     		mov	r3, r2
 20362 09d2 5B00     		lsls	r3, r3, #1
 20363 09d4 1344     		add	r3, r3, r2
 20364 09d6 1B01     		lsls	r3, r3, #4
 20365 09d8 C218     		adds	r2, r0, r3
 20366 09da D7F89430 		ldr	r3, [r7, #148]
 20367 09de 1344     		add	r3, r3, r2
 20368 09e0 03F29513 		addw	r3, r3, #405
 20369 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20370 09e6 41FA03F2 		asr	r2, r1, r3
 20371 09ea 07F11C03 		add	r3, r7, #28
 20372 09ee CF49     		ldr	r1, .L794
 20373 09f0 1846     		mov	r0, r3
 20374 09f2 FFF7FEFF 		bl	sprintf
2664:..\src/command_processing.c ****             strcat(info_string, str);
 20375              		.loc 1 2664 0
 20376 09f6 07F11C03 		add	r3, r7, #28
 20377 09fa 1946     		mov	r1, r3
 20378 09fc 7869     		ldr	r0, [r7, #20]
 20379 09fe FFF7FEFF 		bl	strcat
2665:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 20380              		.loc 1 2665 0
 20381 0a02 D7F89430 		ldr	r3, [r7, #148]
 20382 0a06 022B     		cmp	r3, #2
 20383 0a08 0BD0     		beq	.L762
2666:..\src/command_processing.c ****                 strcat(info_string, ", ");
 20384              		.loc 1 2666 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 448


 20385 0a0a 7869     		ldr	r0, [r7, #20]
 20386 0a0c FFF7FEFF 		bl	strlen
 20387 0a10 0346     		mov	r3, r0
 20388 0a12 1A46     		mov	r2, r3
 20389 0a14 7B69     		ldr	r3, [r7, #20]
 20390 0a16 1344     		add	r3, r3, r2
 20391 0a18 C54A     		ldr	r2, .L794+4
 20392 0a1a 1188     		ldrh	r1, [r2]	@ unaligned
 20393 0a1c 9278     		ldrb	r2, [r2, #2]
 20394 0a1e 1980     		strh	r1, [r3]	@ unaligned
 20395 0a20 9A70     		strb	r2, [r3, #2]
 20396              	.L762:
2662:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 20397              		.loc 1 2662 0 discriminator 2
 20398 0a22 D7F89430 		ldr	r3, [r7, #148]
 20399 0a26 0133     		adds	r3, r3, #1
 20400 0a28 C7F89430 		str	r3, [r7, #148]
 20401              	.L761:
2662:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 20402              		.loc 1 2662 0 is_stmt 0 discriminator 1
 20403 0a2c D7F89430 		ldr	r3, [r7, #148]
 20404 0a30 022B     		cmp	r3, #2
 20405 0a32 BBDD     		ble	.L763
2667:..\src/command_processing.c ****             }
2668:..\src/command_processing.c ****         }
2669:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20406              		.loc 1 2669 0 is_stmt 1
 20407 0a34 7869     		ldr	r0, [r7, #20]
 20408 0a36 FFF7FEFF 		bl	strlen
 20409 0a3a 0346     		mov	r3, r0
 20410 0a3c 1A46     		mov	r2, r3
 20411 0a3e 7B69     		ldr	r3, [r7, #20]
 20412 0a40 1344     		add	r3, r3, r2
 20413 0a42 BC4A     		ldr	r2, .L794+8
 20414 0a44 1188     		ldrh	r1, [r2]	@ unaligned
 20415 0a46 9278     		ldrb	r2, [r2, #2]
 20416 0a48 1980     		strh	r1, [r3]	@ unaligned
 20417 0a4a 9A70     		strb	r2, [r3, #2]
2670:..\src/command_processing.c ****             
2671:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 20418              		.loc 1 2671 0
 20419 0a4c 7869     		ldr	r0, [r7, #20]
 20420 0a4e FFF7FEFF 		bl	strlen
 20421 0a52 0346     		mov	r3, r0
 20422 0a54 1A46     		mov	r2, r3
 20423 0a56 7B69     		ldr	r3, [r7, #20]
 20424 0a58 1344     		add	r3, r3, r2
 20425 0a5a B74A     		ldr	r2, .L794+12
 20426 0a5c 1C46     		mov	r4, r3
 20427 0a5e 1346     		mov	r3, r2
 20428 0a60 07CB     		ldmia	r3!, {r0, r1, r2}
 20429 0a62 2060     		str	r0, [r4]	@ unaligned
 20430 0a64 6160     		str	r1, [r4, #4]	@ unaligned
 20431 0a66 A260     		str	r2, [r4, #8]	@ unaligned
 20432 0a68 1B88     		ldrh	r3, [r3]	@ unaligned
 20433 0a6a A381     		strh	r3, [r4, #12]	@ unaligned
2672:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 449


 20434              		.loc 1 2672 0
 20435 0a6c 0023     		movs	r3, #0
 20436 0a6e C7F89430 		str	r3, [r7, #148]
 20437 0a72 35E0     		b	.L764
 20438              	.L766:
2673:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 20439              		.loc 1 2673 0
 20440 0a74 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20441 0a78 D7F88C10 		ldr	r1, [r7, #140]
 20442 0a7c 1346     		mov	r3, r2
 20443 0a7e 5B00     		lsls	r3, r3, #1
 20444 0a80 1344     		add	r3, r3, r2
 20445 0a82 9B00     		lsls	r3, r3, #2
 20446 0a84 D7F89420 		ldr	r2, [r7, #148]
 20447 0a88 1344     		add	r3, r3, r2
 20448 0a8a 6833     		adds	r3, r3, #104
 20449 0a8c 9B00     		lsls	r3, r3, #2
 20450 0a8e 0B44     		add	r3, r3, r1
 20451 0a90 5B68     		ldr	r3, [r3, #4]	@ float
 20452 0a92 1846     		mov	r0, r3
 20453 0a94 FFF7FEFF 		bl	__aeabi_f2d
 20454 0a98 0346     		mov	r3, r0
 20455 0a9a 0C46     		mov	r4, r1
 20456 0a9c 07F11C00 		add	r0, r7, #28
 20457 0aa0 1A46     		mov	r2, r3
 20458 0aa2 2346     		mov	r3, r4
 20459 0aa4 A549     		ldr	r1, .L794+16
 20460 0aa6 FFF7FEFF 		bl	sprintf
2674:..\src/command_processing.c ****             strcat(info_string, str);
 20461              		.loc 1 2674 0
 20462 0aaa 07F11C03 		add	r3, r7, #28
 20463 0aae 1946     		mov	r1, r3
 20464 0ab0 7869     		ldr	r0, [r7, #20]
 20465 0ab2 FFF7FEFF 		bl	strcat
2675:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 20466              		.loc 1 2675 0
 20467 0ab6 D7F89430 		ldr	r3, [r7, #148]
 20468 0aba 022B     		cmp	r3, #2
 20469 0abc 0BD0     		beq	.L765
2676:..\src/command_processing.c ****                 strcat(info_string, ", ");
 20470              		.loc 1 2676 0
 20471 0abe 7869     		ldr	r0, [r7, #20]
 20472 0ac0 FFF7FEFF 		bl	strlen
 20473 0ac4 0346     		mov	r3, r0
 20474 0ac6 1A46     		mov	r2, r3
 20475 0ac8 7B69     		ldr	r3, [r7, #20]
 20476 0aca 1344     		add	r3, r3, r2
 20477 0acc 984A     		ldr	r2, .L794+4
 20478 0ace 1188     		ldrh	r1, [r2]	@ unaligned
 20479 0ad0 9278     		ldrb	r2, [r2, #2]
 20480 0ad2 1980     		strh	r1, [r3]	@ unaligned
 20481 0ad4 9A70     		strb	r2, [r3, #2]
 20482              	.L765:
2672:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 20483              		.loc 1 2672 0 discriminator 2
 20484 0ad6 D7F89430 		ldr	r3, [r7, #148]
 20485 0ada 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 450


 20486 0adc C7F89430 		str	r3, [r7, #148]
 20487              	.L764:
2672:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 20488              		.loc 1 2672 0 is_stmt 0 discriminator 1
 20489 0ae0 D7F89430 		ldr	r3, [r7, #148]
 20490 0ae4 022B     		cmp	r3, #2
 20491 0ae6 C5DD     		ble	.L766
2677:..\src/command_processing.c ****             }
2678:..\src/command_processing.c ****         }
2679:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 20492              		.loc 1 2679 0 is_stmt 1
 20493 0ae8 7869     		ldr	r0, [r7, #20]
 20494 0aea FFF7FEFF 		bl	strlen
 20495 0aee 0346     		mov	r3, r0
 20496 0af0 1A46     		mov	r2, r3
 20497 0af2 7B69     		ldr	r3, [r7, #20]
 20498 0af4 1344     		add	r3, r3, r2
 20499 0af6 8F4A     		ldr	r2, .L794+8
 20500 0af8 1188     		ldrh	r1, [r2]	@ unaligned
 20501 0afa 9278     		ldrb	r2, [r2, #2]
 20502 0afc 1980     		strh	r1, [r3]	@ unaligned
 20503 0afe 9A70     		strb	r2, [r3, #2]
2680:..\src/command_processing.c **** 
2681:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 20504              		.loc 1 2681 0
 20505 0b00 D7F88430 		ldr	r3, [r7, #132]
 20506 0b04 5B6C     		ldr	r3, [r3, #68]	@ float
 20507 0b06 1846     		mov	r0, r3
 20508 0b08 FFF7FEFF 		bl	__aeabi_f2d
 20509 0b0c C7E90201 		strd	r0, [r7, #8]
 20510 0b10 D7F88430 		ldr	r3, [r7, #132]
 20511 0b14 9B6C     		ldr	r3, [r3, #72]	@ float
 20512 0b16 1846     		mov	r0, r3
 20513 0b18 FFF7FEFF 		bl	__aeabi_f2d
 20514 0b1c 0446     		mov	r4, r0
 20515 0b1e 0D46     		mov	r5, r1
 20516 0b20 D7F88430 		ldr	r3, [r7, #132]
 20517 0b24 DB6C     		ldr	r3, [r3, #76]	@ float
 20518 0b26 1846     		mov	r0, r3
 20519 0b28 FFF7FEFF 		bl	__aeabi_f2d
 20520 0b2c 8046     		mov	r8, r0
 20521 0b2e 8946     		mov	r9, r1
 20522 0b30 D7F88430 		ldr	r3, [r7, #132]
 20523 0b34 1B6D     		ldr	r3, [r3, #80]	@ float
 20524 0b36 1846     		mov	r0, r3
 20525 0b38 FFF7FEFF 		bl	__aeabi_f2d
 20526 0b3c 8246     		mov	r10, r0
 20527 0b3e 8B46     		mov	fp, r1
 20528 0b40 D7F88430 		ldr	r3, [r7, #132]
 20529 0b44 5B6D     		ldr	r3, [r3, #84]	@ float
 20530 0b46 1846     		mov	r0, r3
 20531 0b48 FFF7FEFF 		bl	__aeabi_f2d
 20532 0b4c C7E90001 		strd	r0, [r7]
 20533 0b50 D7F88430 		ldr	r3, [r7, #132]
 20534 0b54 9B6D     		ldr	r3, [r3, #88]	@ float
 20535 0b56 1846     		mov	r0, r3
 20536 0b58 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 451


 20537 0b5c 0246     		mov	r2, r0
 20538 0b5e 0B46     		mov	r3, r1
 20539 0b60 07F11C00 		add	r0, r7, #28
 20540 0b64 CDE90823 		strd	r2, [sp, #32]
 20541 0b68 D7E90012 		ldrd	r1, [r7]
 20542 0b6c CDE90612 		strd	r1, [sp, #24]
 20543 0b70 CDE904AB 		strd	r10, [sp, #16]
 20544 0b74 CDE90289 		strd	r8, [sp, #8]
 20545 0b78 CDE90045 		strd	r4, [sp]
 20546 0b7c D7E90223 		ldrd	r2, [r7, #8]
 20547 0b80 6F49     		ldr	r1, .L794+20
 20548 0b82 FFF7FEFF 		bl	sprintf
2682:..\src/command_processing.c **** 		strcat(info_string, str);
 20549              		.loc 1 2682 0
 20550 0b86 07F11C03 		add	r3, r7, #28
 20551 0b8a 1946     		mov	r1, r3
 20552 0b8c 7869     		ldr	r0, [r7, #20]
 20553 0b8e FFF7FEFF 		bl	strcat
2683:..\src/command_processing.c **** 
2684:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 20554              		.loc 1 2684 0
 20555 0b92 D7F88430 		ldr	r3, [r7, #132]
 20556 0b96 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 20557 0b9a 1A46     		mov	r2, r3
 20558 0b9c 07F11C03 		add	r3, r7, #28
 20559 0ba0 6849     		ldr	r1, .L794+24
 20560 0ba2 1846     		mov	r0, r3
 20561 0ba4 FFF7FEFF 		bl	sprintf
2685:..\src/command_processing.c **** 		strcat(info_string, str);
 20562              		.loc 1 2685 0
 20563 0ba8 07F11C03 		add	r3, r7, #28
 20564 0bac 1946     		mov	r1, r3
 20565 0bae 7869     		ldr	r0, [r7, #20]
 20566 0bb0 FFF7FEFF 		bl	strcat
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 20567              		.loc 1 2687 0
 20568 0bb4 D7F88430 		ldr	r3, [r7, #132]
 20569 0bb8 596B     		ldr	r1, [r3, #52]
 20570 0bba 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20571 0bbe D7F88C00 		ldr	r0, [r7, #140]
 20572 0bc2 1346     		mov	r3, r2
 20573 0bc4 5B00     		lsls	r3, r3, #1
 20574 0bc6 1344     		add	r3, r3, r2
 20575 0bc8 1B01     		lsls	r3, r3, #4
 20576 0bca 0344     		add	r3, r3, r0
 20577 0bcc 03F29513 		addw	r3, r3, #405
 20578 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20579 0bd2 41FA03F4 		asr	r4, r1, r3
 20580 0bd6 D7F88430 		ldr	r3, [r7, #132]
 20581 0bda 996B     		ldr	r1, [r3, #56]
 20582 0bdc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 20583 0be0 D7F88C00 		ldr	r0, [r7, #140]
 20584 0be4 1346     		mov	r3, r2
 20585 0be6 5B00     		lsls	r3, r3, #1
 20586 0be8 1344     		add	r3, r3, r2
 20587 0bea 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 452


 20588 0bec 0344     		add	r3, r3, r0
 20589 0bee 03F29513 		addw	r3, r3, #405
 20590 0bf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20591 0bf4 41FA03F3 		asr	r3, r1, r3
 20592 0bf8 07F11C00 		add	r0, r7, #28
 20593 0bfc 2246     		mov	r2, r4
 20594 0bfe 5249     		ldr	r1, .L794+28
 20595 0c00 FFF7FEFF 		bl	sprintf
2688:..\src/command_processing.c **** 		strcat(info_string, str);
 20596              		.loc 1 2688 0
 20597 0c04 07F11C03 		add	r3, r7, #28
 20598 0c08 1946     		mov	r1, r3
 20599 0c0a 7869     		ldr	r0, [r7, #20]
 20600 0c0c FFF7FEFF 		bl	strcat
2689:..\src/command_processing.c **** 
2690:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 20601              		.loc 1 2690 0
 20602 0c10 D7F88430 		ldr	r3, [r7, #132]
 20603 0c14 B3F95C30 		ldrsh	r3, [r3, #92]
 20604 0c18 1A46     		mov	r2, r3
 20605 0c1a 07F11C03 		add	r3, r7, #28
 20606 0c1e 4B49     		ldr	r1, .L794+32
 20607 0c20 1846     		mov	r0, r3
 20608 0c22 FFF7FEFF 		bl	sprintf
2691:..\src/command_processing.c **** 		strcat(info_string, str);
 20609              		.loc 1 2691 0
 20610 0c26 07F11C03 		add	r3, r7, #28
 20611 0c2a 1946     		mov	r1, r3
 20612 0c2c 7869     		ldr	r0, [r7, #20]
 20613 0c2e FFF7FEFF 		bl	strcat
2692:..\src/command_processing.c **** 
2693:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 20614              		.loc 1 2693 0
 20615 0c32 D7F88430 		ldr	r3, [r7, #132]
 20616 0c36 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 20617 0c3a 022B     		cmp	r3, #2
 20618 0c3c 18D0     		beq	.L767
2694:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20619              		.loc 1 2694 0 discriminator 1
 20620 0c3e D7F88430 		ldr	r3, [r7, #132]
 20621 0c42 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2693:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20622              		.loc 1 2693 0 discriminator 1
 20623 0c46 032B     		cmp	r3, #3
 20624 0c48 12D0     		beq	.L767
2695:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 20625              		.loc 1 2695 0
 20626 0c4a D7F88430 		ldr	r3, [r7, #132]
 20627 0c4e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2694:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 20628              		.loc 1 2694 0
 20629 0c52 042B     		cmp	r3, #4
 20630 0c54 0CD0     		beq	.L767
2696:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 20631              		.loc 1 2696 0
 20632 0c56 D7F88430 		ldr	r3, [r7, #132]
 20633 0c5a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 453


2695:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 20634              		.loc 1 2695 0
 20635 0c5e 052B     		cmp	r3, #5
 20636 0c60 06D0     		beq	.L767
2697:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 20637              		.loc 1 2697 0
 20638 0c62 D7F88430 		ldr	r3, [r7, #132]
 20639 0c66 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2696:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 20640              		.loc 1 2696 0
 20641 0c6a 072B     		cmp	r3, #7
 20642 0c6c 40F0AA80 		bne	.L768
 20643              	.L767:
2698:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 20644              		.loc 1 2698 0
 20645 0c70 D7F88C30 		ldr	r3, [r7, #140]
 20646 0c74 B3F8F031 		ldrh	r3, [r3, #496]
 20647 0c78 1A46     		mov	r2, r3
 20648 0c7a D7F88C30 		ldr	r3, [r7, #140]
 20649 0c7e B3F8F231 		ldrh	r3, [r3, #498]
 20650 0c82 07F11C00 		add	r0, r7, #28
 20651 0c86 3249     		ldr	r1, .L794+36
 20652 0c88 FFF7FEFF 		bl	sprintf
2699:..\src/command_processing.c **** 			strcat(info_string, str);
 20653              		.loc 1 2699 0
 20654 0c8c 07F11C03 		add	r3, r7, #28
 20655 0c90 1946     		mov	r1, r3
 20656 0c92 7869     		ldr	r0, [r7, #20]
 20657 0c94 FFF7FEFF 		bl	strcat
2700:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20658              		.loc 1 2700 0
 20659 0c98 7869     		ldr	r0, [r7, #20]
 20660 0c9a FFF7FEFF 		bl	strlen
 20661 0c9e 0346     		mov	r3, r0
 20662 0ca0 1A46     		mov	r2, r3
 20663 0ca2 7B69     		ldr	r3, [r7, #20]
 20664 0ca4 1344     		add	r3, r3, r2
 20665 0ca6 234A     		ldr	r2, .L794+8
 20666 0ca8 1188     		ldrh	r1, [r2]	@ unaligned
 20667 0caa 9278     		ldrb	r2, [r2, #2]
 20668 0cac 1980     		strh	r1, [r3]	@ unaligned
 20669 0cae 9A70     		strb	r2, [r3, #2]
2701:..\src/command_processing.c **** 
2702:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 20670              		.loc 1 2702 0
 20671 0cb0 D7F88C30 		ldr	r3, [r7, #140]
 20672 0cb4 D3F8F421 		ldr	r2, [r3, #500]
 20673 0cb8 D7F88C30 		ldr	r3, [r7, #140]
 20674 0cbc D3F8F831 		ldr	r3, [r3, #504]
 20675 0cc0 07F11C00 		add	r0, r7, #28
 20676 0cc4 2349     		ldr	r1, .L794+40
 20677 0cc6 FFF7FEFF 		bl	sprintf
2703:..\src/command_processing.c **** 			strcat(info_string, str);
 20678              		.loc 1 2703 0
 20679 0cca 07F11C03 		add	r3, r7, #28
 20680 0cce 1946     		mov	r1, r3
 20681 0cd0 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 454


 20682 0cd2 FFF7FEFF 		bl	strcat
2704:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20683              		.loc 1 2704 0
 20684 0cd6 7869     		ldr	r0, [r7, #20]
 20685 0cd8 FFF7FEFF 		bl	strlen
 20686 0cdc 0346     		mov	r3, r0
 20687 0cde 1A46     		mov	r2, r3
 20688 0ce0 7B69     		ldr	r3, [r7, #20]
 20689 0ce2 1344     		add	r3, r3, r2
 20690 0ce4 134A     		ldr	r2, .L794+8
 20691 0ce6 1188     		ldrh	r1, [r2]	@ unaligned
 20692 0ce8 9278     		ldrb	r2, [r2, #2]
 20693 0cea 1980     		strh	r1, [r3]	@ unaligned
 20694 0cec 9A70     		strb	r2, [r3, #2]
2705:..\src/command_processing.c **** 
2706:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 20695              		.loc 1 2706 0
 20696 0cee D7F88C30 		ldr	r3, [r7, #140]
 20697 0cf2 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 20698 0cf6 002B     		cmp	r3, #0
 20699 0cf8 30D0     		beq	.L769
2707:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 20700              		.loc 1 2707 0
 20701 0cfa 7869     		ldr	r0, [r7, #20]
 20702 0cfc FFF7FEFF 		bl	strlen
 20703 0d00 0346     		mov	r3, r0
 20704 0d02 1A46     		mov	r2, r3
 20705 0d04 7B69     		ldr	r3, [r7, #20]
 20706 0d06 1344     		add	r3, r3, r2
 20707 0d08 134A     		ldr	r2, .L794+44
 20708 0d0a 1D46     		mov	r5, r3
 20709 0d0c 1446     		mov	r4, r2
 20710 0d0e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20711 0d10 2860     		str	r0, [r5]	@ unaligned
 20712 0d12 6960     		str	r1, [r5, #4]	@ unaligned
 20713 0d14 AA60     		str	r2, [r5, #8]	@ unaligned
 20714 0d16 EB60     		str	r3, [r5, #12]	@ unaligned
 20715 0d18 03CC     		ldmia	r4!, {r0, r1}
 20716 0d1a 2861     		str	r0, [r5, #16]	@ unaligned
 20717 0d1c 6961     		str	r1, [r5, #20]	@ unaligned
 20718 0d1e 2388     		ldrh	r3, [r4]	@ unaligned
 20719 0d20 A278     		ldrb	r2, [r4, #2]
 20720 0d22 2B83     		strh	r3, [r5, #24]	@ unaligned
 20721 0d24 1346     		mov	r3, r2
 20722 0d26 AB76     		strb	r3, [r5, #26]
 20723 0d28 2CE0     		b	.L770
 20724              	.L795:
 20725 0d2a 00BF     		.align	2
 20726              	.L794:
 20727 0d2c 48170000 		.word	.LC219
 20728 0d30 A0130000 		.word	.LC184
 20729 0d34 58110000 		.word	.LC152
 20730 0d38 801F0000 		.word	.LC298
 20731 0d3c 68170000 		.word	.LC221
 20732 0d40 901F0000 		.word	.LC299
 20733 0d44 CC1F0000 		.word	.LC300
 20734 0d48 E81F0000 		.word	.LC301
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 455


 20735 0d4c 08180000 		.word	.LC227
 20736 0d50 1C190000 		.word	.LC236
 20737 0d54 40190000 		.word	.LC237
 20738 0d58 90190000 		.word	.LC240
 20739              	.L769:
2708:..\src/command_processing.c **** 			else
2709:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 20740              		.loc 1 2709 0
 20741 0d5c 7869     		ldr	r0, [r7, #20]
 20742 0d5e FFF7FEFF 		bl	strlen
 20743 0d62 0346     		mov	r3, r0
 20744 0d64 1A46     		mov	r2, r3
 20745 0d66 7B69     		ldr	r3, [r7, #20]
 20746 0d68 1344     		add	r3, r3, r2
 20747 0d6a D04A     		ldr	r2, .L796
 20748 0d6c 1D46     		mov	r5, r3
 20749 0d6e 1446     		mov	r4, r2
 20750 0d70 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20751 0d72 2860     		str	r0, [r5]	@ unaligned
 20752 0d74 6960     		str	r1, [r5, #4]	@ unaligned
 20753 0d76 AA60     		str	r2, [r5, #8]	@ unaligned
 20754 0d78 EB60     		str	r3, [r5, #12]	@ unaligned
 20755 0d7a 03CC     		ldmia	r4!, {r0, r1}
 20756 0d7c 2861     		str	r0, [r5, #16]	@ unaligned
 20757 0d7e 6961     		str	r1, [r5, #20]	@ unaligned
 20758 0d80 2388     		ldrh	r3, [r4]	@ unaligned
 20759 0d82 2B83     		strh	r3, [r5, #24]	@ unaligned
 20760              	.L770:
2710:..\src/command_processing.c **** 
2711:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 20761              		.loc 1 2711 0
 20762 0d84 D7F88C30 		ldr	r3, [r7, #140]
 20763 0d88 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 20764 0d8c 1A46     		mov	r2, r3
 20765 0d8e D7F88C30 		ldr	r3, [r7, #140]
 20766 0d92 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 20767 0d96 07F11C00 		add	r0, r7, #28
 20768 0d9a C549     		ldr	r1, .L796+4
 20769 0d9c FFF7FEFF 		bl	sprintf
2712:..\src/command_processing.c **** 			strcat(info_string, str);
 20770              		.loc 1 2712 0
 20771 0da0 07F11C03 		add	r3, r7, #28
 20772 0da4 1946     		mov	r1, r3
 20773 0da6 7869     		ldr	r0, [r7, #20]
 20774 0da8 FFF7FEFF 		bl	strcat
2713:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20775              		.loc 1 2713 0
 20776 0dac 7869     		ldr	r0, [r7, #20]
 20777 0dae FFF7FEFF 		bl	strlen
 20778 0db2 0346     		mov	r3, r0
 20779 0db4 1A46     		mov	r2, r3
 20780 0db6 7B69     		ldr	r3, [r7, #20]
 20781 0db8 1344     		add	r3, r3, r2
 20782 0dba BE4A     		ldr	r2, .L796+8
 20783 0dbc 1188     		ldrh	r1, [r2]	@ unaligned
 20784 0dbe 9278     		ldrb	r2, [r2, #2]
 20785 0dc0 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 456


 20786 0dc2 9A70     		strb	r2, [r3, #2]
 20787              	.L768:
 20788              	.LBE28:
2543:..\src/command_processing.c ****             
 20789              		.loc 1 2543 0 discriminator 2
 20790 0dc4 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 20791 0dc8 0133     		adds	r3, r3, #1
 20792 0dca 87F89330 		strb	r3, [r7, #147]
 20793              	.L727:
2543:..\src/command_processing.c ****             
 20794              		.loc 1 2543 0 is_stmt 0 discriminator 1
 20795 0dce D7F88C30 		ldr	r3, [r7, #140]
 20796 0dd2 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20797 0dd6 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 20798 0dda 9A42     		cmp	r2, r3
 20799 0ddc 7FF699A9 		bls	.L771
 20800              	.LBE27:
2714:..\src/command_processing.c **** 		}
2715:..\src/command_processing.c **** 	}
2716:..\src/command_processing.c **** 	 
2717:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 20801              		.loc 1 2717 0 is_stmt 1
 20802 0de0 D7F88C30 		ldr	r3, [r7, #140]
 20803 0de4 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 20804 0de8 002B     		cmp	r3, #0
 20805 0dea 63D0     		beq	.L772
2718:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 20806              		.loc 1 2718 0
 20807 0dec D7F88C30 		ldr	r3, [r7, #140]
 20808 0df0 D3F8A422 		ldr	r2, [r3, #676]
 20809 0df4 07F11C03 		add	r3, r7, #28
 20810 0df8 AF49     		ldr	r1, .L796+12
 20811 0dfa 1846     		mov	r0, r3
 20812 0dfc FFF7FEFF 		bl	sprintf
2719:..\src/command_processing.c ****         strcat(info_string, str);
 20813              		.loc 1 2719 0
 20814 0e00 07F11C03 		add	r3, r7, #28
 20815 0e04 1946     		mov	r1, r3
 20816 0e06 7869     		ldr	r0, [r7, #20]
 20817 0e08 FFF7FEFF 		bl	strcat
2720:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20818              		.loc 1 2720 0
 20819 0e0c 7869     		ldr	r0, [r7, #20]
 20820 0e0e FFF7FEFF 		bl	strlen
 20821 0e12 0346     		mov	r3, r0
 20822 0e14 1A46     		mov	r2, r3
 20823 0e16 7B69     		ldr	r3, [r7, #20]
 20824 0e18 1344     		add	r3, r3, r2
 20825 0e1a A64A     		ldr	r2, .L796+8
 20826 0e1c 1188     		ldrh	r1, [r2]	@ unaligned
 20827 0e1e 9278     		ldrb	r2, [r2, #2]
 20828 0e20 1980     		strh	r1, [r3]	@ unaligned
 20829 0e22 9A70     		strb	r2, [r3, #2]
2721:..\src/command_processing.c ****         
2722:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 20830              		.loc 1 2722 0
 20831 0e24 D7F88C30 		ldr	r3, [r7, #140]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 457


 20832 0e28 D3F8A822 		ldr	r2, [r3, #680]
 20833 0e2c 07F11C03 		add	r3, r7, #28
 20834 0e30 A249     		ldr	r1, .L796+16
 20835 0e32 1846     		mov	r0, r3
 20836 0e34 FFF7FEFF 		bl	sprintf
2723:..\src/command_processing.c ****         strcat(info_string, str);
 20837              		.loc 1 2723 0
 20838 0e38 07F11C03 		add	r3, r7, #28
 20839 0e3c 1946     		mov	r1, r3
 20840 0e3e 7869     		ldr	r0, [r7, #20]
 20841 0e40 FFF7FEFF 		bl	strcat
2724:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20842              		.loc 1 2724 0
 20843 0e44 7869     		ldr	r0, [r7, #20]
 20844 0e46 FFF7FEFF 		bl	strlen
 20845 0e4a 0346     		mov	r3, r0
 20846 0e4c 1A46     		mov	r2, r3
 20847 0e4e 7B69     		ldr	r3, [r7, #20]
 20848 0e50 1344     		add	r3, r3, r2
 20849 0e52 984A     		ldr	r2, .L796+8
 20850 0e54 1188     		ldrh	r1, [r2]	@ unaligned
 20851 0e56 9278     		ldrb	r2, [r2, #2]
 20852 0e58 1980     		strh	r1, [r3]	@ unaligned
 20853 0e5a 9A70     		strb	r2, [r3, #2]
2725:..\src/command_processing.c ****         
2726:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 20854              		.loc 1 2726 0
 20855 0e5c D7F88C30 		ldr	r3, [r7, #140]
 20856 0e60 D3F8A022 		ldr	r2, [r3, #672]
 20857 0e64 D7F88C30 		ldr	r3, [r7, #140]
 20858 0e68 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20859 0e6c 1846     		mov	r0, r3
 20860 0e6e D7F88C10 		ldr	r1, [r7, #140]
 20861 0e72 0346     		mov	r3, r0
 20862 0e74 5B00     		lsls	r3, r3, #1
 20863 0e76 0344     		add	r3, r3, r0
 20864 0e78 1B01     		lsls	r3, r3, #4
 20865 0e7a 0B44     		add	r3, r3, r1
 20866 0e7c 03F29513 		addw	r3, r3, #405
 20867 0e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20868 0e82 1A41     		asrs	r2, r2, r3
 20869 0e84 07F11C03 		add	r3, r7, #28
 20870 0e88 8D49     		ldr	r1, .L796+20
 20871 0e8a 1846     		mov	r0, r3
 20872 0e8c FFF7FEFF 		bl	sprintf
2727:..\src/command_processing.c ****         strcat(info_string, str);
 20873              		.loc 1 2727 0
 20874 0e90 07F11C03 		add	r3, r7, #28
 20875 0e94 1946     		mov	r1, r3
 20876 0e96 7869     		ldr	r0, [r7, #20]
 20877 0e98 FFF7FEFF 		bl	strcat
2728:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 20878              		.loc 1 2728 0
 20879 0e9c 7869     		ldr	r0, [r7, #20]
 20880 0e9e FFF7FEFF 		bl	strlen
 20881 0ea2 0346     		mov	r3, r0
 20882 0ea4 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 458


 20883 0ea6 7B69     		ldr	r3, [r7, #20]
 20884 0ea8 1344     		add	r3, r3, r2
 20885 0eaa 824A     		ldr	r2, .L796+8
 20886 0eac 1188     		ldrh	r1, [r2]	@ unaligned
 20887 0eae 9278     		ldrb	r2, [r2, #2]
 20888 0eb0 1980     		strh	r1, [r3]	@ unaligned
 20889 0eb2 9A70     		strb	r2, [r3, #2]
 20890              	.L772:
2729:..\src/command_processing.c ****     }
2730:..\src/command_processing.c **** 	
2731:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 20891              		.loc 1 2731 0
 20892 0eb4 D7F88C30 		ldr	r3, [r7, #140]
 20893 0eb8 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 20894 0ebc 002B     		cmp	r3, #0
 20895 0ebe 00F0CB81 		beq	.L787
2732:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 20896              		.loc 1 2732 0
 20897 0ec2 804B     		ldr	r3, .L796+24
 20898 0ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20899 0ec6 1A46     		mov	r2, r3
 20900 0ec8 07F11C03 		add	r3, r7, #28
 20901 0ecc 7E49     		ldr	r1, .L796+28
 20902 0ece 1846     		mov	r0, r3
 20903 0ed0 FFF7FEFF 		bl	sprintf
2733:..\src/command_processing.c **** 		strcat(info_string, str);
 20904              		.loc 1 2733 0
 20905 0ed4 07F11C03 		add	r3, r7, #28
 20906 0ed8 1946     		mov	r1, r3
 20907 0eda 7869     		ldr	r0, [r7, #20]
 20908 0edc FFF7FEFF 		bl	strcat
2734:..\src/command_processing.c **** 		
2735:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20909              		.loc 1 2735 0
 20910 0ee0 7869     		ldr	r0, [r7, #20]
 20911 0ee2 FFF7FEFF 		bl	strlen
 20912 0ee6 0346     		mov	r3, r0
 20913 0ee8 1A46     		mov	r2, r3
 20914 0eea 7B69     		ldr	r3, [r7, #20]
 20915 0eec 1344     		add	r3, r3, r2
 20916 0eee 714A     		ldr	r2, .L796+8
 20917 0ef0 1188     		ldrh	r1, [r2]	@ unaligned
 20918 0ef2 9278     		ldrb	r2, [r2, #2]
 20919 0ef4 1980     		strh	r1, [r3]	@ unaligned
 20920 0ef6 9A70     		strb	r2, [r3, #2]
2736:..\src/command_processing.c **** 		
2737:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 20921              		.loc 1 2737 0
 20922 0ef8 7869     		ldr	r0, [r7, #20]
 20923 0efa FFF7FEFF 		bl	strlen
 20924 0efe 0346     		mov	r3, r0
 20925 0f00 1A46     		mov	r2, r3
 20926 0f02 7B69     		ldr	r3, [r7, #20]
 20927 0f04 1344     		add	r3, r3, r2
 20928 0f06 714A     		ldr	r2, .L796+32
 20929 0f08 1D46     		mov	r5, r3
 20930 0f0a 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 459


 20931 0f0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20932 0f0e 2860     		str	r0, [r5]	@ unaligned
 20933 0f10 6960     		str	r1, [r5, #4]	@ unaligned
 20934 0f12 AA60     		str	r2, [r5, #8]	@ unaligned
 20935 0f14 EB60     		str	r3, [r5, #12]	@ unaligned
 20936 0f16 2068     		ldr	r0, [r4]	@ unaligned
 20937 0f18 2861     		str	r0, [r5, #16]	@ unaligned
 20938 0f1a 2379     		ldrb	r3, [r4, #4]
 20939 0f1c 2B75     		strb	r3, [r5, #20]
2738:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 20940              		.loc 1 2738 0
 20941 0f1e 0023     		movs	r3, #0
 20942 0f20 C7F89430 		str	r3, [r7, #148]
 20943 0f24 84E1     		b	.L774
 20944              	.L785:
2739:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20945              		.loc 1 2739 0
 20946 0f26 6A4A     		ldr	r2, .L796+36
 20947 0f28 D7F89430 		ldr	r3, [r7, #148]
 20948 0f2c 1344     		add	r3, r3, r2
 20949 0f2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20950 0f30 07F11C00 		add	r0, r7, #28
 20951 0f34 D7F89420 		ldr	r2, [r7, #148]
 20952 0f38 6649     		ldr	r1, .L796+40
 20953 0f3a FFF7FEFF 		bl	sprintf
2740:..\src/command_processing.c **** 			strcat(info_string, str);
 20954              		.loc 1 2740 0
 20955 0f3e 07F11C03 		add	r3, r7, #28
 20956 0f42 1946     		mov	r1, r3
 20957 0f44 7869     		ldr	r0, [r7, #20]
 20958 0f46 FFF7FEFF 		bl	strcat
2741:..\src/command_processing.c **** 			
2742:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 20959              		.loc 1 2742 0
 20960 0f4a 07F11C03 		add	r3, r7, #28
 20961 0f4e 624A     		ldr	r2, .L796+44
 20962 0f50 1C46     		mov	r4, r3
 20963 0f52 1546     		mov	r5, r2
 20964 0f54 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20965 0f56 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 20966 0f58 2B68     		ldr	r3, [r5]
 20967 0f5a 2380     		strh	r3, [r4]	@ movhi
2743:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 20968              		.loc 1 2743 0
 20969 0f5c 5C4A     		ldr	r2, .L796+36
 20970 0f5e D7F89430 		ldr	r3, [r7, #148]
 20971 0f62 1344     		add	r3, r3, r2
 20972 0f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20973 0f66 1946     		mov	r1, r3
 20974 0f68 D7F88C20 		ldr	r2, [r7, #140]
 20975 0f6c 0B46     		mov	r3, r1
 20976 0f6e 9B00     		lsls	r3, r3, #2
 20977 0f70 0B44     		add	r3, r3, r1
 20978 0f72 1344     		add	r3, r3, r2
 20979 0f74 03F20223 		addw	r3, r3, #514
 20980 0f78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20981 0f7a 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 460


 20982 0f7c 0FD0     		beq	.L775
2744:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20983              		.loc 1 2744 0
 20984 0f7e 07F11C03 		add	r3, r7, #28
 20985 0f82 1846     		mov	r0, r3
 20986 0f84 FFF7FEFF 		bl	strlen
 20987 0f88 0346     		mov	r3, r0
 20988 0f8a 1A46     		mov	r2, r3
 20989 0f8c 07F11C03 		add	r3, r7, #28
 20990 0f90 1344     		add	r3, r3, r2
 20991 0f92 524A     		ldr	r2, .L796+48
 20992 0f94 1068     		ldr	r0, [r2]	@ unaligned
 20993 0f96 1860     		str	r0, [r3]	@ unaligned
 20994 0f98 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20995 0f9a 9A80     		strh	r2, [r3, #4]	@ unaligned
 20996 0f9c 0EE0     		b	.L776
 20997              	.L775:
2745:..\src/command_processing.c **** 			else
2746:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20998              		.loc 1 2746 0
 20999 0f9e 07F11C03 		add	r3, r7, #28
 21000 0fa2 1846     		mov	r0, r3
 21001 0fa4 FFF7FEFF 		bl	strlen
 21002 0fa8 0346     		mov	r3, r0
 21003 0faa 1A46     		mov	r2, r3
 21004 0fac 07F11C03 		add	r3, r7, #28
 21005 0fb0 1344     		add	r3, r3, r2
 21006 0fb2 4B4A     		ldr	r2, .L796+52
 21007 0fb4 1068     		ldr	r0, [r2]	@ unaligned
 21008 0fb6 1860     		str	r0, [r3]	@ unaligned
 21009 0fb8 1279     		ldrb	r2, [r2, #4]
 21010 0fba 1A71     		strb	r2, [r3, #4]
 21011              	.L776:
2747:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 21012              		.loc 1 2747 0
 21013 0fbc 07F11C03 		add	r3, r7, #28
 21014 0fc0 1846     		mov	r0, r3
 21015 0fc2 FFF7FEFF 		bl	strlen
 21016 0fc6 0346     		mov	r3, r0
 21017 0fc8 1A46     		mov	r2, r3
 21018 0fca 07F11C03 		add	r3, r7, #28
 21019 0fce 1344     		add	r3, r3, r2
 21020 0fd0 444A     		ldr	r2, .L796+56
 21021 0fd2 1C46     		mov	r4, r3
 21022 0fd4 1346     		mov	r3, r2
 21023 0fd6 07CB     		ldmia	r3!, {r0, r1, r2}
 21024 0fd8 2060     		str	r0, [r4]	@ unaligned
 21025 0fda 6160     		str	r1, [r4, #4]	@ unaligned
 21026 0fdc A260     		str	r2, [r4, #8]	@ unaligned
 21027 0fde 1B88     		ldrh	r3, [r3]	@ unaligned
 21028 0fe0 A381     		strh	r3, [r4, #12]	@ unaligned
2748:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 21029              		.loc 1 2748 0
 21030 0fe2 3B4A     		ldr	r2, .L796+36
 21031 0fe4 D7F89430 		ldr	r3, [r7, #148]
 21032 0fe8 1344     		add	r3, r3, r2
 21033 0fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 461


 21034 0fec 1946     		mov	r1, r3
 21035 0fee D7F88C20 		ldr	r2, [r7, #140]
 21036 0ff2 0B46     		mov	r3, r1
 21037 0ff4 9B00     		lsls	r3, r3, #2
 21038 0ff6 0B44     		add	r3, r3, r1
 21039 0ff8 1344     		add	r3, r3, r2
 21040 0ffa 03F20323 		addw	r3, r3, #515
 21041 0ffe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21042 1000 002B     		cmp	r3, #0
 21043 1002 0FD0     		beq	.L777
2749:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 21044              		.loc 1 2749 0
 21045 1004 07F11C03 		add	r3, r7, #28
 21046 1008 1846     		mov	r0, r3
 21047 100a FFF7FEFF 		bl	strlen
 21048 100e 0346     		mov	r3, r0
 21049 1010 1A46     		mov	r2, r3
 21050 1012 07F11C03 		add	r3, r7, #28
 21051 1016 1344     		add	r3, r3, r2
 21052 1018 304A     		ldr	r2, .L796+48
 21053 101a 1068     		ldr	r0, [r2]	@ unaligned
 21054 101c 1860     		str	r0, [r3]	@ unaligned
 21055 101e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 21056 1020 9A80     		strh	r2, [r3, #4]	@ unaligned
 21057 1022 0EE0     		b	.L778
 21058              	.L777:
2750:..\src/command_processing.c **** 			else
2751:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 21059              		.loc 1 2751 0
 21060 1024 07F11C03 		add	r3, r7, #28
 21061 1028 1846     		mov	r0, r3
 21062 102a FFF7FEFF 		bl	strlen
 21063 102e 0346     		mov	r3, r0
 21064 1030 1A46     		mov	r2, r3
 21065 1032 07F11C03 		add	r3, r7, #28
 21066 1036 1344     		add	r3, r3, r2
 21067 1038 294A     		ldr	r2, .L796+52
 21068 103a 1068     		ldr	r0, [r2]	@ unaligned
 21069 103c 1860     		str	r0, [r3]	@ unaligned
 21070 103e 1279     		ldrb	r2, [r2, #4]
 21071 1040 1A71     		strb	r2, [r3, #4]
 21072              	.L778:
2752:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 21073              		.loc 1 2752 0
 21074 1042 07F11C03 		add	r3, r7, #28
 21075 1046 1846     		mov	r0, r3
 21076 1048 FFF7FEFF 		bl	strlen
 21077 104c 0346     		mov	r3, r0
 21078 104e 1A46     		mov	r2, r3
 21079 1050 07F11C03 		add	r3, r7, #28
 21080 1054 1344     		add	r3, r3, r2
 21081 1056 244A     		ldr	r2, .L796+60
 21082 1058 1D46     		mov	r5, r3
 21083 105a 1446     		mov	r4, r2
 21084 105c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 21085 105e 2860     		str	r0, [r5]	@ unaligned
 21086 1060 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 462


 21087 1062 AA60     		str	r2, [r5, #8]	@ unaligned
 21088 1064 EB60     		str	r3, [r5, #12]	@ unaligned
 21089 1066 2378     		ldrb	r3, [r4]
 21090 1068 2B74     		strb	r3, [r5, #16]
2753:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 21091              		.loc 1 2753 0
 21092 106a 194A     		ldr	r2, .L796+36
 21093 106c D7F89430 		ldr	r3, [r7, #148]
 21094 1070 1344     		add	r3, r3, r2
 21095 1072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21096 1074 1946     		mov	r1, r3
 21097 1076 D7F88C20 		ldr	r2, [r7, #140]
 21098 107a 0B46     		mov	r3, r1
 21099 107c 9B00     		lsls	r3, r3, #2
 21100 107e 0B44     		add	r3, r3, r1
 21101 1080 1344     		add	r3, r3, r2
 21102 1082 03F50173 		add	r3, r3, #516
 21103 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21104 1088 002B     		cmp	r3, #0
 21105 108a 2FD0     		beq	.L779
2754:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 21106              		.loc 1 2754 0
 21107 108c 07F11C03 		add	r3, r7, #28
 21108 1090 1846     		mov	r0, r3
 21109 1092 FFF7FEFF 		bl	strlen
 21110 1096 0346     		mov	r3, r0
 21111 1098 1A46     		mov	r2, r3
 21112 109a 07F11C03 		add	r3, r7, #28
 21113 109e 1344     		add	r3, r3, r2
 21114 10a0 0E4A     		ldr	r2, .L796+48
 21115 10a2 1068     		ldr	r0, [r2]	@ unaligned
 21116 10a4 1860     		str	r0, [r3]	@ unaligned
 21117 10a6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 21118 10a8 9A80     		strh	r2, [r3, #4]	@ unaligned
 21119 10aa 2EE0     		b	.L780
 21120              	.L797:
 21121              		.align	2
 21122              	.L796:
 21123 10ac AC190000 		.word	.LC241
 21124 10b0 C8190000 		.word	.LC242
 21125 10b4 58110000 		.word	.LC152
 21126 10b8 8C1A0000 		.word	.LC250
 21127 10bc A81A0000 		.word	.LC251
 21128 10c0 D01A0000 		.word	.LC252
 21129 10c4 00000000 		.word	N_IMU_Connected
 21130 10c8 E41A0000 		.word	.LC253
 21131 10cc F81A0000 		.word	.LC254
 21132 10d0 00000000 		.word	IMU_connected
 21133 10d4 101B0000 		.word	.LC255
 21134 10d8 241B0000 		.word	.LC256
 21135 10dc 2C130000 		.word	.LC175
 21136 10e0 34130000 		.word	.LC176
 21137 10e4 381B0000 		.word	.LC257
 21138 10e8 481B0000 		.word	.LC258
 21139              	.L779:
2755:..\src/command_processing.c **** 			else
2756:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 463


 21140              		.loc 1 2756 0
 21141 10ec 07F11C03 		add	r3, r7, #28
 21142 10f0 1846     		mov	r0, r3
 21143 10f2 FFF7FEFF 		bl	strlen
 21144 10f6 0346     		mov	r3, r0
 21145 10f8 1A46     		mov	r2, r3
 21146 10fa 07F11C03 		add	r3, r7, #28
 21147 10fe 1344     		add	r3, r3, r2
 21148 1100 584A     		ldr	r2, .L798
 21149 1102 1068     		ldr	r0, [r2]	@ unaligned
 21150 1104 1860     		str	r0, [r3]	@ unaligned
 21151 1106 1279     		ldrb	r2, [r2, #4]
 21152 1108 1A71     		strb	r2, [r3, #4]
 21153              	.L780:
2757:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 21154              		.loc 1 2757 0
 21155 110a 07F11C03 		add	r3, r7, #28
 21156 110e 1846     		mov	r0, r3
 21157 1110 FFF7FEFF 		bl	strlen
 21158 1114 0346     		mov	r3, r0
 21159 1116 1A46     		mov	r2, r3
 21160 1118 07F11C03 		add	r3, r7, #28
 21161 111c 1344     		add	r3, r3, r2
 21162 111e 524A     		ldr	r2, .L798+4
 21163 1120 1C46     		mov	r4, r3
 21164 1122 1346     		mov	r3, r2
 21165 1124 07CB     		ldmia	r3!, {r0, r1, r2}
 21166 1126 2060     		str	r0, [r4]	@ unaligned
 21167 1128 6160     		str	r1, [r4, #4]	@ unaligned
 21168 112a A260     		str	r2, [r4, #8]	@ unaligned
 21169 112c 1B88     		ldrh	r3, [r3]	@ unaligned
 21170 112e A381     		strh	r3, [r4, #12]	@ unaligned
2758:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 21171              		.loc 1 2758 0
 21172 1130 4E4A     		ldr	r2, .L798+8
 21173 1132 D7F89430 		ldr	r3, [r7, #148]
 21174 1136 1344     		add	r3, r3, r2
 21175 1138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21176 113a 1946     		mov	r1, r3
 21177 113c D7F88C20 		ldr	r2, [r7, #140]
 21178 1140 0B46     		mov	r3, r1
 21179 1142 9B00     		lsls	r3, r3, #2
 21180 1144 0B44     		add	r3, r3, r1
 21181 1146 1344     		add	r3, r3, r2
 21182 1148 03F20523 		addw	r3, r3, #517
 21183 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21184 114e 002B     		cmp	r3, #0
 21185 1150 0FD0     		beq	.L781
2759:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 21186              		.loc 1 2759 0
 21187 1152 07F11C03 		add	r3, r7, #28
 21188 1156 1846     		mov	r0, r3
 21189 1158 FFF7FEFF 		bl	strlen
 21190 115c 0346     		mov	r3, r0
 21191 115e 1A46     		mov	r2, r3
 21192 1160 07F11C03 		add	r3, r7, #28
 21193 1164 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 464


 21194 1166 424A     		ldr	r2, .L798+12
 21195 1168 1068     		ldr	r0, [r2]	@ unaligned
 21196 116a 1860     		str	r0, [r3]	@ unaligned
 21197 116c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 21198 116e 9A80     		strh	r2, [r3, #4]	@ unaligned
 21199 1170 0EE0     		b	.L782
 21200              	.L781:
2760:..\src/command_processing.c **** 			else
2761:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 21201              		.loc 1 2761 0
 21202 1172 07F11C03 		add	r3, r7, #28
 21203 1176 1846     		mov	r0, r3
 21204 1178 FFF7FEFF 		bl	strlen
 21205 117c 0346     		mov	r3, r0
 21206 117e 1A46     		mov	r2, r3
 21207 1180 07F11C03 		add	r3, r7, #28
 21208 1184 1344     		add	r3, r3, r2
 21209 1186 374A     		ldr	r2, .L798
 21210 1188 1068     		ldr	r0, [r2]	@ unaligned
 21211 118a 1860     		str	r0, [r3]	@ unaligned
 21212 118c 1279     		ldrb	r2, [r2, #4]
 21213 118e 1A71     		strb	r2, [r3, #4]
 21214              	.L782:
2762:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 21215              		.loc 1 2762 0
 21216 1190 07F11C03 		add	r3, r7, #28
 21217 1194 1846     		mov	r0, r3
 21218 1196 FFF7FEFF 		bl	strlen
 21219 119a 0346     		mov	r3, r0
 21220 119c 1A46     		mov	r2, r3
 21221 119e 07F11C03 		add	r3, r7, #28
 21222 11a2 1344     		add	r3, r3, r2
 21223 11a4 334A     		ldr	r2, .L798+16
 21224 11a6 1C46     		mov	r4, r3
 21225 11a8 1346     		mov	r3, r2
 21226 11aa 07CB     		ldmia	r3!, {r0, r1, r2}
 21227 11ac 2060     		str	r0, [r4]	@ unaligned
 21228 11ae 6160     		str	r1, [r4, #4]	@ unaligned
 21229 11b0 A260     		str	r2, [r4, #8]	@ unaligned
 21230 11b2 1A88     		ldrh	r2, [r3]	@ unaligned
 21231 11b4 9B78     		ldrb	r3, [r3, #2]
 21232 11b6 A281     		strh	r2, [r4, #12]	@ unaligned
 21233 11b8 A373     		strb	r3, [r4, #14]
2763:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 21234              		.loc 1 2763 0
 21235 11ba 2C4A     		ldr	r2, .L798+8
 21236 11bc D7F89430 		ldr	r3, [r7, #148]
 21237 11c0 1344     		add	r3, r3, r2
 21238 11c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21239 11c4 1946     		mov	r1, r3
 21240 11c6 D7F88C20 		ldr	r2, [r7, #140]
 21241 11ca 0B46     		mov	r3, r1
 21242 11cc 9B00     		lsls	r3, r3, #2
 21243 11ce 0B44     		add	r3, r3, r1
 21244 11d0 1344     		add	r3, r3, r2
 21245 11d2 03F20623 		addw	r3, r3, #518
 21246 11d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 465


 21247 11d8 002B     		cmp	r3, #0
 21248 11da 0FD0     		beq	.L783
2764:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 21249              		.loc 1 2764 0
 21250 11dc 07F11C03 		add	r3, r7, #28
 21251 11e0 1846     		mov	r0, r3
 21252 11e2 FFF7FEFF 		bl	strlen
 21253 11e6 0346     		mov	r3, r0
 21254 11e8 1A46     		mov	r2, r3
 21255 11ea 07F11C03 		add	r3, r7, #28
 21256 11ee 1344     		add	r3, r3, r2
 21257 11f0 1F4A     		ldr	r2, .L798+12
 21258 11f2 1068     		ldr	r0, [r2]	@ unaligned
 21259 11f4 1860     		str	r0, [r3]	@ unaligned
 21260 11f6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 21261 11f8 9A80     		strh	r2, [r3, #4]	@ unaligned
 21262 11fa 0EE0     		b	.L784
 21263              	.L783:
2765:..\src/command_processing.c **** 			else
2766:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 21264              		.loc 1 2766 0
 21265 11fc 07F11C03 		add	r3, r7, #28
 21266 1200 1846     		mov	r0, r3
 21267 1202 FFF7FEFF 		bl	strlen
 21268 1206 0346     		mov	r3, r0
 21269 1208 1A46     		mov	r2, r3
 21270 120a 07F11C03 		add	r3, r7, #28
 21271 120e 1344     		add	r3, r3, r2
 21272 1210 144A     		ldr	r2, .L798
 21273 1212 1068     		ldr	r0, [r2]	@ unaligned
 21274 1214 1860     		str	r0, [r3]	@ unaligned
 21275 1216 1279     		ldrb	r2, [r2, #4]
 21276 1218 1A71     		strb	r2, [r3, #4]
 21277              	.L784:
2767:..\src/command_processing.c **** 				 
2768:..\src/command_processing.c **** 			strcat(info_string, str);
 21278              		.loc 1 2768 0 discriminator 2
 21279 121a 07F11C03 		add	r3, r7, #28
 21280 121e 1946     		mov	r1, r3
 21281 1220 7869     		ldr	r0, [r7, #20]
 21282 1222 FFF7FEFF 		bl	strcat
2738:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21283              		.loc 1 2738 0 discriminator 2
 21284 1226 D7F89430 		ldr	r3, [r7, #148]
 21285 122a 0133     		adds	r3, r3, #1
 21286 122c C7F89430 		str	r3, [r7, #148]
 21287              	.L774:
2738:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21288              		.loc 1 2738 0 is_stmt 0 discriminator 1
 21289 1230 114B     		ldr	r3, .L798+20
 21290 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21291 1234 1A46     		mov	r2, r3
 21292 1236 D7F89430 		ldr	r3, [r7, #148]
 21293 123a 9A42     		cmp	r2, r3
 21294 123c 3FF773AE 		bgt	.L785
2769:..\src/command_processing.c **** 		}       
2770:..\src/command_processing.c **** 		
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 466


2771:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 21295              		.loc 1 2771 0 is_stmt 1
 21296 1240 7869     		ldr	r0, [r7, #20]
 21297 1242 FFF7FEFF 		bl	strlen
 21298 1246 0346     		mov	r3, r0
 21299 1248 1A46     		mov	r2, r3
 21300 124a 7B69     		ldr	r3, [r7, #20]
 21301 124c 1344     		add	r3, r3, r2
 21302 124e 0B4A     		ldr	r2, .L798+24
 21303 1250 1188     		ldrh	r1, [r2]	@ unaligned
 21304 1252 9278     		ldrb	r2, [r2, #2]
 21305 1254 1980     		strh	r1, [r3]	@ unaligned
 21306 1256 9A70     		strb	r2, [r3, #2]
 21307              	.L787:
2772:..\src/command_processing.c **** 	}
2773:..\src/command_processing.c **** }
 21308              		.loc 1 2773 0
 21309 1258 00BF     		nop
 21310 125a 9C37     		adds	r7, r7, #156
 21311              		.cfi_def_cfa_offset 36
 21312 125c BD46     		mov	sp, r7
 21313              		.cfi_def_cfa_register 13
 21314              		@ sp needed
 21315 125e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 21316              	.L799:
 21317 1262 00BF     		.align	2
 21318              	.L798:
 21319 1264 34130000 		.word	.LC176
 21320 1268 5C1B0000 		.word	.LC259
 21321 126c 00000000 		.word	IMU_connected
 21322 1270 2C130000 		.word	.LC175
 21323 1274 6C1B0000 		.word	.LC260
 21324 1278 00000000 		.word	N_IMU_Connected
 21325 127c 58110000 		.word	.LC152
 21326              		.cfi_endproc
 21327              	.LFE75:
 21328              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 21329              		.section	.rodata
 21330 2012 0000     		.align	2
 21331              	.LC302:
 21332 2014 486F7572 		.ascii	"Hour,Min,Sec,\000"
 21332      2C4D696E 
 21332      2C536563 
 21332      2C00
 21333 2022 0000     		.align	2
 21334              	.LC303:
 21335 2024 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 21335      25645F50 
 21335      6F732C00 
 21336              		.align	2
 21337              	.LC304:
 21338 2030 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 21338      25645F43 
 21338      7572722C 
 21338      00
 21339 203d 000000   		.align	2
 21340              	.LC305:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 467


 21341 2040 52657374 		.ascii	"Rest_times,Wire_disp,Total_rest_time,Power_cycles,E"
 21341      5F74696D 
 21341      65732C57 
 21341      6972655F 
 21341      64697370 
 21342 2073 4D475F31 		.ascii	"MG_1_act,EMG_2_act,EMG_1_excess,EMG_2_excess,Motion"
 21342      5F616374 
 21342      2C454D47 
 21342      5F325F61 
 21342      63742C45 
 21343 20a6 5F312C4D 		.ascii	"_1,Motion_2,Total_runtime\000"
 21343      6F74696F 
 21343      6E5F322C 
 21343      546F7461 
 21343      6C5F7275 
 21344              		.section	.text.prepare_SD_legend,"ax",%progbits
 21345              		.align	2
 21346              		.global	prepare_SD_legend
 21347              		.thumb
 21348              		.thumb_func
 21349              		.type	prepare_SD_legend, %function
 21350              	prepare_SD_legend:
 21351              	.LFB76:
2774:..\src/command_processing.c **** 
2775:..\src/command_processing.c **** 
2776:..\src/command_processing.c **** //==============================================================================
2777:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2778:..\src/command_processing.c **** //==============================================================================
2779:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2780:..\src/command_processing.c **** {
 21352              		.loc 1 2780 0
 21353              		.cfi_startproc
 21354              		@ args = 0, pretend = 0, frame = 152
 21355              		@ frame_needed = 1, uses_anonymous_args = 0
 21356 0000 90B5     		push	{r4, r7, lr}
 21357              		.cfi_def_cfa_offset 12
 21358              		.cfi_offset 4, -12
 21359              		.cfi_offset 7, -8
 21360              		.cfi_offset 14, -4
 21361 0002 A7B0     		sub	sp, sp, #156
 21362              		.cfi_def_cfa_offset 168
 21363 0004 00AF     		add	r7, sp, #0
 21364              		.cfi_def_cfa_register 7
 21365 0006 7860     		str	r0, [r7, #4]
2781:..\src/command_processing.c ****     char str[140];  
2782:..\src/command_processing.c ****     int i;
2783:..\src/command_processing.c ****         
2784:..\src/command_processing.c ****     // Legend
2785:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 21366              		.loc 1 2785 0
 21367 0008 7B68     		ldr	r3, [r7, #4]
 21368 000a 2F4A     		ldr	r2, .L805
 21369 000c 1C46     		mov	r4, r3
 21370 000e 1346     		mov	r3, r2
 21371 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 21372 0012 2060     		str	r0, [r4]	@ unaligned
 21373 0014 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 468


 21374 0016 A260     		str	r2, [r4, #8]	@ unaligned
 21375 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 21376 001a A381     		strh	r3, [r4, #12]	@ unaligned
2786:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 21377              		.loc 1 2786 0
 21378 001c 0123     		movs	r3, #1
 21379 001e C7F89430 		str	r3, [r7, #148]
 21380 0022 12E0     		b	.L801
 21381              	.L802:
2787:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 21382              		.loc 1 2787 0 discriminator 3
 21383 0024 07F10803 		add	r3, r7, #8
 21384 0028 D7F89420 		ldr	r2, [r7, #148]
 21385 002c 2749     		ldr	r1, .L805+4
 21386 002e 1846     		mov	r0, r3
 21387 0030 FFF7FEFF 		bl	sprintf
2788:..\src/command_processing.c ****         strcat(info_string, str);
 21388              		.loc 1 2788 0 discriminator 3
 21389 0034 07F10803 		add	r3, r7, #8
 21390 0038 1946     		mov	r1, r3
 21391 003a 7868     		ldr	r0, [r7, #4]
 21392 003c FFF7FEFF 		bl	strcat
2786:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 21393              		.loc 1 2786 0 discriminator 3
 21394 0040 D7F89430 		ldr	r3, [r7, #148]
 21395 0044 0133     		adds	r3, r3, #1
 21396 0046 C7F89430 		str	r3, [r7, #148]
 21397              	.L801:
2786:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 21398              		.loc 1 2786 0 is_stmt 0 discriminator 1
 21399 004a D7F89430 		ldr	r3, [r7, #148]
 21400 004e 0A2B     		cmp	r3, #10
 21401 0050 E8DD     		ble	.L802
2789:..\src/command_processing.c ****     }
2790:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 21402              		.loc 1 2790 0 is_stmt 1
 21403 0052 0123     		movs	r3, #1
 21404 0054 C7F89430 		str	r3, [r7, #148]
 21405 0058 12E0     		b	.L803
 21406              	.L804:
2791:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 21407              		.loc 1 2791 0 discriminator 3
 21408 005a 07F10803 		add	r3, r7, #8
 21409 005e D7F89420 		ldr	r2, [r7, #148]
 21410 0062 1B49     		ldr	r1, .L805+8
 21411 0064 1846     		mov	r0, r3
 21412 0066 FFF7FEFF 		bl	sprintf
2792:..\src/command_processing.c ****         strcat(info_string, str);
 21413              		.loc 1 2792 0 discriminator 3
 21414 006a 07F10803 		add	r3, r7, #8
 21415 006e 1946     		mov	r1, r3
 21416 0070 7868     		ldr	r0, [r7, #4]
 21417 0072 FFF7FEFF 		bl	strcat
2790:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 21418              		.loc 1 2790 0 discriminator 3
 21419 0076 D7F89430 		ldr	r3, [r7, #148]
 21420 007a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 469


 21421 007c C7F89430 		str	r3, [r7, #148]
 21422              	.L803:
2790:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 21423              		.loc 1 2790 0 is_stmt 0 discriminator 1
 21424 0080 D7F89430 		ldr	r3, [r7, #148]
 21425 0084 042B     		cmp	r3, #4
 21426 0086 E8DD     		ble	.L804
2793:..\src/command_processing.c ****     }
2794:..\src/command_processing.c ****     sprintf(str, "Rest_times,Wire_disp,Total_rest_time,Power_cycles,EMG_1_act,EMG_2_act,EMG_1_exces
 21427              		.loc 1 2794 0 is_stmt 1
 21428 0088 07F10803 		add	r3, r7, #8
 21429 008c 114A     		ldr	r2, .L805+12
 21430 008e 1846     		mov	r0, r3
 21431 0090 1146     		mov	r1, r2
 21432 0092 8023     		movs	r3, #128
 21433 0094 1A46     		mov	r2, r3
 21434 0096 FFF7FEFF 		bl	memcpy
2795:..\src/command_processing.c ****     strcat(info_string, str);
 21435              		.loc 1 2795 0
 21436 009a 07F10803 		add	r3, r7, #8
 21437 009e 1946     		mov	r1, r3
 21438 00a0 7868     		ldr	r0, [r7, #4]
 21439 00a2 FFF7FEFF 		bl	strcat
2796:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21440              		.loc 1 2796 0
 21441 00a6 7868     		ldr	r0, [r7, #4]
 21442 00a8 FFF7FEFF 		bl	strlen
 21443 00ac 0346     		mov	r3, r0
 21444 00ae 1A46     		mov	r2, r3
 21445 00b0 7B68     		ldr	r3, [r7, #4]
 21446 00b2 1344     		add	r3, r3, r2
 21447 00b4 084A     		ldr	r2, .L805+16
 21448 00b6 1188     		ldrh	r1, [r2]	@ unaligned
 21449 00b8 9278     		ldrb	r2, [r2, #2]
 21450 00ba 1980     		strh	r1, [r3]	@ unaligned
 21451 00bc 9A70     		strb	r2, [r3, #2]
2797:..\src/command_processing.c **** }
 21452              		.loc 1 2797 0
 21453 00be 00BF     		nop
 21454 00c0 9C37     		adds	r7, r7, #156
 21455              		.cfi_def_cfa_offset 12
 21456 00c2 BD46     		mov	sp, r7
 21457              		.cfi_def_cfa_register 13
 21458              		@ sp needed
 21459 00c4 90BD     		pop	{r4, r7, pc}
 21460              	.L806:
 21461 00c6 00BF     		.align	2
 21462              	.L805:
 21463 00c8 14200000 		.word	.LC302
 21464 00cc 24200000 		.word	.LC303
 21465 00d0 30200000 		.word	.LC304
 21466 00d4 40200000 		.word	.LC305
 21467 00d8 58110000 		.word	.LC152
 21468              		.cfi_endproc
 21469              	.LFE76:
 21470              		.size	prepare_SD_legend, .-prepare_SD_legend
 21471              		.section	.rodata
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 470


 21472              		.align	2
 21473              	.LC306:
 21474 20c0 25303264 		.ascii	"%02d,%02d,%02d,\000"
 21474      2C253032 
 21474      642C2530 
 21474      32642C00 
 21475              		.align	2
 21476              	.LC307:
 21477 20d0 256C752C 		.ascii	"%lu,\000"
 21477      00
 21478 20d5 000000   		.align	2
 21479              	.LC308:
 21480 20d8 256C752C 		.ascii	"%lu,%lu,%lu,%lu,\000"
 21480      256C752C 
 21480      256C752C 
 21480      256C752C 
 21480      00
 21481 20e9 000000   		.align	2
 21482              	.LC309:
 21483 20ec 256C752C 		.ascii	"%lu,%lu,%lu,%lu,%lu,%lu,\000"
 21483      256C752C 
 21483      256C752C 
 21483      256C752C 
 21483      256C752C 
 21484 2105 000000   		.align	2
 21485              	.LC310:
 21486 2108 256C7500 		.ascii	"%lu\000"
 21487              		.section	.text.prepare_SD_info,"ax",%progbits
 21488              		.align	2
 21489              		.global	prepare_SD_info
 21490              		.thumb
 21491              		.thumb_func
 21492              		.type	prepare_SD_info, %function
 21493              	prepare_SD_info:
 21494              	.LFB77:
2798:..\src/command_processing.c **** 
2799:..\src/command_processing.c **** 
2800:..\src/command_processing.c **** //==============================================================================
2801:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2802:..\src/command_processing.c **** //==============================================================================
2803:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2804:..\src/command_processing.c **** {
 21495              		.loc 1 2804 0
 21496              		.cfi_startproc
 21497              		@ args = 0, pretend = 0, frame = 136
 21498              		@ frame_needed = 1, uses_anonymous_args = 0
 21499 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 21500              		.cfi_def_cfa_offset 20
 21501              		.cfi_offset 4, -20
 21502              		.cfi_offset 5, -16
 21503              		.cfi_offset 6, -12
 21504              		.cfi_offset 7, -8
 21505              		.cfi_offset 14, -4
 21506 0002 A7B0     		sub	sp, sp, #156
 21507              		.cfi_def_cfa_offset 176
 21508 0004 04AF     		add	r7, sp, #16
 21509              		.cfi_def_cfa 7, 160
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 471


 21510 0006 7860     		str	r0, [r7, #4]
2805:..\src/command_processing.c ****     char str[120];  
2806:..\src/command_processing.c ****     int i;
2807:..\src/command_processing.c ****             
2808:..\src/command_processing.c ****     strcpy(info_string, "");
 21511              		.loc 1 2808 0
 21512 0008 7B68     		ldr	r3, [r7, #4]
 21513 000a 0022     		movs	r2, #0
 21514 000c 1A70     		strb	r2, [r3]
2809:..\src/command_processing.c ****     
2810:..\src/command_processing.c ****     // Time
2811:..\src/command_processing.c ****     strcat(info_string, "");
2812:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 21515              		.loc 1 2812 0
 21516 000e 554B     		ldr	r3, .L812
 21517 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 21518 0014 1A46     		mov	r2, r3
 21519 0016 534B     		ldr	r3, .L812
 21520 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 21521 001c 1946     		mov	r1, r3
 21522 001e 514B     		ldr	r3, .L812
 21523 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 21524 0024 07F10C00 		add	r0, r7, #12
 21525 0028 0093     		str	r3, [sp]
 21526 002a 0B46     		mov	r3, r1
 21527 002c 4E49     		ldr	r1, .L812+4
 21528 002e FFF7FEFF 		bl	sprintf
2813:..\src/command_processing.c ****     strcat(info_string, str);
 21529              		.loc 1 2813 0
 21530 0032 07F10C03 		add	r3, r7, #12
 21531 0036 1946     		mov	r1, r3
 21532 0038 7868     		ldr	r0, [r7, #4]
 21533 003a FFF7FEFF 		bl	strcat
2814:..\src/command_processing.c **** 
2815:..\src/command_processing.c ****     // Pos_Bin
2816:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 21534              		.loc 1 2816 0
 21535 003e 0123     		movs	r3, #1
 21536 0040 C7F88430 		str	r3, [r7, #132]
 21537 0044 17E0     		b	.L808
 21538              	.L809:
2817:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21539              		.loc 1 2817 0 discriminator 3
 21540 0046 D7F88430 		ldr	r3, [r7, #132]
 21541 004a 013B     		subs	r3, r3, #1
 21542 004c 454A     		ldr	r2, .L812
 21543 004e 0633     		adds	r3, r3, #6
 21544 0050 52F82320 		ldr	r2, [r2, r3, lsl #2]
 21545 0054 07F10C03 		add	r3, r7, #12
 21546 0058 4449     		ldr	r1, .L812+8
 21547 005a 1846     		mov	r0, r3
 21548 005c FFF7FEFF 		bl	sprintf
2818:..\src/command_processing.c ****         strcat(info_string, str);
 21549              		.loc 1 2818 0 discriminator 3
 21550 0060 07F10C03 		add	r3, r7, #12
 21551 0064 1946     		mov	r1, r3
 21552 0066 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 472


 21553 0068 FFF7FEFF 		bl	strcat
2816:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21554              		.loc 1 2816 0 discriminator 3
 21555 006c D7F88430 		ldr	r3, [r7, #132]
 21556 0070 0133     		adds	r3, r3, #1
 21557 0072 C7F88430 		str	r3, [r7, #132]
 21558              	.L808:
2816:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 21559              		.loc 1 2816 0 is_stmt 0 discriminator 1
 21560 0076 D7F88430 		ldr	r3, [r7, #132]
 21561 007a 0A2B     		cmp	r3, #10
 21562 007c E3DD     		ble	.L809
2819:..\src/command_processing.c ****     }
2820:..\src/command_processing.c ****     
2821:..\src/command_processing.c ****     // Curr_Bin
2822:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 21563              		.loc 1 2822 0 is_stmt 1
 21564 007e 0123     		movs	r3, #1
 21565 0080 C7F88430 		str	r3, [r7, #132]
 21566 0084 17E0     		b	.L810
 21567              	.L811:
2823:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21568              		.loc 1 2823 0 discriminator 3
 21569 0086 D7F88430 		ldr	r3, [r7, #132]
 21570 008a 013B     		subs	r3, r3, #1
 21571 008c 354A     		ldr	r2, .L812
 21572 008e 1033     		adds	r3, r3, #16
 21573 0090 52F82320 		ldr	r2, [r2, r3, lsl #2]
 21574 0094 07F10C03 		add	r3, r7, #12
 21575 0098 3449     		ldr	r1, .L812+8
 21576 009a 1846     		mov	r0, r3
 21577 009c FFF7FEFF 		bl	sprintf
2824:..\src/command_processing.c ****         strcat(info_string, str);
 21578              		.loc 1 2824 0 discriminator 3
 21579 00a0 07F10C03 		add	r3, r7, #12
 21580 00a4 1946     		mov	r1, r3
 21581 00a6 7868     		ldr	r0, [r7, #4]
 21582 00a8 FFF7FEFF 		bl	strcat
2822:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21583              		.loc 1 2822 0 discriminator 3
 21584 00ac D7F88430 		ldr	r3, [r7, #132]
 21585 00b0 0133     		adds	r3, r3, #1
 21586 00b2 C7F88430 		str	r3, [r7, #132]
 21587              	.L810:
2822:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 21588              		.loc 1 2822 0 is_stmt 0 discriminator 1
 21589 00b6 D7F88430 		ldr	r3, [r7, #132]
 21590 00ba 042B     		cmp	r3, #4
 21591 00bc E3DD     		ble	.L811
2825:..\src/command_processing.c ****     }
2826:..\src/command_processing.c **** 
2827:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_time_rest, Power_cycles
2828:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_t
 21592              		.loc 1 2828 0 is_stmt 1
 21593 00be 294B     		ldr	r3, .L812
 21594 00c0 196D     		ldr	r1, [r3, #80]
 21595 00c2 284B     		ldr	r3, .L812
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 473


 21596 00c4 5C6D     		ldr	r4, [r3, #84]
 21597 00c6 274B     		ldr	r3, .L812
 21598 00c8 DB6D     		ldr	r3, [r3, #92]
 21599 00ca 264A     		ldr	r2, .L812
 21600 00cc 126E     		ldr	r2, [r2, #96]
 21601 00ce 07F10C00 		add	r0, r7, #12
 21602 00d2 0192     		str	r2, [sp, #4]
 21603 00d4 0093     		str	r3, [sp]
 21604 00d6 2346     		mov	r3, r4
 21605 00d8 0A46     		mov	r2, r1
 21606 00da 2549     		ldr	r1, .L812+12
 21607 00dc FFF7FEFF 		bl	sprintf
2829:..\src/command_processing.c ****     strcat(info_string, str);
 21608              		.loc 1 2829 0
 21609 00e0 07F10C03 		add	r3, r7, #12
 21610 00e4 1946     		mov	r1, r3
 21611 00e6 7868     		ldr	r0, [r7, #4]
 21612 00e8 FFF7FEFF 		bl	strcat
2830:..\src/command_processing.c ****     
2831:..\src/command_processing.c ****     // EMG_1_act, EMG_2_act, EMG_1_excess, EMG_2_excess, Motion_1, Motion_2
2832:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,%lu,%lu,", g_mem.cnt.emg_act_counter[0], g_mem.cnt.emg_act_counte
 21613              		.loc 1 2832 0
 21614 00ec 1D4B     		ldr	r3, .L812
 21615 00ee 1D69     		ldr	r5, [r3, #16]
 21616 00f0 1C4B     		ldr	r3, .L812
 21617 00f2 5E69     		ldr	r6, [r3, #20]
 21618 00f4 1B4B     		ldr	r3, .L812
 21619 00f6 5B6E     		ldr	r3, [r3, #100]
 21620 00f8 1A4A     		ldr	r2, .L812
 21621 00fa 926E     		ldr	r2, [r2, #104]
 21622 00fc 1949     		ldr	r1, .L812
 21623 00fe C96E     		ldr	r1, [r1, #108]
 21624 0100 1848     		ldr	r0, .L812
 21625 0102 006F     		ldr	r0, [r0, #112]
 21626 0104 07F10C04 		add	r4, r7, #12
 21627 0108 0390     		str	r0, [sp, #12]
 21628 010a 0291     		str	r1, [sp, #8]
 21629 010c 0192     		str	r2, [sp, #4]
 21630 010e 0093     		str	r3, [sp]
 21631 0110 3346     		mov	r3, r6
 21632 0112 2A46     		mov	r2, r5
 21633 0114 1749     		ldr	r1, .L812+16
 21634 0116 2046     		mov	r0, r4
 21635 0118 FFF7FEFF 		bl	sprintf
2833:..\src/command_processing.c ****                                     g_mem.cnt.excessive_signal_activity[0], g_mem.cnt.excessive_sig
2834:..\src/command_processing.c ****                                     g_mem.cnt.motion_counter[0], g_mem.cnt.motion_counter[1]);
2835:..\src/command_processing.c ****     strcat(info_string, str);
 21636              		.loc 1 2835 0
 21637 011c 07F10C03 		add	r3, r7, #12
 21638 0120 1946     		mov	r1, r3
 21639 0122 7868     		ldr	r0, [r7, #4]
 21640 0124 FFF7FEFF 		bl	strcat
2836:..\src/command_processing.c ****     
2837:..\src/command_processing.c ****     // Total_runtime
2838:..\src/command_processing.c ****     sprintf(str, "%lu", g_mem.cnt.total_runtime);
 21641              		.loc 1 2838 0
 21642 0128 0E4B     		ldr	r3, .L812
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 474


 21643 012a 9A6D     		ldr	r2, [r3, #88]
 21644 012c 07F10C03 		add	r3, r7, #12
 21645 0130 1149     		ldr	r1, .L812+20
 21646 0132 1846     		mov	r0, r3
 21647 0134 FFF7FEFF 		bl	sprintf
2839:..\src/command_processing.c ****     strcat(info_string, str);
 21648              		.loc 1 2839 0
 21649 0138 07F10C03 		add	r3, r7, #12
 21650 013c 1946     		mov	r1, r3
 21651 013e 7868     		ldr	r0, [r7, #4]
 21652 0140 FFF7FEFF 		bl	strcat
2840:..\src/command_processing.c ****     
2841:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21653              		.loc 1 2841 0
 21654 0144 7868     		ldr	r0, [r7, #4]
 21655 0146 FFF7FEFF 		bl	strlen
 21656 014a 0346     		mov	r3, r0
 21657 014c 1A46     		mov	r2, r3
 21658 014e 7B68     		ldr	r3, [r7, #4]
 21659 0150 1344     		add	r3, r3, r2
 21660 0152 0A4A     		ldr	r2, .L812+24
 21661 0154 1188     		ldrh	r1, [r2]	@ unaligned
 21662 0156 9278     		ldrb	r2, [r2, #2]
 21663 0158 1980     		strh	r1, [r3]	@ unaligned
 21664 015a 9A70     		strb	r2, [r3, #2]
2842:..\src/command_processing.c **** }
 21665              		.loc 1 2842 0
 21666 015c 00BF     		nop
 21667 015e 8C37     		adds	r7, r7, #140
 21668              		.cfi_def_cfa_offset 20
 21669 0160 BD46     		mov	sp, r7
 21670              		.cfi_def_cfa_register 13
 21671              		@ sp needed
 21672 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 21673              	.L813:
 21674              		.align	2
 21675              	.L812:
 21676 0164 00000000 		.word	g_mem
 21677 0168 C0200000 		.word	.LC306
 21678 016c D0200000 		.word	.LC307
 21679 0170 D8200000 		.word	.LC308
 21680 0174 EC200000 		.word	.LC309
 21681 0178 08210000 		.word	.LC310
 21682 017c 58110000 		.word	.LC152
 21683              		.cfi_endproc
 21684              	.LFE77:
 21685              		.size	prepare_SD_info, .-prepare_SD_info
 21686              		.section	.rodata
 21687              		.align	2
 21688              	.LC311:
 21689 210c 54696D65 		.ascii	"Time,EMG1,EMG2\012\000"
 21689      2C454D47 
 21689      312C454D 
 21689      47320A00 
 21690              		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 21691              		.align	2
 21692              		.global	prepare_SD_EMG_History_legend
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 475


 21693              		.thumb
 21694              		.thumb_func
 21695              		.type	prepare_SD_EMG_History_legend, %function
 21696              	prepare_SD_EMG_History_legend:
 21697              	.LFB78:
2843:..\src/command_processing.c **** 
2844:..\src/command_processing.c **** //==============================================================================
2845:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
2846:..\src/command_processing.c **** //==============================================================================
2847:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
2848:..\src/command_processing.c **** {
 21698              		.loc 1 2848 0
 21699              		.cfi_startproc
 21700              		@ args = 0, pretend = 0, frame = 8
 21701              		@ frame_needed = 1, uses_anonymous_args = 0
 21702              		@ link register save eliminated.
 21703 0000 B0B4     		push	{r4, r5, r7}
 21704              		.cfi_def_cfa_offset 12
 21705              		.cfi_offset 4, -12
 21706              		.cfi_offset 5, -8
 21707              		.cfi_offset 7, -4
 21708 0002 83B0     		sub	sp, sp, #12
 21709              		.cfi_def_cfa_offset 24
 21710 0004 00AF     		add	r7, sp, #0
 21711              		.cfi_def_cfa_register 7
 21712 0006 7860     		str	r0, [r7, #4]
2849:..\src/command_processing.c ****         
2850:..\src/command_processing.c ****     // Legend
2851:..\src/command_processing.c ****     strcpy(info_string, "Time,EMG1,EMG2\n");
 21713              		.loc 1 2851 0
 21714 0008 7B68     		ldr	r3, [r7, #4]
 21715 000a 064A     		ldr	r2, .L815
 21716 000c 1C46     		mov	r4, r3
 21717 000e 1546     		mov	r5, r2
 21718 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 21719 0012 2060     		str	r0, [r4]	@ unaligned
 21720 0014 6160     		str	r1, [r4, #4]	@ unaligned
 21721 0016 A260     		str	r2, [r4, #8]	@ unaligned
 21722 0018 E360     		str	r3, [r4, #12]	@ unaligned
2852:..\src/command_processing.c ****     
2853:..\src/command_processing.c **** }
 21723              		.loc 1 2853 0
 21724 001a 00BF     		nop
 21725 001c 0C37     		adds	r7, r7, #12
 21726              		.cfi_def_cfa_offset 12
 21727 001e BD46     		mov	sp, r7
 21728              		.cfi_def_cfa_register 13
 21729              		@ sp needed
 21730 0020 B0BC     		pop	{r4, r5, r7}
 21731              		.cfi_restore 7
 21732              		.cfi_restore 5
 21733              		.cfi_restore 4
 21734              		.cfi_def_cfa_offset 0
 21735 0022 7047     		bx	lr
 21736              	.L816:
 21737              		.align	2
 21738              	.L815:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 476


 21739 0024 0C210000 		.word	.LC311
 21740              		.cfi_endproc
 21741              	.LFE78:
 21742              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 21743              		.section	.rodata
 21744              		.align	2
 21745              	.LC312:
 21746 211c 252E3166 		.ascii	"%.1f,%u,%u\012\000"
 21746      2C25752C 
 21746      25750A00 
 21747              		.global	__aeabi_dadd
 21748              		.global	__aeabi_d2f
 21749              		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 21750              		.align	2
 21751              		.global	prepare_SD_EMG_history
 21752              		.thumb
 21753              		.thumb_func
 21754              		.type	prepare_SD_EMG_history, %function
 21755              	prepare_SD_EMG_history:
 21756              	.LFB79:
2854:..\src/command_processing.c **** 
2855:..\src/command_processing.c **** //==============================================================================
2856:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
2857:..\src/command_processing.c **** //==============================================================================
2858:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
2859:..\src/command_processing.c **** {
 21757              		.loc 1 2859 0
 21758              		.cfi_startproc
 21759              		@ args = 0, pretend = 0, frame = 120
 21760              		@ frame_needed = 1, uses_anonymous_args = 0
 21761 0000 B0B5     		push	{r4, r5, r7, lr}
 21762              		.cfi_def_cfa_offset 16
 21763              		.cfi_offset 4, -16
 21764              		.cfi_offset 5, -12
 21765              		.cfi_offset 7, -8
 21766              		.cfi_offset 14, -4
 21767 0002 A0B0     		sub	sp, sp, #128
 21768              		.cfi_def_cfa_offset 144
 21769 0004 02AF     		add	r7, sp, #8
 21770              		.cfi_def_cfa 7, 136
 21771 0006 7860     		str	r0, [r7, #4]
2860:..\src/command_processing.c ****     char str_data[100] = "";
 21772              		.loc 1 2860 0
 21773 0008 0023     		movs	r3, #0
 21774 000a FB60     		str	r3, [r7, #12]
 21775 000c 07F11003 		add	r3, r7, #16
 21776 0010 6022     		movs	r2, #96
 21777 0012 0021     		movs	r1, #0
 21778 0014 1846     		mov	r0, r3
 21779 0016 FFF7FEFF 		bl	memset
2861:..\src/command_processing.c ****     uint16 v_idx = 0;
 21780              		.loc 1 2861 0
 21781 001a 0023     		movs	r3, #0
 21782 001c A7F87630 		strh	r3, [r7, #118]	@ movhi
2862:..\src/command_processing.c ****     static float h_time = 0.0;
2863:..\src/command_processing.c ****                 
2864:..\src/command_processing.c ****     strcpy(info_string, "");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 477


 21783              		.loc 1 2864 0
 21784 0020 7B68     		ldr	r3, [r7, #4]
 21785 0022 0022     		movs	r2, #0
 21786 0024 1A70     		strb	r2, [r3]
 21787              	.LBB29:
2865:..\src/command_processing.c ****     
2866:..\src/command_processing.c ****     // Oldest samples of the vector
2867:..\src/command_processing.c ****     for (int i = 0; i < SAMPLES_FOR_EMG_HISTORY; i++){
 21788              		.loc 1 2867 0
 21789 0026 0023     		movs	r3, #0
 21790 0028 3B67     		str	r3, [r7, #112]
 21791 002a 4AE0     		b	.L818
 21792              	.L820:
2868:..\src/command_processing.c ****               
2869:..\src/command_processing.c ****         // Send line per line all the history vector
2870:..\src/command_processing.c ****         // First line (oldest) is made by values of emg_history_next_idx index (they will be the ne
2871:..\src/command_processing.c ****         v_idx = emg_history_next_idx + i;
 21793              		.loc 1 2871 0
 21794 002c 2C4B     		ldr	r3, .L821+8
 21795 002e 1B68     		ldr	r3, [r3]
 21796 0030 9AB2     		uxth	r2, r3
 21797 0032 3B6F     		ldr	r3, [r7, #112]
 21798 0034 9BB2     		uxth	r3, r3
 21799 0036 1344     		add	r3, r3, r2
 21800 0038 A7F87630 		strh	r3, [r7, #118]	@ movhi
2872:..\src/command_processing.c ****         if (v_idx > SAMPLES_FOR_EMG_HISTORY){
 21801              		.loc 1 2872 0
 21802 003c B7F87630 		ldrh	r3, [r7, #118]
 21803 0040 B3F5167F 		cmp	r3, #600
 21804 0044 05D9     		bls	.L819
2873:..\src/command_processing.c ****             v_idx -= SAMPLES_FOR_EMG_HISTORY;
 21805              		.loc 1 2873 0
 21806 0046 B7F87630 		ldrh	r3, [r7, #118]	@ movhi
 21807 004a A3F51673 		sub	r3, r3, #600
 21808 004e A7F87630 		strh	r3, [r7, #118]	@ movhi
 21809              	.L819:
2874:..\src/command_processing.c ****         }
2875:..\src/command_processing.c ****         
2876:..\src/command_processing.c ****         // Time vector is reconstructed setting oldest samples as t=0.0s
2877:..\src/command_processing.c ****         sprintf(str_data, "%.1f,%u,%u\n", h_time, emg_history[v_idx][0], emg_history[v_idx][1]);
 21810              		.loc 1 2877 0 discriminator 2
 21811 0052 244B     		ldr	r3, .L821+12
 21812 0054 1B68     		ldr	r3, [r3]	@ float
 21813 0056 1846     		mov	r0, r3
 21814 0058 FFF7FEFF 		bl	__aeabi_f2d
 21815 005c 0446     		mov	r4, r0
 21816 005e 0D46     		mov	r5, r1
 21817 0060 B7F87630 		ldrh	r3, [r7, #118]
 21818 0064 204A     		ldr	r2, .L821+16
 21819 0066 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 21820 006a 1946     		mov	r1, r3
 21821 006c B7F87630 		ldrh	r3, [r7, #118]
 21822 0070 1D4A     		ldr	r2, .L821+16
 21823 0072 9B00     		lsls	r3, r3, #2
 21824 0074 1344     		add	r3, r3, r2
 21825 0076 5B88     		ldrh	r3, [r3, #2]
 21826 0078 07F10C00 		add	r0, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 478


 21827 007c 0193     		str	r3, [sp, #4]
 21828 007e 0091     		str	r1, [sp]
 21829 0080 2246     		mov	r2, r4
 21830 0082 2B46     		mov	r3, r5
 21831 0084 1949     		ldr	r1, .L821+20
 21832 0086 FFF7FEFF 		bl	sprintf
2878:..\src/command_processing.c ****         
2879:..\src/command_processing.c ****         strcat(info_string, str_data);
 21833              		.loc 1 2879 0 discriminator 2
 21834 008a 07F10C03 		add	r3, r7, #12
 21835 008e 1946     		mov	r1, r3
 21836 0090 7868     		ldr	r0, [r7, #4]
 21837 0092 FFF7FEFF 		bl	strcat
2880:..\src/command_processing.c ****         
2881:..\src/command_processing.c ****         h_time += 0.2;      // Row time interval is 200ms (5Hz)
 21838              		.loc 1 2881 0 discriminator 2
 21839 0096 134B     		ldr	r3, .L821+12
 21840 0098 1B68     		ldr	r3, [r3]	@ float
 21841 009a 1846     		mov	r0, r3
 21842 009c FFF7FEFF 		bl	__aeabi_f2d
 21843 00a0 0DA3     		adr	r3, .L821
 21844 00a2 D3E90023 		ldrd	r2, [r3]
 21845 00a6 FFF7FEFF 		bl	__aeabi_dadd
 21846 00aa 0346     		mov	r3, r0
 21847 00ac 0C46     		mov	r4, r1
 21848 00ae 1846     		mov	r0, r3
 21849 00b0 2146     		mov	r1, r4
 21850 00b2 FFF7FEFF 		bl	__aeabi_d2f
 21851 00b6 0246     		mov	r2, r0
 21852 00b8 0A4B     		ldr	r3, .L821+12
 21853 00ba 1A60     		str	r2, [r3]	@ float
2867:..\src/command_processing.c ****               
 21854              		.loc 1 2867 0 discriminator 2
 21855 00bc 3B6F     		ldr	r3, [r7, #112]
 21856 00be 0133     		adds	r3, r3, #1
 21857 00c0 3B67     		str	r3, [r7, #112]
 21858              	.L818:
2867:..\src/command_processing.c ****               
 21859              		.loc 1 2867 0 is_stmt 0 discriminator 1
 21860 00c2 3B6F     		ldr	r3, [r7, #112]
 21861 00c4 B3F5167F 		cmp	r3, #600
 21862 00c8 B0DB     		blt	.L820
 21863              	.LBE29:
2882:..\src/command_processing.c **** 
2883:..\src/command_processing.c ****     }
2884:..\src/command_processing.c ****     
2885:..\src/command_processing.c **** }
 21864              		.loc 1 2885 0 is_stmt 1
 21865 00ca 00BF     		nop
 21866 00cc 7837     		adds	r7, r7, #120
 21867              		.cfi_def_cfa_offset 16
 21868 00ce BD46     		mov	sp, r7
 21869              		.cfi_def_cfa_register 13
 21870              		@ sp needed
 21871 00d0 B0BD     		pop	{r4, r5, r7, pc}
 21872              	.L822:
 21873 00d2 00BFAFF3 		.align	3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 479


 21873      0080
 21874              	.L821:
 21875 00d8 9A999999 		.word	-1717986918
 21876 00dc 9999C93F 		.word	1070176665
 21877 00e0 00000000 		.word	emg_history_next_idx
 21878 00e4 00000000 		.word	h_time.11318
 21879 00e8 00000000 		.word	emg_history
 21880 00ec 1C210000 		.word	.LC312
 21881              		.cfi_endproc
 21882              	.LFE79:
 21883              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 21884              		.section	.rodata
 21885              		.align	2
 21886              	.LC313:
 21887 2128 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 21887      4F525320 
 21887      494E464F 
 21887      0D0A00
 21888 2137 00       		.align	2
 21889              	.LC314:
 21890 2138 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 21890      3A202564 
 21890      09256409 
 21890      25640D0A 
 21890      00
 21891 2149 000000   		.align	2
 21892              	.LC315:
 21893 214c 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 21893      6F3A2025 
 21893      64092564 
 21893      0925640D 
 21893      0A00
 21894 215e 0000     		.align	2
 21895              	.LC316:
 21896 2160 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 21896      3A202564 
 21896      09256409 
 21896      25640D0A 
 21896      00
 21897 2171 000000   		.align	2
 21898              	.LC317:
 21899 2174 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 21899      743A2025 
 21899      2E336609 
 21899      252E3366 
 21899      09252E33 
 21900 2191 000000   		.align	2
 21901              	.LC318:
 21902 2194 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 21902      70657261 
 21902      74757265 
 21902      3A202564 
 21902      0D0A00
 21903              		.section	.text.IMU_reading_info,"ax",%progbits
 21904              		.align	2
 21905              		.global	IMU_reading_info
 21906              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 480


 21907              		.thumb_func
 21908              		.type	IMU_reading_info, %function
 21909              	IMU_reading_info:
 21910              	.LFB80:
2886:..\src/command_processing.c **** 
2887:..\src/command_processing.c **** //==============================================================================
2888:..\src/command_processing.c **** //                                                              IMU READING INFO
2889:..\src/command_processing.c **** //==============================================================================
2890:..\src/command_processing.c **** 
2891:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2892:..\src/command_processing.c **** {
 21911              		.loc 1 2892 0
 21912              		.cfi_startproc
 21913              		@ args = 0, pretend = 0, frame = 312
 21914              		@ frame_needed = 1, uses_anonymous_args = 0
 21915 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 21916              		.cfi_def_cfa_offset 32
 21917              		.cfi_offset 4, -32
 21918              		.cfi_offset 5, -28
 21919              		.cfi_offset 7, -24
 21920              		.cfi_offset 8, -20
 21921              		.cfi_offset 9, -16
 21922              		.cfi_offset 10, -12
 21923              		.cfi_offset 11, -8
 21924              		.cfi_offset 14, -4
 21925 0004 D4B0     		sub	sp, sp, #336
 21926              		.cfi_def_cfa_offset 368
 21927 0006 06AF     		add	r7, sp, #24
 21928              		.cfi_def_cfa 7, 344
 21929 0008 3B1D     		adds	r3, r7, #4
 21930 000a 1860     		str	r0, [r3]
2893:..\src/command_processing.c ****     char str[300];  
2894:..\src/command_processing.c ****     int i;
2895:..\src/command_processing.c ****                  
2896:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 21931              		.loc 1 2896 0
 21932 000c 3B1D     		adds	r3, r7, #4
 21933 000e 1868     		ldr	r0, [r3]
 21934 0010 FFF7FEFF 		bl	strlen
 21935 0014 0346     		mov	r3, r0
 21936 0016 1A46     		mov	r2, r3
 21937 0018 3B1D     		adds	r3, r7, #4
 21938 001a 1B68     		ldr	r3, [r3]
 21939 001c 1344     		add	r3, r3, r2
 21940 001e C94A     		ldr	r2, .L831
 21941 0020 1C46     		mov	r4, r3
 21942 0022 1346     		mov	r3, r2
 21943 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 21944 0026 2060     		str	r0, [r4]	@ unaligned
 21945 0028 6160     		str	r1, [r4, #4]	@ unaligned
 21946 002a A260     		str	r2, [r4, #8]	@ unaligned
 21947 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 21948 002e 9B78     		ldrb	r3, [r3, #2]
 21949 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 21950 0032 A373     		strb	r3, [r4, #14]
2897:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 21951              		.loc 1 2897 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 481


 21952 0034 0023     		movs	r3, #0
 21953 0036 C7F83431 		str	r3, [r7, #308]
 21954 003a 66E1     		b	.L824
 21955              	.L830:
2898:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21956              		.loc 1 2898 0
 21957 003c C24A     		ldr	r2, .L831+4
 21958 003e D7F83431 		ldr	r3, [r7, #308]
 21959 0042 1344     		add	r3, r3, r2
 21960 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21961 0046 07F10800 		add	r0, r7, #8
 21962 004a D7F83421 		ldr	r2, [r7, #308]
 21963 004e BF49     		ldr	r1, .L831+8
 21964 0050 FFF7FEFF 		bl	sprintf
2899:..\src/command_processing.c ****         strcat(info_string, str);
 21965              		.loc 1 2899 0
 21966 0054 07F10802 		add	r2, r7, #8
 21967 0058 3B1D     		adds	r3, r7, #4
 21968 005a 1146     		mov	r1, r2
 21969 005c 1868     		ldr	r0, [r3]
 21970 005e FFF7FEFF 		bl	strcat
2900:..\src/command_processing.c ****         
2901:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 21971              		.loc 1 2901 0
 21972 0062 B94A     		ldr	r2, .L831+4
 21973 0064 D7F83431 		ldr	r3, [r7, #308]
 21974 0068 1344     		add	r3, r3, r2
 21975 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21976 006c 1946     		mov	r1, r3
 21977 006e B84A     		ldr	r2, .L831+12
 21978 0070 0B46     		mov	r3, r1
 21979 0072 9B00     		lsls	r3, r3, #2
 21980 0074 0B44     		add	r3, r3, r1
 21981 0076 1344     		add	r3, r3, r2
 21982 0078 03F20223 		addw	r3, r3, #514
 21983 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21984 007e 002B     		cmp	r3, #0
 21985 0080 31D0     		beq	.L825
2902:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 21986              		.loc 1 2902 0
 21987 0082 B449     		ldr	r1, .L831+16
 21988 0084 D7F83421 		ldr	r2, [r7, #308]
 21989 0088 1346     		mov	r3, r2
 21990 008a 9B00     		lsls	r3, r3, #2
 21991 008c 1344     		add	r3, r3, r2
 21992 008e DB00     		lsls	r3, r3, #3
 21993 0090 0B44     		add	r3, r3, r1
 21994 0092 0233     		adds	r3, r3, #2
 21995 0094 B3F90030 		ldrsh	r3, [r3]
 21996 0098 1C46     		mov	r4, r3
 21997 009a AE49     		ldr	r1, .L831+16
 21998 009c D7F83421 		ldr	r2, [r7, #308]
 21999 00a0 1346     		mov	r3, r2
 22000 00a2 9B00     		lsls	r3, r3, #2
 22001 00a4 1344     		add	r3, r3, r2
 22002 00a6 DB00     		lsls	r3, r3, #3
 22003 00a8 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 482


 22004 00aa 0433     		adds	r3, r3, #4
 22005 00ac B3F90030 		ldrsh	r3, [r3]
 22006 00b0 1D46     		mov	r5, r3
 22007 00b2 A849     		ldr	r1, .L831+16
 22008 00b4 D7F83421 		ldr	r2, [r7, #308]
 22009 00b8 1346     		mov	r3, r2
 22010 00ba 9B00     		lsls	r3, r3, #2
 22011 00bc 1344     		add	r3, r3, r2
 22012 00be DB00     		lsls	r3, r3, #3
 22013 00c0 0B44     		add	r3, r3, r1
 22014 00c2 0633     		adds	r3, r3, #6
 22015 00c4 B3F90030 		ldrsh	r3, [r3]
 22016 00c8 07F10800 		add	r0, r7, #8
 22017 00cc 0093     		str	r3, [sp]
 22018 00ce 2B46     		mov	r3, r5
 22019 00d0 2246     		mov	r2, r4
 22020 00d2 A149     		ldr	r1, .L831+20
 22021 00d4 FFF7FEFF 		bl	sprintf
2903:..\src/command_processing.c ****             strcat(info_string, str);
 22022              		.loc 1 2903 0
 22023 00d8 07F10802 		add	r2, r7, #8
 22024 00dc 3B1D     		adds	r3, r7, #4
 22025 00de 1146     		mov	r1, r2
 22026 00e0 1868     		ldr	r0, [r3]
 22027 00e2 FFF7FEFF 		bl	strcat
 22028              	.L825:
2904:..\src/command_processing.c ****         }
2905:..\src/command_processing.c **** 
2906:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 22029              		.loc 1 2906 0
 22030 00e6 984A     		ldr	r2, .L831+4
 22031 00e8 D7F83431 		ldr	r3, [r7, #308]
 22032 00ec 1344     		add	r3, r3, r2
 22033 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22034 00f0 1946     		mov	r1, r3
 22035 00f2 974A     		ldr	r2, .L831+12
 22036 00f4 0B46     		mov	r3, r1
 22037 00f6 9B00     		lsls	r3, r3, #2
 22038 00f8 0B44     		add	r3, r3, r1
 22039 00fa 1344     		add	r3, r3, r2
 22040 00fc 03F20323 		addw	r3, r3, #515
 22041 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22042 0102 002B     		cmp	r3, #0
 22043 0104 31D0     		beq	.L826
2907:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 22044              		.loc 1 2907 0
 22045 0106 9349     		ldr	r1, .L831+16
 22046 0108 D7F83421 		ldr	r2, [r7, #308]
 22047 010c 1346     		mov	r3, r2
 22048 010e 9B00     		lsls	r3, r3, #2
 22049 0110 1344     		add	r3, r3, r2
 22050 0112 DB00     		lsls	r3, r3, #3
 22051 0114 0B44     		add	r3, r3, r1
 22052 0116 0833     		adds	r3, r3, #8
 22053 0118 B3F90030 		ldrsh	r3, [r3]
 22054 011c 1C46     		mov	r4, r3
 22055 011e 8D49     		ldr	r1, .L831+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 483


 22056 0120 D7F83421 		ldr	r2, [r7, #308]
 22057 0124 1346     		mov	r3, r2
 22058 0126 9B00     		lsls	r3, r3, #2
 22059 0128 1344     		add	r3, r3, r2
 22060 012a DB00     		lsls	r3, r3, #3
 22061 012c 0B44     		add	r3, r3, r1
 22062 012e 0A33     		adds	r3, r3, #10
 22063 0130 B3F90030 		ldrsh	r3, [r3]
 22064 0134 1D46     		mov	r5, r3
 22065 0136 8749     		ldr	r1, .L831+16
 22066 0138 D7F83421 		ldr	r2, [r7, #308]
 22067 013c 1346     		mov	r3, r2
 22068 013e 9B00     		lsls	r3, r3, #2
 22069 0140 1344     		add	r3, r3, r2
 22070 0142 DB00     		lsls	r3, r3, #3
 22071 0144 0B44     		add	r3, r3, r1
 22072 0146 0C33     		adds	r3, r3, #12
 22073 0148 B3F90030 		ldrsh	r3, [r3]
 22074 014c 07F10800 		add	r0, r7, #8
 22075 0150 0093     		str	r3, [sp]
 22076 0152 2B46     		mov	r3, r5
 22077 0154 2246     		mov	r2, r4
 22078 0156 8149     		ldr	r1, .L831+24
 22079 0158 FFF7FEFF 		bl	sprintf
2908:..\src/command_processing.c ****             strcat(info_string, str);
 22080              		.loc 1 2908 0
 22081 015c 07F10802 		add	r2, r7, #8
 22082 0160 3B1D     		adds	r3, r7, #4
 22083 0162 1146     		mov	r1, r2
 22084 0164 1868     		ldr	r0, [r3]
 22085 0166 FFF7FEFF 		bl	strcat
 22086              	.L826:
2909:..\src/command_processing.c ****         }
2910:..\src/command_processing.c **** 
2911:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 22087              		.loc 1 2911 0
 22088 016a 774A     		ldr	r2, .L831+4
 22089 016c D7F83431 		ldr	r3, [r7, #308]
 22090 0170 1344     		add	r3, r3, r2
 22091 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22092 0174 1946     		mov	r1, r3
 22093 0176 764A     		ldr	r2, .L831+12
 22094 0178 0B46     		mov	r3, r1
 22095 017a 9B00     		lsls	r3, r3, #2
 22096 017c 0B44     		add	r3, r3, r1
 22097 017e 1344     		add	r3, r3, r2
 22098 0180 03F50173 		add	r3, r3, #516
 22099 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22100 0186 002B     		cmp	r3, #0
 22101 0188 31D0     		beq	.L827
2912:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 22102              		.loc 1 2912 0
 22103 018a 7249     		ldr	r1, .L831+16
 22104 018c D7F83421 		ldr	r2, [r7, #308]
 22105 0190 1346     		mov	r3, r2
 22106 0192 9B00     		lsls	r3, r3, #2
 22107 0194 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 484


 22108 0196 DB00     		lsls	r3, r3, #3
 22109 0198 0B44     		add	r3, r3, r1
 22110 019a 0E33     		adds	r3, r3, #14
 22111 019c B3F90030 		ldrsh	r3, [r3]
 22112 01a0 1C46     		mov	r4, r3
 22113 01a2 6C49     		ldr	r1, .L831+16
 22114 01a4 D7F83421 		ldr	r2, [r7, #308]
 22115 01a8 1346     		mov	r3, r2
 22116 01aa 9B00     		lsls	r3, r3, #2
 22117 01ac 1344     		add	r3, r3, r2
 22118 01ae DB00     		lsls	r3, r3, #3
 22119 01b0 0B44     		add	r3, r3, r1
 22120 01b2 1033     		adds	r3, r3, #16
 22121 01b4 B3F90030 		ldrsh	r3, [r3]
 22122 01b8 1D46     		mov	r5, r3
 22123 01ba 6649     		ldr	r1, .L831+16
 22124 01bc D7F83421 		ldr	r2, [r7, #308]
 22125 01c0 1346     		mov	r3, r2
 22126 01c2 9B00     		lsls	r3, r3, #2
 22127 01c4 1344     		add	r3, r3, r2
 22128 01c6 DB00     		lsls	r3, r3, #3
 22129 01c8 0B44     		add	r3, r3, r1
 22130 01ca 1233     		adds	r3, r3, #18
 22131 01cc B3F90030 		ldrsh	r3, [r3]
 22132 01d0 07F10800 		add	r0, r7, #8
 22133 01d4 0093     		str	r3, [sp]
 22134 01d6 2B46     		mov	r3, r5
 22135 01d8 2246     		mov	r2, r4
 22136 01da 6149     		ldr	r1, .L831+28
 22137 01dc FFF7FEFF 		bl	sprintf
2913:..\src/command_processing.c ****             strcat(info_string, str);
 22138              		.loc 1 2913 0
 22139 01e0 07F10802 		add	r2, r7, #8
 22140 01e4 3B1D     		adds	r3, r7, #4
 22141 01e6 1146     		mov	r1, r2
 22142 01e8 1868     		ldr	r0, [r3]
 22143 01ea FFF7FEFF 		bl	strcat
 22144              	.L827:
2914:..\src/command_processing.c ****         }
2915:..\src/command_processing.c ****         
2916:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 22145              		.loc 1 2916 0
 22146 01ee 564A     		ldr	r2, .L831+4
 22147 01f0 D7F83431 		ldr	r3, [r7, #308]
 22148 01f4 1344     		add	r3, r3, r2
 22149 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22150 01f8 1946     		mov	r1, r3
 22151 01fa 554A     		ldr	r2, .L831+12
 22152 01fc 0B46     		mov	r3, r1
 22153 01fe 9B00     		lsls	r3, r3, #2
 22154 0200 0B44     		add	r3, r3, r1
 22155 0202 1344     		add	r3, r3, r2
 22156 0204 03F20523 		addw	r3, r3, #517
 22157 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22158 020a 002B     		cmp	r3, #0
 22159 020c 4FD0     		beq	.L828
2917:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 485


 22160              		.loc 1 2917 0
 22161 020e 5149     		ldr	r1, .L831+16
 22162 0210 D7F83421 		ldr	r2, [r7, #308]
 22163 0214 1346     		mov	r3, r2
 22164 0216 9B00     		lsls	r3, r3, #2
 22165 0218 1344     		add	r3, r3, r2
 22166 021a DB00     		lsls	r3, r3, #3
 22167 021c 0B44     		add	r3, r3, r1
 22168 021e 1433     		adds	r3, r3, #20
 22169 0220 1B68     		ldr	r3, [r3]	@ float
 22170 0222 1846     		mov	r0, r3
 22171 0224 FFF7FEFF 		bl	__aeabi_f2d
 22172 0228 8246     		mov	r10, r0
 22173 022a 8B46     		mov	fp, r1
 22174 022c 4949     		ldr	r1, .L831+16
 22175 022e D7F83421 		ldr	r2, [r7, #308]
 22176 0232 1346     		mov	r3, r2
 22177 0234 9B00     		lsls	r3, r3, #2
 22178 0236 1344     		add	r3, r3, r2
 22179 0238 DB00     		lsls	r3, r3, #3
 22180 023a 0B44     		add	r3, r3, r1
 22181 023c 1833     		adds	r3, r3, #24
 22182 023e 1B68     		ldr	r3, [r3]	@ float
 22183 0240 1846     		mov	r0, r3
 22184 0242 FFF7FEFF 		bl	__aeabi_f2d
 22185 0246 0446     		mov	r4, r0
 22186 0248 0D46     		mov	r5, r1
 22187 024a 4249     		ldr	r1, .L831+16
 22188 024c D7F83421 		ldr	r2, [r7, #308]
 22189 0250 1346     		mov	r3, r2
 22190 0252 9B00     		lsls	r3, r3, #2
 22191 0254 1344     		add	r3, r3, r2
 22192 0256 DB00     		lsls	r3, r3, #3
 22193 0258 0B44     		add	r3, r3, r1
 22194 025a 1C33     		adds	r3, r3, #28
 22195 025c 1B68     		ldr	r3, [r3]	@ float
 22196 025e 1846     		mov	r0, r3
 22197 0260 FFF7FEFF 		bl	__aeabi_f2d
 22198 0264 8046     		mov	r8, r0
 22199 0266 8946     		mov	r9, r1
 22200 0268 3A49     		ldr	r1, .L831+16
 22201 026a D7F83421 		ldr	r2, [r7, #308]
 22202 026e 1346     		mov	r3, r2
 22203 0270 9B00     		lsls	r3, r3, #2
 22204 0272 1344     		add	r3, r3, r2
 22205 0274 DB00     		lsls	r3, r3, #3
 22206 0276 0B44     		add	r3, r3, r1
 22207 0278 2033     		adds	r3, r3, #32
 22208 027a 1B68     		ldr	r3, [r3]	@ float
 22209 027c 1846     		mov	r0, r3
 22210 027e FFF7FEFF 		bl	__aeabi_f2d
 22211 0282 0246     		mov	r2, r0
 22212 0284 0B46     		mov	r3, r1
 22213 0286 07F10800 		add	r0, r7, #8
 22214 028a CDE90423 		strd	r2, [sp, #16]
 22215 028e CDE90289 		strd	r8, [sp, #8]
 22216 0292 CDE90045 		strd	r4, [sp]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 486


 22217 0296 5246     		mov	r2, r10
 22218 0298 5B46     		mov	r3, fp
 22219 029a 3249     		ldr	r1, .L831+32
 22220 029c FFF7FEFF 		bl	sprintf
2918:..\src/command_processing.c ****             strcat(info_string, str);
 22221              		.loc 1 2918 0
 22222 02a0 07F10802 		add	r2, r7, #8
 22223 02a4 3B1D     		adds	r3, r7, #4
 22224 02a6 1146     		mov	r1, r2
 22225 02a8 1868     		ldr	r0, [r3]
 22226 02aa FFF7FEFF 		bl	strcat
 22227              	.L828:
2919:..\src/command_processing.c ****         }
2920:..\src/command_processing.c ****         
2921:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 22228              		.loc 1 2921 0
 22229 02ae 264A     		ldr	r2, .L831+4
 22230 02b0 D7F83431 		ldr	r3, [r7, #308]
 22231 02b4 1344     		add	r3, r3, r2
 22232 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22233 02b8 1946     		mov	r1, r3
 22234 02ba 254A     		ldr	r2, .L831+12
 22235 02bc 0B46     		mov	r3, r1
 22236 02be 9B00     		lsls	r3, r3, #2
 22237 02c0 0B44     		add	r3, r3, r1
 22238 02c2 1344     		add	r3, r3, r2
 22239 02c4 03F20623 		addw	r3, r3, #518
 22240 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22241 02ca 002B     		cmp	r3, #0
 22242 02cc 18D0     		beq	.L829
2922:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 22243              		.loc 1 2922 0
 22244 02ce 2149     		ldr	r1, .L831+16
 22245 02d0 D7F83421 		ldr	r2, [r7, #308]
 22246 02d4 1346     		mov	r3, r2
 22247 02d6 9B00     		lsls	r3, r3, #2
 22248 02d8 1344     		add	r3, r3, r2
 22249 02da DB00     		lsls	r3, r3, #3
 22250 02dc 0B44     		add	r3, r3, r1
 22251 02de 2433     		adds	r3, r3, #36
 22252 02e0 B3F90030 		ldrsh	r3, [r3]
 22253 02e4 1A46     		mov	r2, r3
 22254 02e6 07F10803 		add	r3, r7, #8
 22255 02ea 1F49     		ldr	r1, .L831+36
 22256 02ec 1846     		mov	r0, r3
 22257 02ee FFF7FEFF 		bl	sprintf
2923:..\src/command_processing.c ****             strcat(info_string, str);
 22258              		.loc 1 2923 0
 22259 02f2 07F10802 		add	r2, r7, #8
 22260 02f6 3B1D     		adds	r3, r7, #4
 22261 02f8 1146     		mov	r1, r2
 22262 02fa 1868     		ldr	r0, [r3]
 22263 02fc FFF7FEFF 		bl	strcat
 22264              	.L829:
2897:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 22265              		.loc 1 2897 0 discriminator 2
 22266 0300 D7F83431 		ldr	r3, [r7, #308]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 487


 22267 0304 0133     		adds	r3, r3, #1
 22268 0306 C7F83431 		str	r3, [r7, #308]
 22269              	.L824:
2897:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 22270              		.loc 1 2897 0 is_stmt 0 discriminator 1
 22271 030a 184B     		ldr	r3, .L831+40
 22272 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22273 030e 1A46     		mov	r2, r3
 22274 0310 D7F83431 		ldr	r3, [r7, #308]
 22275 0314 9A42     		cmp	r2, r3
 22276 0316 3FF791AE 		bgt	.L830
2924:..\src/command_processing.c ****         }
2925:..\src/command_processing.c ****         
2926:..\src/command_processing.c ****     }
2927:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 22277              		.loc 1 2927 0 is_stmt 1
 22278 031a 3B1D     		adds	r3, r7, #4
 22279 031c 1868     		ldr	r0, [r3]
 22280 031e FFF7FEFF 		bl	strlen
 22281 0322 0346     		mov	r3, r0
 22282 0324 1A46     		mov	r2, r3
 22283 0326 3B1D     		adds	r3, r7, #4
 22284 0328 1B68     		ldr	r3, [r3]
 22285 032a 1344     		add	r3, r3, r2
 22286 032c 104A     		ldr	r2, .L831+44
 22287 032e 1188     		ldrh	r1, [r2]	@ unaligned
 22288 0330 9278     		ldrb	r2, [r2, #2]
 22289 0332 1980     		strh	r1, [r3]	@ unaligned
 22290 0334 9A70     		strb	r2, [r3, #2]
2928:..\src/command_processing.c **** }
 22291              		.loc 1 2928 0
 22292 0336 00BF     		nop
 22293 0338 07F59C77 		add	r7, r7, #312
 22294              		.cfi_def_cfa_offset 32
 22295 033c BD46     		mov	sp, r7
 22296              		.cfi_def_cfa_register 13
 22297              		@ sp needed
 22298 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 22299              	.L832:
 22300 0342 00BF     		.align	2
 22301              	.L831:
 22302 0344 28210000 		.word	.LC313
 22303 0348 00000000 		.word	IMU_connected
 22304 034c 101B0000 		.word	.LC255
 22305 0350 00000000 		.word	c_mem
 22306 0354 00000000 		.word	g_imu
 22307 0358 38210000 		.word	.LC314
 22308 035c 4C210000 		.word	.LC315
 22309 0360 60210000 		.word	.LC316
 22310 0364 74210000 		.word	.LC317
 22311 0368 94210000 		.word	.LC318
 22312 036c 00000000 		.word	N_IMU_Connected
 22313 0370 58110000 		.word	.LC152
 22314              		.cfi_endproc
 22315              	.LFE80:
 22316              		.size	IMU_reading_info, .-IMU_reading_info
 22317              		.section	.text.commWrite_old_id,"ax",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 488


 22318              		.align	2
 22319              		.global	commWrite_old_id
 22320              		.thumb
 22321              		.thumb_func
 22322              		.type	commWrite_old_id, %function
 22323              	commWrite_old_id:
 22324              	.LFB81:
2929:..\src/command_processing.c **** 
2930:..\src/command_processing.c **** //==============================================================================
2931:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2932:..\src/command_processing.c **** //==============================================================================
2933:..\src/command_processing.c **** 
2934:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_length, uint8 old_id)
2935:..\src/command_processing.c **** {
 22325              		.loc 1 2935 0
 22326              		.cfi_startproc
 22327              		@ args = 0, pretend = 0, frame = 16
 22328              		@ frame_needed = 1, uses_anonymous_args = 0
 22329 0000 80B5     		push	{r7, lr}
 22330              		.cfi_def_cfa_offset 8
 22331              		.cfi_offset 7, -8
 22332              		.cfi_offset 14, -4
 22333 0002 84B0     		sub	sp, sp, #16
 22334              		.cfi_def_cfa_offset 24
 22335 0004 00AF     		add	r7, sp, #0
 22336              		.cfi_def_cfa_register 7
 22337 0006 7860     		str	r0, [r7, #4]
 22338 0008 0B46     		mov	r3, r1
 22339 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 22340 000c 1346     		mov	r3, r2
 22341 000e 7B70     		strb	r3, [r7, #1]
2936:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2937:..\src/command_processing.c **** 
2938:..\src/command_processing.c ****     // frame - start
2939:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 22342              		.loc 1 2939 0
 22343 0010 3A20     		movs	r0, #58
 22344 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2940:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 22345              		.loc 1 2940 0
 22346 0016 3A20     		movs	r0, #58
 22347 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2941:..\src/command_processing.c ****     // frame - ID
2942:..\src/command_processing.c ****     //if(old_id)
2943:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 22348              		.loc 1 2943 0
 22349 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 22350 001e 1846     		mov	r0, r3
 22351 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2944:..\src/command_processing.c ****     //else
2945:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2946:..\src/command_processing.c ****         
2947:..\src/command_processing.c ****     // frame - length
2948:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 22352              		.loc 1 2948 0
 22353 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 22354 0026 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 489


 22355 0028 1846     		mov	r0, r3
 22356 002a FFF7FEFF 		bl	UART_RS485_PutChar
2949:..\src/command_processing.c ****     // frame - packet data
2950:..\src/command_processing.c ****     for(index = 0; index < packet_length; ++index) {
 22357              		.loc 1 2950 0
 22358 002e 0023     		movs	r3, #0
 22359 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 22360 0032 09E0     		b	.L834
 22361              	.L835:
2951:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 22362              		.loc 1 2951 0 discriminator 3
 22363 0034 FB89     		ldrh	r3, [r7, #14]
 22364 0036 7A68     		ldr	r2, [r7, #4]
 22365 0038 1344     		add	r3, r3, r2
 22366 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22367 003c 1846     		mov	r0, r3
 22368 003e FFF7FEFF 		bl	UART_RS485_PutChar
2950:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 22369              		.loc 1 2950 0 discriminator 3
 22370 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 22371 0044 0133     		adds	r3, r3, #1
 22372 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 22373              	.L834:
2950:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 22374              		.loc 1 2950 0 is_stmt 0 discriminator 1
 22375 0048 FA89     		ldrh	r2, [r7, #14]
 22376 004a 7B88     		ldrh	r3, [r7, #2]
 22377 004c 9A42     		cmp	r2, r3
 22378 004e F1D3     		bcc	.L835
2952:..\src/command_processing.c ****     }
2953:..\src/command_processing.c **** 
2954:..\src/command_processing.c ****     index = 0;
 22379              		.loc 1 2954 0 is_stmt 1
 22380 0050 0023     		movs	r3, #0
 22381 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2955:..\src/command_processing.c **** 
2956:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 22382              		.loc 1 2956 0
 22383 0054 00BF     		nop
 22384              	.L837:
 22385              		.loc 1 2956 0 is_stmt 0 discriminator 2
 22386 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 22387 005a 0346     		mov	r3, r0
 22388 005c 03F00103 		and	r3, r3, #1
 22389 0060 002B     		cmp	r3, #0
 22390 0062 05D1     		bne	.L836
 22391              		.loc 1 2956 0 discriminator 1
 22392 0064 FB89     		ldrh	r3, [r7, #14]
 22393 0066 5A1C     		adds	r2, r3, #1
 22394 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 22395 006a B3F57A7F 		cmp	r3, #1000
 22396 006e F2D9     		bls	.L837
 22397              	.L836:
2957:..\src/command_processing.c **** 
2958:..\src/command_processing.c ****     RS485_CTS_Write(1);
 22398              		.loc 1 2958 0 is_stmt 1
 22399 0070 0120     		movs	r0, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 490


 22400 0072 FFF7FEFF 		bl	RS485_CTS_Write
2959:..\src/command_processing.c ****     RS485_CTS_Write(0);
 22401              		.loc 1 2959 0
 22402 0076 0020     		movs	r0, #0
 22403 0078 FFF7FEFF 		bl	RS485_CTS_Write
2960:..\src/command_processing.c **** }
 22404              		.loc 1 2960 0
 22405 007c 00BF     		nop
 22406 007e 1037     		adds	r7, r7, #16
 22407              		.cfi_def_cfa_offset 8
 22408 0080 BD46     		mov	sp, r7
 22409              		.cfi_def_cfa_register 13
 22410              		@ sp needed
 22411 0082 80BD     		pop	{r7, pc}
 22412              		.cfi_endproc
 22413              	.LFE81:
 22414              		.size	commWrite_old_id, .-commWrite_old_id
 22415              		.section	.text.commWrite,"ax",%progbits
 22416              		.align	2
 22417              		.global	commWrite
 22418              		.thumb
 22419              		.thumb_func
 22420              		.type	commWrite, %function
 22421              	commWrite:
 22422              	.LFB82:
2961:..\src/command_processing.c **** 
2962:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_length)
2963:..\src/command_processing.c **** {
 22423              		.loc 1 2963 0
 22424              		.cfi_startproc
 22425              		@ args = 0, pretend = 0, frame = 16
 22426              		@ frame_needed = 1, uses_anonymous_args = 0
 22427 0000 80B5     		push	{r7, lr}
 22428              		.cfi_def_cfa_offset 8
 22429              		.cfi_offset 7, -8
 22430              		.cfi_offset 14, -4
 22431 0002 84B0     		sub	sp, sp, #16
 22432              		.cfi_def_cfa_offset 24
 22433 0004 00AF     		add	r7, sp, #0
 22434              		.cfi_def_cfa_register 7
 22435 0006 7860     		str	r0, [r7, #4]
 22436 0008 0B46     		mov	r3, r1
 22437 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2964:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2965:..\src/command_processing.c **** 
2966:..\src/command_processing.c ****     // frame - start
2967:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 22438              		.loc 1 2967 0
 22439 000c 3A20     		movs	r0, #58
 22440 000e FFF7FEFF 		bl	UART_RS485_PutChar
2968:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 22441              		.loc 1 2968 0
 22442 0012 3A20     		movs	r0, #58
 22443 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2969:..\src/command_processing.c ****     // frame - ID
2970:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 22444              		.loc 1 2970 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 491


 22445 0018 1A4B     		ldr	r3, .L843
 22446 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 22447 001e 1846     		mov	r0, r3
 22448 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2971:..\src/command_processing.c ****     // frame - length
2972:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 22449              		.loc 1 2972 0
 22450 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 22451 0026 DBB2     		uxtb	r3, r3
 22452 0028 1846     		mov	r0, r3
 22453 002a FFF7FEFF 		bl	UART_RS485_PutChar
2973:..\src/command_processing.c ****     // frame - packet data
2974:..\src/command_processing.c ****     for(index = 0; index < packet_length; ++index) {
 22454              		.loc 1 2974 0
 22455 002e 0023     		movs	r3, #0
 22456 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 22457 0032 09E0     		b	.L839
 22458              	.L840:
2975:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 22459              		.loc 1 2975 0 discriminator 3
 22460 0034 FB89     		ldrh	r3, [r7, #14]
 22461 0036 7A68     		ldr	r2, [r7, #4]
 22462 0038 1344     		add	r3, r3, r2
 22463 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22464 003c 1846     		mov	r0, r3
 22465 003e FFF7FEFF 		bl	UART_RS485_PutChar
2974:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 22466              		.loc 1 2974 0 discriminator 3
 22467 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 22468 0044 0133     		adds	r3, r3, #1
 22469 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 22470              	.L839:
2974:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 22471              		.loc 1 2974 0 is_stmt 0 discriminator 1
 22472 0048 FA89     		ldrh	r2, [r7, #14]
 22473 004a 7B88     		ldrh	r3, [r7, #2]
 22474 004c 9A42     		cmp	r2, r3
 22475 004e F1D3     		bcc	.L840
2976:..\src/command_processing.c ****     }
2977:..\src/command_processing.c **** 
2978:..\src/command_processing.c ****     index = 0;
 22476              		.loc 1 2978 0 is_stmt 1
 22477 0050 0023     		movs	r3, #0
 22478 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2979:..\src/command_processing.c **** 
2980:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 22479              		.loc 1 2980 0
 22480 0054 00BF     		nop
 22481              	.L842:
 22482              		.loc 1 2980 0 is_stmt 0 discriminator 2
 22483 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 22484 005a 0346     		mov	r3, r0
 22485 005c 03F00103 		and	r3, r3, #1
 22486 0060 002B     		cmp	r3, #0
 22487 0062 05D1     		bne	.L841
 22488              		.loc 1 2980 0 discriminator 1
 22489 0064 FB89     		ldrh	r3, [r7, #14]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 492


 22490 0066 5A1C     		adds	r2, r3, #1
 22491 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 22492 006a B3F57A7F 		cmp	r3, #1000
 22493 006e F2D9     		bls	.L842
 22494              	.L841:
2981:..\src/command_processing.c **** 
2982:..\src/command_processing.c ****     RS485_CTS_Write(1);
 22495              		.loc 1 2982 0 is_stmt 1
 22496 0070 0120     		movs	r0, #1
 22497 0072 FFF7FEFF 		bl	RS485_CTS_Write
2983:..\src/command_processing.c ****     RS485_CTS_Write(0);
 22498              		.loc 1 2983 0
 22499 0076 0020     		movs	r0, #0
 22500 0078 FFF7FEFF 		bl	RS485_CTS_Write
2984:..\src/command_processing.c **** }
 22501              		.loc 1 2984 0
 22502 007c 00BF     		nop
 22503 007e 1037     		adds	r7, r7, #16
 22504              		.cfi_def_cfa_offset 8
 22505 0080 BD46     		mov	sp, r7
 22506              		.cfi_def_cfa_register 13
 22507              		@ sp needed
 22508 0082 80BD     		pop	{r7, pc}
 22509              	.L844:
 22510              		.align	2
 22511              	.L843:
 22512 0084 00000000 		.word	g_mem
 22513              		.cfi_endproc
 22514              	.LFE82:
 22515              		.size	commWrite, .-commWrite
 22516              		.section	.text.commWriteID,"ax",%progbits
 22517              		.align	2
 22518              		.global	commWriteID
 22519              		.thumb
 22520              		.thumb_func
 22521              		.type	commWriteID, %function
 22522              	commWriteID:
 22523              	.LFB83:
2985:..\src/command_processing.c **** 
2986:..\src/command_processing.c **** //==============================================================================
2987:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2988:..\src/command_processing.c **** //==============================================================================
2989:..\src/command_processing.c **** 
2990:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_length, uint8 id)
2991:..\src/command_processing.c **** {
 22524              		.loc 1 2991 0
 22525              		.cfi_startproc
 22526              		@ args = 0, pretend = 0, frame = 8
 22527              		@ frame_needed = 1, uses_anonymous_args = 0
 22528 0000 80B5     		push	{r7, lr}
 22529              		.cfi_def_cfa_offset 8
 22530              		.cfi_offset 7, -8
 22531              		.cfi_offset 14, -4
 22532 0002 82B0     		sub	sp, sp, #8
 22533              		.cfi_def_cfa_offset 16
 22534 0004 00AF     		add	r7, sp, #0
 22535              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 493


 22536 0006 7860     		str	r0, [r7, #4]
 22537 0008 0B46     		mov	r3, r1
 22538 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 22539 000c 1346     		mov	r3, r2
 22540 000e 7B70     		strb	r3, [r7, #1]
2992:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2993:..\src/command_processing.c **** 
2994:..\src/command_processing.c ****     // frame - start
2995:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 22541              		.loc 1 2995 0
 22542 0010 3A20     		movs	r0, #58
 22543 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2996:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 22544              		.loc 1 2996 0
 22545 0016 3A20     		movs	r0, #58
 22546 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2997:..\src/command_processing.c ****     // frame - ID
2998:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 22547              		.loc 1 2998 0
 22548 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 22549 001e 1846     		mov	r0, r3
 22550 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2999:..\src/command_processing.c ****     // frame - length
3000:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 22551              		.loc 1 3000 0
 22552 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 22553 0026 DBB2     		uxtb	r3, r3
 22554 0028 1846     		mov	r0, r3
 22555 002a FFF7FEFF 		bl	UART_RS485_PutChar
3001:..\src/command_processing.c ****     // frame - packet data
3002:..\src/command_processing.c ****     for(i = 0; i < packet_length; ++i) {
 22556              		.loc 1 3002 0
 22557 002e 1B4B     		ldr	r3, .L850
 22558 0030 0022     		movs	r2, #0
 22559 0032 1A80     		strh	r2, [r3]	@ movhi
 22560 0034 0EE0     		b	.L846
 22561              	.L847:
3003:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 22562              		.loc 1 3003 0 discriminator 3
 22563 0036 194B     		ldr	r3, .L850
 22564 0038 1B88     		ldrh	r3, [r3]
 22565 003a 1A46     		mov	r2, r3
 22566 003c 7B68     		ldr	r3, [r7, #4]
 22567 003e 1344     		add	r3, r3, r2
 22568 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22569 0042 1846     		mov	r0, r3
 22570 0044 FFF7FEFF 		bl	UART_RS485_PutChar
3002:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 22571              		.loc 1 3002 0 discriminator 3
 22572 0048 144B     		ldr	r3, .L850
 22573 004a 1B88     		ldrh	r3, [r3]
 22574 004c 0133     		adds	r3, r3, #1
 22575 004e 9AB2     		uxth	r2, r3
 22576 0050 124B     		ldr	r3, .L850
 22577 0052 1A80     		strh	r2, [r3]	@ movhi
 22578              	.L846:
3002:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 494


 22579              		.loc 1 3002 0 is_stmt 0 discriminator 1
 22580 0054 114B     		ldr	r3, .L850
 22581 0056 1B88     		ldrh	r3, [r3]
 22582 0058 7A88     		ldrh	r2, [r7, #2]
 22583 005a 9A42     		cmp	r2, r3
 22584 005c EBD8     		bhi	.L847
3004:..\src/command_processing.c ****     }
3005:..\src/command_processing.c **** 
3006:..\src/command_processing.c ****     i = 0;
 22585              		.loc 1 3006 0 is_stmt 1
 22586 005e 0F4B     		ldr	r3, .L850
 22587 0060 0022     		movs	r2, #0
 22588 0062 1A80     		strh	r2, [r3]	@ movhi
3007:..\src/command_processing.c **** 
3008:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 22589              		.loc 1 3008 0
 22590 0064 00BF     		nop
 22591              	.L849:
 22592              		.loc 1 3008 0 is_stmt 0 discriminator 2
 22593 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 22594 006a 0346     		mov	r3, r0
 22595 006c 03F00103 		and	r3, r3, #1
 22596 0070 002B     		cmp	r3, #0
 22597 0072 08D1     		bne	.L848
 22598              		.loc 1 3008 0 discriminator 1
 22599 0074 094B     		ldr	r3, .L850
 22600 0076 1B88     		ldrh	r3, [r3]
 22601 0078 5A1C     		adds	r2, r3, #1
 22602 007a 91B2     		uxth	r1, r2
 22603 007c 074A     		ldr	r2, .L850
 22604 007e 1180     		strh	r1, [r2]	@ movhi
 22605 0080 B3F57A7F 		cmp	r3, #1000
 22606 0084 EFD9     		bls	.L849
 22607              	.L848:
3009:..\src/command_processing.c ****     
3010:..\src/command_processing.c ****     RS485_CTS_Write(1);
 22608              		.loc 1 3010 0 is_stmt 1
 22609 0086 0120     		movs	r0, #1
 22610 0088 FFF7FEFF 		bl	RS485_CTS_Write
3011:..\src/command_processing.c ****     RS485_CTS_Write(0);
 22611              		.loc 1 3011 0
 22612 008c 0020     		movs	r0, #0
 22613 008e FFF7FEFF 		bl	RS485_CTS_Write
3012:..\src/command_processing.c **** }
 22614              		.loc 1 3012 0
 22615 0092 00BF     		nop
 22616 0094 0837     		adds	r7, r7, #8
 22617              		.cfi_def_cfa_offset 8
 22618 0096 BD46     		mov	sp, r7
 22619              		.cfi_def_cfa_register 13
 22620              		@ sp needed
 22621 0098 80BD     		pop	{r7, pc}
 22622              	.L851:
 22623 009a 00BF     		.align	2
 22624              	.L850:
 22625 009c 04000000 		.word	i.11359
 22626              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 495


 22627              	.LFE83:
 22628              		.size	commWriteID, .-commWriteID
 22629              		.section	.text.LCRChecksum,"ax",%progbits
 22630              		.align	2
 22631              		.global	LCRChecksum
 22632              		.thumb
 22633              		.thumb_func
 22634              		.type	LCRChecksum, %function
 22635              	LCRChecksum:
 22636              	.LFB84:
3013:..\src/command_processing.c **** 
3014:..\src/command_processing.c **** //==============================================================================
3015:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
3016:..\src/command_processing.c **** //==============================================================================
3017:..\src/command_processing.c **** 
3018:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
3019:..\src/command_processing.c **** 
3020:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 22637              		.loc 1 3020 0
 22638              		.cfi_startproc
 22639              		@ args = 0, pretend = 0, frame = 16
 22640              		@ frame_needed = 1, uses_anonymous_args = 0
 22641              		@ link register save eliminated.
 22642 0000 80B4     		push	{r7}
 22643              		.cfi_def_cfa_offset 4
 22644              		.cfi_offset 7, -4
 22645 0002 85B0     		sub	sp, sp, #20
 22646              		.cfi_def_cfa_offset 24
 22647 0004 00AF     		add	r7, sp, #0
 22648              		.cfi_def_cfa_register 7
 22649 0006 7860     		str	r0, [r7, #4]
 22650 0008 0B46     		mov	r3, r1
 22651 000a FB70     		strb	r3, [r7, #3]
3021:..\src/command_processing.c ****     
3022:..\src/command_processing.c ****     uint8 CYDATA i;
3023:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 22652              		.loc 1 3023 0
 22653 000c 0023     		movs	r3, #0
 22654 000e BB73     		strb	r3, [r7, #14]
3024:..\src/command_processing.c ****     
3025:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 22655              		.loc 1 3025 0
 22656 0010 0023     		movs	r3, #0
 22657 0012 FB73     		strb	r3, [r7, #15]
 22658 0014 09E0     		b	.L853
 22659              	.L854:
3026:..\src/command_processing.c ****        checksum ^= data_array[i];
 22660              		.loc 1 3026 0 discriminator 3
 22661 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22662 0018 7A68     		ldr	r2, [r7, #4]
 22663 001a 1344     		add	r3, r3, r2
 22664 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 22665 001e BB7B     		ldrb	r3, [r7, #14]
 22666 0020 5340     		eors	r3, r3, r2
 22667 0022 BB73     		strb	r3, [r7, #14]
3025:..\src/command_processing.c ****        checksum ^= data_array[i];
 22668              		.loc 1 3025 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 496


 22669 0024 FB7B     		ldrb	r3, [r7, #15]
 22670 0026 0133     		adds	r3, r3, #1
 22671 0028 FB73     		strb	r3, [r7, #15]
 22672              	.L853:
3025:..\src/command_processing.c ****        checksum ^= data_array[i];
 22673              		.loc 1 3025 0 is_stmt 0 discriminator 1
 22674 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22675 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 22676 002e 9A42     		cmp	r2, r3
 22677 0030 F1D3     		bcc	.L854
3027:..\src/command_processing.c ****   
3028:..\src/command_processing.c ****     return checksum;
 22678              		.loc 1 3028 0 is_stmt 1
 22679 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
3029:..\src/command_processing.c **** }
 22680              		.loc 1 3029 0
 22681 0034 1846     		mov	r0, r3
 22682 0036 1437     		adds	r7, r7, #20
 22683              		.cfi_def_cfa_offset 4
 22684 0038 BD46     		mov	sp, r7
 22685              		.cfi_def_cfa_register 13
 22686              		@ sp needed
 22687 003a 80BC     		pop	{r7}
 22688              		.cfi_restore 7
 22689              		.cfi_def_cfa_offset 0
 22690 003c 7047     		bx	lr
 22691              		.cfi_endproc
 22692              	.LFE84:
 22693              		.size	LCRChecksum, .-LCRChecksum
 22694 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 22695              		.align	2
 22696              		.global	sendAcknowledgment
 22697              		.thumb
 22698              		.thumb_func
 22699              		.type	sendAcknowledgment, %function
 22700              	sendAcknowledgment:
 22701              	.LFB85:
3030:..\src/command_processing.c **** 
3031:..\src/command_processing.c **** 
3032:..\src/command_processing.c **** //==============================================================================
3033:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
3034:..\src/command_processing.c **** //==============================================================================
3035:..\src/command_processing.c **** 
3036:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 22702              		.loc 1 3036 0
 22703              		.cfi_startproc
 22704              		@ args = 0, pretend = 0, frame = 16
 22705              		@ frame_needed = 1, uses_anonymous_args = 0
 22706 0000 80B5     		push	{r7, lr}
 22707              		.cfi_def_cfa_offset 8
 22708              		.cfi_offset 7, -8
 22709              		.cfi_offset 14, -4
 22710 0002 84B0     		sub	sp, sp, #16
 22711              		.cfi_def_cfa_offset 24
 22712 0004 00AF     		add	r7, sp, #0
 22713              		.cfi_def_cfa_register 7
 22714 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 497


 22715 0008 FB71     		strb	r3, [r7, #7]
3037:..\src/command_processing.c ****     int packet_length = 2;
 22716              		.loc 1 3037 0
 22717 000a 0223     		movs	r3, #2
 22718 000c FB60     		str	r3, [r7, #12]
3038:..\src/command_processing.c ****     uint8 packet_data[2];
3039:..\src/command_processing.c **** 
3040:..\src/command_processing.c ****     packet_data[0] = value;
 22719              		.loc 1 3040 0
 22720 000e FB79     		ldrb	r3, [r7, #7]
 22721 0010 3B72     		strb	r3, [r7, #8]
3041:..\src/command_processing.c ****     packet_data[1] = value;
 22722              		.loc 1 3041 0
 22723 0012 FB79     		ldrb	r3, [r7, #7]
 22724 0014 7B72     		strb	r3, [r7, #9]
3042:..\src/command_processing.c **** 
3043:..\src/command_processing.c ****     commWrite(packet_data, packet_length);
 22725              		.loc 1 3043 0
 22726 0016 FB68     		ldr	r3, [r7, #12]
 22727 0018 9AB2     		uxth	r2, r3
 22728 001a 07F10803 		add	r3, r7, #8
 22729 001e 1146     		mov	r1, r2
 22730 0020 1846     		mov	r0, r3
 22731 0022 FFF7FEFF 		bl	commWrite
3044:..\src/command_processing.c **** }
 22732              		.loc 1 3044 0
 22733 0026 00BF     		nop
 22734 0028 1037     		adds	r7, r7, #16
 22735              		.cfi_def_cfa_offset 8
 22736 002a BD46     		mov	sp, r7
 22737              		.cfi_def_cfa_register 13
 22738              		@ sp needed
 22739 002c 80BD     		pop	{r7, pc}
 22740              		.cfi_endproc
 22741              	.LFE85:
 22742              		.size	sendAcknowledgment, .-sendAcknowledgment
 22743 002e 00BF     		.section	.text.memStore,"ax",%progbits
 22744              		.align	2
 22745              		.global	memStore
 22746              		.thumb
 22747              		.thumb_func
 22748              		.type	memStore, %function
 22749              	memStore:
 22750              	.LFB86:
3045:..\src/command_processing.c **** 
3046:..\src/command_processing.c **** //==============================================================================
3047:..\src/command_processing.c **** //                                                                  STORE MEMORY
3048:..\src/command_processing.c **** //==============================================================================
3049:..\src/command_processing.c **** 
3050:..\src/command_processing.c **** 
3051:..\src/command_processing.c **** uint8 memStore(int displacement)
3052:..\src/command_processing.c **** {
 22751              		.loc 1 3052 0
 22752              		.cfi_startproc
 22753              		@ args = 0, pretend = 0, frame = 24
 22754              		@ frame_needed = 1, uses_anonymous_args = 0
 22755 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 498


 22756              		.cfi_def_cfa_offset 8
 22757              		.cfi_offset 7, -8
 22758              		.cfi_offset 14, -4
 22759 0002 86B0     		sub	sp, sp, #24
 22760              		.cfi_def_cfa_offset 32
 22761 0004 00AF     		add	r7, sp, #0
 22762              		.cfi_def_cfa_register 7
 22763 0006 7860     		str	r0, [r7, #4]
3053:..\src/command_processing.c ****     int i;  // iterator
3054:..\src/command_processing.c ****     uint8 writeStatus;
3055:..\src/command_processing.c ****     int pages;
3056:..\src/command_processing.c ****     uint8 ret_val = 1;
 22764              		.loc 1 3056 0
 22765 0008 0123     		movs	r3, #1
 22766 000a FB74     		strb	r3, [r7, #19]
3057:..\src/command_processing.c **** 
3058:..\src/command_processing.c ****     // Disable Interrupt
3059:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 22767              		.loc 1 3059 0
 22768 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
3060:..\src/command_processing.c **** 
3061:..\src/command_processing.c ****     // Stop motor
3062:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 22769              		.loc 1 3062 0
 22770 0010 0020     		movs	r0, #0
 22771 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
3063:..\src/command_processing.c **** 
3064:..\src/command_processing.c ****     // Update temperature information for better writing performance
3065:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 22772              		.loc 1 3065 0
 22773 0016 FFF7FEFF 		bl	EEPROM_UpdateTemperature
3066:..\src/command_processing.c **** 
3067:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 22774              		.loc 1 3067 0
 22775 001a 1D4A     		ldr	r2, .L863
 22776 001c 1D4B     		ldr	r3, .L863+4
 22777 001e 1046     		mov	r0, r2
 22778 0020 1946     		mov	r1, r3
 22779 0022 4FF43D73 		mov	r3, #756
 22780 0026 1A46     		mov	r2, r3
 22781 0028 FFF7FEFF 		bl	memcpy
3068:..\src/command_processing.c **** 
3069:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 22782              		.loc 1 3069 0
 22783 002c 3023     		movs	r3, #48
 22784 002e FB60     		str	r3, [r7, #12]
3070:..\src/command_processing.c **** 
3071:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 22785              		.loc 1 3071 0
 22786 0030 0023     		movs	r3, #0
 22787 0032 7B61     		str	r3, [r7, #20]
 22788 0034 18E0     		b	.L858
 22789              	.L861:
3072:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22790              		.loc 1 3072 0
 22791 0036 7B69     		ldr	r3, [r7, #20]
 22792 0038 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 499


 22793 003a 1A46     		mov	r2, r3
 22794 003c 154B     		ldr	r3, .L863+4
 22795 003e D018     		adds	r0, r2, r3
 22796 0040 7B69     		ldr	r3, [r7, #20]
 22797 0042 DAB2     		uxtb	r2, r3
 22798 0044 7B68     		ldr	r3, [r7, #4]
 22799 0046 DBB2     		uxtb	r3, r3
 22800 0048 1344     		add	r3, r3, r2
 22801 004a DBB2     		uxtb	r3, r3
 22802 004c 1946     		mov	r1, r3
 22803 004e FFF7FEFF 		bl	EEPROM_Write
 22804 0052 0346     		mov	r3, r0
 22805 0054 FB72     		strb	r3, [r7, #11]
3073:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 22806              		.loc 1 3073 0
 22807 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 22808 0058 002B     		cmp	r3, #0
 22809 005a 02D0     		beq	.L859
3074:..\src/command_processing.c ****             ret_val = 0;
 22810              		.loc 1 3074 0
 22811 005c 0023     		movs	r3, #0
 22812 005e FB74     		strb	r3, [r7, #19]
3075:..\src/command_processing.c ****             break;
 22813              		.loc 1 3075 0
 22814 0060 06E0     		b	.L860
 22815              	.L859:
3071:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22816              		.loc 1 3071 0 discriminator 2
 22817 0062 7B69     		ldr	r3, [r7, #20]
 22818 0064 0133     		adds	r3, r3, #1
 22819 0066 7B61     		str	r3, [r7, #20]
 22820              	.L858:
3071:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22821              		.loc 1 3071 0 is_stmt 0 discriminator 1
 22822 0068 7A69     		ldr	r2, [r7, #20]
 22823 006a FB68     		ldr	r3, [r7, #12]
 22824 006c 9A42     		cmp	r2, r3
 22825 006e E2DB     		blt	.L861
 22826              	.L860:
3076:..\src/command_processing.c ****         }
3077:..\src/command_processing.c ****     }
3078:..\src/command_processing.c **** 
3079:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 22827              		.loc 1 3079 0 is_stmt 1
 22828 0070 084A     		ldr	r2, .L863+4
 22829 0072 074B     		ldr	r3, .L863
 22830 0074 1046     		mov	r0, r2
 22831 0076 1946     		mov	r1, r3
 22832 0078 4FF43D73 		mov	r3, #756
 22833 007c 1A46     		mov	r2, r3
 22834 007e FFF7FEFF 		bl	memcpy
3080:..\src/command_processing.c **** 
3081:..\src/command_processing.c ****     // Re-Enable Interrupt
3082:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 22835              		.loc 1 3082 0
 22836 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
3083:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 500


3084:..\src/command_processing.c ****     return ret_val;
 22837              		.loc 1 3084 0
 22838 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
3085:..\src/command_processing.c **** }
 22839              		.loc 1 3085 0
 22840 0088 1846     		mov	r0, r3
 22841 008a 1837     		adds	r7, r7, #24
 22842              		.cfi_def_cfa_offset 8
 22843 008c BD46     		mov	sp, r7
 22844              		.cfi_def_cfa_register 13
 22845              		@ sp needed
 22846 008e 80BD     		pop	{r7, pc}
 22847              	.L864:
 22848              		.align	2
 22849              	.L863:
 22850 0090 00000000 		.word	c_mem
 22851 0094 00000000 		.word	g_mem
 22852              		.cfi_endproc
 22853              	.LFE86:
 22854              		.size	memStore, .-memStore
 22855              		.section	.text.memRecall,"ax",%progbits
 22856              		.align	2
 22857              		.global	memRecall
 22858              		.thumb
 22859              		.thumb_func
 22860              		.type	memRecall, %function
 22861              	memRecall:
 22862              	.LFB87:
3086:..\src/command_processing.c **** 
3087:..\src/command_processing.c **** 
3088:..\src/command_processing.c **** //==============================================================================
3089:..\src/command_processing.c **** //                                                                 RECALL MEMORY
3090:..\src/command_processing.c **** //==============================================================================
3091:..\src/command_processing.c **** 
3092:..\src/command_processing.c **** 
3093:..\src/command_processing.c **** void memRecall(void)
3094:..\src/command_processing.c **** {
 22863              		.loc 1 3094 0
 22864              		.cfi_startproc
 22865              		@ args = 0, pretend = 0, frame = 8
 22866              		@ frame_needed = 1, uses_anonymous_args = 0
 22867 0000 80B5     		push	{r7, lr}
 22868              		.cfi_def_cfa_offset 8
 22869              		.cfi_offset 7, -8
 22870              		.cfi_offset 14, -4
 22871 0002 82B0     		sub	sp, sp, #8
 22872              		.cfi_def_cfa_offset 16
 22873 0004 00AF     		add	r7, sp, #0
 22874              		.cfi_def_cfa_register 7
3095:..\src/command_processing.c ****     uint16 i;
3096:..\src/command_processing.c **** 
3097:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22875              		.loc 1 3097 0
 22876 0006 0023     		movs	r3, #0
 22877 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22878 000a 0CE0     		b	.L866
 22879              	.L867:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 501


3098:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22880              		.loc 1 3098 0 discriminator 3
 22881 000c FB88     		ldrh	r3, [r7, #6]
 22882 000e 184A     		ldr	r2, .L871
 22883 0010 1344     		add	r3, r3, r2
 22884 0012 184A     		ldr	r2, .L871+4
 22885 0014 1168     		ldr	r1, [r2]
 22886 0016 FA88     		ldrh	r2, [r7, #6]
 22887 0018 0A44     		add	r2, r2, r1
 22888 001a 1278     		ldrb	r2, [r2]
 22889 001c D2B2     		uxtb	r2, r2
 22890 001e 1A70     		strb	r2, [r3]
3097:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22891              		.loc 1 3097 0 discriminator 3
 22892 0020 FB88     		ldrh	r3, [r7, #6]
 22893 0022 0133     		adds	r3, r3, #1
 22894 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 22895              	.L866:
3097:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22896              		.loc 1 3097 0 is_stmt 0 discriminator 1
 22897 0026 FB88     		ldrh	r3, [r7, #6]
 22898 0028 B3F53D7F 		cmp	r3, #756
 22899 002c EED3     		bcc	.L867
3099:..\src/command_processing.c ****     }
3100:..\src/command_processing.c ****     
3101:..\src/command_processing.c ****     // Recall saved user_emg structure
3102:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 22900              		.loc 1 3102 0 is_stmt 1
 22901 002e 104B     		ldr	r3, .L871
 22902 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22903 0034 5B01     		lsls	r3, r3, #5
 22904 0036 03F51273 		add	r3, r3, #584
 22905 003a 0D4A     		ldr	r2, .L871
 22906 003c 1344     		add	r3, r3, r2
 22907 003e 1022     		movs	r2, #16
 22908 0040 1946     		mov	r1, r3
 22909 0042 0D48     		ldr	r0, .L871+8
 22910 0044 FFF7FEFF 		bl	memcpy
3103:..\src/command_processing.c **** 
3104:..\src/command_processing.c ****     //check for initialization
3105:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22911              		.loc 1 3105 0
 22912 0048 094B     		ldr	r3, .L871
 22913 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22914 004c 002B     		cmp	r3, #0
 22915 004e 02D1     		bne	.L868
3106:..\src/command_processing.c ****         memRestore();
 22916              		.loc 1 3106 0
 22917 0050 FFF7FEFF 		bl	memRestore
3107:..\src/command_processing.c ****     } else {
3108:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
3109:..\src/command_processing.c ****     }        
3110:..\src/command_processing.c **** }
 22918              		.loc 1 3110 0
 22919 0054 08E0     		b	.L870
 22920              	.L868:
3108:..\src/command_processing.c ****     }        
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 502


 22921              		.loc 1 3108 0
 22922 0056 094A     		ldr	r2, .L871+12
 22923 0058 054B     		ldr	r3, .L871
 22924 005a 1046     		mov	r0, r2
 22925 005c 1946     		mov	r1, r3
 22926 005e 4FF43D73 		mov	r3, #756
 22927 0062 1A46     		mov	r2, r3
 22928 0064 FFF7FEFF 		bl	memcpy
 22929              	.L870:
 22930              		.loc 1 3110 0
 22931 0068 00BF     		nop
 22932 006a 0837     		adds	r7, r7, #8
 22933              		.cfi_def_cfa_offset 8
 22934 006c BD46     		mov	sp, r7
 22935              		.cfi_def_cfa_register 13
 22936              		@ sp needed
 22937 006e 80BD     		pop	{r7, pc}
 22938              	.L872:
 22939              		.align	2
 22940              	.L871:
 22941 0070 00000000 		.word	g_mem
 22942 0074 00000000 		.word	EEPROM_ADDR
 22943 0078 F0010000 		.word	g_mem+496
 22944 007c 00000000 		.word	c_mem
 22945              		.cfi_endproc
 22946              	.LFE87:
 22947              		.size	memRecall, .-memRecall
 22948              		.section	.text.memRestore,"ax",%progbits
 22949              		.align	2
 22950              		.global	memRestore
 22951              		.thumb
 22952              		.thumb_func
 22953              		.type	memRestore, %function
 22954              	memRestore:
 22955              	.LFB88:
3111:..\src/command_processing.c **** 
3112:..\src/command_processing.c **** 
3113:..\src/command_processing.c **** //==============================================================================
3114:..\src/command_processing.c **** //                                                                RESTORE MEMORY
3115:..\src/command_processing.c **** //==============================================================================
3116:..\src/command_processing.c **** 
3117:..\src/command_processing.c **** 
3118:..\src/command_processing.c **** uint8 memRestore(void) {
 22956              		.loc 1 3118 0
 22957              		.cfi_startproc
 22958              		@ args = 0, pretend = 0, frame = 8
 22959              		@ frame_needed = 1, uses_anonymous_args = 0
 22960 0000 80B5     		push	{r7, lr}
 22961              		.cfi_def_cfa_offset 8
 22962              		.cfi_offset 7, -8
 22963              		.cfi_offset 14, -4
 22964 0002 82B0     		sub	sp, sp, #8
 22965              		.cfi_def_cfa_offset 16
 22966 0004 00AF     		add	r7, sp, #0
 22967              		.cfi_def_cfa_register 7
3119:..\src/command_processing.c ****     uint16 i;
3120:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 503


3121:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22968              		.loc 1 3121 0
 22969 0006 0023     		movs	r3, #0
 22970 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22971 000a 0EE0     		b	.L874
 22972              	.L875:
3122:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22973              		.loc 1 3122 0 discriminator 3
 22974 000c FB88     		ldrh	r3, [r7, #6]
 22975 000e 114A     		ldr	r2, .L878
 22976 0010 1344     		add	r3, r3, r2
 22977 0012 114A     		ldr	r2, .L878+4
 22978 0014 1168     		ldr	r1, [r2]
 22979 0016 FA88     		ldrh	r2, [r7, #6]
 22980 0018 02F54872 		add	r2, r2, #800
 22981 001c 0A44     		add	r2, r2, r1
 22982 001e 1278     		ldrb	r2, [r2]
 22983 0020 D2B2     		uxtb	r2, r2
 22984 0022 1A70     		strb	r2, [r3]
3121:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22985              		.loc 1 3121 0 discriminator 3
 22986 0024 FB88     		ldrh	r3, [r7, #6]
 22987 0026 0133     		adds	r3, r3, #1
 22988 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 22989              	.L874:
3121:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22990              		.loc 1 3121 0 is_stmt 0 discriminator 1
 22991 002a FB88     		ldrh	r3, [r7, #6]
 22992 002c B3F53D7F 		cmp	r3, #756
 22993 0030 ECD3     		bcc	.L875
3123:..\src/command_processing.c ****     }
3124:..\src/command_processing.c **** 
3125:..\src/command_processing.c ****     //check for initialization
3126:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22994              		.loc 1 3126 0 is_stmt 1
 22995 0032 084B     		ldr	r3, .L878
 22996 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22997 0036 002B     		cmp	r3, #0
 22998 0038 03D1     		bne	.L876
3127:..\src/command_processing.c ****         return memInit();
 22999              		.loc 1 3127 0
 23000 003a FFF7FEFF 		bl	memInit
 23001 003e 0346     		mov	r3, r0
 23002 0040 03E0     		b	.L877
 23003              	.L876:
3128:..\src/command_processing.c ****     } else {
3129:..\src/command_processing.c ****         return memStore(0);
 23004              		.loc 1 3129 0
 23005 0042 0020     		movs	r0, #0
 23006 0044 FFF7FEFF 		bl	memStore
 23007 0048 0346     		mov	r3, r0
 23008              	.L877:
3130:..\src/command_processing.c ****     }  
3131:..\src/command_processing.c **** }
 23009              		.loc 1 3131 0
 23010 004a 1846     		mov	r0, r3
 23011 004c 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 504


 23012              		.cfi_def_cfa_offset 8
 23013 004e BD46     		mov	sp, r7
 23014              		.cfi_def_cfa_register 13
 23015              		@ sp needed
 23016 0050 80BD     		pop	{r7, pc}
 23017              	.L879:
 23018 0052 00BF     		.align	2
 23019              	.L878:
 23020 0054 00000000 		.word	g_mem
 23021 0058 00000000 		.word	EEPROM_ADDR
 23022              		.cfi_endproc
 23023              	.LFE88:
 23024              		.size	memRestore, .-memRestore
 23025              		.section	.rodata
 23026 21a7 00       		.align	2
 23027              	.LC319:
 23028 21a8 47454E30 		.ascii	"GEN001\000"
 23028      303100
 23029              		.section	.text.memInit,"ax",%progbits
 23030              		.align	2
 23031              		.global	memInit
 23032              		.thumb
 23033              		.thumb_func
 23034              		.type	memInit, %function
 23035              	memInit:
 23036              	.LFB89:
3132:..\src/command_processing.c **** 
3133:..\src/command_processing.c **** //==============================================================================
3134:..\src/command_processing.c **** //                                                                   MEMORY INIT
3135:..\src/command_processing.c **** //==============================================================================
3136:..\src/command_processing.c **** 
3137:..\src/command_processing.c **** uint8 memInit(void)
3138:..\src/command_processing.c **** {
 23037              		.loc 1 3138 0
 23038              		.cfi_startproc
 23039              		@ args = 0, pretend = 0, frame = 8
 23040              		@ frame_needed = 1, uses_anonymous_args = 0
 23041 0000 80B5     		push	{r7, lr}
 23042              		.cfi_def_cfa_offset 8
 23043              		.cfi_offset 7, -8
 23044              		.cfi_offset 14, -4
 23045 0002 82B0     		sub	sp, sp, #8
 23046              		.cfi_def_cfa_offset 16
 23047 0004 00AF     		add	r7, sp, #0
 23048              		.cfi_def_cfa_register 7
3139:..\src/command_processing.c ****     uint8 i, j;
3140:..\src/command_processing.c **** 
3141:..\src/command_processing.c ****     //initialize memory settings
3142:..\src/command_processing.c ****     for (i=0; i<15; i++){
 23049              		.loc 1 3142 0
 23050 0006 0023     		movs	r3, #0
 23051 0008 FB71     		strb	r3, [r7, #7]
 23052 000a 07E0     		b	.L881
 23053              	.L882:
3143:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 23054              		.loc 1 3143 0 discriminator 3
 23055 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 505


 23056 000e B44A     		ldr	r2, .L907
 23057 0010 1344     		add	r3, r3, r2
 23058 0012 0022     		movs	r2, #0
 23059 0014 5A70     		strb	r2, [r3, #1]
3142:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 23060              		.loc 1 3142 0 discriminator 3
 23061 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23062 0018 0133     		adds	r3, r3, #1
 23063 001a FB71     		strb	r3, [r7, #7]
 23064              	.L881:
3142:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 23065              		.loc 1 3142 0 is_stmt 0 discriminator 1
 23066 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23067 001e 0E2B     		cmp	r3, #14
 23068 0020 F4D9     		bls	.L882
3144:..\src/command_processing.c ****     }
3145:..\src/command_processing.c ****         
3146:..\src/command_processing.c ****     // DEV STRUCT
3147:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 23069              		.loc 1 3147 0 is_stmt 1
 23070 0022 AF4B     		ldr	r3, .L907
 23071 0024 0122     		movs	r2, #1
 23072 0026 83F8A020 		strb	r2, [r3, #160]
3148:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 23073              		.loc 1 3148 0
 23074 002a AD4B     		ldr	r3, .L907
 23075 002c 0022     		movs	r2, #0
 23076 002e 83F8A720 		strb	r2, [r3, #167]
3149:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 23077              		.loc 1 3149 0
 23078 0032 AB4B     		ldr	r3, .L907
 23079 0034 0122     		movs	r2, #1
 23080 0036 83F8AC20 		strb	r2, [r3, #172]
3150:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 23081              		.loc 1 3150 0
 23082 003a A94B     		ldr	r3, .L907
 23083 003c 0022     		movs	r2, #0
 23084 003e 83F8A820 		strb	r2, [r3, #168]
3151:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 23085              		.loc 1 3151 0
 23086 0042 FFF7FEFF 		bl	reset_counters
3152:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 23087              		.loc 1 3152 0
 23088 0046 0023     		movs	r3, #0
 23089 0048 FB71     		strb	r3, [r7, #7]
 23090 004a 08E0     		b	.L883
 23091              	.L884:
3153:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 23092              		.loc 1 3153 0 discriminator 3
 23093 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23094 004e A44A     		ldr	r2, .L907
 23095 0050 1344     		add	r3, r3, r2
 23096 0052 0022     		movs	r2, #0
 23097 0054 83F88020 		strb	r2, [r3, #128]
3152:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 23098              		.loc 1 3152 0 discriminator 3
 23099 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 506


 23100 005a 0133     		adds	r3, r3, #1
 23101 005c FB71     		strb	r3, [r7, #7]
 23102              	.L883:
3152:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 23103              		.loc 1 3152 0 is_stmt 0 discriminator 1
 23104 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23105 0060 1F2B     		cmp	r3, #31
 23106 0062 F3D9     		bls	.L884
3154:..\src/command_processing.c ****     }
3155:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 23107              		.loc 1 3155 0 is_stmt 1
 23108 0064 9E4B     		ldr	r3, .L907
 23109 0066 0022     		movs	r2, #0
 23110 0068 83F8A920 		strb	r2, [r3, #169]
3156:..\src/command_processing.c **** 
3157:..\src/command_processing.c ****     // MOTOR STRUCT
3158:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 23111              		.loc 1 3158 0
 23112 006c 0023     		movs	r3, #0
 23113 006e FB71     		strb	r3, [r7, #7]
 23114 0070 15E1     		b	.L885
 23115              	.L888:
3159:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 23116              		.loc 1 3159 0
 23117 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23118 0074 9A49     		ldr	r1, .L907
 23119 0076 1346     		mov	r3, r2
 23120 0078 DB00     		lsls	r3, r3, #3
 23121 007a 9B1A     		subs	r3, r3, r2
 23122 007c 1B01     		lsls	r3, r3, #4
 23123 007e 0B44     		add	r3, r3, r1
 23124 0080 B033     		adds	r3, r3, #176
 23125 0082 40F23942 		movw	r2, #1081
 23126 0086 1A60     		str	r2, [r3]
3160:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 23127              		.loc 1 3160 0
 23128 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23129 008a 9549     		ldr	r1, .L907
 23130 008c 1346     		mov	r3, r2
 23131 008e DB00     		lsls	r3, r3, #3
 23132 0090 9B1A     		subs	r3, r3, r2
 23133 0092 1B01     		lsls	r3, r3, #4
 23134 0094 0B44     		add	r3, r3, r1
 23135 0096 B433     		adds	r3, r3, #180
 23136 0098 0022     		movs	r2, #0
 23137 009a 1A60     		str	r2, [r3]
3161:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 23138              		.loc 1 3161 0
 23139 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23140 009e 9049     		ldr	r1, .L907
 23141 00a0 1346     		mov	r3, r2
 23142 00a2 DB00     		lsls	r3, r3, #3
 23143 00a4 9B1A     		subs	r3, r3, r2
 23144 00a6 1B01     		lsls	r3, r3, #4
 23145 00a8 0B44     		add	r3, r3, r1
 23146 00aa B833     		adds	r3, r3, #184
 23147 00ac 4FF4E572 		mov	r2, #458
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 507


 23148 00b0 1A60     		str	r2, [r3]
3162:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 23149              		.loc 1 3162 0
 23150 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23151 00b4 8A49     		ldr	r1, .L907
 23152 00b6 1346     		mov	r3, r2
 23153 00b8 DB00     		lsls	r3, r3, #3
 23154 00ba 9B1A     		subs	r3, r3, r2
 23155 00bc 1B01     		lsls	r3, r3, #4
 23156 00be 0B44     		add	r3, r3, r1
 23157 00c0 BC33     		adds	r3, r3, #188
 23158 00c2 4FF48032 		mov	r2, #65536
 23159 00c6 1A60     		str	r2, [r3]
3163:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 23160              		.loc 1 3163 0
 23161 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23162 00ca 8549     		ldr	r1, .L907
 23163 00cc 1346     		mov	r3, r2
 23164 00ce DB00     		lsls	r3, r3, #3
 23165 00d0 9B1A     		subs	r3, r3, r2
 23166 00d2 1B01     		lsls	r3, r3, #4
 23167 00d4 0B44     		add	r3, r3, r1
 23168 00d6 C033     		adds	r3, r3, #192
 23169 00d8 4122     		movs	r2, #65
 23170 00da 1A60     		str	r2, [r3]
3164:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 23171              		.loc 1 3164 0
 23172 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23173 00de 8049     		ldr	r1, .L907
 23174 00e0 1346     		mov	r3, r2
 23175 00e2 DB00     		lsls	r3, r3, #3
 23176 00e4 9B1A     		subs	r3, r3, r2
 23177 00e6 1B01     		lsls	r3, r3, #4
 23178 00e8 0B44     		add	r3, r3, r1
 23179 00ea C433     		adds	r3, r3, #196
 23180 00ec 0022     		movs	r2, #0
 23181 00ee 1A60     		str	r2, [r3]
3165:..\src/command_processing.c **** 
3166:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 23182              		.loc 1 3166 0
 23183 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23184 00f2 7B49     		ldr	r1, .L907
 23185 00f4 1346     		mov	r3, r2
 23186 00f6 DB00     		lsls	r3, r3, #3
 23187 00f8 9B1A     		subs	r3, r3, r2
 23188 00fa 1B01     		lsls	r3, r3, #4
 23189 00fc 0B44     		add	r3, r3, r1
 23190 00fe C833     		adds	r3, r3, #200
 23191 0100 41F69912 		movw	r2, #6553
 23192 0104 1A60     		str	r2, [r3]
3167:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 23193              		.loc 1 3167 0
 23194 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23195 0108 7549     		ldr	r1, .L907
 23196 010a 1346     		mov	r3, r2
 23197 010c DB00     		lsls	r3, r3, #3
 23198 010e 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 508


 23199 0110 1B01     		lsls	r3, r3, #4
 23200 0112 0B44     		add	r3, r3, r1
 23201 0114 CC33     		adds	r3, r3, #204
 23202 0116 0022     		movs	r2, #0
 23203 0118 1A60     		str	r2, [r3]
3168:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 23204              		.loc 1 3168 0
 23205 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23206 011c 7049     		ldr	r1, .L907
 23207 011e 1346     		mov	r3, r2
 23208 0120 DB00     		lsls	r3, r3, #3
 23209 0122 9B1A     		subs	r3, r3, r2
 23210 0124 1B01     		lsls	r3, r3, #4
 23211 0126 0B44     		add	r3, r3, r1
 23212 0128 D033     		adds	r3, r3, #208
 23213 012a 0022     		movs	r2, #0
 23214 012c 1A60     		str	r2, [r3]
3169:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 23215              		.loc 1 3169 0
 23216 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23217 0130 6B49     		ldr	r1, .L907
 23218 0132 1346     		mov	r3, r2
 23219 0134 DB00     		lsls	r3, r3, #3
 23220 0136 9B1A     		subs	r3, r3, r2
 23221 0138 1B01     		lsls	r3, r3, #4
 23222 013a 0B44     		add	r3, r3, r1
 23223 013c D433     		adds	r3, r3, #212
 23224 013e 44F6CC42 		movw	r2, #19660
 23225 0142 1A60     		str	r2, [r3]
3170:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 23226              		.loc 1 3170 0
 23227 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23228 0146 6649     		ldr	r1, .L907
 23229 0148 1346     		mov	r3, r2
 23230 014a DB00     		lsls	r3, r3, #3
 23231 014c 9B1A     		subs	r3, r3, r2
 23232 014e 1B01     		lsls	r3, r3, #4
 23233 0150 0B44     		add	r3, r3, r1
 23234 0152 D833     		adds	r3, r3, #216
 23235 0154 0D22     		movs	r2, #13
 23236 0156 1A60     		str	r2, [r3]
3171:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 23237              		.loc 1 3171 0
 23238 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23239 015a 6149     		ldr	r1, .L907
 23240 015c 1346     		mov	r3, r2
 23241 015e DB00     		lsls	r3, r3, #3
 23242 0160 9B1A     		subs	r3, r3, r2
 23243 0162 1B01     		lsls	r3, r3, #4
 23244 0164 0B44     		add	r3, r3, r1
 23245 0166 DC33     		adds	r3, r3, #220
 23246 0168 0022     		movs	r2, #0
 23247 016a 1A60     		str	r2, [r3]
3172:..\src/command_processing.c **** 
3173:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 23248              		.loc 1 3173 0
 23249 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 509


 23250 016e 5C49     		ldr	r1, .L907
 23251 0170 1346     		mov	r3, r2
 23252 0172 DB00     		lsls	r3, r3, #3
 23253 0174 9B1A     		subs	r3, r3, r2
 23254 0176 1B01     		lsls	r3, r3, #4
 23255 0178 0B44     		add	r3, r3, r1
 23256 017a E033     		adds	r3, r3, #224
 23257 017c 0122     		movs	r2, #1
 23258 017e 1A70     		strb	r2, [r3]
3174:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 23259              		.loc 1 3174 0
 23260 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23261 0182 5749     		ldr	r1, .L907
 23262 0184 1346     		mov	r3, r2
 23263 0186 DB00     		lsls	r3, r3, #3
 23264 0188 9B1A     		subs	r3, r3, r2
 23265 018a 1B01     		lsls	r3, r3, #4
 23266 018c 0B44     		add	r3, r3, r1
 23267 018e E133     		adds	r3, r3, #225
 23268 0190 0022     		movs	r2, #0
 23269 0192 1A70     		strb	r2, [r3]
3175:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 23270              		.loc 1 3175 0
 23271 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23272 0196 5249     		ldr	r1, .L907
 23273 0198 1346     		mov	r3, r2
 23274 019a DB00     		lsls	r3, r3, #3
 23275 019c 9B1A     		subs	r3, r3, r2
 23276 019e 1B01     		lsls	r3, r3, #4
 23277 01a0 0B44     		add	r3, r3, r1
 23278 01a2 E233     		adds	r3, r3, #226
 23279 01a4 0022     		movs	r2, #0
 23280 01a6 1A70     		strb	r2, [r3]
3176:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 23281              		.loc 1 3176 0
 23282 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23283 01aa 4D49     		ldr	r1, .L907
 23284 01ac 1346     		mov	r3, r2
 23285 01ae DB00     		lsls	r3, r3, #3
 23286 01b0 9B1A     		subs	r3, r3, r2
 23287 01b2 1B01     		lsls	r3, r3, #4
 23288 01b4 0B44     		add	r3, r3, r1
 23289 01b6 03F58773 		add	r3, r3, #270
 23290 01ba 0022     		movs	r2, #0
 23291 01bc 1A70     		strb	r2, [r3]
3177:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 23292              		.loc 1 3177 0
 23293 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23294 01c0 4749     		ldr	r1, .L907
 23295 01c2 1346     		mov	r3, r2
 23296 01c4 DB00     		lsls	r3, r3, #3
 23297 01c6 9B1A     		subs	r3, r3, r2
 23298 01c8 1B01     		lsls	r3, r3, #4
 23299 01ca 0B44     		add	r3, r3, r1
 23300 01cc 03F20F13 		addw	r3, r3, #271
 23301 01d0 0022     		movs	r2, #0
 23302 01d2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 510


3178:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 23303              		.loc 1 3178 0
 23304 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23305 01d6 4249     		ldr	r1, .L907
 23306 01d8 1346     		mov	r3, r2
 23307 01da DB00     		lsls	r3, r3, #3
 23308 01dc 9B1A     		subs	r3, r3, r2
 23309 01de 1B01     		lsls	r3, r3, #4
 23310 01e0 0B44     		add	r3, r3, r1
 23311 01e2 F033     		adds	r3, r3, #240
 23312 01e4 0022     		movs	r2, #0
 23313 01e6 1A60     		str	r2, [r3]
3179:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 23314              		.loc 1 3179 0
 23315 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23316 01ea 3D49     		ldr	r1, .L907
 23317 01ec 1346     		mov	r3, r2
 23318 01ee DB00     		lsls	r3, r3, #3
 23319 01f0 9B1A     		subs	r3, r3, r2
 23320 01f2 1B01     		lsls	r3, r3, #4
 23321 01f4 0B44     		add	r3, r3, r1
 23322 01f6 EC33     		adds	r3, r3, #236
 23323 01f8 0022     		movs	r2, #0
 23324 01fa 1A60     		str	r2, [r3]
3180:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 23325              		.loc 1 3180 0
 23326 01fc 0023     		movs	r3, #0
 23327 01fe BB71     		strb	r3, [r7, #6]
 23328 0200 10E0     		b	.L886
 23329              	.L887:
3181:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 23330              		.loc 1 3181 0 discriminator 3
 23331 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23332 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23333 0206 3648     		ldr	r0, .L907
 23334 0208 1346     		mov	r3, r2
 23335 020a DB00     		lsls	r3, r3, #3
 23336 020c 9B1A     		subs	r3, r3, r2
 23337 020e 9B00     		lsls	r3, r3, #2
 23338 0210 0B44     		add	r3, r3, r1
 23339 0212 3C33     		adds	r3, r3, #60
 23340 0214 9B00     		lsls	r3, r3, #2
 23341 0216 0344     		add	r3, r3, r0
 23342 0218 4FF00002 		mov	r2, #0
 23343 021c 5A60     		str	r2, [r3, #4]	@ float
3180:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 23344              		.loc 1 3180 0 discriminator 3
 23345 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23346 0220 0133     		adds	r3, r3, #1
 23347 0222 BB71     		strb	r3, [r7, #6]
 23348              	.L886:
3180:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 23349              		.loc 1 3180 0 is_stmt 0 discriminator 1
 23350 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23351 0226 052B     		cmp	r3, #5
 23352 0228 EBD9     		bls	.L887
3182:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 511


3183:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 23353              		.loc 1 3183 0 is_stmt 1 discriminator 2
 23354 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23355 022c 2C49     		ldr	r1, .L907
 23356 022e 1346     		mov	r3, r2
 23357 0230 DB00     		lsls	r3, r3, #3
 23358 0232 9B1A     		subs	r3, r3, r2
 23359 0234 1B01     		lsls	r3, r3, #4
 23360 0236 0B44     		add	r3, r3, r1
 23361 0238 03F58673 		add	r3, r3, #268
 23362 023c 40F2DC52 		movw	r2, #1500
 23363 0240 1A80     		strh	r2, [r3]	@ movhi
3184:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 23364              		.loc 1 3184 0 discriminator 2
 23365 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23366 0244 2649     		ldr	r1, .L907
 23367 0246 1346     		mov	r3, r2
 23368 0248 DB00     		lsls	r3, r3, #3
 23369 024a 9B1A     		subs	r3, r3, r2
 23370 024c 1B01     		lsls	r3, r3, #4
 23371 024e 0B44     		add	r3, r3, r1
 23372 0250 03F58873 		add	r3, r3, #272
 23373 0254 FA79     		ldrb	r2, [r7, #7]
 23374 0256 1A70     		strb	r2, [r3]
3185:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 23375              		.loc 1 3185 0 discriminator 2
 23376 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23377 025a 2149     		ldr	r1, .L907
 23378 025c 1346     		mov	r3, r2
 23379 025e DB00     		lsls	r3, r3, #3
 23380 0260 9B1A     		subs	r3, r3, r2
 23381 0262 1B01     		lsls	r3, r3, #4
 23382 0264 0B44     		add	r3, r3, r1
 23383 0266 E333     		adds	r3, r3, #227
 23384 0268 0122     		movs	r2, #1
 23385 026a 1A70     		strb	r2, [r3]
3186:..\src/command_processing.c ****         
3187:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23386              		.loc 1 3187 0 discriminator 2
 23387 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23388 026e 1C49     		ldr	r1, .L907
 23389 0270 1346     		mov	r3, r2
 23390 0272 DB00     		lsls	r3, r3, #3
 23391 0274 9B1A     		subs	r3, r3, r2
 23392 0276 1B01     		lsls	r3, r3, #4
 23393 0278 0B44     		add	r3, r3, r1
 23394 027a 03F21113 		addw	r3, r3, #273
 23395 027e 0122     		movs	r2, #1
 23396 0280 1A70     		strb	r2, [r3]
3188:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 23397              		.loc 1 3188 0 discriminator 2
 23398 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23399 0284 1649     		ldr	r1, .L907
 23400 0286 1346     		mov	r3, r2
 23401 0288 DB00     		lsls	r3, r3, #3
 23402 028a 9B1A     		subs	r3, r3, r2
 23403 028c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 512


 23404 028e 0B44     		add	r3, r3, r1
 23405 0290 03F58973 		add	r3, r3, #274
 23406 0294 0022     		movs	r2, #0
 23407 0296 1A70     		strb	r2, [r3]
3158:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 23408              		.loc 1 3158 0 discriminator 2
 23409 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23410 029a 0133     		adds	r3, r3, #1
 23411 029c FB71     		strb	r3, [r7, #7]
 23412              	.L885:
3158:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 23413              		.loc 1 3158 0 is_stmt 0 discriminator 1
 23414 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23415 02a0 012B     		cmp	r3, #1
 23416 02a2 7FF6E6AE 		bls	.L888
3189:..\src/command_processing.c ****     }
3190:..\src/command_processing.c ****     
3191:..\src/command_processing.c ****     // ENC STRUCT
3192:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 23417              		.loc 1 3192 0 is_stmt 1
 23418 02a6 0023     		movs	r3, #0
 23419 02a8 FB71     		strb	r3, [r7, #7]
 23420 02aa 98E0     		b	.L889
 23421              	.L896:
3193:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23422              		.loc 1 3193 0
 23423 02ac 0023     		movs	r3, #0
 23424 02ae BB71     		strb	r3, [r7, #6]
 23425 02b0 0FE0     		b	.L890
 23426              	.L891:
3194:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 23427              		.loc 1 3194 0 discriminator 3
 23428 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23429 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23430 02b6 0A48     		ldr	r0, .L907
 23431 02b8 1346     		mov	r3, r2
 23432 02ba 5B00     		lsls	r3, r3, #1
 23433 02bc 1344     		add	r3, r3, r2
 23434 02be 1B01     		lsls	r3, r3, #4
 23435 02c0 0344     		add	r3, r3, r0
 23436 02c2 0B44     		add	r3, r3, r1
 23437 02c4 03F5C873 		add	r3, r3, #400
 23438 02c8 0022     		movs	r2, #0
 23439 02ca 1A70     		strb	r2, [r3]
3193:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23440              		.loc 1 3193 0 discriminator 3
 23441 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23442 02ce 0133     		adds	r3, r3, #1
 23443 02d0 BB71     		strb	r3, [r7, #6]
 23444              	.L890:
3193:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23445              		.loc 1 3193 0 is_stmt 0 discriminator 1
 23446 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23447 02d4 042B     		cmp	r3, #4
 23448 02d6 ECD9     		bls	.L891
3195:..\src/command_processing.c ****         }
3196:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 513


 23449              		.loc 1 3196 0 is_stmt 1
 23450 02d8 0023     		movs	r3, #0
 23451 02da BB71     		strb	r3, [r7, #6]
 23452 02dc 2CE0     		b	.L892
 23453              	.L908:
 23454 02de 00BF     		.align	2
 23455              	.L907:
 23456 02e0 00000000 		.word	g_mem
 23457              	.L893:
3197:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 23458              		.loc 1 3197 0 discriminator 3
 23459 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23460 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23461 02e8 C948     		ldr	r0, .L909
 23462 02ea 1346     		mov	r3, r2
 23463 02ec 5B00     		lsls	r3, r3, #1
 23464 02ee 1344     		add	r3, r3, r2
 23465 02f0 1B01     		lsls	r3, r3, #4
 23466 02f2 0344     		add	r3, r3, r0
 23467 02f4 0B44     		add	r3, r3, r1
 23468 02f6 03F29513 		addw	r3, r3, #405
 23469 02fa 0322     		movs	r2, #3
 23470 02fc 1A70     		strb	r2, [r3]
3198:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 23471              		.loc 1 3198 0 discriminator 3
 23472 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23473 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23474 0302 C348     		ldr	r0, .L909
 23475 0304 1346     		mov	r3, r2
 23476 0306 5B00     		lsls	r3, r3, #1
 23477 0308 1344     		add	r3, r3, r2
 23478 030a 9B00     		lsls	r3, r3, #2
 23479 030c 0B44     		add	r3, r3, r1
 23480 030e 6833     		adds	r3, r3, #104
 23481 0310 9B00     		lsls	r3, r3, #2
 23482 0312 0344     		add	r3, r3, r0
 23483 0314 4FF07E52 		mov	r2, #1065353216
 23484 0318 5A60     		str	r2, [r3, #4]	@ float
3199:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 23485              		.loc 1 3199 0 discriminator 3
 23486 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23487 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23488 031e BC48     		ldr	r0, .L909
 23489 0320 1346     		mov	r3, r2
 23490 0322 5B00     		lsls	r3, r3, #1
 23491 0324 1344     		add	r3, r3, r2
 23492 0326 9B00     		lsls	r3, r3, #2
 23493 0328 0B44     		add	r3, r3, r1
 23494 032a 6633     		adds	r3, r3, #102
 23495 032c 0022     		movs	r2, #0
 23496 032e 40F82320 		str	r2, [r0, r3, lsl #2]
3196:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 23497              		.loc 1 3196 0 discriminator 3
 23498 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23499 0334 0133     		adds	r3, r3, #1
 23500 0336 BB71     		strb	r3, [r7, #6]
 23501              	.L892:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 514


3196:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 23502              		.loc 1 3196 0 is_stmt 0 discriminator 1
 23503 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23504 033a 022B     		cmp	r3, #2
 23505 033c D2D9     		bls	.L893
3200:..\src/command_processing.c ****         }
3201:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 23506              		.loc 1 3201 0 is_stmt 1
 23507 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23508 0340 B349     		ldr	r1, .L909
 23509 0342 1346     		mov	r3, r2
 23510 0344 5B00     		lsls	r3, r3, #1
 23511 0346 1344     		add	r3, r3, r2
 23512 0348 1B01     		lsls	r3, r3, #4
 23513 034a 0B44     		add	r3, r3, r1
 23514 034c 03F5D873 		add	r3, r3, #432
 23515 0350 0022     		movs	r2, #0
 23516 0352 1A70     		strb	r2, [r3]
3202:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 23517              		.loc 1 3202 0
 23518 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23519 0356 AE49     		ldr	r1, .L909
 23520 0358 1346     		mov	r3, r2
 23521 035a 5B00     		lsls	r3, r3, #1
 23522 035c 1344     		add	r3, r3, r2
 23523 035e 1B01     		lsls	r3, r3, #4
 23524 0360 0B44     		add	r3, r3, r1
 23525 0362 03F5DA73 		add	r3, r3, #436
 23526 0366 1622     		movs	r2, #22
 23527 0368 1A70     		strb	r2, [r3]
3203:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 23528              		.loc 1 3203 0
 23529 036a 0023     		movs	r3, #0
 23530 036c BB71     		strb	r3, [r7, #6]
 23531 036e 0FE0     		b	.L894
 23532              	.L895:
3204:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 23533              		.loc 1 3204 0 discriminator 3
 23534 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23535 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23536 0374 A648     		ldr	r0, .L909
 23537 0376 1346     		mov	r3, r2
 23538 0378 5B00     		lsls	r3, r3, #1
 23539 037a 1344     		add	r3, r3, r2
 23540 037c 1B01     		lsls	r3, r3, #4
 23541 037e 0344     		add	r3, r3, r0
 23542 0380 0B44     		add	r3, r3, r1
 23543 0382 03F2B113 		addw	r3, r3, #433
 23544 0386 BA79     		ldrb	r2, [r7, #6]
 23545 0388 1A70     		strb	r2, [r3]
3203:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 23546              		.loc 1 3203 0 discriminator 3
 23547 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23548 038c 0133     		adds	r3, r3, #1
 23549 038e BB71     		strb	r3, [r7, #6]
 23550              	.L894:
3203:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 515


 23551              		.loc 1 3203 0 is_stmt 0 discriminator 1
 23552 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23553 0392 022B     		cmp	r3, #2
 23554 0394 ECD9     		bls	.L895
3205:..\src/command_processing.c ****         }
3206:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 23555              		.loc 1 3206 0 is_stmt 1 discriminator 2
 23556 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23557 0398 9D49     		ldr	r1, .L909
 23558 039a 1346     		mov	r3, r2
 23559 039c 5B00     		lsls	r3, r3, #1
 23560 039e 1344     		add	r3, r3, r2
 23561 03a0 1B01     		lsls	r3, r3, #4
 23562 03a2 0B44     		add	r3, r3, r1
 23563 03a4 03F2B513 		addw	r3, r3, #437
 23564 03a8 0F22     		movs	r2, #15
 23565 03aa 1A70     		strb	r2, [r3]
3207:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 23566              		.loc 1 3207 0 discriminator 2
 23567 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23568 03ae 9849     		ldr	r1, .L909
 23569 03b0 1346     		mov	r3, r2
 23570 03b2 5B00     		lsls	r3, r3, #1
 23571 03b4 1344     		add	r3, r3, r2
 23572 03b6 1B01     		lsls	r3, r3, #4
 23573 03b8 0B44     		add	r3, r3, r1
 23574 03ba 03F5DB73 		add	r3, r3, #438
 23575 03be 0E22     		movs	r2, #14
 23576 03c0 1A70     		strb	r2, [r3]
3208:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 23577              		.loc 1 3208 0 discriminator 2
 23578 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23579 03c4 9249     		ldr	r1, .L909
 23580 03c6 1346     		mov	r3, r2
 23581 03c8 5B00     		lsls	r3, r3, #1
 23582 03ca 1344     		add	r3, r3, r2
 23583 03cc 1B01     		lsls	r3, r3, #4
 23584 03ce 0B44     		add	r3, r3, r1
 23585 03d0 03F2B713 		addw	r3, r3, #439
 23586 03d4 0122     		movs	r2, #1
 23587 03d6 1A70     		strb	r2, [r3]
3192:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23588              		.loc 1 3192 0 discriminator 2
 23589 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23590 03da 0133     		adds	r3, r3, #1
 23591 03dc FB71     		strb	r3, [r7, #7]
 23592              	.L889:
3192:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 23593              		.loc 1 3192 0 is_stmt 0 discriminator 1
 23594 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23595 03e0 012B     		cmp	r3, #1
 23596 03e2 7FF663AF 		bls	.L896
3209:..\src/command_processing.c ****     }
3210:..\src/command_processing.c ****     
3211:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 23597              		.loc 1 3211 0 is_stmt 1
 23598 03e6 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 516


 23599 03e8 FB71     		strb	r3, [r7, #7]
 23600 03ea 2EE0     		b	.L897
 23601              	.L898:
3212:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23602              		.loc 1 3212 0 discriminator 3
 23603 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23604 03ee 8849     		ldr	r1, .L909
 23605 03f0 1346     		mov	r3, r2
 23606 03f2 DB00     		lsls	r3, r3, #3
 23607 03f4 9B1A     		subs	r3, r3, r2
 23608 03f6 1B01     		lsls	r3, r3, #4
 23609 03f8 0B44     		add	r3, r3, r1
 23610 03fa E433     		adds	r3, r3, #228
 23611 03fc 0022     		movs	r2, #0
 23612 03fe 1A60     		str	r2, [r3]
3213:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 23613              		.loc 1 3213 0 discriminator 3
 23614 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23615 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 23616 0404 8248     		ldr	r0, .L909
 23617 0406 0B46     		mov	r3, r1
 23618 0408 DB00     		lsls	r3, r3, #3
 23619 040a 5B1A     		subs	r3, r3, r1
 23620 040c 1B01     		lsls	r3, r3, #4
 23621 040e 0344     		add	r3, r3, r0
 23622 0410 03F58873 		add	r3, r3, #272
 23623 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23624 0416 1846     		mov	r0, r3
 23625 0418 7D49     		ldr	r1, .L909
 23626 041a 0346     		mov	r3, r0
 23627 041c 5B00     		lsls	r3, r3, #1
 23628 041e 0344     		add	r3, r3, r0
 23629 0420 1B01     		lsls	r3, r3, #4
 23630 0422 0B44     		add	r3, r3, r1
 23631 0424 03F29513 		addw	r3, r3, #405
 23632 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23633 042a 1946     		mov	r1, r3
 23634 042c 44F63823 		movw	r3, #19000
 23635 0430 03FA01F1 		lsl	r1, r3, r1
 23636 0434 7648     		ldr	r0, .L909
 23637 0436 1346     		mov	r3, r2
 23638 0438 DB00     		lsls	r3, r3, #3
 23639 043a 9B1A     		subs	r3, r3, r2
 23640 043c 1B01     		lsls	r3, r3, #4
 23641 043e 0344     		add	r3, r3, r0
 23642 0440 E833     		adds	r3, r3, #232
 23643 0442 1960     		str	r1, [r3]
3211:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23644              		.loc 1 3211 0 discriminator 3
 23645 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23646 0446 0133     		adds	r3, r3, #1
 23647 0448 FB71     		strb	r3, [r7, #7]
 23648              	.L897:
3211:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 23649              		.loc 1 3211 0 is_stmt 0 discriminator 1
 23650 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23651 044c 012B     		cmp	r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 517


 23652 044e CDD9     		bls	.L898
3214:..\src/command_processing.c ****     }
3215:..\src/command_processing.c ****     
3216:..\src/command_processing.c ****     // EMG STRUCT     
3217:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23653              		.loc 1 3217 0 is_stmt 1
 23654 0450 6F4B     		ldr	r3, .L909
 23655 0452 C822     		movs	r2, #200
 23656 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3218:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23657              		.loc 1 3218 0
 23658 0458 6D4B     		ldr	r3, .L909
 23659 045a C822     		movs	r2, #200
 23660 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3219:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23661              		.loc 1 3219 0
 23662 0460 6B4B     		ldr	r3, .L909
 23663 0462 4FF48062 		mov	r2, #1024
 23664 0466 C3F8F421 		str	r2, [r3, #500]
3220:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 23665              		.loc 1 3220 0
 23666 046a 694B     		ldr	r3, .L909
 23667 046c 4FF48062 		mov	r2, #1024
 23668 0470 C3F8F821 		str	r2, [r3, #504]
3221:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 23669              		.loc 1 3221 0
 23670 0474 664B     		ldr	r3, .L909
 23671 0476 6422     		movs	r2, #100
 23672 0478 83F8FC21 		strb	r2, [r3, #508]
3222:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 23673              		.loc 1 3222 0
 23674 047c 644B     		ldr	r3, .L909
 23675 047e 6422     		movs	r2, #100
 23676 0480 83F8FD21 		strb	r2, [r3, #509]
3223:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23677              		.loc 1 3223 0
 23678 0484 624B     		ldr	r3, .L909
 23679 0486 0022     		movs	r2, #0
 23680 0488 83F8FE21 		strb	r2, [r3, #510]
3224:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 23681              		.loc 1 3224 0
 23682 048c 604B     		ldr	r3, .L909
 23683 048e 0022     		movs	r2, #0
 23684 0490 83F8FF21 		strb	r2, [r3, #511]
3225:..\src/command_processing.c **** 
3226:..\src/command_processing.c ****     // IMU STRUCT
3227:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23685              		.loc 1 3227 0
 23686 0494 5E4B     		ldr	r3, .L909
 23687 0496 0022     		movs	r2, #0
 23688 0498 83F80022 		strb	r2, [r3, #512]
3228:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 23689              		.loc 1 3228 0
 23690 049c 5C4B     		ldr	r3, .L909
 23691 049e 0022     		movs	r2, #0
 23692 04a0 83F80122 		strb	r2, [r3, #513]
3229:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 518


 23693              		.loc 1 3229 0
 23694 04a4 0023     		movs	r3, #0
 23695 04a6 FB71     		strb	r3, [r7, #7]
 23696 04a8 34E0     		b	.L899
 23697              	.L900:
3230:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23698              		.loc 1 3230 0 discriminator 3
 23699 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23700 04ac 5849     		ldr	r1, .L909
 23701 04ae 1346     		mov	r3, r2
 23702 04b0 9B00     		lsls	r3, r3, #2
 23703 04b2 1344     		add	r3, r3, r2
 23704 04b4 0B44     		add	r3, r3, r1
 23705 04b6 03F20223 		addw	r3, r3, #514
 23706 04ba 0122     		movs	r2, #1
 23707 04bc 1A70     		strb	r2, [r3]
3231:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 23708              		.loc 1 3231 0 discriminator 3
 23709 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23710 04c0 5349     		ldr	r1, .L909
 23711 04c2 1346     		mov	r3, r2
 23712 04c4 9B00     		lsls	r3, r3, #2
 23713 04c6 1344     		add	r3, r3, r2
 23714 04c8 0B44     		add	r3, r3, r1
 23715 04ca 03F20323 		addw	r3, r3, #515
 23716 04ce 0122     		movs	r2, #1
 23717 04d0 1A70     		strb	r2, [r3]
3232:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 23718              		.loc 1 3232 0 discriminator 3
 23719 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23720 04d4 4E49     		ldr	r1, .L909
 23721 04d6 1346     		mov	r3, r2
 23722 04d8 9B00     		lsls	r3, r3, #2
 23723 04da 1344     		add	r3, r3, r2
 23724 04dc 0B44     		add	r3, r3, r1
 23725 04de 03F50173 		add	r3, r3, #516
 23726 04e2 0022     		movs	r2, #0
 23727 04e4 1A70     		strb	r2, [r3]
3233:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 23728              		.loc 1 3233 0 discriminator 3
 23729 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23730 04e8 4949     		ldr	r1, .L909
 23731 04ea 1346     		mov	r3, r2
 23732 04ec 9B00     		lsls	r3, r3, #2
 23733 04ee 1344     		add	r3, r3, r2
 23734 04f0 0B44     		add	r3, r3, r1
 23735 04f2 03F20523 		addw	r3, r3, #517
 23736 04f6 0022     		movs	r2, #0
 23737 04f8 1A70     		strb	r2, [r3]
3234:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 23738              		.loc 1 3234 0 discriminator 3
 23739 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23740 04fc 4449     		ldr	r1, .L909
 23741 04fe 1346     		mov	r3, r2
 23742 0500 9B00     		lsls	r3, r3, #2
 23743 0502 1344     		add	r3, r3, r2
 23744 0504 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 519


 23745 0506 03F20623 		addw	r3, r3, #518
 23746 050a 0022     		movs	r2, #0
 23747 050c 1A70     		strb	r2, [r3]
3229:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23748              		.loc 1 3229 0 discriminator 3
 23749 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23750 0510 0133     		adds	r3, r3, #1
 23751 0512 FB71     		strb	r3, [r7, #7]
 23752              	.L899:
3229:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23753              		.loc 1 3229 0 is_stmt 0 discriminator 1
 23754 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23755 0516 042B     		cmp	r3, #4
 23756 0518 C7D9     		bls	.L900
3235:..\src/command_processing.c ****     }
3236:..\src/command_processing.c ****      
3237:..\src/command_processing.c ****     // EXP STRUCT
3238:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23757              		.loc 1 3238 0 is_stmt 1
 23758 051a 3D4B     		ldr	r3, .L909
 23759 051c 0022     		movs	r2, #0
 23760 051e 83F82622 		strb	r2, [r3, #550]
3239:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 23761              		.loc 1 3239 0
 23762 0522 3B4B     		ldr	r3, .L909
 23763 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23764 0528 1233     		adds	r3, r3, #18
 23765 052a 5B01     		lsls	r3, r3, #5
 23766 052c 384A     		ldr	r2, .L909
 23767 052e 1344     		add	r3, r3, r2
 23768 0530 384A     		ldr	r2, .L909+4
 23769 0532 1068     		ldr	r0, [r2]	@ unaligned
 23770 0534 1860     		str	r0, [r3]	@ unaligned
 23771 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23772 0538 9279     		ldrb	r2, [r2, #6]
 23773 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 23774 053c 9A71     		strb	r2, [r3, #6]
3240:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23775              		.loc 1 3240 0
 23776 053e 344B     		ldr	r3, .L909
 23777 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 23778 0544 012B     		cmp	r3, #1
 23779 0546 13D1     		bne	.L901
3241:..\src/command_processing.c ****         // Set date of maintenance from RTC
3242:..\src/command_processing.c ****         store_RTC_current_time();
 23780              		.loc 1 3242 0
 23781 0548 FFF7FEFF 		bl	store_RTC_current_time
3243:..\src/command_processing.c ****         
3244:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 23782              		.loc 1 3244 0
 23783 054c 304B     		ldr	r3, .L909
 23784 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 23785 0552 2F4B     		ldr	r3, .L909
 23786 0554 83F8A420 		strb	r2, [r3, #164]
3245:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 23787              		.loc 1 3245 0
 23788 0558 2D4B     		ldr	r3, .L909
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 520


 23789 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 23790 055e 2C4B     		ldr	r3, .L909
 23791 0560 83F8A520 		strb	r2, [r3, #165]
3246:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 23792              		.loc 1 3246 0
 23793 0564 2A4B     		ldr	r3, .L909
 23794 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 23795 056a 294B     		ldr	r3, .L909
 23796 056c 83F8A620 		strb	r2, [r3, #166]
 23797              	.L901:
3247:..\src/command_processing.c ****     }
3248:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 23798              		.loc 1 3248 0
 23799 0570 274B     		ldr	r3, .L909
 23800 0572 0022     		movs	r2, #0
 23801 0574 83F82722 		strb	r2, [r3, #551]
3249:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23802              		.loc 1 3249 0
 23803 0578 0023     		movs	r3, #0
 23804 057a FB71     		strb	r3, [r7, #7]
 23805 057c 08E0     		b	.L902
 23806              	.L903:
3250:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 23807              		.loc 1 3250 0 discriminator 3
 23808 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23809 0580 234A     		ldr	r2, .L909
 23810 0582 1344     		add	r3, r3, r2
 23811 0584 0022     		movs	r2, #0
 23812 0586 83F82822 		strb	r2, [r3, #552]
3249:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23813              		.loc 1 3249 0 discriminator 3
 23814 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23815 058c 0133     		adds	r3, r3, #1
 23816 058e FB71     		strb	r3, [r7, #7]
 23817              	.L902:
3249:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23818              		.loc 1 3249 0 is_stmt 0 discriminator 1
 23819 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23820 0592 0B2B     		cmp	r3, #11
 23821 0594 F3D9     		bls	.L903
3251:..\src/command_processing.c ****     }
3252:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3253:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 23822              		.loc 1 3253 0 is_stmt 1
 23823 0596 1E4B     		ldr	r3, .L909
 23824 0598 0122     		movs	r2, #1
 23825 059a 83F82A22 		strb	r2, [r3, #554]
3254:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 23826              		.loc 1 3254 0
 23827 059e 1C4B     		ldr	r3, .L909
 23828 05a0 0122     		movs	r2, #1
 23829 05a2 83F82B22 		strb	r2, [r3, #555]
3255:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23830              		.loc 1 3255 0
 23831 05a6 1A4B     		ldr	r3, .L909
 23832 05a8 0022     		movs	r2, #0
 23833 05aa 83F83422 		strb	r2, [r3, #564]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 521


3256:..\src/command_processing.c **** 
3257:..\src/command_processing.c ****     // WR STRUCT (default in generic fw)
3258:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23834              		.loc 1 3258 0
 23835 05ae 184B     		ldr	r3, .L909
 23836 05b0 0022     		movs	r2, #0
 23837 05b2 83F8E022 		strb	r2, [r3, #736]
3259:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23838              		.loc 1 3259 0
 23839 05b6 164B     		ldr	r3, .L909
 23840 05b8 4FF44872 		mov	r2, #800
 23841 05bc A3F8E222 		strh	r2, [r3, #738]	@ movhi
3260:..\src/command_processing.c **** 
3261:..\src/command_processing.c **** #ifdef SOFTHAND_FW
3262:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
3263:..\src/command_processing.c ****     memInit_SoftHandPro();
3264:..\src/command_processing.c **** #endif 
3265:..\src/command_processing.c **** 
3266:..\src/command_processing.c **** #ifdef MASTER_FW
3267:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3268:..\src/command_processing.c ****     memInit_Master();
3269:..\src/command_processing.c **** #endif 
3270:..\src/command_processing.c **** 
3271:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3272:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3273:..\src/command_processing.c ****     memInit_AirChambersFb();
3274:..\src/command_processing.c **** #endif 
3275:..\src/command_processing.c **** 
3276:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3277:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
3278:..\src/command_processing.c ****     memInit_OtbkActWristMs();
3279:..\src/command_processing.c **** #endif
3280:..\src/command_processing.c **** 
3281:..\src/command_processing.c ****     // JOYSTICK STRUCT
3282:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 23842              		.loc 1 3282 0
 23843 05c0 134B     		ldr	r3, .L909
 23844 05c2 9622     		movs	r2, #150
 23845 05c4 A3F8B022 		strh	r2, [r3, #688]	@ movhi
3283:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 23846              		.loc 1 3283 0
 23847 05c8 114B     		ldr	r3, .L909
 23848 05ca 6422     		movs	r2, #100
 23849 05cc A3F8B222 		strh	r2, [r3, #690]	@ movhi
3284:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 23850              		.loc 1 3284 0
 23851 05d0 0F4B     		ldr	r3, .L909
 23852 05d2 4FF48062 		mov	r2, #1024
 23853 05d6 A3F8B422 		strh	r2, [r3, #692]	@ movhi
3285:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 23854              		.loc 1 3285 0
 23855 05da 0D4B     		ldr	r3, .L909
 23856 05dc 4FF48062 		mov	r2, #1024
 23857 05e0 A3F8B622 		strh	r2, [r3, #694]	@ movhi
3286:..\src/command_processing.c **** 
3287:..\src/command_processing.c ****     // Default generic user_id
3288:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 522


 23858              		.loc 1 3288 0
 23859 05e4 0A4B     		ldr	r3, .L909
 23860 05e6 0022     		movs	r2, #0
 23861 05e8 83F8AB20 		strb	r2, [r3, #171]
3289:..\src/command_processing.c **** 
3290:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3291:..\src/command_processing.c ****     g_mem.flag = TRUE;
 23862              		.loc 1 3291 0
 23863 05ec 084B     		ldr	r3, .L909
 23864 05ee 0122     		movs	r2, #1
 23865 05f0 1A70     		strb	r2, [r3]
3292:..\src/command_processing.c ****     
3293:..\src/command_processing.c ****     //write that configuration to EEPROM
3294:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 23866              		.loc 1 3294 0
 23867 05f2 0020     		movs	r0, #0
 23868 05f4 FFF7FEFF 		bl	memStore
 23869 05f8 0346     		mov	r3, r0
 23870 05fa 002B     		cmp	r3, #0
 23871 05fc 0CD0     		beq	.L904
 23872              		.loc 1 3294 0 is_stmt 0 discriminator 1
 23873 05fe 3220     		movs	r0, #50
 23874 0600 FFF7FEFF 		bl	memStore
 23875 0604 0346     		mov	r3, r0
 23876 0606 002B     		cmp	r3, #0
 23877 0608 06D0     		beq	.L904
 23878              		.loc 1 3294 0 discriminator 3
 23879 060a 0123     		movs	r3, #1
 23880 060c 05E0     		b	.L905
 23881              	.L910:
 23882 060e 00BF     		.align	2
 23883              	.L909:
 23884 0610 00000000 		.word	g_mem
 23885 0614 A8210000 		.word	.LC319
 23886              	.L904:
 23887              		.loc 1 3294 0 discriminator 4
 23888 0618 0023     		movs	r3, #0
 23889              	.L905:
 23890              		.loc 1 3294 0 discriminator 6
 23891 061a DBB2     		uxtb	r3, r3
3295:..\src/command_processing.c **** }
 23892              		.loc 1 3295 0 is_stmt 1 discriminator 6
 23893 061c 1846     		mov	r0, r3
 23894 061e 0837     		adds	r7, r7, #8
 23895              		.cfi_def_cfa_offset 8
 23896 0620 BD46     		mov	sp, r7
 23897              		.cfi_def_cfa_register 13
 23898              		@ sp needed
 23899 0622 80BD     		pop	{r7, pc}
 23900              		.cfi_endproc
 23901              	.LFE89:
 23902              		.size	memInit, .-memInit
 23903              		.section	.rodata
 23904 21af 00       		.align	2
 23905              	.LC320:
 23906 21b0 55535230 		.ascii	"USR001\000"
 23906      303100
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 523


 23907              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 23908              		.align	2
 23909              		.global	memInit_SoftHandPro
 23910              		.thumb
 23911              		.thumb_func
 23912              		.type	memInit_SoftHandPro, %function
 23913              	memInit_SoftHandPro:
 23914              	.LFB90:
3296:..\src/command_processing.c **** 
3297:..\src/command_processing.c **** //==============================================================================
3298:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3299:..\src/command_processing.c **** //==============================================================================
3300:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3301:..\src/command_processing.c **** {
 23915              		.loc 1 3301 0
 23916              		.cfi_startproc
 23917              		@ args = 0, pretend = 0, frame = 8
 23918              		@ frame_needed = 1, uses_anonymous_args = 0
 23919              		@ link register save eliminated.
 23920 0000 80B4     		push	{r7}
 23921              		.cfi_def_cfa_offset 4
 23922              		.cfi_offset 7, -4
 23923 0002 83B0     		sub	sp, sp, #12
 23924              		.cfi_def_cfa_offset 16
 23925 0004 00AF     		add	r7, sp, #0
 23926              		.cfi_def_cfa_register 7
3302:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 23927              		.loc 1 3302 0
 23928 0006 0023     		movs	r3, #0
 23929 0008 FB70     		strb	r3, [r7, #3]
3303:..\src/command_processing.c ****     
3304:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3305:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23930              		.loc 1 3305 0
 23931 000a 8B4B     		ldr	r3, .L914
 23932 000c 0122     		movs	r2, #1
 23933 000e 83F8A720 		strb	r2, [r3, #167]
3306:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 23934              		.loc 1 3306 0
 23935 0012 894B     		ldr	r3, .L914
 23936 0014 0022     		movs	r2, #0
 23937 0016 83F8AC20 		strb	r2, [r3, #172]
3307:..\src/command_processing.c ****     
3308:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 23938              		.loc 1 3308 0
 23939 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23940 001c 8649     		ldr	r1, .L914
 23941 001e 1346     		mov	r3, r2
 23942 0020 DB00     		lsls	r3, r3, #3
 23943 0022 9B1A     		subs	r3, r3, r2
 23944 0024 1B01     		lsls	r3, r3, #4
 23945 0026 0B44     		add	r3, r3, r1
 23946 0028 E033     		adds	r3, r3, #224
 23947 002a 0122     		movs	r2, #1
 23948 002c 1A70     		strb	r2, [r3]
3309:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 23949              		.loc 1 3309 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 524


 23950 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23951 0030 8149     		ldr	r1, .L914
 23952 0032 1346     		mov	r3, r2
 23953 0034 DB00     		lsls	r3, r3, #3
 23954 0036 9B1A     		subs	r3, r3, r2
 23955 0038 1B01     		lsls	r3, r3, #4
 23956 003a 0B44     		add	r3, r3, r1
 23957 003c 03F58773 		add	r3, r3, #270
 23958 0040 0022     		movs	r2, #0
 23959 0042 1A70     		strb	r2, [r3]
3310:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 23960              		.loc 1 3310 0
 23961 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23962 0046 7C49     		ldr	r1, .L914
 23963 0048 1346     		mov	r3, r2
 23964 004a DB00     		lsls	r3, r3, #3
 23965 004c 9B1A     		subs	r3, r3, r2
 23966 004e 1B01     		lsls	r3, r3, #4
 23967 0050 0B44     		add	r3, r3, r1
 23968 0052 03F20F13 		addw	r3, r3, #271
 23969 0056 0022     		movs	r2, #0
 23970 0058 1A70     		strb	r2, [r3]
3311:..\src/command_processing.c ****     
3312:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3313:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 23971              		.loc 1 3313 0
 23972 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23973 005c 764B     		ldr	r3, .L914
 23974 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 23975 0062 7549     		ldr	r1, .L914
 23976 0064 1346     		mov	r3, r2
 23977 0066 DB00     		lsls	r3, r3, #3
 23978 0068 9B1A     		subs	r3, r3, r2
 23979 006a 1B01     		lsls	r3, r3, #4
 23980 006c 0B44     		add	r3, r3, r1
 23981 006e 03F58873 		add	r3, r3, #272
 23982 0072 0246     		mov	r2, r0
 23983 0074 1A70     		strb	r2, [r3]
3314:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23984              		.loc 1 3314 0
 23985 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23986 0078 6F49     		ldr	r1, .L914
 23987 007a 1346     		mov	r3, r2
 23988 007c DB00     		lsls	r3, r3, #3
 23989 007e 9B1A     		subs	r3, r3, r2
 23990 0080 1B01     		lsls	r3, r3, #4
 23991 0082 0B44     		add	r3, r3, r1
 23992 0084 03F21113 		addw	r3, r3, #273
 23993 0088 0122     		movs	r2, #1
 23994 008a 1A70     		strb	r2, [r3]
3315:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 23995              		.loc 1 3315 0
 23996 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23997 008e 6A49     		ldr	r1, .L914
 23998 0090 1346     		mov	r3, r2
 23999 0092 DB00     		lsls	r3, r3, #3
 24000 0094 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 525


 24001 0096 1B01     		lsls	r3, r3, #4
 24002 0098 0B44     		add	r3, r3, r1
 24003 009a 03F58973 		add	r3, r3, #274
 24004 009e 0122     		movs	r2, #1
 24005 00a0 1A70     		strb	r2, [r3]
3316:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 24006              		.loc 1 3316 0
 24007 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 24008 00a4 6449     		ldr	r1, .L914
 24009 00a6 1346     		mov	r3, r2
 24010 00a8 DB00     		lsls	r3, r3, #3
 24011 00aa 9B1A     		subs	r3, r3, r2
 24012 00ac 1B01     		lsls	r3, r3, #4
 24013 00ae 0B44     		add	r3, r3, r1
 24014 00b0 E433     		adds	r3, r3, #228
 24015 00b2 0022     		movs	r2, #0
 24016 00b4 1A60     		str	r2, [r3]
3317:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 24017              		.loc 1 3317 0
 24018 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 24019 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 24020 00ba 5F48     		ldr	r0, .L914
 24021 00bc 0B46     		mov	r3, r1
 24022 00be DB00     		lsls	r3, r3, #3
 24023 00c0 5B1A     		subs	r3, r3, r1
 24024 00c2 1B01     		lsls	r3, r3, #4
 24025 00c4 0344     		add	r3, r3, r0
 24026 00c6 03F58873 		add	r3, r3, #272
 24027 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24028 00cc 1846     		mov	r0, r3
 24029 00ce 5A49     		ldr	r1, .L914
 24030 00d0 0346     		mov	r3, r0
 24031 00d2 5B00     		lsls	r3, r3, #1
 24032 00d4 0344     		add	r3, r3, r0
 24033 00d6 1B01     		lsls	r3, r3, #4
 24034 00d8 0B44     		add	r3, r3, r1
 24035 00da 03F29513 		addw	r3, r3, #405
 24036 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24037 00e0 1946     		mov	r1, r3
 24038 00e2 4FF47A53 		mov	r3, #16000
 24039 00e6 03FA01F1 		lsl	r1, r3, r1
 24040 00ea 5348     		ldr	r0, .L914
 24041 00ec 1346     		mov	r3, r2
 24042 00ee DB00     		lsls	r3, r3, #3
 24043 00f0 9B1A     		subs	r3, r3, r2
 24044 00f2 1B01     		lsls	r3, r3, #4
 24045 00f4 0344     		add	r3, r3, r0
 24046 00f6 E833     		adds	r3, r3, #232
 24047 00f8 1960     		str	r1, [r3]
 24048              	.LBB30:
3318:..\src/command_processing.c ****     
3319:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 24049              		.loc 1 3319 0
 24050 00fa 0023     		movs	r3, #0
 24051 00fc 7B60     		str	r3, [r7, #4]
 24052 00fe 2EE0     		b	.L912
 24053              	.L913:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 526


3320:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3321:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 24054              		.loc 1 3321 0 discriminator 3
 24055 0100 4D49     		ldr	r1, .L914
 24056 0102 7A68     		ldr	r2, [r7, #4]
 24057 0104 1346     		mov	r3, r2
 24058 0106 5B00     		lsls	r3, r3, #1
 24059 0108 1344     		add	r3, r3, r2
 24060 010a 1B01     		lsls	r3, r3, #4
 24061 010c 0B44     		add	r3, r3, r1
 24062 010e 03F5D873 		add	r3, r3, #432
 24063 0112 0122     		movs	r2, #1
 24064 0114 1A70     		strb	r2, [r3]
3322:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 24065              		.loc 1 3322 0 discriminator 3
 24066 0116 4849     		ldr	r1, .L914
 24067 0118 7A68     		ldr	r2, [r7, #4]
 24068 011a 1346     		mov	r3, r2
 24069 011c 5B00     		lsls	r3, r3, #1
 24070 011e 1344     		add	r3, r3, r2
 24071 0120 1B01     		lsls	r3, r3, #4
 24072 0122 0B44     		add	r3, r3, r1
 24073 0124 03F2B513 		addw	r3, r3, #437
 24074 0128 2322     		movs	r2, #35
 24075 012a 1A70     		strb	r2, [r3]
3323:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 24076              		.loc 1 3323 0 discriminator 3
 24077 012c 4249     		ldr	r1, .L914
 24078 012e 7A68     		ldr	r2, [r7, #4]
 24079 0130 1346     		mov	r3, r2
 24080 0132 5B00     		lsls	r3, r3, #1
 24081 0134 1344     		add	r3, r3, r2
 24082 0136 1B01     		lsls	r3, r3, #4
 24083 0138 0B44     		add	r3, r3, r1
 24084 013a 03F5DB73 		add	r3, r3, #438
 24085 013e 0322     		movs	r2, #3
 24086 0140 1A70     		strb	r2, [r3]
3324:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 24087              		.loc 1 3324 0 discriminator 3
 24088 0142 3D49     		ldr	r1, .L914
 24089 0144 7A68     		ldr	r2, [r7, #4]
 24090 0146 1346     		mov	r3, r2
 24091 0148 5B00     		lsls	r3, r3, #1
 24092 014a 1344     		add	r3, r3, r2
 24093 014c 1B01     		lsls	r3, r3, #4
 24094 014e 0B44     		add	r3, r3, r1
 24095 0150 03F2B713 		addw	r3, r3, #439
 24096 0154 FF22     		movs	r2, #255
 24097 0156 1A70     		strb	r2, [r3]
3319:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 24098              		.loc 1 3319 0 discriminator 3
 24099 0158 7B68     		ldr	r3, [r7, #4]
 24100 015a 0133     		adds	r3, r3, #1
 24101 015c 7B60     		str	r3, [r7, #4]
 24102              	.L912:
3319:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 24103              		.loc 1 3319 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 527


 24104 015e 7B68     		ldr	r3, [r7, #4]
 24105 0160 012B     		cmp	r3, #1
 24106 0162 CDDD     		ble	.L913
 24107              	.LBE30:
3325:..\src/command_processing.c ****     }
3326:..\src/command_processing.c ****     
3327:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 24108              		.loc 1 3327 0 is_stmt 1
 24109 0164 344B     		ldr	r3, .L914
 24110 0166 4FF48062 		mov	r2, #1024
 24111 016a C3F8F421 		str	r2, [r3, #500]
3328:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 24112              		.loc 1 3328 0
 24113 016e 324B     		ldr	r3, .L914
 24114 0170 4FF48062 		mov	r2, #1024
 24115 0174 C3F8F821 		str	r2, [r3, #504]
3329:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 24116              		.loc 1 3329 0
 24117 0178 2F4B     		ldr	r3, .L914
 24118 017a C822     		movs	r2, #200
 24119 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3330:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 24120              		.loc 1 3330 0
 24121 0180 2D4B     		ldr	r3, .L914
 24122 0182 C822     		movs	r2, #200
 24123 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3331:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 24124              		.loc 1 3331 0
 24125 0188 2B4B     		ldr	r3, .L914
 24126 018a 6422     		movs	r2, #100
 24127 018c 83F8FC21 		strb	r2, [r3, #508]
3332:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 24128              		.loc 1 3332 0
 24129 0190 294B     		ldr	r3, .L914
 24130 0192 6422     		movs	r2, #100
 24131 0194 83F8FD21 		strb	r2, [r3, #509]
3333:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 24132              		.loc 1 3333 0
 24133 0198 274B     		ldr	r3, .L914
 24134 019a 0022     		movs	r2, #0
 24135 019c 83F8FE21 		strb	r2, [r3, #510]
3334:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 24136              		.loc 1 3334 0
 24137 01a0 254B     		ldr	r3, .L914
 24138 01a2 0022     		movs	r2, #0
 24139 01a4 83F8FF21 		strb	r2, [r3, #511]
3335:..\src/command_processing.c ****     
3336:..\src/command_processing.c ****     //Initialize rest position parameters  
3337:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 24140              		.loc 1 3337 0
 24141 01a8 234B     		ldr	r3, .L914
 24142 01aa 0022     		movs	r2, #0
 24143 01ac 83F8AC22 		strb	r2, [r3, #684]
3338:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 24144              		.loc 1 3338 0
 24145 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 24146 01b2 2149     		ldr	r1, .L914
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 528


 24147 01b4 1346     		mov	r3, r2
 24148 01b6 DB00     		lsls	r3, r3, #3
 24149 01b8 9B1A     		subs	r3, r3, r2
 24150 01ba 1B01     		lsls	r3, r3, #4
 24151 01bc 0B44     		add	r3, r3, r1
 24152 01be 03F58873 		add	r3, r3, #272
 24153 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24154 01c4 1946     		mov	r1, r3
 24155 01c6 1C4A     		ldr	r2, .L914
 24156 01c8 0B46     		mov	r3, r1
 24157 01ca 5B00     		lsls	r3, r3, #1
 24158 01cc 0B44     		add	r3, r3, r1
 24159 01ce 1B01     		lsls	r3, r3, #4
 24160 01d0 1344     		add	r3, r3, r2
 24161 01d2 03F29513 		addw	r3, r3, #405
 24162 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24163 01d8 1A46     		mov	r2, r3
 24164 01da 41F65833 		movw	r3, #7000
 24165 01de 9340     		lsls	r3, r3, r2
 24166 01e0 154A     		ldr	r2, .L914
 24167 01e2 C2F8A032 		str	r3, [r2, #672]
3339:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 24168              		.loc 1 3339 0
 24169 01e6 144B     		ldr	r3, .L914
 24170 01e8 0A22     		movs	r2, #10
 24171 01ea C3F8A422 		str	r2, [r3, #676]
3340:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 24172              		.loc 1 3340 0
 24173 01ee 124B     		ldr	r3, .L914
 24174 01f0 42F21072 		movw	r2, #10000
 24175 01f4 C3F8A822 		str	r2, [r3, #680]
3341:..\src/command_processing.c **** 	
3342:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 24176              		.loc 1 3342 0
 24177 01f8 0F4B     		ldr	r3, .L914
 24178 01fa 0022     		movs	r2, #0
 24179 01fc 83F80022 		strb	r2, [r3, #512]
3343:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 24180              		.loc 1 3343 0
 24181 0200 0D4B     		ldr	r3, .L914
 24182 0202 0022     		movs	r2, #0
 24183 0204 83F82622 		strb	r2, [r3, #550]
3344:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 24184              		.loc 1 3344 0
 24185 0208 0B4B     		ldr	r3, .L914
 24186 020a 0022     		movs	r2, #0
 24187 020c 83F83422 		strb	r2, [r3, #564]
3345:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 24188              		.loc 1 3345 0
 24189 0210 094B     		ldr	r3, .L914
 24190 0212 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 24191 0216 1233     		adds	r3, r3, #18
 24192 0218 5B01     		lsls	r3, r3, #5
 24193 021a 074A     		ldr	r2, .L914
 24194 021c 1344     		add	r3, r3, r2
 24195 021e 074A     		ldr	r2, .L914+4
 24196 0220 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 529


 24197 0222 1860     		str	r0, [r3]	@ unaligned
 24198 0224 9188     		ldrh	r1, [r2, #4]	@ unaligned
 24199 0226 9279     		ldrb	r2, [r2, #6]
 24200 0228 9980     		strh	r1, [r3, #4]	@ unaligned
 24201 022a 9A71     		strb	r2, [r3, #6]
3346:..\src/command_processing.c **** }
 24202              		.loc 1 3346 0
 24203 022c 00BF     		nop
 24204 022e 0C37     		adds	r7, r7, #12
 24205              		.cfi_def_cfa_offset 4
 24206 0230 BD46     		mov	sp, r7
 24207              		.cfi_def_cfa_register 13
 24208              		@ sp needed
 24209 0232 80BC     		pop	{r7}
 24210              		.cfi_restore 7
 24211              		.cfi_def_cfa_offset 0
 24212 0234 7047     		bx	lr
 24213              	.L915:
 24214 0236 00BF     		.align	2
 24215              	.L914:
 24216 0238 00000000 		.word	g_mem
 24217 023c B0210000 		.word	.LC320
 24218              		.cfi_endproc
 24219              	.LFE90:
 24220              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 24221              		.section	.text.memInit_Master,"ax",%progbits
 24222              		.align	2
 24223              		.global	memInit_Master
 24224              		.thumb
 24225              		.thumb_func
 24226              		.type	memInit_Master, %function
 24227              	memInit_Master:
 24228              	.LFB91:
3347:..\src/command_processing.c **** 
3348:..\src/command_processing.c **** //==============================================================================
3349:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3350:..\src/command_processing.c **** //==============================================================================
3351:..\src/command_processing.c **** void memInit_Master(void)
3352:..\src/command_processing.c **** {
 24229              		.loc 1 3352 0
 24230              		.cfi_startproc
 24231              		@ args = 0, pretend = 0, frame = 0
 24232              		@ frame_needed = 1, uses_anonymous_args = 0
 24233              		@ link register save eliminated.
 24234 0000 80B4     		push	{r7}
 24235              		.cfi_def_cfa_offset 4
 24236              		.cfi_offset 7, -4
 24237 0002 00AF     		add	r7, sp, #0
 24238              		.cfi_def_cfa_register 7
3353:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 24239              		.loc 1 3353 0
 24240 0004 074B     		ldr	r3, .L917
 24241 0006 0222     		movs	r2, #2
 24242 0008 83F8A020 		strb	r2, [r3, #160]
3354:..\src/command_processing.c ****     
3355:..\src/command_processing.c ****     // MS STRUCT
3356:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 530


 24243              		.loc 1 3356 0
 24244 000c 054B     		ldr	r3, .L917
 24245 000e 0122     		movs	r2, #1
 24246 0010 83F8C122 		strb	r2, [r3, #705]
3357:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 24247              		.loc 1 3357 0
 24248 0014 034B     		ldr	r3, .L917
 24249 0016 0022     		movs	r2, #0
 24250 0018 83F8C022 		strb	r2, [r3, #704]
3358:..\src/command_processing.c **** }
 24251              		.loc 1 3358 0
 24252 001c 00BF     		nop
 24253 001e BD46     		mov	sp, r7
 24254              		.cfi_def_cfa_register 13
 24255              		@ sp needed
 24256 0020 80BC     		pop	{r7}
 24257              		.cfi_restore 7
 24258              		.cfi_def_cfa_offset 0
 24259 0022 7047     		bx	lr
 24260              	.L918:
 24261              		.align	2
 24262              	.L917:
 24263 0024 00000000 		.word	g_mem
 24264              		.cfi_endproc
 24265              	.LFE91:
 24266              		.size	memInit_Master, .-memInit_Master
 24267              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 24268              		.align	2
 24269              		.global	memInit_AirChambersFb
 24270              		.thumb
 24271              		.thumb_func
 24272              		.type	memInit_AirChambersFb, %function
 24273              	memInit_AirChambersFb:
 24274              	.LFB92:
3359:..\src/command_processing.c **** 
3360:..\src/command_processing.c **** //==============================================================================
3361:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3362:..\src/command_processing.c **** //==============================================================================
3363:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3364:..\src/command_processing.c **** {
 24275              		.loc 1 3364 0
 24276              		.cfi_startproc
 24277              		@ args = 0, pretend = 0, frame = 0
 24278              		@ frame_needed = 1, uses_anonymous_args = 0
 24279              		@ link register save eliminated.
 24280 0000 80B4     		push	{r7}
 24281              		.cfi_def_cfa_offset 4
 24282              		.cfi_offset 7, -4
 24283 0002 00AF     		add	r7, sp, #0
 24284              		.cfi_def_cfa_register 7
3365:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3366:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 24285              		.loc 1 3366 0
 24286 0004 1A4B     		ldr	r3, .L920
 24287 0006 0222     		movs	r2, #2
 24288 0008 83F8AC20 		strb	r2, [r3, #172]
3367:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 531


3368:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 24289              		.loc 1 3368 0
 24290 000c 184B     		ldr	r3, .L920
 24291 000e 0122     		movs	r2, #1
 24292 0010 83F80F21 		strb	r2, [r3, #271]
3369:..\src/command_processing.c ****     
3370:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3371:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3372:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 24293              		.loc 1 3372 0
 24294 0014 164B     		ldr	r3, .L920
 24295 0016 0422     		movs	r2, #4
 24296 0018 83F87E21 		strb	r2, [r3, #382]
3373:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 24297              		.loc 1 3373 0
 24298 001c 144B     		ldr	r3, .L920
 24299 001e 0022     		movs	r2, #0
 24300 0020 C3F85421 		str	r2, [r3, #340]
3374:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 24301              		.loc 1 3374 0
 24302 0024 124B     		ldr	r3, .L920
 24303 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24304 002a 1946     		mov	r1, r3
 24305 002c 104A     		ldr	r2, .L920
 24306 002e 0B46     		mov	r3, r1
 24307 0030 5B00     		lsls	r3, r3, #1
 24308 0032 0B44     		add	r3, r3, r1
 24309 0034 1B01     		lsls	r3, r3, #4
 24310 0036 1344     		add	r3, r3, r2
 24311 0038 03F29513 		addw	r3, r3, #405
 24312 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24313 003e 1A46     		mov	r2, r3
 24314 0040 45F2F053 		movw	r3, #22000
 24315 0044 9340     		lsls	r3, r3, r2
 24316 0046 0A4A     		ldr	r2, .L920
 24317 0048 C2F85831 		str	r3, [r2, #344]
3375:..\src/command_processing.c ****     
3376:..\src/command_processing.c ****     // FB STRUCT
3377:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 24318              		.loc 1 3377 0
 24319 004c 084B     		ldr	r3, .L920
 24320 004e 4FF4E172 		mov	r2, #450
 24321 0052 C3F8D022 		str	r2, [r3, #720]
3378:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 24322              		.loc 1 3378 0
 24323 0056 064B     		ldr	r3, .L920
 24324 0058 064A     		ldr	r2, .L920+4
 24325 005a C3F8D422 		str	r2, [r3, #724]	@ float
3379:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 24326              		.loc 1 3379 0
 24327 005e 044B     		ldr	r3, .L920
 24328 0060 4FF07E52 		mov	r2, #1065353216
 24329 0064 C3F8D822 		str	r2, [r3, #728]	@ float
3380:..\src/command_processing.c **** }
 24330              		.loc 1 3380 0
 24331 0068 00BF     		nop
 24332 006a BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 532


 24333              		.cfi_def_cfa_register 13
 24334              		@ sp needed
 24335 006c 80BC     		pop	{r7}
 24336              		.cfi_restore 7
 24337              		.cfi_def_cfa_offset 0
 24338 006e 7047     		bx	lr
 24339              	.L921:
 24340              		.align	2
 24341              	.L920:
 24342 0070 00000000 		.word	g_mem
 24343 0074 0000C841 		.word	1103626240
 24344              		.cfi_endproc
 24345              	.LFE92:
 24346              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 24347              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 24348              		.align	2
 24349              		.global	memInit_OtbkActWristMs
 24350              		.thumb
 24351              		.thumb_func
 24352              		.type	memInit_OtbkActWristMs, %function
 24353              	memInit_OtbkActWristMs:
 24354              	.LFB93:
3381:..\src/command_processing.c **** 
3382:..\src/command_processing.c **** //==============================================================================
3383:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3384:..\src/command_processing.c **** //==============================================================================
3385:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3386:..\src/command_processing.c **** {
 24355              		.loc 1 3386 0
 24356              		.cfi_startproc
 24357              		@ args = 0, pretend = 0, frame = 0
 24358              		@ frame_needed = 1, uses_anonymous_args = 0
 24359              		@ link register save eliminated.
 24360 0000 80B4     		push	{r7}
 24361              		.cfi_def_cfa_offset 4
 24362              		.cfi_offset 7, -4
 24363 0002 00AF     		add	r7, sp, #0
 24364              		.cfi_def_cfa_register 7
3387:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3388:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 24365              		.loc 1 3388 0
 24366 0004 294B     		ldr	r3, .L923
 24367 0006 0322     		movs	r2, #3
 24368 0008 83F8AC20 		strb	r2, [r3, #172]
3389:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 24369              		.loc 1 3389 0
 24370 000c 274B     		ldr	r3, .L923
 24371 000e 0122     		movs	r2, #1
 24372 0010 83F8A720 		strb	r2, [r3, #167]
3390:..\src/command_processing.c ****     
3391:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 24373              		.loc 1 3391 0
 24374 0014 254B     		ldr	r3, .L923
 24375 0016 0122     		movs	r2, #1
 24376 0018 83F80F21 		strb	r2, [r3, #271]
3392:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 24377              		.loc 1 3392 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 533


 24378 001c 234B     		ldr	r3, .L923
 24379 001e 6422     		movs	r2, #100
 24380 0020 83F81121 		strb	r2, [r3, #273]
3393:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 24381              		.loc 1 3393 0
 24382 0024 214B     		ldr	r3, .L923
 24383 0026 0022     		movs	r2, #0
 24384 0028 83F81221 		strb	r2, [r3, #274]
3394:..\src/command_processing.c ****     
3395:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3396:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3397:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 24385              		.loc 1 3397 0
 24386 002c 1F4B     		ldr	r3, .L923
 24387 002e 0422     		movs	r2, #4
 24388 0030 83F87E21 		strb	r2, [r3, #382]
3398:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 24389              		.loc 1 3398 0
 24390 0034 1D4B     		ldr	r3, .L923
 24391 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 24392 003a 1C4B     		ldr	r3, .L923
 24393 003c 83F88021 		strb	r2, [r3, #384]
3399:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 24394              		.loc 1 3399 0
 24395 0040 1A4B     		ldr	r3, .L923
 24396 0042 0122     		movs	r2, #1
 24397 0044 83F88121 		strb	r2, [r3, #385]
3400:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 24398              		.loc 1 3400 0
 24399 0048 184B     		ldr	r3, .L923
 24400 004a 0022     		movs	r2, #0
 24401 004c 83F88221 		strb	r2, [r3, #386]
3401:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 24402              		.loc 1 3401 0
 24403 0050 164B     		ldr	r3, .L923
 24404 0052 0022     		movs	r2, #0
 24405 0054 C3F85421 		str	r2, [r3, #340]
3402:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 24406              		.loc 1 3402 0
 24407 0058 144B     		ldr	r3, .L923
 24408 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24409 005e 1946     		mov	r1, r3
 24410 0060 124A     		ldr	r2, .L923
 24411 0062 0B46     		mov	r3, r1
 24412 0064 5B00     		lsls	r3, r3, #1
 24413 0066 0B44     		add	r3, r3, r1
 24414 0068 1B01     		lsls	r3, r3, #4
 24415 006a 1344     		add	r3, r3, r2
 24416 006c 03F29513 		addw	r3, r3, #405
 24417 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24418 0072 1A46     		mov	r2, r3
 24419 0074 4FF47A53 		mov	r3, #16000
 24420 0078 9340     		lsls	r3, r3, r2
 24421 007a 0C4A     		ldr	r2, .L923
 24422 007c C2F85831 		str	r3, [r2, #344]
3403:..\src/command_processing.c ****     
3404:..\src/command_processing.c ****     // WR STRUCT
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 534


3405:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 24423              		.loc 1 3405 0
 24424 0080 0A4B     		ldr	r3, .L923
 24425 0082 0022     		movs	r2, #0
 24426 0084 83F8E022 		strb	r2, [r3, #736]
3406:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 24427              		.loc 1 3406 0
 24428 0088 084B     		ldr	r3, .L923
 24429 008a 4FF44872 		mov	r2, #800
 24430 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
3407:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 24431              		.loc 1 3407 0
 24432 0092 064B     		ldr	r3, .L923
 24433 0094 4FF44872 		mov	r2, #800
 24434 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3408:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 24435              		.loc 1 3408 0
 24436 009c 034B     		ldr	r3, .L923
 24437 009e 0022     		movs	r2, #0
 24438 00a0 83F8E622 		strb	r2, [r3, #742]
3409:..\src/command_processing.c **** }
 24439              		.loc 1 3409 0
 24440 00a4 00BF     		nop
 24441 00a6 BD46     		mov	sp, r7
 24442              		.cfi_def_cfa_register 13
 24443              		@ sp needed
 24444 00a8 80BC     		pop	{r7}
 24445              		.cfi_restore 7
 24446              		.cfi_def_cfa_offset 0
 24447 00aa 7047     		bx	lr
 24448              	.L924:
 24449              		.align	2
 24450              	.L923:
 24451 00ac 00000000 		.word	g_mem
 24452              		.cfi_endproc
 24453              	.LFE93:
 24454              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 24455              		.section	.text.cmd_get_measurements,"ax",%progbits
 24456              		.align	2
 24457              		.global	cmd_get_measurements
 24458              		.thumb
 24459              		.thumb_func
 24460              		.type	cmd_get_measurements, %function
 24461              	cmd_get_measurements:
 24462              	.LFB94:
3410:..\src/command_processing.c **** 
3411:..\src/command_processing.c **** //==============================================================================
3412:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3413:..\src/command_processing.c **** //==============================================================================
3414:..\src/command_processing.c **** /**
3415:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3416:..\src/command_processing.c **** **/
3417:..\src/command_processing.c **** 
3418:..\src/command_processing.c **** void cmd_get_measurements(){
 24463              		.loc 1 3418 0
 24464              		.cfi_startproc
 24465              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 535


 24466              		@ frame_needed = 1, uses_anonymous_args = 0
 24467 0000 90B5     		push	{r4, r7, lr}
 24468              		.cfi_def_cfa_offset 12
 24469              		.cfi_offset 4, -12
 24470              		.cfi_offset 7, -8
 24471              		.cfi_offset 14, -4
 24472 0002 85B0     		sub	sp, sp, #20
 24473              		.cfi_def_cfa_offset 32
 24474 0004 00AF     		add	r7, sp, #0
 24475              		.cfi_def_cfa_register 7
3419:..\src/command_processing.c ****  
3420:..\src/command_processing.c ****     uint8 CYDATA index;
3421:..\src/command_processing.c ****     int16 aux_int16;
3422:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3423:..\src/command_processing.c ****     
3424:..\src/command_processing.c ****     uint8 packet_data[8]; 
3425:..\src/command_processing.c ****     
3426:..\src/command_processing.c ****     //Header package
3427:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 24476              		.loc 1 3427 0
 24477 0006 8423     		movs	r3, #132
 24478 0008 3B71     		strb	r3, [r7, #4]
3428:..\src/command_processing.c ****     
3429:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24479              		.loc 1 3429 0
 24480 000a 0323     		movs	r3, #3
 24481 000c FB73     		strb	r3, [r7, #15]
 24482 000e 38E0     		b	.L926
 24483              	.L927:
3430:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24484              		.loc 1 3430 0
 24485 0010 434B     		ldr	r3, .L929
 24486 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24487 0016 1A46     		mov	r2, r3
 24488 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24489 001a 4248     		ldr	r0, .L929+4
 24490 001c 1346     		mov	r3, r2
 24491 001e 5B00     		lsls	r3, r3, #1
 24492 0020 1344     		add	r3, r3, r2
 24493 0022 9B00     		lsls	r3, r3, #2
 24494 0024 1344     		add	r3, r3, r2
 24495 0026 0B44     		add	r3, r3, r1
 24496 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24497 002c 3C4B     		ldr	r3, .L929
 24498 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24499 0032 1C46     		mov	r4, r3
 24500 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24501 0036 3A48     		ldr	r0, .L929
 24502 0038 2346     		mov	r3, r4
 24503 003a 5B00     		lsls	r3, r3, #1
 24504 003c 2344     		add	r3, r3, r4
 24505 003e 1B01     		lsls	r3, r3, #4
 24506 0040 0344     		add	r3, r3, r0
 24507 0042 0B44     		add	r3, r3, r1
 24508 0044 03F29513 		addw	r3, r3, #405
 24509 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24510 004a 42FA03F3 		asr	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 536


 24511 004e 1BB2     		sxth	r3, r3
 24512 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3431:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24513              		.loc 1 3431 0
 24514 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24515 0054 5B00     		lsls	r3, r3, #1
 24516 0056 0233     		adds	r3, r3, #2
 24517 0058 07F10C02 		add	r2, r7, #12
 24518 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24519 005e 07F11001 		add	r1, r7, #16
 24520 0062 0B44     		add	r3, r3, r1
 24521 0064 03F80C2C 		strb	r2, [r3, #-12]
3432:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24522              		.loc 1 3432 0
 24523 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24524 006a 5B00     		lsls	r3, r3, #1
 24525 006c 5A1C     		adds	r2, r3, #1
 24526 006e 07F10C03 		add	r3, r7, #12
 24527 0072 0133     		adds	r3, r3, #1
 24528 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24529 0076 07F11003 		add	r3, r7, #16
 24530 007a 1344     		add	r3, r3, r2
 24531 007c 0A46     		mov	r2, r1
 24532 007e 03F80C2C 		strb	r2, [r3, #-12]
 24533              	.L926:
3429:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24534              		.loc 1 3429 0 discriminator 1
 24535 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24536 0084 5A1E     		subs	r2, r3, #1
 24537 0086 FA73     		strb	r2, [r7, #15]
 24538 0088 002B     		cmp	r3, #0
 24539 008a C1D1     		bne	.L927
3433:..\src/command_processing.c ****     }
3434:..\src/command_processing.c **** 
3435:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE){
 24540              		.loc 1 3435 0
 24541 008c 244B     		ldr	r3, .L929
 24542 008e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24543 0092 012B     		cmp	r3, #1
 24544 0094 34D1     		bne	.L928
3436:..\src/command_processing.c ****         //Overwrite only second measure with first encoder on second motor line (just to have a mea
3437:..\src/command_processing.c ****         index = 1;
 24545              		.loc 1 3437 0
 24546 0096 0123     		movs	r3, #1
 24547 0098 FB73     		strb	r3, [r7, #15]
3438:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[1].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[
 24548              		.loc 1 3438 0
 24549 009a 214B     		ldr	r3, .L929
 24550 009c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24551 00a0 1946     		mov	r1, r3
 24552 00a2 204A     		ldr	r2, .L929+4
 24553 00a4 3423     		movs	r3, #52
 24554 00a6 03FB01F3 		mul	r3, r3, r1
 24555 00aa 1344     		add	r3, r3, r2
 24556 00ac 1A68     		ldr	r2, [r3]
 24557 00ae 1C4B     		ldr	r3, .L929
 24558 00b0 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 537


 24559 00b4 1846     		mov	r0, r3
 24560 00b6 1A49     		ldr	r1, .L929
 24561 00b8 0346     		mov	r3, r0
 24562 00ba 5B00     		lsls	r3, r3, #1
 24563 00bc 0344     		add	r3, r3, r0
 24564 00be 1B01     		lsls	r3, r3, #4
 24565 00c0 0B44     		add	r3, r3, r1
 24566 00c2 03F29513 		addw	r3, r3, #405
 24567 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24568 00c8 42FA03F3 		asr	r3, r2, r3
 24569 00cc 1BB2     		sxth	r3, r3
 24570 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3439:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24571              		.loc 1 3439 0
 24572 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24573 00d2 5B00     		lsls	r3, r3, #1
 24574 00d4 0233     		adds	r3, r3, #2
 24575 00d6 07F10C02 		add	r2, r7, #12
 24576 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24577 00dc 07F11001 		add	r1, r7, #16
 24578 00e0 0B44     		add	r3, r3, r1
 24579 00e2 03F80C2C 		strb	r2, [r3, #-12]
3440:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24580              		.loc 1 3440 0
 24581 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24582 00e8 5B00     		lsls	r3, r3, #1
 24583 00ea 5A1C     		adds	r2, r3, #1
 24584 00ec 07F10C03 		add	r3, r7, #12
 24585 00f0 0133     		adds	r3, r3, #1
 24586 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24587 00f4 07F11003 		add	r3, r7, #16
 24588 00f8 1344     		add	r3, r3, r2
 24589 00fa 0A46     		mov	r2, r1
 24590 00fc 03F80C2C 		strb	r2, [r3, #-12]
 24591              	.L928:
3441:..\src/command_processing.c ****     }
3442:..\src/command_processing.c ****     
3443:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3444:..\src/command_processing.c **** 
3445:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24592              		.loc 1 3445 0
 24593 0100 3B1D     		adds	r3, r7, #4
 24594 0102 0721     		movs	r1, #7
 24595 0104 1846     		mov	r0, r3
 24596 0106 FFF7FEFF 		bl	LCRChecksum
 24597 010a 0346     		mov	r3, r0
 24598 010c FB72     		strb	r3, [r7, #11]
3446:..\src/command_processing.c **** 
3447:..\src/command_processing.c ****     commWrite(packet_data, 8);
 24599              		.loc 1 3447 0
 24600 010e 3B1D     		adds	r3, r7, #4
 24601 0110 0821     		movs	r1, #8
 24602 0112 1846     		mov	r0, r3
 24603 0114 FFF7FEFF 		bl	commWrite
3448:..\src/command_processing.c ****    
3449:..\src/command_processing.c **** }
 24604              		.loc 1 3449 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 538


 24605 0118 00BF     		nop
 24606 011a 1437     		adds	r7, r7, #20
 24607              		.cfi_def_cfa_offset 12
 24608 011c BD46     		mov	sp, r7
 24609              		.cfi_def_cfa_register 13
 24610              		@ sp needed
 24611 011e 90BD     		pop	{r4, r7, pc}
 24612              	.L930:
 24613              		.align	2
 24614              	.L929:
 24615 0120 00000000 		.word	g_mem
 24616 0124 00000000 		.word	g_measOld
 24617              		.cfi_endproc
 24618              	.LFE94:
 24619              		.size	cmd_get_measurements, .-cmd_get_measurements
 24620              		.section	.text.cmd_get_velocities,"ax",%progbits
 24621              		.align	2
 24622              		.global	cmd_get_velocities
 24623              		.thumb
 24624              		.thumb_func
 24625              		.type	cmd_get_velocities, %function
 24626              	cmd_get_velocities:
 24627              	.LFB95:
3450:..\src/command_processing.c **** 
3451:..\src/command_processing.c **** void cmd_get_velocities(){
 24628              		.loc 1 3451 0
 24629              		.cfi_startproc
 24630              		@ args = 0, pretend = 0, frame = 16
 24631              		@ frame_needed = 1, uses_anonymous_args = 0
 24632 0000 90B5     		push	{r4, r7, lr}
 24633              		.cfi_def_cfa_offset 12
 24634              		.cfi_offset 4, -12
 24635              		.cfi_offset 7, -8
 24636              		.cfi_offset 14, -4
 24637 0002 85B0     		sub	sp, sp, #20
 24638              		.cfi_def_cfa_offset 32
 24639 0004 00AF     		add	r7, sp, #0
 24640              		.cfi_def_cfa_register 7
3452:..\src/command_processing.c ****  
3453:..\src/command_processing.c ****     uint8 CYDATA index;
3454:..\src/command_processing.c ****     int16 aux_int16;
3455:..\src/command_processing.c ****    
3456:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3457:..\src/command_processing.c ****     
3458:..\src/command_processing.c ****     uint8 packet_data[8]; 
3459:..\src/command_processing.c ****     
3460:..\src/command_processing.c ****     //Header package
3461:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 24641              		.loc 1 3461 0
 24642 0006 8923     		movs	r3, #137
 24643 0008 3B71     		strb	r3, [r7, #4]
3462:..\src/command_processing.c ****     
3463:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24644              		.loc 1 3463 0
 24645 000a 0323     		movs	r3, #3
 24646 000c FB73     		strb	r3, [r7, #15]
 24647 000e 3AE0     		b	.L932
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 539


 24648              	.L933:
3464:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24649              		.loc 1 3464 0
 24650 0010 274B     		ldr	r3, .L934
 24651 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24652 0016 1A46     		mov	r2, r3
 24653 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24654 001a 2648     		ldr	r0, .L934+4
 24655 001c 1346     		mov	r3, r2
 24656 001e 5B00     		lsls	r3, r3, #1
 24657 0020 1344     		add	r3, r3, r2
 24658 0022 9B00     		lsls	r3, r3, #2
 24659 0024 1344     		add	r3, r3, r2
 24660 0026 0B44     		add	r3, r3, r1
 24661 0028 0633     		adds	r3, r3, #6
 24662 002a 9B00     		lsls	r3, r3, #2
 24663 002c 0344     		add	r3, r3, r0
 24664 002e 5A68     		ldr	r2, [r3, #4]
 24665 0030 1F4B     		ldr	r3, .L934
 24666 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24667 0036 1C46     		mov	r4, r3
 24668 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24669 003a 1D48     		ldr	r0, .L934
 24670 003c 2346     		mov	r3, r4
 24671 003e 5B00     		lsls	r3, r3, #1
 24672 0040 2344     		add	r3, r3, r4
 24673 0042 1B01     		lsls	r3, r3, #4
 24674 0044 0344     		add	r3, r3, r0
 24675 0046 0B44     		add	r3, r3, r1
 24676 0048 03F29513 		addw	r3, r3, #405
 24677 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24678 004e 42FA03F3 		asr	r3, r2, r3
 24679 0052 1BB2     		sxth	r3, r3
 24680 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3465:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24681              		.loc 1 3465 0
 24682 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24683 0058 5B00     		lsls	r3, r3, #1
 24684 005a 0233     		adds	r3, r3, #2
 24685 005c 07F10C02 		add	r2, r7, #12
 24686 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24687 0062 07F11001 		add	r1, r7, #16
 24688 0066 0B44     		add	r3, r3, r1
 24689 0068 03F80C2C 		strb	r2, [r3, #-12]
3466:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24690              		.loc 1 3466 0
 24691 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24692 006e 5B00     		lsls	r3, r3, #1
 24693 0070 5A1C     		adds	r2, r3, #1
 24694 0072 07F10C03 		add	r3, r7, #12
 24695 0076 0133     		adds	r3, r3, #1
 24696 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24697 007a 07F11003 		add	r3, r7, #16
 24698 007e 1344     		add	r3, r3, r2
 24699 0080 0A46     		mov	r2, r1
 24700 0082 03F80C2C 		strb	r2, [r3, #-12]
 24701              	.L932:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 540


3463:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24702              		.loc 1 3463 0 discriminator 1
 24703 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24704 0088 5A1E     		subs	r2, r3, #1
 24705 008a FA73     		strb	r2, [r7, #15]
 24706 008c 002B     		cmp	r3, #0
 24707 008e BFD1     		bne	.L933
3467:..\src/command_processing.c ****     }
3468:..\src/command_processing.c ****             
3469:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3470:..\src/command_processing.c **** 
3471:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24708              		.loc 1 3471 0
 24709 0090 3B1D     		adds	r3, r7, #4
 24710 0092 0721     		movs	r1, #7
 24711 0094 1846     		mov	r0, r3
 24712 0096 FFF7FEFF 		bl	LCRChecksum
 24713 009a 0346     		mov	r3, r0
 24714 009c FB72     		strb	r3, [r7, #11]
3472:..\src/command_processing.c **** 
3473:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24715              		.loc 1 3473 0
 24716 009e 3B1D     		adds	r3, r7, #4
 24717 00a0 0821     		movs	r1, #8
 24718 00a2 1846     		mov	r0, r3
 24719 00a4 FFF7FEFF 		bl	commWrite
3474:..\src/command_processing.c **** }
 24720              		.loc 1 3474 0
 24721 00a8 00BF     		nop
 24722 00aa 1437     		adds	r7, r7, #20
 24723              		.cfi_def_cfa_offset 12
 24724 00ac BD46     		mov	sp, r7
 24725              		.cfi_def_cfa_register 13
 24726              		@ sp needed
 24727 00ae 90BD     		pop	{r4, r7, pc}
 24728              	.L935:
 24729              		.align	2
 24730              	.L934:
 24731 00b0 00000000 		.word	g_mem
 24732 00b4 00000000 		.word	g_measOld
 24733              		.cfi_endproc
 24734              	.LFE95:
 24735              		.size	cmd_get_velocities, .-cmd_get_velocities
 24736              		.section	.text.cmd_get_accelerations,"ax",%progbits
 24737              		.align	2
 24738              		.global	cmd_get_accelerations
 24739              		.thumb
 24740              		.thumb_func
 24741              		.type	cmd_get_accelerations, %function
 24742              	cmd_get_accelerations:
 24743              	.LFB96:
3475:..\src/command_processing.c **** 
3476:..\src/command_processing.c **** void cmd_get_accelerations(){
 24744              		.loc 1 3476 0
 24745              		.cfi_startproc
 24746              		@ args = 0, pretend = 0, frame = 16
 24747              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 541


 24748 0000 90B5     		push	{r4, r7, lr}
 24749              		.cfi_def_cfa_offset 12
 24750              		.cfi_offset 4, -12
 24751              		.cfi_offset 7, -8
 24752              		.cfi_offset 14, -4
 24753 0002 85B0     		sub	sp, sp, #20
 24754              		.cfi_def_cfa_offset 32
 24755 0004 00AF     		add	r7, sp, #0
 24756              		.cfi_def_cfa_register 7
3477:..\src/command_processing.c ****  
3478:..\src/command_processing.c ****     uint8 CYDATA index;
3479:..\src/command_processing.c ****     int16 aux_int16;
3480:..\src/command_processing.c ****     
3481:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3482:..\src/command_processing.c ****     
3483:..\src/command_processing.c ****     uint8 packet_data[8]; 
3484:..\src/command_processing.c ****     
3485:..\src/command_processing.c ****     //Header package
3486:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 24757              		.loc 1 3486 0
 24758 0006 8B23     		movs	r3, #139
 24759 0008 3B71     		strb	r3, [r7, #4]
3487:..\src/command_processing.c ****     
3488:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24760              		.loc 1 3488 0
 24761 000a 0323     		movs	r3, #3
 24762 000c FB73     		strb	r3, [r7, #15]
 24763 000e 39E0     		b	.L937
 24764              	.L938:
3489:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24765              		.loc 1 3489 0
 24766 0010 274B     		ldr	r3, .L939
 24767 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24768 0016 1A46     		mov	r2, r3
 24769 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24770 001a 2648     		ldr	r0, .L939+4
 24771 001c 1346     		mov	r3, r2
 24772 001e 5B00     		lsls	r3, r3, #1
 24773 0020 1344     		add	r3, r3, r2
 24774 0022 9B00     		lsls	r3, r3, #2
 24775 0024 1344     		add	r3, r3, r2
 24776 0026 0B44     		add	r3, r3, r1
 24777 0028 0A33     		adds	r3, r3, #10
 24778 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24779 002e 204B     		ldr	r3, .L939
 24780 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24781 0034 1C46     		mov	r4, r3
 24782 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24783 0038 1D48     		ldr	r0, .L939
 24784 003a 2346     		mov	r3, r4
 24785 003c 5B00     		lsls	r3, r3, #1
 24786 003e 2344     		add	r3, r3, r4
 24787 0040 1B01     		lsls	r3, r3, #4
 24788 0042 0344     		add	r3, r3, r0
 24789 0044 0B44     		add	r3, r3, r1
 24790 0046 03F29513 		addw	r3, r3, #405
 24791 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 542


 24792 004c 42FA03F3 		asr	r3, r2, r3
 24793 0050 1BB2     		sxth	r3, r3
 24794 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3490:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24795              		.loc 1 3490 0
 24796 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24797 0056 5B00     		lsls	r3, r3, #1
 24798 0058 0233     		adds	r3, r3, #2
 24799 005a 07F10C02 		add	r2, r7, #12
 24800 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24801 0060 07F11001 		add	r1, r7, #16
 24802 0064 0B44     		add	r3, r3, r1
 24803 0066 03F80C2C 		strb	r2, [r3, #-12]
3491:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24804              		.loc 1 3491 0
 24805 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24806 006c 5B00     		lsls	r3, r3, #1
 24807 006e 5A1C     		adds	r2, r3, #1
 24808 0070 07F10C03 		add	r3, r7, #12
 24809 0074 0133     		adds	r3, r3, #1
 24810 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24811 0078 07F11003 		add	r3, r7, #16
 24812 007c 1344     		add	r3, r3, r2
 24813 007e 0A46     		mov	r2, r1
 24814 0080 03F80C2C 		strb	r2, [r3, #-12]
 24815              	.L937:
3488:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24816              		.loc 1 3488 0 discriminator 1
 24817 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24818 0086 5A1E     		subs	r2, r3, #1
 24819 0088 FA73     		strb	r2, [r7, #15]
 24820 008a 002B     		cmp	r3, #0
 24821 008c C0D1     		bne	.L938
3492:..\src/command_processing.c ****     }
3493:..\src/command_processing.c ****     
3494:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3495:..\src/command_processing.c **** 
3496:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24822              		.loc 1 3496 0
 24823 008e 3B1D     		adds	r3, r7, #4
 24824 0090 0721     		movs	r1, #7
 24825 0092 1846     		mov	r0, r3
 24826 0094 FFF7FEFF 		bl	LCRChecksum
 24827 0098 0346     		mov	r3, r0
 24828 009a FB72     		strb	r3, [r7, #11]
3497:..\src/command_processing.c **** 
3498:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24829              		.loc 1 3498 0
 24830 009c 3B1D     		adds	r3, r7, #4
 24831 009e 0821     		movs	r1, #8
 24832 00a0 1846     		mov	r0, r3
 24833 00a2 FFF7FEFF 		bl	commWrite
3499:..\src/command_processing.c **** }
 24834              		.loc 1 3499 0
 24835 00a6 00BF     		nop
 24836 00a8 1437     		adds	r7, r7, #20
 24837              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 543


 24838 00aa BD46     		mov	sp, r7
 24839              		.cfi_def_cfa_register 13
 24840              		@ sp needed
 24841 00ac 90BD     		pop	{r4, r7, pc}
 24842              	.L940:
 24843 00ae 00BF     		.align	2
 24844              	.L939:
 24845 00b0 00000000 		.word	g_mem
 24846 00b4 00000000 		.word	g_measOld
 24847              		.cfi_endproc
 24848              	.LFE96:
 24849              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 24850              		.section	.text.cmd_get_joystick,"ax",%progbits
 24851              		.align	2
 24852              		.global	cmd_get_joystick
 24853              		.thumb
 24854              		.thumb_func
 24855              		.type	cmd_get_joystick, %function
 24856              	cmd_get_joystick:
 24857              	.LFB97:
3500:..\src/command_processing.c **** 
3501:..\src/command_processing.c **** void cmd_get_joystick() {
 24858              		.loc 1 3501 0
 24859              		.cfi_startproc
 24860              		@ args = 0, pretend = 0, frame = 8
 24861              		@ frame_needed = 1, uses_anonymous_args = 0
 24862 0000 80B5     		push	{r7, lr}
 24863              		.cfi_def_cfa_offset 8
 24864              		.cfi_offset 7, -8
 24865              		.cfi_offset 14, -4
 24866 0002 82B0     		sub	sp, sp, #8
 24867              		.cfi_def_cfa_offset 16
 24868 0004 00AF     		add	r7, sp, #0
 24869              		.cfi_def_cfa_register 7
3502:..\src/command_processing.c ****  
3503:..\src/command_processing.c ****     int16 aux_int16;
3504:..\src/command_processing.c ****     
3505:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3506:..\src/command_processing.c ****     
3507:..\src/command_processing.c ****     uint8 packet_data[6];
3508:..\src/command_processing.c ****     
3509:..\src/command_processing.c ****     // Header        
3510:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 24870              		.loc 1 3510 0
 24871 0006 9223     		movs	r3, #146
 24872 0008 3B70     		strb	r3, [r7]
3511:..\src/command_processing.c ****     
3512:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 24873              		.loc 1 3512 0
 24874 000a 134B     		ldr	r3, .L942
 24875 000c 1B6A     		ldr	r3, [r3, #32]
 24876 000e 1BB2     		sxth	r3, r3
 24877 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3513:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24878              		.loc 1 3513 0
 24879 0012 BB1D     		adds	r3, r7, #6
 24880 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 544


 24881 0016 BB70     		strb	r3, [r7, #2]
3514:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24882              		.loc 1 3514 0
 24883 0018 BB1D     		adds	r3, r7, #6
 24884 001a 0133     		adds	r3, r3, #1
 24885 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24886 001e 7B70     		strb	r3, [r7, #1]
3515:..\src/command_processing.c ****     
3516:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 24887              		.loc 1 3516 0
 24888 0020 0D4B     		ldr	r3, .L942
 24889 0022 5B6A     		ldr	r3, [r3, #36]
 24890 0024 1BB2     		sxth	r3, r3
 24891 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3517:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24892              		.loc 1 3517 0
 24893 0028 BB1D     		adds	r3, r7, #6
 24894 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24895 002c 3B71     		strb	r3, [r7, #4]
3518:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24896              		.loc 1 3518 0
 24897 002e BB1D     		adds	r3, r7, #6
 24898 0030 0133     		adds	r3, r3, #1
 24899 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24900 0034 FB70     		strb	r3, [r7, #3]
3519:..\src/command_processing.c **** 
3520:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24901              		.loc 1 3520 0
 24902 0036 3B46     		mov	r3, r7
 24903 0038 0521     		movs	r1, #5
 24904 003a 1846     		mov	r0, r3
 24905 003c FFF7FEFF 		bl	LCRChecksum
 24906 0040 0346     		mov	r3, r0
 24907 0042 7B71     		strb	r3, [r7, #5]
3521:..\src/command_processing.c **** 
3522:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24908              		.loc 1 3522 0
 24909 0044 3B46     		mov	r3, r7
 24910 0046 0621     		movs	r1, #6
 24911 0048 1846     		mov	r0, r3
 24912 004a FFF7FEFF 		bl	commWrite
3523:..\src/command_processing.c **** }
 24913              		.loc 1 3523 0
 24914 004e 00BF     		nop
 24915 0050 0837     		adds	r7, r7, #8
 24916              		.cfi_def_cfa_offset 8
 24917 0052 BD46     		mov	sp, r7
 24918              		.cfi_def_cfa_register 13
 24919              		@ sp needed
 24920 0054 80BD     		pop	{r7, pc}
 24921              	.L943:
 24922 0056 00BF     		.align	2
 24923              	.L942:
 24924 0058 00000000 		.word	g_adc_measOld
 24925              		.cfi_endproc
 24926              	.LFE97:
 24927              		.size	cmd_get_joystick, .-cmd_get_joystick
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 545


 24928              		.section	.text.cmd_set_inputs,"ax",%progbits
 24929              		.align	2
 24930              		.global	cmd_set_inputs
 24931              		.thumb
 24932              		.thumb_func
 24933              		.type	cmd_set_inputs, %function
 24934              	cmd_set_inputs:
 24935              	.LFB98:
3524:..\src/command_processing.c **** 
3525:..\src/command_processing.c **** void cmd_set_inputs(){
 24936              		.loc 1 3525 0
 24937              		.cfi_startproc
 24938              		@ args = 0, pretend = 0, frame = 8
 24939              		@ frame_needed = 1, uses_anonymous_args = 0
 24940              		@ link register save eliminated.
 24941 0000 90B4     		push	{r4, r7}
 24942              		.cfi_def_cfa_offset 8
 24943              		.cfi_offset 4, -8
 24944              		.cfi_offset 7, -4
 24945 0002 82B0     		sub	sp, sp, #8
 24946              		.cfi_def_cfa_offset 16
 24947 0004 00AF     		add	r7, sp, #0
 24948              		.cfi_def_cfa_register 7
3526:..\src/command_processing.c ****     
3527:..\src/command_processing.c ****     // Store position setted in right variables
3528:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3529:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3530:..\src/command_processing.c ****     
3531:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 24949              		.loc 1 3531 0
 24950 0006 894B     		ldr	r3, .L958
 24951 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24952 000a 1B02     		lsls	r3, r3, #8
 24953 000c 1AB2     		sxth	r2, r3
 24954 000e 874B     		ldr	r3, .L958
 24955 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24956 0012 1BB2     		sxth	r3, r3
 24957 0014 1343     		orrs	r3, r3, r2
 24958 0016 1BB2     		sxth	r3, r3
 24959 0018 3B80     		strh	r3, [r7]	@ movhi
3532:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 24960              		.loc 1 3532 0
 24961 001a 844B     		ldr	r3, .L958
 24962 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 24963 001e 1B02     		lsls	r3, r3, #8
 24964 0020 1AB2     		sxth	r2, r3
 24965 0022 824B     		ldr	r3, .L958
 24966 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24967 0026 1BB2     		sxth	r3, r3
 24968 0028 1343     		orrs	r3, r3, r2
 24969 002a 1BB2     		sxth	r3, r3
 24970 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 24971              	.LBB31:
3533:..\src/command_processing.c ****     
3534:..\src/command_processing.c ****     // Check if last command received was the same as this 
3535:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3536:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 546


 24972              		.loc 1 3536 0
 24973 002e 0023     		movs	r3, #0
 24974 0030 FB71     		strb	r3, [r7, #7]
 24975 0032 1DE0     		b	.L945
 24976              	.L947:
3537:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24977              		.loc 1 3537 0
 24978 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24979 0036 7E4A     		ldr	r2, .L958+4
 24980 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 24981 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24982 003e 5B00     		lsls	r3, r3, #1
 24983 0040 07F10801 		add	r1, r7, #8
 24984 0044 0B44     		add	r3, r3, r1
 24985 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 24986 004a 9A42     		cmp	r2, r3
 24987 004c 02D0     		beq	.L946
3538:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 24988              		.loc 1 3538 0
 24989 004e 794B     		ldr	r3, .L958+8
 24990 0050 0122     		movs	r2, #1
 24991 0052 1A70     		strb	r2, [r3]
 24992              	.L946:
3539:..\src/command_processing.c ****        }
3540:..\src/command_processing.c ****         // Update last command
3541:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 24993              		.loc 1 3541 0 discriminator 2
 24994 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24995 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24996 0058 5B00     		lsls	r3, r3, #1
 24997 005a 07F10801 		add	r1, r7, #8
 24998 005e 0B44     		add	r3, r3, r1
 24999 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 25000 0064 724B     		ldr	r3, .L958+4
 25001 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3536:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 25002              		.loc 1 3536 0 discriminator 2
 25003 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 25004 006c 0133     		adds	r3, r3, #1
 25005 006e FB71     		strb	r3, [r7, #7]
 25006              	.L945:
3536:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 25007              		.loc 1 3536 0 is_stmt 0 discriminator 1
 25008 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25009 0072 714B     		ldr	r3, .L958+12
 25010 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 25011 0078 0133     		adds	r3, r3, #1
 25012 007a 9A42     		cmp	r2, r3
 25013 007c DADB     		blt	.L947
 25014              	.LBE31:
3542:..\src/command_processing.c ****     }
3543:..\src/command_processing.c ****     
3544:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3545:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 25015              		.loc 1 3545 0 is_stmt 1
 25016 007e 6D4B     		ldr	r3, .L958+8
 25017 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 547


 25018 0082 002B     		cmp	r3, #0
 25019 0084 00F0CC80 		beq	.L957
 25020              	.LBB32:
3546:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 25021              		.loc 1 3546 0
 25022 0088 0023     		movs	r3, #0
 25023 008a BB71     		strb	r3, [r7, #6]
 25024 008c C4E0     		b	.L949
 25025              	.L956:
3547:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 25026              		.loc 1 3547 0
 25027 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25028 0090 6A49     		ldr	r1, .L958+16
 25029 0092 1346     		mov	r3, r2
 25030 0094 DB00     		lsls	r3, r3, #3
 25031 0096 9B1A     		subs	r3, r3, r2
 25032 0098 1B01     		lsls	r3, r3, #4
 25033 009a 0B44     		add	r3, r3, r1
 25034 009c 03F20F13 		addw	r3, r3, #271
 25035 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25036 00a2 022B     		cmp	r3, #2
 25037 00a4 0ED1     		bne	.L950
3548:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 25038              		.loc 1 3548 0
 25039 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25040 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 25041 00aa 5B00     		lsls	r3, r3, #1
 25042 00ac 07F10801 		add	r1, r7, #8
 25043 00b0 0B44     		add	r3, r3, r1
 25044 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 25045 00b6 1846     		mov	r0, r3
 25046 00b8 6149     		ldr	r1, .L958+20
 25047 00ba 1301     		lsls	r3, r2, #4
 25048 00bc 0B44     		add	r3, r3, r1
 25049 00be 0433     		adds	r3, r3, #4
 25050 00c0 1860     		str	r0, [r3]
 25051 00c2 47E0     		b	.L951
 25052              	.L950:
3549:..\src/command_processing.c ****             }
3550:..\src/command_processing.c ****             else {
3551:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 25053              		.loc 1 3551 0
 25054 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25055 00c6 5D49     		ldr	r1, .L958+16
 25056 00c8 1346     		mov	r3, r2
 25057 00ca DB00     		lsls	r3, r3, #3
 25058 00cc 9B1A     		subs	r3, r3, r2
 25059 00ce 1B01     		lsls	r3, r3, #4
 25060 00d0 0B44     		add	r3, r3, r1
 25061 00d2 03F20F13 		addw	r3, r3, #271
 25062 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25063 00d8 012B     		cmp	r3, #1
 25064 00da 0ED1     		bne	.L952
3552:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 25065              		.loc 1 3552 0
 25066 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25067 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 548


 25068 00e0 5B00     		lsls	r3, r3, #1
 25069 00e2 07F10801 		add	r1, r7, #8
 25070 00e6 0B44     		add	r3, r3, r1
 25071 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 25072 00ec 1846     		mov	r0, r3
 25073 00ee 5449     		ldr	r1, .L958+20
 25074 00f0 1301     		lsls	r3, r2, #4
 25075 00f2 0B44     		add	r3, r3, r1
 25076 00f4 0833     		adds	r3, r3, #8
 25077 00f6 1860     		str	r0, [r3]
 25078 00f8 2CE0     		b	.L951
 25079              	.L952:
3553:..\src/command_processing.c ****                 }
3554:..\src/command_processing.c ****                 else {
3555:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 25080              		.loc 1 3555 0
 25081 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25082 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 25083 00fe 5B00     		lsls	r3, r3, #1
 25084 0100 07F10801 		add	r1, r7, #8
 25085 0104 0B44     		add	r3, r3, r1
 25086 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 25087 010a 1846     		mov	r0, r3
 25088 010c 4C49     		ldr	r1, .L958+20
 25089 010e 1301     		lsls	r3, r2, #4
 25090 0110 0B44     		add	r3, r3, r1
 25091 0112 1860     		str	r0, [r3]
3556:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 25092              		.loc 1 3556 0
 25093 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 25094 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 25095 0118 494A     		ldr	r2, .L958+20
 25096 011a 1B01     		lsls	r3, r3, #4
 25097 011c 1344     		add	r3, r3, r2
 25098 011e 1868     		ldr	r0, [r3]
 25099 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25100 0122 454C     		ldr	r4, .L958+12
 25101 0124 1346     		mov	r3, r2
 25102 0126 DB00     		lsls	r3, r3, #3
 25103 0128 9B1A     		subs	r3, r3, r2
 25104 012a 1B01     		lsls	r3, r3, #4
 25105 012c 2344     		add	r3, r3, r4
 25106 012e 03F58873 		add	r3, r3, #272
 25107 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25108 0134 1C46     		mov	r4, r3
 25109 0136 414A     		ldr	r2, .L958+16
 25110 0138 2346     		mov	r3, r4
 25111 013a 5B00     		lsls	r3, r3, #1
 25112 013c 2344     		add	r3, r3, r4
 25113 013e 1B01     		lsls	r3, r3, #4
 25114 0140 1344     		add	r3, r3, r2
 25115 0142 03F29513 		addw	r3, r3, #405
 25116 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25117 0148 00FA03F2 		lsl	r2, r0, r3
 25118 014c 3C48     		ldr	r0, .L958+20
 25119 014e 0B01     		lsls	r3, r1, #4
 25120 0150 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 549


 25121 0152 1A60     		str	r2, [r3]
 25122              	.L951:
3557:..\src/command_processing.c ****                 }
3558:..\src/command_processing.c ****             }  
3559:..\src/command_processing.c ****                
3560:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3561:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 25123              		.loc 1 3561 0
 25124 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25125 0156 3849     		ldr	r1, .L958+12
 25126 0158 1346     		mov	r3, r2
 25127 015a DB00     		lsls	r3, r3, #3
 25128 015c 9B1A     		subs	r3, r3, r2
 25129 015e 1B01     		lsls	r3, r3, #4
 25130 0160 0B44     		add	r3, r3, r1
 25131 0162 E333     		adds	r3, r3, #227
 25132 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25133 0166 002B     		cmp	r3, #0
 25134 0168 53D0     		beq	.L953
 25135              		.loc 1 3561 0 is_stmt 0 discriminator 1
 25136 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25137 016c 3349     		ldr	r1, .L958+16
 25138 016e 1346     		mov	r3, r2
 25139 0170 DB00     		lsls	r3, r3, #3
 25140 0172 9B1A     		subs	r3, r3, r2
 25141 0174 1B01     		lsls	r3, r3, #4
 25142 0176 0B44     		add	r3, r3, r1
 25143 0178 03F20F13 		addw	r3, r3, #271
 25144 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25145 017e 032B     		cmp	r3, #3
 25146 0180 0BD0     		beq	.L954
 25147              		.loc 1 3561 0 discriminator 2
 25148 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25149 0184 2D49     		ldr	r1, .L958+16
 25150 0186 1346     		mov	r3, r2
 25151 0188 DB00     		lsls	r3, r3, #3
 25152 018a 9B1A     		subs	r3, r3, r2
 25153 018c 1B01     		lsls	r3, r3, #4
 25154 018e 0B44     		add	r3, r3, r1
 25155 0190 03F20F13 		addw	r3, r3, #271
 25156 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25157 0196 002B     		cmp	r3, #0
 25158 0198 3BD1     		bne	.L953
 25159              	.L954:
3562:..\src/command_processing.c ****                 
3563:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 25160              		.loc 1 3563 0 is_stmt 1
 25161 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 25162 019c 284A     		ldr	r2, .L958+20
 25163 019e 1B01     		lsls	r3, r3, #4
 25164 01a0 1344     		add	r3, r3, r2
 25165 01a2 1968     		ldr	r1, [r3]
 25166 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25167 01a6 2448     		ldr	r0, .L958+12
 25168 01a8 1346     		mov	r3, r2
 25169 01aa DB00     		lsls	r3, r3, #3
 25170 01ac 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 550


 25171 01ae 1B01     		lsls	r3, r3, #4
 25172 01b0 0344     		add	r3, r3, r0
 25173 01b2 E433     		adds	r3, r3, #228
 25174 01b4 1B68     		ldr	r3, [r3]
 25175 01b6 9942     		cmp	r1, r3
 25176 01b8 0DDA     		bge	.L955
3564:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 25177              		.loc 1 3564 0
 25178 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 25179 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25180 01be 1E48     		ldr	r0, .L958+12
 25181 01c0 1346     		mov	r3, r2
 25182 01c2 DB00     		lsls	r3, r3, #3
 25183 01c4 9B1A     		subs	r3, r3, r2
 25184 01c6 1B01     		lsls	r3, r3, #4
 25185 01c8 0344     		add	r3, r3, r0
 25186 01ca E433     		adds	r3, r3, #228
 25187 01cc 1A68     		ldr	r2, [r3]
 25188 01ce 1C48     		ldr	r0, .L958+20
 25189 01d0 0B01     		lsls	r3, r1, #4
 25190 01d2 0344     		add	r3, r3, r0
 25191 01d4 1A60     		str	r2, [r3]
 25192              	.L955:
3565:..\src/command_processing.c **** 
3566:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 25193              		.loc 1 3566 0
 25194 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 25195 01d8 194A     		ldr	r2, .L958+20
 25196 01da 1B01     		lsls	r3, r3, #4
 25197 01dc 1344     		add	r3, r3, r2
 25198 01de 1968     		ldr	r1, [r3]
 25199 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25200 01e2 1548     		ldr	r0, .L958+12
 25201 01e4 1346     		mov	r3, r2
 25202 01e6 DB00     		lsls	r3, r3, #3
 25203 01e8 9B1A     		subs	r3, r3, r2
 25204 01ea 1B01     		lsls	r3, r3, #4
 25205 01ec 0344     		add	r3, r3, r0
 25206 01ee E833     		adds	r3, r3, #232
 25207 01f0 1B68     		ldr	r3, [r3]
 25208 01f2 9942     		cmp	r1, r3
 25209 01f4 0DDD     		ble	.L953
3567:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 25210              		.loc 1 3567 0
 25211 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 25212 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 25213 01fa 0F48     		ldr	r0, .L958+12
 25214 01fc 1346     		mov	r3, r2
 25215 01fe DB00     		lsls	r3, r3, #3
 25216 0200 9B1A     		subs	r3, r3, r2
 25217 0202 1B01     		lsls	r3, r3, #4
 25218 0204 0344     		add	r3, r3, r0
 25219 0206 E833     		adds	r3, r3, #232
 25220 0208 1A68     		ldr	r2, [r3]
 25221 020a 0D48     		ldr	r0, .L958+20
 25222 020c 0B01     		lsls	r3, r1, #4
 25223 020e 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 551


 25224 0210 1A60     		str	r2, [r3]
 25225              	.L953:
3546:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 25226              		.loc 1 3546 0 discriminator 2
 25227 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 25228 0214 0133     		adds	r3, r3, #1
 25229 0216 BB71     		strb	r3, [r7, #6]
 25230              	.L949:
3546:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 25231              		.loc 1 3546 0 is_stmt 0 discriminator 1
 25232 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 25233 021a 012B     		cmp	r3, #1
 25234 021c 7FF637AF 		bls	.L956
 25235              	.L957:
 25236              	.LBE32:
3568:..\src/command_processing.c ****             }
3569:..\src/command_processing.c ****         }  
3570:..\src/command_processing.c ****     }
3571:..\src/command_processing.c **** }
 25237              		.loc 1 3571 0 is_stmt 1
 25238 0220 00BF     		nop
 25239 0222 0837     		adds	r7, r7, #8
 25240              		.cfi_def_cfa_offset 8
 25241 0224 BD46     		mov	sp, r7
 25242              		.cfi_def_cfa_register 13
 25243              		@ sp needed
 25244 0226 90BC     		pop	{r4, r7}
 25245              		.cfi_restore 7
 25246              		.cfi_restore 4
 25247              		.cfi_def_cfa_offset 0
 25248 0228 7047     		bx	lr
 25249              	.L959:
 25250 022a 00BF     		.align	2
 25251              	.L958:
 25252 022c 00000000 		.word	g_rx
 25253 0230 08000000 		.word	last_aux_int16.11490
 25254 0234 00000000 		.word	change_ext_ref_flag
 25255 0238 00000000 		.word	c_mem
 25256 023c 00000000 		.word	g_mem
 25257 0240 00000000 		.word	g_refNew
 25258              		.cfi_endproc
 25259              	.LFE98:
 25260              		.size	cmd_set_inputs, .-cmd_set_inputs
 25261              		.section	.text.cmd_activate,"ax",%progbits
 25262              		.align	2
 25263              		.global	cmd_activate
 25264              		.thumb
 25265              		.thumb_func
 25266              		.type	cmd_activate, %function
 25267              	cmd_activate:
 25268              	.LFB99:
3572:..\src/command_processing.c **** 
3573:..\src/command_processing.c **** void cmd_activate(){
 25269              		.loc 1 3573 0
 25270              		.cfi_startproc
 25271              		@ args = 0, pretend = 0, frame = 8
 25272              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 552


 25273 0000 80B5     		push	{r7, lr}
 25274              		.cfi_def_cfa_offset 8
 25275              		.cfi_offset 7, -8
 25276              		.cfi_offset 14, -4
 25277 0002 82B0     		sub	sp, sp, #8
 25278              		.cfi_def_cfa_offset 16
 25279 0004 00AF     		add	r7, sp, #0
 25280              		.cfi_def_cfa_register 7
3574:..\src/command_processing.c ****     
3575:..\src/command_processing.c ****     // Store new value reads
3576:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 25281              		.loc 1 3576 0
 25282 0006 294B     		ldr	r3, .L967
 25283 0008 5B78     		ldrb	r3, [r3, #1]
 25284 000a FB71     		strb	r3, [r7, #7]
3577:..\src/command_processing.c ****     
3578:..\src/command_processing.c ****     // Check type of control mode enabled
3579:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 25285              		.loc 1 3579 0
 25286 000c 284B     		ldr	r3, .L967+4
 25287 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 25288 0012 002B     		cmp	r3, #0
 25289 0014 04D0     		beq	.L961
 25290              		.loc 1 3579 0 is_stmt 0 discriminator 1
 25291 0016 264B     		ldr	r3, .L967+4
 25292 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 25293 001c 032B     		cmp	r3, #3
 25294 001e 0BD1     		bne	.L962
 25295              	.L961:
3580:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 25296              		.loc 1 3580 0 is_stmt 1
 25297 0020 234B     		ldr	r3, .L967+4
 25298 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25299 0026 1946     		mov	r1, r3
 25300 0028 224A     		ldr	r2, .L967+8
 25301 002a 3423     		movs	r3, #52
 25302 002c 03FB01F3 		mul	r3, r3, r1
 25303 0030 1344     		add	r3, r3, r2
 25304 0032 1B68     		ldr	r3, [r3]
 25305 0034 204A     		ldr	r2, .L967+12
 25306 0036 1360     		str	r3, [r2]
 25307              	.L962:
3581:..\src/command_processing.c ****     }
3582:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 25308              		.loc 1 3582 0
 25309 0038 FB79     		ldrb	r3, [r7, #7]
 25310 003a 03F00103 		and	r3, r3, #1
 25311 003e DAB2     		uxtb	r2, r3
 25312 0040 1D4B     		ldr	r3, .L967+12
 25313 0042 1A73     		strb	r2, [r3, #12]
3583:..\src/command_processing.c ****     
3584:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3585:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3586:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3587:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3588:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3589:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 553


3590:..\src/command_processing.c ****         }
3591:..\src/command_processing.c ****         
3592:..\src/command_processing.c ****         // Activate or deactivate the valve
3593:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3594:..\src/command_processing.c ****     }
3595:..\src/command_processing.c **** #endif
3596:..\src/command_processing.c ****     
3597:..\src/command_processing.c ****     // Activate/Deactivate motor
3598:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 25314              		.loc 1 3598 0
 25315 0044 1C4B     		ldr	r3, .L967+12
 25316 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 25317 0048 1946     		mov	r1, r3
 25318 004a 0020     		movs	r0, #0
 25319 004c FFF7FEFF 		bl	enable_motor
3599:..\src/command_processing.c ****     
3600:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 25320              		.loc 1 3600 0
 25321 0050 174B     		ldr	r3, .L967+4
 25322 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 25323 0056 012B     		cmp	r3, #1
 25324 0058 23D1     		bne	.L966
3601:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 25325              		.loc 1 3601 0
 25326 005a 154B     		ldr	r3, .L967+4
 25327 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 25328 0060 002B     		cmp	r3, #0
 25329 0062 04D0     		beq	.L964
 25330              		.loc 1 3601 0 is_stmt 0 discriminator 1
 25331 0064 124B     		ldr	r3, .L967+4
 25332 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 25333 006a 032B     		cmp	r3, #3
 25334 006c 0BD1     		bne	.L965
 25335              	.L964:
3602:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 25336              		.loc 1 3602 0 is_stmt 1
 25337 006e 104B     		ldr	r3, .L967+4
 25338 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25339 0074 1946     		mov	r1, r3
 25340 0076 0F4A     		ldr	r2, .L967+8
 25341 0078 3423     		movs	r3, #52
 25342 007a 03FB01F3 		mul	r3, r3, r1
 25343 007e 1344     		add	r3, r3, r2
 25344 0080 1B68     		ldr	r3, [r3]
 25345 0082 0D4A     		ldr	r2, .L967+12
 25346 0084 1361     		str	r3, [r2, #16]
 25347              	.L965:
3603:..\src/command_processing.c ****         }
3604:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 25348              		.loc 1 3604 0
 25349 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 25350 0088 5B08     		lsrs	r3, r3, #1
 25351 008a DBB2     		uxtb	r3, r3
 25352 008c 03F00103 		and	r3, r3, #1
 25353 0090 DAB2     		uxtb	r2, r3
 25354 0092 094B     		ldr	r3, .L967+12
 25355 0094 1A77     		strb	r2, [r3, #28]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 554


3605:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 25356              		.loc 1 3605 0
 25357 0096 084B     		ldr	r3, .L967+12
 25358 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 25359 009a 1946     		mov	r1, r3
 25360 009c 0120     		movs	r0, #1
 25361 009e FFF7FEFF 		bl	enable_motor
 25362              	.L966:
3606:..\src/command_processing.c ****     }
3607:..\src/command_processing.c ****     
3608:..\src/command_processing.c **** }
 25363              		.loc 1 3608 0
 25364 00a2 00BF     		nop
 25365 00a4 0837     		adds	r7, r7, #8
 25366              		.cfi_def_cfa_offset 8
 25367 00a6 BD46     		mov	sp, r7
 25368              		.cfi_def_cfa_register 13
 25369              		@ sp needed
 25370 00a8 80BD     		pop	{r7, pc}
 25371              	.L968:
 25372 00aa 00BF     		.align	2
 25373              	.L967:
 25374 00ac 00000000 		.word	g_rx
 25375 00b0 00000000 		.word	g_mem
 25376 00b4 00000000 		.word	g_meas
 25377 00b8 00000000 		.word	g_refNew
 25378              		.cfi_endproc
 25379              	.LFE99:
 25380              		.size	cmd_activate, .-cmd_activate
 25381              		.section	.text.cmd_get_activate,"ax",%progbits
 25382              		.align	2
 25383              		.global	cmd_get_activate
 25384              		.thumb
 25385              		.thumb_func
 25386              		.type	cmd_get_activate, %function
 25387              	cmd_get_activate:
 25388              	.LFB100:
3609:..\src/command_processing.c **** 
3610:..\src/command_processing.c **** void cmd_get_activate(){
 25389              		.loc 1 3610 0
 25390              		.cfi_startproc
 25391              		@ args = 0, pretend = 0, frame = 8
 25392              		@ frame_needed = 1, uses_anonymous_args = 0
 25393 0000 80B5     		push	{r7, lr}
 25394              		.cfi_def_cfa_offset 8
 25395              		.cfi_offset 7, -8
 25396              		.cfi_offset 14, -4
 25397 0002 82B0     		sub	sp, sp, #8
 25398              		.cfi_def_cfa_offset 16
 25399 0004 00AF     		add	r7, sp, #0
 25400              		.cfi_def_cfa_register 7
3611:..\src/command_processing.c ****     
3612:..\src/command_processing.c ****     uint8 packet_data[3];
3613:..\src/command_processing.c **** 
3614:..\src/command_processing.c ****     // Header        
3615:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 25401              		.loc 1 3615 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 555


 25402 0006 8123     		movs	r3, #129
 25403 0008 3B71     		strb	r3, [r7, #4]
3616:..\src/command_processing.c ****     
3617:..\src/command_processing.c ****     // Fill payload
3618:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 25404              		.loc 1 3618 0
 25405 000a 124B     		ldr	r3, .L972
 25406 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 25407 0010 012B     		cmp	r3, #1
 25408 0012 0BD1     		bne	.L970
3619:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 25409              		.loc 1 3619 0
 25410 0014 104B     		ldr	r3, .L972+4
 25411 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 25412 0018 5B00     		lsls	r3, r3, #1
 25413 001a 5AB2     		sxtb	r2, r3
 25414 001c 0E4B     		ldr	r3, .L972+4
 25415 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 25416 0020 5BB2     		sxtb	r3, r3
 25417 0022 1343     		orrs	r3, r3, r2
 25418 0024 5BB2     		sxtb	r3, r3
 25419 0026 DBB2     		uxtb	r3, r3
 25420 0028 7B71     		strb	r3, [r7, #5]
 25421 002a 02E0     		b	.L971
 25422              	.L970:
3620:..\src/command_processing.c ****     } 
3621:..\src/command_processing.c ****     else {
3622:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 25423              		.loc 1 3622 0
 25424 002c 0A4B     		ldr	r3, .L972+4
 25425 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 25426 0030 7B71     		strb	r3, [r7, #5]
 25427              	.L971:
3623:..\src/command_processing.c ****     }
3624:..\src/command_processing.c ****     
3625:..\src/command_processing.c ****     // Calculate checksum
3626:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 25428              		.loc 1 3626 0
 25429 0032 3B1D     		adds	r3, r7, #4
 25430 0034 0221     		movs	r1, #2
 25431 0036 1846     		mov	r0, r3
 25432 0038 FFF7FEFF 		bl	LCRChecksum
 25433 003c 0346     		mov	r3, r0
 25434 003e BB71     		strb	r3, [r7, #6]
3627:..\src/command_processing.c ****     
3628:..\src/command_processing.c ****     // Send package to UART
3629:..\src/command_processing.c ****     commWrite(packet_data, 3);
 25435              		.loc 1 3629 0
 25436 0040 3B1D     		adds	r3, r7, #4
 25437 0042 0321     		movs	r1, #3
 25438 0044 1846     		mov	r0, r3
 25439 0046 FFF7FEFF 		bl	commWrite
3630:..\src/command_processing.c **** 
3631:..\src/command_processing.c **** }
 25440              		.loc 1 3631 0
 25441 004a 00BF     		nop
 25442 004c 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 556


 25443              		.cfi_def_cfa_offset 8
 25444 004e BD46     		mov	sp, r7
 25445              		.cfi_def_cfa_register 13
 25446              		@ sp needed
 25447 0050 80BD     		pop	{r7, pc}
 25448              	.L973:
 25449 0052 00BF     		.align	2
 25450              	.L972:
 25451 0054 00000000 		.word	g_mem
 25452 0058 00000000 		.word	g_ref
 25453              		.cfi_endproc
 25454              	.LFE100:
 25455              		.size	cmd_get_activate, .-cmd_get_activate
 25456              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 25457              		.align	2
 25458              		.global	cmd_get_curr_and_meas
 25459              		.thumb
 25460              		.thumb_func
 25461              		.type	cmd_get_curr_and_meas, %function
 25462              	cmd_get_curr_and_meas:
 25463              	.LFB101:
3632:..\src/command_processing.c **** 
3633:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 25464              		.loc 1 3633 0
 25465              		.cfi_startproc
 25466              		@ args = 0, pretend = 0, frame = 16
 25467              		@ frame_needed = 1, uses_anonymous_args = 0
 25468 0000 90B5     		push	{r4, r7, lr}
 25469              		.cfi_def_cfa_offset 12
 25470              		.cfi_offset 4, -12
 25471              		.cfi_offset 7, -8
 25472              		.cfi_offset 14, -4
 25473 0002 85B0     		sub	sp, sp, #20
 25474              		.cfi_def_cfa_offset 32
 25475 0004 00AF     		add	r7, sp, #0
 25476              		.cfi_def_cfa_register 7
3634:..\src/command_processing.c ****     
3635:..\src/command_processing.c ****     uint8 CYDATA index;
3636:..\src/command_processing.c ****     int16 aux_int16;
3637:..\src/command_processing.c ****    
3638:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3639:..\src/command_processing.c ****     
3640:..\src/command_processing.c ****     uint8 packet_data[12]; 
3641:..\src/command_processing.c **** 
3642:..\src/command_processing.c ****     //Header package
3643:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 25477              		.loc 1 3643 0
 25478 0006 8623     		movs	r3, #134
 25479 0008 3B70     		strb	r3, [r7]
3644:..\src/command_processing.c **** 
3645:..\src/command_processing.c ****     // Currents
3646:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 25480              		.loc 1 3646 0
 25481 000a 484B     		ldr	r3, .L979
 25482 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25483 0010 1946     		mov	r1, r3
 25484 0012 474A     		ldr	r2, .L979+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 557


 25485 0014 3423     		movs	r3, #52
 25486 0016 03FB01F3 		mul	r3, r3, r1
 25487 001a 1344     		add	r3, r3, r2
 25488 001c 0C33     		adds	r3, r3, #12
 25489 001e 1B68     		ldr	r3, [r3]
 25490 0020 1BB2     		sxth	r3, r3
 25491 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3647:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25492              		.loc 1 3647 0
 25493 0024 07F10C03 		add	r3, r7, #12
 25494 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25495 002a BB70     		strb	r3, [r7, #2]
3648:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25496              		.loc 1 3648 0
 25497 002c 07F10C03 		add	r3, r7, #12
 25498 0030 0133     		adds	r3, r3, #1
 25499 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25500 0034 7B70     		strb	r3, [r7, #1]
3649:..\src/command_processing.c ****     
3650:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 25501              		.loc 1 3650 0
 25502 0036 3F4B     		ldr	r3, .L979+8
 25503 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 25504 003c 012B     		cmp	r3, #1
 25505 003e 0DD1     		bne	.L975
3651:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 25506              		.loc 1 3651 0
 25507 0040 3A4B     		ldr	r3, .L979
 25508 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25509 0046 1946     		mov	r1, r3
 25510 0048 394A     		ldr	r2, .L979+4
 25511 004a 3423     		movs	r3, #52
 25512 004c 03FB01F3 		mul	r3, r3, r1
 25513 0050 1344     		add	r3, r3, r2
 25514 0052 0C33     		adds	r3, r3, #12
 25515 0054 1B68     		ldr	r3, [r3]
 25516 0056 1BB2     		sxth	r3, r3
 25517 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 25518 005a 0CE0     		b	.L976
 25519              	.L975:
3652:..\src/command_processing.c ****     }
3653:..\src/command_processing.c ****     else {
3654:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 25520              		.loc 1 3654 0
 25521 005c 334B     		ldr	r3, .L979
 25522 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25523 0062 1946     		mov	r1, r3
 25524 0064 324A     		ldr	r2, .L979+4
 25525 0066 3423     		movs	r3, #52
 25526 0068 03FB01F3 		mul	r3, r3, r1
 25527 006c 1344     		add	r3, r3, r2
 25528 006e 1033     		adds	r3, r3, #16
 25529 0070 1B68     		ldr	r3, [r3]
 25530 0072 1BB2     		sxth	r3, r3
 25531 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 25532              	.L976:
3655:..\src/command_processing.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 558


3656:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25533              		.loc 1 3656 0
 25534 0076 07F10C03 		add	r3, r7, #12
 25535 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25536 007c 3B71     		strb	r3, [r7, #4]
3657:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25537              		.loc 1 3657 0
 25538 007e 07F10C03 		add	r3, r7, #12
 25539 0082 0133     		adds	r3, r3, #1
 25540 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25541 0086 FB70     		strb	r3, [r7, #3]
3658:..\src/command_processing.c **** 
3659:..\src/command_processing.c ****     // Positions
3660:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 25542              		.loc 1 3660 0
 25543 0088 0323     		movs	r3, #3
 25544 008a FB73     		strb	r3, [r7, #15]
 25545 008c 38E0     		b	.L977
 25546              	.L978:
3661:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 25547              		.loc 1 3661 0
 25548 008e 274B     		ldr	r3, .L979
 25549 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25550 0094 1A46     		mov	r2, r3
 25551 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 25552 0098 2548     		ldr	r0, .L979+4
 25553 009a 1346     		mov	r3, r2
 25554 009c 5B00     		lsls	r3, r3, #1
 25555 009e 1344     		add	r3, r3, r2
 25556 00a0 9B00     		lsls	r3, r3, #2
 25557 00a2 1344     		add	r3, r3, r2
 25558 00a4 0B44     		add	r3, r3, r1
 25559 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 25560 00aa 204B     		ldr	r3, .L979
 25561 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25562 00b0 1C46     		mov	r4, r3
 25563 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 25564 00b4 1D48     		ldr	r0, .L979
 25565 00b6 2346     		mov	r3, r4
 25566 00b8 5B00     		lsls	r3, r3, #1
 25567 00ba 2344     		add	r3, r3, r4
 25568 00bc 1B01     		lsls	r3, r3, #4
 25569 00be 0344     		add	r3, r3, r0
 25570 00c0 0B44     		add	r3, r3, r1
 25571 00c2 03F29513 		addw	r3, r3, #405
 25572 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25573 00c8 42FA03F3 		asr	r3, r2, r3
 25574 00cc 1BB2     		sxth	r3, r3
 25575 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3662:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 25576              		.loc 1 3662 0
 25577 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25578 00d2 5B00     		lsls	r3, r3, #1
 25579 00d4 0633     		adds	r3, r3, #6
 25580 00d6 07F10C02 		add	r2, r7, #12
 25581 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25582 00dc 07F11001 		add	r1, r7, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 559


 25583 00e0 0B44     		add	r3, r3, r1
 25584 00e2 03F8102C 		strb	r2, [r3, #-16]
3663:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 25585              		.loc 1 3663 0
 25586 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25587 00e8 5B00     		lsls	r3, r3, #1
 25588 00ea 5A1D     		adds	r2, r3, #5
 25589 00ec 07F10C03 		add	r3, r7, #12
 25590 00f0 0133     		adds	r3, r3, #1
 25591 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25592 00f4 07F11003 		add	r3, r7, #16
 25593 00f8 1344     		add	r3, r3, r2
 25594 00fa 0A46     		mov	r2, r1
 25595 00fc 03F8102C 		strb	r2, [r3, #-16]
 25596              	.L977:
3660:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 25597              		.loc 1 3660 0 discriminator 1
 25598 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25599 0102 5A1E     		subs	r2, r3, #1
 25600 0104 FA73     		strb	r2, [r7, #15]
 25601 0106 002B     		cmp	r3, #0
 25602 0108 C1D1     		bne	.L978
3664:..\src/command_processing.c ****     }
3665:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3666:..\src/command_processing.c ****         
3667:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 25603              		.loc 1 3667 0
 25604 010a 3B46     		mov	r3, r7
 25605 010c 0B21     		movs	r1, #11
 25606 010e 1846     		mov	r0, r3
 25607 0110 FFF7FEFF 		bl	LCRChecksum
 25608 0114 0346     		mov	r3, r0
 25609 0116 FB72     		strb	r3, [r7, #11]
3668:..\src/command_processing.c ****     commWrite(packet_data, 12);
 25610              		.loc 1 3668 0
 25611 0118 3B46     		mov	r3, r7
 25612 011a 0C21     		movs	r1, #12
 25613 011c 1846     		mov	r0, r3
 25614 011e FFF7FEFF 		bl	commWrite
3669:..\src/command_processing.c ****    
3670:..\src/command_processing.c **** }
 25615              		.loc 1 3670 0
 25616 0122 00BF     		nop
 25617 0124 1437     		adds	r7, r7, #20
 25618              		.cfi_def_cfa_offset 12
 25619 0126 BD46     		mov	sp, r7
 25620              		.cfi_def_cfa_register 13
 25621              		@ sp needed
 25622 0128 90BD     		pop	{r4, r7, pc}
 25623              	.L980:
 25624 012a 00BF     		.align	2
 25625              	.L979:
 25626 012c 00000000 		.word	g_mem
 25627 0130 00000000 		.word	g_measOld
 25628 0134 00000000 		.word	c_mem
 25629              		.cfi_endproc
 25630              	.LFE101:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 560


 25631              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 25632              		.global	__aeabi_dmul
 25633              		.global	__aeabi_d2iz
 25634              		.section	.text.cmd_get_currents,"ax",%progbits
 25635              		.align	2
 25636              		.global	cmd_get_currents
 25637              		.thumb
 25638              		.thumb_func
 25639              		.type	cmd_get_currents, %function
 25640              	cmd_get_currents:
 25641              	.LFB102:
3671:..\src/command_processing.c **** 
3672:..\src/command_processing.c **** void cmd_get_currents(){
 25642              		.loc 1 3672 0
 25643              		.cfi_startproc
 25644              		@ args = 0, pretend = 0, frame = 16
 25645              		@ frame_needed = 1, uses_anonymous_args = 0
 25646 0000 90B5     		push	{r4, r7, lr}
 25647              		.cfi_def_cfa_offset 12
 25648              		.cfi_offset 4, -12
 25649              		.cfi_offset 7, -8
 25650              		.cfi_offset 14, -4
 25651 0002 85B0     		sub	sp, sp, #20
 25652              		.cfi_def_cfa_offset 32
 25653 0004 00AF     		add	r7, sp, #0
 25654              		.cfi_def_cfa_register 7
3673:..\src/command_processing.c ****     
3674:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3675:..\src/command_processing.c ****     
3676:..\src/command_processing.c ****     uint8 packet_data[6]; 
3677:..\src/command_processing.c ****     int16 aux_int16;
3678:..\src/command_processing.c ****     
3679:..\src/command_processing.c ****     //Header package
3680:..\src/command_processing.c **** 
3681:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 25655              		.loc 1 3681 0
 25656 0006 8523     		movs	r3, #133
 25657 0008 3B72     		strb	r3, [r7, #8]
3682:..\src/command_processing.c **** 
3683:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 25658              		.loc 1 3683 0
 25659 000a 334B     		ldr	r3, .L986
 25660 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 25661 0010 022B     		cmp	r3, #2
 25662 0012 0DD0     		beq	.L982
3684:..\src/command_processing.c ****         // Currents
3685:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 25663              		.loc 1 3685 0
 25664 0014 314B     		ldr	r3, .L986+4
 25665 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25666 001a 1946     		mov	r1, r3
 25667 001c 304A     		ldr	r2, .L986+8
 25668 001e 3423     		movs	r3, #52
 25669 0020 03FB01F3 		mul	r3, r3, r1
 25670 0024 1344     		add	r3, r3, r2
 25671 0026 0C33     		adds	r3, r3, #12
 25672 0028 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 561


 25673 002a 1BB2     		sxth	r3, r3
 25674 002c FB80     		strh	r3, [r7, #6]	@ movhi
 25675 002e 12E0     		b	.L983
 25676              	.L982:
3686:..\src/command_processing.c ****     }
3687:..\src/command_processing.c ****     else {
3688:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3689:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 25677              		.loc 1 3689 0
 25678 0030 2C4B     		ldr	r3, .L986+12
 25679 0032 1B68     		ldr	r3, [r3]	@ float
 25680 0034 1846     		mov	r0, r3
 25681 0036 FFF7FEFF 		bl	__aeabi_f2d
 25682 003a 4FF00002 		mov	r2, #0
 25683 003e 2A4B     		ldr	r3, .L986+16
 25684 0040 FFF7FEFF 		bl	__aeabi_dmul
 25685 0044 0346     		mov	r3, r0
 25686 0046 0C46     		mov	r4, r1
 25687 0048 1846     		mov	r0, r3
 25688 004a 2146     		mov	r1, r4
 25689 004c FFF7FEFF 		bl	__aeabi_d2iz
 25690 0050 0346     		mov	r3, r0
 25691 0052 1BB2     		sxth	r3, r3
 25692 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 25693              	.L983:
3690:..\src/command_processing.c ****     }
3691:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25694              		.loc 1 3691 0
 25695 0056 BB1D     		adds	r3, r7, #6
 25696 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25697 005a BB72     		strb	r3, [r7, #10]
3692:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25698              		.loc 1 3692 0
 25699 005c BB1D     		adds	r3, r7, #6
 25700 005e 0133     		adds	r3, r3, #1
 25701 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25702 0062 7B72     		strb	r3, [r7, #9]
3693:..\src/command_processing.c ****     
3694:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 25703              		.loc 1 3694 0
 25704 0064 1C4B     		ldr	r3, .L986
 25705 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 25706 006a 012B     		cmp	r3, #1
 25707 006c 0DD1     		bne	.L984
3695:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 25708              		.loc 1 3695 0
 25709 006e 1B4B     		ldr	r3, .L986+4
 25710 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25711 0074 1946     		mov	r1, r3
 25712 0076 1A4A     		ldr	r2, .L986+8
 25713 0078 3423     		movs	r3, #52
 25714 007a 03FB01F3 		mul	r3, r3, r1
 25715 007e 1344     		add	r3, r3, r2
 25716 0080 0C33     		adds	r3, r3, #12
 25717 0082 1B68     		ldr	r3, [r3]
 25718 0084 1BB2     		sxth	r3, r3
 25719 0086 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 562


 25720 0088 0CE0     		b	.L985
 25721              	.L984:
3696:..\src/command_processing.c ****     }
3697:..\src/command_processing.c ****     else {
3698:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 25722              		.loc 1 3698 0
 25723 008a 144B     		ldr	r3, .L986+4
 25724 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25725 0090 1946     		mov	r1, r3
 25726 0092 134A     		ldr	r2, .L986+8
 25727 0094 3423     		movs	r3, #52
 25728 0096 03FB01F3 		mul	r3, r3, r1
 25729 009a 1344     		add	r3, r3, r2
 25730 009c 1033     		adds	r3, r3, #16
 25731 009e 1B68     		ldr	r3, [r3]
 25732 00a0 1BB2     		sxth	r3, r3
 25733 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 25734              	.L985:
3699:..\src/command_processing.c ****     }
3700:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25735              		.loc 1 3700 0
 25736 00a4 BB1D     		adds	r3, r7, #6
 25737 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25738 00a8 3B73     		strb	r3, [r7, #12]
3701:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25739              		.loc 1 3701 0
 25740 00aa BB1D     		adds	r3, r7, #6
 25741 00ac 0133     		adds	r3, r3, #1
 25742 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25743 00b0 FB72     		strb	r3, [r7, #11]
3702:..\src/command_processing.c **** 
3703:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3704:..\src/command_processing.c **** 
3705:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25744              		.loc 1 3705 0
 25745 00b2 07F10803 		add	r3, r7, #8
 25746 00b6 0521     		movs	r1, #5
 25747 00b8 1846     		mov	r0, r3
 25748 00ba FFF7FEFF 		bl	LCRChecksum
 25749 00be 0346     		mov	r3, r0
 25750 00c0 7B73     		strb	r3, [r7, #13]
3706:..\src/command_processing.c ****     
3707:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25751              		.loc 1 3707 0
 25752 00c2 07F10803 		add	r3, r7, #8
 25753 00c6 0621     		movs	r1, #6
 25754 00c8 1846     		mov	r0, r3
 25755 00ca FFF7FEFF 		bl	commWrite
3708:..\src/command_processing.c **** }
 25756              		.loc 1 3708 0
 25757 00ce 00BF     		nop
 25758 00d0 1437     		adds	r7, r7, #20
 25759              		.cfi_def_cfa_offset 12
 25760 00d2 BD46     		mov	sp, r7
 25761              		.cfi_def_cfa_register 13
 25762              		@ sp needed
 25763 00d4 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 563


 25764              	.L987:
 25765 00d6 00BF     		.align	2
 25766              	.L986:
 25767 00d8 00000000 		.word	c_mem
 25768 00dc 00000000 		.word	g_mem
 25769 00e0 00000000 		.word	g_measOld
 25770 00e4 00000000 		.word	g_fb_meas
 25771 00e8 00005940 		.word	1079574528
 25772              		.cfi_endproc
 25773              	.LFE102:
 25774              		.size	cmd_get_currents, .-cmd_get_currents
 25775              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 25776              		.align	2
 25777              		.global	cmd_get_currents_for_cuff
 25778              		.thumb
 25779              		.thumb_func
 25780              		.type	cmd_get_currents_for_cuff, %function
 25781              	cmd_get_currents_for_cuff:
 25782              	.LFB103:
3709:..\src/command_processing.c **** 
3710:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 25783              		.loc 1 3710 0
 25784              		.cfi_startproc
 25785              		@ args = 0, pretend = 0, frame = 8
 25786              		@ frame_needed = 1, uses_anonymous_args = 0
 25787 0000 80B5     		push	{r7, lr}
 25788              		.cfi_def_cfa_offset 8
 25789              		.cfi_offset 7, -8
 25790              		.cfi_offset 14, -4
 25791 0002 82B0     		sub	sp, sp, #8
 25792              		.cfi_def_cfa_offset 16
 25793 0004 00AF     		add	r7, sp, #0
 25794              		.cfi_def_cfa_register 7
3711:..\src/command_processing.c ****     
3712:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3713:..\src/command_processing.c ****     
3714:..\src/command_processing.c ****     uint8 packet_data[4]; 
3715:..\src/command_processing.c ****     int16 aux_int16;
3716:..\src/command_processing.c ****     
3717:..\src/command_processing.c ****     //Header package
3718:..\src/command_processing.c **** 
3719:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 25795              		.loc 1 3719 0
 25796 0006 8E23     		movs	r3, #142
 25797 0008 3B71     		strb	r3, [r7, #4]
3720:..\src/command_processing.c **** 
3721:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 25798              		.loc 1 3721 0
 25799 000a 144B     		ldr	r3, .L989
 25800 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25801 0010 1946     		mov	r1, r3
 25802 0012 134A     		ldr	r2, .L989+4
 25803 0014 3423     		movs	r3, #52
 25804 0016 03FB01F3 		mul	r3, r3, r1
 25805 001a 1344     		add	r3, r3, r2
 25806 001c 1033     		adds	r3, r3, #16
 25807 001e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 564


 25808 0020 1BB2     		sxth	r3, r3
 25809 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3722:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25810              		.loc 1 3722 0
 25811 0024 BB1C     		adds	r3, r7, #2
 25812 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25813 0028 BB71     		strb	r3, [r7, #6]
3723:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25814              		.loc 1 3723 0
 25815 002a BB1C     		adds	r3, r7, #2
 25816 002c 0133     		adds	r3, r3, #1
 25817 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25818 0030 7B71     		strb	r3, [r7, #5]
3724:..\src/command_processing.c **** 
3725:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3726:..\src/command_processing.c **** 
3727:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 25819              		.loc 1 3727 0
 25820 0032 3B1D     		adds	r3, r7, #4
 25821 0034 0321     		movs	r1, #3
 25822 0036 1846     		mov	r0, r3
 25823 0038 FFF7FEFF 		bl	LCRChecksum
 25824 003c 0346     		mov	r3, r0
 25825 003e FB71     		strb	r3, [r7, #7]
3728:..\src/command_processing.c ****     
3729:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 25826              		.loc 1 3729 0
 25827 0040 064B     		ldr	r3, .L989
 25828 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25829 0046 013B     		subs	r3, r3, #1
 25830 0048 DAB2     		uxtb	r2, r3
 25831 004a 3B1D     		adds	r3, r7, #4
 25832 004c 0421     		movs	r1, #4
 25833 004e 1846     		mov	r0, r3
 25834 0050 FFF7FEFF 		bl	commWriteID
3730:..\src/command_processing.c **** }
 25835              		.loc 1 3730 0
 25836 0054 00BF     		nop
 25837 0056 0837     		adds	r7, r7, #8
 25838              		.cfi_def_cfa_offset 8
 25839 0058 BD46     		mov	sp, r7
 25840              		.cfi_def_cfa_register 13
 25841              		@ sp needed
 25842 005a 80BD     		pop	{r7, pc}
 25843              	.L990:
 25844              		.align	2
 25845              	.L989:
 25846 005c 00000000 		.word	g_mem
 25847 0060 00000000 		.word	g_measOld
 25848              		.cfi_endproc
 25849              	.LFE103:
 25850              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 25851              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 25852              		.align	2
 25853              		.global	commReadResCurrFromSH
 25854              		.thumb
 25855              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 565


 25856              		.type	commReadResCurrFromSH, %function
 25857              	commReadResCurrFromSH:
 25858              	.LFB104:
3731:..\src/command_processing.c **** 
3732:..\src/command_processing.c **** //==============================================================================
3733:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3734:..\src/command_processing.c **** //==============================================================================
3735:..\src/command_processing.c **** 
3736:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3737:..\src/command_processing.c **** {
 25859              		.loc 1 3737 0
 25860              		.cfi_startproc
 25861              		@ args = 0, pretend = 0, frame = 32
 25862              		@ frame_needed = 1, uses_anonymous_args = 0
 25863 0000 80B5     		push	{r7, lr}
 25864              		.cfi_def_cfa_offset 8
 25865              		.cfi_offset 7, -8
 25866              		.cfi_offset 14, -4
 25867 0002 88B0     		sub	sp, sp, #32
 25868              		.cfi_def_cfa_offset 40
 25869 0004 00AF     		add	r7, sp, #0
 25870              		.cfi_def_cfa_register 7
3738:..\src/command_processing.c ****     uint8 packet_data[16];
3739:..\src/command_processing.c ****     uint8 packet_length;
3740:..\src/command_processing.c ****     int16 curr_diff = 0;
 25871              		.loc 1 3740 0
 25872 0006 0023     		movs	r3, #0
 25873 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3741:..\src/command_processing.c ****     uint32 t_start, t_end;
3742:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 25874              		.loc 1 3742 0
 25875 000a 0123     		movs	r3, #1
 25876 000c 7B77     		strb	r3, [r7, #29]
3743:..\src/command_processing.c **** 
3744:..\src/command_processing.c ****     packet_length = 2;
 25877              		.loc 1 3744 0
 25878 000e 0223     		movs	r3, #2
 25879 0010 3B77     		strb	r3, [r7, #28]
3745:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 25880              		.loc 1 3745 0
 25881 0012 8C23     		movs	r3, #140
 25882 0014 3B71     		strb	r3, [r7, #4]
3746:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 25883              		.loc 1 3746 0
 25884 0016 8C23     		movs	r3, #140
 25885 0018 7B71     		strb	r3, [r7, #5]
3747:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, c_mem.MS.slave_ID);
 25886              		.loc 1 3747 0
 25887 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 25888 001c 99B2     		uxth	r1, r3
 25889 001e 1D4B     		ldr	r3, .L998
 25890 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 25891 0024 3B1D     		adds	r3, r7, #4
 25892 0026 1846     		mov	r0, r3
 25893 0028 FFF7FEFF 		bl	commWriteID
3748:..\src/command_processing.c **** 
3749:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 566


 25894              		.loc 1 3749 0
 25895 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25896 0030 0346     		mov	r3, r0
 25897 0032 BB61     		str	r3, [r7, #24]
3750:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 25898              		.loc 1 3750 0
 25899 0034 18E0     		b	.L992
 25900              	.L995:
3751:..\src/command_processing.c ****         if (interrupt_flag){
 25901              		.loc 1 3751 0
 25902 0036 184B     		ldr	r3, .L998+4
 25903 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25904 003a 002B     		cmp	r3, #0
 25905 003c 04D0     		beq	.L993
3752:..\src/command_processing.c ****             interrupt_flag = FALSE;
 25906              		.loc 1 3752 0
 25907 003e 164B     		ldr	r3, .L998+4
 25908 0040 0022     		movs	r2, #0
 25909 0042 1A70     		strb	r2, [r3]
3753:..\src/command_processing.c ****             interrupt_manager();
 25910              		.loc 1 3753 0
 25911 0044 FFF7FEFF 		bl	interrupt_manager
 25912              	.L993:
3754:..\src/command_processing.c ****         }
3755:..\src/command_processing.c **** 
3756:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 25913              		.loc 1 3756 0
 25914 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25915 004c 0346     		mov	r3, r0
 25916 004e 7B61     		str	r3, [r7, #20]
3757:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 25917              		.loc 1 3757 0
 25918 0050 BA69     		ldr	r2, [r7, #24]
 25919 0052 7B69     		ldr	r3, [r7, #20]
 25920 0054 D31A     		subs	r3, r2, r3
 25921 0056 114A     		ldr	r2, .L998+8
 25922 0058 9342     		cmp	r3, r2
 25923 005a 05D9     		bls	.L992
3758:..\src/command_processing.c ****             read_flag = FALSE;
 25924              		.loc 1 3758 0
 25925 005c 0023     		movs	r3, #0
 25926 005e 7B77     		strb	r3, [r7, #29]
3759:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 25927              		.loc 1 3759 0
 25928 0060 0F4B     		ldr	r3, .L998+12
 25929 0062 0022     		movs	r2, #0
 25930 0064 1A70     		strb	r2, [r3]
3760:..\src/command_processing.c ****             break;
 25931              		.loc 1 3760 0
 25932 0066 03E0     		b	.L994
 25933              	.L992:
3750:..\src/command_processing.c ****         if (interrupt_flag){
 25934              		.loc 1 3750 0
 25935 0068 0E4B     		ldr	r3, .L998+16
 25936 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25937 006c 8E2B     		cmp	r3, #142
 25938 006e E2D1     		bne	.L995
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 567


 25939              	.L994:
3761:..\src/command_processing.c ****         }
3762:..\src/command_processing.c ****     }
3763:..\src/command_processing.c **** 
3764:..\src/command_processing.c ****     if (read_flag) {
 25940              		.loc 1 3764 0
 25941 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25942 0072 002B     		cmp	r3, #0
 25943 0074 08D0     		beq	.L996
3765:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 25944              		.loc 1 3765 0
 25945 0076 0B4B     		ldr	r3, .L998+16
 25946 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25947 007a 1B02     		lsls	r3, r3, #8
 25948 007c 1AB2     		sxth	r2, r3
 25949 007e 094B     		ldr	r3, .L998+16
 25950 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 25951 0082 1BB2     		sxth	r3, r3
 25952 0084 1343     		orrs	r3, r3, r2
 25953 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 25954              	.L996:
3766:..\src/command_processing.c ****     }
3767:..\src/command_processing.c ****     
3768:..\src/command_processing.c ****     return curr_diff;
 25955              		.loc 1 3768 0
 25956 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3769:..\src/command_processing.c **** }
 25957              		.loc 1 3769 0
 25958 008c 1846     		mov	r0, r3
 25959 008e 2037     		adds	r7, r7, #32
 25960              		.cfi_def_cfa_offset 8
 25961 0090 BD46     		mov	sp, r7
 25962              		.cfi_def_cfa_register 13
 25963              		@ sp needed
 25964 0092 80BD     		pop	{r7, pc}
 25965              	.L999:
 25966              		.align	2
 25967              	.L998:
 25968 0094 00000000 		.word	c_mem
 25969 0098 00000000 		.word	interrupt_flag
 25970 009c 20AA4400 		.word	4500000
 25971 00a0 00000000 		.word	master_mode
 25972 00a4 00000000 		.word	g_rx
 25973              		.cfi_endproc
 25974              	.LFE104:
 25975              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 25976              		.section	.text.cmd_set_baudrate,"ax",%progbits
 25977              		.align	2
 25978              		.global	cmd_set_baudrate
 25979              		.thumb
 25980              		.thumb_func
 25981              		.type	cmd_set_baudrate, %function
 25982              	cmd_set_baudrate:
 25983              	.LFB105:
3770:..\src/command_processing.c **** 
3771:..\src/command_processing.c **** void cmd_set_baudrate(){
 25984              		.loc 1 3771 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 568


 25985              		.cfi_startproc
 25986              		@ args = 0, pretend = 0, frame = 0
 25987              		@ frame_needed = 1, uses_anonymous_args = 0
 25988 0000 80B5     		push	{r7, lr}
 25989              		.cfi_def_cfa_offset 8
 25990              		.cfi_offset 7, -8
 25991              		.cfi_offset 14, -4
 25992 0002 00AF     		add	r7, sp, #0
 25993              		.cfi_def_cfa_register 7
3772:..\src/command_processing.c ****     
3773:..\src/command_processing.c ****     // Set BaudRate
3774:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 25994              		.loc 1 3774 0
 25995 0004 094B     		ldr	r3, .L1005
 25996 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 25997 0008 094B     		ldr	r3, .L1005+4
 25998 000a 83F8AA20 		strb	r2, [r3, #170]
3775:..\src/command_processing.c ****     
3776:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 25999              		.loc 1 3776 0
 26000 000e 074B     		ldr	r3, .L1005
 26001 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 26002 0012 0D2B     		cmp	r3, #13
 26003 0014 04D1     		bne	.L1004
3777:..\src/command_processing.c ****         case 13:
3778:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 26004              		.loc 1 3778 0
 26005 0016 0121     		movs	r1, #1
 26006 0018 0C20     		movs	r0, #12
 26007 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3779:..\src/command_processing.c ****             break;
 26008              		.loc 1 3779 0
 26009 001e 03E0     		b	.L1003
 26010              	.L1004:
3780:..\src/command_processing.c ****         default:
3781:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 26011              		.loc 1 3781 0
 26012 0020 0121     		movs	r1, #1
 26013 0022 0220     		movs	r0, #2
 26014 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 26015              	.L1003:
3782:..\src/command_processing.c ****     }
3783:..\src/command_processing.c **** }
 26016              		.loc 1 3783 0
 26017 0028 00BF     		nop
 26018 002a 80BD     		pop	{r7, pc}
 26019              	.L1006:
 26020              		.align	2
 26021              	.L1005:
 26022 002c 00000000 		.word	g_rx
 26023 0030 00000000 		.word	c_mem
 26024              		.cfi_endproc
 26025              	.LFE105:
 26026              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 26027              		.section	.text.cmd_ping,"ax",%progbits
 26028              		.align	2
 26029              		.global	cmd_ping
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 569


 26030              		.thumb
 26031              		.thumb_func
 26032              		.type	cmd_ping, %function
 26033              	cmd_ping:
 26034              	.LFB106:
3784:..\src/command_processing.c **** 
3785:..\src/command_processing.c **** void cmd_ping(){
 26035              		.loc 1 3785 0
 26036              		.cfi_startproc
 26037              		@ args = 0, pretend = 0, frame = 8
 26038              		@ frame_needed = 1, uses_anonymous_args = 0
 26039 0000 80B5     		push	{r7, lr}
 26040              		.cfi_def_cfa_offset 8
 26041              		.cfi_offset 7, -8
 26042              		.cfi_offset 14, -4
 26043 0002 82B0     		sub	sp, sp, #8
 26044              		.cfi_def_cfa_offset 16
 26045 0004 00AF     		add	r7, sp, #0
 26046              		.cfi_def_cfa_register 7
3786:..\src/command_processing.c **** 
3787:..\src/command_processing.c ****     uint8 packet_data[2];
3788:..\src/command_processing.c **** 
3789:..\src/command_processing.c ****     // Header
3790:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 26047              		.loc 1 3790 0
 26048 0006 0023     		movs	r3, #0
 26049 0008 3B71     		strb	r3, [r7, #4]
3791:..\src/command_processing.c ****     
3792:..\src/command_processing.c ****     // Load Payload
3793:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 26050              		.loc 1 3793 0
 26051 000a 0023     		movs	r3, #0
 26052 000c 7B71     		strb	r3, [r7, #5]
3794:..\src/command_processing.c **** 
3795:..\src/command_processing.c ****     // Send Package to uart
3796:..\src/command_processing.c ****     commWrite(packet_data, 2);
 26053              		.loc 1 3796 0
 26054 000e 3B1D     		adds	r3, r7, #4
 26055 0010 0221     		movs	r1, #2
 26056 0012 1846     		mov	r0, r3
 26057 0014 FFF7FEFF 		bl	commWrite
3797:..\src/command_processing.c **** }
 26058              		.loc 1 3797 0
 26059 0018 00BF     		nop
 26060 001a 0837     		adds	r7, r7, #8
 26061              		.cfi_def_cfa_offset 8
 26062 001c BD46     		mov	sp, r7
 26063              		.cfi_def_cfa_register 13
 26064              		@ sp needed
 26065 001e 80BD     		pop	{r7, pc}
 26066              		.cfi_endproc
 26067              	.LFE106:
 26068              		.size	cmd_ping, .-cmd_ping
 26069              		.section	.text.cmd_get_inputs,"ax",%progbits
 26070              		.align	2
 26071              		.global	cmd_get_inputs
 26072              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 570


 26073              		.thumb_func
 26074              		.type	cmd_get_inputs, %function
 26075              	cmd_get_inputs:
 26076              	.LFB107:
3798:..\src/command_processing.c **** 
3799:..\src/command_processing.c **** void cmd_get_inputs(){
 26077              		.loc 1 3799 0
 26078              		.cfi_startproc
 26079              		@ args = 0, pretend = 0, frame = 16
 26080              		@ frame_needed = 1, uses_anonymous_args = 0
 26081 0000 80B5     		push	{r7, lr}
 26082              		.cfi_def_cfa_offset 8
 26083              		.cfi_offset 7, -8
 26084              		.cfi_offset 14, -4
 26085 0002 84B0     		sub	sp, sp, #16
 26086              		.cfi_def_cfa_offset 24
 26087 0004 00AF     		add	r7, sp, #0
 26088              		.cfi_def_cfa_register 7
3800:..\src/command_processing.c **** 
3801:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3802:..\src/command_processing.c **** 
3803:..\src/command_processing.c ****     uint8 packet_data[6]; 
3804:..\src/command_processing.c ****     int16 aux_int16;
3805:..\src/command_processing.c ****     
3806:..\src/command_processing.c ****     //Header package
3807:..\src/command_processing.c **** 
3808:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 26089              		.loc 1 3808 0
 26090 0006 8323     		movs	r3, #131
 26091 0008 3B72     		strb	r3, [r7, #8]
3809:..\src/command_processing.c ****         
3810:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 26092              		.loc 1 3810 0
 26093 000a 234B     		ldr	r3, .L1009
 26094 000c 1A68     		ldr	r2, [r3]
 26095 000e 234B     		ldr	r3, .L1009+4
 26096 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 26097 0014 1846     		mov	r0, r3
 26098 0016 2149     		ldr	r1, .L1009+4
 26099 0018 0346     		mov	r3, r0
 26100 001a 5B00     		lsls	r3, r3, #1
 26101 001c 0344     		add	r3, r3, r0
 26102 001e 1B01     		lsls	r3, r3, #4
 26103 0020 0B44     		add	r3, r3, r1
 26104 0022 03F29513 		addw	r3, r3, #405
 26105 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26106 0028 42FA03F3 		asr	r3, r2, r3
 26107 002c 1BB2     		sxth	r3, r3
 26108 002e FB80     		strh	r3, [r7, #6]	@ movhi
3811:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 26109              		.loc 1 3811 0
 26110 0030 BB1D     		adds	r3, r7, #6
 26111 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26112 0034 BB72     		strb	r3, [r7, #10]
3812:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 26113              		.loc 1 3812 0
 26114 0036 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 571


 26115 0038 0133     		adds	r3, r3, #1
 26116 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26117 003c 7B72     		strb	r3, [r7, #9]
3813:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 26118              		.loc 1 3813 0
 26119 003e 164B     		ldr	r3, .L1009
 26120 0040 1A69     		ldr	r2, [r3, #16]
 26121 0042 164B     		ldr	r3, .L1009+4
 26122 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 26123 0048 1846     		mov	r0, r3
 26124 004a 1449     		ldr	r1, .L1009+4
 26125 004c 0346     		mov	r3, r0
 26126 004e 5B00     		lsls	r3, r3, #1
 26127 0050 0344     		add	r3, r3, r0
 26128 0052 1B01     		lsls	r3, r3, #4
 26129 0054 0B44     		add	r3, r3, r1
 26130 0056 03F29513 		addw	r3, r3, #405
 26131 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26132 005c 42FA03F3 		asr	r3, r2, r3
 26133 0060 1BB2     		sxth	r3, r3
 26134 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3814:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 26135              		.loc 1 3814 0
 26136 0064 BB1D     		adds	r3, r7, #6
 26137 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26138 0068 3B73     		strb	r3, [r7, #12]
3815:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 26139              		.loc 1 3815 0
 26140 006a BB1D     		adds	r3, r7, #6
 26141 006c 0133     		adds	r3, r3, #1
 26142 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26143 0070 FB72     		strb	r3, [r7, #11]
3816:..\src/command_processing.c ****     
3817:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3818:..\src/command_processing.c **** 
3819:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 26144              		.loc 1 3819 0
 26145 0072 07F10803 		add	r3, r7, #8
 26146 0076 0521     		movs	r1, #5
 26147 0078 1846     		mov	r0, r3
 26148 007a FFF7FEFF 		bl	LCRChecksum
 26149 007e 0346     		mov	r3, r0
 26150 0080 7B73     		strb	r3, [r7, #13]
3820:..\src/command_processing.c **** 
3821:..\src/command_processing.c ****     commWrite(packet_data, 6);
 26151              		.loc 1 3821 0
 26152 0082 07F10803 		add	r3, r7, #8
 26153 0086 0621     		movs	r1, #6
 26154 0088 1846     		mov	r0, r3
 26155 008a FFF7FEFF 		bl	commWrite
3822:..\src/command_processing.c **** }
 26156              		.loc 1 3822 0
 26157 008e 00BF     		nop
 26158 0090 1037     		adds	r7, r7, #16
 26159              		.cfi_def_cfa_offset 8
 26160 0092 BD46     		mov	sp, r7
 26161              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 572


 26162              		@ sp needed
 26163 0094 80BD     		pop	{r7, pc}
 26164              	.L1010:
 26165 0096 00BF     		.align	2
 26166              	.L1009:
 26167 0098 00000000 		.word	g_refOld
 26168 009c 00000000 		.word	g_mem
 26169              		.cfi_endproc
 26170              	.LFE107:
 26171              		.size	cmd_get_inputs, .-cmd_get_inputs
 26172              		.section	.text.cmd_store_params,"ax",%progbits
 26173              		.align	2
 26174              		.global	cmd_store_params
 26175              		.thumb
 26176              		.thumb_func
 26177              		.type	cmd_store_params, %function
 26178              	cmd_store_params:
 26179              	.LFB108:
3823:..\src/command_processing.c **** 
3824:..\src/command_processing.c **** void cmd_store_params(){
 26180              		.loc 1 3824 0
 26181              		.cfi_startproc
 26182              		@ args = 0, pretend = 0, frame = 16
 26183              		@ frame_needed = 1, uses_anonymous_args = 0
 26184 0000 80B5     		push	{r7, lr}
 26185              		.cfi_def_cfa_offset 8
 26186              		.cfi_offset 7, -8
 26187              		.cfi_offset 14, -4
 26188 0002 84B0     		sub	sp, sp, #16
 26189              		.cfi_def_cfa_offset 24
 26190 0004 00AF     		add	r7, sp, #0
 26191              		.cfi_def_cfa_register 7
3825:..\src/command_processing.c ****     
3826:..\src/command_processing.c ****     // Check input mode enabled
3827:..\src/command_processing.c ****     uint32 off_1;
3828:..\src/command_processing.c ****     float mult_1;
3829:..\src/command_processing.c ****     uint8 CYDATA packet_length = 2;
 26192              		.loc 1 3829 0
 26193 0006 0223     		movs	r3, #2
 26194 0008 FB73     		strb	r3, [r7, #15]
3830:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3831:..\src/command_processing.c ****     uint8 CYDATA old_id;
3832:..\src/command_processing.c ****     
3833:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 26195              		.loc 1 3833 0
 26196 000a 674B     		ldr	r3, .L1022
 26197 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 26198 0010 002B     		cmp	r3, #0
 26199 0012 7CD1     		bne	.L1012
3834:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 26200              		.loc 1 3834 0
 26201 0014 644B     		ldr	r3, .L1022
 26202 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 26203 001a 1946     		mov	r1, r3
 26204 001c 624A     		ldr	r2, .L1022
 26205 001e 0B46     		mov	r3, r1
 26206 0020 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 573


 26207 0022 0B44     		add	r3, r3, r1
 26208 0024 1B01     		lsls	r3, r3, #4
 26209 0026 1344     		add	r3, r3, r2
 26210 0028 03F5CC73 		add	r3, r3, #408
 26211 002c 1B68     		ldr	r3, [r3]
 26212 002e BB60     		str	r3, [r7, #8]
3835:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 26213              		.loc 1 3835 0
 26214 0030 5D4B     		ldr	r3, .L1022
 26215 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 26216 0036 1946     		mov	r1, r3
 26217 0038 5B4A     		ldr	r2, .L1022
 26218 003a 0B46     		mov	r3, r1
 26219 003c 5B00     		lsls	r3, r3, #1
 26220 003e 0B44     		add	r3, r3, r1
 26221 0040 1B01     		lsls	r3, r3, #4
 26222 0042 1344     		add	r3, r3, r2
 26223 0044 03F5D273 		add	r3, r3, #420
 26224 0048 1B68     		ldr	r3, [r3]	@ float
 26225 004a 7B60     		str	r3, [r7, #4]	@ float
3836:..\src/command_processing.c **** 
3837:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 26226              		.loc 1 3837 0
 26227 004c 574B     		ldr	r3, .L1022+4
 26228 004e 1B68     		ldr	r3, [r3]
 26229 0050 1846     		mov	r0, r3
 26230 0052 FFF7FEFF 		bl	__aeabi_i2f
 26231 0056 0346     		mov	r3, r0
 26232 0058 7968     		ldr	r1, [r7, #4]	@ float
 26233 005a 1846     		mov	r0, r3
 26234 005c FFF7FEFF 		bl	__aeabi_fdiv
 26235 0060 0346     		mov	r3, r0
 26236 0062 1846     		mov	r0, r3
 26237 0064 FFF7FEFF 		bl	__aeabi_f2iz
 26238 0068 0246     		mov	r2, r0
 26239 006a 504B     		ldr	r3, .L1022+4
 26240 006c 1A60     		str	r2, [r3]
3838:..\src/command_processing.c **** 
3839:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 26241              		.loc 1 3839 0
 26242 006e 4F4B     		ldr	r3, .L1022+4
 26243 0070 1B68     		ldr	r3, [r3]
 26244 0072 1846     		mov	r0, r3
 26245 0074 FFF7FEFF 		bl	__aeabi_i2f
 26246 0078 4B4B     		ldr	r3, .L1022
 26247 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 26248 007e 1946     		mov	r1, r3
 26249 0080 4B4A     		ldr	r2, .L1022+8
 26250 0082 0B46     		mov	r3, r1
 26251 0084 5B00     		lsls	r3, r3, #1
 26252 0086 0B44     		add	r3, r3, r1
 26253 0088 1B01     		lsls	r3, r3, #4
 26254 008a 1344     		add	r3, r3, r2
 26255 008c 03F5D273 		add	r3, r3, #420
 26256 0090 1B68     		ldr	r3, [r3]	@ float
 26257 0092 1946     		mov	r1, r3
 26258 0094 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 574


 26259 0098 0346     		mov	r3, r0
 26260 009a 1846     		mov	r0, r3
 26261 009c FFF7FEFF 		bl	__aeabi_f2iz
 26262 00a0 0246     		mov	r2, r0
 26263 00a2 424B     		ldr	r3, .L1022+4
 26264 00a4 1A60     		str	r2, [r3]
3840:..\src/command_processing.c **** 
3841:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 26265              		.loc 1 3841 0
 26266 00a6 414B     		ldr	r3, .L1022+4
 26267 00a8 1B68     		ldr	r3, [r3]
 26268 00aa 1846     		mov	r0, r3
 26269 00ac 3E4B     		ldr	r3, .L1022
 26270 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 26271 00b2 1946     		mov	r1, r3
 26272 00b4 3E4A     		ldr	r2, .L1022+8
 26273 00b6 0B46     		mov	r3, r1
 26274 00b8 5B00     		lsls	r3, r3, #1
 26275 00ba 0B44     		add	r3, r3, r1
 26276 00bc 1B01     		lsls	r3, r3, #4
 26277 00be 1344     		add	r3, r3, r2
 26278 00c0 03F5CC73 		add	r3, r3, #408
 26279 00c4 1B68     		ldr	r3, [r3]
 26280 00c6 1A46     		mov	r2, r3
 26281 00c8 BB68     		ldr	r3, [r7, #8]
 26282 00ca D31A     		subs	r3, r2, r3
 26283 00cc 0344     		add	r3, r3, r0
 26284 00ce 1A46     		mov	r2, r3
 26285 00d0 364B     		ldr	r3, .L1022+4
 26286 00d2 1A60     		str	r2, [r3]
3842:..\src/command_processing.c ****         
3843:..\src/command_processing.c ****         // Check position Limits
3844:..\src/command_processing.c **** 
3845:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 26287              		.loc 1 3845 0
 26288 00d4 344B     		ldr	r3, .L1022
 26289 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 26290 00da 002B     		cmp	r3, #0
 26291 00dc 17D0     		beq	.L1012
3846:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 26292              		.loc 1 3846 0
 26293 00de 334B     		ldr	r3, .L1022+4
 26294 00e0 1A68     		ldr	r2, [r3]
 26295 00e2 314B     		ldr	r3, .L1022
 26296 00e4 D3F8E430 		ldr	r3, [r3, #228]
 26297 00e8 9A42     		cmp	r2, r3
 26298 00ea 04DA     		bge	.L1013
3847:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 26299              		.loc 1 3847 0
 26300 00ec 2E4B     		ldr	r3, .L1022
 26301 00ee D3F8E430 		ldr	r3, [r3, #228]
 26302 00f2 2E4A     		ldr	r2, .L1022+4
 26303 00f4 1360     		str	r3, [r2]
 26304              	.L1013:
3848:..\src/command_processing.c **** 
3849:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 26305              		.loc 1 3849 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 575


 26306 00f6 2D4B     		ldr	r3, .L1022+4
 26307 00f8 1A68     		ldr	r2, [r3]
 26308 00fa 2B4B     		ldr	r3, .L1022
 26309 00fc D3F8E830 		ldr	r3, [r3, #232]
 26310 0100 9A42     		cmp	r2, r3
 26311 0102 04DD     		ble	.L1012
3850:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 26312              		.loc 1 3850 0
 26313 0104 284B     		ldr	r3, .L1022
 26314 0106 D3F8E830 		ldr	r3, [r3, #232]
 26315 010a 284A     		ldr	r2, .L1022+4
 26316 010c 1360     		str	r3, [r2]
 26317              	.L1012:
3851:..\src/command_processing.c ****         }
3852:..\src/command_processing.c ****     }
3853:..\src/command_processing.c ****     
3854:..\src/command_processing.c ****     // If SD is used, create new param and data file
3855:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 26318              		.loc 1 3855 0
 26319 010e 264B     		ldr	r3, .L1022
 26320 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 26321 0114 012B     		cmp	r3, #1
 26322 0116 06D1     		bne	.L1014
3856:..\src/command_processing.c ****         FS_FClose(pFile);
 26323              		.loc 1 3856 0
 26324 0118 264B     		ldr	r3, .L1022+12
 26325 011a 1B68     		ldr	r3, [r3]
 26326 011c 1846     		mov	r0, r3
 26327 011e FFF7FEFF 		bl	FS_FClose
3857:..\src/command_processing.c ****         
3858:..\src/command_processing.c ****         InitSD_FS();
 26328              		.loc 1 3858 0
 26329 0122 FFF7FEFF 		bl	InitSD_FS
 26330              	.L1014:
3859:..\src/command_processing.c ****     }
3860:..\src/command_processing.c ****    
3861:..\src/command_processing.c ****     // Store params 
3862:..\src/command_processing.c **** 
3863:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 26331              		.loc 1 3863 0
 26332 0126 204B     		ldr	r3, .L1022
 26333 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 26334 012c 204B     		ldr	r3, .L1022+8
 26335 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 26336 0132 9A42     		cmp	r2, r3
 26337 0134 21D0     		beq	.L1015
3864:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 26338              		.loc 1 3864 0
 26339 0136 1C4B     		ldr	r3, .L1022
 26340 0138 93F8A030 		ldrb	r3, [r3, #160]
 26341 013c FB70     		strb	r3, [r7, #3]
3865:..\src/command_processing.c ****         if(memStore(0)) {
 26342              		.loc 1 3865 0
 26343 013e 0020     		movs	r0, #0
 26344 0140 FFF7FEFF 		bl	memStore
 26345 0144 0346     		mov	r3, r0
 26346 0146 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 576


 26347 0148 0BD0     		beq	.L1016
3866:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 26348              		.loc 1 3866 0
 26349 014a 0123     		movs	r3, #1
 26350 014c 3B70     		strb	r3, [r7]
3867:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 26351              		.loc 1 3867 0
 26352 014e 0123     		movs	r3, #1
 26353 0150 7B70     		strb	r3, [r7, #1]
3868:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_length, old_id);
 26354              		.loc 1 3868 0
 26355 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26356 0154 99B2     		uxth	r1, r3
 26357 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 26358 0158 3B46     		mov	r3, r7
 26359 015a 1846     		mov	r0, r3
 26360 015c FFF7FEFF 		bl	commWrite_old_id
 26361 0160 18E0     		b	.L1018
 26362              	.L1016:
3869:..\src/command_processing.c ****         }    
3870:..\src/command_processing.c ****         else{
3871:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 26363              		.loc 1 3871 0
 26364 0162 0023     		movs	r3, #0
 26365 0164 3B70     		strb	r3, [r7]
3872:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 26366              		.loc 1 3872 0
 26367 0166 0023     		movs	r3, #0
 26368 0168 7B70     		strb	r3, [r7, #1]
3873:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_length, old_id);
 26369              		.loc 1 3873 0
 26370 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26371 016c 99B2     		uxth	r1, r3
 26372 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 26373 0170 3B46     		mov	r3, r7
 26374 0172 1846     		mov	r0, r3
 26375 0174 FFF7FEFF 		bl	commWrite_old_id
 26376 0178 0CE0     		b	.L1018
 26377              	.L1015:
3874:..\src/command_processing.c ****         }
3875:..\src/command_processing.c ****     }    
3876:..\src/command_processing.c ****     else {
3877:..\src/command_processing.c ****         if(memStore(0))
 26378              		.loc 1 3877 0
 26379 017a 0020     		movs	r0, #0
 26380 017c FFF7FEFF 		bl	memStore
 26381 0180 0346     		mov	r3, r0
 26382 0182 002B     		cmp	r3, #0
 26383 0184 03D0     		beq	.L1019
3878:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 26384              		.loc 1 3878 0
 26385 0186 0120     		movs	r0, #1
 26386 0188 FFF7FEFF 		bl	sendAcknowledgment
 26387 018c 02E0     		b	.L1018
 26388              	.L1019:
3879:..\src/command_processing.c ****         else
3880:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 577


 26389              		.loc 1 3880 0
 26390 018e 0020     		movs	r0, #0
 26391 0190 FFF7FEFF 		bl	sendAcknowledgment
 26392              	.L1018:
3881:..\src/command_processing.c ****     }
3882:..\src/command_processing.c ****     
3883:..\src/command_processing.c ****     // FW reset (if necessary)
3884:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 26393              		.loc 1 3884 0
 26394 0194 084B     		ldr	r3, .L1022+16
 26395 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26396 0198 012B     		cmp	r3, #1
 26397 019a 01D1     		bne	.L1021
3885:..\src/command_processing.c ****         CySoftwareReset();
 26398              		.loc 1 3885 0
 26399 019c FFF7FEFF 		bl	CySoftwareReset
 26400              	.L1021:
3886:..\src/command_processing.c ****     }
3887:..\src/command_processing.c **** }
 26401              		.loc 1 3887 0
 26402 01a0 00BF     		nop
 26403 01a2 1037     		adds	r7, r7, #16
 26404              		.cfi_def_cfa_offset 8
 26405 01a4 BD46     		mov	sp, r7
 26406              		.cfi_def_cfa_register 13
 26407              		@ sp needed
 26408 01a6 80BD     		pop	{r7, pc}
 26409              	.L1023:
 26410              		.align	2
 26411              	.L1022:
 26412 01a8 00000000 		.word	c_mem
 26413 01ac 00000000 		.word	g_refNew
 26414 01b0 00000000 		.word	g_mem
 26415 01b4 00000000 		.word	pFile
 26416 01b8 00000000 		.word	reset_PSoC_flag
 26417              		.cfi_endproc
 26418              	.LFE108:
 26419              		.size	cmd_store_params, .-cmd_store_params
 26420              		.section	.text.cmd_get_emg,"ax",%progbits
 26421              		.align	2
 26422              		.global	cmd_get_emg
 26423              		.thumb
 26424              		.thumb_func
 26425              		.type	cmd_get_emg, %function
 26426              	cmd_get_emg:
 26427              	.LFB109:
3888:..\src/command_processing.c **** 
3889:..\src/command_processing.c **** void cmd_get_emg(){
 26428              		.loc 1 3889 0
 26429              		.cfi_startproc
 26430              		@ args = 0, pretend = 0, frame = 16
 26431              		@ frame_needed = 1, uses_anonymous_args = 0
 26432 0000 80B5     		push	{r7, lr}
 26433              		.cfi_def_cfa_offset 8
 26434              		.cfi_offset 7, -8
 26435              		.cfi_offset 14, -4
 26436 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 578


 26437              		.cfi_def_cfa_offset 24
 26438 0004 00AF     		add	r7, sp, #0
 26439              		.cfi_def_cfa_register 7
3890:..\src/command_processing.c ****     
3891:..\src/command_processing.c ****     uint8 packet_data[6];
3892:..\src/command_processing.c ****     int16 aux_int16;
3893:..\src/command_processing.c ****     
3894:..\src/command_processing.c ****     // Header        
3895:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 26440              		.loc 1 3895 0
 26441 0006 8823     		movs	r3, #136
 26442 0008 3B72     		strb	r3, [r7, #8]
3896:..\src/command_processing.c ****     
3897:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 26443              		.loc 1 3897 0
 26444 000a 144B     		ldr	r3, .L1025
 26445 000c 1B68     		ldr	r3, [r3]
 26446 000e 1BB2     		sxth	r3, r3
 26447 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3898:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 26448              		.loc 1 3898 0
 26449 0012 BB1D     		adds	r3, r7, #6
 26450 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26451 0016 BB72     		strb	r3, [r7, #10]
3899:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 26452              		.loc 1 3899 0
 26453 0018 BB1D     		adds	r3, r7, #6
 26454 001a 0133     		adds	r3, r3, #1
 26455 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26456 001e 7B72     		strb	r3, [r7, #9]
3900:..\src/command_processing.c ****     
3901:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 26457              		.loc 1 3901 0
 26458 0020 0E4B     		ldr	r3, .L1025
 26459 0022 5B68     		ldr	r3, [r3, #4]
 26460 0024 1BB2     		sxth	r3, r3
 26461 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3902:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 26462              		.loc 1 3902 0
 26463 0028 BB1D     		adds	r3, r7, #6
 26464 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26465 002c 3B73     		strb	r3, [r7, #12]
3903:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 26466              		.loc 1 3903 0
 26467 002e BB1D     		adds	r3, r7, #6
 26468 0030 0133     		adds	r3, r3, #1
 26469 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26470 0034 FB72     		strb	r3, [r7, #11]
3904:..\src/command_processing.c **** 
3905:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 26471              		.loc 1 3905 0
 26472 0036 07F10803 		add	r3, r7, #8
 26473 003a 0521     		movs	r1, #5
 26474 003c 1846     		mov	r0, r3
 26475 003e FFF7FEFF 		bl	LCRChecksum
 26476 0042 0346     		mov	r3, r0
 26477 0044 7B73     		strb	r3, [r7, #13]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 579


3906:..\src/command_processing.c **** 
3907:..\src/command_processing.c ****     commWrite(packet_data, 6);
 26478              		.loc 1 3907 0
 26479 0046 07F10803 		add	r3, r7, #8
 26480 004a 0621     		movs	r1, #6
 26481 004c 1846     		mov	r0, r3
 26482 004e FFF7FEFF 		bl	commWrite
3908:..\src/command_processing.c **** 
3909:..\src/command_processing.c **** }
 26483              		.loc 1 3909 0
 26484 0052 00BF     		nop
 26485 0054 1037     		adds	r7, r7, #16
 26486              		.cfi_def_cfa_offset 8
 26487 0056 BD46     		mov	sp, r7
 26488              		.cfi_def_cfa_register 13
 26489              		@ sp needed
 26490 0058 80BD     		pop	{r7, pc}
 26491              	.L1026:
 26492 005a 00BF     		.align	2
 26493              	.L1025:
 26494 005c 00000000 		.word	g_adc_measOld
 26495              		.cfi_endproc
 26496              	.LFE109:
 26497              		.size	cmd_get_emg, .-cmd_get_emg
 26498              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 26499              		.align	2
 26500              		.global	cmd_get_imu_readings
 26501              		.thumb
 26502              		.thumb_func
 26503              		.type	cmd_get_imu_readings, %function
 26504              	cmd_get_imu_readings:
 26505              	.LFB110:
3910:..\src/command_processing.c **** 
3911:..\src/command_processing.c **** void cmd_get_imu_readings(){
 26506              		.loc 1 3911 0
 26507              		.cfi_startproc
 26508              		@ args = 0, pretend = 0, frame = 400
 26509              		@ frame_needed = 1, uses_anonymous_args = 0
 26510 0000 90B5     		push	{r4, r7, lr}
 26511              		.cfi_def_cfa_offset 12
 26512              		.cfi_offset 4, -12
 26513              		.cfi_offset 7, -8
 26514              		.cfi_offset 14, -4
 26515 0002 E5B0     		sub	sp, sp, #404
 26516              		.cfi_def_cfa_offset 416
 26517 0004 00AF     		add	r7, sp, #0
 26518              		.cfi_def_cfa_register 7
3912:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3913:..\src/command_processing.c ****     
3914:..\src/command_processing.c ****     uint8 k_imu;
3915:..\src/command_processing.c ****     uint16 c = 1;
 26519              		.loc 1 3915 0
 26520 0006 0123     		movs	r3, #1
 26521 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3916:..\src/command_processing.c ****     uint8 k = 0;
 26522              		.loc 1 3916 0
 26523 000c 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 580


 26524 000e 87F88B31 		strb	r3, [r7, #395]
3917:..\src/command_processing.c ****     uint16 gl_c = 1;
 26525              		.loc 1 3917 0
 26526 0012 0123     		movs	r3, #1
 26527 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3918:..\src/command_processing.c ****     int16 aux_int16;
3919:..\src/command_processing.c ****     float aux_float;
3920:..\src/command_processing.c ****     
3921:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3922:..\src/command_processing.c ****     uint8 packet_data[350];
3923:..\src/command_processing.c ****     uint8 single_packet[32];
3924:..\src/command_processing.c ****     
3925:..\src/command_processing.c ****     //Header package 
3926:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 26528              		.loc 1 3926 0
 26529 0018 07F12003 		add	r3, r7, #32
 26530 001c A122     		movs	r2, #161
 26531 001e 1A70     		strb	r2, [r3]
3927:..\src/command_processing.c ****  
3928:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 26532              		.loc 1 3928 0
 26533 0020 0023     		movs	r3, #0
 26534 0022 87F88F31 		strb	r3, [r7, #399]
 26535 0026 82E2     		b	.L1028
 26536              	.L1044:
3929:..\src/command_processing.c ****     {	
3930:..\src/command_processing.c ****             
3931:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 26537              		.loc 1 3931 0
 26538 0028 3B46     		mov	r3, r7
 26539 002a 3A22     		movs	r2, #58
 26540 002c 1A70     		strb	r2, [r3]
3932:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 26541              		.loc 1 3932 0
 26542 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26543 0032 DB4A     		ldr	r2, .L1045
 26544 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26545 0036 1946     		mov	r1, r3
 26546 0038 DA4A     		ldr	r2, .L1045+4
 26547 003a 0B46     		mov	r3, r1
 26548 003c 9B00     		lsls	r3, r3, #2
 26549 003e 0B44     		add	r3, r3, r1
 26550 0040 1344     		add	r3, r3, r2
 26551 0042 03F20223 		addw	r3, r3, #514
 26552 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26553 0048 002B     		cmp	r3, #0
 26554 004a 5DD0     		beq	.L1029
3933:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 26555              		.loc 1 3933 0
 26556 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26557 0050 D549     		ldr	r1, .L1045+8
 26558 0052 1346     		mov	r3, r2
 26559 0054 9B00     		lsls	r3, r3, #2
 26560 0056 1344     		add	r3, r3, r2
 26561 0058 DB00     		lsls	r3, r3, #3
 26562 005a 0B44     		add	r3, r3, r1
 26563 005c 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 581


 26564 005e B3F90030 		ldrsh	r3, [r3]
 26565 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3934:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26566              		.loc 1 3934 0
 26567 0066 B7F88C31 		ldrh	r3, [r7, #396]
 26568 006a 0133     		adds	r3, r3, #1
 26569 006c 07F5C372 		add	r2, r7, #390
 26570 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26571 0072 3A46     		mov	r2, r7
 26572 0074 D154     		strb	r1, [r2, r3]
3935:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26573              		.loc 1 3935 0
 26574 0076 B7F88C21 		ldrh	r2, [r7, #396]
 26575 007a 07F5C373 		add	r3, r7, #390
 26576 007e 0133     		adds	r3, r3, #1
 26577 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26578 0082 3B46     		mov	r3, r7
 26579 0084 9954     		strb	r1, [r3, r2]
3936:..\src/command_processing.c **** 
3937:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 26580              		.loc 1 3937 0
 26581 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26582 008a C749     		ldr	r1, .L1045+8
 26583 008c 1346     		mov	r3, r2
 26584 008e 9B00     		lsls	r3, r3, #2
 26585 0090 1344     		add	r3, r3, r2
 26586 0092 DB00     		lsls	r3, r3, #3
 26587 0094 0B44     		add	r3, r3, r1
 26588 0096 0433     		adds	r3, r3, #4
 26589 0098 B3F90030 		ldrsh	r3, [r3]
 26590 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3938:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26591              		.loc 1 3938 0
 26592 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 26593 00a4 0333     		adds	r3, r3, #3
 26594 00a6 07F5C372 		add	r2, r7, #390
 26595 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26596 00ac 3A46     		mov	r2, r7
 26597 00ae D154     		strb	r1, [r2, r3]
3939:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26598              		.loc 1 3939 0
 26599 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 26600 00b4 9A1C     		adds	r2, r3, #2
 26601 00b6 07F5C373 		add	r3, r7, #390
 26602 00ba 0133     		adds	r3, r3, #1
 26603 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26604 00be 3B46     		mov	r3, r7
 26605 00c0 9954     		strb	r1, [r3, r2]
3940:..\src/command_processing.c **** 
3941:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 26606              		.loc 1 3941 0
 26607 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26608 00c6 B849     		ldr	r1, .L1045+8
 26609 00c8 1346     		mov	r3, r2
 26610 00ca 9B00     		lsls	r3, r3, #2
 26611 00cc 1344     		add	r3, r3, r2
 26612 00ce DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 582


 26613 00d0 0B44     		add	r3, r3, r1
 26614 00d2 0633     		adds	r3, r3, #6
 26615 00d4 B3F90030 		ldrsh	r3, [r3]
 26616 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3942:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26617              		.loc 1 3942 0
 26618 00dc B7F88C31 		ldrh	r3, [r7, #396]
 26619 00e0 0533     		adds	r3, r3, #5
 26620 00e2 07F5C372 		add	r2, r7, #390
 26621 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26622 00e8 3A46     		mov	r2, r7
 26623 00ea D154     		strb	r1, [r2, r3]
3943:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26624              		.loc 1 3943 0
 26625 00ec B7F88C31 		ldrh	r3, [r7, #396]
 26626 00f0 1A1D     		adds	r2, r3, #4
 26627 00f2 07F5C373 		add	r3, r7, #390
 26628 00f6 0133     		adds	r3, r3, #1
 26629 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26630 00fa 3B46     		mov	r3, r7
 26631 00fc 9954     		strb	r1, [r3, r2]
3944:..\src/command_processing.c **** 
3945:..\src/command_processing.c ****             c = c + 6;
 26632              		.loc 1 3945 0
 26633 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26634 0102 0633     		adds	r3, r3, #6
 26635 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26636              	.L1029:
3946:..\src/command_processing.c ****         }
3947:..\src/command_processing.c ****        
3948:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 26637              		.loc 1 3948 0
 26638 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26639 010c A44A     		ldr	r2, .L1045
 26640 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26641 0110 1946     		mov	r1, r3
 26642 0112 A44A     		ldr	r2, .L1045+4
 26643 0114 0B46     		mov	r3, r1
 26644 0116 9B00     		lsls	r3, r3, #2
 26645 0118 0B44     		add	r3, r3, r1
 26646 011a 1344     		add	r3, r3, r2
 26647 011c 03F20323 		addw	r3, r3, #515
 26648 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26649 0122 002B     		cmp	r3, #0
 26650 0124 5DD0     		beq	.L1030
3949:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 26651              		.loc 1 3949 0
 26652 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26653 012a 9F49     		ldr	r1, .L1045+8
 26654 012c 1346     		mov	r3, r2
 26655 012e 9B00     		lsls	r3, r3, #2
 26656 0130 1344     		add	r3, r3, r2
 26657 0132 DB00     		lsls	r3, r3, #3
 26658 0134 0B44     		add	r3, r3, r1
 26659 0136 0833     		adds	r3, r3, #8
 26660 0138 B3F90030 		ldrsh	r3, [r3]
 26661 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 583


3950:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26662              		.loc 1 3950 0
 26663 0140 B7F88C31 		ldrh	r3, [r7, #396]
 26664 0144 0133     		adds	r3, r3, #1
 26665 0146 07F5C372 		add	r2, r7, #390
 26666 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26667 014c 3A46     		mov	r2, r7
 26668 014e D154     		strb	r1, [r2, r3]
3951:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26669              		.loc 1 3951 0
 26670 0150 B7F88C21 		ldrh	r2, [r7, #396]
 26671 0154 07F5C373 		add	r3, r7, #390
 26672 0158 0133     		adds	r3, r3, #1
 26673 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26674 015c 3B46     		mov	r3, r7
 26675 015e 9954     		strb	r1, [r3, r2]
3952:..\src/command_processing.c **** 
3953:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 26676              		.loc 1 3953 0
 26677 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26678 0164 9049     		ldr	r1, .L1045+8
 26679 0166 1346     		mov	r3, r2
 26680 0168 9B00     		lsls	r3, r3, #2
 26681 016a 1344     		add	r3, r3, r2
 26682 016c DB00     		lsls	r3, r3, #3
 26683 016e 0B44     		add	r3, r3, r1
 26684 0170 0A33     		adds	r3, r3, #10
 26685 0172 B3F90030 		ldrsh	r3, [r3]
 26686 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3954:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26687              		.loc 1 3954 0
 26688 017a B7F88C31 		ldrh	r3, [r7, #396]
 26689 017e 0333     		adds	r3, r3, #3
 26690 0180 07F5C372 		add	r2, r7, #390
 26691 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26692 0186 3A46     		mov	r2, r7
 26693 0188 D154     		strb	r1, [r2, r3]
3955:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26694              		.loc 1 3955 0
 26695 018a B7F88C31 		ldrh	r3, [r7, #396]
 26696 018e 9A1C     		adds	r2, r3, #2
 26697 0190 07F5C373 		add	r3, r7, #390
 26698 0194 0133     		adds	r3, r3, #1
 26699 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26700 0198 3B46     		mov	r3, r7
 26701 019a 9954     		strb	r1, [r3, r2]
3956:..\src/command_processing.c **** 
3957:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 26702              		.loc 1 3957 0
 26703 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26704 01a0 8149     		ldr	r1, .L1045+8
 26705 01a2 1346     		mov	r3, r2
 26706 01a4 9B00     		lsls	r3, r3, #2
 26707 01a6 1344     		add	r3, r3, r2
 26708 01a8 DB00     		lsls	r3, r3, #3
 26709 01aa 0B44     		add	r3, r3, r1
 26710 01ac 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 584


 26711 01ae B3F90030 		ldrsh	r3, [r3]
 26712 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3958:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26713              		.loc 1 3958 0
 26714 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 26715 01ba 0533     		adds	r3, r3, #5
 26716 01bc 07F5C372 		add	r2, r7, #390
 26717 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26718 01c2 3A46     		mov	r2, r7
 26719 01c4 D154     		strb	r1, [r2, r3]
3959:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26720              		.loc 1 3959 0
 26721 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 26722 01ca 1A1D     		adds	r2, r3, #4
 26723 01cc 07F5C373 		add	r3, r7, #390
 26724 01d0 0133     		adds	r3, r3, #1
 26725 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26726 01d4 3B46     		mov	r3, r7
 26727 01d6 9954     		strb	r1, [r3, r2]
3960:..\src/command_processing.c **** 
3961:..\src/command_processing.c ****             c = c + 6;
 26728              		.loc 1 3961 0
 26729 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26730 01dc 0633     		adds	r3, r3, #6
 26731 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26732              	.L1030:
3962:..\src/command_processing.c ****         }
3963:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 26733              		.loc 1 3963 0
 26734 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26735 01e6 6E4A     		ldr	r2, .L1045
 26736 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26737 01ea 1946     		mov	r1, r3
 26738 01ec 6D4A     		ldr	r2, .L1045+4
 26739 01ee 0B46     		mov	r3, r1
 26740 01f0 9B00     		lsls	r3, r3, #2
 26741 01f2 0B44     		add	r3, r3, r1
 26742 01f4 1344     		add	r3, r3, r2
 26743 01f6 03F50173 		add	r3, r3, #516
 26744 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26745 01fc 002B     		cmp	r3, #0
 26746 01fe 5DD0     		beq	.L1031
3964:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 26747              		.loc 1 3964 0
 26748 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26749 0204 6849     		ldr	r1, .L1045+8
 26750 0206 1346     		mov	r3, r2
 26751 0208 9B00     		lsls	r3, r3, #2
 26752 020a 1344     		add	r3, r3, r2
 26753 020c DB00     		lsls	r3, r3, #3
 26754 020e 0B44     		add	r3, r3, r1
 26755 0210 0E33     		adds	r3, r3, #14
 26756 0212 B3F90030 		ldrsh	r3, [r3]
 26757 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3965:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26758              		.loc 1 3965 0
 26759 021a B7F88C31 		ldrh	r3, [r7, #396]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 585


 26760 021e 0133     		adds	r3, r3, #1
 26761 0220 07F5C372 		add	r2, r7, #390
 26762 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26763 0226 3A46     		mov	r2, r7
 26764 0228 D154     		strb	r1, [r2, r3]
3966:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26765              		.loc 1 3966 0
 26766 022a B7F88C21 		ldrh	r2, [r7, #396]
 26767 022e 07F5C373 		add	r3, r7, #390
 26768 0232 0133     		adds	r3, r3, #1
 26769 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26770 0236 3B46     		mov	r3, r7
 26771 0238 9954     		strb	r1, [r3, r2]
3967:..\src/command_processing.c **** 
3968:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 26772              		.loc 1 3968 0
 26773 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26774 023e 5A49     		ldr	r1, .L1045+8
 26775 0240 1346     		mov	r3, r2
 26776 0242 9B00     		lsls	r3, r3, #2
 26777 0244 1344     		add	r3, r3, r2
 26778 0246 DB00     		lsls	r3, r3, #3
 26779 0248 0B44     		add	r3, r3, r1
 26780 024a 1033     		adds	r3, r3, #16
 26781 024c B3F90030 		ldrsh	r3, [r3]
 26782 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3969:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26783              		.loc 1 3969 0
 26784 0254 B7F88C31 		ldrh	r3, [r7, #396]
 26785 0258 0333     		adds	r3, r3, #3
 26786 025a 07F5C372 		add	r2, r7, #390
 26787 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26788 0260 3A46     		mov	r2, r7
 26789 0262 D154     		strb	r1, [r2, r3]
3970:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26790              		.loc 1 3970 0
 26791 0264 B7F88C31 		ldrh	r3, [r7, #396]
 26792 0268 9A1C     		adds	r2, r3, #2
 26793 026a 07F5C373 		add	r3, r7, #390
 26794 026e 0133     		adds	r3, r3, #1
 26795 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26796 0272 3B46     		mov	r3, r7
 26797 0274 9954     		strb	r1, [r3, r2]
3971:..\src/command_processing.c **** 
3972:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 26798              		.loc 1 3972 0
 26799 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26800 027a 4B49     		ldr	r1, .L1045+8
 26801 027c 1346     		mov	r3, r2
 26802 027e 9B00     		lsls	r3, r3, #2
 26803 0280 1344     		add	r3, r3, r2
 26804 0282 DB00     		lsls	r3, r3, #3
 26805 0284 0B44     		add	r3, r3, r1
 26806 0286 1233     		adds	r3, r3, #18
 26807 0288 B3F90030 		ldrsh	r3, [r3]
 26808 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3973:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 586


 26809              		.loc 1 3973 0
 26810 0290 B7F88C31 		ldrh	r3, [r7, #396]
 26811 0294 0533     		adds	r3, r3, #5
 26812 0296 07F5C372 		add	r2, r7, #390
 26813 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26814 029c 3A46     		mov	r2, r7
 26815 029e D154     		strb	r1, [r2, r3]
3974:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26816              		.loc 1 3974 0
 26817 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 26818 02a4 1A1D     		adds	r2, r3, #4
 26819 02a6 07F5C373 		add	r3, r7, #390
 26820 02aa 0133     		adds	r3, r3, #1
 26821 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26822 02ae 3B46     		mov	r3, r7
 26823 02b0 9954     		strb	r1, [r3, r2]
3975:..\src/command_processing.c **** 
3976:..\src/command_processing.c ****             c = c + 6;
 26824              		.loc 1 3976 0
 26825 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26826 02b6 0633     		adds	r3, r3, #6
 26827 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26828              	.L1031:
3977:..\src/command_processing.c ****         }
3978:..\src/command_processing.c ****         
3979:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 26829              		.loc 1 3979 0
 26830 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26831 02c0 374A     		ldr	r2, .L1045
 26832 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26833 02c4 1946     		mov	r1, r3
 26834 02c6 374A     		ldr	r2, .L1045+4
 26835 02c8 0B46     		mov	r3, r1
 26836 02ca 9B00     		lsls	r3, r3, #2
 26837 02cc 0B44     		add	r3, r3, r1
 26838 02ce 1344     		add	r3, r3, r2
 26839 02d0 03F20523 		addw	r3, r3, #517
 26840 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26841 02d6 002B     		cmp	r3, #0
 26842 02d8 00F0AF80 		beq	.L1032
3980:..\src/command_processing.c ****          aux_float = (float) g_imu[k_imu].quat_value[0];
 26843              		.loc 1 3980 0
 26844 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26845 02e0 3149     		ldr	r1, .L1045+8
 26846 02e2 1346     		mov	r3, r2
 26847 02e4 9B00     		lsls	r3, r3, #2
 26848 02e6 1344     		add	r3, r3, r2
 26849 02e8 DB00     		lsls	r3, r3, #3
 26850 02ea 0B44     		add	r3, r3, r1
 26851 02ec 1433     		adds	r3, r3, #20
 26852 02ee 1B68     		ldr	r3, [r3]	@ float
 26853 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3981:..\src/command_processing.c ****            for(k = 0; k < 4; k++) {
 26854              		.loc 1 3981 0
 26855 02f4 0023     		movs	r3, #0
 26856 02f6 87F88B31 		strb	r3, [r7, #395]
 26857 02fa 13E0     		b	.L1033
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 587


 26858              	.L1034:
3982:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 26859              		.loc 1 3982 0 discriminator 3
 26860 02fc B7F88C31 		ldrh	r3, [r7, #396]
 26861 0300 1A1D     		adds	r2, r3, #4
 26862 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26863 0306 D31A     		subs	r3, r2, r3
 26864 0308 013B     		subs	r3, r3, #1
 26865 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26866 030e 07F5C071 		add	r1, r7, #384
 26867 0312 0A44     		add	r2, r2, r1
 26868 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26869 0316 3A46     		mov	r2, r7
 26870 0318 D154     		strb	r1, [r2, r3]
3981:..\src/command_processing.c ****            for(k = 0; k < 4; k++) {
 26871              		.loc 1 3981 0 discriminator 3
 26872 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26873 031e 0133     		adds	r3, r3, #1
 26874 0320 87F88B31 		strb	r3, [r7, #395]
 26875              	.L1033:
3981:..\src/command_processing.c ****            for(k = 0; k < 4; k++) {
 26876              		.loc 1 3981 0 is_stmt 0 discriminator 1
 26877 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26878 0328 032B     		cmp	r3, #3
 26879 032a E7D9     		bls	.L1034
3983:..\src/command_processing.c ****             }
3984:..\src/command_processing.c **** 
3985:..\src/command_processing.c ****            aux_float = (float) g_imu[k_imu].quat_value[1];
 26880              		.loc 1 3985 0 is_stmt 1
 26881 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26882 0330 1D49     		ldr	r1, .L1045+8
 26883 0332 1346     		mov	r3, r2
 26884 0334 9B00     		lsls	r3, r3, #2
 26885 0336 1344     		add	r3, r3, r2
 26886 0338 DB00     		lsls	r3, r3, #3
 26887 033a 0B44     		add	r3, r3, r1
 26888 033c 1833     		adds	r3, r3, #24
 26889 033e 1B68     		ldr	r3, [r3]	@ float
 26890 0340 C7F88031 		str	r3, [r7, #384]	@ float
3986:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26891              		.loc 1 3986 0
 26892 0344 0023     		movs	r3, #0
 26893 0346 87F88B31 		strb	r3, [r7, #395]
 26894 034a 14E0     		b	.L1035
 26895              	.L1036:
3987:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 26896              		.loc 1 3987 0 discriminator 3
 26897 034c B7F88C31 		ldrh	r3, [r7, #396]
 26898 0350 03F10802 		add	r2, r3, #8
 26899 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26900 0358 D31A     		subs	r3, r2, r3
 26901 035a 013B     		subs	r3, r3, #1
 26902 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26903 0360 07F5C071 		add	r1, r7, #384
 26904 0364 0A44     		add	r2, r2, r1
 26905 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26906 0368 3A46     		mov	r2, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 588


 26907 036a D154     		strb	r1, [r2, r3]
3986:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26908              		.loc 1 3986 0 discriminator 3
 26909 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26910 0370 0133     		adds	r3, r3, #1
 26911 0372 87F88B31 		strb	r3, [r7, #395]
 26912              	.L1035:
3986:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26913              		.loc 1 3986 0 is_stmt 0 discriminator 1
 26914 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26915 037a 032B     		cmp	r3, #3
 26916 037c E6D9     		bls	.L1036
3988:..\src/command_processing.c ****             }
3989:..\src/command_processing.c **** 
3990:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 26917              		.loc 1 3990 0 is_stmt 1
 26918 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26919 0382 0949     		ldr	r1, .L1045+8
 26920 0384 1346     		mov	r3, r2
 26921 0386 9B00     		lsls	r3, r3, #2
 26922 0388 1344     		add	r3, r3, r2
 26923 038a DB00     		lsls	r3, r3, #3
 26924 038c 0B44     		add	r3, r3, r1
 26925 038e 1C33     		adds	r3, r3, #28
 26926 0390 1B68     		ldr	r3, [r3]	@ float
 26927 0392 C7F88031 		str	r3, [r7, #384]	@ float
3991:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26928              		.loc 1 3991 0
 26929 0396 0023     		movs	r3, #0
 26930 0398 87F88B31 		strb	r3, [r7, #395]
 26931 039c 1BE0     		b	.L1037
 26932              	.L1046:
 26933 039e 00BF     		.align	2
 26934              	.L1045:
 26935 03a0 00000000 		.word	IMU_connected
 26936 03a4 00000000 		.word	c_mem
 26937 03a8 00000000 		.word	g_imu
 26938              	.L1038:
3992:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];               
 26939              		.loc 1 3992 0 discriminator 3
 26940 03ac B7F88C31 		ldrh	r3, [r7, #396]
 26941 03b0 03F10C02 		add	r2, r3, #12
 26942 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26943 03b8 D31A     		subs	r3, r2, r3
 26944 03ba 013B     		subs	r3, r3, #1
 26945 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26946 03c0 07F5C071 		add	r1, r7, #384
 26947 03c4 0A44     		add	r2, r2, r1
 26948 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26949 03c8 3A46     		mov	r2, r7
 26950 03ca D154     		strb	r1, [r2, r3]
3991:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26951              		.loc 1 3991 0 discriminator 3
 26952 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26953 03d0 0133     		adds	r3, r3, #1
 26954 03d2 87F88B31 		strb	r3, [r7, #395]
 26955              	.L1037:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 589


3991:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26956              		.loc 1 3991 0 is_stmt 0 discriminator 1
 26957 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26958 03da 032B     		cmp	r3, #3
 26959 03dc E6D9     		bls	.L1038
3993:..\src/command_processing.c ****             }
3994:..\src/command_processing.c **** 
3995:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 26960              		.loc 1 3995 0 is_stmt 1
 26961 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26962 03e2 6749     		ldr	r1, .L1047
 26963 03e4 1346     		mov	r3, r2
 26964 03e6 9B00     		lsls	r3, r3, #2
 26965 03e8 1344     		add	r3, r3, r2
 26966 03ea DB00     		lsls	r3, r3, #3
 26967 03ec 0B44     		add	r3, r3, r1
 26968 03ee 2033     		adds	r3, r3, #32
 26969 03f0 1B68     		ldr	r3, [r3]	@ float
 26970 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3996:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26971              		.loc 1 3996 0
 26972 03f6 0023     		movs	r3, #0
 26973 03f8 87F88B31 		strb	r3, [r7, #395]
 26974 03fc 14E0     		b	.L1039
 26975              	.L1040:
3997:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 26976              		.loc 1 3997 0 discriminator 3
 26977 03fe B7F88C31 		ldrh	r3, [r7, #396]
 26978 0402 03F11002 		add	r2, r3, #16
 26979 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26980 040a D31A     		subs	r3, r2, r3
 26981 040c 013B     		subs	r3, r3, #1
 26982 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26983 0412 07F5C071 		add	r1, r7, #384
 26984 0416 0A44     		add	r2, r2, r1
 26985 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26986 041a 3A46     		mov	r2, r7
 26987 041c D154     		strb	r1, [r2, r3]
3996:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26988              		.loc 1 3996 0 discriminator 3
 26989 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26990 0422 0133     		adds	r3, r3, #1
 26991 0424 87F88B31 		strb	r3, [r7, #395]
 26992              	.L1039:
3996:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26993              		.loc 1 3996 0 is_stmt 0 discriminator 1
 26994 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26995 042c 032B     		cmp	r3, #3
 26996 042e E6D9     		bls	.L1040
3998:..\src/command_processing.c ****             }
3999:..\src/command_processing.c ****             c = c + 16;
 26997              		.loc 1 3999 0 is_stmt 1
 26998 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26999 0434 1033     		adds	r3, r3, #16
 27000 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 27001              	.L1032:
4000:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 590


4001:..\src/command_processing.c ****         
4002:..\src/command_processing.c ****          /*
4003:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
4004:..\src/command_processing.c ****          //   aux_float = (float) g_imu[k_imu].quat_value[0];
4005:..\src/command_processing.c ****             aux_float = (float)k_imu;
4006:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
4007:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
4008:..\src/command_processing.c ****             }
4009:..\src/command_processing.c **** 
4010:..\src/command_processing.c ****            // aux_float = (float) g_imu[k_imu].quat_value[1];
4011:..\src/command_processing.c ****            aux_float = (float)((int16)g_refNew_vibrotactile[1].pwm);
4012:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
4013:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
4014:..\src/command_processing.c ****             }
4015:..\src/command_processing.c **** 
4016:..\src/command_processing.c ****             //aux_float = (float) g_imu[k_imu].quat_value[2];
4017:..\src/command_processing.c ****              aux_float = (float)input_act_sent[1];;
4018:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
4019:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];               
4020:..\src/command_processing.c ****             }
4021:..\src/command_processing.c **** 
4022:..\src/command_processing.c ****             //aux_float = (float) g_imu[k_imu].quat_value[3];
4023:..\src/command_processing.c ****              aux_float = (float) 78;
4024:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
4025:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
4026:..\src/command_processing.c ****             }
4027:..\src/command_processing.c ****             c = c + 16;
4028:..\src/command_processing.c ****         }*/
4029:..\src/command_processing.c ****         
4030:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 27002              		.loc 1 4030 0
 27003 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 27004 043e 514A     		ldr	r2, .L1047+4
 27005 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 27006 0442 1946     		mov	r1, r3
 27007 0444 504A     		ldr	r2, .L1047+8
 27008 0446 0B46     		mov	r3, r1
 27009 0448 9B00     		lsls	r3, r3, #2
 27010 044a 0B44     		add	r3, r3, r1
 27011 044c 1344     		add	r3, r3, r2
 27012 044e 03F20623 		addw	r3, r3, #518
 27013 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27014 0454 002B     		cmp	r3, #0
 27015 0456 21D0     		beq	.L1041
4031:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 27016              		.loc 1 4031 0
 27017 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 27018 045c 4849     		ldr	r1, .L1047
 27019 045e 1346     		mov	r3, r2
 27020 0460 9B00     		lsls	r3, r3, #2
 27021 0462 1344     		add	r3, r3, r2
 27022 0464 DB00     		lsls	r3, r3, #3
 27023 0466 0B44     		add	r3, r3, r1
 27024 0468 2433     		adds	r3, r3, #36
 27025 046a B3F90030 		ldrsh	r3, [r3]
 27026 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
4032:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 591


 27027              		.loc 1 4032 0
 27028 0472 B7F88C31 		ldrh	r3, [r7, #396]
 27029 0476 0133     		adds	r3, r3, #1
 27030 0478 07F5C372 		add	r2, r7, #390
 27031 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 27032 047e 3A46     		mov	r2, r7
 27033 0480 D154     		strb	r1, [r2, r3]
4033:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 27034              		.loc 1 4033 0
 27035 0482 B7F88C21 		ldrh	r2, [r7, #396]
 27036 0486 07F5C373 		add	r3, r7, #390
 27037 048a 0133     		adds	r3, r3, #1
 27038 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 27039 048e 3B46     		mov	r3, r7
 27040 0490 9954     		strb	r1, [r3, r2]
4034:..\src/command_processing.c ****             c = c + 2;
 27041              		.loc 1 4034 0
 27042 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 27043 0496 0233     		adds	r3, r3, #2
 27044 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 27045              	.L1041:
4035:..\src/command_processing.c ****         }
4036:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 27046              		.loc 1 4036 0
 27047 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 27048 04a0 384A     		ldr	r2, .L1047+4
 27049 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 27050 04a4 1A46     		mov	r2, r3
 27051 04a6 394B     		ldr	r3, .L1047+12
 27052 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 27053 04ac 013B     		subs	r3, r3, #1
 27054 04ae 3A46     		mov	r2, r7
 27055 04b0 3A21     		movs	r1, #58
 27056 04b2 D154     		strb	r1, [r2, r3]
4037:..\src/command_processing.c ****         c = 1;
 27057              		.loc 1 4037 0
 27058 04b4 0123     		movs	r3, #1
 27059 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
4038:..\src/command_processing.c ****                
4039:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 27060              		.loc 1 4039 0
 27061 04ba 0023     		movs	r3, #0
 27062 04bc 87F88B31 		strb	r3, [r7, #395]
 27063 04c0 10E0     		b	.L1042
 27064              	.L1043:
4040:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 27065              		.loc 1 4040 0 discriminator 3
 27066 04c2 B7F88821 		ldrh	r2, [r7, #392]
 27067 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 27068 04ca 1344     		add	r3, r3, r2
 27069 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 27070 04d0 3946     		mov	r1, r7
 27071 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 27072 04d4 07F12002 		add	r2, r7, #32
 27073 04d8 D154     		strb	r1, [r2, r3]
4039:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 27074              		.loc 1 4039 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 592


 27075 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 27076 04de 0133     		adds	r3, r3, #1
 27077 04e0 87F88B31 		strb	r3, [r7, #395]
 27078              	.L1042:
4039:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 27079              		.loc 1 4039 0 is_stmt 0 discriminator 1
 27080 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 27081 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 27082 04ec 2549     		ldr	r1, .L1047+4
 27083 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 27084 04f0 1946     		mov	r1, r3
 27085 04f2 264B     		ldr	r3, .L1047+12
 27086 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 27087 04f8 9A42     		cmp	r2, r3
 27088 04fa E2DB     		blt	.L1043
4041:..\src/command_processing.c ****         }
4042:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 27089              		.loc 1 4042 0 is_stmt 1 discriminator 2
 27090 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 27091 0500 204A     		ldr	r2, .L1047+4
 27092 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 27093 0504 1A46     		mov	r2, r3
 27094 0506 214B     		ldr	r3, .L1047+12
 27095 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 27096 050c 9AB2     		uxth	r2, r3
 27097 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 27098 0512 1344     		add	r3, r3, r2
 27099 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
4043:..\src/command_processing.c ****         
4044:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 27100              		.loc 1 4044 0 discriminator 2
 27101 0518 3B46     		mov	r3, r7
 27102 051a 2022     		movs	r2, #32
 27103 051c 0021     		movs	r1, #0
 27104 051e 1846     		mov	r0, r3
 27105 0520 FFF7FEFF 		bl	memset
3928:..\src/command_processing.c ****     {	
 27106              		.loc 1 3928 0 discriminator 2
 27107 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 27108 0528 0133     		adds	r3, r3, #1
 27109 052a 87F88F31 		strb	r3, [r7, #399]
 27110              	.L1028:
3928:..\src/command_processing.c ****     {	
 27111              		.loc 1 3928 0 is_stmt 0 discriminator 1
 27112 052e 184B     		ldr	r3, .L1047+16
 27113 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27114 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 27115 0536 9A42     		cmp	r2, r3
 27116 0538 FFF476AD 		bcc	.L1044
4045:..\src/command_processing.c ****         
4046:..\src/command_processing.c ****     }
4047:..\src/command_processing.c **** 
4048:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4049:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 27117              		.loc 1 4049 0 is_stmt 1
 27118 053c 154B     		ldr	r3, .L1047+20
 27119 053e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 593


 27120 0540 5C1E     		subs	r4, r3, #1
 27121 0542 144B     		ldr	r3, .L1047+20
 27122 0544 1B68     		ldr	r3, [r3]
 27123 0546 DBB2     		uxtb	r3, r3
 27124 0548 013B     		subs	r3, r3, #1
 27125 054a DAB2     		uxtb	r2, r3
 27126 054c 07F12003 		add	r3, r7, #32
 27127 0550 1146     		mov	r1, r2
 27128 0552 1846     		mov	r0, r3
 27129 0554 FFF7FEFF 		bl	LCRChecksum
 27130 0558 0346     		mov	r3, r0
 27131 055a 1A46     		mov	r2, r3
 27132 055c 07F12003 		add	r3, r7, #32
 27133 0560 1A55     		strb	r2, [r3, r4]
4050:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 27134              		.loc 1 4050 0
 27135 0562 0C4B     		ldr	r3, .L1047+20
 27136 0564 1B68     		ldr	r3, [r3]
 27137 0566 9AB2     		uxth	r2, r3
 27138 0568 07F12003 		add	r3, r7, #32
 27139 056c 1146     		mov	r1, r2
 27140 056e 1846     		mov	r0, r3
 27141 0570 FFF7FEFF 		bl	commWrite
4051:..\src/command_processing.c **** }
 27142              		.loc 1 4051 0
 27143 0574 00BF     		nop
 27144 0576 07F5CA77 		add	r7, r7, #404
 27145              		.cfi_def_cfa_offset 12
 27146 057a BD46     		mov	sp, r7
 27147              		.cfi_def_cfa_register 13
 27148              		@ sp needed
 27149 057c 90BD     		pop	{r4, r7, pc}
 27150              	.L1048:
 27151 057e 00BF     		.align	2
 27152              	.L1047:
 27153 0580 00000000 		.word	g_imu
 27154 0584 00000000 		.word	IMU_connected
 27155 0588 00000000 		.word	c_mem
 27156 058c 00000000 		.word	single_imu_size
 27157 0590 00000000 		.word	N_IMU_Connected
 27158 0594 00000000 		.word	imus_data_size
 27159              		.cfi_endproc
 27160              	.LFE110:
 27161              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 27162              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 27163              		.align	2
 27164              		.global	cmd_get_encoder_map
 27165              		.thumb
 27166              		.thumb_func
 27167              		.type	cmd_get_encoder_map, %function
 27168              	cmd_get_encoder_map:
 27169              	.LFB111:
4052:..\src/command_processing.c **** 
4053:..\src/command_processing.c **** void cmd_get_encoder_map(){
 27170              		.loc 1 4053 0
 27171              		.cfi_startproc
 27172              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 594


 27173              		@ frame_needed = 1, uses_anonymous_args = 0
 27174 0000 90B5     		push	{r4, r7, lr}
 27175              		.cfi_def_cfa_offset 12
 27176              		.cfi_offset 4, -12
 27177              		.cfi_offset 7, -8
 27178              		.cfi_offset 14, -4
 27179 0002 85B0     		sub	sp, sp, #20
 27180              		.cfi_def_cfa_offset 32
 27181 0004 00AF     		add	r7, sp, #0
 27182              		.cfi_def_cfa_register 7
4054:..\src/command_processing.c ****     //Retrieve Encoder map
4055:..\src/command_processing.c ****     
4056:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
4057:..\src/command_processing.c ****     uint8 CYDATA i, j;
4058:..\src/command_processing.c ****     
4059:..\src/command_processing.c ****     // Header        
4060:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 27183              		.loc 1 4060 0
 27184 0006 A323     		movs	r3, #163
 27185 0008 3B70     		strb	r3, [r7]
4061:..\src/command_processing.c ****     
4062:..\src/command_processing.c ****     // Fill payload
4063:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 27186              		.loc 1 4063 0
 27187 000a 0223     		movs	r3, #2
 27188 000c 7B70     		strb	r3, [r7, #1]
4064:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 27189              		.loc 1 4064 0
 27190 000e 0523     		movs	r3, #5
 27191 0010 BB70     		strb	r3, [r7, #2]
4065:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 27192              		.loc 1 4065 0
 27193 0012 0023     		movs	r3, #0
 27194 0014 FB73     		strb	r3, [r7, #15]
 27195 0016 23E0     		b	.L1050
 27196              	.L1053:
4066:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 27197              		.loc 1 4066 0
 27198 0018 0023     		movs	r3, #0
 27199 001a BB73     		strb	r3, [r7, #14]
 27200 001c 1AE0     		b	.L1051
 27201              	.L1052:
4067:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 27202              		.loc 1 4067 0 discriminator 3
 27203 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 27204 0020 1346     		mov	r3, r2
 27205 0022 9B00     		lsls	r3, r3, #2
 27206 0024 1344     		add	r3, r3, r2
 27207 0026 DA1C     		adds	r2, r3, #3
 27208 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 27209 002a D118     		adds	r1, r2, r3
 27210 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 27211 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 27212 0030 154C     		ldr	r4, .L1054
 27213 0032 1346     		mov	r3, r2
 27214 0034 5B00     		lsls	r3, r3, #1
 27215 0036 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 595


 27216 0038 1B01     		lsls	r3, r3, #4
 27217 003a 2344     		add	r3, r3, r4
 27218 003c 0344     		add	r3, r3, r0
 27219 003e 03F5C873 		add	r3, r3, #400
 27220 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 27221 0044 07F11003 		add	r3, r7, #16
 27222 0048 0B44     		add	r3, r3, r1
 27223 004a 03F8102C 		strb	r2, [r3, #-16]
4066:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 27224              		.loc 1 4066 0 discriminator 3
 27225 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 27226 0050 0133     		adds	r3, r3, #1
 27227 0052 BB73     		strb	r3, [r7, #14]
 27228              	.L1051:
4066:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 27229              		.loc 1 4066 0 is_stmt 0 discriminator 1
 27230 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 27231 0056 042B     		cmp	r3, #4
 27232 0058 E1D9     		bls	.L1052
4065:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 27233              		.loc 1 4065 0 is_stmt 1 discriminator 2
 27234 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 27235 005c 0133     		adds	r3, r3, #1
 27236 005e FB73     		strb	r3, [r7, #15]
 27237              	.L1050:
4065:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 27238              		.loc 1 4065 0 is_stmt 0 discriminator 1
 27239 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 27240 0062 012B     		cmp	r3, #1
 27241 0064 D8D9     		bls	.L1053
4068:..\src/command_processing.c ****         }
4069:..\src/command_processing.c ****     }
4070:..\src/command_processing.c ****     
4071:..\src/command_processing.c ****     // Calculate checksum
4072:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 27242              		.loc 1 4072 0 is_stmt 1
 27243 0066 3B46     		mov	r3, r7
 27244 0068 0D21     		movs	r1, #13
 27245 006a 1846     		mov	r0, r3
 27246 006c FFF7FEFF 		bl	LCRChecksum
 27247 0070 0346     		mov	r3, r0
 27248 0072 7B73     		strb	r3, [r7, #13]
4073:..\src/command_processing.c ****     
4074:..\src/command_processing.c ****     // Send package to UART
4075:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 27249              		.loc 1 4075 0
 27250 0074 3B46     		mov	r3, r7
 27251 0076 0E21     		movs	r1, #14
 27252 0078 1846     		mov	r0, r3
 27253 007a FFF7FEFF 		bl	commWrite
4076:..\src/command_processing.c **** }
 27254              		.loc 1 4076 0
 27255 007e 00BF     		nop
 27256 0080 1437     		adds	r7, r7, #20
 27257              		.cfi_def_cfa_offset 12
 27258 0082 BD46     		mov	sp, r7
 27259              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 596


 27260              		@ sp needed
 27261 0084 90BD     		pop	{r4, r7, pc}
 27262              	.L1055:
 27263 0086 00BF     		.align	2
 27264              	.L1054:
 27265 0088 00000000 		.word	c_mem
 27266              		.cfi_endproc
 27267              	.LFE111:
 27268              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 27269              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 27270              		.align	2
 27271              		.global	cmd_get_encoder_raw
 27272              		.thumb
 27273              		.thumb_func
 27274              		.type	cmd_get_encoder_raw, %function
 27275              	cmd_get_encoder_raw:
 27276              	.LFB112:
4077:..\src/command_processing.c **** 
4078:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 27277              		.loc 1 4078 0
 27278              		.cfi_startproc
 27279              		@ args = 0, pretend = 0, frame = 32
 27280              		@ frame_needed = 1, uses_anonymous_args = 0
 27281 0000 90B5     		push	{r4, r7, lr}
 27282              		.cfi_def_cfa_offset 12
 27283              		.cfi_offset 4, -12
 27284              		.cfi_offset 7, -8
 27285              		.cfi_offset 14, -4
 27286 0002 89B0     		sub	sp, sp, #36
 27287              		.cfi_def_cfa_offset 48
 27288 0004 00AF     		add	r7, sp, #0
 27289              		.cfi_def_cfa_register 7
4079:..\src/command_processing.c ****     //Retrieve all Encoders raw values
4080:..\src/command_processing.c ****     
4081:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
4082:..\src/command_processing.c ****     uint8 i, j, idx;
4083:..\src/command_processing.c ****     uint16 aux_uint16;
4084:..\src/command_processing.c ****     
4085:..\src/command_processing.c ****     //Header package 
4086:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 27290              		.loc 1 4086 0
 27291 0006 A423     		movs	r3, #164
 27292 0008 3B71     		strb	r3, [r7, #4]
4087:..\src/command_processing.c ****  
4088:..\src/command_processing.c ****     // Fill payload
4089:..\src/command_processing.c ****     idx = 0;
 27293              		.loc 1 4089 0
 27294 000a 0023     		movs	r3, #0
 27295 000c 7B77     		strb	r3, [r7, #29]
4090:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 27296              		.loc 1 4090 0
 27297 000e 0023     		movs	r3, #0
 27298 0010 FB77     		strb	r3, [r7, #31]
 27299 0012 3FE0     		b	.L1057
 27300              	.L1061:
4091:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 27301              		.loc 1 4091 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 597


 27302 0014 0023     		movs	r3, #0
 27303 0016 BB77     		strb	r3, [r7, #30]
 27304 0018 33E0     		b	.L1058
 27305              	.L1060:
4092:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 27306              		.loc 1 4092 0
 27307 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 27308 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 27309 001e 3048     		ldr	r0, .L1062
 27310 0020 1346     		mov	r3, r2
 27311 0022 5B00     		lsls	r3, r3, #1
 27312 0024 1344     		add	r3, r3, r2
 27313 0026 1B01     		lsls	r3, r3, #4
 27314 0028 0344     		add	r3, r3, r0
 27315 002a 0B44     		add	r3, r3, r1
 27316 002c 03F5C873 		add	r3, r3, #400
 27317 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27318 0032 012B     		cmp	r3, #1
 27319 0034 22D1     		bne	.L1059
4093:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 27320              		.loc 1 4093 0
 27321 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 27322 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 27323 003a 2A48     		ldr	r0, .L1062+4
 27324 003c 1346     		mov	r3, r2
 27325 003e 9B00     		lsls	r3, r3, #2
 27326 0040 1344     		add	r3, r3, r2
 27327 0042 0B44     		add	r3, r3, r1
 27328 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 27329 0048 7B80     		strh	r3, [r7, #2]	@ movhi
4094:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 27330              		.loc 1 4094 0
 27331 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 27332 004c 5B00     		lsls	r3, r3, #1
 27333 004e 0233     		adds	r3, r3, #2
 27334 0050 BA1C     		adds	r2, r7, #2
 27335 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27336 0054 07F12001 		add	r1, r7, #32
 27337 0058 0B44     		add	r3, r3, r1
 27338 005a 03F81C2C 		strb	r2, [r3, #-28]
4095:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 27339              		.loc 1 4095 0
 27340 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 27341 0060 5B00     		lsls	r3, r3, #1
 27342 0062 5A1C     		adds	r2, r3, #1
 27343 0064 BB1C     		adds	r3, r7, #2
 27344 0066 0133     		adds	r3, r3, #1
 27345 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 27346 006a 07F12003 		add	r3, r7, #32
 27347 006e 1344     		add	r3, r3, r2
 27348 0070 0A46     		mov	r2, r1
 27349 0072 03F81C2C 		strb	r2, [r3, #-28]
4096:..\src/command_processing.c ****                 idx++;
 27350              		.loc 1 4096 0
 27351 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 27352 0078 0133     		adds	r3, r3, #1
 27353 007a 7B77     		strb	r3, [r7, #29]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 598


 27354              	.L1059:
4091:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 27355              		.loc 1 4091 0 discriminator 2
 27356 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27357 007e 0133     		adds	r3, r3, #1
 27358 0080 BB77     		strb	r3, [r7, #30]
 27359              	.L1058:
4091:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 27360              		.loc 1 4091 0 is_stmt 0 discriminator 1
 27361 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27362 0084 184A     		ldr	r2, .L1062+8
 27363 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 27364 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 27365 008a 9A42     		cmp	r2, r3
 27366 008c C5D3     		bcc	.L1060
4090:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 27367              		.loc 1 4090 0 is_stmt 1 discriminator 2
 27368 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27369 0090 0133     		adds	r3, r3, #1
 27370 0092 FB77     		strb	r3, [r7, #31]
 27371              	.L1057:
4090:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 27372              		.loc 1 4090 0 is_stmt 0 discriminator 1
 27373 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27374 0096 012B     		cmp	r3, #1
 27375 0098 BCD9     		bls	.L1061
4097:..\src/command_processing.c ****             }
4098:..\src/command_processing.c ****         }
4099:..\src/command_processing.c ****     }
4100:..\src/command_processing.c **** 
4101:..\src/command_processing.c ****     // Calculate checksum
4102:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 27376              		.loc 1 4102 0 is_stmt 1
 27377 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 27378 009c 5B00     		lsls	r3, r3, #1
 27379 009e 5C1C     		adds	r4, r3, #1
 27380 00a0 7B7F     		ldrb	r3, [r7, #29]
 27381 00a2 5B00     		lsls	r3, r3, #1
 27382 00a4 DBB2     		uxtb	r3, r3
 27383 00a6 0133     		adds	r3, r3, #1
 27384 00a8 DAB2     		uxtb	r2, r3
 27385 00aa 3B1D     		adds	r3, r7, #4
 27386 00ac 1146     		mov	r1, r2
 27387 00ae 1846     		mov	r0, r3
 27388 00b0 FFF7FEFF 		bl	LCRChecksum
 27389 00b4 0346     		mov	r3, r0
 27390 00b6 1A46     		mov	r2, r3
 27391 00b8 07F12003 		add	r3, r7, #32
 27392 00bc 2344     		add	r3, r3, r4
 27393 00be 03F81C2C 		strb	r2, [r3, #-28]
4103:..\src/command_processing.c ****     
4104:..\src/command_processing.c ****     // Send package to UART
4105:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 27394              		.loc 1 4105 0
 27395 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 27396 00c4 0133     		adds	r3, r3, #1
 27397 00c6 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 599


 27398 00c8 5B00     		lsls	r3, r3, #1
 27399 00ca 9AB2     		uxth	r2, r3
 27400 00cc 3B1D     		adds	r3, r7, #4
 27401 00ce 1146     		mov	r1, r2
 27402 00d0 1846     		mov	r0, r3
 27403 00d2 FFF7FEFF 		bl	commWrite
4106:..\src/command_processing.c **** }
 27404              		.loc 1 4106 0
 27405 00d6 00BF     		nop
 27406 00d8 2437     		adds	r7, r7, #36
 27407              		.cfi_def_cfa_offset 12
 27408 00da BD46     		mov	sp, r7
 27409              		.cfi_def_cfa_register 13
 27410              		@ sp needed
 27411 00dc 90BD     		pop	{r4, r7, pc}
 27412              	.L1063:
 27413 00de 00BF     		.align	2
 27414              	.L1062:
 27415 00e0 00000000 		.word	c_mem
 27416 00e4 00000000 		.word	Encoder_Value
 27417 00e8 00000000 		.word	N_Encoder_Line_Connected
 27418              		.cfi_endproc
 27419              	.LFE112:
 27420              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 27421              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 27422              		.align	2
 27423              		.global	cmd_get_ADC_map
 27424              		.thumb
 27425              		.thumb_func
 27426              		.type	cmd_get_ADC_map, %function
 27427              	cmd_get_ADC_map:
 27428              	.LFB113:
4107:..\src/command_processing.c **** 
4108:..\src/command_processing.c **** void cmd_get_ADC_map(){
 27429              		.loc 1 4108 0
 27430              		.cfi_startproc
 27431              		@ args = 0, pretend = 0, frame = 16
 27432              		@ frame_needed = 1, uses_anonymous_args = 0
 27433 0000 80B5     		push	{r7, lr}
 27434              		.cfi_def_cfa_offset 8
 27435              		.cfi_offset 7, -8
 27436              		.cfi_offset 14, -4
 27437 0002 84B0     		sub	sp, sp, #16
 27438              		.cfi_def_cfa_offset 24
 27439 0004 00AF     		add	r7, sp, #0
 27440              		.cfi_def_cfa_register 7
4109:..\src/command_processing.c ****     //Retrieve Encoder map
4110:..\src/command_processing.c ****     
4111:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
4112:..\src/command_processing.c ****     uint8 CYDATA i;
4113:..\src/command_processing.c ****     
4114:..\src/command_processing.c ****     // Header        
4115:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 27441              		.loc 1 4115 0
 27442 0006 A523     		movs	r3, #165
 27443 0008 3B70     		strb	r3, [r7]
4116:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 600


4117:..\src/command_processing.c ****     // Fill payload
4118:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 27444              		.loc 1 4118 0
 27445 000a 0C23     		movs	r3, #12
 27446 000c 7B70     		strb	r3, [r7, #1]
4119:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 27447              		.loc 1 4119 0
 27448 000e 0023     		movs	r3, #0
 27449 0010 FB73     		strb	r3, [r7, #15]
 27450 0012 0EE0     		b	.L1065
 27451              	.L1066:
4120:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 27452              		.loc 1 4120 0 discriminator 3
 27453 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 27454 0016 0233     		adds	r3, r3, #2
 27455 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 27456 001a 0F49     		ldr	r1, .L1067
 27457 001c 0A44     		add	r2, r2, r1
 27458 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 27459 0022 07F11001 		add	r1, r7, #16
 27460 0026 0B44     		add	r3, r3, r1
 27461 0028 03F8102C 		strb	r2, [r3, #-16]
4119:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 27462              		.loc 1 4119 0 discriminator 3
 27463 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 27464 002e 0133     		adds	r3, r3, #1
 27465 0030 FB73     		strb	r3, [r7, #15]
 27466              	.L1065:
4119:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 27467              		.loc 1 4119 0 is_stmt 0 discriminator 1
 27468 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 27469 0034 0B2B     		cmp	r3, #11
 27470 0036 EDD9     		bls	.L1066
4121:..\src/command_processing.c ****     }
4122:..\src/command_processing.c ****     
4123:..\src/command_processing.c ****     // Calculate checksum
4124:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 27471              		.loc 1 4124 0 is_stmt 1
 27472 0038 3B46     		mov	r3, r7
 27473 003a 0E21     		movs	r1, #14
 27474 003c 1846     		mov	r0, r3
 27475 003e FFF7FEFF 		bl	LCRChecksum
 27476 0042 0346     		mov	r3, r0
 27477 0044 BB73     		strb	r3, [r7, #14]
4125:..\src/command_processing.c ****     
4126:..\src/command_processing.c ****     // Send package to UART
4127:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 27478              		.loc 1 4127 0
 27479 0046 3B46     		mov	r3, r7
 27480 0048 0F21     		movs	r1, #15
 27481 004a 1846     		mov	r0, r3
 27482 004c FFF7FEFF 		bl	commWrite
4128:..\src/command_processing.c ****     
4129:..\src/command_processing.c **** }
 27483              		.loc 1 4129 0
 27484 0050 00BF     		nop
 27485 0052 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 601


 27486              		.cfi_def_cfa_offset 8
 27487 0054 BD46     		mov	sp, r7
 27488              		.cfi_def_cfa_register 13
 27489              		@ sp needed
 27490 0056 80BD     		pop	{r7, pc}
 27491              	.L1068:
 27492              		.align	2
 27493              	.L1067:
 27494 0058 00000000 		.word	c_mem
 27495              		.cfi_endproc
 27496              	.LFE113:
 27497              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 27498              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 27499              		.align	2
 27500              		.global	cmd_get_ADC_raw
 27501              		.thumb
 27502              		.thumb_func
 27503              		.type	cmd_get_ADC_raw, %function
 27504              	cmd_get_ADC_raw:
 27505              	.LFB114:
4130:..\src/command_processing.c **** 
4131:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 27506              		.loc 1 4131 0
 27507              		.cfi_startproc
 27508              		@ args = 0, pretend = 0, frame = 32
 27509              		@ frame_needed = 1, uses_anonymous_args = 0
 27510 0000 90B5     		push	{r4, r7, lr}
 27511              		.cfi_def_cfa_offset 12
 27512              		.cfi_offset 4, -12
 27513              		.cfi_offset 7, -8
 27514              		.cfi_offset 14, -4
 27515 0002 89B0     		sub	sp, sp, #36
 27516              		.cfi_def_cfa_offset 48
 27517 0004 00AF     		add	r7, sp, #0
 27518              		.cfi_def_cfa_register 7
4132:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
4133:..\src/command_processing.c ****     
4134:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
4135:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 27519              		.loc 1 4135 0
 27520 0006 0023     		movs	r3, #0
 27521 0008 BB77     		strb	r3, [r7, #30]
4136:..\src/command_processing.c ****     int16 aux_int16;
4137:..\src/command_processing.c ****     
4138:..\src/command_processing.c ****     // Header        
4139:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 27522              		.loc 1 4139 0
 27523 000a A623     		movs	r3, #166
 27524 000c 3B71     		strb	r3, [r7, #4]
4140:..\src/command_processing.c ****     
4141:..\src/command_processing.c ****     // Fill payload
4142:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 27525              		.loc 1 4142 0
 27526 000e 0023     		movs	r3, #0
 27527 0010 FB77     		strb	r3, [r7, #31]
 27528 0012 27E0     		b	.L1070
 27529              	.L1072:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 602


4143:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27530              		.loc 1 4143 0
 27531 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27532 0016 274A     		ldr	r2, .L1073
 27533 0018 1344     		add	r3, r3, r2
 27534 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 27535 001e 012B     		cmp	r3, #1
 27536 0020 1DD1     		bne	.L1071
4144:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 27537              		.loc 1 4144 0
 27538 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27539 0024 244A     		ldr	r2, .L1073+4
 27540 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 27541 002a 7B80     		strh	r3, [r7, #2]	@ movhi
4145:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 27542              		.loc 1 4145 0
 27543 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27544 002e 5B00     		lsls	r3, r3, #1
 27545 0030 0233     		adds	r3, r3, #2
 27546 0032 BA1C     		adds	r2, r7, #2
 27547 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27548 0036 07F12001 		add	r1, r7, #32
 27549 003a 0B44     		add	r3, r3, r1
 27550 003c 03F81C2C 		strb	r2, [r3, #-28]
4146:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 27551              		.loc 1 4146 0
 27552 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27553 0042 5B00     		lsls	r3, r3, #1
 27554 0044 5A1C     		adds	r2, r3, #1
 27555 0046 BB1C     		adds	r3, r7, #2
 27556 0048 0133     		adds	r3, r3, #1
 27557 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 27558 004c 07F12003 		add	r3, r7, #32
 27559 0050 1344     		add	r3, r3, r2
 27560 0052 0A46     		mov	r2, r1
 27561 0054 03F81C2C 		strb	r2, [r3, #-28]
4147:..\src/command_processing.c ****             idx++;
 27562              		.loc 1 4147 0
 27563 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27564 005a 0133     		adds	r3, r3, #1
 27565 005c BB77     		strb	r3, [r7, #30]
 27566              	.L1071:
4142:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27567              		.loc 1 4142 0 discriminator 2
 27568 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27569 0060 0133     		adds	r3, r3, #1
 27570 0062 FB77     		strb	r3, [r7, #31]
 27571              	.L1070:
4142:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27572              		.loc 1 4142 0 is_stmt 0 discriminator 1
 27573 0064 154B     		ldr	r3, .L1073+8
 27574 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27575 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 27576 006a 9A42     		cmp	r2, r3
 27577 006c D2D3     		bcc	.L1072
4148:..\src/command_processing.c ****         }
4149:..\src/command_processing.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 603


4150:..\src/command_processing.c **** 
4151:..\src/command_processing.c ****     // Calculate checksum
4152:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 27578              		.loc 1 4152 0 is_stmt 1
 27579 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27580 0070 5B00     		lsls	r3, r3, #1
 27581 0072 5C1C     		adds	r4, r3, #1
 27582 0074 BB7F     		ldrb	r3, [r7, #30]
 27583 0076 5B00     		lsls	r3, r3, #1
 27584 0078 DBB2     		uxtb	r3, r3
 27585 007a 0133     		adds	r3, r3, #1
 27586 007c DAB2     		uxtb	r2, r3
 27587 007e 3B1D     		adds	r3, r7, #4
 27588 0080 1146     		mov	r1, r2
 27589 0082 1846     		mov	r0, r3
 27590 0084 FFF7FEFF 		bl	LCRChecksum
 27591 0088 0346     		mov	r3, r0
 27592 008a 1A46     		mov	r2, r3
 27593 008c 07F12003 		add	r3, r7, #32
 27594 0090 2344     		add	r3, r3, r4
 27595 0092 03F81C2C 		strb	r2, [r3, #-28]
4153:..\src/command_processing.c ****     
4154:..\src/command_processing.c ****     // Send package to UART
4155:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 27596              		.loc 1 4155 0
 27597 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27598 0098 0133     		adds	r3, r3, #1
 27599 009a 9BB2     		uxth	r3, r3
 27600 009c 5B00     		lsls	r3, r3, #1
 27601 009e 9AB2     		uxth	r2, r3
 27602 00a0 3B1D     		adds	r3, r7, #4
 27603 00a2 1146     		mov	r1, r2
 27604 00a4 1846     		mov	r0, r3
 27605 00a6 FFF7FEFF 		bl	commWrite
4156:..\src/command_processing.c **** }
 27606              		.loc 1 4156 0
 27607 00aa 00BF     		nop
 27608 00ac 2437     		adds	r7, r7, #36
 27609              		.cfi_def_cfa_offset 12
 27610 00ae BD46     		mov	sp, r7
 27611              		.cfi_def_cfa_register 13
 27612              		@ sp needed
 27613 00b0 90BD     		pop	{r4, r7, pc}
 27614              	.L1074:
 27615 00b2 00BF     		.align	2
 27616              	.L1073:
 27617 00b4 00000000 		.word	c_mem
 27618 00b8 00000000 		.word	ADC_buf
 27619 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 27620              		.cfi_endproc
 27621              	.LFE114:
 27622              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 27623              		.section	.rodata
 27624 21b7 00       		.align	2
 27625              	.LC321:
 27626 21b8 00       		.ascii	"\000"
 27627              		.section	.text.cmd_get_SD_file,"ax",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 604


 27628              		.align	2
 27629              		.global	cmd_get_SD_file
 27630              		.thumb
 27631              		.thumb_func
 27632              		.type	cmd_get_SD_file, %function
 27633              	cmd_get_SD_file:
 27634              	.LFB115:
4157:..\src/command_processing.c **** 
4158:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 27635              		.loc 1 4158 0
 27636              		.cfi_startproc
 27637              		@ args = 0, pretend = 0, frame = 20064
 27638              		@ frame_needed = 1, uses_anonymous_args = 0
 27639 0000 80B5     		push	{r7, lr}
 27640              		.cfi_def_cfa_offset 8
 27641              		.cfi_offset 7, -8
 27642              		.cfi_offset 14, -4
 27643 0002 ADF59C4D 		sub	sp, sp, #19968
 27644              		.cfi_def_cfa_offset 19976
 27645 0006 98B0     		sub	sp, sp, #96
 27646              		.cfi_def_cfa_offset 20072
 27647 0008 00AF     		add	r7, sp, #0
 27648              		.cfi_def_cfa_register 7
 27649 000a 0246     		mov	r2, r0
 27650 000c 07F16003 		add	r3, r7, #96
 27651 0010 5A3B     		subs	r3, r3, #90
 27652 0012 1A80     		strh	r2, [r3]	@ movhi
4159:..\src/command_processing.c ****     
4160:..\src/command_processing.c ****     uint8 i = 0;
 27653              		.loc 1 4160 0
 27654 0014 0023     		movs	r3, #0
 27655 0016 07F59C42 		add	r2, r7, #19968
 27656 001a 02F15F02 		add	r2, r2, #95
 27657 001e 1370     		strb	r3, [r2]
4161:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 27658              		.loc 1 4161 0
 27659 0020 0023     		movs	r3, #0
 27660 0022 07F59C42 		add	r2, r7, #19968
 27661 0026 02F12C02 		add	r2, r2, #44
 27662 002a 1360     		str	r3, [r2]
 27663 002c 07F59C43 		add	r3, r7, #19968
 27664 0030 03F13003 		add	r3, r3, #48
 27665 0034 2E22     		movs	r2, #46
 27666 0036 0021     		movs	r1, #0
 27667 0038 1846     		mov	r0, r3
 27668 003a FFF7FEFF 		bl	memset
4162:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 27669              		.loc 1 4162 0
 27670 003e 07F16003 		add	r3, r7, #96
 27671 0042 543B     		subs	r3, r3, #84
 27672 0044 0022     		movs	r2, #0
 27673 0046 1A60     		str	r2, [r3]
 27674 0048 0433     		adds	r3, r3, #4
 27675 004a 44F61C62 		movw	r2, #19996
 27676 004e 0021     		movs	r1, #0
 27677 0050 1846     		mov	r0, r3
 27678 0052 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 605


4163:..\src/command_processing.c ****     strcpy(filename, "");
 27679              		.loc 1 4163 0
 27680 0056 3C4B     		ldr	r3, .L1080
 27681 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27682 005a 07F59C42 		add	r2, r7, #19968
 27683 005e 02F12C02 		add	r2, r2, #44
 27684 0062 1370     		strb	r3, [r2]
4164:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 27685              		.loc 1 4164 0
 27686 0064 384B     		ldr	r3, .L1080
 27687 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 27688 0068 07F16003 		add	r3, r7, #96
 27689 006c 543B     		subs	r3, r3, #84
 27690 006e 1A70     		strb	r2, [r3]
4165:..\src/command_processing.c ****     
4166:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27691              		.loc 1 4166 0
 27692 0070 0023     		movs	r3, #0
 27693 0072 07F59C42 		add	r2, r7, #19968
 27694 0076 02F15F02 		add	r2, r2, #95
 27695 007a 1370     		strb	r3, [r2]
 27696 007c 1DE0     		b	.L1076
 27697              	.L1077:
4167:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27698              		.loc 1 4167 0 discriminator 3
 27699 007e 07F59C43 		add	r3, r7, #19968
 27700 0082 03F15F03 		add	r3, r3, #95
 27701 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27702 0088 07F59C42 		add	r2, r7, #19968
 27703 008c 02F12C02 		add	r2, r2, #44
 27704 0090 1344     		add	r3, r3, r2
 27705 0092 07F59C42 		add	r2, r7, #19968
 27706 0096 02F15F02 		add	r2, r2, #95
 27707 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27708 009c 0332     		adds	r2, r2, #3
 27709 009e 2B49     		ldr	r1, .L1080+4
 27710 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27711 00a2 1A70     		strb	r2, [r3]
4166:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27712              		.loc 1 4166 0 discriminator 3
 27713 00a4 07F59C43 		add	r3, r7, #19968
 27714 00a8 03F15F03 		add	r3, r3, #95
 27715 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27716 00ae 0133     		adds	r3, r3, #1
 27717 00b0 07F59C42 		add	r2, r7, #19968
 27718 00b4 02F15F02 		add	r2, r2, #95
 27719 00b8 1370     		strb	r3, [r2]
 27720              	.L1076:
4166:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27721              		.loc 1 4166 0 is_stmt 0 discriminator 1
 27722 00ba 07F59C43 		add	r3, r7, #19968
 27723 00be 03F15F03 		add	r3, r3, #95
 27724 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27725 00c4 9AB2     		uxth	r2, r3
 27726 00c6 07F16003 		add	r3, r7, #96
 27727 00ca 5A3B     		subs	r3, r3, #90
 27728 00cc 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 606


 27729 00ce 9342     		cmp	r3, r2
 27730 00d0 D5D8     		bhi	.L1077
4168:..\src/command_processing.c ****     }
4169:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27731              		.loc 1 4169 0 is_stmt 1
 27732 00d2 07F59C43 		add	r3, r7, #19968
 27733 00d6 03F15F03 		add	r3, r3, #95
 27734 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27735 00dc 07F59C42 		add	r2, r7, #19968
 27736 00e0 02F12C02 		add	r2, r2, #44
 27737 00e4 1344     		add	r3, r3, r2
 27738 00e6 0022     		movs	r2, #0
 27739 00e8 1A70     		strb	r2, [r3]
4170:..\src/command_processing.c ****      
4171:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4172:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 27740              		.loc 1 4172 0
 27741 00ea 07F59C43 		add	r3, r7, #19968
 27742 00ee 03F12C03 		add	r3, r3, #44
 27743 00f2 1749     		ldr	r1, .L1080+8
 27744 00f4 1846     		mov	r0, r3
 27745 00f6 FFF7FEFF 		bl	strcmp
 27746 00fa 0346     		mov	r3, r0
 27747 00fc 002B     		cmp	r3, #0
 27748 00fe 0CD0     		beq	.L1078
4173:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 27749              		.loc 1 4173 0
 27750 0100 07F16003 		add	r3, r7, #96
 27751 0104 543B     		subs	r3, r3, #84
 27752 0106 07F59C40 		add	r0, r7, #19968
 27753 010a 00F12C00 		add	r0, r0, #44
 27754 010e 44F62062 		movw	r2, #20000
 27755 0112 1946     		mov	r1, r3
 27756 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 27757 0118 07E0     		b	.L1079
 27758              	.L1078:
4174:..\src/command_processing.c ****     }
4175:..\src/command_processing.c ****     else {
4176:..\src/command_processing.c ****         //It is the currently open working file
4177:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 27759              		.loc 1 4177 0
 27760 011a 07F16003 		add	r3, r7, #96
 27761 011e 543B     		subs	r3, r3, #84
 27762 0120 44F62061 		movw	r1, #20000
 27763 0124 1846     		mov	r0, r3
 27764 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 27765              	.L1079:
4178:..\src/command_processing.c ****     }
4179:..\src/command_processing.c **** 
4180:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
4181:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
4182:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 27766              		.loc 1 4182 0
 27767 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
4183:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 27768              		.loc 1 4183 0
 27769 012e 07F16003 		add	r3, r7, #96
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 607


 27770 0132 543B     		subs	r3, r3, #84
 27771 0134 1846     		mov	r0, r3
 27772 0136 FFF7FEFF 		bl	UART_RS485_PutString
4184:..\src/command_processing.c **** }
 27773              		.loc 1 4184 0
 27774 013a 00BF     		nop
 27775 013c 07F59C47 		add	r7, r7, #19968
 27776 0140 6037     		adds	r7, r7, #96
 27777              		.cfi_def_cfa_offset 8
 27778 0142 BD46     		mov	sp, r7
 27779              		.cfi_def_cfa_register 13
 27780              		@ sp needed
 27781 0144 80BD     		pop	{r7, pc}
 27782              	.L1081:
 27783 0146 00BF     		.align	2
 27784              	.L1080:
 27785 0148 B8210000 		.word	.LC321
 27786 014c 00000000 		.word	g_rx
 27787 0150 00000000 		.word	sdFile
 27788              		.cfi_endproc
 27789              	.LFE115:
 27790              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 27791              		.section	.text.cmd_remove_SD_file,"ax",%progbits
 27792              		.align	2
 27793              		.global	cmd_remove_SD_file
 27794              		.thumb
 27795              		.thumb_func
 27796              		.type	cmd_remove_SD_file, %function
 27797              	cmd_remove_SD_file:
 27798              	.LFB116:
4185:..\src/command_processing.c **** 
4186:..\src/command_processing.c **** void cmd_remove_SD_file( uint16 filename_length ){
 27799              		.loc 1 4186 0
 27800              		.cfi_startproc
 27801              		@ args = 0, pretend = 0, frame = 64
 27802              		@ frame_needed = 1, uses_anonymous_args = 0
 27803 0000 80B5     		push	{r7, lr}
 27804              		.cfi_def_cfa_offset 8
 27805              		.cfi_offset 7, -8
 27806              		.cfi_offset 14, -4
 27807 0002 90B0     		sub	sp, sp, #64
 27808              		.cfi_def_cfa_offset 72
 27809 0004 00AF     		add	r7, sp, #0
 27810              		.cfi_def_cfa_register 7
 27811 0006 0346     		mov	r3, r0
 27812 0008 FB80     		strh	r3, [r7, #6]	@ movhi
4187:..\src/command_processing.c ****     
4188:..\src/command_processing.c ****     uint8 i = 0;
 27813              		.loc 1 4188 0
 27814 000a 0023     		movs	r3, #0
 27815 000c 87F83F30 		strb	r3, [r7, #63]
4189:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 27816              		.loc 1 4189 0
 27817 0010 0023     		movs	r3, #0
 27818 0012 FB60     		str	r3, [r7, #12]
 27819 0014 07F11003 		add	r3, r7, #16
 27820 0018 2E22     		movs	r2, #46
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 608


 27821 001a 0021     		movs	r1, #0
 27822 001c 1846     		mov	r0, r3
 27823 001e FFF7FEFF 		bl	memset
4190:..\src/command_processing.c ****     strcpy(filename, "");
 27824              		.loc 1 4190 0
 27825 0022 214B     		ldr	r3, .L1085
 27826 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27827 0026 3B73     		strb	r3, [r7, #12]
4191:..\src/command_processing.c ****     
4192:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27828              		.loc 1 4192 0
 27829 0028 0023     		movs	r3, #0
 27830 002a 87F83F30 		strb	r3, [r7, #63]
 27831 002e 0FE0     		b	.L1083
 27832              	.L1084:
4193:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27833              		.loc 1 4193 0 discriminator 3
 27834 0030 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27835 0034 07F10C02 		add	r2, r7, #12
 27836 0038 1344     		add	r3, r3, r2
 27837 003a 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 27838 003e 0332     		adds	r2, r2, #3
 27839 0040 1A49     		ldr	r1, .L1085+4
 27840 0042 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27841 0044 1A70     		strb	r2, [r3]
4192:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27842              		.loc 1 4192 0 discriminator 3
 27843 0046 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27844 004a 0133     		adds	r3, r3, #1
 27845 004c 87F83F30 		strb	r3, [r7, #63]
 27846              	.L1083:
4192:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27847              		.loc 1 4192 0 is_stmt 0 discriminator 1
 27848 0050 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27849 0054 9BB2     		uxth	r3, r3
 27850 0056 FA88     		ldrh	r2, [r7, #6]
 27851 0058 9A42     		cmp	r2, r3
 27852 005a E9D8     		bhi	.L1084
4194:..\src/command_processing.c ****     }
4195:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27853              		.loc 1 4195 0 is_stmt 1
 27854 005c 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27855 0060 07F10C02 		add	r2, r7, #12
 27856 0064 1344     		add	r3, r3, r2
 27857 0066 0022     		movs	r2, #0
 27858 0068 1A70     		strb	r2, [r3]
4196:..\src/command_processing.c ****      
4197:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4198:..\src/command_processing.c ****     uint8 res = Remove_SD_File(filename);
 27859              		.loc 1 4198 0
 27860 006a 07F10C03 		add	r3, r7, #12
 27861 006e 1846     		mov	r0, r3
 27862 0070 FFF7FEFF 		bl	Remove_SD_File
 27863 0074 0346     		mov	r3, r0
 27864 0076 87F83E30 		strb	r3, [r7, #62]
4199:..\src/command_processing.c ****   
4200:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 609


4201:..\src/command_processing.c ****     uint8 packet_data[3]; 
4202:..\src/command_processing.c ****     
4203:..\src/command_processing.c ****     //Header package
4204:..\src/command_processing.c **** 
4205:..\src/command_processing.c ****     packet_data[0] = CMD_REMOVE_SD_SINGLE_FILE;
 27865              		.loc 1 4205 0
 27866 007a A823     		movs	r3, #168
 27867 007c 3B72     		strb	r3, [r7, #8]
4206:..\src/command_processing.c ****     packet_data[1] = res;
 27868              		.loc 1 4206 0
 27869 007e 97F83E30 		ldrb	r3, [r7, #62]
 27870 0082 7B72     		strb	r3, [r7, #9]
4207:..\src/command_processing.c **** 
4208:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4209:..\src/command_processing.c ****     packet_data[2] = LCRChecksum (packet_data, 2);
 27871              		.loc 1 4209 0
 27872 0084 07F10803 		add	r3, r7, #8
 27873 0088 0221     		movs	r1, #2
 27874 008a 1846     		mov	r0, r3
 27875 008c FFF7FEFF 		bl	LCRChecksum
 27876 0090 0346     		mov	r3, r0
 27877 0092 BB72     		strb	r3, [r7, #10]
4210:..\src/command_processing.c ****     
4211:..\src/command_processing.c ****     commWrite(packet_data, 3);
 27878              		.loc 1 4211 0
 27879 0094 07F10803 		add	r3, r7, #8
 27880 0098 0321     		movs	r1, #3
 27881 009a 1846     		mov	r0, r3
 27882 009c FFF7FEFF 		bl	commWrite
4212:..\src/command_processing.c **** }
 27883              		.loc 1 4212 0
 27884 00a0 00BF     		nop
 27885 00a2 4037     		adds	r7, r7, #64
 27886              		.cfi_def_cfa_offset 8
 27887 00a4 BD46     		mov	sp, r7
 27888              		.cfi_def_cfa_register 13
 27889              		@ sp needed
 27890 00a6 80BD     		pop	{r7, pc}
 27891              	.L1086:
 27892              		.align	2
 27893              	.L1085:
 27894 00a8 B8210000 		.word	.LC321
 27895 00ac 00000000 		.word	g_rx
 27896              		.cfi_endproc
 27897              	.LFE116:
 27898              		.size	cmd_remove_SD_file, .-cmd_remove_SD_file
 27899              		.section	.text.air_chambers_control,"ax",%progbits
 27900              		.align	2
 27901              		.global	air_chambers_control
 27902              		.thumb
 27903              		.thumb_func
 27904              		.type	air_chambers_control, %function
 27905              	air_chambers_control:
 27906              	.LFB117:
4213:..\src/command_processing.c **** 
4214:..\src/command_processing.c **** //==============================================================================
4215:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 610


4216:..\src/command_processing.c **** //==============================================================================
4217:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
4218:..\src/command_processing.c **** 
4219:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
 27907              		.loc 1 4219 0
 27908              		.cfi_startproc
 27909              		@ args = 0, pretend = 0, frame = 8
 27910              		@ frame_needed = 1, uses_anonymous_args = 0
 27911              		@ link register save eliminated.
 27912 0000 80B4     		push	{r7}
 27913              		.cfi_def_cfa_offset 4
 27914              		.cfi_offset 7, -4
 27915 0002 83B0     		sub	sp, sp, #12
 27916              		.cfi_def_cfa_offset 16
 27917 0004 00AF     		add	r7, sp, #0
 27918              		.cfi_def_cfa_register 7
 27919 0006 7860     		str	r0, [r7, #4]
4220:..\src/command_processing.c ****     
4221:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4222:..\src/command_processing.c ****     
4223:..\src/command_processing.c ****     int16 curr_diff;
4224:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
4225:..\src/command_processing.c ****     int32 valve_command;
4226:..\src/command_processing.c ****     int16 x_value;
4227:..\src/command_processing.c **** 
4228:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
4229:..\src/command_processing.c ****     
4230:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
4231:..\src/command_processing.c ****     
4232:..\src/command_processing.c ****     // Current difference saturation old mapping
4233:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
4234:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
4235:..\src/command_processing.c **** //    }
4236:..\src/command_processing.c **** //    if(curr_diff < 0) {
4237:..\src/command_processing.c **** //        curr_diff = 0;
4238:..\src/command_processing.c **** //    }
4239:..\src/command_processing.c **** 
4240:..\src/command_processing.c ****     // Compute pressure reference
4241:..\src/command_processing.c **** 
4242:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
4243:..\src/command_processing.c ****     if (x_value < 0)
4244:..\src/command_processing.c ****         x_value = 0;
4245:..\src/command_processing.c ****     
4246:..\src/command_processing.c ****     // old mapping --- linear mapping
4247:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
4248:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
4249:..\src/command_processing.c ****     if (pressure_reference < 0)
4250:..\src/command_processing.c ****         pressure_reference = 0;
4251:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
4252:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
4253:..\src/command_processing.c ****     
4254:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
4255:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
4256:..\src/command_processing.c **** //    if (err_pressure < 0){
4257:..\src/command_processing.c **** //        err_pressure = 0;
4258:..\src/command_processing.c **** //    }
4259:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 611


4260:..\src/command_processing.c ****     if (x_value <= 0){
4261:..\src/command_processing.c ****         //i.e the hand is opening
4262:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
4263:..\src/command_processing.c ****     }
4264:..\src/command_processing.c ****     else {
4265:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4266:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4267:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4268:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
4269:..\src/command_processing.c ****     }
4270:..\src/command_processing.c ****     
4271:..\src/command_processing.c ****     // Pump control
4272:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
4273:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4274:..\src/command_processing.c ****     
4275:..\src/command_processing.c ****     // Limit output voltage
4276:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
4277:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
4278:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
4279:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4280:..\src/command_processing.c ****         
4281:..\src/command_processing.c ****     VALVE_Write(valve_command);
4282:..\src/command_processing.c ****     
4283:..\src/command_processing.c ****     
4284:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4285:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4286:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4287:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
4288:..\src/command_processing.c **** #endif
4289:..\src/command_processing.c **** }
 27920              		.loc 1 4289 0
 27921 0008 00BF     		nop
 27922 000a 0C37     		adds	r7, r7, #12
 27923              		.cfi_def_cfa_offset 4
 27924 000c BD46     		mov	sp, r7
 27925              		.cfi_def_cfa_register 13
 27926              		@ sp needed
 27927 000e 80BC     		pop	{r7}
 27928              		.cfi_restore 7
 27929              		.cfi_def_cfa_offset 0
 27930 0010 7047     		bx	lr
 27931              		.cfi_endproc
 27932              	.LFE117:
 27933              		.size	air_chambers_control, .-air_chambers_control
 27934 0012 00BF     		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 27935              		.align	2
 27936              		.global	emg_activation_velocity_fsm
 27937              		.thumb
 27938              		.thumb_func
 27939              		.type	emg_activation_velocity_fsm, %function
 27940              	emg_activation_velocity_fsm:
 27941              	.LFB118:
4290:..\src/command_processing.c **** 
4291:..\src/command_processing.c **** 
4292:..\src/command_processing.c **** //==============================================================================
4293:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4294:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 612


4295:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4296:..\src/command_processing.c **** 
4297:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 27942              		.loc 1 4297 0
 27943              		.cfi_startproc
 27944              		@ args = 0, pretend = 0, frame = 16
 27945              		@ frame_needed = 1, uses_anonymous_args = 0
 27946              		@ link register save eliminated.
 27947 0000 80B4     		push	{r7}
 27948              		.cfi_def_cfa_offset 4
 27949              		.cfi_offset 7, -4
 27950 0002 85B0     		sub	sp, sp, #20
 27951              		.cfi_def_cfa_offset 24
 27952 0004 00AF     		add	r7, sp, #0
 27953              		.cfi_def_cfa_register 7
4298:..\src/command_processing.c ****       
4299:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4300:..\src/command_processing.c ****     static int32 cnt = 0;
4301:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4302:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4303:..\src/command_processing.c ****     
4304:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 27954              		.loc 1 4304 0
 27955 0006 534B     		ldr	r3, .L1117
 27956 0008 1B68     		ldr	r3, [r3]
 27957 000a 534A     		ldr	r2, .L1117+4
 27958 000c B2F8F021 		ldrh	r2, [r2, #496]
 27959 0010 9B1A     		subs	r3, r3, r2
 27960 0012 FB60     		str	r3, [r7, #12]
4305:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 27961              		.loc 1 4305 0
 27962 0014 4F4B     		ldr	r3, .L1117
 27963 0016 5B68     		ldr	r3, [r3, #4]
 27964 0018 4F4A     		ldr	r2, .L1117+4
 27965 001a B2F8F221 		ldrh	r2, [r2, #498]
 27966 001e 9B1A     		subs	r3, r3, r2
 27967 0020 BB60     		str	r3, [r7, #8]
4306:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 27968              		.loc 1 4306 0
 27969 0022 4C4B     		ldr	r3, .L1117
 27970 0024 1B68     		ldr	r3, [r3]
 27971 0026 4C4A     		ldr	r2, .L1117+4
 27972 0028 B2F8E222 		ldrh	r2, [r2, #738]
 27973 002c 9B1A     		subs	r3, r3, r2
 27974 002e 7B60     		str	r3, [r7, #4]
4307:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 27975              		.loc 1 4307 0
 27976 0030 484B     		ldr	r3, .L1117
 27977 0032 5B68     		ldr	r3, [r3, #4]
 27978 0034 484A     		ldr	r2, .L1117+4
 27979 0036 B2F8E422 		ldrh	r2, [r2, #740]
 27980 003a 9B1A     		subs	r3, r3, r2
 27981 003c 3B60     		str	r3, [r7]
4308:..\src/command_processing.c ****     
4309:..\src/command_processing.c **** 
4310:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4311:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 613


4312:..\src/command_processing.c ****     switch (fsm_state){
 27982              		.loc 1 4312 0
 27983 003e 474B     		ldr	r3, .L1117+8
 27984 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27985 0042 032B     		cmp	r3, #3
 27986 0044 7FD8     		bhi	.L1089
 27987 0046 01A2     		adr	r2, .L1091
 27988 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 27989              		.p2align 2
 27990              	.L1091:
 27991 004c 5D000000 		.word	.L1090+1
 27992 0050 71000000 		.word	.L1092+1
 27993 0054 11010000 		.word	.L1093+1
 27994 0058 25010000 		.word	.L1094+1
 27995              		.p2align 1
 27996              	.L1090:
4313:..\src/command_processing.c ****         case RELAX_STATE:
4314:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27997              		.loc 1 4314 0
 27998 005c FB68     		ldr	r3, [r7, #12]
 27999 005e 002B     		cmp	r3, #0
 28000 0060 02DC     		bgt	.L1095
 28001              		.loc 1 4314 0 is_stmt 0 discriminator 1
 28002 0062 BB68     		ldr	r3, [r7, #8]
 28003 0064 002B     		cmp	r3, #0
 28004 0066 67DD     		ble	.L1113
 28005              	.L1095:
4315:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 28006              		.loc 1 4315 0 is_stmt 1
 28007 0068 3C4B     		ldr	r3, .L1117+8
 28008 006a 0122     		movs	r2, #1
 28009 006c 1A70     		strb	r2, [r3]
4316:..\src/command_processing.c ****             }
4317:..\src/command_processing.c ****             
4318:..\src/command_processing.c ****             break;
 28010              		.loc 1 4318 0
 28011 006e 63E0     		b	.L1113
 28012              	.L1092:
4319:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4320:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 28013              		.loc 1 4320 0
 28014 0070 FB68     		ldr	r3, [r7, #12]
 28015 0072 002B     		cmp	r3, #0
 28016 0074 02DC     		bgt	.L1097
 28017              		.loc 1 4320 0 is_stmt 0 discriminator 1
 28018 0076 BB68     		ldr	r3, [r7, #8]
 28019 0078 002B     		cmp	r3, #0
 28020 007a 05DD     		ble	.L1098
 28021              	.L1097:
4321:..\src/command_processing.c ****                 cnt = cnt +1;
 28022              		.loc 1 4321 0 is_stmt 1
 28023 007c 384B     		ldr	r3, .L1117+12
 28024 007e 1B68     		ldr	r3, [r3]
 28025 0080 0133     		adds	r3, r3, #1
 28026 0082 374A     		ldr	r2, .L1117+12
 28027 0084 1360     		str	r3, [r2]
 28028 0086 02E0     		b	.L1099
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 614


 28029              	.L1098:
4322:..\src/command_processing.c ****             }
4323:..\src/command_processing.c ****             else {
4324:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 28030              		.loc 1 4324 0
 28031 0088 344B     		ldr	r3, .L1117+8
 28032 008a 0022     		movs	r2, #0
 28033 008c 1A70     		strb	r2, [r3]
 28034              	.L1099:
4325:..\src/command_processing.c ****             }
4326:..\src/command_processing.c ****             
4327:..\src/command_processing.c ****             if (cnt > 100){
 28035              		.loc 1 4327 0
 28036 008e 344B     		ldr	r3, .L1117+12
 28037 0090 1B68     		ldr	r3, [r3]
 28038 0092 642B     		cmp	r3, #100
 28039 0094 52DD     		ble	.L1114
4328:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 28040              		.loc 1 4328 0
 28041 0096 FB68     		ldr	r3, [r7, #12]
 28042 0098 002B     		cmp	r3, #0
 28043 009a 02DD     		ble	.L1101
 28044              		.loc 1 4328 0 is_stmt 0 discriminator 1
 28045 009c 7B68     		ldr	r3, [r7, #4]
 28046 009e 002B     		cmp	r3, #0
 28047 00a0 05DC     		bgt	.L1102
 28048              	.L1101:
 28049              		.loc 1 4328 0 discriminator 3
 28050 00a2 BB68     		ldr	r3, [r7, #8]
 28051 00a4 002B     		cmp	r3, #0
 28052 00a6 0EDD     		ble	.L1103
 28053              		.loc 1 4328 0 discriminator 4
 28054 00a8 3B68     		ldr	r3, [r7]
 28055 00aa 002B     		cmp	r3, #0
 28056 00ac 0BDD     		ble	.L1103
 28057              	.L1102:
4329:..\src/command_processing.c ****                     // Fast activation
4330:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 28058              		.loc 1 4330 0 is_stmt 1
 28059 00ae 2A4B     		ldr	r3, .L1117+4
 28060 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 28061 00b4 002B     		cmp	r3, #0
 28062 00b6 03D1     		bne	.L1104
4331:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 28063              		.loc 1 4331 0
 28064 00b8 284B     		ldr	r3, .L1117+8
 28065 00ba 0222     		movs	r2, #2
 28066 00bc 1A70     		strb	r2, [r3]
 28067 00be 02E0     		b	.L1103
 28068              	.L1104:
4332:..\src/command_processing.c ****                     }
4333:..\src/command_processing.c ****                     else{
4334:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 28069              		.loc 1 4334 0
 28070 00c0 264B     		ldr	r3, .L1117+8
 28071 00c2 0322     		movs	r2, #3
 28072 00c4 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 615


 28073              	.L1103:
4335:..\src/command_processing.c ****                     }
4336:..\src/command_processing.c ****                 }
4337:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 28074              		.loc 1 4337 0
 28075 00c6 FB68     		ldr	r3, [r7, #12]
 28076 00c8 002B     		cmp	r3, #0
 28077 00ca 02DD     		ble	.L1105
 28078              		.loc 1 4337 0 is_stmt 0 discriminator 1
 28079 00cc 7B68     		ldr	r3, [r7, #4]
 28080 00ce 002B     		cmp	r3, #0
 28081 00d0 05DB     		blt	.L1106
 28082              	.L1105:
 28083              		.loc 1 4337 0 discriminator 3
 28084 00d2 BB68     		ldr	r3, [r7, #8]
 28085 00d4 002B     		cmp	r3, #0
 28086 00d6 0EDD     		ble	.L1107
 28087              		.loc 1 4337 0 discriminator 4
 28088 00d8 3B68     		ldr	r3, [r7]
 28089 00da 002B     		cmp	r3, #0
 28090 00dc 0BDA     		bge	.L1107
 28091              	.L1106:
4338:..\src/command_processing.c ****                     // Slow activation
4339:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 28092              		.loc 1 4339 0 is_stmt 1
 28093 00de 1E4B     		ldr	r3, .L1117+4
 28094 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 28095 00e4 002B     		cmp	r3, #0
 28096 00e6 03D1     		bne	.L1108
4340:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 28097              		.loc 1 4340 0
 28098 00e8 1C4B     		ldr	r3, .L1117+8
 28099 00ea 0322     		movs	r2, #3
 28100 00ec 1A70     		strb	r2, [r3]
 28101 00ee 02E0     		b	.L1107
 28102              	.L1108:
4341:..\src/command_processing.c ****                     }
4342:..\src/command_processing.c ****                     else{
4343:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 28103              		.loc 1 4343 0
 28104 00f0 1A4B     		ldr	r3, .L1117+8
 28105 00f2 0222     		movs	r2, #2
 28106 00f4 1A70     		strb	r2, [r3]
 28107              	.L1107:
4344:..\src/command_processing.c ****                     }
4345:..\src/command_processing.c ****                 }
4346:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 28108              		.loc 1 4346 0
 28109 00f6 FB68     		ldr	r3, [r7, #12]
 28110 00f8 002B     		cmp	r3, #0
 28111 00fa 05DA     		bge	.L1109
 28112              		.loc 1 4346 0 is_stmt 0 discriminator 1
 28113 00fc BB68     		ldr	r3, [r7, #8]
 28114 00fe 002B     		cmp	r3, #0
 28115 0100 02DA     		bge	.L1109
4347:..\src/command_processing.c ****                     // Involuntary activation
4348:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 616


 28116              		.loc 1 4348 0 is_stmt 1
 28117 0102 164B     		ldr	r3, .L1117+8
 28118 0104 0022     		movs	r2, #0
 28119 0106 1A70     		strb	r2, [r3]
 28120              	.L1109:
4349:..\src/command_processing.c ****                 }
4350:..\src/command_processing.c ****                 cnt = 0;
 28121              		.loc 1 4350 0
 28122 0108 154B     		ldr	r3, .L1117+12
 28123 010a 0022     		movs	r2, #0
 28124 010c 1A60     		str	r2, [r3]
4351:..\src/command_processing.c ****             }
4352:..\src/command_processing.c ****     
4353:..\src/command_processing.c ****             break;
 28125              		.loc 1 4353 0
 28126 010e 15E0     		b	.L1114
 28127              	.L1093:
4354:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4355:..\src/command_processing.c ****             
4356:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 28128              		.loc 1 4356 0
 28129 0110 FB68     		ldr	r3, [r7, #12]
 28130 0112 002B     		cmp	r3, #0
 28131 0114 14DA     		bge	.L1115
 28132              		.loc 1 4356 0 is_stmt 0 discriminator 1
 28133 0116 BB68     		ldr	r3, [r7, #8]
 28134 0118 002B     		cmp	r3, #0
 28135 011a 11DA     		bge	.L1115
4357:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 28136              		.loc 1 4357 0 is_stmt 1
 28137 011c 0F4B     		ldr	r3, .L1117+8
 28138 011e 0022     		movs	r2, #0
 28139 0120 1A70     		strb	r2, [r3]
4358:..\src/command_processing.c ****             }
4359:..\src/command_processing.c ****         
4360:..\src/command_processing.c ****             break;
 28140              		.loc 1 4360 0
 28141 0122 0DE0     		b	.L1115
 28142              	.L1094:
4361:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4362:..\src/command_processing.c ****           
4363:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 28143              		.loc 1 4363 0
 28144 0124 FB68     		ldr	r3, [r7, #12]
 28145 0126 002B     		cmp	r3, #0
 28146 0128 0CDA     		bge	.L1116
 28147              		.loc 1 4363 0 is_stmt 0 discriminator 1
 28148 012a BB68     		ldr	r3, [r7, #8]
 28149 012c 002B     		cmp	r3, #0
 28150 012e 09DA     		bge	.L1116
4364:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 28151              		.loc 1 4364 0 is_stmt 1
 28152 0130 0A4B     		ldr	r3, .L1117+8
 28153 0132 0022     		movs	r2, #0
 28154 0134 1A70     		strb	r2, [r3]
4365:..\src/command_processing.c ****             }
4366:..\src/command_processing.c ****             
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 617


4367:..\src/command_processing.c ****             break;
 28155              		.loc 1 4367 0
 28156 0136 05E0     		b	.L1116
 28157              	.L1113:
4318:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 28158              		.loc 1 4318 0
 28159 0138 00BF     		nop
 28160 013a 04E0     		b	.L1089
 28161              	.L1114:
4353:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 28162              		.loc 1 4353 0
 28163 013c 00BF     		nop
 28164 013e 02E0     		b	.L1089
 28165              	.L1115:
4360:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
 28166              		.loc 1 4360 0
 28167 0140 00BF     		nop
 28168 0142 00E0     		b	.L1089
 28169              	.L1116:
 28170              		.loc 1 4367 0
 28171 0144 00BF     		nop
 28172              	.L1089:
4368:..\src/command_processing.c ****     }
4369:..\src/command_processing.c ****     
4370:..\src/command_processing.c ****     return fsm_state;
 28173              		.loc 1 4370 0
 28174 0146 054B     		ldr	r3, .L1117+8
 28175 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4371:..\src/command_processing.c **** 
4372:..\src/command_processing.c **** }
 28176              		.loc 1 4372 0
 28177 014a 1846     		mov	r0, r3
 28178 014c 1437     		adds	r7, r7, #20
 28179              		.cfi_def_cfa_offset 4
 28180 014e BD46     		mov	sp, r7
 28181              		.cfi_def_cfa_register 13
 28182              		@ sp needed
 28183 0150 80BC     		pop	{r7}
 28184              		.cfi_restore 7
 28185              		.cfi_def_cfa_offset 0
 28186 0152 7047     		bx	lr
 28187              	.L1118:
 28188              		.align	2
 28189              	.L1117:
 28190 0154 00000000 		.word	g_adc_meas
 28191 0158 00000000 		.word	c_mem
 28192 015c 0C000000 		.word	fsm_state.11647
 28193 0160 10000000 		.word	cnt.11648
 28194              		.cfi_endproc
 28195              	.LFE118:
 28196              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 28197              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 28198              		.align	2
 28199              		.global	otbk_act_wrist_control
 28200              		.thumb
 28201              		.thumb_func
 28202              		.type	otbk_act_wrist_control, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 618


 28203              	otbk_act_wrist_control:
 28204              	.LFB119:
4373:..\src/command_processing.c **** 
4374:..\src/command_processing.c **** //==============================================================================
4375:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4376:..\src/command_processing.c **** //==============================================================================
4377:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4378:..\src/command_processing.c **** 
4379:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 28205              		.loc 1 4379 0
 28206              		.cfi_startproc
 28207              		@ args = 0, pretend = 0, frame = 8
 28208              		@ frame_needed = 1, uses_anonymous_args = 0
 28209              		@ link register save eliminated.
 28210 0000 80B4     		push	{r7}
 28211              		.cfi_def_cfa_offset 4
 28212              		.cfi_offset 7, -4
 28213 0002 83B0     		sub	sp, sp, #12
 28214              		.cfi_def_cfa_offset 16
 28215 0004 00AF     		add	r7, sp, #0
 28216              		.cfi_def_cfa_register 7
 28217 0006 7860     		str	r0, [r7, #4]
4380:..\src/command_processing.c ****     
4381:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4382:..\src/command_processing.c ****     
4383:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4384:..\src/command_processing.c ****         
4385:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4386:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4387:..\src/command_processing.c ****     switch (fsm_state){
4388:..\src/command_processing.c ****         case RELAX_STATE:
4389:..\src/command_processing.c ****             
4390:..\src/command_processing.c ****             // Wrist stop
4391:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4392:..\src/command_processing.c ****             
4393:..\src/command_processing.c ****             // Softhand stop
4394:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4395:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4396:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4397:..\src/command_processing.c ****             
4398:..\src/command_processing.c ****             break;
4399:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4400:..\src/command_processing.c ****                 
4401:..\src/command_processing.c ****             break;
4402:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4403:..\src/command_processing.c ****             
4404:..\src/command_processing.c ****             // Wrist movement
4405:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4406:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4407:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4408:..\src/command_processing.c ****                 }
4409:..\src/command_processing.c ****                 else {
4410:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4411:..\src/command_processing.c ****                 }
4412:..\src/command_processing.c ****             }
4413:..\src/command_processing.c ****             else {
4414:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 619


4415:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4416:..\src/command_processing.c ****                 }
4417:..\src/command_processing.c ****                 else {
4418:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4419:..\src/command_processing.c ****                 }
4420:..\src/command_processing.c ****             }
4421:..\src/command_processing.c ****             
4422:..\src/command_processing.c ****             // Softhand stop
4423:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4424:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4425:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4426:..\src/command_processing.c ****             
4427:..\src/command_processing.c ****             break;
4428:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4429:..\src/command_processing.c ****             
4430:..\src/command_processing.c ****             // Wrist stop
4431:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4432:..\src/command_processing.c ****             
4433:..\src/command_processing.c ****             // SoftHand movement
4434:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4435:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4436:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4437:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4438:..\src/command_processing.c ****             
4439:..\src/command_processing.c ****             break;
4440:..\src/command_processing.c ****     }
4441:..\src/command_processing.c ****         
4442:..\src/command_processing.c ****     // Limit output voltage
4443:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4444:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4445:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4446:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4447:..\src/command_processing.c ****     
4448:..\src/command_processing.c **** #endif
4449:..\src/command_processing.c **** }
 28218              		.loc 1 4449 0
 28219 0008 00BF     		nop
 28220 000a 0C37     		adds	r7, r7, #12
 28221              		.cfi_def_cfa_offset 4
 28222 000c BD46     		mov	sp, r7
 28223              		.cfi_def_cfa_register 13
 28224              		@ sp needed
 28225 000e 80BC     		pop	{r7}
 28226              		.cfi_restore 7
 28227              		.cfi_def_cfa_offset 0
 28228 0010 7047     		bx	lr
 28229              		.cfi_endproc
 28230              	.LFE119:
 28231              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 28232 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 28233              		.align	2
 28234              		.global	drive_slave
 28235              		.thumb
 28236              		.thumb_func
 28237              		.type	drive_slave, %function
 28238              	drive_slave:
 28239              	.LFB120:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 620


4450:..\src/command_processing.c **** 
4451:..\src/command_processing.c **** //==============================================================================
4452:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4453:..\src/command_processing.c **** //==============================================================================
4454:..\src/command_processing.c ****  
4455:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 28240              		.loc 1 4455 0
 28241              		.cfi_startproc
 28242              		@ args = 0, pretend = 0, frame = 8
 28243              		@ frame_needed = 1, uses_anonymous_args = 0
 28244              		@ link register save eliminated.
 28245 0000 80B4     		push	{r7}
 28246              		.cfi_def_cfa_offset 4
 28247              		.cfi_offset 7, -4
 28248 0002 83B0     		sub	sp, sp, #12
 28249              		.cfi_def_cfa_offset 16
 28250 0004 00AF     		add	r7, sp, #0
 28251              		.cfi_def_cfa_register 7
 28252 0006 0346     		mov	r3, r0
 28253 0008 0A46     		mov	r2, r1
 28254 000a FB71     		strb	r3, [r7, #7]
 28255 000c 1346     		mov	r3, r2
 28256 000e BB71     		strb	r3, [r7, #6]
4456:..\src/command_processing.c **** 
4457:..\src/command_processing.c **** #ifdef MASTER_FW
4458:..\src/command_processing.c ****     uint8 packet_data[6];
4459:..\src/command_processing.c ****     uint8 packet_length;
4460:..\src/command_processing.c ****     int16 aux_int16;
4461:..\src/command_processing.c **** 
4462:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
4463:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
4464:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4465:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
4466:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
4467:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
4468:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4469:..\src/command_processing.c ****         master_mode = 0;
4470:..\src/command_processing.c ****         return;
4471:..\src/command_processing.c ****     }
4472:..\src/command_processing.c ****         
4473:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
4474:..\src/command_processing.c ****         master_mode = 0;
4475:..\src/command_processing.c ****         return;
4476:..\src/command_processing.c ****     }
4477:..\src/command_processing.c ****     
4478:..\src/command_processing.c ****        
4479:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4480:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
4481:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
4482:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
4483:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
4484:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
4485:..\src/command_processing.c ****     
4486:..\src/command_processing.c ****     packet_length = 6;
4487:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
4488:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, slave_ID);
4489:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 621


4490:..\src/command_processing.c **** #endif
4491:..\src/command_processing.c **** }
 28257              		.loc 1 4491 0
 28258 0010 00BF     		nop
 28259 0012 0C37     		adds	r7, r7, #12
 28260              		.cfi_def_cfa_offset 4
 28261 0014 BD46     		mov	sp, r7
 28262              		.cfi_def_cfa_register 13
 28263              		@ sp needed
 28264 0016 80BC     		pop	{r7}
 28265              		.cfi_restore 7
 28266              		.cfi_def_cfa_offset 0
 28267 0018 7047     		bx	lr
 28268              		.cfi_endproc
 28269              	.LFE120:
 28270              		.size	drive_slave, .-drive_slave
 28271 001a 00BF     		.section	.text.stop_master_device,"ax",%progbits
 28272              		.align	2
 28273              		.global	stop_master_device
 28274              		.thumb
 28275              		.thumb_func
 28276              		.type	stop_master_device, %function
 28277              	stop_master_device:
 28278              	.LFB121:
4492:..\src/command_processing.c **** 
4493:..\src/command_processing.c **** //==============================================================================
4494:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4495:..\src/command_processing.c **** //==============================================================================
4496:..\src/command_processing.c ****  
4497:..\src/command_processing.c **** void stop_master_device() {
 28279              		.loc 1 4497 0
 28280              		.cfi_startproc
 28281              		@ args = 0, pretend = 0, frame = 0
 28282              		@ frame_needed = 1, uses_anonymous_args = 0
 28283              		@ link register save eliminated.
 28284 0000 80B4     		push	{r7}
 28285              		.cfi_def_cfa_offset 4
 28286              		.cfi_offset 7, -4
 28287 0002 00AF     		add	r7, sp, #0
 28288              		.cfi_def_cfa_register 7
4498:..\src/command_processing.c ****     
4499:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4500:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
4501:..\src/command_processing.c ****         // Stop pump and open valve
4502:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
4503:..\src/command_processing.c ****         VALVE_Write(0);
4504:..\src/command_processing.c ****     }
4505:..\src/command_processing.c **** #endif
4506:..\src/command_processing.c **** 
4507:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4508:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
4509:..\src/command_processing.c ****         //Stop wrist motor
4510:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4511:..\src/command_processing.c ****     }
4512:..\src/command_processing.c **** #endif    
4513:..\src/command_processing.c **** }
 28289              		.loc 1 4513 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 622


 28290 0004 00BF     		nop
 28291 0006 BD46     		mov	sp, r7
 28292              		.cfi_def_cfa_register 13
 28293              		@ sp needed
 28294 0008 80BC     		pop	{r7}
 28295              		.cfi_restore 7
 28296              		.cfi_def_cfa_offset 0
 28297 000a 7047     		bx	lr
 28298              		.cfi_endproc
 28299              	.LFE121:
 28300              		.size	stop_master_device, .-stop_master_device
 28301              		.section	.text.deactivate_slaves,"ax",%progbits
 28302              		.align	2
 28303              		.global	deactivate_slaves
 28304              		.thumb
 28305              		.thumb_func
 28306              		.type	deactivate_slaves, %function
 28307              	deactivate_slaves:
 28308              	.LFB122:
4514:..\src/command_processing.c **** 
4515:..\src/command_processing.c **** //==============================================================================
4516:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4517:..\src/command_processing.c **** //==============================================================================
4518:..\src/command_processing.c ****  
4519:..\src/command_processing.c **** void deactivate_slaves() {
 28309              		.loc 1 4519 0
 28310              		.cfi_startproc
 28311              		@ args = 0, pretend = 0, frame = 0
 28312              		@ frame_needed = 1, uses_anonymous_args = 0
 28313              		@ link register save eliminated.
 28314 0000 80B4     		push	{r7}
 28315              		.cfi_def_cfa_offset 4
 28316              		.cfi_offset 7, -4
 28317 0002 00AF     		add	r7, sp, #0
 28318              		.cfi_def_cfa_register 7
4520:..\src/command_processing.c ****     
4521:..\src/command_processing.c **** #ifdef MASTER_FW
4522:..\src/command_processing.c ****     
4523:..\src/command_processing.c ****     uint8 packet_data[10];
4524:..\src/command_processing.c ****     uint8 packet_length;
4525:..\src/command_processing.c ****     
4526:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4527:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4528:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
4529:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
4530:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
4531:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4532:..\src/command_processing.c ****         master_mode = 0;
4533:..\src/command_processing.c ****         return;
4534:..\src/command_processing.c ****     }
4535:..\src/command_processing.c ****    
4536:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4537:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
4538:..\src/command_processing.c **** 
4539:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
4540:..\src/command_processing.c ****     packet_length = 3;
4541:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 623


4542:..\src/command_processing.c ****     
4543:..\src/command_processing.c ****     commWrite(packet_data, packet_length);
4544:..\src/command_processing.c ****     
4545:..\src/command_processing.c **** #endif    
4546:..\src/command_processing.c **** }
 28319              		.loc 1 4546 0
 28320 0004 00BF     		nop
 28321 0006 BD46     		mov	sp, r7
 28322              		.cfi_def_cfa_register 13
 28323              		@ sp needed
 28324 0008 80BC     		pop	{r7}
 28325              		.cfi_restore 7
 28326              		.cfi_def_cfa_offset 0
 28327 000a 7047     		bx	lr
 28328              		.cfi_endproc
 28329              	.LFE122:
 28330              		.size	deactivate_slaves, .-deactivate_slaves
 28331              		.section	.text.cmd_get_vibrotactile_inputs,"ax",%progbits
 28332              		.align	2
 28333              		.global	cmd_get_vibrotactile_inputs
 28334              		.thumb
 28335              		.thumb_func
 28336              		.type	cmd_get_vibrotactile_inputs, %function
 28337              	cmd_get_vibrotactile_inputs:
 28338              	.LFB123:
4547:..\src/command_processing.c **** 
4548:..\src/command_processing.c **** void cmd_get_vibrotactile_inputs(){
 28339              		.loc 1 4548 0
 28340              		.cfi_startproc
 28341              		@ args = 0, pretend = 0, frame = 8
 28342              		@ frame_needed = 1, uses_anonymous_args = 0
 28343 0000 80B5     		push	{r7, lr}
 28344              		.cfi_def_cfa_offset 8
 28345              		.cfi_offset 7, -8
 28346              		.cfi_offset 14, -4
 28347 0002 82B0     		sub	sp, sp, #8
 28348              		.cfi_def_cfa_offset 16
 28349 0004 00AF     		add	r7, sp, #0
 28350              		.cfi_def_cfa_register 7
4549:..\src/command_processing.c ****     int16 aux_int16;
4550:..\src/command_processing.c ****     uint8 packet_data[6]; 
4551:..\src/command_processing.c ****     
4552:..\src/command_processing.c ****     //Header package
4553:..\src/command_processing.c **** 
4554:..\src/command_processing.c ****     packet_data[0] = CMD_SET_VIBROTACTILE_INPUTS;
 28351              		.loc 1 4554 0
 28352 0006 FB23     		movs	r3, #251
 28353 0008 3B70     		strb	r3, [r7]
4555:..\src/command_processing.c ****     aux_int16 = (int16)g_ref_vibrotactile[0].pwm;
 28354              		.loc 1 4555 0
 28355 000a 154B     		ldr	r3, .L1124
 28356 000c 1B68     		ldr	r3, [r3]
 28357 000e 1BB2     		sxth	r3, r3
 28358 0010 FB80     		strh	r3, [r7, #6]	@ movhi
4556:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 28359              		.loc 1 4556 0
 28360 0012 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 624


 28361 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 28362 0016 BB70     		strb	r3, [r7, #2]
4557:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 28363              		.loc 1 4557 0
 28364 0018 BB1D     		adds	r3, r7, #6
 28365 001a 0133     		adds	r3, r3, #1
 28366 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 28367 001e 7B70     		strb	r3, [r7, #1]
4558:..\src/command_processing.c **** 
4559:..\src/command_processing.c ****     
4560:..\src/command_processing.c ****      aux_int16 = (int16)g_ref_vibrotactile[1].pwm;
 28368              		.loc 1 4560 0
 28369 0020 0F4B     		ldr	r3, .L1124
 28370 0022 5B68     		ldr	r3, [r3, #4]
 28371 0024 1BB2     		sxth	r3, r3
 28372 0026 FB80     		strh	r3, [r7, #6]	@ movhi
4561:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 28373              		.loc 1 4561 0
 28374 0028 BB1D     		adds	r3, r7, #6
 28375 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 28376 002c 3B71     		strb	r3, [r7, #4]
4562:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 28377              		.loc 1 4562 0
 28378 002e BB1D     		adds	r3, r7, #6
 28379 0030 0133     		adds	r3, r3, #1
 28380 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 28381 0034 FB70     		strb	r3, [r7, #3]
4563:..\src/command_processing.c ****     
4564:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4565:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 28382              		.loc 1 4565 0
 28383 0036 3B46     		mov	r3, r7
 28384 0038 0521     		movs	r1, #5
 28385 003a 1846     		mov	r0, r3
 28386 003c FFF7FEFF 		bl	LCRChecksum
 28387 0040 0346     		mov	r3, r0
 28388 0042 7B71     		strb	r3, [r7, #5]
4566:..\src/command_processing.c ****     
4567:..\src/command_processing.c ****     commWriteID(packet_data, 6, g_mem.dev.id -1);    
 28389              		.loc 1 4567 0
 28390 0044 074B     		ldr	r3, .L1124+4
 28391 0046 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 28392 004a 013B     		subs	r3, r3, #1
 28393 004c DAB2     		uxtb	r2, r3
 28394 004e 3B46     		mov	r3, r7
 28395 0050 0621     		movs	r1, #6
 28396 0052 1846     		mov	r0, r3
 28397 0054 FFF7FEFF 		bl	commWriteID
4568:..\src/command_processing.c **** }
 28398              		.loc 1 4568 0
 28399 0058 00BF     		nop
 28400 005a 0837     		adds	r7, r7, #8
 28401              		.cfi_def_cfa_offset 8
 28402 005c BD46     		mov	sp, r7
 28403              		.cfi_def_cfa_register 13
 28404              		@ sp needed
 28405 005e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 625


 28406              	.L1125:
 28407              		.align	2
 28408              	.L1124:
 28409 0060 00000000 		.word	g_ref_vibrotactile
 28410 0064 00000000 		.word	g_mem
 28411              		.cfi_endproc
 28412              	.LFE123:
 28413              		.size	cmd_get_vibrotactile_inputs, .-cmd_get_vibrotactile_inputs
 28414              		.bss
 28415              		.align	2
 28416              	h_time.11318:
 28417 0000 00000000 		.space	4
 28418              		.align	1
 28419              	i.11359:
 28420 0004 0000     		.space	2
 28421 0006 0000     		.align	2
 28422              	last_aux_int16.11490:
 28423 0008 00000000 		.space	4
 28424              	fsm_state.11647:
 28425 000c 00       		.space	1
 28426 000d 000000   		.align	2
 28427              	cnt.11648:
 28428 0010 00000000 		.space	4
 28429              		.text
 28430              	.Letext0:
 28431              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 28432              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 28433              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 28434              		.file 6 "..\\src\\commands.h"
 28435              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 28436              		.file 8 "..\\src\\globals.h"
 28437              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 28438              		.section	.debug_info,"",%progbits
 28439              	.Ldebug_info0:
 28440 0000 D9270000 		.4byte	0x27d9
 28441 0004 0400     		.2byte	0x4
 28442 0006 00000000 		.4byte	.Ldebug_abbrev0
 28443 000a 04       		.byte	0x4
 28444 000b 01       		.uleb128 0x1
 28445 000c B30A0000 		.4byte	.LASF414
 28446 0010 0C       		.byte	0xc
 28447 0011 35160000 		.4byte	.LASF415
 28448 0015 FA030000 		.4byte	.LASF416
 28449 0019 00000000 		.4byte	.Ldebug_ranges0+0
 28450 001d 00000000 		.4byte	0
 28451 0021 00000000 		.4byte	.Ldebug_line0
 28452 0025 02       		.uleb128 0x2
 28453 0026 01       		.byte	0x1
 28454 0027 06       		.byte	0x6
 28455 0028 02050000 		.4byte	.LASF0
 28456 002c 02       		.uleb128 0x2
 28457 002d 01       		.byte	0x1
 28458 002e 08       		.byte	0x8
 28459 002f 7C050000 		.4byte	.LASF1
 28460 0033 02       		.uleb128 0x2
 28461 0034 02       		.byte	0x2
 28462 0035 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 626


 28463 0036 9E120000 		.4byte	.LASF2
 28464 003a 02       		.uleb128 0x2
 28465 003b 02       		.byte	0x2
 28466 003c 07       		.byte	0x7
 28467 003d 27150000 		.4byte	.LASF3
 28468 0041 03       		.uleb128 0x3
 28469 0042 F3150000 		.4byte	.LASF5
 28470 0046 03       		.byte	0x3
 28471 0047 3F       		.byte	0x3f
 28472 0048 4C000000 		.4byte	0x4c
 28473 004c 02       		.uleb128 0x2
 28474 004d 04       		.byte	0x4
 28475 004e 05       		.byte	0x5
 28476 004f 5B030000 		.4byte	.LASF4
 28477 0053 03       		.uleb128 0x3
 28478 0054 7E0B0000 		.4byte	.LASF6
 28479 0058 03       		.byte	0x3
 28480 0059 41       		.byte	0x41
 28481 005a 5E000000 		.4byte	0x5e
 28482 005e 02       		.uleb128 0x2
 28483 005f 04       		.byte	0x4
 28484 0060 07       		.byte	0x7
 28485 0061 51090000 		.4byte	.LASF7
 28486 0065 02       		.uleb128 0x2
 28487 0066 08       		.byte	0x8
 28488 0067 05       		.byte	0x5
 28489 0068 890B0000 		.4byte	.LASF8
 28490 006c 02       		.uleb128 0x2
 28491 006d 08       		.byte	0x8
 28492 006e 07       		.byte	0x7
 28493 006f 980F0000 		.4byte	.LASF9
 28494 0073 04       		.uleb128 0x4
 28495 0074 04       		.byte	0x4
 28496 0075 05       		.byte	0x5
 28497 0076 696E7400 		.ascii	"int\000"
 28498 007a 02       		.uleb128 0x2
 28499 007b 04       		.byte	0x4
 28500 007c 07       		.byte	0x7
 28501 007d C60C0000 		.4byte	.LASF10
 28502 0081 03       		.uleb128 0x3
 28503 0082 E0000000 		.4byte	.LASF11
 28504 0086 04       		.byte	0x4
 28505 0087 2C       		.byte	0x2c
 28506 0088 41000000 		.4byte	0x41
 28507 008c 03       		.uleb128 0x3
 28508 008d 95140000 		.4byte	.LASF12
 28509 0091 04       		.byte	0x4
 28510 0092 30       		.byte	0x30
 28511 0093 53000000 		.4byte	0x53
 28512 0097 05       		.uleb128 0x5
 28513 0098 80120000 		.4byte	.LASF13
 28514 009c 05       		.byte	0x5
 28515 009d E401     		.2byte	0x1e4
 28516 009f 2C000000 		.4byte	0x2c
 28517 00a3 05       		.uleb128 0x5
 28518 00a4 98160000 		.4byte	.LASF14
 28519 00a8 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 627


 28520 00a9 E501     		.2byte	0x1e5
 28521 00ab 3A000000 		.4byte	0x3a
 28522 00af 05       		.uleb128 0x5
 28523 00b0 16010000 		.4byte	.LASF15
 28524 00b4 05       		.byte	0x5
 28525 00b5 E601     		.2byte	0x1e6
 28526 00b7 5E000000 		.4byte	0x5e
 28527 00bb 05       		.uleb128 0x5
 28528 00bc 24020000 		.4byte	.LASF16
 28529 00c0 05       		.byte	0x5
 28530 00c1 E701     		.2byte	0x1e7
 28531 00c3 25000000 		.4byte	0x25
 28532 00c7 05       		.uleb128 0x5
 28533 00c8 F5130000 		.4byte	.LASF17
 28534 00cc 05       		.byte	0x5
 28535 00cd E801     		.2byte	0x1e8
 28536 00cf 33000000 		.4byte	0x33
 28537 00d3 05       		.uleb128 0x5
 28538 00d4 81150000 		.4byte	.LASF18
 28539 00d8 05       		.byte	0x5
 28540 00d9 E901     		.2byte	0x1e9
 28541 00db 4C000000 		.4byte	0x4c
 28542 00df 05       		.uleb128 0x5
 28543 00e0 E2030000 		.4byte	.LASF19
 28544 00e4 05       		.byte	0x5
 28545 00e5 EA01     		.2byte	0x1ea
 28546 00e7 EB000000 		.4byte	0xeb
 28547 00eb 02       		.uleb128 0x2
 28548 00ec 04       		.byte	0x4
 28549 00ed 04       		.byte	0x4
 28550 00ee 6F0C0000 		.4byte	.LASF20
 28551 00f2 02       		.uleb128 0x2
 28552 00f3 08       		.byte	0x8
 28553 00f4 04       		.byte	0x4
 28554 00f5 E10B0000 		.4byte	.LASF21
 28555 00f9 02       		.uleb128 0x2
 28556 00fa 01       		.byte	0x1
 28557 00fb 08       		.byte	0x8
 28558 00fc 58060000 		.4byte	.LASF22
 28559 0100 05       		.uleb128 0x5
 28560 0101 8D100000 		.4byte	.LASF23
 28561 0105 05       		.byte	0x5
 28562 0106 8E02     		.2byte	0x28e
 28563 0108 0C010000 		.4byte	0x10c
 28564 010c 06       		.uleb128 0x6
 28565 010d 97000000 		.4byte	0x97
 28566 0111 02       		.uleb128 0x2
 28567 0112 08       		.byte	0x8
 28568 0113 04       		.byte	0x4
 28569 0114 840E0000 		.4byte	.LASF24
 28570 0118 02       		.uleb128 0x2
 28571 0119 04       		.byte	0x4
 28572 011a 07       		.byte	0x7
 28573 011b 47000000 		.4byte	.LASF25
 28574 011f 07       		.uleb128 0x7
 28575 0120 04       		.byte	0x4
 28576 0121 F9000000 		.4byte	0xf9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 628


 28577 0125 07       		.uleb128 0x7
 28578 0126 04       		.byte	0x4
 28579 0127 2B010000 		.4byte	0x12b
 28580 012b 08       		.uleb128 0x8
 28581 012c F9000000 		.4byte	0xf9
 28582 0130 09       		.uleb128 0x9
 28583 0131 F9000000 		.4byte	0xf9
 28584 0135 40010000 		.4byte	0x140
 28585 0139 0A       		.uleb128 0xa
 28586 013a 18010000 		.4byte	0x118
 28587 013e 19       		.byte	0x19
 28588 013f 00       		.byte	0
 28589 0140 09       		.uleb128 0x9
 28590 0141 F9000000 		.4byte	0xf9
 28591 0145 50010000 		.4byte	0x150
 28592 0149 0A       		.uleb128 0xa
 28593 014a 18010000 		.4byte	0x118
 28594 014e 07       		.byte	0x7
 28595 014f 00       		.byte	0
 28596 0150 0B       		.uleb128 0xb
 28597 0151 180D0000 		.4byte	.LASF60
 28598 0155 01       		.byte	0x1
 28599 0156 2C000000 		.4byte	0x2c
 28600 015a 06       		.byte	0x6
 28601 015b 42       		.byte	0x42
 28602 015c 2D020000 		.4byte	0x22d
 28603 0160 0C       		.uleb128 0xc
 28604 0161 B2160000 		.4byte	.LASF26
 28605 0165 00       		.byte	0
 28606 0166 0C       		.uleb128 0xc
 28607 0167 2F130000 		.4byte	.LASF27
 28608 016b 01       		.byte	0x1
 28609 016c 0C       		.uleb128 0xc
 28610 016d 2D090000 		.4byte	.LASF28
 28611 0171 03       		.byte	0x3
 28612 0172 0C       		.uleb128 0xc
 28613 0173 EC050000 		.4byte	.LASF29
 28614 0177 04       		.byte	0x4
 28615 0178 0C       		.uleb128 0xc
 28616 0179 C6100000 		.4byte	.LASF30
 28617 017d 05       		.byte	0x5
 28618 017e 0C       		.uleb128 0xc
 28619 017f 5B0A0000 		.4byte	.LASF31
 28620 0183 06       		.byte	0x6
 28621 0184 0C       		.uleb128 0xc
 28622 0185 63090000 		.4byte	.LASF32
 28623 0189 09       		.byte	0x9
 28624 018a 0C       		.uleb128 0xc
 28625 018b 5D000000 		.4byte	.LASF33
 28626 018f 0A       		.byte	0xa
 28627 0190 0C       		.uleb128 0xc
 28628 0191 D7130000 		.4byte	.LASF34
 28629 0195 0C       		.byte	0xc
 28630 0196 0C       		.uleb128 0xc
 28631 0197 E40E0000 		.4byte	.LASF35
 28632 019b 0D       		.byte	0xd
 28633 019c 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 629


 28634 019d A3000000 		.4byte	.LASF36
 28635 01a1 80       		.byte	0x80
 28636 01a2 0C       		.uleb128 0xc
 28637 01a3 47060000 		.4byte	.LASF37
 28638 01a7 81       		.byte	0x81
 28639 01a8 0C       		.uleb128 0xc
 28640 01a9 99070000 		.4byte	.LASF38
 28641 01ad 82       		.byte	0x82
 28642 01ae 0C       		.uleb128 0xc
 28643 01af F9120000 		.4byte	.LASF39
 28644 01b3 83       		.byte	0x83
 28645 01b4 0C       		.uleb128 0xc
 28646 01b5 49120000 		.4byte	.LASF40
 28647 01b9 84       		.byte	0x84
 28648 01ba 0C       		.uleb128 0xc
 28649 01bb 4E040000 		.4byte	.LASF41
 28650 01bf 85       		.byte	0x85
 28651 01c0 0C       		.uleb128 0xc
 28652 01c1 9D0A0000 		.4byte	.LASF42
 28653 01c5 86       		.byte	0x86
 28654 01c6 0C       		.uleb128 0xc
 28655 01c7 3B0A0000 		.4byte	.LASF43
 28656 01cb 88       		.byte	0x88
 28657 01cc 0C       		.uleb128 0xc
 28658 01cd B8130000 		.4byte	.LASF44
 28659 01d1 89       		.byte	0x89
 28660 01d2 0C       		.uleb128 0xc
 28661 01d3 F60F0000 		.4byte	.LASF45
 28662 01d7 8B       		.byte	0x8b
 28663 01d8 0C       		.uleb128 0xc
 28664 01d9 420E0000 		.4byte	.LASF46
 28665 01dd 8C       		.byte	0x8c
 28666 01de 0C       		.uleb128 0xc
 28667 01df 590B0000 		.4byte	.LASF47
 28668 01e3 8E       		.byte	0x8e
 28669 01e4 0C       		.uleb128 0xc
 28670 01e5 2E100000 		.4byte	.LASF48
 28671 01e9 90       		.byte	0x90
 28672 01ea 0C       		.uleb128 0xc
 28673 01eb C6020000 		.4byte	.LASF49
 28674 01ef 92       		.byte	0x92
 28675 01f0 0C       		.uleb128 0xc
 28676 01f1 F6140000 		.4byte	.LASF50
 28677 01f5 A1       		.byte	0xa1
 28678 01f6 0C       		.uleb128 0xc
 28679 01f7 02120000 		.4byte	.LASF51
 28680 01fb A2       		.byte	0xa2
 28681 01fc 0C       		.uleb128 0xc
 28682 01fd 760D0000 		.4byte	.LASF52
 28683 0201 A3       		.byte	0xa3
 28684 0202 0C       		.uleb128 0xc
 28685 0203 1E120000 		.4byte	.LASF53
 28686 0207 A4       		.byte	0xa4
 28687 0208 0C       		.uleb128 0xc
 28688 0209 1E130000 		.4byte	.LASF54
 28689 020d A5       		.byte	0xa5
 28690 020e 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 630


 28691 020f B6110000 		.4byte	.LASF55
 28692 0213 A6       		.byte	0xa6
 28693 0214 0C       		.uleb128 0xc
 28694 0215 E80B0000 		.4byte	.LASF56
 28695 0219 A7       		.byte	0xa7
 28696 021a 0C       		.uleb128 0xc
 28697 021b 7E0C0000 		.4byte	.LASF57
 28698 021f A8       		.byte	0xa8
 28699 0220 0C       		.uleb128 0xc
 28700 0221 BC050000 		.4byte	.LASF58
 28701 0225 FA       		.byte	0xfa
 28702 0226 0C       		.uleb128 0xc
 28703 0227 8A050000 		.4byte	.LASF59
 28704 022b FB       		.byte	0xfb
 28705 022c 00       		.byte	0
 28706 022d 0B       		.uleb128 0xb
 28707 022e 5F160000 		.4byte	.LASF61
 28708 0232 01       		.byte	0x1
 28709 0233 2C000000 		.4byte	0x2c
 28710 0237 06       		.byte	0x6
 28711 0238 94       		.byte	0x94
 28712 0239 6E020000 		.4byte	0x26e
 28713 023d 0C       		.uleb128 0xc
 28714 023e 35080000 		.4byte	.LASF62
 28715 0242 00       		.byte	0
 28716 0243 0C       		.uleb128 0xc
 28717 0244 560D0000 		.4byte	.LASF63
 28718 0248 01       		.byte	0x1
 28719 0249 0C       		.uleb128 0xc
 28720 024a D7020000 		.4byte	.LASF64
 28721 024e 02       		.byte	0x2
 28722 024f 0C       		.uleb128 0xc
 28723 0250 00020000 		.4byte	.LASF65
 28724 0254 03       		.byte	0x3
 28725 0255 0C       		.uleb128 0xc
 28726 0256 A4010000 		.4byte	.LASF66
 28727 025a 04       		.byte	0x4
 28728 025b 0C       		.uleb128 0xc
 28729 025c 8B000000 		.4byte	.LASF67
 28730 0260 05       		.byte	0x5
 28731 0261 0C       		.uleb128 0xc
 28732 0262 8B090000 		.4byte	.LASF68
 28733 0266 06       		.byte	0x6
 28734 0267 0C       		.uleb128 0xc
 28735 0268 E3110000 		.4byte	.LASF69
 28736 026c 07       		.byte	0x7
 28737 026d 00       		.byte	0
 28738 026e 0B       		.uleb128 0xb
 28739 026f 970B0000 		.4byte	.LASF70
 28740 0273 01       		.byte	0x1
 28741 0274 2C000000 		.4byte	0x2c
 28742 0278 06       		.byte	0x6
 28743 0279 A8       		.byte	0xa8
 28744 027a 97020000 		.4byte	0x297
 28745 027e 0C       		.uleb128 0xc
 28746 027f D8150000 		.4byte	.LASF71
 28747 0283 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 631


 28748 0284 0C       		.uleb128 0xc
 28749 0285 2F0A0000 		.4byte	.LASF72
 28750 0289 01       		.byte	0x1
 28751 028a 0C       		.uleb128 0xc
 28752 028b 740E0000 		.4byte	.LASF73
 28753 028f 02       		.byte	0x2
 28754 0290 0C       		.uleb128 0xc
 28755 0291 18090000 		.4byte	.LASF74
 28756 0295 03       		.byte	0x3
 28757 0296 00       		.byte	0
 28758 0297 0B       		.uleb128 0xb
 28759 0298 44050000 		.4byte	.LASF75
 28760 029c 01       		.byte	0x1
 28761 029d 2C000000 		.4byte	0x2c
 28762 02a1 06       		.byte	0x6
 28763 02a2 B2       		.byte	0xb2
 28764 02a3 B4020000 		.4byte	0x2b4
 28765 02a7 0C       		.uleb128 0xc
 28766 02a8 D9110000 		.4byte	.LASF76
 28767 02ac 00       		.byte	0
 28768 02ad 0C       		.uleb128 0xc
 28769 02ae C30B0000 		.4byte	.LASF77
 28770 02b2 01       		.byte	0x1
 28771 02b3 00       		.byte	0
 28772 02b4 0B       		.uleb128 0xb
 28773 02b5 3D0F0000 		.4byte	.LASF78
 28774 02b9 01       		.byte	0x1
 28775 02ba 2C000000 		.4byte	0x2c
 28776 02be 06       		.byte	0x6
 28777 02bf B7       		.byte	0xb7
 28778 02c0 D1020000 		.4byte	0x2d1
 28779 02c4 0C       		.uleb128 0xc
 28780 02c5 1A080000 		.4byte	.LASF79
 28781 02c9 00       		.byte	0
 28782 02ca 0C       		.uleb128 0xc
 28783 02cb EC090000 		.4byte	.LASF80
 28784 02cf 01       		.byte	0x1
 28785 02d0 00       		.byte	0
 28786 02d1 0B       		.uleb128 0xb
 28787 02d2 EA130000 		.4byte	.LASF81
 28788 02d6 01       		.byte	0x1
 28789 02d7 2C000000 		.4byte	0x2c
 28790 02db 06       		.byte	0x6
 28791 02dc BF       		.byte	0xbf
 28792 02dd 1E030000 		.4byte	0x31e
 28793 02e1 0C       		.uleb128 0xc
 28794 02e2 F3090000 		.4byte	.LASF82
 28795 02e6 00       		.byte	0
 28796 02e7 0C       		.uleb128 0xc
 28797 02e8 6D160000 		.4byte	.LASF83
 28798 02ec 01       		.byte	0x1
 28799 02ed 0C       		.uleb128 0xc
 28800 02ee A70B0000 		.4byte	.LASF84
 28801 02f2 02       		.byte	0x2
 28802 02f3 0C       		.uleb128 0xc
 28803 02f4 1E0E0000 		.4byte	.LASF85
 28804 02f8 03       		.byte	0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 632


 28805 02f9 0C       		.uleb128 0xc
 28806 02fa 230D0000 		.4byte	.LASF86
 28807 02fe 04       		.byte	0x4
 28808 02ff 0C       		.uleb128 0xc
 28809 0300 AF0F0000 		.4byte	.LASF87
 28810 0304 05       		.byte	0x5
 28811 0305 0C       		.uleb128 0xc
 28812 0306 900E0000 		.4byte	.LASF88
 28813 030a 06       		.byte	0x6
 28814 030b 0C       		.uleb128 0xc
 28815 030c BF0D0000 		.4byte	.LASF89
 28816 0310 07       		.byte	0x7
 28817 0311 0C       		.uleb128 0xc
 28818 0312 DA070000 		.4byte	.LASF90
 28819 0316 08       		.byte	0x8
 28820 0317 0C       		.uleb128 0xc
 28821 0318 0C090000 		.4byte	.LASF91
 28822 031c 09       		.byte	0x9
 28823 031d 00       		.byte	0
 28824 031e 03       		.uleb128 0x3
 28825 031f B9150000 		.4byte	.LASF92
 28826 0323 07       		.byte	0x7
 28827 0324 7E       		.byte	0x7e
 28828 0325 29030000 		.4byte	0x329
 28829 0329 0D       		.uleb128 0xd
 28830 032a B9150000 		.4byte	.LASF92
 28831 032e 07       		.uleb128 0x7
 28832 032f 04       		.byte	0x4
 28833 0330 1E030000 		.4byte	0x31e
 28834 0334 0E       		.uleb128 0xe
 28835 0335 410B0000 		.4byte	.LASF95
 28836 0339 10       		.byte	0x10
 28837 033a 08       		.byte	0x8
 28838 033b EB       		.byte	0xeb
 28839 033c 71030000 		.4byte	0x371
 28840 0340 0F       		.uleb128 0xf
 28841 0341 706F7300 		.ascii	"pos\000"
 28842 0345 08       		.byte	0x8
 28843 0346 EC       		.byte	0xec
 28844 0347 D3000000 		.4byte	0xd3
 28845 034b 00       		.byte	0
 28846 034c 10       		.uleb128 0x10
 28847 034d 1F0A0000 		.4byte	.LASF93
 28848 0351 08       		.byte	0x8
 28849 0352 ED       		.byte	0xed
 28850 0353 D3000000 		.4byte	0xd3
 28851 0357 04       		.byte	0x4
 28852 0358 0F       		.uleb128 0xf
 28853 0359 70776D00 		.ascii	"pwm\000"
 28854 035d 08       		.byte	0x8
 28855 035e EE       		.byte	0xee
 28856 035f D3000000 		.4byte	0xd3
 28857 0363 08       		.byte	0x8
 28858 0364 10       		.uleb128 0x10
 28859 0365 F00F0000 		.4byte	.LASF94
 28860 0369 08       		.byte	0x8
 28861 036a EF       		.byte	0xef
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 633


 28862 036b 97000000 		.4byte	0x97
 28863 036f 0C       		.byte	0xc
 28864 0370 00       		.byte	0
 28865 0371 0E       		.uleb128 0xe
 28866 0372 AE110000 		.4byte	.LASF96
 28867 0376 34       		.byte	0x34
 28868 0377 08       		.byte	0x8
 28869 0378 F6       		.byte	0xf6
 28870 0379 D2030000 		.4byte	0x3d2
 28871 037d 0F       		.uleb128 0xf
 28872 037e 706F7300 		.ascii	"pos\000"
 28873 0382 08       		.byte	0x8
 28874 0383 F7       		.byte	0xf7
 28875 0384 D2030000 		.4byte	0x3d2
 28876 0388 00       		.byte	0
 28877 0389 10       		.uleb128 0x10
 28878 038a 1F0A0000 		.4byte	.LASF93
 28879 038e 08       		.byte	0x8
 28880 038f F8       		.byte	0xf8
 28881 0390 D3000000 		.4byte	0xd3
 28882 0394 0C       		.byte	0xc
 28883 0395 10       		.uleb128 0x10
 28884 0396 37140000 		.4byte	.LASF97
 28885 039a 08       		.byte	0x8
 28886 039b F9       		.byte	0xf9
 28887 039c D3000000 		.4byte	0xd3
 28888 03a0 10       		.byte	0x10
 28889 03a1 10       		.uleb128 0x10
 28890 03a2 81090000 		.4byte	.LASF98
 28891 03a6 08       		.byte	0x8
 28892 03a7 FA       		.byte	0xfa
 28893 03a8 D3000000 		.4byte	0xd3
 28894 03ac 14       		.byte	0x14
 28895 03ad 0F       		.uleb128 0xf
 28896 03ae 726F7400 		.ascii	"rot\000"
 28897 03b2 08       		.byte	0x8
 28898 03b3 FB       		.byte	0xfb
 28899 03b4 E2030000 		.4byte	0x3e2
 28900 03b8 18       		.byte	0x18
 28901 03b9 0F       		.uleb128 0xf
 28902 03ba 76656C00 		.ascii	"vel\000"
 28903 03be 08       		.byte	0x8
 28904 03bf FC       		.byte	0xfc
 28905 03c0 D2030000 		.4byte	0x3d2
 28906 03c4 1C       		.byte	0x1c
 28907 03c5 0F       		.uleb128 0xf
 28908 03c6 61636300 		.ascii	"acc\000"
 28909 03ca 08       		.byte	0x8
 28910 03cb FD       		.byte	0xfd
 28911 03cc D2030000 		.4byte	0x3d2
 28912 03d0 28       		.byte	0x28
 28913 03d1 00       		.byte	0
 28914 03d2 09       		.uleb128 0x9
 28915 03d3 D3000000 		.4byte	0xd3
 28916 03d7 E2030000 		.4byte	0x3e2
 28917 03db 0A       		.uleb128 0xa
 28918 03dc 18010000 		.4byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 634


 28919 03e0 02       		.byte	0x2
 28920 03e1 00       		.byte	0
 28921 03e2 09       		.uleb128 0x9
 28922 03e3 BB000000 		.4byte	0xbb
 28923 03e7 F2030000 		.4byte	0x3f2
 28924 03eb 0A       		.uleb128 0xa
 28925 03ec 18010000 		.4byte	0x118
 28926 03f0 02       		.byte	0x2
 28927 03f1 00       		.byte	0
 28928 03f2 11       		.uleb128 0x11
 28929 03f3 A20C0000 		.4byte	.LASF99
 28930 03f7 28       		.byte	0x28
 28931 03f8 08       		.byte	0x8
 28932 03f9 0001     		.2byte	0x100
 28933 03fb 27040000 		.4byte	0x427
 28934 03ff 12       		.uleb128 0x12
 28935 0400 656D6700 		.ascii	"emg\000"
 28936 0404 08       		.byte	0x8
 28937 0405 0101     		.2byte	0x101
 28938 0407 27040000 		.4byte	0x427
 28939 040b 00       		.byte	0
 28940 040c 13       		.uleb128 0x13
 28941 040d 160E0000 		.4byte	.LASF100
 28942 0411 08       		.byte	0x8
 28943 0412 0201     		.2byte	0x102
 28944 0414 37040000 		.4byte	0x437
 28945 0418 08       		.byte	0x8
 28946 0419 13       		.uleb128 0x13
 28947 041a DA120000 		.4byte	.LASF101
 28948 041e 08       		.byte	0x8
 28949 041f 0301     		.2byte	0x103
 28950 0421 27040000 		.4byte	0x427
 28951 0425 20       		.byte	0x20
 28952 0426 00       		.byte	0
 28953 0427 09       		.uleb128 0x9
 28954 0428 D3000000 		.4byte	0xd3
 28955 042c 37040000 		.4byte	0x437
 28956 0430 0A       		.uleb128 0xa
 28957 0431 18010000 		.4byte	0x118
 28958 0435 01       		.byte	0x1
 28959 0436 00       		.byte	0
 28960 0437 09       		.uleb128 0x9
 28961 0438 D3000000 		.4byte	0xd3
 28962 043c 47040000 		.4byte	0x447
 28963 0440 0A       		.uleb128 0xa
 28964 0441 18010000 		.4byte	0x118
 28965 0445 05       		.byte	0x5
 28966 0446 00       		.byte	0
 28967 0447 11       		.uleb128 0x11
 28968 0448 C9060000 		.4byte	.LASF102
 28969 044c 04       		.byte	0x4
 28970 044d 08       		.byte	0x8
 28971 044e 0601     		.2byte	0x106
 28972 0450 62040000 		.4byte	0x462
 28973 0454 13       		.uleb128 0x13
 28974 0455 3E060000 		.4byte	.LASF103
 28975 0459 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 635


 28976 045a 0701     		.2byte	0x107
 28977 045c EB000000 		.4byte	0xeb
 28978 0460 00       		.byte	0
 28979 0461 00       		.byte	0
 28980 0462 11       		.uleb128 0x11
 28981 0463 ED000000 		.4byte	.LASF104
 28982 0467 86       		.byte	0x86
 28983 0468 08       		.byte	0x8
 28984 0469 0E01     		.2byte	0x10e
 28985 046b A4040000 		.4byte	0x4a4
 28986 046f 13       		.uleb128 0x13
 28987 0470 A8070000 		.4byte	.LASF105
 28988 0474 08       		.byte	0x8
 28989 0475 0F01     		.2byte	0x10f
 28990 0477 A4040000 		.4byte	0x4a4
 28991 047b 00       		.byte	0
 28992 047c 13       		.uleb128 0x13
 28993 047d C50F0000 		.4byte	.LASF106
 28994 0481 08       		.byte	0x8
 28995 0482 1001     		.2byte	0x110
 28996 0484 C7000000 		.4byte	0xc7
 28997 0488 80       		.byte	0x80
 28998 0489 12       		.uleb128 0x12
 28999 048a 696E6400 		.ascii	"ind\000"
 29000 048e 08       		.byte	0x8
 29001 048f 1101     		.2byte	0x111
 29002 0491 C7000000 		.4byte	0xc7
 29003 0495 82       		.byte	0x82
 29004 0496 13       		.uleb128 0x13
 29005 0497 A8020000 		.4byte	.LASF107
 29006 049b 08       		.byte	0x8
 29007 049c 1201     		.2byte	0x112
 29008 049e 97000000 		.4byte	0x97
 29009 04a2 84       		.byte	0x84
 29010 04a3 00       		.byte	0
 29011 04a4 09       		.uleb128 0x9
 29012 04a5 97000000 		.4byte	0x97
 29013 04a9 B4040000 		.4byte	0x4b4
 29014 04ad 0A       		.uleb128 0xa
 29015 04ae 18010000 		.4byte	0x118
 29016 04b2 7F       		.byte	0x7f
 29017 04b3 00       		.byte	0
 29018 04b4 11       		.uleb128 0x11
 29019 04b5 D0030000 		.4byte	.LASF108
 29020 04b9 70       		.byte	0x70
 29021 04ba 08       		.byte	0x8
 29022 04bb 1B01     		.2byte	0x11b
 29023 04bd 51050000 		.4byte	0x551
 29024 04c1 13       		.uleb128 0x13
 29025 04c2 17000000 		.4byte	.LASF109
 29026 04c6 08       		.byte	0x8
 29027 04c7 1C01     		.2byte	0x11c
 29028 04c9 51050000 		.4byte	0x551
 29029 04cd 00       		.byte	0
 29030 04ce 13       		.uleb128 0x13
 29031 04cf 61020000 		.4byte	.LASF110
 29032 04d3 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 636


 29033 04d4 1D01     		.2byte	0x11d
 29034 04d6 61050000 		.4byte	0x561
 29035 04da 08       		.byte	0x8
 29036 04db 13       		.uleb128 0x13
 29037 04dc 670E0000 		.4byte	.LASF111
 29038 04e0 08       		.byte	0x8
 29039 04e1 1E01     		.2byte	0x11e
 29040 04e3 71050000 		.4byte	0x571
 29041 04e7 30       		.byte	0x30
 29042 04e8 13       		.uleb128 0x13
 29043 04e9 C4010000 		.4byte	.LASF112
 29044 04ed 08       		.byte	0x8
 29045 04ee 1F01     		.2byte	0x11f
 29046 04f0 AF000000 		.4byte	0xaf
 29047 04f4 40       		.byte	0x40
 29048 04f5 13       		.uleb128 0x13
 29049 04f6 0C160000 		.4byte	.LASF113
 29050 04fa 08       		.byte	0x8
 29051 04fb 2001     		.2byte	0x120
 29052 04fd AF000000 		.4byte	0xaf
 29053 0501 44       		.byte	0x44
 29054 0502 13       		.uleb128 0x13
 29055 0503 08010000 		.4byte	.LASF114
 29056 0507 08       		.byte	0x8
 29057 0508 2101     		.2byte	0x121
 29058 050a AF000000 		.4byte	0xaf
 29059 050e 48       		.byte	0x48
 29060 050f 13       		.uleb128 0x13
 29061 0510 9F090000 		.4byte	.LASF115
 29062 0514 08       		.byte	0x8
 29063 0515 2201     		.2byte	0x122
 29064 0517 AF000000 		.4byte	0xaf
 29065 051b 4C       		.byte	0x4c
 29066 051c 13       		.uleb128 0x13
 29067 051d 50000000 		.4byte	.LASF116
 29068 0521 08       		.byte	0x8
 29069 0522 2301     		.2byte	0x123
 29070 0524 AF000000 		.4byte	0xaf
 29071 0528 50       		.byte	0x50
 29072 0529 13       		.uleb128 0x13
 29073 052a 0E030000 		.4byte	.LASF117
 29074 052e 08       		.byte	0x8
 29075 052f 2401     		.2byte	0x124
 29076 0531 51050000 		.4byte	0x551
 29077 0535 54       		.byte	0x54
 29078 0536 13       		.uleb128 0x13
 29079 0537 C30E0000 		.4byte	.LASF118
 29080 053b 08       		.byte	0x8
 29081 053c 2501     		.2byte	0x125
 29082 053e 51050000 		.4byte	0x551
 29083 0542 5C       		.byte	0x5c
 29084 0543 13       		.uleb128 0x13
 29085 0544 AD030000 		.4byte	.LASF119
 29086 0548 08       		.byte	0x8
 29087 0549 2601     		.2byte	0x126
 29088 054b 81050000 		.4byte	0x581
 29089 054f 64       		.byte	0x64
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 637


 29090 0550 00       		.byte	0
 29091 0551 09       		.uleb128 0x9
 29092 0552 AF000000 		.4byte	0xaf
 29093 0556 61050000 		.4byte	0x561
 29094 055a 0A       		.uleb128 0xa
 29095 055b 18010000 		.4byte	0x118
 29096 055f 01       		.byte	0x1
 29097 0560 00       		.byte	0
 29098 0561 09       		.uleb128 0x9
 29099 0562 AF000000 		.4byte	0xaf
 29100 0566 71050000 		.4byte	0x571
 29101 056a 0A       		.uleb128 0xa
 29102 056b 18010000 		.4byte	0x118
 29103 056f 09       		.byte	0x9
 29104 0570 00       		.byte	0
 29105 0571 09       		.uleb128 0x9
 29106 0572 AF000000 		.4byte	0xaf
 29107 0576 81050000 		.4byte	0x581
 29108 057a 0A       		.uleb128 0xa
 29109 057b 18010000 		.4byte	0x118
 29110 057f 03       		.byte	0x3
 29111 0580 00       		.byte	0
 29112 0581 09       		.uleb128 0x9
 29113 0582 97000000 		.4byte	0x97
 29114 0586 91050000 		.4byte	0x591
 29115 058a 0A       		.uleb128 0xa
 29116 058b 18010000 		.4byte	0x118
 29117 058f 0B       		.byte	0xb
 29118 0590 00       		.byte	0
 29119 0591 11       		.uleb128 0x11
 29120 0592 3B070000 		.4byte	.LASF120
 29121 0596 10       		.byte	0x10
 29122 0597 08       		.byte	0x8
 29123 0598 2D01     		.2byte	0x12d
 29124 059a 20060000 		.4byte	0x620
 29125 059e 12       		.uleb128 0x12
 29126 059f 696400   		.ascii	"id\000"
 29127 05a2 08       		.byte	0x8
 29128 05a3 2E01     		.2byte	0x12e
 29129 05a5 97000000 		.4byte	0x97
 29130 05a9 00       		.byte	0
 29131 05aa 13       		.uleb128 0x13
 29132 05ab 08130000 		.4byte	.LASF121
 29133 05af 08       		.byte	0x8
 29134 05b0 2F01     		.2byte	0x12f
 29135 05b2 20060000 		.4byte	0x620
 29136 05b6 01       		.byte	0x1
 29137 05b7 13       		.uleb128 0x13
 29138 05b8 84130000 		.4byte	.LASF122
 29139 05bc 08       		.byte	0x8
 29140 05bd 3001     		.2byte	0x130
 29141 05bf 20060000 		.4byte	0x620
 29142 05c3 04       		.byte	0x4
 29143 05c4 13       		.uleb128 0x13
 29144 05c5 E1050000 		.4byte	.LASF123
 29145 05c9 08       		.byte	0x8
 29146 05ca 3101     		.2byte	0x131
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 638


 29147 05cc 97000000 		.4byte	0x97
 29148 05d0 07       		.byte	0x7
 29149 05d1 13       		.uleb128 0x13
 29150 05d2 7C030000 		.4byte	.LASF124
 29151 05d6 08       		.byte	0x8
 29152 05d7 3201     		.2byte	0x132
 29153 05d9 97000000 		.4byte	0x97
 29154 05dd 08       		.byte	0x8
 29155 05de 13       		.uleb128 0x13
 29156 05df F3020000 		.4byte	.LASF125
 29157 05e3 08       		.byte	0x8
 29158 05e4 3301     		.2byte	0x133
 29159 05e6 97000000 		.4byte	0x97
 29160 05ea 09       		.byte	0x9
 29161 05eb 13       		.uleb128 0x13
 29162 05ec C9140000 		.4byte	.LASF126
 29163 05f0 08       		.byte	0x8
 29164 05f1 3401     		.2byte	0x134
 29165 05f3 97000000 		.4byte	0x97
 29166 05f7 0A       		.byte	0xa
 29167 05f8 13       		.uleb128 0x13
 29168 05f9 8D140000 		.4byte	.LASF127
 29169 05fd 08       		.byte	0x8
 29170 05fe 3501     		.2byte	0x135
 29171 0600 97000000 		.4byte	0x97
 29172 0604 0B       		.byte	0xb
 29173 0605 13       		.uleb128 0x13
 29174 0606 58110000 		.4byte	.LASF128
 29175 060a 08       		.byte	0x8
 29176 060b 3601     		.2byte	0x136
 29177 060d 97000000 		.4byte	0x97
 29178 0611 0C       		.byte	0xc
 29179 0612 13       		.uleb128 0x13
 29180 0613 AD030000 		.4byte	.LASF119
 29181 0617 08       		.byte	0x8
 29182 0618 3701     		.2byte	0x137
 29183 061a 20060000 		.4byte	0x620
 29184 061e 0D       		.byte	0xd
 29185 061f 00       		.byte	0
 29186 0620 09       		.uleb128 0x9
 29187 0621 97000000 		.4byte	0x97
 29188 0625 30060000 		.4byte	0x630
 29189 0629 0A       		.uleb128 0xa
 29190 062a 18010000 		.4byte	0x118
 29191 062e 02       		.byte	0x2
 29192 062f 00       		.byte	0
 29193 0630 11       		.uleb128 0x11
 29194 0631 A4150000 		.4byte	.LASF129
 29195 0635 70       		.byte	0x70
 29196 0636 08       		.byte	0x8
 29197 0637 3E01     		.2byte	0x13e
 29198 0639 AA070000 		.4byte	0x7aa
 29199 063d 12       		.uleb128 0x12
 29200 063e 6B5F7000 		.ascii	"k_p\000"
 29201 0642 08       		.byte	0x8
 29202 0643 3F01     		.2byte	0x13f
 29203 0645 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 639


 29204 0649 00       		.byte	0
 29205 064a 12       		.uleb128 0x12
 29206 064b 6B5F6900 		.ascii	"k_i\000"
 29207 064f 08       		.byte	0x8
 29208 0650 4001     		.2byte	0x140
 29209 0652 D3000000 		.4byte	0xd3
 29210 0656 04       		.byte	0x4
 29211 0657 12       		.uleb128 0x12
 29212 0658 6B5F6400 		.ascii	"k_d\000"
 29213 065c 08       		.byte	0x8
 29214 065d 4101     		.2byte	0x141
 29215 065f D3000000 		.4byte	0xd3
 29216 0663 08       		.byte	0x8
 29217 0664 13       		.uleb128 0x13
 29218 0665 3F100000 		.4byte	.LASF130
 29219 0669 08       		.byte	0x8
 29220 066a 4201     		.2byte	0x142
 29221 066c D3000000 		.4byte	0xd3
 29222 0670 0C       		.byte	0xc
 29223 0671 13       		.uleb128 0x13
 29224 0672 E9060000 		.4byte	.LASF131
 29225 0676 08       		.byte	0x8
 29226 0677 4301     		.2byte	0x143
 29227 0679 D3000000 		.4byte	0xd3
 29228 067d 10       		.byte	0x10
 29229 067e 13       		.uleb128 0x13
 29230 067f C3060000 		.4byte	.LASF132
 29231 0683 08       		.byte	0x8
 29232 0684 4401     		.2byte	0x144
 29233 0686 D3000000 		.4byte	0xd3
 29234 068a 14       		.byte	0x14
 29235 068b 13       		.uleb128 0x13
 29236 068c 30140000 		.4byte	.LASF133
 29237 0690 08       		.byte	0x8
 29238 0691 4501     		.2byte	0x145
 29239 0693 D3000000 		.4byte	0xd3
 29240 0697 18       		.byte	0x18
 29241 0698 13       		.uleb128 0x13
 29242 0699 92070000 		.4byte	.LASF134
 29243 069d 08       		.byte	0x8
 29244 069e 4601     		.2byte	0x146
 29245 06a0 D3000000 		.4byte	0xd3
 29246 06a4 1C       		.byte	0x1c
 29247 06a5 13       		.uleb128 0x13
 29248 06a6 CA120000 		.4byte	.LASF135
 29249 06aa 08       		.byte	0x8
 29250 06ab 4701     		.2byte	0x147
 29251 06ad D3000000 		.4byte	0xd3
 29252 06b1 20       		.byte	0x20
 29253 06b2 13       		.uleb128 0x13
 29254 06b3 AF070000 		.4byte	.LASF136
 29255 06b7 08       		.byte	0x8
 29256 06b8 4801     		.2byte	0x148
 29257 06ba D3000000 		.4byte	0xd3
 29258 06be 24       		.byte	0x24
 29259 06bf 13       		.uleb128 0x13
 29260 06c0 9E080000 		.4byte	.LASF137
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 640


 29261 06c4 08       		.byte	0x8
 29262 06c5 4901     		.2byte	0x149
 29263 06c7 D3000000 		.4byte	0xd3
 29264 06cb 28       		.byte	0x28
 29265 06cc 13       		.uleb128 0x13
 29266 06cd BB160000 		.4byte	.LASF138
 29267 06d1 08       		.byte	0x8
 29268 06d2 4A01     		.2byte	0x14a
 29269 06d4 D3000000 		.4byte	0xd3
 29270 06d8 2C       		.byte	0x2c
 29271 06d9 13       		.uleb128 0x13
 29272 06da D7090000 		.4byte	.LASF139
 29273 06de 08       		.byte	0x8
 29274 06df 4B01     		.2byte	0x14b
 29275 06e1 97000000 		.4byte	0x97
 29276 06e5 30       		.byte	0x30
 29277 06e6 13       		.uleb128 0x13
 29278 06e7 19140000 		.4byte	.LASF140
 29279 06eb 08       		.byte	0x8
 29280 06ec 4C01     		.2byte	0x14c
 29281 06ee 97000000 		.4byte	0x97
 29282 06f2 31       		.byte	0x31
 29283 06f3 13       		.uleb128 0x13
 29284 06f4 5F100000 		.4byte	.LASF141
 29285 06f8 08       		.byte	0x8
 29286 06f9 4D01     		.2byte	0x14d
 29287 06fb 97000000 		.4byte	0x97
 29288 06ff 32       		.byte	0x32
 29289 0700 13       		.uleb128 0x13
 29290 0701 C1150000 		.4byte	.LASF142
 29291 0705 08       		.byte	0x8
 29292 0706 4E01     		.2byte	0x14e
 29293 0708 97000000 		.4byte	0x97
 29294 070c 33       		.byte	0x33
 29295 070d 13       		.uleb128 0x13
 29296 070e 78010000 		.4byte	.LASF143
 29297 0712 08       		.byte	0x8
 29298 0713 4F01     		.2byte	0x14f
 29299 0715 D3000000 		.4byte	0xd3
 29300 0719 34       		.byte	0x34
 29301 071a 13       		.uleb128 0x13
 29302 071b 08070000 		.4byte	.LASF144
 29303 071f 08       		.byte	0x8
 29304 0720 5001     		.2byte	0x150
 29305 0722 D3000000 		.4byte	0xd3
 29306 0726 38       		.byte	0x38
 29307 0727 13       		.uleb128 0x13
 29308 0728 1D0C0000 		.4byte	.LASF145
 29309 072c 08       		.byte	0x8
 29310 072d 5101     		.2byte	0x151
 29311 072f D3000000 		.4byte	0xd3
 29312 0733 3C       		.byte	0x3c
 29313 0734 13       		.uleb128 0x13
 29314 0735 5D060000 		.4byte	.LASF146
 29315 0739 08       		.byte	0x8
 29316 073a 5201     		.2byte	0x152
 29317 073c D3000000 		.4byte	0xd3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 641


 29318 0740 40       		.byte	0x40
 29319 0741 13       		.uleb128 0x13
 29320 0742 B8010000 		.4byte	.LASF147
 29321 0746 08       		.byte	0x8
 29322 0747 5301     		.2byte	0x153
 29323 0749 AA070000 		.4byte	0x7aa
 29324 074d 44       		.byte	0x44
 29325 074e 13       		.uleb128 0x13
 29326 074f 51160000 		.4byte	.LASF148
 29327 0753 08       		.byte	0x8
 29328 0754 5401     		.2byte	0x154
 29329 0756 C7000000 		.4byte	0xc7
 29330 075a 5C       		.byte	0x5c
 29331 075b 13       		.uleb128 0x13
 29332 075c 240A0000 		.4byte	.LASF149
 29333 0760 08       		.byte	0x8
 29334 0761 5501     		.2byte	0x155
 29335 0763 97000000 		.4byte	0x97
 29336 0767 5E       		.byte	0x5e
 29337 0768 13       		.uleb128 0x13
 29338 0769 430D0000 		.4byte	.LASF150
 29339 076d 08       		.byte	0x8
 29340 076e 5601     		.2byte	0x156
 29341 0770 97000000 		.4byte	0x97
 29342 0774 5F       		.byte	0x5f
 29343 0775 13       		.uleb128 0x13
 29344 0776 05060000 		.4byte	.LASF151
 29345 077a 08       		.byte	0x8
 29346 077b 5701     		.2byte	0x157
 29347 077d 97000000 		.4byte	0x97
 29348 0781 60       		.byte	0x60
 29349 0782 13       		.uleb128 0x13
 29350 0783 B2060000 		.4byte	.LASF152
 29351 0787 08       		.byte	0x8
 29352 0788 5801     		.2byte	0x158
 29353 078a 97000000 		.4byte	0x97
 29354 078e 61       		.byte	0x61
 29355 078f 13       		.uleb128 0x13
 29356 0790 A6050000 		.4byte	.LASF153
 29357 0794 08       		.byte	0x8
 29358 0795 5901     		.2byte	0x159
 29359 0797 97000000 		.4byte	0x97
 29360 079b 62       		.byte	0x62
 29361 079c 13       		.uleb128 0x13
 29362 079d AD030000 		.4byte	.LASF119
 29363 07a1 08       		.byte	0x8
 29364 07a2 5A01     		.2byte	0x15a
 29365 07a4 BA070000 		.4byte	0x7ba
 29366 07a8 63       		.byte	0x63
 29367 07a9 00       		.byte	0
 29368 07aa 09       		.uleb128 0x9
 29369 07ab EB000000 		.4byte	0xeb
 29370 07af BA070000 		.4byte	0x7ba
 29371 07b3 0A       		.uleb128 0xa
 29372 07b4 18010000 		.4byte	0x118
 29373 07b8 05       		.byte	0x5
 29374 07b9 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 642


 29375 07ba 09       		.uleb128 0x9
 29376 07bb 97000000 		.4byte	0x97
 29377 07bf CA070000 		.4byte	0x7ca
 29378 07c3 0A       		.uleb128 0xa
 29379 07c4 18010000 		.4byte	0x118
 29380 07c8 0C       		.byte	0xc
 29381 07c9 00       		.byte	0
 29382 07ca 11       		.uleb128 0x11
 29383 07cb 3A150000 		.4byte	.LASF154
 29384 07cf 30       		.byte	0x30
 29385 07d0 08       		.byte	0x8
 29386 07d1 6101     		.2byte	0x161
 29387 07d3 4D080000 		.4byte	0x84d
 29388 07d7 13       		.uleb128 0x13
 29389 07d8 FF0B0000 		.4byte	.LASF155
 29390 07dc 08       		.byte	0x8
 29391 07dd 6201     		.2byte	0x162
 29392 07df 4D080000 		.4byte	0x84d
 29393 07e3 00       		.byte	0
 29394 07e4 12       		.uleb128 0x12
 29395 07e5 72657300 		.ascii	"res\000"
 29396 07e9 08       		.byte	0x8
 29397 07ea 6301     		.2byte	0x163
 29398 07ec 20060000 		.4byte	0x620
 29399 07f0 05       		.byte	0x5
 29400 07f1 13       		.uleb128 0x13
 29401 07f2 E6090000 		.4byte	.LASF156
 29402 07f6 08       		.byte	0x8
 29403 07f7 6401     		.2byte	0x164
 29404 07f9 D2030000 		.4byte	0x3d2
 29405 07fd 08       		.byte	0x8
 29406 07fe 13       		.uleb128 0x13
 29407 07ff E2060000 		.4byte	.LASF157
 29408 0803 08       		.byte	0x8
 29409 0804 6501     		.2byte	0x165
 29410 0806 5D080000 		.4byte	0x85d
 29411 080a 14       		.byte	0x14
 29412 080b 13       		.uleb128 0x13
 29413 080c 0C0F0000 		.4byte	.LASF158
 29414 0810 08       		.byte	0x8
 29415 0811 6601     		.2byte	0x166
 29416 0813 97000000 		.4byte	0x97
 29417 0817 20       		.byte	0x20
 29418 0818 13       		.uleb128 0x13
 29419 0819 AE020000 		.4byte	.LASF159
 29420 081d 08       		.byte	0x8
 29421 081e 6701     		.2byte	0x167
 29422 0820 20060000 		.4byte	0x620
 29423 0824 21       		.byte	0x21
 29424 0825 13       		.uleb128 0x13
 29425 0826 540E0000 		.4byte	.LASF160
 29426 082a 08       		.byte	0x8
 29427 082b 6801     		.2byte	0x168
 29428 082d BB000000 		.4byte	0xbb
 29429 0831 24       		.byte	0x24
 29430 0832 13       		.uleb128 0x13
 29431 0833 7F110000 		.4byte	.LASF161
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 643


 29432 0837 08       		.byte	0x8
 29433 0838 6901     		.2byte	0x169
 29434 083a E2030000 		.4byte	0x3e2
 29435 083e 25       		.byte	0x25
 29436 083f 13       		.uleb128 0x13
 29437 0840 AD030000 		.4byte	.LASF119
 29438 0844 08       		.byte	0x8
 29439 0845 6A01     		.2byte	0x16a
 29440 0847 6D080000 		.4byte	0x86d
 29441 084b 28       		.byte	0x28
 29442 084c 00       		.byte	0
 29443 084d 09       		.uleb128 0x9
 29444 084e 97000000 		.4byte	0x97
 29445 0852 5D080000 		.4byte	0x85d
 29446 0856 0A       		.uleb128 0xa
 29447 0857 18010000 		.4byte	0x118
 29448 085b 04       		.byte	0x4
 29449 085c 00       		.byte	0
 29450 085d 09       		.uleb128 0x9
 29451 085e DF000000 		.4byte	0xdf
 29452 0862 6D080000 		.4byte	0x86d
 29453 0866 0A       		.uleb128 0xa
 29454 0867 18010000 		.4byte	0x118
 29455 086b 02       		.byte	0x2
 29456 086c 00       		.byte	0
 29457 086d 09       		.uleb128 0x9
 29458 086e 97000000 		.4byte	0x97
 29459 0872 7D080000 		.4byte	0x87d
 29460 0876 0A       		.uleb128 0xa
 29461 0877 18010000 		.4byte	0x118
 29462 087b 07       		.byte	0x7
 29463 087c 00       		.byte	0
 29464 087d 11       		.uleb128 0x11
 29465 087e 5A020000 		.4byte	.LASF162
 29466 0882 10       		.byte	0x10
 29467 0883 08       		.byte	0x8
 29468 0884 7101     		.2byte	0x171
 29469 0886 CC080000 		.4byte	0x8cc
 29470 088a 13       		.uleb128 0x13
 29471 088b 340E0000 		.4byte	.LASF163
 29472 088f 08       		.byte	0x8
 29473 0890 7201     		.2byte	0x172
 29474 0892 CC080000 		.4byte	0x8cc
 29475 0896 00       		.byte	0
 29476 0897 13       		.uleb128 0x13
 29477 0898 16160000 		.4byte	.LASF164
 29478 089c 08       		.byte	0x8
 29479 089d 7301     		.2byte	0x173
 29480 089f 51050000 		.4byte	0x551
 29481 08a3 04       		.byte	0x4
 29482 08a4 13       		.uleb128 0x13
 29483 08a5 1C070000 		.4byte	.LASF165
 29484 08a9 08       		.byte	0x8
 29485 08aa 7401     		.2byte	0x174
 29486 08ac DC080000 		.4byte	0x8dc
 29487 08b0 0C       		.byte	0xc
 29488 08b1 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 644


 29489 08b2 99110000 		.4byte	.LASF166
 29490 08b6 08       		.byte	0x8
 29491 08b7 7501     		.2byte	0x175
 29492 08b9 97000000 		.4byte	0x97
 29493 08bd 0E       		.byte	0xe
 29494 08be 13       		.uleb128 0x13
 29495 08bf 0E140000 		.4byte	.LASF167
 29496 08c3 08       		.byte	0x8
 29497 08c4 7601     		.2byte	0x176
 29498 08c6 97000000 		.4byte	0x97
 29499 08ca 0F       		.byte	0xf
 29500 08cb 00       		.byte	0
 29501 08cc 09       		.uleb128 0x9
 29502 08cd A3000000 		.4byte	0xa3
 29503 08d1 DC080000 		.4byte	0x8dc
 29504 08d5 0A       		.uleb128 0xa
 29505 08d6 18010000 		.4byte	0x118
 29506 08da 01       		.byte	0x1
 29507 08db 00       		.byte	0
 29508 08dc 09       		.uleb128 0x9
 29509 08dd 97000000 		.4byte	0x97
 29510 08e1 EC080000 		.4byte	0x8ec
 29511 08e5 0A       		.uleb128 0xa
 29512 08e6 18010000 		.4byte	0x118
 29513 08ea 01       		.byte	0x1
 29514 08eb 00       		.byte	0
 29515 08ec 11       		.uleb128 0x11
 29516 08ed 8B0D0000 		.4byte	.LASF168
 29517 08f1 20       		.byte	0x20
 29518 08f2 08       		.byte	0x8
 29519 08f3 7D01     		.2byte	0x17d
 29520 08f5 2E090000 		.4byte	0x92e
 29521 08f9 13       		.uleb128 0x13
 29522 08fa 28030000 		.4byte	.LASF169
 29523 08fe 08       		.byte	0x8
 29524 08ff 7E01     		.2byte	0x17e
 29525 0901 97000000 		.4byte	0x97
 29526 0905 00       		.byte	0
 29527 0906 13       		.uleb128 0x13
 29528 0907 2E0F0000 		.4byte	.LASF170
 29529 090b 08       		.byte	0x8
 29530 090c 7F01     		.2byte	0x17f
 29531 090e 97000000 		.4byte	0x97
 29532 0912 01       		.byte	0x1
 29533 0913 13       		.uleb128 0x13
 29534 0914 750C0000 		.4byte	.LASF171
 29535 0918 08       		.byte	0x8
 29536 0919 8001     		.2byte	0x180
 29537 091b 2E090000 		.4byte	0x92e
 29538 091f 02       		.byte	0x2
 29539 0920 13       		.uleb128 0x13
 29540 0921 AD030000 		.4byte	.LASF119
 29541 0925 08       		.byte	0x8
 29542 0926 8101     		.2byte	0x181
 29543 0928 4D080000 		.4byte	0x84d
 29544 092c 1B       		.byte	0x1b
 29545 092d 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 645


 29546 092e 09       		.uleb128 0x9
 29547 092f 97000000 		.4byte	0x97
 29548 0933 44090000 		.4byte	0x944
 29549 0937 0A       		.uleb128 0xa
 29550 0938 18010000 		.4byte	0x118
 29551 093c 04       		.byte	0x4
 29552 093d 0A       		.uleb128 0xa
 29553 093e 18010000 		.4byte	0x118
 29554 0942 04       		.byte	0x4
 29555 0943 00       		.byte	0
 29556 0944 11       		.uleb128 0x11
 29557 0945 8C110000 		.4byte	.LASF172
 29558 0949 20       		.byte	0x20
 29559 094a 08       		.byte	0x8
 29560 094b 8801     		.2byte	0x188
 29561 094d A0090000 		.4byte	0x9a0
 29562 0951 13       		.uleb128 0x13
 29563 0952 020F0000 		.4byte	.LASF173
 29564 0956 08       		.byte	0x8
 29565 0957 8901     		.2byte	0x189
 29566 0959 A0090000 		.4byte	0x9a0
 29567 095d 00       		.byte	0
 29568 095e 13       		.uleb128 0x13
 29569 095f FB130000 		.4byte	.LASF174
 29570 0963 08       		.byte	0x8
 29571 0964 8A01     		.2byte	0x18a
 29572 0966 97000000 		.4byte	0x97
 29573 096a 06       		.byte	0x6
 29574 096b 13       		.uleb128 0x13
 29575 096c 50140000 		.4byte	.LASF175
 29576 0970 08       		.byte	0x8
 29577 0971 8B01     		.2byte	0x18b
 29578 0973 97000000 		.4byte	0x97
 29579 0977 07       		.byte	0x7
 29580 0978 13       		.uleb128 0x13
 29581 0979 4B070000 		.4byte	.LASF176
 29582 097d 08       		.byte	0x8
 29583 097e 8C01     		.2byte	0x18c
 29584 0980 81050000 		.4byte	0x581
 29585 0984 08       		.byte	0x8
 29586 0985 13       		.uleb128 0x13
 29587 0986 36030000 		.4byte	.LASF177
 29588 098a 08       		.byte	0x8
 29589 098b 8D01     		.2byte	0x18d
 29590 098d 97000000 		.4byte	0x97
 29591 0991 14       		.byte	0x14
 29592 0992 13       		.uleb128 0x13
 29593 0993 AD030000 		.4byte	.LASF119
 29594 0997 08       		.byte	0x8
 29595 0998 8E01     		.2byte	0x18e
 29596 099a B0090000 		.4byte	0x9b0
 29597 099e 15       		.byte	0x15
 29598 099f 00       		.byte	0
 29599 09a0 09       		.uleb128 0x9
 29600 09a1 97000000 		.4byte	0x97
 29601 09a5 B0090000 		.4byte	0x9b0
 29602 09a9 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 646


 29603 09aa 18010000 		.4byte	0x118
 29604 09ae 05       		.byte	0x5
 29605 09af 00       		.byte	0
 29606 09b0 09       		.uleb128 0x9
 29607 09b1 97000000 		.4byte	0x97
 29608 09b5 C0090000 		.4byte	0x9c0
 29609 09b9 0A       		.uleb128 0xa
 29610 09ba 18010000 		.4byte	0x118
 29611 09be 0A       		.byte	0xa
 29612 09bf 00       		.byte	0
 29613 09c0 11       		.uleb128 0x11
 29614 09c1 61110000 		.4byte	.LASF178
 29615 09c5 20       		.byte	0x20
 29616 09c6 08       		.byte	0x8
 29617 09c7 9501     		.2byte	0x195
 29618 09c9 F5090000 		.4byte	0x9f5
 29619 09cd 13       		.uleb128 0x13
 29620 09ce 0E050000 		.4byte	.LASF179
 29621 09d2 08       		.byte	0x8
 29622 09d3 9601     		.2byte	0x196
 29623 09d5 40010000 		.4byte	0x140
 29624 09d9 00       		.byte	0
 29625 09da 13       		.uleb128 0x13
 29626 09db 8B030000 		.4byte	.LASF180
 29627 09df 08       		.byte	0x8
 29628 09e0 9701     		.2byte	0x197
 29629 09e2 7D080000 		.4byte	0x87d
 29630 09e6 08       		.byte	0x8
 29631 09e7 13       		.uleb128 0x13
 29632 09e8 AD030000 		.4byte	.LASF119
 29633 09ec 08       		.byte	0x8
 29634 09ed 9801     		.2byte	0x198
 29635 09ef 6D080000 		.4byte	0x86d
 29636 09f3 18       		.byte	0x18
 29637 09f4 00       		.byte	0
 29638 09f5 11       		.uleb128 0x11
 29639 09f6 6D0B0000 		.4byte	.LASF181
 29640 09fa 10       		.byte	0x10
 29641 09fb 08       		.byte	0x8
 29642 09fc 9F01     		.2byte	0x19f
 29643 09fe 440A0000 		.4byte	0xa44
 29644 0a02 13       		.uleb128 0x13
 29645 0a03 160A0000 		.4byte	.LASF182
 29646 0a07 08       		.byte	0x8
 29647 0a08 A001     		.2byte	0x1a0
 29648 0a0a D3000000 		.4byte	0xd3
 29649 0a0e 00       		.byte	0
 29650 0a0f 13       		.uleb128 0x13
 29651 0a10 9F160000 		.4byte	.LASF183
 29652 0a14 08       		.byte	0x8
 29653 0a15 A101     		.2byte	0x1a1
 29654 0a17 D3000000 		.4byte	0xd3
 29655 0a1b 04       		.byte	0x4
 29656 0a1c 13       		.uleb128 0x13
 29657 0a1d 26070000 		.4byte	.LASF184
 29658 0a21 08       		.byte	0x8
 29659 0a22 A201     		.2byte	0x1a2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 647


 29660 0a24 D3000000 		.4byte	0xd3
 29661 0a28 08       		.byte	0x8
 29662 0a29 13       		.uleb128 0x13
 29663 0a2a 64080000 		.4byte	.LASF185
 29664 0a2e 08       		.byte	0x8
 29665 0a2f A301     		.2byte	0x1a3
 29666 0a31 97000000 		.4byte	0x97
 29667 0a35 0C       		.byte	0xc
 29668 0a36 13       		.uleb128 0x13
 29669 0a37 AD030000 		.4byte	.LASF119
 29670 0a3b 08       		.byte	0x8
 29671 0a3c A401     		.2byte	0x1a4
 29672 0a3e 20060000 		.4byte	0x620
 29673 0a42 0D       		.byte	0xd
 29674 0a43 00       		.byte	0
 29675 0a44 11       		.uleb128 0x11
 29676 0a45 92120000 		.4byte	.LASF186
 29677 0a49 10       		.byte	0x10
 29678 0a4a 08       		.byte	0x8
 29679 0a4b AB01     		.2byte	0x1ab
 29680 0a4d 860A0000 		.4byte	0xa86
 29681 0a51 13       		.uleb128 0x13
 29682 0a52 77080000 		.4byte	.LASF187
 29683 0a56 08       		.byte	0x8
 29684 0a57 AC01     		.2byte	0x1ac
 29685 0a59 A3000000 		.4byte	0xa3
 29686 0a5d 00       		.byte	0
 29687 0a5e 13       		.uleb128 0x13
 29688 0a5f C6110000 		.4byte	.LASF188
 29689 0a63 08       		.byte	0x8
 29690 0a64 AD01     		.2byte	0x1ad
 29691 0a66 C7000000 		.4byte	0xc7
 29692 0a6a 02       		.byte	0x2
 29693 0a6b 13       		.uleb128 0x13
 29694 0a6c 72090000 		.4byte	.LASF189
 29695 0a70 08       		.byte	0x8
 29696 0a71 AE01     		.2byte	0x1ae
 29697 0a73 CC080000 		.4byte	0x8cc
 29698 0a77 04       		.byte	0x4
 29699 0a78 13       		.uleb128 0x13
 29700 0a79 AD030000 		.4byte	.LASF119
 29701 0a7d 08       		.byte	0x8
 29702 0a7e AF01     		.2byte	0x1af
 29703 0a80 6D080000 		.4byte	0x86d
 29704 0a84 08       		.byte	0x8
 29705 0a85 00       		.byte	0
 29706 0a86 11       		.uleb128 0x11
 29707 0a87 E6010000 		.4byte	.LASF190
 29708 0a8b 10       		.byte	0x10
 29709 0a8c 08       		.byte	0x8
 29710 0a8d B601     		.2byte	0x1b6
 29711 0a8f BB0A0000 		.4byte	0xabb
 29712 0a93 13       		.uleb128 0x13
 29713 0a94 00110000 		.4byte	.LASF191
 29714 0a98 08       		.byte	0x8
 29715 0a99 B701     		.2byte	0x1b7
 29716 0a9b 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 648


 29717 0a9f 00       		.byte	0
 29718 0aa0 13       		.uleb128 0x13
 29719 0aa1 3F0C0000 		.4byte	.LASF192
 29720 0aa5 08       		.byte	0x8
 29721 0aa6 B801     		.2byte	0x1b8
 29722 0aa8 97000000 		.4byte	0x97
 29723 0aac 01       		.byte	0x1
 29724 0aad 13       		.uleb128 0x13
 29725 0aae AD030000 		.4byte	.LASF119
 29726 0ab2 08       		.byte	0x8
 29727 0ab3 B901     		.2byte	0x1b9
 29728 0ab5 BB0A0000 		.4byte	0xabb
 29729 0ab9 02       		.byte	0x2
 29730 0aba 00       		.byte	0
 29731 0abb 09       		.uleb128 0x9
 29732 0abc 97000000 		.4byte	0x97
 29733 0ac0 CB0A0000 		.4byte	0xacb
 29734 0ac4 0A       		.uleb128 0xa
 29735 0ac5 18010000 		.4byte	0x118
 29736 0ac9 0D       		.byte	0xd
 29737 0aca 00       		.byte	0
 29738 0acb 11       		.uleb128 0x11
 29739 0acc 9C0E0000 		.4byte	.LASF193
 29740 0ad0 10       		.byte	0x10
 29741 0ad1 08       		.byte	0x8
 29742 0ad2 C001     		.2byte	0x1c0
 29743 0ad4 0D0B0000 		.4byte	0xb0d
 29744 0ad8 13       		.uleb128 0x13
 29745 0ad9 50150000 		.4byte	.LASF194
 29746 0add 08       		.byte	0x8
 29747 0ade C101     		.2byte	0x1c1
 29748 0ae0 D3000000 		.4byte	0xd3
 29749 0ae4 00       		.byte	0
 29750 0ae5 13       		.uleb128 0x13
 29751 0ae6 4F080000 		.4byte	.LASF195
 29752 0aea 08       		.byte	0x8
 29753 0aeb C201     		.2byte	0x1c2
 29754 0aed EB000000 		.4byte	0xeb
 29755 0af1 04       		.byte	0x4
 29756 0af2 13       		.uleb128 0x13
 29757 0af3 92100000 		.4byte	.LASF196
 29758 0af7 08       		.byte	0x8
 29759 0af8 C301     		.2byte	0x1c3
 29760 0afa EB000000 		.4byte	0xeb
 29761 0afe 08       		.byte	0x8
 29762 0aff 13       		.uleb128 0x13
 29763 0b00 AD030000 		.4byte	.LASF119
 29764 0b04 08       		.byte	0x8
 29765 0b05 C401     		.2byte	0x1c4
 29766 0b07 0D0B0000 		.4byte	0xb0d
 29767 0b0b 0C       		.byte	0xc
 29768 0b0c 00       		.byte	0
 29769 0b0d 09       		.uleb128 0x9
 29770 0b0e 97000000 		.4byte	0x97
 29771 0b12 1D0B0000 		.4byte	0xb1d
 29772 0b16 0A       		.uleb128 0xa
 29773 0b17 18010000 		.4byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 649


 29774 0b1b 03       		.byte	0x3
 29775 0b1c 00       		.byte	0
 29776 0b1d 11       		.uleb128 0x11
 29777 0b1e 9D020000 		.4byte	.LASF197
 29778 0b22 12       		.byte	0x12
 29779 0b23 08       		.byte	0x8
 29780 0b24 CB01     		.2byte	0x1cb
 29781 0b26 5F0B0000 		.4byte	0xb5f
 29782 0b2a 13       		.uleb128 0x13
 29783 0b2b 77160000 		.4byte	.LASF198
 29784 0b2f 08       		.byte	0x8
 29785 0b30 CC01     		.2byte	0x1cc
 29786 0b32 97000000 		.4byte	0x97
 29787 0b36 00       		.byte	0
 29788 0b37 13       		.uleb128 0x13
 29789 0b38 D9140000 		.4byte	.LASF199
 29790 0b3c 08       		.byte	0x8
 29791 0b3d CD01     		.2byte	0x1cd
 29792 0b3f CC080000 		.4byte	0x8cc
 29793 0b43 02       		.byte	0x2
 29794 0b44 13       		.uleb128 0x13
 29795 0b45 6F000000 		.4byte	.LASF200
 29796 0b49 08       		.byte	0x8
 29797 0b4a CE01     		.2byte	0x1ce
 29798 0b4c 97000000 		.4byte	0x97
 29799 0b50 06       		.byte	0x6
 29800 0b51 13       		.uleb128 0x13
 29801 0b52 AD030000 		.4byte	.LASF119
 29802 0b56 08       		.byte	0x8
 29803 0b57 CF01     		.2byte	0x1cf
 29804 0b59 5F0B0000 		.4byte	0xb5f
 29805 0b5d 07       		.byte	0x7
 29806 0b5e 00       		.byte	0
 29807 0b5f 09       		.uleb128 0x9
 29808 0b60 97000000 		.4byte	0x97
 29809 0b64 6F0B0000 		.4byte	0xb6f
 29810 0b68 0A       		.uleb128 0xa
 29811 0b69 18010000 		.4byte	0x118
 29812 0b6d 09       		.byte	0x9
 29813 0b6e 00       		.byte	0
 29814 0b6f 14       		.uleb128 0x14
 29815 0b70 6B150000 		.4byte	.LASF201
 29816 0b74 F402     		.2byte	0x2f4
 29817 0b76 08       		.byte	0x8
 29818 0b77 D801     		.2byte	0x1d8
 29819 0b79 540C0000 		.4byte	0xc54
 29820 0b7d 13       		.uleb128 0x13
 29821 0b7e 2F0D0000 		.4byte	.LASF202
 29822 0b82 08       		.byte	0x8
 29823 0b83 DA01     		.2byte	0x1da
 29824 0b85 97000000 		.4byte	0x97
 29825 0b89 00       		.byte	0
 29826 0b8a 13       		.uleb128 0x13
 29827 0b8b AD030000 		.4byte	.LASF119
 29828 0b8f 08       		.byte	0x8
 29829 0b90 DB01     		.2byte	0x1db
 29830 0b92 540C0000 		.4byte	0xc54
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 650


 29831 0b96 01       		.byte	0x1
 29832 0b97 12       		.uleb128 0x12
 29833 0b98 636E7400 		.ascii	"cnt\000"
 29834 0b9c 08       		.byte	0x8
 29835 0b9d DC01     		.2byte	0x1dc
 29836 0b9f B4040000 		.4byte	0x4b4
 29837 0ba3 10       		.byte	0x10
 29838 0ba4 13       		.uleb128 0x13
 29839 0ba5 64030000 		.4byte	.LASF203
 29840 0ba9 08       		.byte	0x8
 29841 0baa DD01     		.2byte	0x1dd
 29842 0bac 640C0000 		.4byte	0xc64
 29843 0bb0 80       		.byte	0x80
 29844 0bb1 12       		.uleb128 0x12
 29845 0bb2 64657600 		.ascii	"dev\000"
 29846 0bb6 08       		.byte	0x8
 29847 0bb7 DE01     		.2byte	0x1de
 29848 0bb9 91050000 		.4byte	0x591
 29849 0bbd A0       		.byte	0xa0
 29850 0bbe 13       		.uleb128 0x13
 29851 0bbf E3120000 		.4byte	.LASF204
 29852 0bc3 08       		.byte	0x8
 29853 0bc4 DF01     		.2byte	0x1df
 29854 0bc6 740C0000 		.4byte	0xc74
 29855 0bca B0       		.byte	0xb0
 29856 0bcb 15       		.uleb128 0x15
 29857 0bcc 656E6300 		.ascii	"enc\000"
 29858 0bd0 08       		.byte	0x8
 29859 0bd1 E001     		.2byte	0x1e0
 29860 0bd3 840C0000 		.4byte	0xc84
 29861 0bd7 9001     		.2byte	0x190
 29862 0bd9 15       		.uleb128 0x15
 29863 0bda 656D6700 		.ascii	"emg\000"
 29864 0bde 08       		.byte	0x8
 29865 0bdf E101     		.2byte	0x1e1
 29866 0be1 7D080000 		.4byte	0x87d
 29867 0be5 F001     		.2byte	0x1f0
 29868 0be7 15       		.uleb128 0x15
 29869 0be8 696D7500 		.ascii	"imu\000"
 29870 0bec 08       		.byte	0x8
 29871 0bed E201     		.2byte	0x1e2
 29872 0bef EC080000 		.4byte	0x8ec
 29873 0bf3 0002     		.2byte	0x200
 29874 0bf5 15       		.uleb128 0x15
 29875 0bf6 65787000 		.ascii	"exp\000"
 29876 0bfa 08       		.byte	0x8
 29877 0bfb E301     		.2byte	0x1e3
 29878 0bfd 44090000 		.4byte	0x944
 29879 0c01 2002     		.2byte	0x220
 29880 0c03 16       		.uleb128 0x16
 29881 0c04 B0000000 		.4byte	.LASF205
 29882 0c08 08       		.byte	0x8
 29883 0c09 E401     		.2byte	0x1e4
 29884 0c0b 940C0000 		.4byte	0xc94
 29885 0c0f 4002     		.2byte	0x240
 29886 0c11 15       		.uleb128 0x15
 29887 0c12 534800   		.ascii	"SH\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 651


 29888 0c15 08       		.byte	0x8
 29889 0c16 E601     		.2byte	0x1e6
 29890 0c18 F5090000 		.4byte	0x9f5
 29891 0c1c A002     		.2byte	0x2a0
 29892 0c1e 16       		.uleb128 0x16
 29893 0c1f 5A010000 		.4byte	.LASF206
 29894 0c23 08       		.byte	0x8
 29895 0c24 E701     		.2byte	0x1e7
 29896 0c26 440A0000 		.4byte	0xa44
 29897 0c2a B002     		.2byte	0x2b0
 29898 0c2c 15       		.uleb128 0x15
 29899 0c2d 4D5300   		.ascii	"MS\000"
 29900 0c30 08       		.byte	0x8
 29901 0c31 E801     		.2byte	0x1e8
 29902 0c33 860A0000 		.4byte	0xa86
 29903 0c37 C002     		.2byte	0x2c0
 29904 0c39 15       		.uleb128 0x15
 29905 0c3a 464200   		.ascii	"FB\000"
 29906 0c3d 08       		.byte	0x8
 29907 0c3e E901     		.2byte	0x1e9
 29908 0c40 CB0A0000 		.4byte	0xacb
 29909 0c44 D002     		.2byte	0x2d0
 29910 0c46 15       		.uleb128 0x15
 29911 0c47 575200   		.ascii	"WR\000"
 29912 0c4a 08       		.byte	0x8
 29913 0c4b EA01     		.2byte	0x1ea
 29914 0c4d 1D0B0000 		.4byte	0xb1d
 29915 0c51 E002     		.2byte	0x2e0
 29916 0c53 00       		.byte	0
 29917 0c54 09       		.uleb128 0x9
 29918 0c55 97000000 		.4byte	0x97
 29919 0c59 640C0000 		.4byte	0xc64
 29920 0c5d 0A       		.uleb128 0xa
 29921 0c5e 18010000 		.4byte	0x118
 29922 0c62 0E       		.byte	0xe
 29923 0c63 00       		.byte	0
 29924 0c64 09       		.uleb128 0x9
 29925 0c65 97000000 		.4byte	0x97
 29926 0c69 740C0000 		.4byte	0xc74
 29927 0c6d 0A       		.uleb128 0xa
 29928 0c6e 18010000 		.4byte	0x118
 29929 0c72 1F       		.byte	0x1f
 29930 0c73 00       		.byte	0
 29931 0c74 09       		.uleb128 0x9
 29932 0c75 30060000 		.4byte	0x630
 29933 0c79 840C0000 		.4byte	0xc84
 29934 0c7d 0A       		.uleb128 0xa
 29935 0c7e 18010000 		.4byte	0x118
 29936 0c82 01       		.byte	0x1
 29937 0c83 00       		.byte	0
 29938 0c84 09       		.uleb128 0x9
 29939 0c85 CA070000 		.4byte	0x7ca
 29940 0c89 940C0000 		.4byte	0xc94
 29941 0c8d 0A       		.uleb128 0xa
 29942 0c8e 18010000 		.4byte	0x118
 29943 0c92 01       		.byte	0x1
 29944 0c93 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 652


 29945 0c94 09       		.uleb128 0x9
 29946 0c95 C0090000 		.4byte	0x9c0
 29947 0c99 A40C0000 		.4byte	0xca4
 29948 0c9d 0A       		.uleb128 0xa
 29949 0c9e 18010000 		.4byte	0x118
 29950 0ca2 02       		.byte	0x2
 29951 0ca3 00       		.byte	0
 29952 0ca4 11       		.uleb128 0x11
 29953 0ca5 DA0F0000 		.4byte	.LASF207
 29954 0ca9 28       		.byte	0x28
 29955 0caa 08       		.byte	0x8
 29956 0cab F501     		.2byte	0x1f5
 29957 0cad 000D0000 		.4byte	0xd00
 29958 0cb1 13       		.uleb128 0x13
 29959 0cb2 38060000 		.4byte	.LASF208
 29960 0cb6 08       		.byte	0x8
 29961 0cb7 F601     		.2byte	0x1f6
 29962 0cb9 97000000 		.4byte	0x97
 29963 0cbd 00       		.byte	0
 29964 0cbe 13       		.uleb128 0x13
 29965 0cbf BA030000 		.4byte	.LASF209
 29966 0cc3 08       		.byte	0x8
 29967 0cc4 F701     		.2byte	0x1f7
 29968 0cc6 000D0000 		.4byte	0xd00
 29969 0cca 02       		.byte	0x2
 29970 0ccb 13       		.uleb128 0x13
 29971 0ccc F70E0000 		.4byte	.LASF210
 29972 0cd0 08       		.byte	0x8
 29973 0cd1 F801     		.2byte	0x1f8
 29974 0cd3 000D0000 		.4byte	0xd00
 29975 0cd7 08       		.byte	0x8
 29976 0cd8 13       		.uleb128 0x13
 29977 0cd9 E60F0000 		.4byte	.LASF211
 29978 0cdd 08       		.byte	0x8
 29979 0cde F901     		.2byte	0x1f9
 29980 0ce0 000D0000 		.4byte	0xd00
 29981 0ce4 0E       		.byte	0xe
 29982 0ce5 13       		.uleb128 0x13
 29983 0ce6 FD090000 		.4byte	.LASF212
 29984 0cea 08       		.byte	0x8
 29985 0ceb FA01     		.2byte	0x1fa
 29986 0ced 100D0000 		.4byte	0xd10
 29987 0cf1 14       		.byte	0x14
 29988 0cf2 13       		.uleb128 0x13
 29989 0cf3 6F020000 		.4byte	.LASF213
 29990 0cf7 08       		.byte	0x8
 29991 0cf8 FB01     		.2byte	0x1fb
 29992 0cfa C7000000 		.4byte	0xc7
 29993 0cfe 24       		.byte	0x24
 29994 0cff 00       		.byte	0
 29995 0d00 09       		.uleb128 0x9
 29996 0d01 C7000000 		.4byte	0xc7
 29997 0d05 100D0000 		.4byte	0xd10
 29998 0d09 0A       		.uleb128 0xa
 29999 0d0a 18010000 		.4byte	0x118
 30000 0d0e 02       		.byte	0x2
 30001 0d0f 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 653


 30002 0d10 09       		.uleb128 0x9
 30003 0d11 EB000000 		.4byte	0xeb
 30004 0d15 200D0000 		.4byte	0xd20
 30005 0d19 0A       		.uleb128 0xa
 30006 0d1a 18010000 		.4byte	0x118
 30007 0d1e 03       		.byte	0x3
 30008 0d1f 00       		.byte	0
 30009 0d20 11       		.uleb128 0x11
 30010 0d21 1F050000 		.4byte	.LASF214
 30011 0d25 06       		.byte	0x6
 30012 0d26 08       		.byte	0x8
 30013 0d27 0B02     		.2byte	0x20b
 30014 0d29 620D0000 		.4byte	0xd62
 30015 0d2d 13       		.uleb128 0x13
 30016 0d2e 49090000 		.4byte	.LASF215
 30017 0d32 08       		.byte	0x8
 30018 0d33 0C02     		.2byte	0x20c
 30019 0d35 97000000 		.4byte	0x97
 30020 0d39 00       		.byte	0
 30021 0d3a 13       		.uleb128 0x13
 30022 0d3b C4160000 		.4byte	.LASF216
 30023 0d3f 08       		.byte	0x8
 30024 0d40 0D02     		.2byte	0x20d
 30025 0d42 97000000 		.4byte	0x97
 30026 0d46 01       		.byte	0x1
 30027 0d47 13       		.uleb128 0x13
 30028 0d48 CD070000 		.4byte	.LASF217
 30029 0d4c 08       		.byte	0x8
 30030 0d4d 0E02     		.2byte	0x20e
 30031 0d4f C7000000 		.4byte	0xc7
 30032 0d53 02       		.byte	0x2
 30033 0d54 13       		.uleb128 0x13
 30034 0d55 110C0000 		.4byte	.LASF218
 30035 0d59 08       		.byte	0x8
 30036 0d5a 0F02     		.2byte	0x20f
 30037 0d5c C7000000 		.4byte	0xc7
 30038 0d60 04       		.byte	0x4
 30039 0d61 00       		.byte	0
 30040 0d62 11       		.uleb128 0x11
 30041 0d63 7E070000 		.4byte	.LASF219
 30042 0d67 04       		.byte	0x4
 30043 0d68 08       		.byte	0x8
 30044 0d69 1202     		.2byte	0x212
 30045 0d6b 7D0D0000 		.4byte	0xd7d
 30046 0d6f 12       		.uleb128 0x12
 30047 0d70 70776D00 		.ascii	"pwm\000"
 30048 0d74 08       		.byte	0x8
 30049 0d75 1302     		.2byte	0x213
 30050 0d77 D3000000 		.4byte	0xd3
 30051 0d7b 00       		.byte	0
 30052 0d7c 00       		.byte	0
 30053 0d7d 17       		.uleb128 0x17
 30054 0d7e 37110000 		.4byte	.LASF417
 30055 0d82 02       		.byte	0x2
 30056 0d83 1403     		.2byte	0x314
 30057 0d85 8C000000 		.4byte	0x8c
 30058 0d89 03       		.byte	0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 654


 30059 0d8a A70D0000 		.4byte	0xda7
 30060 0d8e 18       		.uleb128 0x18
 30061 0d8f 32060000 		.4byte	.LASF306
 30062 0d93 02       		.byte	0x2
 30063 0d94 1403     		.2byte	0x314
 30064 0d96 8C000000 		.4byte	0x8c
 30065 0d9a 19       		.uleb128 0x19
 30066 0d9b 83020000 		.4byte	.LASF418
 30067 0d9f 02       		.byte	0x2
 30068 0da0 1603     		.2byte	0x316
 30069 0da2 8C000000 		.4byte	0x8c
 30070 0da6 00       		.byte	0
 30071 0da7 1A       		.uleb128 0x1a
 30072 0da8 86120000 		.4byte	.LASF220
 30073 0dac 01       		.byte	0x1
 30074 0dad 3D       		.byte	0x3d
 30075 0dae 00000000 		.4byte	.LFB64
 30076 0db2 70060000 		.4byte	.LFE64-.LFB64
 30077 0db6 01       		.uleb128 0x1
 30078 0db7 9C       		.byte	0x9c
 30079 0db8 B00E0000 		.4byte	0xeb0
 30080 0dbc 1B       		.uleb128 0x1b
 30081 0dbd D3070000 		.4byte	.LASF222
 30082 0dc1 01       		.byte	0x1
 30083 0dc2 3F       		.byte	0x3f
 30084 0dc3 97000000 		.4byte	0x97
 30085 0dc7 02       		.uleb128 0x2
 30086 0dc8 91       		.byte	0x91
 30087 0dc9 77       		.sleb128 -9
 30088 0dca 1C       		.uleb128 0x1c
 30089 0dcb 7D0D0000 		.4byte	0xd7d
 30090 0dcf A0040000 		.4byte	.LBB12
 30091 0dd3 08000000 		.4byte	.LBE12-.LBB12
 30092 0dd7 01       		.byte	0x1
 30093 0dd8 A2       		.byte	0xa2
 30094 0dd9 F80D0000 		.4byte	0xdf8
 30095 0ddd 1D       		.uleb128 0x1d
 30096 0dde 8E0D0000 		.4byte	0xd8e
 30097 0de2 02       		.uleb128 0x2
 30098 0de3 91       		.byte	0x91
 30099 0de4 60       		.sleb128 -32
 30100 0de5 1E       		.uleb128 0x1e
 30101 0de6 A0040000 		.4byte	.LBB13
 30102 0dea 08000000 		.4byte	.LBE13-.LBB13
 30103 0dee 1F       		.uleb128 0x1f
 30104 0def 9A0D0000 		.4byte	0xd9a
 30105 0df3 02       		.uleb128 0x2
 30106 0df4 91       		.byte	0x91
 30107 0df5 5C       		.sleb128 -36
 30108 0df6 00       		.byte	0
 30109 0df7 00       		.byte	0
 30110 0df8 1C       		.uleb128 0x1c
 30111 0df9 7D0D0000 		.4byte	0xd7d
 30112 0dfd BE040000 		.4byte	.LBB14
 30113 0e01 08000000 		.4byte	.LBE14-.LBB14
 30114 0e05 01       		.byte	0x1
 30115 0e06 AE       		.byte	0xae
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 655


 30116 0e07 260E0000 		.4byte	0xe26
 30117 0e0b 1D       		.uleb128 0x1d
 30118 0e0c 8E0D0000 		.4byte	0xd8e
 30119 0e10 02       		.uleb128 0x2
 30120 0e11 91       		.byte	0x91
 30121 0e12 70       		.sleb128 -16
 30122 0e13 1E       		.uleb128 0x1e
 30123 0e14 BE040000 		.4byte	.LBB15
 30124 0e18 08000000 		.4byte	.LBE15-.LBB15
 30125 0e1c 1F       		.uleb128 0x1f
 30126 0e1d 9A0D0000 		.4byte	0xd9a
 30127 0e21 02       		.uleb128 0x2
 30128 0e22 91       		.byte	0x91
 30129 0e23 58       		.sleb128 -40
 30130 0e24 00       		.byte	0
 30131 0e25 00       		.byte	0
 30132 0e26 20       		.uleb128 0x20
 30133 0e27 7D0D0000 		.4byte	0xd7d
 30134 0e2b F8050000 		.4byte	.LBB16
 30135 0e2f 08000000 		.4byte	.LBE16-.LBB16
 30136 0e33 01       		.byte	0x1
 30137 0e34 0A01     		.2byte	0x10a
 30138 0e36 550E0000 		.4byte	0xe55
 30139 0e3a 1D       		.uleb128 0x1d
 30140 0e3b 8E0D0000 		.4byte	0xd8e
 30141 0e3f 02       		.uleb128 0x2
 30142 0e40 91       		.byte	0x91
 30143 0e41 6C       		.sleb128 -20
 30144 0e42 1E       		.uleb128 0x1e
 30145 0e43 F8050000 		.4byte	.LBB17
 30146 0e47 08000000 		.4byte	.LBE17-.LBB17
 30147 0e4b 1F       		.uleb128 0x1f
 30148 0e4c 9A0D0000 		.4byte	0xd9a
 30149 0e50 02       		.uleb128 0x2
 30150 0e51 91       		.byte	0x91
 30151 0e52 54       		.sleb128 -44
 30152 0e53 00       		.byte	0
 30153 0e54 00       		.byte	0
 30154 0e55 20       		.uleb128 0x20
 30155 0e56 7D0D0000 		.4byte	0xd7d
 30156 0e5a 28060000 		.4byte	.LBB18
 30157 0e5e 08000000 		.4byte	.LBE18-.LBB18
 30158 0e62 01       		.byte	0x1
 30159 0e63 2801     		.2byte	0x128
 30160 0e65 840E0000 		.4byte	0xe84
 30161 0e69 1D       		.uleb128 0x1d
 30162 0e6a 8E0D0000 		.4byte	0xd8e
 30163 0e6e 02       		.uleb128 0x2
 30164 0e6f 91       		.byte	0x91
 30165 0e70 68       		.sleb128 -24
 30166 0e71 1E       		.uleb128 0x1e
 30167 0e72 28060000 		.4byte	.LBB19
 30168 0e76 08000000 		.4byte	.LBE19-.LBB19
 30169 0e7a 1F       		.uleb128 0x1f
 30170 0e7b 9A0D0000 		.4byte	0xd9a
 30171 0e7f 02       		.uleb128 0x2
 30172 0e80 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 656


 30173 0e81 50       		.sleb128 -48
 30174 0e82 00       		.byte	0
 30175 0e83 00       		.byte	0
 30176 0e84 21       		.uleb128 0x21
 30177 0e85 7D0D0000 		.4byte	0xd7d
 30178 0e89 40060000 		.4byte	.LBB20
 30179 0e8d 08000000 		.4byte	.LBE20-.LBB20
 30180 0e91 01       		.byte	0x1
 30181 0e92 2E01     		.2byte	0x12e
 30182 0e94 1D       		.uleb128 0x1d
 30183 0e95 8E0D0000 		.4byte	0xd8e
 30184 0e99 02       		.uleb128 0x2
 30185 0e9a 91       		.byte	0x91
 30186 0e9b 64       		.sleb128 -28
 30187 0e9c 1E       		.uleb128 0x1e
 30188 0e9d 40060000 		.4byte	.LBB21
 30189 0ea1 08000000 		.4byte	.LBE21-.LBB21
 30190 0ea5 1F       		.uleb128 0x1f
 30191 0ea6 9A0D0000 		.4byte	0xd9a
 30192 0eaa 02       		.uleb128 0x2
 30193 0eab 91       		.byte	0x91
 30194 0eac 4C       		.sleb128 -52
 30195 0ead 00       		.byte	0
 30196 0eae 00       		.byte	0
 30197 0eaf 00       		.byte	0
 30198 0eb0 22       		.uleb128 0x22
 30199 0eb1 00000000 		.4byte	.LASF221
 30200 0eb5 01       		.byte	0x1
 30201 0eb6 3C01     		.2byte	0x13c
 30202 0eb8 00000000 		.4byte	.LFB65
 30203 0ebc 22000000 		.4byte	.LFE65-.LFB65
 30204 0ec0 01       		.uleb128 0x1
 30205 0ec1 9C       		.byte	0x9c
 30206 0ec2 D70E0000 		.4byte	0xed7
 30207 0ec6 23       		.uleb128 0x23
 30208 0ec7 D4060000 		.4byte	.LASF223
 30209 0ecb 01       		.byte	0x1
 30210 0ecc 3D01     		.2byte	0x13d
 30211 0ece D70E0000 		.4byte	0xed7
 30212 0ed2 03       		.uleb128 0x3
 30213 0ed3 91       		.byte	0x91
 30214 0ed4 9C74     		.sleb128 -1508
 30215 0ed6 00       		.byte	0
 30216 0ed7 09       		.uleb128 0x9
 30217 0ed8 F9000000 		.4byte	0xf9
 30218 0edc E80E0000 		.4byte	0xee8
 30219 0ee0 24       		.uleb128 0x24
 30220 0ee1 18010000 		.4byte	0x118
 30221 0ee5 DB05     		.2byte	0x5db
 30222 0ee7 00       		.byte	0
 30223 0ee8 22       		.uleb128 0x22
 30224 0ee9 9C150000 		.4byte	.LASF224
 30225 0eed 01       		.byte	0x1
 30226 0eee 4801     		.2byte	0x148
 30227 0ef0 00000000 		.4byte	.LFB66
 30228 0ef4 64010000 		.4byte	.LFE66-.LFB66
 30229 0ef8 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 657


 30230 0ef9 9C       		.byte	0x9c
 30231 0efa 310F0000 		.4byte	0xf31
 30232 0efe 25       		.uleb128 0x25
 30233 0eff EC140000 		.4byte	.LASF227
 30234 0f03 01       		.byte	0x1
 30235 0f04 4801     		.2byte	0x148
 30236 0f06 A3000000 		.4byte	0xa3
 30237 0f0a 04       		.uleb128 0x4
 30238 0f0b 91       		.byte	0x91
 30239 0f0c B6C47E   		.sleb128 -24010
 30240 0f0f 23       		.uleb128 0x23
 30241 0f10 D4060000 		.4byte	.LASF223
 30242 0f14 01       		.byte	0x1
 30243 0f15 4901     		.2byte	0x149
 30244 0f17 310F0000 		.4byte	0xf31
 30245 0f1b 03       		.uleb128 0x3
 30246 0f1c 91       		.byte	0x91
 30247 0f1d D860     		.sleb128 -4008
 30248 0f1f 23       		.uleb128 0x23
 30249 0f20 CB090000 		.4byte	.LASF225
 30250 0f24 01       		.byte	0x1
 30251 0f25 4A01     		.2byte	0x14a
 30252 0f27 420F0000 		.4byte	0xf42
 30253 0f2b 04       		.uleb128 0x4
 30254 0f2c 91       		.byte	0x91
 30255 0f2d B8C47E   		.sleb128 -24008
 30256 0f30 00       		.byte	0
 30257 0f31 09       		.uleb128 0x9
 30258 0f32 F9000000 		.4byte	0xf9
 30259 0f36 420F0000 		.4byte	0xf42
 30260 0f3a 24       		.uleb128 0x24
 30261 0f3b 18010000 		.4byte	0x118
 30262 0f3f 9F0F     		.2byte	0xf9f
 30263 0f41 00       		.byte	0
 30264 0f42 09       		.uleb128 0x9
 30265 0f43 F9000000 		.4byte	0xf9
 30266 0f47 530F0000 		.4byte	0xf53
 30267 0f4b 24       		.uleb128 0x24
 30268 0f4c 18010000 		.4byte	0x118
 30269 0f50 1F4E     		.2byte	0x4e1f
 30270 0f52 00       		.byte	0
 30271 0f53 22       		.uleb128 0x22
 30272 0f54 29020000 		.4byte	.LASF226
 30273 0f58 01       		.byte	0x1
 30274 0f59 7A01     		.2byte	0x17a
 30275 0f5b 00000000 		.4byte	.LFB67
 30276 0f5f A2320000 		.4byte	.LFE67-.LFB67
 30277 0f63 01       		.uleb128 0x1
 30278 0f64 9C       		.byte	0x9c
 30279 0f65 F7100000 		.4byte	0x10f7
 30280 0f69 25       		.uleb128 0x25
 30281 0f6a A70E0000 		.4byte	.LASF228
 30282 0f6e 01       		.byte	0x1
 30283 0f6f 7A01     		.2byte	0x17a
 30284 0f71 F7100000 		.4byte	0x10f7
 30285 0f75 03       		.uleb128 0x3
 30286 0f76 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 658


 30287 0f77 DC53     		.sleb128 -5668
 30288 0f79 25       		.uleb128 0x25
 30289 0f7a 75150000 		.4byte	.LASF229
 30290 0f7e 01       		.byte	0x1
 30291 0f7f 7A01     		.2byte	0x17a
 30292 0f81 FD100000 		.4byte	0x10fd
 30293 0f85 03       		.uleb128 0x3
 30294 0f86 91       		.byte	0x91
 30295 0f87 D853     		.sleb128 -5672
 30296 0f89 25       		.uleb128 0x25
 30297 0f8a C6030000 		.4byte	.LASF230
 30298 0f8e 01       		.byte	0x1
 30299 0f8f 7B01     		.2byte	0x17b
 30300 0f91 FD100000 		.4byte	0x10fd
 30301 0f95 03       		.uleb128 0x3
 30302 0f96 91       		.byte	0x91
 30303 0f97 D453     		.sleb128 -5676
 30304 0f99 25       		.uleb128 0x25
 30305 0f9a E00D0000 		.4byte	.LASF231
 30306 0f9e 01       		.byte	0x1
 30307 0f9f 7B01     		.2byte	0x17b
 30308 0fa1 FD100000 		.4byte	0x10fd
 30309 0fa5 03       		.uleb128 0x3
 30310 0fa6 91       		.byte	0x91
 30311 0fa7 D053     		.sleb128 -5680
 30312 0fa9 25       		.uleb128 0x25
 30313 0faa B6140000 		.4byte	.LASF232
 30314 0fae 01       		.byte	0x1
 30315 0faf 7C01     		.2byte	0x17c
 30316 0fb1 FD100000 		.4byte	0x10fd
 30317 0fb5 02       		.uleb128 0x2
 30318 0fb6 91       		.byte	0x91
 30319 0fb7 00       		.sleb128 0
 30320 0fb8 25       		.uleb128 0x25
 30321 0fb9 3E090000 		.4byte	.LASF233
 30322 0fbd 01       		.byte	0x1
 30323 0fbe 7C01     		.2byte	0x17c
 30324 0fc0 03110000 		.4byte	0x1103
 30325 0fc4 02       		.uleb128 0x2
 30326 0fc5 91       		.byte	0x91
 30327 0fc6 04       		.sleb128 4
 30328 0fc7 25       		.uleb128 0x25
 30329 0fc8 5E0C0000 		.4byte	.LASF234
 30330 0fcc 01       		.byte	0x1
 30331 0fcd 7D01     		.2byte	0x17d
 30332 0fcf FD100000 		.4byte	0x10fd
 30333 0fd3 02       		.uleb128 0x2
 30334 0fd4 91       		.byte	0x91
 30335 0fd5 08       		.sleb128 8
 30336 0fd6 25       		.uleb128 0x25
 30337 0fd7 DD090000 		.4byte	.LASF235
 30338 0fdb 01       		.byte	0x1
 30339 0fdc 7D01     		.2byte	0x17d
 30340 0fde 03110000 		.4byte	0x1103
 30341 0fe2 02       		.uleb128 0x2
 30342 0fe3 91       		.byte	0x91
 30343 0fe4 0C       		.sleb128 12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 659


 30344 0fe5 23       		.uleb128 0x23
 30345 0fe6 2F070000 		.4byte	.LASF236
 30346 0fea 01       		.byte	0x1
 30347 0feb 8001     		.2byte	0x180
 30348 0fed 09110000 		.4byte	0x1109
 30349 0ff1 03       		.uleb128 0x3
 30350 0ff2 91       		.byte	0x91
 30351 0ff3 A454     		.sleb128 -5596
 30352 0ff5 23       		.uleb128 0x23
 30353 0ff6 080A0000 		.4byte	.LASF237
 30354 0ffa 01       		.byte	0x1
 30355 0ffb 8101     		.2byte	0x181
 30356 0ffd A3000000 		.4byte	0xa3
 30357 1001 02       		.uleb128 0x2
 30358 1002 91       		.byte	0x91
 30359 1003 60       		.sleb128 -32
 30360 1004 26       		.uleb128 0x26
 30361 1005 6900     		.ascii	"i\000"
 30362 1007 01       		.byte	0x1
 30363 1008 8401     		.2byte	0x184
 30364 100a 97000000 		.4byte	0x97
 30365 100e 02       		.uleb128 0x2
 30366 100f 91       		.byte	0x91
 30367 1010 67       		.sleb128 -25
 30368 1011 26       		.uleb128 0x26
 30369 1012 6A00     		.ascii	"j\000"
 30370 1014 01       		.byte	0x1
 30371 1015 8401     		.2byte	0x184
 30372 1017 97000000 		.4byte	0x97
 30373 101b 02       		.uleb128 0x2
 30374 101c 91       		.byte	0x91
 30375 101d 66       		.sleb128 -26
 30376 101e 26       		.uleb128 0x26
 30377 101f 69647800 		.ascii	"idx\000"
 30378 1023 01       		.byte	0x1
 30379 1024 8501     		.2byte	0x185
 30380 1026 97000000 		.4byte	0x97
 30381 102a 02       		.uleb128 0x2
 30382 102b 91       		.byte	0x91
 30383 102c 65       		.sleb128 -27
 30384 102d 23       		.uleb128 0x23
 30385 102e D1120000 		.4byte	.LASF238
 30386 1032 01       		.byte	0x1
 30387 1033 8601     		.2byte	0x186
 30388 1035 97000000 		.4byte	0x97
 30389 1039 02       		.uleb128 0x2
 30390 103a 91       		.byte	0x91
 30391 103b 64       		.sleb128 -28
 30392 103c 26       		.uleb128 0x26
 30393 103d 736F6400 		.ascii	"sod\000"
 30394 1041 01       		.byte	0x1
 30395 1042 8701     		.2byte	0x187
 30396 1044 97000000 		.4byte	0x97
 30397 1048 02       		.uleb128 0x2
 30398 1049 91       		.byte	0x91
 30399 104a 63       		.sleb128 -29
 30400 104b 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 660


 30401 104c 09000000 		.4byte	.LASF239
 30402 1050 01       		.byte	0x1
 30403 1051 8801     		.2byte	0x188
 30404 1053 97000000 		.4byte	0x97
 30405 1057 02       		.uleb128 0x2
 30406 1058 91       		.byte	0x91
 30407 1059 62       		.sleb128 -30
 30408 105a 23       		.uleb128 0x23
 30409 105b AA160000 		.4byte	.LASF240
 30410 105f 01       		.byte	0x1
 30411 1060 8901     		.2byte	0x189
 30412 1062 1A110000 		.4byte	0x111a
 30413 1066 03       		.uleb128 0x3
 30414 1067 91       		.byte	0x91
 30415 1068 F053     		.sleb128 -5648
 30416 106a 23       		.uleb128 0x23
 30417 106b 9E140000 		.4byte	.LASF241
 30418 106f 01       		.byte	0x1
 30419 1070 8A01     		.2byte	0x18a
 30420 1072 EB000000 		.4byte	0xeb
 30421 1076 03       		.uleb128 0x3
 30422 1077 91       		.byte	0x91
 30423 1078 EC53     		.sleb128 -5652
 30424 107a 23       		.uleb128 0x23
 30425 107b 62130000 		.4byte	.LASF242
 30426 107f 01       		.byte	0x1
 30427 1080 8B01     		.2byte	0x18b
 30428 1082 C7000000 		.4byte	0xc7
 30429 1086 03       		.uleb128 0x3
 30430 1087 91       		.byte	0x91
 30431 1088 EA53     		.sleb128 -5654
 30432 108a 23       		.uleb128 0x23
 30433 108b 290E0000 		.4byte	.LASF243
 30434 108f 01       		.byte	0x1
 30435 1090 8C01     		.2byte	0x18c
 30436 1092 A3000000 		.4byte	0xa3
 30437 1096 03       		.uleb128 0x3
 30438 1097 91       		.byte	0x91
 30439 1098 E853     		.sleb128 -5656
 30440 109a 23       		.uleb128 0x23
 30441 109b BF140000 		.4byte	.LASF244
 30442 109f 01       		.byte	0x1
 30443 10a0 8D01     		.2byte	0x18d
 30444 10a2 D3000000 		.4byte	0xd3
 30445 10a6 03       		.uleb128 0x3
 30446 10a7 91       		.byte	0x91
 30447 10a8 E453     		.sleb128 -5660
 30448 10aa 23       		.uleb128 0x23
 30449 10ab BA0F0000 		.4byte	.LASF245
 30450 10af 01       		.byte	0x1
 30451 10b0 8E01     		.2byte	0x18e
 30452 10b2 AF000000 		.4byte	0xaf
 30453 10b6 03       		.uleb128 0x3
 30454 10b7 91       		.byte	0x91
 30455 10b8 E053     		.sleb128 -5664
 30456 10ba 23       		.uleb128 0x23
 30457 10bb 530F0000 		.4byte	.LASF246
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 661


 30458 10bf 01       		.byte	0x1
 30459 10c0 9001     		.2byte	0x190
 30460 10c2 97000000 		.4byte	0x97
 30461 10c6 02       		.uleb128 0x2
 30462 10c7 91       		.byte	0x91
 30463 10c8 5F       		.sleb128 -33
 30464 10c9 23       		.uleb128 0x23
 30465 10ca 84010000 		.4byte	.LASF247
 30466 10ce 01       		.byte	0x1
 30467 10cf 9101     		.2byte	0x191
 30468 10d1 97000000 		.4byte	0x97
 30469 10d5 02       		.uleb128 0x2
 30470 10d6 91       		.byte	0x91
 30471 10d7 5E       		.sleb128 -34
 30472 10d8 23       		.uleb128 0x23
 30473 10d9 AE0C0000 		.4byte	.LASF248
 30474 10dd 01       		.byte	0x1
 30475 10de 9301     		.2byte	0x193
 30476 10e0 FD100000 		.4byte	0x10fd
 30477 10e4 02       		.uleb128 0x2
 30478 10e5 91       		.byte	0x91
 30479 10e6 58       		.sleb128 -40
 30480 10e7 23       		.uleb128 0x23
 30481 10e8 18020000 		.4byte	.LASF249
 30482 10ec 01       		.byte	0x1
 30483 10ed 9401     		.2byte	0x194
 30484 10ef FD100000 		.4byte	0x10fd
 30485 10f3 02       		.uleb128 0x2
 30486 10f4 91       		.byte	0x91
 30487 10f5 54       		.sleb128 -44
 30488 10f6 00       		.byte	0
 30489 10f7 07       		.uleb128 0x7
 30490 10f8 04       		.byte	0x4
 30491 10f9 FD100000 		.4byte	0x10fd
 30492 10fd 07       		.uleb128 0x7
 30493 10fe 04       		.byte	0x4
 30494 10ff 97000000 		.4byte	0x97
 30495 1103 07       		.uleb128 0x7
 30496 1104 04       		.byte	0x4
 30497 1105 25010000 		.4byte	0x125
 30498 1109 09       		.uleb128 0x9
 30499 110a 97000000 		.4byte	0x97
 30500 110e 1A110000 		.4byte	0x111a
 30501 1112 24       		.uleb128 0x24
 30502 1113 18010000 		.4byte	0x118
 30503 1117 AD15     		.2byte	0x15ad
 30504 1119 00       		.byte	0
 30505 111a 09       		.uleb128 0x9
 30506 111b F9000000 		.4byte	0xf9
 30507 111f 2A110000 		.4byte	0x112a
 30508 1123 0A       		.uleb128 0xa
 30509 1124 18010000 		.4byte	0x118
 30510 1128 31       		.byte	0x31
 30511 1129 00       		.byte	0
 30512 112a 22       		.uleb128 0x22
 30513 112b B4100000 		.4byte	.LASF250
 30514 112f 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 662


 30515 1130 8203     		.2byte	0x382
 30516 1132 00000000 		.4byte	.LFB68
 30517 1136 3C190000 		.4byte	.LFE68-.LFB68
 30518 113a 01       		.uleb128 0x1
 30519 113b 9C       		.byte	0x9c
 30520 113c 08130000 		.4byte	0x1308
 30521 1140 25       		.uleb128 0x25
 30522 1141 49080000 		.4byte	.LASF251
 30523 1145 01       		.byte	0x1
 30524 1146 8203     		.2byte	0x382
 30525 1148 A3000000 		.4byte	0xa3
 30526 114c 03       		.uleb128 0x3
 30527 114d 91       		.byte	0x91
 30528 114e EE74     		.sleb128 -1426
 30529 1150 26       		.uleb128 0x26
 30530 1151 6900     		.ascii	"i\000"
 30531 1153 01       		.byte	0x1
 30532 1154 8303     		.2byte	0x383
 30533 1156 97000000 		.4byte	0x97
 30534 115a 02       		.uleb128 0x2
 30535 115b 91       		.byte	0x91
 30536 115c 6F       		.sleb128 -17
 30537 115d 26       		.uleb128 0x26
 30538 115e 6A00     		.ascii	"j\000"
 30539 1160 01       		.byte	0x1
 30540 1161 8303     		.2byte	0x383
 30541 1163 97000000 		.4byte	0x97
 30542 1167 02       		.uleb128 0x2
 30543 1168 91       		.byte	0x91
 30544 1169 6E       		.sleb128 -18
 30545 116a 26       		.uleb128 0x26
 30546 116b 736F6400 		.ascii	"sod\000"
 30547 116f 01       		.byte	0x1
 30548 1170 8403     		.2byte	0x384
 30549 1172 97000000 		.4byte	0x97
 30550 1176 02       		.uleb128 0x2
 30551 1177 91       		.byte	0x91
 30552 1178 6D       		.sleb128 -19
 30553 1179 23       		.uleb128 0x23
 30554 117a 980C0000 		.4byte	.LASF252
 30555 117e 01       		.byte	0x1
 30556 117f 8503     		.2byte	0x385
 30557 1181 97000000 		.4byte	0x97
 30558 1185 02       		.uleb128 0x2
 30559 1186 91       		.byte	0x91
 30560 1187 62       		.sleb128 -30
 30561 1188 23       		.uleb128 0x23
 30562 1189 62130000 		.4byte	.LASF242
 30563 118d 01       		.byte	0x1
 30564 118e 8603     		.2byte	0x386
 30565 1190 C7000000 		.4byte	0xc7
 30566 1194 02       		.uleb128 0x2
 30567 1195 91       		.byte	0x91
 30568 1196 60       		.sleb128 -32
 30569 1197 23       		.uleb128 0x23
 30570 1198 290E0000 		.4byte	.LASF243
 30571 119c 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 663


 30572 119d 8703     		.2byte	0x387
 30573 119f A3000000 		.4byte	0xa3
 30574 11a3 02       		.uleb128 0x2
 30575 11a4 91       		.byte	0x91
 30576 11a5 5E       		.sleb128 -34
 30577 11a6 23       		.uleb128 0x23
 30578 11a7 BF140000 		.4byte	.LASF244
 30579 11ab 01       		.byte	0x1
 30580 11ac 8803     		.2byte	0x388
 30581 11ae D3000000 		.4byte	0xd3
 30582 11b2 02       		.uleb128 0x2
 30583 11b3 91       		.byte	0x91
 30584 11b4 58       		.sleb128 -40
 30585 11b5 23       		.uleb128 0x23
 30586 11b6 BA0F0000 		.4byte	.LASF245
 30587 11ba 01       		.byte	0x1
 30588 11bb 8903     		.2byte	0x389
 30589 11bd AF000000 		.4byte	0xaf
 30590 11c1 02       		.uleb128 0x2
 30591 11c2 91       		.byte	0x91
 30592 11c3 54       		.sleb128 -44
 30593 11c4 23       		.uleb128 0x23
 30594 11c5 9E140000 		.4byte	.LASF241
 30595 11c9 01       		.byte	0x1
 30596 11ca 8A03     		.2byte	0x38a
 30597 11cc EB000000 		.4byte	0xeb
 30598 11d0 02       		.uleb128 0x2
 30599 11d1 91       		.byte	0x91
 30600 11d2 50       		.sleb128 -48
 30601 11d3 23       		.uleb128 0x23
 30602 11d4 530F0000 		.4byte	.LASF246
 30603 11d8 01       		.byte	0x1
 30604 11d9 8C03     		.2byte	0x38c
 30605 11db 97000000 		.4byte	0x97
 30606 11df 02       		.uleb128 0x2
 30607 11e0 91       		.byte	0x91
 30608 11e1 65       		.sleb128 -27
 30609 11e2 23       		.uleb128 0x23
 30610 11e3 84010000 		.4byte	.LASF247
 30611 11e7 01       		.byte	0x1
 30612 11e8 8D03     		.2byte	0x38d
 30613 11ea 97000000 		.4byte	0x97
 30614 11ee 02       		.uleb128 0x2
 30615 11ef 91       		.byte	0x91
 30616 11f0 64       		.sleb128 -28
 30617 11f1 23       		.uleb128 0x23
 30618 11f2 DC030000 		.4byte	.LASF253
 30619 11f6 01       		.byte	0x1
 30620 11f7 9003     		.2byte	0x390
 30621 11f9 08130000 		.4byte	0x1308
 30622 11fd 02       		.uleb128 0x2
 30623 11fe 91       		.byte	0x91
 30624 11ff 68       		.sleb128 -24
 30625 1200 23       		.uleb128 0x23
 30626 1201 A70E0000 		.4byte	.LASF228
 30627 1205 01       		.byte	0x1
 30628 1206 9803     		.2byte	0x398
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 664


 30629 1208 0E130000 		.4byte	0x130e
 30630 120c 03       		.uleb128 0x3
 30631 120d 91       		.byte	0x91
 30632 120e 847D     		.sleb128 -380
 30633 1210 23       		.uleb128 0x23
 30634 1211 75150000 		.4byte	.LASF229
 30635 1215 01       		.byte	0x1
 30636 1216 F603     		.2byte	0x3f6
 30637 1218 1E130000 		.4byte	0x131e
 30638 121c 03       		.uleb128 0x3
 30639 121d 91       		.byte	0x91
 30640 121e B07C     		.sleb128 -464
 30641 1220 23       		.uleb128 0x23
 30642 1221 C6030000 		.4byte	.LASF230
 30643 1225 01       		.byte	0x1
 30644 1226 1204     		.2byte	0x412
 30645 1228 1E130000 		.4byte	0x131e
 30646 122c 03       		.uleb128 0x3
 30647 122d 91       		.byte	0x91
 30648 122e DC7B     		.sleb128 -548
 30649 1230 23       		.uleb128 0x23
 30650 1231 E00D0000 		.4byte	.LASF231
 30651 1235 01       		.byte	0x1
 30652 1236 2E04     		.2byte	0x42e
 30653 1238 1E130000 		.4byte	0x131e
 30654 123c 03       		.uleb128 0x3
 30655 123d 91       		.byte	0x91
 30656 123e 887B     		.sleb128 -632
 30657 1240 23       		.uleb128 0x23
 30658 1241 3E090000 		.4byte	.LASF233
 30659 1245 01       		.byte	0x1
 30660 1246 4B04     		.2byte	0x44b
 30661 1248 2E130000 		.4byte	0x132e
 30662 124c 03       		.uleb128 0x3
 30663 124d 91       		.byte	0x91
 30664 124e BC78     		.sleb128 -964
 30665 1250 23       		.uleb128 0x23
 30666 1251 FD150000 		.4byte	.LASF254
 30667 1255 01       		.byte	0x1
 30668 1256 6804     		.2byte	0x468
 30669 1258 3E130000 		.4byte	0x133e
 30670 125c 03       		.uleb128 0x3
 30671 125d 91       		.byte	0x91
 30672 125e C477     		.sleb128 -1084
 30673 1260 23       		.uleb128 0x23
 30674 1261 2E000000 		.4byte	.LASF255
 30675 1265 01       		.byte	0x1
 30676 1266 6B04     		.2byte	0x46b
 30677 1268 4E130000 		.4byte	0x134e
 30678 126c 03       		.uleb128 0x3
 30679 126d 91       		.byte	0x91
 30680 126e 8C77     		.sleb128 -1140
 30681 1270 23       		.uleb128 0x23
 30682 1271 DD090000 		.4byte	.LASF235
 30683 1275 01       		.byte	0x1
 30684 1276 7304     		.2byte	0x473
 30685 1278 5E130000 		.4byte	0x135e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 665


 30686 127c 03       		.uleb128 0x3
 30687 127d 91       		.byte	0x91
 30688 127e DC76     		.sleb128 -1188
 30689 1280 23       		.uleb128 0x23
 30690 1281 B6140000 		.4byte	.LASF232
 30691 1285 01       		.byte	0x1
 30692 1286 8204     		.2byte	0x482
 30693 1288 640C0000 		.4byte	0xc64
 30694 128c 03       		.uleb128 0x3
 30695 128d 91       		.byte	0x91
 30696 128e BC76     		.sleb128 -1220
 30697 1290 23       		.uleb128 0x23
 30698 1291 AD0E0000 		.4byte	.LASF256
 30699 1295 01       		.byte	0x1
 30700 1296 8304     		.2byte	0x483
 30701 1298 6E130000 		.4byte	0x136e
 30702 129c 03       		.uleb128 0x3
 30703 129d 91       		.byte	0x91
 30704 129e B076     		.sleb128 -1232
 30705 12a0 23       		.uleb128 0x23
 30706 12a1 CA0D0000 		.4byte	.LASF257
 30707 12a5 01       		.byte	0x1
 30708 12a6 8404     		.2byte	0x484
 30709 12a8 7E130000 		.4byte	0x137e
 30710 12ac 03       		.uleb128 0x3
 30711 12ad 91       		.byte	0x91
 30712 12ae 9C76     		.sleb128 -1252
 30713 12b0 23       		.uleb128 0x23
 30714 12b1 CC0F0000 		.4byte	.LASF258
 30715 12b5 01       		.byte	0x1
 30716 12b6 8504     		.2byte	0x485
 30717 12b8 97000000 		.4byte	0x97
 30718 12bc 02       		.uleb128 0x2
 30719 12bd 91       		.byte	0x91
 30720 12be 63       		.sleb128 -29
 30721 12bf 23       		.uleb128 0x23
 30722 12c0 5E0C0000 		.4byte	.LASF234
 30723 12c4 01       		.byte	0x1
 30724 12c5 8E04     		.2byte	0x48e
 30725 12c7 1E130000 		.4byte	0x131e
 30726 12cb 03       		.uleb128 0x3
 30727 12cc 91       		.byte	0x91
 30728 12cd C875     		.sleb128 -1336
 30729 12cf 23       		.uleb128 0x23
 30730 12d0 24160000 		.4byte	.LASF259
 30731 12d4 01       		.byte	0x1
 30732 12d5 9904     		.2byte	0x499
 30733 12d7 1E130000 		.4byte	0x131e
 30734 12db 03       		.uleb128 0x3
 30735 12dc 91       		.byte	0x91
 30736 12dd F474     		.sleb128 -1420
 30737 12df 1E       		.uleb128 0x1e
 30738 12e0 A6180000 		.4byte	.LBB22
 30739 12e4 86000000 		.4byte	.LBE22-.LBB22
 30740 12e8 26       		.uleb128 0x26
 30741 12e9 69647800 		.ascii	"idx\000"
 30742 12ed 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 666


 30743 12ee 0205     		.2byte	0x502
 30744 12f0 97000000 		.4byte	0x97
 30745 12f4 02       		.uleb128 0x2
 30746 12f5 91       		.byte	0x91
 30747 12f6 67       		.sleb128 -25
 30748 12f7 23       		.uleb128 0x23
 30749 12f8 8B060000 		.4byte	.LASF260
 30750 12fc 01       		.byte	0x1
 30751 12fd 0205     		.2byte	0x502
 30752 12ff 97000000 		.4byte	0x97
 30753 1303 02       		.uleb128 0x2
 30754 1304 91       		.byte	0x91
 30755 1305 66       		.sleb128 -26
 30756 1306 00       		.byte	0
 30757 1307 00       		.byte	0
 30758 1308 07       		.uleb128 0x7
 30759 1309 04       		.byte	0x4
 30760 130a 6F0B0000 		.4byte	0xb6f
 30761 130e 09       		.uleb128 0x9
 30762 130f FD100000 		.4byte	0x10fd
 30763 1313 1E130000 		.4byte	0x131e
 30764 1317 0A       		.uleb128 0xa
 30765 1318 18010000 		.4byte	0x118
 30766 131c 52       		.byte	0x52
 30767 131d 00       		.byte	0
 30768 131e 09       		.uleb128 0x9
 30769 131f 97000000 		.4byte	0x97
 30770 1323 2E130000 		.4byte	0x132e
 30771 1327 0A       		.uleb128 0xa
 30772 1328 18010000 		.4byte	0x118
 30773 132c 52       		.byte	0x52
 30774 132d 00       		.byte	0
 30775 132e 09       		.uleb128 0x9
 30776 132f 25010000 		.4byte	0x125
 30777 1333 3E130000 		.4byte	0x133e
 30778 1337 0A       		.uleb128 0xa
 30779 1338 18010000 		.4byte	0x118
 30780 133c 52       		.byte	0x52
 30781 133d 00       		.byte	0
 30782 133e 09       		.uleb128 0x9
 30783 133f F9000000 		.4byte	0xf9
 30784 1343 4E130000 		.4byte	0x134e
 30785 1347 0A       		.uleb128 0xa
 30786 1348 18010000 		.4byte	0x118
 30787 134c 75       		.byte	0x75
 30788 134d 00       		.byte	0
 30789 134e 09       		.uleb128 0x9
 30790 134f F9000000 		.4byte	0xf9
 30791 1353 5E130000 		.4byte	0x135e
 30792 1357 0A       		.uleb128 0xa
 30793 1358 18010000 		.4byte	0x118
 30794 135c 37       		.byte	0x37
 30795 135d 00       		.byte	0
 30796 135e 09       		.uleb128 0x9
 30797 135f 25010000 		.4byte	0x125
 30798 1363 6E130000 		.4byte	0x136e
 30799 1367 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 667


 30800 1368 18010000 		.4byte	0x118
 30801 136c 0B       		.byte	0xb
 30802 136d 00       		.byte	0
 30803 136e 09       		.uleb128 0x9
 30804 136f 97000000 		.4byte	0x97
 30805 1373 7E130000 		.4byte	0x137e
 30806 1377 0A       		.uleb128 0xa
 30807 1378 18010000 		.4byte	0x118
 30808 137c 08       		.byte	0x8
 30809 137d 00       		.byte	0
 30810 137e 09       		.uleb128 0x9
 30811 137f 97000000 		.4byte	0x97
 30812 1383 8E130000 		.4byte	0x138e
 30813 1387 0A       		.uleb128 0xa
 30814 1388 18010000 		.4byte	0x118
 30815 138c 11       		.byte	0x11
 30816 138d 00       		.byte	0
 30817 138e 22       		.uleb128 0x22
 30818 138f C7040000 		.4byte	.LASF261
 30819 1393 01       		.byte	0x1
 30820 1394 1305     		.2byte	0x513
 30821 1396 00000000 		.4byte	.LFB69
 30822 139a DC140000 		.4byte	.LFE69-.LFB69
 30823 139e 01       		.uleb128 0x1
 30824 139f 9C       		.byte	0x9c
 30825 13a0 30140000 		.4byte	0x1430
 30826 13a4 25       		.uleb128 0x25
 30827 13a5 49080000 		.4byte	.LASF251
 30828 13a9 01       		.byte	0x1
 30829 13aa 1305     		.2byte	0x513
 30830 13ac A3000000 		.4byte	0xa3
 30831 13b0 02       		.uleb128 0x2
 30832 13b1 91       		.byte	0x91
 30833 13b2 56       		.sleb128 -42
 30834 13b3 26       		.uleb128 0x26
 30835 13b4 6900     		.ascii	"i\000"
 30836 13b6 01       		.byte	0x1
 30837 13b7 1505     		.2byte	0x515
 30838 13b9 97000000 		.4byte	0x97
 30839 13bd 02       		.uleb128 0x2
 30840 13be 91       		.byte	0x91
 30841 13bf 67       		.sleb128 -25
 30842 13c0 26       		.uleb128 0x26
 30843 13c1 6A00     		.ascii	"j\000"
 30844 13c3 01       		.byte	0x1
 30845 13c4 1505     		.2byte	0x515
 30846 13c6 97000000 		.4byte	0x97
 30847 13ca 02       		.uleb128 0x2
 30848 13cb 91       		.byte	0x91
 30849 13cc 66       		.sleb128 -26
 30850 13cd 23       		.uleb128 0x23
 30851 13ce FB0D0000 		.4byte	.LASF262
 30852 13d2 01       		.byte	0x1
 30853 13d3 1605     		.2byte	0x516
 30854 13d5 97000000 		.4byte	0x97
 30855 13d9 02       		.uleb128 0x2
 30856 13da 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 668


 30857 13db 62       		.sleb128 -30
 30858 13dc 23       		.uleb128 0x23
 30859 13dd 9E140000 		.4byte	.LASF241
 30860 13e1 01       		.byte	0x1
 30861 13e2 1705     		.2byte	0x517
 30862 13e4 EB000000 		.4byte	0xeb
 30863 13e8 02       		.uleb128 0x2
 30864 13e9 91       		.byte	0x91
 30865 13ea 5C       		.sleb128 -36
 30866 13eb 23       		.uleb128 0x23
 30867 13ec A0040000 		.4byte	.LASF263
 30868 13f0 01       		.byte	0x1
 30869 13f1 1705     		.2byte	0x517
 30870 13f3 EB000000 		.4byte	0xeb
 30871 13f7 02       		.uleb128 0x2
 30872 13f8 91       		.byte	0x91
 30873 13f9 58       		.sleb128 -40
 30874 13fa 23       		.uleb128 0x23
 30875 13fb 530F0000 		.4byte	.LASF246
 30876 13ff 01       		.byte	0x1
 30877 1400 1905     		.2byte	0x519
 30878 1402 97000000 		.4byte	0x97
 30879 1406 02       		.uleb128 0x2
 30880 1407 91       		.byte	0x91
 30881 1408 64       		.sleb128 -28
 30882 1409 23       		.uleb128 0x23
 30883 140a 84010000 		.4byte	.LASF247
 30884 140e 01       		.byte	0x1
 30885 140f 1A05     		.2byte	0x51a
 30886 1411 97000000 		.4byte	0x97
 30887 1415 02       		.uleb128 0x2
 30888 1416 91       		.byte	0x91
 30889 1417 63       		.sleb128 -29
 30890 1418 1E       		.uleb128 0x1e
 30891 1419 080B0000 		.4byte	.LBB23
 30892 141d 26000000 		.4byte	.LBE23-.LBB23
 30893 1421 26       		.uleb128 0x26
 30894 1422 6900     		.ascii	"i\000"
 30895 1424 01       		.byte	0x1
 30896 1425 C105     		.2byte	0x5c1
 30897 1427 97000000 		.4byte	0x97
 30898 142b 02       		.uleb128 0x2
 30899 142c 91       		.byte	0x91
 30900 142d 65       		.sleb128 -27
 30901 142e 00       		.byte	0
 30902 142f 00       		.byte	0
 30903 1430 22       		.uleb128 0x22
 30904 1431 680A0000 		.4byte	.LASF264
 30905 1435 01       		.byte	0x1
 30906 1436 6D06     		.2byte	0x66d
 30907 1438 00000000 		.4byte	.LFB70
 30908 143c F40D0000 		.4byte	.LFE70-.LFB70
 30909 1440 01       		.uleb128 0x1
 30910 1441 9C       		.byte	0x9c
 30911 1442 BF150000 		.4byte	0x15bf
 30912 1446 25       		.uleb128 0x25
 30913 1447 49080000 		.4byte	.LASF251
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 669


 30914 144b 01       		.byte	0x1
 30915 144c 6D06     		.2byte	0x66d
 30916 144e A3000000 		.4byte	0xa3
 30917 1452 03       		.uleb128 0x3
 30918 1453 91       		.byte	0x91
 30919 1454 CE72     		.sleb128 -1714
 30920 1456 23       		.uleb128 0x23
 30921 1457 2F070000 		.4byte	.LASF236
 30922 145b 01       		.byte	0x1
 30923 145c 7006     		.2byte	0x670
 30924 145e BF150000 		.4byte	0x15bf
 30925 1462 03       		.uleb128 0x3
 30926 1463 91       		.byte	0x91
 30927 1464 DC74     		.sleb128 -1444
 30928 1466 23       		.uleb128 0x23
 30929 1467 4F130000 		.4byte	.LASF265
 30930 146b 01       		.byte	0x1
 30931 146c 7706     		.2byte	0x677
 30932 146e A3000000 		.4byte	0xa3
 30933 1472 02       		.uleb128 0x2
 30934 1473 91       		.byte	0x91
 30935 1474 62       		.sleb128 -30
 30936 1475 23       		.uleb128 0x23
 30937 1476 9F060000 		.4byte	.LASF266
 30938 147a 01       		.byte	0x1
 30939 147b 7806     		.2byte	0x678
 30940 147d A3000000 		.4byte	0xa3
 30941 1481 02       		.uleb128 0x2
 30942 1482 91       		.byte	0x91
 30943 1483 6E       		.sleb128 -18
 30944 1484 23       		.uleb128 0x23
 30945 1485 890A0000 		.4byte	.LASF267
 30946 1489 01       		.byte	0x1
 30947 148a 7906     		.2byte	0x679
 30948 148c A3000000 		.4byte	0xa3
 30949 1490 02       		.uleb128 0x2
 30950 1491 91       		.byte	0x91
 30951 1492 60       		.sleb128 -32
 30952 1493 23       		.uleb128 0x23
 30953 1494 080A0000 		.4byte	.LASF237
 30954 1498 01       		.byte	0x1
 30955 1499 7A06     		.2byte	0x67a
 30956 149b A3000000 		.4byte	0xa3
 30957 149f 02       		.uleb128 0x2
 30958 14a0 91       		.byte	0x91
 30959 14a1 5E       		.sleb128 -34
 30960 14a2 26       		.uleb128 0x26
 30961 14a3 6900     		.ascii	"i\000"
 30962 14a5 01       		.byte	0x1
 30963 14a6 8206     		.2byte	0x682
 30964 14a8 A3000000 		.4byte	0xa3
 30965 14ac 02       		.uleb128 0x2
 30966 14ad 91       		.byte	0x91
 30967 14ae 6C       		.sleb128 -20
 30968 14af 26       		.uleb128 0x26
 30969 14b0 6A00     		.ascii	"j\000"
 30970 14b2 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 670


 30971 14b3 8206     		.2byte	0x682
 30972 14b5 A3000000 		.4byte	0xa3
 30973 14b9 02       		.uleb128 0x2
 30974 14ba 91       		.byte	0x91
 30975 14bb 6A       		.sleb128 -22
 30976 14bc 26       		.uleb128 0x26
 30977 14bd 6B00     		.ascii	"k\000"
 30978 14bf 01       		.byte	0x1
 30979 14c0 8206     		.2byte	0x682
 30980 14c2 A3000000 		.4byte	0xa3
 30981 14c6 02       		.uleb128 0x2
 30982 14c7 91       		.byte	0x91
 30983 14c8 68       		.sleb128 -24
 30984 14c9 26       		.uleb128 0x26
 30985 14ca 6800     		.ascii	"h\000"
 30986 14cc 01       		.byte	0x1
 30987 14cd 8206     		.2byte	0x682
 30988 14cf A3000000 		.4byte	0xa3
 30989 14d3 02       		.uleb128 0x2
 30990 14d4 91       		.byte	0x91
 30991 14d5 66       		.sleb128 -26
 30992 14d6 23       		.uleb128 0x23
 30993 14d7 94060000 		.4byte	.LASF268
 30994 14db 01       		.byte	0x1
 30995 14dc 8306     		.2byte	0x683
 30996 14de A3000000 		.4byte	0xa3
 30997 14e2 02       		.uleb128 0x2
 30998 14e3 91       		.byte	0x91
 30999 14e4 5C       		.sleb128 -36
 31000 14e5 23       		.uleb128 0x23
 31001 14e6 680F0000 		.4byte	.LASF269
 31002 14ea 01       		.byte	0x1
 31003 14eb 8606     		.2byte	0x686
 31004 14ed 30010000 		.4byte	0x130
 31005 14f1 03       		.uleb128 0x3
 31006 14f2 91       		.byte	0x91
 31007 14f3 C074     		.sleb128 -1472
 31008 14f5 23       		.uleb128 0x23
 31009 14f6 16130000 		.4byte	.LASF270
 31010 14fa 01       		.byte	0x1
 31011 14fb 8706     		.2byte	0x687
 31012 14fd D0150000 		.4byte	0x15d0
 31013 1501 03       		.uleb128 0x3
 31014 1502 91       		.byte	0x91
 31015 1503 B474     		.sleb128 -1484
 31016 1505 23       		.uleb128 0x23
 31017 1506 D7080000 		.4byte	.LASF271
 31018 150a 01       		.byte	0x1
 31019 150b 8806     		.2byte	0x688
 31020 150d E0150000 		.4byte	0x15e0
 31021 1511 03       		.uleb128 0x3
 31022 1512 91       		.byte	0x91
 31023 1513 A074     		.sleb128 -1504
 31024 1515 23       		.uleb128 0x23
 31025 1516 27000000 		.4byte	.LASF272
 31026 151a 01       		.byte	0x1
 31027 151b 8906     		.2byte	0x689
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 671


 31028 151d F0150000 		.4byte	0x15f0
 31029 1521 03       		.uleb128 0x3
 31030 1522 91       		.byte	0x91
 31031 1523 9074     		.sleb128 -1520
 31032 1525 23       		.uleb128 0x23
 31033 1526 45100000 		.4byte	.LASF273
 31034 152a 01       		.byte	0x1
 31035 152b 8A06     		.2byte	0x68a
 31036 152d 00160000 		.4byte	0x1600
 31037 1531 03       		.uleb128 0x3
 31038 1532 91       		.byte	0x91
 31039 1533 E473     		.sleb128 -1564
 31040 1535 23       		.uleb128 0x23
 31041 1536 8A020000 		.4byte	.LASF274
 31042 153a 01       		.byte	0x1
 31043 153b 8B06     		.2byte	0x68b
 31044 153d 30010000 		.4byte	0x130
 31045 1541 03       		.uleb128 0x3
 31046 1542 91       		.byte	0x91
 31047 1543 C873     		.sleb128 -1592
 31048 1545 23       		.uleb128 0x23
 31049 1546 F5010000 		.4byte	.LASF275
 31050 154a 01       		.byte	0x1
 31051 154b 8E06     		.2byte	0x68e
 31052 154d 97000000 		.4byte	0x97
 31053 1551 02       		.uleb128 0x2
 31054 1552 91       		.byte	0x91
 31055 1553 5B       		.sleb128 -37
 31056 1554 23       		.uleb128 0x23
 31057 1555 12060000 		.4byte	.LASF276
 31058 1559 01       		.byte	0x1
 31059 155a 8F06     		.2byte	0x68f
 31060 155c 97000000 		.4byte	0x97
 31061 1560 02       		.uleb128 0x2
 31062 1561 91       		.byte	0x91
 31063 1562 5A       		.sleb128 -38
 31064 1563 23       		.uleb128 0x23
 31065 1564 BE120000 		.4byte	.LASF277
 31066 1568 01       		.byte	0x1
 31067 1569 9006     		.2byte	0x690
 31068 156b 97000000 		.4byte	0x97
 31069 156f 02       		.uleb128 0x2
 31070 1570 91       		.byte	0x91
 31071 1571 59       		.sleb128 -39
 31072 1572 23       		.uleb128 0x23
 31073 1573 3D130000 		.4byte	.LASF278
 31074 1577 01       		.byte	0x1
 31075 1578 9106     		.2byte	0x691
 31076 157a 97000000 		.4byte	0x97
 31077 157e 02       		.uleb128 0x2
 31078 157f 91       		.byte	0x91
 31079 1580 58       		.sleb128 -40
 31080 1581 23       		.uleb128 0x23
 31081 1582 20060000 		.4byte	.LASF279
 31082 1586 01       		.byte	0x1
 31083 1587 9206     		.2byte	0x692
 31084 1589 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 672


 31085 158d 02       		.uleb128 0x2
 31086 158e 91       		.byte	0x91
 31087 158f 57       		.sleb128 -41
 31088 1590 23       		.uleb128 0x23
 31089 1591 43010000 		.4byte	.LASF280
 31090 1595 01       		.byte	0x1
 31091 1596 9306     		.2byte	0x693
 31092 1598 97000000 		.4byte	0x97
 31093 159c 02       		.uleb128 0x2
 31094 159d 91       		.byte	0x91
 31095 159e 65       		.sleb128 -27
 31096 159f 23       		.uleb128 0x23
 31097 15a0 FD150000 		.4byte	.LASF254
 31098 15a4 01       		.byte	0x1
 31099 15a5 9506     		.2byte	0x695
 31100 15a7 3E130000 		.4byte	0x133e
 31101 15ab 03       		.uleb128 0x3
 31102 15ac 91       		.byte	0x91
 31103 15ad D072     		.sleb128 -1712
 31104 15af 23       		.uleb128 0x23
 31105 15b0 B4040000 		.4byte	.LASF281
 31106 15b4 01       		.byte	0x1
 31107 15b5 9606     		.2byte	0x696
 31108 15b7 97000000 		.4byte	0x97
 31109 15bb 02       		.uleb128 0x2
 31110 15bc 91       		.byte	0x91
 31111 15bd 56       		.sleb128 -42
 31112 15be 00       		.byte	0
 31113 15bf 09       		.uleb128 0x9
 31114 15c0 97000000 		.4byte	0x97
 31115 15c4 D0150000 		.4byte	0x15d0
 31116 15c8 24       		.uleb128 0x24
 31117 15c9 18010000 		.4byte	0x118
 31118 15cd 7805     		.2byte	0x578
 31119 15cf 00       		.byte	0
 31120 15d0 09       		.uleb128 0x9
 31121 15d1 F9000000 		.4byte	0xf9
 31122 15d5 E0150000 		.4byte	0x15e0
 31123 15d9 0A       		.uleb128 0xa
 31124 15da 18010000 		.4byte	0x118
 31125 15de 0A       		.byte	0xa
 31126 15df 00       		.byte	0
 31127 15e0 09       		.uleb128 0x9
 31128 15e1 F9000000 		.4byte	0xf9
 31129 15e5 F0150000 		.4byte	0x15f0
 31130 15e9 0A       		.uleb128 0xa
 31131 15ea 18010000 		.4byte	0x118
 31132 15ee 13       		.byte	0x13
 31133 15ef 00       		.byte	0
 31134 15f0 09       		.uleb128 0x9
 31135 15f1 F9000000 		.4byte	0xf9
 31136 15f5 00160000 		.4byte	0x1600
 31137 15f9 0A       		.uleb128 0xa
 31138 15fa 18010000 		.4byte	0x118
 31139 15fe 0F       		.byte	0xf
 31140 15ff 00       		.byte	0
 31141 1600 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 673


 31142 1601 F9000000 		.4byte	0xf9
 31143 1605 10160000 		.4byte	0x1610
 31144 1609 0A       		.uleb128 0xa
 31145 160a 18010000 		.4byte	0x118
 31146 160e 29       		.byte	0x29
 31147 160f 00       		.byte	0
 31148 1610 27       		.uleb128 0x27
 31149 1611 A4030000 		.4byte	.LASF320
 31150 1615 01       		.byte	0x1
 31151 1616 5C07     		.2byte	0x75c
 31152 1618 00000000 		.4byte	.LFB71
 31153 161c 90000000 		.4byte	.LFE71-.LFB71
 31154 1620 01       		.uleb128 0x1
 31155 1621 9C       		.byte	0x9c
 31156 1622 41160000 		.4byte	0x1641
 31157 1626 26       		.uleb128 0x26
 31158 1627 6900     		.ascii	"i\000"
 31159 1629 01       		.byte	0x1
 31160 162a 5E07     		.2byte	0x75e
 31161 162c 97000000 		.4byte	0x97
 31162 1630 02       		.uleb128 0x2
 31163 1631 91       		.byte	0x91
 31164 1632 6F       		.sleb128 -17
 31165 1633 26       		.uleb128 0x26
 31166 1634 6A00     		.ascii	"j\000"
 31167 1636 01       		.byte	0x1
 31168 1637 5E07     		.2byte	0x75e
 31169 1639 97000000 		.4byte	0x97
 31170 163d 02       		.uleb128 0x2
 31171 163e 91       		.byte	0x91
 31172 163f 6E       		.sleb128 -18
 31173 1640 00       		.byte	0
 31174 1641 22       		.uleb128 0x22
 31175 1642 63010000 		.4byte	.LASF282
 31176 1646 01       		.byte	0x1
 31177 1647 6F07     		.2byte	0x76f
 31178 1649 00000000 		.4byte	.LFB72
 31179 164d 98210000 		.4byte	.LFE72-.LFB72
 31180 1651 01       		.uleb128 0x1
 31181 1652 9C       		.byte	0x9c
 31182 1653 FA160000 		.4byte	0x16fa
 31183 1657 25       		.uleb128 0x25
 31184 1658 720F0000 		.4byte	.LASF283
 31185 165c 01       		.byte	0x1
 31186 165d 6F07     		.2byte	0x76f
 31187 165f 1F010000 		.4byte	0x11f
 31188 1663 03       		.uleb128 0x3
 31189 1664 91       		.byte	0x91
 31190 1665 D47E     		.sleb128 -172
 31191 1667 26       		.uleb128 0x26
 31192 1668 6900     		.ascii	"i\000"
 31193 166a 01       		.byte	0x1
 31194 166b 7107     		.2byte	0x771
 31195 166d 73000000 		.4byte	0x73
 31196 1671 02       		.uleb128 0x2
 31197 1672 91       		.byte	0x91
 31198 1673 54       		.sleb128 -44
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 674


 31199 1674 23       		.uleb128 0x23
 31200 1675 DC030000 		.4byte	.LASF253
 31201 1679 01       		.byte	0x1
 31202 167a 7307     		.2byte	0x773
 31203 167c 08130000 		.4byte	0x1308
 31204 1680 02       		.uleb128 0x2
 31205 1681 91       		.byte	0x91
 31206 1682 48       		.sleb128 -56
 31207 1683 1E       		.uleb128 0x1e
 31208 1684 1C000000 		.4byte	.LBB24
 31209 1688 38210000 		.4byte	.LBE24-.LBB24
 31210 168c 26       		.uleb128 0x26
 31211 168d 73747200 		.ascii	"str\000"
 31212 1691 01       		.byte	0x1
 31213 1692 7607     		.2byte	0x776
 31214 1694 FA160000 		.4byte	0x16fa
 31215 1698 03       		.uleb128 0x3
 31216 1699 91       		.byte	0x91
 31217 169a D87E     		.sleb128 -168
 31218 169c 26       		.uleb128 0x26
 31219 169d 6A00     		.ascii	"j\000"
 31220 169f 01       		.byte	0x1
 31221 16a0 3209     		.2byte	0x932
 31222 16a2 73000000 		.4byte	0x73
 31223 16a6 02       		.uleb128 0x2
 31224 16a7 91       		.byte	0x91
 31225 16a8 4C       		.sleb128 -52
 31226 16a9 1E       		.uleb128 0x1e
 31227 16aa 1C030000 		.4byte	.LBB25
 31228 16ae 06140000 		.4byte	.LBE25-.LBB25
 31229 16b2 26       		.uleb128 0x26
 31230 16b3 6B00     		.ascii	"k\000"
 31231 16b5 01       		.byte	0x1
 31232 16b6 AA07     		.2byte	0x7aa
 31233 16b8 97000000 		.4byte	0x97
 31234 16bc 02       		.uleb128 0x2
 31235 16bd 91       		.byte	0x91
 31236 16be 53       		.sleb128 -45
 31237 16bf 1E       		.uleb128 0x1e
 31238 16c0 6C030000 		.4byte	.LBB26
 31239 16c4 9A130000 		.4byte	.LBE26-.LBB26
 31240 16c8 23       		.uleb128 0x23
 31241 16c9 530F0000 		.4byte	.LASF246
 31242 16cd 01       		.byte	0x1
 31243 16ce AC07     		.2byte	0x7ac
 31244 16d0 97000000 		.4byte	0x97
 31245 16d4 02       		.uleb128 0x2
 31246 16d5 91       		.byte	0x91
 31247 16d6 47       		.sleb128 -57
 31248 16d7 26       		.uleb128 0x26
 31249 16d8 4D4F5400 		.ascii	"MOT\000"
 31250 16dc 01       		.byte	0x1
 31251 16dd AD07     		.2byte	0x7ad
 31252 16df 0A170000 		.4byte	0x170a
 31253 16e3 02       		.uleb128 0x2
 31254 16e4 91       		.byte	0x91
 31255 16e5 40       		.sleb128 -64
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 675


 31256 16e6 23       		.uleb128 0x23
 31257 16e7 65150000 		.4byte	.LASF284
 31258 16eb 01       		.byte	0x1
 31259 16ec AE07     		.2byte	0x7ae
 31260 16ee 97000000 		.4byte	0x97
 31261 16f2 03       		.uleb128 0x3
 31262 16f3 91       		.byte	0x91
 31263 16f4 BF7F     		.sleb128 -65
 31264 16f6 00       		.byte	0
 31265 16f7 00       		.byte	0
 31266 16f8 00       		.byte	0
 31267 16f9 00       		.byte	0
 31268 16fa 09       		.uleb128 0x9
 31269 16fb F9000000 		.4byte	0xf9
 31270 16ff 0A170000 		.4byte	0x170a
 31271 1703 0A       		.uleb128 0xa
 31272 1704 18010000 		.4byte	0x118
 31273 1708 63       		.byte	0x63
 31274 1709 00       		.byte	0
 31275 170a 07       		.uleb128 0x7
 31276 170b 04       		.byte	0x4
 31277 170c 30060000 		.4byte	0x630
 31278 1710 22       		.uleb128 0x22
 31279 1711 78100000 		.4byte	.LASF285
 31280 1715 01       		.byte	0x1
 31281 1716 5C09     		.2byte	0x95c
 31282 1718 00000000 		.4byte	.LFB73
 31283 171c 90040000 		.4byte	.LFE73-.LFB73
 31284 1720 01       		.uleb128 0x1
 31285 1721 9C       		.byte	0x9c
 31286 1722 A0170000 		.4byte	0x17a0
 31287 1726 25       		.uleb128 0x25
 31288 1727 720F0000 		.4byte	.LASF283
 31289 172b 01       		.byte	0x1
 31290 172c 5C09     		.2byte	0x95c
 31291 172e 1F010000 		.4byte	0x11f
 31292 1732 03       		.uleb128 0x3
 31293 1733 91       		.byte	0x91
 31294 1734 BC7C     		.sleb128 -452
 31295 1736 26       		.uleb128 0x26
 31296 1737 73747200 		.ascii	"str\000"
 31297 173b 01       		.byte	0x1
 31298 173c 5E09     		.2byte	0x95e
 31299 173e FA160000 		.4byte	0x16fa
 31300 1742 03       		.uleb128 0x3
 31301 1743 91       		.byte	0x91
 31302 1744 F07E     		.sleb128 -144
 31303 1746 26       		.uleb128 0x26
 31304 1747 6900     		.ascii	"i\000"
 31305 1749 01       		.byte	0x1
 31306 174a 5F09     		.2byte	0x95f
 31307 174c 73000000 		.4byte	0x73
 31308 1750 02       		.uleb128 0x2
 31309 1751 91       		.byte	0x91
 31310 1752 64       		.sleb128 -28
 31311 1753 23       		.uleb128 0x23
 31312 1754 77050000 		.4byte	.LASF286
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 676


 31313 1758 01       		.byte	0x1
 31314 1759 6009     		.2byte	0x960
 31315 175b 73000000 		.4byte	0x73
 31316 175f 02       		.uleb128 0x2
 31317 1760 91       		.byte	0x91
 31318 1761 54       		.sleb128 -44
 31319 1762 23       		.uleb128 0x23
 31320 1763 DC030000 		.4byte	.LASF253
 31321 1767 01       		.byte	0x1
 31322 1768 6209     		.2byte	0x962
 31323 176a 08130000 		.4byte	0x1308
 31324 176e 02       		.uleb128 0x2
 31325 176f 91       		.byte	0x91
 31326 1770 60       		.sleb128 -32
 31327 1771 26       		.uleb128 0x26
 31328 1772 4D4F5400 		.ascii	"MOT\000"
 31329 1776 01       		.byte	0x1
 31330 1777 6309     		.2byte	0x963
 31331 1779 0A170000 		.4byte	0x170a
 31332 177d 02       		.uleb128 0x2
 31333 177e 91       		.byte	0x91
 31334 177f 5C       		.sleb128 -36
 31335 1780 23       		.uleb128 0x23
 31336 1781 65150000 		.4byte	.LASF284
 31337 1785 01       		.byte	0x1
 31338 1786 6409     		.2byte	0x964
 31339 1788 97000000 		.4byte	0x97
 31340 178c 02       		.uleb128 0x2
 31341 178d 91       		.byte	0x91
 31342 178e 5B       		.sleb128 -37
 31343 178f 23       		.uleb128 0x23
 31344 1790 14070000 		.4byte	.LASF287
 31345 1794 01       		.byte	0x1
 31346 1795 9C09     		.2byte	0x99c
 31347 1797 A0170000 		.4byte	0x17a0
 31348 179b 03       		.uleb128 0x3
 31349 179c 91       		.byte	0x91
 31350 179d C47C     		.sleb128 -444
 31351 179f 00       		.byte	0
 31352 17a0 09       		.uleb128 0x9
 31353 17a1 F9000000 		.4byte	0xf9
 31354 17a5 B1170000 		.4byte	0x17b1
 31355 17a9 24       		.uleb128 0x24
 31356 17aa 18010000 		.4byte	0x118
 31357 17ae 2B01     		.2byte	0x12b
 31358 17b0 00       		.byte	0
 31359 17b1 22       		.uleb128 0x22
 31360 17b2 050E0000 		.4byte	.LASF288
 31361 17b6 01       		.byte	0x1
 31362 17b7 A609     		.2byte	0x9a6
 31363 17b9 00000000 		.4byte	.LFB74
 31364 17bd 5C020000 		.4byte	.LFE74-.LFB74
 31365 17c1 01       		.uleb128 0x1
 31366 17c2 9C       		.byte	0x9c
 31367 17c3 F7170000 		.4byte	0x17f7
 31368 17c7 25       		.uleb128 0x25
 31369 17c8 720F0000 		.4byte	.LASF283
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 677


 31370 17cc 01       		.byte	0x1
 31371 17cd A609     		.2byte	0x9a6
 31372 17cf 1F010000 		.4byte	0x11f
 31373 17d3 03       		.uleb128 0x3
 31374 17d4 91       		.byte	0x91
 31375 17d5 CC7E     		.sleb128 -180
 31376 17d7 26       		.uleb128 0x26
 31377 17d8 73747200 		.ascii	"str\000"
 31378 17dc 01       		.byte	0x1
 31379 17dd A809     		.2byte	0x9a8
 31380 17df F7170000 		.4byte	0x17f7
 31381 17e3 03       		.uleb128 0x3
 31382 17e4 91       		.byte	0x91
 31383 17e5 D47E     		.sleb128 -172
 31384 17e7 23       		.uleb128 0x23
 31385 17e8 DC030000 		.4byte	.LASF253
 31386 17ec 01       		.byte	0x1
 31387 17ed AA09     		.2byte	0x9aa
 31388 17ef 08130000 		.4byte	0x1308
 31389 17f3 02       		.uleb128 0x2
 31390 17f4 91       		.byte	0x91
 31391 17f5 6C       		.sleb128 -20
 31392 17f6 00       		.byte	0
 31393 17f7 09       		.uleb128 0x9
 31394 17f8 F9000000 		.4byte	0xf9
 31395 17fc 07180000 		.4byte	0x1807
 31396 1800 0A       		.uleb128 0xa
 31397 1801 18010000 		.4byte	0x118
 31398 1805 95       		.byte	0x95
 31399 1806 00       		.byte	0
 31400 1807 22       		.uleb128 0x22
 31401 1808 E0100000 		.4byte	.LASF289
 31402 180c 01       		.byte	0x1
 31403 180d D309     		.2byte	0x9d3
 31404 180f 00000000 		.4byte	.LFB75
 31405 1813 80120000 		.4byte	.LFE75-.LFB75
 31406 1817 01       		.uleb128 0x1
 31407 1818 9C       		.byte	0x9c
 31408 1819 A8180000 		.4byte	0x18a8
 31409 181d 25       		.uleb128 0x25
 31410 181e 720F0000 		.4byte	.LASF283
 31411 1822 01       		.byte	0x1
 31412 1823 D309     		.2byte	0x9d3
 31413 1825 1F010000 		.4byte	0x11f
 31414 1829 03       		.uleb128 0x3
 31415 182a 91       		.byte	0x91
 31416 182b D47E     		.sleb128 -172
 31417 182d 26       		.uleb128 0x26
 31418 182e 73747200 		.ascii	"str\000"
 31419 1832 01       		.byte	0x1
 31420 1833 D509     		.2byte	0x9d5
 31421 1835 FA160000 		.4byte	0x16fa
 31422 1839 03       		.uleb128 0x3
 31423 183a 91       		.byte	0x91
 31424 183b DC7E     		.sleb128 -164
 31425 183d 26       		.uleb128 0x26
 31426 183e 6900     		.ascii	"i\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 678


 31427 1840 01       		.byte	0x1
 31428 1841 D609     		.2byte	0x9d6
 31429 1843 73000000 		.4byte	0x73
 31430 1847 02       		.uleb128 0x2
 31431 1848 91       		.byte	0x91
 31432 1849 54       		.sleb128 -44
 31433 184a 23       		.uleb128 0x23
 31434 184b DC030000 		.4byte	.LASF253
 31435 184f 01       		.byte	0x1
 31436 1850 DA09     		.2byte	0x9da
 31437 1852 08130000 		.4byte	0x1308
 31438 1856 02       		.uleb128 0x2
 31439 1857 91       		.byte	0x91
 31440 1858 4C       		.sleb128 -52
 31441 1859 1E       		.uleb128 0x1e
 31442 185a 08010000 		.4byte	.LBB27
 31443 185e D80C0000 		.4byte	.LBE27-.LBB27
 31444 1862 26       		.uleb128 0x26
 31445 1863 6B00     		.ascii	"k\000"
 31446 1865 01       		.byte	0x1
 31447 1866 EF09     		.2byte	0x9ef
 31448 1868 97000000 		.4byte	0x97
 31449 186c 02       		.uleb128 0x2
 31450 186d 91       		.byte	0x91
 31451 186e 53       		.sleb128 -45
 31452 186f 1E       		.uleb128 0x1e
 31453 1870 12010000 		.4byte	.LBB28
 31454 1874 B20C0000 		.4byte	.LBE28-.LBB28
 31455 1878 23       		.uleb128 0x23
 31456 1879 530F0000 		.4byte	.LASF246
 31457 187d 01       		.byte	0x1
 31458 187e F109     		.2byte	0x9f1
 31459 1880 97000000 		.4byte	0x97
 31460 1884 02       		.uleb128 0x2
 31461 1885 91       		.byte	0x91
 31462 1886 4B       		.sleb128 -53
 31463 1887 26       		.uleb128 0x26
 31464 1888 4D4F5400 		.ascii	"MOT\000"
 31465 188c 01       		.byte	0x1
 31466 188d F209     		.2byte	0x9f2
 31467 188f 0A170000 		.4byte	0x170a
 31468 1893 02       		.uleb128 0x2
 31469 1894 91       		.byte	0x91
 31470 1895 44       		.sleb128 -60
 31471 1896 23       		.uleb128 0x23
 31472 1897 65150000 		.4byte	.LASF284
 31473 189b 01       		.byte	0x1
 31474 189c F309     		.2byte	0x9f3
 31475 189e 97000000 		.4byte	0x97
 31476 18a2 02       		.uleb128 0x2
 31477 18a3 91       		.byte	0x91
 31478 18a4 43       		.sleb128 -61
 31479 18a5 00       		.byte	0
 31480 18a6 00       		.byte	0
 31481 18a7 00       		.byte	0
 31482 18a8 22       		.uleb128 0x22
 31483 18a9 FF0C0000 		.4byte	.LASF290
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 679


 31484 18ad 01       		.byte	0x1
 31485 18ae DB0A     		.2byte	0xadb
 31486 18b0 00000000 		.4byte	.LFB76
 31487 18b4 DC000000 		.4byte	.LFE76-.LFB76
 31488 18b8 01       		.uleb128 0x1
 31489 18b9 9C       		.byte	0x9c
 31490 18ba EC180000 		.4byte	0x18ec
 31491 18be 25       		.uleb128 0x25
 31492 18bf 720F0000 		.4byte	.LASF283
 31493 18c3 01       		.byte	0x1
 31494 18c4 DB0A     		.2byte	0xadb
 31495 18c6 1F010000 		.4byte	0x11f
 31496 18ca 03       		.uleb128 0x3
 31497 18cb 91       		.byte	0x91
 31498 18cc DC7E     		.sleb128 -164
 31499 18ce 26       		.uleb128 0x26
 31500 18cf 73747200 		.ascii	"str\000"
 31501 18d3 01       		.byte	0x1
 31502 18d4 DD0A     		.2byte	0xadd
 31503 18d6 EC180000 		.4byte	0x18ec
 31504 18da 03       		.uleb128 0x3
 31505 18db 91       		.byte	0x91
 31506 18dc E07E     		.sleb128 -160
 31507 18de 26       		.uleb128 0x26
 31508 18df 6900     		.ascii	"i\000"
 31509 18e1 01       		.byte	0x1
 31510 18e2 DE0A     		.2byte	0xade
 31511 18e4 73000000 		.4byte	0x73
 31512 18e8 02       		.uleb128 0x2
 31513 18e9 91       		.byte	0x91
 31514 18ea 6C       		.sleb128 -20
 31515 18eb 00       		.byte	0
 31516 18ec 09       		.uleb128 0x9
 31517 18ed F9000000 		.4byte	0xf9
 31518 18f1 FC180000 		.4byte	0x18fc
 31519 18f5 0A       		.uleb128 0xa
 31520 18f6 18010000 		.4byte	0x118
 31521 18fa 8B       		.byte	0x8b
 31522 18fb 00       		.byte	0
 31523 18fc 22       		.uleb128 0x22
 31524 18fd 7E0F0000 		.4byte	.LASF291
 31525 1901 01       		.byte	0x1
 31526 1902 F30A     		.2byte	0xaf3
 31527 1904 00000000 		.4byte	.LFB77
 31528 1908 80010000 		.4byte	.LFE77-.LFB77
 31529 190c 01       		.uleb128 0x1
 31530 190d 9C       		.byte	0x9c
 31531 190e 40190000 		.4byte	0x1940
 31532 1912 25       		.uleb128 0x25
 31533 1913 720F0000 		.4byte	.LASF283
 31534 1917 01       		.byte	0x1
 31535 1918 F30A     		.2byte	0xaf3
 31536 191a 1F010000 		.4byte	0x11f
 31537 191e 03       		.uleb128 0x3
 31538 191f 91       		.byte	0x91
 31539 1920 E47E     		.sleb128 -156
 31540 1922 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 680


 31541 1923 73747200 		.ascii	"str\000"
 31542 1927 01       		.byte	0x1
 31543 1928 F50A     		.2byte	0xaf5
 31544 192a 40190000 		.4byte	0x1940
 31545 192e 03       		.uleb128 0x3
 31546 192f 91       		.byte	0x91
 31547 1930 EC7E     		.sleb128 -148
 31548 1932 26       		.uleb128 0x26
 31549 1933 6900     		.ascii	"i\000"
 31550 1935 01       		.byte	0x1
 31551 1936 F60A     		.2byte	0xaf6
 31552 1938 73000000 		.4byte	0x73
 31553 193c 02       		.uleb128 0x2
 31554 193d 91       		.byte	0x91
 31555 193e 64       		.sleb128 -28
 31556 193f 00       		.byte	0
 31557 1940 09       		.uleb128 0x9
 31558 1941 F9000000 		.4byte	0xf9
 31559 1945 50190000 		.4byte	0x1950
 31560 1949 0A       		.uleb128 0xa
 31561 194a 18010000 		.4byte	0x118
 31562 194e 77       		.byte	0x77
 31563 194f 00       		.byte	0
 31564 1950 28       		.uleb128 0x28
 31565 1951 12110000 		.4byte	.LASF292
 31566 1955 01       		.byte	0x1
 31567 1956 1F0B     		.2byte	0xb1f
 31568 1958 00000000 		.4byte	.LFB78
 31569 195c 28000000 		.4byte	.LFE78-.LFB78
 31570 1960 01       		.uleb128 0x1
 31571 1961 9C       		.byte	0x9c
 31572 1962 76190000 		.4byte	0x1976
 31573 1966 25       		.uleb128 0x25
 31574 1967 720F0000 		.4byte	.LASF283
 31575 196b 01       		.byte	0x1
 31576 196c 1F0B     		.2byte	0xb1f
 31577 196e 1F010000 		.4byte	0x11f
 31578 1972 02       		.uleb128 0x2
 31579 1973 91       		.byte	0x91
 31580 1974 6C       		.sleb128 -20
 31581 1975 00       		.byte	0
 31582 1976 22       		.uleb128 0x22
 31583 1977 71040000 		.4byte	.LASF293
 31584 197b 01       		.byte	0x1
 31585 197c 2A0B     		.2byte	0xb2a
 31586 197e 00000000 		.4byte	.LFB79
 31587 1982 F0000000 		.4byte	.LFE79-.LFB79
 31588 1986 01       		.uleb128 0x1
 31589 1987 9C       		.byte	0x9c
 31590 1988 E5190000 		.4byte	0x19e5
 31591 198c 25       		.uleb128 0x25
 31592 198d 720F0000 		.4byte	.LASF283
 31593 1991 01       		.byte	0x1
 31594 1992 2A0B     		.2byte	0xb2a
 31595 1994 1F010000 		.4byte	0x11f
 31596 1998 03       		.uleb128 0x3
 31597 1999 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 681


 31598 199a FC7E     		.sleb128 -132
 31599 199c 23       		.uleb128 0x23
 31600 199d 7A020000 		.4byte	.LASF294
 31601 19a1 01       		.byte	0x1
 31602 19a2 2C0B     		.2byte	0xb2c
 31603 19a4 FA160000 		.4byte	0x16fa
 31604 19a8 03       		.uleb128 0x3
 31605 19a9 91       		.byte	0x91
 31606 19aa 847F     		.sleb128 -124
 31607 19ac 23       		.uleb128 0x23
 31608 19ad 1E020000 		.4byte	.LASF295
 31609 19b1 01       		.byte	0x1
 31610 19b2 2D0B     		.2byte	0xb2d
 31611 19b4 A3000000 		.4byte	0xa3
 31612 19b8 02       		.uleb128 0x2
 31613 19b9 91       		.byte	0x91
 31614 19ba 6E       		.sleb128 -18
 31615 19bb 23       		.uleb128 0x23
 31616 19bc F5000000 		.4byte	.LASF296
 31617 19c0 01       		.byte	0x1
 31618 19c1 2E0B     		.2byte	0xb2e
 31619 19c3 EB000000 		.4byte	0xeb
 31620 19c7 05       		.uleb128 0x5
 31621 19c8 03       		.byte	0x3
 31622 19c9 00000000 		.4byte	h_time.11318
 31623 19cd 1E       		.uleb128 0x1e
 31624 19ce 26000000 		.4byte	.LBB29
 31625 19d2 A4000000 		.4byte	.LBE29-.LBB29
 31626 19d6 26       		.uleb128 0x26
 31627 19d7 6900     		.ascii	"i\000"
 31628 19d9 01       		.byte	0x1
 31629 19da 330B     		.2byte	0xb33
 31630 19dc 73000000 		.4byte	0x73
 31631 19e0 02       		.uleb128 0x2
 31632 19e1 91       		.byte	0x91
 31633 19e2 68       		.sleb128 -24
 31634 19e3 00       		.byte	0
 31635 19e4 00       		.byte	0
 31636 19e5 22       		.uleb128 0x22
 31637 19e6 87160000 		.4byte	.LASF297
 31638 19ea 01       		.byte	0x1
 31639 19eb 4B0B     		.2byte	0xb4b
 31640 19ed 00000000 		.4byte	.LFB80
 31641 19f1 74030000 		.4byte	.LFE80-.LFB80
 31642 19f5 01       		.uleb128 0x1
 31643 19f6 9C       		.byte	0x9c
 31644 19f7 291A0000 		.4byte	0x1a29
 31645 19fb 25       		.uleb128 0x25
 31646 19fc 720F0000 		.4byte	.LASF283
 31647 1a00 01       		.byte	0x1
 31648 1a01 4B0B     		.2byte	0xb4b
 31649 1a03 1F010000 		.4byte	0x11f
 31650 1a07 03       		.uleb128 0x3
 31651 1a08 91       		.byte	0x91
 31652 1a09 AC7D     		.sleb128 -340
 31653 1a0b 26       		.uleb128 0x26
 31654 1a0c 73747200 		.ascii	"str\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 682


 31655 1a10 01       		.byte	0x1
 31656 1a11 4D0B     		.2byte	0xb4d
 31657 1a13 A0170000 		.4byte	0x17a0
 31658 1a17 03       		.uleb128 0x3
 31659 1a18 91       		.byte	0x91
 31660 1a19 B07D     		.sleb128 -336
 31661 1a1b 26       		.uleb128 0x26
 31662 1a1c 6900     		.ascii	"i\000"
 31663 1a1e 01       		.byte	0x1
 31664 1a1f 4E0B     		.2byte	0xb4e
 31665 1a21 73000000 		.4byte	0x73
 31666 1a25 02       		.uleb128 0x2
 31667 1a26 91       		.byte	0x91
 31668 1a27 5C       		.sleb128 -36
 31669 1a28 00       		.byte	0
 31670 1a29 22       		.uleb128 0x22
 31671 1a2a A3100000 		.4byte	.LASF298
 31672 1a2e 01       		.byte	0x1
 31673 1a2f 760B     		.2byte	0xb76
 31674 1a31 00000000 		.4byte	.LFB81
 31675 1a35 84000000 		.4byte	.LFE81-.LFB81
 31676 1a39 01       		.uleb128 0x1
 31677 1a3a 9C       		.byte	0x9c
 31678 1a3b 7C1A0000 		.4byte	0x1a7c
 31679 1a3f 25       		.uleb128 0x25
 31680 1a40 2F070000 		.4byte	.LASF236
 31681 1a44 01       		.byte	0x1
 31682 1a45 760B     		.2byte	0xb76
 31683 1a47 FD100000 		.4byte	0x10fd
 31684 1a4b 02       		.uleb128 0x2
 31685 1a4c 91       		.byte	0x91
 31686 1a4d 6C       		.sleb128 -20
 31687 1a4e 25       		.uleb128 0x25
 31688 1a4f 080A0000 		.4byte	.LASF237
 31689 1a53 01       		.byte	0x1
 31690 1a54 760B     		.2byte	0xb76
 31691 1a56 A3000000 		.4byte	0xa3
 31692 1a5a 02       		.uleb128 0x2
 31693 1a5b 91       		.byte	0x91
 31694 1a5c 6A       		.sleb128 -22
 31695 1a5d 25       		.uleb128 0x25
 31696 1a5e 30110000 		.4byte	.LASF299
 31697 1a62 01       		.byte	0x1
 31698 1a63 760B     		.2byte	0xb76
 31699 1a65 97000000 		.4byte	0x97
 31700 1a69 02       		.uleb128 0x2
 31701 1a6a 91       		.byte	0x91
 31702 1a6b 69       		.sleb128 -23
 31703 1a6c 23       		.uleb128 0x23
 31704 1a6d 49080000 		.4byte	.LASF251
 31705 1a71 01       		.byte	0x1
 31706 1a72 780B     		.2byte	0xb78
 31707 1a74 A3000000 		.4byte	0xa3
 31708 1a78 02       		.uleb128 0x2
 31709 1a79 91       		.byte	0x91
 31710 1a7a 76       		.sleb128 -10
 31711 1a7b 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 683


 31712 1a7c 22       		.uleb128 0x22
 31713 1a7d 54070000 		.4byte	.LASF300
 31714 1a81 01       		.byte	0x1
 31715 1a82 920B     		.2byte	0xb92
 31716 1a84 00000000 		.4byte	.LFB82
 31717 1a88 88000000 		.4byte	.LFE82-.LFB82
 31718 1a8c 01       		.uleb128 0x1
 31719 1a8d 9C       		.byte	0x9c
 31720 1a8e C01A0000 		.4byte	0x1ac0
 31721 1a92 25       		.uleb128 0x25
 31722 1a93 2F070000 		.4byte	.LASF236
 31723 1a97 01       		.byte	0x1
 31724 1a98 920B     		.2byte	0xb92
 31725 1a9a FD100000 		.4byte	0x10fd
 31726 1a9e 02       		.uleb128 0x2
 31727 1a9f 91       		.byte	0x91
 31728 1aa0 6C       		.sleb128 -20
 31729 1aa1 25       		.uleb128 0x25
 31730 1aa2 080A0000 		.4byte	.LASF237
 31731 1aa6 01       		.byte	0x1
 31732 1aa7 920B     		.2byte	0xb92
 31733 1aa9 A3000000 		.4byte	0xa3
 31734 1aad 02       		.uleb128 0x2
 31735 1aae 91       		.byte	0x91
 31736 1aaf 6A       		.sleb128 -22
 31737 1ab0 23       		.uleb128 0x23
 31738 1ab1 49080000 		.4byte	.LASF251
 31739 1ab5 01       		.byte	0x1
 31740 1ab6 940B     		.2byte	0xb94
 31741 1ab8 A3000000 		.4byte	0xa3
 31742 1abc 02       		.uleb128 0x2
 31743 1abd 91       		.byte	0x91
 31744 1abe 76       		.sleb128 -10
 31745 1abf 00       		.byte	0
 31746 1ac0 22       		.uleb128 0x22
 31747 1ac1 6A0D0000 		.4byte	.LASF301
 31748 1ac5 01       		.byte	0x1
 31749 1ac6 AE0B     		.2byte	0xbae
 31750 1ac8 00000000 		.4byte	.LFB83
 31751 1acc A0000000 		.4byte	.LFE83-.LFB83
 31752 1ad0 01       		.uleb128 0x1
 31753 1ad1 9C       		.byte	0x9c
 31754 1ad2 131B0000 		.4byte	0x1b13
 31755 1ad6 25       		.uleb128 0x25
 31756 1ad7 2F070000 		.4byte	.LASF236
 31757 1adb 01       		.byte	0x1
 31758 1adc AE0B     		.2byte	0xbae
 31759 1ade FD100000 		.4byte	0x10fd
 31760 1ae2 02       		.uleb128 0x2
 31761 1ae3 91       		.byte	0x91
 31762 1ae4 74       		.sleb128 -12
 31763 1ae5 25       		.uleb128 0x25
 31764 1ae6 080A0000 		.4byte	.LASF237
 31765 1aea 01       		.byte	0x1
 31766 1aeb AE0B     		.2byte	0xbae
 31767 1aed A3000000 		.4byte	0xa3
 31768 1af1 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 684


 31769 1af2 91       		.byte	0x91
 31770 1af3 72       		.sleb128 -14
 31771 1af4 29       		.uleb128 0x29
 31772 1af5 696400   		.ascii	"id\000"
 31773 1af8 01       		.byte	0x1
 31774 1af9 AE0B     		.2byte	0xbae
 31775 1afb 97000000 		.4byte	0x97
 31776 1aff 02       		.uleb128 0x2
 31777 1b00 91       		.byte	0x91
 31778 1b01 71       		.sleb128 -15
 31779 1b02 26       		.uleb128 0x26
 31780 1b03 6900     		.ascii	"i\000"
 31781 1b05 01       		.byte	0x1
 31782 1b06 B00B     		.2byte	0xbb0
 31783 1b08 A3000000 		.4byte	0xa3
 31784 1b0c 05       		.uleb128 0x5
 31785 1b0d 03       		.byte	0x3
 31786 1b0e 04000000 		.4byte	i.11359
 31787 1b12 00       		.byte	0
 31788 1b13 2A       		.uleb128 0x2a
 31789 1b14 15150000 		.4byte	.LASF307
 31790 1b18 01       		.byte	0x1
 31791 1b19 CC0B     		.2byte	0xbcc
 31792 1b1b 97000000 		.4byte	0x97
 31793 1b1f 00000000 		.4byte	.LFB84
 31794 1b23 3E000000 		.4byte	.LFE84-.LFB84
 31795 1b27 01       		.uleb128 0x1
 31796 1b28 9C       		.byte	0x9c
 31797 1b29 681B0000 		.4byte	0x1b68
 31798 1b2d 25       		.uleb128 0x25
 31799 1b2e BB0C0000 		.4byte	.LASF302
 31800 1b32 01       		.byte	0x1
 31801 1b33 CC0B     		.2byte	0xbcc
 31802 1b35 FD100000 		.4byte	0x10fd
 31803 1b39 02       		.uleb128 0x2
 31804 1b3a 91       		.byte	0x91
 31805 1b3b 6C       		.sleb128 -20
 31806 1b3c 25       		.uleb128 0x25
 31807 1b3d FC060000 		.4byte	.LASF303
 31808 1b41 01       		.byte	0x1
 31809 1b42 CC0B     		.2byte	0xbcc
 31810 1b44 97000000 		.4byte	0x97
 31811 1b48 02       		.uleb128 0x2
 31812 1b49 91       		.byte	0x91
 31813 1b4a 6B       		.sleb128 -21
 31814 1b4b 26       		.uleb128 0x26
 31815 1b4c 6900     		.ascii	"i\000"
 31816 1b4e 01       		.byte	0x1
 31817 1b4f CE0B     		.2byte	0xbce
 31818 1b51 97000000 		.4byte	0x97
 31819 1b55 02       		.uleb128 0x2
 31820 1b56 91       		.byte	0x91
 31821 1b57 77       		.sleb128 -9
 31822 1b58 23       		.uleb128 0x23
 31823 1b59 D20E0000 		.4byte	.LASF304
 31824 1b5d 01       		.byte	0x1
 31825 1b5e CF0B     		.2byte	0xbcf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 685


 31826 1b60 97000000 		.4byte	0x97
 31827 1b64 02       		.uleb128 0x2
 31828 1b65 91       		.byte	0x91
 31829 1b66 76       		.sleb128 -10
 31830 1b67 00       		.byte	0
 31831 1b68 22       		.uleb128 0x22
 31832 1b69 EC0C0000 		.4byte	.LASF305
 31833 1b6d 01       		.byte	0x1
 31834 1b6e DC0B     		.2byte	0xbdc
 31835 1b70 00000000 		.4byte	.LFB85
 31836 1b74 2E000000 		.4byte	.LFE85-.LFB85
 31837 1b78 01       		.uleb128 0x1
 31838 1b79 9C       		.byte	0x9c
 31839 1b7a AC1B0000 		.4byte	0x1bac
 31840 1b7e 25       		.uleb128 0x25
 31841 1b7f 32060000 		.4byte	.LASF306
 31842 1b83 01       		.byte	0x1
 31843 1b84 DC0B     		.2byte	0xbdc
 31844 1b86 97000000 		.4byte	0x97
 31845 1b8a 02       		.uleb128 0x2
 31846 1b8b 91       		.byte	0x91
 31847 1b8c 6F       		.sleb128 -17
 31848 1b8d 23       		.uleb128 0x23
 31849 1b8e 080A0000 		.4byte	.LASF237
 31850 1b92 01       		.byte	0x1
 31851 1b93 DD0B     		.2byte	0xbdd
 31852 1b95 73000000 		.4byte	0x73
 31853 1b99 02       		.uleb128 0x2
 31854 1b9a 91       		.byte	0x91
 31855 1b9b 74       		.sleb128 -12
 31856 1b9c 23       		.uleb128 0x23
 31857 1b9d 2F070000 		.4byte	.LASF236
 31858 1ba1 01       		.byte	0x1
 31859 1ba2 DE0B     		.2byte	0xbde
 31860 1ba4 DC080000 		.4byte	0x8dc
 31861 1ba8 02       		.uleb128 0x2
 31862 1ba9 91       		.byte	0x91
 31863 1baa 70       		.sleb128 -16
 31864 1bab 00       		.byte	0
 31865 1bac 2B       		.uleb128 0x2b
 31866 1bad 32050000 		.4byte	.LASF308
 31867 1bb1 01       		.byte	0x1
 31868 1bb2 EB0B     		.2byte	0xbeb
 31869 1bb4 97000000 		.4byte	0x97
 31870 1bb8 00000000 		.4byte	.LFB86
 31871 1bbc 98000000 		.4byte	.LFE86-.LFB86
 31872 1bc0 01       		.uleb128 0x1
 31873 1bc1 9C       		.byte	0x9c
 31874 1bc2 101C0000 		.4byte	0x1c10
 31875 1bc6 25       		.uleb128 0x25
 31876 1bc7 EF060000 		.4byte	.LASF309
 31877 1bcb 01       		.byte	0x1
 31878 1bcc EB0B     		.2byte	0xbeb
 31879 1bce 73000000 		.4byte	0x73
 31880 1bd2 02       		.uleb128 0x2
 31881 1bd3 91       		.byte	0x91
 31882 1bd4 64       		.sleb128 -28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 686


 31883 1bd5 26       		.uleb128 0x26
 31884 1bd6 6900     		.ascii	"i\000"
 31885 1bd8 01       		.byte	0x1
 31886 1bd9 ED0B     		.2byte	0xbed
 31887 1bdb 73000000 		.4byte	0x73
 31888 1bdf 02       		.uleb128 0x2
 31889 1be0 91       		.byte	0x91
 31890 1be1 74       		.sleb128 -12
 31891 1be2 23       		.uleb128 0x23
 31892 1be3 FC000000 		.4byte	.LASF310
 31893 1be7 01       		.byte	0x1
 31894 1be8 EE0B     		.2byte	0xbee
 31895 1bea 97000000 		.4byte	0x97
 31896 1bee 02       		.uleb128 0x2
 31897 1bef 91       		.byte	0x91
 31898 1bf0 6B       		.sleb128 -21
 31899 1bf1 23       		.uleb128 0x23
 31900 1bf2 70070000 		.4byte	.LASF311
 31901 1bf6 01       		.byte	0x1
 31902 1bf7 EF0B     		.2byte	0xbef
 31903 1bf9 73000000 		.4byte	0x73
 31904 1bfd 02       		.uleb128 0x2
 31905 1bfe 91       		.byte	0x91
 31906 1bff 6C       		.sleb128 -20
 31907 1c00 23       		.uleb128 0x23
 31908 1c01 83060000 		.4byte	.LASF312
 31909 1c05 01       		.byte	0x1
 31910 1c06 F00B     		.2byte	0xbf0
 31911 1c08 97000000 		.4byte	0x97
 31912 1c0c 02       		.uleb128 0x2
 31913 1c0d 91       		.byte	0x91
 31914 1c0e 73       		.sleb128 -13
 31915 1c0f 00       		.byte	0
 31916 1c10 22       		.uleb128 0x22
 31917 1c11 17100000 		.4byte	.LASF313
 31918 1c15 01       		.byte	0x1
 31919 1c16 150C     		.2byte	0xc15
 31920 1c18 00000000 		.4byte	.LFB87
 31921 1c1c 80000000 		.4byte	.LFE87-.LFB87
 31922 1c20 01       		.uleb128 0x1
 31923 1c21 9C       		.byte	0x9c
 31924 1c22 341C0000 		.4byte	0x1c34
 31925 1c26 26       		.uleb128 0x26
 31926 1c27 6900     		.ascii	"i\000"
 31927 1c29 01       		.byte	0x1
 31928 1c2a 170C     		.2byte	0xc17
 31929 1c2c A3000000 		.4byte	0xa3
 31930 1c30 02       		.uleb128 0x2
 31931 1c31 91       		.byte	0x91
 31932 1c32 76       		.sleb128 -10
 31933 1c33 00       		.byte	0
 31934 1c34 2B       		.uleb128 0x2b
 31935 1c35 5D0F0000 		.4byte	.LASF314
 31936 1c39 01       		.byte	0x1
 31937 1c3a 2E0C     		.2byte	0xc2e
 31938 1c3c 97000000 		.4byte	0x97
 31939 1c40 00000000 		.4byte	.LFB88
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 687


 31940 1c44 5C000000 		.4byte	.LFE88-.LFB88
 31941 1c48 01       		.uleb128 0x1
 31942 1c49 9C       		.byte	0x9c
 31943 1c4a 5C1C0000 		.4byte	0x1c5c
 31944 1c4e 26       		.uleb128 0x26
 31945 1c4f 6900     		.ascii	"i\000"
 31946 1c51 01       		.byte	0x1
 31947 1c52 2F0C     		.2byte	0xc2f
 31948 1c54 A3000000 		.4byte	0xa3
 31949 1c58 02       		.uleb128 0x2
 31950 1c59 91       		.byte	0x91
 31951 1c5a 76       		.sleb128 -10
 31952 1c5b 00       		.byte	0
 31953 1c5c 2B       		.uleb128 0x2b
 31954 1c5d 76070000 		.4byte	.LASF315
 31955 1c61 01       		.byte	0x1
 31956 1c62 410C     		.2byte	0xc41
 31957 1c64 97000000 		.4byte	0x97
 31958 1c68 00000000 		.4byte	.LFB89
 31959 1c6c 24060000 		.4byte	.LFE89-.LFB89
 31960 1c70 01       		.uleb128 0x1
 31961 1c71 9C       		.byte	0x9c
 31962 1c72 911C0000 		.4byte	0x1c91
 31963 1c76 26       		.uleb128 0x26
 31964 1c77 6900     		.ascii	"i\000"
 31965 1c79 01       		.byte	0x1
 31966 1c7a 430C     		.2byte	0xc43
 31967 1c7c 97000000 		.4byte	0x97
 31968 1c80 02       		.uleb128 0x2
 31969 1c81 91       		.byte	0x91
 31970 1c82 77       		.sleb128 -9
 31971 1c83 26       		.uleb128 0x26
 31972 1c84 6A00     		.ascii	"j\000"
 31973 1c86 01       		.byte	0x1
 31974 1c87 430C     		.2byte	0xc43
 31975 1c89 97000000 		.4byte	0x97
 31976 1c8d 02       		.uleb128 0x2
 31977 1c8e 91       		.byte	0x91
 31978 1c8f 76       		.sleb128 -10
 31979 1c90 00       		.byte	0
 31980 1c91 28       		.uleb128 0x28
 31981 1c92 470A0000 		.4byte	.LASF316
 31982 1c96 01       		.byte	0x1
 31983 1c97 E40C     		.2byte	0xce4
 31984 1c99 00000000 		.4byte	.LFB90
 31985 1c9d 40020000 		.4byte	.LFE90-.LFB90
 31986 1ca1 01       		.uleb128 0x1
 31987 1ca2 9C       		.byte	0x9c
 31988 1ca3 CE1C0000 		.4byte	0x1cce
 31989 1ca7 23       		.uleb128 0x23
 31990 1ca8 530F0000 		.4byte	.LASF246
 31991 1cac 01       		.byte	0x1
 31992 1cad E60C     		.2byte	0xce6
 31993 1caf 97000000 		.4byte	0x97
 31994 1cb3 02       		.uleb128 0x2
 31995 1cb4 91       		.byte	0x91
 31996 1cb5 73       		.sleb128 -13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 688


 31997 1cb6 1E       		.uleb128 0x1e
 31998 1cb7 FA000000 		.4byte	.LBB30
 31999 1cbb 6A000000 		.4byte	.LBE30-.LBB30
 32000 1cbf 26       		.uleb128 0x26
 32001 1cc0 6900     		.ascii	"i\000"
 32002 1cc2 01       		.byte	0x1
 32003 1cc3 F70C     		.2byte	0xcf7
 32004 1cc5 73000000 		.4byte	0x73
 32005 1cc9 02       		.uleb128 0x2
 32006 1cca 91       		.byte	0x91
 32007 1ccb 74       		.sleb128 -12
 32008 1ccc 00       		.byte	0
 32009 1ccd 00       		.byte	0
 32010 1cce 2C       		.uleb128 0x2c
 32011 1ccf DD0C0000 		.4byte	.LASF317
 32012 1cd3 01       		.byte	0x1
 32013 1cd4 170D     		.2byte	0xd17
 32014 1cd6 00000000 		.4byte	.LFB91
 32015 1cda 28000000 		.4byte	.LFE91-.LFB91
 32016 1cde 01       		.uleb128 0x1
 32017 1cdf 9C       		.byte	0x9c
 32018 1ce0 2C       		.uleb128 0x2c
 32019 1ce1 A8120000 		.4byte	.LASF318
 32020 1ce5 01       		.byte	0x1
 32021 1ce6 230D     		.2byte	0xd23
 32022 1ce8 00000000 		.4byte	.LFB92
 32023 1cec 78000000 		.4byte	.LFE92-.LFB92
 32024 1cf0 01       		.uleb128 0x1
 32025 1cf1 9C       		.byte	0x9c
 32026 1cf2 2C       		.uleb128 0x2c
 32027 1cf3 EB040000 		.4byte	.LASF319
 32028 1cf7 01       		.byte	0x1
 32029 1cf8 390D     		.2byte	0xd39
 32030 1cfa 00000000 		.4byte	.LFB93
 32031 1cfe B0000000 		.4byte	.LFE93-.LFB93
 32032 1d02 01       		.uleb128 0x1
 32033 1d03 9C       		.byte	0x9c
 32034 1d04 27       		.uleb128 0x27
 32035 1d05 B8070000 		.4byte	.LASF321
 32036 1d09 01       		.byte	0x1
 32037 1d0a 5A0D     		.2byte	0xd5a
 32038 1d0c 00000000 		.4byte	.LFB94
 32039 1d10 28010000 		.4byte	.LFE94-.LFB94
 32040 1d14 01       		.uleb128 0x1
 32041 1d15 9C       		.byte	0x9c
 32042 1d16 481D0000 		.4byte	0x1d48
 32043 1d1a 23       		.uleb128 0x23
 32044 1d1b 49080000 		.4byte	.LASF251
 32045 1d1f 01       		.byte	0x1
 32046 1d20 5C0D     		.2byte	0xd5c
 32047 1d22 97000000 		.4byte	0x97
 32048 1d26 02       		.uleb128 0x2
 32049 1d27 91       		.byte	0x91
 32050 1d28 6F       		.sleb128 -17
 32051 1d29 23       		.uleb128 0x23
 32052 1d2a 62130000 		.4byte	.LASF242
 32053 1d2e 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 689


 32054 1d2f 5D0D     		.2byte	0xd5d
 32055 1d31 C7000000 		.4byte	0xc7
 32056 1d35 02       		.uleb128 0x2
 32057 1d36 91       		.byte	0x91
 32058 1d37 6C       		.sleb128 -20
 32059 1d38 23       		.uleb128 0x23
 32060 1d39 2F070000 		.4byte	.LASF236
 32061 1d3d 01       		.byte	0x1
 32062 1d3e 600D     		.2byte	0xd60
 32063 1d40 6D080000 		.4byte	0x86d
 32064 1d44 02       		.uleb128 0x2
 32065 1d45 91       		.byte	0x91
 32066 1d46 64       		.sleb128 -28
 32067 1d47 00       		.byte	0
 32068 1d48 27       		.uleb128 0x27
 32069 1d49 04100000 		.4byte	.LASF322
 32070 1d4d 01       		.byte	0x1
 32071 1d4e 7B0D     		.2byte	0xd7b
 32072 1d50 00000000 		.4byte	.LFB95
 32073 1d54 B8000000 		.4byte	.LFE95-.LFB95
 32074 1d58 01       		.uleb128 0x1
 32075 1d59 9C       		.byte	0x9c
 32076 1d5a 8C1D0000 		.4byte	0x1d8c
 32077 1d5e 23       		.uleb128 0x23
 32078 1d5f 49080000 		.4byte	.LASF251
 32079 1d63 01       		.byte	0x1
 32080 1d64 7D0D     		.2byte	0xd7d
 32081 1d66 97000000 		.4byte	0x97
 32082 1d6a 02       		.uleb128 0x2
 32083 1d6b 91       		.byte	0x91
 32084 1d6c 6F       		.sleb128 -17
 32085 1d6d 23       		.uleb128 0x23
 32086 1d6e 62130000 		.4byte	.LASF242
 32087 1d72 01       		.byte	0x1
 32088 1d73 7E0D     		.2byte	0xd7e
 32089 1d75 C7000000 		.4byte	0xc7
 32090 1d79 02       		.uleb128 0x2
 32091 1d7a 91       		.byte	0x91
 32092 1d7b 6C       		.sleb128 -20
 32093 1d7c 23       		.uleb128 0x23
 32094 1d7d 2F070000 		.4byte	.LASF236
 32095 1d81 01       		.byte	0x1
 32096 1d82 820D     		.2byte	0xd82
 32097 1d84 6D080000 		.4byte	0x86d
 32098 1d88 02       		.uleb128 0x2
 32099 1d89 91       		.byte	0x91
 32100 1d8a 64       		.sleb128 -28
 32101 1d8b 00       		.byte	0
 32102 1d8c 27       		.uleb128 0x27
 32103 1d8d 38020000 		.4byte	.LASF323
 32104 1d91 01       		.byte	0x1
 32105 1d92 940D     		.2byte	0xd94
 32106 1d94 00000000 		.4byte	.LFB96
 32107 1d98 B8000000 		.4byte	.LFE96-.LFB96
 32108 1d9c 01       		.uleb128 0x1
 32109 1d9d 9C       		.byte	0x9c
 32110 1d9e D01D0000 		.4byte	0x1dd0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 690


 32111 1da2 23       		.uleb128 0x23
 32112 1da3 49080000 		.4byte	.LASF251
 32113 1da7 01       		.byte	0x1
 32114 1da8 960D     		.2byte	0xd96
 32115 1daa 97000000 		.4byte	0x97
 32116 1dae 02       		.uleb128 0x2
 32117 1daf 91       		.byte	0x91
 32118 1db0 6F       		.sleb128 -17
 32119 1db1 23       		.uleb128 0x23
 32120 1db2 62130000 		.4byte	.LASF242
 32121 1db6 01       		.byte	0x1
 32122 1db7 970D     		.2byte	0xd97
 32123 1db9 C7000000 		.4byte	0xc7
 32124 1dbd 02       		.uleb128 0x2
 32125 1dbe 91       		.byte	0x91
 32126 1dbf 6C       		.sleb128 -20
 32127 1dc0 23       		.uleb128 0x23
 32128 1dc1 2F070000 		.4byte	.LASF236
 32129 1dc5 01       		.byte	0x1
 32130 1dc6 9B0D     		.2byte	0xd9b
 32131 1dc8 6D080000 		.4byte	0x86d
 32132 1dcc 02       		.uleb128 0x2
 32133 1dcd 91       		.byte	0x91
 32134 1dce 64       		.sleb128 -28
 32135 1dcf 00       		.byte	0
 32136 1dd0 27       		.uleb128 0x27
 32137 1dd1 480B0000 		.4byte	.LASF324
 32138 1dd5 01       		.byte	0x1
 32139 1dd6 AD0D     		.2byte	0xdad
 32140 1dd8 00000000 		.4byte	.LFB97
 32141 1ddc 5C000000 		.4byte	.LFE97-.LFB97
 32142 1de0 01       		.uleb128 0x1
 32143 1de1 9C       		.byte	0x9c
 32144 1de2 051E0000 		.4byte	0x1e05
 32145 1de6 23       		.uleb128 0x23
 32146 1de7 62130000 		.4byte	.LASF242
 32147 1deb 01       		.byte	0x1
 32148 1dec AF0D     		.2byte	0xdaf
 32149 1dee C7000000 		.4byte	0xc7
 32150 1df2 02       		.uleb128 0x2
 32151 1df3 91       		.byte	0x91
 32152 1df4 76       		.sleb128 -10
 32153 1df5 23       		.uleb128 0x23
 32154 1df6 2F070000 		.4byte	.LASF236
 32155 1dfa 01       		.byte	0x1
 32156 1dfb B30D     		.2byte	0xdb3
 32157 1dfd A0090000 		.4byte	0x9a0
 32158 1e01 02       		.uleb128 0x2
 32159 1e02 91       		.byte	0x91
 32160 1e03 70       		.sleb128 -16
 32161 1e04 00       		.byte	0
 32162 1e05 2D       		.uleb128 0x2d
 32163 1e06 340D0000 		.4byte	.LASF325
 32164 1e0a 01       		.byte	0x1
 32165 1e0b C50D     		.2byte	0xdc5
 32166 1e0d 00000000 		.4byte	.LFB98
 32167 1e11 44020000 		.4byte	.LFE98-.LFB98
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 691


 32168 1e15 01       		.uleb128 0x1
 32169 1e16 9C       		.byte	0x9c
 32170 1e17 6F1E0000 		.4byte	0x1e6f
 32171 1e1b 23       		.uleb128 0x23
 32172 1e1c 62130000 		.4byte	.LASF242
 32173 1e20 01       		.byte	0x1
 32174 1e21 C80D     		.2byte	0xdc8
 32175 1e23 6F1E0000 		.4byte	0x1e6f
 32176 1e27 02       		.uleb128 0x2
 32177 1e28 91       		.byte	0x91
 32178 1e29 70       		.sleb128 -16
 32179 1e2a 23       		.uleb128 0x23
 32180 1e2b 0B080000 		.4byte	.LASF326
 32181 1e2f 01       		.byte	0x1
 32182 1e30 C90D     		.2byte	0xdc9
 32183 1e32 6F1E0000 		.4byte	0x1e6f
 32184 1e36 05       		.uleb128 0x5
 32185 1e37 03       		.byte	0x3
 32186 1e38 08000000 		.4byte	last_aux_int16.11490
 32187 1e3c 2E       		.uleb128 0x2e
 32188 1e3d 2E000000 		.4byte	.LBB31
 32189 1e41 50000000 		.4byte	.LBE31-.LBB31
 32190 1e45 571E0000 		.4byte	0x1e57
 32191 1e49 26       		.uleb128 0x26
 32192 1e4a 6900     		.ascii	"i\000"
 32193 1e4c 01       		.byte	0x1
 32194 1e4d D00D     		.2byte	0xdd0
 32195 1e4f 97000000 		.4byte	0x97
 32196 1e53 02       		.uleb128 0x2
 32197 1e54 91       		.byte	0x91
 32198 1e55 77       		.sleb128 -9
 32199 1e56 00       		.byte	0
 32200 1e57 1E       		.uleb128 0x1e
 32201 1e58 88000000 		.4byte	.LBB32
 32202 1e5c 98010000 		.4byte	.LBE32-.LBB32
 32203 1e60 26       		.uleb128 0x26
 32204 1e61 6900     		.ascii	"i\000"
 32205 1e63 01       		.byte	0x1
 32206 1e64 DA0D     		.2byte	0xdda
 32207 1e66 97000000 		.4byte	0x97
 32208 1e6a 02       		.uleb128 0x2
 32209 1e6b 91       		.byte	0x91
 32210 1e6c 76       		.sleb128 -10
 32211 1e6d 00       		.byte	0
 32212 1e6e 00       		.byte	0
 32213 1e6f 09       		.uleb128 0x9
 32214 1e70 C7000000 		.4byte	0xc7
 32215 1e74 7F1E0000 		.4byte	0x1e7f
 32216 1e78 0A       		.uleb128 0xa
 32217 1e79 18010000 		.4byte	0x118
 32218 1e7d 01       		.byte	0x1
 32219 1e7e 00       		.byte	0
 32220 1e7f 27       		.uleb128 0x27
 32221 1e80 E6150000 		.4byte	.LASF327
 32222 1e84 01       		.byte	0x1
 32223 1e85 F50D     		.2byte	0xdf5
 32224 1e87 00000000 		.4byte	.LFB99
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 692


 32225 1e8b BC000000 		.4byte	.LFE99-.LFB99
 32226 1e8f 01       		.uleb128 0x1
 32227 1e90 9C       		.byte	0x9c
 32228 1e91 A51E0000 		.4byte	0x1ea5
 32229 1e95 26       		.uleb128 0x26
 32230 1e96 61757800 		.ascii	"aux\000"
 32231 1e9a 01       		.byte	0x1
 32232 1e9b F80D     		.2byte	0xdf8
 32233 1e9d 97000000 		.4byte	0x97
 32234 1ea1 02       		.uleb128 0x2
 32235 1ea2 91       		.byte	0x91
 32236 1ea3 77       		.sleb128 -9
 32237 1ea4 00       		.byte	0
 32238 1ea5 27       		.uleb128 0x27
 32239 1ea6 920D0000 		.4byte	.LASF328
 32240 1eaa 01       		.byte	0x1
 32241 1eab 1A0E     		.2byte	0xe1a
 32242 1ead 00000000 		.4byte	.LFB100
 32243 1eb1 5C000000 		.4byte	.LFE100-.LFB100
 32244 1eb5 01       		.uleb128 0x1
 32245 1eb6 9C       		.byte	0x9c
 32246 1eb7 CB1E0000 		.4byte	0x1ecb
 32247 1ebb 23       		.uleb128 0x23
 32248 1ebc 2F070000 		.4byte	.LASF236
 32249 1ec0 01       		.byte	0x1
 32250 1ec1 1C0E     		.2byte	0xe1c
 32251 1ec3 20060000 		.4byte	0x620
 32252 1ec7 02       		.uleb128 0x2
 32253 1ec8 91       		.byte	0x91
 32254 1ec9 74       		.sleb128 -12
 32255 1eca 00       		.byte	0
 32256 1ecb 27       		.uleb128 0x27
 32257 1ecc 69110000 		.4byte	.LASF329
 32258 1ed0 01       		.byte	0x1
 32259 1ed1 310E     		.2byte	0xe31
 32260 1ed3 00000000 		.4byte	.LFB101
 32261 1ed7 38010000 		.4byte	.LFE101-.LFB101
 32262 1edb 01       		.uleb128 0x1
 32263 1edc 9C       		.byte	0x9c
 32264 1edd 0F1F0000 		.4byte	0x1f0f
 32265 1ee1 23       		.uleb128 0x23
 32266 1ee2 49080000 		.4byte	.LASF251
 32267 1ee6 01       		.byte	0x1
 32268 1ee7 330E     		.2byte	0xe33
 32269 1ee9 97000000 		.4byte	0x97
 32270 1eed 02       		.uleb128 0x2
 32271 1eee 91       		.byte	0x91
 32272 1eef 6F       		.sleb128 -17
 32273 1ef0 23       		.uleb128 0x23
 32274 1ef1 62130000 		.4byte	.LASF242
 32275 1ef5 01       		.byte	0x1
 32276 1ef6 340E     		.2byte	0xe34
 32277 1ef8 C7000000 		.4byte	0xc7
 32278 1efc 02       		.uleb128 0x2
 32279 1efd 91       		.byte	0x91
 32280 1efe 6C       		.sleb128 -20
 32281 1eff 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 693


 32282 1f00 2F070000 		.4byte	.LASF236
 32283 1f04 01       		.byte	0x1
 32284 1f05 380E     		.2byte	0xe38
 32285 1f07 81050000 		.4byte	0x581
 32286 1f0b 02       		.uleb128 0x2
 32287 1f0c 91       		.byte	0x91
 32288 1f0d 60       		.sleb128 -32
 32289 1f0e 00       		.byte	0
 32290 1f0f 27       		.uleb128 0x27
 32291 1f10 B20B0000 		.4byte	.LASF330
 32292 1f14 01       		.byte	0x1
 32293 1f15 580E     		.2byte	0xe58
 32294 1f17 00000000 		.4byte	.LFB102
 32295 1f1b EC000000 		.4byte	.LFE102-.LFB102
 32296 1f1f 01       		.uleb128 0x1
 32297 1f20 9C       		.byte	0x9c
 32298 1f21 441F0000 		.4byte	0x1f44
 32299 1f25 23       		.uleb128 0x23
 32300 1f26 2F070000 		.4byte	.LASF236
 32301 1f2a 01       		.byte	0x1
 32302 1f2b 5C0E     		.2byte	0xe5c
 32303 1f2d A0090000 		.4byte	0x9a0
 32304 1f31 02       		.uleb128 0x2
 32305 1f32 91       		.byte	0x91
 32306 1f33 68       		.sleb128 -24
 32307 1f34 23       		.uleb128 0x23
 32308 1f35 62130000 		.4byte	.LASF242
 32309 1f39 01       		.byte	0x1
 32310 1f3a 5D0E     		.2byte	0xe5d
 32311 1f3c C7000000 		.4byte	0xc7
 32312 1f40 02       		.uleb128 0x2
 32313 1f41 91       		.byte	0x91
 32314 1f42 66       		.sleb128 -26
 32315 1f43 00       		.byte	0
 32316 1f44 27       		.uleb128 0x27
 32317 1f45 BD080000 		.4byte	.LASF331
 32318 1f49 01       		.byte	0x1
 32319 1f4a 7E0E     		.2byte	0xe7e
 32320 1f4c 00000000 		.4byte	.LFB103
 32321 1f50 64000000 		.4byte	.LFE103-.LFB103
 32322 1f54 01       		.uleb128 0x1
 32323 1f55 9C       		.byte	0x9c
 32324 1f56 791F0000 		.4byte	0x1f79
 32325 1f5a 23       		.uleb128 0x23
 32326 1f5b 2F070000 		.4byte	.LASF236
 32327 1f5f 01       		.byte	0x1
 32328 1f60 820E     		.2byte	0xe82
 32329 1f62 0D0B0000 		.4byte	0xb0d
 32330 1f66 02       		.uleb128 0x2
 32331 1f67 91       		.byte	0x91
 32332 1f68 74       		.sleb128 -12
 32333 1f69 23       		.uleb128 0x23
 32334 1f6a 62130000 		.4byte	.LASF242
 32335 1f6e 01       		.byte	0x1
 32336 1f6f 830E     		.2byte	0xe83
 32337 1f71 C7000000 		.4byte	0xc7
 32338 1f75 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 694


 32339 1f76 91       		.byte	0x91
 32340 1f77 72       		.sleb128 -14
 32341 1f78 00       		.byte	0
 32342 1f79 2F       		.uleb128 0x2f
 32343 1f7a A7080000 		.4byte	.LASF332
 32344 1f7e 01       		.byte	0x1
 32345 1f7f 980E     		.2byte	0xe98
 32346 1f81 C7000000 		.4byte	0xc7
 32347 1f85 00000000 		.4byte	.LFB104
 32348 1f89 A8000000 		.4byte	.LFE104-.LFB104
 32349 1f8d 01       		.uleb128 0x1
 32350 1f8e 9C       		.byte	0x9c
 32351 1f8f EE1F0000 		.4byte	0x1fee
 32352 1f93 23       		.uleb128 0x23
 32353 1f94 2F070000 		.4byte	.LASF236
 32354 1f98 01       		.byte	0x1
 32355 1f99 9A0E     		.2byte	0xe9a
 32356 1f9b EE1F0000 		.4byte	0x1fee
 32357 1f9f 02       		.uleb128 0x2
 32358 1fa0 91       		.byte	0x91
 32359 1fa1 5C       		.sleb128 -36
 32360 1fa2 23       		.uleb128 0x23
 32361 1fa3 080A0000 		.4byte	.LASF237
 32362 1fa7 01       		.byte	0x1
 32363 1fa8 9B0E     		.2byte	0xe9b
 32364 1faa 97000000 		.4byte	0x97
 32365 1fae 02       		.uleb128 0x2
 32366 1faf 91       		.byte	0x91
 32367 1fb0 74       		.sleb128 -12
 32368 1fb1 23       		.uleb128 0x23
 32369 1fb2 F6100000 		.4byte	.LASF333
 32370 1fb6 01       		.byte	0x1
 32371 1fb7 9C0E     		.2byte	0xe9c
 32372 1fb9 C7000000 		.4byte	0xc7
 32373 1fbd 02       		.uleb128 0x2
 32374 1fbe 91       		.byte	0x91
 32375 1fbf 76       		.sleb128 -10
 32376 1fc0 23       		.uleb128 0x23
 32377 1fc1 06030000 		.4byte	.LASF334
 32378 1fc5 01       		.byte	0x1
 32379 1fc6 9D0E     		.2byte	0xe9d
 32380 1fc8 AF000000 		.4byte	0xaf
 32381 1fcc 02       		.uleb128 0x2
 32382 1fcd 91       		.byte	0x91
 32383 1fce 70       		.sleb128 -16
 32384 1fcf 23       		.uleb128 0x23
 32385 1fd0 D3140000 		.4byte	.LASF335
 32386 1fd4 01       		.byte	0x1
 32387 1fd5 9D0E     		.2byte	0xe9d
 32388 1fd7 AF000000 		.4byte	0xaf
 32389 1fdb 02       		.uleb128 0x2
 32390 1fdc 91       		.byte	0x91
 32391 1fdd 6C       		.sleb128 -20
 32392 1fde 23       		.uleb128 0x23
 32393 1fdf 56050000 		.4byte	.LASF336
 32394 1fe3 01       		.byte	0x1
 32395 1fe4 9E0E     		.2byte	0xe9e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 695


 32396 1fe6 97000000 		.4byte	0x97
 32397 1fea 02       		.uleb128 0x2
 32398 1feb 91       		.byte	0x91
 32399 1fec 75       		.sleb128 -11
 32400 1fed 00       		.byte	0
 32401 1fee 09       		.uleb128 0x9
 32402 1fef 97000000 		.4byte	0x97
 32403 1ff3 FE1F0000 		.4byte	0x1ffe
 32404 1ff7 0A       		.uleb128 0xa
 32405 1ff8 18010000 		.4byte	0x118
 32406 1ffc 0F       		.byte	0xf
 32407 1ffd 00       		.byte	0
 32408 1ffe 30       		.uleb128 0x30
 32409 1fff 1D010000 		.4byte	.LASF366
 32410 2003 01       		.byte	0x1
 32411 2004 BB0E     		.2byte	0xebb
 32412 2006 00000000 		.4byte	.LFB105
 32413 200a 34000000 		.4byte	.LFE105-.LFB105
 32414 200e 01       		.uleb128 0x1
 32415 200f 9C       		.byte	0x9c
 32416 2010 27       		.uleb128 0x27
 32417 2011 AB040000 		.4byte	.LASF337
 32418 2015 01       		.byte	0x1
 32419 2016 C90E     		.2byte	0xec9
 32420 2018 00000000 		.4byte	.LFB106
 32421 201c 20000000 		.4byte	.LFE106-.LFB106
 32422 2020 01       		.uleb128 0x1
 32423 2021 9C       		.byte	0x9c
 32424 2022 36200000 		.4byte	0x2036
 32425 2026 23       		.uleb128 0x23
 32426 2027 2F070000 		.4byte	.LASF236
 32427 202b 01       		.byte	0x1
 32428 202c CB0E     		.2byte	0xecb
 32429 202e DC080000 		.4byte	0x8dc
 32430 2032 02       		.uleb128 0x2
 32431 2033 91       		.byte	0x91
 32432 2034 74       		.sleb128 -12
 32433 2035 00       		.byte	0
 32434 2036 27       		.uleb128 0x27
 32435 2037 95010000 		.4byte	.LASF338
 32436 203b 01       		.byte	0x1
 32437 203c D70E     		.2byte	0xed7
 32438 203e 00000000 		.4byte	.LFB107
 32439 2042 A0000000 		.4byte	.LFE107-.LFB107
 32440 2046 01       		.uleb128 0x1
 32441 2047 9C       		.byte	0x9c
 32442 2048 6B200000 		.4byte	0x206b
 32443 204c 23       		.uleb128 0x23
 32444 204d 2F070000 		.4byte	.LASF236
 32445 2051 01       		.byte	0x1
 32446 2052 DB0E     		.2byte	0xedb
 32447 2054 A0090000 		.4byte	0x9a0
 32448 2058 02       		.uleb128 0x2
 32449 2059 91       		.byte	0x91
 32450 205a 70       		.sleb128 -16
 32451 205b 23       		.uleb128 0x23
 32452 205c 62130000 		.4byte	.LASF242
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 696


 32453 2060 01       		.byte	0x1
 32454 2061 DC0E     		.2byte	0xedc
 32455 2063 C7000000 		.4byte	0xc7
 32456 2067 02       		.uleb128 0x2
 32457 2068 91       		.byte	0x91
 32458 2069 6E       		.sleb128 -18
 32459 206a 00       		.byte	0
 32460 206b 27       		.uleb128 0x27
 32461 206c 32120000 		.4byte	.LASF339
 32462 2070 01       		.byte	0x1
 32463 2071 F00E     		.2byte	0xef0
 32464 2073 00000000 		.4byte	.LFB108
 32465 2077 BC010000 		.4byte	.LFE108-.LFB108
 32466 207b 01       		.uleb128 0x1
 32467 207c 9C       		.byte	0x9c
 32468 207d CD200000 		.4byte	0x20cd
 32469 2081 23       		.uleb128 0x23
 32470 2082 500D0000 		.4byte	.LASF340
 32471 2086 01       		.byte	0x1
 32472 2087 F30E     		.2byte	0xef3
 32473 2089 AF000000 		.4byte	0xaf
 32474 208d 02       		.uleb128 0x2
 32475 208e 91       		.byte	0x91
 32476 208f 70       		.sleb128 -16
 32477 2090 23       		.uleb128 0x23
 32478 2091 71100000 		.4byte	.LASF341
 32479 2095 01       		.byte	0x1
 32480 2096 F40E     		.2byte	0xef4
 32481 2098 EB000000 		.4byte	0xeb
 32482 209c 02       		.uleb128 0x2
 32483 209d 91       		.byte	0x91
 32484 209e 6C       		.sleb128 -20
 32485 209f 23       		.uleb128 0x23
 32486 20a0 080A0000 		.4byte	.LASF237
 32487 20a4 01       		.byte	0x1
 32488 20a5 F50E     		.2byte	0xef5
 32489 20a7 97000000 		.4byte	0x97
 32490 20ab 02       		.uleb128 0x2
 32491 20ac 91       		.byte	0x91
 32492 20ad 77       		.sleb128 -9
 32493 20ae 23       		.uleb128 0x23
 32494 20af 2F070000 		.4byte	.LASF236
 32495 20b3 01       		.byte	0x1
 32496 20b4 F60E     		.2byte	0xef6
 32497 20b6 DC080000 		.4byte	0x8dc
 32498 20ba 02       		.uleb128 0x2
 32499 20bb 91       		.byte	0x91
 32500 20bc 68       		.sleb128 -24
 32501 20bd 23       		.uleb128 0x23
 32502 20be 30110000 		.4byte	.LASF299
 32503 20c2 01       		.byte	0x1
 32504 20c3 F70E     		.2byte	0xef7
 32505 20c5 97000000 		.4byte	0x97
 32506 20c9 02       		.uleb128 0x2
 32507 20ca 91       		.byte	0x91
 32508 20cb 6B       		.sleb128 -21
 32509 20cc 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 697


 32510 20cd 27       		.uleb128 0x27
 32511 20ce 4E020000 		.4byte	.LASF342
 32512 20d2 01       		.byte	0x1
 32513 20d3 310F     		.2byte	0xf31
 32514 20d5 00000000 		.4byte	.LFB109
 32515 20d9 60000000 		.4byte	.LFE109-.LFB109
 32516 20dd 01       		.uleb128 0x1
 32517 20de 9C       		.byte	0x9c
 32518 20df 02210000 		.4byte	0x2102
 32519 20e3 23       		.uleb128 0x23
 32520 20e4 2F070000 		.4byte	.LASF236
 32521 20e8 01       		.byte	0x1
 32522 20e9 330F     		.2byte	0xf33
 32523 20eb A0090000 		.4byte	0x9a0
 32524 20ef 02       		.uleb128 0x2
 32525 20f0 91       		.byte	0x91
 32526 20f1 70       		.sleb128 -16
 32527 20f2 23       		.uleb128 0x23
 32528 20f3 62130000 		.4byte	.LASF242
 32529 20f7 01       		.byte	0x1
 32530 20f8 340F     		.2byte	0xf34
 32531 20fa C7000000 		.4byte	0xc7
 32532 20fe 02       		.uleb128 0x2
 32533 20ff 91       		.byte	0x91
 32534 2100 6E       		.sleb128 -18
 32535 2101 00       		.byte	0
 32536 2102 27       		.uleb128 0x27
 32537 2103 D1010000 		.4byte	.LASF343
 32538 2107 01       		.byte	0x1
 32539 2108 470F     		.2byte	0xf47
 32540 210a 00000000 		.4byte	.LFB110
 32541 210e 98050000 		.4byte	.LFE110-.LFB110
 32542 2112 01       		.uleb128 0x1
 32543 2113 9C       		.byte	0x9c
 32544 2114 8F210000 		.4byte	0x218f
 32545 2118 23       		.uleb128 0x23
 32546 2119 21150000 		.4byte	.LASF344
 32547 211d 01       		.byte	0x1
 32548 211e 4A0F     		.2byte	0xf4a
 32549 2120 97000000 		.4byte	0x97
 32550 2124 02       		.uleb128 0x2
 32551 2125 91       		.byte	0x91
 32552 2126 6F       		.sleb128 -17
 32553 2127 26       		.uleb128 0x26
 32554 2128 6300     		.ascii	"c\000"
 32555 212a 01       		.byte	0x1
 32556 212b 4B0F     		.2byte	0xf4b
 32557 212d A3000000 		.4byte	0xa3
 32558 2131 02       		.uleb128 0x2
 32559 2132 91       		.byte	0x91
 32560 2133 6C       		.sleb128 -20
 32561 2134 26       		.uleb128 0x26
 32562 2135 6B00     		.ascii	"k\000"
 32563 2137 01       		.byte	0x1
 32564 2138 4C0F     		.2byte	0xf4c
 32565 213a 97000000 		.4byte	0x97
 32566 213e 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 698


 32567 213f 91       		.byte	0x91
 32568 2140 6B       		.sleb128 -21
 32569 2141 23       		.uleb128 0x23
 32570 2142 6A000000 		.4byte	.LASF345
 32571 2146 01       		.byte	0x1
 32572 2147 4D0F     		.2byte	0xf4d
 32573 2149 A3000000 		.4byte	0xa3
 32574 214d 02       		.uleb128 0x2
 32575 214e 91       		.byte	0x91
 32576 214f 68       		.sleb128 -24
 32577 2150 23       		.uleb128 0x23
 32578 2151 62130000 		.4byte	.LASF242
 32579 2155 01       		.byte	0x1
 32580 2156 4E0F     		.2byte	0xf4e
 32581 2158 C7000000 		.4byte	0xc7
 32582 215c 02       		.uleb128 0x2
 32583 215d 91       		.byte	0x91
 32584 215e 66       		.sleb128 -26
 32585 215f 23       		.uleb128 0x23
 32586 2160 9E140000 		.4byte	.LASF241
 32587 2164 01       		.byte	0x1
 32588 2165 4F0F     		.2byte	0xf4f
 32589 2167 EB000000 		.4byte	0xeb
 32590 216b 02       		.uleb128 0x2
 32591 216c 91       		.byte	0x91
 32592 216d 60       		.sleb128 -32
 32593 216e 23       		.uleb128 0x23
 32594 216f 2F070000 		.4byte	.LASF236
 32595 2173 01       		.byte	0x1
 32596 2174 520F     		.2byte	0xf52
 32597 2176 8F210000 		.4byte	0x218f
 32598 217a 03       		.uleb128 0x3
 32599 217b 91       		.byte	0x91
 32600 217c 807D     		.sleb128 -384
 32601 217e 23       		.uleb128 0x23
 32602 217f 7B0A0000 		.4byte	.LASF346
 32603 2183 01       		.byte	0x1
 32604 2184 530F     		.2byte	0xf53
 32605 2186 640C0000 		.4byte	0xc64
 32606 218a 03       		.uleb128 0x3
 32607 218b 91       		.byte	0x91
 32608 218c E07C     		.sleb128 -416
 32609 218e 00       		.byte	0
 32610 218f 09       		.uleb128 0x9
 32611 2190 97000000 		.4byte	0x97
 32612 2194 A0210000 		.4byte	0x21a0
 32613 2198 24       		.uleb128 0x24
 32614 2199 18010000 		.4byte	0x118
 32615 219d 5D01     		.2byte	0x15d
 32616 219f 00       		.byte	0
 32617 21a0 27       		.uleb128 0x27
 32618 21a1 79140000 		.4byte	.LASF347
 32619 21a5 01       		.byte	0x1
 32620 21a6 D50F     		.2byte	0xfd5
 32621 21a8 00000000 		.4byte	.LFB111
 32622 21ac 8C000000 		.4byte	.LFE111-.LFB111
 32623 21b0 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 699


 32624 21b1 9C       		.byte	0x9c
 32625 21b2 E0210000 		.4byte	0x21e0
 32626 21b6 23       		.uleb128 0x23
 32627 21b7 2F070000 		.4byte	.LASF236
 32628 21bb 01       		.byte	0x1
 32629 21bc D80F     		.2byte	0xfd8
 32630 21be BB0A0000 		.4byte	0xabb
 32631 21c2 02       		.uleb128 0x2
 32632 21c3 91       		.byte	0x91
 32633 21c4 60       		.sleb128 -32
 32634 21c5 26       		.uleb128 0x26
 32635 21c6 6900     		.ascii	"i\000"
 32636 21c8 01       		.byte	0x1
 32637 21c9 D90F     		.2byte	0xfd9
 32638 21cb 97000000 		.4byte	0x97
 32639 21cf 02       		.uleb128 0x2
 32640 21d0 91       		.byte	0x91
 32641 21d1 6F       		.sleb128 -17
 32642 21d2 26       		.uleb128 0x26
 32643 21d3 6A00     		.ascii	"j\000"
 32644 21d5 01       		.byte	0x1
 32645 21d6 D90F     		.2byte	0xfd9
 32646 21d8 97000000 		.4byte	0x97
 32647 21dc 02       		.uleb128 0x2
 32648 21dd 91       		.byte	0x91
 32649 21de 6E       		.sleb128 -18
 32650 21df 00       		.byte	0
 32651 21e0 27       		.uleb128 0x27
 32652 21e1 6C120000 		.4byte	.LASF348
 32653 21e5 01       		.byte	0x1
 32654 21e6 EE0F     		.2byte	0xfee
 32655 21e8 00000000 		.4byte	.LFB112
 32656 21ec EC000000 		.4byte	.LFE112-.LFB112
 32657 21f0 01       		.uleb128 0x1
 32658 21f1 9C       		.byte	0x9c
 32659 21f2 3E220000 		.4byte	0x223e
 32660 21f6 23       		.uleb128 0x23
 32661 21f7 2F070000 		.4byte	.LASF236
 32662 21fb 01       		.byte	0x1
 32663 21fc F10F     		.2byte	0xff1
 32664 21fe 3E220000 		.4byte	0x223e
 32665 2202 02       		.uleb128 0x2
 32666 2203 91       		.byte	0x91
 32667 2204 54       		.sleb128 -44
 32668 2205 26       		.uleb128 0x26
 32669 2206 6900     		.ascii	"i\000"
 32670 2208 01       		.byte	0x1
 32671 2209 F20F     		.2byte	0xff2
 32672 220b 97000000 		.4byte	0x97
 32673 220f 02       		.uleb128 0x2
 32674 2210 91       		.byte	0x91
 32675 2211 6F       		.sleb128 -17
 32676 2212 26       		.uleb128 0x26
 32677 2213 6A00     		.ascii	"j\000"
 32678 2215 01       		.byte	0x1
 32679 2216 F20F     		.2byte	0xff2
 32680 2218 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 700


 32681 221c 02       		.uleb128 0x2
 32682 221d 91       		.byte	0x91
 32683 221e 6E       		.sleb128 -18
 32684 221f 26       		.uleb128 0x26
 32685 2220 69647800 		.ascii	"idx\000"
 32686 2224 01       		.byte	0x1
 32687 2225 F20F     		.2byte	0xff2
 32688 2227 97000000 		.4byte	0x97
 32689 222b 02       		.uleb128 0x2
 32690 222c 91       		.byte	0x91
 32691 222d 6D       		.sleb128 -19
 32692 222e 23       		.uleb128 0x23
 32693 222f 290E0000 		.4byte	.LASF243
 32694 2233 01       		.byte	0x1
 32695 2234 F30F     		.2byte	0xff3
 32696 2236 A3000000 		.4byte	0xa3
 32697 223a 02       		.uleb128 0x2
 32698 223b 91       		.byte	0x91
 32699 223c 52       		.sleb128 -46
 32700 223d 00       		.byte	0
 32701 223e 09       		.uleb128 0x9
 32702 223f 97000000 		.4byte	0x97
 32703 2243 4E220000 		.4byte	0x224e
 32704 2247 0A       		.uleb128 0xa
 32705 2248 18010000 		.4byte	0x118
 32706 224c 15       		.byte	0x15
 32707 224d 00       		.byte	0
 32708 224e 27       		.uleb128 0x27
 32709 224f EA030000 		.4byte	.LASF349
 32710 2253 01       		.byte	0x1
 32711 2254 0C10     		.2byte	0x100c
 32712 2256 00000000 		.4byte	.LFB113
 32713 225a 5C000000 		.4byte	.LFE113-.LFB113
 32714 225e 01       		.uleb128 0x1
 32715 225f 9C       		.byte	0x9c
 32716 2260 81220000 		.4byte	0x2281
 32717 2264 23       		.uleb128 0x23
 32718 2265 2F070000 		.4byte	.LASF236
 32719 2269 01       		.byte	0x1
 32720 226a 0F10     		.2byte	0x100f
 32721 226c 540C0000 		.4byte	0xc54
 32722 2270 02       		.uleb128 0x2
 32723 2271 91       		.byte	0x91
 32724 2272 68       		.sleb128 -24
 32725 2273 26       		.uleb128 0x26
 32726 2274 6900     		.ascii	"i\000"
 32727 2276 01       		.byte	0x1
 32728 2277 1010     		.2byte	0x1010
 32729 2279 97000000 		.4byte	0x97
 32730 227d 02       		.uleb128 0x2
 32731 227e 91       		.byte	0x91
 32732 227f 77       		.sleb128 -9
 32733 2280 00       		.byte	0
 32734 2281 27       		.uleb128 0x27
 32735 2282 88040000 		.4byte	.LASF350
 32736 2286 01       		.byte	0x1
 32737 2287 2310     		.2byte	0x1023
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 701


 32738 2289 00000000 		.4byte	.LFB114
 32739 228d C0000000 		.4byte	.LFE114-.LFB114
 32740 2291 01       		.uleb128 0x1
 32741 2292 9C       		.byte	0x9c
 32742 2293 D2220000 		.4byte	0x22d2
 32743 2297 23       		.uleb128 0x23
 32744 2298 2F070000 		.4byte	.LASF236
 32745 229c 01       		.byte	0x1
 32746 229d 2610     		.2byte	0x1026
 32747 229f D2220000 		.4byte	0x22d2
 32748 22a3 02       		.uleb128 0x2
 32749 22a4 91       		.byte	0x91
 32750 22a5 54       		.sleb128 -44
 32751 22a6 26       		.uleb128 0x26
 32752 22a7 6900     		.ascii	"i\000"
 32753 22a9 01       		.byte	0x1
 32754 22aa 2710     		.2byte	0x1027
 32755 22ac 97000000 		.4byte	0x97
 32756 22b0 02       		.uleb128 0x2
 32757 22b1 91       		.byte	0x91
 32758 22b2 6F       		.sleb128 -17
 32759 22b3 26       		.uleb128 0x26
 32760 22b4 69647800 		.ascii	"idx\000"
 32761 22b8 01       		.byte	0x1
 32762 22b9 2710     		.2byte	0x1027
 32763 22bb 97000000 		.4byte	0x97
 32764 22bf 02       		.uleb128 0x2
 32765 22c0 91       		.byte	0x91
 32766 22c1 6E       		.sleb128 -18
 32767 22c2 23       		.uleb128 0x23
 32768 22c3 62130000 		.4byte	.LASF242
 32769 22c7 01       		.byte	0x1
 32770 22c8 2810     		.2byte	0x1028
 32771 22ca C7000000 		.4byte	0xc7
 32772 22ce 02       		.uleb128 0x2
 32773 22cf 91       		.byte	0x91
 32774 22d0 52       		.sleb128 -46
 32775 22d1 00       		.byte	0
 32776 22d2 09       		.uleb128 0x9
 32777 22d3 97000000 		.4byte	0x97
 32778 22d7 E2220000 		.4byte	0x22e2
 32779 22db 0A       		.uleb128 0xa
 32780 22dc 18010000 		.4byte	0x118
 32781 22e0 19       		.byte	0x19
 32782 22e1 00       		.byte	0
 32783 22e2 22       		.uleb128 0x22
 32784 22e3 94030000 		.4byte	.LASF351
 32785 22e7 01       		.byte	0x1
 32786 22e8 3E10     		.2byte	0x103e
 32787 22ea 00000000 		.4byte	.LFB115
 32788 22ee 54010000 		.4byte	.LFE115-.LFB115
 32789 22f2 01       		.uleb128 0x1
 32790 22f3 9C       		.byte	0x9c
 32791 22f4 37230000 		.4byte	0x2337
 32792 22f8 25       		.uleb128 0x25
 32793 22f9 8E080000 		.4byte	.LASF352
 32794 22fd 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 702


 32795 22fe 3E10     		.2byte	0x103e
 32796 2300 A3000000 		.4byte	0xa3
 32797 2304 04       		.uleb128 0x4
 32798 2305 91       		.byte	0x91
 32799 2306 9EE37E   		.sleb128 -20066
 32800 2309 26       		.uleb128 0x26
 32801 230a 6900     		.ascii	"i\000"
 32802 230c 01       		.byte	0x1
 32803 230d 4010     		.2byte	0x1040
 32804 230f 97000000 		.4byte	0x97
 32805 2313 02       		.uleb128 0x2
 32806 2314 91       		.byte	0x91
 32807 2315 77       		.sleb128 -9
 32808 2316 23       		.uleb128 0x23
 32809 2317 3B050000 		.4byte	.LASF353
 32810 231b 01       		.byte	0x1
 32811 231c 4110     		.2byte	0x1041
 32812 231e 1A110000 		.4byte	0x111a
 32813 2322 02       		.uleb128 0x2
 32814 2323 91       		.byte	0x91
 32815 2324 44       		.sleb128 -60
 32816 2325 23       		.uleb128 0x23
 32817 2326 CB090000 		.4byte	.LASF225
 32818 232a 01       		.byte	0x1
 32819 232b 4210     		.2byte	0x1042
 32820 232d 420F0000 		.4byte	0xf42
 32821 2331 04       		.uleb128 0x4
 32822 2332 91       		.byte	0x91
 32823 2333 A4E37E   		.sleb128 -20060
 32824 2336 00       		.byte	0
 32825 2337 22       		.uleb128 0x22
 32826 2338 D8040000 		.4byte	.LASF354
 32827 233c 01       		.byte	0x1
 32828 233d 5A10     		.2byte	0x105a
 32829 233f 00000000 		.4byte	.LFB116
 32830 2343 B0000000 		.4byte	.LFE116-.LFB116
 32831 2347 01       		.uleb128 0x1
 32832 2348 9C       		.byte	0x9c
 32833 2349 98230000 		.4byte	0x2398
 32834 234d 25       		.uleb128 0x25
 32835 234e 8E080000 		.4byte	.LASF352
 32836 2352 01       		.byte	0x1
 32837 2353 5A10     		.2byte	0x105a
 32838 2355 A3000000 		.4byte	0xa3
 32839 2359 03       		.uleb128 0x3
 32840 235a 91       		.byte	0x91
 32841 235b BE7F     		.sleb128 -66
 32842 235d 26       		.uleb128 0x26
 32843 235e 6900     		.ascii	"i\000"
 32844 2360 01       		.byte	0x1
 32845 2361 5C10     		.2byte	0x105c
 32846 2363 97000000 		.4byte	0x97
 32847 2367 02       		.uleb128 0x2
 32848 2368 91       		.byte	0x91
 32849 2369 77       		.sleb128 -9
 32850 236a 23       		.uleb128 0x23
 32851 236b 3B050000 		.4byte	.LASF353
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 703


 32852 236f 01       		.byte	0x1
 32853 2370 5D10     		.2byte	0x105d
 32854 2372 1A110000 		.4byte	0x111a
 32855 2376 02       		.uleb128 0x2
 32856 2377 91       		.byte	0x91
 32857 2378 44       		.sleb128 -60
 32858 2379 26       		.uleb128 0x26
 32859 237a 72657300 		.ascii	"res\000"
 32860 237e 01       		.byte	0x1
 32861 237f 6610     		.2byte	0x1066
 32862 2381 97000000 		.4byte	0x97
 32863 2385 02       		.uleb128 0x2
 32864 2386 91       		.byte	0x91
 32865 2387 76       		.sleb128 -10
 32866 2388 23       		.uleb128 0x23
 32867 2389 2F070000 		.4byte	.LASF236
 32868 238d 01       		.byte	0x1
 32869 238e 6910     		.2byte	0x1069
 32870 2390 20060000 		.4byte	0x620
 32871 2394 02       		.uleb128 0x2
 32872 2395 91       		.byte	0x91
 32873 2396 40       		.sleb128 -64
 32874 2397 00       		.byte	0
 32875 2398 28       		.uleb128 0x28
 32876 2399 2E010000 		.4byte	.LASF355
 32877 239d 01       		.byte	0x1
 32878 239e 7B10     		.2byte	0x107b
 32879 23a0 00000000 		.4byte	.LFB117
 32880 23a4 12000000 		.4byte	.LFE117-.LFB117
 32881 23a8 01       		.uleb128 0x1
 32882 23a9 9C       		.byte	0x9c
 32883 23aa BE230000 		.4byte	0x23be
 32884 23ae 25       		.uleb128 0x25
 32885 23af E6070000 		.4byte	.LASF356
 32886 23b3 01       		.byte	0x1
 32887 23b4 7B10     		.2byte	0x107b
 32888 23b6 73000000 		.4byte	0x73
 32889 23ba 02       		.uleb128 0x2
 32890 23bb 91       		.byte	0x91
 32891 23bc 74       		.sleb128 -12
 32892 23bd 00       		.byte	0
 32893 23be 31       		.uleb128 0x31
 32894 23bf A30D0000 		.4byte	.LASF357
 32895 23c3 01       		.byte	0x1
 32896 23c4 C910     		.2byte	0x10c9
 32897 23c6 97000000 		.4byte	0x97
 32898 23ca 00000000 		.4byte	.LFB118
 32899 23ce 64010000 		.4byte	.LFE118-.LFB118
 32900 23d2 01       		.uleb128 0x1
 32901 23d3 9C       		.byte	0x9c
 32902 23d4 39240000 		.4byte	0x2439
 32903 23d8 23       		.uleb128 0x23
 32904 23d9 8E0F0000 		.4byte	.LASF358
 32905 23dd 01       		.byte	0x1
 32906 23de CB10     		.2byte	0x10cb
 32907 23e0 97000000 		.4byte	0x97
 32908 23e4 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 704


 32909 23e5 03       		.byte	0x3
 32910 23e6 0C000000 		.4byte	fsm_state.11647
 32911 23ea 26       		.uleb128 0x26
 32912 23eb 636E7400 		.ascii	"cnt\000"
 32913 23ef 01       		.byte	0x1
 32914 23f0 CC10     		.2byte	0x10cc
 32915 23f2 D3000000 		.4byte	0xd3
 32916 23f6 05       		.uleb128 0x5
 32917 23f7 03       		.byte	0x3
 32918 23f8 10000000 		.4byte	cnt.11648
 32919 23fc 23       		.uleb128 0x23
 32920 23fd 28050000 		.4byte	.LASF359
 32921 2401 01       		.byte	0x1
 32922 2402 CD10     		.2byte	0x10cd
 32923 2404 D3000000 		.4byte	0xd3
 32924 2408 02       		.uleb128 0x2
 32925 2409 91       		.byte	0x91
 32926 240a 74       		.sleb128 -12
 32927 240b 23       		.uleb128 0x23
 32928 240c D30C0000 		.4byte	.LASF360
 32929 2410 01       		.byte	0x1
 32930 2411 CD10     		.2byte	0x10cd
 32931 2413 D3000000 		.4byte	0xd3
 32932 2417 02       		.uleb128 0x2
 32933 2418 91       		.byte	0x91
 32934 2419 70       		.sleb128 -16
 32935 241a 23       		.uleb128 0x23
 32936 241b B5000000 		.4byte	.LASF361
 32937 241f 01       		.byte	0x1
 32938 2420 CE10     		.2byte	0x10ce
 32939 2422 D3000000 		.4byte	0xd3
 32940 2426 02       		.uleb128 0x2
 32941 2427 91       		.byte	0x91
 32942 2428 6C       		.sleb128 -20
 32943 2429 23       		.uleb128 0x23
 32944 242a C1000000 		.4byte	.LASF362
 32945 242e 01       		.byte	0x1
 32946 242f CE10     		.2byte	0x10ce
 32947 2431 D3000000 		.4byte	0xd3
 32948 2435 02       		.uleb128 0x2
 32949 2436 91       		.byte	0x91
 32950 2437 68       		.sleb128 -24
 32951 2438 00       		.byte	0
 32952 2439 28       		.uleb128 0x28
 32953 243a F5080000 		.4byte	.LASF363
 32954 243e 01       		.byte	0x1
 32955 243f 1B11     		.2byte	0x111b
 32956 2441 00000000 		.4byte	.LFB119
 32957 2445 12000000 		.4byte	.LFE119-.LFB119
 32958 2449 01       		.uleb128 0x1
 32959 244a 9C       		.byte	0x9c
 32960 244b 5F240000 		.4byte	0x245f
 32961 244f 25       		.uleb128 0x25
 32962 2450 E6070000 		.4byte	.LASF356
 32963 2454 01       		.byte	0x1
 32964 2455 1B11     		.2byte	0x111b
 32965 2457 73000000 		.4byte	0x73
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 705


 32966 245b 02       		.uleb128 0x2
 32967 245c 91       		.byte	0x91
 32968 245d 74       		.sleb128 -12
 32969 245e 00       		.byte	0
 32970 245f 28       		.uleb128 0x28
 32971 2460 220F0000 		.4byte	.LASF364
 32972 2464 01       		.byte	0x1
 32973 2465 6711     		.2byte	0x1167
 32974 2467 00000000 		.4byte	.LFB120
 32975 246b 1A000000 		.4byte	.LFE120-.LFB120
 32976 246f 01       		.uleb128 0x1
 32977 2470 9C       		.byte	0x9c
 32978 2471 94240000 		.4byte	0x2494
 32979 2475 25       		.uleb128 0x25
 32980 2476 72030000 		.4byte	.LASF365
 32981 247a 01       		.byte	0x1
 32982 247b 6711     		.2byte	0x1167
 32983 247d 97000000 		.4byte	0x97
 32984 2481 02       		.uleb128 0x2
 32985 2482 91       		.byte	0x91
 32986 2483 77       		.sleb128 -9
 32987 2484 25       		.uleb128 0x25
 32988 2485 3F0C0000 		.4byte	.LASF192
 32989 2489 01       		.byte	0x1
 32990 248a 6711     		.2byte	0x1167
 32991 248c 97000000 		.4byte	0x97
 32992 2490 02       		.uleb128 0x2
 32993 2491 91       		.byte	0x91
 32994 2492 76       		.sleb128 -10
 32995 2493 00       		.byte	0
 32996 2494 32       		.uleb128 0x32
 32997 2495 CD000000 		.4byte	.LASF367
 32998 2499 01       		.byte	0x1
 32999 249a 9111     		.2byte	0x1191
 33000 249c 00000000 		.4byte	.LFB121
 33001 24a0 0C000000 		.4byte	.LFE121-.LFB121
 33002 24a4 01       		.uleb128 0x1
 33003 24a5 9C       		.byte	0x9c
 33004 24a6 32       		.uleb128 0x32
 33005 24a7 5E070000 		.4byte	.LASF368
 33006 24ab 01       		.byte	0x1
 33007 24ac A711     		.2byte	0x11a7
 33008 24ae 00000000 		.4byte	.LFB122
 33009 24b2 0C000000 		.4byte	.LFE122-.LFB122
 33010 24b6 01       		.uleb128 0x1
 33011 24b7 9C       		.byte	0x9c
 33012 24b8 27       		.uleb128 0x27
 33013 24b9 AF090000 		.4byte	.LASF369
 33014 24bd 01       		.byte	0x1
 33015 24be C411     		.2byte	0x11c4
 33016 24c0 00000000 		.4byte	.LFB123
 33017 24c4 68000000 		.4byte	.LFE123-.LFB123
 33018 24c8 01       		.uleb128 0x1
 33019 24c9 9C       		.byte	0x9c
 33020 24ca ED240000 		.4byte	0x24ed
 33021 24ce 23       		.uleb128 0x23
 33022 24cf 62130000 		.4byte	.LASF242
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 706


 33023 24d3 01       		.byte	0x1
 33024 24d4 C511     		.2byte	0x11c5
 33025 24d6 C7000000 		.4byte	0xc7
 33026 24da 02       		.uleb128 0x2
 33027 24db 91       		.byte	0x91
 33028 24dc 76       		.sleb128 -10
 33029 24dd 23       		.uleb128 0x23
 33030 24de 2F070000 		.4byte	.LASF236
 33031 24e2 01       		.byte	0x1
 33032 24e3 C611     		.2byte	0x11c6
 33033 24e5 A0090000 		.4byte	0x9a0
 33034 24e9 02       		.uleb128 0x2
 33035 24ea 91       		.byte	0x91
 33036 24eb 70       		.sleb128 -16
 33037 24ec 00       		.byte	0
 33038 24ed 33       		.uleb128 0x33
 33039 24ee AB130000 		.4byte	.LASF370
 33040 24f2 09       		.byte	0x9
 33041 24f3 1207     		.2byte	0x712
 33042 24f5 F9240000 		.4byte	0x24f9
 33043 24f9 06       		.uleb128 0x6
 33044 24fa 81000000 		.4byte	0x81
 33045 24fe 09       		.uleb128 0x9
 33046 24ff 620D0000 		.4byte	0xd62
 33047 2503 0E250000 		.4byte	0x250e
 33048 2507 0A       		.uleb128 0xa
 33049 2508 18010000 		.4byte	0x118
 33050 250c 01       		.byte	0x1
 33051 250d 00       		.byte	0
 33052 250e 33       		.uleb128 0x33
 33053 250f 70060000 		.4byte	.LASF371
 33054 2513 08       		.byte	0x8
 33055 2514 2B02     		.2byte	0x22b
 33056 2516 FE240000 		.4byte	0x24fe
 33057 251a 09       		.uleb128 0x9
 33058 251b 34030000 		.4byte	0x334
 33059 251f 2A250000 		.4byte	0x252a
 33060 2523 0A       		.uleb128 0xa
 33061 2524 18010000 		.4byte	0x118
 33062 2528 01       		.byte	0x1
 33063 2529 00       		.byte	0
 33064 252a 33       		.uleb128 0x33
 33065 252b 7B150000 		.4byte	.LASF372
 33066 252f 08       		.byte	0x8
 33067 2530 2C02     		.2byte	0x22c
 33068 2532 1A250000 		.4byte	0x251a
 33069 2536 33       		.uleb128 0x33
 33070 2537 D8050000 		.4byte	.LASF373
 33071 253b 08       		.byte	0x8
 33072 253c 2C02     		.2byte	0x22c
 33073 253e 1A250000 		.4byte	0x251a
 33074 2542 33       		.uleb128 0x33
 33075 2543 DB0E0000 		.4byte	.LASF374
 33076 2547 08       		.byte	0x8
 33077 2548 2C02     		.2byte	0x22c
 33078 254a 1A250000 		.4byte	0x251a
 33079 254e 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 707


 33080 254f 71030000 		.4byte	0x371
 33081 2553 5E250000 		.4byte	0x255e
 33082 2557 0A       		.uleb128 0xa
 33083 2558 18010000 		.4byte	0x118
 33084 255c 01       		.byte	0x1
 33085 255d 00       		.byte	0
 33086 255e 33       		.uleb128 0x33
 33087 255f F6070000 		.4byte	.LASF375
 33088 2563 08       		.byte	0x8
 33089 2564 2D02     		.2byte	0x22d
 33090 2566 4E250000 		.4byte	0x254e
 33091 256a 33       		.uleb128 0x33
 33092 256b CE150000 		.4byte	.LASF376
 33093 256f 08       		.byte	0x8
 33094 2570 2D02     		.2byte	0x22d
 33095 2572 4E250000 		.4byte	0x254e
 33096 2576 33       		.uleb128 0x33
 33097 2577 45150000 		.4byte	.LASF377
 33098 257b 08       		.byte	0x8
 33099 257c 2E02     		.2byte	0x22e
 33100 257e F2030000 		.4byte	0x3f2
 33101 2582 33       		.uleb128 0x33
 33102 2583 5E120000 		.4byte	.LASF378
 33103 2587 08       		.byte	0x8
 33104 2588 2E02     		.2byte	0x22e
 33105 258a F2030000 		.4byte	0x3f2
 33106 258e 33       		.uleb128 0x33
 33107 258f 14120000 		.4byte	.LASF379
 33108 2593 08       		.byte	0x8
 33109 2594 2F02     		.2byte	0x22f
 33110 2596 47040000 		.4byte	0x447
 33111 259a 33       		.uleb128 0x33
 33112 259b E8000000 		.4byte	.LASF380
 33113 259f 08       		.byte	0x8
 33114 25a0 3002     		.2byte	0x230
 33115 25a2 62040000 		.4byte	0x462
 33116 25a6 33       		.uleb128 0x33
 33117 25a7 43120000 		.4byte	.LASF381
 33118 25ab 08       		.byte	0x8
 33119 25ac 3102     		.2byte	0x231
 33120 25ae 6F0B0000 		.4byte	0xb6f
 33121 25b2 33       		.uleb128 0x33
 33122 25b3 B50C0000 		.4byte	.LASF382
 33123 25b7 08       		.byte	0x8
 33124 25b8 3102     		.2byte	0x231
 33125 25ba 6F0B0000 		.4byte	0xb6f
 33126 25be 33       		.uleb128 0x33
 33127 25bf 780B0000 		.4byte	.LASF383
 33128 25c3 08       		.byte	0x8
 33129 25c4 3202     		.2byte	0x232
 33130 25c6 200D0000 		.4byte	0xd20
 33131 25ca 33       		.uleb128 0x33
 33132 25cb 4F030000 		.4byte	.LASF384
 33133 25cf 08       		.byte	0x8
 33134 25d0 3802     		.2byte	0x238
 33135 25d2 A3000000 		.4byte	0xa3
 33136 25d6 33       		.uleb128 0x33
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 708


 33137 25d7 21100000 		.4byte	.LASF385
 33138 25db 08       		.byte	0x8
 33139 25dc 3902     		.2byte	0x239
 33140 25de A3000000 		.4byte	0xa3
 33141 25e2 33       		.uleb128 0x33
 33142 25e3 53100000 		.4byte	.LASF386
 33143 25e7 08       		.byte	0x8
 33144 25e8 3C02     		.2byte	0x23c
 33145 25ea 27040000 		.4byte	0x427
 33146 25ee 33       		.uleb128 0x33
 33147 25ef 42140000 		.4byte	.LASF387
 33148 25f3 08       		.byte	0x8
 33149 25f4 3D02     		.2byte	0x23d
 33150 25f6 CC080000 		.4byte	0x8cc
 33151 25fa 33       		.uleb128 0x33
 33152 25fb CB130000 		.4byte	.LASF388
 33153 25ff 08       		.byte	0x8
 33154 2600 4002     		.2byte	0x240
 33155 2602 27040000 		.4byte	0x427
 33156 2606 33       		.uleb128 0x33
 33157 2607 480C0000 		.4byte	.LASF389
 33158 260b 08       		.byte	0x8
 33159 260c 4A02     		.2byte	0x24a
 33160 260e DC080000 		.4byte	0x8dc
 33161 2612 33       		.uleb128 0x33
 33162 2613 68050000 		.4byte	.LASF390
 33163 2617 08       		.byte	0x8
 33164 2618 4C02     		.2byte	0x24c
 33165 261a 97000000 		.4byte	0x97
 33166 261e 33       		.uleb128 0x33
 33167 261f CD0B0000 		.4byte	.LASF391
 33168 2623 08       		.byte	0x8
 33169 2624 5302     		.2byte	0x253
 33170 2626 97000000 		.4byte	0x97
 33171 262a 33       		.uleb128 0x33
 33172 262b E5080000 		.4byte	.LASF392
 33173 262f 08       		.byte	0x8
 33174 2630 5402     		.2byte	0x254
 33175 2632 97000000 		.4byte	0x97
 33176 2636 09       		.uleb128 0x9
 33177 2637 C7000000 		.4byte	0xc7
 33178 263b 46260000 		.4byte	0x2646
 33179 263f 0A       		.uleb128 0xa
 33180 2640 18010000 		.4byte	0x118
 33181 2644 0B       		.byte	0xb
 33182 2645 00       		.byte	0
 33183 2646 33       		.uleb128 0x33
 33184 2647 60050000 		.4byte	.LASF393
 33185 264b 08       		.byte	0x8
 33186 264c 5702     		.2byte	0x257
 33187 264e 36260000 		.4byte	0x2636
 33188 2652 33       		.uleb128 0x33
 33189 2653 87150000 		.4byte	.LASF394
 33190 2657 08       		.byte	0x8
 33191 2658 5802     		.2byte	0x258
 33192 265a 97000000 		.4byte	0x97
 33193 265e 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 709


 33194 265f AF000000 		.4byte	0xaf
 33195 2663 74260000 		.4byte	0x2674
 33196 2667 0A       		.uleb128 0xa
 33197 2668 18010000 		.4byte	0x118
 33198 266c 01       		.byte	0x1
 33199 266d 0A       		.uleb128 0xa
 33200 266e 18010000 		.4byte	0x118
 33201 2672 04       		.byte	0x4
 33202 2673 00       		.byte	0
 33203 2674 33       		.uleb128 0x33
 33204 2675 24080000 		.4byte	.LASF395
 33205 2679 08       		.byte	0x8
 33206 267a 5E02     		.2byte	0x25e
 33207 267c 5E260000 		.4byte	0x265e
 33208 2680 33       		.uleb128 0x33
 33209 2681 3F110000 		.4byte	.LASF396
 33210 2685 08       		.byte	0x8
 33211 2686 5F02     		.2byte	0x25f
 33212 2688 DC080000 		.4byte	0x8dc
 33213 268c 09       		.uleb128 0x9
 33214 268d A3000000 		.4byte	0xa3
 33215 2691 A2260000 		.4byte	0x26a2
 33216 2695 0A       		.uleb128 0xa
 33217 2696 18010000 		.4byte	0x118
 33218 269a 01       		.byte	0x1
 33219 269b 0A       		.uleb128 0xa
 33220 269c 18010000 		.4byte	0x118
 33221 26a0 04       		.byte	0x4
 33222 26a1 00       		.byte	0
 33223 26a2 33       		.uleb128 0x33
 33224 26a3 6B140000 		.4byte	.LASF397
 33225 26a7 08       		.byte	0x8
 33226 26a8 6002     		.2byte	0x260
 33227 26aa 8C260000 		.4byte	0x268c
 33228 26ae 09       		.uleb128 0x9
 33229 26af 97000000 		.4byte	0x97
 33230 26b3 C4260000 		.4byte	0x26c4
 33231 26b7 0A       		.uleb128 0xa
 33232 26b8 18010000 		.4byte	0x118
 33233 26bc 01       		.byte	0x1
 33234 26bd 0A       		.uleb128 0xa
 33235 26be 18010000 		.4byte	0x118
 33236 26c2 04       		.byte	0x4
 33237 26c3 00       		.byte	0
 33238 26c4 33       		.uleb128 0x33
 33239 26c5 FD070000 		.4byte	.LASF398
 33240 26c9 08       		.byte	0x8
 33241 26ca 6102     		.2byte	0x261
 33242 26cc AE260000 		.4byte	0x26ae
 33243 26d0 33       		.uleb128 0x33
 33244 26d1 45070000 		.4byte	.LASF399
 33245 26d5 08       		.byte	0x8
 33246 26d6 6802     		.2byte	0x268
 33247 26d8 2E030000 		.4byte	0x32e
 33248 26dc 33       		.uleb128 0x33
 33249 26dd D9100000 		.4byte	.LASF400
 33250 26e1 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 710


 33251 26e2 6902     		.2byte	0x269
 33252 26e4 FA160000 		.4byte	0x16fa
 33253 26e8 33       		.uleb128 0x33
 33254 26e9 98040000 		.4byte	.LASF401
 33255 26ed 08       		.byte	0x8
 33256 26ee 6A02     		.2byte	0x26a
 33257 26f0 FA160000 		.4byte	0x16fa
 33258 26f4 33       		.uleb128 0x33
 33259 26f5 0B150000 		.4byte	.LASF402
 33260 26f9 08       		.byte	0x8
 33261 26fa 6D02     		.2byte	0x26d
 33262 26fc FA160000 		.4byte	0x16fa
 33263 2700 33       		.uleb128 0x33
 33264 2701 E9120000 		.4byte	.LASF403
 33265 2705 08       		.byte	0x8
 33266 2706 7002     		.2byte	0x270
 33267 2708 97000000 		.4byte	0x97
 33268 270c 33       		.uleb128 0x33
 33269 270d A8140000 		.4byte	.LASF404
 33270 2711 08       		.byte	0x8
 33271 2712 7102     		.2byte	0x271
 33272 2714 4D080000 		.4byte	0x84d
 33273 2718 33       		.uleb128 0x33
 33274 2719 9C130000 		.4byte	.LASF405
 33275 271d 08       		.byte	0x8
 33276 271e 7202     		.2byte	0x272
 33277 2720 73000000 		.4byte	0x73
 33278 2724 09       		.uleb128 0x9
 33279 2725 73000000 		.4byte	0x73
 33280 2729 34270000 		.4byte	0x2734
 33281 272d 0A       		.uleb128 0xa
 33282 272e 18010000 		.4byte	0x118
 33283 2732 04       		.byte	0x4
 33284 2733 00       		.byte	0
 33285 2734 33       		.uleb128 0x33
 33286 2735 EB0D0000 		.4byte	.LASF406
 33287 2739 08       		.byte	0x8
 33288 273a 7302     		.2byte	0x273
 33289 273c 24270000 		.4byte	0x2724
 33290 2740 09       		.uleb128 0x9
 33291 2741 A40C0000 		.4byte	0xca4
 33292 2745 50270000 		.4byte	0x2750
 33293 2749 0A       		.uleb128 0xa
 33294 274a 18010000 		.4byte	0x118
 33295 274e 04       		.byte	0x4
 33296 274f 00       		.byte	0
 33297 2750 33       		.uleb128 0x33
 33298 2751 6A060000 		.4byte	.LASF407
 33299 2755 08       		.byte	0x8
 33300 2756 7402     		.2byte	0x274
 33301 2758 40270000 		.4byte	0x2740
 33302 275c 09       		.uleb128 0x9
 33303 275d 97000000 		.4byte	0x97
 33304 2761 72270000 		.4byte	0x2772
 33305 2765 0A       		.uleb128 0xa
 33306 2766 18010000 		.4byte	0x118
 33307 276a 04       		.byte	0x4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 711


 33308 276b 0A       		.uleb128 0xa
 33309 276c 18010000 		.4byte	0x118
 33310 2770 02       		.byte	0x2
 33311 2771 00       		.byte	0
 33312 2772 33       		.uleb128 0x33
 33313 2773 110D0000 		.4byte	.LASF408
 33314 2777 08       		.byte	0x8
 33315 2778 7802     		.2byte	0x278
 33316 277a 5C270000 		.4byte	0x275c
 33317 277e 33       		.uleb128 0x33
 33318 277f AD150000 		.4byte	.LASF409
 33319 2783 08       		.byte	0x8
 33320 2784 7D02     		.2byte	0x27d
 33321 2786 97000000 		.4byte	0x97
 33322 278a 09       		.uleb128 0x9
 33323 278b A3000000 		.4byte	0xa3
 33324 278f A1270000 		.4byte	0x27a1
 33325 2793 24       		.uleb128 0x24
 33326 2794 18010000 		.4byte	0x118
 33327 2798 5702     		.2byte	0x257
 33328 279a 0A       		.uleb128 0xa
 33329 279b 18010000 		.4byte	0x118
 33330 279f 01       		.byte	0x1
 33331 27a0 00       		.byte	0
 33332 27a1 33       		.uleb128 0x33
 33333 27a2 6C130000 		.4byte	.LASF410
 33334 27a6 08       		.byte	0x8
 33335 27a7 8002     		.2byte	0x280
 33336 27a9 8A270000 		.4byte	0x278a
 33337 27ad 33       		.uleb128 0x33
 33338 27ae 2A0C0000 		.4byte	.LASF411
 33339 27b2 08       		.byte	0x8
 33340 27b3 8102     		.2byte	0x281
 33341 27b5 AF000000 		.4byte	0xaf
 33342 27b9 33       		.uleb128 0x33
 33343 27ba 5F040000 		.4byte	.LASF412
 33344 27be 08       		.byte	0x8
 33345 27bf 8902     		.2byte	0x289
 33346 27c1 97000000 		.4byte	0x97
 33347 27c5 34       		.uleb128 0x34
 33348 27c6 78130000 		.4byte	.LASF413
 33349 27ca 01       		.byte	0x1
 33350 27cb 33       		.byte	0x33
 33351 27cc D6270000 		.4byte	0x27d6
 33352 27d0 05       		.uleb128 0x5
 33353 27d1 03       		.byte	0x3
 33354 27d2 00000000 		.4byte	EEPROM_ADDR
 33355 27d6 07       		.uleb128 0x7
 33356 27d7 04       		.byte	0x4
 33357 27d8 00010000 		.4byte	0x100
 33358 27dc 00       		.byte	0
 33359              		.section	.debug_abbrev,"",%progbits
 33360              	.Ldebug_abbrev0:
 33361 0000 01       		.uleb128 0x1
 33362 0001 11       		.uleb128 0x11
 33363 0002 01       		.byte	0x1
 33364 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 712


 33365 0004 0E       		.uleb128 0xe
 33366 0005 13       		.uleb128 0x13
 33367 0006 0B       		.uleb128 0xb
 33368 0007 03       		.uleb128 0x3
 33369 0008 0E       		.uleb128 0xe
 33370 0009 1B       		.uleb128 0x1b
 33371 000a 0E       		.uleb128 0xe
 33372 000b 55       		.uleb128 0x55
 33373 000c 17       		.uleb128 0x17
 33374 000d 11       		.uleb128 0x11
 33375 000e 01       		.uleb128 0x1
 33376 000f 10       		.uleb128 0x10
 33377 0010 17       		.uleb128 0x17
 33378 0011 00       		.byte	0
 33379 0012 00       		.byte	0
 33380 0013 02       		.uleb128 0x2
 33381 0014 24       		.uleb128 0x24
 33382 0015 00       		.byte	0
 33383 0016 0B       		.uleb128 0xb
 33384 0017 0B       		.uleb128 0xb
 33385 0018 3E       		.uleb128 0x3e
 33386 0019 0B       		.uleb128 0xb
 33387 001a 03       		.uleb128 0x3
 33388 001b 0E       		.uleb128 0xe
 33389 001c 00       		.byte	0
 33390 001d 00       		.byte	0
 33391 001e 03       		.uleb128 0x3
 33392 001f 16       		.uleb128 0x16
 33393 0020 00       		.byte	0
 33394 0021 03       		.uleb128 0x3
 33395 0022 0E       		.uleb128 0xe
 33396 0023 3A       		.uleb128 0x3a
 33397 0024 0B       		.uleb128 0xb
 33398 0025 3B       		.uleb128 0x3b
 33399 0026 0B       		.uleb128 0xb
 33400 0027 49       		.uleb128 0x49
 33401 0028 13       		.uleb128 0x13
 33402 0029 00       		.byte	0
 33403 002a 00       		.byte	0
 33404 002b 04       		.uleb128 0x4
 33405 002c 24       		.uleb128 0x24
 33406 002d 00       		.byte	0
 33407 002e 0B       		.uleb128 0xb
 33408 002f 0B       		.uleb128 0xb
 33409 0030 3E       		.uleb128 0x3e
 33410 0031 0B       		.uleb128 0xb
 33411 0032 03       		.uleb128 0x3
 33412 0033 08       		.uleb128 0x8
 33413 0034 00       		.byte	0
 33414 0035 00       		.byte	0
 33415 0036 05       		.uleb128 0x5
 33416 0037 16       		.uleb128 0x16
 33417 0038 00       		.byte	0
 33418 0039 03       		.uleb128 0x3
 33419 003a 0E       		.uleb128 0xe
 33420 003b 3A       		.uleb128 0x3a
 33421 003c 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 713


 33422 003d 3B       		.uleb128 0x3b
 33423 003e 05       		.uleb128 0x5
 33424 003f 49       		.uleb128 0x49
 33425 0040 13       		.uleb128 0x13
 33426 0041 00       		.byte	0
 33427 0042 00       		.byte	0
 33428 0043 06       		.uleb128 0x6
 33429 0044 35       		.uleb128 0x35
 33430 0045 00       		.byte	0
 33431 0046 49       		.uleb128 0x49
 33432 0047 13       		.uleb128 0x13
 33433 0048 00       		.byte	0
 33434 0049 00       		.byte	0
 33435 004a 07       		.uleb128 0x7
 33436 004b 0F       		.uleb128 0xf
 33437 004c 00       		.byte	0
 33438 004d 0B       		.uleb128 0xb
 33439 004e 0B       		.uleb128 0xb
 33440 004f 49       		.uleb128 0x49
 33441 0050 13       		.uleb128 0x13
 33442 0051 00       		.byte	0
 33443 0052 00       		.byte	0
 33444 0053 08       		.uleb128 0x8
 33445 0054 26       		.uleb128 0x26
 33446 0055 00       		.byte	0
 33447 0056 49       		.uleb128 0x49
 33448 0057 13       		.uleb128 0x13
 33449 0058 00       		.byte	0
 33450 0059 00       		.byte	0
 33451 005a 09       		.uleb128 0x9
 33452 005b 01       		.uleb128 0x1
 33453 005c 01       		.byte	0x1
 33454 005d 49       		.uleb128 0x49
 33455 005e 13       		.uleb128 0x13
 33456 005f 01       		.uleb128 0x1
 33457 0060 13       		.uleb128 0x13
 33458 0061 00       		.byte	0
 33459 0062 00       		.byte	0
 33460 0063 0A       		.uleb128 0xa
 33461 0064 21       		.uleb128 0x21
 33462 0065 00       		.byte	0
 33463 0066 49       		.uleb128 0x49
 33464 0067 13       		.uleb128 0x13
 33465 0068 2F       		.uleb128 0x2f
 33466 0069 0B       		.uleb128 0xb
 33467 006a 00       		.byte	0
 33468 006b 00       		.byte	0
 33469 006c 0B       		.uleb128 0xb
 33470 006d 04       		.uleb128 0x4
 33471 006e 01       		.byte	0x1
 33472 006f 03       		.uleb128 0x3
 33473 0070 0E       		.uleb128 0xe
 33474 0071 0B       		.uleb128 0xb
 33475 0072 0B       		.uleb128 0xb
 33476 0073 49       		.uleb128 0x49
 33477 0074 13       		.uleb128 0x13
 33478 0075 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 714


 33479 0076 0B       		.uleb128 0xb
 33480 0077 3B       		.uleb128 0x3b
 33481 0078 0B       		.uleb128 0xb
 33482 0079 01       		.uleb128 0x1
 33483 007a 13       		.uleb128 0x13
 33484 007b 00       		.byte	0
 33485 007c 00       		.byte	0
 33486 007d 0C       		.uleb128 0xc
 33487 007e 28       		.uleb128 0x28
 33488 007f 00       		.byte	0
 33489 0080 03       		.uleb128 0x3
 33490 0081 0E       		.uleb128 0xe
 33491 0082 1C       		.uleb128 0x1c
 33492 0083 0B       		.uleb128 0xb
 33493 0084 00       		.byte	0
 33494 0085 00       		.byte	0
 33495 0086 0D       		.uleb128 0xd
 33496 0087 13       		.uleb128 0x13
 33497 0088 00       		.byte	0
 33498 0089 03       		.uleb128 0x3
 33499 008a 0E       		.uleb128 0xe
 33500 008b 3C       		.uleb128 0x3c
 33501 008c 19       		.uleb128 0x19
 33502 008d 00       		.byte	0
 33503 008e 00       		.byte	0
 33504 008f 0E       		.uleb128 0xe
 33505 0090 13       		.uleb128 0x13
 33506 0091 01       		.byte	0x1
 33507 0092 03       		.uleb128 0x3
 33508 0093 0E       		.uleb128 0xe
 33509 0094 0B       		.uleb128 0xb
 33510 0095 0B       		.uleb128 0xb
 33511 0096 3A       		.uleb128 0x3a
 33512 0097 0B       		.uleb128 0xb
 33513 0098 3B       		.uleb128 0x3b
 33514 0099 0B       		.uleb128 0xb
 33515 009a 01       		.uleb128 0x1
 33516 009b 13       		.uleb128 0x13
 33517 009c 00       		.byte	0
 33518 009d 00       		.byte	0
 33519 009e 0F       		.uleb128 0xf
 33520 009f 0D       		.uleb128 0xd
 33521 00a0 00       		.byte	0
 33522 00a1 03       		.uleb128 0x3
 33523 00a2 08       		.uleb128 0x8
 33524 00a3 3A       		.uleb128 0x3a
 33525 00a4 0B       		.uleb128 0xb
 33526 00a5 3B       		.uleb128 0x3b
 33527 00a6 0B       		.uleb128 0xb
 33528 00a7 49       		.uleb128 0x49
 33529 00a8 13       		.uleb128 0x13
 33530 00a9 38       		.uleb128 0x38
 33531 00aa 0B       		.uleb128 0xb
 33532 00ab 00       		.byte	0
 33533 00ac 00       		.byte	0
 33534 00ad 10       		.uleb128 0x10
 33535 00ae 0D       		.uleb128 0xd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 715


 33536 00af 00       		.byte	0
 33537 00b0 03       		.uleb128 0x3
 33538 00b1 0E       		.uleb128 0xe
 33539 00b2 3A       		.uleb128 0x3a
 33540 00b3 0B       		.uleb128 0xb
 33541 00b4 3B       		.uleb128 0x3b
 33542 00b5 0B       		.uleb128 0xb
 33543 00b6 49       		.uleb128 0x49
 33544 00b7 13       		.uleb128 0x13
 33545 00b8 38       		.uleb128 0x38
 33546 00b9 0B       		.uleb128 0xb
 33547 00ba 00       		.byte	0
 33548 00bb 00       		.byte	0
 33549 00bc 11       		.uleb128 0x11
 33550 00bd 13       		.uleb128 0x13
 33551 00be 01       		.byte	0x1
 33552 00bf 03       		.uleb128 0x3
 33553 00c0 0E       		.uleb128 0xe
 33554 00c1 0B       		.uleb128 0xb
 33555 00c2 0B       		.uleb128 0xb
 33556 00c3 3A       		.uleb128 0x3a
 33557 00c4 0B       		.uleb128 0xb
 33558 00c5 3B       		.uleb128 0x3b
 33559 00c6 05       		.uleb128 0x5
 33560 00c7 01       		.uleb128 0x1
 33561 00c8 13       		.uleb128 0x13
 33562 00c9 00       		.byte	0
 33563 00ca 00       		.byte	0
 33564 00cb 12       		.uleb128 0x12
 33565 00cc 0D       		.uleb128 0xd
 33566 00cd 00       		.byte	0
 33567 00ce 03       		.uleb128 0x3
 33568 00cf 08       		.uleb128 0x8
 33569 00d0 3A       		.uleb128 0x3a
 33570 00d1 0B       		.uleb128 0xb
 33571 00d2 3B       		.uleb128 0x3b
 33572 00d3 05       		.uleb128 0x5
 33573 00d4 49       		.uleb128 0x49
 33574 00d5 13       		.uleb128 0x13
 33575 00d6 38       		.uleb128 0x38
 33576 00d7 0B       		.uleb128 0xb
 33577 00d8 00       		.byte	0
 33578 00d9 00       		.byte	0
 33579 00da 13       		.uleb128 0x13
 33580 00db 0D       		.uleb128 0xd
 33581 00dc 00       		.byte	0
 33582 00dd 03       		.uleb128 0x3
 33583 00de 0E       		.uleb128 0xe
 33584 00df 3A       		.uleb128 0x3a
 33585 00e0 0B       		.uleb128 0xb
 33586 00e1 3B       		.uleb128 0x3b
 33587 00e2 05       		.uleb128 0x5
 33588 00e3 49       		.uleb128 0x49
 33589 00e4 13       		.uleb128 0x13
 33590 00e5 38       		.uleb128 0x38
 33591 00e6 0B       		.uleb128 0xb
 33592 00e7 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 716


 33593 00e8 00       		.byte	0
 33594 00e9 14       		.uleb128 0x14
 33595 00ea 13       		.uleb128 0x13
 33596 00eb 01       		.byte	0x1
 33597 00ec 03       		.uleb128 0x3
 33598 00ed 0E       		.uleb128 0xe
 33599 00ee 0B       		.uleb128 0xb
 33600 00ef 05       		.uleb128 0x5
 33601 00f0 3A       		.uleb128 0x3a
 33602 00f1 0B       		.uleb128 0xb
 33603 00f2 3B       		.uleb128 0x3b
 33604 00f3 05       		.uleb128 0x5
 33605 00f4 01       		.uleb128 0x1
 33606 00f5 13       		.uleb128 0x13
 33607 00f6 00       		.byte	0
 33608 00f7 00       		.byte	0
 33609 00f8 15       		.uleb128 0x15
 33610 00f9 0D       		.uleb128 0xd
 33611 00fa 00       		.byte	0
 33612 00fb 03       		.uleb128 0x3
 33613 00fc 08       		.uleb128 0x8
 33614 00fd 3A       		.uleb128 0x3a
 33615 00fe 0B       		.uleb128 0xb
 33616 00ff 3B       		.uleb128 0x3b
 33617 0100 05       		.uleb128 0x5
 33618 0101 49       		.uleb128 0x49
 33619 0102 13       		.uleb128 0x13
 33620 0103 38       		.uleb128 0x38
 33621 0104 05       		.uleb128 0x5
 33622 0105 00       		.byte	0
 33623 0106 00       		.byte	0
 33624 0107 16       		.uleb128 0x16
 33625 0108 0D       		.uleb128 0xd
 33626 0109 00       		.byte	0
 33627 010a 03       		.uleb128 0x3
 33628 010b 0E       		.uleb128 0xe
 33629 010c 3A       		.uleb128 0x3a
 33630 010d 0B       		.uleb128 0xb
 33631 010e 3B       		.uleb128 0x3b
 33632 010f 05       		.uleb128 0x5
 33633 0110 49       		.uleb128 0x49
 33634 0111 13       		.uleb128 0x13
 33635 0112 38       		.uleb128 0x38
 33636 0113 05       		.uleb128 0x5
 33637 0114 00       		.byte	0
 33638 0115 00       		.byte	0
 33639 0116 17       		.uleb128 0x17
 33640 0117 2E       		.uleb128 0x2e
 33641 0118 01       		.byte	0x1
 33642 0119 03       		.uleb128 0x3
 33643 011a 0E       		.uleb128 0xe
 33644 011b 3A       		.uleb128 0x3a
 33645 011c 0B       		.uleb128 0xb
 33646 011d 3B       		.uleb128 0x3b
 33647 011e 05       		.uleb128 0x5
 33648 011f 27       		.uleb128 0x27
 33649 0120 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 717


 33650 0121 49       		.uleb128 0x49
 33651 0122 13       		.uleb128 0x13
 33652 0123 20       		.uleb128 0x20
 33653 0124 0B       		.uleb128 0xb
 33654 0125 01       		.uleb128 0x1
 33655 0126 13       		.uleb128 0x13
 33656 0127 00       		.byte	0
 33657 0128 00       		.byte	0
 33658 0129 18       		.uleb128 0x18
 33659 012a 05       		.uleb128 0x5
 33660 012b 00       		.byte	0
 33661 012c 03       		.uleb128 0x3
 33662 012d 0E       		.uleb128 0xe
 33663 012e 3A       		.uleb128 0x3a
 33664 012f 0B       		.uleb128 0xb
 33665 0130 3B       		.uleb128 0x3b
 33666 0131 05       		.uleb128 0x5
 33667 0132 49       		.uleb128 0x49
 33668 0133 13       		.uleb128 0x13
 33669 0134 00       		.byte	0
 33670 0135 00       		.byte	0
 33671 0136 19       		.uleb128 0x19
 33672 0137 34       		.uleb128 0x34
 33673 0138 00       		.byte	0
 33674 0139 03       		.uleb128 0x3
 33675 013a 0E       		.uleb128 0xe
 33676 013b 3A       		.uleb128 0x3a
 33677 013c 0B       		.uleb128 0xb
 33678 013d 3B       		.uleb128 0x3b
 33679 013e 05       		.uleb128 0x5
 33680 013f 49       		.uleb128 0x49
 33681 0140 13       		.uleb128 0x13
 33682 0141 00       		.byte	0
 33683 0142 00       		.byte	0
 33684 0143 1A       		.uleb128 0x1a
 33685 0144 2E       		.uleb128 0x2e
 33686 0145 01       		.byte	0x1
 33687 0146 3F       		.uleb128 0x3f
 33688 0147 19       		.uleb128 0x19
 33689 0148 03       		.uleb128 0x3
 33690 0149 0E       		.uleb128 0xe
 33691 014a 3A       		.uleb128 0x3a
 33692 014b 0B       		.uleb128 0xb
 33693 014c 3B       		.uleb128 0x3b
 33694 014d 0B       		.uleb128 0xb
 33695 014e 27       		.uleb128 0x27
 33696 014f 19       		.uleb128 0x19
 33697 0150 11       		.uleb128 0x11
 33698 0151 01       		.uleb128 0x1
 33699 0152 12       		.uleb128 0x12
 33700 0153 06       		.uleb128 0x6
 33701 0154 40       		.uleb128 0x40
 33702 0155 18       		.uleb128 0x18
 33703 0156 9642     		.uleb128 0x2116
 33704 0158 19       		.uleb128 0x19
 33705 0159 01       		.uleb128 0x1
 33706 015a 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 718


 33707 015b 00       		.byte	0
 33708 015c 00       		.byte	0
 33709 015d 1B       		.uleb128 0x1b
 33710 015e 34       		.uleb128 0x34
 33711 015f 00       		.byte	0
 33712 0160 03       		.uleb128 0x3
 33713 0161 0E       		.uleb128 0xe
 33714 0162 3A       		.uleb128 0x3a
 33715 0163 0B       		.uleb128 0xb
 33716 0164 3B       		.uleb128 0x3b
 33717 0165 0B       		.uleb128 0xb
 33718 0166 49       		.uleb128 0x49
 33719 0167 13       		.uleb128 0x13
 33720 0168 02       		.uleb128 0x2
 33721 0169 18       		.uleb128 0x18
 33722 016a 00       		.byte	0
 33723 016b 00       		.byte	0
 33724 016c 1C       		.uleb128 0x1c
 33725 016d 1D       		.uleb128 0x1d
 33726 016e 01       		.byte	0x1
 33727 016f 31       		.uleb128 0x31
 33728 0170 13       		.uleb128 0x13
 33729 0171 11       		.uleb128 0x11
 33730 0172 01       		.uleb128 0x1
 33731 0173 12       		.uleb128 0x12
 33732 0174 06       		.uleb128 0x6
 33733 0175 58       		.uleb128 0x58
 33734 0176 0B       		.uleb128 0xb
 33735 0177 59       		.uleb128 0x59
 33736 0178 0B       		.uleb128 0xb
 33737 0179 01       		.uleb128 0x1
 33738 017a 13       		.uleb128 0x13
 33739 017b 00       		.byte	0
 33740 017c 00       		.byte	0
 33741 017d 1D       		.uleb128 0x1d
 33742 017e 05       		.uleb128 0x5
 33743 017f 00       		.byte	0
 33744 0180 31       		.uleb128 0x31
 33745 0181 13       		.uleb128 0x13
 33746 0182 02       		.uleb128 0x2
 33747 0183 18       		.uleb128 0x18
 33748 0184 00       		.byte	0
 33749 0185 00       		.byte	0
 33750 0186 1E       		.uleb128 0x1e
 33751 0187 0B       		.uleb128 0xb
 33752 0188 01       		.byte	0x1
 33753 0189 11       		.uleb128 0x11
 33754 018a 01       		.uleb128 0x1
 33755 018b 12       		.uleb128 0x12
 33756 018c 06       		.uleb128 0x6
 33757 018d 00       		.byte	0
 33758 018e 00       		.byte	0
 33759 018f 1F       		.uleb128 0x1f
 33760 0190 34       		.uleb128 0x34
 33761 0191 00       		.byte	0
 33762 0192 31       		.uleb128 0x31
 33763 0193 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 719


 33764 0194 02       		.uleb128 0x2
 33765 0195 18       		.uleb128 0x18
 33766 0196 00       		.byte	0
 33767 0197 00       		.byte	0
 33768 0198 20       		.uleb128 0x20
 33769 0199 1D       		.uleb128 0x1d
 33770 019a 01       		.byte	0x1
 33771 019b 31       		.uleb128 0x31
 33772 019c 13       		.uleb128 0x13
 33773 019d 11       		.uleb128 0x11
 33774 019e 01       		.uleb128 0x1
 33775 019f 12       		.uleb128 0x12
 33776 01a0 06       		.uleb128 0x6
 33777 01a1 58       		.uleb128 0x58
 33778 01a2 0B       		.uleb128 0xb
 33779 01a3 59       		.uleb128 0x59
 33780 01a4 05       		.uleb128 0x5
 33781 01a5 01       		.uleb128 0x1
 33782 01a6 13       		.uleb128 0x13
 33783 01a7 00       		.byte	0
 33784 01a8 00       		.byte	0
 33785 01a9 21       		.uleb128 0x21
 33786 01aa 1D       		.uleb128 0x1d
 33787 01ab 01       		.byte	0x1
 33788 01ac 31       		.uleb128 0x31
 33789 01ad 13       		.uleb128 0x13
 33790 01ae 11       		.uleb128 0x11
 33791 01af 01       		.uleb128 0x1
 33792 01b0 12       		.uleb128 0x12
 33793 01b1 06       		.uleb128 0x6
 33794 01b2 58       		.uleb128 0x58
 33795 01b3 0B       		.uleb128 0xb
 33796 01b4 59       		.uleb128 0x59
 33797 01b5 05       		.uleb128 0x5
 33798 01b6 00       		.byte	0
 33799 01b7 00       		.byte	0
 33800 01b8 22       		.uleb128 0x22
 33801 01b9 2E       		.uleb128 0x2e
 33802 01ba 01       		.byte	0x1
 33803 01bb 3F       		.uleb128 0x3f
 33804 01bc 19       		.uleb128 0x19
 33805 01bd 03       		.uleb128 0x3
 33806 01be 0E       		.uleb128 0xe
 33807 01bf 3A       		.uleb128 0x3a
 33808 01c0 0B       		.uleb128 0xb
 33809 01c1 3B       		.uleb128 0x3b
 33810 01c2 05       		.uleb128 0x5
 33811 01c3 27       		.uleb128 0x27
 33812 01c4 19       		.uleb128 0x19
 33813 01c5 11       		.uleb128 0x11
 33814 01c6 01       		.uleb128 0x1
 33815 01c7 12       		.uleb128 0x12
 33816 01c8 06       		.uleb128 0x6
 33817 01c9 40       		.uleb128 0x40
 33818 01ca 18       		.uleb128 0x18
 33819 01cb 9642     		.uleb128 0x2116
 33820 01cd 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 720


 33821 01ce 01       		.uleb128 0x1
 33822 01cf 13       		.uleb128 0x13
 33823 01d0 00       		.byte	0
 33824 01d1 00       		.byte	0
 33825 01d2 23       		.uleb128 0x23
 33826 01d3 34       		.uleb128 0x34
 33827 01d4 00       		.byte	0
 33828 01d5 03       		.uleb128 0x3
 33829 01d6 0E       		.uleb128 0xe
 33830 01d7 3A       		.uleb128 0x3a
 33831 01d8 0B       		.uleb128 0xb
 33832 01d9 3B       		.uleb128 0x3b
 33833 01da 05       		.uleb128 0x5
 33834 01db 49       		.uleb128 0x49
 33835 01dc 13       		.uleb128 0x13
 33836 01dd 02       		.uleb128 0x2
 33837 01de 18       		.uleb128 0x18
 33838 01df 00       		.byte	0
 33839 01e0 00       		.byte	0
 33840 01e1 24       		.uleb128 0x24
 33841 01e2 21       		.uleb128 0x21
 33842 01e3 00       		.byte	0
 33843 01e4 49       		.uleb128 0x49
 33844 01e5 13       		.uleb128 0x13
 33845 01e6 2F       		.uleb128 0x2f
 33846 01e7 05       		.uleb128 0x5
 33847 01e8 00       		.byte	0
 33848 01e9 00       		.byte	0
 33849 01ea 25       		.uleb128 0x25
 33850 01eb 05       		.uleb128 0x5
 33851 01ec 00       		.byte	0
 33852 01ed 03       		.uleb128 0x3
 33853 01ee 0E       		.uleb128 0xe
 33854 01ef 3A       		.uleb128 0x3a
 33855 01f0 0B       		.uleb128 0xb
 33856 01f1 3B       		.uleb128 0x3b
 33857 01f2 05       		.uleb128 0x5
 33858 01f3 49       		.uleb128 0x49
 33859 01f4 13       		.uleb128 0x13
 33860 01f5 02       		.uleb128 0x2
 33861 01f6 18       		.uleb128 0x18
 33862 01f7 00       		.byte	0
 33863 01f8 00       		.byte	0
 33864 01f9 26       		.uleb128 0x26
 33865 01fa 34       		.uleb128 0x34
 33866 01fb 00       		.byte	0
 33867 01fc 03       		.uleb128 0x3
 33868 01fd 08       		.uleb128 0x8
 33869 01fe 3A       		.uleb128 0x3a
 33870 01ff 0B       		.uleb128 0xb
 33871 0200 3B       		.uleb128 0x3b
 33872 0201 05       		.uleb128 0x5
 33873 0202 49       		.uleb128 0x49
 33874 0203 13       		.uleb128 0x13
 33875 0204 02       		.uleb128 0x2
 33876 0205 18       		.uleb128 0x18
 33877 0206 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 721


 33878 0207 00       		.byte	0
 33879 0208 27       		.uleb128 0x27
 33880 0209 2E       		.uleb128 0x2e
 33881 020a 01       		.byte	0x1
 33882 020b 3F       		.uleb128 0x3f
 33883 020c 19       		.uleb128 0x19
 33884 020d 03       		.uleb128 0x3
 33885 020e 0E       		.uleb128 0xe
 33886 020f 3A       		.uleb128 0x3a
 33887 0210 0B       		.uleb128 0xb
 33888 0211 3B       		.uleb128 0x3b
 33889 0212 05       		.uleb128 0x5
 33890 0213 11       		.uleb128 0x11
 33891 0214 01       		.uleb128 0x1
 33892 0215 12       		.uleb128 0x12
 33893 0216 06       		.uleb128 0x6
 33894 0217 40       		.uleb128 0x40
 33895 0218 18       		.uleb128 0x18
 33896 0219 9642     		.uleb128 0x2116
 33897 021b 19       		.uleb128 0x19
 33898 021c 01       		.uleb128 0x1
 33899 021d 13       		.uleb128 0x13
 33900 021e 00       		.byte	0
 33901 021f 00       		.byte	0
 33902 0220 28       		.uleb128 0x28
 33903 0221 2E       		.uleb128 0x2e
 33904 0222 01       		.byte	0x1
 33905 0223 3F       		.uleb128 0x3f
 33906 0224 19       		.uleb128 0x19
 33907 0225 03       		.uleb128 0x3
 33908 0226 0E       		.uleb128 0xe
 33909 0227 3A       		.uleb128 0x3a
 33910 0228 0B       		.uleb128 0xb
 33911 0229 3B       		.uleb128 0x3b
 33912 022a 05       		.uleb128 0x5
 33913 022b 27       		.uleb128 0x27
 33914 022c 19       		.uleb128 0x19
 33915 022d 11       		.uleb128 0x11
 33916 022e 01       		.uleb128 0x1
 33917 022f 12       		.uleb128 0x12
 33918 0230 06       		.uleb128 0x6
 33919 0231 40       		.uleb128 0x40
 33920 0232 18       		.uleb128 0x18
 33921 0233 9742     		.uleb128 0x2117
 33922 0235 19       		.uleb128 0x19
 33923 0236 01       		.uleb128 0x1
 33924 0237 13       		.uleb128 0x13
 33925 0238 00       		.byte	0
 33926 0239 00       		.byte	0
 33927 023a 29       		.uleb128 0x29
 33928 023b 05       		.uleb128 0x5
 33929 023c 00       		.byte	0
 33930 023d 03       		.uleb128 0x3
 33931 023e 08       		.uleb128 0x8
 33932 023f 3A       		.uleb128 0x3a
 33933 0240 0B       		.uleb128 0xb
 33934 0241 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 722


 33935 0242 05       		.uleb128 0x5
 33936 0243 49       		.uleb128 0x49
 33937 0244 13       		.uleb128 0x13
 33938 0245 02       		.uleb128 0x2
 33939 0246 18       		.uleb128 0x18
 33940 0247 00       		.byte	0
 33941 0248 00       		.byte	0
 33942 0249 2A       		.uleb128 0x2a
 33943 024a 2E       		.uleb128 0x2e
 33944 024b 01       		.byte	0x1
 33945 024c 3F       		.uleb128 0x3f
 33946 024d 19       		.uleb128 0x19
 33947 024e 03       		.uleb128 0x3
 33948 024f 0E       		.uleb128 0xe
 33949 0250 3A       		.uleb128 0x3a
 33950 0251 0B       		.uleb128 0xb
 33951 0252 3B       		.uleb128 0x3b
 33952 0253 05       		.uleb128 0x5
 33953 0254 27       		.uleb128 0x27
 33954 0255 19       		.uleb128 0x19
 33955 0256 49       		.uleb128 0x49
 33956 0257 13       		.uleb128 0x13
 33957 0258 11       		.uleb128 0x11
 33958 0259 01       		.uleb128 0x1
 33959 025a 12       		.uleb128 0x12
 33960 025b 06       		.uleb128 0x6
 33961 025c 40       		.uleb128 0x40
 33962 025d 18       		.uleb128 0x18
 33963 025e 9742     		.uleb128 0x2117
 33964 0260 19       		.uleb128 0x19
 33965 0261 01       		.uleb128 0x1
 33966 0262 13       		.uleb128 0x13
 33967 0263 00       		.byte	0
 33968 0264 00       		.byte	0
 33969 0265 2B       		.uleb128 0x2b
 33970 0266 2E       		.uleb128 0x2e
 33971 0267 01       		.byte	0x1
 33972 0268 3F       		.uleb128 0x3f
 33973 0269 19       		.uleb128 0x19
 33974 026a 03       		.uleb128 0x3
 33975 026b 0E       		.uleb128 0xe
 33976 026c 3A       		.uleb128 0x3a
 33977 026d 0B       		.uleb128 0xb
 33978 026e 3B       		.uleb128 0x3b
 33979 026f 05       		.uleb128 0x5
 33980 0270 27       		.uleb128 0x27
 33981 0271 19       		.uleb128 0x19
 33982 0272 49       		.uleb128 0x49
 33983 0273 13       		.uleb128 0x13
 33984 0274 11       		.uleb128 0x11
 33985 0275 01       		.uleb128 0x1
 33986 0276 12       		.uleb128 0x12
 33987 0277 06       		.uleb128 0x6
 33988 0278 40       		.uleb128 0x40
 33989 0279 18       		.uleb128 0x18
 33990 027a 9642     		.uleb128 0x2116
 33991 027c 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 723


 33992 027d 01       		.uleb128 0x1
 33993 027e 13       		.uleb128 0x13
 33994 027f 00       		.byte	0
 33995 0280 00       		.byte	0
 33996 0281 2C       		.uleb128 0x2c
 33997 0282 2E       		.uleb128 0x2e
 33998 0283 00       		.byte	0
 33999 0284 3F       		.uleb128 0x3f
 34000 0285 19       		.uleb128 0x19
 34001 0286 03       		.uleb128 0x3
 34002 0287 0E       		.uleb128 0xe
 34003 0288 3A       		.uleb128 0x3a
 34004 0289 0B       		.uleb128 0xb
 34005 028a 3B       		.uleb128 0x3b
 34006 028b 05       		.uleb128 0x5
 34007 028c 27       		.uleb128 0x27
 34008 028d 19       		.uleb128 0x19
 34009 028e 11       		.uleb128 0x11
 34010 028f 01       		.uleb128 0x1
 34011 0290 12       		.uleb128 0x12
 34012 0291 06       		.uleb128 0x6
 34013 0292 40       		.uleb128 0x40
 34014 0293 18       		.uleb128 0x18
 34015 0294 9742     		.uleb128 0x2117
 34016 0296 19       		.uleb128 0x19
 34017 0297 00       		.byte	0
 34018 0298 00       		.byte	0
 34019 0299 2D       		.uleb128 0x2d
 34020 029a 2E       		.uleb128 0x2e
 34021 029b 01       		.byte	0x1
 34022 029c 3F       		.uleb128 0x3f
 34023 029d 19       		.uleb128 0x19
 34024 029e 03       		.uleb128 0x3
 34025 029f 0E       		.uleb128 0xe
 34026 02a0 3A       		.uleb128 0x3a
 34027 02a1 0B       		.uleb128 0xb
 34028 02a2 3B       		.uleb128 0x3b
 34029 02a3 05       		.uleb128 0x5
 34030 02a4 11       		.uleb128 0x11
 34031 02a5 01       		.uleb128 0x1
 34032 02a6 12       		.uleb128 0x12
 34033 02a7 06       		.uleb128 0x6
 34034 02a8 40       		.uleb128 0x40
 34035 02a9 18       		.uleb128 0x18
 34036 02aa 9742     		.uleb128 0x2117
 34037 02ac 19       		.uleb128 0x19
 34038 02ad 01       		.uleb128 0x1
 34039 02ae 13       		.uleb128 0x13
 34040 02af 00       		.byte	0
 34041 02b0 00       		.byte	0
 34042 02b1 2E       		.uleb128 0x2e
 34043 02b2 0B       		.uleb128 0xb
 34044 02b3 01       		.byte	0x1
 34045 02b4 11       		.uleb128 0x11
 34046 02b5 01       		.uleb128 0x1
 34047 02b6 12       		.uleb128 0x12
 34048 02b7 06       		.uleb128 0x6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 724


 34049 02b8 01       		.uleb128 0x1
 34050 02b9 13       		.uleb128 0x13
 34051 02ba 00       		.byte	0
 34052 02bb 00       		.byte	0
 34053 02bc 2F       		.uleb128 0x2f
 34054 02bd 2E       		.uleb128 0x2e
 34055 02be 01       		.byte	0x1
 34056 02bf 3F       		.uleb128 0x3f
 34057 02c0 19       		.uleb128 0x19
 34058 02c1 03       		.uleb128 0x3
 34059 02c2 0E       		.uleb128 0xe
 34060 02c3 3A       		.uleb128 0x3a
 34061 02c4 0B       		.uleb128 0xb
 34062 02c5 3B       		.uleb128 0x3b
 34063 02c6 05       		.uleb128 0x5
 34064 02c7 49       		.uleb128 0x49
 34065 02c8 13       		.uleb128 0x13
 34066 02c9 11       		.uleb128 0x11
 34067 02ca 01       		.uleb128 0x1
 34068 02cb 12       		.uleb128 0x12
 34069 02cc 06       		.uleb128 0x6
 34070 02cd 40       		.uleb128 0x40
 34071 02ce 18       		.uleb128 0x18
 34072 02cf 9642     		.uleb128 0x2116
 34073 02d1 19       		.uleb128 0x19
 34074 02d2 01       		.uleb128 0x1
 34075 02d3 13       		.uleb128 0x13
 34076 02d4 00       		.byte	0
 34077 02d5 00       		.byte	0
 34078 02d6 30       		.uleb128 0x30
 34079 02d7 2E       		.uleb128 0x2e
 34080 02d8 00       		.byte	0
 34081 02d9 3F       		.uleb128 0x3f
 34082 02da 19       		.uleb128 0x19
 34083 02db 03       		.uleb128 0x3
 34084 02dc 0E       		.uleb128 0xe
 34085 02dd 3A       		.uleb128 0x3a
 34086 02de 0B       		.uleb128 0xb
 34087 02df 3B       		.uleb128 0x3b
 34088 02e0 05       		.uleb128 0x5
 34089 02e1 11       		.uleb128 0x11
 34090 02e2 01       		.uleb128 0x1
 34091 02e3 12       		.uleb128 0x12
 34092 02e4 06       		.uleb128 0x6
 34093 02e5 40       		.uleb128 0x40
 34094 02e6 18       		.uleb128 0x18
 34095 02e7 9642     		.uleb128 0x2116
 34096 02e9 19       		.uleb128 0x19
 34097 02ea 00       		.byte	0
 34098 02eb 00       		.byte	0
 34099 02ec 31       		.uleb128 0x31
 34100 02ed 2E       		.uleb128 0x2e
 34101 02ee 01       		.byte	0x1
 34102 02ef 3F       		.uleb128 0x3f
 34103 02f0 19       		.uleb128 0x19
 34104 02f1 03       		.uleb128 0x3
 34105 02f2 0E       		.uleb128 0xe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 725


 34106 02f3 3A       		.uleb128 0x3a
 34107 02f4 0B       		.uleb128 0xb
 34108 02f5 3B       		.uleb128 0x3b
 34109 02f6 05       		.uleb128 0x5
 34110 02f7 49       		.uleb128 0x49
 34111 02f8 13       		.uleb128 0x13
 34112 02f9 11       		.uleb128 0x11
 34113 02fa 01       		.uleb128 0x1
 34114 02fb 12       		.uleb128 0x12
 34115 02fc 06       		.uleb128 0x6
 34116 02fd 40       		.uleb128 0x40
 34117 02fe 18       		.uleb128 0x18
 34118 02ff 9742     		.uleb128 0x2117
 34119 0301 19       		.uleb128 0x19
 34120 0302 01       		.uleb128 0x1
 34121 0303 13       		.uleb128 0x13
 34122 0304 00       		.byte	0
 34123 0305 00       		.byte	0
 34124 0306 32       		.uleb128 0x32
 34125 0307 2E       		.uleb128 0x2e
 34126 0308 00       		.byte	0
 34127 0309 3F       		.uleb128 0x3f
 34128 030a 19       		.uleb128 0x19
 34129 030b 03       		.uleb128 0x3
 34130 030c 0E       		.uleb128 0xe
 34131 030d 3A       		.uleb128 0x3a
 34132 030e 0B       		.uleb128 0xb
 34133 030f 3B       		.uleb128 0x3b
 34134 0310 05       		.uleb128 0x5
 34135 0311 11       		.uleb128 0x11
 34136 0312 01       		.uleb128 0x1
 34137 0313 12       		.uleb128 0x12
 34138 0314 06       		.uleb128 0x6
 34139 0315 40       		.uleb128 0x40
 34140 0316 18       		.uleb128 0x18
 34141 0317 9742     		.uleb128 0x2117
 34142 0319 19       		.uleb128 0x19
 34143 031a 00       		.byte	0
 34144 031b 00       		.byte	0
 34145 031c 33       		.uleb128 0x33
 34146 031d 34       		.uleb128 0x34
 34147 031e 00       		.byte	0
 34148 031f 03       		.uleb128 0x3
 34149 0320 0E       		.uleb128 0xe
 34150 0321 3A       		.uleb128 0x3a
 34151 0322 0B       		.uleb128 0xb
 34152 0323 3B       		.uleb128 0x3b
 34153 0324 05       		.uleb128 0x5
 34154 0325 49       		.uleb128 0x49
 34155 0326 13       		.uleb128 0x13
 34156 0327 3F       		.uleb128 0x3f
 34157 0328 19       		.uleb128 0x19
 34158 0329 3C       		.uleb128 0x3c
 34159 032a 19       		.uleb128 0x19
 34160 032b 00       		.byte	0
 34161 032c 00       		.byte	0
 34162 032d 34       		.uleb128 0x34
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 726


 34163 032e 34       		.uleb128 0x34
 34164 032f 00       		.byte	0
 34165 0330 03       		.uleb128 0x3
 34166 0331 0E       		.uleb128 0xe
 34167 0332 3A       		.uleb128 0x3a
 34168 0333 0B       		.uleb128 0xb
 34169 0334 3B       		.uleb128 0x3b
 34170 0335 0B       		.uleb128 0xb
 34171 0336 49       		.uleb128 0x49
 34172 0337 13       		.uleb128 0x13
 34173 0338 3F       		.uleb128 0x3f
 34174 0339 19       		.uleb128 0x19
 34175 033a 02       		.uleb128 0x2
 34176 033b 18       		.uleb128 0x18
 34177 033c 00       		.byte	0
 34178 033d 00       		.byte	0
 34179 033e 00       		.byte	0
 34180              		.section	.debug_aranges,"",%progbits
 34181 0000 F4010000 		.4byte	0x1f4
 34182 0004 0200     		.2byte	0x2
 34183 0006 00000000 		.4byte	.Ldebug_info0
 34184 000a 04       		.byte	0x4
 34185 000b 00       		.byte	0
 34186 000c 0000     		.2byte	0
 34187 000e 0000     		.2byte	0
 34188 0010 00000000 		.4byte	.LFB64
 34189 0014 70060000 		.4byte	.LFE64-.LFB64
 34190 0018 00000000 		.4byte	.LFB65
 34191 001c 22000000 		.4byte	.LFE65-.LFB65
 34192 0020 00000000 		.4byte	.LFB66
 34193 0024 64010000 		.4byte	.LFE66-.LFB66
 34194 0028 00000000 		.4byte	.LFB67
 34195 002c A2320000 		.4byte	.LFE67-.LFB67
 34196 0030 00000000 		.4byte	.LFB68
 34197 0034 3C190000 		.4byte	.LFE68-.LFB68
 34198 0038 00000000 		.4byte	.LFB69
 34199 003c DC140000 		.4byte	.LFE69-.LFB69
 34200 0040 00000000 		.4byte	.LFB70
 34201 0044 F40D0000 		.4byte	.LFE70-.LFB70
 34202 0048 00000000 		.4byte	.LFB71
 34203 004c 90000000 		.4byte	.LFE71-.LFB71
 34204 0050 00000000 		.4byte	.LFB72
 34205 0054 98210000 		.4byte	.LFE72-.LFB72
 34206 0058 00000000 		.4byte	.LFB73
 34207 005c 90040000 		.4byte	.LFE73-.LFB73
 34208 0060 00000000 		.4byte	.LFB74
 34209 0064 5C020000 		.4byte	.LFE74-.LFB74
 34210 0068 00000000 		.4byte	.LFB75
 34211 006c 80120000 		.4byte	.LFE75-.LFB75
 34212 0070 00000000 		.4byte	.LFB76
 34213 0074 DC000000 		.4byte	.LFE76-.LFB76
 34214 0078 00000000 		.4byte	.LFB77
 34215 007c 80010000 		.4byte	.LFE77-.LFB77
 34216 0080 00000000 		.4byte	.LFB78
 34217 0084 28000000 		.4byte	.LFE78-.LFB78
 34218 0088 00000000 		.4byte	.LFB79
 34219 008c F0000000 		.4byte	.LFE79-.LFB79
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 727


 34220 0090 00000000 		.4byte	.LFB80
 34221 0094 74030000 		.4byte	.LFE80-.LFB80
 34222 0098 00000000 		.4byte	.LFB81
 34223 009c 84000000 		.4byte	.LFE81-.LFB81
 34224 00a0 00000000 		.4byte	.LFB82
 34225 00a4 88000000 		.4byte	.LFE82-.LFB82
 34226 00a8 00000000 		.4byte	.LFB83
 34227 00ac A0000000 		.4byte	.LFE83-.LFB83
 34228 00b0 00000000 		.4byte	.LFB84
 34229 00b4 3E000000 		.4byte	.LFE84-.LFB84
 34230 00b8 00000000 		.4byte	.LFB85
 34231 00bc 2E000000 		.4byte	.LFE85-.LFB85
 34232 00c0 00000000 		.4byte	.LFB86
 34233 00c4 98000000 		.4byte	.LFE86-.LFB86
 34234 00c8 00000000 		.4byte	.LFB87
 34235 00cc 80000000 		.4byte	.LFE87-.LFB87
 34236 00d0 00000000 		.4byte	.LFB88
 34237 00d4 5C000000 		.4byte	.LFE88-.LFB88
 34238 00d8 00000000 		.4byte	.LFB89
 34239 00dc 24060000 		.4byte	.LFE89-.LFB89
 34240 00e0 00000000 		.4byte	.LFB90
 34241 00e4 40020000 		.4byte	.LFE90-.LFB90
 34242 00e8 00000000 		.4byte	.LFB91
 34243 00ec 28000000 		.4byte	.LFE91-.LFB91
 34244 00f0 00000000 		.4byte	.LFB92
 34245 00f4 78000000 		.4byte	.LFE92-.LFB92
 34246 00f8 00000000 		.4byte	.LFB93
 34247 00fc B0000000 		.4byte	.LFE93-.LFB93
 34248 0100 00000000 		.4byte	.LFB94
 34249 0104 28010000 		.4byte	.LFE94-.LFB94
 34250 0108 00000000 		.4byte	.LFB95
 34251 010c B8000000 		.4byte	.LFE95-.LFB95
 34252 0110 00000000 		.4byte	.LFB96
 34253 0114 B8000000 		.4byte	.LFE96-.LFB96
 34254 0118 00000000 		.4byte	.LFB97
 34255 011c 5C000000 		.4byte	.LFE97-.LFB97
 34256 0120 00000000 		.4byte	.LFB98
 34257 0124 44020000 		.4byte	.LFE98-.LFB98
 34258 0128 00000000 		.4byte	.LFB99
 34259 012c BC000000 		.4byte	.LFE99-.LFB99
 34260 0130 00000000 		.4byte	.LFB100
 34261 0134 5C000000 		.4byte	.LFE100-.LFB100
 34262 0138 00000000 		.4byte	.LFB101
 34263 013c 38010000 		.4byte	.LFE101-.LFB101
 34264 0140 00000000 		.4byte	.LFB102
 34265 0144 EC000000 		.4byte	.LFE102-.LFB102
 34266 0148 00000000 		.4byte	.LFB103
 34267 014c 64000000 		.4byte	.LFE103-.LFB103
 34268 0150 00000000 		.4byte	.LFB104
 34269 0154 A8000000 		.4byte	.LFE104-.LFB104
 34270 0158 00000000 		.4byte	.LFB105
 34271 015c 34000000 		.4byte	.LFE105-.LFB105
 34272 0160 00000000 		.4byte	.LFB106
 34273 0164 20000000 		.4byte	.LFE106-.LFB106
 34274 0168 00000000 		.4byte	.LFB107
 34275 016c A0000000 		.4byte	.LFE107-.LFB107
 34276 0170 00000000 		.4byte	.LFB108
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 728


 34277 0174 BC010000 		.4byte	.LFE108-.LFB108
 34278 0178 00000000 		.4byte	.LFB109
 34279 017c 60000000 		.4byte	.LFE109-.LFB109
 34280 0180 00000000 		.4byte	.LFB110
 34281 0184 98050000 		.4byte	.LFE110-.LFB110
 34282 0188 00000000 		.4byte	.LFB111
 34283 018c 8C000000 		.4byte	.LFE111-.LFB111
 34284 0190 00000000 		.4byte	.LFB112
 34285 0194 EC000000 		.4byte	.LFE112-.LFB112
 34286 0198 00000000 		.4byte	.LFB113
 34287 019c 5C000000 		.4byte	.LFE113-.LFB113
 34288 01a0 00000000 		.4byte	.LFB114
 34289 01a4 C0000000 		.4byte	.LFE114-.LFB114
 34290 01a8 00000000 		.4byte	.LFB115
 34291 01ac 54010000 		.4byte	.LFE115-.LFB115
 34292 01b0 00000000 		.4byte	.LFB116
 34293 01b4 B0000000 		.4byte	.LFE116-.LFB116
 34294 01b8 00000000 		.4byte	.LFB117
 34295 01bc 12000000 		.4byte	.LFE117-.LFB117
 34296 01c0 00000000 		.4byte	.LFB118
 34297 01c4 64010000 		.4byte	.LFE118-.LFB118
 34298 01c8 00000000 		.4byte	.LFB119
 34299 01cc 12000000 		.4byte	.LFE119-.LFB119
 34300 01d0 00000000 		.4byte	.LFB120
 34301 01d4 1A000000 		.4byte	.LFE120-.LFB120
 34302 01d8 00000000 		.4byte	.LFB121
 34303 01dc 0C000000 		.4byte	.LFE121-.LFB121
 34304 01e0 00000000 		.4byte	.LFB122
 34305 01e4 0C000000 		.4byte	.LFE122-.LFB122
 34306 01e8 00000000 		.4byte	.LFB123
 34307 01ec 68000000 		.4byte	.LFE123-.LFB123
 34308 01f0 00000000 		.4byte	0
 34309 01f4 00000000 		.4byte	0
 34310              		.section	.debug_ranges,"",%progbits
 34311              	.Ldebug_ranges0:
 34312 0000 00000000 		.4byte	.LFB64
 34313 0004 70060000 		.4byte	.LFE64
 34314 0008 00000000 		.4byte	.LFB65
 34315 000c 22000000 		.4byte	.LFE65
 34316 0010 00000000 		.4byte	.LFB66
 34317 0014 64010000 		.4byte	.LFE66
 34318 0018 00000000 		.4byte	.LFB67
 34319 001c A2320000 		.4byte	.LFE67
 34320 0020 00000000 		.4byte	.LFB68
 34321 0024 3C190000 		.4byte	.LFE68
 34322 0028 00000000 		.4byte	.LFB69
 34323 002c DC140000 		.4byte	.LFE69
 34324 0030 00000000 		.4byte	.LFB70
 34325 0034 F40D0000 		.4byte	.LFE70
 34326 0038 00000000 		.4byte	.LFB71
 34327 003c 90000000 		.4byte	.LFE71
 34328 0040 00000000 		.4byte	.LFB72
 34329 0044 98210000 		.4byte	.LFE72
 34330 0048 00000000 		.4byte	.LFB73
 34331 004c 90040000 		.4byte	.LFE73
 34332 0050 00000000 		.4byte	.LFB74
 34333 0054 5C020000 		.4byte	.LFE74
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 729


 34334 0058 00000000 		.4byte	.LFB75
 34335 005c 80120000 		.4byte	.LFE75
 34336 0060 00000000 		.4byte	.LFB76
 34337 0064 DC000000 		.4byte	.LFE76
 34338 0068 00000000 		.4byte	.LFB77
 34339 006c 80010000 		.4byte	.LFE77
 34340 0070 00000000 		.4byte	.LFB78
 34341 0074 28000000 		.4byte	.LFE78
 34342 0078 00000000 		.4byte	.LFB79
 34343 007c F0000000 		.4byte	.LFE79
 34344 0080 00000000 		.4byte	.LFB80
 34345 0084 74030000 		.4byte	.LFE80
 34346 0088 00000000 		.4byte	.LFB81
 34347 008c 84000000 		.4byte	.LFE81
 34348 0090 00000000 		.4byte	.LFB82
 34349 0094 88000000 		.4byte	.LFE82
 34350 0098 00000000 		.4byte	.LFB83
 34351 009c A0000000 		.4byte	.LFE83
 34352 00a0 00000000 		.4byte	.LFB84
 34353 00a4 3E000000 		.4byte	.LFE84
 34354 00a8 00000000 		.4byte	.LFB85
 34355 00ac 2E000000 		.4byte	.LFE85
 34356 00b0 00000000 		.4byte	.LFB86
 34357 00b4 98000000 		.4byte	.LFE86
 34358 00b8 00000000 		.4byte	.LFB87
 34359 00bc 80000000 		.4byte	.LFE87
 34360 00c0 00000000 		.4byte	.LFB88
 34361 00c4 5C000000 		.4byte	.LFE88
 34362 00c8 00000000 		.4byte	.LFB89
 34363 00cc 24060000 		.4byte	.LFE89
 34364 00d0 00000000 		.4byte	.LFB90
 34365 00d4 40020000 		.4byte	.LFE90
 34366 00d8 00000000 		.4byte	.LFB91
 34367 00dc 28000000 		.4byte	.LFE91
 34368 00e0 00000000 		.4byte	.LFB92
 34369 00e4 78000000 		.4byte	.LFE92
 34370 00e8 00000000 		.4byte	.LFB93
 34371 00ec B0000000 		.4byte	.LFE93
 34372 00f0 00000000 		.4byte	.LFB94
 34373 00f4 28010000 		.4byte	.LFE94
 34374 00f8 00000000 		.4byte	.LFB95
 34375 00fc B8000000 		.4byte	.LFE95
 34376 0100 00000000 		.4byte	.LFB96
 34377 0104 B8000000 		.4byte	.LFE96
 34378 0108 00000000 		.4byte	.LFB97
 34379 010c 5C000000 		.4byte	.LFE97
 34380 0110 00000000 		.4byte	.LFB98
 34381 0114 44020000 		.4byte	.LFE98
 34382 0118 00000000 		.4byte	.LFB99
 34383 011c BC000000 		.4byte	.LFE99
 34384 0120 00000000 		.4byte	.LFB100
 34385 0124 5C000000 		.4byte	.LFE100
 34386 0128 00000000 		.4byte	.LFB101
 34387 012c 38010000 		.4byte	.LFE101
 34388 0130 00000000 		.4byte	.LFB102
 34389 0134 EC000000 		.4byte	.LFE102
 34390 0138 00000000 		.4byte	.LFB103
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 730


 34391 013c 64000000 		.4byte	.LFE103
 34392 0140 00000000 		.4byte	.LFB104
 34393 0144 A8000000 		.4byte	.LFE104
 34394 0148 00000000 		.4byte	.LFB105
 34395 014c 34000000 		.4byte	.LFE105
 34396 0150 00000000 		.4byte	.LFB106
 34397 0154 20000000 		.4byte	.LFE106
 34398 0158 00000000 		.4byte	.LFB107
 34399 015c A0000000 		.4byte	.LFE107
 34400 0160 00000000 		.4byte	.LFB108
 34401 0164 BC010000 		.4byte	.LFE108
 34402 0168 00000000 		.4byte	.LFB109
 34403 016c 60000000 		.4byte	.LFE109
 34404 0170 00000000 		.4byte	.LFB110
 34405 0174 98050000 		.4byte	.LFE110
 34406 0178 00000000 		.4byte	.LFB111
 34407 017c 8C000000 		.4byte	.LFE111
 34408 0180 00000000 		.4byte	.LFB112
 34409 0184 EC000000 		.4byte	.LFE112
 34410 0188 00000000 		.4byte	.LFB113
 34411 018c 5C000000 		.4byte	.LFE113
 34412 0190 00000000 		.4byte	.LFB114
 34413 0194 C0000000 		.4byte	.LFE114
 34414 0198 00000000 		.4byte	.LFB115
 34415 019c 54010000 		.4byte	.LFE115
 34416 01a0 00000000 		.4byte	.LFB116
 34417 01a4 B0000000 		.4byte	.LFE116
 34418 01a8 00000000 		.4byte	.LFB117
 34419 01ac 12000000 		.4byte	.LFE117
 34420 01b0 00000000 		.4byte	.LFB118
 34421 01b4 64010000 		.4byte	.LFE118
 34422 01b8 00000000 		.4byte	.LFB119
 34423 01bc 12000000 		.4byte	.LFE119
 34424 01c0 00000000 		.4byte	.LFB120
 34425 01c4 1A000000 		.4byte	.LFE120
 34426 01c8 00000000 		.4byte	.LFB121
 34427 01cc 0C000000 		.4byte	.LFE121
 34428 01d0 00000000 		.4byte	.LFB122
 34429 01d4 0C000000 		.4byte	.LFE122
 34430 01d8 00000000 		.4byte	.LFB123
 34431 01dc 68000000 		.4byte	.LFE123
 34432 01e0 00000000 		.4byte	0
 34433 01e4 00000000 		.4byte	0
 34434              		.section	.debug_line,"",%progbits
 34435              	.Ldebug_line0:
 34436 0000 601F0000 		.section	.debug_str,"MS",%progbits,1
 34436      0200C001 
 34436      00000201 
 34436      FB0E0D00 
 34436      01010101 
 34437              	.LASF221:
 34438 0000 696E666F 		.ascii	"infoSend\000"
 34438      53656E64 
 34438      00
 34439              	.LASF239:
 34440 0009 73747269 		.ascii	"string_length\000"
 34440      6E675F6C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 731


 34440      656E6774 
 34440      6800
 34441              	.LASF109:
 34442 0017 656D675F 		.ascii	"emg_act_counter\000"
 34442      6163745F 
 34442      636F756E 
 34442      74657200 
 34443              	.LASF272:
 34444 0027 69645F73 		.ascii	"id_str\000"
 34444      747200
 34445              	.LASF255:
 34446 002e 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 34446      61637469 
 34446      76617469 
 34446      6F6E5F6D 
 34446      6F64655F 
 34447              	.LASF25:
 34448 0047 73697A65 		.ascii	"sizetype\000"
 34448      74797065 
 34448      00
 34449              	.LASF116:
 34450 0050 706F7765 		.ascii	"power_cycles\000"
 34450      725F6379 
 34450      636C6573 
 34450      00
 34451              	.LASF33:
 34452 005d 434D445F 		.ascii	"CMD_INIT_MEM\000"
 34452      494E4954 
 34452      5F4D454D 
 34452      00
 34453              	.LASF345:
 34454 006a 676C5F63 		.ascii	"gl_c\000"
 34454      00
 34455              	.LASF200:
 34456 006f 77726973 		.ascii	"wrist_direction_association\000"
 34456      745F6469 
 34456      72656374 
 34456      696F6E5F 
 34456      6173736F 
 34457              	.LASF67:
 34458 008b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 34458      545F4D4F 
 34458      44455F45 
 34458      4D475F46 
 34458      4346535F 
 34459              	.LASF36:
 34460 00a3 434D445F 		.ascii	"CMD_ACTIVATE\000"
 34460      41435449 
 34460      56415445 
 34460      00
 34461              	.LASF205:
 34462 00b0 75736572 		.ascii	"user\000"
 34462      00
 34463              	.LASF361:
 34464 00b5 665F6572 		.ascii	"f_err_emg_1\000"
 34464      725F656D 
 34464      675F3100 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 732


 34465              	.LASF362:
 34466 00c1 665F6572 		.ascii	"f_err_emg_2\000"
 34466      725F656D 
 34466      675F3200 
 34467              	.LASF367:
 34468 00cd 73746F70 		.ascii	"stop_master_device\000"
 34468      5F6D6173 
 34468      7465725F 
 34468      64657669 
 34468      636500
 34469              	.LASF11:
 34470 00e0 696E7433 		.ascii	"int32_t\000"
 34470      325F7400 
 34471              	.LASF380:
 34472 00e8 675F7278 		.ascii	"g_rx\000"
 34472      00
 34473              	.LASF104:
 34474 00ed 73745F64 		.ascii	"st_data\000"
 34474      61746100 
 34475              	.LASF296:
 34476 00f5 685F7469 		.ascii	"h_time\000"
 34476      6D6500
 34477              	.LASF310:
 34478 00fc 77726974 		.ascii	"writeStatus\000"
 34478      65537461 
 34478      74757300 
 34479              	.LASF114:
 34480 0108 746F7461 		.ascii	"total_runtime\000"
 34480      6C5F7275 
 34480      6E74696D 
 34480      6500
 34481              	.LASF15:
 34482 0116 75696E74 		.ascii	"uint32\000"
 34482      333200
 34483              	.LASF366:
 34484 011d 636D645F 		.ascii	"cmd_set_baudrate\000"
 34484      7365745F 
 34484      62617564 
 34484      72617465 
 34484      00
 34485              	.LASF355:
 34486 012e 6169725F 		.ascii	"air_chambers_control\000"
 34486      6368616D 
 34486      62657273 
 34486      5F636F6E 
 34486      74726F6C 
 34487              	.LASF280:
 34488 0143 7370695F 		.ascii	"spi_read_delay_str_len\000"
 34488      72656164 
 34488      5F64656C 
 34488      61795F73 
 34488      74725F6C 
 34489              	.LASF206:
 34490 015a 4A4F595F 		.ascii	"JOY_spec\000"
 34490      73706563 
 34490      00
 34491              	.LASF282:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 733


 34492 0163 70726570 		.ascii	"prepare_generic_info\000"
 34492      6172655F 
 34492      67656E65 
 34492      7269635F 
 34492      696E666F 
 34493              	.LASF143:
 34494 0178 706F735F 		.ascii	"pos_lim_inf\000"
 34494      6C696D5F 
 34494      696E6600 
 34495              	.LASF247:
 34496 0184 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 34496      4E445F4D 
 34496      4F544F52 
 34496      5F494458 
 34496      00
 34497              	.LASF338:
 34498 0195 636D645F 		.ascii	"cmd_get_inputs\000"
 34498      6765745F 
 34498      696E7075 
 34498      747300
 34499              	.LASF66:
 34500 01a4 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 34500      545F4D4F 
 34500      44455F45 
 34500      4D475F46 
 34500      43465300 
 34501              	.LASF147:
 34502 01b8 63757272 		.ascii	"curr_lookup\000"
 34502      5F6C6F6F 
 34502      6B757000 
 34503              	.LASF112:
 34504 01c4 72657374 		.ascii	"rest_counter\000"
 34504      5F636F75 
 34504      6E746572 
 34504      00
 34505              	.LASF343:
 34506 01d1 636D645F 		.ascii	"cmd_get_imu_readings\000"
 34506      6765745F 
 34506      696D755F 
 34506      72656164 
 34506      696E6773 
 34507              	.LASF190:
 34508 01e6 73745F4D 		.ascii	"st_MASTER_spec\000"
 34508      41535445 
 34508      525F7370 
 34508      656300
 34509              	.LASF275:
 34510 01f5 69645F73 		.ascii	"id_str_len\000"
 34510      74725F6C 
 34510      656E00
 34511              	.LASF65:
 34512 0200 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 34512      545F4D4F 
 34512      44455F45 
 34512      4D475F49 
 34512      4E544547 
 34513              	.LASF249:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 734


 34514 0218 6D5F746D 		.ascii	"m_tmp\000"
 34514      7000
 34515              	.LASF295:
 34516 021e 765F6964 		.ascii	"v_idx\000"
 34516      7800
 34517              	.LASF16:
 34518 0224 696E7438 		.ascii	"int8\000"
 34518      00
 34519              	.LASF226:
 34520 0229 6765745F 		.ascii	"get_param_list\000"
 34520      70617261 
 34520      6D5F6C69 
 34520      737400
 34521              	.LASF323:
 34522 0238 636D645F 		.ascii	"cmd_get_accelerations\000"
 34522      6765745F 
 34522      61636365 
 34522      6C657261 
 34522      74696F6E 
 34523              	.LASF342:
 34524 024e 636D645F 		.ascii	"cmd_get_emg\000"
 34524      6765745F 
 34524      656D6700 
 34525              	.LASF162:
 34526 025a 73745F65 		.ascii	"st_emg\000"
 34526      6D6700
 34527              	.LASF110:
 34528 0261 706F7369 		.ascii	"position_hist\000"
 34528      74696F6E 
 34528      5F686973 
 34528      7400
 34529              	.LASF213:
 34530 026f 74656D70 		.ascii	"temp_value\000"
 34530      5F76616C 
 34530      756500
 34531              	.LASF294:
 34532 027a 7374725F 		.ascii	"str_data\000"
 34532      64617461 
 34532      00
 34533              	.LASF418:
 34534 0283 72657375 		.ascii	"result\000"
 34534      6C7400
 34535              	.LASF274:
 34536 028a 7370695F 		.ascii	"spi_read_delay_str\000"
 34536      72656164 
 34536      5F64656C 
 34536      61795F73 
 34536      747200
 34537              	.LASF197:
 34538 029d 73745F57 		.ascii	"st_WR_spec\000"
 34538      525F7370 
 34538      656300
 34539              	.LASF107:
 34540 02a8 72656164 		.ascii	"ready\000"
 34540      7900
 34541              	.LASF159:
 34542 02ae 456E635F 		.ascii	"Enc_idx_use_for_control\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 735


 34542      6964785F 
 34542      7573655F 
 34542      666F725F 
 34542      636F6E74 
 34543              	.LASF49:
 34544 02c6 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 34544      4745545F 
 34544      4A4F5953 
 34544      5449434B 
 34544      00
 34545              	.LASF64:
 34546 02d7 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 34546      545F4D4F 
 34546      44455F45 
 34546      4D475F50 
 34546      524F504F 
 34547              	.LASF125:
 34548 02f3 7573655F 		.ascii	"use_2nd_motor_flag\000"
 34548      326E645F 
 34548      6D6F746F 
 34548      725F666C 
 34548      616700
 34549              	.LASF334:
 34550 0306 745F7374 		.ascii	"t_start\000"
 34550      61727400 
 34551              	.LASF117:
 34552 030e 65786365 		.ascii	"excessive_signal_activity\000"
 34552      73736976 
 34552      655F7369 
 34552      676E616C 
 34552      5F616374 
 34553              	.LASF169:
 34554 0328 72656164 		.ascii	"read_imu_flag\000"
 34554      5F696D75 
 34554      5F666C61 
 34554      6700
 34555              	.LASF177:
 34556 0336 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 34556      72645F45 
 34556      4D475F68 
 34556      6973746F 
 34556      72795F6F 
 34557              	.LASF384:
 34558 034f 74696D65 		.ascii	"timer_value\000"
 34558      725F7661 
 34558      6C756500 
 34559              	.LASF4:
 34560 035b 6C6F6E67 		.ascii	"long int\000"
 34560      20696E74 
 34560      00
 34561              	.LASF203:
 34562 0364 756E7573 		.ascii	"unused_bytes1\000"
 34562      65645F62 
 34562      79746573 
 34562      3100
 34563              	.LASF365:
 34564 0372 6D6F746F 		.ascii	"motor_idx\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 736


 34564      725F6964 
 34564      7800
 34565              	.LASF124:
 34566 037c 72657365 		.ascii	"reset_counters\000"
 34566      745F636F 
 34566      756E7465 
 34566      727300
 34567              	.LASF180:
 34568 038b 75736572 		.ascii	"user_emg\000"
 34568      5F656D67 
 34568      00
 34569              	.LASF351:
 34570 0394 636D645F 		.ascii	"cmd_get_SD_file\000"
 34570      6765745F 
 34570      53445F66 
 34570      696C6500 
 34571              	.LASF320:
 34572 03a4 7365745A 		.ascii	"setZeros\000"
 34572      65726F73 
 34572      00
 34573              	.LASF119:
 34574 03ad 756E7573 		.ascii	"unused_bytes\000"
 34574      65645F62 
 34574      79746573 
 34574      00
 34575              	.LASF209:
 34576 03ba 61636365 		.ascii	"accel_value\000"
 34576      6C5F7661 
 34576      6C756500 
 34577              	.LASF230:
 34578 03c6 4E554D5F 		.ascii	"NUM_ITEMS\000"
 34578      4954454D 
 34578      5300
 34579              	.LASF108:
 34580 03d0 73745F63 		.ascii	"st_counters\000"
 34580      6F756E74 
 34580      65727300 
 34581              	.LASF253:
 34582 03dc 4D454D5F 		.ascii	"MEM_P\000"
 34582      5000
 34583              	.LASF19:
 34584 03e2 666C6F61 		.ascii	"float32\000"
 34584      74333200 
 34585              	.LASF349:
 34586 03ea 636D645F 		.ascii	"cmd_get_ADC_map\000"
 34586      6765745F 
 34586      4144435F 
 34586      6D617000 
 34587              	.LASF416:
 34588 03fa 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\ControlloDiVersione\\"
 34588      73657273 
 34588      5C6D676E 
 34588      6F63636F 
 34588      5C446F63 
 34589 0429 57495348 		.ascii	"WISH_TOAST\\Scheda_Mano\\Generic.cydsn\000"
 34589      5F544F41 
 34589      53545C53 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 737


 34589      63686564 
 34589      615F4D61 
 34590              	.LASF41:
 34591 044e 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 34591      4745545F 
 34591      43555252 
 34591      454E5453 
 34591      00
 34592              	.LASF412:
 34593 045f 666C6167 		.ascii	"flag_vibrotactile\000"
 34593      5F766962 
 34593      726F7461 
 34593      6374696C 
 34593      6500
 34594              	.LASF293:
 34595 0471 70726570 		.ascii	"prepare_SD_EMG_history\000"
 34595      6172655F 
 34595      53445F45 
 34595      4D475F68 
 34595      6973746F 
 34596              	.LASF350:
 34597 0488 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 34597      6765745F 
 34597      4144435F 
 34597      72617700 
 34598              	.LASF401:
 34599 0498 73645061 		.ascii	"sdParam\000"
 34599      72616D00 
 34600              	.LASF263:
 34601 04a0 6175785F 		.ascii	"aux_float2\000"
 34601      666C6F61 
 34601      743200
 34602              	.LASF337:
 34603 04ab 636D645F 		.ascii	"cmd_ping\000"
 34603      70696E67 
 34603      00
 34604              	.LASF281:
 34605 04b4 7370695F 		.ascii	"spi_delay_menu_len\000"
 34605      64656C61 
 34605      795F6D65 
 34605      6E755F6C 
 34605      656E00
 34606              	.LASF261:
 34607 04c7 7365745F 		.ascii	"set_custom_param\000"
 34607      63757374 
 34607      6F6D5F70 
 34607      6172616D 
 34607      00
 34608              	.LASF354:
 34609 04d8 636D645F 		.ascii	"cmd_remove_SD_file\000"
 34609      72656D6F 
 34609      76655F53 
 34609      445F6669 
 34609      6C6500
 34610              	.LASF319:
 34611 04eb 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 34611      6E69745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 738


 34611      4F74626B 
 34611      41637457 
 34611      72697374 
 34612              	.LASF0:
 34613 0502 7369676E 		.ascii	"signed char\000"
 34613      65642063 
 34613      68617200 
 34614              	.LASF179:
 34615 050e 75736572 		.ascii	"user_code_string\000"
 34615      5F636F64 
 34615      655F7374 
 34615      72696E67 
 34615      00
 34616              	.LASF214:
 34617 051f 73745F63 		.ascii	"st_calib\000"
 34617      616C6962 
 34617      00
 34618              	.LASF359:
 34619 0528 6572725F 		.ascii	"err_emg_1\000"
 34619      656D675F 
 34619      3100
 34620              	.LASF308:
 34621 0532 6D656D53 		.ascii	"memStore\000"
 34621      746F7265 
 34621      00
 34622              	.LASF353:
 34623 053b 66696C65 		.ascii	"filename\000"
 34623      6E616D65 
 34623      00
 34624              	.LASF75:
 34625 0544 6D6F746F 		.ascii	"motor_supply_type\000"
 34625      725F7375 
 34625      70706C79 
 34625      5F747970 
 34625      6500
 34626              	.LASF336:
 34627 0556 72656164 		.ascii	"read_flag\000"
 34627      5F666C61 
 34627      6700
 34628              	.LASF393:
 34629 0560 4144435F 		.ascii	"ADC_buf\000"
 34629      62756600 
 34630              	.LASF390:
 34631 0568 696E7465 		.ascii	"interrupt_flag\000"
 34631      72727570 
 34631      745F666C 
 34631      616700
 34632              	.LASF286:
 34633 0577 73746570 		.ascii	"step\000"
 34633      00
 34634              	.LASF1:
 34635 057c 756E7369 		.ascii	"unsigned char\000"
 34635      676E6564 
 34635      20636861 
 34635      7200
 34636              	.LASF59:
 34637 058a 434D445F 		.ascii	"CMD_SET_VIBROTACTILE_INPUTS\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 739


 34637      5345545F 
 34637      56494252 
 34637      4F544143 
 34637      54494C45 
 34638              	.LASF153:
 34639 05a6 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 34639      72657665 
 34639      72735F6D 
 34639      6F746F72 
 34639      5F666C61 
 34640              	.LASF58:
 34641 05bc 434D445F 		.ascii	"CMD_GET_VIBROTACTILE_INPUTS\000"
 34641      4745545F 
 34641      56494252 
 34641      4F544143 
 34641      54494C45 
 34642              	.LASF373:
 34643 05d8 675F7265 		.ascii	"g_refNew\000"
 34643      664E6577 
 34643      00
 34644              	.LASF123:
 34645 05e1 72696768 		.ascii	"right_left\000"
 34645      745F6C65 
 34645      667400
 34646              	.LASF29:
 34647 05ec 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 34647      53544F52 
 34647      455F4445 
 34647      4641554C 
 34647      545F5041 
 34648              	.LASF151:
 34649 0605 656E636F 		.ascii	"encoder_line\000"
 34649      6465725F 
 34649      6C696E65 
 34649      00
 34650              	.LASF276:
 34651 0612 6E5F696D 		.ascii	"n_imu_str_len\000"
 34651      755F7374 
 34651      725F6C65 
 34651      6E00
 34652              	.LASF279:
 34653 0620 696D755F 		.ascii	"imu_table_str_len\000"
 34653      7461626C 
 34653      655F7374 
 34653      725F6C65 
 34653      6E00
 34654              	.LASF306:
 34655 0632 76616C75 		.ascii	"value\000"
 34655      6500
 34656              	.LASF208:
 34657 0638 666C6167 		.ascii	"flags\000"
 34657      7300
 34658              	.LASF103:
 34659 063e 70726573 		.ascii	"pressure\000"
 34659      73757265 
 34659      00
 34660              	.LASF37:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 740


 34661 0647 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 34661      4745545F 
 34661      41435449 
 34661      56415445 
 34661      00
 34662              	.LASF22:
 34663 0658 63686172 		.ascii	"char\000"
 34663      00
 34664              	.LASF146:
 34665 065d 6D61785F 		.ascii	"max_step_pos\000"
 34665      73746570 
 34665      5F706F73 
 34665      00
 34666              	.LASF407:
 34667 066a 675F696D 		.ascii	"g_imu\000"
 34667      7500
 34668              	.LASF371:
 34669 0670 675F7265 		.ascii	"g_ref_vibrotactile\000"
 34669      665F7669 
 34669      62726F74 
 34669      61637469 
 34669      6C6500
 34670              	.LASF312:
 34671 0683 7265745F 		.ascii	"ret_val\000"
 34671      76616C00 
 34672              	.LASF260:
 34673 068b 6D656E75 		.ascii	"menu_idx\000"
 34673      5F696478 
 34673      00
 34674              	.LASF268:
 34675 0694 73746172 		.ascii	"start_byte\000"
 34675      745F6279 
 34675      746500
 34676              	.LASF266:
 34677 069f 6E756D5F 		.ascii	"num_mag_cal_params\000"
 34677      6D61675F 
 34677      63616C5F 
 34677      70617261 
 34677      6D7300
 34678              	.LASF152:
 34679 06b2 70776D5F 		.ascii	"pwm_rate_limiter\000"
 34679      72617465 
 34679      5F6C696D 
 34679      69746572 
 34679      00
 34680              	.LASF132:
 34681 06c3 6B5F645F 		.ascii	"k_d_c\000"
 34681      6300
 34682              	.LASF102:
 34683 06c9 73745F66 		.ascii	"st_fb_meas\000"
 34683      625F6D65 
 34683      617300
 34684              	.LASF223:
 34685 06d4 7061636B 		.ascii	"packet_string\000"
 34685      65745F73 
 34685      7472696E 
 34685      6700
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 741


 34686              	.LASF157:
 34687 06e2 6D5F6D75 		.ascii	"m_mult\000"
 34687      6C7400
 34688              	.LASF131:
 34689 06e9 6B5F695F 		.ascii	"k_i_c\000"
 34689      6300
 34690              	.LASF309:
 34691 06ef 64697370 		.ascii	"displacement\000"
 34691      6C616365 
 34691      6D656E74 
 34691      00
 34692              	.LASF303:
 34693 06fc 64617461 		.ascii	"data_length\000"
 34693      5F6C656E 
 34693      67746800 
 34694              	.LASF144:
 34695 0708 706F735F 		.ascii	"pos_lim_sup\000"
 34695      6C696D5F 
 34695      73757000 
 34696              	.LASF287:
 34697 0714 5230315F 		.ascii	"R01_str\000"
 34697      73747200 
 34698              	.LASF165:
 34699 071c 656D675F 		.ascii	"emg_speed\000"
 34699      73706565 
 34699      6400
 34700              	.LASF184:
 34701 0726 72657374 		.ascii	"rest_vel\000"
 34701      5F76656C 
 34701      00
 34702              	.LASF236:
 34703 072f 7061636B 		.ascii	"packet_data\000"
 34703      65745F64 
 34703      61746100 
 34704              	.LASF120:
 34705 073b 73745F64 		.ascii	"st_device\000"
 34705      65766963 
 34705      6500
 34706              	.LASF399:
 34707 0745 7046696C 		.ascii	"pFile\000"
 34707      6500
 34708              	.LASF176:
 34709 074b 4144435F 		.ascii	"ADC_conf\000"
 34709      636F6E66 
 34709      00
 34710              	.LASF300:
 34711 0754 636F6D6D 		.ascii	"commWrite\000"
 34711      57726974 
 34711      6500
 34712              	.LASF368:
 34713 075e 64656163 		.ascii	"deactivate_slaves\000"
 34713      74697661 
 34713      74655F73 
 34713      6C617665 
 34713      7300
 34714              	.LASF311:
 34715 0770 70616765 		.ascii	"pages\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 742


 34715      7300
 34716              	.LASF315:
 34717 0776 6D656D49 		.ascii	"memInit\000"
 34717      6E697400 
 34718              	.LASF219:
 34719 077e 73745F72 		.ascii	"st_ref_vibrotactile\000"
 34719      65665F76 
 34719      6962726F 
 34719      74616374 
 34719      696C6500 
 34720              	.LASF134:
 34721 0792 6B5F695F 		.ascii	"k_i_dl\000"
 34721      646C00
 34722              	.LASF38:
 34723 0799 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 34723      5345545F 
 34723      494E5055 
 34723      545300
 34724              	.LASF105:
 34725 07a8 62756666 		.ascii	"buffer\000"
 34725      657200
 34726              	.LASF136:
 34727 07af 6B5F705F 		.ascii	"k_p_c_dl\000"
 34727      635F646C 
 34727      00
 34728              	.LASF321:
 34729 07b8 636D645F 		.ascii	"cmd_get_measurements\000"
 34729      6765745F 
 34729      6D656173 
 34729      7572656D 
 34729      656E7473 
 34730              	.LASF217:
 34731 07cd 73706565 		.ascii	"speed\000"
 34731      6400
 34732              	.LASF222:
 34733 07d3 72785F63 		.ascii	"rx_cmd\000"
 34733      6D6400
 34734              	.LASF90:
 34735 07da 54595045 		.ascii	"TYPE_DOUBLE\000"
 34735      5F444F55 
 34735      424C4500 
 34736              	.LASF356:
 34737 07e6 736C6176 		.ascii	"slave_motor_idx\000"
 34737      655F6D6F 
 34737      746F725F 
 34737      69647800 
 34738              	.LASF375:
 34739 07f6 675F6D65 		.ascii	"g_meas\000"
 34739      617300
 34740              	.LASF398:
 34741 07fd 456E636F 		.ascii	"Encoder_Check\000"
 34741      6465725F 
 34741      43686563 
 34741      6B00
 34742              	.LASF326:
 34743 080b 6C617374 		.ascii	"last_aux_int16\000"
 34743      5F617578 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 743


 34743      5F696E74 
 34743      313600
 34744              	.LASF79:
 34745 081a 41434B5F 		.ascii	"ACK_ERROR\000"
 34745      4552524F 
 34745      5200
 34746              	.LASF395:
 34747 0824 64617461 		.ascii	"data_encoder_raw\000"
 34747      5F656E63 
 34747      6F646572 
 34747      5F726177 
 34747      00
 34748              	.LASF62:
 34749 0835 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 34749      545F4D4F 
 34749      44455F45 
 34749      58544552 
 34749      4E414C00 
 34750              	.LASF251:
 34751 0849 696E6465 		.ascii	"index\000"
 34751      7800
 34752              	.LASF195:
 34753 084f 6D617869 		.ascii	"maximum_pressure_kPa\000"
 34753      6D756D5F 
 34753      70726573 
 34753      73757265 
 34753      5F6B5061 
 34754              	.LASF185:
 34755 0864 72657374 		.ascii	"rest_position_flag\000"
 34755      5F706F73 
 34755      6974696F 
 34755      6E5F666C 
 34755      616700
 34756              	.LASF187:
 34757 0877 6A6F7973 		.ascii	"joystick_closure_speed\000"
 34757      7469636B 
 34757      5F636C6F 
 34757      73757265 
 34757      5F737065 
 34758              	.LASF352:
 34759 088e 66696C65 		.ascii	"filename_length\000"
 34759      6E616D65 
 34759      5F6C656E 
 34759      67746800 
 34760              	.LASF137:
 34761 089e 6B5F695F 		.ascii	"k_i_c_dl\000"
 34761      635F646C 
 34761      00
 34762              	.LASF332:
 34763 08a7 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 34763      52656164 
 34763      52657343 
 34763      75727246 
 34763      726F6D53 
 34764              	.LASF331:
 34765 08bd 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 34765      6765745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 744


 34765      63757272 
 34765      656E7473 
 34765      5F666F72 
 34766              	.LASF271:
 34767 08d7 6D61675F 		.ascii	"mag_param_str\000"
 34767      70617261 
 34767      6D5F7374 
 34767      7200
 34768              	.LASF392:
 34769 08e5 72657365 		.ascii	"reset_PSoC_flag\000"
 34769      745F5053 
 34769      6F435F66 
 34769      6C616700 
 34770              	.LASF363:
 34771 08f5 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 34771      5F616374 
 34771      5F777269 
 34771      73745F63 
 34771      6F6E7472 
 34772              	.LASF91:
 34773 090c 54595045 		.ascii	"TYPE_STRING\000"
 34773      5F535452 
 34773      494E4700 
 34774              	.LASF74:
 34775 0918 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 34775      5F414E44 
 34775      5F504F53 
 34775      5F434F4E 
 34775      54524F4C 
 34776              	.LASF28:
 34777 092d 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 34777      53544F52 
 34777      455F5041 
 34777      52414D53 
 34777      00
 34778              	.LASF233:
 34779 093e 50415241 		.ascii	"PARAMS_STR\000"
 34779      4D535F53 
 34779      545200
 34780              	.LASF215:
 34781 0949 656E6162 		.ascii	"enabled\000"
 34781      6C656400 
 34782              	.LASF7:
 34783 0951 6C6F6E67 		.ascii	"long unsigned int\000"
 34783      20756E73 
 34783      69676E65 
 34783      6420696E 
 34783      7400
 34784              	.LASF32:
 34785 0963 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 34785      424F4F54 
 34785      4C4F4144 
 34785      455200
 34786              	.LASF189:
 34787 0972 6A6F7973 		.ascii	"joystick_gains\000"
 34787      7469636B 
 34787      5F676169 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 745


 34787      6E7300
 34788              	.LASF98:
 34789 0981 686F6C64 		.ascii	"hold_curr\000"
 34789      5F637572 
 34789      7200
 34790              	.LASF68:
 34791 098b 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 34791      545F4D4F 
 34791      44455F4A 
 34791      4F595354 
 34791      49434B00 
 34792              	.LASF115:
 34793 099f 746F7461 		.ascii	"total_time_rest\000"
 34793      6C5F7469 
 34793      6D655F72 
 34793      65737400 
 34794              	.LASF369:
 34795 09af 636D645F 		.ascii	"cmd_get_vibrotactile_inputs\000"
 34795      6765745F 
 34795      76696272 
 34795      6F746163 
 34795      74696C65 
 34796              	.LASF225:
 34797 09cb 7374725F 		.ascii	"str_sd_data\000"
 34797      73645F64 
 34797      61746100 
 34798              	.LASF139:
 34799 09d7 61637469 		.ascii	"activ\000"
 34799      7600
 34800              	.LASF235:
 34801 09dd 4D454E55 		.ascii	"MENU_STR\000"
 34801      5F535452 
 34801      00
 34802              	.LASF156:
 34803 09e6 6D5F6F66 		.ascii	"m_off\000"
 34803      6600
 34804              	.LASF80:
 34805 09ec 41434B5F 		.ascii	"ACK_OK\000"
 34805      4F4B00
 34806              	.LASF82:
 34807 09f3 54595045 		.ascii	"TYPE_FLAG\000"
 34807      5F464C41 
 34807      4700
 34808              	.LASF212:
 34809 09fd 71756174 		.ascii	"quat_value\000"
 34809      5F76616C 
 34809      756500
 34810              	.LASF237:
 34811 0a08 7061636B 		.ascii	"packet_length\000"
 34811      65745F6C 
 34811      656E6774 
 34811      6800
 34812              	.LASF182:
 34813 0a16 72657374 		.ascii	"rest_pos\000"
 34813      5F706F73 
 34813      00
 34814              	.LASF93:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 746


 34815 0a1f 63757272 		.ascii	"curr\000"
 34815      00
 34816              	.LASF149:
 34817 0a24 696E7075 		.ascii	"input_mode\000"
 34817      745F6D6F 
 34817      646500
 34818              	.LASF72:
 34819 0a2f 434F4E54 		.ascii	"CONTROL_PWM\000"
 34819      524F4C5F 
 34819      50574D00 
 34820              	.LASF43:
 34821 0a3b 434D445F 		.ascii	"CMD_GET_EMG\000"
 34821      4745545F 
 34821      454D4700 
 34822              	.LASF316:
 34823 0a47 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 34823      6E69745F 
 34823      536F6674 
 34823      48616E64 
 34823      50726F00 
 34824              	.LASF31:
 34825 0a5b 434D445F 		.ascii	"CMD_GET_INFO\000"
 34825      4745545F 
 34825      494E464F 
 34825      00
 34826              	.LASF264:
 34827 0a68 6765745F 		.ascii	"get_IMU_param_list\000"
 34827      494D555F 
 34827      70617261 
 34827      6D5F6C69 
 34827      737400
 34828              	.LASF346:
 34829 0a7b 73696E67 		.ascii	"single_packet\000"
 34829      6C655F70 
 34829      61636B65 
 34829      7400
 34830              	.LASF267:
 34831 0a89 66697273 		.ascii	"first_imu_parameter\000"
 34831      745F696D 
 34831      755F7061 
 34831      72616D65 
 34831      74657200 
 34832              	.LASF42:
 34833 0a9d 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 34833      4745545F 
 34833      43555252 
 34833      5F414E44 
 34833      5F4D4541 
 34834              	.LASF414:
 34835 0ab3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 34835      43313120 
 34835      352E342E 
 34835      31203230 
 34835      31363036 
 34836 0ae6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 34836      20726576 
 34836      6973696F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 747


 34836      6E203233 
 34836      37373135 
 34837 0b19 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 34837      66756E63 
 34837      74696F6E 
 34837      2D736563 
 34837      74696F6E 
 34838              	.LASF95:
 34839 0b41 73745F72 		.ascii	"st_ref\000"
 34839      656600
 34840              	.LASF324:
 34841 0b48 636D645F 		.ascii	"cmd_get_joystick\000"
 34841      6765745F 
 34841      6A6F7973 
 34841      7469636B 
 34841      00
 34842              	.LASF47:
 34843 0b59 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 34843      5345545F 
 34843      43554646 
 34843      5F494E50 
 34843      55545300 
 34844              	.LASF181:
 34845 0b6d 73745F53 		.ascii	"st_SH_spec\000"
 34845      485F7370 
 34845      656300
 34846              	.LASF383:
 34847 0b78 63616C69 		.ascii	"calib\000"
 34847      6200
 34848              	.LASF6:
 34849 0b7e 5F5F7569 		.ascii	"__uint32_t\000"
 34849      6E743332 
 34849      5F7400
 34850              	.LASF8:
 34851 0b89 6C6F6E67 		.ascii	"long long int\000"
 34851      206C6F6E 
 34851      6720696E 
 34851      7400
 34852              	.LASF70:
 34853 0b97 53485F63 		.ascii	"SH_control_mode\000"
 34853      6F6E7472 
 34853      6F6C5F6D 
 34853      6F646500 
 34854              	.LASF84:
 34855 0ba7 54595045 		.ascii	"TYPE_UINT8\000"
 34855      5F55494E 
 34855      543800
 34856              	.LASF330:
 34857 0bb2 636D645F 		.ascii	"cmd_get_currents\000"
 34857      6765745F 
 34857      63757272 
 34857      656E7473 
 34857      00
 34858              	.LASF77:
 34859 0bc3 4D41584F 		.ascii	"MAXON_12V\000"
 34859      4E5F3132 
 34859      5600
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 748


 34860              	.LASF391:
 34861 0bcd 6368616E 		.ascii	"change_ext_ref_flag\000"
 34861      67655F65 
 34861      78745F72 
 34861      65665F66 
 34861      6C616700 
 34862              	.LASF21:
 34863 0be1 646F7562 		.ascii	"double\000"
 34863      6C6500
 34864              	.LASF56:
 34865 0be8 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 34865      4745545F 
 34865      53445F53 
 34865      494E474C 
 34865      455F4649 
 34866              	.LASF155:
 34867 0bff 456E635F 		.ascii	"Enc_raw_read_conf\000"
 34867      7261775F 
 34867      72656164 
 34867      5F636F6E 
 34867      6600
 34868              	.LASF218:
 34869 0c11 72657065 		.ascii	"repetitions\000"
 34869      74697469 
 34869      6F6E7300 
 34870              	.LASF145:
 34871 0c1d 6D61785F 		.ascii	"max_step_neg\000"
 34871      73746570 
 34871      5F6E6567 
 34871      00
 34872              	.LASF411:
 34873 0c2a 656D675F 		.ascii	"emg_history_next_idx\000"
 34873      68697374 
 34873      6F72795F 
 34873      6E657874 
 34873      5F696478 
 34874              	.LASF192:
 34875 0c3f 736C6176 		.ascii	"slave_ID\000"
 34875      655F4944 
 34875      00
 34876              	.LASF389:
 34877 0c48 72657365 		.ascii	"reset_last_value_flag\000"
 34877      745F6C61 
 34877      73745F76 
 34877      616C7565 
 34877      5F666C61 
 34878              	.LASF234:
 34879 0c5e 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 34879      4F4D5F50 
 34879      4152414D 
 34879      5F474554 
 34879      00
 34880              	.LASF20:
 34881 0c6f 666C6F61 		.ascii	"float\000"
 34881      7400
 34882              	.LASF171:
 34883 0c75 494D555F 		.ascii	"IMU_conf\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 749


 34883      636F6E66 
 34883      00
 34884              	.LASF57:
 34885 0c7e 434D445F 		.ascii	"CMD_REMOVE_SD_SINGLE_FILE\000"
 34885      52454D4F 
 34885      56455F53 
 34885      445F5349 
 34885      4E474C45 
 34886              	.LASF252:
 34887 0c98 50415241 		.ascii	"PARAM_IDX\000"
 34887      4D5F4944 
 34887      5800
 34888              	.LASF99:
 34889 0ca2 73745F61 		.ascii	"st_adc_meas\000"
 34889      64635F6D 
 34889      65617300 
 34890              	.LASF248:
 34891 0cae 6D5F6164 		.ascii	"m_addr\000"
 34891      647200
 34892              	.LASF382:
 34893 0cb5 635F6D65 		.ascii	"c_mem\000"
 34893      6D00
 34894              	.LASF302:
 34895 0cbb 64617461 		.ascii	"data_array\000"
 34895      5F617272 
 34895      617900
 34896              	.LASF10:
 34897 0cc6 756E7369 		.ascii	"unsigned int\000"
 34897      676E6564 
 34897      20696E74 
 34897      00
 34898              	.LASF360:
 34899 0cd3 6572725F 		.ascii	"err_emg_2\000"
 34899      656D675F 
 34899      3200
 34900              	.LASF317:
 34901 0cdd 6D656D49 		.ascii	"memInit_Master\000"
 34901      6E69745F 
 34901      4D617374 
 34901      657200
 34902              	.LASF305:
 34903 0cec 73656E64 		.ascii	"sendAcknowledgment\000"
 34903      41636B6E 
 34903      6F776C65 
 34903      64676D65 
 34903      6E7400
 34904              	.LASF290:
 34905 0cff 70726570 		.ascii	"prepare_SD_legend\000"
 34905      6172655F 
 34905      53445F6C 
 34905      6567656E 
 34905      6400
 34906              	.LASF408:
 34907 0d11 4D616743 		.ascii	"MagCal\000"
 34907      616C00
 34908              	.LASF60:
 34909 0d18 53485F63 		.ascii	"SH_command\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 750


 34909      6F6D6D61 
 34909      6E6400
 34910              	.LASF86:
 34911 0d23 54595045 		.ascii	"TYPE_UINT16\000"
 34911      5F55494E 
 34911      54313600 
 34912              	.LASF202:
 34913 0d2f 666C6167 		.ascii	"flag\000"
 34913      00
 34914              	.LASF325:
 34915 0d34 636D645F 		.ascii	"cmd_set_inputs\000"
 34915      7365745F 
 34915      696E7075 
 34915      747300
 34916              	.LASF150:
 34917 0d43 636F6E74 		.ascii	"control_mode\000"
 34917      726F6C5F 
 34917      6D6F6465 
 34917      00
 34918              	.LASF340:
 34919 0d50 6F66665F 		.ascii	"off_1\000"
 34919      3100
 34920              	.LASF63:
 34921 0d56 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 34921      545F4D4F 
 34921      44455F45 
 34921      4E434F44 
 34921      45523300 
 34922              	.LASF301:
 34923 0d6a 636F6D6D 		.ascii	"commWriteID\000"
 34923      57726974 
 34923      65494400 
 34924              	.LASF52:
 34925 0d76 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 34925      4745545F 
 34925      454E434F 
 34925      4445525F 
 34925      434F4E46 
 34926              	.LASF168:
 34927 0d8b 73745F69 		.ascii	"st_imu\000"
 34927      6D7500
 34928              	.LASF328:
 34929 0d92 636D645F 		.ascii	"cmd_get_activate\000"
 34929      6765745F 
 34929      61637469 
 34929      76617465 
 34929      00
 34930              	.LASF357:
 34931 0da3 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 34931      61637469 
 34931      76617469 
 34931      6F6E5F76 
 34931      656C6F63 
 34932              	.LASF89:
 34933 0dbf 54595045 		.ascii	"TYPE_FLOAT\000"
 34933      5F464C4F 
 34933      415400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 751


 34934              	.LASF257:
 34935 0dca 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 34935      4F4D5F50 
 34935      4152414D 
 34935      5F534554 
 34935      5F4C4953 
 34936              	.LASF231:
 34937 0de0 4E554D5F 		.ascii	"NUM_STRUCT\000"
 34937      53545255 
 34937      435400
 34938              	.LASF406:
 34939 0deb 73696E67 		.ascii	"single_imu_size\000"
 34939      6C655F69 
 34939      6D755F73 
 34939      697A6500 
 34940              	.LASF262:
 34941 0dfb 6175785F 		.ascii	"aux_uchar\000"
 34941      75636861 
 34941      7200
 34942              	.LASF288:
 34943 0e05 70726570 		.ascii	"prepare_R01_info\000"
 34943      6172655F 
 34943      5230315F 
 34943      696E666F 
 34943      00
 34944              	.LASF100:
 34945 0e16 6164645F 		.ascii	"add_emg\000"
 34945      656D6700 
 34946              	.LASF85:
 34947 0e1e 54595045 		.ascii	"TYPE_INT16\000"
 34947      5F494E54 
 34947      313600
 34948              	.LASF243:
 34949 0e29 6175785F 		.ascii	"aux_uint16\000"
 34949      75696E74 
 34949      313600
 34950              	.LASF163:
 34951 0e34 656D675F 		.ascii	"emg_threshold\000"
 34951      74687265 
 34951      73686F6C 
 34951      6400
 34952              	.LASF46:
 34953 0e42 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 34953      4745545F 
 34953      43555252 
 34953      5F444946 
 34953      4600
 34954              	.LASF160:
 34955 0e54 6D6F746F 		.ascii	"motor_handle_ratio\000"
 34955      725F6861 
 34955      6E646C65 
 34955      5F726174 
 34955      696F00
 34956              	.LASF111:
 34957 0e67 63757272 		.ascii	"current_hist\000"
 34957      656E745F 
 34957      68697374 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 752


 34957      00
 34958              	.LASF73:
 34959 0e74 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 34959      524F4C5F 
 34959      43555252 
 34959      454E5400 
 34960              	.LASF24:
 34961 0e84 6C6F6E67 		.ascii	"long double\000"
 34961      20646F75 
 34961      626C6500 
 34962              	.LASF88:
 34963 0e90 54595045 		.ascii	"TYPE_UINT32\000"
 34963      5F55494E 
 34963      54333200 
 34964              	.LASF193:
 34965 0e9c 73745F46 		.ascii	"st_FB_spec\000"
 34965      425F7370 
 34965      656300
 34966              	.LASF228:
 34967 0ea7 5641525F 		.ascii	"VAR_P\000"
 34967      5000
 34968              	.LASF256:
 34969 0ead 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 34969      4F4D5F50 
 34969      4152414D 
 34969      5F474554 
 34969      5F4C4953 
 34970              	.LASF118:
 34971 0ec3 6D6F7469 		.ascii	"motion_counter\000"
 34971      6F6E5F63 
 34971      6F756E74 
 34971      657200
 34972              	.LASF304:
 34973 0ed2 63686563 		.ascii	"checksum\000"
 34973      6B73756D 
 34973      00
 34974              	.LASF374:
 34975 0edb 675F7265 		.ascii	"g_refOld\000"
 34975      664F6C64 
 34975      00
 34976              	.LASF35:
 34977 0ee4 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 34977      48414E44 
 34977      5F43414C 
 34977      49425241 
 34977      544500
 34978              	.LASF210:
 34979 0ef7 6779726F 		.ascii	"gyro_value\000"
 34979      5F76616C 
 34979      756500
 34980              	.LASF173:
 34981 0f02 63757272 		.ascii	"curr_time\000"
 34981      5F74696D 
 34981      6500
 34982              	.LASF158:
 34983 0f0c 646F7562 		.ascii	"double_encoder_on_off\000"
 34983      6C655F65 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 753


 34983      6E636F64 
 34983      65725F6F 
 34983      6E5F6F66 
 34984              	.LASF364:
 34985 0f22 64726976 		.ascii	"drive_slave\000"
 34985      655F736C 
 34985      61766500 
 34986              	.LASF170:
 34987 0f2e 5350495F 		.ascii	"SPI_read_delay\000"
 34987      72656164 
 34987      5F64656C 
 34987      617900
 34988              	.LASF78:
 34989 0f3d 61636B6E 		.ascii	"acknowledgment_values\000"
 34989      6F776C65 
 34989      64676D65 
 34989      6E745F76 
 34989      616C7565 
 34990              	.LASF246:
 34991 0f53 4D4F544F 		.ascii	"MOTOR_IDX\000"
 34991      525F4944 
 34991      5800
 34992              	.LASF314:
 34993 0f5d 6D656D52 		.ascii	"memRestore\000"
 34993      6573746F 
 34993      726500
 34994              	.LASF269:
 34995 0f68 6E5F696D 		.ascii	"n_imu_str\000"
 34995      755F7374 
 34995      7200
 34996              	.LASF283:
 34997 0f72 696E666F 		.ascii	"info_string\000"
 34997      5F737472 
 34997      696E6700 
 34998              	.LASF291:
 34999 0f7e 70726570 		.ascii	"prepare_SD_info\000"
 34999      6172655F 
 34999      53445F69 
 34999      6E666F00 
 35000              	.LASF358:
 35001 0f8e 66736D5F 		.ascii	"fsm_state\000"
 35001      73746174 
 35001      6500
 35002              	.LASF9:
 35003 0f98 6C6F6E67 		.ascii	"long long unsigned int\000"
 35003      206C6F6E 
 35003      6720756E 
 35003      7369676E 
 35003      65642069 
 35004              	.LASF87:
 35005 0faf 54595045 		.ascii	"TYPE_INT32\000"
 35005      5F494E54 
 35005      333200
 35006              	.LASF245:
 35007 0fba 6175785F 		.ascii	"aux_uint32\000"
 35007      75696E74 
 35007      333200
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 754


 35008              	.LASF106:
 35009 0fc5 6C656E67 		.ascii	"length\000"
 35009      746800
 35010              	.LASF258:
 35011 0fcc 55534552 		.ascii	"USER_ID_PARAM\000"
 35011      5F49445F 
 35011      50415241 
 35011      4D00
 35012              	.LASF207:
 35013 0fda 73745F69 		.ascii	"st_imu_data\000"
 35013      6D755F64 
 35013      61746100 
 35014              	.LASF211:
 35015 0fe6 6D61675F 		.ascii	"mag_value\000"
 35015      76616C75 
 35015      6500
 35016              	.LASF94:
 35017 0ff0 6F6E6F66 		.ascii	"onoff\000"
 35017      6600
 35018              	.LASF45:
 35019 0ff6 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 35019      4745545F 
 35019      41434345 
 35019      4C00
 35020              	.LASF322:
 35021 1004 636D645F 		.ascii	"cmd_get_velocities\000"
 35021      6765745F 
 35021      76656C6F 
 35021      63697469 
 35021      657300
 35022              	.LASF313:
 35023 1017 6D656D52 		.ascii	"memRecall\000"
 35023      6563616C 
 35023      6C00
 35024              	.LASF385:
 35025 1021 74696D65 		.ascii	"timer_value0\000"
 35025      725F7661 
 35025      6C756530 
 35025      00
 35026              	.LASF48:
 35027 102e 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 35027      5345545F 
 35027      42415544 
 35027      52415445 
 35027      00
 35028              	.LASF130:
 35029 103f 6B5F705F 		.ascii	"k_p_c\000"
 35029      6300
 35030              	.LASF273:
 35031 1045 696D755F 		.ascii	"imu_table_str\000"
 35031      7461626C 
 35031      655F7374 
 35031      7200
 35032              	.LASF386:
 35033 1053 6465765F 		.ascii	"dev_tension\000"
 35033      74656E73 
 35033      696F6E00 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 755


 35034              	.LASF141:
 35035 105f 6D6F746F 		.ascii	"motor_driver_type\000"
 35035      725F6472 
 35035      69766572 
 35035      5F747970 
 35035      6500
 35036              	.LASF341:
 35037 1071 6D756C74 		.ascii	"mult_1\000"
 35037      5F3100
 35038              	.LASF285:
 35039 1078 70726570 		.ascii	"prepare_counter_info\000"
 35039      6172655F 
 35039      636F756E 
 35039      7465725F 
 35039      696E666F 
 35040              	.LASF23:
 35041 108d 72656738 		.ascii	"reg8\000"
 35041      00
 35042              	.LASF196:
 35043 1092 70726F70 		.ascii	"prop_err_fb_gain\000"
 35043      5F657272 
 35043      5F66625F 
 35043      6761696E 
 35043      00
 35044              	.LASF298:
 35045 10a3 636F6D6D 		.ascii	"commWrite_old_id\000"
 35045      57726974 
 35045      655F6F6C 
 35045      645F6964 
 35045      00
 35046              	.LASF250:
 35047 10b4 6D616E61 		.ascii	"manage_param_list\000"
 35047      67655F70 
 35047      6172616D 
 35047      5F6C6973 
 35047      7400
 35048              	.LASF30:
 35049 10c6 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 35049      52455354 
 35049      4F52455F 
 35049      50415241 
 35049      4D5300
 35050              	.LASF400:
 35051 10d9 73644669 		.ascii	"sdFile\000"
 35051      6C6500
 35052              	.LASF289:
 35053 10e0 70726570 		.ascii	"prepare_SD_param_info\000"
 35053      6172655F 
 35053      53445F70 
 35053      6172616D 
 35053      5F696E66 
 35054              	.LASF333:
 35055 10f6 63757272 		.ascii	"curr_diff\000"
 35055      5F646966 
 35055      6600
 35056              	.LASF191:
 35057 1100 736C6176 		.ascii	"slave_comm_active\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 756


 35057      655F636F 
 35057      6D6D5F61 
 35057      63746976 
 35057      6500
 35058              	.LASF292:
 35059 1112 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 35059      6172655F 
 35059      53445F45 
 35059      4D475F48 
 35059      6973746F 
 35060              	.LASF299:
 35061 1130 6F6C645F 		.ascii	"old_id\000"
 35061      696400
 35062              	.LASF417:
 35063 1137 5F5F5245 		.ascii	"__REV16\000"
 35063      56313600 
 35064              	.LASF396:
 35065 113f 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 35065      636F6465 
 35065      725F4C69 
 35065      6E655F43 
 35065      6F6E6E65 
 35066              	.LASF128:
 35067 1158 6465765F 		.ascii	"dev_type\000"
 35067      74797065 
 35067      00
 35068              	.LASF178:
 35069 1161 73745F75 		.ascii	"st_user\000"
 35069      73657200 
 35070              	.LASF329:
 35071 1169 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 35071      6765745F 
 35071      63757272 
 35071      5F616E64 
 35071      5F6D6561 
 35072              	.LASF161:
 35073 117f 67656172 		.ascii	"gears_params\000"
 35073      735F7061 
 35073      72616D73 
 35073      00
 35074              	.LASF172:
 35075 118c 73745F65 		.ascii	"st_expansion\000"
 35075      7870616E 
 35075      73696F6E 
 35075      00
 35076              	.LASF166:
 35077 1199 656D675F 		.ascii	"emg_calibration_flag\000"
 35077      63616C69 
 35077      62726174 
 35077      696F6E5F 
 35077      666C6167 
 35078              	.LASF96:
 35079 11ae 73745F6D 		.ascii	"st_meas\000"
 35079      65617300 
 35080              	.LASF55:
 35081 11b6 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 35081      4745545F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 757


 35081      4144435F 
 35081      52415700 
 35082              	.LASF188:
 35083 11c6 6A6F7973 		.ascii	"joystick_threshold\000"
 35083      7469636B 
 35083      5F746872 
 35083      6573686F 
 35083      6C6400
 35084              	.LASF76:
 35085 11d9 4D41584F 		.ascii	"MAXON_24V\000"
 35085      4E5F3234 
 35085      5600
 35086              	.LASF69:
 35087 11e3 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 35087      545F4D4F 
 35087      44455F45 
 35087      4D475F50 
 35087      524F504F 
 35088              	.LASF51:
 35089 1202 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 35089      4745545F 
 35089      494D555F 
 35089      50415241 
 35089      4D00
 35090              	.LASF379:
 35091 1214 675F6662 		.ascii	"g_fb_meas\000"
 35091      5F6D6561 
 35091      7300
 35092              	.LASF53:
 35093 121e 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 35093      4745545F 
 35093      454E434F 
 35093      4445525F 
 35093      52415700 
 35094              	.LASF339:
 35095 1232 636D645F 		.ascii	"cmd_store_params\000"
 35095      73746F72 
 35095      655F7061 
 35095      72616D73 
 35095      00
 35096              	.LASF381:
 35097 1243 675F6D65 		.ascii	"g_mem\000"
 35097      6D00
 35098              	.LASF40:
 35099 1249 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 35099      4745545F 
 35099      4D454153 
 35099      5552454D 
 35099      454E5453 
 35100              	.LASF378:
 35101 125e 675F6164 		.ascii	"g_adc_measOld\000"
 35101      635F6D65 
 35101      61734F6C 
 35101      6400
 35102              	.LASF348:
 35103 126c 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 35103      6765745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 758


 35103      656E636F 
 35103      6465725F 
 35103      72617700 
 35104              	.LASF13:
 35105 1280 75696E74 		.ascii	"uint8\000"
 35105      3800
 35106              	.LASF220:
 35107 1286 636F6D6D 		.ascii	"commProcess\000"
 35107      50726F63 
 35107      65737300 
 35108              	.LASF186:
 35109 1292 73745F4A 		.ascii	"st_JOY_spec\000"
 35109      4F595F73 
 35109      70656300 
 35110              	.LASF2:
 35111 129e 73686F72 		.ascii	"short int\000"
 35111      7420696E 
 35111      7400
 35112              	.LASF318:
 35113 12a8 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 35113      6E69745F 
 35113      41697243 
 35113      68616D62 
 35113      65727346 
 35114              	.LASF277:
 35115 12be 6964735F 		.ascii	"ids_str_len\000"
 35115      7374725F 
 35115      6C656E00 
 35116              	.LASF135:
 35117 12ca 6B5F645F 		.ascii	"k_d_dl\000"
 35117      646C00
 35118              	.LASF238:
 35119 12d1 6964785F 		.ascii	"idx_menu\000"
 35119      6D656E75 
 35119      00
 35120              	.LASF101:
 35121 12da 6A6F7973 		.ascii	"joystick\000"
 35121      7469636B 
 35121      00
 35122              	.LASF204:
 35123 12e3 6D6F746F 		.ascii	"motor\000"
 35123      7200
 35124              	.LASF403:
 35125 12e9 4E5F494D 		.ascii	"N_IMU_Connected\000"
 35125      555F436F 
 35125      6E6E6563 
 35125      74656400 
 35126              	.LASF39:
 35127 12f9 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 35127      4745545F 
 35127      494E5055 
 35127      545300
 35128              	.LASF121:
 35129 1308 68775F6D 		.ascii	"hw_maint_date\000"
 35129      61696E74 
 35129      5F646174 
 35129      6500
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 759


 35130              	.LASF270:
 35131 1316 6964735F 		.ascii	"ids_str\000"
 35131      73747200 
 35132              	.LASF54:
 35133 131e 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 35133      4745545F 
 35133      4144435F 
 35133      434F4E46 
 35133      00
 35134              	.LASF27:
 35135 132f 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 35135      5345545F 
 35135      5A45524F 
 35135      5300
 35136              	.LASF278:
 35137 133d 6D61675F 		.ascii	"mag_param_str_len\000"
 35137      70617261 
 35137      6D5F7374 
 35137      725F6C65 
 35137      6E00
 35138              	.LASF265:
 35139 134f 6E756D5F 		.ascii	"num_imus_id_params\000"
 35139      696D7573 
 35139      5F69645F 
 35139      70617261 
 35139      6D7300
 35140              	.LASF242:
 35141 1362 6175785F 		.ascii	"aux_int16\000"
 35141      696E7431 
 35141      3600
 35142              	.LASF410:
 35143 136c 656D675F 		.ascii	"emg_history\000"
 35143      68697374 
 35143      6F727900 
 35144              	.LASF413:
 35145 1378 45455052 		.ascii	"EEPROM_ADDR\000"
 35145      4F4D5F41 
 35145      44445200 
 35146              	.LASF122:
 35147 1384 73746174 		.ascii	"stats_period_begin_date\000"
 35147      735F7065 
 35147      72696F64 
 35147      5F626567 
 35147      696E5F64 
 35148              	.LASF405:
 35149 139c 696D7573 		.ascii	"imus_data_size\000"
 35149      5F646174 
 35149      615F7369 
 35149      7A6500
 35150              	.LASF370:
 35151 13ab 49544D5F 		.ascii	"ITM_RxBuffer\000"
 35151      52784275 
 35151      66666572 
 35151      00
 35152              	.LASF44:
 35153 13b8 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 35153      4745545F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 760


 35153      56454C4F 
 35153      43495449 
 35153      455300
 35154              	.LASF388:
 35155 13cb 706F775F 		.ascii	"pow_tension\000"
 35155      74656E73 
 35155      696F6E00 
 35156              	.LASF34:
 35157 13d7 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 35157      4745545F 
 35157      50415241 
 35157      4D5F4C49 
 35157      535400
 35158              	.LASF81:
 35159 13ea 64617461 		.ascii	"data_types\000"
 35159      5F747970 
 35159      657300
 35160              	.LASF17:
 35161 13f5 696E7431 		.ascii	"int16\000"
 35161      3600
 35162              	.LASF174:
 35163 13fb 72656164 		.ascii	"read_exp_port_flag\000"
 35163      5F657870 
 35163      5F706F72 
 35163      745F666C 
 35163      616700
 35164              	.LASF167:
 35165 140e 73776974 		.ascii	"switch_emg\000"
 35165      63685F65 
 35165      6D6700
 35166              	.LASF140:
 35167 1419 61637469 		.ascii	"activate_pwm_rescaling\000"
 35167      76617465 
 35167      5F70776D 
 35167      5F726573 
 35167      63616C69 
 35168              	.LASF133:
 35169 1430 6B5F705F 		.ascii	"k_p_dl\000"
 35169      646C00
 35170              	.LASF97:
 35171 1437 65737469 		.ascii	"estim_curr\000"
 35171      6D5F6375 
 35171      727200
 35172              	.LASF387:
 35173 1442 6465765F 		.ascii	"dev_pwm_limit\000"
 35173      70776D5F 
 35173      6C696D69 
 35173      7400
 35174              	.LASF175:
 35175 1450 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 35175      5F414443 
 35175      5F73656E 
 35175      736F7273 
 35175      5F706F72 
 35176              	.LASF397:
 35177 146b 456E636F 		.ascii	"Encoder_Value\000"
 35177      6465725F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 761


 35177      56616C75 
 35177      6500
 35178              	.LASF347:
 35179 1479 636D645F 		.ascii	"cmd_get_encoder_map\000"
 35179      6765745F 
 35179      656E636F 
 35179      6465725F 
 35179      6D617000 
 35180              	.LASF127:
 35181 148d 75736572 		.ascii	"user_id\000"
 35181      5F696400 
 35182              	.LASF12:
 35183 1495 75696E74 		.ascii	"uint32_t\000"
 35183      33325F74 
 35183      00
 35184              	.LASF241:
 35185 149e 6175785F 		.ascii	"aux_float\000"
 35185      666C6F61 
 35185      7400
 35186              	.LASF404:
 35187 14a8 494D555F 		.ascii	"IMU_connected\000"
 35187      636F6E6E 
 35187      65637465 
 35187      6400
 35188              	.LASF232:
 35189 14b6 4E554D5F 		.ascii	"NUM_MENU\000"
 35189      4D454E55 
 35189      00
 35190              	.LASF244:
 35191 14bf 6175785F 		.ascii	"aux_int32\000"
 35191      696E7433 
 35191      3200
 35192              	.LASF126:
 35193 14c9 62617564 		.ascii	"baud_rate\000"
 35193      5F726174 
 35193      6500
 35194              	.LASF335:
 35195 14d3 745F656E 		.ascii	"t_end\000"
 35195      6400
 35196              	.LASF199:
 35197 14d9 66617374 		.ascii	"fast_act_threshold\000"
 35197      5F616374 
 35197      5F746872 
 35197      6573686F 
 35197      6C6400
 35198              	.LASF227:
 35199 14ec 696E666F 		.ascii	"info_type\000"
 35199      5F747970 
 35199      6500
 35200              	.LASF50:
 35201 14f6 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 35201      4745545F 
 35201      494D555F 
 35201      52454144 
 35201      494E4753 
 35202              	.LASF402:
 35203 150b 73645230 		.ascii	"sdR01File\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 762


 35203      3146696C 
 35203      6500
 35204              	.LASF307:
 35205 1515 4C435243 		.ascii	"LCRChecksum\000"
 35205      6865636B 
 35205      73756D00 
 35206              	.LASF344:
 35207 1521 6B5F696D 		.ascii	"k_imu\000"
 35207      7500
 35208              	.LASF3:
 35209 1527 73686F72 		.ascii	"short unsigned int\000"
 35209      7420756E 
 35209      7369676E 
 35209      65642069 
 35209      6E7400
 35210              	.LASF154:
 35211 153a 73745F65 		.ascii	"st_encoder\000"
 35211      6E636F64 
 35211      657200
 35212              	.LASF377:
 35213 1545 675F6164 		.ascii	"g_adc_meas\000"
 35213      635F6D65 
 35213      617300
 35214              	.LASF194:
 35215 1550 6D61785F 		.ascii	"max_residual_current\000"
 35215      72657369 
 35215      6475616C 
 35215      5F637572 
 35215      72656E74 
 35216              	.LASF284:
 35217 1565 454E435F 		.ascii	"ENC_L\000"
 35217      4C00
 35218              	.LASF201:
 35219 156b 73745F65 		.ascii	"st_eeprom\000"
 35219      6570726F 
 35219      6D00
 35220              	.LASF229:
 35221 1575 54595045 		.ascii	"TYPES\000"
 35221      5300
 35222              	.LASF372:
 35223 157b 675F7265 		.ascii	"g_ref\000"
 35223      6600
 35224              	.LASF18:
 35225 1581 696E7433 		.ascii	"int32\000"
 35225      3200
 35226              	.LASF394:
 35227 1587 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 35227      4F465F41 
 35227      4E414C4F 
 35227      475F494E 
 35227      50555453 
 35228              	.LASF224:
 35229 159c 696E666F 		.ascii	"infoGet\000"
 35229      47657400 
 35230              	.LASF129:
 35231 15a4 73745F6D 		.ascii	"st_motor\000"
 35231      6F746F72 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 763


 35231      00
 35232              	.LASF409:
 35233 15ad 6D617374 		.ascii	"master_mode\000"
 35233      65725F6D 
 35233      6F646500 
 35234              	.LASF92:
 35235 15b9 46535F46 		.ascii	"FS_FILE\000"
 35235      494C4500 
 35236              	.LASF142:
 35237 15c1 706F735F 		.ascii	"pos_lim_flag\000"
 35237      6C696D5F 
 35237      666C6167 
 35237      00
 35238              	.LASF376:
 35239 15ce 675F6D65 		.ascii	"g_measOld\000"
 35239      61734F6C 
 35239      6400
 35240              	.LASF71:
 35241 15d8 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 35241      524F4C5F 
 35241      414E474C 
 35241      4500
 35242              	.LASF327:
 35243 15e6 636D645F 		.ascii	"cmd_activate\000"
 35243      61637469 
 35243      76617465 
 35243      00
 35244              	.LASF5:
 35245 15f3 5F5F696E 		.ascii	"__int32_t\000"
 35245      7433325F 
 35245      7400
 35246              	.LASF254:
 35247 15fd 7370695F 		.ascii	"spi_delay_menu\000"
 35247      64656C61 
 35247      795F6D65 
 35247      6E7500
 35248              	.LASF113:
 35249 160c 77697265 		.ascii	"wire_disp\000"
 35249      5F646973 
 35249      7000
 35250              	.LASF164:
 35251 1616 656D675F 		.ascii	"emg_max_value\000"
 35251      6D61785F 
 35251      76616C75 
 35251      6500
 35252              	.LASF259:
 35253 1624 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 35253      4F4D5F50 
 35253      4152414D 
 35253      5F534554 
 35253      00
 35254              	.LASF415:
 35255 1635 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 35255      72635C63 
 35255      6F6D6D61 
 35255      6E645F70 
 35255      726F6365 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc4ZWh3D.s 			page 764


 35256              	.LASF148:
 35257 1651 63757272 		.ascii	"current_limit\000"
 35257      656E745F 
 35257      6C696D69 
 35257      7400
 35258              	.LASF61:
 35259 165f 53485F69 		.ascii	"SH_input_mode\000"
 35259      6E707574 
 35259      5F6D6F64 
 35259      6500
 35260              	.LASF83:
 35261 166d 54595045 		.ascii	"TYPE_INT8\000"
 35261      5F494E54 
 35261      3800
 35262              	.LASF198:
 35263 1677 61637469 		.ascii	"activation_mode\000"
 35263      76617469 
 35263      6F6E5F6D 
 35263      6F646500 
 35264              	.LASF297:
 35265 1687 494D555F 		.ascii	"IMU_reading_info\000"
 35265      72656164 
 35265      696E675F 
 35265      696E666F 
 35265      00
 35266              	.LASF14:
 35267 1698 75696E74 		.ascii	"uint16\000"
 35267      313600
 35268              	.LASF183:
 35269 169f 72657374 		.ascii	"rest_delay\000"
 35269      5F64656C 
 35269      617900
 35270              	.LASF240:
 35271 16aa 6175785F 		.ascii	"aux_str\000"
 35271      73747200 
 35272              	.LASF26:
 35273 16b2 434D445F 		.ascii	"CMD_PING\000"
 35273      50494E47 
 35273      00
 35274              	.LASF138:
 35275 16bb 6B5F645F 		.ascii	"k_d_c_dl\000"
 35275      635F646C 
 35275      00
 35276              	.LASF216:
 35277 16c4 64697265 		.ascii	"direction\000"
 35277      6374696F 
 35277      6E00
 35278              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
