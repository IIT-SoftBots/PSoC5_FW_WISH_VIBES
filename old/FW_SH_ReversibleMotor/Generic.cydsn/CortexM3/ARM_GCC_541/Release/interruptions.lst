ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"interruptions.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              		.type	pwm_preload_values, %object
  22              		.size	pwm_preload_values, 29
  23              	pwm_preload_values:
  24 0000 64       		.byte	100
  25 0001 53       		.byte	83
  26 0002 4E       		.byte	78
  27 0003 4C       		.byte	76
  28 0004 4A       		.byte	74
  29 0005 48       		.byte	72
  30 0006 46       		.byte	70
  31 0007 44       		.byte	68
  32 0008 43       		.byte	67
  33 0009 41       		.byte	65
  34 000a 40       		.byte	64
  35 000b 3F       		.byte	63
  36 000c 3E       		.byte	62
  37 000d 3D       		.byte	61
  38 000e 3C       		.byte	60
  39 000f 3B       		.byte	59
  40 0010 3A       		.byte	58
  41 0011 39       		.byte	57
  42 0012 38       		.byte	56
  43 0013 38       		.byte	56
  44 0014 37       		.byte	55
  45 0015 36       		.byte	54
  46 0016 36       		.byte	54
  47 0017 35       		.byte	53
  48 0018 34       		.byte	52
  49 0019 34       		.byte	52
  50 001a 34       		.byte	52
  51 001b 33       		.byte	51
  52 001c 33       		.byte	51
  53              		.section	.text.ISR_RS485_RX_ExInterrupt,"ax",%progbits
  54              		.align	2
  55              		.global	ISR_RS485_RX_ExInterrupt
  56              		.thumb
  57              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 2


  58              		.type	ISR_RS485_RX_ExInterrupt, %function
  59              	ISR_RS485_RX_ExInterrupt:
  60              	.LFB64:
  61              		.file 1 "..\\src\\interruptions.c"
   1:..\src/interruptions.c **** // ----------------------------------------------------------------------------
   2:..\src/interruptions.c **** // BSD 3-Clause License
   3:..\src/interruptions.c **** 
   4:..\src/interruptions.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/interruptions.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/interruptions.c **** // All rights reserved.
   7:..\src/interruptions.c **** 
   8:..\src/interruptions.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/interruptions.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/interruptions.c **** 
  11:..\src/interruptions.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/interruptions.c **** //   list of conditions and the following disclaimer.
  13:..\src/interruptions.c **** 
  14:..\src/interruptions.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/interruptions.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/interruptions.c **** //   and/or other materials provided with the distribution.
  17:..\src/interruptions.c **** 
  18:..\src/interruptions.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/interruptions.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/interruptions.c **** //   this software without specific prior written permission.
  21:..\src/interruptions.c **** 
  22:..\src/interruptions.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/interruptions.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:..\src/interruptions.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/interruptions.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/interruptions.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/interruptions.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/interruptions.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/interruptions.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/interruptions.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/interruptions.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/interruptions.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/interruptions.c **** // ----------------------------------------------------------------------------
  34:..\src/interruptions.c **** 
  35:..\src/interruptions.c **** /**
  36:..\src/interruptions.c **** * \file         interruptions.c
  37:..\src/interruptions.c **** *
  38:..\src/interruptions.c **** * \brief        Interruption handling and firmware core functions
  39:..\src/interruptions.c **** * \date         March 20th, 2020
  40:..\src/interruptions.c **** * \author       _Centro "E.Piaggio"_
  41:..\src/interruptions.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42:..\src/interruptions.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  43:..\src/interruptions.c **** */
  44:..\src/interruptions.c **** 
  45:..\src/interruptions.c **** 
  46:..\src/interruptions.c **** //=================================================================     includes
  47:..\src/interruptions.c **** #include "interruptions.h"
  48:..\src/interruptions.c **** #include "vibrotactile_control.h"
  49:..\src/interruptions.c **** //==============================================================================
  50:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  51:..\src/interruptions.c **** //==============================================================================
  52:..\src/interruptions.c **** // Processing RS-485 data frame:
  53:..\src/interruptions.c **** //
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 3


  54:..\src/interruptions.c **** // - 0:     Waits for beginning characters
  55:..\src/interruptions.c **** // - 1:     Waits for ID;
  56:..\src/interruptions.c **** // - 2:     Data length;
  57:..\src/interruptions.c **** // - 3:     Receive all bytes;
  58:..\src/interruptions.c **** // - 4:     Wait for another device end of transmission;
  59:..\src/interruptions.c **** //
  60:..\src/interruptions.c **** //==============================================================================
  61:..\src/interruptions.c **** 
  62:..\src/interruptions.c **** // PWM values needed to obtain 11.5 V given a certain input tension
  63:..\src/interruptions.c **** // Numbers are sperimentally calculated //[index] (millivolts)
  64:..\src/interruptions.c **** static const uint8 pwm_preload_values[29] = {100,    //0 (11500)
  65:..\src/interruptions.c ****                                               83,
  66:..\src/interruptions.c ****                                               78,
  67:..\src/interruptions.c ****                                               76,
  68:..\src/interruptions.c ****                                               74,
  69:..\src/interruptions.c ****                                               72,    //5 (14000)
  70:..\src/interruptions.c ****                                               70,
  71:..\src/interruptions.c ****                                               68,
  72:..\src/interruptions.c ****                                               67,
  73:..\src/interruptions.c ****                                               65,
  74:..\src/interruptions.c ****                                               64,    //10 (16500)
  75:..\src/interruptions.c ****                                               63,
  76:..\src/interruptions.c ****                                               62,
  77:..\src/interruptions.c ****                                               61,
  78:..\src/interruptions.c ****                                               60,
  79:..\src/interruptions.c ****                                               59,    //15 (19000)
  80:..\src/interruptions.c ****                                               58,
  81:..\src/interruptions.c ****                                               57,
  82:..\src/interruptions.c ****                                               56,
  83:..\src/interruptions.c ****                                               56,
  84:..\src/interruptions.c ****                                               55,    //20 (21500)
  85:..\src/interruptions.c ****                                               54,
  86:..\src/interruptions.c ****                                               54,
  87:..\src/interruptions.c ****                                               53,
  88:..\src/interruptions.c ****                                               52,
  89:..\src/interruptions.c ****                                               52,    //25 (24000)
  90:..\src/interruptions.c ****                                               52,
  91:..\src/interruptions.c ****                                               51,
  92:..\src/interruptions.c ****                                               51};   //28 (25500)
  93:..\src/interruptions.c **** 
  94:..\src/interruptions.c **** //==============================================================================
  95:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  96:..\src/interruptions.c **** //==============================================================================
  97:..\src/interruptions.c **** 
  98:..\src/interruptions.c **** CY_ISR(ISR_RS485_RX_ExInterrupt) {
  62              		.loc 1 98 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  99:..\src/interruptions.c **** 
 100:..\src/interruptions.c ****     // Set RS485 flag
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 4


 101:..\src/interruptions.c ****     
 102:..\src/interruptions.c ****     interrupt_flag = TRUE;
  72              		.loc 1 102 0
  73 0004 034B     		ldr	r3, .L2
  74 0006 0122     		movs	r2, #1
  75 0008 1A70     		strb	r2, [r3]
 103:..\src/interruptions.c ****      
 104:..\src/interruptions.c **** }
  76              		.loc 1 104 0
  77 000a 00BF     		nop
  78 000c BD46     		mov	sp, r7
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 000e 80BC     		pop	{r7}
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0010 7047     		bx	lr
  85              	.L3:
  86 0012 00BF     		.align	2
  87              	.L2:
  88 0014 00000000 		.word	interrupt_flag
  89              		.cfi_endproc
  90              	.LFE64:
  91              		.size	ISR_RS485_RX_ExInterrupt, .-ISR_RS485_RX_ExInterrupt
  92              		.section	.text.ISR_CYCLES_Handler,"ax",%progbits
  93              		.align	2
  94              		.global	ISR_CYCLES_Handler
  95              		.thumb
  96              		.thumb_func
  97              		.type	ISR_CYCLES_Handler, %function
  98              	ISR_CYCLES_Handler:
  99              	.LFB65:
 105:..\src/interruptions.c **** 
 106:..\src/interruptions.c **** //==============================================================================
 107:..\src/interruptions.c **** //                                                        CYCLES TIMER INTERRUPT
 108:..\src/interruptions.c **** //==============================================================================
 109:..\src/interruptions.c **** CY_ISR(ISR_CYCLES_Handler){
 100              		.loc 1 109 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0000 80B4     		push	{r7}
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110:..\src/interruptions.c **** 
 111:..\src/interruptions.c ****     // Set cycles interrupt flag
 112:..\src/interruptions.c ****     
 113:..\src/interruptions.c ****     cycles_interrupt_flag = TRUE;
 110              		.loc 1 113 0
 111 0004 044B     		ldr	r3, .L5
 112 0006 0122     		movs	r2, #1
 113 0008 1A70     		strb	r2, [r3]
 114:..\src/interruptions.c ****     
 115:..\src/interruptions.c ****     CYCLES_TIMER_STATUS;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 5


 114              		.loc 1 115 0
 115 000a 044B     		ldr	r3, .L5+4
 116 000c 1B78     		ldrb	r3, [r3]
 116:..\src/interruptions.c **** 
 117:..\src/interruptions.c **** }
 117              		.loc 1 117 0
 118 000e 00BF     		nop
 119 0010 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0012 80BC     		pop	{r7}
 123              		.cfi_restore 7
 124              		.cfi_def_cfa_offset 0
 125 0014 7047     		bx	lr
 126              	.L6:
 127 0016 00BF     		.align	2
 128              	.L5:
 129 0018 00000000 		.word	cycles_interrupt_flag
 130 001c 034F0040 		.word	1073762051
 131              		.cfi_endproc
 132              	.LFE65:
 133              		.size	ISR_CYCLES_Handler, .-ISR_CYCLES_Handler
 134              		.section	.text.interrupt_manager,"ax",%progbits
 135              		.align	2
 136              		.global	interrupt_manager
 137              		.thumb
 138              		.thumb_func
 139              		.type	interrupt_manager, %function
 140              	interrupt_manager:
 141              	.LFB66:
 118:..\src/interruptions.c **** 
 119:..\src/interruptions.c **** //==============================================================================
 120:..\src/interruptions.c **** //                                                             INTERRUPT MANAGER
 121:..\src/interruptions.c **** //==============================================================================
 122:..\src/interruptions.c **** // Manage interrupt from RS485 
 123:..\src/interruptions.c **** //==============================================================================
 124:..\src/interruptions.c **** // Processing RS-485 data frame:
 125:..\src/interruptions.c **** //
 126:..\src/interruptions.c **** // - WAIT_START:    Waits for beginning characters;
 127:..\src/interruptions.c **** // - WAIT_ID:       Waits for ID;
 128:..\src/interruptions.c **** // - WAIT_LENGTH:   Data length;
 129:..\src/interruptions.c **** // - RECEIVE:       Receive all bytes;
 130:..\src/interruptions.c **** // - UNLOAD:        Wait for another device end of transmission;
 131:..\src/interruptions.c **** //
 132:..\src/interruptions.c **** //==============================================================================
 133:..\src/interruptions.c **** 
 134:..\src/interruptions.c **** void interrupt_manager(){
 142              		.loc 1 134 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 82B0     		sub	sp, sp, #8
 151              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 6


 152 0004 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 135:..\src/interruptions.c **** 
 136:..\src/interruptions.c ****     
 137:..\src/interruptions.c ****     //===========================================     local variables definition
 138:..\src/interruptions.c **** 
 139:..\src/interruptions.c ****     static uint8 CYDATA state = WAIT_START;                      // state
 140:..\src/interruptions.c ****     
 141:..\src/interruptions.c ****     //------------------------------------------------- local data packet
 142:..\src/interruptions.c ****     static uint8 CYDATA data_packet_index;
 143:..\src/interruptions.c ****     static uint8 CYDATA data_packet_length;
 144:..\src/interruptions.c ****     static uint8 data_packet_buffer[128];                     
 145:..\src/interruptions.c ****     static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 146:..\src/interruptions.c ****     //-------------------------------------------------
 147:..\src/interruptions.c **** 
 148:..\src/interruptions.c ****     uint8 CYDATA    rx_data;                            // RS485 UART rx data
 149:..\src/interruptions.c ****     CYBIT           rx_data_type = TRUE;                       // my id?
 154              		.loc 1 149 0
 155 0006 0123     		movs	r3, #1
 156 0008 FB71     		strb	r3, [r7, #7]
 150:..\src/interruptions.c ****     uint8 CYDATA    package_count = 0;                     
 157              		.loc 1 150 0
 158 000a 0023     		movs	r3, #0
 159 000c BB71     		strb	r3, [r7, #6]
 151:..\src/interruptions.c **** 
 152:..\src/interruptions.c ****     //======================================================     receive routine
 153:..\src/interruptions.c ****     
 154:..\src/interruptions.c ****     while(UART_RS485_GetRxBufferSize() && (package_count < 100)){
 160              		.loc 1 154 0
 161 000e D6E0     		b	.L8
 162              	.L28:
 155:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 156:..\src/interruptions.c **** 
 157:..\src/interruptions.c ****         // Get next char
 158:..\src/interruptions.c ****         rx_data = UART_RS485_GetChar();
 163              		.loc 1 158 0
 164 0010 FFF7FEFF 		bl	UART_RS485_GetChar
 165 0014 0346     		mov	r3, r0
 166 0016 7B71     		strb	r3, [r7, #5]
 159:..\src/interruptions.c ****         
 160:..\src/interruptions.c ****         switch (state) {
 167              		.loc 1 160 0
 168 0018 6F4B     		ldr	r3, .L31
 169 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 001c 042B     		cmp	r3, #4
 171 001e 00F2CE80 		bhi	.L8
 172 0022 01A2     		adr	r2, .L10
 173 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 174              		.p2align 2
 175              	.L10:
 176 0028 3D000000 		.word	.L9+1
 177 002c A3000000 		.word	.L11+1
 178 0030 CD000000 		.word	.L12+1
 179 0034 1B010000 		.word	.L13+1
 180 0038 85010000 		.word	.L14+1
 181              		.p2align 1
 182              	.L9:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 7


 161:..\src/interruptions.c ****             //-----     wait for frame start     -------------------------------
 162:..\src/interruptions.c ****             case WAIT_START:
 163:..\src/interruptions.c ****             
 164:..\src/interruptions.c ****                 rx_queue[0] = rx_queue[1];
 183              		.loc 1 164 0
 184 003c 674B     		ldr	r3, .L31+4
 185 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 186 0040 664B     		ldr	r3, .L31+4
 187 0042 1A70     		strb	r2, [r3]
 165:..\src/interruptions.c ****                 rx_queue[1] = rx_queue[2];
 188              		.loc 1 165 0
 189 0044 654B     		ldr	r3, .L31+4
 190 0046 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 191 0048 644B     		ldr	r3, .L31+4
 192 004a 5A70     		strb	r2, [r3, #1]
 166:..\src/interruptions.c ****                 rx_queue[2] = rx_data;
 193              		.loc 1 166 0
 194 004c 634A     		ldr	r2, .L31+4
 195 004e 7B79     		ldrb	r3, [r7, #5]
 196 0050 9370     		strb	r3, [r2, #2]
 167:..\src/interruptions.c ****                 
 168:..\src/interruptions.c ****                 // Check for header configuration package
 169:..\src/interruptions.c ****                 if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 197              		.loc 1 169 0
 198 0052 624B     		ldr	r3, .L31+4
 199 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 200 0056 3A2B     		cmp	r3, #58
 201 0058 10D1     		bne	.L15
 202              		.loc 1 169 0 is_stmt 0 discriminator 1
 203 005a 604B     		ldr	r3, .L31+4
 204 005c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 205 005e 3A2B     		cmp	r3, #58
 206 0060 0CD1     		bne	.L15
 170:..\src/interruptions.c ****                     rx_queue[0] = 0;
 207              		.loc 1 170 0 is_stmt 1
 208 0062 5E4B     		ldr	r3, .L31+4
 209 0064 0022     		movs	r2, #0
 210 0066 1A70     		strb	r2, [r3]
 171:..\src/interruptions.c ****                     rx_queue[1] = 0;
 211              		.loc 1 171 0
 212 0068 5C4B     		ldr	r3, .L31+4
 213 006a 0022     		movs	r2, #0
 214 006c 5A70     		strb	r2, [r3, #1]
 172:..\src/interruptions.c ****                     rx_queue[2] = 0;
 215              		.loc 1 172 0
 216 006e 5B4B     		ldr	r3, .L31+4
 217 0070 0022     		movs	r2, #0
 218 0072 9A70     		strb	r2, [r3, #2]
 173:..\src/interruptions.c ****                     state       = WAIT_ID;                    
 219              		.loc 1 173 0
 220 0074 584B     		ldr	r3, .L31
 221 0076 0122     		movs	r2, #1
 222 0078 1A70     		strb	r2, [r3]
 223 007a 11E0     		b	.L16
 224              	.L15:
 174:..\src/interruptions.c ****                 }else
 175:..\src/interruptions.c ****                     if ((rx_queue[0] == 63) &&      //ASCII - ?
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 8


 225              		.loc 1 175 0
 226 007c 574B     		ldr	r3, .L31+4
 227 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 0080 3F2B     		cmp	r3, #63
 229 0082 40F09C80 		bne	.L8
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 230              		.loc 1 176 0 discriminator 1
 231 0086 554B     		ldr	r3, .L31+4
 232 0088 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 175:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 233              		.loc 1 175 0 discriminator 1
 234 008a 0D2B     		cmp	r3, #13
 235 008c 40F09780 		bne	.L8
 177:..\src/interruptions.c ****                         (rx_queue[2] == 10))        //ASCII - LF)
 236              		.loc 1 177 0
 237 0090 524B     		ldr	r3, .L31+4
 238 0092 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 239              		.loc 1 176 0
 240 0094 0A2B     		cmp	r3, #10
 241 0096 40F09280 		bne	.L8
 178:..\src/interruptions.c ****                         infoGet(INFO_ALL);
 242              		.loc 1 178 0
 243 009a 0020     		movs	r0, #0
 244 009c FFF7FEFF 		bl	infoGet
 245              	.L16:
 179:..\src/interruptions.c ****                 break;
 246              		.loc 1 179 0
 247 00a0 8DE0     		b	.L8
 248              	.L11:
 180:..\src/interruptions.c **** 
 181:..\src/interruptions.c ****             //-----     wait for id     ----------------------------------------
 182:..\src/interruptions.c ****             case  WAIT_ID:
 183:..\src/interruptions.c **** 
 184:..\src/interruptions.c ****                 // packet is for my ID or is broadcast
 185:..\src/interruptions.c **** #ifdef MASTER_FW
 186:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0 || (c_mem.MS.slave_comm_active && rx_da
 187:..\src/interruptions.c ****                    rx_data_type = FALSE;
 188:..\src/interruptions.c ****                 else                //packet is for others
 189:..\src/interruptions.c ****                     rx_data_type = TRUE;
 190:..\src/interruptions.c **** #else
 191:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0)
 249              		.loc 1 191 0
 250 00a2 4F4B     		ldr	r3, .L31+8
 251 00a4 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 252 00a8 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 253 00aa 9A42     		cmp	r2, r3
 254 00ac 02D0     		beq	.L17
 255              		.loc 1 191 0 is_stmt 0 discriminator 1
 256 00ae 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 257 00b0 002B     		cmp	r3, #0
 258 00b2 02D1     		bne	.L18
 259              	.L17:
 192:..\src/interruptions.c ****                     rx_data_type = FALSE;
 260              		.loc 1 192 0 is_stmt 1
 261 00b4 0023     		movs	r3, #0
 262 00b6 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 9


 263 00b8 01E0     		b	.L19
 264              	.L18:
 193:..\src/interruptions.c ****                 else                //packet is for others
 194:..\src/interruptions.c ****                     rx_data_type = TRUE;
 265              		.loc 1 194 0
 266 00ba 0123     		movs	r3, #1
 267 00bc FB71     		strb	r3, [r7, #7]
 268              	.L19:
 195:..\src/interruptions.c **** #endif                
 196:..\src/interruptions.c ****                 data_packet_length = 0;
 269              		.loc 1 196 0
 270 00be 494B     		ldr	r3, .L31+12
 271 00c0 0022     		movs	r2, #0
 272 00c2 1A70     		strb	r2, [r3]
 197:..\src/interruptions.c ****                 state = WAIT_LENGTH;
 273              		.loc 1 197 0
 274 00c4 444B     		ldr	r3, .L31
 275 00c6 0222     		movs	r2, #2
 276 00c8 1A70     		strb	r2, [r3]
 198:..\src/interruptions.c ****                 break;
 277              		.loc 1 198 0
 278 00ca 78E0     		b	.L8
 279              	.L12:
 199:..\src/interruptions.c **** 
 200:..\src/interruptions.c ****             //-----     wait for length     ------------------------------------
 201:..\src/interruptions.c ****             case  WAIT_LENGTH:
 202:..\src/interruptions.c **** 
 203:..\src/interruptions.c ****                 data_packet_length = rx_data;
 280              		.loc 1 203 0
 281 00cc 454A     		ldr	r2, .L31+12
 282 00ce 7B79     		ldrb	r3, [r7, #5]
 283 00d0 1370     		strb	r3, [r2]
 204:..\src/interruptions.c ****                 // check validity of pack length
 205:..\src/interruptions.c ****                 if (data_packet_length <= 1) {
 284              		.loc 1 205 0
 285 00d2 444B     		ldr	r3, .L31+12
 286 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287 00d6 012B     		cmp	r3, #1
 288 00d8 06D8     		bhi	.L20
 206:..\src/interruptions.c ****                     data_packet_length = 0;
 289              		.loc 1 206 0
 290 00da 424B     		ldr	r3, .L31+12
 291 00dc 0022     		movs	r2, #0
 292 00de 1A70     		strb	r2, [r3]
 207:..\src/interruptions.c ****                     state = WAIT_START;
 293              		.loc 1 207 0
 294 00e0 3D4B     		ldr	r3, .L31
 295 00e2 0022     		movs	r2, #0
 296 00e4 1A70     		strb	r2, [r3]
 297 00e6 6AE0     		b	.L8
 298              	.L20:
 208:..\src/interruptions.c ****                 } else if (data_packet_length > 128) {
 299              		.loc 1 208 0
 300 00e8 3E4B     		ldr	r3, .L31+12
 301 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302 00ec 802B     		cmp	r3, #128
 303 00ee 06D9     		bls	.L22
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 10


 209:..\src/interruptions.c ****                     data_packet_length = 0;
 304              		.loc 1 209 0
 305 00f0 3C4B     		ldr	r3, .L31+12
 306 00f2 0022     		movs	r2, #0
 307 00f4 1A70     		strb	r2, [r3]
 210:..\src/interruptions.c ****                     state = WAIT_START;
 308              		.loc 1 210 0
 309 00f6 384B     		ldr	r3, .L31
 310 00f8 0022     		movs	r2, #0
 311 00fa 1A70     		strb	r2, [r3]
 312 00fc 5FE0     		b	.L8
 313              	.L22:
 211:..\src/interruptions.c ****                 } else {
 212:..\src/interruptions.c ****                     data_packet_index = 0;
 314              		.loc 1 212 0
 315 00fe 3A4B     		ldr	r3, .L31+16
 316 0100 0022     		movs	r2, #0
 317 0102 1A70     		strb	r2, [r3]
 213:..\src/interruptions.c ****                     
 214:..\src/interruptions.c ****                     if(rx_data_type == FALSE)
 318              		.loc 1 214 0
 319 0104 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 320 0106 002B     		cmp	r3, #0
 321 0108 03D1     		bne	.L23
 215:..\src/interruptions.c ****                         state = RECEIVE;          // packet for me or broadcast
 322              		.loc 1 215 0
 323 010a 334B     		ldr	r3, .L31
 324 010c 0322     		movs	r2, #3
 325 010e 1A70     		strb	r2, [r3]
 326 0110 55E0     		b	.L8
 327              	.L23:
 216:..\src/interruptions.c ****                     else
 217:..\src/interruptions.c ****                         state = UNLOAD;           // packet for others
 328              		.loc 1 217 0
 329 0112 314B     		ldr	r3, .L31
 330 0114 0422     		movs	r2, #4
 331 0116 1A70     		strb	r2, [r3]
 218:..\src/interruptions.c ****                 }
 219:..\src/interruptions.c ****                 break;
 332              		.loc 1 219 0
 333 0118 51E0     		b	.L8
 334              	.L13:
 220:..\src/interruptions.c **** 
 221:..\src/interruptions.c ****             //-----     receiving     -------------------------------------------
 222:..\src/interruptions.c ****             case RECEIVE:
 223:..\src/interruptions.c **** 
 224:..\src/interruptions.c ****                 data_packet_buffer[data_packet_index] = rx_data;
 335              		.loc 1 224 0
 336 011a 334B     		ldr	r3, .L31+16
 337 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 011e 1946     		mov	r1, r3
 339 0120 324A     		ldr	r2, .L31+20
 340 0122 7B79     		ldrb	r3, [r7, #5]
 341 0124 5354     		strb	r3, [r2, r1]
 225:..\src/interruptions.c ****                 data_packet_index++;
 342              		.loc 1 225 0
 343 0126 304B     		ldr	r3, .L31+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 11


 344 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 345 012a 0133     		adds	r3, r3, #1
 346 012c DAB2     		uxtb	r2, r3
 347 012e 2E4B     		ldr	r3, .L31+16
 348 0130 1A70     		strb	r2, [r3]
 226:..\src/interruptions.c ****                 
 227:..\src/interruptions.c ****                 // check end of transmission
 228:..\src/interruptions.c ****                 if (data_packet_index >= data_packet_length) {
 349              		.loc 1 228 0
 350 0132 2D4B     		ldr	r3, .L31+16
 351 0134 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 352 0136 2B4B     		ldr	r3, .L31+12
 353 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 354 013a 9A42     		cmp	r2, r3
 355 013c 3FD3     		bcc	.L8
 229:..\src/interruptions.c ****                     // verify if frame ID corresponded to the device ID
 230:..\src/interruptions.c ****                     if (rx_data_type == FALSE) {
 356              		.loc 1 230 0
 357 013e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 358 0140 002B     		cmp	r3, #0
 359 0142 12D1     		bne	.L25
 231:..\src/interruptions.c ****                         // copying data from buffer to global packet
 232:..\src/interruptions.c ****                         memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 360              		.loc 1 232 0
 361 0144 274B     		ldr	r3, .L31+12
 362 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 363 0148 1A46     		mov	r2, r3
 364 014a 2849     		ldr	r1, .L31+20
 365 014c 2848     		ldr	r0, .L31+24
 366 014e FFF7FEFF 		bl	memcpy
 233:..\src/interruptions.c ****                         g_rx.length = data_packet_length;
 367              		.loc 1 233 0
 368 0152 244B     		ldr	r3, .L31+12
 369 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 370 0156 1AB2     		sxth	r2, r3
 371 0158 254B     		ldr	r3, .L31+24
 372 015a A3F88020 		strh	r2, [r3, #128]	@ movhi
 234:..\src/interruptions.c ****                         g_rx.ready  = 1;
 373              		.loc 1 234 0
 374 015e 244B     		ldr	r3, .L31+24
 375 0160 0122     		movs	r2, #1
 376 0162 83F88420 		strb	r2, [r3, #132]
 235:..\src/interruptions.c ****                         commProcess();
 377              		.loc 1 235 0
 378 0166 FFF7FEFF 		bl	commProcess
 379              	.L25:
 236:..\src/interruptions.c ****                     }
 237:..\src/interruptions.c ****                     
 238:..\src/interruptions.c ****                     data_packet_index  = 0;
 380              		.loc 1 238 0
 381 016a 1F4B     		ldr	r3, .L31+16
 382 016c 0022     		movs	r2, #0
 383 016e 1A70     		strb	r2, [r3]
 239:..\src/interruptions.c ****                     data_packet_length = 0;
 384              		.loc 1 239 0
 385 0170 1C4B     		ldr	r3, .L31+12
 386 0172 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 12


 387 0174 1A70     		strb	r2, [r3]
 240:..\src/interruptions.c ****                     state              = WAIT_START;
 388              		.loc 1 240 0
 389 0176 184B     		ldr	r3, .L31
 390 0178 0022     		movs	r2, #0
 391 017a 1A70     		strb	r2, [r3]
 241:..\src/interruptions.c ****                     package_count++;
 392              		.loc 1 241 0
 393 017c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 394 017e 0133     		adds	r3, r3, #1
 395 0180 BB71     		strb	r3, [r7, #6]
 242:..\src/interruptions.c ****                 
 243:..\src/interruptions.c ****                 }
 244:..\src/interruptions.c ****                 break;
 396              		.loc 1 244 0
 397 0182 1CE0     		b	.L8
 398              	.L14:
 245:..\src/interruptions.c **** 
 246:..\src/interruptions.c ****             //-----     other device is receving     ---------------------------
 247:..\src/interruptions.c ****             case UNLOAD:
 248:..\src/interruptions.c ****                 if (!(--data_packet_length)) {
 399              		.loc 1 248 0
 400 0184 174B     		ldr	r3, .L31+12
 401 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 402 0188 013B     		subs	r3, r3, #1
 403 018a DAB2     		uxtb	r2, r3
 404 018c 154B     		ldr	r3, .L31+12
 405 018e 1A70     		strb	r2, [r3]
 406 0190 144B     		ldr	r3, .L31+12
 407 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408 0194 002B     		cmp	r3, #0
 409 0196 11D1     		bne	.L30
 249:..\src/interruptions.c ****                     data_packet_index  = 0;
 410              		.loc 1 249 0
 411 0198 134B     		ldr	r3, .L31+16
 412 019a 0022     		movs	r2, #0
 413 019c 1A70     		strb	r2, [r3]
 250:..\src/interruptions.c ****                     data_packet_length = 0;
 414              		.loc 1 250 0
 415 019e 114B     		ldr	r3, .L31+12
 416 01a0 0022     		movs	r2, #0
 417 01a2 1A70     		strb	r2, [r3]
 251:..\src/interruptions.c ****                     RS485_CTS_Write(1);
 418              		.loc 1 251 0
 419 01a4 0120     		movs	r0, #1
 420 01a6 FFF7FEFF 		bl	RS485_CTS_Write
 252:..\src/interruptions.c ****                     RS485_CTS_Write(0);
 421              		.loc 1 252 0
 422 01aa 0020     		movs	r0, #0
 423 01ac FFF7FEFF 		bl	RS485_CTS_Write
 253:..\src/interruptions.c ****                     state              = WAIT_START;
 424              		.loc 1 253 0
 425 01b0 094B     		ldr	r3, .L31
 426 01b2 0022     		movs	r2, #0
 427 01b4 1A70     		strb	r2, [r3]
 254:..\src/interruptions.c ****                     package_count++;
 428              		.loc 1 254 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 13


 429 01b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 430 01b8 0133     		adds	r3, r3, #1
 431 01ba BB71     		strb	r3, [r7, #6]
 432              	.L30:
 255:..\src/interruptions.c ****                 }
 256:..\src/interruptions.c ****                 break;
 433              		.loc 1 256 0
 434 01bc 00BF     		nop
 435              	.L8:
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 436              		.loc 1 154 0
 437 01be FFF7FEFF 		bl	UART_RS485_GetRxBufferSize
 438 01c2 0346     		mov	r3, r0
 439 01c4 002B     		cmp	r3, #0
 440 01c6 03D0     		beq	.L29
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 441              		.loc 1 154 0 is_stmt 0 discriminator 1
 442 01c8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 443 01ca 632B     		cmp	r3, #99
 444 01cc 7FF620AF 		bls	.L28
 445              	.L29:
 257:..\src/interruptions.c ****         }
 258:..\src/interruptions.c ****     }
 259:..\src/interruptions.c **** }
 446              		.loc 1 259 0 is_stmt 1
 447 01d0 00BF     		nop
 448 01d2 0837     		adds	r7, r7, #8
 449              		.cfi_def_cfa_offset 8
 450 01d4 BD46     		mov	sp, r7
 451              		.cfi_def_cfa_register 13
 452              		@ sp needed
 453 01d6 80BD     		pop	{r7, pc}
 454              	.L32:
 455              		.align	2
 456              	.L31:
 457 01d8 00000000 		.word	state.10534
 458 01dc 04000000 		.word	rx_queue.10538
 459 01e0 00000000 		.word	c_mem
 460 01e4 07000000 		.word	data_packet_length.10536
 461 01e8 08000000 		.word	data_packet_index.10535
 462 01ec 0C000000 		.word	data_packet_buffer.10537
 463 01f0 00000000 		.word	g_rx
 464              		.cfi_endproc
 465              	.LFE66:
 466              		.size	interrupt_manager, .-interrupt_manager
 467              		.global	__aeabi_i2f
 468              		.global	__aeabi_fdiv
 469              		.section	.rodata
 470 001d 000000   		.align	2
 471              	.LC0:
 472 0020 00       		.ascii	"\000"
 473              		.section	.text.function_scheduler,"ax",%progbits
 474              		.align	2
 475              		.global	function_scheduler
 476              		.thumb
 477              		.thumb_func
 478              		.type	function_scheduler, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 14


 479              	function_scheduler:
 480              	.LFB67:
 260:..\src/interruptions.c **** //==============================================================================
 261:..\src/interruptions.c **** //                                                            FUNCTION SCHEDULER
 262:..\src/interruptions.c **** //==============================================================================
 263:..\src/interruptions.c **** // Call all the function with the right frequency
 264:..\src/interruptions.c **** //==============================================================================
 265:..\src/interruptions.c **** // Base frequency 5000 Hz (110 us - max. 200 us cycle time)
 266:..\src/interruptions.c **** //==============================================================================
 267:..\src/interruptions.c **** 
 268:..\src/interruptions.c **** void function_scheduler(void) {
 481              		.loc 1 268 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 17512
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485 0000 B0B5     		push	{r4, r5, r7, lr}
 486              		.cfi_def_cfa_offset 16
 487              		.cfi_offset 4, -16
 488              		.cfi_offset 5, -12
 489              		.cfi_offset 7, -8
 490              		.cfi_offset 14, -4
 491 0002 ADF5884D 		sub	sp, sp, #17408
 492              		.cfi_def_cfa_offset 17424
 493 0006 9AB0     		sub	sp, sp, #104
 494              		.cfi_def_cfa_offset 17528
 495 0008 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 269:..\src/interruptions.c ****  
 270:..\src/interruptions.c ****     static uint16 counter_calibration = DIV_INIT_VALUE;
 271:..\src/interruptions.c ****     static uint16 counter_tension_func = DIV_INIT_VALUE;
 272:..\src/interruptions.c ****     char info_[2500] = "";
 497              		.loc 1 272 0
 498 000a 07F56A53 		add	r3, r7, #14976
 499 000e 03F11C03 		add	r3, r3, #28
 500 0012 0022     		movs	r2, #0
 501 0014 1A60     		str	r2, [r3]
 502 0016 0433     		adds	r3, r3, #4
 503 0018 4FF41C62 		mov	r2, #2496
 504 001c 0021     		movs	r1, #0
 505 001e 1846     		mov	r0, r3
 506 0020 FFF7FEFF 		bl	memset
 273:..\src/interruptions.c ****     
 274:..\src/interruptions.c ****     uint8 i;
 275:..\src/interruptions.c ****     int32 tmp;
 276:..\src/interruptions.c ****     uint8 MOTOR_IDX = 0;
 507              		.loc 1 276 0
 508 0024 0023     		movs	r3, #0
 509 0026 07F58842 		add	r2, r7, #17408
 510 002a 02F16502 		add	r2, r2, #101
 511 002e 1370     		strb	r3, [r2]
 277:..\src/interruptions.c ****     uint8 SECOND_MOTOR_IDX = 1;
 512              		.loc 1 277 0
 513 0030 0123     		movs	r3, #1
 514 0032 07F58842 		add	r2, r7, #17408
 515 0036 02F16402 		add	r2, r2, #100
 516 003a 1370     		strb	r3, [r2]
 278:..\src/interruptions.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 15


 279:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x00);
 517              		.loc 1 279 0
 518 003c 0020     		movs	r0, #0
 519 003e FFF7FEFF 		bl	MY_TIMER_REG_Write
 280:..\src/interruptions.c ****     timer_value0 = (uint32)MY_TIMER_ReadCounter();
 520              		.loc 1 280 0
 521 0042 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 522 0046 0346     		mov	r3, r0
 523 0048 1A46     		mov	r2, r3
 524 004a 894B     		ldr	r3, .L87
 525 004c 1A80     		strh	r2, [r3]	@ movhi
 281:..\src/interruptions.c ****     // Start ADC Conversion, SOC = 1
 282:..\src/interruptions.c **** 
 283:..\src/interruptions.c ****     ADC_SOC_Write(0x01); 
 526              		.loc 1 283 0
 527 004e 0120     		movs	r0, #1
 528 0050 FFF7FEFF 		bl	ADC_SOC_Write
 284:..\src/interruptions.c ****     
 285:..\src/interruptions.c ****     // Check Interrupt 
 286:..\src/interruptions.c **** 
 287:..\src/interruptions.c ****     if (interrupt_flag){
 529              		.loc 1 287 0
 530 0054 874B     		ldr	r3, .L87+4
 531 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 532 0058 002B     		cmp	r3, #0
 533 005a 04D0     		beq	.L34
 288:..\src/interruptions.c ****         interrupt_flag = FALSE;
 534              		.loc 1 288 0
 535 005c 854B     		ldr	r3, .L87+4
 536 005e 0022     		movs	r2, #0
 537 0060 1A70     		strb	r2, [r3]
 289:..\src/interruptions.c ****         interrupt_manager();
 538              		.loc 1 289 0
 539 0062 FFF7FEFF 		bl	interrupt_manager
 540              	.L34:
 290:..\src/interruptions.c ****     }
 291:..\src/interruptions.c ****     
 292:..\src/interruptions.c ****         //---------------------------------- Read IMUs
 293:..\src/interruptions.c ****     if (c_mem.imu.read_imu_flag) {
 541              		.loc 1 293 0
 542 0066 844B     		ldr	r3, .L87+8
 543 0068 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 544 006c 002B     		cmp	r3, #0
 545 006e 0AD0     		beq	.L35
 294:..\src/interruptions.c ****         ReadAllIMUs();      // IMU reading is atomic, no RS485 request is handled
 546              		.loc 1 294 0
 547 0070 FFF7FEFF 		bl	ReadAllIMUs
 295:..\src/interruptions.c ****         
 296:..\src/interruptions.c ****         if (interrupt_flag){
 548              		.loc 1 296 0
 549 0074 7F4B     		ldr	r3, .L87+4
 550 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 551 0078 002B     		cmp	r3, #0
 552 007a 04D0     		beq	.L35
 297:..\src/interruptions.c ****             interrupt_flag = FALSE;
 553              		.loc 1 297 0
 554 007c 7D4B     		ldr	r3, .L87+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 16


 555 007e 0022     		movs	r2, #0
 556 0080 1A70     		strb	r2, [r3]
 298:..\src/interruptions.c ****             interrupt_manager();
 557              		.loc 1 298 0
 558 0082 FFF7FEFF 		bl	interrupt_manager
 559              	.L35:
 299:..\src/interruptions.c ****         }
 300:..\src/interruptions.c ****     }
 301:..\src/interruptions.c ****     
 302:..\src/interruptions.c ****     switch(c_mem.dev.dev_type){
 560              		.loc 1 302 0
 561 0086 7C4B     		ldr	r3, .L87+8
 562 0088 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 563 008c 042B     		cmp	r3, #4
 564 008e 00F23D82 		bhi	.L36
 565 0092 01A2     		adr	r2, .L38
 566 0094 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 567              		.p2align 2
 568              	.L38:
 569 0098 AD000000 		.word	.L37+1
 570 009c B1010000 		.word	.L39+1
 571 00a0 0F040000 		.word	.L40+1
 572 00a4 0F040000 		.word	.L40+1
 573 00a8 B1010000 		.word	.L39+1
 574              		.p2align 1
 575              	.L37:
 303:..\src/interruptions.c ****         case SOFTHAND_PRO:
 304:..\src/interruptions.c ****         
 305:..\src/interruptions.c ****             //---------------------------------- Get Encoders
 306:..\src/interruptions.c ****             
 307:..\src/interruptions.c ****             // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND
 308:..\src/interruptions.c ****             if (N_Encoder_Line_Connected[c_mem.motor[MOTOR_IDX].encoder_line] > 0) {
 576              		.loc 1 308 0
 577 00ac 07F58843 		add	r3, r7, #17408
 578 00b0 03F16503 		add	r3, r3, #101
 579 00b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 580 00b6 7049     		ldr	r1, .L87+8
 581 00b8 1346     		mov	r3, r2
 582 00ba DB00     		lsls	r3, r3, #3
 583 00bc 9B1A     		subs	r3, r3, r2
 584 00be 1B01     		lsls	r3, r3, #4
 585 00c0 0B44     		add	r3, r3, r1
 586 00c2 03F58873 		add	r3, r3, #272
 587 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 588 00c8 1A46     		mov	r2, r3
 589 00ca 6C4B     		ldr	r3, .L87+12
 590 00cc 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 591 00ce 002B     		cmp	r3, #0
 592 00d0 2BD0     		beq	.L41
 309:..\src/interruptions.c ****                 // Change CS only if there are attached encoders on the line
 310:..\src/interruptions.c ****                 Change_CS_EncoderLine(c_mem.motor[MOTOR_IDX].encoder_line);
 593              		.loc 1 310 0
 594 00d2 07F58843 		add	r3, r7, #17408
 595 00d6 03F16503 		add	r3, r3, #101
 596 00da 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 597 00dc 6649     		ldr	r1, .L87+8
 598 00de 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 17


 599 00e0 DB00     		lsls	r3, r3, #3
 600 00e2 9B1A     		subs	r3, r3, r2
 601 00e4 1B01     		lsls	r3, r3, #4
 602 00e6 0B44     		add	r3, r3, r1
 603 00e8 03F58873 		add	r3, r3, #272
 604 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 605 00ee 1846     		mov	r0, r3
 606 00f0 FFF7FEFF 		bl	Change_CS_EncoderLine
 311:..\src/interruptions.c ****                 
 312:..\src/interruptions.c ****                 encoder_reading_SPI(c_mem.motor[MOTOR_IDX].encoder_line, 0);    // assoc_motor = 0 
 607              		.loc 1 312 0
 608 00f4 07F58843 		add	r3, r7, #17408
 609 00f8 03F16503 		add	r3, r3, #101
 610 00fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 611 00fe 5E49     		ldr	r1, .L87+8
 612 0100 1346     		mov	r3, r2
 613 0102 DB00     		lsls	r3, r3, #3
 614 0104 9B1A     		subs	r3, r3, r2
 615 0106 1B01     		lsls	r3, r3, #4
 616 0108 0B44     		add	r3, r3, r1
 617 010a 03F58873 		add	r3, r3, #272
 618 010e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 619 0110 0021     		movs	r1, #0
 620 0112 1846     		mov	r0, r3
 621 0114 FFF7FEFF 		bl	encoder_reading_SPI
 313:..\src/interruptions.c **** 
 314:..\src/interruptions.c ****                 // Check Interrupt     
 315:..\src/interruptions.c ****                 
 316:..\src/interruptions.c ****                 if (interrupt_flag){
 622              		.loc 1 316 0
 623 0118 564B     		ldr	r3, .L87+4
 624 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 625 011c 002B     		cmp	r3, #0
 626 011e 04D0     		beq	.L41
 317:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 627              		.loc 1 317 0
 628 0120 544B     		ldr	r3, .L87+4
 629 0122 0022     		movs	r2, #0
 630 0124 1A70     		strb	r2, [r3]
 318:..\src/interruptions.c ****                     interrupt_manager();
 631              		.loc 1 318 0
 632 0126 FFF7FEFF 		bl	interrupt_manager
 633              	.L41:
 319:..\src/interruptions.c ****                 }
 320:..\src/interruptions.c ****             }
 321:..\src/interruptions.c ****             
 322:..\src/interruptions.c ****             //---------------------------------- Control SH Motor
 323:..\src/interruptions.c ****             if (pos_reconstruct[c_mem.motor[MOTOR_IDX].encoder_line]){      // Once encoder line re
 634              		.loc 1 323 0
 635 012a 07F58843 		add	r3, r7, #17408
 636 012e 03F16503 		add	r3, r3, #101
 637 0132 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 638 0134 5049     		ldr	r1, .L87+8
 639 0136 1346     		mov	r3, r2
 640 0138 DB00     		lsls	r3, r3, #3
 641 013a 9B1A     		subs	r3, r3, r2
 642 013c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 18


 643 013e 0B44     		add	r3, r3, r1
 644 0140 03F58873 		add	r3, r3, #272
 645 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 646 0146 1A46     		mov	r2, r3
 647 0148 4D4B     		ldr	r3, .L87+16
 648 014a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 649 014c 002B     		cmp	r3, #0
 650 014e 24D0     		beq	.L42
 324:..\src/interruptions.c ****                 motor_control_SH();
 651              		.loc 1 324 0
 652 0150 FFF7FEFF 		bl	motor_control_SH
 325:..\src/interruptions.c ****                 
 326:..\src/interruptions.c ****                 // Check external reference before processing other serial data and right after mot
 327:..\src/interruptions.c ****                 if (c_mem.motor[MOTOR_IDX].not_revers_motor_flag == TRUE) {
 653              		.loc 1 327 0
 654 0154 07F58843 		add	r3, r7, #17408
 655 0158 03F16503 		add	r3, r3, #101
 656 015c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 657 015e 4649     		ldr	r1, .L87+8
 658 0160 1346     		mov	r3, r2
 659 0162 DB00     		lsls	r3, r3, #3
 660 0164 9B1A     		subs	r3, r3, r2
 661 0166 1B01     		lsls	r3, r3, #4
 662 0168 0B44     		add	r3, r3, r1
 663 016a 03F58973 		add	r3, r3, #274
 664 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 665 0170 012B     		cmp	r3, #1
 666 0172 12D1     		bne	.L42
 328:..\src/interruptions.c ****                     if (c_mem.motor[MOTOR_IDX].input_mode == INPUT_MODE_EXTERNAL) {
 667              		.loc 1 328 0
 668 0174 07F58843 		add	r3, r7, #17408
 669 0178 03F16503 		add	r3, r3, #101
 670 017c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 671 017e 3E49     		ldr	r1, .L87+8
 672 0180 1346     		mov	r3, r2
 673 0182 DB00     		lsls	r3, r3, #3
 674 0184 9B1A     		subs	r3, r3, r2
 675 0186 1B01     		lsls	r3, r3, #4
 676 0188 0B44     		add	r3, r3, r1
 677 018a 03F58773 		add	r3, r3, #270
 678 018e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 679 0190 002B     		cmp	r3, #0
 680 0192 02D1     		bne	.L42
 329:..\src/interruptions.c ****                         change_ext_ref_flag = FALSE;
 681              		.loc 1 329 0
 682 0194 3B4B     		ldr	r3, .L87+20
 683 0196 0022     		movs	r2, #0
 684 0198 1A70     		strb	r2, [r3]
 685              	.L42:
 330:..\src/interruptions.c ****                     }   
 331:..\src/interruptions.c ****                 }
 332:..\src/interruptions.c ****             }
 333:..\src/interruptions.c **** 
 334:..\src/interruptions.c ****             // Check Interrupt 
 335:..\src/interruptions.c **** 
 336:..\src/interruptions.c ****             if (interrupt_flag){
 686              		.loc 1 336 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 19


 687 019a 364B     		ldr	r3, .L87+4
 688 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 689 019e 002B     		cmp	r3, #0
 690 01a0 00F0AF81 		beq	.L84
 337:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 691              		.loc 1 337 0
 692 01a4 334B     		ldr	r3, .L87+4
 693 01a6 0022     		movs	r2, #0
 694 01a8 1A70     		strb	r2, [r3]
 338:..\src/interruptions.c ****                 interrupt_manager();
 695              		.loc 1 338 0
 696 01aa FFF7FEFF 		bl	interrupt_manager
 339:..\src/interruptions.c ****             }
 340:..\src/interruptions.c ****             break;
 697              		.loc 1 340 0
 698 01ae A8E1     		b	.L84
 699              	.L39:
 700              	.LBB2:
 341:..\src/interruptions.c ****             
 342:..\src/interruptions.c ****         case GENERIC_2_MOTORS: case SOFTHAND_2_MOTORS:
 343:..\src/interruptions.c ****             
 344:..\src/interruptions.c ****             //---------------------------------- Get Encoders
 345:..\src/interruptions.c ****             for (uint8 i = 0; i < N_ENCODER_LINE_MAX; i++) {
 701              		.loc 1 345 0
 702 01b0 0023     		movs	r3, #0
 703 01b2 07F58842 		add	r2, r7, #17408
 704 01b6 02F16602 		add	r2, r2, #102
 705 01ba 1370     		strb	r3, [r2]
 706 01bc 89E0     		b	.L44
 707              	.L49:
 346:..\src/interruptions.c ****                 if (N_Encoder_Line_Connected[i] > 0) {
 708              		.loc 1 346 0
 709 01be 07F58843 		add	r3, r7, #17408
 710 01c2 03F16603 		add	r3, r3, #102
 711 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 712 01c8 2C4A     		ldr	r2, .L87+12
 713 01ca D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 714 01cc 002B     		cmp	r3, #0
 715 01ce 75D0     		beq	.L45
 347:..\src/interruptions.c ****                     // Change CS only if there are attached encoders on the line
 348:..\src/interruptions.c ****                     Change_CS_EncoderLine(i);
 716              		.loc 1 348 0
 717 01d0 07F58843 		add	r3, r7, #17408
 718 01d4 03F16603 		add	r3, r3, #102
 719 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 720 01da 1846     		mov	r0, r3
 721 01dc FFF7FEFF 		bl	Change_CS_EncoderLine
 349:..\src/interruptions.c ****                               
 350:..\src/interruptions.c ****                     if (c_mem.motor[MOTOR_IDX].encoder_line == i) {
 722              		.loc 1 350 0
 723 01e0 07F58843 		add	r3, r7, #17408
 724 01e4 03F16503 		add	r3, r3, #101
 725 01e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 726 01ea 2349     		ldr	r1, .L87+8
 727 01ec 1346     		mov	r3, r2
 728 01ee DB00     		lsls	r3, r3, #3
 729 01f0 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 20


 730 01f2 1B01     		lsls	r3, r3, #4
 731 01f4 0B44     		add	r3, r3, r1
 732 01f6 03F58873 		add	r3, r3, #272
 733 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 734 01fc 07F58842 		add	r2, r7, #17408
 735 0200 02F16602 		add	r2, r2, #102
 736 0204 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 737 0206 9A42     		cmp	r2, r3
 738 0208 0ED1     		bne	.L46
 351:..\src/interruptions.c ****                         // Check if the line is used to control motor or not
 352:..\src/interruptions.c ****                         encoder_reading_SPI(i, MOTOR_IDX); 
 739              		.loc 1 352 0
 740 020a 07F58843 		add	r3, r7, #17408
 741 020e 03F16503 		add	r3, r3, #101
 742 0212 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 743 0214 07F58843 		add	r3, r7, #17408
 744 0218 03F16603 		add	r3, r3, #102
 745 021c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 746 021e 1146     		mov	r1, r2
 747 0220 1846     		mov	r0, r3
 748 0222 FFF7FEFF 		bl	encoder_reading_SPI
 749 0226 40E0     		b	.L47
 750              	.L46:
 353:..\src/interruptions.c ****                     }
 354:..\src/interruptions.c ****                     else {
 355:..\src/interruptions.c ****                         if (c_mem.motor[SECOND_MOTOR_IDX].encoder_line == i) {
 751              		.loc 1 355 0
 752 0228 07F58843 		add	r3, r7, #17408
 753 022c 03F16403 		add	r3, r3, #100
 754 0230 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 755 0232 1149     		ldr	r1, .L87+8
 756 0234 1346     		mov	r3, r2
 757 0236 DB00     		lsls	r3, r3, #3
 758 0238 9B1A     		subs	r3, r3, r2
 759 023a 1B01     		lsls	r3, r3, #4
 760 023c 0B44     		add	r3, r3, r1
 761 023e 03F58873 		add	r3, r3, #272
 762 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 763 0244 07F58842 		add	r2, r7, #17408
 764 0248 02F16602 		add	r2, r2, #102
 765 024c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 766 024e 9A42     		cmp	r2, r3
 767 0250 1AD1     		bne	.L48
 356:..\src/interruptions.c ****                             // Check if the line is used to control motor or not
 357:..\src/interruptions.c ****                             encoder_reading_SPI(i, SECOND_MOTOR_IDX); 
 768              		.loc 1 357 0
 769 0252 07F58843 		add	r3, r7, #17408
 770 0256 03F16403 		add	r3, r3, #100
 771 025a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 772 025c 07F58843 		add	r3, r7, #17408
 773 0260 03F16603 		add	r3, r3, #102
 774 0264 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 775 0266 1146     		mov	r1, r2
 776 0268 1846     		mov	r0, r3
 777 026a FFF7FEFF 		bl	encoder_reading_SPI
 778 026e 1CE0     		b	.L47
 779              	.L88:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 21


 780              		.align	2
 781              	.L87:
 782 0270 00000000 		.word	timer_value0
 783 0274 00000000 		.word	interrupt_flag
 784 0278 00000000 		.word	c_mem
 785 027c 00000000 		.word	N_Encoder_Line_Connected
 786 0280 00000000 		.word	pos_reconstruct
 787 0284 00000000 		.word	change_ext_ref_flag
 788              	.L48:
 358:..\src/interruptions.c ****                         }
 359:..\src/interruptions.c ****                         else {
 360:..\src/interruptions.c ****                             // Get only raw encoder value
 361:..\src/interruptions.c ****                             ReadEncoderLine(N_Encoder_Line_Connected[i], i);
 789              		.loc 1 361 0
 790 0288 07F58843 		add	r3, r7, #17408
 791 028c 03F16603 		add	r3, r3, #102
 792 0290 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 793 0292 A44A     		ldr	r2, .L89
 794 0294 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 795 0296 1A46     		mov	r2, r3
 796 0298 07F58843 		add	r3, r7, #17408
 797 029c 03F16603 		add	r3, r3, #102
 798 02a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 799 02a2 1946     		mov	r1, r3
 800 02a4 1046     		mov	r0, r2
 801 02a6 FFF7FEFF 		bl	ReadEncoderLine
 802              	.L47:
 362:..\src/interruptions.c ****                             // Values are stored in Encoder_Value[i] vector
 363:..\src/interruptions.c ****                         }
 364:..\src/interruptions.c ****                     }
 365:..\src/interruptions.c **** 
 366:..\src/interruptions.c ****                     // Check Interrupt     
 367:..\src/interruptions.c ****                     
 368:..\src/interruptions.c ****                     if (interrupt_flag){
 803              		.loc 1 368 0
 804 02aa 9F4B     		ldr	r3, .L89+4
 805 02ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 806 02ae 002B     		cmp	r3, #0
 807 02b0 04D0     		beq	.L45
 369:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 808              		.loc 1 369 0
 809 02b2 9D4B     		ldr	r3, .L89+4
 810 02b4 0022     		movs	r2, #0
 811 02b6 1A70     		strb	r2, [r3]
 370:..\src/interruptions.c ****                         interrupt_manager();
 812              		.loc 1 370 0
 813 02b8 FFF7FEFF 		bl	interrupt_manager
 814              	.L45:
 345:..\src/interruptions.c ****                 if (N_Encoder_Line_Connected[i] > 0) {
 815              		.loc 1 345 0 discriminator 2
 816 02bc 07F58843 		add	r3, r7, #17408
 817 02c0 03F16603 		add	r3, r3, #102
 818 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 819 02c6 0133     		adds	r3, r3, #1
 820 02c8 07F58842 		add	r2, r7, #17408
 821 02cc 02F16602 		add	r2, r2, #102
 822 02d0 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 22


 823              	.L44:
 345:..\src/interruptions.c ****                 if (N_Encoder_Line_Connected[i] > 0) {
 824              		.loc 1 345 0 is_stmt 0 discriminator 1
 825 02d2 07F58843 		add	r3, r7, #17408
 826 02d6 03F16603 		add	r3, r3, #102
 827 02da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 02dc 012B     		cmp	r3, #1
 829 02de 7FF66EAF 		bls	.L49
 830              	.LBE2:
 371:..\src/interruptions.c ****                     }
 372:..\src/interruptions.c ****                 }
 373:..\src/interruptions.c ****             } 
 374:..\src/interruptions.c ****             
 375:..\src/interruptions.c ****             //---------------------------------- Control Motor
 376:..\src/interruptions.c ****             if (pos_reconstruct[c_mem.motor[MOTOR_IDX].encoder_line]){      // Once encoder line re
 831              		.loc 1 376 0 is_stmt 1
 832 02e2 07F58843 		add	r3, r7, #17408
 833 02e6 03F16503 		add	r3, r3, #101
 834 02ea 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 835 02ec 8F49     		ldr	r1, .L89+8
 836 02ee 1346     		mov	r3, r2
 837 02f0 DB00     		lsls	r3, r3, #3
 838 02f2 9B1A     		subs	r3, r3, r2
 839 02f4 1B01     		lsls	r3, r3, #4
 840 02f6 0B44     		add	r3, r3, r1
 841 02f8 03F58873 		add	r3, r3, #272
 842 02fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 843 02fe 1A46     		mov	r2, r3
 844 0300 8B4B     		ldr	r3, .L89+12
 845 0302 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 846 0304 002B     		cmp	r3, #0
 847 0306 2AD0     		beq	.L50
 377:..\src/interruptions.c ****                 // Control MOTOR_IDX motor (always active) according to motor driver type
 378:..\src/interruptions.c ****                 motor_control_generic(MOTOR_IDX);
 848              		.loc 1 378 0
 849 0308 07F58843 		add	r3, r7, #17408
 850 030c 03F16503 		add	r3, r3, #101
 851 0310 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 852 0312 1846     		mov	r0, r3
 853 0314 FFF7FEFF 		bl	motor_control_generic
 379:..\src/interruptions.c ****                 
 380:..\src/interruptions.c ****                 // Check external reference before processing other serial data and right after mot
 381:..\src/interruptions.c ****                 if (c_mem.motor[MOTOR_IDX].not_revers_motor_flag == TRUE) {
 854              		.loc 1 381 0
 855 0318 07F58843 		add	r3, r7, #17408
 856 031c 03F16503 		add	r3, r3, #101
 857 0320 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 858 0322 8249     		ldr	r1, .L89+8
 859 0324 1346     		mov	r3, r2
 860 0326 DB00     		lsls	r3, r3, #3
 861 0328 9B1A     		subs	r3, r3, r2
 862 032a 1B01     		lsls	r3, r3, #4
 863 032c 0B44     		add	r3, r3, r1
 864 032e 03F58973 		add	r3, r3, #274
 865 0332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 866 0334 012B     		cmp	r3, #1
 867 0336 12D1     		bne	.L50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 23


 382:..\src/interruptions.c ****                     if (c_mem.motor[MOTOR_IDX].input_mode == INPUT_MODE_EXTERNAL) {
 868              		.loc 1 382 0
 869 0338 07F58843 		add	r3, r7, #17408
 870 033c 03F16503 		add	r3, r3, #101
 871 0340 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 872 0342 7A49     		ldr	r1, .L89+8
 873 0344 1346     		mov	r3, r2
 874 0346 DB00     		lsls	r3, r3, #3
 875 0348 9B1A     		subs	r3, r3, r2
 876 034a 1B01     		lsls	r3, r3, #4
 877 034c 0B44     		add	r3, r3, r1
 878 034e 03F58773 		add	r3, r3, #270
 879 0352 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 880 0354 002B     		cmp	r3, #0
 881 0356 02D1     		bne	.L50
 383:..\src/interruptions.c ****                         change_ext_ref_flag = FALSE;
 882              		.loc 1 383 0
 883 0358 764B     		ldr	r3, .L89+16
 884 035a 0022     		movs	r2, #0
 885 035c 1A70     		strb	r2, [r3]
 886              	.L50:
 384:..\src/interruptions.c ****                     }   
 385:..\src/interruptions.c ****                 }
 386:..\src/interruptions.c ****                      
 387:..\src/interruptions.c ****                 
 388:..\src/interruptions.c ****             }
 389:..\src/interruptions.c ****             
 390:..\src/interruptions.c ****             // Check Interrupt 
 391:..\src/interruptions.c **** 
 392:..\src/interruptions.c ****             if (interrupt_flag){
 887              		.loc 1 392 0
 888 035e 724B     		ldr	r3, .L89+4
 889 0360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 890 0362 002B     		cmp	r3, #0
 891 0364 04D0     		beq	.L51
 393:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 892              		.loc 1 393 0
 893 0366 704B     		ldr	r3, .L89+4
 894 0368 0022     		movs	r2, #0
 895 036a 1A70     		strb	r2, [r3]
 394:..\src/interruptions.c ****                 interrupt_manager();
 896              		.loc 1 394 0
 897 036c FFF7FEFF 		bl	interrupt_manager
 898              	.L51:
 395:..\src/interruptions.c ****             }
 396:..\src/interruptions.c ****             
 397:..\src/interruptions.c ****             // Control 2nd motor (if necessary) according to motor driver type
 398:..\src/interruptions.c ****             if (c_mem.dev.use_2nd_motor_flag == TRUE){
 899              		.loc 1 398 0
 900 0370 6E4B     		ldr	r3, .L89+8
 901 0372 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 902 0376 012B     		cmp	r3, #1
 903 0378 40F0C580 		bne	.L85
 399:..\src/interruptions.c ****                 if (pos_reconstruct[c_mem.motor[SECOND_MOTOR_IDX].encoder_line]){      // Once enco
 904              		.loc 1 399 0
 905 037c 07F58843 		add	r3, r7, #17408
 906 0380 03F16403 		add	r3, r3, #100
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 24


 907 0384 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 908 0386 6949     		ldr	r1, .L89+8
 909 0388 1346     		mov	r3, r2
 910 038a DB00     		lsls	r3, r3, #3
 911 038c 9B1A     		subs	r3, r3, r2
 912 038e 1B01     		lsls	r3, r3, #4
 913 0390 0B44     		add	r3, r3, r1
 914 0392 03F58873 		add	r3, r3, #272
 915 0396 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 916 0398 1A46     		mov	r2, r3
 917 039a 654B     		ldr	r3, .L89+12
 918 039c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 919 039e 002B     		cmp	r3, #0
 920 03a0 2AD0     		beq	.L53
 400:..\src/interruptions.c ****                     motor_control_generic(SECOND_MOTOR_IDX);
 921              		.loc 1 400 0
 922 03a2 07F58843 		add	r3, r7, #17408
 923 03a6 03F16403 		add	r3, r3, #100
 924 03aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 925 03ac 1846     		mov	r0, r3
 926 03ae FFF7FEFF 		bl	motor_control_generic
 401:..\src/interruptions.c ****                     
 402:..\src/interruptions.c ****                     // Check external reference before processing other serial data and right after
 403:..\src/interruptions.c ****                     if (c_mem.motor[SECOND_MOTOR_IDX].not_revers_motor_flag == TRUE) {
 927              		.loc 1 403 0
 928 03b2 07F58843 		add	r3, r7, #17408
 929 03b6 03F16403 		add	r3, r3, #100
 930 03ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 931 03bc 5B49     		ldr	r1, .L89+8
 932 03be 1346     		mov	r3, r2
 933 03c0 DB00     		lsls	r3, r3, #3
 934 03c2 9B1A     		subs	r3, r3, r2
 935 03c4 1B01     		lsls	r3, r3, #4
 936 03c6 0B44     		add	r3, r3, r1
 937 03c8 03F58973 		add	r3, r3, #274
 938 03cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 939 03ce 012B     		cmp	r3, #1
 940 03d0 12D1     		bne	.L53
 404:..\src/interruptions.c ****                         if (c_mem.motor[SECOND_MOTOR_IDX].input_mode == INPUT_MODE_EXTERNAL) {
 941              		.loc 1 404 0
 942 03d2 07F58843 		add	r3, r7, #17408
 943 03d6 03F16403 		add	r3, r3, #100
 944 03da 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 945 03dc 5349     		ldr	r1, .L89+8
 946 03de 1346     		mov	r3, r2
 947 03e0 DB00     		lsls	r3, r3, #3
 948 03e2 9B1A     		subs	r3, r3, r2
 949 03e4 1B01     		lsls	r3, r3, #4
 950 03e6 0B44     		add	r3, r3, r1
 951 03e8 03F58773 		add	r3, r3, #270
 952 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 953 03ee 002B     		cmp	r3, #0
 954 03f0 02D1     		bne	.L53
 405:..\src/interruptions.c ****                             change_ext_ref_flag = FALSE;
 955              		.loc 1 405 0
 956 03f2 504B     		ldr	r3, .L89+16
 957 03f4 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 25


 958 03f6 1A70     		strb	r2, [r3]
 959              	.L53:
 406:..\src/interruptions.c ****                         }   
 407:..\src/interruptions.c ****                     }
 408:..\src/interruptions.c ****                     
 409:..\src/interruptions.c ****                   
 410:..\src/interruptions.c ****                 }
 411:..\src/interruptions.c ****                 // Check Interrupt 
 412:..\src/interruptions.c **** 
 413:..\src/interruptions.c ****                 if (interrupt_flag){
 960              		.loc 1 413 0
 961 03f8 4B4B     		ldr	r3, .L89+4
 962 03fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 963 03fc 002B     		cmp	r3, #0
 964 03fe 00F08280 		beq	.L85
 414:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 965              		.loc 1 414 0
 966 0402 494B     		ldr	r3, .L89+4
 967 0404 0022     		movs	r2, #0
 968 0406 1A70     		strb	r2, [r3]
 415:..\src/interruptions.c ****                     interrupt_manager();
 969              		.loc 1 415 0
 970 0408 FFF7FEFF 		bl	interrupt_manager
 416:..\src/interruptions.c ****                 }
 417:..\src/interruptions.c ****             }
 418:..\src/interruptions.c ****             
 419:..\src/interruptions.c ****             
 420:..\src/interruptions.c ****             
 421:..\src/interruptions.c ****                 
 422:..\src/interruptions.c ****             break;
 971              		.loc 1 422 0
 972 040c 7BE0     		b	.L85
 973              	.L40:
 423:..\src/interruptions.c ****             
 424:..\src/interruptions.c ****         case AIR_CHAMBERS_FB: case OTBK_ACT_WRIST_MS:
 425:..\src/interruptions.c ****             
 426:..\src/interruptions.c ****             //---------------------------------- Force Feedback control
 427:..\src/interruptions.c ****             if (master_mode && c_mem.MS.slave_comm_active) {
 974              		.loc 1 427 0
 975 040e 4A4B     		ldr	r3, .L89+20
 976 0410 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 977 0412 002B     		cmp	r3, #0
 978 0414 38D0     		beq	.L54
 979              		.loc 1 427 0 is_stmt 0 discriminator 1
 980 0416 454B     		ldr	r3, .L89+8
 981 0418 93F8C032 		ldrb	r3, [r3, #704]	@ zero_extendqisi2
 982 041c 002B     		cmp	r3, #0
 983 041e 33D0     		beq	.L54
 428:..\src/interruptions.c ****                 
 429:..\src/interruptions.c ****                 if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
 984              		.loc 1 429 0 is_stmt 1
 985 0420 424B     		ldr	r3, .L89+8
 986 0422 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 987 0426 022B     		cmp	r3, #2
 988 0428 08D1     		bne	.L55
 430:..\src/interruptions.c ****                     air_chambers_control(SECOND_MOTOR_IDX);
 989              		.loc 1 430 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 26


 990 042a 07F58843 		add	r3, r7, #17408
 991 042e 03F16403 		add	r3, r3, #100
 992 0432 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 993 0434 1846     		mov	r0, r3
 994 0436 FFF7FEFF 		bl	air_chambers_control
 995 043a 07E0     		b	.L56
 996              	.L55:
 431:..\src/interruptions.c ****                 }
 432:..\src/interruptions.c ****                 else{ //OTBK_ACT_WRIST_MS
 433:..\src/interruptions.c ****                     otbk_act_wrist_control(SECOND_MOTOR_IDX);
 997              		.loc 1 433 0
 998 043c 07F58843 		add	r3, r7, #17408
 999 0440 03F16403 		add	r3, r3, #100
 1000 0444 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1001 0446 1846     		mov	r0, r3
 1002 0448 FFF7FEFF 		bl	otbk_act_wrist_control
 1003              	.L56:
 434:..\src/interruptions.c ****                 }
 435:..\src/interruptions.c **** 
 436:..\src/interruptions.c ****                 // Check Interrupt 
 437:..\src/interruptions.c **** 
 438:..\src/interruptions.c ****                 if (interrupt_flag){
 1004              		.loc 1 438 0
 1005 044c 364B     		ldr	r3, .L89+4
 1006 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1007 0450 002B     		cmp	r3, #0
 1008 0452 04D0     		beq	.L57
 439:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 1009              		.loc 1 439 0
 1010 0454 344B     		ldr	r3, .L89+4
 1011 0456 0022     		movs	r2, #0
 1012 0458 1A70     		strb	r2, [r3]
 440:..\src/interruptions.c ****                     interrupt_manager();
 1013              		.loc 1 440 0
 1014 045a FFF7FEFF 		bl	interrupt_manager
 1015              	.L57:
 441:..\src/interruptions.c ****                 }
 442:..\src/interruptions.c ****             
 443:..\src/interruptions.c ****                 drive_slave(SECOND_MOTOR_IDX, c_mem.MS.slave_ID);
 1016              		.loc 1 443 0
 1017 045e 334B     		ldr	r3, .L89+8
 1018 0460 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 1019 0464 07F58843 		add	r3, r7, #17408
 1020 0468 03F16403 		add	r3, r3, #100
 1021 046c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1022 046e 1146     		mov	r1, r2
 1023 0470 1846     		mov	r0, r3
 1024 0472 FFF7FEFF 		bl	drive_slave
 444:..\src/interruptions.c ****             
 445:..\src/interruptions.c ****                 // Check Interrupt 
 446:..\src/interruptions.c **** 
 447:..\src/interruptions.c ****                 if (interrupt_flag){
 1025              		.loc 1 447 0
 1026 0476 2C4B     		ldr	r3, .L89+4
 1027 0478 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1028 047a 002B     		cmp	r3, #0
 1029 047c 04D0     		beq	.L54
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 27


 448:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 1030              		.loc 1 448 0
 1031 047e 2A4B     		ldr	r3, .L89+4
 1032 0480 0022     		movs	r2, #0
 1033 0482 1A70     		strb	r2, [r3]
 449:..\src/interruptions.c ****                     interrupt_manager();
 1034              		.loc 1 449 0
 1035 0484 FFF7FEFF 		bl	interrupt_manager
 1036              	.L54:
 450:..\src/interruptions.c ****                 }
 451:..\src/interruptions.c ****             }
 452:..\src/interruptions.c ****             if (!master_mode){
 1037              		.loc 1 452 0
 1038 0488 2B4B     		ldr	r3, .L89+20
 1039 048a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1040 048c 002B     		cmp	r3, #0
 1041 048e 11D1     		bne	.L58
 453:..\src/interruptions.c ****                 
 454:..\src/interruptions.c ****                 if (c_mem.MS.slave_comm_active) {
 1042              		.loc 1 454 0
 1043 0490 264B     		ldr	r3, .L89+8
 1044 0492 93F8C032 		ldrb	r3, [r3, #704]	@ zero_extendqisi2
 1045 0496 002B     		cmp	r3, #0
 1046 0498 01D0     		beq	.L59
 455:..\src/interruptions.c ****                     // Stop feedback motors
 456:..\src/interruptions.c ****                     stop_master_device();
 1047              		.loc 1 456 0
 1048 049a FFF7FEFF 		bl	stop_master_device
 1049              	.L59:
 457:..\src/interruptions.c ****                 }
 458:..\src/interruptions.c ****                 // Disable slave or motors
 459:..\src/interruptions.c ****                 deactivate_slaves();
 1050              		.loc 1 459 0
 1051 049e FFF7FEFF 		bl	deactivate_slaves
 460:..\src/interruptions.c ****                         
 461:..\src/interruptions.c ****                 // Check Interrupt 
 462:..\src/interruptions.c ****                 if (interrupt_flag){
 1052              		.loc 1 462 0
 1053 04a2 214B     		ldr	r3, .L89+4
 1054 04a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1055 04a6 002B     		cmp	r3, #0
 1056 04a8 04D0     		beq	.L58
 463:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 1057              		.loc 1 463 0
 1058 04aa 1F4B     		ldr	r3, .L89+4
 1059 04ac 0022     		movs	r2, #0
 1060 04ae 1A70     		strb	r2, [r3]
 464:..\src/interruptions.c ****                     interrupt_manager();
 1061              		.loc 1 464 0
 1062 04b0 FFF7FEFF 		bl	interrupt_manager
 1063              	.L58:
 465:..\src/interruptions.c ****                 } 
 466:..\src/interruptions.c ****             }
 467:..\src/interruptions.c ****     
 468:..\src/interruptions.c ****             // Control Master device main motor 
 469:..\src/interruptions.c ****             // (e.g. in AIR_CHAMBERS_FB device controls MOTOR_IDX motor [PUMP] with PWM control)
 470:..\src/interruptions.c ****             motor_control_generic(MOTOR_IDX);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 28


 1064              		.loc 1 470 0
 1065 04b4 07F58843 		add	r3, r7, #17408
 1066 04b8 03F16503 		add	r3, r3, #101
 1067 04bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1068 04be 1846     		mov	r0, r3
 1069 04c0 FFF7FEFF 		bl	motor_control_generic
 471:..\src/interruptions.c ****                         
 472:..\src/interruptions.c ****             // Always limit output voltage on the wrist
 473:..\src/interruptions.c ****              if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
 1070              		.loc 1 473 0
 1071 04c4 194B     		ldr	r3, .L89+8
 1072 04c6 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 1073 04ca 032B     		cmp	r3, #3
 1074 04cc 0FD1     		bne	.L60
 474:..\src/interruptions.c ****                 if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
 1075              		.loc 1 474 0
 1076 04ce 1B4B     		ldr	r3, .L89+24
 1077 04d0 9B68     		ldr	r3, [r3, #8]
 1078 04d2 432B     		cmp	r3, #67
 1079 04d4 02DD     		ble	.L61
 475:..\src/interruptions.c ****                     g_refNew[0].pwm = 67; // 67
 1080              		.loc 1 475 0
 1081 04d6 194B     		ldr	r3, .L89+24
 1082 04d8 4322     		movs	r2, #67
 1083 04da 9A60     		str	r2, [r3, #8]
 1084              	.L61:
 476:..\src/interruptions.c ****                 if (g_refNew[0].pwm < -67)
 1085              		.loc 1 476 0
 1086 04dc 174B     		ldr	r3, .L89+24
 1087 04de 9B68     		ldr	r3, [r3, #8]
 1088 04e0 13F1430F 		cmn	r3, #67
 1089 04e4 03DA     		bge	.L60
 477:..\src/interruptions.c ****                     g_refNew[0].pwm = -67;
 1090              		.loc 1 477 0
 1091 04e6 154B     		ldr	r3, .L89+24
 1092 04e8 6FF04202 		mvn	r2, #66
 1093 04ec 9A60     		str	r2, [r3, #8]
 1094              	.L60:
 478:..\src/interruptions.c ****             }
 479:..\src/interruptions.c ****             
 480:..\src/interruptions.c ****             // Check Interrupt 
 481:..\src/interruptions.c **** 
 482:..\src/interruptions.c ****             if (interrupt_flag){
 1095              		.loc 1 482 0
 1096 04ee 0E4B     		ldr	r3, .L89+4
 1097 04f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1098 04f2 002B     		cmp	r3, #0
 1099 04f4 09D0     		beq	.L86
 483:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 1100              		.loc 1 483 0
 1101 04f6 0C4B     		ldr	r3, .L89+4
 1102 04f8 0022     		movs	r2, #0
 1103 04fa 1A70     		strb	r2, [r3]
 484:..\src/interruptions.c ****                 interrupt_manager();
 1104              		.loc 1 484 0
 1105 04fc FFF7FEFF 		bl	interrupt_manager
 485:..\src/interruptions.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 29


 486:..\src/interruptions.c ****             
 487:..\src/interruptions.c ****             break;
 1106              		.loc 1 487 0
 1107 0500 03E0     		b	.L86
 1108              	.L84:
 340:..\src/interruptions.c ****             
 1109              		.loc 1 340 0
 1110 0502 00BF     		nop
 1111 0504 02E0     		b	.L36
 1112              	.L85:
 422:..\src/interruptions.c ****             
 1113              		.loc 1 422 0
 1114 0506 00BF     		nop
 1115 0508 00E0     		b	.L36
 1116              	.L86:
 1117              		.loc 1 487 0
 1118 050a 00BF     		nop
 1119              	.L36:
 488:..\src/interruptions.c ****     }
 489:..\src/interruptions.c **** 
 490:..\src/interruptions.c ****     // Compute vibrotactile feedback reference
 491:..\src/interruptions.c ****            
 492:..\src/interruptions.c ****                if(flag_vibrotactile){
 1120              		.loc 1 492 0
 1121 050c 0C4B     		ldr	r3, .L89+28
 1122 050e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1123 0510 002B     		cmp	r3, #0
 1124 0512 00F0C780 		beq	.L63
 493:..\src/interruptions.c ****              
 494:..\src/interruptions.c ****                 for (i = 1; i <= NUM_OF_EXTERNAL_IMU; i++) 
 1125              		.loc 1 494 0
 1126 0516 0123     		movs	r3, #1
 1127 0518 07F58842 		add	r2, r7, #17408
 1128 051c 02F16702 		add	r2, r2, #103
 1129 0520 1370     		strb	r3, [r2]
 1130 0522 B5E0     		b	.L64
 1131              	.L90:
 1132              		.align	2
 1133              	.L89:
 1134 0524 00000000 		.word	N_Encoder_Line_Connected
 1135 0528 00000000 		.word	interrupt_flag
 1136 052c 00000000 		.word	c_mem
 1137 0530 00000000 		.word	pos_reconstruct
 1138 0534 00000000 		.word	change_ext_ref_flag
 1139 0538 00000000 		.word	master_mode
 1140 053c 00000000 		.word	g_refNew
 1141 0540 00000000 		.word	flag_vibrotactile
 1142              	.L65:
 495:..\src/interruptions.c ****                 {         
 496:..\src/interruptions.c ****                                         
 497:..\src/interruptions.c ****                     tmp = g_imu[i].accel_value[0];
 1143              		.loc 1 497 0 discriminator 3
 1144 0544 07F58843 		add	r3, r7, #17408
 1145 0548 03F16703 		add	r3, r3, #103
 1146 054c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1147 054e C149     		ldr	r1, .L91
 1148 0550 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 30


 1149 0552 9B00     		lsls	r3, r3, #2
 1150 0554 1344     		add	r3, r3, r2
 1151 0556 DB00     		lsls	r3, r3, #3
 1152 0558 0B44     		add	r3, r3, r1
 1153 055a 0233     		adds	r3, r3, #2
 1154 055c B3F90030 		ldrsh	r3, [r3]
 1155 0560 07F58842 		add	r2, r7, #17408
 1156 0564 02F16002 		add	r2, r2, #96
 1157 0568 1360     		str	r3, [r2]
 498:..\src/interruptions.c ****                     accelerometer_matrix[i-1][0] = (float)(tmp * 61037) / 1e9 ;
 1158              		.loc 1 498 0 discriminator 3
 1159 056a 07F58843 		add	r3, r7, #17408
 1160 056e 03F16703 		add	r3, r3, #103
 1161 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1162 0574 5C1E     		subs	r4, r3, #1
 1163 0576 07F58843 		add	r3, r7, #17408
 1164 057a 03F16003 		add	r3, r3, #96
 1165 057e 1B68     		ldr	r3, [r3]
 1166 0580 4EF66D62 		movw	r2, #61037
 1167 0584 02FB03F3 		mul	r3, r2, r3
 1168 0588 1846     		mov	r0, r3
 1169 058a FFF7FEFF 		bl	__aeabi_i2f
 1170 058e 0346     		mov	r3, r0
 1171 0590 B149     		ldr	r1, .L91+4
 1172 0592 1846     		mov	r0, r3
 1173 0594 FFF7FEFF 		bl	__aeabi_fdiv
 1174 0598 0346     		mov	r3, r0
 1175 059a 1946     		mov	r1, r3
 1176 059c AF4A     		ldr	r2, .L91+8
 1177 059e 2346     		mov	r3, r4
 1178 05a0 5B00     		lsls	r3, r3, #1
 1179 05a2 2344     		add	r3, r3, r4
 1180 05a4 9B00     		lsls	r3, r3, #2
 1181 05a6 1344     		add	r3, r3, r2
 1182 05a8 1960     		str	r1, [r3]	@ float
 499:..\src/interruptions.c ****                              
 500:..\src/interruptions.c ****                     tmp = g_imu[i].accel_value[1];
 1183              		.loc 1 500 0 discriminator 3
 1184 05aa 07F58843 		add	r3, r7, #17408
 1185 05ae 03F16703 		add	r3, r3, #103
 1186 05b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1187 05b4 A749     		ldr	r1, .L91
 1188 05b6 1346     		mov	r3, r2
 1189 05b8 9B00     		lsls	r3, r3, #2
 1190 05ba 1344     		add	r3, r3, r2
 1191 05bc DB00     		lsls	r3, r3, #3
 1192 05be 0B44     		add	r3, r3, r1
 1193 05c0 0433     		adds	r3, r3, #4
 1194 05c2 B3F90030 		ldrsh	r3, [r3]
 1195 05c6 07F58842 		add	r2, r7, #17408
 1196 05ca 02F16002 		add	r2, r2, #96
 1197 05ce 1360     		str	r3, [r2]
 501:..\src/interruptions.c ****                     accelerometer_matrix[i-1][1] = (float)(tmp * 61037) / 1e9 ;  
 1198              		.loc 1 501 0 discriminator 3
 1199 05d0 07F58843 		add	r3, r7, #17408
 1200 05d4 03F16703 		add	r3, r3, #103
 1201 05d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 31


 1202 05da 5C1E     		subs	r4, r3, #1
 1203 05dc 07F58843 		add	r3, r7, #17408
 1204 05e0 03F16003 		add	r3, r3, #96
 1205 05e4 1B68     		ldr	r3, [r3]
 1206 05e6 4EF66D62 		movw	r2, #61037
 1207 05ea 02FB03F3 		mul	r3, r2, r3
 1208 05ee 1846     		mov	r0, r3
 1209 05f0 FFF7FEFF 		bl	__aeabi_i2f
 1210 05f4 0346     		mov	r3, r0
 1211 05f6 9849     		ldr	r1, .L91+4
 1212 05f8 1846     		mov	r0, r3
 1213 05fa FFF7FEFF 		bl	__aeabi_fdiv
 1214 05fe 0346     		mov	r3, r0
 1215 0600 1946     		mov	r1, r3
 1216 0602 964A     		ldr	r2, .L91+8
 1217 0604 2346     		mov	r3, r4
 1218 0606 5B00     		lsls	r3, r3, #1
 1219 0608 2344     		add	r3, r3, r4
 1220 060a 9B00     		lsls	r3, r3, #2
 1221 060c 1344     		add	r3, r3, r2
 1222 060e 0433     		adds	r3, r3, #4
 1223 0610 1960     		str	r1, [r3]	@ float
 502:..\src/interruptions.c ****                     
 503:..\src/interruptions.c ****                     tmp = g_imu[i].accel_value[2];
 1224              		.loc 1 503 0 discriminator 3
 1225 0612 07F58843 		add	r3, r7, #17408
 1226 0616 03F16703 		add	r3, r3, #103
 1227 061a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1228 061c 8D49     		ldr	r1, .L91
 1229 061e 1346     		mov	r3, r2
 1230 0620 9B00     		lsls	r3, r3, #2
 1231 0622 1344     		add	r3, r3, r2
 1232 0624 DB00     		lsls	r3, r3, #3
 1233 0626 0B44     		add	r3, r3, r1
 1234 0628 0633     		adds	r3, r3, #6
 1235 062a B3F90030 		ldrsh	r3, [r3]
 1236 062e 07F58842 		add	r2, r7, #17408
 1237 0632 02F16002 		add	r2, r2, #96
 1238 0636 1360     		str	r3, [r2]
 504:..\src/interruptions.c ****                     accelerometer_matrix[i-1][2] = (float)(tmp * 61037) / 1e9 ;
 1239              		.loc 1 504 0 discriminator 3
 1240 0638 07F58843 		add	r3, r7, #17408
 1241 063c 03F16703 		add	r3, r3, #103
 1242 0640 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1243 0642 5C1E     		subs	r4, r3, #1
 1244 0644 07F58843 		add	r3, r7, #17408
 1245 0648 03F16003 		add	r3, r3, #96
 1246 064c 1B68     		ldr	r3, [r3]
 1247 064e 4EF66D62 		movw	r2, #61037
 1248 0652 02FB03F3 		mul	r3, r2, r3
 1249 0656 1846     		mov	r0, r3
 1250 0658 FFF7FEFF 		bl	__aeabi_i2f
 1251 065c 0346     		mov	r3, r0
 1252 065e 7E49     		ldr	r1, .L91+4
 1253 0660 1846     		mov	r0, r3
 1254 0662 FFF7FEFF 		bl	__aeabi_fdiv
 1255 0666 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 32


 1256 0668 1946     		mov	r1, r3
 1257 066a 7C4A     		ldr	r2, .L91+8
 1258 066c 2346     		mov	r3, r4
 1259 066e 5B00     		lsls	r3, r3, #1
 1260 0670 2344     		add	r3, r3, r4
 1261 0672 9B00     		lsls	r3, r3, #2
 1262 0674 1344     		add	r3, r3, r2
 1263 0676 0833     		adds	r3, r3, #8
 1264 0678 1960     		str	r1, [r3]	@ float
 494:..\src/interruptions.c ****                 {         
 1265              		.loc 1 494 0 discriminator 3
 1266 067a 07F58843 		add	r3, r7, #17408
 1267 067e 03F16703 		add	r3, r3, #103
 1268 0682 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1269 0684 0133     		adds	r3, r3, #1
 1270 0686 07F58842 		add	r2, r7, #17408
 1271 068a 02F16702 		add	r2, r2, #103
 1272 068e 1370     		strb	r3, [r2]
 1273              	.L64:
 494:..\src/interruptions.c ****                 {         
 1274              		.loc 1 494 0 is_stmt 0 discriminator 1
 1275 0690 07F58843 		add	r3, r7, #17408
 1276 0694 03F16703 		add	r3, r3, #103
 1277 0698 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1278 069a 022B     		cmp	r3, #2
 1279 069c 7FF652AF 		bls	.L65
 505:..\src/interruptions.c ****                 }
 506:..\src/interruptions.c ****                 driveVibrotactileFeedback();
 1280              		.loc 1 506 0 is_stmt 1
 1281 06a0 FFF7FEFF 		bl	driveVibrotactileFeedback
 1282              	.L63:
 507:..\src/interruptions.c ****             }
 508:..\src/interruptions.c ****     //---------------------------------- Read conversion buffer - LOCK function
 509:..\src/interruptions.c **** 
 510:..\src/interruptions.c ****     analog_read_end();
 1283              		.loc 1 510 0
 1284 06a4 FFF7FEFF 		bl	analog_read_end
 511:..\src/interruptions.c **** 
 512:..\src/interruptions.c ****     if (interrupt_flag){
 1285              		.loc 1 512 0
 1286 06a8 6D4B     		ldr	r3, .L91+12
 1287 06aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1288 06ac 002B     		cmp	r3, #0
 1289 06ae 04D0     		beq	.L66
 513:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1290              		.loc 1 513 0
 1291 06b0 6B4B     		ldr	r3, .L91+12
 1292 06b2 0022     		movs	r2, #0
 1293 06b4 1A70     		strb	r2, [r3]
 514:..\src/interruptions.c ****         interrupt_manager();
 1294              		.loc 1 514 0
 1295 06b6 FFF7FEFF 		bl	interrupt_manager
 1296              	.L66:
 515:..\src/interruptions.c ****     }
 516:..\src/interruptions.c **** 
 517:..\src/interruptions.c ****     //---------------------------------- Control Overcurrent
 518:..\src/interruptions.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 33


 519:..\src/interruptions.c ****     overcurrent_control();
 1297              		.loc 1 519 0
 1298 06ba FFF7FEFF 		bl	overcurrent_control
 520:..\src/interruptions.c ****     
 521:..\src/interruptions.c ****     // Check Interrupt 
 522:..\src/interruptions.c ****     
 523:..\src/interruptions.c ****     if (interrupt_flag){
 1299              		.loc 1 523 0
 1300 06be 684B     		ldr	r3, .L91+12
 1301 06c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1302 06c2 002B     		cmp	r3, #0
 1303 06c4 04D0     		beq	.L67
 524:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1304              		.loc 1 524 0
 1305 06c6 664B     		ldr	r3, .L91+12
 1306 06c8 0022     		movs	r2, #0
 1307 06ca 1A70     		strb	r2, [r3]
 525:..\src/interruptions.c ****         interrupt_manager();
 1308              		.loc 1 525 0
 1309 06cc FFF7FEFF 		bl	interrupt_manager
 1310              	.L67:
 526:..\src/interruptions.c ****     }
 527:..\src/interruptions.c **** 
 528:..\src/interruptions.c ****     //---------------------------------- Calibration 
 529:..\src/interruptions.c **** 
 530:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 531:..\src/interruptions.c ****     if (calib.enabled == TRUE) {
 1311              		.loc 1 531 0
 1312 06d0 644B     		ldr	r3, .L91+16
 1313 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1314 06d4 012B     		cmp	r3, #1
 1315 06d6 0ED1     		bne	.L68
 532:..\src/interruptions.c ****         if (counter_calibration == CALIBRATION_DIV) {
 1316              		.loc 1 532 0
 1317 06d8 634B     		ldr	r3, .L91+20
 1318 06da 1B88     		ldrh	r3, [r3]
 1319 06dc 0A2B     		cmp	r3, #10
 1320 06de 04D1     		bne	.L69
 533:..\src/interruptions.c ****             calibration();
 1321              		.loc 1 533 0
 1322 06e0 FFF7FEFF 		bl	calibration
 534:..\src/interruptions.c ****             counter_calibration = 0;
 1323              		.loc 1 534 0
 1324 06e4 604B     		ldr	r3, .L91+20
 1325 06e6 0022     		movs	r2, #0
 1326 06e8 1A80     		strh	r2, [r3]	@ movhi
 1327              	.L69:
 535:..\src/interruptions.c ****         }
 536:..\src/interruptions.c ****         counter_calibration++;
 1328              		.loc 1 536 0
 1329 06ea 5F4B     		ldr	r3, .L91+20
 1330 06ec 1B88     		ldrh	r3, [r3]
 1331 06ee 0133     		adds	r3, r3, #1
 1332 06f0 9AB2     		uxth	r2, r3
 1333 06f2 5D4B     		ldr	r3, .L91+20
 1334 06f4 1A80     		strh	r2, [r3]	@ movhi
 1335              	.L68:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 34


 537:..\src/interruptions.c ****     }
 538:..\src/interruptions.c **** 
 539:..\src/interruptions.c ****     // Check Interrupt 
 540:..\src/interruptions.c ****     
 541:..\src/interruptions.c ****     if (interrupt_flag){
 1336              		.loc 1 541 0
 1337 06f6 5A4B     		ldr	r3, .L91+12
 1338 06f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1339 06fa 002B     		cmp	r3, #0
 1340 06fc 04D0     		beq	.L70
 542:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1341              		.loc 1 542 0
 1342 06fe 584B     		ldr	r3, .L91+12
 1343 0700 0022     		movs	r2, #0
 1344 0702 1A70     		strb	r2, [r3]
 543:..\src/interruptions.c ****         interrupt_manager();
 1345              		.loc 1 543 0
 1346 0704 FFF7FEFF 		bl	interrupt_manager
 1347              	.L70:
 544:..\src/interruptions.c ****     }
 545:..\src/interruptions.c ****     
 546:..\src/interruptions.c ****     if (c_mem.dev.dev_type == SOFTHAND_PRO){   
 1348              		.loc 1 546 0
 1349 0708 584B     		ldr	r3, .L91+24
 1350 070a 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 1351 070e 002B     		cmp	r3, #0
 1352 0710 1CD1     		bne	.L71
 547:..\src/interruptions.c ****     
 548:..\src/interruptions.c ****         //---------------------------------- Rest position check
 549:..\src/interruptions.c **** 
 550:..\src/interruptions.c ****         // Divider 10, freq = 500 Hz
 551:..\src/interruptions.c ****         if (c_mem.SH.rest_position_flag == TRUE){
 1353              		.loc 1 551 0
 1354 0712 564B     		ldr	r3, .L91+24
 1355 0714 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 1356 0718 012B     		cmp	r3, #1
 1357 071a 17D1     		bne	.L71
 552:..\src/interruptions.c ****             if (counter_calibration == CALIBRATION_DIV) {
 1358              		.loc 1 552 0
 1359 071c 524B     		ldr	r3, .L91+20
 1360 071e 1B88     		ldrh	r3, [r3]
 1361 0720 0A2B     		cmp	r3, #10
 1362 0722 04D1     		bne	.L72
 553:..\src/interruptions.c ****                     check_rest_position();
 1363              		.loc 1 553 0
 1364 0724 FFF7FEFF 		bl	check_rest_position
 554:..\src/interruptions.c ****                     counter_calibration = 0;
 1365              		.loc 1 554 0
 1366 0728 4F4B     		ldr	r3, .L91+20
 1367 072a 0022     		movs	r2, #0
 1368 072c 1A80     		strh	r2, [r3]	@ movhi
 1369              	.L72:
 555:..\src/interruptions.c ****             }
 556:..\src/interruptions.c ****             counter_calibration++;
 1370              		.loc 1 556 0
 1371 072e 4E4B     		ldr	r3, .L91+20
 1372 0730 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 35


 1373 0732 0133     		adds	r3, r3, #1
 1374 0734 9AB2     		uxth	r2, r3
 1375 0736 4C4B     		ldr	r3, .L91+20
 1376 0738 1A80     		strh	r2, [r3]	@ movhi
 557:..\src/interruptions.c **** 
 558:..\src/interruptions.c ****             // Check Interrupt     
 559:..\src/interruptions.c ****             if (interrupt_flag){
 1377              		.loc 1 559 0
 1378 073a 494B     		ldr	r3, .L91+12
 1379 073c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1380 073e 002B     		cmp	r3, #0
 1381 0740 04D0     		beq	.L71
 560:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 1382              		.loc 1 560 0
 1383 0742 474B     		ldr	r3, .L91+12
 1384 0744 0022     		movs	r2, #0
 1385 0746 1A70     		strb	r2, [r3]
 561:..\src/interruptions.c ****                 interrupt_manager();
 1386              		.loc 1 561 0
 1387 0748 FFF7FEFF 		bl	interrupt_manager
 1388              	.L71:
 562:..\src/interruptions.c ****             }
 563:..\src/interruptions.c ****         }
 564:..\src/interruptions.c ****         
 565:..\src/interruptions.c ****     }
 566:..\src/interruptions.c ****     
 567:..\src/interruptions.c ****      
 568:..\src/interruptions.c ****     //---------------------------------- EMG history Update
 569:..\src/interruptions.c ****     if (c_mem.exp.record_EMG_history_on_SD){
 1389              		.loc 1 569 0
 1390 074c 474B     		ldr	r3, .L91+24
 1391 074e 93F83432 		ldrb	r3, [r3, #564]	@ zero_extendqisi2
 1392 0752 002B     		cmp	r3, #0
 1393 0754 0AD0     		beq	.L73
 570:..\src/interruptions.c ****         
 571:..\src/interruptions.c ****         update_EMG_history();
 1394              		.loc 1 571 0
 1395 0756 FFF7FEFF 		bl	update_EMG_history
 572:..\src/interruptions.c **** 
 573:..\src/interruptions.c ****         // Check Interrupt 
 574:..\src/interruptions.c **** 
 575:..\src/interruptions.c ****         if (interrupt_flag){
 1396              		.loc 1 575 0
 1397 075a 414B     		ldr	r3, .L91+12
 1398 075c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1399 075e 002B     		cmp	r3, #0
 1400 0760 04D0     		beq	.L73
 576:..\src/interruptions.c ****             interrupt_flag = FALSE;
 1401              		.loc 1 576 0
 1402 0762 3F4B     		ldr	r3, .L91+12
 1403 0764 0022     		movs	r2, #0
 1404 0766 1A70     		strb	r2, [r3]
 577:..\src/interruptions.c ****             interrupt_manager();
 1405              		.loc 1 577 0
 1406 0768 FFF7FEFF 		bl	interrupt_manager
 1407              	.L73:
 578:..\src/interruptions.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 36


 579:..\src/interruptions.c ****     }
 580:..\src/interruptions.c **** 
 581:..\src/interruptions.c ****     
 582:..\src/interruptions.c ****     //---------------------------------- Control Cycles Counter
 583:..\src/interruptions.c **** 
 584:..\src/interruptions.c ****     if (pos_reconstruct[c_mem.motor[0].encoder_line]){      // Once Motor 0 encoder line reading is
 1408              		.loc 1 584 0
 1409 076c 3F4B     		ldr	r3, .L91+24
 1410 076e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 1411 0772 1A46     		mov	r2, r3
 1412 0774 3E4B     		ldr	r3, .L91+28
 1413 0776 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1414 0778 002B     		cmp	r3, #0
 1415 077a 01D0     		beq	.L74
 585:..\src/interruptions.c ****         cycles_counter_update();                            // Need at least one encoder to work
 1416              		.loc 1 585 0
 1417 077c FFF7FEFF 		bl	cycles_counter_update
 1418              	.L74:
 586:..\src/interruptions.c ****     }
 587:..\src/interruptions.c **** 
 588:..\src/interruptions.c ****     // Check Cycles Interrupt 
 589:..\src/interruptions.c ****     
 590:..\src/interruptions.c ****     if (cycles_interrupt_flag){
 1419              		.loc 1 590 0
 1420 0780 3C4B     		ldr	r3, .L91+32
 1421 0782 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 0784 002B     		cmp	r3, #0
 1423 0786 00F0A280 		beq	.L75
 591:..\src/interruptions.c ****         cycles_interrupt_flag = FALSE;
 1424              		.loc 1 591 0
 1425 078a 3A4B     		ldr	r3, .L91+32
 1426 078c 0022     		movs	r2, #0
 1427 078e 1A70     		strb	r2, [r3]
 592:..\src/interruptions.c **** 
 593:..\src/interruptions.c ****         // Cycles are written only every 120 seconds (CYCLES_TIMER interrupt)
 594:..\src/interruptions.c ****         // to save EEPROM writings (1M maximum)
 595:..\src/interruptions.c ****         if(can_write) {
 1428              		.loc 1 595 0
 1429 0790 394B     		ldr	r3, .L91+36
 1430 0792 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1431 0794 002B     		cmp	r3, #0
 1432 0796 54D0     		beq	.L76
 596:..\src/interruptions.c ****             cycles_status = PREPARE_DATA;
 1433              		.loc 1 596 0
 1434 0798 384B     		ldr	r3, .L91+40
 1435 079a 0022     		movs	r2, #0
 1436 079c 1A70     		strb	r2, [r3]
 597:..\src/interruptions.c ****             
 598:..\src/interruptions.c ****             //Update time variable
 599:..\src/interruptions.c ****             g_mem.cnt.total_runtime = g_mem.cnt.total_runtime + 120;  // Add 120 seconds.
 1437              		.loc 1 599 0
 1438 079e 384B     		ldr	r3, .L91+44
 1439 07a0 9B6D     		ldr	r3, [r3, #88]
 1440 07a2 7833     		adds	r3, r3, #120
 1441 07a4 364A     		ldr	r2, .L91+44
 1442 07a6 9365     		str	r3, [r2, #88]
 600:..\src/interruptions.c ****             
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 37


 601:..\src/interruptions.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 1443              		.loc 1 601 0
 1444 07a8 304B     		ldr	r3, .L91+24
 1445 07aa 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 1446 07ae 012B     		cmp	r3, #1
 1447 07b0 47D1     		bne	.L76
 602:..\src/interruptions.c ****                 
 603:..\src/interruptions.c ****                 store_RTC_current_time();
 1448              		.loc 1 603 0
 1449 07b2 FFF7FEFF 		bl	store_RTC_current_time
 604:..\src/interruptions.c ****                 
 605:..\src/interruptions.c ****                 //Write in SD card
 606:..\src/interruptions.c ****                 prepare_SD_info(info_);
 1450              		.loc 1 606 0
 1451 07b6 07F56A53 		add	r3, r7, #14976
 1452 07ba 03F11C03 		add	r3, r3, #28
 1453 07be 1846     		mov	r0, r3
 1454 07c0 FFF7FEFF 		bl	prepare_SD_info
 607:..\src/interruptions.c ****                 FS_Write(pFile, info_, strlen(info_));
 1455              		.loc 1 607 0
 1456 07c4 2F4B     		ldr	r3, .L91+48
 1457 07c6 1C68     		ldr	r4, [r3]
 1458 07c8 07F56A53 		add	r3, r7, #14976
 1459 07cc 03F11C03 		add	r3, r3, #28
 1460 07d0 1846     		mov	r0, r3
 1461 07d2 FFF7FEFF 		bl	strlen
 1462 07d6 0246     		mov	r2, r0
 1463 07d8 07F56A53 		add	r3, r7, #14976
 1464 07dc 03F11C03 		add	r3, r3, #28
 1465 07e0 1946     		mov	r1, r3
 1466 07e2 2046     		mov	r0, r4
 1467 07e4 FFF7FEFF 		bl	FS_Write
 608:..\src/interruptions.c ****                 
 609:..\src/interruptions.c ****                 if (c_mem.exp.record_EMG_history_on_SD){
 1468              		.loc 1 609 0
 1469 07e8 204B     		ldr	r3, .L91+24
 1470 07ea 93F83432 		ldrb	r3, [r3, #564]	@ zero_extendqisi2
 1471 07ee 002B     		cmp	r3, #0
 1472 07f0 27D0     		beq	.L76
 1473              	.LBB3:
 610:..\src/interruptions.c ****                     char EMG_history_info_[15000] = "";
 1474              		.loc 1 610 0
 1475 07f2 07F16803 		add	r3, r7, #104
 1476 07f6 643B     		subs	r3, r3, #100
 1477 07f8 0022     		movs	r2, #0
 1478 07fa 1A60     		str	r2, [r3]
 1479 07fc 0433     		adds	r3, r3, #4
 1480 07fe 43F69422 		movw	r2, #14996
 1481 0802 0021     		movs	r1, #0
 1482 0804 1846     		mov	r0, r3
 1483 0806 FFF7FEFF 		bl	memset
 611:..\src/interruptions.c ****                     strcpy(EMG_history_info_, "");
 1484              		.loc 1 611 0
 1485 080a 1F4B     		ldr	r3, .L91+52
 1486 080c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1487 080e 07F16803 		add	r3, r7, #104
 1488 0812 643B     		subs	r3, r3, #100
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 38


 1489 0814 1A70     		strb	r2, [r3]
 612:..\src/interruptions.c ****                     prepare_SD_EMG_history(EMG_history_info_);
 1490              		.loc 1 612 0
 1491 0816 07F16803 		add	r3, r7, #104
 1492 081a 643B     		subs	r3, r3, #100
 1493 081c 1846     		mov	r0, r3
 1494 081e FFF7FEFF 		bl	prepare_SD_EMG_history
 613:..\src/interruptions.c ****                     FS_Write(pEMGHFile, EMG_history_info_, strlen(EMG_history_info_));
 1495              		.loc 1 613 0
 1496 0822 1A4B     		ldr	r3, .L91+56
 1497 0824 1C68     		ldr	r4, [r3]
 1498 0826 07F16803 		add	r3, r7, #104
 1499 082a 643B     		subs	r3, r3, #100
 1500 082c 1846     		mov	r0, r3
 1501 082e FFF7FEFF 		bl	strlen
 1502 0832 0246     		mov	r2, r0
 1503 0834 07F16803 		add	r3, r7, #104
 1504 0838 643B     		subs	r3, r3, #100
 1505 083a 1946     		mov	r1, r3
 1506 083c 2046     		mov	r0, r4
 1507 083e FFF7FEFF 		bl	FS_Write
 1508              	.L76:
 1509              	.LBE3:
 614:..\src/interruptions.c ****                 }
 615:..\src/interruptions.c ****             }
 616:..\src/interruptions.c ****         }
 617:..\src/interruptions.c ****         
 618:..\src/interruptions.c ****         // Deactivate the motor just for the time data are written in the EEPROM
 619:..\src/interruptions.c ****         if (cycles_status == WRITE_CYCLES || cycles_status == WAIT_QUERY){
 1510              		.loc 1 619 0
 1511 0842 0E4B     		ldr	r3, .L91+40
 1512 0844 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1513 0846 012B     		cmp	r3, #1
 1514 0848 22D0     		beq	.L77
 1515              		.loc 1 619 0 is_stmt 0 discriminator 1
 1516 084a 0C4B     		ldr	r3, .L91+40
 1517 084c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1518 084e 022B     		cmp	r3, #2
 1519 0850 2CD1     		bne	.L78
 1520 0852 1DE0     		b	.L92
 1521              	.L93:
 1522              		.align	2
 1523              	.L91:
 1524 0854 00000000 		.word	g_imu
 1525 0858 286B6E4E 		.word	1315859240
 1526 085c 00000000 		.word	accelerometer_matrix
 1527 0860 00000000 		.word	interrupt_flag
 1528 0864 00000000 		.word	calib
 1529 0868 00000000 		.word	counter_calibration.10554
 1530 086c 00000000 		.word	c_mem
 1531 0870 00000000 		.word	pos_reconstruct
 1532 0874 00000000 		.word	cycles_interrupt_flag
 1533 0878 00000000 		.word	can_write
 1534 087c 00000000 		.word	cycles_status
 1535 0880 00000000 		.word	g_mem
 1536 0884 00000000 		.word	pFile
 1537 0888 20000000 		.word	.LC0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 39


 1538 088c 00000000 		.word	pEMGHFile
 1539              	.L92:
 1540              	.L77:
 620:..\src/interruptions.c ****             // Deactivate motors
 621:..\src/interruptions.c ****             enable_motor(0, 0x00); 
 1541              		.loc 1 621 0 is_stmt 1
 1542 0890 0021     		movs	r1, #0
 1543 0892 0020     		movs	r0, #0
 1544 0894 FFF7FEFF 		bl	enable_motor
 622:..\src/interruptions.c ****             if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 1545              		.loc 1 622 0
 1546 0898 4D4B     		ldr	r3, .L94
 1547 089a 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 1548 089e 012B     		cmp	r3, #1
 1549 08a0 15D1     		bne	.L75
 623:..\src/interruptions.c ****                 enable_motor(1, 0x00); 
 1550              		.loc 1 623 0
 1551 08a2 0021     		movs	r1, #0
 1552 08a4 0120     		movs	r0, #1
 1553 08a6 FFF7FEFF 		bl	enable_motor
 622:..\src/interruptions.c ****             if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 1554              		.loc 1 622 0
 1555 08aa 10E0     		b	.L75
 1556              	.L78:
 624:..\src/interruptions.c ****             }
 625:..\src/interruptions.c ****         }
 626:..\src/interruptions.c ****         else {
 627:..\src/interruptions.c ****             // Activate/Deactivate motors
 628:..\src/interruptions.c ****             enable_motor(0, g_ref[0].onoff); 
 1557              		.loc 1 628 0
 1558 08ac 494B     		ldr	r3, .L94+4
 1559 08ae 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1560 08b0 1946     		mov	r1, r3
 1561 08b2 0020     		movs	r0, #0
 1562 08b4 FFF7FEFF 		bl	enable_motor
 629:..\src/interruptions.c ****             if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 1563              		.loc 1 629 0
 1564 08b8 454B     		ldr	r3, .L94
 1565 08ba 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 1566 08be 012B     		cmp	r3, #1
 1567 08c0 05D1     		bne	.L75
 630:..\src/interruptions.c ****                 enable_motor(1, g_ref[1].onoff); 
 1568              		.loc 1 630 0
 1569 08c2 444B     		ldr	r3, .L94+4
 1570 08c4 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1571 08c6 1946     		mov	r1, r3
 1572 08c8 0120     		movs	r0, #1
 1573 08ca FFF7FEFF 		bl	enable_motor
 1574              	.L75:
 631:..\src/interruptions.c ****             }
 632:..\src/interruptions.c ****         }
 633:..\src/interruptions.c ****     }
 634:..\src/interruptions.c ****     
 635:..\src/interruptions.c ****     // Check Interrupt 
 636:..\src/interruptions.c ****     
 637:..\src/interruptions.c ****     if (interrupt_flag){
 1575              		.loc 1 637 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 40


 1576 08ce 424B     		ldr	r3, .L94+8
 1577 08d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1578 08d2 002B     		cmp	r3, #0
 1579 08d4 04D0     		beq	.L80
 638:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1580              		.loc 1 638 0
 1581 08d6 404B     		ldr	r3, .L94+8
 1582 08d8 0022     		movs	r2, #0
 1583 08da 1A70     		strb	r2, [r3]
 639:..\src/interruptions.c ****         interrupt_manager();
 1584              		.loc 1 639 0
 1585 08dc FFF7FEFF 		bl	interrupt_manager
 1586              	.L80:
 640:..\src/interruptions.c ****     }
 641:..\src/interruptions.c ****     
 642:..\src/interruptions.c ****     
 643:..\src/interruptions.c ****     //---------------------------------- Check battery
 644:..\src/interruptions.c **** 
 645:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 646:..\src/interruptions.c ****     if (counter_tension_func == CALIBRATION_DIV) {
 1587              		.loc 1 646 0
 1588 08e0 3E4B     		ldr	r3, .L94+12
 1589 08e2 1B88     		ldrh	r3, [r3]
 1590 08e4 0A2B     		cmp	r3, #10
 1591 08e6 04D1     		bne	.L81
 647:..\src/interruptions.c ****         battery_management();   
 1592              		.loc 1 647 0
 1593 08e8 FFF7FEFF 		bl	battery_management
 648:..\src/interruptions.c ****         counter_tension_func = 0;
 1594              		.loc 1 648 0
 1595 08ec 3B4B     		ldr	r3, .L94+12
 1596 08ee 0022     		movs	r2, #0
 1597 08f0 1A80     		strh	r2, [r3]	@ movhi
 1598              	.L81:
 649:..\src/interruptions.c ****     }
 650:..\src/interruptions.c ****     counter_tension_func++;
 1599              		.loc 1 650 0
 1600 08f2 3A4B     		ldr	r3, .L94+12
 1601 08f4 1B88     		ldrh	r3, [r3]
 1602 08f6 0133     		adds	r3, r3, #1
 1603 08f8 9AB2     		uxth	r2, r3
 1604 08fa 384B     		ldr	r3, .L94+12
 1605 08fc 1A80     		strh	r2, [r3]	@ movhi
 651:..\src/interruptions.c **** 
 652:..\src/interruptions.c ****     // Check Interrupt 
 653:..\src/interruptions.c ****     
 654:..\src/interruptions.c ****     if (interrupt_flag){
 1606              		.loc 1 654 0
 1607 08fe 364B     		ldr	r3, .L94+8
 1608 0900 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1609 0902 002B     		cmp	r3, #0
 1610 0904 04D0     		beq	.L82
 655:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1611              		.loc 1 655 0
 1612 0906 344B     		ldr	r3, .L94+8
 1613 0908 0022     		movs	r2, #0
 1614 090a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 41


 656:..\src/interruptions.c ****         interrupt_manager();
 1615              		.loc 1 656 0
 1616 090c FFF7FEFF 		bl	interrupt_manager
 1617              	.L82:
 657:..\src/interruptions.c ****     }
 658:..\src/interruptions.c ****    
 659:..\src/interruptions.c **** 
 660:..\src/interruptions.c ****    
 661:..\src/interruptions.c ****     //---------------------------------- Update States
 662:..\src/interruptions.c ****     
 663:..\src/interruptions.c ****     // Load k-1 state
 664:..\src/interruptions.c ****     memcpy( &g_adc_measOld, &g_adc_meas, sizeof(g_adc_meas) );
 1618              		.loc 1 664 0
 1619 0910 334A     		ldr	r2, .L94+16
 1620 0912 344B     		ldr	r3, .L94+20
 1621 0914 1446     		mov	r4, r2
 1622 0916 1D46     		mov	r5, r3
 1623 0918 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1624 091a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1625 091c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1626 091e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1627 0920 95E80300 		ldmia	r5, {r0, r1}
 1628 0924 84E80300 		stmia	r4, {r0, r1}
 665:..\src/interruptions.c ****     memcpy( &g_measOld, &g_meas, sizeof(g_meas) );
 1629              		.loc 1 665 0
 1630 0928 2F4A     		ldr	r2, .L94+24
 1631 092a 304B     		ldr	r3, .L94+28
 1632 092c 1046     		mov	r0, r2
 1633 092e 1946     		mov	r1, r3
 1634 0930 6823     		movs	r3, #104
 1635 0932 1A46     		mov	r2, r3
 1636 0934 FFF7FEFF 		bl	memcpy
 666:..\src/interruptions.c ****     memcpy( &g_refOld, &g_ref, sizeof(g_ref) );
 1637              		.loc 1 666 0
 1638 0938 2D4A     		ldr	r2, .L94+32
 1639 093a 264B     		ldr	r3, .L94+4
 1640 093c 1446     		mov	r4, r2
 1641 093e 1D46     		mov	r5, r3
 1642 0940 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1643 0942 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1644 0944 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1645 0948 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 667:..\src/interruptions.c **** 
 668:..\src/interruptions.c ****     // Load k+1 state        
 669:..\src/interruptions.c ****     memcpy( &g_ref, &g_refNew, sizeof(g_ref) );
 1646              		.loc 1 669 0
 1647 094c 214A     		ldr	r2, .L94+4
 1648 094e 294B     		ldr	r3, .L94+36
 1649 0950 1446     		mov	r4, r2
 1650 0952 1D46     		mov	r5, r3
 1651 0954 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1652 0956 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1653 0958 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1654 095c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 670:..\src/interruptions.c ****     memcpy( &g_imu, &g_imuNew, sizeof(g_imu) );
 1655              		.loc 1 670 0
 1656 0960 254A     		ldr	r2, .L94+40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 42


 1657 0962 264B     		ldr	r3, .L94+44
 1658 0964 1046     		mov	r0, r2
 1659 0966 1946     		mov	r1, r3
 1660 0968 C823     		movs	r3, #200
 1661 096a 1A46     		mov	r2, r3
 1662 096c FFF7FEFF 		bl	memcpy
 671:..\src/interruptions.c ****     memcpy( &g_ref_vibrotactile, &g_refNew_vibrotactile, sizeof(g_ref_vibrotactile) );    
 1663              		.loc 1 671 0
 1664 0970 234B     		ldr	r3, .L94+48
 1665 0972 244A     		ldr	r2, .L94+52
 1666 0974 92E80300 		ldmia	r2, {r0, r1}
 1667 0978 83E80300 		stmia	r3, {r0, r1}
 672:..\src/interruptions.c ****     
 673:..\src/interruptions.c ****     if (interrupt_flag){
 1668              		.loc 1 673 0
 1669 097c 164B     		ldr	r3, .L94+8
 1670 097e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1671 0980 002B     		cmp	r3, #0
 1672 0982 04D0     		beq	.L83
 674:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1673              		.loc 1 674 0
 1674 0984 144B     		ldr	r3, .L94+8
 1675 0986 0022     		movs	r2, #0
 1676 0988 1A70     		strb	r2, [r3]
 675:..\src/interruptions.c ****         interrupt_manager();
 1677              		.loc 1 675 0
 1678 098a FFF7FEFF 		bl	interrupt_manager
 1679              	.L83:
 676:..\src/interruptions.c ****     }
 677:..\src/interruptions.c **** 
 678:..\src/interruptions.c ****     timer_value = (uint16)MY_TIMER_ReadCounter();
 1680              		.loc 1 678 0
 1681 098e FFF7FEFF 		bl	MY_TIMER_ReadCounter
 1682 0992 0346     		mov	r3, r0
 1683 0994 1A46     		mov	r2, r3
 1684 0996 1C4B     		ldr	r3, .L94+56
 1685 0998 1A80     		strh	r2, [r3]	@ movhi
 679:..\src/interruptions.c ****     cycle_time = ((float)(timer_value0 - timer_value)/1000000.0);
 1686              		.loc 1 679 0
 1687 099a 1C4B     		ldr	r3, .L94+60
 1688 099c 1B88     		ldrh	r3, [r3]
 1689 099e 1A46     		mov	r2, r3
 1690 09a0 194B     		ldr	r3, .L94+56
 1691 09a2 1B88     		ldrh	r3, [r3]
 1692 09a4 D31A     		subs	r3, r2, r3
 1693 09a6 1846     		mov	r0, r3
 1694 09a8 FFF7FEFF 		bl	__aeabi_i2f
 1695 09ac 0346     		mov	r3, r0
 1696 09ae 1849     		ldr	r1, .L94+64
 1697 09b0 1846     		mov	r0, r3
 1698 09b2 FFF7FEFF 		bl	__aeabi_fdiv
 1699 09b6 0346     		mov	r3, r0
 1700 09b8 1A46     		mov	r2, r3
 1701 09ba 164B     		ldr	r3, .L94+68
 1702 09bc 1A60     		str	r2, [r3]	@ float
 680:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x01);   // reset timer
 1703              		.loc 1 680 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 43


 1704 09be 0120     		movs	r0, #1
 1705 09c0 FFF7FEFF 		bl	MY_TIMER_REG_Write
 681:..\src/interruptions.c **** 
 682:..\src/interruptions.c **** }
 1706              		.loc 1 682 0
 1707 09c4 00BF     		nop
 1708 09c6 07F58847 		add	r7, r7, #17408
 1709 09ca 6837     		adds	r7, r7, #104
 1710              		.cfi_def_cfa_offset 16
 1711 09cc BD46     		mov	sp, r7
 1712              		.cfi_def_cfa_register 13
 1713              		@ sp needed
 1714 09ce B0BD     		pop	{r4, r5, r7, pc}
 1715              	.L95:
 1716              		.align	2
 1717              	.L94:
 1718 09d0 00000000 		.word	g_mem
 1719 09d4 00000000 		.word	g_ref
 1720 09d8 00000000 		.word	interrupt_flag
 1721 09dc 02000000 		.word	counter_tension_func.10555
 1722 09e0 00000000 		.word	g_adc_measOld
 1723 09e4 00000000 		.word	g_adc_meas
 1724 09e8 00000000 		.word	g_measOld
 1725 09ec 00000000 		.word	g_meas
 1726 09f0 00000000 		.word	g_refOld
 1727 09f4 00000000 		.word	g_refNew
 1728 09f8 00000000 		.word	g_imu
 1729 09fc 00000000 		.word	g_imuNew
 1730 0a00 00000000 		.word	g_ref_vibrotactile
 1731 0a04 00000000 		.word	g_refNew_vibrotactile
 1732 0a08 00000000 		.word	timer_value
 1733 0a0c 00000000 		.word	timer_value0
 1734 0a10 00247449 		.word	1232348160
 1735 0a14 00000000 		.word	cycle_time
 1736              		.cfi_endproc
 1737              	.LFE67:
 1738              		.size	function_scheduler, .-function_scheduler
 1739              		.section	.text.compute_reference,"ax",%progbits
 1740              		.align	2
 1741              		.global	compute_reference
 1742              		.thumb
 1743              		.thumb_func
 1744              		.type	compute_reference, %function
 1745              	compute_reference:
 1746              	.LFB68:
 683:..\src/interruptions.c **** 
 684:..\src/interruptions.c **** //==============================================================================
 685:..\src/interruptions.c **** //                                                       COMPUTE MOTOR REFERENCE
 686:..\src/interruptions.c **** //==============================================================================
 687:..\src/interruptions.c **** void compute_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct st_ref* st_refOld_p) {
 1747              		.loc 1 687 0
 1748              		.cfi_startproc
 1749              		@ args = 0, pretend = 0, frame = 40
 1750              		@ frame_needed = 1, uses_anonymous_args = 0
 1751 0000 80B5     		push	{r7, lr}
 1752              		.cfi_def_cfa_offset 8
 1753              		.cfi_offset 7, -8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 44


 1754              		.cfi_offset 14, -4
 1755 0002 8CB0     		sub	sp, sp, #48
 1756              		.cfi_def_cfa_offset 56
 1757 0004 02AF     		add	r7, sp, #8
 1758              		.cfi_def_cfa 7, 48
 1759 0006 0346     		mov	r3, r0
 1760 0008 B960     		str	r1, [r7, #8]
 1761 000a 7A60     		str	r2, [r7, #4]
 1762 000c FB73     		strb	r3, [r7, #15]
 688:..\src/interruptions.c ****     
 689:..\src/interruptions.c ****     int32 CYDATA handle_value;
 690:..\src/interruptions.c ****     int32 CYDATA err_emg_1, err_emg_2;
 691:..\src/interruptions.c ****     struct st_motor* MOT = &c_mem.motor[motor_idx];      // SoftHand default motor
 1763              		.loc 1 691 0
 1764 000e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1765 0010 1346     		mov	r3, r2
 1766 0012 DB00     		lsls	r3, r3, #3
 1767 0014 9B1A     		subs	r3, r3, r2
 1768 0016 1B01     		lsls	r3, r3, #4
 1769 0018 B033     		adds	r3, r3, #176
 1770 001a A74A     		ldr	r2, .L160
 1771 001c 1344     		add	r3, r3, r2
 1772 001e 3B62     		str	r3, [r7, #32]
 692:..\src/interruptions.c ****     uint8 ENC_L = MOT->encoder_line;          // Associated encoder line
 1773              		.loc 1 692 0
 1774 0020 3B6A     		ldr	r3, [r7, #32]
 1775 0022 93F86030 		ldrb	r3, [r3, #96]
 1776 0026 FB77     		strb	r3, [r7, #31]
 693:..\src/interruptions.c ****     
 694:..\src/interruptions.c ****     static uint8 current_emg[NUM_OF_MOTORS] = {0, 0};   // 0 NONE
 695:..\src/interruptions.c ****                                                         // 1 EMG 1
 696:..\src/interruptions.c ****                                                         // 2 EMG 2
 697:..\src/interruptions.c ****                                                         // wait for both to get down
 698:..\src/interruptions.c ****     
 699:..\src/interruptions.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 1777              		.loc 1 699 0
 1778 0028 A44B     		ldr	r3, .L160+4
 1779 002a 1B68     		ldr	r3, [r3]
 1780 002c A24A     		ldr	r2, .L160
 1781 002e B2F8F021 		ldrh	r2, [r2, #496]
 1782 0032 9B1A     		subs	r3, r3, r2
 1783 0034 BB61     		str	r3, [r7, #24]
 700:..\src/interruptions.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 1784              		.loc 1 700 0
 1785 0036 A14B     		ldr	r3, .L160+4
 1786 0038 5B68     		ldr	r3, [r3, #4]
 1787 003a 9F4A     		ldr	r2, .L160
 1788 003c B2F8F221 		ldrh	r2, [r2, #498]
 1789 0040 9B1A     		subs	r3, r3, r2
 1790 0042 7B61     		str	r3, [r7, #20]
 701:..\src/interruptions.c ****     
 702:..\src/interruptions.c ****      // =========================== POSITION INPUT ==============================            
 703:..\src/interruptions.c ****     switch(MOT->input_mode) {
 1791              		.loc 1 703 0
 1792 0044 3B6A     		ldr	r3, [r7, #32]
 1793 0046 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 1794 004a 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 45


 1795 004c 062B     		cmp	r3, #6
 1796 004e 00F25182 		bhi	.L152
 1797 0052 01A2     		adr	r2, .L99
 1798 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1799              		.p2align 2
 1800              	.L99:
 1801 0058 75000000 		.word	.L98+1
 1802 005c 21020000 		.word	.L100+1
 1803 0060 C9020000 		.word	.L101+1
 1804 0064 31030000 		.word	.L102+1
 1805 0068 11040000 		.word	.L103+1
 1806 006c 4D010000 		.word	.L104+1
 1807 0070 5B020000 		.word	.L105+1
 1808              		.p2align 1
 1809              	.L98:
 704:..\src/interruptions.c ****         case INPUT_MODE_ENCODER3:
 705:..\src/interruptions.c **** 
 706:..\src/interruptions.c ****             // Calculate handle value based on position of handle in the
 707:..\src/interruptions.c ****             // sensor chain and multiplication factor between handle and motor position
 708:..\src/interruptions.c ****             if (c_mem.enc[ENC_L].double_encoder_on_off) 
 1810              		.loc 1 708 0
 1811 0074 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 1812 0076 9049     		ldr	r1, .L160
 1813 0078 1346     		mov	r3, r2
 1814 007a 5B00     		lsls	r3, r3, #1
 1815 007c 1344     		add	r3, r3, r2
 1816 007e 1B01     		lsls	r3, r3, #4
 1817 0080 0B44     		add	r3, r3, r1
 1818 0082 03F5D873 		add	r3, r3, #432
 1819 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1820 0088 002B     		cmp	r3, #0
 1821 008a 19D0     		beq	.L106
 709:..\src/interruptions.c ****                 handle_value = (g_meas[ENC_L].pos[2] * c_mem.enc[ENC_L].motor_handle_ratio) + MOT->
 1822              		.loc 1 709 0
 1823 008c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1824 008e 8C4A     		ldr	r2, .L160+8
 1825 0090 3421     		movs	r1, #52
 1826 0092 01FB03F3 		mul	r3, r1, r3
 1827 0096 1344     		add	r3, r3, r2
 1828 0098 0833     		adds	r3, r3, #8
 1829 009a 1968     		ldr	r1, [r3]
 1830 009c FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 1831 009e 8648     		ldr	r0, .L160
 1832 00a0 1346     		mov	r3, r2
 1833 00a2 5B00     		lsls	r3, r3, #1
 1834 00a4 1344     		add	r3, r3, r2
 1835 00a6 1B01     		lsls	r3, r3, #4
 1836 00a8 0344     		add	r3, r3, r0
 1837 00aa 03F5DA73 		add	r3, r3, #436
 1838 00ae 93F90030 		ldrsb	r3, [r3]
 1839 00b2 03FB01F2 		mul	r2, r3, r1
 1840 00b6 3B6A     		ldr	r3, [r7, #32]
 1841 00b8 5B6B     		ldr	r3, [r3, #52]
 1842 00ba 1344     		add	r3, r3, r2
 1843 00bc 7B62     		str	r3, [r7, #36]
 1844 00be 18E0     		b	.L107
 1845              	.L106:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 46


 710:..\src/interruptions.c ****             else
 711:..\src/interruptions.c ****                 handle_value = (g_meas[ENC_L].pos[1] * c_mem.enc[ENC_L].motor_handle_ratio) + MOT->
 1846              		.loc 1 711 0
 1847 00c0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1848 00c2 7F4A     		ldr	r2, .L160+8
 1849 00c4 3421     		movs	r1, #52
 1850 00c6 01FB03F3 		mul	r3, r1, r3
 1851 00ca 1344     		add	r3, r3, r2
 1852 00cc 0433     		adds	r3, r3, #4
 1853 00ce 1968     		ldr	r1, [r3]
 1854 00d0 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 1855 00d2 7948     		ldr	r0, .L160
 1856 00d4 1346     		mov	r3, r2
 1857 00d6 5B00     		lsls	r3, r3, #1
 1858 00d8 1344     		add	r3, r3, r2
 1859 00da 1B01     		lsls	r3, r3, #4
 1860 00dc 0344     		add	r3, r3, r0
 1861 00de 03F5DA73 		add	r3, r3, #436
 1862 00e2 93F90030 		ldrsb	r3, [r3]
 1863 00e6 03FB01F2 		mul	r2, r3, r1
 1864 00ea 3B6A     		ldr	r3, [r7, #32]
 1865 00ec 5B6B     		ldr	r3, [r3, #52]
 1866 00ee 1344     		add	r3, r3, r2
 1867 00f0 7B62     		str	r3, [r7, #36]
 1868              	.L107:
 712:..\src/interruptions.c ****             
 713:..\src/interruptions.c **** 
 714:..\src/interruptions.c ****             // Read handle and use it as reference for the motor
 715:..\src/interruptions.c ****             if (((handle_value - st_refOld_p->pos) > MOT->max_step_pos) && (MOT->max_step_pos != 0)
 1869              		.loc 1 715 0
 1870 00f2 7B68     		ldr	r3, [r7, #4]
 1871 00f4 1B68     		ldr	r3, [r3]
 1872 00f6 7A6A     		ldr	r2, [r7, #36]
 1873 00f8 D21A     		subs	r2, r2, r3
 1874 00fa 3B6A     		ldr	r3, [r7, #32]
 1875 00fc 1B6C     		ldr	r3, [r3, #64]
 1876 00fe 9A42     		cmp	r2, r3
 1877 0100 0BDD     		ble	.L108
 1878              		.loc 1 715 0 is_stmt 0 discriminator 1
 1879 0102 3B6A     		ldr	r3, [r7, #32]
 1880 0104 1B6C     		ldr	r3, [r3, #64]
 1881 0106 002B     		cmp	r3, #0
 1882 0108 07D0     		beq	.L108
 716:..\src/interruptions.c ****                 st_ref_p->pos += MOT->max_step_pos;
 1883              		.loc 1 716 0 is_stmt 1
 1884 010a BB68     		ldr	r3, [r7, #8]
 1885 010c 1A68     		ldr	r2, [r3]
 1886 010e 3B6A     		ldr	r3, [r7, #32]
 1887 0110 1B6C     		ldr	r3, [r3, #64]
 1888 0112 1A44     		add	r2, r2, r3
 1889 0114 BB68     		ldr	r3, [r7, #8]
 1890 0116 1A60     		str	r2, [r3]
 1891 0118 17E0     		b	.L109
 1892              	.L108:
 717:..\src/interruptions.c ****             else {
 718:..\src/interruptions.c ****                 if (((handle_value - st_refOld_p->pos) < MOT->max_step_neg) && (MOT->max_step_neg !
 1893              		.loc 1 718 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 47


 1894 011a 7B68     		ldr	r3, [r7, #4]
 1895 011c 1B68     		ldr	r3, [r3]
 1896 011e 7A6A     		ldr	r2, [r7, #36]
 1897 0120 D21A     		subs	r2, r2, r3
 1898 0122 3B6A     		ldr	r3, [r7, #32]
 1899 0124 DB6B     		ldr	r3, [r3, #60]
 1900 0126 9A42     		cmp	r2, r3
 1901 0128 0BDA     		bge	.L110
 1902              		.loc 1 718 0 is_stmt 0 discriminator 1
 1903 012a 3B6A     		ldr	r3, [r7, #32]
 1904 012c DB6B     		ldr	r3, [r3, #60]
 1905 012e 002B     		cmp	r3, #0
 1906 0130 07D0     		beq	.L110
 719:..\src/interruptions.c ****                     st_ref_p->pos += MOT->max_step_neg;
 1907              		.loc 1 719 0 is_stmt 1
 1908 0132 BB68     		ldr	r3, [r7, #8]
 1909 0134 1A68     		ldr	r2, [r3]
 1910 0136 3B6A     		ldr	r3, [r7, #32]
 1911 0138 DB6B     		ldr	r3, [r3, #60]
 1912 013a 1A44     		add	r2, r2, r3
 1913 013c BB68     		ldr	r3, [r7, #8]
 1914 013e 1A60     		str	r2, [r3]
 1915 0140 03E0     		b	.L109
 1916              	.L110:
 720:..\src/interruptions.c ****                 else
 721:..\src/interruptions.c ****                     st_ref_p->pos = handle_value;
 1917              		.loc 1 721 0
 1918 0142 BB68     		ldr	r3, [r7, #8]
 1919 0144 7A6A     		ldr	r2, [r7, #36]
 1920 0146 1A60     		str	r2, [r3]
 722:..\src/interruptions.c ****             }
 723:..\src/interruptions.c ****             break;
 1921              		.loc 1 723 0
 1922 0148 DFE1     		b	.L111
 1923              	.L109:
 1924 014a DEE1     		b	.L111
 1925              	.L104:
 724:..\src/interruptions.c ****         
 725:..\src/interruptions.c ****         case INPUT_MODE_JOYSTICK:
 726:..\src/interruptions.c ****             
 727:..\src/interruptions.c ****             if (c_mem.dev.use_2nd_motor_flag == FALSE){
 1926              		.loc 1 727 0
 1927 014c 5A4B     		ldr	r3, .L160
 1928 014e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 1929 0152 002B     		cmp	r3, #0
 1930 0154 57D1     		bne	.L112
 728:..\src/interruptions.c ****                 // Code for single motor devices. Use only up/down direction to give speed referenc
 729:..\src/interruptions.c ****                 st_ref_p->pos = st_refOld_p->pos;
 1931              		.loc 1 729 0
 1932 0156 7B68     		ldr	r3, [r7, #4]
 1933 0158 1A68     		ldr	r2, [r3]
 1934 015a BB68     		ldr	r3, [r7, #8]
 1935 015c 1A60     		str	r2, [r3]
 730:..\src/interruptions.c ****                 if(!(g_adc_meas.joystick[0] > 700)) {
 1936              		.loc 1 730 0
 1937 015e 574B     		ldr	r3, .L160+4
 1938 0160 1B6A     		ldr	r3, [r3, #32]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 48


 1939 0162 B3F52F7F 		cmp	r3, #700
 1940 0166 45DC     		bgt	.L113
 1941              	.LBB4:
 731:..\src/interruptions.c ****                     int32 CYDATA err_joy_1 = g_adc_meas.joystick[0] - c_mem.JOY_spec.joystick_thres
 1942              		.loc 1 731 0
 1943 0168 544B     		ldr	r3, .L160+4
 1944 016a 1B6A     		ldr	r3, [r3, #32]
 1945 016c 524A     		ldr	r2, .L160
 1946 016e B2F9B222 		ldrsh	r2, [r2, #690]
 1947 0172 9B1A     		subs	r3, r3, r2
 1948 0174 3B61     		str	r3, [r7, #16]
 732:..\src/interruptions.c **** 
 733:..\src/interruptions.c ****                     if(g_adc_meas.joystick[0] > c_mem.JOY_spec.joystick_threshold) {     //both mot
 1949              		.loc 1 733 0
 1950 0176 514B     		ldr	r3, .L160+4
 1951 0178 1B6A     		ldr	r3, [r3, #32]
 1952 017a 4F4A     		ldr	r2, .L160
 1953 017c B2F9B222 		ldrsh	r2, [r2, #690]
 1954 0180 9342     		cmp	r3, r2
 1955 0182 13DD     		ble	.L114
 734:..\src/interruptions.c ****                         st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_speed
 1956              		.loc 1 734 0
 1957 0184 BB68     		ldr	r3, [r7, #8]
 1958 0186 1A68     		ldr	r2, [r3]
 1959 0188 4B4B     		ldr	r3, .L160
 1960 018a B3F8B032 		ldrh	r3, [r3, #688]
 1961 018e 1946     		mov	r1, r3
 1962 0190 3B69     		ldr	r3, [r7, #16]
 1963 0192 03FB01F1 		mul	r1, r3, r1
 1964 0196 484B     		ldr	r3, .L160
 1965 0198 B3F9B232 		ldrsh	r3, [r3, #690]
 1966 019c C3F58063 		rsb	r3, r3, #1024
 1967 01a0 91FBF3F3 		sdiv	r3, r1, r3
 1968 01a4 1A44     		add	r2, r2, r3
 1969 01a6 BB68     		ldr	r3, [r7, #8]
 1970 01a8 1A60     		str	r2, [r3]
 1971              	.LBE4:
 735:..\src/interruptions.c ****                     }
 736:..\src/interruptions.c ****                     else {
 737:..\src/interruptions.c ****                         err_joy_1 = g_adc_meas.joystick[0] + c_mem.JOY_spec.joystick_threshold;
 738:..\src/interruptions.c ****                         if(g_adc_meas.joystick[0] < -c_mem.JOY_spec.joystick_threshold) {  //both m
 739:..\src/interruptions.c ****                             st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_s
 740:..\src/interruptions.c ****                         }
 741:..\src/interruptions.c ****                     }
 742:..\src/interruptions.c ****                 }
 743:..\src/interruptions.c ****                 else {  //The button is pressed and the motor reference is gradually set to zero 
 744:..\src/interruptions.c ****                     st_ref_p->pos -= (int32) g_mem.JOY_spec.joystick_closure_speed;
 745:..\src/interruptions.c ****                 }
 746:..\src/interruptions.c ****             }
 747:..\src/interruptions.c ****             else {
 748:..\src/interruptions.c ****                 // Code for two motors devices. Use both direction to give speed references
 749:..\src/interruptions.c ****                 if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 750:..\src/interruptions.c ****                     compute_SoftHand_2_motors_joystick_reference(motor_idx, st_ref_p, st_refOld_p);
 751:..\src/interruptions.c ****                 }
 752:..\src/interruptions.c ****             }
 753:..\src/interruptions.c ****             break;
 1972              		.loc 1 753 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 49


 1973 01aa A5E1     		b	.L153
 1974              	.L114:
 1975              	.LBB5:
 737:..\src/interruptions.c ****                         if(g_adc_meas.joystick[0] < -c_mem.JOY_spec.joystick_threshold) {  //both m
 1976              		.loc 1 737 0
 1977 01ac 434B     		ldr	r3, .L160+4
 1978 01ae 1B6A     		ldr	r3, [r3, #32]
 1979 01b0 414A     		ldr	r2, .L160
 1980 01b2 B2F9B222 		ldrsh	r2, [r2, #690]
 1981 01b6 1344     		add	r3, r3, r2
 1982 01b8 3B61     		str	r3, [r7, #16]
 738:..\src/interruptions.c ****                             st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_s
 1983              		.loc 1 738 0
 1984 01ba 404B     		ldr	r3, .L160+4
 1985 01bc 1A6A     		ldr	r2, [r3, #32]
 1986 01be 3E4B     		ldr	r3, .L160
 1987 01c0 B3F9B232 		ldrsh	r3, [r3, #690]
 1988 01c4 5B42     		negs	r3, r3
 1989 01c6 9A42     		cmp	r2, r3
 1990 01c8 80F29681 		bge	.L153
 739:..\src/interruptions.c ****                         }
 1991              		.loc 1 739 0
 1992 01cc BB68     		ldr	r3, [r7, #8]
 1993 01ce 1A68     		ldr	r2, [r3]
 1994 01d0 394B     		ldr	r3, .L160
 1995 01d2 B3F8B032 		ldrh	r3, [r3, #688]
 1996 01d6 1946     		mov	r1, r3
 1997 01d8 3B69     		ldr	r3, [r7, #16]
 1998 01da 03FB01F1 		mul	r1, r3, r1
 1999 01de 364B     		ldr	r3, .L160
 2000 01e0 B3F9B232 		ldrsh	r3, [r3, #690]
 2001 01e4 C3F58063 		rsb	r3, r3, #1024
 2002 01e8 91FBF3F3 		sdiv	r3, r1, r3
 2003 01ec 1A44     		add	r2, r2, r3
 2004 01ee BB68     		ldr	r3, [r7, #8]
 2005 01f0 1A60     		str	r2, [r3]
 2006              	.LBE5:
 2007              		.loc 1 753 0
 2008 01f2 81E1     		b	.L153
 2009              	.L113:
 744:..\src/interruptions.c ****                 }
 2010              		.loc 1 744 0
 2011 01f4 BB68     		ldr	r3, [r7, #8]
 2012 01f6 1B68     		ldr	r3, [r3]
 2013 01f8 324A     		ldr	r2, .L160+12
 2014 01fa B2F8B022 		ldrh	r2, [r2, #688]
 2015 01fe 9A1A     		subs	r2, r3, r2
 2016 0200 BB68     		ldr	r3, [r7, #8]
 2017 0202 1A60     		str	r2, [r3]
 2018              		.loc 1 753 0
 2019 0204 78E1     		b	.L153
 2020              	.L112:
 749:..\src/interruptions.c ****                     compute_SoftHand_2_motors_joystick_reference(motor_idx, st_ref_p, st_refOld_p);
 2021              		.loc 1 749 0
 2022 0206 2C4B     		ldr	r3, .L160
 2023 0208 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 2024 020c 042B     		cmp	r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 50


 2025 020e 40F07381 		bne	.L153
 750:..\src/interruptions.c ****                 }
 2026              		.loc 1 750 0
 2027 0212 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2028 0214 7A68     		ldr	r2, [r7, #4]
 2029 0216 B968     		ldr	r1, [r7, #8]
 2030 0218 1846     		mov	r0, r3
 2031 021a FFF7FEFF 		bl	compute_SoftHand_2_motors_joystick_reference
 2032              		.loc 1 753 0
 2033 021e 6BE1     		b	.L153
 2034              	.L100:
 754:..\src/interruptions.c ****             
 755:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL:
 756:..\src/interruptions.c ****             if (err_emg_1 > 0)
 2035              		.loc 1 756 0
 2036 0220 BB69     		ldr	r3, [r7, #24]
 2037 0222 002B     		cmp	r3, #0
 2038 0224 15DD     		ble	.L118
 757:..\src/interruptions.c ****                 st_ref_p->pos = (err_emg_1 * g_mem.motor[motor_idx].pos_lim_sup) / (1024 - c_mem.em
 2039              		.loc 1 757 0
 2040 0226 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2041 0228 2649     		ldr	r1, .L160+12
 2042 022a 1346     		mov	r3, r2
 2043 022c DB00     		lsls	r3, r3, #3
 2044 022e 9B1A     		subs	r3, r3, r2
 2045 0230 1B01     		lsls	r3, r3, #4
 2046 0232 0B44     		add	r3, r3, r1
 2047 0234 E833     		adds	r3, r3, #232
 2048 0236 1B68     		ldr	r3, [r3]
 2049 0238 BA69     		ldr	r2, [r7, #24]
 2050 023a 02FB03F2 		mul	r2, r2, r3
 2051 023e 1E4B     		ldr	r3, .L160
 2052 0240 B3F8F031 		ldrh	r3, [r3, #496]
 2053 0244 C3F58063 		rsb	r3, r3, #1024
 2054 0248 92FBF3F2 		sdiv	r2, r2, r3
 2055 024c BB68     		ldr	r3, [r7, #8]
 2056 024e 1A60     		str	r2, [r3]
 758:..\src/interruptions.c ****             else
 759:..\src/interruptions.c ****                 st_ref_p->pos = 0;
 760:..\src/interruptions.c ****             break;
 2057              		.loc 1 760 0
 2058 0250 5BE1     		b	.L111
 2059              	.L118:
 759:..\src/interruptions.c ****             break;
 2060              		.loc 1 759 0
 2061 0252 BB68     		ldr	r3, [r7, #8]
 2062 0254 0022     		movs	r2, #0
 2063 0256 1A60     		str	r2, [r3]
 2064              		.loc 1 760 0
 2065 0258 57E1     		b	.L111
 2066              	.L105:
 761:..\src/interruptions.c ****         
 762:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 763:..\src/interruptions.c ****             if (err_emg_1 > 0)
 2067              		.loc 1 763 0
 2068 025a BB69     		ldr	r3, [r7, #24]
 2069 025c 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 51


 2070 025e 1FDD     		ble	.L120
 764:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.motor[motor_idx].pos_lim_sup - (err_emg_1 * g_mem.motor[motor
 2071              		.loc 1 764 0
 2072 0260 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2073 0262 1849     		ldr	r1, .L160+12
 2074 0264 1346     		mov	r3, r2
 2075 0266 DB00     		lsls	r3, r3, #3
 2076 0268 9B1A     		subs	r3, r3, r2
 2077 026a 1B01     		lsls	r3, r3, #4
 2078 026c 0B44     		add	r3, r3, r1
 2079 026e E833     		adds	r3, r3, #232
 2080 0270 1968     		ldr	r1, [r3]
 2081 0272 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2082 0274 1348     		ldr	r0, .L160+12
 2083 0276 1346     		mov	r3, r2
 2084 0278 DB00     		lsls	r3, r3, #3
 2085 027a 9B1A     		subs	r3, r3, r2
 2086 027c 1B01     		lsls	r3, r3, #4
 2087 027e 0344     		add	r3, r3, r0
 2088 0280 E833     		adds	r3, r3, #232
 2089 0282 1B68     		ldr	r3, [r3]
 2090 0284 BA69     		ldr	r2, [r7, #24]
 2091 0286 02FB03F2 		mul	r2, r2, r3
 2092 028a 0B4B     		ldr	r3, .L160
 2093 028c B3F8F031 		ldrh	r3, [r3, #496]
 2094 0290 C3F58063 		rsb	r3, r3, #1024
 2095 0294 92FBF3F3 		sdiv	r3, r2, r3
 2096 0298 CA1A     		subs	r2, r1, r3
 2097 029a BB68     		ldr	r3, [r7, #8]
 2098 029c 1A60     		str	r2, [r3]
 765:..\src/interruptions.c ****             else
 766:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.motor[motor_idx].pos_lim_sup;
 767:..\src/interruptions.c ****             break;
 2099              		.loc 1 767 0
 2100 029e 34E1     		b	.L111
 2101              	.L120:
 766:..\src/interruptions.c ****             break;
 2102              		.loc 1 766 0
 2103 02a0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2104 02a2 0849     		ldr	r1, .L160+12
 2105 02a4 1346     		mov	r3, r2
 2106 02a6 DB00     		lsls	r3, r3, #3
 2107 02a8 9B1A     		subs	r3, r3, r2
 2108 02aa 1B01     		lsls	r3, r3, #4
 2109 02ac 0B44     		add	r3, r3, r1
 2110 02ae E833     		adds	r3, r3, #232
 2111 02b0 1A68     		ldr	r2, [r3]
 2112 02b2 BB68     		ldr	r3, [r7, #8]
 2113 02b4 1A60     		str	r2, [r3]
 2114              		.loc 1 767 0
 2115 02b6 28E1     		b	.L111
 2116              	.L161:
 2117              		.align	2
 2118              	.L160:
 2119 02b8 00000000 		.word	c_mem
 2120 02bc 00000000 		.word	g_adc_meas
 2121 02c0 00000000 		.word	g_meas
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 52


 2122 02c4 00000000 		.word	g_mem
 2123              	.L101:
 768:..\src/interruptions.c **** 
 769:..\src/interruptions.c ****         case INPUT_MODE_EMG_INTEGRAL:
 770:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 2124              		.loc 1 770 0
 2125 02c8 7B68     		ldr	r3, [r7, #4]
 2126 02ca 1A68     		ldr	r2, [r3]
 2127 02cc BB68     		ldr	r3, [r7, #8]
 2128 02ce 1A60     		str	r2, [r3]
 771:..\src/interruptions.c ****             if (err_emg_1 > 0) {
 2129              		.loc 1 771 0
 2130 02d0 BB69     		ldr	r3, [r7, #24]
 2131 02d2 002B     		cmp	r3, #0
 2132 02d4 13DD     		ble	.L122
 772:..\src/interruptions.c ****                 st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * (int)g_mem.emg.emg_speed[0] * 2) / 
 2133              		.loc 1 772 0
 2134 02d6 7B68     		ldr	r3, [r7, #4]
 2135 02d8 1A68     		ldr	r2, [r3]
 2136 02da 884B     		ldr	r3, .L162
 2137 02dc 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 2138 02e0 1946     		mov	r1, r3
 2139 02e2 BB69     		ldr	r3, [r7, #24]
 2140 02e4 03FB01F3 		mul	r3, r3, r1
 2141 02e8 5900     		lsls	r1, r3, #1
 2142 02ea 854B     		ldr	r3, .L162+4
 2143 02ec B3F8F031 		ldrh	r3, [r3, #496]
 2144 02f0 C3F58063 		rsb	r3, r3, #1024
 2145 02f4 91FBF3F3 		sdiv	r3, r1, r3
 2146 02f8 1A44     		add	r2, r2, r3
 2147 02fa BB68     		ldr	r3, [r7, #8]
 2148 02fc 1A60     		str	r2, [r3]
 2149              	.L122:
 773:..\src/interruptions.c ****             }
 774:..\src/interruptions.c ****             if (err_emg_2 > 0) {
 2150              		.loc 1 774 0
 2151 02fe 7B69     		ldr	r3, [r7, #20]
 2152 0300 002B     		cmp	r3, #0
 2153 0302 40F30181 		ble	.L154
 775:..\src/interruptions.c ****                 st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * (int)g_mem.emg.emg_speed[1] * 2) / 
 2154              		.loc 1 775 0
 2155 0306 7B68     		ldr	r3, [r7, #4]
 2156 0308 1A68     		ldr	r2, [r3]
 2157 030a 7C4B     		ldr	r3, .L162
 2158 030c 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2159 0310 1946     		mov	r1, r3
 2160 0312 7B69     		ldr	r3, [r7, #20]
 2161 0314 03FB01F3 		mul	r3, r3, r1
 2162 0318 5900     		lsls	r1, r3, #1
 2163 031a 794B     		ldr	r3, .L162+4
 2164 031c B3F8F231 		ldrh	r3, [r3, #498]
 2165 0320 C3F58063 		rsb	r3, r3, #1024
 2166 0324 91FBF3F3 		sdiv	r3, r1, r3
 2167 0328 D21A     		subs	r2, r2, r3
 2168 032a BB68     		ldr	r3, [r7, #8]
 2169 032c 1A60     		str	r2, [r3]
 776:..\src/interruptions.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 53


 777:..\src/interruptions.c ****             break;
 2170              		.loc 1 777 0
 2171 032e EBE0     		b	.L154
 2172              	.L102:
 778:..\src/interruptions.c **** 
 779:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS:
 780:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 2173              		.loc 1 780 0
 2174 0330 7B68     		ldr	r3, [r7, #4]
 2175 0332 1A68     		ldr	r2, [r3]
 2176 0334 BB68     		ldr	r3, [r7, #8]
 2177 0336 1A60     		str	r2, [r3]
 781:..\src/interruptions.c ****             if (c_mem.dev.dev_type != SOFTHAND_2_MOTORS){
 2178              		.loc 1 781 0
 2179 0338 714B     		ldr	r3, .L162+4
 2180 033a 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 2181 033e 042B     		cmp	r3, #4
 2182 0340 5BD0     		beq	.L124
 782:..\src/interruptions.c ****                 switch (current_emg[motor_idx]) {
 2183              		.loc 1 782 0
 2184 0342 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2185 0344 6F4A     		ldr	r2, .L162+8
 2186 0346 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2187 0348 012B     		cmp	r3, #1
 2188 034a 1CD0     		beq	.L126
 2189 034c 022B     		cmp	r3, #2
 2190 034e 37D0     		beq	.L127
 2191 0350 002B     		cmp	r3, #0
 2192 0352 00D0     		beq	.L128
 783:..\src/interruptions.c ****                     case 0:
 784:..\src/interruptions.c ****                         // Look for the first EMG passing the threshold
 785:..\src/interruptions.c ****                         if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 786:..\src/interruptions.c ****                             current_emg[motor_idx] = 1;
 787:..\src/interruptions.c ****                             break;
 788:..\src/interruptions.c ****                         }
 789:..\src/interruptions.c ****                         if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 790:..\src/interruptions.c ****                             current_emg[motor_idx] = 2;
 791:..\src/interruptions.c ****                             break;
 792:..\src/interruptions.c ****                         }
 793:..\src/interruptions.c ****                         break;
 794:..\src/interruptions.c **** 
 795:..\src/interruptions.c ****                     case 1:
 796:..\src/interruptions.c ****                         // EMG 1 is first
 797:..\src/interruptions.c ****                         if (err_emg_1 < 0) {
 798:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 799:..\src/interruptions.c ****                             break;
 800:..\src/interruptions.c ****                         }
 801:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2
 802:..\src/interruptions.c ****                         break;
 803:..\src/interruptions.c **** 
 804:..\src/interruptions.c ****                     case 2:
 805:..\src/interruptions.c ****                         // EMG 2 is first
 806:..\src/interruptions.c ****                         if (err_emg_2 < 0) {
 807:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 808:..\src/interruptions.c ****                             break;
 809:..\src/interruptions.c ****                         }
 810:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * g_mem.emg.emg_speed[1] << 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 54


 811:..\src/interruptions.c ****                         break;
 812:..\src/interruptions.c **** 
 813:..\src/interruptions.c ****                     default:
 814:..\src/interruptions.c ****                         break;
 2193              		.loc 1 814 0
 2194 0354 5BE0     		b	.L134
 2195              	.L128:
 785:..\src/interruptions.c ****                             current_emg[motor_idx] = 1;
 2196              		.loc 1 785 0
 2197 0356 BB69     		ldr	r3, [r7, #24]
 2198 0358 002B     		cmp	r3, #0
 2199 035a 08DD     		ble	.L129
 785:..\src/interruptions.c ****                             current_emg[motor_idx] = 1;
 2200              		.loc 1 785 0 is_stmt 0 discriminator 1
 2201 035c BA69     		ldr	r2, [r7, #24]
 2202 035e 7B69     		ldr	r3, [r7, #20]
 2203 0360 9A42     		cmp	r2, r3
 2204 0362 04DD     		ble	.L129
 786:..\src/interruptions.c ****                             break;
 2205              		.loc 1 786 0 is_stmt 1
 2206 0364 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2207 0366 674A     		ldr	r2, .L162+8
 2208 0368 0121     		movs	r1, #1
 2209 036a D154     		strb	r1, [r2, r3]
 787:..\src/interruptions.c ****                         }
 2210              		.loc 1 787 0
 2211 036c 4FE0     		b	.L134
 2212              	.L129:
 789:..\src/interruptions.c ****                             current_emg[motor_idx] = 2;
 2213              		.loc 1 789 0
 2214 036e 7B69     		ldr	r3, [r7, #20]
 2215 0370 002B     		cmp	r3, #0
 2216 0372 4BDD     		ble	.L155
 789:..\src/interruptions.c ****                             current_emg[motor_idx] = 2;
 2217              		.loc 1 789 0 is_stmt 0 discriminator 1
 2218 0374 7A69     		ldr	r2, [r7, #20]
 2219 0376 BB69     		ldr	r3, [r7, #24]
 2220 0378 9A42     		cmp	r2, r3
 2221 037a 47DD     		ble	.L155
 790:..\src/interruptions.c ****                             break;
 2222              		.loc 1 790 0 is_stmt 1
 2223 037c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2224 037e 614A     		ldr	r2, .L162+8
 2225 0380 0221     		movs	r1, #2
 2226 0382 D154     		strb	r1, [r2, r3]
 791:..\src/interruptions.c ****                         }
 2227              		.loc 1 791 0
 2228 0384 43E0     		b	.L134
 2229              	.L126:
 797:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 2230              		.loc 1 797 0
 2231 0386 BB69     		ldr	r3, [r7, #24]
 2232 0388 002B     		cmp	r3, #0
 2233 038a 04DA     		bge	.L132
 798:..\src/interruptions.c ****                             break;
 2234              		.loc 1 798 0
 2235 038c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 55


 2236 038e 5D4A     		ldr	r2, .L162+8
 2237 0390 0021     		movs	r1, #0
 2238 0392 D154     		strb	r1, [r2, r3]
 799:..\src/interruptions.c ****                         }
 2239              		.loc 1 799 0
 2240 0394 3BE0     		b	.L134
 2241              	.L132:
 801:..\src/interruptions.c ****                         break;
 2242              		.loc 1 801 0
 2243 0396 7B68     		ldr	r3, [r7, #4]
 2244 0398 1A68     		ldr	r2, [r3]
 2245 039a 584B     		ldr	r3, .L162
 2246 039c 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 2247 03a0 1946     		mov	r1, r3
 2248 03a2 BB69     		ldr	r3, [r7, #24]
 2249 03a4 03FB01F3 		mul	r3, r3, r1
 2250 03a8 9900     		lsls	r1, r3, #2
 2251 03aa 554B     		ldr	r3, .L162+4
 2252 03ac B3F8F031 		ldrh	r3, [r3, #496]
 2253 03b0 C3F58063 		rsb	r3, r3, #1024
 2254 03b4 91FBF3F3 		sdiv	r3, r1, r3
 2255 03b8 1A44     		add	r2, r2, r3
 2256 03ba BB68     		ldr	r3, [r7, #8]
 2257 03bc 1A60     		str	r2, [r3]
 802:..\src/interruptions.c **** 
 2258              		.loc 1 802 0
 2259 03be 26E0     		b	.L134
 2260              	.L127:
 806:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 2261              		.loc 1 806 0
 2262 03c0 7B69     		ldr	r3, [r7, #20]
 2263 03c2 002B     		cmp	r3, #0
 2264 03c4 04DA     		bge	.L133
 807:..\src/interruptions.c ****                             break;
 2265              		.loc 1 807 0
 2266 03c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2267 03c8 4E4A     		ldr	r2, .L162+8
 2268 03ca 0021     		movs	r1, #0
 2269 03cc D154     		strb	r1, [r2, r3]
 808:..\src/interruptions.c ****                         }
 2270              		.loc 1 808 0
 2271 03ce 1EE0     		b	.L134
 2272              	.L133:
 810:..\src/interruptions.c ****                         break;
 2273              		.loc 1 810 0
 2274 03d0 7B68     		ldr	r3, [r7, #4]
 2275 03d2 1A68     		ldr	r2, [r3]
 2276 03d4 494B     		ldr	r3, .L162
 2277 03d6 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2278 03da 1946     		mov	r1, r3
 2279 03dc 7B69     		ldr	r3, [r7, #20]
 2280 03de 03FB01F3 		mul	r3, r3, r1
 2281 03e2 9900     		lsls	r1, r3, #2
 2282 03e4 464B     		ldr	r3, .L162+4
 2283 03e6 B3F8F231 		ldrh	r3, [r3, #498]
 2284 03ea C3F58063 		rsb	r3, r3, #1024
 2285 03ee 91FBF3F3 		sdiv	r3, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 56


 2286 03f2 D21A     		subs	r2, r2, r3
 2287 03f4 BB68     		ldr	r3, [r7, #8]
 2288 03f6 1A60     		str	r2, [r3]
 811:..\src/interruptions.c **** 
 2289              		.loc 1 811 0
 2290 03f8 09E0     		b	.L134
 2291              	.L124:
 815:..\src/interruptions.c ****                 }
 816:..\src/interruptions.c ****             }
 817:..\src/interruptions.c ****             else{ // case SOFTHAND_2_MOTORS
 818:..\src/interruptions.c ****                 //compute reference using a FSM for choosing the right sinergy to activate
 819:..\src/interruptions.c ****                 compute_SoftHand_2_motors_emg_reference(motor_idx, st_ref_p, st_refOld_p, err_emg_1
 2292              		.loc 1 819 0
 2293 03fa F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 2294 03fc 7B69     		ldr	r3, [r7, #20]
 2295 03fe 0093     		str	r3, [sp]
 2296 0400 BB69     		ldr	r3, [r7, #24]
 2297 0402 7A68     		ldr	r2, [r7, #4]
 2298 0404 B968     		ldr	r1, [r7, #8]
 2299 0406 FFF7FEFF 		bl	compute_SoftHand_2_motors_emg_reference
 820:..\src/interruptions.c ****             }
 821:..\src/interruptions.c ****             break;
 2300              		.loc 1 821 0
 2301 040a 7EE0     		b	.L111
 2302              	.L155:
 793:..\src/interruptions.c **** 
 2303              		.loc 1 793 0
 2304 040c 00BF     		nop
 2305              	.L134:
 2306              		.loc 1 821 0 discriminator 5
 2307 040e 7CE0     		b	.L111
 2308              	.L103:
 822:..\src/interruptions.c **** 
 823:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS_ADV:
 824:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 2309              		.loc 1 824 0
 2310 0410 7B68     		ldr	r3, [r7, #4]
 2311 0412 1A68     		ldr	r2, [r3]
 2312 0414 BB68     		ldr	r3, [r7, #8]
 2313 0416 1A60     		str	r2, [r3]
 825:..\src/interruptions.c ****             switch (current_emg[motor_idx]) {
 2314              		.loc 1 825 0
 2315 0418 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2316 041a 3A4A     		ldr	r2, .L162+8
 2317 041c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2318 041e 012B     		cmp	r3, #1
 2319 0420 1CD0     		beq	.L136
 2320 0422 022B     		cmp	r3, #2
 2321 0424 3DD0     		beq	.L137
 2322 0426 002B     		cmp	r3, #0
 2323 0428 00D0     		beq	.L138
 826:..\src/interruptions.c ****                 // Look for the first EMG passing the threshold
 827:..\src/interruptions.c ****                 case 0:
 828:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 829:..\src/interruptions.c ****                         current_emg[motor_idx] = 1;
 830:..\src/interruptions.c ****                         break;
 831:..\src/interruptions.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 57


 832:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 833:..\src/interruptions.c ****                         current_emg[motor_idx] = 2;
 834:..\src/interruptions.c ****                         break;
 835:..\src/interruptions.c ****                     }
 836:..\src/interruptions.c ****                     break;
 837:..\src/interruptions.c **** 
 838:..\src/interruptions.c ****                 // EMG 1 is first
 839:..\src/interruptions.c ****                 case 1:
 840:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 841:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 842:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 843:..\src/interruptions.c ****                         break;
 844:..\src/interruptions.c ****                     }
 845:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 846:..\src/interruptions.c ****                     if (err_emg_1 > 0) 
 847:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2
 848:..\src/interruptions.c ****                     
 849:..\src/interruptions.c ****                     break;
 850:..\src/interruptions.c **** 
 851:..\src/interruptions.c ****                 // EMG 2 is first
 852:..\src/interruptions.c ****                 case 2:
 853:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 854:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 855:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 856:..\src/interruptions.c ****                         break;
 857:..\src/interruptions.c ****                     }
 858:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 859:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
 860:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * c_mem.emg.emg_speed[1] << 2
 861:..\src/interruptions.c ****                     }
 862:..\src/interruptions.c ****                     break;
 863:..\src/interruptions.c **** 
 864:..\src/interruptions.c ****                 default:
 865:..\src/interruptions.c ****                     break;
 2324              		.loc 1 865 0
 2325 042a 62E0     		b	.L140
 2326              	.L138:
 828:..\src/interruptions.c ****                         current_emg[motor_idx] = 1;
 2327              		.loc 1 828 0
 2328 042c BB69     		ldr	r3, [r7, #24]
 2329 042e 002B     		cmp	r3, #0
 2330 0430 08DD     		ble	.L139
 828:..\src/interruptions.c ****                         current_emg[motor_idx] = 1;
 2331              		.loc 1 828 0 is_stmt 0 discriminator 1
 2332 0432 BA69     		ldr	r2, [r7, #24]
 2333 0434 7B69     		ldr	r3, [r7, #20]
 2334 0436 9A42     		cmp	r2, r3
 2335 0438 04DD     		ble	.L139
 829:..\src/interruptions.c ****                         break;
 2336              		.loc 1 829 0 is_stmt 1
 2337 043a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2338 043c 314A     		ldr	r2, .L162+8
 2339 043e 0121     		movs	r1, #1
 2340 0440 D154     		strb	r1, [r2, r3]
 830:..\src/interruptions.c ****                     }
 2341              		.loc 1 830 0
 2342 0442 56E0     		b	.L140
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 58


 2343              	.L139:
 832:..\src/interruptions.c ****                         current_emg[motor_idx] = 2;
 2344              		.loc 1 832 0
 2345 0444 7B69     		ldr	r3, [r7, #20]
 2346 0446 002B     		cmp	r3, #0
 2347 0448 4EDD     		ble	.L156
 832:..\src/interruptions.c ****                         current_emg[motor_idx] = 2;
 2348              		.loc 1 832 0 is_stmt 0 discriminator 1
 2349 044a 7A69     		ldr	r2, [r7, #20]
 2350 044c BB69     		ldr	r3, [r7, #24]
 2351 044e 9A42     		cmp	r2, r3
 2352 0450 4ADD     		ble	.L156
 833:..\src/interruptions.c ****                         break;
 2353              		.loc 1 833 0 is_stmt 1
 2354 0452 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2355 0454 2B4A     		ldr	r2, .L162+8
 2356 0456 0221     		movs	r1, #2
 2357 0458 D154     		strb	r1, [r2, r3]
 834:..\src/interruptions.c ****                     }
 2358              		.loc 1 834 0
 2359 045a 4AE0     		b	.L140
 2360              	.L136:
 841:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 2361              		.loc 1 841 0
 2362 045c BB69     		ldr	r3, [r7, #24]
 2363 045e 002B     		cmp	r3, #0
 2364 0460 07DA     		bge	.L142
 841:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 2365              		.loc 1 841 0 is_stmt 0 discriminator 1
 2366 0462 7B69     		ldr	r3, [r7, #20]
 2367 0464 002B     		cmp	r3, #0
 2368 0466 04DA     		bge	.L142
 842:..\src/interruptions.c ****                         break;
 2369              		.loc 1 842 0 is_stmt 1
 2370 0468 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2371 046a 264A     		ldr	r2, .L162+8
 2372 046c 0021     		movs	r1, #0
 2373 046e D154     		strb	r1, [r2, r3]
 843:..\src/interruptions.c ****                     }
 2374              		.loc 1 843 0
 2375 0470 3FE0     		b	.L140
 2376              	.L142:
 846:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2
 2377              		.loc 1 846 0
 2378 0472 BB69     		ldr	r3, [r7, #24]
 2379 0474 002B     		cmp	r3, #0
 2380 0476 39DD     		ble	.L157
 847:..\src/interruptions.c ****                     
 2381              		.loc 1 847 0
 2382 0478 7B68     		ldr	r3, [r7, #4]
 2383 047a 1A68     		ldr	r2, [r3]
 2384 047c 1F4B     		ldr	r3, .L162
 2385 047e 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 2386 0482 1946     		mov	r1, r3
 2387 0484 BB69     		ldr	r3, [r7, #24]
 2388 0486 03FB01F3 		mul	r3, r3, r1
 2389 048a 9900     		lsls	r1, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 59


 2390 048c 1C4B     		ldr	r3, .L162+4
 2391 048e B3F8F031 		ldrh	r3, [r3, #496]
 2392 0492 C3F58063 		rsb	r3, r3, #1024
 2393 0496 91FBF3F3 		sdiv	r3, r1, r3
 2394 049a 1A44     		add	r2, r2, r3
 2395 049c BB68     		ldr	r3, [r7, #8]
 2396 049e 1A60     		str	r2, [r3]
 849:..\src/interruptions.c **** 
 2397              		.loc 1 849 0
 2398 04a0 24E0     		b	.L157
 2399              	.L137:
 854:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 2400              		.loc 1 854 0
 2401 04a2 BB69     		ldr	r3, [r7, #24]
 2402 04a4 002B     		cmp	r3, #0
 2403 04a6 07DA     		bge	.L144
 854:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 2404              		.loc 1 854 0 is_stmt 0 discriminator 1
 2405 04a8 7B69     		ldr	r3, [r7, #20]
 2406 04aa 002B     		cmp	r3, #0
 2407 04ac 04DA     		bge	.L144
 855:..\src/interruptions.c ****                         break;
 2408              		.loc 1 855 0 is_stmt 1
 2409 04ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2410 04b0 144A     		ldr	r2, .L162+8
 2411 04b2 0021     		movs	r1, #0
 2412 04b4 D154     		strb	r1, [r2, r3]
 856:..\src/interruptions.c ****                     }
 2413              		.loc 1 856 0
 2414 04b6 1CE0     		b	.L140
 2415              	.L144:
 859:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * c_mem.emg.emg_speed[1] << 2
 2416              		.loc 1 859 0
 2417 04b8 7B69     		ldr	r3, [r7, #20]
 2418 04ba 002B     		cmp	r3, #0
 2419 04bc 18DD     		ble	.L158
 860:..\src/interruptions.c ****                     }
 2420              		.loc 1 860 0
 2421 04be 7B68     		ldr	r3, [r7, #4]
 2422 04c0 1A68     		ldr	r2, [r3]
 2423 04c2 0F4B     		ldr	r3, .L162+4
 2424 04c4 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2425 04c8 1946     		mov	r1, r3
 2426 04ca 7B69     		ldr	r3, [r7, #20]
 2427 04cc 03FB01F3 		mul	r3, r3, r1
 2428 04d0 9900     		lsls	r1, r3, #2
 2429 04d2 0B4B     		ldr	r3, .L162+4
 2430 04d4 B3F8F231 		ldrh	r3, [r3, #498]
 2431 04d8 C3F58063 		rsb	r3, r3, #1024
 2432 04dc 91FBF3F3 		sdiv	r3, r1, r3
 2433 04e0 D21A     		subs	r2, r2, r3
 2434 04e2 BB68     		ldr	r3, [r7, #8]
 2435 04e4 1A60     		str	r2, [r3]
 862:..\src/interruptions.c **** 
 2436              		.loc 1 862 0
 2437 04e6 03E0     		b	.L158
 2438              	.L156:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 60


 836:..\src/interruptions.c **** 
 2439              		.loc 1 836 0
 2440 04e8 00BF     		nop
 2441 04ea 0EE0     		b	.L111
 2442              	.L157:
 849:..\src/interruptions.c **** 
 2443              		.loc 1 849 0
 2444 04ec 00BF     		nop
 2445 04ee 0CE0     		b	.L111
 2446              	.L158:
 862:..\src/interruptions.c **** 
 2447              		.loc 1 862 0
 2448 04f0 00BF     		nop
 2449              	.L140:
 866:..\src/interruptions.c ****             }
 867:..\src/interruptions.c ****             break;
 2450              		.loc 1 867 0 discriminator 6
 2451 04f2 0AE0     		b	.L111
 2452              	.L152:
 868:..\src/interruptions.c **** 
 869:..\src/interruptions.c ****         default:
 870:..\src/interruptions.c ****             break;
 2453              		.loc 1 870 0
 2454 04f4 00BF     		nop
 2455 04f6 08E0     		b	.L111
 2456              	.L153:
 753:..\src/interruptions.c ****             
 2457              		.loc 1 753 0
 2458 04f8 00BF     		nop
 2459 04fa 06E0     		b	.L111
 2460              	.L163:
 2461              		.align	2
 2462              	.L162:
 2463 04fc 00000000 		.word	g_mem
 2464 0500 00000000 		.word	c_mem
 2465 0504 8C000000 		.word	current_emg.10585
 2466              	.L154:
 777:..\src/interruptions.c **** 
 2467              		.loc 1 777 0
 2468 0508 00BF     		nop
 2469              	.L111:
 871:..\src/interruptions.c ****     }
 872:..\src/interruptions.c **** 
 873:..\src/interruptions.c ****     // Position limit saturation
 874:..\src/interruptions.c ****     if (MOT->pos_lim_flag) {
 2470              		.loc 1 874 0
 2471 050a 3B6A     		ldr	r3, [r7, #32]
 2472 050c 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 2473 0510 002B     		cmp	r3, #0
 2474 0512 13D0     		beq	.L146
 875:..\src/interruptions.c ****         if (st_ref_p->pos < MOT->pos_lim_inf) 
 2475              		.loc 1 875 0
 2476 0514 BB68     		ldr	r3, [r7, #8]
 2477 0516 1A68     		ldr	r2, [r3]
 2478 0518 3B6A     		ldr	r3, [r7, #32]
 2479 051a 5B6B     		ldr	r3, [r3, #52]
 2480 051c 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 61


 2481 051e 03DA     		bge	.L147
 876:..\src/interruptions.c ****             st_ref_p->pos = MOT->pos_lim_inf;
 2482              		.loc 1 876 0
 2483 0520 3B6A     		ldr	r3, [r7, #32]
 2484 0522 5A6B     		ldr	r2, [r3, #52]
 2485 0524 BB68     		ldr	r3, [r7, #8]
 2486 0526 1A60     		str	r2, [r3]
 2487              	.L147:
 877:..\src/interruptions.c ****         if (st_ref_p->pos > MOT->pos_lim_sup) 
 2488              		.loc 1 877 0
 2489 0528 BB68     		ldr	r3, [r7, #8]
 2490 052a 1A68     		ldr	r2, [r3]
 2491 052c 3B6A     		ldr	r3, [r7, #32]
 2492 052e 9B6B     		ldr	r3, [r3, #56]
 2493 0530 9A42     		cmp	r2, r3
 2494 0532 03DD     		ble	.L146
 878:..\src/interruptions.c ****             st_ref_p->pos = MOT->pos_lim_sup;
 2495              		.loc 1 878 0
 2496 0534 3B6A     		ldr	r3, [r7, #32]
 2497 0536 9A6B     		ldr	r2, [r3, #56]
 2498 0538 BB68     		ldr	r3, [r7, #8]
 2499 053a 1A60     		str	r2, [r3]
 2500              	.L146:
 879:..\src/interruptions.c ****     }
 880:..\src/interruptions.c ****     
 881:..\src/interruptions.c ****     // SAFETY
 882:..\src/interruptions.c ****     if (battery_low_SoC == TRUE) {
 2501              		.loc 1 882 0
 2502 053c 1D4B     		ldr	r3, .L164
 2503 053e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2504 0540 012B     		cmp	r3, #1
 2505 0542 02D1     		bne	.L148
 883:..\src/interruptions.c ****         //Reopen the terminal device before disabling motor
 884:..\src/interruptions.c ****         st_ref_p->pos = 0;
 2506              		.loc 1 884 0
 2507 0544 BB68     		ldr	r3, [r7, #8]
 2508 0546 0022     		movs	r2, #0
 2509 0548 1A60     		str	r2, [r3]
 2510              	.L148:
 885:..\src/interruptions.c ****     }      
 886:..\src/interruptions.c ****     
 887:..\src/interruptions.c ****        
 888:..\src/interruptions.c ****     if (c_mem.SH.rest_position_flag == TRUE) {
 2511              		.loc 1 888 0
 2512 054a 1B4B     		ldr	r3, .L164+4
 2513 054c 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 2514 0550 012B     		cmp	r3, #1
 2515 0552 2AD1     		bne	.L159
 889:..\src/interruptions.c ****         if (rest_enabled == 1){
 2516              		.loc 1 889 0
 2517 0554 194B     		ldr	r3, .L164+8
 2518 0556 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2519 0558 012B     		cmp	r3, #1
 2520 055a 03D1     		bne	.L150
 890:..\src/interruptions.c ****             // Change position reference to drive motor to rest position smoothly
 891:..\src/interruptions.c ****             st_ref_p->pos = rest_pos_curr_ref;
 2521              		.loc 1 891 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 62


 2522 055c 184B     		ldr	r3, .L164+12
 2523 055e 1A68     		ldr	r2, [r3]
 2524 0560 BB68     		ldr	r3, [r7, #8]
 2525 0562 1A60     		str	r2, [r3]
 2526              	.L150:
 892:..\src/interruptions.c ****         }
 893:..\src/interruptions.c ****         
 894:..\src/interruptions.c ****         if (forced_open == 1) {
 2527              		.loc 1 894 0
 2528 0564 174B     		ldr	r3, .L164+16
 2529 0566 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2530 0568 012B     		cmp	r3, #1
 2531 056a 1ED1     		bne	.L159
 895:..\src/interruptions.c ****             // Open the SoftHand as EMG PROPORTIONAL input mode 
 896:..\src/interruptions.c ****             if (err_emg_2 > 0)
 2532              		.loc 1 896 0
 2533 056c 7B69     		ldr	r3, [r7, #20]
 2534 056e 002B     		cmp	r3, #0
 2535 0570 13DD     		ble	.L151
 897:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.SH.rest_pos - (err_emg_2 * g_mem.SH.rest_pos) / (1024 - c_mem
 2536              		.loc 1 897 0
 2537 0572 154B     		ldr	r3, .L164+20
 2538 0574 D3F8A022 		ldr	r2, [r3, #672]
 2539 0578 134B     		ldr	r3, .L164+20
 2540 057a D3F8A032 		ldr	r3, [r3, #672]
 2541 057e 7969     		ldr	r1, [r7, #20]
 2542 0580 01FB03F1 		mul	r1, r1, r3
 2543 0584 0C4B     		ldr	r3, .L164+4
 2544 0586 B3F8F231 		ldrh	r3, [r3, #498]
 2545 058a C3F58063 		rsb	r3, r3, #1024
 2546 058e 91FBF3F3 		sdiv	r3, r1, r3
 2547 0592 D21A     		subs	r2, r2, r3
 2548 0594 BB68     		ldr	r3, [r7, #8]
 2549 0596 1A60     		str	r2, [r3]
 898:..\src/interruptions.c ****             else {
 899:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.SH.rest_pos;
 900:..\src/interruptions.c ****                 forced_open = 0;
 901:..\src/interruptions.c ****             }
 902:..\src/interruptions.c ****         }
 903:..\src/interruptions.c ****     }
 904:..\src/interruptions.c **** }
 2550              		.loc 1 904 0
 2551 0598 07E0     		b	.L159
 2552              	.L151:
 899:..\src/interruptions.c ****                 forced_open = 0;
 2553              		.loc 1 899 0
 2554 059a 0B4B     		ldr	r3, .L164+20
 2555 059c D3F8A022 		ldr	r2, [r3, #672]
 2556 05a0 BB68     		ldr	r3, [r7, #8]
 2557 05a2 1A60     		str	r2, [r3]
 900:..\src/interruptions.c ****             }
 2558              		.loc 1 900 0
 2559 05a4 074B     		ldr	r3, .L164+16
 2560 05a6 0022     		movs	r2, #0
 2561 05a8 1A70     		strb	r2, [r3]
 2562              	.L159:
 2563              		.loc 1 904 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 63


 2564 05aa 00BF     		nop
 2565 05ac 2837     		adds	r7, r7, #40
 2566              		.cfi_def_cfa_offset 8
 2567 05ae BD46     		mov	sp, r7
 2568              		.cfi_def_cfa_register 13
 2569              		@ sp needed
 2570 05b0 80BD     		pop	{r7, pc}
 2571              	.L165:
 2572 05b2 00BF     		.align	2
 2573              	.L164:
 2574 05b4 00000000 		.word	battery_low_SoC
 2575 05b8 00000000 		.word	c_mem
 2576 05bc 00000000 		.word	rest_enabled
 2577 05c0 00000000 		.word	rest_pos_curr_ref
 2578 05c4 00000000 		.word	forced_open
 2579 05c8 00000000 		.word	g_mem
 2580              		.cfi_endproc
 2581              	.LFE68:
 2582              		.size	compute_reference, .-compute_reference
 2583              		.section	.text.compute_SoftHand_2_motors_joystick_reference,"ax",%progbits
 2584              		.align	2
 2585              		.global	compute_SoftHand_2_motors_joystick_reference
 2586              		.thumb
 2587              		.thumb_func
 2588              		.type	compute_SoftHand_2_motors_joystick_reference, %function
 2589              	compute_SoftHand_2_motors_joystick_reference:
 2590              	.LFB69:
 905:..\src/interruptions.c **** 
 906:..\src/interruptions.c **** 
 907:..\src/interruptions.c **** //==============================================================================
 908:..\src/interruptions.c **** //                                  COMPUTE SOFTHAND 2 MOTORS JOYSTICK REFERENCE
 909:..\src/interruptions.c **** //==============================================================================
 910:..\src/interruptions.c **** void compute_SoftHand_2_motors_joystick_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct 
 2591              		.loc 1 910 0
 2592              		.cfi_startproc
 2593              		@ args = 0, pretend = 0, frame = 32
 2594              		@ frame_needed = 1, uses_anonymous_args = 0
 2595              		@ link register save eliminated.
 2596 0000 80B4     		push	{r7}
 2597              		.cfi_def_cfa_offset 4
 2598              		.cfi_offset 7, -4
 2599 0002 89B0     		sub	sp, sp, #36
 2600              		.cfi_def_cfa_offset 40
 2601 0004 00AF     		add	r7, sp, #0
 2602              		.cfi_def_cfa_register 7
 2603 0006 0346     		mov	r3, r0
 2604 0008 B960     		str	r1, [r7, #8]
 2605 000a 7A60     		str	r2, [r7, #4]
 2606 000c FB73     		strb	r3, [r7, #15]
 911:..\src/interruptions.c ****     
 912:..\src/interruptions.c ****     if (c_mem.motor[0].input_mode == INPUT_MODE_JOYSTICK && c_mem.motor[1].input_mode == INPUT_MODE
 2607              		.loc 1 912 0
 2608 000e B04B     		ldr	r3, .L187
 2609 0010 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 2610 0014 062B     		cmp	r3, #6
 2611 0016 40F08581 		bne	.L185
 2612              		.loc 1 912 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 64


 2613 001a AD4B     		ldr	r3, .L187
 2614 001c 93F87E31 		ldrb	r3, [r3, #382]	@ zero_extendqisi2
 2615 0020 062B     		cmp	r3, #6
 2616 0022 40F07F81 		bne	.L185
 913:..\src/interruptions.c ****         st_ref_p->pos = st_refOld_p->pos;
 2617              		.loc 1 913 0 is_stmt 1
 2618 0026 7B68     		ldr	r3, [r7, #4]
 2619 0028 1A68     		ldr	r2, [r3]
 2620 002a BB68     		ldr	r3, [r7, #8]
 2621 002c 1A60     		str	r2, [r3]
 914:..\src/interruptions.c ****     
 915:..\src/interruptions.c ****         if(!(g_adc_meas.joystick[0] > 700)) {
 2622              		.loc 1 915 0
 2623 002e A94B     		ldr	r3, .L187+4
 2624 0030 1B6A     		ldr	r3, [r3, #32]
 2625 0032 B3F52F7F 		cmp	r3, #700
 2626 0036 00F3C280 		bgt	.L168
 2627              	.LBB6:
 916:..\src/interruptions.c ****              
 917:..\src/interruptions.c ****             int32 CYDATA err_joy_1 = 0;
 2628              		.loc 1 917 0
 2629 003a 0023     		movs	r3, #0
 2630 003c FB61     		str	r3, [r7, #28]
 918:..\src/interruptions.c ****             int32 CYDATA err_joy_2 = 0;
 2631              		.loc 1 918 0
 2632 003e 0023     		movs	r3, #0
 2633 0040 BB61     		str	r3, [r7, #24]
 919:..\src/interruptions.c ****         
 920:..\src/interruptions.c ****             if(g_adc_meas.joystick[0] > c_mem.JOY_spec.joystick_threshold) {     //both motors wind
 2634              		.loc 1 920 0
 2635 0042 A44B     		ldr	r3, .L187+4
 2636 0044 1B6A     		ldr	r3, [r3, #32]
 2637 0046 A24A     		ldr	r2, .L187
 2638 0048 B2F9B222 		ldrsh	r2, [r2, #690]
 2639 004c 9342     		cmp	r3, r2
 2640 004e 1ADD     		ble	.L169
 921:..\src/interruptions.c ****                 err_joy_1 = g_adc_meas.joystick[0] - c_mem.JOY_spec.joystick_threshold;
 2641              		.loc 1 921 0
 2642 0050 A04B     		ldr	r3, .L187+4
 2643 0052 1B6A     		ldr	r3, [r3, #32]
 2644 0054 9E4A     		ldr	r2, .L187
 2645 0056 B2F9B222 		ldrsh	r2, [r2, #690]
 2646 005a 9B1A     		subs	r3, r3, r2
 2647 005c FB61     		str	r3, [r7, #28]
 922:..\src/interruptions.c ****                 st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_speed) / (102
 2648              		.loc 1 922 0
 2649 005e BB68     		ldr	r3, [r7, #8]
 2650 0060 1A68     		ldr	r2, [r3]
 2651 0062 9B4B     		ldr	r3, .L187
 2652 0064 B3F8B032 		ldrh	r3, [r3, #688]
 2653 0068 1946     		mov	r1, r3
 2654 006a FB69     		ldr	r3, [r7, #28]
 2655 006c 03FB01F1 		mul	r1, r3, r1
 2656 0070 974B     		ldr	r3, .L187
 2657 0072 B3F9B232 		ldrsh	r3, [r3, #690]
 2658 0076 C3F58063 		rsb	r3, r3, #1024
 2659 007a 91FBF3F3 		sdiv	r3, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 65


 2660 007e 1A44     		add	r2, r2, r3
 2661 0080 BB68     		ldr	r3, [r7, #8]
 2662 0082 1A60     		str	r2, [r3]
 2663 0084 21E0     		b	.L170
 2664              	.L169:
 923:..\src/interruptions.c ****             }
 924:..\src/interruptions.c ****             else {
 925:..\src/interruptions.c ****                 if(g_adc_meas.joystick[0] < -c_mem.JOY_spec.joystick_threshold) {  //both motors un
 2665              		.loc 1 925 0
 2666 0086 934B     		ldr	r3, .L187+4
 2667 0088 1A6A     		ldr	r2, [r3, #32]
 2668 008a 914B     		ldr	r3, .L187
 2669 008c B3F9B232 		ldrsh	r3, [r3, #690]
 2670 0090 5B42     		negs	r3, r3
 2671 0092 9A42     		cmp	r2, r3
 2672 0094 19DA     		bge	.L170
 926:..\src/interruptions.c ****                     err_joy_1 = g_adc_meas.joystick[0] + c_mem.JOY_spec.joystick_threshold;
 2673              		.loc 1 926 0
 2674 0096 8F4B     		ldr	r3, .L187+4
 2675 0098 1B6A     		ldr	r3, [r3, #32]
 2676 009a 8D4A     		ldr	r2, .L187
 2677 009c B2F9B222 		ldrsh	r2, [r2, #690]
 2678 00a0 1344     		add	r3, r3, r2
 2679 00a2 FB61     		str	r3, [r7, #28]
 927:..\src/interruptions.c ****                     st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_speed) / 
 2680              		.loc 1 927 0
 2681 00a4 BB68     		ldr	r3, [r7, #8]
 2682 00a6 1A68     		ldr	r2, [r3]
 2683 00a8 894B     		ldr	r3, .L187
 2684 00aa B3F8B032 		ldrh	r3, [r3, #688]
 2685 00ae 1946     		mov	r1, r3
 2686 00b0 FB69     		ldr	r3, [r7, #28]
 2687 00b2 03FB01F1 		mul	r1, r3, r1
 2688 00b6 864B     		ldr	r3, .L187
 2689 00b8 B3F9B232 		ldrsh	r3, [r3, #690]
 2690 00bc C3F58063 		rsb	r3, r3, #1024
 2691 00c0 91FBF3F3 		sdiv	r3, r1, r3
 2692 00c4 1A44     		add	r2, r2, r3
 2693 00c6 BB68     		ldr	r3, [r7, #8]
 2694 00c8 1A60     		str	r2, [r3]
 2695              	.L170:
 928:..\src/interruptions.c ****                 }
 929:..\src/interruptions.c ****             }
 930:..\src/interruptions.c **** 
 931:..\src/interruptions.c ****             if(g_adc_meas.joystick[1] > c_mem.JOY_spec.joystick_threshold) {    //The wire is winde
 2696              		.loc 1 931 0
 2697 00ca 824B     		ldr	r3, .L187+4
 2698 00cc 5B6A     		ldr	r3, [r3, #36]
 2699 00ce 804A     		ldr	r2, .L187
 2700 00d0 B2F9B222 		ldrsh	r2, [r2, #690]
 2701 00d4 9342     		cmp	r3, r2
 2702 00d6 34DD     		ble	.L171
 932:..\src/interruptions.c ****                 err_joy_2 = g_adc_meas.joystick[1] - c_mem.JOY_spec.joystick_threshold;
 2703              		.loc 1 932 0
 2704 00d8 7E4B     		ldr	r3, .L187+4
 2705 00da 5B6A     		ldr	r3, [r3, #36]
 2706 00dc 7C4A     		ldr	r2, .L187
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 66


 2707 00de B2F9B222 		ldrsh	r2, [r2, #690]
 2708 00e2 9B1A     		subs	r3, r3, r2
 2709 00e4 BB61     		str	r3, [r7, #24]
 933:..\src/interruptions.c ****                 if (motor_idx == 0){
 2710              		.loc 1 933 0
 2711 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2712 00e8 002B     		cmp	r3, #0
 2713 00ea 12D1     		bne	.L172
 934:..\src/interruptions.c ****                     st_ref_p->pos += ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed) / 
 2714              		.loc 1 934 0
 2715 00ec BB68     		ldr	r3, [r7, #8]
 2716 00ee 1A68     		ldr	r2, [r3]
 2717 00f0 774B     		ldr	r3, .L187
 2718 00f2 B3F8B032 		ldrh	r3, [r3, #688]
 2719 00f6 1946     		mov	r1, r3
 2720 00f8 BB69     		ldr	r3, [r7, #24]
 2721 00fa 03FB01F1 		mul	r1, r3, r1
 2722 00fe 744B     		ldr	r3, .L187
 2723 0100 B3F9B232 		ldrsh	r3, [r3, #690]
 2724 0104 C3F58063 		rsb	r3, r3, #1024
 2725 0108 91FBF3F3 		sdiv	r3, r1, r3
 2726 010c 1A44     		add	r2, r2, r3
 2727 010e BB68     		ldr	r3, [r7, #8]
 2728 0110 1A60     		str	r2, [r3]
 2729              	.L172:
 935:..\src/interruptions.c ****                 }
 936:..\src/interruptions.c ****                 if (motor_idx == 1){
 2730              		.loc 1 936 0
 2731 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2732 0114 012B     		cmp	r3, #1
 2733 0116 40F00581 		bne	.L185
 937:..\src/interruptions.c ****                     st_ref_p->pos -= ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed) / 
 2734              		.loc 1 937 0
 2735 011a BB68     		ldr	r3, [r7, #8]
 2736 011c 1A68     		ldr	r2, [r3]
 2737 011e 6C4B     		ldr	r3, .L187
 2738 0120 B3F8B032 		ldrh	r3, [r3, #688]
 2739 0124 1946     		mov	r1, r3
 2740 0126 BB69     		ldr	r3, [r7, #24]
 2741 0128 03FB01F1 		mul	r1, r3, r1
 2742 012c 684B     		ldr	r3, .L187
 2743 012e B3F9B232 		ldrsh	r3, [r3, #690]
 2744 0132 C3F58063 		rsb	r3, r3, #1024
 2745 0136 91FBF3F3 		sdiv	r3, r1, r3
 2746 013a D21A     		subs	r2, r2, r3
 2747 013c BB68     		ldr	r3, [r7, #8]
 2748 013e 1A60     		str	r2, [r3]
 2749              	.LBE6:
 938:..\src/interruptions.c ****                 }          
 939:..\src/interruptions.c ****             }
 940:..\src/interruptions.c ****             else {
 941:..\src/interruptions.c ****                 if(g_adc_meas.joystick[1] < -c_mem.JOY_spec.joystick_threshold) {  //The wire is un
 942:..\src/interruptions.c ****                     
 943:..\src/interruptions.c ****                     err_joy_2 = g_adc_meas.joystick[1] + c_mem.JOY_spec.joystick_threshold;
 944:..\src/interruptions.c ****                     if (motor_idx == 0){
 945:..\src/interruptions.c ****                         st_ref_p->pos += ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 946:..\src/interruptions.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 67


 947:..\src/interruptions.c ****                     if (motor_idx == 1){
 948:..\src/interruptions.c ****                         st_ref_p->pos -= ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 949:..\src/interruptions.c ****                     }
 950:..\src/interruptions.c ****                 }
 951:..\src/interruptions.c ****             }
 952:..\src/interruptions.c ****         }
 953:..\src/interruptions.c ****         else {  //The button is pressed and the hand is opened firstly making the position differen
 954:..\src/interruptions.c ****                 //equal to zero, then the position sum is gradually set to zero 
 955:..\src/interruptions.c ****             int32 pos_diff = (g_meas[c_mem.motor[0].encoder_line].pos[0] - g_meas[c_mem.motor[0].en
 956:..\src/interruptions.c ****             int32 pos_sum = (g_meas[c_mem.motor[0].encoder_line].pos[0] + g_meas[c_mem.motor[0].enc
 957:..\src/interruptions.c **** 
 958:..\src/interruptions.c ****             if(pos_diff > 500 || pos_diff < -500) {
 959:..\src/interruptions.c ****                 if(SIGN(pos_diff) == 1) {
 960:..\src/interruptions.c ****                     if (motor_idx == 1){
 961:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 962:..\src/interruptions.c ****                     }
 963:..\src/interruptions.c ****                     if (motor_idx == 0){
 964:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 965:..\src/interruptions.c ****                     }                    
 966:..\src/interruptions.c ****                 }
 967:..\src/interruptions.c ****                 else {
 968:..\src/interruptions.c ****                     if (motor_idx == 0){
 969:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 970:..\src/interruptions.c ****                     }
 971:..\src/interruptions.c ****                     if (motor_idx == 1){
 972:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 973:..\src/interruptions.c ****                     }
 974:..\src/interruptions.c ****                 }
 975:..\src/interruptions.c ****                 
 976:..\src/interruptions.c ****             }
 977:..\src/interruptions.c ****             else {
 978:..\src/interruptions.c ****                 if(pos_sum > 0) {
 979:..\src/interruptions.c ****                     if (motor_idx == 0){
 980:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 981:..\src/interruptions.c ****                     }
 982:..\src/interruptions.c ****                     if (motor_idx == 1){
 983:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 984:..\src/interruptions.c ****                     }
 985:..\src/interruptions.c ****                     
 986:..\src/interruptions.c ****                     if (st_ref_p->pos < 0){
 987:..\src/interruptions.c ****                         st_ref_p->pos = 0;
 988:..\src/interruptions.c ****                     }
 989:..\src/interruptions.c ****                 }
 990:..\src/interruptions.c ****             }
 991:..\src/interruptions.c ****         }
 992:..\src/interruptions.c ****     }           
 993:..\src/interruptions.c **** }
 2750              		.loc 1 993 0
 2751 0140 F0E0     		b	.L185
 2752              	.L171:
 2753              	.LBB7:
 941:..\src/interruptions.c ****                     
 2754              		.loc 1 941 0
 2755 0142 644B     		ldr	r3, .L187+4
 2756 0144 5A6A     		ldr	r2, [r3, #36]
 2757 0146 624B     		ldr	r3, .L187
 2758 0148 B3F9B232 		ldrsh	r3, [r3, #690]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 68


 2759 014c 5B42     		negs	r3, r3
 2760 014e 9A42     		cmp	r2, r3
 2761 0150 80F2E880 		bge	.L185
 943:..\src/interruptions.c ****                     if (motor_idx == 0){
 2762              		.loc 1 943 0
 2763 0154 5F4B     		ldr	r3, .L187+4
 2764 0156 5B6A     		ldr	r3, [r3, #36]
 2765 0158 5D4A     		ldr	r2, .L187
 2766 015a B2F9B222 		ldrsh	r2, [r2, #690]
 2767 015e 1344     		add	r3, r3, r2
 2768 0160 BB61     		str	r3, [r7, #24]
 944:..\src/interruptions.c ****                         st_ref_p->pos += ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 2769              		.loc 1 944 0
 2770 0162 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2771 0164 002B     		cmp	r3, #0
 2772 0166 12D1     		bne	.L175
 945:..\src/interruptions.c ****                     }
 2773              		.loc 1 945 0
 2774 0168 BB68     		ldr	r3, [r7, #8]
 2775 016a 1A68     		ldr	r2, [r3]
 2776 016c 584B     		ldr	r3, .L187
 2777 016e B3F8B032 		ldrh	r3, [r3, #688]
 2778 0172 1946     		mov	r1, r3
 2779 0174 BB69     		ldr	r3, [r7, #24]
 2780 0176 03FB01F1 		mul	r1, r3, r1
 2781 017a 554B     		ldr	r3, .L187
 2782 017c B3F9B232 		ldrsh	r3, [r3, #690]
 2783 0180 C3F58063 		rsb	r3, r3, #1024
 2784 0184 91FBF3F3 		sdiv	r3, r1, r3
 2785 0188 1A44     		add	r2, r2, r3
 2786 018a BB68     		ldr	r3, [r7, #8]
 2787 018c 1A60     		str	r2, [r3]
 2788              	.L175:
 947:..\src/interruptions.c ****                         st_ref_p->pos -= ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 2789              		.loc 1 947 0
 2790 018e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2791 0190 012B     		cmp	r3, #1
 2792 0192 40F0C780 		bne	.L185
 948:..\src/interruptions.c ****                     }
 2793              		.loc 1 948 0
 2794 0196 BB68     		ldr	r3, [r7, #8]
 2795 0198 1A68     		ldr	r2, [r3]
 2796 019a 4D4B     		ldr	r3, .L187
 2797 019c B3F8B032 		ldrh	r3, [r3, #688]
 2798 01a0 1946     		mov	r1, r3
 2799 01a2 BB69     		ldr	r3, [r7, #24]
 2800 01a4 03FB01F1 		mul	r1, r3, r1
 2801 01a8 494B     		ldr	r3, .L187
 2802 01aa B3F9B232 		ldrsh	r3, [r3, #690]
 2803 01ae C3F58063 		rsb	r3, r3, #1024
 2804 01b2 91FBF3F3 		sdiv	r3, r1, r3
 2805 01b6 D21A     		subs	r2, r2, r3
 2806 01b8 BB68     		ldr	r3, [r7, #8]
 2807 01ba 1A60     		str	r2, [r3]
 2808              	.LBE7:
 2809              		.loc 1 993 0
 2810 01bc B2E0     		b	.L185
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 69


 2811              	.L168:
 2812              	.LBB8:
 955:..\src/interruptions.c ****             int32 pos_sum = (g_meas[c_mem.motor[0].encoder_line].pos[0] + g_meas[c_mem.motor[0].enc
 2813              		.loc 1 955 0
 2814 01be 444B     		ldr	r3, .L187
 2815 01c0 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2816 01c4 1946     		mov	r1, r3
 2817 01c6 444A     		ldr	r2, .L187+8
 2818 01c8 3423     		movs	r3, #52
 2819 01ca 03FB01F3 		mul	r3, r3, r1
 2820 01ce 1344     		add	r3, r3, r2
 2821 01d0 1A68     		ldr	r2, [r3]
 2822 01d2 3F4B     		ldr	r3, .L187
 2823 01d4 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2824 01d8 1846     		mov	r0, r3
 2825 01da 3F49     		ldr	r1, .L187+8
 2826 01dc 3423     		movs	r3, #52
 2827 01de 03FB00F3 		mul	r3, r3, r0
 2828 01e2 0B44     		add	r3, r3, r1
 2829 01e4 0433     		adds	r3, r3, #4
 2830 01e6 1B68     		ldr	r3, [r3]
 2831 01e8 D21A     		subs	r2, r2, r3
 2832 01ea 394B     		ldr	r3, .L187
 2833 01ec 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2834 01f0 1846     		mov	r0, r3
 2835 01f2 3749     		ldr	r1, .L187
 2836 01f4 0346     		mov	r3, r0
 2837 01f6 5B00     		lsls	r3, r3, #1
 2838 01f8 0344     		add	r3, r3, r0
 2839 01fa 1B01     		lsls	r3, r3, #4
 2840 01fc 0B44     		add	r3, r3, r1
 2841 01fe 03F29513 		addw	r3, r3, #405
 2842 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2843 0204 42FA03F3 		asr	r3, r2, r3
 2844 0208 7B61     		str	r3, [r7, #20]
 956:..\src/interruptions.c **** 
 2845              		.loc 1 956 0
 2846 020a 314B     		ldr	r3, .L187
 2847 020c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2848 0210 1946     		mov	r1, r3
 2849 0212 314A     		ldr	r2, .L187+8
 2850 0214 3423     		movs	r3, #52
 2851 0216 03FB01F3 		mul	r3, r3, r1
 2852 021a 1344     		add	r3, r3, r2
 2853 021c 1A68     		ldr	r2, [r3]
 2854 021e 2C4B     		ldr	r3, .L187
 2855 0220 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2856 0224 1846     		mov	r0, r3
 2857 0226 2C49     		ldr	r1, .L187+8
 2858 0228 3423     		movs	r3, #52
 2859 022a 03FB00F3 		mul	r3, r3, r0
 2860 022e 0B44     		add	r3, r3, r1
 2861 0230 0433     		adds	r3, r3, #4
 2862 0232 1B68     		ldr	r3, [r3]
 2863 0234 1A44     		add	r2, r2, r3
 2864 0236 264B     		ldr	r3, .L187
 2865 0238 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 70


 2866 023c 1846     		mov	r0, r3
 2867 023e 2449     		ldr	r1, .L187
 2868 0240 0346     		mov	r3, r0
 2869 0242 5B00     		lsls	r3, r3, #1
 2870 0244 0344     		add	r3, r3, r0
 2871 0246 1B01     		lsls	r3, r3, #4
 2872 0248 0B44     		add	r3, r3, r1
 2873 024a 03F29513 		addw	r3, r3, #405
 2874 024e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2875 0250 42FA03F3 		asr	r3, r2, r3
 2876 0254 3B61     		str	r3, [r7, #16]
 958:..\src/interruptions.c ****                 if(SIGN(pos_diff) == 1) {
 2877              		.loc 1 958 0
 2878 0256 7B69     		ldr	r3, [r7, #20]
 2879 0258 B3F5FA7F 		cmp	r3, #500
 2880 025c 03DC     		bgt	.L176
 958:..\src/interruptions.c ****                 if(SIGN(pos_diff) == 1) {
 2881              		.loc 1 958 0 is_stmt 0 discriminator 1
 2882 025e 7B69     		ldr	r3, [r7, #20]
 2883 0260 13F5FA7F 		cmn	r3, #500
 2884 0264 3ADA     		bge	.L177
 2885              	.L176:
 959:..\src/interruptions.c ****                     if (motor_idx == 1){
 2886              		.loc 1 959 0 is_stmt 1
 2887 0266 7B69     		ldr	r3, [r7, #20]
 2888 0268 002B     		cmp	r3, #0
 2889 026a 18DB     		blt	.L178
 960:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 2890              		.loc 1 960 0
 2891 026c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2892 026e 012B     		cmp	r3, #1
 2893 0270 07D1     		bne	.L179
 961:..\src/interruptions.c ****                     }
 2894              		.loc 1 961 0
 2895 0272 BB68     		ldr	r3, [r7, #8]
 2896 0274 1B68     		ldr	r3, [r3]
 2897 0276 164A     		ldr	r2, .L187
 2898 0278 B2F8B022 		ldrh	r2, [r2, #688]
 2899 027c 1A44     		add	r2, r2, r3
 2900 027e BB68     		ldr	r3, [r7, #8]
 2901 0280 1A60     		str	r2, [r3]
 2902              	.L179:
 963:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 2903              		.loc 1 963 0
 2904 0282 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2905 0284 002B     		cmp	r3, #0
 2906 0286 4CD1     		bne	.L186
 964:..\src/interruptions.c ****                     }                    
 2907              		.loc 1 964 0
 2908 0288 BB68     		ldr	r3, [r7, #8]
 2909 028a 1B68     		ldr	r3, [r3]
 2910 028c 104A     		ldr	r2, .L187
 2911 028e B2F8B022 		ldrh	r2, [r2, #688]
 2912 0292 5208     		lsrs	r2, r2, #1
 2913 0294 92B2     		uxth	r2, r2
 2914 0296 9A1A     		subs	r2, r3, r2
 2915 0298 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 71


 2916 029a 1A60     		str	r2, [r3]
 959:..\src/interruptions.c ****                     if (motor_idx == 1){
 2917              		.loc 1 959 0
 2918 029c 41E0     		b	.L186
 2919              	.L178:
 968:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 2920              		.loc 1 968 0
 2921 029e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2922 02a0 002B     		cmp	r3, #0
 2923 02a2 07D1     		bne	.L182
 969:..\src/interruptions.c ****                     }
 2924              		.loc 1 969 0
 2925 02a4 BB68     		ldr	r3, [r7, #8]
 2926 02a6 1B68     		ldr	r3, [r3]
 2927 02a8 094A     		ldr	r2, .L187
 2928 02aa B2F8B022 		ldrh	r2, [r2, #688]
 2929 02ae 1A44     		add	r2, r2, r3
 2930 02b0 BB68     		ldr	r3, [r7, #8]
 2931 02b2 1A60     		str	r2, [r3]
 2932              	.L182:
 971:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 2933              		.loc 1 971 0
 2934 02b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2935 02b6 012B     		cmp	r3, #1
 2936 02b8 33D1     		bne	.L186
 972:..\src/interruptions.c ****                     }
 2937              		.loc 1 972 0
 2938 02ba BB68     		ldr	r3, [r7, #8]
 2939 02bc 1B68     		ldr	r3, [r3]
 2940 02be 044A     		ldr	r2, .L187
 2941 02c0 B2F8B022 		ldrh	r2, [r2, #688]
 2942 02c4 5208     		lsrs	r2, r2, #1
 2943 02c6 92B2     		uxth	r2, r2
 2944 02c8 9A1A     		subs	r2, r3, r2
 2945 02ca BB68     		ldr	r3, [r7, #8]
 2946 02cc 1A60     		str	r2, [r3]
 959:..\src/interruptions.c ****                     if (motor_idx == 1){
 2947              		.loc 1 959 0
 2948 02ce 28E0     		b	.L186
 2949              	.L188:
 2950              		.align	2
 2951              	.L187:
 2952 02d0 00000000 		.word	c_mem
 2953 02d4 00000000 		.word	g_adc_meas
 2954 02d8 00000000 		.word	g_meas
 2955              	.L177:
 978:..\src/interruptions.c ****                     if (motor_idx == 0){
 2956              		.loc 1 978 0
 2957 02dc 3B69     		ldr	r3, [r7, #16]
 2958 02de 002B     		cmp	r3, #0
 2959 02e0 20DD     		ble	.L185
 979:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 2960              		.loc 1 979 0
 2961 02e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2962 02e4 002B     		cmp	r3, #0
 2963 02e6 08D1     		bne	.L183
 980:..\src/interruptions.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 72


 2964              		.loc 1 980 0
 2965 02e8 BB68     		ldr	r3, [r7, #8]
 2966 02ea 1A68     		ldr	r2, [r3]
 2967 02ec 104B     		ldr	r3, .L189
 2968 02ee B3F8B032 		ldrh	r3, [r3, #688]
 2969 02f2 5B00     		lsls	r3, r3, #1
 2970 02f4 D21A     		subs	r2, r2, r3
 2971 02f6 BB68     		ldr	r3, [r7, #8]
 2972 02f8 1A60     		str	r2, [r3]
 2973              	.L183:
 982:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 2974              		.loc 1 982 0
 2975 02fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2976 02fc 012B     		cmp	r3, #1
 2977 02fe 08D1     		bne	.L184
 983:..\src/interruptions.c ****                     }
 2978              		.loc 1 983 0
 2979 0300 BB68     		ldr	r3, [r7, #8]
 2980 0302 1A68     		ldr	r2, [r3]
 2981 0304 0A4B     		ldr	r3, .L189
 2982 0306 B3F8B032 		ldrh	r3, [r3, #688]
 2983 030a 5B00     		lsls	r3, r3, #1
 2984 030c D21A     		subs	r2, r2, r3
 2985 030e BB68     		ldr	r3, [r7, #8]
 2986 0310 1A60     		str	r2, [r3]
 2987              	.L184:
 986:..\src/interruptions.c ****                         st_ref_p->pos = 0;
 2988              		.loc 1 986 0
 2989 0312 BB68     		ldr	r3, [r7, #8]
 2990 0314 1B68     		ldr	r3, [r3]
 2991 0316 002B     		cmp	r3, #0
 2992 0318 04DA     		bge	.L185
 987:..\src/interruptions.c ****                     }
 2993              		.loc 1 987 0
 2994 031a BB68     		ldr	r3, [r7, #8]
 2995 031c 0022     		movs	r2, #0
 2996 031e 1A60     		str	r2, [r3]
 2997              	.LBE8:
 2998              		.loc 1 993 0
 2999 0320 00E0     		b	.L185
 3000              	.L186:
 3001              	.LBB9:
 959:..\src/interruptions.c ****                     if (motor_idx == 1){
 3002              		.loc 1 959 0
 3003 0322 00BF     		nop
 3004              	.L185:
 3005              	.LBE9:
 3006              		.loc 1 993 0
 3007 0324 00BF     		nop
 3008 0326 2437     		adds	r7, r7, #36
 3009              		.cfi_def_cfa_offset 4
 3010 0328 BD46     		mov	sp, r7
 3011              		.cfi_def_cfa_register 13
 3012              		@ sp needed
 3013 032a 80BC     		pop	{r7}
 3014              		.cfi_restore 7
 3015              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 73


 3016 032c 7047     		bx	lr
 3017              	.L190:
 3018 032e 00BF     		.align	2
 3019              	.L189:
 3020 0330 00000000 		.word	c_mem
 3021              		.cfi_endproc
 3022              	.LFE69:
 3023              		.size	compute_SoftHand_2_motors_joystick_reference, .-compute_SoftHand_2_motors_joystick_reference
 3024              		.section	.text.compute_SoftHand_2_motors_emg_reference,"ax",%progbits
 3025              		.align	2
 3026              		.global	compute_SoftHand_2_motors_emg_reference
 3027              		.thumb
 3028              		.thumb_func
 3029              		.type	compute_SoftHand_2_motors_emg_reference, %function
 3030              	compute_SoftHand_2_motors_emg_reference:
 3031              	.LFB70:
 994:..\src/interruptions.c **** 
 995:..\src/interruptions.c **** 
 996:..\src/interruptions.c **** //==============================================================================
 997:..\src/interruptions.c **** //                                       COMPUTE SOFTHAND 2 MOTORS EMG REFERENCE
 998:..\src/interruptions.c **** //==============================================================================
 999:..\src/interruptions.c **** void compute_SoftHand_2_motors_emg_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct st_re
1000:..\src/interruptions.c ****     int32 err_emg_1, int32 err_emg_2) {
 3032              		.loc 1 1000 0
 3033              		.cfi_startproc
 3034              		@ args = 4, pretend = 0, frame = 16
 3035              		@ frame_needed = 1, uses_anonymous_args = 0
 3036 0000 80B5     		push	{r7, lr}
 3037              		.cfi_def_cfa_offset 8
 3038              		.cfi_offset 7, -8
 3039              		.cfi_offset 14, -4
 3040 0002 84B0     		sub	sp, sp, #16
 3041              		.cfi_def_cfa_offset 24
 3042 0004 00AF     		add	r7, sp, #0
 3043              		.cfi_def_cfa_register 7
 3044 0006 B960     		str	r1, [r7, #8]
 3045 0008 7A60     		str	r2, [r7, #4]
 3046 000a 3B60     		str	r3, [r7]
 3047 000c 0346     		mov	r3, r0
 3048 000e FB73     		strb	r3, [r7, #15]
1001:..\src/interruptions.c ****     
1002:..\src/interruptions.c ****     //Compute reference using a FSM for choosing the right sinergy to activate (call this routine o
1003:..\src/interruptions.c ****     static uint8 fsm_state;     
1004:..\src/interruptions.c ****     if (motor_idx == 0){        //update the fsm only at motor 0 compute reference call and hold th
 3049              		.loc 1 1004 0
 3050 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3051 0012 002B     		cmp	r3, #0
 3052 0014 05D1     		bne	.L192
1005:..\src/interruptions.c ****         fsm_state = emg_activation_velocity_fsm();
 3053              		.loc 1 1005 0
 3054 0016 FFF7FEFF 		bl	emg_activation_velocity_fsm
 3055 001a 0346     		mov	r3, r0
 3056 001c 1A46     		mov	r2, r3
 3057 001e 614B     		ldr	r3, .L207
 3058 0020 1A70     		strb	r2, [r3]
 3059              	.L192:
1006:..\src/interruptions.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 74


1007:..\src/interruptions.c ****        
1008:..\src/interruptions.c ****     switch (fsm_state){
 3060              		.loc 1 1008 0
 3061 0022 604B     		ldr	r3, .L207
 3062 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3063 0026 032B     		cmp	r3, #3
 3064 0028 00F2B780 		bhi	.L204
 3065 002c 01A2     		adr	r2, .L195
 3066 002e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3067 0032 00BF     		.p2align 2
 3068              	.L195:
 3069 0034 45000000 		.word	.L194+1
 3070 0038 45000000 		.word	.L194+1
 3071 003c BF000000 		.word	.L196+1
 3072 0040 4F000000 		.word	.L197+1
 3073              		.p2align 1
 3074              	.L194:
1009:..\src/interruptions.c ****         case RELAX_STATE: case TIMER_STATE:
1010:..\src/interruptions.c ****              
1011:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 3075              		.loc 1 1011 0
 3076 0044 7B68     		ldr	r3, [r7, #4]
 3077 0046 1A68     		ldr	r2, [r3]
 3078 0048 BB68     		ldr	r3, [r7, #8]
 3079 004a 1A60     		str	r2, [r3]
1012:..\src/interruptions.c ****     
1013:..\src/interruptions.c ****             break;
 3080              		.loc 1 1013 0
 3081 004c A5E0     		b	.L193
 3082              	.L197:
1014:..\src/interruptions.c ****         
1015:..\src/interruptions.c ****         case MOVE_SLOW_ACT: // First sinergy movement (related to default slow activation)
1016:..\src/interruptions.c **** 
1017:..\src/interruptions.c ****             if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {   //both motors wind the wire around the 
 3083              		.loc 1 1017 0
 3084 004e 3B68     		ldr	r3, [r7]
 3085 0050 002B     		cmp	r3, #0
 3086 0052 17DD     		ble	.L198
 3087              		.loc 1 1017 0 is_stmt 0 discriminator 1
 3088 0054 3A68     		ldr	r2, [r7]
 3089 0056 BB69     		ldr	r3, [r7, #24]
 3090 0058 9A42     		cmp	r2, r3
 3091 005a 13DD     		ble	.L198
1018:..\src/interruptions.c ****                st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / (1024
 3092              		.loc 1 1018 0 is_stmt 1
 3093 005c 7B68     		ldr	r3, [r7, #4]
 3094 005e 1A68     		ldr	r2, [r3]
 3095 0060 514B     		ldr	r3, .L207+4
 3096 0062 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 3097 0066 1946     		mov	r1, r3
 3098 0068 3B68     		ldr	r3, [r7]
 3099 006a 03FB01F3 		mul	r3, r3, r1
 3100 006e 9900     		lsls	r1, r3, #2
 3101 0070 4E4B     		ldr	r3, .L207+8
 3102 0072 B3F8F031 		ldrh	r3, [r3, #496]
 3103 0076 C3F58063 		rsb	r3, r3, #1024
 3104 007a 91FBF3F3 		sdiv	r3, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 75


 3105 007e 1A44     		add	r2, r2, r3
 3106 0080 BB68     		ldr	r3, [r7, #8]
 3107 0082 1A60     		str	r2, [r3]
 3108              	.L198:
1019:..\src/interruptions.c ****             }
1020:..\src/interruptions.c ****             if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {   //both motors unroll the wire around th
 3109              		.loc 1 1020 0
 3110 0084 BB69     		ldr	r3, [r7, #24]
 3111 0086 002B     		cmp	r3, #0
 3112 0088 40F38480 		ble	.L205
 3113              		.loc 1 1020 0 is_stmt 0 discriminator 1
 3114 008c BA69     		ldr	r2, [r7, #24]
 3115 008e 3B68     		ldr	r3, [r7]
 3116 0090 9A42     		cmp	r2, r3
 3117 0092 7FDD     		ble	.L205
1021:..\src/interruptions.c ****                st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / (1024
 3118              		.loc 1 1021 0 is_stmt 1
 3119 0094 7B68     		ldr	r3, [r7, #4]
 3120 0096 1A68     		ldr	r2, [r3]
 3121 0098 434B     		ldr	r3, .L207+4
 3122 009a 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 3123 009e 1946     		mov	r1, r3
 3124 00a0 BB69     		ldr	r3, [r7, #24]
 3125 00a2 03FB01F3 		mul	r3, r3, r1
 3126 00a6 9900     		lsls	r1, r3, #2
 3127 00a8 404B     		ldr	r3, .L207+8
 3128 00aa B3F8F231 		ldrh	r3, [r3, #498]
 3129 00ae C3F58063 		rsb	r3, r3, #1024
 3130 00b2 91FBF3F3 		sdiv	r3, r1, r3
 3131 00b6 D21A     		subs	r2, r2, r3
 3132 00b8 BB68     		ldr	r3, [r7, #8]
 3133 00ba 1A60     		str	r2, [r3]
1022:..\src/interruptions.c ****             }
1023:..\src/interruptions.c ****             
1024:..\src/interruptions.c ****             break;
 3134              		.loc 1 1024 0
 3135 00bc 6AE0     		b	.L205
 3136              	.L196:
1025:..\src/interruptions.c ****             
1026:..\src/interruptions.c ****         case MOVE_FAST_ACT: // Second sinergy movement (related to default fast activation)
1027:..\src/interruptions.c ****             
1028:..\src/interruptions.c ****             if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {   //(Pinch) The wire is winded around the
 3137              		.loc 1 1028 0
 3138 00be 3B68     		ldr	r3, [r7]
 3139 00c0 002B     		cmp	r3, #0
 3140 00c2 31DD     		ble	.L200
 3141              		.loc 1 1028 0 is_stmt 0 discriminator 1
 3142 00c4 3A68     		ldr	r2, [r7]
 3143 00c6 BB69     		ldr	r3, [r7, #24]
 3144 00c8 9A42     		cmp	r2, r3
 3145 00ca 2DDD     		ble	.L200
1029:..\src/interruptions.c ****                 if (motor_idx == 0){
 3146              		.loc 1 1029 0 is_stmt 1
 3147 00cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3148 00ce 002B     		cmp	r3, #0
 3149 00d0 13D1     		bne	.L201
1030:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 76


 3150              		.loc 1 1030 0
 3151 00d2 7B68     		ldr	r3, [r7, #4]
 3152 00d4 1A68     		ldr	r2, [r3]
 3153 00d6 344B     		ldr	r3, .L207+4
 3154 00d8 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 3155 00dc 1946     		mov	r1, r3
 3156 00de 3B68     		ldr	r3, [r7]
 3157 00e0 03FB01F3 		mul	r3, r3, r1
 3158 00e4 9900     		lsls	r1, r3, #2
 3159 00e6 314B     		ldr	r3, .L207+8
 3160 00e8 B3F8F031 		ldrh	r3, [r3, #496]
 3161 00ec C3F58063 		rsb	r3, r3, #1024
 3162 00f0 91FBF3F3 		sdiv	r3, r1, r3
 3163 00f4 1A44     		add	r2, r2, r3
 3164 00f6 BB68     		ldr	r3, [r7, #8]
 3165 00f8 1A60     		str	r2, [r3]
 3166              	.L201:
1031:..\src/interruptions.c ****                 }
1032:..\src/interruptions.c ****                 if (motor_idx == 1){
 3167              		.loc 1 1032 0
 3168 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3169 00fc 012B     		cmp	r3, #1
 3170 00fe 13D1     		bne	.L200
1033:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos - (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / 
 3171              		.loc 1 1033 0
 3172 0100 7B68     		ldr	r3, [r7, #4]
 3173 0102 1A68     		ldr	r2, [r3]
 3174 0104 284B     		ldr	r3, .L207+4
 3175 0106 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 3176 010a 1946     		mov	r1, r3
 3177 010c 3B68     		ldr	r3, [r7]
 3178 010e 03FB01F3 		mul	r3, r3, r1
 3179 0112 9900     		lsls	r1, r3, #2
 3180 0114 254B     		ldr	r3, .L207+8
 3181 0116 B3F8F031 		ldrh	r3, [r3, #496]
 3182 011a C3F58063 		rsb	r3, r3, #1024
 3183 011e 91FBF3F3 		sdiv	r3, r1, r3
 3184 0122 D21A     		subs	r2, r2, r3
 3185 0124 BB68     		ldr	r3, [r7, #8]
 3186 0126 1A60     		str	r2, [r3]
 3187              	.L200:
1034:..\src/interruptions.c ****                 }   
1035:..\src/interruptions.c ****             }
1036:..\src/interruptions.c ****             if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {   //(Index point) The wire is unwinded fr
 3188              		.loc 1 1036 0
 3189 0128 BB69     		ldr	r3, [r7, #24]
 3190 012a 002B     		cmp	r3, #0
 3191 012c 34DD     		ble	.L206
 3192              		.loc 1 1036 0 is_stmt 0 discriminator 1
 3193 012e BA69     		ldr	r2, [r7, #24]
 3194 0130 3B68     		ldr	r3, [r7]
 3195 0132 9A42     		cmp	r2, r3
 3196 0134 30DD     		ble	.L206
1037:..\src/interruptions.c ****                 if (motor_idx == 0){
 3197              		.loc 1 1037 0 is_stmt 1
 3198 0136 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3199 0138 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 77


 3200 013a 13D1     		bne	.L203
1038:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / 
 3201              		.loc 1 1038 0
 3202 013c 7B68     		ldr	r3, [r7, #4]
 3203 013e 1A68     		ldr	r2, [r3]
 3204 0140 194B     		ldr	r3, .L207+4
 3205 0142 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 3206 0146 1946     		mov	r1, r3
 3207 0148 BB69     		ldr	r3, [r7, #24]
 3208 014a 03FB01F3 		mul	r3, r3, r1
 3209 014e 9900     		lsls	r1, r3, #2
 3210 0150 164B     		ldr	r3, .L207+8
 3211 0152 B3F8F231 		ldrh	r3, [r3, #498]
 3212 0156 C3F58063 		rsb	r3, r3, #1024
 3213 015a 91FBF3F3 		sdiv	r3, r1, r3
 3214 015e D21A     		subs	r2, r2, r3
 3215 0160 BB68     		ldr	r3, [r7, #8]
 3216 0162 1A60     		str	r2, [r3]
 3217              	.L203:
1039:..\src/interruptions.c ****                 }
1040:..\src/interruptions.c ****                 if (motor_idx == 1){
 3218              		.loc 1 1040 0
 3219 0164 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3220 0166 012B     		cmp	r3, #1
 3221 0168 16D1     		bne	.L206
1041:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos + (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / 
 3222              		.loc 1 1041 0
 3223 016a 7B68     		ldr	r3, [r7, #4]
 3224 016c 1A68     		ldr	r2, [r3]
 3225 016e 0E4B     		ldr	r3, .L207+4
 3226 0170 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 3227 0174 1946     		mov	r1, r3
 3228 0176 BB69     		ldr	r3, [r7, #24]
 3229 0178 03FB01F3 		mul	r3, r3, r1
 3230 017c 9900     		lsls	r1, r3, #2
 3231 017e 0B4B     		ldr	r3, .L207+8
 3232 0180 B3F8F231 		ldrh	r3, [r3, #498]
 3233 0184 C3F58063 		rsb	r3, r3, #1024
 3234 0188 91FBF3F3 		sdiv	r3, r1, r3
 3235 018c 1A44     		add	r2, r2, r3
 3236 018e BB68     		ldr	r3, [r7, #8]
 3237 0190 1A60     		str	r2, [r3]
1042:..\src/interruptions.c ****                 }
1043:..\src/interruptions.c ****             }
1044:..\src/interruptions.c ****             
1045:..\src/interruptions.c ****             break;
 3238              		.loc 1 1045 0
 3239 0192 01E0     		b	.L206
 3240              	.L205:
1024:..\src/interruptions.c ****             
 3241              		.loc 1 1024 0
 3242 0194 00BF     		nop
 3243 0196 00E0     		b	.L204
 3244              	.L206:
 3245              		.loc 1 1045 0
 3246 0198 00BF     		nop
 3247              	.L193:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 78


 3248              	.L204:
1046:..\src/interruptions.c ****     }
1047:..\src/interruptions.c ****  
1048:..\src/interruptions.c **** }
 3249              		.loc 1 1048 0
 3250 019a 00BF     		nop
 3251 019c 1037     		adds	r7, r7, #16
 3252              		.cfi_def_cfa_offset 8
 3253 019e BD46     		mov	sp, r7
 3254              		.cfi_def_cfa_register 13
 3255              		@ sp needed
 3256 01a0 80BD     		pop	{r7, pc}
 3257              	.L208:
 3258 01a2 00BF     		.align	2
 3259              	.L207:
 3260 01a4 8E000000 		.word	fsm_state.10622
 3261 01a8 00000000 		.word	g_mem
 3262 01ac 00000000 		.word	c_mem
 3263              		.cfi_endproc
 3264              	.LFE70:
 3265              		.size	compute_SoftHand_2_motors_emg_reference, .-compute_SoftHand_2_motors_emg_reference
 3266              		.section	.text.motor_control_SH,"ax",%progbits
 3267              		.align	2
 3268              		.global	motor_control_SH
 3269              		.thumb
 3270              		.thumb_func
 3271              		.type	motor_control_SH, %function
 3272              	motor_control_SH:
 3273              	.LFB71:
1049:..\src/interruptions.c **** 
1050:..\src/interruptions.c **** //==============================================================================
1051:..\src/interruptions.c **** //                                                        MOTOR CONTROL SOFTHAND
1052:..\src/interruptions.c **** //==============================================================================
1053:..\src/interruptions.c **** void motor_control_SH() {
 3274              		.loc 1 1053 0
 3275              		.cfi_startproc
 3276              		@ args = 0, pretend = 0, frame = 80
 3277              		@ frame_needed = 1, uses_anonymous_args = 0
 3278 0000 80B5     		push	{r7, lr}
 3279              		.cfi_def_cfa_offset 8
 3280              		.cfi_offset 7, -8
 3281              		.cfi_offset 14, -4
 3282 0002 94B0     		sub	sp, sp, #80
 3283              		.cfi_def_cfa_offset 88
 3284 0004 00AF     		add	r7, sp, #0
 3285              		.cfi_def_cfa_register 7
1054:..\src/interruptions.c **** 
1055:..\src/interruptions.c ****     int32 CYDATA pwm_input = 0;
 3286              		.loc 1 1055 0
 3287 0006 0023     		movs	r3, #0
 3288 0008 FB64     		str	r3, [r7, #76]
1056:..\src/interruptions.c ****     int32 CYDATA pos_error;         // position error
1057:..\src/interruptions.c ****     int32 CYDATA curr_error;        // current error
1058:..\src/interruptions.c ****     int32 CYDATA i_ref;             // current reference
1059:..\src/interruptions.c ****  
1060:..\src/interruptions.c ****     uint8 MOTOR_IDX = 0;
 3289              		.loc 1 1060 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 79


 3290 000a 0023     		movs	r3, #0
 3291 000c 87F84730 		strb	r3, [r7, #71]
1061:..\src/interruptions.c ****     
1062:..\src/interruptions.c ****     struct st_motor* SH_MOT = &c_mem.motor[MOTOR_IDX];      // SoftHand default motor
 3292              		.loc 1 1062 0
 3293 0010 97F84720 		ldrb	r2, [r7, #71]	@ zero_extendqisi2
 3294 0014 1346     		mov	r3, r2
 3295 0016 DB00     		lsls	r3, r3, #3
 3296 0018 9B1A     		subs	r3, r3, r2
 3297 001a 1B01     		lsls	r3, r3, #4
 3298 001c B033     		adds	r3, r3, #176
 3299 001e 9D4A     		ldr	r2, .L270
 3300 0020 1344     		add	r3, r3, r2
 3301 0022 3B64     		str	r3, [r7, #64]
1063:..\src/interruptions.c ****     uint8 SH_ENC_L = SH_MOT->encoder_line;          // Associated encoder line
 3302              		.loc 1 1063 0
 3303 0024 3B6C     		ldr	r3, [r7, #64]
 3304 0026 93F86030 		ldrb	r3, [r3, #96]
 3305 002a 87F83F30 		strb	r3, [r7, #63]
1064:..\src/interruptions.c ****     
1065:..\src/interruptions.c ****     int32 CYDATA k_p = SH_MOT->k_p;  
 3306              		.loc 1 1065 0
 3307 002e 3B6C     		ldr	r3, [r7, #64]
 3308 0030 1B68     		ldr	r3, [r3]
 3309 0032 BB63     		str	r3, [r7, #56]
1066:..\src/interruptions.c ****     int32 CYDATA k_i = SH_MOT->k_i; 
 3310              		.loc 1 1066 0
 3311 0034 3B6C     		ldr	r3, [r7, #64]
 3312 0036 5B68     		ldr	r3, [r3, #4]
 3313 0038 7B63     		str	r3, [r7, #52]
1067:..\src/interruptions.c ****     int32 CYDATA k_d = SH_MOT->k_d; 
 3314              		.loc 1 1067 0
 3315 003a 3B6C     		ldr	r3, [r7, #64]
 3316 003c 9B68     		ldr	r3, [r3, #8]
 3317 003e 3B63     		str	r3, [r7, #48]
1068:..\src/interruptions.c **** 
1069:..\src/interruptions.c ****     int32 CYDATA k_p_c = SH_MOT->k_p_c;  
 3318              		.loc 1 1069 0
 3319 0040 3B6C     		ldr	r3, [r7, #64]
 3320 0042 DB68     		ldr	r3, [r3, #12]
 3321 0044 FB62     		str	r3, [r7, #44]
1070:..\src/interruptions.c ****     int32 CYDATA k_i_c = SH_MOT->k_i_c; 
 3322              		.loc 1 1070 0
 3323 0046 3B6C     		ldr	r3, [r7, #64]
 3324 0048 1B69     		ldr	r3, [r3, #16]
 3325 004a BB62     		str	r3, [r7, #40]
1071:..\src/interruptions.c ****     int32 CYDATA k_d_c = SH_MOT->k_d_c;   
 3326              		.loc 1 1071 0
 3327 004c 3B6C     		ldr	r3, [r7, #64]
 3328 004e 5B69     		ldr	r3, [r3, #20]
 3329 0050 7B62     		str	r3, [r7, #36]
1072:..\src/interruptions.c **** 
1073:..\src/interruptions.c ****     int32 CYDATA k_p_dl = SH_MOT->k_p_dl;  
 3330              		.loc 1 1073 0
 3331 0052 3B6C     		ldr	r3, [r7, #64]
 3332 0054 9B69     		ldr	r3, [r3, #24]
 3333 0056 3B62     		str	r3, [r7, #32]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 80


1074:..\src/interruptions.c ****     int32 CYDATA k_i_dl = SH_MOT->k_i_dl; 
 3334              		.loc 1 1074 0
 3335 0058 3B6C     		ldr	r3, [r7, #64]
 3336 005a DB69     		ldr	r3, [r3, #28]
 3337 005c FB61     		str	r3, [r7, #28]
1075:..\src/interruptions.c ****     int32 CYDATA k_d_dl = SH_MOT->k_d_dl;
 3338              		.loc 1 1075 0
 3339 005e 3B6C     		ldr	r3, [r7, #64]
 3340 0060 1B6A     		ldr	r3, [r3, #32]
 3341 0062 BB61     		str	r3, [r7, #24]
1076:..\src/interruptions.c ****     
1077:..\src/interruptions.c ****     int32 CYDATA k_p_c_dl = SH_MOT->k_p_c_dl;  
 3342              		.loc 1 1077 0
 3343 0064 3B6C     		ldr	r3, [r7, #64]
 3344 0066 5B6A     		ldr	r3, [r3, #36]
 3345 0068 7B61     		str	r3, [r7, #20]
1078:..\src/interruptions.c ****     int32 CYDATA k_i_c_dl = SH_MOT->k_i_c_dl; 
 3346              		.loc 1 1078 0
 3347 006a 3B6C     		ldr	r3, [r7, #64]
 3348 006c 9B6A     		ldr	r3, [r3, #40]
 3349 006e 3B61     		str	r3, [r7, #16]
1079:..\src/interruptions.c ****     int32 CYDATA k_d_c_dl = SH_MOT->k_d_c_dl;   
 3350              		.loc 1 1079 0
 3351 0070 3B6C     		ldr	r3, [r7, #64]
 3352 0072 DB6A     		ldr	r3, [r3, #44]
 3353 0074 FB60     		str	r3, [r7, #12]
1080:..\src/interruptions.c **** 
1081:..\src/interruptions.c ****     // Static Variables
1082:..\src/interruptions.c **** 
1083:..\src/interruptions.c ****     static int32 pos_error_sum;     // position error sum for integral
1084:..\src/interruptions.c ****     static int32 curr_error_sum;    // current error sum for integral
1085:..\src/interruptions.c ****     
1086:..\src/interruptions.c ****     static int32 prev_pos_err;      // previous position error for deriv. control
1087:..\src/interruptions.c ****     static int32 prev_curr_err;     // previous current error for deriv. control
1088:..\src/interruptions.c ****     static int32 prev_pwm;
1089:..\src/interruptions.c **** 
1090:..\src/interruptions.c ****     static CYBIT motor_dir = FALSE;
1091:..\src/interruptions.c ****     static uint32 position_counter = 0;
1092:..\src/interruptions.c ****   
1093:..\src/interruptions.c ****     // ======================= UPDATE MOTOR REFERENCE ==========================            
1094:..\src/interruptions.c ****     compute_reference(MOTOR_IDX, &g_ref[MOTOR_IDX], &g_refOld[MOTOR_IDX]);
 3354              		.loc 1 1094 0
 3355 0076 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3356 007a 1B01     		lsls	r3, r3, #4
 3357 007c 864A     		ldr	r2, .L270+4
 3358 007e 9918     		adds	r1, r3, r2
 3359 0080 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3360 0084 1B01     		lsls	r3, r3, #4
 3361 0086 854A     		ldr	r2, .L270+8
 3362 0088 1A44     		add	r2, r2, r3
 3363 008a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3364 008e 1846     		mov	r0, r3
 3365 0090 FFF7FEFF 		bl	compute_reference
1095:..\src/interruptions.c ****      
1096:..\src/interruptions.c ****     switch(SH_MOT->control_mode) {
 3366              		.loc 1 1096 0
 3367 0094 3B6C     		ldr	r3, [r7, #64]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 81


 3368 0096 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 3369 009a 032B     		cmp	r3, #3
 3370 009c 00F2F781 		bhi	.L210
 3371 00a0 01A2     		adr	r2, .L212
 3372 00a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3373 00a6 00BF     		.p2align 2
 3374              	.L212:
 3375 00a8 55020000 		.word	.L211+1
 3376 00ac 49040000 		.word	.L213+1
 3377 00b0 3B030000 		.word	.L214+1
 3378 00b4 B9000000 		.word	.L215+1
 3379              		.p2align 1
 3380              	.L215:
1097:..\src/interruptions.c ****         // ======================= CURRENT AND POSITION CONTROL =======================
1098:..\src/interruptions.c ****         case CURR_AND_POS_CONTROL:
1099:..\src/interruptions.c ****             pos_error = g_ref[MOTOR_IDX].pos - g_meas[SH_ENC_L].pos[0];
 3381              		.loc 1 1099 0
 3382 00b8 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3383 00bc 764A     		ldr	r2, .L270+4
 3384 00be 1B01     		lsls	r3, r3, #4
 3385 00c0 1344     		add	r3, r3, r2
 3386 00c2 1A68     		ldr	r2, [r3]
 3387 00c4 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3388 00c8 7549     		ldr	r1, .L270+12
 3389 00ca 3420     		movs	r0, #52
 3390 00cc 00FB03F3 		mul	r3, r0, r3
 3391 00d0 0B44     		add	r3, r3, r1
 3392 00d2 1B68     		ldr	r3, [r3]
 3393 00d4 D31A     		subs	r3, r2, r3
 3394 00d6 BB60     		str	r3, [r7, #8]
1100:..\src/interruptions.c **** 
1101:..\src/interruptions.c ****             pos_error_sum += pos_error;
 3395              		.loc 1 1101 0
 3396 00d8 724B     		ldr	r3, .L270+16
 3397 00da 1A68     		ldr	r2, [r3]
 3398 00dc BB68     		ldr	r3, [r7, #8]
 3399 00de 1344     		add	r3, r3, r2
 3400 00e0 704A     		ldr	r2, .L270+16
 3401 00e2 1360     		str	r3, [r2]
1102:..\src/interruptions.c **** 
1103:..\src/interruptions.c ****             // error_sum saturation
1104:..\src/interruptions.c ****             if (pos_error_sum > POS_INTEGRAL_SAT_LIMIT)
 3402              		.loc 1 1104 0
 3403 00e4 6F4B     		ldr	r3, .L270+16
 3404 00e6 1B68     		ldr	r3, [r3]
 3405 00e8 6F4A     		ldr	r2, .L270+20
 3406 00ea 9342     		cmp	r3, r2
 3407 00ec 03DD     		ble	.L216
1105:..\src/interruptions.c ****                 pos_error_sum = POS_INTEGRAL_SAT_LIMIT;
 3408              		.loc 1 1105 0
 3409 00ee 6D4B     		ldr	r3, .L270+16
 3410 00f0 6D4A     		ldr	r2, .L270+20
 3411 00f2 1A60     		str	r2, [r3]
 3412 00f4 07E0     		b	.L217
 3413              	.L216:
1106:..\src/interruptions.c ****             else {
1107:..\src/interruptions.c ****                 if (pos_error_sum < -POS_INTEGRAL_SAT_LIMIT) 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 82


 3414              		.loc 1 1107 0
 3415 00f6 6B4B     		ldr	r3, .L270+16
 3416 00f8 1B68     		ldr	r3, [r3]
 3417 00fa 6C4A     		ldr	r2, .L270+24
 3418 00fc 9342     		cmp	r3, r2
 3419 00fe 02DA     		bge	.L217
1108:..\src/interruptions.c ****                     pos_error_sum = -POS_INTEGRAL_SAT_LIMIT;
 3420              		.loc 1 1108 0
 3421 0100 684B     		ldr	r3, .L270+16
 3422 0102 6A4A     		ldr	r2, .L270+24
 3423 0104 1A60     		str	r2, [r3]
 3424              	.L217:
1109:..\src/interruptions.c ****             }
1110:..\src/interruptions.c ****             
1111:..\src/interruptions.c ****             // ------ position PID control ------
1112:..\src/interruptions.c **** 
1113:..\src/interruptions.c ****             i_ref = 0;
 3425              		.loc 1 1113 0
 3426 0106 0023     		movs	r3, #0
 3427 0108 BB64     		str	r3, [r7, #72]
1114:..\src/interruptions.c ****             
1115:..\src/interruptions.c ****             // Proportional
1116:..\src/interruptions.c ****             if (k_p_dl != 0)
 3428              		.loc 1 1116 0
 3429 010a 3B6A     		ldr	r3, [r7, #32]
 3430 010c 002B     		cmp	r3, #0
 3431 010e 07D0     		beq	.L218
1117:..\src/interruptions.c ****                 i_ref += (int32)(k_p_dl * pos_error) >> 16;
 3432              		.loc 1 1117 0
 3433 0110 3B6A     		ldr	r3, [r7, #32]
 3434 0112 BA68     		ldr	r2, [r7, #8]
 3435 0114 02FB03F3 		mul	r3, r2, r3
 3436 0118 1B14     		asrs	r3, r3, #16
 3437 011a BA6C     		ldr	r2, [r7, #72]
 3438 011c 1344     		add	r3, r3, r2
 3439 011e BB64     		str	r3, [r7, #72]
 3440              	.L218:
1118:..\src/interruptions.c **** 
1119:..\src/interruptions.c ****             // Integral
1120:..\src/interruptions.c ****             if (k_i_dl != 0)
 3441              		.loc 1 1120 0
 3442 0120 FB69     		ldr	r3, [r7, #28]
 3443 0122 002B     		cmp	r3, #0
 3444 0124 08D0     		beq	.L219
1121:..\src/interruptions.c ****                 i_ref += (int32)(k_i_dl * pos_error_sum) >> 16;
 3445              		.loc 1 1121 0
 3446 0126 5F4B     		ldr	r3, .L270+16
 3447 0128 1B68     		ldr	r3, [r3]
 3448 012a FA69     		ldr	r2, [r7, #28]
 3449 012c 02FB03F3 		mul	r3, r2, r3
 3450 0130 1B14     		asrs	r3, r3, #16
 3451 0132 BA6C     		ldr	r2, [r7, #72]
 3452 0134 1344     		add	r3, r3, r2
 3453 0136 BB64     		str	r3, [r7, #72]
 3454              	.L219:
1122:..\src/interruptions.c **** 
1123:..\src/interruptions.c ****             // Derivative
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 83


1124:..\src/interruptions.c ****             if (k_d_dl != 0)
 3455              		.loc 1 1124 0
 3456 0138 BB69     		ldr	r3, [r7, #24]
 3457 013a 002B     		cmp	r3, #0
 3458 013c 0AD0     		beq	.L220
1125:..\src/interruptions.c ****                 i_ref += (int32)(k_d_dl * (pos_error - prev_pos_err)) >> 16;
 3459              		.loc 1 1125 0
 3460 013e 5C4B     		ldr	r3, .L270+28
 3461 0140 1B68     		ldr	r3, [r3]
 3462 0142 BA68     		ldr	r2, [r7, #8]
 3463 0144 D31A     		subs	r3, r2, r3
 3464 0146 BA69     		ldr	r2, [r7, #24]
 3465 0148 02FB03F3 		mul	r3, r2, r3
 3466 014c 1B14     		asrs	r3, r3, #16
 3467 014e BA6C     		ldr	r2, [r7, #72]
 3468 0150 1344     		add	r3, r3, r2
 3469 0152 BB64     		str	r3, [r7, #72]
 3470              	.L220:
1126:..\src/interruptions.c ****                         
1127:..\src/interruptions.c ****             // Update previous position
1128:..\src/interruptions.c ****             prev_pos_err = pos_error;
 3471              		.loc 1 1128 0
 3472 0154 564A     		ldr	r2, .L270+28
 3473 0156 BB68     		ldr	r3, [r7, #8]
 3474 0158 1360     		str	r3, [r2]
1129:..\src/interruptions.c **** 
1130:..\src/interruptions.c ****             // motor direction depends on i_ref
1131:..\src/interruptions.c ****             if (i_ref >= 0)
 3475              		.loc 1 1131 0
 3476 015a BB6C     		ldr	r3, [r7, #72]
 3477 015c 002B     		cmp	r3, #0
 3478 015e 03DB     		blt	.L221
1132:..\src/interruptions.c ****                 motor_dir = TRUE;
 3479              		.loc 1 1132 0
 3480 0160 544B     		ldr	r3, .L270+32
 3481 0162 0122     		movs	r2, #1
 3482 0164 1A70     		strb	r2, [r3]
 3483 0166 02E0     		b	.L222
 3484              	.L221:
1133:..\src/interruptions.c ****             else
1134:..\src/interruptions.c ****                 motor_dir = FALSE;
 3485              		.loc 1 1134 0
 3486 0168 524B     		ldr	r3, .L270+32
 3487 016a 0022     		movs	r2, #0
 3488 016c 1A70     		strb	r2, [r3]
 3489              	.L222:
1135:..\src/interruptions.c **** 
1136:..\src/interruptions.c ****             // saturate max current
1137:..\src/interruptions.c ****             if (i_ref > SH_MOT->current_limit)
 3490              		.loc 1 1137 0
 3491 016e 3B6C     		ldr	r3, [r7, #64]
 3492 0170 B3F95C30 		ldrsh	r3, [r3, #92]
 3493 0174 1A46     		mov	r2, r3
 3494 0176 BB6C     		ldr	r3, [r7, #72]
 3495 0178 9A42     		cmp	r2, r3
 3496 017a 04DA     		bge	.L223
1138:..\src/interruptions.c ****                 i_ref = SH_MOT->current_limit;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 84


 3497              		.loc 1 1138 0
 3498 017c 3B6C     		ldr	r3, [r7, #64]
 3499 017e B3F95C30 		ldrsh	r3, [r3, #92]
 3500 0182 BB64     		str	r3, [r7, #72]
 3501 0184 0BE0     		b	.L224
 3502              	.L223:
1139:..\src/interruptions.c ****             else {
1140:..\src/interruptions.c ****                 if (i_ref < -SH_MOT->current_limit)
 3503              		.loc 1 1140 0
 3504 0186 3B6C     		ldr	r3, [r7, #64]
 3505 0188 B3F95C30 		ldrsh	r3, [r3, #92]
 3506 018c 5A42     		negs	r2, r3
 3507 018e BB6C     		ldr	r3, [r7, #72]
 3508 0190 9A42     		cmp	r2, r3
 3509 0192 04DD     		ble	.L224
1141:..\src/interruptions.c ****                     i_ref = -SH_MOT->current_limit;
 3510              		.loc 1 1141 0
 3511 0194 3B6C     		ldr	r3, [r7, #64]
 3512 0196 B3F95C30 		ldrsh	r3, [r3, #92]
 3513 019a 5B42     		negs	r3, r3
 3514 019c BB64     		str	r3, [r7, #72]
 3515              	.L224:
1142:..\src/interruptions.c ****         	}
1143:..\src/interruptions.c **** 
1144:..\src/interruptions.c ****             // current error and curr error sum
1145:..\src/interruptions.c ****             curr_error = i_ref - g_meas[SH_ENC_L].curr;
 3516              		.loc 1 1145 0
 3517 019e 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3518 01a2 3F4A     		ldr	r2, .L270+12
 3519 01a4 3421     		movs	r1, #52
 3520 01a6 01FB03F3 		mul	r3, r1, r3
 3521 01aa 1344     		add	r3, r3, r2
 3522 01ac 0C33     		adds	r3, r3, #12
 3523 01ae 1B68     		ldr	r3, [r3]
 3524 01b0 BA6C     		ldr	r2, [r7, #72]
 3525 01b2 D31A     		subs	r3, r2, r3
 3526 01b4 7B60     		str	r3, [r7, #4]
1146:..\src/interruptions.c ****             curr_error_sum += curr_error;
 3527              		.loc 1 1146 0
 3528 01b6 404B     		ldr	r3, .L270+36
 3529 01b8 1A68     		ldr	r2, [r3]
 3530 01ba 7B68     		ldr	r3, [r7, #4]
 3531 01bc 1344     		add	r3, r3, r2
 3532 01be 3E4A     		ldr	r2, .L270+36
 3533 01c0 1360     		str	r3, [r2]
1147:..\src/interruptions.c ****             
1148:..\src/interruptions.c ****             if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 3534              		.loc 1 1148 0
 3535 01c2 3D4B     		ldr	r3, .L270+36
 3536 01c4 1B68     		ldr	r3, [r3]
 3537 01c6 3D4A     		ldr	r2, .L270+40
 3538 01c8 9342     		cmp	r3, r2
 3539 01ca 03DD     		ble	.L225
1149:..\src/interruptions.c ****                 curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 3540              		.loc 1 1149 0
 3541 01cc 3A4B     		ldr	r3, .L270+36
 3542 01ce 3B4A     		ldr	r2, .L270+40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 85


 3543 01d0 1A60     		str	r2, [r3]
 3544 01d2 07E0     		b	.L226
 3545              	.L225:
1150:..\src/interruptions.c ****             else {
1151:..\src/interruptions.c ****                 if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT)
 3546              		.loc 1 1151 0
 3547 01d4 384B     		ldr	r3, .L270+36
 3548 01d6 1B68     		ldr	r3, [r3]
 3549 01d8 394A     		ldr	r2, .L270+44
 3550 01da 9342     		cmp	r3, r2
 3551 01dc 02DA     		bge	.L226
1152:..\src/interruptions.c ****                     curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 3552              		.loc 1 1152 0
 3553 01de 364B     		ldr	r3, .L270+36
 3554 01e0 374A     		ldr	r2, .L270+44
 3555 01e2 1A60     		str	r2, [r3]
 3556              	.L226:
1153:..\src/interruptions.c ****             }
1154:..\src/interruptions.c **** 
1155:..\src/interruptions.c ****             // ----- current PID control -----
1156:..\src/interruptions.c **** 
1157:..\src/interruptions.c ****             pwm_input = 0;
 3557              		.loc 1 1157 0
 3558 01e4 0023     		movs	r3, #0
 3559 01e6 FB64     		str	r3, [r7, #76]
1158:..\src/interruptions.c **** 
1159:..\src/interruptions.c ****             // Proportional
1160:..\src/interruptions.c ****             if (k_p_c_dl != 0)
 3560              		.loc 1 1160 0
 3561 01e8 7B69     		ldr	r3, [r7, #20]
 3562 01ea 002B     		cmp	r3, #0
 3563 01ec 07D0     		beq	.L227
1161:..\src/interruptions.c ****                 pwm_input += (int32)(k_p_c_dl * curr_error) >> 16;
 3564              		.loc 1 1161 0
 3565 01ee 7B69     		ldr	r3, [r7, #20]
 3566 01f0 7A68     		ldr	r2, [r7, #4]
 3567 01f2 02FB03F3 		mul	r3, r2, r3
 3568 01f6 1B14     		asrs	r3, r3, #16
 3569 01f8 FA6C     		ldr	r2, [r7, #76]
 3570 01fa 1344     		add	r3, r3, r2
 3571 01fc FB64     		str	r3, [r7, #76]
 3572              	.L227:
1162:..\src/interruptions.c **** 
1163:..\src/interruptions.c ****             // Integral
1164:..\src/interruptions.c ****             if (k_i_c_dl != 0)
 3573              		.loc 1 1164 0
 3574 01fe 3B69     		ldr	r3, [r7, #16]
 3575 0200 002B     		cmp	r3, #0
 3576 0202 08D0     		beq	.L228
1165:..\src/interruptions.c ****                 pwm_input += (int32)(k_i_c_dl * curr_error_sum) >> 16;
 3577              		.loc 1 1165 0
 3578 0204 2C4B     		ldr	r3, .L270+36
 3579 0206 1B68     		ldr	r3, [r3]
 3580 0208 3A69     		ldr	r2, [r7, #16]
 3581 020a 02FB03F3 		mul	r3, r2, r3
 3582 020e 1B14     		asrs	r3, r3, #16
 3583 0210 FA6C     		ldr	r2, [r7, #76]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 86


 3584 0212 1344     		add	r3, r3, r2
 3585 0214 FB64     		str	r3, [r7, #76]
 3586              	.L228:
1166:..\src/interruptions.c **** 
1167:..\src/interruptions.c ****             // Derivative
1168:..\src/interruptions.c ****             if (k_d_c_dl != 0)
 3587              		.loc 1 1168 0
 3588 0216 FB68     		ldr	r3, [r7, #12]
 3589 0218 002B     		cmp	r3, #0
 3590 021a 0AD0     		beq	.L229
1169:..\src/interruptions.c ****                 pwm_input += (int32)(k_d_c_dl * (curr_error - prev_curr_err)) >> 16;
 3591              		.loc 1 1169 0
 3592 021c 294B     		ldr	r3, .L270+48
 3593 021e 1B68     		ldr	r3, [r3]
 3594 0220 7A68     		ldr	r2, [r7, #4]
 3595 0222 D31A     		subs	r3, r2, r3
 3596 0224 FA68     		ldr	r2, [r7, #12]
 3597 0226 02FB03F3 		mul	r3, r2, r3
 3598 022a 1B14     		asrs	r3, r3, #16
 3599 022c FA6C     		ldr	r2, [r7, #76]
 3600 022e 1344     		add	r3, r3, r2
 3601 0230 FB64     		str	r3, [r7, #76]
 3602              	.L229:
1170:..\src/interruptions.c **** 
1171:..\src/interruptions.c ****             // pwm_input saturation
1172:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE_DC) 
 3603              		.loc 1 1172 0
 3604 0232 FB6C     		ldr	r3, [r7, #76]
 3605 0234 13F1640F 		cmn	r3, #100
 3606 0238 03DA     		bge	.L230
1173:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE_DC;
 3607              		.loc 1 1173 0
 3608 023a 6FF06303 		mvn	r3, #99
 3609 023e FB64     		str	r3, [r7, #76]
 3610 0240 04E0     		b	.L231
 3611              	.L230:
1174:..\src/interruptions.c ****             else {
1175:..\src/interruptions.c ****                 if (pwm_input > PWM_MAX_VALUE_DC)
 3612              		.loc 1 1175 0
 3613 0242 FB6C     		ldr	r3, [r7, #76]
 3614 0244 642B     		cmp	r3, #100
 3615 0246 01DD     		ble	.L231
1176:..\src/interruptions.c ****                     pwm_input = PWM_MAX_VALUE_DC;
 3616              		.loc 1 1176 0
 3617 0248 6423     		movs	r3, #100
 3618 024a FB64     		str	r3, [r7, #76]
 3619              	.L231:
1177:..\src/interruptions.c ****             }
1178:..\src/interruptions.c **** 
1179:..\src/interruptions.c ****             // Update previous current
1180:..\src/interruptions.c ****             prev_curr_err = curr_error;
 3620              		.loc 1 1180 0
 3621 024c 1D4A     		ldr	r2, .L270+48
 3622 024e 7B68     		ldr	r3, [r7, #4]
 3623 0250 1360     		str	r3, [r2]
1181:..\src/interruptions.c **** 
1182:..\src/interruptions.c ****         break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 87


 3624              		.loc 1 1182 0
 3625 0252 1CE1     		b	.L210
 3626              	.L211:
1183:..\src/interruptions.c **** 
1184:..\src/interruptions.c ****         // ============================== POSITION CONTROL =====================
1185:..\src/interruptions.c ****         case CONTROL_ANGLE:
1186:..\src/interruptions.c ****             pos_error = g_ref[MOTOR_IDX].pos - g_meas[SH_ENC_L].pos[0];
 3627              		.loc 1 1186 0
 3628 0254 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3629 0258 0F4A     		ldr	r2, .L270+4
 3630 025a 1B01     		lsls	r3, r3, #4
 3631 025c 1344     		add	r3, r3, r2
 3632 025e 1A68     		ldr	r2, [r3]
 3633 0260 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3634 0264 0E49     		ldr	r1, .L270+12
 3635 0266 3420     		movs	r0, #52
 3636 0268 00FB03F3 		mul	r3, r0, r3
 3637 026c 0B44     		add	r3, r3, r1
 3638 026e 1B68     		ldr	r3, [r3]
 3639 0270 D31A     		subs	r3, r2, r3
 3640 0272 BB60     		str	r3, [r7, #8]
1187:..\src/interruptions.c **** 
1188:..\src/interruptions.c ****             pos_error_sum += pos_error;
 3641              		.loc 1 1188 0
 3642 0274 0B4B     		ldr	r3, .L270+16
 3643 0276 1A68     		ldr	r2, [r3]
 3644 0278 BB68     		ldr	r3, [r7, #8]
 3645 027a 1344     		add	r3, r3, r2
 3646 027c 094A     		ldr	r2, .L270+16
 3647 027e 1360     		str	r3, [r2]
1189:..\src/interruptions.c **** 
1190:..\src/interruptions.c ****             // anti-windup (for integral control)
1191:..\src/interruptions.c ****             if (pos_error_sum > ANTI_WINDUP)
 3648              		.loc 1 1191 0
 3649 0280 084B     		ldr	r3, .L270+16
 3650 0282 1B68     		ldr	r3, [r3]
 3651 0284 B3F57A7F 		cmp	r3, #1000
 3652 0288 1EDD     		ble	.L232
1192:..\src/interruptions.c ****                 pos_error_sum = ANTI_WINDUP;
 3653              		.loc 1 1192 0
 3654 028a 064B     		ldr	r3, .L270+16
 3655 028c 4FF47A72 		mov	r2, #1000
 3656 0290 1A60     		str	r2, [r3]
 3657 0292 21E0     		b	.L233
 3658              	.L271:
 3659              		.align	2
 3660              	.L270:
 3661 0294 00000000 		.word	c_mem
 3662 0298 00000000 		.word	g_ref
 3663 029c 00000000 		.word	g_refOld
 3664 02a0 00000000 		.word	g_meas
 3665 02a4 90000000 		.word	pos_error_sum.10649
 3666 02a8 80F0FA02 		.word	50000000
 3667 02ac 800F05FD 		.word	-50000000
 3668 02b0 94000000 		.word	prev_pos_err.10651
 3669 02b4 98000000 		.word	motor_dir.10654
 3670 02b8 9C000000 		.word	curr_error_sum.10650
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 88


 3671 02bc A0860100 		.word	100000
 3672 02c0 6079FEFF 		.word	-100000
 3673 02c4 A0000000 		.word	prev_curr_err.10652
 3674              	.L232:
1193:..\src/interruptions.c ****             else {
1194:..\src/interruptions.c **** 				if (pos_error_sum < -ANTI_WINDUP)
 3675              		.loc 1 1194 0
 3676 02c8 9D4B     		ldr	r3, .L272
 3677 02ca 1B68     		ldr	r3, [r3]
 3678 02cc 13F57A7F 		cmn	r3, #1000
 3679 02d0 02DA     		bge	.L233
1195:..\src/interruptions.c ****                 	pos_error_sum = -ANTI_WINDUP;
 3680              		.loc 1 1195 0
 3681 02d2 9B4B     		ldr	r3, .L272
 3682 02d4 9B4A     		ldr	r2, .L272+4
 3683 02d6 1A60     		str	r2, [r3]
 3684              	.L233:
1196:..\src/interruptions.c ****             }
1197:..\src/interruptions.c **** 
1198:..\src/interruptions.c ****             // Proportional
1199:..\src/interruptions.c ****             if (k_p != 0) 
 3685              		.loc 1 1199 0
 3686 02d8 BB6B     		ldr	r3, [r7, #56]
 3687 02da 002B     		cmp	r3, #0
 3688 02dc 05D0     		beq	.L234
1200:..\src/interruptions.c ****                 pwm_input = (int32)(k_p * pos_error) >> 16;
 3689              		.loc 1 1200 0
 3690 02de BB6B     		ldr	r3, [r7, #56]
 3691 02e0 BA68     		ldr	r2, [r7, #8]
 3692 02e2 02FB03F3 		mul	r3, r2, r3
 3693 02e6 1B14     		asrs	r3, r3, #16
 3694 02e8 FB64     		str	r3, [r7, #76]
 3695              	.L234:
1201:..\src/interruptions.c ****             
1202:..\src/interruptions.c **** 
1203:..\src/interruptions.c ****             // Integral
1204:..\src/interruptions.c ****             if (k_i != 0) 
 3696              		.loc 1 1204 0
 3697 02ea 7B6B     		ldr	r3, [r7, #52]
 3698 02ec 002B     		cmp	r3, #0
 3699 02ee 08D0     		beq	.L235
1205:..\src/interruptions.c ****                 pwm_input += (int32)(k_i * pos_error_sum) >> 16;
 3700              		.loc 1 1205 0
 3701 02f0 934B     		ldr	r3, .L272
 3702 02f2 1B68     		ldr	r3, [r3]
 3703 02f4 7A6B     		ldr	r2, [r7, #52]
 3704 02f6 02FB03F3 		mul	r3, r2, r3
 3705 02fa 1B14     		asrs	r3, r3, #16
 3706 02fc FA6C     		ldr	r2, [r7, #76]
 3707 02fe 1344     		add	r3, r3, r2
 3708 0300 FB64     		str	r3, [r7, #76]
 3709              	.L235:
1206:..\src/interruptions.c ****             
1207:..\src/interruptions.c **** 
1208:..\src/interruptions.c ****             // Derivative
1209:..\src/interruptions.c ****             if (k_d != 0) 
 3710              		.loc 1 1209 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 89


 3711 0302 3B6B     		ldr	r3, [r7, #48]
 3712 0304 002B     		cmp	r3, #0
 3713 0306 0AD0     		beq	.L236
1210:..\src/interruptions.c ****                 pwm_input += (int32)(k_d * (pos_error - prev_pos_err)) >> 16;
 3714              		.loc 1 1210 0
 3715 0308 8F4B     		ldr	r3, .L272+8
 3716 030a 1B68     		ldr	r3, [r3]
 3717 030c BA68     		ldr	r2, [r7, #8]
 3718 030e D31A     		subs	r3, r2, r3
 3719 0310 3A6B     		ldr	r2, [r7, #48]
 3720 0312 02FB03F3 		mul	r3, r2, r3
 3721 0316 1B14     		asrs	r3, r3, #16
 3722 0318 FA6C     		ldr	r2, [r7, #76]
 3723 031a 1344     		add	r3, r3, r2
 3724 031c FB64     		str	r3, [r7, #76]
 3725              	.L236:
1211:..\src/interruptions.c ****             
1212:..\src/interruptions.c **** 
1213:..\src/interruptions.c ****             // Update measure
1214:..\src/interruptions.c ****             prev_pos_err = pos_error;
 3726              		.loc 1 1214 0
 3727 031e 8A4A     		ldr	r2, .L272+8
 3728 0320 BB68     		ldr	r3, [r7, #8]
 3729 0322 1360     		str	r3, [r2]
1215:..\src/interruptions.c **** 
1216:..\src/interruptions.c ****             if (pwm_input > 0)
 3730              		.loc 1 1216 0
 3731 0324 FB6C     		ldr	r3, [r7, #76]
 3732 0326 002B     		cmp	r3, #0
 3733 0328 03DD     		ble	.L237
1217:..\src/interruptions.c ****                 motor_dir = TRUE;
 3734              		.loc 1 1217 0
 3735 032a 884B     		ldr	r3, .L272+12
 3736 032c 0122     		movs	r2, #1
 3737 032e 1A70     		strb	r2, [r3]
1218:..\src/interruptions.c ****             else
1219:..\src/interruptions.c ****                 motor_dir = FALSE;
1220:..\src/interruptions.c **** 
1221:..\src/interruptions.c ****         break;
 3738              		.loc 1 1221 0
 3739 0330 ADE0     		b	.L210
 3740              	.L237:
1219:..\src/interruptions.c **** 
 3741              		.loc 1 1219 0
 3742 0332 864B     		ldr	r3, .L272+12
 3743 0334 0022     		movs	r2, #0
 3744 0336 1A70     		strb	r2, [r3]
 3745              		.loc 1 1221 0
 3746 0338 A9E0     		b	.L210
 3747              	.L214:
1222:..\src/interruptions.c **** 
1223:..\src/interruptions.c ****         // ========================== CURRENT CONTROL ==========================
1224:..\src/interruptions.c ****         case CONTROL_CURRENT:
1225:..\src/interruptions.c ****             if(g_ref[MOTOR_IDX].onoff && tension_valid) {
 3748              		.loc 1 1225 0
 3749 033a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3750 033e 844A     		ldr	r2, .L272+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 90


 3751 0340 1B01     		lsls	r3, r3, #4
 3752 0342 1344     		add	r3, r3, r2
 3753 0344 0C33     		adds	r3, r3, #12
 3754 0346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3755 0348 002B     		cmp	r3, #0
 3756 034a 00F09D80 		beq	.L268
 3757              		.loc 1 1225 0 is_stmt 0 discriminator 1
 3758 034e 814B     		ldr	r3, .L272+20
 3759 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3760 0352 002B     		cmp	r3, #0
 3761 0354 00F09880 		beq	.L268
1226:..\src/interruptions.c ****                 
1227:..\src/interruptions.c ****                 i_ref = g_ref[MOTOR_IDX].curr;
 3762              		.loc 1 1227 0 is_stmt 1
 3763 0358 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3764 035c 7C4A     		ldr	r2, .L272+16
 3765 035e 1B01     		lsls	r3, r3, #4
 3766 0360 1344     		add	r3, r3, r2
 3767 0362 0433     		adds	r3, r3, #4
 3768 0364 1B68     		ldr	r3, [r3]
 3769 0366 BB64     		str	r3, [r7, #72]
1228:..\src/interruptions.c **** 
1229:..\src/interruptions.c ****                 if (i_ref > SH_MOT->current_limit) 
 3770              		.loc 1 1229 0
 3771 0368 3B6C     		ldr	r3, [r7, #64]
 3772 036a B3F95C30 		ldrsh	r3, [r3, #92]
 3773 036e 1A46     		mov	r2, r3
 3774 0370 BB6C     		ldr	r3, [r7, #72]
 3775 0372 9A42     		cmp	r2, r3
 3776 0374 04DA     		bge	.L240
1230:..\src/interruptions.c ****                     i_ref = SH_MOT->current_limit;
 3777              		.loc 1 1230 0
 3778 0376 3B6C     		ldr	r3, [r7, #64]
 3779 0378 B3F95C30 		ldrsh	r3, [r3, #92]
 3780 037c BB64     		str	r3, [r7, #72]
 3781 037e 0BE0     		b	.L241
 3782              	.L240:
1231:..\src/interruptions.c ****                 else {
1232:..\src/interruptions.c ****                     if (i_ref < -SH_MOT->current_limit)
 3783              		.loc 1 1232 0
 3784 0380 3B6C     		ldr	r3, [r7, #64]
 3785 0382 B3F95C30 		ldrsh	r3, [r3, #92]
 3786 0386 5A42     		negs	r2, r3
 3787 0388 BB6C     		ldr	r3, [r7, #72]
 3788 038a 9A42     		cmp	r2, r3
 3789 038c 04DD     		ble	.L241
1233:..\src/interruptions.c ****                         i_ref = -SH_MOT->current_limit;
 3790              		.loc 1 1233 0
 3791 038e 3B6C     		ldr	r3, [r7, #64]
 3792 0390 B3F95C30 		ldrsh	r3, [r3, #92]
 3793 0394 5B42     		negs	r3, r3
 3794 0396 BB64     		str	r3, [r7, #72]
 3795              	.L241:
1234:..\src/interruptions.c ****                 }
1235:..\src/interruptions.c ****                 
1236:..\src/interruptions.c ****                 // current error
1237:..\src/interruptions.c ****                 curr_error = i_ref - g_meas[SH_ENC_L].curr;            
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 91


 3796              		.loc 1 1237 0
 3797 0398 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3798 039c 6E4A     		ldr	r2, .L272+24
 3799 039e 3421     		movs	r1, #52
 3800 03a0 01FB03F3 		mul	r3, r1, r3
 3801 03a4 1344     		add	r3, r3, r2
 3802 03a6 0C33     		adds	r3, r3, #12
 3803 03a8 1B68     		ldr	r3, [r3]
 3804 03aa BA6C     		ldr	r2, [r7, #72]
 3805 03ac D31A     		subs	r3, r2, r3
 3806 03ae 7B60     		str	r3, [r7, #4]
1238:..\src/interruptions.c ****                 curr_error_sum += curr_error;
 3807              		.loc 1 1238 0
 3808 03b0 6A4B     		ldr	r3, .L272+28
 3809 03b2 1A68     		ldr	r2, [r3]
 3810 03b4 7B68     		ldr	r3, [r7, #4]
 3811 03b6 1344     		add	r3, r3, r2
 3812 03b8 684A     		ldr	r2, .L272+28
 3813 03ba 1360     		str	r3, [r2]
1239:..\src/interruptions.c ****                 
1240:..\src/interruptions.c ****                 if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 3814              		.loc 1 1240 0
 3815 03bc 674B     		ldr	r3, .L272+28
 3816 03be 1B68     		ldr	r3, [r3]
 3817 03c0 674A     		ldr	r2, .L272+32
 3818 03c2 9342     		cmp	r3, r2
 3819 03c4 03DD     		ble	.L242
1241:..\src/interruptions.c ****                     curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 3820              		.loc 1 1241 0
 3821 03c6 654B     		ldr	r3, .L272+28
 3822 03c8 654A     		ldr	r2, .L272+32
 3823 03ca 1A60     		str	r2, [r3]
 3824 03cc 07E0     		b	.L243
 3825              	.L242:
1242:..\src/interruptions.c ****                 else {
1243:..\src/interruptions.c ****                     if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT) 
 3826              		.loc 1 1243 0
 3827 03ce 634B     		ldr	r3, .L272+28
 3828 03d0 1B68     		ldr	r3, [r3]
 3829 03d2 644A     		ldr	r2, .L272+36
 3830 03d4 9342     		cmp	r3, r2
 3831 03d6 02DA     		bge	.L243
1244:..\src/interruptions.c ****                         curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 3832              		.loc 1 1244 0
 3833 03d8 604B     		ldr	r3, .L272+28
 3834 03da 624A     		ldr	r2, .L272+36
 3835 03dc 1A60     		str	r2, [r3]
 3836              	.L243:
1245:..\src/interruptions.c ****                 }
1246:..\src/interruptions.c **** 
1247:..\src/interruptions.c ****                 pwm_input = 0;
 3837              		.loc 1 1247 0
 3838 03de 0023     		movs	r3, #0
 3839 03e0 FB64     		str	r3, [r7, #76]
1248:..\src/interruptions.c **** 
1249:..\src/interruptions.c ****                 // Proportional
1250:..\src/interruptions.c ****                 if (k_p_c != 0)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 92


 3840              		.loc 1 1250 0
 3841 03e2 FB6A     		ldr	r3, [r7, #44]
 3842 03e4 002B     		cmp	r3, #0
 3843 03e6 07D0     		beq	.L244
1251:..\src/interruptions.c ****                     pwm_input += (int32)(k_p_c * curr_error) >> 16;
 3844              		.loc 1 1251 0
 3845 03e8 FB6A     		ldr	r3, [r7, #44]
 3846 03ea 7A68     		ldr	r2, [r7, #4]
 3847 03ec 02FB03F3 		mul	r3, r2, r3
 3848 03f0 1B14     		asrs	r3, r3, #16
 3849 03f2 FA6C     		ldr	r2, [r7, #76]
 3850 03f4 1344     		add	r3, r3, r2
 3851 03f6 FB64     		str	r3, [r7, #76]
 3852              	.L244:
1252:..\src/interruptions.c **** 
1253:..\src/interruptions.c ****                 // Integral
1254:..\src/interruptions.c ****                 if (k_i_c != 0)
 3853              		.loc 1 1254 0
 3854 03f8 BB6A     		ldr	r3, [r7, #40]
 3855 03fa 002B     		cmp	r3, #0
 3856 03fc 08D0     		beq	.L245
1255:..\src/interruptions.c ****                     pwm_input += (int32)(k_i_c * curr_error_sum) >> 16;
 3857              		.loc 1 1255 0
 3858 03fe 574B     		ldr	r3, .L272+28
 3859 0400 1B68     		ldr	r3, [r3]
 3860 0402 BA6A     		ldr	r2, [r7, #40]
 3861 0404 02FB03F3 		mul	r3, r2, r3
 3862 0408 1B14     		asrs	r3, r3, #16
 3863 040a FA6C     		ldr	r2, [r7, #76]
 3864 040c 1344     		add	r3, r3, r2
 3865 040e FB64     		str	r3, [r7, #76]
 3866              	.L245:
1256:..\src/interruptions.c **** 
1257:..\src/interruptions.c ****                 // Derivative
1258:..\src/interruptions.c ****                 if (k_d_c != 0)
 3867              		.loc 1 1258 0
 3868 0410 7B6A     		ldr	r3, [r7, #36]
 3869 0412 002B     		cmp	r3, #0
 3870 0414 0AD0     		beq	.L246
1259:..\src/interruptions.c ****                     pwm_input += (int32)(k_d_c * (curr_error - prev_curr_err)) >> 16;
 3871              		.loc 1 1259 0
 3872 0416 544B     		ldr	r3, .L272+40
 3873 0418 1B68     		ldr	r3, [r3]
 3874 041a 7A68     		ldr	r2, [r7, #4]
 3875 041c D31A     		subs	r3, r2, r3
 3876 041e 7A6A     		ldr	r2, [r7, #36]
 3877 0420 02FB03F3 		mul	r3, r2, r3
 3878 0424 1B14     		asrs	r3, r3, #16
 3879 0426 FA6C     		ldr	r2, [r7, #76]
 3880 0428 1344     		add	r3, r3, r2
 3881 042a FB64     		str	r3, [r7, #76]
 3882              	.L246:
1260:..\src/interruptions.c ****                 
1261:..\src/interruptions.c ****                 prev_curr_err = curr_error;
 3883              		.loc 1 1261 0
 3884 042c 4E4A     		ldr	r2, .L272+40
 3885 042e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 93


 3886 0430 1360     		str	r3, [r2]
1262:..\src/interruptions.c ****                 
1263:..\src/interruptions.c ****                 if (pwm_input >= 0) 
 3887              		.loc 1 1263 0
 3888 0432 FB6C     		ldr	r3, [r7, #76]
 3889 0434 002B     		cmp	r3, #0
 3890 0436 03DB     		blt	.L247
1264:..\src/interruptions.c ****                     motor_dir = TRUE;
 3891              		.loc 1 1264 0
 3892 0438 444B     		ldr	r3, .L272+12
 3893 043a 0122     		movs	r2, #1
 3894 043c 1A70     		strb	r2, [r3]
1265:..\src/interruptions.c ****                 else
1266:..\src/interruptions.c ****                     motor_dir = FALSE;
1267:..\src/interruptions.c ****             }
1268:..\src/interruptions.c ****         break;
 3895              		.loc 1 1268 0
 3896 043e 23E0     		b	.L268
 3897              	.L247:
1266:..\src/interruptions.c ****             }
 3898              		.loc 1 1266 0
 3899 0440 424B     		ldr	r3, .L272+12
 3900 0442 0022     		movs	r2, #0
 3901 0444 1A70     		strb	r2, [r3]
 3902              		.loc 1 1268 0
 3903 0446 1FE0     		b	.L268
 3904              	.L213:
1269:..\src/interruptions.c ****         
1270:..\src/interruptions.c ****         // ================= DIRECT PWM CONTROL ================================
1271:..\src/interruptions.c ****         case CONTROL_PWM:
1272:..\src/interruptions.c **** 
1273:..\src/interruptions.c ****             pwm_input = g_ref[MOTOR_IDX].pwm;
 3905              		.loc 1 1273 0
 3906 0448 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3907 044c 404A     		ldr	r2, .L272+16
 3908 044e 1B01     		lsls	r3, r3, #4
 3909 0450 1344     		add	r3, r3, r2
 3910 0452 0833     		adds	r3, r3, #8
 3911 0454 1B68     		ldr	r3, [r3]
 3912 0456 FB64     		str	r3, [r7, #76]
1274:..\src/interruptions.c **** 
1275:..\src/interruptions.c ****             if (pwm_input > 0) 
 3913              		.loc 1 1275 0
 3914 0458 FB6C     		ldr	r3, [r7, #76]
 3915 045a 002B     		cmp	r3, #0
 3916 045c 03DD     		ble	.L248
1276:..\src/interruptions.c ****                 motor_dir = TRUE;
 3917              		.loc 1 1276 0
 3918 045e 3B4B     		ldr	r3, .L272+12
 3919 0460 0122     		movs	r2, #1
 3920 0462 1A70     		strb	r2, [r3]
 3921 0464 02E0     		b	.L249
 3922              	.L248:
1277:..\src/interruptions.c ****             else 
1278:..\src/interruptions.c ****                 motor_dir = FALSE;
 3923              		.loc 1 1278 0
 3924 0466 394B     		ldr	r3, .L272+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 94


 3925 0468 0022     		movs	r2, #0
 3926 046a 1A70     		strb	r2, [r3]
 3927              	.L249:
1279:..\src/interruptions.c ****             
1280:..\src/interruptions.c **** 
1281:..\src/interruptions.c ****             // pwm_input saturation
1282:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE_DC) 
 3928              		.loc 1 1282 0
 3929 046c FB6C     		ldr	r3, [r7, #76]
 3930 046e 13F1640F 		cmn	r3, #100
 3931 0472 03DA     		bge	.L250
1283:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE_DC;
 3932              		.loc 1 1283 0
 3933 0474 6FF06303 		mvn	r3, #99
 3934 0478 FB64     		str	r3, [r7, #76]
1284:..\src/interruptions.c ****             else {
1285:..\src/interruptions.c **** 				if (pwm_input > PWM_MAX_VALUE_DC) 
1286:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE_DC;
1287:..\src/interruptions.c ****         	}
1288:..\src/interruptions.c **** 
1289:..\src/interruptions.c ****         break;
 3935              		.loc 1 1289 0
 3936 047a 07E0     		b	.L269
 3937              	.L250:
1285:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE_DC;
 3938              		.loc 1 1285 0
 3939 047c FB6C     		ldr	r3, [r7, #76]
 3940 047e 642B     		cmp	r3, #100
 3941 0480 04DD     		ble	.L269
1286:..\src/interruptions.c ****         	}
 3942              		.loc 1 1286 0
 3943 0482 6423     		movs	r3, #100
 3944 0484 FB64     		str	r3, [r7, #76]
 3945              		.loc 1 1289 0
 3946 0486 01E0     		b	.L269
 3947              	.L268:
1268:..\src/interruptions.c ****         
 3948              		.loc 1 1268 0
 3949 0488 00BF     		nop
 3950 048a 00E0     		b	.L210
 3951              	.L269:
 3952              		.loc 1 1289 0
 3953 048c 00BF     		nop
 3954              	.L210:
1290:..\src/interruptions.c ****             
1291:..\src/interruptions.c ****     }
1292:..\src/interruptions.c **** 
1293:..\src/interruptions.c ****     ////////////////////////////////////////////////////////////////////////////
1294:..\src/interruptions.c **** 
1295:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE_DC) 
 3955              		.loc 1 1295 0
 3956 048e FB6C     		ldr	r3, [r7, #76]
 3957 0490 642B     		cmp	r3, #100
 3958 0492 01DD     		ble	.L252
1296:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE_DC;
 3959              		.loc 1 1296 0
 3960 0494 6423     		movs	r3, #100
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 95


 3961 0496 FB64     		str	r3, [r7, #76]
 3962              	.L252:
1297:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE_DC) 
 3963              		.loc 1 1297 0
 3964 0498 FB6C     		ldr	r3, [r7, #76]
 3965 049a 13F1640F 		cmn	r3, #100
 3966 049e 02DA     		bge	.L253
1298:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE_DC;
 3967              		.loc 1 1298 0
 3968 04a0 6FF06303 		mvn	r3, #99
 3969 04a4 FB64     		str	r3, [r7, #76]
 3970              	.L253:
1299:..\src/interruptions.c **** 
1300:..\src/interruptions.c ****     if (SH_MOT->control_mode != CONTROL_PWM) 
 3971              		.loc 1 1300 0
 3972 04a6 3B6C     		ldr	r3, [r7, #64]
 3973 04a8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 3974 04ac 012B     		cmp	r3, #1
 3975 04ae 0DD0     		beq	.L254
1301:..\src/interruptions.c ****         pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE_DC) * dev_pwm_limit[0]) >> 10;
 3976              		.loc 1 1301 0
 3977 04b0 FB6C     		ldr	r3, [r7, #76]
 3978 04b2 9B02     		lsls	r3, r3, #10
 3979 04b4 2D4A     		ldr	r2, .L272+44
 3980 04b6 82FB0312 		smull	r1, r2, r2, r3
 3981 04ba 5211     		asrs	r2, r2, #5
 3982 04bc DB17     		asrs	r3, r3, #31
 3983 04be D31A     		subs	r3, r2, r3
 3984 04c0 2B4A     		ldr	r2, .L272+48
 3985 04c2 1288     		ldrh	r2, [r2]
 3986 04c4 02FB03F3 		mul	r3, r2, r3
 3987 04c8 9B12     		asrs	r3, r3, #10
 3988 04ca FB64     		str	r3, [r7, #76]
 3989              	.L254:
1302:..\src/interruptions.c ****  
1303:..\src/interruptions.c ****     //// RATE LIMITER ////
1304:..\src/interruptions.c ****     if((pwm_input-prev_pwm) > SH_MOT->pwm_rate_limiter){
 3990              		.loc 1 1304 0
 3991 04cc 294B     		ldr	r3, .L272+52
 3992 04ce 1B68     		ldr	r3, [r3]
 3993 04d0 FA6C     		ldr	r2, [r7, #76]
 3994 04d2 D31A     		subs	r3, r2, r3
 3995 04d4 3A6C     		ldr	r2, [r7, #64]
 3996 04d6 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 3997 04da 9342     		cmp	r3, r2
 3998 04dc 08DD     		ble	.L255
1305:..\src/interruptions.c ****         pwm_input =  prev_pwm + SH_MOT->pwm_rate_limiter;
 3999              		.loc 1 1305 0
 4000 04de 3B6C     		ldr	r3, [r7, #64]
 4001 04e0 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 4002 04e4 1A46     		mov	r2, r3
 4003 04e6 234B     		ldr	r3, .L272+52
 4004 04e8 1B68     		ldr	r3, [r3]
 4005 04ea 1344     		add	r3, r3, r2
 4006 04ec FB64     		str	r3, [r7, #76]
 4007 04ee 10E0     		b	.L256
 4008              	.L255:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 96


1306:..\src/interruptions.c ****     }
1307:..\src/interruptions.c ****     else {
1308:..\src/interruptions.c ****         if((pwm_input-prev_pwm) < -SH_MOT->pwm_rate_limiter)
 4009              		.loc 1 1308 0
 4010 04f0 204B     		ldr	r3, .L272+52
 4011 04f2 1B68     		ldr	r3, [r3]
 4012 04f4 FA6C     		ldr	r2, [r7, #76]
 4013 04f6 D21A     		subs	r2, r2, r3
 4014 04f8 3B6C     		ldr	r3, [r7, #64]
 4015 04fa 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 4016 04fe 5B42     		negs	r3, r3
 4017 0500 9A42     		cmp	r2, r3
 4018 0502 06DA     		bge	.L256
1309:..\src/interruptions.c ****             pwm_input =  prev_pwm - SH_MOT->pwm_rate_limiter;
 4019              		.loc 1 1309 0
 4020 0504 1B4B     		ldr	r3, .L272+52
 4021 0506 1B68     		ldr	r3, [r3]
 4022 0508 3A6C     		ldr	r2, [r7, #64]
 4023 050a 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 4024 050e 9B1A     		subs	r3, r3, r2
 4025 0510 FB64     		str	r3, [r7, #76]
 4026              	.L256:
1310:..\src/interruptions.c ****     }
1311:..\src/interruptions.c ****     
1312:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE_DC) 
 4027              		.loc 1 1312 0
 4028 0512 FB6C     		ldr	r3, [r7, #76]
 4029 0514 642B     		cmp	r3, #100
 4030 0516 01DD     		ble	.L257
1313:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE_DC;
 4031              		.loc 1 1313 0
 4032 0518 6423     		movs	r3, #100
 4033 051a FB64     		str	r3, [r7, #76]
 4034              	.L257:
1314:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE_DC) 
 4035              		.loc 1 1314 0
 4036 051c FB6C     		ldr	r3, [r7, #76]
 4037 051e 13F1640F 		cmn	r3, #100
 4038 0522 02DA     		bge	.L258
1315:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE_DC;
 4039              		.loc 1 1315 0
 4040 0524 6FF06303 		mvn	r3, #99
 4041 0528 FB64     		str	r3, [r7, #76]
 4042              	.L258:
1316:..\src/interruptions.c ****     
1317:..\src/interruptions.c ****     prev_pwm = pwm_input;
 4043              		.loc 1 1317 0
 4044 052a 124A     		ldr	r2, .L272+52
 4045 052c FB6C     		ldr	r3, [r7, #76]
 4046 052e 1360     		str	r3, [r2]
1318:..\src/interruptions.c **** 	
1319:..\src/interruptions.c ****     pwm_sign[MOTOR_IDX] = SIGN(pwm_input);   
 4047              		.loc 1 1319 0
 4048 0530 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4049 0534 FA6C     		ldr	r2, [r7, #76]
 4050 0536 002A     		cmp	r2, #0
 4051 0538 1EDB     		blt	.L259
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 97


 4052              		.loc 1 1319 0 is_stmt 0 discriminator 1
 4053 053a 0121     		movs	r1, #1
 4054 053c 1EE0     		b	.L260
 4055              	.L273:
 4056 053e 00BF     		.align	2
 4057              	.L272:
 4058 0540 90000000 		.word	pos_error_sum.10649
 4059 0544 18FCFFFF 		.word	-1000
 4060 0548 94000000 		.word	prev_pos_err.10651
 4061 054c 98000000 		.word	motor_dir.10654
 4062 0550 00000000 		.word	g_ref
 4063 0554 00000000 		.word	tension_valid
 4064 0558 00000000 		.word	g_meas
 4065 055c 9C000000 		.word	curr_error_sum.10650
 4066 0560 A0860100 		.word	100000
 4067 0564 6079FEFF 		.word	-100000
 4068 0568 A0000000 		.word	prev_curr_err.10652
 4069 056c 1F85EB51 		.word	1374389535
 4070 0570 00000000 		.word	dev_pwm_limit
 4071 0574 A4000000 		.word	prev_pwm.10653
 4072              	.L259:
 4073              		.loc 1 1319 0 discriminator 2
 4074 0578 4FF0FF31 		mov	r1, #-1
 4075              	.L260:
 4076              		.loc 1 1319 0 discriminator 4
 4077 057c 5A4A     		ldr	r2, .L274
 4078 057e D154     		strb	r1, [r2, r3]
1320:..\src/interruptions.c ****     
1321:..\src/interruptions.c ****     if (SH_MOT->not_revers_motor_flag == TRUE) {
 4079              		.loc 1 1321 0 is_stmt 1 discriminator 4
 4080 0580 3B6C     		ldr	r3, [r7, #64]
 4081 0582 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 4082 0586 012B     		cmp	r3, #1
 4083 0588 40F09680 		bne	.L261
1322:..\src/interruptions.c ****         // Block motor with pwm = 0 to exploit not reversible motor behaviour 
1323:..\src/interruptions.c ****     	if ( SH_MOT->control_mode != CONTROL_PWM && ((g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[
 4084              		.loc 1 1323 0
 4085 058c 3B6C     		ldr	r3, [r7, #64]
 4086 058e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 4087 0592 012B     		cmp	r3, #1
 4088 0594 00F08D80 		beq	.L262
 4089              		.loc 1 1323 0 is_stmt 0 discriminator 1
 4090 0598 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 4091 059c 534A     		ldr	r2, .L274+4
 4092 059e 3421     		movs	r1, #52
 4093 05a0 01FB03F3 		mul	r3, r1, r3
 4094 05a4 1344     		add	r3, r3, r2
 4095 05a6 1A68     		ldr	r2, [r3]
 4096 05a8 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 4097 05ac 5049     		ldr	r1, .L274+8
 4098 05ae 3420     		movs	r0, #52
 4099 05b0 00FB03F3 		mul	r3, r0, r3
 4100 05b4 0B44     		add	r3, r3, r1
 4101 05b6 1B68     		ldr	r3, [r3]
 4102 05b8 D31A     		subs	r3, r2, r3
 4103 05ba 312B     		cmp	r3, #49
 4104 05bc 79DC     		bgt	.L262
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 98


1324:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 4105              		.loc 1 1324 0 is_stmt 1 discriminator 2
 4106 05be 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 4107 05c2 4A4A     		ldr	r2, .L274+4
 4108 05c4 3421     		movs	r1, #52
 4109 05c6 01FB03F3 		mul	r3, r1, r3
 4110 05ca 1344     		add	r3, r3, r2
 4111 05cc 1A68     		ldr	r2, [r3]
 4112 05ce 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 4113 05d2 4749     		ldr	r1, .L274+8
 4114 05d4 3420     		movs	r0, #52
 4115 05d6 00FB03F3 		mul	r3, r0, r3
 4116 05da 0B44     		add	r3, r3, r1
 4117 05dc 1B68     		ldr	r3, [r3]
 4118 05de D31A     		subs	r3, r2, r3
1323:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 4119              		.loc 1 1323 0 discriminator 2
 4120 05e0 13F1310F 		cmn	r3, #49
 4121 05e4 65DB     		blt	.L262
1325:..\src/interruptions.c ****             ((g_refOld[MOTOR_IDX].pos - g_ref[MOTOR_IDX].pos) < 100 && (g_refOld[MOTOR_IDX].pos - g
 4122              		.loc 1 1325 0
 4123 05e6 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4124 05ea 424A     		ldr	r2, .L274+12
 4125 05ec 1B01     		lsls	r3, r3, #4
 4126 05ee 1344     		add	r3, r3, r2
 4127 05f0 1A68     		ldr	r2, [r3]
 4128 05f2 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4129 05f6 4049     		ldr	r1, .L274+16
 4130 05f8 1B01     		lsls	r3, r3, #4
 4131 05fa 0B44     		add	r3, r3, r1
 4132 05fc 1B68     		ldr	r3, [r3]
 4133 05fe D31A     		subs	r3, r2, r3
1324:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 4134              		.loc 1 1324 0
 4135 0600 632B     		cmp	r3, #99
 4136 0602 56DC     		bgt	.L262
 4137              		.loc 1 1325 0
 4138 0604 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4139 0608 3A4A     		ldr	r2, .L274+12
 4140 060a 1B01     		lsls	r3, r3, #4
 4141 060c 1344     		add	r3, r3, r2
 4142 060e 1A68     		ldr	r2, [r3]
 4143 0610 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4144 0614 3849     		ldr	r1, .L274+16
 4145 0616 1B01     		lsls	r3, r3, #4
 4146 0618 0B44     		add	r3, r3, r1
 4147 061a 1B68     		ldr	r3, [r3]
 4148 061c D31A     		subs	r3, r2, r3
 4149 061e 13F1630F 		cmn	r3, #99
 4150 0622 46DB     		blt	.L262
1326:..\src/interruptions.c ****             position_counter++;
 4151              		.loc 1 1326 0
 4152 0624 354B     		ldr	r3, .L274+20
 4153 0626 1B68     		ldr	r3, [r3]
 4154 0628 0133     		adds	r3, r3, #1
 4155 062a 344A     		ldr	r2, .L274+20
 4156 062c 1360     		str	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 99


1327:..\src/interruptions.c ****             
1328:..\src/interruptions.c ****             if (position_counter >= 250) { 
 4157              		.loc 1 1328 0
 4158 062e 334B     		ldr	r3, .L274+20
 4159 0630 1B68     		ldr	r3, [r3]
 4160 0632 F92B     		cmp	r3, #249
 4161 0634 40D9     		bls	.L261
1329:..\src/interruptions.c ****                 if (SH_MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 4162              		.loc 1 1329 0
 4163 0636 3B6C     		ldr	r3, [r7, #64]
 4164 0638 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 4165 063c 002B     		cmp	r3, #0
 4166 063e 11D1     		bne	.L264
 4167              		.loc 1 1329 0 is_stmt 0 discriminator 1
 4168 0640 2F4B     		ldr	r3, .L274+24
 4169 0642 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4170 0644 002B     		cmp	r3, #0
 4171 0646 0DD1     		bne	.L264
1330:..\src/interruptions.c ****                     g_refNew[MOTOR_IDX].pos = g_meas[SH_ENC_L].pos[0];       // Needed only when US
 4172              		.loc 1 1330 0 is_stmt 1
 4173 0648 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4174 064c 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 4175 0650 2749     		ldr	r1, .L274+8
 4176 0652 3420     		movs	r0, #52
 4177 0654 00FB02F2 		mul	r2, r0, r2
 4178 0658 0A44     		add	r2, r2, r1
 4179 065a 1268     		ldr	r2, [r2]
 4180 065c 2949     		ldr	r1, .L274+28
 4181 065e 1B01     		lsls	r3, r3, #4
 4182 0660 0B44     		add	r3, r3, r1
 4183 0662 1A60     		str	r2, [r3]
 4184              	.L264:
1331:..\src/interruptions.c ****                 }
1332:..\src/interruptions.c ****                 g_ref[MOTOR_IDX].pos = g_meas[SH_ENC_L].pos[0];
 4185              		.loc 1 1332 0
 4186 0664 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4187 0668 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 4188 066c 2049     		ldr	r1, .L274+8
 4189 066e 3420     		movs	r0, #52
 4190 0670 00FB02F2 		mul	r2, r0, r2
 4191 0674 0A44     		add	r2, r2, r1
 4192 0676 1268     		ldr	r2, [r2]
 4193 0678 1F49     		ldr	r1, .L274+16
 4194 067a 1B01     		lsls	r3, r3, #4
 4195 067c 0B44     		add	r3, r3, r1
 4196 067e 1A60     		str	r2, [r3]
1333:..\src/interruptions.c ****                 
1334:..\src/interruptions.c ****                 if (position_counter == 250){
 4197              		.loc 1 1334 0
 4198 0680 1E4B     		ldr	r3, .L274+20
 4199 0682 1B68     		ldr	r3, [r3]
 4200 0684 FA2B     		cmp	r3, #250
 4201 0686 11D1     		bne	.L265
1335:..\src/interruptions.c ****                     // To do only once
1336:..\src/interruptions.c ****                     g_meas[SH_ENC_L].hold_curr = g_meas[SH_ENC_L].curr;
 4202              		.loc 1 1336 0
 4203 0688 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 100


 4204 068c 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 4205 0690 1749     		ldr	r1, .L274+8
 4206 0692 3420     		movs	r0, #52
 4207 0694 00FB02F2 		mul	r2, r0, r2
 4208 0698 0A44     		add	r2, r2, r1
 4209 069a 0C32     		adds	r2, r2, #12
 4210 069c 1268     		ldr	r2, [r2]
 4211 069e 1449     		ldr	r1, .L274+8
 4212 06a0 3420     		movs	r0, #52
 4213 06a2 00FB03F3 		mul	r3, r0, r3
 4214 06a6 0B44     		add	r3, r3, r1
 4215 06a8 1433     		adds	r3, r3, #20
 4216 06aa 1A60     		str	r2, [r3]
 4217              	.L265:
1337:..\src/interruptions.c ****                 }
1338:..\src/interruptions.c ****                 pwm_input = 0;            
 4218              		.loc 1 1338 0
 4219 06ac 0023     		movs	r3, #0
 4220 06ae FB64     		str	r3, [r7, #76]
1328:..\src/interruptions.c ****                 if (SH_MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 4221              		.loc 1 1328 0
 4222 06b0 02E0     		b	.L261
 4223              	.L262:
1339:..\src/interruptions.c ****             }
1340:..\src/interruptions.c ****         }
1341:..\src/interruptions.c ****         else {
1342:..\src/interruptions.c ****             position_counter = 0;
 4224              		.loc 1 1342 0
 4225 06b2 124B     		ldr	r3, .L274+20
 4226 06b4 0022     		movs	r2, #0
 4227 06b6 1A60     		str	r2, [r3]
 4228              	.L261:
1343:..\src/interruptions.c ****         }
1344:..\src/interruptions.c ****     }
1345:..\src/interruptions.c ****     
1346:..\src/interruptions.c ****     if (motor_dir)
 4229              		.loc 1 1346 0
 4230 06b8 134B     		ldr	r3, .L274+32
 4231 06ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4232 06bc 002B     		cmp	r3, #0
 4233 06be 03D0     		beq	.L266
1347:..\src/interruptions.c ****         MOTOR_DIR_1_Write(0x01);
 4234              		.loc 1 1347 0
 4235 06c0 0120     		movs	r0, #1
 4236 06c2 FFF7FEFF 		bl	MOTOR_DIR_1_Write
 4237 06c6 02E0     		b	.L267
 4238              	.L266:
1348:..\src/interruptions.c ****     else
1349:..\src/interruptions.c ****         MOTOR_DIR_1_Write(0x00);
 4239              		.loc 1 1349 0
 4240 06c8 0020     		movs	r0, #0
 4241 06ca FFF7FEFF 		bl	MOTOR_DIR_1_Write
 4242              	.L267:
1350:..\src/interruptions.c **** 
1351:..\src/interruptions.c ****     PWM_MOTORS_WriteCompare1(abs(pwm_input));
 4243              		.loc 1 1351 0
 4244 06ce FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 101


 4245 06d0 002B     		cmp	r3, #0
 4246 06d2 B8BF     		it	lt
 4247 06d4 5B42     		rsblt	r3, r3, #0
 4248 06d6 9BB2     		uxth	r3, r3
 4249 06d8 1846     		mov	r0, r3
 4250 06da FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1352:..\src/interruptions.c **** }
 4251              		.loc 1 1352 0
 4252 06de 00BF     		nop
 4253 06e0 5037     		adds	r7, r7, #80
 4254              		.cfi_def_cfa_offset 8
 4255 06e2 BD46     		mov	sp, r7
 4256              		.cfi_def_cfa_register 13
 4257              		@ sp needed
 4258 06e4 80BD     		pop	{r7, pc}
 4259              	.L275:
 4260 06e6 00BF     		.align	2
 4261              	.L274:
 4262 06e8 00000000 		.word	pwm_sign
 4263 06ec 00000000 		.word	g_measOld
 4264 06f0 00000000 		.word	g_meas
 4265 06f4 00000000 		.word	g_refOld
 4266 06f8 00000000 		.word	g_ref
 4267 06fc A8000000 		.word	position_counter.10655
 4268 0700 00000000 		.word	change_ext_ref_flag
 4269 0704 00000000 		.word	g_refNew
 4270 0708 98000000 		.word	motor_dir.10654
 4271              		.cfi_endproc
 4272              	.LFE71:
 4273              		.size	motor_control_SH, .-motor_control_SH
 4274              		.section	.text.motor_control_generic,"ax",%progbits
 4275              		.align	2
 4276              		.global	motor_control_generic
 4277              		.thumb
 4278              		.thumb_func
 4279              		.type	motor_control_generic, %function
 4280              	motor_control_generic:
 4281              	.LFB72:
1353:..\src/interruptions.c **** 
1354:..\src/interruptions.c **** //==============================================================================
1355:..\src/interruptions.c **** //                                                         MOTOR CONTROL GENERIC
1356:..\src/interruptions.c **** //==============================================================================
1357:..\src/interruptions.c **** void motor_control_generic(uint8 idx) {
 4282              		.loc 1 1357 0
 4283              		.cfi_startproc
 4284              		@ args = 0, pretend = 0, frame = 80
 4285              		@ frame_needed = 1, uses_anonymous_args = 0
 4286 0000 90B5     		push	{r4, r7, lr}
 4287              		.cfi_def_cfa_offset 12
 4288              		.cfi_offset 4, -12
 4289              		.cfi_offset 7, -8
 4290              		.cfi_offset 14, -4
 4291 0002 95B0     		sub	sp, sp, #84
 4292              		.cfi_def_cfa_offset 96
 4293 0004 00AF     		add	r7, sp, #0
 4294              		.cfi_def_cfa_register 7
 4295 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 102


 4296 0008 FB71     		strb	r3, [r7, #7]
1358:..\src/interruptions.c ****     
1359:..\src/interruptions.c ****     int32 CYDATA pwm_input = 0;
 4297              		.loc 1 1359 0
 4298 000a 0023     		movs	r3, #0
 4299 000c FB64     		str	r3, [r7, #76]
1360:..\src/interruptions.c ****     int32 CYDATA pos_error;         // position error
1361:..\src/interruptions.c ****     int32 CYDATA curr_error;        // current error
1362:..\src/interruptions.c ****     int32 CYDATA i_ref;             // current reference
1363:..\src/interruptions.c **** 
1364:..\src/interruptions.c ****     struct st_motor* MOT = &c_mem.motor[idx]; // Motor struct
 4300              		.loc 1 1364 0
 4301 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4302 0010 1346     		mov	r3, r2
 4303 0012 DB00     		lsls	r3, r3, #3
 4304 0014 9B1A     		subs	r3, r3, r2
 4305 0016 1B01     		lsls	r3, r3, #4
 4306 0018 B033     		adds	r3, r3, #176
 4307 001a 9D4A     		ldr	r2, .L367
 4308 001c 1344     		add	r3, r3, r2
 4309 001e 7B64     		str	r3, [r7, #68]
1365:..\src/interruptions.c ****     uint8 ENC_L = MOT->encoder_line;          // Associated encoder line
 4310              		.loc 1 1365 0
 4311 0020 7B6C     		ldr	r3, [r7, #68]
 4312 0022 93F86030 		ldrb	r3, [r3, #96]
 4313 0026 87F84330 		strb	r3, [r7, #67]
1366:..\src/interruptions.c ****     
1367:..\src/interruptions.c ****     int32 CYDATA k_p = MOT->k_p;  
 4314              		.loc 1 1367 0
 4315 002a 7B6C     		ldr	r3, [r7, #68]
 4316 002c 1B68     		ldr	r3, [r3]
 4317 002e FB63     		str	r3, [r7, #60]
1368:..\src/interruptions.c ****     int32 CYDATA k_i = MOT->k_i; 
 4318              		.loc 1 1368 0
 4319 0030 7B6C     		ldr	r3, [r7, #68]
 4320 0032 5B68     		ldr	r3, [r3, #4]
 4321 0034 BB63     		str	r3, [r7, #56]
1369:..\src/interruptions.c ****     int32 CYDATA k_d = MOT->k_d; 
 4322              		.loc 1 1369 0
 4323 0036 7B6C     		ldr	r3, [r7, #68]
 4324 0038 9B68     		ldr	r3, [r3, #8]
 4325 003a 7B63     		str	r3, [r7, #52]
1370:..\src/interruptions.c **** 
1371:..\src/interruptions.c ****     int32 CYDATA k_p_c = MOT->k_p_c;  
 4326              		.loc 1 1371 0
 4327 003c 7B6C     		ldr	r3, [r7, #68]
 4328 003e DB68     		ldr	r3, [r3, #12]
 4329 0040 3B63     		str	r3, [r7, #48]
1372:..\src/interruptions.c ****     int32 CYDATA k_i_c = MOT->k_i_c; 
 4330              		.loc 1 1372 0
 4331 0042 7B6C     		ldr	r3, [r7, #68]
 4332 0044 1B69     		ldr	r3, [r3, #16]
 4333 0046 FB62     		str	r3, [r7, #44]
1373:..\src/interruptions.c ****     int32 CYDATA k_d_c = MOT->k_d_c;   
 4334              		.loc 1 1373 0
 4335 0048 7B6C     		ldr	r3, [r7, #68]
 4336 004a 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 103


 4337 004c BB62     		str	r3, [r7, #40]
1374:..\src/interruptions.c **** 
1375:..\src/interruptions.c ****     int32 CYDATA k_p_dl = MOT->k_p_dl;  
 4338              		.loc 1 1375 0
 4339 004e 7B6C     		ldr	r3, [r7, #68]
 4340 0050 9B69     		ldr	r3, [r3, #24]
 4341 0052 7B62     		str	r3, [r7, #36]
1376:..\src/interruptions.c ****     int32 CYDATA k_i_dl = MOT->k_i_dl; 
 4342              		.loc 1 1376 0
 4343 0054 7B6C     		ldr	r3, [r7, #68]
 4344 0056 DB69     		ldr	r3, [r3, #28]
 4345 0058 3B62     		str	r3, [r7, #32]
1377:..\src/interruptions.c ****     int32 CYDATA k_d_dl = MOT->k_d_dl;
 4346              		.loc 1 1377 0
 4347 005a 7B6C     		ldr	r3, [r7, #68]
 4348 005c 1B6A     		ldr	r3, [r3, #32]
 4349 005e FB61     		str	r3, [r7, #28]
1378:..\src/interruptions.c ****     
1379:..\src/interruptions.c ****     int32 CYDATA k_p_c_dl = MOT->k_p_c_dl;  
 4350              		.loc 1 1379 0
 4351 0060 7B6C     		ldr	r3, [r7, #68]
 4352 0062 5B6A     		ldr	r3, [r3, #36]
 4353 0064 BB61     		str	r3, [r7, #24]
1380:..\src/interruptions.c ****     int32 CYDATA k_i_c_dl = MOT->k_i_c_dl; 
 4354              		.loc 1 1380 0
 4355 0066 7B6C     		ldr	r3, [r7, #68]
 4356 0068 9B6A     		ldr	r3, [r3, #40]
 4357 006a 7B61     		str	r3, [r7, #20]
1381:..\src/interruptions.c ****     int32 CYDATA k_d_c_dl = MOT->k_d_c_dl;   
 4358              		.loc 1 1381 0
 4359 006c 7B6C     		ldr	r3, [r7, #68]
 4360 006e DB6A     		ldr	r3, [r3, #44]
 4361 0070 3B61     		str	r3, [r7, #16]
1382:..\src/interruptions.c **** 
1383:..\src/interruptions.c ****     // Static Variables
1384:..\src/interruptions.c **** 
1385:..\src/interruptions.c ****     static int32 pos_error_sum[NUM_OF_MOTORS];     // position error sum for integral
1386:..\src/interruptions.c ****     static int32 curr_error_sum[NUM_OF_MOTORS];    // current error sum for integral
1387:..\src/interruptions.c ****     
1388:..\src/interruptions.c ****     static int32 prev_pos_err[NUM_OF_MOTORS];      // previous position error for deriv. control
1389:..\src/interruptions.c ****     static int32 prev_curr_err[NUM_OF_MOTORS];     // previous current error for deriv. control
1390:..\src/interruptions.c ****     static int32 prev_pwm[NUM_OF_MOTORS];
1391:..\src/interruptions.c **** 
1392:..\src/interruptions.c ****     static CYBIT motor_dir[NUM_OF_MOTORS] = {FALSE, FALSE};
1393:..\src/interruptions.c ****     static uint32 position_counter[NUM_OF_MOTORS] = {0, 0};
1394:..\src/interruptions.c **** 
1395:..\src/interruptions.c ****     // ======================= UPDATE MOTOR REFERENCE ==========================            
1396:..\src/interruptions.c ****     compute_reference(idx, &g_ref[idx], &g_refOld[idx]);
 4362              		.loc 1 1396 0
 4363 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4364 0074 1B01     		lsls	r3, r3, #4
 4365 0076 874A     		ldr	r2, .L367+4
 4366 0078 9918     		adds	r1, r3, r2
 4367 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4368 007c 1B01     		lsls	r3, r3, #4
 4369 007e 864A     		ldr	r2, .L367+8
 4370 0080 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 104


 4371 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4372 0084 1846     		mov	r0, r3
 4373 0086 FFF7FEFF 		bl	compute_reference
1397:..\src/interruptions.c ****     
1398:..\src/interruptions.c ****    
1399:..\src/interruptions.c ****     switch(MOT->control_mode) {
 4374              		.loc 1 1399 0
 4375 008a 7B6C     		ldr	r3, [r7, #68]
 4376 008c 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 4377 0090 032B     		cmp	r3, #3
 4378 0092 00F28082 		bhi	.L277
 4379 0096 01A2     		adr	r2, .L279
 4380 0098 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4381              		.p2align 2
 4382              	.L279:
 4383 009c ED020000 		.word	.L278+1
 4384 00a0 F7040000 		.word	.L280+1
 4385 00a4 C5030000 		.word	.L281+1
 4386 00a8 AD000000 		.word	.L282+1
 4387              		.p2align 1
 4388              	.L282:
1400:..\src/interruptions.c ****         // ======================= CURRENT AND POSITION CONTROL =======================
1401:..\src/interruptions.c ****         case CURR_AND_POS_CONTROL:
1402:..\src/interruptions.c ****             pos_error = g_ref[0].pos - g_meas[ENC_L].pos[0];
 4389              		.loc 1 1402 0
 4390 00ac 794B     		ldr	r3, .L367+4
 4391 00ae 1A68     		ldr	r2, [r3]
 4392 00b0 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 4393 00b4 7949     		ldr	r1, .L367+12
 4394 00b6 3420     		movs	r0, #52
 4395 00b8 00FB03F3 		mul	r3, r0, r3
 4396 00bc 0B44     		add	r3, r3, r1
 4397 00be 1B68     		ldr	r3, [r3]
 4398 00c0 D31A     		subs	r3, r2, r3
 4399 00c2 FB60     		str	r3, [r7, #12]
1403:..\src/interruptions.c **** 
1404:..\src/interruptions.c ****             pos_error_sum[idx] += pos_error;
 4400              		.loc 1 1404 0
 4401 00c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4402 00c6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4403 00c8 7549     		ldr	r1, .L367+16
 4404 00ca 51F82210 		ldr	r1, [r1, r2, lsl #2]
 4405 00ce FA68     		ldr	r2, [r7, #12]
 4406 00d0 0A44     		add	r2, r2, r1
 4407 00d2 7349     		ldr	r1, .L367+16
 4408 00d4 41F82320 		str	r2, [r1, r3, lsl #2]
1405:..\src/interruptions.c **** 
1406:..\src/interruptions.c ****             // error_sum saturation
1407:..\src/interruptions.c ****             if (pos_error_sum[idx] > POS_INTEGRAL_SAT_LIMIT)
 4409              		.loc 1 1407 0
 4410 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4411 00da 714A     		ldr	r2, .L367+16
 4412 00dc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4413 00e0 704A     		ldr	r2, .L367+20
 4414 00e2 9342     		cmp	r3, r2
 4415 00e4 05DD     		ble	.L283
1408:..\src/interruptions.c ****                 pos_error_sum[idx] = POS_INTEGRAL_SAT_LIMIT;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 105


 4416              		.loc 1 1408 0
 4417 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4418 00e8 6D4A     		ldr	r2, .L367+16
 4419 00ea 6E49     		ldr	r1, .L367+20
 4420 00ec 42F82310 		str	r1, [r2, r3, lsl #2]
 4421 00f0 0BE0     		b	.L284
 4422              	.L283:
1409:..\src/interruptions.c ****             else {
1410:..\src/interruptions.c ****                 if (pos_error_sum[idx] < -POS_INTEGRAL_SAT_LIMIT) 
 4423              		.loc 1 1410 0
 4424 00f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4425 00f4 6A4A     		ldr	r2, .L367+16
 4426 00f6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4427 00fa 6B4A     		ldr	r2, .L367+24
 4428 00fc 9342     		cmp	r3, r2
 4429 00fe 04DA     		bge	.L284
1411:..\src/interruptions.c ****                     pos_error_sum[idx] = -POS_INTEGRAL_SAT_LIMIT;
 4430              		.loc 1 1411 0
 4431 0100 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4432 0102 674A     		ldr	r2, .L367+16
 4433 0104 6849     		ldr	r1, .L367+24
 4434 0106 42F82310 		str	r1, [r2, r3, lsl #2]
 4435              	.L284:
1412:..\src/interruptions.c ****             }
1413:..\src/interruptions.c ****             
1414:..\src/interruptions.c ****             // ------ position PID control ------
1415:..\src/interruptions.c **** 
1416:..\src/interruptions.c ****             i_ref = 0;
 4436              		.loc 1 1416 0
 4437 010a 0023     		movs	r3, #0
 4438 010c BB64     		str	r3, [r7, #72]
1417:..\src/interruptions.c ****             
1418:..\src/interruptions.c ****             // Proportional
1419:..\src/interruptions.c ****             if (k_p_dl != 0)
 4439              		.loc 1 1419 0
 4440 010e 7B6A     		ldr	r3, [r7, #36]
 4441 0110 002B     		cmp	r3, #0
 4442 0112 07D0     		beq	.L285
1420:..\src/interruptions.c ****                 i_ref += (int32)(k_p_dl * pos_error) >> 16;
 4443              		.loc 1 1420 0
 4444 0114 7B6A     		ldr	r3, [r7, #36]
 4445 0116 FA68     		ldr	r2, [r7, #12]
 4446 0118 02FB03F3 		mul	r3, r2, r3
 4447 011c 1B14     		asrs	r3, r3, #16
 4448 011e BA6C     		ldr	r2, [r7, #72]
 4449 0120 1344     		add	r3, r3, r2
 4450 0122 BB64     		str	r3, [r7, #72]
 4451              	.L285:
1421:..\src/interruptions.c **** 
1422:..\src/interruptions.c ****             // Integral
1423:..\src/interruptions.c ****             if (k_i_dl != 0)
 4452              		.loc 1 1423 0
 4453 0124 3B6A     		ldr	r3, [r7, #32]
 4454 0126 002B     		cmp	r3, #0
 4455 0128 0AD0     		beq	.L286
1424:..\src/interruptions.c ****                 i_ref += (int32)(k_i_dl * pos_error_sum[idx]) >> 16;
 4456              		.loc 1 1424 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 106


 4457 012a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4458 012c 5C4A     		ldr	r2, .L367+16
 4459 012e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4460 0132 3A6A     		ldr	r2, [r7, #32]
 4461 0134 02FB03F3 		mul	r3, r2, r3
 4462 0138 1B14     		asrs	r3, r3, #16
 4463 013a BA6C     		ldr	r2, [r7, #72]
 4464 013c 1344     		add	r3, r3, r2
 4465 013e BB64     		str	r3, [r7, #72]
 4466              	.L286:
1425:..\src/interruptions.c **** 
1426:..\src/interruptions.c ****             // Derivative
1427:..\src/interruptions.c ****             if (k_d_dl != 0)
 4467              		.loc 1 1427 0
 4468 0140 FB69     		ldr	r3, [r7, #28]
 4469 0142 002B     		cmp	r3, #0
 4470 0144 0CD0     		beq	.L287
1428:..\src/interruptions.c ****                 i_ref += (int32)(k_d_dl * (pos_error - prev_pos_err[idx])) >> 16;
 4471              		.loc 1 1428 0
 4472 0146 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4473 0148 584A     		ldr	r2, .L367+28
 4474 014a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4475 014e FA68     		ldr	r2, [r7, #12]
 4476 0150 D31A     		subs	r3, r2, r3
 4477 0152 FA69     		ldr	r2, [r7, #28]
 4478 0154 02FB03F3 		mul	r3, r2, r3
 4479 0158 1B14     		asrs	r3, r3, #16
 4480 015a BA6C     		ldr	r2, [r7, #72]
 4481 015c 1344     		add	r3, r3, r2
 4482 015e BB64     		str	r3, [r7, #72]
 4483              	.L287:
1429:..\src/interruptions.c ****                         
1430:..\src/interruptions.c ****             // Update previous position
1431:..\src/interruptions.c ****             prev_pos_err[idx] = pos_error;
 4484              		.loc 1 1431 0
 4485 0160 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4486 0162 5249     		ldr	r1, .L367+28
 4487 0164 FA68     		ldr	r2, [r7, #12]
 4488 0166 41F82320 		str	r2, [r1, r3, lsl #2]
1432:..\src/interruptions.c **** 
1433:..\src/interruptions.c ****             // motor direction depends on i_ref
1434:..\src/interruptions.c ****             if (i_ref >= 0)
 4489              		.loc 1 1434 0
 4490 016a BB6C     		ldr	r3, [r7, #72]
 4491 016c 002B     		cmp	r3, #0
 4492 016e 04DB     		blt	.L288
1435:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 4493              		.loc 1 1435 0
 4494 0170 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4495 0172 4F4A     		ldr	r2, .L367+32
 4496 0174 0121     		movs	r1, #1
 4497 0176 D154     		strb	r1, [r2, r3]
 4498 0178 03E0     		b	.L289
 4499              	.L288:
1436:..\src/interruptions.c ****             else
1437:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
 4500              		.loc 1 1437 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 107


 4501 017a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4502 017c 4C4A     		ldr	r2, .L367+32
 4503 017e 0021     		movs	r1, #0
 4504 0180 D154     		strb	r1, [r2, r3]
 4505              	.L289:
1438:..\src/interruptions.c **** 
1439:..\src/interruptions.c ****             // saturate max current
1440:..\src/interruptions.c ****             if (i_ref > MOT->current_limit)
 4506              		.loc 1 1440 0
 4507 0182 7B6C     		ldr	r3, [r7, #68]
 4508 0184 B3F95C30 		ldrsh	r3, [r3, #92]
 4509 0188 1A46     		mov	r2, r3
 4510 018a BB6C     		ldr	r3, [r7, #72]
 4511 018c 9A42     		cmp	r2, r3
 4512 018e 04DA     		bge	.L290
1441:..\src/interruptions.c ****                 i_ref = MOT->current_limit;
 4513              		.loc 1 1441 0
 4514 0190 7B6C     		ldr	r3, [r7, #68]
 4515 0192 B3F95C30 		ldrsh	r3, [r3, #92]
 4516 0196 BB64     		str	r3, [r7, #72]
 4517 0198 0BE0     		b	.L291
 4518              	.L290:
1442:..\src/interruptions.c ****             else {
1443:..\src/interruptions.c ****                 if (i_ref < -MOT->current_limit)
 4519              		.loc 1 1443 0
 4520 019a 7B6C     		ldr	r3, [r7, #68]
 4521 019c B3F95C30 		ldrsh	r3, [r3, #92]
 4522 01a0 5A42     		negs	r2, r3
 4523 01a2 BB6C     		ldr	r3, [r7, #72]
 4524 01a4 9A42     		cmp	r2, r3
 4525 01a6 04DD     		ble	.L291
1444:..\src/interruptions.c ****                     i_ref = -MOT->current_limit;
 4526              		.loc 1 1444 0
 4527 01a8 7B6C     		ldr	r3, [r7, #68]
 4528 01aa B3F95C30 		ldrsh	r3, [r3, #92]
 4529 01ae 5B42     		negs	r3, r3
 4530 01b0 BB64     		str	r3, [r7, #72]
 4531              	.L291:
1445:..\src/interruptions.c ****         	}
1446:..\src/interruptions.c **** 
1447:..\src/interruptions.c ****             // current error and curr error sum
1448:..\src/interruptions.c ****             curr_error = i_ref - g_meas[ENC_L].curr;
 4532              		.loc 1 1448 0
 4533 01b2 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 4534 01b6 394A     		ldr	r2, .L367+12
 4535 01b8 3421     		movs	r1, #52
 4536 01ba 01FB03F3 		mul	r3, r1, r3
 4537 01be 1344     		add	r3, r3, r2
 4538 01c0 0C33     		adds	r3, r3, #12
 4539 01c2 1B68     		ldr	r3, [r3]
 4540 01c4 BA6C     		ldr	r2, [r7, #72]
 4541 01c6 D31A     		subs	r3, r2, r3
 4542 01c8 BB60     		str	r3, [r7, #8]
1449:..\src/interruptions.c ****             curr_error_sum[idx] += curr_error;
 4543              		.loc 1 1449 0
 4544 01ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4545 01cc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 108


 4546 01ce 3949     		ldr	r1, .L367+36
 4547 01d0 51F82210 		ldr	r1, [r1, r2, lsl #2]
 4548 01d4 BA68     		ldr	r2, [r7, #8]
 4549 01d6 0A44     		add	r2, r2, r1
 4550 01d8 3649     		ldr	r1, .L367+36
 4551 01da 41F82320 		str	r2, [r1, r3, lsl #2]
1450:..\src/interruptions.c ****             
1451:..\src/interruptions.c ****             if (curr_error_sum[idx] > CURR_INTEGRAL_SAT_LIMIT)
 4552              		.loc 1 1451 0
 4553 01de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4554 01e0 344A     		ldr	r2, .L367+36
 4555 01e2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4556 01e6 344A     		ldr	r2, .L367+40
 4557 01e8 9342     		cmp	r3, r2
 4558 01ea 05DD     		ble	.L292
1452:..\src/interruptions.c ****                 curr_error_sum[idx] = CURR_INTEGRAL_SAT_LIMIT;
 4559              		.loc 1 1452 0
 4560 01ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4561 01ee 314A     		ldr	r2, .L367+36
 4562 01f0 3149     		ldr	r1, .L367+40
 4563 01f2 42F82310 		str	r1, [r2, r3, lsl #2]
 4564 01f6 0BE0     		b	.L293
 4565              	.L292:
1453:..\src/interruptions.c ****             else {
1454:..\src/interruptions.c ****                 if (curr_error_sum[idx] < -CURR_INTEGRAL_SAT_LIMIT)
 4566              		.loc 1 1454 0
 4567 01f8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4568 01fa 2E4A     		ldr	r2, .L367+36
 4569 01fc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4570 0200 2E4A     		ldr	r2, .L367+44
 4571 0202 9342     		cmp	r3, r2
 4572 0204 04DA     		bge	.L293
1455:..\src/interruptions.c ****                     curr_error_sum[idx] = -CURR_INTEGRAL_SAT_LIMIT;
 4573              		.loc 1 1455 0
 4574 0206 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4575 0208 2A4A     		ldr	r2, .L367+36
 4576 020a 2C49     		ldr	r1, .L367+44
 4577 020c 42F82310 		str	r1, [r2, r3, lsl #2]
 4578              	.L293:
1456:..\src/interruptions.c ****             }
1457:..\src/interruptions.c **** 
1458:..\src/interruptions.c ****             // ----- current PID control -----
1459:..\src/interruptions.c **** 
1460:..\src/interruptions.c ****             pwm_input = 0;
 4579              		.loc 1 1460 0
 4580 0210 0023     		movs	r3, #0
 4581 0212 FB64     		str	r3, [r7, #76]
1461:..\src/interruptions.c **** 
1462:..\src/interruptions.c ****             // Proportional
1463:..\src/interruptions.c ****             if (k_p_c_dl != 0)
 4582              		.loc 1 1463 0
 4583 0214 BB69     		ldr	r3, [r7, #24]
 4584 0216 002B     		cmp	r3, #0
 4585 0218 07D0     		beq	.L294
1464:..\src/interruptions.c ****                 pwm_input += (int32)(k_p_c_dl * curr_error) >> 16;
 4586              		.loc 1 1464 0
 4587 021a BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 109


 4588 021c BA68     		ldr	r2, [r7, #8]
 4589 021e 02FB03F3 		mul	r3, r2, r3
 4590 0222 1B14     		asrs	r3, r3, #16
 4591 0224 FA6C     		ldr	r2, [r7, #76]
 4592 0226 1344     		add	r3, r3, r2
 4593 0228 FB64     		str	r3, [r7, #76]
 4594              	.L294:
1465:..\src/interruptions.c **** 
1466:..\src/interruptions.c ****             // Integral
1467:..\src/interruptions.c ****             if (k_i_c_dl != 0)
 4595              		.loc 1 1467 0
 4596 022a 7B69     		ldr	r3, [r7, #20]
 4597 022c 002B     		cmp	r3, #0
 4598 022e 0AD0     		beq	.L295
1468:..\src/interruptions.c ****                 pwm_input += (int32)(k_i_c_dl * curr_error_sum[idx]) >> 16;
 4599              		.loc 1 1468 0
 4600 0230 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4601 0232 204A     		ldr	r2, .L367+36
 4602 0234 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4603 0238 7A69     		ldr	r2, [r7, #20]
 4604 023a 02FB03F3 		mul	r3, r2, r3
 4605 023e 1B14     		asrs	r3, r3, #16
 4606 0240 FA6C     		ldr	r2, [r7, #76]
 4607 0242 1344     		add	r3, r3, r2
 4608 0244 FB64     		str	r3, [r7, #76]
 4609              	.L295:
1469:..\src/interruptions.c **** 
1470:..\src/interruptions.c ****             // Derivative
1471:..\src/interruptions.c ****             if (k_d_c_dl != 0)
 4610              		.loc 1 1471 0
 4611 0246 3B69     		ldr	r3, [r7, #16]
 4612 0248 002B     		cmp	r3, #0
 4613 024a 0CD0     		beq	.L296
1472:..\src/interruptions.c ****                 pwm_input += (int32)(k_d_c_dl * (curr_error - prev_curr_err[idx])) >> 16;
 4614              		.loc 1 1472 0
 4615 024c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4616 024e 1C4A     		ldr	r2, .L367+48
 4617 0250 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4618 0254 BA68     		ldr	r2, [r7, #8]
 4619 0256 D31A     		subs	r3, r2, r3
 4620 0258 3A69     		ldr	r2, [r7, #16]
 4621 025a 02FB03F3 		mul	r3, r2, r3
 4622 025e 1B14     		asrs	r3, r3, #16
 4623 0260 FA6C     		ldr	r2, [r7, #76]
 4624 0262 1344     		add	r3, r3, r2
 4625 0264 FB64     		str	r3, [r7, #76]
 4626              	.L296:
1473:..\src/interruptions.c ****              
1474:..\src/interruptions.c ****             // Limit PWM in range (specific per motor driver)
1475:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_BRUSHLESS) {
 4627              		.loc 1 1475 0
 4628 0266 7B6C     		ldr	r3, [r7, #68]
 4629 0268 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 4630 026c 022B     		cmp	r3, #2
 4631 026e 2BD1     		bne	.L297
1476:..\src/interruptions.c ****                 if(pwm_input > PWM_MAX_VALUE_ESC) 
 4632              		.loc 1 1476 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 110


 4633 0270 FB6C     		ldr	r3, [r7, #76]
 4634 0272 40F6A932 		movw	r2, #2985
 4635 0276 9342     		cmp	r3, r2
 4636 0278 02DD     		ble	.L298
1477:..\src/interruptions.c ****                     pwm_input =  PWM_MAX_VALUE_ESC;
 4637              		.loc 1 1477 0
 4638 027a 40F6A933 		movw	r3, #2985
 4639 027e FB64     		str	r3, [r7, #76]
 4640              	.L298:
1478:..\src/interruptions.c ****                 if(pwm_input < -PWM_MAX_VALUE_ESC) 
 4641              		.loc 1 1478 0
 4642 0280 FB6C     		ldr	r3, [r7, #76]
 4643 0282 104A     		ldr	r2, .L367+52
 4644 0284 9342     		cmp	r3, r2
 4645 0286 2BDA     		bge	.L300
1479:..\src/interruptions.c ****                     pwm_input = -PWM_MAX_VALUE_ESC;
 4646              		.loc 1 1479 0
 4647 0288 0E4B     		ldr	r3, .L367+52
 4648 028a FB64     		str	r3, [r7, #76]
 4649 028c 28E0     		b	.L300
 4650              	.L368:
 4651 028e 00BF     		.align	2
 4652              	.L367:
 4653 0290 00000000 		.word	c_mem
 4654 0294 00000000 		.word	g_ref
 4655 0298 00000000 		.word	g_refOld
 4656 029c 00000000 		.word	g_meas
 4657 02a0 AC000000 		.word	pos_error_sum.10682
 4658 02a4 80F0FA02 		.word	50000000
 4659 02a8 800F05FD 		.word	-50000000
 4660 02ac B4000000 		.word	prev_pos_err.10684
 4661 02b0 BC000000 		.word	motor_dir.10687
 4662 02b4 C0000000 		.word	curr_error_sum.10683
 4663 02b8 A0860100 		.word	100000
 4664 02bc 6079FEFF 		.word	-100000
 4665 02c0 C8000000 		.word	prev_curr_err.10685
 4666 02c4 57F4FFFF 		.word	-2985
 4667              	.L297:
1480:..\src/interruptions.c ****             }
1481:..\src/interruptions.c ****             else {
1482:..\src/interruptions.c ****                 if(pwm_input > PWM_MAX_VALUE_DC) 
 4668              		.loc 1 1482 0
 4669 02c8 FB6C     		ldr	r3, [r7, #76]
 4670 02ca 642B     		cmp	r3, #100
 4671 02cc 01DD     		ble	.L301
1483:..\src/interruptions.c ****                     pwm_input =  PWM_MAX_VALUE_DC;
 4672              		.loc 1 1483 0
 4673 02ce 6423     		movs	r3, #100
 4674 02d0 FB64     		str	r3, [r7, #76]
 4675              	.L301:
1484:..\src/interruptions.c ****                 if(pwm_input < -PWM_MAX_VALUE_DC) 
 4676              		.loc 1 1484 0
 4677 02d2 FB6C     		ldr	r3, [r7, #76]
 4678 02d4 13F1640F 		cmn	r3, #100
 4679 02d8 02DA     		bge	.L300
1485:..\src/interruptions.c ****                     pwm_input = -PWM_MAX_VALUE_DC;
 4680              		.loc 1 1485 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 111


 4681 02da 6FF06303 		mvn	r3, #99
 4682 02de FB64     		str	r3, [r7, #76]
 4683              	.L300:
1486:..\src/interruptions.c ****             }
1487:..\src/interruptions.c **** 
1488:..\src/interruptions.c ****             // Update previous current
1489:..\src/interruptions.c ****             prev_curr_err[idx] = curr_error;
 4684              		.loc 1 1489 0
 4685 02e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4686 02e2 A049     		ldr	r1, .L369
 4687 02e4 BA68     		ldr	r2, [r7, #8]
 4688 02e6 41F82320 		str	r2, [r1, r3, lsl #2]
1490:..\src/interruptions.c **** 
1491:..\src/interruptions.c ****         break;
 4689              		.loc 1 1491 0
 4690 02ea 54E1     		b	.L277
 4691              	.L278:
1492:..\src/interruptions.c **** 
1493:..\src/interruptions.c ****         // ============================== POSITION CONTROL =====================
1494:..\src/interruptions.c ****         case CONTROL_ANGLE:
1495:..\src/interruptions.c ****             pos_error = g_ref[idx].pos - g_meas[ENC_L].pos[0];
 4692              		.loc 1 1495 0
 4693 02ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4694 02ee 9E4A     		ldr	r2, .L369+4
 4695 02f0 1B01     		lsls	r3, r3, #4
 4696 02f2 1344     		add	r3, r3, r2
 4697 02f4 1A68     		ldr	r2, [r3]
 4698 02f6 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 4699 02fa 9C49     		ldr	r1, .L369+8
 4700 02fc 3420     		movs	r0, #52
 4701 02fe 00FB03F3 		mul	r3, r0, r3
 4702 0302 0B44     		add	r3, r3, r1
 4703 0304 1B68     		ldr	r3, [r3]
 4704 0306 D31A     		subs	r3, r2, r3
 4705 0308 FB60     		str	r3, [r7, #12]
1496:..\src/interruptions.c **** 
1497:..\src/interruptions.c ****             pos_error_sum[idx] += pos_error;
 4706              		.loc 1 1497 0
 4707 030a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4708 030c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4709 030e 9849     		ldr	r1, .L369+12
 4710 0310 51F82210 		ldr	r1, [r1, r2, lsl #2]
 4711 0314 FA68     		ldr	r2, [r7, #12]
 4712 0316 0A44     		add	r2, r2, r1
 4713 0318 9549     		ldr	r1, .L369+12
 4714 031a 41F82320 		str	r2, [r1, r3, lsl #2]
1498:..\src/interruptions.c **** 
1499:..\src/interruptions.c ****             // anti-windup (for integral control)
1500:..\src/interruptions.c ****             if (pos_error_sum[idx] > ANTI_WINDUP)
 4715              		.loc 1 1500 0
 4716 031e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4717 0320 934A     		ldr	r2, .L369+12
 4718 0322 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4719 0326 B3F57A7F 		cmp	r3, #1000
 4720 032a 06DD     		ble	.L302
1501:..\src/interruptions.c ****                 pos_error_sum[idx] = ANTI_WINDUP;
 4721              		.loc 1 1501 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 112


 4722 032c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4723 032e 904A     		ldr	r2, .L369+12
 4724 0330 4FF47A71 		mov	r1, #1000
 4725 0334 42F82310 		str	r1, [r2, r3, lsl #2]
 4726 0338 0BE0     		b	.L303
 4727              	.L302:
1502:..\src/interruptions.c ****             else {
1503:..\src/interruptions.c **** 				if (pos_error_sum[idx] < -ANTI_WINDUP)
 4728              		.loc 1 1503 0
 4729 033a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4730 033c 8C4A     		ldr	r2, .L369+12
 4731 033e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4732 0342 13F57A7F 		cmn	r3, #1000
 4733 0346 04DA     		bge	.L303
1504:..\src/interruptions.c ****                 	pos_error_sum[idx] = -ANTI_WINDUP;
 4734              		.loc 1 1504 0
 4735 0348 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4736 034a 894A     		ldr	r2, .L369+12
 4737 034c 8949     		ldr	r1, .L369+16
 4738 034e 42F82310 		str	r1, [r2, r3, lsl #2]
 4739              	.L303:
1505:..\src/interruptions.c ****             }
1506:..\src/interruptions.c **** 
1507:..\src/interruptions.c ****             // Proportional
1508:..\src/interruptions.c ****             if (k_p != 0) 
 4740              		.loc 1 1508 0
 4741 0352 FB6B     		ldr	r3, [r7, #60]
 4742 0354 002B     		cmp	r3, #0
 4743 0356 05D0     		beq	.L304
1509:..\src/interruptions.c ****                 pwm_input = (int32)(k_p * pos_error) >> 16;
 4744              		.loc 1 1509 0
 4745 0358 FB6B     		ldr	r3, [r7, #60]
 4746 035a FA68     		ldr	r2, [r7, #12]
 4747 035c 02FB03F3 		mul	r3, r2, r3
 4748 0360 1B14     		asrs	r3, r3, #16
 4749 0362 FB64     		str	r3, [r7, #76]
 4750              	.L304:
1510:..\src/interruptions.c ****             
1511:..\src/interruptions.c **** 
1512:..\src/interruptions.c ****             // Integral
1513:..\src/interruptions.c ****             if (k_i != 0) 
 4751              		.loc 1 1513 0
 4752 0364 BB6B     		ldr	r3, [r7, #56]
 4753 0366 002B     		cmp	r3, #0
 4754 0368 0AD0     		beq	.L305
1514:..\src/interruptions.c ****                 pwm_input += (int32)(k_i * pos_error_sum[idx]) >> 16;
 4755              		.loc 1 1514 0
 4756 036a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4757 036c 804A     		ldr	r2, .L369+12
 4758 036e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4759 0372 BA6B     		ldr	r2, [r7, #56]
 4760 0374 02FB03F3 		mul	r3, r2, r3
 4761 0378 1B14     		asrs	r3, r3, #16
 4762 037a FA6C     		ldr	r2, [r7, #76]
 4763 037c 1344     		add	r3, r3, r2
 4764 037e FB64     		str	r3, [r7, #76]
 4765              	.L305:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 113


1515:..\src/interruptions.c ****             
1516:..\src/interruptions.c **** 
1517:..\src/interruptions.c ****             // Derivative
1518:..\src/interruptions.c ****             if (k_d != 0) 
 4766              		.loc 1 1518 0
 4767 0380 7B6B     		ldr	r3, [r7, #52]
 4768 0382 002B     		cmp	r3, #0
 4769 0384 0CD0     		beq	.L306
1519:..\src/interruptions.c ****                 pwm_input += (int32)(k_d * (pos_error - prev_pos_err[idx])) >> 16;
 4770              		.loc 1 1519 0
 4771 0386 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4772 0388 7B4A     		ldr	r2, .L369+20
 4773 038a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4774 038e FA68     		ldr	r2, [r7, #12]
 4775 0390 D31A     		subs	r3, r2, r3
 4776 0392 7A6B     		ldr	r2, [r7, #52]
 4777 0394 02FB03F3 		mul	r3, r2, r3
 4778 0398 1B14     		asrs	r3, r3, #16
 4779 039a FA6C     		ldr	r2, [r7, #76]
 4780 039c 1344     		add	r3, r3, r2
 4781 039e FB64     		str	r3, [r7, #76]
 4782              	.L306:
1520:..\src/interruptions.c ****             
1521:..\src/interruptions.c **** 
1522:..\src/interruptions.c ****             // Update measure
1523:..\src/interruptions.c ****             prev_pos_err[idx] = pos_error;
 4783              		.loc 1 1523 0
 4784 03a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4785 03a2 7549     		ldr	r1, .L369+20
 4786 03a4 FA68     		ldr	r2, [r7, #12]
 4787 03a6 41F82320 		str	r2, [r1, r3, lsl #2]
1524:..\src/interruptions.c **** 
1525:..\src/interruptions.c ****             if (pwm_input > 0)
 4788              		.loc 1 1525 0
 4789 03aa FB6C     		ldr	r3, [r7, #76]
 4790 03ac 002B     		cmp	r3, #0
 4791 03ae 04DD     		ble	.L307
1526:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 4792              		.loc 1 1526 0
 4793 03b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4794 03b2 724A     		ldr	r2, .L369+24
 4795 03b4 0121     		movs	r1, #1
 4796 03b6 D154     		strb	r1, [r2, r3]
1527:..\src/interruptions.c ****             else
1528:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
1529:..\src/interruptions.c **** 
1530:..\src/interruptions.c ****         break;
 4797              		.loc 1 1530 0
 4798 03b8 EDE0     		b	.L277
 4799              	.L307:
1528:..\src/interruptions.c **** 
 4800              		.loc 1 1528 0
 4801 03ba FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4802 03bc 6F4A     		ldr	r2, .L369+24
 4803 03be 0021     		movs	r1, #0
 4804 03c0 D154     		strb	r1, [r2, r3]
 4805              		.loc 1 1530 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 114


 4806 03c2 E8E0     		b	.L277
 4807              	.L281:
1531:..\src/interruptions.c **** 
1532:..\src/interruptions.c ****         // ========================== CURRENT CONTROL ==========================
1533:..\src/interruptions.c ****         case CONTROL_CURRENT:
1534:..\src/interruptions.c ****             if(g_ref[idx].onoff && tension_valid) {
 4808              		.loc 1 1534 0
 4809 03c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4810 03c6 684A     		ldr	r2, .L369+4
 4811 03c8 1B01     		lsls	r3, r3, #4
 4812 03ca 1344     		add	r3, r3, r2
 4813 03cc 0C33     		adds	r3, r3, #12
 4814 03ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4815 03d0 002B     		cmp	r3, #0
 4816 03d2 00F0C480 		beq	.L364
 4817              		.loc 1 1534 0 is_stmt 0 discriminator 1
 4818 03d6 6A4B     		ldr	r3, .L369+28
 4819 03d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4820 03da 002B     		cmp	r3, #0
 4821 03dc 00F0BF80 		beq	.L364
1535:..\src/interruptions.c ****                 
1536:..\src/interruptions.c ****                 i_ref = g_ref[idx].curr;
 4822              		.loc 1 1536 0 is_stmt 1
 4823 03e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4824 03e2 614A     		ldr	r2, .L369+4
 4825 03e4 1B01     		lsls	r3, r3, #4
 4826 03e6 1344     		add	r3, r3, r2
 4827 03e8 0433     		adds	r3, r3, #4
 4828 03ea 1B68     		ldr	r3, [r3]
 4829 03ec BB64     		str	r3, [r7, #72]
1537:..\src/interruptions.c **** 
1538:..\src/interruptions.c ****                 if (i_ref > MOT->current_limit) 
 4830              		.loc 1 1538 0
 4831 03ee 7B6C     		ldr	r3, [r7, #68]
 4832 03f0 B3F95C30 		ldrsh	r3, [r3, #92]
 4833 03f4 1A46     		mov	r2, r3
 4834 03f6 BB6C     		ldr	r3, [r7, #72]
 4835 03f8 9A42     		cmp	r2, r3
 4836 03fa 04DA     		bge	.L310
1539:..\src/interruptions.c ****                     i_ref = MOT->current_limit;
 4837              		.loc 1 1539 0
 4838 03fc 7B6C     		ldr	r3, [r7, #68]
 4839 03fe B3F95C30 		ldrsh	r3, [r3, #92]
 4840 0402 BB64     		str	r3, [r7, #72]
 4841 0404 0BE0     		b	.L311
 4842              	.L310:
1540:..\src/interruptions.c ****                 else {
1541:..\src/interruptions.c ****                     if (i_ref < -MOT->current_limit)
 4843              		.loc 1 1541 0
 4844 0406 7B6C     		ldr	r3, [r7, #68]
 4845 0408 B3F95C30 		ldrsh	r3, [r3, #92]
 4846 040c 5A42     		negs	r2, r3
 4847 040e BB6C     		ldr	r3, [r7, #72]
 4848 0410 9A42     		cmp	r2, r3
 4849 0412 04DD     		ble	.L311
1542:..\src/interruptions.c ****                         i_ref = -MOT->current_limit;
 4850              		.loc 1 1542 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 115


 4851 0414 7B6C     		ldr	r3, [r7, #68]
 4852 0416 B3F95C30 		ldrsh	r3, [r3, #92]
 4853 041a 5B42     		negs	r3, r3
 4854 041c BB64     		str	r3, [r7, #72]
 4855              	.L311:
1543:..\src/interruptions.c ****                 }
1544:..\src/interruptions.c ****                 
1545:..\src/interruptions.c ****                 // current error
1546:..\src/interruptions.c ****                 curr_error = i_ref - g_meas[ENC_L].curr;            
 4856              		.loc 1 1546 0
 4857 041e 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 4858 0422 524A     		ldr	r2, .L369+8
 4859 0424 3421     		movs	r1, #52
 4860 0426 01FB03F3 		mul	r3, r1, r3
 4861 042a 1344     		add	r3, r3, r2
 4862 042c 0C33     		adds	r3, r3, #12
 4863 042e 1B68     		ldr	r3, [r3]
 4864 0430 BA6C     		ldr	r2, [r7, #72]
 4865 0432 D31A     		subs	r3, r2, r3
 4866 0434 BB60     		str	r3, [r7, #8]
1547:..\src/interruptions.c ****                 curr_error_sum[idx] += curr_error;
 4867              		.loc 1 1547 0
 4868 0436 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4869 0438 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4870 043a 5249     		ldr	r1, .L369+32
 4871 043c 51F82210 		ldr	r1, [r1, r2, lsl #2]
 4872 0440 BA68     		ldr	r2, [r7, #8]
 4873 0442 0A44     		add	r2, r2, r1
 4874 0444 4F49     		ldr	r1, .L369+32
 4875 0446 41F82320 		str	r2, [r1, r3, lsl #2]
1548:..\src/interruptions.c ****                 
1549:..\src/interruptions.c ****                 if (curr_error_sum[idx] > CURR_INTEGRAL_SAT_LIMIT)
 4876              		.loc 1 1549 0
 4877 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4878 044c 4D4A     		ldr	r2, .L369+32
 4879 044e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4880 0452 4D4A     		ldr	r2, .L369+36
 4881 0454 9342     		cmp	r3, r2
 4882 0456 05DD     		ble	.L312
1550:..\src/interruptions.c ****                     curr_error_sum[idx] = CURR_INTEGRAL_SAT_LIMIT;
 4883              		.loc 1 1550 0
 4884 0458 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4885 045a 4A4A     		ldr	r2, .L369+32
 4886 045c 4A49     		ldr	r1, .L369+36
 4887 045e 42F82310 		str	r1, [r2, r3, lsl #2]
 4888 0462 0BE0     		b	.L313
 4889              	.L312:
1551:..\src/interruptions.c ****                 else {
1552:..\src/interruptions.c ****                     if (curr_error_sum[idx] < -CURR_INTEGRAL_SAT_LIMIT) 
 4890              		.loc 1 1552 0
 4891 0464 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4892 0466 474A     		ldr	r2, .L369+32
 4893 0468 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4894 046c 474A     		ldr	r2, .L369+40
 4895 046e 9342     		cmp	r3, r2
 4896 0470 04DA     		bge	.L313
1553:..\src/interruptions.c ****                         curr_error_sum[idx] = -CURR_INTEGRAL_SAT_LIMIT;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 116


 4897              		.loc 1 1553 0
 4898 0472 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4899 0474 434A     		ldr	r2, .L369+32
 4900 0476 4549     		ldr	r1, .L369+40
 4901 0478 42F82310 		str	r1, [r2, r3, lsl #2]
 4902              	.L313:
1554:..\src/interruptions.c ****                 }
1555:..\src/interruptions.c **** 
1556:..\src/interruptions.c ****                 pwm_input = 0;
 4903              		.loc 1 1556 0
 4904 047c 0023     		movs	r3, #0
 4905 047e FB64     		str	r3, [r7, #76]
1557:..\src/interruptions.c **** 
1558:..\src/interruptions.c ****                 // Proportional
1559:..\src/interruptions.c ****                 if (k_p_c != 0)
 4906              		.loc 1 1559 0
 4907 0480 3B6B     		ldr	r3, [r7, #48]
 4908 0482 002B     		cmp	r3, #0
 4909 0484 07D0     		beq	.L314
1560:..\src/interruptions.c ****                     pwm_input += (int32)(k_p_c * curr_error) >> 16;
 4910              		.loc 1 1560 0
 4911 0486 3B6B     		ldr	r3, [r7, #48]
 4912 0488 BA68     		ldr	r2, [r7, #8]
 4913 048a 02FB03F3 		mul	r3, r2, r3
 4914 048e 1B14     		asrs	r3, r3, #16
 4915 0490 FA6C     		ldr	r2, [r7, #76]
 4916 0492 1344     		add	r3, r3, r2
 4917 0494 FB64     		str	r3, [r7, #76]
 4918              	.L314:
1561:..\src/interruptions.c **** 
1562:..\src/interruptions.c ****                 // Integral
1563:..\src/interruptions.c ****                 if (k_i_c != 0)
 4919              		.loc 1 1563 0
 4920 0496 FB6A     		ldr	r3, [r7, #44]
 4921 0498 002B     		cmp	r3, #0
 4922 049a 0AD0     		beq	.L315
1564:..\src/interruptions.c ****                     pwm_input += (int32)(k_i_c * curr_error_sum[idx]) >> 16;
 4923              		.loc 1 1564 0
 4924 049c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4925 049e 394A     		ldr	r2, .L369+32
 4926 04a0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4927 04a4 FA6A     		ldr	r2, [r7, #44]
 4928 04a6 02FB03F3 		mul	r3, r2, r3
 4929 04aa 1B14     		asrs	r3, r3, #16
 4930 04ac FA6C     		ldr	r2, [r7, #76]
 4931 04ae 1344     		add	r3, r3, r2
 4932 04b0 FB64     		str	r3, [r7, #76]
 4933              	.L315:
1565:..\src/interruptions.c **** 
1566:..\src/interruptions.c ****                 // Derivative
1567:..\src/interruptions.c ****                 if (k_d_c != 0)
 4934              		.loc 1 1567 0
 4935 04b2 BB6A     		ldr	r3, [r7, #40]
 4936 04b4 002B     		cmp	r3, #0
 4937 04b6 0CD0     		beq	.L316
1568:..\src/interruptions.c ****                     pwm_input += (int32)(k_d_c * (curr_error - prev_curr_err[idx])) >> 16;
 4938              		.loc 1 1568 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 117


 4939 04b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4940 04ba 2A4A     		ldr	r2, .L369
 4941 04bc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4942 04c0 BA68     		ldr	r2, [r7, #8]
 4943 04c2 D31A     		subs	r3, r2, r3
 4944 04c4 BA6A     		ldr	r2, [r7, #40]
 4945 04c6 02FB03F3 		mul	r3, r2, r3
 4946 04ca 1B14     		asrs	r3, r3, #16
 4947 04cc FA6C     		ldr	r2, [r7, #76]
 4948 04ce 1344     		add	r3, r3, r2
 4949 04d0 FB64     		str	r3, [r7, #76]
 4950              	.L316:
1569:..\src/interruptions.c ****                 
1570:..\src/interruptions.c ****                 prev_curr_err[idx] = curr_error;
 4951              		.loc 1 1570 0
 4952 04d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4953 04d4 2349     		ldr	r1, .L369
 4954 04d6 BA68     		ldr	r2, [r7, #8]
 4955 04d8 41F82320 		str	r2, [r1, r3, lsl #2]
1571:..\src/interruptions.c ****                 
1572:..\src/interruptions.c ****                 if (pwm_input >= 0) 
 4956              		.loc 1 1572 0
 4957 04dc FB6C     		ldr	r3, [r7, #76]
 4958 04de 002B     		cmp	r3, #0
 4959 04e0 04DB     		blt	.L317
1573:..\src/interruptions.c ****                     motor_dir[idx] = TRUE;
 4960              		.loc 1 1573 0
 4961 04e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4962 04e4 254A     		ldr	r2, .L369+24
 4963 04e6 0121     		movs	r1, #1
 4964 04e8 D154     		strb	r1, [r2, r3]
1574:..\src/interruptions.c ****                 else
1575:..\src/interruptions.c ****                     motor_dir[idx] = FALSE;
1576:..\src/interruptions.c ****             }
1577:..\src/interruptions.c ****         break;
 4965              		.loc 1 1577 0
 4966 04ea 38E0     		b	.L364
 4967              	.L317:
1575:..\src/interruptions.c ****             }
 4968              		.loc 1 1575 0
 4969 04ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4970 04ee 234A     		ldr	r2, .L369+24
 4971 04f0 0021     		movs	r1, #0
 4972 04f2 D154     		strb	r1, [r2, r3]
 4973              		.loc 1 1577 0
 4974 04f4 33E0     		b	.L364
 4975              	.L280:
1578:..\src/interruptions.c ****         
1579:..\src/interruptions.c ****         // ================= DIRECT PWM CONTROL ================================
1580:..\src/interruptions.c ****         case CONTROL_PWM:
1581:..\src/interruptions.c **** 
1582:..\src/interruptions.c ****             pwm_input = g_ref[idx].pwm;
 4976              		.loc 1 1582 0
 4977 04f6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4978 04f8 1B4A     		ldr	r2, .L369+4
 4979 04fa 1B01     		lsls	r3, r3, #4
 4980 04fc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 118


 4981 04fe 0833     		adds	r3, r3, #8
 4982 0500 1B68     		ldr	r3, [r3]
 4983 0502 FB64     		str	r3, [r7, #76]
1583:..\src/interruptions.c **** 
1584:..\src/interruptions.c ****             if (pwm_input > 0) 
 4984              		.loc 1 1584 0
 4985 0504 FB6C     		ldr	r3, [r7, #76]
 4986 0506 002B     		cmp	r3, #0
 4987 0508 04DD     		ble	.L318
1585:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 4988              		.loc 1 1585 0
 4989 050a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4990 050c 1B4A     		ldr	r2, .L369+24
 4991 050e 0121     		movs	r1, #1
 4992 0510 D154     		strb	r1, [r2, r3]
 4993 0512 03E0     		b	.L319
 4994              	.L318:
1586:..\src/interruptions.c ****             else 
1587:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
 4995              		.loc 1 1587 0
 4996 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4997 0516 194A     		ldr	r2, .L369+24
 4998 0518 0021     		movs	r1, #0
 4999 051a D154     		strb	r1, [r2, r3]
 5000              	.L319:
1588:..\src/interruptions.c ****             
1589:..\src/interruptions.c ****           
1590:..\src/interruptions.c ****             // Limit PWM in range (specific per motor driver)
1591:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_BRUSHLESS) {
 5001              		.loc 1 1591 0
 5002 051c 7B6C     		ldr	r3, [r7, #68]
 5003 051e 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 5004 0522 022B     		cmp	r3, #2
 5005 0524 0ED1     		bne	.L320
1592:..\src/interruptions.c ****                 if(pwm_input > PWM_MAX_VALUE_ESC) 
 5006              		.loc 1 1592 0
 5007 0526 FB6C     		ldr	r3, [r7, #76]
 5008 0528 40F6A932 		movw	r2, #2985
 5009 052c 9342     		cmp	r3, r2
 5010 052e 02DD     		ble	.L321
1593:..\src/interruptions.c ****                     pwm_input =  PWM_MAX_VALUE_ESC;
 5011              		.loc 1 1593 0
 5012 0530 40F6A933 		movw	r3, #2985
 5013 0534 FB64     		str	r3, [r7, #76]
 5014              	.L321:
1594:..\src/interruptions.c ****                 if(pwm_input < -PWM_MAX_VALUE_ESC) 
 5015              		.loc 1 1594 0
 5016 0536 FB6C     		ldr	r3, [r7, #76]
 5017 0538 154A     		ldr	r2, .L369+44
 5018 053a 9342     		cmp	r3, r2
 5019 053c 2ADA     		bge	.L365
1595:..\src/interruptions.c ****                     pwm_input = -PWM_MAX_VALUE_ESC;
 5020              		.loc 1 1595 0
 5021 053e 144B     		ldr	r3, .L369+44
 5022 0540 FB64     		str	r3, [r7, #76]
1596:..\src/interruptions.c ****             }
1597:..\src/interruptions.c ****             else {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 119


1598:..\src/interruptions.c ****                 if(pwm_input > PWM_MAX_VALUE_DC) 
1599:..\src/interruptions.c ****                     pwm_input =  PWM_MAX_VALUE_DC;
1600:..\src/interruptions.c ****                 if(pwm_input < -PWM_MAX_VALUE_DC) 
1601:..\src/interruptions.c ****                     pwm_input = -PWM_MAX_VALUE_DC;
1602:..\src/interruptions.c ****             }
1603:..\src/interruptions.c **** 
1604:..\src/interruptions.c ****         break;
 5023              		.loc 1 1604 0
 5024 0542 27E0     		b	.L365
 5025              	.L320:
1598:..\src/interruptions.c ****                     pwm_input =  PWM_MAX_VALUE_DC;
 5026              		.loc 1 1598 0
 5027 0544 FB6C     		ldr	r3, [r7, #76]
 5028 0546 642B     		cmp	r3, #100
 5029 0548 01DD     		ble	.L324
1599:..\src/interruptions.c ****                 if(pwm_input < -PWM_MAX_VALUE_DC) 
 5030              		.loc 1 1599 0
 5031 054a 6423     		movs	r3, #100
 5032 054c FB64     		str	r3, [r7, #76]
 5033              	.L324:
1600:..\src/interruptions.c ****                     pwm_input = -PWM_MAX_VALUE_DC;
 5034              		.loc 1 1600 0
 5035 054e FB6C     		ldr	r3, [r7, #76]
 5036 0550 13F1640F 		cmn	r3, #100
 5037 0554 1EDA     		bge	.L365
1601:..\src/interruptions.c ****             }
 5038              		.loc 1 1601 0
 5039 0556 6FF06303 		mvn	r3, #99
 5040 055a FB64     		str	r3, [r7, #76]
 5041              		.loc 1 1604 0
 5042 055c 1AE0     		b	.L365
 5043              	.L364:
1577:..\src/interruptions.c ****         
 5044              		.loc 1 1577 0
 5045 055e 00BF     		nop
 5046 0560 19E0     		b	.L277
 5047              	.L370:
 5048 0562 00BF     		.align	2
 5049              	.L369:
 5050 0564 C8000000 		.word	prev_curr_err.10685
 5051 0568 00000000 		.word	g_ref
 5052 056c 00000000 		.word	g_meas
 5053 0570 AC000000 		.word	pos_error_sum.10682
 5054 0574 18FCFFFF 		.word	-1000
 5055 0578 B4000000 		.word	prev_pos_err.10684
 5056 057c BC000000 		.word	motor_dir.10687
 5057 0580 00000000 		.word	tension_valid
 5058 0584 C0000000 		.word	curr_error_sum.10683
 5059 0588 A0860100 		.word	100000
 5060 058c 6079FEFF 		.word	-100000
 5061 0590 57F4FFFF 		.word	-2985
 5062              	.L365:
 5063              		.loc 1 1604 0
 5064 0594 00BF     		nop
 5065              	.L277:
1605:..\src/interruptions.c ****             
1606:..\src/interruptions.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 120


1607:..\src/interruptions.c **** 
1608:..\src/interruptions.c ****     ////////////////////////////////////////////////////////////////////////////
1609:..\src/interruptions.c ****      ////////////////////////////////////////////////////////////////////////////
1610:..\src/interruptions.c **** 
1611:..\src/interruptions.c ****     // Limit PWM in range (specific per motor driver)
1612:..\src/interruptions.c ****     if (MOT->motor_driver_type == DRIVER_BRUSHLESS) {
 5066              		.loc 1 1612 0
 5067 0596 7B6C     		ldr	r3, [r7, #68]
 5068 0598 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 5069 059c 022B     		cmp	r3, #2
 5070 059e 23D1     		bne	.L325
1613:..\src/interruptions.c ****         if(pwm_input > PWM_MAX_VALUE_ESC) 
 5071              		.loc 1 1613 0
 5072 05a0 FB6C     		ldr	r3, [r7, #76]
 5073 05a2 40F6A932 		movw	r2, #2985
 5074 05a6 9342     		cmp	r3, r2
 5075 05a8 02DD     		ble	.L326
1614:..\src/interruptions.c ****             pwm_input =  PWM_MAX_VALUE_ESC;
 5076              		.loc 1 1614 0
 5077 05aa 40F6A933 		movw	r3, #2985
 5078 05ae FB64     		str	r3, [r7, #76]
 5079              	.L326:
1615:..\src/interruptions.c ****         if(pwm_input < -PWM_MAX_VALUE_ESC) 
 5080              		.loc 1 1615 0
 5081 05b0 FB6C     		ldr	r3, [r7, #76]
 5082 05b2 B34A     		ldr	r2, .L371
 5083 05b4 9342     		cmp	r3, r2
 5084 05b6 01DA     		bge	.L327
1616:..\src/interruptions.c ****             pwm_input = -PWM_MAX_VALUE_ESC;
 5085              		.loc 1 1616 0
 5086 05b8 B14B     		ldr	r3, .L371
 5087 05ba FB64     		str	r3, [r7, #76]
 5088              	.L327:
1617:..\src/interruptions.c ****         
1618:..\src/interruptions.c ****         if (MOT->control_mode != CONTROL_PWM) 
 5089              		.loc 1 1618 0
 5090 05bc 7B6C     		ldr	r3, [r7, #68]
 5091 05be 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 5092 05c2 012B     		cmp	r3, #1
 5093 05c4 31D0     		beq	.L329
1619:..\src/interruptions.c ****             pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE_ESC) * dev_pwm_limit[idx]) >> 10;
 5094              		.loc 1 1619 0
 5095 05c6 FB6C     		ldr	r3, [r7, #76]
 5096 05c8 9B02     		lsls	r3, r3, #10
 5097 05ca AE4A     		ldr	r2, .L371+4
 5098 05cc 82FB0312 		smull	r1, r2, r2, r3
 5099 05d0 9211     		asrs	r2, r2, #6
 5100 05d2 DB17     		asrs	r3, r3, #31
 5101 05d4 D31A     		subs	r3, r2, r3
 5102 05d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5103 05d8 AB49     		ldr	r1, .L371+8
 5104 05da 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 5105 05de 02FB03F3 		mul	r3, r2, r3
 5106 05e2 9B12     		asrs	r3, r3, #10
 5107 05e4 FB64     		str	r3, [r7, #76]
 5108 05e6 20E0     		b	.L329
 5109              	.L325:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 121


1620:..\src/interruptions.c ****     }
1621:..\src/interruptions.c ****     else {
1622:..\src/interruptions.c ****         if(pwm_input > PWM_MAX_VALUE_DC) 
 5110              		.loc 1 1622 0
 5111 05e8 FB6C     		ldr	r3, [r7, #76]
 5112 05ea 642B     		cmp	r3, #100
 5113 05ec 01DD     		ble	.L330
1623:..\src/interruptions.c ****             pwm_input =  PWM_MAX_VALUE_DC;
 5114              		.loc 1 1623 0
 5115 05ee 6423     		movs	r3, #100
 5116 05f0 FB64     		str	r3, [r7, #76]
 5117              	.L330:
1624:..\src/interruptions.c ****         if(pwm_input < -PWM_MAX_VALUE_DC) 
 5118              		.loc 1 1624 0
 5119 05f2 FB6C     		ldr	r3, [r7, #76]
 5120 05f4 13F1640F 		cmn	r3, #100
 5121 05f8 02DA     		bge	.L331
1625:..\src/interruptions.c ****             pwm_input = -PWM_MAX_VALUE_DC;
 5122              		.loc 1 1625 0
 5123 05fa 6FF06303 		mvn	r3, #99
 5124 05fe FB64     		str	r3, [r7, #76]
 5125              	.L331:
1626:..\src/interruptions.c ****         
1627:..\src/interruptions.c ****         if (MOT->control_mode != CONTROL_PWM) 
 5126              		.loc 1 1627 0
 5127 0600 7B6C     		ldr	r3, [r7, #68]
 5128 0602 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 5129 0606 012B     		cmp	r3, #1
 5130 0608 0FD0     		beq	.L329
1628:..\src/interruptions.c ****             pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE_DC) * dev_pwm_limit[idx]) >> 10;
 5131              		.loc 1 1628 0
 5132 060a FB6C     		ldr	r3, [r7, #76]
 5133 060c 9B02     		lsls	r3, r3, #10
 5134 060e 9F4A     		ldr	r2, .L371+12
 5135 0610 82FB0312 		smull	r1, r2, r2, r3
 5136 0614 5211     		asrs	r2, r2, #5
 5137 0616 DB17     		asrs	r3, r3, #31
 5138 0618 D31A     		subs	r3, r2, r3
 5139 061a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5140 061c 9A49     		ldr	r1, .L371+8
 5141 061e 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 5142 0622 02FB03F3 		mul	r3, r2, r3
 5143 0626 9B12     		asrs	r3, r3, #10
 5144 0628 FB64     		str	r3, [r7, #76]
 5145              	.L329:
1629:..\src/interruptions.c ****     }
1630:..\src/interruptions.c **** 
1631:..\src/interruptions.c ****     //// RATE LIMITER ////
1632:..\src/interruptions.c ****     if((pwm_input-prev_pwm[idx]) > MOT->pwm_rate_limiter){
 5146              		.loc 1 1632 0
 5147 062a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5148 062c 984A     		ldr	r2, .L371+16
 5149 062e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5150 0632 FA6C     		ldr	r2, [r7, #76]
 5151 0634 D31A     		subs	r3, r2, r3
 5152 0636 7A6C     		ldr	r2, [r7, #68]
 5153 0638 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 122


 5154 063c 9342     		cmp	r3, r2
 5155 063e 09DD     		ble	.L332
1633:..\src/interruptions.c ****         pwm_input =  prev_pwm[idx] + MOT->pwm_rate_limiter;
 5156              		.loc 1 1633 0
 5157 0640 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5158 0642 934A     		ldr	r2, .L371+16
 5159 0644 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5160 0648 7A6C     		ldr	r2, [r7, #68]
 5161 064a 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 5162 064e 1344     		add	r3, r3, r2
 5163 0650 FB64     		str	r3, [r7, #76]
 5164 0652 14E0     		b	.L333
 5165              	.L332:
1634:..\src/interruptions.c ****     }
1635:..\src/interruptions.c ****     else {
1636:..\src/interruptions.c ****         if((pwm_input-prev_pwm[idx]) < -MOT->pwm_rate_limiter)
 5166              		.loc 1 1636 0
 5167 0654 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5168 0656 8E4A     		ldr	r2, .L371+16
 5169 0658 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5170 065c FA6C     		ldr	r2, [r7, #76]
 5171 065e D21A     		subs	r2, r2, r3
 5172 0660 7B6C     		ldr	r3, [r7, #68]
 5173 0662 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 5174 0666 5B42     		negs	r3, r3
 5175 0668 9A42     		cmp	r2, r3
 5176 066a 08DA     		bge	.L333
1637:..\src/interruptions.c ****             pwm_input =  prev_pwm[idx] - MOT->pwm_rate_limiter;
 5177              		.loc 1 1637 0
 5178 066c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5179 066e 884A     		ldr	r2, .L371+16
 5180 0670 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5181 0674 7A6C     		ldr	r2, [r7, #68]
 5182 0676 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 5183 067a 9B1A     		subs	r3, r3, r2
 5184 067c FB64     		str	r3, [r7, #76]
 5185              	.L333:
1638:..\src/interruptions.c ****     }
1639:..\src/interruptions.c ****    
1640:..\src/interruptions.c ****     // Limit PWM in range (specific per motor driver)
1641:..\src/interruptions.c ****     if (MOT->motor_driver_type == DRIVER_BRUSHLESS) {
 5186              		.loc 1 1641 0
 5187 067e 7B6C     		ldr	r3, [r7, #68]
 5188 0680 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 5189 0684 022B     		cmp	r3, #2
 5190 0686 0ED1     		bne	.L334
1642:..\src/interruptions.c ****         if(pwm_input > PWM_MAX_VALUE_ESC) 
 5191              		.loc 1 1642 0
 5192 0688 FB6C     		ldr	r3, [r7, #76]
 5193 068a 40F6A932 		movw	r2, #2985
 5194 068e 9342     		cmp	r3, r2
 5195 0690 02DD     		ble	.L335
1643:..\src/interruptions.c ****             pwm_input =  PWM_MAX_VALUE_ESC;
 5196              		.loc 1 1643 0
 5197 0692 40F6A933 		movw	r3, #2985
 5198 0696 FB64     		str	r3, [r7, #76]
 5199              	.L335:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 123


1644:..\src/interruptions.c ****         if(pwm_input < -PWM_MAX_VALUE_ESC) 
 5200              		.loc 1 1644 0
 5201 0698 FB6C     		ldr	r3, [r7, #76]
 5202 069a 794A     		ldr	r2, .L371
 5203 069c 9342     		cmp	r3, r2
 5204 069e 0EDA     		bge	.L337
1645:..\src/interruptions.c ****             pwm_input = -PWM_MAX_VALUE_ESC;
 5205              		.loc 1 1645 0
 5206 06a0 774B     		ldr	r3, .L371
 5207 06a2 FB64     		str	r3, [r7, #76]
 5208 06a4 0BE0     		b	.L337
 5209              	.L334:
1646:..\src/interruptions.c ****     }
1647:..\src/interruptions.c ****     else {
1648:..\src/interruptions.c ****         if(pwm_input > PWM_MAX_VALUE_DC) 
 5210              		.loc 1 1648 0
 5211 06a6 FB6C     		ldr	r3, [r7, #76]
 5212 06a8 642B     		cmp	r3, #100
 5213 06aa 01DD     		ble	.L338
1649:..\src/interruptions.c ****             pwm_input =  PWM_MAX_VALUE_DC;
 5214              		.loc 1 1649 0
 5215 06ac 6423     		movs	r3, #100
 5216 06ae FB64     		str	r3, [r7, #76]
 5217              	.L338:
1650:..\src/interruptions.c ****         if(pwm_input < -PWM_MAX_VALUE_DC) 
 5218              		.loc 1 1650 0
 5219 06b0 FB6C     		ldr	r3, [r7, #76]
 5220 06b2 13F1640F 		cmn	r3, #100
 5221 06b6 02DA     		bge	.L337
1651:..\src/interruptions.c ****             pwm_input = -PWM_MAX_VALUE_DC;
 5222              		.loc 1 1651 0
 5223 06b8 6FF06303 		mvn	r3, #99
 5224 06bc FB64     		str	r3, [r7, #76]
 5225              	.L337:
1652:..\src/interruptions.c ****     }
1653:..\src/interruptions.c **** 
1654:..\src/interruptions.c ****     prev_pwm[idx] = pwm_input;
 5226              		.loc 1 1654 0
 5227 06be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5228 06c0 7349     		ldr	r1, .L371+16
 5229 06c2 FA6C     		ldr	r2, [r7, #76]
 5230 06c4 41F82320 		str	r2, [r1, r3, lsl #2]
1655:..\src/interruptions.c ****            
1656:..\src/interruptions.c ****     pwm_sign[idx] = SIGN(pwm_input);   
 5231              		.loc 1 1656 0
 5232 06c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5233 06ca FA6C     		ldr	r2, [r7, #76]
 5234 06cc 002A     		cmp	r2, #0
 5235 06ce 01DB     		blt	.L339
 5236              		.loc 1 1656 0 is_stmt 0 discriminator 1
 5237 06d0 0121     		movs	r1, #1
 5238 06d2 01E0     		b	.L340
 5239              	.L339:
 5240              		.loc 1 1656 0 discriminator 2
 5241 06d4 4FF0FF31 		mov	r1, #-1
 5242              	.L340:
 5243              		.loc 1 1656 0 discriminator 4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 124


 5244 06d8 6E4A     		ldr	r2, .L371+20
 5245 06da D154     		strb	r1, [r2, r3]
1657:..\src/interruptions.c ****     
1658:..\src/interruptions.c ****     if (MOT->not_revers_motor_flag == TRUE) {
 5246              		.loc 1 1658 0 is_stmt 1 discriminator 4
 5247 06dc 7B6C     		ldr	r3, [r7, #68]
 5248 06de 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 5249 06e2 012B     		cmp	r3, #1
 5250 06e4 40F0AA80 		bne	.L341
1659:..\src/interruptions.c ****         // Block motor with pwm = 0 to exploit not reversible motor behaviour 
1660:..\src/interruptions.c ****     	if ( MOT->control_mode != CONTROL_PWM && ((g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) <
 5251              		.loc 1 1660 0
 5252 06e8 7B6C     		ldr	r3, [r7, #68]
 5253 06ea 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 5254 06ee 012B     		cmp	r3, #1
 5255 06f0 00F09F80 		beq	.L342
 5256              		.loc 1 1660 0 is_stmt 0 discriminator 1
 5257 06f4 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5258 06f8 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5259 06fa 6748     		ldr	r0, .L371+24
 5260 06fc 1346     		mov	r3, r2
 5261 06fe 5B00     		lsls	r3, r3, #1
 5262 0700 1344     		add	r3, r3, r2
 5263 0702 9B00     		lsls	r3, r3, #2
 5264 0704 1344     		add	r3, r3, r2
 5265 0706 0B44     		add	r3, r3, r1
 5266 0708 50F82310 		ldr	r1, [r0, r3, lsl #2]
 5267 070c 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5268 0710 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 5269 0712 624C     		ldr	r4, .L371+28
 5270 0714 1346     		mov	r3, r2
 5271 0716 5B00     		lsls	r3, r3, #1
 5272 0718 1344     		add	r3, r3, r2
 5273 071a 9B00     		lsls	r3, r3, #2
 5274 071c 1344     		add	r3, r3, r2
 5275 071e 0344     		add	r3, r3, r0
 5276 0720 54F82330 		ldr	r3, [r4, r3, lsl #2]
 5277 0724 CB1A     		subs	r3, r1, r3
 5278 0726 312B     		cmp	r3, #49
 5279 0728 00F38380 		bgt	.L342
1661:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 5280              		.loc 1 1661 0 is_stmt 1 discriminator 2
 5281 072c 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5282 0730 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5283 0732 5948     		ldr	r0, .L371+24
 5284 0734 1346     		mov	r3, r2
 5285 0736 5B00     		lsls	r3, r3, #1
 5286 0738 1344     		add	r3, r3, r2
 5287 073a 9B00     		lsls	r3, r3, #2
 5288 073c 1344     		add	r3, r3, r2
 5289 073e 0B44     		add	r3, r3, r1
 5290 0740 50F82310 		ldr	r1, [r0, r3, lsl #2]
 5291 0744 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5292 0748 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 5293 074a 544C     		ldr	r4, .L371+28
 5294 074c 1346     		mov	r3, r2
 5295 074e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 125


 5296 0750 1344     		add	r3, r3, r2
 5297 0752 9B00     		lsls	r3, r3, #2
 5298 0754 1344     		add	r3, r3, r2
 5299 0756 0344     		add	r3, r3, r0
 5300 0758 54F82330 		ldr	r3, [r4, r3, lsl #2]
 5301 075c CB1A     		subs	r3, r1, r3
1660:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 5302              		.loc 1 1660 0 discriminator 2
 5303 075e 13F1310F 		cmn	r3, #49
 5304 0762 66DB     		blt	.L342
1662:..\src/interruptions.c ****             ((g_refOld[idx].pos - g_ref[idx].pos) < 100 && (g_refOld[idx].pos - g_ref[idx].pos) > -
 5305              		.loc 1 1662 0
 5306 0764 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5307 0766 4E4A     		ldr	r2, .L371+32
 5308 0768 1B01     		lsls	r3, r3, #4
 5309 076a 1344     		add	r3, r3, r2
 5310 076c 1A68     		ldr	r2, [r3]
 5311 076e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5312 0770 4C49     		ldr	r1, .L371+36
 5313 0772 1B01     		lsls	r3, r3, #4
 5314 0774 0B44     		add	r3, r3, r1
 5315 0776 1B68     		ldr	r3, [r3]
 5316 0778 D31A     		subs	r3, r2, r3
1661:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 5317              		.loc 1 1661 0
 5318 077a 632B     		cmp	r3, #99
 5319 077c 59DC     		bgt	.L342
 5320              		.loc 1 1662 0
 5321 077e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5322 0780 474A     		ldr	r2, .L371+32
 5323 0782 1B01     		lsls	r3, r3, #4
 5324 0784 1344     		add	r3, r3, r2
 5325 0786 1A68     		ldr	r2, [r3]
 5326 0788 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5327 078a 4649     		ldr	r1, .L371+36
 5328 078c 1B01     		lsls	r3, r3, #4
 5329 078e 0B44     		add	r3, r3, r1
 5330 0790 1B68     		ldr	r3, [r3]
 5331 0792 D31A     		subs	r3, r2, r3
 5332 0794 13F1630F 		cmn	r3, #99
 5333 0798 4BDB     		blt	.L342
1663:..\src/interruptions.c ****             position_counter[idx]++;
 5334              		.loc 1 1663 0
 5335 079a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5336 079c 424A     		ldr	r2, .L371+40
 5337 079e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5338 07a2 0132     		adds	r2, r2, #1
 5339 07a4 4049     		ldr	r1, .L371+40
 5340 07a6 41F82320 		str	r2, [r1, r3, lsl #2]
1664:..\src/interruptions.c ****             
1665:..\src/interruptions.c ****             if (position_counter[idx] >= 250) { 
 5341              		.loc 1 1665 0
 5342 07aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5343 07ac 3E4A     		ldr	r2, .L371+40
 5344 07ae 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5345 07b2 F92B     		cmp	r3, #249
 5346 07b4 42D9     		bls	.L341
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 126


1666:..\src/interruptions.c ****                 if (MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 5347              		.loc 1 1666 0
 5348 07b6 7B6C     		ldr	r3, [r7, #68]
 5349 07b8 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 5350 07bc 002B     		cmp	r3, #0
 5351 07be 10D1     		bne	.L344
 5352              		.loc 1 1666 0 is_stmt 0 discriminator 1
 5353 07c0 3A4B     		ldr	r3, .L371+44
 5354 07c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5355 07c4 002B     		cmp	r3, #0
 5356 07c6 0CD1     		bne	.L344
1667:..\src/interruptions.c ****                     g_refNew[idx].pos = g_meas[ENC_L].pos[0];       // Needed only when USB input m
 5357              		.loc 1 1667 0 is_stmt 1
 5358 07c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5359 07ca 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5360 07ce 3349     		ldr	r1, .L371+28
 5361 07d0 3420     		movs	r0, #52
 5362 07d2 00FB02F2 		mul	r2, r0, r2
 5363 07d6 0A44     		add	r2, r2, r1
 5364 07d8 1268     		ldr	r2, [r2]
 5365 07da 3549     		ldr	r1, .L371+48
 5366 07dc 1B01     		lsls	r3, r3, #4
 5367 07de 0B44     		add	r3, r3, r1
 5368 07e0 1A60     		str	r2, [r3]
 5369              	.L344:
1668:..\src/interruptions.c ****                 }
1669:..\src/interruptions.c ****                 g_ref[idx].pos = g_meas[ENC_L].pos[0];
 5370              		.loc 1 1669 0
 5371 07e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5372 07e4 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5373 07e8 2C49     		ldr	r1, .L371+28
 5374 07ea 3420     		movs	r0, #52
 5375 07ec 00FB02F2 		mul	r2, r0, r2
 5376 07f0 0A44     		add	r2, r2, r1
 5377 07f2 1268     		ldr	r2, [r2]
 5378 07f4 2B49     		ldr	r1, .L371+36
 5379 07f6 1B01     		lsls	r3, r3, #4
 5380 07f8 0B44     		add	r3, r3, r1
 5381 07fa 1A60     		str	r2, [r3]
1670:..\src/interruptions.c ****                 
1671:..\src/interruptions.c ****                 if (position_counter[idx] == 250){
 5382              		.loc 1 1671 0
 5383 07fc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5384 07fe 2A4A     		ldr	r2, .L371+40
 5385 0800 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5386 0804 FA2B     		cmp	r3, #250
 5387 0806 11D1     		bne	.L345
1672:..\src/interruptions.c ****                     // To do only once
1673:..\src/interruptions.c ****                     g_meas[ENC_L].hold_curr = g_meas[ENC_L].curr;
 5388              		.loc 1 1673 0
 5389 0808 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 5390 080c 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5391 0810 2249     		ldr	r1, .L371+28
 5392 0812 3420     		movs	r0, #52
 5393 0814 00FB02F2 		mul	r2, r0, r2
 5394 0818 0A44     		add	r2, r2, r1
 5395 081a 0C32     		adds	r2, r2, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 127


 5396 081c 1268     		ldr	r2, [r2]
 5397 081e 1F49     		ldr	r1, .L371+28
 5398 0820 3420     		movs	r0, #52
 5399 0822 00FB03F3 		mul	r3, r0, r3
 5400 0826 0B44     		add	r3, r3, r1
 5401 0828 1433     		adds	r3, r3, #20
 5402 082a 1A60     		str	r2, [r3]
 5403              	.L345:
1674:..\src/interruptions.c ****                 }
1675:..\src/interruptions.c ****                 pwm_input = 0;            
 5404              		.loc 1 1675 0
 5405 082c 0023     		movs	r3, #0
 5406 082e FB64     		str	r3, [r7, #76]
1665:..\src/interruptions.c ****                 if (MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 5407              		.loc 1 1665 0
 5408 0830 04E0     		b	.L341
 5409              	.L342:
1676:..\src/interruptions.c ****             }
1677:..\src/interruptions.c ****         }
1678:..\src/interruptions.c ****         else {
1679:..\src/interruptions.c ****             position_counter[idx] = 0;
 5410              		.loc 1 1679 0
 5411 0832 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5412 0834 1C4A     		ldr	r2, .L371+40
 5413 0836 0021     		movs	r1, #0
 5414 0838 42F82310 		str	r1, [r2, r3, lsl #2]
 5415              	.L341:
1680:..\src/interruptions.c ****         }
1681:..\src/interruptions.c ****     }
1682:..\src/interruptions.c ****     
1683:..\src/interruptions.c ****     
1684:..\src/interruptions.c ****     // Always limit PWM if using Brushless motors and ESC module
1685:..\src/interruptions.c ****     if (MOT->motor_driver_type == DRIVER_BRUSHLESS) {           
 5416              		.loc 1 1685 0
 5417 083c 7B6C     		ldr	r3, [r7, #68]
 5418 083e 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 5419 0842 022B     		cmp	r3, #2
 5420 0844 3BD1     		bne	.L346
1686:..\src/interruptions.c ****         // Allowed in range [-2700,-200] and [200,2700] where 200 -> 0 rpm, 2700 -> MAX no load spe
1687:..\src/interruptions.c ****         if (abs(pwm_input) > 2700){
 5421              		.loc 1 1687 0
 5422 0846 FB6C     		ldr	r3, [r7, #76]
 5423 0848 002B     		cmp	r3, #0
 5424 084a B8BF     		it	lt
 5425 084c 5B42     		rsblt	r3, r3, #0
 5426 084e 40F68C22 		movw	r2, #2700
 5427 0852 9342     		cmp	r3, r2
 5428 0854 07DD     		ble	.L347
1688:..\src/interruptions.c ****             pwm_input = SIGN(pwm_input) * 2700;
 5429              		.loc 1 1688 0
 5430 0856 FB6C     		ldr	r3, [r7, #76]
 5431 0858 002B     		cmp	r3, #0
 5432 085a 02DB     		blt	.L348
 5433              		.loc 1 1688 0 is_stmt 0 discriminator 1
 5434 085c 40F68C23 		movw	r3, #2700
 5435 0860 00E0     		b	.L349
 5436              	.L348:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 128


 5437              		.loc 1 1688 0 discriminator 2
 5438 0862 144B     		ldr	r3, .L371+52
 5439              	.L349:
 5440              		.loc 1 1688 0 discriminator 4
 5441 0864 FB64     		str	r3, [r7, #76]
 5442              	.L347:
1689:..\src/interruptions.c ****         }
1690:..\src/interruptions.c ****         
1691:..\src/interruptions.c ****         if (abs(pwm_input) < 200){
 5443              		.loc 1 1691 0 is_stmt 1
 5444 0866 FB6C     		ldr	r3, [r7, #76]
 5445 0868 13F1C70F 		cmn	r3, #199
 5446 086c 27DB     		blt	.L346
 5447              		.loc 1 1691 0 is_stmt 0 discriminator 1
 5448 086e FB6C     		ldr	r3, [r7, #76]
 5449 0870 C72B     		cmp	r3, #199
 5450 0872 24DC     		bgt	.L346
1692:..\src/interruptions.c ****             pwm_input = SIGN(pwm_input) * 200;
 5451              		.loc 1 1692 0 is_stmt 1
 5452 0874 FB6C     		ldr	r3, [r7, #76]
 5453 0876 002B     		cmp	r3, #0
 5454 0878 1EDB     		blt	.L350
 5455              		.loc 1 1692 0 is_stmt 0 discriminator 1
 5456 087a C823     		movs	r3, #200
 5457 087c 1EE0     		b	.L351
 5458              	.L372:
 5459 087e 00BF     		.align	2
 5460              	.L371:
 5461 0880 57F4FFFF 		.word	-2985
 5462 0884 81207D05 		.word	92086401
 5463 0888 00000000 		.word	dev_pwm_limit
 5464 088c 1F85EB51 		.word	1374389535
 5465 0890 D0000000 		.word	prev_pwm.10686
 5466 0894 00000000 		.word	pwm_sign
 5467 0898 00000000 		.word	g_measOld
 5468 089c 00000000 		.word	g_meas
 5469 08a0 00000000 		.word	g_refOld
 5470 08a4 00000000 		.word	g_ref
 5471 08a8 D8000000 		.word	position_counter.10688
 5472 08ac 00000000 		.word	change_ext_ref_flag
 5473 08b0 00000000 		.word	g_refNew
 5474 08b4 74F5FFFF 		.word	-2700
 5475              	.L350:
 5476              		.loc 1 1692 0 discriminator 2
 5477 08b8 6FF0C703 		mvn	r3, #199
 5478              	.L351:
 5479              		.loc 1 1692 0 discriminator 4
 5480 08bc FB64     		str	r3, [r7, #76]
 5481              	.L346:
1693:..\src/interruptions.c ****         }
1694:..\src/interruptions.c ****        
1695:..\src/interruptions.c ****     }
1696:..\src/interruptions.c ****     
1697:..\src/interruptions.c ****     // Set motor direction and write pwm value
1698:..\src/interruptions.c ****     switch (idx) {
 5482              		.loc 1 1698 0 is_stmt 1
 5483 08be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 129


 5484 08c0 002B     		cmp	r3, #0
 5485 08c2 02D0     		beq	.L353
 5486 08c4 012B     		cmp	r3, #1
 5487 08c6 26D0     		beq	.L354
1699:..\src/interruptions.c ****         case 0:         // Motor 1
1700:..\src/interruptions.c ****             if (motor_dir[idx])
1701:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x01);
1702:..\src/interruptions.c ****             else
1703:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x00);
1704:..\src/interruptions.c ****             
1705:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_VNH5019) {
1706:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(PWM_MAX_VALUE_DC - abs(pwm_input));
1707:..\src/interruptions.c ****             }
1708:..\src/interruptions.c ****             else {  // DRIVER_MC33887 standard or DRIVER_BRUSHLESS
1709:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(abs(pwm_input));    
1710:..\src/interruptions.c ****             }
1711:..\src/interruptions.c ****             
1712:..\src/interruptions.c ****             break;
1713:..\src/interruptions.c ****         case 1:         // Motor 2
1714:..\src/interruptions.c ****             
1715:..\src/interruptions.c ****             if (motor_dir[idx])
1716:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x01);
1717:..\src/interruptions.c ****             else
1718:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x00);
1719:..\src/interruptions.c ****             
1720:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_VNH5019) {
1721:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(PWM_MAX_VALUE_DC - abs(pwm_input));
1722:..\src/interruptions.c ****             }
1723:..\src/interruptions.c ****             else {  // DRIVER_MC33887 standard or DRIVER_BRUSHLESS
1724:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(abs(pwm_input));    
1725:..\src/interruptions.c ****             }
1726:..\src/interruptions.c ****             
1727:..\src/interruptions.c ****             break;
1728:..\src/interruptions.c ****         default:
1729:..\src/interruptions.c ****             break;
 5488              		.loc 1 1729 0
 5489 08c8 4BE0     		b	.L359
 5490              	.L353:
1700:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x01);
 5491              		.loc 1 1700 0
 5492 08ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5493 08cc 274A     		ldr	r2, .L373
 5494 08ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5495 08d0 002B     		cmp	r3, #0
 5496 08d2 03D0     		beq	.L355
1701:..\src/interruptions.c ****             else
 5497              		.loc 1 1701 0
 5498 08d4 0120     		movs	r0, #1
 5499 08d6 FFF7FEFF 		bl	MOTOR_DIR_1_Write
 5500 08da 02E0     		b	.L356
 5501              	.L355:
1703:..\src/interruptions.c ****             
 5502              		.loc 1 1703 0
 5503 08dc 0020     		movs	r0, #0
 5504 08de FFF7FEFF 		bl	MOTOR_DIR_1_Write
 5505              	.L356:
1705:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(PWM_MAX_VALUE_DC - abs(pwm_input));
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 130


 5506              		.loc 1 1705 0
 5507 08e2 7B6C     		ldr	r3, [r7, #68]
 5508 08e4 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 5509 08e8 012B     		cmp	r3, #1
 5510 08ea 0BD1     		bne	.L357
1706:..\src/interruptions.c ****             }
 5511              		.loc 1 1706 0
 5512 08ec FB6C     		ldr	r3, [r7, #76]
 5513 08ee 002B     		cmp	r3, #0
 5514 08f0 B8BF     		it	lt
 5515 08f2 5B42     		rsblt	r3, r3, #0
 5516 08f4 9BB2     		uxth	r3, r3
 5517 08f6 C3F16403 		rsb	r3, r3, #100
 5518 08fa 9BB2     		uxth	r3, r3
 5519 08fc 1846     		mov	r0, r3
 5520 08fe FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1712:..\src/interruptions.c ****         case 1:         // Motor 2
 5521              		.loc 1 1712 0
 5522 0902 2EE0     		b	.L359
 5523              	.L357:
1709:..\src/interruptions.c ****             }
 5524              		.loc 1 1709 0
 5525 0904 FB6C     		ldr	r3, [r7, #76]
 5526 0906 002B     		cmp	r3, #0
 5527 0908 B8BF     		it	lt
 5528 090a 5B42     		rsblt	r3, r3, #0
 5529 090c 9BB2     		uxth	r3, r3
 5530 090e 1846     		mov	r0, r3
 5531 0910 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1712:..\src/interruptions.c ****         case 1:         // Motor 2
 5532              		.loc 1 1712 0
 5533 0914 25E0     		b	.L359
 5534              	.L354:
1715:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x01);
 5535              		.loc 1 1715 0
 5536 0916 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5537 0918 144A     		ldr	r2, .L373
 5538 091a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5539 091c 002B     		cmp	r3, #0
 5540 091e 03D0     		beq	.L360
1716:..\src/interruptions.c ****             else
 5541              		.loc 1 1716 0
 5542 0920 0120     		movs	r0, #1
 5543 0922 FFF7FEFF 		bl	MOTOR_DIR_2_Write
 5544 0926 02E0     		b	.L361
 5545              	.L360:
1718:..\src/interruptions.c ****             
 5546              		.loc 1 1718 0
 5547 0928 0020     		movs	r0, #0
 5548 092a FFF7FEFF 		bl	MOTOR_DIR_2_Write
 5549              	.L361:
1720:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(PWM_MAX_VALUE_DC - abs(pwm_input));
 5550              		.loc 1 1720 0
 5551 092e 7B6C     		ldr	r3, [r7, #68]
 5552 0930 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 5553 0934 012B     		cmp	r3, #1
 5554 0936 0BD1     		bne	.L362
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 131


1721:..\src/interruptions.c ****             }
 5555              		.loc 1 1721 0
 5556 0938 FB6C     		ldr	r3, [r7, #76]
 5557 093a 002B     		cmp	r3, #0
 5558 093c B8BF     		it	lt
 5559 093e 5B42     		rsblt	r3, r3, #0
 5560 0940 9BB2     		uxth	r3, r3
 5561 0942 C3F16403 		rsb	r3, r3, #100
 5562 0946 9BB2     		uxth	r3, r3
 5563 0948 1846     		mov	r0, r3
 5564 094a FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
1727:..\src/interruptions.c ****         default:
 5565              		.loc 1 1727 0
 5566 094e 07E0     		b	.L366
 5567              	.L362:
1724:..\src/interruptions.c ****             }
 5568              		.loc 1 1724 0
 5569 0950 FB6C     		ldr	r3, [r7, #76]
 5570 0952 002B     		cmp	r3, #0
 5571 0954 B8BF     		it	lt
 5572 0956 5B42     		rsblt	r3, r3, #0
 5573 0958 9BB2     		uxth	r3, r3
 5574 095a 1846     		mov	r0, r3
 5575 095c FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
 5576              	.L366:
1727:..\src/interruptions.c ****         default:
 5577              		.loc 1 1727 0
 5578 0960 00BF     		nop
 5579              	.L359:
1730:..\src/interruptions.c ****     }
1731:..\src/interruptions.c ****     
1732:..\src/interruptions.c **** }
 5580              		.loc 1 1732 0
 5581 0962 00BF     		nop
 5582 0964 5437     		adds	r7, r7, #84
 5583              		.cfi_def_cfa_offset 12
 5584 0966 BD46     		mov	sp, r7
 5585              		.cfi_def_cfa_register 13
 5586              		@ sp needed
 5587 0968 90BD     		pop	{r4, r7, pc}
 5588              	.L374:
 5589 096a 00BF     		.align	2
 5590              	.L373:
 5591 096c BC000000 		.word	motor_dir.10687
 5592              		.cfi_endproc
 5593              	.LFE72:
 5594              		.size	motor_control_generic, .-motor_control_generic
 5595              		.global	__aeabi_fcmpeq
 5596              		.global	__aeabi_fmul
 5597              		.global	__aeabi_f2iz
 5598              		.global	__aeabi_fcmplt
 5599              		.section	.text.encoder_reading_SPI,"ax",%progbits
 5600              		.align	2
 5601              		.global	encoder_reading_SPI
 5602              		.thumb
 5603              		.thumb_func
 5604              		.type	encoder_reading_SPI, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 132


 5605              	encoder_reading_SPI:
 5606              	.LFB73:
1733:..\src/interruptions.c **** 
1734:..\src/interruptions.c **** //==============================================================================
1735:..\src/interruptions.c **** //                                                           ENCODER READING SPI
1736:..\src/interruptions.c **** //==============================================================================
1737:..\src/interruptions.c **** 
1738:..\src/interruptions.c **** void encoder_reading_SPI(uint8 n_line, uint8 assoc_motor) {
 5607              		.loc 1 1738 0
 5608              		.cfi_startproc
 5609              		@ args = 0, pretend = 0, frame = 48
 5610              		@ frame_needed = 1, uses_anonymous_args = 0
 5611 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5612              		.cfi_def_cfa_offset 20
 5613              		.cfi_offset 4, -20
 5614              		.cfi_offset 5, -16
 5615              		.cfi_offset 6, -12
 5616              		.cfi_offset 7, -8
 5617              		.cfi_offset 14, -4
 5618 0002 8FB0     		sub	sp, sp, #60
 5619              		.cfi_def_cfa_offset 80
 5620 0004 02AF     		add	r7, sp, #8
 5621              		.cfi_def_cfa 7, 72
 5622 0006 0346     		mov	r3, r0
 5623 0008 0A46     		mov	r2, r1
 5624 000a FB71     		strb	r3, [r7, #7]
 5625 000c 1346     		mov	r3, r2
 5626 000e BB71     		strb	r3, [r7, #6]
1739:..\src/interruptions.c **** 
1740:..\src/interruptions.c ****     uint8 CYDATA index = 0;
 5627              		.loc 1 1740 0
 5628 0010 0023     		movs	r3, #0
 5629 0012 87F82F30 		strb	r3, [r7, #47]
1741:..\src/interruptions.c ****     
1742:..\src/interruptions.c ****     // Encoder Variables  
1743:..\src/interruptions.c ****     uint8 jj;
1744:..\src/interruptions.c ****      
1745:..\src/interruptions.c ****     uint32 aux_encoder[NUM_OF_SENSORS];
1746:..\src/interruptions.c ****     int16 tmp_value_encoder;
1747:..\src/interruptions.c ****     int32 tmp_value_encoder_32;
1748:..\src/interruptions.c ****     int32 value_encoder;
1749:..\src/interruptions.c ****     int32 speed_encoder;
1750:..\src/interruptions.c ****     int32 value_diff;
1751:..\src/interruptions.c **** 	int8 init_rot = 0;
 5630              		.loc 1 1751 0
 5631 0016 0023     		movs	r3, #0
 5632 0018 87F82730 		strb	r3, [r7, #39]
1752:..\src/interruptions.c **** 
1753:..\src/interruptions.c ****     static int32 last_value_encoder[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1754:..\src/interruptions.c ****     static int32 comp_value_encoder[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1755:..\src/interruptions.c ****     static uint8 error[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1756:..\src/interruptions.c ****     
1757:..\src/interruptions.c ****     static CYBIT only_first_time[N_ENCODER_LINE_MAX] = {TRUE, TRUE};
1758:..\src/interruptions.c ****     static CYBIT safe_startup_motor_activation[N_ENCODER_LINE_MAX] = {FALSE, FALSE};
1759:..\src/interruptions.c ****     static uint8 one_time_execute[N_ENCODER_LINE_MAX] = {0, 0};
1760:..\src/interruptions.c ****     static uint32 count_startup_motor[N_ENCODER_LINE_MAX] = {0, 0};
1761:..\src/interruptions.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 133


1762:..\src/interruptions.c ****     static int32 v_value[N_ENCODER_LINE_MAX][N_ENCODERS];   //last value for velocity
1763:..\src/interruptions.c ****     static int32 vv_value[N_ENCODER_LINE_MAX][N_ENCODERS];  //last last value for velocity
1764:..\src/interruptions.c ****     static int32 vvv_value[N_ENCODER_LINE_MAX][N_ENCODERS];  //last last last value for velocity
1765:..\src/interruptions.c ****     
1766:..\src/interruptions.c ****     if (reset_last_value_flag[n_line]) {
 5633              		.loc 1 1766 0
 5634 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5635 001e 924A     		ldr	r2, .L412
 5636 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5637 0022 002B     		cmp	r3, #0
 5638 0024 19D0     		beq	.L376
1767:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 5639              		.loc 1 1767 0
 5640 0026 0323     		movs	r3, #3
 5641 0028 87F82E30 		strb	r3, [r7, #46]
 5642 002c 0AE0     		b	.L377
 5643              	.L378:
1768:..\src/interruptions.c ****             last_value_encoder[n_line][jj] = 0;
 5644              		.loc 1 1768 0
 5645 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5646 0030 97F82E10 		ldrb	r1, [r7, #46]	@ zero_extendqisi2
 5647 0034 8D48     		ldr	r0, .L412+4
 5648 0036 1346     		mov	r3, r2
 5649 0038 5B00     		lsls	r3, r3, #1
 5650 003a 1344     		add	r3, r3, r2
 5651 003c 0B44     		add	r3, r3, r1
 5652 003e 0022     		movs	r2, #0
 5653 0040 40F82320 		str	r2, [r0, r3, lsl #2]
 5654              	.L377:
1767:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 5655              		.loc 1 1767 0 discriminator 1
 5656 0044 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 5657 0048 5A1E     		subs	r2, r3, #1
 5658 004a 87F82E20 		strb	r2, [r7, #46]
 5659 004e 002B     		cmp	r3, #0
 5660 0050 EDD1     		bne	.L378
1769:..\src/interruptions.c ****         
1770:..\src/interruptions.c ****         reset_last_value_flag[n_line] = 0;
 5661              		.loc 1 1770 0
 5662 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5663 0054 844A     		ldr	r2, .L412
 5664 0056 0021     		movs	r1, #0
 5665 0058 D154     		strb	r1, [r2, r3]
 5666              	.L376:
1771:..\src/interruptions.c ****     }
1772:..\src/interruptions.c **** 
1773:..\src/interruptions.c ****     //======================================================     reading sensors
1774:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 5667              		.loc 1 1774 0
 5668 005a 0023     		movs	r3, #0
 5669 005c 87F82F30 		strb	r3, [r7, #47]
 5670 0060 0DE0     		b	.L379
 5671              	.L380:
1775:..\src/interruptions.c ****         aux_encoder[index] = 0;
 5672              		.loc 1 1775 0 discriminator 3
 5673 0062 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5674 0066 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 134


 5675 0068 07F13002 		add	r2, r7, #48
 5676 006c 1344     		add	r3, r3, r2
 5677 006e 0022     		movs	r2, #0
 5678 0070 43F8282C 		str	r2, [r3, #-40]
1774:..\src/interruptions.c ****         aux_encoder[index] = 0;
 5679              		.loc 1 1774 0 discriminator 3
 5680 0074 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5681 0078 0133     		adds	r3, r3, #1
 5682 007a 87F82F30 		strb	r3, [r7, #47]
 5683              	.L379:
1774:..\src/interruptions.c ****         aux_encoder[index] = 0;
 5684              		.loc 1 1774 0 is_stmt 0 discriminator 1
 5685 007e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5686 0082 022B     		cmp	r3, #2
 5687 0084 EDD9     		bls	.L380
1776:..\src/interruptions.c ****     }   
1777:..\src/interruptions.c ****     
1778:..\src/interruptions.c ****     ReadEncoderLine(N_Encoder_Line_Connected[n_line] , n_line);         //CS0 for right hand
 5688              		.loc 1 1778 0 is_stmt 1
 5689 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5690 0088 794A     		ldr	r2, .L412+8
 5691 008a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5692 008c 1A46     		mov	r2, r3
 5693 008e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5694 0090 1946     		mov	r1, r3
 5695 0092 1046     		mov	r0, r2
 5696 0094 FFF7FEFF 		bl	ReadEncoderLine
 5697              	.LBB10:
1779:..\src/interruptions.c ****                                                                         //CS1 for left hand
1780:..\src/interruptions.c ****     for (int j = 0; j < N_ENCODERS; j++) {    
 5698              		.loc 1 1780 0
 5699 0098 0023     		movs	r3, #0
 5700 009a 3B62     		str	r3, [r7, #32]
 5701 009c 2EE0     		b	.L381
 5702              	.L383:
1781:..\src/interruptions.c ****         
1782:..\src/interruptions.c ****         // As default, index=0 reads SoftHand Pro encoder positioned on screw, while index=1 reads 
1783:..\src/interruptions.c ****         index = c_mem.enc[n_line].Enc_idx_use_for_control[j];       // take encoder idx used for mo
 5703              		.loc 1 1783 0
 5704 009e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5705 00a0 7449     		ldr	r1, .L412+12
 5706 00a2 1346     		mov	r3, r2
 5707 00a4 5B00     		lsls	r3, r3, #1
 5708 00a6 1344     		add	r3, r3, r2
 5709 00a8 1B01     		lsls	r3, r3, #4
 5710 00aa CA18     		adds	r2, r1, r3
 5711 00ac 3B6A     		ldr	r3, [r7, #32]
 5712 00ae 1344     		add	r3, r3, r2
 5713 00b0 03F2B113 		addw	r3, r3, #433
 5714 00b4 1B78     		ldrb	r3, [r3]
 5715 00b6 87F82F30 		strb	r3, [r7, #47]
1784:..\src/interruptions.c ****         
1785:..\src/interruptions.c ****         if (Encoder_Check[n_line][index] > 15){  // check on encoder data
 5716              		.loc 1 1785 0
 5717 00ba FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5718 00bc 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5719 00c0 6D48     		ldr	r0, .L412+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 135


 5720 00c2 1346     		mov	r3, r2
 5721 00c4 9B00     		lsls	r3, r3, #2
 5722 00c6 1344     		add	r3, r3, r2
 5723 00c8 0344     		add	r3, r3, r0
 5724 00ca 0B44     		add	r3, r3, r1
 5725 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5726 00ce 0F2B     		cmp	r3, #15
 5727 00d0 11D9     		bls	.L382
1786:..\src/interruptions.c ****             aux_encoder[j] = (uint32)Encoder_Value[n_line][index];     // 00000000000000[20] XXXXXX
 5728              		.loc 1 1786 0
 5729 00d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5730 00d4 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5731 00d8 6848     		ldr	r0, .L412+20
 5732 00da 1346     		mov	r3, r2
 5733 00dc 9B00     		lsls	r3, r3, #2
 5734 00de 1344     		add	r3, r3, r2
 5735 00e0 0B44     		add	r3, r3, r1
 5736 00e2 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 5737 00e6 1A46     		mov	r2, r3
 5738 00e8 3B6A     		ldr	r3, [r7, #32]
 5739 00ea 9B00     		lsls	r3, r3, #2
 5740 00ec 07F13001 		add	r1, r7, #48
 5741 00f0 0B44     		add	r3, r3, r1
 5742 00f2 43F8282C 		str	r2, [r3, #-40]
 5743              	.L382:
1780:..\src/interruptions.c ****         
 5744              		.loc 1 1780 0 discriminator 2
 5745 00f6 3B6A     		ldr	r3, [r7, #32]
 5746 00f8 0133     		adds	r3, r3, #1
 5747 00fa 3B62     		str	r3, [r7, #32]
 5748              	.L381:
1780:..\src/interruptions.c ****         
 5749              		.loc 1 1780 0 is_stmt 0 discriminator 1
 5750 00fc 3B6A     		ldr	r3, [r7, #32]
 5751 00fe 022B     		cmp	r3, #2
 5752 0100 CDDD     		ble	.L383
 5753              	.LBE10:
1787:..\src/interruptions.c ****         }
1788:..\src/interruptions.c ****     }
1789:..\src/interruptions.c ****     
1790:..\src/interruptions.c ****     // S = SIGN BIT
1791:..\src/interruptions.c ****     // X = ENCODER VALUE BIT
1792:..\src/interruptions.c ****     // 0 = 0 BIT
1793:..\src/interruptions.c ****     // C = CONTROL BIT
1794:..\src/interruptions.c ****     
1795:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 5754              		.loc 1 1795 0 is_stmt 1
 5755 0102 0023     		movs	r3, #0
 5756 0104 87F82F30 		strb	r3, [r7, #47]
 5757 0108 35E3     		b	.L384
 5758              	.L405:
1796:..\src/interruptions.c ****         
1797:..\src/interruptions.c ****         data_encoder_raw[n_line][index] = aux_encoder[index];
 5759              		.loc 1 1797 0
 5760 010a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5761 010c 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5762 0110 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 136


 5763 0114 9B00     		lsls	r3, r3, #2
 5764 0116 07F13001 		add	r1, r7, #48
 5765 011a 0B44     		add	r3, r3, r1
 5766 011c 53F8281C 		ldr	r1, [r3, #-40]
 5767 0120 574C     		ldr	r4, .L412+24
 5768 0122 1346     		mov	r3, r2
 5769 0124 9B00     		lsls	r3, r3, #2
 5770 0126 1344     		add	r3, r3, r2
 5771 0128 0344     		add	r3, r3, r0
 5772 012a 44F82310 		str	r1, [r4, r3, lsl #2]
1798:..\src/interruptions.c ****         
1799:..\src/interruptions.c ****         tmp_value_encoder = (int16)(aux_encoder[index] - (uint16)g_mem.enc[n_line].m_off[index]);
 5773              		.loc 1 1799 0
 5774 012e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5775 0132 9B00     		lsls	r3, r3, #2
 5776 0134 07F13002 		add	r2, r7, #48
 5777 0138 1344     		add	r3, r3, r2
 5778 013a 53F8283C 		ldr	r3, [r3, #-40]
 5779 013e 99B2     		uxth	r1, r3
 5780 0140 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5781 0142 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5782 0146 4F4C     		ldr	r4, .L412+28
 5783 0148 1346     		mov	r3, r2
 5784 014a 5B00     		lsls	r3, r3, #1
 5785 014c 1344     		add	r3, r3, r2
 5786 014e 9B00     		lsls	r3, r3, #2
 5787 0150 0344     		add	r3, r3, r0
 5788 0152 6633     		adds	r3, r3, #102
 5789 0154 54F82330 		ldr	r3, [r4, r3, lsl #2]
 5790 0158 9BB2     		uxth	r3, r3
 5791 015a CB1A     		subs	r3, r1, r3
 5792 015c 9BB2     		uxth	r3, r3
 5793 015e BB85     		strh	r3, [r7, #44]	@ movhi
1800:..\src/interruptions.c ****         if (tmp_value_encoder < 0){
 5794              		.loc 1 1800 0
 5795 0160 B7F92C30 		ldrsh	r3, [r7, #44]
 5796 0164 002B     		cmp	r3, #0
 5797 0166 04DA     		bge	.L385
1801:..\src/interruptions.c ****             tmp_value_encoder = tmp_value_encoder + 4096;   //SSSS[4] XXXXXXXXXXXX[12] worst case r
 5798              		.loc 1 1801 0
 5799 0168 BB8D     		ldrh	r3, [r7, #44]
 5800 016a 03F58053 		add	r3, r3, #4096
 5801 016e 9BB2     		uxth	r3, r3
 5802 0170 BB85     		strh	r3, [r7, #44]	@ movhi
 5803              	.L385:
1802:..\src/interruptions.c ****         }       // Range [0, 4096]
1803:..\src/interruptions.c **** 
1804:..\src/interruptions.c ****         if (tmp_value_encoder >= 2048) {
 5804              		.loc 1 1804 0
 5805 0172 B7F92C30 		ldrsh	r3, [r7, #44]
 5806 0176 B3F5006F 		cmp	r3, #2048
 5807 017a 04DB     		blt	.L386
1805:..\src/interruptions.c ****            tmp_value_encoder = tmp_value_encoder - 4096;    //SSSS[4] XXXXXXXXXXXX[12] range [-2048
 5808              		.loc 1 1805 0
 5809 017c BB8D     		ldrh	r3, [r7, #44]
 5810 017e A3F58053 		sub	r3, r3, #4096
 5811 0182 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 137


 5812 0184 BB85     		strh	r3, [r7, #44]	@ movhi
 5813              	.L386:
1806:..\src/interruptions.c ****         }       // Range [-2048, 2047]
1807:..\src/interruptions.c **** 
1808:..\src/interruptions.c ****         tmp_value_encoder_32 = (((int32)(tmp_value_encoder)) << 4);     //SSSSSSSSSSSSSSSS[16] XXXX
 5814              		.loc 1 1808 0
 5815 0186 B7F92C30 		ldrsh	r3, [r7, #44]
 5816 018a 1B01     		lsls	r3, r3, #4
 5817 018c FB61     		str	r3, [r7, #28]
1809:..\src/interruptions.c ****         comp_value_encoder[n_line][index] = tmp_value_encoder_32;
 5818              		.loc 1 1809 0
 5819 018e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5820 0190 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5821 0194 3C48     		ldr	r0, .L412+32
 5822 0196 1346     		mov	r3, r2
 5823 0198 5B00     		lsls	r3, r3, #1
 5824 019a 1344     		add	r3, r3, r2
 5825 019c 0B44     		add	r3, r3, r1
 5826 019e FA69     		ldr	r2, [r7, #28]
 5827 01a0 40F82320 		str	r2, [r0, r3, lsl #2]
1810:..\src/interruptions.c **** 
1811:..\src/interruptions.c ****         // Initialize last_value_encoder
1812:..\src/interruptions.c ****         if (only_first_time[n_line]) {
 5828              		.loc 1 1812 0
 5829 01a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5830 01a6 394A     		ldr	r2, .L412+36
 5831 01a8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5832 01aa 002B     		cmp	r3, #0
 5833 01ac 12D0     		beq	.L387
1813:..\src/interruptions.c ****             last_value_encoder[n_line][index] = tmp_value_encoder_32;
 5834              		.loc 1 1813 0
 5835 01ae FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5836 01b0 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5837 01b4 2D48     		ldr	r0, .L412+4
 5838 01b6 1346     		mov	r3, r2
 5839 01b8 5B00     		lsls	r3, r3, #1
 5840 01ba 1344     		add	r3, r3, r2
 5841 01bc 0B44     		add	r3, r3, r1
 5842 01be FA69     		ldr	r2, [r7, #28]
 5843 01c0 40F82320 		str	r2, [r0, r3, lsl #2]
1814:..\src/interruptions.c ****             if (index == 2)
 5844              		.loc 1 1814 0
 5845 01c4 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5846 01c8 022B     		cmp	r3, #2
 5847 01ca 03D1     		bne	.L387
1815:..\src/interruptions.c ****                 only_first_time[n_line] = 0;
 5848              		.loc 1 1815 0
 5849 01cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5850 01ce 2F4A     		ldr	r2, .L412+36
 5851 01d0 0021     		movs	r1, #0
 5852 01d2 D154     		strb	r1, [r2, r3]
 5853              	.L387:
1816:..\src/interruptions.c ****         }
1817:..\src/interruptions.c **** 
1818:..\src/interruptions.c ****         // Take care of rotations
1819:..\src/interruptions.c ****         value_diff = tmp_value_encoder_32 - last_value_encoder[n_line][index];     // worst case SS
 5854              		.loc 1 1819 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 138


 5855 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5856 01d6 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5857 01da 2448     		ldr	r0, .L412+4
 5858 01dc 1346     		mov	r3, r2
 5859 01de 5B00     		lsls	r3, r3, #1
 5860 01e0 1344     		add	r3, r3, r2
 5861 01e2 0B44     		add	r3, r3, r1
 5862 01e4 50F82330 		ldr	r3, [r0, r3, lsl #2]
 5863 01e8 FA69     		ldr	r2, [r7, #28]
 5864 01ea D31A     		subs	r3, r2, r3
 5865 01ec BB61     		str	r3, [r7, #24]
1820:..\src/interruptions.c **** 
1821:..\src/interruptions.c ****         // ====================== 1 TURN ======================
1822:..\src/interruptions.c ****         // -32768                    0                    32767 -32768                   0         
1823:..\src/interruptions.c ****         // |-------------------------|-------------------------|-------------------------|---------
1824:..\src/interruptions.c ****         //              |                         |      |           |      |                      
1825:..\src/interruptions.c ****         //           -16384                     16383    |           |   -16384                    
1826:..\src/interruptions.c ****         //                                               |           |
1827:..\src/interruptions.c ****         //                                           24575           -24576
1828:..\src/interruptions.c ****         //                                               |___________|
1829:..\src/interruptions.c ****         //                                                   49152
1830:..\src/interruptions.c **** 
1831:..\src/interruptions.c ****         // if we are in the right interval, take care of rotation
1832:..\src/interruptions.c ****         // and update the variable only if the difference between
1833:..\src/interruptions.c ****         // one measure and another is less than 1/4 of turn
1834:..\src/interruptions.c **** 
1835:..\src/interruptions.c ****         // Considering we are sampling at 1kHz, this means that our shaft needs
1836:..\src/interruptions.c ****         // to go slower than 1/4 turn every ms -> 1 turn every 4ms
1837:..\src/interruptions.c ****         // equal to 250 turn/s -> 15000 RPM
1838:..\src/interruptions.c **** 
1839:..\src/interruptions.c ****         if (value_diff > 49152)
 5866              		.loc 1 1839 0
 5867 01ee BB69     		ldr	r3, [r7, #24]
 5868 01f0 B3F5404F 		cmp	r3, #49152
 5869 01f4 19DD     		ble	.L388
1840:..\src/interruptions.c ****             g_meas[n_line].rot[index]--;
 5870              		.loc 1 1840 0
 5871 01f6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5872 01f8 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5873 01fc 2448     		ldr	r0, .L412+40
 5874 01fe 3421     		movs	r1, #52
 5875 0200 01FB02F1 		mul	r1, r1, r2
 5876 0204 0144     		add	r1, r1, r0
 5877 0206 1944     		add	r1, r1, r3
 5878 0208 1831     		adds	r1, r1, #24
 5879 020a 91F90010 		ldrsb	r1, [r1]
 5880 020e C9B2     		uxtb	r1, r1
 5881 0210 0139     		subs	r1, r1, #1
 5882 0212 C9B2     		uxtb	r1, r1
 5883 0214 4CB2     		sxtb	r4, r1
 5884 0216 1E49     		ldr	r1, .L412+40
 5885 0218 3420     		movs	r0, #52
 5886 021a 00FB02F2 		mul	r2, r0, r2
 5887 021e 0A44     		add	r2, r2, r1
 5888 0220 1344     		add	r3, r3, r2
 5889 0222 1833     		adds	r3, r3, #24
 5890 0224 2246     		mov	r2, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 139


 5891 0226 1A70     		strb	r2, [r3]
 5892 0228 5CE0     		b	.L389
 5893              	.L388:
1841:..\src/interruptions.c ****         else{ 
1842:..\src/interruptions.c ****             if (value_diff < -49152)
 5894              		.loc 1 1842 0
 5895 022a BB69     		ldr	r3, [r7, #24]
 5896 022c 13F5404F 		cmn	r3, #49152
 5897 0230 30DA     		bge	.L390
1843:..\src/interruptions.c ****                 g_meas[n_line].rot[index]++;
 5898              		.loc 1 1843 0
 5899 0232 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5900 0234 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5901 0238 1548     		ldr	r0, .L412+40
 5902 023a 3421     		movs	r1, #52
 5903 023c 01FB02F1 		mul	r1, r1, r2
 5904 0240 0144     		add	r1, r1, r0
 5905 0242 1944     		add	r1, r1, r3
 5906 0244 1831     		adds	r1, r1, #24
 5907 0246 91F90010 		ldrsb	r1, [r1]
 5908 024a C9B2     		uxtb	r1, r1
 5909 024c 0131     		adds	r1, r1, #1
 5910 024e C9B2     		uxtb	r1, r1
 5911 0250 4CB2     		sxtb	r4, r1
 5912 0252 0F49     		ldr	r1, .L412+40
 5913 0254 3420     		movs	r0, #52
 5914 0256 00FB02F2 		mul	r2, r0, r2
 5915 025a 0A44     		add	r2, r2, r1
 5916 025c 1344     		add	r3, r3, r2
 5917 025e 1833     		adds	r3, r3, #24
 5918 0260 2246     		mov	r2, r4
 5919 0262 1A70     		strb	r2, [r3]
 5920 0264 3EE0     		b	.L389
 5921              	.L413:
 5922 0266 00BF     		.align	2
 5923              	.L412:
 5924 0268 00000000 		.word	reset_last_value_flag
 5925 026c E0000000 		.word	last_value_encoder.10711
 5926 0270 00000000 		.word	N_Encoder_Line_Connected
 5927 0274 00000000 		.word	c_mem
 5928 0278 00000000 		.word	Encoder_Check
 5929 027c 00000000 		.word	Encoder_Value
 5930 0280 00000000 		.word	data_encoder_raw
 5931 0284 00000000 		.word	g_mem
 5932 0288 F8000000 		.word	comp_value_encoder.10712
 5933 028c 04000000 		.word	only_first_time.10714
 5934 0290 00000000 		.word	g_meas
 5935              	.L390:
1844:..\src/interruptions.c ****             else{
1845:..\src/interruptions.c ****                 if (abs(value_diff) > 16384) { // if two measures are too far
 5936              		.loc 1 1845 0
 5937 0294 BB69     		ldr	r3, [r7, #24]
 5938 0296 002B     		cmp	r3, #0
 5939 0298 B8BF     		it	lt
 5940 029a 5B42     		rsblt	r3, r3, #0
 5941 029c B3F5804F 		cmp	r3, #16384
 5942 02a0 20DD     		ble	.L389
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 140


1846:..\src/interruptions.c ****                     error[n_line][index]++;
 5943              		.loc 1 1846 0
 5944 02a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5945 02a4 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5946 02a8 9B48     		ldr	r0, .L414
 5947 02aa 1346     		mov	r3, r2
 5948 02ac 5B00     		lsls	r3, r3, #1
 5949 02ae 1344     		add	r3, r3, r2
 5950 02b0 0344     		add	r3, r3, r0
 5951 02b2 0B44     		add	r3, r3, r1
 5952 02b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5953 02b6 0133     		adds	r3, r3, #1
 5954 02b8 DCB2     		uxtb	r4, r3
 5955 02ba 9748     		ldr	r0, .L414
 5956 02bc 1346     		mov	r3, r2
 5957 02be 5B00     		lsls	r3, r3, #1
 5958 02c0 1344     		add	r3, r3, r2
 5959 02c2 0344     		add	r3, r3, r0
 5960 02c4 0B44     		add	r3, r3, r1
 5961 02c6 2246     		mov	r2, r4
 5962 02c8 1A70     		strb	r2, [r3]
1847:..\src/interruptions.c ****                                 
1848:..\src/interruptions.c ****                     if (error[n_line][index] < 10)
 5963              		.loc 1 1848 0
 5964 02ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5965 02cc 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5966 02d0 9148     		ldr	r0, .L414
 5967 02d2 1346     		mov	r3, r2
 5968 02d4 5B00     		lsls	r3, r3, #1
 5969 02d6 1344     		add	r3, r3, r2
 5970 02d8 0344     		add	r3, r3, r0
 5971 02da 0B44     		add	r3, r3, r1
 5972 02dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5973 02de 092B     		cmp	r3, #9
 5974 02e0 40F28882 		bls	.L411
 5975              	.L389:
1849:..\src/interruptions.c ****                         // Discard
1850:..\src/interruptions.c ****                         return;
1851:..\src/interruptions.c ****                 }
1852:..\src/interruptions.c ****             }
1853:..\src/interruptions.c ****         }
1854:..\src/interruptions.c **** 
1855:..\src/interruptions.c ****         error[n_line][index] = 0;
 5976              		.loc 1 1855 0
 5977 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5978 02e6 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5979 02ea 8B48     		ldr	r0, .L414
 5980 02ec 1346     		mov	r3, r2
 5981 02ee 5B00     		lsls	r3, r3, #1
 5982 02f0 1344     		add	r3, r3, r2
 5983 02f2 0344     		add	r3, r3, r0
 5984 02f4 0B44     		add	r3, r3, r1
 5985 02f6 0022     		movs	r2, #0
 5986 02f8 1A70     		strb	r2, [r3]
1856:..\src/interruptions.c ****         
1857:..\src/interruptions.c ****         last_value_encoder[n_line][index] = tmp_value_encoder_32;
 5987              		.loc 1 1857 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 141


 5988 02fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5989 02fc 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5990 0300 8648     		ldr	r0, .L414+4
 5991 0302 1346     		mov	r3, r2
 5992 0304 5B00     		lsls	r3, r3, #1
 5993 0306 1344     		add	r3, r3, r2
 5994 0308 0B44     		add	r3, r3, r1
 5995 030a FA69     		ldr	r2, [r7, #28]
 5996 030c 40F82320 		str	r2, [r0, r3, lsl #2]
1858:..\src/interruptions.c **** 
1859:..\src/interruptions.c ****         value_encoder = (int32)tmp_value_encoder_32;   // SSSSSSSSSSSSSSSS[16] XXXXXXXXXXXX[12] 000
 5997              		.loc 1 1859 0
 5998 0310 FB69     		ldr	r3, [r7, #28]
 5999 0312 BB62     		str	r3, [r7, #40]
1860:..\src/interruptions.c **** 
1861:..\src/interruptions.c ****         value_encoder += ((int32)g_meas[n_line].rot[index] << 16);    
 6000              		.loc 1 1861 0
 6001 0314 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6002 0316 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 6003 031a 8149     		ldr	r1, .L414+8
 6004 031c 3420     		movs	r0, #52
 6005 031e 00FB02F2 		mul	r2, r0, r2
 6006 0322 0A44     		add	r2, r2, r1
 6007 0324 1344     		add	r3, r3, r2
 6008 0326 1833     		adds	r3, r3, #24
 6009 0328 93F90030 		ldrsb	r3, [r3]
 6010 032c 1B04     		lsls	r3, r3, #16
 6011 032e BA6A     		ldr	r2, [r7, #40]
 6012 0330 1344     		add	r3, r3, r2
 6013 0332 BB62     		str	r3, [r7, #40]
1862:..\src/interruptions.c ****         
1863:..\src/interruptions.c ****         if (c_mem.enc[n_line].m_mult[index] != 1.0) {
 6014              		.loc 1 1863 0
 6015 0334 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6016 0336 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 6017 033a 7A48     		ldr	r0, .L414+12
 6018 033c 1346     		mov	r3, r2
 6019 033e 5B00     		lsls	r3, r3, #1
 6020 0340 1344     		add	r3, r3, r2
 6021 0342 9B00     		lsls	r3, r3, #2
 6022 0344 0B44     		add	r3, r3, r1
 6023 0346 6833     		adds	r3, r3, #104
 6024 0348 9B00     		lsls	r3, r3, #2
 6025 034a 0344     		add	r3, r3, r0
 6026 034c 5B68     		ldr	r3, [r3, #4]	@ float
 6027 034e 4FF07E51 		mov	r1, #1065353216
 6028 0352 1846     		mov	r0, r3
 6029 0354 FFF7FEFF 		bl	__aeabi_fcmpeq
 6030 0358 0346     		mov	r3, r0
 6031 035a 002B     		cmp	r3, #0
 6032 035c 1AD1     		bne	.L392
1864:..\src/interruptions.c ****             value_encoder *= c_mem.enc[n_line].m_mult[index];
 6033              		.loc 1 1864 0
 6034 035e B86A     		ldr	r0, [r7, #40]
 6035 0360 FFF7FEFF 		bl	__aeabi_i2f
 6036 0364 0446     		mov	r4, r0
 6037 0366 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 142


 6038 0368 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 6039 036c 6D48     		ldr	r0, .L414+12
 6040 036e 1346     		mov	r3, r2
 6041 0370 5B00     		lsls	r3, r3, #1
 6042 0372 1344     		add	r3, r3, r2
 6043 0374 9B00     		lsls	r3, r3, #2
 6044 0376 0B44     		add	r3, r3, r1
 6045 0378 6833     		adds	r3, r3, #104
 6046 037a 9B00     		lsls	r3, r3, #2
 6047 037c 0344     		add	r3, r3, r0
 6048 037e 5B68     		ldr	r3, [r3, #4]	@ float
 6049 0380 1946     		mov	r1, r3
 6050 0382 2046     		mov	r0, r4
 6051 0384 FFF7FEFF 		bl	__aeabi_fmul
 6052 0388 0346     		mov	r3, r0
 6053 038a 1846     		mov	r0, r3
 6054 038c FFF7FEFF 		bl	__aeabi_f2iz
 6055 0390 0346     		mov	r3, r0
 6056 0392 BB62     		str	r3, [r7, #40]
 6057              	.L392:
1865:..\src/interruptions.c ****         }
1866:..\src/interruptions.c **** 
1867:..\src/interruptions.c ****         if (c_mem.dev.dev_type == SOFTHAND_PRO) {
 6058              		.loc 1 1867 0
 6059 0394 634B     		ldr	r3, .L414+12
 6060 0396 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 6061 039a 002B     		cmp	r3, #0
 6062 039c 0BD1     		bne	.L394
1868:..\src/interruptions.c ****             // Right / Left hand turn
1869:..\src/interruptions.c ****             if (index == 0) {
 6063              		.loc 1 1869 0
 6064 039e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 6065 03a2 002B     		cmp	r3, #0
 6066 03a4 07D1     		bne	.L394
1870:..\src/interruptions.c ****                 if (c_mem.dev.right_left == RIGHT_HAND){
 6067              		.loc 1 1870 0
 6068 03a6 5F4B     		ldr	r3, .L414+12
 6069 03a8 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 6070 03ac 002B     		cmp	r3, #0
 6071 03ae 02D1     		bne	.L394
1871:..\src/interruptions.c ****                     value_encoder *= -1;        
 6072              		.loc 1 1871 0
 6073 03b0 BB6A     		ldr	r3, [r7, #40]
 6074 03b2 5B42     		negs	r3, r3
 6075 03b4 BB62     		str	r3, [r7, #40]
 6076              	.L394:
1872:..\src/interruptions.c ****                 }
1873:..\src/interruptions.c ****             }
1874:..\src/interruptions.c ****         } 
1875:..\src/interruptions.c ****         
1876:..\src/interruptions.c ****         g_meas[n_line].pos[index] = value_encoder;
 6077              		.loc 1 1876 0
 6078 03b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6079 03b8 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 6080 03bc 5848     		ldr	r0, .L414+8
 6081 03be 1346     		mov	r3, r2
 6082 03c0 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 143


 6083 03c2 1344     		add	r3, r3, r2
 6084 03c4 9B00     		lsls	r3, r3, #2
 6085 03c6 1344     		add	r3, r3, r2
 6086 03c8 0B44     		add	r3, r3, r1
 6087 03ca BA6A     		ldr	r2, [r7, #40]
 6088 03cc 40F82320 		str	r2, [r0, r3, lsl #2]
1877:..\src/interruptions.c ****     
1878:..\src/interruptions.c ****         speed_encoder = (int16)filter((11*value_encoder - 18* v_value[n_line][index] + 9 * vv_value
 6089              		.loc 1 1878 0
 6090 03d0 BA6A     		ldr	r2, [r7, #40]
 6091 03d2 1346     		mov	r3, r2
 6092 03d4 9B00     		lsls	r3, r3, #2
 6093 03d6 1344     		add	r3, r3, r2
 6094 03d8 5B00     		lsls	r3, r3, #1
 6095 03da 9918     		adds	r1, r3, r2
 6096 03dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6097 03de 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 6098 03e2 514C     		ldr	r4, .L414+16
 6099 03e4 1346     		mov	r3, r2
 6100 03e6 5B00     		lsls	r3, r3, #1
 6101 03e8 1344     		add	r3, r3, r2
 6102 03ea 0344     		add	r3, r3, r0
 6103 03ec 54F82330 		ldr	r3, [r4, r3, lsl #2]
 6104 03f0 6FF01102 		mvn	r2, #17
 6105 03f4 02FB03F3 		mul	r3, r2, r3
 6106 03f8 1944     		add	r1, r1, r3
 6107 03fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6108 03fc 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 6109 0400 4A4C     		ldr	r4, .L414+20
 6110 0402 1346     		mov	r3, r2
 6111 0404 5B00     		lsls	r3, r3, #1
 6112 0406 1344     		add	r3, r3, r2
 6113 0408 0344     		add	r3, r3, r0
 6114 040a 54F82320 		ldr	r2, [r4, r3, lsl #2]
 6115 040e 1346     		mov	r3, r2
 6116 0410 DB00     		lsls	r3, r3, #3
 6117 0412 1344     		add	r3, r3, r2
 6118 0414 1944     		add	r1, r1, r3
 6119 0416 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6120 0418 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 6121 041c 444C     		ldr	r4, .L414+24
 6122 041e 1346     		mov	r3, r2
 6123 0420 5B00     		lsls	r3, r3, #1
 6124 0422 1344     		add	r3, r3, r2
 6125 0424 0344     		add	r3, r3, r0
 6126 0426 54F82330 		ldr	r3, [r4, r3, lsl #2]
 6127 042a 5B00     		lsls	r3, r3, #1
 6128 042c C81A     		subs	r0, r1, r3
 6129 042e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 6130 0432 DB00     		lsls	r3, r3, #3
 6131 0434 3F4A     		ldr	r2, .L414+28
 6132 0436 1344     		add	r3, r3, r2
 6133 0438 1946     		mov	r1, r3
 6134 043a FFF7FEFF 		bl	filter
 6135 043e 0346     		mov	r3, r0
 6136 0440 1BB2     		sxth	r3, r3
 6137 0442 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 144


1879:..\src/interruptions.c **** 
1880:..\src/interruptions.c ****         //Update current speed
1881:..\src/interruptions.c ****         speed_encoder = speed_encoder / (6*cycle_time);
 6138              		.loc 1 1881 0
 6139 0444 7869     		ldr	r0, [r7, #20]
 6140 0446 FFF7FEFF 		bl	__aeabi_i2f
 6141 044a 0446     		mov	r4, r0
 6142 044c 3A4B     		ldr	r3, .L414+32
 6143 044e 1B68     		ldr	r3, [r3]	@ float
 6144 0450 3A49     		ldr	r1, .L414+36
 6145 0452 1846     		mov	r0, r3
 6146 0454 FFF7FEFF 		bl	__aeabi_fmul
 6147 0458 0346     		mov	r3, r0
 6148 045a 1946     		mov	r1, r3
 6149 045c 2046     		mov	r0, r4
 6150 045e FFF7FEFF 		bl	__aeabi_fdiv
 6151 0462 0346     		mov	r3, r0
 6152 0464 1846     		mov	r0, r3
 6153 0466 FFF7FEFF 		bl	__aeabi_f2iz
 6154 046a 0346     		mov	r3, r0
 6155 046c 7B61     		str	r3, [r7, #20]
1882:..\src/interruptions.c ****         g_meas[n_line].vel[index] = speed_encoder;
 6156              		.loc 1 1882 0
 6157 046e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6158 0470 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 6159 0474 2A48     		ldr	r0, .L414+8
 6160 0476 1346     		mov	r3, r2
 6161 0478 5B00     		lsls	r3, r3, #1
 6162 047a 1344     		add	r3, r3, r2
 6163 047c 9B00     		lsls	r3, r3, #2
 6164 047e 1344     		add	r3, r3, r2
 6165 0480 0B44     		add	r3, r3, r1
 6166 0482 0633     		adds	r3, r3, #6
 6167 0484 9B00     		lsls	r3, r3, #2
 6168 0486 0344     		add	r3, r3, r0
 6169 0488 7A69     		ldr	r2, [r7, #20]
 6170 048a 5A60     		str	r2, [r3, #4]
1883:..\src/interruptions.c **** 
1884:..\src/interruptions.c ****         // update old velocity and acceleration values
1885:..\src/interruptions.c ****         vvv_value[n_line][index] = vv_value[n_line][index];
 6171              		.loc 1 1885 0
 6172 048c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6173 048e 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 6174 0492 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 6175 0494 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 6176 0498 244D     		ldr	r5, .L414+20
 6177 049a 0B46     		mov	r3, r1
 6178 049c 5B00     		lsls	r3, r3, #1
 6179 049e 0B44     		add	r3, r3, r1
 6180 04a0 2344     		add	r3, r3, r4
 6181 04a2 55F82310 		ldr	r1, [r5, r3, lsl #2]
 6182 04a6 224C     		ldr	r4, .L414+24
 6183 04a8 1346     		mov	r3, r2
 6184 04aa 5B00     		lsls	r3, r3, #1
 6185 04ac 1344     		add	r3, r3, r2
 6186 04ae 0344     		add	r3, r3, r0
 6187 04b0 44F82310 		str	r1, [r4, r3, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 145


1886:..\src/interruptions.c ****         vv_value[n_line][index] = v_value[n_line][index];
 6188              		.loc 1 1886 0
 6189 04b4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6190 04b6 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 6191 04ba F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 6192 04bc 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 6193 04c0 194D     		ldr	r5, .L414+16
 6194 04c2 0B46     		mov	r3, r1
 6195 04c4 5B00     		lsls	r3, r3, #1
 6196 04c6 0B44     		add	r3, r3, r1
 6197 04c8 2344     		add	r3, r3, r4
 6198 04ca 55F82310 		ldr	r1, [r5, r3, lsl #2]
 6199 04ce 174C     		ldr	r4, .L414+20
 6200 04d0 1346     		mov	r3, r2
 6201 04d2 5B00     		lsls	r3, r3, #1
 6202 04d4 1344     		add	r3, r3, r2
 6203 04d6 0344     		add	r3, r3, r0
 6204 04d8 44F82310 		str	r1, [r4, r3, lsl #2]
1887:..\src/interruptions.c ****         v_value[n_line][index] = value_encoder;
 6205              		.loc 1 1887 0
 6206 04dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6207 04de 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 6208 04e2 1148     		ldr	r0, .L414+16
 6209 04e4 1346     		mov	r3, r2
 6210 04e6 5B00     		lsls	r3, r3, #1
 6211 04e8 1344     		add	r3, r3, r2
 6212 04ea 0B44     		add	r3, r3, r1
 6213 04ec BA6A     		ldr	r2, [r7, #40]
 6214 04ee 40F82320 		str	r2, [r0, r3, lsl #2]
1888:..\src/interruptions.c **** 
1889:..\src/interruptions.c ****         // wait at least 5 * max_num_of_error (10) + 5 = 55 cycles to reconstruct the right turn
1890:..\src/interruptions.c ****         if (pos_reconstruct[n_line] == FALSE){
 6215              		.loc 1 1890 0
 6216 04f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6217 04f4 124A     		ldr	r2, .L414+40
 6218 04f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6219 04f8 002B     		cmp	r3, #0
 6220 04fa 40F03781 		bne	.L395
1891:..\src/interruptions.c ****             if (one_time_execute[n_line] < 54) 
 6221              		.loc 1 1891 0
 6222 04fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6223 0500 104A     		ldr	r2, .L414+44
 6224 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6225 0504 352B     		cmp	r3, #53
 6226 0506 1FD8     		bhi	.L396
1892:..\src/interruptions.c ****                 one_time_execute[n_line]++;
 6227              		.loc 1 1892 0
 6228 0508 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6229 050a 0E4A     		ldr	r2, .L414+44
 6230 050c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 6231 050e 0132     		adds	r2, r2, #1
 6232 0510 D1B2     		uxtb	r1, r2
 6233 0512 0C4A     		ldr	r2, .L414+44
 6234 0514 D154     		strb	r1, [r2, r3]
 6235 0516 29E1     		b	.L395
 6236              	.L415:
 6237              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 146


 6238              	.L414:
 6239 0518 10010000 		.word	error.10713
 6240 051c E0000000 		.word	last_value_encoder.10711
 6241 0520 00000000 		.word	g_meas
 6242 0524 00000000 		.word	c_mem
 6243 0528 18010000 		.word	v_value.10718
 6244 052c 30010000 		.word	vv_value.10719
 6245 0530 48010000 		.word	vvv_value.10720
 6246 0534 00000000 		.word	filt_vel
 6247 0538 00000000 		.word	cycle_time
 6248 053c 0000C040 		.word	1086324736
 6249 0540 00000000 		.word	pos_reconstruct
 6250 0544 60010000 		.word	one_time_execute.10716
 6251              	.L396:
1893:..\src/interruptions.c ****             else {
1894:..\src/interruptions.c **** 
1895:..\src/interruptions.c ****                 //Double encoder translation
1896:..\src/interruptions.c ****                 if (c_mem.enc[n_line].double_encoder_on_off){
 6252              		.loc 1 1896 0
 6253 0548 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6254 054a AC49     		ldr	r1, .L416
 6255 054c 1346     		mov	r3, r2
 6256 054e 5B00     		lsls	r3, r3, #1
 6257 0550 1344     		add	r3, r3, r2
 6258 0552 1B01     		lsls	r3, r3, #4
 6259 0554 0B44     		add	r3, r3, r1
 6260 0556 03F5D873 		add	r3, r3, #432
 6261 055a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6262 055c 002B     		cmp	r3, #0
 6263 055e 5ED0     		beq	.L397
1897:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 6264              		.loc 1 1897 0
 6265 0560 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6266 0562 A749     		ldr	r1, .L416+4
 6267 0564 1346     		mov	r3, r2
 6268 0566 5B00     		lsls	r3, r3, #1
 6269 0568 1344     		add	r3, r3, r2
 6270 056a 9B00     		lsls	r3, r3, #2
 6271 056c 0B44     		add	r3, r3, r1
 6272 056e 1868     		ldr	r0, [r3]
 6273 0570 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6274 0572 A349     		ldr	r1, .L416+4
 6275 0574 1346     		mov	r3, r2
 6276 0576 5B00     		lsls	r3, r3, #1
 6277 0578 1344     		add	r3, r3, r2
 6278 057a 9B00     		lsls	r3, r3, #2
 6279 057c 0B44     		add	r3, r3, r1
 6280 057e 0433     		adds	r3, r3, #4
 6281 0580 1C68     		ldr	r4, [r3]
1898:..\src/interruptions.c ****                                 c_mem.enc[n_line].gears_params[0], c_mem.enc[n_line].gears_params[1
 6282              		.loc 1 1898 0
 6283 0582 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6284 0584 9D49     		ldr	r1, .L416
 6285 0586 1346     		mov	r3, r2
 6286 0588 5B00     		lsls	r3, r3, #1
 6287 058a 1344     		add	r3, r3, r2
 6288 058c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 147


 6289 058e 0B44     		add	r3, r3, r1
 6290 0590 03F2B513 		addw	r3, r3, #437
 6291 0594 93F90030 		ldrsb	r3, [r3]
1897:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 6292              		.loc 1 1897 0
 6293 0598 1D46     		mov	r5, r3
 6294              		.loc 1 1898 0
 6295 059a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6296 059c 9749     		ldr	r1, .L416
 6297 059e 1346     		mov	r3, r2
 6298 05a0 5B00     		lsls	r3, r3, #1
 6299 05a2 1344     		add	r3, r3, r2
 6300 05a4 1B01     		lsls	r3, r3, #4
 6301 05a6 0B44     		add	r3, r3, r1
 6302 05a8 03F5DB73 		add	r3, r3, #438
 6303 05ac 93F90030 		ldrsb	r3, [r3]
1897:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 6304              		.loc 1 1897 0
 6305 05b0 1E46     		mov	r6, r3
 6306              		.loc 1 1898 0
 6307 05b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6308 05b4 9149     		ldr	r1, .L416
 6309 05b6 1346     		mov	r3, r2
 6310 05b8 5B00     		lsls	r3, r3, #1
 6311 05ba 1344     		add	r3, r3, r2
 6312 05bc 1B01     		lsls	r3, r3, #4
 6313 05be 0B44     		add	r3, r3, r1
 6314 05c0 03F2B713 		addw	r3, r3, #439
 6315 05c4 93F90030 		ldrsb	r3, [r3]
1897:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 6316              		.loc 1 1897 0
 6317 05c8 0093     		str	r3, [sp]
 6318 05ca 3346     		mov	r3, r6
 6319 05cc 2A46     		mov	r2, r5
 6320 05ce 2146     		mov	r1, r4
 6321 05d0 FFF7FEFF 		bl	calc_turns_fcn
 6322 05d4 0346     		mov	r3, r0
 6323 05d6 87F82730 		strb	r3, [r7, #39]
1899:..\src/interruptions.c **** 
1900:..\src/interruptions.c **** 
1901:..\src/interruptions.c ****                     if (c_mem.enc[n_line].m_mult[0] < 0)
 6324              		.loc 1 1901 0
 6325 05da FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6326 05dc 8749     		ldr	r1, .L416
 6327 05de 1346     		mov	r3, r2
 6328 05e0 5B00     		lsls	r3, r3, #1
 6329 05e2 1344     		add	r3, r3, r2
 6330 05e4 1B01     		lsls	r3, r3, #4
 6331 05e6 0B44     		add	r3, r3, r1
 6332 05e8 03F5D273 		add	r3, r3, #420
 6333 05ec 1B68     		ldr	r3, [r3]	@ float
 6334 05ee 4FF00001 		mov	r1, #0
 6335 05f2 1846     		mov	r0, r3
 6336 05f4 FFF7FEFF 		bl	__aeabi_fcmplt
 6337 05f8 0346     		mov	r3, r0
 6338 05fa 002B     		cmp	r3, #0
 6339 05fc 05D0     		beq	.L398
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 148


1902:..\src/interruptions.c ****                         init_rot = -init_rot;
 6340              		.loc 1 1902 0
 6341 05fe 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6342 0602 5B42     		negs	r3, r3
 6343 0604 DBB2     		uxtb	r3, r3
 6344 0606 87F82730 		strb	r3, [r7, #39]
 6345              	.L398:
1903:..\src/interruptions.c ****                     
1904:..\src/interruptions.c ****                     g_meas[n_line].rot[0] = (int8)init_rot;
 6346              		.loc 1 1904 0
 6347 060a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6348 060c 7D4A     		ldr	r2, .L416+8
 6349 060e 3421     		movs	r1, #52
 6350 0610 01FB03F3 		mul	r3, r1, r3
 6351 0614 1344     		add	r3, r3, r2
 6352 0616 1833     		adds	r3, r3, #24
 6353 0618 97F82720 		ldrb	r2, [r7, #39]
 6354 061c 1A70     		strb	r2, [r3]
 6355              	.L397:
1905:..\src/interruptions.c ****                 }    
1906:..\src/interruptions.c **** 
1907:..\src/interruptions.c ****                 if (c_mem.enc[n_line].m_mult[0] != 1.0)
 6356              		.loc 1 1907 0
 6357 061e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6358 0620 7649     		ldr	r1, .L416
 6359 0622 1346     		mov	r3, r2
 6360 0624 5B00     		lsls	r3, r3, #1
 6361 0626 1344     		add	r3, r3, r2
 6362 0628 1B01     		lsls	r3, r3, #4
 6363 062a 0B44     		add	r3, r3, r1
 6364 062c 03F5D273 		add	r3, r3, #420
 6365 0630 1B68     		ldr	r3, [r3]	@ float
 6366 0632 4FF07E51 		mov	r1, #1065353216
 6367 0636 1846     		mov	r0, r3
 6368 0638 FFF7FEFF 		bl	__aeabi_fcmpeq
 6369 063c 0346     		mov	r3, r0
 6370 063e 002B     		cmp	r3, #0
 6371 0640 22D1     		bne	.L400
1908:..\src/interruptions.c ****                     g_meas[n_line].pos[0] /= c_mem.enc[n_line].m_mult[0];
 6372              		.loc 1 1908 0
 6373 0642 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 6374 0644 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6375 0646 6F4A     		ldr	r2, .L416+8
 6376 0648 3421     		movs	r1, #52
 6377 064a 01FB03F3 		mul	r3, r1, r3
 6378 064e 1344     		add	r3, r3, r2
 6379 0650 1B68     		ldr	r3, [r3]
 6380 0652 1846     		mov	r0, r3
 6381 0654 FFF7FEFF 		bl	__aeabi_i2f
 6382 0658 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6383 065a 6849     		ldr	r1, .L416
 6384 065c 1346     		mov	r3, r2
 6385 065e 5B00     		lsls	r3, r3, #1
 6386 0660 1344     		add	r3, r3, r2
 6387 0662 1B01     		lsls	r3, r3, #4
 6388 0664 0B44     		add	r3, r3, r1
 6389 0666 03F5D273 		add	r3, r3, #420
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 149


 6390 066a 1B68     		ldr	r3, [r3]	@ float
 6391 066c 1946     		mov	r1, r3
 6392 066e FFF7FEFF 		bl	__aeabi_fdiv
 6393 0672 0346     		mov	r3, r0
 6394 0674 1846     		mov	r0, r3
 6395 0676 FFF7FEFF 		bl	__aeabi_f2iz
 6396 067a 0146     		mov	r1, r0
 6397 067c 614A     		ldr	r2, .L416+8
 6398 067e 3423     		movs	r3, #52
 6399 0680 03FB04F3 		mul	r3, r3, r4
 6400 0684 1344     		add	r3, r3, r2
 6401 0686 1960     		str	r1, [r3]
 6402              	.L400:
1909:..\src/interruptions.c ****                 
1910:..\src/interruptions.c ****                 value_encoder += ((int32)init_rot << 16); 
 6403              		.loc 1 1910 0
 6404 0688 97F92730 		ldrsb	r3, [r7, #39]
 6405 068c 1B04     		lsls	r3, r3, #16
 6406 068e BA6A     		ldr	r2, [r7, #40]
 6407 0690 1344     		add	r3, r3, r2
 6408 0692 BB62     		str	r3, [r7, #40]
1911:..\src/interruptions.c ****        
1912:..\src/interruptions.c ****                 if (c_mem.enc[n_line].m_mult[0] != 1.0) {
 6409              		.loc 1 1912 0
 6410 0694 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6411 0696 5949     		ldr	r1, .L416
 6412 0698 1346     		mov	r3, r2
 6413 069a 5B00     		lsls	r3, r3, #1
 6414 069c 1344     		add	r3, r3, r2
 6415 069e 1B01     		lsls	r3, r3, #4
 6416 06a0 0B44     		add	r3, r3, r1
 6417 06a2 03F5D273 		add	r3, r3, #420
 6418 06a6 1B68     		ldr	r3, [r3]	@ float
 6419 06a8 4FF07E51 		mov	r1, #1065353216
 6420 06ac 1846     		mov	r0, r3
 6421 06ae FFF7FEFF 		bl	__aeabi_fcmpeq
 6422 06b2 0346     		mov	r3, r0
 6423 06b4 002B     		cmp	r3, #0
 6424 06b6 15D1     		bne	.L402
1913:..\src/interruptions.c ****                     value_encoder *= c_mem.enc[n_line].m_mult[0];
 6425              		.loc 1 1913 0
 6426 06b8 B86A     		ldr	r0, [r7, #40]
 6427 06ba FFF7FEFF 		bl	__aeabi_i2f
 6428 06be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6429 06c0 4E49     		ldr	r1, .L416
 6430 06c2 1346     		mov	r3, r2
 6431 06c4 5B00     		lsls	r3, r3, #1
 6432 06c6 1344     		add	r3, r3, r2
 6433 06c8 1B01     		lsls	r3, r3, #4
 6434 06ca 0B44     		add	r3, r3, r1
 6435 06cc 03F5D273 		add	r3, r3, #420
 6436 06d0 1B68     		ldr	r3, [r3]	@ float
 6437 06d2 1946     		mov	r1, r3
 6438 06d4 FFF7FEFF 		bl	__aeabi_fmul
 6439 06d8 0346     		mov	r3, r0
 6440 06da 1846     		mov	r0, r3
 6441 06dc FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 150


 6442 06e0 0346     		mov	r3, r0
 6443 06e2 BB62     		str	r3, [r7, #40]
 6444              	.L402:
1914:..\src/interruptions.c ****                 }
1915:..\src/interruptions.c **** 
1916:..\src/interruptions.c ****                 if (c_mem.dev.dev_type == SOFTHAND_PRO) {
 6445              		.loc 1 1916 0
 6446 06e4 454B     		ldr	r3, .L416
 6447 06e6 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 6448 06ea 002B     		cmp	r3, #0
 6449 06ec 07D1     		bne	.L404
1917:..\src/interruptions.c ****                     // Right / Left hand turn
1918:..\src/interruptions.c ****                     if (c_mem.dev.right_left == RIGHT_HAND){
 6450              		.loc 1 1918 0
 6451 06ee 434B     		ldr	r3, .L416
 6452 06f0 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 6453 06f4 002B     		cmp	r3, #0
 6454 06f6 02D1     		bne	.L404
1919:..\src/interruptions.c ****                         value_encoder *= -1;        
 6455              		.loc 1 1919 0
 6456 06f8 BB6A     		ldr	r3, [r7, #40]
 6457 06fa 5B42     		negs	r3, r3
 6458 06fc BB62     		str	r3, [r7, #40]
 6459              	.L404:
1920:..\src/interruptions.c ****                     }
1921:..\src/interruptions.c ****                 }
1922:..\src/interruptions.c ****          
1923:..\src/interruptions.c ****                 g_meas[n_line].pos[0] = value_encoder;
 6460              		.loc 1 1923 0
 6461 06fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6462 0700 404A     		ldr	r2, .L416+8
 6463 0702 3421     		movs	r1, #52
 6464 0704 01FB03F3 		mul	r3, r1, r3
 6465 0708 1344     		add	r3, r3, r2
 6466 070a BA6A     		ldr	r2, [r7, #40]
 6467 070c 1A60     		str	r2, [r3]
1924:..\src/interruptions.c ****                 
1925:..\src/interruptions.c ****                 g_refNew[assoc_motor].pos = g_meas[n_line].pos[0];
 6468              		.loc 1 1925 0
 6469 070e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6470 0710 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6471 0712 3C49     		ldr	r1, .L416+8
 6472 0714 3420     		movs	r0, #52
 6473 0716 00FB02F2 		mul	r2, r0, r2
 6474 071a 0A44     		add	r2, r2, r1
 6475 071c 1268     		ldr	r2, [r2]
 6476 071e 3A49     		ldr	r1, .L416+12
 6477 0720 1B01     		lsls	r3, r3, #4
 6478 0722 0B44     		add	r3, r3, r1
 6479 0724 1A60     		str	r2, [r3]
1926:..\src/interruptions.c **** 
1927:..\src/interruptions.c ****                 // If necessary activate motor
1928:..\src/interruptions.c ****     			safe_startup_motor_activation[n_line] = TRUE;
 6480              		.loc 1 1928 0
 6481 0726 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6482 0728 384A     		ldr	r2, .L416+16
 6483 072a 0121     		movs	r1, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 151


 6484 072c D154     		strb	r1, [r2, r3]
1929:..\src/interruptions.c ****                 // Activate the motor associated to this encoder line
1930:..\src/interruptions.c ****                 g_refNew[assoc_motor].onoff = c_mem.motor[assoc_motor].activ;
 6485              		.loc 1 1930 0
 6486 072e B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 6487 0730 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 6488 0732 3248     		ldr	r0, .L416
 6489 0734 1346     		mov	r3, r2
 6490 0736 DB00     		lsls	r3, r3, #3
 6491 0738 9B1A     		subs	r3, r3, r2
 6492 073a 1B01     		lsls	r3, r3, #4
 6493 073c 0344     		add	r3, r3, r0
 6494 073e E033     		adds	r3, r3, #224
 6495 0740 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6496 0742 314A     		ldr	r2, .L416+12
 6497 0744 0B01     		lsls	r3, r1, #4
 6498 0746 1344     		add	r3, r3, r2
 6499 0748 0C33     		adds	r3, r3, #12
 6500 074a 0246     		mov	r2, r0
 6501 074c 1A70     		strb	r2, [r3]
1931:..\src/interruptions.c ****                 enable_motor(assoc_motor, g_refNew[assoc_motor].onoff);                
 6502              		.loc 1 1931 0
 6503 074e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6504 0750 2D4A     		ldr	r2, .L416+12
 6505 0752 1B01     		lsls	r3, r3, #4
 6506 0754 1344     		add	r3, r3, r2
 6507 0756 0C33     		adds	r3, r3, #12
 6508 0758 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6509 075a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6510 075c 1146     		mov	r1, r2
 6511 075e 1846     		mov	r0, r3
 6512 0760 FFF7FEFF 		bl	enable_motor
1932:..\src/interruptions.c ****                 
1933:..\src/interruptions.c ****                 pos_reconstruct[n_line] = TRUE;
 6513              		.loc 1 1933 0
 6514 0764 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6515 0766 2A4A     		ldr	r2, .L416+20
 6516 0768 0121     		movs	r1, #1
 6517 076a D154     		strb	r1, [r2, r3]
 6518              	.L395:
1795:..\src/interruptions.c ****         
 6519              		.loc 1 1795 0 discriminator 2
 6520 076c 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 6521 0770 0133     		adds	r3, r3, #1
 6522 0772 87F82F30 		strb	r3, [r7, #47]
 6523              	.L384:
1795:..\src/interruptions.c ****         
 6524              		.loc 1 1795 0 is_stmt 0 discriminator 1
 6525 0776 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 6526 077a 022B     		cmp	r3, #2
 6527 077c 7FF6C5AC 		bls	.L405
1934:..\src/interruptions.c ****             }
1935:..\src/interruptions.c ****         }
1936:..\src/interruptions.c ****     } 
1937:..\src/interruptions.c **** 
1938:..\src/interruptions.c **** 	
1939:..\src/interruptions.c **** 	// Wait for 35+SAFE_STARTUP_MOTOR_READINGS cycles before starting motors
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 152


1940:..\src/interruptions.c ****     if (safe_startup_motor_activation[n_line]){
 6528              		.loc 1 1940 0 is_stmt 1
 6529 0780 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6530 0782 224A     		ldr	r2, .L416+16
 6531 0784 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6532 0786 002B     		cmp	r3, #0
 6533 0788 35D0     		beq	.L375
1941:..\src/interruptions.c ****         count_startup_motor[n_line]++;
 6534              		.loc 1 1941 0
 6535 078a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6536 078c 214A     		ldr	r2, .L416+24
 6537 078e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 6538 0792 0132     		adds	r2, r2, #1
 6539 0794 1F49     		ldr	r1, .L416+24
 6540 0796 41F82320 		str	r2, [r1, r3, lsl #2]
1942:..\src/interruptions.c ****         if (count_startup_motor[n_line] >= (uint32)SAFE_STARTUP_MOTOR_READINGS) {                  
 6541              		.loc 1 1942 0
 6542 079a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6543 079c 1D4A     		ldr	r2, .L416+24
 6544 079e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 6545 07a2 B3F5FA5F 		cmp	r3, #8000
 6546 07a6 26D3     		bcc	.L375
1943:..\src/interruptions.c ****             g_refNew[assoc_motor].pos = 0;
 6547              		.loc 1 1943 0
 6548 07a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6549 07aa 174A     		ldr	r2, .L416+12
 6550 07ac 1B01     		lsls	r3, r3, #4
 6551 07ae 1344     		add	r3, r3, r2
 6552 07b0 0022     		movs	r2, #0
 6553 07b2 1A60     		str	r2, [r3]
1944:..\src/interruptions.c ****             
1945:..\src/interruptions.c ****             // Activate the motor associated to this encoder line
1946:..\src/interruptions.c ****             g_refNew[assoc_motor].onoff = c_mem.motor[assoc_motor].activ;
 6554              		.loc 1 1946 0
 6555 07b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 6556 07b6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 6557 07b8 1048     		ldr	r0, .L416
 6558 07ba 1346     		mov	r3, r2
 6559 07bc DB00     		lsls	r3, r3, #3
 6560 07be 9B1A     		subs	r3, r3, r2
 6561 07c0 1B01     		lsls	r3, r3, #4
 6562 07c2 0344     		add	r3, r3, r0
 6563 07c4 E033     		adds	r3, r3, #224
 6564 07c6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6565 07c8 0F4A     		ldr	r2, .L416+12
 6566 07ca 0B01     		lsls	r3, r1, #4
 6567 07cc 1344     		add	r3, r3, r2
 6568 07ce 0C33     		adds	r3, r3, #12
 6569 07d0 0246     		mov	r2, r0
 6570 07d2 1A70     		strb	r2, [r3]
1947:..\src/interruptions.c ****             enable_motor(assoc_motor, g_refNew[assoc_motor].onoff); 
 6571              		.loc 1 1947 0
 6572 07d4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6573 07d6 0C4A     		ldr	r2, .L416+12
 6574 07d8 1B01     		lsls	r3, r3, #4
 6575 07da 1344     		add	r3, r3, r2
 6576 07dc 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 153


 6577 07de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6578 07e0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6579 07e2 1146     		mov	r1, r2
 6580 07e4 1846     		mov	r0, r3
 6581 07e6 FFF7FEFF 		bl	enable_motor
1948:..\src/interruptions.c ****                         
1949:..\src/interruptions.c ****             safe_startup_motor_activation[n_line] = FALSE;
 6582              		.loc 1 1949 0
 6583 07ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6584 07ec 074A     		ldr	r2, .L416+16
 6585 07ee 0021     		movs	r1, #0
 6586 07f0 D154     		strb	r1, [r2, r3]
 6587 07f2 00E0     		b	.L375
 6588              	.L411:
1850:..\src/interruptions.c ****                 }
 6589              		.loc 1 1850 0
 6590 07f4 00BF     		nop
 6591              	.L375:
1950:..\src/interruptions.c ****         }
1951:..\src/interruptions.c ****     }
1952:..\src/interruptions.c ****  
1953:..\src/interruptions.c **** }
 6592              		.loc 1 1953 0
 6593 07f6 3437     		adds	r7, r7, #52
 6594              		.cfi_def_cfa_offset 20
 6595 07f8 BD46     		mov	sp, r7
 6596              		.cfi_def_cfa_register 13
 6597              		@ sp needed
 6598 07fa F0BD     		pop	{r4, r5, r6, r7, pc}
 6599              	.L417:
 6600              		.align	2
 6601              	.L416:
 6602 07fc 00000000 		.word	c_mem
 6603 0800 F8000000 		.word	comp_value_encoder.10712
 6604 0804 00000000 		.word	g_meas
 6605 0808 00000000 		.word	g_refNew
 6606 080c 64010000 		.word	safe_startup_motor_activation.10715
 6607 0810 00000000 		.word	pos_reconstruct
 6608 0814 68010000 		.word	count_startup_motor.10717
 6609              		.cfi_endproc
 6610              	.LFE73:
 6611              		.size	encoder_reading_SPI, .-encoder_reading_SPI
 6612              		.section	.text.analog_read_end,"ax",%progbits
 6613              		.align	2
 6614              		.global	analog_read_end
 6615              		.thumb
 6616              		.thumb_func
 6617              		.type	analog_read_end, %function
 6618              	analog_read_end:
 6619              	.LFB74:
1954:..\src/interruptions.c **** 
1955:..\src/interruptions.c **** //==============================================================================
1956:..\src/interruptions.c **** //                                                           ANALOG MEASUREMENTS
1957:..\src/interruptions.c **** //==============================================================================
1958:..\src/interruptions.c **** 
1959:..\src/interruptions.c **** void analog_read_end() {
 6620              		.loc 1 1959 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 154


 6621              		.cfi_startproc
 6622              		@ args = 0, pretend = 0, frame = 8
 6623              		@ frame_needed = 1, uses_anonymous_args = 0
 6624 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6625              		.cfi_def_cfa_offset 20
 6626              		.cfi_offset 4, -20
 6627              		.cfi_offset 5, -16
 6628              		.cfi_offset 6, -12
 6629              		.cfi_offset 7, -8
 6630              		.cfi_offset 14, -4
 6631 0002 83B0     		sub	sp, sp, #12
 6632              		.cfi_def_cfa_offset 32
 6633 0004 00AF     		add	r7, sp, #0
 6634              		.cfi_def_cfa_register 7
1960:..\src/interruptions.c **** 
1961:..\src/interruptions.c ****     /* =========================================================================
1962:..\src/interruptions.c ****     /   Ideal formulation to calculate tension and current
1963:..\src/interruptions.c ****     /
1964:..\src/interruptions.c ****     /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
1965:..\src/interruptions.c ****     /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
1966:..\src/interruptions.c ****     /
1967:..\src/interruptions.c ****     /   Definition:
1968:..\src/interruptions.c ****     /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
1969:..\src/interruptions.c ****     /   offset = 2000 -> hardware amplifier bias in mV
1970:..\src/interruptions.c ****     /   gain = 8.086 -> amplifier gain
1971:..\src/interruptions.c ****     /   resistor = 18 -> resistor of voltage divider in KOhm 
1972:..\src/interruptions.c ****     /
1973:..\src/interruptions.c ****     /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
1974:..\src/interruptions.c ****     /   and offset unit of measurement is counts, instead dev_tension and
1975:..\src/interruptions.c ****     /   g_meas.curr[] are converted in properly unit.
1976:..\src/interruptions.c ****     /  =========================================================================
1977:..\src/interruptions.c ****     */
1978:..\src/interruptions.c **** 
1979:..\src/interruptions.c ****     int32 CYDATA i_aux;
1980:..\src/interruptions.c **** 
1981:..\src/interruptions.c ****     static uint16 emg_counter_1 = 0;
1982:..\src/interruptions.c ****     static uint16 emg_counter_2 = 0;
1983:..\src/interruptions.c ****     static uint16 UD_counter = 0;
1984:..\src/interruptions.c ****     static uint16 LR_counter = 0;
1985:..\src/interruptions.c ****     static int32 UD_mean_value;
1986:..\src/interruptions.c ****     static int32 LR_mean_value;
1987:..\src/interruptions.c **** 	static uint8 first_tension_valid = TRUE;
1988:..\src/interruptions.c ****     static int32 detect_power_cycle_prev = -3;
1989:..\src/interruptions.c ****     static uint16 count = 0;
1990:..\src/interruptions.c ****     static uint32 v_count = 0;
1991:..\src/interruptions.c ****     static uint8 idx = 0;
1992:..\src/interruptions.c ****     
1993:..\src/interruptions.c ****     
1994:..\src/interruptions.c ****     // Wait for conversion end
1995:..\src/interruptions.c ****     
1996:..\src/interruptions.c ****     while(!ADC_STATUS_Read()){
 6635              		.loc 1 1996 0
 6636 0006 08E0     		b	.L419
 6637              	.L420:
1997:..\src/interruptions.c ****         
1998:..\src/interruptions.c ****         if (interrupt_flag){
 6638              		.loc 1 1998 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 155


 6639 0008 AD4B     		ldr	r3, .L576
 6640 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6641 000c 002B     		cmp	r3, #0
 6642 000e 04D0     		beq	.L419
1999:..\src/interruptions.c ****             interrupt_flag = FALSE;
 6643              		.loc 1 1999 0
 6644 0010 AB4B     		ldr	r3, .L576
 6645 0012 0022     		movs	r2, #0
 6646 0014 1A70     		strb	r2, [r3]
2000:..\src/interruptions.c ****             interrupt_manager();
 6647              		.loc 1 2000 0
 6648 0016 FFF7FEFF 		bl	interrupt_manager
 6649              	.L419:
1996:..\src/interruptions.c ****         
 6650              		.loc 1 1996 0
 6651 001a FFF7FEFF 		bl	ADC_STATUS_Read
 6652 001e 0346     		mov	r3, r0
 6653 0020 002B     		cmp	r3, #0
 6654 0022 F1D0     		beq	.L420
2001:..\src/interruptions.c ****         }
2002:..\src/interruptions.c ****     }
2003:..\src/interruptions.c ****     
2004:..\src/interruptions.c **** #ifdef AIR_CHAMBERS_FB_FW
2005:..\src/interruptions.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
2006:..\src/interruptions.c ****         // Read pressure in any case
2007:..\src/interruptions.c ****         g_fb_meas.pressure  = (int32)(ADC_buf[0] -1540);    //0 - 4096  
2008:..\src/interruptions.c ****         g_fb_meas.pressure = (((float)g_fb_meas.pressure/4096.0)/0.004);       // datasheet transfe
2009:..\src/interruptions.c ****         if (g_fb_meas.pressure < 0) g_fb_meas.pressure = 0;
2010:..\src/interruptions.c ****     }
2011:..\src/interruptions.c **** #endif
2012:..\src/interruptions.c ****  
2013:..\src/interruptions.c ****     // Convert tension read
2014:..\src/interruptions.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
 6655              		.loc 1 2014 0
 6656 0024 A74B     		ldr	r3, .L576+4
 6657 0026 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 6658 002a 022B     		cmp	r3, #2
 6659 002c 04D1     		bne	.L421
2015:..\src/interruptions.c ****         dev_tension[0] = 5000;
 6660              		.loc 1 2015 0
 6661 002e A64B     		ldr	r3, .L576+8
 6662 0030 41F28832 		movw	r2, #5000
 6663 0034 1A60     		str	r2, [r3]
 6664 0036 0BE0     		b	.L422
 6665              	.L421:
2016:..\src/interruptions.c ****     }
2017:..\src/interruptions.c ****     else {
2018:..\src/interruptions.c ****         dev_tension[0] =  ((int32)(ADC_buf[0] - 1621) * 1990) >> 7;
 6666              		.loc 1 2018 0
 6667 0038 A44B     		ldr	r3, .L576+12
 6668 003a B3F90030 		ldrsh	r3, [r3]
 6669 003e A3F25563 		subw	r3, r3, #1621
 6670 0042 40F2C672 		movw	r2, #1990
 6671 0046 02FB03F3 		mul	r3, r2, r3
 6672 004a DB11     		asrs	r3, r3, #7
 6673 004c 9E4A     		ldr	r2, .L576+8
 6674 004e 1360     		str	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 156


 6675              	.L422:
2019:..\src/interruptions.c ****     }
2020:..\src/interruptions.c ****     
2021:..\src/interruptions.c ****     // Read also 2nd power tension (if necessary)
2022:..\src/interruptions.c ****     if (NUM_OF_ANALOG_INPUTS > 4) {
 6676              		.loc 1 2022 0
 6677 0050 9F4B     		ldr	r3, .L576+16
 6678 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6679 0054 042B     		cmp	r3, #4
 6680 0056 0BD9     		bls	.L423
2023:..\src/interruptions.c ****         dev_tension[1] = ((int32)(ADC_buf[4] - 1621) * 1990) >> 7;
 6681              		.loc 1 2023 0
 6682 0058 9C4B     		ldr	r3, .L576+12
 6683 005a B3F90830 		ldrsh	r3, [r3, #8]
 6684 005e A3F25563 		subw	r3, r3, #1621
 6685 0062 40F2C672 		movw	r2, #1990
 6686 0066 02FB03F3 		mul	r3, r2, r3
 6687 006a DB11     		asrs	r3, r3, #7
 6688 006c 964A     		ldr	r2, .L576+8
 6689 006e 5360     		str	r3, [r2, #4]
 6690              	.L423:
2024:..\src/interruptions.c ****     }
2025:..\src/interruptions.c ****     
2026:..\src/interruptions.c ****     if (interrupt_flag){
 6691              		.loc 1 2026 0
 6692 0070 934B     		ldr	r3, .L576
 6693 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6694 0074 002B     		cmp	r3, #0
 6695 0076 04D0     		beq	.L424
2027:..\src/interruptions.c ****         interrupt_flag = FALSE;                                                                    
 6696              		.loc 1 2027 0
 6697 0078 914B     		ldr	r3, .L576
 6698 007a 0022     		movs	r2, #0
 6699 007c 1A70     		strb	r2, [r3]
2028:..\src/interruptions.c ****         interrupt_manager();
 6700              		.loc 1 2028 0
 6701 007e FFF7FEFF 		bl	interrupt_manager
 6702              	.L424:
2029:..\src/interruptions.c ****     }
2030:..\src/interruptions.c ****     
2031:..\src/interruptions.c ****     // Update cycle power value
2032:..\src/interruptions.c ****     detect_power_cycle = filter(dev_tension[0]/6000, &filt_detect_pc);
 6703              		.loc 1 2032 0
 6704 0082 914B     		ldr	r3, .L576+8
 6705 0084 1B68     		ldr	r3, [r3]
 6706 0086 934A     		ldr	r2, .L576+20
 6707 0088 82FB0312 		smull	r1, r2, r2, r3
 6708 008c D211     		asrs	r2, r2, #7
 6709 008e DB17     		asrs	r3, r3, #31
 6710 0090 D31A     		subs	r3, r2, r3
 6711 0092 9149     		ldr	r1, .L576+24
 6712 0094 1846     		mov	r0, r3
 6713 0096 FFF7FEFF 		bl	filter
 6714 009a 0246     		mov	r2, r0
 6715 009c 8F4B     		ldr	r3, .L576+28
 6716 009e 1A60     		str	r2, [r3]
2033:..\src/interruptions.c ****     if (detect_power_cycle_prev < 0 && detect_power_cycle >= 0){    // Only positive difference is 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 157


 6717              		.loc 1 2033 0
 6718 00a0 8F4B     		ldr	r3, .L576+32
 6719 00a2 1B68     		ldr	r3, [r3]
 6720 00a4 002B     		cmp	r3, #0
 6721 00a6 08DA     		bge	.L425
 6722              		.loc 1 2033 0 is_stmt 0 discriminator 1
 6723 00a8 8C4B     		ldr	r3, .L576+28
 6724 00aa 1B68     		ldr	r3, [r3]
 6725 00ac 002B     		cmp	r3, #0
 6726 00ae 04DB     		blt	.L425
2034:..\src/interruptions.c ****         g_mem.cnt.power_cycles++;       // New power cycle (update value)   
 6727              		.loc 1 2034 0 is_stmt 1
 6728 00b0 844B     		ldr	r3, .L576+4
 6729 00b2 1B6E     		ldr	r3, [r3, #96]
 6730 00b4 0133     		adds	r3, r3, #1
 6731 00b6 834A     		ldr	r2, .L576+4
 6732 00b8 1366     		str	r3, [r2, #96]
 6733              	.L425:
2035:..\src/interruptions.c ****     }
2036:..\src/interruptions.c ****     detect_power_cycle_prev = detect_power_cycle;
 6734              		.loc 1 2036 0
 6735 00ba 884B     		ldr	r3, .L576+28
 6736 00bc 1B68     		ldr	r3, [r3]
 6737 00be 884A     		ldr	r2, .L576+32
 6738 00c0 1360     		str	r3, [r2]
2037:..\src/interruptions.c ****   
2038:..\src/interruptions.c ****     
2039:..\src/interruptions.c ****     // VOLTAGE READING
2040:..\src/interruptions.c ****     // Once firmware starts, first_tension_valid flag is set to TRUE while tension_valid status is 
2041:..\src/interruptions.c ****     // Step 1) Wait for battery voltage stabilization and filter convergence for 1000 cycles (v_cou
2042:..\src/interruptions.c ****     // Step 2) Wait for another 1000 cycles (count counter) to decide which is full charge power te
2043:..\src/interruptions.c ****     // Low voltage condition) Whenever dev_tension ADC value is under 7000 mV, tension_valid flag i
2044:..\src/interruptions.c ****     
2045:..\src/interruptions.c **** 	if (first_tension_valid && tension_valid) {     // Voltage reading (Step 2)
 6739              		.loc 1 2045 0
 6740 00c2 884B     		ldr	r3, .L576+36
 6741 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6742 00c6 002B     		cmp	r3, #0
 6743 00c8 4DD0     		beq	.L426
 6744              		.loc 1 2045 0 is_stmt 0 discriminator 1
 6745 00ca 874B     		ldr	r3, .L576+40
 6746 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6747 00ce 002B     		cmp	r3, #0
 6748 00d0 49D0     		beq	.L426
2046:..\src/interruptions.c ****         count = count + 1;
 6749              		.loc 1 2046 0 is_stmt 1
 6750 00d2 864B     		ldr	r3, .L576+44
 6751 00d4 1B88     		ldrh	r3, [r3]
 6752 00d6 0133     		adds	r3, r3, #1
 6753 00d8 9AB2     		uxth	r2, r3
 6754 00da 844B     		ldr	r3, .L576+44
 6755 00dc 1A80     		strh	r2, [r3]	@ movhi
2047:..\src/interruptions.c ****         
2048:..\src/interruptions.c ****         if (count == 1000){
 6756              		.loc 1 2048 0
 6757 00de 834B     		ldr	r3, .L576+44
 6758 00e0 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 158


 6759 00e2 B3F57A7F 		cmp	r3, #1000
 6760 00e6 3ED1     		bne	.L426
2049:..\src/interruptions.c ****             for (idx = 0; idx < NUM_OF_MOTORS; idx++) {
 6761              		.loc 1 2049 0
 6762 00e8 814B     		ldr	r3, .L576+48
 6763 00ea 0022     		movs	r2, #0
 6764 00ec 1A70     		strb	r2, [r3]
 6765 00ee 33E0     		b	.L427
 6766              	.L431:
2050:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 6767              		.loc 1 2050 0
 6768 00f0 7F4B     		ldr	r3, .L576+48
 6769 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6770 00f4 1A46     		mov	r2, r3
 6771 00f6 744B     		ldr	r3, .L576+8
 6772 00f8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6773 00fc 42F22732 		movw	r2, #8999
 6774 0100 9342     		cmp	r3, r2
 6775 0102 08DC     		bgt	.L428
2051:..\src/interruptions.c ****                     pow_tension[idx] = 8000;
 6776              		.loc 1 2051 0
 6777 0104 7A4B     		ldr	r3, .L576+48
 6778 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6779 0108 1946     		mov	r1, r3
 6780 010a 7A4B     		ldr	r3, .L576+52
 6781 010c 4FF4FA52 		mov	r2, #8000
 6782 0110 43F82120 		str	r2, [r3, r1, lsl #2]
 6783 0114 1AE0     		b	.L429
 6784              	.L428:
2052:..\src/interruptions.c ****                 }
2053:..\src/interruptions.c ****                 else {      // 12 V - 24 V cases
2054:..\src/interruptions.c ****                     if (dev_tension[idx] < 13000) {
 6785              		.loc 1 2054 0
 6786 0116 764B     		ldr	r3, .L576+48
 6787 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6788 011a 1A46     		mov	r2, r3
 6789 011c 6A4B     		ldr	r3, .L576+8
 6790 011e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6791 0122 43F2C722 		movw	r2, #12999
 6792 0126 9342     		cmp	r3, r2
 6793 0128 08DC     		bgt	.L430
2055:..\src/interruptions.c ****                         pow_tension[idx] = 12000;
 6794              		.loc 1 2055 0
 6795 012a 714B     		ldr	r3, .L576+48
 6796 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6797 012e 1946     		mov	r1, r3
 6798 0130 704B     		ldr	r3, .L576+52
 6799 0132 42F6E062 		movw	r2, #12000
 6800 0136 43F82120 		str	r2, [r3, r1, lsl #2]
 6801 013a 07E0     		b	.L429
 6802              	.L430:
2056:..\src/interruptions.c ****                     }
2057:..\src/interruptions.c ****                     else
2058:..\src/interruptions.c ****                         pow_tension[idx] = 24000;
 6803              		.loc 1 2058 0
 6804 013c 6C4B     		ldr	r3, .L576+48
 6805 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 159


 6806 0140 1946     		mov	r1, r3
 6807 0142 6C4B     		ldr	r3, .L576+52
 6808 0144 45F6C052 		movw	r2, #24000
 6809 0148 43F82120 		str	r2, [r3, r1, lsl #2]
 6810              	.L429:
2049:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 6811              		.loc 1 2049 0 discriminator 2
 6812 014c 684B     		ldr	r3, .L576+48
 6813 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6814 0150 0133     		adds	r3, r3, #1
 6815 0152 DAB2     		uxtb	r2, r3
 6816 0154 664B     		ldr	r3, .L576+48
 6817 0156 1A70     		strb	r2, [r3]
 6818              	.L427:
2049:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 6819              		.loc 1 2049 0 is_stmt 0 discriminator 1
 6820 0158 654B     		ldr	r3, .L576+48
 6821 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6822 015c 012B     		cmp	r3, #1
 6823 015e C7D9     		bls	.L431
2059:..\src/interruptions.c ****                 }
2060:..\src/interruptions.c ****             }
2061:..\src/interruptions.c ****             first_tension_valid = FALSE;
 6824              		.loc 1 2061 0 is_stmt 1
 6825 0160 604B     		ldr	r3, .L576+36
 6826 0162 0022     		movs	r2, #0
 6827 0164 1A70     		strb	r2, [r3]
 6828              	.L426:
2062:..\src/interruptions.c ****         }
2063:..\src/interruptions.c ****     }
2064:..\src/interruptions.c **** 
2065:..\src/interruptions.c ****     // Until there is no valid input tension repeat this measurement
2066:..\src/interruptions.c **** 
2067:..\src/interruptions.c ****     if (dev_tension[0] < 6500 && (NUM_OF_ANALOG_INPUTS<=4 || dev_tension[1] < 6500)) {       // Vol
 6829              		.loc 1 2067 0
 6830 0166 584B     		ldr	r3, .L576+8
 6831 0168 1B68     		ldr	r3, [r3]
 6832 016a 41F66312 		movw	r2, #6499
 6833 016e 9342     		cmp	r3, r2
 6834 0170 00F3F580 		bgt	.L432
 6835              		.loc 1 2067 0 is_stmt 0 discriminator 1
 6836 0174 564B     		ldr	r3, .L576+16
 6837 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6838 0178 042B     		cmp	r3, #4
 6839 017a 06D9     		bls	.L433
 6840              		.loc 1 2067 0 discriminator 2
 6841 017c 524B     		ldr	r3, .L576+8
 6842 017e 5B68     		ldr	r3, [r3, #4]
 6843 0180 41F66312 		movw	r2, #6499
 6844 0184 9342     		cmp	r3, r2
 6845 0186 00F3EA80 		bgt	.L432
 6846              	.L433:
2068:..\src/interruptions.c ****         // PSoC is powered through uUSB
2069:..\src/interruptions.c ****         
2070:..\src/interruptions.c ****         tension_valid = FALSE;
 6847              		.loc 1 2070 0 is_stmt 1
 6848 018a 574B     		ldr	r3, .L576+40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 160


 6849 018c 0022     		movs	r2, #0
 6850 018e 1A70     		strb	r2, [r3]
2071:..\src/interruptions.c ****             
2072:..\src/interruptions.c ****         if (interrupt_flag){
 6851              		.loc 1 2072 0
 6852 0190 4B4B     		ldr	r3, .L576
 6853 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6854 0194 002B     		cmp	r3, #0
 6855 0196 04D0     		beq	.L434
2073:..\src/interruptions.c ****             interrupt_flag = FALSE;
 6856              		.loc 1 2073 0
 6857 0198 494B     		ldr	r3, .L576
 6858 019a 0022     		movs	r2, #0
 6859 019c 1A70     		strb	r2, [r3]
2074:..\src/interruptions.c ****             interrupt_manager();
 6860              		.loc 1 2074 0
 6861 019e FFF7FEFF 		bl	interrupt_manager
 6862              	.L434:
2075:..\src/interruptions.c ****         }
2076:..\src/interruptions.c ****         
2077:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_MOTORS; idx++){
 6863              		.loc 1 2077 0
 6864 01a2 534B     		ldr	r3, .L576+48
 6865 01a4 0022     		movs	r2, #0
 6866 01a6 1A70     		strb	r2, [r3]
 6867 01a8 81E0     		b	.L435
 6868              	.L438:
2078:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 6869              		.loc 1 2078 0
 6870 01aa 534B     		ldr	r3, .L576+56
 6871 01ac 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6872 01b0 002B     		cmp	r3, #0
 6873 01b2 59D0     		beq	.L436
2079:..\src/interruptions.c ****                 if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 6874              		.loc 1 2079 0
 6875 01b4 4E4B     		ldr	r3, .L576+48
 6876 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6877 01b8 1946     		mov	r1, r3
 6878 01ba 4F4A     		ldr	r2, .L576+56
 6879 01bc 0B46     		mov	r3, r1
 6880 01be DB00     		lsls	r3, r3, #3
 6881 01c0 5B1A     		subs	r3, r3, r1
 6882 01c2 1B01     		lsls	r3, r3, #4
 6883 01c4 1344     		add	r3, r3, r2
 6884 01c6 03F58773 		add	r3, r3, #270
 6885 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6886 01cc 022B     		cmp	r3, #2
 6887 01ce 37D0     		beq	.L437
2080:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 6888              		.loc 1 2080 0 discriminator 1
 6889 01d0 474B     		ldr	r3, .L576+48
 6890 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6891 01d4 1946     		mov	r1, r3
 6892 01d6 484A     		ldr	r2, .L576+56
 6893 01d8 0B46     		mov	r3, r1
 6894 01da DB00     		lsls	r3, r3, #3
 6895 01dc 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 161


 6896 01de 1B01     		lsls	r3, r3, #4
 6897 01e0 1344     		add	r3, r3, r2
 6898 01e2 03F58773 		add	r3, r3, #270
 6899 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2079:..\src/interruptions.c ****                 if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 6900              		.loc 1 2079 0 discriminator 1
 6901 01e8 032B     		cmp	r3, #3
 6902 01ea 29D0     		beq	.L437
2081:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 6903              		.loc 1 2081 0
 6904 01ec 404B     		ldr	r3, .L576+48
 6905 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6906 01f0 1946     		mov	r1, r3
 6907 01f2 414A     		ldr	r2, .L576+56
 6908 01f4 0B46     		mov	r3, r1
 6909 01f6 DB00     		lsls	r3, r3, #3
 6910 01f8 5B1A     		subs	r3, r3, r1
 6911 01fa 1B01     		lsls	r3, r3, #4
 6912 01fc 1344     		add	r3, r3, r2
 6913 01fe 03F58773 		add	r3, r3, #270
 6914 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2080:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 6915              		.loc 1 2080 0
 6916 0204 042B     		cmp	r3, #4
 6917 0206 1BD0     		beq	.L437
2082:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 6918              		.loc 1 2082 0
 6919 0208 394B     		ldr	r3, .L576+48
 6920 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6921 020c 1946     		mov	r1, r3
 6922 020e 3A4A     		ldr	r2, .L576+56
 6923 0210 0B46     		mov	r3, r1
 6924 0212 DB00     		lsls	r3, r3, #3
 6925 0214 5B1A     		subs	r3, r3, r1
 6926 0216 1B01     		lsls	r3, r3, #4
 6927 0218 1344     		add	r3, r3, r2
 6928 021a 03F58773 		add	r3, r3, #270
 6929 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2081:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 6930              		.loc 1 2081 0
 6931 0220 052B     		cmp	r3, #5
 6932 0222 0DD0     		beq	.L437
2083:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 6933              		.loc 1 2083 0
 6934 0224 324B     		ldr	r3, .L576+48
 6935 0226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6936 0228 1946     		mov	r1, r3
 6937 022a 334A     		ldr	r2, .L576+56
 6938 022c 0B46     		mov	r3, r1
 6939 022e DB00     		lsls	r3, r3, #3
 6940 0230 5B1A     		subs	r3, r3, r1
 6941 0232 1B01     		lsls	r3, r3, #4
 6942 0234 1344     		add	r3, r3, r2
 6943 0236 03F58773 		add	r3, r3, #270
 6944 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2082:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 6945              		.loc 1 2082 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 162


 6946 023c 072B     		cmp	r3, #7
 6947 023e 13D1     		bne	.L436
 6948              	.L437:
2084:..\src/interruptions.c ****                     g_ref[idx].onoff = 0x00;
 6949              		.loc 1 2084 0
 6950 0240 2B4B     		ldr	r3, .L576+48
 6951 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6952 0244 2D4A     		ldr	r2, .L576+60
 6953 0246 1B01     		lsls	r3, r3, #4
 6954 0248 1344     		add	r3, r3, r2
 6955 024a 0C33     		adds	r3, r3, #12
 6956 024c 0022     		movs	r2, #0
 6957 024e 1A70     		strb	r2, [r3]
2085:..\src/interruptions.c ****                     enable_motor(idx, g_ref[idx].onoff); 
 6958              		.loc 1 2085 0
 6959 0250 274B     		ldr	r3, .L576+48
 6960 0252 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6961 0254 264B     		ldr	r3, .L576+48
 6962 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6963 0258 284A     		ldr	r2, .L576+60
 6964 025a 1B01     		lsls	r3, r3, #4
 6965 025c 1344     		add	r3, r3, r2
 6966 025e 0C33     		adds	r3, r3, #12
 6967 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6968 0262 1946     		mov	r1, r3
 6969 0264 FFF7FEFF 		bl	enable_motor
 6970              	.L436:
2086:..\src/interruptions.c ****                     
2087:..\src/interruptions.c ****                 }
2088:..\src/interruptions.c ****             }
2089:..\src/interruptions.c **** 
2090:..\src/interruptions.c ****             // Assign dev_tension and reset current
2091:..\src/interruptions.c ****             dev_tension[idx] = 5000;
 6971              		.loc 1 2091 0 discriminator 2
 6972 0268 214B     		ldr	r3, .L576+48
 6973 026a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6974 026c 1946     		mov	r1, r3
 6975 026e 164B     		ldr	r3, .L576+8
 6976 0270 41F28832 		movw	r2, #5000
 6977 0274 43F82120 		str	r2, [r3, r1, lsl #2]
2092:..\src/interruptions.c ****             g_meas[g_mem.motor[idx].encoder_line].curr = 0;
 6978              		.loc 1 2092 0 discriminator 2
 6979 0278 1D4B     		ldr	r3, .L576+48
 6980 027a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6981 027c 1946     		mov	r1, r3
 6982 027e 114A     		ldr	r2, .L576+4
 6983 0280 0B46     		mov	r3, r1
 6984 0282 DB00     		lsls	r3, r3, #3
 6985 0284 5B1A     		subs	r3, r3, r1
 6986 0286 1B01     		lsls	r3, r3, #4
 6987 0288 1344     		add	r3, r3, r2
 6988 028a 03F58873 		add	r3, r3, #272
 6989 028e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6990 0290 1946     		mov	r1, r3
 6991 0292 1B4A     		ldr	r2, .L576+64
 6992 0294 3423     		movs	r3, #52
 6993 0296 03FB01F3 		mul	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 163


 6994 029a 1344     		add	r3, r3, r2
 6995 029c 0C33     		adds	r3, r3, #12
 6996 029e 0022     		movs	r2, #0
 6997 02a0 1A60     		str	r2, [r3]
2077:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 6998              		.loc 1 2077 0 discriminator 2
 6999 02a2 134B     		ldr	r3, .L576+48
 7000 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7001 02a6 0133     		adds	r3, r3, #1
 7002 02a8 DAB2     		uxtb	r2, r3
 7003 02aa 114B     		ldr	r3, .L576+48
 7004 02ac 1A70     		strb	r2, [r3]
 7005              	.L435:
2077:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 7006              		.loc 1 2077 0 is_stmt 0 discriminator 1
 7007 02ae 104B     		ldr	r3, .L576+48
 7008 02b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7009 02b2 012B     		cmp	r3, #1
 7010 02b4 7FF679AF 		bls	.L438
2093:..\src/interruptions.c ****         }
2094:..\src/interruptions.c ****         
2095:..\src/interruptions.c ****         // Reset emg
2096:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_INPUT_EMGS; idx++){
 7011              		.loc 1 2096 0 is_stmt 1
 7012 02b8 0D4B     		ldr	r3, .L576+48
 7013 02ba 0022     		movs	r2, #0
 7014 02bc 1A70     		strb	r2, [r3]
 7015 02be 2EE0     		b	.L439
 7016              	.L577:
 7017              		.align	2
 7018              	.L576:
 7019 02c0 00000000 		.word	interrupt_flag
 7020 02c4 00000000 		.word	g_mem
 7021 02c8 00000000 		.word	dev_tension
 7022 02cc 00000000 		.word	ADC_buf
 7023 02d0 00000000 		.word	NUM_OF_ANALOG_INPUTS
 7024 02d4 F1197605 		.word	91625969
 7025 02d8 00000000 		.word	filt_detect_pc
 7026 02dc 00000000 		.word	detect_power_cycle
 7027 02e0 08000000 		.word	detect_power_cycle_prev.10744
 7028 02e4 0C000000 		.word	first_tension_valid.10743
 7029 02e8 00000000 		.word	tension_valid
 7030 02ec 70010000 		.word	count.10745
 7031 02f0 72010000 		.word	idx.10747
 7032 02f4 00000000 		.word	pow_tension
 7033 02f8 00000000 		.word	c_mem
 7034 02fc 00000000 		.word	g_ref
 7035 0300 00000000 		.word	g_meas
 7036              	.L440:
2097:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 7037              		.loc 1 2097 0 discriminator 3
 7038 0304 6D4B     		ldr	r3, .L578
 7039 0306 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7040 0308 1946     		mov	r1, r3
 7041 030a 6D4B     		ldr	r3, .L578+4
 7042 030c 0022     		movs	r2, #0
 7043 030e 43F82120 		str	r2, [r3, r1, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 164


2096:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 7044              		.loc 1 2096 0 discriminator 3
 7045 0312 6A4B     		ldr	r3, .L578
 7046 0314 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7047 0316 0133     		adds	r3, r3, #1
 7048 0318 DAB2     		uxtb	r2, r3
 7049 031a 684B     		ldr	r3, .L578
 7050 031c 1A70     		strb	r2, [r3]
 7051              	.L439:
2096:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 7052              		.loc 1 2096 0 is_stmt 0 discriminator 1
 7053 031e 674B     		ldr	r3, .L578
 7054 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7055 0322 012B     		cmp	r3, #1
 7056 0324 EED9     		bls	.L440
2098:..\src/interruptions.c ****         }
2099:..\src/interruptions.c ****         for (idx = 0; c_mem.exp.read_ADC_sensors_port_flag && idx < NUM_OF_ADDITIONAL_EMGS; idx++){
 7057              		.loc 1 2099 0 is_stmt 1
 7058 0326 654B     		ldr	r3, .L578
 7059 0328 0022     		movs	r2, #0
 7060 032a 1A70     		strb	r2, [r3]
 7061 032c 0CE0     		b	.L441
 7062              	.L443:
2100:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 7063              		.loc 1 2100 0 discriminator 4
 7064 032e 634B     		ldr	r3, .L578
 7065 0330 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7066 0332 634A     		ldr	r2, .L578+4
 7067 0334 0233     		adds	r3, r3, #2
 7068 0336 0021     		movs	r1, #0
 7069 0338 42F82310 		str	r1, [r2, r3, lsl #2]
2099:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 7070              		.loc 1 2099 0 discriminator 4
 7071 033c 5F4B     		ldr	r3, .L578
 7072 033e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7073 0340 0133     		adds	r3, r3, #1
 7074 0342 DAB2     		uxtb	r2, r3
 7075 0344 5D4B     		ldr	r3, .L578
 7076 0346 1A70     		strb	r2, [r3]
 7077              	.L441:
2099:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 7078              		.loc 1 2099 0 is_stmt 0 discriminator 1
 7079 0348 5E4B     		ldr	r3, .L578+8
 7080 034a 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 7081 034e 002B     		cmp	r3, #0
 7082 0350 00F03582 		beq	.L558
2099:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 7083              		.loc 1 2099 0 discriminator 3
 7084 0354 594B     		ldr	r3, .L578
 7085 0356 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7086 0358 052B     		cmp	r3, #5
 7087 035a E8D9     		bls	.L443
2067:..\src/interruptions.c ****         // PSoC is powered through uUSB
 7088              		.loc 1 2067 0 is_stmt 1
 7089 035c 2FE2     		b	.L558
 7090              	.L432:
2101:..\src/interruptions.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 165


2102:..\src/interruptions.c ****         
2103:..\src/interruptions.c ****     }
2104:..\src/interruptions.c ****     else {
2105:..\src/interruptions.c ****         // PSoC is powered through battery or power source
2106:..\src/interruptions.c ****         // (at least > 6.88 V (86% of 8 V) that is minimum charge of smallest battery (2 cells @ 20
2107:..\src/interruptions.c ****         
2108:..\src/interruptions.c ****         // Read ADC sampled value of power source tension and motor current
2109:..\src/interruptions.c ****         
2110:..\src/interruptions.c ****         if (v_count == 1000 && !tension_valid){     // Voltage reading (Step 1)
 7091              		.loc 1 2110 0
 7092 035e 5A4B     		ldr	r3, .L578+12
 7093 0360 1B68     		ldr	r3, [r3]
 7094 0362 B3F57A7F 		cmp	r3, #1000
 7095 0366 0DD1     		bne	.L445
 7096              		.loc 1 2110 0 is_stmt 0 discriminator 1
 7097 0368 584B     		ldr	r3, .L578+16
 7098 036a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7099 036c 002B     		cmp	r3, #0
 7100 036e 09D1     		bne	.L445
2111:..\src/interruptions.c ****             // After 1000 v_count cycles, dev_tension_f is stable
2112:..\src/interruptions.c ****             tension_valid = TRUE;   
 7101              		.loc 1 2112 0 is_stmt 1
 7102 0370 564B     		ldr	r3, .L578+16
 7103 0372 0122     		movs	r2, #1
 7104 0374 1A70     		strb	r2, [r3]
2113:..\src/interruptions.c ****             count = 0;
 7105              		.loc 1 2113 0
 7106 0376 564B     		ldr	r3, .L578+20
 7107 0378 0022     		movs	r2, #0
 7108 037a 1A80     		strh	r2, [r3]	@ movhi
2114:..\src/interruptions.c ****             v_count = 0;            
 7109              		.loc 1 2114 0
 7110 037c 524B     		ldr	r3, .L578+12
 7111 037e 0022     		movs	r2, #0
 7112 0380 1A60     		str	r2, [r3]
 7113 0382 2CE0     		b	.L446
 7114              	.L445:
2115:..\src/interruptions.c ****         }
2116:..\src/interruptions.c ****         else {  
2117:..\src/interruptions.c ****             // wait for battery voltage stabilization
2118:..\src/interruptions.c ****             if (v_count < 1000) {
 7115              		.loc 1 2118 0
 7116 0384 504B     		ldr	r3, .L578+12
 7117 0386 1B68     		ldr	r3, [r3]
 7118 0388 B3F57A7F 		cmp	r3, #1000
 7119 038c 04D2     		bcs	.L447
2119:..\src/interruptions.c ****                 v_count = v_count + 1;
 7120              		.loc 1 2119 0
 7121 038e 4E4B     		ldr	r3, .L578+12
 7122 0390 1B68     		ldr	r3, [r3]
 7123 0392 0133     		adds	r3, r3, #1
 7124 0394 4C4A     		ldr	r2, .L578+12
 7125 0396 1360     		str	r3, [r2]
 7126              	.L447:
2120:..\src/interruptions.c ****             }
2121:..\src/interruptions.c ****             for(idx = 0; idx < NUM_OF_MOTORS; idx++) {
 7127              		.loc 1 2121 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 166


 7128 0398 484B     		ldr	r3, .L578
 7129 039a 0022     		movs	r2, #0
 7130 039c 1A70     		strb	r2, [r3]
 7131 039e 1AE0     		b	.L448
 7132              	.L449:
2122:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 7133              		.loc 1 2122 0 discriminator 3
 7134 03a0 464B     		ldr	r3, .L578
 7135 03a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7136 03a4 1C46     		mov	r4, r3
 7137 03a6 454B     		ldr	r3, .L578
 7138 03a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7139 03aa 1A46     		mov	r2, r3
 7140 03ac 494B     		ldr	r3, .L578+24
 7141 03ae 53F82200 		ldr	r0, [r3, r2, lsl #2]
 7142 03b2 424B     		ldr	r3, .L578
 7143 03b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7144 03b6 DB00     		lsls	r3, r3, #3
 7145 03b8 474A     		ldr	r2, .L578+28
 7146 03ba 1344     		add	r3, r3, r2
 7147 03bc 1946     		mov	r1, r3
 7148 03be FFF7FEFF 		bl	filter
 7149 03c2 0246     		mov	r2, r0
 7150 03c4 454B     		ldr	r3, .L578+32
 7151 03c6 43F82420 		str	r2, [r3, r4, lsl #2]
2121:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 7152              		.loc 1 2121 0 discriminator 3
 7153 03ca 3C4B     		ldr	r3, .L578
 7154 03cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7155 03ce 0133     		adds	r3, r3, #1
 7156 03d0 DAB2     		uxtb	r2, r3
 7157 03d2 3A4B     		ldr	r3, .L578
 7158 03d4 1A70     		strb	r2, [r3]
 7159              	.L448:
2121:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 7160              		.loc 1 2121 0 is_stmt 0 discriminator 1
 7161 03d6 394B     		ldr	r3, .L578
 7162 03d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7163 03da 012B     		cmp	r3, #1
 7164 03dc E0D9     		bls	.L449
 7165              	.L446:
2123:..\src/interruptions.c ****             }
2124:..\src/interruptions.c ****         }
2125:..\src/interruptions.c **** 
2126:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_MOTORS; idx++){
 7166              		.loc 1 2126 0 is_stmt 1
 7167 03de 374B     		ldr	r3, .L578
 7168 03e0 0022     		movs	r2, #0
 7169 03e2 1A70     		strb	r2, [r3]
 7170 03e4 17E0     		b	.L450
 7171              	.L452:
2127:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 7172              		.loc 1 2127 0
 7173 03e6 354B     		ldr	r3, .L578
 7174 03e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7175 03ea 1946     		mov	r1, r3
 7176 03ec 3C4A     		ldr	r2, .L578+36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 167


 7177 03ee 0B46     		mov	r3, r1
 7178 03f0 DB00     		lsls	r3, r3, #3
 7179 03f2 5B1A     		subs	r3, r3, r1
 7180 03f4 1B01     		lsls	r3, r3, #4
 7181 03f6 1344     		add	r3, r3, r2
 7182 03f8 E133     		adds	r3, r3, #225
 7183 03fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7184 03fc 002B     		cmp	r3, #0
 7185 03fe 04D0     		beq	.L451
2128:..\src/interruptions.c ****                 pwm_limit_search(idx);                 //only for 12V motor
 7186              		.loc 1 2128 0
 7187 0400 2E4B     		ldr	r3, .L578
 7188 0402 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7189 0404 1846     		mov	r0, r3
 7190 0406 FFF7FEFF 		bl	pwm_limit_search
 7191              	.L451:
2126:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 7192              		.loc 1 2126 0 discriminator 2
 7193 040a 2C4B     		ldr	r3, .L578
 7194 040c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7195 040e 0133     		adds	r3, r3, #1
 7196 0410 DAB2     		uxtb	r2, r3
 7197 0412 2A4B     		ldr	r3, .L578
 7198 0414 1A70     		strb	r2, [r3]
 7199              	.L450:
2126:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 7200              		.loc 1 2126 0 is_stmt 0 discriminator 1
 7201 0416 294B     		ldr	r3, .L578
 7202 0418 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7203 041a 012B     		cmp	r3, #1
 7204 041c E3D9     		bls	.L452
2129:..\src/interruptions.c ****         }
2130:..\src/interruptions.c ****         
2131:..\src/interruptions.c ****         // Filter and Set currents
2132:..\src/interruptions.c ****         if (g_mem.motor[0].motor_driver_type == DRIVER_MC33887) {
 7205              		.loc 1 2132 0 is_stmt 1
 7206 041e 304B     		ldr	r3, .L578+36
 7207 0420 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 7208 0424 002B     		cmp	r3, #0
 7209 0426 21D1     		bne	.L453
2133:..\src/interruptions.c ****             g_meas[g_mem.motor[0].encoder_line].curr = filter((int16) (((int32)(ADC_buf[1] - 1648) 
 7210              		.loc 1 2133 0
 7211 0428 2D4B     		ldr	r3, .L578+36
 7212 042a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7213 042e 1C46     		mov	r4, r3
 7214 0430 2C4B     		ldr	r3, .L578+40
 7215 0432 B3F90230 		ldrsh	r3, [r3, #2]
 7216 0436 A3F5CE63 		sub	r3, r3, #1648
 7217 043a 45F66A02 		movw	r2, #22634
 7218 043e 02FB03F3 		mul	r3, r2, r3
 7219 0442 5B13     		asrs	r3, r3, #13
 7220 0444 1BB2     		sxth	r3, r3
 7221 0446 1A46     		mov	r2, r3
 7222 0448 274B     		ldr	r3, .L578+44
 7223 044a 93F90030 		ldrsb	r3, [r3]
 7224 044e 03FB02F3 		mul	r3, r3, r2
 7225 0452 2649     		ldr	r1, .L578+48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 168


 7226 0454 1846     		mov	r0, r3
 7227 0456 FFF7FEFF 		bl	filter
 7228 045a 0146     		mov	r1, r0
 7229 045c 244A     		ldr	r2, .L578+52
 7230 045e 3423     		movs	r3, #52
 7231 0460 03FB04F3 		mul	r3, r3, r4
 7232 0464 1344     		add	r3, r3, r2
 7233 0466 0C33     		adds	r3, r3, #12
 7234 0468 1960     		str	r1, [r3]
 7235 046a 5FE0     		b	.L454
 7236              	.L453:
2134:..\src/interruptions.c ****         } 
2135:..\src/interruptions.c ****         else {
2136:..\src/interruptions.c ****             if (g_mem.motor[0].motor_driver_type == DRIVER_BRUSHLESS) {
 7237              		.loc 1 2136 0
 7238 046c 1C4B     		ldr	r3, .L578+36
 7239 046e 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 7240 0472 022B     		cmp	r3, #2
 7241 0474 3ED1     		bne	.L455
2137:..\src/interruptions.c ****                 // Direct measure in range [2V, 4V] referenced to 4.88V meas supply and up to 5A cu
2138:..\src/interruptions.c ****                 g_meas[g_mem.motor[0].encoder_line].curr = filter((int16) (((int32)(ADC_buf[1] - 16
 7242              		.loc 1 2138 0
 7243 0476 1A4B     		ldr	r3, .L578+36
 7244 0478 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7245 047c 1C46     		mov	r4, r3
 7246 047e 194B     		ldr	r3, .L578+40
 7247 0480 B3F90230 		ldrsh	r3, [r3, #2]
 7248 0484 A3F28F63 		subw	r3, r3, #1679
 7249 0488 45F65072 		movw	r2, #24400
 7250 048c 02FB03F3 		mul	r3, r2, r3
 7251 0490 5B13     		asrs	r3, r3, #13
 7252 0492 1BB2     		sxth	r3, r3
 7253 0494 1A46     		mov	r2, r3
 7254 0496 144B     		ldr	r3, .L578+44
 7255 0498 93F90030 		ldrsb	r3, [r3]
 7256 049c 03FB02F3 		mul	r3, r3, r2
 7257 04a0 1249     		ldr	r1, .L578+48
 7258 04a2 1846     		mov	r0, r3
 7259 04a4 FFF7FEFF 		bl	filter
 7260 04a8 0146     		mov	r1, r0
 7261 04aa 114A     		ldr	r2, .L578+52
 7262 04ac 3423     		movs	r3, #52
 7263 04ae 03FB04F3 		mul	r3, r3, r4
 7264 04b2 1344     		add	r3, r3, r2
 7265 04b4 0C33     		adds	r3, r3, #12
 7266 04b6 1960     		str	r1, [r3]
 7267 04b8 38E0     		b	.L454
 7268              	.L579:
 7269 04ba 00BF     		.align	2
 7270              	.L578:
 7271 04bc 72010000 		.word	idx.10747
 7272 04c0 00000000 		.word	g_adc_meas
 7273 04c4 00000000 		.word	c_mem
 7274 04c8 74010000 		.word	v_count.10746
 7275 04cc 00000000 		.word	tension_valid
 7276 04d0 70010000 		.word	count.10745
 7277 04d4 00000000 		.word	dev_tension
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 169


 7278 04d8 00000000 		.word	filt_v
 7279 04dc 00000000 		.word	dev_tension_f
 7280 04e0 00000000 		.word	g_mem
 7281 04e4 00000000 		.word	ADC_buf
 7282 04e8 00000000 		.word	pwm_sign
 7283 04ec 00000000 		.word	filt_i
 7284 04f0 00000000 		.word	g_meas
 7285              	.L455:
2139:..\src/interruptions.c ****             } else { // [GS]
2140:..\src/interruptions.c ****                 g_meas[g_mem.motor[0].encoder_line].curr = ((int16) ((int32)((ADC_buf[1] - 1635) * 
 7286              		.loc 1 2140 0
 7287 04f4 C04B     		ldr	r3, .L580
 7288 04f6 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7289 04fa 1846     		mov	r0, r3
 7290 04fc BF4B     		ldr	r3, .L580+4
 7291 04fe B3F90230 		ldrsh	r3, [r3, #2]
 7292 0502 A3F26362 		subw	r2, r3, #1635
 7293 0506 1346     		mov	r3, r2
 7294 0508 1B01     		lsls	r3, r3, #4
 7295 050a 9B1A     		subs	r3, r3, r2
 7296 050c 5B01     		lsls	r3, r3, #5
 7297 050e 1B11     		asrs	r3, r3, #4
 7298 0510 1BB2     		sxth	r3, r3
 7299 0512 1A46     		mov	r2, r3
 7300 0514 BA4B     		ldr	r3, .L580+8
 7301 0516 93F90030 		ldrsb	r3, [r3]
 7302 051a 03FB02F2 		mul	r2, r3, r2
 7303 051e B949     		ldr	r1, .L580+12
 7304 0520 3423     		movs	r3, #52
 7305 0522 03FB00F3 		mul	r3, r3, r0
 7306 0526 0B44     		add	r3, r3, r1
 7307 0528 0C33     		adds	r3, r3, #12
 7308 052a 1A60     		str	r2, [r3]
 7309              	.L454:
2141:..\src/interruptions.c ****             }
2142:..\src/interruptions.c ****         }
2143:..\src/interruptions.c ****         
2144:..\src/interruptions.c **** 
2145:..\src/interruptions.c ****         // Calculate current estimation and put it in the second part of the current measurement ar
2146:..\src/interruptions.c **** 		g_meas[g_mem.motor[0].encoder_line].estim_curr = (int16) filter(((int32) g_meas[g_mem.motor[0].en
 7310              		.loc 1 2146 0
 7311 052c B24B     		ldr	r3, .L580
 7312 052e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7313 0532 1D46     		mov	r5, r3
 7314 0534 B04B     		ldr	r3, .L580
 7315 0536 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7316 053a 1946     		mov	r1, r3
 7317 053c B14A     		ldr	r2, .L580+12
 7318 053e 3423     		movs	r3, #52
 7319 0540 03FB01F3 		mul	r3, r3, r1
 7320 0544 1344     		add	r3, r3, r2
 7321 0546 0C33     		adds	r3, r3, #12
 7322 0548 1C68     		ldr	r4, [r3]
 7323 054a AB4B     		ldr	r3, .L580
 7324 054c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7325 0550 1946     		mov	r1, r3
 7326 0552 AC4A     		ldr	r2, .L580+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 170


 7327 0554 3423     		movs	r3, #52
 7328 0556 03FB01F3 		mul	r3, r3, r1
 7329 055a 1344     		add	r3, r3, r2
 7330 055c 1A68     		ldr	r2, [r3]
 7331 055e A64B     		ldr	r3, .L580
 7332 0560 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7333 0564 1846     		mov	r0, r3
 7334 0566 A449     		ldr	r1, .L580
 7335 0568 0346     		mov	r3, r0
 7336 056a 5B00     		lsls	r3, r3, #1
 7337 056c 0344     		add	r3, r3, r0
 7338 056e 1B01     		lsls	r3, r3, #4
 7339 0570 0B44     		add	r3, r3, r1
 7340 0572 03F29513 		addw	r3, r3, #405
 7341 0576 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7342 0578 42FA03F6 		asr	r6, r2, r3
 7343 057c 9E4B     		ldr	r3, .L580
 7344 057e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7345 0582 1946     		mov	r1, r3
 7346 0584 9F4A     		ldr	r2, .L580+12
 7347 0586 3423     		movs	r3, #52
 7348 0588 03FB01F3 		mul	r3, r3, r1
 7349 058c 1344     		add	r3, r3, r2
 7350 058e 1C33     		adds	r3, r3, #28
 7351 0590 1A68     		ldr	r2, [r3]
 7352 0592 994B     		ldr	r3, .L580
 7353 0594 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7354 0598 1846     		mov	r0, r3
 7355 059a 9749     		ldr	r1, .L580
 7356 059c 0346     		mov	r3, r0
 7357 059e 5B00     		lsls	r3, r3, #1
 7358 05a0 0344     		add	r3, r3, r0
 7359 05a2 1B01     		lsls	r3, r3, #4
 7360 05a4 0B44     		add	r3, r3, r1
 7361 05a6 03F29513 		addw	r3, r3, #405
 7362 05aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7363 05ac 42FA03FE 		asr	lr, r2, r3
 7364 05b0 954B     		ldr	r3, .L580+16
 7365 05b2 1A68     		ldr	r2, [r3]
 7366 05b4 904B     		ldr	r3, .L580
 7367 05b6 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7368 05ba 1846     		mov	r0, r3
 7369 05bc 8E49     		ldr	r1, .L580
 7370 05be 0346     		mov	r3, r0
 7371 05c0 5B00     		lsls	r3, r3, #1
 7372 05c2 0344     		add	r3, r3, r0
 7373 05c4 1B01     		lsls	r3, r3, #4
 7374 05c6 0B44     		add	r3, r3, r1
 7375 05c8 03F29513 		addw	r3, r3, #405
 7376 05cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7377 05ce 42FA03F3 		asr	r3, r2, r3
 7378 05d2 7246     		mov	r2, lr
 7379 05d4 3146     		mov	r1, r6
 7380 05d6 0020     		movs	r0, #0
 7381 05d8 FFF7FEFF 		bl	curr_estim
 7382 05dc 0346     		mov	r3, r0
 7383 05de E31A     		subs	r3, r4, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 171


 7384 05e0 8A49     		ldr	r1, .L580+20
 7385 05e2 1846     		mov	r0, r3
 7386 05e4 FFF7FEFF 		bl	filter
 7387 05e8 0346     		mov	r3, r0
 7388 05ea 1BB2     		sxth	r3, r3
 7389 05ec 1946     		mov	r1, r3
 7390 05ee 854A     		ldr	r2, .L580+12
 7391 05f0 3423     		movs	r3, #52
 7392 05f2 03FB05F3 		mul	r3, r3, r5
 7393 05f6 1344     		add	r3, r3, r2
 7394 05f8 1033     		adds	r3, r3, #16
 7395 05fa 1960     		str	r1, [r3]
2147:..\src/interruptions.c ****         
2148:..\src/interruptions.c ****         // Read also 2nd power current (if necessary)
2149:..\src/interruptions.c ****         if (NUM_OF_ANALOG_INPUTS > 4) {
 7396              		.loc 1 2149 0
 7397 05fc 844B     		ldr	r3, .L580+24
 7398 05fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7399 0600 042B     		cmp	r3, #4
 7400 0602 40F2D280 		bls	.L456
2150:..\src/interruptions.c ****             // Filter and Set currents
2151:..\src/interruptions.c ****             if (g_mem.motor[1].motor_driver_type == DRIVER_MC33887) {
 7401              		.loc 1 2151 0
 7402 0606 7C4B     		ldr	r3, .L580
 7403 0608 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 7404 060c 002B     		cmp	r3, #0
 7405 060e 21D1     		bne	.L457
2152:..\src/interruptions.c ****                 g_meas[g_mem.motor[1].encoder_line].curr = filter((int16) (((int32)(ADC_buf[5] - 16
 7406              		.loc 1 2152 0
 7407 0610 794B     		ldr	r3, .L580
 7408 0612 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7409 0616 1C46     		mov	r4, r3
 7410 0618 784B     		ldr	r3, .L580+4
 7411 061a B3F90A30 		ldrsh	r3, [r3, #10]
 7412 061e A3F5CE63 		sub	r3, r3, #1648
 7413 0622 45F66A02 		movw	r2, #22634
 7414 0626 02FB03F3 		mul	r3, r2, r3
 7415 062a 5B13     		asrs	r3, r3, #13
 7416 062c 1BB2     		sxth	r3, r3
 7417 062e 1A46     		mov	r2, r3
 7418 0630 734B     		ldr	r3, .L580+8
 7419 0632 93F90130 		ldrsb	r3, [r3, #1]
 7420 0636 03FB02F3 		mul	r3, r3, r2
 7421 063a 7649     		ldr	r1, .L580+28
 7422 063c 1846     		mov	r0, r3
 7423 063e FFF7FEFF 		bl	filter
 7424 0642 0146     		mov	r1, r0
 7425 0644 6F4A     		ldr	r2, .L580+12
 7426 0646 3423     		movs	r3, #52
 7427 0648 03FB04F3 		mul	r3, r3, r4
 7428 064c 1344     		add	r3, r3, r2
 7429 064e 0C33     		adds	r3, r3, #12
 7430 0650 1960     		str	r1, [r3]
 7431 0652 42E0     		b	.L458
 7432              	.L457:
2153:..\src/interruptions.c ****             } 
2154:..\src/interruptions.c ****             else {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 172


2155:..\src/interruptions.c ****                 if (g_mem.motor[1].motor_driver_type == DRIVER_BRUSHLESS) {
 7433              		.loc 1 2155 0
 7434 0654 684B     		ldr	r3, .L580
 7435 0656 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 7436 065a 022B     		cmp	r3, #2
 7437 065c 21D1     		bne	.L459
2156:..\src/interruptions.c ****                     // Direct measure in range [2V, 4V] referenced to 4.88V meas supply and up to 5
2157:..\src/interruptions.c ****                     g_meas[g_mem.motor[1].encoder_line].curr = filter((int16) (((int32)(ADC_buf[5] 
 7438              		.loc 1 2157 0
 7439 065e 664B     		ldr	r3, .L580
 7440 0660 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7441 0664 1C46     		mov	r4, r3
 7442 0666 654B     		ldr	r3, .L580+4
 7443 0668 B3F90A30 		ldrsh	r3, [r3, #10]
 7444 066c A3F28F63 		subw	r3, r3, #1679
 7445 0670 45F65072 		movw	r2, #24400
 7446 0674 02FB03F3 		mul	r3, r2, r3
 7447 0678 5B13     		asrs	r3, r3, #13
 7448 067a 1BB2     		sxth	r3, r3
 7449 067c 1A46     		mov	r2, r3
 7450 067e 604B     		ldr	r3, .L580+8
 7451 0680 93F90130 		ldrsb	r3, [r3, #1]
 7452 0684 03FB02F3 		mul	r3, r3, r2
 7453 0688 6249     		ldr	r1, .L580+28
 7454 068a 1846     		mov	r0, r3
 7455 068c FFF7FEFF 		bl	filter
 7456 0690 0146     		mov	r1, r0
 7457 0692 5C4A     		ldr	r2, .L580+12
 7458 0694 3423     		movs	r3, #52
 7459 0696 03FB04F3 		mul	r3, r3, r4
 7460 069a 1344     		add	r3, r3, r2
 7461 069c 0C33     		adds	r3, r3, #12
 7462 069e 1960     		str	r1, [r3]
 7463 06a0 1BE0     		b	.L458
 7464              	.L459:
2158:..\src/interruptions.c ****                 } else { // [GS]
2159:..\src/interruptions.c ****                     g_meas[g_mem.motor[1].encoder_line].curr = ((int16) ((int32)((ADC_buf[5] - 1635
 7465              		.loc 1 2159 0
 7466 06a2 554B     		ldr	r3, .L580
 7467 06a4 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7468 06a8 1846     		mov	r0, r3
 7469 06aa 544B     		ldr	r3, .L580+4
 7470 06ac B3F90A30 		ldrsh	r3, [r3, #10]
 7471 06b0 A3F26362 		subw	r2, r3, #1635
 7472 06b4 1346     		mov	r3, r2
 7473 06b6 1B01     		lsls	r3, r3, #4
 7474 06b8 9B1A     		subs	r3, r3, r2
 7475 06ba 5B01     		lsls	r3, r3, #5
 7476 06bc 1B11     		asrs	r3, r3, #4
 7477 06be 1BB2     		sxth	r3, r3
 7478 06c0 1A46     		mov	r2, r3
 7479 06c2 4F4B     		ldr	r3, .L580+8
 7480 06c4 93F90130 		ldrsb	r3, [r3, #1]
 7481 06c8 03FB02F2 		mul	r2, r3, r2
 7482 06cc 4D49     		ldr	r1, .L580+12
 7483 06ce 3423     		movs	r3, #52
 7484 06d0 03FB00F3 		mul	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 173


 7485 06d4 0B44     		add	r3, r3, r1
 7486 06d6 0C33     		adds	r3, r3, #12
 7487 06d8 1A60     		str	r2, [r3]
 7488              	.L458:
2160:..\src/interruptions.c ****                 }
2161:..\src/interruptions.c ****             }
2162:..\src/interruptions.c ****             
2163:..\src/interruptions.c ****             g_meas[g_mem.motor[1].encoder_line].estim_curr = (int16) filter(((int32) g_meas[g_mem.m
 7489              		.loc 1 2163 0
 7490 06da 474B     		ldr	r3, .L580
 7491 06dc 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7492 06e0 1D46     		mov	r5, r3
 7493 06e2 454B     		ldr	r3, .L580
 7494 06e4 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7495 06e8 1946     		mov	r1, r3
 7496 06ea 464A     		ldr	r2, .L580+12
 7497 06ec 3423     		movs	r3, #52
 7498 06ee 03FB01F3 		mul	r3, r3, r1
 7499 06f2 1344     		add	r3, r3, r2
 7500 06f4 0C33     		adds	r3, r3, #12
 7501 06f6 1C68     		ldr	r4, [r3]
 7502 06f8 3F4B     		ldr	r3, .L580
 7503 06fa 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7504 06fe 1946     		mov	r1, r3
 7505 0700 404A     		ldr	r2, .L580+12
 7506 0702 3423     		movs	r3, #52
 7507 0704 03FB01F3 		mul	r3, r3, r1
 7508 0708 1344     		add	r3, r3, r2
 7509 070a 1A68     		ldr	r2, [r3]
 7510 070c 3A4B     		ldr	r3, .L580
 7511 070e 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7512 0712 1846     		mov	r0, r3
 7513 0714 3849     		ldr	r1, .L580
 7514 0716 0346     		mov	r3, r0
 7515 0718 5B00     		lsls	r3, r3, #1
 7516 071a 0344     		add	r3, r3, r0
 7517 071c 1B01     		lsls	r3, r3, #4
 7518 071e 0B44     		add	r3, r3, r1
 7519 0720 03F29513 		addw	r3, r3, #405
 7520 0724 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7521 0726 42FA03F6 		asr	r6, r2, r3
 7522 072a 334B     		ldr	r3, .L580
 7523 072c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7524 0730 1946     		mov	r1, r3
 7525 0732 344A     		ldr	r2, .L580+12
 7526 0734 3423     		movs	r3, #52
 7527 0736 03FB01F3 		mul	r3, r3, r1
 7528 073a 1344     		add	r3, r3, r2
 7529 073c 1C33     		adds	r3, r3, #28
 7530 073e 1A68     		ldr	r2, [r3]
 7531 0740 2D4B     		ldr	r3, .L580
 7532 0742 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7533 0746 1846     		mov	r0, r3
 7534 0748 2B49     		ldr	r1, .L580
 7535 074a 0346     		mov	r3, r0
 7536 074c 5B00     		lsls	r3, r3, #1
 7537 074e 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 174


 7538 0750 1B01     		lsls	r3, r3, #4
 7539 0752 0B44     		add	r3, r3, r1
 7540 0754 03F29513 		addw	r3, r3, #405
 7541 0758 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7542 075a 42FA03FE 		asr	lr, r2, r3
 7543 075e 2A4B     		ldr	r3, .L580+16
 7544 0760 1A69     		ldr	r2, [r3, #16]
 7545 0762 254B     		ldr	r3, .L580
 7546 0764 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7547 0768 1846     		mov	r0, r3
 7548 076a 2349     		ldr	r1, .L580
 7549 076c 0346     		mov	r3, r0
 7550 076e 5B00     		lsls	r3, r3, #1
 7551 0770 0344     		add	r3, r3, r0
 7552 0772 1B01     		lsls	r3, r3, #4
 7553 0774 0B44     		add	r3, r3, r1
 7554 0776 03F29513 		addw	r3, r3, #405
 7555 077a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7556 077c 42FA03F3 		asr	r3, r2, r3
 7557 0780 7246     		mov	r2, lr
 7558 0782 3146     		mov	r1, r6
 7559 0784 0120     		movs	r0, #1
 7560 0786 FFF7FEFF 		bl	curr_estim
 7561 078a 0346     		mov	r3, r0
 7562 078c E31A     		subs	r3, r4, r3
 7563 078e 2249     		ldr	r1, .L580+32
 7564 0790 1846     		mov	r0, r3
 7565 0792 FFF7FEFF 		bl	filter
 7566 0796 0346     		mov	r3, r0
 7567 0798 1BB2     		sxth	r3, r3
 7568 079a 1946     		mov	r1, r3
 7569 079c 194A     		ldr	r2, .L580+12
 7570 079e 3423     		movs	r3, #52
 7571 07a0 03FB05F3 		mul	r3, r3, r5
 7572 07a4 1344     		add	r3, r3, r2
 7573 07a6 1033     		adds	r3, r3, #16
 7574 07a8 1960     		str	r1, [r3]
 7575              	.L456:
2164:..\src/interruptions.c ****         }
2165:..\src/interruptions.c ****     
2166:..\src/interruptions.c ****         // Check Interrupt 
2167:..\src/interruptions.c ****     
2168:..\src/interruptions.c ****         if (interrupt_flag){
 7576              		.loc 1 2168 0
 7577 07aa 1C4B     		ldr	r3, .L580+36
 7578 07ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7579 07ae 002B     		cmp	r3, #0
 7580 07b0 06D0     		beq	.L444
2169:..\src/interruptions.c ****             interrupt_flag = FALSE;
 7581              		.loc 1 2169 0
 7582 07b2 1A4B     		ldr	r3, .L580+36
 7583 07b4 0022     		movs	r2, #0
 7584 07b6 1A70     		strb	r2, [r3]
2170:..\src/interruptions.c ****             interrupt_manager();
 7585              		.loc 1 2170 0
 7586 07b8 FFF7FEFF 		bl	interrupt_manager
 7587 07bc 00E0     		b	.L444
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 175


 7588              	.L558:
2067:..\src/interruptions.c ****         // PSoC is powered through uUSB
 7589              		.loc 1 2067 0
 7590 07be 00BF     		nop
 7591              	.L444:
2171:..\src/interruptions.c ****         }
2172:..\src/interruptions.c **** 
2173:..\src/interruptions.c ****     }
2174:..\src/interruptions.c ****     
2175:..\src/interruptions.c ****     // Read EMG (always even if the board is not powered)
2176:..\src/interruptions.c ****         
2177:..\src/interruptions.c ****     // if calibration is not needed go to "normal execution"
2178:..\src/interruptions.c ****     if (!c_mem.emg.emg_calibration_flag){
 7592              		.loc 1 2178 0
 7593 07c0 174B     		ldr	r3, .L580+40
 7594 07c2 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 7595 07c6 002B     		cmp	r3, #0
 7596 07c8 05D1     		bne	.L460
2179:..\src/interruptions.c ****         emg_1_status = NORMAL; // normal execution
 7597              		.loc 1 2179 0
 7598 07ca 164B     		ldr	r3, .L580+44
 7599 07cc 0022     		movs	r2, #0
 7600 07ce 1A70     		strb	r2, [r3]
2180:..\src/interruptions.c ****         emg_2_status = NORMAL; // normal execution
 7601              		.loc 1 2180 0
 7602 07d0 154B     		ldr	r3, .L580+48
 7603 07d2 0022     		movs	r2, #0
 7604 07d4 1A70     		strb	r2, [r3]
 7605              	.L460:
2181:..\src/interruptions.c ****     }
2182:..\src/interruptions.c **** 
2183:..\src/interruptions.c ****     // EMG 1 calibration state machine
2184:..\src/interruptions.c ****    
2185:..\src/interruptions.c ****     // Calibration state machine
2186:..\src/interruptions.c ****     switch(emg_1_status) {
 7606              		.loc 1 2186 0
 7607 07d6 134B     		ldr	r3, .L580+44
 7608 07d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7609 07da 032B     		cmp	r3, #3
 7610 07dc 00F2FC80 		bhi	.L559
 7611 07e0 01A2     		adr	r2, .L463
 7612 07e2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7613 07e6 00BF     		.p2align 2
 7614              	.L463:
 7615 07e8 2D080000 		.word	.L462+1
 7616 07ec DD080000 		.word	.L464+1
 7617 07f0 F3080000 		.word	.L465+1
 7618 07f4 2F090000 		.word	.L466+1
 7619              		.p2align 1
 7620              	.L581:
 7621              		.align	2
 7622              	.L580:
 7623 07f8 00000000 		.word	g_mem
 7624 07fc 00000000 		.word	ADC_buf
 7625 0800 00000000 		.word	pwm_sign
 7626 0804 00000000 		.word	g_meas
 7627 0808 00000000 		.word	g_ref
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 176


 7628 080c 00000000 		.word	filt_curr_diff
 7629 0810 00000000 		.word	NUM_OF_ANALOG_INPUTS
 7630 0814 08000000 		.word	filt_i+8
 7631 0818 08000000 		.word	filt_curr_diff+8
 7632 081c 00000000 		.word	interrupt_flag
 7633 0820 00000000 		.word	c_mem
 7634 0824 00000000 		.word	emg_1_status
 7635 0828 00000000 		.word	emg_2_status
 7636              	.L462:
2187:..\src/interruptions.c ****         case NORMAL: // normal execution
2188:..\src/interruptions.c ****             
2189:..\src/interruptions.c ****             if (g_mem.dev.dev_type != AIR_CHAMBERS_FB && g_mem.dev.dev_type != OTBK_ACT_WRIST_MS){
 7637              		.loc 1 2189 0
 7638 082c AE4B     		ldr	r3, .L582
 7639 082e 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 7640 0832 022B     		cmp	r3, #2
 7641 0834 13D0     		beq	.L467
 7642              		.loc 1 2189 0 is_stmt 0 discriminator 1
 7643 0836 AC4B     		ldr	r3, .L582
 7644 0838 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 7645 083c 032B     		cmp	r3, #3
 7646 083e 0ED0     		beq	.L467
2190:..\src/interruptions.c ****                 i_aux = ((int32)(ADC_buf[2 + c_mem.emg.switch_emg] - 1639) * 87) >> 5;  //map range
 7647              		.loc 1 2190 0 is_stmt 1
 7648 0840 AA4B     		ldr	r3, .L582+4
 7649 0842 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7650 0846 0233     		adds	r3, r3, #2
 7651 0848 A94A     		ldr	r2, .L582+8
 7652 084a 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7653 084e A3F26763 		subw	r3, r3, #1639
 7654 0852 5722     		movs	r2, #87
 7655 0854 02FB03F3 		mul	r3, r2, r3
 7656 0858 5B11     		asrs	r3, r3, #5
 7657 085a 7B60     		str	r3, [r7, #4]
 7658 085c 07E0     		b	.L468
 7659              	.L467:
2191:..\src/interruptions.c ****             }
2192:..\src/interruptions.c ****             else {  // Use additional ADC channels, so the signal does not pass through AVAGO isola
2193:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[2 + c_mem.emg.switch_emg]);
 7660              		.loc 1 2193 0
 7661 085e A34B     		ldr	r3, .L582+4
 7662 0860 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7663 0864 0233     		adds	r3, r3, #2
 7664 0866 A24A     		ldr	r2, .L582+8
 7665 0868 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7666 086c 7B60     		str	r3, [r7, #4]
 7667              	.L468:
2194:..\src/interruptions.c ****             }
2195:..\src/interruptions.c ****             
2196:..\src/interruptions.c ****             if (i_aux < 0) 
 7668              		.loc 1 2196 0
 7669 086e 7B68     		ldr	r3, [r7, #4]
 7670 0870 002B     		cmp	r3, #0
 7671 0872 01DA     		bge	.L469
2197:..\src/interruptions.c ****                 i_aux = 0;
 7672              		.loc 1 2197 0
 7673 0874 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 177


 7674 0876 7B60     		str	r3, [r7, #4]
 7675              	.L469:
2198:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[0]);
 7676              		.loc 1 2198 0
 7677 0878 9E49     		ldr	r1, .L582+12
 7678 087a 7868     		ldr	r0, [r7, #4]
 7679 087c FFF7FEFF 		bl	filter
 7680 0880 7860     		str	r0, [r7, #4]
2199:..\src/interruptions.c ****             i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[0];
 7681              		.loc 1 2199 0
 7682 0882 7B68     		ldr	r3, [r7, #4]
 7683 0884 9B02     		lsls	r3, r3, #10
 7684 0886 1A46     		mov	r2, r3
 7685 0888 974B     		ldr	r3, .L582
 7686 088a D3F8F431 		ldr	r3, [r3, #500]
 7687 088e B2FBF3F3 		udiv	r3, r2, r3
 7688 0892 7B60     		str	r3, [r7, #4]
2200:..\src/interruptions.c **** 
2201:..\src/interruptions.c ****             if (interrupt_flag){
 7689              		.loc 1 2201 0
 7690 0894 984B     		ldr	r3, .L582+16
 7691 0896 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7692 0898 002B     		cmp	r3, #0
 7693 089a 04D0     		beq	.L470
2202:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7694              		.loc 1 2202 0
 7695 089c 964B     		ldr	r3, .L582+16
 7696 089e 0022     		movs	r2, #0
 7697 08a0 1A70     		strb	r2, [r3]
2203:..\src/interruptions.c ****                 interrupt_manager();
 7698              		.loc 1 2203 0
 7699 08a2 FFF7FEFF 		bl	interrupt_manager
 7700              	.L470:
2204:..\src/interruptions.c ****             }
2205:..\src/interruptions.c ****             //Saturation
2206:..\src/interruptions.c ****             if (i_aux < 0)
 7701              		.loc 1 2206 0
 7702 08a6 7B68     		ldr	r3, [r7, #4]
 7703 08a8 002B     		cmp	r3, #0
 7704 08aa 02DA     		bge	.L471
2207:..\src/interruptions.c ****                 i_aux = 0;
 7705              		.loc 1 2207 0
 7706 08ac 0023     		movs	r3, #0
 7707 08ae 7B60     		str	r3, [r7, #4]
 7708 08b0 06E0     		b	.L472
 7709              	.L471:
2208:..\src/interruptions.c ****             else 
2209:..\src/interruptions.c ****                 if (i_aux > 1024) 
 7710              		.loc 1 2209 0
 7711 08b2 7B68     		ldr	r3, [r7, #4]
 7712 08b4 B3F5806F 		cmp	r3, #1024
 7713 08b8 02DD     		ble	.L472
2210:..\src/interruptions.c ****                     i_aux = 1024;
 7714              		.loc 1 2210 0
 7715 08ba 4FF48063 		mov	r3, #1024
 7716 08be 7B60     		str	r3, [r7, #4]
 7717              	.L472:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 178


2211:..\src/interruptions.c ****             
2212:..\src/interruptions.c ****             g_adc_meas.emg[0] = i_aux;
 7718              		.loc 1 2212 0
 7719 08c0 8E4A     		ldr	r2, .L582+20
 7720 08c2 7B68     		ldr	r3, [r7, #4]
 7721 08c4 1360     		str	r3, [r2]
2213:..\src/interruptions.c **** 
2214:..\src/interruptions.c ****             if (interrupt_flag){
 7722              		.loc 1 2214 0
 7723 08c6 8C4B     		ldr	r3, .L582+16
 7724 08c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7725 08ca 002B     		cmp	r3, #0
 7726 08cc 00F08680 		beq	.L560
2215:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7727              		.loc 1 2215 0
 7728 08d0 894B     		ldr	r3, .L582+16
 7729 08d2 0022     		movs	r2, #0
 7730 08d4 1A70     		strb	r2, [r3]
2216:..\src/interruptions.c ****                 interrupt_manager();
 7731              		.loc 1 2216 0
 7732 08d6 FFF7FEFF 		bl	interrupt_manager
2217:..\src/interruptions.c ****             }
2218:..\src/interruptions.c ****             
2219:..\src/interruptions.c ****             break;
 7733              		.loc 1 2219 0
 7734 08da 7FE0     		b	.L560
 7735              	.L464:
2220:..\src/interruptions.c **** 
2221:..\src/interruptions.c ****         case RESET: // reset variables
2222:..\src/interruptions.c ****             emg_counter_1 = 0;
 7736              		.loc 1 2222 0
 7737 08dc 884B     		ldr	r3, .L582+24
 7738 08de 0022     		movs	r2, #0
 7739 08e0 1A80     		strh	r2, [r3]	@ movhi
2223:..\src/interruptions.c ****             g_mem.emg.emg_max_value[0] = 0;
 7740              		.loc 1 2223 0
 7741 08e2 814B     		ldr	r3, .L582
 7742 08e4 0022     		movs	r2, #0
 7743 08e6 C3F8F421 		str	r2, [r3, #500]
2224:..\src/interruptions.c ****             emg_1_status = DISCARD; // goto next status  
 7744              		.loc 1 2224 0
 7745 08ea 864B     		ldr	r3, .L582+28
 7746 08ec 0222     		movs	r2, #2
 7747 08ee 1A70     		strb	r2, [r3]
2225:..\src/interruptions.c ****             break;
 7748              		.loc 1 2225 0
 7749 08f0 79E0     		b	.L474
 7750              	.L465:
2226:..\src/interruptions.c **** 
2227:..\src/interruptions.c ****         case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
2228:..\src/interruptions.c ****             emg_counter_1++;
 7751              		.loc 1 2228 0
 7752 08f2 834B     		ldr	r3, .L582+24
 7753 08f4 1B88     		ldrh	r3, [r3]
 7754 08f6 0133     		adds	r3, r3, #1
 7755 08f8 9AB2     		uxth	r2, r3
 7756 08fa 814B     		ldr	r3, .L582+24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 179


 7757 08fc 1A80     		strh	r2, [r3]	@ movhi
2229:..\src/interruptions.c ****             if (emg_counter_1 == EMG_SAMPLE_TO_DISCARD) {
 7758              		.loc 1 2229 0
 7759 08fe 804B     		ldr	r3, .L582+24
 7760 0900 1B88     		ldrh	r3, [r3]
 7761 0902 B3F5FA7F 		cmp	r3, #500
 7762 0906 6BD1     		bne	.L561
2230:..\src/interruptions.c ****                 emg_counter_1 = 0;          // reset counter
 7763              		.loc 1 2230 0
 7764 0908 7D4B     		ldr	r3, .L582+24
 7765 090a 0022     		movs	r2, #0
 7766 090c 1A80     		strh	r2, [r3]	@ movhi
2231:..\src/interruptions.c ****                 LED_control(1);
 7767              		.loc 1 2231 0
 7768 090e 0120     		movs	r0, #1
 7769 0910 FFF7FEFF 		bl	LED_control
2232:..\src/interruptions.c **** 				
2233:..\src/interruptions.c ****                 if (interrupt_flag){
 7770              		.loc 1 2233 0
 7771 0914 784B     		ldr	r3, .L582+16
 7772 0916 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7773 0918 002B     		cmp	r3, #0
 7774 091a 04D0     		beq	.L476
2234:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7775              		.loc 1 2234 0
 7776 091c 764B     		ldr	r3, .L582+16
 7777 091e 0022     		movs	r2, #0
 7778 0920 1A70     		strb	r2, [r3]
2235:..\src/interruptions.c ****                     interrupt_manager();
 7779              		.loc 1 2235 0
 7780 0922 FFF7FEFF 		bl	interrupt_manager
 7781              	.L476:
2236:..\src/interruptions.c ****                 }
2237:..\src/interruptions.c ****                 
2238:..\src/interruptions.c ****                 emg_1_status = SUM_AND_MEAN;    // sum and mean status
 7782              		.loc 1 2238 0
 7783 0926 774B     		ldr	r3, .L582+28
 7784 0928 0322     		movs	r2, #3
 7785 092a 1A70     		strb	r2, [r3]
2239:..\src/interruptions.c ****             }
2240:..\src/interruptions.c ****             break;
 7786              		.loc 1 2240 0
 7787 092c 58E0     		b	.L561
 7788              	.L466:
2241:..\src/interruptions.c **** 
2242:..\src/interruptions.c ****         case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2243:..\src/interruptions.c ****             // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2244:..\src/interruptions.c ****             emg_counter_1++;
 7789              		.loc 1 2244 0
 7790 092e 744B     		ldr	r3, .L582+24
 7791 0930 1B88     		ldrh	r3, [r3]
 7792 0932 0133     		adds	r3, r3, #1
 7793 0934 9AB2     		uxth	r2, r3
 7794 0936 724B     		ldr	r3, .L582+24
 7795 0938 1A80     		strh	r2, [r3]	@ movhi
2245:..\src/interruptions.c ****             if (ADC_buf[2 + c_mem.emg.switch_emg] < 0) 
 7796              		.loc 1 2245 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 180


 7797 093a 6C4B     		ldr	r3, .L582+4
 7798 093c 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7799 0940 0233     		adds	r3, r3, #2
 7800 0942 6B4A     		ldr	r2, .L582+8
 7801 0944 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7802 0948 002B     		cmp	r3, #0
 7803 094a 07DA     		bge	.L477
2246:..\src/interruptions.c ****                 ADC_buf[2 + c_mem.emg.switch_emg] = 0;
 7804              		.loc 1 2246 0
 7805 094c 674B     		ldr	r3, .L582+4
 7806 094e 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7807 0952 0233     		adds	r3, r3, #2
 7808 0954 664A     		ldr	r2, .L582+8
 7809 0956 0021     		movs	r1, #0
 7810 0958 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 7811              	.L477:
2247:..\src/interruptions.c ****             g_mem.emg.emg_max_value[0] += filter((int32)ADC_buf[2 + c_mem.emg.switch_emg], &filt_em
 7812              		.loc 1 2247 0
 7813 095c 634B     		ldr	r3, .L582+4
 7814 095e 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7815 0962 0233     		adds	r3, r3, #2
 7816 0964 624A     		ldr	r2, .L582+8
 7817 0966 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7818 096a 6249     		ldr	r1, .L582+12
 7819 096c 1846     		mov	r0, r3
 7820 096e FFF7FEFF 		bl	filter
 7821 0972 0246     		mov	r2, r0
 7822 0974 5C4B     		ldr	r3, .L582
 7823 0976 D3F8F431 		ldr	r3, [r3, #500]
 7824 097a 1344     		add	r3, r3, r2
 7825 097c 5A4A     		ldr	r2, .L582
 7826 097e C2F8F431 		str	r3, [r2, #500]
2248:..\src/interruptions.c ****             
2249:..\src/interruptions.c ****             if (interrupt_flag){
 7827              		.loc 1 2249 0
 7828 0982 5D4B     		ldr	r3, .L582+16
 7829 0984 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7830 0986 002B     		cmp	r3, #0
 7831 0988 04D0     		beq	.L478
2250:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7832              		.loc 1 2250 0
 7833 098a 5B4B     		ldr	r3, .L582+16
 7834 098c 0022     		movs	r2, #0
 7835 098e 1A70     		strb	r2, [r3]
2251:..\src/interruptions.c ****                 interrupt_manager();
 7836              		.loc 1 2251 0
 7837 0990 FFF7FEFF 		bl	interrupt_manager
 7838              	.L478:
2252:..\src/interruptions.c ****             }
2253:..\src/interruptions.c ****             
2254:..\src/interruptions.c ****             if (emg_counter_1 == SAMPLES_FOR_EMG_MEAN) {
 7839              		.loc 1 2254 0
 7840 0994 5A4B     		ldr	r3, .L582+24
 7841 0996 1B88     		ldrh	r3, [r3]
 7842 0998 B3F57A7F 		cmp	r3, #1000
 7843 099c 22D1     		bne	.L562
2255:..\src/interruptions.c ****                 g_mem.emg.emg_max_value[0] = g_mem.emg.emg_max_value[0] / SAMPLES_FOR_EMG_MEAN; // 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 181


 7844              		.loc 1 2255 0
 7845 099e 524B     		ldr	r3, .L582
 7846 09a0 D3F8F431 		ldr	r3, [r3, #500]
 7847 09a4 584A     		ldr	r2, .L582+32
 7848 09a6 A2FB0323 		umull	r2, r3, r2, r3
 7849 09aa 9B09     		lsrs	r3, r3, #6
 7850 09ac 4E4A     		ldr	r2, .L582
 7851 09ae C2F8F431 		str	r3, [r2, #500]
2256:..\src/interruptions.c **** 
2257:..\src/interruptions.c ****                 if (interrupt_flag){
 7852              		.loc 1 2257 0
 7853 09b2 514B     		ldr	r3, .L582+16
 7854 09b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7855 09b6 002B     		cmp	r3, #0
 7856 09b8 04D0     		beq	.L480
2258:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7857              		.loc 1 2258 0
 7858 09ba 4F4B     		ldr	r3, .L582+16
 7859 09bc 0022     		movs	r2, #0
 7860 09be 1A70     		strb	r2, [r3]
2259:..\src/interruptions.c ****                     interrupt_manager();
 7861              		.loc 1 2259 0
 7862 09c0 FFF7FEFF 		bl	interrupt_manager
 7863              	.L480:
2260:..\src/interruptions.c ****                 }                    
2261:..\src/interruptions.c ****                 
2262:..\src/interruptions.c ****                 LED_control(0);
 7864              		.loc 1 2262 0
 7865 09c4 0020     		movs	r0, #0
 7866 09c6 FFF7FEFF 		bl	LED_control
2263:..\src/interruptions.c **** 				
2264:..\src/interruptions.c ****                 emg_counter_1 = 0;          // reset counter
 7867              		.loc 1 2264 0
 7868 09ca 4D4B     		ldr	r3, .L582+24
 7869 09cc 0022     		movs	r2, #0
 7870 09ce 1A80     		strh	r2, [r3]	@ movhi
2265:..\src/interruptions.c **** 
2266:..\src/interruptions.c ****                 emg_1_status = NORMAL;      // goto normal execution
 7871              		.loc 1 2266 0
 7872 09d0 4C4B     		ldr	r3, .L582+28
 7873 09d2 0022     		movs	r2, #0
 7874 09d4 1A70     		strb	r2, [r3]
2267:..\src/interruptions.c ****             }
2268:..\src/interruptions.c ****             break;
 7875              		.loc 1 2268 0
 7876 09d6 05E0     		b	.L562
 7877              	.L559:
2269:..\src/interruptions.c **** 
2270:..\src/interruptions.c ****         default:
2271:..\src/interruptions.c ****             break;
 7878              		.loc 1 2271 0
 7879 09d8 00BF     		nop
 7880 09da 04E0     		b	.L474
 7881              	.L560:
2219:..\src/interruptions.c **** 
 7882              		.loc 1 2219 0
 7883 09dc 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 182


 7884 09de 02E0     		b	.L474
 7885              	.L561:
2240:..\src/interruptions.c **** 
 7886              		.loc 1 2240 0
 7887 09e0 00BF     		nop
 7888 09e2 00E0     		b	.L474
 7889              	.L562:
2268:..\src/interruptions.c **** 
 7890              		.loc 1 2268 0
 7891 09e4 00BF     		nop
 7892              	.L474:
2272:..\src/interruptions.c ****     }
2273:..\src/interruptions.c **** 
2274:..\src/interruptions.c ****     if (interrupt_flag){
 7893              		.loc 1 2274 0
 7894 09e6 444B     		ldr	r3, .L582+16
 7895 09e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7896 09ea 002B     		cmp	r3, #0
 7897 09ec 04D0     		beq	.L481
2275:..\src/interruptions.c ****         interrupt_flag = FALSE;
 7898              		.loc 1 2275 0
 7899 09ee 424B     		ldr	r3, .L582+16
 7900 09f0 0022     		movs	r2, #0
 7901 09f2 1A70     		strb	r2, [r3]
2276:..\src/interruptions.c ****         interrupt_manager();
 7902              		.loc 1 2276 0
 7903 09f4 FFF7FEFF 		bl	interrupt_manager
 7904              	.L481:
2277:..\src/interruptions.c ****     }
2278:..\src/interruptions.c ****     // EMG 2 calibration state machine
2279:..\src/interruptions.c ****     switch(emg_2_status) {
 7905              		.loc 1 2279 0
 7906 09f8 444B     		ldr	r3, .L582+36
 7907 09fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7908 09fc 052B     		cmp	r3, #5
 7909 09fe 00F2C881 		bhi	.L563
 7910 0a02 01A2     		adr	r2, .L484
 7911 0a04 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7912              		.p2align 2
 7913              	.L484:
 7914 0a08 210A0000 		.word	.L483+1
 7915 0a0c C10A0000 		.word	.L485+1
 7916 0a10 190B0000 		.word	.L486+1
 7917 0a14 570B0000 		.word	.L487+1
 7918 0a18 090C0000 		.word	.L488+1
 7919 0a1c 1B0C0000 		.word	.L489+1
 7920              		.p2align 1
 7921              	.L483:
2280:..\src/interruptions.c ****         case NORMAL: // normal execution
2281:..\src/interruptions.c ****         
2282:..\src/interruptions.c ****             if (g_mem.dev.dev_type != AIR_CHAMBERS_FB && g_mem.dev.dev_type != OTBK_ACT_WRIST_MS){
 7922              		.loc 1 2282 0
 7923 0a20 314B     		ldr	r3, .L582
 7924 0a22 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 7925 0a26 022B     		cmp	r3, #2
 7926 0a28 14D0     		beq	.L490
 7927              		.loc 1 2282 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 183


 7928 0a2a 2F4B     		ldr	r3, .L582
 7929 0a2c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 7930 0a30 032B     		cmp	r3, #3
 7931 0a32 0FD0     		beq	.L490
2283:..\src/interruptions.c ****                 i_aux = ((int32)(ADC_buf[3 - c_mem.emg.switch_emg] - 1639) * 87) >> 5;  //map range
 7932              		.loc 1 2283 0 is_stmt 1
 7933 0a34 2D4B     		ldr	r3, .L582+4
 7934 0a36 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7935 0a3a C3F10303 		rsb	r3, r3, #3
 7936 0a3e 2C4A     		ldr	r2, .L582+8
 7937 0a40 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7938 0a44 A3F26763 		subw	r3, r3, #1639
 7939 0a48 5722     		movs	r2, #87
 7940 0a4a 02FB03F3 		mul	r3, r2, r3
 7941 0a4e 5B11     		asrs	r3, r3, #5
 7942 0a50 7B60     		str	r3, [r7, #4]
 7943 0a52 08E0     		b	.L491
 7944              	.L490:
2284:..\src/interruptions.c ****             }
2285:..\src/interruptions.c ****             else {  // Use additional ADC channels, so the signal does not pass through AVAGO isola
2286:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[3 - c_mem.emg.switch_emg]);
 7945              		.loc 1 2286 0
 7946 0a54 254B     		ldr	r3, .L582+4
 7947 0a56 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7948 0a5a C3F10303 		rsb	r3, r3, #3
 7949 0a5e 244A     		ldr	r2, .L582+8
 7950 0a60 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7951 0a64 7B60     		str	r3, [r7, #4]
 7952              	.L491:
2287:..\src/interruptions.c ****             }
2288:..\src/interruptions.c **** 
2289:..\src/interruptions.c ****             if (i_aux < 0)
 7953              		.loc 1 2289 0
 7954 0a66 7B68     		ldr	r3, [r7, #4]
 7955 0a68 002B     		cmp	r3, #0
 7956 0a6a 01DA     		bge	.L492
2290:..\src/interruptions.c ****                 i_aux = 0;
 7957              		.loc 1 2290 0
 7958 0a6c 0023     		movs	r3, #0
 7959 0a6e 7B60     		str	r3, [r7, #4]
 7960              	.L492:
2291:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[1]);
 7961              		.loc 1 2291 0
 7962 0a70 2749     		ldr	r1, .L582+40
 7963 0a72 7868     		ldr	r0, [r7, #4]
 7964 0a74 FFF7FEFF 		bl	filter
 7965 0a78 7860     		str	r0, [r7, #4]
2292:..\src/interruptions.c ****             i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[1];
 7966              		.loc 1 2292 0
 7967 0a7a 7B68     		ldr	r3, [r7, #4]
 7968 0a7c 9B02     		lsls	r3, r3, #10
 7969 0a7e 1A46     		mov	r2, r3
 7970 0a80 194B     		ldr	r3, .L582
 7971 0a82 D3F8F831 		ldr	r3, [r3, #504]
 7972 0a86 B2FBF3F3 		udiv	r3, r2, r3
 7973 0a8a 7B60     		str	r3, [r7, #4]
2293:..\src/interruptions.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 184


2294:..\src/interruptions.c ****             if (interrupt_flag){
 7974              		.loc 1 2294 0
 7975 0a8c 1A4B     		ldr	r3, .L582+16
 7976 0a8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7977 0a90 002B     		cmp	r3, #0
 7978 0a92 04D0     		beq	.L493
2295:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7979              		.loc 1 2295 0
 7980 0a94 184B     		ldr	r3, .L582+16
 7981 0a96 0022     		movs	r2, #0
 7982 0a98 1A70     		strb	r2, [r3]
2296:..\src/interruptions.c ****                 interrupt_manager();
 7983              		.loc 1 2296 0
 7984 0a9a FFF7FEFF 		bl	interrupt_manager
 7985              	.L493:
2297:..\src/interruptions.c ****             }
2298:..\src/interruptions.c ****             
2299:..\src/interruptions.c ****             if (i_aux < 0) 
 7986              		.loc 1 2299 0
 7987 0a9e 7B68     		ldr	r3, [r7, #4]
 7988 0aa0 002B     		cmp	r3, #0
 7989 0aa2 02DA     		bge	.L494
2300:..\src/interruptions.c ****                 i_aux = 0;
 7990              		.loc 1 2300 0
 7991 0aa4 0023     		movs	r3, #0
 7992 0aa6 7B60     		str	r3, [r7, #4]
 7993 0aa8 06E0     		b	.L495
 7994              	.L494:
2301:..\src/interruptions.c ****             else 
2302:..\src/interruptions.c ****                 if (i_aux > 1024)
 7995              		.loc 1 2302 0
 7996 0aaa 7B68     		ldr	r3, [r7, #4]
 7997 0aac B3F5806F 		cmp	r3, #1024
 7998 0ab0 02DD     		ble	.L495
2303:..\src/interruptions.c ****                     i_aux = 1024;
 7999              		.loc 1 2303 0
 8000 0ab2 4FF48063 		mov	r3, #1024
 8001 0ab6 7B60     		str	r3, [r7, #4]
 8002              	.L495:
2304:..\src/interruptions.c ****             
2305:..\src/interruptions.c ****             g_adc_meas.emg[1] = i_aux;
 8003              		.loc 1 2305 0
 8004 0ab8 104A     		ldr	r2, .L582+20
 8005 0aba 7B68     		ldr	r3, [r7, #4]
 8006 0abc 5360     		str	r3, [r2, #4]
2306:..\src/interruptions.c **** 
2307:..\src/interruptions.c ****             break;
 8007              		.loc 1 2307 0
 8008 0abe 8AE1     		b	.L496
 8009              	.L485:
2308:..\src/interruptions.c **** 
2309:..\src/interruptions.c ****         case RESET: // reset variables
2310:..\src/interruptions.c ****             emg_counter_2 = 0;
 8010              		.loc 1 2310 0
 8011 0ac0 144B     		ldr	r3, .L582+44
 8012 0ac2 0022     		movs	r2, #0
 8013 0ac4 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 185


2311:..\src/interruptions.c ****             g_mem.emg.emg_max_value[1] = 0;
 8014              		.loc 1 2311 0
 8015 0ac6 084B     		ldr	r3, .L582
 8016 0ac8 0022     		movs	r2, #0
 8017 0aca C3F8F821 		str	r2, [r3, #504]
2312:..\src/interruptions.c **** 
2313:..\src/interruptions.c ****             if (interrupt_flag){
 8018              		.loc 1 2313 0
 8019 0ace 0A4B     		ldr	r3, .L582+16
 8020 0ad0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8021 0ad2 002B     		cmp	r3, #0
 8022 0ad4 04D0     		beq	.L497
2314:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 8023              		.loc 1 2314 0
 8024 0ad6 084B     		ldr	r3, .L582+16
 8025 0ad8 0022     		movs	r2, #0
 8026 0ada 1A70     		strb	r2, [r3]
2315:..\src/interruptions.c ****                 interrupt_manager();
 8027              		.loc 1 2315 0
 8028 0adc FFF7FEFF 		bl	interrupt_manager
 8029              	.L497:
2316:..\src/interruptions.c ****             }
2317:..\src/interruptions.c ****             
2318:..\src/interruptions.c ****             emg_2_status = WAIT; // wait for EMG 1 calibration
 8030              		.loc 1 2318 0
 8031 0ae0 0A4B     		ldr	r3, .L582+36
 8032 0ae2 0422     		movs	r2, #4
 8033 0ae4 1A70     		strb	r2, [r3]
2319:..\src/interruptions.c ****             break;
 8034              		.loc 1 2319 0
 8035 0ae6 76E1     		b	.L496
 8036              	.L583:
 8037              		.align	2
 8038              	.L582:
 8039 0ae8 00000000 		.word	g_mem
 8040 0aec 00000000 		.word	c_mem
 8041 0af0 00000000 		.word	ADC_buf
 8042 0af4 00000000 		.word	filt_emg
 8043 0af8 00000000 		.word	interrupt_flag
 8044 0afc 00000000 		.word	g_adc_meas
 8045 0b00 78010000 		.word	emg_counter_1.10737
 8046 0b04 00000000 		.word	emg_1_status
 8047 0b08 D34D6210 		.word	274877907
 8048 0b0c 00000000 		.word	emg_2_status
 8049 0b10 08000000 		.word	filt_emg+8
 8050 0b14 7A010000 		.word	emg_counter_2.10738
 8051              	.L486:
2320:..\src/interruptions.c **** 
2321:..\src/interruptions.c ****         case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
2322:..\src/interruptions.c ****             emg_counter_2++;
 8052              		.loc 1 2322 0
 8053 0b18 A24B     		ldr	r3, .L584
 8054 0b1a 1B88     		ldrh	r3, [r3]
 8055 0b1c 0133     		adds	r3, r3, #1
 8056 0b1e 9AB2     		uxth	r2, r3
 8057 0b20 A04B     		ldr	r3, .L584
 8058 0b22 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 186


2323:..\src/interruptions.c ****             if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 8059              		.loc 1 2323 0
 8060 0b24 9F4B     		ldr	r3, .L584
 8061 0b26 1B88     		ldrh	r3, [r3]
 8062 0b28 B3F5FA7F 		cmp	r3, #500
 8063 0b2c 40F03381 		bne	.L564
2324:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 8064              		.loc 1 2324 0
 8065 0b30 9C4B     		ldr	r3, .L584
 8066 0b32 0022     		movs	r2, #0
 8067 0b34 1A80     		strh	r2, [r3]	@ movhi
2325:..\src/interruptions.c ****                 LED_control(1);
 8068              		.loc 1 2325 0
 8069 0b36 0120     		movs	r0, #1
 8070 0b38 FFF7FEFF 		bl	LED_control
2326:..\src/interruptions.c **** 
2327:..\src/interruptions.c ****                 if (interrupt_flag){
 8071              		.loc 1 2327 0
 8072 0b3c 9A4B     		ldr	r3, .L584+4
 8073 0b3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8074 0b40 002B     		cmp	r3, #0
 8075 0b42 04D0     		beq	.L499
2328:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8076              		.loc 1 2328 0
 8077 0b44 984B     		ldr	r3, .L584+4
 8078 0b46 0022     		movs	r2, #0
 8079 0b48 1A70     		strb	r2, [r3]
2329:..\src/interruptions.c ****                     interrupt_manager();
 8080              		.loc 1 2329 0
 8081 0b4a FFF7FEFF 		bl	interrupt_manager
 8082              	.L499:
2330:..\src/interruptions.c ****                 }
2331:..\src/interruptions.c ****                 
2332:..\src/interruptions.c ****                 emg_2_status = SUM_AND_MEAN;           // sum and mean status
 8083              		.loc 1 2332 0
 8084 0b4e 974B     		ldr	r3, .L584+8
 8085 0b50 0322     		movs	r2, #3
 8086 0b52 1A70     		strb	r2, [r3]
2333:..\src/interruptions.c ****             }
2334:..\src/interruptions.c ****             break;
 8087              		.loc 1 2334 0
 8088 0b54 1FE1     		b	.L564
 8089              	.L487:
2335:..\src/interruptions.c **** 
2336:..\src/interruptions.c ****         case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2337:..\src/interruptions.c ****             // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2338:..\src/interruptions.c ****             emg_counter_2++;
 8090              		.loc 1 2338 0
 8091 0b56 934B     		ldr	r3, .L584
 8092 0b58 1B88     		ldrh	r3, [r3]
 8093 0b5a 0133     		adds	r3, r3, #1
 8094 0b5c 9AB2     		uxth	r2, r3
 8095 0b5e 914B     		ldr	r3, .L584
 8096 0b60 1A80     		strh	r2, [r3]	@ movhi
2339:..\src/interruptions.c ****             if (ADC_buf[3 - c_mem.emg.switch_emg] < 0)
 8097              		.loc 1 2339 0
 8098 0b62 934B     		ldr	r3, .L584+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 187


 8099 0b64 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 8100 0b68 C3F10303 		rsb	r3, r3, #3
 8101 0b6c 914A     		ldr	r2, .L584+16
 8102 0b6e 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 8103 0b72 002B     		cmp	r3, #0
 8104 0b74 08DA     		bge	.L500
2340:..\src/interruptions.c ****                 ADC_buf[3 - c_mem.emg.switch_emg] = 0;
 8105              		.loc 1 2340 0
 8106 0b76 8E4B     		ldr	r3, .L584+12
 8107 0b78 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 8108 0b7c C3F10303 		rsb	r3, r3, #3
 8109 0b80 8C4A     		ldr	r2, .L584+16
 8110 0b82 0021     		movs	r1, #0
 8111 0b84 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 8112              	.L500:
2341:..\src/interruptions.c ****             g_mem.emg.emg_max_value[1] += filter((int32)ADC_buf[3 - c_mem.emg.switch_emg], &filt_em
 8113              		.loc 1 2341 0
 8114 0b88 894B     		ldr	r3, .L584+12
 8115 0b8a 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 8116 0b8e C3F10303 		rsb	r3, r3, #3
 8117 0b92 884A     		ldr	r2, .L584+16
 8118 0b94 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 8119 0b98 8749     		ldr	r1, .L584+20
 8120 0b9a 1846     		mov	r0, r3
 8121 0b9c FFF7FEFF 		bl	filter
 8122 0ba0 0246     		mov	r2, r0
 8123 0ba2 864B     		ldr	r3, .L584+24
 8124 0ba4 D3F8F831 		ldr	r3, [r3, #504]
 8125 0ba8 1344     		add	r3, r3, r2
 8126 0baa 844A     		ldr	r2, .L584+24
 8127 0bac C2F8F831 		str	r3, [r2, #504]
2342:..\src/interruptions.c **** 
2343:..\src/interruptions.c ****             if (interrupt_flag){
 8128              		.loc 1 2343 0
 8129 0bb0 7D4B     		ldr	r3, .L584+4
 8130 0bb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8131 0bb4 002B     		cmp	r3, #0
 8132 0bb6 04D0     		beq	.L501
2344:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 8133              		.loc 1 2344 0
 8134 0bb8 7B4B     		ldr	r3, .L584+4
 8135 0bba 0022     		movs	r2, #0
 8136 0bbc 1A70     		strb	r2, [r3]
2345:..\src/interruptions.c ****                 interrupt_manager();
 8137              		.loc 1 2345 0
 8138 0bbe FFF7FEFF 		bl	interrupt_manager
 8139              	.L501:
2346:..\src/interruptions.c ****             }
2347:..\src/interruptions.c ****             
2348:..\src/interruptions.c ****             if (emg_counter_2 == SAMPLES_FOR_EMG_MEAN) {
 8140              		.loc 1 2348 0
 8141 0bc2 784B     		ldr	r3, .L584
 8142 0bc4 1B88     		ldrh	r3, [r3]
 8143 0bc6 B3F57A7F 		cmp	r3, #1000
 8144 0bca 40F0E680 		bne	.L565
2349:..\src/interruptions.c ****                 g_mem.emg.emg_max_value[1] = g_mem.emg.emg_max_value[1] / SAMPLES_FOR_EMG_MEAN; // 
 8145              		.loc 1 2349 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 188


 8146 0bce 7B4B     		ldr	r3, .L584+24
 8147 0bd0 D3F8F831 		ldr	r3, [r3, #504]
 8148 0bd4 7A4A     		ldr	r2, .L584+28
 8149 0bd6 A2FB0323 		umull	r2, r3, r2, r3
 8150 0bda 9B09     		lsrs	r3, r3, #6
 8151 0bdc 774A     		ldr	r2, .L584+24
 8152 0bde C2F8F831 		str	r3, [r2, #504]
2350:..\src/interruptions.c ****                 LED_control(0);
 8153              		.loc 1 2350 0
 8154 0be2 0020     		movs	r0, #0
 8155 0be4 FFF7FEFF 		bl	LED_control
2351:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 8156              		.loc 1 2351 0
 8157 0be8 6E4B     		ldr	r3, .L584
 8158 0bea 0022     		movs	r2, #0
 8159 0bec 1A80     		strh	r2, [r3]	@ movhi
2352:..\src/interruptions.c ****             
2353:..\src/interruptions.c ****                 if (interrupt_flag){
 8160              		.loc 1 2353 0
 8161 0bee 6E4B     		ldr	r3, .L584+4
 8162 0bf0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8163 0bf2 002B     		cmp	r3, #0
 8164 0bf4 04D0     		beq	.L503
2354:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8165              		.loc 1 2354 0
 8166 0bf6 6C4B     		ldr	r3, .L584+4
 8167 0bf8 0022     		movs	r2, #0
 8168 0bfa 1A70     		strb	r2, [r3]
2355:..\src/interruptions.c ****                     interrupt_manager();
 8169              		.loc 1 2355 0
 8170 0bfc FFF7FEFF 		bl	interrupt_manager
 8171              	.L503:
2356:..\src/interruptions.c ****                 }
2357:..\src/interruptions.c ****                 
2358:..\src/interruptions.c ****                 emg_2_status = WAIT_EoC;    // goto end of calibration wait
 8172              		.loc 1 2358 0
 8173 0c00 6A4B     		ldr	r3, .L584+8
 8174 0c02 0522     		movs	r2, #5
 8175 0c04 1A70     		strb	r2, [r3]
2359:..\src/interruptions.c ****             }
2360:..\src/interruptions.c ****             break;
 8176              		.loc 1 2360 0
 8177 0c06 C8E0     		b	.L565
 8178              	.L488:
2361:..\src/interruptions.c **** 
2362:..\src/interruptions.c ****         case WAIT: // wait for EMG calibration to be done
2363:..\src/interruptions.c ****             if (emg_1_status == NORMAL)
 8179              		.loc 1 2363 0
 8180 0c08 6E4B     		ldr	r3, .L584+32
 8181 0c0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8182 0c0c 002B     		cmp	r3, #0
 8183 0c0e 40F0C680 		bne	.L566
2364:..\src/interruptions.c ****                 emg_2_status = DISCARD;           // goto discard sample
 8184              		.loc 1 2364 0
 8185 0c12 664B     		ldr	r3, .L584+8
 8186 0c14 0222     		movs	r2, #2
 8187 0c16 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 189


2365:..\src/interruptions.c ****             break;
 8188              		.loc 1 2365 0
 8189 0c18 C1E0     		b	.L566
 8190              	.L489:
2366:..\src/interruptions.c **** 
2367:..\src/interruptions.c ****         case WAIT_EoC:  // wait for end of calibration procedure (only for LED visibility reasons)
2368:..\src/interruptions.c ****             emg_counter_2++;
 8191              		.loc 1 2368 0
 8192 0c1a 624B     		ldr	r3, .L584
 8193 0c1c 1B88     		ldrh	r3, [r3]
 8194 0c1e 0133     		adds	r3, r3, #1
 8195 0c20 9AB2     		uxth	r2, r3
 8196 0c22 604B     		ldr	r3, .L584
 8197 0c24 1A80     		strh	r2, [r3]	@ movhi
2369:..\src/interruptions.c ****             if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 8198              		.loc 1 2369 0
 8199 0c26 5F4B     		ldr	r3, .L584
 8200 0c28 1B88     		ldrh	r3, [r3]
 8201 0c2a B3F5FA7F 		cmp	r3, #500
 8202 0c2e 40F0D180 		bne	.L567
2370:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 8203              		.loc 1 2370 0
 8204 0c32 5C4B     		ldr	r3, .L584
 8205 0c34 0022     		movs	r2, #0
 8206 0c36 1A80     		strh	r2, [r3]	@ movhi
2371:..\src/interruptions.c ****                 
2372:..\src/interruptions.c ****                 if (interrupt_flag){
 8207              		.loc 1 2372 0
 8208 0c38 5B4B     		ldr	r3, .L584+4
 8209 0c3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8210 0c3c 002B     		cmp	r3, #0
 8211 0c3e 04D0     		beq	.L506
2373:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8212              		.loc 1 2373 0
 8213 0c40 594B     		ldr	r3, .L584+4
 8214 0c42 0022     		movs	r2, #0
 8215 0c44 1A70     		strb	r2, [r3]
2374:..\src/interruptions.c ****                     interrupt_manager();
 8216              		.loc 1 2374 0
 8217 0c46 FFF7FEFF 		bl	interrupt_manager
 8218              	.L506:
2375:..\src/interruptions.c ****                 }
2376:..\src/interruptions.c ****                 
2377:..\src/interruptions.c ****                 for (idx = 0; idx < NUM_OF_MOTORS; idx++) {
 8219              		.loc 1 2377 0
 8220 0c4a 5F4B     		ldr	r3, .L584+36
 8221 0c4c 0022     		movs	r2, #0
 8222 0c4e 1A70     		strb	r2, [r3]
 8223 0c50 93E0     		b	.L507
 8224              	.L511:
2378:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 8225              		.loc 1 2378 0
 8226 0c52 5D4B     		ldr	r3, .L584+36
 8227 0c54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8228 0c56 1946     		mov	r1, r3
 8229 0c58 554A     		ldr	r2, .L584+12
 8230 0c5a 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 190


 8231 0c5c DB00     		lsls	r3, r3, #3
 8232 0c5e 5B1A     		subs	r3, r3, r1
 8233 0c60 1B01     		lsls	r3, r3, #4
 8234 0c62 1344     		add	r3, r3, r2
 8235 0c64 03F58773 		add	r3, r3, #270
 8236 0c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8237 0c6a 022B     		cmp	r3, #2
 8238 0c6c 37D0     		beq	.L508
2379:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 8239              		.loc 1 2379 0 discriminator 1
 8240 0c6e 564B     		ldr	r3, .L584+36
 8241 0c70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8242 0c72 1946     		mov	r1, r3
 8243 0c74 4E4A     		ldr	r2, .L584+12
 8244 0c76 0B46     		mov	r3, r1
 8245 0c78 DB00     		lsls	r3, r3, #3
 8246 0c7a 5B1A     		subs	r3, r3, r1
 8247 0c7c 1B01     		lsls	r3, r3, #4
 8248 0c7e 1344     		add	r3, r3, r2
 8249 0c80 03F58773 		add	r3, r3, #270
 8250 0c84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2378:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 8251              		.loc 1 2378 0 discriminator 1
 8252 0c86 032B     		cmp	r3, #3
 8253 0c88 29D0     		beq	.L508
2380:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 8254              		.loc 1 2380 0
 8255 0c8a 4F4B     		ldr	r3, .L584+36
 8256 0c8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8257 0c8e 1946     		mov	r1, r3
 8258 0c90 474A     		ldr	r2, .L584+12
 8259 0c92 0B46     		mov	r3, r1
 8260 0c94 DB00     		lsls	r3, r3, #3
 8261 0c96 5B1A     		subs	r3, r3, r1
 8262 0c98 1B01     		lsls	r3, r3, #4
 8263 0c9a 1344     		add	r3, r3, r2
 8264 0c9c 03F58773 		add	r3, r3, #270
 8265 0ca0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2379:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 8266              		.loc 1 2379 0
 8267 0ca2 042B     		cmp	r3, #4
 8268 0ca4 1BD0     		beq	.L508
2381:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 8269              		.loc 1 2381 0
 8270 0ca6 484B     		ldr	r3, .L584+36
 8271 0ca8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8272 0caa 1946     		mov	r1, r3
 8273 0cac 404A     		ldr	r2, .L584+12
 8274 0cae 0B46     		mov	r3, r1
 8275 0cb0 DB00     		lsls	r3, r3, #3
 8276 0cb2 5B1A     		subs	r3, r3, r1
 8277 0cb4 1B01     		lsls	r3, r3, #4
 8278 0cb6 1344     		add	r3, r3, r2
 8279 0cb8 03F58773 		add	r3, r3, #270
 8280 0cbc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2380:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 8281              		.loc 1 2380 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 191


 8282 0cbe 052B     		cmp	r3, #5
 8283 0cc0 0DD0     		beq	.L508
2382:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 8284              		.loc 1 2382 0
 8285 0cc2 414B     		ldr	r3, .L584+36
 8286 0cc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8287 0cc6 1946     		mov	r1, r3
 8288 0cc8 394A     		ldr	r2, .L584+12
 8289 0cca 0B46     		mov	r3, r1
 8290 0ccc DB00     		lsls	r3, r3, #3
 8291 0cce 5B1A     		subs	r3, r3, r1
 8292 0cd0 1B01     		lsls	r3, r3, #4
 8293 0cd2 1344     		add	r3, r3, r2
 8294 0cd4 03F58773 		add	r3, r3, #270
 8295 0cd8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2381:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 8296              		.loc 1 2381 0
 8297 0cda 072B     		cmp	r3, #7
 8298 0cdc 47D1     		bne	.L509
 8299              	.L508:
2383:..\src/interruptions.c ****                         if (c_mem.motor[idx].control_mode == CONTROL_ANGLE) {
 8300              		.loc 1 2383 0
 8301 0cde 3A4B     		ldr	r3, .L584+36
 8302 0ce0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8303 0ce2 1946     		mov	r1, r3
 8304 0ce4 324A     		ldr	r2, .L584+12
 8305 0ce6 0B46     		mov	r3, r1
 8306 0ce8 DB00     		lsls	r3, r3, #3
 8307 0cea 5B1A     		subs	r3, r3, r1
 8308 0cec 1B01     		lsls	r3, r3, #4
 8309 0cee 1344     		add	r3, r3, r2
 8310 0cf0 03F20F13 		addw	r3, r3, #271
 8311 0cf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8312 0cf6 002B     		cmp	r3, #0
 8313 0cf8 19D1     		bne	.L510
2384:..\src/interruptions.c ****                             g_ref[idx].pos = g_meas[g_mem.motor[idx].encoder_line].pos[0];
 8314              		.loc 1 2384 0
 8315 0cfa 334B     		ldr	r3, .L584+36
 8316 0cfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8317 0cfe 1846     		mov	r0, r3
 8318 0d00 314B     		ldr	r3, .L584+36
 8319 0d02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8320 0d04 1946     		mov	r1, r3
 8321 0d06 2D4A     		ldr	r2, .L584+24
 8322 0d08 0B46     		mov	r3, r1
 8323 0d0a DB00     		lsls	r3, r3, #3
 8324 0d0c 5B1A     		subs	r3, r3, r1
 8325 0d0e 1B01     		lsls	r3, r3, #4
 8326 0d10 1344     		add	r3, r3, r2
 8327 0d12 03F58873 		add	r3, r3, #272
 8328 0d16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8329 0d18 1946     		mov	r1, r3
 8330 0d1a 2C4A     		ldr	r2, .L584+40
 8331 0d1c 3423     		movs	r3, #52
 8332 0d1e 03FB01F3 		mul	r3, r3, r1
 8333 0d22 1344     		add	r3, r3, r2
 8334 0d24 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 192


 8335 0d26 2A49     		ldr	r1, .L584+44
 8336 0d28 0301     		lsls	r3, r0, #4
 8337 0d2a 0B44     		add	r3, r3, r1
 8338 0d2c 1A60     		str	r2, [r3]
 8339              	.L510:
2385:..\src/interruptions.c ****                         }
2386:..\src/interruptions.c ****                         g_ref[idx].onoff = c_mem.motor[idx].activ;
 8340              		.loc 1 2386 0
 8341 0d2e 264B     		ldr	r3, .L584+36
 8342 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8343 0d32 1846     		mov	r0, r3
 8344 0d34 244B     		ldr	r3, .L584+36
 8345 0d36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8346 0d38 1946     		mov	r1, r3
 8347 0d3a 1D4A     		ldr	r2, .L584+12
 8348 0d3c 0B46     		mov	r3, r1
 8349 0d3e DB00     		lsls	r3, r3, #3
 8350 0d40 5B1A     		subs	r3, r3, r1
 8351 0d42 1B01     		lsls	r3, r3, #4
 8352 0d44 1344     		add	r3, r3, r2
 8353 0d46 E033     		adds	r3, r3, #224
 8354 0d48 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8355 0d4a 214A     		ldr	r2, .L584+44
 8356 0d4c 0301     		lsls	r3, r0, #4
 8357 0d4e 1344     		add	r3, r3, r2
 8358 0d50 0C33     		adds	r3, r3, #12
 8359 0d52 0A46     		mov	r2, r1
 8360 0d54 1A70     		strb	r2, [r3]
2387:..\src/interruptions.c ****                         enable_motor(idx, g_ref[idx].onoff); 
 8361              		.loc 1 2387 0
 8362 0d56 1C4B     		ldr	r3, .L584+36
 8363 0d58 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 8364 0d5a 1B4B     		ldr	r3, .L584+36
 8365 0d5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8366 0d5e 1C4A     		ldr	r2, .L584+44
 8367 0d60 1B01     		lsls	r3, r3, #4
 8368 0d62 1344     		add	r3, r3, r2
 8369 0d64 0C33     		adds	r3, r3, #12
 8370 0d66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8371 0d68 1946     		mov	r1, r3
 8372 0d6a FFF7FEFF 		bl	enable_motor
 8373              	.L509:
2377:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 8374              		.loc 1 2377 0 discriminator 2
 8375 0d6e 164B     		ldr	r3, .L584+36
 8376 0d70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8377 0d72 0133     		adds	r3, r3, #1
 8378 0d74 DAB2     		uxtb	r2, r3
 8379 0d76 144B     		ldr	r3, .L584+36
 8380 0d78 1A70     		strb	r2, [r3]
 8381              	.L507:
2377:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 8382              		.loc 1 2377 0 is_stmt 0 discriminator 1
 8383 0d7a 134B     		ldr	r3, .L584+36
 8384 0d7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8385 0d7e 012B     		cmp	r3, #1
 8386 0d80 7FF667AF 		bls	.L511
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 193


2388:..\src/interruptions.c ****                     }
2389:..\src/interruptions.c ****                 }
2390:..\src/interruptions.c ****                     
2391:..\src/interruptions.c ****                 memStore(0);        // Store emg_max_value
 8387              		.loc 1 2391 0 is_stmt 1
 8388 0d84 0020     		movs	r0, #0
 8389 0d86 FFF7FEFF 		bl	memStore
2392:..\src/interruptions.c ****                     
2393:..\src/interruptions.c ****                 emg_2_status = NORMAL;           // goto normal execution
 8390              		.loc 1 2393 0
 8391 0d8a 084B     		ldr	r3, .L584+8
 8392 0d8c 0022     		movs	r2, #0
 8393 0d8e 1A70     		strb	r2, [r3]
2394:..\src/interruptions.c ****             }
2395:..\src/interruptions.c ****             break;
 8394              		.loc 1 2395 0
 8395 0d90 20E0     		b	.L567
 8396              	.L563:
2396:..\src/interruptions.c ****         default:
2397:..\src/interruptions.c ****             break;
 8397              		.loc 1 2397 0
 8398 0d92 00BF     		nop
 8399 0d94 1FE0     		b	.L496
 8400              	.L564:
2334:..\src/interruptions.c **** 
 8401              		.loc 1 2334 0
 8402 0d96 00BF     		nop
 8403 0d98 1DE0     		b	.L496
 8404              	.L565:
2360:..\src/interruptions.c **** 
 8405              		.loc 1 2360 0
 8406 0d9a 00BF     		nop
 8407 0d9c 1BE0     		b	.L496
 8408              	.L566:
2365:..\src/interruptions.c **** 
 8409              		.loc 1 2365 0
 8410 0d9e 00BF     		nop
 8411 0da0 19E0     		b	.L496
 8412              	.L585:
 8413 0da2 00BF     		.align	2
 8414              	.L584:
 8415 0da4 7A010000 		.word	emg_counter_2.10738
 8416 0da8 00000000 		.word	interrupt_flag
 8417 0dac 00000000 		.word	emg_2_status
 8418 0db0 00000000 		.word	c_mem
 8419 0db4 00000000 		.word	ADC_buf
 8420 0db8 08000000 		.word	filt_emg+8
 8421 0dbc 00000000 		.word	g_mem
 8422 0dc0 D34D6210 		.word	274877907
 8423 0dc4 00000000 		.word	emg_1_status
 8424 0dc8 72010000 		.word	idx.10747
 8425 0dcc 00000000 		.word	g_meas
 8426 0dd0 00000000 		.word	g_ref
 8427              	.L567:
2395:..\src/interruptions.c ****         default:
 8428              		.loc 1 2395 0
 8429 0dd4 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 194


 8430              	.L496:
2398:..\src/interruptions.c ****     }
2399:..\src/interruptions.c ****         
2400:..\src/interruptions.c ****     if (interrupt_flag){
 8431              		.loc 1 2400 0
 8432 0dd6 A74B     		ldr	r3, .L586
 8433 0dd8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8434 0dda 002B     		cmp	r3, #0
 8435 0ddc 04D0     		beq	.L512
2401:..\src/interruptions.c ****         interrupt_flag = FALSE;
 8436              		.loc 1 2401 0
 8437 0dde A54B     		ldr	r3, .L586
 8438 0de0 0022     		movs	r2, #0
 8439 0de2 1A70     		strb	r2, [r3]
2402:..\src/interruptions.c ****         interrupt_manager();
 8440              		.loc 1 2402 0
 8441 0de4 FFF7FEFF 		bl	interrupt_manager
 8442              	.L512:
2403:..\src/interruptions.c ****     }
2404:..\src/interruptions.c ****     
2405:..\src/interruptions.c ****     if (c_mem.motor[0].input_mode == INPUT_MODE_JOYSTICK || c_mem.motor[1].input_mode == INPUT_MODE
 8443              		.loc 1 2405 0
 8444 0de8 A34B     		ldr	r3, .L586+4
 8445 0dea 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 8446 0dee 062B     		cmp	r3, #6
 8447 0df0 05D0     		beq	.L513
 8448              		.loc 1 2405 0 is_stmt 0 discriminator 1
 8449 0df2 A14B     		ldr	r3, .L586+4
 8450 0df4 93F87E31 		ldrb	r3, [r3, #382]	@ zero_extendqisi2
 8451 0df8 062B     		cmp	r3, #6
 8452 0dfa 40F0C481 		bne	.L514
 8453              	.L513:
2406:..\src/interruptions.c ****         // Read joystick
2407:..\src/interruptions.c ****         
2408:..\src/interruptions.c ****         switch (joy_UD_status) {
 8454              		.loc 1 2408 0 is_stmt 1
 8455 0dfe 9F4B     		ldr	r3, .L586+8
 8456 0e00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8457 0e02 052B     		cmp	r3, #5
 8458 0e04 00F2CB80 		bhi	.L515
 8459 0e08 01A2     		adr	r2, .L517
 8460 0e0a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8461 0e0e 00BF     		.p2align 2
 8462              	.L517:
 8463 0e10 290E0000 		.word	.L516+1
 8464 0e14 C50E0000 		.word	.L518+1
 8465 0e18 D90E0000 		.word	.L519+1
 8466 0e1c 0D0F0000 		.word	.L520+1
 8467 0e20 790F0000 		.word	.L521+1
 8468 0e24 790F0000 		.word	.L521+1
 8469              		.p2align 1
 8470              	.L516:
2409:..\src/interruptions.c ****             case NORMAL:
2410:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[2]);
 8471              		.loc 1 2410 0
 8472 0e28 954B     		ldr	r3, .L586+12
 8473 0e2a B3F90430 		ldrsh	r3, [r3, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 195


 8474 0e2e 7B60     		str	r3, [r7, #4]
2411:..\src/interruptions.c ****                 // Remap the analog reading from -1024 to 1024.  
2412:..\src/interruptions.c ****                 i_aux = (int32) (((float) (i_aux - UD_mean_value) / UD_mean_value) * c_mem.JOY_spec
 8475              		.loc 1 2412 0
 8476 0e30 944B     		ldr	r3, .L586+16
 8477 0e32 1B68     		ldr	r3, [r3]
 8478 0e34 7A68     		ldr	r2, [r7, #4]
 8479 0e36 D31A     		subs	r3, r2, r3
 8480 0e38 1846     		mov	r0, r3
 8481 0e3a FFF7FEFF 		bl	__aeabi_i2f
 8482 0e3e 0446     		mov	r4, r0
 8483 0e40 904B     		ldr	r3, .L586+16
 8484 0e42 1B68     		ldr	r3, [r3]
 8485 0e44 1846     		mov	r0, r3
 8486 0e46 FFF7FEFF 		bl	__aeabi_i2f
 8487 0e4a 0346     		mov	r3, r0
 8488 0e4c 1946     		mov	r1, r3
 8489 0e4e 2046     		mov	r0, r4
 8490 0e50 FFF7FEFF 		bl	__aeabi_fdiv
 8491 0e54 0346     		mov	r3, r0
 8492 0e56 1C46     		mov	r4, r3
 8493 0e58 874B     		ldr	r3, .L586+4
 8494 0e5a B3F8B632 		ldrh	r3, [r3, #694]
 8495 0e5e 1846     		mov	r0, r3
 8496 0e60 FFF7FEFF 		bl	__aeabi_i2f
 8497 0e64 0346     		mov	r3, r0
 8498 0e66 1946     		mov	r1, r3
 8499 0e68 2046     		mov	r0, r4
 8500 0e6a FFF7FEFF 		bl	__aeabi_fmul
 8501 0e6e 0346     		mov	r3, r0
 8502 0e70 1846     		mov	r0, r3
 8503 0e72 FFF7FEFF 		bl	__aeabi_f2iz
 8504 0e76 0346     		mov	r3, r0
 8505 0e78 7B60     		str	r3, [r7, #4]
2413:..\src/interruptions.c ****                 
2414:..\src/interruptions.c ****                 if (interrupt_flag){
 8506              		.loc 1 2414 0
 8507 0e7a 7E4B     		ldr	r3, .L586
 8508 0e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8509 0e7e 002B     		cmp	r3, #0
 8510 0e80 04D0     		beq	.L522
2415:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8511              		.loc 1 2415 0
 8512 0e82 7C4B     		ldr	r3, .L586
 8513 0e84 0022     		movs	r2, #0
 8514 0e86 1A70     		strb	r2, [r3]
2416:..\src/interruptions.c ****                     interrupt_manager();
 8515              		.loc 1 2416 0
 8516 0e88 FFF7FEFF 		bl	interrupt_manager
 8517              	.L522:
2417:..\src/interruptions.c ****                 }
2418:..\src/interruptions.c **** 
2419:..\src/interruptions.c ****                 //Saturation
2420:..\src/interruptions.c ****                 if (i_aux < -1024) 
 8518              		.loc 1 2420 0
 8519 0e8c 7B68     		ldr	r3, [r7, #4]
 8520 0e8e 13F5806F 		cmn	r3, #1024
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 196


 8521 0e92 01DA     		bge	.L523
2421:..\src/interruptions.c ****                     i_aux = -1024;
 8522              		.loc 1 2421 0
 8523 0e94 7C4B     		ldr	r3, .L586+20
 8524 0e96 7B60     		str	r3, [r7, #4]
 8525              	.L523:
2422:..\src/interruptions.c ****                 if (i_aux > 1024)
 8526              		.loc 1 2422 0
 8527 0e98 7B68     		ldr	r3, [r7, #4]
 8528 0e9a B3F5806F 		cmp	r3, #1024
 8529 0e9e 02DD     		ble	.L524
2423:..\src/interruptions.c ****                     i_aux = 1024;
 8530              		.loc 1 2423 0
 8531 0ea0 4FF48063 		mov	r3, #1024
 8532 0ea4 7B60     		str	r3, [r7, #4]
 8533              	.L524:
2424:..\src/interruptions.c **** 
2425:..\src/interruptions.c ****                 g_adc_meas.joystick[1] = (int16) i_aux;
 8534              		.loc 1 2425 0
 8535 0ea6 7B68     		ldr	r3, [r7, #4]
 8536 0ea8 1BB2     		sxth	r3, r3
 8537 0eaa 1A46     		mov	r2, r3
 8538 0eac 774B     		ldr	r3, .L586+24
 8539 0eae 5A62     		str	r2, [r3, #36]
2426:..\src/interruptions.c **** 
2427:..\src/interruptions.c ****                 if (interrupt_flag){
 8540              		.loc 1 2427 0
 8541 0eb0 704B     		ldr	r3, .L586
 8542 0eb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8543 0eb4 002B     		cmp	r3, #0
 8544 0eb6 6BD0     		beq	.L568
2428:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8545              		.loc 1 2428 0
 8546 0eb8 6E4B     		ldr	r3, .L586
 8547 0eba 0022     		movs	r2, #0
 8548 0ebc 1A70     		strb	r2, [r3]
2429:..\src/interruptions.c ****                     interrupt_manager();
 8549              		.loc 1 2429 0
 8550 0ebe FFF7FEFF 		bl	interrupt_manager
2430:..\src/interruptions.c ****                 }
2431:..\src/interruptions.c **** 
2432:..\src/interruptions.c ****             break;
 8551              		.loc 1 2432 0
 8552 0ec2 65E0     		b	.L568
 8553              	.L518:
2433:..\src/interruptions.c **** 
2434:..\src/interruptions.c ****             case RESET: // reset variables
2435:..\src/interruptions.c ****                 UD_counter = 0;
 8554              		.loc 1 2435 0
 8555 0ec4 724B     		ldr	r3, .L586+28
 8556 0ec6 0022     		movs	r2, #0
 8557 0ec8 1A80     		strh	r2, [r3]	@ movhi
2436:..\src/interruptions.c ****                 UD_mean_value = 0;
 8558              		.loc 1 2436 0
 8559 0eca 6E4B     		ldr	r3, .L586+16
 8560 0ecc 0022     		movs	r2, #0
 8561 0ece 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 197


2437:..\src/interruptions.c ****                 joy_UD_status = WAIT; // go to waiting status
 8562              		.loc 1 2437 0
 8563 0ed0 6A4B     		ldr	r3, .L586+8
 8564 0ed2 0422     		movs	r2, #4
 8565 0ed4 1A70     		strb	r2, [r3]
2438:..\src/interruptions.c **** 
2439:..\src/interruptions.c ****             break;
 8566              		.loc 1 2439 0
 8567 0ed6 62E0     		b	.L515
 8568              	.L519:
2440:..\src/interruptions.c **** 
2441:..\src/interruptions.c ****             case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
2442:..\src/interruptions.c ****                 UD_counter++;
 8569              		.loc 1 2442 0
 8570 0ed8 6D4B     		ldr	r3, .L586+28
 8571 0eda 1B88     		ldrh	r3, [r3]
 8572 0edc 0133     		adds	r3, r3, #1
 8573 0ede 9AB2     		uxth	r2, r3
 8574 0ee0 6B4B     		ldr	r3, .L586+28
 8575 0ee2 1A80     		strh	r2, [r3]	@ movhi
2443:..\src/interruptions.c ****                 if (UD_counter == JOYSTICK_SAMPLE_TO_DISCARD) {
 8576              		.loc 1 2443 0
 8577 0ee4 6A4B     		ldr	r3, .L586+28
 8578 0ee6 1B88     		ldrh	r3, [r3]
 8579 0ee8 642B     		cmp	r3, #100
 8580 0eea 53D1     		bne	.L569
2444:..\src/interruptions.c ****                     UD_counter = 0;                     // reset counter
 8581              		.loc 1 2444 0
 8582 0eec 684B     		ldr	r3, .L586+28
 8583 0eee 0022     		movs	r2, #0
 8584 0ef0 1A80     		strh	r2, [r3]	@ movhi
2445:..\src/interruptions.c **** 
2446:..\src/interruptions.c ****                     if (interrupt_flag){
 8585              		.loc 1 2446 0
 8586 0ef2 604B     		ldr	r3, .L586
 8587 0ef4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8588 0ef6 002B     		cmp	r3, #0
 8589 0ef8 04D0     		beq	.L527
2447:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 8590              		.loc 1 2447 0
 8591 0efa 5E4B     		ldr	r3, .L586
 8592 0efc 0022     		movs	r2, #0
 8593 0efe 1A70     		strb	r2, [r3]
2448:..\src/interruptions.c ****                         interrupt_manager();
 8594              		.loc 1 2448 0
 8595 0f00 FFF7FEFF 		bl	interrupt_manager
 8596              	.L527:
2449:..\src/interruptions.c ****                     }
2450:..\src/interruptions.c **** 
2451:..\src/interruptions.c ****                     joy_UD_status = SUM_AND_MEAN;           // sum and mean status
 8597              		.loc 1 2451 0
 8598 0f04 5D4B     		ldr	r3, .L586+8
 8599 0f06 0322     		movs	r2, #3
 8600 0f08 1A70     		strb	r2, [r3]
2452:..\src/interruptions.c ****                 }
2453:..\src/interruptions.c **** 
2454:..\src/interruptions.c ****             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 198


 8601              		.loc 1 2454 0
 8602 0f0a 43E0     		b	.L569
 8603              	.L520:
2455:..\src/interruptions.c **** 
2456:..\src/interruptions.c ****             case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2457:..\src/interruptions.c ****                 // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2458:..\src/interruptions.c ****                 UD_counter++;
 8604              		.loc 1 2458 0
 8605 0f0c 604B     		ldr	r3, .L586+28
 8606 0f0e 1B88     		ldrh	r3, [r3]
 8607 0f10 0133     		adds	r3, r3, #1
 8608 0f12 9AB2     		uxth	r2, r3
 8609 0f14 5E4B     		ldr	r3, .L586+28
 8610 0f16 1A80     		strh	r2, [r3]	@ movhi
2459:..\src/interruptions.c ****                 UD_mean_value += (int32)(ADC_buf[2]);        // No filter
 8611              		.loc 1 2459 0
 8612 0f18 594B     		ldr	r3, .L586+12
 8613 0f1a B3F90430 		ldrsh	r3, [r3, #4]
 8614 0f1e 1A46     		mov	r2, r3
 8615 0f20 584B     		ldr	r3, .L586+16
 8616 0f22 1B68     		ldr	r3, [r3]
 8617 0f24 1344     		add	r3, r3, r2
 8618 0f26 574A     		ldr	r2, .L586+16
 8619 0f28 1360     		str	r3, [r2]
2460:..\src/interruptions.c **** 
2461:..\src/interruptions.c ****                 if (interrupt_flag){
 8620              		.loc 1 2461 0
 8621 0f2a 524B     		ldr	r3, .L586
 8622 0f2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8623 0f2e 002B     		cmp	r3, #0
 8624 0f30 04D0     		beq	.L528
2462:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8625              		.loc 1 2462 0
 8626 0f32 504B     		ldr	r3, .L586
 8627 0f34 0022     		movs	r2, #0
 8628 0f36 1A70     		strb	r2, [r3]
2463:..\src/interruptions.c ****                     interrupt_manager();
 8629              		.loc 1 2463 0
 8630 0f38 FFF7FEFF 		bl	interrupt_manager
 8631              	.L528:
2464:..\src/interruptions.c ****                 }
2465:..\src/interruptions.c **** 
2466:..\src/interruptions.c ****                 if (UD_counter == SAMPLES_FOR_JOYSTICK_MEAN) {
 8632              		.loc 1 2466 0
 8633 0f3c 544B     		ldr	r3, .L586+28
 8634 0f3e 1B88     		ldrh	r3, [r3]
 8635 0f40 C82B     		cmp	r3, #200
 8636 0f42 29D1     		bne	.L570
2467:..\src/interruptions.c ****                     UD_mean_value = UD_mean_value / SAMPLES_FOR_JOYSTICK_MEAN; // calc mean
 8637              		.loc 1 2467 0
 8638 0f44 4F4B     		ldr	r3, .L586+16
 8639 0f46 1B68     		ldr	r3, [r3]
 8640 0f48 524A     		ldr	r2, .L586+32
 8641 0f4a 82FB0312 		smull	r1, r2, r2, r3
 8642 0f4e 9211     		asrs	r2, r2, #6
 8643 0f50 DB17     		asrs	r3, r3, #31
 8644 0f52 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 199


 8645 0f54 4B4A     		ldr	r2, .L586+16
 8646 0f56 1360     		str	r3, [r2]
2468:..\src/interruptions.c **** 
2469:..\src/interruptions.c ****                     if (interrupt_flag){
 8647              		.loc 1 2469 0
 8648 0f58 464B     		ldr	r3, .L586
 8649 0f5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8650 0f5c 002B     		cmp	r3, #0
 8651 0f5e 04D0     		beq	.L530
2470:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 8652              		.loc 1 2470 0
 8653 0f60 444B     		ldr	r3, .L586
 8654 0f62 0022     		movs	r2, #0
 8655 0f64 1A70     		strb	r2, [r3]
2471:..\src/interruptions.c ****                         interrupt_manager();
 8656              		.loc 1 2471 0
 8657 0f66 FFF7FEFF 		bl	interrupt_manager
 8658              	.L530:
2472:..\src/interruptions.c ****                     }
2473:..\src/interruptions.c **** 
2474:..\src/interruptions.c ****                     UD_counter = 0;          // reset counter
 8659              		.loc 1 2474 0
 8660 0f6a 494B     		ldr	r3, .L586+28
 8661 0f6c 0022     		movs	r2, #0
 8662 0f6e 1A80     		strh	r2, [r3]	@ movhi
2475:..\src/interruptions.c ****                     joy_UD_status = NORMAL;           // goto normal execution
 8663              		.loc 1 2475 0
 8664 0f70 424B     		ldr	r3, .L586+8
 8665 0f72 0022     		movs	r2, #0
 8666 0f74 1A70     		strb	r2, [r3]
2476:..\src/interruptions.c ****                 }
2477:..\src/interruptions.c ****             break;
 8667              		.loc 1 2477 0
 8668 0f76 0FE0     		b	.L570
 8669              	.L521:
2478:..\src/interruptions.c **** 
2479:..\src/interruptions.c ****             case WAIT: case WAIT_EoC: // wait for both EMG calibrations to be done
2480:..\src/interruptions.c ****                 if (emg_1_status == NORMAL && emg_2_status == NORMAL)
 8670              		.loc 1 2480 0
 8671 0f78 474B     		ldr	r3, .L586+36
 8672 0f7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8673 0f7c 002B     		cmp	r3, #0
 8674 0f7e 0DD1     		bne	.L571
 8675              		.loc 1 2480 0 is_stmt 0 discriminator 1
 8676 0f80 464B     		ldr	r3, .L586+40
 8677 0f82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8678 0f84 002B     		cmp	r3, #0
 8679 0f86 09D1     		bne	.L571
2481:..\src/interruptions.c ****                     joy_UD_status = DISCARD;           // goto discard sample
 8680              		.loc 1 2481 0 is_stmt 1
 8681 0f88 3C4B     		ldr	r3, .L586+8
 8682 0f8a 0222     		movs	r2, #2
 8683 0f8c 1A70     		strb	r2, [r3]
2482:..\src/interruptions.c ****             break;
 8684              		.loc 1 2482 0
 8685 0f8e 05E0     		b	.L571
 8686              	.L568:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 200


2432:..\src/interruptions.c **** 
 8687              		.loc 1 2432 0
 8688 0f90 00BF     		nop
 8689 0f92 04E0     		b	.L515
 8690              	.L569:
2454:..\src/interruptions.c **** 
 8691              		.loc 1 2454 0
 8692 0f94 00BF     		nop
 8693 0f96 02E0     		b	.L515
 8694              	.L570:
2477:..\src/interruptions.c **** 
 8695              		.loc 1 2477 0
 8696 0f98 00BF     		nop
 8697 0f9a 00E0     		b	.L515
 8698              	.L571:
 8699              		.loc 1 2482 0
 8700 0f9c 00BF     		nop
 8701              	.L515:
2483:..\src/interruptions.c ****         }
2484:..\src/interruptions.c **** 
2485:..\src/interruptions.c ****         if (interrupt_flag){
 8702              		.loc 1 2485 0
 8703 0f9e 354B     		ldr	r3, .L586
 8704 0fa0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8705 0fa2 002B     		cmp	r3, #0
 8706 0fa4 04D0     		beq	.L532
2486:..\src/interruptions.c ****             interrupt_flag = FALSE;
 8707              		.loc 1 2486 0
 8708 0fa6 334B     		ldr	r3, .L586
 8709 0fa8 0022     		movs	r2, #0
 8710 0faa 1A70     		strb	r2, [r3]
2487:..\src/interruptions.c ****             interrupt_manager();
 8711              		.loc 1 2487 0
 8712 0fac FFF7FEFF 		bl	interrupt_manager
 8713              	.L532:
2488:..\src/interruptions.c ****         }
2489:..\src/interruptions.c ****             
2490:..\src/interruptions.c ****         switch (joy_LR_status) {
 8714              		.loc 1 2490 0
 8715 0fb0 3B4B     		ldr	r3, .L586+44
 8716 0fb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8717 0fb4 052B     		cmp	r3, #5
 8718 0fb6 00F2DD80 		bhi	.L533
 8719 0fba 01A2     		adr	r2, .L535
 8720 0fbc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8721              		.p2align 2
 8722              	.L535:
 8723 0fc0 D90F0000 		.word	.L534+1
 8724 0fc4 A9100000 		.word	.L536+1
 8725 0fc8 BD100000 		.word	.L537+1
 8726 0fcc F1100000 		.word	.L538+1
 8727 0fd0 4B110000 		.word	.L539+1
 8728 0fd4 4B110000 		.word	.L539+1
 8729              		.p2align 1
 8730              	.L534:
2491:..\src/interruptions.c ****             case NORMAL:
2492:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[3]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 201


 8731              		.loc 1 2492 0
 8732 0fd8 294B     		ldr	r3, .L586+12
 8733 0fda B3F90630 		ldrsh	r3, [r3, #6]
 8734 0fde 7B60     		str	r3, [r7, #4]
2493:..\src/interruptions.c **** 
2494:..\src/interruptions.c ****                 i_aux = (int32) (((float) (i_aux - LR_mean_value) / LR_mean_value) * c_mem.JOY_spec
 8735              		.loc 1 2494 0
 8736 0fe0 304B     		ldr	r3, .L586+48
 8737 0fe2 1B68     		ldr	r3, [r3]
 8738 0fe4 7A68     		ldr	r2, [r7, #4]
 8739 0fe6 D31A     		subs	r3, r2, r3
 8740 0fe8 1846     		mov	r0, r3
 8741 0fea FFF7FEFF 		bl	__aeabi_i2f
 8742 0fee 0446     		mov	r4, r0
 8743 0ff0 2C4B     		ldr	r3, .L586+48
 8744 0ff2 1B68     		ldr	r3, [r3]
 8745 0ff4 1846     		mov	r0, r3
 8746 0ff6 FFF7FEFF 		bl	__aeabi_i2f
 8747 0ffa 0346     		mov	r3, r0
 8748 0ffc 1946     		mov	r1, r3
 8749 0ffe 2046     		mov	r0, r4
 8750 1000 FFF7FEFF 		bl	__aeabi_fdiv
 8751 1004 0346     		mov	r3, r0
 8752 1006 1C46     		mov	r4, r3
 8753 1008 1B4B     		ldr	r3, .L586+4
 8754 100a B3F8B432 		ldrh	r3, [r3, #692]
 8755 100e 1846     		mov	r0, r3
 8756 1010 FFF7FEFF 		bl	__aeabi_i2f
 8757 1014 0346     		mov	r3, r0
 8758 1016 1946     		mov	r1, r3
 8759 1018 2046     		mov	r0, r4
 8760 101a FFF7FEFF 		bl	__aeabi_fmul
 8761 101e 0346     		mov	r3, r0
 8762 1020 1846     		mov	r0, r3
 8763 1022 FFF7FEFF 		bl	__aeabi_f2iz
 8764 1026 0346     		mov	r3, r0
 8765 1028 7B60     		str	r3, [r7, #4]
2495:..\src/interruptions.c ****                 
2496:..\src/interruptions.c ****                 if (interrupt_flag){
 8766              		.loc 1 2496 0
 8767 102a 124B     		ldr	r3, .L586
 8768 102c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8769 102e 002B     		cmp	r3, #0
 8770 1030 04D0     		beq	.L540
2497:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8771              		.loc 1 2497 0
 8772 1032 104B     		ldr	r3, .L586
 8773 1034 0022     		movs	r2, #0
 8774 1036 1A70     		strb	r2, [r3]
2498:..\src/interruptions.c ****                     interrupt_manager();
 8775              		.loc 1 2498 0
 8776 1038 FFF7FEFF 		bl	interrupt_manager
 8777              	.L540:
2499:..\src/interruptions.c ****                 }
2500:..\src/interruptions.c **** 
2501:..\src/interruptions.c ****                 //Saturation
2502:..\src/interruptions.c ****                 if (i_aux < -1024)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 202


 8778              		.loc 1 2502 0
 8779 103c 7B68     		ldr	r3, [r7, #4]
 8780 103e 13F5806F 		cmn	r3, #1024
 8781 1042 01DA     		bge	.L541
2503:..\src/interruptions.c ****                     i_aux = -1024;
 8782              		.loc 1 2503 0
 8783 1044 104B     		ldr	r3, .L586+20
 8784 1046 7B60     		str	r3, [r7, #4]
 8785              	.L541:
2504:..\src/interruptions.c ****                 if (i_aux > 1024)
 8786              		.loc 1 2504 0
 8787 1048 7B68     		ldr	r3, [r7, #4]
 8788 104a B3F5806F 		cmp	r3, #1024
 8789 104e 02DD     		ble	.L542
2505:..\src/interruptions.c ****                     i_aux = 1024;
 8790              		.loc 1 2505 0
 8791 1050 4FF48063 		mov	r3, #1024
 8792 1054 7B60     		str	r3, [r7, #4]
 8793              	.L542:
2506:..\src/interruptions.c **** 
2507:..\src/interruptions.c ****                 if (interrupt_flag){
 8794              		.loc 1 2507 0
 8795 1056 074B     		ldr	r3, .L586
 8796 1058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8797 105a 002B     		cmp	r3, #0
 8798 105c 04D0     		beq	.L543
2508:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8799              		.loc 1 2508 0
 8800 105e 054B     		ldr	r3, .L586
 8801 1060 0022     		movs	r2, #0
 8802 1062 1A70     		strb	r2, [r3]
2509:..\src/interruptions.c ****                     interrupt_manager();
 8803              		.loc 1 2509 0
 8804 1064 FFF7FEFF 		bl	interrupt_manager
 8805              	.L543:
2510:..\src/interruptions.c ****                 }
2511:..\src/interruptions.c **** 
2512:..\src/interruptions.c ****                 g_adc_meas.joystick[0] = (int16) i_aux;
 8806              		.loc 1 2512 0
 8807 1068 7B68     		ldr	r3, [r7, #4]
 8808 106a 1BB2     		sxth	r3, r3
 8809 106c 1A46     		mov	r2, r3
 8810 106e 074B     		ldr	r3, .L586+24
 8811 1070 1A62     		str	r2, [r3, #32]
2513:..\src/interruptions.c **** 
2514:..\src/interruptions.c ****             break;
 8812              		.loc 1 2514 0
 8813 1072 7FE0     		b	.L533
 8814              	.L587:
 8815              		.align	2
 8816              	.L586:
 8817 1074 00000000 		.word	interrupt_flag
 8818 1078 00000000 		.word	c_mem
 8819 107c 00000000 		.word	joy_UD_status
 8820 1080 00000000 		.word	ADC_buf
 8821 1084 7C010000 		.word	UD_mean_value.10741
 8822 1088 00FCFFFF 		.word	-1024
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 203


 8823 108c 00000000 		.word	g_adc_meas
 8824 1090 80010000 		.word	UD_counter.10739
 8825 1094 1F85EB51 		.word	1374389535
 8826 1098 00000000 		.word	emg_1_status
 8827 109c 00000000 		.word	emg_2_status
 8828 10a0 00000000 		.word	joy_LR_status
 8829 10a4 84010000 		.word	LR_mean_value.10742
 8830              	.L536:
2515:..\src/interruptions.c **** 
2516:..\src/interruptions.c ****             case RESET: // reset variables
2517:..\src/interruptions.c ****                 LR_counter = 0;
 8831              		.loc 1 2517 0
 8832 10a8 644B     		ldr	r3, .L588
 8833 10aa 0022     		movs	r2, #0
 8834 10ac 1A80     		strh	r2, [r3]	@ movhi
2518:..\src/interruptions.c ****                 LR_mean_value = 0;
 8835              		.loc 1 2518 0
 8836 10ae 644B     		ldr	r3, .L588+4
 8837 10b0 0022     		movs	r2, #0
 8838 10b2 1A60     		str	r2, [r3]
2519:..\src/interruptions.c ****                 joy_LR_status = WAIT; // goes waiting for all conversions to be done
 8839              		.loc 1 2519 0
 8840 10b4 634B     		ldr	r3, .L588+8
 8841 10b6 0422     		movs	r2, #4
 8842 10b8 1A70     		strb	r2, [r3]
2520:..\src/interruptions.c ****             break;
 8843              		.loc 1 2520 0
 8844 10ba 5BE0     		b	.L533
 8845              	.L537:
2521:..\src/interruptions.c **** 
2522:..\src/interruptions.c ****             case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples8
2523:..\src/interruptions.c ****                 LR_counter++;
 8846              		.loc 1 2523 0
 8847 10bc 5F4B     		ldr	r3, .L588
 8848 10be 1B88     		ldrh	r3, [r3]
 8849 10c0 0133     		adds	r3, r3, #1
 8850 10c2 9AB2     		uxth	r2, r3
 8851 10c4 5D4B     		ldr	r3, .L588
 8852 10c6 1A80     		strh	r2, [r3]	@ movhi
2524:..\src/interruptions.c ****                 if (LR_counter == JOYSTICK_SAMPLE_TO_DISCARD) {
 8853              		.loc 1 2524 0
 8854 10c8 5C4B     		ldr	r3, .L588
 8855 10ca 1B88     		ldrh	r3, [r3]
 8856 10cc 642B     		cmp	r3, #100
 8857 10ce 4CD1     		bne	.L572
2525:..\src/interruptions.c ****                     LR_counter = 0;                     // reset counter
 8858              		.loc 1 2525 0
 8859 10d0 5A4B     		ldr	r3, .L588
 8860 10d2 0022     		movs	r2, #0
 8861 10d4 1A80     		strh	r2, [r3]	@ movhi
2526:..\src/interruptions.c **** 
2527:..\src/interruptions.c ****                     if (interrupt_flag){
 8862              		.loc 1 2527 0
 8863 10d6 5C4B     		ldr	r3, .L588+12
 8864 10d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8865 10da 002B     		cmp	r3, #0
 8866 10dc 04D0     		beq	.L545
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 204


2528:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 8867              		.loc 1 2528 0
 8868 10de 5A4B     		ldr	r3, .L588+12
 8869 10e0 0022     		movs	r2, #0
 8870 10e2 1A70     		strb	r2, [r3]
2529:..\src/interruptions.c ****                         interrupt_manager();
 8871              		.loc 1 2529 0
 8872 10e4 FFF7FEFF 		bl	interrupt_manager
 8873              	.L545:
2530:..\src/interruptions.c ****                     }
2531:..\src/interruptions.c **** 
2532:..\src/interruptions.c ****                     joy_LR_status = SUM_AND_MEAN;           // sum and mean status
 8874              		.loc 1 2532 0
 8875 10e8 564B     		ldr	r3, .L588+8
 8876 10ea 0322     		movs	r2, #3
 8877 10ec 1A70     		strb	r2, [r3]
2533:..\src/interruptions.c ****                 }
2534:..\src/interruptions.c ****             break;
 8878              		.loc 1 2534 0
 8879 10ee 3CE0     		b	.L572
 8880              	.L538:
2535:..\src/interruptions.c **** 
2536:..\src/interruptions.c ****             case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2537:..\src/interruptions.c ****                 // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2538:..\src/interruptions.c ****                 LR_counter++;
 8881              		.loc 1 2538 0
 8882 10f0 524B     		ldr	r3, .L588
 8883 10f2 1B88     		ldrh	r3, [r3]
 8884 10f4 0133     		adds	r3, r3, #1
 8885 10f6 9AB2     		uxth	r2, r3
 8886 10f8 504B     		ldr	r3, .L588
 8887 10fa 1A80     		strh	r2, [r3]	@ movhi
2539:..\src/interruptions.c ****                 LR_mean_value += (int32)(ADC_buf[3]);
 8888              		.loc 1 2539 0
 8889 10fc 534B     		ldr	r3, .L588+16
 8890 10fe B3F90630 		ldrsh	r3, [r3, #6]
 8891 1102 1A46     		mov	r2, r3
 8892 1104 4E4B     		ldr	r3, .L588+4
 8893 1106 1B68     		ldr	r3, [r3]
 8894 1108 1344     		add	r3, r3, r2
 8895 110a 4D4A     		ldr	r2, .L588+4
 8896 110c 1360     		str	r3, [r2]
2540:..\src/interruptions.c ****                 if (LR_counter == SAMPLES_FOR_JOYSTICK_MEAN) {
 8897              		.loc 1 2540 0
 8898 110e 4B4B     		ldr	r3, .L588
 8899 1110 1B88     		ldrh	r3, [r3]
 8900 1112 C82B     		cmp	r3, #200
 8901 1114 2BD1     		bne	.L573
2541:..\src/interruptions.c ****                     LR_mean_value = LR_mean_value / SAMPLES_FOR_JOYSTICK_MEAN; // calc mean
 8902              		.loc 1 2541 0
 8903 1116 4A4B     		ldr	r3, .L588+4
 8904 1118 1B68     		ldr	r3, [r3]
 8905 111a 4D4A     		ldr	r2, .L588+20
 8906 111c 82FB0312 		smull	r1, r2, r2, r3
 8907 1120 9211     		asrs	r2, r2, #6
 8908 1122 DB17     		asrs	r3, r3, #31
 8909 1124 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 205


 8910 1126 464A     		ldr	r2, .L588+4
 8911 1128 1360     		str	r3, [r2]
2542:..\src/interruptions.c ****                     
2543:..\src/interruptions.c ****                     if (interrupt_flag){
 8912              		.loc 1 2543 0
 8913 112a 474B     		ldr	r3, .L588+12
 8914 112c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8915 112e 002B     		cmp	r3, #0
 8916 1130 04D0     		beq	.L547
2544:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 8917              		.loc 1 2544 0
 8918 1132 454B     		ldr	r3, .L588+12
 8919 1134 0022     		movs	r2, #0
 8920 1136 1A70     		strb	r2, [r3]
2545:..\src/interruptions.c ****                         interrupt_manager();
 8921              		.loc 1 2545 0
 8922 1138 FFF7FEFF 		bl	interrupt_manager
 8923              	.L547:
2546:..\src/interruptions.c ****                     }
2547:..\src/interruptions.c **** 
2548:..\src/interruptions.c ****                     LR_counter = 0;               // reset counter
 8924              		.loc 1 2548 0
 8925 113c 3F4B     		ldr	r3, .L588
 8926 113e 0022     		movs	r2, #0
 8927 1140 1A80     		strh	r2, [r3]	@ movhi
2549:..\src/interruptions.c ****                     joy_LR_status = NORMAL;           // goto normal execution
 8928              		.loc 1 2549 0
 8929 1142 404B     		ldr	r3, .L588+8
 8930 1144 0022     		movs	r2, #0
 8931 1146 1A70     		strb	r2, [r3]
2550:..\src/interruptions.c ****                 }
2551:..\src/interruptions.c ****             break;
 8932              		.loc 1 2551 0
 8933 1148 11E0     		b	.L573
 8934              	.L539:
2552:..\src/interruptions.c **** 
2553:..\src/interruptions.c ****             case WAIT: case WAIT_EoC:
2554:..\src/interruptions.c ****                 if(emg_1_status == NORMAL && emg_2_status == NORMAL && joy_UD_status == NORMAL)
 8935              		.loc 1 2554 0
 8936 114a 424B     		ldr	r3, .L588+24
 8937 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8938 114e 002B     		cmp	r3, #0
 8939 1150 0FD1     		bne	.L574
 8940              		.loc 1 2554 0 is_stmt 0 discriminator 1
 8941 1152 414B     		ldr	r3, .L588+28
 8942 1154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8943 1156 002B     		cmp	r3, #0
 8944 1158 0BD1     		bne	.L574
 8945              		.loc 1 2554 0 discriminator 2
 8946 115a 404B     		ldr	r3, .L588+32
 8947 115c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8948 115e 002B     		cmp	r3, #0
 8949 1160 07D1     		bne	.L574
2555:..\src/interruptions.c ****                     joy_LR_status = DISCARD;
 8950              		.loc 1 2555 0 is_stmt 1
 8951 1162 384B     		ldr	r3, .L588+8
 8952 1164 0222     		movs	r2, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 206


 8953 1166 1A70     		strb	r2, [r3]
2556:..\src/interruptions.c ****             break;
 8954              		.loc 1 2556 0
 8955 1168 03E0     		b	.L574
 8956              	.L572:
2534:..\src/interruptions.c **** 
 8957              		.loc 1 2534 0
 8958 116a 00BF     		nop
 8959 116c 02E0     		b	.L533
 8960              	.L573:
2551:..\src/interruptions.c **** 
 8961              		.loc 1 2551 0
 8962 116e 00BF     		nop
 8963 1170 00E0     		b	.L533
 8964              	.L574:
 8965              		.loc 1 2556 0
 8966 1172 00BF     		nop
 8967              	.L533:
2557:..\src/interruptions.c ****         }
2558:..\src/interruptions.c ****        
2559:..\src/interruptions.c ****         if (interrupt_flag){
 8968              		.loc 1 2559 0
 8969 1174 344B     		ldr	r3, .L588+12
 8970 1176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8971 1178 002B     		cmp	r3, #0
 8972 117a 04D0     		beq	.L514
2560:..\src/interruptions.c ****             interrupt_flag = FALSE;
 8973              		.loc 1 2560 0
 8974 117c 324B     		ldr	r3, .L588+12
 8975 117e 0022     		movs	r2, #0
 8976 1180 1A70     		strb	r2, [r3]
2561:..\src/interruptions.c ****             interrupt_manager();
 8977              		.loc 1 2561 0
 8978 1182 FFF7FEFF 		bl	interrupt_manager
 8979              	.L514:
2562:..\src/interruptions.c ****         }
2563:..\src/interruptions.c ****     }
2564:..\src/interruptions.c ****     
2565:..\src/interruptions.c ****     // Read also EMG additional sensors port
2566:..\src/interruptions.c ****     if (NUM_OF_ANALOG_INPUTS > 6) {
 8980              		.loc 1 2566 0
 8981 1186 364B     		ldr	r3, .L588+36
 8982 1188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8983 118a 062B     		cmp	r3, #6
 8984 118c 52D9     		bls	.L575
2567:..\src/interruptions.c ****         
2568:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_ADDITIONAL_EMGS; idx++){
 8985              		.loc 1 2568 0
 8986 118e 354B     		ldr	r3, .L588+40
 8987 1190 0022     		movs	r2, #0
 8988 1192 1A70     		strb	r2, [r3]
 8989 1194 4AE0     		b	.L550
 8990              	.L557:
2569:..\src/interruptions.c ****             
2570:..\src/interruptions.c ****             i_aux = (int32)(ADC_buf[6 + idx]);
 8991              		.loc 1 2570 0
 8992 1196 334B     		ldr	r3, .L588+40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 207


 8993 1198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8994 119a 0633     		adds	r3, r3, #6
 8995 119c 2B4A     		ldr	r2, .L588+16
 8996 119e 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 8997 11a2 7B60     		str	r3, [r7, #4]
2571:..\src/interruptions.c ****             if (i_aux < 0) 
 8998              		.loc 1 2571 0
 8999 11a4 7B68     		ldr	r3, [r7, #4]
 9000 11a6 002B     		cmp	r3, #0
 9001 11a8 01DA     		bge	.L551
2572:..\src/interruptions.c ****                 i_aux = 0;
 9002              		.loc 1 2572 0
 9003 11aa 0023     		movs	r3, #0
 9004 11ac 7B60     		str	r3, [r7, #4]
 9005              	.L551:
2573:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[2+idx]);
 9006              		.loc 1 2573 0
 9007 11ae 2D4B     		ldr	r3, .L588+40
 9008 11b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9009 11b2 0233     		adds	r3, r3, #2
 9010 11b4 DB00     		lsls	r3, r3, #3
 9011 11b6 2C4A     		ldr	r2, .L588+44
 9012 11b8 1344     		add	r3, r3, r2
 9013 11ba 1946     		mov	r1, r3
 9014 11bc 7868     		ldr	r0, [r7, #4]
 9015 11be FFF7FEFF 		bl	filter
 9016 11c2 7860     		str	r0, [r7, #4]
2574:..\src/interruptions.c ****             i_aux = (i_aux << 10) / 1024;
 9017              		.loc 1 2574 0
 9018 11c4 7B68     		ldr	r3, [r7, #4]
 9019 11c6 9B02     		lsls	r3, r3, #10
 9020 11c8 002B     		cmp	r3, #0
 9021 11ca 01DA     		bge	.L552
 9022 11cc 03F2FF33 		addw	r3, r3, #1023
 9023              	.L552:
 9024 11d0 9B12     		asrs	r3, r3, #10
 9025 11d2 7B60     		str	r3, [r7, #4]
2575:..\src/interruptions.c **** 
2576:..\src/interruptions.c ****             if (interrupt_flag){
 9026              		.loc 1 2576 0
 9027 11d4 1C4B     		ldr	r3, .L588+12
 9028 11d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9029 11d8 002B     		cmp	r3, #0
 9030 11da 04D0     		beq	.L553
2577:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 9031              		.loc 1 2577 0
 9032 11dc 1A4B     		ldr	r3, .L588+12
 9033 11de 0022     		movs	r2, #0
 9034 11e0 1A70     		strb	r2, [r3]
2578:..\src/interruptions.c ****                 interrupt_manager();
 9035              		.loc 1 2578 0
 9036 11e2 FFF7FEFF 		bl	interrupt_manager
 9037              	.L553:
2579:..\src/interruptions.c ****             }
2580:..\src/interruptions.c ****             //Saturation
2581:..\src/interruptions.c ****             if (i_aux < 0)
 9038              		.loc 1 2581 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 208


 9039 11e6 7B68     		ldr	r3, [r7, #4]
 9040 11e8 002B     		cmp	r3, #0
 9041 11ea 02DA     		bge	.L554
2582:..\src/interruptions.c ****                 i_aux = 0;
 9042              		.loc 1 2582 0
 9043 11ec 0023     		movs	r3, #0
 9044 11ee 7B60     		str	r3, [r7, #4]
 9045 11f0 06E0     		b	.L555
 9046              	.L554:
2583:..\src/interruptions.c ****             else 
2584:..\src/interruptions.c ****                 if (i_aux > 1024) 
 9047              		.loc 1 2584 0
 9048 11f2 7B68     		ldr	r3, [r7, #4]
 9049 11f4 B3F5806F 		cmp	r3, #1024
 9050 11f8 02DD     		ble	.L555
2585:..\src/interruptions.c ****                     i_aux = 1024;
 9051              		.loc 1 2585 0
 9052 11fa 4FF48063 		mov	r3, #1024
 9053 11fe 7B60     		str	r3, [r7, #4]
 9054              	.L555:
2586:..\src/interruptions.c ****             
2587:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = i_aux;
 9055              		.loc 1 2587 0
 9056 1200 184B     		ldr	r3, .L588+40
 9057 1202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9058 1204 1949     		ldr	r1, .L588+48
 9059 1206 0233     		adds	r3, r3, #2
 9060 1208 7A68     		ldr	r2, [r7, #4]
 9061 120a 41F82320 		str	r2, [r1, r3, lsl #2]
2588:..\src/interruptions.c **** 
2589:..\src/interruptions.c ****             if (interrupt_flag){
 9062              		.loc 1 2589 0
 9063 120e 0E4B     		ldr	r3, .L588+12
 9064 1210 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9065 1212 002B     		cmp	r3, #0
 9066 1214 04D0     		beq	.L556
2590:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 9067              		.loc 1 2590 0
 9068 1216 0C4B     		ldr	r3, .L588+12
 9069 1218 0022     		movs	r2, #0
 9070 121a 1A70     		strb	r2, [r3]
2591:..\src/interruptions.c ****                 interrupt_manager();
 9071              		.loc 1 2591 0
 9072 121c FFF7FEFF 		bl	interrupt_manager
 9073              	.L556:
2568:..\src/interruptions.c ****             
 9074              		.loc 1 2568 0 discriminator 2
 9075 1220 104B     		ldr	r3, .L588+40
 9076 1222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9077 1224 0133     		adds	r3, r3, #1
 9078 1226 DAB2     		uxtb	r2, r3
 9079 1228 0E4B     		ldr	r3, .L588+40
 9080 122a 1A70     		strb	r2, [r3]
 9081              	.L550:
2568:..\src/interruptions.c ****             
 9082              		.loc 1 2568 0 is_stmt 0 discriminator 1
 9083 122c 0D4B     		ldr	r3, .L588+40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 209


 9084 122e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9085 1230 052B     		cmp	r3, #5
 9086 1232 B0D9     		bls	.L557
 9087              	.L575:
2592:..\src/interruptions.c ****             }
2593:..\src/interruptions.c ****         }
2594:..\src/interruptions.c ****     }
2595:..\src/interruptions.c ****     
2596:..\src/interruptions.c **** }
 9088              		.loc 1 2596 0 is_stmt 1
 9089 1234 00BF     		nop
 9090 1236 0C37     		adds	r7, r7, #12
 9091              		.cfi_def_cfa_offset 20
 9092 1238 BD46     		mov	sp, r7
 9093              		.cfi_def_cfa_register 13
 9094              		@ sp needed
 9095 123a F0BD     		pop	{r4, r5, r6, r7, pc}
 9096              	.L589:
 9097              		.align	2
 9098              	.L588:
 9099 123c 88010000 		.word	LR_counter.10740
 9100 1240 84010000 		.word	LR_mean_value.10742
 9101 1244 00000000 		.word	joy_LR_status
 9102 1248 00000000 		.word	interrupt_flag
 9103 124c 00000000 		.word	ADC_buf
 9104 1250 1F85EB51 		.word	1374389535
 9105 1254 00000000 		.word	emg_1_status
 9106 1258 00000000 		.word	emg_2_status
 9107 125c 00000000 		.word	joy_UD_status
 9108 1260 00000000 		.word	NUM_OF_ANALOG_INPUTS
 9109 1264 72010000 		.word	idx.10747
 9110 1268 00000000 		.word	filt_emg
 9111 126c 00000000 		.word	g_adc_meas
 9112              		.cfi_endproc
 9113              	.LFE74:
 9114              		.size	analog_read_end, .-analog_read_end
 9115              		.section	.text.overcurrent_control,"ax",%progbits
 9116              		.align	2
 9117              		.global	overcurrent_control
 9118              		.thumb
 9119              		.thumb_func
 9120              		.type	overcurrent_control, %function
 9121              	overcurrent_control:
 9122              	.LFB75:
2597:..\src/interruptions.c **** 
2598:..\src/interruptions.c **** //==============================================================================
2599:..\src/interruptions.c **** //                                                           OVERCURRENT CONTROL
2600:..\src/interruptions.c **** //==============================================================================
2601:..\src/interruptions.c **** 
2602:..\src/interruptions.c **** void overcurrent_control() {
 9123              		.loc 1 2602 0
 9124              		.cfi_startproc
 9125              		@ args = 0, pretend = 0, frame = 8
 9126              		@ frame_needed = 1, uses_anonymous_args = 0
 9127              		@ link register save eliminated.
 9128 0000 80B4     		push	{r7}
 9129              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 210


 9130              		.cfi_offset 7, -4
 9131 0002 83B0     		sub	sp, sp, #12
 9132              		.cfi_def_cfa_offset 16
 9133 0004 00AF     		add	r7, sp, #0
 9134              		.cfi_def_cfa_register 7
 9135              	.LBB11:
2603:..\src/interruptions.c ****     
2604:..\src/interruptions.c ****     for (uint8 i = 0; i <NUM_OF_MOTORS; i++) {
 9136              		.loc 1 2604 0
 9137 0006 0023     		movs	r3, #0
 9138 0008 FB71     		strb	r3, [r7, #7]
 9139 000a 6CE0     		b	.L591
 9140              	.L596:
2605:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 9141              		.loc 1 2605 0
 9142 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 9143 000e 3A49     		ldr	r1, .L598
 9144 0010 1346     		mov	r3, r2
 9145 0012 DB00     		lsls	r3, r3, #3
 9146 0014 9B1A     		subs	r3, r3, r2
 9147 0016 1B01     		lsls	r3, r3, #4
 9148 0018 0B44     		add	r3, r3, r1
 9149 001a 03F58673 		add	r3, r3, #268
 9150 001e B3F90030 		ldrsh	r3, [r3]
 9151 0022 002B     		cmp	r3, #0
 9152 0024 5CD0     		beq	.L592
 9153              	.LBB12:
2606:..\src/interruptions.c ****             int32 curr = g_meas[g_mem.motor[i].encoder_line].curr;
 9154              		.loc 1 2606 0
 9155 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 9156 0028 3449     		ldr	r1, .L598+4
 9157 002a 1346     		mov	r3, r2
 9158 002c DB00     		lsls	r3, r3, #3
 9159 002e 9B1A     		subs	r3, r3, r2
 9160 0030 1B01     		lsls	r3, r3, #4
 9161 0032 0B44     		add	r3, r3, r1
 9162 0034 03F58873 		add	r3, r3, #272
 9163 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9164 003a 1946     		mov	r1, r3
 9165 003c 304A     		ldr	r2, .L598+8
 9166 003e 3423     		movs	r3, #52
 9167 0040 03FB01F3 		mul	r3, r3, r1
 9168 0044 1344     		add	r3, r3, r2
 9169 0046 0C33     		adds	r3, r3, #12
 9170 0048 1B68     		ldr	r3, [r3]
 9171 004a 3B60     		str	r3, [r7]
2607:..\src/interruptions.c ****             // check if the current is over the limit
2608:..\src/interruptions.c ****           //  if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
2609:..\src/interruptions.c ****                 if (curr < 0){
 9172              		.loc 1 2609 0
 9173 004c 3B68     		ldr	r3, [r7]
 9174 004e 002B     		cmp	r3, #0
 9175 0050 02DA     		bge	.L593
2610:..\src/interruptions.c ****                     curr = -curr;       // Invert sign to have a positive current reading in this f
 9176              		.loc 1 2610 0
 9177 0052 3B68     		ldr	r3, [r7]
 9178 0054 5B42     		negs	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 211


 9179 0056 3B60     		str	r3, [r7]
 9180              	.L593:
2611:..\src/interruptions.c ****                 }
2612:..\src/interruptions.c ****          //   }
2613:..\src/interruptions.c ****             if (curr > c_mem.motor[i].current_limit) {
 9181              		.loc 1 2613 0
 9182 0058 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 9183 005a 2749     		ldr	r1, .L598
 9184 005c 1346     		mov	r3, r2
 9185 005e DB00     		lsls	r3, r3, #3
 9186 0060 9B1A     		subs	r3, r3, r2
 9187 0062 1B01     		lsls	r3, r3, #4
 9188 0064 0B44     		add	r3, r3, r1
 9189 0066 03F58673 		add	r3, r3, #268
 9190 006a B3F90030 		ldrsh	r3, [r3]
 9191 006e 1A46     		mov	r2, r3
 9192 0070 3B68     		ldr	r3, [r7]
 9193 0072 9A42     		cmp	r2, r3
 9194 0074 09DA     		bge	.L594
2614:..\src/interruptions.c ****                 //decrease pwm_limit
2615:..\src/interruptions.c ****                 dev_pwm_limit[i]--;
 9195              		.loc 1 2615 0
 9196 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9197 0078 224A     		ldr	r2, .L598+12
 9198 007a 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 9199 007e 013A     		subs	r2, r2, #1
 9200 0080 91B2     		uxth	r1, r2
 9201 0082 204A     		ldr	r2, .L598+12
 9202 0084 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 9203 0088 18E0     		b	.L597
 9204              	.L594:
2616:..\src/interruptions.c ****             // check if the current is in the safe zone
2617:..\src/interruptions.c ****             } else if (curr < (c_mem.motor[i].current_limit - CURRENT_HYSTERESIS)) {
 9205              		.loc 1 2617 0
 9206 008a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 9207 008c 1A49     		ldr	r1, .L598
 9208 008e 1346     		mov	r3, r2
 9209 0090 DB00     		lsls	r3, r3, #3
 9210 0092 9B1A     		subs	r3, r3, r2
 9211 0094 1B01     		lsls	r3, r3, #4
 9212 0096 0B44     		add	r3, r3, r1
 9213 0098 03F58673 		add	r3, r3, #268
 9214 009c B3F90030 		ldrsh	r3, [r3]
 9215 00a0 A3F10A02 		sub	r2, r3, #10
 9216 00a4 3B68     		ldr	r3, [r7]
 9217 00a6 9A42     		cmp	r2, r3
 9218 00a8 08DD     		ble	.L597
2618:..\src/interruptions.c ****                 //increase pwm_limit
2619:..\src/interruptions.c ****                 dev_pwm_limit[i]++;
 9219              		.loc 1 2619 0
 9220 00aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9221 00ac 154A     		ldr	r2, .L598+12
 9222 00ae 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 9223 00b2 0132     		adds	r2, r2, #1
 9224 00b4 91B2     		uxth	r1, r2
 9225 00b6 134A     		ldr	r2, .L598+12
 9226 00b8 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 212


 9227              	.L597:
2620:..\src/interruptions.c ****             }
2621:..\src/interruptions.c **** 
2622:..\src/interruptions.c ****             // Bound pwm_limit
2623:..\src/interruptions.c ****             if (dev_pwm_limit[i] < 0) 
2624:..\src/interruptions.c ****                 dev_pwm_limit[i] = 0;
2625:..\src/interruptions.c ****             else 
2626:..\src/interruptions.c ****                 if (dev_pwm_limit[i] > dev_pwm_sat[i]) 
 9228              		.loc 1 2626 0
 9229 00bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9230 00be 114A     		ldr	r2, .L598+12
 9231 00c0 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 9232 00c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9233 00c6 1049     		ldr	r1, .L598+16
 9234 00c8 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 9235 00cc 9A42     		cmp	r2, r3
 9236 00ce 07D9     		bls	.L592
2627:..\src/interruptions.c ****                     dev_pwm_limit[i] = dev_pwm_sat[i];
 9237              		.loc 1 2627 0
 9238 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9239 00d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 9240 00d4 0C49     		ldr	r1, .L598+16
 9241 00d6 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 9242 00da 0A4A     		ldr	r2, .L598+12
 9243 00dc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 9244              	.L592:
 9245              	.LBE12:
2604:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 9246              		.loc 1 2604 0 discriminator 2
 9247 00e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9248 00e2 0133     		adds	r3, r3, #1
 9249 00e4 FB71     		strb	r3, [r7, #7]
 9250              	.L591:
2604:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 9251              		.loc 1 2604 0 is_stmt 0 discriminator 1
 9252 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9253 00e8 012B     		cmp	r3, #1
 9254 00ea 8FD9     		bls	.L596
 9255              	.LBE11:
2628:..\src/interruptions.c ****         }
2629:..\src/interruptions.c ****     }
2630:..\src/interruptions.c **** }
 9256              		.loc 1 2630 0 is_stmt 1
 9257 00ec 00BF     		nop
 9258 00ee 0C37     		adds	r7, r7, #12
 9259              		.cfi_def_cfa_offset 4
 9260 00f0 BD46     		mov	sp, r7
 9261              		.cfi_def_cfa_register 13
 9262              		@ sp needed
 9263 00f2 80BC     		pop	{r7}
 9264              		.cfi_restore 7
 9265              		.cfi_def_cfa_offset 0
 9266 00f4 7047     		bx	lr
 9267              	.L599:
 9268 00f6 00BF     		.align	2
 9269              	.L598:
 9270 00f8 00000000 		.word	c_mem
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 213


 9271 00fc 00000000 		.word	g_mem
 9272 0100 00000000 		.word	g_meas
 9273 0104 00000000 		.word	dev_pwm_limit
 9274 0108 00000000 		.word	dev_pwm_sat
 9275              		.cfi_endproc
 9276              	.LFE75:
 9277              		.size	overcurrent_control, .-overcurrent_control
 9278              		.section	.text.pwm_limit_search,"ax",%progbits
 9279              		.align	2
 9280              		.global	pwm_limit_search
 9281              		.thumb
 9282              		.thumb_func
 9283              		.type	pwm_limit_search, %function
 9284              	pwm_limit_search:
 9285              	.LFB76:
2631:..\src/interruptions.c **** 
2632:..\src/interruptions.c **** //==============================================================================
2633:..\src/interruptions.c **** //                                                              PWM_LIMIT_SEARCH
2634:..\src/interruptions.c **** //==============================================================================
2635:..\src/interruptions.c **** 
2636:..\src/interruptions.c **** void pwm_limit_search(uint8 mot_idx) {
 9286              		.loc 1 2636 0
 9287              		.cfi_startproc
 9288              		@ args = 0, pretend = 0, frame = 16
 9289              		@ frame_needed = 1, uses_anonymous_args = 0
 9290              		@ link register save eliminated.
 9291 0000 80B4     		push	{r7}
 9292              		.cfi_def_cfa_offset 4
 9293              		.cfi_offset 7, -4
 9294 0002 85B0     		sub	sp, sp, #20
 9295              		.cfi_def_cfa_offset 24
 9296 0004 00AF     		add	r7, sp, #0
 9297              		.cfi_def_cfa_register 7
 9298 0006 0346     		mov	r3, r0
 9299 0008 FB71     		strb	r3, [r7, #7]
2637:..\src/interruptions.c **** 
2638:..\src/interruptions.c ****     uint8 CYDATA index;
2639:..\src/interruptions.c ****     uint16 CYDATA max_tension = 26500;
 9300              		.loc 1 2639 0
 9301 000a 46F28473 		movw	r3, #26500
 9302 000e FB81     		strh	r3, [r7, #14]	@ movhi
2640:..\src/interruptions.c ****     uint16 CYDATA min_tension = 11500;
 9303              		.loc 1 2640 0
 9304 0010 42F6EC43 		movw	r3, #11500
 9305 0014 BB81     		strh	r3, [r7, #12]	@ movhi
2641:..\src/interruptions.c ****     
2642:..\src/interruptions.c ****     if (dev_tension[mot_idx] > max_tension) {
 9306              		.loc 1 2642 0
 9307 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9308 0018 1F4A     		ldr	r2, .L607
 9309 001a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9310 001e FB89     		ldrh	r3, [r7, #14]
 9311 0020 9A42     		cmp	r2, r3
 9312 0022 05DD     		ble	.L601
2643:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = 0;
 9313              		.loc 1 2643 0
 9314 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 214


 9315 0026 1D4A     		ldr	r2, .L607+4
 9316 0028 0021     		movs	r1, #0
 9317 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
2644:..\src/interruptions.c ****     } else if (dev_tension[mot_idx] < min_tension) {
2645:..\src/interruptions.c ****         if (c_mem.motor[mot_idx].motor_driver_type == DRIVER_BRUSHLESS){
2646:..\src/interruptions.c ****             dev_pwm_sat[mot_idx] = PWM_MAX_VALUE_ESC;
2647:..\src/interruptions.c ****         } else {
2648:..\src/interruptions.c ****             dev_pwm_sat[mot_idx] = PWM_MAX_VALUE_DC;
2649:..\src/interruptions.c ****         }
2650:..\src/interruptions.c ****     } else {
2651:..\src/interruptions.c ****         index = (uint8)((dev_tension[mot_idx] - min_tension) >> 9);
2652:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = pwm_preload_values[index];
2653:..\src/interruptions.c ****     }
2654:..\src/interruptions.c **** }
 9318              		.loc 1 2654 0
 9319 002e 2EE0     		b	.L606
 9320              	.L601:
2644:..\src/interruptions.c ****     } else if (dev_tension[mot_idx] < min_tension) {
 9321              		.loc 1 2644 0
 9322 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9323 0032 194A     		ldr	r2, .L607
 9324 0034 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9325 0038 BB89     		ldrh	r3, [r7, #12]
 9326 003a 9A42     		cmp	r2, r3
 9327 003c 17DA     		bge	.L603
2645:..\src/interruptions.c ****             dev_pwm_sat[mot_idx] = PWM_MAX_VALUE_ESC;
 9328              		.loc 1 2645 0
 9329 003e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 9330 0040 1749     		ldr	r1, .L607+8
 9331 0042 1346     		mov	r3, r2
 9332 0044 DB00     		lsls	r3, r3, #3
 9333 0046 9B1A     		subs	r3, r3, r2
 9334 0048 1B01     		lsls	r3, r3, #4
 9335 004a 0B44     		add	r3, r3, r1
 9336 004c E233     		adds	r3, r3, #226
 9337 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9338 0050 022B     		cmp	r3, #2
 9339 0052 06D1     		bne	.L604
2646:..\src/interruptions.c ****         } else {
 9340              		.loc 1 2646 0
 9341 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9342 0056 114A     		ldr	r2, .L607+4
 9343 0058 40F6A931 		movw	r1, #2985
 9344 005c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 9345              		.loc 1 2654 0
 9346 0060 15E0     		b	.L606
 9347              	.L604:
2648:..\src/interruptions.c ****         }
 9348              		.loc 1 2648 0
 9349 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9350 0064 0D4A     		ldr	r2, .L607+4
 9351 0066 6421     		movs	r1, #100
 9352 0068 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 9353              		.loc 1 2654 0
 9354 006c 0FE0     		b	.L606
 9355              	.L603:
2651:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = pwm_preload_values[index];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 215


 9356              		.loc 1 2651 0
 9357 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9358 0070 094A     		ldr	r2, .L607
 9359 0072 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9360 0076 BB89     		ldrh	r3, [r7, #12]
 9361 0078 D31A     		subs	r3, r2, r3
 9362 007a 5B12     		asrs	r3, r3, #9
 9363 007c FB72     		strb	r3, [r7, #11]
2652:..\src/interruptions.c ****     }
 9364              		.loc 1 2652 0
 9365 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9366 0080 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 9367 0082 0849     		ldr	r1, .L607+12
 9368 0084 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9369 0086 91B2     		uxth	r1, r2
 9370 0088 044A     		ldr	r2, .L607+4
 9371 008a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 9372              	.L606:
 9373              		.loc 1 2654 0
 9374 008e 00BF     		nop
 9375 0090 1437     		adds	r7, r7, #20
 9376              		.cfi_def_cfa_offset 4
 9377 0092 BD46     		mov	sp, r7
 9378              		.cfi_def_cfa_register 13
 9379              		@ sp needed
 9380 0094 80BC     		pop	{r7}
 9381              		.cfi_restore 7
 9382              		.cfi_def_cfa_offset 0
 9383 0096 7047     		bx	lr
 9384              	.L608:
 9385              		.align	2
 9386              	.L607:
 9387 0098 00000000 		.word	dev_tension
 9388 009c 00000000 		.word	dev_pwm_sat
 9389 00a0 00000000 		.word	c_mem
 9390 00a4 00000000 		.word	pwm_preload_values
 9391              		.cfi_endproc
 9392              	.LFE76:
 9393              		.size	pwm_limit_search, .-pwm_limit_search
 9394              		.global	__aeabi_ui2f
 9395              		.global	__aeabi_f2d
 9396              		.global	__aeabi_ddiv
 9397              		.global	__aeabi_dcmpgt
 9398              		.section	.text.cycles_counter_update,"ax",%progbits
 9399              		.align	2
 9400              		.global	cycles_counter_update
 9401              		.thumb
 9402              		.thumb_func
 9403              		.type	cycles_counter_update, %function
 9404              	cycles_counter_update:
 9405              	.LFB77:
2655:..\src/interruptions.c **** 
2656:..\src/interruptions.c **** //==============================================================================
2657:..\src/interruptions.c **** //                                                         CYCLES COUNTER UPDATE
2658:..\src/interruptions.c **** //==============================================================================
2659:..\src/interruptions.c **** 
2660:..\src/interruptions.c **** void cycles_counter_update() {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 216


 9406              		.loc 1 2660 0
 9407              		.cfi_startproc
 9408              		@ args = 0, pretend = 0, frame = 24
 9409              		@ frame_needed = 1, uses_anonymous_args = 0
 9410 0000 90B5     		push	{r4, r7, lr}
 9411              		.cfi_def_cfa_offset 12
 9412              		.cfi_offset 4, -12
 9413              		.cfi_offset 7, -8
 9414              		.cfi_offset 14, -4
 9415 0002 87B0     		sub	sp, sp, #28
 9416              		.cfi_def_cfa_offset 40
 9417 0004 00AF     		add	r7, sp, #0
 9418              		.cfi_def_cfa_register 7
2661:..\src/interruptions.c **** 	static uint8 pos_cycle_status = STATE_INACTIVE;
2662:..\src/interruptions.c ****     static uint8 emg_cycle_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
2663:..\src/interruptions.c ****     static uint8 motion_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
2664:..\src/interruptions.c ****     static uint8 emg_excess_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
2665:..\src/interruptions.c ****     static uint8 rest_cycle_status = STATE_INACTIVE;
2666:..\src/interruptions.c ****     static int32 bin_threshold = 250;
2667:..\src/interruptions.c ****     static int32 exc_act_thr = 980; //0.95*1024
2668:..\src/interruptions.c ****     static int32 thr_pos = 0;
2669:..\src/interruptions.c ****     static int32 max_pos = 0;
2670:..\src/interruptions.c ****     uint8 i, bin_st, bin_max, bin_1, bin_2;
2671:..\src/interruptions.c ****     int32 curr_pos = 0, curr_off = 0, curr_ref = 0;
 9419              		.loc 1 2671 0
 9420 0006 0023     		movs	r3, #0
 9421 0008 FB60     		str	r3, [r7, #12]
 9422 000a 0023     		movs	r3, #0
 9423 000c BB60     		str	r3, [r7, #8]
 9424 000e 0023     		movs	r3, #0
 9425 0010 3B61     		str	r3, [r7, #16]
2672:..\src/interruptions.c ****     int32 step;
2673:..\src/interruptions.c ****     static uint32 timer_value_s, timer_value_e;
2674:..\src/interruptions.c ****     static uint32 timer_exc_s[2], timer_exc_e[2];
2675:..\src/interruptions.c ****     static int32 start_emg_pos[2] = {0,0};
2676:..\src/interruptions.c **** 
2677:..\src/interruptions.c ****     curr_pos = (int32)(g_meas[g_mem.motor[0].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[0].encod
 9426              		.loc 1 2677 0
 9427 0012 A64B     		ldr	r3, .L687
 9428 0014 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9429 0018 1946     		mov	r1, r3
 9430 001a A54A     		ldr	r2, .L687+4
 9431 001c 3423     		movs	r3, #52
 9432 001e 03FB01F3 		mul	r3, r3, r1
 9433 0022 1344     		add	r3, r3, r2
 9434 0024 1A68     		ldr	r2, [r3]
 9435 0026 A14B     		ldr	r3, .L687
 9436 0028 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9437 002c 1846     		mov	r0, r3
 9438 002e 9F49     		ldr	r1, .L687
 9439 0030 0346     		mov	r3, r0
 9440 0032 5B00     		lsls	r3, r3, #1
 9441 0034 0344     		add	r3, r3, r0
 9442 0036 1B01     		lsls	r3, r3, #4
 9443 0038 0B44     		add	r3, r3, r1
 9444 003a 03F29513 		addw	r3, r3, #405
 9445 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 217


 9446 0040 42FA03F3 		asr	r3, r2, r3
 9447 0044 FB60     		str	r3, [r7, #12]
2678:..\src/interruptions.c ****         
2679:..\src/interruptions.c ****     // State machine - Evaluate position counter update
2680:..\src/interruptions.c ****     switch (pos_cycle_status){
 9448              		.loc 1 2680 0
 9449 0046 9B4B     		ldr	r3, .L687+8
 9450 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9451 004a 012B     		cmp	r3, #1
 9452 004c 3DD0     		beq	.L611
 9453 004e 022B     		cmp	r3, #2
 9454 0050 74D0     		beq	.L612
 9455 0052 002B     		cmp	r3, #0
 9456 0054 40F02781 		bne	.L610
2681:..\src/interruptions.c ****         case STATE_INACTIVE:
2682:..\src/interruptions.c ****             if ((g_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC && pwm_sign[0] == 1) |
 9457              		.loc 1 2682 0
 9458 0058 944B     		ldr	r3, .L687
 9459 005a 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 9460 005e 072B     		cmp	r3, #7
 9461 0060 04D0     		beq	.L614
 9462              		.loc 1 2682 0 is_stmt 0 discriminator 1
 9463 0062 954B     		ldr	r3, .L687+12
 9464 0064 93F90030 		ldrsb	r3, [r3]
 9465 0068 012B     		cmp	r3, #1
 9466 006a 0CD0     		beq	.L615
 9467              	.L614:
 9468              		.loc 1 2682 0 discriminator 3
 9469 006c 8F4B     		ldr	r3, .L687
 9470 006e 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 9471 0072 072B     		cmp	r3, #7
 9472 0074 40F01481 		bne	.L677
 9473              		.loc 1 2682 0 discriminator 4
 9474 0078 8F4B     		ldr	r3, .L687+12
 9475 007a 93F90030 		ldrsb	r3, [r3]
 9476 007e B3F1FF3F 		cmp	r3, #-1
 9477 0082 40F00D81 		bne	.L677
 9478              	.L615:
2683:..\src/interruptions.c ****                 thr_pos = curr_pos; 
 9479              		.loc 1 2683 0 is_stmt 1
 9480 0086 8D4A     		ldr	r2, .L687+16
 9481 0088 FB68     		ldr	r3, [r7, #12]
 9482 008a 1360     		str	r3, [r2]
2684:..\src/interruptions.c ****                 curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 9483              		.loc 1 2684 0
 9484 008c 8C4B     		ldr	r3, .L687+20
 9485 008e 1A68     		ldr	r2, [r3]
 9486 0090 8A4B     		ldr	r3, .L687+16
 9487 0092 1B68     		ldr	r3, [r3]
 9488 0094 9A42     		cmp	r2, r3
 9489 0096 05DD     		ble	.L617
 9490              		.loc 1 2684 0 is_stmt 0 discriminator 1
 9491 0098 894B     		ldr	r3, .L687+20
 9492 009a 1A68     		ldr	r2, [r3]
 9493 009c 874B     		ldr	r3, .L687+16
 9494 009e 1B68     		ldr	r3, [r3]
 9495 00a0 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 218


 9496 00a2 04E0     		b	.L618
 9497              	.L617:
 9498              		.loc 1 2684 0 discriminator 2
 9499 00a4 854B     		ldr	r3, .L687+16
 9500 00a6 1A68     		ldr	r2, [r3]
 9501 00a8 854B     		ldr	r3, .L687+20
 9502 00aa 1B68     		ldr	r3, [r3]
 9503 00ac D31A     		subs	r3, r2, r3
 9504              	.L618:
 9505              		.loc 1 2684 0 discriminator 4
 9506 00ae BB60     		str	r3, [r7, #8]
2685:..\src/interruptions.c ****                 if (curr_off > 20){    // it has to be a sensible movement to update counter (to av
 9507              		.loc 1 2685 0 is_stmt 1 discriminator 4
 9508 00b0 BB68     		ldr	r3, [r7, #8]
 9509 00b2 142B     		cmp	r3, #20
 9510 00b4 05DD     		ble	.L619
2686:..\src/interruptions.c ****                     g_mem.cnt.wire_disp = g_mem.cnt.wire_disp + curr_off;     //sum opening track
 9511              		.loc 1 2686 0
 9512 00b6 7D4B     		ldr	r3, .L687
 9513 00b8 5A6D     		ldr	r2, [r3, #84]
 9514 00ba BB68     		ldr	r3, [r7, #8]
 9515 00bc 1344     		add	r3, r3, r2
 9516 00be 7B4A     		ldr	r2, .L687
 9517 00c0 5365     		str	r3, [r2, #84]
 9518              	.L619:
2687:..\src/interruptions.c ****                 }
2688:..\src/interruptions.c ****                 pos_cycle_status = STATE_ACTIVE;
 9519              		.loc 1 2688 0
 9520 00c2 7C4B     		ldr	r3, .L687+8
 9521 00c4 0122     		movs	r2, #1
 9522 00c6 1A70     		strb	r2, [r3]
2689:..\src/interruptions.c ****             }
2690:..\src/interruptions.c ****             break;
 9523              		.loc 1 2690 0
 9524 00c8 EAE0     		b	.L677
 9525              	.L611:
2691:..\src/interruptions.c ****         case STATE_ACTIVE:
2692:..\src/interruptions.c ****             if ((g_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC && pwm_sign[0] == -1) 
 9526              		.loc 1 2692 0
 9527 00ca 784B     		ldr	r3, .L687
 9528 00cc 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 9529 00d0 072B     		cmp	r3, #7
 9530 00d2 05D0     		beq	.L620
 9531              		.loc 1 2692 0 is_stmt 0 discriminator 1
 9532 00d4 784B     		ldr	r3, .L687+12
 9533 00d6 93F90030 		ldrsb	r3, [r3]
 9534 00da B3F1FF3F 		cmp	r3, #-1
 9535 00de 0BD0     		beq	.L621
 9536              	.L620:
 9537              		.loc 1 2692 0 discriminator 3
 9538 00e0 724B     		ldr	r3, .L687
 9539 00e2 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 9540 00e6 072B     		cmp	r3, #7
 9541 00e8 40F0DC80 		bne	.L678
 9542              		.loc 1 2692 0 discriminator 4
 9543 00ec 724B     		ldr	r3, .L687+12
 9544 00ee 93F90030 		ldrsb	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 219


 9545 00f2 012B     		cmp	r3, #1
 9546 00f4 40F0D680 		bne	.L678
 9547              	.L621:
2693:..\src/interruptions.c ****                 max_pos = curr_pos;
 9548              		.loc 1 2693 0 is_stmt 1
 9549 00f8 714A     		ldr	r2, .L687+20
 9550 00fa FB68     		ldr	r3, [r7, #12]
 9551 00fc 1360     		str	r3, [r2]
2694:..\src/interruptions.c ****                 curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 9552              		.loc 1 2694 0
 9553 00fe 704B     		ldr	r3, .L687+20
 9554 0100 1A68     		ldr	r2, [r3]
 9555 0102 6E4B     		ldr	r3, .L687+16
 9556 0104 1B68     		ldr	r3, [r3]
 9557 0106 9A42     		cmp	r2, r3
 9558 0108 05DD     		ble	.L623
 9559              		.loc 1 2694 0 is_stmt 0 discriminator 1
 9560 010a 6D4B     		ldr	r3, .L687+20
 9561 010c 1A68     		ldr	r2, [r3]
 9562 010e 6B4B     		ldr	r3, .L687+16
 9563 0110 1B68     		ldr	r3, [r3]
 9564 0112 D31A     		subs	r3, r2, r3
 9565 0114 04E0     		b	.L624
 9566              	.L623:
 9567              		.loc 1 2694 0 discriminator 2
 9568 0116 694B     		ldr	r3, .L687+16
 9569 0118 1A68     		ldr	r2, [r3]
 9570 011a 694B     		ldr	r3, .L687+20
 9571 011c 1B68     		ldr	r3, [r3]
 9572 011e D31A     		subs	r3, r2, r3
 9573              	.L624:
 9574              		.loc 1 2694 0 discriminator 4
 9575 0120 BB60     		str	r3, [r7, #8]
2695:..\src/interruptions.c ****                 if (curr_off > 20){    // it has to be a sensible movement to update counter (to av
 9576              		.loc 1 2695 0 is_stmt 1 discriminator 4
 9577 0122 BB68     		ldr	r3, [r7, #8]
 9578 0124 142B     		cmp	r3, #20
 9579 0126 05DD     		ble	.L625
2696:..\src/interruptions.c ****                    g_mem.cnt.wire_disp = g_mem.cnt.wire_disp + curr_off;     //sum closure track
 9580              		.loc 1 2696 0
 9581 0128 604B     		ldr	r3, .L687
 9582 012a 5A6D     		ldr	r2, [r3, #84]
 9583 012c BB68     		ldr	r3, [r7, #8]
 9584 012e 1344     		add	r3, r3, r2
 9585 0130 5E4A     		ldr	r2, .L687
 9586 0132 5365     		str	r3, [r2, #84]
 9587              	.L625:
2697:..\src/interruptions.c ****                 }
2698:..\src/interruptions.c ****                 pos_cycle_status = COUNTER_INC;
 9588              		.loc 1 2698 0
 9589 0134 5F4B     		ldr	r3, .L687+8
 9590 0136 0222     		movs	r2, #2
 9591 0138 1A70     		strb	r2, [r3]
2699:..\src/interruptions.c ****             }
2700:..\src/interruptions.c ****             break;
 9592              		.loc 1 2700 0
 9593 013a B3E0     		b	.L678
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 220


 9594              	.L612:
2701:..\src/interruptions.c ****         case COUNTER_INC:
2702:..\src/interruptions.c **** 
2703:..\src/interruptions.c ****             curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 9595              		.loc 1 2703 0
 9596 013c 604B     		ldr	r3, .L687+20
 9597 013e 1A68     		ldr	r2, [r3]
 9598 0140 5E4B     		ldr	r3, .L687+16
 9599 0142 1B68     		ldr	r3, [r3]
 9600 0144 9A42     		cmp	r2, r3
 9601 0146 05DD     		ble	.L626
 9602              		.loc 1 2703 0 is_stmt 0 discriminator 1
 9603 0148 5D4B     		ldr	r3, .L687+20
 9604 014a 1A68     		ldr	r2, [r3]
 9605 014c 5B4B     		ldr	r3, .L687+16
 9606 014e 1B68     		ldr	r3, [r3]
 9607 0150 D31A     		subs	r3, r2, r3
 9608 0152 04E0     		b	.L627
 9609              	.L626:
 9610              		.loc 1 2703 0 discriminator 2
 9611 0154 594B     		ldr	r3, .L687+16
 9612 0156 1A68     		ldr	r2, [r3]
 9613 0158 594B     		ldr	r3, .L687+20
 9614 015a 1B68     		ldr	r3, [r3]
 9615 015c D31A     		subs	r3, r2, r3
 9616              	.L627:
 9617              		.loc 1 2703 0 discriminator 4
 9618 015e BB60     		str	r3, [r7, #8]
2704:..\src/interruptions.c ****             if (curr_off > bin_threshold){
 9619              		.loc 1 2704 0 is_stmt 1 discriminator 4
 9620 0160 584B     		ldr	r3, .L687+24
 9621 0162 1B68     		ldr	r3, [r3]
 9622 0164 BA68     		ldr	r2, [r7, #8]
 9623 0166 9A42     		cmp	r2, r3
 9624 0168 40F39680 		ble	.L628
2705:..\src/interruptions.c ****                 //update position histogram
2706:..\src/interruptions.c ****                 step = ((int32)(g_mem.motor[0].pos_lim_sup >> g_mem.enc[g_mem.motor[0].encoder_line
 9625              		.loc 1 2706 0
 9626 016c 4F4B     		ldr	r3, .L687
 9627 016e D3F8E820 		ldr	r2, [r3, #232]
 9628 0172 4E4B     		ldr	r3, .L687
 9629 0174 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9630 0178 1846     		mov	r0, r3
 9631 017a 4C49     		ldr	r1, .L687
 9632 017c 0346     		mov	r3, r0
 9633 017e 5B00     		lsls	r3, r3, #1
 9634 0180 0344     		add	r3, r3, r0
 9635 0182 1B01     		lsls	r3, r3, #4
 9636 0184 0B44     		add	r3, r3, r1
 9637 0186 03F29513 		addw	r3, r3, #405
 9638 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9639 018c 42FA03F3 		asr	r3, r2, r3
 9640 0190 4D4A     		ldr	r2, .L687+28
 9641 0192 82FB0312 		smull	r1, r2, r2, r3
 9642 0196 9210     		asrs	r2, r2, #2
 9643 0198 DB17     		asrs	r3, r3, #31
 9644 019a D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 221


 9645 019c 7B60     		str	r3, [r7, #4]
2707:..\src/interruptions.c ****                 bin_st  = (uint8)(thr_pos/step);
 9646              		.loc 1 2707 0
 9647 019e 474B     		ldr	r3, .L687+16
 9648 01a0 1A68     		ldr	r2, [r3]
 9649 01a2 7B68     		ldr	r3, [r7, #4]
 9650 01a4 92FBF3F3 		sdiv	r3, r2, r3
 9651 01a8 FB70     		strb	r3, [r7, #3]
2708:..\src/interruptions.c ****                 bin_max = (uint8)(max_pos/step);
 9652              		.loc 1 2708 0
 9653 01aa 454B     		ldr	r3, .L687+20
 9654 01ac 1A68     		ldr	r2, [r3]
 9655 01ae 7B68     		ldr	r3, [r7, #4]
 9656 01b0 92FBF3F3 		sdiv	r3, r2, r3
 9657 01b4 BB70     		strb	r3, [r7, #2]
2709:..\src/interruptions.c ****                 
2710:..\src/interruptions.c ****                 // Bin computation valid for both NO and NC working
2711:..\src/interruptions.c ****                 bin_1 = (bin_st<bin_max)?bin_st:bin_max;
 9658              		.loc 1 2711 0
 9659 01b6 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 9660 01b8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 9661 01ba 9342     		cmp	r3, r2
 9662 01bc 28BF     		it	cs
 9663 01be 1346     		movcs	r3, r2
 9664 01c0 7B70     		strb	r3, [r7, #1]
2712:..\src/interruptions.c ****                 bin_2 = (bin_st<bin_max)?bin_max:bin_st;    
 9665              		.loc 1 2712 0
 9666 01c2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 9667 01c4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 9668 01c6 9342     		cmp	r3, r2
 9669 01c8 38BF     		it	cc
 9670 01ca 1346     		movcc	r3, r2
 9671 01cc 3B70     		strb	r3, [r7]
2713:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2 && i <10; i++){
 9672              		.loc 1 2713 0
 9673 01ce 7B78     		ldrb	r3, [r7, #1]
 9674 01d0 FB75     		strb	r3, [r7, #23]
 9675 01d2 0DE0     		b	.L629
 9676              	.L631:
2714:..\src/interruptions.c ****                     //position_hist counts how many times the SoftHand stays in bin while moving
2715:..\src/interruptions.c ****                     g_mem.cnt.position_hist[i] = g_mem.cnt.position_hist[i] + 1;
 9677              		.loc 1 2715 0 discriminator 4
 9678 01d4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9679 01d6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9680 01d8 3449     		ldr	r1, .L687
 9681 01da 0632     		adds	r2, r2, #6
 9682 01dc 51F82220 		ldr	r2, [r1, r2, lsl #2]
 9683 01e0 0132     		adds	r2, r2, #1
 9684 01e2 3249     		ldr	r1, .L687
 9685 01e4 0633     		adds	r3, r3, #6
 9686 01e6 41F82320 		str	r2, [r1, r3, lsl #2]
2713:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2 && i <10; i++){
 9687              		.loc 1 2713 0 discriminator 4
 9688 01ea FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9689 01ec 0133     		adds	r3, r3, #1
 9690 01ee FB75     		strb	r3, [r7, #23]
 9691              	.L629:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 222


2713:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2 && i <10; i++){
 9692              		.loc 1 2713 0 is_stmt 0 discriminator 1
 9693 01f0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9694 01f2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 9695 01f4 9A42     		cmp	r2, r3
 9696 01f6 02D8     		bhi	.L630
2713:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2 && i <10; i++){
 9697              		.loc 1 2713 0 discriminator 3
 9698 01f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9699 01fa 092B     		cmp	r3, #9
 9700 01fc EAD9     		bls	.L631
 9701              	.L630:
2716:..\src/interruptions.c ****                 }
2717:..\src/interruptions.c ****                 
2718:..\src/interruptions.c ****                 //update current histogram (only positive current measures)
2719:..\src/interruptions.c ****                 step = ((int32)(g_mem.motor[0].current_limit) / 4);
 9702              		.loc 1 2719 0 is_stmt 1
 9703 01fe 2B4B     		ldr	r3, .L687
 9704 0200 B3F90C31 		ldrsh	r3, [r3, #268]
 9705 0204 002B     		cmp	r3, #0
 9706 0206 00DA     		bge	.L632
 9707 0208 0333     		adds	r3, r3, #3
 9708              	.L632:
 9709 020a 9B10     		asrs	r3, r3, #2
 9710 020c 1BB2     		sxth	r3, r3
 9711 020e 7B60     		str	r3, [r7, #4]
2720:..\src/interruptions.c ****                 if (g_mem.motor[0].not_revers_motor_flag == TRUE)
 9712              		.loc 1 2720 0
 9713 0210 264B     		ldr	r3, .L687
 9714 0212 93F81231 		ldrb	r3, [r3, #274]	@ zero_extendqisi2
 9715 0216 012B     		cmp	r3, #1
 9716 0218 0CD1     		bne	.L633
2721:..\src/interruptions.c ****                     curr_ref = g_meas[g_mem.motor[0].encoder_line].hold_curr; 
 9717              		.loc 1 2721 0
 9718 021a 244B     		ldr	r3, .L687
 9719 021c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9720 0220 1946     		mov	r1, r3
 9721 0222 234A     		ldr	r2, .L687+4
 9722 0224 3423     		movs	r3, #52
 9723 0226 03FB01F3 		mul	r3, r3, r1
 9724 022a 1344     		add	r3, r3, r2
 9725 022c 1433     		adds	r3, r3, #20
 9726 022e 1B68     		ldr	r3, [r3]
 9727 0230 3B61     		str	r3, [r7, #16]
 9728 0232 0BE0     		b	.L634
 9729              	.L633:
2722:..\src/interruptions.c ****                 else
2723:..\src/interruptions.c ****                     curr_ref = g_meas[g_mem.motor[0].encoder_line].curr;
 9730              		.loc 1 2723 0
 9731 0234 1D4B     		ldr	r3, .L687
 9732 0236 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9733 023a 1946     		mov	r1, r3
 9734 023c 1C4A     		ldr	r2, .L687+4
 9735 023e 3423     		movs	r3, #52
 9736 0240 03FB01F3 		mul	r3, r3, r1
 9737 0244 1344     		add	r3, r3, r2
 9738 0246 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 223


 9739 0248 1B68     		ldr	r3, [r3]
 9740 024a 3B61     		str	r3, [r7, #16]
 9741              	.L634:
2724:..\src/interruptions.c **** 
2725:..\src/interruptions.c ****                 if (curr_ref < 0){
 9742              		.loc 1 2725 0
 9743 024c 3B69     		ldr	r3, [r7, #16]
 9744 024e 002B     		cmp	r3, #0
 9745 0250 02DA     		bge	.L635
2726:..\src/interruptions.c ****                     curr_ref = -curr_ref;       // Invert sign to have a positive current reading i
 9746              		.loc 1 2726 0
 9747 0252 3B69     		ldr	r3, [r7, #16]
 9748 0254 5B42     		negs	r3, r3
 9749 0256 3B61     		str	r3, [r7, #16]
 9750              	.L635:
2727:..\src/interruptions.c ****                 }
2728:..\src/interruptions.c ****                 
2729:..\src/interruptions.c ****                 if (curr_ref > g_mem.motor[0].current_limit)
 9751              		.loc 1 2729 0
 9752 0258 144B     		ldr	r3, .L687
 9753 025a B3F90C31 		ldrsh	r3, [r3, #268]
 9754 025e 1A46     		mov	r2, r3
 9755 0260 3B69     		ldr	r3, [r7, #16]
 9756 0262 9A42     		cmp	r2, r3
 9757 0264 05DA     		bge	.L636
2730:..\src/interruptions.c ****                     g_mem.cnt.current_hist[3] = g_mem.cnt.current_hist[3] + 1; 
 9758              		.loc 1 2730 0
 9759 0266 114B     		ldr	r3, .L687
 9760 0268 DB6C     		ldr	r3, [r3, #76]
 9761 026a 0133     		adds	r3, r3, #1
 9762 026c 0F4A     		ldr	r2, .L687
 9763 026e D364     		str	r3, [r2, #76]
 9764 0270 12E0     		b	.L628
 9765              	.L636:
2731:..\src/interruptions.c ****                 else
2732:..\src/interruptions.c ****                     g_mem.cnt.current_hist[(uint8)(curr_ref/step)] = g_mem.cnt.current_hist[(uint8)
 9766              		.loc 1 2732 0
 9767 0272 3A69     		ldr	r2, [r7, #16]
 9768 0274 7B68     		ldr	r3, [r7, #4]
 9769 0276 92FBF3F3 		sdiv	r3, r2, r3
 9770 027a DBB2     		uxtb	r3, r3
 9771 027c 3969     		ldr	r1, [r7, #16]
 9772 027e 7A68     		ldr	r2, [r7, #4]
 9773 0280 91FBF2F2 		sdiv	r2, r1, r2
 9774 0284 D2B2     		uxtb	r2, r2
 9775 0286 0949     		ldr	r1, .L687
 9776 0288 1032     		adds	r2, r2, #16
 9777 028a 51F82220 		ldr	r2, [r1, r2, lsl #2]
 9778 028e 0132     		adds	r2, r2, #1
 9779 0290 0649     		ldr	r1, .L687
 9780 0292 1033     		adds	r3, r3, #16
 9781 0294 41F82320 		str	r2, [r1, r3, lsl #2]
 9782              	.L628:
2733:..\src/interruptions.c ****             }
2734:..\src/interruptions.c ****             pos_cycle_status = STATE_INACTIVE;
 9783              		.loc 1 2734 0
 9784 0298 064B     		ldr	r3, .L687+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 224


 9785 029a 0022     		movs	r2, #0
 9786 029c 1A70     		strb	r2, [r3]
2735:..\src/interruptions.c ****             break;
 9787              		.loc 1 2735 0
 9788 029e 02E0     		b	.L610
 9789              	.L677:
2690:..\src/interruptions.c ****         case STATE_ACTIVE:
 9790              		.loc 1 2690 0
 9791 02a0 00BF     		nop
 9792 02a2 00E0     		b	.L610
 9793              	.L678:
2700:..\src/interruptions.c ****         case COUNTER_INC:
 9794              		.loc 1 2700 0
 9795 02a4 00BF     		nop
 9796              	.L610:
2736:..\src/interruptions.c ****     }
2737:..\src/interruptions.c ****     
2738:..\src/interruptions.c ****     // State machine - Evaluate EMG activation counter update
2739:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 9797              		.loc 1 2739 0
 9798 02a6 0023     		movs	r3, #0
 9799 02a8 FB75     		strb	r3, [r7, #23]
 9800 02aa 4FE0     		b	.L637
 9801              	.L688:
 9802              		.align	2
 9803              	.L687:
 9804 02ac 00000000 		.word	g_mem
 9805 02b0 00000000 		.word	g_meas
 9806 02b4 8A010000 		.word	pos_cycle_status.10818
 9807 02b8 00000000 		.word	pwm_sign
 9808 02bc 8C010000 		.word	thr_pos.10825
 9809 02c0 90010000 		.word	max_pos.10826
 9810 02c4 10000000 		.word	bin_threshold.10823
 9811 02c8 67666666 		.word	1717986919
 9812              	.L645:
2740:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9813              		.loc 1 2740 0
 9814 02cc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9815 02ce 9C4A     		ldr	r2, .L689
 9816 02d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9817 02d2 012B     		cmp	r3, #1
 9818 02d4 13D0     		beq	.L639
 9819 02d6 022B     		cmp	r3, #2
 9820 02d8 22D0     		beq	.L640
 9821 02da 002B     		cmp	r3, #0
 9822 02dc 33D1     		bne	.L638
2741:..\src/interruptions.c ****             case STATE_INACTIVE:
2742:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] > g_mem.emg.emg_threshold[i]){
 9823              		.loc 1 2742 0
 9824 02de FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9825 02e0 984A     		ldr	r2, .L689+4
 9826 02e2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 9827 02e6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9828 02e8 9749     		ldr	r1, .L689+8
 9829 02ea F832     		adds	r2, r2, #248
 9830 02ec 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 9831 02f0 9342     		cmp	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 225


 9832 02f2 25DD     		ble	.L679
2743:..\src/interruptions.c ****                     emg_cycle_status[i] = STATE_ACTIVE;
 9833              		.loc 1 2743 0
 9834 02f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9835 02f6 924A     		ldr	r2, .L689
 9836 02f8 0121     		movs	r1, #1
 9837 02fa D154     		strb	r1, [r2, r3]
2744:..\src/interruptions.c ****                 }
2745:..\src/interruptions.c ****                 break;
 9838              		.loc 1 2745 0
 9839 02fc 20E0     		b	.L679
 9840              	.L639:
2746:..\src/interruptions.c ****             case STATE_ACTIVE:
2747:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] < g_mem.emg.emg_threshold[i]-10){                    
 9841              		.loc 1 2747 0
 9842 02fe FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9843 0300 904A     		ldr	r2, .L689+4
 9844 0302 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9845 0306 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9846 0308 8F49     		ldr	r1, .L689+8
 9847 030a F833     		adds	r3, r3, #248
 9848 030c 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 9849 0310 0A3B     		subs	r3, r3, #10
 9850 0312 9A42     		cmp	r2, r3
 9851 0314 16DA     		bge	.L680
2748:..\src/interruptions.c ****                     emg_cycle_status[i] = COUNTER_INC;
 9852              		.loc 1 2748 0
 9853 0316 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9854 0318 894A     		ldr	r2, .L689
 9855 031a 0221     		movs	r1, #2
 9856 031c D154     		strb	r1, [r2, r3]
2749:..\src/interruptions.c ****                 }
2750:..\src/interruptions.c ****                 break;
 9857              		.loc 1 2750 0
 9858 031e 11E0     		b	.L680
 9859              	.L640:
2751:..\src/interruptions.c ****             case COUNTER_INC:
2752:..\src/interruptions.c ****                 g_mem.cnt.emg_act_counter[i] = g_mem.cnt.emg_act_counter[i] + 1;
 9860              		.loc 1 2752 0
 9861 0320 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9862 0322 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9863 0324 8849     		ldr	r1, .L689+8
 9864 0326 0432     		adds	r2, r2, #4
 9865 0328 51F82220 		ldr	r2, [r1, r2, lsl #2]
 9866 032c 0132     		adds	r2, r2, #1
 9867 032e 8649     		ldr	r1, .L689+8
 9868 0330 0433     		adds	r3, r3, #4
 9869 0332 41F82320 		str	r2, [r1, r3, lsl #2]
2753:..\src/interruptions.c ****                 emg_cycle_status[i] = STATE_INACTIVE;
 9870              		.loc 1 2753 0
 9871 0336 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9872 0338 814A     		ldr	r2, .L689
 9873 033a 0021     		movs	r1, #0
 9874 033c D154     		strb	r1, [r2, r3]
2754:..\src/interruptions.c ****                 break;
 9875              		.loc 1 2754 0
 9876 033e 02E0     		b	.L638
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 226


 9877              	.L679:
2745:..\src/interruptions.c ****             case STATE_ACTIVE:
 9878              		.loc 1 2745 0
 9879 0340 00BF     		nop
 9880 0342 00E0     		b	.L638
 9881              	.L680:
2750:..\src/interruptions.c ****             case COUNTER_INC:
 9882              		.loc 1 2750 0
 9883 0344 00BF     		nop
 9884              	.L638:
2739:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9885              		.loc 1 2739 0 discriminator 2
 9886 0346 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9887 0348 0133     		adds	r3, r3, #1
 9888 034a FB75     		strb	r3, [r7, #23]
 9889              	.L637:
2739:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9890              		.loc 1 2739 0 is_stmt 0 discriminator 1
 9891 034c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9892 034e 012B     		cmp	r3, #1
 9893 0350 07D8     		bhi	.L644
2739:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9894              		.loc 1 2739 0 discriminator 3
 9895 0352 7E4B     		ldr	r3, .L689+12
 9896 0354 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9897 0356 002B     		cmp	r3, #0
 9898 0358 03D1     		bne	.L644
2739:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9899              		.loc 1 2739 0 discriminator 4
 9900 035a 7D4B     		ldr	r3, .L689+16
 9901 035c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9902 035e 002B     		cmp	r3, #0
 9903 0360 B4D0     		beq	.L645
 9904              	.L644:
2755:..\src/interruptions.c ****         }
2756:..\src/interruptions.c ****     }
2757:..\src/interruptions.c ****     
2758:..\src/interruptions.c ****     // State machine - Evaluate Motion counter update
2759:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 9905              		.loc 1 2759 0 is_stmt 1
 9906 0362 0023     		movs	r3, #0
 9907 0364 FB75     		strb	r3, [r7, #23]
 9908 0366 57E0     		b	.L646
 9909              	.L655:
2760:..\src/interruptions.c ****         switch (motion_status[i]){
 9910              		.loc 1 2760 0
 9911 0368 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9912 036a 7A4A     		ldr	r2, .L689+20
 9913 036c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9914 036e 012B     		cmp	r3, #1
 9915 0370 18D0     		beq	.L648
 9916 0372 022B     		cmp	r3, #2
 9917 0374 37D0     		beq	.L649
 9918 0376 002B     		cmp	r3, #0
 9919 0378 4BD1     		bne	.L647
2761:..\src/interruptions.c ****             case STATE_INACTIVE:
2762:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] > g_mem.emg.emg_threshold[i]){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 227


 9920              		.loc 1 2762 0
 9921 037a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9922 037c 714A     		ldr	r2, .L689+4
 9923 037e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 9924 0382 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9925 0384 7049     		ldr	r1, .L689+8
 9926 0386 F832     		adds	r2, r2, #248
 9927 0388 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 9928 038c 9342     		cmp	r3, r2
 9929 038e 3DDD     		ble	.L681
2763:..\src/interruptions.c ****                     start_emg_pos[i] = curr_pos;
 9930              		.loc 1 2763 0
 9931 0390 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9932 0392 7149     		ldr	r1, .L689+24
 9933 0394 FA68     		ldr	r2, [r7, #12]
 9934 0396 41F82320 		str	r2, [r1, r3, lsl #2]
2764:..\src/interruptions.c ****                     motion_status[i] = STATE_ACTIVE;
 9935              		.loc 1 2764 0
 9936 039a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9937 039c 6D4A     		ldr	r2, .L689+20
 9938 039e 0121     		movs	r1, #1
 9939 03a0 D154     		strb	r1, [r2, r3]
2765:..\src/interruptions.c ****                 }
2766:..\src/interruptions.c ****                 break;
 9940              		.loc 1 2766 0
 9941 03a2 33E0     		b	.L681
 9942              	.L648:
2767:..\src/interruptions.c ****             case STATE_ACTIVE:
2768:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] < g_mem.emg.emg_threshold[i]-10){                    
 9943              		.loc 1 2768 0
 9944 03a4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9945 03a6 674A     		ldr	r2, .L689+4
 9946 03a8 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9947 03ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9948 03ae 6649     		ldr	r1, .L689+8
 9949 03b0 F833     		adds	r3, r3, #248
 9950 03b2 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 9951 03b6 0A3B     		subs	r3, r3, #10
 9952 03b8 9A42     		cmp	r2, r3
 9953 03ba 29DA     		bge	.L682
2769:..\src/interruptions.c ****                     if (abs(start_emg_pos[i] - curr_pos) > 200){     // it has to be a sensible mov
 9954              		.loc 1 2769 0
 9955 03bc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9956 03be 664A     		ldr	r2, .L689+24
 9957 03c0 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9958 03c4 FB68     		ldr	r3, [r7, #12]
 9959 03c6 D31A     		subs	r3, r2, r3
 9960 03c8 002B     		cmp	r3, #0
 9961 03ca B8BF     		it	lt
 9962 03cc 5B42     		rsblt	r3, r3, #0
 9963 03ce C82B     		cmp	r3, #200
 9964 03d0 04DD     		ble	.L653
2770:..\src/interruptions.c ****                         motion_status[i] = COUNTER_INC;
 9965              		.loc 1 2770 0
 9966 03d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9967 03d4 5F4A     		ldr	r2, .L689+20
 9968 03d6 0221     		movs	r1, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 228


 9969 03d8 D154     		strb	r1, [r2, r3]
2771:..\src/interruptions.c ****                     }
2772:..\src/interruptions.c ****                     else {
2773:..\src/interruptions.c ****                         motion_status[i] = STATE_INACTIVE;
2774:..\src/interruptions.c ****                     }
2775:..\src/interruptions.c ****                 }
2776:..\src/interruptions.c ****                 break;
 9970              		.loc 1 2776 0
 9971 03da 19E0     		b	.L682
 9972              	.L653:
2773:..\src/interruptions.c ****                     }
 9973              		.loc 1 2773 0
 9974 03dc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9975 03de 5D4A     		ldr	r2, .L689+20
 9976 03e0 0021     		movs	r1, #0
 9977 03e2 D154     		strb	r1, [r2, r3]
 9978              		.loc 1 2776 0
 9979 03e4 14E0     		b	.L682
 9980              	.L649:
2777:..\src/interruptions.c ****             case COUNTER_INC:
2778:..\src/interruptions.c ****                 g_mem.cnt.motion_counter[i] = g_mem.cnt.motion_counter[i] + 1;
 9981              		.loc 1 2778 0
 9982 03e6 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 9983 03e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9984 03ea 574A     		ldr	r2, .L689+8
 9985 03ec 1A33     		adds	r3, r3, #26
 9986 03ee 9B00     		lsls	r3, r3, #2
 9987 03f0 1344     		add	r3, r3, r2
 9988 03f2 5B68     		ldr	r3, [r3, #4]
 9989 03f4 5A1C     		adds	r2, r3, #1
 9990 03f6 5448     		ldr	r0, .L689+8
 9991 03f8 01F11A03 		add	r3, r1, #26
 9992 03fc 9B00     		lsls	r3, r3, #2
 9993 03fe 0344     		add	r3, r3, r0
 9994 0400 5A60     		str	r2, [r3, #4]
2779:..\src/interruptions.c ****                 motion_status[i] = STATE_INACTIVE;
 9995              		.loc 1 2779 0
 9996 0402 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9997 0404 534A     		ldr	r2, .L689+20
 9998 0406 0021     		movs	r1, #0
 9999 0408 D154     		strb	r1, [r2, r3]
2780:..\src/interruptions.c ****                 break;
 10000              		.loc 1 2780 0
 10001 040a 02E0     		b	.L647
 10002              	.L681:
2766:..\src/interruptions.c ****             case STATE_ACTIVE:
 10003              		.loc 1 2766 0
 10004 040c 00BF     		nop
 10005 040e 00E0     		b	.L647
 10006              	.L682:
2776:..\src/interruptions.c ****             case COUNTER_INC:
 10007              		.loc 1 2776 0
 10008 0410 00BF     		nop
 10009              	.L647:
2759:..\src/interruptions.c ****         switch (motion_status[i]){
 10010              		.loc 1 2759 0 discriminator 2
 10011 0412 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 229


 10012 0414 0133     		adds	r3, r3, #1
 10013 0416 FB75     		strb	r3, [r7, #23]
 10014              	.L646:
2759:..\src/interruptions.c ****         switch (motion_status[i]){
 10015              		.loc 1 2759 0 is_stmt 0 discriminator 1
 10016 0418 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10017 041a 012B     		cmp	r3, #1
 10018 041c 07D8     		bhi	.L654
2759:..\src/interruptions.c ****         switch (motion_status[i]){
 10019              		.loc 1 2759 0 discriminator 3
 10020 041e 4B4B     		ldr	r3, .L689+12
 10021 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10022 0422 002B     		cmp	r3, #0
 10023 0424 03D1     		bne	.L654
2759:..\src/interruptions.c ****         switch (motion_status[i]){
 10024              		.loc 1 2759 0 discriminator 4
 10025 0426 4A4B     		ldr	r3, .L689+16
 10026 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10027 042a 002B     		cmp	r3, #0
 10028 042c 9CD0     		beq	.L655
 10029              	.L654:
2781:..\src/interruptions.c ****         }
2782:..\src/interruptions.c ****     }
2783:..\src/interruptions.c ****     
2784:..\src/interruptions.c ****     // State machine - Evaluate EMG excessive activity counter update
2785:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 10030              		.loc 1 2785 0 is_stmt 1
 10031 042e 0023     		movs	r3, #0
 10032 0430 FB75     		strb	r3, [r7, #23]
 10033 0432 A3E0     		b	.L656
 10034              	.L667:
2786:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 10035              		.loc 1 2786 0
 10036 0434 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10037 0436 494A     		ldr	r2, .L689+28
 10038 0438 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10039 043a 012B     		cmp	r3, #1
 10040 043c 19D0     		beq	.L658
 10041 043e 022B     		cmp	r3, #2
 10042 0440 68D0     		beq	.L659
 10043 0442 002B     		cmp	r3, #0
 10044 0444 40F09780 		bne	.L657
2787:..\src/interruptions.c ****             case STATE_INACTIVE:
2788:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] > exc_act_thr){
 10045              		.loc 1 2788 0
 10046 0448 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10047 044a 3E4A     		ldr	r2, .L689+4
 10048 044c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 10049 0450 434B     		ldr	r3, .L689+32
 10050 0452 1B68     		ldr	r3, [r3]
 10051 0454 9A42     		cmp	r2, r3
 10052 0456 70DD     		ble	.L683
2789:..\src/interruptions.c ****                     timer_exc_s[i] = (uint32)CYCLES_TIMER_ReadCounter();
 10053              		.loc 1 2789 0
 10054 0458 FC7D     		ldrb	r4, [r7, #23]	@ zero_extendqisi2
 10055 045a FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 10056 045e 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 230


 10057 0460 1A46     		mov	r2, r3
 10058 0462 404B     		ldr	r3, .L689+36
 10059 0464 43F82420 		str	r2, [r3, r4, lsl #2]
2790:..\src/interruptions.c ****                     emg_excess_status[i] = STATE_ACTIVE;
 10060              		.loc 1 2790 0
 10061 0468 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10062 046a 3C4A     		ldr	r2, .L689+28
 10063 046c 0121     		movs	r1, #1
 10064 046e D154     		strb	r1, [r2, r3]
2791:..\src/interruptions.c ****                 }
2792:..\src/interruptions.c ****                 break;
 10065              		.loc 1 2792 0
 10066 0470 63E0     		b	.L683
 10067              	.L658:
2793:..\src/interruptions.c ****             case STATE_ACTIVE:
2794:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] < exc_act_thr-10){
 10068              		.loc 1 2794 0
 10069 0472 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10070 0474 334A     		ldr	r2, .L689+4
 10071 0476 52F82320 		ldr	r2, [r2, r3, lsl #2]
 10072 047a 394B     		ldr	r3, .L689+32
 10073 047c 1B68     		ldr	r3, [r3]
 10074 047e 0A3B     		subs	r3, r3, #10
 10075 0480 9A42     		cmp	r2, r3
 10076 0482 77DA     		bge	.L684
2795:..\src/interruptions.c ****                     timer_exc_e[i] = (uint32)CYCLES_TIMER_ReadCounter();
 10077              		.loc 1 2795 0
 10078 0484 FC7D     		ldrb	r4, [r7, #23]	@ zero_extendqisi2
 10079 0486 FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 10080 048a 0346     		mov	r3, r0
 10081 048c 1A46     		mov	r2, r3
 10082 048e 364B     		ldr	r3, .L689+40
 10083 0490 43F82420 		str	r2, [r3, r4, lsl #2]
2796:..\src/interruptions.c ****                     if (timer_exc_s[i] < timer_exc_e[i]) {
 10084              		.loc 1 2796 0
 10085 0494 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10086 0496 334A     		ldr	r2, .L689+36
 10087 0498 52F82320 		ldr	r2, [r2, r3, lsl #2]
 10088 049c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10089 049e 3249     		ldr	r1, .L689+40
 10090 04a0 51F82330 		ldr	r3, [r1, r3, lsl #2]
 10091 04a4 9A42     		cmp	r2, r3
 10092 04a6 0AD2     		bcs	.L663
2797:..\src/interruptions.c ****                         timer_exc_s[i] = timer_exc_s[i] + (uint32)6000;
 10093              		.loc 1 2797 0
 10094 04a8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10095 04aa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10096 04ac 2D49     		ldr	r1, .L689+36
 10097 04ae 51F82330 		ldr	r3, [r1, r3, lsl #2]
 10098 04b2 03F5BB53 		add	r3, r3, #5984
 10099 04b6 1033     		adds	r3, r3, #16
 10100 04b8 2A49     		ldr	r1, .L689+36
 10101 04ba 41F82230 		str	r3, [r1, r2, lsl #2]
 10102              	.L663:
2798:..\src/interruptions.c ****                     }
2799:..\src/interruptions.c ****                     if (((float)(timer_exc_s[i] - timer_exc_e[i])/50.0) > 4.0){      //50 timers ti
 10103              		.loc 1 2799 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 231


 10104 04be FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10105 04c0 284A     		ldr	r2, .L689+36
 10106 04c2 52F82320 		ldr	r2, [r2, r3, lsl #2]
 10107 04c6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10108 04c8 2749     		ldr	r1, .L689+40
 10109 04ca 51F82330 		ldr	r3, [r1, r3, lsl #2]
 10110 04ce D31A     		subs	r3, r2, r3
 10111 04d0 1846     		mov	r0, r3
 10112 04d2 FFF7FEFF 		bl	__aeabi_ui2f
 10113 04d6 0346     		mov	r3, r0
 10114 04d8 1846     		mov	r0, r3
 10115 04da FFF7FEFF 		bl	__aeabi_f2d
 10116 04de 4FF00002 		mov	r2, #0
 10117 04e2 224B     		ldr	r3, .L689+44
 10118 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 10119 04e8 0346     		mov	r3, r0
 10120 04ea 0C46     		mov	r4, r1
 10121 04ec 1846     		mov	r0, r3
 10122 04ee 2146     		mov	r1, r4
 10123 04f0 4FF00002 		mov	r2, #0
 10124 04f4 1E4B     		ldr	r3, .L689+48
 10125 04f6 FFF7FEFF 		bl	__aeabi_dcmpgt
 10126 04fa 0346     		mov	r3, r0
 10127 04fc 002B     		cmp	r3, #0
 10128 04fe 04D0     		beq	.L676
2800:..\src/interruptions.c ****                         emg_excess_status[i] = COUNTER_INC;
 10129              		.loc 1 2800 0
 10130 0500 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10131 0502 164A     		ldr	r2, .L689+28
 10132 0504 0221     		movs	r1, #2
 10133 0506 D154     		strb	r1, [r2, r3]
2801:..\src/interruptions.c ****                     }
2802:..\src/interruptions.c ****                     else {
2803:..\src/interruptions.c ****                         emg_excess_status[i] = STATE_INACTIVE;
2804:..\src/interruptions.c ****                     }
2805:..\src/interruptions.c ****                 }
2806:..\src/interruptions.c ****                 break;
 10134              		.loc 1 2806 0
 10135 0508 34E0     		b	.L684
 10136              	.L676:
2803:..\src/interruptions.c ****                     }
 10137              		.loc 1 2803 0
 10138 050a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10139 050c 134A     		ldr	r2, .L689+28
 10140 050e 0021     		movs	r1, #0
 10141 0510 D154     		strb	r1, [r2, r3]
 10142              		.loc 1 2806 0
 10143 0512 2FE0     		b	.L684
 10144              	.L659:
2807:..\src/interruptions.c ****             case COUNTER_INC:
2808:..\src/interruptions.c ****                 g_mem.cnt.excessive_signal_activity[i] = g_mem.cnt.excessive_signal_activity[i] + 1
 10145              		.loc 1 2808 0
 10146 0514 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10147 0516 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10148 0518 0B4A     		ldr	r2, .L689+8
 10149 051a 1833     		adds	r3, r3, #24
 10150 051c 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 232


 10151 051e 1344     		add	r3, r3, r2
 10152 0520 5B68     		ldr	r3, [r3, #4]
 10153 0522 5A1C     		adds	r2, r3, #1
 10154 0524 0848     		ldr	r0, .L689+8
 10155 0526 01F11803 		add	r3, r1, #24
 10156 052a 9B00     		lsls	r3, r3, #2
 10157 052c 0344     		add	r3, r3, r0
 10158 052e 5A60     		str	r2, [r3, #4]
2809:..\src/interruptions.c ****                 emg_excess_status[i] = STATE_INACTIVE;
 10159              		.loc 1 2809 0
 10160 0530 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10161 0532 0A4A     		ldr	r2, .L689+28
 10162 0534 0021     		movs	r1, #0
 10163 0536 D154     		strb	r1, [r2, r3]
2810:..\src/interruptions.c ****                 break;
 10164              		.loc 1 2810 0
 10165 0538 1DE0     		b	.L657
 10166              	.L683:
2792:..\src/interruptions.c ****             case STATE_ACTIVE:
 10167              		.loc 1 2792 0
 10168 053a 00BF     		nop
 10169 053c 1BE0     		b	.L657
 10170              	.L690:
 10171 053e 00BF     		.align	2
 10172              	.L689:
 10173 0540 94010000 		.word	emg_cycle_status.10819
 10174 0544 00000000 		.word	g_adc_meas
 10175 0548 00000000 		.word	g_mem
 10176 054c 00000000 		.word	emg_1_status
 10177 0550 00000000 		.word	emg_2_status
 10178 0554 98010000 		.word	motion_status.10820
 10179 0558 9C010000 		.word	start_emg_pos.10840
 10180 055c A4010000 		.word	emg_excess_status.10821
 10181 0560 14000000 		.word	exc_act_thr.10824
 10182 0564 A8010000 		.word	timer_exc_s.10838
 10183 0568 B0010000 		.word	timer_exc_e.10839
 10184 056c 00004940 		.word	1078525952
 10185 0570 00001040 		.word	1074790400
 10186              	.L684:
2806:..\src/interruptions.c ****             case COUNTER_INC:
 10187              		.loc 1 2806 0
 10188 0574 00BF     		nop
 10189              	.L657:
2785:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 10190              		.loc 1 2785 0 discriminator 2
 10191 0576 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10192 0578 0133     		adds	r3, r3, #1
 10193 057a FB75     		strb	r3, [r7, #23]
 10194              	.L656:
2785:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 10195              		.loc 1 2785 0 is_stmt 0 discriminator 1
 10196 057c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10197 057e 012B     		cmp	r3, #1
 10198 0580 08D8     		bhi	.L666
2785:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 10199              		.loc 1 2785 0 discriminator 3
 10200 0582 2D4B     		ldr	r3, .L691
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 233


 10201 0584 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10202 0586 002B     		cmp	r3, #0
 10203 0588 04D1     		bne	.L666
2785:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 10204              		.loc 1 2785 0 discriminator 4
 10205 058a 2C4B     		ldr	r3, .L691+4
 10206 058c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10207 058e 002B     		cmp	r3, #0
 10208 0590 3FF450AF 		beq	.L667
 10209              	.L666:
2811:..\src/interruptions.c ****         }
2812:..\src/interruptions.c ****     }
2813:..\src/interruptions.c ****     
2814:..\src/interruptions.c ****     // State machine - Evaluate rest counter update
2815:..\src/interruptions.c ****     switch (rest_cycle_status){
 10210              		.loc 1 2815 0 is_stmt 1
 10211 0594 2A4B     		ldr	r3, .L691+8
 10212 0596 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10213 0598 012B     		cmp	r3, #1
 10214 059a 11D0     		beq	.L669
 10215 059c 022B     		cmp	r3, #2
 10216 059e 2AD0     		beq	.L670
 10217 05a0 002B     		cmp	r3, #0
 10218 05a2 42D1     		bne	.L668
2816:..\src/interruptions.c ****         case STATE_INACTIVE:
2817:..\src/interruptions.c ****             if (rest_enabled){
 10219              		.loc 1 2817 0
 10220 05a4 274B     		ldr	r3, .L691+12
 10221 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10222 05a8 002B     		cmp	r3, #0
 10223 05aa 3BD0     		beq	.L685
2818:..\src/interruptions.c ****                 timer_value_s = (uint32)CYCLES_TIMER_ReadCounter();
 10224              		.loc 1 2818 0
 10225 05ac FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 10226 05b0 0346     		mov	r3, r0
 10227 05b2 1A46     		mov	r2, r3
 10228 05b4 244B     		ldr	r3, .L691+16
 10229 05b6 1A60     		str	r2, [r3]
2819:..\src/interruptions.c ****                 rest_cycle_status = STATE_ACTIVE;
 10230              		.loc 1 2819 0
 10231 05b8 214B     		ldr	r3, .L691+8
 10232 05ba 0122     		movs	r2, #1
 10233 05bc 1A70     		strb	r2, [r3]
2820:..\src/interruptions.c ****             }
2821:..\src/interruptions.c ****             break;
 10234              		.loc 1 2821 0
 10235 05be 31E0     		b	.L685
 10236              	.L669:
2822:..\src/interruptions.c ****         case STATE_ACTIVE:
2823:..\src/interruptions.c ****             if (!rest_enabled){
 10237              		.loc 1 2823 0
 10238 05c0 204B     		ldr	r3, .L691+12
 10239 05c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10240 05c4 002B     		cmp	r3, #0
 10241 05c6 2FD1     		bne	.L686
2824:..\src/interruptions.c ****                 timer_value_e = (uint32)CYCLES_TIMER_ReadCounter();
 10242              		.loc 1 2824 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 234


 10243 05c8 FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 10244 05cc 0346     		mov	r3, r0
 10245 05ce 1A46     		mov	r2, r3
 10246 05d0 1E4B     		ldr	r3, .L691+20
 10247 05d2 1A60     		str	r2, [r3]
2825:..\src/interruptions.c ****                 if (timer_value_s < timer_value_e) {
 10248              		.loc 1 2825 0
 10249 05d4 1C4B     		ldr	r3, .L691+16
 10250 05d6 1A68     		ldr	r2, [r3]
 10251 05d8 1C4B     		ldr	r3, .L691+20
 10252 05da 1B68     		ldr	r3, [r3]
 10253 05dc 9A42     		cmp	r2, r3
 10254 05de 06D2     		bcs	.L674
2826:..\src/interruptions.c ****                     timer_value_s = timer_value_s + (uint32)6000;
 10255              		.loc 1 2826 0
 10256 05e0 194B     		ldr	r3, .L691+16
 10257 05e2 1B68     		ldr	r3, [r3]
 10258 05e4 03F5BB53 		add	r3, r3, #5984
 10259 05e8 1033     		adds	r3, r3, #16
 10260 05ea 174A     		ldr	r2, .L691+16
 10261 05ec 1360     		str	r3, [r2]
 10262              	.L674:
2827:..\src/interruptions.c ****                 }
2828:..\src/interruptions.c ****                 rest_cycle_status = COUNTER_INC;
 10263              		.loc 1 2828 0
 10264 05ee 144B     		ldr	r3, .L691+8
 10265 05f0 0222     		movs	r2, #2
 10266 05f2 1A70     		strb	r2, [r3]
2829:..\src/interruptions.c ****             }
2830:..\src/interruptions.c ****             break;
 10267              		.loc 1 2830 0
 10268 05f4 18E0     		b	.L686
 10269              	.L670:
2831:..\src/interruptions.c ****         case COUNTER_INC: 
2832:..\src/interruptions.c ****             g_mem.cnt.total_time_rest = g_mem.cnt.total_time_rest + (uint32)((timer_value_s - timer
 10270              		.loc 1 2832 0
 10271 05f6 164B     		ldr	r3, .L691+24
 10272 05f8 DA6D     		ldr	r2, [r3, #92]
 10273 05fa 134B     		ldr	r3, .L691+16
 10274 05fc 1968     		ldr	r1, [r3]
 10275 05fe 134B     		ldr	r3, .L691+20
 10276 0600 1B68     		ldr	r3, [r3]
 10277 0602 CB1A     		subs	r3, r1, r3
 10278 0604 1349     		ldr	r1, .L691+28
 10279 0606 A1FB0313 		umull	r1, r3, r1, r3
 10280 060a 1B09     		lsrs	r3, r3, #4
 10281 060c 1344     		add	r3, r3, r2
 10282 060e 104A     		ldr	r2, .L691+24
 10283 0610 D365     		str	r3, [r2, #92]
2833:..\src/interruptions.c ****             g_mem.cnt.rest_counter = g_mem.cnt.rest_counter + 1;
 10284              		.loc 1 2833 0
 10285 0612 0F4B     		ldr	r3, .L691+24
 10286 0614 1B6D     		ldr	r3, [r3, #80]
 10287 0616 0133     		adds	r3, r3, #1
 10288 0618 0D4A     		ldr	r2, .L691+24
 10289 061a 1365     		str	r3, [r2, #80]
2834:..\src/interruptions.c ****             rest_cycle_status = STATE_INACTIVE;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 235


 10290              		.loc 1 2834 0
 10291 061c 084B     		ldr	r3, .L691+8
 10292 061e 0022     		movs	r2, #0
 10293 0620 1A70     		strb	r2, [r3]
2835:..\src/interruptions.c ****             break;
 10294              		.loc 1 2835 0
 10295 0622 02E0     		b	.L668
 10296              	.L685:
2821:..\src/interruptions.c ****         case STATE_ACTIVE:
 10297              		.loc 1 2821 0
 10298 0624 00BF     		nop
 10299 0626 00E0     		b	.L668
 10300              	.L686:
2830:..\src/interruptions.c ****         case COUNTER_INC: 
 10301              		.loc 1 2830 0
 10302 0628 00BF     		nop
 10303              	.L668:
2836:..\src/interruptions.c ****     }
2837:..\src/interruptions.c ****           
2838:..\src/interruptions.c ****     // This function writes rows [row_start, row_end] on EEPROM
2839:..\src/interruptions.c ****     save_cycles_eeprom();
 10304              		.loc 1 2839 0
 10305 062a FFF7FEFF 		bl	save_cycles_eeprom
2840:..\src/interruptions.c ****     
2841:..\src/interruptions.c **** }
 10306              		.loc 1 2841 0
 10307 062e 00BF     		nop
 10308 0630 1C37     		adds	r7, r7, #28
 10309              		.cfi_def_cfa_offset 12
 10310 0632 BD46     		mov	sp, r7
 10311              		.cfi_def_cfa_register 13
 10312              		@ sp needed
 10313 0634 90BD     		pop	{r4, r7, pc}
 10314              	.L692:
 10315 0636 00BF     		.align	2
 10316              	.L691:
 10317 0638 00000000 		.word	emg_1_status
 10318 063c 00000000 		.word	emg_2_status
 10319 0640 B8010000 		.word	rest_cycle_status.10822
 10320 0644 00000000 		.word	rest_enabled
 10321 0648 BC010000 		.word	timer_value_s.10836
 10322 064c C0010000 		.word	timer_value_e.10837
 10323 0650 00000000 		.word	g_mem
 10324 0654 1F85EB51 		.word	1374389535
 10325              		.cfi_endproc
 10326              	.LFE77:
 10327              		.size	cycles_counter_update, .-cycles_counter_update
 10328              		.section	.text.save_cycles_eeprom,"ax",%progbits
 10329              		.align	2
 10330              		.global	save_cycles_eeprom
 10331              		.thumb
 10332              		.thumb_func
 10333              		.type	save_cycles_eeprom, %function
 10334              	save_cycles_eeprom:
 10335              	.LFB78:
2842:..\src/interruptions.c **** 
2843:..\src/interruptions.c **** //==============================================================================
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 236


2844:..\src/interruptions.c **** //                                                            SAVE CYCLES EEPROM
2845:..\src/interruptions.c **** //==============================================================================
2846:..\src/interruptions.c **** 
2847:..\src/interruptions.c **** void save_cycles_eeprom() {
 10336              		.loc 1 2847 0
 10337              		.cfi_startproc
 10338              		@ args = 0, pretend = 0, frame = 24
 10339              		@ frame_needed = 1, uses_anonymous_args = 0
 10340 0000 80B5     		push	{r7, lr}
 10341              		.cfi_def_cfa_offset 8
 10342              		.cfi_offset 7, -8
 10343              		.cfi_offset 14, -4
 10344 0002 86B0     		sub	sp, sp, #24
 10345              		.cfi_def_cfa_offset 32
 10346 0004 00AF     		add	r7, sp, #0
 10347              		.cfi_def_cfa_register 7
2848:..\src/interruptions.c **** 
2849:..\src/interruptions.c ****     cystatus status;
2850:..\src/interruptions.c ****     static uint8 row_number;
2851:..\src/interruptions.c ****     uint8 row_start = 1;
 10348              		.loc 1 2851 0
 10349 0006 0123     		movs	r3, #1
 10350 0008 FB75     		strb	r3, [r7, #23]
2852:..\src/interruptions.c ****     uint8* addr_start   = (uint8*)&g_mem.cnt.emg_act_counter[0];    //Data at beginning of the row 
 10351              		.loc 1 2852 0
 10352 000a 394B     		ldr	r3, .L709
 10353 000c 3B61     		str	r3, [r7, #16]
2853:..\src/interruptions.c ****     uint8* addr_start_c = (uint8*)&c_mem.cnt.emg_act_counter[0];
 10354              		.loc 1 2853 0
 10355 000e 394B     		ldr	r3, .L709+4
 10356 0010 FB60     		str	r3, [r7, #12]
2854:..\src/interruptions.c ****     uint8 row_end   = row_start + EEPROM_COUNTERS_ROWS - 1;
 10357              		.loc 1 2854 0
 10358 0012 FB7D     		ldrb	r3, [r7, #23]
 10359 0014 0633     		adds	r3, r3, #6
 10360 0016 FB72     		strb	r3, [r7, #11]
2855:..\src/interruptions.c ****     static uint8* m_addr = NULL; 
2856:..\src/interruptions.c **** 
2857:..\src/interruptions.c ****     // This part of code writes rows [row_start, row_end] on EEPROM    
2858:..\src/interruptions.c ****     switch(cycles_status) {
 10361              		.loc 1 2858 0
 10362 0018 374B     		ldr	r3, .L709+8
 10363 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10364 001c 042B     		cmp	r3, #4
 10365 001e 63D8     		bhi	.L705
 10366 0020 01A2     		adr	r2, .L696
 10367 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 10368 0026 00BF     		.p2align 2
 10369              	.L696:
 10370 0028 3D000000 		.word	.L695+1
 10371 002c 5B000000 		.word	.L697+1
 10372 0030 8B000000 		.word	.L698+1
 10373 0034 C7000000 		.word	.L699+1
 10374 0038 DF000000 		.word	.L706+1
 10375              		.p2align 1
 10376              	.L695:
2859:..\src/interruptions.c ****         case PREPARE_DATA:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 237


2860:..\src/interruptions.c ****             // Store data in c_mem structure to have consistent counters
2861:..\src/interruptions.c ****             memcpy( addr_start_c, addr_start, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );            
 10377              		.loc 1 2861 0
 10378 003c 7022     		movs	r2, #112
 10379 003e 3969     		ldr	r1, [r7, #16]
 10380 0040 F868     		ldr	r0, [r7, #12]
 10381 0042 FFF7FEFF 		bl	memcpy
2862:..\src/interruptions.c ****             m_addr = addr_start;
 10382              		.loc 1 2862 0
 10383 0046 2D4A     		ldr	r2, .L709+12
 10384 0048 3B69     		ldr	r3, [r7, #16]
 10385 004a 1360     		str	r3, [r2]
2863:..\src/interruptions.c ****             row_number = row_start;
 10386              		.loc 1 2863 0
 10387 004c 2C4A     		ldr	r2, .L709+16
 10388 004e FB7D     		ldrb	r3, [r7, #23]
 10389 0050 1370     		strb	r3, [r2]
2864:..\src/interruptions.c ****             cycles_status = WRITE_CYCLES;
 10390              		.loc 1 2864 0
 10391 0052 294B     		ldr	r3, .L709+8
 10392 0054 0122     		movs	r2, #1
 10393 0056 1A70     		strb	r2, [r3]
2865:..\src/interruptions.c ****             break;
 10394              		.loc 1 2865 0
 10395 0058 46E0     		b	.L694
 10396              	.L697:
2866:..\src/interruptions.c ****             
2867:..\src/interruptions.c ****         case WRITE_CYCLES:
2868:..\src/interruptions.c ****             EEPROM_UpdateTemperature();     //Check temperature of chip before writing
 10397              		.loc 1 2868 0
 10398 005a FFF7FEFF 		bl	EEPROM_UpdateTemperature
2869:..\src/interruptions.c ****             status = EEPROM_StartWrite((uint8*) m_addr, row_number);           
 10399              		.loc 1 2869 0
 10400 005e 274B     		ldr	r3, .L709+12
 10401 0060 1A68     		ldr	r2, [r3]
 10402 0062 274B     		ldr	r3, .L709+16
 10403 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10404 0066 1946     		mov	r1, r3
 10405 0068 1046     		mov	r0, r2
 10406 006a FFF7FEFF 		bl	EEPROM_StartWrite
 10407 006e 7860     		str	r0, [r7, #4]
2870:..\src/interruptions.c ****             if(status == CYRET_STARTED || status == CYRET_SUCCESS) {
 10408              		.loc 1 2870 0
 10409 0070 7B68     		ldr	r3, [r7, #4]
 10410 0072 072B     		cmp	r3, #7
 10411 0074 02D0     		beq	.L701
 10412              		.loc 1 2870 0 is_stmt 0 discriminator 1
 10413 0076 7B68     		ldr	r3, [r7, #4]
 10414 0078 002B     		cmp	r3, #0
 10415 007a 32D1     		bne	.L707
 10416              	.L701:
2871:..\src/interruptions.c ****                 cycles_status = WAIT_QUERY;
 10417              		.loc 1 2871 0 is_stmt 1
 10418 007c 1E4B     		ldr	r3, .L709+8
 10419 007e 0222     		movs	r2, #2
 10420 0080 1A70     		strb	r2, [r3]
2872:..\src/interruptions.c ****                 can_write = FALSE;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 238


 10421              		.loc 1 2872 0
 10422 0082 204B     		ldr	r3, .L709+20
 10423 0084 0022     		movs	r2, #0
 10424 0086 1A70     		strb	r2, [r3]
2873:..\src/interruptions.c ****             }
2874:..\src/interruptions.c ****             break;
 10425              		.loc 1 2874 0
 10426 0088 2BE0     		b	.L707
 10427              	.L698:
2875:..\src/interruptions.c ****             
2876:..\src/interruptions.c ****         case WAIT_QUERY:
2877:..\src/interruptions.c ****             status = EEPROM_Query();
 10428              		.loc 1 2877 0
 10429 008a FFF7FEFF 		bl	EEPROM_Query
 10430 008e 7860     		str	r0, [r7, #4]
2878:..\src/interruptions.c ****             if(status == CYRET_SUCCESS) {
 10431              		.loc 1 2878 0
 10432 0090 7B68     		ldr	r3, [r7, #4]
 10433 0092 002B     		cmp	r3, #0
 10434 0094 27D1     		bne	.L708
2879:..\src/interruptions.c ****                 if (row_number < row_end) {
 10435              		.loc 1 2879 0
 10436 0096 1A4B     		ldr	r3, .L709+16
 10437 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10438 009a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 10439 009c 9A42     		cmp	r2, r3
 10440 009e 0ED9     		bls	.L704
2880:..\src/interruptions.c ****                     m_addr = m_addr + EEPROM_BYTES_ROW;
 10441              		.loc 1 2880 0
 10442 00a0 164B     		ldr	r3, .L709+12
 10443 00a2 1B68     		ldr	r3, [r3]
 10444 00a4 1033     		adds	r3, r3, #16
 10445 00a6 154A     		ldr	r2, .L709+12
 10446 00a8 1360     		str	r3, [r2]
2881:..\src/interruptions.c ****                     row_number = row_number + 1;
 10447              		.loc 1 2881 0
 10448 00aa 154B     		ldr	r3, .L709+16
 10449 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10450 00ae 0133     		adds	r3, r3, #1
 10451 00b0 DAB2     		uxtb	r2, r3
 10452 00b2 134B     		ldr	r3, .L709+16
 10453 00b4 1A70     		strb	r2, [r3]
2882:..\src/interruptions.c ****                     cycles_status = WRITE_CYCLES;
 10454              		.loc 1 2882 0
 10455 00b6 104B     		ldr	r3, .L709+8
 10456 00b8 0122     		movs	r2, #1
 10457 00ba 1A70     		strb	r2, [r3]
2883:..\src/interruptions.c ****                 }
2884:..\src/interruptions.c ****                 else {
2885:..\src/interruptions.c ****                     cycles_status = WRITE_END;
2886:..\src/interruptions.c ****                 }
2887:..\src/interruptions.c ****             }
2888:..\src/interruptions.c ****             break;
 10458              		.loc 1 2888 0
 10459 00bc 13E0     		b	.L708
 10460              	.L704:
2885:..\src/interruptions.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 239


 10461              		.loc 1 2885 0
 10462 00be 0E4B     		ldr	r3, .L709+8
 10463 00c0 0322     		movs	r2, #3
 10464 00c2 1A70     		strb	r2, [r3]
 10465              		.loc 1 2888 0
 10466 00c4 0FE0     		b	.L708
 10467              	.L699:
2889:..\src/interruptions.c ****            
2890:..\src/interruptions.c ****         case WRITE_END:
2891:..\src/interruptions.c ****             can_write = TRUE;            
 10468              		.loc 1 2891 0
 10469 00c6 0F4B     		ldr	r3, .L709+20
 10470 00c8 0122     		movs	r2, #1
 10471 00ca 1A70     		strb	r2, [r3]
2892:..\src/interruptions.c ****             cycles_status = NONE;
 10472              		.loc 1 2892 0
 10473 00cc 0A4B     		ldr	r3, .L709+8
 10474 00ce 0422     		movs	r2, #4
 10475 00d0 1A70     		strb	r2, [r3]
2893:..\src/interruptions.c ****             
2894:..\src/interruptions.c ****             // Restore data saved in c_mem structure
2895:..\src/interruptions.c ****             memcpy( addr_start, addr_start_c, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );
 10476              		.loc 1 2895 0
 10477 00d2 7022     		movs	r2, #112
 10478 00d4 F968     		ldr	r1, [r7, #12]
 10479 00d6 3869     		ldr	r0, [r7, #16]
 10480 00d8 FFF7FEFF 		bl	memcpy
2896:..\src/interruptions.c ****             break;
 10481              		.loc 1 2896 0
 10482 00dc 04E0     		b	.L694
 10483              	.L706:
2897:..\src/interruptions.c ****             
2898:..\src/interruptions.c ****         case NONE:
2899:..\src/interruptions.c ****             break;
 10484              		.loc 1 2899 0
 10485 00de 00BF     		nop
 10486 00e0 02E0     		b	.L705
 10487              	.L707:
2874:..\src/interruptions.c ****             
 10488              		.loc 1 2874 0
 10489 00e2 00BF     		nop
 10490 00e4 00E0     		b	.L705
 10491              	.L708:
2888:..\src/interruptions.c ****            
 10492              		.loc 1 2888 0
 10493 00e6 00BF     		nop
 10494              	.L694:
 10495              	.L705:
2900:..\src/interruptions.c ****     }
2901:..\src/interruptions.c ****     
2902:..\src/interruptions.c **** }
 10496              		.loc 1 2902 0
 10497 00e8 00BF     		nop
 10498 00ea 1837     		adds	r7, r7, #24
 10499              		.cfi_def_cfa_offset 8
 10500 00ec BD46     		mov	sp, r7
 10501              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 240


 10502              		@ sp needed
 10503 00ee 80BD     		pop	{r7, pc}
 10504              	.L710:
 10505              		.align	2
 10506              	.L709:
 10507 00f0 10000000 		.word	g_mem+16
 10508 00f4 10000000 		.word	c_mem+16
 10509 00f8 00000000 		.word	cycles_status
 10510 00fc C4010000 		.word	m_addr.10881
 10511 0100 C8010000 		.word	row_number.10876
 10512 0104 00000000 		.word	can_write
 10513              		.cfi_endproc
 10514              	.LFE78:
 10515              		.size	save_cycles_eeprom, .-save_cycles_eeprom
 10516              		.bss
 10517              	state.10534:
 10518 0000 00       		.space	1
 10519 0001 000000   		.align	2
 10520              	rx_queue.10538:
 10521 0004 000000   		.space	3
 10522              	data_packet_length.10536:
 10523 0007 00       		.space	1
 10524              	data_packet_index.10535:
 10525 0008 00       		.space	1
 10526 0009 000000   		.align	2
 10527              	data_packet_buffer.10537:
 10528 000c 00000000 		.space	128
 10528      00000000 
 10528      00000000 
 10528      00000000 
 10528      00000000 
 10529              		.data
 10530              		.align	1
 10531              		.type	counter_calibration.10554, %object
 10532              		.size	counter_calibration.10554, 2
 10533              	counter_calibration.10554:
 10534 0000 0100     		.short	1
 10535              		.align	1
 10536              		.type	counter_tension_func.10555, %object
 10537              		.size	counter_tension_func.10555, 2
 10538              	counter_tension_func.10555:
 10539 0002 0100     		.short	1
 10540              		.bss
 10541              		.align	2
 10542              	current_emg.10585:
 10543 008c 0000     		.space	2
 10544              	fsm_state.10622:
 10545 008e 00       		.space	1
 10546 008f 00       		.align	2
 10547              	pos_error_sum.10649:
 10548 0090 00000000 		.space	4
 10549              		.align	2
 10550              	prev_pos_err.10651:
 10551 0094 00000000 		.space	4
 10552              	motor_dir.10654:
 10553 0098 00       		.space	1
 10554 0099 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 241


 10555              	curr_error_sum.10650:
 10556 009c 00000000 		.space	4
 10557              		.align	2
 10558              	prev_curr_err.10652:
 10559 00a0 00000000 		.space	4
 10560              		.align	2
 10561              	prev_pwm.10653:
 10562 00a4 00000000 		.space	4
 10563              		.align	2
 10564              	position_counter.10655:
 10565 00a8 00000000 		.space	4
 10566              		.align	2
 10567              	pos_error_sum.10682:
 10568 00ac 00000000 		.space	8
 10568      00000000 
 10569              		.align	2
 10570              	prev_pos_err.10684:
 10571 00b4 00000000 		.space	8
 10571      00000000 
 10572              		.align	2
 10573              	motor_dir.10687:
 10574 00bc 0000     		.space	2
 10575 00be 0000     		.align	2
 10576              	curr_error_sum.10683:
 10577 00c0 00000000 		.space	8
 10577      00000000 
 10578              		.align	2
 10579              	prev_curr_err.10685:
 10580 00c8 00000000 		.space	8
 10580      00000000 
 10581              		.align	2
 10582              	prev_pwm.10686:
 10583 00d0 00000000 		.space	8
 10583      00000000 
 10584              		.align	2
 10585              	position_counter.10688:
 10586 00d8 00000000 		.space	8
 10586      00000000 
 10587              		.align	2
 10588              	last_value_encoder.10711:
 10589 00e0 00000000 		.space	24
 10589      00000000 
 10589      00000000 
 10589      00000000 
 10589      00000000 
 10590              		.align	2
 10591              	comp_value_encoder.10712:
 10592 00f8 00000000 		.space	24
 10592      00000000 
 10592      00000000 
 10592      00000000 
 10592      00000000 
 10593              		.data
 10594              		.align	2
 10595              		.type	only_first_time.10714, %object
 10596              		.size	only_first_time.10714, 2
 10597              	only_first_time.10714:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 242


 10598 0004 01       		.byte	1
 10599 0005 01       		.byte	1
 10600              		.bss
 10601              		.align	2
 10602              	error.10713:
 10603 0110 00000000 		.space	6
 10603      0000
 10604 0116 0000     		.align	2
 10605              	v_value.10718:
 10606 0118 00000000 		.space	24
 10606      00000000 
 10606      00000000 
 10606      00000000 
 10606      00000000 
 10607              		.align	2
 10608              	vv_value.10719:
 10609 0130 00000000 		.space	24
 10609      00000000 
 10609      00000000 
 10609      00000000 
 10609      00000000 
 10610              		.align	2
 10611              	vvv_value.10720:
 10612 0148 00000000 		.space	24
 10612      00000000 
 10612      00000000 
 10612      00000000 
 10612      00000000 
 10613              		.align	2
 10614              	one_time_execute.10716:
 10615 0160 0000     		.space	2
 10616 0162 0000     		.align	2
 10617              	safe_startup_motor_activation.10715:
 10618 0164 0000     		.space	2
 10619 0166 0000     		.align	2
 10620              	count_startup_motor.10717:
 10621 0168 00000000 		.space	8
 10621      00000000 
 10622              		.data
 10623 0006 0000     		.align	2
 10624              		.type	detect_power_cycle_prev.10744, %object
 10625              		.size	detect_power_cycle_prev.10744, 4
 10626              	detect_power_cycle_prev.10744:
 10627 0008 FDFFFFFF 		.word	-3
 10628              		.type	first_tension_valid.10743, %object
 10629              		.size	first_tension_valid.10743, 1
 10630              	first_tension_valid.10743:
 10631 000c 01       		.byte	1
 10632              		.bss
 10633              		.align	1
 10634              	count.10745:
 10635 0170 0000     		.space	2
 10636              	idx.10747:
 10637 0172 00       		.space	1
 10638 0173 00       		.align	2
 10639              	v_count.10746:
 10640 0174 00000000 		.space	4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 243


 10641              		.align	1
 10642              	emg_counter_1.10737:
 10643 0178 0000     		.space	2
 10644              		.align	1
 10645              	emg_counter_2.10738:
 10646 017a 0000     		.space	2
 10647              		.align	2
 10648              	UD_mean_value.10741:
 10649 017c 00000000 		.space	4
 10650              		.align	1
 10651              	UD_counter.10739:
 10652 0180 0000     		.space	2
 10653 0182 0000     		.align	2
 10654              	LR_mean_value.10742:
 10655 0184 00000000 		.space	4
 10656              		.align	1
 10657              	LR_counter.10740:
 10658 0188 0000     		.space	2
 10659              	pos_cycle_status.10818:
 10660 018a 00       		.space	1
 10661 018b 00       		.align	2
 10662              	thr_pos.10825:
 10663 018c 00000000 		.space	4
 10664              		.align	2
 10665              	max_pos.10826:
 10666 0190 00000000 		.space	4
 10667              		.data
 10668 000d 000000   		.align	2
 10669              		.type	bin_threshold.10823, %object
 10670              		.size	bin_threshold.10823, 4
 10671              	bin_threshold.10823:
 10672 0010 FA000000 		.word	250
 10673              		.bss
 10674              		.align	2
 10675              	emg_cycle_status.10819:
 10676 0194 0000     		.space	2
 10677 0196 0000     		.align	2
 10678              	motion_status.10820:
 10679 0198 0000     		.space	2
 10680 019a 0000     		.align	2
 10681              	start_emg_pos.10840:
 10682 019c 00000000 		.space	8
 10682      00000000 
 10683              		.align	2
 10684              	emg_excess_status.10821:
 10685 01a4 0000     		.space	2
 10686              		.data
 10687              		.align	2
 10688              		.type	exc_act_thr.10824, %object
 10689              		.size	exc_act_thr.10824, 4
 10690              	exc_act_thr.10824:
 10691 0014 D4030000 		.word	980
 10692              		.bss
 10693 01a6 0000     		.align	2
 10694              	timer_exc_s.10838:
 10695 01a8 00000000 		.space	8
 10695      00000000 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 244


 10696              		.align	2
 10697              	timer_exc_e.10839:
 10698 01b0 00000000 		.space	8
 10698      00000000 
 10699              	rest_cycle_status.10822:
 10700 01b8 00       		.space	1
 10701 01b9 000000   		.align	2
 10702              	timer_value_s.10836:
 10703 01bc 00000000 		.space	4
 10704              		.align	2
 10705              	timer_value_e.10837:
 10706 01c0 00000000 		.space	4
 10707              		.align	2
 10708              	m_addr.10881:
 10709 01c4 00000000 		.space	4
 10710              	row_number.10876:
 10711 01c8 00       		.space	1
 10712              		.text
 10713              	.Letext0:
 10714              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 10715              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 10716              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 10717              		.file 5 "..\\src\\commands.h"
 10718              		.file 6 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 10719              		.file 7 "..\\src\\globals.h"
 10720              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 10721              		.section	.debug_info,"",%progbits
 10722              	.Ldebug_info0:
 10723 0000 821C0000 		.4byte	0x1c82
 10724 0004 0400     		.2byte	0x4
 10725 0006 00000000 		.4byte	.Ldebug_abbrev0
 10726 000a 04       		.byte	0x4
 10727 000b 01       		.uleb128 0x1
 10728 000c 3B090000 		.4byte	.LASF359
 10729 0010 0C       		.byte	0xc
 10730 0011 D1110000 		.4byte	.LASF360
 10731 0015 BD030000 		.4byte	.LASF361
 10732 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 10733 001d 00000000 		.4byte	0
 10734 0021 00000000 		.4byte	.Ldebug_line0
 10735 0025 02       		.uleb128 0x2
 10736 0026 01       		.byte	0x1
 10737 0027 06       		.byte	0x6
 10738 0028 5F040000 		.4byte	.LASF0
 10739 002c 02       		.uleb128 0x2
 10740 002d 01       		.byte	0x1
 10741 002e 08       		.byte	0x8
 10742 002f DC040000 		.4byte	.LASF1
 10743 0033 02       		.uleb128 0x2
 10744 0034 02       		.byte	0x2
 10745 0035 05       		.byte	0x5
 10746 0036 A20F0000 		.4byte	.LASF2
 10747 003a 02       		.uleb128 0x2
 10748 003b 02       		.byte	0x2
 10749 003c 07       		.byte	0x7
 10750 003d 75110000 		.4byte	.LASF3
 10751 0041 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 245


 10752 0042 67120000 		.4byte	.LASF9
 10753 0046 02       		.byte	0x2
 10754 0047 3F       		.byte	0x3f
 10755 0048 4C000000 		.4byte	0x4c
 10756 004c 02       		.uleb128 0x2
 10757 004d 04       		.byte	0x4
 10758 004e 05       		.byte	0x5
 10759 004f D6020000 		.4byte	.LASF4
 10760 0053 02       		.uleb128 0x2
 10761 0054 04       		.byte	0x4
 10762 0055 07       		.byte	0x7
 10763 0056 3C080000 		.4byte	.LASF5
 10764 005a 02       		.uleb128 0x2
 10765 005b 08       		.byte	0x8
 10766 005c 05       		.byte	0x5
 10767 005d 010A0000 		.4byte	.LASF6
 10768 0061 02       		.uleb128 0x2
 10769 0062 08       		.byte	0x8
 10770 0063 07       		.byte	0x7
 10771 0064 2C0D0000 		.4byte	.LASF7
 10772 0068 04       		.uleb128 0x4
 10773 0069 04       		.byte	0x4
 10774 006a 05       		.byte	0x5
 10775 006b 696E7400 		.ascii	"int\000"
 10776 006f 02       		.uleb128 0x2
 10777 0070 04       		.byte	0x4
 10778 0071 07       		.byte	0x7
 10779 0072 290B0000 		.4byte	.LASF8
 10780 0076 03       		.uleb128 0x3
 10781 0077 8B000000 		.4byte	.LASF10
 10782 007b 03       		.byte	0x3
 10783 007c 2C       		.byte	0x2c
 10784 007d 41000000 		.4byte	0x41
 10785 0081 05       		.uleb128 0x5
 10786 0082 7C0F0000 		.4byte	.LASF11
 10787 0086 04       		.byte	0x4
 10788 0087 E401     		.2byte	0x1e4
 10789 0089 2C000000 		.4byte	0x2c
 10790 008d 05       		.uleb128 0x5
 10791 008e C4120000 		.4byte	.LASF12
 10792 0092 04       		.byte	0x4
 10793 0093 E501     		.2byte	0x1e5
 10794 0095 3A000000 		.4byte	0x3a
 10795 0099 05       		.uleb128 0x5
 10796 009a BF000000 		.4byte	.LASF13
 10797 009e 04       		.byte	0x4
 10798 009f E601     		.2byte	0x1e6
 10799 00a1 53000000 		.4byte	0x53
 10800 00a5 05       		.uleb128 0x5
 10801 00a6 A3010000 		.4byte	.LASF14
 10802 00aa 04       		.byte	0x4
 10803 00ab E701     		.2byte	0x1e7
 10804 00ad 25000000 		.4byte	0x25
 10805 00b1 05       		.uleb128 0x5
 10806 00b2 61100000 		.4byte	.LASF15
 10807 00b6 04       		.byte	0x4
 10808 00b7 E801     		.2byte	0x1e8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 246


 10809 00b9 33000000 		.4byte	0x33
 10810 00bd 05       		.uleb128 0x5
 10811 00be F4110000 		.4byte	.LASF16
 10812 00c2 04       		.byte	0x4
 10813 00c3 E901     		.2byte	0x1e9
 10814 00c5 4C000000 		.4byte	0x4c
 10815 00c9 05       		.uleb128 0x5
 10816 00ca A1030000 		.4byte	.LASF17
 10817 00ce 04       		.byte	0x4
 10818 00cf EA01     		.2byte	0x1ea
 10819 00d1 D5000000 		.4byte	0xd5
 10820 00d5 02       		.uleb128 0x2
 10821 00d6 04       		.byte	0x4
 10822 00d7 04       		.byte	0x4
 10823 00d8 E90A0000 		.4byte	.LASF18
 10824 00dc 02       		.uleb128 0x2
 10825 00dd 08       		.byte	0x8
 10826 00de 04       		.byte	0x4
 10827 00df 440A0000 		.4byte	.LASF19
 10828 00e3 02       		.uleb128 0x2
 10829 00e4 01       		.byte	0x1
 10830 00e5 08       		.byte	0x8
 10831 00e6 6E050000 		.4byte	.LASF20
 10832 00ea 05       		.uleb128 0x5
 10833 00eb 780B0000 		.4byte	.LASF21
 10834 00ef 04       		.byte	0x4
 10835 00f0 8602     		.2byte	0x286
 10836 00f2 53000000 		.4byte	0x53
 10837 00f6 05       		.uleb128 0x5
 10838 00f7 F80D0000 		.4byte	.LASF22
 10839 00fb 04       		.byte	0x4
 10840 00fc 8E02     		.2byte	0x28e
 10841 00fe 02010000 		.4byte	0x102
 10842 0102 06       		.uleb128 0x6
 10843 0103 81000000 		.4byte	0x81
 10844 0107 02       		.uleb128 0x2
 10845 0108 08       		.byte	0x8
 10846 0109 04       		.byte	0x4
 10847 010a 2A0C0000 		.4byte	.LASF23
 10848 010e 02       		.uleb128 0x2
 10849 010f 04       		.byte	0x4
 10850 0110 07       		.byte	0x7
 10851 0111 10000000 		.4byte	.LASF24
 10852 0115 07       		.uleb128 0x7
 10853 0116 E3000000 		.4byte	0xe3
 10854 011a 25010000 		.4byte	0x125
 10855 011e 08       		.uleb128 0x8
 10856 011f 0E010000 		.4byte	0x10e
 10857 0123 07       		.byte	0x7
 10858 0124 00       		.byte	0
 10859 0125 09       		.uleb128 0x9
 10860 0126 A1120000 		.4byte	.LASF33
 10861 012a 01       		.byte	0x1
 10862 012b 2C000000 		.4byte	0x2c
 10863 012f 05       		.byte	0x5
 10864 0130 94       		.byte	0x94
 10865 0131 66010000 		.4byte	0x166
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 247


 10866 0135 0A       		.uleb128 0xa
 10867 0136 AF070000 		.4byte	.LASF25
 10868 013a 00       		.byte	0
 10869 013b 0A       		.uleb128 0xa
 10870 013c 810B0000 		.4byte	.LASF26
 10871 0140 01       		.byte	0x1
 10872 0141 0A       		.uleb128 0xa
 10873 0142 2E020000 		.4byte	.LASF27
 10874 0146 02       		.byte	0x2
 10875 0147 0A       		.uleb128 0xa
 10876 0148 71010000 		.4byte	.LASF28
 10877 014c 03       		.byte	0x3
 10878 014d 0A       		.uleb128 0xa
 10879 014e 2B010000 		.4byte	.LASF29
 10880 0152 04       		.byte	0x4
 10881 0153 0A       		.uleb128 0xa
 10882 0154 53000000 		.4byte	.LASF30
 10883 0158 05       		.byte	0x5
 10884 0159 0A       		.uleb128 0xa
 10885 015a 7E080000 		.4byte	.LASF31
 10886 015e 06       		.byte	0x6
 10887 015f 0A       		.uleb128 0xa
 10888 0160 1C0F0000 		.4byte	.LASF32
 10889 0164 07       		.byte	0x7
 10890 0165 00       		.byte	0
 10891 0166 09       		.uleb128 0x9
 10892 0167 0F0A0000 		.4byte	.LASF34
 10893 016b 01       		.byte	0x1
 10894 016c 2C000000 		.4byte	0x2c
 10895 0170 05       		.byte	0x5
 10896 0171 A8       		.byte	0xa8
 10897 0172 8F010000 		.4byte	0x18f
 10898 0176 0A       		.uleb128 0xa
 10899 0177 59120000 		.4byte	.LASF35
 10900 017b 00       		.byte	0
 10901 017c 0A       		.uleb128 0xa
 10902 017d 19090000 		.4byte	.LASF36
 10903 0181 01       		.byte	0x1
 10904 0182 0A       		.uleb128 0xa
 10905 0183 1A0C0000 		.4byte	.LASF37
 10906 0187 02       		.byte	0x2
 10907 0188 0A       		.uleb128 0xa
 10908 0189 1F080000 		.4byte	.LASF38
 10909 018d 03       		.byte	0x3
 10910 018e 00       		.byte	0
 10911 018f 03       		.uleb128 0x3
 10912 0190 24120000 		.4byte	.LASF39
 10913 0194 06       		.byte	0x6
 10914 0195 7E       		.byte	0x7e
 10915 0196 9A010000 		.4byte	0x19a
 10916 019a 0B       		.uleb128 0xb
 10917 019b 24120000 		.4byte	.LASF39
 10918 019f 0C       		.uleb128 0xc
 10919 01a0 04       		.byte	0x4
 10920 01a1 8F010000 		.4byte	0x18f
 10921 01a5 0D       		.uleb128 0xd
 10922 01a6 C9090000 		.4byte	.LASF42
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 248


 10923 01aa 10       		.byte	0x10
 10924 01ab 07       		.byte	0x7
 10925 01ac EB       		.byte	0xeb
 10926 01ad E2010000 		.4byte	0x1e2
 10927 01b1 0E       		.uleb128 0xe
 10928 01b2 706F7300 		.ascii	"pos\000"
 10929 01b6 07       		.byte	0x7
 10930 01b7 EC       		.byte	0xec
 10931 01b8 BD000000 		.4byte	0xbd
 10932 01bc 00       		.byte	0
 10933 01bd 0F       		.uleb128 0xf
 10934 01be FE080000 		.4byte	.LASF40
 10935 01c2 07       		.byte	0x7
 10936 01c3 ED       		.byte	0xed
 10937 01c4 BD000000 		.4byte	0xbd
 10938 01c8 04       		.byte	0x4
 10939 01c9 0E       		.uleb128 0xe
 10940 01ca 70776D00 		.ascii	"pwm\000"
 10941 01ce 07       		.byte	0x7
 10942 01cf EE       		.byte	0xee
 10943 01d0 BD000000 		.4byte	0xbd
 10944 01d4 08       		.byte	0x8
 10945 01d5 0F       		.uleb128 0xf
 10946 01d6 8F0D0000 		.4byte	.LASF41
 10947 01da 07       		.byte	0x7
 10948 01db EF       		.byte	0xef
 10949 01dc 81000000 		.4byte	0x81
 10950 01e0 0C       		.byte	0xc
 10951 01e1 00       		.byte	0
 10952 01e2 0D       		.uleb128 0xd
 10953 01e3 E30E0000 		.4byte	.LASF43
 10954 01e7 34       		.byte	0x34
 10955 01e8 07       		.byte	0x7
 10956 01e9 F6       		.byte	0xf6
 10957 01ea 43020000 		.4byte	0x243
 10958 01ee 0E       		.uleb128 0xe
 10959 01ef 706F7300 		.ascii	"pos\000"
 10960 01f3 07       		.byte	0x7
 10961 01f4 F7       		.byte	0xf7
 10962 01f5 43020000 		.4byte	0x243
 10963 01f9 00       		.byte	0
 10964 01fa 0F       		.uleb128 0xf
 10965 01fb FE080000 		.4byte	.LASF40
 10966 01ff 07       		.byte	0x7
 10967 0200 F8       		.byte	0xf8
 10968 0201 BD000000 		.4byte	0xbd
 10969 0205 0C       		.byte	0xc
 10970 0206 0F       		.uleb128 0xf
 10971 0207 A4100000 		.4byte	.LASF44
 10972 020b 07       		.byte	0x7
 10973 020c F9       		.byte	0xf9
 10974 020d BD000000 		.4byte	0xbd
 10975 0211 10       		.byte	0x10
 10976 0212 0F       		.uleb128 0xf
 10977 0213 74080000 		.4byte	.LASF45
 10978 0217 07       		.byte	0x7
 10979 0218 FA       		.byte	0xfa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 249


 10980 0219 BD000000 		.4byte	0xbd
 10981 021d 14       		.byte	0x14
 10982 021e 0E       		.uleb128 0xe
 10983 021f 726F7400 		.ascii	"rot\000"
 10984 0223 07       		.byte	0x7
 10985 0224 FB       		.byte	0xfb
 10986 0225 53020000 		.4byte	0x253
 10987 0229 18       		.byte	0x18
 10988 022a 0E       		.uleb128 0xe
 10989 022b 76656C00 		.ascii	"vel\000"
 10990 022f 07       		.byte	0x7
 10991 0230 FC       		.byte	0xfc
 10992 0231 43020000 		.4byte	0x243
 10993 0235 1C       		.byte	0x1c
 10994 0236 0E       		.uleb128 0xe
 10995 0237 61636300 		.ascii	"acc\000"
 10996 023b 07       		.byte	0x7
 10997 023c FD       		.byte	0xfd
 10998 023d 43020000 		.4byte	0x243
 10999 0241 28       		.byte	0x28
 11000 0242 00       		.byte	0
 11001 0243 07       		.uleb128 0x7
 11002 0244 BD000000 		.4byte	0xbd
 11003 0248 53020000 		.4byte	0x253
 11004 024c 08       		.uleb128 0x8
 11005 024d 0E010000 		.4byte	0x10e
 11006 0251 02       		.byte	0x2
 11007 0252 00       		.byte	0
 11008 0253 07       		.uleb128 0x7
 11009 0254 A5000000 		.4byte	0xa5
 11010 0258 63020000 		.4byte	0x263
 11011 025c 08       		.uleb128 0x8
 11012 025d 0E010000 		.4byte	0x10e
 11013 0261 02       		.byte	0x2
 11014 0262 00       		.byte	0
 11015 0263 10       		.uleb128 0x10
 11016 0264 FE0A0000 		.4byte	.LASF46
 11017 0268 28       		.byte	0x28
 11018 0269 07       		.byte	0x7
 11019 026a 0001     		.2byte	0x100
 11020 026c 98020000 		.4byte	0x298
 11021 0270 11       		.uleb128 0x11
 11022 0271 656D6700 		.ascii	"emg\000"
 11023 0275 07       		.byte	0x7
 11024 0276 0101     		.2byte	0x101
 11025 0278 98020000 		.4byte	0x298
 11026 027c 00       		.byte	0
 11027 027d 12       		.uleb128 0x12
 11028 027e CB0B0000 		.4byte	.LASF47
 11029 0282 07       		.byte	0x7
 11030 0283 0201     		.2byte	0x102
 11031 0285 A8020000 		.4byte	0x2a8
 11032 0289 08       		.byte	0x8
 11033 028a 12       		.uleb128 0x12
 11034 028b C10F0000 		.4byte	.LASF48
 11035 028f 07       		.byte	0x7
 11036 0290 0301     		.2byte	0x103
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 250


 11037 0292 98020000 		.4byte	0x298
 11038 0296 20       		.byte	0x20
 11039 0297 00       		.byte	0
 11040 0298 07       		.uleb128 0x7
 11041 0299 BD000000 		.4byte	0xbd
 11042 029d A8020000 		.4byte	0x2a8
 11043 02a1 08       		.uleb128 0x8
 11044 02a2 0E010000 		.4byte	0x10e
 11045 02a6 01       		.byte	0x1
 11046 02a7 00       		.byte	0
 11047 02a8 07       		.uleb128 0x7
 11048 02a9 BD000000 		.4byte	0xbd
 11049 02ad B8020000 		.4byte	0x2b8
 11050 02b1 08       		.uleb128 0x8
 11051 02b2 0E010000 		.4byte	0x10e
 11052 02b6 05       		.byte	0x5
 11053 02b7 00       		.byte	0
 11054 02b8 10       		.uleb128 0x10
 11055 02b9 A9000000 		.4byte	.LASF49
 11056 02bd 86       		.byte	0x86
 11057 02be 07       		.byte	0x7
 11058 02bf 0E01     		.2byte	0x10e
 11059 02c1 FA020000 		.4byte	0x2fa
 11060 02c5 12       		.uleb128 0x12
 11061 02c6 B9060000 		.4byte	.LASF50
 11062 02ca 07       		.byte	0x7
 11063 02cb 0F01     		.2byte	0x10f
 11064 02cd FA020000 		.4byte	0x2fa
 11065 02d1 00       		.byte	0
 11066 02d2 12       		.uleb128 0x12
 11067 02d3 720D0000 		.4byte	.LASF51
 11068 02d7 07       		.byte	0x7
 11069 02d8 1001     		.2byte	0x110
 11070 02da B1000000 		.4byte	0xb1
 11071 02de 80       		.byte	0x80
 11072 02df 11       		.uleb128 0x11
 11073 02e0 696E6400 		.ascii	"ind\000"
 11074 02e4 07       		.byte	0x7
 11075 02e5 1101     		.2byte	0x111
 11076 02e7 B1000000 		.4byte	0xb1
 11077 02eb 82       		.byte	0x82
 11078 02ec 12       		.uleb128 0x12
 11079 02ed 01020000 		.4byte	.LASF52
 11080 02f1 07       		.byte	0x7
 11081 02f2 1201     		.2byte	0x112
 11082 02f4 81000000 		.4byte	0x81
 11083 02f8 84       		.byte	0x84
 11084 02f9 00       		.byte	0
 11085 02fa 07       		.uleb128 0x7
 11086 02fb 81000000 		.4byte	0x81
 11087 02ff 0A030000 		.4byte	0x30a
 11088 0303 08       		.uleb128 0x8
 11089 0304 0E010000 		.4byte	0x10e
 11090 0308 7F       		.byte	0x7f
 11091 0309 00       		.byte	0
 11092 030a 10       		.uleb128 0x10
 11093 030b 7F030000 		.4byte	.LASF53
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 251


 11094 030f 70       		.byte	0x70
 11095 0310 07       		.byte	0x7
 11096 0311 1B01     		.2byte	0x11b
 11097 0313 A7030000 		.4byte	0x3a7
 11098 0317 12       		.uleb128 0x12
 11099 0318 00000000 		.4byte	.LASF54
 11100 031c 07       		.byte	0x7
 11101 031d 1C01     		.2byte	0x11c
 11102 031f A7030000 		.4byte	0x3a7
 11103 0323 00       		.byte	0
 11104 0324 12       		.uleb128 0x12
 11105 0325 BE010000 		.4byte	.LASF55
 11106 0329 07       		.byte	0x7
 11107 032a 1D01     		.2byte	0x11d
 11108 032c B7030000 		.4byte	0x3b7
 11109 0330 08       		.byte	0x8
 11110 0331 12       		.uleb128 0x12
 11111 0332 0D0C0000 		.4byte	.LASF56
 11112 0336 07       		.byte	0x7
 11113 0337 1E01     		.2byte	0x11e
 11114 0339 C7030000 		.4byte	0x3c7
 11115 033d 30       		.byte	0x30
 11116 033e 12       		.uleb128 0x12
 11117 033f 55010000 		.4byte	.LASF57
 11118 0343 07       		.byte	0x7
 11119 0344 1F01     		.2byte	0x11f
 11120 0346 99000000 		.4byte	0x99
 11121 034a 40       		.byte	0x40
 11122 034b 12       		.uleb128 0x12
 11123 034c 71120000 		.4byte	.LASF58
 11124 0350 07       		.byte	0x7
 11125 0351 2001     		.2byte	0x120
 11126 0353 99000000 		.4byte	0x99
 11127 0357 44       		.byte	0x44
 11128 0358 12       		.uleb128 0x12
 11129 0359 B1000000 		.4byte	.LASF59
 11130 035d 07       		.byte	0x7
 11131 035e 2101     		.2byte	0x121
 11132 0360 99000000 		.4byte	0x99
 11133 0364 48       		.byte	0x48
 11134 0365 12       		.uleb128 0x12
 11135 0366 92080000 		.4byte	.LASF60
 11136 036a 07       		.byte	0x7
 11137 036b 2201     		.2byte	0x122
 11138 036d 99000000 		.4byte	0x99
 11139 0371 4C       		.byte	0x4c
 11140 0372 12       		.uleb128 0x12
 11141 0373 19000000 		.4byte	.LASF61
 11142 0377 07       		.byte	0x7
 11143 0378 2301     		.2byte	0x123
 11144 037a 99000000 		.4byte	0x99
 11145 037e 50       		.byte	0x50
 11146 037f 12       		.uleb128 0x12
 11147 0380 68020000 		.4byte	.LASF62
 11148 0384 07       		.byte	0x7
 11149 0385 2401     		.2byte	0x124
 11150 0387 A7030000 		.4byte	0x3a7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 252


 11151 038b 54       		.byte	0x54
 11152 038c 12       		.uleb128 0x12
 11153 038d 780C0000 		.4byte	.LASF63
 11154 0391 07       		.byte	0x7
 11155 0392 2501     		.2byte	0x125
 11156 0394 A7030000 		.4byte	0x3a7
 11157 0398 5C       		.byte	0x5c
 11158 0399 12       		.uleb128 0x12
 11159 039a 4C030000 		.4byte	.LASF64
 11160 039e 07       		.byte	0x7
 11161 039f 2601     		.2byte	0x126
 11162 03a1 D7030000 		.4byte	0x3d7
 11163 03a5 64       		.byte	0x64
 11164 03a6 00       		.byte	0
 11165 03a7 07       		.uleb128 0x7
 11166 03a8 99000000 		.4byte	0x99
 11167 03ac B7030000 		.4byte	0x3b7
 11168 03b0 08       		.uleb128 0x8
 11169 03b1 0E010000 		.4byte	0x10e
 11170 03b5 01       		.byte	0x1
 11171 03b6 00       		.byte	0
 11172 03b7 07       		.uleb128 0x7
 11173 03b8 99000000 		.4byte	0x99
 11174 03bc C7030000 		.4byte	0x3c7
 11175 03c0 08       		.uleb128 0x8
 11176 03c1 0E010000 		.4byte	0x10e
 11177 03c5 09       		.byte	0x9
 11178 03c6 00       		.byte	0
 11179 03c7 07       		.uleb128 0x7
 11180 03c8 99000000 		.4byte	0x99
 11181 03cc D7030000 		.4byte	0x3d7
 11182 03d0 08       		.uleb128 0x8
 11183 03d1 0E010000 		.4byte	0x10e
 11184 03d5 03       		.byte	0x3
 11185 03d6 00       		.byte	0
 11186 03d7 07       		.uleb128 0x7
 11187 03d8 81000000 		.4byte	0x81
 11188 03dc E7030000 		.4byte	0x3e7
 11189 03e0 08       		.uleb128 0x8
 11190 03e1 0E010000 		.4byte	0x10e
 11191 03e5 0B       		.byte	0xb
 11192 03e6 00       		.byte	0
 11193 03e7 10       		.uleb128 0x10
 11194 03e8 24020000 		.4byte	.LASF65
 11195 03ec 10       		.byte	0x10
 11196 03ed 07       		.byte	0x7
 11197 03ee 2D01     		.2byte	0x12d
 11198 03f0 76040000 		.4byte	0x476
 11199 03f4 11       		.uleb128 0x11
 11200 03f5 696400   		.ascii	"id\000"
 11201 03f8 07       		.byte	0x7
 11202 03f9 2E01     		.2byte	0x12e
 11203 03fb 81000000 		.4byte	0x81
 11204 03ff 00       		.byte	0
 11205 0400 12       		.uleb128 0x12
 11206 0401 DC0F0000 		.4byte	.LASF66
 11207 0405 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 253


 11208 0406 2F01     		.2byte	0x12f
 11209 0408 76040000 		.4byte	0x476
 11210 040c 01       		.byte	0x1
 11211 040d 12       		.uleb128 0x12
 11212 040e 18100000 		.4byte	.LASF67
 11213 0412 07       		.byte	0x7
 11214 0413 3001     		.2byte	0x130
 11215 0415 76040000 		.4byte	0x476
 11216 0419 04       		.byte	0x4
 11217 041a 12       		.uleb128 0x12
 11218 041b 36050000 		.4byte	.LASF68
 11219 041f 07       		.byte	0x7
 11220 0420 3101     		.2byte	0x131
 11221 0422 81000000 		.4byte	0x81
 11222 0426 07       		.byte	0x7
 11223 0427 12       		.uleb128 0x12
 11224 0428 08030000 		.4byte	.LASF69
 11225 042c 07       		.byte	0x7
 11226 042d 3201     		.2byte	0x132
 11227 042f 81000000 		.4byte	0x81
 11228 0433 08       		.byte	0x8
 11229 0434 12       		.uleb128 0x12
 11230 0435 4A020000 		.4byte	.LASF70
 11231 0439 07       		.byte	0x7
 11232 043a 3301     		.2byte	0x133
 11233 043c 81000000 		.4byte	0x81
 11234 0440 09       		.byte	0x9
 11235 0441 12       		.uleb128 0x12
 11236 0442 49110000 		.4byte	.LASF71
 11237 0446 07       		.byte	0x7
 11238 0447 3401     		.2byte	0x134
 11239 0449 81000000 		.4byte	0x81
 11240 044d 0A       		.byte	0xa
 11241 044e 12       		.uleb128 0x12
 11242 044f DD100000 		.4byte	.LASF72
 11243 0453 07       		.byte	0x7
 11244 0454 3501     		.2byte	0x135
 11245 0456 81000000 		.4byte	0x81
 11246 045a 0B       		.byte	0xb
 11247 045b 12       		.uleb128 0x12
 11248 045c 920E0000 		.4byte	.LASF73
 11249 0460 07       		.byte	0x7
 11250 0461 3601     		.2byte	0x136
 11251 0463 81000000 		.4byte	0x81
 11252 0467 0C       		.byte	0xc
 11253 0468 12       		.uleb128 0x12
 11254 0469 4C030000 		.4byte	.LASF64
 11255 046d 07       		.byte	0x7
 11256 046e 3701     		.2byte	0x137
 11257 0470 76040000 		.4byte	0x476
 11258 0474 0D       		.byte	0xd
 11259 0475 00       		.byte	0
 11260 0476 07       		.uleb128 0x7
 11261 0477 81000000 		.4byte	0x81
 11262 047b 86040000 		.4byte	0x486
 11263 047f 08       		.uleb128 0x8
 11264 0480 0E010000 		.4byte	0x10e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 254


 11265 0484 02       		.byte	0x2
 11266 0485 00       		.byte	0
 11267 0486 10       		.uleb128 0x10
 11268 0487 0F120000 		.4byte	.LASF74
 11269 048b 70       		.byte	0x70
 11270 048c 07       		.byte	0x7
 11271 048d 3E01     		.2byte	0x13e
 11272 048f 00060000 		.4byte	0x600
 11273 0493 11       		.uleb128 0x11
 11274 0494 6B5F7000 		.ascii	"k_p\000"
 11275 0498 07       		.byte	0x7
 11276 0499 3F01     		.2byte	0x13f
 11277 049b BD000000 		.4byte	0xbd
 11278 049f 00       		.byte	0
 11279 04a0 11       		.uleb128 0x11
 11280 04a1 6B5F6900 		.ascii	"k_i\000"
 11281 04a5 07       		.byte	0x7
 11282 04a6 4001     		.2byte	0x140
 11283 04a8 BD000000 		.4byte	0xbd
 11284 04ac 04       		.byte	0x4
 11285 04ad 11       		.uleb128 0x11
 11286 04ae 6B5F6400 		.ascii	"k_d\000"
 11287 04b2 07       		.byte	0x7
 11288 04b3 4101     		.2byte	0x141
 11289 04b5 BD000000 		.4byte	0xbd
 11290 04b9 08       		.byte	0x8
 11291 04ba 12       		.uleb128 0x12
 11292 04bb CB0D0000 		.4byte	.LASF75
 11293 04bf 07       		.byte	0x7
 11294 04c0 4201     		.2byte	0x142
 11295 04c2 BD000000 		.4byte	0xbd
 11296 04c6 0C       		.byte	0xc
 11297 04c7 12       		.uleb128 0x12
 11298 04c8 02060000 		.4byte	.LASF76
 11299 04cc 07       		.byte	0x7
 11300 04cd 4301     		.2byte	0x143
 11301 04cf BD000000 		.4byte	0xbd
 11302 04d3 10       		.byte	0x10
 11303 04d4 12       		.uleb128 0x12
 11304 04d5 EA050000 		.4byte	.LASF77
 11305 04d9 07       		.byte	0x7
 11306 04da 4401     		.2byte	0x144
 11307 04dc BD000000 		.4byte	0xbd
 11308 04e0 14       		.byte	0x14
 11309 04e1 12       		.uleb128 0x12
 11310 04e2 9D100000 		.4byte	.LASF78
 11311 04e6 07       		.byte	0x7
 11312 04e7 4501     		.2byte	0x145
 11313 04e9 BD000000 		.4byte	0xbd
 11314 04ed 18       		.byte	0x18
 11315 04ee 12       		.uleb128 0x12
 11316 04ef B2060000 		.4byte	.LASF79
 11317 04f3 07       		.byte	0x7
 11318 04f4 4601     		.2byte	0x146
 11319 04f6 BD000000 		.4byte	0xbd
 11320 04fa 1C       		.byte	0x1c
 11321 04fb 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 255


 11322 04fc AC0F0000 		.4byte	.LASF80
 11323 0500 07       		.byte	0x7
 11324 0501 4701     		.2byte	0x147
 11325 0503 BD000000 		.4byte	0xbd
 11326 0507 20       		.byte	0x20
 11327 0508 12       		.uleb128 0x12
 11328 0509 C0060000 		.4byte	.LASF81
 11329 050d 07       		.byte	0x7
 11330 050e 4801     		.2byte	0x148
 11331 0510 BD000000 		.4byte	0xbd
 11332 0514 24       		.byte	0x24
 11333 0515 12       		.uleb128 0x12
 11334 0516 08080000 		.4byte	.LASF82
 11335 051a 07       		.byte	0x7
 11336 051b 4901     		.2byte	0x149
 11337 051d BD000000 		.4byte	0xbd
 11338 0521 28       		.byte	0x28
 11339 0522 12       		.uleb128 0x12
 11340 0523 E9120000 		.4byte	.LASF83
 11341 0527 07       		.byte	0x7
 11342 0528 4A01     		.2byte	0x14a
 11343 052a BD000000 		.4byte	0xbd
 11344 052e 2C       		.byte	0x2c
 11345 052f 12       		.uleb128 0x12
 11346 0530 A2080000 		.4byte	.LASF84
 11347 0534 07       		.byte	0x7
 11348 0535 4B01     		.2byte	0x14b
 11349 0537 81000000 		.4byte	0x81
 11350 053b 30       		.byte	0x30
 11351 053c 12       		.uleb128 0x12
 11352 053d 86100000 		.4byte	.LASF85
 11353 0541 07       		.byte	0x7
 11354 0542 4C01     		.2byte	0x14c
 11355 0544 81000000 		.4byte	0x81
 11356 0548 31       		.byte	0x31
 11357 0549 12       		.uleb128 0x12
 11358 054a DD0D0000 		.4byte	.LASF86
 11359 054e 07       		.byte	0x7
 11360 054f 4D01     		.2byte	0x14d
 11361 0551 81000000 		.4byte	0x81
 11362 0555 32       		.byte	0x32
 11363 0556 12       		.uleb128 0x12
 11364 0557 2C120000 		.4byte	.LASF87
 11365 055b 07       		.byte	0x7
 11366 055c 4E01     		.2byte	0x14e
 11367 055e 81000000 		.4byte	0x81
 11368 0562 33       		.byte	0x33
 11369 0563 12       		.uleb128 0x12
 11370 0564 D6000000 		.4byte	.LASF88
 11371 0568 07       		.byte	0x7
 11372 0569 4F01     		.2byte	0x14f
 11373 056b BD000000 		.4byte	0xbd
 11374 056f 34       		.byte	0x34
 11375 0570 12       		.uleb128 0x12
 11376 0571 32060000 		.4byte	.LASF89
 11377 0575 07       		.byte	0x7
 11378 0576 5001     		.2byte	0x150
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 256


 11379 0578 BD000000 		.4byte	0xbd
 11380 057c 38       		.byte	0x38
 11381 057d 12       		.uleb128 0x12
 11382 057e BA0A0000 		.4byte	.LASF90
 11383 0582 07       		.byte	0x7
 11384 0583 5101     		.2byte	0x151
 11385 0585 BD000000 		.4byte	0xbd
 11386 0589 3C       		.byte	0x3c
 11387 058a 12       		.uleb128 0x12
 11388 058b 8B050000 		.4byte	.LASF91
 11389 058f 07       		.byte	0x7
 11390 0590 5201     		.2byte	0x152
 11391 0592 BD000000 		.4byte	0xbd
 11392 0596 40       		.byte	0x40
 11393 0597 12       		.uleb128 0x12
 11394 0598 3F010000 		.4byte	.LASF92
 11395 059c 07       		.byte	0x7
 11396 059d 5301     		.2byte	0x153
 11397 059f 00060000 		.4byte	0x600
 11398 05a3 44       		.byte	0x44
 11399 05a4 12       		.uleb128 0x12
 11400 05a5 93120000 		.4byte	.LASF93
 11401 05a9 07       		.byte	0x7
 11402 05aa 5401     		.2byte	0x154
 11403 05ac B1000000 		.4byte	0xb1
 11404 05b0 5C       		.byte	0x5c
 11405 05b1 12       		.uleb128 0x12
 11406 05b2 0E090000 		.4byte	.LASF94
 11407 05b6 07       		.byte	0x7
 11408 05b7 5501     		.2byte	0x155
 11409 05b9 81000000 		.4byte	0x81
 11410 05bd 5E       		.byte	0x5e
 11411 05be 12       		.uleb128 0x12
 11412 05bf 6B0B0000 		.4byte	.LASF95
 11413 05c3 07       		.byte	0x7
 11414 05c4 5601     		.2byte	0x156
 11415 05c6 81000000 		.4byte	0x81
 11416 05ca 5F       		.byte	0x5f
 11417 05cb 12       		.uleb128 0x12
 11418 05cc 41050000 		.4byte	.LASF96
 11419 05d0 07       		.byte	0x7
 11420 05d1 5701     		.2byte	0x157
 11421 05d3 81000000 		.4byte	0x81
 11422 05d7 60       		.byte	0x60
 11423 05d8 12       		.uleb128 0x12
 11424 05d9 D9050000 		.4byte	.LASF97
 11425 05dd 07       		.byte	0x7
 11426 05de 5801     		.2byte	0x158
 11427 05e0 81000000 		.4byte	0x81
 11428 05e4 61       		.byte	0x61
 11429 05e5 12       		.uleb128 0x12
 11430 05e6 EA040000 		.4byte	.LASF98
 11431 05ea 07       		.byte	0x7
 11432 05eb 5901     		.2byte	0x159
 11433 05ed 81000000 		.4byte	0x81
 11434 05f1 62       		.byte	0x62
 11435 05f2 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 257


 11436 05f3 4C030000 		.4byte	.LASF64
 11437 05f7 07       		.byte	0x7
 11438 05f8 5A01     		.2byte	0x15a
 11439 05fa 10060000 		.4byte	0x610
 11440 05fe 63       		.byte	0x63
 11441 05ff 00       		.byte	0
 11442 0600 07       		.uleb128 0x7
 11443 0601 D5000000 		.4byte	0xd5
 11444 0605 10060000 		.4byte	0x610
 11445 0609 08       		.uleb128 0x8
 11446 060a 0E010000 		.4byte	0x10e
 11447 060e 05       		.byte	0x5
 11448 060f 00       		.byte	0
 11449 0610 07       		.uleb128 0x7
 11450 0611 81000000 		.4byte	0x81
 11451 0615 20060000 		.4byte	0x620
 11452 0619 08       		.uleb128 0x8
 11453 061a 0E010000 		.4byte	0x10e
 11454 061e 0C       		.byte	0xc
 11455 061f 00       		.byte	0
 11456 0620 10       		.uleb128 0x10
 11457 0621 88110000 		.4byte	.LASF99
 11458 0625 30       		.byte	0x30
 11459 0626 07       		.byte	0x7
 11460 0627 6101     		.2byte	0x161
 11461 0629 A3060000 		.4byte	0x6a3
 11462 062d 12       		.uleb128 0x12
 11463 062e 740A0000 		.4byte	.LASF100
 11464 0632 07       		.byte	0x7
 11465 0633 6201     		.2byte	0x162
 11466 0635 A3060000 		.4byte	0x6a3
 11467 0639 00       		.byte	0
 11468 063a 11       		.uleb128 0x11
 11469 063b 72657300 		.ascii	"res\000"
 11470 063f 07       		.byte	0x7
 11471 0640 6301     		.2byte	0x163
 11472 0642 76040000 		.4byte	0x476
 11473 0646 05       		.byte	0x5
 11474 0647 12       		.uleb128 0x12
 11475 0648 CE080000 		.4byte	.LASF101
 11476 064c 07       		.byte	0x7
 11477 064d 6401     		.2byte	0x164
 11478 064f 43020000 		.4byte	0x243
 11479 0653 08       		.byte	0x8
 11480 0654 12       		.uleb128 0x12
 11481 0655 FB050000 		.4byte	.LASF102
 11482 0659 07       		.byte	0x7
 11483 065a 6501     		.2byte	0x165
 11484 065c B3060000 		.4byte	0x6b3
 11485 0660 14       		.byte	0x14
 11486 0661 12       		.uleb128 0x12
 11487 0662 C30C0000 		.4byte	.LASF103
 11488 0666 07       		.byte	0x7
 11489 0667 6601     		.2byte	0x166
 11490 0669 81000000 		.4byte	0x81
 11491 066d 20       		.byte	0x20
 11492 066e 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 258


 11493 066f 07020000 		.4byte	.LASF104
 11494 0673 07       		.byte	0x7
 11495 0674 6701     		.2byte	0x167
 11496 0676 76040000 		.4byte	0x476
 11497 067a 21       		.byte	0x21
 11498 067b 12       		.uleb128 0x12
 11499 067c FA0B0000 		.4byte	.LASF105
 11500 0680 07       		.byte	0x7
 11501 0681 6801     		.2byte	0x168
 11502 0683 A5000000 		.4byte	0xa5
 11503 0687 24       		.byte	0x24
 11504 0688 12       		.uleb128 0x12
 11505 0689 B40E0000 		.4byte	.LASF106
 11506 068d 07       		.byte	0x7
 11507 068e 6901     		.2byte	0x169
 11508 0690 53020000 		.4byte	0x253
 11509 0694 25       		.byte	0x25
 11510 0695 12       		.uleb128 0x12
 11511 0696 4C030000 		.4byte	.LASF64
 11512 069a 07       		.byte	0x7
 11513 069b 6A01     		.2byte	0x16a
 11514 069d C3060000 		.4byte	0x6c3
 11515 06a1 28       		.byte	0x28
 11516 06a2 00       		.byte	0
 11517 06a3 07       		.uleb128 0x7
 11518 06a4 81000000 		.4byte	0x81
 11519 06a8 B3060000 		.4byte	0x6b3
 11520 06ac 08       		.uleb128 0x8
 11521 06ad 0E010000 		.4byte	0x10e
 11522 06b1 04       		.byte	0x4
 11523 06b2 00       		.byte	0
 11524 06b3 07       		.uleb128 0x7
 11525 06b4 C9000000 		.4byte	0xc9
 11526 06b8 C3060000 		.4byte	0x6c3
 11527 06bc 08       		.uleb128 0x8
 11528 06bd 0E010000 		.4byte	0x10e
 11529 06c1 02       		.byte	0x2
 11530 06c2 00       		.byte	0
 11531 06c3 07       		.uleb128 0x7
 11532 06c4 81000000 		.4byte	0x81
 11533 06c8 D3060000 		.4byte	0x6d3
 11534 06cc 08       		.uleb128 0x8
 11535 06cd 0E010000 		.4byte	0x10e
 11536 06d1 07       		.byte	0x7
 11537 06d2 00       		.byte	0
 11538 06d3 10       		.uleb128 0x10
 11539 06d4 B7010000 		.4byte	.LASF107
 11540 06d8 10       		.byte	0x10
 11541 06d9 07       		.byte	0x7
 11542 06da 7101     		.2byte	0x171
 11543 06dc 22070000 		.4byte	0x722
 11544 06e0 12       		.uleb128 0x12
 11545 06e1 D90B0000 		.4byte	.LASF108
 11546 06e5 07       		.byte	0x7
 11547 06e6 7201     		.2byte	0x172
 11548 06e8 22070000 		.4byte	0x722
 11549 06ec 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 259


 11550 06ed 12       		.uleb128 0x12
 11551 06ee 85120000 		.4byte	.LASF109
 11552 06f2 07       		.byte	0x7
 11553 06f3 7301     		.2byte	0x173
 11554 06f5 A7030000 		.4byte	0x3a7
 11555 06f9 04       		.byte	0x4
 11556 06fa 12       		.uleb128 0x12
 11557 06fb 48060000 		.4byte	.LASF110
 11558 06ff 07       		.byte	0x7
 11559 0700 7401     		.2byte	0x174
 11560 0702 32070000 		.4byte	0x732
 11561 0706 0C       		.byte	0xc
 11562 0707 12       		.uleb128 0x12
 11563 0708 CE0E0000 		.4byte	.LASF111
 11564 070c 07       		.byte	0x7
 11565 070d 7501     		.2byte	0x175
 11566 070f 81000000 		.4byte	0x81
 11567 0713 0E       		.byte	0xe
 11568 0714 12       		.uleb128 0x12
 11569 0715 99040000 		.4byte	.LASF112
 11570 0719 07       		.byte	0x7
 11571 071a 7601     		.2byte	0x176
 11572 071c 81000000 		.4byte	0x81
 11573 0720 0F       		.byte	0xf
 11574 0721 00       		.byte	0
 11575 0722 07       		.uleb128 0x7
 11576 0723 8D000000 		.4byte	0x8d
 11577 0727 32070000 		.4byte	0x732
 11578 072b 08       		.uleb128 0x8
 11579 072c 0E010000 		.4byte	0x10e
 11580 0730 01       		.byte	0x1
 11581 0731 00       		.byte	0
 11582 0732 07       		.uleb128 0x7
 11583 0733 81000000 		.4byte	0x81
 11584 0737 42070000 		.4byte	0x742
 11585 073b 08       		.uleb128 0x8
 11586 073c 0E010000 		.4byte	0x10e
 11587 0740 01       		.byte	0x1
 11588 0741 00       		.byte	0
 11589 0742 10       		.uleb128 0x10
 11590 0743 950B0000 		.4byte	.LASF113
 11591 0747 20       		.byte	0x20
 11592 0748 07       		.byte	0x7
 11593 0749 7D01     		.2byte	0x17d
 11594 074b 84070000 		.4byte	0x784
 11595 074f 12       		.uleb128 0x12
 11596 0750 8F020000 		.4byte	.LASF114
 11597 0754 07       		.byte	0x7
 11598 0755 7E01     		.2byte	0x17e
 11599 0757 81000000 		.4byte	0x81
 11600 075b 00       		.byte	0
 11601 075c 12       		.uleb128 0x12
 11602 075d 66110000 		.4byte	.LASF115
 11603 0761 07       		.byte	0x7
 11604 0762 7F01     		.2byte	0x17f
 11605 0764 81000000 		.4byte	0x81
 11606 0768 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 260


 11607 0769 12       		.uleb128 0x12
 11608 076a EF0A0000 		.4byte	.LASF116
 11609 076e 07       		.byte	0x7
 11610 076f 8001     		.2byte	0x180
 11611 0771 84070000 		.4byte	0x784
 11612 0775 02       		.byte	0x2
 11613 0776 12       		.uleb128 0x12
 11614 0777 4C030000 		.4byte	.LASF64
 11615 077b 07       		.byte	0x7
 11616 077c 8101     		.2byte	0x181
 11617 077e A3060000 		.4byte	0x6a3
 11618 0782 1B       		.byte	0x1b
 11619 0783 00       		.byte	0
 11620 0784 07       		.uleb128 0x7
 11621 0785 81000000 		.4byte	0x81
 11622 0789 9A070000 		.4byte	0x79a
 11623 078d 08       		.uleb128 0x8
 11624 078e 0E010000 		.4byte	0x10e
 11625 0792 04       		.byte	0x4
 11626 0793 08       		.uleb128 0x8
 11627 0794 0E010000 		.4byte	0x10e
 11628 0798 04       		.byte	0x4
 11629 0799 00       		.byte	0
 11630 079a 10       		.uleb128 0x10
 11631 079b C10E0000 		.4byte	.LASF117
 11632 079f 20       		.byte	0x20
 11633 07a0 07       		.byte	0x7
 11634 07a1 8801     		.2byte	0x188
 11635 07a3 F6070000 		.4byte	0x7f6
 11636 07a7 12       		.uleb128 0x12
 11637 07a8 B90C0000 		.4byte	.LASF118
 11638 07ac 07       		.byte	0x7
 11639 07ad 8901     		.2byte	0x189
 11640 07af F6070000 		.4byte	0x7f6
 11641 07b3 00       		.byte	0
 11642 07b4 12       		.uleb128 0x12
 11643 07b5 67100000 		.4byte	.LASF119
 11644 07b9 07       		.byte	0x7
 11645 07ba 8A01     		.2byte	0x18a
 11646 07bc 81000000 		.4byte	0x81
 11647 07c0 06       		.byte	0x6
 11648 07c1 12       		.uleb128 0x12
 11649 07c2 6B000000 		.4byte	.LASF120
 11650 07c6 07       		.byte	0x7
 11651 07c7 8B01     		.2byte	0x18b
 11652 07c9 81000000 		.4byte	0x81
 11653 07cd 07       		.byte	0x7
 11654 07ce 12       		.uleb128 0x12
 11655 07cf 87060000 		.4byte	.LASF121
 11656 07d3 07       		.byte	0x7
 11657 07d4 8C01     		.2byte	0x18c
 11658 07d6 D7030000 		.4byte	0x3d7
 11659 07da 08       		.byte	0x8
 11660 07db 12       		.uleb128 0x12
 11661 07dc 9D020000 		.4byte	.LASF122
 11662 07e0 07       		.byte	0x7
 11663 07e1 8D01     		.2byte	0x18d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 261


 11664 07e3 81000000 		.4byte	0x81
 11665 07e7 14       		.byte	0x14
 11666 07e8 12       		.uleb128 0x12
 11667 07e9 4C030000 		.4byte	.LASF64
 11668 07ed 07       		.byte	0x7
 11669 07ee 8E01     		.2byte	0x18e
 11670 07f0 06080000 		.4byte	0x806
 11671 07f4 15       		.byte	0x15
 11672 07f5 00       		.byte	0
 11673 07f6 07       		.uleb128 0x7
 11674 07f7 81000000 		.4byte	0x81
 11675 07fb 06080000 		.4byte	0x806
 11676 07ff 08       		.uleb128 0x8
 11677 0800 0E010000 		.4byte	0x10e
 11678 0804 05       		.byte	0x5
 11679 0805 00       		.byte	0
 11680 0806 07       		.uleb128 0x7
 11681 0807 81000000 		.4byte	0x81
 11682 080b 16080000 		.4byte	0x816
 11683 080f 08       		.uleb128 0x8
 11684 0810 0E010000 		.4byte	0x10e
 11685 0814 0A       		.byte	0xa
 11686 0815 00       		.byte	0
 11687 0816 10       		.uleb128 0x10
 11688 0817 AC0E0000 		.4byte	.LASF123
 11689 081b 20       		.byte	0x20
 11690 081c 07       		.byte	0x7
 11691 081d 9501     		.2byte	0x195
 11692 081f 4B080000 		.4byte	0x84b
 11693 0823 12       		.uleb128 0x12
 11694 0824 6B040000 		.4byte	.LASF124
 11695 0828 07       		.byte	0x7
 11696 0829 9601     		.2byte	0x196
 11697 082b 15010000 		.4byte	0x115
 11698 082f 00       		.byte	0
 11699 0830 12       		.uleb128 0x12
 11700 0831 25030000 		.4byte	.LASF125
 11701 0835 07       		.byte	0x7
 11702 0836 9701     		.2byte	0x197
 11703 0838 D3060000 		.4byte	0x6d3
 11704 083c 08       		.byte	0x8
 11705 083d 12       		.uleb128 0x12
 11706 083e 4C030000 		.4byte	.LASF64
 11707 0842 07       		.byte	0x7
 11708 0843 9801     		.2byte	0x198
 11709 0845 C3060000 		.4byte	0x6c3
 11710 0849 18       		.byte	0x18
 11711 084a 00       		.byte	0
 11712 084b 10       		.uleb128 0x10
 11713 084c DD090000 		.4byte	.LASF126
 11714 0850 10       		.byte	0x10
 11715 0851 07       		.byte	0x7
 11716 0852 9F01     		.2byte	0x19f
 11717 0854 9A080000 		.4byte	0x89a
 11718 0858 12       		.uleb128 0x12
 11719 0859 F5080000 		.4byte	.LASF127
 11720 085d 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 262


 11721 085e A001     		.2byte	0x1a0
 11722 0860 BD000000 		.4byte	0xbd
 11723 0864 00       		.byte	0
 11724 0865 12       		.uleb128 0x12
 11725 0866 CB120000 		.4byte	.LASF128
 11726 086a 07       		.byte	0x7
 11727 086b A101     		.2byte	0x1a1
 11728 086d BD000000 		.4byte	0xbd
 11729 0871 04       		.byte	0x4
 11730 0872 12       		.uleb128 0x12
 11731 0873 52060000 		.4byte	.LASF129
 11732 0877 07       		.byte	0x7
 11733 0878 A201     		.2byte	0x1a2
 11734 087a BD000000 		.4byte	0xbd
 11735 087e 08       		.byte	0x8
 11736 087f 12       		.uleb128 0x12
 11737 0880 DE070000 		.4byte	.LASF130
 11738 0884 07       		.byte	0x7
 11739 0885 A301     		.2byte	0x1a3
 11740 0887 81000000 		.4byte	0x81
 11741 088b 0C       		.byte	0xc
 11742 088c 12       		.uleb128 0x12
 11743 088d 4C030000 		.4byte	.LASF64
 11744 0891 07       		.byte	0x7
 11745 0892 A401     		.2byte	0x1a4
 11746 0894 76040000 		.4byte	0x476
 11747 0898 0D       		.byte	0xd
 11748 0899 00       		.byte	0
 11749 089a 10       		.uleb128 0x10
 11750 089b 820F0000 		.4byte	.LASF131
 11751 089f 10       		.byte	0x10
 11752 08a0 07       		.byte	0x7
 11753 08a1 AB01     		.2byte	0x1ab
 11754 08a3 DC080000 		.4byte	0x8dc
 11755 08a7 12       		.uleb128 0x12
 11756 08a8 F1070000 		.4byte	.LASF132
 11757 08ac 07       		.byte	0x7
 11758 08ad AC01     		.2byte	0x1ac
 11759 08af 8D000000 		.4byte	0x8d
 11760 08b3 00       		.byte	0
 11761 08b4 12       		.uleb128 0x12
 11762 08b5 090F0000 		.4byte	.LASF133
 11763 08b9 07       		.byte	0x7
 11764 08ba AD01     		.2byte	0x1ad
 11765 08bc B1000000 		.4byte	0xb1
 11766 08c0 02       		.byte	0x2
 11767 08c1 12       		.uleb128 0x12
 11768 08c2 65080000 		.4byte	.LASF134
 11769 08c6 07       		.byte	0x7
 11770 08c7 AE01     		.2byte	0x1ae
 11771 08c9 22070000 		.4byte	0x722
 11772 08cd 04       		.byte	0x4
 11773 08ce 12       		.uleb128 0x12
 11774 08cf 4C030000 		.4byte	.LASF64
 11775 08d3 07       		.byte	0x7
 11776 08d4 AF01     		.2byte	0x1af
 11777 08d6 C3060000 		.4byte	0x6c3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 263


 11778 08da 08       		.byte	0x8
 11779 08db 00       		.byte	0
 11780 08dc 10       		.uleb128 0x10
 11781 08dd 62010000 		.4byte	.LASF135
 11782 08e1 10       		.byte	0x10
 11783 08e2 07       		.byte	0x7
 11784 08e3 B601     		.2byte	0x1b6
 11785 08e5 11090000 		.4byte	0x911
 11786 08e9 12       		.uleb128 0x12
 11787 08ea 570E0000 		.4byte	.LASF136
 11788 08ee 07       		.byte	0x7
 11789 08ef B701     		.2byte	0x1b7
 11790 08f1 81000000 		.4byte	0x81
 11791 08f5 00       		.byte	0
 11792 08f6 12       		.uleb128 0x12
 11793 08f7 DB0A0000 		.4byte	.LASF137
 11794 08fb 07       		.byte	0x7
 11795 08fc B801     		.2byte	0x1b8
 11796 08fe 81000000 		.4byte	0x81
 11797 0902 01       		.byte	0x1
 11798 0903 12       		.uleb128 0x12
 11799 0904 4C030000 		.4byte	.LASF64
 11800 0908 07       		.byte	0x7
 11801 0909 B901     		.2byte	0x1b9
 11802 090b 11090000 		.4byte	0x911
 11803 090f 02       		.byte	0x2
 11804 0910 00       		.byte	0
 11805 0911 07       		.uleb128 0x7
 11806 0912 81000000 		.4byte	0x81
 11807 0916 21090000 		.4byte	0x921
 11808 091a 08       		.uleb128 0x8
 11809 091b 0E010000 		.4byte	0x10e
 11810 091f 0D       		.byte	0xd
 11811 0920 00       		.byte	0
 11812 0921 10       		.uleb128 0x10
 11813 0922 F6090000 		.4byte	.LASF138
 11814 0926 10       		.byte	0x10
 11815 0927 07       		.byte	0x7
 11816 0928 C001     		.2byte	0x1c0
 11817 092a 63090000 		.4byte	0x963
 11818 092e 12       		.uleb128 0x12
 11819 092f 9E110000 		.4byte	.LASF139
 11820 0933 07       		.byte	0x7
 11821 0934 C101     		.2byte	0x1c1
 11822 0936 BD000000 		.4byte	0xbd
 11823 093a 00       		.byte	0
 11824 093b 12       		.uleb128 0x12
 11825 093c C9070000 		.4byte	.LASF140
 11826 0940 07       		.byte	0x7
 11827 0941 C201     		.2byte	0x1c2
 11828 0943 D5000000 		.4byte	0xd5
 11829 0947 04       		.byte	0x4
 11830 0948 12       		.uleb128 0x12
 11831 0949 0F0E0000 		.4byte	.LASF141
 11832 094d 07       		.byte	0x7
 11833 094e C301     		.2byte	0x1c3
 11834 0950 D5000000 		.4byte	0xd5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 264


 11835 0954 08       		.byte	0x8
 11836 0955 12       		.uleb128 0x12
 11837 0956 4C030000 		.4byte	.LASF64
 11838 095a 07       		.byte	0x7
 11839 095b C401     		.2byte	0x1c4
 11840 095d 63090000 		.4byte	0x963
 11841 0961 0C       		.byte	0xc
 11842 0962 00       		.byte	0
 11843 0963 07       		.uleb128 0x7
 11844 0964 81000000 		.4byte	0x81
 11845 0968 73090000 		.4byte	0x973
 11846 096c 08       		.uleb128 0x8
 11847 096d 0E010000 		.4byte	0x10e
 11848 0971 03       		.byte	0x3
 11849 0972 00       		.byte	0
 11850 0973 10       		.uleb128 0x10
 11851 0974 EC010000 		.4byte	.LASF142
 11852 0978 12       		.byte	0x12
 11853 0979 07       		.byte	0x7
 11854 097a CB01     		.2byte	0x1cb
 11855 097c B5090000 		.4byte	0x9b5
 11856 0980 12       		.uleb128 0x12
 11857 0981 B4120000 		.4byte	.LASF143
 11858 0985 07       		.byte	0x7
 11859 0986 CC01     		.2byte	0x1cc
 11860 0988 81000000 		.4byte	0x81
 11861 098c 00       		.byte	0
 11862 098d 12       		.uleb128 0x12
 11863 098e 53110000 		.4byte	.LASF144
 11864 0992 07       		.byte	0x7
 11865 0993 CD01     		.2byte	0x1cd
 11866 0995 22070000 		.4byte	0x722
 11867 0999 02       		.byte	0x2
 11868 099a 12       		.uleb128 0x12
 11869 099b 37000000 		.4byte	.LASF145
 11870 099f 07       		.byte	0x7
 11871 09a0 CE01     		.2byte	0x1ce
 11872 09a2 81000000 		.4byte	0x81
 11873 09a6 06       		.byte	0x6
 11874 09a7 12       		.uleb128 0x12
 11875 09a8 4C030000 		.4byte	.LASF64
 11876 09ac 07       		.byte	0x7
 11877 09ad CF01     		.2byte	0x1cf
 11878 09af B5090000 		.4byte	0x9b5
 11879 09b3 07       		.byte	0x7
 11880 09b4 00       		.byte	0
 11881 09b5 07       		.uleb128 0x7
 11882 09b6 81000000 		.4byte	0x81
 11883 09ba C5090000 		.4byte	0x9c5
 11884 09be 08       		.uleb128 0x8
 11885 09bf 0E010000 		.4byte	0x10e
 11886 09c3 09       		.byte	0x9
 11887 09c4 00       		.byte	0
 11888 09c5 13       		.uleb128 0x13
 11889 09c6 B9110000 		.4byte	.LASF146
 11890 09ca F402     		.2byte	0x2f4
 11891 09cc 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 265


 11892 09cd D801     		.2byte	0x1d8
 11893 09cf AA0A0000 		.4byte	0xaaa
 11894 09d3 12       		.uleb128 0x12
 11895 09d4 660B0000 		.4byte	.LASF147
 11896 09d8 07       		.byte	0x7
 11897 09d9 DA01     		.2byte	0x1da
 11898 09db 81000000 		.4byte	0x81
 11899 09df 00       		.byte	0
 11900 09e0 12       		.uleb128 0x12
 11901 09e1 4C030000 		.4byte	.LASF64
 11902 09e5 07       		.byte	0x7
 11903 09e6 DB01     		.2byte	0x1db
 11904 09e8 AA0A0000 		.4byte	0xaaa
 11905 09ec 01       		.byte	0x1
 11906 09ed 11       		.uleb128 0x11
 11907 09ee 636E7400 		.ascii	"cnt\000"
 11908 09f2 07       		.byte	0x7
 11909 09f3 DC01     		.2byte	0x1dc
 11910 09f5 0A030000 		.4byte	0x30a
 11911 09f9 10       		.byte	0x10
 11912 09fa 12       		.uleb128 0x12
 11913 09fb DF020000 		.4byte	.LASF148
 11914 09ff 07       		.byte	0x7
 11915 0a00 DD01     		.2byte	0x1dd
 11916 0a02 BA0A0000 		.4byte	0xaba
 11917 0a06 80       		.byte	0x80
 11918 0a07 11       		.uleb128 0x11
 11919 0a08 64657600 		.ascii	"dev\000"
 11920 0a0c 07       		.byte	0x7
 11921 0a0d DE01     		.2byte	0x1de
 11922 0a0f E7030000 		.4byte	0x3e7
 11923 0a13 A0       		.byte	0xa0
 11924 0a14 12       		.uleb128 0x12
 11925 0a15 CA0F0000 		.4byte	.LASF149
 11926 0a19 07       		.byte	0x7
 11927 0a1a DF01     		.2byte	0x1df
 11928 0a1c CA0A0000 		.4byte	0xaca
 11929 0a20 B0       		.byte	0xb0
 11930 0a21 14       		.uleb128 0x14
 11931 0a22 656E6300 		.ascii	"enc\000"
 11932 0a26 07       		.byte	0x7
 11933 0a27 E001     		.2byte	0x1e0
 11934 0a29 DA0A0000 		.4byte	0xada
 11935 0a2d 9001     		.2byte	0x190
 11936 0a2f 14       		.uleb128 0x14
 11937 0a30 656D6700 		.ascii	"emg\000"
 11938 0a34 07       		.byte	0x7
 11939 0a35 E101     		.2byte	0x1e1
 11940 0a37 D3060000 		.4byte	0x6d3
 11941 0a3b F001     		.2byte	0x1f0
 11942 0a3d 14       		.uleb128 0x14
 11943 0a3e 696D7500 		.ascii	"imu\000"
 11944 0a42 07       		.byte	0x7
 11945 0a43 E201     		.2byte	0x1e2
 11946 0a45 42070000 		.4byte	0x742
 11947 0a49 0002     		.2byte	0x200
 11948 0a4b 14       		.uleb128 0x14
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 266


 11949 0a4c 65787000 		.ascii	"exp\000"
 11950 0a50 07       		.byte	0x7
 11951 0a51 E301     		.2byte	0x1e3
 11952 0a53 9A070000 		.4byte	0x79a
 11953 0a57 2002     		.2byte	0x220
 11954 0a59 15       		.uleb128 0x15
 11955 0a5a 86000000 		.4byte	.LASF150
 11956 0a5e 07       		.byte	0x7
 11957 0a5f E401     		.2byte	0x1e4
 11958 0a61 EA0A0000 		.4byte	0xaea
 11959 0a65 4002     		.2byte	0x240
 11960 0a67 14       		.uleb128 0x14
 11961 0a68 534800   		.ascii	"SH\000"
 11962 0a6b 07       		.byte	0x7
 11963 0a6c E601     		.2byte	0x1e6
 11964 0a6e 4B080000 		.4byte	0x84b
 11965 0a72 A002     		.2byte	0x2a0
 11966 0a74 15       		.uleb128 0x15
 11967 0a75 CD000000 		.4byte	.LASF151
 11968 0a79 07       		.byte	0x7
 11969 0a7a E701     		.2byte	0x1e7
 11970 0a7c 9A080000 		.4byte	0x89a
 11971 0a80 B002     		.2byte	0x2b0
 11972 0a82 14       		.uleb128 0x14
 11973 0a83 4D5300   		.ascii	"MS\000"
 11974 0a86 07       		.byte	0x7
 11975 0a87 E801     		.2byte	0x1e8
 11976 0a89 DC080000 		.4byte	0x8dc
 11977 0a8d C002     		.2byte	0x2c0
 11978 0a8f 14       		.uleb128 0x14
 11979 0a90 464200   		.ascii	"FB\000"
 11980 0a93 07       		.byte	0x7
 11981 0a94 E901     		.2byte	0x1e9
 11982 0a96 21090000 		.4byte	0x921
 11983 0a9a D002     		.2byte	0x2d0
 11984 0a9c 14       		.uleb128 0x14
 11985 0a9d 575200   		.ascii	"WR\000"
 11986 0aa0 07       		.byte	0x7
 11987 0aa1 EA01     		.2byte	0x1ea
 11988 0aa3 73090000 		.4byte	0x973
 11989 0aa7 E002     		.2byte	0x2e0
 11990 0aa9 00       		.byte	0
 11991 0aaa 07       		.uleb128 0x7
 11992 0aab 81000000 		.4byte	0x81
 11993 0aaf BA0A0000 		.4byte	0xaba
 11994 0ab3 08       		.uleb128 0x8
 11995 0ab4 0E010000 		.4byte	0x10e
 11996 0ab8 0E       		.byte	0xe
 11997 0ab9 00       		.byte	0
 11998 0aba 07       		.uleb128 0x7
 11999 0abb 81000000 		.4byte	0x81
 12000 0abf CA0A0000 		.4byte	0xaca
 12001 0ac3 08       		.uleb128 0x8
 12002 0ac4 0E010000 		.4byte	0x10e
 12003 0ac8 1F       		.byte	0x1f
 12004 0ac9 00       		.byte	0
 12005 0aca 07       		.uleb128 0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 267


 12006 0acb 86040000 		.4byte	0x486
 12007 0acf DA0A0000 		.4byte	0xada
 12008 0ad3 08       		.uleb128 0x8
 12009 0ad4 0E010000 		.4byte	0x10e
 12010 0ad8 01       		.byte	0x1
 12011 0ad9 00       		.byte	0
 12012 0ada 07       		.uleb128 0x7
 12013 0adb 20060000 		.4byte	0x620
 12014 0adf EA0A0000 		.4byte	0xaea
 12015 0ae3 08       		.uleb128 0x8
 12016 0ae4 0E010000 		.4byte	0x10e
 12017 0ae8 01       		.byte	0x1
 12018 0ae9 00       		.byte	0
 12019 0aea 07       		.uleb128 0x7
 12020 0aeb 16080000 		.4byte	0x816
 12021 0aef FA0A0000 		.4byte	0xafa
 12022 0af3 08       		.uleb128 0x8
 12023 0af4 0E010000 		.4byte	0x10e
 12024 0af8 02       		.byte	0x2
 12025 0af9 00       		.byte	0
 12026 0afa 10       		.uleb128 0x10
 12027 0afb 790D0000 		.4byte	.LASF152
 12028 0aff 28       		.byte	0x28
 12029 0b00 07       		.byte	0x7
 12030 0b01 F501     		.2byte	0x1f5
 12031 0b03 560B0000 		.4byte	0xb56
 12032 0b07 12       		.uleb128 0x12
 12033 0b08 5B050000 		.4byte	.LASF153
 12034 0b0c 07       		.byte	0x7
 12035 0b0d F601     		.2byte	0x1f6
 12036 0b0f 81000000 		.4byte	0x81
 12037 0b13 00       		.byte	0
 12038 0b14 12       		.uleb128 0x12
 12039 0b15 59030000 		.4byte	.LASF154
 12040 0b19 07       		.byte	0x7
 12041 0b1a F701     		.2byte	0x1f7
 12042 0b1c 560B0000 		.4byte	0xb56
 12043 0b20 02       		.byte	0x2
 12044 0b21 12       		.uleb128 0x12
 12045 0b22 AE0C0000 		.4byte	.LASF155
 12046 0b26 07       		.byte	0x7
 12047 0b27 F801     		.2byte	0x1f8
 12048 0b29 560B0000 		.4byte	0xb56
 12049 0b2d 08       		.byte	0x8
 12050 0b2e 12       		.uleb128 0x12
 12051 0b2f 850D0000 		.4byte	.LASF156
 12052 0b33 07       		.byte	0x7
 12053 0b34 F901     		.2byte	0x1f9
 12054 0b36 560B0000 		.4byte	0xb56
 12055 0b3a 0E       		.byte	0xe
 12056 0b3b 12       		.uleb128 0x12
 12057 0b3c EA080000 		.4byte	.LASF157
 12058 0b40 07       		.byte	0x7
 12059 0b41 FA01     		.2byte	0x1fa
 12060 0b43 660B0000 		.4byte	0xb66
 12061 0b47 14       		.byte	0x14
 12062 0b48 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 268


 12063 0b49 D9010000 		.4byte	.LASF158
 12064 0b4d 07       		.byte	0x7
 12065 0b4e FB01     		.2byte	0x1fb
 12066 0b50 B1000000 		.4byte	0xb1
 12067 0b54 24       		.byte	0x24
 12068 0b55 00       		.byte	0
 12069 0b56 07       		.uleb128 0x7
 12070 0b57 B1000000 		.4byte	0xb1
 12071 0b5b 660B0000 		.4byte	0xb66
 12072 0b5f 08       		.uleb128 0x8
 12073 0b60 0E010000 		.4byte	0x10e
 12074 0b64 02       		.byte	0x2
 12075 0b65 00       		.byte	0
 12076 0b66 07       		.uleb128 0x7
 12077 0b67 D5000000 		.4byte	0xd5
 12078 0b6b 760B0000 		.4byte	0xb76
 12079 0b6f 08       		.uleb128 0x8
 12080 0b70 0E010000 		.4byte	0x10e
 12081 0b74 03       		.byte	0x3
 12082 0b75 00       		.byte	0
 12083 0b76 10       		.uleb128 0x10
 12084 0b77 D6120000 		.4byte	.LASF159
 12085 0b7b 08       		.byte	0x8
 12086 0b7c 07       		.byte	0x7
 12087 0b7d 0202     		.2byte	0x202
 12088 0b7f 9E0B0000 		.4byte	0xb9e
 12089 0b83 12       		.uleb128 0x12
 12090 0b84 3E060000 		.4byte	.LASF160
 12091 0b88 07       		.byte	0x7
 12092 0b89 0302     		.2byte	0x203
 12093 0b8b BD000000 		.4byte	0xbd
 12094 0b8f 00       		.byte	0
 12095 0b90 12       		.uleb128 0x12
 12096 0b91 1F020000 		.4byte	.LASF161
 12097 0b95 07       		.byte	0x7
 12098 0b96 0402     		.2byte	0x204
 12099 0b98 BD000000 		.4byte	0xbd
 12100 0b9c 04       		.byte	0x4
 12101 0b9d 00       		.byte	0
 12102 0b9e 10       		.uleb128 0x10
 12103 0b9f 7C040000 		.4byte	.LASF162
 12104 0ba3 06       		.byte	0x6
 12105 0ba4 07       		.byte	0x7
 12106 0ba5 0B02     		.2byte	0x20b
 12107 0ba7 E00B0000 		.4byte	0xbe0
 12108 0bab 12       		.uleb128 0x12
 12109 0bac 34080000 		.4byte	.LASF163
 12110 0bb0 07       		.byte	0x7
 12111 0bb1 0C02     		.2byte	0x20c
 12112 0bb3 81000000 		.4byte	0x81
 12113 0bb7 00       		.byte	0
 12114 0bb8 12       		.uleb128 0x12
 12115 0bb9 F2120000 		.4byte	.LASF164
 12116 0bbd 07       		.byte	0x7
 12117 0bbe 0D02     		.2byte	0x20d
 12118 0bc0 81000000 		.4byte	0x81
 12119 0bc4 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 269


 12120 0bc5 12       		.uleb128 0x12
 12121 0bc6 DF060000 		.4byte	.LASF165
 12122 0bca 07       		.byte	0x7
 12123 0bcb 0E02     		.2byte	0x20e
 12124 0bcd B1000000 		.4byte	0xb1
 12125 0bd1 02       		.byte	0x2
 12126 0bd2 12       		.uleb128 0x12
 12127 0bd3 AE0A0000 		.4byte	.LASF166
 12128 0bd7 07       		.byte	0x7
 12129 0bd8 0F02     		.2byte	0x20f
 12130 0bda B1000000 		.4byte	0xb1
 12131 0bde 04       		.byte	0x4
 12132 0bdf 00       		.byte	0
 12133 0be0 10       		.uleb128 0x10
 12134 0be1 9E060000 		.4byte	.LASF167
 12135 0be5 04       		.byte	0x4
 12136 0be6 07       		.byte	0x7
 12137 0be7 1202     		.2byte	0x212
 12138 0be9 FB0B0000 		.4byte	0xbfb
 12139 0bed 11       		.uleb128 0x11
 12140 0bee 70776D00 		.ascii	"pwm\000"
 12141 0bf2 07       		.byte	0x7
 12142 0bf3 1302     		.2byte	0x213
 12143 0bf5 BD000000 		.4byte	0xbd
 12144 0bf9 00       		.byte	0
 12145 0bfa 00       		.byte	0
 12146 0bfb 16       		.uleb128 0x16
 12147 0bfc 01       		.byte	0x1
 12148 0bfd 2C000000 		.4byte	0x2c
 12149 0c01 07       		.byte	0x7
 12150 0c02 1702     		.2byte	0x217
 12151 0c04 2D0C0000 		.4byte	0xc2d
 12152 0c08 0A       		.uleb128 0xa
 12153 0c09 5B060000 		.4byte	.LASF168
 12154 0c0d 00       		.byte	0
 12155 0c0e 0A       		.uleb128 0xa
 12156 0c0f 510E0000 		.4byte	.LASF169
 12157 0c13 01       		.byte	0x1
 12158 0c14 0A       		.uleb128 0xa
 12159 0c15 360C0000 		.4byte	.LASF170
 12160 0c19 02       		.byte	0x2
 12161 0c1a 0A       		.uleb128 0xa
 12162 0c1b 82020000 		.4byte	.LASF171
 12163 0c1f 03       		.byte	0x3
 12164 0c20 0A       		.uleb128 0xa
 12165 0c21 E40A0000 		.4byte	.LASF172
 12166 0c25 04       		.byte	0x4
 12167 0c26 0A       		.uleb128 0xa
 12168 0c27 EF0D0000 		.4byte	.LASF173
 12169 0c2b 05       		.byte	0x5
 12170 0c2c 00       		.byte	0
 12171 0c2d 05       		.uleb128 0x5
 12172 0c2e F0050000 		.4byte	.LASF174
 12173 0c32 07       		.byte	0x7
 12174 0c33 1F02     		.2byte	0x21f
 12175 0c35 FB0B0000 		.4byte	0xbfb
 12176 0c39 16       		.uleb128 0x16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 270


 12177 0c3a 01       		.byte	0x1
 12178 0c3b 2C000000 		.4byte	0x2c
 12179 0c3f 07       		.byte	0x7
 12180 0c40 2102     		.2byte	0x221
 12181 0c42 650C0000 		.4byte	0xc65
 12182 0c46 0A       		.uleb128 0xa
 12183 0c47 CC010000 		.4byte	.LASF175
 12184 0c4b 00       		.byte	0
 12185 0c4c 0A       		.uleb128 0xa
 12186 0c4d 58080000 		.4byte	.LASF176
 12187 0c51 01       		.byte	0x1
 12188 0c52 0A       		.uleb128 0xa
 12189 0c53 03090000 		.4byte	.LASF177
 12190 0c57 02       		.byte	0x2
 12191 0c58 0A       		.uleb128 0xa
 12192 0c59 29040000 		.4byte	.LASF178
 12193 0c5d 03       		.byte	0x3
 12194 0c5e 0A       		.uleb128 0xa
 12195 0c5f AF120000 		.4byte	.LASF179
 12196 0c63 04       		.byte	0x4
 12197 0c64 00       		.byte	0
 12198 0c65 05       		.uleb128 0x5
 12199 0c66 3B0F0000 		.4byte	.LASF180
 12200 0c6a 07       		.byte	0x7
 12201 0c6b 2802     		.2byte	0x228
 12202 0c6d 390C0000 		.4byte	0xc39
 12203 0c71 17       		.uleb128 0x17
 12204 0c72 19060000 		.4byte	.LASF181
 12205 0c76 01       		.byte	0x1
 12206 0c77 62       		.byte	0x62
 12207 0c78 00000000 		.4byte	.LFB64
 12208 0c7c 18000000 		.4byte	.LFE64-.LFB64
 12209 0c80 01       		.uleb128 0x1
 12210 0c81 9C       		.byte	0x9c
 12211 0c82 17       		.uleb128 0x17
 12212 0c83 36110000 		.4byte	.LASF182
 12213 0c87 01       		.byte	0x1
 12214 0c88 6D       		.byte	0x6d
 12215 0c89 00000000 		.4byte	.LFB65
 12216 0c8d 20000000 		.4byte	.LFE65-.LFB65
 12217 0c91 01       		.uleb128 0x1
 12218 0c92 9C       		.byte	0x9c
 12219 0c93 18       		.uleb128 0x18
 12220 0c94 620A0000 		.4byte	.LASF214
 12221 0c98 01       		.byte	0x1
 12222 0c99 86       		.byte	0x86
 12223 0c9a 00000000 		.4byte	.LFB66
 12224 0c9e F4010000 		.4byte	.LFE66-.LFB66
 12225 0ca2 01       		.uleb128 0x1
 12226 0ca3 9C       		.byte	0x9c
 12227 0ca4 280D0000 		.4byte	0xd28
 12228 0ca8 19       		.uleb128 0x19
 12229 0ca9 FA000000 		.4byte	.LASF183
 12230 0cad 01       		.byte	0x1
 12231 0cae 8B       		.byte	0x8b
 12232 0caf 81000000 		.4byte	0x81
 12233 0cb3 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 271


 12234 0cb4 03       		.byte	0x3
 12235 0cb5 00000000 		.4byte	state.10534
 12236 0cb9 19       		.uleb128 0x19
 12237 0cba 04070000 		.4byte	.LASF184
 12238 0cbe 01       		.byte	0x1
 12239 0cbf 8E       		.byte	0x8e
 12240 0cc0 81000000 		.4byte	0x81
 12241 0cc4 05       		.uleb128 0x5
 12242 0cc5 03       		.byte	0x3
 12243 0cc6 08000000 		.4byte	data_packet_index.10535
 12244 0cca 19       		.uleb128 0x19
 12245 0ccb B80D0000 		.4byte	.LASF185
 12246 0ccf 01       		.byte	0x1
 12247 0cd0 8F       		.byte	0x8f
 12248 0cd1 81000000 		.4byte	0x81
 12249 0cd5 05       		.uleb128 0x5
 12250 0cd6 03       		.byte	0x3
 12251 0cd7 07000000 		.4byte	data_packet_length.10536
 12252 0cdb 19       		.uleb128 0x19
 12253 0cdc 16070000 		.4byte	.LASF186
 12254 0ce0 01       		.byte	0x1
 12255 0ce1 90       		.byte	0x90
 12256 0ce2 FA020000 		.4byte	0x2fa
 12257 0ce6 05       		.uleb128 0x5
 12258 0ce7 03       		.byte	0x3
 12259 0ce8 0C000000 		.4byte	data_packet_buffer.10537
 12260 0cec 19       		.uleb128 0x19
 12261 0ced A80B0000 		.4byte	.LASF187
 12262 0cf1 01       		.byte	0x1
 12263 0cf2 91       		.byte	0x91
 12264 0cf3 76040000 		.4byte	0x476
 12265 0cf7 05       		.uleb128 0x5
 12266 0cf8 03       		.byte	0x3
 12267 0cf9 04000000 		.4byte	rx_queue.10538
 12268 0cfd 19       		.uleb128 0x19
 12269 0cfe 91010000 		.4byte	.LASF188
 12270 0d02 01       		.byte	0x1
 12271 0d03 94       		.byte	0x94
 12272 0d04 81000000 		.4byte	0x81
 12273 0d08 02       		.uleb128 0x2
 12274 0d09 91       		.byte	0x91
 12275 0d0a 75       		.sleb128 -11
 12276 0d0b 19       		.uleb128 0x19
 12277 0d0c C9060000 		.4byte	.LASF189
 12278 0d10 01       		.byte	0x1
 12279 0d11 95       		.byte	0x95
 12280 0d12 81000000 		.4byte	0x81
 12281 0d16 02       		.uleb128 0x2
 12282 0d17 91       		.byte	0x91
 12283 0d18 77       		.sleb128 -9
 12284 0d19 19       		.uleb128 0x19
 12285 0d1a 11080000 		.4byte	.LASF190
 12286 0d1e 01       		.byte	0x1
 12287 0d1f 96       		.byte	0x96
 12288 0d20 81000000 		.4byte	0x81
 12289 0d24 02       		.uleb128 0x2
 12290 0d25 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 272


 12291 0d26 76       		.sleb128 -10
 12292 0d27 00       		.byte	0
 12293 0d28 1A       		.uleb128 0x1a
 12294 0d29 EA0F0000 		.4byte	.LASF197
 12295 0d2d 01       		.byte	0x1
 12296 0d2e 0C01     		.2byte	0x10c
 12297 0d30 00000000 		.4byte	.LFB67
 12298 0d34 180A0000 		.4byte	.LFE67-.LFB67
 12299 0d38 01       		.uleb128 0x1
 12300 0d39 9C       		.byte	0x9c
 12301 0d3a E30D0000 		.4byte	0xde3
 12302 0d3e 1B       		.uleb128 0x1b
 12303 0d3f 40070000 		.4byte	.LASF191
 12304 0d43 01       		.byte	0x1
 12305 0d44 0E01     		.2byte	0x10e
 12306 0d46 8D000000 		.4byte	0x8d
 12307 0d4a 05       		.uleb128 0x5
 12308 0d4b 03       		.byte	0x3
 12309 0d4c 00000000 		.4byte	counter_calibration.10554
 12310 0d50 1B       		.uleb128 0x1b
 12311 0d51 020D0000 		.4byte	.LASF192
 12312 0d55 01       		.byte	0x1
 12313 0d56 0F01     		.2byte	0x10f
 12314 0d58 8D000000 		.4byte	0x8d
 12315 0d5c 05       		.uleb128 0x5
 12316 0d5d 03       		.byte	0x3
 12317 0d5e 02000000 		.4byte	counter_tension_func.10555
 12318 0d62 1B       		.uleb128 0x1b
 12319 0d63 A8010000 		.4byte	.LASF193
 12320 0d67 01       		.byte	0x1
 12321 0d68 1001     		.2byte	0x110
 12322 0d6a E30D0000 		.4byte	0xde3
 12323 0d6e 03       		.uleb128 0x3
 12324 0d6f 91       		.byte	0x91
 12325 0d70 A46C     		.sleb128 -2524
 12326 0d72 1C       		.uleb128 0x1c
 12327 0d73 6900     		.ascii	"i\000"
 12328 0d75 01       		.byte	0x1
 12329 0d76 1201     		.2byte	0x112
 12330 0d78 81000000 		.4byte	0x81
 12331 0d7c 02       		.uleb128 0x2
 12332 0d7d 91       		.byte	0x91
 12333 0d7e 6F       		.sleb128 -17
 12334 0d7f 1C       		.uleb128 0x1c
 12335 0d80 746D7000 		.ascii	"tmp\000"
 12336 0d84 01       		.byte	0x1
 12337 0d85 1301     		.2byte	0x113
 12338 0d87 BD000000 		.4byte	0xbd
 12339 0d8b 02       		.uleb128 0x2
 12340 0d8c 91       		.byte	0x91
 12341 0d8d 68       		.sleb128 -24
 12342 0d8e 1B       		.uleb128 0x1b
 12343 0d8f E50C0000 		.4byte	.LASF194
 12344 0d93 01       		.byte	0x1
 12345 0d94 1401     		.2byte	0x114
 12346 0d96 81000000 		.4byte	0x81
 12347 0d9a 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 273


 12348 0d9b 91       		.byte	0x91
 12349 0d9c 6D       		.sleb128 -19
 12350 0d9d 1B       		.uleb128 0x1b
 12351 0d9e 1F0A0000 		.4byte	.LASF195
 12352 0da2 01       		.byte	0x1
 12353 0da3 1501     		.2byte	0x115
 12354 0da5 81000000 		.4byte	0x81
 12355 0da9 02       		.uleb128 0x2
 12356 0daa 91       		.byte	0x91
 12357 0dab 6C       		.sleb128 -20
 12358 0dac 1D       		.uleb128 0x1d
 12359 0dad B0010000 		.4byte	.LBB2
 12360 0db1 32010000 		.4byte	.LBE2-.LBB2
 12361 0db5 C70D0000 		.4byte	0xdc7
 12362 0db9 1C       		.uleb128 0x1c
 12363 0dba 6900     		.ascii	"i\000"
 12364 0dbc 01       		.byte	0x1
 12365 0dbd 5901     		.2byte	0x159
 12366 0dbf 81000000 		.4byte	0x81
 12367 0dc3 02       		.uleb128 0x2
 12368 0dc4 91       		.byte	0x91
 12369 0dc5 6E       		.sleb128 -18
 12370 0dc6 00       		.byte	0
 12371 0dc7 1E       		.uleb128 0x1e
 12372 0dc8 F2070000 		.4byte	.LBB3
 12373 0dcc 50000000 		.4byte	.LBE3-.LBB3
 12374 0dd0 1B       		.uleb128 0x1b
 12375 0dd1 ED020000 		.4byte	.LASF196
 12376 0dd5 01       		.byte	0x1
 12377 0dd6 6202     		.2byte	0x262
 12378 0dd8 F40D0000 		.4byte	0xdf4
 12379 0ddc 04       		.uleb128 0x4
 12380 0ddd 91       		.byte	0x91
 12381 0dde 8CF77E   		.sleb128 -17524
 12382 0de1 00       		.byte	0
 12383 0de2 00       		.byte	0
 12384 0de3 07       		.uleb128 0x7
 12385 0de4 E3000000 		.4byte	0xe3
 12386 0de8 F40D0000 		.4byte	0xdf4
 12387 0dec 1F       		.uleb128 0x1f
 12388 0ded 0E010000 		.4byte	0x10e
 12389 0df1 C309     		.2byte	0x9c3
 12390 0df3 00       		.byte	0
 12391 0df4 07       		.uleb128 0x7
 12392 0df5 E3000000 		.4byte	0xe3
 12393 0df9 050E0000 		.4byte	0xe05
 12394 0dfd 1F       		.uleb128 0x1f
 12395 0dfe 0E010000 		.4byte	0x10e
 12396 0e02 973A     		.2byte	0x3a97
 12397 0e04 00       		.byte	0
 12398 0e05 1A       		.uleb128 0x1a
 12399 0e06 FD0F0000 		.4byte	.LASF198
 12400 0e0a 01       		.byte	0x1
 12401 0e0b AF02     		.2byte	0x2af
 12402 0e0d 00000000 		.4byte	.LFB68
 12403 0e11 CC050000 		.4byte	.LFE68-.LFB68
 12404 0e15 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 274


 12405 0e16 9C       		.byte	0x9c
 12406 0e17 BB0E0000 		.4byte	0xebb
 12407 0e1b 20       		.uleb128 0x20
 12408 0e1c C4080000 		.4byte	.LASF199
 12409 0e20 01       		.byte	0x1
 12410 0e21 AF02     		.2byte	0x2af
 12411 0e23 81000000 		.4byte	0x81
 12412 0e27 02       		.uleb128 0x2
 12413 0e28 91       		.byte	0x91
 12414 0e29 5F       		.sleb128 -33
 12415 0e2a 20       		.uleb128 0x20
 12416 0e2b 29070000 		.4byte	.LASF200
 12417 0e2f 01       		.byte	0x1
 12418 0e30 AF02     		.2byte	0x2af
 12419 0e32 BB0E0000 		.4byte	0xebb
 12420 0e36 02       		.uleb128 0x2
 12421 0e37 91       		.byte	0x91
 12422 0e38 58       		.sleb128 -40
 12423 0e39 20       		.uleb128 0x20
 12424 0e3a E8110000 		.4byte	.LASF201
 12425 0e3e 01       		.byte	0x1
 12426 0e3f AF02     		.2byte	0x2af
 12427 0e41 BB0E0000 		.4byte	0xebb
 12428 0e45 02       		.uleb128 0x2
 12429 0e46 91       		.byte	0x91
 12430 0e47 54       		.sleb128 -44
 12431 0e48 1B       		.uleb128 0x1b
 12432 0e49 61050000 		.4byte	.LASF202
 12433 0e4d 01       		.byte	0x1
 12434 0e4e B102     		.2byte	0x2b1
 12435 0e50 BD000000 		.4byte	0xbd
 12436 0e54 02       		.uleb128 0x2
 12437 0e55 91       		.byte	0x91
 12438 0e56 74       		.sleb128 -12
 12439 0e57 1B       		.uleb128 0x1b
 12440 0e58 85040000 		.4byte	.LASF203
 12441 0e5c 01       		.byte	0x1
 12442 0e5d B202     		.2byte	0x2b2
 12443 0e5f BD000000 		.4byte	0xbd
 12444 0e63 02       		.uleb128 0x2
 12445 0e64 91       		.byte	0x91
 12446 0e65 68       		.sleb128 -24
 12447 0e66 1B       		.uleb128 0x1b
 12448 0e67 8F040000 		.4byte	.LASF204
 12449 0e6b 01       		.byte	0x1
 12450 0e6c B202     		.2byte	0x2b2
 12451 0e6e BD000000 		.4byte	0xbd
 12452 0e72 02       		.uleb128 0x2
 12453 0e73 91       		.byte	0x91
 12454 0e74 64       		.sleb128 -28
 12455 0e75 1C       		.uleb128 0x1c
 12456 0e76 4D4F5400 		.ascii	"MOT\000"
 12457 0e7a 01       		.byte	0x1
 12458 0e7b B302     		.2byte	0x2b3
 12459 0e7d C10E0000 		.4byte	0xec1
 12460 0e81 02       		.uleb128 0x2
 12461 0e82 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 275


 12462 0e83 70       		.sleb128 -16
 12463 0e84 1B       		.uleb128 0x1b
 12464 0e85 B3110000 		.4byte	.LASF205
 12465 0e89 01       		.byte	0x1
 12466 0e8a B402     		.2byte	0x2b4
 12467 0e8c 81000000 		.4byte	0x81
 12468 0e90 02       		.uleb128 0x2
 12469 0e91 91       		.byte	0x91
 12470 0e92 6F       		.sleb128 -17
 12471 0e93 1B       		.uleb128 0x1b
 12472 0e94 9C0B0000 		.4byte	.LASF206
 12473 0e98 01       		.byte	0x1
 12474 0e99 B602     		.2byte	0x2b6
 12475 0e9b 32070000 		.4byte	0x732
 12476 0e9f 05       		.uleb128 0x5
 12477 0ea0 03       		.byte	0x3
 12478 0ea1 8C000000 		.4byte	current_emg.10585
 12479 0ea5 21       		.uleb128 0x21
 12480 0ea6 00000000 		.4byte	.Ldebug_ranges0+0
 12481 0eaa 1B       		.uleb128 0x1b
 12482 0eab F0000000 		.4byte	.LASF207
 12483 0eaf 01       		.byte	0x1
 12484 0eb0 DB02     		.2byte	0x2db
 12485 0eb2 BD000000 		.4byte	0xbd
 12486 0eb6 02       		.uleb128 0x2
 12487 0eb7 91       		.byte	0x91
 12488 0eb8 60       		.sleb128 -32
 12489 0eb9 00       		.byte	0
 12490 0eba 00       		.byte	0
 12491 0ebb 0C       		.uleb128 0xc
 12492 0ebc 04       		.byte	0x4
 12493 0ebd A5010000 		.4byte	0x1a5
 12494 0ec1 0C       		.uleb128 0xc
 12495 0ec2 04       		.byte	0x4
 12496 0ec3 86040000 		.4byte	0x486
 12497 0ec7 22       		.uleb128 0x22
 12498 0ec8 F7100000 		.4byte	.LASF208
 12499 0ecc 01       		.byte	0x1
 12500 0ecd 8E03     		.2byte	0x38e
 12501 0ecf 00000000 		.4byte	.LFB69
 12502 0ed3 34030000 		.4byte	.LFE69-.LFB69
 12503 0ed7 01       		.uleb128 0x1
 12504 0ed8 9C       		.byte	0x9c
 12505 0ed9 570F0000 		.4byte	0xf57
 12506 0edd 20       		.uleb128 0x20
 12507 0ede C4080000 		.4byte	.LASF199
 12508 0ee2 01       		.byte	0x1
 12509 0ee3 8E03     		.2byte	0x38e
 12510 0ee5 81000000 		.4byte	0x81
 12511 0ee9 02       		.uleb128 0x2
 12512 0eea 91       		.byte	0x91
 12513 0eeb 67       		.sleb128 -25
 12514 0eec 20       		.uleb128 0x20
 12515 0eed 29070000 		.4byte	.LASF200
 12516 0ef1 01       		.byte	0x1
 12517 0ef2 8E03     		.2byte	0x38e
 12518 0ef4 BB0E0000 		.4byte	0xebb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 276


 12519 0ef8 02       		.uleb128 0x2
 12520 0ef9 91       		.byte	0x91
 12521 0efa 60       		.sleb128 -32
 12522 0efb 20       		.uleb128 0x20
 12523 0efc E8110000 		.4byte	.LASF201
 12524 0f00 01       		.byte	0x1
 12525 0f01 8E03     		.2byte	0x38e
 12526 0f03 BB0E0000 		.4byte	0xebb
 12527 0f07 02       		.uleb128 0x2
 12528 0f08 91       		.byte	0x91
 12529 0f09 5C       		.sleb128 -36
 12530 0f0a 23       		.uleb128 0x23
 12531 0f0b 18000000 		.4byte	.Ldebug_ranges0+0x18
 12532 0f0f 320F0000 		.4byte	0xf32
 12533 0f13 1B       		.uleb128 0x1b
 12534 0f14 F0000000 		.4byte	.LASF207
 12535 0f18 01       		.byte	0x1
 12536 0f19 9503     		.2byte	0x395
 12537 0f1b BD000000 		.4byte	0xbd
 12538 0f1f 02       		.uleb128 0x2
 12539 0f20 91       		.byte	0x91
 12540 0f21 74       		.sleb128 -12
 12541 0f22 1B       		.uleb128 0x1b
 12542 0f23 F7010000 		.4byte	.LASF209
 12543 0f27 01       		.byte	0x1
 12544 0f28 9603     		.2byte	0x396
 12545 0f2a BD000000 		.4byte	0xbd
 12546 0f2e 02       		.uleb128 0x2
 12547 0f2f 91       		.byte	0x91
 12548 0f30 70       		.sleb128 -16
 12549 0f31 00       		.byte	0
 12550 0f32 21       		.uleb128 0x21
 12551 0f33 30000000 		.4byte	.Ldebug_ranges0+0x30
 12552 0f37 1B       		.uleb128 0x1b
 12553 0f38 200E0000 		.4byte	.LASF210
 12554 0f3c 01       		.byte	0x1
 12555 0f3d BB03     		.2byte	0x3bb
 12556 0f3f BD000000 		.4byte	0xbd
 12557 0f43 02       		.uleb128 0x2
 12558 0f44 91       		.byte	0x91
 12559 0f45 6C       		.sleb128 -20
 12560 0f46 1B       		.uleb128 0x1b
 12561 0f47 5A0A0000 		.4byte	.LASF211
 12562 0f4b 01       		.byte	0x1
 12563 0f4c BC03     		.2byte	0x3bc
 12564 0f4e BD000000 		.4byte	0xbd
 12565 0f52 02       		.uleb128 0x2
 12566 0f53 91       		.byte	0x91
 12567 0f54 68       		.sleb128 -24
 12568 0f55 00       		.byte	0
 12569 0f56 00       		.byte	0
 12570 0f57 1A       		.uleb128 0x1a
 12571 0f58 860A0000 		.4byte	.LASF212
 12572 0f5c 01       		.byte	0x1
 12573 0f5d E703     		.2byte	0x3e7
 12574 0f5f 00000000 		.4byte	.LFB70
 12575 0f63 B0010000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 277


 12576 0f67 01       		.uleb128 0x1
 12577 0f68 9C       		.byte	0x9c
 12578 0f69 CB0F0000 		.4byte	0xfcb
 12579 0f6d 20       		.uleb128 0x20
 12580 0f6e C4080000 		.4byte	.LASF199
 12581 0f72 01       		.byte	0x1
 12582 0f73 E703     		.2byte	0x3e7
 12583 0f75 81000000 		.4byte	0x81
 12584 0f79 02       		.uleb128 0x2
 12585 0f7a 91       		.byte	0x91
 12586 0f7b 77       		.sleb128 -9
 12587 0f7c 20       		.uleb128 0x20
 12588 0f7d 29070000 		.4byte	.LASF200
 12589 0f81 01       		.byte	0x1
 12590 0f82 E703     		.2byte	0x3e7
 12591 0f84 BB0E0000 		.4byte	0xebb
 12592 0f88 02       		.uleb128 0x2
 12593 0f89 91       		.byte	0x91
 12594 0f8a 70       		.sleb128 -16
 12595 0f8b 20       		.uleb128 0x20
 12596 0f8c E8110000 		.4byte	.LASF201
 12597 0f90 01       		.byte	0x1
 12598 0f91 E703     		.2byte	0x3e7
 12599 0f93 BB0E0000 		.4byte	0xebb
 12600 0f97 02       		.uleb128 0x2
 12601 0f98 91       		.byte	0x91
 12602 0f99 6C       		.sleb128 -20
 12603 0f9a 20       		.uleb128 0x20
 12604 0f9b 85040000 		.4byte	.LASF203
 12605 0f9f 01       		.byte	0x1
 12606 0fa0 E803     		.2byte	0x3e8
 12607 0fa2 BD000000 		.4byte	0xbd
 12608 0fa6 02       		.uleb128 0x2
 12609 0fa7 91       		.byte	0x91
 12610 0fa8 68       		.sleb128 -24
 12611 0fa9 20       		.uleb128 0x20
 12612 0faa 8F040000 		.4byte	.LASF204
 12613 0fae 01       		.byte	0x1
 12614 0faf E803     		.2byte	0x3e8
 12615 0fb1 BD000000 		.4byte	0xbd
 12616 0fb5 02       		.uleb128 0x2
 12617 0fb6 91       		.byte	0x91
 12618 0fb7 00       		.sleb128 0
 12619 0fb8 1B       		.uleb128 0x1b
 12620 0fb9 220D0000 		.4byte	.LASF213
 12621 0fbd 01       		.byte	0x1
 12622 0fbe EB03     		.2byte	0x3eb
 12623 0fc0 81000000 		.4byte	0x81
 12624 0fc4 05       		.uleb128 0x5
 12625 0fc5 03       		.byte	0x3
 12626 0fc6 8E000000 		.4byte	fsm_state.10622
 12627 0fca 00       		.byte	0
 12628 0fcb 24       		.uleb128 0x24
 12629 0fcc 62060000 		.4byte	.LASF215
 12630 0fd0 01       		.byte	0x1
 12631 0fd1 1D04     		.2byte	0x41d
 12632 0fd3 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 278


 12633 0fd7 0C070000 		.4byte	.LFE71-.LFB71
 12634 0fdb 01       		.uleb128 0x1
 12635 0fdc 9C       		.byte	0x9c
 12636 0fdd 82110000 		.4byte	0x1182
 12637 0fe1 1B       		.uleb128 0x1b
 12638 0fe2 4B010000 		.4byte	.LASF216
 12639 0fe6 01       		.byte	0x1
 12640 0fe7 1F04     		.2byte	0x41f
 12641 0fe9 BD000000 		.4byte	0xbd
 12642 0fed 02       		.uleb128 0x2
 12643 0fee 91       		.byte	0x91
 12644 0fef 74       		.sleb128 -12
 12645 0ff0 1B       		.uleb128 0x1b
 12646 0ff1 A40C0000 		.4byte	.LASF217
 12647 0ff5 01       		.byte	0x1
 12648 0ff6 2004     		.2byte	0x420
 12649 0ff8 BD000000 		.4byte	0xbd
 12650 0ffc 03       		.uleb128 0x3
 12651 0ffd 91       		.byte	0x91
 12652 0ffe B07F     		.sleb128 -80
 12653 1000 1B       		.uleb128 0x1b
 12654 1001 C4100000 		.4byte	.LASF218
 12655 1005 01       		.byte	0x1
 12656 1006 2104     		.2byte	0x421
 12657 1008 BD000000 		.4byte	0xbd
 12658 100c 03       		.uleb128 0x3
 12659 100d 91       		.byte	0x91
 12660 100e AC7F     		.sleb128 -84
 12661 1010 1B       		.uleb128 0x1b
 12662 1011 D30B0000 		.4byte	.LASF219
 12663 1015 01       		.byte	0x1
 12664 1016 2204     		.2byte	0x422
 12665 1018 BD000000 		.4byte	0xbd
 12666 101c 02       		.uleb128 0x2
 12667 101d 91       		.byte	0x91
 12668 101e 70       		.sleb128 -16
 12669 101f 1B       		.uleb128 0x1b
 12670 1020 E50C0000 		.4byte	.LASF194
 12671 1024 01       		.byte	0x1
 12672 1025 2404     		.2byte	0x424
 12673 1027 81000000 		.4byte	0x81
 12674 102b 02       		.uleb128 0x2
 12675 102c 91       		.byte	0x91
 12676 102d 6F       		.sleb128 -17
 12677 102e 1B       		.uleb128 0x1b
 12678 102f 8B030000 		.4byte	.LASF220
 12679 1033 01       		.byte	0x1
 12680 1034 2604     		.2byte	0x426
 12681 1036 C10E0000 		.4byte	0xec1
 12682 103a 02       		.uleb128 0x2
 12683 103b 91       		.byte	0x91
 12684 103c 68       		.sleb128 -24
 12685 103d 1B       		.uleb128 0x1b
 12686 103e FF020000 		.4byte	.LASF221
 12687 1042 01       		.byte	0x1
 12688 1043 2704     		.2byte	0x427
 12689 1045 81000000 		.4byte	0x81
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 279


 12690 1049 02       		.uleb128 0x2
 12691 104a 91       		.byte	0x91
 12692 104b 67       		.sleb128 -25
 12693 104c 1C       		.uleb128 0x1c
 12694 104d 6B5F7000 		.ascii	"k_p\000"
 12695 1051 01       		.byte	0x1
 12696 1052 2904     		.2byte	0x429
 12697 1054 BD000000 		.4byte	0xbd
 12698 1058 02       		.uleb128 0x2
 12699 1059 91       		.byte	0x91
 12700 105a 60       		.sleb128 -32
 12701 105b 1C       		.uleb128 0x1c
 12702 105c 6B5F6900 		.ascii	"k_i\000"
 12703 1060 01       		.byte	0x1
 12704 1061 2A04     		.2byte	0x42a
 12705 1063 BD000000 		.4byte	0xbd
 12706 1067 02       		.uleb128 0x2
 12707 1068 91       		.byte	0x91
 12708 1069 5C       		.sleb128 -36
 12709 106a 1C       		.uleb128 0x1c
 12710 106b 6B5F6400 		.ascii	"k_d\000"
 12711 106f 01       		.byte	0x1
 12712 1070 2B04     		.2byte	0x42b
 12713 1072 BD000000 		.4byte	0xbd
 12714 1076 02       		.uleb128 0x2
 12715 1077 91       		.byte	0x91
 12716 1078 58       		.sleb128 -40
 12717 1079 1B       		.uleb128 0x1b
 12718 107a CB0D0000 		.4byte	.LASF75
 12719 107e 01       		.byte	0x1
 12720 107f 2D04     		.2byte	0x42d
 12721 1081 BD000000 		.4byte	0xbd
 12722 1085 02       		.uleb128 0x2
 12723 1086 91       		.byte	0x91
 12724 1087 54       		.sleb128 -44
 12725 1088 1B       		.uleb128 0x1b
 12726 1089 02060000 		.4byte	.LASF76
 12727 108d 01       		.byte	0x1
 12728 108e 2E04     		.2byte	0x42e
 12729 1090 BD000000 		.4byte	0xbd
 12730 1094 02       		.uleb128 0x2
 12731 1095 91       		.byte	0x91
 12732 1096 50       		.sleb128 -48
 12733 1097 1B       		.uleb128 0x1b
 12734 1098 EA050000 		.4byte	.LASF77
 12735 109c 01       		.byte	0x1
 12736 109d 2F04     		.2byte	0x42f
 12737 109f BD000000 		.4byte	0xbd
 12738 10a3 02       		.uleb128 0x2
 12739 10a4 91       		.byte	0x91
 12740 10a5 4C       		.sleb128 -52
 12741 10a6 1B       		.uleb128 0x1b
 12742 10a7 9D100000 		.4byte	.LASF78
 12743 10ab 01       		.byte	0x1
 12744 10ac 3104     		.2byte	0x431
 12745 10ae BD000000 		.4byte	0xbd
 12746 10b2 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 280


 12747 10b3 91       		.byte	0x91
 12748 10b4 48       		.sleb128 -56
 12749 10b5 1B       		.uleb128 0x1b
 12750 10b6 B2060000 		.4byte	.LASF79
 12751 10ba 01       		.byte	0x1
 12752 10bb 3204     		.2byte	0x432
 12753 10bd BD000000 		.4byte	0xbd
 12754 10c1 02       		.uleb128 0x2
 12755 10c2 91       		.byte	0x91
 12756 10c3 44       		.sleb128 -60
 12757 10c4 1B       		.uleb128 0x1b
 12758 10c5 AC0F0000 		.4byte	.LASF80
 12759 10c9 01       		.byte	0x1
 12760 10ca 3304     		.2byte	0x433
 12761 10cc BD000000 		.4byte	0xbd
 12762 10d0 02       		.uleb128 0x2
 12763 10d1 91       		.byte	0x91
 12764 10d2 40       		.sleb128 -64
 12765 10d3 1B       		.uleb128 0x1b
 12766 10d4 C0060000 		.4byte	.LASF81
 12767 10d8 01       		.byte	0x1
 12768 10d9 3504     		.2byte	0x435
 12769 10db BD000000 		.4byte	0xbd
 12770 10df 03       		.uleb128 0x3
 12771 10e0 91       		.byte	0x91
 12772 10e1 BC7F     		.sleb128 -68
 12773 10e3 1B       		.uleb128 0x1b
 12774 10e4 08080000 		.4byte	.LASF82
 12775 10e8 01       		.byte	0x1
 12776 10e9 3604     		.2byte	0x436
 12777 10eb BD000000 		.4byte	0xbd
 12778 10ef 03       		.uleb128 0x3
 12779 10f0 91       		.byte	0x91
 12780 10f1 B87F     		.sleb128 -72
 12781 10f3 1B       		.uleb128 0x1b
 12782 10f4 E9120000 		.4byte	.LASF83
 12783 10f8 01       		.byte	0x1
 12784 10f9 3704     		.2byte	0x437
 12785 10fb BD000000 		.4byte	0xbd
 12786 10ff 03       		.uleb128 0x3
 12787 1100 91       		.byte	0x91
 12788 1101 B47F     		.sleb128 -76
 12789 1103 1B       		.uleb128 0x1b
 12790 1104 79060000 		.4byte	.LASF222
 12791 1108 01       		.byte	0x1
 12792 1109 3B04     		.2byte	0x43b
 12793 110b BD000000 		.4byte	0xbd
 12794 110f 05       		.uleb128 0x5
 12795 1110 03       		.byte	0x3
 12796 1111 90000000 		.4byte	pos_error_sum.10649
 12797 1115 1B       		.uleb128 0x1b
 12798 1116 CD040000 		.4byte	.LASF223
 12799 111a 01       		.byte	0x1
 12800 111b 3C04     		.2byte	0x43c
 12801 111d BD000000 		.4byte	0xbd
 12802 1121 05       		.uleb128 0x5
 12803 1122 03       		.byte	0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 281


 12804 1123 9C000000 		.4byte	curr_error_sum.10650
 12805 1127 1B       		.uleb128 0x1b
 12806 1128 3E0C0000 		.4byte	.LASF224
 12807 112c 01       		.byte	0x1
 12808 112d 3E04     		.2byte	0x43e
 12809 112f BD000000 		.4byte	0xbd
 12810 1133 05       		.uleb128 0x5
 12811 1134 03       		.byte	0x3
 12812 1135 94000000 		.4byte	prev_pos_err.10651
 12813 1139 1B       		.uleb128 0x1b
 12814 113a AA0D0000 		.4byte	.LASF225
 12815 113e 01       		.byte	0x1
 12816 113f 3F04     		.2byte	0x43f
 12817 1141 BD000000 		.4byte	0xbd
 12818 1145 05       		.uleb128 0x5
 12819 1146 03       		.byte	0x3
 12820 1147 A0000000 		.4byte	prev_curr_err.10652
 12821 114b 1B       		.uleb128 0x1b
 12822 114c 0F100000 		.4byte	.LASF226
 12823 1150 01       		.byte	0x1
 12824 1151 4004     		.2byte	0x440
 12825 1153 BD000000 		.4byte	0xbd
 12826 1157 05       		.uleb128 0x5
 12827 1158 03       		.byte	0x3
 12828 1159 A4000000 		.4byte	prev_pwm.10653
 12829 115d 1B       		.uleb128 0x1b
 12830 115e 08060000 		.4byte	.LASF227
 12831 1162 01       		.byte	0x1
 12832 1163 4204     		.2byte	0x442
 12833 1165 81000000 		.4byte	0x81
 12834 1169 05       		.uleb128 0x5
 12835 116a 03       		.byte	0x3
 12836 116b 98000000 		.4byte	motor_dir.10654
 12837 116f 1B       		.uleb128 0x1b
 12838 1170 E5060000 		.4byte	.LASF228
 12839 1174 01       		.byte	0x1
 12840 1175 4304     		.2byte	0x443
 12841 1177 99000000 		.4byte	0x99
 12842 117b 05       		.uleb128 0x5
 12843 117c 03       		.byte	0x3
 12844 117d A8000000 		.4byte	position_counter.10655
 12845 1181 00       		.byte	0
 12846 1182 1A       		.uleb128 0x1a
 12847 1183 A1050000 		.4byte	.LASF229
 12848 1187 01       		.byte	0x1
 12849 1188 4D05     		.2byte	0x54d
 12850 118a 00000000 		.4byte	.LFB72
 12851 118e 70090000 		.4byte	.LFE72-.LFB72
 12852 1192 01       		.uleb128 0x1
 12853 1193 9C       		.byte	0x9c
 12854 1194 3B130000 		.4byte	0x133b
 12855 1198 25       		.uleb128 0x25
 12856 1199 69647800 		.ascii	"idx\000"
 12857 119d 01       		.byte	0x1
 12858 119e 4D05     		.2byte	0x54d
 12859 11a0 81000000 		.4byte	0x81
 12860 11a4 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 282


 12861 11a5 91       		.byte	0x91
 12862 11a6 A77F     		.sleb128 -89
 12863 11a8 1B       		.uleb128 0x1b
 12864 11a9 4B010000 		.4byte	.LASF216
 12865 11ad 01       		.byte	0x1
 12866 11ae 4F05     		.2byte	0x54f
 12867 11b0 BD000000 		.4byte	0xbd
 12868 11b4 02       		.uleb128 0x2
 12869 11b5 91       		.byte	0x91
 12870 11b6 6C       		.sleb128 -20
 12871 11b7 1B       		.uleb128 0x1b
 12872 11b8 A40C0000 		.4byte	.LASF217
 12873 11bc 01       		.byte	0x1
 12874 11bd 5005     		.2byte	0x550
 12875 11bf BD000000 		.4byte	0xbd
 12876 11c3 03       		.uleb128 0x3
 12877 11c4 91       		.byte	0x91
 12878 11c5 AC7F     		.sleb128 -84
 12879 11c7 1B       		.uleb128 0x1b
 12880 11c8 C4100000 		.4byte	.LASF218
 12881 11cc 01       		.byte	0x1
 12882 11cd 5105     		.2byte	0x551
 12883 11cf BD000000 		.4byte	0xbd
 12884 11d3 03       		.uleb128 0x3
 12885 11d4 91       		.byte	0x91
 12886 11d5 A87F     		.sleb128 -88
 12887 11d7 1B       		.uleb128 0x1b
 12888 11d8 D30B0000 		.4byte	.LASF219
 12889 11dc 01       		.byte	0x1
 12890 11dd 5205     		.2byte	0x552
 12891 11df BD000000 		.4byte	0xbd
 12892 11e3 02       		.uleb128 0x2
 12893 11e4 91       		.byte	0x91
 12894 11e5 68       		.sleb128 -24
 12895 11e6 1C       		.uleb128 0x1c
 12896 11e7 4D4F5400 		.ascii	"MOT\000"
 12897 11eb 01       		.byte	0x1
 12898 11ec 5405     		.2byte	0x554
 12899 11ee C10E0000 		.4byte	0xec1
 12900 11f2 02       		.uleb128 0x2
 12901 11f3 91       		.byte	0x91
 12902 11f4 64       		.sleb128 -28
 12903 11f5 1B       		.uleb128 0x1b
 12904 11f6 B3110000 		.4byte	.LASF205
 12905 11fa 01       		.byte	0x1
 12906 11fb 5505     		.2byte	0x555
 12907 11fd 81000000 		.4byte	0x81
 12908 1201 02       		.uleb128 0x2
 12909 1202 91       		.byte	0x91
 12910 1203 63       		.sleb128 -29
 12911 1204 1C       		.uleb128 0x1c
 12912 1205 6B5F7000 		.ascii	"k_p\000"
 12913 1209 01       		.byte	0x1
 12914 120a 5705     		.2byte	0x557
 12915 120c BD000000 		.4byte	0xbd
 12916 1210 02       		.uleb128 0x2
 12917 1211 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 283


 12918 1212 5C       		.sleb128 -36
 12919 1213 1C       		.uleb128 0x1c
 12920 1214 6B5F6900 		.ascii	"k_i\000"
 12921 1218 01       		.byte	0x1
 12922 1219 5805     		.2byte	0x558
 12923 121b BD000000 		.4byte	0xbd
 12924 121f 02       		.uleb128 0x2
 12925 1220 91       		.byte	0x91
 12926 1221 58       		.sleb128 -40
 12927 1222 1C       		.uleb128 0x1c
 12928 1223 6B5F6400 		.ascii	"k_d\000"
 12929 1227 01       		.byte	0x1
 12930 1228 5905     		.2byte	0x559
 12931 122a BD000000 		.4byte	0xbd
 12932 122e 02       		.uleb128 0x2
 12933 122f 91       		.byte	0x91
 12934 1230 54       		.sleb128 -44
 12935 1231 1B       		.uleb128 0x1b
 12936 1232 CB0D0000 		.4byte	.LASF75
 12937 1236 01       		.byte	0x1
 12938 1237 5B05     		.2byte	0x55b
 12939 1239 BD000000 		.4byte	0xbd
 12940 123d 02       		.uleb128 0x2
 12941 123e 91       		.byte	0x91
 12942 123f 50       		.sleb128 -48
 12943 1240 1B       		.uleb128 0x1b
 12944 1241 02060000 		.4byte	.LASF76
 12945 1245 01       		.byte	0x1
 12946 1246 5C05     		.2byte	0x55c
 12947 1248 BD000000 		.4byte	0xbd
 12948 124c 02       		.uleb128 0x2
 12949 124d 91       		.byte	0x91
 12950 124e 4C       		.sleb128 -52
 12951 124f 1B       		.uleb128 0x1b
 12952 1250 EA050000 		.4byte	.LASF77
 12953 1254 01       		.byte	0x1
 12954 1255 5D05     		.2byte	0x55d
 12955 1257 BD000000 		.4byte	0xbd
 12956 125b 02       		.uleb128 0x2
 12957 125c 91       		.byte	0x91
 12958 125d 48       		.sleb128 -56
 12959 125e 1B       		.uleb128 0x1b
 12960 125f 9D100000 		.4byte	.LASF78
 12961 1263 01       		.byte	0x1
 12962 1264 5F05     		.2byte	0x55f
 12963 1266 BD000000 		.4byte	0xbd
 12964 126a 02       		.uleb128 0x2
 12965 126b 91       		.byte	0x91
 12966 126c 44       		.sleb128 -60
 12967 126d 1B       		.uleb128 0x1b
 12968 126e B2060000 		.4byte	.LASF79
 12969 1272 01       		.byte	0x1
 12970 1273 6005     		.2byte	0x560
 12971 1275 BD000000 		.4byte	0xbd
 12972 1279 02       		.uleb128 0x2
 12973 127a 91       		.byte	0x91
 12974 127b 40       		.sleb128 -64
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 284


 12975 127c 1B       		.uleb128 0x1b
 12976 127d AC0F0000 		.4byte	.LASF80
 12977 1281 01       		.byte	0x1
 12978 1282 6105     		.2byte	0x561
 12979 1284 BD000000 		.4byte	0xbd
 12980 1288 03       		.uleb128 0x3
 12981 1289 91       		.byte	0x91
 12982 128a BC7F     		.sleb128 -68
 12983 128c 1B       		.uleb128 0x1b
 12984 128d C0060000 		.4byte	.LASF81
 12985 1291 01       		.byte	0x1
 12986 1292 6305     		.2byte	0x563
 12987 1294 BD000000 		.4byte	0xbd
 12988 1298 03       		.uleb128 0x3
 12989 1299 91       		.byte	0x91
 12990 129a B87F     		.sleb128 -72
 12991 129c 1B       		.uleb128 0x1b
 12992 129d 08080000 		.4byte	.LASF82
 12993 12a1 01       		.byte	0x1
 12994 12a2 6405     		.2byte	0x564
 12995 12a4 BD000000 		.4byte	0xbd
 12996 12a8 03       		.uleb128 0x3
 12997 12a9 91       		.byte	0x91
 12998 12aa B47F     		.sleb128 -76
 12999 12ac 1B       		.uleb128 0x1b
 13000 12ad E9120000 		.4byte	.LASF83
 13001 12b1 01       		.byte	0x1
 13002 12b2 6505     		.2byte	0x565
 13003 12b4 BD000000 		.4byte	0xbd
 13004 12b8 03       		.uleb128 0x3
 13005 12b9 91       		.byte	0x91
 13006 12ba B07F     		.sleb128 -80
 13007 12bc 1B       		.uleb128 0x1b
 13008 12bd 79060000 		.4byte	.LASF222
 13009 12c1 01       		.byte	0x1
 13010 12c2 6905     		.2byte	0x569
 13011 12c4 98020000 		.4byte	0x298
 13012 12c8 05       		.uleb128 0x5
 13013 12c9 03       		.byte	0x3
 13014 12ca AC000000 		.4byte	pos_error_sum.10682
 13015 12ce 1B       		.uleb128 0x1b
 13016 12cf CD040000 		.4byte	.LASF223
 13017 12d3 01       		.byte	0x1
 13018 12d4 6A05     		.2byte	0x56a
 13019 12d6 98020000 		.4byte	0x298
 13020 12da 05       		.uleb128 0x5
 13021 12db 03       		.byte	0x3
 13022 12dc C0000000 		.4byte	curr_error_sum.10683
 13023 12e0 1B       		.uleb128 0x1b
 13024 12e1 3E0C0000 		.4byte	.LASF224
 13025 12e5 01       		.byte	0x1
 13026 12e6 6C05     		.2byte	0x56c
 13027 12e8 98020000 		.4byte	0x298
 13028 12ec 05       		.uleb128 0x5
 13029 12ed 03       		.byte	0x3
 13030 12ee B4000000 		.4byte	prev_pos_err.10684
 13031 12f2 1B       		.uleb128 0x1b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 285


 13032 12f3 AA0D0000 		.4byte	.LASF225
 13033 12f7 01       		.byte	0x1
 13034 12f8 6D05     		.2byte	0x56d
 13035 12fa 98020000 		.4byte	0x298
 13036 12fe 05       		.uleb128 0x5
 13037 12ff 03       		.byte	0x3
 13038 1300 C8000000 		.4byte	prev_curr_err.10685
 13039 1304 1B       		.uleb128 0x1b
 13040 1305 0F100000 		.4byte	.LASF226
 13041 1309 01       		.byte	0x1
 13042 130a 6E05     		.2byte	0x56e
 13043 130c 98020000 		.4byte	0x298
 13044 1310 05       		.uleb128 0x5
 13045 1311 03       		.byte	0x3
 13046 1312 D0000000 		.4byte	prev_pwm.10686
 13047 1316 1B       		.uleb128 0x1b
 13048 1317 08060000 		.4byte	.LASF227
 13049 131b 01       		.byte	0x1
 13050 131c 7005     		.2byte	0x570
 13051 131e 32070000 		.4byte	0x732
 13052 1322 05       		.uleb128 0x5
 13053 1323 03       		.byte	0x3
 13054 1324 BC000000 		.4byte	motor_dir.10687
 13055 1328 1B       		.uleb128 0x1b
 13056 1329 E5060000 		.4byte	.LASF228
 13057 132d 01       		.byte	0x1
 13058 132e 7105     		.2byte	0x571
 13059 1330 A7030000 		.4byte	0x3a7
 13060 1334 05       		.uleb128 0x5
 13061 1335 03       		.byte	0x3
 13062 1336 D8000000 		.4byte	position_counter.10688
 13063 133a 00       		.byte	0
 13064 133b 1A       		.uleb128 0x1a
 13065 133c A9030000 		.4byte	.LASF230
 13066 1340 01       		.byte	0x1
 13067 1341 CA06     		.2byte	0x6ca
 13068 1343 00000000 		.4byte	.LFB73
 13069 1347 18080000 		.4byte	.LFE73-.LFB73
 13070 134b 01       		.uleb128 0x1
 13071 134c 9C       		.byte	0x9c
 13072 134d C3140000 		.4byte	0x14c3
 13073 1351 20       		.uleb128 0x20
 13074 1352 C6000000 		.4byte	.LASF231
 13075 1356 01       		.byte	0x1
 13076 1357 CA06     		.2byte	0x6ca
 13077 1359 81000000 		.4byte	0x81
 13078 135d 03       		.uleb128 0x3
 13079 135e 91       		.byte	0x91
 13080 135f BF7F     		.sleb128 -65
 13081 1361 20       		.uleb128 0x20
 13082 1362 BF0B0000 		.4byte	.LASF232
 13083 1366 01       		.byte	0x1
 13084 1367 CA06     		.2byte	0x6ca
 13085 1369 81000000 		.4byte	0x81
 13086 136d 03       		.uleb128 0x3
 13087 136e 91       		.byte	0x91
 13088 136f BE7F     		.sleb128 -66
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 286


 13089 1371 1B       		.uleb128 0x1b
 13090 1372 C3070000 		.4byte	.LASF233
 13091 1376 01       		.byte	0x1
 13092 1377 CC06     		.2byte	0x6cc
 13093 1379 81000000 		.4byte	0x81
 13094 137d 02       		.uleb128 0x2
 13095 137e 91       		.byte	0x91
 13096 137f 67       		.sleb128 -25
 13097 1380 1C       		.uleb128 0x1c
 13098 1381 6A6A00   		.ascii	"jj\000"
 13099 1384 01       		.byte	0x1
 13100 1385 CF06     		.2byte	0x6cf
 13101 1387 81000000 		.4byte	0x81
 13102 138b 02       		.uleb128 0x2
 13103 138c 91       		.byte	0x91
 13104 138d 66       		.sleb128 -26
 13105 138e 1B       		.uleb128 0x1b
 13106 138f 73030000 		.4byte	.LASF234
 13107 1393 01       		.byte	0x1
 13108 1394 D106     		.2byte	0x6d1
 13109 1396 C3140000 		.4byte	0x14c3
 13110 139a 02       		.uleb128 0x2
 13111 139b 91       		.byte	0x91
 13112 139c 40       		.sleb128 -64
 13113 139d 1B       		.uleb128 0x1b
 13114 139e 24110000 		.4byte	.LASF235
 13115 13a2 01       		.byte	0x1
 13116 13a3 D206     		.2byte	0x6d2
 13117 13a5 B1000000 		.4byte	0xb1
 13118 13a9 02       		.uleb128 0x2
 13119 13aa 91       		.byte	0x91
 13120 13ab 64       		.sleb128 -28
 13121 13ac 1B       		.uleb128 0x1b
 13122 13ad 950D0000 		.4byte	.LASF236
 13123 13b1 01       		.byte	0x1
 13124 13b2 D306     		.2byte	0x6d3
 13125 13b4 BD000000 		.4byte	0xbd
 13126 13b8 02       		.uleb128 0x2
 13127 13b9 91       		.byte	0x91
 13128 13ba 54       		.sleb128 -44
 13129 13bb 1B       		.uleb128 0x1b
 13130 13bc B30F0000 		.4byte	.LASF237
 13131 13c0 01       		.byte	0x1
 13132 13c1 D406     		.2byte	0x6d4
 13133 13c3 BD000000 		.4byte	0xbd
 13134 13c7 02       		.uleb128 0x2
 13135 13c8 91       		.byte	0x91
 13136 13c9 60       		.sleb128 -32
 13137 13ca 1B       		.uleb128 0x1b
 13138 13cb 16050000 		.4byte	.LASF238
 13139 13cf 01       		.byte	0x1
 13140 13d0 D506     		.2byte	0x6d5
 13141 13d2 BD000000 		.4byte	0xbd
 13142 13d6 02       		.uleb128 0x2
 13143 13d7 91       		.byte	0x91
 13144 13d8 4C       		.sleb128 -52
 13145 13d9 1B       		.uleb128 0x1b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 287


 13146 13da 8E0F0000 		.4byte	.LASF239
 13147 13de 01       		.byte	0x1
 13148 13df D606     		.2byte	0x6d6
 13149 13e1 BD000000 		.4byte	0xbd
 13150 13e5 02       		.uleb128 0x2
 13151 13e6 91       		.byte	0x91
 13152 13e7 50       		.sleb128 -48
 13153 13e8 1B       		.uleb128 0x1b
 13154 13e9 600C0000 		.4byte	.LASF240
 13155 13ed 01       		.byte	0x1
 13156 13ee D706     		.2byte	0x6d7
 13157 13f0 A5000000 		.4byte	0xa5
 13158 13f4 02       		.uleb128 0x2
 13159 13f5 91       		.byte	0x91
 13160 13f6 5F       		.sleb128 -33
 13161 13f7 1B       		.uleb128 0x1b
 13162 13f8 EF0C0000 		.4byte	.LASF241
 13163 13fc 01       		.byte	0x1
 13164 13fd D906     		.2byte	0x6d9
 13165 13ff D3140000 		.4byte	0x14d3
 13166 1403 05       		.uleb128 0x5
 13167 1404 03       		.byte	0x3
 13168 1405 E0000000 		.4byte	last_value_encoder.10711
 13169 1409 1B       		.uleb128 0x1b
 13170 140a 77070000 		.4byte	.LASF242
 13171 140e 01       		.byte	0x1
 13172 140f DA06     		.2byte	0x6da
 13173 1411 D3140000 		.4byte	0x14d3
 13174 1415 05       		.uleb128 0x5
 13175 1416 03       		.byte	0x3
 13176 1417 F8000000 		.4byte	comp_value_encoder.10712
 13177 141b 1B       		.uleb128 0x1b
 13178 141c 23040000 		.4byte	.LASF243
 13179 1420 01       		.byte	0x1
 13180 1421 DB06     		.2byte	0x6db
 13181 1423 E9140000 		.4byte	0x14e9
 13182 1427 05       		.uleb128 0x5
 13183 1428 03       		.byte	0x3
 13184 1429 10010000 		.4byte	error.10713
 13185 142d 1B       		.uleb128 0x1b
 13186 142e 6C0F0000 		.4byte	.LASF244
 13187 1432 01       		.byte	0x1
 13188 1433 DD06     		.2byte	0x6dd
 13189 1435 32070000 		.4byte	0x732
 13190 1439 05       		.uleb128 0x5
 13191 143a 03       		.byte	0x3
 13192 143b 04000000 		.4byte	only_first_time.10714
 13193 143f 1B       		.uleb128 0x1b
 13194 1440 2E030000 		.4byte	.LASF245
 13195 1444 01       		.byte	0x1
 13196 1445 DE06     		.2byte	0x6de
 13197 1447 32070000 		.4byte	0x732
 13198 144b 05       		.uleb128 0x5
 13199 144c 03       		.byte	0x3
 13200 144d 64010000 		.4byte	safe_startup_motor_activation.10715
 13201 1451 1B       		.uleb128 0x1b
 13202 1452 98000000 		.4byte	.LASF246
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 288


 13203 1456 01       		.byte	0x1
 13204 1457 DF06     		.2byte	0x6df
 13205 1459 32070000 		.4byte	0x732
 13206 145d 05       		.uleb128 0x5
 13207 145e 03       		.byte	0x3
 13208 145f 60010000 		.4byte	one_time_execute.10716
 13209 1463 1B       		.uleb128 0x1b
 13210 1464 C70A0000 		.4byte	.LASF247
 13211 1468 01       		.byte	0x1
 13212 1469 E006     		.2byte	0x6e0
 13213 146b A7030000 		.4byte	0x3a7
 13214 146f 05       		.uleb128 0x5
 13215 1470 03       		.byte	0x3
 13216 1471 68010000 		.4byte	count_startup_motor.10717
 13217 1475 1B       		.uleb128 0x1b
 13218 1476 E8090000 		.4byte	.LASF248
 13219 147a 01       		.byte	0x1
 13220 147b E206     		.2byte	0x6e2
 13221 147d D3140000 		.4byte	0x14d3
 13222 1481 05       		.uleb128 0x5
 13223 1482 03       		.byte	0x3
 13224 1483 18010000 		.4byte	v_value.10718
 13225 1487 1B       		.uleb128 0x1b
 13226 1488 E0120000 		.4byte	.LASF249
 13227 148c 01       		.byte	0x1
 13228 148d E306     		.2byte	0x6e3
 13229 148f D3140000 		.4byte	0x14d3
 13230 1493 05       		.uleb128 0x5
 13231 1494 03       		.byte	0x3
 13232 1495 30010000 		.4byte	vv_value.10719
 13233 1499 1B       		.uleb128 0x1b
 13234 149a 99010000 		.4byte	.LASF250
 13235 149e 01       		.byte	0x1
 13236 149f E406     		.2byte	0x6e4
 13237 14a1 D3140000 		.4byte	0x14d3
 13238 14a5 05       		.uleb128 0x5
 13239 14a6 03       		.byte	0x3
 13240 14a7 48010000 		.4byte	vvv_value.10720
 13241 14ab 1E       		.uleb128 0x1e
 13242 14ac 98000000 		.4byte	.LBB10
 13243 14b0 6A000000 		.4byte	.LBE10-.LBB10
 13244 14b4 1C       		.uleb128 0x1c
 13245 14b5 6A00     		.ascii	"j\000"
 13246 14b7 01       		.byte	0x1
 13247 14b8 F406     		.2byte	0x6f4
 13248 14ba 68000000 		.4byte	0x68
 13249 14be 02       		.uleb128 0x2
 13250 14bf 91       		.byte	0x91
 13251 14c0 58       		.sleb128 -40
 13252 14c1 00       		.byte	0
 13253 14c2 00       		.byte	0
 13254 14c3 07       		.uleb128 0x7
 13255 14c4 99000000 		.4byte	0x99
 13256 14c8 D3140000 		.4byte	0x14d3
 13257 14cc 08       		.uleb128 0x8
 13258 14cd 0E010000 		.4byte	0x10e
 13259 14d1 02       		.byte	0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 289


 13260 14d2 00       		.byte	0
 13261 14d3 07       		.uleb128 0x7
 13262 14d4 BD000000 		.4byte	0xbd
 13263 14d8 E9140000 		.4byte	0x14e9
 13264 14dc 08       		.uleb128 0x8
 13265 14dd 0E010000 		.4byte	0x10e
 13266 14e1 01       		.byte	0x1
 13267 14e2 08       		.uleb128 0x8
 13268 14e3 0E010000 		.4byte	0x10e
 13269 14e7 02       		.byte	0x2
 13270 14e8 00       		.byte	0
 13271 14e9 07       		.uleb128 0x7
 13272 14ea 81000000 		.4byte	0x81
 13273 14ee FF140000 		.4byte	0x14ff
 13274 14f2 08       		.uleb128 0x8
 13275 14f3 0E010000 		.4byte	0x10e
 13276 14f7 01       		.byte	0x1
 13277 14f8 08       		.uleb128 0x8
 13278 14f9 0E010000 		.4byte	0x10e
 13279 14fd 02       		.byte	0x2
 13280 14fe 00       		.byte	0
 13281 14ff 24       		.uleb128 0x24
 13282 1500 690E0000 		.4byte	.LASF251
 13283 1504 01       		.byte	0x1
 13284 1505 A707     		.2byte	0x7a7
 13285 1507 00000000 		.4byte	.LFB74
 13286 150b 70120000 		.4byte	.LFE74-.LFB74
 13287 150f 01       		.uleb128 0x1
 13288 1510 9C       		.byte	0x9c
 13289 1511 EB150000 		.4byte	0x15eb
 13290 1515 1B       		.uleb128 0x1b
 13291 1516 090E0000 		.4byte	.LASF252
 13292 151a 01       		.byte	0x1
 13293 151b BB07     		.2byte	0x7bb
 13294 151d BD000000 		.4byte	0xbd
 13295 1521 02       		.uleb128 0x2
 13296 1522 91       		.byte	0x91
 13297 1523 64       		.sleb128 -28
 13298 1524 1B       		.uleb128 0x1b
 13299 1525 500F0000 		.4byte	.LASF253
 13300 1529 01       		.byte	0x1
 13301 152a BD07     		.2byte	0x7bd
 13302 152c 8D000000 		.4byte	0x8d
 13303 1530 05       		.uleb128 0x5
 13304 1531 03       		.byte	0x3
 13305 1532 78010000 		.4byte	emg_counter_1.10737
 13306 1536 1B       		.uleb128 0x1b
 13307 1537 5E0F0000 		.4byte	.LASF254
 13308 153b 01       		.byte	0x1
 13309 153c BE07     		.2byte	0x7be
 13310 153e 8D000000 		.4byte	0x8d
 13311 1542 05       		.uleb128 0x5
 13312 1543 03       		.byte	0x3
 13313 1544 7A010000 		.4byte	emg_counter_2.10738
 13314 1548 1B       		.uleb128 0x1b
 13315 1549 5D020000 		.4byte	.LASF255
 13316 154d 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 290


 13317 154e BF07     		.2byte	0x7bf
 13318 1550 8D000000 		.4byte	0x8d
 13319 1554 05       		.uleb128 0x5
 13320 1555 03       		.byte	0x3
 13321 1556 80010000 		.4byte	UD_counter.10739
 13322 155a 1B       		.uleb128 0x1b
 13323 155b 33040000 		.4byte	.LASF256
 13324 155f 01       		.byte	0x1
 13325 1560 C007     		.2byte	0x7c0
 13326 1562 8D000000 		.4byte	0x8d
 13327 1566 05       		.uleb128 0x5
 13328 1567 03       		.byte	0x3
 13329 1568 88010000 		.4byte	LR_counter.10740
 13330 156c 1B       		.uleb128 0x1b
 13331 156d B10B0000 		.4byte	.LASF257
 13332 1571 01       		.byte	0x1
 13333 1572 C107     		.2byte	0x7c1
 13334 1574 BD000000 		.4byte	0xbd
 13335 1578 05       		.uleb128 0x5
 13336 1579 03       		.byte	0x3
 13337 157a 7C010000 		.4byte	UD_mean_value.10741
 13338 157e 1B       		.uleb128 0x1b
 13339 157f 39120000 		.4byte	.LASF258
 13340 1583 01       		.byte	0x1
 13341 1584 C207     		.2byte	0x7c2
 13342 1586 BD000000 		.4byte	0xbd
 13343 158a 05       		.uleb128 0x5
 13344 158b 03       		.byte	0x3
 13345 158c 84010000 		.4byte	LR_mean_value.10742
 13346 1590 1B       		.uleb128 0x1b
 13347 1591 B6020000 		.4byte	.LASF259
 13348 1595 01       		.byte	0x1
 13349 1596 C307     		.2byte	0x7c3
 13350 1598 81000000 		.4byte	0x81
 13351 159c 05       		.uleb128 0x5
 13352 159d 03       		.byte	0x3
 13353 159e 0C000000 		.4byte	first_tension_valid.10743
 13354 15a2 1B       		.uleb128 0x1b
 13355 15a3 73050000 		.4byte	.LASF260
 13356 15a7 01       		.byte	0x1
 13357 15a8 C407     		.2byte	0x7c4
 13358 15aa BD000000 		.4byte	0xbd
 13359 15ae 05       		.uleb128 0x5
 13360 15af 03       		.byte	0x3
 13361 15b0 08000000 		.4byte	detect_power_cycle_prev.10744
 13362 15b4 1B       		.uleb128 0x1b
 13363 15b5 F80A0000 		.4byte	.LASF261
 13364 15b9 01       		.byte	0x1
 13365 15ba C507     		.2byte	0x7c5
 13366 15bc 8D000000 		.4byte	0x8d
 13367 15c0 05       		.uleb128 0x5
 13368 15c1 03       		.byte	0x3
 13369 15c2 70010000 		.4byte	count.10745
 13370 15c6 1B       		.uleb128 0x1b
 13371 15c7 89010000 		.4byte	.LASF262
 13372 15cb 01       		.byte	0x1
 13373 15cc C607     		.2byte	0x7c6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 291


 13374 15ce 99000000 		.4byte	0x99
 13375 15d2 05       		.uleb128 0x5
 13376 15d3 03       		.byte	0x3
 13377 15d4 74010000 		.4byte	v_count.10746
 13378 15d8 1C       		.uleb128 0x1c
 13379 15d9 69647800 		.ascii	"idx\000"
 13380 15dd 01       		.byte	0x1
 13381 15de C707     		.2byte	0x7c7
 13382 15e0 81000000 		.4byte	0x81
 13383 15e4 05       		.uleb128 0x5
 13384 15e5 03       		.byte	0x3
 13385 15e6 72010000 		.4byte	idx.10747
 13386 15ea 00       		.byte	0
 13387 15eb 26       		.uleb128 0x26
 13388 15ec 340E0000 		.4byte	.LASF263
 13389 15f0 01       		.byte	0x1
 13390 15f1 2A0A     		.2byte	0xa2a
 13391 15f3 00000000 		.4byte	.LFB75
 13392 15f7 0C010000 		.4byte	.LFE75-.LFB75
 13393 15fb 01       		.uleb128 0x1
 13394 15fc 9C       		.byte	0x9c
 13395 15fd 32160000 		.4byte	0x1632
 13396 1601 1E       		.uleb128 0x1e
 13397 1602 06000000 		.4byte	.LBB11
 13398 1606 E6000000 		.4byte	.LBE11-.LBB11
 13399 160a 1C       		.uleb128 0x1c
 13400 160b 6900     		.ascii	"i\000"
 13401 160d 01       		.byte	0x1
 13402 160e 2C0A     		.2byte	0xa2c
 13403 1610 81000000 		.4byte	0x81
 13404 1614 02       		.uleb128 0x2
 13405 1615 91       		.byte	0x91
 13406 1616 77       		.sleb128 -9
 13407 1617 1E       		.uleb128 0x1e
 13408 1618 26000000 		.4byte	.LBB12
 13409 161c BA000000 		.4byte	.LBE12-.LBB12
 13410 1620 1B       		.uleb128 0x1b
 13411 1621 FE080000 		.4byte	.LASF40
 13412 1625 01       		.byte	0x1
 13413 1626 2E0A     		.2byte	0xa2e
 13414 1628 BD000000 		.4byte	0xbd
 13415 162c 02       		.uleb128 0x2
 13416 162d 91       		.byte	0x91
 13417 162e 70       		.sleb128 -16
 13418 162f 00       		.byte	0
 13419 1630 00       		.byte	0
 13420 1631 00       		.byte	0
 13421 1632 22       		.uleb128 0x22
 13422 1633 4E040000 		.4byte	.LASF264
 13423 1637 01       		.byte	0x1
 13424 1638 4C0A     		.2byte	0xa4c
 13425 163a 00000000 		.4byte	.LFB76
 13426 163e A8000000 		.4byte	.LFE76-.LFB76
 13427 1642 01       		.uleb128 0x1
 13428 1643 9C       		.byte	0x9c
 13429 1644 85160000 		.4byte	0x1685
 13430 1648 20       		.uleb128 0x20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 292


 13431 1649 690C0000 		.4byte	.LASF265
 13432 164d 01       		.byte	0x1
 13433 164e 4C0A     		.2byte	0xa4c
 13434 1650 81000000 		.4byte	0x81
 13435 1654 02       		.uleb128 0x2
 13436 1655 91       		.byte	0x91
 13437 1656 6F       		.sleb128 -17
 13438 1657 1B       		.uleb128 0x1b
 13439 1658 C3070000 		.4byte	.LASF233
 13440 165c 01       		.byte	0x1
 13441 165d 4E0A     		.2byte	0xa4e
 13442 165f 81000000 		.4byte	0x81
 13443 1663 02       		.uleb128 0x2
 13444 1664 91       		.byte	0x91
 13445 1665 73       		.sleb128 -13
 13446 1666 1B       		.uleb128 0x1b
 13447 1667 D90C0000 		.4byte	.LASF266
 13448 166b 01       		.byte	0x1
 13449 166c 4F0A     		.2byte	0xa4f
 13450 166e 8D000000 		.4byte	0x8d
 13451 1672 02       		.uleb128 0x2
 13452 1673 91       		.byte	0x91
 13453 1674 76       		.sleb128 -10
 13454 1675 1B       		.uleb128 0x1b
 13455 1676 A8080000 		.4byte	.LASF267
 13456 167a 01       		.byte	0x1
 13457 167b 500A     		.2byte	0xa50
 13458 167d 8D000000 		.4byte	0x8d
 13459 1681 02       		.uleb128 0x2
 13460 1682 91       		.byte	0x91
 13461 1683 74       		.sleb128 -12
 13462 1684 00       		.byte	0
 13463 1685 24       		.uleb128 0x24
 13464 1686 25090000 		.4byte	.LASF268
 13465 168a 01       		.byte	0x1
 13466 168b 640A     		.2byte	0xa64
 13467 168d 00000000 		.4byte	.LFB77
 13468 1691 58060000 		.4byte	.LFE77-.LFB77
 13469 1695 01       		.uleb128 0x1
 13470 1696 9C       		.byte	0x9c
 13471 1697 1D180000 		.4byte	0x181d
 13472 169b 1B       		.uleb128 0x1b
 13473 169c 26000000 		.4byte	.LASF269
 13474 16a0 01       		.byte	0x1
 13475 16a1 650A     		.2byte	0xa65
 13476 16a3 81000000 		.4byte	0x81
 13477 16a7 05       		.uleb128 0x5
 13478 16a8 03       		.byte	0x3
 13479 16a9 8A010000 		.4byte	pos_cycle_status.10818
 13480 16ad 1B       		.uleb128 0x1b
 13481 16ae 9B0E0000 		.4byte	.LASF270
 13482 16b2 01       		.byte	0x1
 13483 16b3 660A     		.2byte	0xa66
 13484 16b5 32070000 		.4byte	0x732
 13485 16b9 05       		.uleb128 0x5
 13486 16ba 03       		.byte	0x3
 13487 16bb 94010000 		.4byte	emg_cycle_status.10819
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 293


 13488 16bf 1B       		.uleb128 0x1b
 13489 16c0 640D0000 		.4byte	.LASF271
 13490 16c4 01       		.byte	0x1
 13491 16c5 670A     		.2byte	0xa67
 13492 16c7 32070000 		.4byte	0x732
 13493 16cb 05       		.uleb128 0x5
 13494 16cc 03       		.byte	0x3
 13495 16cd 98010000 		.4byte	motion_status.10820
 13496 16d1 1B       		.uleb128 0x1b
 13497 16d2 0A0B0000 		.4byte	.LASF272
 13498 16d6 01       		.byte	0x1
 13499 16d7 680A     		.2byte	0xa68
 13500 16d9 32070000 		.4byte	0x732
 13501 16dd 05       		.uleb128 0x5
 13502 16de 03       		.byte	0x3
 13503 16df A4010000 		.4byte	emg_excess_status.10821
 13504 16e3 1B       		.uleb128 0x1b
 13505 16e4 E5100000 		.4byte	.LASF273
 13506 16e8 01       		.byte	0x1
 13507 16e9 690A     		.2byte	0xa69
 13508 16eb 81000000 		.4byte	0x81
 13509 16ef 05       		.uleb128 0x5
 13510 16f0 03       		.byte	0x3
 13511 16f1 B8010000 		.4byte	rest_cycle_status.10822
 13512 16f5 1B       		.uleb128 0x1b
 13513 16f6 17030000 		.4byte	.LASF274
 13514 16fa 01       		.byte	0x1
 13515 16fb 6A0A     		.2byte	0xa6a
 13516 16fd BD000000 		.4byte	0xbd
 13517 1701 05       		.uleb128 0x5
 13518 1702 03       		.byte	0x3
 13519 1703 10000000 		.4byte	bin_threshold.10823
 13520 1707 1B       		.uleb128 0x1b
 13521 1708 7A100000 		.4byte	.LASF275
 13522 170c 01       		.byte	0x1
 13523 170d 6B0A     		.2byte	0xa6b
 13524 170f BD000000 		.4byte	0xbd
 13525 1713 05       		.uleb128 0x5
 13526 1714 03       		.byte	0x3
 13527 1715 14000000 		.4byte	exc_act_thr.10824
 13528 1719 1B       		.uleb128 0x1b
 13529 171a E4010000 		.4byte	.LASF276
 13530 171e 01       		.byte	0x1
 13531 171f 6C0A     		.2byte	0xa6c
 13532 1721 BD000000 		.4byte	0xbd
 13533 1725 05       		.uleb128 0x5
 13534 1726 03       		.byte	0x3
 13535 1727 8C010000 		.4byte	thr_pos.10825
 13536 172b 1B       		.uleb128 0x1b
 13537 172c 360B0000 		.4byte	.LASF277
 13538 1730 01       		.byte	0x1
 13539 1731 6D0A     		.2byte	0xa6d
 13540 1733 BD000000 		.4byte	0xbd
 13541 1737 05       		.uleb128 0x5
 13542 1738 03       		.byte	0x3
 13543 1739 90010000 		.4byte	max_pos.10826
 13544 173d 1C       		.uleb128 0x1c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 294


 13545 173e 6900     		.ascii	"i\000"
 13546 1740 01       		.byte	0x1
 13547 1741 6E0A     		.2byte	0xa6e
 13548 1743 81000000 		.4byte	0x81
 13549 1747 02       		.uleb128 0x2
 13550 1748 91       		.byte	0x91
 13551 1749 6F       		.sleb128 -17
 13552 174a 1B       		.uleb128 0x1b
 13553 174b 12060000 		.4byte	.LASF278
 13554 174f 01       		.byte	0x1
 13555 1750 6E0A     		.2byte	0xa6e
 13556 1752 81000000 		.4byte	0x81
 13557 1756 02       		.uleb128 0x2
 13558 1757 91       		.byte	0x91
 13559 1758 5B       		.sleb128 -37
 13560 1759 1B       		.uleb128 0x1b
 13561 175a 16010000 		.4byte	.LASF279
 13562 175e 01       		.byte	0x1
 13563 175f 6E0A     		.2byte	0xa6e
 13564 1761 81000000 		.4byte	0x81
 13565 1765 02       		.uleb128 0x2
 13566 1766 91       		.byte	0x91
 13567 1767 5A       		.sleb128 -38
 13568 1768 1B       		.uleb128 0x1b
 13569 1769 FD0D0000 		.4byte	.LASF280
 13570 176d 01       		.byte	0x1
 13571 176e 6E0A     		.2byte	0xa6e
 13572 1770 81000000 		.4byte	0x81
 13573 1774 02       		.uleb128 0x2
 13574 1775 91       		.byte	0x91
 13575 1776 59       		.sleb128 -39
 13576 1777 1B       		.uleb128 0x1b
 13577 1778 030E0000 		.4byte	.LASF281
 13578 177c 01       		.byte	0x1
 13579 177d 6E0A     		.2byte	0xa6e
 13580 177f 81000000 		.4byte	0x81
 13581 1783 02       		.uleb128 0x2
 13582 1784 91       		.byte	0x91
 13583 1785 58       		.sleb128 -40
 13584 1786 1B       		.uleb128 0x1b
 13585 1787 480E0000 		.4byte	.LASF282
 13586 178b 01       		.byte	0x1
 13587 178c 6F0A     		.2byte	0xa6f
 13588 178e BD000000 		.4byte	0xbd
 13589 1792 02       		.uleb128 0x2
 13590 1793 91       		.byte	0x91
 13591 1794 64       		.sleb128 -28
 13592 1795 1B       		.uleb128 0x1b
 13593 1796 2D050000 		.4byte	.LASF283
 13594 179a 01       		.byte	0x1
 13595 179b 6F0A     		.2byte	0xa6f
 13596 179d BD000000 		.4byte	0xbd
 13597 17a1 02       		.uleb128 0x2
 13598 17a2 91       		.byte	0x91
 13599 17a3 60       		.sleb128 -32
 13600 17a4 1B       		.uleb128 0x1b
 13601 17a5 990F0000 		.4byte	.LASF284
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 295


 13602 17a9 01       		.byte	0x1
 13603 17aa 6F0A     		.2byte	0xa6f
 13604 17ac BD000000 		.4byte	0xbd
 13605 17b0 02       		.uleb128 0x2
 13606 17b1 91       		.byte	0x91
 13607 17b2 68       		.sleb128 -24
 13608 17b3 1B       		.uleb128 0x1b
 13609 17b4 C8040000 		.4byte	.LASF285
 13610 17b8 01       		.byte	0x1
 13611 17b9 700A     		.2byte	0xa70
 13612 17bb BD000000 		.4byte	0xbd
 13613 17bf 02       		.uleb128 0x2
 13614 17c0 91       		.byte	0x91
 13615 17c1 5C       		.sleb128 -36
 13616 17c2 1B       		.uleb128 0x1b
 13617 17c3 5B070000 		.4byte	.LASF286
 13618 17c7 01       		.byte	0x1
 13619 17c8 710A     		.2byte	0xa71
 13620 17ca 99000000 		.4byte	0x99
 13621 17ce 05       		.uleb128 0x5
 13622 17cf 03       		.byte	0x3
 13623 17d0 BC010000 		.4byte	timer_value_s.10836
 13624 17d4 1B       		.uleb128 0x1b
 13625 17d5 F6060000 		.4byte	.LASF287
 13626 17d9 01       		.byte	0x1
 13627 17da 710A     		.2byte	0xa71
 13628 17dc 99000000 		.4byte	0x99
 13629 17e0 05       		.uleb128 0x5
 13630 17e1 03       		.byte	0x3
 13631 17e2 C0010000 		.4byte	timer_value_e.10837
 13632 17e6 1B       		.uleb128 0x1b
 13633 17e7 55100000 		.4byte	.LASF288
 13634 17eb 01       		.byte	0x1
 13635 17ec 720A     		.2byte	0xa72
 13636 17ee A7030000 		.4byte	0x3a7
 13637 17f2 05       		.uleb128 0x5
 13638 17f3 03       		.byte	0x3
 13639 17f4 A8010000 		.4byte	timer_exc_s.10838
 13640 17f8 1B       		.uleb128 0x1b
 13641 17f9 30100000 		.4byte	.LASF289
 13642 17fd 01       		.byte	0x1
 13643 17fe 720A     		.2byte	0xa72
 13644 1800 A7030000 		.4byte	0x3a7
 13645 1804 05       		.uleb128 0x5
 13646 1805 03       		.byte	0x3
 13647 1806 B0010000 		.4byte	timer_exc_e.10839
 13648 180a 1B       		.uleb128 0x1b
 13649 180b 8A070000 		.4byte	.LASF290
 13650 180f 01       		.byte	0x1
 13651 1810 730A     		.2byte	0xa73
 13652 1812 98020000 		.4byte	0x298
 13653 1816 05       		.uleb128 0x5
 13654 1817 03       		.byte	0x3
 13655 1818 9C010000 		.4byte	start_emg_pos.10840
 13656 181c 00       		.byte	0
 13657 181d 24       		.uleb128 0x24
 13658 181e E70B0000 		.4byte	.LASF291
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 296


 13659 1822 01       		.byte	0x1
 13660 1823 1F0B     		.2byte	0xb1f
 13661 1825 00000000 		.4byte	.LFB78
 13662 1829 08010000 		.4byte	.LFE78-.LFB78
 13663 182d 01       		.uleb128 0x1
 13664 182e 9C       		.byte	0x9c
 13665 182f A3180000 		.4byte	0x18a3
 13666 1833 1B       		.uleb128 0x1b
 13667 1834 BD100000 		.4byte	.LASF292
 13668 1838 01       		.byte	0x1
 13669 1839 210B     		.2byte	0xb21
 13670 183b EA000000 		.4byte	0xea
 13671 183f 02       		.uleb128 0x2
 13672 1840 91       		.byte	0x91
 13673 1841 64       		.sleb128 -28
 13674 1842 1B       		.uleb128 0x1b
 13675 1843 290E0000 		.4byte	.LASF293
 13676 1847 01       		.byte	0x1
 13677 1848 220B     		.2byte	0xb22
 13678 184a 81000000 		.4byte	0x81
 13679 184e 05       		.uleb128 0x5
 13680 184f 03       		.byte	0x3
 13681 1850 C8010000 		.4byte	row_number.10876
 13682 1854 1B       		.uleb128 0x1b
 13683 1855 00050000 		.4byte	.LASF294
 13684 1859 01       		.byte	0x1
 13685 185a 230B     		.2byte	0xb23
 13686 185c 81000000 		.4byte	0x81
 13687 1860 02       		.uleb128 0x2
 13688 1861 91       		.byte	0x91
 13689 1862 77       		.sleb128 -9
 13690 1863 1B       		.uleb128 0x1b
 13691 1864 EB0E0000 		.4byte	.LASF295
 13692 1868 01       		.byte	0x1
 13693 1869 240B     		.2byte	0xb24
 13694 186b A3180000 		.4byte	0x18a3
 13695 186f 02       		.uleb128 0x2
 13696 1870 91       		.byte	0x91
 13697 1871 70       		.sleb128 -16
 13698 1872 1B       		.uleb128 0x1b
 13699 1873 1E010000 		.4byte	.LASF296
 13700 1877 01       		.byte	0x1
 13701 1878 250B     		.2byte	0xb25
 13702 187a A3180000 		.4byte	0x18a3
 13703 187e 02       		.uleb128 0x2
 13704 187f 91       		.byte	0x91
 13705 1880 6C       		.sleb128 -20
 13706 1881 1B       		.uleb128 0x1b
 13707 1882 51120000 		.4byte	.LASF297
 13708 1886 01       		.byte	0x1
 13709 1887 260B     		.2byte	0xb26
 13710 1889 81000000 		.4byte	0x81
 13711 188d 02       		.uleb128 0x2
 13712 188e 91       		.byte	0x91
 13713 188f 6B       		.sleb128 -21
 13714 1890 1B       		.uleb128 0x1b
 13715 1891 1C0B0000 		.4byte	.LASF298
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 297


 13716 1895 01       		.byte	0x1
 13717 1896 270B     		.2byte	0xb27
 13718 1898 A3180000 		.4byte	0x18a3
 13719 189c 05       		.uleb128 0x5
 13720 189d 03       		.byte	0x3
 13721 189e C4010000 		.4byte	m_addr.10881
 13722 18a2 00       		.byte	0
 13723 18a3 0C       		.uleb128 0xc
 13724 18a4 04       		.byte	0x4
 13725 18a5 81000000 		.4byte	0x81
 13726 18a9 07       		.uleb128 0x7
 13727 18aa B9180000 		.4byte	0x18b9
 13728 18ae B9180000 		.4byte	0x18b9
 13729 18b2 08       		.uleb128 0x8
 13730 18b3 0E010000 		.4byte	0x10e
 13731 18b7 1C       		.byte	0x1c
 13732 18b8 00       		.byte	0
 13733 18b9 27       		.uleb128 0x27
 13734 18ba 81000000 		.4byte	0x81
 13735 18be 19       		.uleb128 0x19
 13736 18bf F60E0000 		.4byte	.LASF299
 13737 18c3 01       		.byte	0x1
 13738 18c4 40       		.byte	0x40
 13739 18c5 CF180000 		.4byte	0x18cf
 13740 18c9 05       		.uleb128 0x5
 13741 18ca 03       		.byte	0x3
 13742 18cb 00000000 		.4byte	pwm_preload_values
 13743 18cf 27       		.uleb128 0x27
 13744 18d0 A9180000 		.4byte	0x18a9
 13745 18d4 28       		.uleb128 0x28
 13746 18d5 3C100000 		.4byte	.LASF300
 13747 18d9 08       		.byte	0x8
 13748 18da 1207     		.2byte	0x712
 13749 18dc E0180000 		.4byte	0x18e0
 13750 18e0 06       		.uleb128 0x6
 13751 18e1 76000000 		.4byte	0x76
 13752 18e5 07       		.uleb128 0x7
 13753 18e6 E00B0000 		.4byte	0xbe0
 13754 18ea F5180000 		.4byte	0x18f5
 13755 18ee 08       		.uleb128 0x8
 13756 18ef 0E010000 		.4byte	0x10e
 13757 18f3 01       		.byte	0x1
 13758 18f4 00       		.byte	0
 13759 18f5 28       		.uleb128 0x28
 13760 18f6 C6050000 		.4byte	.LASF301
 13761 18fa 07       		.byte	0x7
 13762 18fb 2B02     		.2byte	0x22b
 13763 18fd E5180000 		.4byte	0x18e5
 13764 1901 28       		.uleb128 0x28
 13765 1902 3E0B0000 		.4byte	.LASF302
 13766 1906 07       		.byte	0x7
 13767 1907 2B02     		.2byte	0x22b
 13768 1909 E5180000 		.4byte	0x18e5
 13769 190d 07       		.uleb128 0x7
 13770 190e A5010000 		.4byte	0x1a5
 13771 1912 1D190000 		.4byte	0x191d
 13772 1916 08       		.uleb128 0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 298


 13773 1917 0E010000 		.4byte	0x10e
 13774 191b 01       		.byte	0x1
 13775 191c 00       		.byte	0
 13776 191d 28       		.uleb128 0x28
 13777 191e A9070000 		.4byte	.LASF303
 13778 1922 07       		.byte	0x7
 13779 1923 2C02     		.2byte	0x22c
 13780 1925 0D190000 		.4byte	0x190d
 13781 1929 28       		.uleb128 0x28
 13782 192a 24050000 		.4byte	.LASF304
 13783 192e 07       		.byte	0x7
 13784 192f 2C02     		.2byte	0x22c
 13785 1931 0D190000 		.4byte	0x190d
 13786 1935 28       		.uleb128 0x28
 13787 1936 9B0C0000 		.4byte	.LASF305
 13788 193a 07       		.byte	0x7
 13789 193b 2C02     		.2byte	0x22c
 13790 193d 0D190000 		.4byte	0x190d
 13791 1941 07       		.uleb128 0x7
 13792 1942 E2010000 		.4byte	0x1e2
 13793 1946 51190000 		.4byte	0x1951
 13794 194a 08       		.uleb128 0x8
 13795 194b 0E010000 		.4byte	0x10e
 13796 194f 01       		.byte	0x1
 13797 1950 00       		.byte	0
 13798 1951 28       		.uleb128 0x28
 13799 1952 54070000 		.4byte	.LASF306
 13800 1956 07       		.byte	0x7
 13801 1957 2D02     		.2byte	0x22d
 13802 1959 41190000 		.4byte	0x1941
 13803 195d 28       		.uleb128 0x28
 13804 195e 47120000 		.4byte	.LASF307
 13805 1962 07       		.byte	0x7
 13806 1963 2D02     		.2byte	0x22d
 13807 1965 41190000 		.4byte	0x1941
 13808 1969 28       		.uleb128 0x28
 13809 196a 93110000 		.4byte	.LASF308
 13810 196e 07       		.byte	0x7
 13811 196f 2E02     		.2byte	0x22e
 13812 1971 63020000 		.4byte	0x263
 13813 1975 28       		.uleb128 0x28
 13814 1976 65030000 		.4byte	.LASF309
 13815 197a 07       		.byte	0x7
 13816 197b 2E02     		.2byte	0x22e
 13817 197d 63020000 		.4byte	0x263
 13818 1981 28       		.uleb128 0x28
 13819 1982 93000000 		.4byte	.LASF310
 13820 1986 07       		.byte	0x7
 13821 1987 3002     		.2byte	0x230
 13822 1989 B8020000 		.4byte	0x2b8
 13823 198d 28       		.uleb128 0x28
 13824 198e 4A0F0000 		.4byte	.LASF311
 13825 1992 07       		.byte	0x7
 13826 1993 3102     		.2byte	0x231
 13827 1995 C5090000 		.4byte	0x9c5
 13828 1999 28       		.uleb128 0x28
 13829 199a 230B0000 		.4byte	.LASF312
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 299


 13830 199e 07       		.byte	0x7
 13831 199f 3102     		.2byte	0x231
 13832 19a1 C5090000 		.4byte	0x9c5
 13833 19a5 28       		.uleb128 0x28
 13834 19a6 F0090000 		.4byte	.LASF313
 13835 19aa 07       		.byte	0x7
 13836 19ab 3202     		.2byte	0x232
 13837 19ad 9E0B0000 		.4byte	0xb9e
 13838 19b1 07       		.uleb128 0x7
 13839 19b2 760B0000 		.4byte	0xb76
 13840 19b6 C1190000 		.4byte	0x19c1
 13841 19ba 08       		.uleb128 0x8
 13842 19bb 0E010000 		.4byte	0x10e
 13843 19bf 01       		.byte	0x1
 13844 19c0 00       		.byte	0
 13845 19c1 28       		.uleb128 0x28
 13846 19c2 870C0000 		.4byte	.LASF314
 13847 19c6 07       		.byte	0x7
 13848 19c7 3302     		.2byte	0x233
 13849 19c9 B1190000 		.4byte	0x19b1
 13850 19cd 28       		.uleb128 0x28
 13851 19ce 4B0A0000 		.4byte	.LASF315
 13852 19d2 07       		.byte	0x7
 13853 19d3 3302     		.2byte	0x233
 13854 19d5 B1190000 		.4byte	0x19b1
 13855 19d9 28       		.uleb128 0x28
 13856 19da 710C0000 		.4byte	.LASF316
 13857 19de 07       		.byte	0x7
 13858 19df 3302     		.2byte	0x233
 13859 19e1 B1190000 		.4byte	0x19b1
 13860 19e5 07       		.uleb128 0x7
 13861 19e6 760B0000 		.4byte	0xb76
 13862 19ea F5190000 		.4byte	0x19f5
 13863 19ee 08       		.uleb128 0x8
 13864 19ef 0E010000 		.4byte	0x10e
 13865 19f3 02       		.byte	0x2
 13866 19f4 00       		.byte	0
 13867 19f5 28       		.uleb128 0x28
 13868 19f6 BD050000 		.4byte	.LASF317
 13869 19fa 07       		.byte	0x7
 13870 19fb 3402     		.2byte	0x234
 13871 19fd E5190000 		.4byte	0x19e5
 13872 1a01 07       		.uleb128 0x7
 13873 1a02 760B0000 		.4byte	0xb76
 13874 1a06 111A0000 		.4byte	0x1a11
 13875 1a0a 08       		.uleb128 0x8
 13876 1a0b 0E010000 		.4byte	0x10e
 13877 1a0f 07       		.byte	0x7
 13878 1a10 00       		.byte	0
 13879 1a11 28       		.uleb128 0x28
 13880 1a12 AE010000 		.4byte	.LASF318
 13881 1a16 07       		.byte	0x7
 13882 1a17 3502     		.2byte	0x235
 13883 1a19 011A0000 		.4byte	0x1a01
 13884 1a1d 28       		.uleb128 0x28
 13885 1a1e 92030000 		.4byte	.LASF319
 13886 1a22 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 300


 13887 1a23 3602     		.2byte	0x236
 13888 1a25 760B0000 		.4byte	0xb76
 13889 1a29 28       		.uleb128 0x28
 13890 1a2a CA020000 		.4byte	.LASF320
 13891 1a2e 07       		.byte	0x7
 13892 1a2f 3802     		.2byte	0x238
 13893 1a31 8D000000 		.4byte	0x8d
 13894 1a35 28       		.uleb128 0x28
 13895 1a36 D0090000 		.4byte	.LASF321
 13896 1a3a 07       		.byte	0x7
 13897 1a3b 3902     		.2byte	0x239
 13898 1a3d 8D000000 		.4byte	0x8d
 13899 1a41 28       		.uleb128 0x28
 13900 1a42 170D0000 		.4byte	.LASF322
 13901 1a46 07       		.byte	0x7
 13902 1a47 3A02     		.2byte	0x23a
 13903 1a49 D5000000 		.4byte	0xd5
 13904 1a4d 28       		.uleb128 0x28
 13905 1a4e D10D0000 		.4byte	.LASF323
 13906 1a52 07       		.byte	0x7
 13907 1a53 3C02     		.2byte	0x23c
 13908 1a55 98020000 		.4byte	0x298
 13909 1a59 28       		.uleb128 0x28
 13910 1a5a AF100000 		.4byte	.LASF324
 13911 1a5e 07       		.byte	0x7
 13912 1a5f 3D02     		.2byte	0x23d
 13913 1a61 22070000 		.4byte	0x722
 13914 1a65 28       		.uleb128 0x28
 13915 1a66 D00F0000 		.4byte	.LASF325
 13916 1a6a 07       		.byte	0x7
 13917 1a6b 3E02     		.2byte	0x23e
 13918 1a6d 22070000 		.4byte	0x722
 13919 1a71 28       		.uleb128 0x28
 13920 1a72 90060000 		.4byte	.LASF326
 13921 1a76 07       		.byte	0x7
 13922 1a77 3F02     		.2byte	0x23f
 13923 1a79 98020000 		.4byte	0x298
 13924 1a7d 28       		.uleb128 0x28
 13925 1a7e 49100000 		.4byte	.LASF327
 13926 1a82 07       		.byte	0x7
 13927 1a83 4002     		.2byte	0x240
 13928 1a85 98020000 		.4byte	0x298
 13929 1a89 28       		.uleb128 0x28
 13930 1a8a 430D0000 		.4byte	.LASF328
 13931 1a8e 07       		.byte	0x7
 13932 1a8f 4102     		.2byte	0x241
 13933 1a91 BD000000 		.4byte	0xbd
 13934 1a95 28       		.uleb128 0x28
 13935 1a96 32070000 		.4byte	.LASF329
 13936 1a9a 07       		.byte	0x7
 13937 1a9b 4302     		.2byte	0x243
 13938 1a9d 650C0000 		.4byte	0xc65
 13939 1aa1 28       		.uleb128 0x28
 13940 1aa2 4E050000 		.4byte	.LASF330
 13941 1aa6 07       		.byte	0x7
 13942 1aa7 4402     		.2byte	0x244
 13943 1aa9 2D0C0000 		.4byte	0xc2d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 301


 13944 1aad 28       		.uleb128 0x28
 13945 1aae A4040000 		.4byte	.LASF331
 13946 1ab2 07       		.byte	0x7
 13947 1ab3 4502     		.2byte	0x245
 13948 1ab5 2D0C0000 		.4byte	0xc2d
 13949 1ab9 28       		.uleb128 0x28
 13950 1aba 560D0000 		.4byte	.LASF332
 13951 1abe 07       		.byte	0x7
 13952 1abf 4602     		.2byte	0x246
 13953 1ac1 2D0C0000 		.4byte	0xc2d
 13954 1ac5 28       		.uleb128 0x28
 13955 1ac6 C3110000 		.4byte	.LASF333
 13956 1aca 07       		.byte	0x7
 13957 1acb 4702     		.2byte	0x247
 13958 1acd 2D0C0000 		.4byte	0xc2d
 13959 1ad1 28       		.uleb128 0x28
 13960 1ad2 D4080000 		.4byte	.LASF334
 13961 1ad6 07       		.byte	0x7
 13962 1ad7 4A02     		.2byte	0x24a
 13963 1ad9 32070000 		.4byte	0x732
 13964 1add 28       		.uleb128 0x28
 13965 1ade E2000000 		.4byte	.LASF335
 13966 1ae2 07       		.byte	0x7
 13967 1ae3 4B02     		.2byte	0x24b
 13968 1ae5 81000000 		.4byte	0x81
 13969 1ae9 28       		.uleb128 0x28
 13970 1aea B9040000 		.4byte	.LASF336
 13971 1aee 07       		.byte	0x7
 13972 1aef 4C02     		.2byte	0x24c
 13973 1af1 81000000 		.4byte	0x81
 13974 1af5 28       		.uleb128 0x28
 13975 1af6 00010000 		.4byte	.LASF337
 13976 1afa 07       		.byte	0x7
 13977 1afb 4D02     		.2byte	0x24d
 13978 1afd 81000000 		.4byte	0x81
 13979 1b01 28       		.uleb128 0x28
 13980 1b02 7B120000 		.4byte	.LASF338
 13981 1b06 07       		.byte	0x7
 13982 1b07 4F02     		.2byte	0x24f
 13983 1b09 81000000 		.4byte	0x81
 13984 1b0d 28       		.uleb128 0x28
 13985 1b0e 8E0C0000 		.4byte	.LASF339
 13986 1b12 07       		.byte	0x7
 13987 1b13 5002     		.2byte	0x250
 13988 1b15 81000000 		.4byte	0x81
 13989 1b19 28       		.uleb128 0x28
 13990 1b1a 0A050000 		.4byte	.LASF340
 13991 1b1e 07       		.byte	0x7
 13992 1b1f 5102     		.2byte	0x251
 13993 1b21 81000000 		.4byte	0x81
 13994 1b25 28       		.uleb128 0x28
 13995 1b26 B4080000 		.4byte	.LASF341
 13996 1b2a 07       		.byte	0x7
 13997 1b2b 5202     		.2byte	0x252
 13998 1b2d 81000000 		.4byte	0x81
 13999 1b31 28       		.uleb128 0x28
 14000 1b32 300A0000 		.4byte	.LASF342
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 302


 14001 1b36 07       		.byte	0x7
 14002 1b37 5302     		.2byte	0x253
 14003 1b39 81000000 		.4byte	0x81
 14004 1b3d 07       		.uleb128 0x7
 14005 1b3e B1000000 		.4byte	0xb1
 14006 1b42 4D1B0000 		.4byte	0x1b4d
 14007 1b46 08       		.uleb128 0x8
 14008 1b47 0E010000 		.4byte	0x10e
 14009 1b4b 0B       		.byte	0xb
 14010 1b4c 00       		.byte	0
 14011 1b4d 28       		.uleb128 0x28
 14012 1b4e B1040000 		.4byte	.LASF343
 14013 1b52 07       		.byte	0x7
 14014 1b53 5702     		.2byte	0x257
 14015 1b55 3D1B0000 		.4byte	0x1b3d
 14016 1b59 28       		.uleb128 0x28
 14017 1b5a FA110000 		.4byte	.LASF344
 14018 1b5e 07       		.byte	0x7
 14019 1b5f 5802     		.2byte	0x258
 14020 1b61 81000000 		.4byte	0x81
 14021 1b65 07       		.uleb128 0x7
 14022 1b66 A5000000 		.4byte	0xa5
 14023 1b6a 751B0000 		.4byte	0x1b75
 14024 1b6e 08       		.uleb128 0x8
 14025 1b6f 0E010000 		.4byte	0x10e
 14026 1b73 01       		.byte	0x1
 14027 1b74 00       		.byte	0
 14028 1b75 28       		.uleb128 0x28
 14029 1b76 98050000 		.4byte	.LASF345
 14030 1b7a 07       		.byte	0x7
 14031 1b7b 5B02     		.2byte	0x25b
 14032 1b7d 651B0000 		.4byte	0x1b65
 14033 1b81 07       		.uleb128 0x7
 14034 1b82 99000000 		.4byte	0x99
 14035 1b86 971B0000 		.4byte	0x1b97
 14036 1b8a 08       		.uleb128 0x8
 14037 1b8b 0E010000 		.4byte	0x10e
 14038 1b8f 01       		.byte	0x1
 14039 1b90 08       		.uleb128 0x8
 14040 1b91 0E010000 		.4byte	0x10e
 14041 1b95 04       		.byte	0x4
 14042 1b96 00       		.byte	0
 14043 1b97 28       		.uleb128 0x28
 14044 1b98 98070000 		.4byte	.LASF346
 14045 1b9c 07       		.byte	0x7
 14046 1b9d 5E02     		.2byte	0x25e
 14047 1b9f 811B0000 		.4byte	0x1b81
 14048 1ba3 28       		.uleb128 0x28
 14049 1ba4 790E0000 		.4byte	.LASF347
 14050 1ba8 07       		.byte	0x7
 14051 1ba9 5F02     		.2byte	0x25f
 14052 1bab 32070000 		.4byte	0x732
 14053 1baf 07       		.uleb128 0x7
 14054 1bb0 8D000000 		.4byte	0x8d
 14055 1bb4 C51B0000 		.4byte	0x1bc5
 14056 1bb8 08       		.uleb128 0x8
 14057 1bb9 0E010000 		.4byte	0x10e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 303


 14058 1bbd 01       		.byte	0x1
 14059 1bbe 08       		.uleb128 0x8
 14060 1bbf 0E010000 		.4byte	0x10e
 14061 1bc3 04       		.byte	0x4
 14062 1bc4 00       		.byte	0
 14063 1bc5 28       		.uleb128 0x28
 14064 1bc6 CF100000 		.4byte	.LASF348
 14065 1bca 07       		.byte	0x7
 14066 1bcb 6002     		.2byte	0x260
 14067 1bcd AF1B0000 		.4byte	0x1baf
 14068 1bd1 07       		.uleb128 0x7
 14069 1bd2 81000000 		.4byte	0x81
 14070 1bd6 E71B0000 		.4byte	0x1be7
 14071 1bda 08       		.uleb128 0x8
 14072 1bdb 0E010000 		.4byte	0x10e
 14073 1bdf 01       		.byte	0x1
 14074 1be0 08       		.uleb128 0x8
 14075 1be1 0E010000 		.4byte	0x10e
 14076 1be5 04       		.byte	0x4
 14077 1be6 00       		.byte	0
 14078 1be7 28       		.uleb128 0x28
 14079 1be8 69070000 		.4byte	.LASF349
 14080 1bec 07       		.byte	0x7
 14081 1bed 6102     		.2byte	0x261
 14082 1bef D11B0000 		.4byte	0x1bd1
 14083 1bf3 28       		.uleb128 0x28
 14084 1bf4 3E040000 		.4byte	.LASF350
 14085 1bf8 07       		.byte	0x7
 14086 1bf9 6202     		.2byte	0x262
 14087 1bfb 32070000 		.4byte	0x732
 14088 1bff 28       		.uleb128 0x28
 14089 1c00 540B0000 		.4byte	.LASF351
 14090 1c04 07       		.byte	0x7
 14091 1c05 6502     		.2byte	0x265
 14092 1c07 BD000000 		.4byte	0xbd
 14093 1c0b 28       		.uleb128 0x28
 14094 1c0c 73060000 		.4byte	.LASF352
 14095 1c10 07       		.byte	0x7
 14096 1c11 6802     		.2byte	0x268
 14097 1c13 9F010000 		.4byte	0x19f
 14098 1c17 28       		.uleb128 0x28
 14099 1c18 4E080000 		.4byte	.LASF353
 14100 1c1c 07       		.byte	0x7
 14101 1c1d 6B02     		.2byte	0x26b
 14102 1c1f 9F010000 		.4byte	0x19f
 14103 1c23 07       		.uleb128 0x7
 14104 1c24 FA0A0000 		.4byte	0xafa
 14105 1c28 331C0000 		.4byte	0x1c33
 14106 1c2c 08       		.uleb128 0x8
 14107 1c2d 0E010000 		.4byte	0x10e
 14108 1c31 04       		.byte	0x4
 14109 1c32 00       		.byte	0
 14110 1c33 28       		.uleb128 0x28
 14111 1c34 B7050000 		.4byte	.LASF354
 14112 1c38 07       		.byte	0x7
 14113 1c39 7402     		.2byte	0x274
 14114 1c3b 231C0000 		.4byte	0x1c23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 304


 14115 1c3f 28       		.uleb128 0x28
 14116 1c40 D6060000 		.4byte	.LASF355
 14117 1c44 07       		.byte	0x7
 14118 1c45 7402     		.2byte	0x274
 14119 1c47 231C0000 		.4byte	0x1c23
 14120 1c4b 28       		.uleb128 0x28
 14121 1c4c 18120000 		.4byte	.LASF356
 14122 1c50 07       		.byte	0x7
 14123 1c51 7D02     		.2byte	0x27d
 14124 1c53 81000000 		.4byte	0x81
 14125 1c57 28       		.uleb128 0x28
 14126 1c58 11040000 		.4byte	.LASF357
 14127 1c5c 07       		.byte	0x7
 14128 1c5d 8902     		.2byte	0x289
 14129 1c5f 81000000 		.4byte	0x81
 14130 1c63 07       		.uleb128 0x7
 14131 1c64 D5000000 		.4byte	0xd5
 14132 1c68 791C0000 		.4byte	0x1c79
 14133 1c6c 08       		.uleb128 0x8
 14134 1c6d 0E010000 		.4byte	0x10e
 14135 1c71 01       		.byte	0x1
 14136 1c72 08       		.uleb128 0x8
 14137 1c73 0E010000 		.4byte	0x10e
 14138 1c77 02       		.byte	0x2
 14139 1c78 00       		.byte	0
 14140 1c79 28       		.uleb128 0x28
 14141 1c7a 4B0C0000 		.4byte	.LASF358
 14142 1c7e 07       		.byte	0x7
 14143 1c7f 9702     		.2byte	0x297
 14144 1c81 631C0000 		.4byte	0x1c63
 14145 1c85 00       		.byte	0
 14146              		.section	.debug_abbrev,"",%progbits
 14147              	.Ldebug_abbrev0:
 14148 0000 01       		.uleb128 0x1
 14149 0001 11       		.uleb128 0x11
 14150 0002 01       		.byte	0x1
 14151 0003 25       		.uleb128 0x25
 14152 0004 0E       		.uleb128 0xe
 14153 0005 13       		.uleb128 0x13
 14154 0006 0B       		.uleb128 0xb
 14155 0007 03       		.uleb128 0x3
 14156 0008 0E       		.uleb128 0xe
 14157 0009 1B       		.uleb128 0x1b
 14158 000a 0E       		.uleb128 0xe
 14159 000b 55       		.uleb128 0x55
 14160 000c 17       		.uleb128 0x17
 14161 000d 11       		.uleb128 0x11
 14162 000e 01       		.uleb128 0x1
 14163 000f 10       		.uleb128 0x10
 14164 0010 17       		.uleb128 0x17
 14165 0011 00       		.byte	0
 14166 0012 00       		.byte	0
 14167 0013 02       		.uleb128 0x2
 14168 0014 24       		.uleb128 0x24
 14169 0015 00       		.byte	0
 14170 0016 0B       		.uleb128 0xb
 14171 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 305


 14172 0018 3E       		.uleb128 0x3e
 14173 0019 0B       		.uleb128 0xb
 14174 001a 03       		.uleb128 0x3
 14175 001b 0E       		.uleb128 0xe
 14176 001c 00       		.byte	0
 14177 001d 00       		.byte	0
 14178 001e 03       		.uleb128 0x3
 14179 001f 16       		.uleb128 0x16
 14180 0020 00       		.byte	0
 14181 0021 03       		.uleb128 0x3
 14182 0022 0E       		.uleb128 0xe
 14183 0023 3A       		.uleb128 0x3a
 14184 0024 0B       		.uleb128 0xb
 14185 0025 3B       		.uleb128 0x3b
 14186 0026 0B       		.uleb128 0xb
 14187 0027 49       		.uleb128 0x49
 14188 0028 13       		.uleb128 0x13
 14189 0029 00       		.byte	0
 14190 002a 00       		.byte	0
 14191 002b 04       		.uleb128 0x4
 14192 002c 24       		.uleb128 0x24
 14193 002d 00       		.byte	0
 14194 002e 0B       		.uleb128 0xb
 14195 002f 0B       		.uleb128 0xb
 14196 0030 3E       		.uleb128 0x3e
 14197 0031 0B       		.uleb128 0xb
 14198 0032 03       		.uleb128 0x3
 14199 0033 08       		.uleb128 0x8
 14200 0034 00       		.byte	0
 14201 0035 00       		.byte	0
 14202 0036 05       		.uleb128 0x5
 14203 0037 16       		.uleb128 0x16
 14204 0038 00       		.byte	0
 14205 0039 03       		.uleb128 0x3
 14206 003a 0E       		.uleb128 0xe
 14207 003b 3A       		.uleb128 0x3a
 14208 003c 0B       		.uleb128 0xb
 14209 003d 3B       		.uleb128 0x3b
 14210 003e 05       		.uleb128 0x5
 14211 003f 49       		.uleb128 0x49
 14212 0040 13       		.uleb128 0x13
 14213 0041 00       		.byte	0
 14214 0042 00       		.byte	0
 14215 0043 06       		.uleb128 0x6
 14216 0044 35       		.uleb128 0x35
 14217 0045 00       		.byte	0
 14218 0046 49       		.uleb128 0x49
 14219 0047 13       		.uleb128 0x13
 14220 0048 00       		.byte	0
 14221 0049 00       		.byte	0
 14222 004a 07       		.uleb128 0x7
 14223 004b 01       		.uleb128 0x1
 14224 004c 01       		.byte	0x1
 14225 004d 49       		.uleb128 0x49
 14226 004e 13       		.uleb128 0x13
 14227 004f 01       		.uleb128 0x1
 14228 0050 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 306


 14229 0051 00       		.byte	0
 14230 0052 00       		.byte	0
 14231 0053 08       		.uleb128 0x8
 14232 0054 21       		.uleb128 0x21
 14233 0055 00       		.byte	0
 14234 0056 49       		.uleb128 0x49
 14235 0057 13       		.uleb128 0x13
 14236 0058 2F       		.uleb128 0x2f
 14237 0059 0B       		.uleb128 0xb
 14238 005a 00       		.byte	0
 14239 005b 00       		.byte	0
 14240 005c 09       		.uleb128 0x9
 14241 005d 04       		.uleb128 0x4
 14242 005e 01       		.byte	0x1
 14243 005f 03       		.uleb128 0x3
 14244 0060 0E       		.uleb128 0xe
 14245 0061 0B       		.uleb128 0xb
 14246 0062 0B       		.uleb128 0xb
 14247 0063 49       		.uleb128 0x49
 14248 0064 13       		.uleb128 0x13
 14249 0065 3A       		.uleb128 0x3a
 14250 0066 0B       		.uleb128 0xb
 14251 0067 3B       		.uleb128 0x3b
 14252 0068 0B       		.uleb128 0xb
 14253 0069 01       		.uleb128 0x1
 14254 006a 13       		.uleb128 0x13
 14255 006b 00       		.byte	0
 14256 006c 00       		.byte	0
 14257 006d 0A       		.uleb128 0xa
 14258 006e 28       		.uleb128 0x28
 14259 006f 00       		.byte	0
 14260 0070 03       		.uleb128 0x3
 14261 0071 0E       		.uleb128 0xe
 14262 0072 1C       		.uleb128 0x1c
 14263 0073 0B       		.uleb128 0xb
 14264 0074 00       		.byte	0
 14265 0075 00       		.byte	0
 14266 0076 0B       		.uleb128 0xb
 14267 0077 13       		.uleb128 0x13
 14268 0078 00       		.byte	0
 14269 0079 03       		.uleb128 0x3
 14270 007a 0E       		.uleb128 0xe
 14271 007b 3C       		.uleb128 0x3c
 14272 007c 19       		.uleb128 0x19
 14273 007d 00       		.byte	0
 14274 007e 00       		.byte	0
 14275 007f 0C       		.uleb128 0xc
 14276 0080 0F       		.uleb128 0xf
 14277 0081 00       		.byte	0
 14278 0082 0B       		.uleb128 0xb
 14279 0083 0B       		.uleb128 0xb
 14280 0084 49       		.uleb128 0x49
 14281 0085 13       		.uleb128 0x13
 14282 0086 00       		.byte	0
 14283 0087 00       		.byte	0
 14284 0088 0D       		.uleb128 0xd
 14285 0089 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 307


 14286 008a 01       		.byte	0x1
 14287 008b 03       		.uleb128 0x3
 14288 008c 0E       		.uleb128 0xe
 14289 008d 0B       		.uleb128 0xb
 14290 008e 0B       		.uleb128 0xb
 14291 008f 3A       		.uleb128 0x3a
 14292 0090 0B       		.uleb128 0xb
 14293 0091 3B       		.uleb128 0x3b
 14294 0092 0B       		.uleb128 0xb
 14295 0093 01       		.uleb128 0x1
 14296 0094 13       		.uleb128 0x13
 14297 0095 00       		.byte	0
 14298 0096 00       		.byte	0
 14299 0097 0E       		.uleb128 0xe
 14300 0098 0D       		.uleb128 0xd
 14301 0099 00       		.byte	0
 14302 009a 03       		.uleb128 0x3
 14303 009b 08       		.uleb128 0x8
 14304 009c 3A       		.uleb128 0x3a
 14305 009d 0B       		.uleb128 0xb
 14306 009e 3B       		.uleb128 0x3b
 14307 009f 0B       		.uleb128 0xb
 14308 00a0 49       		.uleb128 0x49
 14309 00a1 13       		.uleb128 0x13
 14310 00a2 38       		.uleb128 0x38
 14311 00a3 0B       		.uleb128 0xb
 14312 00a4 00       		.byte	0
 14313 00a5 00       		.byte	0
 14314 00a6 0F       		.uleb128 0xf
 14315 00a7 0D       		.uleb128 0xd
 14316 00a8 00       		.byte	0
 14317 00a9 03       		.uleb128 0x3
 14318 00aa 0E       		.uleb128 0xe
 14319 00ab 3A       		.uleb128 0x3a
 14320 00ac 0B       		.uleb128 0xb
 14321 00ad 3B       		.uleb128 0x3b
 14322 00ae 0B       		.uleb128 0xb
 14323 00af 49       		.uleb128 0x49
 14324 00b0 13       		.uleb128 0x13
 14325 00b1 38       		.uleb128 0x38
 14326 00b2 0B       		.uleb128 0xb
 14327 00b3 00       		.byte	0
 14328 00b4 00       		.byte	0
 14329 00b5 10       		.uleb128 0x10
 14330 00b6 13       		.uleb128 0x13
 14331 00b7 01       		.byte	0x1
 14332 00b8 03       		.uleb128 0x3
 14333 00b9 0E       		.uleb128 0xe
 14334 00ba 0B       		.uleb128 0xb
 14335 00bb 0B       		.uleb128 0xb
 14336 00bc 3A       		.uleb128 0x3a
 14337 00bd 0B       		.uleb128 0xb
 14338 00be 3B       		.uleb128 0x3b
 14339 00bf 05       		.uleb128 0x5
 14340 00c0 01       		.uleb128 0x1
 14341 00c1 13       		.uleb128 0x13
 14342 00c2 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 308


 14343 00c3 00       		.byte	0
 14344 00c4 11       		.uleb128 0x11
 14345 00c5 0D       		.uleb128 0xd
 14346 00c6 00       		.byte	0
 14347 00c7 03       		.uleb128 0x3
 14348 00c8 08       		.uleb128 0x8
 14349 00c9 3A       		.uleb128 0x3a
 14350 00ca 0B       		.uleb128 0xb
 14351 00cb 3B       		.uleb128 0x3b
 14352 00cc 05       		.uleb128 0x5
 14353 00cd 49       		.uleb128 0x49
 14354 00ce 13       		.uleb128 0x13
 14355 00cf 38       		.uleb128 0x38
 14356 00d0 0B       		.uleb128 0xb
 14357 00d1 00       		.byte	0
 14358 00d2 00       		.byte	0
 14359 00d3 12       		.uleb128 0x12
 14360 00d4 0D       		.uleb128 0xd
 14361 00d5 00       		.byte	0
 14362 00d6 03       		.uleb128 0x3
 14363 00d7 0E       		.uleb128 0xe
 14364 00d8 3A       		.uleb128 0x3a
 14365 00d9 0B       		.uleb128 0xb
 14366 00da 3B       		.uleb128 0x3b
 14367 00db 05       		.uleb128 0x5
 14368 00dc 49       		.uleb128 0x49
 14369 00dd 13       		.uleb128 0x13
 14370 00de 38       		.uleb128 0x38
 14371 00df 0B       		.uleb128 0xb
 14372 00e0 00       		.byte	0
 14373 00e1 00       		.byte	0
 14374 00e2 13       		.uleb128 0x13
 14375 00e3 13       		.uleb128 0x13
 14376 00e4 01       		.byte	0x1
 14377 00e5 03       		.uleb128 0x3
 14378 00e6 0E       		.uleb128 0xe
 14379 00e7 0B       		.uleb128 0xb
 14380 00e8 05       		.uleb128 0x5
 14381 00e9 3A       		.uleb128 0x3a
 14382 00ea 0B       		.uleb128 0xb
 14383 00eb 3B       		.uleb128 0x3b
 14384 00ec 05       		.uleb128 0x5
 14385 00ed 01       		.uleb128 0x1
 14386 00ee 13       		.uleb128 0x13
 14387 00ef 00       		.byte	0
 14388 00f0 00       		.byte	0
 14389 00f1 14       		.uleb128 0x14
 14390 00f2 0D       		.uleb128 0xd
 14391 00f3 00       		.byte	0
 14392 00f4 03       		.uleb128 0x3
 14393 00f5 08       		.uleb128 0x8
 14394 00f6 3A       		.uleb128 0x3a
 14395 00f7 0B       		.uleb128 0xb
 14396 00f8 3B       		.uleb128 0x3b
 14397 00f9 05       		.uleb128 0x5
 14398 00fa 49       		.uleb128 0x49
 14399 00fb 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 309


 14400 00fc 38       		.uleb128 0x38
 14401 00fd 05       		.uleb128 0x5
 14402 00fe 00       		.byte	0
 14403 00ff 00       		.byte	0
 14404 0100 15       		.uleb128 0x15
 14405 0101 0D       		.uleb128 0xd
 14406 0102 00       		.byte	0
 14407 0103 03       		.uleb128 0x3
 14408 0104 0E       		.uleb128 0xe
 14409 0105 3A       		.uleb128 0x3a
 14410 0106 0B       		.uleb128 0xb
 14411 0107 3B       		.uleb128 0x3b
 14412 0108 05       		.uleb128 0x5
 14413 0109 49       		.uleb128 0x49
 14414 010a 13       		.uleb128 0x13
 14415 010b 38       		.uleb128 0x38
 14416 010c 05       		.uleb128 0x5
 14417 010d 00       		.byte	0
 14418 010e 00       		.byte	0
 14419 010f 16       		.uleb128 0x16
 14420 0110 04       		.uleb128 0x4
 14421 0111 01       		.byte	0x1
 14422 0112 0B       		.uleb128 0xb
 14423 0113 0B       		.uleb128 0xb
 14424 0114 49       		.uleb128 0x49
 14425 0115 13       		.uleb128 0x13
 14426 0116 3A       		.uleb128 0x3a
 14427 0117 0B       		.uleb128 0xb
 14428 0118 3B       		.uleb128 0x3b
 14429 0119 05       		.uleb128 0x5
 14430 011a 01       		.uleb128 0x1
 14431 011b 13       		.uleb128 0x13
 14432 011c 00       		.byte	0
 14433 011d 00       		.byte	0
 14434 011e 17       		.uleb128 0x17
 14435 011f 2E       		.uleb128 0x2e
 14436 0120 00       		.byte	0
 14437 0121 3F       		.uleb128 0x3f
 14438 0122 19       		.uleb128 0x19
 14439 0123 03       		.uleb128 0x3
 14440 0124 0E       		.uleb128 0xe
 14441 0125 3A       		.uleb128 0x3a
 14442 0126 0B       		.uleb128 0xb
 14443 0127 3B       		.uleb128 0x3b
 14444 0128 0B       		.uleb128 0xb
 14445 0129 27       		.uleb128 0x27
 14446 012a 19       		.uleb128 0x19
 14447 012b 11       		.uleb128 0x11
 14448 012c 01       		.uleb128 0x1
 14449 012d 12       		.uleb128 0x12
 14450 012e 06       		.uleb128 0x6
 14451 012f 40       		.uleb128 0x40
 14452 0130 18       		.uleb128 0x18
 14453 0131 9742     		.uleb128 0x2117
 14454 0133 19       		.uleb128 0x19
 14455 0134 00       		.byte	0
 14456 0135 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 310


 14457 0136 18       		.uleb128 0x18
 14458 0137 2E       		.uleb128 0x2e
 14459 0138 01       		.byte	0x1
 14460 0139 3F       		.uleb128 0x3f
 14461 013a 19       		.uleb128 0x19
 14462 013b 03       		.uleb128 0x3
 14463 013c 0E       		.uleb128 0xe
 14464 013d 3A       		.uleb128 0x3a
 14465 013e 0B       		.uleb128 0xb
 14466 013f 3B       		.uleb128 0x3b
 14467 0140 0B       		.uleb128 0xb
 14468 0141 11       		.uleb128 0x11
 14469 0142 01       		.uleb128 0x1
 14470 0143 12       		.uleb128 0x12
 14471 0144 06       		.uleb128 0x6
 14472 0145 40       		.uleb128 0x40
 14473 0146 18       		.uleb128 0x18
 14474 0147 9642     		.uleb128 0x2116
 14475 0149 19       		.uleb128 0x19
 14476 014a 01       		.uleb128 0x1
 14477 014b 13       		.uleb128 0x13
 14478 014c 00       		.byte	0
 14479 014d 00       		.byte	0
 14480 014e 19       		.uleb128 0x19
 14481 014f 34       		.uleb128 0x34
 14482 0150 00       		.byte	0
 14483 0151 03       		.uleb128 0x3
 14484 0152 0E       		.uleb128 0xe
 14485 0153 3A       		.uleb128 0x3a
 14486 0154 0B       		.uleb128 0xb
 14487 0155 3B       		.uleb128 0x3b
 14488 0156 0B       		.uleb128 0xb
 14489 0157 49       		.uleb128 0x49
 14490 0158 13       		.uleb128 0x13
 14491 0159 02       		.uleb128 0x2
 14492 015a 18       		.uleb128 0x18
 14493 015b 00       		.byte	0
 14494 015c 00       		.byte	0
 14495 015d 1A       		.uleb128 0x1a
 14496 015e 2E       		.uleb128 0x2e
 14497 015f 01       		.byte	0x1
 14498 0160 3F       		.uleb128 0x3f
 14499 0161 19       		.uleb128 0x19
 14500 0162 03       		.uleb128 0x3
 14501 0163 0E       		.uleb128 0xe
 14502 0164 3A       		.uleb128 0x3a
 14503 0165 0B       		.uleb128 0xb
 14504 0166 3B       		.uleb128 0x3b
 14505 0167 05       		.uleb128 0x5
 14506 0168 27       		.uleb128 0x27
 14507 0169 19       		.uleb128 0x19
 14508 016a 11       		.uleb128 0x11
 14509 016b 01       		.uleb128 0x1
 14510 016c 12       		.uleb128 0x12
 14511 016d 06       		.uleb128 0x6
 14512 016e 40       		.uleb128 0x40
 14513 016f 18       		.uleb128 0x18
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 311


 14514 0170 9642     		.uleb128 0x2116
 14515 0172 19       		.uleb128 0x19
 14516 0173 01       		.uleb128 0x1
 14517 0174 13       		.uleb128 0x13
 14518 0175 00       		.byte	0
 14519 0176 00       		.byte	0
 14520 0177 1B       		.uleb128 0x1b
 14521 0178 34       		.uleb128 0x34
 14522 0179 00       		.byte	0
 14523 017a 03       		.uleb128 0x3
 14524 017b 0E       		.uleb128 0xe
 14525 017c 3A       		.uleb128 0x3a
 14526 017d 0B       		.uleb128 0xb
 14527 017e 3B       		.uleb128 0x3b
 14528 017f 05       		.uleb128 0x5
 14529 0180 49       		.uleb128 0x49
 14530 0181 13       		.uleb128 0x13
 14531 0182 02       		.uleb128 0x2
 14532 0183 18       		.uleb128 0x18
 14533 0184 00       		.byte	0
 14534 0185 00       		.byte	0
 14535 0186 1C       		.uleb128 0x1c
 14536 0187 34       		.uleb128 0x34
 14537 0188 00       		.byte	0
 14538 0189 03       		.uleb128 0x3
 14539 018a 08       		.uleb128 0x8
 14540 018b 3A       		.uleb128 0x3a
 14541 018c 0B       		.uleb128 0xb
 14542 018d 3B       		.uleb128 0x3b
 14543 018e 05       		.uleb128 0x5
 14544 018f 49       		.uleb128 0x49
 14545 0190 13       		.uleb128 0x13
 14546 0191 02       		.uleb128 0x2
 14547 0192 18       		.uleb128 0x18
 14548 0193 00       		.byte	0
 14549 0194 00       		.byte	0
 14550 0195 1D       		.uleb128 0x1d
 14551 0196 0B       		.uleb128 0xb
 14552 0197 01       		.byte	0x1
 14553 0198 11       		.uleb128 0x11
 14554 0199 01       		.uleb128 0x1
 14555 019a 12       		.uleb128 0x12
 14556 019b 06       		.uleb128 0x6
 14557 019c 01       		.uleb128 0x1
 14558 019d 13       		.uleb128 0x13
 14559 019e 00       		.byte	0
 14560 019f 00       		.byte	0
 14561 01a0 1E       		.uleb128 0x1e
 14562 01a1 0B       		.uleb128 0xb
 14563 01a2 01       		.byte	0x1
 14564 01a3 11       		.uleb128 0x11
 14565 01a4 01       		.uleb128 0x1
 14566 01a5 12       		.uleb128 0x12
 14567 01a6 06       		.uleb128 0x6
 14568 01a7 00       		.byte	0
 14569 01a8 00       		.byte	0
 14570 01a9 1F       		.uleb128 0x1f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 312


 14571 01aa 21       		.uleb128 0x21
 14572 01ab 00       		.byte	0
 14573 01ac 49       		.uleb128 0x49
 14574 01ad 13       		.uleb128 0x13
 14575 01ae 2F       		.uleb128 0x2f
 14576 01af 05       		.uleb128 0x5
 14577 01b0 00       		.byte	0
 14578 01b1 00       		.byte	0
 14579 01b2 20       		.uleb128 0x20
 14580 01b3 05       		.uleb128 0x5
 14581 01b4 00       		.byte	0
 14582 01b5 03       		.uleb128 0x3
 14583 01b6 0E       		.uleb128 0xe
 14584 01b7 3A       		.uleb128 0x3a
 14585 01b8 0B       		.uleb128 0xb
 14586 01b9 3B       		.uleb128 0x3b
 14587 01ba 05       		.uleb128 0x5
 14588 01bb 49       		.uleb128 0x49
 14589 01bc 13       		.uleb128 0x13
 14590 01bd 02       		.uleb128 0x2
 14591 01be 18       		.uleb128 0x18
 14592 01bf 00       		.byte	0
 14593 01c0 00       		.byte	0
 14594 01c1 21       		.uleb128 0x21
 14595 01c2 0B       		.uleb128 0xb
 14596 01c3 01       		.byte	0x1
 14597 01c4 55       		.uleb128 0x55
 14598 01c5 17       		.uleb128 0x17
 14599 01c6 00       		.byte	0
 14600 01c7 00       		.byte	0
 14601 01c8 22       		.uleb128 0x22
 14602 01c9 2E       		.uleb128 0x2e
 14603 01ca 01       		.byte	0x1
 14604 01cb 3F       		.uleb128 0x3f
 14605 01cc 19       		.uleb128 0x19
 14606 01cd 03       		.uleb128 0x3
 14607 01ce 0E       		.uleb128 0xe
 14608 01cf 3A       		.uleb128 0x3a
 14609 01d0 0B       		.uleb128 0xb
 14610 01d1 3B       		.uleb128 0x3b
 14611 01d2 05       		.uleb128 0x5
 14612 01d3 27       		.uleb128 0x27
 14613 01d4 19       		.uleb128 0x19
 14614 01d5 11       		.uleb128 0x11
 14615 01d6 01       		.uleb128 0x1
 14616 01d7 12       		.uleb128 0x12
 14617 01d8 06       		.uleb128 0x6
 14618 01d9 40       		.uleb128 0x40
 14619 01da 18       		.uleb128 0x18
 14620 01db 9742     		.uleb128 0x2117
 14621 01dd 19       		.uleb128 0x19
 14622 01de 01       		.uleb128 0x1
 14623 01df 13       		.uleb128 0x13
 14624 01e0 00       		.byte	0
 14625 01e1 00       		.byte	0
 14626 01e2 23       		.uleb128 0x23
 14627 01e3 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 313


 14628 01e4 01       		.byte	0x1
 14629 01e5 55       		.uleb128 0x55
 14630 01e6 17       		.uleb128 0x17
 14631 01e7 01       		.uleb128 0x1
 14632 01e8 13       		.uleb128 0x13
 14633 01e9 00       		.byte	0
 14634 01ea 00       		.byte	0
 14635 01eb 24       		.uleb128 0x24
 14636 01ec 2E       		.uleb128 0x2e
 14637 01ed 01       		.byte	0x1
 14638 01ee 3F       		.uleb128 0x3f
 14639 01ef 19       		.uleb128 0x19
 14640 01f0 03       		.uleb128 0x3
 14641 01f1 0E       		.uleb128 0xe
 14642 01f2 3A       		.uleb128 0x3a
 14643 01f3 0B       		.uleb128 0xb
 14644 01f4 3B       		.uleb128 0x3b
 14645 01f5 05       		.uleb128 0x5
 14646 01f6 11       		.uleb128 0x11
 14647 01f7 01       		.uleb128 0x1
 14648 01f8 12       		.uleb128 0x12
 14649 01f9 06       		.uleb128 0x6
 14650 01fa 40       		.uleb128 0x40
 14651 01fb 18       		.uleb128 0x18
 14652 01fc 9642     		.uleb128 0x2116
 14653 01fe 19       		.uleb128 0x19
 14654 01ff 01       		.uleb128 0x1
 14655 0200 13       		.uleb128 0x13
 14656 0201 00       		.byte	0
 14657 0202 00       		.byte	0
 14658 0203 25       		.uleb128 0x25
 14659 0204 05       		.uleb128 0x5
 14660 0205 00       		.byte	0
 14661 0206 03       		.uleb128 0x3
 14662 0207 08       		.uleb128 0x8
 14663 0208 3A       		.uleb128 0x3a
 14664 0209 0B       		.uleb128 0xb
 14665 020a 3B       		.uleb128 0x3b
 14666 020b 05       		.uleb128 0x5
 14667 020c 49       		.uleb128 0x49
 14668 020d 13       		.uleb128 0x13
 14669 020e 02       		.uleb128 0x2
 14670 020f 18       		.uleb128 0x18
 14671 0210 00       		.byte	0
 14672 0211 00       		.byte	0
 14673 0212 26       		.uleb128 0x26
 14674 0213 2E       		.uleb128 0x2e
 14675 0214 01       		.byte	0x1
 14676 0215 3F       		.uleb128 0x3f
 14677 0216 19       		.uleb128 0x19
 14678 0217 03       		.uleb128 0x3
 14679 0218 0E       		.uleb128 0xe
 14680 0219 3A       		.uleb128 0x3a
 14681 021a 0B       		.uleb128 0xb
 14682 021b 3B       		.uleb128 0x3b
 14683 021c 05       		.uleb128 0x5
 14684 021d 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 314


 14685 021e 01       		.uleb128 0x1
 14686 021f 12       		.uleb128 0x12
 14687 0220 06       		.uleb128 0x6
 14688 0221 40       		.uleb128 0x40
 14689 0222 18       		.uleb128 0x18
 14690 0223 9742     		.uleb128 0x2117
 14691 0225 19       		.uleb128 0x19
 14692 0226 01       		.uleb128 0x1
 14693 0227 13       		.uleb128 0x13
 14694 0228 00       		.byte	0
 14695 0229 00       		.byte	0
 14696 022a 27       		.uleb128 0x27
 14697 022b 26       		.uleb128 0x26
 14698 022c 00       		.byte	0
 14699 022d 49       		.uleb128 0x49
 14700 022e 13       		.uleb128 0x13
 14701 022f 00       		.byte	0
 14702 0230 00       		.byte	0
 14703 0231 28       		.uleb128 0x28
 14704 0232 34       		.uleb128 0x34
 14705 0233 00       		.byte	0
 14706 0234 03       		.uleb128 0x3
 14707 0235 0E       		.uleb128 0xe
 14708 0236 3A       		.uleb128 0x3a
 14709 0237 0B       		.uleb128 0xb
 14710 0238 3B       		.uleb128 0x3b
 14711 0239 05       		.uleb128 0x5
 14712 023a 49       		.uleb128 0x49
 14713 023b 13       		.uleb128 0x13
 14714 023c 3F       		.uleb128 0x3f
 14715 023d 19       		.uleb128 0x19
 14716 023e 3C       		.uleb128 0x3c
 14717 023f 19       		.uleb128 0x19
 14718 0240 00       		.byte	0
 14719 0241 00       		.byte	0
 14720 0242 00       		.byte	0
 14721              		.section	.debug_aranges,"",%progbits
 14722 0000 8C000000 		.4byte	0x8c
 14723 0004 0200     		.2byte	0x2
 14724 0006 00000000 		.4byte	.Ldebug_info0
 14725 000a 04       		.byte	0x4
 14726 000b 00       		.byte	0
 14727 000c 0000     		.2byte	0
 14728 000e 0000     		.2byte	0
 14729 0010 00000000 		.4byte	.LFB64
 14730 0014 18000000 		.4byte	.LFE64-.LFB64
 14731 0018 00000000 		.4byte	.LFB65
 14732 001c 20000000 		.4byte	.LFE65-.LFB65
 14733 0020 00000000 		.4byte	.LFB66
 14734 0024 F4010000 		.4byte	.LFE66-.LFB66
 14735 0028 00000000 		.4byte	.LFB67
 14736 002c 180A0000 		.4byte	.LFE67-.LFB67
 14737 0030 00000000 		.4byte	.LFB68
 14738 0034 CC050000 		.4byte	.LFE68-.LFB68
 14739 0038 00000000 		.4byte	.LFB69
 14740 003c 34030000 		.4byte	.LFE69-.LFB69
 14741 0040 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 315


 14742 0044 B0010000 		.4byte	.LFE70-.LFB70
 14743 0048 00000000 		.4byte	.LFB71
 14744 004c 0C070000 		.4byte	.LFE71-.LFB71
 14745 0050 00000000 		.4byte	.LFB72
 14746 0054 70090000 		.4byte	.LFE72-.LFB72
 14747 0058 00000000 		.4byte	.LFB73
 14748 005c 18080000 		.4byte	.LFE73-.LFB73
 14749 0060 00000000 		.4byte	.LFB74
 14750 0064 70120000 		.4byte	.LFE74-.LFB74
 14751 0068 00000000 		.4byte	.LFB75
 14752 006c 0C010000 		.4byte	.LFE75-.LFB75
 14753 0070 00000000 		.4byte	.LFB76
 14754 0074 A8000000 		.4byte	.LFE76-.LFB76
 14755 0078 00000000 		.4byte	.LFB77
 14756 007c 58060000 		.4byte	.LFE77-.LFB77
 14757 0080 00000000 		.4byte	.LFB78
 14758 0084 08010000 		.4byte	.LFE78-.LFB78
 14759 0088 00000000 		.4byte	0
 14760 008c 00000000 		.4byte	0
 14761              		.section	.debug_ranges,"",%progbits
 14762              	.Ldebug_ranges0:
 14763 0000 68010000 		.4byte	.LBB4
 14764 0004 AA010000 		.4byte	.LBE4
 14765 0008 AC010000 		.4byte	.LBB5
 14766 000c F2010000 		.4byte	.LBE5
 14767 0010 00000000 		.4byte	0
 14768 0014 00000000 		.4byte	0
 14769 0018 3A000000 		.4byte	.LBB6
 14770 001c 40010000 		.4byte	.LBE6
 14771 0020 42010000 		.4byte	.LBB7
 14772 0024 BC010000 		.4byte	.LBE7
 14773 0028 00000000 		.4byte	0
 14774 002c 00000000 		.4byte	0
 14775 0030 BE010000 		.4byte	.LBB8
 14776 0034 20030000 		.4byte	.LBE8
 14777 0038 22030000 		.4byte	.LBB9
 14778 003c 24030000 		.4byte	.LBE9
 14779 0040 00000000 		.4byte	0
 14780 0044 00000000 		.4byte	0
 14781 0048 00000000 		.4byte	.LFB64
 14782 004c 18000000 		.4byte	.LFE64
 14783 0050 00000000 		.4byte	.LFB65
 14784 0054 20000000 		.4byte	.LFE65
 14785 0058 00000000 		.4byte	.LFB66
 14786 005c F4010000 		.4byte	.LFE66
 14787 0060 00000000 		.4byte	.LFB67
 14788 0064 180A0000 		.4byte	.LFE67
 14789 0068 00000000 		.4byte	.LFB68
 14790 006c CC050000 		.4byte	.LFE68
 14791 0070 00000000 		.4byte	.LFB69
 14792 0074 34030000 		.4byte	.LFE69
 14793 0078 00000000 		.4byte	.LFB70
 14794 007c B0010000 		.4byte	.LFE70
 14795 0080 00000000 		.4byte	.LFB71
 14796 0084 0C070000 		.4byte	.LFE71
 14797 0088 00000000 		.4byte	.LFB72
 14798 008c 70090000 		.4byte	.LFE72
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 316


 14799 0090 00000000 		.4byte	.LFB73
 14800 0094 18080000 		.4byte	.LFE73
 14801 0098 00000000 		.4byte	.LFB74
 14802 009c 70120000 		.4byte	.LFE74
 14803 00a0 00000000 		.4byte	.LFB75
 14804 00a4 0C010000 		.4byte	.LFE75
 14805 00a8 00000000 		.4byte	.LFB76
 14806 00ac A8000000 		.4byte	.LFE76
 14807 00b0 00000000 		.4byte	.LFB77
 14808 00b4 58060000 		.4byte	.LFE77
 14809 00b8 00000000 		.4byte	.LFB78
 14810 00bc 08010000 		.4byte	.LFE78
 14811 00c0 00000000 		.4byte	0
 14812 00c4 00000000 		.4byte	0
 14813              		.section	.debug_line,"",%progbits
 14814              	.Ldebug_line0:
 14815 0000 870C0000 		.section	.debug_str,"MS",%progbits,1
 14815      0200AC01 
 14815      00000201 
 14815      FB0E0D00 
 14815      01010101 
 14816              	.LASF54:
 14817 0000 656D675F 		.ascii	"emg_act_counter\000"
 14817      6163745F 
 14817      636F756E 
 14817      74657200 
 14818              	.LASF24:
 14819 0010 73697A65 		.ascii	"sizetype\000"
 14819      74797065 
 14819      00
 14820              	.LASF61:
 14821 0019 706F7765 		.ascii	"power_cycles\000"
 14821      725F6379 
 14821      636C6573 
 14821      00
 14822              	.LASF269:
 14823 0026 706F735F 		.ascii	"pos_cycle_status\000"
 14823      6379636C 
 14823      655F7374 
 14823      61747573 
 14823      00
 14824              	.LASF145:
 14825 0037 77726973 		.ascii	"wrist_direction_association\000"
 14825      745F6469 
 14825      72656374 
 14825      696F6E5F 
 14825      6173736F 
 14826              	.LASF30:
 14827 0053 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 14827      545F4D4F 
 14827      44455F45 
 14827      4D475F46 
 14827      4346535F 
 14828              	.LASF120:
 14829 006b 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 14829      5F414443 
 14829      5F73656E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 317


 14829      736F7273 
 14829      5F706F72 
 14830              	.LASF150:
 14831 0086 75736572 		.ascii	"user\000"
 14831      00
 14832              	.LASF10:
 14833 008b 696E7433 		.ascii	"int32_t\000"
 14833      325F7400 
 14834              	.LASF310:
 14835 0093 675F7278 		.ascii	"g_rx\000"
 14835      00
 14836              	.LASF246:
 14837 0098 6F6E655F 		.ascii	"one_time_execute\000"
 14837      74696D65 
 14837      5F657865 
 14837      63757465 
 14837      00
 14838              	.LASF49:
 14839 00a9 73745F64 		.ascii	"st_data\000"
 14839      61746100 
 14840              	.LASF59:
 14841 00b1 746F7461 		.ascii	"total_runtime\000"
 14841      6C5F7275 
 14841      6E74696D 
 14841      6500
 14842              	.LASF13:
 14843 00bf 75696E74 		.ascii	"uint32\000"
 14843      333200
 14844              	.LASF231:
 14845 00c6 6E5F6C69 		.ascii	"n_line\000"
 14845      6E6500
 14846              	.LASF151:
 14847 00cd 4A4F595F 		.ascii	"JOY_spec\000"
 14847      73706563 
 14847      00
 14848              	.LASF88:
 14849 00d6 706F735F 		.ascii	"pos_lim_inf\000"
 14849      6C696D5F 
 14849      696E6600 
 14850              	.LASF335:
 14851 00e2 74656E73 		.ascii	"tension_valid\000"
 14851      696F6E5F 
 14851      76616C69 
 14851      6400
 14852              	.LASF207:
 14853 00f0 6572725F 		.ascii	"err_joy_1\000"
 14853      6A6F795F 
 14853      3100
 14854              	.LASF183:
 14855 00fa 73746174 		.ascii	"state\000"
 14855      6500
 14856              	.LASF337:
 14857 0100 6379636C 		.ascii	"cycles_interrupt_flag\000"
 14857      65735F69 
 14857      6E746572 
 14857      72757074 
 14857      5F666C61 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 318


 14858              	.LASF279:
 14859 0116 62696E5F 		.ascii	"bin_max\000"
 14859      6D617800 
 14860              	.LASF296:
 14861 011e 61646472 		.ascii	"addr_start_c\000"
 14861      5F737461 
 14861      72745F63 
 14861      00
 14862              	.LASF29:
 14863 012b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 14863      545F4D4F 
 14863      44455F45 
 14863      4D475F46 
 14863      43465300 
 14864              	.LASF92:
 14865 013f 63757272 		.ascii	"curr_lookup\000"
 14865      5F6C6F6F 
 14865      6B757000 
 14866              	.LASF216:
 14867 014b 70776D5F 		.ascii	"pwm_input\000"
 14867      696E7075 
 14867      7400
 14868              	.LASF57:
 14869 0155 72657374 		.ascii	"rest_counter\000"
 14869      5F636F75 
 14869      6E746572 
 14869      00
 14870              	.LASF135:
 14871 0162 73745F4D 		.ascii	"st_MASTER_spec\000"
 14871      41535445 
 14871      525F7370 
 14871      656300
 14872              	.LASF28:
 14873 0171 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 14873      545F4D4F 
 14873      44455F45 
 14873      4D475F49 
 14873      4E544547 
 14874              	.LASF262:
 14875 0189 765F636F 		.ascii	"v_count\000"
 14875      756E7400 
 14876              	.LASF188:
 14877 0191 72785F64 		.ascii	"rx_data\000"
 14877      61746100 
 14878              	.LASF250:
 14879 0199 7676765F 		.ascii	"vvv_value\000"
 14879      76616C75 
 14879      6500
 14880              	.LASF14:
 14881 01a3 696E7438 		.ascii	"int8\000"
 14881      00
 14882              	.LASF193:
 14883 01a8 696E666F 		.ascii	"info_\000"
 14883      5F00
 14884              	.LASF318:
 14885 01ae 66696C74 		.ascii	"filt_emg\000"
 14885      5F656D67 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 319


 14885      00
 14886              	.LASF107:
 14887 01b7 73745F65 		.ascii	"st_emg\000"
 14887      6D6700
 14888              	.LASF55:
 14889 01be 706F7369 		.ascii	"position_hist\000"
 14889      74696F6E 
 14889      5F686973 
 14889      7400
 14890              	.LASF175:
 14891 01cc 50524550 		.ascii	"PREPARE_DATA\000"
 14891      4152455F 
 14891      44415441 
 14891      00
 14892              	.LASF158:
 14893 01d9 74656D70 		.ascii	"temp_value\000"
 14893      5F76616C 
 14893      756500
 14894              	.LASF276:
 14895 01e4 7468725F 		.ascii	"thr_pos\000"
 14895      706F7300 
 14896              	.LASF142:
 14897 01ec 73745F57 		.ascii	"st_WR_spec\000"
 14897      525F7370 
 14897      656300
 14898              	.LASF209:
 14899 01f7 6572725F 		.ascii	"err_joy_2\000"
 14899      6A6F795F 
 14899      3200
 14900              	.LASF52:
 14901 0201 72656164 		.ascii	"ready\000"
 14901      7900
 14902              	.LASF104:
 14903 0207 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 14903      6964785F 
 14903      7573655F 
 14903      666F725F 
 14903      636F6E74 
 14904              	.LASF161:
 14905 021f 6761696E 		.ascii	"gain\000"
 14905      00
 14906              	.LASF65:
 14907 0224 73745F64 		.ascii	"st_device\000"
 14907      65766963 
 14907      6500
 14908              	.LASF27:
 14909 022e 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 14909      545F4D4F 
 14909      44455F45 
 14909      4D475F50 
 14909      524F504F 
 14910              	.LASF70:
 14911 024a 7573655F 		.ascii	"use_2nd_motor_flag\000"
 14911      326E645F 
 14911      6D6F746F 
 14911      725F666C 
 14911      616700
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 320


 14912              	.LASF255:
 14913 025d 55445F63 		.ascii	"UD_counter\000"
 14913      6F756E74 
 14913      657200
 14914              	.LASF62:
 14915 0268 65786365 		.ascii	"excessive_signal_activity\000"
 14915      73736976 
 14915      655F7369 
 14915      676E616C 
 14915      5F616374 
 14916              	.LASF171:
 14917 0282 53554D5F 		.ascii	"SUM_AND_MEAN\000"
 14917      414E445F 
 14917      4D45414E 
 14917      00
 14918              	.LASF114:
 14919 028f 72656164 		.ascii	"read_imu_flag\000"
 14919      5F696D75 
 14919      5F666C61 
 14919      6700
 14920              	.LASF122:
 14921 029d 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 14921      72645F45 
 14921      4D475F68 
 14921      6973746F 
 14921      72795F6F 
 14922              	.LASF259:
 14923 02b6 66697273 		.ascii	"first_tension_valid\000"
 14923      745F7465 
 14923      6E73696F 
 14923      6E5F7661 
 14923      6C696400 
 14924              	.LASF320:
 14925 02ca 74696D65 		.ascii	"timer_value\000"
 14925      725F7661 
 14925      6C756500 
 14926              	.LASF4:
 14927 02d6 6C6F6E67 		.ascii	"long int\000"
 14927      20696E74 
 14927      00
 14928              	.LASF148:
 14929 02df 756E7573 		.ascii	"unused_bytes1\000"
 14929      65645F62 
 14929      79746573 
 14929      3100
 14930              	.LASF196:
 14931 02ed 454D475F 		.ascii	"EMG_history_info_\000"
 14931      68697374 
 14931      6F72795F 
 14931      696E666F 
 14931      5F00
 14932              	.LASF221:
 14933 02ff 53485F45 		.ascii	"SH_ENC_L\000"
 14933      4E435F4C 
 14933      00
 14934              	.LASF69:
 14935 0308 72657365 		.ascii	"reset_counters\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 321


 14935      745F636F 
 14935      756E7465 
 14935      727300
 14936              	.LASF274:
 14937 0317 62696E5F 		.ascii	"bin_threshold\000"
 14937      74687265 
 14937      73686F6C 
 14937      6400
 14938              	.LASF125:
 14939 0325 75736572 		.ascii	"user_emg\000"
 14939      5F656D67 
 14939      00
 14940              	.LASF245:
 14941 032e 73616665 		.ascii	"safe_startup_motor_activation\000"
 14941      5F737461 
 14941      72747570 
 14941      5F6D6F74 
 14941      6F725F61 
 14942              	.LASF64:
 14943 034c 756E7573 		.ascii	"unused_bytes\000"
 14943      65645F62 
 14943      79746573 
 14943      00
 14944              	.LASF154:
 14945 0359 61636365 		.ascii	"accel_value\000"
 14945      6C5F7661 
 14945      6C756500 
 14946              	.LASF309:
 14947 0365 675F6164 		.ascii	"g_adc_measOld\000"
 14947      635F6D65 
 14947      61734F6C 
 14947      6400
 14948              	.LASF234:
 14949 0373 6175785F 		.ascii	"aux_encoder\000"
 14949      656E636F 
 14949      64657200 
 14950              	.LASF53:
 14951 037f 73745F63 		.ascii	"st_counters\000"
 14951      6F756E74 
 14951      65727300 
 14952              	.LASF220:
 14953 038b 53485F4D 		.ascii	"SH_MOT\000"
 14953      4F5400
 14954              	.LASF319:
 14955 0392 66696C74 		.ascii	"filt_detect_pc\000"
 14955      5F646574 
 14955      6563745F 
 14955      706300
 14956              	.LASF17:
 14957 03a1 666C6F61 		.ascii	"float32\000"
 14957      74333200 
 14958              	.LASF230:
 14959 03a9 656E636F 		.ascii	"encoder_reading_SPI\000"
 14959      6465725F 
 14959      72656164 
 14959      696E675F 
 14959      53504900 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 322


 14960              	.LASF361:
 14961 03bd 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\ControlloDiVersione\\"
 14961      73657273 
 14961      5C6D676E 
 14961      6F63636F 
 14961      5C446F63 
 14962 03ec 57495348 		.ascii	"WISH_TOAST\\Scheda_Mano\\Generic.cydsn\000"
 14962      5F544F41 
 14962      53545C53 
 14962      63686564 
 14962      615F4D61 
 14963              	.LASF357:
 14964 0411 666C6167 		.ascii	"flag_vibrotactile\000"
 14964      5F766962 
 14964      726F7461 
 14964      6374696C 
 14964      6500
 14965              	.LASF243:
 14966 0423 6572726F 		.ascii	"error\000"
 14966      7200
 14967              	.LASF178:
 14968 0429 57524954 		.ascii	"WRITE_END\000"
 14968      455F454E 
 14968      4400
 14969              	.LASF256:
 14970 0433 4C525F63 		.ascii	"LR_counter\000"
 14970      6F756E74 
 14970      657200
 14971              	.LASF350:
 14972 043e 706F735F 		.ascii	"pos_reconstruct\000"
 14972      7265636F 
 14972      6E737472 
 14972      75637400 
 14973              	.LASF264:
 14974 044e 70776D5F 		.ascii	"pwm_limit_search\000"
 14974      6C696D69 
 14974      745F7365 
 14974      61726368 
 14974      00
 14975              	.LASF0:
 14976 045f 7369676E 		.ascii	"signed char\000"
 14976      65642063 
 14976      68617200 
 14977              	.LASF124:
 14978 046b 75736572 		.ascii	"user_code_string\000"
 14978      5F636F64 
 14978      655F7374 
 14978      72696E67 
 14978      00
 14979              	.LASF162:
 14980 047c 73745F63 		.ascii	"st_calib\000"
 14980      616C6962 
 14980      00
 14981              	.LASF203:
 14982 0485 6572725F 		.ascii	"err_emg_1\000"
 14982      656D675F 
 14982      3100
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 323


 14983              	.LASF204:
 14984 048f 6572725F 		.ascii	"err_emg_2\000"
 14984      656D675F 
 14984      3200
 14985              	.LASF112:
 14986 0499 73776974 		.ascii	"switch_emg\000"
 14986      63685F65 
 14986      6D6700
 14987              	.LASF331:
 14988 04a4 656D675F 		.ascii	"emg_2_status\000"
 14988      325F7374 
 14988      61747573 
 14988      00
 14989              	.LASF343:
 14990 04b1 4144435F 		.ascii	"ADC_buf\000"
 14990      62756600 
 14991              	.LASF336:
 14992 04b9 696E7465 		.ascii	"interrupt_flag\000"
 14992      72727570 
 14992      745F666C 
 14992      616700
 14993              	.LASF285:
 14994 04c8 73746570 		.ascii	"step\000"
 14994      00
 14995              	.LASF223:
 14996 04cd 63757272 		.ascii	"curr_error_sum\000"
 14996      5F657272 
 14996      6F725F73 
 14996      756D00
 14997              	.LASF1:
 14998 04dc 756E7369 		.ascii	"unsigned char\000"
 14998      676E6564 
 14998      20636861 
 14998      7200
 14999              	.LASF98:
 15000 04ea 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 15000      72657665 
 15000      72735F6D 
 15000      6F746F72 
 15000      5F666C61 
 15001              	.LASF294:
 15002 0500 726F775F 		.ascii	"row_start\000"
 15002      73746172 
 15002      7400
 15003              	.LASF340:
 15004 050a 666F7263 		.ascii	"forced_open\000"
 15004      65645F6F 
 15004      70656E00 
 15005              	.LASF238:
 15006 0516 73706565 		.ascii	"speed_encoder\000"
 15006      645F656E 
 15006      636F6465 
 15006      7200
 15007              	.LASF304:
 15008 0524 675F7265 		.ascii	"g_refNew\000"
 15008      664E6577 
 15008      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 324


 15009              	.LASF283:
 15010 052d 63757272 		.ascii	"curr_off\000"
 15010      5F6F6666 
 15010      00
 15011              	.LASF68:
 15012 0536 72696768 		.ascii	"right_left\000"
 15012      745F6C65 
 15012      667400
 15013              	.LASF96:
 15014 0541 656E636F 		.ascii	"encoder_line\000"
 15014      6465725F 
 15014      6C696E65 
 15014      00
 15015              	.LASF330:
 15016 054e 656D675F 		.ascii	"emg_1_status\000"
 15016      315F7374 
 15016      61747573 
 15016      00
 15017              	.LASF153:
 15018 055b 666C6167 		.ascii	"flags\000"
 15018      7300
 15019              	.LASF202:
 15020 0561 68616E64 		.ascii	"handle_value\000"
 15020      6C655F76 
 15020      616C7565 
 15020      00
 15021              	.LASF20:
 15022 056e 63686172 		.ascii	"char\000"
 15022      00
 15023              	.LASF260:
 15024 0573 64657465 		.ascii	"detect_power_cycle_prev\000"
 15024      63745F70 
 15024      6F776572 
 15024      5F637963 
 15024      6C655F70 
 15025              	.LASF91:
 15026 058b 6D61785F 		.ascii	"max_step_pos\000"
 15026      73746570 
 15026      5F706F73 
 15026      00
 15027              	.LASF345:
 15028 0598 70776D5F 		.ascii	"pwm_sign\000"
 15028      7369676E 
 15028      00
 15029              	.LASF229:
 15030 05a1 6D6F746F 		.ascii	"motor_control_generic\000"
 15030      725F636F 
 15030      6E74726F 
 15030      6C5F6765 
 15030      6E657269 
 15031              	.LASF354:
 15032 05b7 675F696D 		.ascii	"g_imu\000"
 15032      7500
 15033              	.LASF317:
 15034 05bd 66696C74 		.ascii	"filt_vel\000"
 15034      5F76656C 
 15034      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 325


 15035              	.LASF301:
 15036 05c6 675F7265 		.ascii	"g_ref_vibrotactile\000"
 15036      665F7669 
 15036      62726F74 
 15036      61637469 
 15036      6C6500
 15037              	.LASF97:
 15038 05d9 70776D5F 		.ascii	"pwm_rate_limiter\000"
 15038      72617465 
 15038      5F6C696D 
 15038      69746572 
 15038      00
 15039              	.LASF77:
 15040 05ea 6B5F645F 		.ascii	"k_d_c\000"
 15040      6300
 15041              	.LASF174:
 15042 05f0 6164635F 		.ascii	"adc_status\000"
 15042      73746174 
 15042      757300
 15043              	.LASF102:
 15044 05fb 6D5F6D75 		.ascii	"m_mult\000"
 15044      6C7400
 15045              	.LASF76:
 15046 0602 6B5F695F 		.ascii	"k_i_c\000"
 15046      6300
 15047              	.LASF227:
 15048 0608 6D6F746F 		.ascii	"motor_dir\000"
 15048      725F6469 
 15048      7200
 15049              	.LASF278:
 15050 0612 62696E5F 		.ascii	"bin_st\000"
 15050      737400
 15051              	.LASF181:
 15052 0619 4953525F 		.ascii	"ISR_RS485_RX_ExInterrupt\000"
 15052      52533438 
 15052      355F5258 
 15052      5F457849 
 15052      6E746572 
 15053              	.LASF89:
 15054 0632 706F735F 		.ascii	"pos_lim_sup\000"
 15054      6C696D5F 
 15054      73757000 
 15055              	.LASF160:
 15056 063e 6F6C645F 		.ascii	"old_value\000"
 15056      76616C75 
 15056      6500
 15057              	.LASF110:
 15058 0648 656D675F 		.ascii	"emg_speed\000"
 15058      73706565 
 15058      6400
 15059              	.LASF129:
 15060 0652 72657374 		.ascii	"rest_vel\000"
 15060      5F76656C 
 15060      00
 15061              	.LASF168:
 15062 065b 4E4F524D 		.ascii	"NORMAL\000"
 15062      414C00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 326


 15063              	.LASF215:
 15064 0662 6D6F746F 		.ascii	"motor_control_SH\000"
 15064      725F636F 
 15064      6E74726F 
 15064      6C5F5348 
 15064      00
 15065              	.LASF352:
 15066 0673 7046696C 		.ascii	"pFile\000"
 15066      6500
 15067              	.LASF222:
 15068 0679 706F735F 		.ascii	"pos_error_sum\000"
 15068      6572726F 
 15068      725F7375 
 15068      6D00
 15069              	.LASF121:
 15070 0687 4144435F 		.ascii	"ADC_conf\000"
 15070      636F6E66 
 15070      00
 15071              	.LASF326:
 15072 0690 6465765F 		.ascii	"dev_tension_f\000"
 15072      74656E73 
 15072      696F6E5F 
 15072      6600
 15073              	.LASF167:
 15074 069e 73745F72 		.ascii	"st_ref_vibrotactile\000"
 15074      65665F76 
 15074      6962726F 
 15074      74616374 
 15074      696C6500 
 15075              	.LASF79:
 15076 06b2 6B5F695F 		.ascii	"k_i_dl\000"
 15076      646C00
 15077              	.LASF50:
 15078 06b9 62756666 		.ascii	"buffer\000"
 15078      657200
 15079              	.LASF81:
 15080 06c0 6B5F705F 		.ascii	"k_p_c_dl\000"
 15080      635F646C 
 15080      00
 15081              	.LASF189:
 15082 06c9 72785F64 		.ascii	"rx_data_type\000"
 15082      6174615F 
 15082      74797065 
 15082      00
 15083              	.LASF355:
 15084 06d6 675F696D 		.ascii	"g_imuNew\000"
 15084      754E6577 
 15084      00
 15085              	.LASF165:
 15086 06df 73706565 		.ascii	"speed\000"
 15086      6400
 15087              	.LASF228:
 15088 06e5 706F7369 		.ascii	"position_counter\000"
 15088      74696F6E 
 15088      5F636F75 
 15088      6E746572 
 15088      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 327


 15089              	.LASF287:
 15090 06f6 74696D65 		.ascii	"timer_value_e\000"
 15090      725F7661 
 15090      6C75655F 
 15090      6500
 15091              	.LASF184:
 15092 0704 64617461 		.ascii	"data_packet_index\000"
 15092      5F706163 
 15092      6B65745F 
 15092      696E6465 
 15092      7800
 15093              	.LASF186:
 15094 0716 64617461 		.ascii	"data_packet_buffer\000"
 15094      5F706163 
 15094      6B65745F 
 15094      62756666 
 15094      657200
 15095              	.LASF200:
 15096 0729 73745F72 		.ascii	"st_ref_p\000"
 15096      65665F70 
 15096      00
 15097              	.LASF329:
 15098 0732 6379636C 		.ascii	"cycles_status\000"
 15098      65735F73 
 15098      74617475 
 15098      7300
 15099              	.LASF191:
 15100 0740 636F756E 		.ascii	"counter_calibration\000"
 15100      7465725F 
 15100      63616C69 
 15100      62726174 
 15100      696F6E00 
 15101              	.LASF306:
 15102 0754 675F6D65 		.ascii	"g_meas\000"
 15102      617300
 15103              	.LASF286:
 15104 075b 74696D65 		.ascii	"timer_value_s\000"
 15104      725F7661 
 15104      6C75655F 
 15104      7300
 15105              	.LASF349:
 15106 0769 456E636F 		.ascii	"Encoder_Check\000"
 15106      6465725F 
 15106      43686563 
 15106      6B00
 15107              	.LASF242:
 15108 0777 636F6D70 		.ascii	"comp_value_encoder\000"
 15108      5F76616C 
 15108      75655F65 
 15108      6E636F64 
 15108      657200
 15109              	.LASF290:
 15110 078a 73746172 		.ascii	"start_emg_pos\000"
 15110      745F656D 
 15110      675F706F 
 15110      7300
 15111              	.LASF346:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 328


 15112 0798 64617461 		.ascii	"data_encoder_raw\000"
 15112      5F656E63 
 15112      6F646572 
 15112      5F726177 
 15112      00
 15113              	.LASF303:
 15114 07a9 675F7265 		.ascii	"g_ref\000"
 15114      6600
 15115              	.LASF25:
 15116 07af 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 15116      545F4D4F 
 15116      44455F45 
 15116      58544552 
 15116      4E414C00 
 15117              	.LASF233:
 15118 07c3 696E6465 		.ascii	"index\000"
 15118      7800
 15119              	.LASF140:
 15120 07c9 6D617869 		.ascii	"maximum_pressure_kPa\000"
 15120      6D756D5F 
 15120      70726573 
 15120      73757265 
 15120      5F6B5061 
 15121              	.LASF130:
 15122 07de 72657374 		.ascii	"rest_position_flag\000"
 15122      5F706F73 
 15122      6974696F 
 15122      6E5F666C 
 15122      616700
 15123              	.LASF132:
 15124 07f1 6A6F7973 		.ascii	"joystick_closure_speed\000"
 15124      7469636B 
 15124      5F636C6F 
 15124      73757265 
 15124      5F737065 
 15125              	.LASF82:
 15126 0808 6B5F695F 		.ascii	"k_i_c_dl\000"
 15126      635F646C 
 15126      00
 15127              	.LASF190:
 15128 0811 7061636B 		.ascii	"package_count\000"
 15128      6167655F 
 15128      636F756E 
 15128      7400
 15129              	.LASF38:
 15130 081f 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 15130      5F414E44 
 15130      5F504F53 
 15130      5F434F4E 
 15130      54524F4C 
 15131              	.LASF163:
 15132 0834 656E6162 		.ascii	"enabled\000"
 15132      6C656400 
 15133              	.LASF5:
 15134 083c 6C6F6E67 		.ascii	"long unsigned int\000"
 15134      20756E73 
 15134      69676E65 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 329


 15134      6420696E 
 15134      7400
 15135              	.LASF353:
 15136 084e 70454D47 		.ascii	"pEMGHFile\000"
 15136      4846696C 
 15136      6500
 15137              	.LASF176:
 15138 0858 57524954 		.ascii	"WRITE_CYCLES\000"
 15138      455F4359 
 15138      434C4553 
 15138      00
 15139              	.LASF134:
 15140 0865 6A6F7973 		.ascii	"joystick_gains\000"
 15140      7469636B 
 15140      5F676169 
 15140      6E7300
 15141              	.LASF45:
 15142 0874 686F6C64 		.ascii	"hold_curr\000"
 15142      5F637572 
 15142      7200
 15143              	.LASF31:
 15144 087e 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 15144      545F4D4F 
 15144      44455F4A 
 15144      4F595354 
 15144      49434B00 
 15145              	.LASF60:
 15146 0892 746F7461 		.ascii	"total_time_rest\000"
 15146      6C5F7469 
 15146      6D655F72 
 15146      65737400 
 15147              	.LASF84:
 15148 08a2 61637469 		.ascii	"activ\000"
 15148      7600
 15149              	.LASF267:
 15150 08a8 6D696E5F 		.ascii	"min_tension\000"
 15150      74656E73 
 15150      696F6E00 
 15151              	.LASF341:
 15152 08b4 62617474 		.ascii	"battery_low_SoC\000"
 15152      6572795F 
 15152      6C6F775F 
 15152      536F4300 
 15153              	.LASF199:
 15154 08c4 6D6F746F 		.ascii	"motor_idx\000"
 15154      725F6964 
 15154      7800
 15155              	.LASF101:
 15156 08ce 6D5F6F66 		.ascii	"m_off\000"
 15156      6600
 15157              	.LASF334:
 15158 08d4 72657365 		.ascii	"reset_last_value_flag\000"
 15158      745F6C61 
 15158      73745F76 
 15158      616C7565 
 15158      5F666C61 
 15159              	.LASF157:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 330


 15160 08ea 71756174 		.ascii	"quat_value\000"
 15160      5F76616C 
 15160      756500
 15161              	.LASF127:
 15162 08f5 72657374 		.ascii	"rest_pos\000"
 15162      5F706F73 
 15162      00
 15163              	.LASF40:
 15164 08fe 63757272 		.ascii	"curr\000"
 15164      00
 15165              	.LASF177:
 15166 0903 57414954 		.ascii	"WAIT_QUERY\000"
 15166      5F515545 
 15166      525900
 15167              	.LASF94:
 15168 090e 696E7075 		.ascii	"input_mode\000"
 15168      745F6D6F 
 15168      646500
 15169              	.LASF36:
 15170 0919 434F4E54 		.ascii	"CONTROL_PWM\000"
 15170      524F4C5F 
 15170      50574D00 
 15171              	.LASF268:
 15172 0925 6379636C 		.ascii	"cycles_counter_update\000"
 15172      65735F63 
 15172      6F756E74 
 15172      65725F75 
 15172      70646174 
 15173              	.LASF359:
 15174 093b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 15174      43313120 
 15174      352E342E 
 15174      31203230 
 15174      31363036 
 15175 096e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 15175      20726576 
 15175      6973696F 
 15175      6E203233 
 15175      37373135 
 15176 09a1 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 15176      66756E63 
 15176      74696F6E 
 15176      2D736563 
 15176      74696F6E 
 15177              	.LASF42:
 15178 09c9 73745F72 		.ascii	"st_ref\000"
 15178      656600
 15179              	.LASF321:
 15180 09d0 74696D65 		.ascii	"timer_value0\000"
 15180      725F7661 
 15180      6C756530 
 15180      00
 15181              	.LASF126:
 15182 09dd 73745F53 		.ascii	"st_SH_spec\000"
 15182      485F7370 
 15182      656300
 15183              	.LASF248:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 331


 15184 09e8 765F7661 		.ascii	"v_value\000"
 15184      6C756500 
 15185              	.LASF313:
 15186 09f0 63616C69 		.ascii	"calib\000"
 15186      6200
 15187              	.LASF138:
 15188 09f6 73745F46 		.ascii	"st_FB_spec\000"
 15188      425F7370 
 15188      656300
 15189              	.LASF6:
 15190 0a01 6C6F6E67 		.ascii	"long long int\000"
 15190      206C6F6E 
 15190      6720696E 
 15190      7400
 15191              	.LASF34:
 15192 0a0f 53485F63 		.ascii	"SH_control_mode\000"
 15192      6F6E7472 
 15192      6F6C5F6D 
 15192      6F646500 
 15193              	.LASF195:
 15194 0a1f 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 15194      4E445F4D 
 15194      4F544F52 
 15194      5F494458 
 15194      00
 15195              	.LASF342:
 15196 0a30 6368616E 		.ascii	"change_ext_ref_flag\000"
 15196      67655F65 
 15196      78745F72 
 15196      65665F66 
 15196      6C616700 
 15197              	.LASF19:
 15198 0a44 646F7562 		.ascii	"double\000"
 15198      6C6500
 15199              	.LASF315:
 15200 0a4b 66696C74 		.ascii	"filt_curr_diff\000"
 15200      5F637572 
 15200      725F6469 
 15200      666600
 15201              	.LASF211:
 15202 0a5a 706F735F 		.ascii	"pos_sum\000"
 15202      73756D00 
 15203              	.LASF214:
 15204 0a62 696E7465 		.ascii	"interrupt_manager\000"
 15204      72727570 
 15204      745F6D61 
 15204      6E616765 
 15204      7200
 15205              	.LASF100:
 15206 0a74 456E635F 		.ascii	"Enc_raw_read_conf\000"
 15206      7261775F 
 15206      72656164 
 15206      5F636F6E 
 15206      6600
 15207              	.LASF212:
 15208 0a86 636F6D70 		.ascii	"compute_SoftHand_2_motors_emg_reference\000"
 15208      7574655F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 332


 15208      536F6674 
 15208      48616E64 
 15208      5F325F6D 
 15209              	.LASF166:
 15210 0aae 72657065 		.ascii	"repetitions\000"
 15210      74697469 
 15210      6F6E7300 
 15211              	.LASF90:
 15212 0aba 6D61785F 		.ascii	"max_step_neg\000"
 15212      73746570 
 15212      5F6E6567 
 15212      00
 15213              	.LASF247:
 15214 0ac7 636F756E 		.ascii	"count_startup_motor\000"
 15214      745F7374 
 15214      61727475 
 15214      705F6D6F 
 15214      746F7200 
 15215              	.LASF137:
 15216 0adb 736C6176 		.ascii	"slave_ID\000"
 15216      655F4944 
 15216      00
 15217              	.LASF172:
 15218 0ae4 57414954 		.ascii	"WAIT\000"
 15218      00
 15219              	.LASF18:
 15220 0ae9 666C6F61 		.ascii	"float\000"
 15220      7400
 15221              	.LASF116:
 15222 0aef 494D555F 		.ascii	"IMU_conf\000"
 15222      636F6E66 
 15222      00
 15223              	.LASF261:
 15224 0af8 636F756E 		.ascii	"count\000"
 15224      7400
 15225              	.LASF46:
 15226 0afe 73745F61 		.ascii	"st_adc_meas\000"
 15226      64635F6D 
 15226      65617300 
 15227              	.LASF272:
 15228 0b0a 656D675F 		.ascii	"emg_excess_status\000"
 15228      65786365 
 15228      73735F73 
 15228      74617475 
 15228      7300
 15229              	.LASF298:
 15230 0b1c 6D5F6164 		.ascii	"m_addr\000"
 15230      647200
 15231              	.LASF312:
 15232 0b23 635F6D65 		.ascii	"c_mem\000"
 15232      6D00
 15233              	.LASF8:
 15234 0b29 756E7369 		.ascii	"unsigned int\000"
 15234      676E6564 
 15234      20696E74 
 15234      00
 15235              	.LASF277:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 333


 15236 0b36 6D61785F 		.ascii	"max_pos\000"
 15236      706F7300 
 15237              	.LASF302:
 15238 0b3e 675F7265 		.ascii	"g_refNew_vibrotactile\000"
 15238      664E6577 
 15238      5F766962 
 15238      726F7461 
 15238      6374696C 
 15239              	.LASF351:
 15240 0b54 72657374 		.ascii	"rest_pos_curr_ref\000"
 15240      5F706F73 
 15240      5F637572 
 15240      725F7265 
 15240      6600
 15241              	.LASF147:
 15242 0b66 666C6167 		.ascii	"flag\000"
 15242      00
 15243              	.LASF95:
 15244 0b6b 636F6E74 		.ascii	"control_mode\000"
 15244      726F6C5F 
 15244      6D6F6465 
 15244      00
 15245              	.LASF21:
 15246 0b78 63797374 		.ascii	"cystatus\000"
 15246      61747573 
 15246      00
 15247              	.LASF26:
 15248 0b81 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 15248      545F4D4F 
 15248      44455F45 
 15248      4E434F44 
 15248      45523300 
 15249              	.LASF113:
 15250 0b95 73745F69 		.ascii	"st_imu\000"
 15250      6D7500
 15251              	.LASF206:
 15252 0b9c 63757272 		.ascii	"current_emg\000"
 15252      656E745F 
 15252      656D6700 
 15253              	.LASF187:
 15254 0ba8 72785F71 		.ascii	"rx_queue\000"
 15254      75657565 
 15254      00
 15255              	.LASF257:
 15256 0bb1 55445F6D 		.ascii	"UD_mean_value\000"
 15256      65616E5F 
 15256      76616C75 
 15256      6500
 15257              	.LASF232:
 15258 0bbf 6173736F 		.ascii	"assoc_motor\000"
 15258      635F6D6F 
 15258      746F7200 
 15259              	.LASF47:
 15260 0bcb 6164645F 		.ascii	"add_emg\000"
 15260      656D6700 
 15261              	.LASF219:
 15262 0bd3 695F7265 		.ascii	"i_ref\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 334


 15262      6600
 15263              	.LASF108:
 15264 0bd9 656D675F 		.ascii	"emg_threshold\000"
 15264      74687265 
 15264      73686F6C 
 15264      6400
 15265              	.LASF291:
 15266 0be7 73617665 		.ascii	"save_cycles_eeprom\000"
 15266      5F637963 
 15266      6C65735F 
 15266      65657072 
 15266      6F6D00
 15267              	.LASF105:
 15268 0bfa 6D6F746F 		.ascii	"motor_handle_ratio\000"
 15268      725F6861 
 15268      6E646C65 
 15268      5F726174 
 15268      696F00
 15269              	.LASF56:
 15270 0c0d 63757272 		.ascii	"current_hist\000"
 15270      656E745F 
 15270      68697374 
 15270      00
 15271              	.LASF37:
 15272 0c1a 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 15272      524F4C5F 
 15272      43555252 
 15272      454E5400 
 15273              	.LASF23:
 15274 0c2a 6C6F6E67 		.ascii	"long double\000"
 15274      20646F75 
 15274      626C6500 
 15275              	.LASF170:
 15276 0c36 44495343 		.ascii	"DISCARD\000"
 15276      41524400 
 15277              	.LASF224:
 15278 0c3e 70726576 		.ascii	"prev_pos_err\000"
 15278      5F706F73 
 15278      5F657272 
 15278      00
 15279              	.LASF358:
 15280 0c4b 61636365 		.ascii	"accelerometer_matrix\000"
 15280      6C65726F 
 15280      6D657465 
 15280      725F6D61 
 15280      74726978 
 15281              	.LASF240:
 15282 0c60 696E6974 		.ascii	"init_rot\000"
 15282      5F726F74 
 15282      00
 15283              	.LASF265:
 15284 0c69 6D6F745F 		.ascii	"mot_idx\000"
 15284      69647800 
 15285              	.LASF316:
 15286 0c71 66696C74 		.ascii	"filt_i\000"
 15286      5F6900
 15287              	.LASF63:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 335


 15288 0c78 6D6F7469 		.ascii	"motion_counter\000"
 15288      6F6E5F63 
 15288      6F756E74 
 15288      657200
 15289              	.LASF314:
 15290 0c87 66696C74 		.ascii	"filt_v\000"
 15290      5F7600
 15291              	.LASF339:
 15292 0c8e 72657374 		.ascii	"rest_enabled\000"
 15292      5F656E61 
 15292      626C6564 
 15292      00
 15293              	.LASF305:
 15294 0c9b 675F7265 		.ascii	"g_refOld\000"
 15294      664F6C64 
 15294      00
 15295              	.LASF217:
 15296 0ca4 706F735F 		.ascii	"pos_error\000"
 15296      6572726F 
 15296      7200
 15297              	.LASF155:
 15298 0cae 6779726F 		.ascii	"gyro_value\000"
 15298      5F76616C 
 15298      756500
 15299              	.LASF118:
 15300 0cb9 63757272 		.ascii	"curr_time\000"
 15300      5F74696D 
 15300      6500
 15301              	.LASF103:
 15302 0cc3 646F7562 		.ascii	"double_encoder_on_off\000"
 15302      6C655F65 
 15302      6E636F64 
 15302      65725F6F 
 15302      6E5F6F66 
 15303              	.LASF266:
 15304 0cd9 6D61785F 		.ascii	"max_tension\000"
 15304      74656E73 
 15304      696F6E00 
 15305              	.LASF194:
 15306 0ce5 4D4F544F 		.ascii	"MOTOR_IDX\000"
 15306      525F4944 
 15306      5800
 15307              	.LASF241:
 15308 0cef 6C617374 		.ascii	"last_value_encoder\000"
 15308      5F76616C 
 15308      75655F65 
 15308      6E636F64 
 15308      657200
 15309              	.LASF192:
 15310 0d02 636F756E 		.ascii	"counter_tension_func\000"
 15310      7465725F 
 15310      74656E73 
 15310      696F6E5F 
 15310      66756E63 
 15311              	.LASF322:
 15312 0d17 6379636C 		.ascii	"cycle_time\000"
 15312      655F7469 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 336


 15312      6D6500
 15313              	.LASF213:
 15314 0d22 66736D5F 		.ascii	"fsm_state\000"
 15314      73746174 
 15314      6500
 15315              	.LASF7:
 15316 0d2c 6C6F6E67 		.ascii	"long long unsigned int\000"
 15316      206C6F6E 
 15316      6720756E 
 15316      7369676E 
 15316      65642069 
 15317              	.LASF328:
 15318 0d43 64657465 		.ascii	"detect_power_cycle\000"
 15318      63745F70 
 15318      6F776572 
 15318      5F637963 
 15318      6C6500
 15319              	.LASF332:
 15320 0d56 6A6F795F 		.ascii	"joy_UD_status\000"
 15320      55445F73 
 15320      74617475 
 15320      7300
 15321              	.LASF271:
 15322 0d64 6D6F7469 		.ascii	"motion_status\000"
 15322      6F6E5F73 
 15322      74617475 
 15322      7300
 15323              	.LASF51:
 15324 0d72 6C656E67 		.ascii	"length\000"
 15324      746800
 15325              	.LASF152:
 15326 0d79 73745F69 		.ascii	"st_imu_data\000"
 15326      6D755F64 
 15326      61746100 
 15327              	.LASF156:
 15328 0d85 6D61675F 		.ascii	"mag_value\000"
 15328      76616C75 
 15328      6500
 15329              	.LASF41:
 15330 0d8f 6F6E6F66 		.ascii	"onoff\000"
 15330      6600
 15331              	.LASF236:
 15332 0d95 746D705F 		.ascii	"tmp_value_encoder_32\000"
 15332      76616C75 
 15332      655F656E 
 15332      636F6465 
 15332      725F3332 
 15333              	.LASF225:
 15334 0daa 70726576 		.ascii	"prev_curr_err\000"
 15334      5F637572 
 15334      725F6572 
 15334      7200
 15335              	.LASF185:
 15336 0db8 64617461 		.ascii	"data_packet_length\000"
 15336      5F706163 
 15336      6B65745F 
 15336      6C656E67 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 337


 15336      746800
 15337              	.LASF75:
 15338 0dcb 6B5F705F 		.ascii	"k_p_c\000"
 15338      6300
 15339              	.LASF323:
 15340 0dd1 6465765F 		.ascii	"dev_tension\000"
 15340      74656E73 
 15340      696F6E00 
 15341              	.LASF86:
 15342 0ddd 6D6F746F 		.ascii	"motor_driver_type\000"
 15342      725F6472 
 15342      69766572 
 15342      5F747970 
 15342      6500
 15343              	.LASF173:
 15344 0def 57414954 		.ascii	"WAIT_EoC\000"
 15344      5F456F43 
 15344      00
 15345              	.LASF22:
 15346 0df8 72656738 		.ascii	"reg8\000"
 15346      00
 15347              	.LASF280:
 15348 0dfd 62696E5F 		.ascii	"bin_1\000"
 15348      3100
 15349              	.LASF281:
 15350 0e03 62696E5F 		.ascii	"bin_2\000"
 15350      3200
 15351              	.LASF252:
 15352 0e09 695F6175 		.ascii	"i_aux\000"
 15352      7800
 15353              	.LASF141:
 15354 0e0f 70726F70 		.ascii	"prop_err_fb_gain\000"
 15354      5F657272 
 15354      5F66625F 
 15354      6761696E 
 15354      00
 15355              	.LASF210:
 15356 0e20 706F735F 		.ascii	"pos_diff\000"
 15356      64696666 
 15356      00
 15357              	.LASF293:
 15358 0e29 726F775F 		.ascii	"row_number\000"
 15358      6E756D62 
 15358      657200
 15359              	.LASF263:
 15360 0e34 6F766572 		.ascii	"overcurrent_control\000"
 15360      63757272 
 15360      656E745F 
 15360      636F6E74 
 15360      726F6C00 
 15361              	.LASF282:
 15362 0e48 63757272 		.ascii	"curr_pos\000"
 15362      5F706F73 
 15362      00
 15363              	.LASF169:
 15364 0e51 52455345 		.ascii	"RESET\000"
 15364      5400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 338


 15365              	.LASF136:
 15366 0e57 736C6176 		.ascii	"slave_comm_active\000"
 15366      655F636F 
 15366      6D6D5F61 
 15366      63746976 
 15366      6500
 15367              	.LASF251:
 15368 0e69 616E616C 		.ascii	"analog_read_end\000"
 15368      6F675F72 
 15368      6561645F 
 15368      656E6400 
 15369              	.LASF347:
 15370 0e79 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 15370      636F6465 
 15370      725F4C69 
 15370      6E655F43 
 15370      6F6E6E65 
 15371              	.LASF73:
 15372 0e92 6465765F 		.ascii	"dev_type\000"
 15372      74797065 
 15372      00
 15373              	.LASF270:
 15374 0e9b 656D675F 		.ascii	"emg_cycle_status\000"
 15374      6379636C 
 15374      655F7374 
 15374      61747573 
 15374      00
 15375              	.LASF123:
 15376 0eac 73745F75 		.ascii	"st_user\000"
 15376      73657200 
 15377              	.LASF106:
 15378 0eb4 67656172 		.ascii	"gears_params\000"
 15378      735F7061 
 15378      72616D73 
 15378      00
 15379              	.LASF117:
 15380 0ec1 73745F65 		.ascii	"st_expansion\000"
 15380      7870616E 
 15380      73696F6E 
 15380      00
 15381              	.LASF111:
 15382 0ece 656D675F 		.ascii	"emg_calibration_flag\000"
 15382      63616C69 
 15382      62726174 
 15382      696F6E5F 
 15382      666C6167 
 15383              	.LASF43:
 15384 0ee3 73745F6D 		.ascii	"st_meas\000"
 15384      65617300 
 15385              	.LASF295:
 15386 0eeb 61646472 		.ascii	"addr_start\000"
 15386      5F737461 
 15386      727400
 15387              	.LASF299:
 15388 0ef6 70776D5F 		.ascii	"pwm_preload_values\000"
 15388      7072656C 
 15388      6F61645F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 339


 15388      76616C75 
 15388      657300
 15389              	.LASF133:
 15390 0f09 6A6F7973 		.ascii	"joystick_threshold\000"
 15390      7469636B 
 15390      5F746872 
 15390      6573686F 
 15390      6C6400
 15391              	.LASF32:
 15392 0f1c 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 15392      545F4D4F 
 15392      44455F45 
 15392      4D475F50 
 15392      524F504F 
 15393              	.LASF180:
 15394 0f3b 636F756E 		.ascii	"counter_status\000"
 15394      7465725F 
 15394      73746174 
 15394      757300
 15395              	.LASF311:
 15396 0f4a 675F6D65 		.ascii	"g_mem\000"
 15396      6D00
 15397              	.LASF253:
 15398 0f50 656D675F 		.ascii	"emg_counter_1\000"
 15398      636F756E 
 15398      7465725F 
 15398      3100
 15399              	.LASF254:
 15400 0f5e 656D675F 		.ascii	"emg_counter_2\000"
 15400      636F756E 
 15400      7465725F 
 15400      3200
 15401              	.LASF244:
 15402 0f6c 6F6E6C79 		.ascii	"only_first_time\000"
 15402      5F666972 
 15402      73745F74 
 15402      696D6500 
 15403              	.LASF11:
 15404 0f7c 75696E74 		.ascii	"uint8\000"
 15404      3800
 15405              	.LASF131:
 15406 0f82 73745F4A 		.ascii	"st_JOY_spec\000"
 15406      4F595F73 
 15406      70656300 
 15407              	.LASF239:
 15408 0f8e 76616C75 		.ascii	"value_diff\000"
 15408      655F6469 
 15408      666600
 15409              	.LASF284:
 15410 0f99 63757272 		.ascii	"curr_ref\000"
 15410      5F726566 
 15410      00
 15411              	.LASF2:
 15412 0fa2 73686F72 		.ascii	"short int\000"
 15412      7420696E 
 15412      7400
 15413              	.LASF80:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 340


 15414 0fac 6B5F645F 		.ascii	"k_d_dl\000"
 15414      646C00
 15415              	.LASF237:
 15416 0fb3 76616C75 		.ascii	"value_encoder\000"
 15416      655F656E 
 15416      636F6465 
 15416      7200
 15417              	.LASF48:
 15418 0fc1 6A6F7973 		.ascii	"joystick\000"
 15418      7469636B 
 15418      00
 15419              	.LASF149:
 15420 0fca 6D6F746F 		.ascii	"motor\000"
 15420      7200
 15421              	.LASF325:
 15422 0fd0 6465765F 		.ascii	"dev_pwm_sat\000"
 15422      70776D5F 
 15422      73617400 
 15423              	.LASF66:
 15424 0fdc 68775F6D 		.ascii	"hw_maint_date\000"
 15424      61696E74 
 15424      5F646174 
 15424      6500
 15425              	.LASF197:
 15426 0fea 66756E63 		.ascii	"function_scheduler\000"
 15426      74696F6E 
 15426      5F736368 
 15426      6564756C 
 15426      657200
 15427              	.LASF198:
 15428 0ffd 636F6D70 		.ascii	"compute_reference\000"
 15428      7574655F 
 15428      72656665 
 15428      72656E63 
 15428      6500
 15429              	.LASF226:
 15430 100f 70726576 		.ascii	"prev_pwm\000"
 15430      5F70776D 
 15430      00
 15431              	.LASF67:
 15432 1018 73746174 		.ascii	"stats_period_begin_date\000"
 15432      735F7065 
 15432      72696F64 
 15432      5F626567 
 15432      696E5F64 
 15433              	.LASF289:
 15434 1030 74696D65 		.ascii	"timer_exc_e\000"
 15434      725F6578 
 15434      635F6500 
 15435              	.LASF300:
 15436 103c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 15436      52784275 
 15436      66666572 
 15436      00
 15437              	.LASF327:
 15438 1049 706F775F 		.ascii	"pow_tension\000"
 15438      74656E73 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 341


 15438      696F6E00 
 15439              	.LASF288:
 15440 1055 74696D65 		.ascii	"timer_exc_s\000"
 15440      725F6578 
 15440      635F7300 
 15441              	.LASF15:
 15442 1061 696E7431 		.ascii	"int16\000"
 15442      3600
 15443              	.LASF119:
 15444 1067 72656164 		.ascii	"read_exp_port_flag\000"
 15444      5F657870 
 15444      5F706F72 
 15444      745F666C 
 15444      616700
 15445              	.LASF275:
 15446 107a 6578635F 		.ascii	"exc_act_thr\000"
 15446      6163745F 
 15446      74687200 
 15447              	.LASF85:
 15448 1086 61637469 		.ascii	"activate_pwm_rescaling\000"
 15448      76617465 
 15448      5F70776D 
 15448      5F726573 
 15448      63616C69 
 15449              	.LASF78:
 15450 109d 6B5F705F 		.ascii	"k_p_dl\000"
 15450      646C00
 15451              	.LASF44:
 15452 10a4 65737469 		.ascii	"estim_curr\000"
 15452      6D5F6375 
 15452      727200
 15453              	.LASF324:
 15454 10af 6465765F 		.ascii	"dev_pwm_limit\000"
 15454      70776D5F 
 15454      6C696D69 
 15454      7400
 15455              	.LASF292:
 15456 10bd 73746174 		.ascii	"status\000"
 15456      757300
 15457              	.LASF218:
 15458 10c4 63757272 		.ascii	"curr_error\000"
 15458      5F657272 
 15458      6F7200
 15459              	.LASF348:
 15460 10cf 456E636F 		.ascii	"Encoder_Value\000"
 15460      6465725F 
 15460      56616C75 
 15460      6500
 15461              	.LASF72:
 15462 10dd 75736572 		.ascii	"user_id\000"
 15462      5F696400 
 15463              	.LASF273:
 15464 10e5 72657374 		.ascii	"rest_cycle_status\000"
 15464      5F637963 
 15464      6C655F73 
 15464      74617475 
 15464      7300
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 342


 15465              	.LASF208:
 15466 10f7 636F6D70 		.ascii	"compute_SoftHand_2_motors_joystick_reference\000"
 15466      7574655F 
 15466      536F6674 
 15466      48616E64 
 15466      5F325F6D 
 15467              	.LASF235:
 15468 1124 746D705F 		.ascii	"tmp_value_encoder\000"
 15468      76616C75 
 15468      655F656E 
 15468      636F6465 
 15468      7200
 15469              	.LASF182:
 15470 1136 4953525F 		.ascii	"ISR_CYCLES_Handler\000"
 15470      4359434C 
 15470      45535F48 
 15470      616E646C 
 15470      657200
 15471              	.LASF71:
 15472 1149 62617564 		.ascii	"baud_rate\000"
 15472      5F726174 
 15472      6500
 15473              	.LASF144:
 15474 1153 66617374 		.ascii	"fast_act_threshold\000"
 15474      5F616374 
 15474      5F746872 
 15474      6573686F 
 15474      6C6400
 15475              	.LASF115:
 15476 1166 5350495F 		.ascii	"SPI_read_delay\000"
 15476      72656164 
 15476      5F64656C 
 15476      617900
 15477              	.LASF3:
 15478 1175 73686F72 		.ascii	"short unsigned int\000"
 15478      7420756E 
 15478      7369676E 
 15478      65642069 
 15478      6E7400
 15479              	.LASF99:
 15480 1188 73745F65 		.ascii	"st_encoder\000"
 15480      6E636F64 
 15480      657200
 15481              	.LASF308:
 15482 1193 675F6164 		.ascii	"g_adc_meas\000"
 15482      635F6D65 
 15482      617300
 15483              	.LASF139:
 15484 119e 6D61785F 		.ascii	"max_residual_current\000"
 15484      72657369 
 15484      6475616C 
 15484      5F637572 
 15484      72656E74 
 15485              	.LASF205:
 15486 11b3 454E435F 		.ascii	"ENC_L\000"
 15486      4C00
 15487              	.LASF146:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 343


 15488 11b9 73745F65 		.ascii	"st_eeprom\000"
 15488      6570726F 
 15488      6D00
 15489              	.LASF333:
 15490 11c3 6A6F795F 		.ascii	"joy_LR_status\000"
 15490      4C525F73 
 15490      74617475 
 15490      7300
 15491              	.LASF360:
 15492 11d1 2E2E5C73 		.ascii	"..\\src\\interruptions.c\000"
 15492      72635C69 
 15492      6E746572 
 15492      72757074 
 15492      696F6E73 
 15493              	.LASF201:
 15494 11e8 73745F72 		.ascii	"st_refOld_p\000"
 15494      65664F6C 
 15494      645F7000 
 15495              	.LASF16:
 15496 11f4 696E7433 		.ascii	"int32\000"
 15496      3200
 15497              	.LASF344:
 15498 11fa 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 15498      4F465F41 
 15498      4E414C4F 
 15498      475F494E 
 15498      50555453 
 15499              	.LASF74:
 15500 120f 73745F6D 		.ascii	"st_motor\000"
 15500      6F746F72 
 15500      00
 15501              	.LASF356:
 15502 1218 6D617374 		.ascii	"master_mode\000"
 15502      65725F6D 
 15502      6F646500 
 15503              	.LASF39:
 15504 1224 46535F46 		.ascii	"FS_FILE\000"
 15504      494C4500 
 15505              	.LASF87:
 15506 122c 706F735F 		.ascii	"pos_lim_flag\000"
 15506      6C696D5F 
 15506      666C6167 
 15506      00
 15507              	.LASF258:
 15508 1239 4C525F6D 		.ascii	"LR_mean_value\000"
 15508      65616E5F 
 15508      76616C75 
 15508      6500
 15509              	.LASF307:
 15510 1247 675F6D65 		.ascii	"g_measOld\000"
 15510      61734F6C 
 15510      6400
 15511              	.LASF297:
 15512 1251 726F775F 		.ascii	"row_end\000"
 15512      656E6400 
 15513              	.LASF35:
 15514 1259 434F4E54 		.ascii	"CONTROL_ANGLE\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 344


 15514      524F4C5F 
 15514      414E474C 
 15514      4500
 15515              	.LASF9:
 15516 1267 5F5F696E 		.ascii	"__int32_t\000"
 15516      7433325F 
 15516      7400
 15517              	.LASF58:
 15518 1271 77697265 		.ascii	"wire_disp\000"
 15518      5F646973 
 15518      7000
 15519              	.LASF338:
 15520 127b 63616E5F 		.ascii	"can_write\000"
 15520      77726974 
 15520      6500
 15521              	.LASF109:
 15522 1285 656D675F 		.ascii	"emg_max_value\000"
 15522      6D61785F 
 15522      76616C75 
 15522      6500
 15523              	.LASF93:
 15524 1293 63757272 		.ascii	"current_limit\000"
 15524      656E745F 
 15524      6C696D69 
 15524      7400
 15525              	.LASF33:
 15526 12a1 53485F69 		.ascii	"SH_input_mode\000"
 15526      6E707574 
 15526      5F6D6F64 
 15526      6500
 15527              	.LASF179:
 15528 12af 4E4F4E45 		.ascii	"NONE\000"
 15528      00
 15529              	.LASF143:
 15530 12b4 61637469 		.ascii	"activation_mode\000"
 15530      76617469 
 15530      6F6E5F6D 
 15530      6F646500 
 15531              	.LASF12:
 15532 12c4 75696E74 		.ascii	"uint16\000"
 15532      313600
 15533              	.LASF128:
 15534 12cb 72657374 		.ascii	"rest_delay\000"
 15534      5F64656C 
 15534      617900
 15535              	.LASF159:
 15536 12d6 73745F66 		.ascii	"st_filter\000"
 15536      696C7465 
 15536      7200
 15537              	.LASF249:
 15538 12e0 76765F76 		.ascii	"vv_value\000"
 15538      616C7565 
 15538      00
 15539              	.LASF83:
 15540 12e9 6B5F645F 		.ascii	"k_d_c_dl\000"
 15540      635F646C 
 15540      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cc6peeyS.s 			page 345


 15541              	.LASF164:
 15542 12f2 64697265 		.ascii	"direction\000"
 15542      6374696F 
 15542      6E00
 15543              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
