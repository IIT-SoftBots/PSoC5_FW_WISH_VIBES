ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"interruptions.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              		.type	pwm_preload_values, %object
  22              		.size	pwm_preload_values, 29
  23              	pwm_preload_values:
  24 0000 64       		.byte	100
  25 0001 53       		.byte	83
  26 0002 4E       		.byte	78
  27 0003 4C       		.byte	76
  28 0004 4A       		.byte	74
  29 0005 48       		.byte	72
  30 0006 46       		.byte	70
  31 0007 44       		.byte	68
  32 0008 43       		.byte	67
  33 0009 41       		.byte	65
  34 000a 40       		.byte	64
  35 000b 3F       		.byte	63
  36 000c 3E       		.byte	62
  37 000d 3D       		.byte	61
  38 000e 3C       		.byte	60
  39 000f 3B       		.byte	59
  40 0010 3A       		.byte	58
  41 0011 39       		.byte	57
  42 0012 38       		.byte	56
  43 0013 38       		.byte	56
  44 0014 37       		.byte	55
  45 0015 36       		.byte	54
  46 0016 36       		.byte	54
  47 0017 35       		.byte	53
  48 0018 34       		.byte	52
  49 0019 34       		.byte	52
  50 001a 34       		.byte	52
  51 001b 33       		.byte	51
  52 001c 33       		.byte	51
  53              		.section	.text.ISR_RS485_RX_ExInterrupt,"ax",%progbits
  54              		.align	2
  55              		.global	ISR_RS485_RX_ExInterrupt
  56              		.thumb
  57              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 2


  58              		.type	ISR_RS485_RX_ExInterrupt, %function
  59              	ISR_RS485_RX_ExInterrupt:
  60              	.LFB64:
  61              		.file 1 "..\\src\\interruptions.c"
   1:..\src/interruptions.c **** // ----------------------------------------------------------------------------
   2:..\src/interruptions.c **** // BSD 3-Clause License
   3:..\src/interruptions.c **** 
   4:..\src/interruptions.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/interruptions.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/interruptions.c **** // All rights reserved.
   7:..\src/interruptions.c **** 
   8:..\src/interruptions.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/interruptions.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/interruptions.c **** 
  11:..\src/interruptions.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/interruptions.c **** //   list of conditions and the following disclaimer.
  13:..\src/interruptions.c **** 
  14:..\src/interruptions.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/interruptions.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/interruptions.c **** //   and/or other materials provided with the distribution.
  17:..\src/interruptions.c **** 
  18:..\src/interruptions.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/interruptions.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/interruptions.c **** //   this software without specific prior written permission.
  21:..\src/interruptions.c **** 
  22:..\src/interruptions.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/interruptions.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:..\src/interruptions.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/interruptions.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/interruptions.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/interruptions.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/interruptions.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/interruptions.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/interruptions.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/interruptions.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/interruptions.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/interruptions.c **** // ----------------------------------------------------------------------------
  34:..\src/interruptions.c **** 
  35:..\src/interruptions.c **** /**
  36:..\src/interruptions.c **** * \file         interruptions.c
  37:..\src/interruptions.c **** *
  38:..\src/interruptions.c **** * \brief        Interruption handling and firmware core functions
  39:..\src/interruptions.c **** * \date         March 20th, 2020
  40:..\src/interruptions.c **** * \author       _Centro "E.Piaggio"_
  41:..\src/interruptions.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42:..\src/interruptions.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  43:..\src/interruptions.c **** */
  44:..\src/interruptions.c **** 
  45:..\src/interruptions.c **** 
  46:..\src/interruptions.c **** //=================================================================     includes
  47:..\src/interruptions.c **** #include "interruptions.h"
  48:..\src/interruptions.c **** 
  49:..\src/interruptions.c **** //==============================================================================
  50:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  51:..\src/interruptions.c **** //==============================================================================
  52:..\src/interruptions.c **** // Processing RS-485 data frame:
  53:..\src/interruptions.c **** //
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 3


  54:..\src/interruptions.c **** // - 0:     Waits for beginning characters
  55:..\src/interruptions.c **** // - 1:     Waits for ID;
  56:..\src/interruptions.c **** // - 2:     Data length;
  57:..\src/interruptions.c **** // - 3:     Receive all bytes;
  58:..\src/interruptions.c **** // - 4:     Wait for another device end of transmission;
  59:..\src/interruptions.c **** //
  60:..\src/interruptions.c **** //==============================================================================
  61:..\src/interruptions.c **** 
  62:..\src/interruptions.c **** // PWM values needed to obtain 11.5 V given a certain input tension
  63:..\src/interruptions.c **** // Numbers are sperimentally calculated //[index] (millivolts)
  64:..\src/interruptions.c **** static const uint8 pwm_preload_values[29] = {100,    //0 (11500)
  65:..\src/interruptions.c ****                                               83,
  66:..\src/interruptions.c ****                                               78,
  67:..\src/interruptions.c ****                                               76,
  68:..\src/interruptions.c ****                                               74,
  69:..\src/interruptions.c ****                                               72,    //5 (14000)
  70:..\src/interruptions.c ****                                               70,
  71:..\src/interruptions.c ****                                               68,
  72:..\src/interruptions.c ****                                               67,
  73:..\src/interruptions.c ****                                               65,
  74:..\src/interruptions.c ****                                               64,    //10 (16500)
  75:..\src/interruptions.c ****                                               63,
  76:..\src/interruptions.c ****                                               62,
  77:..\src/interruptions.c ****                                               61,
  78:..\src/interruptions.c ****                                               60,
  79:..\src/interruptions.c ****                                               59,    //15 (19000)
  80:..\src/interruptions.c ****                                               58,
  81:..\src/interruptions.c ****                                               57,
  82:..\src/interruptions.c ****                                               56,
  83:..\src/interruptions.c ****                                               56,
  84:..\src/interruptions.c ****                                               55,    //20 (21500)
  85:..\src/interruptions.c ****                                               54,
  86:..\src/interruptions.c ****                                               54,
  87:..\src/interruptions.c ****                                               53,
  88:..\src/interruptions.c ****                                               52,
  89:..\src/interruptions.c ****                                               52,    //25 (24000)
  90:..\src/interruptions.c ****                                               52,
  91:..\src/interruptions.c ****                                               51,
  92:..\src/interruptions.c ****                                               51};   //28 (25500)
  93:..\src/interruptions.c **** 
  94:..\src/interruptions.c **** //==============================================================================
  95:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  96:..\src/interruptions.c **** //==============================================================================
  97:..\src/interruptions.c **** 
  98:..\src/interruptions.c **** CY_ISR(ISR_RS485_RX_ExInterrupt) {
  62              		.loc 1 98 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  99:..\src/interruptions.c **** 
 100:..\src/interruptions.c ****     // Set RS485 flag
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 4


 101:..\src/interruptions.c ****     
 102:..\src/interruptions.c ****     interrupt_flag = TRUE;
  72              		.loc 1 102 0
  73 0004 034B     		ldr	r3, .L2
  74 0006 0122     		movs	r2, #1
  75 0008 1A70     		strb	r2, [r3]
 103:..\src/interruptions.c ****      
 104:..\src/interruptions.c **** }
  76              		.loc 1 104 0
  77 000a 00BF     		nop
  78 000c BD46     		mov	sp, r7
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 000e 80BC     		pop	{r7}
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0010 7047     		bx	lr
  85              	.L3:
  86 0012 00BF     		.align	2
  87              	.L2:
  88 0014 00000000 		.word	interrupt_flag
  89              		.cfi_endproc
  90              	.LFE64:
  91              		.size	ISR_RS485_RX_ExInterrupt, .-ISR_RS485_RX_ExInterrupt
  92              		.section	.text.ISR_CYCLES_Handler,"ax",%progbits
  93              		.align	2
  94              		.global	ISR_CYCLES_Handler
  95              		.thumb
  96              		.thumb_func
  97              		.type	ISR_CYCLES_Handler, %function
  98              	ISR_CYCLES_Handler:
  99              	.LFB65:
 105:..\src/interruptions.c **** 
 106:..\src/interruptions.c **** //==============================================================================
 107:..\src/interruptions.c **** //                                                        CYCLES TIMER INTERRUPT
 108:..\src/interruptions.c **** //==============================================================================
 109:..\src/interruptions.c **** CY_ISR(ISR_CYCLES_Handler){
 100              		.loc 1 109 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0000 80B4     		push	{r7}
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110:..\src/interruptions.c **** 
 111:..\src/interruptions.c ****     // Set cycles interrupt flag
 112:..\src/interruptions.c ****     
 113:..\src/interruptions.c ****     cycles_interrupt_flag = TRUE;
 110              		.loc 1 113 0
 111 0004 044B     		ldr	r3, .L5
 112 0006 0122     		movs	r2, #1
 113 0008 1A70     		strb	r2, [r3]
 114:..\src/interruptions.c ****     
 115:..\src/interruptions.c ****     CYCLES_TIMER_STATUS;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 5


 114              		.loc 1 115 0
 115 000a 044B     		ldr	r3, .L5+4
 116 000c 1B78     		ldrb	r3, [r3]
 116:..\src/interruptions.c **** 
 117:..\src/interruptions.c **** }
 117              		.loc 1 117 0
 118 000e 00BF     		nop
 119 0010 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0012 80BC     		pop	{r7}
 123              		.cfi_restore 7
 124              		.cfi_def_cfa_offset 0
 125 0014 7047     		bx	lr
 126              	.L6:
 127 0016 00BF     		.align	2
 128              	.L5:
 129 0018 00000000 		.word	cycles_interrupt_flag
 130 001c 034F0040 		.word	1073762051
 131              		.cfi_endproc
 132              	.LFE65:
 133              		.size	ISR_CYCLES_Handler, .-ISR_CYCLES_Handler
 134              		.section	.text.interrupt_manager,"ax",%progbits
 135              		.align	2
 136              		.global	interrupt_manager
 137              		.thumb
 138              		.thumb_func
 139              		.type	interrupt_manager, %function
 140              	interrupt_manager:
 141              	.LFB66:
 118:..\src/interruptions.c **** 
 119:..\src/interruptions.c **** //==============================================================================
 120:..\src/interruptions.c **** //                                                             INTERRUPT MANAGER
 121:..\src/interruptions.c **** //==============================================================================
 122:..\src/interruptions.c **** // Manage interrupt from RS485 
 123:..\src/interruptions.c **** //==============================================================================
 124:..\src/interruptions.c **** // Processing RS-485 data frame:
 125:..\src/interruptions.c **** //
 126:..\src/interruptions.c **** // - WAIT_START:    Waits for beginning characters;
 127:..\src/interruptions.c **** // - WAIT_ID:       Waits for ID;
 128:..\src/interruptions.c **** // - WAIT_LENGTH:   Data length;
 129:..\src/interruptions.c **** // - RECEIVE:       Receive all bytes;
 130:..\src/interruptions.c **** // - UNLOAD:        Wait for another device end of transmission;
 131:..\src/interruptions.c **** //
 132:..\src/interruptions.c **** //==============================================================================
 133:..\src/interruptions.c **** 
 134:..\src/interruptions.c **** void interrupt_manager(){
 142              		.loc 1 134 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 82B0     		sub	sp, sp, #8
 151              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 6


 152 0004 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 135:..\src/interruptions.c **** 
 136:..\src/interruptions.c ****     
 137:..\src/interruptions.c ****     //===========================================     local variables definition
 138:..\src/interruptions.c **** 
 139:..\src/interruptions.c ****     static uint8 CYDATA state = WAIT_START;                      // state
 140:..\src/interruptions.c ****     
 141:..\src/interruptions.c ****     //------------------------------------------------- local data packet
 142:..\src/interruptions.c ****     static uint8 CYDATA data_packet_index;
 143:..\src/interruptions.c ****     static uint8 CYDATA data_packet_length;
 144:..\src/interruptions.c ****     static uint8 data_packet_buffer[128];                     
 145:..\src/interruptions.c ****     static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 146:..\src/interruptions.c ****     //-------------------------------------------------
 147:..\src/interruptions.c **** 
 148:..\src/interruptions.c ****     uint8 CYDATA    rx_data;                            // RS485 UART rx data
 149:..\src/interruptions.c ****     CYBIT           rx_data_type = TRUE;                       // my id?
 154              		.loc 1 149 0
 155 0006 0123     		movs	r3, #1
 156 0008 FB71     		strb	r3, [r7, #7]
 150:..\src/interruptions.c ****     uint8 CYDATA    package_count = 0;                     
 157              		.loc 1 150 0
 158 000a 0023     		movs	r3, #0
 159 000c BB71     		strb	r3, [r7, #6]
 151:..\src/interruptions.c **** 
 152:..\src/interruptions.c ****     //======================================================     receive routine
 153:..\src/interruptions.c ****     
 154:..\src/interruptions.c ****     while(UART_RS485_GetRxBufferSize() && (package_count < 100)){
 160              		.loc 1 154 0
 161 000e E1E0     		b	.L8
 162              	.L28:
 155:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 156:..\src/interruptions.c **** 
 157:..\src/interruptions.c ****         // Get next char
 158:..\src/interruptions.c ****         rx_data = UART_RS485_GetChar();
 163              		.loc 1 158 0
 164 0010 FFF7FEFF 		bl	UART_RS485_GetChar
 165 0014 0346     		mov	r3, r0
 166 0016 7B71     		strb	r3, [r7, #5]
 159:..\src/interruptions.c ****         
 160:..\src/interruptions.c ****         switch (state) {
 167              		.loc 1 160 0
 168 0018 754B     		ldr	r3, .L31
 169 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 001c 042B     		cmp	r3, #4
 171 001e 00F2D980 		bhi	.L8
 172 0022 01A2     		adr	r2, .L10
 173 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 174              		.p2align 2
 175              	.L10:
 176 0028 3D000000 		.word	.L9+1
 177 002c A3000000 		.word	.L11+1
 178 0030 E3000000 		.word	.L12+1
 179 0034 31010000 		.word	.L13+1
 180 0038 9B010000 		.word	.L14+1
 181              		.p2align 1
 182              	.L9:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 7


 161:..\src/interruptions.c ****             //-----     wait for frame start     -------------------------------
 162:..\src/interruptions.c ****             case WAIT_START:
 163:..\src/interruptions.c ****             
 164:..\src/interruptions.c ****                 rx_queue[0] = rx_queue[1];
 183              		.loc 1 164 0
 184 003c 6D4B     		ldr	r3, .L31+4
 185 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 186 0040 6C4B     		ldr	r3, .L31+4
 187 0042 1A70     		strb	r2, [r3]
 165:..\src/interruptions.c ****                 rx_queue[1] = rx_queue[2];
 188              		.loc 1 165 0
 189 0044 6B4B     		ldr	r3, .L31+4
 190 0046 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 191 0048 6A4B     		ldr	r3, .L31+4
 192 004a 5A70     		strb	r2, [r3, #1]
 166:..\src/interruptions.c ****                 rx_queue[2] = rx_data;
 193              		.loc 1 166 0
 194 004c 694A     		ldr	r2, .L31+4
 195 004e 7B79     		ldrb	r3, [r7, #5]
 196 0050 9370     		strb	r3, [r2, #2]
 167:..\src/interruptions.c ****                 
 168:..\src/interruptions.c ****                 // Check for header configuration package
 169:..\src/interruptions.c ****                 if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 197              		.loc 1 169 0
 198 0052 684B     		ldr	r3, .L31+4
 199 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 200 0056 3A2B     		cmp	r3, #58
 201 0058 10D1     		bne	.L15
 202              		.loc 1 169 0 is_stmt 0 discriminator 1
 203 005a 664B     		ldr	r3, .L31+4
 204 005c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 205 005e 3A2B     		cmp	r3, #58
 206 0060 0CD1     		bne	.L15
 170:..\src/interruptions.c ****                     rx_queue[0] = 0;
 207              		.loc 1 170 0 is_stmt 1
 208 0062 644B     		ldr	r3, .L31+4
 209 0064 0022     		movs	r2, #0
 210 0066 1A70     		strb	r2, [r3]
 171:..\src/interruptions.c ****                     rx_queue[1] = 0;
 211              		.loc 1 171 0
 212 0068 624B     		ldr	r3, .L31+4
 213 006a 0022     		movs	r2, #0
 214 006c 5A70     		strb	r2, [r3, #1]
 172:..\src/interruptions.c ****                     rx_queue[2] = 0;
 215              		.loc 1 172 0
 216 006e 614B     		ldr	r3, .L31+4
 217 0070 0022     		movs	r2, #0
 218 0072 9A70     		strb	r2, [r3, #2]
 173:..\src/interruptions.c ****                     state       = WAIT_ID;                    
 219              		.loc 1 173 0
 220 0074 5E4B     		ldr	r3, .L31
 221 0076 0122     		movs	r2, #1
 222 0078 1A70     		strb	r2, [r3]
 223 007a 11E0     		b	.L16
 224              	.L15:
 174:..\src/interruptions.c ****                 }else
 175:..\src/interruptions.c ****                     if ((rx_queue[0] == 63) &&      //ASCII - ?
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 8


 225              		.loc 1 175 0
 226 007c 5D4B     		ldr	r3, .L31+4
 227 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 0080 3F2B     		cmp	r3, #63
 229 0082 40F0A780 		bne	.L8
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 230              		.loc 1 176 0 discriminator 1
 231 0086 5B4B     		ldr	r3, .L31+4
 232 0088 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 175:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 233              		.loc 1 175 0 discriminator 1
 234 008a 0D2B     		cmp	r3, #13
 235 008c 40F0A280 		bne	.L8
 177:..\src/interruptions.c ****                         (rx_queue[2] == 10))        //ASCII - LF)
 236              		.loc 1 177 0
 237 0090 584B     		ldr	r3, .L31+4
 238 0092 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 239              		.loc 1 176 0
 240 0094 0A2B     		cmp	r3, #10
 241 0096 40F09D80 		bne	.L8
 178:..\src/interruptions.c ****                         infoGet(INFO_ALL);
 242              		.loc 1 178 0
 243 009a 0020     		movs	r0, #0
 244 009c FFF7FEFF 		bl	infoGet
 245              	.L16:
 179:..\src/interruptions.c ****                 break;
 246              		.loc 1 179 0
 247 00a0 98E0     		b	.L8
 248              	.L11:
 180:..\src/interruptions.c **** 
 181:..\src/interruptions.c ****             //-----     wait for id     ----------------------------------------
 182:..\src/interruptions.c ****             case  WAIT_ID:
 183:..\src/interruptions.c **** 
 184:..\src/interruptions.c ****                 // packet is for my ID or is broadcast
 185:..\src/interruptions.c **** #ifdef MASTER_FW
 186:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0 || (c_mem.MS.slave_comm_active && rx_da
 249              		.loc 1 186 0
 250 00a2 554B     		ldr	r3, .L31+8
 251 00a4 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 252 00a8 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 253 00aa 9A42     		cmp	r2, r3
 254 00ac 0DD0     		beq	.L17
 255              		.loc 1 186 0 is_stmt 0 discriminator 1
 256 00ae 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 257 00b0 002B     		cmp	r3, #0
 258 00b2 0AD0     		beq	.L17
 259              		.loc 1 186 0 discriminator 2
 260 00b4 504B     		ldr	r3, .L31+8
 261 00b6 93F8C032 		ldrb	r3, [r3, #704]	@ zero_extendqisi2
 262 00ba 002B     		cmp	r3, #0
 263 00bc 08D0     		beq	.L18
 264              		.loc 1 186 0 discriminator 3
 265 00be 4E4B     		ldr	r3, .L31+8
 266 00c0 93F8C132 		ldrb	r3, [r3, #705]	@ zero_extendqisi2
 267 00c4 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 268 00c6 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 9


 269 00c8 02D1     		bne	.L18
 270              	.L17:
 187:..\src/interruptions.c ****                    rx_data_type = FALSE;
 271              		.loc 1 187 0 is_stmt 1
 272 00ca 0023     		movs	r3, #0
 273 00cc FB71     		strb	r3, [r7, #7]
 274 00ce 01E0     		b	.L19
 275              	.L18:
 188:..\src/interruptions.c ****                 else                //packet is for others
 189:..\src/interruptions.c ****                     rx_data_type = TRUE;
 276              		.loc 1 189 0
 277 00d0 0123     		movs	r3, #1
 278 00d2 FB71     		strb	r3, [r7, #7]
 279              	.L19:
 190:..\src/interruptions.c **** #else
 191:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0)
 192:..\src/interruptions.c ****                     rx_data_type = FALSE;
 193:..\src/interruptions.c ****                 else                //packet is for others
 194:..\src/interruptions.c ****                     rx_data_type = TRUE;
 195:..\src/interruptions.c **** #endif                
 196:..\src/interruptions.c ****                 data_packet_length = 0;
 280              		.loc 1 196 0
 281 00d4 494B     		ldr	r3, .L31+12
 282 00d6 0022     		movs	r2, #0
 283 00d8 1A70     		strb	r2, [r3]
 197:..\src/interruptions.c ****                 state = WAIT_LENGTH;
 284              		.loc 1 197 0
 285 00da 454B     		ldr	r3, .L31
 286 00dc 0222     		movs	r2, #2
 287 00de 1A70     		strb	r2, [r3]
 198:..\src/interruptions.c ****                 break;
 288              		.loc 1 198 0
 289 00e0 78E0     		b	.L8
 290              	.L12:
 199:..\src/interruptions.c **** 
 200:..\src/interruptions.c ****             //-----     wait for length     ------------------------------------
 201:..\src/interruptions.c ****             case  WAIT_LENGTH:
 202:..\src/interruptions.c **** 
 203:..\src/interruptions.c ****                 data_packet_length = rx_data;
 291              		.loc 1 203 0
 292 00e2 464A     		ldr	r2, .L31+12
 293 00e4 7B79     		ldrb	r3, [r7, #5]
 294 00e6 1370     		strb	r3, [r2]
 204:..\src/interruptions.c ****                 // check validity of pack length
 205:..\src/interruptions.c ****                 if (data_packet_length <= 1) {
 295              		.loc 1 205 0
 296 00e8 444B     		ldr	r3, .L31+12
 297 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 298 00ec 012B     		cmp	r3, #1
 299 00ee 06D8     		bhi	.L20
 206:..\src/interruptions.c ****                     data_packet_length = 0;
 300              		.loc 1 206 0
 301 00f0 424B     		ldr	r3, .L31+12
 302 00f2 0022     		movs	r2, #0
 303 00f4 1A70     		strb	r2, [r3]
 207:..\src/interruptions.c ****                     state = WAIT_START;
 304              		.loc 1 207 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 10


 305 00f6 3E4B     		ldr	r3, .L31
 306 00f8 0022     		movs	r2, #0
 307 00fa 1A70     		strb	r2, [r3]
 308 00fc 6AE0     		b	.L8
 309              	.L20:
 208:..\src/interruptions.c ****                 } else if (data_packet_length > 128) {
 310              		.loc 1 208 0
 311 00fe 3F4B     		ldr	r3, .L31+12
 312 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 0102 802B     		cmp	r3, #128
 314 0104 06D9     		bls	.L22
 209:..\src/interruptions.c ****                     data_packet_length = 0;
 315              		.loc 1 209 0
 316 0106 3D4B     		ldr	r3, .L31+12
 317 0108 0022     		movs	r2, #0
 318 010a 1A70     		strb	r2, [r3]
 210:..\src/interruptions.c ****                     state = WAIT_START;
 319              		.loc 1 210 0
 320 010c 384B     		ldr	r3, .L31
 321 010e 0022     		movs	r2, #0
 322 0110 1A70     		strb	r2, [r3]
 323 0112 5FE0     		b	.L8
 324              	.L22:
 211:..\src/interruptions.c ****                 } else {
 212:..\src/interruptions.c ****                     data_packet_index = 0;
 325              		.loc 1 212 0
 326 0114 3A4B     		ldr	r3, .L31+16
 327 0116 0022     		movs	r2, #0
 328 0118 1A70     		strb	r2, [r3]
 213:..\src/interruptions.c ****                     
 214:..\src/interruptions.c ****                     if(rx_data_type == FALSE)
 329              		.loc 1 214 0
 330 011a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 331 011c 002B     		cmp	r3, #0
 332 011e 03D1     		bne	.L23
 215:..\src/interruptions.c ****                         state = RECEIVE;          // packet for me or broadcast
 333              		.loc 1 215 0
 334 0120 334B     		ldr	r3, .L31
 335 0122 0322     		movs	r2, #3
 336 0124 1A70     		strb	r2, [r3]
 337 0126 55E0     		b	.L8
 338              	.L23:
 216:..\src/interruptions.c ****                     else
 217:..\src/interruptions.c ****                         state = UNLOAD;           // packet for others
 339              		.loc 1 217 0
 340 0128 314B     		ldr	r3, .L31
 341 012a 0422     		movs	r2, #4
 342 012c 1A70     		strb	r2, [r3]
 218:..\src/interruptions.c ****                 }
 219:..\src/interruptions.c ****                 break;
 343              		.loc 1 219 0
 344 012e 51E0     		b	.L8
 345              	.L13:
 220:..\src/interruptions.c **** 
 221:..\src/interruptions.c ****             //-----     receiving     -------------------------------------------
 222:..\src/interruptions.c ****             case RECEIVE:
 223:..\src/interruptions.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 11


 224:..\src/interruptions.c ****                 data_packet_buffer[data_packet_index] = rx_data;
 346              		.loc 1 224 0
 347 0130 334B     		ldr	r3, .L31+16
 348 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 349 0134 1946     		mov	r1, r3
 350 0136 334A     		ldr	r2, .L31+20
 351 0138 7B79     		ldrb	r3, [r7, #5]
 352 013a 5354     		strb	r3, [r2, r1]
 225:..\src/interruptions.c ****                 data_packet_index++;
 353              		.loc 1 225 0
 354 013c 304B     		ldr	r3, .L31+16
 355 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 356 0140 0133     		adds	r3, r3, #1
 357 0142 DAB2     		uxtb	r2, r3
 358 0144 2E4B     		ldr	r3, .L31+16
 359 0146 1A70     		strb	r2, [r3]
 226:..\src/interruptions.c ****                 
 227:..\src/interruptions.c ****                 // check end of transmission
 228:..\src/interruptions.c ****                 if (data_packet_index >= data_packet_length) {
 360              		.loc 1 228 0
 361 0148 2D4B     		ldr	r3, .L31+16
 362 014a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 363 014c 2B4B     		ldr	r3, .L31+12
 364 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 365 0150 9A42     		cmp	r2, r3
 366 0152 3FD3     		bcc	.L8
 229:..\src/interruptions.c ****                     // verify if frame ID corresponded to the device ID
 230:..\src/interruptions.c ****                     if (rx_data_type == FALSE) {
 367              		.loc 1 230 0
 368 0154 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 369 0156 002B     		cmp	r3, #0
 370 0158 12D1     		bne	.L25
 231:..\src/interruptions.c ****                         // copying data from buffer to global packet
 232:..\src/interruptions.c ****                         memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 371              		.loc 1 232 0
 372 015a 284B     		ldr	r3, .L31+12
 373 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 374 015e 1A46     		mov	r2, r3
 375 0160 2849     		ldr	r1, .L31+20
 376 0162 2948     		ldr	r0, .L31+24
 377 0164 FFF7FEFF 		bl	memcpy
 233:..\src/interruptions.c ****                         g_rx.length = data_packet_length;
 378              		.loc 1 233 0
 379 0168 244B     		ldr	r3, .L31+12
 380 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 381 016c 1AB2     		sxth	r2, r3
 382 016e 264B     		ldr	r3, .L31+24
 383 0170 A3F88020 		strh	r2, [r3, #128]	@ movhi
 234:..\src/interruptions.c ****                         g_rx.ready  = 1;
 384              		.loc 1 234 0
 385 0174 244B     		ldr	r3, .L31+24
 386 0176 0122     		movs	r2, #1
 387 0178 83F88420 		strb	r2, [r3, #132]
 235:..\src/interruptions.c ****                         commProcess();
 388              		.loc 1 235 0
 389 017c FFF7FEFF 		bl	commProcess
 390              	.L25:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 12


 236:..\src/interruptions.c ****                     }
 237:..\src/interruptions.c ****                     
 238:..\src/interruptions.c ****                     data_packet_index  = 0;
 391              		.loc 1 238 0
 392 0180 1F4B     		ldr	r3, .L31+16
 393 0182 0022     		movs	r2, #0
 394 0184 1A70     		strb	r2, [r3]
 239:..\src/interruptions.c ****                     data_packet_length = 0;
 395              		.loc 1 239 0
 396 0186 1D4B     		ldr	r3, .L31+12
 397 0188 0022     		movs	r2, #0
 398 018a 1A70     		strb	r2, [r3]
 240:..\src/interruptions.c ****                     state              = WAIT_START;
 399              		.loc 1 240 0
 400 018c 184B     		ldr	r3, .L31
 401 018e 0022     		movs	r2, #0
 402 0190 1A70     		strb	r2, [r3]
 241:..\src/interruptions.c ****                     package_count++;
 403              		.loc 1 241 0
 404 0192 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 405 0194 0133     		adds	r3, r3, #1
 406 0196 BB71     		strb	r3, [r7, #6]
 242:..\src/interruptions.c ****                 
 243:..\src/interruptions.c ****                 }
 244:..\src/interruptions.c ****                 break;
 407              		.loc 1 244 0
 408 0198 1CE0     		b	.L8
 409              	.L14:
 245:..\src/interruptions.c **** 
 246:..\src/interruptions.c ****             //-----     other device is receving     ---------------------------
 247:..\src/interruptions.c ****             case UNLOAD:
 248:..\src/interruptions.c ****                 if (!(--data_packet_length)) {
 410              		.loc 1 248 0
 411 019a 184B     		ldr	r3, .L31+12
 412 019c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 413 019e 013B     		subs	r3, r3, #1
 414 01a0 DAB2     		uxtb	r2, r3
 415 01a2 164B     		ldr	r3, .L31+12
 416 01a4 1A70     		strb	r2, [r3]
 417 01a6 154B     		ldr	r3, .L31+12
 418 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 419 01aa 002B     		cmp	r3, #0
 420 01ac 11D1     		bne	.L30
 249:..\src/interruptions.c ****                     data_packet_index  = 0;
 421              		.loc 1 249 0
 422 01ae 144B     		ldr	r3, .L31+16
 423 01b0 0022     		movs	r2, #0
 424 01b2 1A70     		strb	r2, [r3]
 250:..\src/interruptions.c ****                     data_packet_length = 0;
 425              		.loc 1 250 0
 426 01b4 114B     		ldr	r3, .L31+12
 427 01b6 0022     		movs	r2, #0
 428 01b8 1A70     		strb	r2, [r3]
 251:..\src/interruptions.c ****                     RS485_CTS_Write(1);
 429              		.loc 1 251 0
 430 01ba 0120     		movs	r0, #1
 431 01bc FFF7FEFF 		bl	RS485_CTS_Write
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 13


 252:..\src/interruptions.c ****                     RS485_CTS_Write(0);
 432              		.loc 1 252 0
 433 01c0 0020     		movs	r0, #0
 434 01c2 FFF7FEFF 		bl	RS485_CTS_Write
 253:..\src/interruptions.c ****                     state              = WAIT_START;
 435              		.loc 1 253 0
 436 01c6 0A4B     		ldr	r3, .L31
 437 01c8 0022     		movs	r2, #0
 438 01ca 1A70     		strb	r2, [r3]
 254:..\src/interruptions.c ****                     package_count++;
 439              		.loc 1 254 0
 440 01cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 441 01ce 0133     		adds	r3, r3, #1
 442 01d0 BB71     		strb	r3, [r7, #6]
 443              	.L30:
 255:..\src/interruptions.c ****                 }
 256:..\src/interruptions.c ****                 break;
 444              		.loc 1 256 0
 445 01d2 00BF     		nop
 446              	.L8:
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 447              		.loc 1 154 0
 448 01d4 FFF7FEFF 		bl	UART_RS485_GetRxBufferSize
 449 01d8 0346     		mov	r3, r0
 450 01da 002B     		cmp	r3, #0
 451 01dc 03D0     		beq	.L29
 154:..\src/interruptions.c ****         // 100 - estimated maximum number of packets we can read without blocking firmware executio
 452              		.loc 1 154 0 is_stmt 0 discriminator 1
 453 01de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 454 01e0 632B     		cmp	r3, #99
 455 01e2 7FF615AF 		bls	.L28
 456              	.L29:
 257:..\src/interruptions.c ****         }
 258:..\src/interruptions.c ****     }
 259:..\src/interruptions.c **** }
 457              		.loc 1 259 0 is_stmt 1
 458 01e6 00BF     		nop
 459 01e8 0837     		adds	r7, r7, #8
 460              		.cfi_def_cfa_offset 8
 461 01ea BD46     		mov	sp, r7
 462              		.cfi_def_cfa_register 13
 463              		@ sp needed
 464 01ec 80BD     		pop	{r7, pc}
 465              	.L32:
 466 01ee 00BF     		.align	2
 467              	.L31:
 468 01f0 00000000 		.word	state.10463
 469 01f4 04000000 		.word	rx_queue.10467
 470 01f8 00000000 		.word	c_mem
 471 01fc 07000000 		.word	data_packet_length.10465
 472 0200 08000000 		.word	data_packet_index.10464
 473 0204 0C000000 		.word	data_packet_buffer.10466
 474 0208 00000000 		.word	g_rx
 475              		.cfi_endproc
 476              	.LFE66:
 477              		.size	interrupt_manager, .-interrupt_manager
 478              		.section	.rodata
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 14


 479 001d 000000   		.align	2
 480              	.LC0:
 481 0020 00       		.ascii	"\000"
 482              		.global	__aeabi_i2f
 483              		.global	__aeabi_fdiv
 484              		.section	.text.function_scheduler,"ax",%progbits
 485              		.align	2
 486              		.global	function_scheduler
 487              		.thumb
 488              		.thumb_func
 489              		.type	function_scheduler, %function
 490              	function_scheduler:
 491              	.LFB67:
 260:..\src/interruptions.c **** //==============================================================================
 261:..\src/interruptions.c **** //                                                            FUNCTION SCHEDULER
 262:..\src/interruptions.c **** //==============================================================================
 263:..\src/interruptions.c **** // Call all the function with the right frequency
 264:..\src/interruptions.c **** //==============================================================================
 265:..\src/interruptions.c **** // Base frequency 5000 Hz (110 us - max. 200 us cycle time)
 266:..\src/interruptions.c **** //==============================================================================
 267:..\src/interruptions.c **** 
 268:..\src/interruptions.c **** void function_scheduler(void) {
 492              		.loc 1 268 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 17504
 495              		@ frame_needed = 1, uses_anonymous_args = 0
 496 0000 B0B5     		push	{r4, r5, r7, lr}
 497              		.cfi_def_cfa_offset 16
 498              		.cfi_offset 4, -16
 499              		.cfi_offset 5, -12
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 502 0002 ADF5884D 		sub	sp, sp, #17408
 503              		.cfi_def_cfa_offset 17424
 504 0006 98B0     		sub	sp, sp, #96
 505              		.cfi_def_cfa_offset 17520
 506 0008 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 269:..\src/interruptions.c ****  
 270:..\src/interruptions.c ****     static uint16 counter_calibration = DIV_INIT_VALUE;
 271:..\src/interruptions.c ****     static uint16 counter_tension_func = DIV_INIT_VALUE;
 272:..\src/interruptions.c ****     char info_[2500] = "";
 508              		.loc 1 272 0
 509 000a 07F56A53 		add	r3, r7, #14976
 510 000e 03F11803 		add	r3, r3, #24
 511 0012 0022     		movs	r2, #0
 512 0014 1A60     		str	r2, [r3]
 513 0016 0433     		adds	r3, r3, #4
 514 0018 4FF41C62 		mov	r2, #2496
 515 001c 0021     		movs	r1, #0
 516 001e 1846     		mov	r0, r3
 517 0020 FFF7FEFF 		bl	memset
 273:..\src/interruptions.c ****     
 274:..\src/interruptions.c ****     uint8 MOTOR_IDX = 0;
 518              		.loc 1 274 0
 519 0024 0023     		movs	r3, #0
 520 0026 07F58842 		add	r2, r7, #17408
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 15


 521 002a 02F15E02 		add	r2, r2, #94
 522 002e 1370     		strb	r3, [r2]
 275:..\src/interruptions.c ****     uint8 SECOND_MOTOR_IDX = 1;
 523              		.loc 1 275 0
 524 0030 0123     		movs	r3, #1
 525 0032 07F58842 		add	r2, r7, #17408
 526 0036 02F15D02 		add	r2, r2, #93
 527 003a 1370     		strb	r3, [r2]
 276:..\src/interruptions.c ****     
 277:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x00);
 528              		.loc 1 277 0
 529 003c 0020     		movs	r0, #0
 530 003e FFF7FEFF 		bl	MY_TIMER_REG_Write
 278:..\src/interruptions.c ****     timer_value0 = (uint32)MY_TIMER_ReadCounter();
 531              		.loc 1 278 0
 532 0042 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 533 0046 0346     		mov	r3, r0
 534 0048 1A46     		mov	r2, r3
 535 004a 814B     		ldr	r3, .L84
 536 004c 1A80     		strh	r2, [r3]	@ movhi
 279:..\src/interruptions.c ****     // Start ADC Conversion, SOC = 1
 280:..\src/interruptions.c **** 
 281:..\src/interruptions.c ****     ADC_SOC_Write(0x01); 
 537              		.loc 1 281 0
 538 004e 0120     		movs	r0, #1
 539 0050 FFF7FEFF 		bl	ADC_SOC_Write
 282:..\src/interruptions.c ****     
 283:..\src/interruptions.c ****     // Check Interrupt 
 284:..\src/interruptions.c **** 
 285:..\src/interruptions.c ****     if (interrupt_flag){
 540              		.loc 1 285 0
 541 0054 7F4B     		ldr	r3, .L84+4
 542 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 543 0058 002B     		cmp	r3, #0
 544 005a 04D0     		beq	.L34
 286:..\src/interruptions.c ****         interrupt_flag = FALSE;
 545              		.loc 1 286 0
 546 005c 7D4B     		ldr	r3, .L84+4
 547 005e 0022     		movs	r2, #0
 548 0060 1A70     		strb	r2, [r3]
 287:..\src/interruptions.c ****         interrupt_manager();
 549              		.loc 1 287 0
 550 0062 FFF7FEFF 		bl	interrupt_manager
 551              	.L34:
 288:..\src/interruptions.c ****     }
 289:..\src/interruptions.c ****     
 290:..\src/interruptions.c ****     switch(c_mem.dev.dev_type){
 552              		.loc 1 290 0
 553 0066 7C4B     		ldr	r3, .L84+8
 554 0068 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 555 006c 042B     		cmp	r3, #4
 556 006e 00F24C82 		bhi	.L35
 557 0072 01A2     		adr	r2, .L37
 558 0074 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 559              		.p2align 2
 560              	.L37:
 561 0078 8D000000 		.word	.L36+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 16


 562 007c 91010000 		.word	.L38+1
 563 0080 EF030000 		.word	.L39+1
 564 0084 EF030000 		.word	.L39+1
 565 0088 91010000 		.word	.L38+1
 566              		.p2align 1
 567              	.L36:
 291:..\src/interruptions.c ****         case SOFTHAND_PRO:
 292:..\src/interruptions.c ****         
 293:..\src/interruptions.c ****             //---------------------------------- Get Encoders
 294:..\src/interruptions.c ****             
 295:..\src/interruptions.c ****             // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND
 296:..\src/interruptions.c ****             if (N_Encoder_Line_Connected[c_mem.motor[MOTOR_IDX].encoder_line] > 0) {
 568              		.loc 1 296 0
 569 008c 07F58843 		add	r3, r7, #17408
 570 0090 03F15E03 		add	r3, r3, #94
 571 0094 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 572 0096 7049     		ldr	r1, .L84+8
 573 0098 1346     		mov	r3, r2
 574 009a DB00     		lsls	r3, r3, #3
 575 009c 9B1A     		subs	r3, r3, r2
 576 009e 1B01     		lsls	r3, r3, #4
 577 00a0 0B44     		add	r3, r3, r1
 578 00a2 03F58873 		add	r3, r3, #272
 579 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 580 00a8 1A46     		mov	r2, r3
 581 00aa 6C4B     		ldr	r3, .L84+12
 582 00ac 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 583 00ae 002B     		cmp	r3, #0
 584 00b0 2BD0     		beq	.L40
 297:..\src/interruptions.c ****                 // Change CS only if there are attached encoders on the line
 298:..\src/interruptions.c ****                 Change_CS_EncoderLine(c_mem.motor[MOTOR_IDX].encoder_line);
 585              		.loc 1 298 0
 586 00b2 07F58843 		add	r3, r7, #17408
 587 00b6 03F15E03 		add	r3, r3, #94
 588 00ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 589 00bc 6649     		ldr	r1, .L84+8
 590 00be 1346     		mov	r3, r2
 591 00c0 DB00     		lsls	r3, r3, #3
 592 00c2 9B1A     		subs	r3, r3, r2
 593 00c4 1B01     		lsls	r3, r3, #4
 594 00c6 0B44     		add	r3, r3, r1
 595 00c8 03F58873 		add	r3, r3, #272
 596 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 597 00ce 1846     		mov	r0, r3
 598 00d0 FFF7FEFF 		bl	Change_CS_EncoderLine
 299:..\src/interruptions.c ****                 
 300:..\src/interruptions.c ****                 encoder_reading_SPI(c_mem.motor[MOTOR_IDX].encoder_line, 0);    // assoc_motor = 0 
 599              		.loc 1 300 0
 600 00d4 07F58843 		add	r3, r7, #17408
 601 00d8 03F15E03 		add	r3, r3, #94
 602 00dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 603 00de 5E49     		ldr	r1, .L84+8
 604 00e0 1346     		mov	r3, r2
 605 00e2 DB00     		lsls	r3, r3, #3
 606 00e4 9B1A     		subs	r3, r3, r2
 607 00e6 1B01     		lsls	r3, r3, #4
 608 00e8 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 17


 609 00ea 03F58873 		add	r3, r3, #272
 610 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 611 00f0 0021     		movs	r1, #0
 612 00f2 1846     		mov	r0, r3
 613 00f4 FFF7FEFF 		bl	encoder_reading_SPI
 301:..\src/interruptions.c **** 
 302:..\src/interruptions.c ****                 // Check Interrupt     
 303:..\src/interruptions.c ****                 
 304:..\src/interruptions.c ****                 if (interrupt_flag){
 614              		.loc 1 304 0
 615 00f8 564B     		ldr	r3, .L84+4
 616 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 617 00fc 002B     		cmp	r3, #0
 618 00fe 04D0     		beq	.L40
 305:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 619              		.loc 1 305 0
 620 0100 544B     		ldr	r3, .L84+4
 621 0102 0022     		movs	r2, #0
 622 0104 1A70     		strb	r2, [r3]
 306:..\src/interruptions.c ****                     interrupt_manager();
 623              		.loc 1 306 0
 624 0106 FFF7FEFF 		bl	interrupt_manager
 625              	.L40:
 307:..\src/interruptions.c ****                 }
 308:..\src/interruptions.c ****             }
 309:..\src/interruptions.c ****             
 310:..\src/interruptions.c ****             //---------------------------------- Control SH Motor
 311:..\src/interruptions.c ****             if (pos_reconstruct[c_mem.motor[MOTOR_IDX].encoder_line]){      // Once encoder line re
 626              		.loc 1 311 0
 627 010a 07F58843 		add	r3, r7, #17408
 628 010e 03F15E03 		add	r3, r3, #94
 629 0112 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 630 0114 5049     		ldr	r1, .L84+8
 631 0116 1346     		mov	r3, r2
 632 0118 DB00     		lsls	r3, r3, #3
 633 011a 9B1A     		subs	r3, r3, r2
 634 011c 1B01     		lsls	r3, r3, #4
 635 011e 0B44     		add	r3, r3, r1
 636 0120 03F58873 		add	r3, r3, #272
 637 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 638 0126 1A46     		mov	r2, r3
 639 0128 4D4B     		ldr	r3, .L84+16
 640 012a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 641 012c 002B     		cmp	r3, #0
 642 012e 24D0     		beq	.L41
 312:..\src/interruptions.c ****                 motor_control_SH();
 643              		.loc 1 312 0
 644 0130 FFF7FEFF 		bl	motor_control_SH
 313:..\src/interruptions.c ****                 
 314:..\src/interruptions.c ****                 // Check external reference before processing other serial data and right after mot
 315:..\src/interruptions.c ****                 if (c_mem.motor[MOTOR_IDX].not_revers_motor_flag == TRUE) {
 645              		.loc 1 315 0
 646 0134 07F58843 		add	r3, r7, #17408
 647 0138 03F15E03 		add	r3, r3, #94
 648 013c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 649 013e 4649     		ldr	r1, .L84+8
 650 0140 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 18


 651 0142 DB00     		lsls	r3, r3, #3
 652 0144 9B1A     		subs	r3, r3, r2
 653 0146 1B01     		lsls	r3, r3, #4
 654 0148 0B44     		add	r3, r3, r1
 655 014a 03F58973 		add	r3, r3, #274
 656 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 657 0150 012B     		cmp	r3, #1
 658 0152 12D1     		bne	.L41
 316:..\src/interruptions.c ****                     if (c_mem.motor[MOTOR_IDX].input_mode == INPUT_MODE_EXTERNAL) {
 659              		.loc 1 316 0
 660 0154 07F58843 		add	r3, r7, #17408
 661 0158 03F15E03 		add	r3, r3, #94
 662 015c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 663 015e 3E49     		ldr	r1, .L84+8
 664 0160 1346     		mov	r3, r2
 665 0162 DB00     		lsls	r3, r3, #3
 666 0164 9B1A     		subs	r3, r3, r2
 667 0166 1B01     		lsls	r3, r3, #4
 668 0168 0B44     		add	r3, r3, r1
 669 016a 03F58773 		add	r3, r3, #270
 670 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 671 0170 002B     		cmp	r3, #0
 672 0172 02D1     		bne	.L41
 317:..\src/interruptions.c ****                         change_ext_ref_flag = FALSE;
 673              		.loc 1 317 0
 674 0174 3B4B     		ldr	r3, .L84+20
 675 0176 0022     		movs	r2, #0
 676 0178 1A70     		strb	r2, [r3]
 677              	.L41:
 318:..\src/interruptions.c ****                     }   
 319:..\src/interruptions.c ****                 }
 320:..\src/interruptions.c ****             }
 321:..\src/interruptions.c **** 
 322:..\src/interruptions.c ****             // Check Interrupt 
 323:..\src/interruptions.c **** 
 324:..\src/interruptions.c ****             if (interrupt_flag){
 678              		.loc 1 324 0
 679 017a 364B     		ldr	r3, .L84+4
 680 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 681 017e 002B     		cmp	r3, #0
 682 0180 00F0AF81 		beq	.L81
 325:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 683              		.loc 1 325 0
 684 0184 334B     		ldr	r3, .L84+4
 685 0186 0022     		movs	r2, #0
 686 0188 1A70     		strb	r2, [r3]
 326:..\src/interruptions.c ****                 interrupt_manager();
 687              		.loc 1 326 0
 688 018a FFF7FEFF 		bl	interrupt_manager
 327:..\src/interruptions.c ****             }
 328:..\src/interruptions.c ****             break;
 689              		.loc 1 328 0
 690 018e A8E1     		b	.L81
 691              	.L38:
 692              	.LBB2:
 329:..\src/interruptions.c ****             
 330:..\src/interruptions.c ****         case GENERIC_2_MOTORS: case SOFTHAND_2_MOTORS:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 19


 331:..\src/interruptions.c ****             
 332:..\src/interruptions.c ****             //---------------------------------- Get Encoders
 333:..\src/interruptions.c ****             for (uint8 i = 0; i < N_ENCODER_LINE_MAX; i++) {
 693              		.loc 1 333 0
 694 0190 0023     		movs	r3, #0
 695 0192 07F58842 		add	r2, r7, #17408
 696 0196 02F15F02 		add	r2, r2, #95
 697 019a 1370     		strb	r3, [r2]
 698 019c 89E0     		b	.L43
 699              	.L48:
 334:..\src/interruptions.c ****                 if (N_Encoder_Line_Connected[i] > 0) {
 700              		.loc 1 334 0
 701 019e 07F58843 		add	r3, r7, #17408
 702 01a2 03F15F03 		add	r3, r3, #95
 703 01a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 704 01a8 2C4A     		ldr	r2, .L84+12
 705 01aa D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 706 01ac 002B     		cmp	r3, #0
 707 01ae 75D0     		beq	.L44
 335:..\src/interruptions.c ****                     // Change CS only if there are attached encoders on the line
 336:..\src/interruptions.c ****                     Change_CS_EncoderLine(i);
 708              		.loc 1 336 0
 709 01b0 07F58843 		add	r3, r7, #17408
 710 01b4 03F15F03 		add	r3, r3, #95
 711 01b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 712 01ba 1846     		mov	r0, r3
 713 01bc FFF7FEFF 		bl	Change_CS_EncoderLine
 337:..\src/interruptions.c ****                               
 338:..\src/interruptions.c ****                     if (c_mem.motor[MOTOR_IDX].encoder_line == i) {
 714              		.loc 1 338 0
 715 01c0 07F58843 		add	r3, r7, #17408
 716 01c4 03F15E03 		add	r3, r3, #94
 717 01c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 718 01ca 2349     		ldr	r1, .L84+8
 719 01cc 1346     		mov	r3, r2
 720 01ce DB00     		lsls	r3, r3, #3
 721 01d0 9B1A     		subs	r3, r3, r2
 722 01d2 1B01     		lsls	r3, r3, #4
 723 01d4 0B44     		add	r3, r3, r1
 724 01d6 03F58873 		add	r3, r3, #272
 725 01da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 726 01dc 07F58842 		add	r2, r7, #17408
 727 01e0 02F15F02 		add	r2, r2, #95
 728 01e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 729 01e6 9A42     		cmp	r2, r3
 730 01e8 0ED1     		bne	.L45
 339:..\src/interruptions.c ****                         // Check if the line is used to control motor or not
 340:..\src/interruptions.c ****                         encoder_reading_SPI(i, MOTOR_IDX); 
 731              		.loc 1 340 0
 732 01ea 07F58843 		add	r3, r7, #17408
 733 01ee 03F15E03 		add	r3, r3, #94
 734 01f2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 735 01f4 07F58843 		add	r3, r7, #17408
 736 01f8 03F15F03 		add	r3, r3, #95
 737 01fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 738 01fe 1146     		mov	r1, r2
 739 0200 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 20


 740 0202 FFF7FEFF 		bl	encoder_reading_SPI
 741 0206 40E0     		b	.L46
 742              	.L45:
 341:..\src/interruptions.c ****                     }
 342:..\src/interruptions.c ****                     else {
 343:..\src/interruptions.c ****                         if (c_mem.motor[SECOND_MOTOR_IDX].encoder_line == i) {
 743              		.loc 1 343 0
 744 0208 07F58843 		add	r3, r7, #17408
 745 020c 03F15D03 		add	r3, r3, #93
 746 0210 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 747 0212 1149     		ldr	r1, .L84+8
 748 0214 1346     		mov	r3, r2
 749 0216 DB00     		lsls	r3, r3, #3
 750 0218 9B1A     		subs	r3, r3, r2
 751 021a 1B01     		lsls	r3, r3, #4
 752 021c 0B44     		add	r3, r3, r1
 753 021e 03F58873 		add	r3, r3, #272
 754 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 755 0224 07F58842 		add	r2, r7, #17408
 756 0228 02F15F02 		add	r2, r2, #95
 757 022c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 758 022e 9A42     		cmp	r2, r3
 759 0230 1AD1     		bne	.L47
 344:..\src/interruptions.c ****                             // Check if the line is used to control motor or not
 345:..\src/interruptions.c ****                             encoder_reading_SPI(i, SECOND_MOTOR_IDX); 
 760              		.loc 1 345 0
 761 0232 07F58843 		add	r3, r7, #17408
 762 0236 03F15D03 		add	r3, r3, #93
 763 023a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 764 023c 07F58843 		add	r3, r7, #17408
 765 0240 03F15F03 		add	r3, r3, #95
 766 0244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 767 0246 1146     		mov	r1, r2
 768 0248 1846     		mov	r0, r3
 769 024a FFF7FEFF 		bl	encoder_reading_SPI
 770 024e 1CE0     		b	.L46
 771              	.L85:
 772              		.align	2
 773              	.L84:
 774 0250 00000000 		.word	timer_value0
 775 0254 00000000 		.word	interrupt_flag
 776 0258 00000000 		.word	c_mem
 777 025c 00000000 		.word	N_Encoder_Line_Connected
 778 0260 00000000 		.word	pos_reconstruct
 779 0264 00000000 		.word	change_ext_ref_flag
 780              	.L47:
 346:..\src/interruptions.c ****                         }
 347:..\src/interruptions.c ****                         else {
 348:..\src/interruptions.c ****                             // Get only raw encoder value
 349:..\src/interruptions.c ****                             ReadEncoderLine(N_Encoder_Line_Connected[i], i);
 781              		.loc 1 349 0
 782 0268 07F58843 		add	r3, r7, #17408
 783 026c 03F15F03 		add	r3, r3, #95
 784 0270 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 785 0272 9E4A     		ldr	r2, .L86
 786 0274 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 787 0276 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 21


 788 0278 07F58843 		add	r3, r7, #17408
 789 027c 03F15F03 		add	r3, r3, #95
 790 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 791 0282 1946     		mov	r1, r3
 792 0284 1046     		mov	r0, r2
 793 0286 FFF7FEFF 		bl	ReadEncoderLine
 794              	.L46:
 350:..\src/interruptions.c ****                             // Values are stored in Encoder_Value[i] vector
 351:..\src/interruptions.c ****                         }
 352:..\src/interruptions.c ****                     }
 353:..\src/interruptions.c **** 
 354:..\src/interruptions.c ****                     // Check Interrupt     
 355:..\src/interruptions.c ****                     
 356:..\src/interruptions.c ****                     if (interrupt_flag){
 795              		.loc 1 356 0
 796 028a 994B     		ldr	r3, .L86+4
 797 028c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 798 028e 002B     		cmp	r3, #0
 799 0290 04D0     		beq	.L44
 357:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 800              		.loc 1 357 0
 801 0292 974B     		ldr	r3, .L86+4
 802 0294 0022     		movs	r2, #0
 803 0296 1A70     		strb	r2, [r3]
 358:..\src/interruptions.c ****                         interrupt_manager();
 804              		.loc 1 358 0
 805 0298 FFF7FEFF 		bl	interrupt_manager
 806              	.L44:
 333:..\src/interruptions.c ****                 if (N_Encoder_Line_Connected[i] > 0) {
 807              		.loc 1 333 0 discriminator 2
 808 029c 07F58843 		add	r3, r7, #17408
 809 02a0 03F15F03 		add	r3, r3, #95
 810 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 811 02a6 0133     		adds	r3, r3, #1
 812 02a8 07F58842 		add	r2, r7, #17408
 813 02ac 02F15F02 		add	r2, r2, #95
 814 02b0 1370     		strb	r3, [r2]
 815              	.L43:
 333:..\src/interruptions.c ****                 if (N_Encoder_Line_Connected[i] > 0) {
 816              		.loc 1 333 0 is_stmt 0 discriminator 1
 817 02b2 07F58843 		add	r3, r7, #17408
 818 02b6 03F15F03 		add	r3, r3, #95
 819 02ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 820 02bc 012B     		cmp	r3, #1
 821 02be 7FF66EAF 		bls	.L48
 822              	.LBE2:
 359:..\src/interruptions.c ****                     }
 360:..\src/interruptions.c ****                 }
 361:..\src/interruptions.c ****             } 
 362:..\src/interruptions.c ****             
 363:..\src/interruptions.c ****             //---------------------------------- Control Motor
 364:..\src/interruptions.c ****             if (pos_reconstruct[c_mem.motor[MOTOR_IDX].encoder_line]){      // Once encoder line re
 823              		.loc 1 364 0 is_stmt 1
 824 02c2 07F58843 		add	r3, r7, #17408
 825 02c6 03F15E03 		add	r3, r3, #94
 826 02ca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 827 02cc 8949     		ldr	r1, .L86+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 22


 828 02ce 1346     		mov	r3, r2
 829 02d0 DB00     		lsls	r3, r3, #3
 830 02d2 9B1A     		subs	r3, r3, r2
 831 02d4 1B01     		lsls	r3, r3, #4
 832 02d6 0B44     		add	r3, r3, r1
 833 02d8 03F58873 		add	r3, r3, #272
 834 02dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 835 02de 1A46     		mov	r2, r3
 836 02e0 854B     		ldr	r3, .L86+12
 837 02e2 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 838 02e4 002B     		cmp	r3, #0
 839 02e6 2AD0     		beq	.L49
 365:..\src/interruptions.c ****                 // Control MOTOR_IDX motor (always active) according to motor driver type
 366:..\src/interruptions.c ****                 motor_control_generic(MOTOR_IDX);
 840              		.loc 1 366 0
 841 02e8 07F58843 		add	r3, r7, #17408
 842 02ec 03F15E03 		add	r3, r3, #94
 843 02f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 844 02f2 1846     		mov	r0, r3
 845 02f4 FFF7FEFF 		bl	motor_control_generic
 367:..\src/interruptions.c ****                 
 368:..\src/interruptions.c ****                 // Check external reference before processing other serial data and right after mot
 369:..\src/interruptions.c ****                 if (c_mem.motor[MOTOR_IDX].not_revers_motor_flag == TRUE) {
 846              		.loc 1 369 0
 847 02f8 07F58843 		add	r3, r7, #17408
 848 02fc 03F15E03 		add	r3, r3, #94
 849 0300 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 850 0302 7C49     		ldr	r1, .L86+8
 851 0304 1346     		mov	r3, r2
 852 0306 DB00     		lsls	r3, r3, #3
 853 0308 9B1A     		subs	r3, r3, r2
 854 030a 1B01     		lsls	r3, r3, #4
 855 030c 0B44     		add	r3, r3, r1
 856 030e 03F58973 		add	r3, r3, #274
 857 0312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 858 0314 012B     		cmp	r3, #1
 859 0316 12D1     		bne	.L49
 370:..\src/interruptions.c ****                     if (c_mem.motor[MOTOR_IDX].input_mode == INPUT_MODE_EXTERNAL) {
 860              		.loc 1 370 0
 861 0318 07F58843 		add	r3, r7, #17408
 862 031c 03F15E03 		add	r3, r3, #94
 863 0320 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 864 0322 7449     		ldr	r1, .L86+8
 865 0324 1346     		mov	r3, r2
 866 0326 DB00     		lsls	r3, r3, #3
 867 0328 9B1A     		subs	r3, r3, r2
 868 032a 1B01     		lsls	r3, r3, #4
 869 032c 0B44     		add	r3, r3, r1
 870 032e 03F58773 		add	r3, r3, #270
 871 0332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 872 0334 002B     		cmp	r3, #0
 873 0336 02D1     		bne	.L49
 371:..\src/interruptions.c ****                         change_ext_ref_flag = FALSE;
 874              		.loc 1 371 0
 875 0338 704B     		ldr	r3, .L86+16
 876 033a 0022     		movs	r2, #0
 877 033c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 23


 878              	.L49:
 372:..\src/interruptions.c ****                     }   
 373:..\src/interruptions.c ****                 }
 374:..\src/interruptions.c ****                      
 375:..\src/interruptions.c ****                 
 376:..\src/interruptions.c ****             }
 377:..\src/interruptions.c ****             
 378:..\src/interruptions.c ****             // Check Interrupt 
 379:..\src/interruptions.c **** 
 380:..\src/interruptions.c ****             if (interrupt_flag){
 879              		.loc 1 380 0
 880 033e 6C4B     		ldr	r3, .L86+4
 881 0340 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 882 0342 002B     		cmp	r3, #0
 883 0344 04D0     		beq	.L50
 381:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 884              		.loc 1 381 0
 885 0346 6A4B     		ldr	r3, .L86+4
 886 0348 0022     		movs	r2, #0
 887 034a 1A70     		strb	r2, [r3]
 382:..\src/interruptions.c ****                 interrupt_manager();
 888              		.loc 1 382 0
 889 034c FFF7FEFF 		bl	interrupt_manager
 890              	.L50:
 383:..\src/interruptions.c ****             }
 384:..\src/interruptions.c ****             
 385:..\src/interruptions.c ****             // Control 2nd motor (if necessary) according to motor driver type
 386:..\src/interruptions.c ****             if (c_mem.dev.use_2nd_motor_flag == TRUE){
 891              		.loc 1 386 0
 892 0350 684B     		ldr	r3, .L86+8
 893 0352 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 894 0356 012B     		cmp	r3, #1
 895 0358 40F0C580 		bne	.L82
 387:..\src/interruptions.c ****                 if (pos_reconstruct[c_mem.motor[SECOND_MOTOR_IDX].encoder_line]){      // Once enco
 896              		.loc 1 387 0
 897 035c 07F58843 		add	r3, r7, #17408
 898 0360 03F15D03 		add	r3, r3, #93
 899 0364 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 900 0366 6349     		ldr	r1, .L86+8
 901 0368 1346     		mov	r3, r2
 902 036a DB00     		lsls	r3, r3, #3
 903 036c 9B1A     		subs	r3, r3, r2
 904 036e 1B01     		lsls	r3, r3, #4
 905 0370 0B44     		add	r3, r3, r1
 906 0372 03F58873 		add	r3, r3, #272
 907 0376 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 908 0378 1A46     		mov	r2, r3
 909 037a 5F4B     		ldr	r3, .L86+12
 910 037c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 911 037e 002B     		cmp	r3, #0
 912 0380 2AD0     		beq	.L52
 388:..\src/interruptions.c ****                     motor_control_generic(SECOND_MOTOR_IDX);
 913              		.loc 1 388 0
 914 0382 07F58843 		add	r3, r7, #17408
 915 0386 03F15D03 		add	r3, r3, #93
 916 038a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 917 038c 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 24


 918 038e FFF7FEFF 		bl	motor_control_generic
 389:..\src/interruptions.c ****                     
 390:..\src/interruptions.c ****                     // Check external reference before processing other serial data and right after
 391:..\src/interruptions.c ****                     if (c_mem.motor[SECOND_MOTOR_IDX].not_revers_motor_flag == TRUE) {
 919              		.loc 1 391 0
 920 0392 07F58843 		add	r3, r7, #17408
 921 0396 03F15D03 		add	r3, r3, #93
 922 039a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 923 039c 5549     		ldr	r1, .L86+8
 924 039e 1346     		mov	r3, r2
 925 03a0 DB00     		lsls	r3, r3, #3
 926 03a2 9B1A     		subs	r3, r3, r2
 927 03a4 1B01     		lsls	r3, r3, #4
 928 03a6 0B44     		add	r3, r3, r1
 929 03a8 03F58973 		add	r3, r3, #274
 930 03ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 931 03ae 012B     		cmp	r3, #1
 932 03b0 12D1     		bne	.L52
 392:..\src/interruptions.c ****                         if (c_mem.motor[SECOND_MOTOR_IDX].input_mode == INPUT_MODE_EXTERNAL) {
 933              		.loc 1 392 0
 934 03b2 07F58843 		add	r3, r7, #17408
 935 03b6 03F15D03 		add	r3, r3, #93
 936 03ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 937 03bc 4D49     		ldr	r1, .L86+8
 938 03be 1346     		mov	r3, r2
 939 03c0 DB00     		lsls	r3, r3, #3
 940 03c2 9B1A     		subs	r3, r3, r2
 941 03c4 1B01     		lsls	r3, r3, #4
 942 03c6 0B44     		add	r3, r3, r1
 943 03c8 03F58773 		add	r3, r3, #270
 944 03cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 945 03ce 002B     		cmp	r3, #0
 946 03d0 02D1     		bne	.L52
 393:..\src/interruptions.c ****                             change_ext_ref_flag = FALSE;
 947              		.loc 1 393 0
 948 03d2 4A4B     		ldr	r3, .L86+16
 949 03d4 0022     		movs	r2, #0
 950 03d6 1A70     		strb	r2, [r3]
 951              	.L52:
 394:..\src/interruptions.c ****                         }   
 395:..\src/interruptions.c ****                     }
 396:..\src/interruptions.c ****                     
 397:..\src/interruptions.c ****                   
 398:..\src/interruptions.c ****                 }
 399:..\src/interruptions.c ****                 // Check Interrupt 
 400:..\src/interruptions.c **** 
 401:..\src/interruptions.c ****                 if (interrupt_flag){
 952              		.loc 1 401 0
 953 03d8 454B     		ldr	r3, .L86+4
 954 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 955 03dc 002B     		cmp	r3, #0
 956 03de 00F08280 		beq	.L82
 402:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 957              		.loc 1 402 0
 958 03e2 434B     		ldr	r3, .L86+4
 959 03e4 0022     		movs	r2, #0
 960 03e6 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 25


 403:..\src/interruptions.c ****                     interrupt_manager();
 961              		.loc 1 403 0
 962 03e8 FFF7FEFF 		bl	interrupt_manager
 404:..\src/interruptions.c ****                 }
 405:..\src/interruptions.c ****             }  
 406:..\src/interruptions.c ****             break;
 963              		.loc 1 406 0
 964 03ec 7BE0     		b	.L82
 965              	.L39:
 407:..\src/interruptions.c ****             
 408:..\src/interruptions.c ****         case AIR_CHAMBERS_FB: case OTBK_ACT_WRIST_MS:
 409:..\src/interruptions.c ****             
 410:..\src/interruptions.c ****             //---------------------------------- Force Feedback control
 411:..\src/interruptions.c ****             if (master_mode && c_mem.MS.slave_comm_active) {
 966              		.loc 1 411 0
 967 03ee 444B     		ldr	r3, .L86+20
 968 03f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 969 03f2 002B     		cmp	r3, #0
 970 03f4 38D0     		beq	.L53
 971              		.loc 1 411 0 is_stmt 0 discriminator 1
 972 03f6 3F4B     		ldr	r3, .L86+8
 973 03f8 93F8C032 		ldrb	r3, [r3, #704]	@ zero_extendqisi2
 974 03fc 002B     		cmp	r3, #0
 975 03fe 33D0     		beq	.L53
 412:..\src/interruptions.c ****                 
 413:..\src/interruptions.c ****                 if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
 976              		.loc 1 413 0 is_stmt 1
 977 0400 3C4B     		ldr	r3, .L86+8
 978 0402 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 979 0406 022B     		cmp	r3, #2
 980 0408 08D1     		bne	.L54
 414:..\src/interruptions.c ****                     air_chambers_control(SECOND_MOTOR_IDX);
 981              		.loc 1 414 0
 982 040a 07F58843 		add	r3, r7, #17408
 983 040e 03F15D03 		add	r3, r3, #93
 984 0412 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 985 0414 1846     		mov	r0, r3
 986 0416 FFF7FEFF 		bl	air_chambers_control
 987 041a 07E0     		b	.L55
 988              	.L54:
 415:..\src/interruptions.c ****                 }
 416:..\src/interruptions.c ****                 else{ //OTBK_ACT_WRIST_MS
 417:..\src/interruptions.c ****                     otbk_act_wrist_control(SECOND_MOTOR_IDX);
 989              		.loc 1 417 0
 990 041c 07F58843 		add	r3, r7, #17408
 991 0420 03F15D03 		add	r3, r3, #93
 992 0424 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 993 0426 1846     		mov	r0, r3
 994 0428 FFF7FEFF 		bl	otbk_act_wrist_control
 995              	.L55:
 418:..\src/interruptions.c ****                 }
 419:..\src/interruptions.c **** 
 420:..\src/interruptions.c ****                 // Check Interrupt 
 421:..\src/interruptions.c **** 
 422:..\src/interruptions.c ****                 if (interrupt_flag){
 996              		.loc 1 422 0
 997 042c 304B     		ldr	r3, .L86+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 26


 998 042e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999 0430 002B     		cmp	r3, #0
 1000 0432 04D0     		beq	.L56
 423:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 1001              		.loc 1 423 0
 1002 0434 2E4B     		ldr	r3, .L86+4
 1003 0436 0022     		movs	r2, #0
 1004 0438 1A70     		strb	r2, [r3]
 424:..\src/interruptions.c ****                     interrupt_manager();
 1005              		.loc 1 424 0
 1006 043a FFF7FEFF 		bl	interrupt_manager
 1007              	.L56:
 425:..\src/interruptions.c ****                 }
 426:..\src/interruptions.c ****             
 427:..\src/interruptions.c ****                 drive_slave(SECOND_MOTOR_IDX, c_mem.MS.slave_ID);
 1008              		.loc 1 427 0
 1009 043e 2D4B     		ldr	r3, .L86+8
 1010 0440 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 1011 0444 07F58843 		add	r3, r7, #17408
 1012 0448 03F15D03 		add	r3, r3, #93
 1013 044c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1014 044e 1146     		mov	r1, r2
 1015 0450 1846     		mov	r0, r3
 1016 0452 FFF7FEFF 		bl	drive_slave
 428:..\src/interruptions.c ****             
 429:..\src/interruptions.c ****                 // Check Interrupt 
 430:..\src/interruptions.c **** 
 431:..\src/interruptions.c ****                 if (interrupt_flag){
 1017              		.loc 1 431 0
 1018 0456 264B     		ldr	r3, .L86+4
 1019 0458 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1020 045a 002B     		cmp	r3, #0
 1021 045c 04D0     		beq	.L53
 432:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 1022              		.loc 1 432 0
 1023 045e 244B     		ldr	r3, .L86+4
 1024 0460 0022     		movs	r2, #0
 1025 0462 1A70     		strb	r2, [r3]
 433:..\src/interruptions.c ****                     interrupt_manager();
 1026              		.loc 1 433 0
 1027 0464 FFF7FEFF 		bl	interrupt_manager
 1028              	.L53:
 434:..\src/interruptions.c ****                 }
 435:..\src/interruptions.c ****             }
 436:..\src/interruptions.c ****             if (!master_mode){
 1029              		.loc 1 436 0
 1030 0468 254B     		ldr	r3, .L86+20
 1031 046a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1032 046c 002B     		cmp	r3, #0
 1033 046e 11D1     		bne	.L57
 437:..\src/interruptions.c ****                 
 438:..\src/interruptions.c ****                 if (c_mem.MS.slave_comm_active) {
 1034              		.loc 1 438 0
 1035 0470 204B     		ldr	r3, .L86+8
 1036 0472 93F8C032 		ldrb	r3, [r3, #704]	@ zero_extendqisi2
 1037 0476 002B     		cmp	r3, #0
 1038 0478 01D0     		beq	.L58
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 27


 439:..\src/interruptions.c ****                     // Stop feedback motors
 440:..\src/interruptions.c ****                     stop_master_device();
 1039              		.loc 1 440 0
 1040 047a FFF7FEFF 		bl	stop_master_device
 1041              	.L58:
 441:..\src/interruptions.c ****                 }
 442:..\src/interruptions.c ****                 // Disable slave or motors
 443:..\src/interruptions.c ****                 deactivate_slaves();
 1042              		.loc 1 443 0
 1043 047e FFF7FEFF 		bl	deactivate_slaves
 444:..\src/interruptions.c ****                         
 445:..\src/interruptions.c ****                 // Check Interrupt 
 446:..\src/interruptions.c ****                 if (interrupt_flag){
 1044              		.loc 1 446 0
 1045 0482 1B4B     		ldr	r3, .L86+4
 1046 0484 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1047 0486 002B     		cmp	r3, #0
 1048 0488 04D0     		beq	.L57
 447:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 1049              		.loc 1 447 0
 1050 048a 194B     		ldr	r3, .L86+4
 1051 048c 0022     		movs	r2, #0
 1052 048e 1A70     		strb	r2, [r3]
 448:..\src/interruptions.c ****                     interrupt_manager();
 1053              		.loc 1 448 0
 1054 0490 FFF7FEFF 		bl	interrupt_manager
 1055              	.L57:
 449:..\src/interruptions.c ****                 } 
 450:..\src/interruptions.c ****             }
 451:..\src/interruptions.c ****     
 452:..\src/interruptions.c ****             // Control Master device main motor 
 453:..\src/interruptions.c ****             // (e.g. in AIR_CHAMBERS_FB device controls MOTOR_IDX motor [PUMP] with PWM control)
 454:..\src/interruptions.c ****             motor_control_generic(MOTOR_IDX);
 1056              		.loc 1 454 0
 1057 0494 07F58843 		add	r3, r7, #17408
 1058 0498 03F15E03 		add	r3, r3, #94
 1059 049c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1060 049e 1846     		mov	r0, r3
 1061 04a0 FFF7FEFF 		bl	motor_control_generic
 455:..\src/interruptions.c ****                         
 456:..\src/interruptions.c ****             // Always limit output voltage on the wrist
 457:..\src/interruptions.c ****              if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
 1062              		.loc 1 457 0
 1063 04a4 134B     		ldr	r3, .L86+8
 1064 04a6 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 1065 04aa 032B     		cmp	r3, #3
 1066 04ac 0FD1     		bne	.L59
 458:..\src/interruptions.c ****                 if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
 1067              		.loc 1 458 0
 1068 04ae 154B     		ldr	r3, .L86+24
 1069 04b0 9B68     		ldr	r3, [r3, #8]
 1070 04b2 432B     		cmp	r3, #67
 1071 04b4 02DD     		ble	.L60
 459:..\src/interruptions.c ****                     g_refNew[0].pwm = 67; // 67
 1072              		.loc 1 459 0
 1073 04b6 134B     		ldr	r3, .L86+24
 1074 04b8 4322     		movs	r2, #67
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 28


 1075 04ba 9A60     		str	r2, [r3, #8]
 1076              	.L60:
 460:..\src/interruptions.c ****                 if (g_refNew[0].pwm < -67)
 1077              		.loc 1 460 0
 1078 04bc 114B     		ldr	r3, .L86+24
 1079 04be 9B68     		ldr	r3, [r3, #8]
 1080 04c0 13F1430F 		cmn	r3, #67
 1081 04c4 03DA     		bge	.L59
 461:..\src/interruptions.c ****                     g_refNew[0].pwm = -67;
 1082              		.loc 1 461 0
 1083 04c6 0F4B     		ldr	r3, .L86+24
 1084 04c8 6FF04202 		mvn	r2, #66
 1085 04cc 9A60     		str	r2, [r3, #8]
 1086              	.L59:
 462:..\src/interruptions.c ****             }
 463:..\src/interruptions.c ****             
 464:..\src/interruptions.c ****             // Check Interrupt 
 465:..\src/interruptions.c **** 
 466:..\src/interruptions.c ****             if (interrupt_flag){
 1087              		.loc 1 466 0
 1088 04ce 084B     		ldr	r3, .L86+4
 1089 04d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1090 04d2 002B     		cmp	r3, #0
 1091 04d4 18D0     		beq	.L83
 467:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 1092              		.loc 1 467 0
 1093 04d6 064B     		ldr	r3, .L86+4
 1094 04d8 0022     		movs	r2, #0
 1095 04da 1A70     		strb	r2, [r3]
 468:..\src/interruptions.c ****                 interrupt_manager();
 1096              		.loc 1 468 0
 1097 04dc FFF7FEFF 		bl	interrupt_manager
 469:..\src/interruptions.c ****             }
 470:..\src/interruptions.c ****             
 471:..\src/interruptions.c ****             break;
 1098              		.loc 1 471 0
 1099 04e0 12E0     		b	.L83
 1100              	.L81:
 328:..\src/interruptions.c ****             
 1101              		.loc 1 328 0
 1102 04e2 00BF     		nop
 1103 04e4 11E0     		b	.L35
 1104              	.L82:
 406:..\src/interruptions.c ****             
 1105              		.loc 1 406 0
 1106 04e6 00BF     		nop
 1107 04e8 0FE0     		b	.L35
 1108              	.L87:
 1109 04ea 00BF     		.align	2
 1110              	.L86:
 1111 04ec 00000000 		.word	N_Encoder_Line_Connected
 1112 04f0 00000000 		.word	interrupt_flag
 1113 04f4 00000000 		.word	c_mem
 1114 04f8 00000000 		.word	pos_reconstruct
 1115 04fc 00000000 		.word	change_ext_ref_flag
 1116 0500 00000000 		.word	master_mode
 1117 0504 00000000 		.word	g_refNew
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 29


 1118              	.L83:
 1119              		.loc 1 471 0
 1120 0508 00BF     		nop
 1121              	.L35:
 472:..\src/interruptions.c ****     }
 473:..\src/interruptions.c **** 
 474:..\src/interruptions.c ****     //---------------------------------- Read conversion buffer - LOCK function
 475:..\src/interruptions.c **** 
 476:..\src/interruptions.c ****     analog_read_end();
 1122              		.loc 1 476 0
 1123 050a FFF7FEFF 		bl	analog_read_end
 477:..\src/interruptions.c **** 
 478:..\src/interruptions.c ****     if (interrupt_flag){
 1124              		.loc 1 478 0
 1125 050e 714B     		ldr	r3, .L88
 1126 0510 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1127 0512 002B     		cmp	r3, #0
 1128 0514 04D0     		beq	.L62
 479:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1129              		.loc 1 479 0
 1130 0516 6F4B     		ldr	r3, .L88
 1131 0518 0022     		movs	r2, #0
 1132 051a 1A70     		strb	r2, [r3]
 480:..\src/interruptions.c ****         interrupt_manager();
 1133              		.loc 1 480 0
 1134 051c FFF7FEFF 		bl	interrupt_manager
 1135              	.L62:
 481:..\src/interruptions.c ****     }
 482:..\src/interruptions.c **** 
 483:..\src/interruptions.c ****     //---------------------------------- Control Overcurrent
 484:..\src/interruptions.c **** 
 485:..\src/interruptions.c ****     overcurrent_control();
 1136              		.loc 1 485 0
 1137 0520 FFF7FEFF 		bl	overcurrent_control
 486:..\src/interruptions.c ****     
 487:..\src/interruptions.c ****     // Check Interrupt 
 488:..\src/interruptions.c ****     
 489:..\src/interruptions.c ****     if (interrupt_flag){
 1138              		.loc 1 489 0
 1139 0524 6B4B     		ldr	r3, .L88
 1140 0526 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1141 0528 002B     		cmp	r3, #0
 1142 052a 04D0     		beq	.L63
 490:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1143              		.loc 1 490 0
 1144 052c 694B     		ldr	r3, .L88
 1145 052e 0022     		movs	r2, #0
 1146 0530 1A70     		strb	r2, [r3]
 491:..\src/interruptions.c ****         interrupt_manager();
 1147              		.loc 1 491 0
 1148 0532 FFF7FEFF 		bl	interrupt_manager
 1149              	.L63:
 492:..\src/interruptions.c ****     }
 493:..\src/interruptions.c **** 
 494:..\src/interruptions.c ****     //---------------------------------- Calibration 
 495:..\src/interruptions.c **** 
 496:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 30


 497:..\src/interruptions.c ****     if (calib.enabled == TRUE) {
 1150              		.loc 1 497 0
 1151 0536 684B     		ldr	r3, .L88+4
 1152 0538 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1153 053a 012B     		cmp	r3, #1
 1154 053c 0ED1     		bne	.L64
 498:..\src/interruptions.c ****         if (counter_calibration == CALIBRATION_DIV) {
 1155              		.loc 1 498 0
 1156 053e 674B     		ldr	r3, .L88+8
 1157 0540 1B88     		ldrh	r3, [r3]
 1158 0542 0A2B     		cmp	r3, #10
 1159 0544 04D1     		bne	.L65
 499:..\src/interruptions.c ****             calibration();
 1160              		.loc 1 499 0
 1161 0546 FFF7FEFF 		bl	calibration
 500:..\src/interruptions.c ****             counter_calibration = 0;
 1162              		.loc 1 500 0
 1163 054a 644B     		ldr	r3, .L88+8
 1164 054c 0022     		movs	r2, #0
 1165 054e 1A80     		strh	r2, [r3]	@ movhi
 1166              	.L65:
 501:..\src/interruptions.c ****         }
 502:..\src/interruptions.c ****         counter_calibration++;
 1167              		.loc 1 502 0
 1168 0550 624B     		ldr	r3, .L88+8
 1169 0552 1B88     		ldrh	r3, [r3]
 1170 0554 0133     		adds	r3, r3, #1
 1171 0556 9AB2     		uxth	r2, r3
 1172 0558 604B     		ldr	r3, .L88+8
 1173 055a 1A80     		strh	r2, [r3]	@ movhi
 1174              	.L64:
 503:..\src/interruptions.c ****     }
 504:..\src/interruptions.c **** 
 505:..\src/interruptions.c ****     // Check Interrupt 
 506:..\src/interruptions.c ****     
 507:..\src/interruptions.c ****     if (interrupt_flag){
 1175              		.loc 1 507 0
 1176 055c 5D4B     		ldr	r3, .L88
 1177 055e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1178 0560 002B     		cmp	r3, #0
 1179 0562 04D0     		beq	.L66
 508:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1180              		.loc 1 508 0
 1181 0564 5B4B     		ldr	r3, .L88
 1182 0566 0022     		movs	r2, #0
 1183 0568 1A70     		strb	r2, [r3]
 509:..\src/interruptions.c ****         interrupt_manager();
 1184              		.loc 1 509 0
 1185 056a FFF7FEFF 		bl	interrupt_manager
 1186              	.L66:
 510:..\src/interruptions.c ****     }
 511:..\src/interruptions.c ****     
 512:..\src/interruptions.c ****     if (c_mem.dev.dev_type == SOFTHAND_PRO){   
 1187              		.loc 1 512 0
 1188 056e 5C4B     		ldr	r3, .L88+12
 1189 0570 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 1190 0574 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 31


 1191 0576 1CD1     		bne	.L67
 513:..\src/interruptions.c ****     
 514:..\src/interruptions.c ****         //---------------------------------- Rest position check
 515:..\src/interruptions.c **** 
 516:..\src/interruptions.c ****         // Divider 10, freq = 500 Hz
 517:..\src/interruptions.c ****         if (c_mem.SH.rest_position_flag == TRUE){
 1192              		.loc 1 517 0
 1193 0578 594B     		ldr	r3, .L88+12
 1194 057a 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 1195 057e 012B     		cmp	r3, #1
 1196 0580 17D1     		bne	.L67
 518:..\src/interruptions.c ****             if (counter_calibration == CALIBRATION_DIV) {
 1197              		.loc 1 518 0
 1198 0582 564B     		ldr	r3, .L88+8
 1199 0584 1B88     		ldrh	r3, [r3]
 1200 0586 0A2B     		cmp	r3, #10
 1201 0588 04D1     		bne	.L68
 519:..\src/interruptions.c ****                     check_rest_position();
 1202              		.loc 1 519 0
 1203 058a FFF7FEFF 		bl	check_rest_position
 520:..\src/interruptions.c ****                     counter_calibration = 0;
 1204              		.loc 1 520 0
 1205 058e 534B     		ldr	r3, .L88+8
 1206 0590 0022     		movs	r2, #0
 1207 0592 1A80     		strh	r2, [r3]	@ movhi
 1208              	.L68:
 521:..\src/interruptions.c ****             }
 522:..\src/interruptions.c ****             counter_calibration++;
 1209              		.loc 1 522 0
 1210 0594 514B     		ldr	r3, .L88+8
 1211 0596 1B88     		ldrh	r3, [r3]
 1212 0598 0133     		adds	r3, r3, #1
 1213 059a 9AB2     		uxth	r2, r3
 1214 059c 4F4B     		ldr	r3, .L88+8
 1215 059e 1A80     		strh	r2, [r3]	@ movhi
 523:..\src/interruptions.c **** 
 524:..\src/interruptions.c ****             // Check Interrupt     
 525:..\src/interruptions.c ****             if (interrupt_flag){
 1216              		.loc 1 525 0
 1217 05a0 4C4B     		ldr	r3, .L88
 1218 05a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1219 05a4 002B     		cmp	r3, #0
 1220 05a6 04D0     		beq	.L67
 526:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 1221              		.loc 1 526 0
 1222 05a8 4A4B     		ldr	r3, .L88
 1223 05aa 0022     		movs	r2, #0
 1224 05ac 1A70     		strb	r2, [r3]
 527:..\src/interruptions.c ****                 interrupt_manager();
 1225              		.loc 1 527 0
 1226 05ae FFF7FEFF 		bl	interrupt_manager
 1227              	.L67:
 528:..\src/interruptions.c ****             }
 529:..\src/interruptions.c ****         }
 530:..\src/interruptions.c ****         
 531:..\src/interruptions.c ****     }
 532:..\src/interruptions.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 32


 533:..\src/interruptions.c ****      
 534:..\src/interruptions.c ****     //---------------------------------- EMG history Update
 535:..\src/interruptions.c ****     if (c_mem.exp.record_EMG_history_on_SD){
 1228              		.loc 1 535 0
 1229 05b2 4B4B     		ldr	r3, .L88+12
 1230 05b4 93F83432 		ldrb	r3, [r3, #564]	@ zero_extendqisi2
 1231 05b8 002B     		cmp	r3, #0
 1232 05ba 0AD0     		beq	.L69
 536:..\src/interruptions.c ****         
 537:..\src/interruptions.c ****         update_EMG_history();
 1233              		.loc 1 537 0
 1234 05bc FFF7FEFF 		bl	update_EMG_history
 538:..\src/interruptions.c **** 
 539:..\src/interruptions.c ****         // Check Interrupt 
 540:..\src/interruptions.c **** 
 541:..\src/interruptions.c ****         if (interrupt_flag){
 1235              		.loc 1 541 0
 1236 05c0 444B     		ldr	r3, .L88
 1237 05c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1238 05c4 002B     		cmp	r3, #0
 1239 05c6 04D0     		beq	.L69
 542:..\src/interruptions.c ****             interrupt_flag = FALSE;
 1240              		.loc 1 542 0
 1241 05c8 424B     		ldr	r3, .L88
 1242 05ca 0022     		movs	r2, #0
 1243 05cc 1A70     		strb	r2, [r3]
 543:..\src/interruptions.c ****             interrupt_manager();
 1244              		.loc 1 543 0
 1245 05ce FFF7FEFF 		bl	interrupt_manager
 1246              	.L69:
 544:..\src/interruptions.c ****         }
 545:..\src/interruptions.c ****     }
 546:..\src/interruptions.c **** 
 547:..\src/interruptions.c ****     
 548:..\src/interruptions.c ****     //---------------------------------- Control Cycles Counter
 549:..\src/interruptions.c **** 
 550:..\src/interruptions.c ****     if (pos_reconstruct[c_mem.motor[0].encoder_line]){      // Once Motor 0 encoder line reading is
 1247              		.loc 1 550 0
 1248 05d2 434B     		ldr	r3, .L88+12
 1249 05d4 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 1250 05d8 1A46     		mov	r2, r3
 1251 05da 424B     		ldr	r3, .L88+16
 1252 05dc 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1253 05de 002B     		cmp	r3, #0
 1254 05e0 01D0     		beq	.L70
 551:..\src/interruptions.c ****         cycles_counter_update();                            // Need at least one encoder to work
 1255              		.loc 1 551 0
 1256 05e2 FFF7FEFF 		bl	cycles_counter_update
 1257              	.L70:
 552:..\src/interruptions.c ****     }
 553:..\src/interruptions.c **** 
 554:..\src/interruptions.c ****     // Check Cycles Interrupt 
 555:..\src/interruptions.c ****     
 556:..\src/interruptions.c ****     if (cycles_interrupt_flag){
 1258              		.loc 1 556 0
 1259 05e6 404B     		ldr	r3, .L88+20
 1260 05e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 33


 1261 05ea 002B     		cmp	r3, #0
 1262 05ec 00F09B80 		beq	.L71
 557:..\src/interruptions.c ****         cycles_interrupt_flag = FALSE;
 1263              		.loc 1 557 0
 1264 05f0 3D4B     		ldr	r3, .L88+20
 1265 05f2 0022     		movs	r2, #0
 1266 05f4 1A70     		strb	r2, [r3]
 558:..\src/interruptions.c **** 
 559:..\src/interruptions.c ****         // Cycles are written only every 120 seconds (CYCLES_TIMER interrupt)
 560:..\src/interruptions.c ****         // to save EEPROM writings (1M maximum)
 561:..\src/interruptions.c ****         if(can_write) {
 1267              		.loc 1 561 0
 1268 05f6 3D4B     		ldr	r3, .L88+24
 1269 05f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1270 05fa 002B     		cmp	r3, #0
 1271 05fc 54D0     		beq	.L72
 562:..\src/interruptions.c ****             cycles_status = PREPARE_DATA;
 1272              		.loc 1 562 0
 1273 05fe 3C4B     		ldr	r3, .L88+28
 1274 0600 0022     		movs	r2, #0
 1275 0602 1A70     		strb	r2, [r3]
 563:..\src/interruptions.c ****             
 564:..\src/interruptions.c ****             //Update time variable
 565:..\src/interruptions.c ****             g_mem.cnt.total_runtime = g_mem.cnt.total_runtime + 120;  // Add 120 seconds.
 1276              		.loc 1 565 0
 1277 0604 3B4B     		ldr	r3, .L88+32
 1278 0606 9B6D     		ldr	r3, [r3, #88]
 1279 0608 7833     		adds	r3, r3, #120
 1280 060a 3A4A     		ldr	r2, .L88+32
 1281 060c 9365     		str	r3, [r2, #88]
 566:..\src/interruptions.c ****             
 567:..\src/interruptions.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 1282              		.loc 1 567 0
 1283 060e 344B     		ldr	r3, .L88+12
 1284 0610 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 1285 0614 012B     		cmp	r3, #1
 1286 0616 47D1     		bne	.L72
 568:..\src/interruptions.c ****                 
 569:..\src/interruptions.c ****                 store_RTC_current_time();
 1287              		.loc 1 569 0
 1288 0618 FFF7FEFF 		bl	store_RTC_current_time
 570:..\src/interruptions.c ****                 
 571:..\src/interruptions.c ****                 //Write in SD card
 572:..\src/interruptions.c ****                 prepare_SD_info(info_);
 1289              		.loc 1 572 0
 1290 061c 07F56A53 		add	r3, r7, #14976
 1291 0620 03F11803 		add	r3, r3, #24
 1292 0624 1846     		mov	r0, r3
 1293 0626 FFF7FEFF 		bl	prepare_SD_info
 573:..\src/interruptions.c ****                 FS_Write(pFile, info_, strlen(info_));
 1294              		.loc 1 573 0
 1295 062a 334B     		ldr	r3, .L88+36
 1296 062c 1C68     		ldr	r4, [r3]
 1297 062e 07F56A53 		add	r3, r7, #14976
 1298 0632 03F11803 		add	r3, r3, #24
 1299 0636 1846     		mov	r0, r3
 1300 0638 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 34


 1301 063c 0246     		mov	r2, r0
 1302 063e 07F56A53 		add	r3, r7, #14976
 1303 0642 03F11803 		add	r3, r3, #24
 1304 0646 1946     		mov	r1, r3
 1305 0648 2046     		mov	r0, r4
 1306 064a FFF7FEFF 		bl	FS_Write
 574:..\src/interruptions.c ****                 
 575:..\src/interruptions.c ****                 if (c_mem.exp.record_EMG_history_on_SD){
 1307              		.loc 1 575 0
 1308 064e 244B     		ldr	r3, .L88+12
 1309 0650 93F83432 		ldrb	r3, [r3, #564]	@ zero_extendqisi2
 1310 0654 002B     		cmp	r3, #0
 1311 0656 27D0     		beq	.L72
 1312              	.LBB3:
 576:..\src/interruptions.c ****                     char EMG_history_info_[15000] = "";
 1313              		.loc 1 576 0
 1314 0658 07F16003 		add	r3, r7, #96
 1315 065c 603B     		subs	r3, r3, #96
 1316 065e 0022     		movs	r2, #0
 1317 0660 1A60     		str	r2, [r3]
 1318 0662 0433     		adds	r3, r3, #4
 1319 0664 43F69422 		movw	r2, #14996
 1320 0668 0021     		movs	r1, #0
 1321 066a 1846     		mov	r0, r3
 1322 066c FFF7FEFF 		bl	memset
 577:..\src/interruptions.c ****                     strcpy(EMG_history_info_, "");
 1323              		.loc 1 577 0
 1324 0670 224B     		ldr	r3, .L88+40
 1325 0672 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1326 0674 07F16003 		add	r3, r7, #96
 1327 0678 603B     		subs	r3, r3, #96
 1328 067a 1A70     		strb	r2, [r3]
 578:..\src/interruptions.c ****                     prepare_SD_EMG_history(EMG_history_info_);
 1329              		.loc 1 578 0
 1330 067c 07F16003 		add	r3, r7, #96
 1331 0680 603B     		subs	r3, r3, #96
 1332 0682 1846     		mov	r0, r3
 1333 0684 FFF7FEFF 		bl	prepare_SD_EMG_history
 579:..\src/interruptions.c ****                     FS_Write(pEMGHFile, EMG_history_info_, strlen(EMG_history_info_));
 1334              		.loc 1 579 0
 1335 0688 1D4B     		ldr	r3, .L88+44
 1336 068a 1C68     		ldr	r4, [r3]
 1337 068c 07F16003 		add	r3, r7, #96
 1338 0690 603B     		subs	r3, r3, #96
 1339 0692 1846     		mov	r0, r3
 1340 0694 FFF7FEFF 		bl	strlen
 1341 0698 0246     		mov	r2, r0
 1342 069a 07F16003 		add	r3, r7, #96
 1343 069e 603B     		subs	r3, r3, #96
 1344 06a0 1946     		mov	r1, r3
 1345 06a2 2046     		mov	r0, r4
 1346 06a4 FFF7FEFF 		bl	FS_Write
 1347              	.L72:
 1348              	.LBE3:
 580:..\src/interruptions.c ****                 }
 581:..\src/interruptions.c ****             }
 582:..\src/interruptions.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 35


 583:..\src/interruptions.c ****         
 584:..\src/interruptions.c ****         // Deactivate the motor just for the time data are written in the EEPROM
 585:..\src/interruptions.c ****         if (cycles_status == WRITE_CYCLES || cycles_status == WAIT_QUERY){
 1349              		.loc 1 585 0
 1350 06a8 114B     		ldr	r3, .L88+28
 1351 06aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1352 06ac 012B     		cmp	r3, #1
 1353 06ae 03D0     		beq	.L73
 1354              		.loc 1 585 0 is_stmt 0 discriminator 1
 1355 06b0 0F4B     		ldr	r3, .L88+28
 1356 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1357 06b4 022B     		cmp	r3, #2
 1358 06b6 25D1     		bne	.L74
 1359              	.L73:
 586:..\src/interruptions.c ****             // Deactivate motors
 587:..\src/interruptions.c ****             enable_motor(0, 0x00); 
 1360              		.loc 1 587 0 is_stmt 1
 1361 06b8 0021     		movs	r1, #0
 1362 06ba 0020     		movs	r0, #0
 1363 06bc FFF7FEFF 		bl	enable_motor
 588:..\src/interruptions.c ****             if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 1364              		.loc 1 588 0
 1365 06c0 0C4B     		ldr	r3, .L88+32
 1366 06c2 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 1367 06c6 012B     		cmp	r3, #1
 1368 06c8 2DD1     		bne	.L71
 589:..\src/interruptions.c ****                 enable_motor(1, 0x00); 
 1369              		.loc 1 589 0
 1370 06ca 0021     		movs	r1, #0
 1371 06cc 0120     		movs	r0, #1
 1372 06ce FFF7FEFF 		bl	enable_motor
 588:..\src/interruptions.c ****             if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 1373              		.loc 1 588 0
 1374 06d2 28E0     		b	.L71
 1375              	.L89:
 1376              		.align	2
 1377              	.L88:
 1378 06d4 00000000 		.word	interrupt_flag
 1379 06d8 00000000 		.word	calib
 1380 06dc 00000000 		.word	counter_calibration.10483
 1381 06e0 00000000 		.word	c_mem
 1382 06e4 00000000 		.word	pos_reconstruct
 1383 06e8 00000000 		.word	cycles_interrupt_flag
 1384 06ec 00000000 		.word	can_write
 1385 06f0 00000000 		.word	cycles_status
 1386 06f4 00000000 		.word	g_mem
 1387 06f8 00000000 		.word	pFile
 1388 06fc 20000000 		.word	.LC0
 1389 0700 00000000 		.word	pEMGHFile
 1390              	.L74:
 590:..\src/interruptions.c ****             }
 591:..\src/interruptions.c ****         }
 592:..\src/interruptions.c ****         else {
 593:..\src/interruptions.c ****             // Activate/Deactivate motors
 594:..\src/interruptions.c ****             enable_motor(0, g_ref[0].onoff); 
 1391              		.loc 1 594 0
 1392 0704 4D4B     		ldr	r3, .L90
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 36


 1393 0706 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1394 0708 1946     		mov	r1, r3
 1395 070a 0020     		movs	r0, #0
 1396 070c FFF7FEFF 		bl	enable_motor
 595:..\src/interruptions.c ****             if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 1397              		.loc 1 595 0
 1398 0710 4B4B     		ldr	r3, .L90+4
 1399 0712 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 1400 0716 012B     		cmp	r3, #1
 1401 0718 05D1     		bne	.L71
 596:..\src/interruptions.c ****                 enable_motor(1, g_ref[1].onoff); 
 1402              		.loc 1 596 0
 1403 071a 484B     		ldr	r3, .L90
 1404 071c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1405 071e 1946     		mov	r1, r3
 1406 0720 0120     		movs	r0, #1
 1407 0722 FFF7FEFF 		bl	enable_motor
 1408              	.L71:
 597:..\src/interruptions.c ****             }
 598:..\src/interruptions.c ****         }
 599:..\src/interruptions.c ****     }
 600:..\src/interruptions.c ****     
 601:..\src/interruptions.c ****     // Check Interrupt 
 602:..\src/interruptions.c ****     
 603:..\src/interruptions.c ****     if (interrupt_flag){
 1409              		.loc 1 603 0
 1410 0726 474B     		ldr	r3, .L90+8
 1411 0728 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1412 072a 002B     		cmp	r3, #0
 1413 072c 04D0     		beq	.L76
 604:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1414              		.loc 1 604 0
 1415 072e 454B     		ldr	r3, .L90+8
 1416 0730 0022     		movs	r2, #0
 1417 0732 1A70     		strb	r2, [r3]
 605:..\src/interruptions.c ****         interrupt_manager();
 1418              		.loc 1 605 0
 1419 0734 FFF7FEFF 		bl	interrupt_manager
 1420              	.L76:
 606:..\src/interruptions.c ****     }
 607:..\src/interruptions.c ****     
 608:..\src/interruptions.c ****     
 609:..\src/interruptions.c ****     //---------------------------------- Check battery
 610:..\src/interruptions.c **** 
 611:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 612:..\src/interruptions.c ****     if (counter_tension_func == CALIBRATION_DIV) {
 1421              		.loc 1 612 0
 1422 0738 434B     		ldr	r3, .L90+12
 1423 073a 1B88     		ldrh	r3, [r3]
 1424 073c 0A2B     		cmp	r3, #10
 1425 073e 04D1     		bne	.L77
 613:..\src/interruptions.c ****         battery_management();   
 1426              		.loc 1 613 0
 1427 0740 FFF7FEFF 		bl	battery_management
 614:..\src/interruptions.c ****         counter_tension_func = 0;
 1428              		.loc 1 614 0
 1429 0744 404B     		ldr	r3, .L90+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 37


 1430 0746 0022     		movs	r2, #0
 1431 0748 1A80     		strh	r2, [r3]	@ movhi
 1432              	.L77:
 615:..\src/interruptions.c ****     }
 616:..\src/interruptions.c ****     counter_tension_func++;
 1433              		.loc 1 616 0
 1434 074a 3F4B     		ldr	r3, .L90+12
 1435 074c 1B88     		ldrh	r3, [r3]
 1436 074e 0133     		adds	r3, r3, #1
 1437 0750 9AB2     		uxth	r2, r3
 1438 0752 3D4B     		ldr	r3, .L90+12
 1439 0754 1A80     		strh	r2, [r3]	@ movhi
 617:..\src/interruptions.c **** 
 618:..\src/interruptions.c ****     // Check Interrupt 
 619:..\src/interruptions.c ****     
 620:..\src/interruptions.c ****     if (interrupt_flag){
 1440              		.loc 1 620 0
 1441 0756 3B4B     		ldr	r3, .L90+8
 1442 0758 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1443 075a 002B     		cmp	r3, #0
 1444 075c 04D0     		beq	.L78
 621:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1445              		.loc 1 621 0
 1446 075e 394B     		ldr	r3, .L90+8
 1447 0760 0022     		movs	r2, #0
 1448 0762 1A70     		strb	r2, [r3]
 622:..\src/interruptions.c ****         interrupt_manager();
 1449              		.loc 1 622 0
 1450 0764 FFF7FEFF 		bl	interrupt_manager
 1451              	.L78:
 623:..\src/interruptions.c ****     }
 624:..\src/interruptions.c ****    
 625:..\src/interruptions.c ****     //---------------------------------- Read IMUs
 626:..\src/interruptions.c ****     if (c_mem.imu.read_imu_flag) {
 1452              		.loc 1 626 0
 1453 0768 384B     		ldr	r3, .L90+16
 1454 076a 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 1455 076e 002B     		cmp	r3, #0
 1456 0770 0AD0     		beq	.L79
 627:..\src/interruptions.c ****         ReadAllIMUs();      // IMU reading is atomic, no RS485 request is handled
 1457              		.loc 1 627 0
 1458 0772 FFF7FEFF 		bl	ReadAllIMUs
 628:..\src/interruptions.c ****         
 629:..\src/interruptions.c ****         if (interrupt_flag){
 1459              		.loc 1 629 0
 1460 0776 334B     		ldr	r3, .L90+8
 1461 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1462 077a 002B     		cmp	r3, #0
 1463 077c 04D0     		beq	.L79
 630:..\src/interruptions.c ****             interrupt_flag = FALSE;
 1464              		.loc 1 630 0
 1465 077e 314B     		ldr	r3, .L90+8
 1466 0780 0022     		movs	r2, #0
 1467 0782 1A70     		strb	r2, [r3]
 631:..\src/interruptions.c ****             interrupt_manager();
 1468              		.loc 1 631 0
 1469 0784 FFF7FEFF 		bl	interrupt_manager
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 38


 1470              	.L79:
 632:..\src/interruptions.c ****         }
 633:..\src/interruptions.c ****     }
 634:..\src/interruptions.c ****    
 635:..\src/interruptions.c ****     //---------------------------------- Update States
 636:..\src/interruptions.c ****     
 637:..\src/interruptions.c ****     // Load k-1 state
 638:..\src/interruptions.c ****     memcpy( &g_adc_measOld, &g_adc_meas, sizeof(g_adc_meas) );
 1471              		.loc 1 638 0
 1472 0788 314A     		ldr	r2, .L90+20
 1473 078a 324B     		ldr	r3, .L90+24
 1474 078c 1446     		mov	r4, r2
 1475 078e 1D46     		mov	r5, r3
 1476 0790 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1477 0792 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1478 0794 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1479 0796 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1480 0798 95E80300 		ldmia	r5, {r0, r1}
 1481 079c 84E80300 		stmia	r4, {r0, r1}
 639:..\src/interruptions.c ****     memcpy( &g_measOld, &g_meas, sizeof(g_meas) );
 1482              		.loc 1 639 0
 1483 07a0 2D4A     		ldr	r2, .L90+28
 1484 07a2 2E4B     		ldr	r3, .L90+32
 1485 07a4 1046     		mov	r0, r2
 1486 07a6 1946     		mov	r1, r3
 1487 07a8 6823     		movs	r3, #104
 1488 07aa 1A46     		mov	r2, r3
 1489 07ac FFF7FEFF 		bl	memcpy
 640:..\src/interruptions.c ****     memcpy( &g_refOld, &g_ref, sizeof(g_ref) );
 1490              		.loc 1 640 0
 1491 07b0 2B4A     		ldr	r2, .L90+36
 1492 07b2 224B     		ldr	r3, .L90
 1493 07b4 1446     		mov	r4, r2
 1494 07b6 1D46     		mov	r5, r3
 1495 07b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1496 07ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1497 07bc 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1498 07c0 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 641:..\src/interruptions.c **** 
 642:..\src/interruptions.c ****     // Load k+1 state        
 643:..\src/interruptions.c ****     memcpy( &g_ref, &g_refNew, sizeof(g_ref) );
 1499              		.loc 1 643 0
 1500 07c4 1D4A     		ldr	r2, .L90
 1501 07c6 274B     		ldr	r3, .L90+40
 1502 07c8 1446     		mov	r4, r2
 1503 07ca 1D46     		mov	r5, r3
 1504 07cc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1505 07ce 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1506 07d0 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1507 07d4 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 644:..\src/interruptions.c ****     memcpy( &g_imu, &g_imuNew, sizeof(g_imu) );
 1508              		.loc 1 644 0
 1509 07d8 234A     		ldr	r2, .L90+44
 1510 07da 244B     		ldr	r3, .L90+48
 1511 07dc 1046     		mov	r0, r2
 1512 07de 1946     		mov	r1, r3
 1513 07e0 C823     		movs	r3, #200
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 39


 1514 07e2 1A46     		mov	r2, r3
 1515 07e4 FFF7FEFF 		bl	memcpy
 645:..\src/interruptions.c ****                 
 646:..\src/interruptions.c ****     if (interrupt_flag){
 1516              		.loc 1 646 0
 1517 07e8 164B     		ldr	r3, .L90+8
 1518 07ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1519 07ec 002B     		cmp	r3, #0
 1520 07ee 04D0     		beq	.L80
 647:..\src/interruptions.c ****         interrupt_flag = FALSE;
 1521              		.loc 1 647 0
 1522 07f0 144B     		ldr	r3, .L90+8
 1523 07f2 0022     		movs	r2, #0
 1524 07f4 1A70     		strb	r2, [r3]
 648:..\src/interruptions.c ****         interrupt_manager();
 1525              		.loc 1 648 0
 1526 07f6 FFF7FEFF 		bl	interrupt_manager
 1527              	.L80:
 649:..\src/interruptions.c ****     }
 650:..\src/interruptions.c **** 
 651:..\src/interruptions.c ****     timer_value = (uint16)MY_TIMER_ReadCounter();
 1528              		.loc 1 651 0
 1529 07fa FFF7FEFF 		bl	MY_TIMER_ReadCounter
 1530 07fe 0346     		mov	r3, r0
 1531 0800 1A46     		mov	r2, r3
 1532 0802 1B4B     		ldr	r3, .L90+52
 1533 0804 1A80     		strh	r2, [r3]	@ movhi
 652:..\src/interruptions.c ****     cycle_time = ((float)(timer_value0 - timer_value)/1000000.0);
 1534              		.loc 1 652 0
 1535 0806 1B4B     		ldr	r3, .L90+56
 1536 0808 1B88     		ldrh	r3, [r3]
 1537 080a 1A46     		mov	r2, r3
 1538 080c 184B     		ldr	r3, .L90+52
 1539 080e 1B88     		ldrh	r3, [r3]
 1540 0810 D31A     		subs	r3, r2, r3
 1541 0812 1846     		mov	r0, r3
 1542 0814 FFF7FEFF 		bl	__aeabi_i2f
 1543 0818 0346     		mov	r3, r0
 1544 081a 1749     		ldr	r1, .L90+60
 1545 081c 1846     		mov	r0, r3
 1546 081e FFF7FEFF 		bl	__aeabi_fdiv
 1547 0822 0346     		mov	r3, r0
 1548 0824 1A46     		mov	r2, r3
 1549 0826 154B     		ldr	r3, .L90+64
 1550 0828 1A60     		str	r2, [r3]	@ float
 653:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x01);   // reset timer
 1551              		.loc 1 653 0
 1552 082a 0120     		movs	r0, #1
 1553 082c FFF7FEFF 		bl	MY_TIMER_REG_Write
 654:..\src/interruptions.c **** 
 655:..\src/interruptions.c **** }
 1554              		.loc 1 655 0
 1555 0830 00BF     		nop
 1556 0832 07F58847 		add	r7, r7, #17408
 1557 0836 6037     		adds	r7, r7, #96
 1558              		.cfi_def_cfa_offset 16
 1559 0838 BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 40


 1560              		.cfi_def_cfa_register 13
 1561              		@ sp needed
 1562 083a B0BD     		pop	{r4, r5, r7, pc}
 1563              	.L91:
 1564              		.align	2
 1565              	.L90:
 1566 083c 00000000 		.word	g_ref
 1567 0840 00000000 		.word	g_mem
 1568 0844 00000000 		.word	interrupt_flag
 1569 0848 02000000 		.word	counter_tension_func.10484
 1570 084c 00000000 		.word	c_mem
 1571 0850 00000000 		.word	g_adc_measOld
 1572 0854 00000000 		.word	g_adc_meas
 1573 0858 00000000 		.word	g_measOld
 1574 085c 00000000 		.word	g_meas
 1575 0860 00000000 		.word	g_refOld
 1576 0864 00000000 		.word	g_refNew
 1577 0868 00000000 		.word	g_imu
 1578 086c 00000000 		.word	g_imuNew
 1579 0870 00000000 		.word	timer_value
 1580 0874 00000000 		.word	timer_value0
 1581 0878 00247449 		.word	1232348160
 1582 087c 00000000 		.word	cycle_time
 1583              		.cfi_endproc
 1584              	.LFE67:
 1585              		.size	function_scheduler, .-function_scheduler
 1586              		.section	.text.compute_reference,"ax",%progbits
 1587              		.align	2
 1588              		.global	compute_reference
 1589              		.thumb
 1590              		.thumb_func
 1591              		.type	compute_reference, %function
 1592              	compute_reference:
 1593              	.LFB68:
 656:..\src/interruptions.c **** 
 657:..\src/interruptions.c **** //==============================================================================
 658:..\src/interruptions.c **** //                                                       COMPUTE MOTOR REFERENCE
 659:..\src/interruptions.c **** //==============================================================================
 660:..\src/interruptions.c **** void compute_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct st_ref* st_refOld_p) {
 1594              		.loc 1 660 0
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 40
 1597              		@ frame_needed = 1, uses_anonymous_args = 0
 1598 0000 80B5     		push	{r7, lr}
 1599              		.cfi_def_cfa_offset 8
 1600              		.cfi_offset 7, -8
 1601              		.cfi_offset 14, -4
 1602 0002 8CB0     		sub	sp, sp, #48
 1603              		.cfi_def_cfa_offset 56
 1604 0004 02AF     		add	r7, sp, #8
 1605              		.cfi_def_cfa 7, 48
 1606 0006 0346     		mov	r3, r0
 1607 0008 B960     		str	r1, [r7, #8]
 1608 000a 7A60     		str	r2, [r7, #4]
 1609 000c FB73     		strb	r3, [r7, #15]
 661:..\src/interruptions.c ****     
 662:..\src/interruptions.c ****     int32 CYDATA handle_value;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 41


 663:..\src/interruptions.c ****     int32 CYDATA err_emg_1, err_emg_2;
 664:..\src/interruptions.c ****     struct st_motor* MOT = &c_mem.motor[motor_idx];      // SoftHand default motor
 1610              		.loc 1 664 0
 1611 000e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1612 0010 1346     		mov	r3, r2
 1613 0012 DB00     		lsls	r3, r3, #3
 1614 0014 9B1A     		subs	r3, r3, r2
 1615 0016 1B01     		lsls	r3, r3, #4
 1616 0018 B033     		adds	r3, r3, #176
 1617 001a A74A     		ldr	r2, .L156
 1618 001c 1344     		add	r3, r3, r2
 1619 001e 3B62     		str	r3, [r7, #32]
 665:..\src/interruptions.c ****     uint8 ENC_L = MOT->encoder_line;          // Associated encoder line
 1620              		.loc 1 665 0
 1621 0020 3B6A     		ldr	r3, [r7, #32]
 1622 0022 93F86030 		ldrb	r3, [r3, #96]
 1623 0026 FB77     		strb	r3, [r7, #31]
 666:..\src/interruptions.c ****     
 667:..\src/interruptions.c ****     static uint8 current_emg[NUM_OF_MOTORS] = {0, 0};   // 0 NONE
 668:..\src/interruptions.c ****                                                         // 1 EMG 1
 669:..\src/interruptions.c ****                                                         // 2 EMG 2
 670:..\src/interruptions.c ****                                                         // wait for both to get down
 671:..\src/interruptions.c ****     
 672:..\src/interruptions.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 1624              		.loc 1 672 0
 1625 0028 A44B     		ldr	r3, .L156+4
 1626 002a 1B68     		ldr	r3, [r3]
 1627 002c A24A     		ldr	r2, .L156
 1628 002e B2F8F021 		ldrh	r2, [r2, #496]
 1629 0032 9B1A     		subs	r3, r3, r2
 1630 0034 BB61     		str	r3, [r7, #24]
 673:..\src/interruptions.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 1631              		.loc 1 673 0
 1632 0036 A14B     		ldr	r3, .L156+4
 1633 0038 5B68     		ldr	r3, [r3, #4]
 1634 003a 9F4A     		ldr	r2, .L156
 1635 003c B2F8F221 		ldrh	r2, [r2, #498]
 1636 0040 9B1A     		subs	r3, r3, r2
 1637 0042 7B61     		str	r3, [r7, #20]
 674:..\src/interruptions.c ****     
 675:..\src/interruptions.c ****      // =========================== POSITION INPUT ==============================            
 676:..\src/interruptions.c ****     switch(MOT->input_mode) {
 1638              		.loc 1 676 0
 1639 0044 3B6A     		ldr	r3, [r7, #32]
 1640 0046 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 1641 004a 013B     		subs	r3, r3, #1
 1642 004c 062B     		cmp	r3, #6
 1643 004e 00F25182 		bhi	.L148
 1644 0052 01A2     		adr	r2, .L95
 1645 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1646              		.p2align 2
 1647              	.L95:
 1648 0058 75000000 		.word	.L94+1
 1649 005c 21020000 		.word	.L96+1
 1650 0060 C9020000 		.word	.L97+1
 1651 0064 31030000 		.word	.L98+1
 1652 0068 11040000 		.word	.L99+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 42


 1653 006c 4D010000 		.word	.L100+1
 1654 0070 5B020000 		.word	.L101+1
 1655              		.p2align 1
 1656              	.L94:
 677:..\src/interruptions.c ****         case INPUT_MODE_ENCODER3:
 678:..\src/interruptions.c **** 
 679:..\src/interruptions.c ****             // Calculate handle value based on position of handle in the
 680:..\src/interruptions.c ****             // sensor chain and multiplication factor between handle and motor position
 681:..\src/interruptions.c ****             if (c_mem.enc[ENC_L].double_encoder_on_off) 
 1657              		.loc 1 681 0
 1658 0074 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 1659 0076 9049     		ldr	r1, .L156
 1660 0078 1346     		mov	r3, r2
 1661 007a 5B00     		lsls	r3, r3, #1
 1662 007c 1344     		add	r3, r3, r2
 1663 007e 1B01     		lsls	r3, r3, #4
 1664 0080 0B44     		add	r3, r3, r1
 1665 0082 03F5D873 		add	r3, r3, #432
 1666 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1667 0088 002B     		cmp	r3, #0
 1668 008a 19D0     		beq	.L102
 682:..\src/interruptions.c ****                 handle_value = (g_meas[ENC_L].pos[2] * c_mem.enc[ENC_L].motor_handle_ratio) + MOT->
 1669              		.loc 1 682 0
 1670 008c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1671 008e 8C4A     		ldr	r2, .L156+8
 1672 0090 3421     		movs	r1, #52
 1673 0092 01FB03F3 		mul	r3, r1, r3
 1674 0096 1344     		add	r3, r3, r2
 1675 0098 0833     		adds	r3, r3, #8
 1676 009a 1968     		ldr	r1, [r3]
 1677 009c FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 1678 009e 8648     		ldr	r0, .L156
 1679 00a0 1346     		mov	r3, r2
 1680 00a2 5B00     		lsls	r3, r3, #1
 1681 00a4 1344     		add	r3, r3, r2
 1682 00a6 1B01     		lsls	r3, r3, #4
 1683 00a8 0344     		add	r3, r3, r0
 1684 00aa 03F5DA73 		add	r3, r3, #436
 1685 00ae 93F90030 		ldrsb	r3, [r3]
 1686 00b2 03FB01F2 		mul	r2, r3, r1
 1687 00b6 3B6A     		ldr	r3, [r7, #32]
 1688 00b8 5B6B     		ldr	r3, [r3, #52]
 1689 00ba 1344     		add	r3, r3, r2
 1690 00bc 7B62     		str	r3, [r7, #36]
 1691 00be 18E0     		b	.L103
 1692              	.L102:
 683:..\src/interruptions.c ****             else
 684:..\src/interruptions.c ****                 handle_value = (g_meas[ENC_L].pos[1] * c_mem.enc[ENC_L].motor_handle_ratio) + MOT->
 1693              		.loc 1 684 0
 1694 00c0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1695 00c2 7F4A     		ldr	r2, .L156+8
 1696 00c4 3421     		movs	r1, #52
 1697 00c6 01FB03F3 		mul	r3, r1, r3
 1698 00ca 1344     		add	r3, r3, r2
 1699 00cc 0433     		adds	r3, r3, #4
 1700 00ce 1968     		ldr	r1, [r3]
 1701 00d0 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 43


 1702 00d2 7948     		ldr	r0, .L156
 1703 00d4 1346     		mov	r3, r2
 1704 00d6 5B00     		lsls	r3, r3, #1
 1705 00d8 1344     		add	r3, r3, r2
 1706 00da 1B01     		lsls	r3, r3, #4
 1707 00dc 0344     		add	r3, r3, r0
 1708 00de 03F5DA73 		add	r3, r3, #436
 1709 00e2 93F90030 		ldrsb	r3, [r3]
 1710 00e6 03FB01F2 		mul	r2, r3, r1
 1711 00ea 3B6A     		ldr	r3, [r7, #32]
 1712 00ec 5B6B     		ldr	r3, [r3, #52]
 1713 00ee 1344     		add	r3, r3, r2
 1714 00f0 7B62     		str	r3, [r7, #36]
 1715              	.L103:
 685:..\src/interruptions.c ****             
 686:..\src/interruptions.c **** 
 687:..\src/interruptions.c ****             // Read handle and use it as reference for the motor
 688:..\src/interruptions.c ****             if (((handle_value - st_refOld_p->pos) > MOT->max_step_pos) && (MOT->max_step_pos != 0)
 1716              		.loc 1 688 0
 1717 00f2 7B68     		ldr	r3, [r7, #4]
 1718 00f4 1B68     		ldr	r3, [r3]
 1719 00f6 7A6A     		ldr	r2, [r7, #36]
 1720 00f8 D21A     		subs	r2, r2, r3
 1721 00fa 3B6A     		ldr	r3, [r7, #32]
 1722 00fc 1B6C     		ldr	r3, [r3, #64]
 1723 00fe 9A42     		cmp	r2, r3
 1724 0100 0BDD     		ble	.L104
 1725              		.loc 1 688 0 is_stmt 0 discriminator 1
 1726 0102 3B6A     		ldr	r3, [r7, #32]
 1727 0104 1B6C     		ldr	r3, [r3, #64]
 1728 0106 002B     		cmp	r3, #0
 1729 0108 07D0     		beq	.L104
 689:..\src/interruptions.c ****                 st_ref_p->pos += MOT->max_step_pos;
 1730              		.loc 1 689 0 is_stmt 1
 1731 010a BB68     		ldr	r3, [r7, #8]
 1732 010c 1A68     		ldr	r2, [r3]
 1733 010e 3B6A     		ldr	r3, [r7, #32]
 1734 0110 1B6C     		ldr	r3, [r3, #64]
 1735 0112 1A44     		add	r2, r2, r3
 1736 0114 BB68     		ldr	r3, [r7, #8]
 1737 0116 1A60     		str	r2, [r3]
 1738 0118 17E0     		b	.L105
 1739              	.L104:
 690:..\src/interruptions.c ****             else {
 691:..\src/interruptions.c ****                 if (((handle_value - st_refOld_p->pos) < MOT->max_step_neg) && (MOT->max_step_neg !
 1740              		.loc 1 691 0
 1741 011a 7B68     		ldr	r3, [r7, #4]
 1742 011c 1B68     		ldr	r3, [r3]
 1743 011e 7A6A     		ldr	r2, [r7, #36]
 1744 0120 D21A     		subs	r2, r2, r3
 1745 0122 3B6A     		ldr	r3, [r7, #32]
 1746 0124 DB6B     		ldr	r3, [r3, #60]
 1747 0126 9A42     		cmp	r2, r3
 1748 0128 0BDA     		bge	.L106
 1749              		.loc 1 691 0 is_stmt 0 discriminator 1
 1750 012a 3B6A     		ldr	r3, [r7, #32]
 1751 012c DB6B     		ldr	r3, [r3, #60]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 44


 1752 012e 002B     		cmp	r3, #0
 1753 0130 07D0     		beq	.L106
 692:..\src/interruptions.c ****                     st_ref_p->pos += MOT->max_step_neg;
 1754              		.loc 1 692 0 is_stmt 1
 1755 0132 BB68     		ldr	r3, [r7, #8]
 1756 0134 1A68     		ldr	r2, [r3]
 1757 0136 3B6A     		ldr	r3, [r7, #32]
 1758 0138 DB6B     		ldr	r3, [r3, #60]
 1759 013a 1A44     		add	r2, r2, r3
 1760 013c BB68     		ldr	r3, [r7, #8]
 1761 013e 1A60     		str	r2, [r3]
 1762 0140 03E0     		b	.L105
 1763              	.L106:
 693:..\src/interruptions.c ****                 else
 694:..\src/interruptions.c ****                     st_ref_p->pos = handle_value;
 1764              		.loc 1 694 0
 1765 0142 BB68     		ldr	r3, [r7, #8]
 1766 0144 7A6A     		ldr	r2, [r7, #36]
 1767 0146 1A60     		str	r2, [r3]
 695:..\src/interruptions.c ****             }
 696:..\src/interruptions.c ****             break;
 1768              		.loc 1 696 0
 1769 0148 DFE1     		b	.L107
 1770              	.L105:
 1771 014a DEE1     		b	.L107
 1772              	.L100:
 697:..\src/interruptions.c ****         
 698:..\src/interruptions.c ****         case INPUT_MODE_JOYSTICK:
 699:..\src/interruptions.c ****             
 700:..\src/interruptions.c ****             if (c_mem.dev.use_2nd_motor_flag == FALSE){
 1773              		.loc 1 700 0
 1774 014c 5A4B     		ldr	r3, .L156
 1775 014e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 1776 0152 002B     		cmp	r3, #0
 1777 0154 57D1     		bne	.L108
 701:..\src/interruptions.c ****                 // Code for single motor devices. Use only up/down direction to give speed referenc
 702:..\src/interruptions.c ****                 st_ref_p->pos = st_refOld_p->pos;
 1778              		.loc 1 702 0
 1779 0156 7B68     		ldr	r3, [r7, #4]
 1780 0158 1A68     		ldr	r2, [r3]
 1781 015a BB68     		ldr	r3, [r7, #8]
 1782 015c 1A60     		str	r2, [r3]
 703:..\src/interruptions.c ****                 if(!(g_adc_meas.joystick[0] > 700)) {
 1783              		.loc 1 703 0
 1784 015e 574B     		ldr	r3, .L156+4
 1785 0160 1B6A     		ldr	r3, [r3, #32]
 1786 0162 B3F52F7F 		cmp	r3, #700
 1787 0166 45DC     		bgt	.L109
 1788              	.LBB4:
 704:..\src/interruptions.c ****                     int32 CYDATA err_joy_1 = g_adc_meas.joystick[0] - c_mem.JOY_spec.joystick_thres
 1789              		.loc 1 704 0
 1790 0168 544B     		ldr	r3, .L156+4
 1791 016a 1B6A     		ldr	r3, [r3, #32]
 1792 016c 524A     		ldr	r2, .L156
 1793 016e B2F9B222 		ldrsh	r2, [r2, #690]
 1794 0172 9B1A     		subs	r3, r3, r2
 1795 0174 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 45


 705:..\src/interruptions.c **** 
 706:..\src/interruptions.c ****                     if(g_adc_meas.joystick[0] > c_mem.JOY_spec.joystick_threshold) {     //both mot
 1796              		.loc 1 706 0
 1797 0176 514B     		ldr	r3, .L156+4
 1798 0178 1B6A     		ldr	r3, [r3, #32]
 1799 017a 4F4A     		ldr	r2, .L156
 1800 017c B2F9B222 		ldrsh	r2, [r2, #690]
 1801 0180 9342     		cmp	r3, r2
 1802 0182 13DD     		ble	.L110
 707:..\src/interruptions.c ****                         st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_speed
 1803              		.loc 1 707 0
 1804 0184 BB68     		ldr	r3, [r7, #8]
 1805 0186 1A68     		ldr	r2, [r3]
 1806 0188 4B4B     		ldr	r3, .L156
 1807 018a B3F8B032 		ldrh	r3, [r3, #688]
 1808 018e 1946     		mov	r1, r3
 1809 0190 3B69     		ldr	r3, [r7, #16]
 1810 0192 03FB01F1 		mul	r1, r3, r1
 1811 0196 484B     		ldr	r3, .L156
 1812 0198 B3F9B232 		ldrsh	r3, [r3, #690]
 1813 019c C3F58063 		rsb	r3, r3, #1024
 1814 01a0 91FBF3F3 		sdiv	r3, r1, r3
 1815 01a4 1A44     		add	r2, r2, r3
 1816 01a6 BB68     		ldr	r3, [r7, #8]
 1817 01a8 1A60     		str	r2, [r3]
 1818              	.LBE4:
 708:..\src/interruptions.c ****                     }
 709:..\src/interruptions.c ****                     else {
 710:..\src/interruptions.c ****                         err_joy_1 = g_adc_meas.joystick[0] + c_mem.JOY_spec.joystick_threshold;
 711:..\src/interruptions.c ****                         if(g_adc_meas.joystick[0] < -c_mem.JOY_spec.joystick_threshold) {  //both m
 712:..\src/interruptions.c ****                             st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_s
 713:..\src/interruptions.c ****                         }
 714:..\src/interruptions.c ****                     }
 715:..\src/interruptions.c ****                 }
 716:..\src/interruptions.c ****                 else {  //The button is pressed and the motor reference is gradually set to zero 
 717:..\src/interruptions.c ****                     st_ref_p->pos -= (int32) g_mem.JOY_spec.joystick_closure_speed;
 718:..\src/interruptions.c ****                 }
 719:..\src/interruptions.c ****             }
 720:..\src/interruptions.c ****             else {
 721:..\src/interruptions.c ****                 // Code for two motors devices. Use both direction to give speed references
 722:..\src/interruptions.c ****                 if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 723:..\src/interruptions.c ****                     compute_SoftHand_2_motors_joystick_reference(motor_idx, st_ref_p, st_refOld_p);
 724:..\src/interruptions.c ****                 }
 725:..\src/interruptions.c ****             }
 726:..\src/interruptions.c ****             break;
 1819              		.loc 1 726 0
 1820 01aa A5E1     		b	.L149
 1821              	.L110:
 1822              	.LBB5:
 710:..\src/interruptions.c ****                         if(g_adc_meas.joystick[0] < -c_mem.JOY_spec.joystick_threshold) {  //both m
 1823              		.loc 1 710 0
 1824 01ac 434B     		ldr	r3, .L156+4
 1825 01ae 1B6A     		ldr	r3, [r3, #32]
 1826 01b0 414A     		ldr	r2, .L156
 1827 01b2 B2F9B222 		ldrsh	r2, [r2, #690]
 1828 01b6 1344     		add	r3, r3, r2
 1829 01b8 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 46


 711:..\src/interruptions.c ****                             st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_s
 1830              		.loc 1 711 0
 1831 01ba 404B     		ldr	r3, .L156+4
 1832 01bc 1A6A     		ldr	r2, [r3, #32]
 1833 01be 3E4B     		ldr	r3, .L156
 1834 01c0 B3F9B232 		ldrsh	r3, [r3, #690]
 1835 01c4 5B42     		negs	r3, r3
 1836 01c6 9A42     		cmp	r2, r3
 1837 01c8 80F29681 		bge	.L149
 712:..\src/interruptions.c ****                         }
 1838              		.loc 1 712 0
 1839 01cc BB68     		ldr	r3, [r7, #8]
 1840 01ce 1A68     		ldr	r2, [r3]
 1841 01d0 394B     		ldr	r3, .L156
 1842 01d2 B3F8B032 		ldrh	r3, [r3, #688]
 1843 01d6 1946     		mov	r1, r3
 1844 01d8 3B69     		ldr	r3, [r7, #16]
 1845 01da 03FB01F1 		mul	r1, r3, r1
 1846 01de 364B     		ldr	r3, .L156
 1847 01e0 B3F9B232 		ldrsh	r3, [r3, #690]
 1848 01e4 C3F58063 		rsb	r3, r3, #1024
 1849 01e8 91FBF3F3 		sdiv	r3, r1, r3
 1850 01ec 1A44     		add	r2, r2, r3
 1851 01ee BB68     		ldr	r3, [r7, #8]
 1852 01f0 1A60     		str	r2, [r3]
 1853              	.LBE5:
 1854              		.loc 1 726 0
 1855 01f2 81E1     		b	.L149
 1856              	.L109:
 717:..\src/interruptions.c ****                 }
 1857              		.loc 1 717 0
 1858 01f4 BB68     		ldr	r3, [r7, #8]
 1859 01f6 1B68     		ldr	r3, [r3]
 1860 01f8 324A     		ldr	r2, .L156+12
 1861 01fa B2F8B022 		ldrh	r2, [r2, #688]
 1862 01fe 9A1A     		subs	r2, r3, r2
 1863 0200 BB68     		ldr	r3, [r7, #8]
 1864 0202 1A60     		str	r2, [r3]
 1865              		.loc 1 726 0
 1866 0204 78E1     		b	.L149
 1867              	.L108:
 722:..\src/interruptions.c ****                     compute_SoftHand_2_motors_joystick_reference(motor_idx, st_ref_p, st_refOld_p);
 1868              		.loc 1 722 0
 1869 0206 2C4B     		ldr	r3, .L156
 1870 0208 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 1871 020c 042B     		cmp	r3, #4
 1872 020e 40F07381 		bne	.L149
 723:..\src/interruptions.c ****                 }
 1873              		.loc 1 723 0
 1874 0212 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1875 0214 7A68     		ldr	r2, [r7, #4]
 1876 0216 B968     		ldr	r1, [r7, #8]
 1877 0218 1846     		mov	r0, r3
 1878 021a FFF7FEFF 		bl	compute_SoftHand_2_motors_joystick_reference
 1879              		.loc 1 726 0
 1880 021e 6BE1     		b	.L149
 1881              	.L96:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 47


 727:..\src/interruptions.c ****             
 728:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL:
 729:..\src/interruptions.c ****             if (err_emg_1 > 0)
 1882              		.loc 1 729 0
 1883 0220 BB69     		ldr	r3, [r7, #24]
 1884 0222 002B     		cmp	r3, #0
 1885 0224 15DD     		ble	.L114
 730:..\src/interruptions.c ****                 st_ref_p->pos = (err_emg_1 * g_mem.motor[motor_idx].pos_lim_sup) / (1024 - c_mem.em
 1886              		.loc 1 730 0
 1887 0226 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1888 0228 2649     		ldr	r1, .L156+12
 1889 022a 1346     		mov	r3, r2
 1890 022c DB00     		lsls	r3, r3, #3
 1891 022e 9B1A     		subs	r3, r3, r2
 1892 0230 1B01     		lsls	r3, r3, #4
 1893 0232 0B44     		add	r3, r3, r1
 1894 0234 E833     		adds	r3, r3, #232
 1895 0236 1B68     		ldr	r3, [r3]
 1896 0238 BA69     		ldr	r2, [r7, #24]
 1897 023a 02FB03F2 		mul	r2, r2, r3
 1898 023e 1E4B     		ldr	r3, .L156
 1899 0240 B3F8F031 		ldrh	r3, [r3, #496]
 1900 0244 C3F58063 		rsb	r3, r3, #1024
 1901 0248 92FBF3F2 		sdiv	r2, r2, r3
 1902 024c BB68     		ldr	r3, [r7, #8]
 1903 024e 1A60     		str	r2, [r3]
 731:..\src/interruptions.c ****             else
 732:..\src/interruptions.c ****                 st_ref_p->pos = 0;
 733:..\src/interruptions.c ****             break;
 1904              		.loc 1 733 0
 1905 0250 5BE1     		b	.L107
 1906              	.L114:
 732:..\src/interruptions.c ****             break;
 1907              		.loc 1 732 0
 1908 0252 BB68     		ldr	r3, [r7, #8]
 1909 0254 0022     		movs	r2, #0
 1910 0256 1A60     		str	r2, [r3]
 1911              		.loc 1 733 0
 1912 0258 57E1     		b	.L107
 1913              	.L101:
 734:..\src/interruptions.c ****         
 735:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 736:..\src/interruptions.c ****             if (err_emg_1 > 0)
 1914              		.loc 1 736 0
 1915 025a BB69     		ldr	r3, [r7, #24]
 1916 025c 002B     		cmp	r3, #0
 1917 025e 1FDD     		ble	.L116
 737:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.motor[motor_idx].pos_lim_sup - (err_emg_1 * g_mem.motor[motor
 1918              		.loc 1 737 0
 1919 0260 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1920 0262 1849     		ldr	r1, .L156+12
 1921 0264 1346     		mov	r3, r2
 1922 0266 DB00     		lsls	r3, r3, #3
 1923 0268 9B1A     		subs	r3, r3, r2
 1924 026a 1B01     		lsls	r3, r3, #4
 1925 026c 0B44     		add	r3, r3, r1
 1926 026e E833     		adds	r3, r3, #232
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 48


 1927 0270 1968     		ldr	r1, [r3]
 1928 0272 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1929 0274 1348     		ldr	r0, .L156+12
 1930 0276 1346     		mov	r3, r2
 1931 0278 DB00     		lsls	r3, r3, #3
 1932 027a 9B1A     		subs	r3, r3, r2
 1933 027c 1B01     		lsls	r3, r3, #4
 1934 027e 0344     		add	r3, r3, r0
 1935 0280 E833     		adds	r3, r3, #232
 1936 0282 1B68     		ldr	r3, [r3]
 1937 0284 BA69     		ldr	r2, [r7, #24]
 1938 0286 02FB03F2 		mul	r2, r2, r3
 1939 028a 0B4B     		ldr	r3, .L156
 1940 028c B3F8F031 		ldrh	r3, [r3, #496]
 1941 0290 C3F58063 		rsb	r3, r3, #1024
 1942 0294 92FBF3F3 		sdiv	r3, r2, r3
 1943 0298 CA1A     		subs	r2, r1, r3
 1944 029a BB68     		ldr	r3, [r7, #8]
 1945 029c 1A60     		str	r2, [r3]
 738:..\src/interruptions.c ****             else
 739:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.motor[motor_idx].pos_lim_sup;
 740:..\src/interruptions.c ****             break;
 1946              		.loc 1 740 0
 1947 029e 34E1     		b	.L107
 1948              	.L116:
 739:..\src/interruptions.c ****             break;
 1949              		.loc 1 739 0
 1950 02a0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1951 02a2 0849     		ldr	r1, .L156+12
 1952 02a4 1346     		mov	r3, r2
 1953 02a6 DB00     		lsls	r3, r3, #3
 1954 02a8 9B1A     		subs	r3, r3, r2
 1955 02aa 1B01     		lsls	r3, r3, #4
 1956 02ac 0B44     		add	r3, r3, r1
 1957 02ae E833     		adds	r3, r3, #232
 1958 02b0 1A68     		ldr	r2, [r3]
 1959 02b2 BB68     		ldr	r3, [r7, #8]
 1960 02b4 1A60     		str	r2, [r3]
 1961              		.loc 1 740 0
 1962 02b6 28E1     		b	.L107
 1963              	.L157:
 1964              		.align	2
 1965              	.L156:
 1966 02b8 00000000 		.word	c_mem
 1967 02bc 00000000 		.word	g_adc_meas
 1968 02c0 00000000 		.word	g_meas
 1969 02c4 00000000 		.word	g_mem
 1970              	.L97:
 741:..\src/interruptions.c **** 
 742:..\src/interruptions.c ****         case INPUT_MODE_EMG_INTEGRAL:
 743:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 1971              		.loc 1 743 0
 1972 02c8 7B68     		ldr	r3, [r7, #4]
 1973 02ca 1A68     		ldr	r2, [r3]
 1974 02cc BB68     		ldr	r3, [r7, #8]
 1975 02ce 1A60     		str	r2, [r3]
 744:..\src/interruptions.c ****             if (err_emg_1 > 0) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 49


 1976              		.loc 1 744 0
 1977 02d0 BB69     		ldr	r3, [r7, #24]
 1978 02d2 002B     		cmp	r3, #0
 1979 02d4 13DD     		ble	.L118
 745:..\src/interruptions.c ****                 st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * (int)g_mem.emg.emg_speed[0] * 2) / 
 1980              		.loc 1 745 0
 1981 02d6 7B68     		ldr	r3, [r7, #4]
 1982 02d8 1A68     		ldr	r2, [r3]
 1983 02da 884B     		ldr	r3, .L158
 1984 02dc 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1985 02e0 1946     		mov	r1, r3
 1986 02e2 BB69     		ldr	r3, [r7, #24]
 1987 02e4 03FB01F3 		mul	r3, r3, r1
 1988 02e8 5900     		lsls	r1, r3, #1
 1989 02ea 854B     		ldr	r3, .L158+4
 1990 02ec B3F8F031 		ldrh	r3, [r3, #496]
 1991 02f0 C3F58063 		rsb	r3, r3, #1024
 1992 02f4 91FBF3F3 		sdiv	r3, r1, r3
 1993 02f8 1A44     		add	r2, r2, r3
 1994 02fa BB68     		ldr	r3, [r7, #8]
 1995 02fc 1A60     		str	r2, [r3]
 1996              	.L118:
 746:..\src/interruptions.c ****             }
 747:..\src/interruptions.c ****             if (err_emg_2 > 0) {
 1997              		.loc 1 747 0
 1998 02fe 7B69     		ldr	r3, [r7, #20]
 1999 0300 002B     		cmp	r3, #0
 2000 0302 40F30181 		ble	.L150
 748:..\src/interruptions.c ****                 st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * (int)g_mem.emg.emg_speed[1] * 2) / 
 2001              		.loc 1 748 0
 2002 0306 7B68     		ldr	r3, [r7, #4]
 2003 0308 1A68     		ldr	r2, [r3]
 2004 030a 7C4B     		ldr	r3, .L158
 2005 030c 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2006 0310 1946     		mov	r1, r3
 2007 0312 7B69     		ldr	r3, [r7, #20]
 2008 0314 03FB01F3 		mul	r3, r3, r1
 2009 0318 5900     		lsls	r1, r3, #1
 2010 031a 794B     		ldr	r3, .L158+4
 2011 031c B3F8F231 		ldrh	r3, [r3, #498]
 2012 0320 C3F58063 		rsb	r3, r3, #1024
 2013 0324 91FBF3F3 		sdiv	r3, r1, r3
 2014 0328 D21A     		subs	r2, r2, r3
 2015 032a BB68     		ldr	r3, [r7, #8]
 2016 032c 1A60     		str	r2, [r3]
 749:..\src/interruptions.c ****             }
 750:..\src/interruptions.c ****             break;
 2017              		.loc 1 750 0
 2018 032e EBE0     		b	.L150
 2019              	.L98:
 751:..\src/interruptions.c **** 
 752:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS:
 753:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 2020              		.loc 1 753 0
 2021 0330 7B68     		ldr	r3, [r7, #4]
 2022 0332 1A68     		ldr	r2, [r3]
 2023 0334 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 50


 2024 0336 1A60     		str	r2, [r3]
 754:..\src/interruptions.c ****             if (c_mem.dev.dev_type != SOFTHAND_2_MOTORS){
 2025              		.loc 1 754 0
 2026 0338 714B     		ldr	r3, .L158+4
 2027 033a 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 2028 033e 042B     		cmp	r3, #4
 2029 0340 5BD0     		beq	.L120
 755:..\src/interruptions.c ****                 switch (current_emg[motor_idx]) {
 2030              		.loc 1 755 0
 2031 0342 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2032 0344 6F4A     		ldr	r2, .L158+8
 2033 0346 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2034 0348 012B     		cmp	r3, #1
 2035 034a 1CD0     		beq	.L122
 2036 034c 022B     		cmp	r3, #2
 2037 034e 37D0     		beq	.L123
 2038 0350 002B     		cmp	r3, #0
 2039 0352 00D0     		beq	.L124
 756:..\src/interruptions.c ****                     case 0:
 757:..\src/interruptions.c ****                         // Look for the first EMG passing the threshold
 758:..\src/interruptions.c ****                         if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 759:..\src/interruptions.c ****                             current_emg[motor_idx] = 1;
 760:..\src/interruptions.c ****                             break;
 761:..\src/interruptions.c ****                         }
 762:..\src/interruptions.c ****                         if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 763:..\src/interruptions.c ****                             current_emg[motor_idx] = 2;
 764:..\src/interruptions.c ****                             break;
 765:..\src/interruptions.c ****                         }
 766:..\src/interruptions.c ****                         break;
 767:..\src/interruptions.c **** 
 768:..\src/interruptions.c ****                     case 1:
 769:..\src/interruptions.c ****                         // EMG 1 is first
 770:..\src/interruptions.c ****                         if (err_emg_1 < 0) {
 771:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 772:..\src/interruptions.c ****                             break;
 773:..\src/interruptions.c ****                         }
 774:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2
 775:..\src/interruptions.c ****                         break;
 776:..\src/interruptions.c **** 
 777:..\src/interruptions.c ****                     case 2:
 778:..\src/interruptions.c ****                         // EMG 2 is first
 779:..\src/interruptions.c ****                         if (err_emg_2 < 0) {
 780:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 781:..\src/interruptions.c ****                             break;
 782:..\src/interruptions.c ****                         }
 783:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * g_mem.emg.emg_speed[1] << 2
 784:..\src/interruptions.c ****                         break;
 785:..\src/interruptions.c **** 
 786:..\src/interruptions.c ****                     default:
 787:..\src/interruptions.c ****                         break;
 2040              		.loc 1 787 0
 2041 0354 5BE0     		b	.L130
 2042              	.L124:
 758:..\src/interruptions.c ****                             current_emg[motor_idx] = 1;
 2043              		.loc 1 758 0
 2044 0356 BB69     		ldr	r3, [r7, #24]
 2045 0358 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 51


 2046 035a 08DD     		ble	.L125
 758:..\src/interruptions.c ****                             current_emg[motor_idx] = 1;
 2047              		.loc 1 758 0 is_stmt 0 discriminator 1
 2048 035c BA69     		ldr	r2, [r7, #24]
 2049 035e 7B69     		ldr	r3, [r7, #20]
 2050 0360 9A42     		cmp	r2, r3
 2051 0362 04DD     		ble	.L125
 759:..\src/interruptions.c ****                             break;
 2052              		.loc 1 759 0 is_stmt 1
 2053 0364 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2054 0366 674A     		ldr	r2, .L158+8
 2055 0368 0121     		movs	r1, #1
 2056 036a D154     		strb	r1, [r2, r3]
 760:..\src/interruptions.c ****                         }
 2057              		.loc 1 760 0
 2058 036c 4FE0     		b	.L130
 2059              	.L125:
 762:..\src/interruptions.c ****                             current_emg[motor_idx] = 2;
 2060              		.loc 1 762 0
 2061 036e 7B69     		ldr	r3, [r7, #20]
 2062 0370 002B     		cmp	r3, #0
 2063 0372 4BDD     		ble	.L151
 762:..\src/interruptions.c ****                             current_emg[motor_idx] = 2;
 2064              		.loc 1 762 0 is_stmt 0 discriminator 1
 2065 0374 7A69     		ldr	r2, [r7, #20]
 2066 0376 BB69     		ldr	r3, [r7, #24]
 2067 0378 9A42     		cmp	r2, r3
 2068 037a 47DD     		ble	.L151
 763:..\src/interruptions.c ****                             break;
 2069              		.loc 1 763 0 is_stmt 1
 2070 037c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2071 037e 614A     		ldr	r2, .L158+8
 2072 0380 0221     		movs	r1, #2
 2073 0382 D154     		strb	r1, [r2, r3]
 764:..\src/interruptions.c ****                         }
 2074              		.loc 1 764 0
 2075 0384 43E0     		b	.L130
 2076              	.L122:
 770:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 2077              		.loc 1 770 0
 2078 0386 BB69     		ldr	r3, [r7, #24]
 2079 0388 002B     		cmp	r3, #0
 2080 038a 04DA     		bge	.L128
 771:..\src/interruptions.c ****                             break;
 2081              		.loc 1 771 0
 2082 038c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2083 038e 5D4A     		ldr	r2, .L158+8
 2084 0390 0021     		movs	r1, #0
 2085 0392 D154     		strb	r1, [r2, r3]
 772:..\src/interruptions.c ****                         }
 2086              		.loc 1 772 0
 2087 0394 3BE0     		b	.L130
 2088              	.L128:
 774:..\src/interruptions.c ****                         break;
 2089              		.loc 1 774 0
 2090 0396 7B68     		ldr	r3, [r7, #4]
 2091 0398 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 52


 2092 039a 584B     		ldr	r3, .L158
 2093 039c 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 2094 03a0 1946     		mov	r1, r3
 2095 03a2 BB69     		ldr	r3, [r7, #24]
 2096 03a4 03FB01F3 		mul	r3, r3, r1
 2097 03a8 9900     		lsls	r1, r3, #2
 2098 03aa 554B     		ldr	r3, .L158+4
 2099 03ac B3F8F031 		ldrh	r3, [r3, #496]
 2100 03b0 C3F58063 		rsb	r3, r3, #1024
 2101 03b4 91FBF3F3 		sdiv	r3, r1, r3
 2102 03b8 1A44     		add	r2, r2, r3
 2103 03ba BB68     		ldr	r3, [r7, #8]
 2104 03bc 1A60     		str	r2, [r3]
 775:..\src/interruptions.c **** 
 2105              		.loc 1 775 0
 2106 03be 26E0     		b	.L130
 2107              	.L123:
 779:..\src/interruptions.c ****                             current_emg[motor_idx] = 0;
 2108              		.loc 1 779 0
 2109 03c0 7B69     		ldr	r3, [r7, #20]
 2110 03c2 002B     		cmp	r3, #0
 2111 03c4 04DA     		bge	.L129
 780:..\src/interruptions.c ****                             break;
 2112              		.loc 1 780 0
 2113 03c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2114 03c8 4E4A     		ldr	r2, .L158+8
 2115 03ca 0021     		movs	r1, #0
 2116 03cc D154     		strb	r1, [r2, r3]
 781:..\src/interruptions.c ****                         }
 2117              		.loc 1 781 0
 2118 03ce 1EE0     		b	.L130
 2119              	.L129:
 783:..\src/interruptions.c ****                         break;
 2120              		.loc 1 783 0
 2121 03d0 7B68     		ldr	r3, [r7, #4]
 2122 03d2 1A68     		ldr	r2, [r3]
 2123 03d4 494B     		ldr	r3, .L158
 2124 03d6 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2125 03da 1946     		mov	r1, r3
 2126 03dc 7B69     		ldr	r3, [r7, #20]
 2127 03de 03FB01F3 		mul	r3, r3, r1
 2128 03e2 9900     		lsls	r1, r3, #2
 2129 03e4 464B     		ldr	r3, .L158+4
 2130 03e6 B3F8F231 		ldrh	r3, [r3, #498]
 2131 03ea C3F58063 		rsb	r3, r3, #1024
 2132 03ee 91FBF3F3 		sdiv	r3, r1, r3
 2133 03f2 D21A     		subs	r2, r2, r3
 2134 03f4 BB68     		ldr	r3, [r7, #8]
 2135 03f6 1A60     		str	r2, [r3]
 784:..\src/interruptions.c **** 
 2136              		.loc 1 784 0
 2137 03f8 09E0     		b	.L130
 2138              	.L120:
 788:..\src/interruptions.c ****                 }
 789:..\src/interruptions.c ****             }
 790:..\src/interruptions.c ****             else{ // case SOFTHAND_2_MOTORS
 791:..\src/interruptions.c ****                 //compute reference using a FSM for choosing the right sinergy to activate
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 53


 792:..\src/interruptions.c ****                 compute_SoftHand_2_motors_emg_reference(motor_idx, st_ref_p, st_refOld_p, err_emg_1
 2139              		.loc 1 792 0
 2140 03fa F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 2141 03fc 7B69     		ldr	r3, [r7, #20]
 2142 03fe 0093     		str	r3, [sp]
 2143 0400 BB69     		ldr	r3, [r7, #24]
 2144 0402 7A68     		ldr	r2, [r7, #4]
 2145 0404 B968     		ldr	r1, [r7, #8]
 2146 0406 FFF7FEFF 		bl	compute_SoftHand_2_motors_emg_reference
 793:..\src/interruptions.c ****             }
 794:..\src/interruptions.c ****             break;
 2147              		.loc 1 794 0
 2148 040a 7EE0     		b	.L107
 2149              	.L151:
 766:..\src/interruptions.c **** 
 2150              		.loc 1 766 0
 2151 040c 00BF     		nop
 2152              	.L130:
 2153              		.loc 1 794 0 discriminator 5
 2154 040e 7CE0     		b	.L107
 2155              	.L99:
 795:..\src/interruptions.c **** 
 796:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS_ADV:
 797:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 2156              		.loc 1 797 0
 2157 0410 7B68     		ldr	r3, [r7, #4]
 2158 0412 1A68     		ldr	r2, [r3]
 2159 0414 BB68     		ldr	r3, [r7, #8]
 2160 0416 1A60     		str	r2, [r3]
 798:..\src/interruptions.c ****             switch (current_emg[motor_idx]) {
 2161              		.loc 1 798 0
 2162 0418 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2163 041a 3A4A     		ldr	r2, .L158+8
 2164 041c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2165 041e 012B     		cmp	r3, #1
 2166 0420 1CD0     		beq	.L132
 2167 0422 022B     		cmp	r3, #2
 2168 0424 3DD0     		beq	.L133
 2169 0426 002B     		cmp	r3, #0
 2170 0428 00D0     		beq	.L134
 799:..\src/interruptions.c ****                 // Look for the first EMG passing the threshold
 800:..\src/interruptions.c ****                 case 0:
 801:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 802:..\src/interruptions.c ****                         current_emg[motor_idx] = 1;
 803:..\src/interruptions.c ****                         break;
 804:..\src/interruptions.c ****                     }
 805:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 806:..\src/interruptions.c ****                         current_emg[motor_idx] = 2;
 807:..\src/interruptions.c ****                         break;
 808:..\src/interruptions.c ****                     }
 809:..\src/interruptions.c ****                     break;
 810:..\src/interruptions.c **** 
 811:..\src/interruptions.c ****                 // EMG 1 is first
 812:..\src/interruptions.c ****                 case 1:
 813:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 814:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 815:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 54


 816:..\src/interruptions.c ****                         break;
 817:..\src/interruptions.c ****                     }
 818:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 819:..\src/interruptions.c ****                     if (err_emg_1 > 0) 
 820:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2
 821:..\src/interruptions.c ****                     
 822:..\src/interruptions.c ****                     break;
 823:..\src/interruptions.c **** 
 824:..\src/interruptions.c ****                 // EMG 2 is first
 825:..\src/interruptions.c ****                 case 2:
 826:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 827:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 828:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 829:..\src/interruptions.c ****                         break;
 830:..\src/interruptions.c ****                     }
 831:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 832:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
 833:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * c_mem.emg.emg_speed[1] << 2
 834:..\src/interruptions.c ****                     }
 835:..\src/interruptions.c ****                     break;
 836:..\src/interruptions.c **** 
 837:..\src/interruptions.c ****                 default:
 838:..\src/interruptions.c ****                     break;
 2171              		.loc 1 838 0
 2172 042a 62E0     		b	.L136
 2173              	.L134:
 801:..\src/interruptions.c ****                         current_emg[motor_idx] = 1;
 2174              		.loc 1 801 0
 2175 042c BB69     		ldr	r3, [r7, #24]
 2176 042e 002B     		cmp	r3, #0
 2177 0430 08DD     		ble	.L135
 801:..\src/interruptions.c ****                         current_emg[motor_idx] = 1;
 2178              		.loc 1 801 0 is_stmt 0 discriminator 1
 2179 0432 BA69     		ldr	r2, [r7, #24]
 2180 0434 7B69     		ldr	r3, [r7, #20]
 2181 0436 9A42     		cmp	r2, r3
 2182 0438 04DD     		ble	.L135
 802:..\src/interruptions.c ****                         break;
 2183              		.loc 1 802 0 is_stmt 1
 2184 043a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2185 043c 314A     		ldr	r2, .L158+8
 2186 043e 0121     		movs	r1, #1
 2187 0440 D154     		strb	r1, [r2, r3]
 803:..\src/interruptions.c ****                     }
 2188              		.loc 1 803 0
 2189 0442 56E0     		b	.L136
 2190              	.L135:
 805:..\src/interruptions.c ****                         current_emg[motor_idx] = 2;
 2191              		.loc 1 805 0
 2192 0444 7B69     		ldr	r3, [r7, #20]
 2193 0446 002B     		cmp	r3, #0
 2194 0448 4EDD     		ble	.L152
 805:..\src/interruptions.c ****                         current_emg[motor_idx] = 2;
 2195              		.loc 1 805 0 is_stmt 0 discriminator 1
 2196 044a 7A69     		ldr	r2, [r7, #20]
 2197 044c BB69     		ldr	r3, [r7, #24]
 2198 044e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 55


 2199 0450 4ADD     		ble	.L152
 806:..\src/interruptions.c ****                         break;
 2200              		.loc 1 806 0 is_stmt 1
 2201 0452 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2202 0454 2B4A     		ldr	r2, .L158+8
 2203 0456 0221     		movs	r1, #2
 2204 0458 D154     		strb	r1, [r2, r3]
 807:..\src/interruptions.c ****                     }
 2205              		.loc 1 807 0
 2206 045a 4AE0     		b	.L136
 2207              	.L132:
 814:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 2208              		.loc 1 814 0
 2209 045c BB69     		ldr	r3, [r7, #24]
 2210 045e 002B     		cmp	r3, #0
 2211 0460 07DA     		bge	.L138
 814:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 2212              		.loc 1 814 0 is_stmt 0 discriminator 1
 2213 0462 7B69     		ldr	r3, [r7, #20]
 2214 0464 002B     		cmp	r3, #0
 2215 0466 04DA     		bge	.L138
 815:..\src/interruptions.c ****                         break;
 2216              		.loc 1 815 0 is_stmt 1
 2217 0468 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2218 046a 264A     		ldr	r2, .L158+8
 2219 046c 0021     		movs	r1, #0
 2220 046e D154     		strb	r1, [r2, r3]
 816:..\src/interruptions.c ****                     }
 2221              		.loc 1 816 0
 2222 0470 3FE0     		b	.L136
 2223              	.L138:
 819:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2
 2224              		.loc 1 819 0
 2225 0472 BB69     		ldr	r3, [r7, #24]
 2226 0474 002B     		cmp	r3, #0
 2227 0476 39DD     		ble	.L153
 820:..\src/interruptions.c ****                     
 2228              		.loc 1 820 0
 2229 0478 7B68     		ldr	r3, [r7, #4]
 2230 047a 1A68     		ldr	r2, [r3]
 2231 047c 1F4B     		ldr	r3, .L158
 2232 047e 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 2233 0482 1946     		mov	r1, r3
 2234 0484 BB69     		ldr	r3, [r7, #24]
 2235 0486 03FB01F3 		mul	r3, r3, r1
 2236 048a 9900     		lsls	r1, r3, #2
 2237 048c 1C4B     		ldr	r3, .L158+4
 2238 048e B3F8F031 		ldrh	r3, [r3, #496]
 2239 0492 C3F58063 		rsb	r3, r3, #1024
 2240 0496 91FBF3F3 		sdiv	r3, r1, r3
 2241 049a 1A44     		add	r2, r2, r3
 2242 049c BB68     		ldr	r3, [r7, #8]
 2243 049e 1A60     		str	r2, [r3]
 822:..\src/interruptions.c **** 
 2244              		.loc 1 822 0
 2245 04a0 24E0     		b	.L153
 2246              	.L133:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 56


 827:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 2247              		.loc 1 827 0
 2248 04a2 BB69     		ldr	r3, [r7, #24]
 2249 04a4 002B     		cmp	r3, #0
 2250 04a6 07DA     		bge	.L140
 827:..\src/interruptions.c ****                         current_emg[motor_idx] = 0;
 2251              		.loc 1 827 0 is_stmt 0 discriminator 1
 2252 04a8 7B69     		ldr	r3, [r7, #20]
 2253 04aa 002B     		cmp	r3, #0
 2254 04ac 04DA     		bge	.L140
 828:..\src/interruptions.c ****                         break;
 2255              		.loc 1 828 0 is_stmt 1
 2256 04ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2257 04b0 144A     		ldr	r2, .L158+8
 2258 04b2 0021     		movs	r1, #0
 2259 04b4 D154     		strb	r1, [r2, r3]
 829:..\src/interruptions.c ****                     }
 2260              		.loc 1 829 0
 2261 04b6 1CE0     		b	.L136
 2262              	.L140:
 832:..\src/interruptions.c ****                         st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * c_mem.emg.emg_speed[1] << 2
 2263              		.loc 1 832 0
 2264 04b8 7B69     		ldr	r3, [r7, #20]
 2265 04ba 002B     		cmp	r3, #0
 2266 04bc 18DD     		ble	.L154
 833:..\src/interruptions.c ****                     }
 2267              		.loc 1 833 0
 2268 04be 7B68     		ldr	r3, [r7, #4]
 2269 04c0 1A68     		ldr	r2, [r3]
 2270 04c2 0F4B     		ldr	r3, .L158+4
 2271 04c4 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2272 04c8 1946     		mov	r1, r3
 2273 04ca 7B69     		ldr	r3, [r7, #20]
 2274 04cc 03FB01F3 		mul	r3, r3, r1
 2275 04d0 9900     		lsls	r1, r3, #2
 2276 04d2 0B4B     		ldr	r3, .L158+4
 2277 04d4 B3F8F231 		ldrh	r3, [r3, #498]
 2278 04d8 C3F58063 		rsb	r3, r3, #1024
 2279 04dc 91FBF3F3 		sdiv	r3, r1, r3
 2280 04e0 D21A     		subs	r2, r2, r3
 2281 04e2 BB68     		ldr	r3, [r7, #8]
 2282 04e4 1A60     		str	r2, [r3]
 835:..\src/interruptions.c **** 
 2283              		.loc 1 835 0
 2284 04e6 03E0     		b	.L154
 2285              	.L152:
 809:..\src/interruptions.c **** 
 2286              		.loc 1 809 0
 2287 04e8 00BF     		nop
 2288 04ea 0EE0     		b	.L107
 2289              	.L153:
 822:..\src/interruptions.c **** 
 2290              		.loc 1 822 0
 2291 04ec 00BF     		nop
 2292 04ee 0CE0     		b	.L107
 2293              	.L154:
 835:..\src/interruptions.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 57


 2294              		.loc 1 835 0
 2295 04f0 00BF     		nop
 2296              	.L136:
 839:..\src/interruptions.c ****             }
 840:..\src/interruptions.c ****             break;
 2297              		.loc 1 840 0 discriminator 6
 2298 04f2 0AE0     		b	.L107
 2299              	.L148:
 841:..\src/interruptions.c **** 
 842:..\src/interruptions.c ****         default:
 843:..\src/interruptions.c ****             break;
 2300              		.loc 1 843 0
 2301 04f4 00BF     		nop
 2302 04f6 08E0     		b	.L107
 2303              	.L149:
 726:..\src/interruptions.c ****             
 2304              		.loc 1 726 0
 2305 04f8 00BF     		nop
 2306 04fa 06E0     		b	.L107
 2307              	.L159:
 2308              		.align	2
 2309              	.L158:
 2310 04fc 00000000 		.word	g_mem
 2311 0500 00000000 		.word	c_mem
 2312 0504 8C000000 		.word	current_emg.10509
 2313              	.L150:
 750:..\src/interruptions.c **** 
 2314              		.loc 1 750 0
 2315 0508 00BF     		nop
 2316              	.L107:
 844:..\src/interruptions.c ****     }
 845:..\src/interruptions.c **** 
 846:..\src/interruptions.c ****     // Position limit saturation
 847:..\src/interruptions.c ****     if (MOT->pos_lim_flag) {
 2317              		.loc 1 847 0
 2318 050a 3B6A     		ldr	r3, [r7, #32]
 2319 050c 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 2320 0510 002B     		cmp	r3, #0
 2321 0512 13D0     		beq	.L142
 848:..\src/interruptions.c ****         if (st_ref_p->pos < MOT->pos_lim_inf) 
 2322              		.loc 1 848 0
 2323 0514 BB68     		ldr	r3, [r7, #8]
 2324 0516 1A68     		ldr	r2, [r3]
 2325 0518 3B6A     		ldr	r3, [r7, #32]
 2326 051a 5B6B     		ldr	r3, [r3, #52]
 2327 051c 9A42     		cmp	r2, r3
 2328 051e 03DA     		bge	.L143
 849:..\src/interruptions.c ****             st_ref_p->pos = MOT->pos_lim_inf;
 2329              		.loc 1 849 0
 2330 0520 3B6A     		ldr	r3, [r7, #32]
 2331 0522 5A6B     		ldr	r2, [r3, #52]
 2332 0524 BB68     		ldr	r3, [r7, #8]
 2333 0526 1A60     		str	r2, [r3]
 2334              	.L143:
 850:..\src/interruptions.c ****         if (st_ref_p->pos > MOT->pos_lim_sup) 
 2335              		.loc 1 850 0
 2336 0528 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 58


 2337 052a 1A68     		ldr	r2, [r3]
 2338 052c 3B6A     		ldr	r3, [r7, #32]
 2339 052e 9B6B     		ldr	r3, [r3, #56]
 2340 0530 9A42     		cmp	r2, r3
 2341 0532 03DD     		ble	.L142
 851:..\src/interruptions.c ****             st_ref_p->pos = MOT->pos_lim_sup;
 2342              		.loc 1 851 0
 2343 0534 3B6A     		ldr	r3, [r7, #32]
 2344 0536 9A6B     		ldr	r2, [r3, #56]
 2345 0538 BB68     		ldr	r3, [r7, #8]
 2346 053a 1A60     		str	r2, [r3]
 2347              	.L142:
 852:..\src/interruptions.c ****     }
 853:..\src/interruptions.c ****     
 854:..\src/interruptions.c ****     // SAFETY
 855:..\src/interruptions.c ****     if (battery_low_SoC == TRUE) {
 2348              		.loc 1 855 0
 2349 053c 1D4B     		ldr	r3, .L160
 2350 053e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2351 0540 012B     		cmp	r3, #1
 2352 0542 02D1     		bne	.L144
 856:..\src/interruptions.c ****         //Reopen the terminal device before disabling motor
 857:..\src/interruptions.c ****         st_ref_p->pos = 0;
 2353              		.loc 1 857 0
 2354 0544 BB68     		ldr	r3, [r7, #8]
 2355 0546 0022     		movs	r2, #0
 2356 0548 1A60     		str	r2, [r3]
 2357              	.L144:
 858:..\src/interruptions.c ****     }      
 859:..\src/interruptions.c ****     
 860:..\src/interruptions.c ****        
 861:..\src/interruptions.c ****     if (c_mem.SH.rest_position_flag == TRUE) {
 2358              		.loc 1 861 0
 2359 054a 1B4B     		ldr	r3, .L160+4
 2360 054c 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 2361 0550 012B     		cmp	r3, #1
 2362 0552 2AD1     		bne	.L155
 862:..\src/interruptions.c ****         if (rest_enabled == 1){
 2363              		.loc 1 862 0
 2364 0554 194B     		ldr	r3, .L160+8
 2365 0556 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2366 0558 012B     		cmp	r3, #1
 2367 055a 03D1     		bne	.L146
 863:..\src/interruptions.c ****             // Change position reference to drive motor to rest position smoothly
 864:..\src/interruptions.c ****             st_ref_p->pos = rest_pos_curr_ref;
 2368              		.loc 1 864 0
 2369 055c 184B     		ldr	r3, .L160+12
 2370 055e 1A68     		ldr	r2, [r3]
 2371 0560 BB68     		ldr	r3, [r7, #8]
 2372 0562 1A60     		str	r2, [r3]
 2373              	.L146:
 865:..\src/interruptions.c ****         }
 866:..\src/interruptions.c ****         
 867:..\src/interruptions.c ****         if (forced_open == 1) {
 2374              		.loc 1 867 0
 2375 0564 174B     		ldr	r3, .L160+16
 2376 0566 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 59


 2377 0568 012B     		cmp	r3, #1
 2378 056a 1ED1     		bne	.L155
 868:..\src/interruptions.c ****             // Open the SoftHand as EMG PROPORTIONAL input mode 
 869:..\src/interruptions.c ****             if (err_emg_2 > 0)
 2379              		.loc 1 869 0
 2380 056c 7B69     		ldr	r3, [r7, #20]
 2381 056e 002B     		cmp	r3, #0
 2382 0570 13DD     		ble	.L147
 870:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.SH.rest_pos - (err_emg_2 * g_mem.SH.rest_pos) / (1024 - c_mem
 2383              		.loc 1 870 0
 2384 0572 154B     		ldr	r3, .L160+20
 2385 0574 D3F8A022 		ldr	r2, [r3, #672]
 2386 0578 134B     		ldr	r3, .L160+20
 2387 057a D3F8A032 		ldr	r3, [r3, #672]
 2388 057e 7969     		ldr	r1, [r7, #20]
 2389 0580 01FB03F1 		mul	r1, r1, r3
 2390 0584 0C4B     		ldr	r3, .L160+4
 2391 0586 B3F8F231 		ldrh	r3, [r3, #498]
 2392 058a C3F58063 		rsb	r3, r3, #1024
 2393 058e 91FBF3F3 		sdiv	r3, r1, r3
 2394 0592 D21A     		subs	r2, r2, r3
 2395 0594 BB68     		ldr	r3, [r7, #8]
 2396 0596 1A60     		str	r2, [r3]
 871:..\src/interruptions.c ****             else {
 872:..\src/interruptions.c ****                 st_ref_p->pos = g_mem.SH.rest_pos;
 873:..\src/interruptions.c ****                 forced_open = 0;
 874:..\src/interruptions.c ****             }
 875:..\src/interruptions.c ****         }
 876:..\src/interruptions.c ****     }
 877:..\src/interruptions.c **** }
 2397              		.loc 1 877 0
 2398 0598 07E0     		b	.L155
 2399              	.L147:
 872:..\src/interruptions.c ****                 forced_open = 0;
 2400              		.loc 1 872 0
 2401 059a 0B4B     		ldr	r3, .L160+20
 2402 059c D3F8A022 		ldr	r2, [r3, #672]
 2403 05a0 BB68     		ldr	r3, [r7, #8]
 2404 05a2 1A60     		str	r2, [r3]
 873:..\src/interruptions.c ****             }
 2405              		.loc 1 873 0
 2406 05a4 074B     		ldr	r3, .L160+16
 2407 05a6 0022     		movs	r2, #0
 2408 05a8 1A70     		strb	r2, [r3]
 2409              	.L155:
 2410              		.loc 1 877 0
 2411 05aa 00BF     		nop
 2412 05ac 2837     		adds	r7, r7, #40
 2413              		.cfi_def_cfa_offset 8
 2414 05ae BD46     		mov	sp, r7
 2415              		.cfi_def_cfa_register 13
 2416              		@ sp needed
 2417 05b0 80BD     		pop	{r7, pc}
 2418              	.L161:
 2419 05b2 00BF     		.align	2
 2420              	.L160:
 2421 05b4 00000000 		.word	battery_low_SoC
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 60


 2422 05b8 00000000 		.word	c_mem
 2423 05bc 00000000 		.word	rest_enabled
 2424 05c0 00000000 		.word	rest_pos_curr_ref
 2425 05c4 00000000 		.word	forced_open
 2426 05c8 00000000 		.word	g_mem
 2427              		.cfi_endproc
 2428              	.LFE68:
 2429              		.size	compute_reference, .-compute_reference
 2430              		.section	.text.compute_SoftHand_2_motors_joystick_reference,"ax",%progbits
 2431              		.align	2
 2432              		.global	compute_SoftHand_2_motors_joystick_reference
 2433              		.thumb
 2434              		.thumb_func
 2435              		.type	compute_SoftHand_2_motors_joystick_reference, %function
 2436              	compute_SoftHand_2_motors_joystick_reference:
 2437              	.LFB69:
 878:..\src/interruptions.c **** 
 879:..\src/interruptions.c **** 
 880:..\src/interruptions.c **** //==============================================================================
 881:..\src/interruptions.c **** //                                  COMPUTE SOFTHAND 2 MOTORS JOYSTICK REFERENCE
 882:..\src/interruptions.c **** //==============================================================================
 883:..\src/interruptions.c **** void compute_SoftHand_2_motors_joystick_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct 
 2438              		.loc 1 883 0
 2439              		.cfi_startproc
 2440              		@ args = 0, pretend = 0, frame = 32
 2441              		@ frame_needed = 1, uses_anonymous_args = 0
 2442              		@ link register save eliminated.
 2443 0000 80B4     		push	{r7}
 2444              		.cfi_def_cfa_offset 4
 2445              		.cfi_offset 7, -4
 2446 0002 89B0     		sub	sp, sp, #36
 2447              		.cfi_def_cfa_offset 40
 2448 0004 00AF     		add	r7, sp, #0
 2449              		.cfi_def_cfa_register 7
 2450 0006 0346     		mov	r3, r0
 2451 0008 B960     		str	r1, [r7, #8]
 2452 000a 7A60     		str	r2, [r7, #4]
 2453 000c FB73     		strb	r3, [r7, #15]
 884:..\src/interruptions.c ****     
 885:..\src/interruptions.c ****     if (c_mem.motor[0].input_mode == INPUT_MODE_JOYSTICK && c_mem.motor[1].input_mode == INPUT_MODE
 2454              		.loc 1 885 0
 2455 000e B04B     		ldr	r3, .L183
 2456 0010 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 2457 0014 062B     		cmp	r3, #6
 2458 0016 40F08581 		bne	.L181
 2459              		.loc 1 885 0 is_stmt 0 discriminator 1
 2460 001a AD4B     		ldr	r3, .L183
 2461 001c 93F87E31 		ldrb	r3, [r3, #382]	@ zero_extendqisi2
 2462 0020 062B     		cmp	r3, #6
 2463 0022 40F07F81 		bne	.L181
 886:..\src/interruptions.c ****         st_ref_p->pos = st_refOld_p->pos;
 2464              		.loc 1 886 0 is_stmt 1
 2465 0026 7B68     		ldr	r3, [r7, #4]
 2466 0028 1A68     		ldr	r2, [r3]
 2467 002a BB68     		ldr	r3, [r7, #8]
 2468 002c 1A60     		str	r2, [r3]
 887:..\src/interruptions.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 61


 888:..\src/interruptions.c ****         if(!(g_adc_meas.joystick[0] > 700)) {
 2469              		.loc 1 888 0
 2470 002e A94B     		ldr	r3, .L183+4
 2471 0030 1B6A     		ldr	r3, [r3, #32]
 2472 0032 B3F52F7F 		cmp	r3, #700
 2473 0036 00F3C280 		bgt	.L164
 2474              	.LBB6:
 889:..\src/interruptions.c ****              
 890:..\src/interruptions.c ****             int32 CYDATA err_joy_1 = 0;
 2475              		.loc 1 890 0
 2476 003a 0023     		movs	r3, #0
 2477 003c FB61     		str	r3, [r7, #28]
 891:..\src/interruptions.c ****             int32 CYDATA err_joy_2 = 0;
 2478              		.loc 1 891 0
 2479 003e 0023     		movs	r3, #0
 2480 0040 BB61     		str	r3, [r7, #24]
 892:..\src/interruptions.c ****         
 893:..\src/interruptions.c ****             if(g_adc_meas.joystick[0] > c_mem.JOY_spec.joystick_threshold) {     //both motors wind
 2481              		.loc 1 893 0
 2482 0042 A44B     		ldr	r3, .L183+4
 2483 0044 1B6A     		ldr	r3, [r3, #32]
 2484 0046 A24A     		ldr	r2, .L183
 2485 0048 B2F9B222 		ldrsh	r2, [r2, #690]
 2486 004c 9342     		cmp	r3, r2
 2487 004e 1ADD     		ble	.L165
 894:..\src/interruptions.c ****                 err_joy_1 = g_adc_meas.joystick[0] - c_mem.JOY_spec.joystick_threshold;
 2488              		.loc 1 894 0
 2489 0050 A04B     		ldr	r3, .L183+4
 2490 0052 1B6A     		ldr	r3, [r3, #32]
 2491 0054 9E4A     		ldr	r2, .L183
 2492 0056 B2F9B222 		ldrsh	r2, [r2, #690]
 2493 005a 9B1A     		subs	r3, r3, r2
 2494 005c FB61     		str	r3, [r7, #28]
 895:..\src/interruptions.c ****                 st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_speed) / (102
 2495              		.loc 1 895 0
 2496 005e BB68     		ldr	r3, [r7, #8]
 2497 0060 1A68     		ldr	r2, [r3]
 2498 0062 9B4B     		ldr	r3, .L183
 2499 0064 B3F8B032 		ldrh	r3, [r3, #688]
 2500 0068 1946     		mov	r1, r3
 2501 006a FB69     		ldr	r3, [r7, #28]
 2502 006c 03FB01F1 		mul	r1, r3, r1
 2503 0070 974B     		ldr	r3, .L183
 2504 0072 B3F9B232 		ldrsh	r3, [r3, #690]
 2505 0076 C3F58063 		rsb	r3, r3, #1024
 2506 007a 91FBF3F3 		sdiv	r3, r1, r3
 2507 007e 1A44     		add	r2, r2, r3
 2508 0080 BB68     		ldr	r3, [r7, #8]
 2509 0082 1A60     		str	r2, [r3]
 2510 0084 21E0     		b	.L166
 2511              	.L165:
 896:..\src/interruptions.c ****             }
 897:..\src/interruptions.c ****             else {
 898:..\src/interruptions.c ****                 if(g_adc_meas.joystick[0] < -c_mem.JOY_spec.joystick_threshold) {  //both motors un
 2512              		.loc 1 898 0
 2513 0086 934B     		ldr	r3, .L183+4
 2514 0088 1A6A     		ldr	r2, [r3, #32]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 62


 2515 008a 914B     		ldr	r3, .L183
 2516 008c B3F9B232 		ldrsh	r3, [r3, #690]
 2517 0090 5B42     		negs	r3, r3
 2518 0092 9A42     		cmp	r2, r3
 2519 0094 19DA     		bge	.L166
 899:..\src/interruptions.c ****                     err_joy_1 = g_adc_meas.joystick[0] + c_mem.JOY_spec.joystick_threshold;
 2520              		.loc 1 899 0
 2521 0096 8F4B     		ldr	r3, .L183+4
 2522 0098 1B6A     		ldr	r3, [r3, #32]
 2523 009a 8D4A     		ldr	r2, .L183
 2524 009c B2F9B222 		ldrsh	r2, [r2, #690]
 2525 00a0 1344     		add	r3, r3, r2
 2526 00a2 FB61     		str	r3, [r7, #28]
 900:..\src/interruptions.c ****                     st_ref_p->pos += ((int32) err_joy_1 * c_mem.JOY_spec.joystick_closure_speed) / 
 2527              		.loc 1 900 0
 2528 00a4 BB68     		ldr	r3, [r7, #8]
 2529 00a6 1A68     		ldr	r2, [r3]
 2530 00a8 894B     		ldr	r3, .L183
 2531 00aa B3F8B032 		ldrh	r3, [r3, #688]
 2532 00ae 1946     		mov	r1, r3
 2533 00b0 FB69     		ldr	r3, [r7, #28]
 2534 00b2 03FB01F1 		mul	r1, r3, r1
 2535 00b6 864B     		ldr	r3, .L183
 2536 00b8 B3F9B232 		ldrsh	r3, [r3, #690]
 2537 00bc C3F58063 		rsb	r3, r3, #1024
 2538 00c0 91FBF3F3 		sdiv	r3, r1, r3
 2539 00c4 1A44     		add	r2, r2, r3
 2540 00c6 BB68     		ldr	r3, [r7, #8]
 2541 00c8 1A60     		str	r2, [r3]
 2542              	.L166:
 901:..\src/interruptions.c ****                 }
 902:..\src/interruptions.c ****             }
 903:..\src/interruptions.c **** 
 904:..\src/interruptions.c ****             if(g_adc_meas.joystick[1] > c_mem.JOY_spec.joystick_threshold) {    //The wire is winde
 2543              		.loc 1 904 0
 2544 00ca 824B     		ldr	r3, .L183+4
 2545 00cc 5B6A     		ldr	r3, [r3, #36]
 2546 00ce 804A     		ldr	r2, .L183
 2547 00d0 B2F9B222 		ldrsh	r2, [r2, #690]
 2548 00d4 9342     		cmp	r3, r2
 2549 00d6 34DD     		ble	.L167
 905:..\src/interruptions.c ****                 err_joy_2 = g_adc_meas.joystick[1] - c_mem.JOY_spec.joystick_threshold;
 2550              		.loc 1 905 0
 2551 00d8 7E4B     		ldr	r3, .L183+4
 2552 00da 5B6A     		ldr	r3, [r3, #36]
 2553 00dc 7C4A     		ldr	r2, .L183
 2554 00de B2F9B222 		ldrsh	r2, [r2, #690]
 2555 00e2 9B1A     		subs	r3, r3, r2
 2556 00e4 BB61     		str	r3, [r7, #24]
 906:..\src/interruptions.c ****                 if (motor_idx == 0){
 2557              		.loc 1 906 0
 2558 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2559 00e8 002B     		cmp	r3, #0
 2560 00ea 12D1     		bne	.L168
 907:..\src/interruptions.c ****                     st_ref_p->pos += ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed) / 
 2561              		.loc 1 907 0
 2562 00ec BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 63


 2563 00ee 1A68     		ldr	r2, [r3]
 2564 00f0 774B     		ldr	r3, .L183
 2565 00f2 B3F8B032 		ldrh	r3, [r3, #688]
 2566 00f6 1946     		mov	r1, r3
 2567 00f8 BB69     		ldr	r3, [r7, #24]
 2568 00fa 03FB01F1 		mul	r1, r3, r1
 2569 00fe 744B     		ldr	r3, .L183
 2570 0100 B3F9B232 		ldrsh	r3, [r3, #690]
 2571 0104 C3F58063 		rsb	r3, r3, #1024
 2572 0108 91FBF3F3 		sdiv	r3, r1, r3
 2573 010c 1A44     		add	r2, r2, r3
 2574 010e BB68     		ldr	r3, [r7, #8]
 2575 0110 1A60     		str	r2, [r3]
 2576              	.L168:
 908:..\src/interruptions.c ****                 }
 909:..\src/interruptions.c ****                 if (motor_idx == 1){
 2577              		.loc 1 909 0
 2578 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2579 0114 012B     		cmp	r3, #1
 2580 0116 40F00581 		bne	.L181
 910:..\src/interruptions.c ****                     st_ref_p->pos -= ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed) / 
 2581              		.loc 1 910 0
 2582 011a BB68     		ldr	r3, [r7, #8]
 2583 011c 1A68     		ldr	r2, [r3]
 2584 011e 6C4B     		ldr	r3, .L183
 2585 0120 B3F8B032 		ldrh	r3, [r3, #688]
 2586 0124 1946     		mov	r1, r3
 2587 0126 BB69     		ldr	r3, [r7, #24]
 2588 0128 03FB01F1 		mul	r1, r3, r1
 2589 012c 684B     		ldr	r3, .L183
 2590 012e B3F9B232 		ldrsh	r3, [r3, #690]
 2591 0132 C3F58063 		rsb	r3, r3, #1024
 2592 0136 91FBF3F3 		sdiv	r3, r1, r3
 2593 013a D21A     		subs	r2, r2, r3
 2594 013c BB68     		ldr	r3, [r7, #8]
 2595 013e 1A60     		str	r2, [r3]
 2596              	.LBE6:
 911:..\src/interruptions.c ****                 }          
 912:..\src/interruptions.c ****             }
 913:..\src/interruptions.c ****             else {
 914:..\src/interruptions.c ****                 if(g_adc_meas.joystick[1] < -c_mem.JOY_spec.joystick_threshold) {  //The wire is un
 915:..\src/interruptions.c ****                     
 916:..\src/interruptions.c ****                     err_joy_2 = g_adc_meas.joystick[1] + c_mem.JOY_spec.joystick_threshold;
 917:..\src/interruptions.c ****                     if (motor_idx == 0){
 918:..\src/interruptions.c ****                         st_ref_p->pos += ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 919:..\src/interruptions.c ****                     }
 920:..\src/interruptions.c ****                     if (motor_idx == 1){
 921:..\src/interruptions.c ****                         st_ref_p->pos -= ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 922:..\src/interruptions.c ****                     }
 923:..\src/interruptions.c ****                 }
 924:..\src/interruptions.c ****             }
 925:..\src/interruptions.c ****         }
 926:..\src/interruptions.c ****         else {  //The button is pressed and the hand is opened firstly making the position differen
 927:..\src/interruptions.c ****                 //equal to zero, then the position sum is gradually set to zero 
 928:..\src/interruptions.c ****             int32 pos_diff = (g_meas[c_mem.motor[0].encoder_line].pos[0] - g_meas[c_mem.motor[0].en
 929:..\src/interruptions.c ****             int32 pos_sum = (g_meas[c_mem.motor[0].encoder_line].pos[0] + g_meas[c_mem.motor[0].enc
 930:..\src/interruptions.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 64


 931:..\src/interruptions.c ****             if(pos_diff > 500 || pos_diff < -500) {
 932:..\src/interruptions.c ****                 if(SIGN(pos_diff) == 1) {
 933:..\src/interruptions.c ****                     if (motor_idx == 1){
 934:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 935:..\src/interruptions.c ****                     }
 936:..\src/interruptions.c ****                     if (motor_idx == 0){
 937:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 938:..\src/interruptions.c ****                     }                    
 939:..\src/interruptions.c ****                 }
 940:..\src/interruptions.c ****                 else {
 941:..\src/interruptions.c ****                     if (motor_idx == 0){
 942:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 943:..\src/interruptions.c ****                     }
 944:..\src/interruptions.c ****                     if (motor_idx == 1){
 945:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 946:..\src/interruptions.c ****                     }
 947:..\src/interruptions.c ****                 }
 948:..\src/interruptions.c ****                 
 949:..\src/interruptions.c ****             }
 950:..\src/interruptions.c ****             else {
 951:..\src/interruptions.c ****                 if(pos_sum > 0) {
 952:..\src/interruptions.c ****                     if (motor_idx == 0){
 953:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 954:..\src/interruptions.c ****                     }
 955:..\src/interruptions.c ****                     if (motor_idx == 1){
 956:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 957:..\src/interruptions.c ****                     }
 958:..\src/interruptions.c ****                     
 959:..\src/interruptions.c ****                     if (st_ref_p->pos < 0){
 960:..\src/interruptions.c ****                         st_ref_p->pos = 0;
 961:..\src/interruptions.c ****                     }
 962:..\src/interruptions.c ****                 }
 963:..\src/interruptions.c ****             }
 964:..\src/interruptions.c ****         }
 965:..\src/interruptions.c ****     }           
 966:..\src/interruptions.c **** }
 2597              		.loc 1 966 0
 2598 0140 F0E0     		b	.L181
 2599              	.L167:
 2600              	.LBB7:
 914:..\src/interruptions.c ****                     
 2601              		.loc 1 914 0
 2602 0142 644B     		ldr	r3, .L183+4
 2603 0144 5A6A     		ldr	r2, [r3, #36]
 2604 0146 624B     		ldr	r3, .L183
 2605 0148 B3F9B232 		ldrsh	r3, [r3, #690]
 2606 014c 5B42     		negs	r3, r3
 2607 014e 9A42     		cmp	r2, r3
 2608 0150 80F2E880 		bge	.L181
 916:..\src/interruptions.c ****                     if (motor_idx == 0){
 2609              		.loc 1 916 0
 2610 0154 5F4B     		ldr	r3, .L183+4
 2611 0156 5B6A     		ldr	r3, [r3, #36]
 2612 0158 5D4A     		ldr	r2, .L183
 2613 015a B2F9B222 		ldrsh	r2, [r2, #690]
 2614 015e 1344     		add	r3, r3, r2
 2615 0160 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 65


 917:..\src/interruptions.c ****                         st_ref_p->pos += ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 2616              		.loc 1 917 0
 2617 0162 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2618 0164 002B     		cmp	r3, #0
 2619 0166 12D1     		bne	.L171
 918:..\src/interruptions.c ****                     }
 2620              		.loc 1 918 0
 2621 0168 BB68     		ldr	r3, [r7, #8]
 2622 016a 1A68     		ldr	r2, [r3]
 2623 016c 584B     		ldr	r3, .L183
 2624 016e B3F8B032 		ldrh	r3, [r3, #688]
 2625 0172 1946     		mov	r1, r3
 2626 0174 BB69     		ldr	r3, [r7, #24]
 2627 0176 03FB01F1 		mul	r1, r3, r1
 2628 017a 554B     		ldr	r3, .L183
 2629 017c B3F9B232 		ldrsh	r3, [r3, #690]
 2630 0180 C3F58063 		rsb	r3, r3, #1024
 2631 0184 91FBF3F3 		sdiv	r3, r1, r3
 2632 0188 1A44     		add	r2, r2, r3
 2633 018a BB68     		ldr	r3, [r7, #8]
 2634 018c 1A60     		str	r2, [r3]
 2635              	.L171:
 920:..\src/interruptions.c ****                         st_ref_p->pos -= ((int32) err_joy_2 * c_mem.JOY_spec.joystick_closure_speed
 2636              		.loc 1 920 0
 2637 018e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2638 0190 012B     		cmp	r3, #1
 2639 0192 40F0C780 		bne	.L181
 921:..\src/interruptions.c ****                     }
 2640              		.loc 1 921 0
 2641 0196 BB68     		ldr	r3, [r7, #8]
 2642 0198 1A68     		ldr	r2, [r3]
 2643 019a 4D4B     		ldr	r3, .L183
 2644 019c B3F8B032 		ldrh	r3, [r3, #688]
 2645 01a0 1946     		mov	r1, r3
 2646 01a2 BB69     		ldr	r3, [r7, #24]
 2647 01a4 03FB01F1 		mul	r1, r3, r1
 2648 01a8 494B     		ldr	r3, .L183
 2649 01aa B3F9B232 		ldrsh	r3, [r3, #690]
 2650 01ae C3F58063 		rsb	r3, r3, #1024
 2651 01b2 91FBF3F3 		sdiv	r3, r1, r3
 2652 01b6 D21A     		subs	r2, r2, r3
 2653 01b8 BB68     		ldr	r3, [r7, #8]
 2654 01ba 1A60     		str	r2, [r3]
 2655              	.LBE7:
 2656              		.loc 1 966 0
 2657 01bc B2E0     		b	.L181
 2658              	.L164:
 2659              	.LBB8:
 928:..\src/interruptions.c ****             int32 pos_sum = (g_meas[c_mem.motor[0].encoder_line].pos[0] + g_meas[c_mem.motor[0].enc
 2660              		.loc 1 928 0
 2661 01be 444B     		ldr	r3, .L183
 2662 01c0 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2663 01c4 1946     		mov	r1, r3
 2664 01c6 444A     		ldr	r2, .L183+8
 2665 01c8 3423     		movs	r3, #52
 2666 01ca 03FB01F3 		mul	r3, r3, r1
 2667 01ce 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 66


 2668 01d0 1A68     		ldr	r2, [r3]
 2669 01d2 3F4B     		ldr	r3, .L183
 2670 01d4 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2671 01d8 1846     		mov	r0, r3
 2672 01da 3F49     		ldr	r1, .L183+8
 2673 01dc 3423     		movs	r3, #52
 2674 01de 03FB00F3 		mul	r3, r3, r0
 2675 01e2 0B44     		add	r3, r3, r1
 2676 01e4 0433     		adds	r3, r3, #4
 2677 01e6 1B68     		ldr	r3, [r3]
 2678 01e8 D21A     		subs	r2, r2, r3
 2679 01ea 394B     		ldr	r3, .L183
 2680 01ec 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2681 01f0 1846     		mov	r0, r3
 2682 01f2 3749     		ldr	r1, .L183
 2683 01f4 0346     		mov	r3, r0
 2684 01f6 5B00     		lsls	r3, r3, #1
 2685 01f8 0344     		add	r3, r3, r0
 2686 01fa 1B01     		lsls	r3, r3, #4
 2687 01fc 0B44     		add	r3, r3, r1
 2688 01fe 03F29513 		addw	r3, r3, #405
 2689 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2690 0204 42FA03F3 		asr	r3, r2, r3
 2691 0208 7B61     		str	r3, [r7, #20]
 929:..\src/interruptions.c **** 
 2692              		.loc 1 929 0
 2693 020a 314B     		ldr	r3, .L183
 2694 020c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2695 0210 1946     		mov	r1, r3
 2696 0212 314A     		ldr	r2, .L183+8
 2697 0214 3423     		movs	r3, #52
 2698 0216 03FB01F3 		mul	r3, r3, r1
 2699 021a 1344     		add	r3, r3, r2
 2700 021c 1A68     		ldr	r2, [r3]
 2701 021e 2C4B     		ldr	r3, .L183
 2702 0220 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2703 0224 1846     		mov	r0, r3
 2704 0226 2C49     		ldr	r1, .L183+8
 2705 0228 3423     		movs	r3, #52
 2706 022a 03FB00F3 		mul	r3, r3, r0
 2707 022e 0B44     		add	r3, r3, r1
 2708 0230 0433     		adds	r3, r3, #4
 2709 0232 1B68     		ldr	r3, [r3]
 2710 0234 1A44     		add	r2, r2, r3
 2711 0236 264B     		ldr	r3, .L183
 2712 0238 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 2713 023c 1846     		mov	r0, r3
 2714 023e 2449     		ldr	r1, .L183
 2715 0240 0346     		mov	r3, r0
 2716 0242 5B00     		lsls	r3, r3, #1
 2717 0244 0344     		add	r3, r3, r0
 2718 0246 1B01     		lsls	r3, r3, #4
 2719 0248 0B44     		add	r3, r3, r1
 2720 024a 03F29513 		addw	r3, r3, #405
 2721 024e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2722 0250 42FA03F3 		asr	r3, r2, r3
 2723 0254 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 67


 931:..\src/interruptions.c ****                 if(SIGN(pos_diff) == 1) {
 2724              		.loc 1 931 0
 2725 0256 7B69     		ldr	r3, [r7, #20]
 2726 0258 B3F5FA7F 		cmp	r3, #500
 2727 025c 03DC     		bgt	.L172
 931:..\src/interruptions.c ****                 if(SIGN(pos_diff) == 1) {
 2728              		.loc 1 931 0 is_stmt 0 discriminator 1
 2729 025e 7B69     		ldr	r3, [r7, #20]
 2730 0260 13F5FA7F 		cmn	r3, #500
 2731 0264 3ADA     		bge	.L173
 2732              	.L172:
 932:..\src/interruptions.c ****                     if (motor_idx == 1){
 2733              		.loc 1 932 0 is_stmt 1
 2734 0266 7B69     		ldr	r3, [r7, #20]
 2735 0268 002B     		cmp	r3, #0
 2736 026a 18DB     		blt	.L174
 933:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 2737              		.loc 1 933 0
 2738 026c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2739 026e 012B     		cmp	r3, #1
 2740 0270 07D1     		bne	.L175
 934:..\src/interruptions.c ****                     }
 2741              		.loc 1 934 0
 2742 0272 BB68     		ldr	r3, [r7, #8]
 2743 0274 1B68     		ldr	r3, [r3]
 2744 0276 164A     		ldr	r2, .L183
 2745 0278 B2F8B022 		ldrh	r2, [r2, #688]
 2746 027c 1A44     		add	r2, r2, r3
 2747 027e BB68     		ldr	r3, [r7, #8]
 2748 0280 1A60     		str	r2, [r3]
 2749              	.L175:
 936:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 2750              		.loc 1 936 0
 2751 0282 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2752 0284 002B     		cmp	r3, #0
 2753 0286 4CD1     		bne	.L182
 937:..\src/interruptions.c ****                     }                    
 2754              		.loc 1 937 0
 2755 0288 BB68     		ldr	r3, [r7, #8]
 2756 028a 1B68     		ldr	r3, [r3]
 2757 028c 104A     		ldr	r2, .L183
 2758 028e B2F8B022 		ldrh	r2, [r2, #688]
 2759 0292 5208     		lsrs	r2, r2, #1
 2760 0294 92B2     		uxth	r2, r2
 2761 0296 9A1A     		subs	r2, r3, r2
 2762 0298 BB68     		ldr	r3, [r7, #8]
 2763 029a 1A60     		str	r2, [r3]
 932:..\src/interruptions.c ****                     if (motor_idx == 1){
 2764              		.loc 1 932 0
 2765 029c 41E0     		b	.L182
 2766              	.L174:
 941:..\src/interruptions.c ****                         st_ref_p->pos += c_mem.JOY_spec.joystick_closure_speed;
 2767              		.loc 1 941 0
 2768 029e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2769 02a0 002B     		cmp	r3, #0
 2770 02a2 07D1     		bne	.L178
 942:..\src/interruptions.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 68


 2771              		.loc 1 942 0
 2772 02a4 BB68     		ldr	r3, [r7, #8]
 2773 02a6 1B68     		ldr	r3, [r3]
 2774 02a8 094A     		ldr	r2, .L183
 2775 02aa B2F8B022 		ldrh	r2, [r2, #688]
 2776 02ae 1A44     		add	r2, r2, r3
 2777 02b0 BB68     		ldr	r3, [r7, #8]
 2778 02b2 1A60     		str	r2, [r3]
 2779              	.L178:
 944:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed / 2;
 2780              		.loc 1 944 0
 2781 02b4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2782 02b6 012B     		cmp	r3, #1
 2783 02b8 33D1     		bne	.L182
 945:..\src/interruptions.c ****                     }
 2784              		.loc 1 945 0
 2785 02ba BB68     		ldr	r3, [r7, #8]
 2786 02bc 1B68     		ldr	r3, [r3]
 2787 02be 044A     		ldr	r2, .L183
 2788 02c0 B2F8B022 		ldrh	r2, [r2, #688]
 2789 02c4 5208     		lsrs	r2, r2, #1
 2790 02c6 92B2     		uxth	r2, r2
 2791 02c8 9A1A     		subs	r2, r3, r2
 2792 02ca BB68     		ldr	r3, [r7, #8]
 2793 02cc 1A60     		str	r2, [r3]
 932:..\src/interruptions.c ****                     if (motor_idx == 1){
 2794              		.loc 1 932 0
 2795 02ce 28E0     		b	.L182
 2796              	.L184:
 2797              		.align	2
 2798              	.L183:
 2799 02d0 00000000 		.word	c_mem
 2800 02d4 00000000 		.word	g_adc_meas
 2801 02d8 00000000 		.word	g_meas
 2802              	.L173:
 951:..\src/interruptions.c ****                     if (motor_idx == 0){
 2803              		.loc 1 951 0
 2804 02dc 3B69     		ldr	r3, [r7, #16]
 2805 02de 002B     		cmp	r3, #0
 2806 02e0 20DD     		ble	.L181
 952:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
 2807              		.loc 1 952 0
 2808 02e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2809 02e4 002B     		cmp	r3, #0
 2810 02e6 08D1     		bne	.L179
 953:..\src/interruptions.c ****                     }
 2811              		.loc 1 953 0
 2812 02e8 BB68     		ldr	r3, [r7, #8]
 2813 02ea 1A68     		ldr	r2, [r3]
 2814 02ec 104B     		ldr	r3, .L185
 2815 02ee B3F8B032 		ldrh	r3, [r3, #688]
 2816 02f2 5B00     		lsls	r3, r3, #1
 2817 02f4 D21A     		subs	r2, r2, r3
 2818 02f6 BB68     		ldr	r3, [r7, #8]
 2819 02f8 1A60     		str	r2, [r3]
 2820              	.L179:
 955:..\src/interruptions.c ****                         st_ref_p->pos -= c_mem.JOY_spec.joystick_closure_speed * 2;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 69


 2821              		.loc 1 955 0
 2822 02fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2823 02fc 012B     		cmp	r3, #1
 2824 02fe 08D1     		bne	.L180
 956:..\src/interruptions.c ****                     }
 2825              		.loc 1 956 0
 2826 0300 BB68     		ldr	r3, [r7, #8]
 2827 0302 1A68     		ldr	r2, [r3]
 2828 0304 0A4B     		ldr	r3, .L185
 2829 0306 B3F8B032 		ldrh	r3, [r3, #688]
 2830 030a 5B00     		lsls	r3, r3, #1
 2831 030c D21A     		subs	r2, r2, r3
 2832 030e BB68     		ldr	r3, [r7, #8]
 2833 0310 1A60     		str	r2, [r3]
 2834              	.L180:
 959:..\src/interruptions.c ****                         st_ref_p->pos = 0;
 2835              		.loc 1 959 0
 2836 0312 BB68     		ldr	r3, [r7, #8]
 2837 0314 1B68     		ldr	r3, [r3]
 2838 0316 002B     		cmp	r3, #0
 2839 0318 04DA     		bge	.L181
 960:..\src/interruptions.c ****                     }
 2840              		.loc 1 960 0
 2841 031a BB68     		ldr	r3, [r7, #8]
 2842 031c 0022     		movs	r2, #0
 2843 031e 1A60     		str	r2, [r3]
 2844              	.LBE8:
 2845              		.loc 1 966 0
 2846 0320 00E0     		b	.L181
 2847              	.L182:
 2848              	.LBB9:
 932:..\src/interruptions.c ****                     if (motor_idx == 1){
 2849              		.loc 1 932 0
 2850 0322 00BF     		nop
 2851              	.L181:
 2852              	.LBE9:
 2853              		.loc 1 966 0
 2854 0324 00BF     		nop
 2855 0326 2437     		adds	r7, r7, #36
 2856              		.cfi_def_cfa_offset 4
 2857 0328 BD46     		mov	sp, r7
 2858              		.cfi_def_cfa_register 13
 2859              		@ sp needed
 2860 032a 80BC     		pop	{r7}
 2861              		.cfi_restore 7
 2862              		.cfi_def_cfa_offset 0
 2863 032c 7047     		bx	lr
 2864              	.L186:
 2865 032e 00BF     		.align	2
 2866              	.L185:
 2867 0330 00000000 		.word	c_mem
 2868              		.cfi_endproc
 2869              	.LFE69:
 2870              		.size	compute_SoftHand_2_motors_joystick_reference, .-compute_SoftHand_2_motors_joystick_reference
 2871              		.section	.text.compute_SoftHand_2_motors_emg_reference,"ax",%progbits
 2872              		.align	2
 2873              		.global	compute_SoftHand_2_motors_emg_reference
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 70


 2874              		.thumb
 2875              		.thumb_func
 2876              		.type	compute_SoftHand_2_motors_emg_reference, %function
 2877              	compute_SoftHand_2_motors_emg_reference:
 2878              	.LFB70:
 967:..\src/interruptions.c **** 
 968:..\src/interruptions.c **** 
 969:..\src/interruptions.c **** //==============================================================================
 970:..\src/interruptions.c **** //                                       COMPUTE SOFTHAND 2 MOTORS EMG REFERENCE
 971:..\src/interruptions.c **** //==============================================================================
 972:..\src/interruptions.c **** void compute_SoftHand_2_motors_emg_reference(uint8 motor_idx, struct st_ref* st_ref_p, struct st_re
 973:..\src/interruptions.c ****     int32 err_emg_1, int32 err_emg_2) {
 2879              		.loc 1 973 0
 2880              		.cfi_startproc
 2881              		@ args = 4, pretend = 0, frame = 16
 2882              		@ frame_needed = 1, uses_anonymous_args = 0
 2883 0000 80B5     		push	{r7, lr}
 2884              		.cfi_def_cfa_offset 8
 2885              		.cfi_offset 7, -8
 2886              		.cfi_offset 14, -4
 2887 0002 84B0     		sub	sp, sp, #16
 2888              		.cfi_def_cfa_offset 24
 2889 0004 00AF     		add	r7, sp, #0
 2890              		.cfi_def_cfa_register 7
 2891 0006 B960     		str	r1, [r7, #8]
 2892 0008 7A60     		str	r2, [r7, #4]
 2893 000a 3B60     		str	r3, [r7]
 2894 000c 0346     		mov	r3, r0
 2895 000e FB73     		strb	r3, [r7, #15]
 974:..\src/interruptions.c ****     
 975:..\src/interruptions.c ****     //Compute reference using a FSM for choosing the right sinergy to activate (call this routine o
 976:..\src/interruptions.c ****     static uint8 fsm_state;     
 977:..\src/interruptions.c ****     if (motor_idx == 0){        //update the fsm only at motor 0 compute reference call and hold th
 2896              		.loc 1 977 0
 2897 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2898 0012 002B     		cmp	r3, #0
 2899 0014 05D1     		bne	.L188
 978:..\src/interruptions.c ****         fsm_state = emg_activation_velocity_fsm();
 2900              		.loc 1 978 0
 2901 0016 FFF7FEFF 		bl	emg_activation_velocity_fsm
 2902 001a 0346     		mov	r3, r0
 2903 001c 1A46     		mov	r2, r3
 2904 001e 614B     		ldr	r3, .L203
 2905 0020 1A70     		strb	r2, [r3]
 2906              	.L188:
 979:..\src/interruptions.c ****     }
 980:..\src/interruptions.c ****        
 981:..\src/interruptions.c ****     switch (fsm_state){
 2907              		.loc 1 981 0
 2908 0022 604B     		ldr	r3, .L203
 2909 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2910 0026 032B     		cmp	r3, #3
 2911 0028 00F2B780 		bhi	.L200
 2912 002c 01A2     		adr	r2, .L191
 2913 002e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2914 0032 00BF     		.p2align 2
 2915              	.L191:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 71


 2916 0034 45000000 		.word	.L190+1
 2917 0038 45000000 		.word	.L190+1
 2918 003c BF000000 		.word	.L192+1
 2919 0040 4F000000 		.word	.L193+1
 2920              		.p2align 1
 2921              	.L190:
 982:..\src/interruptions.c ****         case RELAX_STATE: case TIMER_STATE:
 983:..\src/interruptions.c ****              
 984:..\src/interruptions.c ****             st_ref_p->pos = st_refOld_p->pos;
 2922              		.loc 1 984 0
 2923 0044 7B68     		ldr	r3, [r7, #4]
 2924 0046 1A68     		ldr	r2, [r3]
 2925 0048 BB68     		ldr	r3, [r7, #8]
 2926 004a 1A60     		str	r2, [r3]
 985:..\src/interruptions.c ****     
 986:..\src/interruptions.c ****             break;
 2927              		.loc 1 986 0
 2928 004c A5E0     		b	.L189
 2929              	.L193:
 987:..\src/interruptions.c ****         
 988:..\src/interruptions.c ****         case MOVE_SLOW_ACT: // First sinergy movement (related to default slow activation)
 989:..\src/interruptions.c **** 
 990:..\src/interruptions.c ****             if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {   //both motors wind the wire around the 
 2930              		.loc 1 990 0
 2931 004e 3B68     		ldr	r3, [r7]
 2932 0050 002B     		cmp	r3, #0
 2933 0052 17DD     		ble	.L194
 2934              		.loc 1 990 0 is_stmt 0 discriminator 1
 2935 0054 3A68     		ldr	r2, [r7]
 2936 0056 BB69     		ldr	r3, [r7, #24]
 2937 0058 9A42     		cmp	r2, r3
 2938 005a 13DD     		ble	.L194
 991:..\src/interruptions.c ****                st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / (1024
 2939              		.loc 1 991 0 is_stmt 1
 2940 005c 7B68     		ldr	r3, [r7, #4]
 2941 005e 1A68     		ldr	r2, [r3]
 2942 0060 514B     		ldr	r3, .L203+4
 2943 0062 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 2944 0066 1946     		mov	r1, r3
 2945 0068 3B68     		ldr	r3, [r7]
 2946 006a 03FB01F3 		mul	r3, r3, r1
 2947 006e 9900     		lsls	r1, r3, #2
 2948 0070 4E4B     		ldr	r3, .L203+8
 2949 0072 B3F8F031 		ldrh	r3, [r3, #496]
 2950 0076 C3F58063 		rsb	r3, r3, #1024
 2951 007a 91FBF3F3 		sdiv	r3, r1, r3
 2952 007e 1A44     		add	r2, r2, r3
 2953 0080 BB68     		ldr	r3, [r7, #8]
 2954 0082 1A60     		str	r2, [r3]
 2955              	.L194:
 992:..\src/interruptions.c ****             }
 993:..\src/interruptions.c ****             if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {   //both motors unroll the wire around th
 2956              		.loc 1 993 0
 2957 0084 BB69     		ldr	r3, [r7, #24]
 2958 0086 002B     		cmp	r3, #0
 2959 0088 40F38480 		ble	.L201
 2960              		.loc 1 993 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 72


 2961 008c BA69     		ldr	r2, [r7, #24]
 2962 008e 3B68     		ldr	r3, [r7]
 2963 0090 9A42     		cmp	r2, r3
 2964 0092 7FDD     		ble	.L201
 994:..\src/interruptions.c ****                st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / (1024
 2965              		.loc 1 994 0 is_stmt 1
 2966 0094 7B68     		ldr	r3, [r7, #4]
 2967 0096 1A68     		ldr	r2, [r3]
 2968 0098 434B     		ldr	r3, .L203+4
 2969 009a 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 2970 009e 1946     		mov	r1, r3
 2971 00a0 BB69     		ldr	r3, [r7, #24]
 2972 00a2 03FB01F3 		mul	r3, r3, r1
 2973 00a6 9900     		lsls	r1, r3, #2
 2974 00a8 404B     		ldr	r3, .L203+8
 2975 00aa B3F8F231 		ldrh	r3, [r3, #498]
 2976 00ae C3F58063 		rsb	r3, r3, #1024
 2977 00b2 91FBF3F3 		sdiv	r3, r1, r3
 2978 00b6 D21A     		subs	r2, r2, r3
 2979 00b8 BB68     		ldr	r3, [r7, #8]
 2980 00ba 1A60     		str	r2, [r3]
 995:..\src/interruptions.c ****             }
 996:..\src/interruptions.c ****             
 997:..\src/interruptions.c ****             break;
 2981              		.loc 1 997 0
 2982 00bc 6AE0     		b	.L201
 2983              	.L192:
 998:..\src/interruptions.c ****             
 999:..\src/interruptions.c ****         case MOVE_FAST_ACT: // Second sinergy movement (related to default fast activation)
1000:..\src/interruptions.c ****             
1001:..\src/interruptions.c ****             if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {   //(Pinch) The wire is winded around the
 2984              		.loc 1 1001 0
 2985 00be 3B68     		ldr	r3, [r7]
 2986 00c0 002B     		cmp	r3, #0
 2987 00c2 31DD     		ble	.L196
 2988              		.loc 1 1001 0 is_stmt 0 discriminator 1
 2989 00c4 3A68     		ldr	r2, [r7]
 2990 00c6 BB69     		ldr	r3, [r7, #24]
 2991 00c8 9A42     		cmp	r2, r3
 2992 00ca 2DDD     		ble	.L196
1002:..\src/interruptions.c ****                 if (motor_idx == 0){
 2993              		.loc 1 1002 0 is_stmt 1
 2994 00cc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2995 00ce 002B     		cmp	r3, #0
 2996 00d0 13D1     		bne	.L197
1003:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos + (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / 
 2997              		.loc 1 1003 0
 2998 00d2 7B68     		ldr	r3, [r7, #4]
 2999 00d4 1A68     		ldr	r2, [r3]
 3000 00d6 344B     		ldr	r3, .L203+4
 3001 00d8 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 3002 00dc 1946     		mov	r1, r3
 3003 00de 3B68     		ldr	r3, [r7]
 3004 00e0 03FB01F3 		mul	r3, r3, r1
 3005 00e4 9900     		lsls	r1, r3, #2
 3006 00e6 314B     		ldr	r3, .L203+8
 3007 00e8 B3F8F031 		ldrh	r3, [r3, #496]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 73


 3008 00ec C3F58063 		rsb	r3, r3, #1024
 3009 00f0 91FBF3F3 		sdiv	r3, r1, r3
 3010 00f4 1A44     		add	r2, r2, r3
 3011 00f6 BB68     		ldr	r3, [r7, #8]
 3012 00f8 1A60     		str	r2, [r3]
 3013              	.L197:
1004:..\src/interruptions.c ****                 }
1005:..\src/interruptions.c ****                 if (motor_idx == 1){
 3014              		.loc 1 1005 0
 3015 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3016 00fc 012B     		cmp	r3, #1
 3017 00fe 13D1     		bne	.L196
1006:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos - (err_emg_1 * g_mem.emg.emg_speed[0] << 2) / 
 3018              		.loc 1 1006 0
 3019 0100 7B68     		ldr	r3, [r7, #4]
 3020 0102 1A68     		ldr	r2, [r3]
 3021 0104 284B     		ldr	r3, .L203+4
 3022 0106 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 3023 010a 1946     		mov	r1, r3
 3024 010c 3B68     		ldr	r3, [r7]
 3025 010e 03FB01F3 		mul	r3, r3, r1
 3026 0112 9900     		lsls	r1, r3, #2
 3027 0114 254B     		ldr	r3, .L203+8
 3028 0116 B3F8F031 		ldrh	r3, [r3, #496]
 3029 011a C3F58063 		rsb	r3, r3, #1024
 3030 011e 91FBF3F3 		sdiv	r3, r1, r3
 3031 0122 D21A     		subs	r2, r2, r3
 3032 0124 BB68     		ldr	r3, [r7, #8]
 3033 0126 1A60     		str	r2, [r3]
 3034              	.L196:
1007:..\src/interruptions.c ****                 }   
1008:..\src/interruptions.c ****             }
1009:..\src/interruptions.c ****             if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {   //(Index point) The wire is unwinded fr
 3035              		.loc 1 1009 0
 3036 0128 BB69     		ldr	r3, [r7, #24]
 3037 012a 002B     		cmp	r3, #0
 3038 012c 34DD     		ble	.L202
 3039              		.loc 1 1009 0 is_stmt 0 discriminator 1
 3040 012e BA69     		ldr	r2, [r7, #24]
 3041 0130 3B68     		ldr	r3, [r7]
 3042 0132 9A42     		cmp	r2, r3
 3043 0134 30DD     		ble	.L202
1010:..\src/interruptions.c ****                 if (motor_idx == 0){
 3044              		.loc 1 1010 0 is_stmt 1
 3045 0136 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3046 0138 002B     		cmp	r3, #0
 3047 013a 13D1     		bne	.L199
1011:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos - (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / 
 3048              		.loc 1 1011 0
 3049 013c 7B68     		ldr	r3, [r7, #4]
 3050 013e 1A68     		ldr	r2, [r3]
 3051 0140 194B     		ldr	r3, .L203+4
 3052 0142 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 3053 0146 1946     		mov	r1, r3
 3054 0148 BB69     		ldr	r3, [r7, #24]
 3055 014a 03FB01F3 		mul	r3, r3, r1
 3056 014e 9900     		lsls	r1, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 74


 3057 0150 164B     		ldr	r3, .L203+8
 3058 0152 B3F8F231 		ldrh	r3, [r3, #498]
 3059 0156 C3F58063 		rsb	r3, r3, #1024
 3060 015a 91FBF3F3 		sdiv	r3, r1, r3
 3061 015e D21A     		subs	r2, r2, r3
 3062 0160 BB68     		ldr	r3, [r7, #8]
 3063 0162 1A60     		str	r2, [r3]
 3064              	.L199:
1012:..\src/interruptions.c ****                 }
1013:..\src/interruptions.c ****                 if (motor_idx == 1){
 3065              		.loc 1 1013 0
 3066 0164 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3067 0166 012B     		cmp	r3, #1
 3068 0168 16D1     		bne	.L202
1014:..\src/interruptions.c ****                     st_ref_p->pos = st_refOld_p->pos + (err_emg_2 * g_mem.emg.emg_speed[1] << 2) / 
 3069              		.loc 1 1014 0
 3070 016a 7B68     		ldr	r3, [r7, #4]
 3071 016c 1A68     		ldr	r2, [r3]
 3072 016e 0E4B     		ldr	r3, .L203+4
 3073 0170 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 3074 0174 1946     		mov	r1, r3
 3075 0176 BB69     		ldr	r3, [r7, #24]
 3076 0178 03FB01F3 		mul	r3, r3, r1
 3077 017c 9900     		lsls	r1, r3, #2
 3078 017e 0B4B     		ldr	r3, .L203+8
 3079 0180 B3F8F231 		ldrh	r3, [r3, #498]
 3080 0184 C3F58063 		rsb	r3, r3, #1024
 3081 0188 91FBF3F3 		sdiv	r3, r1, r3
 3082 018c 1A44     		add	r2, r2, r3
 3083 018e BB68     		ldr	r3, [r7, #8]
 3084 0190 1A60     		str	r2, [r3]
1015:..\src/interruptions.c ****                 }
1016:..\src/interruptions.c ****             }
1017:..\src/interruptions.c ****             
1018:..\src/interruptions.c ****             break;
 3085              		.loc 1 1018 0
 3086 0192 01E0     		b	.L202
 3087              	.L201:
 997:..\src/interruptions.c ****             
 3088              		.loc 1 997 0
 3089 0194 00BF     		nop
 3090 0196 00E0     		b	.L200
 3091              	.L202:
 3092              		.loc 1 1018 0
 3093 0198 00BF     		nop
 3094              	.L189:
 3095              	.L200:
1019:..\src/interruptions.c ****     }
1020:..\src/interruptions.c ****  
1021:..\src/interruptions.c **** }
 3096              		.loc 1 1021 0
 3097 019a 00BF     		nop
 3098 019c 1037     		adds	r7, r7, #16
 3099              		.cfi_def_cfa_offset 8
 3100 019e BD46     		mov	sp, r7
 3101              		.cfi_def_cfa_register 13
 3102              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 75


 3103 01a0 80BD     		pop	{r7, pc}
 3104              	.L204:
 3105 01a2 00BF     		.align	2
 3106              	.L203:
 3107 01a4 8E000000 		.word	fsm_state.10546
 3108 01a8 00000000 		.word	g_mem
 3109 01ac 00000000 		.word	c_mem
 3110              		.cfi_endproc
 3111              	.LFE70:
 3112              		.size	compute_SoftHand_2_motors_emg_reference, .-compute_SoftHand_2_motors_emg_reference
 3113              		.section	.text.motor_control_SH,"ax",%progbits
 3114              		.align	2
 3115              		.global	motor_control_SH
 3116              		.thumb
 3117              		.thumb_func
 3118              		.type	motor_control_SH, %function
 3119              	motor_control_SH:
 3120              	.LFB71:
1022:..\src/interruptions.c **** 
1023:..\src/interruptions.c **** //==============================================================================
1024:..\src/interruptions.c **** //                                                        MOTOR CONTROL SOFTHAND
1025:..\src/interruptions.c **** //==============================================================================
1026:..\src/interruptions.c **** void motor_control_SH() {
 3121              		.loc 1 1026 0
 3122              		.cfi_startproc
 3123              		@ args = 0, pretend = 0, frame = 80
 3124              		@ frame_needed = 1, uses_anonymous_args = 0
 3125 0000 80B5     		push	{r7, lr}
 3126              		.cfi_def_cfa_offset 8
 3127              		.cfi_offset 7, -8
 3128              		.cfi_offset 14, -4
 3129 0002 94B0     		sub	sp, sp, #80
 3130              		.cfi_def_cfa_offset 88
 3131 0004 00AF     		add	r7, sp, #0
 3132              		.cfi_def_cfa_register 7
1027:..\src/interruptions.c **** 
1028:..\src/interruptions.c ****     int32 CYDATA pwm_input = 0;
 3133              		.loc 1 1028 0
 3134 0006 0023     		movs	r3, #0
 3135 0008 FB64     		str	r3, [r7, #76]
1029:..\src/interruptions.c ****     int32 CYDATA pos_error;         // position error
1030:..\src/interruptions.c ****     int32 CYDATA curr_error;        // current error
1031:..\src/interruptions.c ****     int32 CYDATA i_ref;             // current reference
1032:..\src/interruptions.c ****  
1033:..\src/interruptions.c ****     uint8 MOTOR_IDX = 0;
 3136              		.loc 1 1033 0
 3137 000a 0023     		movs	r3, #0
 3138 000c 87F84730 		strb	r3, [r7, #71]
1034:..\src/interruptions.c ****     
1035:..\src/interruptions.c ****     struct st_motor* SH_MOT = &c_mem.motor[MOTOR_IDX];      // SoftHand default motor
 3139              		.loc 1 1035 0
 3140 0010 97F84720 		ldrb	r2, [r7, #71]	@ zero_extendqisi2
 3141 0014 1346     		mov	r3, r2
 3142 0016 DB00     		lsls	r3, r3, #3
 3143 0018 9B1A     		subs	r3, r3, r2
 3144 001a 1B01     		lsls	r3, r3, #4
 3145 001c B033     		adds	r3, r3, #176
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 76


 3146 001e 9D4A     		ldr	r2, .L266
 3147 0020 1344     		add	r3, r3, r2
 3148 0022 3B64     		str	r3, [r7, #64]
1036:..\src/interruptions.c ****     uint8 SH_ENC_L = SH_MOT->encoder_line;          // Associated encoder line
 3149              		.loc 1 1036 0
 3150 0024 3B6C     		ldr	r3, [r7, #64]
 3151 0026 93F86030 		ldrb	r3, [r3, #96]
 3152 002a 87F83F30 		strb	r3, [r7, #63]
1037:..\src/interruptions.c ****     
1038:..\src/interruptions.c ****     int32 CYDATA k_p = SH_MOT->k_p;  
 3153              		.loc 1 1038 0
 3154 002e 3B6C     		ldr	r3, [r7, #64]
 3155 0030 1B68     		ldr	r3, [r3]
 3156 0032 BB63     		str	r3, [r7, #56]
1039:..\src/interruptions.c ****     int32 CYDATA k_i = SH_MOT->k_i; 
 3157              		.loc 1 1039 0
 3158 0034 3B6C     		ldr	r3, [r7, #64]
 3159 0036 5B68     		ldr	r3, [r3, #4]
 3160 0038 7B63     		str	r3, [r7, #52]
1040:..\src/interruptions.c ****     int32 CYDATA k_d = SH_MOT->k_d; 
 3161              		.loc 1 1040 0
 3162 003a 3B6C     		ldr	r3, [r7, #64]
 3163 003c 9B68     		ldr	r3, [r3, #8]
 3164 003e 3B63     		str	r3, [r7, #48]
1041:..\src/interruptions.c **** 
1042:..\src/interruptions.c ****     int32 CYDATA k_p_c = SH_MOT->k_p_c;  
 3165              		.loc 1 1042 0
 3166 0040 3B6C     		ldr	r3, [r7, #64]
 3167 0042 DB68     		ldr	r3, [r3, #12]
 3168 0044 FB62     		str	r3, [r7, #44]
1043:..\src/interruptions.c ****     int32 CYDATA k_i_c = SH_MOT->k_i_c; 
 3169              		.loc 1 1043 0
 3170 0046 3B6C     		ldr	r3, [r7, #64]
 3171 0048 1B69     		ldr	r3, [r3, #16]
 3172 004a BB62     		str	r3, [r7, #40]
1044:..\src/interruptions.c ****     int32 CYDATA k_d_c = SH_MOT->k_d_c;   
 3173              		.loc 1 1044 0
 3174 004c 3B6C     		ldr	r3, [r7, #64]
 3175 004e 5B69     		ldr	r3, [r3, #20]
 3176 0050 7B62     		str	r3, [r7, #36]
1045:..\src/interruptions.c **** 
1046:..\src/interruptions.c ****     int32 CYDATA k_p_dl = SH_MOT->k_p_dl;  
 3177              		.loc 1 1046 0
 3178 0052 3B6C     		ldr	r3, [r7, #64]
 3179 0054 9B69     		ldr	r3, [r3, #24]
 3180 0056 3B62     		str	r3, [r7, #32]
1047:..\src/interruptions.c ****     int32 CYDATA k_i_dl = SH_MOT->k_i_dl; 
 3181              		.loc 1 1047 0
 3182 0058 3B6C     		ldr	r3, [r7, #64]
 3183 005a DB69     		ldr	r3, [r3, #28]
 3184 005c FB61     		str	r3, [r7, #28]
1048:..\src/interruptions.c ****     int32 CYDATA k_d_dl = SH_MOT->k_d_dl;
 3185              		.loc 1 1048 0
 3186 005e 3B6C     		ldr	r3, [r7, #64]
 3187 0060 1B6A     		ldr	r3, [r3, #32]
 3188 0062 BB61     		str	r3, [r7, #24]
1049:..\src/interruptions.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 77


1050:..\src/interruptions.c ****     int32 CYDATA k_p_c_dl = SH_MOT->k_p_c_dl;  
 3189              		.loc 1 1050 0
 3190 0064 3B6C     		ldr	r3, [r7, #64]
 3191 0066 5B6A     		ldr	r3, [r3, #36]
 3192 0068 7B61     		str	r3, [r7, #20]
1051:..\src/interruptions.c ****     int32 CYDATA k_i_c_dl = SH_MOT->k_i_c_dl; 
 3193              		.loc 1 1051 0
 3194 006a 3B6C     		ldr	r3, [r7, #64]
 3195 006c 9B6A     		ldr	r3, [r3, #40]
 3196 006e 3B61     		str	r3, [r7, #16]
1052:..\src/interruptions.c ****     int32 CYDATA k_d_c_dl = SH_MOT->k_d_c_dl;   
 3197              		.loc 1 1052 0
 3198 0070 3B6C     		ldr	r3, [r7, #64]
 3199 0072 DB6A     		ldr	r3, [r3, #44]
 3200 0074 FB60     		str	r3, [r7, #12]
1053:..\src/interruptions.c **** 
1054:..\src/interruptions.c ****     // Static Variables
1055:..\src/interruptions.c **** 
1056:..\src/interruptions.c ****     static int32 pos_error_sum;     // position error sum for integral
1057:..\src/interruptions.c ****     static int32 curr_error_sum;    // current error sum for integral
1058:..\src/interruptions.c ****     
1059:..\src/interruptions.c ****     static int32 prev_pos_err;      // previous position error for deriv. control
1060:..\src/interruptions.c ****     static int32 prev_curr_err;     // previous current error for deriv. control
1061:..\src/interruptions.c ****     static int32 prev_pwm;
1062:..\src/interruptions.c **** 
1063:..\src/interruptions.c ****     static CYBIT motor_dir = FALSE;
1064:..\src/interruptions.c ****     static uint32 position_counter = 0;
1065:..\src/interruptions.c ****   
1066:..\src/interruptions.c ****     // ======================= UPDATE MOTOR REFERENCE ==========================            
1067:..\src/interruptions.c ****     compute_reference(MOTOR_IDX, &g_ref[MOTOR_IDX], &g_refOld[MOTOR_IDX]);
 3201              		.loc 1 1067 0
 3202 0076 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3203 007a 1B01     		lsls	r3, r3, #4
 3204 007c 864A     		ldr	r2, .L266+4
 3205 007e 9918     		adds	r1, r3, r2
 3206 0080 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3207 0084 1B01     		lsls	r3, r3, #4
 3208 0086 854A     		ldr	r2, .L266+8
 3209 0088 1A44     		add	r2, r2, r3
 3210 008a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3211 008e 1846     		mov	r0, r3
 3212 0090 FFF7FEFF 		bl	compute_reference
1068:..\src/interruptions.c ****      
1069:..\src/interruptions.c ****     switch(SH_MOT->control_mode) {
 3213              		.loc 1 1069 0
 3214 0094 3B6C     		ldr	r3, [r7, #64]
 3215 0096 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 3216 009a 032B     		cmp	r3, #3
 3217 009c 00F2F781 		bhi	.L206
 3218 00a0 01A2     		adr	r2, .L208
 3219 00a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3220 00a6 00BF     		.p2align 2
 3221              	.L208:
 3222 00a8 55020000 		.word	.L207+1
 3223 00ac 49040000 		.word	.L209+1
 3224 00b0 3B030000 		.word	.L210+1
 3225 00b4 B9000000 		.word	.L211+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 78


 3226              		.p2align 1
 3227              	.L211:
1070:..\src/interruptions.c ****         // ======================= CURRENT AND POSITION CONTROL =======================
1071:..\src/interruptions.c ****         case CURR_AND_POS_CONTROL:
1072:..\src/interruptions.c ****             pos_error = g_ref[MOTOR_IDX].pos - g_meas[SH_ENC_L].pos[0];
 3228              		.loc 1 1072 0
 3229 00b8 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3230 00bc 764A     		ldr	r2, .L266+4
 3231 00be 1B01     		lsls	r3, r3, #4
 3232 00c0 1344     		add	r3, r3, r2
 3233 00c2 1A68     		ldr	r2, [r3]
 3234 00c4 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3235 00c8 7549     		ldr	r1, .L266+12
 3236 00ca 3420     		movs	r0, #52
 3237 00cc 00FB03F3 		mul	r3, r0, r3
 3238 00d0 0B44     		add	r3, r3, r1
 3239 00d2 1B68     		ldr	r3, [r3]
 3240 00d4 D31A     		subs	r3, r2, r3
 3241 00d6 BB60     		str	r3, [r7, #8]
1073:..\src/interruptions.c **** 
1074:..\src/interruptions.c ****             pos_error_sum += pos_error;
 3242              		.loc 1 1074 0
 3243 00d8 724B     		ldr	r3, .L266+16
 3244 00da 1A68     		ldr	r2, [r3]
 3245 00dc BB68     		ldr	r3, [r7, #8]
 3246 00de 1344     		add	r3, r3, r2
 3247 00e0 704A     		ldr	r2, .L266+16
 3248 00e2 1360     		str	r3, [r2]
1075:..\src/interruptions.c **** 
1076:..\src/interruptions.c ****             // error_sum saturation
1077:..\src/interruptions.c ****             if (pos_error_sum > POS_INTEGRAL_SAT_LIMIT)
 3249              		.loc 1 1077 0
 3250 00e4 6F4B     		ldr	r3, .L266+16
 3251 00e6 1B68     		ldr	r3, [r3]
 3252 00e8 6F4A     		ldr	r2, .L266+20
 3253 00ea 9342     		cmp	r3, r2
 3254 00ec 03DD     		ble	.L212
1078:..\src/interruptions.c ****                 pos_error_sum = POS_INTEGRAL_SAT_LIMIT;
 3255              		.loc 1 1078 0
 3256 00ee 6D4B     		ldr	r3, .L266+16
 3257 00f0 6D4A     		ldr	r2, .L266+20
 3258 00f2 1A60     		str	r2, [r3]
 3259 00f4 07E0     		b	.L213
 3260              	.L212:
1079:..\src/interruptions.c ****             else {
1080:..\src/interruptions.c ****                 if (pos_error_sum < -POS_INTEGRAL_SAT_LIMIT) 
 3261              		.loc 1 1080 0
 3262 00f6 6B4B     		ldr	r3, .L266+16
 3263 00f8 1B68     		ldr	r3, [r3]
 3264 00fa 6C4A     		ldr	r2, .L266+24
 3265 00fc 9342     		cmp	r3, r2
 3266 00fe 02DA     		bge	.L213
1081:..\src/interruptions.c ****                     pos_error_sum = -POS_INTEGRAL_SAT_LIMIT;
 3267              		.loc 1 1081 0
 3268 0100 684B     		ldr	r3, .L266+16
 3269 0102 6A4A     		ldr	r2, .L266+24
 3270 0104 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 79


 3271              	.L213:
1082:..\src/interruptions.c ****             }
1083:..\src/interruptions.c ****             
1084:..\src/interruptions.c ****             // ------ position PID control ------
1085:..\src/interruptions.c **** 
1086:..\src/interruptions.c ****             i_ref = 0;
 3272              		.loc 1 1086 0
 3273 0106 0023     		movs	r3, #0
 3274 0108 BB64     		str	r3, [r7, #72]
1087:..\src/interruptions.c ****             
1088:..\src/interruptions.c ****             // Proportional
1089:..\src/interruptions.c ****             if (k_p_dl != 0)
 3275              		.loc 1 1089 0
 3276 010a 3B6A     		ldr	r3, [r7, #32]
 3277 010c 002B     		cmp	r3, #0
 3278 010e 07D0     		beq	.L214
1090:..\src/interruptions.c ****                 i_ref += (int32)(k_p_dl * pos_error) >> 16;
 3279              		.loc 1 1090 0
 3280 0110 3B6A     		ldr	r3, [r7, #32]
 3281 0112 BA68     		ldr	r2, [r7, #8]
 3282 0114 02FB03F3 		mul	r3, r2, r3
 3283 0118 1B14     		asrs	r3, r3, #16
 3284 011a BA6C     		ldr	r2, [r7, #72]
 3285 011c 1344     		add	r3, r3, r2
 3286 011e BB64     		str	r3, [r7, #72]
 3287              	.L214:
1091:..\src/interruptions.c **** 
1092:..\src/interruptions.c ****             // Integral
1093:..\src/interruptions.c ****             if (k_i_dl != 0)
 3288              		.loc 1 1093 0
 3289 0120 FB69     		ldr	r3, [r7, #28]
 3290 0122 002B     		cmp	r3, #0
 3291 0124 08D0     		beq	.L215
1094:..\src/interruptions.c ****                 i_ref += (int32)(k_i_dl * pos_error_sum) >> 16;
 3292              		.loc 1 1094 0
 3293 0126 5F4B     		ldr	r3, .L266+16
 3294 0128 1B68     		ldr	r3, [r3]
 3295 012a FA69     		ldr	r2, [r7, #28]
 3296 012c 02FB03F3 		mul	r3, r2, r3
 3297 0130 1B14     		asrs	r3, r3, #16
 3298 0132 BA6C     		ldr	r2, [r7, #72]
 3299 0134 1344     		add	r3, r3, r2
 3300 0136 BB64     		str	r3, [r7, #72]
 3301              	.L215:
1095:..\src/interruptions.c **** 
1096:..\src/interruptions.c ****             // Derivative
1097:..\src/interruptions.c ****             if (k_d_dl != 0)
 3302              		.loc 1 1097 0
 3303 0138 BB69     		ldr	r3, [r7, #24]
 3304 013a 002B     		cmp	r3, #0
 3305 013c 0AD0     		beq	.L216
1098:..\src/interruptions.c ****                 i_ref += (int32)(k_d_dl * (pos_error - prev_pos_err)) >> 16;
 3306              		.loc 1 1098 0
 3307 013e 5C4B     		ldr	r3, .L266+28
 3308 0140 1B68     		ldr	r3, [r3]
 3309 0142 BA68     		ldr	r2, [r7, #8]
 3310 0144 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 80


 3311 0146 BA69     		ldr	r2, [r7, #24]
 3312 0148 02FB03F3 		mul	r3, r2, r3
 3313 014c 1B14     		asrs	r3, r3, #16
 3314 014e BA6C     		ldr	r2, [r7, #72]
 3315 0150 1344     		add	r3, r3, r2
 3316 0152 BB64     		str	r3, [r7, #72]
 3317              	.L216:
1099:..\src/interruptions.c ****                         
1100:..\src/interruptions.c ****             // Update previous position
1101:..\src/interruptions.c ****             prev_pos_err = pos_error;
 3318              		.loc 1 1101 0
 3319 0154 564A     		ldr	r2, .L266+28
 3320 0156 BB68     		ldr	r3, [r7, #8]
 3321 0158 1360     		str	r3, [r2]
1102:..\src/interruptions.c **** 
1103:..\src/interruptions.c ****             // motor direction depends on i_ref
1104:..\src/interruptions.c ****             if (i_ref >= 0)
 3322              		.loc 1 1104 0
 3323 015a BB6C     		ldr	r3, [r7, #72]
 3324 015c 002B     		cmp	r3, #0
 3325 015e 03DB     		blt	.L217
1105:..\src/interruptions.c ****                 motor_dir = TRUE;
 3326              		.loc 1 1105 0
 3327 0160 544B     		ldr	r3, .L266+32
 3328 0162 0122     		movs	r2, #1
 3329 0164 1A70     		strb	r2, [r3]
 3330 0166 02E0     		b	.L218
 3331              	.L217:
1106:..\src/interruptions.c ****             else
1107:..\src/interruptions.c ****                 motor_dir = FALSE;
 3332              		.loc 1 1107 0
 3333 0168 524B     		ldr	r3, .L266+32
 3334 016a 0022     		movs	r2, #0
 3335 016c 1A70     		strb	r2, [r3]
 3336              	.L218:
1108:..\src/interruptions.c **** 
1109:..\src/interruptions.c ****             // saturate max current
1110:..\src/interruptions.c ****             if (i_ref > SH_MOT->current_limit)
 3337              		.loc 1 1110 0
 3338 016e 3B6C     		ldr	r3, [r7, #64]
 3339 0170 B3F95C30 		ldrsh	r3, [r3, #92]
 3340 0174 1A46     		mov	r2, r3
 3341 0176 BB6C     		ldr	r3, [r7, #72]
 3342 0178 9A42     		cmp	r2, r3
 3343 017a 04DA     		bge	.L219
1111:..\src/interruptions.c ****                 i_ref = SH_MOT->current_limit;
 3344              		.loc 1 1111 0
 3345 017c 3B6C     		ldr	r3, [r7, #64]
 3346 017e B3F95C30 		ldrsh	r3, [r3, #92]
 3347 0182 BB64     		str	r3, [r7, #72]
 3348 0184 0BE0     		b	.L220
 3349              	.L219:
1112:..\src/interruptions.c ****             else {
1113:..\src/interruptions.c ****                 if (i_ref < -SH_MOT->current_limit)
 3350              		.loc 1 1113 0
 3351 0186 3B6C     		ldr	r3, [r7, #64]
 3352 0188 B3F95C30 		ldrsh	r3, [r3, #92]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 81


 3353 018c 5A42     		negs	r2, r3
 3354 018e BB6C     		ldr	r3, [r7, #72]
 3355 0190 9A42     		cmp	r2, r3
 3356 0192 04DD     		ble	.L220
1114:..\src/interruptions.c ****                     i_ref = -SH_MOT->current_limit;
 3357              		.loc 1 1114 0
 3358 0194 3B6C     		ldr	r3, [r7, #64]
 3359 0196 B3F95C30 		ldrsh	r3, [r3, #92]
 3360 019a 5B42     		negs	r3, r3
 3361 019c BB64     		str	r3, [r7, #72]
 3362              	.L220:
1115:..\src/interruptions.c ****         	}
1116:..\src/interruptions.c **** 
1117:..\src/interruptions.c ****             // current error and curr error sum
1118:..\src/interruptions.c ****             curr_error = i_ref - g_meas[SH_ENC_L].curr;
 3363              		.loc 1 1118 0
 3364 019e 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3365 01a2 3F4A     		ldr	r2, .L266+12
 3366 01a4 3421     		movs	r1, #52
 3367 01a6 01FB03F3 		mul	r3, r1, r3
 3368 01aa 1344     		add	r3, r3, r2
 3369 01ac 0C33     		adds	r3, r3, #12
 3370 01ae 1B68     		ldr	r3, [r3]
 3371 01b0 BA6C     		ldr	r2, [r7, #72]
 3372 01b2 D31A     		subs	r3, r2, r3
 3373 01b4 7B60     		str	r3, [r7, #4]
1119:..\src/interruptions.c ****             curr_error_sum += curr_error;
 3374              		.loc 1 1119 0
 3375 01b6 404B     		ldr	r3, .L266+36
 3376 01b8 1A68     		ldr	r2, [r3]
 3377 01ba 7B68     		ldr	r3, [r7, #4]
 3378 01bc 1344     		add	r3, r3, r2
 3379 01be 3E4A     		ldr	r2, .L266+36
 3380 01c0 1360     		str	r3, [r2]
1120:..\src/interruptions.c ****             
1121:..\src/interruptions.c ****             if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 3381              		.loc 1 1121 0
 3382 01c2 3D4B     		ldr	r3, .L266+36
 3383 01c4 1B68     		ldr	r3, [r3]
 3384 01c6 3D4A     		ldr	r2, .L266+40
 3385 01c8 9342     		cmp	r3, r2
 3386 01ca 03DD     		ble	.L221
1122:..\src/interruptions.c ****                 curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 3387              		.loc 1 1122 0
 3388 01cc 3A4B     		ldr	r3, .L266+36
 3389 01ce 3B4A     		ldr	r2, .L266+40
 3390 01d0 1A60     		str	r2, [r3]
 3391 01d2 07E0     		b	.L222
 3392              	.L221:
1123:..\src/interruptions.c ****             else {
1124:..\src/interruptions.c ****                 if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT)
 3393              		.loc 1 1124 0
 3394 01d4 384B     		ldr	r3, .L266+36
 3395 01d6 1B68     		ldr	r3, [r3]
 3396 01d8 394A     		ldr	r2, .L266+44
 3397 01da 9342     		cmp	r3, r2
 3398 01dc 02DA     		bge	.L222
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 82


1125:..\src/interruptions.c ****                     curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 3399              		.loc 1 1125 0
 3400 01de 364B     		ldr	r3, .L266+36
 3401 01e0 374A     		ldr	r2, .L266+44
 3402 01e2 1A60     		str	r2, [r3]
 3403              	.L222:
1126:..\src/interruptions.c ****             }
1127:..\src/interruptions.c **** 
1128:..\src/interruptions.c ****             // ----- current PID control -----
1129:..\src/interruptions.c **** 
1130:..\src/interruptions.c ****             pwm_input = 0;
 3404              		.loc 1 1130 0
 3405 01e4 0023     		movs	r3, #0
 3406 01e6 FB64     		str	r3, [r7, #76]
1131:..\src/interruptions.c **** 
1132:..\src/interruptions.c ****             // Proportional
1133:..\src/interruptions.c ****             if (k_p_c_dl != 0)
 3407              		.loc 1 1133 0
 3408 01e8 7B69     		ldr	r3, [r7, #20]
 3409 01ea 002B     		cmp	r3, #0
 3410 01ec 07D0     		beq	.L223
1134:..\src/interruptions.c ****                 pwm_input += (int32)(k_p_c_dl * curr_error) >> 16;
 3411              		.loc 1 1134 0
 3412 01ee 7B69     		ldr	r3, [r7, #20]
 3413 01f0 7A68     		ldr	r2, [r7, #4]
 3414 01f2 02FB03F3 		mul	r3, r2, r3
 3415 01f6 1B14     		asrs	r3, r3, #16
 3416 01f8 FA6C     		ldr	r2, [r7, #76]
 3417 01fa 1344     		add	r3, r3, r2
 3418 01fc FB64     		str	r3, [r7, #76]
 3419              	.L223:
1135:..\src/interruptions.c **** 
1136:..\src/interruptions.c ****             // Integral
1137:..\src/interruptions.c ****             if (k_i_c_dl != 0)
 3420              		.loc 1 1137 0
 3421 01fe 3B69     		ldr	r3, [r7, #16]
 3422 0200 002B     		cmp	r3, #0
 3423 0202 08D0     		beq	.L224
1138:..\src/interruptions.c ****                 pwm_input += (int32)(k_i_c_dl * curr_error_sum) >> 16;
 3424              		.loc 1 1138 0
 3425 0204 2C4B     		ldr	r3, .L266+36
 3426 0206 1B68     		ldr	r3, [r3]
 3427 0208 3A69     		ldr	r2, [r7, #16]
 3428 020a 02FB03F3 		mul	r3, r2, r3
 3429 020e 1B14     		asrs	r3, r3, #16
 3430 0210 FA6C     		ldr	r2, [r7, #76]
 3431 0212 1344     		add	r3, r3, r2
 3432 0214 FB64     		str	r3, [r7, #76]
 3433              	.L224:
1139:..\src/interruptions.c **** 
1140:..\src/interruptions.c ****             // Derivative
1141:..\src/interruptions.c ****             if (k_d_c_dl != 0)
 3434              		.loc 1 1141 0
 3435 0216 FB68     		ldr	r3, [r7, #12]
 3436 0218 002B     		cmp	r3, #0
 3437 021a 0AD0     		beq	.L225
1142:..\src/interruptions.c ****                 pwm_input += (int32)(k_d_c_dl * (curr_error - prev_curr_err)) >> 16;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 83


 3438              		.loc 1 1142 0
 3439 021c 294B     		ldr	r3, .L266+48
 3440 021e 1B68     		ldr	r3, [r3]
 3441 0220 7A68     		ldr	r2, [r7, #4]
 3442 0222 D31A     		subs	r3, r2, r3
 3443 0224 FA68     		ldr	r2, [r7, #12]
 3444 0226 02FB03F3 		mul	r3, r2, r3
 3445 022a 1B14     		asrs	r3, r3, #16
 3446 022c FA6C     		ldr	r2, [r7, #76]
 3447 022e 1344     		add	r3, r3, r2
 3448 0230 FB64     		str	r3, [r7, #76]
 3449              	.L225:
1143:..\src/interruptions.c **** 
1144:..\src/interruptions.c ****             // pwm_input saturation
1145:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE_DC) 
 3450              		.loc 1 1145 0
 3451 0232 FB6C     		ldr	r3, [r7, #76]
 3452 0234 13F1640F 		cmn	r3, #100
 3453 0238 03DA     		bge	.L226
1146:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE_DC;
 3454              		.loc 1 1146 0
 3455 023a 6FF06303 		mvn	r3, #99
 3456 023e FB64     		str	r3, [r7, #76]
 3457 0240 04E0     		b	.L227
 3458              	.L226:
1147:..\src/interruptions.c ****             else {
1148:..\src/interruptions.c ****                 if (pwm_input > PWM_MAX_VALUE_DC)
 3459              		.loc 1 1148 0
 3460 0242 FB6C     		ldr	r3, [r7, #76]
 3461 0244 642B     		cmp	r3, #100
 3462 0246 01DD     		ble	.L227
1149:..\src/interruptions.c ****                     pwm_input = PWM_MAX_VALUE_DC;
 3463              		.loc 1 1149 0
 3464 0248 6423     		movs	r3, #100
 3465 024a FB64     		str	r3, [r7, #76]
 3466              	.L227:
1150:..\src/interruptions.c ****             }
1151:..\src/interruptions.c **** 
1152:..\src/interruptions.c ****             // Update previous current
1153:..\src/interruptions.c ****             prev_curr_err = curr_error;
 3467              		.loc 1 1153 0
 3468 024c 1D4A     		ldr	r2, .L266+48
 3469 024e 7B68     		ldr	r3, [r7, #4]
 3470 0250 1360     		str	r3, [r2]
1154:..\src/interruptions.c **** 
1155:..\src/interruptions.c ****         break;
 3471              		.loc 1 1155 0
 3472 0252 1CE1     		b	.L206
 3473              	.L207:
1156:..\src/interruptions.c **** 
1157:..\src/interruptions.c ****         // ============================== POSITION CONTROL =====================
1158:..\src/interruptions.c ****         case CONTROL_ANGLE:
1159:..\src/interruptions.c ****             pos_error = g_ref[MOTOR_IDX].pos - g_meas[SH_ENC_L].pos[0];
 3474              		.loc 1 1159 0
 3475 0254 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3476 0258 0F4A     		ldr	r2, .L266+4
 3477 025a 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 84


 3478 025c 1344     		add	r3, r3, r2
 3479 025e 1A68     		ldr	r2, [r3]
 3480 0260 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3481 0264 0E49     		ldr	r1, .L266+12
 3482 0266 3420     		movs	r0, #52
 3483 0268 00FB03F3 		mul	r3, r0, r3
 3484 026c 0B44     		add	r3, r3, r1
 3485 026e 1B68     		ldr	r3, [r3]
 3486 0270 D31A     		subs	r3, r2, r3
 3487 0272 BB60     		str	r3, [r7, #8]
1160:..\src/interruptions.c **** 
1161:..\src/interruptions.c ****             pos_error_sum += pos_error;
 3488              		.loc 1 1161 0
 3489 0274 0B4B     		ldr	r3, .L266+16
 3490 0276 1A68     		ldr	r2, [r3]
 3491 0278 BB68     		ldr	r3, [r7, #8]
 3492 027a 1344     		add	r3, r3, r2
 3493 027c 094A     		ldr	r2, .L266+16
 3494 027e 1360     		str	r3, [r2]
1162:..\src/interruptions.c **** 
1163:..\src/interruptions.c ****             // anti-windup (for integral control)
1164:..\src/interruptions.c ****             if (pos_error_sum > ANTI_WINDUP)
 3495              		.loc 1 1164 0
 3496 0280 084B     		ldr	r3, .L266+16
 3497 0282 1B68     		ldr	r3, [r3]
 3498 0284 B3F57A7F 		cmp	r3, #1000
 3499 0288 1EDD     		ble	.L228
1165:..\src/interruptions.c ****                 pos_error_sum = ANTI_WINDUP;
 3500              		.loc 1 1165 0
 3501 028a 064B     		ldr	r3, .L266+16
 3502 028c 4FF47A72 		mov	r2, #1000
 3503 0290 1A60     		str	r2, [r3]
 3504 0292 21E0     		b	.L229
 3505              	.L267:
 3506              		.align	2
 3507              	.L266:
 3508 0294 00000000 		.word	c_mem
 3509 0298 00000000 		.word	g_ref
 3510 029c 00000000 		.word	g_refOld
 3511 02a0 00000000 		.word	g_meas
 3512 02a4 90000000 		.word	pos_error_sum.10573
 3513 02a8 80F0FA02 		.word	50000000
 3514 02ac 800F05FD 		.word	-50000000
 3515 02b0 94000000 		.word	prev_pos_err.10575
 3516 02b4 98000000 		.word	motor_dir.10578
 3517 02b8 9C000000 		.word	curr_error_sum.10574
 3518 02bc A0860100 		.word	100000
 3519 02c0 6079FEFF 		.word	-100000
 3520 02c4 A0000000 		.word	prev_curr_err.10576
 3521              	.L228:
1166:..\src/interruptions.c ****             else {
1167:..\src/interruptions.c **** 				if (pos_error_sum < -ANTI_WINDUP)
 3522              		.loc 1 1167 0
 3523 02c8 9D4B     		ldr	r3, .L268
 3524 02ca 1B68     		ldr	r3, [r3]
 3525 02cc 13F57A7F 		cmn	r3, #1000
 3526 02d0 02DA     		bge	.L229
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 85


1168:..\src/interruptions.c ****                 	pos_error_sum = -ANTI_WINDUP;
 3527              		.loc 1 1168 0
 3528 02d2 9B4B     		ldr	r3, .L268
 3529 02d4 9B4A     		ldr	r2, .L268+4
 3530 02d6 1A60     		str	r2, [r3]
 3531              	.L229:
1169:..\src/interruptions.c ****             }
1170:..\src/interruptions.c **** 
1171:..\src/interruptions.c ****             // Proportional
1172:..\src/interruptions.c ****             if (k_p != 0) 
 3532              		.loc 1 1172 0
 3533 02d8 BB6B     		ldr	r3, [r7, #56]
 3534 02da 002B     		cmp	r3, #0
 3535 02dc 05D0     		beq	.L230
1173:..\src/interruptions.c ****                 pwm_input = (int32)(k_p * pos_error) >> 16;
 3536              		.loc 1 1173 0
 3537 02de BB6B     		ldr	r3, [r7, #56]
 3538 02e0 BA68     		ldr	r2, [r7, #8]
 3539 02e2 02FB03F3 		mul	r3, r2, r3
 3540 02e6 1B14     		asrs	r3, r3, #16
 3541 02e8 FB64     		str	r3, [r7, #76]
 3542              	.L230:
1174:..\src/interruptions.c ****             
1175:..\src/interruptions.c **** 
1176:..\src/interruptions.c ****             // Integral
1177:..\src/interruptions.c ****             if (k_i != 0) 
 3543              		.loc 1 1177 0
 3544 02ea 7B6B     		ldr	r3, [r7, #52]
 3545 02ec 002B     		cmp	r3, #0
 3546 02ee 08D0     		beq	.L231
1178:..\src/interruptions.c ****                 pwm_input += (int32)(k_i * pos_error_sum) >> 16;
 3547              		.loc 1 1178 0
 3548 02f0 934B     		ldr	r3, .L268
 3549 02f2 1B68     		ldr	r3, [r3]
 3550 02f4 7A6B     		ldr	r2, [r7, #52]
 3551 02f6 02FB03F3 		mul	r3, r2, r3
 3552 02fa 1B14     		asrs	r3, r3, #16
 3553 02fc FA6C     		ldr	r2, [r7, #76]
 3554 02fe 1344     		add	r3, r3, r2
 3555 0300 FB64     		str	r3, [r7, #76]
 3556              	.L231:
1179:..\src/interruptions.c ****             
1180:..\src/interruptions.c **** 
1181:..\src/interruptions.c ****             // Derivative
1182:..\src/interruptions.c ****             if (k_d != 0) 
 3557              		.loc 1 1182 0
 3558 0302 3B6B     		ldr	r3, [r7, #48]
 3559 0304 002B     		cmp	r3, #0
 3560 0306 0AD0     		beq	.L232
1183:..\src/interruptions.c ****                 pwm_input += (int32)(k_d * (pos_error - prev_pos_err)) >> 16;
 3561              		.loc 1 1183 0
 3562 0308 8F4B     		ldr	r3, .L268+8
 3563 030a 1B68     		ldr	r3, [r3]
 3564 030c BA68     		ldr	r2, [r7, #8]
 3565 030e D31A     		subs	r3, r2, r3
 3566 0310 3A6B     		ldr	r2, [r7, #48]
 3567 0312 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 86


 3568 0316 1B14     		asrs	r3, r3, #16
 3569 0318 FA6C     		ldr	r2, [r7, #76]
 3570 031a 1344     		add	r3, r3, r2
 3571 031c FB64     		str	r3, [r7, #76]
 3572              	.L232:
1184:..\src/interruptions.c ****             
1185:..\src/interruptions.c **** 
1186:..\src/interruptions.c ****             // Update measure
1187:..\src/interruptions.c ****             prev_pos_err = pos_error;
 3573              		.loc 1 1187 0
 3574 031e 8A4A     		ldr	r2, .L268+8
 3575 0320 BB68     		ldr	r3, [r7, #8]
 3576 0322 1360     		str	r3, [r2]
1188:..\src/interruptions.c **** 
1189:..\src/interruptions.c ****             if (pwm_input > 0)
 3577              		.loc 1 1189 0
 3578 0324 FB6C     		ldr	r3, [r7, #76]
 3579 0326 002B     		cmp	r3, #0
 3580 0328 03DD     		ble	.L233
1190:..\src/interruptions.c ****                 motor_dir = TRUE;
 3581              		.loc 1 1190 0
 3582 032a 884B     		ldr	r3, .L268+12
 3583 032c 0122     		movs	r2, #1
 3584 032e 1A70     		strb	r2, [r3]
1191:..\src/interruptions.c ****             else
1192:..\src/interruptions.c ****                 motor_dir = FALSE;
1193:..\src/interruptions.c **** 
1194:..\src/interruptions.c ****         break;
 3585              		.loc 1 1194 0
 3586 0330 ADE0     		b	.L206
 3587              	.L233:
1192:..\src/interruptions.c **** 
 3588              		.loc 1 1192 0
 3589 0332 864B     		ldr	r3, .L268+12
 3590 0334 0022     		movs	r2, #0
 3591 0336 1A70     		strb	r2, [r3]
 3592              		.loc 1 1194 0
 3593 0338 A9E0     		b	.L206
 3594              	.L210:
1195:..\src/interruptions.c **** 
1196:..\src/interruptions.c ****         // ========================== CURRENT CONTROL ==========================
1197:..\src/interruptions.c ****         case CONTROL_CURRENT:
1198:..\src/interruptions.c ****             if(g_ref[MOTOR_IDX].onoff && tension_valid) {
 3595              		.loc 1 1198 0
 3596 033a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3597 033e 844A     		ldr	r2, .L268+16
 3598 0340 1B01     		lsls	r3, r3, #4
 3599 0342 1344     		add	r3, r3, r2
 3600 0344 0C33     		adds	r3, r3, #12
 3601 0346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3602 0348 002B     		cmp	r3, #0
 3603 034a 00F09D80 		beq	.L264
 3604              		.loc 1 1198 0 is_stmt 0 discriminator 1
 3605 034e 814B     		ldr	r3, .L268+20
 3606 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3607 0352 002B     		cmp	r3, #0
 3608 0354 00F09880 		beq	.L264
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 87


1199:..\src/interruptions.c ****                 
1200:..\src/interruptions.c ****                 i_ref = g_ref[MOTOR_IDX].curr;
 3609              		.loc 1 1200 0 is_stmt 1
 3610 0358 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3611 035c 7C4A     		ldr	r2, .L268+16
 3612 035e 1B01     		lsls	r3, r3, #4
 3613 0360 1344     		add	r3, r3, r2
 3614 0362 0433     		adds	r3, r3, #4
 3615 0364 1B68     		ldr	r3, [r3]
 3616 0366 BB64     		str	r3, [r7, #72]
1201:..\src/interruptions.c **** 
1202:..\src/interruptions.c ****                 if (i_ref > SH_MOT->current_limit) 
 3617              		.loc 1 1202 0
 3618 0368 3B6C     		ldr	r3, [r7, #64]
 3619 036a B3F95C30 		ldrsh	r3, [r3, #92]
 3620 036e 1A46     		mov	r2, r3
 3621 0370 BB6C     		ldr	r3, [r7, #72]
 3622 0372 9A42     		cmp	r2, r3
 3623 0374 04DA     		bge	.L236
1203:..\src/interruptions.c ****                     i_ref = SH_MOT->current_limit;
 3624              		.loc 1 1203 0
 3625 0376 3B6C     		ldr	r3, [r7, #64]
 3626 0378 B3F95C30 		ldrsh	r3, [r3, #92]
 3627 037c BB64     		str	r3, [r7, #72]
 3628 037e 0BE0     		b	.L237
 3629              	.L236:
1204:..\src/interruptions.c ****                 else {
1205:..\src/interruptions.c ****                     if (i_ref < -SH_MOT->current_limit)
 3630              		.loc 1 1205 0
 3631 0380 3B6C     		ldr	r3, [r7, #64]
 3632 0382 B3F95C30 		ldrsh	r3, [r3, #92]
 3633 0386 5A42     		negs	r2, r3
 3634 0388 BB6C     		ldr	r3, [r7, #72]
 3635 038a 9A42     		cmp	r2, r3
 3636 038c 04DD     		ble	.L237
1206:..\src/interruptions.c ****                         i_ref = -SH_MOT->current_limit;
 3637              		.loc 1 1206 0
 3638 038e 3B6C     		ldr	r3, [r7, #64]
 3639 0390 B3F95C30 		ldrsh	r3, [r3, #92]
 3640 0394 5B42     		negs	r3, r3
 3641 0396 BB64     		str	r3, [r7, #72]
 3642              	.L237:
1207:..\src/interruptions.c ****                 }
1208:..\src/interruptions.c ****                 
1209:..\src/interruptions.c ****                 // current error
1210:..\src/interruptions.c ****                 curr_error = i_ref - g_meas[SH_ENC_L].curr;            
 3643              		.loc 1 1210 0
 3644 0398 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3645 039c 6E4A     		ldr	r2, .L268+24
 3646 039e 3421     		movs	r1, #52
 3647 03a0 01FB03F3 		mul	r3, r1, r3
 3648 03a4 1344     		add	r3, r3, r2
 3649 03a6 0C33     		adds	r3, r3, #12
 3650 03a8 1B68     		ldr	r3, [r3]
 3651 03aa BA6C     		ldr	r2, [r7, #72]
 3652 03ac D31A     		subs	r3, r2, r3
 3653 03ae 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 88


1211:..\src/interruptions.c ****                 curr_error_sum += curr_error;
 3654              		.loc 1 1211 0
 3655 03b0 6A4B     		ldr	r3, .L268+28
 3656 03b2 1A68     		ldr	r2, [r3]
 3657 03b4 7B68     		ldr	r3, [r7, #4]
 3658 03b6 1344     		add	r3, r3, r2
 3659 03b8 684A     		ldr	r2, .L268+28
 3660 03ba 1360     		str	r3, [r2]
1212:..\src/interruptions.c ****                 
1213:..\src/interruptions.c ****                 if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 3661              		.loc 1 1213 0
 3662 03bc 674B     		ldr	r3, .L268+28
 3663 03be 1B68     		ldr	r3, [r3]
 3664 03c0 674A     		ldr	r2, .L268+32
 3665 03c2 9342     		cmp	r3, r2
 3666 03c4 03DD     		ble	.L238
1214:..\src/interruptions.c ****                     curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 3667              		.loc 1 1214 0
 3668 03c6 654B     		ldr	r3, .L268+28
 3669 03c8 654A     		ldr	r2, .L268+32
 3670 03ca 1A60     		str	r2, [r3]
 3671 03cc 07E0     		b	.L239
 3672              	.L238:
1215:..\src/interruptions.c ****                 else {
1216:..\src/interruptions.c ****                     if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT) 
 3673              		.loc 1 1216 0
 3674 03ce 634B     		ldr	r3, .L268+28
 3675 03d0 1B68     		ldr	r3, [r3]
 3676 03d2 644A     		ldr	r2, .L268+36
 3677 03d4 9342     		cmp	r3, r2
 3678 03d6 02DA     		bge	.L239
1217:..\src/interruptions.c ****                         curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 3679              		.loc 1 1217 0
 3680 03d8 604B     		ldr	r3, .L268+28
 3681 03da 624A     		ldr	r2, .L268+36
 3682 03dc 1A60     		str	r2, [r3]
 3683              	.L239:
1218:..\src/interruptions.c ****                 }
1219:..\src/interruptions.c **** 
1220:..\src/interruptions.c ****                 pwm_input = 0;
 3684              		.loc 1 1220 0
 3685 03de 0023     		movs	r3, #0
 3686 03e0 FB64     		str	r3, [r7, #76]
1221:..\src/interruptions.c **** 
1222:..\src/interruptions.c ****                 // Proportional
1223:..\src/interruptions.c ****                 if (k_p_c != 0)
 3687              		.loc 1 1223 0
 3688 03e2 FB6A     		ldr	r3, [r7, #44]
 3689 03e4 002B     		cmp	r3, #0
 3690 03e6 07D0     		beq	.L240
1224:..\src/interruptions.c ****                     pwm_input += (int32)(k_p_c * curr_error) >> 16;
 3691              		.loc 1 1224 0
 3692 03e8 FB6A     		ldr	r3, [r7, #44]
 3693 03ea 7A68     		ldr	r2, [r7, #4]
 3694 03ec 02FB03F3 		mul	r3, r2, r3
 3695 03f0 1B14     		asrs	r3, r3, #16
 3696 03f2 FA6C     		ldr	r2, [r7, #76]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 89


 3697 03f4 1344     		add	r3, r3, r2
 3698 03f6 FB64     		str	r3, [r7, #76]
 3699              	.L240:
1225:..\src/interruptions.c **** 
1226:..\src/interruptions.c ****                 // Integral
1227:..\src/interruptions.c ****                 if (k_i_c != 0)
 3700              		.loc 1 1227 0
 3701 03f8 BB6A     		ldr	r3, [r7, #40]
 3702 03fa 002B     		cmp	r3, #0
 3703 03fc 08D0     		beq	.L241
1228:..\src/interruptions.c ****                     pwm_input += (int32)(k_i_c * curr_error_sum) >> 16;
 3704              		.loc 1 1228 0
 3705 03fe 574B     		ldr	r3, .L268+28
 3706 0400 1B68     		ldr	r3, [r3]
 3707 0402 BA6A     		ldr	r2, [r7, #40]
 3708 0404 02FB03F3 		mul	r3, r2, r3
 3709 0408 1B14     		asrs	r3, r3, #16
 3710 040a FA6C     		ldr	r2, [r7, #76]
 3711 040c 1344     		add	r3, r3, r2
 3712 040e FB64     		str	r3, [r7, #76]
 3713              	.L241:
1229:..\src/interruptions.c **** 
1230:..\src/interruptions.c ****                 // Derivative
1231:..\src/interruptions.c ****                 if (k_d_c != 0)
 3714              		.loc 1 1231 0
 3715 0410 7B6A     		ldr	r3, [r7, #36]
 3716 0412 002B     		cmp	r3, #0
 3717 0414 0AD0     		beq	.L242
1232:..\src/interruptions.c ****                     pwm_input += (int32)(k_d_c * (curr_error - prev_curr_err)) >> 16;
 3718              		.loc 1 1232 0
 3719 0416 544B     		ldr	r3, .L268+40
 3720 0418 1B68     		ldr	r3, [r3]
 3721 041a 7A68     		ldr	r2, [r7, #4]
 3722 041c D31A     		subs	r3, r2, r3
 3723 041e 7A6A     		ldr	r2, [r7, #36]
 3724 0420 02FB03F3 		mul	r3, r2, r3
 3725 0424 1B14     		asrs	r3, r3, #16
 3726 0426 FA6C     		ldr	r2, [r7, #76]
 3727 0428 1344     		add	r3, r3, r2
 3728 042a FB64     		str	r3, [r7, #76]
 3729              	.L242:
1233:..\src/interruptions.c ****                 
1234:..\src/interruptions.c ****                 prev_curr_err = curr_error;
 3730              		.loc 1 1234 0
 3731 042c 4E4A     		ldr	r2, .L268+40
 3732 042e 7B68     		ldr	r3, [r7, #4]
 3733 0430 1360     		str	r3, [r2]
1235:..\src/interruptions.c ****                 
1236:..\src/interruptions.c ****                 if (pwm_input >= 0) 
 3734              		.loc 1 1236 0
 3735 0432 FB6C     		ldr	r3, [r7, #76]
 3736 0434 002B     		cmp	r3, #0
 3737 0436 03DB     		blt	.L243
1237:..\src/interruptions.c ****                     motor_dir = TRUE;
 3738              		.loc 1 1237 0
 3739 0438 444B     		ldr	r3, .L268+12
 3740 043a 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 90


 3741 043c 1A70     		strb	r2, [r3]
1238:..\src/interruptions.c ****                 else
1239:..\src/interruptions.c ****                     motor_dir = FALSE;
1240:..\src/interruptions.c ****             }
1241:..\src/interruptions.c ****         break;
 3742              		.loc 1 1241 0
 3743 043e 23E0     		b	.L264
 3744              	.L243:
1239:..\src/interruptions.c ****             }
 3745              		.loc 1 1239 0
 3746 0440 424B     		ldr	r3, .L268+12
 3747 0442 0022     		movs	r2, #0
 3748 0444 1A70     		strb	r2, [r3]
 3749              		.loc 1 1241 0
 3750 0446 1FE0     		b	.L264
 3751              	.L209:
1242:..\src/interruptions.c ****         
1243:..\src/interruptions.c ****         // ================= DIRECT PWM CONTROL ================================
1244:..\src/interruptions.c ****         case CONTROL_PWM:
1245:..\src/interruptions.c **** 
1246:..\src/interruptions.c ****             pwm_input = g_ref[MOTOR_IDX].pwm;
 3752              		.loc 1 1246 0
 3753 0448 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3754 044c 404A     		ldr	r2, .L268+16
 3755 044e 1B01     		lsls	r3, r3, #4
 3756 0450 1344     		add	r3, r3, r2
 3757 0452 0833     		adds	r3, r3, #8
 3758 0454 1B68     		ldr	r3, [r3]
 3759 0456 FB64     		str	r3, [r7, #76]
1247:..\src/interruptions.c **** 
1248:..\src/interruptions.c ****             if (pwm_input > 0) 
 3760              		.loc 1 1248 0
 3761 0458 FB6C     		ldr	r3, [r7, #76]
 3762 045a 002B     		cmp	r3, #0
 3763 045c 03DD     		ble	.L244
1249:..\src/interruptions.c ****                 motor_dir = TRUE;
 3764              		.loc 1 1249 0
 3765 045e 3B4B     		ldr	r3, .L268+12
 3766 0460 0122     		movs	r2, #1
 3767 0462 1A70     		strb	r2, [r3]
 3768 0464 02E0     		b	.L245
 3769              	.L244:
1250:..\src/interruptions.c ****             else 
1251:..\src/interruptions.c ****                 motor_dir = FALSE;
 3770              		.loc 1 1251 0
 3771 0466 394B     		ldr	r3, .L268+12
 3772 0468 0022     		movs	r2, #0
 3773 046a 1A70     		strb	r2, [r3]
 3774              	.L245:
1252:..\src/interruptions.c ****             
1253:..\src/interruptions.c **** 
1254:..\src/interruptions.c ****             // pwm_input saturation
1255:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE_DC) 
 3775              		.loc 1 1255 0
 3776 046c FB6C     		ldr	r3, [r7, #76]
 3777 046e 13F1640F 		cmn	r3, #100
 3778 0472 03DA     		bge	.L246
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 91


1256:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE_DC;
 3779              		.loc 1 1256 0
 3780 0474 6FF06303 		mvn	r3, #99
 3781 0478 FB64     		str	r3, [r7, #76]
1257:..\src/interruptions.c ****             else {
1258:..\src/interruptions.c **** 				if (pwm_input > PWM_MAX_VALUE_DC) 
1259:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE_DC;
1260:..\src/interruptions.c ****         	}
1261:..\src/interruptions.c **** 
1262:..\src/interruptions.c ****         break;
 3782              		.loc 1 1262 0
 3783 047a 07E0     		b	.L265
 3784              	.L246:
1258:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE_DC;
 3785              		.loc 1 1258 0
 3786 047c FB6C     		ldr	r3, [r7, #76]
 3787 047e 642B     		cmp	r3, #100
 3788 0480 04DD     		ble	.L265
1259:..\src/interruptions.c ****         	}
 3789              		.loc 1 1259 0
 3790 0482 6423     		movs	r3, #100
 3791 0484 FB64     		str	r3, [r7, #76]
 3792              		.loc 1 1262 0
 3793 0486 01E0     		b	.L265
 3794              	.L264:
1241:..\src/interruptions.c ****         
 3795              		.loc 1 1241 0
 3796 0488 00BF     		nop
 3797 048a 00E0     		b	.L206
 3798              	.L265:
 3799              		.loc 1 1262 0
 3800 048c 00BF     		nop
 3801              	.L206:
1263:..\src/interruptions.c ****             
1264:..\src/interruptions.c ****     }
1265:..\src/interruptions.c **** 
1266:..\src/interruptions.c ****     ////////////////////////////////////////////////////////////////////////////
1267:..\src/interruptions.c **** 
1268:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE_DC) 
 3802              		.loc 1 1268 0
 3803 048e FB6C     		ldr	r3, [r7, #76]
 3804 0490 642B     		cmp	r3, #100
 3805 0492 01DD     		ble	.L248
1269:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE_DC;
 3806              		.loc 1 1269 0
 3807 0494 6423     		movs	r3, #100
 3808 0496 FB64     		str	r3, [r7, #76]
 3809              	.L248:
1270:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE_DC) 
 3810              		.loc 1 1270 0
 3811 0498 FB6C     		ldr	r3, [r7, #76]
 3812 049a 13F1640F 		cmn	r3, #100
 3813 049e 02DA     		bge	.L249
1271:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE_DC;
 3814              		.loc 1 1271 0
 3815 04a0 6FF06303 		mvn	r3, #99
 3816 04a4 FB64     		str	r3, [r7, #76]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 92


 3817              	.L249:
1272:..\src/interruptions.c **** 
1273:..\src/interruptions.c ****     if (SH_MOT->control_mode != CONTROL_PWM) 
 3818              		.loc 1 1273 0
 3819 04a6 3B6C     		ldr	r3, [r7, #64]
 3820 04a8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 3821 04ac 012B     		cmp	r3, #1
 3822 04ae 0DD0     		beq	.L250
1274:..\src/interruptions.c ****         pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE_DC) * dev_pwm_limit[0]) >> 10;
 3823              		.loc 1 1274 0
 3824 04b0 FB6C     		ldr	r3, [r7, #76]
 3825 04b2 9B02     		lsls	r3, r3, #10
 3826 04b4 2D4A     		ldr	r2, .L268+44
 3827 04b6 82FB0312 		smull	r1, r2, r2, r3
 3828 04ba 5211     		asrs	r2, r2, #5
 3829 04bc DB17     		asrs	r3, r3, #31
 3830 04be D31A     		subs	r3, r2, r3
 3831 04c0 2B4A     		ldr	r2, .L268+48
 3832 04c2 1288     		ldrh	r2, [r2]
 3833 04c4 02FB03F3 		mul	r3, r2, r3
 3834 04c8 9B12     		asrs	r3, r3, #10
 3835 04ca FB64     		str	r3, [r7, #76]
 3836              	.L250:
1275:..\src/interruptions.c ****  
1276:..\src/interruptions.c ****     //// RATE LIMITER ////
1277:..\src/interruptions.c ****     if((pwm_input-prev_pwm) > SH_MOT->pwm_rate_limiter){
 3837              		.loc 1 1277 0
 3838 04cc 294B     		ldr	r3, .L268+52
 3839 04ce 1B68     		ldr	r3, [r3]
 3840 04d0 FA6C     		ldr	r2, [r7, #76]
 3841 04d2 D31A     		subs	r3, r2, r3
 3842 04d4 3A6C     		ldr	r2, [r7, #64]
 3843 04d6 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 3844 04da 9342     		cmp	r3, r2
 3845 04dc 08DD     		ble	.L251
1278:..\src/interruptions.c ****         pwm_input =  prev_pwm + SH_MOT->pwm_rate_limiter;
 3846              		.loc 1 1278 0
 3847 04de 3B6C     		ldr	r3, [r7, #64]
 3848 04e0 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 3849 04e4 1A46     		mov	r2, r3
 3850 04e6 234B     		ldr	r3, .L268+52
 3851 04e8 1B68     		ldr	r3, [r3]
 3852 04ea 1344     		add	r3, r3, r2
 3853 04ec FB64     		str	r3, [r7, #76]
 3854 04ee 10E0     		b	.L252
 3855              	.L251:
1279:..\src/interruptions.c ****     }
1280:..\src/interruptions.c ****     else {
1281:..\src/interruptions.c ****         if((pwm_input-prev_pwm) < -SH_MOT->pwm_rate_limiter)
 3856              		.loc 1 1281 0
 3857 04f0 204B     		ldr	r3, .L268+52
 3858 04f2 1B68     		ldr	r3, [r3]
 3859 04f4 FA6C     		ldr	r2, [r7, #76]
 3860 04f6 D21A     		subs	r2, r2, r3
 3861 04f8 3B6C     		ldr	r3, [r7, #64]
 3862 04fa 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 3863 04fe 5B42     		negs	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 93


 3864 0500 9A42     		cmp	r2, r3
 3865 0502 06DA     		bge	.L252
1282:..\src/interruptions.c ****             pwm_input =  prev_pwm - SH_MOT->pwm_rate_limiter;
 3866              		.loc 1 1282 0
 3867 0504 1B4B     		ldr	r3, .L268+52
 3868 0506 1B68     		ldr	r3, [r3]
 3869 0508 3A6C     		ldr	r2, [r7, #64]
 3870 050a 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 3871 050e 9B1A     		subs	r3, r3, r2
 3872 0510 FB64     		str	r3, [r7, #76]
 3873              	.L252:
1283:..\src/interruptions.c ****     }
1284:..\src/interruptions.c ****     
1285:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE_DC) 
 3874              		.loc 1 1285 0
 3875 0512 FB6C     		ldr	r3, [r7, #76]
 3876 0514 642B     		cmp	r3, #100
 3877 0516 01DD     		ble	.L253
1286:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE_DC;
 3878              		.loc 1 1286 0
 3879 0518 6423     		movs	r3, #100
 3880 051a FB64     		str	r3, [r7, #76]
 3881              	.L253:
1287:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE_DC) 
 3882              		.loc 1 1287 0
 3883 051c FB6C     		ldr	r3, [r7, #76]
 3884 051e 13F1640F 		cmn	r3, #100
 3885 0522 02DA     		bge	.L254
1288:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE_DC;
 3886              		.loc 1 1288 0
 3887 0524 6FF06303 		mvn	r3, #99
 3888 0528 FB64     		str	r3, [r7, #76]
 3889              	.L254:
1289:..\src/interruptions.c ****     
1290:..\src/interruptions.c ****     prev_pwm = pwm_input;
 3890              		.loc 1 1290 0
 3891 052a 124A     		ldr	r2, .L268+52
 3892 052c FB6C     		ldr	r3, [r7, #76]
 3893 052e 1360     		str	r3, [r2]
1291:..\src/interruptions.c **** 	
1292:..\src/interruptions.c ****     pwm_sign[MOTOR_IDX] = SIGN(pwm_input);   
 3894              		.loc 1 1292 0
 3895 0530 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3896 0534 FA6C     		ldr	r2, [r7, #76]
 3897 0536 002A     		cmp	r2, #0
 3898 0538 1EDB     		blt	.L255
 3899              		.loc 1 1292 0 is_stmt 0 discriminator 1
 3900 053a 0121     		movs	r1, #1
 3901 053c 1EE0     		b	.L256
 3902              	.L269:
 3903 053e 00BF     		.align	2
 3904              	.L268:
 3905 0540 90000000 		.word	pos_error_sum.10573
 3906 0544 18FCFFFF 		.word	-1000
 3907 0548 94000000 		.word	prev_pos_err.10575
 3908 054c 98000000 		.word	motor_dir.10578
 3909 0550 00000000 		.word	g_ref
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 94


 3910 0554 00000000 		.word	tension_valid
 3911 0558 00000000 		.word	g_meas
 3912 055c 9C000000 		.word	curr_error_sum.10574
 3913 0560 A0860100 		.word	100000
 3914 0564 6079FEFF 		.word	-100000
 3915 0568 A0000000 		.word	prev_curr_err.10576
 3916 056c 1F85EB51 		.word	1374389535
 3917 0570 00000000 		.word	dev_pwm_limit
 3918 0574 A4000000 		.word	prev_pwm.10577
 3919              	.L255:
 3920              		.loc 1 1292 0 discriminator 2
 3921 0578 4FF0FF31 		mov	r1, #-1
 3922              	.L256:
 3923              		.loc 1 1292 0 discriminator 4
 3924 057c 5A4A     		ldr	r2, .L270
 3925 057e D154     		strb	r1, [r2, r3]
1293:..\src/interruptions.c ****     
1294:..\src/interruptions.c ****     if (SH_MOT->not_revers_motor_flag == TRUE) {
 3926              		.loc 1 1294 0 is_stmt 1 discriminator 4
 3927 0580 3B6C     		ldr	r3, [r7, #64]
 3928 0582 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 3929 0586 012B     		cmp	r3, #1
 3930 0588 40F09680 		bne	.L257
1295:..\src/interruptions.c ****         // Block motor with pwm = 0 to exploit not reversible motor behaviour 
1296:..\src/interruptions.c ****     	if ( SH_MOT->control_mode != CONTROL_PWM && ((g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[
 3931              		.loc 1 1296 0
 3932 058c 3B6C     		ldr	r3, [r7, #64]
 3933 058e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 3934 0592 012B     		cmp	r3, #1
 3935 0594 00F08D80 		beq	.L258
 3936              		.loc 1 1296 0 is_stmt 0 discriminator 1
 3937 0598 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3938 059c 534A     		ldr	r2, .L270+4
 3939 059e 3421     		movs	r1, #52
 3940 05a0 01FB03F3 		mul	r3, r1, r3
 3941 05a4 1344     		add	r3, r3, r2
 3942 05a6 1A68     		ldr	r2, [r3]
 3943 05a8 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3944 05ac 5049     		ldr	r1, .L270+8
 3945 05ae 3420     		movs	r0, #52
 3946 05b0 00FB03F3 		mul	r3, r0, r3
 3947 05b4 0B44     		add	r3, r3, r1
 3948 05b6 1B68     		ldr	r3, [r3]
 3949 05b8 D31A     		subs	r3, r2, r3
 3950 05ba 312B     		cmp	r3, #49
 3951 05bc 79DC     		bgt	.L258
1297:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 3952              		.loc 1 1297 0 is_stmt 1 discriminator 2
 3953 05be 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3954 05c2 4A4A     		ldr	r2, .L270+4
 3955 05c4 3421     		movs	r1, #52
 3956 05c6 01FB03F3 		mul	r3, r1, r3
 3957 05ca 1344     		add	r3, r3, r2
 3958 05cc 1A68     		ldr	r2, [r3]
 3959 05ce 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 3960 05d2 4749     		ldr	r1, .L270+8
 3961 05d4 3420     		movs	r0, #52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 95


 3962 05d6 00FB03F3 		mul	r3, r0, r3
 3963 05da 0B44     		add	r3, r3, r1
 3964 05dc 1B68     		ldr	r3, [r3]
 3965 05de D31A     		subs	r3, r2, r3
1296:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 3966              		.loc 1 1296 0 discriminator 2
 3967 05e0 13F1310F 		cmn	r3, #49
 3968 05e4 65DB     		blt	.L258
1298:..\src/interruptions.c ****             ((g_refOld[MOTOR_IDX].pos - g_ref[MOTOR_IDX].pos) < 100 && (g_refOld[MOTOR_IDX].pos - g
 3969              		.loc 1 1298 0
 3970 05e6 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3971 05ea 424A     		ldr	r2, .L270+12
 3972 05ec 1B01     		lsls	r3, r3, #4
 3973 05ee 1344     		add	r3, r3, r2
 3974 05f0 1A68     		ldr	r2, [r3]
 3975 05f2 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3976 05f6 4049     		ldr	r1, .L270+16
 3977 05f8 1B01     		lsls	r3, r3, #4
 3978 05fa 0B44     		add	r3, r3, r1
 3979 05fc 1B68     		ldr	r3, [r3]
 3980 05fe D31A     		subs	r3, r2, r3
1297:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 3981              		.loc 1 1297 0
 3982 0600 632B     		cmp	r3, #99
 3983 0602 56DC     		bgt	.L258
 3984              		.loc 1 1298 0
 3985 0604 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3986 0608 3A4A     		ldr	r2, .L270+12
 3987 060a 1B01     		lsls	r3, r3, #4
 3988 060c 1344     		add	r3, r3, r2
 3989 060e 1A68     		ldr	r2, [r3]
 3990 0610 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 3991 0614 3849     		ldr	r1, .L270+16
 3992 0616 1B01     		lsls	r3, r3, #4
 3993 0618 0B44     		add	r3, r3, r1
 3994 061a 1B68     		ldr	r3, [r3]
 3995 061c D31A     		subs	r3, r2, r3
 3996 061e 13F1630F 		cmn	r3, #99
 3997 0622 46DB     		blt	.L258
1299:..\src/interruptions.c ****             position_counter++;
 3998              		.loc 1 1299 0
 3999 0624 354B     		ldr	r3, .L270+20
 4000 0626 1B68     		ldr	r3, [r3]
 4001 0628 0133     		adds	r3, r3, #1
 4002 062a 344A     		ldr	r2, .L270+20
 4003 062c 1360     		str	r3, [r2]
1300:..\src/interruptions.c ****             
1301:..\src/interruptions.c ****             if (position_counter >= 250) { 
 4004              		.loc 1 1301 0
 4005 062e 334B     		ldr	r3, .L270+20
 4006 0630 1B68     		ldr	r3, [r3]
 4007 0632 F92B     		cmp	r3, #249
 4008 0634 40D9     		bls	.L257
1302:..\src/interruptions.c ****                 if (SH_MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 4009              		.loc 1 1302 0
 4010 0636 3B6C     		ldr	r3, [r7, #64]
 4011 0638 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 96


 4012 063c 002B     		cmp	r3, #0
 4013 063e 11D1     		bne	.L260
 4014              		.loc 1 1302 0 is_stmt 0 discriminator 1
 4015 0640 2F4B     		ldr	r3, .L270+24
 4016 0642 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4017 0644 002B     		cmp	r3, #0
 4018 0646 0DD1     		bne	.L260
1303:..\src/interruptions.c ****                     g_refNew[MOTOR_IDX].pos = g_meas[SH_ENC_L].pos[0];       // Needed only when US
 4019              		.loc 1 1303 0 is_stmt 1
 4020 0648 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4021 064c 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 4022 0650 2749     		ldr	r1, .L270+8
 4023 0652 3420     		movs	r0, #52
 4024 0654 00FB02F2 		mul	r2, r0, r2
 4025 0658 0A44     		add	r2, r2, r1
 4026 065a 1268     		ldr	r2, [r2]
 4027 065c 2949     		ldr	r1, .L270+28
 4028 065e 1B01     		lsls	r3, r3, #4
 4029 0660 0B44     		add	r3, r3, r1
 4030 0662 1A60     		str	r2, [r3]
 4031              	.L260:
1304:..\src/interruptions.c ****                 }
1305:..\src/interruptions.c ****                 g_ref[MOTOR_IDX].pos = g_meas[SH_ENC_L].pos[0];
 4032              		.loc 1 1305 0
 4033 0664 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 4034 0668 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 4035 066c 2049     		ldr	r1, .L270+8
 4036 066e 3420     		movs	r0, #52
 4037 0670 00FB02F2 		mul	r2, r0, r2
 4038 0674 0A44     		add	r2, r2, r1
 4039 0676 1268     		ldr	r2, [r2]
 4040 0678 1F49     		ldr	r1, .L270+16
 4041 067a 1B01     		lsls	r3, r3, #4
 4042 067c 0B44     		add	r3, r3, r1
 4043 067e 1A60     		str	r2, [r3]
1306:..\src/interruptions.c ****                 
1307:..\src/interruptions.c ****                 if (position_counter == 250){
 4044              		.loc 1 1307 0
 4045 0680 1E4B     		ldr	r3, .L270+20
 4046 0682 1B68     		ldr	r3, [r3]
 4047 0684 FA2B     		cmp	r3, #250
 4048 0686 11D1     		bne	.L261
1308:..\src/interruptions.c ****                     // To do only once
1309:..\src/interruptions.c ****                     g_meas[SH_ENC_L].hold_curr = g_meas[SH_ENC_L].curr;
 4049              		.loc 1 1309 0
 4050 0688 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 4051 068c 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 4052 0690 1749     		ldr	r1, .L270+8
 4053 0692 3420     		movs	r0, #52
 4054 0694 00FB02F2 		mul	r2, r0, r2
 4055 0698 0A44     		add	r2, r2, r1
 4056 069a 0C32     		adds	r2, r2, #12
 4057 069c 1268     		ldr	r2, [r2]
 4058 069e 1449     		ldr	r1, .L270+8
 4059 06a0 3420     		movs	r0, #52
 4060 06a2 00FB03F3 		mul	r3, r0, r3
 4061 06a6 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 97


 4062 06a8 1433     		adds	r3, r3, #20
 4063 06aa 1A60     		str	r2, [r3]
 4064              	.L261:
1310:..\src/interruptions.c ****                 }
1311:..\src/interruptions.c ****                 pwm_input = 0;            
 4065              		.loc 1 1311 0
 4066 06ac 0023     		movs	r3, #0
 4067 06ae FB64     		str	r3, [r7, #76]
1301:..\src/interruptions.c ****                 if (SH_MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 4068              		.loc 1 1301 0
 4069 06b0 02E0     		b	.L257
 4070              	.L258:
1312:..\src/interruptions.c ****             }
1313:..\src/interruptions.c ****         }
1314:..\src/interruptions.c ****         else {
1315:..\src/interruptions.c ****             position_counter = 0;
 4071              		.loc 1 1315 0
 4072 06b2 124B     		ldr	r3, .L270+20
 4073 06b4 0022     		movs	r2, #0
 4074 06b6 1A60     		str	r2, [r3]
 4075              	.L257:
1316:..\src/interruptions.c ****         }
1317:..\src/interruptions.c ****     }
1318:..\src/interruptions.c ****     
1319:..\src/interruptions.c ****     if (motor_dir)
 4076              		.loc 1 1319 0
 4077 06b8 134B     		ldr	r3, .L270+32
 4078 06ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4079 06bc 002B     		cmp	r3, #0
 4080 06be 03D0     		beq	.L262
1320:..\src/interruptions.c ****         MOTOR_DIR_1_Write(0x01);
 4081              		.loc 1 1320 0
 4082 06c0 0120     		movs	r0, #1
 4083 06c2 FFF7FEFF 		bl	MOTOR_DIR_1_Write
 4084 06c6 02E0     		b	.L263
 4085              	.L262:
1321:..\src/interruptions.c ****     else
1322:..\src/interruptions.c ****         MOTOR_DIR_1_Write(0x00);
 4086              		.loc 1 1322 0
 4087 06c8 0020     		movs	r0, #0
 4088 06ca FFF7FEFF 		bl	MOTOR_DIR_1_Write
 4089              	.L263:
1323:..\src/interruptions.c **** 
1324:..\src/interruptions.c ****     PWM_MOTORS_WriteCompare1(abs(pwm_input));
 4090              		.loc 1 1324 0
 4091 06ce FB6C     		ldr	r3, [r7, #76]
 4092 06d0 002B     		cmp	r3, #0
 4093 06d2 B8BF     		it	lt
 4094 06d4 5B42     		rsblt	r3, r3, #0
 4095 06d6 DBB2     		uxtb	r3, r3
 4096 06d8 1846     		mov	r0, r3
 4097 06da FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1325:..\src/interruptions.c **** }
 4098              		.loc 1 1325 0
 4099 06de 00BF     		nop
 4100 06e0 5037     		adds	r7, r7, #80
 4101              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 98


 4102 06e2 BD46     		mov	sp, r7
 4103              		.cfi_def_cfa_register 13
 4104              		@ sp needed
 4105 06e4 80BD     		pop	{r7, pc}
 4106              	.L271:
 4107 06e6 00BF     		.align	2
 4108              	.L270:
 4109 06e8 00000000 		.word	pwm_sign
 4110 06ec 00000000 		.word	g_measOld
 4111 06f0 00000000 		.word	g_meas
 4112 06f4 00000000 		.word	g_refOld
 4113 06f8 00000000 		.word	g_ref
 4114 06fc A8000000 		.word	position_counter.10579
 4115 0700 00000000 		.word	change_ext_ref_flag
 4116 0704 00000000 		.word	g_refNew
 4117 0708 98000000 		.word	motor_dir.10578
 4118              		.cfi_endproc
 4119              	.LFE71:
 4120              		.size	motor_control_SH, .-motor_control_SH
 4121              		.section	.text.motor_control_generic,"ax",%progbits
 4122              		.align	2
 4123              		.global	motor_control_generic
 4124              		.thumb
 4125              		.thumb_func
 4126              		.type	motor_control_generic, %function
 4127              	motor_control_generic:
 4128              	.LFB72:
1326:..\src/interruptions.c **** 
1327:..\src/interruptions.c **** //==============================================================================
1328:..\src/interruptions.c **** //                                                         MOTOR CONTROL GENERIC
1329:..\src/interruptions.c **** //==============================================================================
1330:..\src/interruptions.c **** void motor_control_generic(uint8 idx) {
 4129              		.loc 1 1330 0
 4130              		.cfi_startproc
 4131              		@ args = 0, pretend = 0, frame = 80
 4132              		@ frame_needed = 1, uses_anonymous_args = 0
 4133 0000 90B5     		push	{r4, r7, lr}
 4134              		.cfi_def_cfa_offset 12
 4135              		.cfi_offset 4, -12
 4136              		.cfi_offset 7, -8
 4137              		.cfi_offset 14, -4
 4138 0002 95B0     		sub	sp, sp, #84
 4139              		.cfi_def_cfa_offset 96
 4140 0004 00AF     		add	r7, sp, #0
 4141              		.cfi_def_cfa_register 7
 4142 0006 0346     		mov	r3, r0
 4143 0008 FB71     		strb	r3, [r7, #7]
1331:..\src/interruptions.c ****     
1332:..\src/interruptions.c ****     int32 CYDATA pwm_input = 0;
 4144              		.loc 1 1332 0
 4145 000a 0023     		movs	r3, #0
 4146 000c FB64     		str	r3, [r7, #76]
1333:..\src/interruptions.c ****     int32 CYDATA pos_error;         // position error
1334:..\src/interruptions.c ****     int32 CYDATA curr_error;        // current error
1335:..\src/interruptions.c ****     int32 CYDATA i_ref;             // current reference
1336:..\src/interruptions.c **** 
1337:..\src/interruptions.c ****     struct st_motor* MOT = &c_mem.motor[idx]; // Motor struct
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 99


 4147              		.loc 1 1337 0
 4148 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4149 0010 1346     		mov	r3, r2
 4150 0012 DB00     		lsls	r3, r3, #3
 4151 0014 9B1A     		subs	r3, r3, r2
 4152 0016 1B01     		lsls	r3, r3, #4
 4153 0018 B033     		adds	r3, r3, #176
 4154 001a 9D4A     		ldr	r2, .L363
 4155 001c 1344     		add	r3, r3, r2
 4156 001e 7B64     		str	r3, [r7, #68]
1338:..\src/interruptions.c ****     uint8 ENC_L = MOT->encoder_line;          // Associated encoder line
 4157              		.loc 1 1338 0
 4158 0020 7B6C     		ldr	r3, [r7, #68]
 4159 0022 93F86030 		ldrb	r3, [r3, #96]
 4160 0026 87F84330 		strb	r3, [r7, #67]
1339:..\src/interruptions.c ****     
1340:..\src/interruptions.c ****     int32 CYDATA k_p = MOT->k_p;  
 4161              		.loc 1 1340 0
 4162 002a 7B6C     		ldr	r3, [r7, #68]
 4163 002c 1B68     		ldr	r3, [r3]
 4164 002e FB63     		str	r3, [r7, #60]
1341:..\src/interruptions.c ****     int32 CYDATA k_i = MOT->k_i; 
 4165              		.loc 1 1341 0
 4166 0030 7B6C     		ldr	r3, [r7, #68]
 4167 0032 5B68     		ldr	r3, [r3, #4]
 4168 0034 BB63     		str	r3, [r7, #56]
1342:..\src/interruptions.c ****     int32 CYDATA k_d = MOT->k_d; 
 4169              		.loc 1 1342 0
 4170 0036 7B6C     		ldr	r3, [r7, #68]
 4171 0038 9B68     		ldr	r3, [r3, #8]
 4172 003a 7B63     		str	r3, [r7, #52]
1343:..\src/interruptions.c **** 
1344:..\src/interruptions.c ****     int32 CYDATA k_p_c = MOT->k_p_c;  
 4173              		.loc 1 1344 0
 4174 003c 7B6C     		ldr	r3, [r7, #68]
 4175 003e DB68     		ldr	r3, [r3, #12]
 4176 0040 3B63     		str	r3, [r7, #48]
1345:..\src/interruptions.c ****     int32 CYDATA k_i_c = MOT->k_i_c; 
 4177              		.loc 1 1345 0
 4178 0042 7B6C     		ldr	r3, [r7, #68]
 4179 0044 1B69     		ldr	r3, [r3, #16]
 4180 0046 FB62     		str	r3, [r7, #44]
1346:..\src/interruptions.c ****     int32 CYDATA k_d_c = MOT->k_d_c;   
 4181              		.loc 1 1346 0
 4182 0048 7B6C     		ldr	r3, [r7, #68]
 4183 004a 5B69     		ldr	r3, [r3, #20]
 4184 004c BB62     		str	r3, [r7, #40]
1347:..\src/interruptions.c **** 
1348:..\src/interruptions.c ****     int32 CYDATA k_p_dl = MOT->k_p_dl;  
 4185              		.loc 1 1348 0
 4186 004e 7B6C     		ldr	r3, [r7, #68]
 4187 0050 9B69     		ldr	r3, [r3, #24]
 4188 0052 7B62     		str	r3, [r7, #36]
1349:..\src/interruptions.c ****     int32 CYDATA k_i_dl = MOT->k_i_dl; 
 4189              		.loc 1 1349 0
 4190 0054 7B6C     		ldr	r3, [r7, #68]
 4191 0056 DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 100


 4192 0058 3B62     		str	r3, [r7, #32]
1350:..\src/interruptions.c ****     int32 CYDATA k_d_dl = MOT->k_d_dl;
 4193              		.loc 1 1350 0
 4194 005a 7B6C     		ldr	r3, [r7, #68]
 4195 005c 1B6A     		ldr	r3, [r3, #32]
 4196 005e FB61     		str	r3, [r7, #28]
1351:..\src/interruptions.c ****     
1352:..\src/interruptions.c ****     int32 CYDATA k_p_c_dl = MOT->k_p_c_dl;  
 4197              		.loc 1 1352 0
 4198 0060 7B6C     		ldr	r3, [r7, #68]
 4199 0062 5B6A     		ldr	r3, [r3, #36]
 4200 0064 BB61     		str	r3, [r7, #24]
1353:..\src/interruptions.c ****     int32 CYDATA k_i_c_dl = MOT->k_i_c_dl; 
 4201              		.loc 1 1353 0
 4202 0066 7B6C     		ldr	r3, [r7, #68]
 4203 0068 9B6A     		ldr	r3, [r3, #40]
 4204 006a 7B61     		str	r3, [r7, #20]
1354:..\src/interruptions.c ****     int32 CYDATA k_d_c_dl = MOT->k_d_c_dl;   
 4205              		.loc 1 1354 0
 4206 006c 7B6C     		ldr	r3, [r7, #68]
 4207 006e DB6A     		ldr	r3, [r3, #44]
 4208 0070 3B61     		str	r3, [r7, #16]
1355:..\src/interruptions.c **** 
1356:..\src/interruptions.c ****     // Static Variables
1357:..\src/interruptions.c **** 
1358:..\src/interruptions.c ****     static int32 pos_error_sum[NUM_OF_MOTORS];     // position error sum for integral
1359:..\src/interruptions.c ****     static int32 curr_error_sum[NUM_OF_MOTORS];    // current error sum for integral
1360:..\src/interruptions.c ****     
1361:..\src/interruptions.c ****     static int32 prev_pos_err[NUM_OF_MOTORS];      // previous position error for deriv. control
1362:..\src/interruptions.c ****     static int32 prev_curr_err[NUM_OF_MOTORS];     // previous current error for deriv. control
1363:..\src/interruptions.c ****     static int32 prev_pwm[NUM_OF_MOTORS];
1364:..\src/interruptions.c **** 
1365:..\src/interruptions.c ****     static CYBIT motor_dir[NUM_OF_MOTORS] = {FALSE, FALSE};
1366:..\src/interruptions.c ****     static uint32 position_counter[NUM_OF_MOTORS] = {0, 0};
1367:..\src/interruptions.c **** 
1368:..\src/interruptions.c ****     // ======================= UPDATE MOTOR REFERENCE ==========================            
1369:..\src/interruptions.c ****     compute_reference(idx, &g_ref[idx], &g_refOld[idx]);
 4209              		.loc 1 1369 0
 4210 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4211 0074 1B01     		lsls	r3, r3, #4
 4212 0076 874A     		ldr	r2, .L363+4
 4213 0078 9918     		adds	r1, r3, r2
 4214 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4215 007c 1B01     		lsls	r3, r3, #4
 4216 007e 864A     		ldr	r2, .L363+8
 4217 0080 1A44     		add	r2, r2, r3
 4218 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4219 0084 1846     		mov	r0, r3
 4220 0086 FFF7FEFF 		bl	compute_reference
1370:..\src/interruptions.c ****     
1371:..\src/interruptions.c ****    
1372:..\src/interruptions.c ****     switch(MOT->control_mode) {
 4221              		.loc 1 1372 0
 4222 008a 7B6C     		ldr	r3, [r7, #68]
 4223 008c 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 4224 0090 032B     		cmp	r3, #3
 4225 0092 00F28082 		bhi	.L273
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 101


 4226 0096 01A2     		adr	r2, .L275
 4227 0098 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4228              		.p2align 2
 4229              	.L275:
 4230 009c ED020000 		.word	.L274+1
 4231 00a0 F7040000 		.word	.L276+1
 4232 00a4 C5030000 		.word	.L277+1
 4233 00a8 AD000000 		.word	.L278+1
 4234              		.p2align 1
 4235              	.L278:
1373:..\src/interruptions.c ****         // ======================= CURRENT AND POSITION CONTROL =======================
1374:..\src/interruptions.c ****         case CURR_AND_POS_CONTROL:
1375:..\src/interruptions.c ****             pos_error = g_ref[0].pos - g_meas[ENC_L].pos[0];
 4236              		.loc 1 1375 0
 4237 00ac 794B     		ldr	r3, .L363+4
 4238 00ae 1A68     		ldr	r2, [r3]
 4239 00b0 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 4240 00b4 7949     		ldr	r1, .L363+12
 4241 00b6 3420     		movs	r0, #52
 4242 00b8 00FB03F3 		mul	r3, r0, r3
 4243 00bc 0B44     		add	r3, r3, r1
 4244 00be 1B68     		ldr	r3, [r3]
 4245 00c0 D31A     		subs	r3, r2, r3
 4246 00c2 FB60     		str	r3, [r7, #12]
1376:..\src/interruptions.c **** 
1377:..\src/interruptions.c ****             pos_error_sum[idx] += pos_error;
 4247              		.loc 1 1377 0
 4248 00c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4249 00c6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4250 00c8 7549     		ldr	r1, .L363+16
 4251 00ca 51F82210 		ldr	r1, [r1, r2, lsl #2]
 4252 00ce FA68     		ldr	r2, [r7, #12]
 4253 00d0 0A44     		add	r2, r2, r1
 4254 00d2 7349     		ldr	r1, .L363+16
 4255 00d4 41F82320 		str	r2, [r1, r3, lsl #2]
1378:..\src/interruptions.c **** 
1379:..\src/interruptions.c ****             // error_sum saturation
1380:..\src/interruptions.c ****             if (pos_error_sum[idx] > POS_INTEGRAL_SAT_LIMIT)
 4256              		.loc 1 1380 0
 4257 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4258 00da 714A     		ldr	r2, .L363+16
 4259 00dc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4260 00e0 704A     		ldr	r2, .L363+20
 4261 00e2 9342     		cmp	r3, r2
 4262 00e4 05DD     		ble	.L279
1381:..\src/interruptions.c ****                 pos_error_sum[idx] = POS_INTEGRAL_SAT_LIMIT;
 4263              		.loc 1 1381 0
 4264 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4265 00e8 6D4A     		ldr	r2, .L363+16
 4266 00ea 6E49     		ldr	r1, .L363+20
 4267 00ec 42F82310 		str	r1, [r2, r3, lsl #2]
 4268 00f0 0BE0     		b	.L280
 4269              	.L279:
1382:..\src/interruptions.c ****             else {
1383:..\src/interruptions.c ****                 if (pos_error_sum[idx] < -POS_INTEGRAL_SAT_LIMIT) 
 4270              		.loc 1 1383 0
 4271 00f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 102


 4272 00f4 6A4A     		ldr	r2, .L363+16
 4273 00f6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4274 00fa 6B4A     		ldr	r2, .L363+24
 4275 00fc 9342     		cmp	r3, r2
 4276 00fe 04DA     		bge	.L280
1384:..\src/interruptions.c ****                     pos_error_sum[idx] = -POS_INTEGRAL_SAT_LIMIT;
 4277              		.loc 1 1384 0
 4278 0100 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4279 0102 674A     		ldr	r2, .L363+16
 4280 0104 6849     		ldr	r1, .L363+24
 4281 0106 42F82310 		str	r1, [r2, r3, lsl #2]
 4282              	.L280:
1385:..\src/interruptions.c ****             }
1386:..\src/interruptions.c ****             
1387:..\src/interruptions.c ****             // ------ position PID control ------
1388:..\src/interruptions.c **** 
1389:..\src/interruptions.c ****             i_ref = 0;
 4283              		.loc 1 1389 0
 4284 010a 0023     		movs	r3, #0
 4285 010c BB64     		str	r3, [r7, #72]
1390:..\src/interruptions.c ****             
1391:..\src/interruptions.c ****             // Proportional
1392:..\src/interruptions.c ****             if (k_p_dl != 0)
 4286              		.loc 1 1392 0
 4287 010e 7B6A     		ldr	r3, [r7, #36]
 4288 0110 002B     		cmp	r3, #0
 4289 0112 07D0     		beq	.L281
1393:..\src/interruptions.c ****                 i_ref += (int32)(k_p_dl * pos_error) >> 16;
 4290              		.loc 1 1393 0
 4291 0114 7B6A     		ldr	r3, [r7, #36]
 4292 0116 FA68     		ldr	r2, [r7, #12]
 4293 0118 02FB03F3 		mul	r3, r2, r3
 4294 011c 1B14     		asrs	r3, r3, #16
 4295 011e BA6C     		ldr	r2, [r7, #72]
 4296 0120 1344     		add	r3, r3, r2
 4297 0122 BB64     		str	r3, [r7, #72]
 4298              	.L281:
1394:..\src/interruptions.c **** 
1395:..\src/interruptions.c ****             // Integral
1396:..\src/interruptions.c ****             if (k_i_dl != 0)
 4299              		.loc 1 1396 0
 4300 0124 3B6A     		ldr	r3, [r7, #32]
 4301 0126 002B     		cmp	r3, #0
 4302 0128 0AD0     		beq	.L282
1397:..\src/interruptions.c ****                 i_ref += (int32)(k_i_dl * pos_error_sum[idx]) >> 16;
 4303              		.loc 1 1397 0
 4304 012a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4305 012c 5C4A     		ldr	r2, .L363+16
 4306 012e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4307 0132 3A6A     		ldr	r2, [r7, #32]
 4308 0134 02FB03F3 		mul	r3, r2, r3
 4309 0138 1B14     		asrs	r3, r3, #16
 4310 013a BA6C     		ldr	r2, [r7, #72]
 4311 013c 1344     		add	r3, r3, r2
 4312 013e BB64     		str	r3, [r7, #72]
 4313              	.L282:
1398:..\src/interruptions.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 103


1399:..\src/interruptions.c ****             // Derivative
1400:..\src/interruptions.c ****             if (k_d_dl != 0)
 4314              		.loc 1 1400 0
 4315 0140 FB69     		ldr	r3, [r7, #28]
 4316 0142 002B     		cmp	r3, #0
 4317 0144 0CD0     		beq	.L283
1401:..\src/interruptions.c ****                 i_ref += (int32)(k_d_dl * (pos_error - prev_pos_err[idx])) >> 16;
 4318              		.loc 1 1401 0
 4319 0146 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4320 0148 584A     		ldr	r2, .L363+28
 4321 014a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4322 014e FA68     		ldr	r2, [r7, #12]
 4323 0150 D31A     		subs	r3, r2, r3
 4324 0152 FA69     		ldr	r2, [r7, #28]
 4325 0154 02FB03F3 		mul	r3, r2, r3
 4326 0158 1B14     		asrs	r3, r3, #16
 4327 015a BA6C     		ldr	r2, [r7, #72]
 4328 015c 1344     		add	r3, r3, r2
 4329 015e BB64     		str	r3, [r7, #72]
 4330              	.L283:
1402:..\src/interruptions.c ****                         
1403:..\src/interruptions.c ****             // Update previous position
1404:..\src/interruptions.c ****             prev_pos_err[idx] = pos_error;
 4331              		.loc 1 1404 0
 4332 0160 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4333 0162 5249     		ldr	r1, .L363+28
 4334 0164 FA68     		ldr	r2, [r7, #12]
 4335 0166 41F82320 		str	r2, [r1, r3, lsl #2]
1405:..\src/interruptions.c **** 
1406:..\src/interruptions.c ****             // motor direction depends on i_ref
1407:..\src/interruptions.c ****             if (i_ref >= 0)
 4336              		.loc 1 1407 0
 4337 016a BB6C     		ldr	r3, [r7, #72]
 4338 016c 002B     		cmp	r3, #0
 4339 016e 04DB     		blt	.L284
1408:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 4340              		.loc 1 1408 0
 4341 0170 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4342 0172 4F4A     		ldr	r2, .L363+32
 4343 0174 0121     		movs	r1, #1
 4344 0176 D154     		strb	r1, [r2, r3]
 4345 0178 03E0     		b	.L285
 4346              	.L284:
1409:..\src/interruptions.c ****             else
1410:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
 4347              		.loc 1 1410 0
 4348 017a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4349 017c 4C4A     		ldr	r2, .L363+32
 4350 017e 0021     		movs	r1, #0
 4351 0180 D154     		strb	r1, [r2, r3]
 4352              	.L285:
1411:..\src/interruptions.c **** 
1412:..\src/interruptions.c ****             // saturate max current
1413:..\src/interruptions.c ****             if (i_ref > MOT->current_limit)
 4353              		.loc 1 1413 0
 4354 0182 7B6C     		ldr	r3, [r7, #68]
 4355 0184 B3F95C30 		ldrsh	r3, [r3, #92]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 104


 4356 0188 1A46     		mov	r2, r3
 4357 018a BB6C     		ldr	r3, [r7, #72]
 4358 018c 9A42     		cmp	r2, r3
 4359 018e 04DA     		bge	.L286
1414:..\src/interruptions.c ****                 i_ref = MOT->current_limit;
 4360              		.loc 1 1414 0
 4361 0190 7B6C     		ldr	r3, [r7, #68]
 4362 0192 B3F95C30 		ldrsh	r3, [r3, #92]
 4363 0196 BB64     		str	r3, [r7, #72]
 4364 0198 0BE0     		b	.L287
 4365              	.L286:
1415:..\src/interruptions.c ****             else {
1416:..\src/interruptions.c ****                 if (i_ref < -MOT->current_limit)
 4366              		.loc 1 1416 0
 4367 019a 7B6C     		ldr	r3, [r7, #68]
 4368 019c B3F95C30 		ldrsh	r3, [r3, #92]
 4369 01a0 5A42     		negs	r2, r3
 4370 01a2 BB6C     		ldr	r3, [r7, #72]
 4371 01a4 9A42     		cmp	r2, r3
 4372 01a6 04DD     		ble	.L287
1417:..\src/interruptions.c ****                     i_ref = -MOT->current_limit;
 4373              		.loc 1 1417 0
 4374 01a8 7B6C     		ldr	r3, [r7, #68]
 4375 01aa B3F95C30 		ldrsh	r3, [r3, #92]
 4376 01ae 5B42     		negs	r3, r3
 4377 01b0 BB64     		str	r3, [r7, #72]
 4378              	.L287:
1418:..\src/interruptions.c ****         	}
1419:..\src/interruptions.c **** 
1420:..\src/interruptions.c ****             // current error and curr error sum
1421:..\src/interruptions.c ****             curr_error = i_ref - g_meas[ENC_L].curr;
 4379              		.loc 1 1421 0
 4380 01b2 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 4381 01b6 394A     		ldr	r2, .L363+12
 4382 01b8 3421     		movs	r1, #52
 4383 01ba 01FB03F3 		mul	r3, r1, r3
 4384 01be 1344     		add	r3, r3, r2
 4385 01c0 0C33     		adds	r3, r3, #12
 4386 01c2 1B68     		ldr	r3, [r3]
 4387 01c4 BA6C     		ldr	r2, [r7, #72]
 4388 01c6 D31A     		subs	r3, r2, r3
 4389 01c8 BB60     		str	r3, [r7, #8]
1422:..\src/interruptions.c ****             curr_error_sum[idx] += curr_error;
 4390              		.loc 1 1422 0
 4391 01ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4392 01cc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4393 01ce 3949     		ldr	r1, .L363+36
 4394 01d0 51F82210 		ldr	r1, [r1, r2, lsl #2]
 4395 01d4 BA68     		ldr	r2, [r7, #8]
 4396 01d6 0A44     		add	r2, r2, r1
 4397 01d8 3649     		ldr	r1, .L363+36
 4398 01da 41F82320 		str	r2, [r1, r3, lsl #2]
1423:..\src/interruptions.c ****             
1424:..\src/interruptions.c ****             if (curr_error_sum[idx] > CURR_INTEGRAL_SAT_LIMIT)
 4399              		.loc 1 1424 0
 4400 01de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4401 01e0 344A     		ldr	r2, .L363+36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 105


 4402 01e2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4403 01e6 344A     		ldr	r2, .L363+40
 4404 01e8 9342     		cmp	r3, r2
 4405 01ea 05DD     		ble	.L288
1425:..\src/interruptions.c ****                 curr_error_sum[idx] = CURR_INTEGRAL_SAT_LIMIT;
 4406              		.loc 1 1425 0
 4407 01ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4408 01ee 314A     		ldr	r2, .L363+36
 4409 01f0 3149     		ldr	r1, .L363+40
 4410 01f2 42F82310 		str	r1, [r2, r3, lsl #2]
 4411 01f6 0BE0     		b	.L289
 4412              	.L288:
1426:..\src/interruptions.c ****             else {
1427:..\src/interruptions.c ****                 if (curr_error_sum[idx] < -CURR_INTEGRAL_SAT_LIMIT)
 4413              		.loc 1 1427 0
 4414 01f8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4415 01fa 2E4A     		ldr	r2, .L363+36
 4416 01fc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4417 0200 2E4A     		ldr	r2, .L363+44
 4418 0202 9342     		cmp	r3, r2
 4419 0204 04DA     		bge	.L289
1428:..\src/interruptions.c ****                     curr_error_sum[idx] = -CURR_INTEGRAL_SAT_LIMIT;
 4420              		.loc 1 1428 0
 4421 0206 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4422 0208 2A4A     		ldr	r2, .L363+36
 4423 020a 2C49     		ldr	r1, .L363+44
 4424 020c 42F82310 		str	r1, [r2, r3, lsl #2]
 4425              	.L289:
1429:..\src/interruptions.c ****             }
1430:..\src/interruptions.c **** 
1431:..\src/interruptions.c ****             // ----- current PID control -----
1432:..\src/interruptions.c **** 
1433:..\src/interruptions.c ****             pwm_input = 0;
 4426              		.loc 1 1433 0
 4427 0210 0023     		movs	r3, #0
 4428 0212 FB64     		str	r3, [r7, #76]
1434:..\src/interruptions.c **** 
1435:..\src/interruptions.c ****             // Proportional
1436:..\src/interruptions.c ****             if (k_p_c_dl != 0)
 4429              		.loc 1 1436 0
 4430 0214 BB69     		ldr	r3, [r7, #24]
 4431 0216 002B     		cmp	r3, #0
 4432 0218 07D0     		beq	.L290
1437:..\src/interruptions.c ****                 pwm_input += (int32)(k_p_c_dl * curr_error) >> 16;
 4433              		.loc 1 1437 0
 4434 021a BB69     		ldr	r3, [r7, #24]
 4435 021c BA68     		ldr	r2, [r7, #8]
 4436 021e 02FB03F3 		mul	r3, r2, r3
 4437 0222 1B14     		asrs	r3, r3, #16
 4438 0224 FA6C     		ldr	r2, [r7, #76]
 4439 0226 1344     		add	r3, r3, r2
 4440 0228 FB64     		str	r3, [r7, #76]
 4441              	.L290:
1438:..\src/interruptions.c **** 
1439:..\src/interruptions.c ****             // Integral
1440:..\src/interruptions.c ****             if (k_i_c_dl != 0)
 4442              		.loc 1 1440 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 106


 4443 022a 7B69     		ldr	r3, [r7, #20]
 4444 022c 002B     		cmp	r3, #0
 4445 022e 0AD0     		beq	.L291
1441:..\src/interruptions.c ****                 pwm_input += (int32)(k_i_c_dl * curr_error_sum[idx]) >> 16;
 4446              		.loc 1 1441 0
 4447 0230 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4448 0232 204A     		ldr	r2, .L363+36
 4449 0234 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4450 0238 7A69     		ldr	r2, [r7, #20]
 4451 023a 02FB03F3 		mul	r3, r2, r3
 4452 023e 1B14     		asrs	r3, r3, #16
 4453 0240 FA6C     		ldr	r2, [r7, #76]
 4454 0242 1344     		add	r3, r3, r2
 4455 0244 FB64     		str	r3, [r7, #76]
 4456              	.L291:
1442:..\src/interruptions.c **** 
1443:..\src/interruptions.c ****             // Derivative
1444:..\src/interruptions.c ****             if (k_d_c_dl != 0)
 4457              		.loc 1 1444 0
 4458 0246 3B69     		ldr	r3, [r7, #16]
 4459 0248 002B     		cmp	r3, #0
 4460 024a 0CD0     		beq	.L292
1445:..\src/interruptions.c ****                 pwm_input += (int32)(k_d_c_dl * (curr_error - prev_curr_err[idx])) >> 16;
 4461              		.loc 1 1445 0
 4462 024c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4463 024e 1C4A     		ldr	r2, .L363+48
 4464 0250 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4465 0254 BA68     		ldr	r2, [r7, #8]
 4466 0256 D31A     		subs	r3, r2, r3
 4467 0258 3A69     		ldr	r2, [r7, #16]
 4468 025a 02FB03F3 		mul	r3, r2, r3
 4469 025e 1B14     		asrs	r3, r3, #16
 4470 0260 FA6C     		ldr	r2, [r7, #76]
 4471 0262 1344     		add	r3, r3, r2
 4472 0264 FB64     		str	r3, [r7, #76]
 4473              	.L292:
1446:..\src/interruptions.c ****              
1447:..\src/interruptions.c ****             // Limit PWM in range (specific per motor driver)
1448:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_BRUSHLESS) {
 4474              		.loc 1 1448 0
 4475 0266 7B6C     		ldr	r3, [r7, #68]
 4476 0268 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 4477 026c 022B     		cmp	r3, #2
 4478 026e 2BD1     		bne	.L293
1449:..\src/interruptions.c ****                 if(pwm_input > PWM_MAX_VALUE_ESC) 
 4479              		.loc 1 1449 0
 4480 0270 FB6C     		ldr	r3, [r7, #76]
 4481 0272 40F6A932 		movw	r2, #2985
 4482 0276 9342     		cmp	r3, r2
 4483 0278 02DD     		ble	.L294
1450:..\src/interruptions.c ****                     pwm_input =  PWM_MAX_VALUE_ESC;
 4484              		.loc 1 1450 0
 4485 027a 40F6A933 		movw	r3, #2985
 4486 027e FB64     		str	r3, [r7, #76]
 4487              	.L294:
1451:..\src/interruptions.c ****                 if(pwm_input < -PWM_MAX_VALUE_ESC) 
 4488              		.loc 1 1451 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 107


 4489 0280 FB6C     		ldr	r3, [r7, #76]
 4490 0282 104A     		ldr	r2, .L363+52
 4491 0284 9342     		cmp	r3, r2
 4492 0286 2BDA     		bge	.L296
1452:..\src/interruptions.c ****                     pwm_input = -PWM_MAX_VALUE_ESC;
 4493              		.loc 1 1452 0
 4494 0288 0E4B     		ldr	r3, .L363+52
 4495 028a FB64     		str	r3, [r7, #76]
 4496 028c 28E0     		b	.L296
 4497              	.L364:
 4498 028e 00BF     		.align	2
 4499              	.L363:
 4500 0290 00000000 		.word	c_mem
 4501 0294 00000000 		.word	g_ref
 4502 0298 00000000 		.word	g_refOld
 4503 029c 00000000 		.word	g_meas
 4504 02a0 AC000000 		.word	pos_error_sum.10606
 4505 02a4 80F0FA02 		.word	50000000
 4506 02a8 800F05FD 		.word	-50000000
 4507 02ac B4000000 		.word	prev_pos_err.10608
 4508 02b0 BC000000 		.word	motor_dir.10611
 4509 02b4 C0000000 		.word	curr_error_sum.10607
 4510 02b8 A0860100 		.word	100000
 4511 02bc 6079FEFF 		.word	-100000
 4512 02c0 C8000000 		.word	prev_curr_err.10609
 4513 02c4 57F4FFFF 		.word	-2985
 4514              	.L293:
1453:..\src/interruptions.c ****             }
1454:..\src/interruptions.c ****             else {
1455:..\src/interruptions.c ****                 if(pwm_input > PWM_MAX_VALUE_DC) 
 4515              		.loc 1 1455 0
 4516 02c8 FB6C     		ldr	r3, [r7, #76]
 4517 02ca 642B     		cmp	r3, #100
 4518 02cc 01DD     		ble	.L297
1456:..\src/interruptions.c ****                     pwm_input =  PWM_MAX_VALUE_DC;
 4519              		.loc 1 1456 0
 4520 02ce 6423     		movs	r3, #100
 4521 02d0 FB64     		str	r3, [r7, #76]
 4522              	.L297:
1457:..\src/interruptions.c ****                 if(pwm_input < -PWM_MAX_VALUE_DC) 
 4523              		.loc 1 1457 0
 4524 02d2 FB6C     		ldr	r3, [r7, #76]
 4525 02d4 13F1640F 		cmn	r3, #100
 4526 02d8 02DA     		bge	.L296
1458:..\src/interruptions.c ****                     pwm_input = -PWM_MAX_VALUE_DC;
 4527              		.loc 1 1458 0
 4528 02da 6FF06303 		mvn	r3, #99
 4529 02de FB64     		str	r3, [r7, #76]
 4530              	.L296:
1459:..\src/interruptions.c ****             }
1460:..\src/interruptions.c **** 
1461:..\src/interruptions.c ****             // Update previous current
1462:..\src/interruptions.c ****             prev_curr_err[idx] = curr_error;
 4531              		.loc 1 1462 0
 4532 02e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4533 02e2 A049     		ldr	r1, .L365
 4534 02e4 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 108


 4535 02e6 41F82320 		str	r2, [r1, r3, lsl #2]
1463:..\src/interruptions.c **** 
1464:..\src/interruptions.c ****         break;
 4536              		.loc 1 1464 0
 4537 02ea 54E1     		b	.L273
 4538              	.L274:
1465:..\src/interruptions.c **** 
1466:..\src/interruptions.c ****         // ============================== POSITION CONTROL =====================
1467:..\src/interruptions.c ****         case CONTROL_ANGLE:
1468:..\src/interruptions.c ****             pos_error = g_ref[idx].pos - g_meas[ENC_L].pos[0];
 4539              		.loc 1 1468 0
 4540 02ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4541 02ee 9E4A     		ldr	r2, .L365+4
 4542 02f0 1B01     		lsls	r3, r3, #4
 4543 02f2 1344     		add	r3, r3, r2
 4544 02f4 1A68     		ldr	r2, [r3]
 4545 02f6 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 4546 02fa 9C49     		ldr	r1, .L365+8
 4547 02fc 3420     		movs	r0, #52
 4548 02fe 00FB03F3 		mul	r3, r0, r3
 4549 0302 0B44     		add	r3, r3, r1
 4550 0304 1B68     		ldr	r3, [r3]
 4551 0306 D31A     		subs	r3, r2, r3
 4552 0308 FB60     		str	r3, [r7, #12]
1469:..\src/interruptions.c **** 
1470:..\src/interruptions.c ****             pos_error_sum[idx] += pos_error;
 4553              		.loc 1 1470 0
 4554 030a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4555 030c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4556 030e 9849     		ldr	r1, .L365+12
 4557 0310 51F82210 		ldr	r1, [r1, r2, lsl #2]
 4558 0314 FA68     		ldr	r2, [r7, #12]
 4559 0316 0A44     		add	r2, r2, r1
 4560 0318 9549     		ldr	r1, .L365+12
 4561 031a 41F82320 		str	r2, [r1, r3, lsl #2]
1471:..\src/interruptions.c **** 
1472:..\src/interruptions.c ****             // anti-windup (for integral control)
1473:..\src/interruptions.c ****             if (pos_error_sum[idx] > ANTI_WINDUP)
 4562              		.loc 1 1473 0
 4563 031e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4564 0320 934A     		ldr	r2, .L365+12
 4565 0322 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4566 0326 B3F57A7F 		cmp	r3, #1000
 4567 032a 06DD     		ble	.L298
1474:..\src/interruptions.c ****                 pos_error_sum[idx] = ANTI_WINDUP;
 4568              		.loc 1 1474 0
 4569 032c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4570 032e 904A     		ldr	r2, .L365+12
 4571 0330 4FF47A71 		mov	r1, #1000
 4572 0334 42F82310 		str	r1, [r2, r3, lsl #2]
 4573 0338 0BE0     		b	.L299
 4574              	.L298:
1475:..\src/interruptions.c ****             else {
1476:..\src/interruptions.c **** 				if (pos_error_sum[idx] < -ANTI_WINDUP)
 4575              		.loc 1 1476 0
 4576 033a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4577 033c 8C4A     		ldr	r2, .L365+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 109


 4578 033e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4579 0342 13F57A7F 		cmn	r3, #1000
 4580 0346 04DA     		bge	.L299
1477:..\src/interruptions.c ****                 	pos_error_sum[idx] = -ANTI_WINDUP;
 4581              		.loc 1 1477 0
 4582 0348 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4583 034a 894A     		ldr	r2, .L365+12
 4584 034c 8949     		ldr	r1, .L365+16
 4585 034e 42F82310 		str	r1, [r2, r3, lsl #2]
 4586              	.L299:
1478:..\src/interruptions.c ****             }
1479:..\src/interruptions.c **** 
1480:..\src/interruptions.c ****             // Proportional
1481:..\src/interruptions.c ****             if (k_p != 0) 
 4587              		.loc 1 1481 0
 4588 0352 FB6B     		ldr	r3, [r7, #60]
 4589 0354 002B     		cmp	r3, #0
 4590 0356 05D0     		beq	.L300
1482:..\src/interruptions.c ****                 pwm_input = (int32)(k_p * pos_error) >> 16;
 4591              		.loc 1 1482 0
 4592 0358 FB6B     		ldr	r3, [r7, #60]
 4593 035a FA68     		ldr	r2, [r7, #12]
 4594 035c 02FB03F3 		mul	r3, r2, r3
 4595 0360 1B14     		asrs	r3, r3, #16
 4596 0362 FB64     		str	r3, [r7, #76]
 4597              	.L300:
1483:..\src/interruptions.c ****             
1484:..\src/interruptions.c **** 
1485:..\src/interruptions.c ****             // Integral
1486:..\src/interruptions.c ****             if (k_i != 0) 
 4598              		.loc 1 1486 0
 4599 0364 BB6B     		ldr	r3, [r7, #56]
 4600 0366 002B     		cmp	r3, #0
 4601 0368 0AD0     		beq	.L301
1487:..\src/interruptions.c ****                 pwm_input += (int32)(k_i * pos_error_sum[idx]) >> 16;
 4602              		.loc 1 1487 0
 4603 036a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4604 036c 804A     		ldr	r2, .L365+12
 4605 036e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4606 0372 BA6B     		ldr	r2, [r7, #56]
 4607 0374 02FB03F3 		mul	r3, r2, r3
 4608 0378 1B14     		asrs	r3, r3, #16
 4609 037a FA6C     		ldr	r2, [r7, #76]
 4610 037c 1344     		add	r3, r3, r2
 4611 037e FB64     		str	r3, [r7, #76]
 4612              	.L301:
1488:..\src/interruptions.c ****             
1489:..\src/interruptions.c **** 
1490:..\src/interruptions.c ****             // Derivative
1491:..\src/interruptions.c ****             if (k_d != 0) 
 4613              		.loc 1 1491 0
 4614 0380 7B6B     		ldr	r3, [r7, #52]
 4615 0382 002B     		cmp	r3, #0
 4616 0384 0CD0     		beq	.L302
1492:..\src/interruptions.c ****                 pwm_input += (int32)(k_d * (pos_error - prev_pos_err[idx])) >> 16;
 4617              		.loc 1 1492 0
 4618 0386 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 110


 4619 0388 7B4A     		ldr	r2, .L365+20
 4620 038a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4621 038e FA68     		ldr	r2, [r7, #12]
 4622 0390 D31A     		subs	r3, r2, r3
 4623 0392 7A6B     		ldr	r2, [r7, #52]
 4624 0394 02FB03F3 		mul	r3, r2, r3
 4625 0398 1B14     		asrs	r3, r3, #16
 4626 039a FA6C     		ldr	r2, [r7, #76]
 4627 039c 1344     		add	r3, r3, r2
 4628 039e FB64     		str	r3, [r7, #76]
 4629              	.L302:
1493:..\src/interruptions.c ****             
1494:..\src/interruptions.c **** 
1495:..\src/interruptions.c ****             // Update measure
1496:..\src/interruptions.c ****             prev_pos_err[idx] = pos_error;
 4630              		.loc 1 1496 0
 4631 03a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4632 03a2 7549     		ldr	r1, .L365+20
 4633 03a4 FA68     		ldr	r2, [r7, #12]
 4634 03a6 41F82320 		str	r2, [r1, r3, lsl #2]
1497:..\src/interruptions.c **** 
1498:..\src/interruptions.c ****             if (pwm_input > 0)
 4635              		.loc 1 1498 0
 4636 03aa FB6C     		ldr	r3, [r7, #76]
 4637 03ac 002B     		cmp	r3, #0
 4638 03ae 04DD     		ble	.L303
1499:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 4639              		.loc 1 1499 0
 4640 03b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4641 03b2 724A     		ldr	r2, .L365+24
 4642 03b4 0121     		movs	r1, #1
 4643 03b6 D154     		strb	r1, [r2, r3]
1500:..\src/interruptions.c ****             else
1501:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
1502:..\src/interruptions.c **** 
1503:..\src/interruptions.c ****         break;
 4644              		.loc 1 1503 0
 4645 03b8 EDE0     		b	.L273
 4646              	.L303:
1501:..\src/interruptions.c **** 
 4647              		.loc 1 1501 0
 4648 03ba FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4649 03bc 6F4A     		ldr	r2, .L365+24
 4650 03be 0021     		movs	r1, #0
 4651 03c0 D154     		strb	r1, [r2, r3]
 4652              		.loc 1 1503 0
 4653 03c2 E8E0     		b	.L273
 4654              	.L277:
1504:..\src/interruptions.c **** 
1505:..\src/interruptions.c ****         // ========================== CURRENT CONTROL ==========================
1506:..\src/interruptions.c ****         case CONTROL_CURRENT:
1507:..\src/interruptions.c ****             if(g_ref[idx].onoff && tension_valid) {
 4655              		.loc 1 1507 0
 4656 03c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4657 03c6 684A     		ldr	r2, .L365+4
 4658 03c8 1B01     		lsls	r3, r3, #4
 4659 03ca 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 111


 4660 03cc 0C33     		adds	r3, r3, #12
 4661 03ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4662 03d0 002B     		cmp	r3, #0
 4663 03d2 00F0C480 		beq	.L360
 4664              		.loc 1 1507 0 is_stmt 0 discriminator 1
 4665 03d6 6A4B     		ldr	r3, .L365+28
 4666 03d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4667 03da 002B     		cmp	r3, #0
 4668 03dc 00F0BF80 		beq	.L360
1508:..\src/interruptions.c ****                 
1509:..\src/interruptions.c ****                 i_ref = g_ref[idx].curr;
 4669              		.loc 1 1509 0 is_stmt 1
 4670 03e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4671 03e2 614A     		ldr	r2, .L365+4
 4672 03e4 1B01     		lsls	r3, r3, #4
 4673 03e6 1344     		add	r3, r3, r2
 4674 03e8 0433     		adds	r3, r3, #4
 4675 03ea 1B68     		ldr	r3, [r3]
 4676 03ec BB64     		str	r3, [r7, #72]
1510:..\src/interruptions.c **** 
1511:..\src/interruptions.c ****                 if (i_ref > MOT->current_limit) 
 4677              		.loc 1 1511 0
 4678 03ee 7B6C     		ldr	r3, [r7, #68]
 4679 03f0 B3F95C30 		ldrsh	r3, [r3, #92]
 4680 03f4 1A46     		mov	r2, r3
 4681 03f6 BB6C     		ldr	r3, [r7, #72]
 4682 03f8 9A42     		cmp	r2, r3
 4683 03fa 04DA     		bge	.L306
1512:..\src/interruptions.c ****                     i_ref = MOT->current_limit;
 4684              		.loc 1 1512 0
 4685 03fc 7B6C     		ldr	r3, [r7, #68]
 4686 03fe B3F95C30 		ldrsh	r3, [r3, #92]
 4687 0402 BB64     		str	r3, [r7, #72]
 4688 0404 0BE0     		b	.L307
 4689              	.L306:
1513:..\src/interruptions.c ****                 else {
1514:..\src/interruptions.c ****                     if (i_ref < -MOT->current_limit)
 4690              		.loc 1 1514 0
 4691 0406 7B6C     		ldr	r3, [r7, #68]
 4692 0408 B3F95C30 		ldrsh	r3, [r3, #92]
 4693 040c 5A42     		negs	r2, r3
 4694 040e BB6C     		ldr	r3, [r7, #72]
 4695 0410 9A42     		cmp	r2, r3
 4696 0412 04DD     		ble	.L307
1515:..\src/interruptions.c ****                         i_ref = -MOT->current_limit;
 4697              		.loc 1 1515 0
 4698 0414 7B6C     		ldr	r3, [r7, #68]
 4699 0416 B3F95C30 		ldrsh	r3, [r3, #92]
 4700 041a 5B42     		negs	r3, r3
 4701 041c BB64     		str	r3, [r7, #72]
 4702              	.L307:
1516:..\src/interruptions.c ****                 }
1517:..\src/interruptions.c ****                 
1518:..\src/interruptions.c ****                 // current error
1519:..\src/interruptions.c ****                 curr_error = i_ref - g_meas[ENC_L].curr;            
 4703              		.loc 1 1519 0
 4704 041e 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 112


 4705 0422 524A     		ldr	r2, .L365+8
 4706 0424 3421     		movs	r1, #52
 4707 0426 01FB03F3 		mul	r3, r1, r3
 4708 042a 1344     		add	r3, r3, r2
 4709 042c 0C33     		adds	r3, r3, #12
 4710 042e 1B68     		ldr	r3, [r3]
 4711 0430 BA6C     		ldr	r2, [r7, #72]
 4712 0432 D31A     		subs	r3, r2, r3
 4713 0434 BB60     		str	r3, [r7, #8]
1520:..\src/interruptions.c ****                 curr_error_sum[idx] += curr_error;
 4714              		.loc 1 1520 0
 4715 0436 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4716 0438 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4717 043a 5249     		ldr	r1, .L365+32
 4718 043c 51F82210 		ldr	r1, [r1, r2, lsl #2]
 4719 0440 BA68     		ldr	r2, [r7, #8]
 4720 0442 0A44     		add	r2, r2, r1
 4721 0444 4F49     		ldr	r1, .L365+32
 4722 0446 41F82320 		str	r2, [r1, r3, lsl #2]
1521:..\src/interruptions.c ****                 
1522:..\src/interruptions.c ****                 if (curr_error_sum[idx] > CURR_INTEGRAL_SAT_LIMIT)
 4723              		.loc 1 1522 0
 4724 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4725 044c 4D4A     		ldr	r2, .L365+32
 4726 044e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4727 0452 4D4A     		ldr	r2, .L365+36
 4728 0454 9342     		cmp	r3, r2
 4729 0456 05DD     		ble	.L308
1523:..\src/interruptions.c ****                     curr_error_sum[idx] = CURR_INTEGRAL_SAT_LIMIT;
 4730              		.loc 1 1523 0
 4731 0458 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4732 045a 4A4A     		ldr	r2, .L365+32
 4733 045c 4A49     		ldr	r1, .L365+36
 4734 045e 42F82310 		str	r1, [r2, r3, lsl #2]
 4735 0462 0BE0     		b	.L309
 4736              	.L308:
1524:..\src/interruptions.c ****                 else {
1525:..\src/interruptions.c ****                     if (curr_error_sum[idx] < -CURR_INTEGRAL_SAT_LIMIT) 
 4737              		.loc 1 1525 0
 4738 0464 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4739 0466 474A     		ldr	r2, .L365+32
 4740 0468 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4741 046c 474A     		ldr	r2, .L365+40
 4742 046e 9342     		cmp	r3, r2
 4743 0470 04DA     		bge	.L309
1526:..\src/interruptions.c ****                         curr_error_sum[idx] = -CURR_INTEGRAL_SAT_LIMIT;
 4744              		.loc 1 1526 0
 4745 0472 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4746 0474 434A     		ldr	r2, .L365+32
 4747 0476 4549     		ldr	r1, .L365+40
 4748 0478 42F82310 		str	r1, [r2, r3, lsl #2]
 4749              	.L309:
1527:..\src/interruptions.c ****                 }
1528:..\src/interruptions.c **** 
1529:..\src/interruptions.c ****                 pwm_input = 0;
 4750              		.loc 1 1529 0
 4751 047c 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 113


 4752 047e FB64     		str	r3, [r7, #76]
1530:..\src/interruptions.c **** 
1531:..\src/interruptions.c ****                 // Proportional
1532:..\src/interruptions.c ****                 if (k_p_c != 0)
 4753              		.loc 1 1532 0
 4754 0480 3B6B     		ldr	r3, [r7, #48]
 4755 0482 002B     		cmp	r3, #0
 4756 0484 07D0     		beq	.L310
1533:..\src/interruptions.c ****                     pwm_input += (int32)(k_p_c * curr_error) >> 16;
 4757              		.loc 1 1533 0
 4758 0486 3B6B     		ldr	r3, [r7, #48]
 4759 0488 BA68     		ldr	r2, [r7, #8]
 4760 048a 02FB03F3 		mul	r3, r2, r3
 4761 048e 1B14     		asrs	r3, r3, #16
 4762 0490 FA6C     		ldr	r2, [r7, #76]
 4763 0492 1344     		add	r3, r3, r2
 4764 0494 FB64     		str	r3, [r7, #76]
 4765              	.L310:
1534:..\src/interruptions.c **** 
1535:..\src/interruptions.c ****                 // Integral
1536:..\src/interruptions.c ****                 if (k_i_c != 0)
 4766              		.loc 1 1536 0
 4767 0496 FB6A     		ldr	r3, [r7, #44]
 4768 0498 002B     		cmp	r3, #0
 4769 049a 0AD0     		beq	.L311
1537:..\src/interruptions.c ****                     pwm_input += (int32)(k_i_c * curr_error_sum[idx]) >> 16;
 4770              		.loc 1 1537 0
 4771 049c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4772 049e 394A     		ldr	r2, .L365+32
 4773 04a0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4774 04a4 FA6A     		ldr	r2, [r7, #44]
 4775 04a6 02FB03F3 		mul	r3, r2, r3
 4776 04aa 1B14     		asrs	r3, r3, #16
 4777 04ac FA6C     		ldr	r2, [r7, #76]
 4778 04ae 1344     		add	r3, r3, r2
 4779 04b0 FB64     		str	r3, [r7, #76]
 4780              	.L311:
1538:..\src/interruptions.c **** 
1539:..\src/interruptions.c ****                 // Derivative
1540:..\src/interruptions.c ****                 if (k_d_c != 0)
 4781              		.loc 1 1540 0
 4782 04b2 BB6A     		ldr	r3, [r7, #40]
 4783 04b4 002B     		cmp	r3, #0
 4784 04b6 0CD0     		beq	.L312
1541:..\src/interruptions.c ****                     pwm_input += (int32)(k_d_c * (curr_error - prev_curr_err[idx])) >> 16;
 4785              		.loc 1 1541 0
 4786 04b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4787 04ba 2A4A     		ldr	r2, .L365
 4788 04bc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4789 04c0 BA68     		ldr	r2, [r7, #8]
 4790 04c2 D31A     		subs	r3, r2, r3
 4791 04c4 BA6A     		ldr	r2, [r7, #40]
 4792 04c6 02FB03F3 		mul	r3, r2, r3
 4793 04ca 1B14     		asrs	r3, r3, #16
 4794 04cc FA6C     		ldr	r2, [r7, #76]
 4795 04ce 1344     		add	r3, r3, r2
 4796 04d0 FB64     		str	r3, [r7, #76]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 114


 4797              	.L312:
1542:..\src/interruptions.c ****                 
1543:..\src/interruptions.c ****                 prev_curr_err[idx] = curr_error;
 4798              		.loc 1 1543 0
 4799 04d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4800 04d4 2349     		ldr	r1, .L365
 4801 04d6 BA68     		ldr	r2, [r7, #8]
 4802 04d8 41F82320 		str	r2, [r1, r3, lsl #2]
1544:..\src/interruptions.c ****                 
1545:..\src/interruptions.c ****                 if (pwm_input >= 0) 
 4803              		.loc 1 1545 0
 4804 04dc FB6C     		ldr	r3, [r7, #76]
 4805 04de 002B     		cmp	r3, #0
 4806 04e0 04DB     		blt	.L313
1546:..\src/interruptions.c ****                     motor_dir[idx] = TRUE;
 4807              		.loc 1 1546 0
 4808 04e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4809 04e4 254A     		ldr	r2, .L365+24
 4810 04e6 0121     		movs	r1, #1
 4811 04e8 D154     		strb	r1, [r2, r3]
1547:..\src/interruptions.c ****                 else
1548:..\src/interruptions.c ****                     motor_dir[idx] = FALSE;
1549:..\src/interruptions.c ****             }
1550:..\src/interruptions.c ****         break;
 4812              		.loc 1 1550 0
 4813 04ea 38E0     		b	.L360
 4814              	.L313:
1548:..\src/interruptions.c ****             }
 4815              		.loc 1 1548 0
 4816 04ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4817 04ee 234A     		ldr	r2, .L365+24
 4818 04f0 0021     		movs	r1, #0
 4819 04f2 D154     		strb	r1, [r2, r3]
 4820              		.loc 1 1550 0
 4821 04f4 33E0     		b	.L360
 4822              	.L276:
1551:..\src/interruptions.c ****         
1552:..\src/interruptions.c ****         // ================= DIRECT PWM CONTROL ================================
1553:..\src/interruptions.c ****         case CONTROL_PWM:
1554:..\src/interruptions.c **** 
1555:..\src/interruptions.c ****             pwm_input = g_ref[idx].pwm;
 4823              		.loc 1 1555 0
 4824 04f6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4825 04f8 1B4A     		ldr	r2, .L365+4
 4826 04fa 1B01     		lsls	r3, r3, #4
 4827 04fc 1344     		add	r3, r3, r2
 4828 04fe 0833     		adds	r3, r3, #8
 4829 0500 1B68     		ldr	r3, [r3]
 4830 0502 FB64     		str	r3, [r7, #76]
1556:..\src/interruptions.c **** 
1557:..\src/interruptions.c ****             if (pwm_input > 0) 
 4831              		.loc 1 1557 0
 4832 0504 FB6C     		ldr	r3, [r7, #76]
 4833 0506 002B     		cmp	r3, #0
 4834 0508 04DD     		ble	.L314
1558:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 4835              		.loc 1 1558 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 115


 4836 050a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4837 050c 1B4A     		ldr	r2, .L365+24
 4838 050e 0121     		movs	r1, #1
 4839 0510 D154     		strb	r1, [r2, r3]
 4840 0512 03E0     		b	.L315
 4841              	.L314:
1559:..\src/interruptions.c ****             else 
1560:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
 4842              		.loc 1 1560 0
 4843 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4844 0516 194A     		ldr	r2, .L365+24
 4845 0518 0021     		movs	r1, #0
 4846 051a D154     		strb	r1, [r2, r3]
 4847              	.L315:
1561:..\src/interruptions.c ****             
1562:..\src/interruptions.c ****           
1563:..\src/interruptions.c ****             // Limit PWM in range (specific per motor driver)
1564:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_BRUSHLESS) {
 4848              		.loc 1 1564 0
 4849 051c 7B6C     		ldr	r3, [r7, #68]
 4850 051e 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 4851 0522 022B     		cmp	r3, #2
 4852 0524 0ED1     		bne	.L316
1565:..\src/interruptions.c ****                 if(pwm_input > PWM_MAX_VALUE_ESC) 
 4853              		.loc 1 1565 0
 4854 0526 FB6C     		ldr	r3, [r7, #76]
 4855 0528 40F6A932 		movw	r2, #2985
 4856 052c 9342     		cmp	r3, r2
 4857 052e 02DD     		ble	.L317
1566:..\src/interruptions.c ****                     pwm_input =  PWM_MAX_VALUE_ESC;
 4858              		.loc 1 1566 0
 4859 0530 40F6A933 		movw	r3, #2985
 4860 0534 FB64     		str	r3, [r7, #76]
 4861              	.L317:
1567:..\src/interruptions.c ****                 if(pwm_input < -PWM_MAX_VALUE_ESC) 
 4862              		.loc 1 1567 0
 4863 0536 FB6C     		ldr	r3, [r7, #76]
 4864 0538 154A     		ldr	r2, .L365+44
 4865 053a 9342     		cmp	r3, r2
 4866 053c 2ADA     		bge	.L361
1568:..\src/interruptions.c ****                     pwm_input = -PWM_MAX_VALUE_ESC;
 4867              		.loc 1 1568 0
 4868 053e 144B     		ldr	r3, .L365+44
 4869 0540 FB64     		str	r3, [r7, #76]
1569:..\src/interruptions.c ****             }
1570:..\src/interruptions.c ****             else {
1571:..\src/interruptions.c ****                 if(pwm_input > PWM_MAX_VALUE_DC) 
1572:..\src/interruptions.c ****                     pwm_input =  PWM_MAX_VALUE_DC;
1573:..\src/interruptions.c ****                 if(pwm_input < -PWM_MAX_VALUE_DC) 
1574:..\src/interruptions.c ****                     pwm_input = -PWM_MAX_VALUE_DC;
1575:..\src/interruptions.c ****             }
1576:..\src/interruptions.c **** 
1577:..\src/interruptions.c ****         break;
 4870              		.loc 1 1577 0
 4871 0542 27E0     		b	.L361
 4872              	.L316:
1571:..\src/interruptions.c ****                     pwm_input =  PWM_MAX_VALUE_DC;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 116


 4873              		.loc 1 1571 0
 4874 0544 FB6C     		ldr	r3, [r7, #76]
 4875 0546 642B     		cmp	r3, #100
 4876 0548 01DD     		ble	.L320
1572:..\src/interruptions.c ****                 if(pwm_input < -PWM_MAX_VALUE_DC) 
 4877              		.loc 1 1572 0
 4878 054a 6423     		movs	r3, #100
 4879 054c FB64     		str	r3, [r7, #76]
 4880              	.L320:
1573:..\src/interruptions.c ****                     pwm_input = -PWM_MAX_VALUE_DC;
 4881              		.loc 1 1573 0
 4882 054e FB6C     		ldr	r3, [r7, #76]
 4883 0550 13F1640F 		cmn	r3, #100
 4884 0554 1EDA     		bge	.L361
1574:..\src/interruptions.c ****             }
 4885              		.loc 1 1574 0
 4886 0556 6FF06303 		mvn	r3, #99
 4887 055a FB64     		str	r3, [r7, #76]
 4888              		.loc 1 1577 0
 4889 055c 1AE0     		b	.L361
 4890              	.L360:
1550:..\src/interruptions.c ****         
 4891              		.loc 1 1550 0
 4892 055e 00BF     		nop
 4893 0560 19E0     		b	.L273
 4894              	.L366:
 4895 0562 00BF     		.align	2
 4896              	.L365:
 4897 0564 C8000000 		.word	prev_curr_err.10609
 4898 0568 00000000 		.word	g_ref
 4899 056c 00000000 		.word	g_meas
 4900 0570 AC000000 		.word	pos_error_sum.10606
 4901 0574 18FCFFFF 		.word	-1000
 4902 0578 B4000000 		.word	prev_pos_err.10608
 4903 057c BC000000 		.word	motor_dir.10611
 4904 0580 00000000 		.word	tension_valid
 4905 0584 C0000000 		.word	curr_error_sum.10607
 4906 0588 A0860100 		.word	100000
 4907 058c 6079FEFF 		.word	-100000
 4908 0590 57F4FFFF 		.word	-2985
 4909              	.L361:
 4910              		.loc 1 1577 0
 4911 0594 00BF     		nop
 4912              	.L273:
1578:..\src/interruptions.c ****             
1579:..\src/interruptions.c ****     }
1580:..\src/interruptions.c **** 
1581:..\src/interruptions.c ****     ////////////////////////////////////////////////////////////////////////////
1582:..\src/interruptions.c ****      ////////////////////////////////////////////////////////////////////////////
1583:..\src/interruptions.c **** 
1584:..\src/interruptions.c ****     // Limit PWM in range (specific per motor driver)
1585:..\src/interruptions.c ****     if (MOT->motor_driver_type == DRIVER_BRUSHLESS) {
 4913              		.loc 1 1585 0
 4914 0596 7B6C     		ldr	r3, [r7, #68]
 4915 0598 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 4916 059c 022B     		cmp	r3, #2
 4917 059e 23D1     		bne	.L321
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 117


1586:..\src/interruptions.c ****         if(pwm_input > PWM_MAX_VALUE_ESC) 
 4918              		.loc 1 1586 0
 4919 05a0 FB6C     		ldr	r3, [r7, #76]
 4920 05a2 40F6A932 		movw	r2, #2985
 4921 05a6 9342     		cmp	r3, r2
 4922 05a8 02DD     		ble	.L322
1587:..\src/interruptions.c ****             pwm_input =  PWM_MAX_VALUE_ESC;
 4923              		.loc 1 1587 0
 4924 05aa 40F6A933 		movw	r3, #2985
 4925 05ae FB64     		str	r3, [r7, #76]
 4926              	.L322:
1588:..\src/interruptions.c ****         if(pwm_input < -PWM_MAX_VALUE_ESC) 
 4927              		.loc 1 1588 0
 4928 05b0 FB6C     		ldr	r3, [r7, #76]
 4929 05b2 B34A     		ldr	r2, .L367
 4930 05b4 9342     		cmp	r3, r2
 4931 05b6 01DA     		bge	.L323
1589:..\src/interruptions.c ****             pwm_input = -PWM_MAX_VALUE_ESC;
 4932              		.loc 1 1589 0
 4933 05b8 B14B     		ldr	r3, .L367
 4934 05ba FB64     		str	r3, [r7, #76]
 4935              	.L323:
1590:..\src/interruptions.c ****         
1591:..\src/interruptions.c ****         if (MOT->control_mode != CONTROL_PWM) 
 4936              		.loc 1 1591 0
 4937 05bc 7B6C     		ldr	r3, [r7, #68]
 4938 05be 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 4939 05c2 012B     		cmp	r3, #1
 4940 05c4 31D0     		beq	.L325
1592:..\src/interruptions.c ****             pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE_ESC) * dev_pwm_limit[idx]) >> 10;
 4941              		.loc 1 1592 0
 4942 05c6 FB6C     		ldr	r3, [r7, #76]
 4943 05c8 9B02     		lsls	r3, r3, #10
 4944 05ca AE4A     		ldr	r2, .L367+4
 4945 05cc 82FB0312 		smull	r1, r2, r2, r3
 4946 05d0 9211     		asrs	r2, r2, #6
 4947 05d2 DB17     		asrs	r3, r3, #31
 4948 05d4 D31A     		subs	r3, r2, r3
 4949 05d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4950 05d8 AB49     		ldr	r1, .L367+8
 4951 05da 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 4952 05de 02FB03F3 		mul	r3, r2, r3
 4953 05e2 9B12     		asrs	r3, r3, #10
 4954 05e4 FB64     		str	r3, [r7, #76]
 4955 05e6 20E0     		b	.L325
 4956              	.L321:
1593:..\src/interruptions.c ****     }
1594:..\src/interruptions.c ****     else {
1595:..\src/interruptions.c ****         if(pwm_input > PWM_MAX_VALUE_DC) 
 4957              		.loc 1 1595 0
 4958 05e8 FB6C     		ldr	r3, [r7, #76]
 4959 05ea 642B     		cmp	r3, #100
 4960 05ec 01DD     		ble	.L326
1596:..\src/interruptions.c ****             pwm_input =  PWM_MAX_VALUE_DC;
 4961              		.loc 1 1596 0
 4962 05ee 6423     		movs	r3, #100
 4963 05f0 FB64     		str	r3, [r7, #76]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 118


 4964              	.L326:
1597:..\src/interruptions.c ****         if(pwm_input < -PWM_MAX_VALUE_DC) 
 4965              		.loc 1 1597 0
 4966 05f2 FB6C     		ldr	r3, [r7, #76]
 4967 05f4 13F1640F 		cmn	r3, #100
 4968 05f8 02DA     		bge	.L327
1598:..\src/interruptions.c ****             pwm_input = -PWM_MAX_VALUE_DC;
 4969              		.loc 1 1598 0
 4970 05fa 6FF06303 		mvn	r3, #99
 4971 05fe FB64     		str	r3, [r7, #76]
 4972              	.L327:
1599:..\src/interruptions.c ****         
1600:..\src/interruptions.c ****         if (MOT->control_mode != CONTROL_PWM) 
 4973              		.loc 1 1600 0
 4974 0600 7B6C     		ldr	r3, [r7, #68]
 4975 0602 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 4976 0606 012B     		cmp	r3, #1
 4977 0608 0FD0     		beq	.L325
1601:..\src/interruptions.c ****             pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE_DC) * dev_pwm_limit[idx]) >> 10;
 4978              		.loc 1 1601 0
 4979 060a FB6C     		ldr	r3, [r7, #76]
 4980 060c 9B02     		lsls	r3, r3, #10
 4981 060e 9F4A     		ldr	r2, .L367+12
 4982 0610 82FB0312 		smull	r1, r2, r2, r3
 4983 0614 5211     		asrs	r2, r2, #5
 4984 0616 DB17     		asrs	r3, r3, #31
 4985 0618 D31A     		subs	r3, r2, r3
 4986 061a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4987 061c 9A49     		ldr	r1, .L367+8
 4988 061e 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 4989 0622 02FB03F3 		mul	r3, r2, r3
 4990 0626 9B12     		asrs	r3, r3, #10
 4991 0628 FB64     		str	r3, [r7, #76]
 4992              	.L325:
1602:..\src/interruptions.c ****     }
1603:..\src/interruptions.c **** 
1604:..\src/interruptions.c ****     //// RATE LIMITER ////
1605:..\src/interruptions.c ****     if((pwm_input-prev_pwm[idx]) > MOT->pwm_rate_limiter){
 4993              		.loc 1 1605 0
 4994 062a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4995 062c 984A     		ldr	r2, .L367+16
 4996 062e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4997 0632 FA6C     		ldr	r2, [r7, #76]
 4998 0634 D31A     		subs	r3, r2, r3
 4999 0636 7A6C     		ldr	r2, [r7, #68]
 5000 0638 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 5001 063c 9342     		cmp	r3, r2
 5002 063e 09DD     		ble	.L328
1606:..\src/interruptions.c ****         pwm_input =  prev_pwm[idx] + MOT->pwm_rate_limiter;
 5003              		.loc 1 1606 0
 5004 0640 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5005 0642 934A     		ldr	r2, .L367+16
 5006 0644 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5007 0648 7A6C     		ldr	r2, [r7, #68]
 5008 064a 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 5009 064e 1344     		add	r3, r3, r2
 5010 0650 FB64     		str	r3, [r7, #76]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 119


 5011 0652 14E0     		b	.L329
 5012              	.L328:
1607:..\src/interruptions.c ****     }
1608:..\src/interruptions.c ****     else {
1609:..\src/interruptions.c ****         if((pwm_input-prev_pwm[idx]) < -MOT->pwm_rate_limiter)
 5013              		.loc 1 1609 0
 5014 0654 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5015 0656 8E4A     		ldr	r2, .L367+16
 5016 0658 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5017 065c FA6C     		ldr	r2, [r7, #76]
 5018 065e D21A     		subs	r2, r2, r3
 5019 0660 7B6C     		ldr	r3, [r7, #68]
 5020 0662 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 5021 0666 5B42     		negs	r3, r3
 5022 0668 9A42     		cmp	r2, r3
 5023 066a 08DA     		bge	.L329
1610:..\src/interruptions.c ****             pwm_input =  prev_pwm[idx] - MOT->pwm_rate_limiter;
 5024              		.loc 1 1610 0
 5025 066c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5026 066e 884A     		ldr	r2, .L367+16
 5027 0670 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5028 0674 7A6C     		ldr	r2, [r7, #68]
 5029 0676 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 5030 067a 9B1A     		subs	r3, r3, r2
 5031 067c FB64     		str	r3, [r7, #76]
 5032              	.L329:
1611:..\src/interruptions.c ****     }
1612:..\src/interruptions.c ****    
1613:..\src/interruptions.c ****     // Limit PWM in range (specific per motor driver)
1614:..\src/interruptions.c ****     if (MOT->motor_driver_type == DRIVER_BRUSHLESS) {
 5033              		.loc 1 1614 0
 5034 067e 7B6C     		ldr	r3, [r7, #68]
 5035 0680 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 5036 0684 022B     		cmp	r3, #2
 5037 0686 0ED1     		bne	.L330
1615:..\src/interruptions.c ****         if(pwm_input > PWM_MAX_VALUE_ESC) 
 5038              		.loc 1 1615 0
 5039 0688 FB6C     		ldr	r3, [r7, #76]
 5040 068a 40F6A932 		movw	r2, #2985
 5041 068e 9342     		cmp	r3, r2
 5042 0690 02DD     		ble	.L331
1616:..\src/interruptions.c ****             pwm_input =  PWM_MAX_VALUE_ESC;
 5043              		.loc 1 1616 0
 5044 0692 40F6A933 		movw	r3, #2985
 5045 0696 FB64     		str	r3, [r7, #76]
 5046              	.L331:
1617:..\src/interruptions.c ****         if(pwm_input < -PWM_MAX_VALUE_ESC) 
 5047              		.loc 1 1617 0
 5048 0698 FB6C     		ldr	r3, [r7, #76]
 5049 069a 794A     		ldr	r2, .L367
 5050 069c 9342     		cmp	r3, r2
 5051 069e 0EDA     		bge	.L333
1618:..\src/interruptions.c ****             pwm_input = -PWM_MAX_VALUE_ESC;
 5052              		.loc 1 1618 0
 5053 06a0 774B     		ldr	r3, .L367
 5054 06a2 FB64     		str	r3, [r7, #76]
 5055 06a4 0BE0     		b	.L333
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 120


 5056              	.L330:
1619:..\src/interruptions.c ****     }
1620:..\src/interruptions.c ****     else {
1621:..\src/interruptions.c ****         if(pwm_input > PWM_MAX_VALUE_DC) 
 5057              		.loc 1 1621 0
 5058 06a6 FB6C     		ldr	r3, [r7, #76]
 5059 06a8 642B     		cmp	r3, #100
 5060 06aa 01DD     		ble	.L334
1622:..\src/interruptions.c ****             pwm_input =  PWM_MAX_VALUE_DC;
 5061              		.loc 1 1622 0
 5062 06ac 6423     		movs	r3, #100
 5063 06ae FB64     		str	r3, [r7, #76]
 5064              	.L334:
1623:..\src/interruptions.c ****         if(pwm_input < -PWM_MAX_VALUE_DC) 
 5065              		.loc 1 1623 0
 5066 06b0 FB6C     		ldr	r3, [r7, #76]
 5067 06b2 13F1640F 		cmn	r3, #100
 5068 06b6 02DA     		bge	.L333
1624:..\src/interruptions.c ****             pwm_input = -PWM_MAX_VALUE_DC;
 5069              		.loc 1 1624 0
 5070 06b8 6FF06303 		mvn	r3, #99
 5071 06bc FB64     		str	r3, [r7, #76]
 5072              	.L333:
1625:..\src/interruptions.c ****     }
1626:..\src/interruptions.c **** 
1627:..\src/interruptions.c ****     prev_pwm[idx] = pwm_input;
 5073              		.loc 1 1627 0
 5074 06be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5075 06c0 7349     		ldr	r1, .L367+16
 5076 06c2 FA6C     		ldr	r2, [r7, #76]
 5077 06c4 41F82320 		str	r2, [r1, r3, lsl #2]
1628:..\src/interruptions.c ****            
1629:..\src/interruptions.c ****     pwm_sign[idx] = SIGN(pwm_input);   
 5078              		.loc 1 1629 0
 5079 06c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5080 06ca FA6C     		ldr	r2, [r7, #76]
 5081 06cc 002A     		cmp	r2, #0
 5082 06ce 01DB     		blt	.L335
 5083              		.loc 1 1629 0 is_stmt 0 discriminator 1
 5084 06d0 0121     		movs	r1, #1
 5085 06d2 01E0     		b	.L336
 5086              	.L335:
 5087              		.loc 1 1629 0 discriminator 2
 5088 06d4 4FF0FF31 		mov	r1, #-1
 5089              	.L336:
 5090              		.loc 1 1629 0 discriminator 4
 5091 06d8 6E4A     		ldr	r2, .L367+20
 5092 06da D154     		strb	r1, [r2, r3]
1630:..\src/interruptions.c ****     
1631:..\src/interruptions.c ****     if (MOT->not_revers_motor_flag == TRUE) {
 5093              		.loc 1 1631 0 is_stmt 1 discriminator 4
 5094 06dc 7B6C     		ldr	r3, [r7, #68]
 5095 06de 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 5096 06e2 012B     		cmp	r3, #1
 5097 06e4 40F0AA80 		bne	.L337
1632:..\src/interruptions.c ****         // Block motor with pwm = 0 to exploit not reversible motor behaviour 
1633:..\src/interruptions.c ****     	if ( MOT->control_mode != CONTROL_PWM && ((g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) <
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 121


 5098              		.loc 1 1633 0
 5099 06e8 7B6C     		ldr	r3, [r7, #68]
 5100 06ea 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 5101 06ee 012B     		cmp	r3, #1
 5102 06f0 00F09F80 		beq	.L338
 5103              		.loc 1 1633 0 is_stmt 0 discriminator 1
 5104 06f4 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5105 06f8 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5106 06fa 6748     		ldr	r0, .L367+24
 5107 06fc 1346     		mov	r3, r2
 5108 06fe 5B00     		lsls	r3, r3, #1
 5109 0700 1344     		add	r3, r3, r2
 5110 0702 9B00     		lsls	r3, r3, #2
 5111 0704 1344     		add	r3, r3, r2
 5112 0706 0B44     		add	r3, r3, r1
 5113 0708 50F82310 		ldr	r1, [r0, r3, lsl #2]
 5114 070c 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5115 0710 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 5116 0712 624C     		ldr	r4, .L367+28
 5117 0714 1346     		mov	r3, r2
 5118 0716 5B00     		lsls	r3, r3, #1
 5119 0718 1344     		add	r3, r3, r2
 5120 071a 9B00     		lsls	r3, r3, #2
 5121 071c 1344     		add	r3, r3, r2
 5122 071e 0344     		add	r3, r3, r0
 5123 0720 54F82330 		ldr	r3, [r4, r3, lsl #2]
 5124 0724 CB1A     		subs	r3, r1, r3
 5125 0726 312B     		cmp	r3, #49
 5126 0728 00F38380 		bgt	.L338
1634:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 5127              		.loc 1 1634 0 is_stmt 1 discriminator 2
 5128 072c 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5129 0730 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5130 0732 5948     		ldr	r0, .L367+24
 5131 0734 1346     		mov	r3, r2
 5132 0736 5B00     		lsls	r3, r3, #1
 5133 0738 1344     		add	r3, r3, r2
 5134 073a 9B00     		lsls	r3, r3, #2
 5135 073c 1344     		add	r3, r3, r2
 5136 073e 0B44     		add	r3, r3, r1
 5137 0740 50F82310 		ldr	r1, [r0, r3, lsl #2]
 5138 0744 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5139 0748 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 5140 074a 544C     		ldr	r4, .L367+28
 5141 074c 1346     		mov	r3, r2
 5142 074e 5B00     		lsls	r3, r3, #1
 5143 0750 1344     		add	r3, r3, r2
 5144 0752 9B00     		lsls	r3, r3, #2
 5145 0754 1344     		add	r3, r3, r2
 5146 0756 0344     		add	r3, r3, r0
 5147 0758 54F82330 		ldr	r3, [r4, r3, lsl #2]
 5148 075c CB1A     		subs	r3, r1, r3
1633:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 5149              		.loc 1 1633 0 discriminator 2
 5150 075e 13F1310F 		cmn	r3, #49
 5151 0762 66DB     		blt	.L338
1635:..\src/interruptions.c ****             ((g_refOld[idx].pos - g_ref[idx].pos) < 100 && (g_refOld[idx].pos - g_ref[idx].pos) > -
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 122


 5152              		.loc 1 1635 0
 5153 0764 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5154 0766 4E4A     		ldr	r2, .L367+32
 5155 0768 1B01     		lsls	r3, r3, #4
 5156 076a 1344     		add	r3, r3, r2
 5157 076c 1A68     		ldr	r2, [r3]
 5158 076e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5159 0770 4C49     		ldr	r1, .L367+36
 5160 0772 1B01     		lsls	r3, r3, #4
 5161 0774 0B44     		add	r3, r3, r1
 5162 0776 1B68     		ldr	r3, [r3]
 5163 0778 D31A     		subs	r3, r2, r3
1634:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 5164              		.loc 1 1634 0
 5165 077a 632B     		cmp	r3, #99
 5166 077c 59DC     		bgt	.L338
 5167              		.loc 1 1635 0
 5168 077e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5169 0780 474A     		ldr	r2, .L367+32
 5170 0782 1B01     		lsls	r3, r3, #4
 5171 0784 1344     		add	r3, r3, r2
 5172 0786 1A68     		ldr	r2, [r3]
 5173 0788 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5174 078a 4649     		ldr	r1, .L367+36
 5175 078c 1B01     		lsls	r3, r3, #4
 5176 078e 0B44     		add	r3, r3, r1
 5177 0790 1B68     		ldr	r3, [r3]
 5178 0792 D31A     		subs	r3, r2, r3
 5179 0794 13F1630F 		cmn	r3, #99
 5180 0798 4BDB     		blt	.L338
1636:..\src/interruptions.c ****             position_counter[idx]++;
 5181              		.loc 1 1636 0
 5182 079a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5183 079c 424A     		ldr	r2, .L367+40
 5184 079e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5185 07a2 0132     		adds	r2, r2, #1
 5186 07a4 4049     		ldr	r1, .L367+40
 5187 07a6 41F82320 		str	r2, [r1, r3, lsl #2]
1637:..\src/interruptions.c ****             
1638:..\src/interruptions.c ****             if (position_counter[idx] >= 250) { 
 5188              		.loc 1 1638 0
 5189 07aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5190 07ac 3E4A     		ldr	r2, .L367+40
 5191 07ae 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5192 07b2 F92B     		cmp	r3, #249
 5193 07b4 42D9     		bls	.L337
1639:..\src/interruptions.c ****                 if (MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 5194              		.loc 1 1639 0
 5195 07b6 7B6C     		ldr	r3, [r7, #68]
 5196 07b8 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 5197 07bc 002B     		cmp	r3, #0
 5198 07be 10D1     		bne	.L340
 5199              		.loc 1 1639 0 is_stmt 0 discriminator 1
 5200 07c0 3A4B     		ldr	r3, .L367+44
 5201 07c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5202 07c4 002B     		cmp	r3, #0
 5203 07c6 0CD1     		bne	.L340
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 123


1640:..\src/interruptions.c ****                     g_refNew[idx].pos = g_meas[ENC_L].pos[0];       // Needed only when USB input m
 5204              		.loc 1 1640 0 is_stmt 1
 5205 07c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5206 07ca 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5207 07ce 3349     		ldr	r1, .L367+28
 5208 07d0 3420     		movs	r0, #52
 5209 07d2 00FB02F2 		mul	r2, r0, r2
 5210 07d6 0A44     		add	r2, r2, r1
 5211 07d8 1268     		ldr	r2, [r2]
 5212 07da 3549     		ldr	r1, .L367+48
 5213 07dc 1B01     		lsls	r3, r3, #4
 5214 07de 0B44     		add	r3, r3, r1
 5215 07e0 1A60     		str	r2, [r3]
 5216              	.L340:
1641:..\src/interruptions.c ****                 }
1642:..\src/interruptions.c ****                 g_ref[idx].pos = g_meas[ENC_L].pos[0];
 5217              		.loc 1 1642 0
 5218 07e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5219 07e4 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5220 07e8 2C49     		ldr	r1, .L367+28
 5221 07ea 3420     		movs	r0, #52
 5222 07ec 00FB02F2 		mul	r2, r0, r2
 5223 07f0 0A44     		add	r2, r2, r1
 5224 07f2 1268     		ldr	r2, [r2]
 5225 07f4 2B49     		ldr	r1, .L367+36
 5226 07f6 1B01     		lsls	r3, r3, #4
 5227 07f8 0B44     		add	r3, r3, r1
 5228 07fa 1A60     		str	r2, [r3]
1643:..\src/interruptions.c ****                 
1644:..\src/interruptions.c ****                 if (position_counter[idx] == 250){
 5229              		.loc 1 1644 0
 5230 07fc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5231 07fe 2A4A     		ldr	r2, .L367+40
 5232 0800 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5233 0804 FA2B     		cmp	r3, #250
 5234 0806 11D1     		bne	.L341
1645:..\src/interruptions.c ****                     // To do only once
1646:..\src/interruptions.c ****                     g_meas[ENC_L].hold_curr = g_meas[ENC_L].curr;
 5235              		.loc 1 1646 0
 5236 0808 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 5237 080c 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 5238 0810 2249     		ldr	r1, .L367+28
 5239 0812 3420     		movs	r0, #52
 5240 0814 00FB02F2 		mul	r2, r0, r2
 5241 0818 0A44     		add	r2, r2, r1
 5242 081a 0C32     		adds	r2, r2, #12
 5243 081c 1268     		ldr	r2, [r2]
 5244 081e 1F49     		ldr	r1, .L367+28
 5245 0820 3420     		movs	r0, #52
 5246 0822 00FB03F3 		mul	r3, r0, r3
 5247 0826 0B44     		add	r3, r3, r1
 5248 0828 1433     		adds	r3, r3, #20
 5249 082a 1A60     		str	r2, [r3]
 5250              	.L341:
1647:..\src/interruptions.c ****                 }
1648:..\src/interruptions.c ****                 pwm_input = 0;            
 5251              		.loc 1 1648 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 124


 5252 082c 0023     		movs	r3, #0
 5253 082e FB64     		str	r3, [r7, #76]
1638:..\src/interruptions.c ****                 if (MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 5254              		.loc 1 1638 0
 5255 0830 04E0     		b	.L337
 5256              	.L338:
1649:..\src/interruptions.c ****             }
1650:..\src/interruptions.c ****         }
1651:..\src/interruptions.c ****         else {
1652:..\src/interruptions.c ****             position_counter[idx] = 0;
 5257              		.loc 1 1652 0
 5258 0832 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5259 0834 1C4A     		ldr	r2, .L367+40
 5260 0836 0021     		movs	r1, #0
 5261 0838 42F82310 		str	r1, [r2, r3, lsl #2]
 5262              	.L337:
1653:..\src/interruptions.c ****         }
1654:..\src/interruptions.c ****     }
1655:..\src/interruptions.c ****     
1656:..\src/interruptions.c ****     
1657:..\src/interruptions.c ****     // Always limit PWM if using Brushless motors and ESC module
1658:..\src/interruptions.c ****     if (MOT->motor_driver_type == DRIVER_BRUSHLESS) {           
 5263              		.loc 1 1658 0
 5264 083c 7B6C     		ldr	r3, [r7, #68]
 5265 083e 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 5266 0842 022B     		cmp	r3, #2
 5267 0844 3BD1     		bne	.L342
1659:..\src/interruptions.c ****         // Allowed in range [-2700,-200] and [200,2700] where 200 -> 0 rpm, 2700 -> MAX no load spe
1660:..\src/interruptions.c ****         if (abs(pwm_input) > 2700){
 5268              		.loc 1 1660 0
 5269 0846 FB6C     		ldr	r3, [r7, #76]
 5270 0848 002B     		cmp	r3, #0
 5271 084a B8BF     		it	lt
 5272 084c 5B42     		rsblt	r3, r3, #0
 5273 084e 40F68C22 		movw	r2, #2700
 5274 0852 9342     		cmp	r3, r2
 5275 0854 07DD     		ble	.L343
1661:..\src/interruptions.c ****             pwm_input = SIGN(pwm_input) * 2700;
 5276              		.loc 1 1661 0
 5277 0856 FB6C     		ldr	r3, [r7, #76]
 5278 0858 002B     		cmp	r3, #0
 5279 085a 02DB     		blt	.L344
 5280              		.loc 1 1661 0 is_stmt 0 discriminator 1
 5281 085c 40F68C23 		movw	r3, #2700
 5282 0860 00E0     		b	.L345
 5283              	.L344:
 5284              		.loc 1 1661 0 discriminator 2
 5285 0862 144B     		ldr	r3, .L367+52
 5286              	.L345:
 5287              		.loc 1 1661 0 discriminator 4
 5288 0864 FB64     		str	r3, [r7, #76]
 5289              	.L343:
1662:..\src/interruptions.c ****         }
1663:..\src/interruptions.c ****         
1664:..\src/interruptions.c ****         if (abs(pwm_input) < 200){
 5290              		.loc 1 1664 0 is_stmt 1
 5291 0866 FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 125


 5292 0868 13F1C70F 		cmn	r3, #199
 5293 086c 27DB     		blt	.L342
 5294              		.loc 1 1664 0 is_stmt 0 discriminator 1
 5295 086e FB6C     		ldr	r3, [r7, #76]
 5296 0870 C72B     		cmp	r3, #199
 5297 0872 24DC     		bgt	.L342
1665:..\src/interruptions.c ****             pwm_input = SIGN(pwm_input) * 200;
 5298              		.loc 1 1665 0 is_stmt 1
 5299 0874 FB6C     		ldr	r3, [r7, #76]
 5300 0876 002B     		cmp	r3, #0
 5301 0878 1EDB     		blt	.L346
 5302              		.loc 1 1665 0 is_stmt 0 discriminator 1
 5303 087a C823     		movs	r3, #200
 5304 087c 1EE0     		b	.L347
 5305              	.L368:
 5306 087e 00BF     		.align	2
 5307              	.L367:
 5308 0880 57F4FFFF 		.word	-2985
 5309 0884 81207D05 		.word	92086401
 5310 0888 00000000 		.word	dev_pwm_limit
 5311 088c 1F85EB51 		.word	1374389535
 5312 0890 D0000000 		.word	prev_pwm.10610
 5313 0894 00000000 		.word	pwm_sign
 5314 0898 00000000 		.word	g_measOld
 5315 089c 00000000 		.word	g_meas
 5316 08a0 00000000 		.word	g_refOld
 5317 08a4 00000000 		.word	g_ref
 5318 08a8 D8000000 		.word	position_counter.10612
 5319 08ac 00000000 		.word	change_ext_ref_flag
 5320 08b0 00000000 		.word	g_refNew
 5321 08b4 74F5FFFF 		.word	-2700
 5322              	.L346:
 5323              		.loc 1 1665 0 discriminator 2
 5324 08b8 6FF0C703 		mvn	r3, #199
 5325              	.L347:
 5326              		.loc 1 1665 0 discriminator 4
 5327 08bc FB64     		str	r3, [r7, #76]
 5328              	.L342:
1666:..\src/interruptions.c ****         }
1667:..\src/interruptions.c ****        
1668:..\src/interruptions.c ****     }
1669:..\src/interruptions.c ****     
1670:..\src/interruptions.c ****     // Set motor direction and write pwm value
1671:..\src/interruptions.c ****     switch (idx) {
 5329              		.loc 1 1671 0 is_stmt 1
 5330 08be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5331 08c0 002B     		cmp	r3, #0
 5332 08c2 02D0     		beq	.L349
 5333 08c4 012B     		cmp	r3, #1
 5334 08c6 26D0     		beq	.L350
1672:..\src/interruptions.c ****         case 0:         // Motor 1
1673:..\src/interruptions.c ****             if (motor_dir[idx])
1674:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x01);
1675:..\src/interruptions.c ****             else
1676:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x00);
1677:..\src/interruptions.c ****             
1678:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_VNH5019) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 126


1679:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(PWM_MAX_VALUE_DC - abs(pwm_input));
1680:..\src/interruptions.c ****             }
1681:..\src/interruptions.c ****             else {  // DRIVER_MC33887 standard or DRIVER_BRUSHLESS
1682:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(abs(pwm_input));    
1683:..\src/interruptions.c ****             }
1684:..\src/interruptions.c ****             
1685:..\src/interruptions.c ****             break;
1686:..\src/interruptions.c ****         case 1:         // Motor 2
1687:..\src/interruptions.c ****             
1688:..\src/interruptions.c ****             if (motor_dir[idx])
1689:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x01);
1690:..\src/interruptions.c ****             else
1691:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x00);
1692:..\src/interruptions.c ****             
1693:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_VNH5019) {
1694:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(PWM_MAX_VALUE_DC - abs(pwm_input));
1695:..\src/interruptions.c ****             }
1696:..\src/interruptions.c ****             else {  // DRIVER_MC33887 standard or DRIVER_BRUSHLESS
1697:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(abs(pwm_input));    
1698:..\src/interruptions.c ****             }
1699:..\src/interruptions.c ****             
1700:..\src/interruptions.c ****             break;
1701:..\src/interruptions.c ****         default:
1702:..\src/interruptions.c ****             break;
 5335              		.loc 1 1702 0
 5336 08c8 4BE0     		b	.L355
 5337              	.L349:
1673:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x01);
 5338              		.loc 1 1673 0
 5339 08ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5340 08cc 274A     		ldr	r2, .L369
 5341 08ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5342 08d0 002B     		cmp	r3, #0
 5343 08d2 03D0     		beq	.L351
1674:..\src/interruptions.c ****             else
 5344              		.loc 1 1674 0
 5345 08d4 0120     		movs	r0, #1
 5346 08d6 FFF7FEFF 		bl	MOTOR_DIR_1_Write
 5347 08da 02E0     		b	.L352
 5348              	.L351:
1676:..\src/interruptions.c ****             
 5349              		.loc 1 1676 0
 5350 08dc 0020     		movs	r0, #0
 5351 08de FFF7FEFF 		bl	MOTOR_DIR_1_Write
 5352              	.L352:
1678:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(PWM_MAX_VALUE_DC - abs(pwm_input));
 5353              		.loc 1 1678 0
 5354 08e2 7B6C     		ldr	r3, [r7, #68]
 5355 08e4 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 5356 08e8 012B     		cmp	r3, #1
 5357 08ea 0BD1     		bne	.L353
1679:..\src/interruptions.c ****             }
 5358              		.loc 1 1679 0
 5359 08ec FB6C     		ldr	r3, [r7, #76]
 5360 08ee 002B     		cmp	r3, #0
 5361 08f0 B8BF     		it	lt
 5362 08f2 5B42     		rsblt	r3, r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 127


 5363 08f4 DBB2     		uxtb	r3, r3
 5364 08f6 C3F16403 		rsb	r3, r3, #100
 5365 08fa DBB2     		uxtb	r3, r3
 5366 08fc 1846     		mov	r0, r3
 5367 08fe FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1685:..\src/interruptions.c ****         case 1:         // Motor 2
 5368              		.loc 1 1685 0
 5369 0902 2EE0     		b	.L355
 5370              	.L353:
1682:..\src/interruptions.c ****             }
 5371              		.loc 1 1682 0
 5372 0904 FB6C     		ldr	r3, [r7, #76]
 5373 0906 002B     		cmp	r3, #0
 5374 0908 B8BF     		it	lt
 5375 090a 5B42     		rsblt	r3, r3, #0
 5376 090c DBB2     		uxtb	r3, r3
 5377 090e 1846     		mov	r0, r3
 5378 0910 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1685:..\src/interruptions.c ****         case 1:         // Motor 2
 5379              		.loc 1 1685 0
 5380 0914 25E0     		b	.L355
 5381              	.L350:
1688:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x01);
 5382              		.loc 1 1688 0
 5383 0916 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5384 0918 144A     		ldr	r2, .L369
 5385 091a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5386 091c 002B     		cmp	r3, #0
 5387 091e 03D0     		beq	.L356
1689:..\src/interruptions.c ****             else
 5388              		.loc 1 1689 0
 5389 0920 0120     		movs	r0, #1
 5390 0922 FFF7FEFF 		bl	MOTOR_DIR_2_Write
 5391 0926 02E0     		b	.L357
 5392              	.L356:
1691:..\src/interruptions.c ****             
 5393              		.loc 1 1691 0
 5394 0928 0020     		movs	r0, #0
 5395 092a FFF7FEFF 		bl	MOTOR_DIR_2_Write
 5396              	.L357:
1693:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(PWM_MAX_VALUE_DC - abs(pwm_input));
 5397              		.loc 1 1693 0
 5398 092e 7B6C     		ldr	r3, [r7, #68]
 5399 0930 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 5400 0934 012B     		cmp	r3, #1
 5401 0936 0BD1     		bne	.L358
1694:..\src/interruptions.c ****             }
 5402              		.loc 1 1694 0
 5403 0938 FB6C     		ldr	r3, [r7, #76]
 5404 093a 002B     		cmp	r3, #0
 5405 093c B8BF     		it	lt
 5406 093e 5B42     		rsblt	r3, r3, #0
 5407 0940 DBB2     		uxtb	r3, r3
 5408 0942 C3F16403 		rsb	r3, r3, #100
 5409 0946 DBB2     		uxtb	r3, r3
 5410 0948 1846     		mov	r0, r3
 5411 094a FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 128


1700:..\src/interruptions.c ****         default:
 5412              		.loc 1 1700 0
 5413 094e 07E0     		b	.L362
 5414              	.L358:
1697:..\src/interruptions.c ****             }
 5415              		.loc 1 1697 0
 5416 0950 FB6C     		ldr	r3, [r7, #76]
 5417 0952 002B     		cmp	r3, #0
 5418 0954 B8BF     		it	lt
 5419 0956 5B42     		rsblt	r3, r3, #0
 5420 0958 DBB2     		uxtb	r3, r3
 5421 095a 1846     		mov	r0, r3
 5422 095c FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
 5423              	.L362:
1700:..\src/interruptions.c ****         default:
 5424              		.loc 1 1700 0
 5425 0960 00BF     		nop
 5426              	.L355:
1703:..\src/interruptions.c ****     }
1704:..\src/interruptions.c ****     
1705:..\src/interruptions.c **** }
 5427              		.loc 1 1705 0
 5428 0962 00BF     		nop
 5429 0964 5437     		adds	r7, r7, #84
 5430              		.cfi_def_cfa_offset 12
 5431 0966 BD46     		mov	sp, r7
 5432              		.cfi_def_cfa_register 13
 5433              		@ sp needed
 5434 0968 90BD     		pop	{r4, r7, pc}
 5435              	.L370:
 5436 096a 00BF     		.align	2
 5437              	.L369:
 5438 096c BC000000 		.word	motor_dir.10611
 5439              		.cfi_endproc
 5440              	.LFE72:
 5441              		.size	motor_control_generic, .-motor_control_generic
 5442              		.global	__aeabi_fcmpeq
 5443              		.global	__aeabi_fmul
 5444              		.global	__aeabi_f2iz
 5445              		.global	__aeabi_fcmplt
 5446              		.section	.text.encoder_reading_SPI,"ax",%progbits
 5447              		.align	2
 5448              		.global	encoder_reading_SPI
 5449              		.thumb
 5450              		.thumb_func
 5451              		.type	encoder_reading_SPI, %function
 5452              	encoder_reading_SPI:
 5453              	.LFB73:
1706:..\src/interruptions.c **** 
1707:..\src/interruptions.c **** //==============================================================================
1708:..\src/interruptions.c **** //                                                           ENCODER READING SPI
1709:..\src/interruptions.c **** //==============================================================================
1710:..\src/interruptions.c **** 
1711:..\src/interruptions.c **** void encoder_reading_SPI(uint8 n_line, uint8 assoc_motor) {
 5454              		.loc 1 1711 0
 5455              		.cfi_startproc
 5456              		@ args = 0, pretend = 0, frame = 48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 129


 5457              		@ frame_needed = 1, uses_anonymous_args = 0
 5458 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5459              		.cfi_def_cfa_offset 20
 5460              		.cfi_offset 4, -20
 5461              		.cfi_offset 5, -16
 5462              		.cfi_offset 6, -12
 5463              		.cfi_offset 7, -8
 5464              		.cfi_offset 14, -4
 5465 0002 8FB0     		sub	sp, sp, #60
 5466              		.cfi_def_cfa_offset 80
 5467 0004 02AF     		add	r7, sp, #8
 5468              		.cfi_def_cfa 7, 72
 5469 0006 0346     		mov	r3, r0
 5470 0008 0A46     		mov	r2, r1
 5471 000a FB71     		strb	r3, [r7, #7]
 5472 000c 1346     		mov	r3, r2
 5473 000e BB71     		strb	r3, [r7, #6]
1712:..\src/interruptions.c **** 
1713:..\src/interruptions.c ****     uint8 CYDATA index = 0;
 5474              		.loc 1 1713 0
 5475 0010 0023     		movs	r3, #0
 5476 0012 87F82F30 		strb	r3, [r7, #47]
1714:..\src/interruptions.c ****     
1715:..\src/interruptions.c ****     // Encoder Variables  
1716:..\src/interruptions.c ****     uint8 jj;
1717:..\src/interruptions.c ****      
1718:..\src/interruptions.c ****     uint32 aux_encoder[NUM_OF_SENSORS];
1719:..\src/interruptions.c ****     int16 tmp_value_encoder;
1720:..\src/interruptions.c ****     int32 tmp_value_encoder_32;
1721:..\src/interruptions.c ****     int32 value_encoder;
1722:..\src/interruptions.c ****     int32 speed_encoder;
1723:..\src/interruptions.c ****     int32 value_diff;
1724:..\src/interruptions.c **** 	int8 init_rot = 0;
 5477              		.loc 1 1724 0
 5478 0016 0023     		movs	r3, #0
 5479 0018 87F82730 		strb	r3, [r7, #39]
1725:..\src/interruptions.c **** 
1726:..\src/interruptions.c ****     static int32 last_value_encoder[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1727:..\src/interruptions.c ****     static int32 comp_value_encoder[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1728:..\src/interruptions.c ****     static uint8 error[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1729:..\src/interruptions.c ****     
1730:..\src/interruptions.c ****     static CYBIT only_first_time[N_ENCODER_LINE_MAX] = {TRUE, TRUE};
1731:..\src/interruptions.c ****     static CYBIT safe_startup_motor_activation[N_ENCODER_LINE_MAX] = {FALSE, FALSE};
1732:..\src/interruptions.c ****     static uint8 one_time_execute[N_ENCODER_LINE_MAX] = {0, 0};
1733:..\src/interruptions.c ****     static uint32 count_startup_motor[N_ENCODER_LINE_MAX] = {0, 0};
1734:..\src/interruptions.c **** 
1735:..\src/interruptions.c ****     static int32 v_value[N_ENCODER_LINE_MAX][N_ENCODERS];   //last value for velocity
1736:..\src/interruptions.c ****     static int32 vv_value[N_ENCODER_LINE_MAX][N_ENCODERS];  //last last value for velocity
1737:..\src/interruptions.c ****     static int32 vvv_value[N_ENCODER_LINE_MAX][N_ENCODERS];  //last last last value for velocity
1738:..\src/interruptions.c ****     
1739:..\src/interruptions.c ****     if (reset_last_value_flag[n_line]) {
 5480              		.loc 1 1739 0
 5481 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5482 001e 924A     		ldr	r2, .L408
 5483 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5484 0022 002B     		cmp	r3, #0
 5485 0024 19D0     		beq	.L372
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 130


1740:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 5486              		.loc 1 1740 0
 5487 0026 0323     		movs	r3, #3
 5488 0028 87F82E30 		strb	r3, [r7, #46]
 5489 002c 0AE0     		b	.L373
 5490              	.L374:
1741:..\src/interruptions.c ****             last_value_encoder[n_line][jj] = 0;
 5491              		.loc 1 1741 0
 5492 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5493 0030 97F82E10 		ldrb	r1, [r7, #46]	@ zero_extendqisi2
 5494 0034 8D48     		ldr	r0, .L408+4
 5495 0036 1346     		mov	r3, r2
 5496 0038 5B00     		lsls	r3, r3, #1
 5497 003a 1344     		add	r3, r3, r2
 5498 003c 0B44     		add	r3, r3, r1
 5499 003e 0022     		movs	r2, #0
 5500 0040 40F82320 		str	r2, [r0, r3, lsl #2]
 5501              	.L373:
1740:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 5502              		.loc 1 1740 0 discriminator 1
 5503 0044 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 5504 0048 5A1E     		subs	r2, r3, #1
 5505 004a 87F82E20 		strb	r2, [r7, #46]
 5506 004e 002B     		cmp	r3, #0
 5507 0050 EDD1     		bne	.L374
1742:..\src/interruptions.c ****         
1743:..\src/interruptions.c ****         reset_last_value_flag[n_line] = 0;
 5508              		.loc 1 1743 0
 5509 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5510 0054 844A     		ldr	r2, .L408
 5511 0056 0021     		movs	r1, #0
 5512 0058 D154     		strb	r1, [r2, r3]
 5513              	.L372:
1744:..\src/interruptions.c ****     }
1745:..\src/interruptions.c **** 
1746:..\src/interruptions.c ****     //======================================================     reading sensors
1747:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 5514              		.loc 1 1747 0
 5515 005a 0023     		movs	r3, #0
 5516 005c 87F82F30 		strb	r3, [r7, #47]
 5517 0060 0DE0     		b	.L375
 5518              	.L376:
1748:..\src/interruptions.c ****         aux_encoder[index] = 0;
 5519              		.loc 1 1748 0 discriminator 3
 5520 0062 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5521 0066 9B00     		lsls	r3, r3, #2
 5522 0068 07F13002 		add	r2, r7, #48
 5523 006c 1344     		add	r3, r3, r2
 5524 006e 0022     		movs	r2, #0
 5525 0070 43F8282C 		str	r2, [r3, #-40]
1747:..\src/interruptions.c ****         aux_encoder[index] = 0;
 5526              		.loc 1 1747 0 discriminator 3
 5527 0074 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5528 0078 0133     		adds	r3, r3, #1
 5529 007a 87F82F30 		strb	r3, [r7, #47]
 5530              	.L375:
1747:..\src/interruptions.c ****         aux_encoder[index] = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 131


 5531              		.loc 1 1747 0 is_stmt 0 discriminator 1
 5532 007e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5533 0082 022B     		cmp	r3, #2
 5534 0084 EDD9     		bls	.L376
1749:..\src/interruptions.c ****     }   
1750:..\src/interruptions.c ****     
1751:..\src/interruptions.c ****     ReadEncoderLine(N_Encoder_Line_Connected[n_line] , n_line);         //CS0 for right hand
 5535              		.loc 1 1751 0 is_stmt 1
 5536 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5537 0088 794A     		ldr	r2, .L408+8
 5538 008a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5539 008c 1A46     		mov	r2, r3
 5540 008e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5541 0090 1946     		mov	r1, r3
 5542 0092 1046     		mov	r0, r2
 5543 0094 FFF7FEFF 		bl	ReadEncoderLine
 5544              	.LBB10:
1752:..\src/interruptions.c ****                                                                         //CS1 for left hand
1753:..\src/interruptions.c ****     for (int j = 0; j < N_ENCODERS; j++) {    
 5545              		.loc 1 1753 0
 5546 0098 0023     		movs	r3, #0
 5547 009a 3B62     		str	r3, [r7, #32]
 5548 009c 2EE0     		b	.L377
 5549              	.L379:
1754:..\src/interruptions.c ****         
1755:..\src/interruptions.c ****         // As default, index=0 reads SoftHand Pro encoder positioned on screw, while index=1 reads 
1756:..\src/interruptions.c ****         index = c_mem.enc[n_line].Enc_idx_use_for_control[j];       // take encoder idx used for mo
 5550              		.loc 1 1756 0
 5551 009e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5552 00a0 7449     		ldr	r1, .L408+12
 5553 00a2 1346     		mov	r3, r2
 5554 00a4 5B00     		lsls	r3, r3, #1
 5555 00a6 1344     		add	r3, r3, r2
 5556 00a8 1B01     		lsls	r3, r3, #4
 5557 00aa CA18     		adds	r2, r1, r3
 5558 00ac 3B6A     		ldr	r3, [r7, #32]
 5559 00ae 1344     		add	r3, r3, r2
 5560 00b0 03F2B113 		addw	r3, r3, #433
 5561 00b4 1B78     		ldrb	r3, [r3]
 5562 00b6 87F82F30 		strb	r3, [r7, #47]
1757:..\src/interruptions.c ****         
1758:..\src/interruptions.c ****         if (Encoder_Check[n_line][index] > 15){  // check on encoder data
 5563              		.loc 1 1758 0
 5564 00ba FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5565 00bc 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5566 00c0 6D48     		ldr	r0, .L408+16
 5567 00c2 1346     		mov	r3, r2
 5568 00c4 9B00     		lsls	r3, r3, #2
 5569 00c6 1344     		add	r3, r3, r2
 5570 00c8 0344     		add	r3, r3, r0
 5571 00ca 0B44     		add	r3, r3, r1
 5572 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5573 00ce 0F2B     		cmp	r3, #15
 5574 00d0 11D9     		bls	.L378
1759:..\src/interruptions.c ****             aux_encoder[j] = (uint32)Encoder_Value[n_line][index];     // 00000000000000[20] XXXXXX
 5575              		.loc 1 1759 0
 5576 00d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 132


 5577 00d4 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5578 00d8 6848     		ldr	r0, .L408+20
 5579 00da 1346     		mov	r3, r2
 5580 00dc 9B00     		lsls	r3, r3, #2
 5581 00de 1344     		add	r3, r3, r2
 5582 00e0 0B44     		add	r3, r3, r1
 5583 00e2 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 5584 00e6 1A46     		mov	r2, r3
 5585 00e8 3B6A     		ldr	r3, [r7, #32]
 5586 00ea 9B00     		lsls	r3, r3, #2
 5587 00ec 07F13001 		add	r1, r7, #48
 5588 00f0 0B44     		add	r3, r3, r1
 5589 00f2 43F8282C 		str	r2, [r3, #-40]
 5590              	.L378:
1753:..\src/interruptions.c ****         
 5591              		.loc 1 1753 0 discriminator 2
 5592 00f6 3B6A     		ldr	r3, [r7, #32]
 5593 00f8 0133     		adds	r3, r3, #1
 5594 00fa 3B62     		str	r3, [r7, #32]
 5595              	.L377:
1753:..\src/interruptions.c ****         
 5596              		.loc 1 1753 0 is_stmt 0 discriminator 1
 5597 00fc 3B6A     		ldr	r3, [r7, #32]
 5598 00fe 022B     		cmp	r3, #2
 5599 0100 CDDD     		ble	.L379
 5600              	.LBE10:
1760:..\src/interruptions.c ****         }
1761:..\src/interruptions.c ****     }
1762:..\src/interruptions.c ****     
1763:..\src/interruptions.c ****     // S = SIGN BIT
1764:..\src/interruptions.c ****     // X = ENCODER VALUE BIT
1765:..\src/interruptions.c ****     // 0 = 0 BIT
1766:..\src/interruptions.c ****     // C = CONTROL BIT
1767:..\src/interruptions.c ****     
1768:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 5601              		.loc 1 1768 0 is_stmt 1
 5602 0102 0023     		movs	r3, #0
 5603 0104 87F82F30 		strb	r3, [r7, #47]
 5604 0108 35E3     		b	.L380
 5605              	.L401:
1769:..\src/interruptions.c ****         
1770:..\src/interruptions.c ****         data_encoder_raw[n_line][index] = aux_encoder[index];
 5606              		.loc 1 1770 0
 5607 010a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5608 010c 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5609 0110 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5610 0114 9B00     		lsls	r3, r3, #2
 5611 0116 07F13001 		add	r1, r7, #48
 5612 011a 0B44     		add	r3, r3, r1
 5613 011c 53F8281C 		ldr	r1, [r3, #-40]
 5614 0120 574C     		ldr	r4, .L408+24
 5615 0122 1346     		mov	r3, r2
 5616 0124 9B00     		lsls	r3, r3, #2
 5617 0126 1344     		add	r3, r3, r2
 5618 0128 0344     		add	r3, r3, r0
 5619 012a 44F82310 		str	r1, [r4, r3, lsl #2]
1771:..\src/interruptions.c ****         
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 133


1772:..\src/interruptions.c ****         tmp_value_encoder = (int16)(aux_encoder[index] - (uint16)g_mem.enc[n_line].m_off[index]);
 5620              		.loc 1 1772 0
 5621 012e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5622 0132 9B00     		lsls	r3, r3, #2
 5623 0134 07F13002 		add	r2, r7, #48
 5624 0138 1344     		add	r3, r3, r2
 5625 013a 53F8283C 		ldr	r3, [r3, #-40]
 5626 013e 99B2     		uxth	r1, r3
 5627 0140 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5628 0142 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5629 0146 4F4C     		ldr	r4, .L408+28
 5630 0148 1346     		mov	r3, r2
 5631 014a 5B00     		lsls	r3, r3, #1
 5632 014c 1344     		add	r3, r3, r2
 5633 014e 9B00     		lsls	r3, r3, #2
 5634 0150 0344     		add	r3, r3, r0
 5635 0152 6633     		adds	r3, r3, #102
 5636 0154 54F82330 		ldr	r3, [r4, r3, lsl #2]
 5637 0158 9BB2     		uxth	r3, r3
 5638 015a CB1A     		subs	r3, r1, r3
 5639 015c 9BB2     		uxth	r3, r3
 5640 015e BB85     		strh	r3, [r7, #44]	@ movhi
1773:..\src/interruptions.c ****         if (tmp_value_encoder < 0){
 5641              		.loc 1 1773 0
 5642 0160 B7F92C30 		ldrsh	r3, [r7, #44]
 5643 0164 002B     		cmp	r3, #0
 5644 0166 04DA     		bge	.L381
1774:..\src/interruptions.c ****             tmp_value_encoder = tmp_value_encoder + 4096;   //SSSS[4] XXXXXXXXXXXX[12] worst case r
 5645              		.loc 1 1774 0
 5646 0168 BB8D     		ldrh	r3, [r7, #44]
 5647 016a 03F58053 		add	r3, r3, #4096
 5648 016e 9BB2     		uxth	r3, r3
 5649 0170 BB85     		strh	r3, [r7, #44]	@ movhi
 5650              	.L381:
1775:..\src/interruptions.c ****         }       // Range [0, 4096]
1776:..\src/interruptions.c **** 
1777:..\src/interruptions.c ****         if (tmp_value_encoder >= 2048) {
 5651              		.loc 1 1777 0
 5652 0172 B7F92C30 		ldrsh	r3, [r7, #44]
 5653 0176 B3F5006F 		cmp	r3, #2048
 5654 017a 04DB     		blt	.L382
1778:..\src/interruptions.c ****            tmp_value_encoder = tmp_value_encoder - 4096;    //SSSS[4] XXXXXXXXXXXX[12] range [-2048
 5655              		.loc 1 1778 0
 5656 017c BB8D     		ldrh	r3, [r7, #44]
 5657 017e A3F58053 		sub	r3, r3, #4096
 5658 0182 9BB2     		uxth	r3, r3
 5659 0184 BB85     		strh	r3, [r7, #44]	@ movhi
 5660              	.L382:
1779:..\src/interruptions.c ****         }       // Range [-2048, 2047]
1780:..\src/interruptions.c **** 
1781:..\src/interruptions.c ****         tmp_value_encoder_32 = (((int32)(tmp_value_encoder)) << 4);     //SSSSSSSSSSSSSSSS[16] XXXX
 5661              		.loc 1 1781 0
 5662 0186 B7F92C30 		ldrsh	r3, [r7, #44]
 5663 018a 1B01     		lsls	r3, r3, #4
 5664 018c FB61     		str	r3, [r7, #28]
1782:..\src/interruptions.c ****         comp_value_encoder[n_line][index] = tmp_value_encoder_32;
 5665              		.loc 1 1782 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 134


 5666 018e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5667 0190 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5668 0194 3C48     		ldr	r0, .L408+32
 5669 0196 1346     		mov	r3, r2
 5670 0198 5B00     		lsls	r3, r3, #1
 5671 019a 1344     		add	r3, r3, r2
 5672 019c 0B44     		add	r3, r3, r1
 5673 019e FA69     		ldr	r2, [r7, #28]
 5674 01a0 40F82320 		str	r2, [r0, r3, lsl #2]
1783:..\src/interruptions.c **** 
1784:..\src/interruptions.c ****         // Initialize last_value_encoder
1785:..\src/interruptions.c ****         if (only_first_time[n_line]) {
 5675              		.loc 1 1785 0
 5676 01a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5677 01a6 394A     		ldr	r2, .L408+36
 5678 01a8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5679 01aa 002B     		cmp	r3, #0
 5680 01ac 12D0     		beq	.L383
1786:..\src/interruptions.c ****             last_value_encoder[n_line][index] = tmp_value_encoder_32;
 5681              		.loc 1 1786 0
 5682 01ae FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5683 01b0 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5684 01b4 2D48     		ldr	r0, .L408+4
 5685 01b6 1346     		mov	r3, r2
 5686 01b8 5B00     		lsls	r3, r3, #1
 5687 01ba 1344     		add	r3, r3, r2
 5688 01bc 0B44     		add	r3, r3, r1
 5689 01be FA69     		ldr	r2, [r7, #28]
 5690 01c0 40F82320 		str	r2, [r0, r3, lsl #2]
1787:..\src/interruptions.c ****             if (index == 2)
 5691              		.loc 1 1787 0
 5692 01c4 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5693 01c8 022B     		cmp	r3, #2
 5694 01ca 03D1     		bne	.L383
1788:..\src/interruptions.c ****                 only_first_time[n_line] = 0;
 5695              		.loc 1 1788 0
 5696 01cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5697 01ce 2F4A     		ldr	r2, .L408+36
 5698 01d0 0021     		movs	r1, #0
 5699 01d2 D154     		strb	r1, [r2, r3]
 5700              	.L383:
1789:..\src/interruptions.c ****         }
1790:..\src/interruptions.c **** 
1791:..\src/interruptions.c ****         // Take care of rotations
1792:..\src/interruptions.c ****         value_diff = tmp_value_encoder_32 - last_value_encoder[n_line][index];     // worst case SS
 5701              		.loc 1 1792 0
 5702 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5703 01d6 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5704 01da 2448     		ldr	r0, .L408+4
 5705 01dc 1346     		mov	r3, r2
 5706 01de 5B00     		lsls	r3, r3, #1
 5707 01e0 1344     		add	r3, r3, r2
 5708 01e2 0B44     		add	r3, r3, r1
 5709 01e4 50F82330 		ldr	r3, [r0, r3, lsl #2]
 5710 01e8 FA69     		ldr	r2, [r7, #28]
 5711 01ea D31A     		subs	r3, r2, r3
 5712 01ec BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 135


1793:..\src/interruptions.c **** 
1794:..\src/interruptions.c ****         // ====================== 1 TURN ======================
1795:..\src/interruptions.c ****         // -32768                    0                    32767 -32768                   0         
1796:..\src/interruptions.c ****         // |-------------------------|-------------------------|-------------------------|---------
1797:..\src/interruptions.c ****         //              |                         |      |           |      |                      
1798:..\src/interruptions.c ****         //           -16384                     16383    |           |   -16384                    
1799:..\src/interruptions.c ****         //                                               |           |
1800:..\src/interruptions.c ****         //                                           24575           -24576
1801:..\src/interruptions.c ****         //                                               |___________|
1802:..\src/interruptions.c ****         //                                                   49152
1803:..\src/interruptions.c **** 
1804:..\src/interruptions.c ****         // if we are in the right interval, take care of rotation
1805:..\src/interruptions.c ****         // and update the variable only if the difference between
1806:..\src/interruptions.c ****         // one measure and another is less than 1/4 of turn
1807:..\src/interruptions.c **** 
1808:..\src/interruptions.c ****         // Considering we are sampling at 1kHz, this means that our shaft needs
1809:..\src/interruptions.c ****         // to go slower than 1/4 turn every ms -> 1 turn every 4ms
1810:..\src/interruptions.c ****         // equal to 250 turn/s -> 15000 RPM
1811:..\src/interruptions.c **** 
1812:..\src/interruptions.c ****         if (value_diff > 49152)
 5713              		.loc 1 1812 0
 5714 01ee BB69     		ldr	r3, [r7, #24]
 5715 01f0 B3F5404F 		cmp	r3, #49152
 5716 01f4 19DD     		ble	.L384
1813:..\src/interruptions.c ****             g_meas[n_line].rot[index]--;
 5717              		.loc 1 1813 0
 5718 01f6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5719 01f8 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5720 01fc 2448     		ldr	r0, .L408+40
 5721 01fe 3421     		movs	r1, #52
 5722 0200 01FB02F1 		mul	r1, r1, r2
 5723 0204 0144     		add	r1, r1, r0
 5724 0206 1944     		add	r1, r1, r3
 5725 0208 1831     		adds	r1, r1, #24
 5726 020a 91F90010 		ldrsb	r1, [r1]
 5727 020e C9B2     		uxtb	r1, r1
 5728 0210 0139     		subs	r1, r1, #1
 5729 0212 C9B2     		uxtb	r1, r1
 5730 0214 4CB2     		sxtb	r4, r1
 5731 0216 1E49     		ldr	r1, .L408+40
 5732 0218 3420     		movs	r0, #52
 5733 021a 00FB02F2 		mul	r2, r0, r2
 5734 021e 0A44     		add	r2, r2, r1
 5735 0220 1344     		add	r3, r3, r2
 5736 0222 1833     		adds	r3, r3, #24
 5737 0224 2246     		mov	r2, r4
 5738 0226 1A70     		strb	r2, [r3]
 5739 0228 5CE0     		b	.L385
 5740              	.L384:
1814:..\src/interruptions.c ****         else{ 
1815:..\src/interruptions.c ****             if (value_diff < -49152)
 5741              		.loc 1 1815 0
 5742 022a BB69     		ldr	r3, [r7, #24]
 5743 022c 13F5404F 		cmn	r3, #49152
 5744 0230 30DA     		bge	.L386
1816:..\src/interruptions.c ****                 g_meas[n_line].rot[index]++;
 5745              		.loc 1 1816 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 136


 5746 0232 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5747 0234 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5748 0238 1548     		ldr	r0, .L408+40
 5749 023a 3421     		movs	r1, #52
 5750 023c 01FB02F1 		mul	r1, r1, r2
 5751 0240 0144     		add	r1, r1, r0
 5752 0242 1944     		add	r1, r1, r3
 5753 0244 1831     		adds	r1, r1, #24
 5754 0246 91F90010 		ldrsb	r1, [r1]
 5755 024a C9B2     		uxtb	r1, r1
 5756 024c 0131     		adds	r1, r1, #1
 5757 024e C9B2     		uxtb	r1, r1
 5758 0250 4CB2     		sxtb	r4, r1
 5759 0252 0F49     		ldr	r1, .L408+40
 5760 0254 3420     		movs	r0, #52
 5761 0256 00FB02F2 		mul	r2, r0, r2
 5762 025a 0A44     		add	r2, r2, r1
 5763 025c 1344     		add	r3, r3, r2
 5764 025e 1833     		adds	r3, r3, #24
 5765 0260 2246     		mov	r2, r4
 5766 0262 1A70     		strb	r2, [r3]
 5767 0264 3EE0     		b	.L385
 5768              	.L409:
 5769 0266 00BF     		.align	2
 5770              	.L408:
 5771 0268 00000000 		.word	reset_last_value_flag
 5772 026c E0000000 		.word	last_value_encoder.10635
 5773 0270 00000000 		.word	N_Encoder_Line_Connected
 5774 0274 00000000 		.word	c_mem
 5775 0278 00000000 		.word	Encoder_Check
 5776 027c 00000000 		.word	Encoder_Value
 5777 0280 00000000 		.word	data_encoder_raw
 5778 0284 00000000 		.word	g_mem
 5779 0288 F8000000 		.word	comp_value_encoder.10636
 5780 028c 04000000 		.word	only_first_time.10638
 5781 0290 00000000 		.word	g_meas
 5782              	.L386:
1817:..\src/interruptions.c ****             else{
1818:..\src/interruptions.c ****                 if (abs(value_diff) > 16384) { // if two measures are too far
 5783              		.loc 1 1818 0
 5784 0294 BB69     		ldr	r3, [r7, #24]
 5785 0296 002B     		cmp	r3, #0
 5786 0298 B8BF     		it	lt
 5787 029a 5B42     		rsblt	r3, r3, #0
 5788 029c B3F5804F 		cmp	r3, #16384
 5789 02a0 20DD     		ble	.L385
1819:..\src/interruptions.c ****                     error[n_line][index]++;
 5790              		.loc 1 1819 0
 5791 02a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5792 02a4 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5793 02a8 9B48     		ldr	r0, .L410
 5794 02aa 1346     		mov	r3, r2
 5795 02ac 5B00     		lsls	r3, r3, #1
 5796 02ae 1344     		add	r3, r3, r2
 5797 02b0 0344     		add	r3, r3, r0
 5798 02b2 0B44     		add	r3, r3, r1
 5799 02b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 137


 5800 02b6 0133     		adds	r3, r3, #1
 5801 02b8 DCB2     		uxtb	r4, r3
 5802 02ba 9748     		ldr	r0, .L410
 5803 02bc 1346     		mov	r3, r2
 5804 02be 5B00     		lsls	r3, r3, #1
 5805 02c0 1344     		add	r3, r3, r2
 5806 02c2 0344     		add	r3, r3, r0
 5807 02c4 0B44     		add	r3, r3, r1
 5808 02c6 2246     		mov	r2, r4
 5809 02c8 1A70     		strb	r2, [r3]
1820:..\src/interruptions.c ****                                 
1821:..\src/interruptions.c ****                     if (error[n_line][index] < 10)
 5810              		.loc 1 1821 0
 5811 02ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5812 02cc 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5813 02d0 9148     		ldr	r0, .L410
 5814 02d2 1346     		mov	r3, r2
 5815 02d4 5B00     		lsls	r3, r3, #1
 5816 02d6 1344     		add	r3, r3, r2
 5817 02d8 0344     		add	r3, r3, r0
 5818 02da 0B44     		add	r3, r3, r1
 5819 02dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5820 02de 092B     		cmp	r3, #9
 5821 02e0 40F28882 		bls	.L407
 5822              	.L385:
1822:..\src/interruptions.c ****                         // Discard
1823:..\src/interruptions.c ****                         return;
1824:..\src/interruptions.c ****                 }
1825:..\src/interruptions.c ****             }
1826:..\src/interruptions.c ****         }
1827:..\src/interruptions.c **** 
1828:..\src/interruptions.c ****         error[n_line][index] = 0;
 5823              		.loc 1 1828 0
 5824 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5825 02e6 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5826 02ea 8B48     		ldr	r0, .L410
 5827 02ec 1346     		mov	r3, r2
 5828 02ee 5B00     		lsls	r3, r3, #1
 5829 02f0 1344     		add	r3, r3, r2
 5830 02f2 0344     		add	r3, r3, r0
 5831 02f4 0B44     		add	r3, r3, r1
 5832 02f6 0022     		movs	r2, #0
 5833 02f8 1A70     		strb	r2, [r3]
1829:..\src/interruptions.c ****         
1830:..\src/interruptions.c ****         last_value_encoder[n_line][index] = tmp_value_encoder_32;
 5834              		.loc 1 1830 0
 5835 02fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5836 02fc 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5837 0300 8648     		ldr	r0, .L410+4
 5838 0302 1346     		mov	r3, r2
 5839 0304 5B00     		lsls	r3, r3, #1
 5840 0306 1344     		add	r3, r3, r2
 5841 0308 0B44     		add	r3, r3, r1
 5842 030a FA69     		ldr	r2, [r7, #28]
 5843 030c 40F82320 		str	r2, [r0, r3, lsl #2]
1831:..\src/interruptions.c **** 
1832:..\src/interruptions.c ****         value_encoder = (int32)tmp_value_encoder_32;   // SSSSSSSSSSSSSSSS[16] XXXXXXXXXXXX[12] 000
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 138


 5844              		.loc 1 1832 0
 5845 0310 FB69     		ldr	r3, [r7, #28]
 5846 0312 BB62     		str	r3, [r7, #40]
1833:..\src/interruptions.c **** 
1834:..\src/interruptions.c ****         value_encoder += ((int32)g_meas[n_line].rot[index] << 16);    
 5847              		.loc 1 1834 0
 5848 0314 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5849 0316 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5850 031a 8149     		ldr	r1, .L410+8
 5851 031c 3420     		movs	r0, #52
 5852 031e 00FB02F2 		mul	r2, r0, r2
 5853 0322 0A44     		add	r2, r2, r1
 5854 0324 1344     		add	r3, r3, r2
 5855 0326 1833     		adds	r3, r3, #24
 5856 0328 93F90030 		ldrsb	r3, [r3]
 5857 032c 1B04     		lsls	r3, r3, #16
 5858 032e BA6A     		ldr	r2, [r7, #40]
 5859 0330 1344     		add	r3, r3, r2
 5860 0332 BB62     		str	r3, [r7, #40]
1835:..\src/interruptions.c ****         
1836:..\src/interruptions.c ****         if (c_mem.enc[n_line].m_mult[index] != 1.0) {
 5861              		.loc 1 1836 0
 5862 0334 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5863 0336 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5864 033a 7A48     		ldr	r0, .L410+12
 5865 033c 1346     		mov	r3, r2
 5866 033e 5B00     		lsls	r3, r3, #1
 5867 0340 1344     		add	r3, r3, r2
 5868 0342 9B00     		lsls	r3, r3, #2
 5869 0344 0B44     		add	r3, r3, r1
 5870 0346 6833     		adds	r3, r3, #104
 5871 0348 9B00     		lsls	r3, r3, #2
 5872 034a 0344     		add	r3, r3, r0
 5873 034c 5B68     		ldr	r3, [r3, #4]	@ float
 5874 034e 4FF07E51 		mov	r1, #1065353216
 5875 0352 1846     		mov	r0, r3
 5876 0354 FFF7FEFF 		bl	__aeabi_fcmpeq
 5877 0358 0346     		mov	r3, r0
 5878 035a 002B     		cmp	r3, #0
 5879 035c 1AD1     		bne	.L388
1837:..\src/interruptions.c ****             value_encoder *= c_mem.enc[n_line].m_mult[index];
 5880              		.loc 1 1837 0
 5881 035e B86A     		ldr	r0, [r7, #40]
 5882 0360 FFF7FEFF 		bl	__aeabi_i2f
 5883 0364 0446     		mov	r4, r0
 5884 0366 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5885 0368 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5886 036c 6D48     		ldr	r0, .L410+12
 5887 036e 1346     		mov	r3, r2
 5888 0370 5B00     		lsls	r3, r3, #1
 5889 0372 1344     		add	r3, r3, r2
 5890 0374 9B00     		lsls	r3, r3, #2
 5891 0376 0B44     		add	r3, r3, r1
 5892 0378 6833     		adds	r3, r3, #104
 5893 037a 9B00     		lsls	r3, r3, #2
 5894 037c 0344     		add	r3, r3, r0
 5895 037e 5B68     		ldr	r3, [r3, #4]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 139


 5896 0380 1946     		mov	r1, r3
 5897 0382 2046     		mov	r0, r4
 5898 0384 FFF7FEFF 		bl	__aeabi_fmul
 5899 0388 0346     		mov	r3, r0
 5900 038a 1846     		mov	r0, r3
 5901 038c FFF7FEFF 		bl	__aeabi_f2iz
 5902 0390 0346     		mov	r3, r0
 5903 0392 BB62     		str	r3, [r7, #40]
 5904              	.L388:
1838:..\src/interruptions.c ****         }
1839:..\src/interruptions.c **** 
1840:..\src/interruptions.c ****         if (c_mem.dev.dev_type == SOFTHAND_PRO) {
 5905              		.loc 1 1840 0
 5906 0394 634B     		ldr	r3, .L410+12
 5907 0396 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5908 039a 002B     		cmp	r3, #0
 5909 039c 0BD1     		bne	.L390
1841:..\src/interruptions.c ****             // Right / Left hand turn
1842:..\src/interruptions.c ****             if (index == 0) {
 5910              		.loc 1 1842 0
 5911 039e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5912 03a2 002B     		cmp	r3, #0
 5913 03a4 07D1     		bne	.L390
1843:..\src/interruptions.c ****                 if (c_mem.dev.right_left == RIGHT_HAND){
 5914              		.loc 1 1843 0
 5915 03a6 5F4B     		ldr	r3, .L410+12
 5916 03a8 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 5917 03ac 002B     		cmp	r3, #0
 5918 03ae 02D1     		bne	.L390
1844:..\src/interruptions.c ****                     value_encoder *= -1;        
 5919              		.loc 1 1844 0
 5920 03b0 BB6A     		ldr	r3, [r7, #40]
 5921 03b2 5B42     		negs	r3, r3
 5922 03b4 BB62     		str	r3, [r7, #40]
 5923              	.L390:
1845:..\src/interruptions.c ****                 }
1846:..\src/interruptions.c ****             }
1847:..\src/interruptions.c ****         } 
1848:..\src/interruptions.c ****         
1849:..\src/interruptions.c ****         g_meas[n_line].pos[index] = value_encoder;
 5924              		.loc 1 1849 0
 5925 03b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5926 03b8 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 5927 03bc 5848     		ldr	r0, .L410+8
 5928 03be 1346     		mov	r3, r2
 5929 03c0 5B00     		lsls	r3, r3, #1
 5930 03c2 1344     		add	r3, r3, r2
 5931 03c4 9B00     		lsls	r3, r3, #2
 5932 03c6 1344     		add	r3, r3, r2
 5933 03c8 0B44     		add	r3, r3, r1
 5934 03ca BA6A     		ldr	r2, [r7, #40]
 5935 03cc 40F82320 		str	r2, [r0, r3, lsl #2]
1850:..\src/interruptions.c ****     
1851:..\src/interruptions.c ****         speed_encoder = (int16)filter((11*value_encoder - 18* v_value[n_line][index] + 9 * vv_value
 5936              		.loc 1 1851 0
 5937 03d0 BA6A     		ldr	r2, [r7, #40]
 5938 03d2 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 140


 5939 03d4 9B00     		lsls	r3, r3, #2
 5940 03d6 1344     		add	r3, r3, r2
 5941 03d8 5B00     		lsls	r3, r3, #1
 5942 03da 9918     		adds	r1, r3, r2
 5943 03dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5944 03de 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5945 03e2 514C     		ldr	r4, .L410+16
 5946 03e4 1346     		mov	r3, r2
 5947 03e6 5B00     		lsls	r3, r3, #1
 5948 03e8 1344     		add	r3, r3, r2
 5949 03ea 0344     		add	r3, r3, r0
 5950 03ec 54F82330 		ldr	r3, [r4, r3, lsl #2]
 5951 03f0 6FF01102 		mvn	r2, #17
 5952 03f4 02FB03F3 		mul	r3, r2, r3
 5953 03f8 1944     		add	r1, r1, r3
 5954 03fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5955 03fc 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5956 0400 4A4C     		ldr	r4, .L410+20
 5957 0402 1346     		mov	r3, r2
 5958 0404 5B00     		lsls	r3, r3, #1
 5959 0406 1344     		add	r3, r3, r2
 5960 0408 0344     		add	r3, r3, r0
 5961 040a 54F82320 		ldr	r2, [r4, r3, lsl #2]
 5962 040e 1346     		mov	r3, r2
 5963 0410 DB00     		lsls	r3, r3, #3
 5964 0412 1344     		add	r3, r3, r2
 5965 0414 1944     		add	r1, r1, r3
 5966 0416 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5967 0418 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 5968 041c 444C     		ldr	r4, .L410+24
 5969 041e 1346     		mov	r3, r2
 5970 0420 5B00     		lsls	r3, r3, #1
 5971 0422 1344     		add	r3, r3, r2
 5972 0424 0344     		add	r3, r3, r0
 5973 0426 54F82330 		ldr	r3, [r4, r3, lsl #2]
 5974 042a 5B00     		lsls	r3, r3, #1
 5975 042c C81A     		subs	r0, r1, r3
 5976 042e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5977 0432 DB00     		lsls	r3, r3, #3
 5978 0434 3F4A     		ldr	r2, .L410+28
 5979 0436 1344     		add	r3, r3, r2
 5980 0438 1946     		mov	r1, r3
 5981 043a FFF7FEFF 		bl	filter
 5982 043e 0346     		mov	r3, r0
 5983 0440 1BB2     		sxth	r3, r3
 5984 0442 7B61     		str	r3, [r7, #20]
1852:..\src/interruptions.c **** 
1853:..\src/interruptions.c ****         //Update current speed
1854:..\src/interruptions.c ****         speed_encoder = speed_encoder / (6*cycle_time);
 5985              		.loc 1 1854 0
 5986 0444 7869     		ldr	r0, [r7, #20]
 5987 0446 FFF7FEFF 		bl	__aeabi_i2f
 5988 044a 0446     		mov	r4, r0
 5989 044c 3A4B     		ldr	r3, .L410+32
 5990 044e 1B68     		ldr	r3, [r3]	@ float
 5991 0450 3A49     		ldr	r1, .L410+36
 5992 0452 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 141


 5993 0454 FFF7FEFF 		bl	__aeabi_fmul
 5994 0458 0346     		mov	r3, r0
 5995 045a 1946     		mov	r1, r3
 5996 045c 2046     		mov	r0, r4
 5997 045e FFF7FEFF 		bl	__aeabi_fdiv
 5998 0462 0346     		mov	r3, r0
 5999 0464 1846     		mov	r0, r3
 6000 0466 FFF7FEFF 		bl	__aeabi_f2iz
 6001 046a 0346     		mov	r3, r0
 6002 046c 7B61     		str	r3, [r7, #20]
1855:..\src/interruptions.c ****         g_meas[n_line].vel[index] = speed_encoder;
 6003              		.loc 1 1855 0
 6004 046e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6005 0470 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 6006 0474 2A48     		ldr	r0, .L410+8
 6007 0476 1346     		mov	r3, r2
 6008 0478 5B00     		lsls	r3, r3, #1
 6009 047a 1344     		add	r3, r3, r2
 6010 047c 9B00     		lsls	r3, r3, #2
 6011 047e 1344     		add	r3, r3, r2
 6012 0480 0B44     		add	r3, r3, r1
 6013 0482 0633     		adds	r3, r3, #6
 6014 0484 9B00     		lsls	r3, r3, #2
 6015 0486 0344     		add	r3, r3, r0
 6016 0488 7A69     		ldr	r2, [r7, #20]
 6017 048a 5A60     		str	r2, [r3, #4]
1856:..\src/interruptions.c **** 
1857:..\src/interruptions.c ****         // update old velocity and acceleration values
1858:..\src/interruptions.c ****         vvv_value[n_line][index] = vv_value[n_line][index];
 6018              		.loc 1 1858 0
 6019 048c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6020 048e 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 6021 0492 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 6022 0494 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 6023 0498 244D     		ldr	r5, .L410+20
 6024 049a 0B46     		mov	r3, r1
 6025 049c 5B00     		lsls	r3, r3, #1
 6026 049e 0B44     		add	r3, r3, r1
 6027 04a0 2344     		add	r3, r3, r4
 6028 04a2 55F82310 		ldr	r1, [r5, r3, lsl #2]
 6029 04a6 224C     		ldr	r4, .L410+24
 6030 04a8 1346     		mov	r3, r2
 6031 04aa 5B00     		lsls	r3, r3, #1
 6032 04ac 1344     		add	r3, r3, r2
 6033 04ae 0344     		add	r3, r3, r0
 6034 04b0 44F82310 		str	r1, [r4, r3, lsl #2]
1859:..\src/interruptions.c ****         vv_value[n_line][index] = v_value[n_line][index];
 6035              		.loc 1 1859 0
 6036 04b4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6037 04b6 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 6038 04ba F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 6039 04bc 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 6040 04c0 194D     		ldr	r5, .L410+16
 6041 04c2 0B46     		mov	r3, r1
 6042 04c4 5B00     		lsls	r3, r3, #1
 6043 04c6 0B44     		add	r3, r3, r1
 6044 04c8 2344     		add	r3, r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 142


 6045 04ca 55F82310 		ldr	r1, [r5, r3, lsl #2]
 6046 04ce 174C     		ldr	r4, .L410+20
 6047 04d0 1346     		mov	r3, r2
 6048 04d2 5B00     		lsls	r3, r3, #1
 6049 04d4 1344     		add	r3, r3, r2
 6050 04d6 0344     		add	r3, r3, r0
 6051 04d8 44F82310 		str	r1, [r4, r3, lsl #2]
1860:..\src/interruptions.c ****         v_value[n_line][index] = value_encoder;
 6052              		.loc 1 1860 0
 6053 04dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6054 04de 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 6055 04e2 1148     		ldr	r0, .L410+16
 6056 04e4 1346     		mov	r3, r2
 6057 04e6 5B00     		lsls	r3, r3, #1
 6058 04e8 1344     		add	r3, r3, r2
 6059 04ea 0B44     		add	r3, r3, r1
 6060 04ec BA6A     		ldr	r2, [r7, #40]
 6061 04ee 40F82320 		str	r2, [r0, r3, lsl #2]
1861:..\src/interruptions.c **** 
1862:..\src/interruptions.c ****         // wait at least 5 * max_num_of_error (10) + 5 = 55 cycles to reconstruct the right turn
1863:..\src/interruptions.c ****         if (pos_reconstruct[n_line] == FALSE){
 6062              		.loc 1 1863 0
 6063 04f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6064 04f4 124A     		ldr	r2, .L410+40
 6065 04f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6066 04f8 002B     		cmp	r3, #0
 6067 04fa 40F03781 		bne	.L391
1864:..\src/interruptions.c ****             if (one_time_execute[n_line] < 54) 
 6068              		.loc 1 1864 0
 6069 04fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6070 0500 104A     		ldr	r2, .L410+44
 6071 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6072 0504 352B     		cmp	r3, #53
 6073 0506 1FD8     		bhi	.L392
1865:..\src/interruptions.c ****                 one_time_execute[n_line]++;
 6074              		.loc 1 1865 0
 6075 0508 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6076 050a 0E4A     		ldr	r2, .L410+44
 6077 050c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 6078 050e 0132     		adds	r2, r2, #1
 6079 0510 D1B2     		uxtb	r1, r2
 6080 0512 0C4A     		ldr	r2, .L410+44
 6081 0514 D154     		strb	r1, [r2, r3]
 6082 0516 29E1     		b	.L391
 6083              	.L411:
 6084              		.align	2
 6085              	.L410:
 6086 0518 10010000 		.word	error.10637
 6087 051c E0000000 		.word	last_value_encoder.10635
 6088 0520 00000000 		.word	g_meas
 6089 0524 00000000 		.word	c_mem
 6090 0528 18010000 		.word	v_value.10642
 6091 052c 30010000 		.word	vv_value.10643
 6092 0530 48010000 		.word	vvv_value.10644
 6093 0534 00000000 		.word	filt_vel
 6094 0538 00000000 		.word	cycle_time
 6095 053c 0000C040 		.word	1086324736
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 143


 6096 0540 00000000 		.word	pos_reconstruct
 6097 0544 60010000 		.word	one_time_execute.10640
 6098              	.L392:
1866:..\src/interruptions.c ****             else {
1867:..\src/interruptions.c **** 
1868:..\src/interruptions.c ****                 //Double encoder translation
1869:..\src/interruptions.c ****                 if (c_mem.enc[n_line].double_encoder_on_off){
 6099              		.loc 1 1869 0
 6100 0548 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6101 054a AC49     		ldr	r1, .L412
 6102 054c 1346     		mov	r3, r2
 6103 054e 5B00     		lsls	r3, r3, #1
 6104 0550 1344     		add	r3, r3, r2
 6105 0552 1B01     		lsls	r3, r3, #4
 6106 0554 0B44     		add	r3, r3, r1
 6107 0556 03F5D873 		add	r3, r3, #432
 6108 055a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6109 055c 002B     		cmp	r3, #0
 6110 055e 5ED0     		beq	.L393
1870:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 6111              		.loc 1 1870 0
 6112 0560 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6113 0562 A749     		ldr	r1, .L412+4
 6114 0564 1346     		mov	r3, r2
 6115 0566 5B00     		lsls	r3, r3, #1
 6116 0568 1344     		add	r3, r3, r2
 6117 056a 9B00     		lsls	r3, r3, #2
 6118 056c 0B44     		add	r3, r3, r1
 6119 056e 1868     		ldr	r0, [r3]
 6120 0570 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6121 0572 A349     		ldr	r1, .L412+4
 6122 0574 1346     		mov	r3, r2
 6123 0576 5B00     		lsls	r3, r3, #1
 6124 0578 1344     		add	r3, r3, r2
 6125 057a 9B00     		lsls	r3, r3, #2
 6126 057c 0B44     		add	r3, r3, r1
 6127 057e 0433     		adds	r3, r3, #4
 6128 0580 1C68     		ldr	r4, [r3]
1871:..\src/interruptions.c ****                                 c_mem.enc[n_line].gears_params[0], c_mem.enc[n_line].gears_params[1
 6129              		.loc 1 1871 0
 6130 0582 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6131 0584 9D49     		ldr	r1, .L412
 6132 0586 1346     		mov	r3, r2
 6133 0588 5B00     		lsls	r3, r3, #1
 6134 058a 1344     		add	r3, r3, r2
 6135 058c 1B01     		lsls	r3, r3, #4
 6136 058e 0B44     		add	r3, r3, r1
 6137 0590 03F2B513 		addw	r3, r3, #437
 6138 0594 93F90030 		ldrsb	r3, [r3]
1870:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 6139              		.loc 1 1870 0
 6140 0598 1D46     		mov	r5, r3
 6141              		.loc 1 1871 0
 6142 059a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6143 059c 9749     		ldr	r1, .L412
 6144 059e 1346     		mov	r3, r2
 6145 05a0 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 144


 6146 05a2 1344     		add	r3, r3, r2
 6147 05a4 1B01     		lsls	r3, r3, #4
 6148 05a6 0B44     		add	r3, r3, r1
 6149 05a8 03F5DB73 		add	r3, r3, #438
 6150 05ac 93F90030 		ldrsb	r3, [r3]
1870:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 6151              		.loc 1 1870 0
 6152 05b0 1E46     		mov	r6, r3
 6153              		.loc 1 1871 0
 6154 05b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6155 05b4 9149     		ldr	r1, .L412
 6156 05b6 1346     		mov	r3, r2
 6157 05b8 5B00     		lsls	r3, r3, #1
 6158 05ba 1344     		add	r3, r3, r2
 6159 05bc 1B01     		lsls	r3, r3, #4
 6160 05be 0B44     		add	r3, r3, r1
 6161 05c0 03F2B713 		addw	r3, r3, #439
 6162 05c4 93F90030 		ldrsb	r3, [r3]
1870:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 6163              		.loc 1 1870 0
 6164 05c8 0093     		str	r3, [sp]
 6165 05ca 3346     		mov	r3, r6
 6166 05cc 2A46     		mov	r2, r5
 6167 05ce 2146     		mov	r1, r4
 6168 05d0 FFF7FEFF 		bl	calc_turns_fcn
 6169 05d4 0346     		mov	r3, r0
 6170 05d6 87F82730 		strb	r3, [r7, #39]
1872:..\src/interruptions.c **** 
1873:..\src/interruptions.c **** 
1874:..\src/interruptions.c ****                     if (c_mem.enc[n_line].m_mult[0] < 0)
 6171              		.loc 1 1874 0
 6172 05da FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6173 05dc 8749     		ldr	r1, .L412
 6174 05de 1346     		mov	r3, r2
 6175 05e0 5B00     		lsls	r3, r3, #1
 6176 05e2 1344     		add	r3, r3, r2
 6177 05e4 1B01     		lsls	r3, r3, #4
 6178 05e6 0B44     		add	r3, r3, r1
 6179 05e8 03F5D273 		add	r3, r3, #420
 6180 05ec 1B68     		ldr	r3, [r3]	@ float
 6181 05ee 4FF00001 		mov	r1, #0
 6182 05f2 1846     		mov	r0, r3
 6183 05f4 FFF7FEFF 		bl	__aeabi_fcmplt
 6184 05f8 0346     		mov	r3, r0
 6185 05fa 002B     		cmp	r3, #0
 6186 05fc 05D0     		beq	.L394
1875:..\src/interruptions.c ****                         init_rot = -init_rot;
 6187              		.loc 1 1875 0
 6188 05fe 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 6189 0602 5B42     		negs	r3, r3
 6190 0604 DBB2     		uxtb	r3, r3
 6191 0606 87F82730 		strb	r3, [r7, #39]
 6192              	.L394:
1876:..\src/interruptions.c ****                     
1877:..\src/interruptions.c ****                     g_meas[n_line].rot[0] = (int8)init_rot;
 6193              		.loc 1 1877 0
 6194 060a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 145


 6195 060c 7D4A     		ldr	r2, .L412+8
 6196 060e 3421     		movs	r1, #52
 6197 0610 01FB03F3 		mul	r3, r1, r3
 6198 0614 1344     		add	r3, r3, r2
 6199 0616 1833     		adds	r3, r3, #24
 6200 0618 97F82720 		ldrb	r2, [r7, #39]
 6201 061c 1A70     		strb	r2, [r3]
 6202              	.L393:
1878:..\src/interruptions.c ****                 }    
1879:..\src/interruptions.c **** 
1880:..\src/interruptions.c ****                 if (c_mem.enc[n_line].m_mult[0] != 1.0)
 6203              		.loc 1 1880 0
 6204 061e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6205 0620 7649     		ldr	r1, .L412
 6206 0622 1346     		mov	r3, r2
 6207 0624 5B00     		lsls	r3, r3, #1
 6208 0626 1344     		add	r3, r3, r2
 6209 0628 1B01     		lsls	r3, r3, #4
 6210 062a 0B44     		add	r3, r3, r1
 6211 062c 03F5D273 		add	r3, r3, #420
 6212 0630 1B68     		ldr	r3, [r3]	@ float
 6213 0632 4FF07E51 		mov	r1, #1065353216
 6214 0636 1846     		mov	r0, r3
 6215 0638 FFF7FEFF 		bl	__aeabi_fcmpeq
 6216 063c 0346     		mov	r3, r0
 6217 063e 002B     		cmp	r3, #0
 6218 0640 22D1     		bne	.L396
1881:..\src/interruptions.c ****                     g_meas[n_line].pos[0] /= c_mem.enc[n_line].m_mult[0];
 6219              		.loc 1 1881 0
 6220 0642 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 6221 0644 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6222 0646 6F4A     		ldr	r2, .L412+8
 6223 0648 3421     		movs	r1, #52
 6224 064a 01FB03F3 		mul	r3, r1, r3
 6225 064e 1344     		add	r3, r3, r2
 6226 0650 1B68     		ldr	r3, [r3]
 6227 0652 1846     		mov	r0, r3
 6228 0654 FFF7FEFF 		bl	__aeabi_i2f
 6229 0658 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6230 065a 6849     		ldr	r1, .L412
 6231 065c 1346     		mov	r3, r2
 6232 065e 5B00     		lsls	r3, r3, #1
 6233 0660 1344     		add	r3, r3, r2
 6234 0662 1B01     		lsls	r3, r3, #4
 6235 0664 0B44     		add	r3, r3, r1
 6236 0666 03F5D273 		add	r3, r3, #420
 6237 066a 1B68     		ldr	r3, [r3]	@ float
 6238 066c 1946     		mov	r1, r3
 6239 066e FFF7FEFF 		bl	__aeabi_fdiv
 6240 0672 0346     		mov	r3, r0
 6241 0674 1846     		mov	r0, r3
 6242 0676 FFF7FEFF 		bl	__aeabi_f2iz
 6243 067a 0146     		mov	r1, r0
 6244 067c 614A     		ldr	r2, .L412+8
 6245 067e 3423     		movs	r3, #52
 6246 0680 03FB04F3 		mul	r3, r3, r4
 6247 0684 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 146


 6248 0686 1960     		str	r1, [r3]
 6249              	.L396:
1882:..\src/interruptions.c ****                 
1883:..\src/interruptions.c ****                 value_encoder += ((int32)init_rot << 16); 
 6250              		.loc 1 1883 0
 6251 0688 97F92730 		ldrsb	r3, [r7, #39]
 6252 068c 1B04     		lsls	r3, r3, #16
 6253 068e BA6A     		ldr	r2, [r7, #40]
 6254 0690 1344     		add	r3, r3, r2
 6255 0692 BB62     		str	r3, [r7, #40]
1884:..\src/interruptions.c ****        
1885:..\src/interruptions.c ****                 if (c_mem.enc[n_line].m_mult[0] != 1.0) {
 6256              		.loc 1 1885 0
 6257 0694 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6258 0696 5949     		ldr	r1, .L412
 6259 0698 1346     		mov	r3, r2
 6260 069a 5B00     		lsls	r3, r3, #1
 6261 069c 1344     		add	r3, r3, r2
 6262 069e 1B01     		lsls	r3, r3, #4
 6263 06a0 0B44     		add	r3, r3, r1
 6264 06a2 03F5D273 		add	r3, r3, #420
 6265 06a6 1B68     		ldr	r3, [r3]	@ float
 6266 06a8 4FF07E51 		mov	r1, #1065353216
 6267 06ac 1846     		mov	r0, r3
 6268 06ae FFF7FEFF 		bl	__aeabi_fcmpeq
 6269 06b2 0346     		mov	r3, r0
 6270 06b4 002B     		cmp	r3, #0
 6271 06b6 15D1     		bne	.L398
1886:..\src/interruptions.c ****                     value_encoder *= c_mem.enc[n_line].m_mult[0];
 6272              		.loc 1 1886 0
 6273 06b8 B86A     		ldr	r0, [r7, #40]
 6274 06ba FFF7FEFF 		bl	__aeabi_i2f
 6275 06be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6276 06c0 4E49     		ldr	r1, .L412
 6277 06c2 1346     		mov	r3, r2
 6278 06c4 5B00     		lsls	r3, r3, #1
 6279 06c6 1344     		add	r3, r3, r2
 6280 06c8 1B01     		lsls	r3, r3, #4
 6281 06ca 0B44     		add	r3, r3, r1
 6282 06cc 03F5D273 		add	r3, r3, #420
 6283 06d0 1B68     		ldr	r3, [r3]	@ float
 6284 06d2 1946     		mov	r1, r3
 6285 06d4 FFF7FEFF 		bl	__aeabi_fmul
 6286 06d8 0346     		mov	r3, r0
 6287 06da 1846     		mov	r0, r3
 6288 06dc FFF7FEFF 		bl	__aeabi_f2iz
 6289 06e0 0346     		mov	r3, r0
 6290 06e2 BB62     		str	r3, [r7, #40]
 6291              	.L398:
1887:..\src/interruptions.c ****                 }
1888:..\src/interruptions.c **** 
1889:..\src/interruptions.c ****                 if (c_mem.dev.dev_type == SOFTHAND_PRO) {
 6292              		.loc 1 1889 0
 6293 06e4 454B     		ldr	r3, .L412
 6294 06e6 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 6295 06ea 002B     		cmp	r3, #0
 6296 06ec 07D1     		bne	.L400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 147


1890:..\src/interruptions.c ****                     // Right / Left hand turn
1891:..\src/interruptions.c ****                     if (c_mem.dev.right_left == RIGHT_HAND){
 6297              		.loc 1 1891 0
 6298 06ee 434B     		ldr	r3, .L412
 6299 06f0 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 6300 06f4 002B     		cmp	r3, #0
 6301 06f6 02D1     		bne	.L400
1892:..\src/interruptions.c ****                         value_encoder *= -1;        
 6302              		.loc 1 1892 0
 6303 06f8 BB6A     		ldr	r3, [r7, #40]
 6304 06fa 5B42     		negs	r3, r3
 6305 06fc BB62     		str	r3, [r7, #40]
 6306              	.L400:
1893:..\src/interruptions.c ****                     }
1894:..\src/interruptions.c ****                 }
1895:..\src/interruptions.c ****          
1896:..\src/interruptions.c ****                 g_meas[n_line].pos[0] = value_encoder;
 6307              		.loc 1 1896 0
 6308 06fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6309 0700 404A     		ldr	r2, .L412+8
 6310 0702 3421     		movs	r1, #52
 6311 0704 01FB03F3 		mul	r3, r1, r3
 6312 0708 1344     		add	r3, r3, r2
 6313 070a BA6A     		ldr	r2, [r7, #40]
 6314 070c 1A60     		str	r2, [r3]
1897:..\src/interruptions.c ****                 
1898:..\src/interruptions.c ****                 g_refNew[assoc_motor].pos = g_meas[n_line].pos[0];
 6315              		.loc 1 1898 0
 6316 070e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6317 0710 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6318 0712 3C49     		ldr	r1, .L412+8
 6319 0714 3420     		movs	r0, #52
 6320 0716 00FB02F2 		mul	r2, r0, r2
 6321 071a 0A44     		add	r2, r2, r1
 6322 071c 1268     		ldr	r2, [r2]
 6323 071e 3A49     		ldr	r1, .L412+12
 6324 0720 1B01     		lsls	r3, r3, #4
 6325 0722 0B44     		add	r3, r3, r1
 6326 0724 1A60     		str	r2, [r3]
1899:..\src/interruptions.c **** 
1900:..\src/interruptions.c ****                 // If necessary activate motor
1901:..\src/interruptions.c ****     			safe_startup_motor_activation[n_line] = TRUE;
 6327              		.loc 1 1901 0
 6328 0726 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6329 0728 384A     		ldr	r2, .L412+16
 6330 072a 0121     		movs	r1, #1
 6331 072c D154     		strb	r1, [r2, r3]
1902:..\src/interruptions.c ****                 // Activate the motor associated to this encoder line
1903:..\src/interruptions.c ****                 g_refNew[assoc_motor].onoff = c_mem.motor[assoc_motor].activ;
 6332              		.loc 1 1903 0
 6333 072e B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 6334 0730 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 6335 0732 3248     		ldr	r0, .L412
 6336 0734 1346     		mov	r3, r2
 6337 0736 DB00     		lsls	r3, r3, #3
 6338 0738 9B1A     		subs	r3, r3, r2
 6339 073a 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 148


 6340 073c 0344     		add	r3, r3, r0
 6341 073e E033     		adds	r3, r3, #224
 6342 0740 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6343 0742 314A     		ldr	r2, .L412+12
 6344 0744 0B01     		lsls	r3, r1, #4
 6345 0746 1344     		add	r3, r3, r2
 6346 0748 0C33     		adds	r3, r3, #12
 6347 074a 0246     		mov	r2, r0
 6348 074c 1A70     		strb	r2, [r3]
1904:..\src/interruptions.c ****                 enable_motor(assoc_motor, g_refNew[assoc_motor].onoff);                
 6349              		.loc 1 1904 0
 6350 074e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6351 0750 2D4A     		ldr	r2, .L412+12
 6352 0752 1B01     		lsls	r3, r3, #4
 6353 0754 1344     		add	r3, r3, r2
 6354 0756 0C33     		adds	r3, r3, #12
 6355 0758 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6356 075a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6357 075c 1146     		mov	r1, r2
 6358 075e 1846     		mov	r0, r3
 6359 0760 FFF7FEFF 		bl	enable_motor
1905:..\src/interruptions.c ****                 
1906:..\src/interruptions.c ****                 pos_reconstruct[n_line] = TRUE;
 6360              		.loc 1 1906 0
 6361 0764 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6362 0766 2A4A     		ldr	r2, .L412+20
 6363 0768 0121     		movs	r1, #1
 6364 076a D154     		strb	r1, [r2, r3]
 6365              	.L391:
1768:..\src/interruptions.c ****         
 6366              		.loc 1 1768 0 discriminator 2
 6367 076c 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 6368 0770 0133     		adds	r3, r3, #1
 6369 0772 87F82F30 		strb	r3, [r7, #47]
 6370              	.L380:
1768:..\src/interruptions.c ****         
 6371              		.loc 1 1768 0 is_stmt 0 discriminator 1
 6372 0776 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 6373 077a 022B     		cmp	r3, #2
 6374 077c 7FF6C5AC 		bls	.L401
1907:..\src/interruptions.c ****             }
1908:..\src/interruptions.c ****         }
1909:..\src/interruptions.c ****     } 
1910:..\src/interruptions.c **** 
1911:..\src/interruptions.c **** 	
1912:..\src/interruptions.c **** 	// Wait for 35+SAFE_STARTUP_MOTOR_READINGS cycles before starting motors
1913:..\src/interruptions.c ****     if (safe_startup_motor_activation[n_line]){
 6375              		.loc 1 1913 0 is_stmt 1
 6376 0780 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6377 0782 224A     		ldr	r2, .L412+16
 6378 0784 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6379 0786 002B     		cmp	r3, #0
 6380 0788 35D0     		beq	.L371
1914:..\src/interruptions.c ****         count_startup_motor[n_line]++;
 6381              		.loc 1 1914 0
 6382 078a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6383 078c 214A     		ldr	r2, .L412+24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 149


 6384 078e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 6385 0792 0132     		adds	r2, r2, #1
 6386 0794 1F49     		ldr	r1, .L412+24
 6387 0796 41F82320 		str	r2, [r1, r3, lsl #2]
1915:..\src/interruptions.c ****         if (count_startup_motor[n_line] >= (uint32)SAFE_STARTUP_MOTOR_READINGS) {                  
 6388              		.loc 1 1915 0
 6389 079a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6390 079c 1D4A     		ldr	r2, .L412+24
 6391 079e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 6392 07a2 B3F5FA5F 		cmp	r3, #8000
 6393 07a6 26D3     		bcc	.L371
1916:..\src/interruptions.c ****             g_refNew[assoc_motor].pos = 0;
 6394              		.loc 1 1916 0
 6395 07a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6396 07aa 174A     		ldr	r2, .L412+12
 6397 07ac 1B01     		lsls	r3, r3, #4
 6398 07ae 1344     		add	r3, r3, r2
 6399 07b0 0022     		movs	r2, #0
 6400 07b2 1A60     		str	r2, [r3]
1917:..\src/interruptions.c ****             
1918:..\src/interruptions.c ****             // Activate the motor associated to this encoder line
1919:..\src/interruptions.c ****             g_refNew[assoc_motor].onoff = c_mem.motor[assoc_motor].activ;
 6401              		.loc 1 1919 0
 6402 07b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 6403 07b6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 6404 07b8 1048     		ldr	r0, .L412
 6405 07ba 1346     		mov	r3, r2
 6406 07bc DB00     		lsls	r3, r3, #3
 6407 07be 9B1A     		subs	r3, r3, r2
 6408 07c0 1B01     		lsls	r3, r3, #4
 6409 07c2 0344     		add	r3, r3, r0
 6410 07c4 E033     		adds	r3, r3, #224
 6411 07c6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6412 07c8 0F4A     		ldr	r2, .L412+12
 6413 07ca 0B01     		lsls	r3, r1, #4
 6414 07cc 1344     		add	r3, r3, r2
 6415 07ce 0C33     		adds	r3, r3, #12
 6416 07d0 0246     		mov	r2, r0
 6417 07d2 1A70     		strb	r2, [r3]
1920:..\src/interruptions.c ****             enable_motor(assoc_motor, g_refNew[assoc_motor].onoff); 
 6418              		.loc 1 1920 0
 6419 07d4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6420 07d6 0C4A     		ldr	r2, .L412+12
 6421 07d8 1B01     		lsls	r3, r3, #4
 6422 07da 1344     		add	r3, r3, r2
 6423 07dc 0C33     		adds	r3, r3, #12
 6424 07de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6425 07e0 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6426 07e2 1146     		mov	r1, r2
 6427 07e4 1846     		mov	r0, r3
 6428 07e6 FFF7FEFF 		bl	enable_motor
1921:..\src/interruptions.c ****                         
1922:..\src/interruptions.c ****             safe_startup_motor_activation[n_line] = FALSE;
 6429              		.loc 1 1922 0
 6430 07ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6431 07ec 074A     		ldr	r2, .L412+16
 6432 07ee 0021     		movs	r1, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 150


 6433 07f0 D154     		strb	r1, [r2, r3]
 6434 07f2 00E0     		b	.L371
 6435              	.L407:
1823:..\src/interruptions.c ****                 }
 6436              		.loc 1 1823 0
 6437 07f4 00BF     		nop
 6438              	.L371:
1923:..\src/interruptions.c ****         }
1924:..\src/interruptions.c ****     }
1925:..\src/interruptions.c ****  
1926:..\src/interruptions.c **** }
 6439              		.loc 1 1926 0
 6440 07f6 3437     		adds	r7, r7, #52
 6441              		.cfi_def_cfa_offset 20
 6442 07f8 BD46     		mov	sp, r7
 6443              		.cfi_def_cfa_register 13
 6444              		@ sp needed
 6445 07fa F0BD     		pop	{r4, r5, r6, r7, pc}
 6446              	.L413:
 6447              		.align	2
 6448              	.L412:
 6449 07fc 00000000 		.word	c_mem
 6450 0800 F8000000 		.word	comp_value_encoder.10636
 6451 0804 00000000 		.word	g_meas
 6452 0808 00000000 		.word	g_refNew
 6453 080c 64010000 		.word	safe_startup_motor_activation.10639
 6454 0810 00000000 		.word	pos_reconstruct
 6455 0814 68010000 		.word	count_startup_motor.10641
 6456              		.cfi_endproc
 6457              	.LFE73:
 6458              		.size	encoder_reading_SPI, .-encoder_reading_SPI
 6459              		.global	__aeabi_f2d
 6460              		.global	__aeabi_ddiv
 6461              		.global	__aeabi_d2f
 6462              		.section	.text.analog_read_end,"ax",%progbits
 6463              		.align	2
 6464              		.global	analog_read_end
 6465              		.thumb
 6466              		.thumb_func
 6467              		.type	analog_read_end, %function
 6468              	analog_read_end:
 6469              	.LFB74:
1927:..\src/interruptions.c **** 
1928:..\src/interruptions.c **** //==============================================================================
1929:..\src/interruptions.c **** //                                                           ANALOG MEASUREMENTS
1930:..\src/interruptions.c **** //==============================================================================
1931:..\src/interruptions.c **** 
1932:..\src/interruptions.c **** void analog_read_end() {
 6470              		.loc 1 1932 0
 6471              		.cfi_startproc
 6472              		@ args = 0, pretend = 0, frame = 8
 6473              		@ frame_needed = 1, uses_anonymous_args = 0
 6474 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6475              		.cfi_def_cfa_offset 20
 6476              		.cfi_offset 4, -20
 6477              		.cfi_offset 5, -16
 6478              		.cfi_offset 6, -12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 151


 6479              		.cfi_offset 7, -8
 6480              		.cfi_offset 14, -4
 6481 0002 83B0     		sub	sp, sp, #12
 6482              		.cfi_def_cfa_offset 32
 6483 0004 00AF     		add	r7, sp, #0
 6484              		.cfi_def_cfa_register 7
1933:..\src/interruptions.c **** 
1934:..\src/interruptions.c ****     /* =========================================================================
1935:..\src/interruptions.c ****     /   Ideal formulation to calculate tension and current
1936:..\src/interruptions.c ****     /
1937:..\src/interruptions.c ****     /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
1938:..\src/interruptions.c ****     /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
1939:..\src/interruptions.c ****     /
1940:..\src/interruptions.c ****     /   Definition:
1941:..\src/interruptions.c ****     /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
1942:..\src/interruptions.c ****     /   offset = 2000 -> hardware amplifier bias in mV
1943:..\src/interruptions.c ****     /   gain = 8.086 -> amplifier gain
1944:..\src/interruptions.c ****     /   resistor = 18 -> resistor of voltage divider in KOhm 
1945:..\src/interruptions.c ****     /
1946:..\src/interruptions.c ****     /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
1947:..\src/interruptions.c ****     /   and offset unit of measurement is counts, instead dev_tension and
1948:..\src/interruptions.c ****     /   g_meas.curr[] are converted in properly unit.
1949:..\src/interruptions.c ****     /  =========================================================================
1950:..\src/interruptions.c ****     */
1951:..\src/interruptions.c **** 
1952:..\src/interruptions.c ****     int32 CYDATA i_aux;
1953:..\src/interruptions.c **** 
1954:..\src/interruptions.c ****     static uint16 emg_counter_1 = 0;
1955:..\src/interruptions.c ****     static uint16 emg_counter_2 = 0;
1956:..\src/interruptions.c ****     static uint16 UD_counter = 0;
1957:..\src/interruptions.c ****     static uint16 LR_counter = 0;
1958:..\src/interruptions.c ****     static int32 UD_mean_value;
1959:..\src/interruptions.c ****     static int32 LR_mean_value;
1960:..\src/interruptions.c **** 	static uint8 first_tension_valid = TRUE;
1961:..\src/interruptions.c ****     static int32 detect_power_cycle_prev = -3;
1962:..\src/interruptions.c ****     static uint16 count = 0;
1963:..\src/interruptions.c ****     static uint32 v_count = 0;
1964:..\src/interruptions.c ****     static uint8 idx = 0;
1965:..\src/interruptions.c ****     
1966:..\src/interruptions.c ****     
1967:..\src/interruptions.c ****     // Wait for conversion end
1968:..\src/interruptions.c ****     
1969:..\src/interruptions.c ****     while(!ADC_STATUS_Read()){
 6485              		.loc 1 1969 0
 6486 0006 08E0     		b	.L415
 6487              	.L416:
1970:..\src/interruptions.c ****         
1971:..\src/interruptions.c ****         if (interrupt_flag){
 6488              		.loc 1 1971 0
 6489 0008 874B     		ldr	r3, .L575+8
 6490 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6491 000c 002B     		cmp	r3, #0
 6492 000e 04D0     		beq	.L415
1972:..\src/interruptions.c ****             interrupt_flag = FALSE;
 6493              		.loc 1 1972 0
 6494 0010 854B     		ldr	r3, .L575+8
 6495 0012 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 152


 6496 0014 1A70     		strb	r2, [r3]
1973:..\src/interruptions.c ****             interrupt_manager();
 6497              		.loc 1 1973 0
 6498 0016 FFF7FEFF 		bl	interrupt_manager
 6499              	.L415:
1969:..\src/interruptions.c ****         
 6500              		.loc 1 1969 0
 6501 001a FFF7FEFF 		bl	ADC_STATUS_Read
 6502 001e 0346     		mov	r3, r0
 6503 0020 002B     		cmp	r3, #0
 6504 0022 F1D0     		beq	.L416
1974:..\src/interruptions.c ****         }
1975:..\src/interruptions.c ****     }
1976:..\src/interruptions.c ****     
1977:..\src/interruptions.c **** #ifdef AIR_CHAMBERS_FB_FW
1978:..\src/interruptions.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
 6505              		.loc 1 1978 0
 6506 0024 814B     		ldr	r3, .L575+12
 6507 0026 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 6508 002a 022B     		cmp	r3, #2
 6509 002c 34D1     		bne	.L417
1979:..\src/interruptions.c ****         // Read pressure in any case
1980:..\src/interruptions.c ****         g_fb_meas.pressure  = (int32)(ADC_buf[0] -1540);    //0 - 4096  
 6510              		.loc 1 1980 0
 6511 002e 804B     		ldr	r3, .L575+16
 6512 0030 B3F90030 		ldrsh	r3, [r3]
 6513 0034 A3F20463 		subw	r3, r3, #1540
 6514 0038 1846     		mov	r0, r3
 6515 003a FFF7FEFF 		bl	__aeabi_i2f
 6516 003e 0246     		mov	r2, r0
 6517 0040 7C4B     		ldr	r3, .L575+20
 6518 0042 1A60     		str	r2, [r3]	@ float
1981:..\src/interruptions.c ****         g_fb_meas.pressure = (((float)g_fb_meas.pressure/4096.0)/0.004);       // datasheet transfe
 6519              		.loc 1 1981 0
 6520 0044 7B4B     		ldr	r3, .L575+20
 6521 0046 1B68     		ldr	r3, [r3]	@ float
 6522 0048 1846     		mov	r0, r3
 6523 004a FFF7FEFF 		bl	__aeabi_f2d
 6524 004e 4FF00002 		mov	r2, #0
 6525 0052 794B     		ldr	r3, .L575+24
 6526 0054 FFF7FEFF 		bl	__aeabi_ddiv
 6527 0058 0346     		mov	r3, r0
 6528 005a 0C46     		mov	r4, r1
 6529 005c 1846     		mov	r0, r3
 6530 005e 2146     		mov	r1, r4
 6531 0060 6FA3     		adr	r3, .L575
 6532 0062 D3E90023 		ldrd	r2, [r3]
 6533 0066 FFF7FEFF 		bl	__aeabi_ddiv
 6534 006a 0346     		mov	r3, r0
 6535 006c 0C46     		mov	r4, r1
 6536 006e 1846     		mov	r0, r3
 6537 0070 2146     		mov	r1, r4
 6538 0072 FFF7FEFF 		bl	__aeabi_d2f
 6539 0076 0246     		mov	r2, r0
 6540 0078 6E4B     		ldr	r3, .L575+20
 6541 007a 1A60     		str	r2, [r3]	@ float
1982:..\src/interruptions.c ****         if (g_fb_meas.pressure < 0) g_fb_meas.pressure = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 153


 6542              		.loc 1 1982 0
 6543 007c 6D4B     		ldr	r3, .L575+20
 6544 007e 1B68     		ldr	r3, [r3]	@ float
 6545 0080 4FF00001 		mov	r1, #0
 6546 0084 1846     		mov	r0, r3
 6547 0086 FFF7FEFF 		bl	__aeabi_fcmplt
 6548 008a 0346     		mov	r3, r0
 6549 008c 002B     		cmp	r3, #0
 6550 008e 03D0     		beq	.L417
 6551              		.loc 1 1982 0 is_stmt 0 discriminator 1
 6552 0090 684B     		ldr	r3, .L575+20
 6553 0092 4FF00002 		mov	r2, #0
 6554 0096 1A60     		str	r2, [r3]	@ float
 6555              	.L417:
1983:..\src/interruptions.c ****     }
1984:..\src/interruptions.c **** #endif
1985:..\src/interruptions.c ****  
1986:..\src/interruptions.c ****     // Convert tension read
1987:..\src/interruptions.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
 6556              		.loc 1 1987 0 is_stmt 1
 6557 0098 684B     		ldr	r3, .L575+28
 6558 009a 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 6559 009e 022B     		cmp	r3, #2
 6560 00a0 04D1     		bne	.L419
1988:..\src/interruptions.c ****         dev_tension[0] = 5000;
 6561              		.loc 1 1988 0
 6562 00a2 674B     		ldr	r3, .L575+32
 6563 00a4 41F28832 		movw	r2, #5000
 6564 00a8 1A60     		str	r2, [r3]
 6565 00aa 0BE0     		b	.L420
 6566              	.L419:
1989:..\src/interruptions.c ****     }
1990:..\src/interruptions.c ****     else {
1991:..\src/interruptions.c ****         dev_tension[0] =  ((int32)(ADC_buf[0] - 1621) * 1990) >> 7;
 6567              		.loc 1 1991 0
 6568 00ac 604B     		ldr	r3, .L575+16
 6569 00ae B3F90030 		ldrsh	r3, [r3]
 6570 00b2 A3F25563 		subw	r3, r3, #1621
 6571 00b6 40F2C672 		movw	r2, #1990
 6572 00ba 02FB03F3 		mul	r3, r2, r3
 6573 00be DB11     		asrs	r3, r3, #7
 6574 00c0 5F4A     		ldr	r2, .L575+32
 6575 00c2 1360     		str	r3, [r2]
 6576              	.L420:
1992:..\src/interruptions.c ****     }
1993:..\src/interruptions.c ****     
1994:..\src/interruptions.c ****     // Read also 2nd power tension (if necessary)
1995:..\src/interruptions.c ****     if (NUM_OF_ANALOG_INPUTS > 4) {
 6577              		.loc 1 1995 0
 6578 00c4 5F4B     		ldr	r3, .L575+36
 6579 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6580 00c8 042B     		cmp	r3, #4
 6581 00ca 0BD9     		bls	.L421
1996:..\src/interruptions.c ****         dev_tension[1] = ((int32)(ADC_buf[4] - 1621) * 1990) >> 7;
 6582              		.loc 1 1996 0
 6583 00cc 584B     		ldr	r3, .L575+16
 6584 00ce B3F90830 		ldrsh	r3, [r3, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 154


 6585 00d2 A3F25563 		subw	r3, r3, #1621
 6586 00d6 40F2C672 		movw	r2, #1990
 6587 00da 02FB03F3 		mul	r3, r2, r3
 6588 00de DB11     		asrs	r3, r3, #7
 6589 00e0 574A     		ldr	r2, .L575+32
 6590 00e2 5360     		str	r3, [r2, #4]
 6591              	.L421:
1997:..\src/interruptions.c ****     }
1998:..\src/interruptions.c ****     
1999:..\src/interruptions.c ****     if (interrupt_flag){
 6592              		.loc 1 1999 0
 6593 00e4 504B     		ldr	r3, .L575+8
 6594 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6595 00e8 002B     		cmp	r3, #0
 6596 00ea 04D0     		beq	.L422
2000:..\src/interruptions.c ****         interrupt_flag = FALSE;                                                                    
 6597              		.loc 1 2000 0
 6598 00ec 4E4B     		ldr	r3, .L575+8
 6599 00ee 0022     		movs	r2, #0
 6600 00f0 1A70     		strb	r2, [r3]
2001:..\src/interruptions.c ****         interrupt_manager();
 6601              		.loc 1 2001 0
 6602 00f2 FFF7FEFF 		bl	interrupt_manager
 6603              	.L422:
2002:..\src/interruptions.c ****     }
2003:..\src/interruptions.c ****     
2004:..\src/interruptions.c ****     // Update cycle power value
2005:..\src/interruptions.c ****     detect_power_cycle = filter(dev_tension[0]/6000, &filt_detect_pc);
 6604              		.loc 1 2005 0
 6605 00f6 524B     		ldr	r3, .L575+32
 6606 00f8 1B68     		ldr	r3, [r3]
 6607 00fa 534A     		ldr	r2, .L575+40
 6608 00fc 82FB0312 		smull	r1, r2, r2, r3
 6609 0100 D211     		asrs	r2, r2, #7
 6610 0102 DB17     		asrs	r3, r3, #31
 6611 0104 D31A     		subs	r3, r2, r3
 6612 0106 5149     		ldr	r1, .L575+44
 6613 0108 1846     		mov	r0, r3
 6614 010a FFF7FEFF 		bl	filter
 6615 010e 0246     		mov	r2, r0
 6616 0110 4F4B     		ldr	r3, .L575+48
 6617 0112 1A60     		str	r2, [r3]
2006:..\src/interruptions.c ****     if (detect_power_cycle_prev < 0 && detect_power_cycle >= 0){    // Only positive difference is 
 6618              		.loc 1 2006 0
 6619 0114 4F4B     		ldr	r3, .L575+52
 6620 0116 1B68     		ldr	r3, [r3]
 6621 0118 002B     		cmp	r3, #0
 6622 011a 08DA     		bge	.L423
 6623              		.loc 1 2006 0 is_stmt 0 discriminator 1
 6624 011c 4C4B     		ldr	r3, .L575+48
 6625 011e 1B68     		ldr	r3, [r3]
 6626 0120 002B     		cmp	r3, #0
 6627 0122 04DB     		blt	.L423
2007:..\src/interruptions.c ****         g_mem.cnt.power_cycles++;       // New power cycle (update value)   
 6628              		.loc 1 2007 0 is_stmt 1
 6629 0124 454B     		ldr	r3, .L575+28
 6630 0126 1B6E     		ldr	r3, [r3, #96]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 155


 6631 0128 0133     		adds	r3, r3, #1
 6632 012a 444A     		ldr	r2, .L575+28
 6633 012c 1366     		str	r3, [r2, #96]
 6634              	.L423:
2008:..\src/interruptions.c ****     }
2009:..\src/interruptions.c ****     detect_power_cycle_prev = detect_power_cycle;
 6635              		.loc 1 2009 0
 6636 012e 484B     		ldr	r3, .L575+48
 6637 0130 1B68     		ldr	r3, [r3]
 6638 0132 484A     		ldr	r2, .L575+52
 6639 0134 1360     		str	r3, [r2]
2010:..\src/interruptions.c ****   
2011:..\src/interruptions.c ****     
2012:..\src/interruptions.c ****     // VOLTAGE READING
2013:..\src/interruptions.c ****     // Once firmware starts, first_tension_valid flag is set to TRUE while tension_valid status is 
2014:..\src/interruptions.c ****     // Step 1) Wait for battery voltage stabilization and filter convergence for 1000 cycles (v_cou
2015:..\src/interruptions.c ****     // Step 2) Wait for another 1000 cycles (count counter) to decide which is full charge power te
2016:..\src/interruptions.c ****     // Low voltage condition) Whenever dev_tension ADC value is under 7000 mV, tension_valid flag i
2017:..\src/interruptions.c ****     
2018:..\src/interruptions.c **** 	if (first_tension_valid && tension_valid) {     // Voltage reading (Step 2)
 6640              		.loc 1 2018 0
 6641 0136 484B     		ldr	r3, .L575+56
 6642 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6643 013a 002B     		cmp	r3, #0
 6644 013c 4DD0     		beq	.L424
 6645              		.loc 1 2018 0 is_stmt 0 discriminator 1
 6646 013e 474B     		ldr	r3, .L575+60
 6647 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6648 0142 002B     		cmp	r3, #0
 6649 0144 49D0     		beq	.L424
2019:..\src/interruptions.c ****         count = count + 1;
 6650              		.loc 1 2019 0 is_stmt 1
 6651 0146 464B     		ldr	r3, .L575+64
 6652 0148 1B88     		ldrh	r3, [r3]
 6653 014a 0133     		adds	r3, r3, #1
 6654 014c 9AB2     		uxth	r2, r3
 6655 014e 444B     		ldr	r3, .L575+64
 6656 0150 1A80     		strh	r2, [r3]	@ movhi
2020:..\src/interruptions.c ****         
2021:..\src/interruptions.c ****         if (count == 1000){
 6657              		.loc 1 2021 0
 6658 0152 434B     		ldr	r3, .L575+64
 6659 0154 1B88     		ldrh	r3, [r3]
 6660 0156 B3F57A7F 		cmp	r3, #1000
 6661 015a 3ED1     		bne	.L424
2022:..\src/interruptions.c ****             for (idx = 0; idx < NUM_OF_MOTORS; idx++) {
 6662              		.loc 1 2022 0
 6663 015c 414B     		ldr	r3, .L575+68
 6664 015e 0022     		movs	r2, #0
 6665 0160 1A70     		strb	r2, [r3]
 6666 0162 33E0     		b	.L425
 6667              	.L429:
2023:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 6668              		.loc 1 2023 0
 6669 0164 3F4B     		ldr	r3, .L575+68
 6670 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6671 0168 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 156


 6672 016a 354B     		ldr	r3, .L575+32
 6673 016c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6674 0170 42F22732 		movw	r2, #8999
 6675 0174 9342     		cmp	r3, r2
 6676 0176 08DC     		bgt	.L426
2024:..\src/interruptions.c ****                     pow_tension[idx] = 8000;
 6677              		.loc 1 2024 0
 6678 0178 3A4B     		ldr	r3, .L575+68
 6679 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6680 017c 1946     		mov	r1, r3
 6681 017e 3A4B     		ldr	r3, .L575+72
 6682 0180 4FF4FA52 		mov	r2, #8000
 6683 0184 43F82120 		str	r2, [r3, r1, lsl #2]
 6684 0188 1AE0     		b	.L427
 6685              	.L426:
2025:..\src/interruptions.c ****                 }
2026:..\src/interruptions.c ****                 else {      // 12 V - 24 V cases
2027:..\src/interruptions.c ****                     if (dev_tension[idx] < 13000) {
 6686              		.loc 1 2027 0
 6687 018a 364B     		ldr	r3, .L575+68
 6688 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6689 018e 1A46     		mov	r2, r3
 6690 0190 2B4B     		ldr	r3, .L575+32
 6691 0192 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6692 0196 43F2C722 		movw	r2, #12999
 6693 019a 9342     		cmp	r3, r2
 6694 019c 08DC     		bgt	.L428
2028:..\src/interruptions.c ****                         pow_tension[idx] = 12000;
 6695              		.loc 1 2028 0
 6696 019e 314B     		ldr	r3, .L575+68
 6697 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6698 01a2 1946     		mov	r1, r3
 6699 01a4 304B     		ldr	r3, .L575+72
 6700 01a6 42F6E062 		movw	r2, #12000
 6701 01aa 43F82120 		str	r2, [r3, r1, lsl #2]
 6702 01ae 07E0     		b	.L427
 6703              	.L428:
2029:..\src/interruptions.c ****                     }
2030:..\src/interruptions.c ****                     else
2031:..\src/interruptions.c ****                         pow_tension[idx] = 24000;
 6704              		.loc 1 2031 0
 6705 01b0 2C4B     		ldr	r3, .L575+68
 6706 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6707 01b4 1946     		mov	r1, r3
 6708 01b6 2C4B     		ldr	r3, .L575+72
 6709 01b8 45F6C052 		movw	r2, #24000
 6710 01bc 43F82120 		str	r2, [r3, r1, lsl #2]
 6711              	.L427:
2022:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 6712              		.loc 1 2022 0 discriminator 2
 6713 01c0 284B     		ldr	r3, .L575+68
 6714 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6715 01c4 0133     		adds	r3, r3, #1
 6716 01c6 DAB2     		uxtb	r2, r3
 6717 01c8 264B     		ldr	r3, .L575+68
 6718 01ca 1A70     		strb	r2, [r3]
 6719              	.L425:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 157


2022:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 6720              		.loc 1 2022 0 is_stmt 0 discriminator 1
 6721 01cc 254B     		ldr	r3, .L575+68
 6722 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6723 01d0 012B     		cmp	r3, #1
 6724 01d2 C7D9     		bls	.L429
2032:..\src/interruptions.c ****                 }
2033:..\src/interruptions.c ****             }
2034:..\src/interruptions.c ****             first_tension_valid = FALSE;
 6725              		.loc 1 2034 0 is_stmt 1
 6726 01d4 204B     		ldr	r3, .L575+56
 6727 01d6 0022     		movs	r2, #0
 6728 01d8 1A70     		strb	r2, [r3]
 6729              	.L424:
2035:..\src/interruptions.c ****         }
2036:..\src/interruptions.c ****     }
2037:..\src/interruptions.c **** 
2038:..\src/interruptions.c ****     // Until there is no valid input tension repeat this measurement
2039:..\src/interruptions.c **** 
2040:..\src/interruptions.c ****     if (dev_tension[0] < 6500 && (NUM_OF_ANALOG_INPUTS<=4 || dev_tension[1] < 6500)) {       // Vol
 6730              		.loc 1 2040 0
 6731 01da 194B     		ldr	r3, .L575+32
 6732 01dc 1B68     		ldr	r3, [r3]
 6733 01de 41F66312 		movw	r2, #6499
 6734 01e2 9342     		cmp	r3, r2
 6735 01e4 00F3FA80 		bgt	.L430
 6736              		.loc 1 2040 0 is_stmt 0 discriminator 1
 6737 01e8 164B     		ldr	r3, .L575+36
 6738 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6739 01ec 042B     		cmp	r3, #4
 6740 01ee 06D9     		bls	.L431
 6741              		.loc 1 2040 0 discriminator 2
 6742 01f0 134B     		ldr	r3, .L575+32
 6743 01f2 5B68     		ldr	r3, [r3, #4]
 6744 01f4 41F66312 		movw	r2, #6499
 6745 01f8 9342     		cmp	r3, r2
 6746 01fa 00F3EF80 		bgt	.L430
 6747              	.L431:
2041:..\src/interruptions.c ****         // PSoC is powered through uUSB
2042:..\src/interruptions.c ****         
2043:..\src/interruptions.c ****         tension_valid = FALSE;
 6748              		.loc 1 2043 0 is_stmt 1
 6749 01fe 174B     		ldr	r3, .L575+60
 6750 0200 0022     		movs	r2, #0
 6751 0202 1A70     		strb	r2, [r3]
2044:..\src/interruptions.c ****             
2045:..\src/interruptions.c ****         if (interrupt_flag){
 6752              		.loc 1 2045 0
 6753 0204 084B     		ldr	r3, .L575+8
 6754 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6755 0208 002B     		cmp	r3, #0
 6756 020a 04D0     		beq	.L432
2046:..\src/interruptions.c ****             interrupt_flag = FALSE;
 6757              		.loc 1 2046 0
 6758 020c 064B     		ldr	r3, .L575+8
 6759 020e 0022     		movs	r2, #0
 6760 0210 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 158


2047:..\src/interruptions.c ****             interrupt_manager();
 6761              		.loc 1 2047 0
 6762 0212 FFF7FEFF 		bl	interrupt_manager
 6763              	.L432:
2048:..\src/interruptions.c ****         }
2049:..\src/interruptions.c ****         
2050:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_MOTORS; idx++){
 6764              		.loc 1 2050 0
 6765 0216 134B     		ldr	r3, .L575+68
 6766 0218 0022     		movs	r2, #0
 6767 021a 1A70     		strb	r2, [r3]
 6768 021c A8E0     		b	.L433
 6769              	.L576:
 6770 021e 00BF     		.align	3
 6771              	.L575:
 6772 0220 FCA9F1D2 		.word	-755914244
 6773 0224 4D62703F 		.word	1064329805
 6774 0228 00000000 		.word	interrupt_flag
 6775 022c 00000000 		.word	c_mem
 6776 0230 00000000 		.word	ADC_buf
 6777 0234 00000000 		.word	g_fb_meas
 6778 0238 0000B040 		.word	1085276160
 6779 023c 00000000 		.word	g_mem
 6780 0240 00000000 		.word	dev_tension
 6781 0244 00000000 		.word	NUM_OF_ANALOG_INPUTS
 6782 0248 F1197605 		.word	91625969
 6783 024c 00000000 		.word	filt_detect_pc
 6784 0250 00000000 		.word	detect_power_cycle
 6785 0254 08000000 		.word	detect_power_cycle_prev.10668
 6786 0258 0C000000 		.word	first_tension_valid.10667
 6787 025c 00000000 		.word	tension_valid
 6788 0260 70010000 		.word	count.10669
 6789 0264 72010000 		.word	idx.10671
 6790 0268 00000000 		.word	pow_tension
 6791              	.L436:
2051:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 6792              		.loc 1 2051 0
 6793 026c 9F4B     		ldr	r3, .L577
 6794 026e 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6795 0272 002B     		cmp	r3, #0
 6796 0274 59D0     		beq	.L434
2052:..\src/interruptions.c ****                 if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 6797              		.loc 1 2052 0
 6798 0276 9E4B     		ldr	r3, .L577+4
 6799 0278 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6800 027a 1946     		mov	r1, r3
 6801 027c 9B4A     		ldr	r2, .L577
 6802 027e 0B46     		mov	r3, r1
 6803 0280 DB00     		lsls	r3, r3, #3
 6804 0282 5B1A     		subs	r3, r3, r1
 6805 0284 1B01     		lsls	r3, r3, #4
 6806 0286 1344     		add	r3, r3, r2
 6807 0288 03F58773 		add	r3, r3, #270
 6808 028c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6809 028e 022B     		cmp	r3, #2
 6810 0290 37D0     		beq	.L435
2053:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 159


 6811              		.loc 1 2053 0 discriminator 1
 6812 0292 974B     		ldr	r3, .L577+4
 6813 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6814 0296 1946     		mov	r1, r3
 6815 0298 944A     		ldr	r2, .L577
 6816 029a 0B46     		mov	r3, r1
 6817 029c DB00     		lsls	r3, r3, #3
 6818 029e 5B1A     		subs	r3, r3, r1
 6819 02a0 1B01     		lsls	r3, r3, #4
 6820 02a2 1344     		add	r3, r3, r2
 6821 02a4 03F58773 		add	r3, r3, #270
 6822 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2052:..\src/interruptions.c ****                 if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 6823              		.loc 1 2052 0 discriminator 1
 6824 02aa 032B     		cmp	r3, #3
 6825 02ac 29D0     		beq	.L435
2054:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 6826              		.loc 1 2054 0
 6827 02ae 904B     		ldr	r3, .L577+4
 6828 02b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6829 02b2 1946     		mov	r1, r3
 6830 02b4 8D4A     		ldr	r2, .L577
 6831 02b6 0B46     		mov	r3, r1
 6832 02b8 DB00     		lsls	r3, r3, #3
 6833 02ba 5B1A     		subs	r3, r3, r1
 6834 02bc 1B01     		lsls	r3, r3, #4
 6835 02be 1344     		add	r3, r3, r2
 6836 02c0 03F58773 		add	r3, r3, #270
 6837 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2053:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 6838              		.loc 1 2053 0
 6839 02c6 042B     		cmp	r3, #4
 6840 02c8 1BD0     		beq	.L435
2055:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 6841              		.loc 1 2055 0
 6842 02ca 894B     		ldr	r3, .L577+4
 6843 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6844 02ce 1946     		mov	r1, r3
 6845 02d0 864A     		ldr	r2, .L577
 6846 02d2 0B46     		mov	r3, r1
 6847 02d4 DB00     		lsls	r3, r3, #3
 6848 02d6 5B1A     		subs	r3, r3, r1
 6849 02d8 1B01     		lsls	r3, r3, #4
 6850 02da 1344     		add	r3, r3, r2
 6851 02dc 03F58773 		add	r3, r3, #270
 6852 02e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2054:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 6853              		.loc 1 2054 0
 6854 02e2 052B     		cmp	r3, #5
 6855 02e4 0DD0     		beq	.L435
2056:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 6856              		.loc 1 2056 0
 6857 02e6 824B     		ldr	r3, .L577+4
 6858 02e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6859 02ea 1946     		mov	r1, r3
 6860 02ec 7F4A     		ldr	r2, .L577
 6861 02ee 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 160


 6862 02f0 DB00     		lsls	r3, r3, #3
 6863 02f2 5B1A     		subs	r3, r3, r1
 6864 02f4 1B01     		lsls	r3, r3, #4
 6865 02f6 1344     		add	r3, r3, r2
 6866 02f8 03F58773 		add	r3, r3, #270
 6867 02fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2055:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 6868              		.loc 1 2055 0
 6869 02fe 072B     		cmp	r3, #7
 6870 0300 13D1     		bne	.L434
 6871              	.L435:
2057:..\src/interruptions.c ****                     g_ref[idx].onoff = 0x00;
 6872              		.loc 1 2057 0
 6873 0302 7B4B     		ldr	r3, .L577+4
 6874 0304 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6875 0306 7B4A     		ldr	r2, .L577+8
 6876 0308 1B01     		lsls	r3, r3, #4
 6877 030a 1344     		add	r3, r3, r2
 6878 030c 0C33     		adds	r3, r3, #12
 6879 030e 0022     		movs	r2, #0
 6880 0310 1A70     		strb	r2, [r3]
2058:..\src/interruptions.c ****                     enable_motor(idx, g_ref[idx].onoff); 
 6881              		.loc 1 2058 0
 6882 0312 774B     		ldr	r3, .L577+4
 6883 0314 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6884 0316 764B     		ldr	r3, .L577+4
 6885 0318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6886 031a 764A     		ldr	r2, .L577+8
 6887 031c 1B01     		lsls	r3, r3, #4
 6888 031e 1344     		add	r3, r3, r2
 6889 0320 0C33     		adds	r3, r3, #12
 6890 0322 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6891 0324 1946     		mov	r1, r3
 6892 0326 FFF7FEFF 		bl	enable_motor
 6893              	.L434:
2059:..\src/interruptions.c ****                     
2060:..\src/interruptions.c ****                 }
2061:..\src/interruptions.c ****             }
2062:..\src/interruptions.c **** 
2063:..\src/interruptions.c ****             // Assign dev_tension and reset current
2064:..\src/interruptions.c ****             dev_tension[idx] = 5000;
 6894              		.loc 1 2064 0 discriminator 2
 6895 032a 714B     		ldr	r3, .L577+4
 6896 032c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6897 032e 1946     		mov	r1, r3
 6898 0330 714B     		ldr	r3, .L577+12
 6899 0332 41F28832 		movw	r2, #5000
 6900 0336 43F82120 		str	r2, [r3, r1, lsl #2]
2065:..\src/interruptions.c ****             g_meas[g_mem.motor[idx].encoder_line].curr = 0;
 6901              		.loc 1 2065 0 discriminator 2
 6902 033a 6D4B     		ldr	r3, .L577+4
 6903 033c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6904 033e 1946     		mov	r1, r3
 6905 0340 6E4A     		ldr	r2, .L577+16
 6906 0342 0B46     		mov	r3, r1
 6907 0344 DB00     		lsls	r3, r3, #3
 6908 0346 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 161


 6909 0348 1B01     		lsls	r3, r3, #4
 6910 034a 1344     		add	r3, r3, r2
 6911 034c 03F58873 		add	r3, r3, #272
 6912 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6913 0352 1946     		mov	r1, r3
 6914 0354 6A4A     		ldr	r2, .L577+20
 6915 0356 3423     		movs	r3, #52
 6916 0358 03FB01F3 		mul	r3, r3, r1
 6917 035c 1344     		add	r3, r3, r2
 6918 035e 0C33     		adds	r3, r3, #12
 6919 0360 0022     		movs	r2, #0
 6920 0362 1A60     		str	r2, [r3]
2050:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 6921              		.loc 1 2050 0 discriminator 2
 6922 0364 624B     		ldr	r3, .L577+4
 6923 0366 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6924 0368 0133     		adds	r3, r3, #1
 6925 036a DAB2     		uxtb	r2, r3
 6926 036c 604B     		ldr	r3, .L577+4
 6927 036e 1A70     		strb	r2, [r3]
 6928              	.L433:
2050:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 6929              		.loc 1 2050 0 is_stmt 0 discriminator 1
 6930 0370 5F4B     		ldr	r3, .L577+4
 6931 0372 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6932 0374 012B     		cmp	r3, #1
 6933 0376 7FF679AF 		bls	.L436
2066:..\src/interruptions.c ****         }
2067:..\src/interruptions.c ****         
2068:..\src/interruptions.c ****         // Reset emg
2069:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_INPUT_EMGS; idx++){
 6934              		.loc 1 2069 0 is_stmt 1
 6935 037a 5D4B     		ldr	r3, .L577+4
 6936 037c 0022     		movs	r2, #0
 6937 037e 1A70     		strb	r2, [r3]
 6938 0380 0CE0     		b	.L437
 6939              	.L438:
2070:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 6940              		.loc 1 2070 0 discriminator 3
 6941 0382 5B4B     		ldr	r3, .L577+4
 6942 0384 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6943 0386 1946     		mov	r1, r3
 6944 0388 5E4B     		ldr	r3, .L577+24
 6945 038a 0022     		movs	r2, #0
 6946 038c 43F82120 		str	r2, [r3, r1, lsl #2]
2069:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 6947              		.loc 1 2069 0 discriminator 3
 6948 0390 574B     		ldr	r3, .L577+4
 6949 0392 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6950 0394 0133     		adds	r3, r3, #1
 6951 0396 DAB2     		uxtb	r2, r3
 6952 0398 554B     		ldr	r3, .L577+4
 6953 039a 1A70     		strb	r2, [r3]
 6954              	.L437:
2069:..\src/interruptions.c ****             g_adc_meas.emg[idx] = 0;
 6955              		.loc 1 2069 0 is_stmt 0 discriminator 1
 6956 039c 544B     		ldr	r3, .L577+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 162


 6957 039e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6958 03a0 012B     		cmp	r3, #1
 6959 03a2 EED9     		bls	.L438
2071:..\src/interruptions.c ****         }
2072:..\src/interruptions.c ****         for (idx = 0; c_mem.exp.read_ADC_sensors_port_flag && idx < NUM_OF_ADDITIONAL_EMGS; idx++){
 6960              		.loc 1 2072 0 is_stmt 1
 6961 03a4 524B     		ldr	r3, .L577+4
 6962 03a6 0022     		movs	r2, #0
 6963 03a8 1A70     		strb	r2, [r3]
 6964 03aa 0CE0     		b	.L439
 6965              	.L441:
2073:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 6966              		.loc 1 2073 0 discriminator 4
 6967 03ac 504B     		ldr	r3, .L577+4
 6968 03ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6969 03b0 544A     		ldr	r2, .L577+24
 6970 03b2 0233     		adds	r3, r3, #2
 6971 03b4 0021     		movs	r1, #0
 6972 03b6 42F82310 		str	r1, [r2, r3, lsl #2]
2072:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 6973              		.loc 1 2072 0 discriminator 4
 6974 03ba 4D4B     		ldr	r3, .L577+4
 6975 03bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6976 03be 0133     		adds	r3, r3, #1
 6977 03c0 DAB2     		uxtb	r2, r3
 6978 03c2 4B4B     		ldr	r3, .L577+4
 6979 03c4 1A70     		strb	r2, [r3]
 6980              	.L439:
2072:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 6981              		.loc 1 2072 0 is_stmt 0 discriminator 1
 6982 03c6 494B     		ldr	r3, .L577
 6983 03c8 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 6984 03cc 002B     		cmp	r3, #0
 6985 03ce 00F04D82 		beq	.L557
2072:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = 0;
 6986              		.loc 1 2072 0 discriminator 3
 6987 03d2 474B     		ldr	r3, .L577+4
 6988 03d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6989 03d6 052B     		cmp	r3, #5
 6990 03d8 E8D9     		bls	.L441
2040:..\src/interruptions.c ****         // PSoC is powered through uUSB
 6991              		.loc 1 2040 0 is_stmt 1
 6992 03da 47E2     		b	.L557
 6993              	.L430:
2074:..\src/interruptions.c ****         }
2075:..\src/interruptions.c ****         
2076:..\src/interruptions.c ****     }
2077:..\src/interruptions.c ****     else {
2078:..\src/interruptions.c ****         // PSoC is powered through battery or power source
2079:..\src/interruptions.c ****         // (at least > 6.88 V (86% of 8 V) that is minimum charge of smallest battery (2 cells @ 20
2080:..\src/interruptions.c ****         
2081:..\src/interruptions.c ****         // Read ADC sampled value of power source tension and motor current
2082:..\src/interruptions.c ****         
2083:..\src/interruptions.c ****         if (v_count == 1000 && !tension_valid){     // Voltage reading (Step 1)
 6994              		.loc 1 2083 0
 6995 03dc 4A4B     		ldr	r3, .L577+28
 6996 03de 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 163


 6997 03e0 B3F57A7F 		cmp	r3, #1000
 6998 03e4 0DD1     		bne	.L443
 6999              		.loc 1 2083 0 is_stmt 0 discriminator 1
 7000 03e6 494B     		ldr	r3, .L577+32
 7001 03e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7002 03ea 002B     		cmp	r3, #0
 7003 03ec 09D1     		bne	.L443
2084:..\src/interruptions.c ****             // After 1000 v_count cycles, dev_tension_f is stable
2085:..\src/interruptions.c ****             tension_valid = TRUE;   
 7004              		.loc 1 2085 0 is_stmt 1
 7005 03ee 474B     		ldr	r3, .L577+32
 7006 03f0 0122     		movs	r2, #1
 7007 03f2 1A70     		strb	r2, [r3]
2086:..\src/interruptions.c ****             count = 0;
 7008              		.loc 1 2086 0
 7009 03f4 464B     		ldr	r3, .L577+36
 7010 03f6 0022     		movs	r2, #0
 7011 03f8 1A80     		strh	r2, [r3]	@ movhi
2087:..\src/interruptions.c ****             v_count = 0;            
 7012              		.loc 1 2087 0
 7013 03fa 434B     		ldr	r3, .L577+28
 7014 03fc 0022     		movs	r2, #0
 7015 03fe 1A60     		str	r2, [r3]
 7016 0400 2CE0     		b	.L444
 7017              	.L443:
2088:..\src/interruptions.c ****         }
2089:..\src/interruptions.c ****         else {  
2090:..\src/interruptions.c ****             // wait for battery voltage stabilization
2091:..\src/interruptions.c ****             if (v_count < 1000) {
 7018              		.loc 1 2091 0
 7019 0402 414B     		ldr	r3, .L577+28
 7020 0404 1B68     		ldr	r3, [r3]
 7021 0406 B3F57A7F 		cmp	r3, #1000
 7022 040a 04D2     		bcs	.L445
2092:..\src/interruptions.c ****                 v_count = v_count + 1;
 7023              		.loc 1 2092 0
 7024 040c 3E4B     		ldr	r3, .L577+28
 7025 040e 1B68     		ldr	r3, [r3]
 7026 0410 0133     		adds	r3, r3, #1
 7027 0412 3D4A     		ldr	r2, .L577+28
 7028 0414 1360     		str	r3, [r2]
 7029              	.L445:
2093:..\src/interruptions.c ****             }
2094:..\src/interruptions.c ****             for(idx = 0; idx < NUM_OF_MOTORS; idx++) {
 7030              		.loc 1 2094 0
 7031 0416 364B     		ldr	r3, .L577+4
 7032 0418 0022     		movs	r2, #0
 7033 041a 1A70     		strb	r2, [r3]
 7034 041c 1AE0     		b	.L446
 7035              	.L447:
2095:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 7036              		.loc 1 2095 0 discriminator 3
 7037 041e 344B     		ldr	r3, .L577+4
 7038 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7039 0422 1C46     		mov	r4, r3
 7040 0424 324B     		ldr	r3, .L577+4
 7041 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 164


 7042 0428 1A46     		mov	r2, r3
 7043 042a 334B     		ldr	r3, .L577+12
 7044 042c 53F82200 		ldr	r0, [r3, r2, lsl #2]
 7045 0430 2F4B     		ldr	r3, .L577+4
 7046 0432 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7047 0434 DB00     		lsls	r3, r3, #3
 7048 0436 374A     		ldr	r2, .L577+40
 7049 0438 1344     		add	r3, r3, r2
 7050 043a 1946     		mov	r1, r3
 7051 043c FFF7FEFF 		bl	filter
 7052 0440 0246     		mov	r2, r0
 7053 0442 354B     		ldr	r3, .L577+44
 7054 0444 43F82420 		str	r2, [r3, r4, lsl #2]
2094:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 7055              		.loc 1 2094 0 discriminator 3
 7056 0448 294B     		ldr	r3, .L577+4
 7057 044a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7058 044c 0133     		adds	r3, r3, #1
 7059 044e DAB2     		uxtb	r2, r3
 7060 0450 274B     		ldr	r3, .L577+4
 7061 0452 1A70     		strb	r2, [r3]
 7062              	.L446:
2094:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 7063              		.loc 1 2094 0 is_stmt 0 discriminator 1
 7064 0454 264B     		ldr	r3, .L577+4
 7065 0456 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7066 0458 012B     		cmp	r3, #1
 7067 045a E0D9     		bls	.L447
 7068              	.L444:
2096:..\src/interruptions.c ****             }
2097:..\src/interruptions.c ****         }
2098:..\src/interruptions.c **** 
2099:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_MOTORS; idx++){
 7069              		.loc 1 2099 0 is_stmt 1
 7070 045c 244B     		ldr	r3, .L577+4
 7071 045e 0022     		movs	r2, #0
 7072 0460 1A70     		strb	r2, [r3]
 7073 0462 17E0     		b	.L448
 7074              	.L450:
2100:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 7075              		.loc 1 2100 0
 7076 0464 224B     		ldr	r3, .L577+4
 7077 0466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7078 0468 1946     		mov	r1, r3
 7079 046a 244A     		ldr	r2, .L577+16
 7080 046c 0B46     		mov	r3, r1
 7081 046e DB00     		lsls	r3, r3, #3
 7082 0470 5B1A     		subs	r3, r3, r1
 7083 0472 1B01     		lsls	r3, r3, #4
 7084 0474 1344     		add	r3, r3, r2
 7085 0476 E133     		adds	r3, r3, #225
 7086 0478 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7087 047a 002B     		cmp	r3, #0
 7088 047c 04D0     		beq	.L449
2101:..\src/interruptions.c ****                 pwm_limit_search(idx);                 //only for 12V motor
 7089              		.loc 1 2101 0
 7090 047e 1C4B     		ldr	r3, .L577+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 165


 7091 0480 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7092 0482 1846     		mov	r0, r3
 7093 0484 FFF7FEFF 		bl	pwm_limit_search
 7094              	.L449:
2099:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 7095              		.loc 1 2099 0 discriminator 2
 7096 0488 194B     		ldr	r3, .L577+4
 7097 048a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7098 048c 0133     		adds	r3, r3, #1
 7099 048e DAB2     		uxtb	r2, r3
 7100 0490 174B     		ldr	r3, .L577+4
 7101 0492 1A70     		strb	r2, [r3]
 7102              	.L448:
2099:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 7103              		.loc 1 2099 0 is_stmt 0 discriminator 1
 7104 0494 164B     		ldr	r3, .L577+4
 7105 0496 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7106 0498 012B     		cmp	r3, #1
 7107 049a E3D9     		bls	.L450
2102:..\src/interruptions.c ****         }
2103:..\src/interruptions.c ****         
2104:..\src/interruptions.c ****         // Filter and Set currents
2105:..\src/interruptions.c ****         if (g_mem.motor[0].motor_driver_type == DRIVER_MC33887) {
 7108              		.loc 1 2105 0 is_stmt 1
 7109 049c 174B     		ldr	r3, .L577+16
 7110 049e 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 7111 04a2 002B     		cmp	r3, #0
 7112 04a4 40D1     		bne	.L451
2106:..\src/interruptions.c ****             g_meas[g_mem.motor[0].encoder_line].curr = filter((int16) (((int32)(ADC_buf[1] - 1648) 
 7113              		.loc 1 2106 0
 7114 04a6 154B     		ldr	r3, .L577+16
 7115 04a8 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7116 04ac 1C46     		mov	r4, r3
 7117 04ae 1B4B     		ldr	r3, .L577+48
 7118 04b0 B3F90230 		ldrsh	r3, [r3, #2]
 7119 04b4 A3F5CE63 		sub	r3, r3, #1648
 7120 04b8 45F66A02 		movw	r2, #22634
 7121 04bc 02FB03F3 		mul	r3, r2, r3
 7122 04c0 5B13     		asrs	r3, r3, #13
 7123 04c2 1BB2     		sxth	r3, r3
 7124 04c4 1A46     		mov	r2, r3
 7125 04c6 164B     		ldr	r3, .L577+52
 7126 04c8 93F90030 		ldrsb	r3, [r3]
 7127 04cc 03FB02F3 		mul	r3, r3, r2
 7128 04d0 1449     		ldr	r1, .L577+56
 7129 04d2 1846     		mov	r0, r3
 7130 04d4 FFF7FEFF 		bl	filter
 7131 04d8 0146     		mov	r1, r0
 7132 04da 094A     		ldr	r2, .L577+20
 7133 04dc 3423     		movs	r3, #52
 7134 04de 03FB04F3 		mul	r3, r3, r4
 7135 04e2 1344     		add	r3, r3, r2
 7136 04e4 0C33     		adds	r3, r3, #12
 7137 04e6 1960     		str	r1, [r3]
 7138 04e8 61E0     		b	.L452
 7139              	.L578:
 7140 04ea 00BF     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 166


 7141              	.L577:
 7142 04ec 00000000 		.word	c_mem
 7143 04f0 72010000 		.word	idx.10671
 7144 04f4 00000000 		.word	g_ref
 7145 04f8 00000000 		.word	dev_tension
 7146 04fc 00000000 		.word	g_mem
 7147 0500 00000000 		.word	g_meas
 7148 0504 00000000 		.word	g_adc_meas
 7149 0508 74010000 		.word	v_count.10670
 7150 050c 00000000 		.word	tension_valid
 7151 0510 70010000 		.word	count.10669
 7152 0514 00000000 		.word	filt_v
 7153 0518 00000000 		.word	dev_tension_f
 7154 051c 00000000 		.word	ADC_buf
 7155 0520 00000000 		.word	pwm_sign
 7156 0524 00000000 		.word	filt_i
 7157              	.L451:
2107:..\src/interruptions.c ****         } 
2108:..\src/interruptions.c ****         else {
2109:..\src/interruptions.c ****             if (g_mem.motor[0].motor_driver_type == DRIVER_BRUSHLESS) {
 7158              		.loc 1 2109 0
 7159 0528 C54B     		ldr	r3, .L579
 7160 052a 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 7161 052e 022B     		cmp	r3, #2
 7162 0530 21D1     		bne	.L453
2110:..\src/interruptions.c ****                 // Direct measure in range [2V, 4V] referenced to 4.88V meas supply and up to 5A cu
2111:..\src/interruptions.c ****                 g_meas[g_mem.motor[0].encoder_line].curr = filter((int16) (((int32)(ADC_buf[1] - 16
 7163              		.loc 1 2111 0
 7164 0532 C34B     		ldr	r3, .L579
 7165 0534 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7166 0538 1C46     		mov	r4, r3
 7167 053a C24B     		ldr	r3, .L579+4
 7168 053c B3F90230 		ldrsh	r3, [r3, #2]
 7169 0540 A3F28F63 		subw	r3, r3, #1679
 7170 0544 45F65072 		movw	r2, #24400
 7171 0548 02FB03F3 		mul	r3, r2, r3
 7172 054c 5B13     		asrs	r3, r3, #13
 7173 054e 1BB2     		sxth	r3, r3
 7174 0550 1A46     		mov	r2, r3
 7175 0552 BD4B     		ldr	r3, .L579+8
 7176 0554 93F90030 		ldrsb	r3, [r3]
 7177 0558 03FB02F3 		mul	r3, r3, r2
 7178 055c BB49     		ldr	r1, .L579+12
 7179 055e 1846     		mov	r0, r3
 7180 0560 FFF7FEFF 		bl	filter
 7181 0564 0146     		mov	r1, r0
 7182 0566 BA4A     		ldr	r2, .L579+16
 7183 0568 3423     		movs	r3, #52
 7184 056a 03FB04F3 		mul	r3, r3, r4
 7185 056e 1344     		add	r3, r3, r2
 7186 0570 0C33     		adds	r3, r3, #12
 7187 0572 1960     		str	r1, [r3]
 7188 0574 1BE0     		b	.L452
 7189              	.L453:
2112:..\src/interruptions.c ****             } else { // [GS]
2113:..\src/interruptions.c ****                 g_meas[g_mem.motor[0].encoder_line].curr = ((int16) ((int32)((ADC_buf[1] - 1635) * 
 7190              		.loc 1 2113 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 167


 7191 0576 B24B     		ldr	r3, .L579
 7192 0578 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7193 057c 1846     		mov	r0, r3
 7194 057e B14B     		ldr	r3, .L579+4
 7195 0580 B3F90230 		ldrsh	r3, [r3, #2]
 7196 0584 A3F26362 		subw	r2, r3, #1635
 7197 0588 1346     		mov	r3, r2
 7198 058a 1B01     		lsls	r3, r3, #4
 7199 058c 9B1A     		subs	r3, r3, r2
 7200 058e 5B01     		lsls	r3, r3, #5
 7201 0590 1B11     		asrs	r3, r3, #4
 7202 0592 1BB2     		sxth	r3, r3
 7203 0594 1A46     		mov	r2, r3
 7204 0596 AC4B     		ldr	r3, .L579+8
 7205 0598 93F90030 		ldrsb	r3, [r3]
 7206 059c 03FB02F2 		mul	r2, r3, r2
 7207 05a0 AB49     		ldr	r1, .L579+16
 7208 05a2 3423     		movs	r3, #52
 7209 05a4 03FB00F3 		mul	r3, r3, r0
 7210 05a8 0B44     		add	r3, r3, r1
 7211 05aa 0C33     		adds	r3, r3, #12
 7212 05ac 1A60     		str	r2, [r3]
 7213              	.L452:
2114:..\src/interruptions.c ****             }
2115:..\src/interruptions.c ****         }
2116:..\src/interruptions.c ****         
2117:..\src/interruptions.c **** 
2118:..\src/interruptions.c ****         // Calculate current estimation and put it in the second part of the current measurement ar
2119:..\src/interruptions.c **** 		g_meas[g_mem.motor[0].encoder_line].estim_curr = (int16) filter(((int32) g_meas[g_mem.motor[0].en
 7214              		.loc 1 2119 0
 7215 05ae A44B     		ldr	r3, .L579
 7216 05b0 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7217 05b4 1D46     		mov	r5, r3
 7218 05b6 A24B     		ldr	r3, .L579
 7219 05b8 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7220 05bc 1946     		mov	r1, r3
 7221 05be A44A     		ldr	r2, .L579+16
 7222 05c0 3423     		movs	r3, #52
 7223 05c2 03FB01F3 		mul	r3, r3, r1
 7224 05c6 1344     		add	r3, r3, r2
 7225 05c8 0C33     		adds	r3, r3, #12
 7226 05ca 1C68     		ldr	r4, [r3]
 7227 05cc 9C4B     		ldr	r3, .L579
 7228 05ce 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7229 05d2 1946     		mov	r1, r3
 7230 05d4 9E4A     		ldr	r2, .L579+16
 7231 05d6 3423     		movs	r3, #52
 7232 05d8 03FB01F3 		mul	r3, r3, r1
 7233 05dc 1344     		add	r3, r3, r2
 7234 05de 1A68     		ldr	r2, [r3]
 7235 05e0 974B     		ldr	r3, .L579
 7236 05e2 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7237 05e6 1846     		mov	r0, r3
 7238 05e8 9549     		ldr	r1, .L579
 7239 05ea 0346     		mov	r3, r0
 7240 05ec 5B00     		lsls	r3, r3, #1
 7241 05ee 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 168


 7242 05f0 1B01     		lsls	r3, r3, #4
 7243 05f2 0B44     		add	r3, r3, r1
 7244 05f4 03F29513 		addw	r3, r3, #405
 7245 05f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7246 05fa 42FA03F6 		asr	r6, r2, r3
 7247 05fe 904B     		ldr	r3, .L579
 7248 0600 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7249 0604 1946     		mov	r1, r3
 7250 0606 924A     		ldr	r2, .L579+16
 7251 0608 3423     		movs	r3, #52
 7252 060a 03FB01F3 		mul	r3, r3, r1
 7253 060e 1344     		add	r3, r3, r2
 7254 0610 1C33     		adds	r3, r3, #28
 7255 0612 1A68     		ldr	r2, [r3]
 7256 0614 8A4B     		ldr	r3, .L579
 7257 0616 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7258 061a 1846     		mov	r0, r3
 7259 061c 8849     		ldr	r1, .L579
 7260 061e 0346     		mov	r3, r0
 7261 0620 5B00     		lsls	r3, r3, #1
 7262 0622 0344     		add	r3, r3, r0
 7263 0624 1B01     		lsls	r3, r3, #4
 7264 0626 0B44     		add	r3, r3, r1
 7265 0628 03F29513 		addw	r3, r3, #405
 7266 062c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7267 062e 42FA03FE 		asr	lr, r2, r3
 7268 0632 884B     		ldr	r3, .L579+20
 7269 0634 1A68     		ldr	r2, [r3]
 7270 0636 824B     		ldr	r3, .L579
 7271 0638 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7272 063c 1846     		mov	r0, r3
 7273 063e 8049     		ldr	r1, .L579
 7274 0640 0346     		mov	r3, r0
 7275 0642 5B00     		lsls	r3, r3, #1
 7276 0644 0344     		add	r3, r3, r0
 7277 0646 1B01     		lsls	r3, r3, #4
 7278 0648 0B44     		add	r3, r3, r1
 7279 064a 03F29513 		addw	r3, r3, #405
 7280 064e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7281 0650 42FA03F3 		asr	r3, r2, r3
 7282 0654 7246     		mov	r2, lr
 7283 0656 3146     		mov	r1, r6
 7284 0658 0020     		movs	r0, #0
 7285 065a FFF7FEFF 		bl	curr_estim
 7286 065e 0346     		mov	r3, r0
 7287 0660 E31A     		subs	r3, r4, r3
 7288 0662 7D49     		ldr	r1, .L579+24
 7289 0664 1846     		mov	r0, r3
 7290 0666 FFF7FEFF 		bl	filter
 7291 066a 0346     		mov	r3, r0
 7292 066c 1BB2     		sxth	r3, r3
 7293 066e 1946     		mov	r1, r3
 7294 0670 774A     		ldr	r2, .L579+16
 7295 0672 3423     		movs	r3, #52
 7296 0674 03FB05F3 		mul	r3, r3, r5
 7297 0678 1344     		add	r3, r3, r2
 7298 067a 1033     		adds	r3, r3, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 169


 7299 067c 1960     		str	r1, [r3]
2120:..\src/interruptions.c ****         
2121:..\src/interruptions.c ****         // Read also 2nd power current (if necessary)
2122:..\src/interruptions.c ****         if (NUM_OF_ANALOG_INPUTS > 4) {
 7300              		.loc 1 2122 0
 7301 067e 774B     		ldr	r3, .L579+28
 7302 0680 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7303 0682 042B     		cmp	r3, #4
 7304 0684 40F2D280 		bls	.L454
2123:..\src/interruptions.c ****             // Filter and Set currents
2124:..\src/interruptions.c ****             if (g_mem.motor[1].motor_driver_type == DRIVER_MC33887) {
 7305              		.loc 1 2124 0
 7306 0688 6D4B     		ldr	r3, .L579
 7307 068a 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 7308 068e 002B     		cmp	r3, #0
 7309 0690 21D1     		bne	.L455
2125:..\src/interruptions.c ****                 g_meas[g_mem.motor[1].encoder_line].curr = filter((int16) (((int32)(ADC_buf[5] - 16
 7310              		.loc 1 2125 0
 7311 0692 6B4B     		ldr	r3, .L579
 7312 0694 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7313 0698 1C46     		mov	r4, r3
 7314 069a 6A4B     		ldr	r3, .L579+4
 7315 069c B3F90A30 		ldrsh	r3, [r3, #10]
 7316 06a0 A3F5CE63 		sub	r3, r3, #1648
 7317 06a4 45F66A02 		movw	r2, #22634
 7318 06a8 02FB03F3 		mul	r3, r2, r3
 7319 06ac 5B13     		asrs	r3, r3, #13
 7320 06ae 1BB2     		sxth	r3, r3
 7321 06b0 1A46     		mov	r2, r3
 7322 06b2 654B     		ldr	r3, .L579+8
 7323 06b4 93F90130 		ldrsb	r3, [r3, #1]
 7324 06b8 03FB02F3 		mul	r3, r3, r2
 7325 06bc 6849     		ldr	r1, .L579+32
 7326 06be 1846     		mov	r0, r3
 7327 06c0 FFF7FEFF 		bl	filter
 7328 06c4 0146     		mov	r1, r0
 7329 06c6 624A     		ldr	r2, .L579+16
 7330 06c8 3423     		movs	r3, #52
 7331 06ca 03FB04F3 		mul	r3, r3, r4
 7332 06ce 1344     		add	r3, r3, r2
 7333 06d0 0C33     		adds	r3, r3, #12
 7334 06d2 1960     		str	r1, [r3]
 7335 06d4 42E0     		b	.L456
 7336              	.L455:
2126:..\src/interruptions.c ****             } 
2127:..\src/interruptions.c ****             else {
2128:..\src/interruptions.c ****                 if (g_mem.motor[1].motor_driver_type == DRIVER_BRUSHLESS) {
 7337              		.loc 1 2128 0
 7338 06d6 5A4B     		ldr	r3, .L579
 7339 06d8 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 7340 06dc 022B     		cmp	r3, #2
 7341 06de 21D1     		bne	.L457
2129:..\src/interruptions.c ****                     // Direct measure in range [2V, 4V] referenced to 4.88V meas supply and up to 5
2130:..\src/interruptions.c ****                     g_meas[g_mem.motor[1].encoder_line].curr = filter((int16) (((int32)(ADC_buf[5] 
 7342              		.loc 1 2130 0
 7343 06e0 574B     		ldr	r3, .L579
 7344 06e2 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 170


 7345 06e6 1C46     		mov	r4, r3
 7346 06e8 564B     		ldr	r3, .L579+4
 7347 06ea B3F90A30 		ldrsh	r3, [r3, #10]
 7348 06ee A3F28F63 		subw	r3, r3, #1679
 7349 06f2 45F65072 		movw	r2, #24400
 7350 06f6 02FB03F3 		mul	r3, r2, r3
 7351 06fa 5B13     		asrs	r3, r3, #13
 7352 06fc 1BB2     		sxth	r3, r3
 7353 06fe 1A46     		mov	r2, r3
 7354 0700 514B     		ldr	r3, .L579+8
 7355 0702 93F90130 		ldrsb	r3, [r3, #1]
 7356 0706 03FB02F3 		mul	r3, r3, r2
 7357 070a 5549     		ldr	r1, .L579+32
 7358 070c 1846     		mov	r0, r3
 7359 070e FFF7FEFF 		bl	filter
 7360 0712 0146     		mov	r1, r0
 7361 0714 4E4A     		ldr	r2, .L579+16
 7362 0716 3423     		movs	r3, #52
 7363 0718 03FB04F3 		mul	r3, r3, r4
 7364 071c 1344     		add	r3, r3, r2
 7365 071e 0C33     		adds	r3, r3, #12
 7366 0720 1960     		str	r1, [r3]
 7367 0722 1BE0     		b	.L456
 7368              	.L457:
2131:..\src/interruptions.c ****                 } else { // [GS]
2132:..\src/interruptions.c ****                     g_meas[g_mem.motor[1].encoder_line].curr = ((int16) ((int32)((ADC_buf[5] - 1635
 7369              		.loc 1 2132 0
 7370 0724 464B     		ldr	r3, .L579
 7371 0726 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7372 072a 1846     		mov	r0, r3
 7373 072c 454B     		ldr	r3, .L579+4
 7374 072e B3F90A30 		ldrsh	r3, [r3, #10]
 7375 0732 A3F26362 		subw	r2, r3, #1635
 7376 0736 1346     		mov	r3, r2
 7377 0738 1B01     		lsls	r3, r3, #4
 7378 073a 9B1A     		subs	r3, r3, r2
 7379 073c 5B01     		lsls	r3, r3, #5
 7380 073e 1B11     		asrs	r3, r3, #4
 7381 0740 1BB2     		sxth	r3, r3
 7382 0742 1A46     		mov	r2, r3
 7383 0744 404B     		ldr	r3, .L579+8
 7384 0746 93F90130 		ldrsb	r3, [r3, #1]
 7385 074a 03FB02F2 		mul	r2, r3, r2
 7386 074e 4049     		ldr	r1, .L579+16
 7387 0750 3423     		movs	r3, #52
 7388 0752 03FB00F3 		mul	r3, r3, r0
 7389 0756 0B44     		add	r3, r3, r1
 7390 0758 0C33     		adds	r3, r3, #12
 7391 075a 1A60     		str	r2, [r3]
 7392              	.L456:
2133:..\src/interruptions.c ****                 }
2134:..\src/interruptions.c ****             }
2135:..\src/interruptions.c ****             
2136:..\src/interruptions.c ****             g_meas[g_mem.motor[1].encoder_line].estim_curr = (int16) filter(((int32) g_meas[g_mem.m
 7393              		.loc 1 2136 0
 7394 075c 384B     		ldr	r3, .L579
 7395 075e 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 171


 7396 0762 1D46     		mov	r5, r3
 7397 0764 364B     		ldr	r3, .L579
 7398 0766 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7399 076a 1946     		mov	r1, r3
 7400 076c 384A     		ldr	r2, .L579+16
 7401 076e 3423     		movs	r3, #52
 7402 0770 03FB01F3 		mul	r3, r3, r1
 7403 0774 1344     		add	r3, r3, r2
 7404 0776 0C33     		adds	r3, r3, #12
 7405 0778 1C68     		ldr	r4, [r3]
 7406 077a 314B     		ldr	r3, .L579
 7407 077c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7408 0780 1946     		mov	r1, r3
 7409 0782 334A     		ldr	r2, .L579+16
 7410 0784 3423     		movs	r3, #52
 7411 0786 03FB01F3 		mul	r3, r3, r1
 7412 078a 1344     		add	r3, r3, r2
 7413 078c 1A68     		ldr	r2, [r3]
 7414 078e 2C4B     		ldr	r3, .L579
 7415 0790 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7416 0794 1846     		mov	r0, r3
 7417 0796 2A49     		ldr	r1, .L579
 7418 0798 0346     		mov	r3, r0
 7419 079a 5B00     		lsls	r3, r3, #1
 7420 079c 0344     		add	r3, r3, r0
 7421 079e 1B01     		lsls	r3, r3, #4
 7422 07a0 0B44     		add	r3, r3, r1
 7423 07a2 03F29513 		addw	r3, r3, #405
 7424 07a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7425 07a8 42FA03F6 		asr	r6, r2, r3
 7426 07ac 244B     		ldr	r3, .L579
 7427 07ae 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7428 07b2 1946     		mov	r1, r3
 7429 07b4 264A     		ldr	r2, .L579+16
 7430 07b6 3423     		movs	r3, #52
 7431 07b8 03FB01F3 		mul	r3, r3, r1
 7432 07bc 1344     		add	r3, r3, r2
 7433 07be 1C33     		adds	r3, r3, #28
 7434 07c0 1A68     		ldr	r2, [r3]
 7435 07c2 1F4B     		ldr	r3, .L579
 7436 07c4 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7437 07c8 1846     		mov	r0, r3
 7438 07ca 1D49     		ldr	r1, .L579
 7439 07cc 0346     		mov	r3, r0
 7440 07ce 5B00     		lsls	r3, r3, #1
 7441 07d0 0344     		add	r3, r3, r0
 7442 07d2 1B01     		lsls	r3, r3, #4
 7443 07d4 0B44     		add	r3, r3, r1
 7444 07d6 03F29513 		addw	r3, r3, #405
 7445 07da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7446 07dc 42FA03FE 		asr	lr, r2, r3
 7447 07e0 1C4B     		ldr	r3, .L579+20
 7448 07e2 1A69     		ldr	r2, [r3, #16]
 7449 07e4 164B     		ldr	r3, .L579
 7450 07e6 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 7451 07ea 1846     		mov	r0, r3
 7452 07ec 1449     		ldr	r1, .L579
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 172


 7453 07ee 0346     		mov	r3, r0
 7454 07f0 5B00     		lsls	r3, r3, #1
 7455 07f2 0344     		add	r3, r3, r0
 7456 07f4 1B01     		lsls	r3, r3, #4
 7457 07f6 0B44     		add	r3, r3, r1
 7458 07f8 03F29513 		addw	r3, r3, #405
 7459 07fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7460 07fe 42FA03F3 		asr	r3, r2, r3
 7461 0802 7246     		mov	r2, lr
 7462 0804 3146     		mov	r1, r6
 7463 0806 0120     		movs	r0, #1
 7464 0808 FFF7FEFF 		bl	curr_estim
 7465 080c 0346     		mov	r3, r0
 7466 080e E31A     		subs	r3, r4, r3
 7467 0810 1449     		ldr	r1, .L579+36
 7468 0812 1846     		mov	r0, r3
 7469 0814 FFF7FEFF 		bl	filter
 7470 0818 0346     		mov	r3, r0
 7471 081a 1BB2     		sxth	r3, r3
 7472 081c 1946     		mov	r1, r3
 7473 081e 0C4A     		ldr	r2, .L579+16
 7474 0820 3423     		movs	r3, #52
 7475 0822 03FB05F3 		mul	r3, r3, r5
 7476 0826 1344     		add	r3, r3, r2
 7477 0828 1033     		adds	r3, r3, #16
 7478 082a 1960     		str	r1, [r3]
 7479              	.L454:
2137:..\src/interruptions.c ****         }
2138:..\src/interruptions.c ****     
2139:..\src/interruptions.c ****         // Check Interrupt 
2140:..\src/interruptions.c ****     
2141:..\src/interruptions.c ****         if (interrupt_flag){
 7480              		.loc 1 2141 0
 7481 082c 0E4B     		ldr	r3, .L579+40
 7482 082e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7483 0830 002B     		cmp	r3, #0
 7484 0832 1CD0     		beq	.L442
2142:..\src/interruptions.c ****             interrupt_flag = FALSE;
 7485              		.loc 1 2142 0
 7486 0834 0C4B     		ldr	r3, .L579+40
 7487 0836 0022     		movs	r2, #0
 7488 0838 1A70     		strb	r2, [r3]
2143:..\src/interruptions.c ****             interrupt_manager();
 7489              		.loc 1 2143 0
 7490 083a FFF7FEFF 		bl	interrupt_manager
 7491 083e 16E0     		b	.L442
 7492              	.L580:
 7493              		.align	2
 7494              	.L579:
 7495 0840 00000000 		.word	g_mem
 7496 0844 00000000 		.word	ADC_buf
 7497 0848 00000000 		.word	pwm_sign
 7498 084c 00000000 		.word	filt_i
 7499 0850 00000000 		.word	g_meas
 7500 0854 00000000 		.word	g_ref
 7501 0858 00000000 		.word	filt_curr_diff
 7502 085c 00000000 		.word	NUM_OF_ANALOG_INPUTS
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 173


 7503 0860 08000000 		.word	filt_i+8
 7504 0864 08000000 		.word	filt_curr_diff+8
 7505 0868 00000000 		.word	interrupt_flag
 7506              	.L557:
2040:..\src/interruptions.c ****         // PSoC is powered through uUSB
 7507              		.loc 1 2040 0
 7508 086c 00BF     		nop
 7509              	.L442:
2144:..\src/interruptions.c ****         }
2145:..\src/interruptions.c **** 
2146:..\src/interruptions.c ****     }
2147:..\src/interruptions.c ****     
2148:..\src/interruptions.c ****     // Read EMG (always even if the board is not powered)
2149:..\src/interruptions.c ****         
2150:..\src/interruptions.c ****     // if calibration is not needed go to "normal execution"
2151:..\src/interruptions.c ****     if (!c_mem.emg.emg_calibration_flag){
 7510              		.loc 1 2151 0
 7511 086e B24B     		ldr	r3, .L581
 7512 0870 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 7513 0874 002B     		cmp	r3, #0
 7514 0876 05D1     		bne	.L458
2152:..\src/interruptions.c ****         emg_1_status = NORMAL; // normal execution
 7515              		.loc 1 2152 0
 7516 0878 B04B     		ldr	r3, .L581+4
 7517 087a 0022     		movs	r2, #0
 7518 087c 1A70     		strb	r2, [r3]
2153:..\src/interruptions.c ****         emg_2_status = NORMAL; // normal execution
 7519              		.loc 1 2153 0
 7520 087e B04B     		ldr	r3, .L581+8
 7521 0880 0022     		movs	r2, #0
 7522 0882 1A70     		strb	r2, [r3]
 7523              	.L458:
2154:..\src/interruptions.c ****     }
2155:..\src/interruptions.c **** 
2156:..\src/interruptions.c ****     // EMG 1 calibration state machine
2157:..\src/interruptions.c ****    
2158:..\src/interruptions.c ****     // Calibration state machine
2159:..\src/interruptions.c ****     switch(emg_1_status) {
 7524              		.loc 1 2159 0
 7525 0884 AD4B     		ldr	r3, .L581+4
 7526 0886 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7527 0888 032B     		cmp	r3, #3
 7528 088a 00F2E180 		bhi	.L558
 7529 088e 01A2     		adr	r2, .L461
 7530 0890 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7531              		.p2align 2
 7532              	.L461:
 7533 0894 A5080000 		.word	.L460+1
 7534 0898 55090000 		.word	.L462+1
 7535 089c 6B090000 		.word	.L463+1
 7536 08a0 A7090000 		.word	.L464+1
 7537              		.p2align 1
 7538              	.L460:
2160:..\src/interruptions.c ****         case NORMAL: // normal execution
2161:..\src/interruptions.c ****             
2162:..\src/interruptions.c ****             if (g_mem.dev.dev_type != AIR_CHAMBERS_FB && g_mem.dev.dev_type != OTBK_ACT_WRIST_MS){
 7539              		.loc 1 2162 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 174


 7540 08a4 A74B     		ldr	r3, .L581+12
 7541 08a6 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 7542 08aa 022B     		cmp	r3, #2
 7543 08ac 13D0     		beq	.L465
 7544              		.loc 1 2162 0 is_stmt 0 discriminator 1
 7545 08ae A54B     		ldr	r3, .L581+12
 7546 08b0 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 7547 08b4 032B     		cmp	r3, #3
 7548 08b6 0ED0     		beq	.L465
2163:..\src/interruptions.c ****                 i_aux = ((int32)(ADC_buf[2 + c_mem.emg.switch_emg] - 1639) * 87) >> 5;  //map range
 7549              		.loc 1 2163 0 is_stmt 1
 7550 08b8 9F4B     		ldr	r3, .L581
 7551 08ba 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7552 08be 0233     		adds	r3, r3, #2
 7553 08c0 A14A     		ldr	r2, .L581+16
 7554 08c2 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7555 08c6 A3F26763 		subw	r3, r3, #1639
 7556 08ca 5722     		movs	r2, #87
 7557 08cc 02FB03F3 		mul	r3, r2, r3
 7558 08d0 5B11     		asrs	r3, r3, #5
 7559 08d2 7B60     		str	r3, [r7, #4]
 7560 08d4 07E0     		b	.L466
 7561              	.L465:
2164:..\src/interruptions.c ****             }
2165:..\src/interruptions.c ****             else {  // Use additional ADC channels, so the signal does not pass through AVAGO isola
2166:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[2 + c_mem.emg.switch_emg]);
 7562              		.loc 1 2166 0
 7563 08d6 984B     		ldr	r3, .L581
 7564 08d8 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7565 08dc 0233     		adds	r3, r3, #2
 7566 08de 9A4A     		ldr	r2, .L581+16
 7567 08e0 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7568 08e4 7B60     		str	r3, [r7, #4]
 7569              	.L466:
2167:..\src/interruptions.c ****             }
2168:..\src/interruptions.c ****             
2169:..\src/interruptions.c ****             if (i_aux < 0) 
 7570              		.loc 1 2169 0
 7571 08e6 7B68     		ldr	r3, [r7, #4]
 7572 08e8 002B     		cmp	r3, #0
 7573 08ea 01DA     		bge	.L467
2170:..\src/interruptions.c ****                 i_aux = 0;
 7574              		.loc 1 2170 0
 7575 08ec 0023     		movs	r3, #0
 7576 08ee 7B60     		str	r3, [r7, #4]
 7577              	.L467:
2171:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[0]);
 7578              		.loc 1 2171 0
 7579 08f0 9649     		ldr	r1, .L581+20
 7580 08f2 7868     		ldr	r0, [r7, #4]
 7581 08f4 FFF7FEFF 		bl	filter
 7582 08f8 7860     		str	r0, [r7, #4]
2172:..\src/interruptions.c ****             i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[0];
 7583              		.loc 1 2172 0
 7584 08fa 7B68     		ldr	r3, [r7, #4]
 7585 08fc 9B02     		lsls	r3, r3, #10
 7586 08fe 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 175


 7587 0900 904B     		ldr	r3, .L581+12
 7588 0902 D3F8F431 		ldr	r3, [r3, #500]
 7589 0906 B2FBF3F3 		udiv	r3, r2, r3
 7590 090a 7B60     		str	r3, [r7, #4]
2173:..\src/interruptions.c **** 
2174:..\src/interruptions.c ****             if (interrupt_flag){
 7591              		.loc 1 2174 0
 7592 090c 904B     		ldr	r3, .L581+24
 7593 090e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7594 0910 002B     		cmp	r3, #0
 7595 0912 04D0     		beq	.L468
2175:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7596              		.loc 1 2175 0
 7597 0914 8E4B     		ldr	r3, .L581+24
 7598 0916 0022     		movs	r2, #0
 7599 0918 1A70     		strb	r2, [r3]
2176:..\src/interruptions.c ****                 interrupt_manager();
 7600              		.loc 1 2176 0
 7601 091a FFF7FEFF 		bl	interrupt_manager
 7602              	.L468:
2177:..\src/interruptions.c ****             }
2178:..\src/interruptions.c ****             //Saturation
2179:..\src/interruptions.c ****             if (i_aux < 0)
 7603              		.loc 1 2179 0
 7604 091e 7B68     		ldr	r3, [r7, #4]
 7605 0920 002B     		cmp	r3, #0
 7606 0922 02DA     		bge	.L469
2180:..\src/interruptions.c ****                 i_aux = 0;
 7607              		.loc 1 2180 0
 7608 0924 0023     		movs	r3, #0
 7609 0926 7B60     		str	r3, [r7, #4]
 7610 0928 06E0     		b	.L470
 7611              	.L469:
2181:..\src/interruptions.c ****             else 
2182:..\src/interruptions.c ****                 if (i_aux > 1024) 
 7612              		.loc 1 2182 0
 7613 092a 7B68     		ldr	r3, [r7, #4]
 7614 092c B3F5806F 		cmp	r3, #1024
 7615 0930 02DD     		ble	.L470
2183:..\src/interruptions.c ****                     i_aux = 1024;
 7616              		.loc 1 2183 0
 7617 0932 4FF48063 		mov	r3, #1024
 7618 0936 7B60     		str	r3, [r7, #4]
 7619              	.L470:
2184:..\src/interruptions.c ****             
2185:..\src/interruptions.c ****             g_adc_meas.emg[0] = i_aux;
 7620              		.loc 1 2185 0
 7621 0938 864A     		ldr	r2, .L581+28
 7622 093a 7B68     		ldr	r3, [r7, #4]
 7623 093c 1360     		str	r3, [r2]
2186:..\src/interruptions.c **** 
2187:..\src/interruptions.c ****             if (interrupt_flag){
 7624              		.loc 1 2187 0
 7625 093e 844B     		ldr	r3, .L581+24
 7626 0940 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7627 0942 002B     		cmp	r3, #0
 7628 0944 00F08680 		beq	.L559
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 176


2188:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7629              		.loc 1 2188 0
 7630 0948 814B     		ldr	r3, .L581+24
 7631 094a 0022     		movs	r2, #0
 7632 094c 1A70     		strb	r2, [r3]
2189:..\src/interruptions.c ****                 interrupt_manager();
 7633              		.loc 1 2189 0
 7634 094e FFF7FEFF 		bl	interrupt_manager
2190:..\src/interruptions.c ****             }
2191:..\src/interruptions.c ****             
2192:..\src/interruptions.c ****             break;
 7635              		.loc 1 2192 0
 7636 0952 7FE0     		b	.L559
 7637              	.L462:
2193:..\src/interruptions.c **** 
2194:..\src/interruptions.c ****         case RESET: // reset variables
2195:..\src/interruptions.c ****             emg_counter_1 = 0;
 7638              		.loc 1 2195 0
 7639 0954 804B     		ldr	r3, .L581+32
 7640 0956 0022     		movs	r2, #0
 7641 0958 1A80     		strh	r2, [r3]	@ movhi
2196:..\src/interruptions.c ****             g_mem.emg.emg_max_value[0] = 0;
 7642              		.loc 1 2196 0
 7643 095a 7A4B     		ldr	r3, .L581+12
 7644 095c 0022     		movs	r2, #0
 7645 095e C3F8F421 		str	r2, [r3, #500]
2197:..\src/interruptions.c ****             emg_1_status = DISCARD; // goto next status  
 7646              		.loc 1 2197 0
 7647 0962 764B     		ldr	r3, .L581+4
 7648 0964 0222     		movs	r2, #2
 7649 0966 1A70     		strb	r2, [r3]
2198:..\src/interruptions.c ****             break;
 7650              		.loc 1 2198 0
 7651 0968 79E0     		b	.L472
 7652              	.L463:
2199:..\src/interruptions.c **** 
2200:..\src/interruptions.c ****         case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
2201:..\src/interruptions.c ****             emg_counter_1++;
 7653              		.loc 1 2201 0
 7654 096a 7B4B     		ldr	r3, .L581+32
 7655 096c 1B88     		ldrh	r3, [r3]
 7656 096e 0133     		adds	r3, r3, #1
 7657 0970 9AB2     		uxth	r2, r3
 7658 0972 794B     		ldr	r3, .L581+32
 7659 0974 1A80     		strh	r2, [r3]	@ movhi
2202:..\src/interruptions.c ****             if (emg_counter_1 == EMG_SAMPLE_TO_DISCARD) {
 7660              		.loc 1 2202 0
 7661 0976 784B     		ldr	r3, .L581+32
 7662 0978 1B88     		ldrh	r3, [r3]
 7663 097a B3F5FA7F 		cmp	r3, #500
 7664 097e 6BD1     		bne	.L560
2203:..\src/interruptions.c ****                 emg_counter_1 = 0;          // reset counter
 7665              		.loc 1 2203 0
 7666 0980 754B     		ldr	r3, .L581+32
 7667 0982 0022     		movs	r2, #0
 7668 0984 1A80     		strh	r2, [r3]	@ movhi
2204:..\src/interruptions.c ****                 LED_control(1);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 177


 7669              		.loc 1 2204 0
 7670 0986 0120     		movs	r0, #1
 7671 0988 FFF7FEFF 		bl	LED_control
2205:..\src/interruptions.c **** 				
2206:..\src/interruptions.c ****                 if (interrupt_flag){
 7672              		.loc 1 2206 0
 7673 098c 704B     		ldr	r3, .L581+24
 7674 098e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7675 0990 002B     		cmp	r3, #0
 7676 0992 04D0     		beq	.L474
2207:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7677              		.loc 1 2207 0
 7678 0994 6E4B     		ldr	r3, .L581+24
 7679 0996 0022     		movs	r2, #0
 7680 0998 1A70     		strb	r2, [r3]
2208:..\src/interruptions.c ****                     interrupt_manager();
 7681              		.loc 1 2208 0
 7682 099a FFF7FEFF 		bl	interrupt_manager
 7683              	.L474:
2209:..\src/interruptions.c ****                 }
2210:..\src/interruptions.c ****                 
2211:..\src/interruptions.c ****                 emg_1_status = SUM_AND_MEAN;    // sum and mean status
 7684              		.loc 1 2211 0
 7685 099e 674B     		ldr	r3, .L581+4
 7686 09a0 0322     		movs	r2, #3
 7687 09a2 1A70     		strb	r2, [r3]
2212:..\src/interruptions.c ****             }
2213:..\src/interruptions.c ****             break;
 7688              		.loc 1 2213 0
 7689 09a4 58E0     		b	.L560
 7690              	.L464:
2214:..\src/interruptions.c **** 
2215:..\src/interruptions.c ****         case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2216:..\src/interruptions.c ****             // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2217:..\src/interruptions.c ****             emg_counter_1++;
 7691              		.loc 1 2217 0
 7692 09a6 6C4B     		ldr	r3, .L581+32
 7693 09a8 1B88     		ldrh	r3, [r3]
 7694 09aa 0133     		adds	r3, r3, #1
 7695 09ac 9AB2     		uxth	r2, r3
 7696 09ae 6A4B     		ldr	r3, .L581+32
 7697 09b0 1A80     		strh	r2, [r3]	@ movhi
2218:..\src/interruptions.c ****             if (ADC_buf[2 + c_mem.emg.switch_emg] < 0) 
 7698              		.loc 1 2218 0
 7699 09b2 614B     		ldr	r3, .L581
 7700 09b4 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7701 09b8 0233     		adds	r3, r3, #2
 7702 09ba 634A     		ldr	r2, .L581+16
 7703 09bc 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7704 09c0 002B     		cmp	r3, #0
 7705 09c2 07DA     		bge	.L475
2219:..\src/interruptions.c ****                 ADC_buf[2 + c_mem.emg.switch_emg] = 0;
 7706              		.loc 1 2219 0
 7707 09c4 5C4B     		ldr	r3, .L581
 7708 09c6 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7709 09ca 0233     		adds	r3, r3, #2
 7710 09cc 5E4A     		ldr	r2, .L581+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 178


 7711 09ce 0021     		movs	r1, #0
 7712 09d0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 7713              	.L475:
2220:..\src/interruptions.c ****             g_mem.emg.emg_max_value[0] += filter((int32)ADC_buf[2 + c_mem.emg.switch_emg], &filt_em
 7714              		.loc 1 2220 0
 7715 09d4 584B     		ldr	r3, .L581
 7716 09d6 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7717 09da 0233     		adds	r3, r3, #2
 7718 09dc 5A4A     		ldr	r2, .L581+16
 7719 09de 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7720 09e2 5A49     		ldr	r1, .L581+20
 7721 09e4 1846     		mov	r0, r3
 7722 09e6 FFF7FEFF 		bl	filter
 7723 09ea 0246     		mov	r2, r0
 7724 09ec 554B     		ldr	r3, .L581+12
 7725 09ee D3F8F431 		ldr	r3, [r3, #500]
 7726 09f2 1344     		add	r3, r3, r2
 7727 09f4 534A     		ldr	r2, .L581+12
 7728 09f6 C2F8F431 		str	r3, [r2, #500]
2221:..\src/interruptions.c ****             
2222:..\src/interruptions.c ****             if (interrupt_flag){
 7729              		.loc 1 2222 0
 7730 09fa 554B     		ldr	r3, .L581+24
 7731 09fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7732 09fe 002B     		cmp	r3, #0
 7733 0a00 04D0     		beq	.L476
2223:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7734              		.loc 1 2223 0
 7735 0a02 534B     		ldr	r3, .L581+24
 7736 0a04 0022     		movs	r2, #0
 7737 0a06 1A70     		strb	r2, [r3]
2224:..\src/interruptions.c ****                 interrupt_manager();
 7738              		.loc 1 2224 0
 7739 0a08 FFF7FEFF 		bl	interrupt_manager
 7740              	.L476:
2225:..\src/interruptions.c ****             }
2226:..\src/interruptions.c ****             
2227:..\src/interruptions.c ****             if (emg_counter_1 == SAMPLES_FOR_EMG_MEAN) {
 7741              		.loc 1 2227 0
 7742 0a0c 524B     		ldr	r3, .L581+32
 7743 0a0e 1B88     		ldrh	r3, [r3]
 7744 0a10 B3F57A7F 		cmp	r3, #1000
 7745 0a14 22D1     		bne	.L561
2228:..\src/interruptions.c ****                 g_mem.emg.emg_max_value[0] = g_mem.emg.emg_max_value[0] / SAMPLES_FOR_EMG_MEAN; // 
 7746              		.loc 1 2228 0
 7747 0a16 4B4B     		ldr	r3, .L581+12
 7748 0a18 D3F8F431 		ldr	r3, [r3, #500]
 7749 0a1c 4F4A     		ldr	r2, .L581+36
 7750 0a1e A2FB0323 		umull	r2, r3, r2, r3
 7751 0a22 9B09     		lsrs	r3, r3, #6
 7752 0a24 474A     		ldr	r2, .L581+12
 7753 0a26 C2F8F431 		str	r3, [r2, #500]
2229:..\src/interruptions.c **** 
2230:..\src/interruptions.c ****                 if (interrupt_flag){
 7754              		.loc 1 2230 0
 7755 0a2a 494B     		ldr	r3, .L581+24
 7756 0a2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 179


 7757 0a2e 002B     		cmp	r3, #0
 7758 0a30 04D0     		beq	.L478
2231:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7759              		.loc 1 2231 0
 7760 0a32 474B     		ldr	r3, .L581+24
 7761 0a34 0022     		movs	r2, #0
 7762 0a36 1A70     		strb	r2, [r3]
2232:..\src/interruptions.c ****                     interrupt_manager();
 7763              		.loc 1 2232 0
 7764 0a38 FFF7FEFF 		bl	interrupt_manager
 7765              	.L478:
2233:..\src/interruptions.c ****                 }                    
2234:..\src/interruptions.c ****                 
2235:..\src/interruptions.c ****                 LED_control(0);
 7766              		.loc 1 2235 0
 7767 0a3c 0020     		movs	r0, #0
 7768 0a3e FFF7FEFF 		bl	LED_control
2236:..\src/interruptions.c **** 				
2237:..\src/interruptions.c ****                 emg_counter_1 = 0;          // reset counter
 7769              		.loc 1 2237 0
 7770 0a42 454B     		ldr	r3, .L581+32
 7771 0a44 0022     		movs	r2, #0
 7772 0a46 1A80     		strh	r2, [r3]	@ movhi
2238:..\src/interruptions.c **** 
2239:..\src/interruptions.c ****                 emg_1_status = NORMAL;      // goto normal execution
 7773              		.loc 1 2239 0
 7774 0a48 3C4B     		ldr	r3, .L581+4
 7775 0a4a 0022     		movs	r2, #0
 7776 0a4c 1A70     		strb	r2, [r3]
2240:..\src/interruptions.c ****             }
2241:..\src/interruptions.c ****             break;
 7777              		.loc 1 2241 0
 7778 0a4e 05E0     		b	.L561
 7779              	.L558:
2242:..\src/interruptions.c **** 
2243:..\src/interruptions.c ****         default:
2244:..\src/interruptions.c ****             break;
 7780              		.loc 1 2244 0
 7781 0a50 00BF     		nop
 7782 0a52 04E0     		b	.L472
 7783              	.L559:
2192:..\src/interruptions.c **** 
 7784              		.loc 1 2192 0
 7785 0a54 00BF     		nop
 7786 0a56 02E0     		b	.L472
 7787              	.L560:
2213:..\src/interruptions.c **** 
 7788              		.loc 1 2213 0
 7789 0a58 00BF     		nop
 7790 0a5a 00E0     		b	.L472
 7791              	.L561:
2241:..\src/interruptions.c **** 
 7792              		.loc 1 2241 0
 7793 0a5c 00BF     		nop
 7794              	.L472:
2245:..\src/interruptions.c ****     }
2246:..\src/interruptions.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 180


2247:..\src/interruptions.c ****     if (interrupt_flag){
 7795              		.loc 1 2247 0
 7796 0a5e 3C4B     		ldr	r3, .L581+24
 7797 0a60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7798 0a62 002B     		cmp	r3, #0
 7799 0a64 04D0     		beq	.L479
2248:..\src/interruptions.c ****         interrupt_flag = FALSE;
 7800              		.loc 1 2248 0
 7801 0a66 3A4B     		ldr	r3, .L581+24
 7802 0a68 0022     		movs	r2, #0
 7803 0a6a 1A70     		strb	r2, [r3]
2249:..\src/interruptions.c ****         interrupt_manager();
 7804              		.loc 1 2249 0
 7805 0a6c FFF7FEFF 		bl	interrupt_manager
 7806              	.L479:
2250:..\src/interruptions.c ****     }
2251:..\src/interruptions.c ****     // EMG 2 calibration state machine
2252:..\src/interruptions.c ****     switch(emg_2_status) {
 7807              		.loc 1 2252 0
 7808 0a70 334B     		ldr	r3, .L581+8
 7809 0a72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7810 0a74 052B     		cmp	r3, #5
 7811 0a76 00F2C681 		bhi	.L562
 7812 0a7a 01A2     		adr	r2, .L482
 7813 0a7c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7814              		.p2align 2
 7815              	.L482:
 7816 0a80 990A0000 		.word	.L481+1
 7817 0a84 650B0000 		.word	.L483+1
 7818 0a88 8D0B0000 		.word	.L484+1
 7819 0a8c CB0B0000 		.word	.L485+1
 7820 0a90 7D0C0000 		.word	.L486+1
 7821 0a94 8F0C0000 		.word	.L487+1
 7822              		.p2align 1
 7823              	.L481:
2253:..\src/interruptions.c ****         case NORMAL: // normal execution
2254:..\src/interruptions.c ****         
2255:..\src/interruptions.c ****             if (g_mem.dev.dev_type != AIR_CHAMBERS_FB && g_mem.dev.dev_type != OTBK_ACT_WRIST_MS){
 7824              		.loc 1 2255 0
 7825 0a98 2A4B     		ldr	r3, .L581+12
 7826 0a9a 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 7827 0a9e 022B     		cmp	r3, #2
 7828 0aa0 14D0     		beq	.L488
 7829              		.loc 1 2255 0 is_stmt 0 discriminator 1
 7830 0aa2 284B     		ldr	r3, .L581+12
 7831 0aa4 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 7832 0aa8 032B     		cmp	r3, #3
 7833 0aaa 0FD0     		beq	.L488
2256:..\src/interruptions.c ****                 i_aux = ((int32)(ADC_buf[3 - c_mem.emg.switch_emg] - 1639) * 87) >> 5;  //map range
 7834              		.loc 1 2256 0 is_stmt 1
 7835 0aac 224B     		ldr	r3, .L581
 7836 0aae 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7837 0ab2 C3F10303 		rsb	r3, r3, #3
 7838 0ab6 244A     		ldr	r2, .L581+16
 7839 0ab8 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7840 0abc A3F26763 		subw	r3, r3, #1639
 7841 0ac0 5722     		movs	r2, #87
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 181


 7842 0ac2 02FB03F3 		mul	r3, r2, r3
 7843 0ac6 5B11     		asrs	r3, r3, #5
 7844 0ac8 7B60     		str	r3, [r7, #4]
 7845 0aca 08E0     		b	.L489
 7846              	.L488:
2257:..\src/interruptions.c ****             }
2258:..\src/interruptions.c ****             else {  // Use additional ADC channels, so the signal does not pass through AVAGO isola
2259:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[3 - c_mem.emg.switch_emg]);
 7847              		.loc 1 2259 0
 7848 0acc 1A4B     		ldr	r3, .L581
 7849 0ace 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 7850 0ad2 C3F10303 		rsb	r3, r3, #3
 7851 0ad6 1C4A     		ldr	r2, .L581+16
 7852 0ad8 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 7853 0adc 7B60     		str	r3, [r7, #4]
 7854              	.L489:
2260:..\src/interruptions.c ****             }
2261:..\src/interruptions.c **** 
2262:..\src/interruptions.c ****             if (i_aux < 0)
 7855              		.loc 1 2262 0
 7856 0ade 7B68     		ldr	r3, [r7, #4]
 7857 0ae0 002B     		cmp	r3, #0
 7858 0ae2 01DA     		bge	.L490
2263:..\src/interruptions.c ****                 i_aux = 0;
 7859              		.loc 1 2263 0
 7860 0ae4 0023     		movs	r3, #0
 7861 0ae6 7B60     		str	r3, [r7, #4]
 7862              	.L490:
2264:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[1]);
 7863              		.loc 1 2264 0
 7864 0ae8 1D49     		ldr	r1, .L581+40
 7865 0aea 7868     		ldr	r0, [r7, #4]
 7866 0aec FFF7FEFF 		bl	filter
 7867 0af0 7860     		str	r0, [r7, #4]
2265:..\src/interruptions.c ****             i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[1];
 7868              		.loc 1 2265 0
 7869 0af2 7B68     		ldr	r3, [r7, #4]
 7870 0af4 9B02     		lsls	r3, r3, #10
 7871 0af6 1A46     		mov	r2, r3
 7872 0af8 124B     		ldr	r3, .L581+12
 7873 0afa D3F8F831 		ldr	r3, [r3, #504]
 7874 0afe B2FBF3F3 		udiv	r3, r2, r3
 7875 0b02 7B60     		str	r3, [r7, #4]
2266:..\src/interruptions.c **** 
2267:..\src/interruptions.c ****             if (interrupt_flag){
 7876              		.loc 1 2267 0
 7877 0b04 124B     		ldr	r3, .L581+24
 7878 0b06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7879 0b08 002B     		cmp	r3, #0
 7880 0b0a 04D0     		beq	.L491
2268:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7881              		.loc 1 2268 0
 7882 0b0c 104B     		ldr	r3, .L581+24
 7883 0b0e 0022     		movs	r2, #0
 7884 0b10 1A70     		strb	r2, [r3]
2269:..\src/interruptions.c ****                 interrupt_manager();
 7885              		.loc 1 2269 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 182


 7886 0b12 FFF7FEFF 		bl	interrupt_manager
 7887              	.L491:
2270:..\src/interruptions.c ****             }
2271:..\src/interruptions.c ****             
2272:..\src/interruptions.c ****             if (i_aux < 0) 
 7888              		.loc 1 2272 0
 7889 0b16 7B68     		ldr	r3, [r7, #4]
 7890 0b18 002B     		cmp	r3, #0
 7891 0b1a 02DA     		bge	.L492
2273:..\src/interruptions.c ****                 i_aux = 0;
 7892              		.loc 1 2273 0
 7893 0b1c 0023     		movs	r3, #0
 7894 0b1e 7B60     		str	r3, [r7, #4]
 7895 0b20 06E0     		b	.L493
 7896              	.L492:
2274:..\src/interruptions.c ****             else 
2275:..\src/interruptions.c ****                 if (i_aux > 1024)
 7897              		.loc 1 2275 0
 7898 0b22 7B68     		ldr	r3, [r7, #4]
 7899 0b24 B3F5806F 		cmp	r3, #1024
 7900 0b28 02DD     		ble	.L493
2276:..\src/interruptions.c ****                     i_aux = 1024;
 7901              		.loc 1 2276 0
 7902 0b2a 4FF48063 		mov	r3, #1024
 7903 0b2e 7B60     		str	r3, [r7, #4]
 7904              	.L493:
2277:..\src/interruptions.c ****             
2278:..\src/interruptions.c ****             g_adc_meas.emg[1] = i_aux;
 7905              		.loc 1 2278 0
 7906 0b30 084A     		ldr	r2, .L581+28
 7907 0b32 7B68     		ldr	r3, [r7, #4]
 7908 0b34 5360     		str	r3, [r2, #4]
2279:..\src/interruptions.c **** 
2280:..\src/interruptions.c ****             break;
 7909              		.loc 1 2280 0
 7910 0b36 88E1     		b	.L494
 7911              	.L582:
 7912              		.align	2
 7913              	.L581:
 7914 0b38 00000000 		.word	c_mem
 7915 0b3c 00000000 		.word	emg_1_status
 7916 0b40 00000000 		.word	emg_2_status
 7917 0b44 00000000 		.word	g_mem
 7918 0b48 00000000 		.word	ADC_buf
 7919 0b4c 00000000 		.word	filt_emg
 7920 0b50 00000000 		.word	interrupt_flag
 7921 0b54 00000000 		.word	g_adc_meas
 7922 0b58 78010000 		.word	emg_counter_1.10661
 7923 0b5c D34D6210 		.word	274877907
 7924 0b60 08000000 		.word	filt_emg+8
 7925              	.L483:
2281:..\src/interruptions.c **** 
2282:..\src/interruptions.c ****         case RESET: // reset variables
2283:..\src/interruptions.c ****             emg_counter_2 = 0;
 7926              		.loc 1 2283 0
 7927 0b64 AC4B     		ldr	r3, .L583
 7928 0b66 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 183


 7929 0b68 1A80     		strh	r2, [r3]	@ movhi
2284:..\src/interruptions.c ****             g_mem.emg.emg_max_value[1] = 0;
 7930              		.loc 1 2284 0
 7931 0b6a AC4B     		ldr	r3, .L583+4
 7932 0b6c 0022     		movs	r2, #0
 7933 0b6e C3F8F821 		str	r2, [r3, #504]
2285:..\src/interruptions.c **** 
2286:..\src/interruptions.c ****             if (interrupt_flag){
 7934              		.loc 1 2286 0
 7935 0b72 AB4B     		ldr	r3, .L583+8
 7936 0b74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7937 0b76 002B     		cmp	r3, #0
 7938 0b78 04D0     		beq	.L495
2287:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7939              		.loc 1 2287 0
 7940 0b7a A94B     		ldr	r3, .L583+8
 7941 0b7c 0022     		movs	r2, #0
 7942 0b7e 1A70     		strb	r2, [r3]
2288:..\src/interruptions.c ****                 interrupt_manager();
 7943              		.loc 1 2288 0
 7944 0b80 FFF7FEFF 		bl	interrupt_manager
 7945              	.L495:
2289:..\src/interruptions.c ****             }
2290:..\src/interruptions.c ****             
2291:..\src/interruptions.c ****             emg_2_status = WAIT; // wait for EMG 1 calibration
 7946              		.loc 1 2291 0
 7947 0b84 A74B     		ldr	r3, .L583+12
 7948 0b86 0422     		movs	r2, #4
 7949 0b88 1A70     		strb	r2, [r3]
2292:..\src/interruptions.c ****             break;
 7950              		.loc 1 2292 0
 7951 0b8a 5EE1     		b	.L494
 7952              	.L484:
2293:..\src/interruptions.c **** 
2294:..\src/interruptions.c ****         case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
2295:..\src/interruptions.c ****             emg_counter_2++;
 7953              		.loc 1 2295 0
 7954 0b8c A24B     		ldr	r3, .L583
 7955 0b8e 1B88     		ldrh	r3, [r3]
 7956 0b90 0133     		adds	r3, r3, #1
 7957 0b92 9AB2     		uxth	r2, r3
 7958 0b94 A04B     		ldr	r3, .L583
 7959 0b96 1A80     		strh	r2, [r3]	@ movhi
2296:..\src/interruptions.c ****             if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 7960              		.loc 1 2296 0
 7961 0b98 9F4B     		ldr	r3, .L583
 7962 0b9a 1B88     		ldrh	r3, [r3]
 7963 0b9c B3F5FA7F 		cmp	r3, #500
 7964 0ba0 40F03381 		bne	.L563
2297:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 7965              		.loc 1 2297 0
 7966 0ba4 9C4B     		ldr	r3, .L583
 7967 0ba6 0022     		movs	r2, #0
 7968 0ba8 1A80     		strh	r2, [r3]	@ movhi
2298:..\src/interruptions.c ****                 LED_control(1);
 7969              		.loc 1 2298 0
 7970 0baa 0120     		movs	r0, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 184


 7971 0bac FFF7FEFF 		bl	LED_control
2299:..\src/interruptions.c **** 
2300:..\src/interruptions.c ****                 if (interrupt_flag){
 7972              		.loc 1 2300 0
 7973 0bb0 9B4B     		ldr	r3, .L583+8
 7974 0bb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7975 0bb4 002B     		cmp	r3, #0
 7976 0bb6 04D0     		beq	.L497
2301:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 7977              		.loc 1 2301 0
 7978 0bb8 994B     		ldr	r3, .L583+8
 7979 0bba 0022     		movs	r2, #0
 7980 0bbc 1A70     		strb	r2, [r3]
2302:..\src/interruptions.c ****                     interrupt_manager();
 7981              		.loc 1 2302 0
 7982 0bbe FFF7FEFF 		bl	interrupt_manager
 7983              	.L497:
2303:..\src/interruptions.c ****                 }
2304:..\src/interruptions.c ****                 
2305:..\src/interruptions.c ****                 emg_2_status = SUM_AND_MEAN;           // sum and mean status
 7984              		.loc 1 2305 0
 7985 0bc2 984B     		ldr	r3, .L583+12
 7986 0bc4 0322     		movs	r2, #3
 7987 0bc6 1A70     		strb	r2, [r3]
2306:..\src/interruptions.c ****             }
2307:..\src/interruptions.c ****             break;
 7988              		.loc 1 2307 0
 7989 0bc8 1FE1     		b	.L563
 7990              	.L485:
2308:..\src/interruptions.c **** 
2309:..\src/interruptions.c ****         case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2310:..\src/interruptions.c ****             // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2311:..\src/interruptions.c ****             emg_counter_2++;
 7991              		.loc 1 2311 0
 7992 0bca 934B     		ldr	r3, .L583
 7993 0bcc 1B88     		ldrh	r3, [r3]
 7994 0bce 0133     		adds	r3, r3, #1
 7995 0bd0 9AB2     		uxth	r2, r3
 7996 0bd2 914B     		ldr	r3, .L583
 7997 0bd4 1A80     		strh	r2, [r3]	@ movhi
2312:..\src/interruptions.c ****             if (ADC_buf[3 - c_mem.emg.switch_emg] < 0)
 7998              		.loc 1 2312 0
 7999 0bd6 944B     		ldr	r3, .L583+16
 8000 0bd8 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 8001 0bdc C3F10303 		rsb	r3, r3, #3
 8002 0be0 924A     		ldr	r2, .L583+20
 8003 0be2 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 8004 0be6 002B     		cmp	r3, #0
 8005 0be8 08DA     		bge	.L498
2313:..\src/interruptions.c ****                 ADC_buf[3 - c_mem.emg.switch_emg] = 0;
 8006              		.loc 1 2313 0
 8007 0bea 8F4B     		ldr	r3, .L583+16
 8008 0bec 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 8009 0bf0 C3F10303 		rsb	r3, r3, #3
 8010 0bf4 8D4A     		ldr	r2, .L583+20
 8011 0bf6 0021     		movs	r1, #0
 8012 0bf8 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 185


 8013              	.L498:
2314:..\src/interruptions.c ****             g_mem.emg.emg_max_value[1] += filter((int32)ADC_buf[3 - c_mem.emg.switch_emg], &filt_em
 8014              		.loc 1 2314 0
 8015 0bfc 8A4B     		ldr	r3, .L583+16
 8016 0bfe 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 8017 0c02 C3F10303 		rsb	r3, r3, #3
 8018 0c06 894A     		ldr	r2, .L583+20
 8019 0c08 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 8020 0c0c 8849     		ldr	r1, .L583+24
 8021 0c0e 1846     		mov	r0, r3
 8022 0c10 FFF7FEFF 		bl	filter
 8023 0c14 0246     		mov	r2, r0
 8024 0c16 814B     		ldr	r3, .L583+4
 8025 0c18 D3F8F831 		ldr	r3, [r3, #504]
 8026 0c1c 1344     		add	r3, r3, r2
 8027 0c1e 7F4A     		ldr	r2, .L583+4
 8028 0c20 C2F8F831 		str	r3, [r2, #504]
2315:..\src/interruptions.c **** 
2316:..\src/interruptions.c ****             if (interrupt_flag){
 8029              		.loc 1 2316 0
 8030 0c24 7E4B     		ldr	r3, .L583+8
 8031 0c26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8032 0c28 002B     		cmp	r3, #0
 8033 0c2a 04D0     		beq	.L499
2317:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 8034              		.loc 1 2317 0
 8035 0c2c 7C4B     		ldr	r3, .L583+8
 8036 0c2e 0022     		movs	r2, #0
 8037 0c30 1A70     		strb	r2, [r3]
2318:..\src/interruptions.c ****                 interrupt_manager();
 8038              		.loc 1 2318 0
 8039 0c32 FFF7FEFF 		bl	interrupt_manager
 8040              	.L499:
2319:..\src/interruptions.c ****             }
2320:..\src/interruptions.c ****             
2321:..\src/interruptions.c ****             if (emg_counter_2 == SAMPLES_FOR_EMG_MEAN) {
 8041              		.loc 1 2321 0
 8042 0c36 784B     		ldr	r3, .L583
 8043 0c38 1B88     		ldrh	r3, [r3]
 8044 0c3a B3F57A7F 		cmp	r3, #1000
 8045 0c3e 40F0E680 		bne	.L564
2322:..\src/interruptions.c ****                 g_mem.emg.emg_max_value[1] = g_mem.emg.emg_max_value[1] / SAMPLES_FOR_EMG_MEAN; // 
 8046              		.loc 1 2322 0
 8047 0c42 764B     		ldr	r3, .L583+4
 8048 0c44 D3F8F831 		ldr	r3, [r3, #504]
 8049 0c48 7A4A     		ldr	r2, .L583+28
 8050 0c4a A2FB0323 		umull	r2, r3, r2, r3
 8051 0c4e 9B09     		lsrs	r3, r3, #6
 8052 0c50 724A     		ldr	r2, .L583+4
 8053 0c52 C2F8F831 		str	r3, [r2, #504]
2323:..\src/interruptions.c ****                 LED_control(0);
 8054              		.loc 1 2323 0
 8055 0c56 0020     		movs	r0, #0
 8056 0c58 FFF7FEFF 		bl	LED_control
2324:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 8057              		.loc 1 2324 0
 8058 0c5c 6E4B     		ldr	r3, .L583
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 186


 8059 0c5e 0022     		movs	r2, #0
 8060 0c60 1A80     		strh	r2, [r3]	@ movhi
2325:..\src/interruptions.c ****             
2326:..\src/interruptions.c ****                 if (interrupt_flag){
 8061              		.loc 1 2326 0
 8062 0c62 6F4B     		ldr	r3, .L583+8
 8063 0c64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8064 0c66 002B     		cmp	r3, #0
 8065 0c68 04D0     		beq	.L501
2327:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8066              		.loc 1 2327 0
 8067 0c6a 6D4B     		ldr	r3, .L583+8
 8068 0c6c 0022     		movs	r2, #0
 8069 0c6e 1A70     		strb	r2, [r3]
2328:..\src/interruptions.c ****                     interrupt_manager();
 8070              		.loc 1 2328 0
 8071 0c70 FFF7FEFF 		bl	interrupt_manager
 8072              	.L501:
2329:..\src/interruptions.c ****                 }
2330:..\src/interruptions.c ****                 
2331:..\src/interruptions.c ****                 emg_2_status = WAIT_EoC;    // goto end of calibration wait
 8073              		.loc 1 2331 0
 8074 0c74 6B4B     		ldr	r3, .L583+12
 8075 0c76 0522     		movs	r2, #5
 8076 0c78 1A70     		strb	r2, [r3]
2332:..\src/interruptions.c ****             }
2333:..\src/interruptions.c ****             break;
 8077              		.loc 1 2333 0
 8078 0c7a C8E0     		b	.L564
 8079              	.L486:
2334:..\src/interruptions.c **** 
2335:..\src/interruptions.c ****         case WAIT: // wait for EMG calibration to be done
2336:..\src/interruptions.c ****             if (emg_1_status == NORMAL)
 8080              		.loc 1 2336 0
 8081 0c7c 6E4B     		ldr	r3, .L583+32
 8082 0c7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8083 0c80 002B     		cmp	r3, #0
 8084 0c82 40F0C680 		bne	.L565
2337:..\src/interruptions.c ****                 emg_2_status = DISCARD;           // goto discard sample
 8085              		.loc 1 2337 0
 8086 0c86 674B     		ldr	r3, .L583+12
 8087 0c88 0222     		movs	r2, #2
 8088 0c8a 1A70     		strb	r2, [r3]
2338:..\src/interruptions.c ****             break;
 8089              		.loc 1 2338 0
 8090 0c8c C1E0     		b	.L565
 8091              	.L487:
2339:..\src/interruptions.c **** 
2340:..\src/interruptions.c ****         case WAIT_EoC:  // wait for end of calibration procedure (only for LED visibility reasons)
2341:..\src/interruptions.c ****             emg_counter_2++;
 8092              		.loc 1 2341 0
 8093 0c8e 624B     		ldr	r3, .L583
 8094 0c90 1B88     		ldrh	r3, [r3]
 8095 0c92 0133     		adds	r3, r3, #1
 8096 0c94 9AB2     		uxth	r2, r3
 8097 0c96 604B     		ldr	r3, .L583
 8098 0c98 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 187


2342:..\src/interruptions.c ****             if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 8099              		.loc 1 2342 0
 8100 0c9a 5F4B     		ldr	r3, .L583
 8101 0c9c 1B88     		ldrh	r3, [r3]
 8102 0c9e B3F5FA7F 		cmp	r3, #500
 8103 0ca2 40F0D180 		bne	.L566
2343:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 8104              		.loc 1 2343 0
 8105 0ca6 5C4B     		ldr	r3, .L583
 8106 0ca8 0022     		movs	r2, #0
 8107 0caa 1A80     		strh	r2, [r3]	@ movhi
2344:..\src/interruptions.c ****                 
2345:..\src/interruptions.c ****                 if (interrupt_flag){
 8108              		.loc 1 2345 0
 8109 0cac 5C4B     		ldr	r3, .L583+8
 8110 0cae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8111 0cb0 002B     		cmp	r3, #0
 8112 0cb2 04D0     		beq	.L504
2346:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8113              		.loc 1 2346 0
 8114 0cb4 5A4B     		ldr	r3, .L583+8
 8115 0cb6 0022     		movs	r2, #0
 8116 0cb8 1A70     		strb	r2, [r3]
2347:..\src/interruptions.c ****                     interrupt_manager();
 8117              		.loc 1 2347 0
 8118 0cba FFF7FEFF 		bl	interrupt_manager
 8119              	.L504:
2348:..\src/interruptions.c ****                 }
2349:..\src/interruptions.c ****                 
2350:..\src/interruptions.c ****                 for (idx = 0; idx < NUM_OF_MOTORS; idx++) {
 8120              		.loc 1 2350 0
 8121 0cbe 5F4B     		ldr	r3, .L583+36
 8122 0cc0 0022     		movs	r2, #0
 8123 0cc2 1A70     		strb	r2, [r3]
 8124 0cc4 93E0     		b	.L505
 8125              	.L509:
2351:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 8126              		.loc 1 2351 0
 8127 0cc6 5D4B     		ldr	r3, .L583+36
 8128 0cc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8129 0cca 1946     		mov	r1, r3
 8130 0ccc 564A     		ldr	r2, .L583+16
 8131 0cce 0B46     		mov	r3, r1
 8132 0cd0 DB00     		lsls	r3, r3, #3
 8133 0cd2 5B1A     		subs	r3, r3, r1
 8134 0cd4 1B01     		lsls	r3, r3, #4
 8135 0cd6 1344     		add	r3, r3, r2
 8136 0cd8 03F58773 		add	r3, r3, #270
 8137 0cdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8138 0cde 022B     		cmp	r3, #2
 8139 0ce0 37D0     		beq	.L506
2352:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 8140              		.loc 1 2352 0 discriminator 1
 8141 0ce2 564B     		ldr	r3, .L583+36
 8142 0ce4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8143 0ce6 1946     		mov	r1, r3
 8144 0ce8 4F4A     		ldr	r2, .L583+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 188


 8145 0cea 0B46     		mov	r3, r1
 8146 0cec DB00     		lsls	r3, r3, #3
 8147 0cee 5B1A     		subs	r3, r3, r1
 8148 0cf0 1B01     		lsls	r3, r3, #4
 8149 0cf2 1344     		add	r3, r3, r2
 8150 0cf4 03F58773 		add	r3, r3, #270
 8151 0cf8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2351:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 8152              		.loc 1 2351 0 discriminator 1
 8153 0cfa 032B     		cmp	r3, #3
 8154 0cfc 29D0     		beq	.L506
2353:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 8155              		.loc 1 2353 0
 8156 0cfe 4F4B     		ldr	r3, .L583+36
 8157 0d00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8158 0d02 1946     		mov	r1, r3
 8159 0d04 484A     		ldr	r2, .L583+16
 8160 0d06 0B46     		mov	r3, r1
 8161 0d08 DB00     		lsls	r3, r3, #3
 8162 0d0a 5B1A     		subs	r3, r3, r1
 8163 0d0c 1B01     		lsls	r3, r3, #4
 8164 0d0e 1344     		add	r3, r3, r2
 8165 0d10 03F58773 		add	r3, r3, #270
 8166 0d14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2352:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 8167              		.loc 1 2352 0
 8168 0d16 042B     		cmp	r3, #4
 8169 0d18 1BD0     		beq	.L506
2354:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 8170              		.loc 1 2354 0
 8171 0d1a 484B     		ldr	r3, .L583+36
 8172 0d1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8173 0d1e 1946     		mov	r1, r3
 8174 0d20 414A     		ldr	r2, .L583+16
 8175 0d22 0B46     		mov	r3, r1
 8176 0d24 DB00     		lsls	r3, r3, #3
 8177 0d26 5B1A     		subs	r3, r3, r1
 8178 0d28 1B01     		lsls	r3, r3, #4
 8179 0d2a 1344     		add	r3, r3, r2
 8180 0d2c 03F58773 		add	r3, r3, #270
 8181 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2353:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 8182              		.loc 1 2353 0
 8183 0d32 052B     		cmp	r3, #5
 8184 0d34 0DD0     		beq	.L506
2355:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 8185              		.loc 1 2355 0
 8186 0d36 414B     		ldr	r3, .L583+36
 8187 0d38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8188 0d3a 1946     		mov	r1, r3
 8189 0d3c 3A4A     		ldr	r2, .L583+16
 8190 0d3e 0B46     		mov	r3, r1
 8191 0d40 DB00     		lsls	r3, r3, #3
 8192 0d42 5B1A     		subs	r3, r3, r1
 8193 0d44 1B01     		lsls	r3, r3, #4
 8194 0d46 1344     		add	r3, r3, r2
 8195 0d48 03F58773 		add	r3, r3, #270
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 189


 8196 0d4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2354:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 8197              		.loc 1 2354 0
 8198 0d4e 072B     		cmp	r3, #7
 8199 0d50 47D1     		bne	.L507
 8200              	.L506:
2356:..\src/interruptions.c ****                         if (c_mem.motor[idx].control_mode == CONTROL_ANGLE) {
 8201              		.loc 1 2356 0
 8202 0d52 3A4B     		ldr	r3, .L583+36
 8203 0d54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8204 0d56 1946     		mov	r1, r3
 8205 0d58 334A     		ldr	r2, .L583+16
 8206 0d5a 0B46     		mov	r3, r1
 8207 0d5c DB00     		lsls	r3, r3, #3
 8208 0d5e 5B1A     		subs	r3, r3, r1
 8209 0d60 1B01     		lsls	r3, r3, #4
 8210 0d62 1344     		add	r3, r3, r2
 8211 0d64 03F20F13 		addw	r3, r3, #271
 8212 0d68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8213 0d6a 002B     		cmp	r3, #0
 8214 0d6c 19D1     		bne	.L508
2357:..\src/interruptions.c ****                             g_ref[idx].pos = g_meas[g_mem.motor[idx].encoder_line].pos[0];
 8215              		.loc 1 2357 0
 8216 0d6e 334B     		ldr	r3, .L583+36
 8217 0d70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8218 0d72 1846     		mov	r0, r3
 8219 0d74 314B     		ldr	r3, .L583+36
 8220 0d76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8221 0d78 1946     		mov	r1, r3
 8222 0d7a 284A     		ldr	r2, .L583+4
 8223 0d7c 0B46     		mov	r3, r1
 8224 0d7e DB00     		lsls	r3, r3, #3
 8225 0d80 5B1A     		subs	r3, r3, r1
 8226 0d82 1B01     		lsls	r3, r3, #4
 8227 0d84 1344     		add	r3, r3, r2
 8228 0d86 03F58873 		add	r3, r3, #272
 8229 0d8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8230 0d8c 1946     		mov	r1, r3
 8231 0d8e 2C4A     		ldr	r2, .L583+40
 8232 0d90 3423     		movs	r3, #52
 8233 0d92 03FB01F3 		mul	r3, r3, r1
 8234 0d96 1344     		add	r3, r3, r2
 8235 0d98 1A68     		ldr	r2, [r3]
 8236 0d9a 2A49     		ldr	r1, .L583+44
 8237 0d9c 0301     		lsls	r3, r0, #4
 8238 0d9e 0B44     		add	r3, r3, r1
 8239 0da0 1A60     		str	r2, [r3]
 8240              	.L508:
2358:..\src/interruptions.c ****                         }
2359:..\src/interruptions.c ****                         g_ref[idx].onoff = c_mem.motor[idx].activ;
 8241              		.loc 1 2359 0
 8242 0da2 264B     		ldr	r3, .L583+36
 8243 0da4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8244 0da6 1846     		mov	r0, r3
 8245 0da8 244B     		ldr	r3, .L583+36
 8246 0daa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8247 0dac 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 190


 8248 0dae 1E4A     		ldr	r2, .L583+16
 8249 0db0 0B46     		mov	r3, r1
 8250 0db2 DB00     		lsls	r3, r3, #3
 8251 0db4 5B1A     		subs	r3, r3, r1
 8252 0db6 1B01     		lsls	r3, r3, #4
 8253 0db8 1344     		add	r3, r3, r2
 8254 0dba E033     		adds	r3, r3, #224
 8255 0dbc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 8256 0dbe 214A     		ldr	r2, .L583+44
 8257 0dc0 0301     		lsls	r3, r0, #4
 8258 0dc2 1344     		add	r3, r3, r2
 8259 0dc4 0C33     		adds	r3, r3, #12
 8260 0dc6 0A46     		mov	r2, r1
 8261 0dc8 1A70     		strb	r2, [r3]
2360:..\src/interruptions.c ****                         enable_motor(idx, g_ref[idx].onoff); 
 8262              		.loc 1 2360 0
 8263 0dca 1C4B     		ldr	r3, .L583+36
 8264 0dcc 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 8265 0dce 1B4B     		ldr	r3, .L583+36
 8266 0dd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8267 0dd2 1C4A     		ldr	r2, .L583+44
 8268 0dd4 1B01     		lsls	r3, r3, #4
 8269 0dd6 1344     		add	r3, r3, r2
 8270 0dd8 0C33     		adds	r3, r3, #12
 8271 0dda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8272 0ddc 1946     		mov	r1, r3
 8273 0dde FFF7FEFF 		bl	enable_motor
 8274              	.L507:
2350:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 8275              		.loc 1 2350 0 discriminator 2
 8276 0de2 164B     		ldr	r3, .L583+36
 8277 0de4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8278 0de6 0133     		adds	r3, r3, #1
 8279 0de8 DAB2     		uxtb	r2, r3
 8280 0dea 144B     		ldr	r3, .L583+36
 8281 0dec 1A70     		strb	r2, [r3]
 8282              	.L505:
2350:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 8283              		.loc 1 2350 0 is_stmt 0 discriminator 1
 8284 0dee 134B     		ldr	r3, .L583+36
 8285 0df0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8286 0df2 012B     		cmp	r3, #1
 8287 0df4 7FF667AF 		bls	.L509
2361:..\src/interruptions.c ****                     }
2362:..\src/interruptions.c ****                 }
2363:..\src/interruptions.c ****                     
2364:..\src/interruptions.c ****                 memStore(0);        // Store emg_max_value
 8288              		.loc 1 2364 0 is_stmt 1
 8289 0df8 0020     		movs	r0, #0
 8290 0dfa FFF7FEFF 		bl	memStore
2365:..\src/interruptions.c ****                     
2366:..\src/interruptions.c ****                 emg_2_status = NORMAL;           // goto normal execution
 8291              		.loc 1 2366 0
 8292 0dfe 094B     		ldr	r3, .L583+12
 8293 0e00 0022     		movs	r2, #0
 8294 0e02 1A70     		strb	r2, [r3]
2367:..\src/interruptions.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 191


2368:..\src/interruptions.c ****             break;
 8295              		.loc 1 2368 0
 8296 0e04 20E0     		b	.L566
 8297              	.L562:
2369:..\src/interruptions.c ****         default:
2370:..\src/interruptions.c ****             break;
 8298              		.loc 1 2370 0
 8299 0e06 00BF     		nop
 8300 0e08 1FE0     		b	.L494
 8301              	.L563:
2307:..\src/interruptions.c **** 
 8302              		.loc 1 2307 0
 8303 0e0a 00BF     		nop
 8304 0e0c 1DE0     		b	.L494
 8305              	.L564:
2333:..\src/interruptions.c **** 
 8306              		.loc 1 2333 0
 8307 0e0e 00BF     		nop
 8308 0e10 1BE0     		b	.L494
 8309              	.L565:
2338:..\src/interruptions.c **** 
 8310              		.loc 1 2338 0
 8311 0e12 00BF     		nop
 8312 0e14 19E0     		b	.L494
 8313              	.L584:
 8314 0e16 00BF     		.align	2
 8315              	.L583:
 8316 0e18 7A010000 		.word	emg_counter_2.10662
 8317 0e1c 00000000 		.word	g_mem
 8318 0e20 00000000 		.word	interrupt_flag
 8319 0e24 00000000 		.word	emg_2_status
 8320 0e28 00000000 		.word	c_mem
 8321 0e2c 00000000 		.word	ADC_buf
 8322 0e30 08000000 		.word	filt_emg+8
 8323 0e34 D34D6210 		.word	274877907
 8324 0e38 00000000 		.word	emg_1_status
 8325 0e3c 72010000 		.word	idx.10671
 8326 0e40 00000000 		.word	g_meas
 8327 0e44 00000000 		.word	g_ref
 8328              	.L566:
2368:..\src/interruptions.c ****         default:
 8329              		.loc 1 2368 0
 8330 0e48 00BF     		nop
 8331              	.L494:
2371:..\src/interruptions.c ****     }
2372:..\src/interruptions.c ****         
2373:..\src/interruptions.c ****     if (interrupt_flag){
 8332              		.loc 1 2373 0
 8333 0e4a A74B     		ldr	r3, .L585
 8334 0e4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8335 0e4e 002B     		cmp	r3, #0
 8336 0e50 04D0     		beq	.L510
2374:..\src/interruptions.c ****         interrupt_flag = FALSE;
 8337              		.loc 1 2374 0
 8338 0e52 A54B     		ldr	r3, .L585
 8339 0e54 0022     		movs	r2, #0
 8340 0e56 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 192


2375:..\src/interruptions.c ****         interrupt_manager();
 8341              		.loc 1 2375 0
 8342 0e58 FFF7FEFF 		bl	interrupt_manager
 8343              	.L510:
2376:..\src/interruptions.c ****     }
2377:..\src/interruptions.c ****     
2378:..\src/interruptions.c ****     if (c_mem.motor[0].input_mode == INPUT_MODE_JOYSTICK || c_mem.motor[1].input_mode == INPUT_MODE
 8344              		.loc 1 2378 0
 8345 0e5c A34B     		ldr	r3, .L585+4
 8346 0e5e 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 8347 0e62 062B     		cmp	r3, #6
 8348 0e64 05D0     		beq	.L511
 8349              		.loc 1 2378 0 is_stmt 0 discriminator 1
 8350 0e66 A14B     		ldr	r3, .L585+4
 8351 0e68 93F87E31 		ldrb	r3, [r3, #382]	@ zero_extendqisi2
 8352 0e6c 062B     		cmp	r3, #6
 8353 0e6e 40F0C481 		bne	.L512
 8354              	.L511:
2379:..\src/interruptions.c ****         // Read joystick
2380:..\src/interruptions.c ****         
2381:..\src/interruptions.c ****         switch (joy_UD_status) {
 8355              		.loc 1 2381 0 is_stmt 1
 8356 0e72 9F4B     		ldr	r3, .L585+8
 8357 0e74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8358 0e76 052B     		cmp	r3, #5
 8359 0e78 00F2CB80 		bhi	.L513
 8360 0e7c 01A2     		adr	r2, .L515
 8361 0e7e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8362 0e82 00BF     		.p2align 2
 8363              	.L515:
 8364 0e84 9D0E0000 		.word	.L514+1
 8365 0e88 390F0000 		.word	.L516+1
 8366 0e8c 4D0F0000 		.word	.L517+1
 8367 0e90 810F0000 		.word	.L518+1
 8368 0e94 ED0F0000 		.word	.L519+1
 8369 0e98 ED0F0000 		.word	.L519+1
 8370              		.p2align 1
 8371              	.L514:
2382:..\src/interruptions.c ****             case NORMAL:
2383:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[2]);
 8372              		.loc 1 2383 0
 8373 0e9c 954B     		ldr	r3, .L585+12
 8374 0e9e B3F90430 		ldrsh	r3, [r3, #4]
 8375 0ea2 7B60     		str	r3, [r7, #4]
2384:..\src/interruptions.c ****                 // Remap the analog reading from -1024 to 1024.  
2385:..\src/interruptions.c ****                 i_aux = (int32) (((float) (i_aux - UD_mean_value) / UD_mean_value) * c_mem.JOY_spec
 8376              		.loc 1 2385 0
 8377 0ea4 944B     		ldr	r3, .L585+16
 8378 0ea6 1B68     		ldr	r3, [r3]
 8379 0ea8 7A68     		ldr	r2, [r7, #4]
 8380 0eaa D31A     		subs	r3, r2, r3
 8381 0eac 1846     		mov	r0, r3
 8382 0eae FFF7FEFF 		bl	__aeabi_i2f
 8383 0eb2 0446     		mov	r4, r0
 8384 0eb4 904B     		ldr	r3, .L585+16
 8385 0eb6 1B68     		ldr	r3, [r3]
 8386 0eb8 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 193


 8387 0eba FFF7FEFF 		bl	__aeabi_i2f
 8388 0ebe 0346     		mov	r3, r0
 8389 0ec0 1946     		mov	r1, r3
 8390 0ec2 2046     		mov	r0, r4
 8391 0ec4 FFF7FEFF 		bl	__aeabi_fdiv
 8392 0ec8 0346     		mov	r3, r0
 8393 0eca 1C46     		mov	r4, r3
 8394 0ecc 874B     		ldr	r3, .L585+4
 8395 0ece B3F8B632 		ldrh	r3, [r3, #694]
 8396 0ed2 1846     		mov	r0, r3
 8397 0ed4 FFF7FEFF 		bl	__aeabi_i2f
 8398 0ed8 0346     		mov	r3, r0
 8399 0eda 1946     		mov	r1, r3
 8400 0edc 2046     		mov	r0, r4
 8401 0ede FFF7FEFF 		bl	__aeabi_fmul
 8402 0ee2 0346     		mov	r3, r0
 8403 0ee4 1846     		mov	r0, r3
 8404 0ee6 FFF7FEFF 		bl	__aeabi_f2iz
 8405 0eea 0346     		mov	r3, r0
 8406 0eec 7B60     		str	r3, [r7, #4]
2386:..\src/interruptions.c ****                 
2387:..\src/interruptions.c ****                 if (interrupt_flag){
 8407              		.loc 1 2387 0
 8408 0eee 7E4B     		ldr	r3, .L585
 8409 0ef0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8410 0ef2 002B     		cmp	r3, #0
 8411 0ef4 04D0     		beq	.L520
2388:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8412              		.loc 1 2388 0
 8413 0ef6 7C4B     		ldr	r3, .L585
 8414 0ef8 0022     		movs	r2, #0
 8415 0efa 1A70     		strb	r2, [r3]
2389:..\src/interruptions.c ****                     interrupt_manager();
 8416              		.loc 1 2389 0
 8417 0efc FFF7FEFF 		bl	interrupt_manager
 8418              	.L520:
2390:..\src/interruptions.c ****                 }
2391:..\src/interruptions.c **** 
2392:..\src/interruptions.c ****                 //Saturation
2393:..\src/interruptions.c ****                 if (i_aux < -1024) 
 8419              		.loc 1 2393 0
 8420 0f00 7B68     		ldr	r3, [r7, #4]
 8421 0f02 13F5806F 		cmn	r3, #1024
 8422 0f06 01DA     		bge	.L521
2394:..\src/interruptions.c ****                     i_aux = -1024;
 8423              		.loc 1 2394 0
 8424 0f08 7C4B     		ldr	r3, .L585+20
 8425 0f0a 7B60     		str	r3, [r7, #4]
 8426              	.L521:
2395:..\src/interruptions.c ****                 if (i_aux > 1024)
 8427              		.loc 1 2395 0
 8428 0f0c 7B68     		ldr	r3, [r7, #4]
 8429 0f0e B3F5806F 		cmp	r3, #1024
 8430 0f12 02DD     		ble	.L522
2396:..\src/interruptions.c ****                     i_aux = 1024;
 8431              		.loc 1 2396 0
 8432 0f14 4FF48063 		mov	r3, #1024
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 194


 8433 0f18 7B60     		str	r3, [r7, #4]
 8434              	.L522:
2397:..\src/interruptions.c **** 
2398:..\src/interruptions.c ****                 g_adc_meas.joystick[1] = (int16) i_aux;
 8435              		.loc 1 2398 0
 8436 0f1a 7B68     		ldr	r3, [r7, #4]
 8437 0f1c 1BB2     		sxth	r3, r3
 8438 0f1e 1A46     		mov	r2, r3
 8439 0f20 774B     		ldr	r3, .L585+24
 8440 0f22 5A62     		str	r2, [r3, #36]
2399:..\src/interruptions.c **** 
2400:..\src/interruptions.c ****                 if (interrupt_flag){
 8441              		.loc 1 2400 0
 8442 0f24 704B     		ldr	r3, .L585
 8443 0f26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8444 0f28 002B     		cmp	r3, #0
 8445 0f2a 6BD0     		beq	.L567
2401:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8446              		.loc 1 2401 0
 8447 0f2c 6E4B     		ldr	r3, .L585
 8448 0f2e 0022     		movs	r2, #0
 8449 0f30 1A70     		strb	r2, [r3]
2402:..\src/interruptions.c ****                     interrupt_manager();
 8450              		.loc 1 2402 0
 8451 0f32 FFF7FEFF 		bl	interrupt_manager
2403:..\src/interruptions.c ****                 }
2404:..\src/interruptions.c **** 
2405:..\src/interruptions.c ****             break;
 8452              		.loc 1 2405 0
 8453 0f36 65E0     		b	.L567
 8454              	.L516:
2406:..\src/interruptions.c **** 
2407:..\src/interruptions.c ****             case RESET: // reset variables
2408:..\src/interruptions.c ****                 UD_counter = 0;
 8455              		.loc 1 2408 0
 8456 0f38 724B     		ldr	r3, .L585+28
 8457 0f3a 0022     		movs	r2, #0
 8458 0f3c 1A80     		strh	r2, [r3]	@ movhi
2409:..\src/interruptions.c ****                 UD_mean_value = 0;
 8459              		.loc 1 2409 0
 8460 0f3e 6E4B     		ldr	r3, .L585+16
 8461 0f40 0022     		movs	r2, #0
 8462 0f42 1A60     		str	r2, [r3]
2410:..\src/interruptions.c ****                 joy_UD_status = WAIT; // go to waiting status
 8463              		.loc 1 2410 0
 8464 0f44 6A4B     		ldr	r3, .L585+8
 8465 0f46 0422     		movs	r2, #4
 8466 0f48 1A70     		strb	r2, [r3]
2411:..\src/interruptions.c **** 
2412:..\src/interruptions.c ****             break;
 8467              		.loc 1 2412 0
 8468 0f4a 62E0     		b	.L513
 8469              	.L517:
2413:..\src/interruptions.c **** 
2414:..\src/interruptions.c ****             case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
2415:..\src/interruptions.c ****                 UD_counter++;
 8470              		.loc 1 2415 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 195


 8471 0f4c 6D4B     		ldr	r3, .L585+28
 8472 0f4e 1B88     		ldrh	r3, [r3]
 8473 0f50 0133     		adds	r3, r3, #1
 8474 0f52 9AB2     		uxth	r2, r3
 8475 0f54 6B4B     		ldr	r3, .L585+28
 8476 0f56 1A80     		strh	r2, [r3]	@ movhi
2416:..\src/interruptions.c ****                 if (UD_counter == JOYSTICK_SAMPLE_TO_DISCARD) {
 8477              		.loc 1 2416 0
 8478 0f58 6A4B     		ldr	r3, .L585+28
 8479 0f5a 1B88     		ldrh	r3, [r3]
 8480 0f5c 642B     		cmp	r3, #100
 8481 0f5e 53D1     		bne	.L568
2417:..\src/interruptions.c ****                     UD_counter = 0;                     // reset counter
 8482              		.loc 1 2417 0
 8483 0f60 684B     		ldr	r3, .L585+28
 8484 0f62 0022     		movs	r2, #0
 8485 0f64 1A80     		strh	r2, [r3]	@ movhi
2418:..\src/interruptions.c **** 
2419:..\src/interruptions.c ****                     if (interrupt_flag){
 8486              		.loc 1 2419 0
 8487 0f66 604B     		ldr	r3, .L585
 8488 0f68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8489 0f6a 002B     		cmp	r3, #0
 8490 0f6c 04D0     		beq	.L525
2420:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 8491              		.loc 1 2420 0
 8492 0f6e 5E4B     		ldr	r3, .L585
 8493 0f70 0022     		movs	r2, #0
 8494 0f72 1A70     		strb	r2, [r3]
2421:..\src/interruptions.c ****                         interrupt_manager();
 8495              		.loc 1 2421 0
 8496 0f74 FFF7FEFF 		bl	interrupt_manager
 8497              	.L525:
2422:..\src/interruptions.c ****                     }
2423:..\src/interruptions.c **** 
2424:..\src/interruptions.c ****                     joy_UD_status = SUM_AND_MEAN;           // sum and mean status
 8498              		.loc 1 2424 0
 8499 0f78 5D4B     		ldr	r3, .L585+8
 8500 0f7a 0322     		movs	r2, #3
 8501 0f7c 1A70     		strb	r2, [r3]
2425:..\src/interruptions.c ****                 }
2426:..\src/interruptions.c **** 
2427:..\src/interruptions.c ****             break;
 8502              		.loc 1 2427 0
 8503 0f7e 43E0     		b	.L568
 8504              	.L518:
2428:..\src/interruptions.c **** 
2429:..\src/interruptions.c ****             case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2430:..\src/interruptions.c ****                 // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2431:..\src/interruptions.c ****                 UD_counter++;
 8505              		.loc 1 2431 0
 8506 0f80 604B     		ldr	r3, .L585+28
 8507 0f82 1B88     		ldrh	r3, [r3]
 8508 0f84 0133     		adds	r3, r3, #1
 8509 0f86 9AB2     		uxth	r2, r3
 8510 0f88 5E4B     		ldr	r3, .L585+28
 8511 0f8a 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 196


2432:..\src/interruptions.c ****                 UD_mean_value += (int32)(ADC_buf[2]);        // No filter
 8512              		.loc 1 2432 0
 8513 0f8c 594B     		ldr	r3, .L585+12
 8514 0f8e B3F90430 		ldrsh	r3, [r3, #4]
 8515 0f92 1A46     		mov	r2, r3
 8516 0f94 584B     		ldr	r3, .L585+16
 8517 0f96 1B68     		ldr	r3, [r3]
 8518 0f98 1344     		add	r3, r3, r2
 8519 0f9a 574A     		ldr	r2, .L585+16
 8520 0f9c 1360     		str	r3, [r2]
2433:..\src/interruptions.c **** 
2434:..\src/interruptions.c ****                 if (interrupt_flag){
 8521              		.loc 1 2434 0
 8522 0f9e 524B     		ldr	r3, .L585
 8523 0fa0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8524 0fa2 002B     		cmp	r3, #0
 8525 0fa4 04D0     		beq	.L526
2435:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8526              		.loc 1 2435 0
 8527 0fa6 504B     		ldr	r3, .L585
 8528 0fa8 0022     		movs	r2, #0
 8529 0faa 1A70     		strb	r2, [r3]
2436:..\src/interruptions.c ****                     interrupt_manager();
 8530              		.loc 1 2436 0
 8531 0fac FFF7FEFF 		bl	interrupt_manager
 8532              	.L526:
2437:..\src/interruptions.c ****                 }
2438:..\src/interruptions.c **** 
2439:..\src/interruptions.c ****                 if (UD_counter == SAMPLES_FOR_JOYSTICK_MEAN) {
 8533              		.loc 1 2439 0
 8534 0fb0 544B     		ldr	r3, .L585+28
 8535 0fb2 1B88     		ldrh	r3, [r3]
 8536 0fb4 C82B     		cmp	r3, #200
 8537 0fb6 29D1     		bne	.L569
2440:..\src/interruptions.c ****                     UD_mean_value = UD_mean_value / SAMPLES_FOR_JOYSTICK_MEAN; // calc mean
 8538              		.loc 1 2440 0
 8539 0fb8 4F4B     		ldr	r3, .L585+16
 8540 0fba 1B68     		ldr	r3, [r3]
 8541 0fbc 524A     		ldr	r2, .L585+32
 8542 0fbe 82FB0312 		smull	r1, r2, r2, r3
 8543 0fc2 9211     		asrs	r2, r2, #6
 8544 0fc4 DB17     		asrs	r3, r3, #31
 8545 0fc6 D31A     		subs	r3, r2, r3
 8546 0fc8 4B4A     		ldr	r2, .L585+16
 8547 0fca 1360     		str	r3, [r2]
2441:..\src/interruptions.c **** 
2442:..\src/interruptions.c ****                     if (interrupt_flag){
 8548              		.loc 1 2442 0
 8549 0fcc 464B     		ldr	r3, .L585
 8550 0fce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8551 0fd0 002B     		cmp	r3, #0
 8552 0fd2 04D0     		beq	.L528
2443:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 8553              		.loc 1 2443 0
 8554 0fd4 444B     		ldr	r3, .L585
 8555 0fd6 0022     		movs	r2, #0
 8556 0fd8 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 197


2444:..\src/interruptions.c ****                         interrupt_manager();
 8557              		.loc 1 2444 0
 8558 0fda FFF7FEFF 		bl	interrupt_manager
 8559              	.L528:
2445:..\src/interruptions.c ****                     }
2446:..\src/interruptions.c **** 
2447:..\src/interruptions.c ****                     UD_counter = 0;          // reset counter
 8560              		.loc 1 2447 0
 8561 0fde 494B     		ldr	r3, .L585+28
 8562 0fe0 0022     		movs	r2, #0
 8563 0fe2 1A80     		strh	r2, [r3]	@ movhi
2448:..\src/interruptions.c ****                     joy_UD_status = NORMAL;           // goto normal execution
 8564              		.loc 1 2448 0
 8565 0fe4 424B     		ldr	r3, .L585+8
 8566 0fe6 0022     		movs	r2, #0
 8567 0fe8 1A70     		strb	r2, [r3]
2449:..\src/interruptions.c ****                 }
2450:..\src/interruptions.c ****             break;
 8568              		.loc 1 2450 0
 8569 0fea 0FE0     		b	.L569
 8570              	.L519:
2451:..\src/interruptions.c **** 
2452:..\src/interruptions.c ****             case WAIT: case WAIT_EoC: // wait for both EMG calibrations to be done
2453:..\src/interruptions.c ****                 if (emg_1_status == NORMAL && emg_2_status == NORMAL)
 8571              		.loc 1 2453 0
 8572 0fec 474B     		ldr	r3, .L585+36
 8573 0fee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8574 0ff0 002B     		cmp	r3, #0
 8575 0ff2 0DD1     		bne	.L570
 8576              		.loc 1 2453 0 is_stmt 0 discriminator 1
 8577 0ff4 464B     		ldr	r3, .L585+40
 8578 0ff6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8579 0ff8 002B     		cmp	r3, #0
 8580 0ffa 09D1     		bne	.L570
2454:..\src/interruptions.c ****                     joy_UD_status = DISCARD;           // goto discard sample
 8581              		.loc 1 2454 0 is_stmt 1
 8582 0ffc 3C4B     		ldr	r3, .L585+8
 8583 0ffe 0222     		movs	r2, #2
 8584 1000 1A70     		strb	r2, [r3]
2455:..\src/interruptions.c ****             break;
 8585              		.loc 1 2455 0
 8586 1002 05E0     		b	.L570
 8587              	.L567:
2405:..\src/interruptions.c **** 
 8588              		.loc 1 2405 0
 8589 1004 00BF     		nop
 8590 1006 04E0     		b	.L513
 8591              	.L568:
2427:..\src/interruptions.c **** 
 8592              		.loc 1 2427 0
 8593 1008 00BF     		nop
 8594 100a 02E0     		b	.L513
 8595              	.L569:
2450:..\src/interruptions.c **** 
 8596              		.loc 1 2450 0
 8597 100c 00BF     		nop
 8598 100e 00E0     		b	.L513
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 198


 8599              	.L570:
 8600              		.loc 1 2455 0
 8601 1010 00BF     		nop
 8602              	.L513:
2456:..\src/interruptions.c ****         }
2457:..\src/interruptions.c **** 
2458:..\src/interruptions.c ****         if (interrupt_flag){
 8603              		.loc 1 2458 0
 8604 1012 354B     		ldr	r3, .L585
 8605 1014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8606 1016 002B     		cmp	r3, #0
 8607 1018 04D0     		beq	.L530
2459:..\src/interruptions.c ****             interrupt_flag = FALSE;
 8608              		.loc 1 2459 0
 8609 101a 334B     		ldr	r3, .L585
 8610 101c 0022     		movs	r2, #0
 8611 101e 1A70     		strb	r2, [r3]
2460:..\src/interruptions.c ****             interrupt_manager();
 8612              		.loc 1 2460 0
 8613 1020 FFF7FEFF 		bl	interrupt_manager
 8614              	.L530:
2461:..\src/interruptions.c ****         }
2462:..\src/interruptions.c ****             
2463:..\src/interruptions.c ****         switch (joy_LR_status) {
 8615              		.loc 1 2463 0
 8616 1024 3B4B     		ldr	r3, .L585+44
 8617 1026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8618 1028 052B     		cmp	r3, #5
 8619 102a 00F2DD80 		bhi	.L531
 8620 102e 01A2     		adr	r2, .L533
 8621 1030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8622              		.p2align 2
 8623              	.L533:
 8624 1034 4D100000 		.word	.L532+1
 8625 1038 1D110000 		.word	.L534+1
 8626 103c 31110000 		.word	.L535+1
 8627 1040 65110000 		.word	.L536+1
 8628 1044 BF110000 		.word	.L537+1
 8629 1048 BF110000 		.word	.L537+1
 8630              		.p2align 1
 8631              	.L532:
2464:..\src/interruptions.c ****             case NORMAL:
2465:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[3]);
 8632              		.loc 1 2465 0
 8633 104c 294B     		ldr	r3, .L585+12
 8634 104e B3F90630 		ldrsh	r3, [r3, #6]
 8635 1052 7B60     		str	r3, [r7, #4]
2466:..\src/interruptions.c **** 
2467:..\src/interruptions.c ****                 i_aux = (int32) (((float) (i_aux - LR_mean_value) / LR_mean_value) * c_mem.JOY_spec
 8636              		.loc 1 2467 0
 8637 1054 304B     		ldr	r3, .L585+48
 8638 1056 1B68     		ldr	r3, [r3]
 8639 1058 7A68     		ldr	r2, [r7, #4]
 8640 105a D31A     		subs	r3, r2, r3
 8641 105c 1846     		mov	r0, r3
 8642 105e FFF7FEFF 		bl	__aeabi_i2f
 8643 1062 0446     		mov	r4, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 199


 8644 1064 2C4B     		ldr	r3, .L585+48
 8645 1066 1B68     		ldr	r3, [r3]
 8646 1068 1846     		mov	r0, r3
 8647 106a FFF7FEFF 		bl	__aeabi_i2f
 8648 106e 0346     		mov	r3, r0
 8649 1070 1946     		mov	r1, r3
 8650 1072 2046     		mov	r0, r4
 8651 1074 FFF7FEFF 		bl	__aeabi_fdiv
 8652 1078 0346     		mov	r3, r0
 8653 107a 1C46     		mov	r4, r3
 8654 107c 1B4B     		ldr	r3, .L585+4
 8655 107e B3F8B432 		ldrh	r3, [r3, #692]
 8656 1082 1846     		mov	r0, r3
 8657 1084 FFF7FEFF 		bl	__aeabi_i2f
 8658 1088 0346     		mov	r3, r0
 8659 108a 1946     		mov	r1, r3
 8660 108c 2046     		mov	r0, r4
 8661 108e FFF7FEFF 		bl	__aeabi_fmul
 8662 1092 0346     		mov	r3, r0
 8663 1094 1846     		mov	r0, r3
 8664 1096 FFF7FEFF 		bl	__aeabi_f2iz
 8665 109a 0346     		mov	r3, r0
 8666 109c 7B60     		str	r3, [r7, #4]
2468:..\src/interruptions.c ****                 
2469:..\src/interruptions.c ****                 if (interrupt_flag){
 8667              		.loc 1 2469 0
 8668 109e 124B     		ldr	r3, .L585
 8669 10a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8670 10a2 002B     		cmp	r3, #0
 8671 10a4 04D0     		beq	.L538
2470:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8672              		.loc 1 2470 0
 8673 10a6 104B     		ldr	r3, .L585
 8674 10a8 0022     		movs	r2, #0
 8675 10aa 1A70     		strb	r2, [r3]
2471:..\src/interruptions.c ****                     interrupt_manager();
 8676              		.loc 1 2471 0
 8677 10ac FFF7FEFF 		bl	interrupt_manager
 8678              	.L538:
2472:..\src/interruptions.c ****                 }
2473:..\src/interruptions.c **** 
2474:..\src/interruptions.c ****                 //Saturation
2475:..\src/interruptions.c ****                 if (i_aux < -1024)
 8679              		.loc 1 2475 0
 8680 10b0 7B68     		ldr	r3, [r7, #4]
 8681 10b2 13F5806F 		cmn	r3, #1024
 8682 10b6 01DA     		bge	.L539
2476:..\src/interruptions.c ****                     i_aux = -1024;
 8683              		.loc 1 2476 0
 8684 10b8 104B     		ldr	r3, .L585+20
 8685 10ba 7B60     		str	r3, [r7, #4]
 8686              	.L539:
2477:..\src/interruptions.c ****                 if (i_aux > 1024)
 8687              		.loc 1 2477 0
 8688 10bc 7B68     		ldr	r3, [r7, #4]
 8689 10be B3F5806F 		cmp	r3, #1024
 8690 10c2 02DD     		ble	.L540
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 200


2478:..\src/interruptions.c ****                     i_aux = 1024;
 8691              		.loc 1 2478 0
 8692 10c4 4FF48063 		mov	r3, #1024
 8693 10c8 7B60     		str	r3, [r7, #4]
 8694              	.L540:
2479:..\src/interruptions.c **** 
2480:..\src/interruptions.c ****                 if (interrupt_flag){
 8695              		.loc 1 2480 0
 8696 10ca 074B     		ldr	r3, .L585
 8697 10cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8698 10ce 002B     		cmp	r3, #0
 8699 10d0 04D0     		beq	.L541
2481:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 8700              		.loc 1 2481 0
 8701 10d2 054B     		ldr	r3, .L585
 8702 10d4 0022     		movs	r2, #0
 8703 10d6 1A70     		strb	r2, [r3]
2482:..\src/interruptions.c ****                     interrupt_manager();
 8704              		.loc 1 2482 0
 8705 10d8 FFF7FEFF 		bl	interrupt_manager
 8706              	.L541:
2483:..\src/interruptions.c ****                 }
2484:..\src/interruptions.c **** 
2485:..\src/interruptions.c ****                 g_adc_meas.joystick[0] = (int16) i_aux;
 8707              		.loc 1 2485 0
 8708 10dc 7B68     		ldr	r3, [r7, #4]
 8709 10de 1BB2     		sxth	r3, r3
 8710 10e0 1A46     		mov	r2, r3
 8711 10e2 074B     		ldr	r3, .L585+24
 8712 10e4 1A62     		str	r2, [r3, #32]
2486:..\src/interruptions.c **** 
2487:..\src/interruptions.c ****             break;
 8713              		.loc 1 2487 0
 8714 10e6 7FE0     		b	.L531
 8715              	.L586:
 8716              		.align	2
 8717              	.L585:
 8718 10e8 00000000 		.word	interrupt_flag
 8719 10ec 00000000 		.word	c_mem
 8720 10f0 00000000 		.word	joy_UD_status
 8721 10f4 00000000 		.word	ADC_buf
 8722 10f8 7C010000 		.word	UD_mean_value.10665
 8723 10fc 00FCFFFF 		.word	-1024
 8724 1100 00000000 		.word	g_adc_meas
 8725 1104 80010000 		.word	UD_counter.10663
 8726 1108 1F85EB51 		.word	1374389535
 8727 110c 00000000 		.word	emg_1_status
 8728 1110 00000000 		.word	emg_2_status
 8729 1114 00000000 		.word	joy_LR_status
 8730 1118 84010000 		.word	LR_mean_value.10666
 8731              	.L534:
2488:..\src/interruptions.c **** 
2489:..\src/interruptions.c ****             case RESET: // reset variables
2490:..\src/interruptions.c ****                 LR_counter = 0;
 8732              		.loc 1 2490 0
 8733 111c 644B     		ldr	r3, .L587
 8734 111e 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 201


 8735 1120 1A80     		strh	r2, [r3]	@ movhi
2491:..\src/interruptions.c ****                 LR_mean_value = 0;
 8736              		.loc 1 2491 0
 8737 1122 644B     		ldr	r3, .L587+4
 8738 1124 0022     		movs	r2, #0
 8739 1126 1A60     		str	r2, [r3]
2492:..\src/interruptions.c ****                 joy_LR_status = WAIT; // goes waiting for all conversions to be done
 8740              		.loc 1 2492 0
 8741 1128 634B     		ldr	r3, .L587+8
 8742 112a 0422     		movs	r2, #4
 8743 112c 1A70     		strb	r2, [r3]
2493:..\src/interruptions.c ****             break;
 8744              		.loc 1 2493 0
 8745 112e 5BE0     		b	.L531
 8746              	.L535:
2494:..\src/interruptions.c **** 
2495:..\src/interruptions.c ****             case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples8
2496:..\src/interruptions.c ****                 LR_counter++;
 8747              		.loc 1 2496 0
 8748 1130 5F4B     		ldr	r3, .L587
 8749 1132 1B88     		ldrh	r3, [r3]
 8750 1134 0133     		adds	r3, r3, #1
 8751 1136 9AB2     		uxth	r2, r3
 8752 1138 5D4B     		ldr	r3, .L587
 8753 113a 1A80     		strh	r2, [r3]	@ movhi
2497:..\src/interruptions.c ****                 if (LR_counter == JOYSTICK_SAMPLE_TO_DISCARD) {
 8754              		.loc 1 2497 0
 8755 113c 5C4B     		ldr	r3, .L587
 8756 113e 1B88     		ldrh	r3, [r3]
 8757 1140 642B     		cmp	r3, #100
 8758 1142 4CD1     		bne	.L571
2498:..\src/interruptions.c ****                     LR_counter = 0;                     // reset counter
 8759              		.loc 1 2498 0
 8760 1144 5A4B     		ldr	r3, .L587
 8761 1146 0022     		movs	r2, #0
 8762 1148 1A80     		strh	r2, [r3]	@ movhi
2499:..\src/interruptions.c **** 
2500:..\src/interruptions.c ****                     if (interrupt_flag){
 8763              		.loc 1 2500 0
 8764 114a 5C4B     		ldr	r3, .L587+12
 8765 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8766 114e 002B     		cmp	r3, #0
 8767 1150 04D0     		beq	.L543
2501:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 8768              		.loc 1 2501 0
 8769 1152 5A4B     		ldr	r3, .L587+12
 8770 1154 0022     		movs	r2, #0
 8771 1156 1A70     		strb	r2, [r3]
2502:..\src/interruptions.c ****                         interrupt_manager();
 8772              		.loc 1 2502 0
 8773 1158 FFF7FEFF 		bl	interrupt_manager
 8774              	.L543:
2503:..\src/interruptions.c ****                     }
2504:..\src/interruptions.c **** 
2505:..\src/interruptions.c ****                     joy_LR_status = SUM_AND_MEAN;           // sum and mean status
 8775              		.loc 1 2505 0
 8776 115c 564B     		ldr	r3, .L587+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 202


 8777 115e 0322     		movs	r2, #3
 8778 1160 1A70     		strb	r2, [r3]
2506:..\src/interruptions.c ****                 }
2507:..\src/interruptions.c ****             break;
 8779              		.loc 1 2507 0
 8780 1162 3CE0     		b	.L571
 8781              	.L536:
2508:..\src/interruptions.c **** 
2509:..\src/interruptions.c ****             case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
2510:..\src/interruptions.c ****                 // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
2511:..\src/interruptions.c ****                 LR_counter++;
 8782              		.loc 1 2511 0
 8783 1164 524B     		ldr	r3, .L587
 8784 1166 1B88     		ldrh	r3, [r3]
 8785 1168 0133     		adds	r3, r3, #1
 8786 116a 9AB2     		uxth	r2, r3
 8787 116c 504B     		ldr	r3, .L587
 8788 116e 1A80     		strh	r2, [r3]	@ movhi
2512:..\src/interruptions.c ****                 LR_mean_value += (int32)(ADC_buf[3]);
 8789              		.loc 1 2512 0
 8790 1170 534B     		ldr	r3, .L587+16
 8791 1172 B3F90630 		ldrsh	r3, [r3, #6]
 8792 1176 1A46     		mov	r2, r3
 8793 1178 4E4B     		ldr	r3, .L587+4
 8794 117a 1B68     		ldr	r3, [r3]
 8795 117c 1344     		add	r3, r3, r2
 8796 117e 4D4A     		ldr	r2, .L587+4
 8797 1180 1360     		str	r3, [r2]
2513:..\src/interruptions.c ****                 if (LR_counter == SAMPLES_FOR_JOYSTICK_MEAN) {
 8798              		.loc 1 2513 0
 8799 1182 4B4B     		ldr	r3, .L587
 8800 1184 1B88     		ldrh	r3, [r3]
 8801 1186 C82B     		cmp	r3, #200
 8802 1188 2BD1     		bne	.L572
2514:..\src/interruptions.c ****                     LR_mean_value = LR_mean_value / SAMPLES_FOR_JOYSTICK_MEAN; // calc mean
 8803              		.loc 1 2514 0
 8804 118a 4A4B     		ldr	r3, .L587+4
 8805 118c 1B68     		ldr	r3, [r3]
 8806 118e 4D4A     		ldr	r2, .L587+20
 8807 1190 82FB0312 		smull	r1, r2, r2, r3
 8808 1194 9211     		asrs	r2, r2, #6
 8809 1196 DB17     		asrs	r3, r3, #31
 8810 1198 D31A     		subs	r3, r2, r3
 8811 119a 464A     		ldr	r2, .L587+4
 8812 119c 1360     		str	r3, [r2]
2515:..\src/interruptions.c ****                     
2516:..\src/interruptions.c ****                     if (interrupt_flag){
 8813              		.loc 1 2516 0
 8814 119e 474B     		ldr	r3, .L587+12
 8815 11a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8816 11a2 002B     		cmp	r3, #0
 8817 11a4 04D0     		beq	.L545
2517:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 8818              		.loc 1 2517 0
 8819 11a6 454B     		ldr	r3, .L587+12
 8820 11a8 0022     		movs	r2, #0
 8821 11aa 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 203


2518:..\src/interruptions.c ****                         interrupt_manager();
 8822              		.loc 1 2518 0
 8823 11ac FFF7FEFF 		bl	interrupt_manager
 8824              	.L545:
2519:..\src/interruptions.c ****                     }
2520:..\src/interruptions.c **** 
2521:..\src/interruptions.c ****                     LR_counter = 0;               // reset counter
 8825              		.loc 1 2521 0
 8826 11b0 3F4B     		ldr	r3, .L587
 8827 11b2 0022     		movs	r2, #0
 8828 11b4 1A80     		strh	r2, [r3]	@ movhi
2522:..\src/interruptions.c ****                     joy_LR_status = NORMAL;           // goto normal execution
 8829              		.loc 1 2522 0
 8830 11b6 404B     		ldr	r3, .L587+8
 8831 11b8 0022     		movs	r2, #0
 8832 11ba 1A70     		strb	r2, [r3]
2523:..\src/interruptions.c ****                 }
2524:..\src/interruptions.c ****             break;
 8833              		.loc 1 2524 0
 8834 11bc 11E0     		b	.L572
 8835              	.L537:
2525:..\src/interruptions.c **** 
2526:..\src/interruptions.c ****             case WAIT: case WAIT_EoC:
2527:..\src/interruptions.c ****                 if(emg_1_status == NORMAL && emg_2_status == NORMAL && joy_UD_status == NORMAL)
 8836              		.loc 1 2527 0
 8837 11be 424B     		ldr	r3, .L587+24
 8838 11c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8839 11c2 002B     		cmp	r3, #0
 8840 11c4 0FD1     		bne	.L573
 8841              		.loc 1 2527 0 is_stmt 0 discriminator 1
 8842 11c6 414B     		ldr	r3, .L587+28
 8843 11c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8844 11ca 002B     		cmp	r3, #0
 8845 11cc 0BD1     		bne	.L573
 8846              		.loc 1 2527 0 discriminator 2
 8847 11ce 404B     		ldr	r3, .L587+32
 8848 11d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8849 11d2 002B     		cmp	r3, #0
 8850 11d4 07D1     		bne	.L573
2528:..\src/interruptions.c ****                     joy_LR_status = DISCARD;
 8851              		.loc 1 2528 0 is_stmt 1
 8852 11d6 384B     		ldr	r3, .L587+8
 8853 11d8 0222     		movs	r2, #2
 8854 11da 1A70     		strb	r2, [r3]
2529:..\src/interruptions.c ****             break;
 8855              		.loc 1 2529 0
 8856 11dc 03E0     		b	.L573
 8857              	.L571:
2507:..\src/interruptions.c **** 
 8858              		.loc 1 2507 0
 8859 11de 00BF     		nop
 8860 11e0 02E0     		b	.L531
 8861              	.L572:
2524:..\src/interruptions.c **** 
 8862              		.loc 1 2524 0
 8863 11e2 00BF     		nop
 8864 11e4 00E0     		b	.L531
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 204


 8865              	.L573:
 8866              		.loc 1 2529 0
 8867 11e6 00BF     		nop
 8868              	.L531:
2530:..\src/interruptions.c ****         }
2531:..\src/interruptions.c ****        
2532:..\src/interruptions.c ****         if (interrupt_flag){
 8869              		.loc 1 2532 0
 8870 11e8 344B     		ldr	r3, .L587+12
 8871 11ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8872 11ec 002B     		cmp	r3, #0
 8873 11ee 04D0     		beq	.L512
2533:..\src/interruptions.c ****             interrupt_flag = FALSE;
 8874              		.loc 1 2533 0
 8875 11f0 324B     		ldr	r3, .L587+12
 8876 11f2 0022     		movs	r2, #0
 8877 11f4 1A70     		strb	r2, [r3]
2534:..\src/interruptions.c ****             interrupt_manager();
 8878              		.loc 1 2534 0
 8879 11f6 FFF7FEFF 		bl	interrupt_manager
 8880              	.L512:
2535:..\src/interruptions.c ****         }
2536:..\src/interruptions.c ****     }
2537:..\src/interruptions.c ****     
2538:..\src/interruptions.c ****     // Read also EMG additional sensors port
2539:..\src/interruptions.c ****     if (NUM_OF_ANALOG_INPUTS > 6) {
 8881              		.loc 1 2539 0
 8882 11fa 364B     		ldr	r3, .L587+36
 8883 11fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8884 11fe 062B     		cmp	r3, #6
 8885 1200 52D9     		bls	.L574
2540:..\src/interruptions.c ****         
2541:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_ADDITIONAL_EMGS; idx++){
 8886              		.loc 1 2541 0
 8887 1202 354B     		ldr	r3, .L587+40
 8888 1204 0022     		movs	r2, #0
 8889 1206 1A70     		strb	r2, [r3]
 8890 1208 4AE0     		b	.L548
 8891              	.L555:
2542:..\src/interruptions.c ****             
2543:..\src/interruptions.c ****             i_aux = (int32)(ADC_buf[6 + idx]);
 8892              		.loc 1 2543 0
 8893 120a 334B     		ldr	r3, .L587+40
 8894 120c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8895 120e 0633     		adds	r3, r3, #6
 8896 1210 2B4A     		ldr	r2, .L587+16
 8897 1212 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 8898 1216 7B60     		str	r3, [r7, #4]
2544:..\src/interruptions.c ****             if (i_aux < 0) 
 8899              		.loc 1 2544 0
 8900 1218 7B68     		ldr	r3, [r7, #4]
 8901 121a 002B     		cmp	r3, #0
 8902 121c 01DA     		bge	.L549
2545:..\src/interruptions.c ****                 i_aux = 0;
 8903              		.loc 1 2545 0
 8904 121e 0023     		movs	r3, #0
 8905 1220 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 205


 8906              	.L549:
2546:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[2+idx]);
 8907              		.loc 1 2546 0
 8908 1222 2D4B     		ldr	r3, .L587+40
 8909 1224 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8910 1226 0233     		adds	r3, r3, #2
 8911 1228 DB00     		lsls	r3, r3, #3
 8912 122a 2C4A     		ldr	r2, .L587+44
 8913 122c 1344     		add	r3, r3, r2
 8914 122e 1946     		mov	r1, r3
 8915 1230 7868     		ldr	r0, [r7, #4]
 8916 1232 FFF7FEFF 		bl	filter
 8917 1236 7860     		str	r0, [r7, #4]
2547:..\src/interruptions.c ****             i_aux = (i_aux << 10) / 1024;
 8918              		.loc 1 2547 0
 8919 1238 7B68     		ldr	r3, [r7, #4]
 8920 123a 9B02     		lsls	r3, r3, #10
 8921 123c 002B     		cmp	r3, #0
 8922 123e 01DA     		bge	.L550
 8923 1240 03F2FF33 		addw	r3, r3, #1023
 8924              	.L550:
 8925 1244 9B12     		asrs	r3, r3, #10
 8926 1246 7B60     		str	r3, [r7, #4]
2548:..\src/interruptions.c **** 
2549:..\src/interruptions.c ****             if (interrupt_flag){
 8927              		.loc 1 2549 0
 8928 1248 1C4B     		ldr	r3, .L587+12
 8929 124a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8930 124c 002B     		cmp	r3, #0
 8931 124e 04D0     		beq	.L551
2550:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 8932              		.loc 1 2550 0
 8933 1250 1A4B     		ldr	r3, .L587+12
 8934 1252 0022     		movs	r2, #0
 8935 1254 1A70     		strb	r2, [r3]
2551:..\src/interruptions.c ****                 interrupt_manager();
 8936              		.loc 1 2551 0
 8937 1256 FFF7FEFF 		bl	interrupt_manager
 8938              	.L551:
2552:..\src/interruptions.c ****             }
2553:..\src/interruptions.c ****             //Saturation
2554:..\src/interruptions.c ****             if (i_aux < 0)
 8939              		.loc 1 2554 0
 8940 125a 7B68     		ldr	r3, [r7, #4]
 8941 125c 002B     		cmp	r3, #0
 8942 125e 02DA     		bge	.L552
2555:..\src/interruptions.c ****                 i_aux = 0;
 8943              		.loc 1 2555 0
 8944 1260 0023     		movs	r3, #0
 8945 1262 7B60     		str	r3, [r7, #4]
 8946 1264 06E0     		b	.L553
 8947              	.L552:
2556:..\src/interruptions.c ****             else 
2557:..\src/interruptions.c ****                 if (i_aux > 1024) 
 8948              		.loc 1 2557 0
 8949 1266 7B68     		ldr	r3, [r7, #4]
 8950 1268 B3F5806F 		cmp	r3, #1024
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 206


 8951 126c 02DD     		ble	.L553
2558:..\src/interruptions.c ****                     i_aux = 1024;
 8952              		.loc 1 2558 0
 8953 126e 4FF48063 		mov	r3, #1024
 8954 1272 7B60     		str	r3, [r7, #4]
 8955              	.L553:
2559:..\src/interruptions.c ****             
2560:..\src/interruptions.c ****             g_adc_meas.add_emg[idx] = i_aux;
 8956              		.loc 1 2560 0
 8957 1274 184B     		ldr	r3, .L587+40
 8958 1276 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8959 1278 1949     		ldr	r1, .L587+48
 8960 127a 0233     		adds	r3, r3, #2
 8961 127c 7A68     		ldr	r2, [r7, #4]
 8962 127e 41F82320 		str	r2, [r1, r3, lsl #2]
2561:..\src/interruptions.c **** 
2562:..\src/interruptions.c ****             if (interrupt_flag){
 8963              		.loc 1 2562 0
 8964 1282 0E4B     		ldr	r3, .L587+12
 8965 1284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8966 1286 002B     		cmp	r3, #0
 8967 1288 04D0     		beq	.L554
2563:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 8968              		.loc 1 2563 0
 8969 128a 0C4B     		ldr	r3, .L587+12
 8970 128c 0022     		movs	r2, #0
 8971 128e 1A70     		strb	r2, [r3]
2564:..\src/interruptions.c ****                 interrupt_manager();
 8972              		.loc 1 2564 0
 8973 1290 FFF7FEFF 		bl	interrupt_manager
 8974              	.L554:
2541:..\src/interruptions.c ****             
 8975              		.loc 1 2541 0 discriminator 2
 8976 1294 104B     		ldr	r3, .L587+40
 8977 1296 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8978 1298 0133     		adds	r3, r3, #1
 8979 129a DAB2     		uxtb	r2, r3
 8980 129c 0E4B     		ldr	r3, .L587+40
 8981 129e 1A70     		strb	r2, [r3]
 8982              	.L548:
2541:..\src/interruptions.c ****             
 8983              		.loc 1 2541 0 is_stmt 0 discriminator 1
 8984 12a0 0D4B     		ldr	r3, .L587+40
 8985 12a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8986 12a4 052B     		cmp	r3, #5
 8987 12a6 B0D9     		bls	.L555
 8988              	.L574:
2565:..\src/interruptions.c ****             }
2566:..\src/interruptions.c ****         }
2567:..\src/interruptions.c ****     }
2568:..\src/interruptions.c ****     
2569:..\src/interruptions.c **** }
 8989              		.loc 1 2569 0 is_stmt 1
 8990 12a8 00BF     		nop
 8991 12aa 0C37     		adds	r7, r7, #12
 8992              		.cfi_def_cfa_offset 20
 8993 12ac BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 207


 8994              		.cfi_def_cfa_register 13
 8995              		@ sp needed
 8996 12ae F0BD     		pop	{r4, r5, r6, r7, pc}
 8997              	.L588:
 8998              		.align	2
 8999              	.L587:
 9000 12b0 88010000 		.word	LR_counter.10664
 9001 12b4 84010000 		.word	LR_mean_value.10666
 9002 12b8 00000000 		.word	joy_LR_status
 9003 12bc 00000000 		.word	interrupt_flag
 9004 12c0 00000000 		.word	ADC_buf
 9005 12c4 1F85EB51 		.word	1374389535
 9006 12c8 00000000 		.word	emg_1_status
 9007 12cc 00000000 		.word	emg_2_status
 9008 12d0 00000000 		.word	joy_UD_status
 9009 12d4 00000000 		.word	NUM_OF_ANALOG_INPUTS
 9010 12d8 72010000 		.word	idx.10671
 9011 12dc 00000000 		.word	filt_emg
 9012 12e0 00000000 		.word	g_adc_meas
 9013              		.cfi_endproc
 9014              	.LFE74:
 9015              		.size	analog_read_end, .-analog_read_end
 9016              		.section	.text.overcurrent_control,"ax",%progbits
 9017              		.align	2
 9018              		.global	overcurrent_control
 9019              		.thumb
 9020              		.thumb_func
 9021              		.type	overcurrent_control, %function
 9022              	overcurrent_control:
 9023              	.LFB75:
2570:..\src/interruptions.c **** 
2571:..\src/interruptions.c **** //==============================================================================
2572:..\src/interruptions.c **** //                                                           OVERCURRENT CONTROL
2573:..\src/interruptions.c **** //==============================================================================
2574:..\src/interruptions.c **** 
2575:..\src/interruptions.c **** void overcurrent_control() {
 9024              		.loc 1 2575 0
 9025              		.cfi_startproc
 9026              		@ args = 0, pretend = 0, frame = 8
 9027              		@ frame_needed = 1, uses_anonymous_args = 0
 9028              		@ link register save eliminated.
 9029 0000 80B4     		push	{r7}
 9030              		.cfi_def_cfa_offset 4
 9031              		.cfi_offset 7, -4
 9032 0002 83B0     		sub	sp, sp, #12
 9033              		.cfi_def_cfa_offset 16
 9034 0004 00AF     		add	r7, sp, #0
 9035              		.cfi_def_cfa_register 7
 9036              	.LBB11:
2576:..\src/interruptions.c ****     
2577:..\src/interruptions.c ****     for (uint8 i = 0; i <NUM_OF_MOTORS; i++) {
 9037              		.loc 1 2577 0
 9038 0006 0023     		movs	r3, #0
 9039 0008 FB71     		strb	r3, [r7, #7]
 9040 000a 6CE0     		b	.L590
 9041              	.L595:
2578:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 208


 9042              		.loc 1 2578 0
 9043 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 9044 000e 3A49     		ldr	r1, .L597
 9045 0010 1346     		mov	r3, r2
 9046 0012 DB00     		lsls	r3, r3, #3
 9047 0014 9B1A     		subs	r3, r3, r2
 9048 0016 1B01     		lsls	r3, r3, #4
 9049 0018 0B44     		add	r3, r3, r1
 9050 001a 03F58673 		add	r3, r3, #268
 9051 001e B3F90030 		ldrsh	r3, [r3]
 9052 0022 002B     		cmp	r3, #0
 9053 0024 5CD0     		beq	.L591
 9054              	.LBB12:
2579:..\src/interruptions.c ****             int32 curr = g_meas[g_mem.motor[i].encoder_line].curr;
 9055              		.loc 1 2579 0
 9056 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 9057 0028 3449     		ldr	r1, .L597+4
 9058 002a 1346     		mov	r3, r2
 9059 002c DB00     		lsls	r3, r3, #3
 9060 002e 9B1A     		subs	r3, r3, r2
 9061 0030 1B01     		lsls	r3, r3, #4
 9062 0032 0B44     		add	r3, r3, r1
 9063 0034 03F58873 		add	r3, r3, #272
 9064 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9065 003a 1946     		mov	r1, r3
 9066 003c 304A     		ldr	r2, .L597+8
 9067 003e 3423     		movs	r3, #52
 9068 0040 03FB01F3 		mul	r3, r3, r1
 9069 0044 1344     		add	r3, r3, r2
 9070 0046 0C33     		adds	r3, r3, #12
 9071 0048 1B68     		ldr	r3, [r3]
 9072 004a 3B60     		str	r3, [r7]
2580:..\src/interruptions.c ****             // check if the current is over the limit
2581:..\src/interruptions.c ****           //  if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
2582:..\src/interruptions.c ****                 if (curr < 0){
 9073              		.loc 1 2582 0
 9074 004c 3B68     		ldr	r3, [r7]
 9075 004e 002B     		cmp	r3, #0
 9076 0050 02DA     		bge	.L592
2583:..\src/interruptions.c ****                     curr = -curr;       // Invert sign to have a positive current reading in this f
 9077              		.loc 1 2583 0
 9078 0052 3B68     		ldr	r3, [r7]
 9079 0054 5B42     		negs	r3, r3
 9080 0056 3B60     		str	r3, [r7]
 9081              	.L592:
2584:..\src/interruptions.c ****                 }
2585:..\src/interruptions.c ****          //   }
2586:..\src/interruptions.c ****             if (curr > c_mem.motor[i].current_limit) {
 9082              		.loc 1 2586 0
 9083 0058 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 9084 005a 2749     		ldr	r1, .L597
 9085 005c 1346     		mov	r3, r2
 9086 005e DB00     		lsls	r3, r3, #3
 9087 0060 9B1A     		subs	r3, r3, r2
 9088 0062 1B01     		lsls	r3, r3, #4
 9089 0064 0B44     		add	r3, r3, r1
 9090 0066 03F58673 		add	r3, r3, #268
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 209


 9091 006a B3F90030 		ldrsh	r3, [r3]
 9092 006e 1A46     		mov	r2, r3
 9093 0070 3B68     		ldr	r3, [r7]
 9094 0072 9A42     		cmp	r2, r3
 9095 0074 09DA     		bge	.L593
2587:..\src/interruptions.c ****                 //decrease pwm_limit
2588:..\src/interruptions.c ****                 dev_pwm_limit[i]--;
 9096              		.loc 1 2588 0
 9097 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9098 0078 224A     		ldr	r2, .L597+12
 9099 007a 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 9100 007e 013A     		subs	r2, r2, #1
 9101 0080 91B2     		uxth	r1, r2
 9102 0082 204A     		ldr	r2, .L597+12
 9103 0084 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 9104 0088 18E0     		b	.L596
 9105              	.L593:
2589:..\src/interruptions.c ****             // check if the current is in the safe zone
2590:..\src/interruptions.c ****             } else if (curr < (c_mem.motor[i].current_limit - CURRENT_HYSTERESIS)) {
 9106              		.loc 1 2590 0
 9107 008a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 9108 008c 1A49     		ldr	r1, .L597
 9109 008e 1346     		mov	r3, r2
 9110 0090 DB00     		lsls	r3, r3, #3
 9111 0092 9B1A     		subs	r3, r3, r2
 9112 0094 1B01     		lsls	r3, r3, #4
 9113 0096 0B44     		add	r3, r3, r1
 9114 0098 03F58673 		add	r3, r3, #268
 9115 009c B3F90030 		ldrsh	r3, [r3]
 9116 00a0 A3F10A02 		sub	r2, r3, #10
 9117 00a4 3B68     		ldr	r3, [r7]
 9118 00a6 9A42     		cmp	r2, r3
 9119 00a8 08DD     		ble	.L596
2591:..\src/interruptions.c ****                 //increase pwm_limit
2592:..\src/interruptions.c ****                 dev_pwm_limit[i]++;
 9120              		.loc 1 2592 0
 9121 00aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9122 00ac 154A     		ldr	r2, .L597+12
 9123 00ae 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 9124 00b2 0132     		adds	r2, r2, #1
 9125 00b4 91B2     		uxth	r1, r2
 9126 00b6 134A     		ldr	r2, .L597+12
 9127 00b8 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 9128              	.L596:
2593:..\src/interruptions.c ****             }
2594:..\src/interruptions.c **** 
2595:..\src/interruptions.c ****             // Bound pwm_limit
2596:..\src/interruptions.c ****             if (dev_pwm_limit[i] < 0) 
2597:..\src/interruptions.c ****                 dev_pwm_limit[i] = 0;
2598:..\src/interruptions.c ****             else 
2599:..\src/interruptions.c ****                 if (dev_pwm_limit[i] > dev_pwm_sat[i]) 
 9129              		.loc 1 2599 0
 9130 00bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9131 00be 114A     		ldr	r2, .L597+12
 9132 00c0 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 9133 00c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9134 00c6 1049     		ldr	r1, .L597+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 210


 9135 00c8 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 9136 00cc 9A42     		cmp	r2, r3
 9137 00ce 07D9     		bls	.L591
2600:..\src/interruptions.c ****                     dev_pwm_limit[i] = dev_pwm_sat[i];
 9138              		.loc 1 2600 0
 9139 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9140 00d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 9141 00d4 0C49     		ldr	r1, .L597+16
 9142 00d6 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 9143 00da 0A4A     		ldr	r2, .L597+12
 9144 00dc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 9145              	.L591:
 9146              	.LBE12:
2577:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 9147              		.loc 1 2577 0 discriminator 2
 9148 00e0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9149 00e2 0133     		adds	r3, r3, #1
 9150 00e4 FB71     		strb	r3, [r7, #7]
 9151              	.L590:
2577:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 9152              		.loc 1 2577 0 is_stmt 0 discriminator 1
 9153 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9154 00e8 012B     		cmp	r3, #1
 9155 00ea 8FD9     		bls	.L595
 9156              	.LBE11:
2601:..\src/interruptions.c ****         }
2602:..\src/interruptions.c ****     }
2603:..\src/interruptions.c **** }
 9157              		.loc 1 2603 0 is_stmt 1
 9158 00ec 00BF     		nop
 9159 00ee 0C37     		adds	r7, r7, #12
 9160              		.cfi_def_cfa_offset 4
 9161 00f0 BD46     		mov	sp, r7
 9162              		.cfi_def_cfa_register 13
 9163              		@ sp needed
 9164 00f2 80BC     		pop	{r7}
 9165              		.cfi_restore 7
 9166              		.cfi_def_cfa_offset 0
 9167 00f4 7047     		bx	lr
 9168              	.L598:
 9169 00f6 00BF     		.align	2
 9170              	.L597:
 9171 00f8 00000000 		.word	c_mem
 9172 00fc 00000000 		.word	g_mem
 9173 0100 00000000 		.word	g_meas
 9174 0104 00000000 		.word	dev_pwm_limit
 9175 0108 00000000 		.word	dev_pwm_sat
 9176              		.cfi_endproc
 9177              	.LFE75:
 9178              		.size	overcurrent_control, .-overcurrent_control
 9179              		.section	.text.pwm_limit_search,"ax",%progbits
 9180              		.align	2
 9181              		.global	pwm_limit_search
 9182              		.thumb
 9183              		.thumb_func
 9184              		.type	pwm_limit_search, %function
 9185              	pwm_limit_search:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 211


 9186              	.LFB76:
2604:..\src/interruptions.c **** 
2605:..\src/interruptions.c **** //==============================================================================
2606:..\src/interruptions.c **** //                                                              PWM_LIMIT_SEARCH
2607:..\src/interruptions.c **** //==============================================================================
2608:..\src/interruptions.c **** 
2609:..\src/interruptions.c **** void pwm_limit_search(uint8 mot_idx) {
 9187              		.loc 1 2609 0
 9188              		.cfi_startproc
 9189              		@ args = 0, pretend = 0, frame = 16
 9190              		@ frame_needed = 1, uses_anonymous_args = 0
 9191              		@ link register save eliminated.
 9192 0000 80B4     		push	{r7}
 9193              		.cfi_def_cfa_offset 4
 9194              		.cfi_offset 7, -4
 9195 0002 85B0     		sub	sp, sp, #20
 9196              		.cfi_def_cfa_offset 24
 9197 0004 00AF     		add	r7, sp, #0
 9198              		.cfi_def_cfa_register 7
 9199 0006 0346     		mov	r3, r0
 9200 0008 FB71     		strb	r3, [r7, #7]
2610:..\src/interruptions.c **** 
2611:..\src/interruptions.c ****     uint8 CYDATA index;
2612:..\src/interruptions.c ****     uint16 CYDATA max_tension = 26500;
 9201              		.loc 1 2612 0
 9202 000a 46F28473 		movw	r3, #26500
 9203 000e FB81     		strh	r3, [r7, #14]	@ movhi
2613:..\src/interruptions.c ****     uint16 CYDATA min_tension = 11500;
 9204              		.loc 1 2613 0
 9205 0010 42F6EC43 		movw	r3, #11500
 9206 0014 BB81     		strh	r3, [r7, #12]	@ movhi
2614:..\src/interruptions.c ****     
2615:..\src/interruptions.c ****     if (dev_tension[mot_idx] > max_tension) {
 9207              		.loc 1 2615 0
 9208 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9209 0018 1F4A     		ldr	r2, .L606
 9210 001a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9211 001e FB89     		ldrh	r3, [r7, #14]
 9212 0020 9A42     		cmp	r2, r3
 9213 0022 05DD     		ble	.L600
2616:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = 0;
 9214              		.loc 1 2616 0
 9215 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9216 0026 1D4A     		ldr	r2, .L606+4
 9217 0028 0021     		movs	r1, #0
 9218 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
2617:..\src/interruptions.c ****     } else if (dev_tension[mot_idx] < min_tension) {
2618:..\src/interruptions.c ****         if (c_mem.motor[mot_idx].motor_driver_type == DRIVER_BRUSHLESS){
2619:..\src/interruptions.c ****             dev_pwm_sat[mot_idx] = PWM_MAX_VALUE_ESC;
2620:..\src/interruptions.c ****         } else {
2621:..\src/interruptions.c ****             dev_pwm_sat[mot_idx] = PWM_MAX_VALUE_DC;
2622:..\src/interruptions.c ****         }
2623:..\src/interruptions.c ****     } else {
2624:..\src/interruptions.c ****         index = (uint8)((dev_tension[mot_idx] - min_tension) >> 9);
2625:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = pwm_preload_values[index];
2626:..\src/interruptions.c ****     }
2627:..\src/interruptions.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 212


 9219              		.loc 1 2627 0
 9220 002e 2EE0     		b	.L605
 9221              	.L600:
2617:..\src/interruptions.c ****     } else if (dev_tension[mot_idx] < min_tension) {
 9222              		.loc 1 2617 0
 9223 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9224 0032 194A     		ldr	r2, .L606
 9225 0034 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9226 0038 BB89     		ldrh	r3, [r7, #12]
 9227 003a 9A42     		cmp	r2, r3
 9228 003c 17DA     		bge	.L602
2618:..\src/interruptions.c ****             dev_pwm_sat[mot_idx] = PWM_MAX_VALUE_ESC;
 9229              		.loc 1 2618 0
 9230 003e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 9231 0040 1749     		ldr	r1, .L606+8
 9232 0042 1346     		mov	r3, r2
 9233 0044 DB00     		lsls	r3, r3, #3
 9234 0046 9B1A     		subs	r3, r3, r2
 9235 0048 1B01     		lsls	r3, r3, #4
 9236 004a 0B44     		add	r3, r3, r1
 9237 004c E233     		adds	r3, r3, #226
 9238 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9239 0050 022B     		cmp	r3, #2
 9240 0052 06D1     		bne	.L603
2619:..\src/interruptions.c ****         } else {
 9241              		.loc 1 2619 0
 9242 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9243 0056 114A     		ldr	r2, .L606+4
 9244 0058 40F6A931 		movw	r1, #2985
 9245 005c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 9246              		.loc 1 2627 0
 9247 0060 15E0     		b	.L605
 9248              	.L603:
2621:..\src/interruptions.c ****         }
 9249              		.loc 1 2621 0
 9250 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9251 0064 0D4A     		ldr	r2, .L606+4
 9252 0066 6421     		movs	r1, #100
 9253 0068 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 9254              		.loc 1 2627 0
 9255 006c 0FE0     		b	.L605
 9256              	.L602:
2624:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = pwm_preload_values[index];
 9257              		.loc 1 2624 0
 9258 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9259 0070 094A     		ldr	r2, .L606
 9260 0072 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9261 0076 BB89     		ldrh	r3, [r7, #12]
 9262 0078 D31A     		subs	r3, r2, r3
 9263 007a 5B12     		asrs	r3, r3, #9
 9264 007c FB72     		strb	r3, [r7, #11]
2625:..\src/interruptions.c ****     }
 9265              		.loc 1 2625 0
 9266 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 9267 0080 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 9268 0082 0849     		ldr	r1, .L606+12
 9269 0084 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 213


 9270 0086 91B2     		uxth	r1, r2
 9271 0088 044A     		ldr	r2, .L606+4
 9272 008a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 9273              	.L605:
 9274              		.loc 1 2627 0
 9275 008e 00BF     		nop
 9276 0090 1437     		adds	r7, r7, #20
 9277              		.cfi_def_cfa_offset 4
 9278 0092 BD46     		mov	sp, r7
 9279              		.cfi_def_cfa_register 13
 9280              		@ sp needed
 9281 0094 80BC     		pop	{r7}
 9282              		.cfi_restore 7
 9283              		.cfi_def_cfa_offset 0
 9284 0096 7047     		bx	lr
 9285              	.L607:
 9286              		.align	2
 9287              	.L606:
 9288 0098 00000000 		.word	dev_tension
 9289 009c 00000000 		.word	dev_pwm_sat
 9290 00a0 00000000 		.word	c_mem
 9291 00a4 00000000 		.word	pwm_preload_values
 9292              		.cfi_endproc
 9293              	.LFE76:
 9294              		.size	pwm_limit_search, .-pwm_limit_search
 9295              		.global	__aeabi_ui2f
 9296              		.global	__aeabi_dcmpgt
 9297              		.section	.text.cycles_counter_update,"ax",%progbits
 9298              		.align	2
 9299              		.global	cycles_counter_update
 9300              		.thumb
 9301              		.thumb_func
 9302              		.type	cycles_counter_update, %function
 9303              	cycles_counter_update:
 9304              	.LFB77:
2628:..\src/interruptions.c **** 
2629:..\src/interruptions.c **** //==============================================================================
2630:..\src/interruptions.c **** //                                                         CYCLES COUNTER UPDATE
2631:..\src/interruptions.c **** //==============================================================================
2632:..\src/interruptions.c **** 
2633:..\src/interruptions.c **** void cycles_counter_update() {
 9305              		.loc 1 2633 0
 9306              		.cfi_startproc
 9307              		@ args = 0, pretend = 0, frame = 24
 9308              		@ frame_needed = 1, uses_anonymous_args = 0
 9309 0000 90B5     		push	{r4, r7, lr}
 9310              		.cfi_def_cfa_offset 12
 9311              		.cfi_offset 4, -12
 9312              		.cfi_offset 7, -8
 9313              		.cfi_offset 14, -4
 9314 0002 87B0     		sub	sp, sp, #28
 9315              		.cfi_def_cfa_offset 40
 9316 0004 00AF     		add	r7, sp, #0
 9317              		.cfi_def_cfa_register 7
2634:..\src/interruptions.c **** 	static uint8 pos_cycle_status = STATE_INACTIVE;
2635:..\src/interruptions.c ****     static uint8 emg_cycle_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
2636:..\src/interruptions.c ****     static uint8 motion_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 214


2637:..\src/interruptions.c ****     static uint8 emg_excess_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
2638:..\src/interruptions.c ****     static uint8 rest_cycle_status = STATE_INACTIVE;
2639:..\src/interruptions.c ****     static int32 bin_threshold = 250;
2640:..\src/interruptions.c ****     static int32 exc_act_thr = 980; //0.95*1024
2641:..\src/interruptions.c ****     static int32 thr_pos = 0;
2642:..\src/interruptions.c ****     static int32 max_pos = 0;
2643:..\src/interruptions.c ****     uint8 i, bin_st, bin_max, bin_1, bin_2;
2644:..\src/interruptions.c ****     int32 curr_pos = 0, curr_off = 0, curr_ref = 0;
 9318              		.loc 1 2644 0
 9319 0006 0023     		movs	r3, #0
 9320 0008 FB60     		str	r3, [r7, #12]
 9321 000a 0023     		movs	r3, #0
 9322 000c BB60     		str	r3, [r7, #8]
 9323 000e 0023     		movs	r3, #0
 9324 0010 3B61     		str	r3, [r7, #16]
2645:..\src/interruptions.c ****     int32 step;
2646:..\src/interruptions.c ****     static uint32 timer_value_s, timer_value_e;
2647:..\src/interruptions.c ****     static uint32 timer_exc_s[2], timer_exc_e[2];
2648:..\src/interruptions.c ****     static int32 start_emg_pos[2] = {0,0};
2649:..\src/interruptions.c **** 
2650:..\src/interruptions.c ****     curr_pos = (int32)(g_meas[g_mem.motor[0].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[0].encod
 9325              		.loc 1 2650 0
 9326 0012 A64B     		ldr	r3, .L686
 9327 0014 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9328 0018 1946     		mov	r1, r3
 9329 001a A54A     		ldr	r2, .L686+4
 9330 001c 3423     		movs	r3, #52
 9331 001e 03FB01F3 		mul	r3, r3, r1
 9332 0022 1344     		add	r3, r3, r2
 9333 0024 1A68     		ldr	r2, [r3]
 9334 0026 A14B     		ldr	r3, .L686
 9335 0028 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9336 002c 1846     		mov	r0, r3
 9337 002e 9F49     		ldr	r1, .L686
 9338 0030 0346     		mov	r3, r0
 9339 0032 5B00     		lsls	r3, r3, #1
 9340 0034 0344     		add	r3, r3, r0
 9341 0036 1B01     		lsls	r3, r3, #4
 9342 0038 0B44     		add	r3, r3, r1
 9343 003a 03F29513 		addw	r3, r3, #405
 9344 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9345 0040 42FA03F3 		asr	r3, r2, r3
 9346 0044 FB60     		str	r3, [r7, #12]
2651:..\src/interruptions.c ****         
2652:..\src/interruptions.c ****     // State machine - Evaluate position counter update
2653:..\src/interruptions.c ****     switch (pos_cycle_status){
 9347              		.loc 1 2653 0
 9348 0046 9B4B     		ldr	r3, .L686+8
 9349 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9350 004a 012B     		cmp	r3, #1
 9351 004c 3DD0     		beq	.L610
 9352 004e 022B     		cmp	r3, #2
 9353 0050 74D0     		beq	.L611
 9354 0052 002B     		cmp	r3, #0
 9355 0054 40F02781 		bne	.L609
2654:..\src/interruptions.c ****         case STATE_INACTIVE:
2655:..\src/interruptions.c ****             if ((g_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC && pwm_sign[0] == 1) |
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 215


 9356              		.loc 1 2655 0
 9357 0058 944B     		ldr	r3, .L686
 9358 005a 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 9359 005e 072B     		cmp	r3, #7
 9360 0060 04D0     		beq	.L613
 9361              		.loc 1 2655 0 is_stmt 0 discriminator 1
 9362 0062 954B     		ldr	r3, .L686+12
 9363 0064 93F90030 		ldrsb	r3, [r3]
 9364 0068 012B     		cmp	r3, #1
 9365 006a 0CD0     		beq	.L614
 9366              	.L613:
 9367              		.loc 1 2655 0 discriminator 3
 9368 006c 8F4B     		ldr	r3, .L686
 9369 006e 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 9370 0072 072B     		cmp	r3, #7
 9371 0074 40F01481 		bne	.L676
 9372              		.loc 1 2655 0 discriminator 4
 9373 0078 8F4B     		ldr	r3, .L686+12
 9374 007a 93F90030 		ldrsb	r3, [r3]
 9375 007e B3F1FF3F 		cmp	r3, #-1
 9376 0082 40F00D81 		bne	.L676
 9377              	.L614:
2656:..\src/interruptions.c ****                 thr_pos = curr_pos; 
 9378              		.loc 1 2656 0 is_stmt 1
 9379 0086 8D4A     		ldr	r2, .L686+16
 9380 0088 FB68     		ldr	r3, [r7, #12]
 9381 008a 1360     		str	r3, [r2]
2657:..\src/interruptions.c ****                 curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 9382              		.loc 1 2657 0
 9383 008c 8C4B     		ldr	r3, .L686+20
 9384 008e 1A68     		ldr	r2, [r3]
 9385 0090 8A4B     		ldr	r3, .L686+16
 9386 0092 1B68     		ldr	r3, [r3]
 9387 0094 9A42     		cmp	r2, r3
 9388 0096 05DD     		ble	.L616
 9389              		.loc 1 2657 0 is_stmt 0 discriminator 1
 9390 0098 894B     		ldr	r3, .L686+20
 9391 009a 1A68     		ldr	r2, [r3]
 9392 009c 874B     		ldr	r3, .L686+16
 9393 009e 1B68     		ldr	r3, [r3]
 9394 00a0 D31A     		subs	r3, r2, r3
 9395 00a2 04E0     		b	.L617
 9396              	.L616:
 9397              		.loc 1 2657 0 discriminator 2
 9398 00a4 854B     		ldr	r3, .L686+16
 9399 00a6 1A68     		ldr	r2, [r3]
 9400 00a8 854B     		ldr	r3, .L686+20
 9401 00aa 1B68     		ldr	r3, [r3]
 9402 00ac D31A     		subs	r3, r2, r3
 9403              	.L617:
 9404              		.loc 1 2657 0 discriminator 4
 9405 00ae BB60     		str	r3, [r7, #8]
2658:..\src/interruptions.c ****                 if (curr_off > 20){    // it has to be a sensible movement to update counter (to av
 9406              		.loc 1 2658 0 is_stmt 1 discriminator 4
 9407 00b0 BB68     		ldr	r3, [r7, #8]
 9408 00b2 142B     		cmp	r3, #20
 9409 00b4 05DD     		ble	.L618
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 216


2659:..\src/interruptions.c ****                     g_mem.cnt.wire_disp = g_mem.cnt.wire_disp + curr_off;     //sum opening track
 9410              		.loc 1 2659 0
 9411 00b6 7D4B     		ldr	r3, .L686
 9412 00b8 5A6D     		ldr	r2, [r3, #84]
 9413 00ba BB68     		ldr	r3, [r7, #8]
 9414 00bc 1344     		add	r3, r3, r2
 9415 00be 7B4A     		ldr	r2, .L686
 9416 00c0 5365     		str	r3, [r2, #84]
 9417              	.L618:
2660:..\src/interruptions.c ****                 }
2661:..\src/interruptions.c ****                 pos_cycle_status = STATE_ACTIVE;
 9418              		.loc 1 2661 0
 9419 00c2 7C4B     		ldr	r3, .L686+8
 9420 00c4 0122     		movs	r2, #1
 9421 00c6 1A70     		strb	r2, [r3]
2662:..\src/interruptions.c ****             }
2663:..\src/interruptions.c ****             break;
 9422              		.loc 1 2663 0
 9423 00c8 EAE0     		b	.L676
 9424              	.L610:
2664:..\src/interruptions.c ****         case STATE_ACTIVE:
2665:..\src/interruptions.c ****             if ((g_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC && pwm_sign[0] == -1) 
 9425              		.loc 1 2665 0
 9426 00ca 784B     		ldr	r3, .L686
 9427 00cc 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 9428 00d0 072B     		cmp	r3, #7
 9429 00d2 05D0     		beq	.L619
 9430              		.loc 1 2665 0 is_stmt 0 discriminator 1
 9431 00d4 784B     		ldr	r3, .L686+12
 9432 00d6 93F90030 		ldrsb	r3, [r3]
 9433 00da B3F1FF3F 		cmp	r3, #-1
 9434 00de 0BD0     		beq	.L620
 9435              	.L619:
 9436              		.loc 1 2665 0 discriminator 3
 9437 00e0 724B     		ldr	r3, .L686
 9438 00e2 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 9439 00e6 072B     		cmp	r3, #7
 9440 00e8 40F0DC80 		bne	.L677
 9441              		.loc 1 2665 0 discriminator 4
 9442 00ec 724B     		ldr	r3, .L686+12
 9443 00ee 93F90030 		ldrsb	r3, [r3]
 9444 00f2 012B     		cmp	r3, #1
 9445 00f4 40F0D680 		bne	.L677
 9446              	.L620:
2666:..\src/interruptions.c ****                 max_pos = curr_pos;
 9447              		.loc 1 2666 0 is_stmt 1
 9448 00f8 714A     		ldr	r2, .L686+20
 9449 00fa FB68     		ldr	r3, [r7, #12]
 9450 00fc 1360     		str	r3, [r2]
2667:..\src/interruptions.c ****                 curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 9451              		.loc 1 2667 0
 9452 00fe 704B     		ldr	r3, .L686+20
 9453 0100 1A68     		ldr	r2, [r3]
 9454 0102 6E4B     		ldr	r3, .L686+16
 9455 0104 1B68     		ldr	r3, [r3]
 9456 0106 9A42     		cmp	r2, r3
 9457 0108 05DD     		ble	.L622
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 217


 9458              		.loc 1 2667 0 is_stmt 0 discriminator 1
 9459 010a 6D4B     		ldr	r3, .L686+20
 9460 010c 1A68     		ldr	r2, [r3]
 9461 010e 6B4B     		ldr	r3, .L686+16
 9462 0110 1B68     		ldr	r3, [r3]
 9463 0112 D31A     		subs	r3, r2, r3
 9464 0114 04E0     		b	.L623
 9465              	.L622:
 9466              		.loc 1 2667 0 discriminator 2
 9467 0116 694B     		ldr	r3, .L686+16
 9468 0118 1A68     		ldr	r2, [r3]
 9469 011a 694B     		ldr	r3, .L686+20
 9470 011c 1B68     		ldr	r3, [r3]
 9471 011e D31A     		subs	r3, r2, r3
 9472              	.L623:
 9473              		.loc 1 2667 0 discriminator 4
 9474 0120 BB60     		str	r3, [r7, #8]
2668:..\src/interruptions.c ****                 if (curr_off > 20){    // it has to be a sensible movement to update counter (to av
 9475              		.loc 1 2668 0 is_stmt 1 discriminator 4
 9476 0122 BB68     		ldr	r3, [r7, #8]
 9477 0124 142B     		cmp	r3, #20
 9478 0126 05DD     		ble	.L624
2669:..\src/interruptions.c ****                    g_mem.cnt.wire_disp = g_mem.cnt.wire_disp + curr_off;     //sum closure track
 9479              		.loc 1 2669 0
 9480 0128 604B     		ldr	r3, .L686
 9481 012a 5A6D     		ldr	r2, [r3, #84]
 9482 012c BB68     		ldr	r3, [r7, #8]
 9483 012e 1344     		add	r3, r3, r2
 9484 0130 5E4A     		ldr	r2, .L686
 9485 0132 5365     		str	r3, [r2, #84]
 9486              	.L624:
2670:..\src/interruptions.c ****                 }
2671:..\src/interruptions.c ****                 pos_cycle_status = COUNTER_INC;
 9487              		.loc 1 2671 0
 9488 0134 5F4B     		ldr	r3, .L686+8
 9489 0136 0222     		movs	r2, #2
 9490 0138 1A70     		strb	r2, [r3]
2672:..\src/interruptions.c ****             }
2673:..\src/interruptions.c ****             break;
 9491              		.loc 1 2673 0
 9492 013a B3E0     		b	.L677
 9493              	.L611:
2674:..\src/interruptions.c ****         case COUNTER_INC:
2675:..\src/interruptions.c **** 
2676:..\src/interruptions.c ****             curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 9494              		.loc 1 2676 0
 9495 013c 604B     		ldr	r3, .L686+20
 9496 013e 1A68     		ldr	r2, [r3]
 9497 0140 5E4B     		ldr	r3, .L686+16
 9498 0142 1B68     		ldr	r3, [r3]
 9499 0144 9A42     		cmp	r2, r3
 9500 0146 05DD     		ble	.L625
 9501              		.loc 1 2676 0 is_stmt 0 discriminator 1
 9502 0148 5D4B     		ldr	r3, .L686+20
 9503 014a 1A68     		ldr	r2, [r3]
 9504 014c 5B4B     		ldr	r3, .L686+16
 9505 014e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 218


 9506 0150 D31A     		subs	r3, r2, r3
 9507 0152 04E0     		b	.L626
 9508              	.L625:
 9509              		.loc 1 2676 0 discriminator 2
 9510 0154 594B     		ldr	r3, .L686+16
 9511 0156 1A68     		ldr	r2, [r3]
 9512 0158 594B     		ldr	r3, .L686+20
 9513 015a 1B68     		ldr	r3, [r3]
 9514 015c D31A     		subs	r3, r2, r3
 9515              	.L626:
 9516              		.loc 1 2676 0 discriminator 4
 9517 015e BB60     		str	r3, [r7, #8]
2677:..\src/interruptions.c ****             if (curr_off > bin_threshold){
 9518              		.loc 1 2677 0 is_stmt 1 discriminator 4
 9519 0160 584B     		ldr	r3, .L686+24
 9520 0162 1B68     		ldr	r3, [r3]
 9521 0164 BA68     		ldr	r2, [r7, #8]
 9522 0166 9A42     		cmp	r2, r3
 9523 0168 40F39680 		ble	.L627
2678:..\src/interruptions.c ****                 //update position histogram
2679:..\src/interruptions.c ****                 step = ((int32)(g_mem.motor[0].pos_lim_sup >> g_mem.enc[g_mem.motor[0].encoder_line
 9524              		.loc 1 2679 0
 9525 016c 4F4B     		ldr	r3, .L686
 9526 016e D3F8E820 		ldr	r2, [r3, #232]
 9527 0172 4E4B     		ldr	r3, .L686
 9528 0174 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9529 0178 1846     		mov	r0, r3
 9530 017a 4C49     		ldr	r1, .L686
 9531 017c 0346     		mov	r3, r0
 9532 017e 5B00     		lsls	r3, r3, #1
 9533 0180 0344     		add	r3, r3, r0
 9534 0182 1B01     		lsls	r3, r3, #4
 9535 0184 0B44     		add	r3, r3, r1
 9536 0186 03F29513 		addw	r3, r3, #405
 9537 018a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9538 018c 42FA03F3 		asr	r3, r2, r3
 9539 0190 4D4A     		ldr	r2, .L686+28
 9540 0192 82FB0312 		smull	r1, r2, r2, r3
 9541 0196 9210     		asrs	r2, r2, #2
 9542 0198 DB17     		asrs	r3, r3, #31
 9543 019a D31A     		subs	r3, r2, r3
 9544 019c 7B60     		str	r3, [r7, #4]
2680:..\src/interruptions.c ****                 bin_st  = (uint8)(thr_pos/step);
 9545              		.loc 1 2680 0
 9546 019e 474B     		ldr	r3, .L686+16
 9547 01a0 1A68     		ldr	r2, [r3]
 9548 01a2 7B68     		ldr	r3, [r7, #4]
 9549 01a4 92FBF3F3 		sdiv	r3, r2, r3
 9550 01a8 FB70     		strb	r3, [r7, #3]
2681:..\src/interruptions.c ****                 bin_max = (uint8)(max_pos/step);
 9551              		.loc 1 2681 0
 9552 01aa 454B     		ldr	r3, .L686+20
 9553 01ac 1A68     		ldr	r2, [r3]
 9554 01ae 7B68     		ldr	r3, [r7, #4]
 9555 01b0 92FBF3F3 		sdiv	r3, r2, r3
 9556 01b4 BB70     		strb	r3, [r7, #2]
2682:..\src/interruptions.c ****                 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 219


2683:..\src/interruptions.c ****                 // Bin computation valid for both NO and NC working
2684:..\src/interruptions.c ****                 bin_1 = (bin_st<bin_max)?bin_st:bin_max;
 9557              		.loc 1 2684 0
 9558 01b6 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 9559 01b8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 9560 01ba 9342     		cmp	r3, r2
 9561 01bc 28BF     		it	cs
 9562 01be 1346     		movcs	r3, r2
 9563 01c0 7B70     		strb	r3, [r7, #1]
2685:..\src/interruptions.c ****                 bin_2 = (bin_st<bin_max)?bin_max:bin_st;    
 9564              		.loc 1 2685 0
 9565 01c2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 9566 01c4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 9567 01c6 9342     		cmp	r3, r2
 9568 01c8 38BF     		it	cc
 9569 01ca 1346     		movcc	r3, r2
 9570 01cc 3B70     		strb	r3, [r7]
2686:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2 && i <10; i++){
 9571              		.loc 1 2686 0
 9572 01ce 7B78     		ldrb	r3, [r7, #1]
 9573 01d0 FB75     		strb	r3, [r7, #23]
 9574 01d2 0DE0     		b	.L628
 9575              	.L630:
2687:..\src/interruptions.c ****                     //position_hist counts how many times the SoftHand stays in bin while moving
2688:..\src/interruptions.c ****                     g_mem.cnt.position_hist[i] = g_mem.cnt.position_hist[i] + 1;
 9576              		.loc 1 2688 0 discriminator 4
 9577 01d4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9578 01d6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9579 01d8 3449     		ldr	r1, .L686
 9580 01da 0632     		adds	r2, r2, #6
 9581 01dc 51F82220 		ldr	r2, [r1, r2, lsl #2]
 9582 01e0 0132     		adds	r2, r2, #1
 9583 01e2 3249     		ldr	r1, .L686
 9584 01e4 0633     		adds	r3, r3, #6
 9585 01e6 41F82320 		str	r2, [r1, r3, lsl #2]
2686:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2 && i <10; i++){
 9586              		.loc 1 2686 0 discriminator 4
 9587 01ea FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9588 01ec 0133     		adds	r3, r3, #1
 9589 01ee FB75     		strb	r3, [r7, #23]
 9590              	.L628:
2686:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2 && i <10; i++){
 9591              		.loc 1 2686 0 is_stmt 0 discriminator 1
 9592 01f0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9593 01f2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 9594 01f4 9A42     		cmp	r2, r3
 9595 01f6 02D8     		bhi	.L629
2686:..\src/interruptions.c ****                 for (i=bin_1; i<= bin_2 && i <10; i++){
 9596              		.loc 1 2686 0 discriminator 3
 9597 01f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9598 01fa 092B     		cmp	r3, #9
 9599 01fc EAD9     		bls	.L630
 9600              	.L629:
2689:..\src/interruptions.c ****                 }
2690:..\src/interruptions.c ****                 
2691:..\src/interruptions.c ****                 //update current histogram (only positive current measures)
2692:..\src/interruptions.c ****                 step = ((int32)(g_mem.motor[0].current_limit) / 4);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 220


 9601              		.loc 1 2692 0 is_stmt 1
 9602 01fe 2B4B     		ldr	r3, .L686
 9603 0200 B3F90C31 		ldrsh	r3, [r3, #268]
 9604 0204 002B     		cmp	r3, #0
 9605 0206 00DA     		bge	.L631
 9606 0208 0333     		adds	r3, r3, #3
 9607              	.L631:
 9608 020a 9B10     		asrs	r3, r3, #2
 9609 020c 1BB2     		sxth	r3, r3
 9610 020e 7B60     		str	r3, [r7, #4]
2693:..\src/interruptions.c ****                 if (g_mem.motor[0].not_revers_motor_flag == TRUE)
 9611              		.loc 1 2693 0
 9612 0210 264B     		ldr	r3, .L686
 9613 0212 93F81231 		ldrb	r3, [r3, #274]	@ zero_extendqisi2
 9614 0216 012B     		cmp	r3, #1
 9615 0218 0CD1     		bne	.L632
2694:..\src/interruptions.c ****                     curr_ref = g_meas[g_mem.motor[0].encoder_line].hold_curr; 
 9616              		.loc 1 2694 0
 9617 021a 244B     		ldr	r3, .L686
 9618 021c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9619 0220 1946     		mov	r1, r3
 9620 0222 234A     		ldr	r2, .L686+4
 9621 0224 3423     		movs	r3, #52
 9622 0226 03FB01F3 		mul	r3, r3, r1
 9623 022a 1344     		add	r3, r3, r2
 9624 022c 1433     		adds	r3, r3, #20
 9625 022e 1B68     		ldr	r3, [r3]
 9626 0230 3B61     		str	r3, [r7, #16]
 9627 0232 0BE0     		b	.L633
 9628              	.L632:
2695:..\src/interruptions.c ****                 else
2696:..\src/interruptions.c ****                     curr_ref = g_meas[g_mem.motor[0].encoder_line].curr;
 9629              		.loc 1 2696 0
 9630 0234 1D4B     		ldr	r3, .L686
 9631 0236 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9632 023a 1946     		mov	r1, r3
 9633 023c 1C4A     		ldr	r2, .L686+4
 9634 023e 3423     		movs	r3, #52
 9635 0240 03FB01F3 		mul	r3, r3, r1
 9636 0244 1344     		add	r3, r3, r2
 9637 0246 0C33     		adds	r3, r3, #12
 9638 0248 1B68     		ldr	r3, [r3]
 9639 024a 3B61     		str	r3, [r7, #16]
 9640              	.L633:
2697:..\src/interruptions.c **** 
2698:..\src/interruptions.c ****                 if (curr_ref < 0){
 9641              		.loc 1 2698 0
 9642 024c 3B69     		ldr	r3, [r7, #16]
 9643 024e 002B     		cmp	r3, #0
 9644 0250 02DA     		bge	.L634
2699:..\src/interruptions.c ****                     curr_ref = -curr_ref;       // Invert sign to have a positive current reading i
 9645              		.loc 1 2699 0
 9646 0252 3B69     		ldr	r3, [r7, #16]
 9647 0254 5B42     		negs	r3, r3
 9648 0256 3B61     		str	r3, [r7, #16]
 9649              	.L634:
2700:..\src/interruptions.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 221


2701:..\src/interruptions.c ****                 
2702:..\src/interruptions.c ****                 if (curr_ref > g_mem.motor[0].current_limit)
 9650              		.loc 1 2702 0
 9651 0258 144B     		ldr	r3, .L686
 9652 025a B3F90C31 		ldrsh	r3, [r3, #268]
 9653 025e 1A46     		mov	r2, r3
 9654 0260 3B69     		ldr	r3, [r7, #16]
 9655 0262 9A42     		cmp	r2, r3
 9656 0264 05DA     		bge	.L635
2703:..\src/interruptions.c ****                     g_mem.cnt.current_hist[3] = g_mem.cnt.current_hist[3] + 1; 
 9657              		.loc 1 2703 0
 9658 0266 114B     		ldr	r3, .L686
 9659 0268 DB6C     		ldr	r3, [r3, #76]
 9660 026a 0133     		adds	r3, r3, #1
 9661 026c 0F4A     		ldr	r2, .L686
 9662 026e D364     		str	r3, [r2, #76]
 9663 0270 12E0     		b	.L627
 9664              	.L635:
2704:..\src/interruptions.c ****                 else
2705:..\src/interruptions.c ****                     g_mem.cnt.current_hist[(uint8)(curr_ref/step)] = g_mem.cnt.current_hist[(uint8)
 9665              		.loc 1 2705 0
 9666 0272 3A69     		ldr	r2, [r7, #16]
 9667 0274 7B68     		ldr	r3, [r7, #4]
 9668 0276 92FBF3F3 		sdiv	r3, r2, r3
 9669 027a DBB2     		uxtb	r3, r3
 9670 027c 3969     		ldr	r1, [r7, #16]
 9671 027e 7A68     		ldr	r2, [r7, #4]
 9672 0280 91FBF2F2 		sdiv	r2, r1, r2
 9673 0284 D2B2     		uxtb	r2, r2
 9674 0286 0949     		ldr	r1, .L686
 9675 0288 1032     		adds	r2, r2, #16
 9676 028a 51F82220 		ldr	r2, [r1, r2, lsl #2]
 9677 028e 0132     		adds	r2, r2, #1
 9678 0290 0649     		ldr	r1, .L686
 9679 0292 1033     		adds	r3, r3, #16
 9680 0294 41F82320 		str	r2, [r1, r3, lsl #2]
 9681              	.L627:
2706:..\src/interruptions.c ****             }
2707:..\src/interruptions.c ****             pos_cycle_status = STATE_INACTIVE;
 9682              		.loc 1 2707 0
 9683 0298 064B     		ldr	r3, .L686+8
 9684 029a 0022     		movs	r2, #0
 9685 029c 1A70     		strb	r2, [r3]
2708:..\src/interruptions.c ****             break;
 9686              		.loc 1 2708 0
 9687 029e 02E0     		b	.L609
 9688              	.L676:
2663:..\src/interruptions.c ****         case STATE_ACTIVE:
 9689              		.loc 1 2663 0
 9690 02a0 00BF     		nop
 9691 02a2 00E0     		b	.L609
 9692              	.L677:
2673:..\src/interruptions.c ****         case COUNTER_INC:
 9693              		.loc 1 2673 0
 9694 02a4 00BF     		nop
 9695              	.L609:
2709:..\src/interruptions.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 222


2710:..\src/interruptions.c ****     
2711:..\src/interruptions.c ****     // State machine - Evaluate EMG activation counter update
2712:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 9696              		.loc 1 2712 0
 9697 02a6 0023     		movs	r3, #0
 9698 02a8 FB75     		strb	r3, [r7, #23]
 9699 02aa 4FE0     		b	.L636
 9700              	.L687:
 9701              		.align	2
 9702              	.L686:
 9703 02ac 00000000 		.word	g_mem
 9704 02b0 00000000 		.word	g_meas
 9705 02b4 8A010000 		.word	pos_cycle_status.10742
 9706 02b8 00000000 		.word	pwm_sign
 9707 02bc 8C010000 		.word	thr_pos.10749
 9708 02c0 90010000 		.word	max_pos.10750
 9709 02c4 10000000 		.word	bin_threshold.10747
 9710 02c8 67666666 		.word	1717986919
 9711              	.L644:
2713:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9712              		.loc 1 2713 0
 9713 02cc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9714 02ce 9C4A     		ldr	r2, .L688
 9715 02d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9716 02d2 012B     		cmp	r3, #1
 9717 02d4 13D0     		beq	.L638
 9718 02d6 022B     		cmp	r3, #2
 9719 02d8 22D0     		beq	.L639
 9720 02da 002B     		cmp	r3, #0
 9721 02dc 33D1     		bne	.L637
2714:..\src/interruptions.c ****             case STATE_INACTIVE:
2715:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] > g_mem.emg.emg_threshold[i]){
 9722              		.loc 1 2715 0
 9723 02de FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9724 02e0 984A     		ldr	r2, .L688+4
 9725 02e2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 9726 02e6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9727 02e8 9749     		ldr	r1, .L688+8
 9728 02ea F832     		adds	r2, r2, #248
 9729 02ec 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 9730 02f0 9342     		cmp	r3, r2
 9731 02f2 25DD     		ble	.L678
2716:..\src/interruptions.c ****                     emg_cycle_status[i] = STATE_ACTIVE;
 9732              		.loc 1 2716 0
 9733 02f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9734 02f6 924A     		ldr	r2, .L688
 9735 02f8 0121     		movs	r1, #1
 9736 02fa D154     		strb	r1, [r2, r3]
2717:..\src/interruptions.c ****                 }
2718:..\src/interruptions.c ****                 break;
 9737              		.loc 1 2718 0
 9738 02fc 20E0     		b	.L678
 9739              	.L638:
2719:..\src/interruptions.c ****             case STATE_ACTIVE:
2720:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] < g_mem.emg.emg_threshold[i]-10){                    
 9740              		.loc 1 2720 0
 9741 02fe FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 223


 9742 0300 904A     		ldr	r2, .L688+4
 9743 0302 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9744 0306 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9745 0308 8F49     		ldr	r1, .L688+8
 9746 030a F833     		adds	r3, r3, #248
 9747 030c 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 9748 0310 0A3B     		subs	r3, r3, #10
 9749 0312 9A42     		cmp	r2, r3
 9750 0314 16DA     		bge	.L679
2721:..\src/interruptions.c ****                     emg_cycle_status[i] = COUNTER_INC;
 9751              		.loc 1 2721 0
 9752 0316 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9753 0318 894A     		ldr	r2, .L688
 9754 031a 0221     		movs	r1, #2
 9755 031c D154     		strb	r1, [r2, r3]
2722:..\src/interruptions.c ****                 }
2723:..\src/interruptions.c ****                 break;
 9756              		.loc 1 2723 0
 9757 031e 11E0     		b	.L679
 9758              	.L639:
2724:..\src/interruptions.c ****             case COUNTER_INC:
2725:..\src/interruptions.c ****                 g_mem.cnt.emg_act_counter[i] = g_mem.cnt.emg_act_counter[i] + 1;
 9759              		.loc 1 2725 0
 9760 0320 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9761 0322 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9762 0324 8849     		ldr	r1, .L688+8
 9763 0326 0432     		adds	r2, r2, #4
 9764 0328 51F82220 		ldr	r2, [r1, r2, lsl #2]
 9765 032c 0132     		adds	r2, r2, #1
 9766 032e 8649     		ldr	r1, .L688+8
 9767 0330 0433     		adds	r3, r3, #4
 9768 0332 41F82320 		str	r2, [r1, r3, lsl #2]
2726:..\src/interruptions.c ****                 emg_cycle_status[i] = STATE_INACTIVE;
 9769              		.loc 1 2726 0
 9770 0336 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9771 0338 814A     		ldr	r2, .L688
 9772 033a 0021     		movs	r1, #0
 9773 033c D154     		strb	r1, [r2, r3]
2727:..\src/interruptions.c ****                 break;
 9774              		.loc 1 2727 0
 9775 033e 02E0     		b	.L637
 9776              	.L678:
2718:..\src/interruptions.c ****             case STATE_ACTIVE:
 9777              		.loc 1 2718 0
 9778 0340 00BF     		nop
 9779 0342 00E0     		b	.L637
 9780              	.L679:
2723:..\src/interruptions.c ****             case COUNTER_INC:
 9781              		.loc 1 2723 0
 9782 0344 00BF     		nop
 9783              	.L637:
2712:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9784              		.loc 1 2712 0 discriminator 2
 9785 0346 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9786 0348 0133     		adds	r3, r3, #1
 9787 034a FB75     		strb	r3, [r7, #23]
 9788              	.L636:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 224


2712:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9789              		.loc 1 2712 0 is_stmt 0 discriminator 1
 9790 034c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9791 034e 012B     		cmp	r3, #1
 9792 0350 07D8     		bhi	.L643
2712:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9793              		.loc 1 2712 0 discriminator 3
 9794 0352 7E4B     		ldr	r3, .L688+12
 9795 0354 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9796 0356 002B     		cmp	r3, #0
 9797 0358 03D1     		bne	.L643
2712:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 9798              		.loc 1 2712 0 discriminator 4
 9799 035a 7D4B     		ldr	r3, .L688+16
 9800 035c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9801 035e 002B     		cmp	r3, #0
 9802 0360 B4D0     		beq	.L644
 9803              	.L643:
2728:..\src/interruptions.c ****         }
2729:..\src/interruptions.c ****     }
2730:..\src/interruptions.c ****     
2731:..\src/interruptions.c ****     // State machine - Evaluate Motion counter update
2732:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 9804              		.loc 1 2732 0 is_stmt 1
 9805 0362 0023     		movs	r3, #0
 9806 0364 FB75     		strb	r3, [r7, #23]
 9807 0366 57E0     		b	.L645
 9808              	.L654:
2733:..\src/interruptions.c ****         switch (motion_status[i]){
 9809              		.loc 1 2733 0
 9810 0368 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9811 036a 7A4A     		ldr	r2, .L688+20
 9812 036c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9813 036e 012B     		cmp	r3, #1
 9814 0370 18D0     		beq	.L647
 9815 0372 022B     		cmp	r3, #2
 9816 0374 37D0     		beq	.L648
 9817 0376 002B     		cmp	r3, #0
 9818 0378 4BD1     		bne	.L646
2734:..\src/interruptions.c ****             case STATE_INACTIVE:
2735:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] > g_mem.emg.emg_threshold[i]){
 9819              		.loc 1 2735 0
 9820 037a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9821 037c 714A     		ldr	r2, .L688+4
 9822 037e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 9823 0382 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9824 0384 7049     		ldr	r1, .L688+8
 9825 0386 F832     		adds	r2, r2, #248
 9826 0388 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 9827 038c 9342     		cmp	r3, r2
 9828 038e 3DDD     		ble	.L680
2736:..\src/interruptions.c ****                     start_emg_pos[i] = curr_pos;
 9829              		.loc 1 2736 0
 9830 0390 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9831 0392 7149     		ldr	r1, .L688+24
 9832 0394 FA68     		ldr	r2, [r7, #12]
 9833 0396 41F82320 		str	r2, [r1, r3, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 225


2737:..\src/interruptions.c ****                     motion_status[i] = STATE_ACTIVE;
 9834              		.loc 1 2737 0
 9835 039a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9836 039c 6D4A     		ldr	r2, .L688+20
 9837 039e 0121     		movs	r1, #1
 9838 03a0 D154     		strb	r1, [r2, r3]
2738:..\src/interruptions.c ****                 }
2739:..\src/interruptions.c ****                 break;
 9839              		.loc 1 2739 0
 9840 03a2 33E0     		b	.L680
 9841              	.L647:
2740:..\src/interruptions.c ****             case STATE_ACTIVE:
2741:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] < g_mem.emg.emg_threshold[i]-10){                    
 9842              		.loc 1 2741 0
 9843 03a4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9844 03a6 674A     		ldr	r2, .L688+4
 9845 03a8 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9846 03ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9847 03ae 6649     		ldr	r1, .L688+8
 9848 03b0 F833     		adds	r3, r3, #248
 9849 03b2 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 9850 03b6 0A3B     		subs	r3, r3, #10
 9851 03b8 9A42     		cmp	r2, r3
 9852 03ba 29DA     		bge	.L681
2742:..\src/interruptions.c ****                     if (abs(start_emg_pos[i] - curr_pos) > 200){     // it has to be a sensible mov
 9853              		.loc 1 2742 0
 9854 03bc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9855 03be 664A     		ldr	r2, .L688+24
 9856 03c0 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9857 03c4 FB68     		ldr	r3, [r7, #12]
 9858 03c6 D31A     		subs	r3, r2, r3
 9859 03c8 002B     		cmp	r3, #0
 9860 03ca B8BF     		it	lt
 9861 03cc 5B42     		rsblt	r3, r3, #0
 9862 03ce C82B     		cmp	r3, #200
 9863 03d0 04DD     		ble	.L652
2743:..\src/interruptions.c ****                         motion_status[i] = COUNTER_INC;
 9864              		.loc 1 2743 0
 9865 03d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9866 03d4 5F4A     		ldr	r2, .L688+20
 9867 03d6 0221     		movs	r1, #2
 9868 03d8 D154     		strb	r1, [r2, r3]
2744:..\src/interruptions.c ****                     }
2745:..\src/interruptions.c ****                     else {
2746:..\src/interruptions.c ****                         motion_status[i] = STATE_INACTIVE;
2747:..\src/interruptions.c ****                     }
2748:..\src/interruptions.c ****                 }
2749:..\src/interruptions.c ****                 break;
 9869              		.loc 1 2749 0
 9870 03da 19E0     		b	.L681
 9871              	.L652:
2746:..\src/interruptions.c ****                     }
 9872              		.loc 1 2746 0
 9873 03dc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9874 03de 5D4A     		ldr	r2, .L688+20
 9875 03e0 0021     		movs	r1, #0
 9876 03e2 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 226


 9877              		.loc 1 2749 0
 9878 03e4 14E0     		b	.L681
 9879              	.L648:
2750:..\src/interruptions.c ****             case COUNTER_INC:
2751:..\src/interruptions.c ****                 g_mem.cnt.motion_counter[i] = g_mem.cnt.motion_counter[i] + 1;
 9880              		.loc 1 2751 0
 9881 03e6 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 9882 03e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9883 03ea 574A     		ldr	r2, .L688+8
 9884 03ec 1A33     		adds	r3, r3, #26
 9885 03ee 9B00     		lsls	r3, r3, #2
 9886 03f0 1344     		add	r3, r3, r2
 9887 03f2 5B68     		ldr	r3, [r3, #4]
 9888 03f4 5A1C     		adds	r2, r3, #1
 9889 03f6 5448     		ldr	r0, .L688+8
 9890 03f8 01F11A03 		add	r3, r1, #26
 9891 03fc 9B00     		lsls	r3, r3, #2
 9892 03fe 0344     		add	r3, r3, r0
 9893 0400 5A60     		str	r2, [r3, #4]
2752:..\src/interruptions.c ****                 motion_status[i] = STATE_INACTIVE;
 9894              		.loc 1 2752 0
 9895 0402 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9896 0404 534A     		ldr	r2, .L688+20
 9897 0406 0021     		movs	r1, #0
 9898 0408 D154     		strb	r1, [r2, r3]
2753:..\src/interruptions.c ****                 break;
 9899              		.loc 1 2753 0
 9900 040a 02E0     		b	.L646
 9901              	.L680:
2739:..\src/interruptions.c ****             case STATE_ACTIVE:
 9902              		.loc 1 2739 0
 9903 040c 00BF     		nop
 9904 040e 00E0     		b	.L646
 9905              	.L681:
2749:..\src/interruptions.c ****             case COUNTER_INC:
 9906              		.loc 1 2749 0
 9907 0410 00BF     		nop
 9908              	.L646:
2732:..\src/interruptions.c ****         switch (motion_status[i]){
 9909              		.loc 1 2732 0 discriminator 2
 9910 0412 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9911 0414 0133     		adds	r3, r3, #1
 9912 0416 FB75     		strb	r3, [r7, #23]
 9913              	.L645:
2732:..\src/interruptions.c ****         switch (motion_status[i]){
 9914              		.loc 1 2732 0 is_stmt 0 discriminator 1
 9915 0418 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9916 041a 012B     		cmp	r3, #1
 9917 041c 07D8     		bhi	.L653
2732:..\src/interruptions.c ****         switch (motion_status[i]){
 9918              		.loc 1 2732 0 discriminator 3
 9919 041e 4B4B     		ldr	r3, .L688+12
 9920 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9921 0422 002B     		cmp	r3, #0
 9922 0424 03D1     		bne	.L653
2732:..\src/interruptions.c ****         switch (motion_status[i]){
 9923              		.loc 1 2732 0 discriminator 4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 227


 9924 0426 4A4B     		ldr	r3, .L688+16
 9925 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9926 042a 002B     		cmp	r3, #0
 9927 042c 9CD0     		beq	.L654
 9928              	.L653:
2754:..\src/interruptions.c ****         }
2755:..\src/interruptions.c ****     }
2756:..\src/interruptions.c ****     
2757:..\src/interruptions.c ****     // State machine - Evaluate EMG excessive activity counter update
2758:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 9929              		.loc 1 2758 0 is_stmt 1
 9930 042e 0023     		movs	r3, #0
 9931 0430 FB75     		strb	r3, [r7, #23]
 9932 0432 A3E0     		b	.L655
 9933              	.L666:
2759:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 9934              		.loc 1 2759 0
 9935 0434 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9936 0436 494A     		ldr	r2, .L688+28
 9937 0438 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9938 043a 012B     		cmp	r3, #1
 9939 043c 19D0     		beq	.L657
 9940 043e 022B     		cmp	r3, #2
 9941 0440 68D0     		beq	.L658
 9942 0442 002B     		cmp	r3, #0
 9943 0444 40F09780 		bne	.L656
2760:..\src/interruptions.c ****             case STATE_INACTIVE:
2761:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] > exc_act_thr){
 9944              		.loc 1 2761 0
 9945 0448 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9946 044a 3E4A     		ldr	r2, .L688+4
 9947 044c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9948 0450 434B     		ldr	r3, .L688+32
 9949 0452 1B68     		ldr	r3, [r3]
 9950 0454 9A42     		cmp	r2, r3
 9951 0456 70DD     		ble	.L682
2762:..\src/interruptions.c ****                     timer_exc_s[i] = (uint32)CYCLES_TIMER_ReadCounter();
 9952              		.loc 1 2762 0
 9953 0458 FC7D     		ldrb	r4, [r7, #23]	@ zero_extendqisi2
 9954 045a FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 9955 045e 0346     		mov	r3, r0
 9956 0460 1A46     		mov	r2, r3
 9957 0462 404B     		ldr	r3, .L688+36
 9958 0464 43F82420 		str	r2, [r3, r4, lsl #2]
2763:..\src/interruptions.c ****                     emg_excess_status[i] = STATE_ACTIVE;
 9959              		.loc 1 2763 0
 9960 0468 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9961 046a 3C4A     		ldr	r2, .L688+28
 9962 046c 0121     		movs	r1, #1
 9963 046e D154     		strb	r1, [r2, r3]
2764:..\src/interruptions.c ****                 }
2765:..\src/interruptions.c ****                 break;
 9964              		.loc 1 2765 0
 9965 0470 63E0     		b	.L682
 9966              	.L657:
2766:..\src/interruptions.c ****             case STATE_ACTIVE:
2767:..\src/interruptions.c ****                 if (g_adc_meas.emg[i] < exc_act_thr-10){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 228


 9967              		.loc 1 2767 0
 9968 0472 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9969 0474 334A     		ldr	r2, .L688+4
 9970 0476 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9971 047a 394B     		ldr	r3, .L688+32
 9972 047c 1B68     		ldr	r3, [r3]
 9973 047e 0A3B     		subs	r3, r3, #10
 9974 0480 9A42     		cmp	r2, r3
 9975 0482 77DA     		bge	.L683
2768:..\src/interruptions.c ****                     timer_exc_e[i] = (uint32)CYCLES_TIMER_ReadCounter();
 9976              		.loc 1 2768 0
 9977 0484 FC7D     		ldrb	r4, [r7, #23]	@ zero_extendqisi2
 9978 0486 FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 9979 048a 0346     		mov	r3, r0
 9980 048c 1A46     		mov	r2, r3
 9981 048e 364B     		ldr	r3, .L688+40
 9982 0490 43F82420 		str	r2, [r3, r4, lsl #2]
2769:..\src/interruptions.c ****                     if (timer_exc_s[i] < timer_exc_e[i]) {
 9983              		.loc 1 2769 0
 9984 0494 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9985 0496 334A     		ldr	r2, .L688+36
 9986 0498 52F82320 		ldr	r2, [r2, r3, lsl #2]
 9987 049c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9988 049e 3249     		ldr	r1, .L688+40
 9989 04a0 51F82330 		ldr	r3, [r1, r3, lsl #2]
 9990 04a4 9A42     		cmp	r2, r3
 9991 04a6 0AD2     		bcs	.L662
2770:..\src/interruptions.c ****                         timer_exc_s[i] = timer_exc_s[i] + (uint32)6000;
 9992              		.loc 1 2770 0
 9993 04a8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9994 04aa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9995 04ac 2D49     		ldr	r1, .L688+36
 9996 04ae 51F82330 		ldr	r3, [r1, r3, lsl #2]
 9997 04b2 03F5BB53 		add	r3, r3, #5984
 9998 04b6 1033     		adds	r3, r3, #16
 9999 04b8 2A49     		ldr	r1, .L688+36
 10000 04ba 41F82230 		str	r3, [r1, r2, lsl #2]
 10001              	.L662:
2771:..\src/interruptions.c ****                     }
2772:..\src/interruptions.c ****                     if (((float)(timer_exc_s[i] - timer_exc_e[i])/50.0) > 4.0){      //50 timers ti
 10002              		.loc 1 2772 0
 10003 04be FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10004 04c0 284A     		ldr	r2, .L688+36
 10005 04c2 52F82320 		ldr	r2, [r2, r3, lsl #2]
 10006 04c6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10007 04c8 2749     		ldr	r1, .L688+40
 10008 04ca 51F82330 		ldr	r3, [r1, r3, lsl #2]
 10009 04ce D31A     		subs	r3, r2, r3
 10010 04d0 1846     		mov	r0, r3
 10011 04d2 FFF7FEFF 		bl	__aeabi_ui2f
 10012 04d6 0346     		mov	r3, r0
 10013 04d8 1846     		mov	r0, r3
 10014 04da FFF7FEFF 		bl	__aeabi_f2d
 10015 04de 4FF00002 		mov	r2, #0
 10016 04e2 224B     		ldr	r3, .L688+44
 10017 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 10018 04e8 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 229


 10019 04ea 0C46     		mov	r4, r1
 10020 04ec 1846     		mov	r0, r3
 10021 04ee 2146     		mov	r1, r4
 10022 04f0 4FF00002 		mov	r2, #0
 10023 04f4 1E4B     		ldr	r3, .L688+48
 10024 04f6 FFF7FEFF 		bl	__aeabi_dcmpgt
 10025 04fa 0346     		mov	r3, r0
 10026 04fc 002B     		cmp	r3, #0
 10027 04fe 04D0     		beq	.L675
2773:..\src/interruptions.c ****                         emg_excess_status[i] = COUNTER_INC;
 10028              		.loc 1 2773 0
 10029 0500 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10030 0502 164A     		ldr	r2, .L688+28
 10031 0504 0221     		movs	r1, #2
 10032 0506 D154     		strb	r1, [r2, r3]
2774:..\src/interruptions.c ****                     }
2775:..\src/interruptions.c ****                     else {
2776:..\src/interruptions.c ****                         emg_excess_status[i] = STATE_INACTIVE;
2777:..\src/interruptions.c ****                     }
2778:..\src/interruptions.c ****                 }
2779:..\src/interruptions.c ****                 break;
 10033              		.loc 1 2779 0
 10034 0508 34E0     		b	.L683
 10035              	.L675:
2776:..\src/interruptions.c ****                     }
 10036              		.loc 1 2776 0
 10037 050a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10038 050c 134A     		ldr	r2, .L688+28
 10039 050e 0021     		movs	r1, #0
 10040 0510 D154     		strb	r1, [r2, r3]
 10041              		.loc 1 2779 0
 10042 0512 2FE0     		b	.L683
 10043              	.L658:
2780:..\src/interruptions.c ****             case COUNTER_INC:
2781:..\src/interruptions.c ****                 g_mem.cnt.excessive_signal_activity[i] = g_mem.cnt.excessive_signal_activity[i] + 1
 10044              		.loc 1 2781 0
 10045 0514 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10046 0516 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10047 0518 0B4A     		ldr	r2, .L688+8
 10048 051a 1833     		adds	r3, r3, #24
 10049 051c 9B00     		lsls	r3, r3, #2
 10050 051e 1344     		add	r3, r3, r2
 10051 0520 5B68     		ldr	r3, [r3, #4]
 10052 0522 5A1C     		adds	r2, r3, #1
 10053 0524 0848     		ldr	r0, .L688+8
 10054 0526 01F11803 		add	r3, r1, #24
 10055 052a 9B00     		lsls	r3, r3, #2
 10056 052c 0344     		add	r3, r3, r0
 10057 052e 5A60     		str	r2, [r3, #4]
2782:..\src/interruptions.c ****                 emg_excess_status[i] = STATE_INACTIVE;
 10058              		.loc 1 2782 0
 10059 0530 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10060 0532 0A4A     		ldr	r2, .L688+28
 10061 0534 0021     		movs	r1, #0
 10062 0536 D154     		strb	r1, [r2, r3]
2783:..\src/interruptions.c ****                 break;
 10063              		.loc 1 2783 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 230


 10064 0538 1DE0     		b	.L656
 10065              	.L682:
2765:..\src/interruptions.c ****             case STATE_ACTIVE:
 10066              		.loc 1 2765 0
 10067 053a 00BF     		nop
 10068 053c 1BE0     		b	.L656
 10069              	.L689:
 10070 053e 00BF     		.align	2
 10071              	.L688:
 10072 0540 94010000 		.word	emg_cycle_status.10743
 10073 0544 00000000 		.word	g_adc_meas
 10074 0548 00000000 		.word	g_mem
 10075 054c 00000000 		.word	emg_1_status
 10076 0550 00000000 		.word	emg_2_status
 10077 0554 98010000 		.word	motion_status.10744
 10078 0558 9C010000 		.word	start_emg_pos.10764
 10079 055c A4010000 		.word	emg_excess_status.10745
 10080 0560 14000000 		.word	exc_act_thr.10748
 10081 0564 A8010000 		.word	timer_exc_s.10762
 10082 0568 B0010000 		.word	timer_exc_e.10763
 10083 056c 00004940 		.word	1078525952
 10084 0570 00001040 		.word	1074790400
 10085              	.L683:
2779:..\src/interruptions.c ****             case COUNTER_INC:
 10086              		.loc 1 2779 0
 10087 0574 00BF     		nop
 10088              	.L656:
2758:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 10089              		.loc 1 2758 0 discriminator 2
 10090 0576 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10091 0578 0133     		adds	r3, r3, #1
 10092 057a FB75     		strb	r3, [r7, #23]
 10093              	.L655:
2758:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 10094              		.loc 1 2758 0 is_stmt 0 discriminator 1
 10095 057c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10096 057e 012B     		cmp	r3, #1
 10097 0580 08D8     		bhi	.L665
2758:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 10098              		.loc 1 2758 0 discriminator 3
 10099 0582 2D4B     		ldr	r3, .L690
 10100 0584 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10101 0586 002B     		cmp	r3, #0
 10102 0588 04D1     		bne	.L665
2758:..\src/interruptions.c ****         switch (emg_excess_status[i]){
 10103              		.loc 1 2758 0 discriminator 4
 10104 058a 2C4B     		ldr	r3, .L690+4
 10105 058c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10106 058e 002B     		cmp	r3, #0
 10107 0590 3FF450AF 		beq	.L666
 10108              	.L665:
2784:..\src/interruptions.c ****         }
2785:..\src/interruptions.c ****     }
2786:..\src/interruptions.c ****     
2787:..\src/interruptions.c ****     // State machine - Evaluate rest counter update
2788:..\src/interruptions.c ****     switch (rest_cycle_status){
 10109              		.loc 1 2788 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 231


 10110 0594 2A4B     		ldr	r3, .L690+8
 10111 0596 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10112 0598 012B     		cmp	r3, #1
 10113 059a 11D0     		beq	.L668
 10114 059c 022B     		cmp	r3, #2
 10115 059e 2AD0     		beq	.L669
 10116 05a0 002B     		cmp	r3, #0
 10117 05a2 42D1     		bne	.L667
2789:..\src/interruptions.c ****         case STATE_INACTIVE:
2790:..\src/interruptions.c ****             if (rest_enabled){
 10118              		.loc 1 2790 0
 10119 05a4 274B     		ldr	r3, .L690+12
 10120 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10121 05a8 002B     		cmp	r3, #0
 10122 05aa 3BD0     		beq	.L684
2791:..\src/interruptions.c ****                 timer_value_s = (uint32)CYCLES_TIMER_ReadCounter();
 10123              		.loc 1 2791 0
 10124 05ac FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 10125 05b0 0346     		mov	r3, r0
 10126 05b2 1A46     		mov	r2, r3
 10127 05b4 244B     		ldr	r3, .L690+16
 10128 05b6 1A60     		str	r2, [r3]
2792:..\src/interruptions.c ****                 rest_cycle_status = STATE_ACTIVE;
 10129              		.loc 1 2792 0
 10130 05b8 214B     		ldr	r3, .L690+8
 10131 05ba 0122     		movs	r2, #1
 10132 05bc 1A70     		strb	r2, [r3]
2793:..\src/interruptions.c ****             }
2794:..\src/interruptions.c ****             break;
 10133              		.loc 1 2794 0
 10134 05be 31E0     		b	.L684
 10135              	.L668:
2795:..\src/interruptions.c ****         case STATE_ACTIVE:
2796:..\src/interruptions.c ****             if (!rest_enabled){
 10136              		.loc 1 2796 0
 10137 05c0 204B     		ldr	r3, .L690+12
 10138 05c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10139 05c4 002B     		cmp	r3, #0
 10140 05c6 2FD1     		bne	.L685
2797:..\src/interruptions.c ****                 timer_value_e = (uint32)CYCLES_TIMER_ReadCounter();
 10141              		.loc 1 2797 0
 10142 05c8 FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 10143 05cc 0346     		mov	r3, r0
 10144 05ce 1A46     		mov	r2, r3
 10145 05d0 1E4B     		ldr	r3, .L690+20
 10146 05d2 1A60     		str	r2, [r3]
2798:..\src/interruptions.c ****                 if (timer_value_s < timer_value_e) {
 10147              		.loc 1 2798 0
 10148 05d4 1C4B     		ldr	r3, .L690+16
 10149 05d6 1A68     		ldr	r2, [r3]
 10150 05d8 1C4B     		ldr	r3, .L690+20
 10151 05da 1B68     		ldr	r3, [r3]
 10152 05dc 9A42     		cmp	r2, r3
 10153 05de 06D2     		bcs	.L673
2799:..\src/interruptions.c ****                     timer_value_s = timer_value_s + (uint32)6000;
 10154              		.loc 1 2799 0
 10155 05e0 194B     		ldr	r3, .L690+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 232


 10156 05e2 1B68     		ldr	r3, [r3]
 10157 05e4 03F5BB53 		add	r3, r3, #5984
 10158 05e8 1033     		adds	r3, r3, #16
 10159 05ea 174A     		ldr	r2, .L690+16
 10160 05ec 1360     		str	r3, [r2]
 10161              	.L673:
2800:..\src/interruptions.c ****                 }
2801:..\src/interruptions.c ****                 rest_cycle_status = COUNTER_INC;
 10162              		.loc 1 2801 0
 10163 05ee 144B     		ldr	r3, .L690+8
 10164 05f0 0222     		movs	r2, #2
 10165 05f2 1A70     		strb	r2, [r3]
2802:..\src/interruptions.c ****             }
2803:..\src/interruptions.c ****             break;
 10166              		.loc 1 2803 0
 10167 05f4 18E0     		b	.L685
 10168              	.L669:
2804:..\src/interruptions.c ****         case COUNTER_INC: 
2805:..\src/interruptions.c ****             g_mem.cnt.total_time_rest = g_mem.cnt.total_time_rest + (uint32)((timer_value_s - timer
 10169              		.loc 1 2805 0
 10170 05f6 164B     		ldr	r3, .L690+24
 10171 05f8 DA6D     		ldr	r2, [r3, #92]
 10172 05fa 134B     		ldr	r3, .L690+16
 10173 05fc 1968     		ldr	r1, [r3]
 10174 05fe 134B     		ldr	r3, .L690+20
 10175 0600 1B68     		ldr	r3, [r3]
 10176 0602 CB1A     		subs	r3, r1, r3
 10177 0604 1349     		ldr	r1, .L690+28
 10178 0606 A1FB0313 		umull	r1, r3, r1, r3
 10179 060a 1B09     		lsrs	r3, r3, #4
 10180 060c 1344     		add	r3, r3, r2
 10181 060e 104A     		ldr	r2, .L690+24
 10182 0610 D365     		str	r3, [r2, #92]
2806:..\src/interruptions.c ****             g_mem.cnt.rest_counter = g_mem.cnt.rest_counter + 1;
 10183              		.loc 1 2806 0
 10184 0612 0F4B     		ldr	r3, .L690+24
 10185 0614 1B6D     		ldr	r3, [r3, #80]
 10186 0616 0133     		adds	r3, r3, #1
 10187 0618 0D4A     		ldr	r2, .L690+24
 10188 061a 1365     		str	r3, [r2, #80]
2807:..\src/interruptions.c ****             rest_cycle_status = STATE_INACTIVE;
 10189              		.loc 1 2807 0
 10190 061c 084B     		ldr	r3, .L690+8
 10191 061e 0022     		movs	r2, #0
 10192 0620 1A70     		strb	r2, [r3]
2808:..\src/interruptions.c ****             break;
 10193              		.loc 1 2808 0
 10194 0622 02E0     		b	.L667
 10195              	.L684:
2794:..\src/interruptions.c ****         case STATE_ACTIVE:
 10196              		.loc 1 2794 0
 10197 0624 00BF     		nop
 10198 0626 00E0     		b	.L667
 10199              	.L685:
2803:..\src/interruptions.c ****         case COUNTER_INC: 
 10200              		.loc 1 2803 0
 10201 0628 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 233


 10202              	.L667:
2809:..\src/interruptions.c ****     }
2810:..\src/interruptions.c ****           
2811:..\src/interruptions.c ****     // This function writes rows [row_start, row_end] on EEPROM
2812:..\src/interruptions.c ****     save_cycles_eeprom();
 10203              		.loc 1 2812 0
 10204 062a FFF7FEFF 		bl	save_cycles_eeprom
2813:..\src/interruptions.c ****     
2814:..\src/interruptions.c **** }
 10205              		.loc 1 2814 0
 10206 062e 00BF     		nop
 10207 0630 1C37     		adds	r7, r7, #28
 10208              		.cfi_def_cfa_offset 12
 10209 0632 BD46     		mov	sp, r7
 10210              		.cfi_def_cfa_register 13
 10211              		@ sp needed
 10212 0634 90BD     		pop	{r4, r7, pc}
 10213              	.L691:
 10214 0636 00BF     		.align	2
 10215              	.L690:
 10216 0638 00000000 		.word	emg_1_status
 10217 063c 00000000 		.word	emg_2_status
 10218 0640 B8010000 		.word	rest_cycle_status.10746
 10219 0644 00000000 		.word	rest_enabled
 10220 0648 BC010000 		.word	timer_value_s.10760
 10221 064c C0010000 		.word	timer_value_e.10761
 10222 0650 00000000 		.word	g_mem
 10223 0654 1F85EB51 		.word	1374389535
 10224              		.cfi_endproc
 10225              	.LFE77:
 10226              		.size	cycles_counter_update, .-cycles_counter_update
 10227              		.section	.text.save_cycles_eeprom,"ax",%progbits
 10228              		.align	2
 10229              		.global	save_cycles_eeprom
 10230              		.thumb
 10231              		.thumb_func
 10232              		.type	save_cycles_eeprom, %function
 10233              	save_cycles_eeprom:
 10234              	.LFB78:
2815:..\src/interruptions.c **** 
2816:..\src/interruptions.c **** //==============================================================================
2817:..\src/interruptions.c **** //                                                            SAVE CYCLES EEPROM
2818:..\src/interruptions.c **** //==============================================================================
2819:..\src/interruptions.c **** 
2820:..\src/interruptions.c **** void save_cycles_eeprom() {
 10235              		.loc 1 2820 0
 10236              		.cfi_startproc
 10237              		@ args = 0, pretend = 0, frame = 24
 10238              		@ frame_needed = 1, uses_anonymous_args = 0
 10239 0000 80B5     		push	{r7, lr}
 10240              		.cfi_def_cfa_offset 8
 10241              		.cfi_offset 7, -8
 10242              		.cfi_offset 14, -4
 10243 0002 86B0     		sub	sp, sp, #24
 10244              		.cfi_def_cfa_offset 32
 10245 0004 00AF     		add	r7, sp, #0
 10246              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 234


2821:..\src/interruptions.c **** 
2822:..\src/interruptions.c ****     cystatus status;
2823:..\src/interruptions.c ****     static uint8 row_number;
2824:..\src/interruptions.c ****     uint8 row_start = 1;
 10247              		.loc 1 2824 0
 10248 0006 0123     		movs	r3, #1
 10249 0008 FB75     		strb	r3, [r7, #23]
2825:..\src/interruptions.c ****     uint8* addr_start   = (uint8*)&g_mem.cnt.emg_act_counter[0];    //Data at beginning of the row 
 10250              		.loc 1 2825 0
 10251 000a 394B     		ldr	r3, .L708
 10252 000c 3B61     		str	r3, [r7, #16]
2826:..\src/interruptions.c ****     uint8* addr_start_c = (uint8*)&c_mem.cnt.emg_act_counter[0];
 10253              		.loc 1 2826 0
 10254 000e 394B     		ldr	r3, .L708+4
 10255 0010 FB60     		str	r3, [r7, #12]
2827:..\src/interruptions.c ****     uint8 row_end   = row_start + EEPROM_COUNTERS_ROWS - 1;
 10256              		.loc 1 2827 0
 10257 0012 FB7D     		ldrb	r3, [r7, #23]
 10258 0014 0633     		adds	r3, r3, #6
 10259 0016 FB72     		strb	r3, [r7, #11]
2828:..\src/interruptions.c ****     static uint8* m_addr = NULL; 
2829:..\src/interruptions.c **** 
2830:..\src/interruptions.c ****     // This part of code writes rows [row_start, row_end] on EEPROM    
2831:..\src/interruptions.c ****     switch(cycles_status) {
 10260              		.loc 1 2831 0
 10261 0018 374B     		ldr	r3, .L708+8
 10262 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10263 001c 042B     		cmp	r3, #4
 10264 001e 63D8     		bhi	.L704
 10265 0020 01A2     		adr	r2, .L695
 10266 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 10267 0026 00BF     		.p2align 2
 10268              	.L695:
 10269 0028 3D000000 		.word	.L694+1
 10270 002c 5B000000 		.word	.L696+1
 10271 0030 8B000000 		.word	.L697+1
 10272 0034 C7000000 		.word	.L698+1
 10273 0038 DF000000 		.word	.L705+1
 10274              		.p2align 1
 10275              	.L694:
2832:..\src/interruptions.c ****         case PREPARE_DATA:
2833:..\src/interruptions.c ****             // Store data in c_mem structure to have consistent counters
2834:..\src/interruptions.c ****             memcpy( addr_start_c, addr_start, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );            
 10276              		.loc 1 2834 0
 10277 003c 7022     		movs	r2, #112
 10278 003e 3969     		ldr	r1, [r7, #16]
 10279 0040 F868     		ldr	r0, [r7, #12]
 10280 0042 FFF7FEFF 		bl	memcpy
2835:..\src/interruptions.c ****             m_addr = addr_start;
 10281              		.loc 1 2835 0
 10282 0046 2D4A     		ldr	r2, .L708+12
 10283 0048 3B69     		ldr	r3, [r7, #16]
 10284 004a 1360     		str	r3, [r2]
2836:..\src/interruptions.c ****             row_number = row_start;
 10285              		.loc 1 2836 0
 10286 004c 2C4A     		ldr	r2, .L708+16
 10287 004e FB7D     		ldrb	r3, [r7, #23]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 235


 10288 0050 1370     		strb	r3, [r2]
2837:..\src/interruptions.c ****             cycles_status = WRITE_CYCLES;
 10289              		.loc 1 2837 0
 10290 0052 294B     		ldr	r3, .L708+8
 10291 0054 0122     		movs	r2, #1
 10292 0056 1A70     		strb	r2, [r3]
2838:..\src/interruptions.c ****             break;
 10293              		.loc 1 2838 0
 10294 0058 46E0     		b	.L693
 10295              	.L696:
2839:..\src/interruptions.c ****             
2840:..\src/interruptions.c ****         case WRITE_CYCLES:
2841:..\src/interruptions.c ****             EEPROM_UpdateTemperature();     //Check temperature of chip before writing
 10296              		.loc 1 2841 0
 10297 005a FFF7FEFF 		bl	EEPROM_UpdateTemperature
2842:..\src/interruptions.c ****             status = EEPROM_StartWrite((uint8*) m_addr, row_number);           
 10298              		.loc 1 2842 0
 10299 005e 274B     		ldr	r3, .L708+12
 10300 0060 1A68     		ldr	r2, [r3]
 10301 0062 274B     		ldr	r3, .L708+16
 10302 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10303 0066 1946     		mov	r1, r3
 10304 0068 1046     		mov	r0, r2
 10305 006a FFF7FEFF 		bl	EEPROM_StartWrite
 10306 006e 7860     		str	r0, [r7, #4]
2843:..\src/interruptions.c ****             if(status == CYRET_STARTED || status == CYRET_SUCCESS) {
 10307              		.loc 1 2843 0
 10308 0070 7B68     		ldr	r3, [r7, #4]
 10309 0072 072B     		cmp	r3, #7
 10310 0074 02D0     		beq	.L700
 10311              		.loc 1 2843 0 is_stmt 0 discriminator 1
 10312 0076 7B68     		ldr	r3, [r7, #4]
 10313 0078 002B     		cmp	r3, #0
 10314 007a 32D1     		bne	.L706
 10315              	.L700:
2844:..\src/interruptions.c ****                 cycles_status = WAIT_QUERY;
 10316              		.loc 1 2844 0 is_stmt 1
 10317 007c 1E4B     		ldr	r3, .L708+8
 10318 007e 0222     		movs	r2, #2
 10319 0080 1A70     		strb	r2, [r3]
2845:..\src/interruptions.c ****                 can_write = FALSE;
 10320              		.loc 1 2845 0
 10321 0082 204B     		ldr	r3, .L708+20
 10322 0084 0022     		movs	r2, #0
 10323 0086 1A70     		strb	r2, [r3]
2846:..\src/interruptions.c ****             }
2847:..\src/interruptions.c ****             break;
 10324              		.loc 1 2847 0
 10325 0088 2BE0     		b	.L706
 10326              	.L697:
2848:..\src/interruptions.c ****             
2849:..\src/interruptions.c ****         case WAIT_QUERY:
2850:..\src/interruptions.c ****             status = EEPROM_Query();
 10327              		.loc 1 2850 0
 10328 008a FFF7FEFF 		bl	EEPROM_Query
 10329 008e 7860     		str	r0, [r7, #4]
2851:..\src/interruptions.c ****             if(status == CYRET_SUCCESS) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 236


 10330              		.loc 1 2851 0
 10331 0090 7B68     		ldr	r3, [r7, #4]
 10332 0092 002B     		cmp	r3, #0
 10333 0094 27D1     		bne	.L707
2852:..\src/interruptions.c ****                 if (row_number < row_end) {
 10334              		.loc 1 2852 0
 10335 0096 1A4B     		ldr	r3, .L708+16
 10336 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10337 009a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 10338 009c 9A42     		cmp	r2, r3
 10339 009e 0ED9     		bls	.L703
2853:..\src/interruptions.c ****                     m_addr = m_addr + EEPROM_BYTES_ROW;
 10340              		.loc 1 2853 0
 10341 00a0 164B     		ldr	r3, .L708+12
 10342 00a2 1B68     		ldr	r3, [r3]
 10343 00a4 1033     		adds	r3, r3, #16
 10344 00a6 154A     		ldr	r2, .L708+12
 10345 00a8 1360     		str	r3, [r2]
2854:..\src/interruptions.c ****                     row_number = row_number + 1;
 10346              		.loc 1 2854 0
 10347 00aa 154B     		ldr	r3, .L708+16
 10348 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10349 00ae 0133     		adds	r3, r3, #1
 10350 00b0 DAB2     		uxtb	r2, r3
 10351 00b2 134B     		ldr	r3, .L708+16
 10352 00b4 1A70     		strb	r2, [r3]
2855:..\src/interruptions.c ****                     cycles_status = WRITE_CYCLES;
 10353              		.loc 1 2855 0
 10354 00b6 104B     		ldr	r3, .L708+8
 10355 00b8 0122     		movs	r2, #1
 10356 00ba 1A70     		strb	r2, [r3]
2856:..\src/interruptions.c ****                 }
2857:..\src/interruptions.c ****                 else {
2858:..\src/interruptions.c ****                     cycles_status = WRITE_END;
2859:..\src/interruptions.c ****                 }
2860:..\src/interruptions.c ****             }
2861:..\src/interruptions.c ****             break;
 10357              		.loc 1 2861 0
 10358 00bc 13E0     		b	.L707
 10359              	.L703:
2858:..\src/interruptions.c ****                 }
 10360              		.loc 1 2858 0
 10361 00be 0E4B     		ldr	r3, .L708+8
 10362 00c0 0322     		movs	r2, #3
 10363 00c2 1A70     		strb	r2, [r3]
 10364              		.loc 1 2861 0
 10365 00c4 0FE0     		b	.L707
 10366              	.L698:
2862:..\src/interruptions.c ****            
2863:..\src/interruptions.c ****         case WRITE_END:
2864:..\src/interruptions.c ****             can_write = TRUE;            
 10367              		.loc 1 2864 0
 10368 00c6 0F4B     		ldr	r3, .L708+20
 10369 00c8 0122     		movs	r2, #1
 10370 00ca 1A70     		strb	r2, [r3]
2865:..\src/interruptions.c ****             cycles_status = NONE;
 10371              		.loc 1 2865 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 237


 10372 00cc 0A4B     		ldr	r3, .L708+8
 10373 00ce 0422     		movs	r2, #4
 10374 00d0 1A70     		strb	r2, [r3]
2866:..\src/interruptions.c ****             
2867:..\src/interruptions.c ****             // Restore data saved in c_mem structure
2868:..\src/interruptions.c ****             memcpy( addr_start, addr_start_c, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );
 10375              		.loc 1 2868 0
 10376 00d2 7022     		movs	r2, #112
 10377 00d4 F968     		ldr	r1, [r7, #12]
 10378 00d6 3869     		ldr	r0, [r7, #16]
 10379 00d8 FFF7FEFF 		bl	memcpy
2869:..\src/interruptions.c ****             break;
 10380              		.loc 1 2869 0
 10381 00dc 04E0     		b	.L693
 10382              	.L705:
2870:..\src/interruptions.c ****             
2871:..\src/interruptions.c ****         case NONE:
2872:..\src/interruptions.c ****             break;
 10383              		.loc 1 2872 0
 10384 00de 00BF     		nop
 10385 00e0 02E0     		b	.L704
 10386              	.L706:
2847:..\src/interruptions.c ****             
 10387              		.loc 1 2847 0
 10388 00e2 00BF     		nop
 10389 00e4 00E0     		b	.L704
 10390              	.L707:
2861:..\src/interruptions.c ****            
 10391              		.loc 1 2861 0
 10392 00e6 00BF     		nop
 10393              	.L693:
 10394              	.L704:
2873:..\src/interruptions.c ****     }
2874:..\src/interruptions.c ****     
2875:..\src/interruptions.c **** }
 10395              		.loc 1 2875 0
 10396 00e8 00BF     		nop
 10397 00ea 1837     		adds	r7, r7, #24
 10398              		.cfi_def_cfa_offset 8
 10399 00ec BD46     		mov	sp, r7
 10400              		.cfi_def_cfa_register 13
 10401              		@ sp needed
 10402 00ee 80BD     		pop	{r7, pc}
 10403              	.L709:
 10404              		.align	2
 10405              	.L708:
 10406 00f0 10000000 		.word	g_mem+16
 10407 00f4 10000000 		.word	c_mem+16
 10408 00f8 00000000 		.word	cycles_status
 10409 00fc C4010000 		.word	m_addr.10805
 10410 0100 C8010000 		.word	row_number.10800
 10411 0104 00000000 		.word	can_write
 10412              		.cfi_endproc
 10413              	.LFE78:
 10414              		.size	save_cycles_eeprom, .-save_cycles_eeprom
 10415              		.bss
 10416              	state.10463:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 238


 10417 0000 00       		.space	1
 10418 0001 000000   		.align	2
 10419              	rx_queue.10467:
 10420 0004 000000   		.space	3
 10421              	data_packet_length.10465:
 10422 0007 00       		.space	1
 10423              	data_packet_index.10464:
 10424 0008 00       		.space	1
 10425 0009 000000   		.align	2
 10426              	data_packet_buffer.10466:
 10427 000c 00000000 		.space	128
 10427      00000000 
 10427      00000000 
 10427      00000000 
 10427      00000000 
 10428              		.data
 10429              		.align	1
 10430              		.type	counter_calibration.10483, %object
 10431              		.size	counter_calibration.10483, 2
 10432              	counter_calibration.10483:
 10433 0000 0100     		.short	1
 10434              		.align	1
 10435              		.type	counter_tension_func.10484, %object
 10436              		.size	counter_tension_func.10484, 2
 10437              	counter_tension_func.10484:
 10438 0002 0100     		.short	1
 10439              		.bss
 10440              		.align	2
 10441              	current_emg.10509:
 10442 008c 0000     		.space	2
 10443              	fsm_state.10546:
 10444 008e 00       		.space	1
 10445 008f 00       		.align	2
 10446              	pos_error_sum.10573:
 10447 0090 00000000 		.space	4
 10448              		.align	2
 10449              	prev_pos_err.10575:
 10450 0094 00000000 		.space	4
 10451              	motor_dir.10578:
 10452 0098 00       		.space	1
 10453 0099 000000   		.align	2
 10454              	curr_error_sum.10574:
 10455 009c 00000000 		.space	4
 10456              		.align	2
 10457              	prev_curr_err.10576:
 10458 00a0 00000000 		.space	4
 10459              		.align	2
 10460              	prev_pwm.10577:
 10461 00a4 00000000 		.space	4
 10462              		.align	2
 10463              	position_counter.10579:
 10464 00a8 00000000 		.space	4
 10465              		.align	2
 10466              	pos_error_sum.10606:
 10467 00ac 00000000 		.space	8
 10467      00000000 
 10468              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 239


 10469              	prev_pos_err.10608:
 10470 00b4 00000000 		.space	8
 10470      00000000 
 10471              		.align	2
 10472              	motor_dir.10611:
 10473 00bc 0000     		.space	2
 10474 00be 0000     		.align	2
 10475              	curr_error_sum.10607:
 10476 00c0 00000000 		.space	8
 10476      00000000 
 10477              		.align	2
 10478              	prev_curr_err.10609:
 10479 00c8 00000000 		.space	8
 10479      00000000 
 10480              		.align	2
 10481              	prev_pwm.10610:
 10482 00d0 00000000 		.space	8
 10482      00000000 
 10483              		.align	2
 10484              	position_counter.10612:
 10485 00d8 00000000 		.space	8
 10485      00000000 
 10486              		.align	2
 10487              	last_value_encoder.10635:
 10488 00e0 00000000 		.space	24
 10488      00000000 
 10488      00000000 
 10488      00000000 
 10488      00000000 
 10489              		.align	2
 10490              	comp_value_encoder.10636:
 10491 00f8 00000000 		.space	24
 10491      00000000 
 10491      00000000 
 10491      00000000 
 10491      00000000 
 10492              		.data
 10493              		.align	2
 10494              		.type	only_first_time.10638, %object
 10495              		.size	only_first_time.10638, 2
 10496              	only_first_time.10638:
 10497 0004 01       		.byte	1
 10498 0005 01       		.byte	1
 10499              		.bss
 10500              		.align	2
 10501              	error.10637:
 10502 0110 00000000 		.space	6
 10502      0000
 10503 0116 0000     		.align	2
 10504              	v_value.10642:
 10505 0118 00000000 		.space	24
 10505      00000000 
 10505      00000000 
 10505      00000000 
 10505      00000000 
 10506              		.align	2
 10507              	vv_value.10643:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 240


 10508 0130 00000000 		.space	24
 10508      00000000 
 10508      00000000 
 10508      00000000 
 10508      00000000 
 10509              		.align	2
 10510              	vvv_value.10644:
 10511 0148 00000000 		.space	24
 10511      00000000 
 10511      00000000 
 10511      00000000 
 10511      00000000 
 10512              		.align	2
 10513              	one_time_execute.10640:
 10514 0160 0000     		.space	2
 10515 0162 0000     		.align	2
 10516              	safe_startup_motor_activation.10639:
 10517 0164 0000     		.space	2
 10518 0166 0000     		.align	2
 10519              	count_startup_motor.10641:
 10520 0168 00000000 		.space	8
 10520      00000000 
 10521              		.data
 10522 0006 0000     		.align	2
 10523              		.type	detect_power_cycle_prev.10668, %object
 10524              		.size	detect_power_cycle_prev.10668, 4
 10525              	detect_power_cycle_prev.10668:
 10526 0008 FDFFFFFF 		.word	-3
 10527              		.type	first_tension_valid.10667, %object
 10528              		.size	first_tension_valid.10667, 1
 10529              	first_tension_valid.10667:
 10530 000c 01       		.byte	1
 10531              		.bss
 10532              		.align	1
 10533              	count.10669:
 10534 0170 0000     		.space	2
 10535              	idx.10671:
 10536 0172 00       		.space	1
 10537 0173 00       		.align	2
 10538              	v_count.10670:
 10539 0174 00000000 		.space	4
 10540              		.align	1
 10541              	emg_counter_1.10661:
 10542 0178 0000     		.space	2
 10543              		.align	1
 10544              	emg_counter_2.10662:
 10545 017a 0000     		.space	2
 10546              		.align	2
 10547              	UD_mean_value.10665:
 10548 017c 00000000 		.space	4
 10549              		.align	1
 10550              	UD_counter.10663:
 10551 0180 0000     		.space	2
 10552 0182 0000     		.align	2
 10553              	LR_mean_value.10666:
 10554 0184 00000000 		.space	4
 10555              		.align	1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 241


 10556              	LR_counter.10664:
 10557 0188 0000     		.space	2
 10558              	pos_cycle_status.10742:
 10559 018a 00       		.space	1
 10560 018b 00       		.align	2
 10561              	thr_pos.10749:
 10562 018c 00000000 		.space	4
 10563              		.align	2
 10564              	max_pos.10750:
 10565 0190 00000000 		.space	4
 10566              		.data
 10567 000d 000000   		.align	2
 10568              		.type	bin_threshold.10747, %object
 10569              		.size	bin_threshold.10747, 4
 10570              	bin_threshold.10747:
 10571 0010 FA000000 		.word	250
 10572              		.bss
 10573              		.align	2
 10574              	emg_cycle_status.10743:
 10575 0194 0000     		.space	2
 10576 0196 0000     		.align	2
 10577              	motion_status.10744:
 10578 0198 0000     		.space	2
 10579 019a 0000     		.align	2
 10580              	start_emg_pos.10764:
 10581 019c 00000000 		.space	8
 10581      00000000 
 10582              		.align	2
 10583              	emg_excess_status.10745:
 10584 01a4 0000     		.space	2
 10585              		.data
 10586              		.align	2
 10587              		.type	exc_act_thr.10748, %object
 10588              		.size	exc_act_thr.10748, 4
 10589              	exc_act_thr.10748:
 10590 0014 D4030000 		.word	980
 10591              		.bss
 10592 01a6 0000     		.align	2
 10593              	timer_exc_s.10762:
 10594 01a8 00000000 		.space	8
 10594      00000000 
 10595              		.align	2
 10596              	timer_exc_e.10763:
 10597 01b0 00000000 		.space	8
 10597      00000000 
 10598              	rest_cycle_status.10746:
 10599 01b8 00       		.space	1
 10600 01b9 000000   		.align	2
 10601              	timer_value_s.10760:
 10602 01bc 00000000 		.space	4
 10603              		.align	2
 10604              	timer_value_e.10761:
 10605 01c0 00000000 		.space	4
 10606              		.align	2
 10607              	m_addr.10805:
 10608 01c4 00000000 		.space	4
 10609              	row_number.10800:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 242


 10610 01c8 00       		.space	1
 10611              		.text
 10612              	.Letext0:
 10613              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 10614              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 10615              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 10616              		.file 5 "..\\src\\commands.h"
 10617              		.file 6 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 10618              		.file 7 "..\\src\\globals.h"
 10619              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 10620              		.section	.debug_info,"",%progbits
 10621              	.Ldebug_info0:
 10622 0000 181C0000 		.4byte	0x1c18
 10623 0004 0400     		.2byte	0x4
 10624 0006 00000000 		.4byte	.Ldebug_abbrev0
 10625 000a 04       		.byte	0x4
 10626 000b 01       		.uleb128 0x1
 10627 000c C2080000 		.4byte	.LASF357
 10628 0010 0C       		.byte	0xc
 10629 0011 D5110000 		.4byte	.LASF358
 10630 0015 270D0000 		.4byte	.LASF359
 10631 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 10632 001d 00000000 		.4byte	0
 10633 0021 00000000 		.4byte	.Ldebug_line0
 10634 0025 02       		.uleb128 0x2
 10635 0026 01       		.byte	0x1
 10636 0027 06       		.byte	0x6
 10637 0028 F9030000 		.4byte	.LASF0
 10638 002c 02       		.uleb128 0x2
 10639 002d 01       		.byte	0x1
 10640 002e 08       		.byte	0x8
 10641 002f 76040000 		.4byte	.LASF1
 10642 0033 02       		.uleb128 0x2
 10643 0034 02       		.byte	0x2
 10644 0035 05       		.byte	0x5
 10645 0036 A60F0000 		.4byte	.LASF2
 10646 003a 02       		.uleb128 0x2
 10647 003b 02       		.byte	0x2
 10648 003c 07       		.byte	0x7
 10649 003d 79110000 		.4byte	.LASF3
 10650 0041 03       		.uleb128 0x3
 10651 0042 6B120000 		.4byte	.LASF9
 10652 0046 02       		.byte	0x2
 10653 0047 3F       		.byte	0x3f
 10654 0048 4C000000 		.4byte	0x4c
 10655 004c 02       		.uleb128 0x2
 10656 004d 04       		.byte	0x4
 10657 004e 05       		.byte	0x5
 10658 004f D6020000 		.4byte	.LASF4
 10659 0053 02       		.uleb128 0x2
 10660 0054 04       		.byte	0x4
 10661 0055 07       		.byte	0x7
 10662 0056 C3070000 		.4byte	.LASF5
 10663 005a 02       		.uleb128 0x2
 10664 005b 08       		.byte	0x8
 10665 005c 05       		.byte	0x5
 10666 005d 88090000 		.4byte	.LASF6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 243


 10667 0061 02       		.uleb128 0x2
 10668 0062 08       		.byte	0x8
 10669 0063 07       		.byte	0x7
 10670 0064 880C0000 		.4byte	.LASF7
 10671 0068 04       		.uleb128 0x4
 10672 0069 04       		.byte	0x4
 10673 006a 05       		.byte	0x5
 10674 006b 696E7400 		.ascii	"int\000"
 10675 006f 02       		.uleb128 0x2
 10676 0070 04       		.byte	0x4
 10677 0071 07       		.byte	0x7
 10678 0072 B00A0000 		.4byte	.LASF8
 10679 0076 03       		.uleb128 0x3
 10680 0077 8B000000 		.4byte	.LASF10
 10681 007b 03       		.byte	0x3
 10682 007c 2C       		.byte	0x2c
 10683 007d 41000000 		.4byte	0x41
 10684 0081 05       		.uleb128 0x5
 10685 0082 800F0000 		.4byte	.LASF11
 10686 0086 04       		.byte	0x4
 10687 0087 E401     		.2byte	0x1e4
 10688 0089 2C000000 		.4byte	0x2c
 10689 008d 05       		.uleb128 0x5
 10690 008e C8120000 		.4byte	.LASF12
 10691 0092 04       		.byte	0x4
 10692 0093 E501     		.2byte	0x1e5
 10693 0095 3A000000 		.4byte	0x3a
 10694 0099 05       		.uleb128 0x5
 10695 009a BF000000 		.4byte	.LASF13
 10696 009e 04       		.byte	0x4
 10697 009f E601     		.2byte	0x1e6
 10698 00a1 53000000 		.4byte	0x53
 10699 00a5 05       		.uleb128 0x5
 10700 00a6 A3010000 		.4byte	.LASF14
 10701 00aa 04       		.byte	0x4
 10702 00ab E701     		.2byte	0x1e7
 10703 00ad 25000000 		.4byte	0x25
 10704 00b1 05       		.uleb128 0x5
 10705 00b2 65100000 		.4byte	.LASF15
 10706 00b6 04       		.byte	0x4
 10707 00b7 E801     		.2byte	0x1e8
 10708 00b9 33000000 		.4byte	0x33
 10709 00bd 05       		.uleb128 0x5
 10710 00be F8110000 		.4byte	.LASF16
 10711 00c2 04       		.byte	0x4
 10712 00c3 E901     		.2byte	0x1e9
 10713 00c5 4C000000 		.4byte	0x4c
 10714 00c9 05       		.uleb128 0x5
 10715 00ca A1030000 		.4byte	.LASF17
 10716 00ce 04       		.byte	0x4
 10717 00cf EA01     		.2byte	0x1ea
 10718 00d1 D5000000 		.4byte	0xd5
 10719 00d5 02       		.uleb128 0x2
 10720 00d6 04       		.byte	0x4
 10721 00d7 04       		.byte	0x4
 10722 00d8 700A0000 		.4byte	.LASF18
 10723 00dc 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 244


 10724 00dd 08       		.byte	0x8
 10725 00de 04       		.byte	0x4
 10726 00df CB090000 		.4byte	.LASF19
 10727 00e3 02       		.uleb128 0x2
 10728 00e4 01       		.byte	0x1
 10729 00e5 08       		.byte	0x8
 10730 00e6 11050000 		.4byte	.LASF20
 10731 00ea 05       		.uleb128 0x5
 10732 00eb E90A0000 		.4byte	.LASF21
 10733 00ef 04       		.byte	0x4
 10734 00f0 8602     		.2byte	0x286
 10735 00f2 53000000 		.4byte	0x53
 10736 00f6 05       		.uleb128 0x5
 10737 00f7 F20D0000 		.4byte	.LASF22
 10738 00fb 04       		.byte	0x4
 10739 00fc 8E02     		.2byte	0x28e
 10740 00fe 02010000 		.4byte	0x102
 10741 0102 06       		.uleb128 0x6
 10742 0103 81000000 		.4byte	0x81
 10743 0107 02       		.uleb128 0x2
 10744 0108 08       		.byte	0x8
 10745 0109 04       		.byte	0x4
 10746 010a 9B0B0000 		.4byte	.LASF23
 10747 010e 02       		.uleb128 0x2
 10748 010f 04       		.byte	0x4
 10749 0110 07       		.byte	0x7
 10750 0111 10000000 		.4byte	.LASF24
 10751 0115 07       		.uleb128 0x7
 10752 0116 E3000000 		.4byte	0xe3
 10753 011a 25010000 		.4byte	0x125
 10754 011e 08       		.uleb128 0x8
 10755 011f 0E010000 		.4byte	0x10e
 10756 0123 07       		.byte	0x7
 10757 0124 00       		.byte	0
 10758 0125 09       		.uleb128 0x9
 10759 0126 A5120000 		.4byte	.LASF33
 10760 012a 01       		.byte	0x1
 10761 012b 2C000000 		.4byte	0x2c
 10762 012f 05       		.byte	0x5
 10763 0130 8F       		.byte	0x8f
 10764 0131 66010000 		.4byte	0x166
 10765 0135 0A       		.uleb128 0xa
 10766 0136 36070000 		.4byte	.LASF25
 10767 013a 00       		.byte	0
 10768 013b 0A       		.uleb128 0xa
 10769 013c F20A0000 		.4byte	.LASF26
 10770 0140 01       		.byte	0x1
 10771 0141 0A       		.uleb128 0xa
 10772 0142 2E020000 		.4byte	.LASF27
 10773 0146 02       		.byte	0x2
 10774 0147 0A       		.uleb128 0xa
 10775 0148 71010000 		.4byte	.LASF28
 10776 014c 03       		.byte	0x3
 10777 014d 0A       		.uleb128 0xa
 10778 014e 2B010000 		.4byte	.LASF29
 10779 0152 04       		.byte	0x4
 10780 0153 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 245


 10781 0154 53000000 		.4byte	.LASF30
 10782 0158 05       		.byte	0x5
 10783 0159 0A       		.uleb128 0xa
 10784 015a 05080000 		.4byte	.LASF31
 10785 015e 06       		.byte	0x6
 10786 015f 0A       		.uleb128 0xa
 10787 0160 160F0000 		.4byte	.LASF32
 10788 0164 07       		.byte	0x7
 10789 0165 00       		.byte	0
 10790 0166 09       		.uleb128 0x9
 10791 0167 96090000 		.4byte	.LASF34
 10792 016b 01       		.byte	0x1
 10793 016c 2C000000 		.4byte	0x2c
 10794 0170 05       		.byte	0x5
 10795 0171 A3       		.byte	0xa3
 10796 0172 8F010000 		.4byte	0x18f
 10797 0176 0A       		.uleb128 0xa
 10798 0177 5D120000 		.4byte	.LASF35
 10799 017b 00       		.byte	0
 10800 017c 0A       		.uleb128 0xa
 10801 017d A0080000 		.4byte	.LASF36
 10802 0181 01       		.byte	0x1
 10803 0182 0A       		.uleb128 0xa
 10804 0183 8B0B0000 		.4byte	.LASF37
 10805 0187 02       		.byte	0x2
 10806 0188 0A       		.uleb128 0xa
 10807 0189 A6070000 		.4byte	.LASF38
 10808 018d 03       		.byte	0x3
 10809 018e 00       		.byte	0
 10810 018f 03       		.uleb128 0x3
 10811 0190 28120000 		.4byte	.LASF39
 10812 0194 06       		.byte	0x6
 10813 0195 7E       		.byte	0x7e
 10814 0196 9A010000 		.4byte	0x19a
 10815 019a 0B       		.uleb128 0xb
 10816 019b 28120000 		.4byte	.LASF39
 10817 019f 0C       		.uleb128 0xc
 10818 01a0 04       		.byte	0x4
 10819 01a1 8F010000 		.4byte	0x18f
 10820 01a5 0D       		.uleb128 0xd
 10821 01a6 50090000 		.4byte	.LASF42
 10822 01aa 10       		.byte	0x10
 10823 01ab 07       		.byte	0x7
 10824 01ac E5       		.byte	0xe5
 10825 01ad E2010000 		.4byte	0x1e2
 10826 01b1 0E       		.uleb128 0xe
 10827 01b2 706F7300 		.ascii	"pos\000"
 10828 01b6 07       		.byte	0x7
 10829 01b7 E6       		.byte	0xe6
 10830 01b8 BD000000 		.4byte	0xbd
 10831 01bc 00       		.byte	0
 10832 01bd 0F       		.uleb128 0xf
 10833 01be 85080000 		.4byte	.LASF40
 10834 01c2 07       		.byte	0x7
 10835 01c3 E7       		.byte	0xe7
 10836 01c4 BD000000 		.4byte	0xbd
 10837 01c8 04       		.byte	0x4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 246


 10838 01c9 0E       		.uleb128 0xe
 10839 01ca 70776D00 		.ascii	"pwm\000"
 10840 01ce 07       		.byte	0x7
 10841 01cf E8       		.byte	0xe8
 10842 01d0 BD000000 		.4byte	0xbd
 10843 01d4 08       		.byte	0x8
 10844 01d5 0F       		.uleb128 0xf
 10845 01d6 EB0C0000 		.4byte	.LASF41
 10846 01da 07       		.byte	0x7
 10847 01db E9       		.byte	0xe9
 10848 01dc 81000000 		.4byte	0x81
 10849 01e0 0C       		.byte	0xc
 10850 01e1 00       		.byte	0
 10851 01e2 0D       		.uleb128 0xd
 10852 01e3 DD0E0000 		.4byte	.LASF43
 10853 01e7 34       		.byte	0x34
 10854 01e8 07       		.byte	0x7
 10855 01e9 F0       		.byte	0xf0
 10856 01ea 43020000 		.4byte	0x243
 10857 01ee 0E       		.uleb128 0xe
 10858 01ef 706F7300 		.ascii	"pos\000"
 10859 01f3 07       		.byte	0x7
 10860 01f4 F1       		.byte	0xf1
 10861 01f5 43020000 		.4byte	0x243
 10862 01f9 00       		.byte	0
 10863 01fa 0F       		.uleb128 0xf
 10864 01fb 85080000 		.4byte	.LASF40
 10865 01ff 07       		.byte	0x7
 10866 0200 F2       		.byte	0xf2
 10867 0201 BD000000 		.4byte	0xbd
 10868 0205 0C       		.byte	0xc
 10869 0206 0F       		.uleb128 0xf
 10870 0207 A8100000 		.4byte	.LASF44
 10871 020b 07       		.byte	0x7
 10872 020c F3       		.byte	0xf3
 10873 020d BD000000 		.4byte	0xbd
 10874 0211 10       		.byte	0x10
 10875 0212 0F       		.uleb128 0xf
 10876 0213 FB070000 		.4byte	.LASF45
 10877 0217 07       		.byte	0x7
 10878 0218 F4       		.byte	0xf4
 10879 0219 BD000000 		.4byte	0xbd
 10880 021d 14       		.byte	0x14
 10881 021e 0E       		.uleb128 0xe
 10882 021f 726F7400 		.ascii	"rot\000"
 10883 0223 07       		.byte	0x7
 10884 0224 F5       		.byte	0xf5
 10885 0225 53020000 		.4byte	0x253
 10886 0229 18       		.byte	0x18
 10887 022a 0E       		.uleb128 0xe
 10888 022b 76656C00 		.ascii	"vel\000"
 10889 022f 07       		.byte	0x7
 10890 0230 F6       		.byte	0xf6
 10891 0231 43020000 		.4byte	0x243
 10892 0235 1C       		.byte	0x1c
 10893 0236 0E       		.uleb128 0xe
 10894 0237 61636300 		.ascii	"acc\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 247


 10895 023b 07       		.byte	0x7
 10896 023c F7       		.byte	0xf7
 10897 023d 43020000 		.4byte	0x243
 10898 0241 28       		.byte	0x28
 10899 0242 00       		.byte	0
 10900 0243 07       		.uleb128 0x7
 10901 0244 BD000000 		.4byte	0xbd
 10902 0248 53020000 		.4byte	0x253
 10903 024c 08       		.uleb128 0x8
 10904 024d 0E010000 		.4byte	0x10e
 10905 0251 02       		.byte	0x2
 10906 0252 00       		.byte	0
 10907 0253 07       		.uleb128 0x7
 10908 0254 A5000000 		.4byte	0xa5
 10909 0258 63020000 		.4byte	0x263
 10910 025c 08       		.uleb128 0x8
 10911 025d 0E010000 		.4byte	0x10e
 10912 0261 02       		.byte	0x2
 10913 0262 00       		.byte	0
 10914 0263 0D       		.uleb128 0xd
 10915 0264 850A0000 		.4byte	.LASF46
 10916 0268 28       		.byte	0x28
 10917 0269 07       		.byte	0x7
 10918 026a FA       		.byte	0xfa
 10919 026b 94020000 		.4byte	0x294
 10920 026f 0E       		.uleb128 0xe
 10921 0270 656D6700 		.ascii	"emg\000"
 10922 0274 07       		.byte	0x7
 10923 0275 FB       		.byte	0xfb
 10924 0276 94020000 		.4byte	0x294
 10925 027a 00       		.byte	0
 10926 027b 0F       		.uleb128 0xf
 10927 027c 3C0B0000 		.4byte	.LASF47
 10928 0280 07       		.byte	0x7
 10929 0281 FC       		.byte	0xfc
 10930 0282 A4020000 		.4byte	0x2a4
 10931 0286 08       		.byte	0x8
 10932 0287 0F       		.uleb128 0xf
 10933 0288 C50F0000 		.4byte	.LASF48
 10934 028c 07       		.byte	0x7
 10935 028d FD       		.byte	0xfd
 10936 028e 94020000 		.4byte	0x294
 10937 0292 20       		.byte	0x20
 10938 0293 00       		.byte	0
 10939 0294 07       		.uleb128 0x7
 10940 0295 BD000000 		.4byte	0xbd
 10941 0299 A4020000 		.4byte	0x2a4
 10942 029d 08       		.uleb128 0x8
 10943 029e 0E010000 		.4byte	0x10e
 10944 02a2 01       		.byte	0x1
 10945 02a3 00       		.byte	0
 10946 02a4 07       		.uleb128 0x7
 10947 02a5 BD000000 		.4byte	0xbd
 10948 02a9 B4020000 		.4byte	0x2b4
 10949 02ad 08       		.uleb128 0x8
 10950 02ae 0E010000 		.4byte	0x10e
 10951 02b2 05       		.byte	0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 248


 10952 02b3 00       		.byte	0
 10953 02b4 10       		.uleb128 0x10
 10954 02b5 8B050000 		.4byte	.LASF49
 10955 02b9 04       		.byte	0x4
 10956 02ba 07       		.byte	0x7
 10957 02bb 0001     		.2byte	0x100
 10958 02bd CF020000 		.4byte	0x2cf
 10959 02c1 11       		.uleb128 0x11
 10960 02c2 08050000 		.4byte	.LASF50
 10961 02c6 07       		.byte	0x7
 10962 02c7 0101     		.2byte	0x101
 10963 02c9 D5000000 		.4byte	0xd5
 10964 02cd 00       		.byte	0
 10965 02ce 00       		.byte	0
 10966 02cf 10       		.uleb128 0x10
 10967 02d0 A9000000 		.4byte	.LASF51
 10968 02d4 86       		.byte	0x86
 10969 02d5 07       		.byte	0x7
 10970 02d6 0801     		.2byte	0x108
 10971 02d8 11030000 		.4byte	0x311
 10972 02dc 11       		.uleb128 0x11
 10973 02dd 40060000 		.4byte	.LASF52
 10974 02e1 07       		.byte	0x7
 10975 02e2 0901     		.2byte	0x109
 10976 02e4 11030000 		.4byte	0x311
 10977 02e8 00       		.byte	0
 10978 02e9 11       		.uleb128 0x11
 10979 02ea CE0C0000 		.4byte	.LASF53
 10980 02ee 07       		.byte	0x7
 10981 02ef 0A01     		.2byte	0x10a
 10982 02f1 B1000000 		.4byte	0xb1
 10983 02f5 80       		.byte	0x80
 10984 02f6 12       		.uleb128 0x12
 10985 02f7 696E6400 		.ascii	"ind\000"
 10986 02fb 07       		.byte	0x7
 10987 02fc 0B01     		.2byte	0x10b
 10988 02fe B1000000 		.4byte	0xb1
 10989 0302 82       		.byte	0x82
 10990 0303 11       		.uleb128 0x11
 10991 0304 01020000 		.4byte	.LASF54
 10992 0308 07       		.byte	0x7
 10993 0309 0C01     		.2byte	0x10c
 10994 030b 81000000 		.4byte	0x81
 10995 030f 84       		.byte	0x84
 10996 0310 00       		.byte	0
 10997 0311 07       		.uleb128 0x7
 10998 0312 81000000 		.4byte	0x81
 10999 0316 21030000 		.4byte	0x321
 11000 031a 08       		.uleb128 0x8
 11001 031b 0E010000 		.4byte	0x10e
 11002 031f 7F       		.byte	0x7f
 11003 0320 00       		.byte	0
 11004 0321 10       		.uleb128 0x10
 11005 0322 7F030000 		.4byte	.LASF55
 11006 0326 70       		.byte	0x70
 11007 0327 07       		.byte	0x7
 11008 0328 1501     		.2byte	0x115
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 249


 11009 032a BE030000 		.4byte	0x3be
 11010 032e 11       		.uleb128 0x11
 11011 032f 00000000 		.4byte	.LASF56
 11012 0333 07       		.byte	0x7
 11013 0334 1601     		.2byte	0x116
 11014 0336 BE030000 		.4byte	0x3be
 11015 033a 00       		.byte	0
 11016 033b 11       		.uleb128 0x11
 11017 033c BE010000 		.4byte	.LASF57
 11018 0340 07       		.byte	0x7
 11019 0341 1701     		.2byte	0x117
 11020 0343 CE030000 		.4byte	0x3ce
 11021 0347 08       		.byte	0x8
 11022 0348 11       		.uleb128 0x11
 11023 0349 7E0B0000 		.4byte	.LASF58
 11024 034d 07       		.byte	0x7
 11025 034e 1801     		.2byte	0x118
 11026 0350 DE030000 		.4byte	0x3de
 11027 0354 30       		.byte	0x30
 11028 0355 11       		.uleb128 0x11
 11029 0356 55010000 		.4byte	.LASF59
 11030 035a 07       		.byte	0x7
 11031 035b 1901     		.2byte	0x119
 11032 035d 99000000 		.4byte	0x99
 11033 0361 40       		.byte	0x40
 11034 0362 11       		.uleb128 0x11
 11035 0363 75120000 		.4byte	.LASF60
 11036 0367 07       		.byte	0x7
 11037 0368 1A01     		.2byte	0x11a
 11038 036a 99000000 		.4byte	0x99
 11039 036e 44       		.byte	0x44
 11040 036f 11       		.uleb128 0x11
 11041 0370 B1000000 		.4byte	.LASF61
 11042 0374 07       		.byte	0x7
 11043 0375 1B01     		.2byte	0x11b
 11044 0377 99000000 		.4byte	0x99
 11045 037b 48       		.byte	0x48
 11046 037c 11       		.uleb128 0x11
 11047 037d 19080000 		.4byte	.LASF62
 11048 0381 07       		.byte	0x7
 11049 0382 1C01     		.2byte	0x11c
 11050 0384 99000000 		.4byte	0x99
 11051 0388 4C       		.byte	0x4c
 11052 0389 11       		.uleb128 0x11
 11053 038a 19000000 		.4byte	.LASF63
 11054 038e 07       		.byte	0x7
 11055 038f 1D01     		.2byte	0x11d
 11056 0391 99000000 		.4byte	0x99
 11057 0395 50       		.byte	0x50
 11058 0396 11       		.uleb128 0x11
 11059 0397 68020000 		.4byte	.LASF64
 11060 039b 07       		.byte	0x7
 11061 039c 1E01     		.2byte	0x11e
 11062 039e BE030000 		.4byte	0x3be
 11063 03a2 54       		.byte	0x54
 11064 03a3 11       		.uleb128 0x11
 11065 03a4 D40B0000 		.4byte	.LASF65
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 250


 11066 03a8 07       		.byte	0x7
 11067 03a9 1F01     		.2byte	0x11f
 11068 03ab BE030000 		.4byte	0x3be
 11069 03af 5C       		.byte	0x5c
 11070 03b0 11       		.uleb128 0x11
 11071 03b1 4C030000 		.4byte	.LASF66
 11072 03b5 07       		.byte	0x7
 11073 03b6 2001     		.2byte	0x120
 11074 03b8 EE030000 		.4byte	0x3ee
 11075 03bc 64       		.byte	0x64
 11076 03bd 00       		.byte	0
 11077 03be 07       		.uleb128 0x7
 11078 03bf 99000000 		.4byte	0x99
 11079 03c3 CE030000 		.4byte	0x3ce
 11080 03c7 08       		.uleb128 0x8
 11081 03c8 0E010000 		.4byte	0x10e
 11082 03cc 01       		.byte	0x1
 11083 03cd 00       		.byte	0
 11084 03ce 07       		.uleb128 0x7
 11085 03cf 99000000 		.4byte	0x99
 11086 03d3 DE030000 		.4byte	0x3de
 11087 03d7 08       		.uleb128 0x8
 11088 03d8 0E010000 		.4byte	0x10e
 11089 03dc 09       		.byte	0x9
 11090 03dd 00       		.byte	0
 11091 03de 07       		.uleb128 0x7
 11092 03df 99000000 		.4byte	0x99
 11093 03e3 EE030000 		.4byte	0x3ee
 11094 03e7 08       		.uleb128 0x8
 11095 03e8 0E010000 		.4byte	0x10e
 11096 03ec 03       		.byte	0x3
 11097 03ed 00       		.byte	0
 11098 03ee 07       		.uleb128 0x7
 11099 03ef 81000000 		.4byte	0x81
 11100 03f3 FE030000 		.4byte	0x3fe
 11101 03f7 08       		.uleb128 0x8
 11102 03f8 0E010000 		.4byte	0x10e
 11103 03fc 0B       		.byte	0xb
 11104 03fd 00       		.byte	0
 11105 03fe 10       		.uleb128 0x10
 11106 03ff 24020000 		.4byte	.LASF67
 11107 0403 10       		.byte	0x10
 11108 0404 07       		.byte	0x7
 11109 0405 2701     		.2byte	0x127
 11110 0407 8D040000 		.4byte	0x48d
 11111 040b 12       		.uleb128 0x12
 11112 040c 696400   		.ascii	"id\000"
 11113 040f 07       		.byte	0x7
 11114 0410 2801     		.2byte	0x128
 11115 0412 81000000 		.4byte	0x81
 11116 0416 00       		.byte	0
 11117 0417 11       		.uleb128 0x11
 11118 0418 E00F0000 		.4byte	.LASF68
 11119 041c 07       		.byte	0x7
 11120 041d 2901     		.2byte	0x129
 11121 041f 8D040000 		.4byte	0x48d
 11122 0423 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 251


 11123 0424 11       		.uleb128 0x11
 11124 0425 1C100000 		.4byte	.LASF69
 11125 0429 07       		.byte	0x7
 11126 042a 2A01     		.2byte	0x12a
 11127 042c 8D040000 		.4byte	0x48d
 11128 0430 04       		.byte	0x4
 11129 0431 11       		.uleb128 0x11
 11130 0432 D0040000 		.4byte	.LASF70
 11131 0436 07       		.byte	0x7
 11132 0437 2B01     		.2byte	0x12b
 11133 0439 81000000 		.4byte	0x81
 11134 043d 07       		.byte	0x7
 11135 043e 11       		.uleb128 0x11
 11136 043f 08030000 		.4byte	.LASF71
 11137 0443 07       		.byte	0x7
 11138 0444 2C01     		.2byte	0x12c
 11139 0446 81000000 		.4byte	0x81
 11140 044a 08       		.byte	0x8
 11141 044b 11       		.uleb128 0x11
 11142 044c 4A020000 		.4byte	.LASF72
 11143 0450 07       		.byte	0x7
 11144 0451 2D01     		.2byte	0x12d
 11145 0453 81000000 		.4byte	0x81
 11146 0457 09       		.byte	0x9
 11147 0458 11       		.uleb128 0x11
 11148 0459 4D110000 		.4byte	.LASF73
 11149 045d 07       		.byte	0x7
 11150 045e 2E01     		.2byte	0x12e
 11151 0460 81000000 		.4byte	0x81
 11152 0464 0A       		.byte	0xa
 11153 0465 11       		.uleb128 0x11
 11154 0466 E1100000 		.4byte	.LASF74
 11155 046a 07       		.byte	0x7
 11156 046b 2F01     		.2byte	0x12f
 11157 046d 81000000 		.4byte	0x81
 11158 0471 0B       		.byte	0xb
 11159 0472 11       		.uleb128 0x11
 11160 0473 8C0E0000 		.4byte	.LASF75
 11161 0477 07       		.byte	0x7
 11162 0478 3001     		.2byte	0x130
 11163 047a 81000000 		.4byte	0x81
 11164 047e 0C       		.byte	0xc
 11165 047f 11       		.uleb128 0x11
 11166 0480 4C030000 		.4byte	.LASF66
 11167 0484 07       		.byte	0x7
 11168 0485 3101     		.2byte	0x131
 11169 0487 8D040000 		.4byte	0x48d
 11170 048b 0D       		.byte	0xd
 11171 048c 00       		.byte	0
 11172 048d 07       		.uleb128 0x7
 11173 048e 81000000 		.4byte	0x81
 11174 0492 9D040000 		.4byte	0x49d
 11175 0496 08       		.uleb128 0x8
 11176 0497 0E010000 		.4byte	0x10e
 11177 049b 02       		.byte	0x2
 11178 049c 00       		.byte	0
 11179 049d 10       		.uleb128 0x10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 252


 11180 049e 13120000 		.4byte	.LASF76
 11181 04a2 70       		.byte	0x70
 11182 04a3 07       		.byte	0x7
 11183 04a4 3801     		.2byte	0x138
 11184 04a6 17060000 		.4byte	0x617
 11185 04aa 12       		.uleb128 0x12
 11186 04ab 6B5F7000 		.ascii	"k_p\000"
 11187 04af 07       		.byte	0x7
 11188 04b0 3901     		.2byte	0x139
 11189 04b2 BD000000 		.4byte	0xbd
 11190 04b6 00       		.byte	0
 11191 04b7 12       		.uleb128 0x12
 11192 04b8 6B5F6900 		.ascii	"k_i\000"
 11193 04bc 07       		.byte	0x7
 11194 04bd 3A01     		.2byte	0x13a
 11195 04bf BD000000 		.4byte	0xbd
 11196 04c3 04       		.byte	0x4
 11197 04c4 12       		.uleb128 0x12
 11198 04c5 6B5F6400 		.ascii	"k_d\000"
 11199 04c9 07       		.byte	0x7
 11200 04ca 3B01     		.2byte	0x13b
 11201 04cc BD000000 		.4byte	0xbd
 11202 04d0 08       		.byte	0x8
 11203 04d1 11       		.uleb128 0x11
 11204 04d2 C50D0000 		.4byte	.LASF77
 11205 04d6 07       		.byte	0x7
 11206 04d7 3C01     		.2byte	0x13c
 11207 04d9 BD000000 		.4byte	0xbd
 11208 04dd 0C       		.byte	0xc
 11209 04de 11       		.uleb128 0x11
 11210 04df 9D050000 		.4byte	.LASF78
 11211 04e3 07       		.byte	0x7
 11212 04e4 3D01     		.2byte	0x13d
 11213 04e6 BD000000 		.4byte	0xbd
 11214 04ea 10       		.byte	0x10
 11215 04eb 11       		.uleb128 0x11
 11216 04ec 7A050000 		.4byte	.LASF79
 11217 04f0 07       		.byte	0x7
 11218 04f1 3E01     		.2byte	0x13e
 11219 04f3 BD000000 		.4byte	0xbd
 11220 04f7 14       		.byte	0x14
 11221 04f8 11       		.uleb128 0x11
 11222 04f9 A1100000 		.4byte	.LASF80
 11223 04fd 07       		.byte	0x7
 11224 04fe 3F01     		.2byte	0x13f
 11225 0500 BD000000 		.4byte	0xbd
 11226 0504 18       		.byte	0x18
 11227 0505 11       		.uleb128 0x11
 11228 0506 39060000 		.4byte	.LASF81
 11229 050a 07       		.byte	0x7
 11230 050b 4001     		.2byte	0x140
 11231 050d BD000000 		.4byte	0xbd
 11232 0511 1C       		.byte	0x1c
 11233 0512 11       		.uleb128 0x11
 11234 0513 B00F0000 		.4byte	.LASF82
 11235 0517 07       		.byte	0x7
 11236 0518 4101     		.2byte	0x141
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 253


 11237 051a BD000000 		.4byte	0xbd
 11238 051e 20       		.byte	0x20
 11239 051f 11       		.uleb128 0x11
 11240 0520 47060000 		.4byte	.LASF83
 11241 0524 07       		.byte	0x7
 11242 0525 4201     		.2byte	0x142
 11243 0527 BD000000 		.4byte	0xbd
 11244 052b 24       		.byte	0x24
 11245 052c 11       		.uleb128 0x11
 11246 052d 8F070000 		.4byte	.LASF84
 11247 0531 07       		.byte	0x7
 11248 0532 4301     		.2byte	0x143
 11249 0534 BD000000 		.4byte	0xbd
 11250 0538 28       		.byte	0x28
 11251 0539 11       		.uleb128 0x11
 11252 053a ED120000 		.4byte	.LASF85
 11253 053e 07       		.byte	0x7
 11254 053f 4401     		.2byte	0x144
 11255 0541 BD000000 		.4byte	0xbd
 11256 0545 2C       		.byte	0x2c
 11257 0546 11       		.uleb128 0x11
 11258 0547 29080000 		.4byte	.LASF86
 11259 054b 07       		.byte	0x7
 11260 054c 4501     		.2byte	0x145
 11261 054e 81000000 		.4byte	0x81
 11262 0552 30       		.byte	0x30
 11263 0553 11       		.uleb128 0x11
 11264 0554 8A100000 		.4byte	.LASF87
 11265 0558 07       		.byte	0x7
 11266 0559 4601     		.2byte	0x146
 11267 055b 81000000 		.4byte	0x81
 11268 055f 31       		.byte	0x31
 11269 0560 11       		.uleb128 0x11
 11270 0561 D70D0000 		.4byte	.LASF88
 11271 0565 07       		.byte	0x7
 11272 0566 4701     		.2byte	0x147
 11273 0568 81000000 		.4byte	0x81
 11274 056c 32       		.byte	0x32
 11275 056d 11       		.uleb128 0x11
 11276 056e 30120000 		.4byte	.LASF89
 11277 0572 07       		.byte	0x7
 11278 0573 4801     		.2byte	0x148
 11279 0575 81000000 		.4byte	0x81
 11280 0579 33       		.byte	0x33
 11281 057a 11       		.uleb128 0x11
 11282 057b D6000000 		.4byte	.LASF90
 11283 057f 07       		.byte	0x7
 11284 0580 4901     		.2byte	0x149
 11285 0582 BD000000 		.4byte	0xbd
 11286 0586 34       		.byte	0x34
 11287 0587 11       		.uleb128 0x11
 11288 0588 CD050000 		.4byte	.LASF91
 11289 058c 07       		.byte	0x7
 11290 058d 4A01     		.2byte	0x14a
 11291 058f BD000000 		.4byte	0xbd
 11292 0593 38       		.byte	0x38
 11293 0594 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 254


 11294 0595 410A0000 		.4byte	.LASF92
 11295 0599 07       		.byte	0x7
 11296 059a 4B01     		.2byte	0x14b
 11297 059c BD000000 		.4byte	0xbd
 11298 05a0 3C       		.byte	0x3c
 11299 05a1 11       		.uleb128 0x11
 11300 05a2 2E050000 		.4byte	.LASF93
 11301 05a6 07       		.byte	0x7
 11302 05a7 4C01     		.2byte	0x14c
 11303 05a9 BD000000 		.4byte	0xbd
 11304 05ad 40       		.byte	0x40
 11305 05ae 11       		.uleb128 0x11
 11306 05af 3F010000 		.4byte	.LASF94
 11307 05b3 07       		.byte	0x7
 11308 05b4 4D01     		.2byte	0x14d
 11309 05b6 17060000 		.4byte	0x617
 11310 05ba 44       		.byte	0x44
 11311 05bb 11       		.uleb128 0x11
 11312 05bc 97120000 		.4byte	.LASF95
 11313 05c0 07       		.byte	0x7
 11314 05c1 4E01     		.2byte	0x14e
 11315 05c3 B1000000 		.4byte	0xb1
 11316 05c7 5C       		.byte	0x5c
 11317 05c8 11       		.uleb128 0x11
 11318 05c9 95080000 		.4byte	.LASF96
 11319 05cd 07       		.byte	0x7
 11320 05ce 4F01     		.2byte	0x14f
 11321 05d0 81000000 		.4byte	0x81
 11322 05d4 5E       		.byte	0x5e
 11323 05d5 11       		.uleb128 0x11
 11324 05d6 DC0A0000 		.4byte	.LASF97
 11325 05da 07       		.byte	0x7
 11326 05db 5001     		.2byte	0x150
 11327 05dd 81000000 		.4byte	0x81
 11328 05e1 5F       		.byte	0x5f
 11329 05e2 11       		.uleb128 0x11
 11330 05e3 DB040000 		.4byte	.LASF98
 11331 05e7 07       		.byte	0x7
 11332 05e8 5101     		.2byte	0x151
 11333 05ea 81000000 		.4byte	0x81
 11334 05ee 60       		.byte	0x60
 11335 05ef 11       		.uleb128 0x11
 11336 05f0 69050000 		.4byte	.LASF99
 11337 05f4 07       		.byte	0x7
 11338 05f5 5201     		.2byte	0x152
 11339 05f7 81000000 		.4byte	0x81
 11340 05fb 61       		.byte	0x61
 11341 05fc 11       		.uleb128 0x11
 11342 05fd 84040000 		.4byte	.LASF100
 11343 0601 07       		.byte	0x7
 11344 0602 5301     		.2byte	0x153
 11345 0604 81000000 		.4byte	0x81
 11346 0608 62       		.byte	0x62
 11347 0609 11       		.uleb128 0x11
 11348 060a 4C030000 		.4byte	.LASF66
 11349 060e 07       		.byte	0x7
 11350 060f 5401     		.2byte	0x154
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 255


 11351 0611 27060000 		.4byte	0x627
 11352 0615 63       		.byte	0x63
 11353 0616 00       		.byte	0
 11354 0617 07       		.uleb128 0x7
 11355 0618 D5000000 		.4byte	0xd5
 11356 061c 27060000 		.4byte	0x627
 11357 0620 08       		.uleb128 0x8
 11358 0621 0E010000 		.4byte	0x10e
 11359 0625 05       		.byte	0x5
 11360 0626 00       		.byte	0
 11361 0627 07       		.uleb128 0x7
 11362 0628 81000000 		.4byte	0x81
 11363 062c 37060000 		.4byte	0x637
 11364 0630 08       		.uleb128 0x8
 11365 0631 0E010000 		.4byte	0x10e
 11366 0635 0C       		.byte	0xc
 11367 0636 00       		.byte	0
 11368 0637 10       		.uleb128 0x10
 11369 0638 8C110000 		.4byte	.LASF101
 11370 063c 30       		.byte	0x30
 11371 063d 07       		.byte	0x7
 11372 063e 5B01     		.2byte	0x15b
 11373 0640 BA060000 		.4byte	0x6ba
 11374 0644 11       		.uleb128 0x11
 11375 0645 FB090000 		.4byte	.LASF102
 11376 0649 07       		.byte	0x7
 11377 064a 5C01     		.2byte	0x15c
 11378 064c BA060000 		.4byte	0x6ba
 11379 0650 00       		.byte	0
 11380 0651 12       		.uleb128 0x12
 11381 0652 72657300 		.ascii	"res\000"
 11382 0656 07       		.byte	0x7
 11383 0657 5D01     		.2byte	0x15d
 11384 0659 8D040000 		.4byte	0x48d
 11385 065d 05       		.byte	0x5
 11386 065e 11       		.uleb128 0x11
 11387 065f 55080000 		.4byte	.LASF103
 11388 0663 07       		.byte	0x7
 11389 0664 5E01     		.2byte	0x15e
 11390 0666 43020000 		.4byte	0x243
 11391 066a 08       		.byte	0x8
 11392 066b 11       		.uleb128 0x11
 11393 066c 96050000 		.4byte	.LASF104
 11394 0670 07       		.byte	0x7
 11395 0671 5F01     		.2byte	0x15f
 11396 0673 CA060000 		.4byte	0x6ca
 11397 0677 14       		.byte	0x14
 11398 0678 11       		.uleb128 0x11
 11399 0679 1F0C0000 		.4byte	.LASF105
 11400 067d 07       		.byte	0x7
 11401 067e 6001     		.2byte	0x160
 11402 0680 81000000 		.4byte	0x81
 11403 0684 20       		.byte	0x20
 11404 0685 11       		.uleb128 0x11
 11405 0686 07020000 		.4byte	.LASF106
 11406 068a 07       		.byte	0x7
 11407 068b 6101     		.2byte	0x161
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 256


 11408 068d 8D040000 		.4byte	0x48d
 11409 0691 21       		.byte	0x21
 11410 0692 11       		.uleb128 0x11
 11411 0693 6B0B0000 		.4byte	.LASF107
 11412 0697 07       		.byte	0x7
 11413 0698 6201     		.2byte	0x162
 11414 069a A5000000 		.4byte	0xa5
 11415 069e 24       		.byte	0x24
 11416 069f 11       		.uleb128 0x11
 11417 06a0 AE0E0000 		.4byte	.LASF108
 11418 06a4 07       		.byte	0x7
 11419 06a5 6301     		.2byte	0x163
 11420 06a7 53020000 		.4byte	0x253
 11421 06ab 25       		.byte	0x25
 11422 06ac 11       		.uleb128 0x11
 11423 06ad 4C030000 		.4byte	.LASF66
 11424 06b1 07       		.byte	0x7
 11425 06b2 6401     		.2byte	0x164
 11426 06b4 DA060000 		.4byte	0x6da
 11427 06b8 28       		.byte	0x28
 11428 06b9 00       		.byte	0
 11429 06ba 07       		.uleb128 0x7
 11430 06bb 81000000 		.4byte	0x81
 11431 06bf CA060000 		.4byte	0x6ca
 11432 06c3 08       		.uleb128 0x8
 11433 06c4 0E010000 		.4byte	0x10e
 11434 06c8 04       		.byte	0x4
 11435 06c9 00       		.byte	0
 11436 06ca 07       		.uleb128 0x7
 11437 06cb C9000000 		.4byte	0xc9
 11438 06cf DA060000 		.4byte	0x6da
 11439 06d3 08       		.uleb128 0x8
 11440 06d4 0E010000 		.4byte	0x10e
 11441 06d8 02       		.byte	0x2
 11442 06d9 00       		.byte	0
 11443 06da 07       		.uleb128 0x7
 11444 06db 81000000 		.4byte	0x81
 11445 06df EA060000 		.4byte	0x6ea
 11446 06e3 08       		.uleb128 0x8
 11447 06e4 0E010000 		.4byte	0x10e
 11448 06e8 07       		.byte	0x7
 11449 06e9 00       		.byte	0
 11450 06ea 10       		.uleb128 0x10
 11451 06eb B7010000 		.4byte	.LASF109
 11452 06ef 10       		.byte	0x10
 11453 06f0 07       		.byte	0x7
 11454 06f1 6B01     		.2byte	0x16b
 11455 06f3 39070000 		.4byte	0x739
 11456 06f7 11       		.uleb128 0x11
 11457 06f8 4A0B0000 		.4byte	.LASF110
 11458 06fc 07       		.byte	0x7
 11459 06fd 6C01     		.2byte	0x16c
 11460 06ff 39070000 		.4byte	0x739
 11461 0703 00       		.byte	0
 11462 0704 11       		.uleb128 0x11
 11463 0705 89120000 		.4byte	.LASF111
 11464 0709 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 257


 11465 070a 6D01     		.2byte	0x16d
 11466 070c BE030000 		.4byte	0x3be
 11467 0710 04       		.byte	0x4
 11468 0711 11       		.uleb128 0x11
 11469 0712 E3050000 		.4byte	.LASF112
 11470 0716 07       		.byte	0x7
 11471 0717 6E01     		.2byte	0x16e
 11472 0719 49070000 		.4byte	0x749
 11473 071d 0C       		.byte	0xc
 11474 071e 11       		.uleb128 0x11
 11475 071f C80E0000 		.4byte	.LASF113
 11476 0723 07       		.byte	0x7
 11477 0724 6F01     		.2byte	0x16f
 11478 0726 81000000 		.4byte	0x81
 11479 072a 0E       		.byte	0xe
 11480 072b 11       		.uleb128 0x11
 11481 072c 33040000 		.4byte	.LASF114
 11482 0730 07       		.byte	0x7
 11483 0731 7001     		.2byte	0x170
 11484 0733 81000000 		.4byte	0x81
 11485 0737 0F       		.byte	0xf
 11486 0738 00       		.byte	0
 11487 0739 07       		.uleb128 0x7
 11488 073a 8D000000 		.4byte	0x8d
 11489 073e 49070000 		.4byte	0x749
 11490 0742 08       		.uleb128 0x8
 11491 0743 0E010000 		.4byte	0x10e
 11492 0747 01       		.byte	0x1
 11493 0748 00       		.byte	0
 11494 0749 07       		.uleb128 0x7
 11495 074a 81000000 		.4byte	0x81
 11496 074e 59070000 		.4byte	0x759
 11497 0752 08       		.uleb128 0x8
 11498 0753 0E010000 		.4byte	0x10e
 11499 0757 01       		.byte	0x1
 11500 0758 00       		.byte	0
 11501 0759 10       		.uleb128 0x10
 11502 075a 060B0000 		.4byte	.LASF115
 11503 075e 20       		.byte	0x20
 11504 075f 07       		.byte	0x7
 11505 0760 7701     		.2byte	0x177
 11506 0762 9B070000 		.4byte	0x79b
 11507 0766 11       		.uleb128 0x11
 11508 0767 8F020000 		.4byte	.LASF116
 11509 076b 07       		.byte	0x7
 11510 076c 7801     		.2byte	0x178
 11511 076e 81000000 		.4byte	0x81
 11512 0772 00       		.byte	0
 11513 0773 11       		.uleb128 0x11
 11514 0774 6A110000 		.4byte	.LASF117
 11515 0778 07       		.byte	0x7
 11516 0779 7901     		.2byte	0x179
 11517 077b 81000000 		.4byte	0x81
 11518 077f 01       		.byte	0x1
 11519 0780 11       		.uleb128 0x11
 11520 0781 760A0000 		.4byte	.LASF118
 11521 0785 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 258


 11522 0786 7A01     		.2byte	0x17a
 11523 0788 9B070000 		.4byte	0x79b
 11524 078c 02       		.byte	0x2
 11525 078d 11       		.uleb128 0x11
 11526 078e 4C030000 		.4byte	.LASF66
 11527 0792 07       		.byte	0x7
 11528 0793 7B01     		.2byte	0x17b
 11529 0795 BA060000 		.4byte	0x6ba
 11530 0799 1B       		.byte	0x1b
 11531 079a 00       		.byte	0
 11532 079b 07       		.uleb128 0x7
 11533 079c 81000000 		.4byte	0x81
 11534 07a0 B1070000 		.4byte	0x7b1
 11535 07a4 08       		.uleb128 0x8
 11536 07a5 0E010000 		.4byte	0x10e
 11537 07a9 04       		.byte	0x4
 11538 07aa 08       		.uleb128 0x8
 11539 07ab 0E010000 		.4byte	0x10e
 11540 07af 04       		.byte	0x4
 11541 07b0 00       		.byte	0
 11542 07b1 10       		.uleb128 0x10
 11543 07b2 BB0E0000 		.4byte	.LASF119
 11544 07b6 20       		.byte	0x20
 11545 07b7 07       		.byte	0x7
 11546 07b8 8201     		.2byte	0x182
 11547 07ba 0D080000 		.4byte	0x80d
 11548 07be 11       		.uleb128 0x11
 11549 07bf 150C0000 		.4byte	.LASF120
 11550 07c3 07       		.byte	0x7
 11551 07c4 8301     		.2byte	0x183
 11552 07c6 0D080000 		.4byte	0x80d
 11553 07ca 00       		.byte	0
 11554 07cb 11       		.uleb128 0x11
 11555 07cc 6B100000 		.4byte	.LASF121
 11556 07d0 07       		.byte	0x7
 11557 07d1 8401     		.2byte	0x184
 11558 07d3 81000000 		.4byte	0x81
 11559 07d7 06       		.byte	0x6
 11560 07d8 11       		.uleb128 0x11
 11561 07d9 6B000000 		.4byte	.LASF122
 11562 07dd 07       		.byte	0x7
 11563 07de 8501     		.2byte	0x185
 11564 07e0 81000000 		.4byte	0x81
 11565 07e4 07       		.byte	0x7
 11566 07e5 11       		.uleb128 0x11
 11567 07e6 22060000 		.4byte	.LASF123
 11568 07ea 07       		.byte	0x7
 11569 07eb 8601     		.2byte	0x186
 11570 07ed EE030000 		.4byte	0x3ee
 11571 07f1 08       		.byte	0x8
 11572 07f2 11       		.uleb128 0x11
 11573 07f3 9D020000 		.4byte	.LASF124
 11574 07f7 07       		.byte	0x7
 11575 07f8 8701     		.2byte	0x187
 11576 07fa 81000000 		.4byte	0x81
 11577 07fe 14       		.byte	0x14
 11578 07ff 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 259


 11579 0800 4C030000 		.4byte	.LASF66
 11580 0804 07       		.byte	0x7
 11581 0805 8801     		.2byte	0x188
 11582 0807 1D080000 		.4byte	0x81d
 11583 080b 15       		.byte	0x15
 11584 080c 00       		.byte	0
 11585 080d 07       		.uleb128 0x7
 11586 080e 81000000 		.4byte	0x81
 11587 0812 1D080000 		.4byte	0x81d
 11588 0816 08       		.uleb128 0x8
 11589 0817 0E010000 		.4byte	0x10e
 11590 081b 05       		.byte	0x5
 11591 081c 00       		.byte	0
 11592 081d 07       		.uleb128 0x7
 11593 081e 81000000 		.4byte	0x81
 11594 0822 2D080000 		.4byte	0x82d
 11595 0826 08       		.uleb128 0x8
 11596 0827 0E010000 		.4byte	0x10e
 11597 082b 0A       		.byte	0xa
 11598 082c 00       		.byte	0
 11599 082d 10       		.uleb128 0x10
 11600 082e A60E0000 		.4byte	.LASF125
 11601 0832 20       		.byte	0x20
 11602 0833 07       		.byte	0x7
 11603 0834 8F01     		.2byte	0x18f
 11604 0836 62080000 		.4byte	0x862
 11605 083a 11       		.uleb128 0x11
 11606 083b 05040000 		.4byte	.LASF126
 11607 083f 07       		.byte	0x7
 11608 0840 9001     		.2byte	0x190
 11609 0842 15010000 		.4byte	0x115
 11610 0846 00       		.byte	0
 11611 0847 11       		.uleb128 0x11
 11612 0848 25030000 		.4byte	.LASF127
 11613 084c 07       		.byte	0x7
 11614 084d 9101     		.2byte	0x191
 11615 084f EA060000 		.4byte	0x6ea
 11616 0853 08       		.byte	0x8
 11617 0854 11       		.uleb128 0x11
 11618 0855 4C030000 		.4byte	.LASF66
 11619 0859 07       		.byte	0x7
 11620 085a 9201     		.2byte	0x192
 11621 085c DA060000 		.4byte	0x6da
 11622 0860 18       		.byte	0x18
 11623 0861 00       		.byte	0
 11624 0862 10       		.uleb128 0x10
 11625 0863 64090000 		.4byte	.LASF128
 11626 0867 10       		.byte	0x10
 11627 0868 07       		.byte	0x7
 11628 0869 9901     		.2byte	0x199
 11629 086b B1080000 		.4byte	0x8b1
 11630 086f 11       		.uleb128 0x11
 11631 0870 7C080000 		.4byte	.LASF129
 11632 0874 07       		.byte	0x7
 11633 0875 9A01     		.2byte	0x19a
 11634 0877 BD000000 		.4byte	0xbd
 11635 087b 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 260


 11636 087c 11       		.uleb128 0x11
 11637 087d CF120000 		.4byte	.LASF130
 11638 0881 07       		.byte	0x7
 11639 0882 9B01     		.2byte	0x19b
 11640 0884 BD000000 		.4byte	0xbd
 11641 0888 04       		.byte	0x4
 11642 0889 11       		.uleb128 0x11
 11643 088a ED050000 		.4byte	.LASF131
 11644 088e 07       		.byte	0x7
 11645 088f 9C01     		.2byte	0x19c
 11646 0891 BD000000 		.4byte	0xbd
 11647 0895 08       		.byte	0x8
 11648 0896 11       		.uleb128 0x11
 11649 0897 65070000 		.4byte	.LASF132
 11650 089b 07       		.byte	0x7
 11651 089c 9D01     		.2byte	0x19d
 11652 089e 81000000 		.4byte	0x81
 11653 08a2 0C       		.byte	0xc
 11654 08a3 11       		.uleb128 0x11
 11655 08a4 4C030000 		.4byte	.LASF66
 11656 08a8 07       		.byte	0x7
 11657 08a9 9E01     		.2byte	0x19e
 11658 08ab 8D040000 		.4byte	0x48d
 11659 08af 0D       		.byte	0xd
 11660 08b0 00       		.byte	0
 11661 08b1 10       		.uleb128 0x10
 11662 08b2 860F0000 		.4byte	.LASF133
 11663 08b6 10       		.byte	0x10
 11664 08b7 07       		.byte	0x7
 11665 08b8 A501     		.2byte	0x1a5
 11666 08ba F3080000 		.4byte	0x8f3
 11667 08be 11       		.uleb128 0x11
 11668 08bf 78070000 		.4byte	.LASF134
 11669 08c3 07       		.byte	0x7
 11670 08c4 A601     		.2byte	0x1a6
 11671 08c6 8D000000 		.4byte	0x8d
 11672 08ca 00       		.byte	0
 11673 08cb 11       		.uleb128 0x11
 11674 08cc 030F0000 		.4byte	.LASF135
 11675 08d0 07       		.byte	0x7
 11676 08d1 A701     		.2byte	0x1a7
 11677 08d3 B1000000 		.4byte	0xb1
 11678 08d7 02       		.byte	0x2
 11679 08d8 11       		.uleb128 0x11
 11680 08d9 EC070000 		.4byte	.LASF136
 11681 08dd 07       		.byte	0x7
 11682 08de A801     		.2byte	0x1a8
 11683 08e0 39070000 		.4byte	0x739
 11684 08e4 04       		.byte	0x4
 11685 08e5 11       		.uleb128 0x11
 11686 08e6 4C030000 		.4byte	.LASF66
 11687 08ea 07       		.byte	0x7
 11688 08eb A901     		.2byte	0x1a9
 11689 08ed DA060000 		.4byte	0x6da
 11690 08f1 08       		.byte	0x8
 11691 08f2 00       		.byte	0
 11692 08f3 10       		.uleb128 0x10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 261


 11693 08f4 62010000 		.4byte	.LASF137
 11694 08f8 10       		.byte	0x10
 11695 08f9 07       		.byte	0x7
 11696 08fa B001     		.2byte	0x1b0
 11697 08fc 28090000 		.4byte	0x928
 11698 0900 11       		.uleb128 0x11
 11699 0901 510E0000 		.4byte	.LASF138
 11700 0905 07       		.byte	0x7
 11701 0906 B101     		.2byte	0x1b1
 11702 0908 81000000 		.4byte	0x81
 11703 090c 00       		.byte	0
 11704 090d 11       		.uleb128 0x11
 11705 090e 620A0000 		.4byte	.LASF139
 11706 0912 07       		.byte	0x7
 11707 0913 B201     		.2byte	0x1b2
 11708 0915 81000000 		.4byte	0x81
 11709 0919 01       		.byte	0x1
 11710 091a 11       		.uleb128 0x11
 11711 091b 4C030000 		.4byte	.LASF66
 11712 091f 07       		.byte	0x7
 11713 0920 B301     		.2byte	0x1b3
 11714 0922 28090000 		.4byte	0x928
 11715 0926 02       		.byte	0x2
 11716 0927 00       		.byte	0
 11717 0928 07       		.uleb128 0x7
 11718 0929 81000000 		.4byte	0x81
 11719 092d 38090000 		.4byte	0x938
 11720 0931 08       		.uleb128 0x8
 11721 0932 0E010000 		.4byte	0x10e
 11722 0936 0D       		.byte	0xd
 11723 0937 00       		.byte	0
 11724 0938 10       		.uleb128 0x10
 11725 0939 7D090000 		.4byte	.LASF140
 11726 093d 10       		.byte	0x10
 11727 093e 07       		.byte	0x7
 11728 093f BA01     		.2byte	0x1ba
 11729 0941 7A090000 		.4byte	0x97a
 11730 0945 11       		.uleb128 0x11
 11731 0946 A2110000 		.4byte	.LASF141
 11732 094a 07       		.byte	0x7
 11733 094b BB01     		.2byte	0x1bb
 11734 094d BD000000 		.4byte	0xbd
 11735 0951 00       		.byte	0
 11736 0952 11       		.uleb128 0x11
 11737 0953 50070000 		.4byte	.LASF142
 11738 0957 07       		.byte	0x7
 11739 0958 BC01     		.2byte	0x1bc
 11740 095a D5000000 		.4byte	0xd5
 11741 095e 04       		.byte	0x4
 11742 095f 11       		.uleb128 0x11
 11743 0960 090E0000 		.4byte	.LASF143
 11744 0964 07       		.byte	0x7
 11745 0965 BD01     		.2byte	0x1bd
 11746 0967 D5000000 		.4byte	0xd5
 11747 096b 08       		.byte	0x8
 11748 096c 11       		.uleb128 0x11
 11749 096d 4C030000 		.4byte	.LASF66
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 262


 11750 0971 07       		.byte	0x7
 11751 0972 BE01     		.2byte	0x1be
 11752 0974 7A090000 		.4byte	0x97a
 11753 0978 0C       		.byte	0xc
 11754 0979 00       		.byte	0
 11755 097a 07       		.uleb128 0x7
 11756 097b 81000000 		.4byte	0x81
 11757 097f 8A090000 		.4byte	0x98a
 11758 0983 08       		.uleb128 0x8
 11759 0984 0E010000 		.4byte	0x10e
 11760 0988 03       		.byte	0x3
 11761 0989 00       		.byte	0
 11762 098a 10       		.uleb128 0x10
 11763 098b EC010000 		.4byte	.LASF144
 11764 098f 12       		.byte	0x12
 11765 0990 07       		.byte	0x7
 11766 0991 C501     		.2byte	0x1c5
 11767 0993 CC090000 		.4byte	0x9cc
 11768 0997 11       		.uleb128 0x11
 11769 0998 B8120000 		.4byte	.LASF145
 11770 099c 07       		.byte	0x7
 11771 099d C601     		.2byte	0x1c6
 11772 099f 81000000 		.4byte	0x81
 11773 09a3 00       		.byte	0
 11774 09a4 11       		.uleb128 0x11
 11775 09a5 57110000 		.4byte	.LASF146
 11776 09a9 07       		.byte	0x7
 11777 09aa C701     		.2byte	0x1c7
 11778 09ac 39070000 		.4byte	0x739
 11779 09b0 02       		.byte	0x2
 11780 09b1 11       		.uleb128 0x11
 11781 09b2 37000000 		.4byte	.LASF147
 11782 09b6 07       		.byte	0x7
 11783 09b7 C801     		.2byte	0x1c8
 11784 09b9 81000000 		.4byte	0x81
 11785 09bd 06       		.byte	0x6
 11786 09be 11       		.uleb128 0x11
 11787 09bf 4C030000 		.4byte	.LASF66
 11788 09c3 07       		.byte	0x7
 11789 09c4 C901     		.2byte	0x1c9
 11790 09c6 CC090000 		.4byte	0x9cc
 11791 09ca 07       		.byte	0x7
 11792 09cb 00       		.byte	0
 11793 09cc 07       		.uleb128 0x7
 11794 09cd 81000000 		.4byte	0x81
 11795 09d1 DC090000 		.4byte	0x9dc
 11796 09d5 08       		.uleb128 0x8
 11797 09d6 0E010000 		.4byte	0x10e
 11798 09da 09       		.byte	0x9
 11799 09db 00       		.byte	0
 11800 09dc 13       		.uleb128 0x13
 11801 09dd BD110000 		.4byte	.LASF148
 11802 09e1 F402     		.2byte	0x2f4
 11803 09e3 07       		.byte	0x7
 11804 09e4 D201     		.2byte	0x1d2
 11805 09e6 C10A0000 		.4byte	0xac1
 11806 09ea 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 263


 11807 09eb D70A0000 		.4byte	.LASF149
 11808 09ef 07       		.byte	0x7
 11809 09f0 D401     		.2byte	0x1d4
 11810 09f2 81000000 		.4byte	0x81
 11811 09f6 00       		.byte	0
 11812 09f7 11       		.uleb128 0x11
 11813 09f8 4C030000 		.4byte	.LASF66
 11814 09fc 07       		.byte	0x7
 11815 09fd D501     		.2byte	0x1d5
 11816 09ff C10A0000 		.4byte	0xac1
 11817 0a03 01       		.byte	0x1
 11818 0a04 12       		.uleb128 0x12
 11819 0a05 636E7400 		.ascii	"cnt\000"
 11820 0a09 07       		.byte	0x7
 11821 0a0a D601     		.2byte	0x1d6
 11822 0a0c 21030000 		.4byte	0x321
 11823 0a10 10       		.byte	0x10
 11824 0a11 11       		.uleb128 0x11
 11825 0a12 DF020000 		.4byte	.LASF150
 11826 0a16 07       		.byte	0x7
 11827 0a17 D701     		.2byte	0x1d7
 11828 0a19 D10A0000 		.4byte	0xad1
 11829 0a1d 80       		.byte	0x80
 11830 0a1e 12       		.uleb128 0x12
 11831 0a1f 64657600 		.ascii	"dev\000"
 11832 0a23 07       		.byte	0x7
 11833 0a24 D801     		.2byte	0x1d8
 11834 0a26 FE030000 		.4byte	0x3fe
 11835 0a2a A0       		.byte	0xa0
 11836 0a2b 11       		.uleb128 0x11
 11837 0a2c CE0F0000 		.4byte	.LASF151
 11838 0a30 07       		.byte	0x7
 11839 0a31 D901     		.2byte	0x1d9
 11840 0a33 E10A0000 		.4byte	0xae1
 11841 0a37 B0       		.byte	0xb0
 11842 0a38 14       		.uleb128 0x14
 11843 0a39 656E6300 		.ascii	"enc\000"
 11844 0a3d 07       		.byte	0x7
 11845 0a3e DA01     		.2byte	0x1da
 11846 0a40 F10A0000 		.4byte	0xaf1
 11847 0a44 9001     		.2byte	0x190
 11848 0a46 14       		.uleb128 0x14
 11849 0a47 656D6700 		.ascii	"emg\000"
 11850 0a4b 07       		.byte	0x7
 11851 0a4c DB01     		.2byte	0x1db
 11852 0a4e EA060000 		.4byte	0x6ea
 11853 0a52 F001     		.2byte	0x1f0
 11854 0a54 14       		.uleb128 0x14
 11855 0a55 696D7500 		.ascii	"imu\000"
 11856 0a59 07       		.byte	0x7
 11857 0a5a DC01     		.2byte	0x1dc
 11858 0a5c 59070000 		.4byte	0x759
 11859 0a60 0002     		.2byte	0x200
 11860 0a62 14       		.uleb128 0x14
 11861 0a63 65787000 		.ascii	"exp\000"
 11862 0a67 07       		.byte	0x7
 11863 0a68 DD01     		.2byte	0x1dd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 264


 11864 0a6a B1070000 		.4byte	0x7b1
 11865 0a6e 2002     		.2byte	0x220
 11866 0a70 15       		.uleb128 0x15
 11867 0a71 86000000 		.4byte	.LASF152
 11868 0a75 07       		.byte	0x7
 11869 0a76 DE01     		.2byte	0x1de
 11870 0a78 010B0000 		.4byte	0xb01
 11871 0a7c 4002     		.2byte	0x240
 11872 0a7e 14       		.uleb128 0x14
 11873 0a7f 534800   		.ascii	"SH\000"
 11874 0a82 07       		.byte	0x7
 11875 0a83 E001     		.2byte	0x1e0
 11876 0a85 62080000 		.4byte	0x862
 11877 0a89 A002     		.2byte	0x2a0
 11878 0a8b 15       		.uleb128 0x15
 11879 0a8c CD000000 		.4byte	.LASF153
 11880 0a90 07       		.byte	0x7
 11881 0a91 E101     		.2byte	0x1e1
 11882 0a93 B1080000 		.4byte	0x8b1
 11883 0a97 B002     		.2byte	0x2b0
 11884 0a99 14       		.uleb128 0x14
 11885 0a9a 4D5300   		.ascii	"MS\000"
 11886 0a9d 07       		.byte	0x7
 11887 0a9e E201     		.2byte	0x1e2
 11888 0aa0 F3080000 		.4byte	0x8f3
 11889 0aa4 C002     		.2byte	0x2c0
 11890 0aa6 14       		.uleb128 0x14
 11891 0aa7 464200   		.ascii	"FB\000"
 11892 0aaa 07       		.byte	0x7
 11893 0aab E301     		.2byte	0x1e3
 11894 0aad 38090000 		.4byte	0x938
 11895 0ab1 D002     		.2byte	0x2d0
 11896 0ab3 14       		.uleb128 0x14
 11897 0ab4 575200   		.ascii	"WR\000"
 11898 0ab7 07       		.byte	0x7
 11899 0ab8 E401     		.2byte	0x1e4
 11900 0aba 8A090000 		.4byte	0x98a
 11901 0abe E002     		.2byte	0x2e0
 11902 0ac0 00       		.byte	0
 11903 0ac1 07       		.uleb128 0x7
 11904 0ac2 81000000 		.4byte	0x81
 11905 0ac6 D10A0000 		.4byte	0xad1
 11906 0aca 08       		.uleb128 0x8
 11907 0acb 0E010000 		.4byte	0x10e
 11908 0acf 0E       		.byte	0xe
 11909 0ad0 00       		.byte	0
 11910 0ad1 07       		.uleb128 0x7
 11911 0ad2 81000000 		.4byte	0x81
 11912 0ad6 E10A0000 		.4byte	0xae1
 11913 0ada 08       		.uleb128 0x8
 11914 0adb 0E010000 		.4byte	0x10e
 11915 0adf 1F       		.byte	0x1f
 11916 0ae0 00       		.byte	0
 11917 0ae1 07       		.uleb128 0x7
 11918 0ae2 9D040000 		.4byte	0x49d
 11919 0ae6 F10A0000 		.4byte	0xaf1
 11920 0aea 08       		.uleb128 0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 265


 11921 0aeb 0E010000 		.4byte	0x10e
 11922 0aef 01       		.byte	0x1
 11923 0af0 00       		.byte	0
 11924 0af1 07       		.uleb128 0x7
 11925 0af2 37060000 		.4byte	0x637
 11926 0af6 010B0000 		.4byte	0xb01
 11927 0afa 08       		.uleb128 0x8
 11928 0afb 0E010000 		.4byte	0x10e
 11929 0aff 01       		.byte	0x1
 11930 0b00 00       		.byte	0
 11931 0b01 07       		.uleb128 0x7
 11932 0b02 2D080000 		.4byte	0x82d
 11933 0b06 110B0000 		.4byte	0xb11
 11934 0b0a 08       		.uleb128 0x8
 11935 0b0b 0E010000 		.4byte	0x10e
 11936 0b0f 02       		.byte	0x2
 11937 0b10 00       		.byte	0
 11938 0b11 10       		.uleb128 0x10
 11939 0b12 D50C0000 		.4byte	.LASF154
 11940 0b16 28       		.byte	0x28
 11941 0b17 07       		.byte	0x7
 11942 0b18 EF01     		.2byte	0x1ef
 11943 0b1a 6D0B0000 		.4byte	0xb6d
 11944 0b1e 11       		.uleb128 0x11
 11945 0b1f F5040000 		.4byte	.LASF155
 11946 0b23 07       		.byte	0x7
 11947 0b24 F001     		.2byte	0x1f0
 11948 0b26 81000000 		.4byte	0x81
 11949 0b2a 00       		.byte	0
 11950 0b2b 11       		.uleb128 0x11
 11951 0b2c 59030000 		.4byte	.LASF156
 11952 0b30 07       		.byte	0x7
 11953 0b31 F101     		.2byte	0x1f1
 11954 0b33 6D0B0000 		.4byte	0xb6d
 11955 0b37 02       		.byte	0x2
 11956 0b38 11       		.uleb128 0x11
 11957 0b39 0A0C0000 		.4byte	.LASF157
 11958 0b3d 07       		.byte	0x7
 11959 0b3e F201     		.2byte	0x1f2
 11960 0b40 6D0B0000 		.4byte	0xb6d
 11961 0b44 08       		.byte	0x8
 11962 0b45 11       		.uleb128 0x11
 11963 0b46 E10C0000 		.4byte	.LASF158
 11964 0b4a 07       		.byte	0x7
 11965 0b4b F301     		.2byte	0x1f3
 11966 0b4d 6D0B0000 		.4byte	0xb6d
 11967 0b51 0E       		.byte	0xe
 11968 0b52 11       		.uleb128 0x11
 11969 0b53 71080000 		.4byte	.LASF159
 11970 0b57 07       		.byte	0x7
 11971 0b58 F401     		.2byte	0x1f4
 11972 0b5a 7D0B0000 		.4byte	0xb7d
 11973 0b5e 14       		.byte	0x14
 11974 0b5f 11       		.uleb128 0x11
 11975 0b60 D9010000 		.4byte	.LASF160
 11976 0b64 07       		.byte	0x7
 11977 0b65 F501     		.2byte	0x1f5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 266


 11978 0b67 B1000000 		.4byte	0xb1
 11979 0b6b 24       		.byte	0x24
 11980 0b6c 00       		.byte	0
 11981 0b6d 07       		.uleb128 0x7
 11982 0b6e B1000000 		.4byte	0xb1
 11983 0b72 7D0B0000 		.4byte	0xb7d
 11984 0b76 08       		.uleb128 0x8
 11985 0b77 0E010000 		.4byte	0x10e
 11986 0b7b 02       		.byte	0x2
 11987 0b7c 00       		.byte	0
 11988 0b7d 07       		.uleb128 0x7
 11989 0b7e D5000000 		.4byte	0xd5
 11990 0b82 8D0B0000 		.4byte	0xb8d
 11991 0b86 08       		.uleb128 0x8
 11992 0b87 0E010000 		.4byte	0x10e
 11993 0b8b 03       		.byte	0x3
 11994 0b8c 00       		.byte	0
 11995 0b8d 10       		.uleb128 0x10
 11996 0b8e DA120000 		.4byte	.LASF161
 11997 0b92 08       		.byte	0x8
 11998 0b93 07       		.byte	0x7
 11999 0b94 FC01     		.2byte	0x1fc
 12000 0b96 B50B0000 		.4byte	0xbb5
 12001 0b9a 11       		.uleb128 0x11
 12002 0b9b D9050000 		.4byte	.LASF162
 12003 0b9f 07       		.byte	0x7
 12004 0ba0 FD01     		.2byte	0x1fd
 12005 0ba2 BD000000 		.4byte	0xbd
 12006 0ba6 00       		.byte	0
 12007 0ba7 11       		.uleb128 0x11
 12008 0ba8 1F020000 		.4byte	.LASF163
 12009 0bac 07       		.byte	0x7
 12010 0bad FE01     		.2byte	0x1fe
 12011 0baf BD000000 		.4byte	0xbd
 12012 0bb3 04       		.byte	0x4
 12013 0bb4 00       		.byte	0
 12014 0bb5 10       		.uleb128 0x10
 12015 0bb6 16040000 		.4byte	.LASF164
 12016 0bba 06       		.byte	0x6
 12017 0bbb 07       		.byte	0x7
 12018 0bbc 0502     		.2byte	0x205
 12019 0bbe F70B0000 		.4byte	0xbf7
 12020 0bc2 11       		.uleb128 0x11
 12021 0bc3 BB070000 		.4byte	.LASF165
 12022 0bc7 07       		.byte	0x7
 12023 0bc8 0602     		.2byte	0x206
 12024 0bca 81000000 		.4byte	0x81
 12025 0bce 00       		.byte	0
 12026 0bcf 11       		.uleb128 0x11
 12027 0bd0 F6120000 		.4byte	.LASF166
 12028 0bd4 07       		.byte	0x7
 12029 0bd5 0702     		.2byte	0x207
 12030 0bd7 81000000 		.4byte	0x81
 12031 0bdb 01       		.byte	0x1
 12032 0bdc 11       		.uleb128 0x11
 12033 0bdd 66060000 		.4byte	.LASF167
 12034 0be1 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 267


 12035 0be2 0802     		.2byte	0x208
 12036 0be4 B1000000 		.4byte	0xb1
 12037 0be8 02       		.byte	0x2
 12038 0be9 11       		.uleb128 0x11
 12039 0bea 350A0000 		.4byte	.LASF168
 12040 0bee 07       		.byte	0x7
 12041 0bef 0902     		.2byte	0x209
 12042 0bf1 B1000000 		.4byte	0xb1
 12043 0bf5 04       		.byte	0x4
 12044 0bf6 00       		.byte	0
 12045 0bf7 16       		.uleb128 0x16
 12046 0bf8 01       		.byte	0x1
 12047 0bf9 2C000000 		.4byte	0x2c
 12048 0bfd 07       		.byte	0x7
 12049 0bfe 0D02     		.2byte	0x20d
 12050 0c00 290C0000 		.4byte	0xc29
 12051 0c04 0A       		.uleb128 0xa
 12052 0c05 F6050000 		.4byte	.LASF169
 12053 0c09 00       		.byte	0
 12054 0c0a 0A       		.uleb128 0xa
 12055 0c0b 4B0E0000 		.4byte	.LASF170
 12056 0c0f 01       		.byte	0x1
 12057 0c10 0A       		.uleb128 0xa
 12058 0c11 A70B0000 		.4byte	.LASF171
 12059 0c15 02       		.byte	0x2
 12060 0c16 0A       		.uleb128 0xa
 12061 0c17 82020000 		.4byte	.LASF172
 12062 0c1b 03       		.byte	0x3
 12063 0c1c 0A       		.uleb128 0xa
 12064 0c1d 6B0A0000 		.4byte	.LASF173
 12065 0c21 04       		.byte	0x4
 12066 0c22 0A       		.uleb128 0xa
 12067 0c23 E90D0000 		.4byte	.LASF174
 12068 0c27 05       		.byte	0x5
 12069 0c28 00       		.byte	0
 12070 0c29 05       		.uleb128 0x5
 12071 0c2a 80050000 		.4byte	.LASF175
 12072 0c2e 07       		.byte	0x7
 12073 0c2f 1502     		.2byte	0x215
 12074 0c31 F70B0000 		.4byte	0xbf7
 12075 0c35 16       		.uleb128 0x16
 12076 0c36 01       		.byte	0x1
 12077 0c37 2C000000 		.4byte	0x2c
 12078 0c3b 07       		.byte	0x7
 12079 0c3c 1702     		.2byte	0x217
 12080 0c3e 610C0000 		.4byte	0xc61
 12081 0c42 0A       		.uleb128 0xa
 12082 0c43 CC010000 		.4byte	.LASF176
 12083 0c47 00       		.byte	0
 12084 0c48 0A       		.uleb128 0xa
 12085 0c49 DF070000 		.4byte	.LASF177
 12086 0c4d 01       		.byte	0x1
 12087 0c4e 0A       		.uleb128 0xa
 12088 0c4f 8A080000 		.4byte	.LASF178
 12089 0c53 02       		.byte	0x2
 12090 0c54 0A       		.uleb128 0xa
 12091 0c55 C3030000 		.4byte	.LASF179
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 268


 12092 0c59 03       		.byte	0x3
 12093 0c5a 0A       		.uleb128 0xa
 12094 0c5b B3120000 		.4byte	.LASF180
 12095 0c5f 04       		.byte	0x4
 12096 0c60 00       		.byte	0
 12097 0c61 05       		.uleb128 0x5
 12098 0c62 3F0F0000 		.4byte	.LASF181
 12099 0c66 07       		.byte	0x7
 12100 0c67 1E02     		.2byte	0x21e
 12101 0c69 350C0000 		.4byte	0xc35
 12102 0c6d 17       		.uleb128 0x17
 12103 0c6e B4050000 		.4byte	.LASF182
 12104 0c72 01       		.byte	0x1
 12105 0c73 62       		.byte	0x62
 12106 0c74 00000000 		.4byte	.LFB64
 12107 0c78 18000000 		.4byte	.LFE64-.LFB64
 12108 0c7c 01       		.uleb128 0x1
 12109 0c7d 9C       		.byte	0x9c
 12110 0c7e 17       		.uleb128 0x17
 12111 0c7f 3A110000 		.4byte	.LASF183
 12112 0c83 01       		.byte	0x1
 12113 0c84 6D       		.byte	0x6d
 12114 0c85 00000000 		.4byte	.LFB65
 12115 0c89 20000000 		.4byte	.LFE65-.LFB65
 12116 0c8d 01       		.uleb128 0x1
 12117 0c8e 9C       		.byte	0x9c
 12118 0c8f 18       		.uleb128 0x18
 12119 0c90 E9090000 		.4byte	.LASF215
 12120 0c94 01       		.byte	0x1
 12121 0c95 86       		.byte	0x86
 12122 0c96 00000000 		.4byte	.LFB66
 12123 0c9a 0C020000 		.4byte	.LFE66-.LFB66
 12124 0c9e 01       		.uleb128 0x1
 12125 0c9f 9C       		.byte	0x9c
 12126 0ca0 240D0000 		.4byte	0xd24
 12127 0ca4 19       		.uleb128 0x19
 12128 0ca5 FA000000 		.4byte	.LASF184
 12129 0ca9 01       		.byte	0x1
 12130 0caa 8B       		.byte	0x8b
 12131 0cab 81000000 		.4byte	0x81
 12132 0caf 05       		.uleb128 0x5
 12133 0cb0 03       		.byte	0x3
 12134 0cb1 00000000 		.4byte	state.10463
 12135 0cb5 19       		.uleb128 0x19
 12136 0cb6 8B060000 		.4byte	.LASF185
 12137 0cba 01       		.byte	0x1
 12138 0cbb 8E       		.byte	0x8e
 12139 0cbc 81000000 		.4byte	0x81
 12140 0cc0 05       		.uleb128 0x5
 12141 0cc1 03       		.byte	0x3
 12142 0cc2 08000000 		.4byte	data_packet_index.10464
 12143 0cc6 19       		.uleb128 0x19
 12144 0cc7 140D0000 		.4byte	.LASF186
 12145 0ccb 01       		.byte	0x1
 12146 0ccc 8F       		.byte	0x8f
 12147 0ccd 81000000 		.4byte	0x81
 12148 0cd1 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 269


 12149 0cd2 03       		.byte	0x3
 12150 0cd3 07000000 		.4byte	data_packet_length.10465
 12151 0cd7 19       		.uleb128 0x19
 12152 0cd8 9D060000 		.4byte	.LASF187
 12153 0cdc 01       		.byte	0x1
 12154 0cdd 90       		.byte	0x90
 12155 0cde 11030000 		.4byte	0x311
 12156 0ce2 05       		.uleb128 0x5
 12157 0ce3 03       		.byte	0x3
 12158 0ce4 0C000000 		.4byte	data_packet_buffer.10466
 12159 0ce8 19       		.uleb128 0x19
 12160 0ce9 190B0000 		.4byte	.LASF188
 12161 0ced 01       		.byte	0x1
 12162 0cee 91       		.byte	0x91
 12163 0cef 8D040000 		.4byte	0x48d
 12164 0cf3 05       		.uleb128 0x5
 12165 0cf4 03       		.byte	0x3
 12166 0cf5 04000000 		.4byte	rx_queue.10467
 12167 0cf9 19       		.uleb128 0x19
 12168 0cfa 91010000 		.4byte	.LASF189
 12169 0cfe 01       		.byte	0x1
 12170 0cff 94       		.byte	0x94
 12171 0d00 81000000 		.4byte	0x81
 12172 0d04 02       		.uleb128 0x2
 12173 0d05 91       		.byte	0x91
 12174 0d06 75       		.sleb128 -11
 12175 0d07 19       		.uleb128 0x19
 12176 0d08 50060000 		.4byte	.LASF190
 12177 0d0c 01       		.byte	0x1
 12178 0d0d 95       		.byte	0x95
 12179 0d0e 81000000 		.4byte	0x81
 12180 0d12 02       		.uleb128 0x2
 12181 0d13 91       		.byte	0x91
 12182 0d14 77       		.sleb128 -9
 12183 0d15 19       		.uleb128 0x19
 12184 0d16 98070000 		.4byte	.LASF191
 12185 0d1a 01       		.byte	0x1
 12186 0d1b 96       		.byte	0x96
 12187 0d1c 81000000 		.4byte	0x81
 12188 0d20 02       		.uleb128 0x2
 12189 0d21 91       		.byte	0x91
 12190 0d22 76       		.sleb128 -10
 12191 0d23 00       		.byte	0
 12192 0d24 1A       		.uleb128 0x1a
 12193 0d25 EE0F0000 		.4byte	.LASF198
 12194 0d29 01       		.byte	0x1
 12195 0d2a 0C01     		.2byte	0x10c
 12196 0d2c 00000000 		.4byte	.LFB67
 12197 0d30 80080000 		.4byte	.LFE67-.LFB67
 12198 0d34 01       		.uleb128 0x1
 12199 0d35 9C       		.byte	0x9c
 12200 0d36 C30D0000 		.4byte	0xdc3
 12201 0d3a 1B       		.uleb128 0x1b
 12202 0d3b C7060000 		.4byte	.LASF192
 12203 0d3f 01       		.byte	0x1
 12204 0d40 0E01     		.2byte	0x10e
 12205 0d42 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 270


 12206 0d46 05       		.uleb128 0x5
 12207 0d47 03       		.byte	0x3
 12208 0d48 00000000 		.4byte	counter_calibration.10483
 12209 0d4c 1B       		.uleb128 0x1b
 12210 0d4d 5E0C0000 		.4byte	.LASF193
 12211 0d51 01       		.byte	0x1
 12212 0d52 0F01     		.2byte	0x10f
 12213 0d54 8D000000 		.4byte	0x8d
 12214 0d58 05       		.uleb128 0x5
 12215 0d59 03       		.byte	0x3
 12216 0d5a 02000000 		.4byte	counter_tension_func.10484
 12217 0d5e 1B       		.uleb128 0x1b
 12218 0d5f A8010000 		.4byte	.LASF194
 12219 0d63 01       		.byte	0x1
 12220 0d64 1001     		.2byte	0x110
 12221 0d66 C30D0000 		.4byte	0xdc3
 12222 0d6a 03       		.uleb128 0x3
 12223 0d6b 91       		.byte	0x91
 12224 0d6c A86C     		.sleb128 -2520
 12225 0d6e 1B       		.uleb128 0x1b
 12226 0d6f 410C0000 		.4byte	.LASF195
 12227 0d73 01       		.byte	0x1
 12228 0d74 1201     		.2byte	0x112
 12229 0d76 81000000 		.4byte	0x81
 12230 0d7a 02       		.uleb128 0x2
 12231 0d7b 91       		.byte	0x91
 12232 0d7c 6E       		.sleb128 -18
 12233 0d7d 1B       		.uleb128 0x1b
 12234 0d7e A6090000 		.4byte	.LASF196
 12235 0d82 01       		.byte	0x1
 12236 0d83 1301     		.2byte	0x113
 12237 0d85 81000000 		.4byte	0x81
 12238 0d89 02       		.uleb128 0x2
 12239 0d8a 91       		.byte	0x91
 12240 0d8b 6D       		.sleb128 -19
 12241 0d8c 1C       		.uleb128 0x1c
 12242 0d8d 90010000 		.4byte	.LBB2
 12243 0d91 32010000 		.4byte	.LBE2-.LBB2
 12244 0d95 A70D0000 		.4byte	0xda7
 12245 0d99 1D       		.uleb128 0x1d
 12246 0d9a 6900     		.ascii	"i\000"
 12247 0d9c 01       		.byte	0x1
 12248 0d9d 4D01     		.2byte	0x14d
 12249 0d9f 81000000 		.4byte	0x81
 12250 0da3 02       		.uleb128 0x2
 12251 0da4 91       		.byte	0x91
 12252 0da5 6F       		.sleb128 -17
 12253 0da6 00       		.byte	0
 12254 0da7 1E       		.uleb128 0x1e
 12255 0da8 58060000 		.4byte	.LBB3
 12256 0dac 50000000 		.4byte	.LBE3-.LBB3
 12257 0db0 1B       		.uleb128 0x1b
 12258 0db1 ED020000 		.4byte	.LASF197
 12259 0db5 01       		.byte	0x1
 12260 0db6 4002     		.2byte	0x240
 12261 0db8 D40D0000 		.4byte	0xdd4
 12262 0dbc 04       		.uleb128 0x4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 271


 12263 0dbd 91       		.byte	0x91
 12264 0dbe 90F77E   		.sleb128 -17520
 12265 0dc1 00       		.byte	0
 12266 0dc2 00       		.byte	0
 12267 0dc3 07       		.uleb128 0x7
 12268 0dc4 E3000000 		.4byte	0xe3
 12269 0dc8 D40D0000 		.4byte	0xdd4
 12270 0dcc 1F       		.uleb128 0x1f
 12271 0dcd 0E010000 		.4byte	0x10e
 12272 0dd1 C309     		.2byte	0x9c3
 12273 0dd3 00       		.byte	0
 12274 0dd4 07       		.uleb128 0x7
 12275 0dd5 E3000000 		.4byte	0xe3
 12276 0dd9 E50D0000 		.4byte	0xde5
 12277 0ddd 1F       		.uleb128 0x1f
 12278 0dde 0E010000 		.4byte	0x10e
 12279 0de2 973A     		.2byte	0x3a97
 12280 0de4 00       		.byte	0
 12281 0de5 1A       		.uleb128 0x1a
 12282 0de6 01100000 		.4byte	.LASF199
 12283 0dea 01       		.byte	0x1
 12284 0deb 9402     		.2byte	0x294
 12285 0ded 00000000 		.4byte	.LFB68
 12286 0df1 CC050000 		.4byte	.LFE68-.LFB68
 12287 0df5 01       		.uleb128 0x1
 12288 0df6 9C       		.byte	0x9c
 12289 0df7 9B0E0000 		.4byte	0xe9b
 12290 0dfb 20       		.uleb128 0x20
 12291 0dfc 4B080000 		.4byte	.LASF200
 12292 0e00 01       		.byte	0x1
 12293 0e01 9402     		.2byte	0x294
 12294 0e03 81000000 		.4byte	0x81
 12295 0e07 02       		.uleb128 0x2
 12296 0e08 91       		.byte	0x91
 12297 0e09 5F       		.sleb128 -33
 12298 0e0a 20       		.uleb128 0x20
 12299 0e0b B0060000 		.4byte	.LASF201
 12300 0e0f 01       		.byte	0x1
 12301 0e10 9402     		.2byte	0x294
 12302 0e12 9B0E0000 		.4byte	0xe9b
 12303 0e16 02       		.uleb128 0x2
 12304 0e17 91       		.byte	0x91
 12305 0e18 58       		.sleb128 -40
 12306 0e19 20       		.uleb128 0x20
 12307 0e1a EC110000 		.4byte	.LASF202
 12308 0e1e 01       		.byte	0x1
 12309 0e1f 9402     		.2byte	0x294
 12310 0e21 9B0E0000 		.4byte	0xe9b
 12311 0e25 02       		.uleb128 0x2
 12312 0e26 91       		.byte	0x91
 12313 0e27 54       		.sleb128 -44
 12314 0e28 1B       		.uleb128 0x1b
 12315 0e29 FB040000 		.4byte	.LASF203
 12316 0e2d 01       		.byte	0x1
 12317 0e2e 9602     		.2byte	0x296
 12318 0e30 BD000000 		.4byte	0xbd
 12319 0e34 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 272


 12320 0e35 91       		.byte	0x91
 12321 0e36 74       		.sleb128 -12
 12322 0e37 1B       		.uleb128 0x1b
 12323 0e38 1F040000 		.4byte	.LASF204
 12324 0e3c 01       		.byte	0x1
 12325 0e3d 9702     		.2byte	0x297
 12326 0e3f BD000000 		.4byte	0xbd
 12327 0e43 02       		.uleb128 0x2
 12328 0e44 91       		.byte	0x91
 12329 0e45 68       		.sleb128 -24
 12330 0e46 1B       		.uleb128 0x1b
 12331 0e47 29040000 		.4byte	.LASF205
 12332 0e4b 01       		.byte	0x1
 12333 0e4c 9702     		.2byte	0x297
 12334 0e4e BD000000 		.4byte	0xbd
 12335 0e52 02       		.uleb128 0x2
 12336 0e53 91       		.byte	0x91
 12337 0e54 64       		.sleb128 -28
 12338 0e55 1D       		.uleb128 0x1d
 12339 0e56 4D4F5400 		.ascii	"MOT\000"
 12340 0e5a 01       		.byte	0x1
 12341 0e5b 9802     		.2byte	0x298
 12342 0e5d A10E0000 		.4byte	0xea1
 12343 0e61 02       		.uleb128 0x2
 12344 0e62 91       		.byte	0x91
 12345 0e63 70       		.sleb128 -16
 12346 0e64 1B       		.uleb128 0x1b
 12347 0e65 B7110000 		.4byte	.LASF206
 12348 0e69 01       		.byte	0x1
 12349 0e6a 9902     		.2byte	0x299
 12350 0e6c 81000000 		.4byte	0x81
 12351 0e70 02       		.uleb128 0x2
 12352 0e71 91       		.byte	0x91
 12353 0e72 6F       		.sleb128 -17
 12354 0e73 1B       		.uleb128 0x1b
 12355 0e74 0D0B0000 		.4byte	.LASF207
 12356 0e78 01       		.byte	0x1
 12357 0e79 9B02     		.2byte	0x29b
 12358 0e7b 49070000 		.4byte	0x749
 12359 0e7f 05       		.uleb128 0x5
 12360 0e80 03       		.byte	0x3
 12361 0e81 8C000000 		.4byte	current_emg.10509
 12362 0e85 21       		.uleb128 0x21
 12363 0e86 00000000 		.4byte	.Ldebug_ranges0+0
 12364 0e8a 1B       		.uleb128 0x1b
 12365 0e8b F0000000 		.4byte	.LASF208
 12366 0e8f 01       		.byte	0x1
 12367 0e90 C002     		.2byte	0x2c0
 12368 0e92 BD000000 		.4byte	0xbd
 12369 0e96 02       		.uleb128 0x2
 12370 0e97 91       		.byte	0x91
 12371 0e98 60       		.sleb128 -32
 12372 0e99 00       		.byte	0
 12373 0e9a 00       		.byte	0
 12374 0e9b 0C       		.uleb128 0xc
 12375 0e9c 04       		.byte	0x4
 12376 0e9d A5010000 		.4byte	0x1a5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 273


 12377 0ea1 0C       		.uleb128 0xc
 12378 0ea2 04       		.byte	0x4
 12379 0ea3 9D040000 		.4byte	0x49d
 12380 0ea7 22       		.uleb128 0x22
 12381 0ea8 FB100000 		.4byte	.LASF209
 12382 0eac 01       		.byte	0x1
 12383 0ead 7303     		.2byte	0x373
 12384 0eaf 00000000 		.4byte	.LFB69
 12385 0eb3 34030000 		.4byte	.LFE69-.LFB69
 12386 0eb7 01       		.uleb128 0x1
 12387 0eb8 9C       		.byte	0x9c
 12388 0eb9 370F0000 		.4byte	0xf37
 12389 0ebd 20       		.uleb128 0x20
 12390 0ebe 4B080000 		.4byte	.LASF200
 12391 0ec2 01       		.byte	0x1
 12392 0ec3 7303     		.2byte	0x373
 12393 0ec5 81000000 		.4byte	0x81
 12394 0ec9 02       		.uleb128 0x2
 12395 0eca 91       		.byte	0x91
 12396 0ecb 67       		.sleb128 -25
 12397 0ecc 20       		.uleb128 0x20
 12398 0ecd B0060000 		.4byte	.LASF201
 12399 0ed1 01       		.byte	0x1
 12400 0ed2 7303     		.2byte	0x373
 12401 0ed4 9B0E0000 		.4byte	0xe9b
 12402 0ed8 02       		.uleb128 0x2
 12403 0ed9 91       		.byte	0x91
 12404 0eda 60       		.sleb128 -32
 12405 0edb 20       		.uleb128 0x20
 12406 0edc EC110000 		.4byte	.LASF202
 12407 0ee0 01       		.byte	0x1
 12408 0ee1 7303     		.2byte	0x373
 12409 0ee3 9B0E0000 		.4byte	0xe9b
 12410 0ee7 02       		.uleb128 0x2
 12411 0ee8 91       		.byte	0x91
 12412 0ee9 5C       		.sleb128 -36
 12413 0eea 23       		.uleb128 0x23
 12414 0eeb 18000000 		.4byte	.Ldebug_ranges0+0x18
 12415 0eef 120F0000 		.4byte	0xf12
 12416 0ef3 1B       		.uleb128 0x1b
 12417 0ef4 F0000000 		.4byte	.LASF208
 12418 0ef8 01       		.byte	0x1
 12419 0ef9 7A03     		.2byte	0x37a
 12420 0efb BD000000 		.4byte	0xbd
 12421 0eff 02       		.uleb128 0x2
 12422 0f00 91       		.byte	0x91
 12423 0f01 74       		.sleb128 -12
 12424 0f02 1B       		.uleb128 0x1b
 12425 0f03 F7010000 		.4byte	.LASF210
 12426 0f07 01       		.byte	0x1
 12427 0f08 7B03     		.2byte	0x37b
 12428 0f0a BD000000 		.4byte	0xbd
 12429 0f0e 02       		.uleb128 0x2
 12430 0f0f 91       		.byte	0x91
 12431 0f10 70       		.sleb128 -16
 12432 0f11 00       		.byte	0
 12433 0f12 21       		.uleb128 0x21
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 274


 12434 0f13 30000000 		.4byte	.Ldebug_ranges0+0x30
 12435 0f17 1B       		.uleb128 0x1b
 12436 0f18 1A0E0000 		.4byte	.LASF211
 12437 0f1c 01       		.byte	0x1
 12438 0f1d A003     		.2byte	0x3a0
 12439 0f1f BD000000 		.4byte	0xbd
 12440 0f23 02       		.uleb128 0x2
 12441 0f24 91       		.byte	0x91
 12442 0f25 6C       		.sleb128 -20
 12443 0f26 1B       		.uleb128 0x1b
 12444 0f27 E1090000 		.4byte	.LASF212
 12445 0f2b 01       		.byte	0x1
 12446 0f2c A103     		.2byte	0x3a1
 12447 0f2e BD000000 		.4byte	0xbd
 12448 0f32 02       		.uleb128 0x2
 12449 0f33 91       		.byte	0x91
 12450 0f34 68       		.sleb128 -24
 12451 0f35 00       		.byte	0
 12452 0f36 00       		.byte	0
 12453 0f37 1A       		.uleb128 0x1a
 12454 0f38 0D0A0000 		.4byte	.LASF213
 12455 0f3c 01       		.byte	0x1
 12456 0f3d CC03     		.2byte	0x3cc
 12457 0f3f 00000000 		.4byte	.LFB70
 12458 0f43 B0010000 		.4byte	.LFE70-.LFB70
 12459 0f47 01       		.uleb128 0x1
 12460 0f48 9C       		.byte	0x9c
 12461 0f49 AB0F0000 		.4byte	0xfab
 12462 0f4d 20       		.uleb128 0x20
 12463 0f4e 4B080000 		.4byte	.LASF200
 12464 0f52 01       		.byte	0x1
 12465 0f53 CC03     		.2byte	0x3cc
 12466 0f55 81000000 		.4byte	0x81
 12467 0f59 02       		.uleb128 0x2
 12468 0f5a 91       		.byte	0x91
 12469 0f5b 77       		.sleb128 -9
 12470 0f5c 20       		.uleb128 0x20
 12471 0f5d B0060000 		.4byte	.LASF201
 12472 0f61 01       		.byte	0x1
 12473 0f62 CC03     		.2byte	0x3cc
 12474 0f64 9B0E0000 		.4byte	0xe9b
 12475 0f68 02       		.uleb128 0x2
 12476 0f69 91       		.byte	0x91
 12477 0f6a 70       		.sleb128 -16
 12478 0f6b 20       		.uleb128 0x20
 12479 0f6c EC110000 		.4byte	.LASF202
 12480 0f70 01       		.byte	0x1
 12481 0f71 CC03     		.2byte	0x3cc
 12482 0f73 9B0E0000 		.4byte	0xe9b
 12483 0f77 02       		.uleb128 0x2
 12484 0f78 91       		.byte	0x91
 12485 0f79 6C       		.sleb128 -20
 12486 0f7a 20       		.uleb128 0x20
 12487 0f7b 1F040000 		.4byte	.LASF204
 12488 0f7f 01       		.byte	0x1
 12489 0f80 CD03     		.2byte	0x3cd
 12490 0f82 BD000000 		.4byte	0xbd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 275


 12491 0f86 02       		.uleb128 0x2
 12492 0f87 91       		.byte	0x91
 12493 0f88 68       		.sleb128 -24
 12494 0f89 20       		.uleb128 0x20
 12495 0f8a 29040000 		.4byte	.LASF205
 12496 0f8e 01       		.byte	0x1
 12497 0f8f CD03     		.2byte	0x3cd
 12498 0f91 BD000000 		.4byte	0xbd
 12499 0f95 02       		.uleb128 0x2
 12500 0f96 91       		.byte	0x91
 12501 0f97 00       		.sleb128 0
 12502 0f98 1B       		.uleb128 0x1b
 12503 0f99 7E0C0000 		.4byte	.LASF214
 12504 0f9d 01       		.byte	0x1
 12505 0f9e D003     		.2byte	0x3d0
 12506 0fa0 81000000 		.4byte	0x81
 12507 0fa4 05       		.uleb128 0x5
 12508 0fa5 03       		.byte	0x3
 12509 0fa6 8E000000 		.4byte	fsm_state.10546
 12510 0faa 00       		.byte	0
 12511 0fab 24       		.uleb128 0x24
 12512 0fac FD050000 		.4byte	.LASF216
 12513 0fb0 01       		.byte	0x1
 12514 0fb1 0204     		.2byte	0x402
 12515 0fb3 00000000 		.4byte	.LFB71
 12516 0fb7 0C070000 		.4byte	.LFE71-.LFB71
 12517 0fbb 01       		.uleb128 0x1
 12518 0fbc 9C       		.byte	0x9c
 12519 0fbd 62110000 		.4byte	0x1162
 12520 0fc1 1B       		.uleb128 0x1b
 12521 0fc2 4B010000 		.4byte	.LASF217
 12522 0fc6 01       		.byte	0x1
 12523 0fc7 0404     		.2byte	0x404
 12524 0fc9 BD000000 		.4byte	0xbd
 12525 0fcd 02       		.uleb128 0x2
 12526 0fce 91       		.byte	0x91
 12527 0fcf 74       		.sleb128 -12
 12528 0fd0 1B       		.uleb128 0x1b
 12529 0fd1 000C0000 		.4byte	.LASF218
 12530 0fd5 01       		.byte	0x1
 12531 0fd6 0504     		.2byte	0x405
 12532 0fd8 BD000000 		.4byte	0xbd
 12533 0fdc 03       		.uleb128 0x3
 12534 0fdd 91       		.byte	0x91
 12535 0fde B07F     		.sleb128 -80
 12536 0fe0 1B       		.uleb128 0x1b
 12537 0fe1 C8100000 		.4byte	.LASF219
 12538 0fe5 01       		.byte	0x1
 12539 0fe6 0604     		.2byte	0x406
 12540 0fe8 BD000000 		.4byte	0xbd
 12541 0fec 03       		.uleb128 0x3
 12542 0fed 91       		.byte	0x91
 12543 0fee AC7F     		.sleb128 -84
 12544 0ff0 1B       		.uleb128 0x1b
 12545 0ff1 440B0000 		.4byte	.LASF220
 12546 0ff5 01       		.byte	0x1
 12547 0ff6 0704     		.2byte	0x407
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 276


 12548 0ff8 BD000000 		.4byte	0xbd
 12549 0ffc 02       		.uleb128 0x2
 12550 0ffd 91       		.byte	0x91
 12551 0ffe 70       		.sleb128 -16
 12552 0fff 1B       		.uleb128 0x1b
 12553 1000 410C0000 		.4byte	.LASF195
 12554 1004 01       		.byte	0x1
 12555 1005 0904     		.2byte	0x409
 12556 1007 81000000 		.4byte	0x81
 12557 100b 02       		.uleb128 0x2
 12558 100c 91       		.byte	0x91
 12559 100d 6F       		.sleb128 -17
 12560 100e 1B       		.uleb128 0x1b
 12561 100f 8B030000 		.4byte	.LASF221
 12562 1013 01       		.byte	0x1
 12563 1014 0B04     		.2byte	0x40b
 12564 1016 A10E0000 		.4byte	0xea1
 12565 101a 02       		.uleb128 0x2
 12566 101b 91       		.byte	0x91
 12567 101c 68       		.sleb128 -24
 12568 101d 1B       		.uleb128 0x1b
 12569 101e FF020000 		.4byte	.LASF222
 12570 1022 01       		.byte	0x1
 12571 1023 0C04     		.2byte	0x40c
 12572 1025 81000000 		.4byte	0x81
 12573 1029 02       		.uleb128 0x2
 12574 102a 91       		.byte	0x91
 12575 102b 67       		.sleb128 -25
 12576 102c 1D       		.uleb128 0x1d
 12577 102d 6B5F7000 		.ascii	"k_p\000"
 12578 1031 01       		.byte	0x1
 12579 1032 0E04     		.2byte	0x40e
 12580 1034 BD000000 		.4byte	0xbd
 12581 1038 02       		.uleb128 0x2
 12582 1039 91       		.byte	0x91
 12583 103a 60       		.sleb128 -32
 12584 103b 1D       		.uleb128 0x1d
 12585 103c 6B5F6900 		.ascii	"k_i\000"
 12586 1040 01       		.byte	0x1
 12587 1041 0F04     		.2byte	0x40f
 12588 1043 BD000000 		.4byte	0xbd
 12589 1047 02       		.uleb128 0x2
 12590 1048 91       		.byte	0x91
 12591 1049 5C       		.sleb128 -36
 12592 104a 1D       		.uleb128 0x1d
 12593 104b 6B5F6400 		.ascii	"k_d\000"
 12594 104f 01       		.byte	0x1
 12595 1050 1004     		.2byte	0x410
 12596 1052 BD000000 		.4byte	0xbd
 12597 1056 02       		.uleb128 0x2
 12598 1057 91       		.byte	0x91
 12599 1058 58       		.sleb128 -40
 12600 1059 1B       		.uleb128 0x1b
 12601 105a C50D0000 		.4byte	.LASF77
 12602 105e 01       		.byte	0x1
 12603 105f 1204     		.2byte	0x412
 12604 1061 BD000000 		.4byte	0xbd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 277


 12605 1065 02       		.uleb128 0x2
 12606 1066 91       		.byte	0x91
 12607 1067 54       		.sleb128 -44
 12608 1068 1B       		.uleb128 0x1b
 12609 1069 9D050000 		.4byte	.LASF78
 12610 106d 01       		.byte	0x1
 12611 106e 1304     		.2byte	0x413
 12612 1070 BD000000 		.4byte	0xbd
 12613 1074 02       		.uleb128 0x2
 12614 1075 91       		.byte	0x91
 12615 1076 50       		.sleb128 -48
 12616 1077 1B       		.uleb128 0x1b
 12617 1078 7A050000 		.4byte	.LASF79
 12618 107c 01       		.byte	0x1
 12619 107d 1404     		.2byte	0x414
 12620 107f BD000000 		.4byte	0xbd
 12621 1083 02       		.uleb128 0x2
 12622 1084 91       		.byte	0x91
 12623 1085 4C       		.sleb128 -52
 12624 1086 1B       		.uleb128 0x1b
 12625 1087 A1100000 		.4byte	.LASF80
 12626 108b 01       		.byte	0x1
 12627 108c 1604     		.2byte	0x416
 12628 108e BD000000 		.4byte	0xbd
 12629 1092 02       		.uleb128 0x2
 12630 1093 91       		.byte	0x91
 12631 1094 48       		.sleb128 -56
 12632 1095 1B       		.uleb128 0x1b
 12633 1096 39060000 		.4byte	.LASF81
 12634 109a 01       		.byte	0x1
 12635 109b 1704     		.2byte	0x417
 12636 109d BD000000 		.4byte	0xbd
 12637 10a1 02       		.uleb128 0x2
 12638 10a2 91       		.byte	0x91
 12639 10a3 44       		.sleb128 -60
 12640 10a4 1B       		.uleb128 0x1b
 12641 10a5 B00F0000 		.4byte	.LASF82
 12642 10a9 01       		.byte	0x1
 12643 10aa 1804     		.2byte	0x418
 12644 10ac BD000000 		.4byte	0xbd
 12645 10b0 02       		.uleb128 0x2
 12646 10b1 91       		.byte	0x91
 12647 10b2 40       		.sleb128 -64
 12648 10b3 1B       		.uleb128 0x1b
 12649 10b4 47060000 		.4byte	.LASF83
 12650 10b8 01       		.byte	0x1
 12651 10b9 1A04     		.2byte	0x41a
 12652 10bb BD000000 		.4byte	0xbd
 12653 10bf 03       		.uleb128 0x3
 12654 10c0 91       		.byte	0x91
 12655 10c1 BC7F     		.sleb128 -68
 12656 10c3 1B       		.uleb128 0x1b
 12657 10c4 8F070000 		.4byte	.LASF84
 12658 10c8 01       		.byte	0x1
 12659 10c9 1B04     		.2byte	0x41b
 12660 10cb BD000000 		.4byte	0xbd
 12661 10cf 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 278


 12662 10d0 91       		.byte	0x91
 12663 10d1 B87F     		.sleb128 -72
 12664 10d3 1B       		.uleb128 0x1b
 12665 10d4 ED120000 		.4byte	.LASF85
 12666 10d8 01       		.byte	0x1
 12667 10d9 1C04     		.2byte	0x41c
 12668 10db BD000000 		.4byte	0xbd
 12669 10df 03       		.uleb128 0x3
 12670 10e0 91       		.byte	0x91
 12671 10e1 B47F     		.sleb128 -76
 12672 10e3 1B       		.uleb128 0x1b
 12673 10e4 14060000 		.4byte	.LASF223
 12674 10e8 01       		.byte	0x1
 12675 10e9 2004     		.2byte	0x420
 12676 10eb BD000000 		.4byte	0xbd
 12677 10ef 05       		.uleb128 0x5
 12678 10f0 03       		.byte	0x3
 12679 10f1 90000000 		.4byte	pos_error_sum.10573
 12680 10f5 1B       		.uleb128 0x1b
 12681 10f6 67040000 		.4byte	.LASF224
 12682 10fa 01       		.byte	0x1
 12683 10fb 2104     		.2byte	0x421
 12684 10fd BD000000 		.4byte	0xbd
 12685 1101 05       		.uleb128 0x5
 12686 1102 03       		.byte	0x3
 12687 1103 9C000000 		.4byte	curr_error_sum.10574
 12688 1107 1B       		.uleb128 0x1b
 12689 1108 AF0B0000 		.4byte	.LASF225
 12690 110c 01       		.byte	0x1
 12691 110d 2304     		.2byte	0x423
 12692 110f BD000000 		.4byte	0xbd
 12693 1113 05       		.uleb128 0x5
 12694 1114 03       		.byte	0x3
 12695 1115 94000000 		.4byte	prev_pos_err.10575
 12696 1119 1B       		.uleb128 0x1b
 12697 111a 060D0000 		.4byte	.LASF226
 12698 111e 01       		.byte	0x1
 12699 111f 2404     		.2byte	0x424
 12700 1121 BD000000 		.4byte	0xbd
 12701 1125 05       		.uleb128 0x5
 12702 1126 03       		.byte	0x3
 12703 1127 A0000000 		.4byte	prev_curr_err.10576
 12704 112b 1B       		.uleb128 0x1b
 12705 112c 13100000 		.4byte	.LASF227
 12706 1130 01       		.byte	0x1
 12707 1131 2504     		.2byte	0x425
 12708 1133 BD000000 		.4byte	0xbd
 12709 1137 05       		.uleb128 0x5
 12710 1138 03       		.byte	0x3
 12711 1139 A4000000 		.4byte	prev_pwm.10577
 12712 113d 1B       		.uleb128 0x1b
 12713 113e A3050000 		.4byte	.LASF228
 12714 1142 01       		.byte	0x1
 12715 1143 2704     		.2byte	0x427
 12716 1145 81000000 		.4byte	0x81
 12717 1149 05       		.uleb128 0x5
 12718 114a 03       		.byte	0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 279


 12719 114b 98000000 		.4byte	motor_dir.10578
 12720 114f 1B       		.uleb128 0x1b
 12721 1150 6C060000 		.4byte	.LASF229
 12722 1154 01       		.byte	0x1
 12723 1155 2804     		.2byte	0x428
 12724 1157 99000000 		.4byte	0x99
 12725 115b 05       		.uleb128 0x5
 12726 115c 03       		.byte	0x3
 12727 115d A8000000 		.4byte	position_counter.10579
 12728 1161 00       		.byte	0
 12729 1162 1A       		.uleb128 0x1a
 12730 1163 44050000 		.4byte	.LASF230
 12731 1167 01       		.byte	0x1
 12732 1168 3205     		.2byte	0x532
 12733 116a 00000000 		.4byte	.LFB72
 12734 116e 70090000 		.4byte	.LFE72-.LFB72
 12735 1172 01       		.uleb128 0x1
 12736 1173 9C       		.byte	0x9c
 12737 1174 1B130000 		.4byte	0x131b
 12738 1178 25       		.uleb128 0x25
 12739 1179 69647800 		.ascii	"idx\000"
 12740 117d 01       		.byte	0x1
 12741 117e 3205     		.2byte	0x532
 12742 1180 81000000 		.4byte	0x81
 12743 1184 03       		.uleb128 0x3
 12744 1185 91       		.byte	0x91
 12745 1186 A77F     		.sleb128 -89
 12746 1188 1B       		.uleb128 0x1b
 12747 1189 4B010000 		.4byte	.LASF217
 12748 118d 01       		.byte	0x1
 12749 118e 3405     		.2byte	0x534
 12750 1190 BD000000 		.4byte	0xbd
 12751 1194 02       		.uleb128 0x2
 12752 1195 91       		.byte	0x91
 12753 1196 6C       		.sleb128 -20
 12754 1197 1B       		.uleb128 0x1b
 12755 1198 000C0000 		.4byte	.LASF218
 12756 119c 01       		.byte	0x1
 12757 119d 3505     		.2byte	0x535
 12758 119f BD000000 		.4byte	0xbd
 12759 11a3 03       		.uleb128 0x3
 12760 11a4 91       		.byte	0x91
 12761 11a5 AC7F     		.sleb128 -84
 12762 11a7 1B       		.uleb128 0x1b
 12763 11a8 C8100000 		.4byte	.LASF219
 12764 11ac 01       		.byte	0x1
 12765 11ad 3605     		.2byte	0x536
 12766 11af BD000000 		.4byte	0xbd
 12767 11b3 03       		.uleb128 0x3
 12768 11b4 91       		.byte	0x91
 12769 11b5 A87F     		.sleb128 -88
 12770 11b7 1B       		.uleb128 0x1b
 12771 11b8 440B0000 		.4byte	.LASF220
 12772 11bc 01       		.byte	0x1
 12773 11bd 3705     		.2byte	0x537
 12774 11bf BD000000 		.4byte	0xbd
 12775 11c3 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 280


 12776 11c4 91       		.byte	0x91
 12777 11c5 68       		.sleb128 -24
 12778 11c6 1D       		.uleb128 0x1d
 12779 11c7 4D4F5400 		.ascii	"MOT\000"
 12780 11cb 01       		.byte	0x1
 12781 11cc 3905     		.2byte	0x539
 12782 11ce A10E0000 		.4byte	0xea1
 12783 11d2 02       		.uleb128 0x2
 12784 11d3 91       		.byte	0x91
 12785 11d4 64       		.sleb128 -28
 12786 11d5 1B       		.uleb128 0x1b
 12787 11d6 B7110000 		.4byte	.LASF206
 12788 11da 01       		.byte	0x1
 12789 11db 3A05     		.2byte	0x53a
 12790 11dd 81000000 		.4byte	0x81
 12791 11e1 02       		.uleb128 0x2
 12792 11e2 91       		.byte	0x91
 12793 11e3 63       		.sleb128 -29
 12794 11e4 1D       		.uleb128 0x1d
 12795 11e5 6B5F7000 		.ascii	"k_p\000"
 12796 11e9 01       		.byte	0x1
 12797 11ea 3C05     		.2byte	0x53c
 12798 11ec BD000000 		.4byte	0xbd
 12799 11f0 02       		.uleb128 0x2
 12800 11f1 91       		.byte	0x91
 12801 11f2 5C       		.sleb128 -36
 12802 11f3 1D       		.uleb128 0x1d
 12803 11f4 6B5F6900 		.ascii	"k_i\000"
 12804 11f8 01       		.byte	0x1
 12805 11f9 3D05     		.2byte	0x53d
 12806 11fb BD000000 		.4byte	0xbd
 12807 11ff 02       		.uleb128 0x2
 12808 1200 91       		.byte	0x91
 12809 1201 58       		.sleb128 -40
 12810 1202 1D       		.uleb128 0x1d
 12811 1203 6B5F6400 		.ascii	"k_d\000"
 12812 1207 01       		.byte	0x1
 12813 1208 3E05     		.2byte	0x53e
 12814 120a BD000000 		.4byte	0xbd
 12815 120e 02       		.uleb128 0x2
 12816 120f 91       		.byte	0x91
 12817 1210 54       		.sleb128 -44
 12818 1211 1B       		.uleb128 0x1b
 12819 1212 C50D0000 		.4byte	.LASF77
 12820 1216 01       		.byte	0x1
 12821 1217 4005     		.2byte	0x540
 12822 1219 BD000000 		.4byte	0xbd
 12823 121d 02       		.uleb128 0x2
 12824 121e 91       		.byte	0x91
 12825 121f 50       		.sleb128 -48
 12826 1220 1B       		.uleb128 0x1b
 12827 1221 9D050000 		.4byte	.LASF78
 12828 1225 01       		.byte	0x1
 12829 1226 4105     		.2byte	0x541
 12830 1228 BD000000 		.4byte	0xbd
 12831 122c 02       		.uleb128 0x2
 12832 122d 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 281


 12833 122e 4C       		.sleb128 -52
 12834 122f 1B       		.uleb128 0x1b
 12835 1230 7A050000 		.4byte	.LASF79
 12836 1234 01       		.byte	0x1
 12837 1235 4205     		.2byte	0x542
 12838 1237 BD000000 		.4byte	0xbd
 12839 123b 02       		.uleb128 0x2
 12840 123c 91       		.byte	0x91
 12841 123d 48       		.sleb128 -56
 12842 123e 1B       		.uleb128 0x1b
 12843 123f A1100000 		.4byte	.LASF80
 12844 1243 01       		.byte	0x1
 12845 1244 4405     		.2byte	0x544
 12846 1246 BD000000 		.4byte	0xbd
 12847 124a 02       		.uleb128 0x2
 12848 124b 91       		.byte	0x91
 12849 124c 44       		.sleb128 -60
 12850 124d 1B       		.uleb128 0x1b
 12851 124e 39060000 		.4byte	.LASF81
 12852 1252 01       		.byte	0x1
 12853 1253 4505     		.2byte	0x545
 12854 1255 BD000000 		.4byte	0xbd
 12855 1259 02       		.uleb128 0x2
 12856 125a 91       		.byte	0x91
 12857 125b 40       		.sleb128 -64
 12858 125c 1B       		.uleb128 0x1b
 12859 125d B00F0000 		.4byte	.LASF82
 12860 1261 01       		.byte	0x1
 12861 1262 4605     		.2byte	0x546
 12862 1264 BD000000 		.4byte	0xbd
 12863 1268 03       		.uleb128 0x3
 12864 1269 91       		.byte	0x91
 12865 126a BC7F     		.sleb128 -68
 12866 126c 1B       		.uleb128 0x1b
 12867 126d 47060000 		.4byte	.LASF83
 12868 1271 01       		.byte	0x1
 12869 1272 4805     		.2byte	0x548
 12870 1274 BD000000 		.4byte	0xbd
 12871 1278 03       		.uleb128 0x3
 12872 1279 91       		.byte	0x91
 12873 127a B87F     		.sleb128 -72
 12874 127c 1B       		.uleb128 0x1b
 12875 127d 8F070000 		.4byte	.LASF84
 12876 1281 01       		.byte	0x1
 12877 1282 4905     		.2byte	0x549
 12878 1284 BD000000 		.4byte	0xbd
 12879 1288 03       		.uleb128 0x3
 12880 1289 91       		.byte	0x91
 12881 128a B47F     		.sleb128 -76
 12882 128c 1B       		.uleb128 0x1b
 12883 128d ED120000 		.4byte	.LASF85
 12884 1291 01       		.byte	0x1
 12885 1292 4A05     		.2byte	0x54a
 12886 1294 BD000000 		.4byte	0xbd
 12887 1298 03       		.uleb128 0x3
 12888 1299 91       		.byte	0x91
 12889 129a B07F     		.sleb128 -80
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 282


 12890 129c 1B       		.uleb128 0x1b
 12891 129d 14060000 		.4byte	.LASF223
 12892 12a1 01       		.byte	0x1
 12893 12a2 4E05     		.2byte	0x54e
 12894 12a4 94020000 		.4byte	0x294
 12895 12a8 05       		.uleb128 0x5
 12896 12a9 03       		.byte	0x3
 12897 12aa AC000000 		.4byte	pos_error_sum.10606
 12898 12ae 1B       		.uleb128 0x1b
 12899 12af 67040000 		.4byte	.LASF224
 12900 12b3 01       		.byte	0x1
 12901 12b4 4F05     		.2byte	0x54f
 12902 12b6 94020000 		.4byte	0x294
 12903 12ba 05       		.uleb128 0x5
 12904 12bb 03       		.byte	0x3
 12905 12bc C0000000 		.4byte	curr_error_sum.10607
 12906 12c0 1B       		.uleb128 0x1b
 12907 12c1 AF0B0000 		.4byte	.LASF225
 12908 12c5 01       		.byte	0x1
 12909 12c6 5105     		.2byte	0x551
 12910 12c8 94020000 		.4byte	0x294
 12911 12cc 05       		.uleb128 0x5
 12912 12cd 03       		.byte	0x3
 12913 12ce B4000000 		.4byte	prev_pos_err.10608
 12914 12d2 1B       		.uleb128 0x1b
 12915 12d3 060D0000 		.4byte	.LASF226
 12916 12d7 01       		.byte	0x1
 12917 12d8 5205     		.2byte	0x552
 12918 12da 94020000 		.4byte	0x294
 12919 12de 05       		.uleb128 0x5
 12920 12df 03       		.byte	0x3
 12921 12e0 C8000000 		.4byte	prev_curr_err.10609
 12922 12e4 1B       		.uleb128 0x1b
 12923 12e5 13100000 		.4byte	.LASF227
 12924 12e9 01       		.byte	0x1
 12925 12ea 5305     		.2byte	0x553
 12926 12ec 94020000 		.4byte	0x294
 12927 12f0 05       		.uleb128 0x5
 12928 12f1 03       		.byte	0x3
 12929 12f2 D0000000 		.4byte	prev_pwm.10610
 12930 12f6 1B       		.uleb128 0x1b
 12931 12f7 A3050000 		.4byte	.LASF228
 12932 12fb 01       		.byte	0x1
 12933 12fc 5505     		.2byte	0x555
 12934 12fe 49070000 		.4byte	0x749
 12935 1302 05       		.uleb128 0x5
 12936 1303 03       		.byte	0x3
 12937 1304 BC000000 		.4byte	motor_dir.10611
 12938 1308 1B       		.uleb128 0x1b
 12939 1309 6C060000 		.4byte	.LASF229
 12940 130d 01       		.byte	0x1
 12941 130e 5605     		.2byte	0x556
 12942 1310 BE030000 		.4byte	0x3be
 12943 1314 05       		.uleb128 0x5
 12944 1315 03       		.byte	0x3
 12945 1316 D8000000 		.4byte	position_counter.10612
 12946 131a 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 283


 12947 131b 1A       		.uleb128 0x1a
 12948 131c A9030000 		.4byte	.LASF231
 12949 1320 01       		.byte	0x1
 12950 1321 AF06     		.2byte	0x6af
 12951 1323 00000000 		.4byte	.LFB73
 12952 1327 18080000 		.4byte	.LFE73-.LFB73
 12953 132b 01       		.uleb128 0x1
 12954 132c 9C       		.byte	0x9c
 12955 132d A3140000 		.4byte	0x14a3
 12956 1331 20       		.uleb128 0x20
 12957 1332 C6000000 		.4byte	.LASF232
 12958 1336 01       		.byte	0x1
 12959 1337 AF06     		.2byte	0x6af
 12960 1339 81000000 		.4byte	0x81
 12961 133d 03       		.uleb128 0x3
 12962 133e 91       		.byte	0x91
 12963 133f BF7F     		.sleb128 -65
 12964 1341 20       		.uleb128 0x20
 12965 1342 300B0000 		.4byte	.LASF233
 12966 1346 01       		.byte	0x1
 12967 1347 AF06     		.2byte	0x6af
 12968 1349 81000000 		.4byte	0x81
 12969 134d 03       		.uleb128 0x3
 12970 134e 91       		.byte	0x91
 12971 134f BE7F     		.sleb128 -66
 12972 1351 1B       		.uleb128 0x1b
 12973 1352 4A070000 		.4byte	.LASF234
 12974 1356 01       		.byte	0x1
 12975 1357 B106     		.2byte	0x6b1
 12976 1359 81000000 		.4byte	0x81
 12977 135d 02       		.uleb128 0x2
 12978 135e 91       		.byte	0x91
 12979 135f 67       		.sleb128 -25
 12980 1360 1D       		.uleb128 0x1d
 12981 1361 6A6A00   		.ascii	"jj\000"
 12982 1364 01       		.byte	0x1
 12983 1365 B406     		.2byte	0x6b4
 12984 1367 81000000 		.4byte	0x81
 12985 136b 02       		.uleb128 0x2
 12986 136c 91       		.byte	0x91
 12987 136d 66       		.sleb128 -26
 12988 136e 1B       		.uleb128 0x1b
 12989 136f 73030000 		.4byte	.LASF235
 12990 1373 01       		.byte	0x1
 12991 1374 B606     		.2byte	0x6b6
 12992 1376 A3140000 		.4byte	0x14a3
 12993 137a 02       		.uleb128 0x2
 12994 137b 91       		.byte	0x91
 12995 137c 40       		.sleb128 -64
 12996 137d 1B       		.uleb128 0x1b
 12997 137e 28110000 		.4byte	.LASF236
 12998 1382 01       		.byte	0x1
 12999 1383 B706     		.2byte	0x6b7
 13000 1385 B1000000 		.4byte	0xb1
 13001 1389 02       		.uleb128 0x2
 13002 138a 91       		.byte	0x91
 13003 138b 64       		.sleb128 -28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 284


 13004 138c 1B       		.uleb128 0x1b
 13005 138d F10C0000 		.4byte	.LASF237
 13006 1391 01       		.byte	0x1
 13007 1392 B806     		.2byte	0x6b8
 13008 1394 BD000000 		.4byte	0xbd
 13009 1398 02       		.uleb128 0x2
 13010 1399 91       		.byte	0x91
 13011 139a 54       		.sleb128 -44
 13012 139b 1B       		.uleb128 0x1b
 13013 139c B70F0000 		.4byte	.LASF238
 13014 13a0 01       		.byte	0x1
 13015 13a1 B906     		.2byte	0x6b9
 13016 13a3 BD000000 		.4byte	0xbd
 13017 13a7 02       		.uleb128 0x2
 13018 13a8 91       		.byte	0x91
 13019 13a9 60       		.sleb128 -32
 13020 13aa 1B       		.uleb128 0x1b
 13021 13ab B0040000 		.4byte	.LASF239
 13022 13af 01       		.byte	0x1
 13023 13b0 BA06     		.2byte	0x6ba
 13024 13b2 BD000000 		.4byte	0xbd
 13025 13b6 02       		.uleb128 0x2
 13026 13b7 91       		.byte	0x91
 13027 13b8 4C       		.sleb128 -52
 13028 13b9 1B       		.uleb128 0x1b
 13029 13ba 920F0000 		.4byte	.LASF240
 13030 13be 01       		.byte	0x1
 13031 13bf BB06     		.2byte	0x6bb
 13032 13c1 BD000000 		.4byte	0xbd
 13033 13c5 02       		.uleb128 0x2
 13034 13c6 91       		.byte	0x91
 13035 13c7 50       		.sleb128 -48
 13036 13c8 1B       		.uleb128 0x1b
 13037 13c9 BC0B0000 		.4byte	.LASF241
 13038 13cd 01       		.byte	0x1
 13039 13ce BC06     		.2byte	0x6bc
 13040 13d0 A5000000 		.4byte	0xa5
 13041 13d4 02       		.uleb128 0x2
 13042 13d5 91       		.byte	0x91
 13043 13d6 5F       		.sleb128 -33
 13044 13d7 1B       		.uleb128 0x1b
 13045 13d8 4B0C0000 		.4byte	.LASF242
 13046 13dc 01       		.byte	0x1
 13047 13dd BE06     		.2byte	0x6be
 13048 13df B3140000 		.4byte	0x14b3
 13049 13e3 05       		.uleb128 0x5
 13050 13e4 03       		.byte	0x3
 13051 13e5 E0000000 		.4byte	last_value_encoder.10635
 13052 13e9 1B       		.uleb128 0x1b
 13053 13ea FE060000 		.4byte	.LASF243
 13054 13ee 01       		.byte	0x1
 13055 13ef BF06     		.2byte	0x6bf
 13056 13f1 B3140000 		.4byte	0x14b3
 13057 13f5 05       		.uleb128 0x5
 13058 13f6 03       		.byte	0x3
 13059 13f7 F8000000 		.4byte	comp_value_encoder.10636
 13060 13fb 1B       		.uleb128 0x1b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 285


 13061 13fc BD030000 		.4byte	.LASF244
 13062 1400 01       		.byte	0x1
 13063 1401 C006     		.2byte	0x6c0
 13064 1403 C9140000 		.4byte	0x14c9
 13065 1407 05       		.uleb128 0x5
 13066 1408 03       		.byte	0x3
 13067 1409 10010000 		.4byte	error.10637
 13068 140d 1B       		.uleb128 0x1b
 13069 140e 700F0000 		.4byte	.LASF245
 13070 1412 01       		.byte	0x1
 13071 1413 C206     		.2byte	0x6c2
 13072 1415 49070000 		.4byte	0x749
 13073 1419 05       		.uleb128 0x5
 13074 141a 03       		.byte	0x3
 13075 141b 04000000 		.4byte	only_first_time.10638
 13076 141f 1B       		.uleb128 0x1b
 13077 1420 2E030000 		.4byte	.LASF246
 13078 1424 01       		.byte	0x1
 13079 1425 C306     		.2byte	0x6c3
 13080 1427 49070000 		.4byte	0x749
 13081 142b 05       		.uleb128 0x5
 13082 142c 03       		.byte	0x3
 13083 142d 64010000 		.4byte	safe_startup_motor_activation.10639
 13084 1431 1B       		.uleb128 0x1b
 13085 1432 98000000 		.4byte	.LASF247
 13086 1436 01       		.byte	0x1
 13087 1437 C406     		.2byte	0x6c4
 13088 1439 49070000 		.4byte	0x749
 13089 143d 05       		.uleb128 0x5
 13090 143e 03       		.byte	0x3
 13091 143f 60010000 		.4byte	one_time_execute.10640
 13092 1443 1B       		.uleb128 0x1b
 13093 1444 4E0A0000 		.4byte	.LASF248
 13094 1448 01       		.byte	0x1
 13095 1449 C506     		.2byte	0x6c5
 13096 144b BE030000 		.4byte	0x3be
 13097 144f 05       		.uleb128 0x5
 13098 1450 03       		.byte	0x3
 13099 1451 68010000 		.4byte	count_startup_motor.10641
 13100 1455 1B       		.uleb128 0x1b
 13101 1456 6F090000 		.4byte	.LASF249
 13102 145a 01       		.byte	0x1
 13103 145b C706     		.2byte	0x6c7
 13104 145d B3140000 		.4byte	0x14b3
 13105 1461 05       		.uleb128 0x5
 13106 1462 03       		.byte	0x3
 13107 1463 18010000 		.4byte	v_value.10642
 13108 1467 1B       		.uleb128 0x1b
 13109 1468 E4120000 		.4byte	.LASF250
 13110 146c 01       		.byte	0x1
 13111 146d C806     		.2byte	0x6c8
 13112 146f B3140000 		.4byte	0x14b3
 13113 1473 05       		.uleb128 0x5
 13114 1474 03       		.byte	0x3
 13115 1475 30010000 		.4byte	vv_value.10643
 13116 1479 1B       		.uleb128 0x1b
 13117 147a 99010000 		.4byte	.LASF251
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 286


 13118 147e 01       		.byte	0x1
 13119 147f C906     		.2byte	0x6c9
 13120 1481 B3140000 		.4byte	0x14b3
 13121 1485 05       		.uleb128 0x5
 13122 1486 03       		.byte	0x3
 13123 1487 48010000 		.4byte	vvv_value.10644
 13124 148b 1E       		.uleb128 0x1e
 13125 148c 98000000 		.4byte	.LBB10
 13126 1490 6A000000 		.4byte	.LBE10-.LBB10
 13127 1494 1D       		.uleb128 0x1d
 13128 1495 6A00     		.ascii	"j\000"
 13129 1497 01       		.byte	0x1
 13130 1498 D906     		.2byte	0x6d9
 13131 149a 68000000 		.4byte	0x68
 13132 149e 02       		.uleb128 0x2
 13133 149f 91       		.byte	0x91
 13134 14a0 58       		.sleb128 -40
 13135 14a1 00       		.byte	0
 13136 14a2 00       		.byte	0
 13137 14a3 07       		.uleb128 0x7
 13138 14a4 99000000 		.4byte	0x99
 13139 14a8 B3140000 		.4byte	0x14b3
 13140 14ac 08       		.uleb128 0x8
 13141 14ad 0E010000 		.4byte	0x10e
 13142 14b1 02       		.byte	0x2
 13143 14b2 00       		.byte	0
 13144 14b3 07       		.uleb128 0x7
 13145 14b4 BD000000 		.4byte	0xbd
 13146 14b8 C9140000 		.4byte	0x14c9
 13147 14bc 08       		.uleb128 0x8
 13148 14bd 0E010000 		.4byte	0x10e
 13149 14c1 01       		.byte	0x1
 13150 14c2 08       		.uleb128 0x8
 13151 14c3 0E010000 		.4byte	0x10e
 13152 14c7 02       		.byte	0x2
 13153 14c8 00       		.byte	0
 13154 14c9 07       		.uleb128 0x7
 13155 14ca 81000000 		.4byte	0x81
 13156 14ce DF140000 		.4byte	0x14df
 13157 14d2 08       		.uleb128 0x8
 13158 14d3 0E010000 		.4byte	0x10e
 13159 14d7 01       		.byte	0x1
 13160 14d8 08       		.uleb128 0x8
 13161 14d9 0E010000 		.4byte	0x10e
 13162 14dd 02       		.byte	0x2
 13163 14de 00       		.byte	0
 13164 14df 24       		.uleb128 0x24
 13165 14e0 630E0000 		.4byte	.LASF252
 13166 14e4 01       		.byte	0x1
 13167 14e5 8C07     		.2byte	0x78c
 13168 14e7 00000000 		.4byte	.LFB74
 13169 14eb E4120000 		.4byte	.LFE74-.LFB74
 13170 14ef 01       		.uleb128 0x1
 13171 14f0 9C       		.byte	0x9c
 13172 14f1 CB150000 		.4byte	0x15cb
 13173 14f5 1B       		.uleb128 0x1b
 13174 14f6 030E0000 		.4byte	.LASF253
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 287


 13175 14fa 01       		.byte	0x1
 13176 14fb A007     		.2byte	0x7a0
 13177 14fd BD000000 		.4byte	0xbd
 13178 1501 02       		.uleb128 0x2
 13179 1502 91       		.byte	0x91
 13180 1503 64       		.sleb128 -28
 13181 1504 1B       		.uleb128 0x1b
 13182 1505 540F0000 		.4byte	.LASF254
 13183 1509 01       		.byte	0x1
 13184 150a A207     		.2byte	0x7a2
 13185 150c 8D000000 		.4byte	0x8d
 13186 1510 05       		.uleb128 0x5
 13187 1511 03       		.byte	0x3
 13188 1512 78010000 		.4byte	emg_counter_1.10661
 13189 1516 1B       		.uleb128 0x1b
 13190 1517 620F0000 		.4byte	.LASF255
 13191 151b 01       		.byte	0x1
 13192 151c A307     		.2byte	0x7a3
 13193 151e 8D000000 		.4byte	0x8d
 13194 1522 05       		.uleb128 0x5
 13195 1523 03       		.byte	0x3
 13196 1524 7A010000 		.4byte	emg_counter_2.10662
 13197 1528 1B       		.uleb128 0x1b
 13198 1529 5D020000 		.4byte	.LASF256
 13199 152d 01       		.byte	0x1
 13200 152e A407     		.2byte	0x7a4
 13201 1530 8D000000 		.4byte	0x8d
 13202 1534 05       		.uleb128 0x5
 13203 1535 03       		.byte	0x3
 13204 1536 80010000 		.4byte	UD_counter.10663
 13205 153a 1B       		.uleb128 0x1b
 13206 153b CD030000 		.4byte	.LASF257
 13207 153f 01       		.byte	0x1
 13208 1540 A507     		.2byte	0x7a5
 13209 1542 8D000000 		.4byte	0x8d
 13210 1546 05       		.uleb128 0x5
 13211 1547 03       		.byte	0x3
 13212 1548 88010000 		.4byte	LR_counter.10664
 13213 154c 1B       		.uleb128 0x1b
 13214 154d 220B0000 		.4byte	.LASF258
 13215 1551 01       		.byte	0x1
 13216 1552 A607     		.2byte	0x7a6
 13217 1554 BD000000 		.4byte	0xbd
 13218 1558 05       		.uleb128 0x5
 13219 1559 03       		.byte	0x3
 13220 155a 7C010000 		.4byte	UD_mean_value.10665
 13221 155e 1B       		.uleb128 0x1b
 13222 155f 3D120000 		.4byte	.LASF259
 13223 1563 01       		.byte	0x1
 13224 1564 A707     		.2byte	0x7a7
 13225 1566 BD000000 		.4byte	0xbd
 13226 156a 05       		.uleb128 0x5
 13227 156b 03       		.byte	0x3
 13228 156c 84010000 		.4byte	LR_mean_value.10666
 13229 1570 1B       		.uleb128 0x1b
 13230 1571 B6020000 		.4byte	.LASF260
 13231 1575 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 288


 13232 1576 A807     		.2byte	0x7a8
 13233 1578 81000000 		.4byte	0x81
 13234 157c 05       		.uleb128 0x5
 13235 157d 03       		.byte	0x3
 13236 157e 0C000000 		.4byte	first_tension_valid.10667
 13237 1582 1B       		.uleb128 0x1b
 13238 1583 16050000 		.4byte	.LASF261
 13239 1587 01       		.byte	0x1
 13240 1588 A907     		.2byte	0x7a9
 13241 158a BD000000 		.4byte	0xbd
 13242 158e 05       		.uleb128 0x5
 13243 158f 03       		.byte	0x3
 13244 1590 08000000 		.4byte	detect_power_cycle_prev.10668
 13245 1594 1B       		.uleb128 0x1b
 13246 1595 7F0A0000 		.4byte	.LASF262
 13247 1599 01       		.byte	0x1
 13248 159a AA07     		.2byte	0x7aa
 13249 159c 8D000000 		.4byte	0x8d
 13250 15a0 05       		.uleb128 0x5
 13251 15a1 03       		.byte	0x3
 13252 15a2 70010000 		.4byte	count.10669
 13253 15a6 1B       		.uleb128 0x1b
 13254 15a7 89010000 		.4byte	.LASF263
 13255 15ab 01       		.byte	0x1
 13256 15ac AB07     		.2byte	0x7ab
 13257 15ae 99000000 		.4byte	0x99
 13258 15b2 05       		.uleb128 0x5
 13259 15b3 03       		.byte	0x3
 13260 15b4 74010000 		.4byte	v_count.10670
 13261 15b8 1D       		.uleb128 0x1d
 13262 15b9 69647800 		.ascii	"idx\000"
 13263 15bd 01       		.byte	0x1
 13264 15be AC07     		.2byte	0x7ac
 13265 15c0 81000000 		.4byte	0x81
 13266 15c4 05       		.uleb128 0x5
 13267 15c5 03       		.byte	0x3
 13268 15c6 72010000 		.4byte	idx.10671
 13269 15ca 00       		.byte	0
 13270 15cb 26       		.uleb128 0x26
 13271 15cc 2E0E0000 		.4byte	.LASF264
 13272 15d0 01       		.byte	0x1
 13273 15d1 0F0A     		.2byte	0xa0f
 13274 15d3 00000000 		.4byte	.LFB75
 13275 15d7 0C010000 		.4byte	.LFE75-.LFB75
 13276 15db 01       		.uleb128 0x1
 13277 15dc 9C       		.byte	0x9c
 13278 15dd 12160000 		.4byte	0x1612
 13279 15e1 1E       		.uleb128 0x1e
 13280 15e2 06000000 		.4byte	.LBB11
 13281 15e6 E6000000 		.4byte	.LBE11-.LBB11
 13282 15ea 1D       		.uleb128 0x1d
 13283 15eb 6900     		.ascii	"i\000"
 13284 15ed 01       		.byte	0x1
 13285 15ee 110A     		.2byte	0xa11
 13286 15f0 81000000 		.4byte	0x81
 13287 15f4 02       		.uleb128 0x2
 13288 15f5 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 289


 13289 15f6 77       		.sleb128 -9
 13290 15f7 1E       		.uleb128 0x1e
 13291 15f8 26000000 		.4byte	.LBB12
 13292 15fc BA000000 		.4byte	.LBE12-.LBB12
 13293 1600 1B       		.uleb128 0x1b
 13294 1601 85080000 		.4byte	.LASF40
 13295 1605 01       		.byte	0x1
 13296 1606 130A     		.2byte	0xa13
 13297 1608 BD000000 		.4byte	0xbd
 13298 160c 02       		.uleb128 0x2
 13299 160d 91       		.byte	0x91
 13300 160e 70       		.sleb128 -16
 13301 160f 00       		.byte	0
 13302 1610 00       		.byte	0
 13303 1611 00       		.byte	0
 13304 1612 22       		.uleb128 0x22
 13305 1613 E8030000 		.4byte	.LASF265
 13306 1617 01       		.byte	0x1
 13307 1618 310A     		.2byte	0xa31
 13308 161a 00000000 		.4byte	.LFB76
 13309 161e A8000000 		.4byte	.LFE76-.LFB76
 13310 1622 01       		.uleb128 0x1
 13311 1623 9C       		.byte	0x9c
 13312 1624 65160000 		.4byte	0x1665
 13313 1628 20       		.uleb128 0x20
 13314 1629 C50B0000 		.4byte	.LASF266
 13315 162d 01       		.byte	0x1
 13316 162e 310A     		.2byte	0xa31
 13317 1630 81000000 		.4byte	0x81
 13318 1634 02       		.uleb128 0x2
 13319 1635 91       		.byte	0x91
 13320 1636 6F       		.sleb128 -17
 13321 1637 1B       		.uleb128 0x1b
 13322 1638 4A070000 		.4byte	.LASF234
 13323 163c 01       		.byte	0x1
 13324 163d 330A     		.2byte	0xa33
 13325 163f 81000000 		.4byte	0x81
 13326 1643 02       		.uleb128 0x2
 13327 1644 91       		.byte	0x91
 13328 1645 73       		.sleb128 -13
 13329 1646 1B       		.uleb128 0x1b
 13330 1647 350C0000 		.4byte	.LASF267
 13331 164b 01       		.byte	0x1
 13332 164c 340A     		.2byte	0xa34
 13333 164e 8D000000 		.4byte	0x8d
 13334 1652 02       		.uleb128 0x2
 13335 1653 91       		.byte	0x91
 13336 1654 76       		.sleb128 -10
 13337 1655 1B       		.uleb128 0x1b
 13338 1656 2F080000 		.4byte	.LASF268
 13339 165a 01       		.byte	0x1
 13340 165b 350A     		.2byte	0xa35
 13341 165d 8D000000 		.4byte	0x8d
 13342 1661 02       		.uleb128 0x2
 13343 1662 91       		.byte	0x91
 13344 1663 74       		.sleb128 -12
 13345 1664 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 290


 13346 1665 24       		.uleb128 0x24
 13347 1666 AC080000 		.4byte	.LASF269
 13348 166a 01       		.byte	0x1
 13349 166b 490A     		.2byte	0xa49
 13350 166d 00000000 		.4byte	.LFB77
 13351 1671 58060000 		.4byte	.LFE77-.LFB77
 13352 1675 01       		.uleb128 0x1
 13353 1676 9C       		.byte	0x9c
 13354 1677 FD170000 		.4byte	0x17fd
 13355 167b 1B       		.uleb128 0x1b
 13356 167c 26000000 		.4byte	.LASF270
 13357 1680 01       		.byte	0x1
 13358 1681 4A0A     		.2byte	0xa4a
 13359 1683 81000000 		.4byte	0x81
 13360 1687 05       		.uleb128 0x5
 13361 1688 03       		.byte	0x3
 13362 1689 8A010000 		.4byte	pos_cycle_status.10742
 13363 168d 1B       		.uleb128 0x1b
 13364 168e 950E0000 		.4byte	.LASF271
 13365 1692 01       		.byte	0x1
 13366 1693 4B0A     		.2byte	0xa4b
 13367 1695 49070000 		.4byte	0x749
 13368 1699 05       		.uleb128 0x5
 13369 169a 03       		.byte	0x3
 13370 169b 94010000 		.4byte	emg_cycle_status.10743
 13371 169f 1B       		.uleb128 0x1b
 13372 16a0 C00C0000 		.4byte	.LASF272
 13373 16a4 01       		.byte	0x1
 13374 16a5 4C0A     		.2byte	0xa4c
 13375 16a7 49070000 		.4byte	0x749
 13376 16ab 05       		.uleb128 0x5
 13377 16ac 03       		.byte	0x3
 13378 16ad 98010000 		.4byte	motion_status.10744
 13379 16b1 1B       		.uleb128 0x1b
 13380 16b2 910A0000 		.4byte	.LASF273
 13381 16b6 01       		.byte	0x1
 13382 16b7 4D0A     		.2byte	0xa4d
 13383 16b9 49070000 		.4byte	0x749
 13384 16bd 05       		.uleb128 0x5
 13385 16be 03       		.byte	0x3
 13386 16bf A4010000 		.4byte	emg_excess_status.10745
 13387 16c3 1B       		.uleb128 0x1b
 13388 16c4 E9100000 		.4byte	.LASF274
 13389 16c8 01       		.byte	0x1
 13390 16c9 4E0A     		.2byte	0xa4e
 13391 16cb 81000000 		.4byte	0x81
 13392 16cf 05       		.uleb128 0x5
 13393 16d0 03       		.byte	0x3
 13394 16d1 B8010000 		.4byte	rest_cycle_status.10746
 13395 16d5 1B       		.uleb128 0x1b
 13396 16d6 17030000 		.4byte	.LASF275
 13397 16da 01       		.byte	0x1
 13398 16db 4F0A     		.2byte	0xa4f
 13399 16dd BD000000 		.4byte	0xbd
 13400 16e1 05       		.uleb128 0x5
 13401 16e2 03       		.byte	0x3
 13402 16e3 10000000 		.4byte	bin_threshold.10747
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 291


 13403 16e7 1B       		.uleb128 0x1b
 13404 16e8 7E100000 		.4byte	.LASF276
 13405 16ec 01       		.byte	0x1
 13406 16ed 500A     		.2byte	0xa50
 13407 16ef BD000000 		.4byte	0xbd
 13408 16f3 05       		.uleb128 0x5
 13409 16f4 03       		.byte	0x3
 13410 16f5 14000000 		.4byte	exc_act_thr.10748
 13411 16f9 1B       		.uleb128 0x1b
 13412 16fa E4010000 		.4byte	.LASF277
 13413 16fe 01       		.byte	0x1
 13414 16ff 510A     		.2byte	0xa51
 13415 1701 BD000000 		.4byte	0xbd
 13416 1705 05       		.uleb128 0x5
 13417 1706 03       		.byte	0x3
 13418 1707 8C010000 		.4byte	thr_pos.10749
 13419 170b 1B       		.uleb128 0x1b
 13420 170c BD0A0000 		.4byte	.LASF278
 13421 1710 01       		.byte	0x1
 13422 1711 520A     		.2byte	0xa52
 13423 1713 BD000000 		.4byte	0xbd
 13424 1717 05       		.uleb128 0x5
 13425 1718 03       		.byte	0x3
 13426 1719 90010000 		.4byte	max_pos.10750
 13427 171d 1D       		.uleb128 0x1d
 13428 171e 6900     		.ascii	"i\000"
 13429 1720 01       		.byte	0x1
 13430 1721 530A     		.2byte	0xa53
 13431 1723 81000000 		.4byte	0x81
 13432 1727 02       		.uleb128 0x2
 13433 1728 91       		.byte	0x91
 13434 1729 6F       		.sleb128 -17
 13435 172a 1B       		.uleb128 0x1b
 13436 172b AD050000 		.4byte	.LASF279
 13437 172f 01       		.byte	0x1
 13438 1730 530A     		.2byte	0xa53
 13439 1732 81000000 		.4byte	0x81
 13440 1736 02       		.uleb128 0x2
 13441 1737 91       		.byte	0x91
 13442 1738 5B       		.sleb128 -37
 13443 1739 1B       		.uleb128 0x1b
 13444 173a 16010000 		.4byte	.LASF280
 13445 173e 01       		.byte	0x1
 13446 173f 530A     		.2byte	0xa53
 13447 1741 81000000 		.4byte	0x81
 13448 1745 02       		.uleb128 0x2
 13449 1746 91       		.byte	0x91
 13450 1747 5A       		.sleb128 -38
 13451 1748 1B       		.uleb128 0x1b
 13452 1749 F70D0000 		.4byte	.LASF281
 13453 174d 01       		.byte	0x1
 13454 174e 530A     		.2byte	0xa53
 13455 1750 81000000 		.4byte	0x81
 13456 1754 02       		.uleb128 0x2
 13457 1755 91       		.byte	0x91
 13458 1756 59       		.sleb128 -39
 13459 1757 1B       		.uleb128 0x1b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 292


 13460 1758 FD0D0000 		.4byte	.LASF282
 13461 175c 01       		.byte	0x1
 13462 175d 530A     		.2byte	0xa53
 13463 175f 81000000 		.4byte	0x81
 13464 1763 02       		.uleb128 0x2
 13465 1764 91       		.byte	0x91
 13466 1765 58       		.sleb128 -40
 13467 1766 1B       		.uleb128 0x1b
 13468 1767 420E0000 		.4byte	.LASF283
 13469 176b 01       		.byte	0x1
 13470 176c 540A     		.2byte	0xa54
 13471 176e BD000000 		.4byte	0xbd
 13472 1772 02       		.uleb128 0x2
 13473 1773 91       		.byte	0x91
 13474 1774 64       		.sleb128 -28
 13475 1775 1B       		.uleb128 0x1b
 13476 1776 C7040000 		.4byte	.LASF284
 13477 177a 01       		.byte	0x1
 13478 177b 540A     		.2byte	0xa54
 13479 177d BD000000 		.4byte	0xbd
 13480 1781 02       		.uleb128 0x2
 13481 1782 91       		.byte	0x91
 13482 1783 60       		.sleb128 -32
 13483 1784 1B       		.uleb128 0x1b
 13484 1785 9D0F0000 		.4byte	.LASF285
 13485 1789 01       		.byte	0x1
 13486 178a 540A     		.2byte	0xa54
 13487 178c BD000000 		.4byte	0xbd
 13488 1790 02       		.uleb128 0x2
 13489 1791 91       		.byte	0x91
 13490 1792 68       		.sleb128 -24
 13491 1793 1B       		.uleb128 0x1b
 13492 1794 62040000 		.4byte	.LASF286
 13493 1798 01       		.byte	0x1
 13494 1799 550A     		.2byte	0xa55
 13495 179b BD000000 		.4byte	0xbd
 13496 179f 02       		.uleb128 0x2
 13497 17a0 91       		.byte	0x91
 13498 17a1 5C       		.sleb128 -36
 13499 17a2 1B       		.uleb128 0x1b
 13500 17a3 E2060000 		.4byte	.LASF287
 13501 17a7 01       		.byte	0x1
 13502 17a8 560A     		.2byte	0xa56
 13503 17aa 99000000 		.4byte	0x99
 13504 17ae 05       		.uleb128 0x5
 13505 17af 03       		.byte	0x3
 13506 17b0 BC010000 		.4byte	timer_value_s.10760
 13507 17b4 1B       		.uleb128 0x1b
 13508 17b5 7D060000 		.4byte	.LASF288
 13509 17b9 01       		.byte	0x1
 13510 17ba 560A     		.2byte	0xa56
 13511 17bc 99000000 		.4byte	0x99
 13512 17c0 05       		.uleb128 0x5
 13513 17c1 03       		.byte	0x3
 13514 17c2 C0010000 		.4byte	timer_value_e.10761
 13515 17c6 1B       		.uleb128 0x1b
 13516 17c7 59100000 		.4byte	.LASF289
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 293


 13517 17cb 01       		.byte	0x1
 13518 17cc 570A     		.2byte	0xa57
 13519 17ce BE030000 		.4byte	0x3be
 13520 17d2 05       		.uleb128 0x5
 13521 17d3 03       		.byte	0x3
 13522 17d4 A8010000 		.4byte	timer_exc_s.10762
 13523 17d8 1B       		.uleb128 0x1b
 13524 17d9 34100000 		.4byte	.LASF290
 13525 17dd 01       		.byte	0x1
 13526 17de 570A     		.2byte	0xa57
 13527 17e0 BE030000 		.4byte	0x3be
 13528 17e4 05       		.uleb128 0x5
 13529 17e5 03       		.byte	0x3
 13530 17e6 B0010000 		.4byte	timer_exc_e.10763
 13531 17ea 1B       		.uleb128 0x1b
 13532 17eb 11070000 		.4byte	.LASF291
 13533 17ef 01       		.byte	0x1
 13534 17f0 580A     		.2byte	0xa58
 13535 17f2 94020000 		.4byte	0x294
 13536 17f6 05       		.uleb128 0x5
 13537 17f7 03       		.byte	0x3
 13538 17f8 9C010000 		.4byte	start_emg_pos.10764
 13539 17fc 00       		.byte	0
 13540 17fd 24       		.uleb128 0x24
 13541 17fe 580B0000 		.4byte	.LASF292
 13542 1802 01       		.byte	0x1
 13543 1803 040B     		.2byte	0xb04
 13544 1805 00000000 		.4byte	.LFB78
 13545 1809 08010000 		.4byte	.LFE78-.LFB78
 13546 180d 01       		.uleb128 0x1
 13547 180e 9C       		.byte	0x9c
 13548 180f 83180000 		.4byte	0x1883
 13549 1813 1B       		.uleb128 0x1b
 13550 1814 C1100000 		.4byte	.LASF293
 13551 1818 01       		.byte	0x1
 13552 1819 060B     		.2byte	0xb06
 13553 181b EA000000 		.4byte	0xea
 13554 181f 02       		.uleb128 0x2
 13555 1820 91       		.byte	0x91
 13556 1821 64       		.sleb128 -28
 13557 1822 1B       		.uleb128 0x1b
 13558 1823 230E0000 		.4byte	.LASF294
 13559 1827 01       		.byte	0x1
 13560 1828 070B     		.2byte	0xb07
 13561 182a 81000000 		.4byte	0x81
 13562 182e 05       		.uleb128 0x5
 13563 182f 03       		.byte	0x3
 13564 1830 C8010000 		.4byte	row_number.10800
 13565 1834 1B       		.uleb128 0x1b
 13566 1835 9A040000 		.4byte	.LASF295
 13567 1839 01       		.byte	0x1
 13568 183a 080B     		.2byte	0xb08
 13569 183c 81000000 		.4byte	0x81
 13570 1840 02       		.uleb128 0x2
 13571 1841 91       		.byte	0x91
 13572 1842 77       		.sleb128 -9
 13573 1843 1B       		.uleb128 0x1b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 294


 13574 1844 E50E0000 		.4byte	.LASF296
 13575 1848 01       		.byte	0x1
 13576 1849 090B     		.2byte	0xb09
 13577 184b 83180000 		.4byte	0x1883
 13578 184f 02       		.uleb128 0x2
 13579 1850 91       		.byte	0x91
 13580 1851 70       		.sleb128 -16
 13581 1852 1B       		.uleb128 0x1b
 13582 1853 1E010000 		.4byte	.LASF297
 13583 1857 01       		.byte	0x1
 13584 1858 0A0B     		.2byte	0xb0a
 13585 185a 83180000 		.4byte	0x1883
 13586 185e 02       		.uleb128 0x2
 13587 185f 91       		.byte	0x91
 13588 1860 6C       		.sleb128 -20
 13589 1861 1B       		.uleb128 0x1b
 13590 1862 55120000 		.4byte	.LASF298
 13591 1866 01       		.byte	0x1
 13592 1867 0B0B     		.2byte	0xb0b
 13593 1869 81000000 		.4byte	0x81
 13594 186d 02       		.uleb128 0x2
 13595 186e 91       		.byte	0x91
 13596 186f 6B       		.sleb128 -21
 13597 1870 1B       		.uleb128 0x1b
 13598 1871 A30A0000 		.4byte	.LASF299
 13599 1875 01       		.byte	0x1
 13600 1876 0C0B     		.2byte	0xb0c
 13601 1878 83180000 		.4byte	0x1883
 13602 187c 05       		.uleb128 0x5
 13603 187d 03       		.byte	0x3
 13604 187e C4010000 		.4byte	m_addr.10805
 13605 1882 00       		.byte	0
 13606 1883 0C       		.uleb128 0xc
 13607 1884 04       		.byte	0x4
 13608 1885 81000000 		.4byte	0x81
 13609 1889 07       		.uleb128 0x7
 13610 188a 99180000 		.4byte	0x1899
 13611 188e 99180000 		.4byte	0x1899
 13612 1892 08       		.uleb128 0x8
 13613 1893 0E010000 		.4byte	0x10e
 13614 1897 1C       		.byte	0x1c
 13615 1898 00       		.byte	0
 13616 1899 27       		.uleb128 0x27
 13617 189a 81000000 		.4byte	0x81
 13618 189e 19       		.uleb128 0x19
 13619 189f F00E0000 		.4byte	.LASF300
 13620 18a3 01       		.byte	0x1
 13621 18a4 40       		.byte	0x40
 13622 18a5 AF180000 		.4byte	0x18af
 13623 18a9 05       		.uleb128 0x5
 13624 18aa 03       		.byte	0x3
 13625 18ab 00000000 		.4byte	pwm_preload_values
 13626 18af 27       		.uleb128 0x27
 13627 18b0 89180000 		.4byte	0x1889
 13628 18b4 28       		.uleb128 0x28
 13629 18b5 40100000 		.4byte	.LASF301
 13630 18b9 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 295


 13631 18ba 1207     		.2byte	0x712
 13632 18bc C0180000 		.4byte	0x18c0
 13633 18c0 06       		.uleb128 0x6
 13634 18c1 76000000 		.4byte	0x76
 13635 18c5 07       		.uleb128 0x7
 13636 18c6 A5010000 		.4byte	0x1a5
 13637 18ca D5180000 		.4byte	0x18d5
 13638 18ce 08       		.uleb128 0x8
 13639 18cf 0E010000 		.4byte	0x10e
 13640 18d3 01       		.byte	0x1
 13641 18d4 00       		.byte	0
 13642 18d5 28       		.uleb128 0x28
 13643 18d6 30070000 		.4byte	.LASF302
 13644 18da 07       		.byte	0x7
 13645 18db 2202     		.2byte	0x222
 13646 18dd C5180000 		.4byte	0x18c5
 13647 18e1 28       		.uleb128 0x28
 13648 18e2 BE040000 		.4byte	.LASF303
 13649 18e6 07       		.byte	0x7
 13650 18e7 2202     		.2byte	0x222
 13651 18e9 C5180000 		.4byte	0x18c5
 13652 18ed 28       		.uleb128 0x28
 13653 18ee F70B0000 		.4byte	.LASF304
 13654 18f2 07       		.byte	0x7
 13655 18f3 2202     		.2byte	0x222
 13656 18f5 C5180000 		.4byte	0x18c5
 13657 18f9 07       		.uleb128 0x7
 13658 18fa E2010000 		.4byte	0x1e2
 13659 18fe 09190000 		.4byte	0x1909
 13660 1902 08       		.uleb128 0x8
 13661 1903 0E010000 		.4byte	0x10e
 13662 1907 01       		.byte	0x1
 13663 1908 00       		.byte	0
 13664 1909 28       		.uleb128 0x28
 13665 190a DB060000 		.4byte	.LASF305
 13666 190e 07       		.byte	0x7
 13667 190f 2302     		.2byte	0x223
 13668 1911 F9180000 		.4byte	0x18f9
 13669 1915 28       		.uleb128 0x28
 13670 1916 4B120000 		.4byte	.LASF306
 13671 191a 07       		.byte	0x7
 13672 191b 2302     		.2byte	0x223
 13673 191d F9180000 		.4byte	0x18f9
 13674 1921 28       		.uleb128 0x28
 13675 1922 97110000 		.4byte	.LASF307
 13676 1926 07       		.byte	0x7
 13677 1927 2402     		.2byte	0x224
 13678 1929 63020000 		.4byte	0x263
 13679 192d 28       		.uleb128 0x28
 13680 192e 65030000 		.4byte	.LASF308
 13681 1932 07       		.byte	0x7
 13682 1933 2402     		.2byte	0x224
 13683 1935 63020000 		.4byte	0x263
 13684 1939 28       		.uleb128 0x28
 13685 193a 350F0000 		.4byte	.LASF309
 13686 193e 07       		.byte	0x7
 13687 193f 2502     		.2byte	0x225
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 296


 13688 1941 B4020000 		.4byte	0x2b4
 13689 1945 28       		.uleb128 0x28
 13690 1946 93000000 		.4byte	.LASF310
 13691 194a 07       		.byte	0x7
 13692 194b 2602     		.2byte	0x226
 13693 194d CF020000 		.4byte	0x2cf
 13694 1951 28       		.uleb128 0x28
 13695 1952 4E0F0000 		.4byte	.LASF311
 13696 1956 07       		.byte	0x7
 13697 1957 2702     		.2byte	0x227
 13698 1959 DC090000 		.4byte	0x9dc
 13699 195d 28       		.uleb128 0x28
 13700 195e AA0A0000 		.4byte	.LASF312
 13701 1962 07       		.byte	0x7
 13702 1963 2702     		.2byte	0x227
 13703 1965 DC090000 		.4byte	0x9dc
 13704 1969 28       		.uleb128 0x28
 13705 196a 77090000 		.4byte	.LASF313
 13706 196e 07       		.byte	0x7
 13707 196f 2802     		.2byte	0x228
 13708 1971 B50B0000 		.4byte	0xbb5
 13709 1975 07       		.uleb128 0x7
 13710 1976 8D0B0000 		.4byte	0xb8d
 13711 197a 85190000 		.4byte	0x1985
 13712 197e 08       		.uleb128 0x8
 13713 197f 0E010000 		.4byte	0x10e
 13714 1983 01       		.byte	0x1
 13715 1984 00       		.byte	0
 13716 1985 28       		.uleb128 0x28
 13717 1986 E30B0000 		.4byte	.LASF314
 13718 198a 07       		.byte	0x7
 13719 198b 2902     		.2byte	0x229
 13720 198d 75190000 		.4byte	0x1975
 13721 1991 28       		.uleb128 0x28
 13722 1992 D2090000 		.4byte	.LASF315
 13723 1996 07       		.byte	0x7
 13724 1997 2902     		.2byte	0x229
 13725 1999 75190000 		.4byte	0x1975
 13726 199d 28       		.uleb128 0x28
 13727 199e CD0B0000 		.4byte	.LASF316
 13728 19a2 07       		.byte	0x7
 13729 19a3 2902     		.2byte	0x229
 13730 19a5 75190000 		.4byte	0x1975
 13731 19a9 07       		.uleb128 0x7
 13732 19aa 8D0B0000 		.4byte	0xb8d
 13733 19ae B9190000 		.4byte	0x19b9
 13734 19b2 08       		.uleb128 0x8
 13735 19b3 0E010000 		.4byte	0x10e
 13736 19b7 02       		.byte	0x2
 13737 19b8 00       		.byte	0
 13738 19b9 28       		.uleb128 0x28
 13739 19ba 60050000 		.4byte	.LASF317
 13740 19be 07       		.byte	0x7
 13741 19bf 2A02     		.2byte	0x22a
 13742 19c1 A9190000 		.4byte	0x19a9
 13743 19c5 07       		.uleb128 0x7
 13744 19c6 8D0B0000 		.4byte	0xb8d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 297


 13745 19ca D5190000 		.4byte	0x19d5
 13746 19ce 08       		.uleb128 0x8
 13747 19cf 0E010000 		.4byte	0x10e
 13748 19d3 07       		.byte	0x7
 13749 19d4 00       		.byte	0
 13750 19d5 28       		.uleb128 0x28
 13751 19d6 AE010000 		.4byte	.LASF318
 13752 19da 07       		.byte	0x7
 13753 19db 2B02     		.2byte	0x22b
 13754 19dd C5190000 		.4byte	0x19c5
 13755 19e1 28       		.uleb128 0x28
 13756 19e2 92030000 		.4byte	.LASF319
 13757 19e6 07       		.byte	0x7
 13758 19e7 2C02     		.2byte	0x22c
 13759 19e9 8D0B0000 		.4byte	0xb8d
 13760 19ed 28       		.uleb128 0x28
 13761 19ee CA020000 		.4byte	.LASF320
 13762 19f2 07       		.byte	0x7
 13763 19f3 2E02     		.2byte	0x22e
 13764 19f5 8D000000 		.4byte	0x8d
 13765 19f9 28       		.uleb128 0x28
 13766 19fa 57090000 		.4byte	.LASF321
 13767 19fe 07       		.byte	0x7
 13768 19ff 2F02     		.2byte	0x22f
 13769 1a01 8D000000 		.4byte	0x8d
 13770 1a05 28       		.uleb128 0x28
 13771 1a06 730C0000 		.4byte	.LASF322
 13772 1a0a 07       		.byte	0x7
 13773 1a0b 3002     		.2byte	0x230
 13774 1a0d D5000000 		.4byte	0xd5
 13775 1a11 28       		.uleb128 0x28
 13776 1a12 CB0D0000 		.4byte	.LASF323
 13777 1a16 07       		.byte	0x7
 13778 1a17 3202     		.2byte	0x232
 13779 1a19 94020000 		.4byte	0x294
 13780 1a1d 28       		.uleb128 0x28
 13781 1a1e B3100000 		.4byte	.LASF324
 13782 1a22 07       		.byte	0x7
 13783 1a23 3302     		.2byte	0x233
 13784 1a25 39070000 		.4byte	0x739
 13785 1a29 28       		.uleb128 0x28
 13786 1a2a D40F0000 		.4byte	.LASF325
 13787 1a2e 07       		.byte	0x7
 13788 1a2f 3402     		.2byte	0x234
 13789 1a31 39070000 		.4byte	0x739
 13790 1a35 28       		.uleb128 0x28
 13791 1a36 2B060000 		.4byte	.LASF326
 13792 1a3a 07       		.byte	0x7
 13793 1a3b 3502     		.2byte	0x235
 13794 1a3d 94020000 		.4byte	0x294
 13795 1a41 28       		.uleb128 0x28
 13796 1a42 4D100000 		.4byte	.LASF327
 13797 1a46 07       		.byte	0x7
 13798 1a47 3602     		.2byte	0x236
 13799 1a49 94020000 		.4byte	0x294
 13800 1a4d 28       		.uleb128 0x28
 13801 1a4e 9F0C0000 		.4byte	.LASF328
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 298


 13802 1a52 07       		.byte	0x7
 13803 1a53 3702     		.2byte	0x237
 13804 1a55 BD000000 		.4byte	0xbd
 13805 1a59 28       		.uleb128 0x28
 13806 1a5a B9060000 		.4byte	.LASF329
 13807 1a5e 07       		.byte	0x7
 13808 1a5f 3902     		.2byte	0x239
 13809 1a61 610C0000 		.4byte	0xc61
 13810 1a65 28       		.uleb128 0x28
 13811 1a66 E8040000 		.4byte	.LASF330
 13812 1a6a 07       		.byte	0x7
 13813 1a6b 3A02     		.2byte	0x23a
 13814 1a6d 290C0000 		.4byte	0xc29
 13815 1a71 28       		.uleb128 0x28
 13816 1a72 3E040000 		.4byte	.LASF331
 13817 1a76 07       		.byte	0x7
 13818 1a77 3B02     		.2byte	0x23b
 13819 1a79 290C0000 		.4byte	0xc29
 13820 1a7d 28       		.uleb128 0x28
 13821 1a7e B20C0000 		.4byte	.LASF332
 13822 1a82 07       		.byte	0x7
 13823 1a83 3C02     		.2byte	0x23c
 13824 1a85 290C0000 		.4byte	0xc29
 13825 1a89 28       		.uleb128 0x28
 13826 1a8a C7110000 		.4byte	.LASF333
 13827 1a8e 07       		.byte	0x7
 13828 1a8f 3D02     		.2byte	0x23d
 13829 1a91 290C0000 		.4byte	0xc29
 13830 1a95 28       		.uleb128 0x28
 13831 1a96 5B080000 		.4byte	.LASF334
 13832 1a9a 07       		.byte	0x7
 13833 1a9b 4002     		.2byte	0x240
 13834 1a9d 49070000 		.4byte	0x749
 13835 1aa1 28       		.uleb128 0x28
 13836 1aa2 E2000000 		.4byte	.LASF335
 13837 1aa6 07       		.byte	0x7
 13838 1aa7 4102     		.2byte	0x241
 13839 1aa9 81000000 		.4byte	0x81
 13840 1aad 28       		.uleb128 0x28
 13841 1aae 53040000 		.4byte	.LASF336
 13842 1ab2 07       		.byte	0x7
 13843 1ab3 4202     		.2byte	0x242
 13844 1ab5 81000000 		.4byte	0x81
 13845 1ab9 28       		.uleb128 0x28
 13846 1aba 00010000 		.4byte	.LASF337
 13847 1abe 07       		.byte	0x7
 13848 1abf 4302     		.2byte	0x243
 13849 1ac1 81000000 		.4byte	0x81
 13850 1ac5 28       		.uleb128 0x28
 13851 1ac6 7F120000 		.4byte	.LASF338
 13852 1aca 07       		.byte	0x7
 13853 1acb 4502     		.2byte	0x245
 13854 1acd 81000000 		.4byte	0x81
 13855 1ad1 28       		.uleb128 0x28
 13856 1ad2 EA0B0000 		.4byte	.LASF339
 13857 1ad6 07       		.byte	0x7
 13858 1ad7 4602     		.2byte	0x246
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 299


 13859 1ad9 81000000 		.4byte	0x81
 13860 1add 28       		.uleb128 0x28
 13861 1ade A4040000 		.4byte	.LASF340
 13862 1ae2 07       		.byte	0x7
 13863 1ae3 4702     		.2byte	0x247
 13864 1ae5 81000000 		.4byte	0x81
 13865 1ae9 28       		.uleb128 0x28
 13866 1aea 3B080000 		.4byte	.LASF341
 13867 1aee 07       		.byte	0x7
 13868 1aef 4802     		.2byte	0x248
 13869 1af1 81000000 		.4byte	0x81
 13870 1af5 28       		.uleb128 0x28
 13871 1af6 B7090000 		.4byte	.LASF342
 13872 1afa 07       		.byte	0x7
 13873 1afb 4902     		.2byte	0x249
 13874 1afd 81000000 		.4byte	0x81
 13875 1b01 07       		.uleb128 0x7
 13876 1b02 B1000000 		.4byte	0xb1
 13877 1b06 111B0000 		.4byte	0x1b11
 13878 1b0a 08       		.uleb128 0x8
 13879 1b0b 0E010000 		.4byte	0x10e
 13880 1b0f 0B       		.byte	0xb
 13881 1b10 00       		.byte	0
 13882 1b11 28       		.uleb128 0x28
 13883 1b12 4B040000 		.4byte	.LASF343
 13884 1b16 07       		.byte	0x7
 13885 1b17 4D02     		.2byte	0x24d
 13886 1b19 011B0000 		.4byte	0x1b01
 13887 1b1d 28       		.uleb128 0x28
 13888 1b1e FE110000 		.4byte	.LASF344
 13889 1b22 07       		.byte	0x7
 13890 1b23 4E02     		.2byte	0x24e
 13891 1b25 81000000 		.4byte	0x81
 13892 1b29 07       		.uleb128 0x7
 13893 1b2a A5000000 		.4byte	0xa5
 13894 1b2e 391B0000 		.4byte	0x1b39
 13895 1b32 08       		.uleb128 0x8
 13896 1b33 0E010000 		.4byte	0x10e
 13897 1b37 01       		.byte	0x1
 13898 1b38 00       		.byte	0
 13899 1b39 28       		.uleb128 0x28
 13900 1b3a 3B050000 		.4byte	.LASF345
 13901 1b3e 07       		.byte	0x7
 13902 1b3f 5102     		.2byte	0x251
 13903 1b41 291B0000 		.4byte	0x1b29
 13904 1b45 07       		.uleb128 0x7
 13905 1b46 99000000 		.4byte	0x99
 13906 1b4a 5B1B0000 		.4byte	0x1b5b
 13907 1b4e 08       		.uleb128 0x8
 13908 1b4f 0E010000 		.4byte	0x10e
 13909 1b53 01       		.byte	0x1
 13910 1b54 08       		.uleb128 0x8
 13911 1b55 0E010000 		.4byte	0x10e
 13912 1b59 04       		.byte	0x4
 13913 1b5a 00       		.byte	0
 13914 1b5b 28       		.uleb128 0x28
 13915 1b5c 1F070000 		.4byte	.LASF346
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 300


 13916 1b60 07       		.byte	0x7
 13917 1b61 5402     		.2byte	0x254
 13918 1b63 451B0000 		.4byte	0x1b45
 13919 1b67 28       		.uleb128 0x28
 13920 1b68 730E0000 		.4byte	.LASF347
 13921 1b6c 07       		.byte	0x7
 13922 1b6d 5502     		.2byte	0x255
 13923 1b6f 49070000 		.4byte	0x749
 13924 1b73 07       		.uleb128 0x7
 13925 1b74 8D000000 		.4byte	0x8d
 13926 1b78 891B0000 		.4byte	0x1b89
 13927 1b7c 08       		.uleb128 0x8
 13928 1b7d 0E010000 		.4byte	0x10e
 13929 1b81 01       		.byte	0x1
 13930 1b82 08       		.uleb128 0x8
 13931 1b83 0E010000 		.4byte	0x10e
 13932 1b87 04       		.byte	0x4
 13933 1b88 00       		.byte	0
 13934 1b89 28       		.uleb128 0x28
 13935 1b8a D3100000 		.4byte	.LASF348
 13936 1b8e 07       		.byte	0x7
 13937 1b8f 5602     		.2byte	0x256
 13938 1b91 731B0000 		.4byte	0x1b73
 13939 1b95 07       		.uleb128 0x7
 13940 1b96 81000000 		.4byte	0x81
 13941 1b9a AB1B0000 		.4byte	0x1bab
 13942 1b9e 08       		.uleb128 0x8
 13943 1b9f 0E010000 		.4byte	0x10e
 13944 1ba3 01       		.byte	0x1
 13945 1ba4 08       		.uleb128 0x8
 13946 1ba5 0E010000 		.4byte	0x10e
 13947 1ba9 04       		.byte	0x4
 13948 1baa 00       		.byte	0
 13949 1bab 28       		.uleb128 0x28
 13950 1bac F0060000 		.4byte	.LASF349
 13951 1bb0 07       		.byte	0x7
 13952 1bb1 5702     		.2byte	0x257
 13953 1bb3 951B0000 		.4byte	0x1b95
 13954 1bb7 28       		.uleb128 0x28
 13955 1bb8 D8030000 		.4byte	.LASF350
 13956 1bbc 07       		.byte	0x7
 13957 1bbd 5802     		.2byte	0x258
 13958 1bbf 49070000 		.4byte	0x749
 13959 1bc3 28       		.uleb128 0x28
 13960 1bc4 C50A0000 		.4byte	.LASF351
 13961 1bc8 07       		.byte	0x7
 13962 1bc9 5B02     		.2byte	0x25b
 13963 1bcb BD000000 		.4byte	0xbd
 13964 1bcf 28       		.uleb128 0x28
 13965 1bd0 0E060000 		.4byte	.LASF352
 13966 1bd4 07       		.byte	0x7
 13967 1bd5 5E02     		.2byte	0x25e
 13968 1bd7 9F010000 		.4byte	0x19f
 13969 1bdb 28       		.uleb128 0x28
 13970 1bdc D5070000 		.4byte	.LASF353
 13971 1be0 07       		.byte	0x7
 13972 1be1 6102     		.2byte	0x261
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 301


 13973 1be3 9F010000 		.4byte	0x19f
 13974 1be7 07       		.uleb128 0x7
 13975 1be8 110B0000 		.4byte	0xb11
 13976 1bec F71B0000 		.4byte	0x1bf7
 13977 1bf0 08       		.uleb128 0x8
 13978 1bf1 0E010000 		.4byte	0x10e
 13979 1bf5 04       		.byte	0x4
 13980 1bf6 00       		.byte	0
 13981 1bf7 28       		.uleb128 0x28
 13982 1bf8 5A050000 		.4byte	.LASF354
 13983 1bfc 07       		.byte	0x7
 13984 1bfd 6A02     		.2byte	0x26a
 13985 1bff E71B0000 		.4byte	0x1be7
 13986 1c03 28       		.uleb128 0x28
 13987 1c04 5D060000 		.4byte	.LASF355
 13988 1c08 07       		.byte	0x7
 13989 1c09 6A02     		.2byte	0x26a
 13990 1c0b E71B0000 		.4byte	0x1be7
 13991 1c0f 28       		.uleb128 0x28
 13992 1c10 1C120000 		.4byte	.LASF356
 13993 1c14 07       		.byte	0x7
 13994 1c15 7302     		.2byte	0x273
 13995 1c17 81000000 		.4byte	0x81
 13996 1c1b 00       		.byte	0
 13997              		.section	.debug_abbrev,"",%progbits
 13998              	.Ldebug_abbrev0:
 13999 0000 01       		.uleb128 0x1
 14000 0001 11       		.uleb128 0x11
 14001 0002 01       		.byte	0x1
 14002 0003 25       		.uleb128 0x25
 14003 0004 0E       		.uleb128 0xe
 14004 0005 13       		.uleb128 0x13
 14005 0006 0B       		.uleb128 0xb
 14006 0007 03       		.uleb128 0x3
 14007 0008 0E       		.uleb128 0xe
 14008 0009 1B       		.uleb128 0x1b
 14009 000a 0E       		.uleb128 0xe
 14010 000b 55       		.uleb128 0x55
 14011 000c 17       		.uleb128 0x17
 14012 000d 11       		.uleb128 0x11
 14013 000e 01       		.uleb128 0x1
 14014 000f 10       		.uleb128 0x10
 14015 0010 17       		.uleb128 0x17
 14016 0011 00       		.byte	0
 14017 0012 00       		.byte	0
 14018 0013 02       		.uleb128 0x2
 14019 0014 24       		.uleb128 0x24
 14020 0015 00       		.byte	0
 14021 0016 0B       		.uleb128 0xb
 14022 0017 0B       		.uleb128 0xb
 14023 0018 3E       		.uleb128 0x3e
 14024 0019 0B       		.uleb128 0xb
 14025 001a 03       		.uleb128 0x3
 14026 001b 0E       		.uleb128 0xe
 14027 001c 00       		.byte	0
 14028 001d 00       		.byte	0
 14029 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 302


 14030 001f 16       		.uleb128 0x16
 14031 0020 00       		.byte	0
 14032 0021 03       		.uleb128 0x3
 14033 0022 0E       		.uleb128 0xe
 14034 0023 3A       		.uleb128 0x3a
 14035 0024 0B       		.uleb128 0xb
 14036 0025 3B       		.uleb128 0x3b
 14037 0026 0B       		.uleb128 0xb
 14038 0027 49       		.uleb128 0x49
 14039 0028 13       		.uleb128 0x13
 14040 0029 00       		.byte	0
 14041 002a 00       		.byte	0
 14042 002b 04       		.uleb128 0x4
 14043 002c 24       		.uleb128 0x24
 14044 002d 00       		.byte	0
 14045 002e 0B       		.uleb128 0xb
 14046 002f 0B       		.uleb128 0xb
 14047 0030 3E       		.uleb128 0x3e
 14048 0031 0B       		.uleb128 0xb
 14049 0032 03       		.uleb128 0x3
 14050 0033 08       		.uleb128 0x8
 14051 0034 00       		.byte	0
 14052 0035 00       		.byte	0
 14053 0036 05       		.uleb128 0x5
 14054 0037 16       		.uleb128 0x16
 14055 0038 00       		.byte	0
 14056 0039 03       		.uleb128 0x3
 14057 003a 0E       		.uleb128 0xe
 14058 003b 3A       		.uleb128 0x3a
 14059 003c 0B       		.uleb128 0xb
 14060 003d 3B       		.uleb128 0x3b
 14061 003e 05       		.uleb128 0x5
 14062 003f 49       		.uleb128 0x49
 14063 0040 13       		.uleb128 0x13
 14064 0041 00       		.byte	0
 14065 0042 00       		.byte	0
 14066 0043 06       		.uleb128 0x6
 14067 0044 35       		.uleb128 0x35
 14068 0045 00       		.byte	0
 14069 0046 49       		.uleb128 0x49
 14070 0047 13       		.uleb128 0x13
 14071 0048 00       		.byte	0
 14072 0049 00       		.byte	0
 14073 004a 07       		.uleb128 0x7
 14074 004b 01       		.uleb128 0x1
 14075 004c 01       		.byte	0x1
 14076 004d 49       		.uleb128 0x49
 14077 004e 13       		.uleb128 0x13
 14078 004f 01       		.uleb128 0x1
 14079 0050 13       		.uleb128 0x13
 14080 0051 00       		.byte	0
 14081 0052 00       		.byte	0
 14082 0053 08       		.uleb128 0x8
 14083 0054 21       		.uleb128 0x21
 14084 0055 00       		.byte	0
 14085 0056 49       		.uleb128 0x49
 14086 0057 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 303


 14087 0058 2F       		.uleb128 0x2f
 14088 0059 0B       		.uleb128 0xb
 14089 005a 00       		.byte	0
 14090 005b 00       		.byte	0
 14091 005c 09       		.uleb128 0x9
 14092 005d 04       		.uleb128 0x4
 14093 005e 01       		.byte	0x1
 14094 005f 03       		.uleb128 0x3
 14095 0060 0E       		.uleb128 0xe
 14096 0061 0B       		.uleb128 0xb
 14097 0062 0B       		.uleb128 0xb
 14098 0063 49       		.uleb128 0x49
 14099 0064 13       		.uleb128 0x13
 14100 0065 3A       		.uleb128 0x3a
 14101 0066 0B       		.uleb128 0xb
 14102 0067 3B       		.uleb128 0x3b
 14103 0068 0B       		.uleb128 0xb
 14104 0069 01       		.uleb128 0x1
 14105 006a 13       		.uleb128 0x13
 14106 006b 00       		.byte	0
 14107 006c 00       		.byte	0
 14108 006d 0A       		.uleb128 0xa
 14109 006e 28       		.uleb128 0x28
 14110 006f 00       		.byte	0
 14111 0070 03       		.uleb128 0x3
 14112 0071 0E       		.uleb128 0xe
 14113 0072 1C       		.uleb128 0x1c
 14114 0073 0B       		.uleb128 0xb
 14115 0074 00       		.byte	0
 14116 0075 00       		.byte	0
 14117 0076 0B       		.uleb128 0xb
 14118 0077 13       		.uleb128 0x13
 14119 0078 00       		.byte	0
 14120 0079 03       		.uleb128 0x3
 14121 007a 0E       		.uleb128 0xe
 14122 007b 3C       		.uleb128 0x3c
 14123 007c 19       		.uleb128 0x19
 14124 007d 00       		.byte	0
 14125 007e 00       		.byte	0
 14126 007f 0C       		.uleb128 0xc
 14127 0080 0F       		.uleb128 0xf
 14128 0081 00       		.byte	0
 14129 0082 0B       		.uleb128 0xb
 14130 0083 0B       		.uleb128 0xb
 14131 0084 49       		.uleb128 0x49
 14132 0085 13       		.uleb128 0x13
 14133 0086 00       		.byte	0
 14134 0087 00       		.byte	0
 14135 0088 0D       		.uleb128 0xd
 14136 0089 13       		.uleb128 0x13
 14137 008a 01       		.byte	0x1
 14138 008b 03       		.uleb128 0x3
 14139 008c 0E       		.uleb128 0xe
 14140 008d 0B       		.uleb128 0xb
 14141 008e 0B       		.uleb128 0xb
 14142 008f 3A       		.uleb128 0x3a
 14143 0090 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 304


 14144 0091 3B       		.uleb128 0x3b
 14145 0092 0B       		.uleb128 0xb
 14146 0093 01       		.uleb128 0x1
 14147 0094 13       		.uleb128 0x13
 14148 0095 00       		.byte	0
 14149 0096 00       		.byte	0
 14150 0097 0E       		.uleb128 0xe
 14151 0098 0D       		.uleb128 0xd
 14152 0099 00       		.byte	0
 14153 009a 03       		.uleb128 0x3
 14154 009b 08       		.uleb128 0x8
 14155 009c 3A       		.uleb128 0x3a
 14156 009d 0B       		.uleb128 0xb
 14157 009e 3B       		.uleb128 0x3b
 14158 009f 0B       		.uleb128 0xb
 14159 00a0 49       		.uleb128 0x49
 14160 00a1 13       		.uleb128 0x13
 14161 00a2 38       		.uleb128 0x38
 14162 00a3 0B       		.uleb128 0xb
 14163 00a4 00       		.byte	0
 14164 00a5 00       		.byte	0
 14165 00a6 0F       		.uleb128 0xf
 14166 00a7 0D       		.uleb128 0xd
 14167 00a8 00       		.byte	0
 14168 00a9 03       		.uleb128 0x3
 14169 00aa 0E       		.uleb128 0xe
 14170 00ab 3A       		.uleb128 0x3a
 14171 00ac 0B       		.uleb128 0xb
 14172 00ad 3B       		.uleb128 0x3b
 14173 00ae 0B       		.uleb128 0xb
 14174 00af 49       		.uleb128 0x49
 14175 00b0 13       		.uleb128 0x13
 14176 00b1 38       		.uleb128 0x38
 14177 00b2 0B       		.uleb128 0xb
 14178 00b3 00       		.byte	0
 14179 00b4 00       		.byte	0
 14180 00b5 10       		.uleb128 0x10
 14181 00b6 13       		.uleb128 0x13
 14182 00b7 01       		.byte	0x1
 14183 00b8 03       		.uleb128 0x3
 14184 00b9 0E       		.uleb128 0xe
 14185 00ba 0B       		.uleb128 0xb
 14186 00bb 0B       		.uleb128 0xb
 14187 00bc 3A       		.uleb128 0x3a
 14188 00bd 0B       		.uleb128 0xb
 14189 00be 3B       		.uleb128 0x3b
 14190 00bf 05       		.uleb128 0x5
 14191 00c0 01       		.uleb128 0x1
 14192 00c1 13       		.uleb128 0x13
 14193 00c2 00       		.byte	0
 14194 00c3 00       		.byte	0
 14195 00c4 11       		.uleb128 0x11
 14196 00c5 0D       		.uleb128 0xd
 14197 00c6 00       		.byte	0
 14198 00c7 03       		.uleb128 0x3
 14199 00c8 0E       		.uleb128 0xe
 14200 00c9 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 305


 14201 00ca 0B       		.uleb128 0xb
 14202 00cb 3B       		.uleb128 0x3b
 14203 00cc 05       		.uleb128 0x5
 14204 00cd 49       		.uleb128 0x49
 14205 00ce 13       		.uleb128 0x13
 14206 00cf 38       		.uleb128 0x38
 14207 00d0 0B       		.uleb128 0xb
 14208 00d1 00       		.byte	0
 14209 00d2 00       		.byte	0
 14210 00d3 12       		.uleb128 0x12
 14211 00d4 0D       		.uleb128 0xd
 14212 00d5 00       		.byte	0
 14213 00d6 03       		.uleb128 0x3
 14214 00d7 08       		.uleb128 0x8
 14215 00d8 3A       		.uleb128 0x3a
 14216 00d9 0B       		.uleb128 0xb
 14217 00da 3B       		.uleb128 0x3b
 14218 00db 05       		.uleb128 0x5
 14219 00dc 49       		.uleb128 0x49
 14220 00dd 13       		.uleb128 0x13
 14221 00de 38       		.uleb128 0x38
 14222 00df 0B       		.uleb128 0xb
 14223 00e0 00       		.byte	0
 14224 00e1 00       		.byte	0
 14225 00e2 13       		.uleb128 0x13
 14226 00e3 13       		.uleb128 0x13
 14227 00e4 01       		.byte	0x1
 14228 00e5 03       		.uleb128 0x3
 14229 00e6 0E       		.uleb128 0xe
 14230 00e7 0B       		.uleb128 0xb
 14231 00e8 05       		.uleb128 0x5
 14232 00e9 3A       		.uleb128 0x3a
 14233 00ea 0B       		.uleb128 0xb
 14234 00eb 3B       		.uleb128 0x3b
 14235 00ec 05       		.uleb128 0x5
 14236 00ed 01       		.uleb128 0x1
 14237 00ee 13       		.uleb128 0x13
 14238 00ef 00       		.byte	0
 14239 00f0 00       		.byte	0
 14240 00f1 14       		.uleb128 0x14
 14241 00f2 0D       		.uleb128 0xd
 14242 00f3 00       		.byte	0
 14243 00f4 03       		.uleb128 0x3
 14244 00f5 08       		.uleb128 0x8
 14245 00f6 3A       		.uleb128 0x3a
 14246 00f7 0B       		.uleb128 0xb
 14247 00f8 3B       		.uleb128 0x3b
 14248 00f9 05       		.uleb128 0x5
 14249 00fa 49       		.uleb128 0x49
 14250 00fb 13       		.uleb128 0x13
 14251 00fc 38       		.uleb128 0x38
 14252 00fd 05       		.uleb128 0x5
 14253 00fe 00       		.byte	0
 14254 00ff 00       		.byte	0
 14255 0100 15       		.uleb128 0x15
 14256 0101 0D       		.uleb128 0xd
 14257 0102 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 306


 14258 0103 03       		.uleb128 0x3
 14259 0104 0E       		.uleb128 0xe
 14260 0105 3A       		.uleb128 0x3a
 14261 0106 0B       		.uleb128 0xb
 14262 0107 3B       		.uleb128 0x3b
 14263 0108 05       		.uleb128 0x5
 14264 0109 49       		.uleb128 0x49
 14265 010a 13       		.uleb128 0x13
 14266 010b 38       		.uleb128 0x38
 14267 010c 05       		.uleb128 0x5
 14268 010d 00       		.byte	0
 14269 010e 00       		.byte	0
 14270 010f 16       		.uleb128 0x16
 14271 0110 04       		.uleb128 0x4
 14272 0111 01       		.byte	0x1
 14273 0112 0B       		.uleb128 0xb
 14274 0113 0B       		.uleb128 0xb
 14275 0114 49       		.uleb128 0x49
 14276 0115 13       		.uleb128 0x13
 14277 0116 3A       		.uleb128 0x3a
 14278 0117 0B       		.uleb128 0xb
 14279 0118 3B       		.uleb128 0x3b
 14280 0119 05       		.uleb128 0x5
 14281 011a 01       		.uleb128 0x1
 14282 011b 13       		.uleb128 0x13
 14283 011c 00       		.byte	0
 14284 011d 00       		.byte	0
 14285 011e 17       		.uleb128 0x17
 14286 011f 2E       		.uleb128 0x2e
 14287 0120 00       		.byte	0
 14288 0121 3F       		.uleb128 0x3f
 14289 0122 19       		.uleb128 0x19
 14290 0123 03       		.uleb128 0x3
 14291 0124 0E       		.uleb128 0xe
 14292 0125 3A       		.uleb128 0x3a
 14293 0126 0B       		.uleb128 0xb
 14294 0127 3B       		.uleb128 0x3b
 14295 0128 0B       		.uleb128 0xb
 14296 0129 27       		.uleb128 0x27
 14297 012a 19       		.uleb128 0x19
 14298 012b 11       		.uleb128 0x11
 14299 012c 01       		.uleb128 0x1
 14300 012d 12       		.uleb128 0x12
 14301 012e 06       		.uleb128 0x6
 14302 012f 40       		.uleb128 0x40
 14303 0130 18       		.uleb128 0x18
 14304 0131 9742     		.uleb128 0x2117
 14305 0133 19       		.uleb128 0x19
 14306 0134 00       		.byte	0
 14307 0135 00       		.byte	0
 14308 0136 18       		.uleb128 0x18
 14309 0137 2E       		.uleb128 0x2e
 14310 0138 01       		.byte	0x1
 14311 0139 3F       		.uleb128 0x3f
 14312 013a 19       		.uleb128 0x19
 14313 013b 03       		.uleb128 0x3
 14314 013c 0E       		.uleb128 0xe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 307


 14315 013d 3A       		.uleb128 0x3a
 14316 013e 0B       		.uleb128 0xb
 14317 013f 3B       		.uleb128 0x3b
 14318 0140 0B       		.uleb128 0xb
 14319 0141 11       		.uleb128 0x11
 14320 0142 01       		.uleb128 0x1
 14321 0143 12       		.uleb128 0x12
 14322 0144 06       		.uleb128 0x6
 14323 0145 40       		.uleb128 0x40
 14324 0146 18       		.uleb128 0x18
 14325 0147 9642     		.uleb128 0x2116
 14326 0149 19       		.uleb128 0x19
 14327 014a 01       		.uleb128 0x1
 14328 014b 13       		.uleb128 0x13
 14329 014c 00       		.byte	0
 14330 014d 00       		.byte	0
 14331 014e 19       		.uleb128 0x19
 14332 014f 34       		.uleb128 0x34
 14333 0150 00       		.byte	0
 14334 0151 03       		.uleb128 0x3
 14335 0152 0E       		.uleb128 0xe
 14336 0153 3A       		.uleb128 0x3a
 14337 0154 0B       		.uleb128 0xb
 14338 0155 3B       		.uleb128 0x3b
 14339 0156 0B       		.uleb128 0xb
 14340 0157 49       		.uleb128 0x49
 14341 0158 13       		.uleb128 0x13
 14342 0159 02       		.uleb128 0x2
 14343 015a 18       		.uleb128 0x18
 14344 015b 00       		.byte	0
 14345 015c 00       		.byte	0
 14346 015d 1A       		.uleb128 0x1a
 14347 015e 2E       		.uleb128 0x2e
 14348 015f 01       		.byte	0x1
 14349 0160 3F       		.uleb128 0x3f
 14350 0161 19       		.uleb128 0x19
 14351 0162 03       		.uleb128 0x3
 14352 0163 0E       		.uleb128 0xe
 14353 0164 3A       		.uleb128 0x3a
 14354 0165 0B       		.uleb128 0xb
 14355 0166 3B       		.uleb128 0x3b
 14356 0167 05       		.uleb128 0x5
 14357 0168 27       		.uleb128 0x27
 14358 0169 19       		.uleb128 0x19
 14359 016a 11       		.uleb128 0x11
 14360 016b 01       		.uleb128 0x1
 14361 016c 12       		.uleb128 0x12
 14362 016d 06       		.uleb128 0x6
 14363 016e 40       		.uleb128 0x40
 14364 016f 18       		.uleb128 0x18
 14365 0170 9642     		.uleb128 0x2116
 14366 0172 19       		.uleb128 0x19
 14367 0173 01       		.uleb128 0x1
 14368 0174 13       		.uleb128 0x13
 14369 0175 00       		.byte	0
 14370 0176 00       		.byte	0
 14371 0177 1B       		.uleb128 0x1b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 308


 14372 0178 34       		.uleb128 0x34
 14373 0179 00       		.byte	0
 14374 017a 03       		.uleb128 0x3
 14375 017b 0E       		.uleb128 0xe
 14376 017c 3A       		.uleb128 0x3a
 14377 017d 0B       		.uleb128 0xb
 14378 017e 3B       		.uleb128 0x3b
 14379 017f 05       		.uleb128 0x5
 14380 0180 49       		.uleb128 0x49
 14381 0181 13       		.uleb128 0x13
 14382 0182 02       		.uleb128 0x2
 14383 0183 18       		.uleb128 0x18
 14384 0184 00       		.byte	0
 14385 0185 00       		.byte	0
 14386 0186 1C       		.uleb128 0x1c
 14387 0187 0B       		.uleb128 0xb
 14388 0188 01       		.byte	0x1
 14389 0189 11       		.uleb128 0x11
 14390 018a 01       		.uleb128 0x1
 14391 018b 12       		.uleb128 0x12
 14392 018c 06       		.uleb128 0x6
 14393 018d 01       		.uleb128 0x1
 14394 018e 13       		.uleb128 0x13
 14395 018f 00       		.byte	0
 14396 0190 00       		.byte	0
 14397 0191 1D       		.uleb128 0x1d
 14398 0192 34       		.uleb128 0x34
 14399 0193 00       		.byte	0
 14400 0194 03       		.uleb128 0x3
 14401 0195 08       		.uleb128 0x8
 14402 0196 3A       		.uleb128 0x3a
 14403 0197 0B       		.uleb128 0xb
 14404 0198 3B       		.uleb128 0x3b
 14405 0199 05       		.uleb128 0x5
 14406 019a 49       		.uleb128 0x49
 14407 019b 13       		.uleb128 0x13
 14408 019c 02       		.uleb128 0x2
 14409 019d 18       		.uleb128 0x18
 14410 019e 00       		.byte	0
 14411 019f 00       		.byte	0
 14412 01a0 1E       		.uleb128 0x1e
 14413 01a1 0B       		.uleb128 0xb
 14414 01a2 01       		.byte	0x1
 14415 01a3 11       		.uleb128 0x11
 14416 01a4 01       		.uleb128 0x1
 14417 01a5 12       		.uleb128 0x12
 14418 01a6 06       		.uleb128 0x6
 14419 01a7 00       		.byte	0
 14420 01a8 00       		.byte	0
 14421 01a9 1F       		.uleb128 0x1f
 14422 01aa 21       		.uleb128 0x21
 14423 01ab 00       		.byte	0
 14424 01ac 49       		.uleb128 0x49
 14425 01ad 13       		.uleb128 0x13
 14426 01ae 2F       		.uleb128 0x2f
 14427 01af 05       		.uleb128 0x5
 14428 01b0 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 309


 14429 01b1 00       		.byte	0
 14430 01b2 20       		.uleb128 0x20
 14431 01b3 05       		.uleb128 0x5
 14432 01b4 00       		.byte	0
 14433 01b5 03       		.uleb128 0x3
 14434 01b6 0E       		.uleb128 0xe
 14435 01b7 3A       		.uleb128 0x3a
 14436 01b8 0B       		.uleb128 0xb
 14437 01b9 3B       		.uleb128 0x3b
 14438 01ba 05       		.uleb128 0x5
 14439 01bb 49       		.uleb128 0x49
 14440 01bc 13       		.uleb128 0x13
 14441 01bd 02       		.uleb128 0x2
 14442 01be 18       		.uleb128 0x18
 14443 01bf 00       		.byte	0
 14444 01c0 00       		.byte	0
 14445 01c1 21       		.uleb128 0x21
 14446 01c2 0B       		.uleb128 0xb
 14447 01c3 01       		.byte	0x1
 14448 01c4 55       		.uleb128 0x55
 14449 01c5 17       		.uleb128 0x17
 14450 01c6 00       		.byte	0
 14451 01c7 00       		.byte	0
 14452 01c8 22       		.uleb128 0x22
 14453 01c9 2E       		.uleb128 0x2e
 14454 01ca 01       		.byte	0x1
 14455 01cb 3F       		.uleb128 0x3f
 14456 01cc 19       		.uleb128 0x19
 14457 01cd 03       		.uleb128 0x3
 14458 01ce 0E       		.uleb128 0xe
 14459 01cf 3A       		.uleb128 0x3a
 14460 01d0 0B       		.uleb128 0xb
 14461 01d1 3B       		.uleb128 0x3b
 14462 01d2 05       		.uleb128 0x5
 14463 01d3 27       		.uleb128 0x27
 14464 01d4 19       		.uleb128 0x19
 14465 01d5 11       		.uleb128 0x11
 14466 01d6 01       		.uleb128 0x1
 14467 01d7 12       		.uleb128 0x12
 14468 01d8 06       		.uleb128 0x6
 14469 01d9 40       		.uleb128 0x40
 14470 01da 18       		.uleb128 0x18
 14471 01db 9742     		.uleb128 0x2117
 14472 01dd 19       		.uleb128 0x19
 14473 01de 01       		.uleb128 0x1
 14474 01df 13       		.uleb128 0x13
 14475 01e0 00       		.byte	0
 14476 01e1 00       		.byte	0
 14477 01e2 23       		.uleb128 0x23
 14478 01e3 0B       		.uleb128 0xb
 14479 01e4 01       		.byte	0x1
 14480 01e5 55       		.uleb128 0x55
 14481 01e6 17       		.uleb128 0x17
 14482 01e7 01       		.uleb128 0x1
 14483 01e8 13       		.uleb128 0x13
 14484 01e9 00       		.byte	0
 14485 01ea 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 310


 14486 01eb 24       		.uleb128 0x24
 14487 01ec 2E       		.uleb128 0x2e
 14488 01ed 01       		.byte	0x1
 14489 01ee 3F       		.uleb128 0x3f
 14490 01ef 19       		.uleb128 0x19
 14491 01f0 03       		.uleb128 0x3
 14492 01f1 0E       		.uleb128 0xe
 14493 01f2 3A       		.uleb128 0x3a
 14494 01f3 0B       		.uleb128 0xb
 14495 01f4 3B       		.uleb128 0x3b
 14496 01f5 05       		.uleb128 0x5
 14497 01f6 11       		.uleb128 0x11
 14498 01f7 01       		.uleb128 0x1
 14499 01f8 12       		.uleb128 0x12
 14500 01f9 06       		.uleb128 0x6
 14501 01fa 40       		.uleb128 0x40
 14502 01fb 18       		.uleb128 0x18
 14503 01fc 9642     		.uleb128 0x2116
 14504 01fe 19       		.uleb128 0x19
 14505 01ff 01       		.uleb128 0x1
 14506 0200 13       		.uleb128 0x13
 14507 0201 00       		.byte	0
 14508 0202 00       		.byte	0
 14509 0203 25       		.uleb128 0x25
 14510 0204 05       		.uleb128 0x5
 14511 0205 00       		.byte	0
 14512 0206 03       		.uleb128 0x3
 14513 0207 08       		.uleb128 0x8
 14514 0208 3A       		.uleb128 0x3a
 14515 0209 0B       		.uleb128 0xb
 14516 020a 3B       		.uleb128 0x3b
 14517 020b 05       		.uleb128 0x5
 14518 020c 49       		.uleb128 0x49
 14519 020d 13       		.uleb128 0x13
 14520 020e 02       		.uleb128 0x2
 14521 020f 18       		.uleb128 0x18
 14522 0210 00       		.byte	0
 14523 0211 00       		.byte	0
 14524 0212 26       		.uleb128 0x26
 14525 0213 2E       		.uleb128 0x2e
 14526 0214 01       		.byte	0x1
 14527 0215 3F       		.uleb128 0x3f
 14528 0216 19       		.uleb128 0x19
 14529 0217 03       		.uleb128 0x3
 14530 0218 0E       		.uleb128 0xe
 14531 0219 3A       		.uleb128 0x3a
 14532 021a 0B       		.uleb128 0xb
 14533 021b 3B       		.uleb128 0x3b
 14534 021c 05       		.uleb128 0x5
 14535 021d 11       		.uleb128 0x11
 14536 021e 01       		.uleb128 0x1
 14537 021f 12       		.uleb128 0x12
 14538 0220 06       		.uleb128 0x6
 14539 0221 40       		.uleb128 0x40
 14540 0222 18       		.uleb128 0x18
 14541 0223 9742     		.uleb128 0x2117
 14542 0225 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 311


 14543 0226 01       		.uleb128 0x1
 14544 0227 13       		.uleb128 0x13
 14545 0228 00       		.byte	0
 14546 0229 00       		.byte	0
 14547 022a 27       		.uleb128 0x27
 14548 022b 26       		.uleb128 0x26
 14549 022c 00       		.byte	0
 14550 022d 49       		.uleb128 0x49
 14551 022e 13       		.uleb128 0x13
 14552 022f 00       		.byte	0
 14553 0230 00       		.byte	0
 14554 0231 28       		.uleb128 0x28
 14555 0232 34       		.uleb128 0x34
 14556 0233 00       		.byte	0
 14557 0234 03       		.uleb128 0x3
 14558 0235 0E       		.uleb128 0xe
 14559 0236 3A       		.uleb128 0x3a
 14560 0237 0B       		.uleb128 0xb
 14561 0238 3B       		.uleb128 0x3b
 14562 0239 05       		.uleb128 0x5
 14563 023a 49       		.uleb128 0x49
 14564 023b 13       		.uleb128 0x13
 14565 023c 3F       		.uleb128 0x3f
 14566 023d 19       		.uleb128 0x19
 14567 023e 3C       		.uleb128 0x3c
 14568 023f 19       		.uleb128 0x19
 14569 0240 00       		.byte	0
 14570 0241 00       		.byte	0
 14571 0242 00       		.byte	0
 14572              		.section	.debug_aranges,"",%progbits
 14573 0000 8C000000 		.4byte	0x8c
 14574 0004 0200     		.2byte	0x2
 14575 0006 00000000 		.4byte	.Ldebug_info0
 14576 000a 04       		.byte	0x4
 14577 000b 00       		.byte	0
 14578 000c 0000     		.2byte	0
 14579 000e 0000     		.2byte	0
 14580 0010 00000000 		.4byte	.LFB64
 14581 0014 18000000 		.4byte	.LFE64-.LFB64
 14582 0018 00000000 		.4byte	.LFB65
 14583 001c 20000000 		.4byte	.LFE65-.LFB65
 14584 0020 00000000 		.4byte	.LFB66
 14585 0024 0C020000 		.4byte	.LFE66-.LFB66
 14586 0028 00000000 		.4byte	.LFB67
 14587 002c 80080000 		.4byte	.LFE67-.LFB67
 14588 0030 00000000 		.4byte	.LFB68
 14589 0034 CC050000 		.4byte	.LFE68-.LFB68
 14590 0038 00000000 		.4byte	.LFB69
 14591 003c 34030000 		.4byte	.LFE69-.LFB69
 14592 0040 00000000 		.4byte	.LFB70
 14593 0044 B0010000 		.4byte	.LFE70-.LFB70
 14594 0048 00000000 		.4byte	.LFB71
 14595 004c 0C070000 		.4byte	.LFE71-.LFB71
 14596 0050 00000000 		.4byte	.LFB72
 14597 0054 70090000 		.4byte	.LFE72-.LFB72
 14598 0058 00000000 		.4byte	.LFB73
 14599 005c 18080000 		.4byte	.LFE73-.LFB73
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 312


 14600 0060 00000000 		.4byte	.LFB74
 14601 0064 E4120000 		.4byte	.LFE74-.LFB74
 14602 0068 00000000 		.4byte	.LFB75
 14603 006c 0C010000 		.4byte	.LFE75-.LFB75
 14604 0070 00000000 		.4byte	.LFB76
 14605 0074 A8000000 		.4byte	.LFE76-.LFB76
 14606 0078 00000000 		.4byte	.LFB77
 14607 007c 58060000 		.4byte	.LFE77-.LFB77
 14608 0080 00000000 		.4byte	.LFB78
 14609 0084 08010000 		.4byte	.LFE78-.LFB78
 14610 0088 00000000 		.4byte	0
 14611 008c 00000000 		.4byte	0
 14612              		.section	.debug_ranges,"",%progbits
 14613              	.Ldebug_ranges0:
 14614 0000 68010000 		.4byte	.LBB4
 14615 0004 AA010000 		.4byte	.LBE4
 14616 0008 AC010000 		.4byte	.LBB5
 14617 000c F2010000 		.4byte	.LBE5
 14618 0010 00000000 		.4byte	0
 14619 0014 00000000 		.4byte	0
 14620 0018 3A000000 		.4byte	.LBB6
 14621 001c 40010000 		.4byte	.LBE6
 14622 0020 42010000 		.4byte	.LBB7
 14623 0024 BC010000 		.4byte	.LBE7
 14624 0028 00000000 		.4byte	0
 14625 002c 00000000 		.4byte	0
 14626 0030 BE010000 		.4byte	.LBB8
 14627 0034 20030000 		.4byte	.LBE8
 14628 0038 22030000 		.4byte	.LBB9
 14629 003c 24030000 		.4byte	.LBE9
 14630 0040 00000000 		.4byte	0
 14631 0044 00000000 		.4byte	0
 14632 0048 00000000 		.4byte	.LFB64
 14633 004c 18000000 		.4byte	.LFE64
 14634 0050 00000000 		.4byte	.LFB65
 14635 0054 20000000 		.4byte	.LFE65
 14636 0058 00000000 		.4byte	.LFB66
 14637 005c 0C020000 		.4byte	.LFE66
 14638 0060 00000000 		.4byte	.LFB67
 14639 0064 80080000 		.4byte	.LFE67
 14640 0068 00000000 		.4byte	.LFB68
 14641 006c CC050000 		.4byte	.LFE68
 14642 0070 00000000 		.4byte	.LFB69
 14643 0074 34030000 		.4byte	.LFE69
 14644 0078 00000000 		.4byte	.LFB70
 14645 007c B0010000 		.4byte	.LFE70
 14646 0080 00000000 		.4byte	.LFB71
 14647 0084 0C070000 		.4byte	.LFE71
 14648 0088 00000000 		.4byte	.LFB72
 14649 008c 70090000 		.4byte	.LFE72
 14650 0090 00000000 		.4byte	.LFB73
 14651 0094 18080000 		.4byte	.LFE73
 14652 0098 00000000 		.4byte	.LFB74
 14653 009c E4120000 		.4byte	.LFE74
 14654 00a0 00000000 		.4byte	.LFB75
 14655 00a4 0C010000 		.4byte	.LFE75
 14656 00a8 00000000 		.4byte	.LFB76
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 313


 14657 00ac A8000000 		.4byte	.LFE76
 14658 00b0 00000000 		.4byte	.LFB77
 14659 00b4 58060000 		.4byte	.LFE77
 14660 00b8 00000000 		.4byte	.LFB78
 14661 00bc 08010000 		.4byte	.LFE78
 14662 00c0 00000000 		.4byte	0
 14663 00c4 00000000 		.4byte	0
 14664              		.section	.debug_line,"",%progbits
 14665              	.Ldebug_line0:
 14666 0000 610C0000 		.section	.debug_str,"MS",%progbits,1
 14666      0200AC01 
 14666      00000201 
 14666      FB0E0D00 
 14666      01010101 
 14667              	.LASF56:
 14668 0000 656D675F 		.ascii	"emg_act_counter\000"
 14668      6163745F 
 14668      636F756E 
 14668      74657200 
 14669              	.LASF24:
 14670 0010 73697A65 		.ascii	"sizetype\000"
 14670      74797065 
 14670      00
 14671              	.LASF63:
 14672 0019 706F7765 		.ascii	"power_cycles\000"
 14672      725F6379 
 14672      636C6573 
 14672      00
 14673              	.LASF270:
 14674 0026 706F735F 		.ascii	"pos_cycle_status\000"
 14674      6379636C 
 14674      655F7374 
 14674      61747573 
 14674      00
 14675              	.LASF147:
 14676 0037 77726973 		.ascii	"wrist_direction_association\000"
 14676      745F6469 
 14676      72656374 
 14676      696F6E5F 
 14676      6173736F 
 14677              	.LASF30:
 14678 0053 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 14678      545F4D4F 
 14678      44455F45 
 14678      4D475F46 
 14678      4346535F 
 14679              	.LASF122:
 14680 006b 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 14680      5F414443 
 14680      5F73656E 
 14680      736F7273 
 14680      5F706F72 
 14681              	.LASF152:
 14682 0086 75736572 		.ascii	"user\000"
 14682      00
 14683              	.LASF10:
 14684 008b 696E7433 		.ascii	"int32_t\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 314


 14684      325F7400 
 14685              	.LASF310:
 14686 0093 675F7278 		.ascii	"g_rx\000"
 14686      00
 14687              	.LASF247:
 14688 0098 6F6E655F 		.ascii	"one_time_execute\000"
 14688      74696D65 
 14688      5F657865 
 14688      63757465 
 14688      00
 14689              	.LASF51:
 14690 00a9 73745F64 		.ascii	"st_data\000"
 14690      61746100 
 14691              	.LASF61:
 14692 00b1 746F7461 		.ascii	"total_runtime\000"
 14692      6C5F7275 
 14692      6E74696D 
 14692      6500
 14693              	.LASF13:
 14694 00bf 75696E74 		.ascii	"uint32\000"
 14694      333200
 14695              	.LASF232:
 14696 00c6 6E5F6C69 		.ascii	"n_line\000"
 14696      6E6500
 14697              	.LASF153:
 14698 00cd 4A4F595F 		.ascii	"JOY_spec\000"
 14698      73706563 
 14698      00
 14699              	.LASF90:
 14700 00d6 706F735F 		.ascii	"pos_lim_inf\000"
 14700      6C696D5F 
 14700      696E6600 
 14701              	.LASF335:
 14702 00e2 74656E73 		.ascii	"tension_valid\000"
 14702      696F6E5F 
 14702      76616C69 
 14702      6400
 14703              	.LASF208:
 14704 00f0 6572725F 		.ascii	"err_joy_1\000"
 14704      6A6F795F 
 14704      3100
 14705              	.LASF184:
 14706 00fa 73746174 		.ascii	"state\000"
 14706      6500
 14707              	.LASF337:
 14708 0100 6379636C 		.ascii	"cycles_interrupt_flag\000"
 14708      65735F69 
 14708      6E746572 
 14708      72757074 
 14708      5F666C61 
 14709              	.LASF280:
 14710 0116 62696E5F 		.ascii	"bin_max\000"
 14710      6D617800 
 14711              	.LASF297:
 14712 011e 61646472 		.ascii	"addr_start_c\000"
 14712      5F737461 
 14712      72745F63 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 315


 14712      00
 14713              	.LASF29:
 14714 012b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 14714      545F4D4F 
 14714      44455F45 
 14714      4D475F46 
 14714      43465300 
 14715              	.LASF94:
 14716 013f 63757272 		.ascii	"curr_lookup\000"
 14716      5F6C6F6F 
 14716      6B757000 
 14717              	.LASF217:
 14718 014b 70776D5F 		.ascii	"pwm_input\000"
 14718      696E7075 
 14718      7400
 14719              	.LASF59:
 14720 0155 72657374 		.ascii	"rest_counter\000"
 14720      5F636F75 
 14720      6E746572 
 14720      00
 14721              	.LASF137:
 14722 0162 73745F4D 		.ascii	"st_MASTER_spec\000"
 14722      41535445 
 14722      525F7370 
 14722      656300
 14723              	.LASF28:
 14724 0171 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 14724      545F4D4F 
 14724      44455F45 
 14724      4D475F49 
 14724      4E544547 
 14725              	.LASF263:
 14726 0189 765F636F 		.ascii	"v_count\000"
 14726      756E7400 
 14727              	.LASF189:
 14728 0191 72785F64 		.ascii	"rx_data\000"
 14728      61746100 
 14729              	.LASF251:
 14730 0199 7676765F 		.ascii	"vvv_value\000"
 14730      76616C75 
 14730      6500
 14731              	.LASF14:
 14732 01a3 696E7438 		.ascii	"int8\000"
 14732      00
 14733              	.LASF194:
 14734 01a8 696E666F 		.ascii	"info_\000"
 14734      5F00
 14735              	.LASF318:
 14736 01ae 66696C74 		.ascii	"filt_emg\000"
 14736      5F656D67 
 14736      00
 14737              	.LASF109:
 14738 01b7 73745F65 		.ascii	"st_emg\000"
 14738      6D6700
 14739              	.LASF57:
 14740 01be 706F7369 		.ascii	"position_hist\000"
 14740      74696F6E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 316


 14740      5F686973 
 14740      7400
 14741              	.LASF176:
 14742 01cc 50524550 		.ascii	"PREPARE_DATA\000"
 14742      4152455F 
 14742      44415441 
 14742      00
 14743              	.LASF160:
 14744 01d9 74656D70 		.ascii	"temp_value\000"
 14744      5F76616C 
 14744      756500
 14745              	.LASF277:
 14746 01e4 7468725F 		.ascii	"thr_pos\000"
 14746      706F7300 
 14747              	.LASF144:
 14748 01ec 73745F57 		.ascii	"st_WR_spec\000"
 14748      525F7370 
 14748      656300
 14749              	.LASF210:
 14750 01f7 6572725F 		.ascii	"err_joy_2\000"
 14750      6A6F795F 
 14750      3200
 14751              	.LASF54:
 14752 0201 72656164 		.ascii	"ready\000"
 14752      7900
 14753              	.LASF106:
 14754 0207 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 14754      6964785F 
 14754      7573655F 
 14754      666F725F 
 14754      636F6E74 
 14755              	.LASF163:
 14756 021f 6761696E 		.ascii	"gain\000"
 14756      00
 14757              	.LASF67:
 14758 0224 73745F64 		.ascii	"st_device\000"
 14758      65766963 
 14758      6500
 14759              	.LASF27:
 14760 022e 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 14760      545F4D4F 
 14760      44455F45 
 14760      4D475F50 
 14760      524F504F 
 14761              	.LASF72:
 14762 024a 7573655F 		.ascii	"use_2nd_motor_flag\000"
 14762      326E645F 
 14762      6D6F746F 
 14762      725F666C 
 14762      616700
 14763              	.LASF256:
 14764 025d 55445F63 		.ascii	"UD_counter\000"
 14764      6F756E74 
 14764      657200
 14765              	.LASF64:
 14766 0268 65786365 		.ascii	"excessive_signal_activity\000"
 14766      73736976 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 317


 14766      655F7369 
 14766      676E616C 
 14766      5F616374 
 14767              	.LASF172:
 14768 0282 53554D5F 		.ascii	"SUM_AND_MEAN\000"
 14768      414E445F 
 14768      4D45414E 
 14768      00
 14769              	.LASF116:
 14770 028f 72656164 		.ascii	"read_imu_flag\000"
 14770      5F696D75 
 14770      5F666C61 
 14770      6700
 14771              	.LASF124:
 14772 029d 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 14772      72645F45 
 14772      4D475F68 
 14772      6973746F 
 14772      72795F6F 
 14773              	.LASF260:
 14774 02b6 66697273 		.ascii	"first_tension_valid\000"
 14774      745F7465 
 14774      6E73696F 
 14774      6E5F7661 
 14774      6C696400 
 14775              	.LASF320:
 14776 02ca 74696D65 		.ascii	"timer_value\000"
 14776      725F7661 
 14776      6C756500 
 14777              	.LASF4:
 14778 02d6 6C6F6E67 		.ascii	"long int\000"
 14778      20696E74 
 14778      00
 14779              	.LASF150:
 14780 02df 756E7573 		.ascii	"unused_bytes1\000"
 14780      65645F62 
 14780      79746573 
 14780      3100
 14781              	.LASF197:
 14782 02ed 454D475F 		.ascii	"EMG_history_info_\000"
 14782      68697374 
 14782      6F72795F 
 14782      696E666F 
 14782      5F00
 14783              	.LASF222:
 14784 02ff 53485F45 		.ascii	"SH_ENC_L\000"
 14784      4E435F4C 
 14784      00
 14785              	.LASF71:
 14786 0308 72657365 		.ascii	"reset_counters\000"
 14786      745F636F 
 14786      756E7465 
 14786      727300
 14787              	.LASF275:
 14788 0317 62696E5F 		.ascii	"bin_threshold\000"
 14788      74687265 
 14788      73686F6C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 318


 14788      6400
 14789              	.LASF127:
 14790 0325 75736572 		.ascii	"user_emg\000"
 14790      5F656D67 
 14790      00
 14791              	.LASF246:
 14792 032e 73616665 		.ascii	"safe_startup_motor_activation\000"
 14792      5F737461 
 14792      72747570 
 14792      5F6D6F74 
 14792      6F725F61 
 14793              	.LASF66:
 14794 034c 756E7573 		.ascii	"unused_bytes\000"
 14794      65645F62 
 14794      79746573 
 14794      00
 14795              	.LASF156:
 14796 0359 61636365 		.ascii	"accel_value\000"
 14796      6C5F7661 
 14796      6C756500 
 14797              	.LASF308:
 14798 0365 675F6164 		.ascii	"g_adc_measOld\000"
 14798      635F6D65 
 14798      61734F6C 
 14798      6400
 14799              	.LASF235:
 14800 0373 6175785F 		.ascii	"aux_encoder\000"
 14800      656E636F 
 14800      64657200 
 14801              	.LASF55:
 14802 037f 73745F63 		.ascii	"st_counters\000"
 14802      6F756E74 
 14802      65727300 
 14803              	.LASF221:
 14804 038b 53485F4D 		.ascii	"SH_MOT\000"
 14804      4F5400
 14805              	.LASF319:
 14806 0392 66696C74 		.ascii	"filt_detect_pc\000"
 14806      5F646574 
 14806      6563745F 
 14806      706300
 14807              	.LASF17:
 14808 03a1 666C6F61 		.ascii	"float32\000"
 14808      74333200 
 14809              	.LASF231:
 14810 03a9 656E636F 		.ascii	"encoder_reading_SPI\000"
 14810      6465725F 
 14810      72656164 
 14810      696E675F 
 14810      53504900 
 14811              	.LASF244:
 14812 03bd 6572726F 		.ascii	"error\000"
 14812      7200
 14813              	.LASF179:
 14814 03c3 57524954 		.ascii	"WRITE_END\000"
 14814      455F454E 
 14814      4400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 319


 14815              	.LASF257:
 14816 03cd 4C525F63 		.ascii	"LR_counter\000"
 14816      6F756E74 
 14816      657200
 14817              	.LASF350:
 14818 03d8 706F735F 		.ascii	"pos_reconstruct\000"
 14818      7265636F 
 14818      6E737472 
 14818      75637400 
 14819              	.LASF265:
 14820 03e8 70776D5F 		.ascii	"pwm_limit_search\000"
 14820      6C696D69 
 14820      745F7365 
 14820      61726368 
 14820      00
 14821              	.LASF0:
 14822 03f9 7369676E 		.ascii	"signed char\000"
 14822      65642063 
 14822      68617200 
 14823              	.LASF126:
 14824 0405 75736572 		.ascii	"user_code_string\000"
 14824      5F636F64 
 14824      655F7374 
 14824      72696E67 
 14824      00
 14825              	.LASF164:
 14826 0416 73745F63 		.ascii	"st_calib\000"
 14826      616C6962 
 14826      00
 14827              	.LASF204:
 14828 041f 6572725F 		.ascii	"err_emg_1\000"
 14828      656D675F 
 14828      3100
 14829              	.LASF205:
 14830 0429 6572725F 		.ascii	"err_emg_2\000"
 14830      656D675F 
 14830      3200
 14831              	.LASF114:
 14832 0433 73776974 		.ascii	"switch_emg\000"
 14832      63685F65 
 14832      6D6700
 14833              	.LASF331:
 14834 043e 656D675F 		.ascii	"emg_2_status\000"
 14834      325F7374 
 14834      61747573 
 14834      00
 14835              	.LASF343:
 14836 044b 4144435F 		.ascii	"ADC_buf\000"
 14836      62756600 
 14837              	.LASF336:
 14838 0453 696E7465 		.ascii	"interrupt_flag\000"
 14838      72727570 
 14838      745F666C 
 14838      616700
 14839              	.LASF286:
 14840 0462 73746570 		.ascii	"step\000"
 14840      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 320


 14841              	.LASF224:
 14842 0467 63757272 		.ascii	"curr_error_sum\000"
 14842      5F657272 
 14842      6F725F73 
 14842      756D00
 14843              	.LASF1:
 14844 0476 756E7369 		.ascii	"unsigned char\000"
 14844      676E6564 
 14844      20636861 
 14844      7200
 14845              	.LASF100:
 14846 0484 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 14846      72657665 
 14846      72735F6D 
 14846      6F746F72 
 14846      5F666C61 
 14847              	.LASF295:
 14848 049a 726F775F 		.ascii	"row_start\000"
 14848      73746172 
 14848      7400
 14849              	.LASF340:
 14850 04a4 666F7263 		.ascii	"forced_open\000"
 14850      65645F6F 
 14850      70656E00 
 14851              	.LASF239:
 14852 04b0 73706565 		.ascii	"speed_encoder\000"
 14852      645F656E 
 14852      636F6465 
 14852      7200
 14853              	.LASF303:
 14854 04be 675F7265 		.ascii	"g_refNew\000"
 14854      664E6577 
 14854      00
 14855              	.LASF284:
 14856 04c7 63757272 		.ascii	"curr_off\000"
 14856      5F6F6666 
 14856      00
 14857              	.LASF70:
 14858 04d0 72696768 		.ascii	"right_left\000"
 14858      745F6C65 
 14858      667400
 14859              	.LASF98:
 14860 04db 656E636F 		.ascii	"encoder_line\000"
 14860      6465725F 
 14860      6C696E65 
 14860      00
 14861              	.LASF330:
 14862 04e8 656D675F 		.ascii	"emg_1_status\000"
 14862      315F7374 
 14862      61747573 
 14862      00
 14863              	.LASF155:
 14864 04f5 666C6167 		.ascii	"flags\000"
 14864      7300
 14865              	.LASF203:
 14866 04fb 68616E64 		.ascii	"handle_value\000"
 14866      6C655F76 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 321


 14866      616C7565 
 14866      00
 14867              	.LASF50:
 14868 0508 70726573 		.ascii	"pressure\000"
 14868      73757265 
 14868      00
 14869              	.LASF20:
 14870 0511 63686172 		.ascii	"char\000"
 14870      00
 14871              	.LASF261:
 14872 0516 64657465 		.ascii	"detect_power_cycle_prev\000"
 14872      63745F70 
 14872      6F776572 
 14872      5F637963 
 14872      6C655F70 
 14873              	.LASF93:
 14874 052e 6D61785F 		.ascii	"max_step_pos\000"
 14874      73746570 
 14874      5F706F73 
 14874      00
 14875              	.LASF345:
 14876 053b 70776D5F 		.ascii	"pwm_sign\000"
 14876      7369676E 
 14876      00
 14877              	.LASF230:
 14878 0544 6D6F746F 		.ascii	"motor_control_generic\000"
 14878      725F636F 
 14878      6E74726F 
 14878      6C5F6765 
 14878      6E657269 
 14879              	.LASF354:
 14880 055a 675F696D 		.ascii	"g_imu\000"
 14880      7500
 14881              	.LASF317:
 14882 0560 66696C74 		.ascii	"filt_vel\000"
 14882      5F76656C 
 14882      00
 14883              	.LASF99:
 14884 0569 70776D5F 		.ascii	"pwm_rate_limiter\000"
 14884      72617465 
 14884      5F6C696D 
 14884      69746572 
 14884      00
 14885              	.LASF79:
 14886 057a 6B5F645F 		.ascii	"k_d_c\000"
 14886      6300
 14887              	.LASF175:
 14888 0580 6164635F 		.ascii	"adc_status\000"
 14888      73746174 
 14888      757300
 14889              	.LASF49:
 14890 058b 73745F66 		.ascii	"st_fb_meas\000"
 14890      625F6D65 
 14890      617300
 14891              	.LASF104:
 14892 0596 6D5F6D75 		.ascii	"m_mult\000"
 14892      6C7400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 322


 14893              	.LASF78:
 14894 059d 6B5F695F 		.ascii	"k_i_c\000"
 14894      6300
 14895              	.LASF228:
 14896 05a3 6D6F746F 		.ascii	"motor_dir\000"
 14896      725F6469 
 14896      7200
 14897              	.LASF279:
 14898 05ad 62696E5F 		.ascii	"bin_st\000"
 14898      737400
 14899              	.LASF182:
 14900 05b4 4953525F 		.ascii	"ISR_RS485_RX_ExInterrupt\000"
 14900      52533438 
 14900      355F5258 
 14900      5F457849 
 14900      6E746572 
 14901              	.LASF91:
 14902 05cd 706F735F 		.ascii	"pos_lim_sup\000"
 14902      6C696D5F 
 14902      73757000 
 14903              	.LASF162:
 14904 05d9 6F6C645F 		.ascii	"old_value\000"
 14904      76616C75 
 14904      6500
 14905              	.LASF112:
 14906 05e3 656D675F 		.ascii	"emg_speed\000"
 14906      73706565 
 14906      6400
 14907              	.LASF131:
 14908 05ed 72657374 		.ascii	"rest_vel\000"
 14908      5F76656C 
 14908      00
 14909              	.LASF169:
 14910 05f6 4E4F524D 		.ascii	"NORMAL\000"
 14910      414C00
 14911              	.LASF216:
 14912 05fd 6D6F746F 		.ascii	"motor_control_SH\000"
 14912      725F636F 
 14912      6E74726F 
 14912      6C5F5348 
 14912      00
 14913              	.LASF352:
 14914 060e 7046696C 		.ascii	"pFile\000"
 14914      6500
 14915              	.LASF223:
 14916 0614 706F735F 		.ascii	"pos_error_sum\000"
 14916      6572726F 
 14916      725F7375 
 14916      6D00
 14917              	.LASF123:
 14918 0622 4144435F 		.ascii	"ADC_conf\000"
 14918      636F6E66 
 14918      00
 14919              	.LASF326:
 14920 062b 6465765F 		.ascii	"dev_tension_f\000"
 14920      74656E73 
 14920      696F6E5F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 323


 14920      6600
 14921              	.LASF81:
 14922 0639 6B5F695F 		.ascii	"k_i_dl\000"
 14922      646C00
 14923              	.LASF52:
 14924 0640 62756666 		.ascii	"buffer\000"
 14924      657200
 14925              	.LASF83:
 14926 0647 6B5F705F 		.ascii	"k_p_c_dl\000"
 14926      635F646C 
 14926      00
 14927              	.LASF190:
 14928 0650 72785F64 		.ascii	"rx_data_type\000"
 14928      6174615F 
 14928      74797065 
 14928      00
 14929              	.LASF355:
 14930 065d 675F696D 		.ascii	"g_imuNew\000"
 14930      754E6577 
 14930      00
 14931              	.LASF167:
 14932 0666 73706565 		.ascii	"speed\000"
 14932      6400
 14933              	.LASF229:
 14934 066c 706F7369 		.ascii	"position_counter\000"
 14934      74696F6E 
 14934      5F636F75 
 14934      6E746572 
 14934      00
 14935              	.LASF288:
 14936 067d 74696D65 		.ascii	"timer_value_e\000"
 14936      725F7661 
 14936      6C75655F 
 14936      6500
 14937              	.LASF185:
 14938 068b 64617461 		.ascii	"data_packet_index\000"
 14938      5F706163 
 14938      6B65745F 
 14938      696E6465 
 14938      7800
 14939              	.LASF187:
 14940 069d 64617461 		.ascii	"data_packet_buffer\000"
 14940      5F706163 
 14940      6B65745F 
 14940      62756666 
 14940      657200
 14941              	.LASF201:
 14942 06b0 73745F72 		.ascii	"st_ref_p\000"
 14942      65665F70 
 14942      00
 14943              	.LASF329:
 14944 06b9 6379636C 		.ascii	"cycles_status\000"
 14944      65735F73 
 14944      74617475 
 14944      7300
 14945              	.LASF192:
 14946 06c7 636F756E 		.ascii	"counter_calibration\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 324


 14946      7465725F 
 14946      63616C69 
 14946      62726174 
 14946      696F6E00 
 14947              	.LASF305:
 14948 06db 675F6D65 		.ascii	"g_meas\000"
 14948      617300
 14949              	.LASF287:
 14950 06e2 74696D65 		.ascii	"timer_value_s\000"
 14950      725F7661 
 14950      6C75655F 
 14950      7300
 14951              	.LASF349:
 14952 06f0 456E636F 		.ascii	"Encoder_Check\000"
 14952      6465725F 
 14952      43686563 
 14952      6B00
 14953              	.LASF243:
 14954 06fe 636F6D70 		.ascii	"comp_value_encoder\000"
 14954      5F76616C 
 14954      75655F65 
 14954      6E636F64 
 14954      657200
 14955              	.LASF291:
 14956 0711 73746172 		.ascii	"start_emg_pos\000"
 14956      745F656D 
 14956      675F706F 
 14956      7300
 14957              	.LASF346:
 14958 071f 64617461 		.ascii	"data_encoder_raw\000"
 14958      5F656E63 
 14958      6F646572 
 14958      5F726177 
 14958      00
 14959              	.LASF302:
 14960 0730 675F7265 		.ascii	"g_ref\000"
 14960      6600
 14961              	.LASF25:
 14962 0736 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 14962      545F4D4F 
 14962      44455F45 
 14962      58544552 
 14962      4E414C00 
 14963              	.LASF234:
 14964 074a 696E6465 		.ascii	"index\000"
 14964      7800
 14965              	.LASF142:
 14966 0750 6D617869 		.ascii	"maximum_pressure_kPa\000"
 14966      6D756D5F 
 14966      70726573 
 14966      73757265 
 14966      5F6B5061 
 14967              	.LASF132:
 14968 0765 72657374 		.ascii	"rest_position_flag\000"
 14968      5F706F73 
 14968      6974696F 
 14968      6E5F666C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 325


 14968      616700
 14969              	.LASF134:
 14970 0778 6A6F7973 		.ascii	"joystick_closure_speed\000"
 14970      7469636B 
 14970      5F636C6F 
 14970      73757265 
 14970      5F737065 
 14971              	.LASF84:
 14972 078f 6B5F695F 		.ascii	"k_i_c_dl\000"
 14972      635F646C 
 14972      00
 14973              	.LASF191:
 14974 0798 7061636B 		.ascii	"package_count\000"
 14974      6167655F 
 14974      636F756E 
 14974      7400
 14975              	.LASF38:
 14976 07a6 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 14976      5F414E44 
 14976      5F504F53 
 14976      5F434F4E 
 14976      54524F4C 
 14977              	.LASF165:
 14978 07bb 656E6162 		.ascii	"enabled\000"
 14978      6C656400 
 14979              	.LASF5:
 14980 07c3 6C6F6E67 		.ascii	"long unsigned int\000"
 14980      20756E73 
 14980      69676E65 
 14980      6420696E 
 14980      7400
 14981              	.LASF353:
 14982 07d5 70454D47 		.ascii	"pEMGHFile\000"
 14982      4846696C 
 14982      6500
 14983              	.LASF177:
 14984 07df 57524954 		.ascii	"WRITE_CYCLES\000"
 14984      455F4359 
 14984      434C4553 
 14984      00
 14985              	.LASF136:
 14986 07ec 6A6F7973 		.ascii	"joystick_gains\000"
 14986      7469636B 
 14986      5F676169 
 14986      6E7300
 14987              	.LASF45:
 14988 07fb 686F6C64 		.ascii	"hold_curr\000"
 14988      5F637572 
 14988      7200
 14989              	.LASF31:
 14990 0805 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 14990      545F4D4F 
 14990      44455F4A 
 14990      4F595354 
 14990      49434B00 
 14991              	.LASF62:
 14992 0819 746F7461 		.ascii	"total_time_rest\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 326


 14992      6C5F7469 
 14992      6D655F72 
 14992      65737400 
 14993              	.LASF86:
 14994 0829 61637469 		.ascii	"activ\000"
 14994      7600
 14995              	.LASF268:
 14996 082f 6D696E5F 		.ascii	"min_tension\000"
 14996      74656E73 
 14996      696F6E00 
 14997              	.LASF341:
 14998 083b 62617474 		.ascii	"battery_low_SoC\000"
 14998      6572795F 
 14998      6C6F775F 
 14998      536F4300 
 14999              	.LASF200:
 15000 084b 6D6F746F 		.ascii	"motor_idx\000"
 15000      725F6964 
 15000      7800
 15001              	.LASF103:
 15002 0855 6D5F6F66 		.ascii	"m_off\000"
 15002      6600
 15003              	.LASF334:
 15004 085b 72657365 		.ascii	"reset_last_value_flag\000"
 15004      745F6C61 
 15004      73745F76 
 15004      616C7565 
 15004      5F666C61 
 15005              	.LASF159:
 15006 0871 71756174 		.ascii	"quat_value\000"
 15006      5F76616C 
 15006      756500
 15007              	.LASF129:
 15008 087c 72657374 		.ascii	"rest_pos\000"
 15008      5F706F73 
 15008      00
 15009              	.LASF40:
 15010 0885 63757272 		.ascii	"curr\000"
 15010      00
 15011              	.LASF178:
 15012 088a 57414954 		.ascii	"WAIT_QUERY\000"
 15012      5F515545 
 15012      525900
 15013              	.LASF96:
 15014 0895 696E7075 		.ascii	"input_mode\000"
 15014      745F6D6F 
 15014      646500
 15015              	.LASF36:
 15016 08a0 434F4E54 		.ascii	"CONTROL_PWM\000"
 15016      524F4C5F 
 15016      50574D00 
 15017              	.LASF269:
 15018 08ac 6379636C 		.ascii	"cycles_counter_update\000"
 15018      65735F63 
 15018      6F756E74 
 15018      65725F75 
 15018      70646174 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 327


 15019              	.LASF357:
 15020 08c2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 15020      43313120 
 15020      352E342E 
 15020      31203230 
 15020      31363036 
 15021 08f5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 15021      20726576 
 15021      6973696F 
 15021      6E203233 
 15021      37373135 
 15022 0928 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 15022      66756E63 
 15022      74696F6E 
 15022      2D736563 
 15022      74696F6E 
 15023              	.LASF42:
 15024 0950 73745F72 		.ascii	"st_ref\000"
 15024      656600
 15025              	.LASF321:
 15026 0957 74696D65 		.ascii	"timer_value0\000"
 15026      725F7661 
 15026      6C756530 
 15026      00
 15027              	.LASF128:
 15028 0964 73745F53 		.ascii	"st_SH_spec\000"
 15028      485F7370 
 15028      656300
 15029              	.LASF249:
 15030 096f 765F7661 		.ascii	"v_value\000"
 15030      6C756500 
 15031              	.LASF313:
 15032 0977 63616C69 		.ascii	"calib\000"
 15032      6200
 15033              	.LASF140:
 15034 097d 73745F46 		.ascii	"st_FB_spec\000"
 15034      425F7370 
 15034      656300
 15035              	.LASF6:
 15036 0988 6C6F6E67 		.ascii	"long long int\000"
 15036      206C6F6E 
 15036      6720696E 
 15036      7400
 15037              	.LASF34:
 15038 0996 53485F63 		.ascii	"SH_control_mode\000"
 15038      6F6E7472 
 15038      6F6C5F6D 
 15038      6F646500 
 15039              	.LASF196:
 15040 09a6 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 15040      4E445F4D 
 15040      4F544F52 
 15040      5F494458 
 15040      00
 15041              	.LASF342:
 15042 09b7 6368616E 		.ascii	"change_ext_ref_flag\000"
 15042      67655F65 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 328


 15042      78745F72 
 15042      65665F66 
 15042      6C616700 
 15043              	.LASF19:
 15044 09cb 646F7562 		.ascii	"double\000"
 15044      6C6500
 15045              	.LASF315:
 15046 09d2 66696C74 		.ascii	"filt_curr_diff\000"
 15046      5F637572 
 15046      725F6469 
 15046      666600
 15047              	.LASF212:
 15048 09e1 706F735F 		.ascii	"pos_sum\000"
 15048      73756D00 
 15049              	.LASF215:
 15050 09e9 696E7465 		.ascii	"interrupt_manager\000"
 15050      72727570 
 15050      745F6D61 
 15050      6E616765 
 15050      7200
 15051              	.LASF102:
 15052 09fb 456E635F 		.ascii	"Enc_raw_read_conf\000"
 15052      7261775F 
 15052      72656164 
 15052      5F636F6E 
 15052      6600
 15053              	.LASF213:
 15054 0a0d 636F6D70 		.ascii	"compute_SoftHand_2_motors_emg_reference\000"
 15054      7574655F 
 15054      536F6674 
 15054      48616E64 
 15054      5F325F6D 
 15055              	.LASF168:
 15056 0a35 72657065 		.ascii	"repetitions\000"
 15056      74697469 
 15056      6F6E7300 
 15057              	.LASF92:
 15058 0a41 6D61785F 		.ascii	"max_step_neg\000"
 15058      73746570 
 15058      5F6E6567 
 15058      00
 15059              	.LASF248:
 15060 0a4e 636F756E 		.ascii	"count_startup_motor\000"
 15060      745F7374 
 15060      61727475 
 15060      705F6D6F 
 15060      746F7200 
 15061              	.LASF139:
 15062 0a62 736C6176 		.ascii	"slave_ID\000"
 15062      655F4944 
 15062      00
 15063              	.LASF173:
 15064 0a6b 57414954 		.ascii	"WAIT\000"
 15064      00
 15065              	.LASF18:
 15066 0a70 666C6F61 		.ascii	"float\000"
 15066      7400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 329


 15067              	.LASF118:
 15068 0a76 494D555F 		.ascii	"IMU_conf\000"
 15068      636F6E66 
 15068      00
 15069              	.LASF262:
 15070 0a7f 636F756E 		.ascii	"count\000"
 15070      7400
 15071              	.LASF46:
 15072 0a85 73745F61 		.ascii	"st_adc_meas\000"
 15072      64635F6D 
 15072      65617300 
 15073              	.LASF273:
 15074 0a91 656D675F 		.ascii	"emg_excess_status\000"
 15074      65786365 
 15074      73735F73 
 15074      74617475 
 15074      7300
 15075              	.LASF299:
 15076 0aa3 6D5F6164 		.ascii	"m_addr\000"
 15076      647200
 15077              	.LASF312:
 15078 0aaa 635F6D65 		.ascii	"c_mem\000"
 15078      6D00
 15079              	.LASF8:
 15080 0ab0 756E7369 		.ascii	"unsigned int\000"
 15080      676E6564 
 15080      20696E74 
 15080      00
 15081              	.LASF278:
 15082 0abd 6D61785F 		.ascii	"max_pos\000"
 15082      706F7300 
 15083              	.LASF351:
 15084 0ac5 72657374 		.ascii	"rest_pos_curr_ref\000"
 15084      5F706F73 
 15084      5F637572 
 15084      725F7265 
 15084      6600
 15085              	.LASF149:
 15086 0ad7 666C6167 		.ascii	"flag\000"
 15086      00
 15087              	.LASF97:
 15088 0adc 636F6E74 		.ascii	"control_mode\000"
 15088      726F6C5F 
 15088      6D6F6465 
 15088      00
 15089              	.LASF21:
 15090 0ae9 63797374 		.ascii	"cystatus\000"
 15090      61747573 
 15090      00
 15091              	.LASF26:
 15092 0af2 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 15092      545F4D4F 
 15092      44455F45 
 15092      4E434F44 
 15092      45523300 
 15093              	.LASF115:
 15094 0b06 73745F69 		.ascii	"st_imu\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 330


 15094      6D7500
 15095              	.LASF207:
 15096 0b0d 63757272 		.ascii	"current_emg\000"
 15096      656E745F 
 15096      656D6700 
 15097              	.LASF188:
 15098 0b19 72785F71 		.ascii	"rx_queue\000"
 15098      75657565 
 15098      00
 15099              	.LASF258:
 15100 0b22 55445F6D 		.ascii	"UD_mean_value\000"
 15100      65616E5F 
 15100      76616C75 
 15100      6500
 15101              	.LASF233:
 15102 0b30 6173736F 		.ascii	"assoc_motor\000"
 15102      635F6D6F 
 15102      746F7200 
 15103              	.LASF47:
 15104 0b3c 6164645F 		.ascii	"add_emg\000"
 15104      656D6700 
 15105              	.LASF220:
 15106 0b44 695F7265 		.ascii	"i_ref\000"
 15106      6600
 15107              	.LASF110:
 15108 0b4a 656D675F 		.ascii	"emg_threshold\000"
 15108      74687265 
 15108      73686F6C 
 15108      6400
 15109              	.LASF292:
 15110 0b58 73617665 		.ascii	"save_cycles_eeprom\000"
 15110      5F637963 
 15110      6C65735F 
 15110      65657072 
 15110      6F6D00
 15111              	.LASF107:
 15112 0b6b 6D6F746F 		.ascii	"motor_handle_ratio\000"
 15112      725F6861 
 15112      6E646C65 
 15112      5F726174 
 15112      696F00
 15113              	.LASF58:
 15114 0b7e 63757272 		.ascii	"current_hist\000"
 15114      656E745F 
 15114      68697374 
 15114      00
 15115              	.LASF37:
 15116 0b8b 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 15116      524F4C5F 
 15116      43555252 
 15116      454E5400 
 15117              	.LASF23:
 15118 0b9b 6C6F6E67 		.ascii	"long double\000"
 15118      20646F75 
 15118      626C6500 
 15119              	.LASF171:
 15120 0ba7 44495343 		.ascii	"DISCARD\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 331


 15120      41524400 
 15121              	.LASF225:
 15122 0baf 70726576 		.ascii	"prev_pos_err\000"
 15122      5F706F73 
 15122      5F657272 
 15122      00
 15123              	.LASF241:
 15124 0bbc 696E6974 		.ascii	"init_rot\000"
 15124      5F726F74 
 15124      00
 15125              	.LASF266:
 15126 0bc5 6D6F745F 		.ascii	"mot_idx\000"
 15126      69647800 
 15127              	.LASF316:
 15128 0bcd 66696C74 		.ascii	"filt_i\000"
 15128      5F6900
 15129              	.LASF65:
 15130 0bd4 6D6F7469 		.ascii	"motion_counter\000"
 15130      6F6E5F63 
 15130      6F756E74 
 15130      657200
 15131              	.LASF314:
 15132 0be3 66696C74 		.ascii	"filt_v\000"
 15132      5F7600
 15133              	.LASF339:
 15134 0bea 72657374 		.ascii	"rest_enabled\000"
 15134      5F656E61 
 15134      626C6564 
 15134      00
 15135              	.LASF304:
 15136 0bf7 675F7265 		.ascii	"g_refOld\000"
 15136      664F6C64 
 15136      00
 15137              	.LASF218:
 15138 0c00 706F735F 		.ascii	"pos_error\000"
 15138      6572726F 
 15138      7200
 15139              	.LASF157:
 15140 0c0a 6779726F 		.ascii	"gyro_value\000"
 15140      5F76616C 
 15140      756500
 15141              	.LASF120:
 15142 0c15 63757272 		.ascii	"curr_time\000"
 15142      5F74696D 
 15142      6500
 15143              	.LASF105:
 15144 0c1f 646F7562 		.ascii	"double_encoder_on_off\000"
 15144      6C655F65 
 15144      6E636F64 
 15144      65725F6F 
 15144      6E5F6F66 
 15145              	.LASF267:
 15146 0c35 6D61785F 		.ascii	"max_tension\000"
 15146      74656E73 
 15146      696F6E00 
 15147              	.LASF195:
 15148 0c41 4D4F544F 		.ascii	"MOTOR_IDX\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 332


 15148      525F4944 
 15148      5800
 15149              	.LASF242:
 15150 0c4b 6C617374 		.ascii	"last_value_encoder\000"
 15150      5F76616C 
 15150      75655F65 
 15150      6E636F64 
 15150      657200
 15151              	.LASF193:
 15152 0c5e 636F756E 		.ascii	"counter_tension_func\000"
 15152      7465725F 
 15152      74656E73 
 15152      696F6E5F 
 15152      66756E63 
 15153              	.LASF322:
 15154 0c73 6379636C 		.ascii	"cycle_time\000"
 15154      655F7469 
 15154      6D6500
 15155              	.LASF214:
 15156 0c7e 66736D5F 		.ascii	"fsm_state\000"
 15156      73746174 
 15156      6500
 15157              	.LASF7:
 15158 0c88 6C6F6E67 		.ascii	"long long unsigned int\000"
 15158      206C6F6E 
 15158      6720756E 
 15158      7369676E 
 15158      65642069 
 15159              	.LASF328:
 15160 0c9f 64657465 		.ascii	"detect_power_cycle\000"
 15160      63745F70 
 15160      6F776572 
 15160      5F637963 
 15160      6C6500
 15161              	.LASF332:
 15162 0cb2 6A6F795F 		.ascii	"joy_UD_status\000"
 15162      55445F73 
 15162      74617475 
 15162      7300
 15163              	.LASF272:
 15164 0cc0 6D6F7469 		.ascii	"motion_status\000"
 15164      6F6E5F73 
 15164      74617475 
 15164      7300
 15165              	.LASF53:
 15166 0cce 6C656E67 		.ascii	"length\000"
 15166      746800
 15167              	.LASF154:
 15168 0cd5 73745F69 		.ascii	"st_imu_data\000"
 15168      6D755F64 
 15168      61746100 
 15169              	.LASF158:
 15170 0ce1 6D61675F 		.ascii	"mag_value\000"
 15170      76616C75 
 15170      6500
 15171              	.LASF41:
 15172 0ceb 6F6E6F66 		.ascii	"onoff\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 333


 15172      6600
 15173              	.LASF237:
 15174 0cf1 746D705F 		.ascii	"tmp_value_encoder_32\000"
 15174      76616C75 
 15174      655F656E 
 15174      636F6465 
 15174      725F3332 
 15175              	.LASF226:
 15176 0d06 70726576 		.ascii	"prev_curr_err\000"
 15176      5F637572 
 15176      725F6572 
 15176      7200
 15177              	.LASF186:
 15178 0d14 64617461 		.ascii	"data_packet_length\000"
 15178      5F706163 
 15178      6B65745F 
 15178      6C656E67 
 15178      746800
 15179              	.LASF359:
 15180 0d27 433A5C55 		.ascii	"C:\\Users\\mgnocco\\OneDrive - Fondazione Istituto "
 15180      73657273 
 15180      5C6D676E 
 15180      6F63636F 
 15180      5C4F6E65 
 15181 0d57 4974616C 		.ascii	"Italiano Tecnologia\\Firmware\\Psoc5\\SoftHandPRO-a"
 15181      69616E6F 
 15181      20546563 
 15181      6E6F6C6F 
 15181      6769615C 
 15182 0d87 6E642D47 		.ascii	"nd-Generic-FW-PSoC5-Master\\Air_Chambers_Haptic_Fee"
 15182      656E6572 
 15182      69632D46 
 15182      572D5053 
 15182      6F43352D 
 15183 0db9 64626163 		.ascii	"dback.cydsn\000"
 15183      6B2E6379 
 15183      64736E00 
 15184              	.LASF77:
 15185 0dc5 6B5F705F 		.ascii	"k_p_c\000"
 15185      6300
 15186              	.LASF323:
 15187 0dcb 6465765F 		.ascii	"dev_tension\000"
 15187      74656E73 
 15187      696F6E00 
 15188              	.LASF88:
 15189 0dd7 6D6F746F 		.ascii	"motor_driver_type\000"
 15189      725F6472 
 15189      69766572 
 15189      5F747970 
 15189      6500
 15190              	.LASF174:
 15191 0de9 57414954 		.ascii	"WAIT_EoC\000"
 15191      5F456F43 
 15191      00
 15192              	.LASF22:
 15193 0df2 72656738 		.ascii	"reg8\000"
 15193      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 334


 15194              	.LASF281:
 15195 0df7 62696E5F 		.ascii	"bin_1\000"
 15195      3100
 15196              	.LASF282:
 15197 0dfd 62696E5F 		.ascii	"bin_2\000"
 15197      3200
 15198              	.LASF253:
 15199 0e03 695F6175 		.ascii	"i_aux\000"
 15199      7800
 15200              	.LASF143:
 15201 0e09 70726F70 		.ascii	"prop_err_fb_gain\000"
 15201      5F657272 
 15201      5F66625F 
 15201      6761696E 
 15201      00
 15202              	.LASF211:
 15203 0e1a 706F735F 		.ascii	"pos_diff\000"
 15203      64696666 
 15203      00
 15204              	.LASF294:
 15205 0e23 726F775F 		.ascii	"row_number\000"
 15205      6E756D62 
 15205      657200
 15206              	.LASF264:
 15207 0e2e 6F766572 		.ascii	"overcurrent_control\000"
 15207      63757272 
 15207      656E745F 
 15207      636F6E74 
 15207      726F6C00 
 15208              	.LASF283:
 15209 0e42 63757272 		.ascii	"curr_pos\000"
 15209      5F706F73 
 15209      00
 15210              	.LASF170:
 15211 0e4b 52455345 		.ascii	"RESET\000"
 15211      5400
 15212              	.LASF138:
 15213 0e51 736C6176 		.ascii	"slave_comm_active\000"
 15213      655F636F 
 15213      6D6D5F61 
 15213      63746976 
 15213      6500
 15214              	.LASF252:
 15215 0e63 616E616C 		.ascii	"analog_read_end\000"
 15215      6F675F72 
 15215      6561645F 
 15215      656E6400 
 15216              	.LASF347:
 15217 0e73 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 15217      636F6465 
 15217      725F4C69 
 15217      6E655F43 
 15217      6F6E6E65 
 15218              	.LASF75:
 15219 0e8c 6465765F 		.ascii	"dev_type\000"
 15219      74797065 
 15219      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 335


 15220              	.LASF271:
 15221 0e95 656D675F 		.ascii	"emg_cycle_status\000"
 15221      6379636C 
 15221      655F7374 
 15221      61747573 
 15221      00
 15222              	.LASF125:
 15223 0ea6 73745F75 		.ascii	"st_user\000"
 15223      73657200 
 15224              	.LASF108:
 15225 0eae 67656172 		.ascii	"gears_params\000"
 15225      735F7061 
 15225      72616D73 
 15225      00
 15226              	.LASF119:
 15227 0ebb 73745F65 		.ascii	"st_expansion\000"
 15227      7870616E 
 15227      73696F6E 
 15227      00
 15228              	.LASF113:
 15229 0ec8 656D675F 		.ascii	"emg_calibration_flag\000"
 15229      63616C69 
 15229      62726174 
 15229      696F6E5F 
 15229      666C6167 
 15230              	.LASF43:
 15231 0edd 73745F6D 		.ascii	"st_meas\000"
 15231      65617300 
 15232              	.LASF296:
 15233 0ee5 61646472 		.ascii	"addr_start\000"
 15233      5F737461 
 15233      727400
 15234              	.LASF300:
 15235 0ef0 70776D5F 		.ascii	"pwm_preload_values\000"
 15235      7072656C 
 15235      6F61645F 
 15235      76616C75 
 15235      657300
 15236              	.LASF135:
 15237 0f03 6A6F7973 		.ascii	"joystick_threshold\000"
 15237      7469636B 
 15237      5F746872 
 15237      6573686F 
 15237      6C6400
 15238              	.LASF32:
 15239 0f16 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 15239      545F4D4F 
 15239      44455F45 
 15239      4D475F50 
 15239      524F504F 
 15240              	.LASF309:
 15241 0f35 675F6662 		.ascii	"g_fb_meas\000"
 15241      5F6D6561 
 15241      7300
 15242              	.LASF181:
 15243 0f3f 636F756E 		.ascii	"counter_status\000"
 15243      7465725F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 336


 15243      73746174 
 15243      757300
 15244              	.LASF311:
 15245 0f4e 675F6D65 		.ascii	"g_mem\000"
 15245      6D00
 15246              	.LASF254:
 15247 0f54 656D675F 		.ascii	"emg_counter_1\000"
 15247      636F756E 
 15247      7465725F 
 15247      3100
 15248              	.LASF255:
 15249 0f62 656D675F 		.ascii	"emg_counter_2\000"
 15249      636F756E 
 15249      7465725F 
 15249      3200
 15250              	.LASF245:
 15251 0f70 6F6E6C79 		.ascii	"only_first_time\000"
 15251      5F666972 
 15251      73745F74 
 15251      696D6500 
 15252              	.LASF11:
 15253 0f80 75696E74 		.ascii	"uint8\000"
 15253      3800
 15254              	.LASF133:
 15255 0f86 73745F4A 		.ascii	"st_JOY_spec\000"
 15255      4F595F73 
 15255      70656300 
 15256              	.LASF240:
 15257 0f92 76616C75 		.ascii	"value_diff\000"
 15257      655F6469 
 15257      666600
 15258              	.LASF285:
 15259 0f9d 63757272 		.ascii	"curr_ref\000"
 15259      5F726566 
 15259      00
 15260              	.LASF2:
 15261 0fa6 73686F72 		.ascii	"short int\000"
 15261      7420696E 
 15261      7400
 15262              	.LASF82:
 15263 0fb0 6B5F645F 		.ascii	"k_d_dl\000"
 15263      646C00
 15264              	.LASF238:
 15265 0fb7 76616C75 		.ascii	"value_encoder\000"
 15265      655F656E 
 15265      636F6465 
 15265      7200
 15266              	.LASF48:
 15267 0fc5 6A6F7973 		.ascii	"joystick\000"
 15267      7469636B 
 15267      00
 15268              	.LASF151:
 15269 0fce 6D6F746F 		.ascii	"motor\000"
 15269      7200
 15270              	.LASF325:
 15271 0fd4 6465765F 		.ascii	"dev_pwm_sat\000"
 15271      70776D5F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 337


 15271      73617400 
 15272              	.LASF68:
 15273 0fe0 68775F6D 		.ascii	"hw_maint_date\000"
 15273      61696E74 
 15273      5F646174 
 15273      6500
 15274              	.LASF198:
 15275 0fee 66756E63 		.ascii	"function_scheduler\000"
 15275      74696F6E 
 15275      5F736368 
 15275      6564756C 
 15275      657200
 15276              	.LASF199:
 15277 1001 636F6D70 		.ascii	"compute_reference\000"
 15277      7574655F 
 15277      72656665 
 15277      72656E63 
 15277      6500
 15278              	.LASF227:
 15279 1013 70726576 		.ascii	"prev_pwm\000"
 15279      5F70776D 
 15279      00
 15280              	.LASF69:
 15281 101c 73746174 		.ascii	"stats_period_begin_date\000"
 15281      735F7065 
 15281      72696F64 
 15281      5F626567 
 15281      696E5F64 
 15282              	.LASF290:
 15283 1034 74696D65 		.ascii	"timer_exc_e\000"
 15283      725F6578 
 15283      635F6500 
 15284              	.LASF301:
 15285 1040 49544D5F 		.ascii	"ITM_RxBuffer\000"
 15285      52784275 
 15285      66666572 
 15285      00
 15286              	.LASF327:
 15287 104d 706F775F 		.ascii	"pow_tension\000"
 15287      74656E73 
 15287      696F6E00 
 15288              	.LASF289:
 15289 1059 74696D65 		.ascii	"timer_exc_s\000"
 15289      725F6578 
 15289      635F7300 
 15290              	.LASF15:
 15291 1065 696E7431 		.ascii	"int16\000"
 15291      3600
 15292              	.LASF121:
 15293 106b 72656164 		.ascii	"read_exp_port_flag\000"
 15293      5F657870 
 15293      5F706F72 
 15293      745F666C 
 15293      616700
 15294              	.LASF276:
 15295 107e 6578635F 		.ascii	"exc_act_thr\000"
 15295      6163745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 338


 15295      74687200 
 15296              	.LASF87:
 15297 108a 61637469 		.ascii	"activate_pwm_rescaling\000"
 15297      76617465 
 15297      5F70776D 
 15297      5F726573 
 15297      63616C69 
 15298              	.LASF80:
 15299 10a1 6B5F705F 		.ascii	"k_p_dl\000"
 15299      646C00
 15300              	.LASF44:
 15301 10a8 65737469 		.ascii	"estim_curr\000"
 15301      6D5F6375 
 15301      727200
 15302              	.LASF324:
 15303 10b3 6465765F 		.ascii	"dev_pwm_limit\000"
 15303      70776D5F 
 15303      6C696D69 
 15303      7400
 15304              	.LASF293:
 15305 10c1 73746174 		.ascii	"status\000"
 15305      757300
 15306              	.LASF219:
 15307 10c8 63757272 		.ascii	"curr_error\000"
 15307      5F657272 
 15307      6F7200
 15308              	.LASF348:
 15309 10d3 456E636F 		.ascii	"Encoder_Value\000"
 15309      6465725F 
 15309      56616C75 
 15309      6500
 15310              	.LASF74:
 15311 10e1 75736572 		.ascii	"user_id\000"
 15311      5F696400 
 15312              	.LASF274:
 15313 10e9 72657374 		.ascii	"rest_cycle_status\000"
 15313      5F637963 
 15313      6C655F73 
 15313      74617475 
 15313      7300
 15314              	.LASF209:
 15315 10fb 636F6D70 		.ascii	"compute_SoftHand_2_motors_joystick_reference\000"
 15315      7574655F 
 15315      536F6674 
 15315      48616E64 
 15315      5F325F6D 
 15316              	.LASF236:
 15317 1128 746D705F 		.ascii	"tmp_value_encoder\000"
 15317      76616C75 
 15317      655F656E 
 15317      636F6465 
 15317      7200
 15318              	.LASF183:
 15319 113a 4953525F 		.ascii	"ISR_CYCLES_Handler\000"
 15319      4359434C 
 15319      45535F48 
 15319      616E646C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 339


 15319      657200
 15320              	.LASF73:
 15321 114d 62617564 		.ascii	"baud_rate\000"
 15321      5F726174 
 15321      6500
 15322              	.LASF146:
 15323 1157 66617374 		.ascii	"fast_act_threshold\000"
 15323      5F616374 
 15323      5F746872 
 15323      6573686F 
 15323      6C6400
 15324              	.LASF117:
 15325 116a 5350495F 		.ascii	"SPI_read_delay\000"
 15325      72656164 
 15325      5F64656C 
 15325      617900
 15326              	.LASF3:
 15327 1179 73686F72 		.ascii	"short unsigned int\000"
 15327      7420756E 
 15327      7369676E 
 15327      65642069 
 15327      6E7400
 15328              	.LASF101:
 15329 118c 73745F65 		.ascii	"st_encoder\000"
 15329      6E636F64 
 15329      657200
 15330              	.LASF307:
 15331 1197 675F6164 		.ascii	"g_adc_meas\000"
 15331      635F6D65 
 15331      617300
 15332              	.LASF141:
 15333 11a2 6D61785F 		.ascii	"max_residual_current\000"
 15333      72657369 
 15333      6475616C 
 15333      5F637572 
 15333      72656E74 
 15334              	.LASF206:
 15335 11b7 454E435F 		.ascii	"ENC_L\000"
 15335      4C00
 15336              	.LASF148:
 15337 11bd 73745F65 		.ascii	"st_eeprom\000"
 15337      6570726F 
 15337      6D00
 15338              	.LASF333:
 15339 11c7 6A6F795F 		.ascii	"joy_LR_status\000"
 15339      4C525F73 
 15339      74617475 
 15339      7300
 15340              	.LASF358:
 15341 11d5 2E2E5C73 		.ascii	"..\\src\\interruptions.c\000"
 15341      72635C69 
 15341      6E746572 
 15341      72757074 
 15341      696F6E73 
 15342              	.LASF202:
 15343 11ec 73745F72 		.ascii	"st_refOld_p\000"
 15343      65664F6C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 340


 15343      645F7000 
 15344              	.LASF16:
 15345 11f8 696E7433 		.ascii	"int32\000"
 15345      3200
 15346              	.LASF344:
 15347 11fe 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 15347      4F465F41 
 15347      4E414C4F 
 15347      475F494E 
 15347      50555453 
 15348              	.LASF76:
 15349 1213 73745F6D 		.ascii	"st_motor\000"
 15349      6F746F72 
 15349      00
 15350              	.LASF356:
 15351 121c 6D617374 		.ascii	"master_mode\000"
 15351      65725F6D 
 15351      6F646500 
 15352              	.LASF39:
 15353 1228 46535F46 		.ascii	"FS_FILE\000"
 15353      494C4500 
 15354              	.LASF89:
 15355 1230 706F735F 		.ascii	"pos_lim_flag\000"
 15355      6C696D5F 
 15355      666C6167 
 15355      00
 15356              	.LASF259:
 15357 123d 4C525F6D 		.ascii	"LR_mean_value\000"
 15357      65616E5F 
 15357      76616C75 
 15357      6500
 15358              	.LASF306:
 15359 124b 675F6D65 		.ascii	"g_measOld\000"
 15359      61734F6C 
 15359      6400
 15360              	.LASF298:
 15361 1255 726F775F 		.ascii	"row_end\000"
 15361      656E6400 
 15362              	.LASF35:
 15363 125d 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 15363      524F4C5F 
 15363      414E474C 
 15363      4500
 15364              	.LASF9:
 15365 126b 5F5F696E 		.ascii	"__int32_t\000"
 15365      7433325F 
 15365      7400
 15366              	.LASF60:
 15367 1275 77697265 		.ascii	"wire_disp\000"
 15367      5F646973 
 15367      7000
 15368              	.LASF338:
 15369 127f 63616E5F 		.ascii	"can_write\000"
 15369      77726974 
 15369      6500
 15370              	.LASF111:
 15371 1289 656D675F 		.ascii	"emg_max_value\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\cceyQ9LE.s 			page 341


 15371      6D61785F 
 15371      76616C75 
 15371      6500
 15372              	.LASF95:
 15373 1297 63757272 		.ascii	"current_limit\000"
 15373      656E745F 
 15373      6C696D69 
 15373      7400
 15374              	.LASF33:
 15375 12a5 53485F69 		.ascii	"SH_input_mode\000"
 15375      6E707574 
 15375      5F6D6F64 
 15375      6500
 15376              	.LASF180:
 15377 12b3 4E4F4E45 		.ascii	"NONE\000"
 15377      00
 15378              	.LASF145:
 15379 12b8 61637469 		.ascii	"activation_mode\000"
 15379      76617469 
 15379      6F6E5F6D 
 15379      6F646500 
 15380              	.LASF12:
 15381 12c8 75696E74 		.ascii	"uint16\000"
 15381      313600
 15382              	.LASF130:
 15383 12cf 72657374 		.ascii	"rest_delay\000"
 15383      5F64656C 
 15383      617900
 15384              	.LASF161:
 15385 12da 73745F66 		.ascii	"st_filter\000"
 15385      696C7465 
 15385      7200
 15386              	.LASF250:
 15387 12e4 76765F76 		.ascii	"vv_value\000"
 15387      616C7565 
 15387      00
 15388              	.LASF85:
 15389 12ed 6B5F645F 		.ascii	"k_d_c_dl\000"
 15389      635F646C 
 15389      00
 15390              	.LASF166:
 15391 12f6 64697265 		.ascii	"direction\000"
 15391      6374696F 
 15391      6E00
 15392              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
